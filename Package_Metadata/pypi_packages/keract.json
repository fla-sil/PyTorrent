{"info": {"author": "Philippe Remy", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# Keract: Keras Activations + Gradients\n\n[![Downloads](https://pepy.tech/badge/keract)](https://pepy.tech/project/keract)\n[![Downloads](https://pepy.tech/badge/keract/month)](https://pepy.tech/project/keract)\n```bash\npip install keract\n```\n*You have just found a (easy) way to get the activations (outputs) and gradients for each layer of your Keras model (LSTM, conv nets...).*\n\n<p align=\"center\">\n  <img src=\"assets/intro.png\">\n</p>\n\n## API\n\n- [get_activations](#get-activations-nodeslayers-outputs-as-numpy-arrays)\n- [display_activations](#display-the-activations-youve-obtained)\n- [display_heatmaps](#display-the-activations-as-a-heatmap-overlaid-on-an-image)\n- [get_gradients_of_trainable_weights](#get-gradients-of-weights)\n- [get_gradients_of_activations](#get-gradients-of-activations)\n- [persist_to_json_file](#persist-activations-to-json)\n- [load_activations_from_json_file](#load-activations-from-json)\n\n### Get activations (nodes/layers outputs as Numpy arrays)\n\n```python\nkeract.get_activations(model, x, layer_name=None, nodes_to_evaluate=None, output_format='simple', auto_compile=True)\n```\n\nFetch activations (nodes/layers outputs as Numpy arrays) for a Keras model and an input X.\nBy default, all the activations for all the layers are returned.\n\n- `model`: Keras compiled model or one of ['vgg16', 'vgg19', 'inception_v3', 'inception_resnet_v2',\n    'mobilenet_v2', 'mobilenetv2', ...].\n- `x`: Numpy array to feed the model as input. In the case of multi-inputs, `x` should be of type List.\n- `layer_name`: (optional) Name of a layer for which activations should be returned.\n- `nodes_to_evaluate`: (optional) List of Keras nodes to be evaluated.\n- `output_format`: Change the output dictionary key of the function.\n   - `simple`: output key will match the names of the Keras layers. For example Dense(1, name='d1') will\n    return {'d1': ...}.\n   - `full`: output key will match the full name of the output layer name. In the example above, it will\n    return {'d1/BiasAdd:0': ...}.\n   - `numbered`: output key will be an index range, based on the order of definition of each layer within the model.\n- `auto_compile`: If set to True, will auto-compile the model if needed.\n\nReturns: Dict {layer_name (specified by output_format) -> activation of the layer output/node (Numpy array)}.\n\n*Example*\n\n```python\nimport numpy as np\nfrom keras import Input, Model\nfrom keras.layers import Dense, concatenate\nfrom keract import get_activations\n\n# model definition\ni1 = Input(shape=(10,), name='i1')\ni2 = Input(shape=(10,), name='i2')\n\na = Dense(1, name='fc1')(i1)\nb = Dense(1, name='fc2')(i2)\n\nc = concatenate([a, b], name='concat')\nd = Dense(1, name='out')(c)\nmodel = Model(inputs=[i1, i2], outputs=[d])\n\n# inputs to the model\nx = [np.random.uniform(size=(32, 10)), np.random.uniform(size=(32, 10))]\n\n# call to fetch the activations of the model.\nactivations = get_activations(model, x, auto_compile=True)\n\n# print the activations shapes.\n[print(k, '->', v.shape, '- Numpy array') for (k, v) in activations.items()]\n\n# Print output:\n# i1 -> (32, 10) - Numpy array\n# i2 -> (32, 10) - Numpy array\n# fc1 -> (32, 1) - Numpy array\n# fc2 -> (32, 1) - Numpy array\n# concat -> (32, 2) - Numpy array\n# out -> (32, 1) - Numpy array\n```\n\n### Display the activations you've obtained\n\n```python\nkeract.display_activations(activations, cmap=None, save=False, directory='.', data_format='channels_last')\n```\n\nPlot the activations for each layer using matplotlib\n\nInputs are:\n- `activations` dict - a dictionary mapping layers to their activations (the output of get_activations)\n- `cmap` (optional) string - a valid matplotlib colormap to be used\n- `save`(optional) a bool, if True the images of the activations are saved rather than being shown\n- `directory`: (optional) string - where to store the activations (if save is True)\n- `data_format`: (optional) tring - one of \"channels_last\" (default) or \"channels_first\".\n\nThe ordering of the dimensions in the inputs. \"channels_last\" corresponds to inputs with shape (batch, steps, channels) (default format for temporal data in Keras) while \"channels_first\" corresponds to inputs with shape (batch, channels, steps).\n\n### Display the activations as a heatmap overlaid on an image\n\n```python\nkeract.display_heatmaps(activations, input_image, save=False)\n```\n\nPlot heatmaps of activations for all filters overlayed on the input image for each layer\n\nInputs are:\n- `activations`: a dictionary mapping layers to their activations (the output of get_activations).\n- `input_image`:  numpy array of the image you inputed to the get_activations.\n- `save`(optional) bool - if True the images of the activations are saved rather than being shown.\n- `fix`: (optional) bool - if automated checks and fixes for incorrect images should be run.\n- `directory`: string - where to store the activations (if save is True).\n\n### Get gradients of weights\n\n```python\nkeract.get_gradients_of_trainable_weights(model, x, y)\n```\n\n- `model` is a `keras.models.Model` object.\n- `x`: Numpy array to feed the model as input. In the case of multi-inputs, `x` should be of type List.\n- `y`: Labels (numpy array). Keras convention.\n\nThe output is a dictionary mapping each trainable weight to the values of its gradients (regarding x and y).\n\n### Get gradients of activations\n\n```python\nkeract.get_gradients_of_activations(model, x, y, layer_name=None, output_format='simple')\n```\n\n- `model` is a `keras.models.Model` object.\n- `x`: Numpy array to feed the model as input. In the case of multi-inputs, `x` should be of type List.\n- `y`: Labels (numpy array). Keras convention.\n- `layer_name`: (optional) Name of a layer for which activations should be returned.\n- `output_format`: Change the output dictionary key of the function.\n   - `simple`: output key will match the names of the Keras layers. For example Dense(1, name='d1') will\n    return {'d1': ...}.\n   - `full`: output key will match the full name of the output layer name. In the example above, it will\n    return {'d1/BiasAdd:0': ...}.\n   - `numbered`: output key will be an index range, based on the order of definition of each layer within the model.\n\nReturns: Dict {layer_name (specified by output_format) -> grad activation of the layer output/node (Numpy array)}.\n\nThe output is a dictionary mapping each layer to the values of its gradients (regarding x and y).\n\n### Persist activations to JSON\n\n```python\nkeract.persist_to_json_file(activations, filename)\n```\n\n- `activations`: activations (dict mapping layers)\n- `filename`: output filename (JSON format)\n\n### Load activations from JSON\n\n```python\nkeract.load_activations_from_json_file(filename)\n```\n\n- `filename`: filename to read the activations from (JSON format)\n\nIt returns the activations.\n\n## Examples\n\nExamples are provided for:\n- `keras.models.Sequential` - mnist.py\n- `keras.models.Model` - multi_inputs.py\n- Recurrent networks - recurrent.py\n\nIn the case of MNIST with LeNet, we are able to fetch the activations for a batch of size 128:\n\n```\nconv2d_1/Relu:0\n(128, 26, 26, 32)\n\nconv2d_2/Relu:0\n(128, 24, 24, 64)\n\nmax_pooling2d_1/MaxPool:0\n(128, 12, 12, 64)\n\ndropout_1/cond/Merge:0\n(128, 12, 12, 64)\n\nflatten_1/Reshape:0\n(128, 9216)\n\ndense_1/Relu:0\n(128, 128)\n\ndropout_2/cond/Merge:0\n(128, 128)\n\ndense_2/Softmax:0\n(128, 10)\n```\n\nWe can visualise the activations. Here's another example using VGG16:\n\n```\ncd examples\npip install -r examples-requirements.txt\npython vgg16.py\n```\n\n<p align=\"center\">\n  <img src=\"assets/cat.jpg\">\n  <br><i>A cat.</i>\n</p>\n\n\n<p align=\"center\">\n  <img src=\"assets/cat_activations.png\" width=\"600\">\n  <br><i>Outputs of the first convolutional layer of VGG16.</i>\n</p>\n\nAlso, we can visualise the heatmaps of the activations:\n\n```\ncd examples\npip install -r examples-requirements.txt\npython heat_map.py\n```\n\n<p align=\"center\">\n  <img src=\"assets/heatmap.png\">\n</p>\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "keract", "package_url": "https://pypi.org/project/keract/", "platform": "", "project_url": "https://pypi.org/project/keract/", "project_urls": null, "release_url": "https://pypi.org/project/keract/3.1.0/", "requires_dist": ["numpy (>=1.16.2)"], "requires_python": "", "summary": "Keract - Tensorflow Keras Activations and Gradients", "version": "3.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Keract: Keras Activations + Gradients</h1>\n<p><a href=\"https://pepy.tech/project/keract\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f174b3d1b91e7ab127bf834d9c01ecd9bf6fe1c0/68747470733a2f2f706570792e746563682f62616467652f6b6572616374\"></a>\n<a href=\"https://pepy.tech/project/keract\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f399f619639a5e2e6536c089e7f5f35d1394fcea/68747470733a2f2f706570792e746563682f62616467652f6b65726163742f6d6f6e7468\"></a></p>\n<pre>pip install keract\n</pre>\n<p><em>You have just found a (easy) way to get the activations (outputs) and gradients for each layer of your Keras model (LSTM, conv nets...).</em></p>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8db92c300eb723e814bd5eae16faef0f3fd17938/6173736574732f696e74726f2e706e67\">\n</p>\n<h2>API</h2>\n<ul>\n<li><a href=\"#get-activations-nodeslayers-outputs-as-numpy-arrays\" rel=\"nofollow\">get_activations</a></li>\n<li><a href=\"#display-the-activations-youve-obtained\" rel=\"nofollow\">display_activations</a></li>\n<li><a href=\"#display-the-activations-as-a-heatmap-overlaid-on-an-image\" rel=\"nofollow\">display_heatmaps</a></li>\n<li><a href=\"#get-gradients-of-weights\" rel=\"nofollow\">get_gradients_of_trainable_weights</a></li>\n<li><a href=\"#get-gradients-of-activations\" rel=\"nofollow\">get_gradients_of_activations</a></li>\n<li><a href=\"#persist-activations-to-json\" rel=\"nofollow\">persist_to_json_file</a></li>\n<li><a href=\"#load-activations-from-json\" rel=\"nofollow\">load_activations_from_json_file</a></li>\n</ul>\n<h3>Get activations (nodes/layers outputs as Numpy arrays)</h3>\n<pre><span class=\"n\">keract</span><span class=\"o\">.</span><span class=\"n\">get_activations</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">nodes_to_evaluate</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">output_format</span><span class=\"o\">=</span><span class=\"s1\">'simple'</span><span class=\"p\">,</span> <span class=\"n\">auto_compile</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Fetch activations (nodes/layers outputs as Numpy arrays) for a Keras model and an input X.\nBy default, all the activations for all the layers are returned.</p>\n<ul>\n<li><code>model</code>: Keras compiled model or one of ['vgg16', 'vgg19', 'inception_v3', 'inception_resnet_v2',\n'mobilenet_v2', 'mobilenetv2', ...].</li>\n<li><code>x</code>: Numpy array to feed the model as input. In the case of multi-inputs, <code>x</code> should be of type List.</li>\n<li><code>layer_name</code>: (optional) Name of a layer for which activations should be returned.</li>\n<li><code>nodes_to_evaluate</code>: (optional) List of Keras nodes to be evaluated.</li>\n<li><code>output_format</code>: Change the output dictionary key of the function.\n<ul>\n<li><code>simple</code>: output key will match the names of the Keras layers. For example Dense(1, name='d1') will\nreturn {'d1': ...}.</li>\n<li><code>full</code>: output key will match the full name of the output layer name. In the example above, it will\nreturn {'d1/BiasAdd:0': ...}.</li>\n<li><code>numbered</code>: output key will be an index range, based on the order of definition of each layer within the model.</li>\n</ul>\n</li>\n<li><code>auto_compile</code>: If set to True, will auto-compile the model if needed.</li>\n</ul>\n<p>Returns: Dict {layer_name (specified by output_format) -&gt; activation of the layer output/node (Numpy array)}.</p>\n<p><em>Example</em></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras</span> <span class=\"kn\">import</span> <span class=\"n\">Input</span><span class=\"p\">,</span> <span class=\"n\">Model</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras.layers</span> <span class=\"kn\">import</span> <span class=\"n\">Dense</span><span class=\"p\">,</span> <span class=\"n\">concatenate</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keract</span> <span class=\"kn\">import</span> <span class=\"n\">get_activations</span>\n\n<span class=\"c1\"># model definition</span>\n<span class=\"n\">i1</span> <span class=\"o\">=</span> <span class=\"n\">Input</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'i1'</span><span class=\"p\">)</span>\n<span class=\"n\">i2</span> <span class=\"o\">=</span> <span class=\"n\">Input</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'i2'</span><span class=\"p\">)</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'fc1'</span><span class=\"p\">)(</span><span class=\"n\">i1</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'fc2'</span><span class=\"p\">)(</span><span class=\"n\">i2</span><span class=\"p\">)</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">concatenate</span><span class=\"p\">([</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">],</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'concat'</span><span class=\"p\">)</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'out'</span><span class=\"p\">)(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">i1</span><span class=\"p\">,</span> <span class=\"n\">i2</span><span class=\"p\">],</span> <span class=\"n\">outputs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">d</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># inputs to the model</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">uniform</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">uniform</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))]</span>\n\n<span class=\"c1\"># call to fetch the activations of the model.</span>\n<span class=\"n\">activations</span> <span class=\"o\">=</span> <span class=\"n\">get_activations</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">auto_compile</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># print the activations shapes.</span>\n<span class=\"p\">[</span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"s1\">'-&gt;'</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"s1\">'- Numpy array'</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">activations</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()]</span>\n\n<span class=\"c1\"># Print output:</span>\n<span class=\"c1\"># i1 -&gt; (32, 10) - Numpy array</span>\n<span class=\"c1\"># i2 -&gt; (32, 10) - Numpy array</span>\n<span class=\"c1\"># fc1 -&gt; (32, 1) - Numpy array</span>\n<span class=\"c1\"># fc2 -&gt; (32, 1) - Numpy array</span>\n<span class=\"c1\"># concat -&gt; (32, 2) - Numpy array</span>\n<span class=\"c1\"># out -&gt; (32, 1) - Numpy array</span>\n</pre>\n<h3>Display the activations you've obtained</h3>\n<pre><span class=\"n\">keract</span><span class=\"o\">.</span><span class=\"n\">display_activations</span><span class=\"p\">(</span><span class=\"n\">activations</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">save</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">directory</span><span class=\"o\">=</span><span class=\"s1\">'.'</span><span class=\"p\">,</span> <span class=\"n\">data_format</span><span class=\"o\">=</span><span class=\"s1\">'channels_last'</span><span class=\"p\">)</span>\n</pre>\n<p>Plot the activations for each layer using matplotlib</p>\n<p>Inputs are:</p>\n<ul>\n<li><code>activations</code> dict - a dictionary mapping layers to their activations (the output of get_activations)</li>\n<li><code>cmap</code> (optional) string - a valid matplotlib colormap to be used</li>\n<li><code>save</code>(optional) a bool, if True the images of the activations are saved rather than being shown</li>\n<li><code>directory</code>: (optional) string - where to store the activations (if save is True)</li>\n<li><code>data_format</code>: (optional) tring - one of \"channels_last\" (default) or \"channels_first\".</li>\n</ul>\n<p>The ordering of the dimensions in the inputs. \"channels_last\" corresponds to inputs with shape (batch, steps, channels) (default format for temporal data in Keras) while \"channels_first\" corresponds to inputs with shape (batch, channels, steps).</p>\n<h3>Display the activations as a heatmap overlaid on an image</h3>\n<pre><span class=\"n\">keract</span><span class=\"o\">.</span><span class=\"n\">display_heatmaps</span><span class=\"p\">(</span><span class=\"n\">activations</span><span class=\"p\">,</span> <span class=\"n\">input_image</span><span class=\"p\">,</span> <span class=\"n\">save</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Plot heatmaps of activations for all filters overlayed on the input image for each layer</p>\n<p>Inputs are:</p>\n<ul>\n<li><code>activations</code>: a dictionary mapping layers to their activations (the output of get_activations).</li>\n<li><code>input_image</code>:  numpy array of the image you inputed to the get_activations.</li>\n<li><code>save</code>(optional) bool - if True the images of the activations are saved rather than being shown.</li>\n<li><code>fix</code>: (optional) bool - if automated checks and fixes for incorrect images should be run.</li>\n<li><code>directory</code>: string - where to store the activations (if save is True).</li>\n</ul>\n<h3>Get gradients of weights</h3>\n<pre><span class=\"n\">keract</span><span class=\"o\">.</span><span class=\"n\">get_gradients_of_trainable_weights</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><code>model</code> is a <code>keras.models.Model</code> object.</li>\n<li><code>x</code>: Numpy array to feed the model as input. In the case of multi-inputs, <code>x</code> should be of type List.</li>\n<li><code>y</code>: Labels (numpy array). Keras convention.</li>\n</ul>\n<p>The output is a dictionary mapping each trainable weight to the values of its gradients (regarding x and y).</p>\n<h3>Get gradients of activations</h3>\n<pre><span class=\"n\">keract</span><span class=\"o\">.</span><span class=\"n\">get_gradients_of_activations</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">output_format</span><span class=\"o\">=</span><span class=\"s1\">'simple'</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><code>model</code> is a <code>keras.models.Model</code> object.</li>\n<li><code>x</code>: Numpy array to feed the model as input. In the case of multi-inputs, <code>x</code> should be of type List.</li>\n<li><code>y</code>: Labels (numpy array). Keras convention.</li>\n<li><code>layer_name</code>: (optional) Name of a layer for which activations should be returned.</li>\n<li><code>output_format</code>: Change the output dictionary key of the function.\n<ul>\n<li><code>simple</code>: output key will match the names of the Keras layers. For example Dense(1, name='d1') will\nreturn {'d1': ...}.</li>\n<li><code>full</code>: output key will match the full name of the output layer name. In the example above, it will\nreturn {'d1/BiasAdd:0': ...}.</li>\n<li><code>numbered</code>: output key will be an index range, based on the order of definition of each layer within the model.</li>\n</ul>\n</li>\n</ul>\n<p>Returns: Dict {layer_name (specified by output_format) -&gt; grad activation of the layer output/node (Numpy array)}.</p>\n<p>The output is a dictionary mapping each layer to the values of its gradients (regarding x and y).</p>\n<h3>Persist activations to JSON</h3>\n<pre><span class=\"n\">keract</span><span class=\"o\">.</span><span class=\"n\">persist_to_json_file</span><span class=\"p\">(</span><span class=\"n\">activations</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><code>activations</code>: activations (dict mapping layers)</li>\n<li><code>filename</code>: output filename (JSON format)</li>\n</ul>\n<h3>Load activations from JSON</h3>\n<pre><span class=\"n\">keract</span><span class=\"o\">.</span><span class=\"n\">load_activations_from_json_file</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><code>filename</code>: filename to read the activations from (JSON format)</li>\n</ul>\n<p>It returns the activations.</p>\n<h2>Examples</h2>\n<p>Examples are provided for:</p>\n<ul>\n<li><code>keras.models.Sequential</code> - mnist.py</li>\n<li><code>keras.models.Model</code> - multi_inputs.py</li>\n<li>Recurrent networks - recurrent.py</li>\n</ul>\n<p>In the case of MNIST with LeNet, we are able to fetch the activations for a batch of size 128:</p>\n<pre><code>conv2d_1/Relu:0\n(128, 26, 26, 32)\n\nconv2d_2/Relu:0\n(128, 24, 24, 64)\n\nmax_pooling2d_1/MaxPool:0\n(128, 12, 12, 64)\n\ndropout_1/cond/Merge:0\n(128, 12, 12, 64)\n\nflatten_1/Reshape:0\n(128, 9216)\n\ndense_1/Relu:0\n(128, 128)\n\ndropout_2/cond/Merge:0\n(128, 128)\n\ndense_2/Softmax:0\n(128, 10)\n</code></pre>\n<p>We can visualise the activations. Here's another example using VGG16:</p>\n<pre><code>cd examples\npip install -r examples-requirements.txt\npython vgg16.py\n</code></pre>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/39c2f0e02e81e64abb2c37af88c15624f19848e3/6173736574732f6361742e6a7067\">\n  <br><i>A cat.</i>\n</p>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ebf8e66ebe00e6a2ff1d8738aa655b1a182df38e/6173736574732f6361745f61637469766174696f6e732e706e67\" width=\"600\">\n  <br><i>Outputs of the first convolutional layer of VGG16.</i>\n</p>\n<p>Also, we can visualise the heatmaps of the activations:</p>\n<pre><code>cd examples\npip install -r examples-requirements.txt\npython heat_map.py\n</code></pre>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7090bb8407a950c9bb32df958ed8c11a9399811/6173736574732f686561746d61702e706e67\">\n</p>\n\n          </div>"}, "last_serial": 6900509, "releases": {"1.1.1": [{"comment_text": "", "digests": {"md5": "5adc63191b99060967479c595ef54651", "sha256": "fff7005356e1b345492936ae90223131ed7a01ebc64a874b6aac065bfe84ae64"}, "downloads": -1, "filename": "keract-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5adc63191b99060967479c595ef54651", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7611, "upload_time": "2018-10-05T11:41:35", "upload_time_iso_8601": "2018-10-05T11:41:35.748115Z", "url": "https://files.pythonhosted.org/packages/96/a2/db19dfdf3db82f92dda6870819a417622da2ffcf713c40ba768d01895ab2/keract-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27a38121c63eee3c7e9a97287ebb9425", "sha256": "b5b4f6641ac120e0e10cd20e6609ec380180dbc1fade58d164bae32f16b54dde"}, "downloads": -1, "filename": "keract-1.1.1.tar.gz", "has_sig": false, "md5_digest": "27a38121c63eee3c7e9a97287ebb9425", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3211, "upload_time": "2018-10-05T11:41:37", "upload_time_iso_8601": "2018-10-05T11:41:37.398362Z", "url": "https://files.pythonhosted.org/packages/f3/6f/2099d014c86afb9f43148e4b349918331f2c4f419e80d6831b9932f573df/keract-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "ae2ef1d828534fccce4f46e81cd1b8a0", "sha256": "bad97d36b4e826d48d88ae68794d30cb6bf5e08628d782140dea476753b46b79"}, "downloads": -1, "filename": "keract-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ae2ef1d828534fccce4f46e81cd1b8a0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7353, "upload_time": "2018-10-05T15:43:49", "upload_time_iso_8601": "2018-10-05T15:43:49.657835Z", "url": "https://files.pythonhosted.org/packages/85/70/012ab03c6d380d7bfaf32a03c0cb3a86bb1eca0aaa4350dc8a1bfba2b63a/keract-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df4de091767c4249337be8a31f0319df", "sha256": "73999638b1478de19738039cf9bfe573265e6d39c77187cccbac02cd94544685"}, "downloads": -1, "filename": "keract-1.1.2.tar.gz", "has_sig": false, "md5_digest": "df4de091767c4249337be8a31f0319df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2970, "upload_time": "2018-10-05T15:43:51", "upload_time_iso_8601": "2018-10-05T15:43:51.054001Z", "url": "https://files.pythonhosted.org/packages/be/33/f9ae6e91a3bebe98493e3bcdcb19897dc81951262c262ba9105f919792ec/keract-1.1.2.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "75825e2b8b92ea6b8c6ff2355a7d45a2", "sha256": "7579ed06467a2443ce8b85e88e9c67584c1991ea9de7e61034eb6d69677370cd"}, "downloads": -1, "filename": "keract-2.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "75825e2b8b92ea6b8c6ff2355a7d45a2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7710, "upload_time": "2019-01-04T05:09:52", "upload_time_iso_8601": "2019-01-04T05:09:52.643805Z", "url": "https://files.pythonhosted.org/packages/51/59/275a98570b5446dded5fe4cbf38204c9485777b13ffc78d156e871de7fc7/keract-2.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "162b4ebd69cb3e3ee116749e57d0bd39", "sha256": "fc960c5877401968b4e25b4c58c246c334fc4fb488932feff3ff48f597527ac7"}, "downloads": -1, "filename": "keract-2.1.1.tar.gz", "has_sig": false, "md5_digest": "162b4ebd69cb3e3ee116749e57d0bd39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3371, "upload_time": "2019-01-04T05:09:54", "upload_time_iso_8601": "2019-01-04T05:09:54.316431Z", "url": "https://files.pythonhosted.org/packages/87/ee/5eadc338ca9ccde36321ef8f22a4287d601bbf367e93d3cc2abc97a39f9f/keract-2.1.1.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "83451183740b02723d0447044873d97d", "sha256": "6015f669722256c5875dbb760f5431e076df1cb80adf74be3d92509d4c116953"}, "downloads": -1, "filename": "keract-2.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "83451183740b02723d0447044873d97d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5259, "upload_time": "2019-02-04T06:16:51", "upload_time_iso_8601": "2019-02-04T06:16:51.006233Z", "url": "https://files.pythonhosted.org/packages/b1/91/8e47342844f204c88bc710f552b7289035cb9f135f7943e0cbc910592837/keract-2.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da579e10ffc73e566e4b6bc2019d4f34", "sha256": "9878f2682a3b5dbf3050f338ece05dc103854c75247857af32d04919534b9d75"}, "downloads": -1, "filename": "keract-2.2.1.tar.gz", "has_sig": false, "md5_digest": "da579e10ffc73e566e4b6bc2019d4f34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3256, "upload_time": "2019-02-04T06:16:52", "upload_time_iso_8601": "2019-02-04T06:16:52.869153Z", "url": "https://files.pythonhosted.org/packages/2f/cb/1cac4942db0afc7a5bdfe0d7d6bd512c3b7e354f1c021f544d34ab179edc/keract-2.2.1.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "014b04f714b32e360bfbde8595dc1991", "sha256": "d720c90d4f6ad764b41d0b64c02a0be17d02ba4215ec6aecd9b8ef709e60edd2"}, "downloads": -1, "filename": "keract-2.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "014b04f714b32e360bfbde8595dc1991", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7961, "upload_time": "2019-02-25T16:10:27", "upload_time_iso_8601": "2019-02-25T16:10:27.890306Z", "url": "https://files.pythonhosted.org/packages/ab/fe/9a341261abac15c129dea33b10c3990df72691c0af30e70a63f1fc9e26bd/keract-2.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d7b5ec694768c838c3079da29a4e2fb", "sha256": "62683823abaad868202a7a33ac7ef809733f0bec100346a93da0ddaf49f3855d"}, "downloads": -1, "filename": "keract-2.3.0.tar.gz", "has_sig": false, "md5_digest": "4d7b5ec694768c838c3079da29a4e2fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3609, "upload_time": "2019-02-25T16:10:29", "upload_time_iso_8601": "2019-02-25T16:10:29.515410Z", "url": "https://files.pythonhosted.org/packages/e4/75/4078e87f39ba8111b5f1015591ffd0d17b85ef45fc4f66cf080f51723924/keract-2.3.0.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "a02b9d670d6a901372124ba9dce3edd4", "sha256": "fb1f370302c6d9621b7b599cb725ad44f0c8c0d1375336ac36c14c49d6b66bb6"}, "downloads": -1, "filename": "keract-2.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a02b9d670d6a901372124ba9dce3edd4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5102, "upload_time": "2019-03-12T02:05:42", "upload_time_iso_8601": "2019-03-12T02:05:42.765475Z", "url": "https://files.pythonhosted.org/packages/33/26/f2c5ebbad38a0dc061ea67099d61831002c036ef02595fbaa0c53eb7ac25/keract-2.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eddd9857f8af720d63073632e770c869", "sha256": "11967bb6d2b5d853e85474bbd4ac2dc56ab21b948d5cccaa87300170856fbde5"}, "downloads": -1, "filename": "keract-2.4.0.tar.gz", "has_sig": false, "md5_digest": "eddd9857f8af720d63073632e770c869", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4074, "upload_time": "2019-03-12T02:05:44", "upload_time_iso_8601": "2019-03-12T02:05:44.371789Z", "url": "https://files.pythonhosted.org/packages/64/7d/1944f81039728c9dc22d28ee9fae0e1044fe6da74c77fb8bab5cb099dc13/keract-2.4.0.tar.gz", "yanked": false}], "2.5.0": [{"comment_text": "", "digests": {"md5": "a45356906f584960d8381ca9bb78a9c0", "sha256": "a295b7271599fb7e21ddcb07eb3e71ff549a0bac8426efe78d88ee93812ca6ad"}, "downloads": -1, "filename": "keract-2.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a45356906f584960d8381ca9bb78a9c0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5204, "upload_time": "2019-03-18T04:47:19", "upload_time_iso_8601": "2019-03-18T04:47:19.588123Z", "url": "https://files.pythonhosted.org/packages/62/4b/1c325b8121faa7452c63de8bb3ea54cebafa6062cdbdd52b425101ede627/keract-2.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e182388a9f603e97cbf6676d223f65d4", "sha256": "bff3ad9b9fa57281b1b7f6e426f0e6e0108d458e1113966c2555611b767c7958"}, "downloads": -1, "filename": "keract-2.5.0.tar.gz", "has_sig": false, "md5_digest": "e182388a9f603e97cbf6676d223f65d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4252, "upload_time": "2019-03-18T04:47:21", "upload_time_iso_8601": "2019-03-18T04:47:21.027665Z", "url": "https://files.pythonhosted.org/packages/54/64/656c72c299eb8a84b9d990c3cf736985c79943bb5944e8a52a74c832ee15/keract-2.5.0.tar.gz", "yanked": false}], "2.5.1": [{"comment_text": "", "digests": {"md5": "638c11e10e781d2dfbd479f17ef75a5c", "sha256": "18bf30414f7543c299100fa7375c57c6732188188a0aedabcb57abe93a154823"}, "downloads": -1, "filename": "keract-2.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "638c11e10e781d2dfbd479f17ef75a5c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5870, "upload_time": "2019-03-21T00:24:26", "upload_time_iso_8601": "2019-03-21T00:24:26.822157Z", "url": "https://files.pythonhosted.org/packages/db/16/e416baeae2987a6c0e5d5d313c9447e92bb0199af5aa3533750d3717f55f/keract-2.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18ccecc692598e8af212471572203329", "sha256": "bcd62373b4623fefa319c36dabac9978776786ee5c55429bb4aecf6aa207868e"}, "downloads": -1, "filename": "keract-2.5.1.tar.gz", "has_sig": false, "md5_digest": "18ccecc692598e8af212471572203329", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4879, "upload_time": "2019-03-21T00:24:28", "upload_time_iso_8601": "2019-03-21T00:24:28.322103Z", "url": "https://files.pythonhosted.org/packages/cb/01/6ff87eea59756a8e4703c3444df886bc250056a0d898439dfebeb6dd36c2/keract-2.5.1.tar.gz", "yanked": false}], "2.5.2": [{"comment_text": "", "digests": {"md5": "67be9d46a5a3e0cf7ce14c0f13b0146e", "sha256": "431af440196080e8c81f5c5963bccaf0db92791485cce5f9d8f28b39db614bde"}, "downloads": -1, "filename": "keract-2.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67be9d46a5a3e0cf7ce14c0f13b0146e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5950, "upload_time": "2019-04-16T00:53:27", "upload_time_iso_8601": "2019-04-16T00:53:27.486087Z", "url": "https://files.pythonhosted.org/packages/4b/c1/2e195ed3b703b07b6745b81015aae9a69484eb5bc9d20412be81bed2093e/keract-2.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5768e00a2c521fa8c25221ddcb3b6086", "sha256": "223d942abacdb1d4ae75f465db1db151c27c3a3a8d8d43443ea7f4800bbcd387"}, "downloads": -1, "filename": "keract-2.5.2.tar.gz", "has_sig": false, "md5_digest": "5768e00a2c521fa8c25221ddcb3b6086", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4965, "upload_time": "2019-04-16T00:53:30", "upload_time_iso_8601": "2019-04-16T00:53:30.314794Z", "url": "https://files.pythonhosted.org/packages/49/fc/198d6995fa664bf95afa6966eb31cf0c3357481e507680802e0ce23711b4/keract-2.5.2.tar.gz", "yanked": false}], "2.5.3": [{"comment_text": "", "digests": {"md5": "786231a7f22b5d7791432260b000ed47", "sha256": "5bffcfd6d0652417197b1ac752ae30a7dd12e79b7179c4f2e0bfe2a43749fe9f"}, "downloads": -1, "filename": "keract-2.5.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "786231a7f22b5d7791432260b000ed47", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5944, "upload_time": "2019-04-16T07:01:08", "upload_time_iso_8601": "2019-04-16T07:01:08.513754Z", "url": "https://files.pythonhosted.org/packages/6c/4b/e0e9026449a83997fbb0a1807b3a1fca711aed12e0a215e3132b7138048a/keract-2.5.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10d613396b1632f9a44b0806f56c2ea8", "sha256": "a0d4eeb4956b8b1b7018e5cd2e79ccec4ef10b587645352c03d56f83dadd620c"}, "downloads": -1, "filename": "keract-2.5.3.tar.gz", "has_sig": false, "md5_digest": "10d613396b1632f9a44b0806f56c2ea8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4960, "upload_time": "2019-04-16T07:01:11", "upload_time_iso_8601": "2019-04-16T07:01:11.697605Z", "url": "https://files.pythonhosted.org/packages/7e/c1/63b7f6ae30384f415834a95bc8f463b8d2adbe5c8475d8aa6894d5dc7478/keract-2.5.3.tar.gz", "yanked": false}], "2.5.4": [{"comment_text": "", "digests": {"md5": "538bfa604d81d6642e96fa6822f6dfe4", "sha256": "6c8fc7c74fc37a8ec0626fd6d85a93b692699e0f40b418df2dcf544b4f66257c"}, "downloads": -1, "filename": "keract-2.5.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "538bfa604d81d6642e96fa6822f6dfe4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5948, "upload_time": "2019-04-17T07:38:03", "upload_time_iso_8601": "2019-04-17T07:38:03.227917Z", "url": "https://files.pythonhosted.org/packages/0a/48/abf19d8831357d87266aba859e9f82fc253c77a710b9bc58fc9685949752/keract-2.5.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eacebf6094d94ed8b164d5fc39fbd505", "sha256": "94374240ec4b7c635ecf4301c577c2baa9da7b3dd748bb7cc8f3b3538e14df97"}, "downloads": -1, "filename": "keract-2.5.4.tar.gz", "has_sig": false, "md5_digest": "eacebf6094d94ed8b164d5fc39fbd505", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4963, "upload_time": "2019-04-17T07:38:05", "upload_time_iso_8601": "2019-04-17T07:38:05.718715Z", "url": "https://files.pythonhosted.org/packages/b9/1d/285905f545b149bdc60f4f9318cb7c94128a5a0bf92a80738f9dfe7bccc4/keract-2.5.4.tar.gz", "yanked": false}], "2.5.5": [{"comment_text": "", "digests": {"md5": "54cdecdc26bb1a0c3c0b7bd3b2ef78bb", "sha256": "2906cbf96a8f2f79b1bde54245a27e44b3f2ff431057947ae87712acc10ad534"}, "downloads": -1, "filename": "keract-2.5.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "54cdecdc26bb1a0c3c0b7bd3b2ef78bb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5974, "upload_time": "2019-05-27T05:21:19", "upload_time_iso_8601": "2019-05-27T05:21:19.251805Z", "url": "https://files.pythonhosted.org/packages/97/4b/ca103c5eb4c5d4e7adfe1a28cfc9eeb976e03da1f8fe2133b24715e6b388/keract-2.5.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abaf7667c6886fa5ab4e43bb03831565", "sha256": "239990fab28fd90cb1f05d175a7e1b1407026b2a31d0fbbc93fe4ddf49bf2fb6"}, "downloads": -1, "filename": "keract-2.5.5.tar.gz", "has_sig": false, "md5_digest": "abaf7667c6886fa5ab4e43bb03831565", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5000, "upload_time": "2019-05-27T05:21:21", "upload_time_iso_8601": "2019-05-27T05:21:21.039871Z", "url": "https://files.pythonhosted.org/packages/16/1c/62973efe881a6db345e750bcd296a7d2401b58b2853c5421570debb44479/keract-2.5.5.tar.gz", "yanked": false}], "2.5.6": [{"comment_text": "", "digests": {"md5": "fb4c75ffa095f4ed316415a7e8c25034", "sha256": "2f9f0272e863a169392faf5c87e09d9755f441b0f1739d011c0084865b9e0219"}, "downloads": -1, "filename": "keract-2.5.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb4c75ffa095f4ed316415a7e8c25034", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6298, "upload_time": "2019-05-31T02:14:00", "upload_time_iso_8601": "2019-05-31T02:14:00.933130Z", "url": "https://files.pythonhosted.org/packages/5d/a3/2b51c4b5ee8a94f4cdc6cd7efff0b49e57f4c2a790e50f6aeb4267731329/keract-2.5.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07f5f8530237f87a77d47be502e6a8cd", "sha256": "1d115ffef1e1904930fcda87806f3624fafacc05536bc68e916946eab003647c"}, "downloads": -1, "filename": "keract-2.5.6.tar.gz", "has_sig": false, "md5_digest": "07f5f8530237f87a77d47be502e6a8cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5325, "upload_time": "2019-05-31T02:14:02", "upload_time_iso_8601": "2019-05-31T02:14:02.824981Z", "url": "https://files.pythonhosted.org/packages/ef/e6/35552fd556b04c8802d1c1fc7f7b14758c3376b5af94cfc0c6d48134ff2a/keract-2.5.6.tar.gz", "yanked": false}], "2.6.1": [{"comment_text": "", "digests": {"md5": "276e80114e81c47e9a6f23456522a39d", "sha256": "c998caf7a9f3de75679e1123428d1ac8411814636ca2d1ea5fabe065b28d6825"}, "downloads": -1, "filename": "keract-2.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "276e80114e81c47e9a6f23456522a39d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6481, "upload_time": "2019-07-04T00:42:40", "upload_time_iso_8601": "2019-07-04T00:42:40.930601Z", "url": "https://files.pythonhosted.org/packages/1d/23/3d6c6362272574b6a8ea31175bd5643b34f1ac520f770ac27ea7276a5b3c/keract-2.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79edd8563c88890cf37a2f280bf69c34", "sha256": "bfbf71591d4889c8735f1803ce3be94a6a5511d1a4d83d321dc0e6432e9f9b50"}, "downloads": -1, "filename": "keract-2.6.1.tar.gz", "has_sig": false, "md5_digest": "79edd8563c88890cf37a2f280bf69c34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5497, "upload_time": "2019-07-04T00:42:42", "upload_time_iso_8601": "2019-07-04T00:42:42.710782Z", "url": "https://files.pythonhosted.org/packages/93/f7/7ddc0f4a01eba25222305d25cf829b5978753681a385679139baec3d74c2/keract-2.6.1.tar.gz", "yanked": false}], "2.6.2": [{"comment_text": "", "digests": {"md5": "9cf1078e8d99c69fc514888dbed48183", "sha256": "a1bc461ec4d6ca54c36e84dbada9fc1e38aa2e7aa9d2263cc572ccc8ab57002b"}, "downloads": -1, "filename": "keract-2.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9cf1078e8d99c69fc514888dbed48183", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6601, "upload_time": "2019-07-22T07:57:56", "upload_time_iso_8601": "2019-07-22T07:57:56.978372Z", "url": "https://files.pythonhosted.org/packages/28/0d/73750585db779643331c2fc5c10f85377068857e036a8dd629ca64ac1ff7/keract-2.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b6637d199ceb76c4f935e3e1d28b000", "sha256": "feb8e75f90352c92be919491ef392247742d434e2baa5ddbda40ecefed947044"}, "downloads": -1, "filename": "keract-2.6.2.tar.gz", "has_sig": false, "md5_digest": "2b6637d199ceb76c4f935e3e1d28b000", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5612, "upload_time": "2019-07-22T07:57:59", "upload_time_iso_8601": "2019-07-22T07:57:59.007075Z", "url": "https://files.pythonhosted.org/packages/a3/b1/811b03aabd244bf307ea1c4dec77f150eb8e9771ebfe5bd6f95acaca1277/keract-2.6.2.tar.gz", "yanked": false}], "2.7.2": [{"comment_text": "", "digests": {"md5": "befbd6f4816b72c18d3208a9529383f6", "sha256": "c41a08cd2f4c152c0f054c15053ed19fab824b6a364b4d668089b870ac774677"}, "downloads": -1, "filename": "keract-2.7.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "befbd6f4816b72c18d3208a9529383f6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6863, "upload_time": "2019-09-03T07:25:42", "upload_time_iso_8601": "2019-09-03T07:25:42.826545Z", "url": "https://files.pythonhosted.org/packages/38/d4/b5c42de06343416e0becf6787f24201ccbe2aa26d7aa9d5277d67b5a0ad7/keract-2.7.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5c2210b3a5a14ebace3479c4a7e8fcb", "sha256": "57b19e7ead4c3f043e0f0c4a6c043f4cc29369d14486204a4bf4e6970f66ada9"}, "downloads": -1, "filename": "keract-2.7.2.tar.gz", "has_sig": false, "md5_digest": "c5c2210b3a5a14ebace3479c4a7e8fcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5874, "upload_time": "2019-09-03T07:25:44", "upload_time_iso_8601": "2019-09-03T07:25:44.395038Z", "url": "https://files.pythonhosted.org/packages/05/5d/55aa5c84b5afaf058f38a715a3e40721733a1fc28d0710ec19d78f7caad9/keract-2.7.2.tar.gz", "yanked": false}], "2.7.3": [{"comment_text": "", "digests": {"md5": "0e5fda2f2dd03996ff467454a1e4ec7d", "sha256": "0478ba3997a2b822dcac15ca1210c2b39288e04667e193c55375045337ceed94"}, "downloads": -1, "filename": "keract-2.7.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0e5fda2f2dd03996ff467454a1e4ec7d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7339, "upload_time": "2019-10-08T05:51:27", "upload_time_iso_8601": "2019-10-08T05:51:27.060146Z", "url": "https://files.pythonhosted.org/packages/b2/cf/fcf237c7f461151081d4a1cf40b04849af140df66b7843b68e737e171fcd/keract-2.7.3-py2.py3-none-any.whl", "yanked": false}], "2.8.3": [{"comment_text": "", "digests": {"md5": "fa4f6cd1f99e88588c4fca86925e07d6", "sha256": "606eb7c5c8615d98405e4038ab8da02b70954290b127428776ace5bced51aa29"}, "downloads": -1, "filename": "keract-2.8.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fa4f6cd1f99e88588c4fca86925e07d6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7396, "upload_time": "2019-10-11T08:24:45", "upload_time_iso_8601": "2019-10-11T08:24:45.047779Z", "url": "https://files.pythonhosted.org/packages/b9/0c/0ca3bbf2dcba6ebaf8238438059816324c80c0b111640ffc5be259af7b4d/keract-2.8.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d5ab6b87ef81732a449879386dfca0b", "sha256": "4d521d2e6fbb638c80934c1bb00db15f0f08c6239ba7647ed2a89197db2f8d8b"}, "downloads": -1, "filename": "keract-2.8.3.tar.gz", "has_sig": false, "md5_digest": "3d5ab6b87ef81732a449879386dfca0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6499, "upload_time": "2019-10-11T08:24:46", "upload_time_iso_8601": "2019-10-11T08:24:46.735971Z", "url": "https://files.pythonhosted.org/packages/ce/61/fc17dcbef3c5f95f59d589e14114ae60d811f3a1f23f0e0211c3da84e767/keract-2.8.3.tar.gz", "yanked": false}], "2.8.4": [{"comment_text": "", "digests": {"md5": "31961924762aeda006c5fc0d70363b7f", "sha256": "40de52efe14bdb43cb2af6a1a83801e6df1557acc86034452aec1daae3ca2883"}, "downloads": -1, "filename": "keract-2.8.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "31961924762aeda006c5fc0d70363b7f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7655, "upload_time": "2019-10-25T06:59:57", "upload_time_iso_8601": "2019-10-25T06:59:57.009596Z", "url": "https://files.pythonhosted.org/packages/9c/04/dbc158dd7ef2cd148d99dbb9d993c62f932a5b533fce21987ea6c0ed4003/keract-2.8.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efb63d17ad02a7a77f31b884ddec678a", "sha256": "4108cec947f567cde60e6a0304fe64e0ca7ba09449977f61b80d9def9c357a50"}, "downloads": -1, "filename": "keract-2.8.4-py3-none-any.whl", "has_sig": false, "md5_digest": "efb63d17ad02a7a77f31b884ddec678a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7784, "upload_time": "2019-11-26T13:43:53", "upload_time_iso_8601": "2019-11-26T13:43:53.091195Z", "url": "https://files.pythonhosted.org/packages/de/a5/0fbdf3f78ca6b4f2bfeed613226202ba35d437cf6ecfae3280f76130a098/keract-2.8.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "880bcc697708bc7c2dc42f91d64a84f1", "sha256": "6865258b1dc6b501298ec7c50631772e2efc61d4dea4310c2afd8d7fbd5b0c2c"}, "downloads": -1, "filename": "keract-2.8.4.tar.gz", "has_sig": false, "md5_digest": "880bcc697708bc7c2dc42f91d64a84f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6769, "upload_time": "2019-10-25T06:59:58", "upload_time_iso_8601": "2019-10-25T06:59:58.809330Z", "url": "https://files.pythonhosted.org/packages/34/25/a5fc1ff8f486b7147717246bfa3a57d7e30216ae7020caad350b82069fbe/keract-2.8.4.tar.gz", "yanked": false}], "2.8.5": [{"comment_text": "", "digests": {"md5": "7b45fc298c32baa7dec1e1a7b04826d9", "sha256": "5b8869351b2334633c75a4c409ef87ad5e2f2e215ad23d69463e6598c5bd92ec"}, "downloads": -1, "filename": "keract-2.8.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7b45fc298c32baa7dec1e1a7b04826d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7783, "upload_time": "2019-11-26T13:44:14", "upload_time_iso_8601": "2019-11-26T13:44:14.880826Z", "url": "https://files.pythonhosted.org/packages/62/80/216f90188949e4a2c53a62e8799f6ad12d9703284d57785d6036fa43aec5/keract-2.8.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d2d3b7216d4d09eee8460e69f348ec5", "sha256": "5f9e40d6a19ed52b55c847e844a0f2c9e01b953cd175b4ffe7284fa102738d81"}, "downloads": -1, "filename": "keract-2.8.5.tar.gz", "has_sig": false, "md5_digest": "6d2d3b7216d4d09eee8460e69f348ec5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6830, "upload_time": "2019-11-26T13:44:16", "upload_time_iso_8601": "2019-11-26T13:44:16.393643Z", "url": "https://files.pythonhosted.org/packages/b4/f2/002745bba3ae81a4ca52cf39c521b0c53b7a97e677ab5102f6ad1e6e75e8/keract-2.8.5.tar.gz", "yanked": false}], "2.9.5": [{"comment_text": "", "digests": {"md5": "580585c33a9e6a9eed9017536e444cd8", "sha256": "501808a11ed6ab8825f4d76892285b57c7d2b38162538006e78475eadf02f156"}, "downloads": -1, "filename": "keract-2.9.5-py3-none-any.whl", "has_sig": false, "md5_digest": "580585c33a9e6a9eed9017536e444cd8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8182, "upload_time": "2020-01-03T08:03:56", "upload_time_iso_8601": "2020-01-03T08:03:56.484232Z", "url": "https://files.pythonhosted.org/packages/e2/2a/3ba69fe83b90fe1b2c3781afa0b8ad14cd3f80f531786871e3da5df00c5e/keract-2.9.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e3ec3ac7597511088d11954f2704b71", "sha256": "4bfc74f98211df473a7a4a41a24d896fe606dacf588e51aef9b2450fd3664182"}, "downloads": -1, "filename": "keract-2.9.5.tar.gz", "has_sig": false, "md5_digest": "7e3ec3ac7597511088d11954f2704b71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7523, "upload_time": "2020-01-03T08:03:59", "upload_time_iso_8601": "2020-01-03T08:03:59.006188Z", "url": "https://files.pythonhosted.org/packages/e4/b0/9697dbef5e690caf7a3bb18b11fe0c7b1ef8c2d2e285bead65ab928f4024/keract-2.9.5.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "140ffab539aacd3d1fa9bf05c5452aa0", "sha256": "47e8f187793ce103a56ee7b83da1111b13c8f1c1c4fa8fde4b136aeb87302224"}, "downloads": -1, "filename": "keract-3.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "140ffab539aacd3d1fa9bf05c5452aa0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9349, "upload_time": "2020-01-03T15:06:33", "upload_time_iso_8601": "2020-01-03T15:06:33.209999Z", "url": "https://files.pythonhosted.org/packages/05/30/1d31fe08a6343466f87db585be5c8bf46df59e22779738f94aa34d31d34c/keract-3.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0b8d7e47d129b91f4caab6fb6340c7f", "sha256": "02b2595780f5ebf7abb17e34245909b9b297ac73e20ab48bfa81259fee2164ea"}, "downloads": -1, "filename": "keract-3.0.1.tar.gz", "has_sig": false, "md5_digest": "c0b8d7e47d129b91f4caab6fb6340c7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8795, "upload_time": "2020-01-03T15:06:34", "upload_time_iso_8601": "2020-01-03T15:06:34.976427Z", "url": "https://files.pythonhosted.org/packages/ae/93/df11f41143d766ce32530f3b577c245b401ad476fd7dd7b08722b1e14eb6/keract-3.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "29e76cab01beb73b9011ed4873baeaca", "sha256": "e494e3fe61dc8d47c69b539d089fc8b46e0c8eb59d9392cf2b3c522c4d616a9e"}, "downloads": -1, "filename": "keract-3.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "29e76cab01beb73b9011ed4873baeaca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9597, "upload_time": "2020-02-12T14:11:37", "upload_time_iso_8601": "2020-02-12T14:11:37.027050Z", "url": "https://files.pythonhosted.org/packages/38/50/42e135986807064315de6dc40e2013d4db417186768ffa05f9980ea7db83/keract-3.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "314610a66123edd3ab7a262efb948667", "sha256": "bdac048e45f10edde6913d62f1f3e6c57580a1a08cbf8aaf0687571a1db14082"}, "downloads": -1, "filename": "keract-3.0.2.tar.gz", "has_sig": false, "md5_digest": "314610a66123edd3ab7a262efb948667", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9108, "upload_time": "2020-02-12T14:11:39", "upload_time_iso_8601": "2020-02-12T14:11:39.495109Z", "url": "https://files.pythonhosted.org/packages/a7/5c/3915209708809430fba3b05ab1a5b5fa1d6f114e57d7fa16f7c499cbeb56/keract-3.0.2.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "6fedc34476a6bb0c7e87049e775cd0e3", "sha256": "e047a7cdf29e23627be97d840f4895125b9e8f83afc81b3990b83e15c9d68702"}, "downloads": -1, "filename": "keract-3.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6fedc34476a6bb0c7e87049e775cd0e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9698, "upload_time": "2020-03-28T05:48:59", "upload_time_iso_8601": "2020-03-28T05:48:59.405752Z", "url": "https://files.pythonhosted.org/packages/ad/7f/74c42d4f6fcd09de8a0ebad1bde5484510a80c03df7d0b0db18474aaade5/keract-3.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82892e57b4bfe8a5c0e437a40f03d939", "sha256": "ccc44444b445bc74939266edc7b8c7aef20a4c5a5f090e069efef47f6504352a"}, "downloads": -1, "filename": "keract-3.1.0.tar.gz", "has_sig": false, "md5_digest": "82892e57b4bfe8a5c0e437a40f03d939", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9324, "upload_time": "2020-03-28T05:49:02", "upload_time_iso_8601": "2020-03-28T05:49:02.374215Z", "url": "https://files.pythonhosted.org/packages/21/c3/62a808c5d4e27cabca140337dd2f65ecc07582ab8f72261378bcdad32fb5/keract-3.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6fedc34476a6bb0c7e87049e775cd0e3", "sha256": "e047a7cdf29e23627be97d840f4895125b9e8f83afc81b3990b83e15c9d68702"}, "downloads": -1, "filename": "keract-3.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6fedc34476a6bb0c7e87049e775cd0e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9698, "upload_time": "2020-03-28T05:48:59", "upload_time_iso_8601": "2020-03-28T05:48:59.405752Z", "url": "https://files.pythonhosted.org/packages/ad/7f/74c42d4f6fcd09de8a0ebad1bde5484510a80c03df7d0b0db18474aaade5/keract-3.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82892e57b4bfe8a5c0e437a40f03d939", "sha256": "ccc44444b445bc74939266edc7b8c7aef20a4c5a5f090e069efef47f6504352a"}, "downloads": -1, "filename": "keract-3.1.0.tar.gz", "has_sig": false, "md5_digest": "82892e57b4bfe8a5c0e437a40f03d939", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9324, "upload_time": "2020-03-28T05:49:02", "upload_time_iso_8601": "2020-03-28T05:49:02.374215Z", "url": "https://files.pythonhosted.org/packages/21/c3/62a808c5d4e27cabca140337dd2f65ecc07582ab8f72261378bcdad32fb5/keract-3.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:14 2020"}