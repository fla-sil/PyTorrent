{"info": {"author": "Mayowa Bello", "author_email": "bmayowa25@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "\n# Django Fine Search\n\nhttps://github.com/bellomusodiq/dj-fine-search\n\nhttps://pypi.org/project/dj-fine-search/\n\n\nDjango fine search is package that performs search based on keywords. It allows word flexibility\nfor performing filter in a queryset. \ne.g. The native Model.object.filter(title__icontains='hello world') will return queryset of \nobjects that contains substring \"hello world\", if the \"world\" comes before the \"hello\", the \nobjects would not be found. Django fine search improves that, Django fine search will include\nall objects that has substring \"hello world\".\n\n```\nclass MyModel(models.Model):    \n    title = models.Charfield(max_length=200)\n    text = models.TextField()\n    ...\n```\n\n\n\nperform_search takes in the model, search_text and fields\n\nmodel: Model class, the model to perform filter on\n\nsearch_text: string, the query that will be used for the filtering\n\nfields: list or tuple of the fields of the models that the search will be performed on e.g. title and text above\n\nperform_search function returns a list of model objects\n\n~~~\n>> pip install dj-fine-search\n~~~\n\n```\nfrom fine_search.fine_search import perform_search\n# model based search\nqueryset = perform_search(model=MyModel, search_text='hello world', fields=[\"title\", \"text\"])\n```\n\n~~~\n# assume we have the queryset below are result of MyModel.objects.all()\nqueryset = [{\"id\": 1, \"title\": \"some title\", \"text\": \"hello world, how are you\"},\n            {\"id\": 2, \"title\": \"some title2\", \"text\": \"the world is good\"}, \n            {\"id\": 3, \"title\": \"some title3\", \"text\": \"world hello there, hello\"}] \n# if we run perform_search on the MyModel with search_text='hello world' and fields=['title', 'fields']\n\n# it will return all the queries\n~~~\n\nit is also possible to perform search on queryset. e.g. queryset that has been filter initialy\n\n~~~\nfrom fine_search.fine_search import perform_search_queryset\n\nq = MyModel.objects.all()\n\nqueryset = perform_serach_queryset(queryset=q, search_text='hello world', fields=[\"title\", \"text\"])\n~~~\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bellomusodiq/dj-fine-search", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "dj-fine-search", "package_url": "https://pypi.org/project/dj-fine-search/", "platform": "", "project_url": "https://pypi.org/project/dj-fine-search/", "project_urls": {"Homepage": "https://github.com/bellomusodiq/dj-fine-search"}, "release_url": "https://pypi.org/project/dj-fine-search/0.0.4/", "requires_dist": null, "requires_python": ">=3.5", "summary": "A key word based queryset search for django", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django Fine Search</h1>\n<p><a href=\"https://github.com/bellomusodiq/dj-fine-search\" rel=\"nofollow\">https://github.com/bellomusodiq/dj-fine-search</a></p>\n<p><a href=\"https://pypi.org/project/dj-fine-search/\" rel=\"nofollow\">https://pypi.org/project/dj-fine-search/</a></p>\n<p>Django fine search is package that performs search based on keywords. It allows word flexibility\nfor performing filter in a queryset.\ne.g. The native Model.object.filter(title__icontains='hello world') will return queryset of\nobjects that contains substring \"hello world\", if the \"world\" comes before the \"hello\", the\nobjects would not be found. Django fine search improves that, Django fine search will include\nall objects that has substring \"hello world\".</p>\n<pre><code>class MyModel(models.Model):    \n    title = models.Charfield(max_length=200)\n    text = models.TextField()\n    ...\n</code></pre>\n<p>perform_search takes in the model, search_text and fields</p>\n<p>model: Model class, the model to perform filter on</p>\n<p>search_text: string, the query that will be used for the filtering</p>\n<p>fields: list or tuple of the fields of the models that the search will be performed on e.g. title and text above</p>\n<p>perform_search function returns a list of model objects</p>\n<pre><code>&gt;&gt; pip install dj-fine-search\n</code></pre>\n<pre><code>from fine_search.fine_search import perform_search\n# model based search\nqueryset = perform_search(model=MyModel, search_text='hello world', fields=[\"title\", \"text\"])\n</code></pre>\n<pre><code># assume we have the queryset below are result of MyModel.objects.all()\nqueryset = [{\"id\": 1, \"title\": \"some title\", \"text\": \"hello world, how are you\"},\n            {\"id\": 2, \"title\": \"some title2\", \"text\": \"the world is good\"}, \n            {\"id\": 3, \"title\": \"some title3\", \"text\": \"world hello there, hello\"}] \n# if we run perform_search on the MyModel with search_text='hello world' and fields=['title', 'fields']\n\n# it will return all the queries\n</code></pre>\n<p>it is also possible to perform search on queryset. e.g. queryset that has been filter initialy</p>\n<pre><code>from fine_search.fine_search import perform_search_queryset\n\nq = MyModel.objects.all()\n\nqueryset = perform_serach_queryset(queryset=q, search_text='hello world', fields=[\"title\", \"text\"])\n</code></pre>\n\n          </div>"}, "last_serial": 6842536, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "24727e49cd599ab5e2bb59ced2d2b0d9", "sha256": "769f00c03e49f139d2ff634a1991b5cfa6e1d69af6de4f48738604eb1acc9d0d"}, "downloads": -1, "filename": "dj_fine_search-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "24727e49cd599ab5e2bb59ced2d2b0d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4248, "upload_time": "2020-03-19T11:06:43", "upload_time_iso_8601": "2020-03-19T11:06:43.496815Z", "url": "https://files.pythonhosted.org/packages/f3/1e/2a7e743b0d00d001b21da253c5239466efb13854109029f0ad2356247c15/dj_fine_search-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dee76e9fed810d696e858f083b5a90e", "sha256": "c0446f0bc7978a75053bcf9cb74d63b07bf0c0bbc73a37fa16abbf0eab1a8537"}, "downloads": -1, "filename": "dj-fine-search-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2dee76e9fed810d696e858f083b5a90e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 2817, "upload_time": "2020-03-18T13:47:13", "upload_time_iso_8601": "2020-03-18T13:47:13.796184Z", "url": "https://files.pythonhosted.org/packages/7e/f1/bce96a1906d42b98e1fe4e86d70e66dd5e9f3eaba4f3a87f04dca2f5fe1f/dj-fine-search-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ccaf278d6f07c6ab1cc483ca0ae54b69", "sha256": "18b9541999577a68fba998a7689a05928596983b5d7c9a569113ee963f559644"}, "downloads": -1, "filename": "dj_fine_search-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ccaf278d6f07c6ab1cc483ca0ae54b69", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4250, "upload_time": "2020-03-19T11:06:44", "upload_time_iso_8601": "2020-03-19T11:06:44.811933Z", "url": "https://files.pythonhosted.org/packages/bb/9a/32e23c33f278f4f1cd11f8c441128021c869b4c01abe998cd7fee27becad/dj_fine_search-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2703b94522541939e13a0584175a6a6", "sha256": "3fe1677dc5662d636f17bb77f96e551df3b266954ffd91fd11cd75eadbcacad8"}, "downloads": -1, "filename": "dj-fine-search-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e2703b94522541939e13a0584175a6a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 2855, "upload_time": "2020-03-18T13:56:13", "upload_time_iso_8601": "2020-03-18T13:56:13.146467Z", "url": "https://files.pythonhosted.org/packages/a9/47/1930bb3aab1d6e135726cbcec1e3841523ce224a3b3ef98d5cfefeadbed2/dj-fine-search-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0ad187b855e037b6e3e44fe13e24b958", "sha256": "1dde1d7207ed46c5fc81b44d8ac3f1ded5c2f294f77ff6f28a3b68d775c9e0e2"}, "downloads": -1, "filename": "dj_fine_search-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0ad187b855e037b6e3e44fe13e24b958", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4252, "upload_time": "2020-03-19T11:06:46", "upload_time_iso_8601": "2020-03-19T11:06:46.232055Z", "url": "https://files.pythonhosted.org/packages/c2/79/a0c8d119b6334370f7abe110a8950dec27dd6508a6f91b75d3f718c1ebc9/dj_fine_search-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a569f73cc78503994ccda05b05a0d99f", "sha256": "f8a725cc125e80b6b591f9029ffa2123b57f0150151172f46af9f698fac18a0c"}, "downloads": -1, "filename": "dj-fine-search-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a569f73cc78503994ccda05b05a0d99f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 2836, "upload_time": "2020-03-18T15:52:22", "upload_time_iso_8601": "2020-03-18T15:52:22.323911Z", "url": "https://files.pythonhosted.org/packages/4f/92/a127e46b8d0d2ff159b210b441dc9254eebb23905dfb17589e0b3e29797d/dj-fine-search-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "9a819acf76d7fbb56b5a22e609eb5727", "sha256": "14261a67c796f14b4cfe42a4084521120e17b62f279e687cf836b5cfd8a84b90"}, "downloads": -1, "filename": "dj_fine_search-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9a819acf76d7fbb56b5a22e609eb5727", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4416, "upload_time": "2020-03-19T11:06:47", "upload_time_iso_8601": "2020-03-19T11:06:47.654926Z", "url": "https://files.pythonhosted.org/packages/66/7a/cd6b6fe789c831e9ca23274f9016f40173dbd31c724cf04b57c0a356d7ce/dj_fine_search-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69b4591c0965efbe2468fb66f5c32ec5", "sha256": "14944e857a42eead9c14ac44837c34e79f59e25e7589e05c5216e0429c2c9252"}, "downloads": -1, "filename": "dj-fine-search-0.0.4.tar.gz", "has_sig": false, "md5_digest": "69b4591c0965efbe2468fb66f5c32ec5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3234, "upload_time": "2020-03-19T11:11:45", "upload_time_iso_8601": "2020-03-19T11:11:45.551100Z", "url": "https://files.pythonhosted.org/packages/17/16/5fe544c8df5bc8be39b35ede7d549dd9935b60d2bfb7765c15c1c713b903/dj-fine-search-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9a819acf76d7fbb56b5a22e609eb5727", "sha256": "14261a67c796f14b4cfe42a4084521120e17b62f279e687cf836b5cfd8a84b90"}, "downloads": -1, "filename": "dj_fine_search-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9a819acf76d7fbb56b5a22e609eb5727", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4416, "upload_time": "2020-03-19T11:06:47", "upload_time_iso_8601": "2020-03-19T11:06:47.654926Z", "url": "https://files.pythonhosted.org/packages/66/7a/cd6b6fe789c831e9ca23274f9016f40173dbd31c724cf04b57c0a356d7ce/dj_fine_search-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69b4591c0965efbe2468fb66f5c32ec5", "sha256": "14944e857a42eead9c14ac44837c34e79f59e25e7589e05c5216e0429c2c9252"}, "downloads": -1, "filename": "dj-fine-search-0.0.4.tar.gz", "has_sig": false, "md5_digest": "69b4591c0965efbe2468fb66f5c32ec5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3234, "upload_time": "2020-03-19T11:11:45", "upload_time_iso_8601": "2020-03-19T11:11:45.551100Z", "url": "https://files.pythonhosted.org/packages/17/16/5fe544c8df5bc8be39b35ede7d549dd9935b60d2bfb7765c15c1c713b903/dj-fine-search-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:35 2020"}