{"info": {"author": "Cholerae Hu", "author_email": "choleraehyq@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.5"], "description": "aiorpc\n======\n\n.. image:: https://badge.fury.io/py/aiorpc.png\n    :target: http://badge.fury.io/py/aiorpc\n\n.. image:: https://travis-ci.org/choleraehyq/aiorpc.png?branch=master\n    :target: https://travis-ci.org/choleraehyq/aiorpc\n\naiorpc is a lightweight asynchronous RPC library. It enables you to easily build a distributed server-side system by writing a small amount of code. It is built on top of `asyncio <https://docs.python.org/3/library/asyncio.html/>`_ and `MessagePack <http://msgpack.org/>`_.\n\n**Note aiorpc is under development, should not be considered to have a stable API.**\n\nInstallation\n------------\n\nTo install aiorpc, simply:\n\n.. code-block:: bash\n\n    $ pip install aiorpc\n\nExamples\n--------\n\nRPC server\n^^^^^^^^^^\n\n.. code-block:: python\n\n    from aiorpc import register, serve\n\n    import asyncio\n    import uvloop\n\n\n    def echo(msg):\n        return msg\n\n    loop = uvloop.new_event_loop()\n    asyncio.set_event_loop(loop)\n    register(\"echo\", echo)\n    coro = asyncio.start_server(serve, '127.0.0.1', 6000, loop=loop)\n    server = loop.run_until_complete(coro)\n\n    try:\n        loop.run_forever()\n    except KeyboardInterrupt:\n        server.close()\n        loop.run_until_complete(server.wait_closed())\n\nRPC client\n^^^^^^^^^^\n\n.. code-block:: python\n\n    from aiorpc import RPCClient\n\n    import asyncio\n    import uvloop\n\n    async def do(cli):\n        ret = await client.call('echo', 'message')\n        print(\"{}\\n\".format(ret))\n\n    loop = uvloop.new_event_loop()\n    asyncio.set_event_loop(loop)\n    client = RPCClient('127.0.0.1', 6000)\n    loop.run_until_complete(do(client))\n    client.close()\n\naiorpc client can also be used as an async context manager:\n\n.. code-block:: python\n\n    async def do():\n        async with RPCClient('127.0.0.1', 6000) as client:\n            ret = await client.call('echo', 'message')\n            print(\"{}\\n\".format(ret))\n\n\n\nPerformance\n-----------\n\naiorpc with `uvloop <https://github.com/MagicStack/uvloop>`_ significantly outperforms `ZeroRPC <http://zerorpc.dotcloud.com/>`_ (**6x** faster), which is built using `ZeroMQ <http://zeromq.org/>`_ and `MessagePack <http://msgpack.org/>`_ and slightly underperforms `official MessagePack RPC <https://github.com/msgpack-rpc/msgpack-rpc-python>`_ (**0.7x** slower), which is built using `Facebook's Tornado <http://www.tornadoweb.org/en/stable/>`_ and `MessagePack <http://msgpack.org/>`_.\n\n- aiorpc\n\n\n.. code-block:: bash\n\n    % python benchmarks/benchmark_aiorpc.py\n    call: 2236 qps\n\n\n- Official MesssagePack RPC\n\n.. code-block:: bash\n\n    % pip install msgpack-rpc-python\n    % python benchmarks/benchmark_msgpackrpc.py\n    call: 3112 qps\n\n- ZeroRPC\n\n.. code-block:: bash\n\n    % pip install zerorpc\n    % python benchmarks/benchmark_zerorpc.py\n    call: 351 qps\n\n\nDocumentation\n-------------\n\nDocumentation is available at http://aiorpc.readthedocs.org/.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/choleraehyq/aiorpc", "keywords": "rpc,msgpack,messagepack,msgpackrpc,messagepackrpc,asyncio", "license": "WTFPL", "maintainer": "", "maintainer_email": "", "name": "aiorpc", "package_url": "https://pypi.org/project/aiorpc/", "platform": "", "project_url": "https://pypi.org/project/aiorpc/", "project_urls": {"Homepage": "http://github.com/choleraehyq/aiorpc"}, "release_url": "https://pypi.org/project/aiorpc/0.1.4/", "requires_dist": ["msgpack-python", "uvloop"], "requires_python": "", "summary": "A fast RPC library based on asyncio and MessagePack", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/aiorpc\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/aiorpc.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41213df43803ddbebe90b625b78350f04271cdea/68747470733a2f2f62616467652e667572792e696f2f70792f61696f7270632e706e67\"></a>\n<a href=\"https://travis-ci.org/choleraehyq/aiorpc\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/choleraehyq/aiorpc.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68714299f4769b25b5a41e924f5892dfc80e50dd/68747470733a2f2f7472617669732d63692e6f72672f63686f6c657261656879712f61696f7270632e706e673f6272616e63683d6d6173746572\"></a>\n<p>aiorpc is a lightweight asynchronous RPC library. It enables you to easily build a distributed server-side system by writing a small amount of code. It is built on top of <a href=\"https://docs.python.org/3/library/asyncio.html/\" rel=\"nofollow\">asyncio</a> and <a href=\"http://msgpack.org/\" rel=\"nofollow\">MessagePack</a>.</p>\n<p><strong>Note aiorpc is under development, should not be considered to have a stable API.</strong></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install aiorpc, simply:</p>\n<pre>$ pip install aiorpc\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<div id=\"rpc-server\">\n<h3>RPC server</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiorpc</span> <span class=\"kn\">import</span> <span class=\"n\">register</span><span class=\"p\">,</span> <span class=\"n\">serve</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uvloop</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">echo</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">msg</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">uvloop</span><span class=\"o\">.</span><span class=\"n\">new_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">set_event_loop</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n<span class=\"n\">register</span><span class=\"p\">(</span><span class=\"s2\">\"echo\"</span><span class=\"p\">,</span> <span class=\"n\">echo</span><span class=\"p\">)</span>\n<span class=\"n\">coro</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">start_server</span><span class=\"p\">(</span><span class=\"n\">serve</span><span class=\"p\">,</span> <span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"mi\">6000</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">coro</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">wait_closed</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"rpc-client\">\n<h3>RPC client</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiorpc</span> <span class=\"kn\">import</span> <span class=\"n\">RPCClient</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uvloop</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">do</span><span class=\"p\">(</span><span class=\"n\">cli</span><span class=\"p\">):</span>\n    <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s1\">'echo'</span><span class=\"p\">,</span> <span class=\"s1\">'message'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">))</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">uvloop</span><span class=\"o\">.</span><span class=\"n\">new_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">set_event_loop</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">RPCClient</span><span class=\"p\">(</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"mi\">6000</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">do</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">))</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<p>aiorpc client can also be used as an async context manager:</p>\n<pre><span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">do</span><span class=\"p\">():</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">RPCClient</span><span class=\"p\">(</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"mi\">6000</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n        <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s1\">'echo'</span><span class=\"p\">,</span> <span class=\"s1\">'message'</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">))</span>\n</pre>\n</div>\n</div>\n<div id=\"performance\">\n<h2>Performance</h2>\n<p>aiorpc with <a href=\"https://github.com/MagicStack/uvloop\" rel=\"nofollow\">uvloop</a> significantly outperforms <a href=\"http://zerorpc.dotcloud.com/\" rel=\"nofollow\">ZeroRPC</a> (<strong>6x</strong> faster), which is built using <a href=\"http://zeromq.org/\" rel=\"nofollow\">ZeroMQ</a> and <a href=\"http://msgpack.org/\" rel=\"nofollow\">MessagePack</a> and slightly underperforms <a href=\"https://github.com/msgpack-rpc/msgpack-rpc-python\" rel=\"nofollow\">official MessagePack RPC</a> (<strong>0.7x</strong> slower), which is built using <a href=\"http://www.tornadoweb.org/en/stable/\" rel=\"nofollow\">Facebook\u2019s Tornado</a> and <a href=\"http://msgpack.org/\" rel=\"nofollow\">MessagePack</a>.</p>\n<ul>\n<li>aiorpc</li>\n</ul>\n<pre>% python benchmarks/benchmark_aiorpc.py\ncall: <span class=\"m\">2236</span> qps\n</pre>\n<ul>\n<li>Official MesssagePack RPC</li>\n</ul>\n<pre>% pip install msgpack-rpc-python\n% python benchmarks/benchmark_msgpackrpc.py\ncall: <span class=\"m\">3112</span> qps\n</pre>\n<ul>\n<li>ZeroRPC</li>\n</ul>\n<pre>% pip install zerorpc\n% python benchmarks/benchmark_zerorpc.py\ncall: <span class=\"m\">351</span> qps\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Documentation is available at <a href=\"http://aiorpc.readthedocs.org/\" rel=\"nofollow\">http://aiorpc.readthedocs.org/</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6850059, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "a6e978de3ff78e24a1d97e4eeefc2e6a", "sha256": "d1b66e4140fd0d0450d71bd910062e01d0e72ca24cf79ef1353cae9280ae6a7d"}, "downloads": -1, "filename": "aiorpc-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a6e978de3ff78e24a1d97e4eeefc2e6a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8832, "upload_time": "2018-05-13T03:32:33", "upload_time_iso_8601": "2018-05-13T03:32:33.617347Z", "url": "https://files.pythonhosted.org/packages/28/3d/756344c4907908f5a12f85927a4348a0863d8334d5f140572f85ab0f5458/aiorpc-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6440dc39dfdb7e994dc178419ef7aac7", "sha256": "b1e8ebbe9169b8565edbb38f18f17cf55badb2fd87dca154a8f42c8d9dc5b1b0"}, "downloads": -1, "filename": "aiorpc-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6440dc39dfdb7e994dc178419ef7aac7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6667, "upload_time": "2016-10-08T09:35:44", "upload_time_iso_8601": "2016-10-08T09:35:44.348311Z", "url": "https://files.pythonhosted.org/packages/88/e6/64d66f5f9c3b95a75e2ae7ebbad0f0f9af97c15ec1c0f10df73b2c28987d/aiorpc-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "25d458d91d78311c9c85ac55c3c32185", "sha256": "3140504ff143eb5b55fed86b8fdd00c5862e15126595dcef20087ba7b3d57ccd"}, "downloads": -1, "filename": "aiorpc-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "25d458d91d78311c9c85ac55c3c32185", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8834, "upload_time": "2018-05-13T03:32:35", "upload_time_iso_8601": "2018-05-13T03:32:35.299831Z", "url": "https://files.pythonhosted.org/packages/e0/22/6f9dce9362c881a8cab566a1a1b51e5859927a741f93d58ce97419e61991/aiorpc-0.1.3-py3-none-any.whl", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "a097594f12ac7665fe816b216d3ceb02", "sha256": "5f59c07a389998cedc0fefd0f48788c46a0d0971367fb160fb0aca05fcf27c5f"}, "downloads": -1, "filename": "aiorpc-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a097594f12ac7665fe816b216d3ceb02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10386, "upload_time": "2020-03-20T14:17:36", "upload_time_iso_8601": "2020-03-20T14:17:36.787590Z", "url": "https://files.pythonhosted.org/packages/77/f3/7fc705b7402d35c2d19c72eb52ddabcc88dd085ce32e981279b83d90133b/aiorpc-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "869fc6e4ae03d4c3f08aef59c0e516f8", "sha256": "3bbefeacf92112f348ec6d10507a8e7720675bc96b5c46550d590907248cadd2"}, "downloads": -1, "filename": "aiorpc-0.1.4.tar.gz", "has_sig": false, "md5_digest": "869fc6e4ae03d4c3f08aef59c0e516f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7960, "upload_time": "2020-03-20T14:17:38", "upload_time_iso_8601": "2020-03-20T14:17:38.785507Z", "url": "https://files.pythonhosted.org/packages/85/ac/9b0ddb47aae3164c7b3bccf272430742db66e62740bcd6f4ef7618417bb7/aiorpc-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a097594f12ac7665fe816b216d3ceb02", "sha256": "5f59c07a389998cedc0fefd0f48788c46a0d0971367fb160fb0aca05fcf27c5f"}, "downloads": -1, "filename": "aiorpc-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a097594f12ac7665fe816b216d3ceb02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10386, "upload_time": "2020-03-20T14:17:36", "upload_time_iso_8601": "2020-03-20T14:17:36.787590Z", "url": "https://files.pythonhosted.org/packages/77/f3/7fc705b7402d35c2d19c72eb52ddabcc88dd085ce32e981279b83d90133b/aiorpc-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "869fc6e4ae03d4c3f08aef59c0e516f8", "sha256": "3bbefeacf92112f348ec6d10507a8e7720675bc96b5c46550d590907248cadd2"}, "downloads": -1, "filename": "aiorpc-0.1.4.tar.gz", "has_sig": false, "md5_digest": "869fc6e4ae03d4c3f08aef59c0e516f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7960, "upload_time": "2020-03-20T14:17:38", "upload_time_iso_8601": "2020-03-20T14:17:38.785507Z", "url": "https://files.pythonhosted.org/packages/85/ac/9b0ddb47aae3164c7b3bccf272430742db66e62740bcd6f4ef7618417bb7/aiorpc-0.1.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:49 2020"}