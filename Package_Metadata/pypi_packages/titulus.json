{"info": {"author": "Antoine Simoulin", "author_email": "antoine.simoulin@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Titulus\n\nText visualization python package\n\n```python\nfrom titulus import color, print_\n\ntest = \"Nous sommes le 12/24/2018 aujourd'hui. Mon num\u00e9ro de tel est le (301)227-1340\"\ntokens = test.split()\nweights = np.random.randint(low=0, high=10, size=len(tokens))\n\nprint_(' '.join(color(tokens, weights, n=10)))\n```\n\n![alt text](./imgs/demo.png \"color demo\")\n\n```python\nfrom sklearn.datasets import fetch_20newsgroups\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.pipeline import Pipeline\n\ncategories = ['alt.atheism', 'talk.religion.misc']\nnewsgroups_train = fetch_20newsgroups(subset='train',\n                                      categories=categories)\nnewsgroups_test = fetch_20newsgroups(subset='test',\n                                     categories=categories)\n\nX_train, X_test = newsgroups_train.data, newsgroups_test.data\ny_train, y_test = newsgroups_train.target, newsgroups_test.target\n```\n\n```python\nidx = np.random.randint(len(X_vec_list))\n\ntokens = tokenizer(X_train[idx])\ntoken_idx = [voc.index(t) if t in voc else -1 for t in tokens]\n\nweights = [X_vec_arr[idx, :][i] if i>0 else 0 for i in token_idx]\n\nprint_(' '.join(color(tokens, weights, start_hex=\"#FEFEFE\", finish_hex=\"#00a4e4\", n=20)))\n```\n\n![alt text](./imgs/demo2.png \"color demo\")\n\n\n```python\ntext_clf = Pipeline([('vect', vectorizer),\n                     ('clf', SGDClassifier(loss='hinge', penalty='l2', tol=0.2,\n                                               alpha=1e-3, max_iter=15, random_state=42)),\n\n                    ])\n\n_ = text_clf.fit(X_train, y_train)\n\nX_vec = vectorizer.transform(X_train)\nX_vec_arr = X_vec.toarray()\nX_vec_list = [list(x) for x in X_vec_arr]\nvoc = vectorizer.get_feature_names()\n\nidx = np.random.randint(len(X_vec_list))\n\ntokens = tokenizer(X_train[idx])\ntoken_idx = [voc.index(t) if t in voc else -1 for t in tokens]\n\nweights_ = np.multiply(X_vec_arr[idx, :], text_clf.named_steps['clf'].coef_[0, :])\nweights = [weights_[i] if i>0 else 0 for i in token_idx]\n\nprint_(' '.join(color(tokens, weights, start_hex=\"#34BF49\", finish_hex=\"#BE0027\", middle_hex=\"#FEFEFE\", n=20)))\n```\n\n![alt text](./imgs/demo3.png \"color demo\")\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AntoineSimoulin/titulus", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "titulus", "package_url": "https://pypi.org/project/titulus/", "platform": "", "project_url": "https://pypi.org/project/titulus/", "project_urls": {"Homepage": "https://github.com/AntoineSimoulin/titulus"}, "release_url": "https://pypi.org/project/titulus/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Text visualization python package", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Titulus</h1>\n<p>Text visualization python package</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">titulus</span> <span class=\"kn\">import</span> <span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"n\">print_</span>\n\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"s2\">\"Nous sommes le 12/24/2018 aujourd'hui. Mon num\u00e9ro de tel est le (301)227-1340\"</span>\n<span class=\"n\">tokens</span> <span class=\"o\">=</span> <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n<span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"n\">low</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">high</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">))</span>\n\n<span class=\"n\">print_</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">,</span> <span class=\"n\">weights</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)))</span>\n</pre>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0fcfaaae3f8ae09af68ab697f5d674e0a4955cba/2e2f696d67732f64656d6f2e706e67\"></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">fetch_20newsgroups</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.feature_extraction.text</span> <span class=\"kn\">import</span> <span class=\"n\">TfidfVectorizer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.linear_model</span> <span class=\"kn\">import</span> <span class=\"n\">SGDClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.pipeline</span> <span class=\"kn\">import</span> <span class=\"n\">Pipeline</span>\n\n<span class=\"n\">categories</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'alt.atheism'</span><span class=\"p\">,</span> <span class=\"s1\">'talk.religion.misc'</span><span class=\"p\">]</span>\n<span class=\"n\">newsgroups_train</span> <span class=\"o\">=</span> <span class=\"n\">fetch_20newsgroups</span><span class=\"p\">(</span><span class=\"n\">subset</span><span class=\"o\">=</span><span class=\"s1\">'train'</span><span class=\"p\">,</span>\n                                      <span class=\"n\">categories</span><span class=\"o\">=</span><span class=\"n\">categories</span><span class=\"p\">)</span>\n<span class=\"n\">newsgroups_test</span> <span class=\"o\">=</span> <span class=\"n\">fetch_20newsgroups</span><span class=\"p\">(</span><span class=\"n\">subset</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">,</span>\n                                     <span class=\"n\">categories</span><span class=\"o\">=</span><span class=\"n\">categories</span><span class=\"p\">)</span>\n\n<span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">X_test</span> <span class=\"o\">=</span> <span class=\"n\">newsgroups_train</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">newsgroups_test</span><span class=\"o\">.</span><span class=\"n\">data</span>\n<span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">y_test</span> <span class=\"o\">=</span> <span class=\"n\">newsgroups_train</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">newsgroups_test</span><span class=\"o\">.</span><span class=\"n\">target</span>\n</pre>\n<pre><span class=\"n\">idx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">X_vec_list</span><span class=\"p\">))</span>\n\n<span class=\"n\">tokens</span> <span class=\"o\">=</span> <span class=\"n\">tokenizer</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">])</span>\n<span class=\"n\">token_idx</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">voc</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">voc</span> <span class=\"k\">else</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">tokens</span><span class=\"p\">]</span>\n\n<span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">X_vec_arr</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">,</span> <span class=\"p\">:][</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"mi\">0</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">token_idx</span><span class=\"p\">]</span>\n\n<span class=\"n\">print_</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">,</span> <span class=\"n\">weights</span><span class=\"p\">,</span> <span class=\"n\">start_hex</span><span class=\"o\">=</span><span class=\"s2\">\"#FEFEFE\"</span><span class=\"p\">,</span> <span class=\"n\">finish_hex</span><span class=\"o\">=</span><span class=\"s2\">\"#00a4e4\"</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)))</span>\n</pre>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2d94afd87803669d4bf393950152492186ebffb/2e2f696d67732f64656d6f322e706e67\"></p>\n<pre><span class=\"n\">text_clf</span> <span class=\"o\">=</span> <span class=\"n\">Pipeline</span><span class=\"p\">([(</span><span class=\"s1\">'vect'</span><span class=\"p\">,</span> <span class=\"n\">vectorizer</span><span class=\"p\">),</span>\n                     <span class=\"p\">(</span><span class=\"s1\">'clf'</span><span class=\"p\">,</span> <span class=\"n\">SGDClassifier</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"s1\">'hinge'</span><span class=\"p\">,</span> <span class=\"n\">penalty</span><span class=\"o\">=</span><span class=\"s1\">'l2'</span><span class=\"p\">,</span> <span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">,</span>\n                                               <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">1e-3</span><span class=\"p\">,</span> <span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)),</span>\n\n                    <span class=\"p\">])</span>\n\n<span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">text_clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n\n<span class=\"n\">X_vec</span> <span class=\"o\">=</span> <span class=\"n\">vectorizer</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">)</span>\n<span class=\"n\">X_vec_arr</span> <span class=\"o\">=</span> <span class=\"n\">X_vec</span><span class=\"o\">.</span><span class=\"n\">toarray</span><span class=\"p\">()</span>\n<span class=\"n\">X_vec_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">X_vec_arr</span><span class=\"p\">]</span>\n<span class=\"n\">voc</span> <span class=\"o\">=</span> <span class=\"n\">vectorizer</span><span class=\"o\">.</span><span class=\"n\">get_feature_names</span><span class=\"p\">()</span>\n\n<span class=\"n\">idx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">X_vec_list</span><span class=\"p\">))</span>\n\n<span class=\"n\">tokens</span> <span class=\"o\">=</span> <span class=\"n\">tokenizer</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">])</span>\n<span class=\"n\">token_idx</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">voc</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">voc</span> <span class=\"k\">else</span> <span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">tokens</span><span class=\"p\">]</span>\n\n<span class=\"n\">weights_</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">multiply</span><span class=\"p\">(</span><span class=\"n\">X_vec_arr</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">text_clf</span><span class=\"o\">.</span><span class=\"n\">named_steps</span><span class=\"p\">[</span><span class=\"s1\">'clf'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">coef_</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">:])</span>\n<span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">weights_</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"mi\">0</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">token_idx</span><span class=\"p\">]</span>\n\n<span class=\"n\">print_</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">,</span> <span class=\"n\">weights</span><span class=\"p\">,</span> <span class=\"n\">start_hex</span><span class=\"o\">=</span><span class=\"s2\">\"#34BF49\"</span><span class=\"p\">,</span> <span class=\"n\">finish_hex</span><span class=\"o\">=</span><span class=\"s2\">\"#BE0027\"</span><span class=\"p\">,</span> <span class=\"n\">middle_hex</span><span class=\"o\">=</span><span class=\"s2\">\"#FEFEFE\"</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)))</span>\n</pre>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bbb83684da8aec6c91d10d02d36c12a6c1231796/2e2f696d67732f64656d6f332e706e67\"></p>\n\n          </div>"}, "last_serial": 5568192, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e6b85a6292803fd43295484ea31bd15f", "sha256": "c180b962ceac733d713d03e331e0e87fe3c43b24beb3fc2ae3e73ad00f0c2963"}, "downloads": -1, "filename": "titulus-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e6b85a6292803fd43295484ea31bd15f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7858, "upload_time": "2019-07-22T16:43:39", "upload_time_iso_8601": "2019-07-22T16:43:39.735638Z", "url": "https://files.pythonhosted.org/packages/f3/88/5a107573e1a02129f53633e775a3084127dc72dc8effe72571c6c971b85c/titulus-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbf260f19aa888e93417f8d009a49121", "sha256": "11028e4997d7bd9491ea1bea80e989ceb0c0975b648c2f01297cb7703e074591"}, "downloads": -1, "filename": "titulus-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dbf260f19aa888e93417f8d009a49121", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3405, "upload_time": "2019-07-22T16:43:42", "upload_time_iso_8601": "2019-07-22T16:43:42.348460Z", "url": "https://files.pythonhosted.org/packages/1f/c3/63a4ab52a5d93208585df889d9f271355702544abfcc8aae9f1c3606d3fe/titulus-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e6b85a6292803fd43295484ea31bd15f", "sha256": "c180b962ceac733d713d03e331e0e87fe3c43b24beb3fc2ae3e73ad00f0c2963"}, "downloads": -1, "filename": "titulus-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e6b85a6292803fd43295484ea31bd15f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7858, "upload_time": "2019-07-22T16:43:39", "upload_time_iso_8601": "2019-07-22T16:43:39.735638Z", "url": "https://files.pythonhosted.org/packages/f3/88/5a107573e1a02129f53633e775a3084127dc72dc8effe72571c6c971b85c/titulus-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbf260f19aa888e93417f8d009a49121", "sha256": "11028e4997d7bd9491ea1bea80e989ceb0c0975b648c2f01297cb7703e074591"}, "downloads": -1, "filename": "titulus-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dbf260f19aa888e93417f8d009a49121", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3405, "upload_time": "2019-07-22T16:43:42", "upload_time_iso_8601": "2019-07-22T16:43:42.348460Z", "url": "https://files.pythonhosted.org/packages/1f/c3/63a4ab52a5d93208585df889d9f271355702544abfcc8aae9f1c3606d3fe/titulus-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:52:42 2020"}