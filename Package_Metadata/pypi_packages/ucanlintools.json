{"info": {"author": "ucan", "author_email": "ucandevices@mail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# LIN Python lib\n\nLibrary is under development API will change\n\n## Features\n\n- LIN frame transmission / reception\n- LDF signals encoding / decoding (only signal and frames currently working, schedule table parsing not implemented, max signal size is 1 byte)\n- Works on windows, linux, mac. Supported hardware , [uCAN LIN USB CONVERTER](https://ucandevices.github.io/ulc.html)\n\n## Installation\n\n```python\npip install ucanlintools\n```\n\n## Example usage\n\nTo load ldf\n\n```python\nfrom ucanlintools.LDF_parser import parseLDF\nldf = parseLDF(\"D:\\\\ldfe.ldf\") \nmessage = ldf.get_message_by_name('FRAME_A')\nprint(message.signals)\n```\n\nTo decode/ encode frame\n\n```python\naaa = message.encode({'SIGNAL_A': 1})\nbbb = b'\\x00\\x00\\x00\\x00\\x00\\x00'\nmessage.decode(bbb)\n```\n\nTo setup LIN USB Converter\n\n```python\n\nlin = ucanlintools.LUC('COM7')\nlin.set_frame_rx_handler(rx_any)\nlin.set_new_frame_rx_handler(rx_new_data)\n\nlin.openAsMaster()\n\nlin.addReceptionFrameToTable(52,8)\nlin.addReceptionFrameToTable(54,8)\nlin.enable()\n\n```\n\nExample data reception handler\n\n```python\n\ndef rx_new_data(f):\n        global message\n        print (hex(f.id) + \": \" +(f.data.hex()))\n        if (message.id == f.id):\n                message.decode(f.data)\n                print(message.diff_str())\n```\n\n## For more info see\n\nhttps://ucandevices.github.io", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/uCAN-LIN/LinUSBConverter", "keywords": "LIN,LDF,LUC,uCAN,parser", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ucanlintools", "package_url": "https://pypi.org/project/ucanlintools/", "platform": "", "project_url": "https://pypi.org/project/ucanlintools/", "project_urls": {"Documentation": "https://ucandevices.github.io/", "Homepage": "https://github.com/uCAN-LIN/LinUSBConverter", "Source Code": "https://github.com/uCAN-LIN/LinUSBConverter/tree/master/python_lib"}, "release_url": "https://pypi.org/project/ucanlintools/0.0.9/", "requires_dist": null, "requires_python": "", "summary": "Local Interconnect Network (LIN) support for python", "version": "0.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>LIN Python lib</h1>\n<p>Library is under development API will change</p>\n<h2>Features</h2>\n<ul>\n<li>LIN frame transmission / reception</li>\n<li>LDF signals encoding / decoding (only signal and frames currently working, schedule table parsing not implemented, max signal size is 1 byte)</li>\n<li>Works on windows, linux, mac. Supported hardware , <a href=\"https://ucandevices.github.io/ulc.html\" rel=\"nofollow\">uCAN LIN USB CONVERTER</a></li>\n</ul>\n<h2>Installation</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">ucanlintools</span>\n</pre>\n<h2>Example usage</h2>\n<p>To load ldf</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ucanlintools.LDF_parser</span> <span class=\"kn\">import</span> <span class=\"n\">parseLDF</span>\n<span class=\"n\">ldf</span> <span class=\"o\">=</span> <span class=\"n\">parseLDF</span><span class=\"p\">(</span><span class=\"s2\">\"D:</span><span class=\"se\">\\\\</span><span class=\"s2\">ldfe.ldf\"</span><span class=\"p\">)</span> \n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">ldf</span><span class=\"o\">.</span><span class=\"n\">get_message_by_name</span><span class=\"p\">(</span><span class=\"s1\">'FRAME_A'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">signals</span><span class=\"p\">)</span>\n</pre>\n<p>To decode/ encode frame</p>\n<pre><span class=\"n\">aaa</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">({</span><span class=\"s1\">'SIGNAL_A'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})</span>\n<span class=\"n\">bbb</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x00\\x00\\x00\\x00\\x00\\x00</span><span class=\"s1\">'</span>\n<span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">bbb</span><span class=\"p\">)</span>\n</pre>\n<p>To setup LIN USB Converter</p>\n<pre><span class=\"n\">lin</span> <span class=\"o\">=</span> <span class=\"n\">ucanlintools</span><span class=\"o\">.</span><span class=\"n\">LUC</span><span class=\"p\">(</span><span class=\"s1\">'COM7'</span><span class=\"p\">)</span>\n<span class=\"n\">lin</span><span class=\"o\">.</span><span class=\"n\">set_frame_rx_handler</span><span class=\"p\">(</span><span class=\"n\">rx_any</span><span class=\"p\">)</span>\n<span class=\"n\">lin</span><span class=\"o\">.</span><span class=\"n\">set_new_frame_rx_handler</span><span class=\"p\">(</span><span class=\"n\">rx_new_data</span><span class=\"p\">)</span>\n\n<span class=\"n\">lin</span><span class=\"o\">.</span><span class=\"n\">openAsMaster</span><span class=\"p\">()</span>\n\n<span class=\"n\">lin</span><span class=\"o\">.</span><span class=\"n\">addReceptionFrameToTable</span><span class=\"p\">(</span><span class=\"mi\">52</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n<span class=\"n\">lin</span><span class=\"o\">.</span><span class=\"n\">addReceptionFrameToTable</span><span class=\"p\">(</span><span class=\"mi\">54</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n<span class=\"n\">lin</span><span class=\"o\">.</span><span class=\"n\">enable</span><span class=\"p\">()</span>\n</pre>\n<p>Example data reception handler</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">rx_new_data</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">):</span>\n        <span class=\"k\">global</span> <span class=\"n\">message</span>\n        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">\": \"</span> <span class=\"o\">+</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()))</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">==</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">):</span>\n                <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">diff_str</span><span class=\"p\">())</span>\n</pre>\n<h2>For more info see</h2>\n<p><a href=\"https://ucandevices.github.io\" rel=\"nofollow\">https://ucandevices.github.io</a></p>\n\n          </div>"}, "last_serial": 5225356, "releases": {"0.0.5": [{"comment_text": "", "digests": {"md5": "d3c9c03fcef2c521a451e15696a1c2da", "sha256": "5a469970416258b70d852226c7cce27a0d7062a0b6bcaa0218ef8d46d8100097"}, "downloads": -1, "filename": "ucanlintools-0.0.5.tar.gz", "has_sig": false, "md5_digest": "d3c9c03fcef2c521a451e15696a1c2da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7760, "upload_time": "2019-04-30T10:38:59", "upload_time_iso_8601": "2019-04-30T10:38:59.150801Z", "url": "https://files.pythonhosted.org/packages/fe/f6/e5a2b3ce513b7d145f7d5a68005df4dc7ddb4ee55fe25845e14e3bf5d045/ucanlintools-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "8990b73f4d3bda956bc49b2f0f05a3f2", "sha256": "8ffc5553586e6d13d6996c495c78e7ccebdfe8b198b9190e4a5e712065878358"}, "downloads": -1, "filename": "ucanlintools-0.0.6.tar.gz", "has_sig": false, "md5_digest": "8990b73f4d3bda956bc49b2f0f05a3f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7771, "upload_time": "2019-04-30T10:49:18", "upload_time_iso_8601": "2019-04-30T10:49:18.990778Z", "url": "https://files.pythonhosted.org/packages/8c/e8/734b9313f2f9ff34ba28d7b5c8e3f0e8a338d1050badf20b57b2f6a4fd82/ucanlintools-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "6b62c5dff5bfd60aec9f783aeec8e1f6", "sha256": "bcc3d85d91603d8c63811410b03fc90bcb8653c684994375820d7bca4e134f09"}, "downloads": -1, "filename": "ucanlintools-0.0.7.tar.gz", "has_sig": false, "md5_digest": "6b62c5dff5bfd60aec9f783aeec8e1f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8623, "upload_time": "2019-05-02T11:34:36", "upload_time_iso_8601": "2019-05-02T11:34:36.328263Z", "url": "https://files.pythonhosted.org/packages/41/f5/3c418dd2665aeebc34e110180bf5feb352cb13ad7077ae71be35281c0386/ucanlintools-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "bcb22dba5965194236ceaea4904f580b", "sha256": "b245d8729870be9741d8d222fdfd6bbebac43d8284e8ab4a51d85e8efea02dcf"}, "downloads": -1, "filename": "ucanlintools-0.0.8.tar.gz", "has_sig": false, "md5_digest": "bcb22dba5965194236ceaea4904f580b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8675, "upload_time": "2019-05-04T10:41:54", "upload_time_iso_8601": "2019-05-04T10:41:54.683346Z", "url": "https://files.pythonhosted.org/packages/31/11/53fb675f512fc214f505f8b22a6c96e5e4388e0150548c1cc86b6420d083/ucanlintools-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "88a58157e032647df722fe7294250e33", "sha256": "061c2f398a63f195399292f9f4bd6b73831d956d32833af6ac5dd0cdf41be498"}, "downloads": -1, "filename": "ucanlintools-0.0.9.tar.gz", "has_sig": false, "md5_digest": "88a58157e032647df722fe7294250e33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7993, "upload_time": "2019-05-04T11:20:25", "upload_time_iso_8601": "2019-05-04T11:20:25.084432Z", "url": "https://files.pythonhosted.org/packages/85/05/340051629d12aeb5549ccbe08a57dd002a414e55f3f80a22425c268f1a9e/ucanlintools-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "88a58157e032647df722fe7294250e33", "sha256": "061c2f398a63f195399292f9f4bd6b73831d956d32833af6ac5dd0cdf41be498"}, "downloads": -1, "filename": "ucanlintools-0.0.9.tar.gz", "has_sig": false, "md5_digest": "88a58157e032647df722fe7294250e33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7993, "upload_time": "2019-05-04T11:20:25", "upload_time_iso_8601": "2019-05-04T11:20:25.084432Z", "url": "https://files.pythonhosted.org/packages/85/05/340051629d12aeb5549ccbe08a57dd002a414e55f3f80a22425c268f1a9e/ucanlintools-0.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:42:13 2020"}