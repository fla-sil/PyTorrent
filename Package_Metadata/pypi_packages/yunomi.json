{"info": {"author": "David Reid", "author_email": "dreid@dreid.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "YUNOMI: Y U NO MEASURE IT\n=========================\n\n.. image:: https://badge.fury.io/py/yunomi.png\n    :target: http://badge.fury.io/py/yunomi\n\n.. image:: https://secure.travis-ci.org/dreid/yunomi.png?branch=master\n        :target: http://travis-ci.org/dreid/yunomi\n\nAs in:\n\n   It has performance implications, Y U NO MEASURE IT!?\n\nYunomi provides insights to the internal behavior of an application, providing useful statistics and metrics on selected portions of your code.\nIt\u2019s a Python port of the core portion of a `Java Metrics library by Coda Hale <http://metrics.codahale.com/>`_.\n\nStop guessing, start measuring:\n   \n.. code-block:: bash\n\n   $ pip install yunomi\n\nCore Features\n-------------\n\nCounter\n+++++++\n\nSimple interface to increment and decrement a value.\nFor example, this can be used to measure the total number of jobs sent to the queue, as well as the pending (not yet complete) number of jobs in the queue.\nSimply increment the counter when an operation starts and decrement it when it completes.\n\nMeter\n+++++\n\nMeasures the rate of events over time.\nUseful to track how often a certain portion of your application gets requests so you can set resources accordingly.\nTracks the mean rate (the overall rate since the meter was reset) and the rate statistically significant regarding only events that have happened in the last 1, 5, and 15 minutes (Exponentially weighted moving average).\n\nHistogram\n+++++++++\n\nMeasures the statistical distribution of values in a data stream.\nKeeps track of minimum, maximum, mean, standard deviation, etc.\nIt also measures median, 75th, 90th, 95th, 98th, 99th, and 99.9th percentiles.\nAn example use case would be for looking at the number of daily logins for 99 percent of your days, ignoring outliers.\n\nTimer\n+++++\n\nA useful combination of the Meter and the Histogram letting you measure the rate that a portion of code is called and a distribution of the duration of an operation.\nYou can see, for example, how often your code hits the database and how long those operations tend to take.\n\n\nExamples\n--------\n\nDecorators\n++++++++++\n\nThe simplest and easiest way to use the yunomi library.\n\nCounter\n^^^^^^^\n\nYou can use the `count_calls` decorator to count the number of times a function is called.\n\n.. code-block:: pycon\n\n    >>> from yunomi import counter, count_calls\n    >>> @count_calls\n    ... def test():\n    ...     pass\n    ... \n    >>> for i in xrange(10):\n    ...     test()\n    ... \n    >>> print counter(\"test_calls\").get_count()\n    10\n\nTimer\n^^^^^\n\nYou can use the `time_calls` decorator to time the execution of a function and get distributtion data from it.\n\n.. code-block:: pycon\n\n    >>> import time\n    >>> from yunomi import timer, time_calls\n    >>> @time_calls\n    ... def test():\n    ...     time.sleep(0.1)\n    ... \n    >>> for i in xrange(10):\n    ...     test()\n    ... \n    >>> print timer(\"test_calls\").get_mean()\n    0.100820207596\n\n\nRequirements\n------------\n\nYunomi has no external dependencies and runs on PyPy and Python 2.6, 2.7, and 3.3.\n\n\n.. :changelog:\n\nHistory\n-------\n\n0.3.0 (2013-07-27)\n++++++++++++++++++\n\n- Python 3.3 is now supported additionally to 2.6 and 2.7.\n- Decorators don\u2019t eat return values anymore.\n- Meters can be reset now.", "description_content_type": null, "docs_url": "https://pythonhosted.org/yunomi/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dreid/yunomi", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "yunomi", "package_url": "https://pypi.org/project/yunomi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/yunomi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dreid/yunomi"}, "release_url": "https://pypi.org/project/yunomi/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "A Python metrics library with rate, statistical distribution, and timing information.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/yunomi\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/yunomi.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b09fb98e5ec06ddc9333cfecb869dcf4eb01785e/68747470733a2f2f62616467652e667572792e696f2f70792f79756e6f6d692e706e67\"></a>\n<a href=\"http://travis-ci.org/dreid/yunomi\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/dreid/yunomi.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c4622c73be48a364314787f7308bc648ca3456a5/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f64726569642f79756e6f6d692e706e673f6272616e63683d6d6173746572\"></a>\n<p>As in:</p>\n<blockquote>\nIt has performance implications, Y U NO MEASURE IT!?</blockquote>\n<p>Yunomi provides insights to the internal behavior of an application, providing useful statistics and metrics on selected portions of your code.\nIt\u2019s a Python port of the core portion of a <a href=\"http://metrics.codahale.com/\" rel=\"nofollow\">Java Metrics library by Coda Hale</a>.</p>\n<p>Stop guessing, start measuring:</p>\n<pre>$ pip install yunomi\n</pre>\n<div id=\"core-features\">\n<h2>Core Features</h2>\n<div id=\"counter\">\n<h3>Counter</h3>\n<p>Simple interface to increment and decrement a value.\nFor example, this can be used to measure the total number of jobs sent to the queue, as well as the pending (not yet complete) number of jobs in the queue.\nSimply increment the counter when an operation starts and decrement it when it completes.</p>\n</div>\n<div id=\"meter\">\n<h3>Meter</h3>\n<p>Measures the rate of events over time.\nUseful to track how often a certain portion of your application gets requests so you can set resources accordingly.\nTracks the mean rate (the overall rate since the meter was reset) and the rate statistically significant regarding only events that have happened in the last 1, 5, and 15 minutes (Exponentially weighted moving average).</p>\n</div>\n<div id=\"histogram\">\n<h3>Histogram</h3>\n<p>Measures the statistical distribution of values in a data stream.\nKeeps track of minimum, maximum, mean, standard deviation, etc.\nIt also measures median, 75th, 90th, 95th, 98th, 99th, and 99.9th percentiles.\nAn example use case would be for looking at the number of daily logins for 99 percent of your days, ignoring outliers.</p>\n</div>\n<div id=\"timer\">\n<h3>Timer</h3>\n<p>A useful combination of the Meter and the Histogram letting you measure the rate that a portion of code is called and a distribution of the duration of an operation.\nYou can see, for example, how often your code hits the database and how long those operations tend to take.</p>\n</div>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<h2 id=\"decorators\"><span class=\"section-subtitle\">Decorators</span></h2>\n<p>The simplest and easiest way to use the yunomi library.</p>\n<div id=\"id1\">\n<h3>Counter</h3>\n<p>You can use the <cite>count_calls</cite> decorator to count the number of times a function is called.</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">yunomi</span> <span class=\"kn\">import</span> <span class=\"n\">counter</span><span class=\"p\">,</span> <span class=\"n\">count_calls</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nd\">@count_calls</span>\n<span class=\"gp\">... </span><span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">():</span>\n<span class=\"gp\">... </span>    <span class=\"k\">pass</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">xrange</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">test</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span> <span class=\"n\">counter</span><span class=\"p\">(</span><span class=\"s2\">\"test_calls\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_count</span><span class=\"p\">()</span>\n<span class=\"go\">10</span>\n</pre>\n</div>\n<div id=\"id2\">\n<h3>Timer</h3>\n<p>You can use the <cite>time_calls</cite> decorator to time the execution of a function and get distributtion data from it.</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">yunomi</span> <span class=\"kn\">import</span> <span class=\"n\">timer</span><span class=\"p\">,</span> <span class=\"n\">time_calls</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nd\">@time_calls</span>\n<span class=\"gp\">... </span><span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">():</span>\n<span class=\"gp\">... </span>    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">xrange</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">test</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span> <span class=\"n\">timer</span><span class=\"p\">(</span><span class=\"s2\">\"test_calls\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_mean</span><span class=\"p\">()</span>\n<span class=\"go\">0.100820207596</span>\n</pre>\n</div>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Yunomi has no external dependencies and runs on PyPy and Python 2.6, 2.7, and 3.3.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id3\"><span class=\"section-subtitle\">0.3.0 (2013-07-27)</span></h2>\n<ul>\n<li>Python 3.3 is now supported additionally to 2.6 and 2.7.</li>\n<li>Decorators don\u2019t eat return values anymore.</li>\n<li>Meters can be reset now.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 826208, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "281fcf5b25271493182cff0f8f3392c9", "sha256": "af7cf2f93cba4e7d9a4fd7c824d248e41fce46e0175ae8e0836b7b1d3ba78023"}, "downloads": -1, "filename": "yunomi-0.1.1-py2.7.egg", "has_sig": false, "md5_digest": "281fcf5b25271493182cff0f8f3392c9", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 1867, "upload_time": "2012-07-26T02:38:04", "upload_time_iso_8601": "2012-07-26T02:38:04.245071Z", "url": "https://files.pythonhosted.org/packages/29/41/14554d78b7aa53a38bf31171e692df667502d7aa58b840a4ed9166d116a9/yunomi-0.1.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c30e0e90a4a3ee25bb4b37bbd4aaaaa", "sha256": "742e2dabd562cd52e64571d34045379445c33359286f5c232fbff9a8472d3c47"}, "downloads": -1, "filename": "yunomi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0c30e0e90a4a3ee25bb4b37bbd4aaaaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1023, "upload_time": "2012-07-26T02:41:10", "upload_time_iso_8601": "2012-07-26T02:41:10.453175Z", "url": "https://files.pythonhosted.org/packages/42/a3/fa92e78a7e694fecb52dd85a0a7f7e67d244b0dbb45778afc6a98168fee8/yunomi-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "31394467dcae709b179ddf3ebcc4dee6", "sha256": "4db488fa4a10f13d5205307910a4887305282ff29c49d861818a4fa6ac16522f"}, "downloads": -1, "filename": "yunomi-0.2.0-py2.7.egg", "has_sig": false, "md5_digest": "31394467dcae709b179ddf3ebcc4dee6", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 1867, "upload_time": "2012-07-28T02:17:56", "upload_time_iso_8601": "2012-07-28T02:17:56.725573Z", "url": "https://files.pythonhosted.org/packages/4a/c4/6784a3e953ee12f947ab7afad4a132b8c19625ae6c7eb5712ca8475432f1/yunomi-0.2.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e806d8a4d830f76c15371334820abf03", "sha256": "c8717d09ee53c9b5db8f2ef24f39f60d60bc461e96d70ecb4900c826bc9f504d"}, "downloads": -1, "filename": "yunomi-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e806d8a4d830f76c15371334820abf03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1026, "upload_time": "2012-07-28T02:15:55", "upload_time_iso_8601": "2012-07-28T02:15:55.501416Z", "url": "https://files.pythonhosted.org/packages/f1/3c/bbbb471e3c183b119e96912ec64167134977e6c528945e0021128f1e4c32/yunomi-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "3c95b6567be8143219e8295e9c5d7b09", "sha256": "f668ac58aa10466c68fd7a613e2207125eb9da3f7ea6494d78b14feaf859f587"}, "downloads": -1, "filename": "yunomi-0.2.1-py2.7.egg", "has_sig": false, "md5_digest": "3c95b6567be8143219e8295e9c5d7b09", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 1959, "upload_time": "2012-07-28T02:32:04", "upload_time_iso_8601": "2012-07-28T02:32:04.050588Z", "url": "https://files.pythonhosted.org/packages/5e/51/684e10f19fb59d0bd02b487a01ae7eaedb9b59f275ecd383a6adf0916e08/yunomi-0.2.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed4b0bf1e6f79e1e79c9d2bf240b5c0a", "sha256": "93cb38fe29ae029727caa2500539991d48628a1881d6fcf1f9cec476d239d357"}, "downloads": -1, "filename": "yunomi-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ed4b0bf1e6f79e1e79c9d2bf240b5c0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1064, "upload_time": "2012-07-28T02:32:02", "upload_time_iso_8601": "2012-07-28T02:32:02.877310Z", "url": "https://files.pythonhosted.org/packages/55/ab/33e6fae1e492d1d6605edc74f683f8f6b983d59246e761fc592774cd5650/yunomi-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "058cc166efadb6951daba837714fdf21", "sha256": "9e494e5caddb8200703a5c3a6f2491822909281835f7ef9bef7bc3316ec7e3d2"}, "downloads": -1, "filename": "yunomi-0.2.2-py2.7.egg", "has_sig": false, "md5_digest": "058cc166efadb6951daba837714fdf21", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 28506, "upload_time": "2012-07-30T23:56:25", "upload_time_iso_8601": "2012-07-30T23:56:25.185326Z", "url": "https://files.pythonhosted.org/packages/e6/a4/3192022a7851bedfa777e75a6f547d64685930d6e6fb7ee17c51ef9c06b5/yunomi-0.2.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "06850052020c960a90942e92431b4f2d", "sha256": "d0c69e041416c3aab8b4ff36585490945f931d20f7cf80b13f7e7a797e4fb994"}, "downloads": -1, "filename": "yunomi-0.2.2.tar.gz", "has_sig": false, "md5_digest": "06850052020c960a90942e92431b4f2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8430, "upload_time": "2012-07-30T23:56:22", "upload_time_iso_8601": "2012-07-30T23:56:22.536755Z", "url": "https://files.pythonhosted.org/packages/b9/f2/2b81c53dcb5381702639c523736f9c7de91e0bb60a958cc55609c2740a99/yunomi-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "177197af818d381ffa6ef9a31997007a", "sha256": "0a57d8277109458d85371d41afdbf749edee824fffc559542e6680fa59ad6ca8"}, "downloads": -1, "filename": "yunomi-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "177197af818d381ffa6ef9a31997007a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 23669, "upload_time": "2013-07-27T11:48:54", "upload_time_iso_8601": "2013-07-27T11:48:54.879067Z", "url": "https://files.pythonhosted.org/packages/b8/f0/38c36e0a71f545334a8eb1d6016896be4a44c06dd98f1854db22545ce63c/yunomi-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b5ca30ef9c68aa33488e2fdb26cf31c", "sha256": "91fceddbb4716cba81219a1f70dd3814e128a4352698520e1ed355ab9cb7db87"}, "downloads": -1, "filename": "yunomi-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7b5ca30ef9c68aa33488e2fdb26cf31c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14218, "upload_time": "2013-07-27T09:18:54", "upload_time_iso_8601": "2013-07-27T09:18:54.526345Z", "url": "https://files.pythonhosted.org/packages/6b/58/9aacb24163fa5fcc380217fe4057ec17c624eee3f34a6618737225981e30/yunomi-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "177197af818d381ffa6ef9a31997007a", "sha256": "0a57d8277109458d85371d41afdbf749edee824fffc559542e6680fa59ad6ca8"}, "downloads": -1, "filename": "yunomi-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "177197af818d381ffa6ef9a31997007a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 23669, "upload_time": "2013-07-27T11:48:54", "upload_time_iso_8601": "2013-07-27T11:48:54.879067Z", "url": "https://files.pythonhosted.org/packages/b8/f0/38c36e0a71f545334a8eb1d6016896be4a44c06dd98f1854db22545ce63c/yunomi-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b5ca30ef9c68aa33488e2fdb26cf31c", "sha256": "91fceddbb4716cba81219a1f70dd3814e128a4352698520e1ed355ab9cb7db87"}, "downloads": -1, "filename": "yunomi-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7b5ca30ef9c68aa33488e2fdb26cf31c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14218, "upload_time": "2013-07-27T09:18:54", "upload_time_iso_8601": "2013-07-27T09:18:54.526345Z", "url": "https://files.pythonhosted.org/packages/6b/58/9aacb24163fa5fcc380217fe4057ec17c624eee3f34a6618737225981e30/yunomi-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:21:21 2020"}