{"info": {"author": "Eero Paukkonen", "author_email": "eero.paukkonen@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "========================\r\ndjango_celery_async_view\r\n========================\r\n\r\n.. image:: https://travis-ci.org/EeroPaukkonen/django_celery_async_view.svg?branch=master\r\n    :target: https://travis-ci.org/EeroPaukkonen/django_celery_async_view\r\n\r\n.. image:: https://codecov.io/gh/EeroPaukkonen/django_celery_async_view/branch/master/graph/badge.svg\r\n    :target: https://codecov.io/gh/EeroPaukkonen/django_celery_async_view\r\n\r\nAsynchronously load view or download file in django.\r\nThis is done by rendering view or creating file in celery task and polling it in javascript.\r\n\r\n-------------\r\nDocumentation\r\n-------------\r\n\r\nThe full documentation is at https://django_celery_async_view.readthedocs.io.\r\n\r\n----------\r\nQuickstart\r\n----------\r\n\r\nInstall django_celery_async_view::\r\n\r\n    pip install django_celery_async_view\r\n\r\nAdd it to your `INSTALLED_APPS`:\r\n\r\n.. code-block:: python\r\n\r\n    INSTALLED_APPS = (\r\n        ...\r\n        'django_celery_async_view',\r\n        ...\r\n    )\r\n\r\nFeatures\r\n========\r\n\r\nThis package includes two separate features: AsyncView and AsyncDownload.\r\n\r\nAsyncView\r\n---------\r\nexample_app.views.py\r\n\r\n.. code-block:: python\r\n\r\n    class ExampleView(AsyncDownloadView):\r\n        task = example_view_task\r\n\r\nexample_app.tasks.py\r\n\r\n.. code-block:: python\r\n\r\n    @shared_task\r\n    def example_view_task(user_id):\r\n        return AsyncViewReturnHTML().run(\r\n            user_id=user_id,\r\n            html_string=create_html_example(...)\r\n        )\r\n\r\nexample_download_page.html\r\n\r\n.. code-block:: html\r\n\r\n    <!-- jQuery before django_celery_async_view -->\r\n    <script type=\"text/javascript\" src=\"{% static \"path/to/jquery.js\" %}\"></script>\r\n    <script type=\"text/javascript\" src=\"{% static \"django_celery_async_view/django_celery_async_view.js\" %}\"></script>\r\n    <script>\r\n        var task_id = '{{task_id}}';\r\n        var poll_interval = 10000;\r\n        AsyncViews.initAsyncView(poll_interval, task_id);\r\n    </script>\r\n\r\nAsyncDownload\r\n-------------\r\n\r\nexample_app.views.py\r\n\r\n.. code-block:: python\r\n\r\n    class ExampleDownloadView(AsyncDownloadView):\r\n        task = my_download_task\r\n\r\nexample_async_page.html\r\n\r\n.. code-block:: html\r\n\r\n    <script src=\"{% static \"django_celery_async_view/django_celery_async_view.js\" %}\"></script>\r\n\r\n      <script>\r\n          $(document).ready(function(){\r\n              var poll_interval = 5 * 1000;  // 5s\r\n              var task_id = '{{task_id}}';\r\n              AsyncViews.initAsyncView(poll_interval, task_id);\r\n          });\r\n      </script>\r\n\r\nexample_app.tasks.py\r\n\r\n.. code-block:: python\r\n\r\n  @shared_task\r\n  def example_download_task(*args, **kwargs):\r\n    return MyDownloadCreateFile().run(*args, **kwargs)\r\n\r\n  class ExampleDownloadCreateFile(AbstractAsyncDownloadCreateFile):\r\n    def create_file(self, some_arg):\r\n      # do stuff to create:\r\n      # file_content, filename, mimetype\r\n      return file_content, filename, mimetype\r\n\r\nexample_download_page.html\r\n\r\n.. code-block:: html\r\n\r\n    <!-- jQuery before django_celery_async_view -->\r\n    <script type=\"text/javascript\" src=\"{% static \"path/to/jquery.js\" %}\"></script>\r\n    <script type=\"text/javascript\" src=\"{% static \"django_celery_async_view/django_celery_async_view.js\" %}\"></script>\r\n    <button>DOWNLOAD</button>\r\n    <button class=\"async-download-button\"\r\n            data-href=\"/example-download/\" data-poll-interval=\"5000\">\r\n        Async Download\r\n    </button>\r\n\r\n\r\nConfigurations\r\n==============\r\n\r\nsettings.py\r\n\r\n.. code-block:: python\r\n\r\n    ASYNC_VIEW_TEMP_FILE_DURATION_MS = 10 * 60 * 1000  # 10min\r\n\r\n-----------------------\r\nRunning Example Project\r\n-----------------------\r\n\r\nRequires redis.\r\nDoes not require postgres (tests require postgres)\r\n\r\n::\r\n\r\n    # setup\r\n    # install redis\r\n    cd example\r\n    virtualenv venv\r\n    source venv/bin/activate\r\n    pip install -r requirements.txt\r\n    python manage.py migrate\r\n\r\n    # run:\r\n    # run redis (if not running)\r\n    celery worker -A example\r\n    python manage.py runserver\r\n\r\n\r\n-------------\r\nRunning Tests\r\n-------------\r\n\r\nTests are run against example project?\r\nTests require postgres and\r\n\r\n    A) env var POSTGRES_PASSWORD set\r\n    B) or no postgres server authentication\r\n\r\n::\r\n\r\n    virtualenv venv\r\n    source venv/bin/activate\r\n    (myenv) $ pip install tox\r\n    (myenv) $ tox\r\n\r\n-----------\r\nDevelopment\r\n-----------\r\n\r\nWhat needs to be fixed for Python3 support\r\n==========================================\r\n\r\n1) copy celerytest project and set celerytest.__init__ imports to absolute\r\n\r\n::\r\n\r\n    celerytest.__init__.py:1: in <module>\r\n    from config import CELERY_TEST_CONFIG, CELERY_TEST_CONFIG_MEMORY\r\n    ImportError: No module named 'config'\r\n\r\n2) AsyncResult(task_id).wait(timeout=5, interval=0.5) and possibly result.get() will break.\r\n\r\n::\r\n\r\n    example\\example\\tests\\test_async_views.py:50: in phase3\r\n    example_view_task.AsyncResult(task_id).wait(timeout=5, interval=0.5)\r\n\r\n        if meta:\r\n                self._maybe_set_cache(meta)\r\n                status = meta['status']\r\n                if status in PROPAGATE_STATES and propagate:\r\n    >               raise meta['result']\r\n    E               TypeError: exceptions must derive from BaseException\r\n\r\n    celery\\result.py:175: TypeError\r\n\r\n\r\nCredits\r\n-------\r\n\r\nTools used in rendering this package:\r\n\r\n*  Cookiecutter_\r\n*  `cookiecutter-djangopackage`_\r\n\r\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\r\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\r\n\r\n\r\n\r\n\r\nHistory\r\n-------\r\n\r\n0.1.0 (2017-11-14)\r\n++++++++++++++++++\r\n\r\n* First release on PyPI.\r\n\r\n\r\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/EeroPaukkonen/django_celery_async_view", "keywords": "django_celery_async_view,django,celery", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-celery-async-view", "package_url": "https://pypi.org/project/django-celery-async-view/", "platform": "", "project_url": "https://pypi.org/project/django-celery-async-view/", "project_urls": {"Homepage": "https://github.com/EeroPaukkonen/django_celery_async_view"}, "release_url": "https://pypi.org/project/django-celery-async-view/0.1.0/", "requires_dist": ["django-db-file-storage (==0.4.3)"], "requires_python": "", "summary": "Asynchronously load view or download file in django.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/EeroPaukkonen/django_celery_async_view\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/EeroPaukkonen/django_celery_async_view.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cfd733610eeacc18a578f9b2ebf9e8c037af22d4/68747470733a2f2f7472617669732d63692e6f72672f4565726f5061756b6b6f6e656e2f646a616e676f5f63656c6572795f6173796e635f766965772e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/EeroPaukkonen/django_celery_async_view\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/EeroPaukkonen/django_celery_async_view/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27555ba2f40e277a32cb11394a44c984181e6b2d/68747470733a2f2f636f6465636f762e696f2f67682f4565726f5061756b6b6f6e656e2f646a616e676f5f63656c6572795f6173796e635f766965772f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>Asynchronously load view or download file in django.\nThis is done by rendering view or creating file in celery task and polling it in javascript.</p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The full documentation is at <a href=\"https://django_celery_async_view.readthedocs.io\" rel=\"nofollow\">https://django_celery_async_view.readthedocs.io</a>.</p>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Install django_celery_async_view:</p>\n<pre>pip install django_celery_async_view\n</pre>\n<p>Add it to your <cite>INSTALLED_APPS</cite>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_celery_async_view'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<div id=\"features\">\n<h3>Features</h3>\n<p>This package includes two separate features: AsyncView and AsyncDownload.</p>\n<div id=\"asyncview\">\n<h4>AsyncView</h4>\n<p>example_app.views.py</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ExampleView</span><span class=\"p\">(</span><span class=\"n\">AsyncDownloadView</span><span class=\"p\">):</span>\n    <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">example_view_task</span>\n</pre>\n<p>example_app.tasks.py</p>\n<pre><span class=\"nd\">@shared_task</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_view_task</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">AsyncViewReturnHTML</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span>\n        <span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">user_id</span><span class=\"p\">,</span>\n        <span class=\"n\">html_string</span><span class=\"o\">=</span><span class=\"n\">create_html_example</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>example_download_page.html</p>\n<pre><span class=\"c\">&lt;!-- jQuery before django_celery_async_view --&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{% static \"</span><span class=\"na\">path</span><span class=\"err\">/</span><span class=\"na\">to</span><span class=\"err\">/</span><span class=\"na\">jquery</span><span class=\"err\">.</span><span class=\"na\">js</span><span class=\"err\">\"</span> <span class=\"err\">%}\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{% static \"</span><span class=\"na\">django_celery_async_view</span><span class=\"err\">/</span><span class=\"na\">django_celery_async_view</span><span class=\"err\">.</span><span class=\"na\">js</span><span class=\"err\">\"</span> <span class=\"err\">%}\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">task_id</span> <span class=\"o\">=</span> <span class=\"s1\">'{{task_id}}'</span><span class=\"p\">;</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">poll_interval</span> <span class=\"o\">=</span> <span class=\"mi\">10000</span><span class=\"p\">;</span>\n    <span class=\"nx\">AsyncViews</span><span class=\"p\">.</span><span class=\"nx\">initAsyncView</span><span class=\"p\">(</span><span class=\"nx\">poll_interval</span><span class=\"p\">,</span> <span class=\"nx\">task_id</span><span class=\"p\">);</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n<div id=\"asyncdownload\">\n<h4>AsyncDownload</h4>\n<p>example_app.views.py</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ExampleDownloadView</span><span class=\"p\">(</span><span class=\"n\">AsyncDownloadView</span><span class=\"p\">):</span>\n    <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">my_download_task</span>\n</pre>\n<p>example_async_page.html</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{% static \"</span><span class=\"na\">django_celery_async_view</span><span class=\"err\">/</span><span class=\"na\">django_celery_async_view</span><span class=\"err\">.</span><span class=\"na\">js</span><span class=\"err\">\"</span> <span class=\"err\">%}\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n\n  <span class=\"p\">&lt;</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n      <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n          <span class=\"kd\">var</span> <span class=\"nx\">poll_interval</span> <span class=\"o\">=</span> <span class=\"mi\">5</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span><span class=\"p\">;</span>  <span class=\"c1\">// 5s\n</span>          <span class=\"kd\">var</span> <span class=\"nx\">task_id</span> <span class=\"o\">=</span> <span class=\"s1\">'{{task_id}}'</span><span class=\"p\">;</span>\n          <span class=\"nx\">AsyncViews</span><span class=\"p\">.</span><span class=\"nx\">initAsyncView</span><span class=\"p\">(</span><span class=\"nx\">poll_interval</span><span class=\"p\">,</span> <span class=\"nx\">task_id</span><span class=\"p\">);</span>\n      <span class=\"p\">});</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n</pre>\n<p>example_app.tasks.py</p>\n<pre><span class=\"nd\">@shared_task</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_download_task</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n  <span class=\"k\">return</span> <span class=\"n\">MyDownloadCreateFile</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleDownloadCreateFile</span><span class=\"p\">(</span><span class=\"n\">AbstractAsyncDownloadCreateFile</span><span class=\"p\">):</span>\n  <span class=\"k\">def</span> <span class=\"nf\">create_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">some_arg</span><span class=\"p\">):</span>\n    <span class=\"c1\"># do stuff to create:</span>\n    <span class=\"c1\"># file_content, filename, mimetype</span>\n    <span class=\"k\">return</span> <span class=\"n\">file_content</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">mimetype</span>\n</pre>\n<p>example_download_page.html</p>\n<pre><span class=\"c\">&lt;!-- jQuery before django_celery_async_view --&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{% static \"</span><span class=\"na\">path</span><span class=\"err\">/</span><span class=\"na\">to</span><span class=\"err\">/</span><span class=\"na\">jquery</span><span class=\"err\">.</span><span class=\"na\">js</span><span class=\"err\">\"</span> <span class=\"err\">%}\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{% static \"</span><span class=\"na\">django_celery_async_view</span><span class=\"err\">/</span><span class=\"na\">django_celery_async_view</span><span class=\"err\">.</span><span class=\"na\">js</span><span class=\"err\">\"</span> <span class=\"err\">%}\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">button</span><span class=\"p\">&gt;</span>DOWNLOAD<span class=\"p\">&lt;/</span><span class=\"nt\">button</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">button</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"async-download-button\"</span>\n        <span class=\"na\">data-href</span><span class=\"o\">=</span><span class=\"s\">\"/example-download/\"</span> <span class=\"na\">data-poll-interval</span><span class=\"o\">=</span><span class=\"s\">\"5000\"</span><span class=\"p\">&gt;</span>\n    Async Download\n<span class=\"p\">&lt;/</span><span class=\"nt\">button</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n</div>\n<div id=\"configurations\">\n<h3>Configurations</h3>\n<p>settings.py</p>\n<pre><span class=\"n\">ASYNC_VIEW_TEMP_FILE_DURATION_MS</span> <span class=\"o\">=</span> <span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"mi\">60</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span>  <span class=\"c1\"># 10min</span>\n</pre>\n</div>\n</div>\n<div id=\"running-example-project\">\n<h2>Running Example Project</h2>\n<p>Requires redis.\nDoes not require postgres (tests require postgres)</p>\n<pre># setup\n# install redis\ncd example\nvirtualenv venv\nsource venv/bin/activate\npip install -r requirements.txt\npython manage.py migrate\n\n# run:\n# run redis (if not running)\ncelery worker -A example\npython manage.py runserver\n</pre>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>Tests are run against example project?\nTests require postgres and</p>\n<blockquote>\n<ol>\n<li>env var POSTGRES_PASSWORD set</li>\n<li>or no postgres server authentication</li>\n</ol>\n</blockquote>\n<pre>virtualenv venv\nsource venv/bin/activate\n(myenv) $ pip install tox\n(myenv) $ tox\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<h2 id=\"what-needs-to-be-fixed-for-python3-support\"><span class=\"section-subtitle\">What needs to be fixed for Python3 support</span></h2>\n<ol>\n<li>copy celerytest project and set celerytest.__init__ imports to absolute</li>\n</ol>\n<pre>celerytest.__init__.py:1: in &lt;module&gt;\nfrom config import CELERY_TEST_CONFIG, CELERY_TEST_CONFIG_MEMORY\nImportError: No module named 'config'\n</pre>\n<ol>\n<li>AsyncResult(task_id).wait(timeout=5, interval=0.5) and possibly result.get() will break.</li>\n</ol>\n<pre>example\\example\\tests\\test_async_views.py:50: in phase3\nexample_view_task.AsyncResult(task_id).wait(timeout=5, interval=0.5)\n\n    if meta:\n            self._maybe_set_cache(meta)\n            status = meta['status']\n            if status in PROPAGATE_STATES and propagate:\n&gt;               raise meta['result']\nE               TypeError: exceptions must derive from BaseException\n\ncelery\\result.py:175: TypeError\n</pre>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>Tools used in rendering this package:</p>\n<ul>\n<li><a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a></li>\n<li><a href=\"https://github.com/pydanny/cookiecutter-djangopackage\" rel=\"nofollow\">cookiecutter-djangopackage</a></li>\n</ul>\n</div>\n<div id=\"history\">\n<h3>History</h3>\n<h3 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2017-11-14)</span></h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3334271, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "747419e45f30f6839f962bf164f22aad", "sha256": "3e6a311409e86a5a42de73aae90c7f40f03005827a6aa1151f81414fdd0f2e1e"}, "downloads": -1, "filename": "django_celery_async_view-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "747419e45f30f6839f962bf164f22aad", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15130, "upload_time": "2017-11-15T07:07:57", "upload_time_iso_8601": "2017-11-15T07:07:57.664718Z", "url": "https://files.pythonhosted.org/packages/4c/69/df17f06d313265c17e45e30f6a1d8e1e7857846bd71c44ffc6e8da4acec9/django_celery_async_view-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "730458af0f2d78e81cbfff897624eb23", "sha256": "a4b520dc578c97f4a830b5c68daf21192990a7b36c8c0ae2c0a73baa95be08ec"}, "downloads": -1, "filename": "django_celery_async_view-0.1.0.tar.gz", "has_sig": false, "md5_digest": "730458af0f2d78e81cbfff897624eb23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13077, "upload_time": "2017-11-15T07:07:59", "upload_time_iso_8601": "2017-11-15T07:07:59.258806Z", "url": "https://files.pythonhosted.org/packages/00/a1/9166f7ed680176b7349cad6f7a710ee74bedf81970cc3ea611ab0994680f/django_celery_async_view-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "747419e45f30f6839f962bf164f22aad", "sha256": "3e6a311409e86a5a42de73aae90c7f40f03005827a6aa1151f81414fdd0f2e1e"}, "downloads": -1, "filename": "django_celery_async_view-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "747419e45f30f6839f962bf164f22aad", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15130, "upload_time": "2017-11-15T07:07:57", "upload_time_iso_8601": "2017-11-15T07:07:57.664718Z", "url": "https://files.pythonhosted.org/packages/4c/69/df17f06d313265c17e45e30f6a1d8e1e7857846bd71c44ffc6e8da4acec9/django_celery_async_view-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "730458af0f2d78e81cbfff897624eb23", "sha256": "a4b520dc578c97f4a830b5c68daf21192990a7b36c8c0ae2c0a73baa95be08ec"}, "downloads": -1, "filename": "django_celery_async_view-0.1.0.tar.gz", "has_sig": false, "md5_digest": "730458af0f2d78e81cbfff897624eb23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13077, "upload_time": "2017-11-15T07:07:59", "upload_time_iso_8601": "2017-11-15T07:07:59.258806Z", "url": "https://files.pythonhosted.org/packages/00/a1/9166f7ed680176b7349cad6f7a710ee74bedf81970cc3ea611ab0994680f/django_celery_async_view-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:13 2020"}