{"info": {"author": "David Thenon", "author_email": "dthenon@emencia.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. _nap: https://github.com/kimmobrunfeldt/nap\n.. _argh: http://argh.readthedocs.org/\n\nREST client to retrieve and push datas on a PO-Projects service.\n\nThe purpose of this client is to install PO files from a PO-Projects translation project in your Django project (or Optimus), or to send updated POT files to update translation project on the service.\n\nInstall\n=======\n\nRequire\n*******\n\n* `nap`_ >= 1.0.0;\n* pkginfo >= 1.2b1;\n* argparse == 1.2.1;\n* argcomplete == 0.8.0;\n* `argh`_ == 0.24.1;\n\nUsage\n=====\n\nBefore starting to use it, you must create a new translation project on you PO-Projects service. Note its ``slug`` name.\n\nAnd so execute the action: ::\n\n    po_projects [ACTION]\n\nBut if it's your first usage, you should need to give some arguments to commandline, check those require ones with the help : ::\n\n    po_projects help [ACTION]\n\nAfter the first successful connect on the service, a 'po_projects.cfg' config file will be writed at the current directory, it will contains all required stuff needed to connect to the service and get the project datas without to specify them again in command arguments.\n\nAlso you can write the config file before the first usage to avoid to give command arguments. Just write this in a \"po_projects.cfg\" file at the root of your project (or everywhere you want to use the client command): ::\n\n    [PO_Project]\n    host = http://192.168.0.103:8001/po/rest/\n    password = mypassword\n    user = myusername\n    locale_path = project/locale\n    project_slug = myslug\n    kind = django\n    django_default_locale = en_US\n\n* ``user`` and ``password`` is from an User account registered on the service API, it needs to be an admin account (``is_staff`` = True);\n* ``host`` is the full URL to use to connect to the service API;\n* ``locale_path`` can be every relative path  or an absolute path to the project locales directory which will contains the message catalogs structure with the PO files;\n* ``kind`` can be ``django`` (for a Django project) or ``messages`` (for common gettext projects like Optimus);\n\nActually you cannot create and register a new project on the service from the client, you have to create it before on the service, then note the slug name to use it with the client.\n\nPull\n****\n\nThis is the command to get the current project translations tarball : ::\n\n    po_projects pull\n\nIt will install or update your locales directory (``locale_path``) from the current existing project on a PO-Project service. Note that the previous locales directory will be replaced with the new one, you should backup it before if you care.\n\n\nPush\n****\n\nThis is the command to update a project translation on the service : ::\n\n    po_projects push\n\nIt will send your current local translation catalog to the service so it will merge the translation strings on the project from extracted strings.\n\nWhen using ``django`` kind, it requires an extra argument ``django_default_locale``, this is the directory name (relative to ``locale_path``) of the locale catalog to send to the service to update a project. ``optimus`` kind doesn't need it because it directly use the POT file that don't exists within a Django project;", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/PO-Projects-client", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "PO-Projects-client", "package_url": "https://pypi.org/project/PO-Projects-client/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/PO-Projects-client/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/PO-Projects-client"}, "release_url": "https://pypi.org/project/PO-Projects-client/0.1.2.1/", "requires_dist": null, "requires_python": null, "summary": "REST client to retrieve and push data on a PO-Projects service", "version": "0.1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>REST client to retrieve and push datas on a PO-Projects service.</p>\n<p>The purpose of this client is to install PO files from a PO-Projects translation project in your Django project (or Optimus), or to send updated POT files to update translation project on the service.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<h2 id=\"require\"><span class=\"section-subtitle\">Require</span></h2>\n<ul>\n<li><a href=\"https://github.com/kimmobrunfeldt/nap\" rel=\"nofollow\">nap</a> &gt;= 1.0.0;</li>\n<li>pkginfo &gt;= 1.2b1;</li>\n<li>argparse == 1.2.1;</li>\n<li>argcomplete == 0.8.0;</li>\n<li><a href=\"http://argh.readthedocs.org/\" rel=\"nofollow\">argh</a> == 0.24.1;</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Before starting to use it, you must create a new translation project on you PO-Projects service. Note its <tt>slug</tt> name.</p>\n<p>And so execute the action:</p>\n<pre>po_projects [ACTION]\n</pre>\n<p>But if it\u2019s your first usage, you should need to give some arguments to commandline, check those require ones with the help :</p>\n<pre>po_projects help [ACTION]\n</pre>\n<p>After the first successful connect on the service, a \u2018po_projects.cfg\u2019 config file will be writed at the current directory, it will contains all required stuff needed to connect to the service and get the project datas without to specify them again in command arguments.</p>\n<p>Also you can write the config file before the first usage to avoid to give command arguments. Just write this in a \u201cpo_projects.cfg\u201d file at the root of your project (or everywhere you want to use the client command):</p>\n<pre>[PO_Project]\nhost = http://192.168.0.103:8001/po/rest/\npassword = mypassword\nuser = myusername\nlocale_path = project/locale\nproject_slug = myslug\nkind = django\ndjango_default_locale = en_US\n</pre>\n<ul>\n<li><tt>user</tt> and <tt>password</tt> is from an User account registered on the service API, it needs to be an admin account (<tt>is_staff</tt> = True);</li>\n<li><tt>host</tt> is the full URL to use to connect to the service API;</li>\n<li><tt>locale_path</tt> can be every relative path  or an absolute path to the project locales directory which will contains the message catalogs structure with the PO files;</li>\n<li><tt>kind</tt> can be <tt>django</tt> (for a Django project) or <tt>messages</tt> (for common gettext projects like Optimus);</li>\n</ul>\n<p>Actually you cannot create and register a new project on the service from the client, you have to create it before on the service, then note the slug name to use it with the client.</p>\n<div id=\"pull\">\n<h3>Pull</h3>\n<p>This is the command to get the current project translations tarball :</p>\n<pre>po_projects pull\n</pre>\n<p>It will install or update your locales directory (<tt>locale_path</tt>) from the current existing project on a PO-Project service. Note that the previous locales directory will be replaced with the new one, you should backup it before if you care.</p>\n</div>\n<div id=\"push\">\n<h3>Push</h3>\n<p>This is the command to update a project translation on the service :</p>\n<pre>po_projects push\n</pre>\n<p>It will send your current local translation catalog to the service so it will merge the translation strings on the project from extracted strings.</p>\n<p>When using <tt>django</tt> kind, it requires an extra argument <tt>django_default_locale</tt>, this is the directory name (relative to <tt>locale_path</tt>) of the locale catalog to send to the service to update a project. <tt>optimus</tt> kind doesn\u2019t need it because it directly use the POT file that don\u2019t exists within a Django project;</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1170119, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4faf201d3d6632af205eaf897b7f75e4", "sha256": "fe5b75428bc77802ae2f59dd1c632bb0316da5f3855e6af32b44070998ea9c2d"}, "downloads": -1, "filename": "PO-Projects-client-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4faf201d3d6632af205eaf897b7f75e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8125, "upload_time": "2014-05-19T19:29:33", "upload_time_iso_8601": "2014-05-19T19:29:33.276041Z", "url": "https://files.pythonhosted.org/packages/44/89/b485f422e97542edc951c2ddecb540c5d2bfa0800aecd2b025ca3daf6e58/PO-Projects-client-0.0.1.tar.gz", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "f16e5e4979e570b564eb8cd8969236a3", "sha256": "42abc938bba5be76040bb704bdc8e429f52959a9e970b446eaa29b0d1227e4f1"}, "downloads": -1, "filename": "PO-Projects-client-0.1.tar.gz", "has_sig": false, "md5_digest": "f16e5e4979e570b564eb8cd8969236a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10593, "upload_time": "2014-06-08T16:12:27", "upload_time_iso_8601": "2014-06-08T16:12:27.982476Z", "url": "https://files.pythonhosted.org/packages/0b/dd/4c6f1b0bc2e2bae00f062e751133e7727d81951d89eee380da07c03c2679/PO-Projects-client-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "691d44df2cb2ebbba09d642dc2588b13", "sha256": "d91d611655dbdddf56caf0990a7a4ee4ccd045dcdbfa9d1db5f771c1add5d10d"}, "downloads": -1, "filename": "PO-Projects-client-0.1.1.tar.gz", "has_sig": false, "md5_digest": "691d44df2cb2ebbba09d642dc2588b13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10639, "upload_time": "2014-06-08T16:37:00", "upload_time_iso_8601": "2014-06-08T16:37:00.222179Z", "url": "https://files.pythonhosted.org/packages/c6/d0/3afff7cad3afadfa2650a9584ee161b055f9ceebe77f8ccdd190784a62dc/PO-Projects-client-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "967db6fca518cfd75d22d79cac8c7be0", "sha256": "0deb10dfcc08456c917d012c73dcce420e62e8743f5e3109fcaf64ff9bfe4d13"}, "downloads": -1, "filename": "PO-Projects-client-0.1.2.tar.gz", "has_sig": false, "md5_digest": "967db6fca518cfd75d22d79cac8c7be0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10653, "upload_time": "2014-07-14T15:22:15", "upload_time_iso_8601": "2014-07-14T15:22:15.955331Z", "url": "https://files.pythonhosted.org/packages/e8/5b/12b1577e31c5b7c2a9cfd6369f78c37ef7a0715153090603788702520985/PO-Projects-client-0.1.2.tar.gz", "yanked": false}], "0.1.2.1": [{"comment_text": "", "digests": {"md5": "20b99d272cebf87a39009136eecfe0ae", "sha256": "a2e93f410584284fa51e22d4a3267dc2b1db9c1e2afbeea40743eab15a7999fd"}, "downloads": -1, "filename": "PO-Projects-client-0.1.2.1.tar.gz", "has_sig": false, "md5_digest": "20b99d272cebf87a39009136eecfe0ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10653, "upload_time": "2014-07-26T13:59:19", "upload_time_iso_8601": "2014-07-26T13:59:19.108685Z", "url": "https://files.pythonhosted.org/packages/02/ff/617eb011e4a3830257b2a1aa79151e0d4612a417a7a36fd5b54b62c8fdbf/PO-Projects-client-0.1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "20b99d272cebf87a39009136eecfe0ae", "sha256": "a2e93f410584284fa51e22d4a3267dc2b1db9c1e2afbeea40743eab15a7999fd"}, "downloads": -1, "filename": "PO-Projects-client-0.1.2.1.tar.gz", "has_sig": false, "md5_digest": "20b99d272cebf87a39009136eecfe0ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10653, "upload_time": "2014-07-26T13:59:19", "upload_time_iso_8601": "2014-07-26T13:59:19.108685Z", "url": "https://files.pythonhosted.org/packages/02/ff/617eb011e4a3830257b2a1aa79151e0d4612a417a7a36fd5b54b62c8fdbf/PO-Projects-client-0.1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:33 2020"}