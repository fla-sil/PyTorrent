{"info": {"author": "Wu Haotian", "author_email": "whtsky@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# pixelmatch-py\n\nPython port of https://github.com/mapbox/pixelmatch.\n\nA fast pixel-level image comparison library, originally created to compare screenshots in tests.\n\nFeatures accurate **anti-aliased pixels detection**\nand **perceptual color difference metrics**.\n\n```python\nfrom pixelmatch import pixelmatch\n\nnum_diff_pixels = pixelmatch(img1, img2, 800, 600, diff, {\n  'threshold': 0.1\n})\n```\n\nImplements ideas from the following papers:\n\n- [Measuring perceived color difference using YIQ NTSC transmission color space in mobile applications](http://www.progmat.uaem.mx:8080/artVol2Num2/Articulo3Vol2Num2.pdf) (2010, Yuriy Kotsarenko, Fernando Ramos)\n- [Anti-aliased pixel and intensity slope detector](https://www.researchgate.net/publication/234126755_Anti-aliased_Pixel_and_Intensity_Slope_Detector) (2009, Vytautas Vy\u0161niauskas)\n\n## Install\n\n```bash\npip install pixelmatch\n```\n\n## API\n\n### pixelmatch(img1, img2, width, height[output, options])\n\n- `img1`, `img2` \u2014 RGBA Image data of the images to compare. **Note:** image dimensions must be equal.\n- `width`, `height` \u2014 Width and height of the images.\n- `output` \u2014 Image data to write the diff to, or `None` if don't need a diff image. Note that _all three images_ need to have the same dimensions.\n  `options` is a dict with the following properties:\n\n- `threshold` \u2014 Matching threshold, ranges from `0` to `1`. Smaller values make the comparison more sensitive. `0.1` by default.\n- `includeAA` \u2014 If `true`, disables detecting and ignoring anti-aliased pixels. `false` by default.\n- `alpha` \u2014 Blending factor of unchanged pixels in the diff output. Ranges from `0` for pure white to `1` for original brightness. `0.1` by default.\n- `aa_color` \u2014 The color of anti-aliased pixels in the diff output in `[R, G, B]` format. `[255, 255, 0]` by default.\n- `diff_color` \u2014 The color of differing pixels in the diff output in `[R, G, B]` format. `[255, 0, 0]` by default.\n- `diff_mask` \u2014 Draw the diff over a transparent background (a mask), rather than over the original image. Will not draw anti-aliased pixels (if detected).\n\nCompares two images, writes the output diff and returns the number of mismatched pixels.\n\n## Example usage\n\n### PIL\n\n```python\nfrom PIL import Image\n\nfrom pixelmatch import pixelmatch\n\n\ndef pil_to_flatten_data(img):\n    \"\"\"\n    Convert data from [(R1, G1, B1, A1), (R2, G2, B2, A2)] to [R1, G1, B1, A1, R2, G2, B2, A2]\n    \"\"\"\n    return [x for p in img.convert(\"RGBA\").getdata() for x in p]\n\nimg_a = Image.open(\"a.png\")\nimg_b = Image.open(\"b.png\")\nwidth, height = img_a.size\n\ndata_a = pil_to_flatten_data(img_a)\ndata_b = pil_to_flatten_data(img_b)\ndata_diff = [0] * len(data_a)\n\nmismatch = pixelmatch(data_a, data_b, width, height, data_diff, {\n    \"includeAA\": True\n})\n\nimg_diff = Image.new(\"RGBA\", img_a.size)\n\ndef flatten_data_to_pil(data):\n    return list(zip(data[::4], data[1::4], data[2::4], data[3::4]))\n\nimg_diff.putdata(flatten_data_to_pil(data_diff))\nimg_diff.save(\"diff.png\")\n```\n\n## Example output\n\n| expected             | actual               | diff                         |\n| -------------------- | -------------------- | ---------------------------- |\n| ![](fixtures/4a.png) | ![](fixtures/4b.png) | ![1diff](fixtures/4diff.png) |\n| ![](fixtures/3a.png) | ![](fixtures/3b.png) | ![1diff](fixtures/3diff.png) |\n| ![](fixtures/6a.png) | ![](fixtures/6b.png) | ![1diff](fixtures/6diff.png) |\n| ![](fixtures/7a.png) | ![](fixtures/7b.png) | ![1diff](fixtures/7diff.png) |\n\n## Changelog\n\n### v0.1.1\n\n- fix: fix bug in fast path [#18](https://github.com/whtsky/pixelmatch-py/pull/18)\n\n### v0.1.0\n\n- Initial release\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/whtsky/pixelmatch-py", "keywords": "", "license": "ISC", "maintainer": "", "maintainer_email": "", "name": "pixelmatch", "package_url": "https://pypi.org/project/pixelmatch/", "platform": "", "project_url": "https://pypi.org/project/pixelmatch/", "project_urls": {"Homepage": "https://github.com/whtsky/pixelmatch-py", "Repository": "https://github.com/whtsky/pixelmatch-py"}, "release_url": "https://pypi.org/project/pixelmatch/0.1.1/", "requires_dist": null, "requires_python": ">=3.6,<4.0", "summary": "A pixel-level image comparison library. Python port of https://github.com/mapbox/pixelmatch", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pixelmatch-py</h1>\n<p>Python port of <a href=\"https://github.com/mapbox/pixelmatch\" rel=\"nofollow\">https://github.com/mapbox/pixelmatch</a>.</p>\n<p>A fast pixel-level image comparison library, originally created to compare screenshots in tests.</p>\n<p>Features accurate <strong>anti-aliased pixels detection</strong>\nand <strong>perceptual color difference metrics</strong>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pixelmatch</span> <span class=\"kn\">import</span> <span class=\"n\">pixelmatch</span>\n\n<span class=\"n\">num_diff_pixels</span> <span class=\"o\">=</span> <span class=\"n\">pixelmatch</span><span class=\"p\">(</span><span class=\"n\">img1</span><span class=\"p\">,</span> <span class=\"n\">img2</span><span class=\"p\">,</span> <span class=\"mi\">800</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"n\">diff</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n  <span class=\"s1\">'threshold'</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span>\n<span class=\"p\">})</span>\n</pre>\n<p>Implements ideas from the following papers:</p>\n<ul>\n<li><a href=\"http://www.progmat.uaem.mx:8080/artVol2Num2/Articulo3Vol2Num2.pdf\" rel=\"nofollow\">Measuring perceived color difference using YIQ NTSC transmission color space in mobile applications</a> (2010, Yuriy Kotsarenko, Fernando Ramos)</li>\n<li><a href=\"https://www.researchgate.net/publication/234126755_Anti-aliased_Pixel_and_Intensity_Slope_Detector\" rel=\"nofollow\">Anti-aliased pixel and intensity slope detector</a> (2009, Vytautas Vy\u0161niauskas)</li>\n</ul>\n<h2>Install</h2>\n<pre>pip install pixelmatch\n</pre>\n<h2>API</h2>\n<h3>pixelmatch(img1, img2, width, height[output, options])</h3>\n<ul>\n<li>\n<p><code>img1</code>, <code>img2</code> \u2014 RGBA Image data of the images to compare. <strong>Note:</strong> image dimensions must be equal.</p>\n</li>\n<li>\n<p><code>width</code>, <code>height</code> \u2014 Width and height of the images.</p>\n</li>\n<li>\n<p><code>output</code> \u2014 Image data to write the diff to, or <code>None</code> if don't need a diff image. Note that <em>all three images</em> need to have the same dimensions.\n<code>options</code> is a dict with the following properties:</p>\n</li>\n<li>\n<p><code>threshold</code> \u2014 Matching threshold, ranges from <code>0</code> to <code>1</code>. Smaller values make the comparison more sensitive. <code>0.1</code> by default.</p>\n</li>\n<li>\n<p><code>includeAA</code> \u2014 If <code>true</code>, disables detecting and ignoring anti-aliased pixels. <code>false</code> by default.</p>\n</li>\n<li>\n<p><code>alpha</code> \u2014 Blending factor of unchanged pixels in the diff output. Ranges from <code>0</code> for pure white to <code>1</code> for original brightness. <code>0.1</code> by default.</p>\n</li>\n<li>\n<p><code>aa_color</code> \u2014 The color of anti-aliased pixels in the diff output in <code>[R, G, B]</code> format. <code>[255, 255, 0]</code> by default.</p>\n</li>\n<li>\n<p><code>diff_color</code> \u2014 The color of differing pixels in the diff output in <code>[R, G, B]</code> format. <code>[255, 0, 0]</code> by default.</p>\n</li>\n<li>\n<p><code>diff_mask</code> \u2014 Draw the diff over a transparent background (a mask), rather than over the original image. Will not draw anti-aliased pixels (if detected).</p>\n</li>\n</ul>\n<p>Compares two images, writes the output diff and returns the number of mismatched pixels.</p>\n<h2>Example usage</h2>\n<h3>PIL</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pixelmatch</span> <span class=\"kn\">import</span> <span class=\"n\">pixelmatch</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">pil_to_flatten_data</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Convert data from [(R1, G1, B1, A1), (R2, G2, B2, A2)] to [R1, G1, B1, A1, R2, G2, B2, A2]</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"s2\">\"RGBA\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">getdata</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">p</span><span class=\"p\">]</span>\n\n<span class=\"n\">img_a</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"a.png\"</span><span class=\"p\">)</span>\n<span class=\"n\">img_b</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"b.png\"</span><span class=\"p\">)</span>\n<span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"n\">img_a</span><span class=\"o\">.</span><span class=\"n\">size</span>\n\n<span class=\"n\">data_a</span> <span class=\"o\">=</span> <span class=\"n\">pil_to_flatten_data</span><span class=\"p\">(</span><span class=\"n\">img_a</span><span class=\"p\">)</span>\n<span class=\"n\">data_b</span> <span class=\"o\">=</span> <span class=\"n\">pil_to_flatten_data</span><span class=\"p\">(</span><span class=\"n\">img_b</span><span class=\"p\">)</span>\n<span class=\"n\">data_diff</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">data_a</span><span class=\"p\">)</span>\n\n<span class=\"n\">mismatch</span> <span class=\"o\">=</span> <span class=\"n\">pixelmatch</span><span class=\"p\">(</span><span class=\"n\">data_a</span><span class=\"p\">,</span> <span class=\"n\">data_b</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">data_diff</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"includeAA\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n<span class=\"p\">})</span>\n\n<span class=\"n\">img_diff</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"s2\">\"RGBA\"</span><span class=\"p\">,</span> <span class=\"n\">img_a</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">flatten_data_to_pil</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[::</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">::</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">::</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">::</span><span class=\"mi\">4</span><span class=\"p\">]))</span>\n\n<span class=\"n\">img_diff</span><span class=\"o\">.</span><span class=\"n\">putdata</span><span class=\"p\">(</span><span class=\"n\">flatten_data_to_pil</span><span class=\"p\">(</span><span class=\"n\">data_diff</span><span class=\"p\">))</span>\n<span class=\"n\">img_diff</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s2\">\"diff.png\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Example output</h2>\n<table>\n<thead>\n<tr>\n<th>expected</th>\n<th>actual</th>\n<th>diff</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dbb44569c22c997a4598dec04ad0618a1f85f1ea/66697874757265732f34612e706e67\"></td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/92700176f0815add4445fc225f059be612abb9c8/66697874757265732f34622e706e67\"></td>\n<td><img alt=\"1diff\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/80c9d93727b24dc765af78cf1bcd6500517a513b/66697874757265732f34646966662e706e67\"></td>\n</tr>\n<tr>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/497339ba7214d7d06aa9b2d031379454da158b4a/66697874757265732f33612e706e67\"></td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec72fd795194dbae85fe6fac37133109015bb0f2/66697874757265732f33622e706e67\"></td>\n<td><img alt=\"1diff\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/39e0f95c94ef289022d36cc5ee4ca476d71bd07b/66697874757265732f33646966662e706e67\"></td>\n</tr>\n<tr>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3269478eac45cea5f0ba8a5b3bbea14e825e947f/66697874757265732f36612e706e67\"></td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ffbd22bf05ba7e6135ccd0878986202b59479df/66697874757265732f36622e706e67\"></td>\n<td><img alt=\"1diff\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25ef74778a84697a58d2652091cf27e3273039c6/66697874757265732f36646966662e706e67\"></td>\n</tr>\n<tr>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b76b1b3a64b909a7dbfc19d84da1c0c44927804/66697874757265732f37612e706e67\"></td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/925966e3543ea36033df031a34b937e97caf7b70/66697874757265732f37622e706e67\"></td>\n<td><img alt=\"1diff\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/80179ceffb733600498948491e78de265d8fca46/66697874757265732f37646966662e706e67\"></td>\n</tr></tbody></table>\n<h2>Changelog</h2>\n<h3>v0.1.1</h3>\n<ul>\n<li>fix: fix bug in fast path <a href=\"https://github.com/whtsky/pixelmatch-py/pull/18\" rel=\"nofollow\">#18</a></li>\n</ul>\n<h3>v0.1.0</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n\n          </div>"}, "last_serial": 6800844, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ee9573c076ca7bc04fccf8878890dd9d", "sha256": "436da5944e6f5468b3c5372d4ce0acfa33e0a820c042c4f1acaaab1e7b393463"}, "downloads": -1, "filename": "pixelmatch-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ee9573c076ca7bc04fccf8878890dd9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4151, "upload_time": "2019-10-31T10:15:12", "upload_time_iso_8601": "2019-10-31T10:15:12.373136Z", "url": "https://files.pythonhosted.org/packages/98/5a/f591fe38574b921e74b084a80b59efeeb6117781112945cd58243cc46298/pixelmatch-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2fd3305b57b3f344110ea151b951139", "sha256": "e486aac0db8364113ac9da32b4e7f453cf0ca1a3a4aba8702a08f6bec1ea2629"}, "downloads": -1, "filename": "pixelmatch-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d2fd3305b57b3f344110ea151b951139", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 3837, "upload_time": "2019-10-31T10:15:21", "upload_time_iso_8601": "2019-10-31T10:15:21.036248Z", "url": "https://files.pythonhosted.org/packages/4c/8d/ad7cb406167721bb81b135b36b8c9c893e0a3a395714433a7ae8b288fd7a/pixelmatch-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "76425bc54dd7f8af59f6b8019b718e1f", "sha256": "cf02670dda2a74c761656f8abb7b4ecbb08e97136e35b9f1adb47123cd145f65"}, "downloads": -1, "filename": "pixelmatch-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "76425bc54dd7f8af59f6b8019b718e1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 5663, "upload_time": "2020-03-12T17:58:08", "upload_time_iso_8601": "2020-03-12T17:58:08.624507Z", "url": "https://files.pythonhosted.org/packages/78/44/a39b581641e7a1a9240450b173b0955048b130b4942823ef337bd269d8b5/pixelmatch-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d705fe7ce9f110d673851fdd80b9cb08", "sha256": "e35a5a4563ddd9ceea1fe9e22d628e9d47ec30d64b602691cc6a8ca17e5ec830"}, "downloads": -1, "filename": "pixelmatch-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d705fe7ce9f110d673851fdd80b9cb08", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5699, "upload_time": "2020-03-12T17:58:10", "upload_time_iso_8601": "2020-03-12T17:58:10.206541Z", "url": "https://files.pythonhosted.org/packages/3f/d8/f3790bc1f2bf4f5acb391e9db1cfd591124b6e1ce3e989e5b8871703aa22/pixelmatch-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "76425bc54dd7f8af59f6b8019b718e1f", "sha256": "cf02670dda2a74c761656f8abb7b4ecbb08e97136e35b9f1adb47123cd145f65"}, "downloads": -1, "filename": "pixelmatch-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "76425bc54dd7f8af59f6b8019b718e1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 5663, "upload_time": "2020-03-12T17:58:08", "upload_time_iso_8601": "2020-03-12T17:58:08.624507Z", "url": "https://files.pythonhosted.org/packages/78/44/a39b581641e7a1a9240450b173b0955048b130b4942823ef337bd269d8b5/pixelmatch-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d705fe7ce9f110d673851fdd80b9cb08", "sha256": "e35a5a4563ddd9ceea1fe9e22d628e9d47ec30d64b602691cc6a8ca17e5ec830"}, "downloads": -1, "filename": "pixelmatch-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d705fe7ce9f110d673851fdd80b9cb08", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5699, "upload_time": "2020-03-12T17:58:10", "upload_time_iso_8601": "2020-03-12T17:58:10.206541Z", "url": "https://files.pythonhosted.org/packages/3f/d8/f3790bc1f2bf4f5acb391e9db1cfd591124b6e1ce3e989e5b8871703aa22/pixelmatch-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:55 2020"}