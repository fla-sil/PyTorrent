{"info": {"author": "Mat\u00c4\u009bj Laitl", "author_email": "matej@laitl.cz", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Cython", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Scientific/Engineering :: Physics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "PyBayes is an object-oriented Python library for recursive Bayesian estimation (Bayesian filtering) that is convenient to use. Already implemented are Kalman filter, particle filter and marginalized particle filter, all built atop of a light framework of probability density functions. PyBayes can optionally use Cython for lage speed gains (Cython build can be several times faster in some situations).", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/downloads/strohel/PyBayes/PyBayes-0.3.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/strohel/PyBayes", "keywords": "", "license": "GNU GPL v2+", "maintainer": "", "maintainer_email": "", "name": "PyBayes", "package_url": "https://pypi.org/project/PyBayes/", "platform": "cross-platform", "project_url": "https://pypi.org/project/PyBayes/", "project_urls": {"Download": "https://github.com/downloads/strohel/PyBayes/PyBayes-0.3.tar.gz", "Homepage": "https://github.com/strohel/PyBayes"}, "release_url": "https://pypi.org/project/PyBayes/0.3/", "requires_dist": null, "requires_python": null, "summary": "Python library for recursive Bayesian estimation (Bayesian filtering)", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>PyBayes is an object-oriented Python library for recursive Bayesian estimation (Bayesian filtering) that is convenient to use. Already implemented are Kalman filter, particle filter and marginalized particle filter, all built atop of a light framework of probability density functions. PyBayes can optionally use Cython for lage speed gains (Cython build can be several times faster in some situations).</p>\n\n          </div>"}, "last_serial": 751019, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "e3fe508b8964b9104542e1dff6ab8049", "sha256": "c9344595c737d54e9f9aabaa1b09bfb61450afbfdec7fb22af771aa205462ba0"}, "downloads": -1, "filename": "PyBayes-0.3.tar.gz", "has_sig": false, "md5_digest": "e3fe508b8964b9104542e1dff6ab8049", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1571037, "upload_time": "2011-07-25T19:26:33", "upload_time_iso_8601": "2011-07-25T19:26:33.732898Z", "url": "https://files.pythonhosted.org/packages/e5/12/84e4ffaf167968c824a5cf2c9e1b5edaf6c0c9f920c93cb8cc4337f7cbbd/PyBayes-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e3fe508b8964b9104542e1dff6ab8049", "sha256": "c9344595c737d54e9f9aabaa1b09bfb61450afbfdec7fb22af771aa205462ba0"}, "downloads": -1, "filename": "PyBayes-0.3.tar.gz", "has_sig": false, "md5_digest": "e3fe508b8964b9104542e1dff6ab8049", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1571037, "upload_time": "2011-07-25T19:26:33", "upload_time_iso_8601": "2011-07-25T19:26:33.732898Z", "url": "https://files.pythonhosted.org/packages/e5/12/84e4ffaf167968c824a5cf2c9e1b5edaf6c0c9f920c93cb8cc4337f7cbbd/PyBayes-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:22 2020"}