{"info": {"author": "Szymon Maszke", "author_email": "szymon.maszke@protonmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "![torchdata Logo](https://github.com/szymonmaszke/torchdata/blob/master/assets/banner.png)\n\n--------------------------------------------------------------------------------\n\n| Version | Docs | Tests | Coverage | Style | PyPI | Python | PyTorch | Docker | Roadmap |\n|---------|------|-------|----------|-------|------|--------|---------|--------|---------|\n| [![Version](https://img.shields.io/static/v1?label=&message=0.1.1&color=377EF0&style=for-the-badge)](https://github.com/szymonmaszke/torchdata/releases) | [![Documentation](https://img.shields.io/static/v1?label=&message=docs&color=EE4C2C&style=for-the-badge)](https://szymonmaszke.github.io/torchdata/)  | ![Tests](https://github.com/szymonmaszke/torchdata/workflows/test/badge.svg) | ![Coverage](https://img.shields.io/codecov/c/github/szymonmaszke/torchdata?label=%20&logo=codecov&style=for-the-badge) | [![codebeat](https://img.shields.io/static/v1?label=&message=CB&color=27A8E0&style=for-the-badge)](https://codebeat.co/projects/github-com-szymonmaszke-torchdata-master) | [![PyPI](https://img.shields.io/static/v1?label=&message=PyPI&color=377EF0&style=for-the-badge)](https://pypi.org/project/torchdata/) | [![Python](https://img.shields.io/static/v1?label=&message=3.7&color=377EF0&style=for-the-badge&logo=python&logoColor=F8C63D)](https://www.python.org/) | [![PyTorch](https://img.shields.io/static/v1?label=&message=>=1.2.0&color=EE4C2C&style=for-the-badge)](https://pytorch.org/) | [![Docker](https://img.shields.io/static/v1?label=&message=docker&color=309cef&style=for-the-badge)](https://cloud.docker.com/u/szymonmaszke/repository/docker/szymonmaszke/torchdata) | [![Roadmap](https://img.shields.io/static/v1?label=&message=roadmap&color=009688&style=for-the-badge)](https://github.com/szymonmaszke/torchdata/blob/master/ROADMAP.md) |\n\n[__torchdata__](https://szymonmaszke.github.io/torchdata/) is [PyTorch](https://pytorch.org/) oriented library focused on data processing and input pipelines in general.\n\nIt extends `torch.utils.data.Dataset` and equips it with\nfunctionalities known from [tensorflow.data](https://www.tensorflow.org/api_docs/python/tf/data/Dataset)\nlike `map` or `cache` (with some additions unavailable in aforementioned).\n\nAll of that with minimal interference (single call to `super().__init__()`) in original\nPyTorch's datasets.\n\n### :wrench: Functionalities\n\n* Use `map`, `apply`, `reduce` or `filter`\n* `cache` data in RAM/disk/your own method (even partially, say first `20%`)\n* Full PyTorch's [`Dataset`](https://pytorch.org/docs/stable/data.html#torch.utils.data.Dataset) and [`IterableDataset`](https://pytorch.org/docs/stable/data.html#torch.utils.data.IterableDataset>) support (including [`torchvision`](https://pytorch.org/docs/stable/torchvision/index.html))\n* General `torchdata.maps` like `Flatten` or `Select`\n* Extensible interface (your own cache methods, cache modifiers, maps etc.)\n* Concrete `torchdata.datasets` designed for file reading and other general tasks\n\n\n# :bulb: Mini examples\n\n- Create image dataset, convert it to Tensors, cache and concatenate with smoothed labels:\n\n```python\nimport torchdata\nimport torchvision\n\nclass Images(torchdata.Dataset): # Different inheritance\n    def __init__(self, path: str):\n        super().__init__() # This is the only change\n        self.files = [file for file in pathlib.Path(path).glob(\"*\")]\n\n    def __getitem__(self, index):\n        return Image.open(self.files[index])\n\n    def __len__(self):\n        return len(self.files)\n\n\nimages = Images(\"./data\").map(torchvision.transforms.ToTensor()).cache()\n```\n\nYou can concatenate above dataset with another (say `labels`) and iterate over them as per usual:\n\n```python\nfor data, label in images | labels:\n    # Do whatever you want with your data\n```\n\n- Cache first `1000` samples in memory, save the rest on disk in folder `./cache`:\n\n```python\nimages = (\n    ImageDataset.from_folder(\"./data\").map(torchvision.transforms.ToTensor())\n    # First 1000 samples in memory\n    .cache(torchdata.modifiers.UpToIndex(1000, torchdata.cachers.Memory()))\n    # Sample from 1000 to the end saved with Pickle on disk\n    .cache(torchdata.modifiers.FromIndex(1000, torchdata.cachers.Pickle(\"./cache\")))\n    # You can define your own cachers, modifiers, see docs\n)\n```\nTo see what else you can do please check [**torchdata documentation**](https://szymonmaszke.github.io/torchdata/)\n\n# :unlock: Installation\n\n## :snake: [pip](<https://pypi.org/project/torchdata/>)\n\n### Latest release:\n\n```shell\npip install --user torchdata\n```\n\n### Nightly:\n\n```shell\npip install --user torchdata-nightly\n```\n\n## :whale2: [Docker](https://cloud.docker.com/repository/docker/szymonmaszke/torchdata)\n\n__CPU standalone__ and various versions of __GPU enabled__ images are available\nat [dockerhub](https://cloud.docker.com/repository/docker/szymonmaszke/torchdata).\n\nFor CPU quickstart, issue:\n\n```shell  \ndocker pull szymonmaszke/torchdata:18.04\n```\n\nNightly builds are also available, just prefix tag with `nightly_`. If you are going for `GPU` image make sure you have\n[nvidia/docker](https://github.com/NVIDIA/nvidia-docker) installed and it's runtime set.\n\n# :question: Contributing\n\nIf you find any issue or you think some functionality may be useful to others and fits this library, please [open new Issue](https://help.github.com/en/articles/creating-an-issue) or [create Pull Request](https://help.github.com/en/articles/creating-a-pull-request-from-a-fork).\n\nTo get an overview of thins one can do to help this project, see [Roadmap](https://github.com/szymonmaszke/torchdata/blob/master/ROADMAP.md)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pypa/torchdata", "keywords": "pytorch torch data datasets map cache memory disk apply database", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "torchdata", "package_url": "https://pypi.org/project/torchdata/", "platform": "", "project_url": "https://pypi.org/project/torchdata/", "project_urls": {"Documentation": "https://szymonmaszke.github.io/torchdata/#torchdata", "Homepage": "https://github.com/pypa/torchdata", "Issues": "https://github.com/szymonmaszke/torchdata/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc", "Website": "https://szymonmaszke.github.io/torchdata"}, "release_url": "https://pypi.org/project/torchdata/0.1.3/", "requires_dist": ["torch (>=1.2.0)"], "requires_python": ">=3.7", "summary": "PyTorch based library focused on data processing and input pipelines in general.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"torchdata Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/325c5e05d19a641412d3222c26cdba367c9192f1/68747470733a2f2f6769746875622e636f6d2f737a796d6f6e6d61737a6b652f746f726368646174612f626c6f622f6d61737465722f6173736574732f62616e6e65722e706e67\"></p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>Docs</th>\n<th>Tests</th>\n<th>Coverage</th>\n<th>Style</th>\n<th>PyPI</th>\n<th>Python</th>\n<th>PyTorch</th>\n<th>Docker</th>\n<th>Roadmap</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/szymonmaszke/torchdata/releases\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3f6b5ce473a6927500ca9c3ac8e20df046106bb6/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d266d6573736167653d302e312e3126636f6c6f723d333737454630267374796c653d666f722d7468652d6261646765\"></a></td>\n<td><a href=\"https://szymonmaszke.github.io/torchdata/\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/611e23036e6193a0da20bfe66381e1f1c7ff1a62/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d266d6573736167653d646f637326636f6c6f723d454534433243267374796c653d666f722d7468652d6261646765\"></a></td>\n<td><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d178dc77d02406d2263d640ffaeb402fbb41be3/68747470733a2f2f6769746875622e636f6d2f737a796d6f6e6d61737a6b652f746f726368646174612f776f726b666c6f77732f746573742f62616467652e737667\"></td>\n<td><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2c0c2081fb8221bf28d9a5a0ddc6426615b24597/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f737a796d6f6e6d61737a6b652f746f726368646174613f6c6162656c3d253230266c6f676f3d636f6465636f76267374796c653d666f722d7468652d6261646765\"></td>\n<td><a href=\"https://codebeat.co/projects/github-com-szymonmaszke-torchdata-master\" rel=\"nofollow\"><img alt=\"codebeat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea0f4f3654b82001e1efa1c895ee7f2bd69a88d7/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d266d6573736167653d434226636f6c6f723d323741384530267374796c653d666f722d7468652d6261646765\"></a></td>\n<td><a href=\"https://pypi.org/project/torchdata/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8215dcd37002b6dcc738f2b879bfe91408b52b43/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d266d6573736167653d5079504926636f6c6f723d333737454630267374796c653d666f722d7468652d6261646765\"></a></td>\n<td><a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e943f6124f85256ff36ef114ea9584568562d902/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d266d6573736167653d332e3726636f6c6f723d333737454630267374796c653d666f722d7468652d6261646765266c6f676f3d707974686f6e266c6f676f436f6c6f723d463843363344\"></a></td>\n<td><a href=\"https://pytorch.org/\" rel=\"nofollow\"><img alt=\"PyTorch\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3380151859613af8e437c35416b1af4d952bdf98/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d266d6573736167653d2533453d312e322e3026636f6c6f723d454534433243267374796c653d666f722d7468652d6261646765\"></a></td>\n<td><a href=\"https://cloud.docker.com/u/szymonmaszke/repository/docker/szymonmaszke/torchdata\" rel=\"nofollow\"><img alt=\"Docker\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72872e5a621755bfa1dcadaa1447fb18ac0ad0e8/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d266d6573736167653d646f636b657226636f6c6f723d333039636566267374796c653d666f722d7468652d6261646765\"></a></td>\n<td><a href=\"https://github.com/szymonmaszke/torchdata/blob/master/ROADMAP.md\" rel=\"nofollow\"><img alt=\"Roadmap\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3cad79f6a687445b96ba7dec634948d25b72d434/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d266d6573736167653d726f61646d617026636f6c6f723d303039363838267374796c653d666f722d7468652d6261646765\"></a></td>\n</tr></tbody></table>\n<p><a href=\"https://szymonmaszke.github.io/torchdata/\" rel=\"nofollow\"><strong>torchdata</strong></a> is <a href=\"https://pytorch.org/\" rel=\"nofollow\">PyTorch</a> oriented library focused on data processing and input pipelines in general.</p>\n<p>It extends <code>torch.utils.data.Dataset</code> and equips it with\nfunctionalities known from <a href=\"https://www.tensorflow.org/api_docs/python/tf/data/Dataset\" rel=\"nofollow\">tensorflow.data</a>\nlike <code>map</code> or <code>cache</code> (with some additions unavailable in aforementioned).</p>\n<p>All of that with minimal interference (single call to <code>super().__init__()</code>) in original\nPyTorch's datasets.</p>\n<h3>:wrench: Functionalities</h3>\n<ul>\n<li>Use <code>map</code>, <code>apply</code>, <code>reduce</code> or <code>filter</code></li>\n<li><code>cache</code> data in RAM/disk/your own method (even partially, say first <code>20%</code>)</li>\n<li>Full PyTorch's <a href=\"https://pytorch.org/docs/stable/data.html#torch.utils.data.Dataset\" rel=\"nofollow\"><code>Dataset</code></a> and <a href=\"https://pytorch.org/docs/stable/data.html#torch.utils.data.IterableDataset%3E\" rel=\"nofollow\"><code>IterableDataset</code></a> support (including <a href=\"https://pytorch.org/docs/stable/torchvision/index.html\" rel=\"nofollow\"><code>torchvision</code></a>)</li>\n<li>General <code>torchdata.maps</code> like <code>Flatten</code> or <code>Select</code></li>\n<li>Extensible interface (your own cache methods, cache modifiers, maps etc.)</li>\n<li>Concrete <code>torchdata.datasets</code> designed for file reading and other general tasks</li>\n</ul>\n<h1>:bulb: Mini examples</h1>\n<ul>\n<li>Create image dataset, convert it to Tensors, cache and concatenate with smoothed labels:</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">torchdata</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torchvision</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Images</span><span class=\"p\">(</span><span class=\"n\">torchdata</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">):</span> <span class=\"c1\"># Different inheritance</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span> <span class=\"c1\"># This is the only change</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">files</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">file</span> <span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"s2\">\"*\"</span><span class=\"p\">)]</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">])</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__len__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">images</span> <span class=\"o\">=</span> <span class=\"n\">Images</span><span class=\"p\">(</span><span class=\"s2\">\"./data\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">torchvision</span><span class=\"o\">.</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"p\">()</span>\n</pre>\n<p>You can concatenate above dataset with another (say <code>labels</code>) and iterate over them as per usual:</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">label</span> <span class=\"ow\">in</span> <span class=\"n\">images</span> <span class=\"o\">|</span> <span class=\"n\">labels</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Do whatever you want with your data</span>\n</pre>\n<ul>\n<li>Cache first <code>1000</code> samples in memory, save the rest on disk in folder <code>./cache</code>:</li>\n</ul>\n<pre><span class=\"n\">images</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"n\">ImageDataset</span><span class=\"o\">.</span><span class=\"n\">from_folder</span><span class=\"p\">(</span><span class=\"s2\">\"./data\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">torchvision</span><span class=\"o\">.</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">())</span>\n    <span class=\"c1\"># First 1000 samples in memory</span>\n    <span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"p\">(</span><span class=\"n\">torchdata</span><span class=\"o\">.</span><span class=\"n\">modifiers</span><span class=\"o\">.</span><span class=\"n\">UpToIndex</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">torchdata</span><span class=\"o\">.</span><span class=\"n\">cachers</span><span class=\"o\">.</span><span class=\"n\">Memory</span><span class=\"p\">()))</span>\n    <span class=\"c1\"># Sample from 1000 to the end saved with Pickle on disk</span>\n    <span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"p\">(</span><span class=\"n\">torchdata</span><span class=\"o\">.</span><span class=\"n\">modifiers</span><span class=\"o\">.</span><span class=\"n\">FromIndex</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">torchdata</span><span class=\"o\">.</span><span class=\"n\">cachers</span><span class=\"o\">.</span><span class=\"n\">Pickle</span><span class=\"p\">(</span><span class=\"s2\">\"./cache\"</span><span class=\"p\">)))</span>\n    <span class=\"c1\"># You can define your own cachers, modifiers, see docs</span>\n<span class=\"p\">)</span>\n</pre>\n<p>To see what else you can do please check <a href=\"https://szymonmaszke.github.io/torchdata/\" rel=\"nofollow\"><strong>torchdata documentation</strong></a></p>\n<h1>:unlock: Installation</h1>\n<h2>:snake: <a href=\"https://pypi.org/project/torchdata/\" rel=\"nofollow\">pip</a></h2>\n<h3>Latest release:</h3>\n<pre>pip install --user torchdata\n</pre>\n<h3>Nightly:</h3>\n<pre>pip install --user torchdata-nightly\n</pre>\n<h2>:whale2: <a href=\"https://cloud.docker.com/repository/docker/szymonmaszke/torchdata\" rel=\"nofollow\">Docker</a></h2>\n<p><strong>CPU standalone</strong> and various versions of <strong>GPU enabled</strong> images are available\nat <a href=\"https://cloud.docker.com/repository/docker/szymonmaszke/torchdata\" rel=\"nofollow\">dockerhub</a>.</p>\n<p>For CPU quickstart, issue:</p>\n<pre>docker pull szymonmaszke/torchdata:18.04\n</pre>\n<p>Nightly builds are also available, just prefix tag with <code>nightly_</code>. If you are going for <code>GPU</code> image make sure you have\n<a href=\"https://github.com/NVIDIA/nvidia-docker\" rel=\"nofollow\">nvidia/docker</a> installed and it's runtime set.</p>\n<h1>:question: Contributing</h1>\n<p>If you find any issue or you think some functionality may be useful to others and fits this library, please <a href=\"https://help.github.com/en/articles/creating-an-issue\" rel=\"nofollow\">open new Issue</a> or <a href=\"https://help.github.com/en/articles/creating-a-pull-request-from-a-fork\" rel=\"nofollow\">create Pull Request</a>.</p>\n<p>To get an overview of thins one can do to help this project, see <a href=\"https://github.com/szymonmaszke/torchdata/blob/master/ROADMAP.md\" rel=\"nofollow\">Roadmap</a></p>\n\n          </div>"}, "last_serial": 6482526, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "45b97defb329d1aaafd38dc47a2116dd", "sha256": "6d9ff338075848e7f6d02997dcec2f7415c5b946be7ca9a7966028f075ee73a3"}, "downloads": -1, "filename": "torchdata-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "45b97defb329d1aaafd38dc47a2116dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 19352, "upload_time": "2019-09-16T01:07:39", "upload_time_iso_8601": "2019-09-16T01:07:39.022186Z", "url": "https://files.pythonhosted.org/packages/9b/d6/d41838a6c8bc198827b7231d444a34fc41918ce97ab0e1ab2cb068d884d4/torchdata-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a896ec52664d3f1073bce5a548a4561", "sha256": "31fe1c54fb5946fb359be5b8a38224375a3e09f7fae62e87b5a1f16241cee946"}, "downloads": -1, "filename": "torchdata-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8a896ec52664d3f1073bce5a548a4561", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 17411, "upload_time": "2019-09-16T01:07:41", "upload_time_iso_8601": "2019-09-16T01:07:41.382565Z", "url": "https://files.pythonhosted.org/packages/b0/b4/2a2a54ec2389138df3333be937e68127515a0bc990fff46c1398aa72390f/torchdata-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b38530fc17456e172c46e0ef53451b67", "sha256": "128c4b222c5502d5f8352aeeb7dbff8291b2d4cb6eb59bf70001fbb98592e296"}, "downloads": -1, "filename": "torchdata-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b38530fc17456e172c46e0ef53451b67", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 23328, "upload_time": "2019-09-19T16:27:04", "upload_time_iso_8601": "2019-09-19T16:27:04.698861Z", "url": "https://files.pythonhosted.org/packages/a1/e6/de3c44b7eb029714a418e284c9d46e21d236da3c5988c9258ca9c47c8867/torchdata-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9576736d0baf54b50a156a2f19f445d9", "sha256": "1e5d871b9cb9a95b2966ede7e6d8ede2a19430ac6663cf97aa94780b8717bfdd"}, "downloads": -1, "filename": "torchdata-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9576736d0baf54b50a156a2f19f445d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 19878, "upload_time": "2019-09-19T16:27:06", "upload_time_iso_8601": "2019-09-19T16:27:06.700284Z", "url": "https://files.pythonhosted.org/packages/4d/e6/544d41902e59f07126e6033035811987977548606e59e51882a4bff991a6/torchdata-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b93a9bb5fcd2c9e97eaf8d85cc1827de", "sha256": "eecff607cf962f2bad0817653470f6f6b334f5fe367c6745220fc06c3dacf233"}, "downloads": -1, "filename": "torchdata-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b93a9bb5fcd2c9e97eaf8d85cc1827de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 26451, "upload_time": "2019-09-20T16:58:37", "upload_time_iso_8601": "2019-09-20T16:58:37.340838Z", "url": "https://files.pythonhosted.org/packages/d6/04/3244c60336750099af3aeaaa18efad4f1978f1e184d489a9ba1121dc80ab/torchdata-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba0b3bd91e1bd46df71dc886aea3a383", "sha256": "d947ee220ebfc863cb0363e4867bbbdc4c5a56b9eaa02f9f87f57c060576f548"}, "downloads": -1, "filename": "torchdata-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ba0b3bd91e1bd46df71dc886aea3a383", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 21664, "upload_time": "2019-09-20T16:58:38", "upload_time_iso_8601": "2019-09-20T16:58:38.565816Z", "url": "https://files.pythonhosted.org/packages/17/c1/1434bfbfb46752bda6cedbb6c054103cf5e37933f825c7c76d08be68f252/torchdata-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c2333da5be4398a3f63633aa03da7da5", "sha256": "c97ab1ce05bf5af6c426f009dceca75a84ae5dd7f668e66d4d68832761e8c12c"}, "downloads": -1, "filename": "torchdata-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c2333da5be4398a3f63633aa03da7da5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 26524, "upload_time": "2020-01-19T16:10:24", "upload_time_iso_8601": "2020-01-19T16:10:24.151463Z", "url": "https://files.pythonhosted.org/packages/24/69/c24806d9e05338e5fed578ef6d9c65dd8af410cf39529988676f5a4e3938/torchdata-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d820dd6b9be74de92712438b54291ba", "sha256": "aafb69b21d61825b1596c989e70c330ad9d8790ade55f91eac121d52ea5eaf1b"}, "downloads": -1, "filename": "torchdata-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1d820dd6b9be74de92712438b54291ba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 21827, "upload_time": "2020-01-19T16:10:25", "upload_time_iso_8601": "2020-01-19T16:10:25.669002Z", "url": "https://files.pythonhosted.org/packages/ac/38/1fb6a456830afc569e7fd0b76d16761ab3e30025baedeef38537dc016d25/torchdata-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c2333da5be4398a3f63633aa03da7da5", "sha256": "c97ab1ce05bf5af6c426f009dceca75a84ae5dd7f668e66d4d68832761e8c12c"}, "downloads": -1, "filename": "torchdata-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c2333da5be4398a3f63633aa03da7da5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 26524, "upload_time": "2020-01-19T16:10:24", "upload_time_iso_8601": "2020-01-19T16:10:24.151463Z", "url": "https://files.pythonhosted.org/packages/24/69/c24806d9e05338e5fed578ef6d9c65dd8af410cf39529988676f5a4e3938/torchdata-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d820dd6b9be74de92712438b54291ba", "sha256": "aafb69b21d61825b1596c989e70c330ad9d8790ade55f91eac121d52ea5eaf1b"}, "downloads": -1, "filename": "torchdata-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1d820dd6b9be74de92712438b54291ba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 21827, "upload_time": "2020-01-19T16:10:25", "upload_time_iso_8601": "2020-01-19T16:10:25.669002Z", "url": "https://files.pythonhosted.org/packages/ac/38/1fb6a456830afc569e7fd0b76d16761ab3e30025baedeef38537dc016d25/torchdata-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:34 2020"}