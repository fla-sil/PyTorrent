{"info": {"author": "Dmitrii Torbunov", "author_email": "torbu001@umn.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3 :: Only"], "description": "cafplot\n=======\nLibrary to plot CAFAna_ objects in python/matplotlib.\n\n``cafplot`` aims to provide a set of function to allow easy plotting of CAFAna\nobjects (Spectrum, Surface, etc.) with matplotlib library.\n\n\nWhy ``cafplot``?\n================\nSo, why use ``cafplot`` for plotting instead of directly using CAFAna/ROOT\nfunctions? Here are several reasons why you might be interested in ``cafplot``\n\n- **Ease of Development**. Dynamic nature of the python typing system,\n  versatile and mature standard library and rich python package ecosystem will\n  make coding in python a light breeze compared to c++. Expect your python\n  script be `2-3 times shorter`__ than the comparable c++ version.\n\n- **Run Anywhere**. ``cafplot`` relies only on a few standard python packages\n  for plotting. This allows you to run ``cafplot`` scripts on almost machine\n  with minimal setup. Which is in stark contrast to CAFAna scripts, where\n  you need to setup/compile NOvA-Art framework first.\n\n- **Speed**. Yes, plotting with python/matplotlib is much **faster** than using\n  CAFAna/ROOT. By the time it takes to compile your plotting CAFAna macro\n  an analogous python script would have finished running.\n\n- **Transferable Knowledge**. Unlike knowledge of the ROOT framework which is\n  academia specific, knowledge of python/matplotlib stack is in demand in both\n  academia and industry.\n\n__ languages_\n\n\nInstallation\n============\nYou can install ``cafplot`` either using ``pip`` or manually.\n\nUsing PyPI\n----------\nSimply run:\n\n.. code-block:: bash\n\n    $ pip install cafplot\n\nManual Installation\n-------------------\n1. Close the repository\n\n.. code-block:: bash\n\n    $ git clone https://github.com/usert5432/cafplot\n\n2. Install ``cafplot``\n\n.. code-block:: bash\n\n    $ cd cafplot\n    $ python setup.py install\n\nSupport for Reading ROOT Files\n------------------------------\nIf you need support for reading ROOT files then ``uproot`` package is required\nas well:\n\n.. code-block:: bash\n\n    $ pip install uproot\n\n\nGetting Started\n===============\nLets look at a simple example of plotting CAFAna Spectrum. ``cafplot`` itself\ndoes not support creation of CAFAna Spectra from the caf files and it is meant\nonly for plotting. Correspondingly, the Spectrum must be filled and created\nin CAFAna first.\n\nFor the purposes of this example, we will use CAFAna demo script\n``CAFAna/tute/demo2p5a.C`` to create a spectrum. After running this demo\nscript we will get a ROOT file named ``save_your_spectra_to_disk.root`` with a\n1D Spectrum ``dir_nhit_spectra``. Now, we will plot it using ``cafplot``.\nFirst, we need to import a couple of packages:\n\n.. code-block:: python\n\n    import matplotlib.pyplot as plt\n\n    from cafplot import load\n    from cafplot.plot import *\n\nOnce imports are done, let's load the CAFAna Spectrum from a file\n``save_your_spectra_to_disk.root`` (this will require ``uproot`` package\ninstalled):\n\n.. code-block:: python\n\n    root_file = load(\"save_your_spectra_to_disk.root\")\n    spectrum  = root_file.get_spectrum(\"dir_nhit_spectra\")\n\nAfter this operation we will have CAFAna Spectrum loaded to ``spectrum``\nvariable. Similar to CAFAna, before plotting Spectrum we need to extract a\nnormalized histogram from it. Let's normalize it by POT to ``9e20``.\n\n.. code-block:: python\n\n    root_hist = spectrum.rhist(pot = 9e20)\n\nGreat, now we are ready to plot our first spectrum with ``cafplot``\n\n.. code-block:: python\n\n    f, ax = plt.subplots() # Create matplotlib Figure/Axes\n    plot_rhist1d(ax, root_hist, 'NHit', histtype = \"step\", color = \"red\")\n    plt.show() # show plot\n\nYou should see the plotted spectrum opened in a separate window.\n\n\nDocumentation\n=============\nBasic example of how to use ``cafplot`` is outlined in the `Getting Started`_\nsection. More complete examples of ``cafplot`` usage are provided in the\n``examples/`` subdirectory. In particular, you might be interested in\n``spectrum_plot.py`` -- complete example on how to plot CAFAna Spectrum\nand ``surf_plot.py`` -- example of plotting CAFAna FrequentistSurface.\n\nThe further documentation please refer to python docstrings for each\n``cafplot`` module.\n\nDependencies\n------------\n``cafplot`` is written with python version 3 in mind and won't work with python\nversion 2. It requires the following packages for the proper operation:\n\n- ``numpy``\n- ``matplotlib``\n- ``scipy`` - at this moment ``cafplot`` uses only stats subpackage\n  of ``scipy``.\n\nAdditionally, one may want to install ``uproot`` if support of reading\nCAFAna objects from ROOT files is required.\n\n\nCode Overview\n-------------\n``cafplot`` has several subpackages with different purposes:\n\n- ``plot`` subpackage contains a collection of functions for plotting\n  ``RHist``, ``Spectrum``, ``Surface`` objects.\n\n- ``rfile`` subpackage contains functions and classes for loading CAFAna\n  objects from different files (currently supports ROOT files and json files).\n\n- ``rhist`` subpackage contains ``RHist`` class that approximates behavior\n  of the ROOT histogram classes.\n\n- ``spectrum`` subpackage defines ``Spectrum`` class to work with CAFAna\n  Spectrum.\n\n- ``stats`` subpackage for various statistical routines.\n\n- ``surface`` subpackage contains ``Surface`` classes to work with CAFAna\n  surfaces.\n\nTODO\n----\n\n* Add support for plotting binned statistics\n* Add support for plotting ROC curves\n\n\n.. _CAFAna: https://cdcvs.fnal.gov/redmine/projects/novaart/wiki/CAFAna_overview\n.. _languages: https://arxiv.org/abs/1409.0252\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/usert5432/cafplot", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cafplot", "package_url": "https://pypi.org/project/cafplot/", "platform": "", "project_url": "https://pypi.org/project/cafplot/", "project_urls": {"Homepage": "https://github.com/usert5432/cafplot"}, "release_url": "https://pypi.org/project/cafplot/0.1/", "requires_dist": ["numpy", "matplotlib", "scipy"], "requires_python": "", "summary": "Library to plot CAFAna objects in python/matplotlib", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"cafplot\">\n<h2>cafplot</h2>\n<p>Library to plot <a href=\"https://cdcvs.fnal.gov/redmine/projects/novaart/wiki/CAFAna_overview\" rel=\"nofollow\">CAFAna</a> objects in python/matplotlib.</p>\n<p><tt>cafplot</tt> aims to provide a set of function to allow easy plotting of CAFAna\nobjects (Spectrum, Surface, etc.) with matplotlib library.</p>\n</div>\n<div id=\"why-cafplot\">\n<h2>Why <tt>cafplot</tt>?</h2>\n<p>So, why use <tt>cafplot</tt> for plotting instead of directly using CAFAna/ROOT\nfunctions? Here are several reasons why you might be interested in <tt>cafplot</tt></p>\n<ul>\n<li><strong>Ease of Development</strong>. Dynamic nature of the python typing system,\nversatile and mature standard library and rich python package ecosystem will\nmake coding in python a light breeze compared to c++. Expect your python\nscript be <a href=\"https://arxiv.org/abs/1409.0252\" rel=\"nofollow\">2-3 times shorter</a> than the comparable c++ version.</li>\n<li><strong>Run Anywhere</strong>. <tt>cafplot</tt> relies only on a few standard python packages\nfor plotting. This allows you to run <tt>cafplot</tt> scripts on almost machine\nwith minimal setup. Which is in stark contrast to CAFAna scripts, where\nyou need to setup/compile NOvA-Art framework first.</li>\n<li><strong>Speed</strong>. Yes, plotting with python/matplotlib is much <strong>faster</strong> than using\nCAFAna/ROOT. By the time it takes to compile your plotting CAFAna macro\nan analogous python script would have finished running.</li>\n<li><strong>Transferable Knowledge</strong>. Unlike knowledge of the ROOT framework which is\nacademia specific, knowledge of python/matplotlib stack is in demand in both\nacademia and industry.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <tt>cafplot</tt> either using <tt>pip</tt> or manually.</p>\n<div id=\"using-pypi\">\n<h3>Using PyPI</h3>\n<p>Simply run:</p>\n<pre>$ pip install cafplot\n</pre>\n</div>\n<div id=\"manual-installation\">\n<h3>Manual Installation</h3>\n<ol>\n<li>Close the repository</li>\n</ol>\n<pre>$ git clone https://github.com/usert5432/cafplot\n</pre>\n<ol>\n<li>Install <tt>cafplot</tt></li>\n</ol>\n<pre>$ <span class=\"nb\">cd</span> cafplot\n$ python setup.py install\n</pre>\n</div>\n<div id=\"support-for-reading-root-files\">\n<h3>Support for Reading ROOT Files</h3>\n<p>If you need support for reading ROOT files then <tt>uproot</tt> package is required\nas well:</p>\n<pre>$ pip install uproot\n</pre>\n</div>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>Lets look at a simple example of plotting CAFAna Spectrum. <tt>cafplot</tt> itself\ndoes not support creation of CAFAna Spectra from the caf files and it is meant\nonly for plotting. Correspondingly, the Spectrum must be filled and created\nin CAFAna first.</p>\n<p>For the purposes of this example, we will use CAFAna demo script\n<tt>CAFAna/tute/demo2p5a.C</tt> to create a spectrum. After running this demo\nscript we will get a ROOT file named <tt>save_your_spectra_to_disk.root</tt> with a\n1D Spectrum <tt>dir_nhit_spectra</tt>. Now, we will plot it using <tt>cafplot</tt>.\nFirst, we need to import a couple of packages:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">cafplot</span> <span class=\"kn\">import</span> <span class=\"n\">load</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cafplot.plot</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<p>Once imports are done, let\u2019s load the CAFAna Spectrum from a file\n<tt>save_your_spectra_to_disk.root</tt> (this will require <tt>uproot</tt> package\ninstalled):</p>\n<pre><span class=\"n\">root_file</span> <span class=\"o\">=</span> <span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"save_your_spectra_to_disk.root\"</span><span class=\"p\">)</span>\n<span class=\"n\">spectrum</span>  <span class=\"o\">=</span> <span class=\"n\">root_file</span><span class=\"o\">.</span><span class=\"n\">get_spectrum</span><span class=\"p\">(</span><span class=\"s2\">\"dir_nhit_spectra\"</span><span class=\"p\">)</span>\n</pre>\n<p>After this operation we will have CAFAna Spectrum loaded to <tt>spectrum</tt>\nvariable. Similar to CAFAna, before plotting Spectrum we need to extract a\nnormalized histogram from it. Let\u2019s normalize it by POT to <tt>9e20</tt>.</p>\n<pre><span class=\"n\">root_hist</span> <span class=\"o\">=</span> <span class=\"n\">spectrum</span><span class=\"o\">.</span><span class=\"n\">rhist</span><span class=\"p\">(</span><span class=\"n\">pot</span> <span class=\"o\">=</span> <span class=\"mf\">9e20</span><span class=\"p\">)</span>\n</pre>\n<p>Great, now we are ready to plot our first spectrum with <tt>cafplot</tt></p>\n<pre><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">()</span> <span class=\"c1\"># Create matplotlib Figure/Axes</span>\n<span class=\"n\">plot_rhist1d</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">root_hist</span><span class=\"p\">,</span> <span class=\"s1\">'NHit'</span><span class=\"p\">,</span> <span class=\"n\">histtype</span> <span class=\"o\">=</span> <span class=\"s2\">\"step\"</span><span class=\"p\">,</span> <span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"s2\">\"red\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span> <span class=\"c1\"># show plot</span>\n</pre>\n<p>You should see the plotted spectrum opened in a separate window.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Basic example of how to use <tt>cafplot</tt> is outlined in the <a href=\"#getting-started\" rel=\"nofollow\">Getting Started</a>\nsection. More complete examples of <tt>cafplot</tt> usage are provided in the\n<tt>examples/</tt> subdirectory. In particular, you might be interested in\n<tt>spectrum_plot.py</tt> \u2013 complete example on how to plot CAFAna Spectrum\nand <tt>surf_plot.py</tt> \u2013 example of plotting CAFAna FrequentistSurface.</p>\n<p>The further documentation please refer to python docstrings for each\n<tt>cafplot</tt> module.</p>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<p><tt>cafplot</tt> is written with python version 3 in mind and won\u2019t work with python\nversion 2. It requires the following packages for the proper operation:</p>\n<ul>\n<li><tt>numpy</tt></li>\n<li><tt>matplotlib</tt></li>\n<li><tt>scipy</tt> - at this moment <tt>cafplot</tt> uses only stats subpackage\nof <tt>scipy</tt>.</li>\n</ul>\n<p>Additionally, one may want to install <tt>uproot</tt> if support of reading\nCAFAna objects from ROOT files is required.</p>\n</div>\n<div id=\"code-overview\">\n<h3>Code Overview</h3>\n<p><tt>cafplot</tt> has several subpackages with different purposes:</p>\n<ul>\n<li><tt>plot</tt> subpackage contains a collection of functions for plotting\n<tt>RHist</tt>, <tt>Spectrum</tt>, <tt>Surface</tt> objects.</li>\n<li><tt>rfile</tt> subpackage contains functions and classes for loading CAFAna\nobjects from different files (currently supports ROOT files and json files).</li>\n<li><tt>rhist</tt> subpackage contains <tt>RHist</tt> class that approximates behavior\nof the ROOT histogram classes.</li>\n<li><tt>spectrum</tt> subpackage defines <tt>Spectrum</tt> class to work with CAFAna\nSpectrum.</li>\n<li><tt>stats</tt> subpackage for various statistical routines.</li>\n<li><tt>surface</tt> subpackage contains <tt>Surface</tt> classes to work with CAFAna\nsurfaces.</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h3>TODO</h3>\n<ul>\n<li>Add support for plotting binned statistics</li>\n<li>Add support for plotting ROC curves</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7142029, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b2549ef781520f9b58aee2849e24d35e", "sha256": "48a2f9a1ec7b711b1ed4f277f4f059d7f1b2ca719d6a6a86904f53d89be85bff"}, "downloads": -1, "filename": "cafplot-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b2549ef781520f9b58aee2849e24d35e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22872, "upload_time": "2020-05-01T01:12:03", "upload_time_iso_8601": "2020-05-01T01:12:03.064953Z", "url": "https://files.pythonhosted.org/packages/41/dd/7441d3e2de4e95049dd5601392f05a4160ded3064ead72c10952ac03e107/cafplot-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94c156a1fc5bb45df38b55a361750cce", "sha256": "5aba32b344e60b6ec89b576ce98ff400f00151b348b7ed06d2448cb0e6394a90"}, "downloads": -1, "filename": "cafplot-0.1.tar.gz", "has_sig": false, "md5_digest": "94c156a1fc5bb45df38b55a361750cce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18424, "upload_time": "2020-05-01T01:12:05", "upload_time_iso_8601": "2020-05-01T01:12:05.679297Z", "url": "https://files.pythonhosted.org/packages/45/12/9990a6d8b1dc6fe353a1d5185eaf89b8f4a3733b0495399698d8c2d3af1b/cafplot-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b2549ef781520f9b58aee2849e24d35e", "sha256": "48a2f9a1ec7b711b1ed4f277f4f059d7f1b2ca719d6a6a86904f53d89be85bff"}, "downloads": -1, "filename": "cafplot-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b2549ef781520f9b58aee2849e24d35e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22872, "upload_time": "2020-05-01T01:12:03", "upload_time_iso_8601": "2020-05-01T01:12:03.064953Z", "url": "https://files.pythonhosted.org/packages/41/dd/7441d3e2de4e95049dd5601392f05a4160ded3064ead72c10952ac03e107/cafplot-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94c156a1fc5bb45df38b55a361750cce", "sha256": "5aba32b344e60b6ec89b576ce98ff400f00151b348b7ed06d2448cb0e6394a90"}, "downloads": -1, "filename": "cafplot-0.1.tar.gz", "has_sig": false, "md5_digest": "94c156a1fc5bb45df38b55a361750cce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18424, "upload_time": "2020-05-01T01:12:05", "upload_time_iso_8601": "2020-05-01T01:12:05.679297Z", "url": "https://files.pythonhosted.org/packages/45/12/9990a6d8b1dc6fe353a1d5185eaf89b8f4a3733b0495399698d8c2d3af1b/cafplot-0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:41 2020"}