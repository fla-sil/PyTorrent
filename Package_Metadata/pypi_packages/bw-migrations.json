{"info": {"author": "Chris Mutel", "author_email": "cmutel@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Mathematics"], "description": "# bw_migrations\n\nMigration data and utilities for Brightway IO and LCA in general\n\n[![Build Status](https://travis-ci.org/brightway-lca/bw_migrations.svg?branch=master)](https://travis-ci.org/brightway-lca/bw_migrations) [![Coverage Status](https://coveralls.io/repos/github/brightway-lca/bw_migrations/badge.svg?branch=master)](https://coveralls.io/github/brightway-lca/bw_migrations?branch=master) [![Build status](https://ci.appveyor.com/api/projects/status/lk0tbo21v2irm48x?svg=true)](https://ci.appveyor.com/project/cmutel/bw-migrations)\n\nMost databases use their own nomenclature for classification systems, units, etc. These systems need to be matched when linking from one database to another. Often, a simple mapping is suitable, and tools like [correspondentia](https://github.com/BONSAMURAIS/correspondentia) are a good fit. However, sometimes one needs more complexity, e.g. change field X to Y, but only if field A has value B. When ecoinvent released version 3, they changed their unit of mesaure for water from kilograms to cubic meters. ``bw_migrations`` provides tools for this more complicated transformations, and is built around the following data format:\n\n    {\n        # The fields on which to filter\n        'fields': ['name', 'category', 'unit'],\n        'data': [\n            (\n                # First element is input data in the order of `fields` above\n                ('Water', 'air', 'kilogram'),\n                # Second element is new values to substitute when all fields match\n                {\n                    'unit': 'cubic meter',\n                    '__multiplier__': 0.001\n                }\n            )\n        ]\n    }\n\nAnd is implemented with the following pseudo-code:\n\n    for element in input_data:\n        for original, new in migration['data']:\n            if all(element[field] == original[field] for field in migration['fields']):\n                element.update(dict(zip(migration['fields'], new)))\n\nThe actual code is a bit more complex, as `bw_migrations` can also do rescaling of probability distributions and disaggregation migrations (splitting one object into several outputs).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brightway-lca/bw_migrations", "keywords": "", "license": "NewBSD 3-clause; LICENSE", "maintainer": "", "maintainer_email": "", "name": "bw-migrations", "package_url": "https://pypi.org/project/bw-migrations/", "platform": "", "project_url": "https://pypi.org/project/bw-migrations/", "project_urls": {"Homepage": "https://github.com/brightway-lca/bw_migrations"}, "release_url": "https://pypi.org/project/bw-migrations/0.1/", "requires_dist": ["stats-arrays"], "requires_python": "", "summary": "Migration data and utilities for Brightway IO and LCA in general", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>bw_migrations</h1>\n<p>Migration data and utilities for Brightway IO and LCA in general</p>\n<p><a href=\"https://travis-ci.org/brightway-lca/bw_migrations\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9dacf5fbdbd769643181cde7a0671c1e753f5579/68747470733a2f2f7472617669732d63692e6f72672f6272696768747761792d6c63612f62775f6d6967726174696f6e732e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/brightway-lca/bw_migrations?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b43619bade3faa1c31ec600744e8669ff3245147/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6272696768747761792d6c63612f62775f6d6967726174696f6e732f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://ci.appveyor.com/project/cmutel/bw-migrations\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62b8762b1c30cb55fe729fe52e170362ee0a0efe/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6c6b3074626f3231763269726d3438783f7376673d74727565\"></a></p>\n<p>Most databases use their own nomenclature for classification systems, units, etc. These systems need to be matched when linking from one database to another. Often, a simple mapping is suitable, and tools like <a href=\"https://github.com/BONSAMURAIS/correspondentia\" rel=\"nofollow\">correspondentia</a> are a good fit. However, sometimes one needs more complexity, e.g. change field X to Y, but only if field A has value B. When ecoinvent released version 3, they changed their unit of mesaure for water from kilograms to cubic meters. <code>bw_migrations</code> provides tools for this more complicated transformations, and is built around the following data format:</p>\n<pre><code>{\n    # The fields on which to filter\n    'fields': ['name', 'category', 'unit'],\n    'data': [\n        (\n            # First element is input data in the order of `fields` above\n            ('Water', 'air', 'kilogram'),\n            # Second element is new values to substitute when all fields match\n            {\n                'unit': 'cubic meter',\n                '__multiplier__': 0.001\n            }\n        )\n    ]\n}\n</code></pre>\n<p>And is implemented with the following pseudo-code:</p>\n<pre><code>for element in input_data:\n    for original, new in migration['data']:\n        if all(element[field] == original[field] for field in migration['fields']):\n            element.update(dict(zip(migration['fields'], new)))\n</code></pre>\n<p>The actual code is a bit more complex, as <code>bw_migrations</code> can also do rescaling of probability distributions and disaggregation migrations (splitting one object into several outputs).</p>\n\n          </div>"}, "last_serial": 6048993, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8705b78ffa5ca1d9dfa13cb296293f8e", "sha256": "d6f79bbbe4de96d11d9918da93c0021a1ef4e6720f5b32b4b7e5888b5e93f6af"}, "downloads": -1, "filename": "bw_migrations-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8705b78ffa5ca1d9dfa13cb296293f8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8485, "upload_time": "2019-10-29T20:01:16", "upload_time_iso_8601": "2019-10-29T20:01:16.608640Z", "url": "https://files.pythonhosted.org/packages/4f/01/d62328ede4195cb18ff8dc6e8fc040fdda4095b352a8cb79080788368a09/bw_migrations-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1eb308126c9a8950ff1845fbb8e8e71", "sha256": "5a568fc157735b383bd4fc45ddf739e1a2029cafbe764eb84c9b302a4e52b4d1"}, "downloads": -1, "filename": "bw_migrations-0.1.tar.gz", "has_sig": false, "md5_digest": "e1eb308126c9a8950ff1845fbb8e8e71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8850, "upload_time": "2019-10-29T20:02:02", "upload_time_iso_8601": "2019-10-29T20:02:02.546738Z", "url": "https://files.pythonhosted.org/packages/e2/b1/8c46d0cd0d552cffee729ff7b18c70adbb029e60c52dff750218050e9d6b/bw_migrations-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8705b78ffa5ca1d9dfa13cb296293f8e", "sha256": "d6f79bbbe4de96d11d9918da93c0021a1ef4e6720f5b32b4b7e5888b5e93f6af"}, "downloads": -1, "filename": "bw_migrations-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8705b78ffa5ca1d9dfa13cb296293f8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8485, "upload_time": "2019-10-29T20:01:16", "upload_time_iso_8601": "2019-10-29T20:01:16.608640Z", "url": "https://files.pythonhosted.org/packages/4f/01/d62328ede4195cb18ff8dc6e8fc040fdda4095b352a8cb79080788368a09/bw_migrations-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1eb308126c9a8950ff1845fbb8e8e71", "sha256": "5a568fc157735b383bd4fc45ddf739e1a2029cafbe764eb84c9b302a4e52b4d1"}, "downloads": -1, "filename": "bw_migrations-0.1.tar.gz", "has_sig": false, "md5_digest": "e1eb308126c9a8950ff1845fbb8e8e71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8850, "upload_time": "2019-10-29T20:02:02", "upload_time_iso_8601": "2019-10-29T20:02:02.546738Z", "url": "https://files.pythonhosted.org/packages/e2/b1/8c46d0cd0d552cffee729ff7b18c70adbb029e60c52dff750218050e9d6b/bw_migrations-0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:53 2020"}