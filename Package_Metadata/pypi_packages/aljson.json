{"info": {"author": "Hamid Reza Zarepour", "author_email": "hamid.zarepour.dev@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Convert a SqlAlchemy query object to a dict(json)\n\nInstall\n=======\n\n::\n\n    pip install aljson\n\n\nUsage\n=====\n\n.. code:: python\n\n    from aljson import BaseMixin\n\n    # The Sqlalchemy model\n    class Parent(Base, BaseMixin):\n    __tablename__ = 'parent'\n    id = sa.Column(sa.Integer, primary_key=True, unique=True)\n    name = sa.Column(sa.String(64))\n\n    # query Parent model\n\n    print(result.to_json())\n\n\nFull example\n============\n\n.. code:: python\n\n    from sqlalchemy.orm import sessionmaker, relationship, backref\n    from sqlalchemy.ext.declarative import declarative_base\n    from aljson import BaseMixin\n    import sqlalchemy as sa\n\n    Base = declarative_base()\n\n\n    class Parent(Base, BaseMixin):\n        __tablename__ = 'parent'\n        id = sa.Column(sa.Integer, primary_key=True, unique=True)\n        name = sa.Column(sa.String(64))\n\n\n    class Child(Base, BaseMixin):\n        __tablename__ = 'child'\n        id = sa.Column(sa.Integer,  primary_key=True, unique=True)\n        name = sa.Column(sa.String(64))\n        parent_id = sa.Column(sa.Integer, sa.ForeignKey('parent.id'))\n        parent = relationship(\"Parent\")\n\n\n    # Create an engine that stores data in the local directory's\n    # sqlalchemy_example.db file.\n    engine = sa.create_engine('sqlite:///my_database.sqlite')\n\n    # Create all tables in the engine. This is equivalent to \"Create Table\"\n    # statements in raw SQL.\n    Base.metadata.create_all(engine)\n\n    DBSession = sessionmaker(bind=engine)\n    session = DBSession()\n\n\n    # Create a new parent and a child\n    new_parent = Parent()\n    new_parent.name = \"parent_1\"\n\n    new_child = Child()\n    new_child.name = \"child_1\"\n    new_child.parent = new_parent\n\n    session.add(new_parent)\n    session.add(new_child)\n\n    session.commit()\n\n    # Search for a row\n    query_result = session.query(Child).first()\n\n\n    # And you can call .to_json\n    print(query_result.to_json())\n\n    # The result should be like this:\n    # {'id': 1, 'name': 'child_1', 'parent_id': 1, 'parent': {'id': 1, 'name': 'parent_1'}}", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/hrzp/aljson/archive/0.3.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hrzp/aljson", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aljson", "package_url": "https://pypi.org/project/aljson/", "platform": "", "project_url": "https://pypi.org/project/aljson/", "project_urls": {"Download": "https://github.com/hrzp/aljson/archive/0.3.0.tar.gz", "Homepage": "https://github.com/hrzp/aljson"}, "release_url": "https://pypi.org/project/aljson/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "Convert a SqlAlchemy query object to a dict(json)", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Convert a SqlAlchemy query object to a dict(json)</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install aljson\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aljson</span> <span class=\"kn\">import</span> <span class=\"n\">BaseMixin</span>\n\n<span class=\"c1\"># The Sqlalchemy model</span>\n<span class=\"k\">class</span> <span class=\"nc\">Parent</span><span class=\"p\">(</span><span class=\"n\">Base</span><span class=\"p\">,</span> <span class=\"n\">BaseMixin</span><span class=\"p\">):</span>\n<span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'parent'</span>\n<span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># query Parent model</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"full-example\">\n<h2>Full example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.orm</span> <span class=\"kn\">import</span> <span class=\"n\">sessionmaker</span><span class=\"p\">,</span> <span class=\"n\">relationship</span><span class=\"p\">,</span> <span class=\"n\">backref</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.ext.declarative</span> <span class=\"kn\">import</span> <span class=\"n\">declarative_base</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aljson</span> <span class=\"kn\">import</span> <span class=\"n\">BaseMixin</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sqlalchemy</span> <span class=\"k\">as</span> <span class=\"nn\">sa</span>\n\n<span class=\"n\">Base</span> <span class=\"o\">=</span> <span class=\"n\">declarative_base</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Parent</span><span class=\"p\">(</span><span class=\"n\">Base</span><span class=\"p\">,</span> <span class=\"n\">BaseMixin</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'parent'</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Child</span><span class=\"p\">(</span><span class=\"n\">Base</span><span class=\"p\">,</span> <span class=\"n\">BaseMixin</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'child'</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">,</span>  <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">))</span>\n    <span class=\"n\">parent_id</span> <span class=\"o\">=</span> <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s1\">'parent.id'</span><span class=\"p\">))</span>\n    <span class=\"n\">parent</span> <span class=\"o\">=</span> <span class=\"n\">relationship</span><span class=\"p\">(</span><span class=\"s2\">\"Parent\"</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Create an engine that stores data in the local directory's</span>\n<span class=\"c1\"># sqlalchemy_example.db file.</span>\n<span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">create_engine</span><span class=\"p\">(</span><span class=\"s1\">'sqlite:///my_database.sqlite'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create all tables in the engine. This is equivalent to \"Create Table\"</span>\n<span class=\"c1\"># statements in raw SQL.</span>\n<span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"o\">.</span><span class=\"n\">create_all</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">)</span>\n\n<span class=\"n\">DBSession</span> <span class=\"o\">=</span> <span class=\"n\">sessionmaker</span><span class=\"p\">(</span><span class=\"n\">bind</span><span class=\"o\">=</span><span class=\"n\">engine</span><span class=\"p\">)</span>\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">DBSession</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Create a new parent and a child</span>\n<span class=\"n\">new_parent</span> <span class=\"o\">=</span> <span class=\"n\">Parent</span><span class=\"p\">()</span>\n<span class=\"n\">new_parent</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"parent_1\"</span>\n\n<span class=\"n\">new_child</span> <span class=\"o\">=</span> <span class=\"n\">Child</span><span class=\"p\">()</span>\n<span class=\"n\">new_child</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"child_1\"</span>\n<span class=\"n\">new_child</span><span class=\"o\">.</span><span class=\"n\">parent</span> <span class=\"o\">=</span> <span class=\"n\">new_parent</span>\n\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">new_parent</span><span class=\"p\">)</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">new_child</span><span class=\"p\">)</span>\n\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Search for a row</span>\n<span class=\"n\">query_result</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">Child</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># And you can call .to_json</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">query_result</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># The result should be like this:</span>\n<span class=\"c1\"># {'id': 1, 'name': 'child_1', 'parent_id': 1, 'parent': {'id': 1, 'name': 'parent_1'}}</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6525199, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fadbd2267ce56d4c845448c0b51908bf", "sha256": "6a6cd599200b34fac2c9e6401f1d51b1821b74a45d6b7bf415af15643d7170d2"}, "downloads": -1, "filename": "aljson-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fadbd2267ce56d4c845448c0b51908bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1612, "upload_time": "2020-01-27T07:13:24", "upload_time_iso_8601": "2020-01-27T07:13:24.186954Z", "url": "https://files.pythonhosted.org/packages/34/96/c91e9febf451d87504acce6bd75b24bfdf4b4d4da9988007f145bf452e8f/aljson-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b6b70109a0253c65806154a84efeaa9a", "sha256": "4c2fb45938c4aff026ba06ccaaced7caa78821b3a49d9e3b5fd2f2394c432484"}, "downloads": -1, "filename": "aljson-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b6b70109a0253c65806154a84efeaa9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2425, "upload_time": "2020-01-27T08:11:39", "upload_time_iso_8601": "2020-01-27T08:11:39.381988Z", "url": "https://files.pythonhosted.org/packages/c5/c6/643e278571c053079eee9f8b915c63e9281f338f9b8ee75655fd4ad52bf5/aljson-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "384b0289e983d9e1009e2404ddda0b21", "sha256": "b7a11c65ced9901469390c3e42f74afc2db8def739946b242500c6815627194a"}, "downloads": -1, "filename": "aljson-0.3.0.tar.gz", "has_sig": false, "md5_digest": "384b0289e983d9e1009e2404ddda0b21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2421, "upload_time": "2020-01-27T08:27:15", "upload_time_iso_8601": "2020-01-27T08:27:15.987973Z", "url": "https://files.pythonhosted.org/packages/d7/6c/daba09d0a7efa3927ce286da0117e07941c09287226a1d9e467ce6fce907/aljson-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "384b0289e983d9e1009e2404ddda0b21", "sha256": "b7a11c65ced9901469390c3e42f74afc2db8def739946b242500c6815627194a"}, "downloads": -1, "filename": "aljson-0.3.0.tar.gz", "has_sig": false, "md5_digest": "384b0289e983d9e1009e2404ddda0b21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2421, "upload_time": "2020-01-27T08:27:15", "upload_time_iso_8601": "2020-01-27T08:27:15.987973Z", "url": "https://files.pythonhosted.org/packages/d7/6c/daba09d0a7efa3927ce286da0117e07941c09287226a1d9e467ce6fce907/aljson-0.3.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:33 2020"}