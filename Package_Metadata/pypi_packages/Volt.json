{"info": {"author": "Wibowo Arindrarto", "author_email": "bow@bow.web.id", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: BSD License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP", "Topic :: Utilities"], "description": "====\nVOLT\n====\n\n--------------------------------------------------\nThe Python static website generator with potential\n--------------------------------------------------\n\n**Another static website generator?**\n\nSure, why not :)? The number of static site generators is continuously\ngrowing, but so far I have yet to find a flexible static site that suits my\nneeds. So I decided to write my own.\n\n**What's so different about Volt?**\n\nHere are some of my favorite features:\n\n1. **Automatic pagination**\n\n   Say you have a blog with 10 posts, each with its own set of tags that might\n   might not be present in all posts. By only by supplying the URL pattern,\n   Volt can generate the pages containing each blog post  categorized by tag,\n   paginated to your liking.\n\n   For example, you only need to supply ``tag/{tags}`` and Volt will generate\n   links to the pages ``tag/foo``, ``tag/bar``, ``tag/baz``, where each of these\n   page will contain all the posts sharing that tag.\n\n   And this doesn't apply only to tags. You can use it to create pages based on\n   authors, time (year, day, date, whatever you want), and any other data you\n   put in your posts. \n\n   All with a simple URL pattern in the configuration file, like so ::\n\n       PAGINATIONS = ('', 'tag/{tags}', '{time:%Y}', '{time:%Y/%m}', '{time:%Y/%m/%d}')\n\n\n2. **Auto-regenerating built-in server**\n\n   Static sites need to be generated repeatedly to reflect changes in their source.\n   After a while, doing this becomes cumbersome and annoying. Volt's server\n   automatically generates your static site whenever it detects changes in the\n   source and the configuration file, so you can focus on experimenting with your\n   actual site contents.\n\n\n3. **Modularity and extensibility**\n\n   Under the hood, Volt is actually a collection of different engines\n   responsible for different sections of your site. The blog engine, for\n   example generates the blog section of your site, while the plain engine,\n   generates simple web pages. `See how simple the blog engine code is\n   <http://github.com/bow/volt/blob/master/volt/engine/builtins/blog.py>`_ \n   or take a peek at the `main site generator function \n   <http://github.com/bow/volt/blob/master/volt/generator.py>`_ to get a\n   picture of how the engines work.\n  \n   Finally, Volt comes with a plugin architecture that lets you hook into the\n   engines' actions. Seven plugins comes packed in with volt: \n\n   - Atom feed generator plugin (atomic, no extra dependency)\n\n   - Markup processing plugins:\n\n     - reStructured text (rst_parser, requires\n       `docutils <http://docutils.sourceforge.net/>`_)\n\n     - Markdown (markdown_parser, requires `python-markdown\n       <http://freewisdom.org/projects/python-markdown/Installation>`_ or\n       `python-discount <http://github.com/trapeze/python-discount>`_)\n\n     - Textile (textile_parser, requires `python-textile \n       <https://github.com/chrisdrackett/python-textile>`_)\n   \n   - Syntax highlighter plugin (syntax, requires `pygments\n     <http://pygments.org/>`_)\n\n   - CSS minifier plugin (css_minifier, requires `cssmin\n     <https://github.com/zacharyvoase/cssmin>`_)\n\n   - Javascript minifier plugin (js_minifier, requires `jsmin\n     <http://pypi.python.org/pypi/jsmin>`_)\n\n   `Browse their code \n   <http://github.com/bow/volt/tree/master/volt/plugin/builtins>`_ \n   to see how you can easily write your own plugin.\n\n\n4. **Centrally-managed configuration with flexible options**\n\n   Sort your content according to time, or title, or author name, or tags,\n   anything you want. Set global values for all content, e.g. authors for all\n   blog posts. Define your own Jinja2 tests or filters. Set the plugin options.\n   You can do all these in Volt through one central configuration file: \n   ``voltconf.py``, conveniently accessible in your project folder.\n\n\nAll these with the perks of static websites: easy deployment,\neasy back-up and tracking, security, and speed.\n\n\n------------\nINSTALLATION\n------------\n\nLatest version from PyPI (0.0.2): ``pip install volt``\n\nBleeding edge from main development repo: ``pip install git+https://github.com/bow/volt.git``\n\nVolt is still in alpha and under heavy development. Things will break here and\nthere, but it's usable enough for creating real websites:\n\n* `bow.web.id <http://bow.web.id/>`_ (`source <http://github.com/bow/volt>`_,\n  using the latest development version)\n\n* `spaetzblog <http://sspaeth.de/>`_\n\nDependency:\n\n* `Jinja2 <http://jinja.pocoo.org/docs/>`_\n\nOptional dependencies:\n\n* `python-markdown <http://freewisdom.org/projects/python-markdown/Installation>`_\n  (installed by default for ``volt demo``, can be safely removed if not used)\n\n\n-----\nUSAGE\n-----\n\nGo through a superquick demo of Volt by running ``volt demo`` in an empty\ndirectory and opening ``localhost:8000`` in your browser.\n\nHere's a quick summary of the currently available commands:\n\n* ``volt init``: Starts a Volt project, must be run inside an empty directory.\n  The ``voltconf.py`` file created by this command currently contains almost all\n  the default settings. You can safely edit or remove them.\n\n* ``volt demo``: Starts the demo, must be run inside an empty directory.\n\n* ``volt gen``: Generates the website into a ``site`` folder in your current\n  project directory.\n\n* ``volt serve``: Generates the website and Starts the server pointing to the\n  ``site`` directory.\n\n* ``volt ext``: Adds a template for writing your custom engine, plugin, or\n  widget. Custom engines and plugins are stored respectively inside the \n  ``engines`` and ``plugins`` directory in the root Volt project directory.\n  Widgets are stored inside ``widgets.py`` in the same directory. You can also\n  specify an additional ``--builtin`` to copy a builtin engine/plugin/widget\n  to your Volt project directory.\n\n* ``volt version``: Shows the current Volt version.\n\nAll of the commands except for ``init`` and ``demo`` can be run from anywhere\ninside a Volt project directory.\n\nThe docs are, unfortunately, minimum at the moment. For now, the source is the\nprimary documentation.\n\n\n-----\nPLANS\n-----\n\nSee the `TODO <https://github.com/bow/volt/blob/master/TODO>`_ list.\n\n\n-----------\nATTRIBUTION\n-----------\n\nVolt was inspired by `Blogofile <http://github.com/EnigmaCurry/blogofile>`_,\nwhich unfortunately has `ceased development \n<https://groups.google.com/d/msg/blogofile-discuss/MG02xNwS8Lc/_MK-gmOU2iEJ>`_.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/bow/volt/", "keywords": "static website", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "Volt", "package_url": "https://pypi.org/project/Volt/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Volt/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/bow/volt/"}, "release_url": "https://pypi.org/project/Volt/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "The static website generator with potential", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"the-python-static-website-generator-with-potential\">\n<h2>The Python static website generator with potential</h2>\n<p><strong>Another static website generator?</strong></p>\n<p>Sure, why not :)? The number of static site generators is continuously\ngrowing, but so far I have yet to find a flexible static site that suits my\nneeds. So I decided to write my own.</p>\n<p><strong>What\u2019s so different about Volt?</strong></p>\n<p>Here are some of my favorite features:</p>\n<ol>\n<li><p><strong>Automatic pagination</strong></p>\n<p>Say you have a blog with 10 posts, each with its own set of tags that might\nmight not be present in all posts. By only by supplying the URL pattern,\nVolt can generate the pages containing each blog post  categorized by tag,\npaginated to your liking.</p>\n<p>For example, you only need to supply <tt><span class=\"pre\">tag/{tags}</span></tt> and Volt will generate\nlinks to the pages <tt>tag/foo</tt>, <tt>tag/bar</tt>, <tt>tag/baz</tt>, where each of these\npage will contain all the posts sharing that tag.</p>\n<p>And this doesn\u2019t apply only to tags. You can use it to create pages based on\nauthors, time (year, day, date, whatever you want), and any other data you\nput in your posts.</p>\n<p>All with a simple URL pattern in the configuration file, like so</p>\n<pre>PAGINATIONS = ('', 'tag/{tags}', '{time:%Y}', '{time:%Y/%m}', '{time:%Y/%m/%d}')\n</pre>\n</li>\n<li><p><strong>Auto-regenerating built-in server</strong></p>\n<p>Static sites need to be generated repeatedly to reflect changes in their source.\nAfter a while, doing this becomes cumbersome and annoying. Volt\u2019s server\nautomatically generates your static site whenever it detects changes in the\nsource and the configuration file, so you can focus on experimenting with your\nactual site contents.</p>\n</li>\n<li><p><strong>Modularity and extensibility</strong></p>\n<p>Under the hood, Volt is actually a collection of different engines\nresponsible for different sections of your site. The blog engine, for\nexample generates the blog section of your site, while the plain engine,\ngenerates simple web pages. <a href=\"http://github.com/bow/volt/blob/master/volt/engine/builtins/blog.py\" rel=\"nofollow\">See how simple the blog engine code is</a>\nor take a peek at the <a href=\"http://github.com/bow/volt/blob/master/volt/generator.py\" rel=\"nofollow\">main site generator function</a> to get a\npicture of how the engines work.</p>\n<p>Finally, Volt comes with a plugin architecture that lets you hook into the\nengines\u2019 actions. Seven plugins comes packed in with volt:</p>\n<ul>\n<li>Atom feed generator plugin (atomic, no extra dependency)</li>\n<li>Markup processing plugins:<ul>\n<li>reStructured text (rst_parser, requires\n<a href=\"http://docutils.sourceforge.net/\" rel=\"nofollow\">docutils</a>)</li>\n<li>Markdown (markdown_parser, requires <a href=\"http://freewisdom.org/projects/python-markdown/Installation\" rel=\"nofollow\">python-markdown</a> or\n<a href=\"http://github.com/trapeze/python-discount\" rel=\"nofollow\">python-discount</a>)</li>\n<li>Textile (textile_parser, requires <a href=\"https://github.com/chrisdrackett/python-textile\" rel=\"nofollow\">python-textile</a>)</li>\n</ul>\n</li>\n<li>Syntax highlighter plugin (syntax, requires <a href=\"http://pygments.org/\" rel=\"nofollow\">pygments</a>)</li>\n<li>CSS minifier plugin (css_minifier, requires <a href=\"https://github.com/zacharyvoase/cssmin\" rel=\"nofollow\">cssmin</a>)</li>\n<li>Javascript minifier plugin (js_minifier, requires <a href=\"http://pypi.python.org/pypi/jsmin\" rel=\"nofollow\">jsmin</a>)</li>\n</ul>\n<p><a href=\"http://github.com/bow/volt/tree/master/volt/plugin/builtins\" rel=\"nofollow\">Browse their code</a>\nto see how you can easily write your own plugin.</p>\n</li>\n<li><p><strong>Centrally-managed configuration with flexible options</strong></p>\n<p>Sort your content according to time, or title, or author name, or tags,\nanything you want. Set global values for all content, e.g. authors for all\nblog posts. Define your own Jinja2 tests or filters. Set the plugin options.\nYou can do all these in Volt through one central configuration file:\n<tt>voltconf.py</tt>, conveniently accessible in your project folder.</p>\n</li>\n</ol>\n<p>All these with the perks of static websites: easy deployment,\neasy back-up and tracking, security, and speed.</p>\n</div>\n<div id=\"installation\">\n<h2>INSTALLATION</h2>\n<p>Latest version from PyPI (0.0.2): <tt>pip install volt</tt></p>\n<p>Bleeding edge from main development repo: <tt>pip install <span class=\"pre\">git+https://github.com/bow/volt.git</span></tt></p>\n<p>Volt is still in alpha and under heavy development. Things will break here and\nthere, but it\u2019s usable enough for creating real websites:</p>\n<ul>\n<li><a href=\"http://bow.web.id/\" rel=\"nofollow\">bow.web.id</a> (<a href=\"http://github.com/bow/volt\" rel=\"nofollow\">source</a>,\nusing the latest development version)</li>\n<li><a href=\"http://sspaeth.de/\" rel=\"nofollow\">spaetzblog</a></li>\n</ul>\n<p>Dependency:</p>\n<ul>\n<li><a href=\"http://jinja.pocoo.org/docs/\" rel=\"nofollow\">Jinja2</a></li>\n</ul>\n<p>Optional dependencies:</p>\n<ul>\n<li><a href=\"http://freewisdom.org/projects/python-markdown/Installation\" rel=\"nofollow\">python-markdown</a>\n(installed by default for <tt>volt demo</tt>, can be safely removed if not used)</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>USAGE</h2>\n<p>Go through a superquick demo of Volt by running <tt>volt demo</tt> in an empty\ndirectory and opening <tt>localhost:8000</tt> in your browser.</p>\n<p>Here\u2019s a quick summary of the currently available commands:</p>\n<ul>\n<li><tt>volt init</tt>: Starts a Volt project, must be run inside an empty directory.\nThe <tt>voltconf.py</tt> file created by this command currently contains almost all\nthe default settings. You can safely edit or remove them.</li>\n<li><tt>volt demo</tt>: Starts the demo, must be run inside an empty directory.</li>\n<li><tt>volt gen</tt>: Generates the website into a <tt>site</tt> folder in your current\nproject directory.</li>\n<li><tt>volt serve</tt>: Generates the website and Starts the server pointing to the\n<tt>site</tt> directory.</li>\n<li><tt>volt ext</tt>: Adds a template for writing your custom engine, plugin, or\nwidget. Custom engines and plugins are stored respectively inside the\n<tt>engines</tt> and <tt>plugins</tt> directory in the root Volt project directory.\nWidgets are stored inside <tt>widgets.py</tt> in the same directory. You can also\nspecify an additional <tt><span class=\"pre\">--builtin</span></tt> to copy a builtin engine/plugin/widget\nto your Volt project directory.</li>\n<li><tt>volt version</tt>: Shows the current Volt version.</li>\n</ul>\n<p>All of the commands except for <tt>init</tt> and <tt>demo</tt> can be run from anywhere\ninside a Volt project directory.</p>\n<p>The docs are, unfortunately, minimum at the moment. For now, the source is the\nprimary documentation.</p>\n</div>\n<div id=\"plans\">\n<h2>PLANS</h2>\n<p>See the <a href=\"https://github.com/bow/volt/blob/master/TODO\" rel=\"nofollow\">TODO</a> list.</p>\n</div>\n<div id=\"attribution\">\n<h2>ATTRIBUTION</h2>\n<p>Volt was inspired by <a href=\"http://github.com/EnigmaCurry/blogofile\" rel=\"nofollow\">Blogofile</a>,\nwhich unfortunately has <a href=\"https://groups.google.com/d/msg/blogofile-discuss/MG02xNwS8Lc/_MK-gmOU2iEJ\" rel=\"nofollow\">ceased development</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 732216, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "91e291d8d0ae8c9e308c295d4588b355", "sha256": "c23c43cbc31eb0a68b28b4627380a287874b2beb961b33016d1654b7253232bd"}, "downloads": -1, "filename": "Volt-0.0.1.tar.gz", "has_sig": false, "md5_digest": "91e291d8d0ae8c9e308c295d4588b355", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55023, "upload_time": "2012-03-06T20:39:31", "upload_time_iso_8601": "2012-03-06T20:39:31.238566Z", "url": "https://files.pythonhosted.org/packages/c6/de/4c201f73d210d0e47b6c54619d78ae0bc14e435797884e00f3dbcce7ad19/Volt-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a3e0e6344b57c6183649033b6fb810d9", "sha256": "b33a77f79125f913f0de161b0b7d8e2076dfa648420bc0a1e07adcd277b44784"}, "downloads": -1, "filename": "Volt-0.0.2.tar.gz", "has_sig": false, "md5_digest": "a3e0e6344b57c6183649033b6fb810d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54173, "upload_time": "2012-03-25T09:50:20", "upload_time_iso_8601": "2012-03-25T09:50:20.893427Z", "url": "https://files.pythonhosted.org/packages/66/af/dcc919e03084d199d8f0a3db48201f4ea8a2bdcd6b0264cd56fd774e6a1b/Volt-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e573d052b03763591197a42c6e2ede72", "sha256": "fdec81801bbdde7bf9f110dc073d2c22caa76651062859fa509b53adbde41c11"}, "downloads": -1, "filename": "Volt-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e573d052b03763591197a42c6e2ede72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 173098, "upload_time": "2012-04-24T03:49:30", "upload_time_iso_8601": "2012-04-24T03:49:30.125201Z", "url": "https://files.pythonhosted.org/packages/84/e1/e6e80ac68314c0f426cd74fed7a944b8e7797ccc53a2c70f427a05a25864/Volt-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e573d052b03763591197a42c6e2ede72", "sha256": "fdec81801bbdde7bf9f110dc073d2c22caa76651062859fa509b53adbde41c11"}, "downloads": -1, "filename": "Volt-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e573d052b03763591197a42c6e2ede72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 173098, "upload_time": "2012-04-24T03:49:30", "upload_time_iso_8601": "2012-04-24T03:49:30.125201Z", "url": "https://files.pythonhosted.org/packages/84/e1/e6e80ac68314c0f426cd74fed7a944b8e7797ccc53a2c70f427a05a25864/Volt-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:34:28 2020"}