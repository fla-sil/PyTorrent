{"info": {"author": "Mark Steve Samson", "author_email": "hello@marksteve.com", "bugtrack_url": null, "classifiers": [], "description": "===============\nFlask-Beanstalk\n===============\n\n.. image:: http://img.shields.io/pypi/v/Flask-Beanstalk.png\n\nUtilities for using Beanstalk with Flask\n\n------\nClient\n------\n\n``flask_beanstalk.Beanstalk`` is a simple wrapper for ``beanstalkc.Connection``\nthat allows reading configuration from ``app.config``.\n\n::\n\n  from flask import Flask\n  from flask_beanstalk import Beanstalk\n\n  app = Flask(__name__)\n  beanstalk = Beanstalk(app)  # or beanstalk.init_app(app)\n\nConfiguration\n=============\n\n::\n\n  app.config['BEANSTALK_HOST']\n  app.config['BEANSTALK_PORT']\n  app.config['BEANSTALK_PARSE_YAML']\n  app.config['BEANSTALK_CONN_TIMEOUT']\n\n------\nWorker\n------\n\nDefine and spawn workers by subclassing from ``flask_beanstalk.Worker``.\n``flask_beanstalk.Worker`` inherits from ``gevent.Greenlet`` but ``gevent``\nis an optional dependency in case you just want to use the client.\n\n::\n\n  import gevent\n  from flask_beanstalk import Worker as _Worker\n\n  class Worker(_Worker):\n    def run(self, job):\n      self._logger.info('Received: %r' % job.body)\n      job.delete()\n\n  workers = Worker.spawn_workers(10)\n  try:\n    while True:\n      gevent.sleep(10000)\n  except KeyboardInterrupt:\n    Worker.stop_workers(workers)\n\n----------\nTry it out\n----------\n\nInstall and run ``beanstalkd`` if you haven't done so yet.\n\n::\n\n  git clone https://github.com/marksteve/flask-beanstalk.git\n  cd flask-beanstalk\n  mkvirtualenv flask-beanstalk\n  workon flask-beanstalk\n  python setup.py develop\n  python example_worker.py\n\nOn another terminal::\n\n  workon flask-beanstalk\n  python example.py\n\nGo to localhost:5000 in your browser to send a job.\nThe worker should be able to accept and process it.\nTry to send multiple jobs before sending a SIGINT\nto the worker. Jobs being worked on should be\nprocessed first before the worker shuts down.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marksteve/flask-beanstalk", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "Flask-Beanstalk", "package_url": "https://pypi.org/project/Flask-Beanstalk/", "platform": "any", "project_url": "https://pypi.org/project/Flask-Beanstalk/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/marksteve/flask-beanstalk"}, "release_url": "https://pypi.org/project/Flask-Beanstalk/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "Utilities for using Beanstalk with Flask", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"http://img.shields.io/pypi/v/Flask-Beanstalk.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ad8e2d3d2e510b96fc2b002e77cee6ec5f18474/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f466c61736b2d4265616e7374616c6b2e706e67\">\n<p>Utilities for using Beanstalk with Flask</p>\n<div id=\"client\">\n<h2>Client</h2>\n<p><tt>flask_beanstalk.Beanstalk</tt> is a simple wrapper for <tt>beanstalkc.Connection</tt>\nthat allows reading configuration from <tt>app.config</tt>.</p>\n<pre>from flask import Flask\nfrom flask_beanstalk import Beanstalk\n\napp = Flask(__name__)\nbeanstalk = Beanstalk(app)  # or beanstalk.init_app(app)\n</pre>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<pre>app.config['BEANSTALK_HOST']\napp.config['BEANSTALK_PORT']\napp.config['BEANSTALK_PARSE_YAML']\napp.config['BEANSTALK_CONN_TIMEOUT']\n</pre>\n</div>\n</div>\n<div id=\"worker\">\n<h2>Worker</h2>\n<p>Define and spawn workers by subclassing from <tt>flask_beanstalk.Worker</tt>.\n<tt>flask_beanstalk.Worker</tt> inherits from <tt>gevent.Greenlet</tt> but <tt>gevent</tt>\nis an optional dependency in case you just want to use the client.</p>\n<pre>import gevent\nfrom flask_beanstalk import Worker as _Worker\n\nclass Worker(_Worker):\n  def run(self, job):\n    self._logger.info('Received: %r' % job.body)\n    job.delete()\n\nworkers = Worker.spawn_workers(10)\ntry:\n  while True:\n    gevent.sleep(10000)\nexcept KeyboardInterrupt:\n  Worker.stop_workers(workers)\n</pre>\n</div>\n<div id=\"try-it-out\">\n<h2>Try it out</h2>\n<p>Install and run <tt>beanstalkd</tt> if you haven\u2019t done so yet.</p>\n<pre>git clone https://github.com/marksteve/flask-beanstalk.git\ncd flask-beanstalk\nmkvirtualenv flask-beanstalk\nworkon flask-beanstalk\npython setup.py develop\npython example_worker.py\n</pre>\n<p>On another terminal:</p>\n<pre>workon flask-beanstalk\npython example.py\n</pre>\n<p>Go to localhost:5000 in your browser to send a job.\nThe worker should be able to accept and process it.\nTry to send multiple jobs before sending a SIGINT\nto the worker. Jobs being worked on should be\nprocessed first before the worker shuts down.</p>\n</div>\n\n          </div>"}, "last_serial": 1718561, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a97484dab40e028b46f3e5fec4275f6a", "sha256": "3ce9639b45d5c33a93ec3daaa42d471406541037ce4f23878bb6408a655e0e82"}, "downloads": -1, "filename": "Flask-Beanstalk-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a97484dab40e028b46f3e5fec4275f6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2398, "upload_time": "2013-06-16T12:34:17", "upload_time_iso_8601": "2013-06-16T12:34:17.251401Z", "url": "https://files.pythonhosted.org/packages/77/a8/43e80815037bcc3afa1a90bd92af0f7d2ebef7a672feff6a4a3b954e313a/Flask-Beanstalk-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "3e8ae317b2518e1e08674e431b37a22e", "sha256": "5736aca79e1527648d9247eea2bdc451b2c3d9154111884fa2896eff48ae532b"}, "downloads": -1, "filename": "Flask-Beanstalk-0.0.2.tar.gz", "has_sig": false, "md5_digest": "3e8ae317b2518e1e08674e431b37a22e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3051, "upload_time": "2015-09-10T03:57:01", "upload_time_iso_8601": "2015-09-10T03:57:01.454155Z", "url": "https://files.pythonhosted.org/packages/19/14/86f3ed2cd6e524e077b10d8505902a3339e90bc9ebaf4f3e51fcdcb78b89/Flask-Beanstalk-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "8b9ea36d82a0d4337cd560539a09f026", "sha256": "ddfcd74f8c33c900133a8de4bd3c2da67dede3ce8048fd4cd31e4ea8e9a7aa96"}, "downloads": -1, "filename": "Flask-Beanstalk-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8b9ea36d82a0d4337cd560539a09f026", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3077, "upload_time": "2015-09-11T07:29:38", "upload_time_iso_8601": "2015-09-11T07:29:38.503283Z", "url": "https://files.pythonhosted.org/packages/08/3f/65766093bc9c746b2f8d03fd9cbdc4f352a9222d0239f456270d64610d49/Flask-Beanstalk-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b9ea36d82a0d4337cd560539a09f026", "sha256": "ddfcd74f8c33c900133a8de4bd3c2da67dede3ce8048fd4cd31e4ea8e9a7aa96"}, "downloads": -1, "filename": "Flask-Beanstalk-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8b9ea36d82a0d4337cd560539a09f026", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3077, "upload_time": "2015-09-11T07:29:38", "upload_time_iso_8601": "2015-09-11T07:29:38.503283Z", "url": "https://files.pythonhosted.org/packages/08/3f/65766093bc9c746b2f8d03fd9cbdc4f352a9222d0239f456270d64610d49/Flask-Beanstalk-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:03:05 2020"}