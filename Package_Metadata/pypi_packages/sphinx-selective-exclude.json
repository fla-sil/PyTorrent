{"info": {"author": "Paul Sokolovsky", "author_email": "pfalcon@users.sourceforge.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Documentation", "Topic :: Utilities"], "description": "Sphinx eager \".. only::\" directive and other selective rendition extensions\n===========================================================================\n\nProject home page: https://github.com/pfalcon/sphinx_selective_exclude\n\nThe implementation of \".. only::\" directive in Sphinx documentation\ngeneration tool is known to violate principles of least user surprise\nand user expectations in general. Instead of excluding content early\nin the pipeline (pre-processor style), Sphinx defers exclusion until\noutput phase, and what's the worst, various stages processing ignore\n\"only\" blocks and their exclusion status, so they may leak unexpected\ninformation into ToC, indexes, etc.\n\nThere's multiple issues submitted upstream on this matter:\n\n* https://github.com/sphinx-doc/sphinx/issues/2150\n* https://github.com/sphinx-doc/sphinx/issues/1717\n* https://github.com/sphinx-doc/sphinx/issues/1488\n* etc.\n\nThey are largely ignored by Sphinx maintainers.\n\nThis projects tries to rectify situation on users' side. It actually\nchanges the way Sphinx processes \"only\" directive, but does this\nwithout forking the project, and instead is made as a standard\nSphinx extension, which a user may add to their documentation config.\nUnlike normal extensions, extensions provided in this package\nmonkey-patch Sphinx core to work in a way expected by users.\n\neager_only\n----------\n\nThe core extension provided by the package is called `eager_only` and\nis based on the idea by Andrea Cassioli (see bugreports above) to\nprocess \"only\" directive as soon as possible during parsing phase.\nThis approach has some drawbacks, like producing warnings like\n\"WARNING: document isn't included in any toctree\" if \"only\" is used\nto shape up a toctree, or the fact that changing a documentation\nbuilder (html/latex/etc.) will almost certainly require complete\nrebuild of documentation. But these are relatively minor issues\ncomparing to completely broken way \"only\" works in upstream Sphinx.\n\nmodindex_exclude\n----------------\n\n\"only\" directive allows for fine-grained conditional exclusion, but\nsometimes you may want to exclude entire module(s) at once. Even if\nyou wrap an entire module description in \"only\" directive, like:\n\n    .. only: option1\n        .. module:: my_module\n    \n        ...\n\nYou will still have an HTML page generated, albeit empty. It may also\ngo into indexes, so will be discoverable by users, leading to less\nthan ideal experience. `modindex_exclude` extension is design to\nresolve this issue, by making sure that any reference of a module\nis excluded from Python module index (\"modindex\"), as well as\ngeneral cross-reference index (\"genindex\"). In the latter case,\nany symbol belong to a module will be excluded. Unlike `eager_only`\nextension which appear to have issued with \"latexpdf\" builder,\n`modindex_exclude` is useful for PDF, and allows to get cleaner\nindex for PDF, just the same as for HTML.\n\nsearch_auto_exclude\n-------------------\n\nEven if you exclude soem documents from toctree:: using only::\ndirective, they will be indexed for full-text search, so user may\nfind them and get confused. This plugin follows very simple idea\nthat if you didn't include some documents in the toctree, then\nyou didn't want them to be accessible (e.g. for a particular\nconfiguration), and so will make sure they aren't indexed either.\n\nThis extension depends on `eager_only` and won't work without it.\nNote that Sphinx will issue warnings, as usual, for any documents\nnot included in a toctree. This is considered a feature, and gives\nyou a chance to check that document exclusions are indeed right\nfor a particular configuration you build (and not that you forgot\nto add something to a toctree).\n\nSummary\n-------\n\nBased on the above, sphinx_selective_exclude offers extension to let\nyou:\n\n* Make \"only::\" directive work in an expected, intuitive manner, using\n  `eager_only` extension.\n* However, if you apply only:: to toctree::, excluded documents will\n  still be available via full-text search, so you need to use\n  `search_auto_exclude` for that to work as expected.\n* Similar to search, indexes may also require special treatment, hence\n  there's the `modindex_exclude` extension.\n\nMost likely, you will want to use all 3 extensions together - if you\nreally want build subsets of docimentation covering sufficiently different\nconfigurations from a single doctree. However, if one of them is enough\nto cover your usecase, that's OK to (and why they were separated into\n3 extensions, to follow KISS and \"least surprise\" principles and to\nnot make people deal with things they aren't interested in). In this case,\nhowever remember there're other extensions, if you later hit a usecase\nwhen they're needed.\n\nUsage\n-----\n\nTo use these extensions, add https://github.com/pfalcon/sphinx_selective_exclude\nas a git submodule to your project, in documentation folder (where\nSphinx conf.py is located). Alternatively, commit sphinx_selective_exclude\ndirectory instead of making it a submodule (you will need to pick up\nany project updates manually then).\n\nAdd following lines to \"extensions\" settings in your conf.py (you\nlikely already have some standard Sphinx extensions enabled):\n\n    extensions = [\n        ...\n        'sphinx_selective_exclude.eager_only',\n        'sphinx_selective_exclude.search_auto_exclude',\n        'sphinx_selective_exclude.modindex_exclude',\n    ]\n\nAs discussed above, you may enable all extensions, or one by one.\n\nPlease note that to make sure these extensions work well and avoid producing\noutput docs with artifacts, it is IMPERATIVE to remove cached doctree if\nyou rebuild documentation with another builder (i.e. with different output\nformat). Also, to stay on safe side, it's recommended to remove old doctree\nanyway before generating production-ready documentation for publishing. To\ndo that, run something like:\n\n    rm -rf _build/doctrees/\n\nA typical artificat when not following these simple rules is that content\nof some sections may be missing. If you face anything like that, just\nremember what's written above and remove cached doctrees.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/pfalcon/sphinx_selective_exclude/tarball/1.0.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pfalcon/sphinx_selective_exclude", "keywords": "sphinx,only,plugin", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "sphinx-selective-exclude", "package_url": "https://pypi.org/project/sphinx-selective-exclude/", "platform": "any", "project_url": "https://pypi.org/project/sphinx-selective-exclude/", "project_urls": {"Download": "https://github.com/pfalcon/sphinx_selective_exclude/tarball/1.0.3", "Homepage": "https://github.com/pfalcon/sphinx_selective_exclude"}, "release_url": "https://pypi.org/project/sphinx-selective-exclude/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "Sphinx eager \".. only::\" directive and other selective rendition extensions", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Sphinx eager \".. only::\" directive and other selective rendition extensions</h1>\n<p>Project home page: <a href=\"https://github.com/pfalcon/sphinx_selective_exclude\" rel=\"nofollow\">https://github.com/pfalcon/sphinx_selective_exclude</a></p>\n<p>The implementation of \".. only::\" directive in Sphinx documentation\ngeneration tool is known to violate principles of least user surprise\nand user expectations in general. Instead of excluding content early\nin the pipeline (pre-processor style), Sphinx defers exclusion until\noutput phase, and what's the worst, various stages processing ignore\n\"only\" blocks and their exclusion status, so they may leak unexpected\ninformation into ToC, indexes, etc.</p>\n<p>There's multiple issues submitted upstream on this matter:</p>\n<ul>\n<li><a href=\"https://github.com/sphinx-doc/sphinx/issues/2150\" rel=\"nofollow\">https://github.com/sphinx-doc/sphinx/issues/2150</a></li>\n<li><a href=\"https://github.com/sphinx-doc/sphinx/issues/1717\" rel=\"nofollow\">https://github.com/sphinx-doc/sphinx/issues/1717</a></li>\n<li><a href=\"https://github.com/sphinx-doc/sphinx/issues/1488\" rel=\"nofollow\">https://github.com/sphinx-doc/sphinx/issues/1488</a></li>\n<li>etc.</li>\n</ul>\n<p>They are largely ignored by Sphinx maintainers.</p>\n<p>This projects tries to rectify situation on users' side. It actually\nchanges the way Sphinx processes \"only\" directive, but does this\nwithout forking the project, and instead is made as a standard\nSphinx extension, which a user may add to their documentation config.\nUnlike normal extensions, extensions provided in this package\nmonkey-patch Sphinx core to work in a way expected by users.</p>\n<h2>eager_only</h2>\n<p>The core extension provided by the package is called <code>eager_only</code> and\nis based on the idea by Andrea Cassioli (see bugreports above) to\nprocess \"only\" directive as soon as possible during parsing phase.\nThis approach has some drawbacks, like producing warnings like\n\"WARNING: document isn't included in any toctree\" if \"only\" is used\nto shape up a toctree, or the fact that changing a documentation\nbuilder (html/latex/etc.) will almost certainly require complete\nrebuild of documentation. But these are relatively minor issues\ncomparing to completely broken way \"only\" works in upstream Sphinx.</p>\n<h2>modindex_exclude</h2>\n<p>\"only\" directive allows for fine-grained conditional exclusion, but\nsometimes you may want to exclude entire module(s) at once. Even if\nyou wrap an entire module description in \"only\" directive, like:</p>\n<pre><code>.. only: option1\n    .. module:: my_module\n\n    ...\n</code></pre>\n<p>You will still have an HTML page generated, albeit empty. It may also\ngo into indexes, so will be discoverable by users, leading to less\nthan ideal experience. <code>modindex_exclude</code> extension is design to\nresolve this issue, by making sure that any reference of a module\nis excluded from Python module index (\"modindex\"), as well as\ngeneral cross-reference index (\"genindex\"). In the latter case,\nany symbol belong to a module will be excluded. Unlike <code>eager_only</code>\nextension which appear to have issued with \"latexpdf\" builder,\n<code>modindex_exclude</code> is useful for PDF, and allows to get cleaner\nindex for PDF, just the same as for HTML.</p>\n<h2>search_auto_exclude</h2>\n<p>Even if you exclude soem documents from toctree:: using only::\ndirective, they will be indexed for full-text search, so user may\nfind them and get confused. This plugin follows very simple idea\nthat if you didn't include some documents in the toctree, then\nyou didn't want them to be accessible (e.g. for a particular\nconfiguration), and so will make sure they aren't indexed either.</p>\n<p>This extension depends on <code>eager_only</code> and won't work without it.\nNote that Sphinx will issue warnings, as usual, for any documents\nnot included in a toctree. This is considered a feature, and gives\nyou a chance to check that document exclusions are indeed right\nfor a particular configuration you build (and not that you forgot\nto add something to a toctree).</p>\n<h2>Summary</h2>\n<p>Based on the above, sphinx_selective_exclude offers extension to let\nyou:</p>\n<ul>\n<li>Make \"only::\" directive work in an expected, intuitive manner, using\n<code>eager_only</code> extension.</li>\n<li>However, if you apply only:: to toctree::, excluded documents will\nstill be available via full-text search, so you need to use\n<code>search_auto_exclude</code> for that to work as expected.</li>\n<li>Similar to search, indexes may also require special treatment, hence\nthere's the <code>modindex_exclude</code> extension.</li>\n</ul>\n<p>Most likely, you will want to use all 3 extensions together - if you\nreally want build subsets of docimentation covering sufficiently different\nconfigurations from a single doctree. However, if one of them is enough\nto cover your usecase, that's OK to (and why they were separated into\n3 extensions, to follow KISS and \"least surprise\" principles and to\nnot make people deal with things they aren't interested in). In this case,\nhowever remember there're other extensions, if you later hit a usecase\nwhen they're needed.</p>\n<h2>Usage</h2>\n<p>To use these extensions, add <a href=\"https://github.com/pfalcon/sphinx_selective_exclude\" rel=\"nofollow\">https://github.com/pfalcon/sphinx_selective_exclude</a>\nas a git submodule to your project, in documentation folder (where\nSphinx conf.py is located). Alternatively, commit sphinx_selective_exclude\ndirectory instead of making it a submodule (you will need to pick up\nany project updates manually then).</p>\n<p>Add following lines to \"extensions\" settings in your conf.py (you\nlikely already have some standard Sphinx extensions enabled):</p>\n<pre><code>extensions = [\n    ...\n    'sphinx_selective_exclude.eager_only',\n    'sphinx_selective_exclude.search_auto_exclude',\n    'sphinx_selective_exclude.modindex_exclude',\n]\n</code></pre>\n<p>As discussed above, you may enable all extensions, or one by one.</p>\n<p>Please note that to make sure these extensions work well and avoid producing\noutput docs with artifacts, it is IMPERATIVE to remove cached doctree if\nyou rebuild documentation with another builder (i.e. with different output\nformat). Also, to stay on safe side, it's recommended to remove old doctree\nanyway before generating production-ready documentation for publishing. To\ndo that, run something like:</p>\n<pre><code>rm -rf _build/doctrees/\n</code></pre>\n<p>A typical artificat when not following these simple rules is that content\nof some sections may be missing. If you face anything like that, just\nremember what's written above and remove cached doctrees.</p>\n\n          </div>"}, "last_serial": 6353088, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "29ee61e56ec382cd25eac053833d4143", "sha256": "bcd9383e8d7238b940a4f66e159c7af3681b84b3c15fe0290785503f7ead9e0c"}, "downloads": -1, "filename": "sphinx_selective_exclude-1.0.0.tar.gz", "has_sig": false, "md5_digest": "29ee61e56ec382cd25eac053833d4143", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5856, "upload_time": "2017-03-24T07:53:37", "upload_time_iso_8601": "2017-03-24T07:53:37.654465Z", "url": "https://files.pythonhosted.org/packages/c8/7b/af2a96107ae78507d7f02e254d1c62e90b816c1170d0aba5ac8364e15ef6/sphinx_selective_exclude-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0ea065a846ba074ae4af445971ac85a9", "sha256": "eb7828eeab34a2be35f7d9989b103260948903c6c9d14c1317d33e20d385c1b6"}, "downloads": -1, "filename": "sphinx_selective_exclude-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0ea065a846ba074ae4af445971ac85a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7191, "upload_time": "2017-03-24T15:37:35", "upload_time_iso_8601": "2017-03-24T15:37:35.010437Z", "url": "https://files.pythonhosted.org/packages/88/59/5a702e190685e4719c9c3a9f6ade74af7d5c6afaaa343111216a5cd1c310/sphinx_selective_exclude-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "2230d6c5b704aa6418e44c582bb00970", "sha256": "a139ff479b8e49ef426599f9475ed4dedc7e3b234dcddd267c66bd92f9581d87"}, "downloads": -1, "filename": "sphinx_selective_exclude-1.0.2.tar.gz", "has_sig": false, "md5_digest": "2230d6c5b704aa6418e44c582bb00970", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5232, "upload_time": "2019-12-21T21:08:37", "upload_time_iso_8601": "2019-12-21T21:08:37.117550Z", "url": "https://files.pythonhosted.org/packages/13/e3/b9bf54d424992d244c2ea7756949719ba9305c3accefd88b355dcd615f29/sphinx_selective_exclude-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "c17ba9ff85e5062a9e985b98b64b1b09", "sha256": "76fc8fd7c24311e0ca2199a9e4db2156585acd7652a5cead98b07ef4f70f9b78"}, "downloads": -1, "filename": "sphinx_selective_exclude-1.0.3.tar.gz", "has_sig": false, "md5_digest": "c17ba9ff85e5062a9e985b98b64b1b09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7227, "upload_time": "2019-12-23T22:59:35", "upload_time_iso_8601": "2019-12-23T22:59:35.281548Z", "url": "https://files.pythonhosted.org/packages/c2/07/4d6cb9dbe1b06be5caa21eed9813ac1e5ca5b29f3728be1d5e52f1cd7267/sphinx_selective_exclude-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c17ba9ff85e5062a9e985b98b64b1b09", "sha256": "76fc8fd7c24311e0ca2199a9e4db2156585acd7652a5cead98b07ef4f70f9b78"}, "downloads": -1, "filename": "sphinx_selective_exclude-1.0.3.tar.gz", "has_sig": false, "md5_digest": "c17ba9ff85e5062a9e985b98b64b1b09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7227, "upload_time": "2019-12-23T22:59:35", "upload_time_iso_8601": "2019-12-23T22:59:35.281548Z", "url": "https://files.pythonhosted.org/packages/c2/07/4d6cb9dbe1b06be5caa21eed9813ac1e5ca5b29f3728be1d5e52f1cd7267/sphinx_selective_exclude-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:58 2020"}