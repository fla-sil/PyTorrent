{"info": {"author": "Daniil Minukhin", "author_email": "ddddsa@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Documentation", "Topic :: Utilities"], "description": "[![](https://img.shields.io/pypi/v/foliantcontrib.meta.svg)](https://pypi.org/project/foliantcontrib.meta/)  [![](https://img.shields.io/github/v/tag/foliant-docs/foliantcontrib.meta.svg?label=GitHub)](https://github.com/foliant-docs/foliantcontrib.meta)\n\n# Metadata for Foliant\n\nThis extension adds the `meta generate` command to Foliant, which generates the yaml-file with project metadata. It also allows to add other meta commands `meta <command>` which use the generated metadata.\n\n## Installation\n\n```bash\n$ pip install foliantcontrib.meta\n```\n\n## Specifying metadata\n\nMetadata for the *main section* (more on sections in **User's Guide** below) may be specified in the beginning of a Markdown-file using [YAML Front Matter](http://www.yaml.org/spec/1.2/spec.html#id2760395) format:\n\n```yaml\n---\nid: MAIN_DOC\ntitle: Description of the product\nkey: value\n---\n```\n\nYou may also use regular XML-like format with `meta` tag:\n\n```html\n<meta\n    id=\"MAIN_DOC\"\n    title=\"Description of the product\"\n    key=\"value\">\n</meta>\n```\n\n> If `meta` tag is present, all Metadata from YAML Front Matter is ignored.\n\n\n## `meta generate` command\n\n### Usage\n\nTo generate meta file run the `meta generate` command:\n\n```bash\n$ foliant meta generate\n```\n\nMetadata for the document will appear in the `meta.yml` file.\n\n### Config\n\nMeta generate command has just one option right now. It is specified under `meta` section in config:\n\n```yaml\nmeta:\n    filename: meta.yml\n```\n\n`filename`\n:   name of the YAML-file with generated project metadata.\n\n# User's guide\n\nMetadata allows you to specific properties to your documents, which won't be visible directly to the end-user. These properties may be:\n\n- the document author's name;\n- Jira ticket id;\n- date of last revision;\n- or anything else, there is no limitation.\n\nThis module is required for metadata to work in your projects. But it doesn't care about most of the fields and their values. The only exception being the `id` field. See **Special fields** section.\n\n## Sections\n\nYou can specify metadata for a whole chapter and for it's portions, which are called *sections*. Section is a fragment of the document from one heading to another one of the same level of higher.\n\nMetadata specified at the beginning of the document (before the first heading) is applied to the whole Markdown document. We call it the *main section* of the chapter.\n\n> Note that you can specify metadata for the main section either in YAML Front Matter format, or with `meta` tag.\n\nIf you specify metadata after the heading of some level, it will be applied to all content inside this heading, including the nested headings. See the illustration below.\n\n![](https://raw.githubusercontent.com/foliant-docs/foliantcontrib.meta/master/img/pic1.png)\n\n## Special fields\n\nRight now there's only one field that is treated specially: the `id` field.\n\nIf specified, it will be used as identifier of the section. Note that IDs must be unique within the project.\n\nIf `id` field is omitted \u2014 the section will get auto generated id based on:\n\n- chapter filename for main section,\n- title for general sections.\n\n## Additional info\n\nMetadata works only for files, mentioned in the `chapters` section in foliant.yml. All other files in `src` dir are ignored.\n\nWhen using [includes](https://foliant-docs.github.io/docs/preprocessors/includes/), all metadata from the included content is removed.\n\n# Developer's guide\n\nYou can use the powers of metadata in  your preprocessors, backends and other tools. You can define fields with special meaning for your tools and process sections based on these fields.\n\n## Getting metadata\n\nTypical way to work with metadata is to run the `load_meta` function from the `foliant.meta.generate` module.\n\n**load_meta(chapters: list, md_root: str or PosixPath = 'src') -> Meta**\n\nThis function collects metadata and returns a `Meta` object, which gives access to all sections and meta-fields in the project.\n\nThe required parameter is `chapters` \u2014 list of chaters loaded from foliant.yml\n\n```python\n>>> from foliant.meta.generate import load_meta\n>>> meta = load_meta(['index.md'])\n```\n\nYou can also specify the `md_root` parameter. If your tool is a CLI extension, `md_root` should point to the project's `src` dir. But if you are building a preprocessor or a backend, you would probably want to point it to the `__folianttmp__` dir with the current state of the sources.\n\n## The Meta class\n\nMeta class holds all metadata and offers few handy methods to work with it.\n\n**load_meta_from_file(filename: str or PosixPath)**\n\nThis method allows you to load meta into the Meta class instance from previously generated yaml-file. Use it only with empty Meta class:\n\n```python\n>>> from foliant.meta.classes import Meta\n>>> meta = Meta()\n>>> meta.load_meta_from_file('meta.yml')\n```\n\n**iter_sections()**\n\nThis method returns an iterator which yields project's meta-sections (`Section` objects) in the proper order from the first chapter to the last one.\n\n**get_chapter(self, filename: str or PosixPath) -> Chapter**\n\nGet chapter (`Chapter` object) by its path. `filename` should be path to chapter relative to the Project dir (or absolute path).\n\n**get_by_id(self, id_: str) -> Section**\n\nGet section (`Section` object) by its id.\n\n**chapters**\n\nA property which holds the list of chapters (`Chapter` objects).\n\n## The Chapter class\n\n`Chapter` class represents a project's chapter. It has several important methods which may be useful for working with metadata.\n\n**iter_sections()**\n\nThis method returns an iterator which yields chapter's meta-sections (`Section` objects) in the proper order from the first chapter to the last one.\n\n**get_section_by_offset(offset: int) -> Section:**\n\nThis method allows you to get section (`Section` object) by just pointing to a place in text. Pointing is performed by specifying offset from the beginning of the file in `offset` parameter.\n\n*important properties*\n\n**main_section**\n\nA property which holds the main section of the chapter.\n\n**name**\n\nChapter's name.\n\n**filename**\n\nChapter's filename.\n\n## The Section class\n\n`Section` represents a meta section.\n\n**iter_children()**\n\nThis method returns an iterator which yields the section's child sections (`Section` objects) in the proper order.\n\n**get_source(self, without_meta=True) -> str**\n\nReturns section's source. If `without_meta` is `True`, all meta tags are cut out from the text.\n\n**is_main(self) -> bool**\n\nDetermine whether the section is main or not.\n\n*important properties*\n\n\n**id**\n\nHolds section's ID.\n\n**title**\n\nSection's title.\n\n**chapter**\n\nHolds reference to section's chapter.\n\n**children**\n\nHolds list of section's children in proper order.\n\n**data**\n\nHolds a dictionary with fields and their values, defined in the `<meta>` tag (or YAML front matter if it is a main section).\n\n**level**\n\nSection's level. Main section has level `0`, section, defined inside the `###` heading will have level `3`.\n\n**start** and **end**\n\nSection's offsets from the beginning of the chapter.\n\n**filename**\n\nHolds reference to section's chapter's filename for easy access.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/foliant-docs/foliantcontrib.meta", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "foliantcontrib.meta", "package_url": "https://pypi.org/project/foliantcontrib.meta/", "platform": "any", "project_url": "https://pypi.org/project/foliantcontrib.meta/", "project_urls": {"Homepage": "https://github.com/foliant-docs/foliantcontrib.meta"}, "release_url": "https://pypi.org/project/foliantcontrib.meta/1.3.2/", "requires_dist": ["foliant (>=1.0.4)", "schema (>=0.7.0)"], "requires_python": "", "summary": "Metadata for Foliant.", "version": "1.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/foliantcontrib.meta/\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b1608491676bdccccc4edd856f5dc22280a5ed2f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666f6c69616e74636f6e747269622e6d6574612e737667\"></a>  <a href=\"https://github.com/foliant-docs/foliantcontrib.meta\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e5315a34dc1519027aeea20d5a87ea9c2ca3cd0f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f7461672f666f6c69616e742d646f63732f666f6c69616e74636f6e747269622e6d6574612e7376673f6c6162656c3d476974487562\"></a></p>\n<h1>Metadata for Foliant</h1>\n<p>This extension adds the <code>meta generate</code> command to Foliant, which generates the yaml-file with project metadata. It also allows to add other meta commands <code>meta &lt;command&gt;</code> which use the generated metadata.</p>\n<h2>Installation</h2>\n<pre>$ pip install foliantcontrib.meta\n</pre>\n<h2>Specifying metadata</h2>\n<p>Metadata for the <em>main section</em> (more on sections in <strong>User's Guide</strong> below) may be specified in the beginning of a Markdown-file using <a href=\"http://www.yaml.org/spec/1.2/spec.html#id2760395\" rel=\"nofollow\">YAML Front Matter</a> format:</p>\n<pre><span class=\"nn\">---</span>\n<span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">MAIN_DOC</span>\n<span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Description of the product</span>\n<span class=\"nt\">key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">value</span>\n<span class=\"nn\">---</span>\n</pre>\n<p>You may also use regular XML-like format with <code>meta</code> tag:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">meta</span>\n    <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"MAIN_DOC\"</span>\n    <span class=\"na\">title</span><span class=\"o\">=</span><span class=\"s\">\"Description of the product\"</span>\n    <span class=\"na\">key</span><span class=\"o\">=</span><span class=\"s\">\"value\"</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">meta</span><span class=\"p\">&gt;</span>\n</pre>\n<blockquote>\n<p>If <code>meta</code> tag is present, all Metadata from YAML Front Matter is ignored.</p>\n</blockquote>\n<h2><code>meta generate</code> command</h2>\n<h3>Usage</h3>\n<p>To generate meta file run the <code>meta generate</code> command:</p>\n<pre>$ foliant meta generate\n</pre>\n<p>Metadata for the document will appear in the <code>meta.yml</code> file.</p>\n<h3>Config</h3>\n<p>Meta generate command has just one option right now. It is specified under <code>meta</code> section in config:</p>\n<pre><span class=\"nt\">meta</span><span class=\"p\">:</span>\n    <span class=\"nt\">filename</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">meta.yml</span>\n</pre>\n<p><code>filename</code>\n:   name of the YAML-file with generated project metadata.</p>\n<h1>User's guide</h1>\n<p>Metadata allows you to specific properties to your documents, which won't be visible directly to the end-user. These properties may be:</p>\n<ul>\n<li>the document author's name;</li>\n<li>Jira ticket id;</li>\n<li>date of last revision;</li>\n<li>or anything else, there is no limitation.</li>\n</ul>\n<p>This module is required for metadata to work in your projects. But it doesn't care about most of the fields and their values. The only exception being the <code>id</code> field. See <strong>Special fields</strong> section.</p>\n<h2>Sections</h2>\n<p>You can specify metadata for a whole chapter and for it's portions, which are called <em>sections</em>. Section is a fragment of the document from one heading to another one of the same level of higher.</p>\n<p>Metadata specified at the beginning of the document (before the first heading) is applied to the whole Markdown document. We call it the <em>main section</em> of the chapter.</p>\n<blockquote>\n<p>Note that you can specify metadata for the main section either in YAML Front Matter format, or with <code>meta</code> tag.</p>\n</blockquote>\n<p>If you specify metadata after the heading of some level, it will be applied to all content inside this heading, including the nested headings. See the illustration below.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5400794624b9bed0f2804403570fd413ab6019d4/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f666f6c69616e742d646f63732f666f6c69616e74636f6e747269622e6d6574612f6d61737465722f696d672f706963312e706e67\"></p>\n<h2>Special fields</h2>\n<p>Right now there's only one field that is treated specially: the <code>id</code> field.</p>\n<p>If specified, it will be used as identifier of the section. Note that IDs must be unique within the project.</p>\n<p>If <code>id</code> field is omitted \u2014 the section will get auto generated id based on:</p>\n<ul>\n<li>chapter filename for main section,</li>\n<li>title for general sections.</li>\n</ul>\n<h2>Additional info</h2>\n<p>Metadata works only for files, mentioned in the <code>chapters</code> section in foliant.yml. All other files in <code>src</code> dir are ignored.</p>\n<p>When using <a href=\"https://foliant-docs.github.io/docs/preprocessors/includes/\" rel=\"nofollow\">includes</a>, all metadata from the included content is removed.</p>\n<h1>Developer's guide</h1>\n<p>You can use the powers of metadata in  your preprocessors, backends and other tools. You can define fields with special meaning for your tools and process sections based on these fields.</p>\n<h2>Getting metadata</h2>\n<p>Typical way to work with metadata is to run the <code>load_meta</code> function from the <code>foliant.meta.generate</code> module.</p>\n<p><strong>load_meta(chapters: list, md_root: str or PosixPath = 'src') -&gt; Meta</strong></p>\n<p>This function collects metadata and returns a <code>Meta</code> object, which gives access to all sections and meta-fields in the project.</p>\n<p>The required parameter is <code>chapters</code> \u2014 list of chaters loaded from foliant.yml</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">foliant.meta.generate</span> <span class=\"kn\">import</span> <span class=\"n\">load_meta</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">meta</span> <span class=\"o\">=</span> <span class=\"n\">load_meta</span><span class=\"p\">([</span><span class=\"s1\">'index.md'</span><span class=\"p\">])</span>\n</pre>\n<p>You can also specify the <code>md_root</code> parameter. If your tool is a CLI extension, <code>md_root</code> should point to the project's <code>src</code> dir. But if you are building a preprocessor or a backend, you would probably want to point it to the <code>__folianttmp__</code> dir with the current state of the sources.</p>\n<h2>The Meta class</h2>\n<p>Meta class holds all metadata and offers few handy methods to work with it.</p>\n<p><strong>load_meta_from_file(filename: str or PosixPath)</strong></p>\n<p>This method allows you to load meta into the Meta class instance from previously generated yaml-file. Use it only with empty Meta class:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">foliant.meta.classes</span> <span class=\"kn\">import</span> <span class=\"n\">Meta</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">meta</span> <span class=\"o\">=</span> <span class=\"n\">Meta</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">load_meta_from_file</span><span class=\"p\">(</span><span class=\"s1\">'meta.yml'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>iter_sections()</strong></p>\n<p>This method returns an iterator which yields project's meta-sections (<code>Section</code> objects) in the proper order from the first chapter to the last one.</p>\n<p><strong>get_chapter(self, filename: str or PosixPath) -&gt; Chapter</strong></p>\n<p>Get chapter (<code>Chapter</code> object) by its path. <code>filename</code> should be path to chapter relative to the Project dir (or absolute path).</p>\n<p><strong>get_by_id(self, id_: str) -&gt; Section</strong></p>\n<p>Get section (<code>Section</code> object) by its id.</p>\n<p><strong>chapters</strong></p>\n<p>A property which holds the list of chapters (<code>Chapter</code> objects).</p>\n<h2>The Chapter class</h2>\n<p><code>Chapter</code> class represents a project's chapter. It has several important methods which may be useful for working with metadata.</p>\n<p><strong>iter_sections()</strong></p>\n<p>This method returns an iterator which yields chapter's meta-sections (<code>Section</code> objects) in the proper order from the first chapter to the last one.</p>\n<p><strong>get_section_by_offset(offset: int) -&gt; Section:</strong></p>\n<p>This method allows you to get section (<code>Section</code> object) by just pointing to a place in text. Pointing is performed by specifying offset from the beginning of the file in <code>offset</code> parameter.</p>\n<p><em>important properties</em></p>\n<p><strong>main_section</strong></p>\n<p>A property which holds the main section of the chapter.</p>\n<p><strong>name</strong></p>\n<p>Chapter's name.</p>\n<p><strong>filename</strong></p>\n<p>Chapter's filename.</p>\n<h2>The Section class</h2>\n<p><code>Section</code> represents a meta section.</p>\n<p><strong>iter_children()</strong></p>\n<p>This method returns an iterator which yields the section's child sections (<code>Section</code> objects) in the proper order.</p>\n<p><strong>get_source(self, without_meta=True) -&gt; str</strong></p>\n<p>Returns section's source. If <code>without_meta</code> is <code>True</code>, all meta tags are cut out from the text.</p>\n<p><strong>is_main(self) -&gt; bool</strong></p>\n<p>Determine whether the section is main or not.</p>\n<p><em>important properties</em></p>\n<p><strong>id</strong></p>\n<p>Holds section's ID.</p>\n<p><strong>title</strong></p>\n<p>Section's title.</p>\n<p><strong>chapter</strong></p>\n<p>Holds reference to section's chapter.</p>\n<p><strong>children</strong></p>\n<p>Holds list of section's children in proper order.</p>\n<p><strong>data</strong></p>\n<p>Holds a dictionary with fields and their values, defined in the <code>&lt;meta&gt;</code> tag (or YAML front matter if it is a main section).</p>\n<p><strong>level</strong></p>\n<p>Section's level. Main section has level <code>0</code>, section, defined inside the <code>###</code> heading will have level <code>3</code>.</p>\n<p><strong>start</strong> and <strong>end</strong></p>\n<p>Section's offsets from the beginning of the chapter.</p>\n<p><strong>filename</strong></p>\n<p>Holds reference to section's chapter's filename for easy access.</p>\n\n          </div>"}, "last_serial": 6961085, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "caab2313cde293b530de068358212ca6", "sha256": "e8d1420279ba237e09af3fe59a8246d97f07808e94a862817280ae17fa6f6d3d"}, "downloads": -1, "filename": "foliantcontrib.meta-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "caab2313cde293b530de068358212ca6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7963, "upload_time": "2019-06-28T14:39:48", "upload_time_iso_8601": "2019-06-28T14:39:48.753239Z", "url": "https://files.pythonhosted.org/packages/ac/ae/07e4fd3e6622d4b4189c634ab57ccd7bce28a3e034b29b4e051734af71a5/foliantcontrib.meta-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8af8a8b7e41209994b8c355ecec6de7", "sha256": "0847d1d92f45486e687ca9125730f48a6f461df5820e1efa82b57ece28ac4f7a"}, "downloads": -1, "filename": "foliantcontrib.meta-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f8af8a8b7e41209994b8c355ecec6de7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5994, "upload_time": "2019-06-28T14:39:51", "upload_time_iso_8601": "2019-06-28T14:39:51.032620Z", "url": "https://files.pythonhosted.org/packages/fd/2e/9f39eea13468d1de8bd837a88e22e093fc48b83f7dc64ce661bdab2216ee/foliantcontrib.meta-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d3ba9aa2a2292519920718344eb554ab", "sha256": "293cf28e80aba3d3eee13c457c8077076ce1aa7a65ab827ba88d1d0d7f7698e7"}, "downloads": -1, "filename": "foliantcontrib.meta-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d3ba9aa2a2292519920718344eb554ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8042, "upload_time": "2019-07-01T11:32:56", "upload_time_iso_8601": "2019-07-01T11:32:56.242012Z", "url": "https://files.pythonhosted.org/packages/5f/aa/14d2f515b134a49645b782080542c235be4caf67827268f63715bb3b3cc3/foliantcontrib.meta-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68553bbacc729364ccbfcbaa5d1d84b7", "sha256": "30258bb04ed5ee8e8b723b356693f8b883a599bf36b17795499e1356e2e21314"}, "downloads": -1, "filename": "foliantcontrib.meta-1.0.1.tar.gz", "has_sig": false, "md5_digest": "68553bbacc729364ccbfcbaa5d1d84b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6081, "upload_time": "2019-07-01T11:32:57", "upload_time_iso_8601": "2019-07-01T11:32:57.899799Z", "url": "https://files.pythonhosted.org/packages/1a/99/18bedd465daf0d72a58e394c086da2511c26c15ba13927db51037759d4fd/foliantcontrib.meta-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "c5654fdb2c0ac2a313d55439d46716f9", "sha256": "673c8ca42a2facf6991382b6e31dfc4ccb91000bcc85a26c13a6f433bfa905c6"}, "downloads": -1, "filename": "foliantcontrib.meta-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c5654fdb2c0ac2a313d55439d46716f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8262, "upload_time": "2019-07-01T15:58:02", "upload_time_iso_8601": "2019-07-01T15:58:02.158581Z", "url": "https://files.pythonhosted.org/packages/93/67/4026c450e676c1cc256d84223df1f6a4866a72724a53f95d325e33238286/foliantcontrib.meta-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef50a973addbfdd4e545fd0e32e225d7", "sha256": "6477b821c841e8688568520a183b87883f511c11353d6296512b8c6be23f051b"}, "downloads": -1, "filename": "foliantcontrib.meta-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ef50a973addbfdd4e545fd0e32e225d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6284, "upload_time": "2019-07-01T15:58:03", "upload_time_iso_8601": "2019-07-01T15:58:03.878783Z", "url": "https://files.pythonhosted.org/packages/b4/b8/74ac48e8ac448c06488c63de875e4383ac3aaa64a0786cae9818783ea401/foliantcontrib.meta-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "172fe25521d2a6289cfd35e106aaf01b", "sha256": "e0d73d4d33565754357ac9302d484ded8b66f6372c903c1df4c5328c33c29843"}, "downloads": -1, "filename": "foliantcontrib.meta-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "172fe25521d2a6289cfd35e106aaf01b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9105, "upload_time": "2019-08-22T11:40:23", "upload_time_iso_8601": "2019-08-22T11:40:23.697305Z", "url": "https://files.pythonhosted.org/packages/db/24/3f84f5f2a07f2882cf2d1ce0ad5ddf7e696f9b30bfcce17905a8cb82e204/foliantcontrib.meta-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "824c39db6a46da98b05b989e2549b0ed", "sha256": "9bc5f8facb6e33e3cd2782c4183b59603dabd30161187789f2762602875008e2"}, "downloads": -1, "filename": "foliantcontrib.meta-1.1.0.tar.gz", "has_sig": false, "md5_digest": "824c39db6a46da98b05b989e2549b0ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6825, "upload_time": "2019-08-22T11:40:25", "upload_time_iso_8601": "2019-08-22T11:40:25.133476Z", "url": "https://files.pythonhosted.org/packages/e6/85/59139e99809332d7e5de20cfa0060d646b1108da6568c7b151572f4f8259/foliantcontrib.meta-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "62699b4503484eca4630f49604a08900", "sha256": "5ebff36b6f7993c5df8cc05167d9207b4ea2ba07635f8c2236c4a1972899dd59"}, "downloads": -1, "filename": "foliantcontrib.meta-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "62699b4503484eca4630f49604a08900", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14058, "upload_time": "2019-11-21T13:12:28", "upload_time_iso_8601": "2019-11-21T13:12:28.618524Z", "url": "https://files.pythonhosted.org/packages/c9/dd/9eaaee21caa4f0f0c5bcb826f96035ff5ffb65e143cfcc59ead457063e99/foliantcontrib.meta-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f91e33ce16d775b2975dc75e929aaad7", "sha256": "62e71ace79646a1a1b7a7ddda156e8d4b6cdd25cb761b7ae24cc9526a5d134ce"}, "downloads": -1, "filename": "foliantcontrib.meta-1.2.0.tar.gz", "has_sig": false, "md5_digest": "f91e33ce16d775b2975dc75e929aaad7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15116, "upload_time": "2019-11-21T13:12:30", "upload_time_iso_8601": "2019-11-21T13:12:30.654736Z", "url": "https://files.pythonhosted.org/packages/0e/42/26aa28921ef051467fffabc19394c545e99dc945627c3d9e4b391667c763/foliantcontrib.meta-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "f23ce70a28d3a617aead247f88124f4d", "sha256": "a58ab4279a26505ac33c5e946560a5873bb77714f1a241f9fba265879283beac"}, "downloads": -1, "filename": "foliantcontrib.meta-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f23ce70a28d3a617aead247f88124f4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14132, "upload_time": "2019-11-22T06:34:15", "upload_time_iso_8601": "2019-11-22T06:34:15.351915Z", "url": "https://files.pythonhosted.org/packages/4f/99/25155ec6033e4bfb64bcd1724324ec9764aa98669e2480af3b0e210a435f/foliantcontrib.meta-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "476a757cac9d70acda8d831b14b598f7", "sha256": "1da699a4da03790680d4f2f3f07c5779a101de4860a45cba127c7cf7a958a46c"}, "downloads": -1, "filename": "foliantcontrib.meta-1.2.1.tar.gz", "has_sig": false, "md5_digest": "476a757cac9d70acda8d831b14b598f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15132, "upload_time": "2019-11-22T06:34:17", "upload_time_iso_8601": "2019-11-22T06:34:17.196568Z", "url": "https://files.pythonhosted.org/packages/86/c1/8bf7c402a62d94109afeda94acdd5493026b6158f49da7f5e708a9d466a1/foliantcontrib.meta-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "ea8d63b1887a60e13172169f5aa9356f", "sha256": "cc1a96298aa6093df2e957d29e9b4fc6ac64567f86c4caffc6556ceb46b184d5"}, "downloads": -1, "filename": "foliantcontrib.meta-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ea8d63b1887a60e13172169f5aa9356f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14283, "upload_time": "2019-12-20T13:10:05", "upload_time_iso_8601": "2019-12-20T13:10:05.682761Z", "url": "https://files.pythonhosted.org/packages/62/e6/4d5d802b8c4b51a76c0cadce58dfa7b6e6cfc3b6ac0ea9971c12aea808f4/foliantcontrib.meta-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "957bbe47e172e496011d610cbf71badb", "sha256": "d9b9642456d810709c5212f129c176e8bfdae5c32ce6acaf8aff791b7fb30fec"}, "downloads": -1, "filename": "foliantcontrib.meta-1.2.2.tar.gz", "has_sig": false, "md5_digest": "957bbe47e172e496011d610cbf71badb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15400, "upload_time": "2019-12-20T13:10:07", "upload_time_iso_8601": "2019-12-20T13:10:07.226784Z", "url": "https://files.pythonhosted.org/packages/cb/a8/3fe2ae684ce654da21c8dd4e491a88c5e51699791ddb20d0fbe86b9c67c0/foliantcontrib.meta-1.2.2.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "7d4881e678d28f1ebba667e52d8cc12d", "sha256": "912e28d9a462a7f463942a761f7d92cf63dfa5ff7a78005ab00b412f5993d10e"}, "downloads": -1, "filename": "foliantcontrib.meta-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7d4881e678d28f1ebba667e52d8cc12d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15221, "upload_time": "2020-02-04T07:19:50", "upload_time_iso_8601": "2020-02-04T07:19:50.526024Z", "url": "https://files.pythonhosted.org/packages/7e/eb/ed6ee744daf3dd40756daca947fce865a3e0bda6d25e4ba27d5c9471baef/foliantcontrib.meta-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0196ca144cc326201ea54d929514a2ba", "sha256": "2d7d770f04745a929a8847c2f5cb75e89a5d12088300ed38cc58b4f055926aa6"}, "downloads": -1, "filename": "foliantcontrib.meta-1.3.0.tar.gz", "has_sig": false, "md5_digest": "0196ca144cc326201ea54d929514a2ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17733, "upload_time": "2020-02-04T07:19:52", "upload_time_iso_8601": "2020-02-04T07:19:52.171063Z", "url": "https://files.pythonhosted.org/packages/35/10/92a1252d79047d8b4a1e3320735b4dfc8b80c94dd9f959df5635942c4cd2/foliantcontrib.meta-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "96ff25f533f4268e72d71c5ebb27d0ad", "sha256": "a0734a6fdbb257783f7aa30c3cfd3faefe6c66606266d32a4bfe2d588c5aefa9"}, "downloads": -1, "filename": "foliantcontrib.meta-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "96ff25f533f4268e72d71c5ebb27d0ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15406, "upload_time": "2020-04-01T06:41:49", "upload_time_iso_8601": "2020-04-01T06:41:49.364080Z", "url": "https://files.pythonhosted.org/packages/70/db/eea3aed861051f81ca7d1b7464046f8b1f71ad5fbe6b6188ce561ab0e354/foliantcontrib.meta-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49ec114545d01abafa84629bf06ba0ca", "sha256": "2640e57e04e1d956fc2e3b021a46e7423757ac9b99af3c7654d420564b617de6"}, "downloads": -1, "filename": "foliantcontrib.meta-1.3.1.tar.gz", "has_sig": false, "md5_digest": "49ec114545d01abafa84629bf06ba0ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17997, "upload_time": "2020-04-01T06:41:51", "upload_time_iso_8601": "2020-04-01T06:41:51.050812Z", "url": "https://files.pythonhosted.org/packages/ed/f8/f46377f3f613a0bcc59450d0f63175ab87dd844c036f1f224d79746266bf/foliantcontrib.meta-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "fa2d8cea3687a79f81d2de85e59ee28a", "sha256": "8c68fbefa50194e95440ebf7ad4a5e316bcd297b9202175f8bbe3cf0e3e8c1d7"}, "downloads": -1, "filename": "foliantcontrib.meta-1.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fa2d8cea3687a79f81d2de85e59ee28a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16057, "upload_time": "2020-04-06T11:59:45", "upload_time_iso_8601": "2020-04-06T11:59:45.161027Z", "url": "https://files.pythonhosted.org/packages/16/50/5443dda3e7fa9deeb5ba43caab19657fae9bf4369accd275c99532001f94/foliantcontrib.meta-1.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1d90f69a3ce6a0ea18bc35e9e046381", "sha256": "403c14527fed7eed98de285ec0e76f53ed4f3b8161e44aa2ecd238636ad8daf9"}, "downloads": -1, "filename": "foliantcontrib.meta-1.3.2.tar.gz", "has_sig": false, "md5_digest": "a1d90f69a3ce6a0ea18bc35e9e046381", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21071, "upload_time": "2020-04-06T11:59:46", "upload_time_iso_8601": "2020-04-06T11:59:46.882998Z", "url": "https://files.pythonhosted.org/packages/0e/2a/8d40837e1019a6e15bddfefd250eedd6fa9e5c7ef33b6c89ad232ec0f86e/foliantcontrib.meta-1.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fa2d8cea3687a79f81d2de85e59ee28a", "sha256": "8c68fbefa50194e95440ebf7ad4a5e316bcd297b9202175f8bbe3cf0e3e8c1d7"}, "downloads": -1, "filename": "foliantcontrib.meta-1.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fa2d8cea3687a79f81d2de85e59ee28a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16057, "upload_time": "2020-04-06T11:59:45", "upload_time_iso_8601": "2020-04-06T11:59:45.161027Z", "url": "https://files.pythonhosted.org/packages/16/50/5443dda3e7fa9deeb5ba43caab19657fae9bf4369accd275c99532001f94/foliantcontrib.meta-1.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1d90f69a3ce6a0ea18bc35e9e046381", "sha256": "403c14527fed7eed98de285ec0e76f53ed4f3b8161e44aa2ecd238636ad8daf9"}, "downloads": -1, "filename": "foliantcontrib.meta-1.3.2.tar.gz", "has_sig": false, "md5_digest": "a1d90f69a3ce6a0ea18bc35e9e046381", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21071, "upload_time": "2020-04-06T11:59:46", "upload_time_iso_8601": "2020-04-06T11:59:46.882998Z", "url": "https://files.pythonhosted.org/packages/0e/2a/8d40837e1019a6e15bddfefd250eedd6fa9e5c7ef33b6c89ad232ec0f86e/foliantcontrib.meta-1.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:01:08 2020"}