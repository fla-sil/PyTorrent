{"info": {"author": "Oliver Maier", "author_email": "oliver.maier@tugraz.at", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3"], "description": ".. image:: https://travis-ci.com/IMTtugraz/PyQMRI.svg?branch=master\n    :target: https://travis-ci.com/IMTtugraz/PyQMRI\n.. image:: https://badge.fury.io/py/pyqmri.svg\n    :target: https://pypi.org/project/pyqmri\n\nPyQMRI - Model-Based Parameter Quantification\n=============================================\n\n* Requires OpenCL_ >= 1.2\n* Requires clfft_\n* Requires gpyfft_\n* Requires Cython, pip >= 19, python >= 3.6\n\nThe Software is tested on Linux using the latest Nvidia driver (418.56 CUDA Version: 10.1) but should be compatible with older drivers as well as different hardware (AMD). The following Installation Guide is targeted at Ubuntu but should work on any distribution provided the required packages are present (could be differently named).\n\n* It is highly recommended to use an Anaconda environment\n\n.. role:: bash(code)\n   :language: bash\n\n.. role:: python(code)\n   :language: python\n\n\nQuick Installing Guide:\n------------------------\nFirst make sure that you have a working OpenCL installation\n\n* OpenCL is usually shipped with GPU driver (Nvidia/AMD)\n* Install the ocl_icd and the OpenCL-Headers\n\n  :bash:`apt-get install ocl_icd* opencl-headers`\n\nPossible restart of system after installing new drivers and check if OpenCL is working\n\n* Build clinfo_:\n* Run clinfo_ in terminal and check for errors\n\nInstall clFFT library:  \n\n* Either use the package repository,e.g.:\n\n  :bash:`apt-get install libclfft*`\n\n* Or download a prebuild binary of clfft_\n\n  - Please refer to the clfft_ docs regarding building\n  - If build from source symlink clfft_ libraries from lib64 to the lib folder and run :bash:`ldconfig`\n\nInstall gpyfft_ by following the instruction on the GitHub page. \n\nTo Install PyQMRI, a simple\n\n:bash:`pip install pyqmri`\n\nshould be sufficient to install the latest release.\n\nAlternatively, clone the git repository and navigate to the root directory of PyQMRI. Typing\n\n:bash:`pip install .`\n\nshould take care of the other dependencies using PyPI and install the package. \n\nIn case OCL > 1.2 is present, e.g. by some CPU driver, and NVidia GPUs needs to be used the flag\nPRETENED_OCL 1.2 has to be passed to PyOpenCL during the build process. This \ncan be done by:\n\n.. code-block:: bash\n\n    ./configure.py --cl-pretend-version=1.2\n    rm -Rf build\n    python setup.py install\n\n\nSample Data\n-----------\nIn-vivo datasets used in the original publication (doi: `[10.1002/mrm.27502]`_) can be found at zenodo_. If you use the sample data with the recent release of PyQMRI please delete the \"Coils\"\nentry in the .h5 to force a recomputation of the receive coil sensitivities as the orientation does not match the data.\n\nPrerequests on the .h5 file:\n-----------------------------\nThe toolbox expects a .h5 file with a certain structure. \n\n* kspace data (assumed to be 5D for VFA) and passed as:\n\n  - real_dat (Scans, Coils, Slices, Projections, Samples)\n  - imag_dat (Scans, Coils, Slices, Projections, Samples)\n\n  If radial sampling is used the trajectory is expected to be:\n\n  - real_traj (Scans, Projections, Samples)\n  - imag_traj (Scans, Projections, Samples)\n\n  | Density compensation is performed internally assuming a simple ramp.\n  | For Cartesian data Projections and Samples are replaced by ky and kx encodings points and no trajectory is needed.  \n  | Data is assumed to be 2D stack-of-stars, i.e. already Fourier transformed along the fully sampled z-direction.\n\n* flip angle correction (optional) can be passed as:\n\n  - fa_corr (Scans, Coils, Slices, dimY, dimX)\n\n* The image dimension for the full dataset is passed as attribute consiting of:\n\n  - image_dimensions = (dimX, dimY, NSlice)\n\n* Parameters specific to the used model (e.g. TR or flip angle) need to be set as attributes e.g.:\n\n  - TR = 5.38\n  - flip_angle(s) = (1,3,5,7,9,11,13,15,17,19)\n\nThe specific structure is determined according to the Model file.\n\nIf predetermined coil sensitivity maps are available they can be passed as complex dataset, which can saved bedirectly using Python. Matlab users would need to write/use low level hdf5 functions to save a complex array to .h5 file. Coil sensitivities are assumed to have the same number of slices as the original volume and are intesity normalized. The corresponding .h5 entry is named \"Coils\". If no \"Coils\" parameter is found or the number of \"Coil\" slices is less than the number of reconstructed slices, the coil sensitivities are determined using the NLINV_ algorithm and saved into the file. \n\nRunning the reconstruction:\n---------------------------\nFirst, start an ipcluster for speeding up the coil sensitivity estimation:\n\n:bash:`ipcluster start -n N`\n\nwhere N amounts to the number of processe to be used. If -n N is ommited, \nas many processes as number of CPU cores available are started.\n\nReconstruction of the parameter maps can be started either using the terminal by typing:\n\n:bash:`pyqmri`\n\nor from python by:\n\n.. code-block:: python\n\n          import pyqmri\n          pyqmri.run()\n\nA list of accepted flags can be printed using \n\n:bash:`pyqmri -h`\n\nor by fewing the documentation of pyqmri.pyqmri in python.\n\nIf reconstructing fewer slices from the volume than acquired, slices will be picked symmetrically from the center of the volume. E.g. reconstructing only a single slice will reconstruct the center slice of the volume. \n\nThe config file (\\*.ini):\n-------------------------   \nA default config file will be generated if no path to a config file is passed as an argument or if no default.ini file is present in the current working directory. After the initial generation the values can be altered to influence regularization or the number of iterations. Seperate values for TV and TGV regularization can be used. \n\n- max_iters: Maximum primal-dual (PD) iterations\n- start_iters: PD iterations in the first Gauss-Newton step\n- max_gn_it: Maximum number of Gauss Newton iterations\n- lambd: Data weighting\n- gamma: TGV weighting\n- delta: L2-step-penalty weighting (inversely weighted)\n- omega: optional H1 regularization (should be set to 0 if no H1 is used)\n- display_iterations: Flag for displaying grafical output\n- gamma_min: Minimum TGV weighting\n- delta_max: Maximum L2-step-penalty weighting\n- omega_min: Minimum H1 weighting (should be set to 0 if no H1 is used)\n- tol: relative convergence toleranze for PD and Gauss-Newton iterations\n- stag: optional stagnation detection between successive PD steps\n- delta_inc: Increase factor for delta after each GN step\n- gamma_dec: Decrease factor for gamma after each GN step\n- omega_dec: Decrease factor for omega after each GN step\n\nLimitations and known Issues:\n------------------------------\nCurrently runs only on GPUs due to having only basic CPU support for the clfft_.\n\nCitation:\n----------\nPlease cite \"Oliver Maier, Matthias Schloegl, Kristian Bredies, and Rudolf Stollberger; 3D Model-Based Parameter Quantification on Resource Constrained Hardware using Double-Buffering. Proceedings of the 27th meeting of the ISMRM, 2019, Montreal, Canada\" if using the software or parts of it, specifically the PyOpenCL based NUFFT, in your work.\n\nOlder Releases:\n----------------\nYou can find the code for \n\n| Maier O, Schoormans J,Schloegl M, Strijkers GJ, Lesch A, Benkert T, Block T, Coolen BF, Bredies K, Stollberger R \n| **Rapid T1 quantification from high resolution 3D data with model\u2010based reconstruction.**\n| *Magn Reson Med.*, 2018; 00:1\u201316 doi: `[10.1002/mrm.27502]`_\n\nat `[v0.1.0] <https://github.com/IMTtugraz/PyQMRI/tree/v.0.1.0>`_\n\n.. _OpenCL: https://www.khronos.org/opencl/\n.. _clfft: https://github.com/clMathLibraries/clFFT\n.. _gpyfft: https://github.com/geggo/gpyfft\n.. _clinfo: https://github.com/Oblomov/clinfo\n.. _`[10.1002/mrm.27502]`: http://onlinelibrary.wiley.com/doi/10.1002/mrm.27502/full\n.. _zenodo: https://doi.org/10.5281/zenodo.1410918\n.. _NLINV: https://doi.org/10.1002/mrm.21691\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://github.com/IMTtugraz/PyQMRI/archive/v.0.2.5.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/IMTtugraz/PyQMRI", "keywords": "", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "pyqmri", "package_url": "https://pypi.org/project/pyqmri/", "platform": "", "project_url": "https://pypi.org/project/pyqmri/", "project_urls": {"Download": "https://github.com/IMTtugraz/PyQMRI/archive/v.0.2.5.tar.gz", "Homepage": "https://github.com/IMTtugraz/PyQMRI"}, "release_url": "https://pypi.org/project/pyqmri/0.2.11/", "requires_dist": ["cython", "pyopencl", "numpy", "h5py", "mako", "matplotlib", "ipyparallel", "pyfftw", "pyqt5 (<5.13)", "numexpr", "sympy"], "requires_python": ">=3.6", "summary": "Model-based parameter quantification using OpenCL and Python", "version": "0.2.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.com/IMTtugraz/PyQMRI\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/IMTtugraz/PyQMRI.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/123debc1bdbde634aa63fc8a730d3f33b60b7fc0/68747470733a2f2f7472617669732d63692e636f6d2f494d5474756772617a2f5079514d52492e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/pyqmri\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/pyqmri.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70f58dd2233a4bb54a2b35d46a79b201fc0f16cd/68747470733a2f2f62616467652e667572792e696f2f70792f7079716d72692e737667\"></a>\n<div id=\"pyqmri-model-based-parameter-quantification\">\n<h2>PyQMRI - Model-Based Parameter Quantification</h2>\n<ul>\n<li>Requires <a href=\"https://www.khronos.org/opencl/\" rel=\"nofollow\">OpenCL</a> &gt;= 1.2</li>\n<li>Requires <a href=\"https://github.com/clMathLibraries/clFFT\" rel=\"nofollow\">clfft</a></li>\n<li>Requires <a href=\"https://github.com/geggo/gpyfft\" rel=\"nofollow\">gpyfft</a></li>\n<li>Requires Cython, pip &gt;= 19, python &gt;= 3.6</li>\n</ul>\n<p>The Software is tested on Linux using the latest Nvidia driver (418.56 CUDA Version: 10.1) but should be compatible with older drivers as well as different hardware (AMD). The following Installation Guide is targeted at Ubuntu but should work on any distribution provided the required packages are present (could be differently named).</p>\n<ul>\n<li>It is highly recommended to use an Anaconda environment</li>\n</ul>\n<div id=\"quick-installing-guide\">\n<h3>Quick Installing Guide:</h3>\n<p>First make sure that you have a working OpenCL installation</p>\n<ul>\n<li><p>OpenCL is usually shipped with GPU driver (Nvidia/AMD)</p>\n</li>\n<li><p>Install the ocl_icd and the OpenCL-Headers</p>\n<p><code class=\"bash\">apt-get install ocl_icd* opencl-headers</code></p>\n</li>\n</ul>\n<p>Possible restart of system after installing new drivers and check if OpenCL is working</p>\n<ul>\n<li>Build <a href=\"https://github.com/Oblomov/clinfo\" rel=\"nofollow\">clinfo</a>:</li>\n<li>Run <a href=\"https://github.com/Oblomov/clinfo\" rel=\"nofollow\">clinfo</a> in terminal and check for errors</li>\n</ul>\n<p>Install clFFT library:</p>\n<ul>\n<li><p>Either use the package repository,e.g.:</p>\n<p><code class=\"bash\">apt-get install libclfft*</code></p>\n</li>\n<li><p>Or download a prebuild binary of <a href=\"https://github.com/clMathLibraries/clFFT\" rel=\"nofollow\">clfft</a></p>\n<ul>\n<li>Please refer to the <a href=\"https://github.com/clMathLibraries/clFFT\" rel=\"nofollow\">clfft</a> docs regarding building</li>\n<li>If build from source symlink <a href=\"https://github.com/clMathLibraries/clFFT\" rel=\"nofollow\">clfft</a> libraries from lib64 to the lib folder and run <code class=\"bash\">ldconfig</code></li>\n</ul>\n</li>\n</ul>\n<p>Install <a href=\"https://github.com/geggo/gpyfft\" rel=\"nofollow\">gpyfft</a> by following the instruction on the GitHub page.</p>\n<p>To Install PyQMRI, a simple</p>\n<p><code class=\"bash\">pip install pyqmri</code></p>\n<p>should be sufficient to install the latest release.</p>\n<p>Alternatively, clone the git repository and navigate to the root directory of PyQMRI. Typing</p>\n<p><code class=\"bash\">pip install .</code></p>\n<p>should take care of the other dependencies using PyPI and install the package.</p>\n<p>In case OCL &gt; 1.2 is present, e.g. by some CPU driver, and NVidia GPUs needs to be used the flag\nPRETENED_OCL 1.2 has to be passed to PyOpenCL during the build process. This\ncan be done by:</p>\n<pre>./configure.py --cl-pretend-version<span class=\"o\">=</span><span class=\"m\">1</span>.2\nrm -Rf build\npython setup.py install\n</pre>\n</div>\n<div id=\"sample-data\">\n<h3>Sample Data</h3>\n<p>In-vivo datasets used in the original publication (doi: <a href=\"http://onlinelibrary.wiley.com/doi/10.1002/mrm.27502/full\" rel=\"nofollow\">[10.1002/mrm.27502]</a>) can be found at <a href=\"https://doi.org/10.5281/zenodo.1410918\" rel=\"nofollow\">zenodo</a>. If you use the sample data with the recent release of PyQMRI please delete the \u201cCoils\u201d\nentry in the .h5 to force a recomputation of the receive coil sensitivities as the orientation does not match the data.</p>\n</div>\n<div id=\"prerequests-on-the-h5-file\">\n<h3>Prerequests on the .h5 file:</h3>\n<p>The toolbox expects a .h5 file with a certain structure.</p>\n<ul>\n<li><p>kspace data (assumed to be 5D for VFA) and passed as:</p>\n<ul>\n<li>real_dat (Scans, Coils, Slices, Projections, Samples)</li>\n<li>imag_dat (Scans, Coils, Slices, Projections, Samples)</li>\n</ul>\n<p>If radial sampling is used the trajectory is expected to be:</p>\n<ul>\n<li>real_traj (Scans, Projections, Samples)</li>\n<li>imag_traj (Scans, Projections, Samples)</li>\n</ul>\n<div>\n<div>Density compensation is performed internally assuming a simple ramp.</div>\n<div>For Cartesian data Projections and Samples are replaced by ky and kx encodings points and no trajectory is needed.</div>\n<div>Data is assumed to be 2D stack-of-stars, i.e. already Fourier transformed along the fully sampled z-direction.</div>\n</div>\n</li>\n<li><p>flip angle correction (optional) can be passed as:</p>\n<ul>\n<li>fa_corr (Scans, Coils, Slices, dimY, dimX)</li>\n</ul>\n</li>\n<li><p>The image dimension for the full dataset is passed as attribute consiting of:</p>\n<ul>\n<li>image_dimensions = (dimX, dimY, NSlice)</li>\n</ul>\n</li>\n<li><p>Parameters specific to the used model (e.g. TR or flip angle) need to be set as attributes e.g.:</p>\n<ul>\n<li>TR = 5.38</li>\n<li>flip_angle(s) = (1,3,5,7,9,11,13,15,17,19)</li>\n</ul>\n</li>\n</ul>\n<p>The specific structure is determined according to the Model file.</p>\n<p>If predetermined coil sensitivity maps are available they can be passed as complex dataset, which can saved bedirectly using Python. Matlab users would need to write/use low level hdf5 functions to save a complex array to .h5 file. Coil sensitivities are assumed to have the same number of slices as the original volume and are intesity normalized. The corresponding .h5 entry is named \u201cCoils\u201d. If no \u201cCoils\u201d parameter is found or the number of \u201cCoil\u201d slices is less than the number of reconstructed slices, the coil sensitivities are determined using the <a href=\"https://doi.org/10.1002/mrm.21691\" rel=\"nofollow\">NLINV</a> algorithm and saved into the file.</p>\n</div>\n<div id=\"running-the-reconstruction\">\n<h3>Running the reconstruction:</h3>\n<p>First, start an ipcluster for speeding up the coil sensitivity estimation:</p>\n<p><code class=\"bash\">ipcluster start -n N</code></p>\n<p>where N amounts to the number of processe to be used. If -n N is ommited,\nas many processes as number of CPU cores available are started.</p>\n<p>Reconstruction of the parameter maps can be started either using the terminal by typing:</p>\n<p><code class=\"bash\">pyqmri</code></p>\n<p>or from python by:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyqmri</span>\n<span class=\"n\">pyqmri</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>A list of accepted flags can be printed using</p>\n<p><code class=\"bash\">pyqmri -h</code></p>\n<p>or by fewing the documentation of pyqmri.pyqmri in python.</p>\n<p>If reconstructing fewer slices from the volume than acquired, slices will be picked symmetrically from the center of the volume. E.g. reconstructing only a single slice will reconstruct the center slice of the volume.</p>\n</div>\n<div id=\"the-config-file-ini\">\n<h3>The config file (*.ini):</h3>\n<p>A default config file will be generated if no path to a config file is passed as an argument or if no default.ini file is present in the current working directory. After the initial generation the values can be altered to influence regularization or the number of iterations. Seperate values for TV and TGV regularization can be used.</p>\n<ul>\n<li>max_iters: Maximum primal-dual (PD) iterations</li>\n<li>start_iters: PD iterations in the first Gauss-Newton step</li>\n<li>max_gn_it: Maximum number of Gauss Newton iterations</li>\n<li>lambd: Data weighting</li>\n<li>gamma: TGV weighting</li>\n<li>delta: L2-step-penalty weighting (inversely weighted)</li>\n<li>omega: optional H1 regularization (should be set to 0 if no H1 is used)</li>\n<li>display_iterations: Flag for displaying grafical output</li>\n<li>gamma_min: Minimum TGV weighting</li>\n<li>delta_max: Maximum L2-step-penalty weighting</li>\n<li>omega_min: Minimum H1 weighting (should be set to 0 if no H1 is used)</li>\n<li>tol: relative convergence toleranze for PD and Gauss-Newton iterations</li>\n<li>stag: optional stagnation detection between successive PD steps</li>\n<li>delta_inc: Increase factor for delta after each GN step</li>\n<li>gamma_dec: Decrease factor for gamma after each GN step</li>\n<li>omega_dec: Decrease factor for omega after each GN step</li>\n</ul>\n</div>\n<div id=\"limitations-and-known-issues\">\n<h3>Limitations and known Issues:</h3>\n<p>Currently runs only on GPUs due to having only basic CPU support for the <a href=\"https://github.com/clMathLibraries/clFFT\" rel=\"nofollow\">clfft</a>.</p>\n</div>\n<div id=\"citation\">\n<h3>Citation:</h3>\n<p>Please cite \u201cOliver Maier, Matthias Schloegl, Kristian Bredies, and Rudolf Stollberger; 3D Model-Based Parameter Quantification on Resource Constrained Hardware using Double-Buffering. Proceedings of the 27th meeting of the ISMRM, 2019, Montreal, Canada\u201d if using the software or parts of it, specifically the PyOpenCL based NUFFT, in your work.</p>\n</div>\n<div id=\"older-releases\">\n<h3>Older Releases:</h3>\n<p>You can find the code for</p>\n<div>\n<div>Maier O, Schoormans J,Schloegl M, Strijkers GJ, Lesch A, Benkert T, Block T, Coolen BF, Bredies K, Stollberger R</div>\n<div><strong>Rapid T1 quantification from high resolution 3D data with model\u2010based reconstruction.</strong></div>\n<div><em>Magn Reson Med.</em>, 2018; 00:1\u201316 doi: <a href=\"http://onlinelibrary.wiley.com/doi/10.1002/mrm.27502/full\" rel=\"nofollow\">[10.1002/mrm.27502]</a></div>\n</div>\n<p>at <a href=\"https://github.com/IMTtugraz/PyQMRI/tree/v.0.1.0\" rel=\"nofollow\">[v0.1.0]</a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6689623, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "f226046b7cb05623794b5cd9dc906504", "sha256": "61b70b8ca8c27432699c485ab66c82583d188c42416362fd38ef018e27104401"}, "downloads": -1, "filename": "pyqmri-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f226046b7cb05623794b5cd9dc906504", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 67553, "upload_time": "2019-07-30T07:43:25", "upload_time_iso_8601": "2019-07-30T07:43:25.518475Z", "url": "https://files.pythonhosted.org/packages/73/bc/2aa1aae38c8dd016eefab9b7a15ff9011aeff257c02ed751af957226b916/pyqmri-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "163d4bb59383324595d0e7a3b528d686", "sha256": "51efce2383feed265b5c33d529a226050e30a8cef93fb03bd7e1c7c6e5b0b99b"}, "downloads": -1, "filename": "pyqmri-0.2.1.tar.gz", "has_sig": false, "md5_digest": "163d4bb59383324595d0e7a3b528d686", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 48440, "upload_time": "2019-07-30T07:43:28", "upload_time_iso_8601": "2019-07-30T07:43:28.083991Z", "url": "https://files.pythonhosted.org/packages/e8/48/96e46ce6af676d91ebcd3d41fb4513d5d95eaa73350fa8e93d946387c7dd/pyqmri-0.2.1.tar.gz", "yanked": false}], "0.2.10": [{"comment_text": "", "digests": {"md5": "bd37b8fab734de7be54b66f2d01e38b9", "sha256": "53c3bb27f4c5cb1c421f326bcc224d3ff6df30066b1357754ea226723af6abfd"}, "downloads": -1, "filename": "pyqmri-0.2.10-py3-none-any.whl", "has_sig": false, "md5_digest": "bd37b8fab734de7be54b66f2d01e38b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 90877, "upload_time": "2020-02-24T16:37:03", "upload_time_iso_8601": "2020-02-24T16:37:03.964495Z", "url": "https://files.pythonhosted.org/packages/20/70/30929fef34007c2be822e36d944b3b05c01e6e5311d94bdc08e900ec5598/pyqmri-0.2.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "376f07ce78a1a572a4685cbfaae5064c", "sha256": "596c3593d43a2433ea736a9e33eea5bdf2d27faec6ac32ce5e275c9637027561"}, "downloads": -1, "filename": "pyqmri-0.2.10.tar.gz", "has_sig": false, "md5_digest": "376f07ce78a1a572a4685cbfaae5064c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 60879, "upload_time": "2020-02-24T16:37:08", "upload_time_iso_8601": "2020-02-24T16:37:08.463852Z", "url": "https://files.pythonhosted.org/packages/7d/6f/960b2b89d000268bc83984badc24c29cf264f3619ed6948b7e5f22dd7368/pyqmri-0.2.10.tar.gz", "yanked": false}], "0.2.11": [{"comment_text": "", "digests": {"md5": "1780924c3ab2d0488e808bfcfb5a3ffc", "sha256": "aff77a95c170bbaca979c4aae0f0ae5a8588651aa2c360124e02d494d1300d0e"}, "downloads": -1, "filename": "pyqmri-0.2.11-py3-none-any.whl", "has_sig": false, "md5_digest": "1780924c3ab2d0488e808bfcfb5a3ffc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 90858, "upload_time": "2020-02-24T16:41:15", "upload_time_iso_8601": "2020-02-24T16:41:15.686780Z", "url": "https://files.pythonhosted.org/packages/69/04/fa515e9c86630e5f11c908df922cb3a6d5342a2bf273ed8b415421ae6534/pyqmri-0.2.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e8f11d37f020a2b7948ab0a3ec9d1d8", "sha256": "59a11fb0cae3fb7c569048486b4c39622123c586bdeb99e813c2a059080843c2"}, "downloads": -1, "filename": "pyqmri-0.2.11.tar.gz", "has_sig": false, "md5_digest": "6e8f11d37f020a2b7948ab0a3ec9d1d8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 60849, "upload_time": "2020-02-24T16:41:20", "upload_time_iso_8601": "2020-02-24T16:41:20.724606Z", "url": "https://files.pythonhosted.org/packages/e5/49/cb9de22ba2abd74b921e1bd65e1e935d432d2bebf2ab6e66d1b99f93d58e/pyqmri-0.2.11.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "34798cffcd59e5707678d06618ab8318", "sha256": "d14e451f2710490bb2ef4038d75d3c045227ea86c6bafbaeeefbcf2bed255ecb"}, "downloads": -1, "filename": "pyqmri-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "34798cffcd59e5707678d06618ab8318", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 86393, "upload_time": "2019-11-07T14:16:32", "upload_time_iso_8601": "2019-11-07T14:16:32.713405Z", "url": "https://files.pythonhosted.org/packages/74/be/d0abd1f12fcffaf8975bab396458d479cb4fa5630dc13f80116653316542/pyqmri-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45d79f7833caaf0de7e9e9888b7712bf", "sha256": "1b294c36b509ef6012be30ef8bddf1125ef5e9f3c0957ef154d47c054a4ecfd8"}, "downloads": -1, "filename": "pyqmri-0.2.2.tar.gz", "has_sig": false, "md5_digest": "45d79f7833caaf0de7e9e9888b7712bf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 57495, "upload_time": "2019-11-07T14:16:34", "upload_time_iso_8601": "2019-11-07T14:16:34.314775Z", "url": "https://files.pythonhosted.org/packages/0c/43/033a6bd80b64c3a25ee695d0c98d6af8085747989ca5637fde1385c5765c/pyqmri-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "e5f827c97f840e1fe29d04aa2f1ea412", "sha256": "cda78bb0b6fe206551f670c88a6a765c7c48be0868e65f15df62ce8bf3bfbd21"}, "downloads": -1, "filename": "pyqmri-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e5f827c97f840e1fe29d04aa2f1ea412", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 86389, "upload_time": "2019-11-07T14:38:58", "upload_time_iso_8601": "2019-11-07T14:38:58.767744Z", "url": "https://files.pythonhosted.org/packages/21/f5/4ab84c2284717f5303e1abf9a3759f4351ddd61c5ae05b50043f0d9bd796/pyqmri-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38faaa49119131692344e0da03cda7a7", "sha256": "801da3beaec6098d36704f32615ad58657571745eca4cea04b61d55427c39de4"}, "downloads": -1, "filename": "pyqmri-0.2.3.tar.gz", "has_sig": false, "md5_digest": "38faaa49119131692344e0da03cda7a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 57491, "upload_time": "2019-11-07T14:39:01", "upload_time_iso_8601": "2019-11-07T14:39:01.093570Z", "url": "https://files.pythonhosted.org/packages/01/d2/c8ad4387f1513571da315c1c66fb1f457bfe7dd73fe368b049ca308e8321/pyqmri-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "084b87427d880cc653e3ded1c00d5f0a", "sha256": "1604629cda2afc2dced88d5aa1f4f68631a8f400e9c485978e3648a1858a2d31"}, "downloads": -1, "filename": "pyqmri-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "084b87427d880cc653e3ded1c00d5f0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 86386, "upload_time": "2019-11-07T14:50:27", "upload_time_iso_8601": "2019-11-07T14:50:27.842938Z", "url": "https://files.pythonhosted.org/packages/d4/05/6b0429d73b0601238c8be58d771a0e32aeb889d836e00f2ef2142bd48b56/pyqmri-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b2167294f6054a08f7a31e3068afc34", "sha256": "70a6d88a83149107c1bc59f206d77a9474866680eff8ee885885b75d320c9ba2"}, "downloads": -1, "filename": "pyqmri-0.2.4.tar.gz", "has_sig": false, "md5_digest": "0b2167294f6054a08f7a31e3068afc34", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 57494, "upload_time": "2019-11-07T14:50:30", "upload_time_iso_8601": "2019-11-07T14:50:30.956944Z", "url": "https://files.pythonhosted.org/packages/11/3e/67758bbbd7e855486e15cf0bab4a9e887cc5bb414cffbd0e1ef3508233b3/pyqmri-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "b9a0cc5a672d318ec1a90afc8c83dc89", "sha256": "9b19ccbe62dcb9b1847c859105313fef448d5c8361dda8013613377503a604c1"}, "downloads": -1, "filename": "pyqmri-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "b9a0cc5a672d318ec1a90afc8c83dc89", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 86385, "upload_time": "2019-11-08T12:28:09", "upload_time_iso_8601": "2019-11-08T12:28:09.446989Z", "url": "https://files.pythonhosted.org/packages/fd/79/1159dc9e4979c0d3914b730cc6b268231d4acb6ab6d850445bac23f09eed/pyqmri-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6aea7c3175357f10f7b7b84cba932fc", "sha256": "01c61521b701b975912414568bd4b83704ca2ecd672e31497f2321217a8e3a65"}, "downloads": -1, "filename": "pyqmri-0.2.5.tar.gz", "has_sig": false, "md5_digest": "a6aea7c3175357f10f7b7b84cba932fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 57488, "upload_time": "2019-11-08T12:28:14", "upload_time_iso_8601": "2019-11-08T12:28:14.035190Z", "url": "https://files.pythonhosted.org/packages/fd/36/6a6e0ec87123dc36f112bdde25461224b24a3d8c7e96f2a0f9d0056b300b/pyqmri-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "a85702e091434dcccfed10d86e7c8e9a", "sha256": "f7d622500cff37a77e754f9401006c67a398e3024d62becbe93cb361d908fc6e"}, "downloads": -1, "filename": "pyqmri-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a85702e091434dcccfed10d86e7c8e9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 92014, "upload_time": "2020-01-20T12:26:12", "upload_time_iso_8601": "2020-01-20T12:26:12.201850Z", "url": "https://files.pythonhosted.org/packages/6c/e8/b2efe0fd63403e73658cf519a7e8c2b904584b6e7d71e79f2002c473852f/pyqmri-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "397ca4e0e9ccf216acbd155ca17be4e7", "sha256": "513d9ed372068107e817bd7bb916772d32d9582e143825d65f91d7c40d0eb68f"}, "downloads": -1, "filename": "pyqmri-0.2.6.tar.gz", "has_sig": false, "md5_digest": "397ca4e0e9ccf216acbd155ca17be4e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 61598, "upload_time": "2020-01-20T12:26:17", "upload_time_iso_8601": "2020-01-20T12:26:17.495860Z", "url": "https://files.pythonhosted.org/packages/8a/25/187c6d4df2b27b26d92bf4913e498535f8be99cce999db09b54012361afd/pyqmri-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "db80baac0c897bc427ed298c36821316", "sha256": "1579e3d594f72ddbb0e9d631f0f44fbab2db9cc59c3de7b52f5e790b383e3229"}, "downloads": -1, "filename": "pyqmri-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "db80baac0c897bc427ed298c36821316", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 92009, "upload_time": "2020-01-24T08:13:32", "upload_time_iso_8601": "2020-01-24T08:13:32.441917Z", "url": "https://files.pythonhosted.org/packages/eb/98/c2a716088ba7709f9aa884e3a0e18d22ab276a3696b9d40c1177b4a9c850/pyqmri-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fca5b8bc0c80949b0b9a1c4f544c8ff", "sha256": "eefff4ca82b7852e8b9858c2abc7d5d6f6aa64edda02e84650de418f04ba0294"}, "downloads": -1, "filename": "pyqmri-0.2.7.tar.gz", "has_sig": false, "md5_digest": "6fca5b8bc0c80949b0b9a1c4f544c8ff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 61574, "upload_time": "2020-01-24T08:13:34", "upload_time_iso_8601": "2020-01-24T08:13:34.145668Z", "url": "https://files.pythonhosted.org/packages/8c/27/fb98de9c2d41a3ec2b78c91085829afb5fc179cccf87d9e90938b991312a/pyqmri-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "0bbb8c283403d0ecd4c34d3688c7535e", "sha256": "2d9632a442dc6a31fdace53a24d2098a41093b2b8bfd2ef6f2f2c1f97356c4d1"}, "downloads": -1, "filename": "pyqmri-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "0bbb8c283403d0ecd4c34d3688c7535e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 90874, "upload_time": "2020-01-24T09:50:19", "upload_time_iso_8601": "2020-01-24T09:50:19.575986Z", "url": "https://files.pythonhosted.org/packages/d9/74/178e18a40f20c35cc60f59d86cf1c71cc6a865fd56ff63a6090fae69dd4a/pyqmri-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "596569241388029f760dab94e83f77e6", "sha256": "b2057ffd56ed0f1884da7471b475f205f29486bf85c7d121f7ebea20dcfaac9e"}, "downloads": -1, "filename": "pyqmri-0.2.8.tar.gz", "has_sig": false, "md5_digest": "596569241388029f760dab94e83f77e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 60934, "upload_time": "2020-01-24T09:50:21", "upload_time_iso_8601": "2020-01-24T09:50:21.567085Z", "url": "https://files.pythonhosted.org/packages/62/69/91795c806bcd17911ae0c6d179ff1bde58ac0dec3f1e0aa6e447231a5b13/pyqmri-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "2630172a20a69009c79de6d2d99836f6", "sha256": "b0400dcdf9a3e24a86e209993d9c613d5c9042a4a12bf141dd70476cc2a7f118"}, "downloads": -1, "filename": "pyqmri-0.2.9-py3-none-any.whl", "has_sig": false, "md5_digest": "2630172a20a69009c79de6d2d99836f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 90878, "upload_time": "2020-01-24T10:31:21", "upload_time_iso_8601": "2020-01-24T10:31:21.762709Z", "url": "https://files.pythonhosted.org/packages/34/15/37397073c70feb5f3f322f0c784093f7707aebcbb17a974061a0e2cd6ea9/pyqmri-0.2.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51b8654a4328f7729e43d79d566fe182", "sha256": "2b47816c188f80a27529a30334ff8c477b957e41369a76fb705b150e890c4739"}, "downloads": -1, "filename": "pyqmri-0.2.9.tar.gz", "has_sig": false, "md5_digest": "51b8654a4328f7729e43d79d566fe182", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 60942, "upload_time": "2020-01-24T10:31:25", "upload_time_iso_8601": "2020-01-24T10:31:25.434555Z", "url": "https://files.pythonhosted.org/packages/08/4f/08dbb2c10030b1a5a662f41f1a616d3a16ac504e77ca5ad8263bc732a7eb/pyqmri-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1780924c3ab2d0488e808bfcfb5a3ffc", "sha256": "aff77a95c170bbaca979c4aae0f0ae5a8588651aa2c360124e02d494d1300d0e"}, "downloads": -1, "filename": "pyqmri-0.2.11-py3-none-any.whl", "has_sig": false, "md5_digest": "1780924c3ab2d0488e808bfcfb5a3ffc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 90858, "upload_time": "2020-02-24T16:41:15", "upload_time_iso_8601": "2020-02-24T16:41:15.686780Z", "url": "https://files.pythonhosted.org/packages/69/04/fa515e9c86630e5f11c908df922cb3a6d5342a2bf273ed8b415421ae6534/pyqmri-0.2.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e8f11d37f020a2b7948ab0a3ec9d1d8", "sha256": "59a11fb0cae3fb7c569048486b4c39622123c586bdeb99e813c2a059080843c2"}, "downloads": -1, "filename": "pyqmri-0.2.11.tar.gz", "has_sig": false, "md5_digest": "6e8f11d37f020a2b7948ab0a3ec9d1d8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 60849, "upload_time": "2020-02-24T16:41:20", "upload_time_iso_8601": "2020-02-24T16:41:20.724606Z", "url": "https://files.pythonhosted.org/packages/e5/49/cb9de22ba2abd74b921e1bd65e1e935d432d2bebf2ab6e66d1b99f93d58e/pyqmri-0.2.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:50 2020"}