{"info": {"author": "Jackuna", "author_email": "admin@cyberkeeda.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=========\nFilesNow\n=========\n\nFilesNow is a Django app to download documnets, images \nfrom AWS S3 and serve is a temporary static content to customers.\n\nFilesNow is a way to serve AWS S3 documents/media files\nwithout giving access to your s3 buckets.\n\nFilesNow itself cleans it's downloaded presentable\nfiles, as such maintainig a healthy file system\n\nDependecies\n-----------\nAWS Boto3 Framework : pip install boto3\nConfigure AWS Credentilas using command : aws configure\n\nQuick start\n-----------\n\n1. Add \"filesnow\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'filesnow',\n    ]\n\n2. Include the polls URLconf in your project urls.py like this::\n\n    path('filesnow/', include('filesnow.urls'))\n\t\n\tYour URL Pattern must end with concinated string of \"+ static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\"\n\t\n\tIt should look something like\n\t\n\turlpatterns = [\n    path('admin/', admin.site.urls),\n\tpath('filesnow/', include('filesnow.urls')) ] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n\n3. Add the environment variables for media files within filesnow/settings.py::\n\t\n\tDOWNLOAD_LOC = < Describe Media Directory of your django Project or App >\n\tAPP_MEDIA_URL = < Describe Media URL in case of App >\n\t\n\tExample : \n\tI have a django project with below descriptions\n\tdjango Project name => \"docdocgo\"\n\tdjango App name => \"filesnow\"\n\tdjango App Media directory => C:\\\\Users\\\\Jackuna\\\\PycharmProjects\\\\docdocgo\\\\media\\\\filesnow\\\\\n\t\n\tIncase we don't have a media directory, create a media directory under django parent project folder\n\tand then add a folder named by app name.\n\tdocdocgo --> media --> filesnow\n\t\n\tConsidering above below is the way we define it.\n\t\n\tDOWNLOAD_LOC = 'C:\\\\Users\\\\Jackuna\\\\PycharmProjects\\\\docdocgo\\\\media\\\\filesnow\\\\'\n    APP_MEDIA_URL = MEDIA_URL+'filesnow/'\n\n4. Start the development server ``python manage.py runserver 0.0.0.0:9090``\n\n5. Visit http://127.0.0.1:9090/filesnow and explore it.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.cyberkeeda.com", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-filesnow", "package_url": "https://pypi.org/project/django-filesnow/", "platform": "", "project_url": "https://pypi.org/project/django-filesnow/", "project_urls": {"Homepage": "http://www.cyberkeeda.com"}, "release_url": "https://pypi.org/project/django-filesnow/0.1/", "requires_dist": null, "requires_python": "", "summary": "A Django app to download cloud contents.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>FilesNow is a Django app to download documnets, images\nfrom AWS S3 and serve is a temporary static content to customers.</p>\n<p>FilesNow is a way to serve AWS S3 documents/media files\nwithout giving access to your s3 buckets.</p>\n<p>FilesNow itself cleans it\u2019s downloaded presentable\nfiles, as such maintainig a healthy file system</p>\n<div id=\"dependecies\">\n<h2>Dependecies</h2>\n<p>AWS Boto3 Framework : pip install boto3\nConfigure AWS Credentilas using command : aws configure</p>\n</div>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li><p>Add \u201cfilesnow\u201d to your INSTALLED_APPS setting like this:</p>\n<pre>INSTALLED_APPS = [\n    ...\n    'filesnow',\n]\n</pre>\n</li>\n<li><p>Include the polls URLconf in your project urls.py like this:</p>\n<pre>path('filesnow/', include('filesnow.urls'))\n\n    Your URL Pattern must end with concinated string of \"+ static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\"\n\n    It should look something like\n\n    urlpatterns = [\npath('admin/', admin.site.urls),\n    path('filesnow/', include('filesnow.urls')) ] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n</pre>\n</li>\n<li><p>Add the environment variables for media files within filesnow/settings.py:</p>\n<pre>    DOWNLOAD_LOC = &lt; Describe Media Directory of your django Project or App &gt;\n    APP_MEDIA_URL = &lt; Describe Media URL in case of App &gt;\n\n    Example :\n    I have a django project with below descriptions\n    django Project name =&gt; \"docdocgo\"\n    django App name =&gt; \"filesnow\"\n    django App Media directory =&gt; C:\\\\Users\\\\Jackuna\\\\PycharmProjects\\\\docdocgo\\\\media\\\\filesnow\\\\\n\n    Incase we don't have a media directory, create a media directory under django parent project folder\n    and then add a folder named by app name.\n    docdocgo --&gt; media --&gt; filesnow\n\n    Considering above below is the way we define it.\n\n    DOWNLOAD_LOC = 'C:\\\\Users\\\\Jackuna\\\\PycharmProjects\\\\docdocgo\\\\media\\\\filesnow\\\\'\nAPP_MEDIA_URL = MEDIA_URL+'filesnow/'\n</pre>\n</li>\n<li><p>Start the development server <tt>python manage.py runserver 0.0.0.0:9090</tt></p>\n</li>\n<li><p>Visit <a href=\"http://127.0.0.1:9090/filesnow\" rel=\"nofollow\">http://127.0.0.1:9090/filesnow</a> and explore it.</p>\n</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 6812337, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "530238b9bed8285996535d65bf405649", "sha256": "08efb93ab9dfd1020eba8169326312f2edf76b5a8ad89fa7b715819e02221aa6"}, "downloads": -1, "filename": "django-filesnow-0.1.tar.gz", "has_sig": false, "md5_digest": "530238b9bed8285996535d65bf405649", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1622883, "upload_time": "2020-03-14T18:14:59", "upload_time_iso_8601": "2020-03-14T18:14:59.652102Z", "url": "https://files.pythonhosted.org/packages/69/49/64f53327857a450da55e344052f3e62e29cc70a0ad2532dca8c0f39c5ec9/django-filesnow-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "530238b9bed8285996535d65bf405649", "sha256": "08efb93ab9dfd1020eba8169326312f2edf76b5a8ad89fa7b715819e02221aa6"}, "downloads": -1, "filename": "django-filesnow-0.1.tar.gz", "has_sig": false, "md5_digest": "530238b9bed8285996535d65bf405649", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1622883, "upload_time": "2020-03-14T18:14:59", "upload_time_iso_8601": "2020-03-14T18:14:59.652102Z", "url": "https://files.pythonhosted.org/packages/69/49/64f53327857a450da55e344052f3e62e29cc70a0ad2532dca8c0f39c5ec9/django-filesnow-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:09 2020"}