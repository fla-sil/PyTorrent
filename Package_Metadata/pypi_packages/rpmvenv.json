{"info": {"author": "Kevin Conway", "author_email": "kevinjacobconway@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "=======\nrpmvenv\n=======\n\n*RPM package helper which support packaging Python virtual environments.*\n\n-   `Basic Usage <#basic-usage>`_\n\n-   `Customizing <#customizing>`_\n\n    -   `Core <#core>`_\n\n    -   `Blocks <#blocks>`_\n\n    -   `File Permissions <#file-permissions>`_\n\n    -   `Additional Files <#additional-files>`_\n\n    -   `Python Virtualenv <#python-virtualenv>`_\n\n    -   `CLI Flags And Environment Variables <#cli-flags-and-environment-variables>`_\n\n    -   `Additional Options <#additional-options>`_\n\n-   `NOTE: manylinux <#note-manylinux>`_\n\n-   `NOTE: unicode <#note-unicode>`_\n\n-   `NOTE: system python <#note-system-python>`_\n\n-   `NOTE: bdist eggs with scripts <#note-bdist-eggs-with-scripts>`_\n\n-   `Testing <#testing>`_\n\n-   `License <#license>`_\n\n-   `Contributing <#contributing>`_\n\nBasic Usage\n===========\n\nIn order to package a Python project in an RPM containing a virtualenv drop\na file in your repository root with a '.json' extensions and the following\ncontent. Change the values where appropriate.\n\n.. code-block:: javascript\n\n    {\n        \"extensions\": {\n            \"enabled\": [\n                \"python_venv\",\n                \"blocks\"\n            ]\n        },\n        \"core\": {\n            \"group\": \"Application/System\",\n            \"license\": \"MIT\",\n            \"name\": \"some-rpm-package-name\",\n            \"summary\": \"short package summary\",\n            \"version\": \"1.2.3\"\n        },\n        \"python_venv\": {\n            \"name\": \"name_of_venv_dir_to_create\",\n            \"path\": \"/path/where/to/install/venv\"\n        },\n        \"blocks\": {\n            \"desc\": [\n                \"some long package description\",\n                \"each array element is a new line\"\n            ]\n        }\n    }\n\nMake sure `rpmbuild <http://www.rpm.org>`_ is installed.\nWith the configuration file in place run the command line tool installed with\nthe package to generate the RPM.\n\n.. code-block:: shell\n\n    rpmvenv path/to/the/config.json\n\nThis will generate a new RPM and place it in your current working directory.\n\nCustomizing\n===========\n\nWhile the above example will generate an installable RPM it has limitations.\nFor example, it does not set the user/group ownership of the packaged files,\nit does not include non-Python files such as init scripts, and it does not\nperform any post install actions. This project uses a plugin system for adding\nand enabling extra functionality. For convenience, some features ship with the\nproject already.\n\nCore\n----\n\nThe 'core' extension is always enabled. This extension provides the options\nfor interacting with all the required RPM SPEC file tags like \"Version\" or\n\"Url\". Current core options:\n\n.. code-block:: javascript\n\n    {\"core\":{\n        // The name of the RPM file which is generated.\n        \"name\": \"some-pkg-name\",\n        // The RPM version to build.\n        \"version\": \"1.2.3\",\n        // The release number for the RPM. Default is 1.\n        \"release\": \"1\",\n        // The short package summary.\n        \"summary\": \"a package for code\",\n        // The RPM package group in which this package belongs.\n        \"group\": \"Application/System\",\n        // The license under which the package is distributed.\n        \"license\": \"MIT\",\n        // The URL of the package source.\n        \"url\": \"https://projectsite.com\",\n        // The path to the package source. Defaults to the parent of the config.\n        \"source\": \"/path/to/my/source\",\n        // The name of the buildroot directory to use. Default is random temp dir.\n        \"buildroot\": \"%(mktemp -ud %{_tmppath}/%{SOURCE0}-%{version}-%{release}-XXXXXX)\",\n        // System dependencies.\n        \"requires\": [],\n        // Conflicting packages.\n        \"conflicts\": [],\n        // Packages to mark as obsolete.\n        \"obsoletes\": [],\n        // Virtual packages satisfied by this RPM.\n        \"provides\": []\n    }}\n\nBlocks\n------\n\nRPM files contain several sections, or blocks, which can contain multi-line\ncontent. Most blocks contain shell code used to build and install a project.\nThis extension is enabled by adding 'blocks' to the list of enabled extensions.\nEach block configuration item is a list of strings. Each string represents a\nline in the body of the block.\n\n.. code-block:: javascript\n\n    {\"blocks\" {\n        // Shell to execute on post-install.\n        \"post\": [],\n        // Shell to execute on post-uninstall.\n        \"postun\": [],\n        // Shell to execute on pre-install.\n        \"pre\": [],\n        // Shell to execute on pre-uninstall.\n        \"preun\": [],\n        // Shell to execute during the prep phase.\n        \"prep\": [],\n        // Shell to execute during the build phase.\n        \"build\": [],\n        // Shell to execute during the install phase.\n        \"install\": [],\n        // Shell to execute during the clean phase.\n        \"clean\": [],\n        // Long form description of the package.\n        \"desc\": [],\n        // A list of files which are included in the package.\n        \"files\": [],\n        // A list of the changes that have been done\n        \"changelog\": [],\n    }}\n\nFile Permissions\n----------------\n\nThis extension will set the user and group ownership properties of all files\nincluded with the package. It is enabled by adding 'file_permissions' to the\nlist of enabled extensions.\n\n.. code-block:: javascript\n\n    {\"file_permissions\": {\n        // The name of the user who should own the files.\n        \"user\": \"webserver\",\n        // The name of the group which should own the files.\n        \"group\": \"webserver\",\n        // If true, the user will be created during install if missing.\n        \"create_user\": false,\n        // If true, the group will be created during install if missing.\n        \"create_group\": false,\n    }}\n\nAdditional Files\n----------------\n\nThis extension will allow for packaging any files even if they are not a part\nof the built project. This extension is enabled by adding \"file_extras\" in the\nlist of enabled extensions. This extension also requires that\n'file_permissions' be enabled. It uses the same user and group to assign\nownership of the extra files. Source paths are relative to the root.\n\n.. code-block:: javascript\n\n    {\"file_extras\": {\n        \"files\": [\n            {\n                \"src\": \"somedir/project_init_script\",\n                \"dest\": \"etc/init.d/project\",\n            },\n            {\n                \"src\": \"somedir/readme\",\n                \"dest\": \"usr/share/doc/project/readme\",\n                \"doc\": true\n            },\n            {\n                \"src\": \"somedir/project.conf\",\n                \"dest\": \"etc/project.conf\",\n                // valid options include true, \"noreplace\", and \"missingok\"\n                \"config\": \"noreplace\"\n            },\n            // source:destination pairs (deprecated)\n            \"somedir/project_init_script:etc/init.d/project\"\n        ]\n    }}\n\nPython Virtualenv\n-----------------\n\nThis extension automates generating an RPM from a Python virtualenv. It is\nenabled by adding 'python_venv' to the list of enabled extensions.\n\n.. code-block:: javascript\n\n    {\"python_venv\": {\n        // The executable to use for creating a venv.\n        \"cmd\": \"virtualenv\",\n        // Flags to pass to the venv during creation.\n        \"flags\": [\"--always-copy\"],\n        // The name of the installed venv.\n        \"name\": \"project_venv\",\n        // The path in which to install the venv.\n        \"path\": \"/usr/share/python\",\n        // The python executable to use in the venv.\n        \"python\": \"python2.7\",\n        // Optional flag to enable building an rpm with, without a setup.py file. Default is true if not present.\n        \"require_setup_py\": true,\n        // Names of requirements files to install in the venv.\n        \"requirements\": [\"requirements.txt\"],\n        // Flags to pass to pip during pip install calls.\n        \"pip_flags\": \"--index-url https://internal-pypi-server.org\",\n        // Optional flag to enable, disable binary striping. Default is true if not present.\n        \"strip_binaries\": true,\n        // Optional flag to install the distribution into the venv with\n        // pip install, rather than setup.py install. Default is false if\n        // not present.\n        \"use_pip_install\": false,\n        // Optional flag to remove compiled bytecode from venv.\n        // It will reduce size of resulting package. Default is false if not present.\n        \"remove_pycache\": false,\n    }}\n\nCLI Flags And Environment Variables\n-----------------------------------\n\nIn addition to adding the above sections to a configuration file, all values\nmay also be given as command line flags to the 'rpmvenv' command as well as\nenvironment variables.\n\nCommand line flags follow a common pattern: '--extension_name_option_name'. A\ncommon use for this feature is setting the RPM package version over the CLI\nrather than hard coding it into a configuration file.\n\n.. code-block:: shell\n\n    rpmvenv /path/to/some/config.json --core_version=\"$(date -u +%Y.%m.%d.%H.%M.%S)\"\n\nThis CLI argument pattern may be used to set any options. Alternatively,\nenvironment variables can also be set using a similar naming scheme:\n'export RPMVENV_EXTENSION_NAME_OPTION_NAME=\"\"'. Setting the version with\nenvironment variables, for example:\n\n.. code-block:: shell\n\n    RPMVENV_CORE_VERSION=\"$(date -u +%Y.%m.%d.%H.%M.%S)\" \\\n    rpmvenv /path/to/some/config.json\n\nThe precedence order for options is configuration file, environment variables,\nthen CLI flags. That is, environment variables will always override items in\nthe configuration file and CLI flags will override both the file and the\nenvironment variables.\n\nAdditional Options\n------------------\n\nIn addition to the options for modifying the spec file, the following are also\navailable as CLI flags:\n\n-   --source\n\n    The path to a Python source repository. By default, this value resolves to\n    the directory containing the specified configuration file. It can be\n    overridden if the Python source is not adjacent the configuration file.\n\n-   --destination\n\n    The directory in which to place the RPM. The default value is the current\n    working directory.\n\n-   --spec\n\n    This flag disables the actual build in favour of printing the spec file\n    contents to stdout. Use this option if you need to manually verify the\n    spec file before running a build.\n\n-   --verbose\n\n    Normally, the stdout and stderr of the rpmbuild call are captured unless\n    there is an exception. Adding this flag enables the real-time output from\n    the rpmbuild command.\n\nNOTE: manylinux\n===============\n\nAs of 2019-05-26, the issue with packages generated as part of the\n`manylinux <https://github.com/pypa/manylinux>`_ project appears to have\nbeen resolved. This means wheels containing universal linux binaries should\nwork as expected without any special options being enabled for `rpmvenv`.\n\nFor background, an issue was opened on 2017-02-01 that reported broken builds\nwhen one of the project dependencies was built using manylinux. The root cause\nappeared to be an incompatiblity between manylinux binaries and the standard\n`strip` system utility. Without being able to `strip` the binaries we were\nunable to remove metadata from those files which included the temporary RPM\nbuild root. RPM builds automatically fail if any file within the package\ncontains a reference to the build root.\n\nA test has been added to this project's suite that will fail if the manylinux\nproject issue with `strip` regresses. If the issues does regress you can\nrestore your builds by adding `strip_binaries=false` to the `venv` section of\nyour configuration and setting the `QA_SKIP_BUILD_ROOT=1` environment variable\nbefore running `rpmvenv`. The `strip_binaries=false` disables the call to\n`strip` and the `QA_SKIP_BUILD_ROOT=1` variable disables the RPM tool's check\nfor build root.\n\nNOTE: unicode\n=============\n\nAn issue was opened on 2018-09-01 showing a conflict between some Python\npackages and some environments. Notably, CentOS (and possibly others) default\nto having a global system encoding value set to `ASCII` rather than `UTF-8`.\nPython2.X opens files using the system encoding which results in several errors\nif any of the source code files contain non-ASCII characters. If you encounter\nthis issue then the easiest way to resolve it is to set the\n`LC_ALL=en_US.UTF-8` variable before running `rpmvenv`. This will adjust the\nglobal setting and enable processing of non-ASCII encoded files.\n\nNOTE: system python\n===================\n\nAn issue was opened on 2017-05-18 showing a build failure wnen using the\ndefault Python installations for some versions of CentOS, Fedora, and RedHat.\nThe issue manifests during the creation of the `virtualenv` and appears as\nsomething like `ImportError: No module named \\'time\\'` or other error messages\nreferencing Python built-ins. The cause appears to related to an\n`unresolved issue <https://github.com/pypa/virtualenv/issues/565>`_ between the\naffected system distribution provided Python installations and `virtualenv`.\nThe only known fix for this issue is to re-build Python from source for any\naffected system.\n\nNOTE: bdist eggs with scripts\n=============================\n\nAn issue was opened on 2019-01-28 showing a build failure whenever the usual\n`python setup.py install` line was executed for a project that both contained\nscripts and triggered the `bdist` packaging path for an egg. For unknown\nreasons, the `bdist` egg package both installs scripts in the relevant `bin`\ndirectory _and_ retrains a copy within the egg directory. `rpmvenv` rewrites\nthe shebang paths in `bin` but does not account for the second copy in the\n`bdist` egg directory. The result is a build failure because the build root is\nreferenced in a file.\n\nThe way to resolve this issue is to use the `\"use_pip_install\": true` option\nwhich switches the installation method from `python setup.py install` to\n`pip install .`. These two methods result in different installation behavior\nbecause `pip` will always generate a wheel rather than an egg which does not\nsuffer from this issue.\n\nTesting\n=======\n\nThe included tests are written using py.test. There is also an included tox.ini\nwhich is configured to run the tests in addition to style checks. By default,\nthe integration tests run using rpmvenv as the target project to build.\nHowever, any project with a requirements.txt file in the repository root can\nbe specified with the '--python-git-url' flag while running the tests.\n\nLicense\n=======\n\n::\n\n    (MIT License)\n\n    Copyright (C) 2015 Kevin Conway\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to\n    deal in the Software without restriction, including without limitation the\n    rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n    sell copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n    IN THE SOFTWARE.\n\n\nContributing\n============\n\nAll contributions to this project are protected under the agreement found in\nthe `CONTRIBUTING` file. All contributors should read the agreement but, as\na summary::\n\n    You give us the rights to maintain and distribute your code and we promise\n    to maintain an open source distribution of anything you contribute.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kevinconway/rpmvenv", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rpmvenv", "package_url": "https://pypi.org/project/rpmvenv/", "platform": "", "project_url": "https://pypi.org/project/rpmvenv/", "project_urls": {"Homepage": "https://github.com/kevinconway/rpmvenv"}, "release_url": "https://pypi.org/project/rpmvenv/0.23.0/", "requires_dist": null, "requires_python": "", "summary": "RPM packager for Python virtualenv.", "version": "0.23.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><em>RPM package helper which support packaging Python virtual environments.</em></p>\n<ul>\n<li><a href=\"#basic-usage\" rel=\"nofollow\">Basic Usage</a></li>\n<li><a href=\"#customizing\" rel=\"nofollow\">Customizing</a><ul>\n<li><a href=\"#core\" rel=\"nofollow\">Core</a></li>\n<li><a href=\"#blocks\" rel=\"nofollow\">Blocks</a></li>\n<li><a href=\"#file-permissions\" rel=\"nofollow\">File Permissions</a></li>\n<li><a href=\"#additional-files\" rel=\"nofollow\">Additional Files</a></li>\n<li><a href=\"#python-virtualenv\" rel=\"nofollow\">Python Virtualenv</a></li>\n<li><a href=\"#cli-flags-and-environment-variables\" rel=\"nofollow\">CLI Flags And Environment Variables</a></li>\n<li><a href=\"#additional-options\" rel=\"nofollow\">Additional Options</a></li>\n</ul>\n</li>\n<li><a href=\"#note-manylinux\" rel=\"nofollow\">NOTE: manylinux</a></li>\n<li><a href=\"#note-unicode\" rel=\"nofollow\">NOTE: unicode</a></li>\n<li><a href=\"#note-system-python\" rel=\"nofollow\">NOTE: system python</a></li>\n<li><a href=\"#note-bdist-eggs-with-scripts\" rel=\"nofollow\">NOTE: bdist eggs with scripts</a></li>\n<li><a href=\"#testing\" rel=\"nofollow\">Testing</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n</ul>\n<div id=\"id1\">\n<h2>Basic Usage</h2>\n<p>In order to package a Python project in an RPM containing a virtualenv drop\na file in your repository root with a \u2018.json\u2019 extensions and the following\ncontent. Change the values where appropriate.</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"extensions\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"enabled\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"python_venv\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"blocks\"</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"core\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"group\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Application/System\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"license\"</span><span class=\"o\">:</span> <span class=\"s2\">\"MIT\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"some-rpm-package-name\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"summary\"</span><span class=\"o\">:</span> <span class=\"s2\">\"short package summary\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"version\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1.2.3\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"python_venv\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"name_of_venv_dir_to_create\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"path\"</span><span class=\"o\">:</span> <span class=\"s2\">\"/path/where/to/install/venv\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"blocks\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"desc\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"some long package description\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"each array element is a new line\"</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Make sure <a href=\"http://www.rpm.org\" rel=\"nofollow\">rpmbuild</a> is installed.\nWith the configuration file in place run the command line tool installed with\nthe package to generate the RPM.</p>\n<pre>rpmvenv path/to/the/config.json\n</pre>\n<p>This will generate a new RPM and place it in your current working directory.</p>\n</div>\n<div id=\"id2\">\n<h2>Customizing</h2>\n<p>While the above example will generate an installable RPM it has limitations.\nFor example, it does not set the user/group ownership of the packaged files,\nit does not include non-Python files such as init scripts, and it does not\nperform any post install actions. This project uses a plugin system for adding\nand enabling extra functionality. For convenience, some features ship with the\nproject already.</p>\n<div id=\"id3\">\n<h3>Core</h3>\n<p>The \u2018core\u2019 extension is always enabled. This extension provides the options\nfor interacting with all the required RPM SPEC file tags like \u201cVersion\u201d or\n\u201cUrl\u201d. Current core options:</p>\n<pre><span class=\"p\">{</span><span class=\"s2\">\"core\"</span><span class=\"o\">:</span><span class=\"p\">{</span>\n    <span class=\"c1\">// The name of the RPM file which is generated.\n</span>    <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"some-pkg-name\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// The RPM version to build.\n</span>    <span class=\"s2\">\"version\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1.2.3\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// The release number for the RPM. Default is 1.\n</span>    <span class=\"s2\">\"release\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// The short package summary.\n</span>    <span class=\"s2\">\"summary\"</span><span class=\"o\">:</span> <span class=\"s2\">\"a package for code\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// The RPM package group in which this package belongs.\n</span>    <span class=\"s2\">\"group\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Application/System\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// The license under which the package is distributed.\n</span>    <span class=\"s2\">\"license\"</span><span class=\"o\">:</span> <span class=\"s2\">\"MIT\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// The URL of the package source.\n</span>    <span class=\"s2\">\"url\"</span><span class=\"o\">:</span> <span class=\"s2\">\"https://projectsite.com\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// The path to the package source. Defaults to the parent of the config.\n</span>    <span class=\"s2\">\"source\"</span><span class=\"o\">:</span> <span class=\"s2\">\"/path/to/my/source\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// The name of the buildroot directory to use. Default is random temp dir.\n</span>    <span class=\"s2\">\"buildroot\"</span><span class=\"o\">:</span> <span class=\"s2\">\"%(mktemp -ud %{_tmppath}/%{SOURCE0}-%{version}-%{release}-XXXXXX)\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// System dependencies.\n</span>    <span class=\"s2\">\"requires\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"c1\">// Conflicting packages.\n</span>    <span class=\"s2\">\"conflicts\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"c1\">// Packages to mark as obsolete.\n</span>    <span class=\"s2\">\"obsoletes\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"c1\">// Virtual packages satisfied by this RPM.\n</span>    <span class=\"s2\">\"provides\"</span><span class=\"o\">:</span> <span class=\"p\">[]</span>\n<span class=\"p\">}}</span>\n</pre>\n</div>\n<div id=\"id4\">\n<h3>Blocks</h3>\n<p>RPM files contain several sections, or blocks, which can contain multi-line\ncontent. Most blocks contain shell code used to build and install a project.\nThis extension is enabled by adding \u2018blocks\u2019 to the list of enabled extensions.\nEach block configuration item is a list of strings. Each string represents a\nline in the body of the block.</p>\n<pre><span class=\"p\">{</span><span class=\"s2\">\"blocks\"</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// Shell to execute on post-install.\n</span>    <span class=\"s2\">\"post\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"c1\">// Shell to execute on post-uninstall.\n</span>    <span class=\"s2\">\"postun\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"c1\">// Shell to execute on pre-install.\n</span>    <span class=\"s2\">\"pre\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"c1\">// Shell to execute on pre-uninstall.\n</span>    <span class=\"s2\">\"preun\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"c1\">// Shell to execute during the prep phase.\n</span>    <span class=\"s2\">\"prep\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"c1\">// Shell to execute during the build phase.\n</span>    <span class=\"s2\">\"build\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"c1\">// Shell to execute during the install phase.\n</span>    <span class=\"s2\">\"install\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"c1\">// Shell to execute during the clean phase.\n</span>    <span class=\"s2\">\"clean\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"c1\">// Long form description of the package.\n</span>    <span class=\"s2\">\"desc\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"c1\">// A list of files which are included in the package.\n</span>    <span class=\"s2\">\"files\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n    <span class=\"c1\">// A list of the changes that have been done\n</span>    <span class=\"s2\">\"changelog\"</span><span class=\"o\">:</span> <span class=\"p\">[],</span>\n<span class=\"p\">}}</span>\n</pre>\n</div>\n<div id=\"id5\">\n<h3>File Permissions</h3>\n<p>This extension will set the user and group ownership properties of all files\nincluded with the package. It is enabled by adding \u2018file_permissions\u2019 to the\nlist of enabled extensions.</p>\n<pre><span class=\"p\">{</span><span class=\"s2\">\"file_permissions\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// The name of the user who should own the files.\n</span>    <span class=\"s2\">\"user\"</span><span class=\"o\">:</span> <span class=\"s2\">\"webserver\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// The name of the group which should own the files.\n</span>    <span class=\"s2\">\"group\"</span><span class=\"o\">:</span> <span class=\"s2\">\"webserver\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// If true, the user will be created during install if missing.\n</span>    <span class=\"s2\">\"create_user\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n    <span class=\"c1\">// If true, the group will be created during install if missing.\n</span>    <span class=\"s2\">\"create_group\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n<span class=\"p\">}}</span>\n</pre>\n</div>\n<div id=\"id6\">\n<h3>Additional Files</h3>\n<p>This extension will allow for packaging any files even if they are not a part\nof the built project. This extension is enabled by adding \u201cfile_extras\u201d in the\nlist of enabled extensions. This extension also requires that\n\u2018file_permissions\u2019 be enabled. It uses the same user and group to assign\nownership of the extra files. Source paths are relative to the root.</p>\n<pre><span class=\"p\">{</span><span class=\"s2\">\"file_extras\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"files\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">\"src\"</span><span class=\"o\">:</span> <span class=\"s2\">\"somedir/project_init_script\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"dest\"</span><span class=\"o\">:</span> <span class=\"s2\">\"etc/init.d/project\"</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">\"src\"</span><span class=\"o\">:</span> <span class=\"s2\">\"somedir/readme\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"dest\"</span><span class=\"o\">:</span> <span class=\"s2\">\"usr/share/doc/project/readme\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"doc\"</span><span class=\"o\">:</span> <span class=\"kc\">true</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">\"src\"</span><span class=\"o\">:</span> <span class=\"s2\">\"somedir/project.conf\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"dest\"</span><span class=\"o\">:</span> <span class=\"s2\">\"etc/project.conf\"</span><span class=\"p\">,</span>\n            <span class=\"c1\">// valid options include true, \"noreplace\", and \"missingok\"\n</span>            <span class=\"s2\">\"config\"</span><span class=\"o\">:</span> <span class=\"s2\">\"noreplace\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"c1\">// source:destination pairs (deprecated)\n</span>        <span class=\"s2\">\"somedir/project_init_script:etc/init.d/project\"</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}}</span>\n</pre>\n</div>\n<div id=\"id7\">\n<h3>Python Virtualenv</h3>\n<p>This extension automates generating an RPM from a Python virtualenv. It is\nenabled by adding \u2018python_venv\u2019 to the list of enabled extensions.</p>\n<pre><span class=\"p\">{</span><span class=\"s2\">\"python_venv\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// The executable to use for creating a venv.\n</span>    <span class=\"s2\">\"cmd\"</span><span class=\"o\">:</span> <span class=\"s2\">\"virtualenv\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// Flags to pass to the venv during creation.\n</span>    <span class=\"s2\">\"flags\"</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"--always-copy\"</span><span class=\"p\">],</span>\n    <span class=\"c1\">// The name of the installed venv.\n</span>    <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"project_venv\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// The path in which to install the venv.\n</span>    <span class=\"s2\">\"path\"</span><span class=\"o\">:</span> <span class=\"s2\">\"/usr/share/python\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// The python executable to use in the venv.\n</span>    <span class=\"s2\">\"python\"</span><span class=\"o\">:</span> <span class=\"s2\">\"python2.7\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// Optional flag to enable building an rpm with, without a setup.py file. Default is true if not present.\n</span>    <span class=\"s2\">\"require_setup_py\"</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"c1\">// Names of requirements files to install in the venv.\n</span>    <span class=\"s2\">\"requirements\"</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"requirements.txt\"</span><span class=\"p\">],</span>\n    <span class=\"c1\">// Flags to pass to pip during pip install calls.\n</span>    <span class=\"s2\">\"pip_flags\"</span><span class=\"o\">:</span> <span class=\"s2\">\"--index-url https://internal-pypi-server.org\"</span><span class=\"p\">,</span>\n    <span class=\"c1\">// Optional flag to enable, disable binary striping. Default is true if not present.\n</span>    <span class=\"s2\">\"strip_binaries\"</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"c1\">// Optional flag to install the distribution into the venv with\n</span>    <span class=\"c1\">// pip install, rather than setup.py install. Default is false if\n</span>    <span class=\"c1\">// not present.\n</span>    <span class=\"s2\">\"use_pip_install\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n    <span class=\"c1\">// Optional flag to remove compiled bytecode from venv.\n</span>    <span class=\"c1\">// It will reduce size of resulting package. Default is false if not present.\n</span>    <span class=\"s2\">\"remove_pycache\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n<span class=\"p\">}}</span>\n</pre>\n</div>\n<div id=\"id8\">\n<h3>CLI Flags And Environment Variables</h3>\n<p>In addition to adding the above sections to a configuration file, all values\nmay also be given as command line flags to the \u2018rpmvenv\u2019 command as well as\nenvironment variables.</p>\n<p>Command line flags follow a common pattern: \u2018\u2013extension_name_option_name\u2019. A\ncommon use for this feature is setting the RPM package version over the CLI\nrather than hard coding it into a configuration file.</p>\n<pre>rpmvenv /path/to/some/config.json --core_version<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">$(</span>date -u +%Y.%m.%d.%H.%M.%S<span class=\"k\">)</span><span class=\"s2\">\"</span>\n</pre>\n<p>This CLI argument pattern may be used to set any options. Alternatively,\nenvironment variables can also be set using a similar naming scheme:\n\u2018export RPMVENV_EXTENSION_NAME_OPTION_NAME=\u201d\u201d\u2019. Setting the version with\nenvironment variables, for example:</p>\n<pre><span class=\"nv\">RPMVENV_CORE_VERSION</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">$(</span>date -u +%Y.%m.%d.%H.%M.%S<span class=\"k\">)</span><span class=\"s2\">\"</span> <span class=\"se\">\\\n</span>rpmvenv /path/to/some/config.json\n</pre>\n<p>The precedence order for options is configuration file, environment variables,\nthen CLI flags. That is, environment variables will always override items in\nthe configuration file and CLI flags will override both the file and the\nenvironment variables.</p>\n</div>\n<div id=\"id9\">\n<h3>Additional Options</h3>\n<p>In addition to the options for modifying the spec file, the following are also\navailable as CLI flags:</p>\n<ul>\n<li><p>\u2013source</p>\n<p>The path to a Python source repository. By default, this value resolves to\nthe directory containing the specified configuration file. It can be\noverridden if the Python source is not adjacent the configuration file.</p>\n</li>\n<li><p>\u2013destination</p>\n<p>The directory in which to place the RPM. The default value is the current\nworking directory.</p>\n</li>\n<li><p>\u2013spec</p>\n<p>This flag disables the actual build in favour of printing the spec file\ncontents to stdout. Use this option if you need to manually verify the\nspec file before running a build.</p>\n</li>\n<li><p>\u2013verbose</p>\n<p>Normally, the stdout and stderr of the rpmbuild call are captured unless\nthere is an exception. Adding this flag enables the real-time output from\nthe rpmbuild command.</p>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"id10\">\n<h2>NOTE: manylinux</h2>\n<p>As of 2019-05-26, the issue with packages generated as part of the\n<a href=\"https://github.com/pypa/manylinux\" rel=\"nofollow\">manylinux</a> project appears to have\nbeen resolved. This means wheels containing universal linux binaries should\nwork as expected without any special options being enabled for <cite>rpmvenv</cite>.</p>\n<p>For background, an issue was opened on 2017-02-01 that reported broken builds\nwhen one of the project dependencies was built using manylinux. The root cause\nappeared to be an incompatiblity between manylinux binaries and the standard\n<cite>strip</cite> system utility. Without being able to <cite>strip</cite> the binaries we were\nunable to remove metadata from those files which included the temporary RPM\nbuild root. RPM builds automatically fail if any file within the package\ncontains a reference to the build root.</p>\n<p>A test has been added to this project\u2019s suite that will fail if the manylinux\nproject issue with <cite>strip</cite> regresses. If the issues does regress you can\nrestore your builds by adding <cite>strip_binaries=false</cite> to the <cite>venv</cite> section of\nyour configuration and setting the <cite>QA_SKIP_BUILD_ROOT=1</cite> environment variable\nbefore running <cite>rpmvenv</cite>. The <cite>strip_binaries=false</cite> disables the call to\n<cite>strip</cite> and the <cite>QA_SKIP_BUILD_ROOT=1</cite> variable disables the RPM tool\u2019s check\nfor build root.</p>\n</div>\n<div id=\"id11\">\n<h2>NOTE: unicode</h2>\n<p>An issue was opened on 2018-09-01 showing a conflict between some Python\npackages and some environments. Notably, CentOS (and possibly others) default\nto having a global system encoding value set to <cite>ASCII</cite> rather than <cite>UTF-8</cite>.\nPython2.X opens files using the system encoding which results in several errors\nif any of the source code files contain non-ASCII characters. If you encounter\nthis issue then the easiest way to resolve it is to set the\n<cite>LC_ALL=en_US.UTF-8</cite> variable before running <cite>rpmvenv</cite>. This will adjust the\nglobal setting and enable processing of non-ASCII encoded files.</p>\n</div>\n<div id=\"id12\">\n<h2>NOTE: system python</h2>\n<p>An issue was opened on 2017-05-18 showing a build failure wnen using the\ndefault Python installations for some versions of CentOS, Fedora, and RedHat.\nThe issue manifests during the creation of the <cite>virtualenv</cite> and appears as\nsomething like <cite>ImportError: No module named \u2018time\u2019</cite> or other error messages\nreferencing Python built-ins. The cause appears to related to an\n<a href=\"https://github.com/pypa/virtualenv/issues/565\" rel=\"nofollow\">unresolved issue</a> between the\naffected system distribution provided Python installations and <cite>virtualenv</cite>.\nThe only known fix for this issue is to re-build Python from source for any\naffected system.</p>\n</div>\n<div id=\"id13\">\n<h2>NOTE: bdist eggs with scripts</h2>\n<p>An issue was opened on 2019-01-28 showing a build failure whenever the usual\n<cite>python setup.py install</cite> line was executed for a project that both contained\nscripts and triggered the <cite>bdist</cite> packaging path for an egg. For unknown\nreasons, the <cite>bdist</cite> egg package both installs scripts in the relevant <cite>bin</cite>\ndirectory _and_ retrains a copy within the egg directory. <cite>rpmvenv</cite> rewrites\nthe shebang paths in <cite>bin</cite> but does not account for the second copy in the\n<cite>bdist</cite> egg directory. The result is a build failure because the build root is\nreferenced in a file.</p>\n<p>The way to resolve this issue is to use the <cite>\u201cuse_pip_install\u201d: true</cite> option\nwhich switches the installation method from <cite>python setup.py install</cite> to\n<cite>pip install .</cite>. These two methods result in different installation behavior\nbecause <cite>pip</cite> will always generate a wheel rather than an egg which does not\nsuffer from this issue.</p>\n</div>\n<div id=\"id14\">\n<h2>Testing</h2>\n<p>The included tests are written using py.test. There is also an included tox.ini\nwhich is configured to run the tests in addition to style checks. By default,\nthe integration tests run using rpmvenv as the target project to build.\nHowever, any project with a requirements.txt file in the repository root can\nbe specified with the \u2018\u2013python-git-url\u2019 flag while running the tests.</p>\n</div>\n<div id=\"id15\">\n<h2>License</h2>\n<pre>(MIT License)\n\nCopyright (C) 2015 Kevin Conway\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n</pre>\n</div>\n<div id=\"id16\">\n<h2>Contributing</h2>\n<p>All contributions to this project are protected under the agreement found in\nthe <cite>CONTRIBUTING</cite> file. All contributors should read the agreement but, as\na summary:</p>\n<pre>You give us the rights to maintain and distribute your code and we promise\nto maintain an open source distribution of anything you contribute.\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6634905, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "66881b852bae42f8890bb8be93de1005", "sha256": "e4d3a5b0f32cf3f22a1b3ede9ee8c6c9eb5039f38375b385d9e72740c8e5370f"}, "downloads": -1, "filename": "rpmvenv-0.1.0.tar.gz", "has_sig": false, "md5_digest": "66881b852bae42f8890bb8be93de1005", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8789, "upload_time": "2015-02-21T20:16:32", "upload_time_iso_8601": "2015-02-21T20:16:32.728394Z", "url": "https://files.pythonhosted.org/packages/cb/5e/b2ad7e12fce4452d3ba2a0e6e11d79d26928cca152eed0c06011b0ca1aaf/rpmvenv-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "caf4df3ef0aac18a9b59696ecf5b54fb", "sha256": "1f909442b735d242693fe44f102c7547aac01b89223a62f5df613175ee1e64e8"}, "downloads": -1, "filename": "rpmvenv-0.1.1.tar.gz", "has_sig": false, "md5_digest": "caf4df3ef0aac18a9b59696ecf5b54fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8791, "upload_time": "2015-02-21T20:19:18", "upload_time_iso_8601": "2015-02-21T20:19:18.507026Z", "url": "https://files.pythonhosted.org/packages/16/7d/e54f87187f49b29354aa5421337094af4b15cea216c3c70d8fc52e44567b/rpmvenv-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "05780469e32a47ded07679b5ca45c192", "sha256": "8eeb06a3aa502eae22c665472eb3630877975af9747d212a3f7b082df09ca0d2"}, "downloads": -1, "filename": "rpmvenv-0.1.2.zip", "has_sig": false, "md5_digest": "05780469e32a47ded07679b5ca45c192", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17776, "upload_time": "2015-02-23T17:22:03", "upload_time_iso_8601": "2015-02-23T17:22:03.103562Z", "url": "https://files.pythonhosted.org/packages/bc/4a/f08f0e66165c3a94089e141b10c8070cb2af233042b930207ac4d2046207/rpmvenv-0.1.2.zip", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "6a31a6e7975991af7097b189bfab9344", "sha256": "8029a5640900d6b47a4aa3e73c3bf8db47565e05727c22d2bd74ac1f02d26627"}, "downloads": -1, "filename": "rpmvenv-0.10.0.tar.gz", "has_sig": false, "md5_digest": "6a31a6e7975991af7097b189bfab9344", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13755, "upload_time": "2015-10-15T17:01:04", "upload_time_iso_8601": "2015-10-15T17:01:04.666439Z", "url": "https://files.pythonhosted.org/packages/3d/35/bfb3dc327332a61a987ace1b3fd40e8a79cae2271c36d962efdcf6ee82eb/rpmvenv-0.10.0.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "fcf3db5e1da8ec19473e1bcd9c5a23ca", "sha256": "8d5dcdde32c0c2426f8763926bafb65b140585bbf18ceee5d120ca36eee094f8"}, "downloads": -1, "filename": "rpmvenv-0.11.0.tar.gz", "has_sig": false, "md5_digest": "fcf3db5e1da8ec19473e1bcd9c5a23ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13817, "upload_time": "2015-12-12T23:41:55", "upload_time_iso_8601": "2015-12-12T23:41:55.632835Z", "url": "https://files.pythonhosted.org/packages/c5/45/35257d38729d247b75a10cc730e6f6e4d254ce52e431d6cd67911e0b0595/rpmvenv-0.11.0.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "1172d0a75ddee6a3a617eacee163ed9c", "sha256": "47be6aac1c78e6316c19c4d27c4ee30a6b86043e6e83846c005c48bc8b470a8e"}, "downloads": -1, "filename": "rpmvenv-0.12.0.tar.gz", "has_sig": false, "md5_digest": "1172d0a75ddee6a3a617eacee163ed9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14275, "upload_time": "2016-07-10T16:40:43", "upload_time_iso_8601": "2016-07-10T16:40:43.547054Z", "url": "https://files.pythonhosted.org/packages/6c/e3/f9aa58e3dea7cc79949fcad9219a5c61a534144d3a56f7b6830c371ca01b/rpmvenv-0.12.0.tar.gz", "yanked": false}], "0.13.0": [{"comment_text": "", "digests": {"md5": "9221536221279007c81ad8cd7c479628", "sha256": "cad2ce4d1ace7edfe1ac3aaf435aa7674dc5a06c318a8aa58bff76ce5f02f2c1"}, "downloads": -1, "filename": "rpmvenv-0.13.0.tar.gz", "has_sig": false, "md5_digest": "9221536221279007c81ad8cd7c479628", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14470, "upload_time": "2016-07-10T16:53:24", "upload_time_iso_8601": "2016-07-10T16:53:24.866095Z", "url": "https://files.pythonhosted.org/packages/36/e9/ccfd250f85a59c2e2d066790b2694d8a882663bb0a3bbefb0a7f110181ef/rpmvenv-0.13.0.tar.gz", "yanked": false}], "0.13.1": [], "0.13.2": [{"comment_text": "", "digests": {"md5": "f0f8a67fbbbd903f57aad4bc4208ea5e", "sha256": "0411682c7158ce4ecb8ff3f74ac2a4fb95dbdfe3946608020515e1f636ab1938"}, "downloads": -1, "filename": "rpmvenv-0.13.2.tar.gz", "has_sig": false, "md5_digest": "f0f8a67fbbbd903f57aad4bc4208ea5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14476, "upload_time": "2016-07-12T02:28:50", "upload_time_iso_8601": "2016-07-12T02:28:50.009209Z", "url": "https://files.pythonhosted.org/packages/59/15/6f1143e37964f192bb1d33f819bbe115fdb77a40ad3f5c1a65c36513f1fe/rpmvenv-0.13.2.tar.gz", "yanked": false}], "0.14.0": [{"comment_text": "", "digests": {"md5": "e5e9d19fd0d36fa35286fdcb7c34e1de", "sha256": "8d037cbeccda6a4da4df6b3313c547b2143746c321112821d6183003c768966c"}, "downloads": -1, "filename": "rpmvenv-0.14.0.tar.gz", "has_sig": false, "md5_digest": "e5e9d19fd0d36fa35286fdcb7c34e1de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13846, "upload_time": "2016-08-08T04:02:06", "upload_time_iso_8601": "2016-08-08T04:02:06.829158Z", "url": "https://files.pythonhosted.org/packages/bf/25/1721025fb179cca0428049f6fe8c888535a598621142d5b4fe0857ddc4b2/rpmvenv-0.14.0.tar.gz", "yanked": false}], "0.15.0": [{"comment_text": "", "digests": {"md5": "72ccdd270eeb968e1a797f3952a25626", "sha256": "55e4678c9c6aa540fa7de6c90df19c85604b54a5378c3cd5cb51c6168c941393"}, "downloads": -1, "filename": "rpmvenv-0.15.0.tar.gz", "has_sig": false, "md5_digest": "72ccdd270eeb968e1a797f3952a25626", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24352, "upload_time": "2016-08-29T09:32:32", "upload_time_iso_8601": "2016-08-29T09:32:32.496292Z", "url": "https://files.pythonhosted.org/packages/1a/69/6770bf72b334424ee0ae6a7fa5a6b154aed2ab73fb9cdb548ea65c530248/rpmvenv-0.15.0.tar.gz", "yanked": false}], "0.15.1": [{"comment_text": "", "digests": {"md5": "68d25987050f3622b3e3535db0f11417", "sha256": "92c62b458958cad42d3ce33f6d12b55854afc2377c522297015fcf294c8cf2d2"}, "downloads": -1, "filename": "rpmvenv-0.15.1.tar.gz", "has_sig": false, "md5_digest": "68d25987050f3622b3e3535db0f11417", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15381, "upload_time": "2016-10-08T16:52:30", "upload_time_iso_8601": "2016-10-08T16:52:30.377684Z", "url": "https://files.pythonhosted.org/packages/31/ab/b05f9a36e63071f0f0c2bbed72d399f110eb49d49dec3787ee048a36eb25/rpmvenv-0.15.1.tar.gz", "yanked": false}], "0.16.0": [{"comment_text": "", "digests": {"md5": "31b2187bef225d088e33d26e8bc77ee1", "sha256": "b245b508baaba271d7345472be7629ae6d309b47405e6bb08a335794384a558d"}, "downloads": -1, "filename": "rpmvenv-0.16.0.tar.gz", "has_sig": false, "md5_digest": "31b2187bef225d088e33d26e8bc77ee1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26009, "upload_time": "2017-03-09T18:56:33", "upload_time_iso_8601": "2017-03-09T18:56:33.660150Z", "url": "https://files.pythonhosted.org/packages/eb/56/30031b6c3694ba152c237ff61476ae60cb1318205002ed5f2b551e4c3c4f/rpmvenv-0.16.0.tar.gz", "yanked": false}], "0.17.0": [{"comment_text": "", "digests": {"md5": "27acfcbe008c7e10f131ec320552ed40", "sha256": "e160d15c571ee6dc8a17f7f59ed1950fcd4c3df13d03bc80766d63f7e62cec88"}, "downloads": -1, "filename": "rpmvenv-0.17.0.tar.gz", "has_sig": false, "md5_digest": "27acfcbe008c7e10f131ec320552ed40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26070, "upload_time": "2017-04-01T21:16:42", "upload_time_iso_8601": "2017-04-01T21:16:42.364748Z", "url": "https://files.pythonhosted.org/packages/f9/00/6d16c1c420cc04ab7bea938a08868d982a8427d0bc0e7a827359dd5ae4eb/rpmvenv-0.17.0.tar.gz", "yanked": false}], "0.18.0": [{"comment_text": "", "digests": {"md5": "e1395c7f9d00506ab77316eadeabcc78", "sha256": "b68a44f3001ad642930266240378ec3325819345a986c525b8f66a3edc845047"}, "downloads": -1, "filename": "rpmvenv-0.18.0.tar.gz", "has_sig": false, "md5_digest": "e1395c7f9d00506ab77316eadeabcc78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19671, "upload_time": "2018-03-06T05:15:29", "upload_time_iso_8601": "2018-03-06T05:15:29.408489Z", "url": "https://files.pythonhosted.org/packages/3e/d0/cd562e887cea14a20b6037611159fc12a54269664c854d094b84e9adc6c8/rpmvenv-0.18.0.tar.gz", "yanked": false}], "0.19.0": [{"comment_text": "", "digests": {"md5": "0a888613a50b5d3e2e123f8528f312de", "sha256": "4fc6ea53958033a33f3f3fa01774571738ffd50a9b7e126359bef86947d5ade6"}, "downloads": -1, "filename": "rpmvenv-0.19.0.tar.gz", "has_sig": false, "md5_digest": "0a888613a50b5d3e2e123f8528f312de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19804, "upload_time": "2018-03-29T10:32:04", "upload_time_iso_8601": "2018-03-29T10:32:04.125747Z", "url": "https://files.pythonhosted.org/packages/96/81/fdd20ebe24890999c99e9ab85d859e5c94875ed12c02aec9b58c75bc1ae1/rpmvenv-0.19.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4cd3c1513ccb1dd8e00c983397c0234a", "sha256": "a7e8939b9af571372a06c845b931f44b6dd8af156504b6ff2e194bc0a23923cc"}, "downloads": -1, "filename": "rpmvenv-0.2.0.zip", "has_sig": false, "md5_digest": "4cd3c1513ccb1dd8e00c983397c0234a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17774, "upload_time": "2015-02-23T17:34:11", "upload_time_iso_8601": "2015-02-23T17:34:11.090027Z", "url": "https://files.pythonhosted.org/packages/98/b3/81b5b6b04caa5931ece8733747a1340a96bfc25bcd39460ed8f6c095217e/rpmvenv-0.2.0.zip", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "08694d0b454e813e82196d0696da2e97", "sha256": "5238dd6f164753db991a52247881b08dc2281a269ec48e69d907783562393ee3"}, "downloads": -1, "filename": "rpmvenv-0.2.1.zip", "has_sig": false, "md5_digest": "08694d0b454e813e82196d0696da2e97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17781, "upload_time": "2015-02-23T17:43:57", "upload_time_iso_8601": "2015-02-23T17:43:57.493523Z", "url": "https://files.pythonhosted.org/packages/05/62/78c61ef2afb0ae293e3d64e92e281666084e67434f60f6b80f0993721bdf/rpmvenv-0.2.1.zip", "yanked": false}], "0.20.0": [{"comment_text": "", "digests": {"md5": "d5fea0dc7d79298714e28bc3f88e1a63", "sha256": "fbde7e730b69ac7feaec2fab7dc45db767d1493d7dca50e8f0494a7a9dfa25e8"}, "downloads": -1, "filename": "rpmvenv-0.20.0.tar.gz", "has_sig": false, "md5_digest": "d5fea0dc7d79298714e28bc3f88e1a63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19809, "upload_time": "2018-05-08T13:20:26", "upload_time_iso_8601": "2018-05-08T13:20:26.355846Z", "url": "https://files.pythonhosted.org/packages/e3/2f/e8424afae74f6715c6fef27afff8918010b312b0014de2fb8c3670ca3a2a/rpmvenv-0.20.0.tar.gz", "yanked": false}], "0.21.0": [{"comment_text": "", "digests": {"md5": "e50d6f9be81b0cde35aeb9cb3a6e8e39", "sha256": "0dfb191afaee204d8695653d43dcbb7dad381135031fc7ea6a1a7730ea4a1c54"}, "downloads": -1, "filename": "rpmvenv-0.21.0.tar.gz", "has_sig": false, "md5_digest": "e50d6f9be81b0cde35aeb9cb3a6e8e39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16799, "upload_time": "2019-02-17T05:36:06", "upload_time_iso_8601": "2019-02-17T05:36:06.135224Z", "url": "https://files.pythonhosted.org/packages/9b/0b/e0404afcadeee7a57f784b6d008a3a9a52a17f13f49590d9c36a1a72b002/rpmvenv-0.21.0.tar.gz", "yanked": false}], "0.22.0": [{"comment_text": "", "digests": {"md5": "9dbb3d885910816ea0738802566a485d", "sha256": "17bad398403381bfdc48b80e1a3fc8f32d8938f8bcdc034a7239089119d0cac1"}, "downloads": -1, "filename": "rpmvenv-0.22.0.tar.gz", "has_sig": false, "md5_digest": "9dbb3d885910816ea0738802566a485d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17487, "upload_time": "2020-01-30T12:29:07", "upload_time_iso_8601": "2020-01-30T12:29:07.044762Z", "url": "https://files.pythonhosted.org/packages/3d/ff/f22824b1df017516fd4bc27223cf1ef866269073443756ad277107070a77/rpmvenv-0.22.0.tar.gz", "yanked": false}], "0.23.0": [{"comment_text": "", "digests": {"md5": "459a2d71c746833cc9afaa13b2cdbe70", "sha256": "b1a3d19037dc90d8c0ee4005bb24fd94363c689f66d25b7086fdf6af90cea2cf"}, "downloads": -1, "filename": "rpmvenv-0.23.0.tar.gz", "has_sig": false, "md5_digest": "459a2d71c746833cc9afaa13b2cdbe70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17500, "upload_time": "2020-02-15T01:55:49", "upload_time_iso_8601": "2020-02-15T01:55:49.003037Z", "url": "https://files.pythonhosted.org/packages/58/65/dcea438dc26a740590df5ce5d8258774d5d64eba2fabea680b0f01bb36e1/rpmvenv-0.23.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "9421e2177f1c83a3eae993aaf68295b2", "sha256": "7efb96d32a22c810040e465d42854b4d722331330b43733517c9f3b37671d7bd"}, "downloads": -1, "filename": "rpmvenv-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9421e2177f1c83a3eae993aaf68295b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9071, "upload_time": "2015-03-05T03:25:54", "upload_time_iso_8601": "2015-03-05T03:25:54.317327Z", "url": "https://files.pythonhosted.org/packages/00/25/324ef811465fcabc188493c30efc092f84faf7566d551ff754ed58fc0312/rpmvenv-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "66d6a38aa734eddeff4c16f8bf36a180", "sha256": "ee35f3e93ac36671fd81ca412740156bfbb32c0b9d28f34b695c1f01946d05a8"}, "downloads": -1, "filename": "rpmvenv-0.3.1.tar.gz", "has_sig": false, "md5_digest": "66d6a38aa734eddeff4c16f8bf36a180", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9076, "upload_time": "2015-03-05T03:32:38", "upload_time_iso_8601": "2015-03-05T03:32:38.507846Z", "url": "https://files.pythonhosted.org/packages/f6/e1/bb90360591030e4d9c9fa906c85c0c40da8b0b74be3300ccef67552e5a5a/rpmvenv-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "72f6009a8ad8ff17f842648039c9ae91", "sha256": "45f5fb28d0fa2bf950aa26a89f1091489939d3b95ceb2b42fa10b6577034e128"}, "downloads": -1, "filename": "rpmvenv-0.3.2.tar.gz", "has_sig": false, "md5_digest": "72f6009a8ad8ff17f842648039c9ae91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9043, "upload_time": "2015-03-05T03:58:35", "upload_time_iso_8601": "2015-03-05T03:58:35.111052Z", "url": "https://files.pythonhosted.org/packages/e8/c6/d47a9478fb01584aa92c0a32b92199f46b7878ecb9d37ce86ab7b2448989/rpmvenv-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "b6b5f5d8d04a9d0d67f19fe2c3e97eef", "sha256": "a3ef0a5ffed10d04cdc3d10d917218b3fc53b5e6f4d2aa78ae752e7929fb5fd8"}, "downloads": -1, "filename": "rpmvenv-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b6b5f5d8d04a9d0d67f19fe2c3e97eef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9197, "upload_time": "2015-03-05T22:05:23", "upload_time_iso_8601": "2015-03-05T22:05:23.097362Z", "url": "https://files.pythonhosted.org/packages/ec/be/f9527963395f874500b3d380b7317fc20236502f3a1fec0d759db70c8ce5/rpmvenv-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "6233957ff0f097a2aaf6fa7d63e2039e", "sha256": "5398ce1bf08e515e83b4c5a5c3c894a476c8e1a91b0ad14b06c373a5a02428ad"}, "downloads": -1, "filename": "rpmvenv-0.5.0.tar.gz", "has_sig": false, "md5_digest": "6233957ff0f097a2aaf6fa7d63e2039e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9649, "upload_time": "2015-03-06T13:42:55", "upload_time_iso_8601": "2015-03-06T13:42:55.555219Z", "url": "https://files.pythonhosted.org/packages/12/a6/fe633f7ef5d12dd04aeb8639138689bc6d3d20ada43b0862edf3fbfc3234/rpmvenv-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "2ce15c23e764f9b98215033b06c7dfce", "sha256": "4a5410b433d188918de95b1e20ec7d3b8968b010879778a06de2bc8037ca782b"}, "downloads": -1, "filename": "rpmvenv-0.6.0.tar.gz", "has_sig": false, "md5_digest": "2ce15c23e764f9b98215033b06c7dfce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10159, "upload_time": "2015-03-06T14:21:07", "upload_time_iso_8601": "2015-03-06T14:21:07.493313Z", "url": "https://files.pythonhosted.org/packages/7c/32/1a550a65e3da34d4e156cc536facc389fa5d83e377f24ee524b90cdab2e3/rpmvenv-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "ce5c5e63de79ce9b8a395cde2cbaee54", "sha256": "cc296026da837c5f4770999f1d5aec4cbdacaac7329840ba99d90cfac981e002"}, "downloads": -1, "filename": "rpmvenv-0.6.1.tar.gz", "has_sig": false, "md5_digest": "ce5c5e63de79ce9b8a395cde2cbaee54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10165, "upload_time": "2015-03-06T14:55:19", "upload_time_iso_8601": "2015-03-06T14:55:19.399384Z", "url": "https://files.pythonhosted.org/packages/c5/15/d9f08c4241d5dc938c41b520c4e8194c3917bac3d91e2c308adf92184df7/rpmvenv-0.6.1.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "faf3928c094c47683264962c25dee4cd", "sha256": "0e1e55dcf1cc7665d7cbb462e31c402eeeff63c4a6e1e505e1f05bf70c5ce778"}, "downloads": -1, "filename": "rpmvenv-0.8.0.tar.gz", "has_sig": false, "md5_digest": "faf3928c094c47683264962c25dee4cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12972, "upload_time": "2015-03-09T00:05:13", "upload_time_iso_8601": "2015-03-09T00:05:13.802955Z", "url": "https://files.pythonhosted.org/packages/26/d0/aff48f89478f85a9f9d00971cbcd66905124ff91765c92d20029f6fee235/rpmvenv-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "3f73e40609776f6c463a97fa8b1edac5", "sha256": "4875218abb41757edcc003652c83c5414a0cab2260e127384dee243b0a941de6"}, "downloads": -1, "filename": "rpmvenv-0.8.1.tar.gz", "has_sig": false, "md5_digest": "3f73e40609776f6c463a97fa8b1edac5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13106, "upload_time": "2015-03-29T04:31:29", "upload_time_iso_8601": "2015-03-29T04:31:29.117365Z", "url": "https://files.pythonhosted.org/packages/1e/5f/cac2a3434d95fcd0f11103901ff02ce979fd255dde0b5a3ffe94f473293a/rpmvenv-0.8.1.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "6309f62833da06bffcebbbf50a2ba968", "sha256": "73c153a07f31a175785aa58a4329553d69d22388722ea92f9d23032189c12eed"}, "downloads": -1, "filename": "rpmvenv-0.9.1.tar.gz", "has_sig": false, "md5_digest": "6309f62833da06bffcebbbf50a2ba968", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13754, "upload_time": "2015-03-29T05:52:06", "upload_time_iso_8601": "2015-03-29T05:52:06.156492Z", "url": "https://files.pythonhosted.org/packages/73/79/dd3ba81733275e8930a772b8f36aa2d705413f1cbe3cd8ba161ee0a38e35/rpmvenv-0.9.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "459a2d71c746833cc9afaa13b2cdbe70", "sha256": "b1a3d19037dc90d8c0ee4005bb24fd94363c689f66d25b7086fdf6af90cea2cf"}, "downloads": -1, "filename": "rpmvenv-0.23.0.tar.gz", "has_sig": false, "md5_digest": "459a2d71c746833cc9afaa13b2cdbe70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17500, "upload_time": "2020-02-15T01:55:49", "upload_time_iso_8601": "2020-02-15T01:55:49.003037Z", "url": "https://files.pythonhosted.org/packages/58/65/dcea438dc26a740590df5ce5d8258774d5d64eba2fabea680b0f01bb36e1/rpmvenv-0.23.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:51 2020"}