{"info": {"author": "Artem Mavrin", "author_email": "artemvmavrin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "===========================\nTrainable Initial State RNN\n===========================\n\n.. image:: https://img.shields.io/pypi/pyversions/trainable-initial-state-rnn\n    :target: https://pypi.org/project/trainable-initial-state-rnn\n    :alt: Python Version\n\n.. image:: https://img.shields.io/pypi/v/trainable-initial-state-rnn\n    :target: https://pypi.org/project/trainable-initial-state-rnn\n    :alt: PyPI Package Version\n\n.. image:: https://img.shields.io/github/last-commit/artemmavrin/trainable-initial-state-rnn/master\n    :target: https://github.com/artemmavrin/trainable-initial-state-rnn\n    :alt: Last Commit\n\n.. image:: https://github.com/artemmavrin/trainable-initial-state-rnn/workflows/Python%20package/badge.svg\n    :target: https://github.com/artemmavrin/trainable-initial-state-rnn/actions?query=workflow%3A%22Python+package%22\n    :alt: GitHub Actions Build Status\n\n.. image:: https://codecov.io/gh/artemmavrin/trainable-initial-state-rnn/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/artemmavrin/trainable-initial-state-rnn\n    :alt: Code Coverage\n\n.. image:: https://readthedocs.org/projects/trainable-initial-state-rnn/badge/?version=latest\n    :target: https://trainable-initial-state-rnn.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/github/license/artemmavrin/trainable-initial-state-rnn\n    :target: https://github.com/artemmavrin/trainable-initial-state-rnn/blob/master/LICENSE\n    :alt: License\n\nTreat the initial state(s) of TensorFlow Keras recurrent neural network (RNN)\nlayers as a parameter or parameters to be learned during training, as recommended in, e.g., [1]_.\n\nOrdinary RNNs use an all-zero initial state by default. Why not let the neural\nnetwork learn a smarter initial state?\n\nThe ``trainable-initial-state-rnn`` package provides a class\n``TrainableInitialStateRNN`` that can wrap any ``tf.keras`` RNN (or\nbidirectional RNN) and manage new initial state variables in addition to the\nRNN's weights.\n\nTypical usage looks as follows.\n\n.. code-block:: python\n\n    import tensorflow as tf\n    from trainable_initial_state_rnn import TrainableInitialStateRNN\n\n    base_rnn = tf.keras.layers.LSTM(256)\n    rnn = TrainableInitialStateRNN(base_rnn)  # Treats initial state as a variable!\n\n    model = tf.keras.Model(...)  # Use rnn like any other tf.keras layer in your model\n    model.compile(...)\n    history = model.fit(...)\n\nDocumentation is available at\n`Read the Docs <https://trainable-initial-state-rnn.readthedocs.io/en/latest/>`__.\n\nInstallation\n------------\n\n1.  Requirements:\n\n    * Python >= 3.7\n    * TensorFlow >= 2.1\n\n2.  The ``trainable_initial_state_rnn`` package can be installed using the\n    `pip <https://pip.pypa.io/en/stable/>`__ utility directly from the package's\n    `GitHub page <https://github.com/artemmavrin/trainable-initial-state-rnn>`__:\n\n    .. code-block:: bash\n\n        pip install git+https://github.com/artemmavrin/trainable-initial-state-rnn.git\n\n    Alternatively, install a recent release from the\n    `Python Package Index (PyPI) <https://pypi.org/project/trainable-initial-state-rnn>`__:\n\n    .. code-block:: bash\n\n        pip install trainable-initial-state-rnn\n\n    **Note.** To install the project for development (e.g., to make changes to\n    the source code), clone the project repository from GitHub and run\n    :code:`make dev`:\n\n    .. code-block:: bash\n\n        git clone https://github.com/artemmavrin/trainable-initial-state-rnn.git\n        cd trainable-initial-state-rnn\n        # Optional but recommended: create and activate a new Python virtual environment\n        make dev\n\n    This will additionally install the requirements needed\n    to run tests, check code coverage, and produce documentation.\n\nReferences\n----------\n\n.. [1] Felix A. Gers, Nicol N. Schraudolph, J\u00fcrgen Schmidhuber. Learning Precise\n    Timing with LSTM Recurrent Networks. Journal of Machine Learning Research 3\n    (2002) 115-143. (`Link <http://www.jmlr.org/papers/v3/gers02a.html>`__)\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/artemmavrin/trainable-initial-state-rnn", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "trainable-initial-state-rnn", "package_url": "https://pypi.org/project/trainable-initial-state-rnn/", "platform": "", "project_url": "https://pypi.org/project/trainable-initial-state-rnn/", "project_urls": {"Homepage": "https://github.com/artemmavrin/trainable-initial-state-rnn"}, "release_url": "https://pypi.org/project/trainable-initial-state-rnn/0.0.2/", "requires_dist": ["tensorflow (>=2.1)", "numpy ; extra == 'dev'", "pytest ; extra == 'dev'", "coverage ; extra == 'dev'", "sphinx ; extra == 'dev'", "sphinx-rtd-theme ; extra == 'dev'"], "requires_python": "", "summary": "TensorFlow Keras RNNs with trainable initial states", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/trainable-initial-state-rnn\" rel=\"nofollow\"><img alt=\"Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/692a803dadf199289b1c158ecb968ce42bdc57e3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f747261696e61626c652d696e697469616c2d73746174652d726e6e\"></a>\n<a href=\"https://pypi.org/project/trainable-initial-state-rnn\" rel=\"nofollow\"><img alt=\"PyPI Package Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8521a382c9cc35972b05da795e3c707098aacf18/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f747261696e61626c652d696e697469616c2d73746174652d726e6e\"></a>\n<a href=\"https://github.com/artemmavrin/trainable-initial-state-rnn\" rel=\"nofollow\"><img alt=\"Last Commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de34ba74987c8b5426801b9305e67f4b5c019227/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f617274656d6d617672696e2f747261696e61626c652d696e697469616c2d73746174652d726e6e2f6d6173746572\"></a>\n<a href=\"https://github.com/artemmavrin/trainable-initial-state-rnn/actions?query=workflow%3A%22Python+package%22\" rel=\"nofollow\"><img alt=\"GitHub Actions Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/813ed9414ae95095ccc8a99b5b6010249014546c/68747470733a2f2f6769746875622e636f6d2f617274656d6d617672696e2f747261696e61626c652d696e697469616c2d73746174652d726e6e2f776f726b666c6f77732f507974686f6e2532307061636b6167652f62616467652e737667\"></a>\n<a href=\"https://codecov.io/gh/artemmavrin/trainable-initial-state-rnn\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8ffe74f25d02589e9f52f873ab47190ff84f484/68747470733a2f2f636f6465636f762e696f2f67682f617274656d6d617672696e2f747261696e61626c652d696e697469616c2d73746174652d726e6e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://trainable-initial-state-rnn.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea66a51b32af31ce38630a83b8f23877b205b678/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f747261696e61626c652d696e697469616c2d73746174652d726e6e2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://github.com/artemmavrin/trainable-initial-state-rnn/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ba7f72c54718c888be50852e18708403a24eac5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f617274656d6d617672696e2f747261696e61626c652d696e697469616c2d73746174652d726e6e\"></a>\n<p>Treat the initial state(s) of TensorFlow Keras recurrent neural network (RNN)\nlayers as a parameter or parameters to be learned during training, as recommended in, e.g., <a href=\"#id2\" id=\"id1\" rel=\"nofollow\">[1]</a>.</p>\n<p>Ordinary RNNs use an all-zero initial state by default. Why not let the neural\nnetwork learn a smarter initial state?</p>\n<p>The <tt><span class=\"pre\">trainable-initial-state-rnn</span></tt> package provides a class\n<tt>TrainableInitialStateRNN</tt> that can wrap any <tt>tf.keras</tt> RNN (or\nbidirectional RNN) and manage new initial state variables in addition to the\nRNN\u2019s weights.</p>\n<p>Typical usage looks as follows.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">trainable_initial_state_rnn</span> <span class=\"kn\">import</span> <span class=\"n\">TrainableInitialStateRNN</span>\n\n<span class=\"n\">base_rnn</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">LSTM</span><span class=\"p\">(</span><span class=\"mi\">256</span><span class=\"p\">)</span>\n<span class=\"n\">rnn</span> <span class=\"o\">=</span> <span class=\"n\">TrainableInitialStateRNN</span><span class=\"p\">(</span><span class=\"n\">base_rnn</span><span class=\"p\">)</span>  <span class=\"c1\"># Treats initial state as a variable!</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>  <span class=\"c1\"># Use rnn like any other tf.keras layer in your model</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">history</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n</pre>\n<p>Documentation is available at\n<a href=\"https://trainable-initial-state-rnn.readthedocs.io/en/latest/\" rel=\"nofollow\">Read the Docs</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>Requirements:</p>\n<ul>\n<li>Python &gt;= 3.7</li>\n<li>TensorFlow &gt;= 2.1</li>\n</ul>\n</li>\n<li><p>The <tt>trainable_initial_state_rnn</tt> package can be installed using the\n<a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> utility directly from the package\u2019s\n<a href=\"https://github.com/artemmavrin/trainable-initial-state-rnn\" rel=\"nofollow\">GitHub page</a>:</p>\n<pre>pip install git+https://github.com/artemmavrin/trainable-initial-state-rnn.git\n</pre>\n<p>Alternatively, install a recent release from the\n<a href=\"https://pypi.org/project/trainable-initial-state-rnn\" rel=\"nofollow\">Python Package Index (PyPI)</a>:</p>\n<pre>pip install trainable-initial-state-rnn\n</pre>\n<p><strong>Note.</strong> To install the project for development (e.g., to make changes to\nthe source code), clone the project repository from GitHub and run\n<code>make dev</code>:</p>\n<pre>git clone https://github.com/artemmavrin/trainable-initial-state-rnn.git\n<span class=\"nb\">cd</span> trainable-initial-state-rnn\n<span class=\"c1\"># Optional but recommended: create and activate a new Python virtual environment\n</span>make dev\n</pre>\n<p>This will additionally install the requirements needed\nto run tests, check code coverage, and produce documentation.</p>\n</li>\n</ol>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<table id=\"id2\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td>Felix A. Gers, Nicol N. Schraudolph, J\u00fcrgen Schmidhuber. Learning Precise\nTiming with LSTM Recurrent Networks. Journal of Machine Learning Research 3\n(2002) 115-143. (<a href=\"http://www.jmlr.org/papers/v3/gers02a.html\" rel=\"nofollow\">Link</a>)</td></tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 6621387, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e4f376bcfb4aff6c99ca147eff98bcc5", "sha256": "9a0949759d14234147a5b505f036851d1baee85f9d4e5c3923927499861da2cc"}, "downloads": -1, "filename": "trainable_initial_state_rnn-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e4f376bcfb4aff6c99ca147eff98bcc5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10746, "upload_time": "2020-01-13T01:09:10", "upload_time_iso_8601": "2020-01-13T01:09:10.857541Z", "url": "https://files.pythonhosted.org/packages/9b/e4/eab33b89e3e7b9793a1fb239fea6f0c78c7867abc39552f09076a129c035/trainable_initial_state_rnn-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4958de4ac35e9c461aa10f520d51be7f", "sha256": "5de7e955314a437ddc9e000d5ec6518b0e30d8738490c3f7f6e0c286c2020ee8"}, "downloads": -1, "filename": "trainable-initial-state-rnn-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4958de4ac35e9c461aa10f520d51be7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6307, "upload_time": "2020-01-13T01:09:13", "upload_time_iso_8601": "2020-01-13T01:09:13.170609Z", "url": "https://files.pythonhosted.org/packages/25/ff/31209664f53a605099fb80176a29d494528118003de628c83614e229a76f/trainable-initial-state-rnn-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a355d00dd470c85a6bb3cdb71d717e37", "sha256": "29008f6330c646844824d82ad97f70468503961c8dbaa3c636029dd807f692c0"}, "downloads": -1, "filename": "trainable_initial_state_rnn-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a355d00dd470c85a6bb3cdb71d717e37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10782, "upload_time": "2020-02-13T06:05:41", "upload_time_iso_8601": "2020-02-13T06:05:41.200466Z", "url": "https://files.pythonhosted.org/packages/78/28/638f447c248100fd8d352465faa61b87c508fb36bc0053b6668167930462/trainable_initial_state_rnn-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a1f5175b0a6e42f2a86926b5983005f", "sha256": "aea2e164ae24ba98fc00429a55c0ccc0e570f73e416aeef86a6dc3a90ba609f4"}, "downloads": -1, "filename": "trainable-initial-state-rnn-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9a1f5175b0a6e42f2a86926b5983005f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6246, "upload_time": "2020-02-13T06:05:43", "upload_time_iso_8601": "2020-02-13T06:05:43.245281Z", "url": "https://files.pythonhosted.org/packages/47/96/ce1c5fec2d1cb4248e9a91d70ebcfb9f8bd84ef33360136017d86807ad50/trainable-initial-state-rnn-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a355d00dd470c85a6bb3cdb71d717e37", "sha256": "29008f6330c646844824d82ad97f70468503961c8dbaa3c636029dd807f692c0"}, "downloads": -1, "filename": "trainable_initial_state_rnn-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a355d00dd470c85a6bb3cdb71d717e37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10782, "upload_time": "2020-02-13T06:05:41", "upload_time_iso_8601": "2020-02-13T06:05:41.200466Z", "url": "https://files.pythonhosted.org/packages/78/28/638f447c248100fd8d352465faa61b87c508fb36bc0053b6668167930462/trainable_initial_state_rnn-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a1f5175b0a6e42f2a86926b5983005f", "sha256": "aea2e164ae24ba98fc00429a55c0ccc0e570f73e416aeef86a6dc3a90ba609f4"}, "downloads": -1, "filename": "trainable-initial-state-rnn-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9a1f5175b0a6e42f2a86926b5983005f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6246, "upload_time": "2020-02-13T06:05:43", "upload_time_iso_8601": "2020-02-13T06:05:43.245281Z", "url": "https://files.pythonhosted.org/packages/47/96/ce1c5fec2d1cb4248e9a91d70ebcfb9f8bd84ef33360136017d86807ad50/trainable-initial-state-rnn-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:48:34 2020"}