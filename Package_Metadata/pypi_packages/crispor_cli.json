{"info": {"author": "Kailash Yadav", "author_email": "kailash.yadav@elucidata.io", "bugtrack_url": null, "classifiers": [], "description": "# CRISPOR - a CRISPR/Cas9 assistant \n\nCRISPOR predicts off-targets in the genome, ranks guides, highlights\nproblematic guides, designs primers and helps with cloning.  Try it on\nhttp://crispr.org\n\nCRISPOR uses BWA, a few tools from the UCSC Genome Browser (twoBitToFa, bedClip),\nvarious R packages and a huge collection of external packages and source code files\nfrom published articles, see the file crisporEffScores.py for the exact references.\n\nInstallation of the package:\n\n    make crispor_env\n\n    source crispor_env/bin/activate\n\n    make devbuild\n\nInstall required R libraries:\n   \n    sudo Rscript -e 'install.packages(c(\"e1071\"),  repos=\"http://cran.rstudio.com/\")'\n    sudo Rscript -e 'source(\"https://bioconductor.org/biocLite.R\"); biocLite(c(\"limma\"));'\n\nNow in a python console type this:\n\n    from crispor_cli import crispor\n    \n    crispor.main(args,options)\n\nDescription for args and options is given below:\n  args=[<genome_name>,<input_fasta>,<output_file>]\nHere args is a list containing org,fastaInFile and guideOutFile in this order:\n  Example args -\n    args=['sacCer3','/input/guide_yeast.fasta','/output/yo_guide.tsv']\n\nAnd options is a dictionary containing all the extra options permitted by crispor.\n  Example options - \n    options = {'offtargetFname':'/output/yo_off.tsv','pam':'NGG','debug':True,'skipAlign':True}\n\nHere are the keys that can be added to options dictionary-\n\nOptions:\n  debug      -     show debug messages, do not delete temp directory\n  test      -      run internal tests\n  pam    -              PAM-motif to use, default NGG. TTTN triggers special\n                        Cpf1 behavior: no scores anymore + the PAM is assumed\n                        to be 5' of the guide. Common PAMs are:\n                        NGG,TTTN,NGA,NGCG,NNAGAA,NGGNG,NNGRRT,NNNNGMTT,NNNNACA\n  offtargetFname - \n                        write offtarget info to this filename\n  maxOcc - \n                        MAXOCC parameter, guides with more matches are\n                        excluded\n\n  mismatches-\n                         maximum number of mismatches, default 4\n  \n  skipAlign  -\n                        do not align the input sequence. The on-target will be\n                        a random match with 0 mismatches.\n  noEffScores -\n                        do not calculate the efficiency scores\n  minAltPamScore -\n                        minimum MIT off-target score for alternative PAMs, default\n                        1.0\n  genomeDir-\n                        directory with genomes, default ./genomes\n```\n    \n\n# Licenses\n\nIncluded software:\n\n* BWA is under GPL3\n* libSVM: under copyright by Chih-Chung Chang and Chih-Jen Lin see http://www.csie.ntu.edu.tw/~cjlin/libsvm/COPYRIGHT\n* svmlight: free for non-commercial use, see http://svmlight.joachims.org/\n* SSC: no license specified\n* primer3: GPL2.\n* Fusi/Doench score: see LICENSE.txt, (c) by Microsoft Research\n* crispor.py and crisporEffScores.py themselves are released under GPLv3, see LICENSE.txt", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ElucidataInc/crispor-cli", "keywords": null, "license": "The source code in crispor.py and crisporEffScores.py (\"the code\") is under\ncopyright by Maximilian Haeussler maximilianh@gmail.com (\"the author\").\n\nStarting with version 4, the the file crispor.py can be used freely\nby academic researchers. These researchers may also modify the code and\nredistribute it, provided this license file is included. Please feed back\nmodifications to the author.\n\nCommercial and non-profit organisations need to contact the author to\nobtain a license to run the file crispor.py or crisporEffScores.py on \ntheir own computer. Most non-profit organisations will be able to obtain a\nlicense at no cost. The license for commercial users includes support \nfrom the author and regular updates.\n\nAll organisations can use the website crispor.org for free.\n\nIf you think these license terms make distribution of the code difficult,\nplease do not hesitate to contact the author.\n\n-- \n\nUp to and including version 3.1, the source code files crisporEffScores.py and\ncrispor.py were licensed under GPLv3. See\nhttp://www.gnu.org/licenses/gpl-3.0.en.html\n\nCode in bin/ is under the license of the respective authors and only provided\nas part of this package for installation convenience. Please see the\ndirectories under bin/src for the exact licenses.", "maintainer": null, "maintainer_email": null, "name": "crispor_cli", "package_url": "https://pypi.org/project/crispor_cli/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/crispor_cli/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ElucidataInc/crispor-cli"}, "release_url": "https://pypi.org/project/crispor_cli/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Command line tool for crispr offtarget finding extracted from crispor website", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # CRISPOR - a CRISPR/Cas9 assistant <br><br>CRISPOR predicts off-targets in the genome, ranks guides, highlights<br>problematic guides, designs primers and helps with cloning.  Try it on<br>http://crispr.org<br><br>CRISPOR uses BWA, a few tools from the UCSC Genome Browser (twoBitToFa, bedClip),<br>various R packages and a huge collection of external packages and source code files<br>from published articles, see the file crisporEffScores.py for the exact references.<br><br>Installation of the package:<br><br>    make crispor_env<br><br>    source crispor_env/bin/activate<br><br>    make devbuild<br><br>Install required R libraries:<br>   <br>    sudo Rscript -e 'install.packages(c(\"e1071\"),  repos=\"http://cran.rstudio.com/\")'<br>    sudo Rscript -e 'source(\"https://bioconductor.org/biocLite.R\"); biocLite(c(\"limma\"));'<br><br>Now in a python console type this:<br><br>    from crispor_cli import crispor<br>    <br>    crispor.main(args,options)<br><br>Description for args and options is given below:<br>  args=[&lt;genome_name&gt;,&lt;input_fasta&gt;,&lt;output_file&gt;]<br>Here args is a list containing org,fastaInFile and guideOutFile in this order:<br>  Example args -<br>    args=['sacCer3','/input/guide_yeast.fasta','/output/yo_guide.tsv']<br><br>And options is a dictionary containing all the extra options permitted by crispor.<br>  Example options - <br>    options = {'offtargetFname':'/output/yo_off.tsv','pam':'NGG','debug':True,'skipAlign':True}<br><br>Here are the keys that can be added to options dictionary-<br><br>Options:<br>  debug      -     show debug messages, do not delete temp directory<br>  test      -      run internal tests<br>  pam    -              PAM-motif to use, default NGG. TTTN triggers special<br>                        Cpf1 behavior: no scores anymore + the PAM is assumed<br>                        to be 5' of the guide. Common PAMs are:<br>                        NGG,TTTN,NGA,NGCG,NNAGAA,NGGNG,NNGRRT,NNNNGMTT,NNNNACA<br>  offtargetFname - <br>                        write offtarget info to this filename<br>  maxOcc - <br>                        MAXOCC parameter, guides with more matches are<br>                        excluded<br><br>  mismatches-<br>                         maximum number of mismatches, default 4<br>  <br>  skipAlign  -<br>                        do not align the input sequence. The on-target will be<br>                        a random match with 0 mismatches.<br>  noEffScores -<br>                        do not calculate the efficiency scores<br>  minAltPamScore -<br>                        minimum MIT off-target score for alternative PAMs, default<br>                        1.0<br>  genomeDir-<br>                        directory with genomes, default ./genomes<br>```<br>    <br><br># Licenses<br><br>Included software:<br><br>* BWA is under GPL3<br>* libSVM: under copyright by Chih-Chung Chang and Chih-Jen Lin see http://www.csie.ntu.edu.tw/~cjlin/libsvm/COPYRIGHT<br>* svmlight: free for non-commercial use, see http://svmlight.joachims.org/<br>* SSC: no license specified<br>* primer3: GPL2.<br>* Fusi/Doench score: see LICENSE.txt, (c) by Microsoft Research<br>* crispor.py and crisporEffScores.py themselves are released under GPLv3, see LICENSE.txt\n          </div>"}, "last_serial": 2798780, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "8685f3d1cfd458d50e5c643b85677665", "sha256": "01be0d2bf154c00196ef1988f62aa2111ea682825843117da45fe44f85e7ecdd"}, "downloads": -1, "filename": "crispor_cli-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8685f3d1cfd458d50e5c643b85677665", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48191, "upload_time": "2017-04-12T12:34:44", "upload_time_iso_8601": "2017-04-12T12:34:44.460613Z", "url": "https://files.pythonhosted.org/packages/43/9b/ed88ec010a9ca900e16419ce9f230c8286162c0be9c35372ff78d75f665d/crispor_cli-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8685f3d1cfd458d50e5c643b85677665", "sha256": "01be0d2bf154c00196ef1988f62aa2111ea682825843117da45fe44f85e7ecdd"}, "downloads": -1, "filename": "crispor_cli-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8685f3d1cfd458d50e5c643b85677665", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48191, "upload_time": "2017-04-12T12:34:44", "upload_time_iso_8601": "2017-04-12T12:34:44.460613Z", "url": "https://files.pythonhosted.org/packages/43/9b/ed88ec010a9ca900e16419ce9f230c8286162c0be9c35372ff78d75f665d/crispor_cli-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:17 2020"}