{"info": {"author": "Equinox Fitness", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.6"], "description": "MSSQL Runner\n============\n\n.. image:: https://badge.fury.io/py/mssql-runner.svg\n    :target: https://badge.fury.io/py/mssql-runner\n    :alt: PyPI Version\n\n.. image:: https://readthedocs.org/projects/mssql-runner/badge/?version=latest\n    :target: https://mssql-runner.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg\n    :target: https://github.com/equinoxfitness/datacoco-email_tools/blob/master/CODE_OF_CONDUCT.rst\n    :alt: Code of Conduct\n\nMSSQL Runner provides a way of running MSSQL script with a set of parameters for ETL usage\n\nInstallation\n------------\n\nMSSQL Runner requires Python 3.6+\n\n::\n\n    python3 -m venv <virtual env name>\n    source <virtual env name>/bin/activate\n    pip install mssql-runner\n\nQuickstart\n----------\n\nThere are three types of substitution parameters that can be used through mssql runner.  The first is a set of standard etl params for ease of use:\n\n*  -f, from_date, default 1776-07-24\n*  -t,to_date, default 9999-12-31\n*  -b, batch_no, default is -1\n\nThe second option is for arbitrary variable expansion.  This is passed in the following format because rundeck commands don't like json quotes:\n\n*  -p, example: -p \"param1-val1, param2-val2\"\n\nThe final option is to use the batchy integration\n\n*  -wf, batchy_job, this will substitue parameters from a batchy workflow, this should be a fully qualified batchy job name of the format wf.job, if no job is specified it will assume global\n\nYou also have the option to choose which config provider to use.\n\n*  -conf, config, default core\n\nDatacoco Core - This is default config provider which is looking for a file called etl.cfg in your project root.\n\netl.cfg folder structure\n\n```\n[sample]\ndb_name=local\nuser=user\nserver=server\npassword=XXXX\nport=1433\ntype=mssql\n```\n\nSecret Manager - Using this option assumes that you already have secret manager setup in your aws account and as aws key and secret is configured in your environment for you to connect to aws.\n\nHere's example how to use secret manager config option\n*  -conf secret_manager --secret_project_name <your_project> --secret_team <your_team>\n\n\nHere is a sample SQL Script.  If run in SQL workbench you will be prompted for values for var1 and var2.\n\n::\n\n    drop table if exists  zzztemp;\n\n    create table zzztemp (\n    dt timestamp,\n    var varchar,\n    from_date timestamp,\n    batch_no integer\n    );\n\n    insert into zzztemp\n    values (getdate(), '$[?var1]', '$[?from_date]', '$[?batch_no]');\n\n    insert into zzztemp\n    values (getdate(), '$[?var2]', '$[?from_date]', '$[?batch_no]');\n\n    select * from zzztemp;\n\n\nIn mssql runner you would use the following params to substitute that value.  It is assumed these params would be dynamically substituted by the calling script or informatica process:\n\n``python -m mssql_runner.module -s \"sample/mssql_runner_test.sql\" -p \"var1-cat, var2-dog\" -b '9999'``\n\nAssuming you had workflow config in batchy under wf3, you could also use this script:\n\n``python -m  mssql_runner.module -s sample/mssql_runner_test.sql -wf wf3``\n\n\nDevelopment\n-----------\n\nGetting Started\n~~~~~~~~~~~~~~~\n\nIt is recommended to use the steps below to set up a virtual environment for development:\n\n::\n\n    python3 -m venv <virtual env name>\n    source <virtual env name>/bin/activate\n    pip install -r requirements.txt\n\nTesting\n~~~~~~~\n\n::\n\n    pip install -r requirements-dev.txt\n\nTo run the testing suite, simply run the command: ``tox`` or ``python -m unittest discover tests``\n\nContributing\n------------\n\nContributions to mssql\\_runner are welcome!\n\nPlease reference guidelines to help with setting up your development\nenvironment\n`here <https://github.com/equinoxfitness/mssql-runner/blob/master/CONTRIBUTING.rst>`__.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mssql-runner", "package_url": "https://pypi.org/project/mssql-runner/", "platform": "", "project_url": "https://pypi.org/project/mssql-runner/", "project_urls": null, "release_url": "https://pypi.org/project/mssql-runner/0.1.6/", "requires_dist": null, "requires_python": "", "summary": "MSSQL runner by Equinox", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/mssql-runner\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/516c2d30c90c49511fe0f1eaf76da0e8234c9fcc/68747470733a2f2f62616467652e667572792e696f2f70792f6d7373716c2d72756e6e65722e737667\"></a>\n<a href=\"https://mssql-runner.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62576c6d3441701bdd15a0ca17e47a9053b74a3e/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6d7373716c2d72756e6e65722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://github.com/equinoxfitness/datacoco-email_tools/blob/master/CODE_OF_CONDUCT.rst\" rel=\"nofollow\"><img alt=\"Code of Conduct\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/591d3b135d63fd7f255a3a299d1936e697eaaf27/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6e7472696275746f72253230436f76656e616e742d76322e3025323061646f707465642d6666363962342e737667\"></a>\n<p>MSSQL Runner provides a way of running MSSQL script with a set of parameters for ETL usage</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>MSSQL Runner requires Python 3.6+</p>\n<pre>python3 -m venv &lt;virtual env name&gt;\nsource &lt;virtual env name&gt;/bin/activate\npip install mssql-runner\n</pre>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>There are three types of substitution parameters that can be used through mssql runner.  The first is a set of standard etl params for ease of use:</p>\n<ul>\n<li>-f, from_date, default 1776-07-24</li>\n<li>-t,to_date, default 9999-12-31</li>\n<li>-b, batch_no, default is -1</li>\n</ul>\n<p>The second option is for arbitrary variable expansion.  This is passed in the following format because rundeck commands don\u2019t like json quotes:</p>\n<ul>\n<li>-p, example: -p \u201cparam1-val1, param2-val2\u201d</li>\n</ul>\n<p>The final option is to use the batchy integration</p>\n<ul>\n<li>-wf, batchy_job, this will substitue parameters from a batchy workflow, this should be a fully qualified batchy job name of the format wf.job, if no job is specified it will assume global</li>\n</ul>\n<p>You also have the option to choose which config provider to use.</p>\n<ul>\n<li>-conf, config, default core</li>\n</ul>\n<p>Datacoco Core - This is default config provider which is looking for a file called etl.cfg in your project root.</p>\n<p>etl.cfg folder structure</p>\n<p><tt>`\n[sample]\ndb_name=local\nuser=user\nserver=server\npassword=XXXX\nport=1433\ntype=mssql\n`</tt></p>\n<p>Secret Manager - Using this option assumes that you already have secret manager setup in your aws account and as aws key and secret is configured in your environment for you to connect to aws.</p>\n<p>Here\u2019s example how to use secret manager config option\n*  -conf secret_manager \u2013secret_project_name &lt;your_project&gt; \u2013secret_team &lt;your_team&gt;</p>\n<p>Here is a sample SQL Script.  If run in SQL workbench you will be prompted for values for var1 and var2.</p>\n<pre>drop table if exists  zzztemp;\n\ncreate table zzztemp (\ndt timestamp,\nvar varchar,\nfrom_date timestamp,\nbatch_no integer\n);\n\ninsert into zzztemp\nvalues (getdate(), '$[?var1]', '$[?from_date]', '$[?batch_no]');\n\ninsert into zzztemp\nvalues (getdate(), '$[?var2]', '$[?from_date]', '$[?batch_no]');\n\nselect * from zzztemp;\n</pre>\n<p>In mssql runner you would use the following params to substitute that value.  It is assumed these params would be dynamically substituted by the calling script or informatica process:</p>\n<p><tt>python <span class=\"pre\">-m</span> mssql_runner.module <span class=\"pre\">-s</span> \"sample/mssql_runner_test.sql\" <span class=\"pre\">-p</span> <span class=\"pre\">\"var1-cat,</span> <span class=\"pre\">var2-dog\"</span> <span class=\"pre\">-b</span> '9999'</tt></p>\n<p>Assuming you had workflow config in batchy under wf3, you could also use this script:</p>\n<p><tt>python <span class=\"pre\">-m</span>\u00a0 mssql_runner.module <span class=\"pre\">-s</span> sample/mssql_runner_test.sql <span class=\"pre\">-wf</span> wf3</tt></p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<div id=\"getting-started\">\n<h3>Getting Started</h3>\n<p>It is recommended to use the steps below to set up a virtual environment for development:</p>\n<pre>python3 -m venv &lt;virtual env name&gt;\nsource &lt;virtual env name&gt;/bin/activate\npip install -r requirements.txt\n</pre>\n</div>\n<div id=\"testing\">\n<h3>Testing</h3>\n<pre>pip install -r requirements-dev.txt\n</pre>\n<p>To run the testing suite, simply run the command: <tt>tox</tt> or <tt>python <span class=\"pre\">-m</span> unittest discover tests</tt></p>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions to mssql_runner are welcome!</p>\n<p>Please reference guidelines to help with setting up your development\nenvironment\n<a href=\"https://github.com/equinoxfitness/mssql-runner/blob/master/CONTRIBUTING.rst\" rel=\"nofollow\">here</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6978061, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "36071e83abc92c1effe7140704939d2a", "sha256": "f8dd495d6ace775e4508e2550e17611082a4254c9329e5ef2d3729b1c8ea485b"}, "downloads": -1, "filename": "mssql_runner-0.1.0.tar.gz", "has_sig": false, "md5_digest": "36071e83abc92c1effe7140704939d2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5185, "upload_time": "2020-03-11T07:04:34", "upload_time_iso_8601": "2020-03-11T07:04:34.592299Z", "url": "https://files.pythonhosted.org/packages/55/a9/fd9dcbdbdc8957bdc63807f174dfbaaae186eacd1ada06386bd7b5af5031/mssql_runner-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e57844f05db526756370aef86ad422e9", "sha256": "49f7243c4c592cda5ef8ef523c8eb1916de039f4e5157875a39c4af05f1c83b8"}, "downloads": -1, "filename": "mssql_runner-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e57844f05db526756370aef86ad422e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5360, "upload_time": "2020-03-17T07:41:13", "upload_time_iso_8601": "2020-03-17T07:41:13.838358Z", "url": "https://files.pythonhosted.org/packages/85/aa/9978784964bf0c137c61fc41b22d63606745ea906b4097dab70c4fc7fc52/mssql_runner-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b30c522b11b52273ebc56fcf33ec8dfe", "sha256": "d598d5ca16b1854816edcdf0a2f952b252c38386ec9924ec02898a8c413d6969"}, "downloads": -1, "filename": "mssql_runner-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b30c522b11b52273ebc56fcf33ec8dfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5428, "upload_time": "2020-03-17T12:51:10", "upload_time_iso_8601": "2020-03-17T12:51:10.654093Z", "url": "https://files.pythonhosted.org/packages/7e/96/f39566aec384bad835a84848cbfb8002a474e4896addc6504d3979a48689/mssql_runner-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "7ac235019e213fe699c268f99eb69e09", "sha256": "3c43787a8af1b1fc730187de7e6c0897ee121dae56cc217cfb00e68462ef5e31"}, "downloads": -1, "filename": "mssql_runner-0.1.3.tar.gz", "has_sig": false, "md5_digest": "7ac235019e213fe699c268f99eb69e09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5825, "upload_time": "2020-03-18T15:51:13", "upload_time_iso_8601": "2020-03-18T15:51:13.605906Z", "url": "https://files.pythonhosted.org/packages/6d/ce/861cde2569f3826ee2af7548b9594dc33e233dbf8c8749bfde81730c4358/mssql_runner-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "f82965a2e6281628b58a505c60af3bf3", "sha256": "21919531a28240ed4cecea9d8d05cf9ef8c257725dbff957bd537195909a4ed6"}, "downloads": -1, "filename": "mssql_runner-0.1.4.tar.gz", "has_sig": false, "md5_digest": "f82965a2e6281628b58a505c60af3bf3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5826, "upload_time": "2020-03-19T15:21:11", "upload_time_iso_8601": "2020-03-19T15:21:11.557120Z", "url": "https://files.pythonhosted.org/packages/d8/a9/93ad0893978e2a01421f40c93f0e119fe522460b71e7646d89cbb4e0d3c7/mssql_runner-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "c61d349f7cc4b770f20815d18abedb36", "sha256": "1cfa689439b090e900dd4ffc8bc863b0889461070255827a66956374b982f068"}, "downloads": -1, "filename": "mssql_runner-0.1.5.tar.gz", "has_sig": false, "md5_digest": "c61d349f7cc4b770f20815d18abedb36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5867, "upload_time": "2020-03-20T12:41:14", "upload_time_iso_8601": "2020-03-20T12:41:14.697387Z", "url": "https://files.pythonhosted.org/packages/cb/e2/18aca5046c83f857b3389671aaf1dcb93e77c4c4d63f72004dbf74c41211/mssql_runner-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "6207a7f0fb1ce59a2c835278181f4095", "sha256": "b1de37984702c3c5834607a13d6b80dbfa9b5371606671eafbf91aac6fa7ca7c"}, "downloads": -1, "filename": "mssql_runner-0.1.6.tar.gz", "has_sig": false, "md5_digest": "6207a7f0fb1ce59a2c835278181f4095", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5870, "upload_time": "2020-04-08T14:09:40", "upload_time_iso_8601": "2020-04-08T14:09:40.133198Z", "url": "https://files.pythonhosted.org/packages/3a/4f/c280d7191abe5e43ea5097f39143da792c4e7bb407cf977d46175438a593/mssql_runner-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6207a7f0fb1ce59a2c835278181f4095", "sha256": "b1de37984702c3c5834607a13d6b80dbfa9b5371606671eafbf91aac6fa7ca7c"}, "downloads": -1, "filename": "mssql_runner-0.1.6.tar.gz", "has_sig": false, "md5_digest": "6207a7f0fb1ce59a2c835278181f4095", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5870, "upload_time": "2020-04-08T14:09:40", "upload_time_iso_8601": "2020-04-08T14:09:40.133198Z", "url": "https://files.pythonhosted.org/packages/3a/4f/c280d7191abe5e43ea5097f39143da792c4e7bb407cf977d46175438a593/mssql_runner-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:47 2020"}