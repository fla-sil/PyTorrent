{"info": {"author": "Canisback", "author_email": "canisback@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Pantheon\n\n[![PyPi](https://img.shields.io/pypi/v/pantheon)](https://pypi.org/project/pantheon/)\n[![Build Status](https://travis-ci.com/Canisback/pantheon.svg?branch=master)](https://travis-ci.com/Canisback/pantheon)\n[![codecov](https://codecov.io/gh/Canisback/pantheon/branch/master/graph/badge.svg)](https://codecov.io/gh/Canisback/pantheon)\n[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/Canisback/pantheon.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/Canisback/pantheon/context:python)\n[![Downloads](https://pepy.tech/badge/pantheon)](https://pepy.tech/project/pantheon)\n\nSimple library to use the Riot API with Python Asyncio.\n\nSupports all endpoints except static data and the tournaments ones (and matchs by tournament code).\n\nIt has an efficient rate limiting system as well as an error handler that automatically resend request on when needed.\n\n**There is no cache implemented for now**\n\n**The rate limit count is only kept while the script is alive**\n\nCurrently supported requests : \n * champion masteries by summonerId -> getChampionMasteries(summonerId)\n * champion masteries by summonerId and championId -> getChampionMasteriesByChampionId(summonerId,championId)\n * champion masteries score by summonerId -> getChampionMasteriesScore(summonerId)\n * champion rotations -> getChampionRotations()\n * league by leagueId -> getLeagueById(leagueId)\n * league pages by queue, rank and tier -> getLeaguePage(queue, tier, division, page=1)\n * league position by summonerId -> getLeaguePosition(summonerId)\n * challenger league by queue (optional) -> getChallengerLeague(queue)\n * lol status -> getStatus()\n * master league by queue (optional) -> getMasterLeague(queue)\n * match by matchId -> getMatch(matchId)\n * match timeline by matchId -> getTimeline(matchId)\n * matchlist by accountId (with parameters) -> getMatchlist(self, accountId, params) / params={\"queue\":420,\"season\":11}\n * current game by summonerId -> getCurrentGame(summonerId)\n * summoner by summonerId -> getSummoner(summonerId)\n * summoner by accountId -> getSummonerByAccountId(accountId)\n * summoner by name -> getSummonerByName(name)\n * third party code by summonerId -> getThirdPartyCode(summonerId)\n * register provider -> registerProvider(region, callback_url, stub=False)\n * register tournament -> registerTournament(providerId, name, stub=False)\n * create tournament code -> createTournamentCode(tournamentId, data, nb_codes=1, stub=False)\n * get lobby events by tournament code -> getLobbyEvents(tournamentCode, stub=False)\n\nFurther requests supported and documentation (hopefully) incoming\n\nTo install, run\n```\npip install pantheon\nor\npip3 install pantheon\n```\n\nor you can download it and run \n\n```\npython setup.py install\nor\npython3 setup.py install\n```\n\nAn example of usage to get details on the last 10 games : \n\n```python\nfrom pantheon import pantheon\nimport asyncio\n\nserver = \"euw1\"\napi_key = \"RGAPI-XXXX\"\n\ndef requestsLog(url, status, headers):\n    print(url)\n    print(status)\n    print(headers)\n\npanth = pantheon.Pantheon(server, api_key, errorHandling=True, requestsLoggingFunction=requestsLog, debug=True)\n\nasync def getSummonerId(name):\n    try:\n        data = await panth.getSummonerByName(name)\n        return (data['id'],data['accountId'])\n    except Exception as e:\n        print(e)\n\n\nasync def getRecentMatchlist(accountId):\n    try:\n        data = await panth.getMatchlist(accountId, params={\"endIndex\":10})\n        return data\n    except Exception as e:\n        print(e)\n\nasync def getRecentMatches(accountId):\n    try:\n        matchlist = await getRecentMatchlist(accountId)\n        tasks = [panth.getMatch(match['gameId']) for match in matchlist['matches']]\n        return await asyncio.gather(*tasks)\n    except Exception as e:\n        print(e)\n\n\nname = \"Canisback\"\n\nloop = asyncio.get_event_loop()  \n\n(summonerId, accountId) = loop.run_until_complete(getSummonerId(name))\nprint(summonerId)\nprint(accountId)\nprint(loop.run_until_complete(getRecentMatches(accountId)))\n```\n\n\n**Changelog :**\n\n * 1.0.12 : \n     * Add support for Clash API\n\n * 1.0.9 : \n     * Clean up some code\n\n * 1.0.8 : \n     * Clean up some code and upgrading for CI\n\n * 1.0.7 : \n     * Added TFT API endpoints\n     * Added unit tests covering almost all endpoints, rate limiter not unit tested yet\n\n * 1.0.6 : \n     * Fixed 415 errors\n\n * 1.0.5 : \n     * Updated League endpoints to match with current version\n     * Added tournament endpoints (stub ones)\n\n * 1.0.4 : \n     * Added 408 error code\n\n * 1.0.3 : \n     * Updated for v4 endpoints\n\n * 1.0.2 : \n     * Added new getChampionRotations endpoint support\n     * Deleted getChampions and getChampionsById due to deprecation of corresponding endpoints\n     * Fixed the getTimestamp function for the case when the Date header is missing\n\n * 1.0.1 : \n     * Added a debug flag, while set at True, some messages will be printed, when the rate limiter make a request waiting because limit is reached, or when retrying after an error.\n     * Added callback function for logging purpose.\n     * Changed error 429 handling (rate limit) so it retries after the value sent in header\n     * Added support for list in matchlist params (you can pass {\"queue\":[420,440]}\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Canisback/pantheon", "keywords": "Riot API,python", "license": "", "maintainer": "", "maintainer_email": "", "name": "pantheon", "package_url": "https://pypi.org/project/pantheon/", "platform": "", "project_url": "https://pypi.org/project/pantheon/", "project_urls": {"Homepage": "https://github.com/Canisback/pantheon"}, "release_url": "https://pypi.org/project/pantheon/1.0.12/", "requires_dist": ["asyncio", "aiohttp"], "requires_python": "", "summary": "Riot API library for Python and asyncio", "version": "1.0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pantheon</h1>\n<p><a href=\"https://pypi.org/project/pantheon/\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c914ee2fb35de3f5c4b128c456a3fc2637a8ea5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70616e7468656f6e\"></a>\n<a href=\"https://travis-ci.com/Canisback/pantheon\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43d1bdee3f061687aab394797ca104a7cdae12bc/68747470733a2f2f7472617669732d63692e636f6d2f43616e69736261636b2f70616e7468656f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/Canisback/pantheon\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/144c0c54b76c6211147d8dcaa6303608aee97d15/68747470733a2f2f636f6465636f762e696f2f67682f43616e69736261636b2f70616e7468656f6e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://lgtm.com/projects/g/Canisback/pantheon/context:python\" rel=\"nofollow\"><img alt=\"Language grade: Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd59870574bbd76d0b5bec3c5f7a80c13c56a2a2/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f707974686f6e2f672f43616e69736261636b2f70616e7468656f6e2e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138\"></a>\n<a href=\"https://pepy.tech/project/pantheon\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/309e3080409166e5365f81a47d19a356203381c1/68747470733a2f2f706570792e746563682f62616467652f70616e7468656f6e\"></a></p>\n<p>Simple library to use the Riot API with Python Asyncio.</p>\n<p>Supports all endpoints except static data and the tournaments ones (and matchs by tournament code).</p>\n<p>It has an efficient rate limiting system as well as an error handler that automatically resend request on when needed.</p>\n<p><strong>There is no cache implemented for now</strong></p>\n<p><strong>The rate limit count is only kept while the script is alive</strong></p>\n<p>Currently supported requests :</p>\n<ul>\n<li>champion masteries by summonerId -&gt; getChampionMasteries(summonerId)</li>\n<li>champion masteries by summonerId and championId -&gt; getChampionMasteriesByChampionId(summonerId,championId)</li>\n<li>champion masteries score by summonerId -&gt; getChampionMasteriesScore(summonerId)</li>\n<li>champion rotations -&gt; getChampionRotations()</li>\n<li>league by leagueId -&gt; getLeagueById(leagueId)</li>\n<li>league pages by queue, rank and tier -&gt; getLeaguePage(queue, tier, division, page=1)</li>\n<li>league position by summonerId -&gt; getLeaguePosition(summonerId)</li>\n<li>challenger league by queue (optional) -&gt; getChallengerLeague(queue)</li>\n<li>lol status -&gt; getStatus()</li>\n<li>master league by queue (optional) -&gt; getMasterLeague(queue)</li>\n<li>match by matchId -&gt; getMatch(matchId)</li>\n<li>match timeline by matchId -&gt; getTimeline(matchId)</li>\n<li>matchlist by accountId (with parameters) -&gt; getMatchlist(self, accountId, params) / params={\"queue\":420,\"season\":11}</li>\n<li>current game by summonerId -&gt; getCurrentGame(summonerId)</li>\n<li>summoner by summonerId -&gt; getSummoner(summonerId)</li>\n<li>summoner by accountId -&gt; getSummonerByAccountId(accountId)</li>\n<li>summoner by name -&gt; getSummonerByName(name)</li>\n<li>third party code by summonerId -&gt; getThirdPartyCode(summonerId)</li>\n<li>register provider -&gt; registerProvider(region, callback_url, stub=False)</li>\n<li>register tournament -&gt; registerTournament(providerId, name, stub=False)</li>\n<li>create tournament code -&gt; createTournamentCode(tournamentId, data, nb_codes=1, stub=False)</li>\n<li>get lobby events by tournament code -&gt; getLobbyEvents(tournamentCode, stub=False)</li>\n</ul>\n<p>Further requests supported and documentation (hopefully) incoming</p>\n<p>To install, run</p>\n<pre><code>pip install pantheon\nor\npip3 install pantheon\n</code></pre>\n<p>or you can download it and run</p>\n<pre><code>python setup.py install\nor\npython3 setup.py install\n</code></pre>\n<p>An example of usage to get details on the last 10 games :</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pantheon</span> <span class=\"kn\">import</span> <span class=\"n\">pantheon</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"s2\">\"euw1\"</span>\n<span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"RGAPI-XXXX\"</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">requestsLog</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n\n<span class=\"n\">panth</span> <span class=\"o\">=</span> <span class=\"n\">pantheon</span><span class=\"o\">.</span><span class=\"n\">Pantheon</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">errorHandling</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">requestsLoggingFunction</span><span class=\"o\">=</span><span class=\"n\">requestsLog</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">getSummonerId</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">panth</span><span class=\"o\">.</span><span class=\"n\">getSummonerByName</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">],</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'accountId'</span><span class=\"p\">])</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">getRecentMatchlist</span><span class=\"p\">(</span><span class=\"n\">accountId</span><span class=\"p\">):</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">panth</span><span class=\"o\">.</span><span class=\"n\">getMatchlist</span><span class=\"p\">(</span><span class=\"n\">accountId</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"endIndex\"</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">})</span>\n        <span class=\"k\">return</span> <span class=\"n\">data</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">getRecentMatches</span><span class=\"p\">(</span><span class=\"n\">accountId</span><span class=\"p\">):</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">matchlist</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">getRecentMatchlist</span><span class=\"p\">(</span><span class=\"n\">accountId</span><span class=\"p\">)</span>\n        <span class=\"n\">tasks</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">panth</span><span class=\"o\">.</span><span class=\"n\">getMatch</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"p\">[</span><span class=\"s1\">'gameId'</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">match</span> <span class=\"ow\">in</span> <span class=\"n\">matchlist</span><span class=\"p\">[</span><span class=\"s1\">'matches'</span><span class=\"p\">]]</span>\n        <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">gather</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">tasks</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Canisback\"</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>  \n\n<span class=\"p\">(</span><span class=\"n\">summonerId</span><span class=\"p\">,</span> <span class=\"n\">accountId</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">getSummonerId</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">summonerId</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">accountId</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">getRecentMatches</span><span class=\"p\">(</span><span class=\"n\">accountId</span><span class=\"p\">)))</span>\n</pre>\n<p><strong>Changelog :</strong></p>\n<ul>\n<li>\n<p>1.0.12 :</p>\n<ul>\n<li>Add support for Clash API</li>\n</ul>\n</li>\n<li>\n<p>1.0.9 :</p>\n<ul>\n<li>Clean up some code</li>\n</ul>\n</li>\n<li>\n<p>1.0.8 :</p>\n<ul>\n<li>Clean up some code and upgrading for CI</li>\n</ul>\n</li>\n<li>\n<p>1.0.7 :</p>\n<ul>\n<li>Added TFT API endpoints</li>\n<li>Added unit tests covering almost all endpoints, rate limiter not unit tested yet</li>\n</ul>\n</li>\n<li>\n<p>1.0.6 :</p>\n<ul>\n<li>Fixed 415 errors</li>\n</ul>\n</li>\n<li>\n<p>1.0.5 :</p>\n<ul>\n<li>Updated League endpoints to match with current version</li>\n<li>Added tournament endpoints (stub ones)</li>\n</ul>\n</li>\n<li>\n<p>1.0.4 :</p>\n<ul>\n<li>Added 408 error code</li>\n</ul>\n</li>\n<li>\n<p>1.0.3 :</p>\n<ul>\n<li>Updated for v4 endpoints</li>\n</ul>\n</li>\n<li>\n<p>1.0.2 :</p>\n<ul>\n<li>Added new getChampionRotations endpoint support</li>\n<li>Deleted getChampions and getChampionsById due to deprecation of corresponding endpoints</li>\n<li>Fixed the getTimestamp function for the case when the Date header is missing</li>\n</ul>\n</li>\n<li>\n<p>1.0.1 :</p>\n<ul>\n<li>Added a debug flag, while set at True, some messages will be printed, when the rate limiter make a request waiting because limit is reached, or when retrying after an error.</li>\n<li>Added callback function for logging purpose.</li>\n<li>Changed error 429 handling (rate limit) so it retries after the value sent in header</li>\n<li>Added support for list in matchlist params (you can pass {\"queue\":[420,440]}</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6901995, "releases": {"0.1.0": [], "1.0.0": [{"comment_text": "", "digests": {"md5": "a233bdb5687708aeb15a9c3e17c0be25", "sha256": "c3c6fc9e875f3b3431871d37a90bbec5a81b959b2fe67332073f729ece167df8"}, "downloads": -1, "filename": "pantheon-1.0.0-py3.5.egg", "has_sig": false, "md5_digest": "a233bdb5687708aeb15a9c3e17c0be25", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 18173, "upload_time": "2019-04-18T13:35:49", "upload_time_iso_8601": "2019-04-18T13:35:49.235047Z", "url": "https://files.pythonhosted.org/packages/5e/9a/b302967cd56261a33476142c63ccb28a135acb55473ea3970db8edf571f2/pantheon-1.0.0-py3.5.egg", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "9be88faaaba11cf64e7d0a4446396757", "sha256": "18f099432aa978560ad21f845796faf69c833f4772144b12b36f7dfda6dad429"}, "downloads": -1, "filename": "pantheon-1.0.1-py3.5.egg", "has_sig": false, "md5_digest": "9be88faaaba11cf64e7d0a4446396757", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 19034, "upload_time": "2019-04-18T13:35:50", "upload_time_iso_8601": "2019-04-18T13:35:50.472324Z", "url": "https://files.pythonhosted.org/packages/fa/96/1ae9420252dd15b57f686d8f1b66d70d9c33e49f454acb2619c9c1f8e00a/pantheon-1.0.1-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0bf5447a967abd3e4347e101e8758e9", "sha256": "97d7d785dfad2c6187981c99a38806143165955f224c5e5372af9178db5dd51e"}, "downloads": -1, "filename": "pantheon-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e0bf5447a967abd3e4347e101e8758e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6452, "upload_time": "2019-04-18T13:35:51", "upload_time_iso_8601": "2019-04-18T13:35:51.579541Z", "url": "https://files.pythonhosted.org/packages/55/4a/10adc62c064853aff6e7a8fd85178d2705cfa0ac8ead08a31227db791bbf/pantheon-1.0.1.tar.gz", "yanked": false}], "1.0.10": [{"comment_text": "", "digests": {"md5": "b3f24455215a93252d1a38e460010af4", "sha256": "2413a3f94958499af7c82d1526ec05c5eeac46aa71bf5dbb4b876cabe20531e6"}, "downloads": -1, "filename": "pantheon-1.0.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b3f24455215a93252d1a38e460010af4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18758, "upload_time": "2020-01-07T20:48:29", "upload_time_iso_8601": "2020-01-07T20:48:29.321739Z", "url": "https://files.pythonhosted.org/packages/0f/d1/ab21bda3725d9ef9ffeef60def4eae337223812ee1005ec35679da571afe/pantheon-1.0.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f73179acdd6d603438828144b4ffa5b", "sha256": "fc37e27373817a40449fb8bad22af52ff6387109ba8c73a3295b983a9bc1dcf0"}, "downloads": -1, "filename": "pantheon-1.0.10.tar.gz", "has_sig": false, "md5_digest": "6f73179acdd6d603438828144b4ffa5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14202, "upload_time": "2020-01-07T20:48:30", "upload_time_iso_8601": "2020-01-07T20:48:30.673793Z", "url": "https://files.pythonhosted.org/packages/f0/e7/55ccb1f136a4e8241d033495b983f0f9cc92a59adf6e25f8f3f8fbf846f3/pantheon-1.0.10.tar.gz", "yanked": false}], "1.0.11": [{"comment_text": "", "digests": {"md5": "6c5ab9d358814c81b8b743225316a00d", "sha256": "ec07d063e02e332aed50547409f3db713ca1ff454cff08c72ebd1c17ae7f8144"}, "downloads": -1, "filename": "pantheon-1.0.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6c5ab9d358814c81b8b743225316a00d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18838, "upload_time": "2020-03-09T10:51:14", "upload_time_iso_8601": "2020-03-09T10:51:14.584240Z", "url": "https://files.pythonhosted.org/packages/be/a5/557baa4e361ebd57f43e2bb9e117d8fb04df8a22c9a712879d46da689118/pantheon-1.0.11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ab7c9c5f5049e5e409c9f71e0cc8693", "sha256": "b5d63da2db42143cd1472ad760dba092d7d36a9f768fb3ab4b21d85fcdf10a61"}, "downloads": -1, "filename": "pantheon-1.0.11.tar.gz", "has_sig": false, "md5_digest": "1ab7c9c5f5049e5e409c9f71e0cc8693", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14283, "upload_time": "2020-03-09T10:51:15", "upload_time_iso_8601": "2020-03-09T10:51:15.800991Z", "url": "https://files.pythonhosted.org/packages/60/ac/752e127b16fcaa3e2a2b2a9b7cd9386a5d5e85d7cd8408535bdb666dced0/pantheon-1.0.11.tar.gz", "yanked": false}], "1.0.12": [{"comment_text": "", "digests": {"md5": "96b874a522eef4bf110792e24b6c3627", "sha256": "c4df7f31ec46665b5e63d2c9ab0bc0854b8854aad467ad3c29412a588cb89f4b"}, "downloads": -1, "filename": "pantheon-1.0.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "96b874a522eef4bf110792e24b6c3627", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19558, "upload_time": "2020-03-28T14:23:45", "upload_time_iso_8601": "2020-03-28T14:23:45.492839Z", "url": "https://files.pythonhosted.org/packages/5b/06/b31319ecd11e3c25303a3bec18f7f758ac1be946854d4d60e15a4bc9652d/pantheon-1.0.12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0f9ca84266331b918ff38494c0af9cf", "sha256": "94e763af54e7cca808edba87fc54431000521b90dd8956eefb5ab811cb1e0bcb"}, "downloads": -1, "filename": "pantheon-1.0.12.tar.gz", "has_sig": false, "md5_digest": "b0f9ca84266331b918ff38494c0af9cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14742, "upload_time": "2020-03-28T14:23:46", "upload_time_iso_8601": "2020-03-28T14:23:46.647040Z", "url": "https://files.pythonhosted.org/packages/a1/06/a88cc6ea2f820b6245bfed9f6c3a5725ee86ef9ab3988a00b1e0bc59b0fc/pantheon-1.0.12.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "618e9f0558776be69689301101e18e59", "sha256": "c05ce5555ad0c8adf4eafde43f497dd96ac37edcf27cdc28c09ad3e703cb1406"}, "downloads": -1, "filename": "pantheon-1.0.3-py2.7.egg", "has_sig": false, "md5_digest": "618e9f0558776be69689301101e18e59", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 10650, "upload_time": "2019-04-18T13:35:52", "upload_time_iso_8601": "2019-04-18T13:35:52.689466Z", "url": "https://files.pythonhosted.org/packages/13/ca/41e5cf0201c69f07ff6d146ba35d904e90d03331d8caf31a59573c5c31d4/pantheon-1.0.3-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c14c73e079dcf5e6d44b8f62b01f1cd3", "sha256": "19b0b000982f66cb59d94d1d2df937e06e2733cbb658b26373d0c674b6f75e7e"}, "downloads": -1, "filename": "pantheon-1.0.3-py3.6.egg", "has_sig": false, "md5_digest": "c14c73e079dcf5e6d44b8f62b01f1cd3", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 18713, "upload_time": "2019-04-18T13:35:53", "upload_time_iso_8601": "2019-04-18T13:35:53.855008Z", "url": "https://files.pythonhosted.org/packages/eb/8d/f029bd86f17b45f424e4d2bcc90b99850ed9730c4ba3223b9b1ba19f586b/pantheon-1.0.3-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb42955ac6a059c84016b8bcbaa702c2", "sha256": "9088da906a01700e0cfe8f32397feff1a56090d964a649d02f0317ecabb40541"}, "downloads": -1, "filename": "pantheon-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "bb42955ac6a059c84016b8bcbaa702c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7813, "upload_time": "2019-04-18T13:35:46", "upload_time_iso_8601": "2019-04-18T13:35:46.849100Z", "url": "https://files.pythonhosted.org/packages/79/a6/c61edda0ccbc924a096d66f043f1670203766e53f9351a30a0b2958c5aed/pantheon-1.0.3-py3-none-any.whl", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "84b5dfeb4de9e76a39da3f17f3cf2eb1", "sha256": "77f3529259974614f8584d563bc0c821c208925409258c21a496d68121a3eced"}, "downloads": -1, "filename": "pantheon-1.0.4-py3.6.egg", "has_sig": false, "md5_digest": "84b5dfeb4de9e76a39da3f17f3cf2eb1", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 18730, "upload_time": "2019-04-18T13:35:55", "upload_time_iso_8601": "2019-04-18T13:35:55.119888Z", "url": "https://files.pythonhosted.org/packages/0d/8f/f66dd77667e35f14260a2dc4125b09c62e1dbf64f47b911837865e607485/pantheon-1.0.4-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8adaaece9045233d3a4b3c0aaba4e538", "sha256": "d6137536e86a7fca451e00e23eb56f821b7fe23bcb728b9b9b4d2985e263e302"}, "downloads": -1, "filename": "pantheon-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8adaaece9045233d3a4b3c0aaba4e538", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9083, "upload_time": "2019-04-18T13:35:47", "upload_time_iso_8601": "2019-04-18T13:35:47.824480Z", "url": "https://files.pythonhosted.org/packages/ae/25/4cc68a6ad46c6f46f66f5653097b31c8d9981b6edd202053f5b40c9edaf3/pantheon-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "424572a8cc1fd3659676cb18cb5ef7ff", "sha256": "c1ff296ae8a12e21d745f62fbe9b67f3563ae4c23572dc01c9aaec514a4bc6c1"}, "downloads": -1, "filename": "pantheon-1.0.4.tar.gz", "has_sig": false, "md5_digest": "424572a8cc1fd3659676cb18cb5ef7ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7851, "upload_time": "2019-04-18T13:35:56", "upload_time_iso_8601": "2019-04-18T13:35:56.468709Z", "url": "https://files.pythonhosted.org/packages/23/49/2e59367de5bdc3fb77e89ba8ecb00e36df41788d8695fbf9f31d7811a691/pantheon-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "09641b1a4db9bf3cb475bab0d4a9ddfa", "sha256": "a0d5447e3219d22b582e87544ce352a2aa9a3f6e7d0794de94a3684b5a003a5a"}, "downloads": -1, "filename": "pantheon-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "09641b1a4db9bf3cb475bab0d4a9ddfa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9766, "upload_time": "2019-05-02T16:43:59", "upload_time_iso_8601": "2019-05-02T16:43:59.018597Z", "url": "https://files.pythonhosted.org/packages/79/c4/6e1a908fe178ff07c4d1076ce52a2ae04114e86cce54c954f28a962ec37a/pantheon-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8552de8583df35d53dfda601ed5fe72c", "sha256": "4dfcace8b14069d0085f487992ac5e6758f9cfec727af896edb827ebbda0b361"}, "downloads": -1, "filename": "pantheon-1.0.5.tar.gz", "has_sig": false, "md5_digest": "8552de8583df35d53dfda601ed5fe72c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8441, "upload_time": "2019-05-02T16:44:00", "upload_time_iso_8601": "2019-05-02T16:44:00.494812Z", "url": "https://files.pythonhosted.org/packages/39/14/55ab52198453445705d4d91a9a0e8c63a3dc3fe7dbf55d530f46e7a6203d/pantheon-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "5d35618466e7fae714c997f30bc03a8e", "sha256": "97acd450e8dc6f946a98f783bc341444df08e89c3a1314ff39ca2013bf90f651"}, "downloads": -1, "filename": "pantheon-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "5d35618466e7fae714c997f30bc03a8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9782, "upload_time": "2019-09-20T14:12:32", "upload_time_iso_8601": "2019-09-20T14:12:32.595389Z", "url": "https://files.pythonhosted.org/packages/0e/aa/b0ec2443b3b560157e2c2c2eb871f9a199760dbce06f7cd7e0ca7ffed437/pantheon-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b46b005933d0f96924ecaf856289f6d1", "sha256": "9364cb14ccc401d77ee8e88cd6d26fd7f4735b07b43c8ad297cd7806f9cc9198"}, "downloads": -1, "filename": "pantheon-1.0.6.tar.gz", "has_sig": false, "md5_digest": "b46b005933d0f96924ecaf856289f6d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8584, "upload_time": "2019-09-20T14:12:34", "upload_time_iso_8601": "2019-09-20T14:12:34.444750Z", "url": "https://files.pythonhosted.org/packages/03/6e/45e31c8affc36e96721c1d230318fe1701bbe2d8754b6ff113188a3d2f20/pantheon-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "f282aee39d217ba7a975a4a73b29699d", "sha256": "a6a84b732092a3d7f9fce06a4da68f300acb0a1c40a98850cb6b16c2793903de"}, "downloads": -1, "filename": "pantheon-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "f282aee39d217ba7a975a4a73b29699d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10257, "upload_time": "2019-11-07T21:30:29", "upload_time_iso_8601": "2019-11-07T21:30:29.325479Z", "url": "https://files.pythonhosted.org/packages/95/f6/60ccd33b3dc94657e32f32d64e16e122499dd14918d7a58ec231a7d762b1/pantheon-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dee5c3ff3afe49f942ff74f0d1deba96", "sha256": "a22c435486249817b2b61c3839135225813a810454581192827a7ee6879a377e"}, "downloads": -1, "filename": "pantheon-1.0.7.tar.gz", "has_sig": false, "md5_digest": "dee5c3ff3afe49f942ff74f0d1deba96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11107, "upload_time": "2019-11-07T21:30:32", "upload_time_iso_8601": "2019-11-07T21:30:32.231104Z", "url": "https://files.pythonhosted.org/packages/4a/a5/130134932a1056415e5d5215daa877a97a96cfe98671655969c19cdef23d/pantheon-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "8c32451721ee6bb0fe12a1c621d5b983", "sha256": "934db28b092eaf768835956b5fcecf497bbc77e1a849d1b5a716a8f5c70e6c5c"}, "downloads": -1, "filename": "pantheon-1.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8c32451721ee6bb0fe12a1c621d5b983", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16870, "upload_time": "2019-12-31T16:11:56", "upload_time_iso_8601": "2019-12-31T16:11:56.130190Z", "url": "https://files.pythonhosted.org/packages/44/cc/020b2c25fc1ec4d37ce4c286e47f620c62d9ec5d9c1a7e4377d7dd38ab5c/pantheon-1.0.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2d3ab50978cb9bde05b0728937e9d02", "sha256": "45aca10461a9a2eade43c11ac32f7a62f37c5247fae85fd50422ff55c737f0b3"}, "downloads": -1, "filename": "pantheon-1.0.8.tar.gz", "has_sig": false, "md5_digest": "c2d3ab50978cb9bde05b0728937e9d02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12032, "upload_time": "2019-12-31T16:11:57", "upload_time_iso_8601": "2019-12-31T16:11:57.194794Z", "url": "https://files.pythonhosted.org/packages/99/ec/5575dacf53cd28511c44c268079e8cf55be98e312900f8a42167328ec6dd/pantheon-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "9067b0f2dcedf2213640765ce1dcdaf7", "sha256": "c7570b2b7be2f94a1ad706a7fc3ae941ced2b93e052c76d81b9db9d5c5de9a63"}, "downloads": -1, "filename": "pantheon-1.0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9067b0f2dcedf2213640765ce1dcdaf7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16839, "upload_time": "2020-01-05T13:32:14", "upload_time_iso_8601": "2020-01-05T13:32:14.488221Z", "url": "https://files.pythonhosted.org/packages/59/12/d9e76ffebc59c7e7f0b88861295f9a65945087c4a904473792d3e38425af/pantheon-1.0.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e58ae10270b0a00ddfb02f36143deee", "sha256": "3a4dbf02bfe27b0c45e0cfdb66b659b72a881bcb6c2de21653687bddaca10107"}, "downloads": -1, "filename": "pantheon-1.0.9.tar.gz", "has_sig": false, "md5_digest": "7e58ae10270b0a00ddfb02f36143deee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12000, "upload_time": "2020-01-05T13:32:15", "upload_time_iso_8601": "2020-01-05T13:32:15.510926Z", "url": "https://files.pythonhosted.org/packages/a8/4a/8c68602bc80b559cd0749cc2f8a2310ea8d65d482cd9e0d43f81c5fd1eb0/pantheon-1.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "96b874a522eef4bf110792e24b6c3627", "sha256": "c4df7f31ec46665b5e63d2c9ab0bc0854b8854aad467ad3c29412a588cb89f4b"}, "downloads": -1, "filename": "pantheon-1.0.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "96b874a522eef4bf110792e24b6c3627", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19558, "upload_time": "2020-03-28T14:23:45", "upload_time_iso_8601": "2020-03-28T14:23:45.492839Z", "url": "https://files.pythonhosted.org/packages/5b/06/b31319ecd11e3c25303a3bec18f7f758ac1be946854d4d60e15a4bc9652d/pantheon-1.0.12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0f9ca84266331b918ff38494c0af9cf", "sha256": "94e763af54e7cca808edba87fc54431000521b90dd8956eefb5ab811cb1e0bcb"}, "downloads": -1, "filename": "pantheon-1.0.12.tar.gz", "has_sig": false, "md5_digest": "b0f9ca84266331b918ff38494c0af9cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14742, "upload_time": "2020-03-28T14:23:46", "upload_time_iso_8601": "2020-03-28T14:23:46.647040Z", "url": "https://files.pythonhosted.org/packages/a1/06/a88cc6ea2f820b6245bfed9f6c3a5725ee86ef9ab3988a00b1e0bc59b0fc/pantheon-1.0.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:14 2020"}