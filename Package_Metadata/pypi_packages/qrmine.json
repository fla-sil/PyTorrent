{"info": {"author": "beapen", "author_email": "github@gulfdoctor.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "# QRMine \n*/\u02c8k\u00e4rm\u012bn/*\n\n\nQRMine is a suite of qualitative research (QR) data mining tools in Python using Natural Language Processing (NLP) and Machine Learning (ML). QRMine is work in progress. [Read More..](https://nuchange.ca/2017/09/grounded-theory-qualitative-research-python.html)\n\n## What it does\n\n### NLP\n* [x] Lists common categories for open coding.\n* [x] Create a coding dictionary with categories, properties and dimensions.\n* [x] Topic modelling.\n* [x] Arrange docs according to topics.\n* [x] Compare two documents/interviews.\n* [x] Select documents/interviews by sentiment, category or title for further analysis.\n* [x] Sentiment analysis\n* [ ] Network analysis\n* [ ] Co-citation finder\n\n### ML\n* [x] Accuracy of a neural network model trained using the data\n* [x] Confusion matrix from an support vector machine classifier\n* [x] K nearest neighbours of a given record\n* [x] K-Means clustering\n* [x] Principal Component Analysis (PCA)\n* [ ] Association rules\n\n## How to install\n\n```text\n\n\npip install https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-2.1.0/en_core_web_sm-2.1.0.tar.gz#egg=en_core_web_sm\n\npip install qrmine\n\n\n```\n\n## How to Use\n\n* input files are transcripts as txt files and a single csv file with numeric data. The output txt file can be specified.\n\n* The coding dictionary, topics and topic assignments can be created from the  entire corpus (all documents) using the respective command line options.\n\n* Categories (concepts), summary and sentiment can be viewed for entire corpus or specific titles (documents) specified using the --titles switch. Sentence level sentiment output is possible with the --sentence flag.\n\n* You can filter documents based on sentiment, titles or categories and do further analysis, using --filters or -f\n\n* Many of the ML functions like neural network takes a second argument (-n) . In nnet -n signifies the number of epochs, number of clusters in kmeans, number of factors in pca, and number of neighbours in KNN. KNN also takes the --rec or -r argument to specify the record.\n\n* Variables from csv can be selected using --titles (defaults to all). The first variable will be ignored (index) and the last will be the DV (dependant variable). \n\n\n### Command-line options\n\n```text\npythom -m qrmine --help\n\n```\n\n| Command | Alternate | Description |\n| --- | --- | --- |\n| --inp | -i | Input file in the text format with <break> Topic </break> |\n| --out | -o | Output file name |\n| --csv |   | csv file name |\n| --num | -n  | N (clusters/epochs etc depending on context) |\n| --rec | -r  | Record (based on context) |\n| --titles | -t | Document(s) title(s) to analyze/compare |\n| --codedict |   | Generate coding dictionary |\n| --topics |   | Generate topic model |\n| --assign |   | Assign documents to topics |\n| --cat |   | List categories of entire corpus or individual docs |\n| --summary |   | Generate summary for entire corpus or individual docs |\n| --sentiment |   | Generate sentiment score for entire corpus or individual docs |\n| --nlp |   | Generate all NLP reports |\n| --sentence |   | Generate sentence level scores when applicable |\n| --nnet |   | Display accuracy of a neural network model -n epochs(3)|\n| --svm |   | Display confusion matrix from an svm classifier |\n| --knn |   | Display nearest neighbours -n neighbours (3)|\n| --kmeans |   | Display KMeans clusters -n clusters (3)|\n| --cart |   | Display Association Rules |\n| --pca |   | Display PCA -n factors (3)|\n\n\n## Use it in your code\n```python\nfrom qrmine import Content\nfrom qrmine import Network\nfrom qrmine import Qrmine\nfrom qrmine import ReadData\nfrom qrmine import Sentiment\nfrom qrmine import MLQRMine\n\n```\n* *More instructions and a jupyter notebook available [here.](https://nuchange.ca/2017/09/grounded-theory-qualitative-research-python.html)*\n\n## Input file format\n\n### NLP\nIndividual documents or interview transcripts in a single text file separated by <break>Topic</break>. Example below\n\n```\nTranscript of the first interview with John.\nAny number of lines\n<break>First_Interview_John</break>\n\nText of the second interview with Jane.\nMore text.\n<break>Second_Interview_Jane</break>\n\n....\n```\n\nMultiple files are suported, each having only one break tag at the bottom with the topic.\n(The tag may be renamed in the future)\n\n### ML\n\nA single csv file with the following generic structure.\n\n* Column 1 with identifier. If it is related to a text document as above, include the title.\n* Last column has the dependent variable (DV). (NLP algorithms like the topic asignments may provide the DV)\n* All independent variables (numerical) in between.\n\n```\nindex, obesity, bmi, exercise, income, bp, fbs, has_diabetes\n1, 0, 29, 1, 12, 120, 89, 1\n2, 1, 32, 0, 9, 140, 92, 0\n......\n\n```\n\n## Author\n\n* [Bell Eapen](https://nuchange.ca) (McMaster U) |  [Contact](https://nuchange.ca/contact)\n* This software is developed and tested using [Compute Canada](http://www.computecanada.ca) resources.\n* See also:  [:fire: The FHIRForm framework for managing healthcare eForms](https://github.com/E-Health/fhirform)\n* See also: [:eyes: Drishti | An mHealth sense-plan-act framework!](https://github.com/E-Health/drishti)\n\n## Citation\n\nPlease cite QRMine in your publications if it helped your research. Here\nis an example BibTeX entry [(Read paper on arXiv)](https://arxiv.org/abs/2003.13519):\n\n```\n\n@article{eapenbr2019qrmine,\n  title={QRMine: A python package for triangulation in Grounded Theory},\n  author={Eapen, Bell Raj and Archer, Norm and Sartpi, Kamran},\n  journal={arXiv preprint arXiv:2003.13519 },\n  year={2020}\n}\n\n```\n\nQRMine is inspired by [this work](https://github.com/lknelson/computational-grounded-theory) and the associated [paper](https://journals.sagepub.com/doi/abs/10.1177/0049124117729703).\n\n\n## Demo\n\n[![QRMine](https://github.com/dermatologist/nlp-qrmine/blob/develop/notes/qrmine.gif)](https://github.com/dermatologist/nlp-qrmine/blob/develop/notes/qrmine.gif)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dermatologist/nlp-qrmine", "keywords": "", "license": "gpl3", "maintainer": "", "maintainer_email": "", "name": "qrmine", "package_url": "https://pypi.org/project/qrmine/", "platform": "any", "project_url": "https://pypi.org/project/qrmine/", "project_urls": {"Homepage": "https://github.com/dermatologist/nlp-qrmine"}, "release_url": "https://pypi.org/project/qrmine/3.4.0/", "requires_dist": ["numpy", "pandas", "matplotlib", "imbalanced-learn (==0.4.3)", "scikit-learn (==0.20.4)", "xgboost", "mlxtend", "Keras", "keras-text", "click", "vaderSentiment", "spacy", "textacy", "tensorflow (>=1.13.1)"], "requires_python": "", "summary": "Qualitative Research support tools in Python!", "version": "3.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>QRMine</h1>\n<p><em>/\u02c8k\u00e4rm\u012bn/</em></p>\n<p>QRMine is a suite of qualitative research (QR) data mining tools in Python using Natural Language Processing (NLP) and Machine Learning (ML). QRMine is work in progress. <a href=\"https://nuchange.ca/2017/09/grounded-theory-qualitative-research-python.html\" rel=\"nofollow\">Read More..</a></p>\n<h2>What it does</h2>\n<h3>NLP</h3>\n<ul>\n<li>[x] Lists common categories for open coding.</li>\n<li>[x] Create a coding dictionary with categories, properties and dimensions.</li>\n<li>[x] Topic modelling.</li>\n<li>[x] Arrange docs according to topics.</li>\n<li>[x] Compare two documents/interviews.</li>\n<li>[x] Select documents/interviews by sentiment, category or title for further analysis.</li>\n<li>[x] Sentiment analysis</li>\n<li>[ ] Network analysis</li>\n<li>[ ] Co-citation finder</li>\n</ul>\n<h3>ML</h3>\n<ul>\n<li>[x] Accuracy of a neural network model trained using the data</li>\n<li>[x] Confusion matrix from an support vector machine classifier</li>\n<li>[x] K nearest neighbours of a given record</li>\n<li>[x] K-Means clustering</li>\n<li>[x] Principal Component Analysis (PCA)</li>\n<li>[ ] Association rules</li>\n</ul>\n<h2>How to install</h2>\n<pre>pip install https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-2.1.0/en_core_web_sm-2.1.0.tar.gz#egg=en_core_web_sm\n\npip install qrmine\n</pre>\n<h2>How to Use</h2>\n<ul>\n<li>\n<p>input files are transcripts as txt files and a single csv file with numeric data. The output txt file can be specified.</p>\n</li>\n<li>\n<p>The coding dictionary, topics and topic assignments can be created from the  entire corpus (all documents) using the respective command line options.</p>\n</li>\n<li>\n<p>Categories (concepts), summary and sentiment can be viewed for entire corpus or specific titles (documents) specified using the --titles switch. Sentence level sentiment output is possible with the --sentence flag.</p>\n</li>\n<li>\n<p>You can filter documents based on sentiment, titles or categories and do further analysis, using --filters or -f</p>\n</li>\n<li>\n<p>Many of the ML functions like neural network takes a second argument (-n) . In nnet -n signifies the number of epochs, number of clusters in kmeans, number of factors in pca, and number of neighbours in KNN. KNN also takes the --rec or -r argument to specify the record.</p>\n</li>\n<li>\n<p>Variables from csv can be selected using --titles (defaults to all). The first variable will be ignored (index) and the last will be the DV (dependant variable).</p>\n</li>\n</ul>\n<h3>Command-line options</h3>\n<pre>pythom -m qrmine --help\n</pre>\n<table>\n<thead>\n<tr>\n<th>Command</th>\n<th>Alternate</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--inp</td>\n<td>-i</td>\n<td>Input file in the text format with &lt;break&gt; Topic &lt;/break&gt;</td>\n</tr>\n<tr>\n<td>--out</td>\n<td>-o</td>\n<td>Output file name</td>\n</tr>\n<tr>\n<td>--csv</td>\n<td></td>\n<td>csv file name</td>\n</tr>\n<tr>\n<td>--num</td>\n<td>-n</td>\n<td>N (clusters/epochs etc depending on context)</td>\n</tr>\n<tr>\n<td>--rec</td>\n<td>-r</td>\n<td>Record (based on context)</td>\n</tr>\n<tr>\n<td>--titles</td>\n<td>-t</td>\n<td>Document(s) title(s) to analyze/compare</td>\n</tr>\n<tr>\n<td>--codedict</td>\n<td></td>\n<td>Generate coding dictionary</td>\n</tr>\n<tr>\n<td>--topics</td>\n<td></td>\n<td>Generate topic model</td>\n</tr>\n<tr>\n<td>--assign</td>\n<td></td>\n<td>Assign documents to topics</td>\n</tr>\n<tr>\n<td>--cat</td>\n<td></td>\n<td>List categories of entire corpus or individual docs</td>\n</tr>\n<tr>\n<td>--summary</td>\n<td></td>\n<td>Generate summary for entire corpus or individual docs</td>\n</tr>\n<tr>\n<td>--sentiment</td>\n<td></td>\n<td>Generate sentiment score for entire corpus or individual docs</td>\n</tr>\n<tr>\n<td>--nlp</td>\n<td></td>\n<td>Generate all NLP reports</td>\n</tr>\n<tr>\n<td>--sentence</td>\n<td></td>\n<td>Generate sentence level scores when applicable</td>\n</tr>\n<tr>\n<td>--nnet</td>\n<td></td>\n<td>Display accuracy of a neural network model -n epochs(3)</td>\n</tr>\n<tr>\n<td>--svm</td>\n<td></td>\n<td>Display confusion matrix from an svm classifier</td>\n</tr>\n<tr>\n<td>--knn</td>\n<td></td>\n<td>Display nearest neighbours -n neighbours (3)</td>\n</tr>\n<tr>\n<td>--kmeans</td>\n<td></td>\n<td>Display KMeans clusters -n clusters (3)</td>\n</tr>\n<tr>\n<td>--cart</td>\n<td></td>\n<td>Display Association Rules</td>\n</tr>\n<tr>\n<td>--pca</td>\n<td></td>\n<td>Display PCA -n factors (3)</td>\n</tr></tbody></table>\n<h2>Use it in your code</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">qrmine</span> <span class=\"kn\">import</span> <span class=\"n\">Content</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qrmine</span> <span class=\"kn\">import</span> <span class=\"n\">Network</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qrmine</span> <span class=\"kn\">import</span> <span class=\"n\">Qrmine</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qrmine</span> <span class=\"kn\">import</span> <span class=\"n\">ReadData</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qrmine</span> <span class=\"kn\">import</span> <span class=\"n\">Sentiment</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qrmine</span> <span class=\"kn\">import</span> <span class=\"n\">MLQRMine</span>\n</pre>\n<ul>\n<li><em>More instructions and a jupyter notebook available <a href=\"https://nuchange.ca/2017/09/grounded-theory-qualitative-research-python.html\" rel=\"nofollow\">here.</a></em></li>\n</ul>\n<h2>Input file format</h2>\n<h3>NLP</h3>\n<p>Individual documents or interview transcripts in a single text file separated by &lt;break&gt;Topic&lt;/break&gt;. Example below</p>\n<pre><code>Transcript of the first interview with John.\nAny number of lines\n&lt;break&gt;First_Interview_John&lt;/break&gt;\n\nText of the second interview with Jane.\nMore text.\n&lt;break&gt;Second_Interview_Jane&lt;/break&gt;\n\n....\n</code></pre>\n<p>Multiple files are suported, each having only one break tag at the bottom with the topic.\n(The tag may be renamed in the future)</p>\n<h3>ML</h3>\n<p>A single csv file with the following generic structure.</p>\n<ul>\n<li>Column 1 with identifier. If it is related to a text document as above, include the title.</li>\n<li>Last column has the dependent variable (DV). (NLP algorithms like the topic asignments may provide the DV)</li>\n<li>All independent variables (numerical) in between.</li>\n</ul>\n<pre><code>index, obesity, bmi, exercise, income, bp, fbs, has_diabetes\n1, 0, 29, 1, 12, 120, 89, 1\n2, 1, 32, 0, 9, 140, 92, 0\n......\n\n</code></pre>\n<h2>Author</h2>\n<ul>\n<li><a href=\"https://nuchange.ca\" rel=\"nofollow\">Bell Eapen</a> (McMaster U) |  <a href=\"https://nuchange.ca/contact\" rel=\"nofollow\">Contact</a></li>\n<li>This software is developed and tested using <a href=\"http://www.computecanada.ca\" rel=\"nofollow\">Compute Canada</a> resources.</li>\n<li>See also:  <a href=\"https://github.com/E-Health/fhirform\" rel=\"nofollow\">:fire: The FHIRForm framework for managing healthcare eForms</a></li>\n<li>See also: <a href=\"https://github.com/E-Health/drishti\" rel=\"nofollow\">:eyes: Drishti | An mHealth sense-plan-act framework!</a></li>\n</ul>\n<h2>Citation</h2>\n<p>Please cite QRMine in your publications if it helped your research. Here\nis an example BibTeX entry <a href=\"https://arxiv.org/abs/2003.13519\" rel=\"nofollow\">(Read paper on arXiv)</a>:</p>\n<pre><code>\n@article{eapenbr2019qrmine,\n  title={QRMine: A python package for triangulation in Grounded Theory},\n  author={Eapen, Bell Raj and Archer, Norm and Sartpi, Kamran},\n  journal={arXiv preprint arXiv:2003.13519 },\n  year={2020}\n}\n\n</code></pre>\n<p>QRMine is inspired by <a href=\"https://github.com/lknelson/computational-grounded-theory\" rel=\"nofollow\">this work</a> and the associated <a href=\"https://journals.sagepub.com/doi/abs/10.1177/0049124117729703\" rel=\"nofollow\">paper</a>.</p>\n<h2>Demo</h2>\n<p><a href=\"https://github.com/dermatologist/nlp-qrmine/blob/develop/notes/qrmine.gif\" rel=\"nofollow\"><img alt=\"QRMine\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9c0c3c56d153c5c611a56503c122b57e23c47cab/68747470733a2f2f6769746875622e636f6d2f6465726d61746f6c6f676973742f6e6c702d71726d696e652f626c6f622f646576656c6f702f6e6f7465732f71726d696e652e676966\"></a></p>\n\n          </div>"}, "last_serial": 6921298, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "117ac725e222c94ce7ace1c587eb8077", "sha256": "80bbda73abd2b6bfdb0cb1921f99a0fcff9ce54778958ac553f72d26fcbda71b"}, "downloads": -1, "filename": "qrmine-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "117ac725e222c94ce7ace1c587eb8077", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27466, "upload_time": "2019-07-14T15:32:42", "upload_time_iso_8601": "2019-07-14T15:32:42.724032Z", "url": "https://files.pythonhosted.org/packages/29/d4/2c9a8b16bc9ac4658e9b46c0ae236de8974faddd4583797d39fa74d26cf7/qrmine-2.0.0-py2.py3-none-any.whl", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "202d7018a9cb1b4323275fd01d36b4be", "sha256": "afc7c29503f851a34be0e6760e457aa8df8823e033a0cc5bb57d306692f01abe"}, "downloads": -1, "filename": "qrmine-2.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "202d7018a9cb1b4323275fd01d36b4be", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15740, "upload_time": "2019-07-23T21:35:47", "upload_time_iso_8601": "2019-07-23T21:35:47.351001Z", "url": "https://files.pythonhosted.org/packages/12/c8/263d34b86295cfd066fe64729c206b4f08bdf28ade904c5a4877c4bedfcc/qrmine-2.1.2-py2.py3-none-any.whl", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "2515565dd8f71aae38e9e2a742330421", "sha256": "4571aa72e1df44c55e18de2e86871970b1c7b91442c10c63f7e9a6f92fcae408"}, "downloads": -1, "filename": "qrmine-2.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2515565dd8f71aae38e9e2a742330421", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15736, "upload_time": "2019-11-06T00:37:44", "upload_time_iso_8601": "2019-11-06T00:37:44.968619Z", "url": "https://files.pythonhosted.org/packages/01/f3/fb0b3e35531788266019ccf5c88d9a901a467ca41d2818a953ad94b1b5df/qrmine-2.2.0-py2.py3-none-any.whl", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "a9a2b4348868975ece429bf8e026cf41", "sha256": "7090586c80f6b2c2ca8c84c159ef776b80101be05318d49a62e032a4f53472a0"}, "downloads": -1, "filename": "qrmine-2.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a9a2b4348868975ece429bf8e026cf41", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15743, "upload_time": "2019-11-06T13:29:34", "upload_time_iso_8601": "2019-11-06T13:29:34.735847Z", "url": "https://files.pythonhosted.org/packages/ad/b0/9ded45936a8c4aeff021f60340ffbceb3315ebf424e0c955b4ecc18276d9/qrmine-2.3.0-py2.py3-none-any.whl", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "d58e8c003d98b63a5a7d66bdc1a54178", "sha256": "cecfa20dfd30c4d48cdcdd14bfa2e8b3421bc2712c40bf552e245784e6fdd2c3"}, "downloads": -1, "filename": "qrmine-3.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d58e8c003d98b63a5a7d66bdc1a54178", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27572, "upload_time": "2019-11-06T15:20:07", "upload_time_iso_8601": "2019-11-06T15:20:07.032138Z", "url": "https://files.pythonhosted.org/packages/b9/b2/b5a361268f90e60d34d4204eef2dc0728b64e6bd3a3b8725b7cf33dd4423/qrmine-3.0.0-py2.py3-none-any.whl", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "1f3e83e2825b0eb35259ef521a9e2a17", "sha256": "31f68bd5a0f9dd37be332c4a6e2afc0f3c11a6c51df66f35f876acbbff0b3165"}, "downloads": -1, "filename": "qrmine-3.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1f3e83e2825b0eb35259ef521a9e2a17", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27564, "upload_time": "2019-11-06T15:32:54", "upload_time_iso_8601": "2019-11-06T15:32:54.633462Z", "url": "https://files.pythonhosted.org/packages/4b/1c/1736ffffd3a0176ac671363223ac0b5282f96456ae389b07ca76963150bf/qrmine-3.1.0-py2.py3-none-any.whl", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "fb3e29adc7a63c7c40c8a4b9325217a1", "sha256": "8af1f63c7f5723484de285c55ac11f3b0b8f07a335fb86000ced6c5a994d4c68"}, "downloads": -1, "filename": "qrmine-3.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb3e29adc7a63c7c40c8a4b9325217a1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27642, "upload_time": "2019-12-13T10:40:54", "upload_time_iso_8601": "2019-12-13T10:40:54.726745Z", "url": "https://files.pythonhosted.org/packages/60/08/0a19519bf6f9a34584e4a4fc7e80cc7cb4987be448fbe3a52ba006b79e17/qrmine-3.2.0-py2.py3-none-any.whl", "yanked": false}], "3.3.0": [{"comment_text": "", "digests": {"md5": "16d000cbe85d5e1319a519b031a6f810", "sha256": "c81b59611f0d52e9bc40f3c68d9848b63157653b29662a7b8d877533b7058f81"}, "downloads": -1, "filename": "qrmine-3.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "16d000cbe85d5e1319a519b031a6f810", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27774, "upload_time": "2019-12-13T11:15:29", "upload_time_iso_8601": "2019-12-13T11:15:29.876375Z", "url": "https://files.pythonhosted.org/packages/4d/53/8494ebedc5b047da0a6a51f5fd734178f247d74c94786911eb17e0db5e66/qrmine-3.3.0-py2.py3-none-any.whl", "yanked": false}], "3.4.0": [{"comment_text": "", "digests": {"md5": "7ef5ee2ba6efec980b166900525d03ad", "sha256": "79bb1fe298a7fc1596b9da1ab6e47e5107a37a86e60d97f5482bf9e3f14b4591"}, "downloads": -1, "filename": "qrmine-3.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7ef5ee2ba6efec980b166900525d03ad", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 29577, "upload_time": "2020-03-31T16:25:00", "upload_time_iso_8601": "2020-03-31T16:25:00.511501Z", "url": "https://files.pythonhosted.org/packages/e2/54/b12fedaf62e86e1c4056c269832a049d6598fc593bca3fb2403ab98d2b5c/qrmine-3.4.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7ef5ee2ba6efec980b166900525d03ad", "sha256": "79bb1fe298a7fc1596b9da1ab6e47e5107a37a86e60d97f5482bf9e3f14b4591"}, "downloads": -1, "filename": "qrmine-3.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7ef5ee2ba6efec980b166900525d03ad", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 29577, "upload_time": "2020-03-31T16:25:00", "upload_time_iso_8601": "2020-03-31T16:25:00.511501Z", "url": "https://files.pythonhosted.org/packages/e2/54/b12fedaf62e86e1c4056c269832a049d6598fc593bca3fb2403ab98d2b5c/qrmine-3.4.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:09:15 2020"}