{"info": {"author": "Henrik Andersson", "author_email": "jan@dhigroup.com", "bugtrack_url": null, "classifiers": ["Operating System :: Microsoft :: Windows :: Windows 10", "Programming Language :: Python :: 3"], "description": "# mikeio: input/output of MIKE files in python\n\nFacilitate creating, reading and writing dfs0, dfs2, dfs1 and dfs3, dfsu and mesh files. Reading Res1D data.\n\n## Requirements\n\n* Python x64 >=3.6\n* [MIKE](https://www.mikepoweredbydhi.com/mike-2020) or [MIKE SDK](https://www.mikepoweredbydhi.com/download/mike-2020/mike-sdk)\n\n## Installation\n\nFrom PyPI:\n\n`pip install mikeio`\n\nOr development version:\n\n`pip install https://github.com/DHI/mikeio/archive/master.zip`\n\n\n## Examples\n\n### Reading data from dfs0, dfs1, dfs2, dfsu\n\n\n```python\n>>> import mikeio\n>>> ds = mikeio.read(\"random.dfs0\")\n>>> ds\nDataSet(data, time, names)\nNumber of items: 2\nShape: (1000,)\n2017-01-01 00:00:00 - 2017-07-28 03:00:00\n\n>>> ds = mikeio.read(\"random.dfs1\")\n>>> ds\nDataSet(data, time, names)\nNumber of items: 1\nShape: (100, 3)\n2012-01-01 00:00:00 - 2012-01-01 00:19:48\n```\n\n### Reading dfs0 file into Pandas DataFrame\n```python\nfrom mikeio import Dfs0\ndfs = Dfs0()\nts = dfs.read_to_pandas('simple.dfs0')\n```\n\n### Create simple timeseries\n```python\nfrom datetime import datetime, timedelta\nimport numpy as np\nfrom mikeio import Dfs0\n\n# create a list containing data for each item\ndata = []\n\n# Some random values for first (and only) item\nd = np.random.random([100])\ndata.append(d)\n\ndfs = Dfs0()\ndfs.create(filename='simple.dfs0',\n           data=data,\n           start_time=datetime(2017, 1, 1),\n           dt=60)\n\n```\n\n\n### Create equidistant dfs0 with weekly timestep\n```python\nfrom mikeio import Dfs0\nfrom mikeio.eum import TimeStep\nd1 = np.random.random([1000])\nd2 = np.random.random([1000])\ndata = []\ndata.append(d1)\ndata.append(d2)\n\ndfs = Dfs0()\ndfs.create(filename='random.dfs0',\n           data=data,\n           start_time=datetime(2017, 1, 1),\n           timeseries_unit=TimeStep.DAY,\n           dt=7,\n           names=['Random1', 'Random2'],\n           title='Hello Test')\n\n```\nFor more examples on timeseries data see this [notebook](notebooks/01%20-%20Timeseries.ipynb)\n\n\n### Read dfs2 data\n```python\nfrom mikeio import Dfs2\ndfs2File = r\"20150101-DMI-L4UHfnd-NSEABALTIC-v01-fv01-DMI_OI.dfs2\"\ndfs = Dfs2()\nres = dfs.read(dfs2File)\nres.names\n```\n\n### Create dfs2\nFor a complete example of conversion from netcdf to dfs2 see this [notebook](notebooks/Sea%20surface%20temperature%20-%20dfs2.ipynb).\n\nAnother [example](notebooks/Global%20Forecasting%20System%20-%20dfs2.ipynb) of downloading meteorlogical forecast from the Global Forecasting System and converting it to a dfs2 ready to be used by a MIKE 21 model.\n\n\n### Read Res1D file Return Pandas DataFrame\n```python\nimport res1d as r1d\np1 = r1d.ExtractionPoint()\np1.BranchName  = 'branch1'\np1.Chainage = 10.11\np1.VariableType  = 'Discharge'\nts = r1d.read('res1dfile.res1d', [p1])\n```\n\n### Read dfsu files\n```python\nimport matplotlib.pyplot as plt\nfrom mikeio import Dfsu\n\ndfs = Dfsu()\n\nfilename = \"HD.dfsu\"\nres = dfs.read(filename)\n\nidx = dfs.find_closest_element_index(x=608000, y=6907000)\n\n# data has two dimensions time, x\nplt.plot(res.time, res.data[0][:,idx])\n```\n![Timeseries](images/dfsu_ts.png)\n\n## Misc utilities\n to query variable type, time series types (useful when creating a new dfs file)\n```python\n>>> from mikeio.dfs_util import type_list, unit_list\n>>> type_list('Water level')\n{100000: 'Water Level', 100307: 'Water level change'}\n\n>>> unit_list(100307)\n{1000: 'meter', 1003: 'feet'}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/DHI/mikeio/archive/0.3.0.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DHI/mikeio", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mikeio", "package_url": "https://pypi.org/project/mikeio/", "platform": "", "project_url": "https://pypi.org/project/mikeio/", "project_urls": {"Download": "https://github.com/DHI/mikeio/archive/0.3.0.zip", "Homepage": "https://github.com/DHI/mikeio"}, "release_url": "https://pypi.org/project/mikeio/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "A package that works with the DHI dfs libraries to facilitate creating, writing and reading dfs0, dfs2, dfs3, dfsu and mesh files.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mikeio: input/output of MIKE files in python</h1>\n<p>Facilitate creating, reading and writing dfs0, dfs2, dfs1 and dfs3, dfsu and mesh files. Reading Res1D data.</p>\n<h2>Requirements</h2>\n<ul>\n<li>Python x64 &gt;=3.6</li>\n<li><a href=\"https://www.mikepoweredbydhi.com/mike-2020\" rel=\"nofollow\">MIKE</a> or <a href=\"https://www.mikepoweredbydhi.com/download/mike-2020/mike-sdk\" rel=\"nofollow\">MIKE SDK</a></li>\n</ul>\n<h2>Installation</h2>\n<p>From PyPI:</p>\n<p><code>pip install mikeio</code></p>\n<p>Or development version:</p>\n<p><code>pip install https://github.com/DHI/mikeio/archive/master.zip</code></p>\n<h2>Examples</h2>\n<h3>Reading data from dfs0, dfs1, dfs2, dfsu</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">mikeio</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">mikeio</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s2\">\"random.dfs0\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ds</span>\n<span class=\"n\">DataSet</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">)</span>\n<span class=\"n\">Number</span> <span class=\"n\">of</span> <span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"mi\">2</span>\n<span class=\"n\">Shape</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">,)</span>\n<span class=\"mi\">2017</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span> <span class=\"o\">-</span> <span class=\"mi\">2017</span><span class=\"o\">-</span><span class=\"mi\">07</span><span class=\"o\">-</span><span class=\"mi\">28</span> <span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">mikeio</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s2\">\"random.dfs1\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ds</span>\n<span class=\"n\">DataSet</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">)</span>\n<span class=\"n\">Number</span> <span class=\"n\">of</span> <span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n<span class=\"n\">Shape</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"mi\">2012</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span> <span class=\"o\">-</span> <span class=\"mi\">2012</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">:</span><span class=\"mi\">48</span>\n</pre>\n<h3>Reading dfs0 file into Pandas DataFrame</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mikeio</span> <span class=\"kn\">import</span> <span class=\"n\">Dfs0</span>\n<span class=\"n\">dfs</span> <span class=\"o\">=</span> <span class=\"n\">Dfs0</span><span class=\"p\">()</span>\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">dfs</span><span class=\"o\">.</span><span class=\"n\">read_to_pandas</span><span class=\"p\">(</span><span class=\"s1\">'simple.dfs0'</span><span class=\"p\">)</span>\n</pre>\n<h3>Create simple timeseries</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">timedelta</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mikeio</span> <span class=\"kn\">import</span> <span class=\"n\">Dfs0</span>\n\n<span class=\"c1\"># create a list containing data for each item</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"c1\"># Some random values for first (and only) item</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">([</span><span class=\"mi\">100</span><span class=\"p\">])</span>\n<span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n\n<span class=\"n\">dfs</span> <span class=\"o\">=</span> <span class=\"n\">Dfs0</span><span class=\"p\">()</span>\n<span class=\"n\">dfs</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'simple.dfs0'</span><span class=\"p\">,</span>\n           <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span>\n           <span class=\"n\">start_time</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n           <span class=\"n\">dt</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n</pre>\n<h3>Create equidistant dfs0 with weekly timestep</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mikeio</span> <span class=\"kn\">import</span> <span class=\"n\">Dfs0</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mikeio.eum</span> <span class=\"kn\">import</span> <span class=\"n\">TimeStep</span>\n<span class=\"n\">d1</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">([</span><span class=\"mi\">1000</span><span class=\"p\">])</span>\n<span class=\"n\">d2</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">([</span><span class=\"mi\">1000</span><span class=\"p\">])</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">d1</span><span class=\"p\">)</span>\n<span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">d2</span><span class=\"p\">)</span>\n\n<span class=\"n\">dfs</span> <span class=\"o\">=</span> <span class=\"n\">Dfs0</span><span class=\"p\">()</span>\n<span class=\"n\">dfs</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'random.dfs0'</span><span class=\"p\">,</span>\n           <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span>\n           <span class=\"n\">start_time</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n           <span class=\"n\">timeseries_unit</span><span class=\"o\">=</span><span class=\"n\">TimeStep</span><span class=\"o\">.</span><span class=\"n\">DAY</span><span class=\"p\">,</span>\n           <span class=\"n\">dt</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">,</span>\n           <span class=\"n\">names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Random1'</span><span class=\"p\">,</span> <span class=\"s1\">'Random2'</span><span class=\"p\">],</span>\n           <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'Hello Test'</span><span class=\"p\">)</span>\n</pre>\n<p>For more examples on timeseries data see this <a href=\"notebooks/01%20-%20Timeseries.ipynb\" rel=\"nofollow\">notebook</a></p>\n<h3>Read dfs2 data</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mikeio</span> <span class=\"kn\">import</span> <span class=\"n\">Dfs2</span>\n<span class=\"n\">dfs2File</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s2\">\"20150101-DMI-L4UHfnd-NSEABALTIC-v01-fv01-DMI_OI.dfs2\"</span>\n<span class=\"n\">dfs</span> <span class=\"o\">=</span> <span class=\"n\">Dfs2</span><span class=\"p\">()</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">dfs</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">dfs2File</span><span class=\"p\">)</span>\n<span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">names</span>\n</pre>\n<h3>Create dfs2</h3>\n<p>For a complete example of conversion from netcdf to dfs2 see this <a href=\"notebooks/Sea%20surface%20temperature%20-%20dfs2.ipynb\" rel=\"nofollow\">notebook</a>.</p>\n<p>Another <a href=\"notebooks/Global%20Forecasting%20System%20-%20dfs2.ipynb\" rel=\"nofollow\">example</a> of downloading meteorlogical forecast from the Global Forecasting System and converting it to a dfs2 ready to be used by a MIKE 21 model.</p>\n<h3>Read Res1D file Return Pandas DataFrame</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">res1d</span> <span class=\"k\">as</span> <span class=\"nn\">r1d</span>\n<span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"n\">r1d</span><span class=\"o\">.</span><span class=\"n\">ExtractionPoint</span><span class=\"p\">()</span>\n<span class=\"n\">p1</span><span class=\"o\">.</span><span class=\"n\">BranchName</span>  <span class=\"o\">=</span> <span class=\"s1\">'branch1'</span>\n<span class=\"n\">p1</span><span class=\"o\">.</span><span class=\"n\">Chainage</span> <span class=\"o\">=</span> <span class=\"mf\">10.11</span>\n<span class=\"n\">p1</span><span class=\"o\">.</span><span class=\"n\">VariableType</span>  <span class=\"o\">=</span> <span class=\"s1\">'Discharge'</span>\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">r1d</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s1\">'res1dfile.res1d'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">p1</span><span class=\"p\">])</span>\n</pre>\n<h3>Read dfsu files</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mikeio</span> <span class=\"kn\">import</span> <span class=\"n\">Dfsu</span>\n\n<span class=\"n\">dfs</span> <span class=\"o\">=</span> <span class=\"n\">Dfsu</span><span class=\"p\">()</span>\n\n<span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"s2\">\"HD.dfsu\"</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">dfs</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n\n<span class=\"n\">idx</span> <span class=\"o\">=</span> <span class=\"n\">dfs</span><span class=\"o\">.</span><span class=\"n\">find_closest_element_index</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">608000</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">6907000</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># data has two dimensions time, x</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][:,</span><span class=\"n\">idx</span><span class=\"p\">])</span>\n</pre>\n<p><img alt=\"Timeseries\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b638735c05176f8b28e1ce41a4b2b2c76974181/696d616765732f646673755f74732e706e67\"></p>\n<h2>Misc utilities</h2>\n<p>to query variable type, time series types (useful when creating a new dfs file)</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">mikeio.dfs_util</span> <span class=\"kn\">import</span> <span class=\"n\">type_list</span><span class=\"p\">,</span> <span class=\"n\">unit_list</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">type_list</span><span class=\"p\">(</span><span class=\"s1\">'Water level'</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"mi\">100000</span><span class=\"p\">:</span> <span class=\"s1\">'Water Level'</span><span class=\"p\">,</span> <span class=\"mi\">100307</span><span class=\"p\">:</span> <span class=\"s1\">'Water level change'</span><span class=\"p\">}</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">unit_list</span><span class=\"p\">(</span><span class=\"mi\">100307</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"mi\">1000</span><span class=\"p\">:</span> <span class=\"s1\">'meter'</span><span class=\"p\">,</span> <span class=\"mi\">1003</span><span class=\"p\">:</span> <span class=\"s1\">'feet'</span><span class=\"p\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 6918765, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "113488af9c7b9a3bb2057b2f6e0e954a", "sha256": "ea00e47163b4bc1173e4b3d10319f0b2f275de5396a074e174542f6eb9b4f68a"}, "downloads": -1, "filename": "mikeio-0.2.1.tar.gz", "has_sig": false, "md5_digest": "113488af9c7b9a3bb2057b2f6e0e954a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17115, "upload_time": "2020-02-13T07:45:42", "upload_time_iso_8601": "2020-02-13T07:45:42.281670Z", "url": "https://files.pythonhosted.org/packages/a8/62/69a9dace803ac29ae5129d9b4a732057dce60c004456df0e181c640ee7f4/mikeio-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "e6483a18a6d46ff9dce6c352886f930f", "sha256": "4f76257b8b6aa365ef68a4d3d6f3384ed15d811b3712da6a3dfd99bc818f7c9f"}, "downloads": -1, "filename": "mikeio-0.2.2.tar.gz", "has_sig": false, "md5_digest": "e6483a18a6d46ff9dce6c352886f930f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17119, "upload_time": "2020-02-13T07:53:18", "upload_time_iso_8601": "2020-02-13T07:53:18.820117Z", "url": "https://files.pythonhosted.org/packages/8e/39/a010604281d212fc0e0c806ce9ce52425a78cf871b328fd48c8d0159611f/mikeio-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "147a00cdf1bb05da86d2c1b619fe033e", "sha256": "168653d946ee297a93c43ccf4b2c1db559521ba2c5e39faf924458f8853d8d9b"}, "downloads": -1, "filename": "mikeio-0.3.0.tar.gz", "has_sig": false, "md5_digest": "147a00cdf1bb05da86d2c1b619fe033e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17864, "upload_time": "2020-02-27T12:04:32", "upload_time_iso_8601": "2020-02-27T12:04:32.755069Z", "url": "https://files.pythonhosted.org/packages/a8/af/4e5267d5746eaca5c462494817fe67d8ce368a36ea5da75549eba638ffb3/mikeio-0.3.0.tar.gz", "yanked": false}], "0.4.0a0": [{"comment_text": "", "digests": {"md5": "32e001395d3bfb384b63d1c4c00f9fee", "sha256": "5cadc79ce067989fc55ab7c4387f06478d131c7c7d940aa83f06bacaec228b74"}, "downloads": -1, "filename": "mikeio-0.4.0a0.tar.gz", "has_sig": false, "md5_digest": "32e001395d3bfb384b63d1c4c00f9fee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31996, "upload_time": "2020-03-31T09:05:11", "upload_time_iso_8601": "2020-03-31T09:05:11.915178Z", "url": "https://files.pythonhosted.org/packages/4a/16/ef5dfa0bfc059edeabd994da8db301f42aa5ac3f4ad7b298a624800abc2f/mikeio-0.4.0a0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "147a00cdf1bb05da86d2c1b619fe033e", "sha256": "168653d946ee297a93c43ccf4b2c1db559521ba2c5e39faf924458f8853d8d9b"}, "downloads": -1, "filename": "mikeio-0.3.0.tar.gz", "has_sig": false, "md5_digest": "147a00cdf1bb05da86d2c1b619fe033e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17864, "upload_time": "2020-02-27T12:04:32", "upload_time_iso_8601": "2020-02-27T12:04:32.755069Z", "url": "https://files.pythonhosted.org/packages/a8/af/4e5267d5746eaca5c462494817fe67d8ce368a36ea5da75549eba638ffb3/mikeio-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:41 2020"}