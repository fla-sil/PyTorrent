{"info": {"author": "RedTurtle Technology", "author_email": "sviluppoplone@redturtle.it", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Framework :: Zope2", "Framework :: Zope3", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "ValidationTool\r\n==============\r\nIntroduction\r\n------------\r\n\r\nValidationTool is a web validator for Plone 3. It validate all the pages of the plone site that we want.\r\nThis package is a base-tool that set some option fields and needs plugin-packages to do the effective validation.\r\nEach plugin allows to set a different type of validation (like Css,xhtml Strict or Transitional).\r\n\r\nEvery package has some tests and is also translated in italian.\r\n\r\nThe base-tool is an installing product, and the plugins needs only to  be placed in the \"src\" directory and registered in buiildout.cfg.\r\n\r\nThe log of the validation can be stored in a separate log.\r\nTo save into a separate log you need to set an environment-vars named VALIDATOR_LOG_FILE into the instance section of buidout.cfg \r\nwith the path of your log file. (eg: /opt/validator.buildout/val/log/validator.log)\r\n\r\nThere is the possibility to set an enviorment-var named VALIDATOR_PORTAL_URL into the instance section of buildout.cfg.\r\nThis var is used as url of portal during the creation of reports of our validations.\r\nThe var is usefull if we have to call the validation directly from the server, like wget, and the url contains 'localhost' and \r\nthe port of instance.\r\n\r\nOnce installed the package with quick installer, you can see it and set its fields in site setup->additional products.\r\nIf you click it,you go in a page that allows us to see the report list of validations, or configure our tool.\r\n\r\nIt is also possible validate a single page by clicking on \"validate XHTML some_validator\" link at the bottom, if the page belongs to \r\nthe selected types.\r\n\r\nAn other functionality is the remote validation. It allows to run a validation of the site using \"url_of_the_site/remote_validator\".\r\nThis functionality can be used for example if you want to schedule a periodical validation with probrams like \"cron\".\r\n\r\n\r\nContent\r\n-------\r\n\r\nIn the configuration page there are the following fields divided into 3 parts:\r\n\r\nConfig:\r\n\r\n* Validation type: a selection field to set the validator type for integrated validation\r\n* Validator url: text filed where can be set the url of the w3c validator to use. For example the official w3c validator, or a local validator with w3c's sources\r\n* Sleep interval: set a delay between each validation call\r\n* Enable integrated validation code: enable an option that allows to validate a single page\r\n\r\nValidation:\r\n\r\n* Validation type: a selection field to set the validator type for portal validation\r\n* Portal types to validate: a multi-selection field that lists all the available portal_types to be validated\r\n* Review states to validate:a multi-selection field that lists the review states to be validated\r\n* Anonymous validation: if this control is checked, the tool take html's pages code like an anonymous user view\r\n* Max days from last modification: max number of days from last modification of contents. Keep 0 to ignore filter\r\n* Create report document: create the report in a special document object called \"ATReport\"\r\n* Create file document: create the report in a .txt file. This file is lighter than ATReport\r\n* Send report to email address: if you want to send the report by email,you select that field\r\n* Delivery addresses: a list of the addresses to send reports\r\n\r\nDebug:\r\n\r\n* Portal types to validate: a multi-selection field that lists all the available portal_types to be debugged\r\n* Send report to email address: if you want to send the report by email,you select that field\r\n* Delivery addresses: a list of the addresses to send reports\r\n\r\nProxy:\r\n\r\n* Proxy address\r\n* Proxy port\r\n* Proxy userid\r\n* Proxy password\r\n\r\nThen you can Save the options, cancel changes, save and run validation/debug or go to the report page.\r\n\r\nEvery time that you validate the site, a report page with the validation results is created and stored in the tool, and if you want it is\r\nalso delivered to you by email.\r\n\r\nAdding new validators\r\n---------------------\r\n\r\nto create a new validator you have to do the following steps:\r\n\r\nCreate an egg with \"paster create -t nested_namespace collective.validator.type_to_validate\".\r\n\r\nIn collective.validator.your_validator/collective/validator/your_validator/ should be the following files:\r\n\r\n* configure.zcml with this string: <adapter factory=\".adapter.class_name_of_the_adapter\" />.\r\n* adapter.py that extend \"Parser\" class, implements \"Iadapter_name\" interface and adapts \"IVTPLone\" interface.\r\n  It should have \"val_url\" and \"val_type\" strings that contains the validator url and the type\r\n  of validator that you want use (look how i write it in the other adapters). then it should have a\r\n  \"getValidationResults\" metohd that set up the connection with the remoe validator and call the xml interpreter.\r\n  \"runValidation\" method that search the pages selected,call \"getValidationResults\" for each page and create the report\r\n  \"runDebugValidation\" method that try to validate alternative views,like edit and news.\r\n  \"getValidatorUrl\" and \"getValidatorType\" methods that return url and type values\r\n  \r\n* interfaces folder that contains init.py module and interfaces.py file that define the adapter class\r\n* i18n folder that conatins translation files\r\n* tests folder that contains test files\r\n\r\nPut this package in \"src\" folder of the buildout, register it in the buildout.cfg, rebuild buildout and it  will should work.\r\n\r\nCredits\r\n-------\r\n\r\nThis is a project started from Luca Fabbri and Mirco Angelini, i've just modified it and finished its functionalities.\r\nThanks to all RedTurtle Technology team that helps me to do this project.\r\n\r\nContacts\r\n--------\r\n\r\nAndrea Cecchi: andrea.cecchi@redturtle.net\r\n\r\nMirco Angelini: mirco.angelini@redturtle.net\r\n\r\nLuca Fabbri: luca.fabbri@redturtle.net\r\n\r\nRedTurtle Technology: info@redturtle.net\r\n\r\n\nChangelog\r\n=========\r\n\r\n2.2.1 (2012-12-20)\n------------------\r\n* Fixed uninstall profile [micecchi]\r\n* Added autoinclude [micecchi]\r\n\r\n2.2.0 (2011/07/28)\r\n------------------\r\n* compatibility with Plone 4\r\n* bug fix for encoding when we create report pages\r\n\r\n2.1.0 (2011/01/20)\r\n------------------\r\n* added the loading of an enviorment variablile to use as url of portal\r\n\r\n2.0.0 (2010/10/12)\r\n------------------\r\n* added \"validator_url\" and \"validator_sleep\" fields in the tool. Now the users can set also a different validator url, and a delay between each validation call.\r\n* some bug fixes\r\n* added \"anonymous validation\" to allow validating pages like anonymous view\r\n* created a separated log for the validator if there is a environment-vars setted into buildout\r\n\r\n1.0.5 (2009/09/17)\r\n------------------\r\n* created fields in the tool to create a lighter report page\r\n\r\n1.0.4 (2009/09/07)\r\n------------------\r\n* fixed some bug with a warning\r\n* created fields in the tool to configure the proxy connection \r\n\r\n1.0.3 (2009/03/07)\r\n------------------\r\n* fixed some bug and created a second view for scheduled validation\r\n* insert an icon for the action\r\n\r\n1.0.2\r\n-----\r\n* fixed unicode error\r\n\r\n1.0.1\r\n-----\r\n* changes workflow and setup configurations\r\n\r\n1.0.0\r\n-----\r\n* first import", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://svn.plone.org/svn/collective/collective.validator.base", "keywords": "Plone Validator XHTML CSS", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.validator.base", "package_url": "https://pypi.org/project/collective.validator.base/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.validator.base/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://svn.plone.org/svn/collective/collective.validator.base"}, "release_url": "https://pypi.org/project/collective.validator.base/2.2.1/", "requires_dist": null, "requires_python": null, "summary": "A Plone pages validator", "version": "2.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"validationtool\">\n<h2>ValidationTool</h2>\n<div id=\"introduction\">\n<h3>Introduction</h3>\n<p>ValidationTool is a web validator for Plone 3. It validate all the pages of the plone site that we want.\nThis package is a base-tool that set some option fields and needs plugin-packages to do the effective validation.\nEach plugin allows to set a different type of validation (like Css,xhtml Strict or Transitional).</p>\n<p>Every package has some tests and is also translated in italian.</p>\n<p>The base-tool is an installing product, and the plugins needs only to  be placed in the \u201csrc\u201d directory and registered in buiildout.cfg.</p>\n<p>The log of the validation can be stored in a separate log.\nTo save into a separate log you need to set an environment-vars named VALIDATOR_LOG_FILE into the instance section of buidout.cfg\nwith the path of your log file. (eg: /opt/validator.buildout/val/log/validator.log)</p>\n<p>There is the possibility to set an enviorment-var named VALIDATOR_PORTAL_URL into the instance section of buildout.cfg.\nThis var is used as url of portal during the creation of reports of our validations.\nThe var is usefull if we have to call the validation directly from the server, like wget, and the url contains \u2018localhost\u2019 and\nthe port of instance.</p>\n<p>Once installed the package with quick installer, you can see it and set its fields in site setup-&gt;additional products.\nIf you click it,you go in a page that allows us to see the report list of validations, or configure our tool.</p>\n<p>It is also possible validate a single page by clicking on \u201cvalidate XHTML some_validator\u201d link at the bottom, if the page belongs to\nthe selected types.</p>\n<p>An other functionality is the remote validation. It allows to run a validation of the site using \u201curl_of_the_site/remote_validator\u201d.\nThis functionality can be used for example if you want to schedule a periodical validation with probrams like \u201ccron\u201d.</p>\n</div>\n<div id=\"content\">\n<h3>Content</h3>\n<p>In the configuration page there are the following fields divided into 3 parts:</p>\n<p>Config:</p>\n<ul>\n<li>Validation type: a selection field to set the validator type for integrated validation</li>\n<li>Validator url: text filed where can be set the url of the w3c validator to use. For example the official w3c validator, or a local validator with w3c\u2019s sources</li>\n<li>Sleep interval: set a delay between each validation call</li>\n<li>Enable integrated validation code: enable an option that allows to validate a single page</li>\n</ul>\n<p>Validation:</p>\n<ul>\n<li>Validation type: a selection field to set the validator type for portal validation</li>\n<li>Portal types to validate: a multi-selection field that lists all the available portal_types to be validated</li>\n<li>Review states to validate:a multi-selection field that lists the review states to be validated</li>\n<li>Anonymous validation: if this control is checked, the tool take html\u2019s pages code like an anonymous user view</li>\n<li>Max days from last modification: max number of days from last modification of contents. Keep 0 to ignore filter</li>\n<li>Create report document: create the report in a special document object called \u201cATReport\u201d</li>\n<li>Create file document: create the report in a .txt file. This file is lighter than ATReport</li>\n<li>Send report to email address: if you want to send the report by email,you select that field</li>\n<li>Delivery addresses: a list of the addresses to send reports</li>\n</ul>\n<p>Debug:</p>\n<ul>\n<li>Portal types to validate: a multi-selection field that lists all the available portal_types to be debugged</li>\n<li>Send report to email address: if you want to send the report by email,you select that field</li>\n<li>Delivery addresses: a list of the addresses to send reports</li>\n</ul>\n<p>Proxy:</p>\n<ul>\n<li>Proxy address</li>\n<li>Proxy port</li>\n<li>Proxy userid</li>\n<li>Proxy password</li>\n</ul>\n<p>Then you can Save the options, cancel changes, save and run validation/debug or go to the report page.</p>\n<p>Every time that you validate the site, a report page with the validation results is created and stored in the tool, and if you want it is\nalso delivered to you by email.</p>\n</div>\n<div id=\"adding-new-validators\">\n<h3>Adding new validators</h3>\n<p>to create a new validator you have to do the following steps:</p>\n<p>Create an egg with \u201cpaster create -t nested_namespace collective.validator.type_to_validate\u201d.</p>\n<p>In collective.validator.your_validator/collective/validator/your_validator/ should be the following files:</p>\n<ul>\n<li>configure.zcml with this string: &lt;adapter factory=\u201d.adapter.class_name_of_the_adapter\u201d /&gt;.</li>\n<li>adapter.py that extend \u201cParser\u201d class, implements \u201cIadapter_name\u201d interface and adapts \u201cIVTPLone\u201d interface.\nIt should have \u201cval_url\u201d and \u201cval_type\u201d strings that contains the validator url and the type\nof validator that you want use (look how i write it in the other adapters). then it should have a\n\u201cgetValidationResults\u201d metohd that set up the connection with the remoe validator and call the xml interpreter.\n\u201crunValidation\u201d method that search the pages selected,call \u201cgetValidationResults\u201d for each page and create the report\n\u201crunDebugValidation\u201d method that try to validate alternative views,like edit and news.\n\u201cgetValidatorUrl\u201d and \u201cgetValidatorType\u201d methods that return url and type values</li>\n<li>interfaces folder that contains init.py module and interfaces.py file that define the adapter class</li>\n<li>i18n folder that conatins translation files</li>\n<li>tests folder that contains test files</li>\n</ul>\n<p>Put this package in \u201csrc\u201d folder of the buildout, register it in the buildout.cfg, rebuild buildout and it  will should work.</p>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>This is a project started from Luca Fabbri and Mirco Angelini, i\u2019ve just modified it and finished its functionalities.\nThanks to all RedTurtle Technology team that helps me to do this project.</p>\n</div>\n<div id=\"contacts\">\n<h3>Contacts</h3>\n<p>Andrea Cecchi: <a href=\"mailto:andrea.cecchi%40redturtle.net\">andrea<span>.</span>cecchi<span>@</span>redturtle<span>.</span>net</a></p>\n<p>Mirco Angelini: <a href=\"mailto:mirco.angelini%40redturtle.net\">mirco<span>.</span>angelini<span>@</span>redturtle<span>.</span>net</a></p>\n<p>Luca Fabbri: <a href=\"mailto:luca.fabbri%40redturtle.net\">luca<span>.</span>fabbri<span>@</span>redturtle<span>.</span>net</a></p>\n<p>RedTurtle Technology: <a href=\"mailto:info%40redturtle.net\">info<span>@</span>redturtle<span>.</span>net</a></p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>2.2.1 (2012-12-20)</h3>\n<ul>\n<li>Fixed uninstall profile [micecchi]</li>\n<li>Added autoinclude [micecchi]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>2.2.0 (2011/07/28)</h3>\n<ul>\n<li>compatibility with Plone 4</li>\n<li>bug fix for encoding when we create report pages</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>2.1.0 (2011/01/20)</h3>\n<ul>\n<li>added the loading of an enviorment variablile to use as url of portal</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>2.0.0 (2010/10/12)</h3>\n<ul>\n<li>added \u201cvalidator_url\u201d and \u201cvalidator_sleep\u201d fields in the tool. Now the users can set also a different validator url, and a delay between each validation call.</li>\n<li>some bug fixes</li>\n<li>added \u201canonymous validation\u201d to allow validating pages like anonymous view</li>\n<li>created a separated log for the validator if there is a environment-vars setted into buildout</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.0.5 (2009/09/17)</h3>\n<ul>\n<li>created fields in the tool to create a lighter report page</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.0.4 (2009/09/07)</h3>\n<ul>\n<li>fixed some bug with a warning</li>\n<li>created fields in the tool to configure the proxy connection</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.0.3 (2009/03/07)</h3>\n<ul>\n<li>fixed some bug and created a second view for scheduled validation</li>\n<li>insert an icon for the action</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.0.2</h3>\n<ul>\n<li>fixed unicode error</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.0.1</h3>\n<ul>\n<li>changes workflow and setup configurations</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>1.0.0</h3>\n<ul>\n<li>first import</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 788263, "releases": {"1.0.1beta": [{"comment_text": "", "digests": {"md5": "267b52c7385a11629c7367bbd69826b3", "sha256": "3f4bf46c84d01e70d9e97ec686522c4177d7ff40bb3a78b273f2e102b7fd831f"}, "downloads": -1, "filename": "collective.validator.base-1.0.1beta.tar.gz", "has_sig": false, "md5_digest": "267b52c7385a11629c7367bbd69826b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31819, "upload_time": "2009-03-16T14:01:38", "upload_time_iso_8601": "2009-03-16T14:01:38.945164Z", "url": "https://files.pythonhosted.org/packages/51/17/27a183aaa96c4cca1187b8b4a3c1feff9ab4aea010afd9f0fb547af59931/collective.validator.base-1.0.1beta.tar.gz", "yanked": false}], "1.0.3beta": [{"comment_text": "", "digests": {"md5": "a45ee740fb7175fa1c1ac9e15c0f6de6", "sha256": "e2aced54c94b4a4ac67ae2345548c384e72cb9f9e88f915d030ade63cc7cb954"}, "downloads": -1, "filename": "collective.validator.base-1.0.3beta.tar.gz", "has_sig": false, "md5_digest": "a45ee740fb7175fa1c1ac9e15c0f6de6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32625, "upload_time": "2009-07-06T09:32:53", "upload_time_iso_8601": "2009-07-06T09:32:53.724068Z", "url": "https://files.pythonhosted.org/packages/58/0e/008f4c745c0fe2892cb37da91cfba947c9141ef8e2922260eb99a74d7c4c/collective.validator.base-1.0.3beta.tar.gz", "yanked": false}], "1.0.5beta": [{"comment_text": "", "digests": {"md5": "aaa626f26aaddbc154f54f625dae1986", "sha256": "b93d79d633e4b475ef7b190f4e7376d4b93501a3b02b0b446b7577e714c696fd"}, "downloads": -1, "filename": "collective.validator.base-1.0.5beta.tar.gz", "has_sig": false, "md5_digest": "aaa626f26aaddbc154f54f625dae1986", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34557, "upload_time": "2009-09-29T16:04:01", "upload_time_iso_8601": "2009-09-29T16:04:01.674653Z", "url": "https://files.pythonhosted.org/packages/76/0b/de0352dc274601a8cbb13da7170f9af598adb6209fa85683a6db40b41093/collective.validator.base-1.0.5beta.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "ccb325d609ce8a497823f5eecbe8e2c7", "sha256": "50d2d9b1643fa0bcb8734e743ce8a26a41566689f194c142368f17e7f410fe37"}, "downloads": -1, "filename": "collective.validator.base-2.0.0.tar.gz", "has_sig": false, "md5_digest": "ccb325d609ce8a497823f5eecbe8e2c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37749, "upload_time": "2010-11-12T16:41:44", "upload_time_iso_8601": "2010-11-12T16:41:44.720391Z", "url": "https://files.pythonhosted.org/packages/f9/74/200f462abf8172be8e573bb9e9718de3c58ee83eaf6049441031147be039/collective.validator.base-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "0a207bb87bb6ab634c5c2bfc64d1a093", "sha256": "3747ef70b7ed3aed0c00e566df4010586d7325c8e8a1f8679eda3dec63fa93c2"}, "downloads": -1, "filename": "collective.validator.base-2.1.0.tar.gz", "has_sig": false, "md5_digest": "0a207bb87bb6ab634c5c2bfc64d1a093", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35869, "upload_time": "2011-01-21T15:51:28", "upload_time_iso_8601": "2011-01-21T15:51:28.814368Z", "url": "https://files.pythonhosted.org/packages/52/36/e481dba0639bb40854472756c6c64c9bda70fa81662a5eacbd5ba24c017a/collective.validator.base-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "dde26f1bf2a8a46fe8560187de6f66f1", "sha256": "418c6053e1db24b37d1dae627840b61f6d5531cdbafe0b7fe089a91a4615d495"}, "downloads": -1, "filename": "collective.validator.base-2.2.0.tar.gz", "has_sig": false, "md5_digest": "dde26f1bf2a8a46fe8560187de6f66f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36661, "upload_time": "2011-07-28T15:48:08", "upload_time_iso_8601": "2011-07-28T15:48:08.154113Z", "url": "https://files.pythonhosted.org/packages/fb/a7/272d99804e275d30bf141eba79f9c7a7c68090f7c42232302596e550dfea/collective.validator.base-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "c115d8bdd96ca816eed3d16cf56c5e1b", "sha256": "952c55fdcb7773783f9d287e1fabccb3e46d491525ed2730c61615799b28cd01"}, "downloads": -1, "filename": "collective.validator.base-2.2.1.zip", "has_sig": false, "md5_digest": "c115d8bdd96ca816eed3d16cf56c5e1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66895, "upload_time": "2012-12-20T08:18:07", "upload_time_iso_8601": "2012-12-20T08:18:07.986567Z", "url": "https://files.pythonhosted.org/packages/b4/c8/a0cf15e8756f9639fa99ce3b1e2dd03471ba25419f19a3f9df7e16f63424/collective.validator.base-2.2.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c115d8bdd96ca816eed3d16cf56c5e1b", "sha256": "952c55fdcb7773783f9d287e1fabccb3e46d491525ed2730c61615799b28cd01"}, "downloads": -1, "filename": "collective.validator.base-2.2.1.zip", "has_sig": false, "md5_digest": "c115d8bdd96ca816eed3d16cf56c5e1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66895, "upload_time": "2012-12-20T08:18:07", "upload_time_iso_8601": "2012-12-20T08:18:07.986567Z", "url": "https://files.pythonhosted.org/packages/b4/c8/a0cf15e8756f9639fa99ce3b1e2dd03471ba25419f19a3f9df7e16f63424/collective.validator.base-2.2.1.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:44 2020"}