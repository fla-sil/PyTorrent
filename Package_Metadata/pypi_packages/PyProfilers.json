{"info": {"author": "Felix Andreas", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# PyProfilers\nPyProfilers is collection of wrapper functions for various Python profilers which aims to make profiling more convenient.\n\n## Installing\nInstall and update using pip:\n\n```sh\npip install -U pyprofilers\n```\n\n## Simple examples\n\n### Import PyProfilers\n```python\nimport pyprofilers as pp\n```\n\n\n### Profile with [cProfile](https://docs.python.org/3/library/profile.html#module-cProfile)\nUse the standard Python [cProfile](https://docs.python.org/3/library/profile.html#module-cProfile) to list\nthe cumulative time spent in the function `func` and all its subfunctions:\n\n```python\n@pp.profile(sort_by='cumulative', out_lines=30)\ndef func():\n  ...\n```\n\n- `sort_by` can be used to sort the results according to the supplied criteria. All criterias can be found [here.](https://docs.python.org/2/library/profile.html#pstats.Stats.sort_stats)\n- `out_lines` controls the number of lines in results. Use `None` or ommit the arugment to show all.\n\n### Profile with [line_profiler](https://github.com/pyutils/line_profiler)\n\nUse the [line_profiler](https://github.com/pyutils/line_profiler) to list time spent within each line of `func`:\n\n```python\n@pp.profile_by_line(exit=1)\ndef func():\n  ...\n```\n\nSet `exit` to `True` to stop the execution after the first call to `func` returns. This is useful if `func` is called multiple times to\navoid the repeated output of the profiler statistics.\n\n### Simple Timer\nTo just time the execution of a function use the `simple_timer` decoration:\n\n```python\n@pp.simple_timer(num=1)\ndef func():\n  ...\n```\n\nThe `num` argument can be used to specify how often the function should be executed.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andreasfelix/pyprofilers", "keywords": "", "license": "GNU General Public License v3.0", "maintainer": "", "maintainer_email": "", "name": "PyProfilers", "package_url": "https://pypi.org/project/PyProfilers/", "platform": "", "project_url": "https://pypi.org/project/PyProfilers/", "project_urls": {"Homepage": "https://github.com/andreasfelix/pyprofilers"}, "release_url": "https://pypi.org/project/PyProfilers/0.1.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A convenient wrapper library for different Python profilers.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyProfilers</h1>\n<p>PyProfilers is collection of wrapper functions for various Python profilers which aims to make profiling more convenient.</p>\n<h2>Installing</h2>\n<p>Install and update using pip:</p>\n<pre>pip install -U pyprofilers\n</pre>\n<h2>Simple examples</h2>\n<h3>Import PyProfilers</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyprofilers</span> <span class=\"k\">as</span> <span class=\"nn\">pp</span>\n</pre>\n<h3>Profile with <a href=\"https://docs.python.org/3/library/profile.html#module-cProfile\" rel=\"nofollow\">cProfile</a></h3>\n<p>Use the standard Python <a href=\"https://docs.python.org/3/library/profile.html#module-cProfile\" rel=\"nofollow\">cProfile</a> to list\nthe cumulative time spent in the function <code>func</code> and all its subfunctions:</p>\n<pre><span class=\"nd\">@pp</span><span class=\"o\">.</span><span class=\"n\">profile</span><span class=\"p\">(</span><span class=\"n\">sort_by</span><span class=\"o\">=</span><span class=\"s1\">'cumulative'</span><span class=\"p\">,</span> <span class=\"n\">out_lines</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">():</span>\n  <span class=\"o\">...</span>\n</pre>\n<ul>\n<li><code>sort_by</code> can be used to sort the results according to the supplied criteria. All criterias can be found <a href=\"https://docs.python.org/2/library/profile.html#pstats.Stats.sort_stats\" rel=\"nofollow\">here.</a></li>\n<li><code>out_lines</code> controls the number of lines in results. Use <code>None</code> or ommit the arugment to show all.</li>\n</ul>\n<h3>Profile with <a href=\"https://github.com/pyutils/line_profiler\" rel=\"nofollow\">line_profiler</a></h3>\n<p>Use the <a href=\"https://github.com/pyutils/line_profiler\" rel=\"nofollow\">line_profiler</a> to list time spent within each line of <code>func</code>:</p>\n<pre><span class=\"nd\">@pp</span><span class=\"o\">.</span><span class=\"n\">profile_by_line</span><span class=\"p\">(</span><span class=\"n\">exit</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">():</span>\n  <span class=\"o\">...</span>\n</pre>\n<p>Set <code>exit</code> to <code>True</code> to stop the execution after the first call to <code>func</code> returns. This is useful if <code>func</code> is called multiple times to\navoid the repeated output of the profiler statistics.</p>\n<h3>Simple Timer</h3>\n<p>To just time the execution of a function use the <code>simple_timer</code> decoration:</p>\n<pre><span class=\"nd\">@pp</span><span class=\"o\">.</span><span class=\"n\">simple_timer</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">():</span>\n  <span class=\"o\">...</span>\n</pre>\n<p>The <code>num</code> argument can be used to specify how often the function should be executed.</p>\n\n          </div>"}, "last_serial": 6403663, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "22ee06a411149bce0c242234fea17f42", "sha256": "96b231fb0ba535e65c29b9e8824a06f761a8864056c55c66d68821344cae178d"}, "downloads": -1, "filename": "pyprofilers-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "22ee06a411149bce0c242234fea17f42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15220, "upload_time": "2019-09-26T16:18:15", "upload_time_iso_8601": "2019-09-26T16:18:15.924269Z", "url": "https://files.pythonhosted.org/packages/3b/57/9a8a819c281f2c93a77ede619dbc771b91f75c2d9f6c51d1586acef53bc0/pyprofilers-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "841fc31dcb519abca060e4924dc160b1", "sha256": "4308d1e75fa642e96ea5c4edab03367d3664dce161a38b0182ccb616badc87c2"}, "downloads": -1, "filename": "pyprofilers-0.1.tar.gz", "has_sig": false, "md5_digest": "841fc31dcb519abca060e4924dc160b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2694, "upload_time": "2019-09-26T16:18:18", "upload_time_iso_8601": "2019-09-26T16:18:18.434877Z", "url": "https://files.pythonhosted.org/packages/5a/d2/7276ee178f464befd5494be289e0143c5c8b38dcaf272edff5716fe74b23/pyprofilers-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6acae93ddf742dae557161d078366931", "sha256": "1ecea7bdde106de2c512be9ac90c711657c37c24a3fd09795fc3c2761eeb953a"}, "downloads": -1, "filename": "PyProfilers-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6acae93ddf742dae557161d078366931", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15599, "upload_time": "2019-11-25T00:37:11", "upload_time_iso_8601": "2019-11-25T00:37:11.226308Z", "url": "https://files.pythonhosted.org/packages/15/cd/41187e4f1ab15ed21b8def95306467d54689338fedbfd9c2cd99909b3b2f/PyProfilers-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d427537d937dc1987e9a9a4e3562d56d", "sha256": "13072e5bcba4792d1c94e9102e06d4b85e0c59588088d8894a9eceb443987ce2"}, "downloads": -1, "filename": "PyProfilers-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d427537d937dc1987e9a9a4e3562d56d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15639, "upload_time": "2019-12-11T02:13:47", "upload_time_iso_8601": "2019-12-11T02:13:47.272601Z", "url": "https://files.pythonhosted.org/packages/08/0b/d208e3ad27afd90c552bf2b4aac589b6ec9ee0787138c0250aae26258060/PyProfilers-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "62ebc9aba5ac755e4fec2dc061ad3fb0", "sha256": "0ea72ed290bbab85b49e213650ce2870b13e5981e52cc3ee3a06f09cf3773555"}, "downloads": -1, "filename": "PyProfilers-0.1.3.tar.gz", "has_sig": false, "md5_digest": "62ebc9aba5ac755e4fec2dc061ad3fb0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15552, "upload_time": "2020-01-06T18:17:03", "upload_time_iso_8601": "2020-01-06T18:17:03.653446Z", "url": "https://files.pythonhosted.org/packages/e1/ae/9a4bd94d73f1f4e9ae78f3b38006c73f86cca40bdd354a7f83b463a24df5/PyProfilers-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "62ebc9aba5ac755e4fec2dc061ad3fb0", "sha256": "0ea72ed290bbab85b49e213650ce2870b13e5981e52cc3ee3a06f09cf3773555"}, "downloads": -1, "filename": "PyProfilers-0.1.3.tar.gz", "has_sig": false, "md5_digest": "62ebc9aba5ac755e4fec2dc061ad3fb0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15552, "upload_time": "2020-01-06T18:17:03", "upload_time_iso_8601": "2020-01-06T18:17:03.653446Z", "url": "https://files.pythonhosted.org/packages/e1/ae/9a4bd94d73f1f4e9ae78f3b38006c73f86cca40bdd354a7f83b463a24df5/PyProfilers-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:05 2020"}