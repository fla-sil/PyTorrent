{"info": {"author": "Joshua Morris", "author_email": "joshua.a.morris@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries"], "description": "\nWarhound\n========\n\nBattlerite API telemetry parser.\n\n\nIntroduction\n-----------\n\n\nThe \"telemetry\" is a per-match file served over HTTP by Stunlock Studios. It\ncontains detailed events about what occurs in each round of a match--much more\ndetail than is exposed via the `Battlerite API <https://developer.battlerite.com>`_.\n\nTo get a match telemetry file, you will need a URL located in the \"match\ndetails\" response body. You can interact with the API using a library like\n`furrycorn <https://github.com/odeumgg/furrycorn>`_.\n\nOnce you obtain the URL for the match telemetry, use this library to parse it.\n\nThe parsed result is a structured object model of telemetry data, rendering it\nmuch easier to find the data you need.\n\n\nWiki\n----\n\nWe're using the `wiki <https://github.com/odeumgg/warhound/wiki>`_ to document\nwarhound. Feel free to make contributions.\n\n\nInstallation\n------------\n\n``pip install warhound`` should do it for your projects.\n\n\nDevelopment\n-----------\n\nRequirement setup should be a breeze using `pipenv <https://docs.pipenv.org/>`_.\n\nIf you're using `nixos <https://nixos.org>`_, simply boot a ``nix-shell`` in the\nproject directory to get a development shell.\n\nFor the rest of the world:\n\n1. Clone the directory and navigate to your local repo in a command line.\n2. ``pipenv install --three``\n3. ``pipenv shell``\n\nFor development, make sure ``PYTHONPATH`` includes the project root. Run tests\nwith ``py.test``.\n\nPlease submit changes by pull request on an *aptly named topic branch*.\n\n\nCode Style\n----------\n\nThe author of this library prefers a functional style of coding which centers\non \"types\". It's a lot easier to reason about types than logical steps, and\ngiven the highly structured nature of jsonapi, it felt like a good fit.\n\nFeel free to message with any questions you have. I'm happy to help and explain.\n\n\nLicense\n-------\n\nThis project is Copyright \u00a9 2018 odeum.gg and licensed under the MIT license.\nView `the license <https://github.com/odeumgg/warhound/blob/master/LICENSE>`_\nfor details.\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/odeumgg/warhound", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "warhound", "package_url": "https://pypi.org/project/warhound/", "platform": "", "project_url": "https://pypi.org/project/warhound/", "project_urls": {"Homepage": "https://github.com/odeumgg/warhound"}, "release_url": "https://pypi.org/project/warhound/0.8.2/", "requires_dist": ["simplejson (>=3.13.2)"], "requires_python": "", "summary": "battlerite telemetry parser", "version": "0.8.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br>Warhound<br>========<br><br>Battlerite API telemetry parser.<br><br><br>Introduction<br>-----------<br><br><br>The \"telemetry\" is a per-match file served over HTTP by Stunlock Studios. It<br>contains detailed events about what occurs in each round of a match--much more<br>detail than is exposed via the `Battlerite API &lt;https://developer.battlerite.com&gt;`_.<br><br>To get a match telemetry file, you will need a URL located in the \"match<br>details\" response body. You can interact with the API using a library like<br>`furrycorn &lt;https://github.com/odeumgg/furrycorn&gt;`_.<br><br>Once you obtain the URL for the match telemetry, use this library to parse it.<br><br>The parsed result is a structured object model of telemetry data, rendering it<br>much easier to find the data you need.<br><br><br>Wiki<br>----<br><br>We're using the `wiki &lt;https://github.com/odeumgg/warhound/wiki&gt;`_ to document<br>warhound. Feel free to make contributions.<br><br><br>Installation<br>------------<br><br>``pip install warhound`` should do it for your projects.<br><br><br>Development<br>-----------<br><br>Requirement setup should be a breeze using `pipenv &lt;https://docs.pipenv.org/&gt;`_.<br><br>If you're using `nixos &lt;https://nixos.org&gt;`_, simply boot a ``nix-shell`` in the<br>project directory to get a development shell.<br><br>For the rest of the world:<br><br>1. Clone the directory and navigate to your local repo in a command line.<br>2. ``pipenv install --three``<br>3. ``pipenv shell``<br><br>For development, make sure ``PYTHONPATH`` includes the project root. Run tests<br>with ``py.test``.<br><br>Please submit changes by pull request on an *aptly named topic branch*.<br><br><br>Code Style<br>----------<br><br>The author of this library prefers a functional style of coding which centers<br>on \"types\". It's a lot easier to reason about types than logical steps, and<br>given the highly structured nature of jsonapi, it felt like a good fit.<br><br>Feel free to message with any questions you have. I'm happy to help and explain.<br><br><br>License<br>-------<br><br>This project is Copyright \u00a9 2018 odeum.gg and licensed under the MIT license.<br>View `the license &lt;https://github.com/odeumgg/warhound/blob/master/LICENSE&gt;`_<br>for details.<br><br><br><br>\n          </div>"}, "last_serial": 3964072, "releases": {"0.8.1": [{"comment_text": "", "digests": {"md5": "3ccda9f0e4172ab66a8704f0bc3492b3", "sha256": "9d701ea0fd759292e42e32b1afa417296b056ee12fa7bdc24bf6e9f89819c3c2"}, "downloads": -1, "filename": "warhound-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3ccda9f0e4172ab66a8704f0bc3492b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9473, "upload_time": "2018-01-17T07:49:56", "upload_time_iso_8601": "2018-01-17T07:49:56.316342Z", "url": "https://files.pythonhosted.org/packages/8a/cb/721dfc22b7d3e0fd51b5411a7070dc8c62305bc95073d921f7ff91362c19/warhound-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efe0c67c547514726296e069d30524f2", "sha256": "c709c5dfbddb4480fa39d56f65e0e128aa89ae36d64dcc83a69467591422726d"}, "downloads": -1, "filename": "warhound-0.8.1.tar.gz", "has_sig": false, "md5_digest": "efe0c67c547514726296e069d30524f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5815, "upload_time": "2018-01-17T07:49:57", "upload_time_iso_8601": "2018-01-17T07:49:57.416078Z", "url": "https://files.pythonhosted.org/packages/a5/28/bf122d5d4664520df5bb96d20a711d51f88a488da7ecb850cfc97072328b/warhound-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "b1e417ac65c97363fca119b3189bdd18", "sha256": "ab1a5d29100f2a4991765b849653a6d4f73e943e2a0ff326bd6652f1d8fa8a7f"}, "downloads": -1, "filename": "warhound-0.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b1e417ac65c97363fca119b3189bdd18", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9481, "upload_time": "2018-01-29T10:01:15", "upload_time_iso_8601": "2018-01-29T10:01:15.683167Z", "url": "https://files.pythonhosted.org/packages/d2/75/51249b5bdbf351503823c502a5558d62e12bb5a05c461d74852d4142a31b/warhound-0.8.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b0b6b385e9085807704078571e0d5b1", "sha256": "6a28db39aa95ec3bd7607ee4eca26de6c455778362f83c19b17b3612903df25c"}, "downloads": -1, "filename": "warhound-0.8.2.tar.gz", "has_sig": false, "md5_digest": "4b0b6b385e9085807704078571e0d5b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5838, "upload_time": "2018-01-29T10:01:17", "upload_time_iso_8601": "2018-01-29T10:01:17.862952Z", "url": "https://files.pythonhosted.org/packages/ee/fe/582d072eca2b7cd0b50f30f497151e6256fe3292ecfeb6c1d1b915915d16/warhound-0.8.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b1e417ac65c97363fca119b3189bdd18", "sha256": "ab1a5d29100f2a4991765b849653a6d4f73e943e2a0ff326bd6652f1d8fa8a7f"}, "downloads": -1, "filename": "warhound-0.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b1e417ac65c97363fca119b3189bdd18", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9481, "upload_time": "2018-01-29T10:01:15", "upload_time_iso_8601": "2018-01-29T10:01:15.683167Z", "url": "https://files.pythonhosted.org/packages/d2/75/51249b5bdbf351503823c502a5558d62e12bb5a05c461d74852d4142a31b/warhound-0.8.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b0b6b385e9085807704078571e0d5b1", "sha256": "6a28db39aa95ec3bd7607ee4eca26de6c455778362f83c19b17b3612903df25c"}, "downloads": -1, "filename": "warhound-0.8.2.tar.gz", "has_sig": false, "md5_digest": "4b0b6b385e9085807704078571e0d5b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5838, "upload_time": "2018-01-29T10:01:17", "upload_time_iso_8601": "2018-01-29T10:01:17.862952Z", "url": "https://files.pythonhosted.org/packages/ee/fe/582d072eca2b7cd0b50f30f497151e6256fe3292ecfeb6c1d1b915915d16/warhound-0.8.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:24 2020"}