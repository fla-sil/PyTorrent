{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Fitting SciKit\n==============\n\nA framework for fitting functions to data with SciPy which unifies the various\navailable interpolation methods and provides a common interface to them based\non the following simple methods:\n\n- ``Fitter.__init__(p)``: set parameters of interpolation function, e.g. polynomial degree\n- ``Fitter.fit(x, y)``: fit given input-output data\n- ``Fitter.__call__(x)`` or ``Fitter.eval(x)``: evaluate function on new input data\n\nEach interpolation routine falls in one of two categories: scatter fitting or\ngrid fitting. They share the same interface, only differing in the definition\nof input data ``x``.\n\nScatter-fitters operate on unstructured scattered input data (i.e. not on a\ngrid). The input data consists of a sequence of ``x`` coordinates and a sequence\nof corresponding ``y`` data, where the order of the ``x`` coordinates does not\nmatter and their location can be arbitrary. The ``x`` coordinates can have an\narbritrary dimension (although most classes are specialised for 1-D or 2-D\ndata). If the dimension is bigger than 1, the coordinates are provided as an\narray of column vectors. These fitters have ``ScatterFit`` as base class.\n\nGrid-fitters operate on input data that lie on a grid. The input data consists\nof a sequence of x-axis tick sequences and the corresponding array of ``y``\ndata. These fitters have ``GridFit`` as base class.\n\nThe module is organised as follows:\n\nScatter fitters\n---------------\n\n- ``ScatterFit``: Abstract base class for scatter fitters\n- ``LinearLeastSquaresFit``: Fit linear regression model to data using SVD\n- ``Polynomial1DFit``: Fit polynomial to 1-D data\n- ``Polynomial2DFit``: Fit polynomial to 2-D data\n- ``PiecewisePolynomial1DFit``: Fit piecewise polynomial to 1-D data\n- ``Independent1DFit``: Interpolate N-dimensional matrix along given axis\n- ``Delaunay2DScatterFit``: Interpolate scalar function of 2-D data, based on\n  Delaunay triangulation and cubic / linear interpolation\n- ``NonLinearLeastSquaresFit``: Fit a generic function to data, based on\n  non-linear least squares optimisation\n- ``GaussianFit``: Fit Gaussian curve to multi-dimensional data\n- ``Spline1DFit``: Fit a B-spline to 1-D data\n- ``Spline2DScatterFit``: Fit a B-spline to scattered 2-D data\n- ``RbfScatterFit``: Do radial basis function (RBF) interpolation\n\nGrid fitters\n------------\n\n- ``GridFit``: Abstract base class for grid fitters\n- ``Spline2DGridFit``: Fit a B-spline to 2-D data on a rectangular grid\n\nHelper functions\n----------------\n\n- ``squash``: Flatten array, but not necessarily all the way to a 1-D array\n- ``unsquash``: Restore an array that was reshaped by ``squash``\n- ``sort_grid``: Ensure that the coordinates of a rectangular grid are in\n  ascending order\n- ``desort_grid``: Undo the effect of ``sort_grid``\n- ``vectorize_fit_func``: Factory that creates vectorised version of\n  function to be fitted to data\n- ``randomise``: Randomise fitted function parameters by resampling residuals\n\nSource\n------\nhttps://github.com/ska-sa/scikits.fitting\n\nContact\n-------\nLudwig Schwardt <ludwig at ska.ac.za>\n\n\nHistory\n=======\n\n0.7 (2018-09-20)\n----------------\n\n* Python 3 support\n* Clean up tests and more flake8 (line lengths)\n\n0.6 (2016-12-05)\n----------------\n\n* Fix pip installation, clean up setup procedure, flake8 and add README\n* PiecewisePolynomial1DFit updated to work with scipy 0.18.0\n* Delaunay2DScatterFit now based on scipy.interpolate.griddata, which is\n  orders of magnitude faster, more robust and smoother. Its default\n  interpolation changed from 'nn' (natural neighbours - no longer available)\n  to 'cubic'.\n* Delaunay2DGridFit removed as there is no equivalent anymore\n\n0.5.1 (2012-10-29)\n------------------\n\n* Use proper name for np.linalg.LinAlgError\n\n0.5 (2011-09-26)\n----------------\n\n* Initial release of scikits.fitting", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ska-sa/scikits.fitting", "keywords": "", "license": "Modified BSD", "maintainer": "Ludwig Schwardt", "maintainer_email": "ludwig@ska.ac.za", "name": "scikits.fitting", "package_url": "https://pypi.org/project/scikits.fitting/", "platform": "OS Independent", "project_url": "https://pypi.org/project/scikits.fitting/", "project_urls": {"Homepage": "https://github.com/ska-sa/scikits.fitting"}, "release_url": "https://pypi.org/project/scikits.fitting/0.7/", "requires_dist": null, "requires_python": ">=2.7,!=3.0,!=3.1,!=3.2", "summary": "Framework for fitting functions to data with SciPy", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"fitting-scikit\">\n<h2>Fitting SciKit</h2>\n<p>A framework for fitting functions to data with SciPy which unifies the various\navailable interpolation methods and provides a common interface to them based\non the following simple methods:</p>\n<ul>\n<li><tt>Fitter.__init__(p)</tt>: set parameters of interpolation function, e.g. polynomial degree</li>\n<li><tt>Fitter.fit(x, y)</tt>: fit given input-output data</li>\n<li><tt>Fitter.__call__(x)</tt> or <tt>Fitter.eval(x)</tt>: evaluate function on new input data</li>\n</ul>\n<p>Each interpolation routine falls in one of two categories: scatter fitting or\ngrid fitting. They share the same interface, only differing in the definition\nof input data <tt>x</tt>.</p>\n<p>Scatter-fitters operate on unstructured scattered input data (i.e. not on a\ngrid). The input data consists of a sequence of <tt>x</tt> coordinates and a sequence\nof corresponding <tt>y</tt> data, where the order of the <tt>x</tt> coordinates does not\nmatter and their location can be arbitrary. The <tt>x</tt> coordinates can have an\narbritrary dimension (although most classes are specialised for 1-D or 2-D\ndata). If the dimension is bigger than 1, the coordinates are provided as an\narray of column vectors. These fitters have <tt>ScatterFit</tt> as base class.</p>\n<p>Grid-fitters operate on input data that lie on a grid. The input data consists\nof a sequence of x-axis tick sequences and the corresponding array of <tt>y</tt>\ndata. These fitters have <tt>GridFit</tt> as base class.</p>\n<p>The module is organised as follows:</p>\n<div id=\"scatter-fitters\">\n<h3>Scatter fitters</h3>\n<ul>\n<li><tt>ScatterFit</tt>: Abstract base class for scatter fitters</li>\n<li><tt>LinearLeastSquaresFit</tt>: Fit linear regression model to data using SVD</li>\n<li><tt>Polynomial1DFit</tt>: Fit polynomial to 1-D data</li>\n<li><tt>Polynomial2DFit</tt>: Fit polynomial to 2-D data</li>\n<li><tt>PiecewisePolynomial1DFit</tt>: Fit piecewise polynomial to 1-D data</li>\n<li><tt>Independent1DFit</tt>: Interpolate N-dimensional matrix along given axis</li>\n<li><tt>Delaunay2DScatterFit</tt>: Interpolate scalar function of 2-D data, based on\nDelaunay triangulation and cubic / linear interpolation</li>\n<li><tt>NonLinearLeastSquaresFit</tt>: Fit a generic function to data, based on\nnon-linear least squares optimisation</li>\n<li><tt>GaussianFit</tt>: Fit Gaussian curve to multi-dimensional data</li>\n<li><tt>Spline1DFit</tt>: Fit a B-spline to 1-D data</li>\n<li><tt>Spline2DScatterFit</tt>: Fit a B-spline to scattered 2-D data</li>\n<li><tt>RbfScatterFit</tt>: Do radial basis function (RBF) interpolation</li>\n</ul>\n</div>\n<div id=\"grid-fitters\">\n<h3>Grid fitters</h3>\n<ul>\n<li><tt>GridFit</tt>: Abstract base class for grid fitters</li>\n<li><tt>Spline2DGridFit</tt>: Fit a B-spline to 2-D data on a rectangular grid</li>\n</ul>\n</div>\n<div id=\"helper-functions\">\n<h3>Helper functions</h3>\n<ul>\n<li><tt>squash</tt>: Flatten array, but not necessarily all the way to a 1-D array</li>\n<li><tt>unsquash</tt>: Restore an array that was reshaped by <tt>squash</tt></li>\n<li><tt>sort_grid</tt>: Ensure that the coordinates of a rectangular grid are in\nascending order</li>\n<li><tt>desort_grid</tt>: Undo the effect of <tt>sort_grid</tt></li>\n<li><tt>vectorize_fit_func</tt>: Factory that creates vectorised version of\nfunction to be fitted to data</li>\n<li><tt>randomise</tt>: Randomise fitted function parameters by resampling residuals</li>\n</ul>\n</div>\n<div id=\"source\">\n<h3>Source</h3>\n<p><a href=\"https://github.com/ska-sa/scikits.fitting\" rel=\"nofollow\">https://github.com/ska-sa/scikits.fitting</a></p>\n</div>\n<div id=\"contact\">\n<h3>Contact</h3>\n<p>Ludwig Schwardt &lt;ludwig at ska.ac.za&gt;</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.7 (2018-09-20)</h3>\n<ul>\n<li>Python 3 support</li>\n<li>Clean up tests and more flake8 (line lengths)</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.6 (2016-12-05)</h3>\n<ul>\n<li>Fix pip installation, clean up setup procedure, flake8 and add README</li>\n<li>PiecewisePolynomial1DFit updated to work with scipy 0.18.0</li>\n<li>Delaunay2DScatterFit now based on scipy.interpolate.griddata, which is\norders of magnitude faster, more robust and smoother. Its default\ninterpolation changed from \u2018nn\u2019 (natural neighbours - no longer available)\nto \u2018cubic\u2019.</li>\n<li>Delaunay2DGridFit removed as there is no equivalent anymore</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.5.1 (2012-10-29)</h3>\n<ul>\n<li>Use proper name for np.linalg.LinAlgError</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.5 (2011-09-26)</h3>\n<ul>\n<li>Initial release of scikits.fitting</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4776646, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "f998863bb264166fbb270b44aa928798", "sha256": "dc97336d3a694b0974c2123a303c331bd94659db1a03c73b31e0c7d55653d00a"}, "downloads": -1, "filename": "scikits.fitting-0.5.tar.gz", "has_sig": true, "md5_digest": "f998863bb264166fbb270b44aa928798", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32961, "upload_time": "2011-09-26T12:19:46", "upload_time_iso_8601": "2011-09-26T12:19:46.303645Z", "url": "https://files.pythonhosted.org/packages/ec/44/3fe34149ab78b36244c9e8aaedd42284c54d3076707de2942ab5b2b56de3/scikits.fitting-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "fbe50d41b1e31ef6542129d405448150", "sha256": "4be8f15f7d77f4c8aa16d7e7cfa344f96ad3d5393ea8d8ff1fa4ae2ae7ea362d"}, "downloads": -1, "filename": "scikits.fitting-0.5.1.tar.gz", "has_sig": true, "md5_digest": "fbe50d41b1e31ef6542129d405448150", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32982, "upload_time": "2012-10-29T08:21:52", "upload_time_iso_8601": "2012-10-29T08:21:52.369584Z", "url": "https://files.pythonhosted.org/packages/1d/16/821c1a51a3138333cb8f2372513a597e2ecea3dec4aeb2d9275b0b9494de/scikits.fitting-0.5.1.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "badf0dbc9c9982038f7be9cd597c39c4", "sha256": "f764ca61530de5b3a012ff0f20553847708c545f05d5632bf9f27be230c79f48"}, "downloads": -1, "filename": "scikits.fitting-0.6-py2-none-any.whl", "has_sig": true, "md5_digest": "badf0dbc9c9982038f7be9cd597c39c4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 54079, "upload_time": "2016-12-05T14:39:17", "upload_time_iso_8601": "2016-12-05T14:39:17.039890Z", "url": "https://files.pythonhosted.org/packages/80/49/e830b61648a3d9ee32a52db9260ae27dd33367d4fd55076dda141854e100/scikits.fitting-0.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5168eb4a8d53cd9fc091bd5996fd9a4b", "sha256": "6d2f2c400a7ea3fac6338c2675bfded47ece984fb903f8c256ec0dcac2c4613b"}, "downloads": -1, "filename": "scikits.fitting-0.6.tar.gz", "has_sig": true, "md5_digest": "5168eb4a8d53cd9fc091bd5996fd9a4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34013, "upload_time": "2016-12-05T14:39:28", "upload_time_iso_8601": "2016-12-05T14:39:28.732328Z", "url": "https://files.pythonhosted.org/packages/7b/66/0ddf2e8976ddd8dbac94b03464a511de0bb5b7caf1cee264bcffe909bbf9/scikits.fitting-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "4789e9f83d0ffcb294f275f36280f6cc", "sha256": "a16b80726be5393d291e7c6244471b185b90a9d3d75aab3422f1e34ec89dfebe"}, "downloads": -1, "filename": "scikits.fitting-0.7-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "4789e9f83d0ffcb294f275f36280f6cc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7,!=3.0,!=3.1,!=3.2", "size": 52266, "upload_time": "2018-09-20T12:23:12", "upload_time_iso_8601": "2018-09-20T12:23:12.648389Z", "url": "https://files.pythonhosted.org/packages/0a/6f/110af352e1b7771518c1e0a3b2e3cbd965fc648b2e004e1b859047815464/scikits.fitting-0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf97f3e706856c81636d6eb02d0badbe", "sha256": "caf68be8016891cf78766585e5ed86513aa718cdcf89a710fae43ccac1ed253c"}, "downloads": -1, "filename": "scikits.fitting-0.7.tar.gz", "has_sig": true, "md5_digest": "cf97f3e706856c81636d6eb02d0badbe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0,!=3.1,!=3.2", "size": 35085, "upload_time": "2018-09-20T12:22:56", "upload_time_iso_8601": "2018-09-20T12:22:56.943710Z", "url": "https://files.pythonhosted.org/packages/62/47/a540f4cf6a7e1f6014121e86a53e9d3d15938f85ffcf13781aeb0368546d/scikits.fitting-0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4789e9f83d0ffcb294f275f36280f6cc", "sha256": "a16b80726be5393d291e7c6244471b185b90a9d3d75aab3422f1e34ec89dfebe"}, "downloads": -1, "filename": "scikits.fitting-0.7-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "4789e9f83d0ffcb294f275f36280f6cc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7,!=3.0,!=3.1,!=3.2", "size": 52266, "upload_time": "2018-09-20T12:23:12", "upload_time_iso_8601": "2018-09-20T12:23:12.648389Z", "url": "https://files.pythonhosted.org/packages/0a/6f/110af352e1b7771518c1e0a3b2e3cbd965fc648b2e004e1b859047815464/scikits.fitting-0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf97f3e706856c81636d6eb02d0badbe", "sha256": "caf68be8016891cf78766585e5ed86513aa718cdcf89a710fae43ccac1ed253c"}, "downloads": -1, "filename": "scikits.fitting-0.7.tar.gz", "has_sig": true, "md5_digest": "cf97f3e706856c81636d6eb02d0badbe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0,!=3.1,!=3.2", "size": 35085, "upload_time": "2018-09-20T12:22:56", "upload_time_iso_8601": "2018-09-20T12:22:56.943710Z", "url": "https://files.pythonhosted.org/packages/62/47/a540f4cf6a7e1f6014121e86a53e9d3d15938f85ffcf13781aeb0368546d/scikits.fitting-0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:26 2020"}