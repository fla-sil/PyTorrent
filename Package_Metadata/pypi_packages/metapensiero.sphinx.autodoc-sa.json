{"info": {"author": "Lele Gaifax", "author_email": "lele@metapensiero.it", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Sphinx :: Extension", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Database", "Topic :: Utilities"], "description": ".. -*- coding: utf-8 -*-\n.. :Project:   metapensiero.sphinx.autodoc_sa -- Autodoc extension to pretty print canned SA queries\n.. :Created:   Sat 14 Jan 2017 10:34:19 CET\n.. :Author:    Lele Gaifax <lele@metapensiero.it>\n.. :License:   GNU General Public License version 3 or later\n.. :Copyright: \u00a9 2017, 2018 Lele Gaifax\n..\n\n================================\n metapensiero.sphinx.autodoc_sa\n================================\n\nAutodoc extension to pretty print canned SA queries\n===================================================\n\n :author: Lele Gaifax\n :contact: lele@metapensiero.it\n :license: GNU General Public License version 3 or later\n\nThis is a very simple extension to Sphinx__ that injects the ability to recognize and pretty\nprint SQLAlchemy__ statements into its `automodule`__ and autoclass directives.\n\n__ http://www.sphinx-doc.org/\n__ http://www.sqlalchemy.org/\n__ http://www.sphinx-doc.org/en/1.5.1/ext/autodoc.html?highlight=autoclass#directive-automodule\n\nTo use it, first of all you must register the extension within the Sphinx environment, adding\nthe full name of the package to the ``extensions`` list in the file ``conf.py``, for example::\n\n  # Add any Sphinx extension module names here, as strings.\n  extensions = ['metapensiero.sphinx.autodoc_sa']\n\nWithout further settings it uses the default SQLAlchemy `stringification strategy`__, but you\ncan explicitly choose the right *dialect* by setting ``autodoc_sa_dialect`` to a string\ncontaining its fully qualified name, for example::\n\n  autodoc_sa_dialect = 'sqlalchemy.dialects.postgresql.dialect'\n\nOtherwise, you can set it using the ``-D`` option of the ``sphinx-build`` command, e.g. adding\n``-D autodoc_sa_dialect=my.own.dialect`` to the ``SPHINXOPTS`` of the Makefile created by\n``sphinx-quickstart``.\n\n__ http://docs.sqlalchemy.org/en/rel_1_1/faq/sqlexpressions.html#how-do-i-render-sql-expressions-as-strings-possibly-with-bound-parameters-inlined\n\nAt this point, any documented SQLAlchemy core statement or ORM query, appearing either at the\nmodule level or as a class attribute, will be *compiled* into SQL, beautified using\n`sqlparse.format()`__ and added to the documentation wrapped within a ``code-block:: sql``\ndirective.\n\n__ https://sqlparse.readthedocs.io/en/latest/api/#sqlparse.format\n\nIf you chose a specific SQLAlchemy dialect, by any chance you may want to select the right\nPygments lexer__ to adjust the highlighting rules, instead of the default ``sql``::\n\n  autodoc_sa_pygments_lang = 'postgresql'\n\n__ http://pygments.org/docs/lexers/#lexers-for-various-sql-dialects-and-related-interactive-sessions\n\nIf you are using ``PostgreSQL``, you may prefer using the `pglast`__ SQL prettifier over the\ndefault one based on ``sqlparse``::\n\n  autodoc_sa_prettifier = 'pglast'\n\n__ https://pypi.org/project/pglast\n\n\n.. -*- coding: utf-8 -*-\n\nChanges\n-------\n\n2.1 (2019-03-31)\n~~~~~~~~~~~~~~~~\n\n* Minor tweak for compatibility with recently released Sphinx 2.0\n\n\n2.0 (2018-06-16)\n~~~~~~~~~~~~~~~~\n\n.. important:: Given that the PostgreSQL-specific prettifier has been renamed from ``pg_query``\n               to ``pglast``, I opted to reflect the fact on the value of the\n               ``autodoc_sa_prettifier`` option: if you were using that tool, you must change\n               it to ``pglast``.\n\n               Sorry for the inconvenience.\n\n\n1.7 (2018-05-24)\n~~~~~~~~~~~~~~~~\n\n* Avoid prettification of BindParameters\n\n\n1.6 (2018-05-23)\n~~~~~~~~~~~~~~~~\n\n* Use Sphinx 1.7+ API to install the extension\n\n\n1.5 (2017-08-10)\n~~~~~~~~~~~~~~~~\n\n* New option ``autodoc_sa_prettifier_options`` to pass arbitrary keyword options to the\n  prettifier function\n\n\n1.4 (2017-08-09)\n~~~~~~~~~~~~~~~~\n\n* Replace the dynamic argument placeholders injected by SA with their literal values, leaving\n  the developer's explicit bindparams alone\n\n\n1.3 (2017-08-08)\n~~~~~~~~~~~~~~~~\n\n* Handle also the `pglast`__ SQL prettifier\n\n* New options, ``autodoc_sa_prettifier`` and ``autodoc_pygments_lang``\n\n__ https://pypi.org/project/pglast\n\n\n1.2 (2017-03-22)\n~~~~~~~~~~~~~~~~\n\n* Minor tweak, no externally visible changes\n\n\n1.1 (2017-01-17)\n~~~~~~~~~~~~~~~~\n\n* First release on PyPI\n\n\n1.0 (unreleased)\n~~~~~~~~~~~~~~~~\n\n* Polished, tested and extended to support class' attributes as well\n\n* Extracted from metapensiero.sphinx.patchdb", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/lele/metapensiero.sphinx.autodoc_sa", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "metapensiero.sphinx.autodoc-sa", "package_url": "https://pypi.org/project/metapensiero.sphinx.autodoc-sa/", "platform": "", "project_url": "https://pypi.org/project/metapensiero.sphinx.autodoc-sa/", "project_urls": {"Homepage": "https://bitbucket.org/lele/metapensiero.sphinx.autodoc_sa"}, "release_url": "https://pypi.org/project/metapensiero.sphinx.autodoc-sa/2.1/", "requires_dist": null, "requires_python": "", "summary": "Autodoc extension to pretty print canned SA queries", "version": "2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>author:</th><td>Lele Gaifax</td>\n</tr>\n<tr><th>contact:</th><td><a href=\"mailto:lele%40metapensiero.it\">lele<span>@</span>metapensiero<span>.</span>it</a></td>\n</tr>\n<tr><th>license:</th><td>GNU General Public License version 3 or later</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>This is a very simple extension to <a href=\"http://www.sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a> that injects the ability to recognize and pretty\nprint <a href=\"http://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a> statements into its <a href=\"http://www.sphinx-doc.org/en/1.5.1/ext/autodoc.html?highlight=autoclass#directive-automodule\" rel=\"nofollow\">automodule</a> and autoclass directives.</p>\n<p>To use it, first of all you must register the extension within the Sphinx environment, adding\nthe full name of the package to the <tt>extensions</tt> list in the file <tt>conf.py</tt>, for example:</p>\n<pre># Add any Sphinx extension module names here, as strings.\nextensions = ['metapensiero.sphinx.autodoc_sa']\n</pre>\n<p>Without further settings it uses the default SQLAlchemy <a href=\"http://docs.sqlalchemy.org/en/rel_1_1/faq/sqlexpressions.html#how-do-i-render-sql-expressions-as-strings-possibly-with-bound-parameters-inlined\" rel=\"nofollow\">stringification strategy</a>, but you\ncan explicitly choose the right <em>dialect</em> by setting <tt>autodoc_sa_dialect</tt> to a string\ncontaining its fully qualified name, for example:</p>\n<pre>autodoc_sa_dialect = 'sqlalchemy.dialects.postgresql.dialect'\n</pre>\n<p>Otherwise, you can set it using the <tt><span class=\"pre\">-D</span></tt> option of the <tt><span class=\"pre\">sphinx-build</span></tt> command, e.g. adding\n<tt><span class=\"pre\">-D</span> autodoc_sa_dialect=my.own.dialect</tt> to the <tt>SPHINXOPTS</tt> of the Makefile created by\n<tt><span class=\"pre\">sphinx-quickstart</span></tt>.</p>\n<p>At this point, any documented SQLAlchemy core statement or ORM query, appearing either at the\nmodule level or as a class attribute, will be <em>compiled</em> into SQL, beautified using\n<a href=\"https://sqlparse.readthedocs.io/en/latest/api/#sqlparse.format\" rel=\"nofollow\">sqlparse.format()</a> and added to the documentation wrapped within a <tt><span class=\"pre\">code-block::</span> sql</tt>\ndirective.</p>\n<p>If you chose a specific SQLAlchemy dialect, by any chance you may want to select the right\nPygments <a href=\"http://pygments.org/docs/lexers/#lexers-for-various-sql-dialects-and-related-interactive-sessions\" rel=\"nofollow\">lexer</a> to adjust the highlighting rules, instead of the default <tt>sql</tt>:</p>\n<pre>autodoc_sa_pygments_lang = 'postgresql'\n</pre>\n<p>If you are using <tt>PostgreSQL</tt>, you may prefer using the <a href=\"https://pypi.org/project/pglast\" rel=\"nofollow\">pglast</a> SQL prettifier over the\ndefault one based on <tt>sqlparse</tt>:</p>\n<pre>autodoc_sa_prettifier = 'pglast'\n</pre>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"id8\">\n<h3>2.1 (2019-03-31)</h3>\n<ul>\n<li>Minor tweak for compatibility with recently released Sphinx 2.0</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>2.0 (2018-06-16)</h3>\n<div>\n<p>Important</p>\n<p>Given that the PostgreSQL-specific prettifier has been renamed from <tt>pg_query</tt>\nto <tt>pglast</tt>, I opted to reflect the fact on the value of the\n<tt>autodoc_sa_prettifier</tt> option: if you were using that tool, you must change\nit to <tt>pglast</tt>.</p>\n<p>Sorry for the inconvenience.</p>\n</div>\n</div>\n<div id=\"id10\">\n<h3>1.7 (2018-05-24)</h3>\n<ul>\n<li>Avoid prettification of BindParameters</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>1.6 (2018-05-23)</h3>\n<ul>\n<li>Use Sphinx 1.7+ API to install the extension</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>1.5 (2017-08-10)</h3>\n<ul>\n<li>New option <tt>autodoc_sa_prettifier_options</tt> to pass arbitrary keyword options to the\nprettifier function</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>1.4 (2017-08-09)</h3>\n<ul>\n<li>Replace the dynamic argument placeholders injected by SA with their literal values, leaving\nthe developer\u2019s explicit bindparams alone</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>1.3 (2017-08-08)</h3>\n<ul>\n<li>Handle also the <a href=\"https://pypi.org/project/pglast\" rel=\"nofollow\">pglast</a> SQL prettifier</li>\n<li>New options, <tt>autodoc_sa_prettifier</tt> and <tt>autodoc_pygments_lang</tt></li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>1.2 (2017-03-22)</h3>\n<ul>\n<li>Minor tweak, no externally visible changes</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>1.1 (2017-01-17)</h3>\n<ul>\n<li>First release on PyPI</li>\n</ul>\n</div>\n<div id=\"unreleased\">\n<h3>1.0 (unreleased)</h3>\n<ul>\n<li>Polished, tested and extended to support class\u2019 attributes as well</li>\n<li>Extracted from metapensiero.sphinx.patchdb</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5008843, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "a48a48fde08ab11415c7ea3069a88d87", "sha256": "777e6be26125c0e9d9ef8a5922687a4fc4921ef536052ecfb358bfe003df9621"}, "downloads": -1, "filename": "metapensiero.sphinx.autodoc_sa-1.1.tar.gz", "has_sig": false, "md5_digest": "a48a48fde08ab11415c7ea3069a88d87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4524, "upload_time": "2017-01-17T09:19:22", "upload_time_iso_8601": "2017-01-17T09:19:22.571851Z", "url": "https://files.pythonhosted.org/packages/72/19/aa538f5410fb92815fe8fa4530157e643f6fb6799cab974885046ad92b00/metapensiero.sphinx.autodoc_sa-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "7a339041255fb8a782f261760871fe44", "sha256": "1fe01e3f5eaed848ded03ca399397e70bcbb8d5d9e9f7d33fea327434b15e70a"}, "downloads": -1, "filename": "metapensiero.sphinx.autodoc_sa-1.2.tar.gz", "has_sig": false, "md5_digest": "7a339041255fb8a782f261760871fe44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6827, "upload_time": "2017-03-22T20:56:59", "upload_time_iso_8601": "2017-03-22T20:56:59.802948Z", "url": "https://files.pythonhosted.org/packages/b7/54/adbfdd3bc9e95a83c788d1856973de8d8ebaf1d5bf3210182bd9669c17e4/metapensiero.sphinx.autodoc_sa-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "377615f2e9e5276a4a73e8793759f0a9", "sha256": "46b017b80d1a8d700eb0c644e6d5701cf2704864067574483e943802d4db5bab"}, "downloads": -1, "filename": "metapensiero.sphinx.autodoc_sa-1.3.tar.gz", "has_sig": false, "md5_digest": "377615f2e9e5276a4a73e8793759f0a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7695, "upload_time": "2017-08-08T10:06:45", "upload_time_iso_8601": "2017-08-08T10:06:45.122492Z", "url": "https://files.pythonhosted.org/packages/1d/61/d5d670bec5c2df63b4bb451b27632155021728d2c491cf1f291eadee5f29/metapensiero.sphinx.autodoc_sa-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "3d1c586a01db5ff5128c2bbd9404939a", "sha256": "f1c0a1c1757e437f59ff408f2029db3d4dc3aef3c2bc6d8f2c48743d9a6c5dc2"}, "downloads": -1, "filename": "metapensiero.sphinx.autodoc_sa-1.4.tar.gz", "has_sig": false, "md5_digest": "3d1c586a01db5ff5128c2bbd9404939a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8807, "upload_time": "2017-08-09T08:05:00", "upload_time_iso_8601": "2017-08-09T08:05:00.719883Z", "url": "https://files.pythonhosted.org/packages/ef/d6/760da9cf4799275213e8ac4681ec6bf7d87d940124a5d757c3414e2d9afe/metapensiero.sphinx.autodoc_sa-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "a51f6b7a30c506d174aaa9f4a3de51ca", "sha256": "cc3f67da4758f15091e53ac9b8fab30d58567582eecba42f2146a907edf278c4"}, "downloads": -1, "filename": "metapensiero.sphinx.autodoc_sa-1.5.tar.gz", "has_sig": false, "md5_digest": "a51f6b7a30c506d174aaa9f4a3de51ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8978, "upload_time": "2017-08-10T18:47:47", "upload_time_iso_8601": "2017-08-10T18:47:47.189361Z", "url": "https://files.pythonhosted.org/packages/1e/7e/b8d1b482fe661b7b3376ae40ed793c5c554f1e0432694ba417f1b97e86b0/metapensiero.sphinx.autodoc_sa-1.5.tar.gz", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "a8b650bc2c982861d155c0b1ba41515a", "sha256": "8a5119a207d2e6751847efc545760ac9cabda9887e2ebd562af546b85ce98b64"}, "downloads": -1, "filename": "metapensiero.sphinx.autodoc_sa-1.6.tar.gz", "has_sig": false, "md5_digest": "a8b650bc2c982861d155c0b1ba41515a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9112, "upload_time": "2018-05-23T15:55:57", "upload_time_iso_8601": "2018-05-23T15:55:57.905277Z", "url": "https://files.pythonhosted.org/packages/35/d0/bb9bafe9aa3aa2da32dc23efc2f8f0fc92a277a7c106de65862c8a6a69f6/metapensiero.sphinx.autodoc_sa-1.6.tar.gz", "yanked": false}], "1.7": [{"comment_text": "", "digests": {"md5": "4fdff7e1404522186fa9f785aeae1dca", "sha256": "11a67f1e6f132a7937dce6ecfaf38c48afaf106052d793e95a657043e93fd524"}, "downloads": -1, "filename": "metapensiero.sphinx.autodoc_sa-1.7.tar.gz", "has_sig": false, "md5_digest": "4fdff7e1404522186fa9f785aeae1dca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9713, "upload_time": "2018-05-24T08:33:57", "upload_time_iso_8601": "2018-05-24T08:33:57.055841Z", "url": "https://files.pythonhosted.org/packages/fd/bf/43a8b02acc51d52c3b9d1038c8799eb14a432c8b7d8f6161e9f8d2e18436/metapensiero.sphinx.autodoc_sa-1.7.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "5ec185f5097caca9778ae297c2c7eb27", "sha256": "0431f5caa276e97e6eeb1b0aa9144b2bf72989813439bd2cb0dedc131169d4b0"}, "downloads": -1, "filename": "metapensiero.sphinx.autodoc_sa-2.0.tar.gz", "has_sig": false, "md5_digest": "5ec185f5097caca9778ae297c2c7eb27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9898, "upload_time": "2018-06-16T10:35:58", "upload_time_iso_8601": "2018-06-16T10:35:58.142012Z", "url": "https://files.pythonhosted.org/packages/e4/13/d7060206b89ef372d157fdc843c1bef784bd06e6dcc20ab63687962e0415/metapensiero.sphinx.autodoc_sa-2.0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "08729eba9e858f065f87f461bf44ba46", "sha256": "d4429a394ffe239b5f276d1bb0c8080a0b8f6d774819fb1e230318b31298d2fc"}, "downloads": -1, "filename": "metapensiero.sphinx.autodoc_sa-2.1.tar.gz", "has_sig": false, "md5_digest": "08729eba9e858f065f87f461bf44ba46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9588, "upload_time": "2019-03-31T08:25:30", "upload_time_iso_8601": "2019-03-31T08:25:30.024788Z", "url": "https://files.pythonhosted.org/packages/c2/98/cb64f463f30fd387e68c60926847296f8c53e074fdbc45e4fa8bec15b57c/metapensiero.sphinx.autodoc_sa-2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "08729eba9e858f065f87f461bf44ba46", "sha256": "d4429a394ffe239b5f276d1bb0c8080a0b8f6d774819fb1e230318b31298d2fc"}, "downloads": -1, "filename": "metapensiero.sphinx.autodoc_sa-2.1.tar.gz", "has_sig": false, "md5_digest": "08729eba9e858f065f87f461bf44ba46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9588, "upload_time": "2019-03-31T08:25:30", "upload_time_iso_8601": "2019-03-31T08:25:30.024788Z", "url": "https://files.pythonhosted.org/packages/c2/98/cb64f463f30fd387e68c60926847296f8c53e074fdbc45e4fa8bec15b57c/metapensiero.sphinx.autodoc_sa-2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:51 2020"}