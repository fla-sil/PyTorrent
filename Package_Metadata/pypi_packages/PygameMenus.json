{"info": {"author": "Pedro Azevedo", "author_email": "p.costa.azevedo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: pygame"], "description": "# PygameMenus\nMake menus for pygame projects with PygameMenus!\n\nThis packages helps you to not waste time creating menus for games or others pygame projects.\n\nAll you have to do is:\n\n1 - Create and configure the colors of your buttons.\n\n2 - Create and configure as many buttons as you want.\n\n3 - Put them into a matrix (2D list).\n\n4 - Configure the matrix in a block object.\n\n5 - Create and configure a title.\n\n6 - Create and configure as many menus and submenus as you want.\n\n7 - Copy and paste the loop in the examples section of this readme.\n\n8 - Try to merge your project with the menus (This may be the trickiest part :D).\n\n\nIMPORTANT: This package as no documentation available yet. However you can find all the information you need in this readme and in the examples source file in PygameMenus/examples.py :)\n\n## Commands\n\n### Install\n\n```\npy -m pip install PygameMenus\n```\n\n### Upload to PyPI\n\nGo to project root folder\n```\npy setup.py sdist\npy -m twine upload dist/*\n```\n\n### Release new version to PyPI\n\nUpdate version number in setup.py\n```\npy setup.py sdist\npy -m twine upload --skip-existing dist/*\n```\n\n## Buttons\n\n### Press Button\n\n<p align=\"center\"><img src=\"https://github.com/MrComboF10/PygameMenus/blob/master/PygameMenus/images/PressButton.gif?raw=true\"/></p>\n\n```\n# create button\npress_button = PressButton(font, items_list, colors)\n\n# get current item displayed on button\ncurrent_item = press_button.get_current_item()\n```\n\n### Slide Button\n\n<p align=\"center\"><img src=\"https://github.com/MrComboF10/PygameMenus/blob/master/PygameMenus/images/SlideButton.gif?raw=true\"/></p>\n\n```\n# create button\nslide_button = SlideButton(font, bar_width, items_list, colors)\n\n# get current item displayed on button\ncurrent_item = slide_button.get_current_item()\n```\n\n### Redirect Button\n\n<p align=\"center\"><img src=\"https://github.com/MrComboF10/PygameMenus/blob/master/PygameMenus/images/RedirectButton.png?raw=true\"/></p>\n\n```\n# create button\nredirect_button = RedirectButton(font, bar_width, items_list, colors)\n\n# get the state where the button is redirecting to\nnext_state = redirect_button.get_next_state()\n```\n\n## Examples\n\n### Setup button colors\n\n```\nmouse_out_colors = MousePositionButtonColors(button=(0, 255, 255), font=(0, 0, 255), bar=(200, 200, 255))\n\nmouse_over_colors = MousePositionButtonColors(button=(255, 255, 0), font=(255, 0, 0), bar=(255, 165, 0))\n\nbutton_colors = ButtonColors(mouse_over_colors, mouse_out_colors)\n```\n#### Objects\nmouse_out_colors - Colors of the button when the mouse cursor is outside the button area.\n\nmouse_over_colors - Colors of the button when the mouse cursor in inside the button area.\n\nbutton_colors - Colors of the button to be passed to the button object.\n\n#### Parameters\nbutton - Background color of the button.\n\nfont - Color of the font inside button.\n\nbar - Color of the bar inside button (only applied in buttons of type SlideButtons).\n\n### Create button\n\n```\nbutton_font = FloatFont(\"Arial\", 70)\n\nbutton_range = range(101)\n\nslide_button = SlideButton(button_font, 10, button_range, button_colors)\n```\n#### Objects\nbutton_font - font inside button (Object of PygameFloatObjects package).\n\nbutton_range - list of all values that can be displayed on the button (In this case, when the bar is leaning to left the value is 0 and when the bar is leaning to the right the value is 100).\n\nslide_button - type of button which has a slide bar (object of PygameMenus package).\n\n10 - bar width.\n\n### Create buttons block\n\n```\nbuttons_matrix = ((slide_button, slide_button_1, slide_button_2),\n                  (press_button_1,),\n                  (redirect_button_1, redirect_button_1))\n                                 \nblock = Block((500, 500), buttons_matrix, 20, 30)\n```\n#### Objects\nbuttons_matrix - Matrix of buttons that defines where the buttons are displayed in the menu.\n\nblock - Object located under the menu title which contains all the menu buttons and their location.\n\n(500, 500) - Size of the block (x, y).\n\n20 - Horizontal margin between buttons.\n\n30 - Vertical margin between buttons.\n\n### Create title\n\n```\ntitle_font = FloatFont(\"Arial\", 150)\n\ntitle = Title(title_font, (0, 0, 0), \"Main Menu\")\n```\n#### Objects\ntitle_font - Font of the title (object of PygameFloatObjects).\n\n(0, 0, 0) - Color of the title font.\n\n\"Main Menu\" - Text of the title font.\n\n### Create menu\n\n```\nmain_menu = Menu(screen, title, block, 30, (0.80, 0.80), 0.80, \"STATE_MAIN_MENU\")\n```\n#### Objects\nscreen - Pygame screen display object.\n\ntitle - Menu title (PygameMenus object).\n\nblock - Buttons block (PygameMenus object).\n\n30 - Margin between title and block.\n\n(0.80, 0.80) - Horizontal and vertical menu maximum size ratio (used to know the instant of resizing).\n\n0.80 - Resize ratio (How much the menu should resize).\n\n\"STATE_MAIN_MENU\" - String corresponding to the menu state name (used in the loop of the program).\n\n### Create loop\n\n```\nexit_loop = False\ncurrent_state = \"STATE_MAIN_MENU\"\ncurrent_screen_display = screen\n\nwhile not exit_loop:\n\n    if current_state == \"STATE_MAIN_MENU\":\n\n        main_menu.set_screen_display(current_screen_display)\n        main_menu.loop()\n        if main_menu.get_pressed_exit():\n            exit_loop = True\n\n        else:\n            current_state = main_menu.get_next_state()\n            current_screen_display = main_menu.get_screen_display()\n\n        screen.fill((255, 255, 255))\n        pygame.display.update()\n\n    elif current_state == \"STATE_SEC_MENU\":\n\n        sec_menu.set_screen_display(current_screen_display)\n        sec_menu.loop()\n        if sec_menu.get_pressed_exit():\n            exit_loop = True\n\n        else:\n            current_state = sec_menu.get_next_state()\n            current_screen_display = sec_menu.get_screen_display()\n\n        screen.fill((255, 255, 255))\n        pygame.display.update()\n\n    elif current_state == \"STATE_EXIT\":\n        exit_loop = True\n\n    else:\n        print(\"Invalid state!\")\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MrComboF10/PygameMenus", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "PygameMenus", "package_url": "https://pypi.org/project/PygameMenus/", "platform": "", "project_url": "https://pypi.org/project/PygameMenus/", "project_urls": {"Homepage": "https://github.com/MrComboF10/PygameMenus"}, "release_url": "https://pypi.org/project/PygameMenus/0.0.6/", "requires_dist": null, "requires_python": "", "summary": "Make menus with pygame", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PygameMenus</h1>\n<p>Make menus for pygame projects with PygameMenus!</p>\n<p>This packages helps you to not waste time creating menus for games or others pygame projects.</p>\n<p>All you have to do is:</p>\n<p>1 - Create and configure the colors of your buttons.</p>\n<p>2 - Create and configure as many buttons as you want.</p>\n<p>3 - Put them into a matrix (2D list).</p>\n<p>4 - Configure the matrix in a block object.</p>\n<p>5 - Create and configure a title.</p>\n<p>6 - Create and configure as many menus and submenus as you want.</p>\n<p>7 - Copy and paste the loop in the examples section of this readme.</p>\n<p>8 - Try to merge your project with the menus (This may be the trickiest part :D).</p>\n<p>IMPORTANT: This package as no documentation available yet. However you can find all the information you need in this readme and in the examples source file in PygameMenus/examples.py :)</p>\n<h2>Commands</h2>\n<h3>Install</h3>\n<pre><code>py -m pip install PygameMenus\n</code></pre>\n<h3>Upload to PyPI</h3>\n<p>Go to project root folder</p>\n<pre><code>py setup.py sdist\npy -m twine upload dist/*\n</code></pre>\n<h3>Release new version to PyPI</h3>\n<p>Update version number in setup.py</p>\n<pre><code>py setup.py sdist\npy -m twine upload --skip-existing dist/*\n</code></pre>\n<h2>Buttons</h2>\n<h3>Press Button</h3>\n<p align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b1c0a07986a1ba32a0aa61f56b34b8ea17b99191/68747470733a2f2f6769746875622e636f6d2f4d72436f6d626f4631302f507967616d654d656e75732f626c6f622f6d61737465722f507967616d654d656e75732f696d616765732f5072657373427574746f6e2e6769663f7261773d74727565\"></p>\n<pre><code># create button\npress_button = PressButton(font, items_list, colors)\n\n# get current item displayed on button\ncurrent_item = press_button.get_current_item()\n</code></pre>\n<h3>Slide Button</h3>\n<p align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1765456d40296d8c06e879e0829741c8520955e3/68747470733a2f2f6769746875622e636f6d2f4d72436f6d626f4631302f507967616d654d656e75732f626c6f622f6d61737465722f507967616d654d656e75732f696d616765732f536c696465427574746f6e2e6769663f7261773d74727565\"></p>\n<pre><code># create button\nslide_button = SlideButton(font, bar_width, items_list, colors)\n\n# get current item displayed on button\ncurrent_item = slide_button.get_current_item()\n</code></pre>\n<h3>Redirect Button</h3>\n<p align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29958ca93ef19049c85d9ce9237bc8fc289682d5/68747470733a2f2f6769746875622e636f6d2f4d72436f6d626f4631302f507967616d654d656e75732f626c6f622f6d61737465722f507967616d654d656e75732f696d616765732f5265646972656374427574746f6e2e706e673f7261773d74727565\"></p>\n<pre><code># create button\nredirect_button = RedirectButton(font, bar_width, items_list, colors)\n\n# get the state where the button is redirecting to\nnext_state = redirect_button.get_next_state()\n</code></pre>\n<h2>Examples</h2>\n<h3>Setup button colors</h3>\n<pre><code>mouse_out_colors = MousePositionButtonColors(button=(0, 255, 255), font=(0, 0, 255), bar=(200, 200, 255))\n\nmouse_over_colors = MousePositionButtonColors(button=(255, 255, 0), font=(255, 0, 0), bar=(255, 165, 0))\n\nbutton_colors = ButtonColors(mouse_over_colors, mouse_out_colors)\n</code></pre>\n<h4>Objects</h4>\n<p>mouse_out_colors - Colors of the button when the mouse cursor is outside the button area.</p>\n<p>mouse_over_colors - Colors of the button when the mouse cursor in inside the button area.</p>\n<p>button_colors - Colors of the button to be passed to the button object.</p>\n<h4>Parameters</h4>\n<p>button - Background color of the button.</p>\n<p>font - Color of the font inside button.</p>\n<p>bar - Color of the bar inside button (only applied in buttons of type SlideButtons).</p>\n<h3>Create button</h3>\n<pre><code>button_font = FloatFont(\"Arial\", 70)\n\nbutton_range = range(101)\n\nslide_button = SlideButton(button_font, 10, button_range, button_colors)\n</code></pre>\n<h4>Objects</h4>\n<p>button_font - font inside button (Object of PygameFloatObjects package).</p>\n<p>button_range - list of all values that can be displayed on the button (In this case, when the bar is leaning to left the value is 0 and when the bar is leaning to the right the value is 100).</p>\n<p>slide_button - type of button which has a slide bar (object of PygameMenus package).</p>\n<p>10 - bar width.</p>\n<h3>Create buttons block</h3>\n<pre><code>buttons_matrix = ((slide_button, slide_button_1, slide_button_2),\n                  (press_button_1,),\n                  (redirect_button_1, redirect_button_1))\n                                 \nblock = Block((500, 500), buttons_matrix, 20, 30)\n</code></pre>\n<h4>Objects</h4>\n<p>buttons_matrix - Matrix of buttons that defines where the buttons are displayed in the menu.</p>\n<p>block - Object located under the menu title which contains all the menu buttons and their location.</p>\n<p>(500, 500) - Size of the block (x, y).</p>\n<p>20 - Horizontal margin between buttons.</p>\n<p>30 - Vertical margin between buttons.</p>\n<h3>Create title</h3>\n<pre><code>title_font = FloatFont(\"Arial\", 150)\n\ntitle = Title(title_font, (0, 0, 0), \"Main Menu\")\n</code></pre>\n<h4>Objects</h4>\n<p>title_font - Font of the title (object of PygameFloatObjects).</p>\n<p>(0, 0, 0) - Color of the title font.</p>\n<p>\"Main Menu\" - Text of the title font.</p>\n<h3>Create menu</h3>\n<pre><code>main_menu = Menu(screen, title, block, 30, (0.80, 0.80), 0.80, \"STATE_MAIN_MENU\")\n</code></pre>\n<h4>Objects</h4>\n<p>screen - Pygame screen display object.</p>\n<p>title - Menu title (PygameMenus object).</p>\n<p>block - Buttons block (PygameMenus object).</p>\n<p>30 - Margin between title and block.</p>\n<p>(0.80, 0.80) - Horizontal and vertical menu maximum size ratio (used to know the instant of resizing).</p>\n<p>0.80 - Resize ratio (How much the menu should resize).</p>\n<p>\"STATE_MAIN_MENU\" - String corresponding to the menu state name (used in the loop of the program).</p>\n<h3>Create loop</h3>\n<pre><code>exit_loop = False\ncurrent_state = \"STATE_MAIN_MENU\"\ncurrent_screen_display = screen\n\nwhile not exit_loop:\n\n    if current_state == \"STATE_MAIN_MENU\":\n\n        main_menu.set_screen_display(current_screen_display)\n        main_menu.loop()\n        if main_menu.get_pressed_exit():\n            exit_loop = True\n\n        else:\n            current_state = main_menu.get_next_state()\n            current_screen_display = main_menu.get_screen_display()\n\n        screen.fill((255, 255, 255))\n        pygame.display.update()\n\n    elif current_state == \"STATE_SEC_MENU\":\n\n        sec_menu.set_screen_display(current_screen_display)\n        sec_menu.loop()\n        if sec_menu.get_pressed_exit():\n            exit_loop = True\n\n        else:\n            current_state = sec_menu.get_next_state()\n            current_screen_display = sec_menu.get_screen_display()\n\n        screen.fill((255, 255, 255))\n        pygame.display.update()\n\n    elif current_state == \"STATE_EXIT\":\n        exit_loop = True\n\n    else:\n        print(\"Invalid state!\")\n</code></pre>\n\n          </div>"}, "last_serial": 6555016, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "45dfb7b3c892d807813ccdda58491fea", "sha256": "4b565c57c3b30094c181eeed7d72439f085ea264b247cec074005bfc36509f51"}, "downloads": -1, "filename": "PygameMenus-0.0.1.tar.gz", "has_sig": false, "md5_digest": "45dfb7b3c892d807813ccdda58491fea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9487, "upload_time": "2020-01-28T13:43:02", "upload_time_iso_8601": "2020-01-28T13:43:02.226554Z", "url": "https://files.pythonhosted.org/packages/ac/3b/2623a88694f5cb32c843e4490a48bbc9018aa649c0a8b34c33407683bada/PygameMenus-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "7adecdce420ca96e58bb307cabf2addb", "sha256": "6c6e39dd309722c1668098e1c796efce102342a74eb5bed08f32c5bbcdd79a7e"}, "downloads": -1, "filename": "PygameMenus-0.0.2.tar.gz", "has_sig": false, "md5_digest": "7adecdce420ca96e58bb307cabf2addb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9486, "upload_time": "2020-02-01T09:20:24", "upload_time_iso_8601": "2020-02-01T09:20:24.123035Z", "url": "https://files.pythonhosted.org/packages/7b/99/8a97ba73e1b33d3ae5330c7a6f6827ba4cca81895ce144e0006395ef5f69/PygameMenus-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ef7c2c32ea5f02aeddd1bf47d2af9014", "sha256": "262d81767918ef90d62990ca05661173ccba77de7d7cc212e970a895c5f29373"}, "downloads": -1, "filename": "PygameMenus-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ef7c2c32ea5f02aeddd1bf47d2af9014", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12119, "upload_time": "2020-02-01T09:28:25", "upload_time_iso_8601": "2020-02-01T09:28:25.129364Z", "url": "https://files.pythonhosted.org/packages/24/8e/6359d3d2de4982ff3a5004894a2325f87f219d98e287acbdf849b120b472/PygameMenus-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "00814044aed1315925f3b0b5927396e4", "sha256": "bb86ec61e9ff533e269db973764520befdd37a4326972a4a25048c5dab04ee9d"}, "downloads": -1, "filename": "PygameMenus-0.0.4.tar.gz", "has_sig": false, "md5_digest": "00814044aed1315925f3b0b5927396e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13042, "upload_time": "2020-02-01T09:34:33", "upload_time_iso_8601": "2020-02-01T09:34:33.032841Z", "url": "https://files.pythonhosted.org/packages/06/ed/ca777e35a1ea438906ba25de0848da06396c0c5eca8005bb443df3c46f71/PygameMenus-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "3dfe3d4b68446e56c14f8c6f36b4293d", "sha256": "311b08ea3de035797f923f44094092ff32e48cbd2736a5984964939944ce0f11"}, "downloads": -1, "filename": "PygameMenus-0.0.5.tar.gz", "has_sig": false, "md5_digest": "3dfe3d4b68446e56c14f8c6f36b4293d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13527, "upload_time": "2020-02-01T16:53:52", "upload_time_iso_8601": "2020-02-01T16:53:52.531159Z", "url": "https://files.pythonhosted.org/packages/b6/fb/4dd175e9f51c6c2cefa7b9af49ad1c2ae47f5dbe9c53e65f28127b56646a/PygameMenus-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "52f31b503c3aad440e4262c6593a63b3", "sha256": "05d4340557e1b0c3d2777bdd54a13428d0aee9ee2f2e28f085754c52440b526f"}, "downloads": -1, "filename": "PygameMenus-0.0.6.tar.gz", "has_sig": false, "md5_digest": "52f31b503c3aad440e4262c6593a63b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14230, "upload_time": "2020-02-01T17:24:33", "upload_time_iso_8601": "2020-02-01T17:24:33.617363Z", "url": "https://files.pythonhosted.org/packages/69/53/0681d9a8b530bfe5bc39e954e7f8ded57719789e3a17e17d7eeb5245d6ee/PygameMenus-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "52f31b503c3aad440e4262c6593a63b3", "sha256": "05d4340557e1b0c3d2777bdd54a13428d0aee9ee2f2e28f085754c52440b526f"}, "downloads": -1, "filename": "PygameMenus-0.0.6.tar.gz", "has_sig": false, "md5_digest": "52f31b503c3aad440e4262c6593a63b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14230, "upload_time": "2020-02-01T17:24:33", "upload_time_iso_8601": "2020-02-01T17:24:33.617363Z", "url": "https://files.pythonhosted.org/packages/69/53/0681d9a8b530bfe5bc39e954e7f8ded57719789e3a17e17d7eeb5245d6ee/PygameMenus-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:19 2020"}