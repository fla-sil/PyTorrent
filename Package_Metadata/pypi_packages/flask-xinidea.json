{"info": {"author": "phiix", "author_email": "phiix@qq.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Flask XinIDEA\n\nSome Flask custom extension\n\n- redprint\n- reflectdb\n\n### Install\n\n```\npip install --index-url https://test.pypi.org/simple/ --no-deps -U flask-xinidea\n```\n\n\n### Redprint\n\n- Usage\n\n```python\nfrom flask import Flask\nfrom flask import Blueprint\nfrom flask_xinidea.redprint import Redprint\n\napp = Flask(__name__)\nbp = Blueprint('test', __name__)\ntest = Redprint(bp, url_prefix='/test')\n\n\n@test.route('')\ndef index():\n    return 'this is a test'\n\n\napp.register_blueprint(bp)\n\nif __name__ == \"__main__\":\n    app.run()\n\n```\n\n- Test\n```\nflask run\nflask routes\ncurl http://127.0.0.1:5000/test\n```\n\n### ReflectDB\n\n- Usage\n```python\nfrom flask import Flask\nfrom flask import Blueprint\nfrom flask_xinidea.redprint import Redprint\nfrom flask_xinidea.reflectdb import ReflectDB\n\nsettings = dict(\n    SQLALCHEMY_TRACK_MODIFICATIONS=False,\n    SQLALCHEMY_DATABASE_URI='mysql+cymysql://localhost/temp',\n    SQLALCHEMY_BINDS={\n        'test': 'mysql+cymysql://localhost/test'\n    }\n)\n\napp = Flask(__name__)\napp.config.from_mapping(settings)\n\nbp = Blueprint('test', __name__)\ntest = Redprint(bp, url_prefix='/test')\n\n# the test is the SQLALCHEMY_BINDS key or\n# a SQLALCHEMY_DATABASE_URI like 'mysql://localhost/temp'\n\ntestdb = ReflectDB('test', app)\n# testdb = ReflectDB('mysql://localhost/temp')\nUser = testdb.get_table('users')\n\n@test.route('')\ndef index():\n    return 'this is a test'\n\n\n@test.route('/users/<int:id>')\ndef get_user(id):\n    user = User.query.get(id)\n    if user:\n        return user.name\n    else:\n        return 'Not exists'\n\n\napp.register_blueprint(bp)\n\nif __name__ == \"__main__\":\n    app.run()\n\n```\n\n- Test\n\n```\nflask routes\nflask run\ncurl http://127.0.0.1:5000/test/users/user:id\n```\n\n----------\n2019-11-29 by phiix\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "flask-xinidea", "package_url": "https://pypi.org/project/flask-xinidea/", "platform": "", "project_url": "https://pypi.org/project/flask-xinidea/", "project_urls": null, "release_url": "https://pypi.org/project/flask-xinidea/0.0.4/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Some Flask custom extension", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flask XinIDEA</h1>\n<p>Some Flask custom extension</p>\n<ul>\n<li>redprint</li>\n<li>reflectdb</li>\n</ul>\n<h3>Install</h3>\n<pre><code>pip install --index-url https://test.pypi.org/simple/ --no-deps -U flask-xinidea\n</code></pre>\n<h3>Redprint</h3>\n<ul>\n<li>Usage</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Blueprint</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_xinidea.redprint</span> <span class=\"kn\">import</span> <span class=\"n\">Redprint</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">bp</span> <span class=\"o\">=</span> <span class=\"n\">Blueprint</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">,</span> <span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">Redprint</span><span class=\"p\">(</span><span class=\"n\">bp</span><span class=\"p\">,</span> <span class=\"n\">url_prefix</span><span class=\"o\">=</span><span class=\"s1\">'/test'</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@test</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'this is a test'</span>\n\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">register_blueprint</span><span class=\"p\">(</span><span class=\"n\">bp</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Test</li>\n</ul>\n<pre><code>flask run\nflask routes\ncurl http://127.0.0.1:5000/test\n</code></pre>\n<h3>ReflectDB</h3>\n<ul>\n<li>Usage</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Blueprint</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_xinidea.redprint</span> <span class=\"kn\">import</span> <span class=\"n\">Redprint</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_xinidea.reflectdb</span> <span class=\"kn\">import</span> <span class=\"n\">ReflectDB</span>\n\n<span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"n\">SQLALCHEMY_TRACK_MODIFICATIONS</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">SQLALCHEMY_DATABASE_URI</span><span class=\"o\">=</span><span class=\"s1\">'mysql+cymysql://localhost/temp'</span><span class=\"p\">,</span>\n    <span class=\"n\">SQLALCHEMY_BINDS</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'test'</span><span class=\"p\">:</span> <span class=\"s1\">'mysql+cymysql://localhost/test'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_mapping</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">)</span>\n\n<span class=\"n\">bp</span> <span class=\"o\">=</span> <span class=\"n\">Blueprint</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">,</span> <span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">Redprint</span><span class=\"p\">(</span><span class=\"n\">bp</span><span class=\"p\">,</span> <span class=\"n\">url_prefix</span><span class=\"o\">=</span><span class=\"s1\">'/test'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># the test is the SQLALCHEMY_BINDS key or</span>\n<span class=\"c1\"># a SQLALCHEMY_DATABASE_URI like 'mysql://localhost/temp'</span>\n\n<span class=\"n\">testdb</span> <span class=\"o\">=</span> <span class=\"n\">ReflectDB</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"c1\"># testdb = ReflectDB('mysql://localhost/temp')</span>\n<span class=\"n\">User</span> <span class=\"o\">=</span> <span class=\"n\">testdb</span><span class=\"o\">.</span><span class=\"n\">get_table</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@test</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'this is a test'</span>\n\n\n<span class=\"nd\">@test</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/users/&lt;int:id&gt;'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_user</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">):</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">user</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">name</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'Not exists'</span>\n\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">register_blueprint</span><span class=\"p\">(</span><span class=\"n\">bp</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Test</li>\n</ul>\n<pre><code>flask routes\nflask run\ncurl http://127.0.0.1:5000/test/users/user:id\n</code></pre>\n<hr>\n<p>2019-11-29 by phiix</p>\n\n          </div>"}, "last_serial": 6216914, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "cfa27568068e7e684a29f29101cc687a", "sha256": "797154d5573a60a72f10f1de09c1dd5f91473fbad83238822f8e4a7cb2999828"}, "downloads": -1, "filename": "flask_xinidea-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "cfa27568068e7e684a29f29101cc687a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3886, "upload_time": "2019-11-29T06:48:13", "upload_time_iso_8601": "2019-11-29T06:48:13.722614Z", "url": "https://files.pythonhosted.org/packages/89/60/a935cbc19578e263439b1bec7ddd5ba858a0d32981b03c91e6819587a1bd/flask_xinidea-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ab1bb5c9d115e5cb4c974efa6211e07", "sha256": "4f407446dbf9ea0cc4c4780bf44fb026ca1d5a30a2a1dd6ac5f4a587ce64afae"}, "downloads": -1, "filename": "flask-xinidea-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0ab1bb5c9d115e5cb4c974efa6211e07", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2230, "upload_time": "2019-11-29T06:48:15", "upload_time_iso_8601": "2019-11-29T06:48:15.914779Z", "url": "https://files.pythonhosted.org/packages/b6/bb/ce6c3ee214a31d4e6ab00bd29c32a3a5d5fa89a7675bf0c456771e41729f/flask-xinidea-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cfa27568068e7e684a29f29101cc687a", "sha256": "797154d5573a60a72f10f1de09c1dd5f91473fbad83238822f8e4a7cb2999828"}, "downloads": -1, "filename": "flask_xinidea-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "cfa27568068e7e684a29f29101cc687a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3886, "upload_time": "2019-11-29T06:48:13", "upload_time_iso_8601": "2019-11-29T06:48:13.722614Z", "url": "https://files.pythonhosted.org/packages/89/60/a935cbc19578e263439b1bec7ddd5ba858a0d32981b03c91e6819587a1bd/flask_xinidea-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ab1bb5c9d115e5cb4c974efa6211e07", "sha256": "4f407446dbf9ea0cc4c4780bf44fb026ca1d5a30a2a1dd6ac5f4a587ce64afae"}, "downloads": -1, "filename": "flask-xinidea-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0ab1bb5c9d115e5cb4c974efa6211e07", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2230, "upload_time": "2019-11-29T06:48:15", "upload_time_iso_8601": "2019-11-29T06:48:15.914779Z", "url": "https://files.pythonhosted.org/packages/b6/bb/ce6c3ee214a31d4e6ab00bd29c32a3a5d5fa89a7675bf0c456771e41729f/flask-xinidea-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:06 2020"}