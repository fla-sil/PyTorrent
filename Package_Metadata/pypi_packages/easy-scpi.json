{"info": {"author": "Brian Carlsen", "author_email": "carlsen.bri@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Easy SCPI\nA simple and robust library making communication with [SCPI](https://en.wikipedia.org/wiki/Standard_Commands_for_Programmable_Instruments) (Standard Control of Programmbale Instruments) instruments easy. After creating an instrument object that connects to an actual instrument, commands are sent to the instrument using a property-like format. This class is useful for inheritance when creating a controller for a specific instrument. Communication with instruments is done with [PyVISA](https://pyvisa.readthedocs.io).\n\n> Install with `python -m pip install easy-scpi`\n\n## API\n### SCPI Commands\nGeneric SCPI commands can be executed by transforming the SCPI code in to attributes via the hierarchy relationship, then calling it. Instrument properties can be queried by passing no arguments to the call. Commands with no arguments are run by passing an empty string to the call.\n\n#### Examples\n~~~python\n# import package\nimport easy_scpi as scpi \n\n# Connect to an instrument\ninst = scpi.Instrument( <port> )\n\n# Read the voltage [MEASure:VOLTage:DC?]\ninst.measure.voltage.dc()\n# or\ninst.meas.volt.dc()\n\n# Set the voltage to 1 V [MEASure:VOLTage:DC 1]\ninst.measure.voltage.dc( 1 )\n# or\ninst.source.voltage( '1' )\n\n# Execute a command to take a reading [SYSTem:ZCORrect:ACQuire]\ninst.syst.zcor.aqc( '' )\n~~~\n\n\n### Methods\n**Instrument( &lt;port&gt;, backend = '', \\*\\*resource_params ):** Creates an instance of a SCPI instrument. The **backend** is used to create the [VISA Resource Manager](https://pyvisa.readthedocs.io/en/latest/introduction/getting.html#backend). Upon connection, the **resource_params** are passed to the [VISA resource](https://pyvisa.readthedocs.io/en/latest/introduction/resources.html).\n\n**connect():** Connects the object instance to the actual instrument on the specified port.\n\n**disconnect():** Disconnects the instrument from the program, closing the port.\n\n**write( &lt;msg&gt; ):** Sends **msg** to the instrument.\n\n**read():** Gets the most recent response from the instrument.\n\n**query( &lt;msg&gt; ):** Sends **msg** to the instrument and returns its response.\n\n**reset():** Sets the instrument to its default state.\n\n**init():** Initializes the instrument for a measurement.\n\n### Properties\n**backend:** Returns the name of the VISA backend used. [Read Only]\n\n**inst:** Returns the resource used by the instance. [Read Only]\n\n**port:** The communication port.\n\n**rid:** The resource id associated with the instrument. [Read Only]\n\n**resource_params:** Returns the resource parameters passed on creation. [Read Only]\n\n**timeout:** The communication timeout of the instrument. [Read Only]\n\n**id:** The manufacturer id of the instrument. [Read Only]\n\n**value:** The current value of the instrument. [Read Only]\n\n**connected:** Whether the instrument is connected or not. [Read Only]\n\n**is_connected:** Alias for **connected**.\n\n## Full Example\n#### For use with Tektronix PWS4305\n~~~python\n# scpi controller\nimport easy_scpi as scpi\n\nclass PowerSupply( scpi.Instrument ):\n\n    def __init__( self ):\n        scpi.SCPI_Instrument.__init__( \n            self, \n            port = None, \n            timeout = 5,\n            read_termination = '\\n', \n            write_termination = '\\n' \n        )\n\n        # other initialization code...\n\n\n    #--- public methods ---\n\n\n    @property        \n    def voltage( self ):\n        \"\"\"\n        Returns the voltage setting\n        \"\"\"\n        return self.source.volt.level()\n\n\n    @voltage.setter\n    def voltage( self, volts ):\n        \"\"\"\n        Sets the voltage of the instrument\n        \"\"\"\n        self.source.volt.level( volts )\n\n\n    @property\n    def current( self ):\n        \"\"\"\n        Returns the current setting in Amps\n        \"\"\"\n        return self.source.current.level()\n\n\n    @current.setter\n    def current( self, amps ):\n        \"\"\"\n        Set the current of the instrument\n        \"\"\"\n        self.source.current.level( amps )\n\n\n    def on( self ):\n        \"\"\"\n        Turns the output on\n        \"\"\"\n        self.output.state( 'on' )\n\n\n    def off( self):\n        \"\"\"\n        Turns the output off\n        \"\"\"\n        self.output.state( 'off' )\n\n~~~\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bicarlsen/easy-scpi", "keywords": "scpi", "license": "", "maintainer": "", "maintainer_email": "", "name": "easy-scpi", "package_url": "https://pypi.org/project/easy-scpi/", "platform": "", "project_url": "https://pypi.org/project/easy-scpi/", "project_urls": {"Homepage": "https://github.com/bicarlsen/easy-scpi"}, "release_url": "https://pypi.org/project/easy-scpi/0.0.8/", "requires_dist": ["PyVISA"], "requires_python": "", "summary": "An easy library for controlling SCPI instruments", "version": "0.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Easy SCPI</h1>\n<p>A simple and robust library making communication with <a href=\"https://en.wikipedia.org/wiki/Standard_Commands_for_Programmable_Instruments\" rel=\"nofollow\">SCPI</a> (Standard Control of Programmbale Instruments) instruments easy. After creating an instrument object that connects to an actual instrument, commands are sent to the instrument using a property-like format. This class is useful for inheritance when creating a controller for a specific instrument. Communication with instruments is done with <a href=\"https://pyvisa.readthedocs.io\" rel=\"nofollow\">PyVISA</a>.</p>\n<blockquote>\n<p>Install with <code>python -m pip install easy-scpi</code></p>\n</blockquote>\n<h2>API</h2>\n<h3>SCPI Commands</h3>\n<p>Generic SCPI commands can be executed by transforming the SCPI code in to attributes via the hierarchy relationship, then calling it. Instrument properties can be queried by passing no arguments to the call. Commands with no arguments are run by passing an empty string to the call.</p>\n<h4>Examples</h4>\n<pre><span class=\"c1\"># import package</span>\n<span class=\"kn\">import</span> <span class=\"nn\">easy_scpi</span> <span class=\"k\">as</span> <span class=\"nn\">scpi</span> \n\n<span class=\"c1\"># Connect to an instrument</span>\n<span class=\"n\">inst</span> <span class=\"o\">=</span> <span class=\"n\">scpi</span><span class=\"o\">.</span><span class=\"n\">Instrument</span><span class=\"p\">(</span> <span class=\"o\">&lt;</span><span class=\"n\">port</span><span class=\"o\">&gt;</span> <span class=\"p\">)</span>\n\n<span class=\"c1\"># Read the voltage [MEASure:VOLTage:DC?]</span>\n<span class=\"n\">inst</span><span class=\"o\">.</span><span class=\"n\">measure</span><span class=\"o\">.</span><span class=\"n\">voltage</span><span class=\"o\">.</span><span class=\"n\">dc</span><span class=\"p\">()</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">inst</span><span class=\"o\">.</span><span class=\"n\">meas</span><span class=\"o\">.</span><span class=\"n\">volt</span><span class=\"o\">.</span><span class=\"n\">dc</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Set the voltage to 1 V [MEASure:VOLTage:DC 1]</span>\n<span class=\"n\">inst</span><span class=\"o\">.</span><span class=\"n\">measure</span><span class=\"o\">.</span><span class=\"n\">voltage</span><span class=\"o\">.</span><span class=\"n\">dc</span><span class=\"p\">(</span> <span class=\"mi\">1</span> <span class=\"p\">)</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">inst</span><span class=\"o\">.</span><span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">voltage</span><span class=\"p\">(</span> <span class=\"s1\">'1'</span> <span class=\"p\">)</span>\n\n<span class=\"c1\"># Execute a command to take a reading [SYSTem:ZCORrect:ACQuire]</span>\n<span class=\"n\">inst</span><span class=\"o\">.</span><span class=\"n\">syst</span><span class=\"o\">.</span><span class=\"n\">zcor</span><span class=\"o\">.</span><span class=\"n\">aqc</span><span class=\"p\">(</span> <span class=\"s1\">''</span> <span class=\"p\">)</span>\n</pre>\n<h3>Methods</h3>\n<p><strong>Instrument( &lt;port&gt;, backend = '', **resource_params ):</strong> Creates an instance of a SCPI instrument. The <strong>backend</strong> is used to create the <a href=\"https://pyvisa.readthedocs.io/en/latest/introduction/getting.html#backend\" rel=\"nofollow\">VISA Resource Manager</a>. Upon connection, the <strong>resource_params</strong> are passed to the <a href=\"https://pyvisa.readthedocs.io/en/latest/introduction/resources.html\" rel=\"nofollow\">VISA resource</a>.</p>\n<p><strong>connect():</strong> Connects the object instance to the actual instrument on the specified port.</p>\n<p><strong>disconnect():</strong> Disconnects the instrument from the program, closing the port.</p>\n<p><strong>write( &lt;msg&gt; ):</strong> Sends <strong>msg</strong> to the instrument.</p>\n<p><strong>read():</strong> Gets the most recent response from the instrument.</p>\n<p><strong>query( &lt;msg&gt; ):</strong> Sends <strong>msg</strong> to the instrument and returns its response.</p>\n<p><strong>reset():</strong> Sets the instrument to its default state.</p>\n<p><strong>init():</strong> Initializes the instrument for a measurement.</p>\n<h3>Properties</h3>\n<p><strong>backend:</strong> Returns the name of the VISA backend used. [Read Only]</p>\n<p><strong>inst:</strong> Returns the resource used by the instance. [Read Only]</p>\n<p><strong>port:</strong> The communication port.</p>\n<p><strong>rid:</strong> The resource id associated with the instrument. [Read Only]</p>\n<p><strong>resource_params:</strong> Returns the resource parameters passed on creation. [Read Only]</p>\n<p><strong>timeout:</strong> The communication timeout of the instrument. [Read Only]</p>\n<p><strong>id:</strong> The manufacturer id of the instrument. [Read Only]</p>\n<p><strong>value:</strong> The current value of the instrument. [Read Only]</p>\n<p><strong>connected:</strong> Whether the instrument is connected or not. [Read Only]</p>\n<p><strong>is_connected:</strong> Alias for <strong>connected</strong>.</p>\n<h2>Full Example</h2>\n<h4>For use with Tektronix PWS4305</h4>\n<pre><span class=\"c1\"># scpi controller</span>\n<span class=\"kn\">import</span> <span class=\"nn\">easy_scpi</span> <span class=\"k\">as</span> <span class=\"nn\">scpi</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">PowerSupply</span><span class=\"p\">(</span> <span class=\"n\">scpi</span><span class=\"o\">.</span><span class=\"n\">Instrument</span> <span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span> <span class=\"bp\">self</span> <span class=\"p\">):</span>\n        <span class=\"n\">scpi</span><span class=\"o\">.</span><span class=\"n\">SCPI_Instrument</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span> \n            <span class=\"bp\">self</span><span class=\"p\">,</span> \n            <span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> \n            <span class=\"n\">timeout</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n            <span class=\"n\">read_termination</span> <span class=\"o\">=</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">,</span> \n            <span class=\"n\">write_termination</span> <span class=\"o\">=</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span> \n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># other initialization code...</span>\n\n\n    <span class=\"c1\">#--- public methods ---</span>\n\n\n    <span class=\"nd\">@property</span>        \n    <span class=\"k\">def</span> <span class=\"nf\">voltage</span><span class=\"p\">(</span> <span class=\"bp\">self</span> <span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Returns the voltage setting</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">volt</span><span class=\"o\">.</span><span class=\"n\">level</span><span class=\"p\">()</span>\n\n\n    <span class=\"nd\">@voltage</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">voltage</span><span class=\"p\">(</span> <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">volts</span> <span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Sets the voltage of the instrument</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">volt</span><span class=\"o\">.</span><span class=\"n\">level</span><span class=\"p\">(</span> <span class=\"n\">volts</span> <span class=\"p\">)</span>\n\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">current</span><span class=\"p\">(</span> <span class=\"bp\">self</span> <span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Returns the current setting in Amps</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">current</span><span class=\"o\">.</span><span class=\"n\">level</span><span class=\"p\">()</span>\n\n\n    <span class=\"nd\">@current</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">current</span><span class=\"p\">(</span> <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">amps</span> <span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Set the current of the instrument</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">current</span><span class=\"o\">.</span><span class=\"n\">level</span><span class=\"p\">(</span> <span class=\"n\">amps</span> <span class=\"p\">)</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">on</span><span class=\"p\">(</span> <span class=\"bp\">self</span> <span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Turns the output on</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">(</span> <span class=\"s1\">'on'</span> <span class=\"p\">)</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">off</span><span class=\"p\">(</span> <span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Turns the output off</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">(</span> <span class=\"s1\">'off'</span> <span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5708332, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "760104ae564431fb2a6d8fc43c405e7f", "sha256": "25c9c1378e8a7c968e0de373482d1219bc31665db133c36ec3dafba1c8c827ee"}, "downloads": -1, "filename": "easy_scpi-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "760104ae564431fb2a6d8fc43c405e7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14740, "upload_time": "2019-02-23T21:01:37", "upload_time_iso_8601": "2019-02-23T21:01:37.093430Z", "url": "https://files.pythonhosted.org/packages/50/f0/49a7a516e980150438a61810389e617e8ba3feea8c0d74be760cf773c322/easy_scpi-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "39fdccddc69b24eb469480cf104909b6", "sha256": "861d9611f8605e841dce3a12483eb802742e66d1a07a7d266a378bcc8a18eec1"}, "downloads": -1, "filename": "easy_scpi-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "39fdccddc69b24eb469480cf104909b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14746, "upload_time": "2019-08-16T11:01:50", "upload_time_iso_8601": "2019-08-16T11:01:50.022286Z", "url": "https://files.pythonhosted.org/packages/3e/c0/1390ce7c156c8e76b830be6a1d615ab055f7c5e94c161cf06ae1e7f71764/easy_scpi-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9a5af1c459193d89416738bce902d05", "sha256": "6af032fcfe50bd216447a1fe09519bfa749283bf1b66d4c5e72125b524eed6c6"}, "downloads": -1, "filename": "easy-scpi-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e9a5af1c459193d89416738bce902d05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2700, "upload_time": "2019-08-16T12:34:14", "upload_time_iso_8601": "2019-08-16T12:34:14.267280Z", "url": "https://files.pythonhosted.org/packages/91/e2/fecc0953fa67a5186be5e68e93d4d9f293ab572fbccd358bc1fc8e2d8aff/easy-scpi-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0a682141d9e91161b2421c4ba89b36eb", "sha256": "ad7d86a2e66930ffcb7b24e542f355015acb211e108f41d53b651e50cd34e87e"}, "downloads": -1, "filename": "easy_scpi-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0a682141d9e91161b2421c4ba89b36eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14977, "upload_time": "2019-08-16T12:35:13", "upload_time_iso_8601": "2019-08-16T12:35:13.809132Z", "url": "https://files.pythonhosted.org/packages/e0/11/62115114d3cee879e80ee68165f2d83ed65172cc46777ece00cb8b716db8/easy_scpi-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "445511acbcb7724a16886e3d8a973030", "sha256": "5f5ddee1105283423734e0ffcb9e569b011079bed297a840324b0ec0a1ed1405"}, "downloads": -1, "filename": "easy-scpi-0.0.3.tar.gz", "has_sig": false, "md5_digest": "445511acbcb7724a16886e3d8a973030", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2996, "upload_time": "2019-08-16T12:35:16", "upload_time_iso_8601": "2019-08-16T12:35:16.084611Z", "url": "https://files.pythonhosted.org/packages/1b/29/de77b7f1aa129e5e60ec29cb9f2f9bdc64839fc571d5760185b7f0e6427e/easy-scpi-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "f1ac996bb36dc945e1397646e81356c4", "sha256": "b23d44eb8dea55716f2d825d7fc4db3636f700e23ccfc63ec300d232242fee21"}, "downloads": -1, "filename": "easy_scpi-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f1ac996bb36dc945e1397646e81356c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14990, "upload_time": "2019-08-16T12:48:54", "upload_time_iso_8601": "2019-08-16T12:48:54.519389Z", "url": "https://files.pythonhosted.org/packages/ba/9e/f45f54330ab9003fc0bab34564f20640b7e1c016bc6b6ff793bb36cd9fa3/easy_scpi-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4893b70cdc3bd3aeda6b3892b3bd8316", "sha256": "5f85ff5a4ff738c3efff9980245cc4f6004bea161dca1e39b192a5c39f9ee90e"}, "downloads": -1, "filename": "easy-scpi-0.0.4.tar.gz", "has_sig": false, "md5_digest": "4893b70cdc3bd3aeda6b3892b3bd8316", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3018, "upload_time": "2019-08-16T12:48:57", "upload_time_iso_8601": "2019-08-16T12:48:57.394128Z", "url": "https://files.pythonhosted.org/packages/2d/f9/fc35de049dfa74600b4529f4c3cca274749ec141589005b94d8a583227db/easy-scpi-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "def7c78a238a542990f5eaaffaabf651", "sha256": "295c084d3f1588eada2de879166e799c25960b5f05636e9d89a7dbeea55d4147"}, "downloads": -1, "filename": "easy_scpi-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "def7c78a238a542990f5eaaffaabf651", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18377, "upload_time": "2019-08-21T09:57:11", "upload_time_iso_8601": "2019-08-21T09:57:11.524670Z", "url": "https://files.pythonhosted.org/packages/21/2d/6db09e49202455de19898e76be9a78a34a91a7961e3a6587d23acbc93392/easy_scpi-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9be7aa6047ca4c4c83a779b7f6c082b7", "sha256": "9b3c10c7729319c8e4c96ce0f45872fd309653079dc56e7ee4c158f052843a8c"}, "downloads": -1, "filename": "easy-scpi-0.0.5.tar.gz", "has_sig": false, "md5_digest": "9be7aa6047ca4c4c83a779b7f6c082b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5451, "upload_time": "2019-08-21T09:57:14", "upload_time_iso_8601": "2019-08-21T09:57:14.595359Z", "url": "https://files.pythonhosted.org/packages/cc/62/078d324f6b75c45b9a450ad1283e01b06d4098b49887ec39381ca497d651/easy-scpi-0.0.5.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "4042af1ad6f9916e1c5cfcfc684ceb34", "sha256": "f113410d0d8a9738f55136e2cfad451c42b5f9309ff65cfc8bd86267b4690699"}, "downloads": -1, "filename": "easy_scpi-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "4042af1ad6f9916e1c5cfcfc684ceb34", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18330, "upload_time": "2019-08-21T09:57:13", "upload_time_iso_8601": "2019-08-21T09:57:13.285919Z", "url": "https://files.pythonhosted.org/packages/8d/f1/d1f6c136762a508fb7f0779a9e1d1dd3864add234d82fea6d04985ca73d2/easy_scpi-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf909e365ec97717023e4108e0050689", "sha256": "09733d13884059df1da17d93ccebf7a77fc32882f638a33686674d7817899f62"}, "downloads": -1, "filename": "easy-scpi-0.0.7.tar.gz", "has_sig": false, "md5_digest": "cf909e365ec97717023e4108e0050689", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5424, "upload_time": "2019-08-21T09:57:16", "upload_time_iso_8601": "2019-08-21T09:57:16.027559Z", "url": "https://files.pythonhosted.org/packages/86/85/f57e11ac1f67ab772498cd082f2bbec0266f42073b9caa517e11cc6d1846/easy-scpi-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "611a4bcaca8d02e1c341fd8c920bf1bb", "sha256": "1c2f9e7aa64a9559d0815ea739cba24eb90b591ee276d0855ecb71e14723e87a"}, "downloads": -1, "filename": "easy_scpi-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "611a4bcaca8d02e1c341fd8c920bf1bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18364, "upload_time": "2019-08-21T09:58:18", "upload_time_iso_8601": "2019-08-21T09:58:18.949099Z", "url": "https://files.pythonhosted.org/packages/f4/3e/eb56d6a705d5b83f16a2b4522b50a1779da7e858a94efde163a831bbdcea/easy_scpi-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "103e27f9e820c0bc32f210bd8ef66cce", "sha256": "bf6da964c2954e1157fb8d49eb376e589d5a4101ae834128ebdf934fed0c8600"}, "downloads": -1, "filename": "easy-scpi-0.0.8.tar.gz", "has_sig": false, "md5_digest": "103e27f9e820c0bc32f210bd8ef66cce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5423, "upload_time": "2019-08-21T09:58:21", "upload_time_iso_8601": "2019-08-21T09:58:21.694477Z", "url": "https://files.pythonhosted.org/packages/d3/d4/e03ddcbfd4052805e509ed030a9107a970b7e741effd056d0aa63cd7de12/easy-scpi-0.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "611a4bcaca8d02e1c341fd8c920bf1bb", "sha256": "1c2f9e7aa64a9559d0815ea739cba24eb90b591ee276d0855ecb71e14723e87a"}, "downloads": -1, "filename": "easy_scpi-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "611a4bcaca8d02e1c341fd8c920bf1bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18364, "upload_time": "2019-08-21T09:58:18", "upload_time_iso_8601": "2019-08-21T09:58:18.949099Z", "url": "https://files.pythonhosted.org/packages/f4/3e/eb56d6a705d5b83f16a2b4522b50a1779da7e858a94efde163a831bbdcea/easy_scpi-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "103e27f9e820c0bc32f210bd8ef66cce", "sha256": "bf6da964c2954e1157fb8d49eb376e589d5a4101ae834128ebdf934fed0c8600"}, "downloads": -1, "filename": "easy-scpi-0.0.8.tar.gz", "has_sig": false, "md5_digest": "103e27f9e820c0bc32f210bd8ef66cce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5423, "upload_time": "2019-08-21T09:58:21", "upload_time_iso_8601": "2019-08-21T09:58:21.694477Z", "url": "https://files.pythonhosted.org/packages/d3/d4/e03ddcbfd4052805e509ed030a9107a970b7e741effd056d0aa63cd7de12/easy-scpi-0.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:15 2020"}