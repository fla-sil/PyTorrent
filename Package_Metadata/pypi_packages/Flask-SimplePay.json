{"info": {"author": "Gere L\u00f3r\u00e1nt", "author_email": "gerelorant@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Flask-SimplePay\n\nOTP SimplePay integration with Flask\n\n## Usage\nInitialize the extension with Flask and Flask-SQLAlchemy instances.\n```python\nfrom flask import Flask\nfrom flask_simplepay import SimplePay\nfrom flask_sqlalchemy import SQLAlchemy\n\n\napp = Flask(__name__)\ndb = SQLAlchemy(app)\ntranslations = SimplePay(app, db)\n    \n\nif __name__ == '__main__':\n    app.run()\n```\nTo start payment, a `Transaction` is needed. After adding the transaction and \ncommiting the session, the `/simple/start/<int:transaction_id>` endpoint starts\nthe payment procedure. When the payment process is finished, the `/simple/back`\nendpoint is called. To define what behaviour, extend the `TransactionMixin` \nclass and override the `back()` method. Return value should be anything a Flask\nroute method would return.\n```python\nfrom flask import render_template\nfrom flask_simplepay import TransactionMixin\n\n\nclass Transaction(db.Model, TransactionMixin):\n    id = db.Column(db.Integer, primary_key=True, autoincrement=True)\n    \n    def back(self):\n        return render_template({self.result}, transaction=self)\n```\nThe `Transaction` method should be provided at initialization as\n`transaction_class` argument.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gerelorant/Flask-SimplePay", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Flask-SimplePay", "package_url": "https://pypi.org/project/Flask-SimplePay/", "platform": "", "project_url": "https://pypi.org/project/Flask-SimplePay/", "project_urls": {"Homepage": "https://github.com/gerelorant/Flask-SimplePay"}, "release_url": "https://pypi.org/project/Flask-SimplePay/0.5/", "requires_dist": null, "requires_python": "", "summary": "OTP SimplePay payment extension for Flask", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flask-SimplePay</h1>\n<p>OTP SimplePay integration with Flask</p>\n<h2>Usage</h2>\n<p>Initialize the extension with Flask and Flask-SQLAlchemy instances.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_simplepay</span> <span class=\"kn\">import</span> <span class=\"n\">SimplePay</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">SQLAlchemy</span>\n\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">SQLAlchemy</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">translations</span> <span class=\"o\">=</span> <span class=\"n\">SimplePay</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"p\">)</span>\n    \n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>To start payment, a <code>Transaction</code> is needed. After adding the transaction and\ncommiting the session, the <code>/simple/start/&lt;int:transaction_id&gt;</code> endpoint starts\nthe payment procedure. When the payment process is finished, the <code>/simple/back</code>\nendpoint is called. To define what behaviour, extend the <code>TransactionMixin</code>\nclass and override the <code>back()</code> method. Return value should be anything a Flask\nroute method would return.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">render_template</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_simplepay</span> <span class=\"kn\">import</span> <span class=\"n\">TransactionMixin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Transaction</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">TransactionMixin</span><span class=\"p\">):</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">autoincrement</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    \n    <span class=\"k\">def</span> <span class=\"nf\">back</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">({</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">},</span> <span class=\"n\">transaction</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>The <code>Transaction</code> method should be provided at initialization as\n<code>transaction_class</code> argument.</p>\n\n          </div>"}, "last_serial": 6220957, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2b2ca023dee3f941aa0710701a273f18", "sha256": "49a858018f7f76fba540b6e5f8b6c2d40d1dfa962750ececc32a7275edb41af0"}, "downloads": -1, "filename": "Flask-SimplePay-0.1.tar.gz", "has_sig": false, "md5_digest": "2b2ca023dee3f941aa0710701a273f18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4163, "upload_time": "2019-11-28T12:07:09", "upload_time_iso_8601": "2019-11-28T12:07:09.660281Z", "url": "https://files.pythonhosted.org/packages/6c/cf/cbd492bf8ffafea04a79678a3793af606a3d25119c632de1a5d4b5ee6f39/Flask-SimplePay-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "8828db99e4b0ce370fe8673f2e8fd0a9", "sha256": "23bd05a05ed904bc7a45d70c207f39cf025c4fae5dcb8abe2d2f2739e255058d"}, "downloads": -1, "filename": "Flask-SimplePay-0.2.tar.gz", "has_sig": false, "md5_digest": "8828db99e4b0ce370fe8673f2e8fd0a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4166, "upload_time": "2019-11-28T15:09:11", "upload_time_iso_8601": "2019-11-28T15:09:11.570238Z", "url": "https://files.pythonhosted.org/packages/e8/98/52ca9d7a6a826e5e6c1cb6e5b2cfd4d2add8816867f838d05d5670895e71/Flask-SimplePay-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "a506b43c642e8427b61548e5eadb24b7", "sha256": "c3e0eafaa0cbdbcb6b968a4f9341a7d77b831871535e796b3cb67a4d79d90360"}, "downloads": -1, "filename": "Flask-SimplePay-0.3.tar.gz", "has_sig": false, "md5_digest": "a506b43c642e8427b61548e5eadb24b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4172, "upload_time": "2019-11-29T09:58:25", "upload_time_iso_8601": "2019-11-29T09:58:25.937309Z", "url": "https://files.pythonhosted.org/packages/70/9a/31a4f8e34cab078e25f14d3497b93a20e34f1438ec4b9e1b7f745557bda7/Flask-SimplePay-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "e8218c5c25284e3420d8bf1e474ba914", "sha256": "fc605aa691092fa656e870c2f9996c9d35f5451ba1c0704cd01d4c693a43e353"}, "downloads": -1, "filename": "Flask-SimplePay-0.4.tar.gz", "has_sig": false, "md5_digest": "e8218c5c25284e3420d8bf1e474ba914", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4181, "upload_time": "2019-11-29T10:20:10", "upload_time_iso_8601": "2019-11-29T10:20:10.246091Z", "url": "https://files.pythonhosted.org/packages/98/5c/4ef9a2564c1dbdb2b1380179751826abf056fb11f17be1168decb288f125/Flask-SimplePay-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "248f1abd81e6348ea52ffc2e08a2eeb3", "sha256": "1ebb8725303e6e0e69de3c45cefb2903ed48340c704a9ca299f139280b3d74be"}, "downloads": -1, "filename": "Flask-SimplePay-0.5.tar.gz", "has_sig": false, "md5_digest": "248f1abd81e6348ea52ffc2e08a2eeb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4375, "upload_time": "2019-11-30T08:50:52", "upload_time_iso_8601": "2019-11-30T08:50:52.335183Z", "url": "https://files.pythonhosted.org/packages/81/26/7af83a9a38d87edf4bf11fedd5b4d0ca85433a0e0e4b27506176cd0e75b8/Flask-SimplePay-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "248f1abd81e6348ea52ffc2e08a2eeb3", "sha256": "1ebb8725303e6e0e69de3c45cefb2903ed48340c704a9ca299f139280b3d74be"}, "downloads": -1, "filename": "Flask-SimplePay-0.5.tar.gz", "has_sig": false, "md5_digest": "248f1abd81e6348ea52ffc2e08a2eeb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4375, "upload_time": "2019-11-30T08:50:52", "upload_time_iso_8601": "2019-11-30T08:50:52.335183Z", "url": "https://files.pythonhosted.org/packages/81/26/7af83a9a38d87edf4bf11fedd5b4d0ca85433a0e0e4b27506176cd0e75b8/Flask-SimplePay-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:18 2020"}