{"info": {"author": "Anton Fedotov", "author_email": "anton.fedotov.af@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Image Recognition", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# PiePline\n\nNeural networks training pipeline based on PyTorch. Designed to standardize training process and accelerate experiments.\n\n[![Build Status](https://travis-ci.org/PiePline/piepline.svg?branch=master)](https://travis-ci.org/PiePline/piepline)\n[![Coverage Status](https://coveralls.io/repos/github/PiePline/piepline/badge.svg?branch=master)](https://coveralls.io/github/PiePline/piepline?branch=master)\n[![Maintainability](https://api.codeclimate.com/v1/badges/7da18cb28e7e7dc13268/maintainability)](https://codeclimate.com/github/PiePline/piepline/maintainability)\n[![Gitter chat](https://badges.gitter.im/piepline/gitter.png)](https://gitter.im/piepline/community)\n\n* Core is about 2K lines, covered by tests, that you don't need to write again\n* Flexible and customizable training process\n* Checkpoints management and train process resuming (source and target device independent)\n* Metrics processing and visualization by builtin ([tensorboard](https://www.tensorflow.org/guide/summaries_and_tensorboard), [Matplotlib](https://matplotlib.org)) or custom monitors\n* Training best practices (e.g. learning rate decaying and hard negative mining)\n* Metrics logging and comparison (DVC compatible)\n\n# Getting started:\n### Documentation\n[![Documentation Status](https://readthedocs.org/projects/piepline/badge/?version=stable)](https://piepline.readthedocs.io/en/stable/?badge=stable)\n* [See the full documentation there](https://piepline.readthedocs.io/en/stable/)\n* [Read getting started guide](https://piepline.readthedocs.io/en/stable/getting_started/index.html)\n\n### See the examples\n* MNIST classification - [notebook](https://github.com/toodef/piepline/blob/master/examples/notebooks/img_classification.ipynb), [file](https://github.com/toodef/piepline/blob/master/examples/files/img_classification.py), [Kaggle kernel](https://www.kaggle.com/toodef/cnn-training-with-less-code)\n* Segmentation - [notebook](https://github.com/toodef/piepline/blob/master/examples/notebooks/img_segmentation.ipynb), [file](https://github.com/toodef/piepline/blob/master/examples/files/img_segmentation.py)\n* Resume training process - [file](https://github.com/toodef/piepline/blob/master/examples/files/resume_train.py)\n\n### PiePline short overview:\n```python\nimport torch\n\nfrom neural_pipeline.builtin.monitors.tensorboard import TensorboardMonitor\nfrom neural_pipeline.monitoring import LogMonitor\nfrom neural_pipeline import DataProducer, TrainConfig, TrainStage,\\\n    ValidationStage, Trainer, FileStructManager\n\nfrom somethig import MyNet, MyDataset\n\nfsm = FileStructManager(base_dir='data', is_continue=False)\nmodel = MyNet().cuda()\n\ntrain_dataset = DataProducer([MyDataset()], batch_size=4, num_workers=2)\nvalidation_dataset = DataProducer([MyDataset()], batch_size=4, num_workers=2)\n\ntrain_config = TrainConfig(model, [TrainStage(train_dataset),\n                                   ValidationStage(validation_dataset)], torch.nn.NLLLoss(),\n                           torch.optim.SGD(model.parameters(), lr=1e-4, momentum=0.5))\n\ntrainer = Trainer(train_config, fsm, torch.device('cuda:0')).set_epoch_num(50)\ntrainer.monitor_hub.add_monitor(TensorboardMonitor(fsm, is_continue=False))\\\n                   .add_monitor(LogMonitor(fsm))\ntrainer.train()\n```\nThis example of training MyNet on MyDataset with vizualisation in Tensorflow and with metrics logging for further experiments comparison.\n\n# Installation:\n[![PyPI version](https://badge.fury.io/py/piepline.svg)](https://badge.fury.io/py/piepline)\n[![PyPI Downloads/Month](https://pepy.tech/badge/piepline/month)](https://pepy.tech/project/piepline)\n[![PyPI Downloads](https://pepy.tech/badge/piepline)](https://pepy.tech/project/piepline)\n\n`pip install piepline`\n\n##### For `builtin` module using install:\n`pip install tensorboardX matplotlib`\n\n##### Install latest version before it's published on PyPi\n`pip install -U git+https://github.com/PiePline/piepline`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PiePline/piepline", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "piepline", "package_url": "https://pypi.org/project/piepline/", "platform": "", "project_url": "https://pypi.org/project/piepline/", "project_urls": {"Homepage": "https://github.com/PiePline/piepline"}, "release_url": "https://pypi.org/project/piepline/0.2.2/", "requires_dist": ["numpy", "tqdm", "torch (>=0.4.1)"], "requires_python": "", "summary": "Neural networks training pipeline based on PyTorch. Designed to standardize training process and to increase coding preformance", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PiePline</h1>\n<p>Neural networks training pipeline based on PyTorch. Designed to standardize training process and accelerate experiments.</p>\n<p><a href=\"https://travis-ci.org/PiePline/piepline\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/77f35dd64fbf2538c0f0b0ae0af0bb5fb7c30c96/68747470733a2f2f7472617669732d63692e6f72672f506965506c696e652f706965706c696e652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/PiePline/piepline?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/931b997ba1e15867a6e96b69c9ab38983259de63/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f506965506c696e652f706965706c696e652f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codeclimate.com/github/PiePline/piepline/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb5903ba5377fa88c3eb32129bb41e6d79c333d3/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f37646131386362323865376537646331333236382f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://gitter.im/piepline/community\" rel=\"nofollow\"><img alt=\"Gitter chat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/002d2a580537480c7269a8ad6e8f0dc264dc8630/68747470733a2f2f6261646765732e6769747465722e696d2f706965706c696e652f6769747465722e706e67\"></a></p>\n<ul>\n<li>Core is about 2K lines, covered by tests, that you don't need to write again</li>\n<li>Flexible and customizable training process</li>\n<li>Checkpoints management and train process resuming (source and target device independent)</li>\n<li>Metrics processing and visualization by builtin (<a href=\"https://www.tensorflow.org/guide/summaries_and_tensorboard\" rel=\"nofollow\">tensorboard</a>, <a href=\"https://matplotlib.org\" rel=\"nofollow\">Matplotlib</a>) or custom monitors</li>\n<li>Training best practices (e.g. learning rate decaying and hard negative mining)</li>\n<li>Metrics logging and comparison (DVC compatible)</li>\n</ul>\n<h1>Getting started:</h1>\n<h3>Documentation</h3>\n<p><a href=\"https://piepline.readthedocs.io/en/stable/?badge=stable\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbb7313259eb96a3ecd82496781449a8beb18d70/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f706965706c696e652f62616467652f3f76657273696f6e3d737461626c65\"></a></p>\n<ul>\n<li><a href=\"https://piepline.readthedocs.io/en/stable/\" rel=\"nofollow\">See the full documentation there</a></li>\n<li><a href=\"https://piepline.readthedocs.io/en/stable/getting_started/index.html\" rel=\"nofollow\">Read getting started guide</a></li>\n</ul>\n<h3>See the examples</h3>\n<ul>\n<li>MNIST classification - <a href=\"https://github.com/toodef/piepline/blob/master/examples/notebooks/img_classification.ipynb\" rel=\"nofollow\">notebook</a>, <a href=\"https://github.com/toodef/piepline/blob/master/examples/files/img_classification.py\" rel=\"nofollow\">file</a>, <a href=\"https://www.kaggle.com/toodef/cnn-training-with-less-code\" rel=\"nofollow\">Kaggle kernel</a></li>\n<li>Segmentation - <a href=\"https://github.com/toodef/piepline/blob/master/examples/notebooks/img_segmentation.ipynb\" rel=\"nofollow\">notebook</a>, <a href=\"https://github.com/toodef/piepline/blob/master/examples/files/img_segmentation.py\" rel=\"nofollow\">file</a></li>\n<li>Resume training process - <a href=\"https://github.com/toodef/piepline/blob/master/examples/files/resume_train.py\" rel=\"nofollow\">file</a></li>\n</ul>\n<h3>PiePline short overview:</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">neural_pipeline.builtin.monitors.tensorboard</span> <span class=\"kn\">import</span> <span class=\"n\">TensorboardMonitor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">neural_pipeline.monitoring</span> <span class=\"kn\">import</span> <span class=\"n\">LogMonitor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">neural_pipeline</span> <span class=\"kn\">import</span> <span class=\"n\">DataProducer</span><span class=\"p\">,</span> <span class=\"n\">TrainConfig</span><span class=\"p\">,</span> <span class=\"n\">TrainStage</span><span class=\"p\">,</span>\\\n    <span class=\"n\">ValidationStage</span><span class=\"p\">,</span> <span class=\"n\">Trainer</span><span class=\"p\">,</span> <span class=\"n\">FileStructManager</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">somethig</span> <span class=\"kn\">import</span> <span class=\"n\">MyNet</span><span class=\"p\">,</span> <span class=\"n\">MyDataset</span>\n\n<span class=\"n\">fsm</span> <span class=\"o\">=</span> <span class=\"n\">FileStructManager</span><span class=\"p\">(</span><span class=\"n\">base_dir</span><span class=\"o\">=</span><span class=\"s1\">'data'</span><span class=\"p\">,</span> <span class=\"n\">is_continue</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">MyNet</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"p\">()</span>\n\n<span class=\"n\">train_dataset</span> <span class=\"o\">=</span> <span class=\"n\">DataProducer</span><span class=\"p\">([</span><span class=\"n\">MyDataset</span><span class=\"p\">()],</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">num_workers</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">validation_dataset</span> <span class=\"o\">=</span> <span class=\"n\">DataProducer</span><span class=\"p\">([</span><span class=\"n\">MyDataset</span><span class=\"p\">()],</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">num_workers</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">train_config</span> <span class=\"o\">=</span> <span class=\"n\">TrainConfig</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">TrainStage</span><span class=\"p\">(</span><span class=\"n\">train_dataset</span><span class=\"p\">),</span>\n                                   <span class=\"n\">ValidationStage</span><span class=\"p\">(</span><span class=\"n\">validation_dataset</span><span class=\"p\">)],</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">NLLLoss</span><span class=\"p\">(),</span>\n                           <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">SGD</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">1e-4</span><span class=\"p\">,</span> <span class=\"n\">momentum</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">))</span>\n\n<span class=\"n\">trainer</span> <span class=\"o\">=</span> <span class=\"n\">Trainer</span><span class=\"p\">(</span><span class=\"n\">train_config</span><span class=\"p\">,</span> <span class=\"n\">fsm</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"p\">(</span><span class=\"s1\">'cuda:0'</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">set_epoch_num</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">monitor_hub</span><span class=\"o\">.</span><span class=\"n\">add_monitor</span><span class=\"p\">(</span><span class=\"n\">TensorboardMonitor</span><span class=\"p\">(</span><span class=\"n\">fsm</span><span class=\"p\">,</span> <span class=\"n\">is_continue</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">))</span>\\\n                   <span class=\"o\">.</span><span class=\"n\">add_monitor</span><span class=\"p\">(</span><span class=\"n\">LogMonitor</span><span class=\"p\">(</span><span class=\"n\">fsm</span><span class=\"p\">))</span>\n<span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">()</span>\n</pre>\n<p>This example of training MyNet on MyDataset with vizualisation in Tensorflow and with metrics logging for further experiments comparison.</p>\n<h1>Installation:</h1>\n<p><a href=\"https://badge.fury.io/py/piepline\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d24996b127483b83675a4424e188142deb437892/68747470733a2f2f62616467652e667572792e696f2f70792f706965706c696e652e737667\"></a>\n<a href=\"https://pepy.tech/project/piepline\" rel=\"nofollow\"><img alt=\"PyPI Downloads/Month\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de57e6b0892596c9869a3805935376996e123ac1/68747470733a2f2f706570792e746563682f62616467652f706965706c696e652f6d6f6e7468\"></a>\n<a href=\"https://pepy.tech/project/piepline\" rel=\"nofollow\"><img alt=\"PyPI Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e86ff3aeb5832ca5a36bcbebda4a069b28add714/68747470733a2f2f706570792e746563682f62616467652f706965706c696e65\"></a></p>\n<p><code>pip install piepline</code></p>\n<h5>For <code>builtin</code> module using install:</h5>\n<p><code>pip install tensorboardX matplotlib</code></p>\n<h5>Install latest version before it's published on PyPi</h5>\n<p><code>pip install -U git+https://github.com/PiePline/piepline</code></p>\n\n          </div>"}, "last_serial": 7166016, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "cd45a139d3c7a3e2a09b83aa28a37105", "sha256": "f75a9aa5619fa77c70d82dd201dce2afea6ff3ab8e1dbfc30f1f005157698576"}, "downloads": -1, "filename": "piepline-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cd45a139d3c7a3e2a09b83aa28a37105", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33037, "upload_time": "2020-05-02T14:30:30", "upload_time_iso_8601": "2020-05-02T14:30:30.871181Z", "url": "https://files.pythonhosted.org/packages/b0/b5/6f8548e8d219a6195e465d5743007a112f88ec7ad83f329658e62868fe1d/piepline-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d48f4ce52aa045822c7cc8343262f127", "sha256": "1a4dccf5756114815c37c8afe0d2b9eec13a111c57e763bac1fcfdd7ee2335ab"}, "downloads": -1, "filename": "piepline-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d48f4ce52aa045822c7cc8343262f127", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24584, "upload_time": "2020-05-02T14:30:33", "upload_time_iso_8601": "2020-05-02T14:30:33.114693Z", "url": "https://files.pythonhosted.org/packages/8b/f1/09942817d230a73ac04b032cf1bf5fbc03e5e8eca9f8d4cf5a2027fef977/piepline-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "7c4dadd7a61cffe7deb5bdb84f0fe667", "sha256": "17b41c3314d8f8a438352d889ff178d657da9add16a8e30d2fe5beeecbb4bbe4"}, "downloads": -1, "filename": "piepline-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7c4dadd7a61cffe7deb5bdb84f0fe667", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28459, "upload_time": "2020-05-04T12:16:04", "upload_time_iso_8601": "2020-05-04T12:16:04.694431Z", "url": "https://files.pythonhosted.org/packages/23/ac/6af7891a1bcd21259a8ea3bbb908bebf5504c9bb274c305b012c6ddb1b7e/piepline-0.2.0-py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "b482f74b6dc30dc7fe3bf968ba52f0c5", "sha256": "e334ce31891a3fe29de61ce834bbbb9c992ebbb211194e27f1acd0193632bf6b"}, "downloads": -1, "filename": "piepline-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b482f74b6dc30dc7fe3bf968ba52f0c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28450, "upload_time": "2020-05-04T12:38:01", "upload_time_iso_8601": "2020-05-04T12:38:01.633147Z", "url": "https://files.pythonhosted.org/packages/32/6f/a60c421d51ff2e1ee83d0dd1f24d2ec1315378a31f403ea6765a8f3909a7/piepline-0.2.1-py3-none-any.whl", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "28584b53c1e19149fa4825b654e70ac0", "sha256": "5c68ee41e36da60ca7e0013ffa45d49ad0dc6e31239b49ce1f276953439fc94b"}, "downloads": -1, "filename": "piepline-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "28584b53c1e19149fa4825b654e70ac0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28460, "upload_time": "2020-05-04T17:18:44", "upload_time_iso_8601": "2020-05-04T17:18:44.163588Z", "url": "https://files.pythonhosted.org/packages/65/a6/d7397e5893ee23f456632aeae4fe567fcd8d65620ab91beae0a3409580fe/piepline-0.2.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "28584b53c1e19149fa4825b654e70ac0", "sha256": "5c68ee41e36da60ca7e0013ffa45d49ad0dc6e31239b49ce1f276953439fc94b"}, "downloads": -1, "filename": "piepline-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "28584b53c1e19149fa4825b654e70ac0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28460, "upload_time": "2020-05-04T17:18:44", "upload_time_iso_8601": "2020-05-04T17:18:44.163588Z", "url": "https://files.pythonhosted.org/packages/65/a6/d7397e5893ee23f456632aeae4fe567fcd8d65620ab91beae0a3409580fe/piepline-0.2.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:54:55 2020"}