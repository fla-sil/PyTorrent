{"info": {"author": "pwwang", "author_email": "pwwang@pwwang.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# python-varname\n\n[![Pypi][3]][4] [![Github][5]][6] [![PythonVers][8]][4] [![Travis building][10]][11] [![Codacy][12]][13] [![Codacy coverage][14]][13]\n\nRetrieving variable names of function or class calls\n\n## Installation\n```shell\npip install python-varname\n```\n\n## Usage\n\n### Retrieving the variable name inside a function\n\n```python\nfrom varname import varname\ndef function():\n    return varname()\n\nfunc = function()\n# func == 'func'\n\n# available calls to retrieve\nfunc = function(\n    # ...\n)\n\nfunc = \\\n    function()\n\nfunc = function \\\n    ()\n\nfunc = (function\n        ())\n```\n\n\n### `varname` calls being buried deeply\n```python\ndef function():\n    # I know that at which stack this will be called\n    return varname(caller=3)\n\ndef function1():\n    return function()\n\ndef function2():\n    return function1()\n\nfunc = function2()\n# func == 'func'\n```\n\n### Retrieving instance name of a class object\n```python\nclass Klass:\n    def __init__(self):\n        self.id = varname()\n    def copy(self):\n        return varname()\n\nk = Klass()\n# k.id == 'k'\n\nk2 = k.copy()\n# k2 == 'k2'\n```\n\n### `varname` calls being buried deeply for classes\n```python\nclass Klass:\n    def __init__(self):\n        self.id = self.some_internal()\n\n    def some_internal(self):\n        return varname(caller=2)\n\n    def copy(self):\n        return self.copy_id()\n\n    def copy_id(self):\n        return self.copy_id_internal()\n\n    def copy_id_internal(self):\n        return varname(caller=3)\n\nk = Klass()\n# k.id == 'k'\n\nk2 = k.copy()\n# k2 == 'k2'\n```\n\n## Some unusual use\n\n```python\nfunc = [function()]\n# func == ['func']\n\nfunc = [function(), function()]\n# func == ['func', 'func']\n\nfunc = function(), function()\n# func = ('func', 'func')\n\nfunc = func1 = function()\n# func == func1 == 'func1'\n# a warning will be printed\n\nx = func(\n    y = func()\n)\n# x == 'x'\n\n# This is heresy\nfunc_abc = function()[-3:]\n# func_abc == 'abc'\n\n# function alias supported now\nfunction2 = function\nfunc = function2()\n# func == 'func'\n```\n\n## A value wrapper\n\n```python\nfrom varname import Wrapper\n\nfoo = Wrapper(True)\nbar = Wrapper(False)\n\ndef values_to_dict(*args):\n    return {val.name: val.value for val in args}\n\nmydict = values_to_dict(foo, bar)\n# {'foo': True, 'bar': False}\n```\n\n## Limitations\n- Working in `ipython REPL` but not standard `python console`\n- ~~Calls have to be written in desired format~~ (they don't have to since `v0.1.0`)\n- ~~Context has to be estimated in advance, especially for functions with long argument list~~ (it doesn't have to since `v0.1.0`)\n- You have to know at which stack the function/class will be called\n- For performance, since inspection is involved, better cache the name\n- ~~Aliases are not supported~~ (supported since `v0.1.0`)\n  ```diff\n  - def function():\n  -   return varname()\n  - func = function\n\n  - x = func() # unable to detect\n  ```\n- ~~False positives~~ (Able to detect since `v0.1.0`)\n  ```diff\n  - def func(**kwargs):\n  -     return varname()\n  - x = func(\n  -     y = func()\n  - )\n  - # x == 'y'\n\n  - # to avoid this, you have to write the kwargs\n  - # in the same line where the is called\n  - x = func(y=func())\n  - # x == 'x'\n  ```\n\n[1]: https://github.com/pwwang/python-varname\n[3]: https://img.shields.io/pypi/v/python-varname?style=flat-square\n[4]: https://pypi.org/project/python-varname/\n[5]: https://img.shields.io/github/tag/pwwang/python-varname?style=flat-square\n[6]: https://github.com/pwwang/python-varname\n[8]: https://img.shields.io/pypi/pyversions/python-varname?style=flat-square\n[10]: https://img.shields.io/travis/pwwang/python-varname?style=flat-square\n[11]: https://travis-ci.org/pwwang/python-varname\n[12]: https://img.shields.io/codacy/grade/ed851ff47b194e3e9389b2a44d6f21da?style=flat-square\n[13]: https://app.codacy.com/manual/pwwang/python-varname/dashboard\n[14]: https://img.shields.io/codacy/coverage/ed851ff47b194e3e9389b2a44d6f21da?style=flat-square\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pwwang/python-varname", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "python-varname", "package_url": "https://pypi.org/project/python-varname/", "platform": "", "project_url": "https://pypi.org/project/python-varname/", "project_urls": {"Homepage": "https://github.com/pwwang/python-varname", "Repository": "https://github.com/pwwang/python-varname"}, "release_url": "https://pypi.org/project/python-varname/0.1.1/", "requires_dist": ["executing"], "requires_python": ">=3.6,<4.0", "summary": "Retrieving variable names of function or class calls.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>python-varname</h1>\n<p><a href=\"https://pypi.org/project/python-varname/\" rel=\"nofollow\"><img alt=\"Pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5973677ff006a4bfba7469f14a42bca23a0a4c6a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707974686f6e2d7661726e616d653f7374796c653d666c61742d737175617265\"></a> <a href=\"https://github.com/pwwang/python-varname\" rel=\"nofollow\"><img alt=\"Github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff951a5968b52d8111e97c676c4bf28c60643130/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f707777616e672f707974686f6e2d7661726e616d653f7374796c653d666c61742d737175617265\"></a> <a href=\"https://pypi.org/project/python-varname/\" rel=\"nofollow\"><img alt=\"PythonVers\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4968f9c768f50777d8ed288330ea2b8c9db4426d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f707974686f6e2d7661726e616d653f7374796c653d666c61742d737175617265\"></a> <a href=\"https://travis-ci.org/pwwang/python-varname\" rel=\"nofollow\"><img alt=\"Travis building\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/059d55742bd157bec8a45ef63bcdbd34251b160d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f707777616e672f707974686f6e2d7661726e616d653f7374796c653d666c61742d737175617265\"></a> <a href=\"https://app.codacy.com/manual/pwwang/python-varname/dashboard\" rel=\"nofollow\"><img alt=\"Codacy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97fe46207564e5c3151044291c04c7380605c4e3/68747470733a2f2f696d672e736869656c64732e696f2f636f646163792f67726164652f65643835316666343762313934653365393338396232613434643666323164613f7374796c653d666c61742d737175617265\"></a> <a href=\"https://app.codacy.com/manual/pwwang/python-varname/dashboard\" rel=\"nofollow\"><img alt=\"Codacy coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d03e5695bd95dda9276322cc09324d939917f8e0/68747470733a2f2f696d672e736869656c64732e696f2f636f646163792f636f7665726167652f65643835316666343762313934653365393338396232613434643666323164613f7374796c653d666c61742d737175617265\"></a></p>\n<p>Retrieving variable names of function or class calls</p>\n<h2>Installation</h2>\n<pre>pip install python-varname\n</pre>\n<h2>Usage</h2>\n<h3>Retrieving the variable name inside a function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">varname</span> <span class=\"kn\">import</span> <span class=\"n\">varname</span>\n<span class=\"k\">def</span> <span class=\"nf\">function</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">varname</span><span class=\"p\">()</span>\n\n<span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"n\">function</span><span class=\"p\">()</span>\n<span class=\"c1\"># func == 'func'</span>\n\n<span class=\"c1\"># available calls to retrieve</span>\n<span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"n\">function</span><span class=\"p\">(</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">func</span> <span class=\"o\">=</span> \\\n    <span class=\"n\">function</span><span class=\"p\">()</span>\n\n<span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"n\">function</span> \\\n    <span class=\"p\">()</span>\n\n<span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">function</span>\n        <span class=\"p\">())</span>\n</pre>\n<h3><code>varname</code> calls being buried deeply</h3>\n<pre><span class=\"k\">def</span> <span class=\"nf\">function</span><span class=\"p\">():</span>\n    <span class=\"c1\"># I know that at which stack this will be called</span>\n    <span class=\"k\">return</span> <span class=\"n\">varname</span><span class=\"p\">(</span><span class=\"n\">caller</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">function1</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">function</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">function2</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">function1</span><span class=\"p\">()</span>\n\n<span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"n\">function2</span><span class=\"p\">()</span>\n<span class=\"c1\"># func == 'func'</span>\n</pre>\n<h3>Retrieving instance name of a class object</h3>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Klass</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"n\">varname</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">copy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">varname</span><span class=\"p\">()</span>\n\n<span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"n\">Klass</span><span class=\"p\">()</span>\n<span class=\"c1\"># k.id == 'k'</span>\n\n<span class=\"n\">k2</span> <span class=\"o\">=</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"c1\"># k2 == 'k2'</span>\n</pre>\n<h3><code>varname</code> calls being buried deeply for classes</h3>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Klass</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">some_internal</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">some_internal</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">varname</span><span class=\"p\">(</span><span class=\"n\">caller</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">copy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">copy_id</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">copy_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">copy_id_internal</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">copy_id_internal</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">varname</span><span class=\"p\">(</span><span class=\"n\">caller</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"n\">Klass</span><span class=\"p\">()</span>\n<span class=\"c1\"># k.id == 'k'</span>\n\n<span class=\"n\">k2</span> <span class=\"o\">=</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"c1\"># k2 == 'k2'</span>\n</pre>\n<h2>Some unusual use</h2>\n<pre><span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">function</span><span class=\"p\">()]</span>\n<span class=\"c1\"># func == ['func']</span>\n\n<span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">function</span><span class=\"p\">(),</span> <span class=\"n\">function</span><span class=\"p\">()]</span>\n<span class=\"c1\"># func == ['func', 'func']</span>\n\n<span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"n\">function</span><span class=\"p\">(),</span> <span class=\"n\">function</span><span class=\"p\">()</span>\n<span class=\"c1\"># func = ('func', 'func')</span>\n\n<span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"n\">func1</span> <span class=\"o\">=</span> <span class=\"n\">function</span><span class=\"p\">()</span>\n<span class=\"c1\"># func == func1 == 'func1'</span>\n<span class=\"c1\"># a warning will be printed</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">func</span><span class=\"p\">(</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">func</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># x == 'x'</span>\n\n<span class=\"c1\"># This is heresy</span>\n<span class=\"n\">func_abc</span> <span class=\"o\">=</span> <span class=\"n\">function</span><span class=\"p\">()[</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">:]</span>\n<span class=\"c1\"># func_abc == 'abc'</span>\n\n<span class=\"c1\"># function alias supported now</span>\n<span class=\"n\">function2</span> <span class=\"o\">=</span> <span class=\"n\">function</span>\n<span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"n\">function2</span><span class=\"p\">()</span>\n<span class=\"c1\"># func == 'func'</span>\n</pre>\n<h2>A value wrapper</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">varname</span> <span class=\"kn\">import</span> <span class=\"n\">Wrapper</span>\n\n<span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">Wrapper</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">Wrapper</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">values_to_dict</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"k\">for</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">args</span><span class=\"p\">}</span>\n\n<span class=\"n\">mydict</span> <span class=\"o\">=</span> <span class=\"n\">values_to_dict</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">,</span> <span class=\"n\">bar</span><span class=\"p\">)</span>\n<span class=\"c1\"># {'foo': True, 'bar': False}</span>\n</pre>\n<h2>Limitations</h2>\n<ul>\n<li>Working in <code>ipython REPL</code> but not standard <code>python console</code></li>\n<li><del>Calls have to be written in desired format</del> (they don't have to since <code>v0.1.0</code>)</li>\n<li><del>Context has to be estimated in advance, especially for functions with long argument list</del> (it doesn't have to since <code>v0.1.0</code>)</li>\n<li>You have to know at which stack the function/class will be called</li>\n<li>For performance, since inspection is involved, better cache the name</li>\n<li><del>Aliases are not supported</del> (supported since <code>v0.1.0</code>)\n<pre><span class=\"gd\">- def function():</span>\n<span class=\"gd\">-   return varname()</span>\n<span class=\"gd\">- func = function</span>\n\n<span class=\"gd\">- x = func() # unable to detect</span>\n</pre>\n</li>\n<li><del>False positives</del> (Able to detect since <code>v0.1.0</code>)\n<pre><span class=\"gd\">- def func(**kwargs):</span>\n<span class=\"gd\">-     return varname()</span>\n<span class=\"gd\">- x = func(</span>\n<span class=\"gd\">-     y = func()</span>\n<span class=\"gd\">- )</span>\n<span class=\"gd\">- # x == 'y'</span>\n\n<span class=\"gd\">- # to avoid this, you have to write the kwargs</span>\n<span class=\"gd\">- # in the same line where the is called</span>\n<span class=\"gd\">- x = func(y=func())</span>\n<span class=\"gd\">- # x == 'x'</span>\n</pre>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 7078928, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b32b70b1fbff361611cbcac8a7aabd6c", "sha256": "4aef2b9765db61f23ad6c1f9d52444328455839455e140f361e6b9b5a15963dc"}, "downloads": -1, "filename": "python_varname-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b32b70b1fbff361611cbcac8a7aabd6c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 2729, "upload_time": "2019-12-16T18:49:50", "upload_time_iso_8601": "2019-12-16T18:49:50.658412Z", "url": "https://files.pythonhosted.org/packages/aa/6a/f949a7c7cffbe5c6b2a7f4ecc6c22ae5828d59dbac3d9db72954e8bc8eab/python_varname-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cad984d6fb44fce221eb2000a2dc2995", "sha256": "483c1a67f2cbb40899b30d22e71133cf0ec53c0875e200ef80dc9e55e3aef47a"}, "downloads": -1, "filename": "python-varname-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cad984d6fb44fce221eb2000a2dc2995", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 3020, "upload_time": "2019-12-16T18:49:48", "upload_time_iso_8601": "2019-12-16T18:49:48.240142Z", "url": "https://files.pythonhosted.org/packages/94/ba/21ff228da90cf87a42ad1955762b8acde3c6e45981d86bdef2cba88c5d97/python-varname-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "5c822e7b0cdc5cd18b36e339712a2da4", "sha256": "35a44f1e195ffd18831f8cf1bc4744fe60cee4e1f81ebb8e88c9faee419e73ce"}, "downloads": -1, "filename": "python_varname-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5c822e7b0cdc5cd18b36e339712a2da4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 3006, "upload_time": "2019-12-16T19:18:47", "upload_time_iso_8601": "2019-12-16T19:18:47.388807Z", "url": "https://files.pythonhosted.org/packages/93/11/915cc3ea1c45dc5050c2c291a037c0fa949f1c2178215e15115ab2e77e98/python_varname-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12bf0d8077409fd273dc0cf8f8e11dad", "sha256": "ed39853b2cfc6ff14b39b8a1d7f7080f1ffe00ef1df9c282bf0d7592a486b6bd"}, "downloads": -1, "filename": "python-varname-0.0.2.tar.gz", "has_sig": false, "md5_digest": "12bf0d8077409fd273dc0cf8f8e11dad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 3315, "upload_time": "2019-12-16T19:18:45", "upload_time_iso_8601": "2019-12-16T19:18:45.745817Z", "url": "https://files.pythonhosted.org/packages/0c/af/f953afa57f3a58a370d3671db911ffb8bfbd32ff5abb748c1c97eef8cef5/python-varname-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "9af0fd3769e74ac795267bfb3328d6fa", "sha256": "7a7aa6aa320dcf19f22efb1a8418f464c153c2e036a72c4a3b6ed3f3a5c5026a"}, "downloads": -1, "filename": "python_varname-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9af0fd3769e74ac795267bfb3328d6fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 3257, "upload_time": "2019-12-23T17:00:17", "upload_time_iso_8601": "2019-12-23T17:00:17.475651Z", "url": "https://files.pythonhosted.org/packages/be/7a/6af050ba10079066da7b11252aa7d7229b41bf324f1088e710eeb8dc7cf0/python_varname-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3055cd937c077dcfdf802188baae513", "sha256": "10ef5287a6e5909a5e382e0bb5985c3a3094703a611fe192c7c0b495d3f89c10"}, "downloads": -1, "filename": "python-varname-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c3055cd937c077dcfdf802188baae513", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 3622, "upload_time": "2019-12-23T17:00:15", "upload_time_iso_8601": "2019-12-23T17:00:15.912500Z", "url": "https://files.pythonhosted.org/packages/6c/b7/c3dedd6b183bc67d298c90aebc748d1362519d173730ab202a9dd942d94e/python-varname-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "ec36ecb7d97d22beb3fb0f53935d7298", "sha256": "f06c4548dfdf3e5bae6a4595edc87500959e6c01277497bf3e035206a999ba51"}, "downloads": -1, "filename": "python_varname-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ec36ecb7d97d22beb3fb0f53935d7298", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 2978, "upload_time": "2020-04-20T18:54:46", "upload_time_iso_8601": "2020-04-20T18:54:46.622486Z", "url": "https://files.pythonhosted.org/packages/0e/a8/1ad1922ba3f66cfb11aa779b365091924fd2d94625aac1f92c338be6a17b/python_varname-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60850849ba85956c24719172df47036d", "sha256": "c2981fbf7ab619b77d93416090cf1df75f9718fa0b3885b5ab0ffb0ab802d2be"}, "downloads": -1, "filename": "python-varname-0.1.0.tar.gz", "has_sig": false, "md5_digest": "60850849ba85956c24719172df47036d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 3378, "upload_time": "2020-04-20T18:54:45", "upload_time_iso_8601": "2020-04-20T18:54:45.460240Z", "url": "https://files.pythonhosted.org/packages/ef/88/aabf00fc4044ec5c47eda967cd6d8c8eb374e64b80a539a260b847a07e2a/python-varname-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "fa127ad4936c9bf896709389b4e166c6", "sha256": "566afd48b39fb2612a900c2147196554433f1225b537b8642fb473773ddad3db"}, "downloads": -1, "filename": "python_varname-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fa127ad4936c9bf896709389b4e166c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 3226, "upload_time": "2020-04-22T19:19:46", "upload_time_iso_8601": "2020-04-22T19:19:46.661333Z", "url": "https://files.pythonhosted.org/packages/4d/e8/b66180a06e4d56cc61bb5f2be1d8c2a7c69f3c3f0861aec21ffe2306c502/python_varname-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73383f3757c310c5f7d52b2ed85bd3b8", "sha256": "eda23e2db822f7a76966cd87f7a4ae7bb90de9c5768a648fda5785304f98f489"}, "downloads": -1, "filename": "python-varname-0.1.1.tar.gz", "has_sig": false, "md5_digest": "73383f3757c310c5f7d52b2ed85bd3b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 3667, "upload_time": "2020-04-22T19:19:45", "upload_time_iso_8601": "2020-04-22T19:19:45.646171Z", "url": "https://files.pythonhosted.org/packages/28/bd/47f920ce59d8b1fd7262358d04f9ca511039eb541e20cbe0f2838ee99d05/python-varname-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fa127ad4936c9bf896709389b4e166c6", "sha256": "566afd48b39fb2612a900c2147196554433f1225b537b8642fb473773ddad3db"}, "downloads": -1, "filename": "python_varname-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fa127ad4936c9bf896709389b4e166c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 3226, "upload_time": "2020-04-22T19:19:46", "upload_time_iso_8601": "2020-04-22T19:19:46.661333Z", "url": "https://files.pythonhosted.org/packages/4d/e8/b66180a06e4d56cc61bb5f2be1d8c2a7c69f3c3f0861aec21ffe2306c502/python_varname-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73383f3757c310c5f7d52b2ed85bd3b8", "sha256": "eda23e2db822f7a76966cd87f7a4ae7bb90de9c5768a648fda5785304f98f489"}, "downloads": -1, "filename": "python-varname-0.1.1.tar.gz", "has_sig": false, "md5_digest": "73383f3757c310c5f7d52b2ed85bd3b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 3667, "upload_time": "2020-04-22T19:19:45", "upload_time_iso_8601": "2020-04-22T19:19:45.646171Z", "url": "https://files.pythonhosted.org/packages/28/bd/47f920ce59d8b1fd7262358d04f9ca511039eb541e20cbe0f2838ee99d05/python-varname-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:44 2020"}