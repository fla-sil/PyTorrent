{"info": {"author": "Abhishek Singh", "author_email": "aosingh@asu.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Operating System :: Unix", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Database :: Database Engines/Servers"], "description": "# sqlite_rx [![Travis](https://travis-ci.org/aosingh/sqlite_rx.svg?branch=master)](https://travis-ci.org/aosingh/sqlite_rx)  [![PyPI version](https://badge.fury.io/py/sqlite-rx.svg)](https://pypi.python.org/pypi/sqlite-rx) [![Coverage Status](https://coveralls.io/repos/github/aosingh/sqlite_rx/badge.svg?branch=master)](https://coveralls.io/github/aosingh/sqlite_rx?branch=master)\n[![Python 3.6](https://img.shields.io/badge/python-3.6-blue.svg)]((https://www.python.org/downloads/release/python-370/)) [![Python 3.7](https://img.shields.io/badge/python-3.7-blue.svg)](https://www.python.org/downloads/release/python-370/) [![Python 3.8](https://img.shields.io/badge/python-3.8-blue.svg)](https://www.python.org/downloads/release/python-380/)\n[![PyPy3](https://img.shields.io/badge/python-PyPy3-blue.svg)](https://www.pypy.org/index.html)\n## Background\n\n[SQLite](https://www.sqlite.org/index.html) is a lightweight database written in C. \nThe Python programming language has in-built support to interact with the database(locally) which is either stored on disk or in memory.\n\n## Introducing sqlite_rx (SQLite remote execution)\nWith `sqlite_rx`, clients should be able to communicate with an `SQLiteServer` in a fast, simple and secure manner and execute queries remotely.\n\nKey Features\n\n- Python Client and Server for [SQLite](https://www.sqlite.org/index.html) database built using [ZeroMQ](http://zguide.zeromq.org/page:all) as the transport layer and [msgpack](https://msgpack.org/index.html) for serialization/deserialization.\n- Supports authentication using [ZeroMQ Authentication Protocol (ZAP)](https://rfc.zeromq.org/spec:27/ZAP/)\n- Supports encryption using [CurveZMQ](http://curvezmq.org/)\n- Allows the users to define a generic authorization policy during server startup\n\n\n\n# Install\n\nCurrently, only Python 3 is supported.\n\n```commandline\npip install sqlite_rx\n```\n\n# Examples\n\n## Server\n\nFollowing are the options to start an `SQLiteServer`\n\n### Python API\n`SQLiteServer` runs in a single thread and follows an event-driven concurrency model (using `tornado's` event loop) which minimizes the cost of concurrent client connections.\n\n```python\nimport logging.config\nfrom sqlite_rx import get_default_logger_settings\nfrom sqlite_rx.server import SQLiteServer\n\n\ndef main():\n\n    # database is a path-like object giving the pathname \n    # of the database file to be opened. \n\n    # You can use \":memory:\" to open a database connection to a database \n    # that resides in RAM instead of on disk\n\n    logging.config.dictConfig(get_default_logger_settings(logging.DEBUG))\n    server = SQLiteServer(database=\":memory:\",\n                          bind_address=\"tcp://127.0.0.1:5000\")\n    try:\n        server.start()\n    except KeyboardInterrupt:\n        server.stop()\n\n\nif __name__ == '__main__':\n    main()\n```\n\n### CLI to start a server\n\nRefer [CLI](#cli)\n\n### Docker\n\nRefer [Docker Examples](#docker-examples)\n\n\n## Client\n\n`SQLiteClient` is a thin client with a single method called `execute`\n\nThe `execute` method reacts to the following keyword arguments:\n\n1. `execute_many`: True if you want to insert multiple rows with one execute call.\n\n2. `execute_script`: True if you want to execute a script with multiple SQL commands.\n\n3. `request_timeout`: Time in ms to wait for a response before retrying. Default is 2500 ms\n\n4. `retries`: Number of times to retry before abandoning the request. Default is 5\n\n\nBelow are a few examples\n\n### Instantiate a client\n\n```python\nimport logging.config\nfrom sqlite_rx.client import SQLiteClient\nfrom sqlite_rx import get_default_logger_settings\n\n# sqlite_rx comes with a default logger settings. You could use as below.\nlogging.config.dictConfig(get_default_logger_settings(logging.DEBUG))\n\n\nclient = SQLiteClient(connect_address=\"tcp://127.0.0.1:5000\")\n```\n\n### SELECT statement: (Table not present)\n```python\nfrom pprint import pprint\nresult = client.execute(\"SELECT * FROM IDOLS\")\npprint(result)\n\n```\nOUTPUT\n```text\n{'error': {'message': 'sqlite3.OperationalError: no such table: IDOLS',\n           'type': 'sqlite3.OperationalError'},\n 'items': []}\n```\n\n### CREATE TABLE statement\n\n```python\n\nresult = client.execute(\"CREATE TABLE stocks (date text, trans text, symbol text, qty real, price real)\")\npprint(result)\n```\nOUTPUT\n```text\n{'error': None, 'items': []}\n```\n\n\n### INSERT MANY rows\n\n```python\npurchases = [('2006-03-28', 'BUY', 'IBM', 1000, 45.00),\n                 ('2006-04-05', 'BUY', 'MSFT', 1000, 72.00),\n                 ('2006-04-06', 'SELL', 'XOM', 500, 53.00),\n                 ('2006-03-28', 'BUY', 'IBM', 1000, 45.00),\n                 ('2006-04-05', 'BUY', 'MSFT', 1000, 72.00),\n                 ('2006-04-06', 'SELL', 'XOM', 500, 53.00),\n                 ('2006-03-28', 'BUY', 'IBM', 1000, 45.00),\n                 ('2006-04-05', 'BUY', 'MSFT', 1000, 72.00),\n                 ('2006-04-06', 'SELL', 'XOM', 500, 53.00),\n                 ('2006-03-28', 'BUY', 'IBM', 1000, 45.00),\n                 ('2006-04-05', 'BUY', 'MSFT', 1000, 72.00),\n                 ('2006-04-06', 'SELL', 'XOM', 500, 53.00),\n                 ('2006-03-28', 'BUY', 'IBM', 1000, 45.00),\n                 ('2006-04-05', 'BUY', 'MSFT', 1000, 72.00),\n                 ('2006-04-06', 'SELL', 'XOM', 500, 53.00),\n                 ('2006-03-28', 'BUY', 'IBM', 1000, 45.00),\n                 ('2006-04-05', 'BUY', 'MSFT', 1000, 72.00),\n                 ('2006-04-06', 'SELL', 'XOM', 500, 53.00),\n                 ('2006-03-28', 'BUY', 'IBM', 1000, 45.00),\n                 ('2006-04-05', 'BUY', 'MSFT', 1000, 72.00),\n                 ('2006-04-06', 'SELL', 'XOM', 500, 53.00),\n                 ('2006-03-28', 'BUY', 'IBM', 1000, 45.00),\n                 ('2006-04-05', 'BUY', 'MSFT', 1000, 72.00),\n                 ('2006-04-06', 'SELL', 'XOM', 500, 53.00),\n                 ('2006-03-28', 'BUY', 'IBM', 1000, 45.00),\n                 ('2006-04-05', 'BUY', 'MSFT', 1000, 72.00),\n                 ('2006-04-06', 'SELL', 'XOM', 500, 53.00),\n                ]\n\nresult = client.execute(\"INSERT INTO stocks VALUES (?,?,?,?,?)\", *purchases, execute_many=True)\npprint(result)\n\n```\nOUTPUT\n\n```text\n{'error': None, 'items': [], 'row_count': 27}\n```\n\n### SELECT with WHERE clause\n```python\nargs = ('IBM',)\nresult = client.execute(\"SELECT * FROM stocks WHERE symbol = ?\", *args)\npprint(result)\n\n```\nOUTPUT\n\n```text\n{'error': None,\n 'items': [['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0]]}\n```\n\n### Execute a SCRIPT\n\n```python\nscript = '''CREATE TABLE users(id INTEGER PRIMARY KEY, name TEXT, phone TEXT);\n            CREATE TABLE accounts(id INTEGER PRIMARY KEY, description TEXT);\n\n            INSERT INTO users(name, phone) VALUES ('John', '5557241'), \n             ('Adam', '5547874'), ('Jack', '5484522');'''\n\nresult = client.execute(script, execute_script=True)\npprint(result)\n\n```\n\nOUTPUT\n```text\n{'error': None, 'items': []}\n```\n\nSelect the rows inserted using the above sql_script\n\n```python\nresult = client.execute(\"SELECT * FROM users\")\npprint(result)\n```\n\nOUTPUT\n```text\n{'error': None, 'items': [[2, 'Adam', '5547874'], \n                          [3, 'Jack', '5484522']]}\n```\n\n\n### DROP a TABLE\n\nNote: In the default authorization setting, a client is not allowed to drop any table.\n\n```python\nresult = client.execute(\"DROP TABLE stocks\")\npprint(result)\n```\n\nOUTPUT\n\n```text\n{'error': {'message': 'sqlite3.DatabaseError: not authorized',\n           'type': 'sqlite3.DatabaseError'},\n 'items': []}\n```\n\n## Generic Default Authorization Policy\n\n\n```python\nDEFAULT_AUTH_CONFIG = {\n            sqlite3.SQLITE_OK: {\n                sqlite3.SQLITE_CREATE_INDEX,\n                sqlite3.SQLITE_CREATE_TABLE,\n                sqlite3.SQLITE_CREATE_TEMP_INDEX,\n                sqlite3.SQLITE_CREATE_TEMP_TABLE,\n                sqlite3.SQLITE_CREATE_TEMP_TRIGGER,\n                sqlite3.SQLITE_CREATE_TEMP_VIEW,\n                sqlite3.SQLITE_CREATE_TRIGGER,\n                sqlite3.SQLITE_CREATE_VIEW,\n                sqlite3.SQLITE_INSERT,\n                sqlite3.SQLITE_READ,\n                sqlite3.SQLITE_SELECT,\n                sqlite3.SQLITE_TRANSACTION,\n                sqlite3.SQLITE_UPDATE,\n                sqlite3.SQLITE_ATTACH,\n                sqlite3.SQLITE_DETACH,\n                sqlite3.SQLITE_ALTER_TABLE,\n                sqlite3.SQLITE_REINDEX,\n                sqlite3.SQLITE_ANALYZE,\n                },\n\n            sqlite3.SQLITE_DENY: {\n                sqlite3.SQLITE_DELETE,\n                sqlite3.SQLITE_DROP_INDEX,\n                sqlite3.SQLITE_DROP_TABLE,\n                sqlite3.SQLITE_DROP_TEMP_INDEX,\n                sqlite3.SQLITE_DROP_TEMP_TABLE,\n                sqlite3.SQLITE_DROP_TEMP_TRIGGER,\n                sqlite3.SQLITE_DROP_TEMP_VIEW,\n                sqlite3.SQLITE_DROP_TRIGGER,\n                sqlite3.SQLITE_DROP_VIEW,\n            },\n\n            sqlite3.SQLITE_IGNORE: {\n                sqlite3.SQLITE_PRAGMA\n            }\n\n}\n```\n\nYou can define your own authorization policy in a python dictionary(as shown above) and pass it to the `SQLiteServer` class\nas `auth_config` parameter.\nIt is recommended you **do not** override the `SQLITE_PRAGMA` action as the database starts in `pragma journal_mode=wal` mode \n\n\n# CLI\n\n`sqlite-server` is a console script to start an SQLiteServer.\n\n```bash\nUsage: sqlite-server [OPTIONS]\n\nOptions:\n  --log-level [CRITICAL|FATAL|ERROR|WARN|WARNING|INFO|DEBUG|NOTSET]\n                                  Logging level  [default: INFO]\n  --advertise-host TEXT           Host address on which to run the\n                                  SQLiteServer  [default: 0.0.0.0]\n\n  --port TEXT                     Port on which SQLiteServer will listen for\n                                  connection requests  [default: 5000]\n\n  --database TEXT                 Path like object giving the database name.\n                                  You can use `:memory:` for an in-memory\n                                  database  [default: :memory:]\n\n  --zap / --no-zap                True, if you want to enable ZAP\n                                  authentication  [default: False]\n\n  --curvezmq / --no-curvezmq      True, if you want to enable CurveZMQ\n                                  encryption  [default: False]\n\n  --curve-dir TEXT                Curve Key directory\n  --key-id TEXT                   Server key ID\n  --help                          Show this message and exit.\n```\n\nAll docker examples use this console script as an entrypoint\n\n# Secure Client and Server Setup\n\nPlease read the [link](https://github.com/aosingh/sqlite_rx/wiki/Secure-Client-Server-Setup) for a detailed explanation on how to setup a secure client/server communication.\nThis link also explains how to setup CurveZMQ encryption and ZAP authentication\n\n# Docker Examples\n\nThe following `docker-compose` examples using the docker image [`aosingh/sqlite_rx`](https://hub.docker.com/r/aosingh/sqlite_rx)\n\n\n\n`sqlite-server` CLI is used in all the docker examples\n\n## In-memory SQLite Database\n\n```yaml\nversion: \"3\"\nservices:\n  sqlite_server:\n    image: aosingh/sqlite_rx\n    command: sqlite-server --log-level DEBUG\n    ports:\n    - 5000:5000\n\n```\n\n- Note that in the docker container the server listens on port `5000` so, do enable port forwarding on the host machine\n\n## On Disk SQLite Database\n\ndocker volume is used to persist the database file on the host's file system\n\n```yaml\n\nversion: \"3\"\nservices:\n\n  sqlite_server:\n    image: aosingh/sqlite_rx\n    command: sqlite-server --log-level DEBUG --database /data/database.db\n    ports:\n      - 5000:5000\n    volumes:\n      - data:/data\n\nvolumes:\n  data: {}\n```\n\n- Named docker volume `data` is mounted to `/data` location in the container\n- `sqlite-server` CLI accepts `--database` option which is the database path in the container. \nForm is `/data/<dbname>.db`\n\n\n## SQLite Database server with CurveZMQ encryption\n\nCurveZMQ is a protocol for secure messaging across the Internet that closely follows the CurveCP security handshake. `curve-keygen` is a script (packaged with sqlite_rx) which is modeled after `ssh-keygen` to generate public and private keys.\nCurve Key Generation uses an OpenSSH like directory: `~/.curve`\n\nWe need public keys for both servers and clients. We differentiate this by running the `curve-keygen` script in either client or server mode.\n\nOnce the keys have been generated, we can enable `CurveZMQ` encryption in the following \nway\n\n```yaml\n\nversion: \"3\"\nservices:\n\n  sqlite_server:\n    image: aosingh/sqlite_rx\n    command: sqlite-server --curvezmq --log-level DEBUG --database /data/database.db --key-id id_server_Abhisheks-MacBook-Pro.local_curve\n    ports:\n      - 5000:5000\n    volumes:\n      - data:/data\n      - /Users/as/.curve:/root/.curve\n\nvolumes:\n  data: {}\n```\n\n- `sqlite-server` CLI accepts `--curvezmq` boolean flag to enable encryption\n- `sqlite-server` CLI accepts `--key-id` which is the server key id available at `/root/.curve` location\n- `/Users/as/.curve` (on host machine) is mapped to `/root/.curve` in the docker container. \n\n\n## SQLite Database server with CurveZMQ encryption and ZAP authentication\n\nZeroMQ Authentication protocol\n\nSetting `--zap = True` will restrict connections to clients whose public keys are in the `/root/.curve/authorized_clients/` directory. Set this to `False` to allow any client with the server's\npublic key to connect, without requiring the server to possess each client's public key.\n\n\n```yaml\n\nversion: \"3\"\nservices:\n\n  sqlite_server:\n    image: aosingh/sqlite_rx\n    command: sqlite-server --zap --curvezmq --log-level DEBUG --database /data/database.db --key-id id_server_Abhisheks-MacBook-Pro.local_curve\n    ports:\n    - 5000:5000\n    volumes:\n    - data:/data\n    - /Users/as/.curve:/root/.curve\n\nvolumes:\n  data: {}\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aosingh/sqlite_rx", "keywords": "sqlite client server", "license": "GNU GPLv3", "maintainer": "Abhishek Singh", "maintainer_email": "aosingh@asu.edu", "name": "sqlite-rx", "package_url": "https://pypi.org/project/sqlite-rx/", "platform": "", "project_url": "https://pypi.org/project/sqlite-rx/", "project_urls": {"Homepage": "https://github.com/aosingh/sqlite_rx"}, "release_url": "https://pypi.org/project/sqlite-rx/0.9.98/", "requires_dist": ["msgpack-python", "pyzmq", "tornado", "click"], "requires_python": "", "summary": "Python SQLite Client and Server", "version": "0.9.98", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sqlite_rx <a href=\"https://travis-ci.org/aosingh/sqlite_rx\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7868e37935ea3d27bee37f0e45d8b48b153196eb/68747470733a2f2f7472617669732d63692e6f72672f616f73696e67682f73716c6974655f72782e7376673f6272616e63683d6d6173746572\"></a>  <a href=\"https://pypi.python.org/pypi/sqlite-rx\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b6e52a499933fb7d8a68b1df8adcc363f1b5eb7e/68747470733a2f2f62616467652e667572792e696f2f70792f73716c6974652d72782e737667\"></a> <a href=\"https://coveralls.io/github/aosingh/sqlite_rx?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/39a8ff4774c2783d84f608807382d0cba94c4b76/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f616f73696e67682f73716c6974655f72782f62616467652e7376673f6272616e63683d6d6173746572\"></a></h1>\n<p><a href=\"(https://www.python.org/downloads/release/python-370/)\" rel=\"nofollow\"><img alt=\"Python 3.6\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01419d339114693587408dd14856677a4789006a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362d626c75652e737667\"></a> <a href=\"https://www.python.org/downloads/release/python-370/\" rel=\"nofollow\"><img alt=\"Python 3.7\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99a5180f32db379110e9948c7de1aaf8f77bf2e8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e372d626c75652e737667\"></a> <a href=\"https://www.python.org/downloads/release/python-380/\" rel=\"nofollow\"><img alt=\"Python 3.8\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f8a5f68d8d76185564998e2d4814ac79bc72a7c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e382d626c75652e737667\"></a>\n<a href=\"https://www.pypy.org/index.html\" rel=\"nofollow\"><img alt=\"PyPy3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ed39c8fba3eb9599eca037d66bc5b834d29258a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d50795079332d626c75652e737667\"></a></p>\n<h2>Background</h2>\n<p><a href=\"https://www.sqlite.org/index.html\" rel=\"nofollow\">SQLite</a> is a lightweight database written in C.\nThe Python programming language has in-built support to interact with the database(locally) which is either stored on disk or in memory.</p>\n<h2>Introducing sqlite_rx (SQLite remote execution)</h2>\n<p>With <code>sqlite_rx</code>, clients should be able to communicate with an <code>SQLiteServer</code> in a fast, simple and secure manner and execute queries remotely.</p>\n<p>Key Features</p>\n<ul>\n<li>Python Client and Server for <a href=\"https://www.sqlite.org/index.html\" rel=\"nofollow\">SQLite</a> database built using <a href=\"http://zguide.zeromq.org/page:all\" rel=\"nofollow\">ZeroMQ</a> as the transport layer and <a href=\"https://msgpack.org/index.html\" rel=\"nofollow\">msgpack</a> for serialization/deserialization.</li>\n<li>Supports authentication using <a href=\"https://rfc.zeromq.org/spec:27/ZAP/\" rel=\"nofollow\">ZeroMQ Authentication Protocol (ZAP)</a></li>\n<li>Supports encryption using <a href=\"http://curvezmq.org/\" rel=\"nofollow\">CurveZMQ</a></li>\n<li>Allows the users to define a generic authorization policy during server startup</li>\n</ul>\n<h1>Install</h1>\n<p>Currently, only Python 3 is supported.</p>\n<pre>pip install sqlite_rx\n</pre>\n<h1>Examples</h1>\n<h2>Server</h2>\n<p>Following are the options to start an <code>SQLiteServer</code></p>\n<h3>Python API</h3>\n<p><code>SQLiteServer</code> runs in a single thread and follows an event-driven concurrency model (using <code>tornado's</code> event loop) which minimizes the cost of concurrent client connections.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging.config</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlite_rx</span> <span class=\"kn\">import</span> <span class=\"n\">get_default_logger_settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlite_rx.server</span> <span class=\"kn\">import</span> <span class=\"n\">SQLiteServer</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n\n    <span class=\"c1\"># database is a path-like object giving the pathname </span>\n    <span class=\"c1\"># of the database file to be opened. </span>\n\n    <span class=\"c1\"># You can use \":memory:\" to open a database connection to a database </span>\n    <span class=\"c1\"># that resides in RAM instead of on disk</span>\n\n    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">dictConfig</span><span class=\"p\">(</span><span class=\"n\">get_default_logger_settings</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">))</span>\n    <span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">SQLiteServer</span><span class=\"p\">(</span><span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">\":memory:\"</span><span class=\"p\">,</span>\n                          <span class=\"n\">bind_address</span><span class=\"o\">=</span><span class=\"s2\">\"tcp://127.0.0.1:5000\"</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n    <span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n        <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<h3>CLI to start a server</h3>\n<p>Refer <a href=\"#cli\" rel=\"nofollow\">CLI</a></p>\n<h3>Docker</h3>\n<p>Refer <a href=\"#docker-examples\" rel=\"nofollow\">Docker Examples</a></p>\n<h2>Client</h2>\n<p><code>SQLiteClient</code> is a thin client with a single method called <code>execute</code></p>\n<p>The <code>execute</code> method reacts to the following keyword arguments:</p>\n<ol>\n<li>\n<p><code>execute_many</code>: True if you want to insert multiple rows with one execute call.</p>\n</li>\n<li>\n<p><code>execute_script</code>: True if you want to execute a script with multiple SQL commands.</p>\n</li>\n<li>\n<p><code>request_timeout</code>: Time in ms to wait for a response before retrying. Default is 2500 ms</p>\n</li>\n<li>\n<p><code>retries</code>: Number of times to retry before abandoning the request. Default is 5</p>\n</li>\n</ol>\n<p>Below are a few examples</p>\n<h3>Instantiate a client</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging.config</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlite_rx.client</span> <span class=\"kn\">import</span> <span class=\"n\">SQLiteClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlite_rx</span> <span class=\"kn\">import</span> <span class=\"n\">get_default_logger_settings</span>\n\n<span class=\"c1\"># sqlite_rx comes with a default logger settings. You could use as below.</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">dictConfig</span><span class=\"p\">(</span><span class=\"n\">get_default_logger_settings</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">))</span>\n\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">SQLiteClient</span><span class=\"p\">(</span><span class=\"n\">connect_address</span><span class=\"o\">=</span><span class=\"s2\">\"tcp://127.0.0.1:5000\"</span><span class=\"p\">)</span>\n</pre>\n<h3>SELECT statement: (Table not present)</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s2\">\"SELECT * FROM IDOLS\"</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p>OUTPUT</p>\n<pre>{'error': {'message': 'sqlite3.OperationalError: no such table: IDOLS',\n           'type': 'sqlite3.OperationalError'},\n 'items': []}\n</pre>\n<h3>CREATE TABLE statement</h3>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s2\">\"CREATE TABLE stocks (date text, trans text, symbol text, qty real, price real)\"</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p>OUTPUT</p>\n<pre>{'error': None, 'items': []}\n</pre>\n<h3>INSERT MANY rows</h3>\n<pre><span class=\"n\">purchases</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s1\">'2006-03-28'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'IBM'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">45.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-05'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'MSFT'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">72.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-06'</span><span class=\"p\">,</span> <span class=\"s1\">'SELL'</span><span class=\"p\">,</span> <span class=\"s1\">'XOM'</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mf\">53.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-03-28'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'IBM'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">45.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-05'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'MSFT'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">72.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-06'</span><span class=\"p\">,</span> <span class=\"s1\">'SELL'</span><span class=\"p\">,</span> <span class=\"s1\">'XOM'</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mf\">53.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-03-28'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'IBM'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">45.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-05'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'MSFT'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">72.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-06'</span><span class=\"p\">,</span> <span class=\"s1\">'SELL'</span><span class=\"p\">,</span> <span class=\"s1\">'XOM'</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mf\">53.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-03-28'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'IBM'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">45.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-05'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'MSFT'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">72.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-06'</span><span class=\"p\">,</span> <span class=\"s1\">'SELL'</span><span class=\"p\">,</span> <span class=\"s1\">'XOM'</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mf\">53.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-03-28'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'IBM'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">45.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-05'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'MSFT'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">72.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-06'</span><span class=\"p\">,</span> <span class=\"s1\">'SELL'</span><span class=\"p\">,</span> <span class=\"s1\">'XOM'</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mf\">53.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-03-28'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'IBM'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">45.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-05'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'MSFT'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">72.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-06'</span><span class=\"p\">,</span> <span class=\"s1\">'SELL'</span><span class=\"p\">,</span> <span class=\"s1\">'XOM'</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mf\">53.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-03-28'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'IBM'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">45.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-05'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'MSFT'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">72.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-06'</span><span class=\"p\">,</span> <span class=\"s1\">'SELL'</span><span class=\"p\">,</span> <span class=\"s1\">'XOM'</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mf\">53.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-03-28'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'IBM'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">45.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-05'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'MSFT'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">72.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-06'</span><span class=\"p\">,</span> <span class=\"s1\">'SELL'</span><span class=\"p\">,</span> <span class=\"s1\">'XOM'</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mf\">53.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-03-28'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'IBM'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">45.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-05'</span><span class=\"p\">,</span> <span class=\"s1\">'BUY'</span><span class=\"p\">,</span> <span class=\"s1\">'MSFT'</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mf\">72.00</span><span class=\"p\">),</span>\n                 <span class=\"p\">(</span><span class=\"s1\">'2006-04-06'</span><span class=\"p\">,</span> <span class=\"s1\">'SELL'</span><span class=\"p\">,</span> <span class=\"s1\">'XOM'</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mf\">53.00</span><span class=\"p\">),</span>\n                <span class=\"p\">]</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s2\">\"INSERT INTO stocks VALUES (?,?,?,?,?)\"</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">purchases</span><span class=\"p\">,</span> <span class=\"n\">execute_many</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p>OUTPUT</p>\n<pre>{'error': None, 'items': [], 'row_count': 27}\n</pre>\n<h3>SELECT with WHERE clause</h3>\n<pre><span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'IBM'</span><span class=\"p\">,)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s2\">\"SELECT * FROM stocks WHERE symbol = ?\"</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p>OUTPUT</p>\n<pre>{'error': None,\n 'items': [['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0],\n           ['2006-03-28', 'BUY', 'IBM', 1000.0, 45.0]]}\n</pre>\n<h3>Execute a SCRIPT</h3>\n<pre><span class=\"n\">script</span> <span class=\"o\">=</span> <span class=\"s1\">'''CREATE TABLE users(id INTEGER PRIMARY KEY, name TEXT, phone TEXT);</span>\n<span class=\"s1\">            CREATE TABLE accounts(id INTEGER PRIMARY KEY, description TEXT);</span>\n\n<span class=\"s1\">            INSERT INTO users(name, phone) VALUES ('John', '5557241'), </span>\n<span class=\"s1\">             ('Adam', '5547874'), ('Jack', '5484522');'''</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">script</span><span class=\"p\">,</span> <span class=\"n\">execute_script</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p>OUTPUT</p>\n<pre>{'error': None, 'items': []}\n</pre>\n<p>Select the rows inserted using the above sql_script</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s2\">\"SELECT * FROM users\"</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p>OUTPUT</p>\n<pre>{'error': None, 'items': [[2, 'Adam', '5547874'], \n                          [3, 'Jack', '5484522']]}\n</pre>\n<h3>DROP a TABLE</h3>\n<p>Note: In the default authorization setting, a client is not allowed to drop any table.</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s2\">\"DROP TABLE stocks\"</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p>OUTPUT</p>\n<pre>{'error': {'message': 'sqlite3.DatabaseError: not authorized',\n           'type': 'sqlite3.DatabaseError'},\n 'items': []}\n</pre>\n<h2>Generic Default Authorization Policy</h2>\n<pre><span class=\"n\">DEFAULT_AUTH_CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_OK</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_CREATE_INDEX</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_CREATE_TABLE</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_CREATE_TEMP_INDEX</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_CREATE_TEMP_TABLE</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_CREATE_TEMP_TRIGGER</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_CREATE_TEMP_VIEW</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_CREATE_TRIGGER</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_CREATE_VIEW</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_INSERT</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_READ</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_SELECT</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_TRANSACTION</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_UPDATE</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_ATTACH</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_DETACH</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_ALTER_TABLE</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_REINDEX</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_ANALYZE</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n\n            <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_DENY</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_DELETE</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_DROP_INDEX</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_DROP_TABLE</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_DROP_TEMP_INDEX</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_DROP_TEMP_TABLE</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_DROP_TEMP_TRIGGER</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_DROP_TEMP_VIEW</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_DROP_TRIGGER</span><span class=\"p\">,</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_DROP_VIEW</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n\n            <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_IGNORE</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">SQLITE_PRAGMA</span>\n            <span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</pre>\n<p>You can define your own authorization policy in a python dictionary(as shown above) and pass it to the <code>SQLiteServer</code> class\nas <code>auth_config</code> parameter.\nIt is recommended you <strong>do not</strong> override the <code>SQLITE_PRAGMA</code> action as the database starts in <code>pragma journal_mode=wal</code> mode</p>\n<h1>CLI</h1>\n<p><code>sqlite-server</code> is a console script to start an SQLiteServer.</p>\n<pre>Usage: sqlite-server <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n\nOptions:\n  --log-level <span class=\"o\">[</span>CRITICAL<span class=\"p\">|</span>FATAL<span class=\"p\">|</span>ERROR<span class=\"p\">|</span>WARN<span class=\"p\">|</span>WARNING<span class=\"p\">|</span>INFO<span class=\"p\">|</span>DEBUG<span class=\"p\">|</span>NOTSET<span class=\"o\">]</span>\n                                  Logging level  <span class=\"o\">[</span>default: INFO<span class=\"o\">]</span>\n  --advertise-host TEXT           Host address on which to run the\n                                  SQLiteServer  <span class=\"o\">[</span>default: <span class=\"m\">0</span>.0.0.0<span class=\"o\">]</span>\n\n  --port TEXT                     Port on which SQLiteServer will listen <span class=\"k\">for</span>\n                                  connection requests  <span class=\"o\">[</span>default: <span class=\"m\">5000</span><span class=\"o\">]</span>\n\n  --database TEXT                 Path like object giving the database name.\n                                  You can use <span class=\"sb\">`</span>:memory:<span class=\"sb\">`</span> <span class=\"k\">for</span> an in-memory\n                                  database  <span class=\"o\">[</span>default: :memory:<span class=\"o\">]</span>\n\n  --zap / --no-zap                True, <span class=\"k\">if</span> you want to <span class=\"nb\">enable</span> ZAP\n                                  authentication  <span class=\"o\">[</span>default: False<span class=\"o\">]</span>\n\n  --curvezmq / --no-curvezmq      True, <span class=\"k\">if</span> you want to <span class=\"nb\">enable</span> CurveZMQ\n                                  encryption  <span class=\"o\">[</span>default: False<span class=\"o\">]</span>\n\n  --curve-dir TEXT                Curve Key directory\n  --key-id TEXT                   Server key ID\n  --help                          Show this message and exit.\n</pre>\n<p>All docker examples use this console script as an entrypoint</p>\n<h1>Secure Client and Server Setup</h1>\n<p>Please read the <a href=\"https://github.com/aosingh/sqlite_rx/wiki/Secure-Client-Server-Setup\" rel=\"nofollow\">link</a> for a detailed explanation on how to setup a secure client/server communication.\nThis link also explains how to setup CurveZMQ encryption and ZAP authentication</p>\n<h1>Docker Examples</h1>\n<p>The following <code>docker-compose</code> examples using the docker image <a href=\"https://hub.docker.com/r/aosingh/sqlite_rx\" rel=\"nofollow\"><code>aosingh/sqlite_rx</code></a></p>\n<p><code>sqlite-server</code> CLI is used in all the docker examples</p>\n<h2>In-memory SQLite Database</h2>\n<pre><span class=\"nt\">version</span><span class=\"p\">:</span> <span class=\"s\">\"3\"</span>\n<span class=\"nt\">services</span><span class=\"p\">:</span>\n  <span class=\"nt\">sqlite_server</span><span class=\"p\">:</span>\n    <span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">aosingh/sqlite_rx</span>\n    <span class=\"nt\">command</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">sqlite-server --log-level DEBUG</span>\n    <span class=\"nt\">ports</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">5000:5000</span>\n</pre>\n<ul>\n<li>Note that in the docker container the server listens on port <code>5000</code> so, do enable port forwarding on the host machine</li>\n</ul>\n<h2>On Disk SQLite Database</h2>\n<p>docker volume is used to persist the database file on the host's file system</p>\n<pre><span class=\"nt\">version</span><span class=\"p\">:</span> <span class=\"s\">\"3\"</span>\n<span class=\"nt\">services</span><span class=\"p\">:</span>\n\n  <span class=\"nt\">sqlite_server</span><span class=\"p\">:</span>\n    <span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">aosingh/sqlite_rx</span>\n    <span class=\"nt\">command</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">sqlite-server --log-level DEBUG --database /data/database.db</span>\n    <span class=\"nt\">ports</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">5000:5000</span>\n    <span class=\"nt\">volumes</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">data:/data</span>\n\n<span class=\"nt\">volumes</span><span class=\"p\">:</span>\n  <span class=\"nt\">data</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">{}</span>\n</pre>\n<ul>\n<li>Named docker volume <code>data</code> is mounted to <code>/data</code> location in the container</li>\n<li><code>sqlite-server</code> CLI accepts <code>--database</code> option which is the database path in the container.\nForm is <code>/data/&lt;dbname&gt;.db</code></li>\n</ul>\n<h2>SQLite Database server with CurveZMQ encryption</h2>\n<p>CurveZMQ is a protocol for secure messaging across the Internet that closely follows the CurveCP security handshake. <code>curve-keygen</code> is a script (packaged with sqlite_rx) which is modeled after <code>ssh-keygen</code> to generate public and private keys.\nCurve Key Generation uses an OpenSSH like directory: <code>~/.curve</code></p>\n<p>We need public keys for both servers and clients. We differentiate this by running the <code>curve-keygen</code> script in either client or server mode.</p>\n<p>Once the keys have been generated, we can enable <code>CurveZMQ</code> encryption in the following\nway</p>\n<pre><span class=\"nt\">version</span><span class=\"p\">:</span> <span class=\"s\">\"3\"</span>\n<span class=\"nt\">services</span><span class=\"p\">:</span>\n\n  <span class=\"nt\">sqlite_server</span><span class=\"p\">:</span>\n    <span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">aosingh/sqlite_rx</span>\n    <span class=\"nt\">command</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">sqlite-server --curvezmq --log-level DEBUG --database /data/database.db --key-id id_server_Abhisheks-MacBook-Pro.local_curve</span>\n    <span class=\"nt\">ports</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">5000:5000</span>\n    <span class=\"nt\">volumes</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">data:/data</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">/Users/as/.curve:/root/.curve</span>\n\n<span class=\"nt\">volumes</span><span class=\"p\">:</span>\n  <span class=\"nt\">data</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">{}</span>\n</pre>\n<ul>\n<li><code>sqlite-server</code> CLI accepts <code>--curvezmq</code> boolean flag to enable encryption</li>\n<li><code>sqlite-server</code> CLI accepts <code>--key-id</code> which is the server key id available at <code>/root/.curve</code> location</li>\n<li><code>/Users/as/.curve</code> (on host machine) is mapped to <code>/root/.curve</code> in the docker container.</li>\n</ul>\n<h2>SQLite Database server with CurveZMQ encryption and ZAP authentication</h2>\n<p>ZeroMQ Authentication protocol</p>\n<p>Setting <code>--zap = True</code> will restrict connections to clients whose public keys are in the <code>/root/.curve/authorized_clients/</code> directory. Set this to <code>False</code> to allow any client with the server's\npublic key to connect, without requiring the server to possess each client's public key.</p>\n<pre><span class=\"nt\">version</span><span class=\"p\">:</span> <span class=\"s\">\"3\"</span>\n<span class=\"nt\">services</span><span class=\"p\">:</span>\n\n  <span class=\"nt\">sqlite_server</span><span class=\"p\">:</span>\n    <span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">aosingh/sqlite_rx</span>\n    <span class=\"nt\">command</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">sqlite-server --zap --curvezmq --log-level DEBUG --database /data/database.db --key-id id_server_Abhisheks-MacBook-Pro.local_curve</span>\n    <span class=\"nt\">ports</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">5000:5000</span>\n    <span class=\"nt\">volumes</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">data:/data</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">/Users/as/.curve:/root/.curve</span>\n\n<span class=\"nt\">volumes</span><span class=\"p\">:</span>\n  <span class=\"nt\">data</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">{}</span>\n</pre>\n\n          </div>"}, "last_serial": 7109021, "releases": {"0.9.5": [{"comment_text": "", "digests": {"md5": "7f6dca245a78c3c539598e0c20c364f9", "sha256": "209d394d57cfb5ee907070d23b05087023e60315eb226bd906aaf58dea8408c6"}, "downloads": -1, "filename": "sqlite_rx-0.9.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7f6dca245a78c3c539598e0c20c364f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11561, "upload_time": "2019-09-29T22:14:34", "upload_time_iso_8601": "2019-09-29T22:14:34.985274Z", "url": "https://files.pythonhosted.org/packages/07/1c/543ebeb9d6a740674bb6f43172c5e0ddfcc17db1f573947fbc6705614d2e/sqlite_rx-0.9.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42cd6d771e2cbfb697f88656bd944240", "sha256": "8735c2af9607525d3c6a0e909657db5ea0ef3cdf8965ea37b9bc0071b484a35f"}, "downloads": -1, "filename": "sqlite_rx-0.9.5.tar.gz", "has_sig": false, "md5_digest": "42cd6d771e2cbfb697f88656bd944240", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8871, "upload_time": "2019-09-29T22:14:37", "upload_time_iso_8601": "2019-09-29T22:14:37.020796Z", "url": "https://files.pythonhosted.org/packages/61/3b/33b4227efb22cd921bca8f4e3fd76cee72e4612f8291fca432fcd91c173a/sqlite_rx-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "9d6d5b43855460726a1be9e8bf0af571", "sha256": "a7b2383b61a868e14b171d72535afc45528bf2a70b8a7242afe393283ac8f670"}, "downloads": -1, "filename": "sqlite_rx-0.9.6-py3-none-any.whl", "has_sig": false, "md5_digest": "9d6d5b43855460726a1be9e8bf0af571", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11486, "upload_time": "2019-09-29T22:59:57", "upload_time_iso_8601": "2019-09-29T22:59:57.303360Z", "url": "https://files.pythonhosted.org/packages/aa/ba/7c72d11981f4f03e864509f19cdd7c4e8225c064e2c99b83678dbf78dde3/sqlite_rx-0.9.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "057bc6471af9fefe79b0fb1ac8063f56", "sha256": "9ef6febd6c138f8349f677faaa3f43096eb769e0ca4cfa1a0626d4510e7ad5c2"}, "downloads": -1, "filename": "sqlite_rx-0.9.6.tar.gz", "has_sig": false, "md5_digest": "057bc6471af9fefe79b0fb1ac8063f56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8832, "upload_time": "2019-09-29T22:59:58", "upload_time_iso_8601": "2019-09-29T22:59:58.957991Z", "url": "https://files.pythonhosted.org/packages/4c/a6/959d6ff90bb013ea705df0f36a82f78b51e4fe9483152c3ff0e21ad2a8cc/sqlite_rx-0.9.6.tar.gz", "yanked": false}], "0.9.7": [{"comment_text": "", "digests": {"md5": "2740cd6eb9dac990e89fe17823efb6b0", "sha256": "b19993b361b0e735081b2a67b4ebc7c350cc76c9f9769fd00f8964ee273e6e69"}, "downloads": -1, "filename": "sqlite_rx-0.9.7-py3-none-any.whl", "has_sig": false, "md5_digest": "2740cd6eb9dac990e89fe17823efb6b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11729, "upload_time": "2019-10-02T05:51:07", "upload_time_iso_8601": "2019-10-02T05:51:07.623838Z", "url": "https://files.pythonhosted.org/packages/5f/d7/3f28326d4ad86a7fbbbcb30b65ac6bf88defef889bc8d50451543a91fcbd/sqlite_rx-0.9.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f21f56e077321ce287878ef158a303f6", "sha256": "eb6ffb176de6adb1125361b92d4e7bad0a591089676a0ad36343265424fb4722"}, "downloads": -1, "filename": "sqlite_rx-0.9.7.tar.gz", "has_sig": false, "md5_digest": "f21f56e077321ce287878ef158a303f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10573, "upload_time": "2019-10-02T05:51:09", "upload_time_iso_8601": "2019-10-02T05:51:09.530781Z", "url": "https://files.pythonhosted.org/packages/fe/d2/260cd6686b1c971b28510c831e6223caa8dba559958661b0a4664a3eee40/sqlite_rx-0.9.7.tar.gz", "yanked": false}], "0.9.8": [{"comment_text": "", "digests": {"md5": "2667f2afa264a711f7e501ddd838dcff", "sha256": "3ae1ae546eb4cd5a7a2818eadf715b2c0355b937d5b8b1158e4d28b19b72bb1b"}, "downloads": -1, "filename": "sqlite_rx-0.9.8-py3-none-any.whl", "has_sig": false, "md5_digest": "2667f2afa264a711f7e501ddd838dcff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11715, "upload_time": "2019-10-02T06:07:31", "upload_time_iso_8601": "2019-10-02T06:07:31.706962Z", "url": "https://files.pythonhosted.org/packages/ab/be/6a764d90626ce243e9332b2667f0c959a4dac0a6b287ad4369ab8e31425a/sqlite_rx-0.9.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3eace5beb6cf41cf5f8b2ce3423cd03e", "sha256": "207c9d51a9508f63f1b17d4b3c1c10cb4db95c9ff63c19b2b18ba49b68ef8afa"}, "downloads": -1, "filename": "sqlite_rx-0.9.8.tar.gz", "has_sig": false, "md5_digest": "3eace5beb6cf41cf5f8b2ce3423cd03e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10598, "upload_time": "2019-10-02T06:07:33", "upload_time_iso_8601": "2019-10-02T06:07:33.318639Z", "url": "https://files.pythonhosted.org/packages/18/33/c54676ac79e72bf2c920040df2cd9901dd536b4967fc82c560f87e07af71/sqlite_rx-0.9.8.tar.gz", "yanked": false}], "0.9.9": [{"comment_text": "", "digests": {"md5": "f039e0bf7663da2b161fce21abf4af3d", "sha256": "7d84163b40b39cb49b81798148d53ae52f899479ea7bb2fec4f49cfef71359b7"}, "downloads": -1, "filename": "sqlite_rx-0.9.9-py3-none-any.whl", "has_sig": false, "md5_digest": "f039e0bf7663da2b161fce21abf4af3d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11700, "upload_time": "2019-10-02T06:36:34", "upload_time_iso_8601": "2019-10-02T06:36:34.322650Z", "url": "https://files.pythonhosted.org/packages/e6/e0/fb4278bb523ecabf40f147fea3d82b75d164128d1f2321909dd339e24270/sqlite_rx-0.9.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "822e3acb9f8fd7d77d018efda951acf0", "sha256": "5edbfafcf6762a1dd080a9b1d480f2a24d4dd457f9c9a5643647d81ff67546d6"}, "downloads": -1, "filename": "sqlite_rx-0.9.9.tar.gz", "has_sig": false, "md5_digest": "822e3acb9f8fd7d77d018efda951acf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10529, "upload_time": "2019-10-02T06:36:35", "upload_time_iso_8601": "2019-10-02T06:36:35.884667Z", "url": "https://files.pythonhosted.org/packages/85/58/6f7eac042770507c118d9253a1eb09369730ec8aab6ee454f1d246ae78d3/sqlite_rx-0.9.9.tar.gz", "yanked": false}], "0.9.91": [{"comment_text": "", "digests": {"md5": "fc683a9ab859a8c29f69e89e6482409f", "sha256": "1ea557f481021f5dcd2634c1fdb9f22fabf92fd5648b6a6deee6d32350be65de"}, "downloads": -1, "filename": "sqlite_rx-0.9.91-py3-none-any.whl", "has_sig": false, "md5_digest": "fc683a9ab859a8c29f69e89e6482409f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14136, "upload_time": "2019-10-09T06:15:10", "upload_time_iso_8601": "2019-10-09T06:15:10.320446Z", "url": "https://files.pythonhosted.org/packages/3e/e3/c8f42f703be2f4dfef9597e5e89c90965528157cbfb7073c43616f2f7539/sqlite_rx-0.9.91-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbff591c6cf947dd2a23b38470bba85c", "sha256": "5f16d5c7206426733a4f592a91f888ae1b996d1c806a75983bb4c75c1eb510c8"}, "downloads": -1, "filename": "sqlite_rx-0.9.91.tar.gz", "has_sig": false, "md5_digest": "cbff591c6cf947dd2a23b38470bba85c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13717, "upload_time": "2019-10-09T06:15:13", "upload_time_iso_8601": "2019-10-09T06:15:13.820959Z", "url": "https://files.pythonhosted.org/packages/59/cc/b21a3144a404d574286cb2009a9dedcd80628b7104ca75c86023f79aec0b/sqlite_rx-0.9.91.tar.gz", "yanked": false}], "0.9.92": [{"comment_text": "", "digests": {"md5": "44563d59f13b990ab587b6edea1ebad3", "sha256": "ba001b557843e1ee1a49f39af8d3a35285634efad454a88f21a0b609f2da8ba7"}, "downloads": -1, "filename": "sqlite_rx-0.9.92-py3-none-any.whl", "has_sig": false, "md5_digest": "44563d59f13b990ab587b6edea1ebad3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15561, "upload_time": "2019-10-24T05:44:18", "upload_time_iso_8601": "2019-10-24T05:44:18.907863Z", "url": "https://files.pythonhosted.org/packages/4e/a3/1fb0dfcf6e080d1707b5efa9ba8548cb57acb04ba257590dfca7eaecdc14/sqlite_rx-0.9.92-py3-none-any.whl", "yanked": false}], "0.9.93": [{"comment_text": "", "digests": {"md5": "2bdc09626a8a001c3bf43b8eaee841b9", "sha256": "e8dfebe65e8068a49ea033ddfffe2e055547a88688ae54d88ea91ceb12fbe79e"}, "downloads": -1, "filename": "sqlite_rx-0.9.93-py3-none-any.whl", "has_sig": false, "md5_digest": "2bdc09626a8a001c3bf43b8eaee841b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15890, "upload_time": "2019-10-24T06:00:55", "upload_time_iso_8601": "2019-10-24T06:00:55.477457Z", "url": "https://files.pythonhosted.org/packages/d1/ce/49f162c4b57fcaefa764c484ab32379e850fc54412410fbb14ef1639025c/sqlite_rx-0.9.93-py3-none-any.whl", "yanked": false}], "0.9.94": [{"comment_text": "", "digests": {"md5": "cb59a5586e7ed0dea1aaac28fbc29c36", "sha256": "153f6d856b8dca86ac3cae29ee50a8b5f5c3bdc41180cc0948201257879b934f"}, "downloads": -1, "filename": "sqlite_rx-0.9.94-py3-none-any.whl", "has_sig": false, "md5_digest": "cb59a5586e7ed0dea1aaac28fbc29c36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16492, "upload_time": "2019-10-31T23:10:49", "upload_time_iso_8601": "2019-10-31T23:10:49.826193Z", "url": "https://files.pythonhosted.org/packages/15/a7/f2dc5bcbdcfaf10c42ec0fdae7ca396f9c3c5355404647a9c147aff82a4d/sqlite_rx-0.9.94-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79823bd9a1944f59305163172904100e", "sha256": "554991b86d22b1db7fa9bb43671dd2769fce869aa57a3fd28df62f1851eb7e00"}, "downloads": -1, "filename": "sqlite_rx-0.9.94.tar.gz", "has_sig": false, "md5_digest": "79823bd9a1944f59305163172904100e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15490, "upload_time": "2019-10-31T23:10:52", "upload_time_iso_8601": "2019-10-31T23:10:52.051997Z", "url": "https://files.pythonhosted.org/packages/0c/40/d080c536d6b514f39a3ff87f8619b3cfa63e30581d0f41e1d8660eff666d/sqlite_rx-0.9.94.tar.gz", "yanked": false}], "0.9.95": [{"comment_text": "", "digests": {"md5": "7b27d60beeec72743c659acf21f01c0e", "sha256": "ab5e4f0723a871a5a398428f6c530caf2e457b5867ee5df6d40ab88056635f4e"}, "downloads": -1, "filename": "sqlite_rx-0.9.95-py3-none-any.whl", "has_sig": false, "md5_digest": "7b27d60beeec72743c659acf21f01c0e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17089, "upload_time": "2020-02-03T05:24:00", "upload_time_iso_8601": "2020-02-03T05:24:00.792896Z", "url": "https://files.pythonhosted.org/packages/3e/c2/b8c8179a7d98e0be819de014b4ee632975b587e07bc4322a3b9feee767f0/sqlite_rx-0.9.95-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab10e5f0e58ad46d678af9dfbc137206", "sha256": "22e75a9d1cab7fdb96bead9a08cb388b562406d27160082f961a6ca049dd4fe7"}, "downloads": -1, "filename": "sqlite_rx-0.9.95.tar.gz", "has_sig": false, "md5_digest": "ab10e5f0e58ad46d678af9dfbc137206", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15610, "upload_time": "2020-02-03T05:24:02", "upload_time_iso_8601": "2020-02-03T05:24:02.663489Z", "url": "https://files.pythonhosted.org/packages/08/0d/5cce4d079064a15046a167a30e171127356461cf54d8527f702e4e0832bf/sqlite_rx-0.9.95.tar.gz", "yanked": false}], "0.9.96": [{"comment_text": "", "digests": {"md5": "18e8688bf8040b5ed5efe87163eb12d6", "sha256": "13edcabe9aaea662d7736791f6ffb3b7d12a3307c59d929cc4867f8fc7d9da36"}, "downloads": -1, "filename": "sqlite_rx-0.9.96-py3-none-any.whl", "has_sig": false, "md5_digest": "18e8688bf8040b5ed5efe87163eb12d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18979, "upload_time": "2020-04-05T20:20:42", "upload_time_iso_8601": "2020-04-05T20:20:42.019175Z", "url": "https://files.pythonhosted.org/packages/3d/ea/78de400f3537f4b24957579221a033884dbea20c5634072d9af73718730b/sqlite_rx-0.9.96-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbe2b22901a06b1896ea7f78532fdc41", "sha256": "2cc248d45e204b83f32ff96c4065edba87ec62b1a9c1df2da4f705bc7beb97fb"}, "downloads": -1, "filename": "sqlite_rx-0.9.96.tar.gz", "has_sig": false, "md5_digest": "cbe2b22901a06b1896ea7f78532fdc41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17424, "upload_time": "2020-04-05T20:20:43", "upload_time_iso_8601": "2020-04-05T20:20:43.643332Z", "url": "https://files.pythonhosted.org/packages/1f/20/3ae541a028f30976497cc904e354f03c51ad55545de09dc3d6e82df54d8f/sqlite_rx-0.9.96.tar.gz", "yanked": false}], "0.9.97": [{"comment_text": "", "digests": {"md5": "5128a27b75819a5f550f5e87f79e4210", "sha256": "9c2745886a4db87dad7b937104cf9dc816bd4274257c6fa240aa50189b40deaf"}, "downloads": -1, "filename": "sqlite_rx-0.9.97-py3-none-any.whl", "has_sig": false, "md5_digest": "5128a27b75819a5f550f5e87f79e4210", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19898, "upload_time": "2020-04-05T22:55:20", "upload_time_iso_8601": "2020-04-05T22:55:20.349884Z", "url": "https://files.pythonhosted.org/packages/1d/47/db4d5c0a2266547ae208b728e7dd620f106e318d692b5cc81334f0047d71/sqlite_rx-0.9.97-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6030eddb197b855e177cb7a284baed4", "sha256": "1d7599e2b881da5d74e2772c8628dcc65a76a39288a8c632262f8e1457d70045"}, "downloads": -1, "filename": "sqlite_rx-0.9.97.tar.gz", "has_sig": false, "md5_digest": "d6030eddb197b855e177cb7a284baed4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19533, "upload_time": "2020-04-05T22:55:21", "upload_time_iso_8601": "2020-04-05T22:55:21.924832Z", "url": "https://files.pythonhosted.org/packages/80/0a/edb9b942d8099ee30eabe5e44ac3b5be5117104b0d014920f6678de6576c/sqlite_rx-0.9.97.tar.gz", "yanked": false}], "0.9.98": [{"comment_text": "", "digests": {"md5": "4ca33806f6adacb7980918af8cec8cca", "sha256": "8a7f49c59c1354814aee37889960387282aee60639badca33b6a758f869fe3ea"}, "downloads": -1, "filename": "sqlite_rx-0.9.98-py3-none-any.whl", "has_sig": false, "md5_digest": "4ca33806f6adacb7980918af8cec8cca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20048, "upload_time": "2020-04-27T06:35:16", "upload_time_iso_8601": "2020-04-27T06:35:16.110594Z", "url": "https://files.pythonhosted.org/packages/b2/a5/f5ff137528540e3d06d7a4d2bd6265cc8b84e3266d1019afb97125b5164e/sqlite_rx-0.9.98-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "928a862196b8ced3789bc343c5fb0523", "sha256": "42ddd25adeb126a7ebe6b46fe03b57a61d11164c2d21e5799e85c0ff24f704b6"}, "downloads": -1, "filename": "sqlite_rx-0.9.98.tar.gz", "has_sig": false, "md5_digest": "928a862196b8ced3789bc343c5fb0523", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19709, "upload_time": "2020-04-27T06:35:17", "upload_time_iso_8601": "2020-04-27T06:35:17.539680Z", "url": "https://files.pythonhosted.org/packages/fb/d4/085fc1dade85b78a4be8032a9cc143aa91739b8367d3995b4bd39a379f39/sqlite_rx-0.9.98.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ca33806f6adacb7980918af8cec8cca", "sha256": "8a7f49c59c1354814aee37889960387282aee60639badca33b6a758f869fe3ea"}, "downloads": -1, "filename": "sqlite_rx-0.9.98-py3-none-any.whl", "has_sig": false, "md5_digest": "4ca33806f6adacb7980918af8cec8cca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20048, "upload_time": "2020-04-27T06:35:16", "upload_time_iso_8601": "2020-04-27T06:35:16.110594Z", "url": "https://files.pythonhosted.org/packages/b2/a5/f5ff137528540e3d06d7a4d2bd6265cc8b84e3266d1019afb97125b5164e/sqlite_rx-0.9.98-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "928a862196b8ced3789bc343c5fb0523", "sha256": "42ddd25adeb126a7ebe6b46fe03b57a61d11164c2d21e5799e85c0ff24f704b6"}, "downloads": -1, "filename": "sqlite_rx-0.9.98.tar.gz", "has_sig": false, "md5_digest": "928a862196b8ced3789bc343c5fb0523", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19709, "upload_time": "2020-04-27T06:35:17", "upload_time_iso_8601": "2020-04-27T06:35:17.539680Z", "url": "https://files.pythonhosted.org/packages/fb/d4/085fc1dade85b78a4be8032a9cc143aa91739b8367d3995b4bd39a379f39/sqlite_rx-0.9.98.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:40 2020"}