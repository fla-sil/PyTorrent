{"info": {"author": "Unto Kuuranne", "author_email": "unto.kuuranne@aalto.fi", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "\r\nppas - PostProcess Answer Sets\r\n==============================\r\n\r\nThis program accepts clingo 4.x and clasp 3.x log files and an ASP script to\r\npostprocess the answer sets the log contains.\r\nThe result is a rewritten log file.\r\n\r\nEach answer is assigned a sequence number starting from 1 and it's atoms are\r\nwrapped in the special predicate _as(Term, SequenceNum). The answer sets are\r\nreplaced with atoms read from a special predicate _pp(Term, SequenceNum).\r\n\r\nE.g. adding the atom \"a.\" to the first answer set in the log could be done with\r\nthe following ASP script::\r\n\r\n\t% Add \"a.\" to first answer set / model\r\n\t_pp(a, 1).\r\n\t% Pass everything else through\r\n\t_pp(Term, SeqNum) :- _as(Term, SeqNum).\r\n\r\nNote that the sequence number does not necessarily correspond to <num> in the\r\n\"Answer: <num>\" line in the input log file; for example when multiple solve\r\ncalls were used.\r\n\r\nInstalling\r\n----------\r\n\r\nRun::\r\n\r\n\tpip install --user ppas\r\n\r\n\r\nUsage\r\n-----\r\n::\r\n\r\n  ppas <script> <infile> <outfile> [--clingo-bin=<path>, --quiet]\r\n  ppas -h | --help\r\n  ppas --version\r\n\r\n\tOptions:\r\n  \t--clingo-bin=<path>       Path to clingo binary.\r\n  \t--quiet                   Disable stdout messages.\r\n  \t-h --help                 Show this screen.\r\n  \t--version                 Show version.\r\n\r\nExamples\r\n--------\r\n\r\nExamples are available in the examples/ directory.\r\nE.g.::\r\n\r\n  ppas.py examples/tsp/script.asp examples/tsp/log.txt tsp-processed.txt\r\n\r\nLicense\r\n-------\r\n\r\nMIT. See LICENSE.txt\r\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/vukk/ppas/tarball/v0.1.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vukk/ppas", "keywords": "asp,answer set programming,postprocess,clingo", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "ppas", "package_url": "https://pypi.org/project/ppas/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ppas/", "project_urls": {"Download": "https://github.com/vukk/ppas/tarball/v0.1.0", "Homepage": "https://github.com/vukk/ppas"}, "release_url": "https://pypi.org/project/ppas/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "PostProcess Answer Sets", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This program accepts clingo 4.x and clasp 3.x log files and an ASP script to\npostprocess the answer sets the log contains.\nThe result is a rewritten log file.</p>\n<p>Each answer is assigned a sequence number starting from 1 and it\u2019s atoms are\nwrapped in the special predicate _as(Term, SequenceNum). The answer sets are\nreplaced with atoms read from a special predicate _pp(Term, SequenceNum).</p>\n<p>E.g. adding the atom \u201ca.\u201d to the first answer set in the log could be done with\nthe following ASP script:</p>\n<pre>% Add \"a.\" to first answer set / model\n_pp(a, 1).\n% Pass everything else through\n_pp(Term, SeqNum) :- _as(Term, SeqNum).\n</pre>\n<p>Note that the sequence number does not necessarily correspond to &lt;num&gt; in the\n\u201cAnswer: &lt;num&gt;\u201d line in the input log file; for example when multiple solve\ncalls were used.</p>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Run:</p>\n<pre>pip install --user ppas\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>ppas &lt;script&gt; &lt;infile&gt; &lt;outfile&gt; [--clingo-bin=&lt;path&gt;, --quiet]\nppas -h | --help\nppas --version\n\n      Options:\n      --clingo-bin=&lt;path&gt;       Path to clingo binary.\n      --quiet                   Disable stdout messages.\n      -h --help                 Show this screen.\n      --version                 Show version.\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Examples are available in the examples/ directory.\nE.g.:</p>\n<pre>ppas.py examples/tsp/script.asp examples/tsp/log.txt tsp-processed.txt\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT. See LICENSE.txt</p>\n</div>\n\n          </div>"}, "last_serial": 1708338, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a4984fbfd71bfd8e54dc8b6b38b7af42", "sha256": "3644f7564eb8a0766af510aeb79dfa74d26728fdc39ef919cea8cead1a50da20"}, "downloads": -1, "filename": "ppas-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a4984fbfd71bfd8e54dc8b6b38b7af42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3311, "upload_time": "2015-09-04T16:52:23", "upload_time_iso_8601": "2015-09-04T16:52:23.436434Z", "url": "https://files.pythonhosted.org/packages/c2/8d/763c13db768cd1927ac08625df130ff21c3ec1e86ede57254859c18856dd/ppas-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a4984fbfd71bfd8e54dc8b6b38b7af42", "sha256": "3644f7564eb8a0766af510aeb79dfa74d26728fdc39ef919cea8cead1a50da20"}, "downloads": -1, "filename": "ppas-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a4984fbfd71bfd8e54dc8b6b38b7af42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3311, "upload_time": "2015-09-04T16:52:23", "upload_time_iso_8601": "2015-09-04T16:52:23.436434Z", "url": "https://files.pythonhosted.org/packages/c2/8d/763c13db768cd1927ac08625df130ff21c3ec1e86ede57254859c18856dd/ppas-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:34 2020"}