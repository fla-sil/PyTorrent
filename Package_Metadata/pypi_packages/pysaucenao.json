{"info": {"author": "Makoto", "author_email": "FujiMakoto@users.noreply.github.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Multimedia :: Graphics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# PySauceNao\n![GitHub](https://img.shields.io/github/license/FujiMakoto/pysaucenao) ![GitHub release (latest by date)](https://img.shields.io/github/v/release/fujimakoto/pysaucenao)\n\nPySauceNao is an unofficial asynchronous library for the [SauceNao](https://saucenao.com/) API. It supports lookups via URL or from the local filesystem.\n\n# Installation\nThis library requires [Python 3.6](https://www.python.org) or above.\n\nYou can install the library through pip as follows,\n```shell script\npip install pysaucenao\n```\n\n## Usage\n```python\nfrom pysaucenao import SauceNao\nsauce = SauceNao(self, *, api_key: Optional[str] = None,\n                 db_mask: Optional[int] = None,\n                 db_mask_disable: Optional[int] = None,\n                 db: int = 999,\n                 results_limit: int = 6,\n                 min_similarity: float = 65.0,\n                 test_mode: int = 0,\n                 loop: Optional[asyncio.AbstractEventLoop] = None)\n\n# results = await sauce.from_file('/path/to/image.png')\nresults = await sauce.from_url('https://i.imgur.com/QaKpV3s.png')\nrepr(results)\n```\n```\n<SauceNaoResults(count=2, short_avail=3, long_avail=87, results=[<GenericSourc... Nico Seiga')>, <GenericSourc...e='Danbooru')>])>\n```\n\nThe library attempts to provide a developer friendly container format for all results. Meaning, no matter if SauceNao returns a Pixiv source result or a more obscure source, you'll be able to easily pull the title, author URL and other useful information.\n\n```python\nfrom pysaucenao import SauceNao, PixivSource\nsauce = SauceNao()\nresults = sauce.from_url('https://i.imgur.com/oVPWy7f.png')\n\nlen(results)  # 4\n\n# Find out how many API request limits you have remaining after a search query\nresults.short_remaining  # 3 (per 30 seconds limit)\nresults.long_remaining   # 86 (per day limit)\n\n# You can determine whether the search result is a Pixiv, Booru, Video or Other/Generic result by the type property or type checking\nresults[0].type  # pixiv\nisinstance(results[0], PixivSource)  # True\n\nresults[0].similarity     # 96.07\nresults[0].thumbnail      # Returns a temporary signed URL; not suitable for permanent hotlinking\nresults[0].title          # \u306a\u3067\u306a\u3067\u3059\u308b\u306b\u3083\nresults[0].author_name    # \u304a\u30fc\u3058\u8336\uff203\u65e5\u76eeI-03b\nresults[0].author_url     # https://www.pixiv.net/member.php?id=122233\nresults[0].url            # https://www.pixiv.net/member_illust.php?mode=medium&illust_id=66106354\nresults[0].source_url     # Same as url for Pixiv results, but returns the linked original source URL for Booru entries\nresults[0].index          # Pixiv\n```\n\nVideo search results provide three additional properties containing the episode number, estimated timestamp, and release year\n```python\nfrom pysaucenao import SauceNao, VideoSource\nsauce = SauceNao()\nresults = sauce.from_url('https://i.imgur.com/1M8MhB0.png')\n\nif isinstance(results[0], VideoSource):\n    results[0].episode    # '1'\n    results[0].year       # '2017'\n    results[0].timestamp  # '00:07:53 / 00:23:40'\n```\n\nMangaSource search results, similarly, provide an additional `chapter` property.\n\n## Registering for an API key\nIf you are performing lots of API queries, you will eventually need to sign up and register for an API key (and possibly upgrade your account for very large request volumes)\n\nYou can register for an account on [SauceNAO's website](https://saucenao.com/user.php)\n\n## Error handling\nThe SauceNao class will throw an exception if any of the following occur:\n* You have exceeded your 30-second search query limit (ShortLimitReachedException)\n* You have exceeded your 24-hour search query limit (DailyLimitReachedException)\n* You attempted to upload a file larger than SauceNAO allows (FileSizeLimitException)\n* You provided an invalid API key (InvalidOrWrongApiKeyException)\n* Any other unknown error occurred / service may be down (UnknownStatusCodeException)\n\nAll of these exceptions extend a base SauceNaoException class for easy catching and handling.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/FujiMakoto/pysaucenao/archive/0.1.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FujiMakoto/pysaucenao", "keywords": "saucenao,anime,artwork", "license": "gpl-3.0", "maintainer": "", "maintainer_email": "", "name": "pysaucenao", "package_url": "https://pypi.org/project/pysaucenao/", "platform": "", "project_url": "https://pypi.org/project/pysaucenao/", "project_urls": {"Download": "https://github.com/FujiMakoto/pysaucenao/archive/0.1.1.tar.gz", "Homepage": "https://github.com/FujiMakoto/pysaucenao"}, "release_url": "https://pypi.org/project/pysaucenao/0.2.0/", "requires_dist": ["aiohttp"], "requires_python": "", "summary": "PySauceNao is an unofficial asynchronous library for the SauceNao API. It supports lookups via URL or from the local filesystem.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PySauceNao</h1>\n<p><img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7782471a1863c3211717d48e2b0e9bc803d61250/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f46756a694d616b6f746f2f707973617563656e616f\"> <img alt=\"GitHub release (latest by date)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83bf02f3f119c1666a4a7434ab957259d37fd180/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f66756a696d616b6f746f2f707973617563656e616f\"></p>\n<p>PySauceNao is an unofficial asynchronous library for the <a href=\"https://saucenao.com/\" rel=\"nofollow\">SauceNao</a> API. It supports lookups via URL or from the local filesystem.</p>\n<h1>Installation</h1>\n<p>This library requires <a href=\"https://www.python.org\" rel=\"nofollow\">Python 3.6</a> or above.</p>\n<p>You can install the library through pip as follows,</p>\n<pre>pip install pysaucenao\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pysaucenao</span> <span class=\"kn\">import</span> <span class=\"n\">SauceNao</span>\n<span class=\"n\">sauce</span> <span class=\"o\">=</span> <span class=\"n\">SauceNao</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">db_mask</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">db_mask_disable</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">999</span><span class=\"p\">,</span>\n                 <span class=\"n\">results_limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">6</span><span class=\"p\">,</span>\n                 <span class=\"n\">min_similarity</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">65.0</span><span class=\"p\">,</span>\n                 <span class=\"n\">test_mode</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                 <span class=\"n\">loop</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">AbstractEventLoop</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># results = await sauce.from_file('/path/to/image.png')</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">sauce</span><span class=\"o\">.</span><span class=\"n\">from_url</span><span class=\"p\">(</span><span class=\"s1\">'https://i.imgur.com/QaKpV3s.png'</span><span class=\"p\">)</span>\n<span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">)</span>\n</pre>\n<pre><code>&lt;SauceNaoResults(count=2, short_avail=3, long_avail=87, results=[&lt;GenericSourc... Nico Seiga')&gt;, &lt;GenericSourc...e='Danbooru')&gt;])&gt;\n</code></pre>\n<p>The library attempts to provide a developer friendly container format for all results. Meaning, no matter if SauceNao returns a Pixiv source result or a more obscure source, you'll be able to easily pull the title, author URL and other useful information.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pysaucenao</span> <span class=\"kn\">import</span> <span class=\"n\">SauceNao</span><span class=\"p\">,</span> <span class=\"n\">PixivSource</span>\n<span class=\"n\">sauce</span> <span class=\"o\">=</span> <span class=\"n\">SauceNao</span><span class=\"p\">()</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">sauce</span><span class=\"o\">.</span><span class=\"n\">from_url</span><span class=\"p\">(</span><span class=\"s1\">'https://i.imgur.com/oVPWy7f.png'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">)</span>  <span class=\"c1\"># 4</span>\n\n<span class=\"c1\"># Find out how many API request limits you have remaining after a search query</span>\n<span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">short_remaining</span>  <span class=\"c1\"># 3 (per 30 seconds limit)</span>\n<span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">long_remaining</span>   <span class=\"c1\"># 86 (per day limit)</span>\n\n<span class=\"c1\"># You can determine whether the search result is a Pixiv, Booru, Video or Other/Generic result by the type property or type checking</span>\n<span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span>  <span class=\"c1\"># pixiv</span>\n<span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">PixivSource</span><span class=\"p\">)</span>  <span class=\"c1\"># True</span>\n\n<span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">similarity</span>     <span class=\"c1\"># 96.07</span>\n<span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thumbnail</span>      <span class=\"c1\"># Returns a temporary signed URL; not suitable for permanent hotlinking</span>\n<span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">title</span>          <span class=\"c1\"># \u306a\u3067\u306a\u3067\u3059\u308b\u306b\u3083</span>\n<span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">author_name</span>    <span class=\"c1\"># \u304a\u30fc\u3058\u8336\uff203\u65e5\u76eeI-03b</span>\n<span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">author_url</span>     <span class=\"c1\"># https://www.pixiv.net/member.php?id=122233</span>\n<span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">url</span>            <span class=\"c1\"># https://www.pixiv.net/member_illust.php?mode=medium&amp;illust_id=66106354</span>\n<span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">source_url</span>     <span class=\"c1\"># Same as url for Pixiv results, but returns the linked original source URL for Booru entries</span>\n<span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">index</span>          <span class=\"c1\"># Pixiv</span>\n</pre>\n<p>Video search results provide three additional properties containing the episode number, estimated timestamp, and release year</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pysaucenao</span> <span class=\"kn\">import</span> <span class=\"n\">SauceNao</span><span class=\"p\">,</span> <span class=\"n\">VideoSource</span>\n<span class=\"n\">sauce</span> <span class=\"o\">=</span> <span class=\"n\">SauceNao</span><span class=\"p\">()</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">sauce</span><span class=\"o\">.</span><span class=\"n\">from_url</span><span class=\"p\">(</span><span class=\"s1\">'https://i.imgur.com/1M8MhB0.png'</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">VideoSource</span><span class=\"p\">):</span>\n    <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">episode</span>    <span class=\"c1\"># '1'</span>\n    <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">year</span>       <span class=\"c1\"># '2017'</span>\n    <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">timestamp</span>  <span class=\"c1\"># '00:07:53 / 00:23:40'</span>\n</pre>\n<p>MangaSource search results, similarly, provide an additional <code>chapter</code> property.</p>\n<h2>Registering for an API key</h2>\n<p>If you are performing lots of API queries, you will eventually need to sign up and register for an API key (and possibly upgrade your account for very large request volumes)</p>\n<p>You can register for an account on <a href=\"https://saucenao.com/user.php\" rel=\"nofollow\">SauceNAO's website</a></p>\n<h2>Error handling</h2>\n<p>The SauceNao class will throw an exception if any of the following occur:</p>\n<ul>\n<li>You have exceeded your 30-second search query limit (ShortLimitReachedException)</li>\n<li>You have exceeded your 24-hour search query limit (DailyLimitReachedException)</li>\n<li>You attempted to upload a file larger than SauceNAO allows (FileSizeLimitException)</li>\n<li>You provided an invalid API key (InvalidOrWrongApiKeyException)</li>\n<li>Any other unknown error occurred / service may be down (UnknownStatusCodeException)</li>\n</ul>\n<p>All of these exceptions extend a base SauceNaoException class for easy catching and handling.</p>\n\n          </div>"}, "last_serial": 6780908, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "54598cb5e2a4c486ee83e7f850b71fc0", "sha256": "d7e1e46b097c5e27c02e6aecd85ae4090017704a0ba8a72fac8ea45fc324de0a"}, "downloads": -1, "filename": "pysaucenao-0.1.tar.gz", "has_sig": false, "md5_digest": "54598cb5e2a4c486ee83e7f850b71fc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4795, "upload_time": "2020-01-21T22:21:53", "upload_time_iso_8601": "2020-01-21T22:21:53.468373Z", "url": "https://files.pythonhosted.org/packages/03/31/ef5778e00c95e92f1773dcb5c4457dac1cf493a39963c2214d2f484c94c1/pysaucenao-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "02301d73cb0296a7ae53a6f8a05f9f24", "sha256": "fd68b5475a1db1e886e210cd8caf9ceada57f8d859d3aa5f0456b20df26094b3"}, "downloads": -1, "filename": "pysaucenao-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "02301d73cb0296a7ae53a6f8a05f9f24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19792, "upload_time": "2020-01-30T01:55:29", "upload_time_iso_8601": "2020-01-30T01:55:29.178059Z", "url": "https://files.pythonhosted.org/packages/0a/80/74c7d63de753d3c74b672c2faa741990b51d02cd8b25fdaa1d2e00a4e7bd/pysaucenao-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2f4a1d1ee851740ea1bf6ef416d633f", "sha256": "987574a4f4169558c7dfe6a0beba9c74d89698a1d2b5aaf8f2e7f49194eae1be"}, "downloads": -1, "filename": "pysaucenao-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f2f4a1d1ee851740ea1bf6ef416d633f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7695, "upload_time": "2020-01-30T01:55:30", "upload_time_iso_8601": "2020-01-30T01:55:30.723244Z", "url": "https://files.pythonhosted.org/packages/63/a6/562a0a017fbe4ef63f6e04ceb2e740448d0fc2f74f9c905ec2396bcfb8f3/pysaucenao-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9c7c26d7eaba9a234247ff06224d725f", "sha256": "e569cd2f608a5e243599432ecfc8089b5cf3df7a48f92e02a681cd01b105f5d6"}, "downloads": -1, "filename": "pysaucenao-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9c7c26d7eaba9a234247ff06224d725f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19959, "upload_time": "2020-03-09T22:23:07", "upload_time_iso_8601": "2020-03-09T22:23:07.560841Z", "url": "https://files.pythonhosted.org/packages/11/c3/e0ee18b8c27454510942bf3735ba6564e34aa39091325e9cf3b5d766add2/pysaucenao-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb26e1351059827a8cb8059e84d4ce4f", "sha256": "156bf5f539eeeb473a82a6babf24f011698e46fd105566e95faaa28adb6369c8"}, "downloads": -1, "filename": "pysaucenao-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fb26e1351059827a8cb8059e84d4ce4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7863, "upload_time": "2020-03-09T22:23:09", "upload_time_iso_8601": "2020-03-09T22:23:09.113487Z", "url": "https://files.pythonhosted.org/packages/09/55/06444fdd3e2d46979a5868b560f32d172d787ff3c3375c390d24b9566da4/pysaucenao-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c7c26d7eaba9a234247ff06224d725f", "sha256": "e569cd2f608a5e243599432ecfc8089b5cf3df7a48f92e02a681cd01b105f5d6"}, "downloads": -1, "filename": "pysaucenao-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9c7c26d7eaba9a234247ff06224d725f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19959, "upload_time": "2020-03-09T22:23:07", "upload_time_iso_8601": "2020-03-09T22:23:07.560841Z", "url": "https://files.pythonhosted.org/packages/11/c3/e0ee18b8c27454510942bf3735ba6564e34aa39091325e9cf3b5d766add2/pysaucenao-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb26e1351059827a8cb8059e84d4ce4f", "sha256": "156bf5f539eeeb473a82a6babf24f011698e46fd105566e95faaa28adb6369c8"}, "downloads": -1, "filename": "pysaucenao-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fb26e1351059827a8cb8059e84d4ce4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7863, "upload_time": "2020-03-09T22:23:09", "upload_time_iso_8601": "2020-03-09T22:23:09.113487Z", "url": "https://files.pythonhosted.org/packages/09/55/06444fdd3e2d46979a5868b560f32d172d787ff3c3375c390d24b9566da4/pysaucenao-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:23 2020"}