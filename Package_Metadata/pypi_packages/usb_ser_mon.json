{"info": {"author": "Dave Hylands", "author_email": "dhylands@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries"], "description": "usb_ser_mon\n==============\n\nA serial monitor for USB Serial devices.\n\nusb-ser-mon.py will automatically detect your connected USB Serial device and\nprint the output from it.\n\nThis is similar in functionality to the Arduino serial monitor, except that\nusb-ser-mon.py deals with the device disconnects automtically, and will wait\nfor your device to reconnect.\n\nIf you have more than one USB device connected, you can use the -s\noption to specify the serial number of the device you wish to connect to,\nor use the -n command to specify the device vendor.\n\nCurrently, this program only works under linux.\n\nIt was tested with the following devices:\n  - Teensy 3.1\n  - STM32F4DISCOVERY board\n  - Prolific USB to Serial adapter\n\nInstallation\n============\nDownload or checkout this repository. With a terminal opened in the project directory.\nInstall using pip:\n```\npip install .\n```\n\nIf you want to edit the files in this directory and use them, install in edit mode:\n```\npip install -e .\n```\n\nUsage\n=====\n\nUse -l to list all of the connected devices.\n```\n./usb-ser-mon.py -l\n````\n\nwill show you the currently connected devices, for example:\n```\nUSB Serial Device with vendor 'Teensyduino' serial '21973' found @/dev/ttyACM1\nUSB Serial Device with vendor 'Prolific_Technology_Inc.' found @/dev/ttyUSB0\nUSB Serial Device with vendor 'STMicroelectronics' serial '00000000050C' found @/dev/ttyACM0\n```\n\nIf you want to connect with the STM device (an STM32FDISCOVERY board in this situation), then you might do:\n```\n./usb-ser-mon.py -n Teensy\n```\n\nand then see:\n```\nUSB Serial device with vendor 'Teensyduino' serial '21973' connected @/dev/ttyACM1\n\n>>>\n```\n\nIn the previous example the Teensy was already connected. If I unplug and replug the Teensy device then I'd see:\n```\nUSB Serial device @ /dev/ttyACM1  disconnected.\n\nWaiting for USB Serial Device with vendor 'Teensy' ...\nUSB Serial device with vendor 'Teensyduino' serial '21973' connected @/dev/ttyACM1\nDone executing '/src/main.py'\nMicro Python for Teensy 3.1\nType \"help()\" for more information.\n>>>\n```\n\nYou only need to use as many characters as are required to uniquely identify a\ndevice, so I could use ```./usb-ser-mon.py -n STM``` to connect to the\nDiscovery board.\n\nUse Control-X to exit from usb-ser-mon.py.\n\nThe ```mk-udev-rules-stm32.sh``` script will create the appropriate udev rules\nfor the STM32F4 series processors.\n\nThe ```mk-udev-rules-pyboard.sh``` script will create the appropriate udev rules\nfor the MicroPython pyboard.\n\nThe ```mk-udev-rules-teensy.sh``` script will create the appropriate udev rules\nfor the Teensy 3.1 board.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dhylands/usb-ser-mon/", "keywords": "usb serial", "license": "", "maintainer": "", "maintainer_email": "", "name": "usb_ser_mon", "package_url": "https://pypi.org/project/usb_ser_mon/", "platform": "", "project_url": "https://pypi.org/project/usb_ser_mon/", "project_urls": {"Homepage": "https://github.com/dhylands/usb-ser-mon/"}, "release_url": "https://pypi.org/project/usb_ser_mon/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "A serial monitor for USB Serial devices", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            usb_ser_mon<br>==============<br><br>A serial monitor for USB Serial devices.<br><br>usb-ser-mon.py will automatically detect your connected USB Serial device and<br>print the output from it.<br><br>This is similar in functionality to the Arduino serial monitor, except that<br>usb-ser-mon.py deals with the device disconnects automtically, and will wait<br>for your device to reconnect.<br><br>If you have more than one USB device connected, you can use the -s<br>option to specify the serial number of the device you wish to connect to,<br>or use the -n command to specify the device vendor.<br><br>Currently, this program only works under linux.<br><br>It was tested with the following devices:<br>  - Teensy 3.1<br>  - STM32F4DISCOVERY board<br>  - Prolific USB to Serial adapter<br><br>Installation<br>============<br>Download or checkout this repository. With a terminal opened in the project directory.<br>Install using pip:<br>```<br>pip install .<br>```<br><br>If you want to edit the files in this directory and use them, install in edit mode:<br>```<br>pip install -e .<br>```<br><br>Usage<br>=====<br><br>Use -l to list all of the connected devices.<br>```<br>./usb-ser-mon.py -l<br>````<br><br>will show you the currently connected devices, for example:<br>```<br>USB Serial Device with vendor 'Teensyduino' serial '21973' found @/dev/ttyACM1<br>USB Serial Device with vendor 'Prolific_Technology_Inc.' found @/dev/ttyUSB0<br>USB Serial Device with vendor 'STMicroelectronics' serial '00000000050C' found @/dev/ttyACM0<br>```<br><br>If you want to connect with the STM device (an STM32FDISCOVERY board in this situation), then you might do:<br>```<br>./usb-ser-mon.py -n Teensy<br>```<br><br>and then see:<br>```<br>USB Serial device with vendor 'Teensyduino' serial '21973' connected @/dev/ttyACM1<br><br>&gt;&gt;&gt;<br>```<br><br>In the previous example the Teensy was already connected. If I unplug and replug the Teensy device then I'd see:<br>```<br>USB Serial device @ /dev/ttyACM1  disconnected.<br><br>Waiting for USB Serial Device with vendor 'Teensy' ...<br>USB Serial device with vendor 'Teensyduino' serial '21973' connected @/dev/ttyACM1<br>Done executing '/src/main.py'<br>Micro Python for Teensy 3.1<br>Type \"help()\" for more information.<br>&gt;&gt;&gt;<br>```<br><br>You only need to use as many characters as are required to uniquely identify a<br>device, so I could use ```./usb-ser-mon.py -n STM``` to connect to the<br>Discovery board.<br><br>Use Control-X to exit from usb-ser-mon.py.<br><br>The ```mk-udev-rules-stm32.sh``` script will create the appropriate udev rules<br>for the STM32F4 series processors.<br><br>The ```mk-udev-rules-pyboard.sh``` script will create the appropriate udev rules<br>for the MicroPython pyboard.<br><br>The ```mk-udev-rules-teensy.sh``` script will create the appropriate udev rules<br>for the Teensy 3.1 board.<br>\n          </div>"}, "last_serial": 4058507, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "69112f22cdff4f5606f55770d47ed5b5", "sha256": "f1ed3f0bf28b057548cb1e67f6897ffc8b415aaafcf740512a64371c89a7a19a"}, "downloads": -1, "filename": "usb_ser_mon-0.0.1.tar.gz", "has_sig": false, "md5_digest": "69112f22cdff4f5606f55770d47ed5b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11276, "upload_time": "2018-07-13T16:07:29", "upload_time_iso_8601": "2018-07-13T16:07:29.986022Z", "url": "https://files.pythonhosted.org/packages/46/20/3fe16b838b57386485a100fccfde8056fe0f03c66f220acda65f4f238694/usb_ser_mon-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "69112f22cdff4f5606f55770d47ed5b5", "sha256": "f1ed3f0bf28b057548cb1e67f6897ffc8b415aaafcf740512a64371c89a7a19a"}, "downloads": -1, "filename": "usb_ser_mon-0.0.1.tar.gz", "has_sig": false, "md5_digest": "69112f22cdff4f5606f55770d47ed5b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11276, "upload_time": "2018-07-13T16:07:29", "upload_time_iso_8601": "2018-07-13T16:07:29.986022Z", "url": "https://files.pythonhosted.org/packages/46/20/3fe16b838b57386485a100fccfde8056fe0f03c66f220acda65f4f238694/usb_ser_mon-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:39:12 2020"}