{"info": {"author": "dreipol GmbH", "author_email": "dev@dreipol.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "====================\ndjangocms-spa-vue-js\n====================\n\nThis package prepares your django CMS and vue.js project to create a single-page application (SPA). Use it together\nwith the base package `djangocms-spa`_.\n\nA template tag renders a list of all available routes that are used by vue-router. Contents of other pages are\nrequested asynchronously and delivered as JSON through a REST-API.\n\nMake sure you read the docs of djangocms-spa.\n\n.. _`djangocms-spa`: https://github.com/dreipol/djangocms-spa/\n\n\nQuickstart\n----------\n\nInstall djangocms-spa-vue-js::\n\n    pip install djangocms-spa-vue-js\n\nAdd it to your ``INSTALLED_APPS``:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'djangocms_spa',\n        'djangocms_spa_vue_js',\n        ...\n    )\n\nAdd the URL pattern form the API:\n\n.. code-block:: python\n\n    urlpatterns = [\n        ...\n        url(r'^api/', include('djangocms_spa.urls', namespace='api')),\n        ...\n    ]\n\nRender your vue.js router in your template::\n\n    {% load router_tags %}\n    {% vue_js_router %}\n\n\n\nApphooks\n--------\n\nYou need to consider a couple of things when using apphooks. Let's assume you have an event model.\n\n.. code-block:: python\n\n    class Event(DjangocmsVueJsMixin):\n        name = models.CharField(max_length=255, verbose_name=_('Name'))\n\n        def get_frontend_list_data_dict(self, request, editable=False, placeholder_name=''):\n            # Returns the data for your list view.\n            data = super(Event, self).get_frontend_list_data_dict(request=request, editable=editable, placeholder_name=placeholder_name)\n            data['content'].update({\n                'name': self.name,\n            })\n            return data\n\n        def get_frontend_detail_data_dict(self, request, editable=False):\n            # Returns the data for your detail view.\n            data = super(Event, self).get_frontend_detail_data_dict(request, editable)\n\n            # Prepare the content of your model instance. We use the same structure like the placeholder data of a CMS page.\n            content_container = {\n                'type': 'generic',\n                'content': {\n                    'name': self.name\n                }\n            }\n\n            # Add support for the CMS frontend editing\n            if editable:\n                content_container.update(\n                    self.get_cms_placeholder_json(request=request, placeholder_name='cms-plugin-events-content')\n                )\n\n            # Put the data inside a container like any other CMS placeholder data.\n            data['containers']['content'] = content_container\n\n            return data\n\n        def get_absolute_url(self):\n            # Return the URL of your detail view.\n            return reverse('event_detail', kwargs={'pk': self.pk})\n\n        def get_api_detail_url(self):\n            # Return the API URL of your detail view.\n            return reverse('event_detail_api', kwargs={'pk': self.pk})\n\n        def get_detail_view_component(self):\n            # Return the name of your vue component.\n            return 'cmp-event-detail'\n\n        def get_detail_path_pattern(self):\n            # Return the path pattern of your named vue route.\n            return 'events/:pk'\n\n        def get_url_params(self):\n            # Return the params that are needed to access your named vue route.\n            return {\n                'pk': self.pk\n            }\n\n\nAll of your views need to be attached to the menu, even if they are not actually rendered in your site navigation.\nIf the CMS page holding your apphook uses a custom view, you need this configuration:\n\n.. code-block:: python\n\n    DJANGOCMS_SPA_VUE_JS_APPHOOKS_WITH_ROOT_URL = ['<my_apphook_name>']\n\n\nYour ``cms_menus.py`` might looks like this:\n\n.. code-block:: python\n\n    class EventMenu(CMSAttachMenu):\n        name = _('Events')\n\n        def get_nodes(self, request):\n            nodes = []\n            counter = 1\n            is_draft = self.instance.publisher_is_draft\n            is_edit = hasattr(request, 'toolbar') and request.user.is_staff and request.toolbar.edit_mode\n\n            # We don't want to parse the instance in live and draft mode. Depending on the request user we return the\n            # corresponding version.\n            if (not is_edit and not is_draft) or (is_edit and is_draft):\n                # Let's add the list view\n                nodes.append(\n                    NavigationNode(\n                        title='Event List',\n                        url=reverse('event_list'),\n                        id=1,\n                        attr={\n                            'component': 'cmp-event-list',\n                            'vue_js_router_name': 'event-list',\n                            'fetch_url': reverse('event_list_api'),\n                            'absolute_url': reverse('event_list'),\n                            'named_route_path_pattern': ':pk',  # Used to group routes (dynamic route matching)\n                            'login_required': True  # Hide a navigation node for unauthorized users\n                        }\n                    )\n                )\n                counter += 1\n\n                for event in Event.objects.all():\n                    nodes.append(\n                        NavigationNode(\n                            title=event.name,\n                            url=event.get_absolute_url(),\n                            id=counter,\n                            attr=event.get_cms_menu_node_attributes(),\n                            parent_id=1\n                        )\n                    )\n                    counter += 1\n\n            return nodes\n\n    menu_pool.register_menu(EventMenu)\n\n\nThis is an example of a simple template view. Each view that you have needs an API view that returns the JSON data only.\n\n.. code-block:: python\n\n    from djangocms_spa.views import SpaApiView\n    from djangocms_spa_vue_js.views import VueRouterView\n\n    class ContentMixin(object):\n        template_name = 'index.html'\n\n        def get_fetched_data(self):\n            data = {\n                'containers': {\n                    'content': {\n                        'type': 'generic',\n                        'content': {\n                            'key': 'value'\n                        }\n                    }\n                }\n            }\n            return data\n\n\n    class MyTemplateView(ContentMixin, VueRouterView):\n        fetch_url = reverse_lazy('content_api')  # URL of the API view.\n\n\n    class MyTemplateApiView(ContentMixin, SpaApiView):\n        pass\n\n\nYour list view looks like this:\n\n.. code-block:: python\n\n    from djangocms_spa.views import SpaListApiView\n    from djangocms_spa_vue_js.views import VueRouterListView\n\n    class EventListView(VueRouterListView):\n        fetch_url = reverse_lazy('event_list_api')\n        model = Event\n        template_name = 'event_list.html'\n\n\n    class EventListAPIView(SpaListApiView):\n        model = Event\n        template_name = 'event_list.html'\n\n\nYour detail view looks like this:\n\n.. code-block:: python\n\n    from djangocms_spa.views import SpaDetailApiView\n    from djangocms_spa_vue_js.views import VueRouterDetailView\n\n    class EventDetailView(VueRouterDetailView):\n        model = Event\n        template_name = 'event_detail.html'\n\n        def get_fetch_url(self):\n            return reverse('event_detail_api', kwargs={'pk': self.object.pk})\n\n\n    class EventDetailAPIView(SpaDetailApiView):\n        model = Event\n        template_name = 'event_detail.html'\n\n\nThe router object\n-----------------\n\nThe server needs to prepare the routes for the frontend. The easiest way to do this is by iterating over the CMS\nmenu. In order to bring all available routes to the menu, you have to register all your custom URLs as a menu too.\nA template tag renders a JS object like this.\n\n.. code-block:: json\n\n    {\n        \"routes\": [\n            {\n                \"api\": {\n                    \"fetch\": \"/api/pages/\",\n                    \"query\": {\n                        \"partials\": [\"menu\", \"footer\"]\n                    }\n                },\n                \"component\": \"index\",\n                \"name\": \"cms-page-1\",\n                \"path\": \"/\"\n            },\n            {\n                \"api\": {\n                    \"fetched\": {\n                        \"partials\": {\n                            \"menu\": {\n                                \"type\": \"generic\",\n                                \"content\": {\n                                    \"menu\": [\n                                        {\n                                            \"path\": \"/\",\n                                            \"label\": \"Home\",\n                                            \"children\": [\n                                                {\n                                                    \"path\": \"/about\",\n                                                    \"label\": \"About\",\n                                                    \"children\": [\n                                                        {\n                                                            \"path\": \"/contact\",\n                                                            \"label\": \"Contact\"\n                                                        }\n                                                    ]\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                }\n                            },\n                            \"footer\": {\n                                \"type\": \"cmp-footer\",\n                                \"plugins\": [\n                                    {\n                                        \"type\": \"cmp-footer-text\",\n                                        \"position\": 0,\n                                        \"content\": {\n                                            \"text\": \"Lorem ipsum dolor sit amet, nam et modus tollit.\"\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"data\": {\n                            \"meta\": {\n                                \"description\": \"\",\n                                \"title\": \"Content-Plugins\"\n                            },\n                            \"containers\": {\n                                \"main\": {\n                                    \"type\": \"cmp-main\",\n                                    \"plugins\": [\n                                        {\n                                            \"type\": \"cmp-text\",\n                                            \"position\": 0,\n                                            \"content\": {\n                                                \"text\": \"Ex vim saperet habemus, et eum impetus mentitum, cum purto dolores similique ei.\"\n                                            }\n                                        }\n                                    ]\n                                }\n                            },\n                            \"title\": \"About\"\n                        }\n                    },\n                    \"query\": {\n                        \"partials\": [\"menu\", \"footer\"]\n                    }\n                },\n                \"component\": \"content-with-section-navigation\",\n                \"name\": \"cms-page-2\",\n                \"path\": \"/about\"\n            },\n            {\n                \"api\": {\n                    \"fetch\": \"/api/pages/about/contact\",\n                    \"query\": {\n                        \"partials\": [\"menu\", \"meta\", \"footer\"]\n                    }\n                },\n                \"component\": \"content-with-section-navigation\",\n                \"name\": \"cms-page-3\",\n                \"path\": \"/about/contact\"\n            }\n        ]\n    }\n\n\nDebugging\n---------\n\nIf you need to debug the router object, this middleware is probably pretty helpful:\n\n.. code-block:: python\n\n    MIDDLEWARE += (\n        'djangocms_spa_vue_js.middleware.RouterDebuggingMiddleware',\n    )\n\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dreipol/djangocms-spa-vue-js", "keywords": "djangocms-spa-vue-js", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "djangocms-spa-vue-js", "package_url": "https://pypi.org/project/djangocms-spa-vue-js/", "platform": "", "project_url": "https://pypi.org/project/djangocms-spa-vue-js/", "project_urls": {"Homepage": "https://github.com/dreipol/djangocms-spa-vue-js"}, "release_url": "https://pypi.org/project/djangocms-spa-vue-js/0.1.25/", "requires_dist": null, "requires_python": "", "summary": "This package prepares your django CMS and vue.js project to create a single-page application (SPA).", "version": "0.1.25", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package prepares your django CMS and vue.js project to create a single-page application (SPA). Use it together\nwith the base package <a href=\"https://github.com/dreipol/djangocms-spa/\" rel=\"nofollow\">djangocms-spa</a>.</p>\n<p>A template tag renders a list of all available routes that are used by vue-router. Contents of other pages are\nrequested asynchronously and delivered as JSON through a REST-API.</p>\n<p>Make sure you read the docs of djangocms-spa.</p>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Install djangocms-spa-vue-js:</p>\n<pre>pip install djangocms-spa-vue-js\n</pre>\n<p>Add it to your <tt>INSTALLED_APPS</tt>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'djangocms_spa'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'djangocms_spa_vue_js'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Add the URL pattern form the API:</p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^api/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'djangocms_spa.urls'</span><span class=\"p\">,</span> <span class=\"n\">namespace</span><span class=\"o\">=</span><span class=\"s1\">'api'</span><span class=\"p\">)),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Render your vue.js router in your template:</p>\n<pre>{% load router_tags %}\n{% vue_js_router %}\n</pre>\n</div>\n<div id=\"apphooks\">\n<h2>Apphooks</h2>\n<p>You need to consider a couple of things when using apphooks. Let\u2019s assume you have an event model.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Event</span><span class=\"p\">(</span><span class=\"n\">DjangocmsVueJsMixin</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">verbose_name</span><span class=\"o\">=</span><span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s1\">'Name'</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_frontend_list_data_dict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">editable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">placeholder_name</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Returns the data for your list view.</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Event</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_frontend_list_data_dict</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">editable</span><span class=\"o\">=</span><span class=\"n\">editable</span><span class=\"p\">,</span> <span class=\"n\">placeholder_name</span><span class=\"o\">=</span><span class=\"n\">placeholder_name</span><span class=\"p\">)</span>\n        <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'content'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"p\">})</span>\n        <span class=\"k\">return</span> <span class=\"n\">data</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_frontend_detail_data_dict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">editable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Returns the data for your detail view.</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Event</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_frontend_detail_data_dict</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">editable</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Prepare the content of your model instance. We use the same structure like the placeholder data of a CMS page.</span>\n        <span class=\"n\">content_container</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'generic'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'content'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c1\"># Add support for the CMS frontend editing</span>\n        <span class=\"k\">if</span> <span class=\"n\">editable</span><span class=\"p\">:</span>\n            <span class=\"n\">content_container</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_cms_placeholder_json</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">placeholder_name</span><span class=\"o\">=</span><span class=\"s1\">'cms-plugin-events-content'</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Put the data inside a container like any other CMS placeholder data.</span>\n        <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'containers'</span><span class=\"p\">][</span><span class=\"s1\">'content'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">content_container</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">data</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_absolute_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Return the URL of your detail view.</span>\n        <span class=\"k\">return</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s1\">'event_detail'</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'pk'</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pk</span><span class=\"p\">})</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_api_detail_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Return the API URL of your detail view.</span>\n        <span class=\"k\">return</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s1\">'event_detail_api'</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'pk'</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pk</span><span class=\"p\">})</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_detail_view_component</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Return the name of your vue component.</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'cmp-event-detail'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_detail_path_pattern</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Return the path pattern of your named vue route.</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'events/:pk'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_url_params</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Return the params that are needed to access your named vue route.</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'pk'</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pk</span>\n        <span class=\"p\">}</span>\n</pre>\n<p>All of your views need to be attached to the menu, even if they are not actually rendered in your site navigation.\nIf the CMS page holding your apphook uses a custom view, you need this configuration:</p>\n<pre><span class=\"n\">DJANGOCMS_SPA_VUE_JS_APPHOOKS_WITH_ROOT_URL</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'&lt;my_apphook_name&gt;'</span><span class=\"p\">]</span>\n</pre>\n<p>Your <tt>cms_menus.py</tt> might looks like this:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">EventMenu</span><span class=\"p\">(</span><span class=\"n\">CMSAttachMenu</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s1\">'Events'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_nodes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">nodes</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">is_draft</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">publisher_is_draft</span>\n        <span class=\"n\">is_edit</span> <span class=\"o\">=</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s1\">'toolbar'</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_staff</span> <span class=\"ow\">and</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">toolbar</span><span class=\"o\">.</span><span class=\"n\">edit_mode</span>\n\n        <span class=\"c1\"># We don't want to parse the instance in live and draft mode. Depending on the request user we return the</span>\n        <span class=\"c1\"># corresponding version.</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"ow\">not</span> <span class=\"n\">is_edit</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">is_draft</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">(</span><span class=\"n\">is_edit</span> <span class=\"ow\">and</span> <span class=\"n\">is_draft</span><span class=\"p\">):</span>\n            <span class=\"c1\"># Let's add the list view</span>\n            <span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                <span class=\"n\">NavigationNode</span><span class=\"p\">(</span>\n                    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'Event List'</span><span class=\"p\">,</span>\n                    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s1\">'event_list'</span><span class=\"p\">),</span>\n                    <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                    <span class=\"n\">attr</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                        <span class=\"s1\">'component'</span><span class=\"p\">:</span> <span class=\"s1\">'cmp-event-list'</span><span class=\"p\">,</span>\n                        <span class=\"s1\">'vue_js_router_name'</span><span class=\"p\">:</span> <span class=\"s1\">'event-list'</span><span class=\"p\">,</span>\n                        <span class=\"s1\">'fetch_url'</span><span class=\"p\">:</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s1\">'event_list_api'</span><span class=\"p\">),</span>\n                        <span class=\"s1\">'absolute_url'</span><span class=\"p\">:</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s1\">'event_list'</span><span class=\"p\">),</span>\n                        <span class=\"s1\">'named_route_path_pattern'</span><span class=\"p\">:</span> <span class=\"s1\">':pk'</span><span class=\"p\">,</span>  <span class=\"c1\"># Used to group routes (dynamic route matching)</span>\n                        <span class=\"s1\">'login_required'</span><span class=\"p\">:</span> <span class=\"kc\">True</span>  <span class=\"c1\"># Hide a navigation node for unauthorized users</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">counter</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n            <span class=\"k\">for</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"n\">Event</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">():</span>\n                <span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                    <span class=\"n\">NavigationNode</span><span class=\"p\">(</span>\n                        <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                        <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">get_absolute_url</span><span class=\"p\">(),</span>\n                        <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">counter</span><span class=\"p\">,</span>\n                        <span class=\"n\">attr</span><span class=\"o\">=</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">get_cms_menu_node_attributes</span><span class=\"p\">(),</span>\n                        <span class=\"n\">parent_id</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n                    <span class=\"p\">)</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">counter</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">nodes</span>\n\n<span class=\"n\">menu_pool</span><span class=\"o\">.</span><span class=\"n\">register_menu</span><span class=\"p\">(</span><span class=\"n\">EventMenu</span><span class=\"p\">)</span>\n</pre>\n<p>This is an example of a simple template view. Each view that you have needs an API view that returns the JSON data only.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">djangocms_spa.views</span> <span class=\"kn\">import</span> <span class=\"n\">SpaApiView</span>\n<span class=\"kn\">from</span> <span class=\"nn\">djangocms_spa_vue_js.views</span> <span class=\"kn\">import</span> <span class=\"n\">VueRouterView</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ContentMixin</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s1\">'index.html'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_fetched_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'containers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'content'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'generic'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'content'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'value'</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">data</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyTemplateView</span><span class=\"p\">(</span><span class=\"n\">ContentMixin</span><span class=\"p\">,</span> <span class=\"n\">VueRouterView</span><span class=\"p\">):</span>\n    <span class=\"n\">fetch_url</span> <span class=\"o\">=</span> <span class=\"n\">reverse_lazy</span><span class=\"p\">(</span><span class=\"s1\">'content_api'</span><span class=\"p\">)</span>  <span class=\"c1\"># URL of the API view.</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyTemplateApiView</span><span class=\"p\">(</span><span class=\"n\">ContentMixin</span><span class=\"p\">,</span> <span class=\"n\">SpaApiView</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>Your list view looks like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">djangocms_spa.views</span> <span class=\"kn\">import</span> <span class=\"n\">SpaListApiView</span>\n<span class=\"kn\">from</span> <span class=\"nn\">djangocms_spa_vue_js.views</span> <span class=\"kn\">import</span> <span class=\"n\">VueRouterListView</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">EventListView</span><span class=\"p\">(</span><span class=\"n\">VueRouterListView</span><span class=\"p\">):</span>\n    <span class=\"n\">fetch_url</span> <span class=\"o\">=</span> <span class=\"n\">reverse_lazy</span><span class=\"p\">(</span><span class=\"s1\">'event_list_api'</span><span class=\"p\">)</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Event</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s1\">'event_list.html'</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">EventListAPIView</span><span class=\"p\">(</span><span class=\"n\">SpaListApiView</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Event</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s1\">'event_list.html'</span>\n</pre>\n<p>Your detail view looks like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">djangocms_spa.views</span> <span class=\"kn\">import</span> <span class=\"n\">SpaDetailApiView</span>\n<span class=\"kn\">from</span> <span class=\"nn\">djangocms_spa_vue_js.views</span> <span class=\"kn\">import</span> <span class=\"n\">VueRouterDetailView</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">EventDetailView</span><span class=\"p\">(</span><span class=\"n\">VueRouterDetailView</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Event</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s1\">'event_detail.html'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_fetch_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s1\">'event_detail_api'</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'pk'</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">pk</span><span class=\"p\">})</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">EventDetailAPIView</span><span class=\"p\">(</span><span class=\"n\">SpaDetailApiView</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Event</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s1\">'event_detail.html'</span>\n</pre>\n</div>\n<div id=\"the-router-object\">\n<h2>The router object</h2>\n<p>The server needs to prepare the routes for the frontend. The easiest way to do this is by iterating over the CMS\nmenu. In order to bring all available routes to the menu, you have to register all your custom URLs as a menu too.\nA template tag renders a JS object like this.</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"routes\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"api\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">\"fetch\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/api/pages/\"</span><span class=\"p\">,</span>\n                <span class=\"nt\">\"query\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"nt\">\"partials\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"menu\"</span><span class=\"p\">,</span> <span class=\"s2\">\"footer\"</span><span class=\"p\">]</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n            <span class=\"nt\">\"component\"</span><span class=\"p\">:</span> <span class=\"s2\">\"index\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cms-page-1\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"api\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">\"fetched\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"nt\">\"partials\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"nt\">\"menu\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                            <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"generic\"</span><span class=\"p\">,</span>\n                            <span class=\"nt\">\"content\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                                <span class=\"nt\">\"menu\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                                    <span class=\"p\">{</span>\n                                        <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/\"</span><span class=\"p\">,</span>\n                                        <span class=\"nt\">\"label\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Home\"</span><span class=\"p\">,</span>\n                                        <span class=\"nt\">\"children\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                                            <span class=\"p\">{</span>\n                                                <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/about\"</span><span class=\"p\">,</span>\n                                                <span class=\"nt\">\"label\"</span><span class=\"p\">:</span> <span class=\"s2\">\"About\"</span><span class=\"p\">,</span>\n                                                <span class=\"nt\">\"children\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                                                    <span class=\"p\">{</span>\n                                                        <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/contact\"</span><span class=\"p\">,</span>\n                                                        <span class=\"nt\">\"label\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Contact\"</span>\n                                                    <span class=\"p\">}</span>\n                                                <span class=\"p\">]</span>\n                                            <span class=\"p\">}</span>\n                                        <span class=\"p\">]</span>\n                                    <span class=\"p\">}</span>\n                                <span class=\"p\">]</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">},</span>\n                        <span class=\"nt\">\"footer\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                            <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cmp-footer\"</span><span class=\"p\">,</span>\n                            <span class=\"nt\">\"plugins\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                                <span class=\"p\">{</span>\n                                    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cmp-footer-text\"</span><span class=\"p\">,</span>\n                                    <span class=\"nt\">\"position\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                                    <span class=\"nt\">\"content\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                                        <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Lorem ipsum dolor sit amet, nam et modus tollit.\"</span>\n                                    <span class=\"p\">}</span>\n                                <span class=\"p\">}</span>\n                            <span class=\"p\">]</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"nt\">\"meta\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                            <span class=\"nt\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n                            <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Content-Plugins\"</span>\n                        <span class=\"p\">},</span>\n                        <span class=\"nt\">\"containers\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                            <span class=\"nt\">\"main\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                                <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cmp-main\"</span><span class=\"p\">,</span>\n                                <span class=\"nt\">\"plugins\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                                    <span class=\"p\">{</span>\n                                        <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cmp-text\"</span><span class=\"p\">,</span>\n                                        <span class=\"nt\">\"position\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                                        <span class=\"nt\">\"content\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                                            <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Ex vim saperet habemus, et eum impetus mentitum, cum purto dolores similique ei.\"</span>\n                                        <span class=\"p\">}</span>\n                                    <span class=\"p\">}</span>\n                                <span class=\"p\">]</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">},</span>\n                        <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"About\"</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">},</span>\n                <span class=\"nt\">\"query\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"nt\">\"partials\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"menu\"</span><span class=\"p\">,</span> <span class=\"s2\">\"footer\"</span><span class=\"p\">]</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n            <span class=\"nt\">\"component\"</span><span class=\"p\">:</span> <span class=\"s2\">\"content-with-section-navigation\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cms-page-2\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/about\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"api\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">\"fetch\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/api/pages/about/contact\"</span><span class=\"p\">,</span>\n                <span class=\"nt\">\"query\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"nt\">\"partials\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"menu\"</span><span class=\"p\">,</span> <span class=\"s2\">\"meta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"footer\"</span><span class=\"p\">]</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n            <span class=\"nt\">\"component\"</span><span class=\"p\">:</span> <span class=\"s2\">\"content-with-section-navigation\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cms-page-3\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/about/contact\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"debugging\">\n<h2>Debugging</h2>\n<p>If you need to debug the router object, this middleware is probably pretty helpful:</p>\n<pre><span class=\"n\">MIDDLEWARE</span> <span class=\"o\">+=</span> <span class=\"p\">(</span>\n    <span class=\"s1\">'djangocms_spa_vue_js.middleware.RouterDebuggingMiddleware'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Tools used in rendering this package:</p>\n<ul>\n<li><a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a></li>\n<li><a href=\"https://github.com/pydanny/cookiecutter-djangopackage\" rel=\"nofollow\">cookiecutter-djangopackage</a></li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n</div>\n\n          </div>"}, "last_serial": 5510695, "releases": {"0.1.10": [{"comment_text": "", "digests": {"md5": "f63a544764b6e1147214294362de82e5", "sha256": "36c578ae78af5d53456cf9cc2978f851b94a47689d16ca03f688ddb25dc7f548"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.10.tar.gz", "has_sig": false, "md5_digest": "f63a544764b6e1147214294362de82e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12275, "upload_time": "2017-03-29T08:47:37", "upload_time_iso_8601": "2017-03-29T08:47:37.298844Z", "url": "https://files.pythonhosted.org/packages/40/fb/7ef9a97577f350c3c88b5daaeea436d5cf8e3fae6ecc0db2f586dcb1609d/djangocms-spa-vue-js-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "964874e5e99ebf19491ccb93436e0ceb", "sha256": "c2d4c457b6f77e2c6de926728c1d36eadc1cb8f92e528abcb94973cf8daf65ce"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.11.tar.gz", "has_sig": false, "md5_digest": "964874e5e99ebf19491ccb93436e0ceb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12278, "upload_time": "2017-03-29T13:11:14", "upload_time_iso_8601": "2017-03-29T13:11:14.899911Z", "url": "https://files.pythonhosted.org/packages/a3/ac/e8f9805a303fc331a0f03433e28d9ad0886b7096ac76c8196183c20e8075/djangocms-spa-vue-js-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "068201e72b5106c35bb2b17075e64f97", "sha256": "8a21adec8d49664ad096e3302f1150e505adf805ce60fa73bb59b80ecea18e04"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.12.tar.gz", "has_sig": false, "md5_digest": "068201e72b5106c35bb2b17075e64f97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12481, "upload_time": "2017-04-19T15:20:48", "upload_time_iso_8601": "2017-04-19T15:20:48.148699Z", "url": "https://files.pythonhosted.org/packages/38/05/8b6ea8fee5b4ecdaac76ff259fa337ac8d1b305c7ff960229f607040282a/djangocms-spa-vue-js-0.1.12.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "7b09029b850ca46299dfdb73177077af", "sha256": "5f2ea933f7fe506f313e383306ba37960650c4fd4ac85a27dd0bf5dd6a083a24"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.13.tar.gz", "has_sig": false, "md5_digest": "7b09029b850ca46299dfdb73177077af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12508, "upload_time": "2017-04-27T15:21:50", "upload_time_iso_8601": "2017-04-27T15:21:50.389868Z", "url": "https://files.pythonhosted.org/packages/f7/cb/559a19fc5bf9393a83095ec3513d58b6e0b5ecd2356faa3ebffab31e4d4b/djangocms-spa-vue-js-0.1.13.tar.gz", "yanked": false}], "0.1.14": [{"comment_text": "", "digests": {"md5": "c727de11e5bca59cc5a9c2641935ba3a", "sha256": "248881ccef16eb1076399856baef2d884b5ce9d629ea02e412d4b511dac52191"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.14.tar.gz", "has_sig": false, "md5_digest": "c727de11e5bca59cc5a9c2641935ba3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12533, "upload_time": "2017-05-03T15:05:12", "upload_time_iso_8601": "2017-05-03T15:05:12.315389Z", "url": "https://files.pythonhosted.org/packages/ce/8a/0dd34ed44309b026df6fcba288176033798ca80e01cef725cb7161d95764/djangocms-spa-vue-js-0.1.14.tar.gz", "yanked": false}], "0.1.15": [{"comment_text": "", "digests": {"md5": "c41de0344e3cacd59e8c75812f881e84", "sha256": "83557ef7bb496dbf51364d7eb56116c9b10989c6f98680be640826009b4bdead"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.15.tar.gz", "has_sig": false, "md5_digest": "c41de0344e3cacd59e8c75812f881e84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12566, "upload_time": "2017-05-29T11:52:40", "upload_time_iso_8601": "2017-05-29T11:52:40.387301Z", "url": "https://files.pythonhosted.org/packages/7b/39/13bd1b386f662c54c630ac21a7f1c204c4c6b036a0fffd37ec95df569844/djangocms-spa-vue-js-0.1.15.tar.gz", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "9dbcf11d0c8c81d906fb1275f9e5d64b", "sha256": "8593a59135c55170b1df6825e19355ea7945709b73a68c16def24ea115f109fd"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.16.tar.gz", "has_sig": false, "md5_digest": "9dbcf11d0c8c81d906fb1275f9e5d64b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12612, "upload_time": "2017-05-31T14:03:51", "upload_time_iso_8601": "2017-05-31T14:03:51.974980Z", "url": "https://files.pythonhosted.org/packages/92/4c/763b2587719f97e01235a03335d7e98f6cbb6a327fa9f98e94160b37d11f/djangocms-spa-vue-js-0.1.16.tar.gz", "yanked": false}], "0.1.17": [{"comment_text": "", "digests": {"md5": "ebf4a18af9a7c47de856eb5e50b150e7", "sha256": "d8630447fed87e0c8d66581c088bf122b193f255086789d15214e67dff7e3220"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.17.tar.gz", "has_sig": false, "md5_digest": "ebf4a18af9a7c47de856eb5e50b150e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12538, "upload_time": "2017-06-09T12:03:01", "upload_time_iso_8601": "2017-06-09T12:03:01.494967Z", "url": "https://files.pythonhosted.org/packages/b2/61/8308d9100503b753e61e6b157b31e06e1b2307f8f08f891360cbb948dee5/djangocms-spa-vue-js-0.1.17.tar.gz", "yanked": false}], "0.1.18": [{"comment_text": "", "digests": {"md5": "90c5c058e339420aa0c71bd7e43330d2", "sha256": "a2217ff6151fe062fc1dc8f5e4b7adf72fefdb3b19b7ee455661fad61a107eda"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.18.tar.gz", "has_sig": false, "md5_digest": "90c5c058e339420aa0c71bd7e43330d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12506, "upload_time": "2017-06-21T15:03:11", "upload_time_iso_8601": "2017-06-21T15:03:11.986118Z", "url": "https://files.pythonhosted.org/packages/d4/b5/4d959a72de46bfb62786807159a30bdf54b7d22e46f2a020654042dcbae9/djangocms-spa-vue-js-0.1.18.tar.gz", "yanked": false}], "0.1.19": [{"comment_text": "", "digests": {"md5": "4a35a5197233c6a1d3d2214c0166dd5b", "sha256": "404dcfe43c8682be2bc3fade40259cddda7905d58f1719c64ea28b4340a8dd29"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.19.tar.gz", "has_sig": false, "md5_digest": "4a35a5197233c6a1d3d2214c0166dd5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12515, "upload_time": "2017-06-22T07:22:51", "upload_time_iso_8601": "2017-06-22T07:22:51.420892Z", "url": "https://files.pythonhosted.org/packages/70/f4/1280ea32ded155d384fd0c9f697f6fe1f3d0c24121069577f32e768b816c/djangocms-spa-vue-js-0.1.19.tar.gz", "yanked": false}], "0.1.20": [{"comment_text": "", "digests": {"md5": "37583ab712f58c8a3230f255c873e185", "sha256": "5e7f483d81237f2dbac3dc3c69390d56fc4b7217d007fddbc16bfff29f02eb0f"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.20.tar.gz", "has_sig": false, "md5_digest": "37583ab712f58c8a3230f255c873e185", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12738, "upload_time": "2017-06-27T08:19:19", "upload_time_iso_8601": "2017-06-27T08:19:19.043966Z", "url": "https://files.pythonhosted.org/packages/94/46/80bc45264bcabde49a34b1b935095759f8a2139af3a736a6e13d2b99631f/djangocms-spa-vue-js-0.1.20.tar.gz", "yanked": false}], "0.1.21": [{"comment_text": "", "digests": {"md5": "388785a385ad9d23dc02302e453ec4fe", "sha256": "587a8d2ca5ccec55362e192965eb64fd733825879f701f1daf9734decaa21dad"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.21.tar.gz", "has_sig": false, "md5_digest": "388785a385ad9d23dc02302e453ec4fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12788, "upload_time": "2017-07-13T16:10:48", "upload_time_iso_8601": "2017-07-13T16:10:48.701544Z", "url": "https://files.pythonhosted.org/packages/2a/02/5cb30252f71a96ca66a4b6889eb91dbcdb11db825a4cc6533c8f118412f3/djangocms-spa-vue-js-0.1.21.tar.gz", "yanked": false}], "0.1.22": [{"comment_text": "", "digests": {"md5": "5bdbb72784ea1803fffba22b8da0a1e6", "sha256": "cdab08444c1f8e88d3552e306ae5fe236f74b370d65c932f01258e3a9b2b7071"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.22.tar.gz", "has_sig": false, "md5_digest": "5bdbb72784ea1803fffba22b8da0a1e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12940, "upload_time": "2017-08-04T12:31:57", "upload_time_iso_8601": "2017-08-04T12:31:57.081178Z", "url": "https://files.pythonhosted.org/packages/f3/de/efc8e4bdcf628b504c7f02cda30e7b7e51beb1a6ed35a5bc51bbfbcb54bf/djangocms-spa-vue-js-0.1.22.tar.gz", "yanked": false}], "0.1.23": [{"comment_text": "", "digests": {"md5": "40166ba6299fd2ed9b9ac501914d471a", "sha256": "eecc796d649581146e999ffcc79829d3e6e84e21ad067c74a95a03e992865df3"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.23.tar.gz", "has_sig": false, "md5_digest": "40166ba6299fd2ed9b9ac501914d471a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13078, "upload_time": "2017-09-18T08:50:00", "upload_time_iso_8601": "2017-09-18T08:50:00.630981Z", "url": "https://files.pythonhosted.org/packages/7d/00/137316e1f27772fa11bfd9d83ec14d94ecd43c85708398ea720d6a36048a/djangocms-spa-vue-js-0.1.23.tar.gz", "yanked": false}], "0.1.24": [{"comment_text": "", "digests": {"md5": "37f946b93932bbc8f3b32eb6131fa462", "sha256": "4f5b917bb55b8e48820c59218a23a9aeccb5385662c98a747d0b82d61e8a617c"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.24.tar.gz", "has_sig": false, "md5_digest": "37f946b93932bbc8f3b32eb6131fa462", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14335, "upload_time": "2018-01-30T10:09:29", "upload_time_iso_8601": "2018-01-30T10:09:29.755726Z", "url": "https://files.pythonhosted.org/packages/63/95/612c90e9187100192ae6db970244917e50eec41a225bb0b16a3ceb8c6913/djangocms-spa-vue-js-0.1.24.tar.gz", "yanked": false}], "0.1.25": [{"comment_text": "", "digests": {"md5": "6ec5478d977a3faf3fefa4152bf84bab", "sha256": "e479361f6fe5a76be6c11e9b2576a042f05fab2701bed2d1baf058210f62893a"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.25.tar.gz", "has_sig": false, "md5_digest": "6ec5478d977a3faf3fefa4152bf84bab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14537, "upload_time": "2019-07-10T08:06:26", "upload_time_iso_8601": "2019-07-10T08:06:26.744713Z", "url": "https://files.pythonhosted.org/packages/1d/12/08fa06a683a41d3105c6ffcc523ee3d45bd9a9f8e5eab7d63991c98ab928/djangocms-spa-vue-js-0.1.25.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "7787be60b7519006ea8469c787feb5e5", "sha256": "8dd3a0142b693467d7727781f8b9144abc7517262bb065e9e9b3ff86b72e4395"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.7.tar.gz", "has_sig": false, "md5_digest": "7787be60b7519006ea8469c787feb5e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12200, "upload_time": "2017-03-01T09:44:17", "upload_time_iso_8601": "2017-03-01T09:44:17.019107Z", "url": "https://files.pythonhosted.org/packages/e5/30/8be30ac8c0480c8b1d90a11b594dccb42edae7e29ff05397cc65570fd08c/djangocms-spa-vue-js-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "36a89d50e466d93c016d529fa716895d", "sha256": "3b5882cf0eb9a645c35e9dac71b0eb1c6b1929bb039dd13bef417c9d7f596c56"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.8.tar.gz", "has_sig": false, "md5_digest": "36a89d50e466d93c016d529fa716895d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12246, "upload_time": "2017-03-07T13:28:30", "upload_time_iso_8601": "2017-03-07T13:28:30.341771Z", "url": "https://files.pythonhosted.org/packages/78/68/bd048a6ceeb13fcbf6bfb888f3dabc321cb39feff5ba7592d3a234fbec30/djangocms-spa-vue-js-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "d462a8631a3211483923e1eccbec3eef", "sha256": "1fe679d4790ce61630e304380af8a38c4d275aebda8f330fbd0d7728c245bc29"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.9.tar.gz", "has_sig": false, "md5_digest": "d462a8631a3211483923e1eccbec3eef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12262, "upload_time": "2017-03-21T10:34:25", "upload_time_iso_8601": "2017-03-21T10:34:25.280737Z", "url": "https://files.pythonhosted.org/packages/74/98/a17464eab8895bc0944ec88acdac896b52b1a7e2e687d6e0126a0c068d23/djangocms-spa-vue-js-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6ec5478d977a3faf3fefa4152bf84bab", "sha256": "e479361f6fe5a76be6c11e9b2576a042f05fab2701bed2d1baf058210f62893a"}, "downloads": -1, "filename": "djangocms-spa-vue-js-0.1.25.tar.gz", "has_sig": false, "md5_digest": "6ec5478d977a3faf3fefa4152bf84bab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14537, "upload_time": "2019-07-10T08:06:26", "upload_time_iso_8601": "2019-07-10T08:06:26.744713Z", "url": "https://files.pythonhosted.org/packages/1d/12/08fa06a683a41d3105c6ffcc523ee3d45bd9a9f8e5eab7d63991c98ab928/djangocms-spa-vue-js-0.1.25.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:00 2020"}