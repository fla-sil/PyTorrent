{"info": {"author": "BenJC", "author_email": "benjamin.carrington@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python :: 3"], "description": "Tmux Dash\n=========\n\nThe point of this project was to have an easily configurable dashboard for [tmux](https://github.com/tmux/tmux) which would sit on window 0; essentially, it would have a todo list, various clocks, things of that nature.\n\nThere are a couple of alternatives, the one that really comes up often if you're googling around the phrases \"terminal\" and \"dashboard\" is [wtfutil](https://wtfutil.com/), my core issue with this is that the module selection is a little limited, I'm also not a big fan of the way it looks and configuration available doesn't really help that.\n\nThe other project of a similar nature is [tmuxinator](https://github.com/tmuxinator/tmuxinator) but I didn't want to use it as a binary replacement for `tmux` itself. I also wanted a config which is more focused on a specific layout, for which specific splits are defined for each pane.\n\n## Usage\n\nFrom within a tmux session run this script and either use the default config (`$HOME/.config/tmux-dash/config.yml`) or specify a config file with the `-c` option.\n\nNext is to specify a tmux session, this can be done with the session id with `-i` or session name with `-n`. Alternativley, if you are within a tmux session, specify nothing and tmux-dash will pick up on your `$TMUX` environment variable.\n\n## Configuration\n\nA sample configuration could be:\n\n```\n  dashboard:\n    number: 0\n    vim-pane:\n      command: vim\n      split: null\n    htop:\n      command: htop\n      split: \n        direction: horz\n        width: 40\n    head:\n      command: \"watch tail /var/log/pacman.log\"\n      split:\n        from: vim-pane\n```\n\nThis will create a window, numbered 0. In it will be `vim` in the first pane, creating no split (`split: null`), a horizontal split of width 40 containing an instance of `htop`, finally, splitting vertically from the pane marked `vim-pane` watching a log.\n\nSo, something like this,\n\n```\n  +-------------------+--------+\n  |                   |        |\n  |                   |        |\n  |        Vim        |        |\n  |                   |        |\n  |                   |        |\n  +-------------------+  Htop  |\n  |                   |        |\n  |                   |        |\n  |   watch tail...   |        |\n  |                   |        |\n  |                   |        |\n  +-------------------+--------+\n```\n\nNote here that ordering is important, same as setting up a window regularly in tmux. So if you create two panes, `a` and `b`, then split `a` horizontally, you have two on the top, one on the bottom. However, create `a` and `b` horizontally, then split `a` vertically, you get two on the left and one on the right.\n\nThe splits are literally made in the order they appear in the Yaml, and so, to reiterate, ordering is important.\n\nThe meta config would look something like the following:\n\n```\n  <window name>:\n    number: <window number>\n    <pane id>:\n      [command: <command>]\n      [module: <module>]\n      split: (null|\n        [direction: (horz|vert)]\n        [from: <pane id>]\n        [width: <char width>]\n        [height: <char height>])\n    <pane 2 id>:\n      ...\n  <window 2 name>:\n    ...\n```\n\n## Dependencies\n\nLiterally just the one, aside from [Python3](https://www.python.org/download/releases/3.0/), is [libtmux](https://github.com/tmux-python/libtmux).\n\n## Additional Info\n\n`module` refers to what you may find as an empty directory, these are to come, or for anyone who finds this to populate with scripts/binaries, its sole purpose is to put things that you may not necessarily want on your path, kind of pointless but hey.\n\nThe only thing that I wouldn't advise it setting up a configuration and not taking into account the fact that the script is running in a particular pane, obviously, that module/command won't be launched.\n\nHopefully, there's more to come.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bodneyc/tmux_dash", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tmux-dash", "package_url": "https://pypi.org/project/tmux-dash/", "platform": "", "project_url": "https://pypi.org/project/tmux-dash/", "project_urls": {"Homepage": "https://github.com/bodneyc/tmux_dash"}, "release_url": "https://pypi.org/project/tmux-dash/0.0.7/", "requires_dist": ["libtmux"], "requires_python": "", "summary": "Tmux configuration intended for a dashboard", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Tmux Dash</h1>\n<p>The point of this project was to have an easily configurable dashboard for <a href=\"https://github.com/tmux/tmux\" rel=\"nofollow\">tmux</a> which would sit on window 0; essentially, it would have a todo list, various clocks, things of that nature.</p>\n<p>There are a couple of alternatives, the one that really comes up often if you're googling around the phrases \"terminal\" and \"dashboard\" is <a href=\"https://wtfutil.com/\" rel=\"nofollow\">wtfutil</a>, my core issue with this is that the module selection is a little limited, I'm also not a big fan of the way it looks and configuration available doesn't really help that.</p>\n<p>The other project of a similar nature is <a href=\"https://github.com/tmuxinator/tmuxinator\" rel=\"nofollow\">tmuxinator</a> but I didn't want to use it as a binary replacement for <code>tmux</code> itself. I also wanted a config which is more focused on a specific layout, for which specific splits are defined for each pane.</p>\n<h2>Usage</h2>\n<p>From within a tmux session run this script and either use the default config (<code>$HOME/.config/tmux-dash/config.yml</code>) or specify a config file with the <code>-c</code> option.</p>\n<p>Next is to specify a tmux session, this can be done with the session id with <code>-i</code> or session name with <code>-n</code>. Alternativley, if you are within a tmux session, specify nothing and tmux-dash will pick up on your <code>$TMUX</code> environment variable.</p>\n<h2>Configuration</h2>\n<p>A sample configuration could be:</p>\n<pre><code>  dashboard:\n    number: 0\n    vim-pane:\n      command: vim\n      split: null\n    htop:\n      command: htop\n      split: \n        direction: horz\n        width: 40\n    head:\n      command: \"watch tail /var/log/pacman.log\"\n      split:\n        from: vim-pane\n</code></pre>\n<p>This will create a window, numbered 0. In it will be <code>vim</code> in the first pane, creating no split (<code>split: null</code>), a horizontal split of width 40 containing an instance of <code>htop</code>, finally, splitting vertically from the pane marked <code>vim-pane</code> watching a log.</p>\n<p>So, something like this,</p>\n<pre><code>  +-------------------+--------+\n  |                   |        |\n  |                   |        |\n  |        Vim        |        |\n  |                   |        |\n  |                   |        |\n  +-------------------+  Htop  |\n  |                   |        |\n  |                   |        |\n  |   watch tail...   |        |\n  |                   |        |\n  |                   |        |\n  +-------------------+--------+\n</code></pre>\n<p>Note here that ordering is important, same as setting up a window regularly in tmux. So if you create two panes, <code>a</code> and <code>b</code>, then split <code>a</code> horizontally, you have two on the top, one on the bottom. However, create <code>a</code> and <code>b</code> horizontally, then split <code>a</code> vertically, you get two on the left and one on the right.</p>\n<p>The splits are literally made in the order they appear in the Yaml, and so, to reiterate, ordering is important.</p>\n<p>The meta config would look something like the following:</p>\n<pre><code>  &lt;window name&gt;:\n    number: &lt;window number&gt;\n    &lt;pane id&gt;:\n      [command: &lt;command&gt;]\n      [module: &lt;module&gt;]\n      split: (null|\n        [direction: (horz|vert)]\n        [from: &lt;pane id&gt;]\n        [width: &lt;char width&gt;]\n        [height: &lt;char height&gt;])\n    &lt;pane 2 id&gt;:\n      ...\n  &lt;window 2 name&gt;:\n    ...\n</code></pre>\n<h2>Dependencies</h2>\n<p>Literally just the one, aside from <a href=\"https://www.python.org/download/releases/3.0/\" rel=\"nofollow\">Python3</a>, is <a href=\"https://github.com/tmux-python/libtmux\" rel=\"nofollow\">libtmux</a>.</p>\n<h2>Additional Info</h2>\n<p><code>module</code> refers to what you may find as an empty directory, these are to come, or for anyone who finds this to populate with scripts/binaries, its sole purpose is to put things that you may not necessarily want on your path, kind of pointless but hey.</p>\n<p>The only thing that I wouldn't advise it setting up a configuration and not taking into account the fact that the script is running in a particular pane, obviously, that module/command won't be launched.</p>\n<p>Hopefully, there's more to come.</p>\n\n          </div>"}, "last_serial": 6641994, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a86602c0f6dd6263ff22b397c622f574", "sha256": "4524d800dceb8d9fbf2e7a784aac8ef1f2b0163323310c950585d583009fe9dd"}, "downloads": -1, "filename": "tmux_dash-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a86602c0f6dd6263ff22b397c622f574", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12074, "upload_time": "2019-09-08T08:34:36", "upload_time_iso_8601": "2019-09-08T08:34:36.106779Z", "url": "https://files.pythonhosted.org/packages/ff/e2/422d53faea5e18385e5dc4b4178f7ec68c7ef686219b7c244e8ae02a6687/tmux_dash-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "c1c300e21ff97043cc18f82441ebb7ce", "sha256": "3b10cd1d9272821af58cb26344c746b4e7fc26f840d2e27ad612d590b89b9de0"}, "downloads": -1, "filename": "tmux_dash-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c1c300e21ff97043cc18f82441ebb7ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12093, "upload_time": "2019-09-08T16:03:33", "upload_time_iso_8601": "2019-09-08T16:03:33.485387Z", "url": "https://files.pythonhosted.org/packages/a1/64/77ec14684864f38be5d88eda76e7a1507364339b77c4fa15bdded3869284/tmux_dash-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "6e15f56776203c22b9acc5f165ca66c8", "sha256": "a5238e607fe43ac6ecb1413539556c296272123778455af553971d5edd3af737"}, "downloads": -1, "filename": "tmux_dash-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6e15f56776203c22b9acc5f165ca66c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12101, "upload_time": "2019-09-15T18:29:07", "upload_time_iso_8601": "2019-09-15T18:29:07.780826Z", "url": "https://files.pythonhosted.org/packages/d6/21/95ff0f5d695d370656cf763ae551d7481e62f2f69b7cb9a5e60ca6c4aa5a/tmux_dash-0.0.3-py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "a3f99dad037440959c7f45cf0ca255a9", "sha256": "9dd97c5ff6f74452edf53c4be9cb7b1a3f82d264c396286739fa4a3e60d0683d"}, "downloads": -1, "filename": "tmux_dash-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a3f99dad037440959c7f45cf0ca255a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12183, "upload_time": "2019-09-18T17:42:17", "upload_time_iso_8601": "2019-09-18T17:42:17.668482Z", "url": "https://files.pythonhosted.org/packages/32/a6/662d46b4860fef58efdaf68b1a1b0fae33288e0c2b7edca0ce3c1eea4bd0/tmux_dash-0.0.4-py3-none-any.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "1f4ed430c1e6b4f303dace8b1670e881", "sha256": "b9b06cc0dc40576be05ca0e34886a976b8d2fbc8cc274096a1f5a6a38c13bf07"}, "downloads": -1, "filename": "tmux_dash-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "1f4ed430c1e6b4f303dace8b1670e881", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12243, "upload_time": "2019-09-20T14:04:29", "upload_time_iso_8601": "2019-09-20T14:04:29.110380Z", "url": "https://files.pythonhosted.org/packages/dd/ce/41352ba856be0c1c358cabec5066215b22c1666143a3633199f0e8af8790/tmux_dash-0.0.5-py3-none-any.whl", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "e5bec9ae7b3a28dda2634cd917c43031", "sha256": "fca4e8442a27a15f0ebfdec42b79fee4397bef41c2c93c67c6b5e765ec99fae7"}, "downloads": -1, "filename": "tmux_dash-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "e5bec9ae7b3a28dda2634cd917c43031", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12248, "upload_time": "2019-09-21T17:15:29", "upload_time_iso_8601": "2019-09-21T17:15:29.683362Z", "url": "https://files.pythonhosted.org/packages/ef/25/67c2d36bb9d464fb3aadf7965e5f62b588c71435d9894db2c4bb23b6973a/tmux_dash-0.0.6-py3-none-any.whl", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "ecac5be83bf773f8d7863f6d3979a70a", "sha256": "e0f024abd6956b32ceb4dc342f12e7038cd2549293b27c1b9bc092879ebd440e"}, "downloads": -1, "filename": "tmux_dash-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ecac5be83bf773f8d7863f6d3979a70a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12361, "upload_time": "2020-02-16T19:16:20", "upload_time_iso_8601": "2020-02-16T19:16:20.470816Z", "url": "https://files.pythonhosted.org/packages/33/c3/01ec176cb74b12cdae010a43eb7854fecc5d61fab437d3bcd0120b25d765/tmux_dash-0.0.7-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ecac5be83bf773f8d7863f6d3979a70a", "sha256": "e0f024abd6956b32ceb4dc342f12e7038cd2549293b27c1b9bc092879ebd440e"}, "downloads": -1, "filename": "tmux_dash-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ecac5be83bf773f8d7863f6d3979a70a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12361, "upload_time": "2020-02-16T19:16:20", "upload_time_iso_8601": "2020-02-16T19:16:20.470816Z", "url": "https://files.pythonhosted.org/packages/33/c3/01ec176cb74b12cdae010a43eb7854fecc5d61fab437d3bcd0120b25d765/tmux_dash-0.0.7-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:52:06 2020"}