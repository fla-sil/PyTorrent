{"info": {"author": "pripravto-service", "author_email": "test@dlauhy.cz", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Ansiblator\n    ==========\n\n    Ansiblator - makes Ansible api more Pythonic\n\n    This wrapper allows more easier way how to use Ansible in Python.\n    Chain commands without without playbooks. More like Fabric.\n\n    With this Ansible can be more powerfull and it will allow to chain commands with\n    python commands. Ansible documentation is on http://docs.ansible.com/.\n    API is now trying to feel like Fabric, but it's still not complete, there\n    will be some changes.\n\n    Get started\n    ===========\n\n    For instalation you can download package and then just unpack package from\n    https://pypi.python.org/pypi/ansiblator and use it::\n\n        python setup.py install\n\n    or install by pip::\n\n        pip install ansiblator\n\n\n    Quickstart\n    ==========\n\n    For most quickest example you can just create your ansible host file named\n    ansible_hosts inside your home directory or give full path to file.\n\n    Ansiblator is mainly using file such as in ~/ansible_hosts.\n\n    code::\n\n        import ansiblator.api as an\n        ans = an.Ansiblator()\n        ret = ans.local(\"uname -a\", now=True, use_shell=True)\n        ans.run(\"uname -a\", now=True)\n        ans.runner(\"uptime\")\n        ans.run_all()\n        ans.copy(src=\"/tmp/aabc.csv\", dest=\"/tmp/\",pattern=\"pc\",now=True)\n\n    specify ansible hosts file and select pattern::\n\n        ans = an.Ansiblator(inventory=\"/tmp/ansible_file\", pattern=\"pc\")\n\n    use dictionary to create inventory::\n\n        inv = {'pc':[{'ssh_host':'192.168.0.10', 'ssh_user':'test_user', 'su_user':'root'},\n                    {'ssh_host':'192.168.0.12', 'ssh_user':'test_user2', 'su_pass':'paasswd','su_user':'root'}]}\n        ans = an.Ansiblator(inventory=inv)\n        ans.run(\"uname -a\", now=True)\n\n    prepare commands and run after::\n\n        ans = an.Ansiblator(run_at_once=False)\n        ans.get(src=\"/tmp/file\", dest=\"/tmp/\")\n        ans.get(src=\"/tmp/file2\", dest=\"/tmp/\")\n        ans.run_all()\n\n    make custom class::\n\n        class Automatization(Ansiblator):\n\n            def update_server(self, su=True,sudo=False):\n                self.run(\"apt-get update\", su=su, sudo=sudo)\n                self.run(\"apt-get upgrade -y\", su=su, sudo=sudo)\n\n    use custom class and more patterns together::\n\n        ans = Automatization(pattern=['servers', 'production', 'test', 'pc'])\n        ans.update_server()\n\n    With this, you can create full commands or functions and just pass to them\n    pattern and run at the end.\n\n    Need all modules inside Ansible?::\n\n        ans = an.Ansiblator()\n        ans.get_all_modules()\n        #now you should be able to do >\n        ans.user(name=\"hugo\")\n        #or even\n        ans.pip(name=\"six\", virtualenv=\"/tmp/venv\", virtualenv_site_packages=\"yes\")\n\n\n    More information\n    ================\n\n    Ansiblator automatically saves returned json values for actuall runs, so\n    you can use them for testing and conditions. For example\n\n    testing::\n\n        return_code = ans.local(\"uname -a\", now=True, use_shell=True)\n        return_code['contacted']\n\n        or\n\n        return_code = ans.local([\"uname\", \"-a\"], now=True, use_shell=False)\n        return_code['contacted']\n\n    Todo\n    ====\n\n    - make more tests\n    - improve logging\n    - improve DictToInventory mapper, so more options are possible, such as groups and so on\n\n    Changes\n    =======\n\n    - ability to run on more patterns\n    - fixes on more runs\n    - run all modules on ansible\n\n    Info\n    ====\n\n    For more information you can consult functions or actual Ansible documentation.\n    More information can be also used on http://www.pripravto.cz. You can also\n    contact us there.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.pripravto.cz", "keywords": "ansible,wrapper,automatization,api", "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "ansiblator", "package_url": "https://pypi.org/project/ansiblator/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ansiblator/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.pripravto.cz"}, "release_url": "https://pypi.org/project/ansiblator/0.6-13-28-10-2014/", "requires_dist": null, "requires_python": null, "summary": "Ansiblator - makes Ansible api more Pythonic", "version": "0.6-13-28-10-2014", "yanked": false, "html_description": "<div class=\"project-description\">\n            Ansiblator<br>    ==========<br><br>    Ansiblator - makes Ansible api more Pythonic<br><br>    This wrapper allows more easier way how to use Ansible in Python.<br>    Chain commands without without playbooks. More like Fabric.<br><br>    With this Ansible can be more powerfull and it will allow to chain commands with<br>    python commands. Ansible documentation is on http://docs.ansible.com/.<br>    API is now trying to feel like Fabric, but it's still not complete, there<br>    will be some changes.<br><br>    Get started<br>    ===========<br><br>    For instalation you can download package and then just unpack package from<br>    https://pypi.python.org/pypi/ansiblator and use it::<br><br>        python setup.py install<br><br>    or install by pip::<br><br>        pip install ansiblator<br><br><br>    Quickstart<br>    ==========<br><br>    For most quickest example you can just create your ansible host file named<br>    ansible_hosts inside your home directory or give full path to file.<br><br>    Ansiblator is mainly using file such as in ~/ansible_hosts.<br><br>    code::<br><br>        import ansiblator.api as an<br>        ans = an.Ansiblator()<br>        ret = ans.local(\"uname -a\", now=True, use_shell=True)<br>        ans.run(\"uname -a\", now=True)<br>        ans.runner(\"uptime\")<br>        ans.run_all()<br>        ans.copy(src=\"/tmp/aabc.csv\", dest=\"/tmp/\",pattern=\"pc\",now=True)<br><br>    specify ansible hosts file and select pattern::<br><br>        ans = an.Ansiblator(inventory=\"/tmp/ansible_file\", pattern=\"pc\")<br><br>    use dictionary to create inventory::<br><br>        inv = {'pc':[{'ssh_host':'192.168.0.10', 'ssh_user':'test_user', 'su_user':'root'},<br>                    {'ssh_host':'192.168.0.12', 'ssh_user':'test_user2', 'su_pass':'paasswd','su_user':'root'}]}<br>        ans = an.Ansiblator(inventory=inv)<br>        ans.run(\"uname -a\", now=True)<br><br>    prepare commands and run after::<br><br>        ans = an.Ansiblator(run_at_once=False)<br>        ans.get(src=\"/tmp/file\", dest=\"/tmp/\")<br>        ans.get(src=\"/tmp/file2\", dest=\"/tmp/\")<br>        ans.run_all()<br><br>    make custom class::<br><br>        class Automatization(Ansiblator):<br><br>            def update_server(self, su=True,sudo=False):<br>                self.run(\"apt-get update\", su=su, sudo=sudo)<br>                self.run(\"apt-get upgrade -y\", su=su, sudo=sudo)<br><br>    use custom class and more patterns together::<br><br>        ans = Automatization(pattern=['servers', 'production', 'test', 'pc'])<br>        ans.update_server()<br><br>    With this, you can create full commands or functions and just pass to them<br>    pattern and run at the end.<br><br>    Need all modules inside Ansible?::<br><br>        ans = an.Ansiblator()<br>        ans.get_all_modules()<br>        #now you should be able to do &gt;<br>        ans.user(name=\"hugo\")<br>        #or even<br>        ans.pip(name=\"six\", virtualenv=\"/tmp/venv\", virtualenv_site_packages=\"yes\")<br><br><br>    More information<br>    ================<br><br>    Ansiblator automatically saves returned json values for actuall runs, so<br>    you can use them for testing and conditions. For example<br><br>    testing::<br><br>        return_code = ans.local(\"uname -a\", now=True, use_shell=True)<br>        return_code['contacted']<br><br>        or<br><br>        return_code = ans.local([\"uname\", \"-a\"], now=True, use_shell=False)<br>        return_code['contacted']<br><br>    Todo<br>    ====<br><br>    - make more tests<br>    - improve logging<br>    - improve DictToInventory mapper, so more options are possible, such as groups and so on<br><br>    Changes<br>    =======<br><br>    - ability to run on more patterns<br>    - fixes on more runs<br>    - run all modules on ansible<br><br>    Info<br>    ====<br><br>    For more information you can consult functions or actual Ansible documentation.<br>    More information can be also used on http://www.pripravto.cz. You can also<br>    contact us there.\n          </div>"}, "last_serial": 1285745, "releases": {"0.5-1-28-09-2014": [{"comment_text": "", "digests": {"md5": "c41eda770a5e5bb03627134158ee9975", "sha256": "00cf375e32a1a9a0a2c5fe9a8671d19f7579ae85f31829dbdb4f71a104b7cdf5"}, "downloads": -1, "filename": "ansiblator-0.5-1-28-09-2014.tar.gz", "has_sig": false, "md5_digest": "c41eda770a5e5bb03627134158ee9975", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5835, "upload_time": "2014-09-28T17:41:36", "upload_time_iso_8601": "2014-09-28T17:41:36.548708Z", "url": "https://files.pythonhosted.org/packages/ab/c3/b9225eaea3c67bf819b366b21f0265cbe27bc21abadb6c634c929cb6c8de/ansiblator-0.5-1-28-09-2014.tar.gz", "yanked": false}], "0.5-11-18-10-2014": [{"comment_text": "", "digests": {"md5": "7e5f4e1acceeba2bee0615210e7d4031", "sha256": "91872d43987ca1f489e907efccaca41f95a5af95e54d03826fb9f556f476cb09"}, "downloads": -1, "filename": "ansiblator-0.5-11-18-10-2014.tar.gz", "has_sig": false, "md5_digest": "7e5f4e1acceeba2bee0615210e7d4031", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7781, "upload_time": "2014-10-18T12:00:29", "upload_time_iso_8601": "2014-10-18T12:00:29.744434Z", "url": "https://files.pythonhosted.org/packages/cb/0a/35f1490f9315fc583b2891ed260ca49fc42b79a3e88afb634c7d5e2efe00/ansiblator-0.5-11-18-10-2014.tar.gz", "yanked": false}], "0.5-4-28-09-2014": [{"comment_text": "", "digests": {"md5": "cc53043a3d69cbeb91aa7fa8cdfdad47", "sha256": "603af22df7b5464aa39640471376b253a5ebe7be396f38fb2342db59ac35be31"}, "downloads": -1, "filename": "ansiblator-0.5-4-28-09-2014.tar.gz", "has_sig": false, "md5_digest": "cc53043a3d69cbeb91aa7fa8cdfdad47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6039, "upload_time": "2014-09-28T18:40:01", "upload_time_iso_8601": "2014-09-28T18:40:01.702765Z", "url": "https://files.pythonhosted.org/packages/e2/46/b150f6f3940d038ecc5c17480383ca1358ca6ba82270b8f39690c4a1eb8e/ansiblator-0.5-4-28-09-2014.tar.gz", "yanked": false}], "0.5-5-28-09-2014": [{"comment_text": "", "digests": {"md5": "1f3ac6442b71fa2e1eafd8e9467a4c4d", "sha256": "e8868de3caffa433e1d4c37b3f07cdc2485465aaf2182ba728e994e1ab011f29"}, "downloads": -1, "filename": "ansiblator-0.5-5-28-09-2014.tar.gz", "has_sig": false, "md5_digest": "1f3ac6442b71fa2e1eafd8e9467a4c4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6310, "upload_time": "2014-09-28T20:57:05", "upload_time_iso_8601": "2014-09-28T20:57:05.657467Z", "url": "https://files.pythonhosted.org/packages/4a/b7/16c941f94f0bdc6b592a8cea634c94a1da522c75ce10f92896554e403bb9/ansiblator-0.5-5-28-09-2014.tar.gz", "yanked": false}], "0.5-8-29-09-2014": [{"comment_text": "", "digests": {"md5": "4b25bdb535273efca240d494095f8b09", "sha256": "6856fb285b7570d82962d247dd2b6e14abad9a82757300228fa01268aa6c68e2"}, "downloads": -1, "filename": "ansiblator-0.5-8-29-09-2014.tar.gz", "has_sig": false, "md5_digest": "4b25bdb535273efca240d494095f8b09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7194, "upload_time": "2014-09-29T05:38:49", "upload_time_iso_8601": "2014-09-29T05:38:49.305486Z", "url": "https://files.pythonhosted.org/packages/76/c0/43f14edb78cfbf57ac78de537d55d7d06c805ea3768914571e621fb49621/ansiblator-0.5-8-29-09-2014.tar.gz", "yanked": false}], "0.5-9-11-10-2014": [{"comment_text": "", "digests": {"md5": "c1f7d50dd96deb7ecbce9681013c38bf", "sha256": "ece886ee71811e00e7982fd22b736f0bed904a60874ba30caa1acbff6edf852d"}, "downloads": -1, "filename": "ansiblator-0.5-9-11-10-2014.tar.gz", "has_sig": false, "md5_digest": "c1f7d50dd96deb7ecbce9681013c38bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7418, "upload_time": "2014-10-11T08:16:52", "upload_time_iso_8601": "2014-10-11T08:16:52.511975Z", "url": "https://files.pythonhosted.org/packages/49/ed/457ac27a49835f83a3dd42d41fde4b8073f57916cba7ca37ea87db8c4075/ansiblator-0.5-9-11-10-2014.tar.gz", "yanked": false}], "0.6-13-28-10-2014": [{"comment_text": "", "digests": {"md5": "1b3978bde090eeb56be84e27ba52f5df", "sha256": "2c21f9babd9b338e1bcd72861fef94d686d4909596ec5818ca87d990e90cbfc1"}, "downloads": -1, "filename": "ansiblator-0.6-13-28-10-2014.tar.gz", "has_sig": false, "md5_digest": "1b3978bde090eeb56be84e27ba52f5df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8477, "upload_time": "2014-10-28T15:20:27", "upload_time_iso_8601": "2014-10-28T15:20:27.454782Z", "url": "https://files.pythonhosted.org/packages/c2/e9/c3c373e51b9ffc92a3c49489d295d03d5df5c6c679f2c59d3a2a45c9d847/ansiblator-0.6-13-28-10-2014.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1b3978bde090eeb56be84e27ba52f5df", "sha256": "2c21f9babd9b338e1bcd72861fef94d686d4909596ec5818ca87d990e90cbfc1"}, "downloads": -1, "filename": "ansiblator-0.6-13-28-10-2014.tar.gz", "has_sig": false, "md5_digest": "1b3978bde090eeb56be84e27ba52f5df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8477, "upload_time": "2014-10-28T15:20:27", "upload_time_iso_8601": "2014-10-28T15:20:27.454782Z", "url": "https://files.pythonhosted.org/packages/c2/e9/c3c373e51b9ffc92a3c49489d295d03d5df5c6c679f2c59d3a2a45c9d847/ansiblator-0.6-13-28-10-2014.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:06 2020"}