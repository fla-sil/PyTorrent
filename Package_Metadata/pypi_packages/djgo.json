{"info": {"author": "Ceterai", "author_email": "ceterai@protonmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8"], "description": "# djgo\n\n## Description\n\nThis package provides some shortcuts for your django app.\n\n## Installation\n\n    pip install djgo\n\n- [PyPI page](https://pypi.org/project/djgo/)\n- [GitHub page](https://github.com/Ceterai/djgo/)\n\n## Usage\n\ndjgo has shortcuts for different parts of the app.\nTo use it, simply import it with `import djgo`.\n\n### manage.py\n\nMethod `start_django()` (or `manage()`) is a shortcut for launching Django.\n\n### wsgi.py\n\nMethod `set_wsgi()` is a shortcut that sets Django settings env variable and returns default wsgi application.\n\n### urls.py\n\nMethod `load_app()` is a shortcut that loads and returns an app module or its part.\n\n### app/contrib.py\n\nMethod `app_config()` is a shortcut that sets Django app config. Example:\n\n    from djpp import app_config\n    default_app_config = app_config(verbose_name='My Cool App')\n\n### app/models.py\n\nDecorator `@meta` is a shortcut that sets meta and \\_\\_str\\_\\_() for your model.  \nWARNING: All meta defined this way won't register in migrations.  \nExample:\n\n    @meta(single='My Client', plural='My Clients', display='name')\n    class Client(models.Model):\n        name = models.CharField()\n\nis equal to\n\n    class Client(models.Model):\n        name = models.CharField()\n        class Meta:\n            verbose_name = 'My Client'\n            verbose_name_plural = 'My Clients'\n        def \\_\\_str\\_\\_():\n            return self.name\n\nexcept the meta (name and verbose_name) won't register in migrations.\n\nYou can also pass functions to `display`:\n\n    @meta('My Client', display=lambda self: 'Cool ' + str(self.name))\n    class Client(models.Model):\n        name = models.CharField()\n\nis equal to\n\n    class Client(models.Model):\n        name = models.CharField()\n        class Meta:\n            name = 'My Client'\n            verbose_name = 'My Client'\n        def \\_\\_str\\_\\_():\n            return 'Cool ' + str(self.name)\n\nexcept the meta (name and verbose_name) won't register in migrations.\n\n### djgo.admin\n\ndjgo has a small set of methods for admin site and admin.py file:\n\n- `admin.urls` is a shortcut for `path('url', admin.site.urls)`, except adds '/' in the end of your url string if it doesn't have one.\n- `admin.meta` is a shortcut for setting `admin.site.site_header` and `admin.site.site_title`.\n- `admin.clear_models` is a shortcut for clearing models from admin site registry.\n- `admin.quick_inline` is a **decorator** for setting some tabular inline params.\n\n### Other features\n\nYou can also access settings through djgo with `djgo.settings`!\n\nLastly, djgo provides a small `log()` method for printing some info.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Ceterai/djgo", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "djgo", "package_url": "https://pypi.org/project/djgo/", "platform": "", "project_url": "https://pypi.org/project/djgo/", "project_urls": {"Homepage": "https://github.com/Ceterai/djgo", "Repository": "https://github.com/Ceterai/djgo"}, "release_url": "https://pypi.org/project/djgo/0.0.2/", "requires_dist": ["django (>=3.0.0,<4.0.0)"], "requires_python": ">=3.8,<4.0", "summary": "A pack of shortcuts for Django.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>djgo</h1>\n<h2>Description</h2>\n<p>This package provides some shortcuts for your django app.</p>\n<h2>Installation</h2>\n<pre><code>pip install djgo\n</code></pre>\n<ul>\n<li><a href=\"https://pypi.org/project/djgo/\" rel=\"nofollow\">PyPI page</a></li>\n<li><a href=\"https://github.com/Ceterai/djgo/\" rel=\"nofollow\">GitHub page</a></li>\n</ul>\n<h2>Usage</h2>\n<p>djgo has shortcuts for different parts of the app.\nTo use it, simply import it with <code>import djgo</code>.</p>\n<h3>manage.py</h3>\n<p>Method <code>start_django()</code> (or <code>manage()</code>) is a shortcut for launching Django.</p>\n<h3>wsgi.py</h3>\n<p>Method <code>set_wsgi()</code> is a shortcut that sets Django settings env variable and returns default wsgi application.</p>\n<h3>urls.py</h3>\n<p>Method <code>load_app()</code> is a shortcut that loads and returns an app module or its part.</p>\n<h3>app/contrib.py</h3>\n<p>Method <code>app_config()</code> is a shortcut that sets Django app config. Example:</p>\n<pre><code>from djpp import app_config\ndefault_app_config = app_config(verbose_name='My Cool App')\n</code></pre>\n<h3>app/models.py</h3>\n<p>Decorator <code>@meta</code> is a shortcut that sets meta and __str__() for your model.<br>\nWARNING: All meta defined this way won't register in migrations.<br>\nExample:</p>\n<pre><code>@meta(single='My Client', plural='My Clients', display='name')\nclass Client(models.Model):\n    name = models.CharField()\n</code></pre>\n<p>is equal to</p>\n<pre><code>class Client(models.Model):\n    name = models.CharField()\n    class Meta:\n        verbose_name = 'My Client'\n        verbose_name_plural = 'My Clients'\n    def \\_\\_str\\_\\_():\n        return self.name\n</code></pre>\n<p>except the meta (name and verbose_name) won't register in migrations.</p>\n<p>You can also pass functions to <code>display</code>:</p>\n<pre><code>@meta('My Client', display=lambda self: 'Cool ' + str(self.name))\nclass Client(models.Model):\n    name = models.CharField()\n</code></pre>\n<p>is equal to</p>\n<pre><code>class Client(models.Model):\n    name = models.CharField()\n    class Meta:\n        name = 'My Client'\n        verbose_name = 'My Client'\n    def \\_\\_str\\_\\_():\n        return 'Cool ' + str(self.name)\n</code></pre>\n<p>except the meta (name and verbose_name) won't register in migrations.</p>\n<h3>djgo.admin</h3>\n<p>djgo has a small set of methods for admin site and admin.py file:</p>\n<ul>\n<li><code>admin.urls</code> is a shortcut for <code>path('url', admin.site.urls)</code>, except adds '/' in the end of your url string if it doesn't have one.</li>\n<li><code>admin.meta</code> is a shortcut for setting <code>admin.site.site_header</code> and <code>admin.site.site_title</code>.</li>\n<li><code>admin.clear_models</code> is a shortcut for clearing models from admin site registry.</li>\n<li><code>admin.quick_inline</code> is a <strong>decorator</strong> for setting some tabular inline params.</li>\n</ul>\n<h3>Other features</h3>\n<p>You can also access settings through djgo with <code>djgo.settings</code>!</p>\n<p>Lastly, djgo provides a small <code>log()</code> method for printing some info.</p>\n\n          </div>"}, "last_serial": 7120890, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "599a51127355eabb0dc9a54d27cbc73e", "sha256": "e70056049a7ed0a3533eed828574ba0a13ae4d764359bfbe17fb095799736a3a"}, "downloads": -1, "filename": "djgo-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "599a51127355eabb0dc9a54d27cbc73e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5928, "upload_time": "2020-04-28T14:38:04", "upload_time_iso_8601": "2020-04-28T14:38:04.237539Z", "url": "https://files.pythonhosted.org/packages/08/c3/e6616f735e3805c788ba17ae086ffcd2343ad9de8289c80d4d4b1a532389/djgo-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d81f4e26d548ffde0fa9f3940a11418", "sha256": "8ecdfc1383b41b96b38e90aa6ee2c38966e7217f47eaaed94a6971f17f09e518"}, "downloads": -1, "filename": "djgo-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8d81f4e26d548ffde0fa9f3940a11418", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 5498, "upload_time": "2020-04-28T14:38:06", "upload_time_iso_8601": "2020-04-28T14:38:06.304513Z", "url": "https://files.pythonhosted.org/packages/81/0b/e3cc5d77d4981f679c9e871e372312e1d0a81a04a25749717fd994d64619/djgo-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "bbfc4b37c6b12f046d79d671ea569acb", "sha256": "902c878633b0ba21a749e804733eedb40f7ab004c63c997866ecb41424532729"}, "downloads": -1, "filename": "djgo-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bbfc4b37c6b12f046d79d671ea569acb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5960, "upload_time": "2020-04-28T14:50:05", "upload_time_iso_8601": "2020-04-28T14:50:05.112578Z", "url": "https://files.pythonhosted.org/packages/ae/0e/0a717debbcd2eccb3496a8e354adaf9d4d1626cd137653a5fc9abdc98b71/djgo-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c58c0df31c31e06fd84bce29a029547", "sha256": "2d7b43d9feeb5298749136407c36ac16e7b9dc076a59ed152eb93c775187e788"}, "downloads": -1, "filename": "djgo-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4c58c0df31c31e06fd84bce29a029547", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 5530, "upload_time": "2020-04-28T14:50:06", "upload_time_iso_8601": "2020-04-28T14:50:06.169771Z", "url": "https://files.pythonhosted.org/packages/97/32/5307c1b758e4f1af8458ac69f22cfb568eaeec48c117b3c31341ae72bf90/djgo-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bbfc4b37c6b12f046d79d671ea569acb", "sha256": "902c878633b0ba21a749e804733eedb40f7ab004c63c997866ecb41424532729"}, "downloads": -1, "filename": "djgo-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bbfc4b37c6b12f046d79d671ea569acb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5960, "upload_time": "2020-04-28T14:50:05", "upload_time_iso_8601": "2020-04-28T14:50:05.112578Z", "url": "https://files.pythonhosted.org/packages/ae/0e/0a717debbcd2eccb3496a8e354adaf9d4d1626cd137653a5fc9abdc98b71/djgo-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c58c0df31c31e06fd84bce29a029547", "sha256": "2d7b43d9feeb5298749136407c36ac16e7b9dc076a59ed152eb93c775187e788"}, "downloads": -1, "filename": "djgo-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4c58c0df31c31e06fd84bce29a029547", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 5530, "upload_time": "2020-04-28T14:50:06", "upload_time_iso_8601": "2020-04-28T14:50:06.169771Z", "url": "https://files.pythonhosted.org/packages/97/32/5307c1b758e4f1af8458ac69f22cfb568eaeec48c117b3c31341ae72bf90/djgo-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:35 2020"}