{"info": {"author": "FNNDSC", "author_email": "dev@babymri.org", "bugtrack_url": null, "classifiers": [], "description": "pfdicom\n=======\n\n.. image:: https://badge.fury.io/py/pfdicom.svg\n    :target: https://badge.fury.io/py/pfdicom\n\n.. image:: https://travis-ci.org/FNNDSC/pfdicom.svg?branch=master\n    :target: https://travis-ci.org/FNNDSC/pfdicom\n\n.. image:: https://img.shields.io/badge/python-3.5%2B-blue.svg\n    :target: https://badge.fury.io/py/pfdicom\n\n.. contents:: Table of Contents\n\nQuick Overview\n--------------\n\n-  ``pfdicom`` is primarily a base module for other, more specialized classes. It typically is never used on its own.\n\nOverview\n--------\n\n``pfdicom`` in and of itself provides minimal end value. This module/class is intended to be a building block for deeper functionality. Its purpose is to probe a given directory filesystem for DICOM files and construct a tree representation (using pftree), and then, for each directory provide the means to read in a given DICOM file (using pydicom) to provide some minimal tag extraction and output file templating.\n\nMost importantly, derived classes of this parent class can provide detailed and powerful methods to process the directories containing DICOM files, saving results to an output file tree. For example, various modules are built off this chassis, including ``pfdicom_tagExtract`` and ``pfdicom_tagSub``.\n\nInstallation\n------------\n\nDependencies\n~~~~~~~~~~~~\n\nThe following dependencies are installed on your host system/python3 virtual env (they will also be automatically installed if pulled from pypi):\n\n-  ``pfmisc`` (various misc modules and classes for the pf* family of objects)\n-  ``pftree`` (create a dictionary representation of a filesystem hierarchy)\n\nUsing ``PyPI``\n~~~~~~~~~~~~~~\n\nThe best method of installing this script and all of its dependencies is\nby fetching it from PyPI\n\n.. code:: bash\n\n        pip3 install pfdicom\n\nCommand line arguments\n----------------------\n\n.. code:: html\n\n        -I|--inputDir <inputDir>\n        Input DICOM directory to examine. By default, the first file in this\n        directory is examined for its tag information. There is an implicit\n        assumption that each <inputDir> contains a single DICOM series.\n\n        [--maxdepth <dirDepth>]\n        The maximum depth to descend relative to the <inputDir>. Note, that\n        this counts from zero! Default of '-1' implies transverse the entire\n        directory tree.\n\n        -i|--inputFile <inputFile>\n        An optional <inputFile> specified relative to the <inputDir>. If \n        specified, then do not perform a directory walk, but convert only \n        this file.\n\n        [-O|--outputDir <outputDir>]\n        The directory to contain all output files.\n\n        [-O|--outputDir <outputDir>]\n        The directory to contain all output files.\n\n        [--outputLeafDir <outputLeafDirFormat>]\n        If specified, will apply the <outputLeafDirFormat> to the output\n        directories containing data. This is useful to blanket describe\n        final output directories with some descriptive text, such as \n        'anon' or 'preview'. \n\n        This is a formatting spec, so \n\n            --outputLeafDir 'preview-%s'\n\n        where %s is the original leaf directory node, will prefix each\n        final directory containing output with the text 'preview-' which\n        can be useful in describing some features of the output set.\n\n        -e|--extension <DICOMextension>\n        An optional extension to filter the DICOM files of interest from the \n        <inputDir>.\n\n        [-t|--threads <numThreads>]\n        If specified, break the innermost analysis loop into <numThreads>\n        threads. Please note the following caveats:\n\n            * Only thread if you have a high CPU analysis loop. Since\n              most of the operations of this module will entail reading\n              and writing DICOM files, and since these operations are \n              the bulk of the execution time, adding threading will not\n              really help.\n\n            * Threading will change the nature of the innermost looping\n              across the problem domain, with the result that *all* of the\n              problem data will be read into memory! That means all of \n              DICOMs across all of the subdirs! In non-threading mode,\n              only DICOMs from a single directory at a time are read\n              and then discarded.\n\n        This flag is less applicable to this base class. It is here\n        to provide fall-through compatibility with derived classes.\n\n        [-x|--man]\n        Show full help.\n\n        [-y|--synopsis]\n        Show brief help.\n\n        [--json]\n        If true, dump the final return as JSON formatted string.\n\n        [--followLinks]\n        If specified, follow symbolic links.\n\n        [--version]\n        If specified, print a version string.\n\n        -v|--verbosity <level>\n        Set the app verbosity level. \n\n            0: No internal output;\n            1: Most important internal output -- none for 'pfdicom';\n            2: As with level '1' but with simpleProgress bar in 'pftree';\n            3: As with level '2' but with list of input dirs/files in 'pftree';\n\nString processing on tag values\n-------------------------------\n\n``pfidcom`` offers some functions on tag values -- these are typically string based. The syntax is:\n\n.. code:: html\n\n        %_<functionName>|<arg>_<tagName>\n\nFor example, \n\n.. code:: html\n\n        %_name|patientID_PatientName\n\n\nGenerate a random name and replace the PatientName with this value. Since each DICOM file in a series could conceivably have a different generated random name, use the 'PatientID' tag as a seed for the name generator. Note that in order to protect the parsing of DICOM tags, if used in sub-function arguments, the tag MUST start with a lower case.\n\n.. code:: html\n\n        %_md5|7_PatientID\n\nAn md5 hash of the ``PatientID`` is determined. Of the resultant string, the first 7 chars are used. This is returned as the value for the ``PatientID`` tag.\n\n.. code:: bash\n\n        %_strmsk|******01_PatientBirthDate\n\nThe ``PatientBirthDate`` value is masked such that the first six chars are conserved, but the final two are replaced by '01'. This  has the effect of setting the ``PatientBirthDate`` to the first day of the birth month.\n\n.. code:: html\n\n        %_nospc|-_ProtocolName\n\nThe ``ProtocolName`` is processed to remove all white space, and using a '-' character instead of any whitespace components.\n\nExamples\n--------\n\nRun on a target tree, creating internal representations of specific file and directory strucutres.\n\n.. code:: bash\n\n        pfdicom         -I /var/www/html                \\\n                        -O /tmp                         \\\n                        -o %PatientID-%PatientAge       \\\n                        -e .dcm                         \\\n                        -v 0 --json\n\n        which will output only at script conclusion and will log a JSON formatted string.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FNNDSC/pfdicom", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pfdicom", "package_url": "https://pypi.org/project/pfdicom/", "platform": "", "project_url": "https://pypi.org/project/pfdicom/", "project_urls": {"Homepage": "https://github.com/FNNDSC/pfdicom"}, "release_url": "https://pypi.org/project/pfdicom/1.7.10/", "requires_dist": null, "requires_python": "", "summary": "Base module for parsing DICOM files in the pf* family.", "version": "1.7.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/pfdicom\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/pfdicom.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52077727d79652696c0799122068e0dac89b8b4c/68747470733a2f2f62616467652e667572792e696f2f70792f70666469636f6d2e737667\"></a>\n<a href=\"https://travis-ci.org/FNNDSC/pfdicom\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/FNNDSC/pfdicom.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85db22ebc8aff0207fcbe37862559fbeaa379547/68747470733a2f2f7472617669732d63692e6f72672f464e4e4453432f70666469636f6d2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/pfdicom\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/python-3.5%2B-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72717db1f08ff88b6b237ad21c89e86732f2fa28/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352532422d626c75652e737667\"></a>\n<div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#quick-overview\" id=\"id1\" rel=\"nofollow\">Quick Overview</a></li>\n<li><a href=\"#overview\" id=\"id2\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#installation\" id=\"id3\" rel=\"nofollow\">Installation</a><ul>\n<li><a href=\"#dependencies\" id=\"id4\" rel=\"nofollow\">Dependencies</a></li>\n<li><a href=\"#using-pypi\" id=\"id5\" rel=\"nofollow\">Using <tt>PyPI</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#command-line-arguments\" id=\"id6\" rel=\"nofollow\">Command line arguments</a></li>\n<li><a href=\"#string-processing-on-tag-values\" id=\"id7\" rel=\"nofollow\">String processing on tag values</a></li>\n<li><a href=\"#examples\" id=\"id8\" rel=\"nofollow\">Examples</a></li>\n</ul>\n</div>\n<div id=\"quick-overview\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Quick Overview</a></h2>\n<ul>\n<li><tt>pfdicom</tt> is primarily a base module for other, more specialized classes. It typically is never used on its own.</li>\n</ul>\n</div>\n<div id=\"overview\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Overview</a></h2>\n<p><tt>pfdicom</tt> in and of itself provides minimal end value. This module/class is intended to be a building block for deeper functionality. Its purpose is to probe a given directory filesystem for DICOM files and construct a tree representation (using pftree), and then, for each directory provide the means to read in a given DICOM file (using pydicom) to provide some minimal tag extraction and output file templating.</p>\n<p>Most importantly, derived classes of this parent class can provide detailed and powerful methods to process the directories containing DICOM files, saving results to an output file tree. For example, various modules are built off this chassis, including <tt>pfdicom_tagExtract</tt> and <tt>pfdicom_tagSub</tt>.</p>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Installation</a></h2>\n<div id=\"dependencies\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Dependencies</a></h3>\n<p>The following dependencies are installed on your host system/python3 virtual env (they will also be automatically installed if pulled from pypi):</p>\n<ul>\n<li><tt>pfmisc</tt> (various misc modules and classes for the pf* family of objects)</li>\n<li><tt>pftree</tt> (create a dictionary representation of a filesystem hierarchy)</li>\n</ul>\n</div>\n<div id=\"using-pypi\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Using <tt>PyPI</tt></a></h3>\n<p>The best method of installing this script and all of its dependencies is\nby fetching it from PyPI</p>\n<pre>pip3 install pfdicom\n</pre>\n</div>\n</div>\n<div id=\"command-line-arguments\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Command line arguments</a></h2>\n<pre>-I|--inputDir <span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span>\nInput DICOM directory to examine. By default, the first file in this\ndirectory is examined for its tag information. There is an implicit\nassumption that each <span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span> contains a single DICOM series.\n\n[--maxdepth <span class=\"p\">&lt;</span><span class=\"nt\">dirDepth</span><span class=\"p\">&gt;</span>]\nThe maximum depth to descend relative to the <span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span>. Note, that\nthis counts from zero! Default of '-1' implies transverse the entire\ndirectory tree.\n\n-i|--inputFile <span class=\"p\">&lt;</span><span class=\"nt\">inputFile</span><span class=\"p\">&gt;</span>\nAn optional <span class=\"p\">&lt;</span><span class=\"nt\">inputFile</span><span class=\"p\">&gt;</span> specified relative to the <span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span>. If\nspecified, then do not perform a directory walk, but convert only\nthis file.\n\n[-O|--outputDir <span class=\"p\">&lt;</span><span class=\"nt\">outputDir</span><span class=\"p\">&gt;</span>]\nThe directory to contain all output files.\n\n[-O|--outputDir <span class=\"p\">&lt;</span><span class=\"nt\">outputDir</span><span class=\"p\">&gt;</span>]\nThe directory to contain all output files.\n\n[--outputLeafDir <span class=\"p\">&lt;</span><span class=\"nt\">outputLeafDirFormat</span><span class=\"p\">&gt;</span>]\nIf specified, will apply the <span class=\"p\">&lt;</span><span class=\"nt\">outputLeafDirFormat</span><span class=\"p\">&gt;</span> to the output\ndirectories containing data. This is useful to blanket describe\nfinal output directories with some descriptive text, such as\n'anon' or 'preview'.\n\nThis is a formatting spec, so\n\n    --outputLeafDir 'preview-%s'\n\nwhere %s is the original leaf directory node, will prefix each\nfinal directory containing output with the text 'preview-' which\ncan be useful in describing some features of the output set.\n\n-e|--extension <span class=\"p\">&lt;</span><span class=\"nt\">DICOMextension</span><span class=\"p\">&gt;</span>\nAn optional extension to filter the DICOM files of interest from the\n<span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span>.\n\n[-t|--threads <span class=\"p\">&lt;</span><span class=\"nt\">numThreads</span><span class=\"p\">&gt;</span>]\nIf specified, break the innermost analysis loop into <span class=\"p\">&lt;</span><span class=\"nt\">numThreads</span><span class=\"p\">&gt;</span>\nthreads. Please note the following caveats:\n\n    * Only thread if you have a high CPU analysis loop. Since\n      most of the operations of this module will entail reading\n      and writing DICOM files, and since these operations are\n      the bulk of the execution time, adding threading will not\n      really help.\n\n    * Threading will change the nature of the innermost looping\n      across the problem domain, with the result that *all* of the\n      problem data will be read into memory! That means all of\n      DICOMs across all of the subdirs! In non-threading mode,\n      only DICOMs from a single directory at a time are read\n      and then discarded.\n\nThis flag is less applicable to this base class. It is here\nto provide fall-through compatibility with derived classes.\n\n[-x|--man]\nShow full help.\n\n[-y|--synopsis]\nShow brief help.\n\n[--json]\nIf true, dump the final return as JSON formatted string.\n\n[--followLinks]\nIf specified, follow symbolic links.\n\n[--version]\nIf specified, print a version string.\n\n-v|--verbosity <span class=\"p\">&lt;</span><span class=\"nt\">level</span><span class=\"p\">&gt;</span>\nSet the app verbosity level.\n\n    0: No internal output;\n    1: Most important internal output -- none for 'pfdicom';\n    2: As with level '1' but with simpleProgress bar in 'pftree';\n    3: As with level '2' but with list of input dirs/files in 'pftree';\n</pre>\n</div>\n<div id=\"string-processing-on-tag-values\">\n<h2><a href=\"#id7\" rel=\"nofollow\">String processing on tag values</a></h2>\n<p><tt>pfidcom</tt> offers some functions on tag values \u2013 these are typically string based. The syntax is:</p>\n<pre>%_<span class=\"p\">&lt;</span><span class=\"nt\">functionName</span><span class=\"p\">&gt;</span>|<span class=\"p\">&lt;</span><span class=\"nt\">arg</span><span class=\"p\">&gt;</span>_<span class=\"p\">&lt;</span><span class=\"nt\">tagName</span><span class=\"p\">&gt;</span>\n</pre>\n<p>For example,</p>\n<pre>%_name|patientID_PatientName\n</pre>\n<p>Generate a random name and replace the PatientName with this value. Since each DICOM file in a series could conceivably have a different generated random name, use the \u2018PatientID\u2019 tag as a seed for the name generator. Note that in order to protect the parsing of DICOM tags, if used in sub-function arguments, the tag MUST start with a lower case.</p>\n<pre>%_md5|7_PatientID\n</pre>\n<p>An md5 hash of the <tt>PatientID</tt> is determined. Of the resultant string, the first 7 chars are used. This is returned as the value for the <tt>PatientID</tt> tag.</p>\n<pre>%_strmsk<span class=\"p\">|</span>******01_PatientBirthDate\n</pre>\n<p>The <tt>PatientBirthDate</tt> value is masked such that the first six chars are conserved, but the final two are replaced by \u201801\u2019. This  has the effect of setting the <tt>PatientBirthDate</tt> to the first day of the birth month.</p>\n<pre>%_nospc|-_ProtocolName\n</pre>\n<p>The <tt>ProtocolName</tt> is processed to remove all white space, and using a \u2018-\u2018 character instead of any whitespace components.</p>\n</div>\n<div id=\"examples\">\n<h2><a href=\"#id8\" rel=\"nofollow\">Examples</a></h2>\n<p>Run on a target tree, creating internal representations of specific file and directory strucutres.</p>\n<pre>pfdicom         -I /var/www/html                <span class=\"se\">\\\n</span>                -O /tmp                         <span class=\"se\">\\\n</span>                -o %PatientID-%PatientAge       <span class=\"se\">\\\n</span>                -e .dcm                         <span class=\"se\">\\\n</span>                -v <span class=\"m\">0</span> --json\n\nwhich will output only at script conclusion and will log a JSON formatted string.\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6418262, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "59938e43cbf7c56ace4b62bce20a6a44", "sha256": "b7ec27866d39fc8fb182a86ca4b9d994d950ed6a5291308f4d8034070a589c06"}, "downloads": -1, "filename": "pfdicom-1.1.0.tar.gz", "has_sig": false, "md5_digest": "59938e43cbf7c56ace4b62bce20a6a44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6752, "upload_time": "2018-07-13T22:06:47", "upload_time_iso_8601": "2018-07-13T22:06:47.127712Z", "url": "https://files.pythonhosted.org/packages/48/72/a4035c9427191590bfdf5a1326944a622f72322ca131b3d082ae14a95f0b/pfdicom-1.1.0.tar.gz", "yanked": false}], "1.1.10": [{"comment_text": "", "digests": {"md5": "50a38ab9ed34032177c269628ad0d47d", "sha256": "706b87401fa027df2d1c32fbe0db1d2dbdaf642807957f842f8289e34c5a90d7"}, "downloads": -1, "filename": "pfdicom-1.1.10.tar.gz", "has_sig": false, "md5_digest": "50a38ab9ed34032177c269628ad0d47d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6772, "upload_time": "2018-07-14T01:16:55", "upload_time_iso_8601": "2018-07-14T01:16:55.784707Z", "url": "https://files.pythonhosted.org/packages/01/31/eb5b764aa65f0c6bd80443e45fc71e594b732e6dbc1eaeecb076fbc82306/pfdicom-1.1.10.tar.gz", "yanked": false}], "1.1.14": [{"comment_text": "", "digests": {"md5": "94caf7f160c43026b29b97c84e5777f6", "sha256": "2e1365e9b95f258914a1401f37aeae85f4d8142d4a41035b20829dbabfbd6e17"}, "downloads": -1, "filename": "pfdicom-1.1.14.tar.gz", "has_sig": false, "md5_digest": "94caf7f160c43026b29b97c84e5777f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6783, "upload_time": "2018-07-17T01:09:30", "upload_time_iso_8601": "2018-07-17T01:09:30.847494Z", "url": "https://files.pythonhosted.org/packages/8a/81/4d18970b7895f02c537b3e6539993f98eebb6f820898e7fdb08f988f8047/pfdicom-1.1.14.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "6f5dc1f2434de81eda77dff94f39dc30", "sha256": "2af1e46a1484c852feab9f4e5ddc6ad184140194ab042d33057b2da922878324"}, "downloads": -1, "filename": "pfdicom-1.1.2.tar.gz", "has_sig": false, "md5_digest": "6f5dc1f2434de81eda77dff94f39dc30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6754, "upload_time": "2018-07-13T23:35:05", "upload_time_iso_8601": "2018-07-13T23:35:05.196071Z", "url": "https://files.pythonhosted.org/packages/21/34/3b66b40d1594a3525ad49d86f67ca6080902930c39ff06dfcdc2b28d73f8/pfdicom-1.1.2.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "0f7e69056ab815554f3383abad7fa961", "sha256": "cb4d9a90b6d5392166f0805acd2cf4bb33bea8e63444186f2c6b73ffc946e1a2"}, "downloads": -1, "filename": "pfdicom-1.1.4.tar.gz", "has_sig": false, "md5_digest": "0f7e69056ab815554f3383abad7fa961", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6758, "upload_time": "2018-07-13T23:55:45", "upload_time_iso_8601": "2018-07-13T23:55:45.465216Z", "url": "https://files.pythonhosted.org/packages/24/04/0dfe966a827d8bb1a6e089912ffcc60b99cf8109aa25a18aa0044643ef62/pfdicom-1.1.4.tar.gz", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "fffd6ff74ccbae189d6d7fd87a1bf283", "sha256": "a96f30b1d35d0763845cd05f1df8e161bca52865b247efcd93637c554e7cfd3e"}, "downloads": -1, "filename": "pfdicom-1.1.6.tar.gz", "has_sig": false, "md5_digest": "fffd6ff74ccbae189d6d7fd87a1bf283", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6752, "upload_time": "2018-07-14T00:59:06", "upload_time_iso_8601": "2018-07-14T00:59:06.358796Z", "url": "https://files.pythonhosted.org/packages/30/12/8a97d0760849dbd0259200ffa5ef7d564959abf4106bdb32e880a3071897/pfdicom-1.1.6.tar.gz", "yanked": false}], "1.1.8": [{"comment_text": "", "digests": {"md5": "4afa5f8c6ebddc8236aeabc2527e9eee", "sha256": "ec244da52bfc3d469cc36979af6785fed9beee799ba73c16713e9849f81885ef"}, "downloads": -1, "filename": "pfdicom-1.1.8.tar.gz", "has_sig": false, "md5_digest": "4afa5f8c6ebddc8236aeabc2527e9eee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6775, "upload_time": "2018-07-14T01:10:34", "upload_time_iso_8601": "2018-07-14T01:10:34.877492Z", "url": "https://files.pythonhosted.org/packages/55/89/33ab4921b6912623f43ae2f473b8f2c15fcb7a26710eb8374a61a4607414/pfdicom-1.1.8.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "4c1bdc4e441d8608e7bc54a29f5d5462", "sha256": "f258c94994510306147857e853f243c1dbe160cc1ea562838670ba9c52c96963"}, "downloads": -1, "filename": "pfdicom-1.2.0.tar.gz", "has_sig": false, "md5_digest": "4c1bdc4e441d8608e7bc54a29f5d5462", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8419, "upload_time": "2018-07-19T22:00:34", "upload_time_iso_8601": "2018-07-19T22:00:34.211019Z", "url": "https://files.pythonhosted.org/packages/99/36/c80b5eb4675df82bdd27d7c4a5b28c1b47b21626045992f43ecaeaddf503/pfdicom-1.2.0.tar.gz", "yanked": false}], "1.2.10": [{"comment_text": "", "digests": {"md5": "896750d87cdd8b7c62fb349128ec878a", "sha256": "6dc4a909b9306fbad301d0f1aff36194f39aaf730b723bc5fd46d1a3b2585abd"}, "downloads": -1, "filename": "pfdicom-1.2.10.tar.gz", "has_sig": false, "md5_digest": "896750d87cdd8b7c62fb349128ec878a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8902, "upload_time": "2018-07-23T21:26:29", "upload_time_iso_8601": "2018-07-23T21:26:29.101818Z", "url": "https://files.pythonhosted.org/packages/67/e1/dd53293b2ad1ed5a776b76941471c3a3c3cb4e0c67bd819759b207bcabae/pfdicom-1.2.10.tar.gz", "yanked": false}], "1.2.12": [{"comment_text": "", "digests": {"md5": "6193235199300e9f4c8e66fa6eddf1eb", "sha256": "1a5009a1279530db7c551f80641d903de3b3e9a895b0e58a31218b585bc9f45f"}, "downloads": -1, "filename": "pfdicom-1.2.12.tar.gz", "has_sig": false, "md5_digest": "6193235199300e9f4c8e66fa6eddf1eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8712, "upload_time": "2018-07-23T23:26:36", "upload_time_iso_8601": "2018-07-23T23:26:36.743386Z", "url": "https://files.pythonhosted.org/packages/76/2f/67116736925f913943d3df6894b7eb25193d5d4a65a1fb10773b4b47112c/pfdicom-1.2.12.tar.gz", "yanked": false}], "1.2.14": [{"comment_text": "", "digests": {"md5": "f4e2b5a8beb2e3a520ab355b646d3dfa", "sha256": "f51bcf9f5f970b22245705d29d1227177a540c81a3d144c1b93de17dada3ae07"}, "downloads": -1, "filename": "pfdicom-1.2.14.tar.gz", "has_sig": false, "md5_digest": "f4e2b5a8beb2e3a520ab355b646d3dfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9012, "upload_time": "2018-07-25T15:40:43", "upload_time_iso_8601": "2018-07-25T15:40:43.222155Z", "url": "https://files.pythonhosted.org/packages/7c/8a/8cabce4190a8b8a6d503fcea37e6ffe168cc322afd236bcf8685d5363947/pfdicom-1.2.14.tar.gz", "yanked": false}], "1.2.16": [{"comment_text": "", "digests": {"md5": "d0af92b45a05175e8df4b7f166e61adb", "sha256": "60d1dbb8147ff652af62bec780fcd2f13342525dce2c3a8b94541afcc661188e"}, "downloads": -1, "filename": "pfdicom-1.2.16.tar.gz", "has_sig": false, "md5_digest": "d0af92b45a05175e8df4b7f166e61adb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9119, "upload_time": "2018-07-25T18:36:01", "upload_time_iso_8601": "2018-07-25T18:36:01.097515Z", "url": "https://files.pythonhosted.org/packages/c3/33/34c4a3d0f04a113b7a5c1e0eb49a240c474ef17988888fcd94d5d799c935/pfdicom-1.2.16.tar.gz", "yanked": false}], "1.2.18": [{"comment_text": "", "digests": {"md5": "5288c93f8df5b84500696ce157751e51", "sha256": "61acc0cfcf53e040c50a0b7efb4171b34c41110aa82e3f6a128d939c7bf3938e"}, "downloads": -1, "filename": "pfdicom-1.2.18.tar.gz", "has_sig": false, "md5_digest": "5288c93f8df5b84500696ce157751e51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9342, "upload_time": "2018-07-25T18:57:35", "upload_time_iso_8601": "2018-07-25T18:57:35.641485Z", "url": "https://files.pythonhosted.org/packages/22/87/d1be0a8e560ddc805cbfd0e56c180e4ae76ee44bc257173e554e0844bae7/pfdicom-1.2.18.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "c59ed78c00ffc5aa3724286a9f9b98fa", "sha256": "76cffbd193a6120c692025f772b4066df2f9913c5661a59cb822aeb59074f73e"}, "downloads": -1, "filename": "pfdicom-1.2.2.tar.gz", "has_sig": false, "md5_digest": "c59ed78c00ffc5aa3724286a9f9b98fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8553, "upload_time": "2018-07-19T22:27:54", "upload_time_iso_8601": "2018-07-19T22:27:54.326900Z", "url": "https://files.pythonhosted.org/packages/7c/b0/761619e613499a3e07a5838260a34c63bc370f5f0beb4ee1a899c556f50d/pfdicom-1.2.2.tar.gz", "yanked": false}], "1.2.20": [{"comment_text": "", "digests": {"md5": "5f028031072db182d2f58373ded7c1dd", "sha256": "bdc169d2a36fa485e115d0c7b1f4e77a21e4dccd50aa70606735533cd9a8614e"}, "downloads": -1, "filename": "pfdicom-1.2.20.tar.gz", "has_sig": false, "md5_digest": "5f028031072db182d2f58373ded7c1dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9358, "upload_time": "2018-07-25T20:26:33", "upload_time_iso_8601": "2018-07-25T20:26:33.191527Z", "url": "https://files.pythonhosted.org/packages/da/73/64db0c489aec04dbca68b6c61b2722e41b10cda770a9e431dc2f048a576c/pfdicom-1.2.20.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "2f6ad5786aebfa528206de065c7239cb", "sha256": "085ccaba22b1df59a658597fe9d69210f056d0d7194d638205d8e5303ab3a95a"}, "downloads": -1, "filename": "pfdicom-1.2.4.tar.gz", "has_sig": false, "md5_digest": "2f6ad5786aebfa528206de065c7239cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8481, "upload_time": "2018-07-23T03:42:50", "upload_time_iso_8601": "2018-07-23T03:42:50.323039Z", "url": "https://files.pythonhosted.org/packages/91/c8/c20ee50582ff6336bf117512a73b3c7d96baa42228d56946af7892e608a4/pfdicom-1.2.4.tar.gz", "yanked": false}], "1.2.6": [{"comment_text": "", "digests": {"md5": "92f87ffb2a43e944bfb8305604711ed8", "sha256": "c5a8b6b0da0bcc4869dcc8e360176c82cc7befd285c6b649652702eb03429583"}, "downloads": -1, "filename": "pfdicom-1.2.6.tar.gz", "has_sig": false, "md5_digest": "92f87ffb2a43e944bfb8305604711ed8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8708, "upload_time": "2018-07-23T20:36:23", "upload_time_iso_8601": "2018-07-23T20:36:23.180026Z", "url": "https://files.pythonhosted.org/packages/6d/35/7f40ffe24dc5e724918b780dc600b9fc6a1f5023b72764aebfa437a3ebce/pfdicom-1.2.6.tar.gz", "yanked": false}], "1.2.8": [{"comment_text": "", "digests": {"md5": "fe438180bffb5a4b628e36b3363229cd", "sha256": "d74fcfa83767ca83a8d594851794d60426985abd47c96164a0e607160c9a77fe"}, "downloads": -1, "filename": "pfdicom-1.2.8.tar.gz", "has_sig": false, "md5_digest": "fe438180bffb5a4b628e36b3363229cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8813, "upload_time": "2018-07-23T21:13:36", "upload_time_iso_8601": "2018-07-23T21:13:36.535525Z", "url": "https://files.pythonhosted.org/packages/e7/e7/1e783ad1b00f00abda5c2da57b37922ad5a5ad289469372691089b43f3ed/pfdicom-1.2.8.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "a2a60d6c413204683a424f18169e7db4", "sha256": "0d844cff58a73a0bc7d57ca07c238349eeabf366f4c7fd15cd22110a8e80bae1"}, "downloads": -1, "filename": "pfdicom-1.4.0.tar.gz", "has_sig": false, "md5_digest": "a2a60d6c413204683a424f18169e7db4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9654, "upload_time": "2018-07-27T18:41:56", "upload_time_iso_8601": "2018-07-27T18:41:56.994817Z", "url": "https://files.pythonhosted.org/packages/e4/b6/7b2e9207a2b84c3d971004eda466af2dcaf0f3ae1476cea37e1e8cdc458b/pfdicom-1.4.0.tar.gz", "yanked": false}], "1.4.10": [{"comment_text": "", "digests": {"md5": "761b65ef28bf6eaba86756c1ff48d94e", "sha256": "88b5a160bd06b35f46c0bde934c8bd636b78699d174c6a8635a0456a0c0244eb"}, "downloads": -1, "filename": "pfdicom-1.4.10.tar.gz", "has_sig": false, "md5_digest": "761b65ef28bf6eaba86756c1ff48d94e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10569, "upload_time": "2018-08-02T18:53:40", "upload_time_iso_8601": "2018-08-02T18:53:40.470254Z", "url": "https://files.pythonhosted.org/packages/98/a5/375bdf8b5ea710bc21e867628bc77eda24658849b9dfc683a64adfc131a1/pfdicom-1.4.10.tar.gz", "yanked": false}], "1.4.12": [{"comment_text": "", "digests": {"md5": "7d42963161c2a917d6a997a9f8e91230", "sha256": "18abbe81fdfcd30494f6e4420223f1db4ba1d9484e159e0327cdf278fd8f799e"}, "downloads": -1, "filename": "pfdicom-1.4.12.tar.gz", "has_sig": false, "md5_digest": "7d42963161c2a917d6a997a9f8e91230", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10579, "upload_time": "2018-08-02T22:32:51", "upload_time_iso_8601": "2018-08-02T22:32:51.247997Z", "url": "https://files.pythonhosted.org/packages/1c/b2/e37a5936bbe2b9176a129c0d4096013c19f962e51750c9d0b0c903401aae/pfdicom-1.4.12.tar.gz", "yanked": false}], "1.4.14": [{"comment_text": "", "digests": {"md5": "8063c0d27164198d2e0162303f640fe6", "sha256": "3c4da84ca8210bf514fb00862f51499b3db47106f38359b415574763e48f1247"}, "downloads": -1, "filename": "pfdicom-1.4.14.tar.gz", "has_sig": false, "md5_digest": "8063c0d27164198d2e0162303f640fe6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10663, "upload_time": "2018-08-03T20:52:08", "upload_time_iso_8601": "2018-08-03T20:52:08.168968Z", "url": "https://files.pythonhosted.org/packages/ea/93/61a76a565802164a4a631eb77583af77bd57bb00665087d6d258d94d6d41/pfdicom-1.4.14.tar.gz", "yanked": false}], "1.4.16": [{"comment_text": "", "digests": {"md5": "e39ecae8d53d278dddd058937634bf34", "sha256": "bcc099f841478f98d14c5411e651d1c03743b2da95b1d36b6817993c61023727"}, "downloads": -1, "filename": "pfdicom-1.4.16.tar.gz", "has_sig": false, "md5_digest": "e39ecae8d53d278dddd058937634bf34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10174, "upload_time": "2018-10-08T19:45:52", "upload_time_iso_8601": "2018-10-08T19:45:52.980723Z", "url": "https://files.pythonhosted.org/packages/cf/b6/e4d3435ae4f1ab11726583859f3f000fc11c1c4a4c156d45734e0fdbdb53/pfdicom-1.4.16.tar.gz", "yanked": false}], "1.4.18": [{"comment_text": "", "digests": {"md5": "e6aaabcbc33b2321fe46ca6b812e55ed", "sha256": "5b6466d1aa07a1e20eca53b0b1e7c60b084c0f3df023037200a2671e4df056c2"}, "downloads": -1, "filename": "pfdicom-1.4.18.tar.gz", "has_sig": false, "md5_digest": "e6aaabcbc33b2321fe46ca6b812e55ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10717, "upload_time": "2018-12-04T19:19:11", "upload_time_iso_8601": "2018-12-04T19:19:11.298093Z", "url": "https://files.pythonhosted.org/packages/4d/4a/6a2a483aa15c518aeee33735d2f3ec47cb157f40af2ad37dbd0ef462a07a/pfdicom-1.4.18.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "ebefc4a0f5dac2f7c09bfff97e901098", "sha256": "53ef5ef4984e48cbcec9bea67c4c98249dc5f6d9003c11c05bcd93e0de4bf655"}, "downloads": -1, "filename": "pfdicom-1.4.2.tar.gz", "has_sig": false, "md5_digest": "ebefc4a0f5dac2f7c09bfff97e901098", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9674, "upload_time": "2018-07-30T18:03:23", "upload_time_iso_8601": "2018-07-30T18:03:23.021895Z", "url": "https://files.pythonhosted.org/packages/ea/ef/8f5a3720d6ae8b24c2bb1183b85385d3b2ab76fc626074f3159b0687a7f7/pfdicom-1.4.2.tar.gz", "yanked": false}], "1.4.20": [{"comment_text": "", "digests": {"md5": "62aae7aa3a2f553f0e8d4ee3cd987459", "sha256": "5025b92f60f6cc5738a21c0ad9a7cb1da56519e20714018d54b74b1a14f73e5b"}, "downloads": -1, "filename": "pfdicom-1.4.20.tar.gz", "has_sig": false, "md5_digest": "62aae7aa3a2f553f0e8d4ee3cd987459", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10699, "upload_time": "2018-12-07T19:32:48", "upload_time_iso_8601": "2018-12-07T19:32:48.991710Z", "url": "https://files.pythonhosted.org/packages/75/87/f83b9016d9212a640842ee8d631f38ebd708394483940207837b24e2c749/pfdicom-1.4.20.tar.gz", "yanked": false}], "1.4.22": [{"comment_text": "", "digests": {"md5": "e003a2fd9c0a89976610e0c664895b1d", "sha256": "3a0a371917c3cafbe4e62e52319587e536d21909976218f97361a2018e4789d8"}, "downloads": -1, "filename": "pfdicom-1.4.22.tar.gz", "has_sig": false, "md5_digest": "e003a2fd9c0a89976610e0c664895b1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10712, "upload_time": "2018-12-07T19:53:54", "upload_time_iso_8601": "2018-12-07T19:53:54.681618Z", "url": "https://files.pythonhosted.org/packages/dd/56/261fd629ad31ad5e06b1085c16c8b05498c1b48fb8ec1ba90eeb34a0d333/pfdicom-1.4.22.tar.gz", "yanked": false}], "1.4.24": [{"comment_text": "", "digests": {"md5": "b14ffd1b7aca88d1e42638bbd9889d75", "sha256": "3ff60943d2ca3f044dbd051a97c0407b0cc616a4d81d1b1ef85365851c188493"}, "downloads": -1, "filename": "pfdicom-1.4.24.tar.gz", "has_sig": false, "md5_digest": "b14ffd1b7aca88d1e42638bbd9889d75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10710, "upload_time": "2018-12-07T20:01:23", "upload_time_iso_8601": "2018-12-07T20:01:23.049010Z", "url": "https://files.pythonhosted.org/packages/2d/60/716c2e83d8e89aac244b7d1fd317229e25e0b3e10535d82ad8ff96187c1f/pfdicom-1.4.24.tar.gz", "yanked": false}], "1.4.4": [{"comment_text": "", "digests": {"md5": "9551cbb82f85a8d31c3efad682c7a53c", "sha256": "24a581a9324e84f9c4ff8c8ee088427e08560ed08e086d6cd860015917302e5c"}, "downloads": -1, "filename": "pfdicom-1.4.4.tar.gz", "has_sig": false, "md5_digest": "9551cbb82f85a8d31c3efad682c7a53c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10394, "upload_time": "2018-07-31T16:14:23", "upload_time_iso_8601": "2018-07-31T16:14:23.605440Z", "url": "https://files.pythonhosted.org/packages/44/2b/41f09fe3bc0b110039c09eefe613b0a9153b8f6fa442225788f556edd29b/pfdicom-1.4.4.tar.gz", "yanked": false}], "1.4.6": [{"comment_text": "", "digests": {"md5": "2681565a7a844ffd87df879436a68e1f", "sha256": "bb27a56a6474eb76a4c0beefd6bdf7fc5f44e40bb8d339a28f9eead251c50729"}, "downloads": -1, "filename": "pfdicom-1.4.6.tar.gz", "has_sig": false, "md5_digest": "2681565a7a844ffd87df879436a68e1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10472, "upload_time": "2018-07-31T20:19:34", "upload_time_iso_8601": "2018-07-31T20:19:34.915585Z", "url": "https://files.pythonhosted.org/packages/5c/b1/b7fe731153b382d2eff5747c7f9bb3790c869b87e6bd1dd5882686bc93cf/pfdicom-1.4.6.tar.gz", "yanked": false}], "1.4.8": [{"comment_text": "", "digests": {"md5": "923968bfae75d39b34da31525fead71e", "sha256": "043cf7dd8a6568e4ced713a4861aff29c531d24d85cd86eb76398193296cb681"}, "downloads": -1, "filename": "pfdicom-1.4.8.tar.gz", "has_sig": false, "md5_digest": "923968bfae75d39b34da31525fead71e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10481, "upload_time": "2018-08-01T19:04:39", "upload_time_iso_8601": "2018-08-01T19:04:39.048732Z", "url": "https://files.pythonhosted.org/packages/d0/87/2c14e5220eb5cc080ea0fdb02a9957f30b495915edd3bca3d6da36686b93/pfdicom-1.4.8.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "ea43da524f641c4e672ee95e7dc0d26f", "sha256": "b645f7efe574795890cee72a9e6a480f8be67704c3893ba5fd2b52ea92b12f75"}, "downloads": -1, "filename": "pfdicom-1.6.0.tar.gz", "has_sig": false, "md5_digest": "ea43da524f641c4e672ee95e7dc0d26f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10884, "upload_time": "2019-03-15T19:55:07", "upload_time_iso_8601": "2019-03-15T19:55:07.142187Z", "url": "https://files.pythonhosted.org/packages/eb/24/7fe58c48a0a120b7414ca2ba8a6de429ce008b6f7d2c2b29e11629b03ada/pfdicom-1.6.0.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "a57b8269abfcca7887783acd40e4fba4", "sha256": "117f00386b0d484951a0f9a9955d540b515d9d4463c0d1931723b84c033371e8"}, "downloads": -1, "filename": "pfdicom-1.7.0.tar.gz", "has_sig": false, "md5_digest": "a57b8269abfcca7887783acd40e4fba4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13728, "upload_time": "2019-09-30T20:12:03", "upload_time_iso_8601": "2019-09-30T20:12:03.784936Z", "url": "https://files.pythonhosted.org/packages/20/96/5e4326e13d4514137c2913af130a1781624c782a26431e16bea674d758f6/pfdicom-1.7.0.tar.gz", "yanked": false}], "1.7.10": [{"comment_text": "", "digests": {"md5": "95eda2ec3d82c0c66b7c255dfd07dc3e", "sha256": "5226a7564bd42ccc394fa19c55d9c1dee6f064519c46a86d68604d3991a7e6ef"}, "downloads": -1, "filename": "pfdicom-1.7.10.tar.gz", "has_sig": false, "md5_digest": "95eda2ec3d82c0c66b7c255dfd07dc3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14038, "upload_time": "2020-01-08T22:10:44", "upload_time_iso_8601": "2020-01-08T22:10:44.182647Z", "url": "https://files.pythonhosted.org/packages/9b/f0/6a23296ca6d4d6ff5ea02e4a2752061be84971cd1880747abf03f5256287/pfdicom-1.7.10.tar.gz", "yanked": false}], "1.7.2": [{"comment_text": "", "digests": {"md5": "bc00f95881f097e41e0154dbc58e8136", "sha256": "69e9bfb23db54cf82631bdbd0080e55ab7866d8f194f66ad908fcab9866db79d"}, "downloads": -1, "filename": "pfdicom-1.7.2.tar.gz", "has_sig": false, "md5_digest": "bc00f95881f097e41e0154dbc58e8136", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13821, "upload_time": "2019-11-18T20:31:25", "upload_time_iso_8601": "2019-11-18T20:31:25.899327Z", "url": "https://files.pythonhosted.org/packages/f7/dc/cfe5a7ae9f0b6c214933b881beeaa70a96d07002311661cc9245ad77c7e7/pfdicom-1.7.2.tar.gz", "yanked": false}], "1.7.4": [{"comment_text": "", "digests": {"md5": "70ecc91e939716fb1531dc3abdb2788c", "sha256": "d42fa96afbe669e80c9639fb4298410dfebafd236fe57e953b0a1965d6ded501"}, "downloads": -1, "filename": "pfdicom-1.7.4.tar.gz", "has_sig": false, "md5_digest": "70ecc91e939716fb1531dc3abdb2788c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13845, "upload_time": "2019-11-18T21:21:41", "upload_time_iso_8601": "2019-11-18T21:21:41.402640Z", "url": "https://files.pythonhosted.org/packages/22/c0/a5a19103ea04a98e325c0c6ec0feb3fe3610eacacf7b375d9aa91e0ac50d/pfdicom-1.7.4.tar.gz", "yanked": false}], "1.7.6": [{"comment_text": "", "digests": {"md5": "dcd4735d19dd5cbb4e44bc8b8a208f8f", "sha256": "d4fb9bd2e81a1b284efd5c27dc010d5a7982c5d01aa31ac1f5d32ce27dc18047"}, "downloads": -1, "filename": "pfdicom-1.7.6.tar.gz", "has_sig": false, "md5_digest": "dcd4735d19dd5cbb4e44bc8b8a208f8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13859, "upload_time": "2019-11-18T21:27:13", "upload_time_iso_8601": "2019-11-18T21:27:13.416899Z", "url": "https://files.pythonhosted.org/packages/3c/9d/6ae3f1cba5fa9f22300db60e11cacc91e7ec9f477996c6e20bcb6260ab62/pfdicom-1.7.6.tar.gz", "yanked": false}], "1.7.8": [{"comment_text": "", "digests": {"md5": "b07747e70426c2f9792adf8eac4f448a", "sha256": "24af40c651796252368bf28e18ce8e7c0e1e5df01faddf5ff9459a7da76d8f3f"}, "downloads": -1, "filename": "pfdicom-1.7.8.tar.gz", "has_sig": false, "md5_digest": "b07747e70426c2f9792adf8eac4f448a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14032, "upload_time": "2020-01-06T17:08:22", "upload_time_iso_8601": "2020-01-06T17:08:22.604685Z", "url": "https://files.pythonhosted.org/packages/7e/9e/32ecc6cecf7141ac62312fc93155bd7c4a014ab41c2e40d25c4be330e71d/pfdicom-1.7.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "95eda2ec3d82c0c66b7c255dfd07dc3e", "sha256": "5226a7564bd42ccc394fa19c55d9c1dee6f064519c46a86d68604d3991a7e6ef"}, "downloads": -1, "filename": "pfdicom-1.7.10.tar.gz", "has_sig": false, "md5_digest": "95eda2ec3d82c0c66b7c255dfd07dc3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14038, "upload_time": "2020-01-08T22:10:44", "upload_time_iso_8601": "2020-01-08T22:10:44.182647Z", "url": "https://files.pythonhosted.org/packages/9b/f0/6a23296ca6d4d6ff5ea02e4a2752061be84971cd1880747abf03f5256287/pfdicom-1.7.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:58 2020"}