{"info": {"author": "rexs.io", "author_email": "dev@rexs.io", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: ISC License (ISCL)", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries"], "description": "# Blocksec2Go-Ethereum\n\nThis repository contains the source code of `blocksec2go-ethereum` Python package which wraps the `blocksec2go` package to allow easier interaction with Ethereum blockchain.\n\nIf you're unsure what Blockchain Security 2 Go is, [you can find more info here](https://github.com/Infineon/Blockchain).\n\n## Installation\n\n```bash\npip install blocksec2go-ethereum\n```\n\n## Usage\n\nAfter creating an instance of `Blocksec2Go` you can use it to generate signatures for transaction dicts. When passed raw tx, `sign_transaction()` will return a hex string of RLP-encoded signed transaction that can be directly consumed by `web3.eth.sendRawTransaction()`.\n\n### Transfer Ether\n\nBelow you will find an example of signing a simple Ether transfer:\n\n```python\nfrom blocksec2go_ethereum import Blocksec2GoSigner\nfrom web3 import Web3\n\nWEB3_ENDPOINT = 'YOUR_ENDPOINT_HERE'\n\nweb3 = Web3(Web3.HTTPProvider(WEB3_ENDPOINT))\nchain_id = web3.eth.chainId\n\nsigner = Blocksec2GoSigner(chain_id=chain_id, key_id=1)\naddress = signer.get_address()\n\nnonce = web3.eth.getTransactionCount(address)\nraw_tx = {\n    'to': '0xBaBC446aee039E99d624058b0875E519190C6758',\n    'nonce': nonce,\n    'value': Web3.toWei(0.00005, 'ether'),\n    'gas': 21000,\n    'gasPrice': Web3.toWei(5, 'gwei'),\n}\nsigned_tx = signer.sign_transaction(raw_tx)\n\ntx_hash = web3.eth.sendRawTransaction(signed_tx)\nprint(f'Sent transaction with hash: {tx_hash.hex()}')\n```\n\n### Call a contract function\n\nYou can also sign any contract calls/creation transactions by leveraging `buildTransaction()`.\n\nPlease note that for some contracts `buildTransaction()` may require explicitly setting `from` field to properly estimate gas.\n\n```python\nimport json\n\nfrom blocksec2go_ethereum import Blocksec2GoSigner\nfrom web3 import Web3\n\nWEB3_ENDPOINT = 'YOUR_ENDPOINT_HERE'\n\nweb3 = Web3(Web3.HTTPProvider(WEB3_ENDPOINT))\nchain_id = web3.eth.chainId\n\nsigner = Blocksec2GoSigner(chain_id=chain_id, key_id=1)\naddress = signer.get_address()\n\nwith open('artifact.json', 'r') as artifact_file:\n    artifact = json.loads(artifact_file.read())\n    contract = web3.eth.contract(address=artifact['address'], abi=artifact['abi'])\n\nnonce = web3.eth.getTransactionCount(address)\nraw_tx = contract.functions.setValue(42).buildTransaction({'nonce': nonce, 'from': address})\nsigned_tx = signer.sign_transaction(raw_tx)\n\ntx_hash = web3.eth.sendRawTransaction(signed_tx)\nprint(f'Sent transaction with hash: {tx_hash.hex()}')\n``` \n\n## License\nISC \u00a9 2020 rexs.io\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rexs-io/blocksec2go-ethereum", "keywords": "ethereum blocksec2go hardware-signing hardware wallet", "license": "ISC", "maintainer": "", "maintainer_email": "", "name": "blocksec2go-ethereum", "package_url": "https://pypi.org/project/blocksec2go-ethereum/", "platform": "", "project_url": "https://pypi.org/project/blocksec2go-ethereum/", "project_urls": {"Bug Reports": "https://github.com/rexs-io/blocksec2go-ethereum/issues", "Homepage": "https://github.com/rexs-io/blocksec2go-ethereum", "Source": "https://github.com/rexs-io/blocksec2go-ethereum"}, "release_url": "https://pypi.org/project/blocksec2go-ethereum/0.1.0/", "requires_dist": ["blocksec2go (==1.2)", "ecdsa (==0.15)", "web3 (==5.6.0)"], "requires_python": ">=3.0, <4", "summary": "Wrapper for blocksec2go allowing easy hardware-based signing of Ethereum transactions", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Blocksec2Go-Ethereum</h1>\n<p>This repository contains the source code of <code>blocksec2go-ethereum</code> Python package which wraps the <code>blocksec2go</code> package to allow easier interaction with Ethereum blockchain.</p>\n<p>If you're unsure what Blockchain Security 2 Go is, <a href=\"https://github.com/Infineon/Blockchain\" rel=\"nofollow\">you can find more info here</a>.</p>\n<h2>Installation</h2>\n<pre>pip install blocksec2go-ethereum\n</pre>\n<h2>Usage</h2>\n<p>After creating an instance of <code>Blocksec2Go</code> you can use it to generate signatures for transaction dicts. When passed raw tx, <code>sign_transaction()</code> will return a hex string of RLP-encoded signed transaction that can be directly consumed by <code>web3.eth.sendRawTransaction()</code>.</p>\n<h3>Transfer Ether</h3>\n<p>Below you will find an example of signing a simple Ether transfer:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">blocksec2go_ethereum</span> <span class=\"kn\">import</span> <span class=\"n\">Blocksec2GoSigner</span>\n<span class=\"kn\">from</span> <span class=\"nn\">web3</span> <span class=\"kn\">import</span> <span class=\"n\">Web3</span>\n\n<span class=\"n\">WEB3_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"s1\">'YOUR_ENDPOINT_HERE'</span>\n\n<span class=\"n\">web3</span> <span class=\"o\">=</span> <span class=\"n\">Web3</span><span class=\"p\">(</span><span class=\"n\">Web3</span><span class=\"o\">.</span><span class=\"n\">HTTPProvider</span><span class=\"p\">(</span><span class=\"n\">WEB3_ENDPOINT</span><span class=\"p\">))</span>\n<span class=\"n\">chain_id</span> <span class=\"o\">=</span> <span class=\"n\">web3</span><span class=\"o\">.</span><span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">chainId</span>\n\n<span class=\"n\">signer</span> <span class=\"o\">=</span> <span class=\"n\">Blocksec2GoSigner</span><span class=\"p\">(</span><span class=\"n\">chain_id</span><span class=\"o\">=</span><span class=\"n\">chain_id</span><span class=\"p\">,</span> <span class=\"n\">key_id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">signer</span><span class=\"o\">.</span><span class=\"n\">get_address</span><span class=\"p\">()</span>\n\n<span class=\"n\">nonce</span> <span class=\"o\">=</span> <span class=\"n\">web3</span><span class=\"o\">.</span><span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">getTransactionCount</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"p\">)</span>\n<span class=\"n\">raw_tx</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'to'</span><span class=\"p\">:</span> <span class=\"s1\">'0xBaBC446aee039E99d624058b0875E519190C6758'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'nonce'</span><span class=\"p\">:</span> <span class=\"n\">nonce</span><span class=\"p\">,</span>\n    <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"n\">Web3</span><span class=\"o\">.</span><span class=\"n\">toWei</span><span class=\"p\">(</span><span class=\"mf\">0.00005</span><span class=\"p\">,</span> <span class=\"s1\">'ether'</span><span class=\"p\">),</span>\n    <span class=\"s1\">'gas'</span><span class=\"p\">:</span> <span class=\"mi\">21000</span><span class=\"p\">,</span>\n    <span class=\"s1\">'gasPrice'</span><span class=\"p\">:</span> <span class=\"n\">Web3</span><span class=\"o\">.</span><span class=\"n\">toWei</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">'gwei'</span><span class=\"p\">),</span>\n<span class=\"p\">}</span>\n<span class=\"n\">signed_tx</span> <span class=\"o\">=</span> <span class=\"n\">signer</span><span class=\"o\">.</span><span class=\"n\">sign_transaction</span><span class=\"p\">(</span><span class=\"n\">raw_tx</span><span class=\"p\">)</span>\n\n<span class=\"n\">tx_hash</span> <span class=\"o\">=</span> <span class=\"n\">web3</span><span class=\"o\">.</span><span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">sendRawTransaction</span><span class=\"p\">(</span><span class=\"n\">signed_tx</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Sent transaction with hash: </span><span class=\"si\">{</span><span class=\"n\">tx_hash</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<h3>Call a contract function</h3>\n<p>You can also sign any contract calls/creation transactions by leveraging <code>buildTransaction()</code>.</p>\n<p>Please note that for some contracts <code>buildTransaction()</code> may require explicitly setting <code>from</code> field to properly estimate gas.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">blocksec2go_ethereum</span> <span class=\"kn\">import</span> <span class=\"n\">Blocksec2GoSigner</span>\n<span class=\"kn\">from</span> <span class=\"nn\">web3</span> <span class=\"kn\">import</span> <span class=\"n\">Web3</span>\n\n<span class=\"n\">WEB3_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"s1\">'YOUR_ENDPOINT_HERE'</span>\n\n<span class=\"n\">web3</span> <span class=\"o\">=</span> <span class=\"n\">Web3</span><span class=\"p\">(</span><span class=\"n\">Web3</span><span class=\"o\">.</span><span class=\"n\">HTTPProvider</span><span class=\"p\">(</span><span class=\"n\">WEB3_ENDPOINT</span><span class=\"p\">))</span>\n<span class=\"n\">chain_id</span> <span class=\"o\">=</span> <span class=\"n\">web3</span><span class=\"o\">.</span><span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">chainId</span>\n\n<span class=\"n\">signer</span> <span class=\"o\">=</span> <span class=\"n\">Blocksec2GoSigner</span><span class=\"p\">(</span><span class=\"n\">chain_id</span><span class=\"o\">=</span><span class=\"n\">chain_id</span><span class=\"p\">,</span> <span class=\"n\">key_id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">signer</span><span class=\"o\">.</span><span class=\"n\">get_address</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'artifact.json'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">artifact_file</span><span class=\"p\">:</span>\n    <span class=\"n\">artifact</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">artifact_file</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n    <span class=\"n\">contract</span> <span class=\"o\">=</span> <span class=\"n\">web3</span><span class=\"o\">.</span><span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">contract</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"n\">artifact</span><span class=\"p\">[</span><span class=\"s1\">'address'</span><span class=\"p\">],</span> <span class=\"n\">abi</span><span class=\"o\">=</span><span class=\"n\">artifact</span><span class=\"p\">[</span><span class=\"s1\">'abi'</span><span class=\"p\">])</span>\n\n<span class=\"n\">nonce</span> <span class=\"o\">=</span> <span class=\"n\">web3</span><span class=\"o\">.</span><span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">getTransactionCount</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"p\">)</span>\n<span class=\"n\">raw_tx</span> <span class=\"o\">=</span> <span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">functions</span><span class=\"o\">.</span><span class=\"n\">setValue</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">buildTransaction</span><span class=\"p\">({</span><span class=\"s1\">'nonce'</span><span class=\"p\">:</span> <span class=\"n\">nonce</span><span class=\"p\">,</span> <span class=\"s1\">'from'</span><span class=\"p\">:</span> <span class=\"n\">address</span><span class=\"p\">})</span>\n<span class=\"n\">signed_tx</span> <span class=\"o\">=</span> <span class=\"n\">signer</span><span class=\"o\">.</span><span class=\"n\">sign_transaction</span><span class=\"p\">(</span><span class=\"n\">raw_tx</span><span class=\"p\">)</span>\n\n<span class=\"n\">tx_hash</span> <span class=\"o\">=</span> <span class=\"n\">web3</span><span class=\"o\">.</span><span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">sendRawTransaction</span><span class=\"p\">(</span><span class=\"n\">signed_tx</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Sent transaction with hash: </span><span class=\"si\">{</span><span class=\"n\">tx_hash</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<h2>License</h2>\n<p>ISC \u00a9 2020 rexs.io</p>\n\n          </div>"}, "last_serial": 6724393, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "de5b3aa2034e5322ab07cdd2a33801a9", "sha256": "c0019addf72ed0d0a505c784c44aa62536eb90e65d3f00120a9628dd92f57ec1"}, "downloads": -1, "filename": "blocksec2go_ethereum-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "de5b3aa2034e5322ab07cdd2a33801a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0, <4", "size": 5434, "upload_time": "2020-02-29T13:45:04", "upload_time_iso_8601": "2020-02-29T13:45:04.511464Z", "url": "https://files.pythonhosted.org/packages/07/1b/6d2af97ea68adcb469fa1a285a031391a5cc1960f0f546bef7a3eb0f8a2a/blocksec2go_ethereum-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cba69849b125043d3acb2962d92e1bae", "sha256": "28ba2c2ec2907c7de5c2325648a5cad400085249afbd04d3008e040bae2c357e"}, "downloads": -1, "filename": "blocksec2go-ethereum-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cba69849b125043d3acb2962d92e1bae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0, <4", "size": 4509, "upload_time": "2020-02-29T13:45:07", "upload_time_iso_8601": "2020-02-29T13:45:07.108040Z", "url": "https://files.pythonhosted.org/packages/0e/e2/6336601b4142dceb90540f8629b26c62b99ab328c92240bef08c1227937d/blocksec2go-ethereum-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "de5b3aa2034e5322ab07cdd2a33801a9", "sha256": "c0019addf72ed0d0a505c784c44aa62536eb90e65d3f00120a9628dd92f57ec1"}, "downloads": -1, "filename": "blocksec2go_ethereum-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "de5b3aa2034e5322ab07cdd2a33801a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0, <4", "size": 5434, "upload_time": "2020-02-29T13:45:04", "upload_time_iso_8601": "2020-02-29T13:45:04.511464Z", "url": "https://files.pythonhosted.org/packages/07/1b/6d2af97ea68adcb469fa1a285a031391a5cc1960f0f546bef7a3eb0f8a2a/blocksec2go_ethereum-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cba69849b125043d3acb2962d92e1bae", "sha256": "28ba2c2ec2907c7de5c2325648a5cad400085249afbd04d3008e040bae2c357e"}, "downloads": -1, "filename": "blocksec2go-ethereum-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cba69849b125043d3acb2962d92e1bae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0, <4", "size": 4509, "upload_time": "2020-02-29T13:45:07", "upload_time_iso_8601": "2020-02-29T13:45:07.108040Z", "url": "https://files.pythonhosted.org/packages/0e/e2/6336601b4142dceb90540f8629b26c62b99ab328c92240bef08c1227937d/blocksec2go-ethereum-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:02 2020"}