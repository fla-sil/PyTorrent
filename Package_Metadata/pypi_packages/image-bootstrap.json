{"info": {"author": "Sebastian Pipping", "author_email": "sebastian@pipping.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: OpenStack", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: System :: Installation/Setup", "Topic :: Utilities"], "description": "[![Build Status](https://travis-ci.org/hartwork/image-bootstrap.svg?branch=master)](https://travis-ci.org/hartwork/image-bootstrap)\n\n**Table of Contents**\n\n* [About](#About)\n* [History](#History)\n* [Example run](#ExampleRun)\n* [Speeding things up](#SpeedingThingsUp)\n    * [Using RAM instead of HDD/SSD](#UsingRamInsteadOfDisk)\n    * [Apt-Cacher NG -- a cache specific to Debian/Ubuntu](#AptCacherNG)\n    * [Polipo -- a generic HTTP cache](#Polipo)\n    * [haveged -- an entropy generator](#haveged)\n* [Debian package](#DebianPackage)\n* [Usage (`--help` output)](#HelpOutput)\n* [Hints on using image-bootstrap within a pipe](#Piping)\n* [Known limitations](#KnownLimitations)\n    * [Installing Debian wheezy to loop devices](#DebianWheezyLoopDevice)\n    * [Installing to partition block devices](#PartitionBlockTarget)\n\n\n<a name=\"About\"></a>\n# About\n\nWelcome to the home of **image-bootstrap** (and its little brother **directory-bootstrap**).\n\n**image-bootstrap** is a command line tool to generate bootable virtual machine images\nand write them to a given _block device_.<br>\nLinux distributions supported by **image-bootstrap** currently include:\nArch, Debian, Gentoo, Ubuntu.<br>\nWhen passing the `--openstack` parameter, images are\n[prepared for use with OpenStack](http://docs.openstack.org/image-guide/content/ch_openstack_images.html).\n\n**directory-bootstrap** is a command line tool to install non-Debian Linux distributions\ninto a given _directory_ (similar to [debootstrap](https://wiki.debian.org/Debootstrap)\nfor Debian/Ubuntu).<br>\nDistributions supported by **directory-bootstrap** currently include:\nAlpine Linux, Arch Linux, CentOS (up to 7.x), Fedora, Gentoo, and Void Linux.\n\n\n<a name=\"History\"></a>\n# History\n\n**image-bootstrap** started out as a re-write of\n[grml-debootstrap](https://github.com/grml/grml-debootstrap).\nPrimarily, it can be used to create Debian/Ubuntu or Arch images ready to be launched as a virtual machine.\n\nIn comparision to grml-debootstrap, by now **image-bootstrap**\n\n * installs to block devices only,\n\n * supports several approaches to installing GRUB 2.x, or extlinux, or no bootloader at all,\n\n * does not leak the host's hostname into the resulting image,\n\n * supports passing the root password off the command-line\n   (and the eyes of other users and shell history),\n\n * supports using a custom `/etc/resolv.conf` file\n   (e.g. to not leak your home router model name from `/etc/resolv.conf` into the image),\n\n * has support for installing Arch Linux, Gentoo and Ubuntu (besides Debian),\n\n * is able to create\n   [OpenStack images](http://docs.openstack.org/image-guide/content/ch_openstack_images.html),\n\n * is written in Python rather than Bash/mksh, and\n\n * has more friendly terminal output.\n\n**directory-bootstrap** came into life with the arrival of support for Arch Linux.\nSupport for Gentoo followed, after.\nSupport for Fedora chroots came into live during 33c3, late December 2016.\nSupport for Void Linux and CentOS chroots came into live during 34c3, December 2017.\nSupport for Alpine Linux chroots came into in March 2018.\n\n\n<a name=\"ExampleRun\"></a>\n# Example run\n\nThe following is a complete demo of installing Debian jessie to LVM volume `/dev/vg/lv`\nand launching the resulting image using KVM.\n\n```console\n# ${EDITOR} root_password.txt\n\n# sudo image-bootstrap --hostname jessie debian \\\n                                  --password-file root_password.txt /dev/vg/lv\n     _                          __             __      __\n    (_)_ _  ___ ____ ____  ___ / /  ___  ___  / /____ / /________ ____\n   / /  ' \\/ _ `/ _ `/ -_)/__// _ \\/ _ \\/ _ \\/ __(_-</ __/ __/ _ `/ _ \\\n  /_/_/_/_/\\_,_/\\_, /\\__/    /_.__/\\___/\\___/\\__/___/\\__/_/  \\_,_/ .__/\n               /___/                      v0.9.1 :: 2015-07-11  /_/\n\nSoftware libre licensed under AGPL v3 or later.\nBrought to you by Sebastian Pipping <sebastian@pipping.org>.\nPlease report bugs at https://github.com/hartwork/image-bootstrap.  Thank you!\n\nSelected approach \"chroot-grub2-drive\" for bootloader installation.\nChecking for blkid... /sbin/blkid\nChecking for chmod... /bin/chmod\nChecking for chroot... /usr/sbin/chroot\nChecking for cp... /bin/cp\nChecking for debootstrap... /usr/sbin/debootstrap\nChecking for find... /usr/bin/find\nChecking for kpartx... /sbin/kpartx\nChecking for mkdir... /bin/mkdir\nChecking for mkfs.ext4... /sbin/mkfs.ext4\nChecking for mount... /bin/mount\nChecking for parted... /sbin/parted\nChecking for partprobe... /sbin/partprobe\nChecking for rm... /bin/rm\nChecking for rmdir... /bin/rmdir\nChecking for sed... /bin/sed\nChecking for tune2fs... /sbin/tune2fs\nChecking for umount... /bin/umount\nChecking for uname... /bin/uname\nChecking for unshare... /usr/bin/unshare\n\nChecking for known unsupported architecture/machine combination...\nChecking if \"/dev/vg/lv\" is a block device...\nReading root password from file \"/home/user1/root_password.txt\"...\nUnsharing Linux namespaces (mount, UTS/hostname)...\nPartitioning \"/dev/vg/lv\"...\nActivating partition devices...\nCreating file system on \"/dev/mapper/vg-lvp1\"...\nCreating directory \"/mnt/tmpFczeFl\"...\nMounting partitions...\nCreating directory \"/mnt/tmpFczeFl/etc\"...\nWriting file \"/mnt/tmpFczeFl/etc/hostname\"...\nWriting file \"/mnt/tmpFczeFl/etc/resolv.conf\" (based on file \"/etc/resolv.conf\")...\nBootstrapping Debian \"jessie\" into \"/mnt/tmpFczeFl\"...\nWriting file \"/mnt/tmpFczeFl/etc/hostname\"...\nWriting file \"/mnt/tmpFczeFl/etc/resolv.conf\" (based on file \"/etc/resolv.conf\")...\nWriting file \"/mnt/tmpFczeFl/etc/fstab\"...\nWriting file \"/mnt/tmpFczeFl/etc/network/interfaces\"...\nRunning pre-chroot scripts...\nMounting non-disk file systems...\nSetting root password...\nWriting device map to \"/mnt/tmpFczeFl/boot/grub/device.map\" (mapping \"(hd9999)\" to \"/dev/dm-8\")...\nInstalling bootloader to device \"/dev/vg/lv\" (actually \"/dev/dm-8\", approach \"chroot-grub2-drive\")...\nGenerating GRUB configuration...\nPost-processing GRUB config...\nGenerating initramfs...\nUnmounting non-disk file systems...\nCleaning chroot apt cache...\nRunning post-chroot scripts...\nUnmounting partitions...\nRemoving directory \"/mnt/tmpFczeFl\"...\nDeactivating partition devices...\nDone.\n\n# sudo kvm -hda /dev/vg/lv\n```\n\nWithout `--color never`, the output above is actually in color.\n\n\n<a name=\"SpeedingThingsUp\"></a>\n# Speeding things up\n\n\n<a name=\"UsingRamInsteadOfDisk\"></a>\n## Using RAM instead of HDD/SSD\n\nIf you run **image-bootstrap** repeatedly and have enough RAM, you may want to\ncreate images on RAM storage rather than on disk.  I use a setup with\n\n * a loop device (to have a block device)\n\n * over a sparse file (to save space)\n\n * in a tmpfs mount (to use RAM).\n\nFor example (assuming you have /tmp in RAM already):\n\n```console\n# sudo mount -o remout,size=6g /tmp\n# truncate --size 3g /tmp/disk3g\n# LOOP_DEVICE=\"$(losetup --show -f /tmp/disk3g)\"\n\n# image-bootstrap .... arch ... \"${LOOP_DEVICE}\"\n# qemu-img convert -p -f raw -O qcow2 \"${LOOP_DEVICE}\" /var/lib/arch-$(date -I).qcow2\n\n# losetup -d \"${LOOP_DEVICE}\"\n# rm /tmp/disk3g\n```\n\n\n<a name=\"AptCacherNG\"></a>\n## Apt-Cacher NG -- a cache specific to Debian/Ubuntu\n\nWhen creating multiple images,\na local instance of [Apt-Cacher NG](https://www.unix-ag.uni-kl.de/~bloch/acng/) and\npassing `--mirror http://localhost:3142/debian` to **image-bootstrap** may come in handy.\n\n<a name=\"Polipo\"></a>\n## Polipo -- a generic HTTP cache\n\nFor a distribution-agnostic cache, using\n[Polipo](https://github.com/jech/polipo) can greatly speed up consecutive runs.\nInvoke **image-bootstrap** with\n\n```console\n# http_proxy=http://127.0.0.1:8123/ image-bootstrap ...\n```\n\nwhen using Polipo with default port configuration.\n\n<a name=\"haveged\"></a>\n## haveged -- an entropy generator\n\nDuring image creation, cryptographic keys may need to be generated, e.g.\nfor thr OpenSSH server, at least temporarily.  As key generation relies\non availability of entropy, image creation may take longer in environments that\nare slow at adding to the entropy pool.\nTo speed things up, running [haveged](http://www.issihosts.com/haveged/)\nat the host system _could_ be an option, especially since all keys should be deleted\nfrom images, eventually. Otherwise, there is a risk of ending up with multiple\nsystems having the same key allowing for attacks.\nI am unsure of the quality of entropy that haveged produces.  Use is at your own risk.\n\n\n<a name=\"DebianPackage\"></a>\n# Debian package\n\nAs long as **image-bootstrap** as not available _in_ Debian, you can\nmake an **image-bootstrap** Debian package yourself easily from Git as follows:\n\n```console\n# git clone https://github.com/hartwork/image-bootstrap.git\nCloning into 'image-bootstrap'...\n[..]\n\n# make -C image-bootstrap/ deb\n[..]\n\n# ls *.deb\nimage-bootstrap_0.9.1_all.deb\n\n# sudo dpkg -i image-bootstrap_0.9.1_all.deb\n[..]\n```\n\n\n<a name=\"HelpOutput\"></a>\n# Usage (`--help` output)\n\nIn general, the usage is:\n\n```console\nimage-bootstrap [..] DISTRIBUTION [..] DEVICE\n```\n\nor\n\n```console\nimage-bootstrap --hostname NAME [DISTRO_AGNOSTIC] DISTRIBUTION [DISTRO_SPECIFIC] DEVICE\n```\n\nin a bit more detail.\n\n\nA dump of the current `--help` output would be:\n```console\n# image-bootstrap --help\nusage: image-bootstrap [-h] [--version] [--color {never,always,auto}]\n                       [--debug] [--quiet] [--verbose] [--arch ARCHITECTURE]\n                       [--bootloader {auto,chroot-grub2-device,chroot-grub2-drive,host-extlinux,host-grub2-device,host-grub2-drive,none}]\n                       [--bootloader-force] [--hostname NAME] [--openstack]\n                       [--password PASSWORD | --password-file FILE]\n                       [--resolv-conf FILE] [--disk-id ID]\n                       [--first-partition-uuid UUID] [--machine-id ID]\n                       [--scripts-pre DIRECTORY] [--scripts-chroot DIRECTORY]\n                       [--scripts-post DIRECTORY] [--grub2-install COMMAND]\n                       [--cache-dir DIRECTORY]\n                       DISTRIBUTION ... DEVICE\n\nCommand line tool for creating bootable virtual machine images\n\npositional arguments:\n  DEVICE                block device to install to\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n\ntext output configuration:\n  --color {never,always,auto}\n                        toggle output color (default: auto)\n  --debug               enable debugging\n  --quiet               limit output to error messages\n  --verbose             increase verbosity\n\nmachine configuration:\n  --arch ARCHITECTURE   architecture (e.g. amd64)\n  --bootloader {auto,chroot-grub2-device,chroot-grub2-drive,host-extlinux,host-grub2-device,host-grub2-drive,none}\n                        approach to take during bootloader installation\n                        (default: auto)\n  --bootloader-force    apply more force when installing bootloader (default:\n                        disabled)\n  --hostname NAME       hostname to set (default: \"machine\")\n  --openstack           prepare for use with OpenStack (default: disabled)\n  --password PASSWORD   root password to set (default: password log-in\n                        disabled)\n  --password-file FILE  file to read root password from (default: password\n                        log-in disabled)\n  --resolv-conf FILE    file to copy nameserver entries from (default:\n                        /etc/resolv.conf)\n  --disk-id ID          specific disk identifier to apply, e.g. 0x12345678\n  --first-partition-uuid UUID\n                        specific UUID to apply to first partition, e.g.\n                        c1b9d5a2-f162-11cf-9ece-0020afc76f16\n  --machine-id ID       specific machine identifier to apply, e.g.\n                        c1b9d5a2f16211cf9ece0020afc76f16\n\nscript integration:\n  --scripts-pre DIRECTORY\n                        scripts to run prior to chrooting phase, in\n                        alphabetical order\n  --scripts-chroot DIRECTORY\n                        scripts to run during chrooting phase, in alphabetical\n                        order\n  --scripts-post DIRECTORY\n                        scripts to run after chrooting phase, in alphabetical\n                        order\n\ncommand names:\n  --grub2-install COMMAND\n                        override grub2-install command\n\ngeneral configuration:\n  --cache-dir DIRECTORY\n                        directory to use for downloads (default:\n                        /var/cache/directory-bootstrap/)\n\nsubcommands (choice of distribution):\n  Run \"image-bootstrap DISTRIBUTION --help\" for details on options specific to that distribution.\n\n  DISTRIBUTION          choice of distribution, pick from:\n    arch                Arch Linux\n    debian              Debian GNU/Linux\n    gentoo              Gentoo\n    ubuntu              Ubuntu\n\n     _                          __             __      __\n    (_)_ _  ___ ____ ____  ___ / /  ___  ___  / /____ / /________ ____\n   / /  ' \\/ _ `/ _ `/ -_)/__// _ \\/ _ \\/ _ \\/ __(_-</ __/ __/ _ `/ _ \\\n  /_/_/_/_/\\_,_/\\_, /\\__/    /_.__/\\___/\\___/\\__/___/\\__/_/  \\_,_/ .__/\n               /___/                      v2.0.0 :: 2020-02-28  /_/\n\nSoftware libre licensed under AGPL v3 or later.\nBrought to you by Sebastian Pipping <sebastian@pipping.org>.\nPlease report bugs at https://github.com/hartwork/image-bootstrap.  Thank you!\n```\n\nTo show options specific to Debian, run ..\n\n```console\n# image-bootstrap debian --help\nusage: image-bootstrap debian [-h] [--debootstrap COMMAND] [--release RELEASE]\n                              [--mirror URL] [--debootstrap-opt OPTION]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --release RELEASE     specify Debian release (default: jessie)\n  --mirror URL          specify Debian mirror to use (e.g.\n                        http://localhost:3142/debian for a local instance of\n                        apt-cacher-ng; default:\n                        http://httpredir.debian.org/debian)\n  --debootstrap-opt OPTION\n                        option to pass to debootstrap, in addition; can be\n                        passed several times; use with --debootstrap-opt=...\n                        syntax, i.e. with \"=\"\n\ncommand names:\n  --debootstrap COMMAND\n                        override debootstrap command\n```\n\n\n<a name=\"Piping\"></a>\n# Hints on using image-bootstrap within a pipe\n\nIf you want to run **image-bootstrap** in a pipe to capture its output to both\n`stdout`/`stderr` to a single log file, be sure to run **image-bootstrap** in\nunbuffered mode, e.g.:\n\n```console\npython -u image-bootstrap [OPTIONS] 2>&1 | tee my.log\n```\n\nThe default shebang generated by python setuptools does not use `-u`. It's also\nnot easily possible to have it pass `-u` since the `env` command does allow for\nfor passing command parameters only in fairly recent versions. As a consequence,\n`stdout`/`stderr` won't be synchronized and error output you see in a log file\nwill not exactly correspond to preceding/succeeding output on `stdout`. (See\n[issue #71](https://github.com/hartwork/image-bootstrap/issues/71) for more details.)\n\nMoreover, if you're using Bash and you need to keep track of\n**image-bootstrap**'s exit code, be sure to run `set -o pipefail` prior to\ninvoking **image-bootstrap**.\n(Please see the\n[Pipelines](https://www.gnu.org/software/bash/manual/html_node/Pipelines.html)\nsection of the\n[GNU Bash Reference Manual](https://www.gnu.org/software/bash/manual/html_node/index.html)\nfor more details.)\n\n\n<a name=\"KnownLimitations\"></a>\n# Known limitations\n\n\n<a name=\"PartitionBlockTarget\"></a>\n## Installing Debian _wheezy_ to loop devices\n\nGRUB 1.99 has trouble installing to loop devices.\nAs a result, using **image-bootstrap** to install e.g. Debian _wheezy_ to a loop device\nrequires\n\n . bootloader approach `host-grub2-device` or `host-grub2-drive` and\n\n . a more recent version of GRUB 2.x on the system running **image-bootstrap**.\n\n\n<a name=\"DebianWheezyLoopDevice\"></a>\n## Installing to partition block devices\n\nLinux does not like partitions in partitions much.\nIt can be tricked using device mapper, though.\n\nThis is how to install to a partition using another partition as a temporary target.\nThe temporary target must\n\n * be 2 GiB in space or more (to hold the whole distribution) and\n\n * smaller or equal than the actualy target (for the later copy to work).\n\n```console\n# dmsetup create dm-linear-vda4 --table \"0 $(blockdev --getsz /dev/vda4) linear /dev/vda4 0\"\n# image-bootstrap --openstack arch /dev/mapper/dm-linear-vda4\n# partprobe /dev/mapper/dm-linear-vda4\n# pv /dev/mapper/dm-linear-vda4p1 > /dev/vda2\n# dmsetup remove dm-linear-vda4p1\n# dmsetup remove dm-linear-vda4\n```\n\n(`/dev/vda2` is the real target, `/dev/vda4` the temporary one.)\n\nThere are other ways to achieve the same.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hartwork/image-bootstrap", "keywords": "", "license": "AGPL v3 or later", "maintainer": "", "maintainer_email": "", "name": "image-bootstrap", "package_url": "https://pypi.org/project/image-bootstrap/", "platform": "", "project_url": "https://pypi.org/project/image-bootstrap/", "project_urls": {"Homepage": "https://github.com/hartwork/image-bootstrap"}, "release_url": "https://pypi.org/project/image-bootstrap/2.0.3/", "requires_dist": ["beautifulsoup4", "colorama", "lxml", "requests", "setuptools", "PyYAML"], "requires_python": ">=3.6", "summary": "Command line tool for creating bootable virtual machine images", "version": "2.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/hartwork/image-bootstrap\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/027524d2da7b868670df3353d5871936c4887d0d/68747470733a2f2f7472617669732d63692e6f72672f68617274776f726b2f696d6167652d626f6f7473747261702e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><strong>Table of Contents</strong></p>\n<ul>\n<li><a href=\"#About\" rel=\"nofollow\">About</a></li>\n<li><a href=\"#History\" rel=\"nofollow\">History</a></li>\n<li><a href=\"#ExampleRun\" rel=\"nofollow\">Example run</a></li>\n<li><a href=\"#SpeedingThingsUp\" rel=\"nofollow\">Speeding things up</a>\n<ul>\n<li><a href=\"#UsingRamInsteadOfDisk\" rel=\"nofollow\">Using RAM instead of HDD/SSD</a></li>\n<li><a href=\"#AptCacherNG\" rel=\"nofollow\">Apt-Cacher NG -- a cache specific to Debian/Ubuntu</a></li>\n<li><a href=\"#Polipo\" rel=\"nofollow\">Polipo -- a generic HTTP cache</a></li>\n<li><a href=\"#haveged\" rel=\"nofollow\">haveged -- an entropy generator</a></li>\n</ul>\n</li>\n<li><a href=\"#DebianPackage\" rel=\"nofollow\">Debian package</a></li>\n<li><a href=\"#HelpOutput\" rel=\"nofollow\">Usage (<code>--help</code> output)</a></li>\n<li><a href=\"#Piping\" rel=\"nofollow\">Hints on using image-bootstrap within a pipe</a></li>\n<li><a href=\"#KnownLimitations\" rel=\"nofollow\">Known limitations</a>\n<ul>\n<li><a href=\"#DebianWheezyLoopDevice\" rel=\"nofollow\">Installing Debian wheezy to loop devices</a></li>\n<li><a href=\"#PartitionBlockTarget\" rel=\"nofollow\">Installing to partition block devices</a></li>\n</ul>\n</li>\n</ul>\n<p><a></a></p>\n<h1>About</h1>\n<p>Welcome to the home of <strong>image-bootstrap</strong> (and its little brother <strong>directory-bootstrap</strong>).</p>\n<p><strong>image-bootstrap</strong> is a command line tool to generate bootable virtual machine images\nand write them to a given <em>block device</em>.<br>\nLinux distributions supported by <strong>image-bootstrap</strong> currently include:\nArch, Debian, Gentoo, Ubuntu.<br>\nWhen passing the <code>--openstack</code> parameter, images are\n<a href=\"http://docs.openstack.org/image-guide/content/ch_openstack_images.html\" rel=\"nofollow\">prepared for use with OpenStack</a>.</p>\n<p><strong>directory-bootstrap</strong> is a command line tool to install non-Debian Linux distributions\ninto a given <em>directory</em> (similar to <a href=\"https://wiki.debian.org/Debootstrap\" rel=\"nofollow\">debootstrap</a>\nfor Debian/Ubuntu).<br>\nDistributions supported by <strong>directory-bootstrap</strong> currently include:\nAlpine Linux, Arch Linux, CentOS (up to 7.x), Fedora, Gentoo, and Void Linux.</p>\n<p><a></a></p>\n<h1>History</h1>\n<p><strong>image-bootstrap</strong> started out as a re-write of\n<a href=\"https://github.com/grml/grml-debootstrap\" rel=\"nofollow\">grml-debootstrap</a>.\nPrimarily, it can be used to create Debian/Ubuntu or Arch images ready to be launched as a virtual machine.</p>\n<p>In comparision to grml-debootstrap, by now <strong>image-bootstrap</strong></p>\n<ul>\n<li>\n<p>installs to block devices only,</p>\n</li>\n<li>\n<p>supports several approaches to installing GRUB 2.x, or extlinux, or no bootloader at all,</p>\n</li>\n<li>\n<p>does not leak the host's hostname into the resulting image,</p>\n</li>\n<li>\n<p>supports passing the root password off the command-line\n(and the eyes of other users and shell history),</p>\n</li>\n<li>\n<p>supports using a custom <code>/etc/resolv.conf</code> file\n(e.g. to not leak your home router model name from <code>/etc/resolv.conf</code> into the image),</p>\n</li>\n<li>\n<p>has support for installing Arch Linux, Gentoo and Ubuntu (besides Debian),</p>\n</li>\n<li>\n<p>is able to create\n<a href=\"http://docs.openstack.org/image-guide/content/ch_openstack_images.html\" rel=\"nofollow\">OpenStack images</a>,</p>\n</li>\n<li>\n<p>is written in Python rather than Bash/mksh, and</p>\n</li>\n<li>\n<p>has more friendly terminal output.</p>\n</li>\n</ul>\n<p><strong>directory-bootstrap</strong> came into life with the arrival of support for Arch Linux.\nSupport for Gentoo followed, after.\nSupport for Fedora chroots came into live during 33c3, late December 2016.\nSupport for Void Linux and CentOS chroots came into live during 34c3, December 2017.\nSupport for Alpine Linux chroots came into in March 2018.</p>\n<p><a></a></p>\n<h1>Example run</h1>\n<p>The following is a complete demo of installing Debian jessie to LVM volume <code>/dev/vg/lv</code>\nand launching the resulting image using KVM.</p>\n<pre><span class=\"gp\">#</span> <span class=\"si\">${</span><span class=\"nv\">EDITOR</span><span class=\"si\">}</span> root_password.txt\n\n<span class=\"gp\">#</span> sudo image-bootstrap --hostname jessie debian <span class=\"se\">\\</span>\n                                  --password-file root_password.txt /dev/vg/lv\n<span class=\"go\">     _                          __             __      __</span>\n<span class=\"go\">    (_)_ _  ___ ____ ____  ___ / /  ___  ___  / /____ / /________ ____</span>\n<span class=\"go\">   / /  ' \\/ _ `/ _ `/ -_)/__// _ \\/ _ \\/ _ \\/ __(_-&lt;/ __/ __/ _ `/ _ \\</span>\n<span class=\"go\">  /_/_/_/_/\\_,_/\\_, /\\__/    /_.__/\\___/\\___/\\__/___/\\__/_/  \\_,_/ .__/</span>\n<span class=\"go\">               /___/                      v0.9.1 :: 2015-07-11  /_/</span>\n\n<span class=\"go\">Software libre licensed under AGPL v3 or later.</span>\n<span class=\"go\">Brought to you by Sebastian Pipping &lt;sebastian@pipping.org&gt;.</span>\n<span class=\"go\">Please report bugs at https://github.com/hartwork/image-bootstrap.  Thank you!</span>\n\n<span class=\"go\">Selected approach \"chroot-grub2-drive\" for bootloader installation.</span>\n<span class=\"go\">Checking for blkid... /sbin/blkid</span>\n<span class=\"go\">Checking for chmod... /bin/chmod</span>\n<span class=\"go\">Checking for chroot... /usr/sbin/chroot</span>\n<span class=\"go\">Checking for cp... /bin/cp</span>\n<span class=\"go\">Checking for debootstrap... /usr/sbin/debootstrap</span>\n<span class=\"go\">Checking for find... /usr/bin/find</span>\n<span class=\"go\">Checking for kpartx... /sbin/kpartx</span>\n<span class=\"go\">Checking for mkdir... /bin/mkdir</span>\n<span class=\"go\">Checking for mkfs.ext4... /sbin/mkfs.ext4</span>\n<span class=\"go\">Checking for mount... /bin/mount</span>\n<span class=\"go\">Checking for parted... /sbin/parted</span>\n<span class=\"go\">Checking for partprobe... /sbin/partprobe</span>\n<span class=\"go\">Checking for rm... /bin/rm</span>\n<span class=\"go\">Checking for rmdir... /bin/rmdir</span>\n<span class=\"go\">Checking for sed... /bin/sed</span>\n<span class=\"go\">Checking for tune2fs... /sbin/tune2fs</span>\n<span class=\"go\">Checking for umount... /bin/umount</span>\n<span class=\"go\">Checking for uname... /bin/uname</span>\n<span class=\"go\">Checking for unshare... /usr/bin/unshare</span>\n\n<span class=\"go\">Checking for known unsupported architecture/machine combination...</span>\n<span class=\"go\">Checking if \"/dev/vg/lv\" is a block device...</span>\n<span class=\"go\">Reading root password from file \"/home/user1/root_password.txt\"...</span>\n<span class=\"go\">Unsharing Linux namespaces (mount, UTS/hostname)...</span>\n<span class=\"go\">Partitioning \"/dev/vg/lv\"...</span>\n<span class=\"go\">Activating partition devices...</span>\n<span class=\"go\">Creating file system on \"/dev/mapper/vg-lvp1\"...</span>\n<span class=\"go\">Creating directory \"/mnt/tmpFczeFl\"...</span>\n<span class=\"go\">Mounting partitions...</span>\n<span class=\"go\">Creating directory \"/mnt/tmpFczeFl/etc\"...</span>\n<span class=\"go\">Writing file \"/mnt/tmpFczeFl/etc/hostname\"...</span>\n<span class=\"go\">Writing file \"/mnt/tmpFczeFl/etc/resolv.conf\" (based on file \"/etc/resolv.conf\")...</span>\n<span class=\"go\">Bootstrapping Debian \"jessie\" into \"/mnt/tmpFczeFl\"...</span>\n<span class=\"go\">Writing file \"/mnt/tmpFczeFl/etc/hostname\"...</span>\n<span class=\"go\">Writing file \"/mnt/tmpFczeFl/etc/resolv.conf\" (based on file \"/etc/resolv.conf\")...</span>\n<span class=\"go\">Writing file \"/mnt/tmpFczeFl/etc/fstab\"...</span>\n<span class=\"go\">Writing file \"/mnt/tmpFczeFl/etc/network/interfaces\"...</span>\n<span class=\"go\">Running pre-chroot scripts...</span>\n<span class=\"go\">Mounting non-disk file systems...</span>\n<span class=\"go\">Setting root password...</span>\n<span class=\"go\">Writing device map to \"/mnt/tmpFczeFl/boot/grub/device.map\" (mapping \"(hd9999)\" to \"/dev/dm-8\")...</span>\n<span class=\"go\">Installing bootloader to device \"/dev/vg/lv\" (actually \"/dev/dm-8\", approach \"chroot-grub2-drive\")...</span>\n<span class=\"go\">Generating GRUB configuration...</span>\n<span class=\"go\">Post-processing GRUB config...</span>\n<span class=\"go\">Generating initramfs...</span>\n<span class=\"go\">Unmounting non-disk file systems...</span>\n<span class=\"go\">Cleaning chroot apt cache...</span>\n<span class=\"go\">Running post-chroot scripts...</span>\n<span class=\"go\">Unmounting partitions...</span>\n<span class=\"go\">Removing directory \"/mnt/tmpFczeFl\"...</span>\n<span class=\"go\">Deactivating partition devices...</span>\n<span class=\"go\">Done.</span>\n\n<span class=\"gp\">#</span> sudo kvm -hda /dev/vg/lv\n</pre>\n<p>Without <code>--color never</code>, the output above is actually in color.</p>\n<p><a></a></p>\n<h1>Speeding things up</h1>\n<p><a></a></p>\n<h2>Using RAM instead of HDD/SSD</h2>\n<p>If you run <strong>image-bootstrap</strong> repeatedly and have enough RAM, you may want to\ncreate images on RAM storage rather than on disk.  I use a setup with</p>\n<ul>\n<li>\n<p>a loop device (to have a block device)</p>\n</li>\n<li>\n<p>over a sparse file (to save space)</p>\n</li>\n<li>\n<p>in a tmpfs mount (to use RAM).</p>\n</li>\n</ul>\n<p>For example (assuming you have /tmp in RAM already):</p>\n<pre><span class=\"gp\">#</span> sudo mount -o remout,size<span class=\"o\">=</span>6g /tmp\n<span class=\"gp\">#</span> truncate --size 3g /tmp/disk3g\n<span class=\"gp\">#</span> <span class=\"nv\">LOOP_DEVICE</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">$(</span>losetup --show -f /tmp/disk3g<span class=\"k\">)</span><span class=\"s2\">\"</span>\n\n<span class=\"gp\">#</span> image-bootstrap .... arch ... <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">LOOP_DEVICE</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"gp\">#</span> qemu-img convert -p -f raw -O qcow2 <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">LOOP_DEVICE</span><span class=\"si\">}</span><span class=\"s2\">\"</span> /var/lib/arch-<span class=\"k\">$(</span>date -I<span class=\"k\">)</span>.qcow2\n\n<span class=\"gp\">#</span> losetup -d <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">LOOP_DEVICE</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"gp\">#</span> rm /tmp/disk3g\n</pre>\n<p><a></a></p>\n<h2>Apt-Cacher NG -- a cache specific to Debian/Ubuntu</h2>\n<p>When creating multiple images,\na local instance of <a href=\"https://www.unix-ag.uni-kl.de/%7Ebloch/acng/\" rel=\"nofollow\">Apt-Cacher NG</a> and\npassing <code>--mirror http://localhost:3142/debian</code> to <strong>image-bootstrap</strong> may come in handy.</p>\n<p><a></a></p>\n<h2>Polipo -- a generic HTTP cache</h2>\n<p>For a distribution-agnostic cache, using\n<a href=\"https://github.com/jech/polipo\" rel=\"nofollow\">Polipo</a> can greatly speed up consecutive runs.\nInvoke <strong>image-bootstrap</strong> with</p>\n<pre><span class=\"gp\">#</span> <span class=\"nv\">http_proxy</span><span class=\"o\">=</span>http://127.0.0.1:8123/ image-bootstrap ...\n</pre>\n<p>when using Polipo with default port configuration.</p>\n<p><a></a></p>\n<h2>haveged -- an entropy generator</h2>\n<p>During image creation, cryptographic keys may need to be generated, e.g.\nfor thr OpenSSH server, at least temporarily.  As key generation relies\non availability of entropy, image creation may take longer in environments that\nare slow at adding to the entropy pool.\nTo speed things up, running <a href=\"http://www.issihosts.com/haveged/\" rel=\"nofollow\">haveged</a>\nat the host system <em>could</em> be an option, especially since all keys should be deleted\nfrom images, eventually. Otherwise, there is a risk of ending up with multiple\nsystems having the same key allowing for attacks.\nI am unsure of the quality of entropy that haveged produces.  Use is at your own risk.</p>\n<p><a></a></p>\n<h1>Debian package</h1>\n<p>As long as <strong>image-bootstrap</strong> as not available <em>in</em> Debian, you can\nmake an <strong>image-bootstrap</strong> Debian package yourself easily from Git as follows:</p>\n<pre><span class=\"gp\">#</span> git clone https://github.com/hartwork/image-bootstrap.git\n<span class=\"go\">Cloning into 'image-bootstrap'...</span>\n<span class=\"go\">[..]</span>\n\n<span class=\"gp\">#</span> make -C image-bootstrap/ deb\n<span class=\"go\">[..]</span>\n\n<span class=\"gp\">#</span> ls *.deb\n<span class=\"go\">image-bootstrap_0.9.1_all.deb</span>\n\n<span class=\"gp\">#</span> sudo dpkg -i image-bootstrap_0.9.1_all.deb\n<span class=\"go\">[..]</span>\n</pre>\n<p><a></a></p>\n<h1>Usage (<code>--help</code> output)</h1>\n<p>In general, the usage is:</p>\n<pre><span class=\"go\">image-bootstrap [..] DISTRIBUTION [..] DEVICE</span>\n</pre>\n<p>or</p>\n<pre><span class=\"go\">image-bootstrap --hostname NAME [DISTRO_AGNOSTIC] DISTRIBUTION [DISTRO_SPECIFIC] DEVICE</span>\n</pre>\n<p>in a bit more detail.</p>\n<p>A dump of the current <code>--help</code> output would be:</p>\n<pre><span class=\"gp\">#</span> image-bootstrap --help\n<span class=\"go\">usage: image-bootstrap [-h] [--version] [--color {never,always,auto}]</span>\n<span class=\"go\">                       [--debug] [--quiet] [--verbose] [--arch ARCHITECTURE]</span>\n<span class=\"go\">                       [--bootloader {auto,chroot-grub2-device,chroot-grub2-drive,host-extlinux,host-grub2-device,host-grub2-drive,none}]</span>\n<span class=\"go\">                       [--bootloader-force] [--hostname NAME] [--openstack]</span>\n<span class=\"go\">                       [--password PASSWORD | --password-file FILE]</span>\n<span class=\"go\">                       [--resolv-conf FILE] [--disk-id ID]</span>\n<span class=\"go\">                       [--first-partition-uuid UUID] [--machine-id ID]</span>\n<span class=\"go\">                       [--scripts-pre DIRECTORY] [--scripts-chroot DIRECTORY]</span>\n<span class=\"go\">                       [--scripts-post DIRECTORY] [--grub2-install COMMAND]</span>\n<span class=\"go\">                       [--cache-dir DIRECTORY]</span>\n<span class=\"go\">                       DISTRIBUTION ... DEVICE</span>\n\n<span class=\"go\">Command line tool for creating bootable virtual machine images</span>\n\n<span class=\"go\">positional arguments:</span>\n<span class=\"go\">  DEVICE                block device to install to</span>\n\n<span class=\"go\">optional arguments:</span>\n<span class=\"go\">  -h, --help            show this help message and exit</span>\n<span class=\"go\">  --version             show program's version number and exit</span>\n\n<span class=\"go\">text output configuration:</span>\n<span class=\"go\">  --color {never,always,auto}</span>\n<span class=\"go\">                        toggle output color (default: auto)</span>\n<span class=\"go\">  --debug               enable debugging</span>\n<span class=\"go\">  --quiet               limit output to error messages</span>\n<span class=\"go\">  --verbose             increase verbosity</span>\n\n<span class=\"go\">machine configuration:</span>\n<span class=\"go\">  --arch ARCHITECTURE   architecture (e.g. amd64)</span>\n<span class=\"go\">  --bootloader {auto,chroot-grub2-device,chroot-grub2-drive,host-extlinux,host-grub2-device,host-grub2-drive,none}</span>\n<span class=\"go\">                        approach to take during bootloader installation</span>\n<span class=\"go\">                        (default: auto)</span>\n<span class=\"go\">  --bootloader-force    apply more force when installing bootloader (default:</span>\n<span class=\"go\">                        disabled)</span>\n<span class=\"go\">  --hostname NAME       hostname to set (default: \"machine\")</span>\n<span class=\"go\">  --openstack           prepare for use with OpenStack (default: disabled)</span>\n<span class=\"go\">  --password PASSWORD   root password to set (default: password log-in</span>\n<span class=\"go\">                        disabled)</span>\n<span class=\"go\">  --password-file FILE  file to read root password from (default: password</span>\n<span class=\"go\">                        log-in disabled)</span>\n<span class=\"go\">  --resolv-conf FILE    file to copy nameserver entries from (default:</span>\n<span class=\"go\">                        /etc/resolv.conf)</span>\n<span class=\"go\">  --disk-id ID          specific disk identifier to apply, e.g. 0x12345678</span>\n<span class=\"go\">  --first-partition-uuid UUID</span>\n<span class=\"go\">                        specific UUID to apply to first partition, e.g.</span>\n<span class=\"go\">                        c1b9d5a2-f162-11cf-9ece-0020afc76f16</span>\n<span class=\"go\">  --machine-id ID       specific machine identifier to apply, e.g.</span>\n<span class=\"go\">                        c1b9d5a2f16211cf9ece0020afc76f16</span>\n\n<span class=\"go\">script integration:</span>\n<span class=\"go\">  --scripts-pre DIRECTORY</span>\n<span class=\"go\">                        scripts to run prior to chrooting phase, in</span>\n<span class=\"go\">                        alphabetical order</span>\n<span class=\"go\">  --scripts-chroot DIRECTORY</span>\n<span class=\"go\">                        scripts to run during chrooting phase, in alphabetical</span>\n<span class=\"go\">                        order</span>\n<span class=\"go\">  --scripts-post DIRECTORY</span>\n<span class=\"go\">                        scripts to run after chrooting phase, in alphabetical</span>\n<span class=\"go\">                        order</span>\n\n<span class=\"go\">command names:</span>\n<span class=\"go\">  --grub2-install COMMAND</span>\n<span class=\"go\">                        override grub2-install command</span>\n\n<span class=\"go\">general configuration:</span>\n<span class=\"go\">  --cache-dir DIRECTORY</span>\n<span class=\"go\">                        directory to use for downloads (default:</span>\n<span class=\"go\">                        /var/cache/directory-bootstrap/)</span>\n\n<span class=\"go\">subcommands (choice of distribution):</span>\n<span class=\"go\">  Run \"image-bootstrap DISTRIBUTION --help\" for details on options specific to that distribution.</span>\n\n<span class=\"go\">  DISTRIBUTION          choice of distribution, pick from:</span>\n<span class=\"go\">    arch                Arch Linux</span>\n<span class=\"go\">    debian              Debian GNU/Linux</span>\n<span class=\"go\">    gentoo              Gentoo</span>\n<span class=\"go\">    ubuntu              Ubuntu</span>\n\n<span class=\"go\">     _                          __             __      __</span>\n<span class=\"go\">    (_)_ _  ___ ____ ____  ___ / /  ___  ___  / /____ / /________ ____</span>\n<span class=\"go\">   / /  ' \\/ _ `/ _ `/ -_)/__// _ \\/ _ \\/ _ \\/ __(_-&lt;/ __/ __/ _ `/ _ \\</span>\n<span class=\"go\">  /_/_/_/_/\\_,_/\\_, /\\__/    /_.__/\\___/\\___/\\__/___/\\__/_/  \\_,_/ .__/</span>\n<span class=\"go\">               /___/                      v2.0.0 :: 2020-02-28  /_/</span>\n\n<span class=\"go\">Software libre licensed under AGPL v3 or later.</span>\n<span class=\"go\">Brought to you by Sebastian Pipping &lt;sebastian@pipping.org&gt;.</span>\n<span class=\"go\">Please report bugs at https://github.com/hartwork/image-bootstrap.  Thank you!</span>\n</pre>\n<p>To show options specific to Debian, run ..</p>\n<pre><span class=\"gp\">#</span> image-bootstrap debian --help\n<span class=\"go\">usage: image-bootstrap debian [-h] [--debootstrap COMMAND] [--release RELEASE]</span>\n<span class=\"go\">                              [--mirror URL] [--debootstrap-opt OPTION]</span>\n\n<span class=\"go\">optional arguments:</span>\n<span class=\"go\">  -h, --help            show this help message and exit</span>\n<span class=\"go\">  --release RELEASE     specify Debian release (default: jessie)</span>\n<span class=\"go\">  --mirror URL          specify Debian mirror to use (e.g.</span>\n<span class=\"go\">                        http://localhost:3142/debian for a local instance of</span>\n<span class=\"go\">                        apt-cacher-ng; default:</span>\n<span class=\"go\">                        http://httpredir.debian.org/debian)</span>\n<span class=\"go\">  --debootstrap-opt OPTION</span>\n<span class=\"go\">                        option to pass to debootstrap, in addition; can be</span>\n<span class=\"go\">                        passed several times; use with --debootstrap-opt=...</span>\n<span class=\"go\">                        syntax, i.e. with \"=\"</span>\n\n<span class=\"go\">command names:</span>\n<span class=\"go\">  --debootstrap COMMAND</span>\n<span class=\"go\">                        override debootstrap command</span>\n</pre>\n<p><a></a></p>\n<h1>Hints on using image-bootstrap within a pipe</h1>\n<p>If you want to run <strong>image-bootstrap</strong> in a pipe to capture its output to both\n<code>stdout</code>/<code>stderr</code> to a single log file, be sure to run <strong>image-bootstrap</strong> in\nunbuffered mode, e.g.:</p>\n<pre><span class=\"go\">python -u image-bootstrap [OPTIONS] 2&gt;&amp;1 | tee my.log</span>\n</pre>\n<p>The default shebang generated by python setuptools does not use <code>-u</code>. It's also\nnot easily possible to have it pass <code>-u</code> since the <code>env</code> command does allow for\nfor passing command parameters only in fairly recent versions. As a consequence,\n<code>stdout</code>/<code>stderr</code> won't be synchronized and error output you see in a log file\nwill not exactly correspond to preceding/succeeding output on <code>stdout</code>. (See\n<a href=\"https://github.com/hartwork/image-bootstrap/issues/71\" rel=\"nofollow\">issue #71</a> for more details.)</p>\n<p>Moreover, if you're using Bash and you need to keep track of\n<strong>image-bootstrap</strong>'s exit code, be sure to run <code>set -o pipefail</code> prior to\ninvoking <strong>image-bootstrap</strong>.\n(Please see the\n<a href=\"https://www.gnu.org/software/bash/manual/html_node/Pipelines.html\" rel=\"nofollow\">Pipelines</a>\nsection of the\n<a href=\"https://www.gnu.org/software/bash/manual/html_node/index.html\" rel=\"nofollow\">GNU Bash Reference Manual</a>\nfor more details.)</p>\n<p><a></a></p>\n<h1>Known limitations</h1>\n<p><a></a></p>\n<h2>Installing Debian <em>wheezy</em> to loop devices</h2>\n<p>GRUB 1.99 has trouble installing to loop devices.\nAs a result, using <strong>image-bootstrap</strong> to install e.g. Debian <em>wheezy</em> to a loop device\nrequires</p>\n<p>. bootloader approach <code>host-grub2-device</code> or <code>host-grub2-drive</code> and</p>\n<p>. a more recent version of GRUB 2.x on the system running <strong>image-bootstrap</strong>.</p>\n<p><a></a></p>\n<h2>Installing to partition block devices</h2>\n<p>Linux does not like partitions in partitions much.\nIt can be tricked using device mapper, though.</p>\n<p>This is how to install to a partition using another partition as a temporary target.\nThe temporary target must</p>\n<ul>\n<li>\n<p>be 2 GiB in space or more (to hold the whole distribution) and</p>\n</li>\n<li>\n<p>smaller or equal than the actualy target (for the later copy to work).</p>\n</li>\n</ul>\n<pre><span class=\"gp\">#</span> dmsetup create dm-linear-vda4 --table <span class=\"s2\">\"0 </span><span class=\"k\">$(</span>blockdev --getsz /dev/vda4<span class=\"k\">)</span><span class=\"s2\"> linear /dev/vda4 0\"</span>\n<span class=\"gp\">#</span> image-bootstrap --openstack arch /dev/mapper/dm-linear-vda4\n<span class=\"gp\">#</span> partprobe /dev/mapper/dm-linear-vda4\n<span class=\"gp\">#</span> pv /dev/mapper/dm-linear-vda4p1 &gt; /dev/vda2\n<span class=\"gp\">#</span> dmsetup remove dm-linear-vda4p1\n<span class=\"gp\">#</span> dmsetup remove dm-linear-vda4\n</pre>\n<p>(<code>/dev/vda2</code> is the real target, <code>/dev/vda4</code> the temporary one.)</p>\n<p>There are other ways to achieve the same.</p>\n\n          </div>"}, "last_serial": 6996642, "releases": {"0.8.1": [], "0.9.0": [], "0.9.1": [], "0.9.2": [], "0.9.2.1": [{"comment_text": "", "digests": {"md5": "b8d7192b1555ffad2a86c8f2a056fe27", "sha256": "357d08a12431f2fefb10c85f658f2d0a235247e3d5b0b8e2af0eda71317cd592"}, "downloads": -1, "filename": "image-bootstrap-0.9.2.1.tar.gz", "has_sig": false, "md5_digest": "b8d7192b1555ffad2a86c8f2a056fe27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75596, "upload_time": "2017-01-10T20:17:25", "upload_time_iso_8601": "2017-01-10T20:17:25.611867Z", "url": "https://files.pythonhosted.org/packages/3b/a9/9b4391b6a007c257ef7d479c79366127c387d57a90289a80562bb045184c/image-bootstrap-0.9.2.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "74fc5fbdaf81783c25d34a747e35b1aa", "sha256": "9e418b6ec68c3e71cd76a628137927905449b9bc4db1c39728423741de023888"}, "downloads": -1, "filename": "image_bootstrap-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "74fc5fbdaf81783c25d34a747e35b1aa", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 287847, "upload_time": "2020-02-27T19:51:08", "upload_time_iso_8601": "2020-02-27T19:51:08.421543Z", "url": "https://files.pythonhosted.org/packages/c6/39/8bec374149c3443f6325ff19a3a33b4643013ebb9deea03a5a87b04f9ae6/image_bootstrap-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d875f73c65afa3c1bb6e94bfc1bc4173", "sha256": "1d06da8aed7c201688e6f4121fe65130dd0d020763ca242356b6b430763b5c0e"}, "downloads": -1, "filename": "image-bootstrap-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d875f73c65afa3c1bb6e94bfc1bc4173", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 272871, "upload_time": "2020-02-27T19:51:11", "upload_time_iso_8601": "2020-02-27T19:51:11.141403Z", "url": "https://files.pythonhosted.org/packages/73/f6/4ddef775e8aa58d9bd3f16bfdc6b7a7867107b264785aae5d397ee69de31/image-bootstrap-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "c744a036771dfeb4e7969b44c44a711b", "sha256": "21117a2eec6e4c07c255a64d4eb4da0c8f334b48e2ae9478f387db4e37fd22e2"}, "downloads": -1, "filename": "image_bootstrap-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c744a036771dfeb4e7969b44c44a711b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 285106, "upload_time": "2020-02-27T23:56:20", "upload_time_iso_8601": "2020-02-27T23:56:20.921755Z", "url": "https://files.pythonhosted.org/packages/f3/8c/4bc0decf16790f14018c31f4e58cf9de21b90f0568ee919efc8dccbf5e71/image_bootstrap-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e52d3737eb929deddcb59f8ecf83ac81", "sha256": "8070c92879347fe49c9abda75111086e42ebbe115cfdbd29e0386291ae331fd6"}, "downloads": -1, "filename": "image-bootstrap-2.0.0.tar.gz", "has_sig": false, "md5_digest": "e52d3737eb929deddcb59f8ecf83ac81", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 271089, "upload_time": "2020-02-27T23:56:23", "upload_time_iso_8601": "2020-02-27T23:56:23.305897Z", "url": "https://files.pythonhosted.org/packages/85/18/28d8fbb1e8fa218666aa3a72c9a0c329520363da2d5c182ca514362a2706/image-bootstrap-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "d4fdeb673f5cbd58a22c7fade8e9186d", "sha256": "d45f9d13031f69426c27ca5538cf174ebf7f11859ff7eeb54fd14a09ec4820da"}, "downloads": -1, "filename": "image_bootstrap-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d4fdeb673f5cbd58a22c7fade8e9186d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 285116, "upload_time": "2020-03-04T01:30:27", "upload_time_iso_8601": "2020-03-04T01:30:27.079253Z", "url": "https://files.pythonhosted.org/packages/8e/93/a66de8b734473ca2801053772c9edc5f394365262181297d027885f48958/image_bootstrap-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5fb240167e1137439928840832342650", "sha256": "d796d64a3a5639ef61873faa1247073d9f7204301216e7721989de5d5e28445b"}, "downloads": -1, "filename": "image-bootstrap-2.0.1.tar.gz", "has_sig": false, "md5_digest": "5fb240167e1137439928840832342650", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 271420, "upload_time": "2020-03-04T01:30:29", "upload_time_iso_8601": "2020-03-04T01:30:29.003322Z", "url": "https://files.pythonhosted.org/packages/b2/75/9f4715de92d4c6fc090e406bfb989b4a2812e9c6744421fbd3a19a117904/image-bootstrap-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "c6b5d01a48ce316ba0549aa8d12cfd20", "sha256": "2b12f936703cdbc4b2cde6030dff40340ede09229c102172c36f8b94d32462bf"}, "downloads": -1, "filename": "image_bootstrap-2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c6b5d01a48ce316ba0549aa8d12cfd20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 285118, "upload_time": "2020-03-08T17:03:17", "upload_time_iso_8601": "2020-03-08T17:03:17.396353Z", "url": "https://files.pythonhosted.org/packages/78/ec/a733ba1505f74eff54834a8e60730ad0b9ae281b31a224eb7a326d2e170e/image_bootstrap-2.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "632f958481aa167a66ebae25a6610fe9", "sha256": "185b880fd7095b6ff9a1c0b39f97e18c8246709755c218e28704c8e568b34ceb"}, "downloads": -1, "filename": "image-bootstrap-2.0.2.tar.gz", "has_sig": false, "md5_digest": "632f958481aa167a66ebae25a6610fe9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 271432, "upload_time": "2020-03-08T17:03:22", "upload_time_iso_8601": "2020-03-08T17:03:22.195432Z", "url": "https://files.pythonhosted.org/packages/55/0e/aaf585775fdb48ab358a14423a0bacbc9dcfe2dd651a06f94264e89df8ff/image-bootstrap-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "b45d40adafb91c8c2239957c96257aea", "sha256": "eb30526555ff7547758204b41f7b0556df3a207dac5d712b91e1a29e389c5672"}, "downloads": -1, "filename": "image_bootstrap-2.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b45d40adafb91c8c2239957c96257aea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 285186, "upload_time": "2020-04-10T21:33:44", "upload_time_iso_8601": "2020-04-10T21:33:44.915663Z", "url": "https://files.pythonhosted.org/packages/2f/7d/d5d9daae0a74033a14a40ca5cfd3e46c1b3de65670240e76990f39de4865/image_bootstrap-2.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6701aa5dfde3e862917b7239684fc15a", "sha256": "f5dd7bd2354e5de1418e307464f4a1df5f7d7b788cd2ed9e2066622f04674eb6"}, "downloads": -1, "filename": "image-bootstrap-2.0.3.tar.gz", "has_sig": false, "md5_digest": "6701aa5dfde3e862917b7239684fc15a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 271360, "upload_time": "2020-04-10T21:33:47", "upload_time_iso_8601": "2020-04-10T21:33:47.387835Z", "url": "https://files.pythonhosted.org/packages/14/4f/7d897d3fc3e6a2e53f9da05ff539da4c859afec3dee9370a915fff0195ef/image-bootstrap-2.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b45d40adafb91c8c2239957c96257aea", "sha256": "eb30526555ff7547758204b41f7b0556df3a207dac5d712b91e1a29e389c5672"}, "downloads": -1, "filename": "image_bootstrap-2.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b45d40adafb91c8c2239957c96257aea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 285186, "upload_time": "2020-04-10T21:33:44", "upload_time_iso_8601": "2020-04-10T21:33:44.915663Z", "url": "https://files.pythonhosted.org/packages/2f/7d/d5d9daae0a74033a14a40ca5cfd3e46c1b3de65670240e76990f39de4865/image_bootstrap-2.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6701aa5dfde3e862917b7239684fc15a", "sha256": "f5dd7bd2354e5de1418e307464f4a1df5f7d7b788cd2ed9e2066622f04674eb6"}, "downloads": -1, "filename": "image-bootstrap-2.0.3.tar.gz", "has_sig": false, "md5_digest": "6701aa5dfde3e862917b7239684fc15a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 271360, "upload_time": "2020-04-10T21:33:47", "upload_time_iso_8601": "2020-04-10T21:33:47.387835Z", "url": "https://files.pythonhosted.org/packages/14/4f/7d897d3fc3e6a2e53f9da05ff539da4c859afec3dee9370a915fff0195ef/image-bootstrap-2.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:55 2020"}