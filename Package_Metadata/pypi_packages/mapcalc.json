{"info": {"author": "Simon Klimaschka", "author_email": "simon.klimaschka@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Build Tools"], "description": "# mapcalc (mean average precision calculator)\n\n\n## Table of contents\n\n- [Introduction](#introduction)\n- [Explanation](#explanation)\n- [Prerequisites](#prerequisites)\n- [Usage](#usage)\n- [Authors](#authors)\n\n## Introduction\nFor object detection in images the mAP (mean average precision) metric is often used to see how good the implementation is.\nAs no packages that make the calculation for you were available at this time, I adapted the implementation from Jo\u00c3\u00a3o Cartucho,\nwhich uses files which hold the detection results. It now can be installed as a package with pip and simply gives you the\nmAP value at a certain iou threshold. \n\n## Explanation\nThe performance of your neural net will be judged using the mAP criterium defined in the [PASCAL VOC 2012 competition](http://host.robots.ox.ac.uk/pascal/VOC/voc2012/). The code from [official Matlab code](http://host.robots.ox.ac.uk/pascal/VOC/voc2012/#devkit) was adapted into Python.\n\n## Prerequisites\nPackages needed:\n- numpy\n\n## Usage\n```python\nfrom mapcalc import calculate_map, calculate_map_range\n\n# calculates the mAP for an IOU threshold of 0.5\ncalculate_map(ground_truth, result, 0.5)\n\n# calculates the mAP average for the IOU thresholds 0.05, 0.1, 0.15, ..., 0.90, 0.95.\ncalculate_map_range(ground_truth, result, 0.05, 0.95, 0.05)\n```\n\nThe methods expect two dicts:\n* ground_truth_dict with {labels:, boxes:} \n* result_dict with {scores:, labels:, boxes:}\n\n## Authors:\n* **Simon Klimaschka**\n* Adapted from **Jo\u00c3\u00a3o Cartucho** (https://github.com/Cartucho/mAP)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/LeMuecke/mapcalc/archive/v_0.1.1-beta.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LeMuecke/mapcalc", "keywords": "object detection,map,mean average precision", "license": "apache-2.0", "maintainer": "", "maintainer_email": "", "name": "mapcalc", "package_url": "https://pypi.org/project/mapcalc/", "platform": "", "project_url": "https://pypi.org/project/mapcalc/", "project_urls": {"Download": "https://github.com/LeMuecke/mapcalc/archive/v_0.1.1-beta.tar.gz", "Homepage": "https://github.com/LeMuecke/mapcalc"}, "release_url": "https://pypi.org/project/mapcalc/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Calculates the mAP value in object detection tasks", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mapcalc (mean average precision calculator)</h1>\n<h2>Table of contents</h2>\n<ul>\n<li><a href=\"#introduction\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#explanation\" rel=\"nofollow\">Explanation</a></li>\n<li><a href=\"#prerequisites\" rel=\"nofollow\">Prerequisites</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#authors\" rel=\"nofollow\">Authors</a></li>\n</ul>\n<h2>Introduction</h2>\n<p>For object detection in images the mAP (mean average precision) metric is often used to see how good the implementation is.\nAs no packages that make the calculation for you were available at this time, I adapted the implementation from Jo\u00c3\u00a3o Cartucho,\nwhich uses files which hold the detection results. It now can be installed as a package with pip and simply gives you the\nmAP value at a certain iou threshold.</p>\n<h2>Explanation</h2>\n<p>The performance of your neural net will be judged using the mAP criterium defined in the <a href=\"http://host.robots.ox.ac.uk/pascal/VOC/voc2012/\" rel=\"nofollow\">PASCAL VOC 2012 competition</a>. The code from <a href=\"http://host.robots.ox.ac.uk/pascal/VOC/voc2012/#devkit\" rel=\"nofollow\">official Matlab code</a> was adapted into Python.</p>\n<h2>Prerequisites</h2>\n<p>Packages needed:</p>\n<ul>\n<li>numpy</li>\n</ul>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mapcalc</span> <span class=\"kn\">import</span> <span class=\"n\">calculate_map</span><span class=\"p\">,</span> <span class=\"n\">calculate_map_range</span>\n\n<span class=\"c1\"># calculates the mAP for an IOU threshold of 0.5</span>\n<span class=\"n\">calculate_map</span><span class=\"p\">(</span><span class=\"n\">ground_truth</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># calculates the mAP average for the IOU thresholds 0.05, 0.1, 0.15, ..., 0.90, 0.95.</span>\n<span class=\"n\">calculate_map_range</span><span class=\"p\">(</span><span class=\"n\">ground_truth</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.95</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">)</span>\n</pre>\n<p>The methods expect two dicts:</p>\n<ul>\n<li>ground_truth_dict with {labels:, boxes:}</li>\n<li>result_dict with {scores:, labels:, boxes:}</li>\n</ul>\n<h2>Authors:</h2>\n<ul>\n<li><strong>Simon Klimaschka</strong></li>\n<li>Adapted from <strong>Jo\u00c3\u00a3o Cartucho</strong> (<a href=\"https://github.com/Cartucho/mAP\" rel=\"nofollow\">https://github.com/Cartucho/mAP</a>)</li>\n</ul>\n\n          </div>"}, "last_serial": 5613802, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6d1958da7e463d9a2734209a553850d9", "sha256": "5c4da8da82fea838bda6ed0f1e26a5e5b41b8f30c085b57c4d286638d5874458"}, "downloads": -1, "filename": "mapcalc-0.1.zip", "has_sig": false, "md5_digest": "6d1958da7e463d9a2734209a553850d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3581, "upload_time": "2019-07-30T21:00:42", "upload_time_iso_8601": "2019-07-30T21:00:42.064159Z", "url": "https://files.pythonhosted.org/packages/ad/2e/cc3b7e96ca24f2166c7022af2d9b7853c31f2c880c6eb6437dbd87f0fa3d/mapcalc-0.1.zip", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "697bc7173006d2f93987c6ae6ccd99a6", "sha256": "ead6c8feb6d8b6dc49e431a936426487cc398fd7c0d67ef82f205514d4236dfd"}, "downloads": -1, "filename": "mapcalc-0.1.1.tar.gz", "has_sig": false, "md5_digest": "697bc7173006d2f93987c6ae6ccd99a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4066, "upload_time": "2019-07-31T14:35:58", "upload_time_iso_8601": "2019-07-31T14:35:58.367405Z", "url": "https://files.pythonhosted.org/packages/11/c3/8c6e3c2e3b57d87a0fca11844e0b215c75f0cb6609a32baba9b440effc62/mapcalc-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "697bc7173006d2f93987c6ae6ccd99a6", "sha256": "ead6c8feb6d8b6dc49e431a936426487cc398fd7c0d67ef82f205514d4236dfd"}, "downloads": -1, "filename": "mapcalc-0.1.1.tar.gz", "has_sig": false, "md5_digest": "697bc7173006d2f93987c6ae6ccd99a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4066, "upload_time": "2019-07-31T14:35:58", "upload_time_iso_8601": "2019-07-31T14:35:58.367405Z", "url": "https://files.pythonhosted.org/packages/11/c3/8c6e3c2e3b57d87a0fca11844e0b215c75f0cb6609a32baba9b440effc62/mapcalc-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:56 2020"}