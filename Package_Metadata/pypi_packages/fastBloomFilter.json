{"info": {"author": "Dario Clavijo", "author_email": "dclavijo@protonmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "# Simple and fast pythonic bloomfilter\n\nFrom wikipedia: \"A Bloom filter is a space-efficient probabilistic data structure, conceived by Burton Howard Bloom in 1970, that is used to test whether an element is a member of a set. False positive matches are possible, but false negatives are not \u2013 in other words, a query returns either \"possibly in set\" or \"definitely not in set\". Elements can be added to the set, but not removed (though this can be addressed with a \"counting\" filter); the more elements that are added to the set, the larger the probability of false positives.\"\n\nThis filter supports: \n\n    Saving, reloading, compressed bloomfilter file lrzip like\n        for compression: lz4>lzo>zlib>bz2>lzma\n        for decompression: lzma>bz2>zlib>lzo>lz4\n    Stats\n    Entropy analysis\n    Internal and external hashing of data.\n    raw filter merging\n\nInstalling:\n\n    sudo pip install fastbloomfilter\n\nExternal creating of the bloom filter file:\n\n    python mkbloom.py /tmp/filter.blf\n\nImporting:\n\n    from fastBloomFilter import bloom\n\n    bf = bloom.BloomFilter(filename='/tmp/filter.blf')\n\nAdding data to it:\n\n    bf.add('30000')\n\n    bf.add('1230213')\n\n    bf.add('1')\n    \nAdding data and at the same time querying it:\n\n    print bf.update('1') # True\n\n    print bf.update('1') # True\n    \n    print bf.update('2') # False\n\n    print bf.update('2') # True\n\nPrinting stats:\n\n    bf.stat()\n    \nOr:\n    \n    bf.info()\n\nQuerying data:\n\n    print bf.query('1') # True\n\n    print bf.query('1230213') # True\n\n    print bf.query('12') # False\n", "description_content_type": "", "docs_url": null, "download_url": "http://github.com/daedalus/bloomfilter/tarball/0.0.4", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/daedalus/bloomfilter", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "fastBloomFilter", "package_url": "https://pypi.org/project/fastBloomFilter/", "platform": "", "project_url": "https://pypi.org/project/fastBloomFilter/", "project_urls": {"Download": "http://github.com/daedalus/bloomfilter/tarball/0.0.4", "Homepage": "http://github.com/daedalus/bloomfilter"}, "release_url": "https://pypi.org/project/fastBloomFilter/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "A fast and simple probabilistic bloom filter that supports compression", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Simple and fast pythonic bloomfilter<br><br>From wikipedia: \"A Bloom filter is a space-efficient probabilistic data structure, conceived by Burton Howard Bloom in 1970, that is used to test whether an element is a member of a set. False positive matches are possible, but false negatives are not \u2013 in other words, a query returns either \"possibly in set\" or \"definitely not in set\". Elements can be added to the set, but not removed (though this can be addressed with a \"counting\" filter); the more elements that are added to the set, the larger the probability of false positives.\"<br><br>This filter supports: <br><br>    Saving, reloading, compressed bloomfilter file lrzip like<br>        for compression: lz4&gt;lzo&gt;zlib&gt;bz2&gt;lzma<br>        for decompression: lzma&gt;bz2&gt;zlib&gt;lzo&gt;lz4<br>    Stats<br>    Entropy analysis<br>    Internal and external hashing of data.<br>    raw filter merging<br><br>Installing:<br><br>    sudo pip install fastbloomfilter<br><br>External creating of the bloom filter file:<br><br>    python mkbloom.py /tmp/filter.blf<br><br>Importing:<br><br>    from fastBloomFilter import bloom<br><br>    bf = bloom.BloomFilter(filename='/tmp/filter.blf')<br><br>Adding data to it:<br><br>    bf.add('30000')<br><br>    bf.add('1230213')<br><br>    bf.add('1')<br>    <br>Adding data and at the same time querying it:<br><br>    print bf.update('1') # True<br><br>    print bf.update('1') # True<br>    <br>    print bf.update('2') # False<br><br>    print bf.update('2') # True<br><br>Printing stats:<br><br>    bf.stat()<br>    <br>Or:<br>    <br>    bf.info()<br><br>Querying data:<br><br>    print bf.query('1') # True<br><br>    print bf.query('1230213') # True<br><br>    print bf.query('12') # False<br>\n          </div>"}, "last_serial": 3966072, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c12c748000aa412f1918f9dfbdabaf60", "sha256": "5bc953df49d2348435569de30f5a40388dce9df2093287e4413816baee381cd8"}, "downloads": -1, "filename": "fastBloomFilter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c12c748000aa412f1918f9dfbdabaf60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6345, "upload_time": "2017-10-14T04:00:08", "upload_time_iso_8601": "2017-10-14T04:00:08.472752Z", "url": "https://files.pythonhosted.org/packages/65/16/ec0e56db5881775c3db3a7e7787f0e7387f360eea07462b7224987689b2e/fastBloomFilter-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "436219db058ccf1fb4d68394fb0ef690", "sha256": "ccbd28726436c925713d887c9052e25cc572c5c26aa7e2b2cc698d4525d5eb1e"}, "downloads": -1, "filename": "fastBloomFilter-0.0.2.tar.gz", "has_sig": false, "md5_digest": "436219db058ccf1fb4d68394fb0ef690", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6538, "upload_time": "2017-10-14T04:31:55", "upload_time_iso_8601": "2017-10-14T04:31:55.289882Z", "url": "https://files.pythonhosted.org/packages/09/1e/90016e740d16df9f0e4c9508c0b735e32f75bfba26a2376754e26cdc2c95/fastBloomFilter-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ca0ceac2aed4cdc3323a13ccdb0d89aa", "sha256": "0316950feb1b253fd5373ff70a57b313804c7b027e5b8ea14e5a381329bc9dfc"}, "downloads": -1, "filename": "fastBloomFilter-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ca0ceac2aed4cdc3323a13ccdb0d89aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6484, "upload_time": "2017-10-16T03:10:23", "upload_time_iso_8601": "2017-10-16T03:10:23.985543Z", "url": "https://files.pythonhosted.org/packages/9a/ba/c86a5de47ca1ca818e0a4d0e8f1e9f3e435b56c3c46a633b82260dc85506/fastBloomFilter-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "0d500aff23686baff8353c5dc6344ba0", "sha256": "fb2258393b7d98461f4d7d7bc44148032af453244f30c1261379e071afc53268"}, "downloads": -1, "filename": "fastBloomFilter-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0d500aff23686baff8353c5dc6344ba0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19925, "upload_time": "2018-06-15T20:25:54", "upload_time_iso_8601": "2018-06-15T20:25:54.224002Z", "url": "https://files.pythonhosted.org/packages/25/cc/21e62d3c3064ff14cc381d57d664b1fab790f8c7d67fbe7e35aacd81eb61/fastBloomFilter-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0d500aff23686baff8353c5dc6344ba0", "sha256": "fb2258393b7d98461f4d7d7bc44148032af453244f30c1261379e071afc53268"}, "downloads": -1, "filename": "fastBloomFilter-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0d500aff23686baff8353c5dc6344ba0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19925, "upload_time": "2018-06-15T20:25:54", "upload_time_iso_8601": "2018-06-15T20:25:54.224002Z", "url": "https://files.pythonhosted.org/packages/25/cc/21e62d3c3064ff14cc381d57d664b1fab790f8c7d67fbe7e35aacd81eb61/fastBloomFilter-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:36 2020"}