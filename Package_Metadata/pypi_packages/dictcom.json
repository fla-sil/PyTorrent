{"info": {"author": "mromnia", "author_email": "mr.omnia.dev@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "************\ndictcom\n************\n\ndictcom is a simple Python package that extract dictionary info from Dictionary.com via web scraping. It can be thought of as an unofficial \"API\" for Dictionary.com.\n\n************\nInstallation\n************\n\ndictcom is available on PyPI::\n\n    $ pip install dictcom\n\nCurrently it only works under Python 3. Tested with Python 3.4 and 3.5.\n\n************\nUsage\n************\n\nThe package itself exposes two main methods, ``get_word`` and ``get_word_pronunciation``. \n\n``get_word`` downloads all the data found for the word provided and packages it into a ``Word`` object::\n\n  import dictcom\n  word = dictcom.get_word('something')  # an instance of dictcom.models.Word\n\nYou can access the word's pronunciation (the textual representation of it) via the ``pronunciation`` property::\n\n  word.pronunciation # '[suhm-thing]'\n\nThe definitions are found under the ``defs`` property, as a dictionary. Each key of the dictionary represents one definition subsection, which usually means a different part of speech (for example noun or pronoun)::\n\n  word.defs.keys() # ['pronoun', 'noun', 'adverb']\n  \nThe value under each key is a list of ``Definition`` instances. Each definition has two properties, ``text`` and ``example``.\n\nOne can also download the audio file for the word's pronunciation::\n\n  pronun = word.get_pronunciation_audio() # an instance of dictcom.models.WordPronunciation\n  pronun.audio # raw audio buffer\n  pronun.content_type # the MIME type of the buffer data\n  \nYou can also immediately get the pronunciation audio with ``get_word_pronunciation``, the other method exposed by the package.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mromnia/dictcom", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "dictcom", "package_url": "https://pypi.org/project/dictcom/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dictcom/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mromnia/dictcom"}, "release_url": "https://pypi.org/project/dictcom/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "A pseudo-API for Dictionary.com that works by scraping its website.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"dictcom\">\n<h2>dictcom</h2>\n<p>dictcom is a simple Python package that extract dictionary info from Dictionary.com via web scraping. It can be thought of as an unofficial \u201cAPI\u201d for Dictionary.com.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>dictcom is available on PyPI:</p>\n<pre>$ pip install dictcom\n</pre>\n<p>Currently it only works under Python 3. Tested with Python 3.4 and 3.5.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The package itself exposes two main methods, <tt>get_word</tt> and <tt>get_word_pronunciation</tt>.</p>\n<p><tt>get_word</tt> downloads all the data found for the word provided and packages it into a <tt>Word</tt> object:</p>\n<pre>import dictcom\nword = dictcom.get_word('something')  # an instance of dictcom.models.Word\n</pre>\n<p>You can access the word\u2019s pronunciation (the textual representation of it) via the <tt>pronunciation</tt> property:</p>\n<pre>word.pronunciation # '[suhm-thing]'\n</pre>\n<p>The definitions are found under the <tt>defs</tt> property, as a dictionary. Each key of the dictionary represents one definition subsection, which usually means a different part of speech (for example noun or pronoun):</p>\n<pre>word.defs.keys() # ['pronoun', 'noun', 'adverb']\n</pre>\n<p>The value under each key is a list of <tt>Definition</tt> instances. Each definition has two properties, <tt>text</tt> and <tt>example</tt>.</p>\n<p>One can also download the audio file for the word\u2019s pronunciation:</p>\n<pre>pronun = word.get_pronunciation_audio() # an instance of dictcom.models.WordPronunciation\npronun.audio # raw audio buffer\npronun.content_type # the MIME type of the buffer data\n</pre>\n<p>You can also immediately get the pronunciation audio with <tt>get_word_pronunciation</tt>, the other method exposed by the package.</p>\n</div>\n\n          </div>"}, "last_serial": 2034892, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "788d2af3c0536ad626dc7e2a23569d85", "sha256": "a4d56841f28baea348f380060d67b3041f67eed56d88fb676eea81d1427902c9"}, "downloads": -1, "filename": "dictcom-0.0.1.tar.gz", "has_sig": false, "md5_digest": "788d2af3c0536ad626dc7e2a23569d85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2693, "upload_time": "2016-03-13T21:54:25", "upload_time_iso_8601": "2016-03-13T21:54:25.788090Z", "url": "https://files.pythonhosted.org/packages/57/3c/b916f9661bdcc67ede1d40df894a73139c96f70f22887b616dd241e4032d/dictcom-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "14ea036bae0bc94d1244fd18fd3126c0", "sha256": "c83b81cb16a31e396251f8f2251cac997839d95747545c14c538715beaa2cfc9"}, "downloads": -1, "filename": "dictcom-0.0.2.tar.gz", "has_sig": false, "md5_digest": "14ea036bae0bc94d1244fd18fd3126c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2762, "upload_time": "2016-03-15T01:22:20", "upload_time_iso_8601": "2016-03-15T01:22:20.516671Z", "url": "https://files.pythonhosted.org/packages/a6/a7/cbb930ef22d42cc2c95211296bb6582af28b134d73d184e6e4f560364bea/dictcom-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "bf405e2bdf7618b367d955ceeb9ab5fb", "sha256": "ca6bf8535aca9d3670e00eca4a59de93abe83e771c2507ea4ff7a69100bfcd99"}, "downloads": -1, "filename": "dictcom-0.0.3.tar.gz", "has_sig": false, "md5_digest": "bf405e2bdf7618b367d955ceeb9ab5fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3632, "upload_time": "2016-03-29T22:48:02", "upload_time_iso_8601": "2016-03-29T22:48:02.550197Z", "url": "https://files.pythonhosted.org/packages/45/40/ab5b3f61b7e2ef226ec19d8f339b720cda5ddb6ed4e50bea71ff06b32996/dictcom-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bf405e2bdf7618b367d955ceeb9ab5fb", "sha256": "ca6bf8535aca9d3670e00eca4a59de93abe83e771c2507ea4ff7a69100bfcd99"}, "downloads": -1, "filename": "dictcom-0.0.3.tar.gz", "has_sig": false, "md5_digest": "bf405e2bdf7618b367d955ceeb9ab5fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3632, "upload_time": "2016-03-29T22:48:02", "upload_time_iso_8601": "2016-03-29T22:48:02.550197Z", "url": "https://files.pythonhosted.org/packages/45/40/ab5b3f61b7e2ef226ec19d8f339b720cda5ddb6ed4e50bea71ff06b32996/dictcom-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:33 2020"}