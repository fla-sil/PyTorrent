{"info": {"author": "James Tiplady", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# django-admin-thumbnails\n\nA Django app to assist in adding thumbnails for your model's image fields to admin list views and forms in a reasonably DRY manner.\n\n## Rationale\n\nWhen working with models that include `ImageField`s, `FileField`s or when using `ThumbnailerImageField` from `easy_thumbnails`, it can often be desirable to include a thumbnail preview of the field as part of the admin form, fieldset or in list views. Various methods to achieve this exist but all seem to involve a degree of duplication. I've made a few attempts to DRY out such code over the years and this library represents my most recent solution. So, please enjoy!\n\n## Compatibility\n\nI've not long upgraded to Django 2/3 and Python 3, so have not exhaustively tested all the below combinations, however I believe this table to be accurate.\n\n|                | Django 1.10   | 1.11 | 2.0 | 2.1 | 2.2 | 3.0 |\n|---------------:|:-------------:|:----:|:---:|:---:|:---:|:---:|\n| **Python** 2.7 | \u2714             | \u2714    |     |     |     |     |\n| 3.6            | \u2714             | \u2714    | \u2714   | \u2714   | \u2714   | \u2714   |\n\n## Installation\n\n```\n$ pip install django-admin-thumbnails\n```\n\n## Usage\n\nThe app adds fields to your `ModelAdmin` or `*Inline` class; one for each thumbnail you want to display. These are appended to the class's `readonly_fields` tuple (unless you specify otherwise) so they will be displayed at the bottom of your admin form, or you can include them by name in your `fieldsets` or `list_display` definitions.\n\n`django-admin-thumbnails` will handle `ImageField`, `FileField` (so you can use SVG, for example) and (if `easy_thumbnails` is installed) `ThumbnailerImageField`. In the latter case a thumbnail alias will be used, which you can specify in settings.\n\nTo create an admin thumbnail field, decorate your `ModelAdmin` or `*Inline` class and optionally specify what to do with the newly created field.\n\nAssuming a model like the following:\n\n```python\nclass Person(models.Model):\n    name = models.CharField('Name', max_length=100)\n    image = models.ImageField('Image')\n    # ...\n```\n\nIn the simplest use-case, to add a thumbnail field to the bottom of the admin form, simply decorate the `ModelAdmin` or `*Inline` class (the order of decorators is important), supplying the name of the field from which the thumbnail will be taken:\n\n```python\nimport admin_thumbnails\n\n@admin.register(models.Person)\n@admin_thumbnails.thumbnail('image')\nclass PersonAdmin(admin.ModelAdmin):\n    pass\n```\n\nThis will add a field called `image_thumbnail` (`FOO_thumbnail` where `FOO` is the origin field's name) to your `ModelAdmin` or `*Inline` definition. To override the title given to the new field, pass a second string argument to the decorator:\n\n```python\n@admin_thumbnails.thumbnail('image', 'Thumbnail')\n```\n\nTo add the thumbnail to the columns shown in the model's list view, add the new field name to `list_display`:\n\n```python\n@admin.register(models.Person)\n@admin_thumbnails.thumbnail('image')\nclass PersonAdmin(admin.ModelAdmin):\n    list_display = ('name', 'image_thumbnail')\n```\n\nOr include it in your `fieldsets` similarly:\n\n```python\n@admin.register(models.Person)\n@admin_thumbnails.thumbnail('image')\nclass PersonAdmin(admin.ModelAdmin):\n    fieldsets = (\n        (None, {\n            'fields': ('name', 'image_thumbnail'),\n        }),\n    )\n```\n\nBy default the new field will be appended to the `readonly_fields` tuple \u2013 if this is undesirable (e.g. if you want to include the thumbnail in the list view but _not_ in the default form fields), pass `append=False` to the decorator:\n\n```python\n@admin.register(models.Person)\n@admin_thumbnails.thumbnail('image', append=False)\nclass PersonAdmin(admin.ModelAdmin):\n    list_display = ('name', 'image_thumbnail')\n```\n\nThis isn't necessary if you're using `fieldsets`, as by doing so you will control the inclusion (or omission) and position of the thumbnail field.\n\nIf your field contains images that are designed to be shown on a dark background, you can supply `background=True` to the decorator to add one to the thumbnail (via CSS) when displayed:\n\n```python\n@admin_thumbnails.thumbnail('image', background=True)\n```\n\nIf you're using `easy_thumbnails` and want to override the alias used to generate your thumbnail on a per-field basis (as opposed to using the `ADMIN_THUMBNAIL_THUMBNAIL_ALIAS` setting; see below), you can use the `alias` argument to the decorator:\n\n```python\n@admin_thumbnails.thumbnail('image', alias='admin_thumbnail_alternative')\n```\n\n## Configuration\n\n### `ADMIN_THUMBNAIL_DEFAULT_LABEL`\n\n**Default:** `'Preview'`\n\nSetting this overrides the default column name / title used by thumbnails.\n\n### `ADMIN_THUMBNAIL_FIELD_SUFFIX`\n\n**Default:** `'_thumbnail'`\n\nSetting this overrides the suffix given to newly created thumbnail fields. Change if you have collision issues with other field names you want to use. Don't forget to update `list_display` and/or `fieldsets` in your `ModelAdmin` as necessary.\n\n### `ADMIN_THUMBNAIL_THUMBNAIL_ALIAS`\n\n**Default:** `'admin_thumbnail'`\n\nIf `easy_thumbnails` is installed and available, any model field using `ThumbnailerImageField` will be resized using a thumbnail alias called `admin_thumbnail` if it's defined. You can either define this alias in your settings (more info from the `easy_thumbnails` documentation [here](https://easy-thumbnails.readthedocs.io/en/stable/usage/#thumbnail-aliases)) or supply a different alias name as the value of this setting.\n\n### `ADMIN_THUMBNAIL_STYLE`\n\n**Default:** `{'display': 'block', 'width': '100px', 'height': 'auto'}`\n\nA dictionary of CSS property/value pairs that will be added to the `style` attribute of any thumbnail image when output in the admin. Override to supply your own styles.\n\n### `ADMIN_THUMBNAIL_BACKGROUND_STYLE`\n\n**Default:** `{'background': '#000'}`\n\nA dictionary of CSS property/value pairs added when the `background=True` option is used (see **Usage** above). Override to supply your own styles. Note that these styles are used _in addition_ to any defined in `ADMIN_THUMBNAIL_STYLE`.\n\n## Development Installation\n\nIf working locally on the package you can install the development tools via `pip`:\n\n```shell\n$ pip install -e .[dev]\n```\n\nTo lint with `flake8`:\n\n```shell\n$ flake8\n```\n\n## Issues, Suggestions, Contributions\n\n...are welcome on GitHub. Thanks for your interest in `django-admin-thumbnails`!", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/BigglesZX/django-admin-thumbnails", "keywords": "django", "license": "MIT", "maintainer": "James Tiplady", "maintainer_email": "", "name": "django-admin-thumbnails", "package_url": "https://pypi.org/project/django-admin-thumbnails/", "platform": "OS Independent", "project_url": "https://pypi.org/project/django-admin-thumbnails/", "project_urls": {"Homepage": "http://github.com/BigglesZX/django-admin-thumbnails"}, "release_url": "https://pypi.org/project/django-admin-thumbnails/0.2.5/", "requires_dist": null, "requires_python": ">=2.6,<4", "summary": "A Django app for DRY thumbnails in admin list views and forms.", "version": "0.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-admin-thumbnails</h1>\n<p>A Django app to assist in adding thumbnails for your model's image fields to admin list views and forms in a reasonably DRY manner.</p>\n<h2>Rationale</h2>\n<p>When working with models that include <code>ImageField</code>s, <code>FileField</code>s or when using <code>ThumbnailerImageField</code> from <code>easy_thumbnails</code>, it can often be desirable to include a thumbnail preview of the field as part of the admin form, fieldset or in list views. Various methods to achieve this exist but all seem to involve a degree of duplication. I've made a few attempts to DRY out such code over the years and this library represents my most recent solution. So, please enjoy!</p>\n<h2>Compatibility</h2>\n<p>I've not long upgraded to Django 2/3 and Python 3, so have not exhaustively tested all the below combinations, however I believe this table to be accurate.</p>\n<table>\n<thead>\n<tr>\n<th align=\"right\"></th>\n<th align=\"center\">Django 1.10</th>\n<th align=\"center\">1.11</th>\n<th align=\"center\">2.0</th>\n<th align=\"center\">2.1</th>\n<th align=\"center\">2.2</th>\n<th align=\"center\">3.0</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><strong>Python</strong> 2.7</td>\n<td align=\"center\">\u2714</td>\n<td align=\"center\">\u2714</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"right\">3.6</td>\n<td align=\"center\">\u2714</td>\n<td align=\"center\">\u2714</td>\n<td align=\"center\">\u2714</td>\n<td align=\"center\">\u2714</td>\n<td align=\"center\">\u2714</td>\n<td align=\"center\">\u2714</td>\n</tr></tbody></table>\n<h2>Installation</h2>\n<pre><code>$ pip install django-admin-thumbnails\n</code></pre>\n<h2>Usage</h2>\n<p>The app adds fields to your <code>ModelAdmin</code> or <code>*Inline</code> class; one for each thumbnail you want to display. These are appended to the class's <code>readonly_fields</code> tuple (unless you specify otherwise) so they will be displayed at the bottom of your admin form, or you can include them by name in your <code>fieldsets</code> or <code>list_display</code> definitions.</p>\n<p><code>django-admin-thumbnails</code> will handle <code>ImageField</code>, <code>FileField</code> (so you can use SVG, for example) and (if <code>easy_thumbnails</code> is installed) <code>ThumbnailerImageField</code>. In the latter case a thumbnail alias will be used, which you can specify in settings.</p>\n<p>To create an admin thumbnail field, decorate your <code>ModelAdmin</code> or <code>*Inline</code> class and optionally specify what to do with the newly created field.</p>\n<p>Assuming a model like the following:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"s1\">'Name'</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImageField</span><span class=\"p\">(</span><span class=\"s1\">'Image'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># ...</span>\n</pre>\n<p>In the simplest use-case, to add a thumbnail field to the bottom of the admin form, simply decorate the <code>ModelAdmin</code> or <code>*Inline</code> class (the order of decorators is important), supplying the name of the field from which the thumbnail will be taken:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">admin_thumbnails</span>\n\n<span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"p\">)</span>\n<span class=\"nd\">@admin_thumbnails</span><span class=\"o\">.</span><span class=\"n\">thumbnail</span><span class=\"p\">(</span><span class=\"s1\">'image'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>This will add a field called <code>image_thumbnail</code> (<code>FOO_thumbnail</code> where <code>FOO</code> is the origin field's name) to your <code>ModelAdmin</code> or <code>*Inline</code> definition. To override the title given to the new field, pass a second string argument to the decorator:</p>\n<pre><span class=\"nd\">@admin_thumbnails</span><span class=\"o\">.</span><span class=\"n\">thumbnail</span><span class=\"p\">(</span><span class=\"s1\">'image'</span><span class=\"p\">,</span> <span class=\"s1\">'Thumbnail'</span><span class=\"p\">)</span>\n</pre>\n<p>To add the thumbnail to the columns shown in the model's list view, add the new field name to <code>list_display</code>:</p>\n<pre><span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"p\">)</span>\n<span class=\"nd\">@admin_thumbnails</span><span class=\"o\">.</span><span class=\"n\">thumbnail</span><span class=\"p\">(</span><span class=\"s1\">'image'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'image_thumbnail'</span><span class=\"p\">)</span>\n</pre>\n<p>Or include it in your <code>fieldsets</code> similarly:</p>\n<pre><span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"p\">)</span>\n<span class=\"nd\">@admin_thumbnails</span><span class=\"o\">.</span><span class=\"n\">thumbnail</span><span class=\"p\">(</span><span class=\"s1\">'image'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">fieldsets</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'fields'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'image_thumbnail'</span><span class=\"p\">),</span>\n        <span class=\"p\">}),</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>By default the new field will be appended to the <code>readonly_fields</code> tuple \u2013 if this is undesirable (e.g. if you want to include the thumbnail in the list view but <em>not</em> in the default form fields), pass <code>append=False</code> to the decorator:</p>\n<pre><span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"p\">)</span>\n<span class=\"nd\">@admin_thumbnails</span><span class=\"o\">.</span><span class=\"n\">thumbnail</span><span class=\"p\">(</span><span class=\"s1\">'image'</span><span class=\"p\">,</span> <span class=\"n\">append</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'image_thumbnail'</span><span class=\"p\">)</span>\n</pre>\n<p>This isn't necessary if you're using <code>fieldsets</code>, as by doing so you will control the inclusion (or omission) and position of the thumbnail field.</p>\n<p>If your field contains images that are designed to be shown on a dark background, you can supply <code>background=True</code> to the decorator to add one to the thumbnail (via CSS) when displayed:</p>\n<pre><span class=\"nd\">@admin_thumbnails</span><span class=\"o\">.</span><span class=\"n\">thumbnail</span><span class=\"p\">(</span><span class=\"s1\">'image'</span><span class=\"p\">,</span> <span class=\"n\">background</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>If you're using <code>easy_thumbnails</code> and want to override the alias used to generate your thumbnail on a per-field basis (as opposed to using the <code>ADMIN_THUMBNAIL_THUMBNAIL_ALIAS</code> setting; see below), you can use the <code>alias</code> argument to the decorator:</p>\n<pre><span class=\"nd\">@admin_thumbnails</span><span class=\"o\">.</span><span class=\"n\">thumbnail</span><span class=\"p\">(</span><span class=\"s1\">'image'</span><span class=\"p\">,</span> <span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"s1\">'admin_thumbnail_alternative'</span><span class=\"p\">)</span>\n</pre>\n<h2>Configuration</h2>\n<h3><code>ADMIN_THUMBNAIL_DEFAULT_LABEL</code></h3>\n<p><strong>Default:</strong> <code>'Preview'</code></p>\n<p>Setting this overrides the default column name / title used by thumbnails.</p>\n<h3><code>ADMIN_THUMBNAIL_FIELD_SUFFIX</code></h3>\n<p><strong>Default:</strong> <code>'_thumbnail'</code></p>\n<p>Setting this overrides the suffix given to newly created thumbnail fields. Change if you have collision issues with other field names you want to use. Don't forget to update <code>list_display</code> and/or <code>fieldsets</code> in your <code>ModelAdmin</code> as necessary.</p>\n<h3><code>ADMIN_THUMBNAIL_THUMBNAIL_ALIAS</code></h3>\n<p><strong>Default:</strong> <code>'admin_thumbnail'</code></p>\n<p>If <code>easy_thumbnails</code> is installed and available, any model field using <code>ThumbnailerImageField</code> will be resized using a thumbnail alias called <code>admin_thumbnail</code> if it's defined. You can either define this alias in your settings (more info from the <code>easy_thumbnails</code> documentation <a href=\"https://easy-thumbnails.readthedocs.io/en/stable/usage/#thumbnail-aliases\" rel=\"nofollow\">here</a>) or supply a different alias name as the value of this setting.</p>\n<h3><code>ADMIN_THUMBNAIL_STYLE</code></h3>\n<p><strong>Default:</strong> <code>{'display': 'block', 'width': '100px', 'height': 'auto'}</code></p>\n<p>A dictionary of CSS property/value pairs that will be added to the <code>style</code> attribute of any thumbnail image when output in the admin. Override to supply your own styles.</p>\n<h3><code>ADMIN_THUMBNAIL_BACKGROUND_STYLE</code></h3>\n<p><strong>Default:</strong> <code>{'background': '#000'}</code></p>\n<p>A dictionary of CSS property/value pairs added when the <code>background=True</code> option is used (see <strong>Usage</strong> above). Override to supply your own styles. Note that these styles are used <em>in addition</em> to any defined in <code>ADMIN_THUMBNAIL_STYLE</code>.</p>\n<h2>Development Installation</h2>\n<p>If working locally on the package you can install the development tools via <code>pip</code>:</p>\n<pre>$ pip install -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\n</pre>\n<p>To lint with <code>flake8</code>:</p>\n<pre>$ flake8\n</pre>\n<h2>Issues, Suggestions, Contributions</h2>\n<p>...are welcome on GitHub. Thanks for your interest in <code>django-admin-thumbnails</code>!</p>\n\n          </div>"}, "last_serial": 6984642, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "47a678c32009ffa685125fb49d3c137f", "sha256": "6d28bf5adb1900c9d4107945f8c6d9695908e6588cf48d6a24d69c8452b151b4"}, "downloads": -1, "filename": "django-admin-thumbnails-0.1.0.tar.gz", "has_sig": false, "md5_digest": "47a678c32009ffa685125fb49d3c137f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5549, "upload_time": "2019-04-07T15:39:54", "upload_time_iso_8601": "2019-04-07T15:39:54.929028Z", "url": "https://files.pythonhosted.org/packages/3e/06/8630bd5de6167c1e02147c8d3d466aefab7b1e5208fd26537f1c55b447a3/django-admin-thumbnails-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ed14051cbe8ffbab4ec4ccda7dd7fce0", "sha256": "b4499a8d3638fabd2cc36d3f7d849f49e7b721030d7d00f92c837af0571e6a21"}, "downloads": -1, "filename": "django-admin-thumbnails-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ed14051cbe8ffbab4ec4ccda7dd7fce0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5618, "upload_time": "2019-04-07T16:00:47", "upload_time_iso_8601": "2019-04-07T16:00:47.152267Z", "url": "https://files.pythonhosted.org/packages/76/7c/05b426246aace713d45dffc85f115865a8fc6276e84bf00747eb3711a32a/django-admin-thumbnails-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "07d1ed319a4b44c65095acd17ae2bafd", "sha256": "571bb86b76a96aedb196d0dde04e3bbfdb7bdb86bf653c9d09a92cf7a0d40167"}, "downloads": -1, "filename": "django-admin-thumbnails-0.1.2.tar.gz", "has_sig": false, "md5_digest": "07d1ed319a4b44c65095acd17ae2bafd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5805, "upload_time": "2019-04-16T19:43:34", "upload_time_iso_8601": "2019-04-16T19:43:34.848375Z", "url": "https://files.pythonhosted.org/packages/61/0d/1583b80f8d90303ecb0451a827f247bb21b4b09e170761a9b716de1d1a7d/django-admin-thumbnails-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "57d42ccd592174152e3c05259c76c162", "sha256": "4ebcdd9a4f0492c0c2710da580f940f24a72cdde0bc6e0ec100ed22ada1c560d"}, "downloads": -1, "filename": "django-admin-thumbnails-0.2.0.tar.gz", "has_sig": false, "md5_digest": "57d42ccd592174152e3c05259c76c162", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6,<4", "size": 6091, "upload_time": "2019-10-10T10:29:55", "upload_time_iso_8601": "2019-10-10T10:29:55.280480Z", "url": "https://files.pythonhosted.org/packages/26/5b/a01fbd8bd9c2667885f560786e305d19cce70828083ae85f9b78cd0a2fd2/django-admin-thumbnails-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "aac49df1fd05df14fb589cb8ecf8a9df", "sha256": "bf53921d11c225cc43b425d9c2e7564faced54d5f3a25d4a507e9bce157e04b6"}, "downloads": -1, "filename": "django-admin-thumbnails-0.2.2.tar.gz", "has_sig": false, "md5_digest": "aac49df1fd05df14fb589cb8ecf8a9df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6,<4", "size": 6075, "upload_time": "2019-10-10T10:37:10", "upload_time_iso_8601": "2019-10-10T10:37:10.238799Z", "url": "https://files.pythonhosted.org/packages/0f/c7/3be5d193102f76f6198716cefb31d58b00e008ab80b931114d25a87bdc39/django-admin-thumbnails-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "a8478e593288d1e97d09178e607bdf0b", "sha256": "bc4fe5707e2f7511d34c9a003301a0f45178cffa6d0d18c39f5a7aa16c9d8603"}, "downloads": -1, "filename": "django-admin-thumbnails-0.2.3.tar.gz", "has_sig": false, "md5_digest": "a8478e593288d1e97d09178e607bdf0b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6,<4", "size": 6201, "upload_time": "2019-11-03T10:12:28", "upload_time_iso_8601": "2019-11-03T10:12:28.446267Z", "url": "https://files.pythonhosted.org/packages/38/f7/a6de31dd665430050259da9cb5bbe709484aca59e5893fe261abe89d59cb/django-admin-thumbnails-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "cab81017a914ba20d9c9b92dc2881686", "sha256": "682c4f7a21c30419cec89dc82030ebe63eb6765408d1615a9ecc76616ad5e1d6"}, "downloads": -1, "filename": "django-admin-thumbnails-0.2.4.tar.gz", "has_sig": false, "md5_digest": "cab81017a914ba20d9c9b92dc2881686", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6,<4", "size": 6209, "upload_time": "2020-01-11T15:44:43", "upload_time_iso_8601": "2020-01-11T15:44:43.657438Z", "url": "https://files.pythonhosted.org/packages/69/f4/1695c2c682564de6626fa435b17766ece7b988c1364490c827d93dd1c809/django-admin-thumbnails-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "b62eb8dbe619c9b05329158ac9af9c67", "sha256": "eadea467f9ea0d101edf7871cff6c0f667566ae94036636ef979ed66e7ab2fe3"}, "downloads": -1, "filename": "django-admin-thumbnails-0.2.5.tar.gz", "has_sig": false, "md5_digest": "b62eb8dbe619c9b05329158ac9af9c67", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6,<4", "size": 6197, "upload_time": "2020-04-09T09:53:19", "upload_time_iso_8601": "2020-04-09T09:53:19.352721Z", "url": "https://files.pythonhosted.org/packages/57/3b/8ca0c6ca048c1cf322b8e4ae9de9c521a4d80f25a010e9c1fad260a63c5a/django-admin-thumbnails-0.2.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b62eb8dbe619c9b05329158ac9af9c67", "sha256": "eadea467f9ea0d101edf7871cff6c0f667566ae94036636ef979ed66e7ab2fe3"}, "downloads": -1, "filename": "django-admin-thumbnails-0.2.5.tar.gz", "has_sig": false, "md5_digest": "b62eb8dbe619c9b05329158ac9af9c67", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6,<4", "size": 6197, "upload_time": "2020-04-09T09:53:19", "upload_time_iso_8601": "2020-04-09T09:53:19.352721Z", "url": "https://files.pythonhosted.org/packages/57/3b/8ca0c6ca048c1cf322b8e4ae9de9c521a4d80f25a010e9c1fad260a63c5a/django-admin-thumbnails-0.2.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:46 2020"}