{"info": {"author": "Leonid Runyshkin", "author_email": "runyshkin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "steamfiles\n==========\n\n.. image:: https://badge.fury.io/py/steamfiles.svg\n    :target: http://badge.fury.io/py/steamfiles\n    :alt: Latest version\n\n.. image:: https://travis-ci.org/leovp/steamfiles.svg?branch=master\n    :target: https://travis-ci.org/leovp/steamfiles\n    :alt: Travis-CI\n\n.. image:: https://coveralls.io/repos/github/leovp/steamfiles/badge.svg\n    :target: https://coveralls.io/github/leovp/steamfiles\n    :alt: Coverage\n\n| Python library for parsing the most common Steam file formats.\n| The library has a familiar JSON-like interface: ``load()`` / ``loads()`` for loading the data,\n| and ``dump()`` / ``dumps()`` for saving the data back to the file.\n\nFormat support\n--------------\n\n+-------------+-------+-------+\n|             | Read  | Write |\n+-------------+-------+-------+\n| acf         | **+** | **+** |\n+-------------+-------+-------+\n| appinfo.vdf | **+** | **+** |\n+-------------+-------+-------+\n| Manifest    | **+** | **+** |\n+-------------+-------+-------+\n\nQuickstart\n----------\n\n`steamfiles` requires Python 3.5+\n\nInstall the latest stable version:\n\n::\n\n    pip install steamfiles\n\nImport a module for your desired format:\n::\n\n    # Use one of these, or all at once!\n    from steamfiles import acf\n    from steamfiles import appinfo\n    from steamfiles import manifest\n\nEasily load data, modify it and dump back:\n::\n\n    with open('appinfo.vdf', 'rb') as f:\n        data = appinfo.load(f)\n        \n    # Calculate the total size of all apps.\n    total_size = sum(app['size'] for app in data.values())\n    print(total_size)\n    \n    # Downgrade a change number for all apps.\n    for app in data.values():\n        app['change_number'] -= 1\n    \n    with open('new_appinfo.vdf', 'wb') as f:\n        appinfo.dump(data, f)\n\nCaution: all formats are parsed into `dict` by default, so the order of data is very likely not the same.\nAs I'm not sure how Steam and related tools deal with rearranged data, pass an `OrderedDict` class to the `wrapper` parameter if you plan to write data back and use it later:\n::\n\n    from collection import OrderedDict\n    data = acf.load(f, wrapper=OrderedDict)\n    # works with other formats as well\n\nDocumentation\n-------------\n\n`ACF format overview <https://github.com/leovp/steamfiles/blob/master/docs/acf_overview.rst>`_\n\nMore in progress\u2026\n\nTODO\n----\n\n- [\u2713] ACF support\n- [\u2713] appinfo.vdf support (Binary VDF)\n- [\u2713] Manifest support\n- [?] packageinfo.vdf (Another binary VDF)\n- [?] UserGameStats (achievements)\n- [?] Text VDF files (are they actually ACF?)\n\nLicense\n-------\n\n`steamfiles` is distributed under the terms of the MIT license.\n\nSee the bundled `LICENSE <https://github.com/leovp/steamfiles/blob/master/LICENSE>`_ file for more details.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/leovp/steamfiles", "keywords": "steam files valve format parse appinfo vdf acf manifest", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "steamfiles", "package_url": "https://pypi.org/project/steamfiles/", "platform": "any", "project_url": "https://pypi.org/project/steamfiles/", "project_urls": {"Homepage": "https://github.com/leovp/steamfiles"}, "release_url": "https://pypi.org/project/steamfiles/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Python library for parsing the most common Steam file formats.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/steamfiles\" rel=\"nofollow\"><img alt=\"Latest version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99355d9d9755e2d3fd4f389e29557add4d74f0be/68747470733a2f2f62616467652e667572792e696f2f70792f737465616d66696c65732e737667\"></a>\n<a href=\"https://travis-ci.org/leovp/steamfiles\" rel=\"nofollow\"><img alt=\"Travis-CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4dca305328c6cce68c180ae8e688f329fc15017c/68747470733a2f2f7472617669732d63692e6f72672f6c656f76702f737465616d66696c65732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/leovp/steamfiles\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/debde8c63fd5788d3f29f2354ebecbfa74d007e7/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6c656f76702f737465616d66696c65732f62616467652e737667\"></a>\n<div>\n<div>Python library for parsing the most common Steam file formats.</div>\n<div>The library has a familiar JSON-like interface: <tt>load()</tt> / <tt>loads()</tt> for loading the data,</div>\n<div>and <tt>dump()</tt> / <tt>dumps()</tt> for saving the data back to the file.</div>\n</div>\n<div id=\"format-support\">\n<h2>Format support</h2>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>\u00a0</td>\n<td>Read</td>\n<td>Write</td>\n</tr>\n<tr><td>acf</td>\n<td><strong>+</strong></td>\n<td><strong>+</strong></td>\n</tr>\n<tr><td>appinfo.vdf</td>\n<td><strong>+</strong></td>\n<td><strong>+</strong></td>\n</tr>\n<tr><td>Manifest</td>\n<td><strong>+</strong></td>\n<td><strong>+</strong></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p><cite>steamfiles</cite> requires Python 3.5+</p>\n<p>Install the latest stable version:</p>\n<pre>pip install steamfiles\n</pre>\n<p>Import a module for your desired format:</p>\n<pre># Use one of these, or all at once!\nfrom steamfiles import acf\nfrom steamfiles import appinfo\nfrom steamfiles import manifest\n</pre>\n<p>Easily load data, modify it and dump back:</p>\n<pre>with open('appinfo.vdf', 'rb') as f:\n    data = appinfo.load(f)\n\n# Calculate the total size of all apps.\ntotal_size = sum(app['size'] for app in data.values())\nprint(total_size)\n\n# Downgrade a change number for all apps.\nfor app in data.values():\n    app['change_number'] -= 1\n\nwith open('new_appinfo.vdf', 'wb') as f:\n    appinfo.dump(data, f)\n</pre>\n<p>Caution: all formats are parsed into <cite>dict</cite> by default, so the order of data is very likely not the same.\nAs I\u2019m not sure how Steam and related tools deal with rearranged data, pass an <cite>OrderedDict</cite> class to the <cite>wrapper</cite> parameter if you plan to write data back and use it later:</p>\n<pre>from collection import OrderedDict\ndata = acf.load(f, wrapper=OrderedDict)\n# works with other formats as well\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p><a href=\"https://github.com/leovp/steamfiles/blob/master/docs/acf_overview.rst\" rel=\"nofollow\">ACF format overview</a></p>\n<p>More in progress\u2026</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>[\u2713] ACF support</li>\n<li>[\u2713] appinfo.vdf support (Binary VDF)</li>\n<li>[\u2713] Manifest support</li>\n<li>[?] packageinfo.vdf (Another binary VDF)</li>\n<li>[?] UserGameStats (achievements)</li>\n<li>[?] Text VDF files (are they actually ACF?)</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><cite>steamfiles</cite> is distributed under the terms of the MIT license.</p>\n<p>See the bundled <a href=\"https://github.com/leovp/steamfiles/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> file for more details.</p>\n</div>\n\n          </div>"}, "last_serial": 6424242, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f9f7839c58d62851eab9e8f07f6b1855", "sha256": "85c0bf5b9c6a9f9b8baf7a2506c788df86e736b62360017b7f7d26941396144c"}, "downloads": -1, "filename": "steamfiles-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f9f7839c58d62851eab9e8f07f6b1855", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7901, "upload_time": "2016-05-12T13:44:34", "upload_time_iso_8601": "2016-05-12T13:44:34.157993Z", "url": "https://files.pythonhosted.org/packages/e1/a9/d5d6e04a132642f2a06a5fee2bd2be1ad788055ed1a44d2c3271d08f7981/steamfiles-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "933caa737e62b942c8107c54d364f9ae", "sha256": "f844cf8c54cb31bdd4ec7d1a32314a47cd53fe35f8fedeab7245fe810b1c8246"}, "downloads": -1, "filename": "steamfiles-0.1.1.tar.gz", "has_sig": false, "md5_digest": "933caa737e62b942c8107c54d364f9ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7954, "upload_time": "2016-05-12T13:57:56", "upload_time_iso_8601": "2016-05-12T13:57:56.270315Z", "url": "https://files.pythonhosted.org/packages/6a/48/018169f470667f4c9d01b50495e6bfbe0c65a2fc8ff4a53c0e1de634ccce/steamfiles-0.1.1.tar.gz", "yanked": false}], "0.1.2": [], "0.1.3": [{"comment_text": "", "digests": {"md5": "359f5ced14433bdb57e74bf935d168f3", "sha256": "ac4fe4866481850032f6bf4543387a8ef1b08bfca208919ba37071a4c5a788d4"}, "downloads": -1, "filename": "steamfiles-0.1.3.tar.gz", "has_sig": false, "md5_digest": "359f5ced14433bdb57e74bf935d168f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10661, "upload_time": "2017-07-16T09:58:13", "upload_time_iso_8601": "2017-07-16T09:58:13.909781Z", "url": "https://files.pythonhosted.org/packages/47/c0/fd94c8dacbe9f3762ddb21e6a52f5042def002f786b5cc5eb873412ad245/steamfiles-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "edf362d89f5f52711d3fed16ed71e95f", "sha256": "b55c16897fb75e4a357ac02b1cba0feeffe1074204a07696dbba07c0574a71c5"}, "downloads": -1, "filename": "steamfiles-0.1.4.tar.gz", "has_sig": false, "md5_digest": "edf362d89f5f52711d3fed16ed71e95f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11459, "upload_time": "2020-01-09T19:52:22", "upload_time_iso_8601": "2020-01-09T19:52:22.553335Z", "url": "https://files.pythonhosted.org/packages/7a/f4/a55dad3536ce0547c87e49d744797bcaa2474a5363ef688576ac60c3d3c2/steamfiles-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "edf362d89f5f52711d3fed16ed71e95f", "sha256": "b55c16897fb75e4a357ac02b1cba0feeffe1074204a07696dbba07c0574a71c5"}, "downloads": -1, "filename": "steamfiles-0.1.4.tar.gz", "has_sig": false, "md5_digest": "edf362d89f5f52711d3fed16ed71e95f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11459, "upload_time": "2020-01-09T19:52:22", "upload_time_iso_8601": "2020-01-09T19:52:22.553335Z", "url": "https://files.pythonhosted.org/packages/7a/f4/a55dad3536ce0547c87e49d744797bcaa2474a5363ef688576ac60c3d3c2/steamfiles-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:12 2020"}