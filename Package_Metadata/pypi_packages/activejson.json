{"info": {"author": "Daniel Omar Vergara P\u00e9rez", "author_email": "daniel.omar.vergara@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# Activejson\n\n[![PyPI version](https://badge.fury.io/py/activejson.svg)](https://badge.fury.io/py/activejson)\n[![Tests](https://github.com/BentoBox-Project/activejson/workflows/Tests/badge.svg)](https://github.com/BentoBox-Project/activejson/actions?workflow=Tests)\n[![Codecov](https://codecov.io/gh/BentoBox-Project/activejson/branch/master/graph/badge.svg)](https://codecov.io/gh/BentoBox-Project/activejson)\n\n> A convenient library to deal with large json data\n\nA convenient library to deal with large json data. The purpose of this package is help to deal with complex json-like data, converting them into a more manageable data structure.\n\n## Installation\n\nOS X & Linux:\n\nFrom PYPI\n\n```sh\n$ pip3 install activejson\n```\n\nfrom the source\n\n```sh\n$ git clone https://github.com/dany2691/activejson.git\n$ cd activejson\n$ python3 setup.py install\n```\n\n## Usage example\n\nYou can flat a complex dict the next way:\n\n```python\ncomplex_json = {\n    'cat': {'grass': 'feline', 'mud': 'you never know', 'horse': 'my joke'},\n    'dolphin': [\n        {'tiger': [{'bird': 'blue jay'}, {'fish': 'dolphin'}]},\n        {'cat2': 'feline'},\n       {'dog2': 'canine'}\n  ],\n  'dog': 'canine'\n}\n```\n\n```python\nfrom activejson import flatten_json\n\nflatten_complex_json = flatten_json(complex_json)\n\nprint(flatten_complex_json)\n```\n\nThe result could be the next:\n\n```sh\n{\n    'cat_grass': 'feline',\n    'cat_horse': 'my joke',\n    'cat_mud': 'you never know',\n    'dog': 'canine',\n    'dolphin_0_tiger_0_bird': 'blue jay',\n    'dolphin_0_tiger_1_fish': 'dolphin',\n    'dolphin_1_cat2': 'feline',\n    'dolphin_2_dog2': 'canine'\n}\n```\n\nOn the other hand, is possible to convert that dict into an object with dynamic attributes:\n\n```python\nfrom activejson import FrozenJSON\n\nfrozen_complex_json = FrozenJSON(complex_json)\n\nprint(frozen_complex_json.cat.grass)\nprint(frozen_complex_json.cat.mud)\nprint(frozen_b.dolphin[2].dog2)\n```\n\nThe result could be the next:\n\n```sh\n'feline'\n'you never know'\n'canine'\n```\n\nTo retrieve the underlying json, is possible to use the json property:\n\n```python\nfrozen_complex_json.json\n```\n\n```sh\n{\n    'cat_grass': 'feline',\n    'cat_horse': 'my joke',\n    'cat_mud': 'you never know',\n    'dog': 'canine',\n    'dolphin_0_tiger_0_bird': 'blue jay',\n    'dolphin_0_tiger_1_fish': 'dolphin',\n    'dolphin_1_cat2': 'feline',\n    'dolphin_2_dog2': 'canine'\n}\n```\n\n# Development setup\n\nThis project uses __Poetry__ for dependecy resolution. It's a kind of mix between\npip and virtualenv. Follow the next instructions to setup the development enviroment.\n\n\n```sh\n$ pip install poetry\n```\n\n\n```sh\n$ git clone https://github.com/dany2691/activejson.git\n$ cd activejson\n$ poetry install\n```\n\nTo run the test-suite, inside the pybundler directory:\n\n```shell\n$ poetry run pytest test/ -vv\n```\n\n## Meta\n\nDaniel Omar Vergara P\u00e9rez \u2013 [@__danvergara __](https://twitter.com/__danvergara__) \u2013 daniel.omar.vergara@gmail.com -- [github.com/danvergara](https://github.com/danvergara)\n\nValery Briz - [@valerybriz](https://twitter.com/valerybriz) -- [github.com/valerybriz](https://github.com/valerybriz)\n\n\n\n## Contributing\n\n1. Fork it (<https://github.com/BentoBox-Project/activejson>)\n2. Create your feature branch (`git checkout -b feature/fooBar`)\n3. Commit your changes (`git commit -am 'Add some fooBar'`)\n4. Push to the branch (`git push origin feature/fooBar`)\n5. Create a new Pull Request\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "activejson", "package_url": "https://pypi.org/project/activejson/", "platform": "", "project_url": "https://pypi.org/project/activejson/", "project_urls": null, "release_url": "https://pypi.org/project/activejson/0.4.0/", "requires_dist": null, "requires_python": ">=3.6,<4.0", "summary": "A convenient library to deal with large json data", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Activejson</h1>\n<p><a href=\"https://badge.fury.io/py/activejson\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8829da31a4e208821b4e06be49fb263d87d4d73c/68747470733a2f2f62616467652e667572792e696f2f70792f6163746976656a736f6e2e737667\"></a>\n<a href=\"https://github.com/BentoBox-Project/activejson/actions?workflow=Tests\" rel=\"nofollow\"><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8116c4ba6d532263f8b2643663bf1b2910e482b/68747470733a2f2f6769746875622e636f6d2f42656e746f426f782d50726f6a6563742f6163746976656a736f6e2f776f726b666c6f77732f54657374732f62616467652e737667\"></a>\n<a href=\"https://codecov.io/gh/BentoBox-Project/activejson\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee6514d12c7598d4067e643c69055336f68b7064/68747470733a2f2f636f6465636f762e696f2f67682f42656e746f426f782d50726f6a6563742f6163746976656a736f6e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<blockquote>\n<p>A convenient library to deal with large json data</p>\n</blockquote>\n<p>A convenient library to deal with large json data. The purpose of this package is help to deal with complex json-like data, converting them into a more manageable data structure.</p>\n<h2>Installation</h2>\n<p>OS X &amp; Linux:</p>\n<p>From PYPI</p>\n<pre>$ pip3 install activejson\n</pre>\n<p>from the source</p>\n<pre>$ git clone https://github.com/dany2691/activejson.git\n$ <span class=\"nb\">cd</span> activejson\n$ python3 setup.py install\n</pre>\n<h2>Usage example</h2>\n<p>You can flat a complex dict the next way:</p>\n<pre><span class=\"n\">complex_json</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'cat'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'grass'</span><span class=\"p\">:</span> <span class=\"s1\">'feline'</span><span class=\"p\">,</span> <span class=\"s1\">'mud'</span><span class=\"p\">:</span> <span class=\"s1\">'you never know'</span><span class=\"p\">,</span> <span class=\"s1\">'horse'</span><span class=\"p\">:</span> <span class=\"s1\">'my joke'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'dolphin'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span><span class=\"s1\">'tiger'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'bird'</span><span class=\"p\">:</span> <span class=\"s1\">'blue jay'</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'fish'</span><span class=\"p\">:</span> <span class=\"s1\">'dolphin'</span><span class=\"p\">}]},</span>\n        <span class=\"p\">{</span><span class=\"s1\">'cat2'</span><span class=\"p\">:</span> <span class=\"s1\">'feline'</span><span class=\"p\">},</span>\n       <span class=\"p\">{</span><span class=\"s1\">'dog2'</span><span class=\"p\">:</span> <span class=\"s1\">'canine'</span><span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"s1\">'dog'</span><span class=\"p\">:</span> <span class=\"s1\">'canine'</span>\n<span class=\"p\">}</span>\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">activejson</span> <span class=\"kn\">import</span> <span class=\"n\">flatten_json</span>\n\n<span class=\"n\">flatten_complex_json</span> <span class=\"o\">=</span> <span class=\"n\">flatten_json</span><span class=\"p\">(</span><span class=\"n\">complex_json</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">flatten_complex_json</span><span class=\"p\">)</span>\n</pre>\n<p>The result could be the next:</p>\n<pre><span class=\"o\">{</span>\n    <span class=\"s1\">'cat_grass'</span>: <span class=\"s1\">'feline'</span>,\n    <span class=\"s1\">'cat_horse'</span>: <span class=\"s1\">'my joke'</span>,\n    <span class=\"s1\">'cat_mud'</span>: <span class=\"s1\">'you never know'</span>,\n    <span class=\"s1\">'dog'</span>: <span class=\"s1\">'canine'</span>,\n    <span class=\"s1\">'dolphin_0_tiger_0_bird'</span>: <span class=\"s1\">'blue jay'</span>,\n    <span class=\"s1\">'dolphin_0_tiger_1_fish'</span>: <span class=\"s1\">'dolphin'</span>,\n    <span class=\"s1\">'dolphin_1_cat2'</span>: <span class=\"s1\">'feline'</span>,\n    <span class=\"s1\">'dolphin_2_dog2'</span>: <span class=\"s1\">'canine'</span>\n<span class=\"o\">}</span>\n</pre>\n<p>On the other hand, is possible to convert that dict into an object with dynamic attributes:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">activejson</span> <span class=\"kn\">import</span> <span class=\"n\">FrozenJSON</span>\n\n<span class=\"n\">frozen_complex_json</span> <span class=\"o\">=</span> <span class=\"n\">FrozenJSON</span><span class=\"p\">(</span><span class=\"n\">complex_json</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">frozen_complex_json</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"o\">.</span><span class=\"n\">grass</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">frozen_complex_json</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"o\">.</span><span class=\"n\">mud</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">frozen_b</span><span class=\"o\">.</span><span class=\"n\">dolphin</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dog2</span><span class=\"p\">)</span>\n</pre>\n<p>The result could be the next:</p>\n<pre><span class=\"s1\">'feline'</span>\n<span class=\"s1\">'you never know'</span>\n<span class=\"s1\">'canine'</span>\n</pre>\n<p>To retrieve the underlying json, is possible to use the json property:</p>\n<pre><span class=\"n\">frozen_complex_json</span><span class=\"o\">.</span><span class=\"n\">json</span>\n</pre>\n<pre><span class=\"o\">{</span>\n    <span class=\"s1\">'cat_grass'</span>: <span class=\"s1\">'feline'</span>,\n    <span class=\"s1\">'cat_horse'</span>: <span class=\"s1\">'my joke'</span>,\n    <span class=\"s1\">'cat_mud'</span>: <span class=\"s1\">'you never know'</span>,\n    <span class=\"s1\">'dog'</span>: <span class=\"s1\">'canine'</span>,\n    <span class=\"s1\">'dolphin_0_tiger_0_bird'</span>: <span class=\"s1\">'blue jay'</span>,\n    <span class=\"s1\">'dolphin_0_tiger_1_fish'</span>: <span class=\"s1\">'dolphin'</span>,\n    <span class=\"s1\">'dolphin_1_cat2'</span>: <span class=\"s1\">'feline'</span>,\n    <span class=\"s1\">'dolphin_2_dog2'</span>: <span class=\"s1\">'canine'</span>\n<span class=\"o\">}</span>\n</pre>\n<h1>Development setup</h1>\n<p>This project uses <strong>Poetry</strong> for dependecy resolution. It's a kind of mix between\npip and virtualenv. Follow the next instructions to setup the development enviroment.</p>\n<pre>$ pip install poetry\n</pre>\n<pre>$ git clone https://github.com/dany2691/activejson.git\n$ <span class=\"nb\">cd</span> activejson\n$ poetry install\n</pre>\n<p>To run the test-suite, inside the pybundler directory:</p>\n<pre>$ poetry run pytest test/ -vv\n</pre>\n<h2>Meta</h2>\n<p>Daniel Omar Vergara P\u00e9rez \u2013 <a href=\"https://twitter.com/__danvergara__\" rel=\"nofollow\">@__danvergara __</a> \u2013 <a href=\"mailto:daniel.omar.vergara@gmail.com\">daniel.omar.vergara@gmail.com</a> -- <a href=\"https://github.com/danvergara\" rel=\"nofollow\">github.com/danvergara</a></p>\n<p>Valery Briz - <a href=\"https://twitter.com/valerybriz\" rel=\"nofollow\">@valerybriz</a> -- <a href=\"https://github.com/valerybriz\" rel=\"nofollow\">github.com/valerybriz</a></p>\n<h2>Contributing</h2>\n<ol>\n<li>Fork it (<a href=\"https://github.com/BentoBox-Project/activejson\" rel=\"nofollow\">https://github.com/BentoBox-Project/activejson</a>)</li>\n<li>Create your feature branch (<code>git checkout -b feature/fooBar</code>)</li>\n<li>Commit your changes (<code>git commit -am 'Add some fooBar'</code>)</li>\n<li>Push to the branch (<code>git push origin feature/fooBar</code>)</li>\n<li>Create a new Pull Request</li>\n</ol>\n\n          </div>"}, "last_serial": 7089803, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "662b2cd773c2a09c29485abc535b4c95", "sha256": "8c76da98793821b086e5a04c4c1e72854accaf511010ab1d9dd4a1c8ac23b7d2"}, "downloads": -1, "filename": "activejson-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "662b2cd773c2a09c29485abc535b4c95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4397, "upload_time": "2019-07-22T00:15:04", "upload_time_iso_8601": "2019-07-22T00:15:04.440219Z", "url": "https://files.pythonhosted.org/packages/5c/12/8716c7963e6c26516866bef5d5d77743b26624ad1ca451fc5038478c908a/activejson-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f18cddcdc9b4cd97f0bbf11b4ecf01e2", "sha256": "315a89276ef972a4f8264f15bddc881c9f67375c7d9eab62af750b9fb887de85"}, "downloads": -1, "filename": "activejson-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f18cddcdc9b4cd97f0bbf11b4ecf01e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3228, "upload_time": "2019-07-22T00:15:07", "upload_time_iso_8601": "2019-07-22T00:15:07.030022Z", "url": "https://files.pythonhosted.org/packages/73/b1/0b8dc9712f38d594c7b46eb182ffd0de05068e2247ae4b27bf1bb02721aa/activejson-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "e1d7a125e7d37758c54b00f3aac77655", "sha256": "2475372374162473ec7bf3cab62a53e6f9eba9b061ce174747b444d54d31bcd6"}, "downloads": -1, "filename": "activejson-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e1d7a125e7d37758c54b00f3aac77655", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4430, "upload_time": "2019-07-31T20:57:46", "upload_time_iso_8601": "2019-07-31T20:57:46.753196Z", "url": "https://files.pythonhosted.org/packages/cb/72/1ad31e7969cda9a4f14c9b918ff08122ac5801a7c77337f5df5d4edb2b85/activejson-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65711f0ea9142d80f61a45f83de0c609", "sha256": "9ca727bc042a06f050f880f52ed929e19554d8d38c095ae46dd045ec98b8880f"}, "downloads": -1, "filename": "activejson-0.2.1.tar.gz", "has_sig": false, "md5_digest": "65711f0ea9142d80f61a45f83de0c609", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3276, "upload_time": "2019-07-31T20:57:48", "upload_time_iso_8601": "2019-07-31T20:57:48.232221Z", "url": "https://files.pythonhosted.org/packages/f5/19/d5eab774e11687a4214e7eb322fb2440e0c9480246fde5d7489d2766c16d/activejson-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "bd3fbc185aa2256a702b013bd213532b", "sha256": "642423753614e057dbde0d9ed6217289cffd9e43e41f76832ce5ea58f680fd87"}, "downloads": -1, "filename": "activejson-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bd3fbc185aa2256a702b013bd213532b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4486, "upload_time": "2019-08-05T14:42:42", "upload_time_iso_8601": "2019-08-05T14:42:42.483810Z", "url": "https://files.pythonhosted.org/packages/05/f8/4701534d17f732d76b634f710c5192ec4e6f0bc207afb9e7558a97a0ec5f/activejson-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccee7b922b1ffb61b477758b715ff335", "sha256": "d61e24d711964dea31269428d865b2df18633ec2f86596c8432a771767fb4827"}, "downloads": -1, "filename": "activejson-0.2.2.tar.gz", "has_sig": false, "md5_digest": "ccee7b922b1ffb61b477758b715ff335", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3322, "upload_time": "2019-08-05T14:42:43", "upload_time_iso_8601": "2019-08-05T14:42:43.668342Z", "url": "https://files.pythonhosted.org/packages/fd/09/904d66451ea007407bd47b6fb80509fbad99685c8bb3f9f536d0ef658d9c/activejson-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "7956428137bb0e9a3c1de0d9f71988a7", "sha256": "213f92e4fb84fd48e729e91d9c7b2afeec2f7d427b0c9ee91b70043264dc7944"}, "downloads": -1, "filename": "activejson-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7956428137bb0e9a3c1de0d9f71988a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4576, "upload_time": "2019-09-26T17:19:54", "upload_time_iso_8601": "2019-09-26T17:19:54.404575Z", "url": "https://files.pythonhosted.org/packages/f5/ad/4b127ac2807fea34898c0a9aabd5a8fbbafc9ca4509f771f1ea14bbfe244/activejson-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f9adde47d2ec883a551ac5e6df00c60", "sha256": "740877172692992d27ee0ef17265d9a3527ebf5bfafffdf4d2987d3d5430556f"}, "downloads": -1, "filename": "activejson-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8f9adde47d2ec883a551ac5e6df00c60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3593, "upload_time": "2019-09-26T17:19:55", "upload_time_iso_8601": "2019-09-26T17:19:55.571244Z", "url": "https://files.pythonhosted.org/packages/90/00/0245a2c5aa346c522df8c54f17951541e1ce669444d04a227fe71c9ca2fb/activejson-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "c07f27a7098c91d820692a729791a667", "sha256": "86b91df5279e15f3b6e41c878b4d14f60d8dd3a43348eb08f7695969ef36698c"}, "downloads": -1, "filename": "activejson-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c07f27a7098c91d820692a729791a667", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4538, "upload_time": "2020-04-24T04:34:55", "upload_time_iso_8601": "2020-04-24T04:34:55.193628Z", "url": "https://files.pythonhosted.org/packages/18/49/512b5df9ca210b9c1bc40473bebdfa2befd96401b38323577f5128532d4b/activejson-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cedded496df0118cc1754219df23167f", "sha256": "d9c04393c5e4d219e4a6c730a51e134933022cb9d984f443c5ea753ac66c815e"}, "downloads": -1, "filename": "activejson-0.4.0.tar.gz", "has_sig": false, "md5_digest": "cedded496df0118cc1754219df23167f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4565, "upload_time": "2020-04-24T04:34:56", "upload_time_iso_8601": "2020-04-24T04:34:56.369555Z", "url": "https://files.pythonhosted.org/packages/67/6e/bf55cbfdfb313e766e2d50c78978ce9e371f649bc10b48f87963ef9158f3/activejson-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c07f27a7098c91d820692a729791a667", "sha256": "86b91df5279e15f3b6e41c878b4d14f60d8dd3a43348eb08f7695969ef36698c"}, "downloads": -1, "filename": "activejson-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c07f27a7098c91d820692a729791a667", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4538, "upload_time": "2020-04-24T04:34:55", "upload_time_iso_8601": "2020-04-24T04:34:55.193628Z", "url": "https://files.pythonhosted.org/packages/18/49/512b5df9ca210b9c1bc40473bebdfa2befd96401b38323577f5128532d4b/activejson-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cedded496df0118cc1754219df23167f", "sha256": "d9c04393c5e4d219e4a6c730a51e134933022cb9d984f443c5ea753ac66c815e"}, "downloads": -1, "filename": "activejson-0.4.0.tar.gz", "has_sig": false, "md5_digest": "cedded496df0118cc1754219df23167f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4565, "upload_time": "2020-04-24T04:34:56", "upload_time_iso_8601": "2020-04-24T04:34:56.369555Z", "url": "https://files.pythonhosted.org/packages/67/6e/bf55cbfdfb313e766e2d50c78978ce9e371f649bc10b48f87963ef9158f3/activejson-0.4.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:18 2020"}