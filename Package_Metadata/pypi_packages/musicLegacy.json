{"info": {"author": "Renato Fabbri", "author_email": "renato.fabbri@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Other Audience", "Intended Audience :: Religion", "Intended Audience :: Science/Research", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Artistic Software", "Topic :: Multimedia :: Sound/Audio :: Analysis", "Topic :: Multimedia :: Sound/Audio :: Editors", "Topic :: Multimedia :: Sound/Audio :: Mixers", "Topic :: Multimedia :: Sound/Audio :: Sound Synthesis", "Topic :: Multimedia :: Sound/Audio :: Speech", "Topic :: Other/Nonlisted Topic", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Physics", "Topic :: Scientific/Engineering :: Visualization"], "description": "=============================================================\nmusic is a toolbox for music synthesis (MASS modeling)\n=============================================================\n\nThis project delivers routines for music oriented sound synthesis\nin a sample based system. Music can be though of as a sample level\nDAW system, in which the objects manipulated are in fact the array\nof samples describing the sound wave that will reach a listener ear.\nThe MASS (music and audio in sample sequences) modeling is used[1][2].\n\nInstall with:\n\n    $ pip3 install musicLegacy\n\nHack demo songs and make wav files with:\n\n    $ python3 tests/testSong.py\n\nTo hear testSong.wav or\n\n    $ python3 tests/testSong2.py\n\nto hear vibrosong.wav. To hack the MASS package itself, and use it from the repo, don't forget to:\n\n    $ pip install -e <path/to/repo>\n\n\nReal time is possible but not the emphasis:\nall parameters are updated sample by sample and calculations\nare made in 64 bit floating point. All operations are described by\nequations that directly relates audio samples to musical aspects.\nDetailed descriptions can be found in:\n\n- the article \"Psychophysics of musical elements in the discrete-time representation of sound\": http://arxiv.org/abs/1412.6853\n\n- the msc dissertation \"M\u00fasica no \u00e1udio digital: descri\u00e7\u00e3o psicof\u00edsica e caixa de ferramentas\": https://github.com/ttm/dissertacao/blob/master/dissertacaoCorrigida.pdf?raw=true\n\nAlso check the music Python package: https://github.com/ttm/music\n\n\nUsage example\n=================\nDownload messages from one GMANE list:\n\n.. code:: python\n\n    import musicLegacy as m\n\n    # sine, triangle, square and sawtooth\n    # are attributes of the bt object:\n    bt=m.BasicTables()\n\n    # for frequency to midi and decibels to amplitude relations:\n    co=m.BasicConverter()\n    # try co.db2Amp .amp2Db .hz2Midi .midi2Hz \n\n    sy=m.Synth()\n\n    note=sy.render()\n    ut=m.Utils()\n    ut.write(note) # saved to fooname.wav\n\n    melody=n.hstack([sy.render(f,.2) for f in \n                      co.p2f(220,[0,7,7,5,6,7,0,4,7,0])])\n    sy.vib_depth=3.\n    sy.vib_freq=3.\n    sy.tab=bt.saw\n    section2=n.hstack([sy.render(freq,dur) for freq,dur in \n                        zip(co.p2f(110,[0,7,7,5,6,7,0,4,7,0]),\n                        [.2,.4,.2,.2,.8,.2,.4,.2,.4])])\n\n    song=n.hstack((melody,section2))\n\n    ut.write(song,\"song.wav\")\n\n    # A core purpose of the toolbox is to serve other\n    # toolboxes on the development sonic representations\n    # E.g. m.pieces.FourHubsDance is used by gmane toolbox\n    # to make sonified animations:\n    # https://www.youtube.com/watch?v=YxDiwzAUPeU\n    # sonicLine1 and sonicLine2 attributes are\n    # most basic sonic \"templates\" used by:\n    # https://pypi.python.org/pypi/gmane to make social music\n\n    # more in the way. Take a look at the above literature.\n    # Enjoy!", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ttm/musicLegacy", "keywords": "music audio dsp psychophysics physics synthesis toolbox", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "musicLegacy", "package_url": "https://pypi.org/project/musicLegacy/", "platform": "", "project_url": "https://pypi.org/project/musicLegacy/", "project_urls": {"Homepage": "https://github.com/ttm/musicLegacy"}, "release_url": "https://pypi.org/project/musicLegacy/0.1.dev13/", "requires_dist": null, "requires_python": "", "summary": "Yet another music package using the MASS (Music and Audio in Sample Sequences) framework", "version": "0.1.dev13", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This project delivers routines for music oriented sound synthesis\nin a sample based system. Music can be though of as a sample level\nDAW system, in which the objects manipulated are in fact the array\nof samples describing the sound wave that will reach a listener ear.\nThe MASS (music and audio in sample sequences) modeling is used[1][2].</p>\n<p>Install with:</p>\n<blockquote>\n$ pip3 install musicLegacy</blockquote>\n<p>Hack demo songs and make wav files with:</p>\n<blockquote>\n$ python3 tests/testSong.py</blockquote>\n<p>To hear testSong.wav or</p>\n<blockquote>\n$ python3 tests/testSong2.py</blockquote>\n<p>to hear vibrosong.wav. To hack the MASS package itself, and use it from the repo, don\u2019t forget to:</p>\n<blockquote>\n$ pip install -e &lt;path/to/repo&gt;</blockquote>\n<p>Real time is possible but not the emphasis:\nall parameters are updated sample by sample and calculations\nare made in 64 bit floating point. All operations are described by\nequations that directly relates audio samples to musical aspects.\nDetailed descriptions can be found in:</p>\n<ul>\n<li>the article \u201cPsychophysics of musical elements in the discrete-time representation of sound\u201d: <a href=\"http://arxiv.org/abs/1412.6853\" rel=\"nofollow\">http://arxiv.org/abs/1412.6853</a></li>\n<li>the msc dissertation \u201cM\u00fasica no \u00e1udio digital: descri\u00e7\u00e3o psicof\u00edsica e caixa de ferramentas\u201d: <a href=\"https://github.com/ttm/dissertacao/blob/master/dissertacaoCorrigida.pdf?raw=true\" rel=\"nofollow\">https://github.com/ttm/dissertacao/blob/master/dissertacaoCorrigida.pdf?raw=true</a></li>\n</ul>\n<p>Also check the music Python package: <a href=\"https://github.com/ttm/music\" rel=\"nofollow\">https://github.com/ttm/music</a></p>\n<div id=\"usage-example\">\n<h2>Usage example</h2>\n<p>Download messages from one GMANE list:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">musicLegacy</span> <span class=\"k\">as</span> <span class=\"nn\">m</span>\n\n<span class=\"c1\"># sine, triangle, square and sawtooth</span>\n<span class=\"c1\"># are attributes of the bt object:</span>\n<span class=\"n\">bt</span><span class=\"o\">=</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">BasicTables</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># for frequency to midi and decibels to amplitude relations:</span>\n<span class=\"n\">co</span><span class=\"o\">=</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">BasicConverter</span><span class=\"p\">()</span>\n<span class=\"c1\"># try co.db2Amp .amp2Db .hz2Midi .midi2Hz</span>\n\n<span class=\"n\">sy</span><span class=\"o\">=</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Synth</span><span class=\"p\">()</span>\n\n<span class=\"n\">note</span><span class=\"o\">=</span><span class=\"n\">sy</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">()</span>\n<span class=\"n\">ut</span><span class=\"o\">=</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Utils</span><span class=\"p\">()</span>\n<span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">note</span><span class=\"p\">)</span> <span class=\"c1\"># saved to fooname.wav</span>\n\n<span class=\"n\">melody</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">([</span><span class=\"n\">sy</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span>\n                  <span class=\"n\">co</span><span class=\"o\">.</span><span class=\"n\">p2f</span><span class=\"p\">(</span><span class=\"mi\">220</span><span class=\"p\">,[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">])])</span>\n<span class=\"n\">sy</span><span class=\"o\">.</span><span class=\"n\">vib_depth</span><span class=\"o\">=</span><span class=\"mf\">3.</span>\n<span class=\"n\">sy</span><span class=\"o\">.</span><span class=\"n\">vib_freq</span><span class=\"o\">=</span><span class=\"mf\">3.</span>\n<span class=\"n\">sy</span><span class=\"o\">.</span><span class=\"n\">tab</span><span class=\"o\">=</span><span class=\"n\">bt</span><span class=\"o\">.</span><span class=\"n\">saw</span>\n<span class=\"n\">section2</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">([</span><span class=\"n\">sy</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">freq</span><span class=\"p\">,</span><span class=\"n\">dur</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">freq</span><span class=\"p\">,</span><span class=\"n\">dur</span> <span class=\"ow\">in</span>\n                    <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">co</span><span class=\"o\">.</span><span class=\"n\">p2f</span><span class=\"p\">(</span><span class=\"mi\">110</span><span class=\"p\">,[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]),</span>\n                    <span class=\"p\">[</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"o\">.</span><span class=\"mi\">4</span><span class=\"p\">])])</span>\n\n<span class=\"n\">song</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">((</span><span class=\"n\">melody</span><span class=\"p\">,</span><span class=\"n\">section2</span><span class=\"p\">))</span>\n\n<span class=\"n\">ut</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">song</span><span class=\"p\">,</span><span class=\"s2\">\"song.wav\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># A core purpose of the toolbox is to serve other</span>\n<span class=\"c1\"># toolboxes on the development sonic representations</span>\n<span class=\"c1\"># E.g. m.pieces.FourHubsDance is used by gmane toolbox</span>\n<span class=\"c1\"># to make sonified animations:</span>\n<span class=\"c1\"># https://www.youtube.com/watch?v=YxDiwzAUPeU</span>\n<span class=\"c1\"># sonicLine1 and sonicLine2 attributes are</span>\n<span class=\"c1\"># most basic sonic \"templates\" used by:</span>\n<span class=\"c1\"># https://pypi.python.org/pypi/gmane to make social music</span>\n\n<span class=\"c1\"># more in the way. Take a look at the above literature.</span>\n<span class=\"c1\"># Enjoy!</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5257150, "releases": {"0.1.dev11": [{"comment_text": "", "digests": {"md5": "24ae5a75db42e13f572dba45288df8b8", "sha256": "7ed85caa662d94b6a2dba0efb118b1a3bdaa63b6d25bf6e5a90c046f9cd7ef82"}, "downloads": -1, "filename": "musicLegacy-0.1.dev11.tar.gz", "has_sig": false, "md5_digest": "24ae5a75db42e13f572dba45288df8b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6531, "upload_time": "2019-05-11T19:39:53", "upload_time_iso_8601": "2019-05-11T19:39:53.379611Z", "url": "https://files.pythonhosted.org/packages/4a/2f/be7a9496cb3b2448e5a8e7cc5e8cf63de14ed084a1d5d6743180199d879a/musicLegacy-0.1.dev11.tar.gz", "yanked": false}], "0.1.dev13": [{"comment_text": "", "digests": {"md5": "fbd30441fe3c3e6c02ae1b33e5b98fdb", "sha256": "ec72594f40f26b70edcc2386bc2b47e9b7e88e8c2d350f4c281099a7c4ff681b"}, "downloads": -1, "filename": "musicLegacy-0.1.dev13.tar.gz", "has_sig": false, "md5_digest": "fbd30441fe3c3e6c02ae1b33e5b98fdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8124, "upload_time": "2019-05-11T20:12:24", "upload_time_iso_8601": "2019-05-11T20:12:24.710277Z", "url": "https://files.pythonhosted.org/packages/d8/ae/d49cee5a5b81a0f6d6c7a5350d8dfca575aed3d797bfcfce17d140cd4923/musicLegacy-0.1.dev13.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fbd30441fe3c3e6c02ae1b33e5b98fdb", "sha256": "ec72594f40f26b70edcc2386bc2b47e9b7e88e8c2d350f4c281099a7c4ff681b"}, "downloads": -1, "filename": "musicLegacy-0.1.dev13.tar.gz", "has_sig": false, "md5_digest": "fbd30441fe3c3e6c02ae1b33e5b98fdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8124, "upload_time": "2019-05-11T20:12:24", "upload_time_iso_8601": "2019-05-11T20:12:24.710277Z", "url": "https://files.pythonhosted.org/packages/d8/ae/d49cee5a5b81a0f6d6c7a5350d8dfca575aed3d797bfcfce17d140cd4923/musicLegacy-0.1.dev13.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:09 2020"}