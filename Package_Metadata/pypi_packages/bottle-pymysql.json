{"info": {"author": "Alexandr N. Zamaraev", "author_email": "tonal@promsoft.ru", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Bottle-MySQL is a plugin that integrates MySQL with your Bottle\napplication. It automatically connects to a database at the beginning of a\nrequest, passes the database handle to the route callback and closes the\nconnection afterwards.\n\nTo automatically detect routes that need a database connection, the plugin\nsearches for route callbacks that require a `pymydb` keyword argument\n(configurable) and skips routes that do not. This removes any overhead for\nroutes that don't need a database connection.\n\nResults are returned as dictionaries.\n\nUsage Example::\n\n    import bottle\n    import bottle_pymysql\n\n    app = bottle.Bottle()\n    # dbhost is optional, default is localhost\n    plugin = bottle_pymysql.Plugin(dbuser='user', dbpass='pass', dbname='db')\n    app.install(plugin)\n\n    @app.route('/show/:<tem>')\n    def show(item, pymydb):\n        pymydb.execute('SELECT * from items where name=\"%s\"', (item,))\n        row = pymydb.fetchone()\n        if row:\n            return template('showitem', page=row)\n        return HTTPError(404, \"Page not found\")", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tonal/bottle-pymysql", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "bottle-pymysql", "package_url": "https://pypi.org/project/bottle-pymysql/", "platform": "any", "project_url": "https://pypi.org/project/bottle-pymysql/", "project_urls": {"Homepage": "https://github.com/tonal/bottle-pymysql"}, "release_url": "https://pypi.org/project/bottle-pymysql/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "MySQL integration for Bottle.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Bottle-MySQL is a plugin that integrates MySQL with your Bottle\napplication. It automatically connects to a database at the beginning of a\nrequest, passes the database handle to the route callback and closes the\nconnection afterwards.</p>\n<p>To automatically detect routes that need a database connection, the plugin\nsearches for route callbacks that require a <cite>pymydb</cite> keyword argument\n(configurable) and skips routes that do not. This removes any overhead for\nroutes that don\u2019t need a database connection.</p>\n<p>Results are returned as dictionaries.</p>\n<p>Usage Example:</p>\n<pre>import bottle\nimport bottle_pymysql\n\napp = bottle.Bottle()\n# dbhost is optional, default is localhost\nplugin = bottle_pymysql.Plugin(dbuser='user', dbpass='pass', dbname='db')\napp.install(plugin)\n\n@app.route('/show/:&lt;tem&gt;')\ndef show(item, pymydb):\n    pymydb.execute('SELECT * from items where name=\"%s\"', (item,))\n    row = pymydb.fetchone()\n    if row:\n        return template('showitem', page=row)\n    return HTTPError(404, \"Page not found\")\n</pre>\n\n          </div>"}, "last_serial": 2925535, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "838e8c66ead270c0f9eb91f605df6abe", "sha256": "b26386809bdd360ef20c1a47ec665d7775d1e9fb88da41b7c0e55a9304b12aad"}, "downloads": -1, "filename": "bottle-pymysql-0.1.1.tar.gz", "has_sig": false, "md5_digest": "838e8c66ead270c0f9eb91f605df6abe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3226, "upload_time": "2016-04-12T12:00:57", "upload_time_iso_8601": "2016-04-12T12:00:57.258072Z", "url": "https://files.pythonhosted.org/packages/a3/f6/4079eb561363641e8b2fd6c2e64a968c061419af02be2c514652c0b339b5/bottle-pymysql-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d33f047f3199932dd0bc73a58391cc2e", "sha256": "dc6f936d390a5ddd5a2c9bae66c5231d7ae57bcfa6d7b4252b7da329bdfe5bd1"}, "downloads": -1, "filename": "bottle-pymysql-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d33f047f3199932dd0bc73a58391cc2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3250, "upload_time": "2016-04-28T07:50:22", "upload_time_iso_8601": "2016-04-28T07:50:22.049873Z", "url": "https://files.pythonhosted.org/packages/2f/d0/59176ffa9877894c9340c5fb98f767d0a210c078aa2babb3f1f683556a15/bottle-pymysql-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "02935e9a8697195185d53f9bbe5389fd", "sha256": "d2a0769fa8e8d36bc9f43d30f09e630e891e644b2d765422f4e21942c2573c7e"}, "downloads": -1, "filename": "bottle-pymysql-0.1.3.tar.gz", "has_sig": false, "md5_digest": "02935e9a8697195185d53f9bbe5389fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3348, "upload_time": "2017-06-05T05:42:45", "upload_time_iso_8601": "2017-06-05T05:42:45.519219Z", "url": "https://files.pythonhosted.org/packages/79/5a/326b26e671cb947408d252af6653cd6733881c91f8292a45329f2671db77/bottle-pymysql-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "02935e9a8697195185d53f9bbe5389fd", "sha256": "d2a0769fa8e8d36bc9f43d30f09e630e891e644b2d765422f4e21942c2573c7e"}, "downloads": -1, "filename": "bottle-pymysql-0.1.3.tar.gz", "has_sig": false, "md5_digest": "02935e9a8697195185d53f9bbe5389fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3348, "upload_time": "2017-06-05T05:42:45", "upload_time_iso_8601": "2017-06-05T05:42:45.519219Z", "url": "https://files.pythonhosted.org/packages/79/5a/326b26e671cb947408d252af6653cd6733881c91f8292a45329f2671db77/bottle-pymysql-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:33 2020"}