{"info": {"author": "Marco Streng", "author_email": "marco.streng@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Build Tools"], "description": "=========================\nREpository of Complex multiplication SageMath code\n=========================\n.. image:: https://travis-ci.org/mstreng/recip.svg?branch=master\n    :target: https://travis-ci.org/mstreng/recip\n\n\nOnce the Travis CI set-up has been completed, the documentation for the package can be found at https://mstreng.github.io/recip/doc/html/\n\nInstallation\n------------\n\nLocal install from source\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nDownload the source from the git repository::\n\n    $ git clone https://github.com/mstreng/recip.git\n\nChange to the root directory and run::\n\n    $ sage -pip install --upgrade --no-index -v .\n\nFor convenience this package contains a [makefile](makefile) with this\nand other often used commands. Should you wish too, you can use the\nshorthand::\n\n    $ make install\n\nUsage\n-----\n\nOnce the package is installed, you can use it in Sage with::\n\n    sage: from recip import *\n    sage: CM_Field([5,5,5])\n    CM Number Field in alpha with defining polynomial x^4 + 5*x^2 + 5\n\n\nSource code\n-----------\n\nAll source code is stored in the folder ``recip`` using the same name as the\npackage. This is not mandatory but highly recommended for clarity. All source folder\nmust contain a ``__init__.py`` file with needed includes.\n\nTests\n-----\n\nThis package is configured for tests written in the documentation\nstrings, also known as ``doctests``. For examples, see this\n[source file](recip/ultimate_question.py). See also\n[SageMath's coding conventions and best practices document](http://doc.sagemath.org/html/en/developer/coding_basics.html#writing-testable-examples).\nWith additional configuration, it would be possible to include unit\ntests as well.\n\nOnce the package is installed, one can use the SageMath test system\nconfigured in ``setup.py`` to run the tests::\n\n    $ sage setup.py test\n\nThis is just calling ``sage -t`` with appropriate flags.\n\nShorthand::\n\n    $ make test\n\nDocumentation\n-------------\n\nThe documentation of the package can be generated using Sage's\n``Sphinx`` installation::\n\n    $ cd docs\n    $ sage -sh -c \"make html\"\n\nShorthand::\n\n    $ make doc\n\n\n#*****************************************************************************\n# Copyright (C) 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017 Marco Streng\n#                                                  <marco.streng@gmail.com>\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License along\n# with this program; if not, write to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n#*****************************************************************************\n\nRECIP -- REpository of Complex multIPlication SageMath code.\n\nThis started out as code meant for computing with Shimura's RECIProcity law,\nbut grew into a collection of much of the SageMath code written by me for my\nresearch.\n\nVersion 0.2.5 (tested with SageMath 8.0, short tests only).\n\nWhen using this package in a publication, it is highly likely that it is\napproprate certain publications. Please CITE the relevant JOURNAL publications,\nas well as giving the URL of this repository.\n\nHere is a list of functionalities of this repository, together with the\npublications that should be cited when you use them, and the name of the file\nthat has examples.\n\n * Igusa class polynomials (proven correct)\n   See both \"Igusa class polynomials (not proven correct)\" and\n   \"Denominators of Igusa class polynomials\" below.\n\n * Non-maximal orders of CM-fields and their polarized ideal classes and Igusa\n   class polynomials.\n   cite [BissonStreng] (code is written for, part of, and based on, this publication)\n   see orders.sage for examples\n\n * (n,n)-isogenies between polarized ideal classes\n   cite [BLS]\n   see bls.sage for examples\n\n * Computations related to Shimura's reciprocity law\n   cite [Streng12] (code is written for, part of, and based on, this publication)\n   see article.sage for examples\n\n * Igusa class polynomials (not proven correct)\n   cite [Streng14], [vWamelen], [Weng] (code is based on these publications)\n\n * Denominators of Igusa class polynomials\n   cite [BouyerStreng] (code is written for, and hence part of, this publication)\n   and depending on how the code is used, and on the kind of quartic CM-field,\n   also cite one or more of:\n   [BouyerStreng], [GL], [LV], [Yang] (large parts of the code are based on these)\n   see denominators.sage for examples\n\nHere is a list of SageMath programs written by my students and me that is not part\nof this repository.\n\n * Height reduction of binary forms and hyperelliptic curves.\n   (with Florian Bouyer)\n   https://bitbucket.org/mstreng/reduce\n   cite [BouyerS] (code is written for, part of, and based on, this publication)\n\n * Solving conics and Mestre's algorithm\n   (with Florian Bouyer)\n   now part of the standard SageMath functionality\n\n * Hilbert modular polynomials\n   (by Chloe Martindale)\n   contact her if you are interested\n\n * CM class number one for genus 2 and 3\n   (by P\u0131nar K\u0131l\u0131\u00e7er)\n   contact her if you are interested\n\nTo use the latest version of this package directly from the web, start SageMath\nand type::\n\n    sage: load(\"https://bitbucket.org/mstreng/recip/raw/master/recip_online.sage\")\n\nTo use this package offline, download it first and extract it to some\ndirectory, say \"somewhere_on_my_drive/recip\", then start SageMath and type::\n\n    sage: load_attach_path(\"somewhere_on_my_drive/recip\")\n    sage: load(\"recip.sage\")\n\n[ABLPV]  -  Comparing arithmetic intersection formulas for denominators of\n            Igusa class polynomials -- Jacqueline Anderson, Jennifer S.\n            Balakrishnan, Kristin Lauter, Jennifer Park, and Bianca Viray\n\n[BissonS] - On polarised class groups of orders in quartic CM fields --\n            Gaetan Bisson and Marco Streng\n            http://arxiv.org/abs/1302.3756\n\n[BLS]    -  Abelian surfaces admitting an (l,l)-endomorphism -- Reinier Broker,\n            Kristin Lauter, and Marco Streng\n            accepted for publication by Journal of Algebra, 2013\n            http://arxiv.org/abs/1106.1884\n\n[BouyerS] - Examples of CM curves of genus 2 defined over the reflex field --\n            Florian Bouyer and Marco Streng\n            http://arxiv.org/abs/1307.0486\n\n[GJLSVW] -  Igusa class polynomials, embeddings of quartic CM fields, and\n            arithmetic intersection theory -- Helen Grundman, Jennifer\n            Johnson-Leung, Kristin Lauter, Adriana Salerno, Bianca Viray, and\n            Erika Wittenborn\n            http://arxiv.org/abs/1006.0208\n\n[GL]     -  Genus 2 curves with complex multiplication -- Eyal Goren and\n            Kristin Lauter\n\n[LV]     -  An arithmetic intersection formula for denominators of Igusa class\n            polynomials -- Kristin Lauter and Bianca Viray\n            arXiv:1210.7841v1\n\n[Yang]   -  Arithmetic interseciton on a Hilbert modular surface and the\n            Faltings height -- Tonghai Yang\n            http://www.math.wisc.edu/~thyang/general4L.pdf\n\n[recip]  -  recip, SageMath package for explicit complex multiplication -- Marco\n            Streng\n            https://bitbucket.org/mstreng/recip/\n\n[Streng12]-  An explicit version of Shimura's reciprocity law for Siegel\n            modular functions -- Marco Streng\n            arXiv:1201.0020\n\n[Streng14]-  Computing Igusa Class Polynomials\n            Mathematics of Computation, Vol. 83 (2014), pp 275--309", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mstreng/recip", "keywords": "SageMath,CM,Complex Multiplication,Siegel modular forms,elliptic curve,hyperelliptic curve,isogeny", "license": "GPLv2+", "maintainer": "", "maintainer_email": "", "name": "recip", "package_url": "https://pypi.org/project/recip/", "platform": "", "project_url": "https://pypi.org/project/recip/", "project_urls": {"Homepage": "https://github.com/mstreng/recip"}, "release_url": "https://pypi.org/project/recip/3.0.1/", "requires_dist": null, "requires_python": "", "summary": "CM SageMath code", "version": "3.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            =========================<br>REpository of Complex multiplication SageMath code<br>=========================<br>.. image:: https://travis-ci.org/mstreng/recip.svg?branch=master<br>    :target: https://travis-ci.org/mstreng/recip<br><br><br>Once the Travis CI set-up has been completed, the documentation for the package can be found at https://mstreng.github.io/recip/doc/html/<br><br>Installation<br>------------<br><br>Local install from source<br>^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>Download the source from the git repository::<br><br>    $ git clone https://github.com/mstreng/recip.git<br><br>Change to the root directory and run::<br><br>    $ sage -pip install --upgrade --no-index -v .<br><br>For convenience this package contains a [makefile](makefile) with this<br>and other often used commands. Should you wish too, you can use the<br>shorthand::<br><br>    $ make install<br><br>Usage<br>-----<br><br>Once the package is installed, you can use it in Sage with::<br><br>    sage: from recip import *<br>    sage: CM_Field([5,5,5])<br>    CM Number Field in alpha with defining polynomial x^4 + 5*x^2 + 5<br><br><br>Source code<br>-----------<br><br>All source code is stored in the folder ``recip`` using the same name as the<br>package. This is not mandatory but highly recommended for clarity. All source folder<br>must contain a ``__init__.py`` file with needed includes.<br><br>Tests<br>-----<br><br>This package is configured for tests written in the documentation<br>strings, also known as ``doctests``. For examples, see this<br>[source file](recip/ultimate_question.py). See also<br>[SageMath's coding conventions and best practices document](http://doc.sagemath.org/html/en/developer/coding_basics.html#writing-testable-examples).<br>With additional configuration, it would be possible to include unit<br>tests as well.<br><br>Once the package is installed, one can use the SageMath test system<br>configured in ``setup.py`` to run the tests::<br><br>    $ sage setup.py test<br><br>This is just calling ``sage -t`` with appropriate flags.<br><br>Shorthand::<br><br>    $ make test<br><br>Documentation<br>-------------<br><br>The documentation of the package can be generated using Sage's<br>``Sphinx`` installation::<br><br>    $ cd docs<br>    $ sage -sh -c \"make html\"<br><br>Shorthand::<br><br>    $ make doc<br><br><br>#*****************************************************************************<br># Copyright (C) 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017 Marco Streng<br>#                                                  &lt;marco.streng@gmail.com&gt;<br>#<br># This program is free software; you can redistribute it and/or modify<br># it under the terms of the GNU General Public License as published by<br># the Free Software Foundation; either version 2 of the License, or<br># (at your option) any later version.<br>#<br># This program is distributed in the hope that it will be useful,<br># but WITHOUT ANY WARRANTY; without even the implied warranty of<br># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<br># GNU General Public License for more details.<br>#<br># You should have received a copy of the GNU General Public License along<br># with this program; if not, write to the Free Software Foundation, Inc.,<br># 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.<br>#*****************************************************************************<br><br>RECIP -- REpository of Complex multIPlication SageMath code.<br><br>This started out as code meant for computing with Shimura's RECIProcity law,<br>but grew into a collection of much of the SageMath code written by me for my<br>research.<br><br>Version 0.2.5 (tested with SageMath 8.0, short tests only).<br><br>When using this package in a publication, it is highly likely that it is<br>approprate certain publications. Please CITE the relevant JOURNAL publications,<br>as well as giving the URL of this repository.<br><br>Here is a list of functionalities of this repository, together with the<br>publications that should be cited when you use them, and the name of the file<br>that has examples.<br><br> * Igusa class polynomials (proven correct)<br>   See both \"Igusa class polynomials (not proven correct)\" and<br>   \"Denominators of Igusa class polynomials\" below.<br><br> * Non-maximal orders of CM-fields and their polarized ideal classes and Igusa<br>   class polynomials.<br>   cite [BissonStreng] (code is written for, part of, and based on, this publication)<br>   see orders.sage for examples<br><br> * (n,n)-isogenies between polarized ideal classes<br>   cite [BLS]<br>   see bls.sage for examples<br><br> * Computations related to Shimura's reciprocity law<br>   cite [Streng12] (code is written for, part of, and based on, this publication)<br>   see article.sage for examples<br><br> * Igusa class polynomials (not proven correct)<br>   cite [Streng14], [vWamelen], [Weng] (code is based on these publications)<br><br> * Denominators of Igusa class polynomials<br>   cite [BouyerStreng] (code is written for, and hence part of, this publication)<br>   and depending on how the code is used, and on the kind of quartic CM-field,<br>   also cite one or more of:<br>   [BouyerStreng], [GL], [LV], [Yang] (large parts of the code are based on these)<br>   see denominators.sage for examples<br><br>Here is a list of SageMath programs written by my students and me that is not part<br>of this repository.<br><br> * Height reduction of binary forms and hyperelliptic curves.<br>   (with Florian Bouyer)<br>   https://bitbucket.org/mstreng/reduce<br>   cite [BouyerS] (code is written for, part of, and based on, this publication)<br><br> * Solving conics and Mestre's algorithm<br>   (with Florian Bouyer)<br>   now part of the standard SageMath functionality<br><br> * Hilbert modular polynomials<br>   (by Chloe Martindale)<br>   contact her if you are interested<br><br> * CM class number one for genus 2 and 3<br>   (by P\u0131nar K\u0131l\u0131\u00e7er)<br>   contact her if you are interested<br><br>To use the latest version of this package directly from the web, start SageMath<br>and type::<br><br>    sage: load(\"https://bitbucket.org/mstreng/recip/raw/master/recip_online.sage\")<br><br>To use this package offline, download it first and extract it to some<br>directory, say \"somewhere_on_my_drive/recip\", then start SageMath and type::<br><br>    sage: load_attach_path(\"somewhere_on_my_drive/recip\")<br>    sage: load(\"recip.sage\")<br><br>[ABLPV]  -  Comparing arithmetic intersection formulas for denominators of<br>            Igusa class polynomials -- Jacqueline Anderson, Jennifer S.<br>            Balakrishnan, Kristin Lauter, Jennifer Park, and Bianca Viray<br><br>[BissonS] - On polarised class groups of orders in quartic CM fields --<br>            Gaetan Bisson and Marco Streng<br>            http://arxiv.org/abs/1302.3756<br><br>[BLS]    -  Abelian surfaces admitting an (l,l)-endomorphism -- Reinier Broker,<br>            Kristin Lauter, and Marco Streng<br>            accepted for publication by Journal of Algebra, 2013<br>            http://arxiv.org/abs/1106.1884<br><br>[BouyerS] - Examples of CM curves of genus 2 defined over the reflex field --<br>            Florian Bouyer and Marco Streng<br>            http://arxiv.org/abs/1307.0486<br><br>[GJLSVW] -  Igusa class polynomials, embeddings of quartic CM fields, and<br>            arithmetic intersection theory -- Helen Grundman, Jennifer<br>            Johnson-Leung, Kristin Lauter, Adriana Salerno, Bianca Viray, and<br>            Erika Wittenborn<br>            http://arxiv.org/abs/1006.0208<br><br>[GL]     -  Genus 2 curves with complex multiplication -- Eyal Goren and<br>            Kristin Lauter<br><br>[LV]     -  An arithmetic intersection formula for denominators of Igusa class<br>            polynomials -- Kristin Lauter and Bianca Viray<br>            arXiv:1210.7841v1<br><br>[Yang]   -  Arithmetic interseciton on a Hilbert modular surface and the<br>            Faltings height -- Tonghai Yang<br>            http://www.math.wisc.edu/~thyang/general4L.pdf<br><br>[recip]  -  recip, SageMath package for explicit complex multiplication -- Marco<br>            Streng<br>            https://bitbucket.org/mstreng/recip/<br><br>[Streng12]-  An explicit version of Shimura's reciprocity law for Siegel<br>            modular functions -- Marco Streng<br>            arXiv:1201.0020<br><br>[Streng14]-  Computing Igusa Class Polynomials<br>            Mathematics of Computation, Vol. 83 (2014), pp 275--309\n          </div>"}, "last_serial": 3072427, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6da84bc5df6519b60ace665e4c753358", "sha256": "3f5332747c1c2a85fa2edb6fca464ca0d1894e60e8d9a6433f5193066e5432be"}, "downloads": -1, "filename": "recip-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6da84bc5df6519b60ace665e4c753358", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4184, "upload_time": "2017-08-02T09:17:52", "upload_time_iso_8601": "2017-08-02T09:17:52.894722Z", "url": "https://files.pythonhosted.org/packages/49/55/99c148e3075f044d3cad3154f096e774079db4032885f0b0dc6bb53d0dcb/recip-0.0.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "1f3bf78757e81533ae05aa5a2cb044c7", "sha256": "3232aeac83bdf63b9fb79deac94dad486b1729667336de5dca84c6d88179c300"}, "downloads": -1, "filename": "recip-0.3.tar.gz", "has_sig": false, "md5_digest": "1f3bf78757e81533ae05aa5a2cb044c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4194, "upload_time": "2017-08-02T07:02:52", "upload_time_iso_8601": "2017-08-02T07:02:52.282593Z", "url": "https://files.pythonhosted.org/packages/eb/ab/6be0da1f8033fd554ccdc622b8c33349aec71c5fa6fceb53075824b3b55f/recip-0.3.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "f8cd396c611faf2f016d92ea0e317c09", "sha256": "58e14cd31500d42e3c4c6341057990045dcc87aef175de4f394fb37efcacd903"}, "downloads": -1, "filename": "recip-3.0.1.tar.gz", "has_sig": false, "md5_digest": "f8cd396c611faf2f016d92ea0e317c09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140032, "upload_time": "2017-08-04T12:33:13", "upload_time_iso_8601": "2017-08-04T12:33:13.313868Z", "url": "https://files.pythonhosted.org/packages/bf/8b/df9416b88f0a6852c2238c52fd35592e6345a7907b755cfe036c8daa5e50/recip-3.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f8cd396c611faf2f016d92ea0e317c09", "sha256": "58e14cd31500d42e3c4c6341057990045dcc87aef175de4f394fb37efcacd903"}, "downloads": -1, "filename": "recip-3.0.1.tar.gz", "has_sig": false, "md5_digest": "f8cd396c611faf2f016d92ea0e317c09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140032, "upload_time": "2017-08-04T12:33:13", "upload_time_iso_8601": "2017-08-04T12:33:13.313868Z", "url": "https://files.pythonhosted.org/packages/bf/8b/df9416b88f0a6852c2238c52fd35592e6345a7907b755cfe036c8daa5e50/recip-3.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:13 2020"}