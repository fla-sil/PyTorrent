{"info": {"author": "Enrico Borba", "author_email": "enricozb@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# XaTeLite \ud83d\udef0\ufe0f\n\nLaTeX over SSH and HTTP. Lets you remotely compile LaTeX and immediately see\nyour compiled pdf all remotely.\n\n## Requirements\nYou need\n - Flask\n - pdflatex\n\n## Installation\nJust install by\n```\npython3 -m pip install flask\npython3 -m pip install xatelite\n```\n\n## Usage\nThe most common use case is ssh-ing into your remote server,\nstarting xatelite, and opening up a web browser to your xatelite latex server.\n\nHere's an example: after ssh-ing into your server, run\n```\n$ xatelite -f ~/math/pset4/pset4.tex -q -p 5010\n```\n\nThis starts an HTTP server on port `5010` and uses `-q` to silence Flask's\noutput. Now if you visit your server on port `5010` through a web browser,\nyou'll be presented with your pdf. **Refreshing recompiles the LaTeX file**.\n\nIf there's a bug in your .tex file (if pdflatex returns a non-zero error code),\na log file will be presented instead. Use the log file to debug.\n\n## Options\nThe current options can be accessed by `xatelite -h` and are:\n\n    usage: xatelite.py [-h] [-f LATEX_FILE] [-p PORT] [-q] [-qq]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -f LATEX_FILE, --latex_file LATEX_FILE\n                            the latex file to be compiled and served. If this is\n                            not passed in, the single *.tex file in the working\n                            directory will be used.\n      -p PORT, --port PORT  specify which port the webserver will run on\n      -q, --quiet           suppress any Flask output\n      -qq, --qquiet         suppress all output including running message\n\n## TODO\n - [ ] Better debugging options\n   - [ ] Maybe have a relaxed mode that allows errors if a pdf is generated?\n - [ ] Have a config file with specific pdflatex commands.\n - [ ] Recommend `xatelite [file] -qq & disown` for non-screen/tmux users.\n   - [ ] Have a `-k/--kill` option to kill servers that can take PID/filename\n   - [ ] Have a `-s/--sessions` option to see PID/filename/ports\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/enricozb/XaTeLite", "keywords": "latex,ssh", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "xatelite", "package_url": "https://pypi.org/project/xatelite/", "platform": "", "project_url": "https://pypi.org/project/xatelite/", "project_urls": {"Homepage": "https://github.com/enricozb/XaTeLite"}, "release_url": "https://pypi.org/project/xatelite/0.1.2/", "requires_dist": ["flask"], "requires_python": ">=3", "summary": "A Python3 LaTeX over SSH/HTTP service", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # XaTeLite \ud83d\udef0\ufe0f<br><br>LaTeX over SSH and HTTP. Lets you remotely compile LaTeX and immediately see<br>your compiled pdf all remotely.<br><br>## Requirements<br>You need<br> - Flask<br> - pdflatex<br><br>## Installation<br>Just install by<br>```<br>python3 -m pip install flask<br>python3 -m pip install xatelite<br>```<br><br>## Usage<br>The most common use case is ssh-ing into your remote server,<br>starting xatelite, and opening up a web browser to your xatelite latex server.<br><br>Here's an example: after ssh-ing into your server, run<br>```<br>$ xatelite -f ~/math/pset4/pset4.tex -q -p 5010<br>```<br><br>This starts an HTTP server on port `5010` and uses `-q` to silence Flask's<br>output. Now if you visit your server on port `5010` through a web browser,<br>you'll be presented with your pdf. **Refreshing recompiles the LaTeX file**.<br><br>If there's a bug in your .tex file (if pdflatex returns a non-zero error code),<br>a log file will be presented instead. Use the log file to debug.<br><br>## Options<br>The current options can be accessed by `xatelite -h` and are:<br><br>    usage: xatelite.py [-h] [-f LATEX_FILE] [-p PORT] [-q] [-qq]<br><br>    optional arguments:<br>      -h, --help            show this help message and exit<br>      -f LATEX_FILE, --latex_file LATEX_FILE<br>                            the latex file to be compiled and served. If this is<br>                            not passed in, the single *.tex file in the working<br>                            directory will be used.<br>      -p PORT, --port PORT  specify which port the webserver will run on<br>      -q, --quiet           suppress any Flask output<br>      -qq, --qquiet         suppress all output including running message<br><br>## TODO<br> - [ ] Better debugging options<br>   - [ ] Maybe have a relaxed mode that allows errors if a pdf is generated?<br> - [ ] Have a config file with specific pdflatex commands.<br> - [ ] Recommend `xatelite [file] -qq &amp; disown` for non-screen/tmux users.<br>   - [ ] Have a `-k/--kill` option to kill servers that can take PID/filename<br>   - [ ] Have a `-s/--sessions` option to see PID/filename/ports<br><br><br><br>\n          </div>"}, "last_serial": 4800782, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "ee4610bf4af5b95dc2b38c950926d5b9", "sha256": "41708329a2f1f26f83626814ee8b6c21df910c024b5c7887a211bb8e282ecef2"}, "downloads": -1, "filename": "xatelite-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ee4610bf4af5b95dc2b38c950926d5b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 5090, "upload_time": "2018-11-01T23:17:04", "upload_time_iso_8601": "2018-11-01T23:17:04.087330Z", "url": "https://files.pythonhosted.org/packages/6d/da/978eaf69cb4fcf936830d6b2f7e28b13c2a3883fd4681efa827c25cc1649/xatelite-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc687574148807621a08e759e4bc317c", "sha256": "32b4b1f37bab1d6f81db4a4df3f9363a115fbc1037ee44ddb0411a64b39be2a4"}, "downloads": -1, "filename": "xatelite-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cc687574148807621a08e759e4bc317c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 2952, "upload_time": "2018-11-01T23:17:05", "upload_time_iso_8601": "2018-11-01T23:17:05.346169Z", "url": "https://files.pythonhosted.org/packages/4f/e9/af388b3cb5ce2caf7bc7f5c8b5e66a3a95370d939830d5de39950aa1eb59/xatelite-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "2d6514435fd5cb7b3ae9ac3d605da8b1", "sha256": "242275c4762d5a66918f7dea095ba522790be2d155876ce32366344772d3acd9"}, "downloads": -1, "filename": "xatelite-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2d6514435fd5cb7b3ae9ac3d605da8b1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 5441, "upload_time": "2019-02-09T23:59:39", "upload_time_iso_8601": "2019-02-09T23:59:39.455698Z", "url": "https://files.pythonhosted.org/packages/c7/19/c9a342ab83731014f086c0f39aee2a0ee9961d06a9ea52d454b5a48b1bb4/xatelite-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fee18cccfb82eff8099716ccab7c3e68", "sha256": "71979d58827a40314b68d402afba3b11c9f00e3cee22dc15139e4c92955d51c4"}, "downloads": -1, "filename": "xatelite-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fee18cccfb82eff8099716ccab7c3e68", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 3209, "upload_time": "2019-02-09T23:59:41", "upload_time_iso_8601": "2019-02-09T23:59:41.327688Z", "url": "https://files.pythonhosted.org/packages/3c/2a/be5565203851ee24f0682e4fba06424c7b945741bac89658d18b1edb7268/xatelite-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2d6514435fd5cb7b3ae9ac3d605da8b1", "sha256": "242275c4762d5a66918f7dea095ba522790be2d155876ce32366344772d3acd9"}, "downloads": -1, "filename": "xatelite-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2d6514435fd5cb7b3ae9ac3d605da8b1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 5441, "upload_time": "2019-02-09T23:59:39", "upload_time_iso_8601": "2019-02-09T23:59:39.455698Z", "url": "https://files.pythonhosted.org/packages/c7/19/c9a342ab83731014f086c0f39aee2a0ee9961d06a9ea52d454b5a48b1bb4/xatelite-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fee18cccfb82eff8099716ccab7c3e68", "sha256": "71979d58827a40314b68d402afba3b11c9f00e3cee22dc15139e4c92955d51c4"}, "downloads": -1, "filename": "xatelite-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fee18cccfb82eff8099716ccab7c3e68", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 3209, "upload_time": "2019-02-09T23:59:41", "upload_time_iso_8601": "2019-02-09T23:59:41.327688Z", "url": "https://files.pythonhosted.org/packages/3c/2a/be5565203851ee24f0682e4fba06424c7b945741bac89658d18b1edb7268/xatelite-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:26:20 2020"}