{"info": {"author": "Amazon Web Services", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# Amazon QLDB Shell\n\nThis tool provides an interface to send PartiQL statements to [Amazon Quantum Ledger Database (QLDB)](https://aws.amazon.com/qldb/). \n This tool is not intended to be incorporated into an application or adopted for production purposes. \n The objective of the tool is to give developers, devops, database administrators, and anyone else interested the opportunity for rapid experimentation with QLDB and [PartiQL](https://docs.aws.amazon.com/qldb/latest/developerguide/ql-reference.html). \n## Prerequisites\n\n### Basic Configuration\n\nSee [Accessing Amazon QLDB](https://docs.aws.amazon.com/qldb/latest/developerguide/accessing.html) for information on connecting to AWS.\n\n### Python 3.4 or later\n\nThe driver requires Python 3.4 or later. Please see the link below for more detail to install Python:\n\n* [Python Installation](https://www.python.org/downloads/)\n\n\n### Getting Started\nInstall the QLDB Shell using pip:\n\n```pip3 install qldbshell```\n\n### Invocation\nThe shell can then be invoked by using the following command:\n\n```shell\n$ qldbshell --region <region_code> --ledger <ledger_name>\n```\nAn example region code that can be used is us-east-1.\nThe currently avaiable regions are addressed in the [QLDB General Reference](https://docs.aws.amazon.com/general/latest/gr/qldb.html) page.\nBy default, the shell will use the credentials specified as environment variables and then in the default profile mentioned in `~/.aws/credentials/` (default location set in the AWS_SHARED_CREDENTIALS_FILE environment variable) and then the default profile in `~/.aws/config` (default location set in AWS_CONFIG_FILE environment variable). \nVarious optional arguments can be added to override the profile, endpoints, and region used. To view the arguments, execute the following:\n\n```shell\n$ qldbshell --help\n```\n\n### Example Usage\nAssuming that the ledger, \"test-ledger\" has already been created:\n```shell\n$ qldbshell --region us-east-1 --ledger test-ledger\nqldbshell> CREATE TABLE TestTable\nqldbshell> INSERT INTO TestTable `{\"Name\": \"John Doe\"}` \nqldbshell> SELECT * FROM TestTable\nqldbshell> exit\n```\nWe use backticks in the example above since we use are using Ion literals. For more on querying Ion literals, go [here](https://docs.aws.amazon.com/qldb/latest/developerguide/ql-reference.query.html).\nEach statement between connect and disconnect is considered as a transaction.\n\n### See also\n\n1. Amazon QLDB accepts and stores [Amazon ION](http://amzn.github.io/ion-docs/) Documents. Amazon Ion is a richly-typed, self-describing, hierarchical data serialization format offering interchangeable binary and text representations. For more information read the [ION docs](https://readthedocs.org/projects/ion-python/).\n2. Amazon QLDB supports the [PartiQL](https://partiql.org/) query language. PartiQL provides SQL-compatible query access across multiple data stores containing structured data, semistructured data, and nested data. For more information read the [PartiQL docs](https://partiql.org/docs.html).\n3. We use backticks in our example since we use are using Ion literals. For more on querying Ion with PartiQL, go [here](https://docs.aws.amazon.com/qldb/latest/developerguide/ql-reference.query.html).\n\n## Development\n### Setting up the Shell\n\nAfter cloning this repository, activate a virtual environment and install the package by running:\n```shell\n$ virtualenv venv\n...\n$ . venv/bin/activate\n$ pip install -r requirements.txt\n$ pip install -e .\n```\n\n## License\n\nThis tool is licensed under the Apache 2.0 License.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "qldbshell", "package_url": "https://pypi.org/project/qldbshell/", "platform": "", "project_url": "https://pypi.org/project/qldbshell/", "project_urls": null, "release_url": "https://pypi.org/project/qldbshell/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "A basic CLI for interacting with Amazon QLDB", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Amazon QLDB Shell</h1>\n<p>This tool provides an interface to send PartiQL statements to <a href=\"https://aws.amazon.com/qldb/\" rel=\"nofollow\">Amazon Quantum Ledger Database (QLDB)</a>.\nThis tool is not intended to be incorporated into an application or adopted for production purposes.\nThe objective of the tool is to give developers, devops, database administrators, and anyone else interested the opportunity for rapid experimentation with QLDB and <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/ql-reference.html\" rel=\"nofollow\">PartiQL</a>.</p>\n<h2>Prerequisites</h2>\n<h3>Basic Configuration</h3>\n<p>See <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/accessing.html\" rel=\"nofollow\">Accessing Amazon QLDB</a> for information on connecting to AWS.</p>\n<h3>Python 3.4 or later</h3>\n<p>The driver requires Python 3.4 or later. Please see the link below for more detail to install Python:</p>\n<ul>\n<li><a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">Python Installation</a></li>\n</ul>\n<h3>Getting Started</h3>\n<p>Install the QLDB Shell using pip:</p>\n<p><code>pip3 install qldbshell</code></p>\n<h3>Invocation</h3>\n<p>The shell can then be invoked by using the following command:</p>\n<pre>$ qldbshell --region &lt;region_code&gt; --ledger &lt;ledger_name&gt;\n</pre>\n<p>An example region code that can be used is us-east-1.\nThe currently avaiable regions are addressed in the <a href=\"https://docs.aws.amazon.com/general/latest/gr/qldb.html\" rel=\"nofollow\">QLDB General Reference</a> page.\nBy default, the shell will use the credentials specified as environment variables and then in the default profile mentioned in <code>~/.aws/credentials/</code> (default location set in the AWS_SHARED_CREDENTIALS_FILE environment variable) and then the default profile in <code>~/.aws/config</code> (default location set in AWS_CONFIG_FILE environment variable).\nVarious optional arguments can be added to override the profile, endpoints, and region used. To view the arguments, execute the following:</p>\n<pre>$ qldbshell --help\n</pre>\n<h3>Example Usage</h3>\n<p>Assuming that the ledger, \"test-ledger\" has already been created:</p>\n<pre>$ qldbshell --region us-east-1 --ledger test-ledger\nqldbshell&gt; CREATE TABLE TestTable\nqldbshell&gt; INSERT INTO TestTable <span class=\"sb\">`</span><span class=\"o\">{</span><span class=\"s2\">\"Name\"</span>: <span class=\"s2\">\"John Doe\"</span><span class=\"o\">}</span><span class=\"sb\">`</span> \nqldbshell&gt; SELECT * FROM TestTable\nqldbshell&gt; <span class=\"nb\">exit</span>\n</pre>\n<p>We use backticks in the example above since we use are using Ion literals. For more on querying Ion literals, go <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/ql-reference.query.html\" rel=\"nofollow\">here</a>.\nEach statement between connect and disconnect is considered as a transaction.</p>\n<h3>See also</h3>\n<ol>\n<li>Amazon QLDB accepts and stores <a href=\"http://amzn.github.io/ion-docs/\" rel=\"nofollow\">Amazon ION</a> Documents. Amazon Ion is a richly-typed, self-describing, hierarchical data serialization format offering interchangeable binary and text representations. For more information read the <a href=\"https://readthedocs.org/projects/ion-python/\" rel=\"nofollow\">ION docs</a>.</li>\n<li>Amazon QLDB supports the <a href=\"https://partiql.org/\" rel=\"nofollow\">PartiQL</a> query language. PartiQL provides SQL-compatible query access across multiple data stores containing structured data, semistructured data, and nested data. For more information read the <a href=\"https://partiql.org/docs.html\" rel=\"nofollow\">PartiQL docs</a>.</li>\n<li>We use backticks in our example since we use are using Ion literals. For more on querying Ion with PartiQL, go <a href=\"https://docs.aws.amazon.com/qldb/latest/developerguide/ql-reference.query.html\" rel=\"nofollow\">here</a>.</li>\n</ol>\n<h2>Development</h2>\n<h3>Setting up the Shell</h3>\n<p>After cloning this repository, activate a virtual environment and install the package by running:</p>\n<pre>$ virtualenv venv\n...\n$ . venv/bin/activate\n$ pip install -r requirements.txt\n$ pip install -e .\n</pre>\n<h2>License</h2>\n<p>This tool is licensed under the Apache 2.0 License.</p>\n\n          </div>"}, "last_serial": 7061547, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "836966bf06c5b884e693e9946e93238c", "sha256": "e83be6060ad7f8ef07710ed9c51cb09b7028075966acbf00632bf83bf83c7fb6"}, "downloads": -1, "filename": "qldbshell-0.1.0.tar.gz", "has_sig": false, "md5_digest": "836966bf06c5b884e693e9946e93238c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5339, "upload_time": "2020-03-15T00:11:56", "upload_time_iso_8601": "2020-03-15T00:11:56.047478Z", "url": "https://files.pythonhosted.org/packages/6d/df/bc90ea2a24503d5bc7fccc305774c5681a47c0bd2ee264d5e213cd4fa817/qldbshell-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "270c472e22c5a1c51c8f76f3a7acac02", "sha256": "67f0ea7365a880fced622bd23f2db659e88786358ffd64d6e98c1425646dc815"}, "downloads": -1, "filename": "qldbshell-1.0.0.tar.gz", "has_sig": false, "md5_digest": "270c472e22c5a1c51c8f76f3a7acac02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5261, "upload_time": "2020-04-20T17:11:45", "upload_time_iso_8601": "2020-04-20T17:11:45.838171Z", "url": "https://files.pythonhosted.org/packages/8a/4d/6627b7ff73377e89af314d45a3bff638889acad7281f1d5b3e78240f115e/qldbshell-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "270c472e22c5a1c51c8f76f3a7acac02", "sha256": "67f0ea7365a880fced622bd23f2db659e88786358ffd64d6e98c1425646dc815"}, "downloads": -1, "filename": "qldbshell-1.0.0.tar.gz", "has_sig": false, "md5_digest": "270c472e22c5a1c51c8f76f3a7acac02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5261, "upload_time": "2020-04-20T17:11:45", "upload_time_iso_8601": "2020-04-20T17:11:45.838171Z", "url": "https://files.pythonhosted.org/packages/8a/4d/6627b7ff73377e89af314d45a3bff638889acad7281f1d5b3e78240f115e/qldbshell-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:26 2020"}