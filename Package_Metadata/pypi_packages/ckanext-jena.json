{"info": {"author": "Chau Nguyen", "author_email": "chau@etri.re.kr", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Programming Language :: Python :: 2.7"], "description": ".. You should enable this project on travis-ci.org and coveralls.io to make\n   these badges work. The necessary Travis and Coverage config files have been\n   generated for you.\n\n.. .. image:: https://travis-ci.org/etri-sodas/ckanext-jena.svg?branch=master\n    :target: https://travis-ci.org/etri-sodas/ckanext-jena\n\n.. .. image:: https://coveralls.io/repos/etri-sodas/ckanext-jena/badge.svg\n  :target: https://coveralls.io/r/etri-sodas/ckanext-jena\n\n.. .. image:: https://pypip.in/download/ckanext-jena/badge.svg\n    :target: https://pypi.python.org/pypi/etri-sodas/ckanext-jena/\n    :alt: Downloads\n\n.. .. image:: https://pypip.in/version/ckanext-jena/badge.svg\n    :target: https://pypi.python.org/pypi/ckanext-jena/\n    :alt: Latest Version\n\n.. .. image:: https://pypip.in/py_versions/ckanext-jena/badge.svg\n    :target: https://pypi.python.org/pypi/ckanext-jena/\n    :alt: Supported Python versions\n\n.. .. image:: https://pypip.in/status/ckanext-jena/badge.svg\n    :target: https://pypi.python.org/pypi/ckanext-jena/\n    :alt: Development Status\n\n.. .. image:: https://pypip.in/license/ckanext-jena/badge.svg\n    :target: https://pypi.python.org/pypi/ckanext-jena/\n    :alt: License\n\n===========================================================\nckanext-jena - Semantic data management extension\n===========================================================\n\n.. Put a description of your extension here:\n   What does it do? What features does it have?\n   Consider including some screenshots or embedding a video!\n\nckanext-jena is an extension for enabling the semantic aspect of CKAN with Apache Jena.\n\nThis extension provides an ability to let users store a certain semantic resource (e.g. rdf, ttl, owl) in Apache Jena and perform SPARQL semantic queries.\n\nNotes:\n\n* Apache Jena and Fuseki server need to be running.\n* jena_search_sparql api can be called with ``resource_id`` and ``q`` parameters for semantic queries.\n\n------------\nRequirements\n------------\n\nThis extension was developed and tested under CKAN-2.7.3 and Apache Jena-3.9.0\n\n------------\nInstallation\n------------\n\n.. Add any additional install steps to the list below.\n   For example installing any non-Python dependencies or adding any required\n   config settings.\n\nTo install ckanext-jena:\n\n1. Activate your CKAN virtual environment, for example::\n\n    . /usr/lib/ckan/default/bin/activate\n\n2. Install the ckanext-jena Python package into your virtual environment::\n\n    pip install ckanext-jena\n\n3. Add ``jena`` setting in your CKAN config file (by default the config file is located at ``/etc/ckan/default/production.ini``) as follows::\n\n    ckan.plugins = jena <other-plugins>\n    ckan.jena.fuseki.url = http://127.0.0.1:3030/\n    ckan.jena.fuseki.username = admin\n    ckan.jena.fuseki.password = admin\n\n4. Restart CKAN. For example if you've deployed CKAN with Apache on Ubuntu::\n\n    sudo service apache2 reload\n\n\n------------------------\nDevelopment Installation\n------------------------\n\nTo install ckanext-jena for development, activate your CKAN virtualenv and\ndo::\n\n    git clone https://github.com/etri-odp/ckanext-jena.git\n    cd ckanext-jena\n    python setup.py develop\n    pip install -r dev-requirements.txt\n\n\n-----------------\nRunning the Tests\n-----------------\n\nTo run the tests, do::\n\n    nosetests --nologcapture --with-pylons=test.ini\n\nTo run the tests and produce a coverage report, first make sure you have\ncoverage installed in your virtualenv (``pip install coverage``) then run::\n\n    nosetests --nologcapture --with-pylons=test.ini --with-coverage --cover-package=ckanext.jena --cover-inclusive --cover-erase --cover-tests\n\n\n----------------------------------------------\nRegistering ckanext-jena on PyPI\n----------------------------------------------\n\nckanext-jena should be available on PyPI as\nhttps://pypi.python.org/pypi/ckanext-jena. If that link doesn't work, then\nyou can register the project on PyPI for the first time by following these\nsteps:\n\n1. Create a source distribution of the project::\n\n     python setup.py sdist\n\n2. Register the project::\n\n     python setup.py register\n\n3. Upload the source distribution to PyPI::\n\n     python setup.py sdist upload\n\n4. Tag the first release of the project on GitHub with the version number from\n   the ``setup.py`` file. For example if the version number in ``setup.py`` is\n   0.0.1 then do::\n\n       git tag 0.0.1\n       git push --tags\n\n================\nAcknowledgements\n================\n\nThis work was supported by Institute for Information & communications Technology Promotion (IITP) grant funded by the Korea government (MSIT) (No.2017-00253, Development of an Advanced Open Data Distribution Platform based on International Standards)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/etri-odp/ckanext-jena", "keywords": "CKAN", "license": "AGPL", "maintainer": "", "maintainer_email": "", "name": "ckanext-jena", "package_url": "https://pypi.org/project/ckanext-jena/", "platform": "", "project_url": "https://pypi.org/project/ckanext-jena/", "project_urls": {"Homepage": "https://github.com/etri-odp/ckanext-jena"}, "release_url": "https://pypi.org/project/ckanext-jena/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "An extension for storing file with Apache Jena", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ckanext-jena-semantic-data-management-extension\">\n<h2>ckanext-jena - Semantic data management extension</h2>\n<p>ckanext-jena is an extension for enabling the semantic aspect of CKAN with Apache Jena.</p>\n<p>This extension provides an ability to let users store a certain semantic resource (e.g. rdf, ttl, owl) in Apache Jena and perform SPARQL semantic queries.</p>\n<p>Notes:</p>\n<ul>\n<li>Apache Jena and Fuseki server need to be running.</li>\n<li>jena_search_sparql api can be called with <tt>resource_id</tt> and <tt>q</tt> parameters for semantic queries.</li>\n</ul>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>This extension was developed and tested under CKAN-2.7.3 and Apache Jena-3.9.0</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>To install ckanext-jena:</p>\n<ol>\n<li><p>Activate your CKAN virtual environment, for example:</p>\n<pre>. /usr/lib/ckan/default/bin/activate\n</pre>\n</li>\n<li><p>Install the ckanext-jena Python package into your virtual environment:</p>\n<pre>pip install ckanext-jena\n</pre>\n</li>\n<li><p>Add <tt>jena</tt> setting in your CKAN config file (by default the config file is located at <tt>/etc/ckan/default/production.ini</tt>) as follows:</p>\n<pre>ckan.plugins = jena &lt;other-plugins&gt;\nckan.jena.fuseki.url = http://127.0.0.1:3030/\nckan.jena.fuseki.username = admin\nckan.jena.fuseki.password = admin\n</pre>\n</li>\n<li><p>Restart CKAN. For example if you\u2019ve deployed CKAN with Apache on Ubuntu:</p>\n<pre>sudo service apache2 reload\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"development-installation\">\n<h3>Development Installation</h3>\n<p>To install ckanext-jena for development, activate your CKAN virtualenv and\ndo:</p>\n<pre>git clone https://github.com/etri-odp/ckanext-jena.git\ncd ckanext-jena\npython setup.py develop\npip install -r dev-requirements.txt\n</pre>\n</div>\n<div id=\"running-the-tests\">\n<h3>Running the Tests</h3>\n<p>To run the tests, do:</p>\n<pre>nosetests --nologcapture --with-pylons=test.ini\n</pre>\n<p>To run the tests and produce a coverage report, first make sure you have\ncoverage installed in your virtualenv (<tt>pip install coverage</tt>) then run:</p>\n<pre>nosetests --nologcapture --with-pylons=test.ini --with-coverage --cover-package=ckanext.jena --cover-inclusive --cover-erase --cover-tests\n</pre>\n</div>\n<div id=\"registering-ckanext-jena-on-pypi\">\n<h3>Registering ckanext-jena on PyPI</h3>\n<p>ckanext-jena should be available on PyPI as\n<a href=\"https://pypi.python.org/pypi/ckanext-jena\" rel=\"nofollow\">https://pypi.python.org/pypi/ckanext-jena</a>. If that link doesn\u2019t work, then\nyou can register the project on PyPI for the first time by following these\nsteps:</p>\n<ol>\n<li><p>Create a source distribution of the project:</p>\n<pre>python setup.py sdist\n</pre>\n</li>\n<li><p>Register the project:</p>\n<pre>python setup.py register\n</pre>\n</li>\n<li><p>Upload the source distribution to PyPI:</p>\n<pre>python setup.py sdist upload\n</pre>\n</li>\n<li><p>Tag the first release of the project on GitHub with the version number from\nthe <tt>setup.py</tt> file. For example if the version number in <tt>setup.py</tt> is\n0.0.1 then do:</p>\n<pre>git tag 0.0.1\ngit push --tags\n</pre>\n</li>\n</ol>\n</div>\n</div>\n<div id=\"acknowledgements\">\n<h2>Acknowledgements</h2>\n<p>This work was supported by Institute for Information &amp; communications Technology Promotion (IITP) grant funded by the Korea government (MSIT) (No.2017-00253, Development of an Advanced Open Data Distribution Platform based on International Standards)</p>\n</div>\n\n          </div>"}, "last_serial": 4528766, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "acea70c529cc5b6a5b2d747f51f1b87a", "sha256": "fb64727c5a8ccc5e1b199e5700f8b716106725d6be9a158e90649bf1af2869e0"}, "downloads": -1, "filename": "ckanext_jena-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "acea70c529cc5b6a5b2d747f51f1b87a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 20397, "upload_time": "2018-11-26T08:44:11", "upload_time_iso_8601": "2018-11-26T08:44:11.789226Z", "url": "https://files.pythonhosted.org/packages/35/9e/c6983f08d1e0f8f3bd0204a628a9ae1f9fa0991f9fddfcee5bed778af8ae/ckanext_jena-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8165330a27bf7907a08291da5633d053", "sha256": "172dbdd0da9271f907d52f8a3831540b1b3433cbc0a2c2aa78924a476599c2c0"}, "downloads": -1, "filename": "ckanext-jena-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8165330a27bf7907a08291da5633d053", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21329, "upload_time": "2018-11-26T08:44:14", "upload_time_iso_8601": "2018-11-26T08:44:14.686046Z", "url": "https://files.pythonhosted.org/packages/e0/e7/b8bf08f46ae1544c986906ac44570fac7c3655deda791e05a96d221826a3/ckanext-jena-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "acea70c529cc5b6a5b2d747f51f1b87a", "sha256": "fb64727c5a8ccc5e1b199e5700f8b716106725d6be9a158e90649bf1af2869e0"}, "downloads": -1, "filename": "ckanext_jena-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "acea70c529cc5b6a5b2d747f51f1b87a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 20397, "upload_time": "2018-11-26T08:44:11", "upload_time_iso_8601": "2018-11-26T08:44:11.789226Z", "url": "https://files.pythonhosted.org/packages/35/9e/c6983f08d1e0f8f3bd0204a628a9ae1f9fa0991f9fddfcee5bed778af8ae/ckanext_jena-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8165330a27bf7907a08291da5633d053", "sha256": "172dbdd0da9271f907d52f8a3831540b1b3433cbc0a2c2aa78924a476599c2c0"}, "downloads": -1, "filename": "ckanext-jena-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8165330a27bf7907a08291da5633d053", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21329, "upload_time": "2018-11-26T08:44:14", "upload_time_iso_8601": "2018-11-26T08:44:14.686046Z", "url": "https://files.pythonhosted.org/packages/e0/e7/b8bf08f46ae1544c986906ac44570fac7c3655deda791e05a96d221826a3/ckanext-jena-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:13 2020"}