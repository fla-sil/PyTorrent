{"info": {"author": "Datapunt Amsterdam", "author_email": "datapunt@amsterdam.nl", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "\n\n# Keycloak OIDC\n\nKeycloak OIDC is a simple Django app that wraps the mozilla_django_oidc \napp and implements Keycloak authentication the way we use it at Datapunt. \n\nIt creates and updates users and sets their email, username and first- \nand lastname based on the info provided by keycloak, and manages\ngroup membership based on keycloak roles.\n\n## Quick start\n\n1. Install using pip\n\n    ```bash\n    pip install datapunt_keycloak_oidc\n    ```\n\n2. Add \"keycloak-oidc\" to your INSTALLED_APPS (make sure to load after auth!):\n\n    ```python\n    INSTALLED_APPS = [\n        ...\n        'django.contrib.auth',\n        'keycloak_oidc',  # load after auth!\n    ]\n    ```\n\n3. Add the mozilla_django_oidc.SessionRefreshMiddleware to your MIDDLEWARE \n   (middleware involving session and authentication must come first!):\n\n    ```python\n    MIDDLEWARE = [\n        ...\n        'django.contrib.sessions.middleware.SessionMiddleware',\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        'mozilla_django_oidc.middleware.SessionRefresh',\n    ]\n    ```\n\n4. Add the OIDCAuthenticationBackend to the AUTHENTICATION_BACKENDS:\n\n    ```python\n    AUTHENTICATION_BACKENDS = [\n        'keycloak_oidc.auth.OIDCAuthenticationBackend',\n        ...\n    ]\n    ```\n\n5. In settings.py import the default OIDC settings. These\n   defaults will work in most situations. \n\n    ```python\n    # Import from keycloak_oidc settings and use the defaults\n    from keycloak_oidc.default_settings import *\n    ```\n\n\n6. Set the OIDC_RP_CLIENT_ID and OIDC_RP_CLIENT_SECRET in settings.py. \n   Note that these should be kept secret. Therefore these should preferable\n   be set in the OS ENV. Obtain these from the keycloak provider.\n\n    ```python\n    OIDC_RP_CLIENT_ID = os.environ['OIDC_RP_CLIENT_ID']\n    OIDC_RP_CLIENT_SECRET = os.environ['OIDC_RP_CLIENT_SECRET']\n    ```\n\n   Keycloak only talks to urls that are whitelisted. Therefore, make\n   sure that the app url for production is added to keycloak. To make\n   local development possible, also make sure localhost:8080 (or any other port)\n   is added. \n\n7. Add the OIDC provider URLs to settings.py, and set the proper OS env. This default\n   will fall back to the acceptance keycloak urls.\n\n    ```python\n    OIDC_OP_AUTHORIZATION_ENDPOINT = os.getenv('OIDC_OP_AUTHORIZATION_ENDPOINT',\n        'https://iam.amsterdam.nl/auth/realms/datapunt-acc/protocol/openid-connect/auth')\n    OIDC_OP_TOKEN_ENDPOINT = os.getenv('OIDC_OP_TOKEN_ENDPOINT',\n        'https://iam.amsterdam.nl/auth/realms/datapunt-acc/protocol/openid-connect/token')\n    OIDC_OP_USER_ENDPOINT = os.getenv('OIDC_OP_USER_ENDPOINT',\n        'https://iam.amsterdam.nl/auth/realms/datapunt-acc/protocol/openid-connect/userinfo')\n    OIDC_OP_JWKS_ENDPOINT = os.getenv('OIDC_OP_JWKS_ENDPOINT',\n        'https://iam.amsterdam.nl/auth/realms/datapunt-acc/protocol/openid-connect/certs')\n    OIDC_OP_LOGOUT_ENDPOINT = os.getenv('OIDC_OP_LOGOUT_ENDPOINT',\n        'https://iam.amsterdam.nl/auth/realms/datapunt-acc/protocol/openid-connect/logout')\n    ```\n\n8. When using Django-rest-framework, add the mozilla_django_oidc\n   OIDCAuthentication to the default authentication classes (and\n   make sure the DRF SessionAuthentication has been added):\n\n    ```python\n    REST_FRAMEWORK = dict(\n        ...\n        DEFAULT_AUTHENTICATION_CLASSES=(\n            'mozilla_django_oidc.contrib.drf.OIDCAuthentication',\n            'rest_framework.authentication.SessionAuthentication'\n            ...\n        )\n    )\n    ```\n\n9. When using Django-rest-framework, override the InAuthGroup permission\n   class to implement role based access control:\n\n    ```python\n    from keycloak_oidc.drf.permissions import InAuthGroup\n\n    class InTestAuthGroup(InAuthGroup):\n        \"\"\"\n        A permission to allow access if and only if a user is logged in,\n        and is a member of the 'test' role inside keycloak.\n        \"\"\"\n        allowed_group_names = ['test']\n    ```\n\n10. Include the keycloak-oidc URLconf in your project urls.py:\n\n    ```python\n    url(r'^oidc/', include('keycloak_oidc.urls')),\n    ```\n\n11. IMPORTANT: Make sure to read through the Mozilla Django OIDC docs:\n   https://mozilla-django-oidc.readthedocs.io/en/stable/installation.html\n\n   All settings that can be configured are documented there.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Amsterdam/keycloak_oidc", "keywords": "", "license": "Mozilla Public License 2.0", "maintainer": "", "maintainer_email": "", "name": "datapunt-keycloak-oidc", "package_url": "https://pypi.org/project/datapunt-keycloak-oidc/", "platform": "", "project_url": "https://pypi.org/project/datapunt-keycloak-oidc/", "project_urls": {"Homepage": "https://github.com/Amsterdam/keycloak_oidc"}, "release_url": "https://pypi.org/project/datapunt-keycloak-oidc/0.5/", "requires_dist": ["mozilla-django-oidc (~=1.2)", "pytest ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "twine ; extra == 'dev'"], "requires_python": "", "summary": "A simple Django app to use keycloak over OIDC", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Keycloak OIDC</h1>\n<p>Keycloak OIDC is a simple Django app that wraps the mozilla_django_oidc\napp and implements Keycloak authentication the way we use it at Datapunt.</p>\n<p>It creates and updates users and sets their email, username and first-\nand lastname based on the info provided by keycloak, and manages\ngroup membership based on keycloak roles.</p>\n<h2>Quick start</h2>\n<ol>\n<li>\n<p>Install using pip</p>\n<pre>pip install datapunt_keycloak_oidc\n</pre>\n</li>\n<li>\n<p>Add \"keycloak-oidc\" to your INSTALLED_APPS (make sure to load after auth!):</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django.contrib.auth'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'keycloak_oidc'</span><span class=\"p\">,</span>  <span class=\"c1\"># load after auth!</span>\n<span class=\"p\">]</span>\n</pre>\n</li>\n<li>\n<p>Add the mozilla_django_oidc.SessionRefreshMiddleware to your MIDDLEWARE\n(middleware involving session and authentication must come first!):</p>\n<pre><span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django.contrib.sessions.middleware.SessionMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.auth.middleware.AuthenticationMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'mozilla_django_oidc.middleware.SessionRefresh'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n</li>\n<li>\n<p>Add the OIDCAuthenticationBackend to the AUTHENTICATION_BACKENDS:</p>\n<pre><span class=\"n\">AUTHENTICATION_BACKENDS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'keycloak_oidc.auth.OIDCAuthenticationBackend'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n</li>\n<li>\n<p>In settings.py import the default OIDC settings. These\ndefaults will work in most situations.</p>\n<pre><span class=\"c1\"># Import from keycloak_oidc settings and use the defaults</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keycloak_oidc.default_settings</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n</li>\n<li>\n<p>Set the OIDC_RP_CLIENT_ID and OIDC_RP_CLIENT_SECRET in settings.py.\nNote that these should be kept secret. Therefore these should preferable\nbe set in the OS ENV. Obtain these from the keycloak provider.</p>\n<pre><span class=\"n\">OIDC_RP_CLIENT_ID</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'OIDC_RP_CLIENT_ID'</span><span class=\"p\">]</span>\n<span class=\"n\">OIDC_RP_CLIENT_SECRET</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'OIDC_RP_CLIENT_SECRET'</span><span class=\"p\">]</span>\n</pre>\n<p>Keycloak only talks to urls that are whitelisted. Therefore, make\nsure that the app url for production is added to keycloak. To make\nlocal development possible, also make sure localhost:8080 (or any other port)\nis added.</p>\n</li>\n<li>\n<p>Add the OIDC provider URLs to settings.py, and set the proper OS env. This default\nwill fall back to the acceptance keycloak urls.</p>\n<pre><span class=\"n\">OIDC_OP_AUTHORIZATION_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'OIDC_OP_AUTHORIZATION_ENDPOINT'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'https://iam.amsterdam.nl/auth/realms/datapunt-acc/protocol/openid-connect/auth'</span><span class=\"p\">)</span>\n<span class=\"n\">OIDC_OP_TOKEN_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'OIDC_OP_TOKEN_ENDPOINT'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'https://iam.amsterdam.nl/auth/realms/datapunt-acc/protocol/openid-connect/token'</span><span class=\"p\">)</span>\n<span class=\"n\">OIDC_OP_USER_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'OIDC_OP_USER_ENDPOINT'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'https://iam.amsterdam.nl/auth/realms/datapunt-acc/protocol/openid-connect/userinfo'</span><span class=\"p\">)</span>\n<span class=\"n\">OIDC_OP_JWKS_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'OIDC_OP_JWKS_ENDPOINT'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'https://iam.amsterdam.nl/auth/realms/datapunt-acc/protocol/openid-connect/certs'</span><span class=\"p\">)</span>\n<span class=\"n\">OIDC_OP_LOGOUT_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'OIDC_OP_LOGOUT_ENDPOINT'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'https://iam.amsterdam.nl/auth/realms/datapunt-acc/protocol/openid-connect/logout'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>When using Django-rest-framework, add the mozilla_django_oidc\nOIDCAuthentication to the default authentication classes (and\nmake sure the DRF SessionAuthentication has been added):</p>\n<pre><span class=\"n\">REST_FRAMEWORK</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">DEFAULT_AUTHENTICATION_CLASSES</span><span class=\"o\">=</span><span class=\"p\">(</span>\n        <span class=\"s1\">'mozilla_django_oidc.contrib.drf.OIDCAuthentication'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'rest_framework.authentication.SessionAuthentication'</span>\n        <span class=\"o\">...</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>When using Django-rest-framework, override the InAuthGroup permission\nclass to implement role based access control:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">keycloak_oidc.drf.permissions</span> <span class=\"kn\">import</span> <span class=\"n\">InAuthGroup</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">InTestAuthGroup</span><span class=\"p\">(</span><span class=\"n\">InAuthGroup</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    A permission to allow access if and only if a user is logged in,</span>\n<span class=\"sd\">    and is a member of the 'test' role inside keycloak.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">allowed_group_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'test'</span><span class=\"p\">]</span>\n</pre>\n</li>\n<li>\n<p>Include the keycloak-oidc URLconf in your project urls.py:</p>\n<pre><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^oidc/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'keycloak_oidc.urls'</span><span class=\"p\">)),</span>\n</pre>\n</li>\n<li>\n<p>IMPORTANT: Make sure to read through the Mozilla Django OIDC docs:\n<a href=\"https://mozilla-django-oidc.readthedocs.io/en/stable/installation.html\" rel=\"nofollow\">https://mozilla-django-oidc.readthedocs.io/en/stable/installation.html</a></p>\n</li>\n</ol>\n<p>All settings that can be configured are documented there.</p>\n\n          </div>"}, "last_serial": 5922745, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "b7155ce06af1832c0a0bfc448a89c58c", "sha256": "238a6c317b3ce1911a012f5370df39668a2cadd87df5208cbf7b697f928dd663"}, "downloads": -1, "filename": "datapunt_keycloak_oidc-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b7155ce06af1832c0a0bfc448a89c58c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15348, "upload_time": "2019-10-02T15:17:03", "upload_time_iso_8601": "2019-10-02T15:17:03.886026Z", "url": "https://files.pythonhosted.org/packages/9c/6c/1c5a06273ef8fb69eea35ad761ebaa072df8a15af57f44c7d4827953781a/datapunt_keycloak_oidc-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36f3311cfbfc3408deed0925968b5253", "sha256": "de24c97f68c2f57e94c1b76fb4ef6a51f341262c0344ed4297db2582a5f0c7d3"}, "downloads": -1, "filename": "datapunt-keycloak-oidc-0.3.tar.gz", "has_sig": false, "md5_digest": "36f3311cfbfc3408deed0925968b5253", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12260, "upload_time": "2019-10-02T15:17:47", "upload_time_iso_8601": "2019-10-02T15:17:47.058808Z", "url": "https://files.pythonhosted.org/packages/80/3d/efc78dc5050ce20e43d18d41619b5fe33fa72a5fd65fc453930bebc2ac56/datapunt-keycloak-oidc-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "cde93bfc1b2fd62666c455130951f978", "sha256": "ad21d1a7ffb02ce9ec5cc17340838f7bb1a14759a003aef35741ecb91a4be4ce"}, "downloads": -1, "filename": "datapunt_keycloak_oidc-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "cde93bfc1b2fd62666c455130951f978", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16469, "upload_time": "2019-10-03T08:53:12", "upload_time_iso_8601": "2019-10-03T08:53:12.943555Z", "url": "https://files.pythonhosted.org/packages/b8/07/954587290476a22f32f80f115a386ea210ad88fada2c0a27942ce7b7f0dd/datapunt_keycloak_oidc-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c7d969324adde0cb999ee10824c74e0", "sha256": "52dc96bfd6234f65d2afbc4b6966bbd51e992116a1798153641b1bf07540d3b1"}, "downloads": -1, "filename": "datapunt-keycloak-oidc-0.4.tar.gz", "has_sig": false, "md5_digest": "6c7d969324adde0cb999ee10824c74e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12782, "upload_time": "2019-10-03T08:53:14", "upload_time_iso_8601": "2019-10-03T08:53:14.509513Z", "url": "https://files.pythonhosted.org/packages/7d/d1/9eeb7f04d3e3004a20574276b460c0a8f8500e6023ecea389044d8b35ab7/datapunt-keycloak-oidc-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "758569fb9acd679519f63fd9da6bfbb9", "sha256": "d1b5330e3c64d9c7a698b79f1374897707bf1c26910da03022f23d4d82006709"}, "downloads": -1, "filename": "datapunt_keycloak_oidc-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "758569fb9acd679519f63fd9da6bfbb9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16421, "upload_time": "2019-10-03T08:56:52", "upload_time_iso_8601": "2019-10-03T08:56:52.792149Z", "url": "https://files.pythonhosted.org/packages/e9/87/17d3826c930381f3e2b892eadc05f389c1b698dd12a8e87d492399489b9d/datapunt_keycloak_oidc-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc325c3ca731b0f66d0cd5a7c4b32e4a", "sha256": "83729967568e5fabcf6cce538d2ff4babc33e3099bae0d372fb1351faaab68c2"}, "downloads": -1, "filename": "datapunt-keycloak-oidc-0.4.1.tar.gz", "has_sig": false, "md5_digest": "fc325c3ca731b0f66d0cd5a7c4b32e4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12691, "upload_time": "2019-10-03T08:56:54", "upload_time_iso_8601": "2019-10-03T08:56:54.347877Z", "url": "https://files.pythonhosted.org/packages/29/56/6aec04f6d46b533207dbd06c2830a09c8773b8217388903c300ff6aae127/datapunt-keycloak-oidc-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "5954fe00089f7648b4c5d4a4157917ef", "sha256": "449db7ff2bb26c43b963d47dbc5aa9aeaa4a1f6932e225ad71acfd83153a7c4d"}, "downloads": -1, "filename": "datapunt_keycloak_oidc-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5954fe00089f7648b4c5d4a4157917ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16506, "upload_time": "2019-10-03T09:21:34", "upload_time_iso_8601": "2019-10-03T09:21:34.706776Z", "url": "https://files.pythonhosted.org/packages/91/83/59f65d66cd92f5594809e6925bc5f5b9b87bc747bb483b91170e83f373d1/datapunt_keycloak_oidc-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "011a911eda38b8f394535b36ac76251d", "sha256": "e27d4bf29757522b5ca37ae0a5c7c7e548f3342316da0875e6673cf93e91cb26"}, "downloads": -1, "filename": "datapunt-keycloak-oidc-0.4.2.tar.gz", "has_sig": false, "md5_digest": "011a911eda38b8f394535b36ac76251d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12715, "upload_time": "2019-10-03T09:21:37", "upload_time_iso_8601": "2019-10-03T09:21:37.014786Z", "url": "https://files.pythonhosted.org/packages/86/48/ff1ec3b5fc9829e2f781e776657a41eb9bbc72db775ff5d85bb890505f77/datapunt-keycloak-oidc-0.4.2.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "9b5d928933d479a2a5ef551b08255213", "sha256": "2f926e1ee41eb1dd87f148ce136800de636738983864de230534bf5f31a64883"}, "downloads": -1, "filename": "datapunt_keycloak_oidc-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9b5d928933d479a2a5ef551b08255213", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16469, "upload_time": "2019-10-03T10:15:02", "upload_time_iso_8601": "2019-10-03T10:15:02.626779Z", "url": "https://files.pythonhosted.org/packages/de/ea/92581d2d21239ec85ab9c7bd94fd3acb156262a25025595cf566519e7cb2/datapunt_keycloak_oidc-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eda670c257f994e755428216f29979e9", "sha256": "c7082a77f2734409353e328a4a43cbe6e36c1fbef642e903ce55def2dd0372d1"}, "downloads": -1, "filename": "datapunt-keycloak-oidc-0.5.tar.gz", "has_sig": false, "md5_digest": "eda670c257f994e755428216f29979e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12277, "upload_time": "2019-10-03T10:15:04", "upload_time_iso_8601": "2019-10-03T10:15:04.574325Z", "url": "https://files.pythonhosted.org/packages/88/e6/0284e4c8c5979fcc7da375ee6b1cdf0c6928a2eb26ebd70387e3bf407908/datapunt-keycloak-oidc-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b5d928933d479a2a5ef551b08255213", "sha256": "2f926e1ee41eb1dd87f148ce136800de636738983864de230534bf5f31a64883"}, "downloads": -1, "filename": "datapunt_keycloak_oidc-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9b5d928933d479a2a5ef551b08255213", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16469, "upload_time": "2019-10-03T10:15:02", "upload_time_iso_8601": "2019-10-03T10:15:02.626779Z", "url": "https://files.pythonhosted.org/packages/de/ea/92581d2d21239ec85ab9c7bd94fd3acb156262a25025595cf566519e7cb2/datapunt_keycloak_oidc-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eda670c257f994e755428216f29979e9", "sha256": "c7082a77f2734409353e328a4a43cbe6e36c1fbef642e903ce55def2dd0372d1"}, "downloads": -1, "filename": "datapunt-keycloak-oidc-0.5.tar.gz", "has_sig": false, "md5_digest": "eda670c257f994e755428216f29979e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12277, "upload_time": "2019-10-03T10:15:04", "upload_time_iso_8601": "2019-10-03T10:15:04.574325Z", "url": "https://files.pythonhosted.org/packages/88/e6/0284e4c8c5979fcc7da375ee6b1cdf0c6928a2eb26ebd70387e3bf407908/datapunt-keycloak-oidc-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:14 2020"}