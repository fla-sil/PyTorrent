{"info": {"author": "Daniel Rice", "author_email": "daniel.rice@sanger.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU General Public License (GPL)", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Visualization"], "description": "# shabam\nA python tool to plot BAM or CRAM sequence reads.\n\n## Installation\ninstall [cairo](https://www.cairographics.org/download/) if not already\ninstalled:\n```sh\n# macOS via conda, or via homebrew (choose one, then set the library path)\nconda install cairo pkgconfig\nbrew install cairo pkg-config\n```\n\nInstall shabam:\n```sh\npip install shabam\n```\n\n## The dream\n```py\nfrom shabam import seqplot\nseqplot('example.bam', chrom='1', start=30243, end=30321,\n    fastafile='reference.fasta', out='plot.svg')\n```\n\n![Reality](/tests/data/reality.svg)\n\n### Plotting options\n- shade reads by strand with `by_strand=True`\n- plot multiple sequence files together with a list of paths e.g.\n  `['child.bam', 'mom.bam', 'dad.bam']`\n- export PDF, PNG, SVG or PS formatted plots with matching filename extensions\n\n### Command line version\n```sh\nshabam \\\n  --seqfiles tests/data/example.bam \\\n  --chrom 1 \\\n  --start 30243 \\\n  --end 30321 \\\n  --fastafile tests/data/reference.fasta \\\n  --out plot.svg\n```\n\n## Further improvements to the dream\n- [ ] Use consensus sequence when we don't provide a reference sequence\n- [ ] Allow custom colors\n- [ ] Compute proportion of variants at any site\n- [ ] Plot read depth\n- [ ] At positions with proportion of variants > threshold, reflect proportion\n  with base colors\n- [ ] Option to scale plotted base size, currently at 10 pixels per base\n- [ ] Optionally shade plots deepVariant style:\n    - red channel: nucleotide\n    - blue channel: read strand\n    - green channel: base quality\n    - alpha: base supports ref or alt\n- [ ] Flatten vertical plotting in high depth sequence data\n- [ ] Down-sample reads for extremely high depth sequence data (>1000X)\n\n## Credit\nInitial cigar parsing code lifted with permission from\n[pybamview](https://github.com/mgymrek/pybamview).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "shabam", "package_url": "https://pypi.org/project/shabam/", "platform": "", "project_url": "https://pypi.org/project/shabam/", "project_urls": null, "release_url": "https://pypi.org/project/shabam/1.0.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Easy sequence alignment plots", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>shabam</h1>\n<p>A python tool to plot BAM or CRAM sequence reads.</p>\n<h2>Installation</h2>\n<p>install <a href=\"https://www.cairographics.org/download/\" rel=\"nofollow\">cairo</a> if not already\ninstalled:</p>\n<pre><span class=\"c1\"># macOS via conda, or via homebrew (choose one, then set the library path)</span>\nconda install cairo pkgconfig\nbrew install cairo pkg-config\n</pre>\n<p>Install shabam:</p>\n<pre>pip install shabam\n</pre>\n<h2>The dream</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">shabam</span> <span class=\"kn\">import</span> <span class=\"n\">seqplot</span>\n<span class=\"n\">seqplot</span><span class=\"p\">(</span><span class=\"s1\">'example.bam'</span><span class=\"p\">,</span> <span class=\"n\">chrom</span><span class=\"o\">=</span><span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">30243</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"mi\">30321</span><span class=\"p\">,</span>\n    <span class=\"n\">fastafile</span><span class=\"o\">=</span><span class=\"s1\">'reference.fasta'</span><span class=\"p\">,</span> <span class=\"n\">out</span><span class=\"o\">=</span><span class=\"s1\">'plot.svg'</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"Reality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/676f4391861949225cfdaa1c6e9cb04bfa099c52/2f74657374732f646174612f7265616c6974792e737667\"></p>\n<h3>Plotting options</h3>\n<ul>\n<li>shade reads by strand with <code>by_strand=True</code></li>\n<li>plot multiple sequence files together with a list of paths e.g.\n<code>['child.bam', 'mom.bam', 'dad.bam']</code></li>\n<li>export PDF, PNG, SVG or PS formatted plots with matching filename extensions</li>\n</ul>\n<h3>Command line version</h3>\n<pre>shabam <span class=\"se\">\\</span>\n  --seqfiles tests/data/example.bam <span class=\"se\">\\</span>\n  --chrom <span class=\"m\">1</span> <span class=\"se\">\\</span>\n  --start <span class=\"m\">30243</span> <span class=\"se\">\\</span>\n  --end <span class=\"m\">30321</span> <span class=\"se\">\\</span>\n  --fastafile tests/data/reference.fasta <span class=\"se\">\\</span>\n  --out plot.svg\n</pre>\n<h2>Further improvements to the dream</h2>\n<ul>\n<li>[ ] Use consensus sequence when we don't provide a reference sequence</li>\n<li>[ ] Allow custom colors</li>\n<li>[ ] Compute proportion of variants at any site</li>\n<li>[ ] Plot read depth</li>\n<li>[ ] At positions with proportion of variants &gt; threshold, reflect proportion\nwith base colors</li>\n<li>[ ] Option to scale plotted base size, currently at 10 pixels per base</li>\n<li>[ ] Optionally shade plots deepVariant style:\n<ul>\n<li>red channel: nucleotide</li>\n<li>blue channel: read strand</li>\n<li>green channel: base quality</li>\n<li>alpha: base supports ref or alt</li>\n</ul>\n</li>\n<li>[ ] Flatten vertical plotting in high depth sequence data</li>\n<li>[ ] Down-sample reads for extremely high depth sequence data (&gt;1000X)</li>\n</ul>\n<h2>Credit</h2>\n<p>Initial cigar parsing code lifted with permission from\n<a href=\"https://github.com/mgymrek/pybamview\" rel=\"nofollow\">pybamview</a>.</p>\n\n          </div>"}, "last_serial": 5898388, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "91c37ddc1de3796070fe2f89db32a191", "sha256": "95afc4dc420c345b93fc8d3d9482d032d8329e4612def0f205999525780c15bb"}, "downloads": -1, "filename": "shabam-1.0.0.tar.gz", "has_sig": false, "md5_digest": "91c37ddc1de3796070fe2f89db32a191", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10096, "upload_time": "2019-09-27T22:37:54", "upload_time_iso_8601": "2019-09-27T22:37:54.498409Z", "url": "https://files.pythonhosted.org/packages/10/24/9d4bc77bc708565a8907776c48e94090362702b6e71db5cd0f9fec819aa1/shabam-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "91c37ddc1de3796070fe2f89db32a191", "sha256": "95afc4dc420c345b93fc8d3d9482d032d8329e4612def0f205999525780c15bb"}, "downloads": -1, "filename": "shabam-1.0.0.tar.gz", "has_sig": false, "md5_digest": "91c37ddc1de3796070fe2f89db32a191", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10096, "upload_time": "2019-09-27T22:37:54", "upload_time_iso_8601": "2019-09-27T22:37:54.498409Z", "url": "https://files.pythonhosted.org/packages/10/24/9d4bc77bc708565a8907776c48e94090362702b6e71db5cd0f9fec819aa1/shabam-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:57 2020"}