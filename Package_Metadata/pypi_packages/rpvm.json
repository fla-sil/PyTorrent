{"info": {"author": "namuyan", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6"], "description": "Restricted Python Virtual Machine\n====\nRestricted Python Virtual Machine (R-PVM) implemented by pure python.\n\nspecification\n----\n* aim for complete safe sandbox\n* designed for Python3.6 bytecode\n* execute one by one\n* good for smart contract of crypto currency\n* **No warranty and unstable**\n\ncheck\n----\n* cannot use MAKE_FUNCTION op (lambda, comprehension and inner fnc)\n* cannot use async/await\n* limit to execute function\n* YOU must select safe function\n\nInstall\n----\n`pip3 install rpvm`\n\nHow to use\n----\n```python\nfrom rpvm.vm import VirtualMachine\nfrom RestrictedPython import safe_builtins, safe_globals\n \nsource = \"\"\"\na = 1\nb = 2\nc = a + b\n\"\"\"\ncode = compile(source, '<example>', 'exec')\n \nb = safe_builtins.copy()\nl = dict()\ng = safe_globals.copy()\nvm = VirtualMachine(code, b, l, g)\n \nsteps = 0\nmax_steps = 500\nwhile not vm.finish and steps < max_steps:\n    vm.exec()\n    steps += 1\nprint(\"complete?\", vm.finish)\nprint(\"result\", vm.return_value)\nprint(\"c is\", l['c'])\n```\n\ntest\n----\n```bash\npython3 -m pytest tests\n```\n\nAuthor\n----\n[@namuyan_mine](https://twitter.com/namuyan_mine)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/namuyan/rpvm", "keywords": "", "license": "MIT Licence", "maintainer": "", "maintainer_email": "", "name": "rpvm", "package_url": "https://pypi.org/project/rpvm/", "platform": "", "project_url": "https://pypi.org/project/rpvm/", "project_urls": {"Homepage": "https://github.com/namuyan/rpvm"}, "release_url": "https://pypi.org/project/rpvm/0.1.0a1/", "requires_dist": null, "requires_python": "", "summary": "Restricted Python Virtual Machine", "version": "0.1.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Restricted Python Virtual Machine</h1>\n<p>Restricted Python Virtual Machine (R-PVM) implemented by pure python.</p>\n<h2>specification</h2>\n<ul>\n<li>aim for complete safe sandbox</li>\n<li>designed for Python3.6 bytecode</li>\n<li>execute one by one</li>\n<li>good for smart contract of crypto currency</li>\n<li><strong>No warranty and unstable</strong></li>\n</ul>\n<h2>check</h2>\n<ul>\n<li>cannot use MAKE_FUNCTION op (lambda, comprehension and inner fnc)</li>\n<li>cannot use async/await</li>\n<li>limit to execute function</li>\n<li>YOU must select safe function</li>\n</ul>\n<h2>Install</h2>\n<p><code>pip3 install rpvm</code></p>\n<h2>How to use</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rpvm.vm</span> <span class=\"kn\">import</span> <span class=\"n\">VirtualMachine</span>\n<span class=\"kn\">from</span> <span class=\"nn\">RestrictedPython</span> <span class=\"kn\">import</span> <span class=\"n\">safe_builtins</span><span class=\"p\">,</span> <span class=\"n\">safe_globals</span>\n \n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">a = 1</span>\n<span class=\"s2\">b = 2</span>\n<span class=\"s2\">c = a + b</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"nb\">compile</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;example&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'exec'</span><span class=\"p\">)</span>\n \n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">safe_builtins</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">()</span>\n<span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">safe_globals</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"n\">vm</span> <span class=\"o\">=</span> <span class=\"n\">VirtualMachine</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">)</span>\n \n<span class=\"n\">steps</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">max_steps</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>\n<span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">vm</span><span class=\"o\">.</span><span class=\"n\">finish</span> <span class=\"ow\">and</span> <span class=\"n\">steps</span> <span class=\"o\">&lt;</span> <span class=\"n\">max_steps</span><span class=\"p\">:</span>\n    <span class=\"n\">vm</span><span class=\"o\">.</span><span class=\"n\">exec</span><span class=\"p\">()</span>\n    <span class=\"n\">steps</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"complete?\"</span><span class=\"p\">,</span> <span class=\"n\">vm</span><span class=\"o\">.</span><span class=\"n\">finish</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"result\"</span><span class=\"p\">,</span> <span class=\"n\">vm</span><span class=\"o\">.</span><span class=\"n\">return_value</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"c is\"</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">[</span><span class=\"s1\">'c'</span><span class=\"p\">])</span>\n</pre>\n<h2>test</h2>\n<pre>python3 -m pytest tests\n</pre>\n<h2>Author</h2>\n<p><a href=\"https://twitter.com/namuyan_mine\" rel=\"nofollow\">@namuyan_mine</a></p>\n\n          </div>"}, "last_serial": 5526187, "releases": {"0.1.0a1": [{"comment_text": "", "digests": {"md5": "6b0c13687931450779997565f0a4ac8c", "sha256": "4d352685e38b9bca4355419a5238ecb07802aa0bb0593366fbf0ca442381ba15"}, "downloads": -1, "filename": "rpvm-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "6b0c13687931450779997565f0a4ac8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8020, "upload_time": "2019-07-13T06:18:34", "upload_time_iso_8601": "2019-07-13T06:18:34.285517Z", "url": "https://files.pythonhosted.org/packages/58/8d/965446ed7bc26253a6bedf1148b3c207009c206975765e67f16a28f3349c/rpvm-0.1.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6b0c13687931450779997565f0a4ac8c", "sha256": "4d352685e38b9bca4355419a5238ecb07802aa0bb0593366fbf0ca442381ba15"}, "downloads": -1, "filename": "rpvm-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "6b0c13687931450779997565f0a4ac8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8020, "upload_time": "2019-07-13T06:18:34", "upload_time_iso_8601": "2019-07-13T06:18:34.285517Z", "url": "https://files.pythonhosted.org/packages/58/8d/965446ed7bc26253a6bedf1148b3c207009c206975765e67f16a28f3349c/rpvm-0.1.0a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:50 2020"}