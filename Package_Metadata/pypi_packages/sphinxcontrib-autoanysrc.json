{"info": {"author": "Evgeniy Tatarkin", "author_email": "tatarkin.evg@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Documentation", "Topic :: Utilities"], "description": "autoanysrc\n==========\n\n.. attention::\n\n    Currently in early development stage\n\nExtension for gathering reST documentation from any files.\nThis is a documenter_ from ext.autodoc.\n\nIn current state this extension will only insert reST docs from files to\ntarget documentation project without auto generation definitions\nand signatures.\n\nBut it simple and clean to make documentation for API and store documentation\nstrings in the source code.\n\nInstall\n-------\n\n::\n\n    pip install sphinxcontrib-autoanysrc\n\n\nUsage\n-----\n\nAdd autoanysrc to extensions list::\n\n    extensions = ['sphinxcontrib.autoanysrc', ]\n\nExample of usage::\n\n    .. autoanysrc:: blabla\n        :src: app/**/*.js\n        :analyzer: js\n\n.. note::\n\n    directive argument 'blabla' not used now, but it required by autodoc\n    behaviour\n\nWhere:\n\n - `src` option is the pattern to list source files where docs are stored\n - `analyzer` option to determine witch analyzer must be used for\n   processing this files\n\nDirective will iterate over `app/**/*.js` files and process\nit line by line.\n\n\nCustom analyzer\n---------------\n\nautoanysrc allow define custom analyzers.\n\nDefine custom analyzer (conf.py)::\n\n    # make conf.py importtable\n    sys.path.insert(0, os.path.abspath('.'))\n\n    from sphinxcontrib.autoanysrc import analyzers\n\n    class CustomAnalyzer(analyzers.BaseAnalyzer):\n\n        def process(self, content):\n            \"\"\"\n            Must process content line by line\n\n            :param content: processing file content\n            :returns: generator of pairs docs line and line number\n            \"\"\"\n            for lineno, srcline in enumerate(content.split('\\n')):\n                yield 'some parsed doc line from content', lineno\n\n\n    # put analyzer to the autonaysrc setting\n    autoanysrc_analyzers = {\n        'my-custom': 'conf.CustomAnalyzer',\n    }\n\n\nAnd use it::\n\n    .. autoanysrc:: blabla\n        :src: ../src/*.js\n        :analyzer: my-custom\n\n\nDefault analyzers\n-----------------\n\nJSAnalyzer\n``````````\n\nSearch comments blocks starts by `/*\"\"\"` and ends by `*/`\n(inspired by `Nuulogic/sphinx-jsapidoc`_).\n\n::\n\n    .. autoanysrc:: directives\n        :src: app/services.js\n        :analyzer: js\n\nWhere services.js::\n\n    /*\"\"\"\n    Services\n    ````````\n\n    The function :func:`someService` does a some function.\n    */\n\n    function someService(href, callback, errback) {\n    /*\"\"\"\n    .. function:: someService(href, callback[, errback])\n\n        :param string href: An URI to the location of the resource.\n        :param callback: Gets called with the object.\n        :throws SomeError: For whatever reason in that case.\n        :returns: Something.\n    */\n        return 'some result';\n    };\n\n\nTODO\n----\n\n- encoding option\n- allow internal indent in comment block\n- generate signatures like ext.autodoc...\n\n\n.. _documenter: http://sphinx-doc.org/extdev/appapi.html?highlight=documenter#sphinx.application.Sphinx.add_autodocumenter\n.. _`Nuulogic/sphinx-jsapidoc`: https://github.com/Nuulogic/sphinx-jsapidoc", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "sphinxcontrib-autoanysrc", "package_url": "https://pypi.org/project/sphinxcontrib-autoanysrc/", "platform": "any", "project_url": "https://pypi.org/project/sphinxcontrib-autoanysrc/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/sphinxcontrib-autoanysrc/0.0.3-20141120/", "requires_dist": null, "requires_python": null, "summary": "Sphinx extension with some autodoc features for any sources", "version": "0.0.3-20141120", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<p>Attention!</p>\n<p>Currently in early development stage</p>\n</div>\n<p>Extension for gathering reST documentation from any files.\nThis is a <a href=\"http://sphinx-doc.org/extdev/appapi.html?highlight=documenter#sphinx.application.Sphinx.add_autodocumenter\" rel=\"nofollow\">documenter</a> from ext.autodoc.</p>\n<p>In current state this extension will only insert reST docs from files to\ntarget documentation project without auto generation definitions\nand signatures.</p>\n<p>But it simple and clean to make documentation for API and store documentation\nstrings in the source code.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install sphinxcontrib-autoanysrc\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Add autoanysrc to extensions list:</p>\n<pre>extensions = ['sphinxcontrib.autoanysrc', ]\n</pre>\n<p>Example of usage:</p>\n<pre>.. autoanysrc:: blabla\n    :src: app/**/*.js\n    :analyzer: js\n</pre>\n<div>\n<p>Note</p>\n<p>directive argument \u2018blabla\u2019 not used now, but it required by autodoc\nbehaviour</p>\n</div>\n<p>Where:</p>\n<blockquote>\n<ul>\n<li><cite>src</cite> option is the pattern to list source files where docs are stored</li>\n<li><cite>analyzer</cite> option to determine witch analyzer must be used for\nprocessing this files</li>\n</ul>\n</blockquote>\n<p>Directive will iterate over <cite>app/**/*.js</cite> files and process\nit line by line.</p>\n</div>\n<div id=\"custom-analyzer\">\n<h2>Custom analyzer</h2>\n<p>autoanysrc allow define custom analyzers.</p>\n<p>Define custom analyzer (conf.py):</p>\n<pre># make conf.py importtable\nsys.path.insert(0, os.path.abspath('.'))\n\nfrom sphinxcontrib.autoanysrc import analyzers\n\nclass CustomAnalyzer(analyzers.BaseAnalyzer):\n\n    def process(self, content):\n        \"\"\"\n        Must process content line by line\n\n        :param content: processing file content\n        :returns: generator of pairs docs line and line number\n        \"\"\"\n        for lineno, srcline in enumerate(content.split('\\n')):\n            yield 'some parsed doc line from content', lineno\n\n\n# put analyzer to the autonaysrc setting\nautoanysrc_analyzers = {\n    'my-custom': 'conf.CustomAnalyzer',\n}\n</pre>\n<p>And use it:</p>\n<pre>.. autoanysrc:: blabla\n    :src: ../src/*.js\n    :analyzer: my-custom\n</pre>\n</div>\n<div id=\"default-analyzers\">\n<h2>Default analyzers</h2>\n<h2 id=\"jsanalyzer\"><span class=\"section-subtitle\">JSAnalyzer</span></h2>\n<p>Search comments blocks starts by <cite>/*\u201d\u201d\u201d</cite> and ends by <cite>*/</cite>\n(inspired by <a href=\"https://github.com/Nuulogic/sphinx-jsapidoc\" rel=\"nofollow\">Nuulogic/sphinx-jsapidoc</a>).</p>\n<pre>.. autoanysrc:: directives\n    :src: app/services.js\n    :analyzer: js\n</pre>\n<p>Where services.js:</p>\n<pre>/*\"\"\"\nServices\n````````\n\nThe function :func:`someService` does a some function.\n*/\n\nfunction someService(href, callback, errback) {\n/*\"\"\"\n.. function:: someService(href, callback[, errback])\n\n    :param string href: An URI to the location of the resource.\n    :param callback: Gets called with the object.\n    :throws SomeError: For whatever reason in that case.\n    :returns: Something.\n*/\n    return 'some result';\n};\n</pre>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>encoding option</li>\n<li>allow internal indent in comment block</li>\n<li>generate signatures like ext.autodoc\u2026</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1314342, "releases": {"0.0.1-20141114": [{"comment_text": "", "digests": {"md5": "9b375143943a2dad74fc96658a7f6252", "sha256": "e8025b7cde160a88004e60a01066f9303f8ac8b45793f1d87c56e12c00137b49"}, "downloads": -1, "filename": "sphinxcontrib-autoanysrc-0.0.1-20141114.tar.gz", "has_sig": false, "md5_digest": "9b375143943a2dad74fc96658a7f6252", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9571, "upload_time": "2014-11-14T11:27:18", "upload_time_iso_8601": "2014-11-14T11:27:18.376715Z", "url": "https://files.pythonhosted.org/packages/f3/25/afa262fd29871076a9521b145d8bb575699dddfd517fef5e1be536e8f746/sphinxcontrib-autoanysrc-0.0.1-20141114.tar.gz", "yanked": false}], "0.0.1-20141119": [{"comment_text": "", "digests": {"md5": "2da612afaec8d7be04a58086de37fda6", "sha256": "04319ff0524ba1ec6da192c3901925ebb70a0fd3a6a1925ad9dd668c12115247"}, "downloads": -1, "filename": "sphinxcontrib-autoanysrc-0.0.1-20141119.tar.gz", "has_sig": false, "md5_digest": "2da612afaec8d7be04a58086de37fda6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9522, "upload_time": "2014-11-19T10:08:22", "upload_time_iso_8601": "2014-11-19T10:08:22.716892Z", "url": "https://files.pythonhosted.org/packages/a7/32/c8b988fd21ceff5c0b0aec1e0d573c8085d8103dcb12682aea7f0ded9cf2/sphinxcontrib-autoanysrc-0.0.1-20141119.tar.gz", "yanked": false}], "0.0.1dev-20141023": [{"comment_text": "", "digests": {"md5": "8dc8b7bc92f217bfc4c500b7683b51b8", "sha256": "add4702c1cc0a1b82d8dfdb5d7b22893e9e082a840ea44806b064f6047ca0264"}, "downloads": -1, "filename": "sphinxcontrib-autoanysrc-0.0.1dev-20141023.tar.gz", "has_sig": false, "md5_digest": "8dc8b7bc92f217bfc4c500b7683b51b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9566, "upload_time": "2014-10-23T12:20:56", "upload_time_iso_8601": "2014-10-23T12:20:56.660199Z", "url": "https://files.pythonhosted.org/packages/4e/84/91eae56e35be9f74b1b62c51603cfdfe6d4bad48e1fe1760680d93ca0203/sphinxcontrib-autoanysrc-0.0.1dev-20141023.tar.gz", "yanked": false}], "0.0.1dev-20141025": [{"comment_text": "", "digests": {"md5": "2c5d3b27bc229a42e6d169ed0dea533a", "sha256": "1acb1b0d7de2c70f104abe682dcb435808c8ef19a03f67b3dbce29a97f620eaa"}, "downloads": -1, "filename": "sphinxcontrib-autoanysrc-0.0.1dev-20141025.tar.gz", "has_sig": false, "md5_digest": "2c5d3b27bc229a42e6d169ed0dea533a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9567, "upload_time": "2014-10-25T16:45:30", "upload_time_iso_8601": "2014-10-25T16:45:30.862337Z", "url": "https://files.pythonhosted.org/packages/c6/2b/a6a6d9a4d74e5159d9f2f98754c92f00e85f7d3e01209b2e5677bdabe421/sphinxcontrib-autoanysrc-0.0.1dev-20141025.tar.gz", "yanked": false}], "0.0.2-20141119": [{"comment_text": "", "digests": {"md5": "015786c34733a7663716e52ad0c6f09d", "sha256": "b3ce7ddea4987ef0a5ee3f62585a991800202ffacf0e88689ebd2d6820e72815"}, "downloads": -1, "filename": "sphinxcontrib-autoanysrc-0.0.2-20141119.tar.gz", "has_sig": false, "md5_digest": "015786c34733a7663716e52ad0c6f09d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9665, "upload_time": "2014-11-19T10:56:10", "upload_time_iso_8601": "2014-11-19T10:56:10.183093Z", "url": "https://files.pythonhosted.org/packages/fc/58/dc958bb6b74b2b6e9c575f6127a4fb3948fea5cbceebae8a469d122f38c8/sphinxcontrib-autoanysrc-0.0.2-20141119.tar.gz", "yanked": false}], "0.0.3-20141120": [{"comment_text": "", "digests": {"md5": "4dfc8433a9279470bd02569f6f0857bf", "sha256": "04086ba828f7054bf2c1782b231a106750ee6f43a59a68faffbb5bbb12e5f991"}, "downloads": -1, "filename": "sphinxcontrib-autoanysrc-0.0.3-20141120.tar.gz", "has_sig": false, "md5_digest": "4dfc8433a9279470bd02569f6f0857bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10790, "upload_time": "2014-11-20T12:45:16", "upload_time_iso_8601": "2014-11-20T12:45:16.226030Z", "url": "https://files.pythonhosted.org/packages/96/a7/c7144c2dcb7faef4d913ce30931fcb49849a4b156824575bd4e2c71d0736/sphinxcontrib-autoanysrc-0.0.3-20141120.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4dfc8433a9279470bd02569f6f0857bf", "sha256": "04086ba828f7054bf2c1782b231a106750ee6f43a59a68faffbb5bbb12e5f991"}, "downloads": -1, "filename": "sphinxcontrib-autoanysrc-0.0.3-20141120.tar.gz", "has_sig": false, "md5_digest": "4dfc8433a9279470bd02569f6f0857bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10790, "upload_time": "2014-11-20T12:45:16", "upload_time_iso_8601": "2014-11-20T12:45:16.226030Z", "url": "https://files.pythonhosted.org/packages/96/a7/c7144c2dcb7faef4d913ce30931fcb49849a4b156824575bd4e2c71d0736/sphinxcontrib-autoanysrc-0.0.3-20141120.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:20 2020"}