{"info": {"author": "Maxim Poletaev", "author_email": "max.poletaev@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": ".. image:: https://travis-ci.org/zenwalker/django-goodforms.svg\n   :target: https://travis-ci.org/zenwalker/django-goodforms\n   :alt: Build Status\n\nGood forms for Django\n=====================\n\n**GoodForms** \u2014 rails-like renderer for your form fields. Provide fully control of filed styles and attributes. It's not replacement for ``django.forms``.\n\n\nInstallation\n------------\n\nRun ``pip install django-goodforms`` and add ``goodforms`` to ``INSTALLED_APPS``. That's all.\n\n\nUsage\n-----\n\nThe view::\n\n    from django.shortcuts import render\n    from django import forms\n\n    class LoginForm(forms.Form):\n        username = forms.CharField()\n        password = forms.PasswordField()\n\n    def sign_up(request):\n        from = MyForm(initial={'username': 'johnsmith'})\n        return render(request, 'index.html', {'form': form})\n\n\nThe template::\n\n    {% load form_fields %}\n\n    {% form name=\"login\" class=\"login-form\" %}\n        {% textfield form.username class=\"login-form_input\" %}\n        {% textfield form.password class=\"login-form_input\" %}\n        {% submit_button \"Login\" %}\n    {% endform %}\n\n\nControls\n--------\n\nForm tag\n~~~~~~~~\n\n- Form tag automatically inject csrf-token.\n- Fields use ``name`` attribute as prefix for ``id`` and ``for`` in labels.\n\n::\n\n    {% form name=\"myform\" %}\n        <!-- Form content -->\n    {% endform %}\n\n\nTextfield and Textarea\n~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    {% textfield form.title **kwargs %}\n    {% textarea form.description **kwargs %}\n\n\nSelect\n~~~~~~\n\n::\n\n    {% select form.country values=\"ru:Russia,de:Germany\" %}\n\nYou can use any dict, iterable collection or queryset as values list::\n\n    {% select form.county values=any_iterable_object value_key=\"code\" label_key=\"title\" %}\n\n\nCheckbox and radio-button\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    {% radio form.gender value=\"female\" %}\n    {% radio form.gender value=\"male\" %}\n\nThe ``label`` attribute wraps checkbox to ``<label>`` tag. All attributes provite to it::\n\n    {% checkbox form.agree label=\"I agree\" style=\"font-weight: bold;\" %}\n\n    <label style=\"font-weight: bold;\">\n        <input type=\"checkbox\" name=\"agree\" value=\"1\"> <span>I agree</span>\n    </label>\n\n\nSubmit button\n~~~~~~~~~~~~~\n\n::\n\n    {% submit_button \"Send message\" %}\n    {% submit_button \"Save as draft\" name=\"is_draft\" value=True %}\n\n\nTips\n----\n\nYou can use any of field without a form class::\n\n    {% input \"username\" required=True %}\n    {% select \"city\" values=\"1:New York, 2:London\" %}\n\n\nSettigns\n--------\n\n``GOODFORMS_XHTML`` \u2014\u00a0Enable or disable XHTML syntax (default: ``False``)\n\n``GOODFORMS_AUTO_ID`` \u2014 Automatically generate ``id`` and ``for`` attributes for fields and labels (default: ``True``)\n\n``GOODFORMS_ID_PREFIX`` \u2014\u00a0Prefix for auto-generated ``id`` and ``for`` attributes. For forms without ``name`` attribute (default: ``field``)\n\n\nLicense\n-------\n\nLicensed under the MIT license.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zenwalker/django-goodforms", "keywords": "django forms", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-goodforms", "package_url": "https://pypi.org/project/django-goodforms/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-goodforms/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/zenwalker/django-goodforms"}, "release_url": "https://pypi.org/project/django-goodforms/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Custom renderer for django form fields", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/zenwalker/django-goodforms\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/79e57dc7365df196583d3be1d0704c595d63a8e5/68747470733a2f2f7472617669732d63692e6f72672f7a656e77616c6b65722f646a616e676f2d676f6f64666f726d732e737667\"></a>\n<div id=\"good-forms-for-django\">\n<h2>Good forms for Django</h2>\n<p><strong>GoodForms</strong> \u2014 rails-like renderer for your form fields. Provide fully control of filed styles and attributes. It\u2019s not replacement for <tt>django.forms</tt>.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Run <tt>pip install <span class=\"pre\">django-goodforms</span></tt> and add <tt>goodforms</tt> to <tt>INSTALLED_APPS</tt>. That\u2019s all.</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>The view:</p>\n<pre>from django.shortcuts import render\nfrom django import forms\n\nclass LoginForm(forms.Form):\n    username = forms.CharField()\n    password = forms.PasswordField()\n\ndef sign_up(request):\n    from = MyForm(initial={'username': 'johnsmith'})\n    return render(request, 'index.html', {'form': form})\n</pre>\n<p>The template:</p>\n<pre>{% load form_fields %}\n\n{% form name=\"login\" class=\"login-form\" %}\n    {% textfield form.username class=\"login-form_input\" %}\n    {% textfield form.password class=\"login-form_input\" %}\n    {% submit_button \"Login\" %}\n{% endform %}\n</pre>\n</div>\n<div id=\"controls\">\n<h3>Controls</h3>\n<div id=\"form-tag\">\n<h4>Form tag</h4>\n<ul>\n<li>Form tag automatically inject csrf-token.</li>\n<li>Fields use <tt>name</tt> attribute as prefix for <tt>id</tt> and <tt>for</tt> in labels.</li>\n</ul>\n<pre>{% form name=\"myform\" %}\n    &lt;!-- Form content --&gt;\n{% endform %}\n</pre>\n</div>\n<div id=\"textfield-and-textarea\">\n<h4>Textfield and Textarea</h4>\n<pre>{% textfield form.title **kwargs %}\n{% textarea form.description **kwargs %}\n</pre>\n</div>\n<div id=\"select\">\n<h4>Select</h4>\n<pre>{% select form.country values=\"ru:Russia,de:Germany\" %}\n</pre>\n<p>You can use any dict, iterable collection or queryset as values list:</p>\n<pre>{% select form.county values=any_iterable_object value_key=\"code\" label_key=\"title\" %}\n</pre>\n</div>\n<div id=\"checkbox-and-radio-button\">\n<h4>Checkbox and radio-button</h4>\n<pre>{% radio form.gender value=\"female\" %}\n{% radio form.gender value=\"male\" %}\n</pre>\n<p>The <tt>label</tt> attribute wraps checkbox to <tt>&lt;label&gt;</tt> tag. All attributes provite to it:</p>\n<pre>{% checkbox form.agree label=\"I agree\" style=\"font-weight: bold;\" %}\n\n&lt;label style=\"font-weight: bold;\"&gt;\n    &lt;input type=\"checkbox\" name=\"agree\" value=\"1\"&gt; &lt;span&gt;I agree&lt;/span&gt;\n&lt;/label&gt;\n</pre>\n</div>\n<div id=\"submit-button\">\n<h4>Submit button</h4>\n<pre>{% submit_button \"Send message\" %}\n{% submit_button \"Save as draft\" name=\"is_draft\" value=True %}\n</pre>\n</div>\n</div>\n<div id=\"tips\">\n<h3>Tips</h3>\n<p>You can use any of field without a form class:</p>\n<pre>{% input \"username\" required=True %}\n{% select \"city\" values=\"1:New York, 2:London\" %}\n</pre>\n</div>\n<div id=\"settigns\">\n<h3>Settigns</h3>\n<p><tt>GOODFORMS_XHTML</tt> \u2014\u00a0Enable or disable XHTML syntax (default: <tt>False</tt>)</p>\n<p><tt>GOODFORMS_AUTO_ID</tt> \u2014 Automatically generate <tt>id</tt> and <tt>for</tt> attributes for fields and labels (default: <tt>True</tt>)</p>\n<p><tt>GOODFORMS_ID_PREFIX</tt> \u2014\u00a0Prefix for auto-generated <tt>id</tt> and <tt>for</tt> attributes. For forms without <tt>name</tt> attribute (default: <tt>field</tt>)</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>Licensed under the MIT license.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1843337, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b57a89fe021226d606e33dea5b700ccf", "sha256": "5e7547ddc5a7cbd3438319959dd1d723d4d3c766ff362ae604de4af679f500be"}, "downloads": -1, "filename": "django-goodforms-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b57a89fe021226d606e33dea5b700ccf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3942, "upload_time": "2015-09-17T21:21:48", "upload_time_iso_8601": "2015-09-17T21:21:48.943525Z", "url": "https://files.pythonhosted.org/packages/b1/1a/3c8e217f9e0979e56bf27e0d287c875ab5673cf906b7a7ff1d5d07fd5505/django-goodforms-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "cf2be1ed60a09e88ad9381623e29f857", "sha256": "6c87307ae9f62aca86ef6db85c54c2224765b6b8e809e91be3f2574bb0c23ba7"}, "downloads": -1, "filename": "django-goodforms-0.2.0.tar.gz", "has_sig": false, "md5_digest": "cf2be1ed60a09e88ad9381623e29f857", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3970, "upload_time": "2015-11-21T08:37:27", "upload_time_iso_8601": "2015-11-21T08:37:27.504354Z", "url": "https://files.pythonhosted.org/packages/90/22/a150456aca1f83c6051e55b96e52437b180534e9364ed9cc53a28120b1ad/django-goodforms-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "29da989abec9771a3e9b46f82702a7c9", "sha256": "d857de312ef118014161e147ca2abc67ba6c1bb36d203eff9c86f8472d7c479d"}, "downloads": -1, "filename": "django-goodforms-0.2.1.tar.gz", "has_sig": false, "md5_digest": "29da989abec9771a3e9b46f82702a7c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5237, "upload_time": "2015-12-02T13:50:50", "upload_time_iso_8601": "2015-12-02T13:50:50.027652Z", "url": "https://files.pythonhosted.org/packages/bf/7a/250f7d63eae65dd77e931f9a8a4299398013b971801b61179d2d904bb699/django-goodforms-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "29da989abec9771a3e9b46f82702a7c9", "sha256": "d857de312ef118014161e147ca2abc67ba6c1bb36d203eff9c86f8472d7c479d"}, "downloads": -1, "filename": "django-goodforms-0.2.1.tar.gz", "has_sig": false, "md5_digest": "29da989abec9771a3e9b46f82702a7c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5237, "upload_time": "2015-12-02T13:50:50", "upload_time_iso_8601": "2015-12-02T13:50:50.027652Z", "url": "https://files.pythonhosted.org/packages/bf/7a/250f7d63eae65dd77e931f9a8a4299398013b971801b61179d2d904bb699/django-goodforms-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:50 2020"}