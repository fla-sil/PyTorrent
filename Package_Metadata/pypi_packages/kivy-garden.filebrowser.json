{"info": {"author": "Kivy", "author_email": "kivy@kivy.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries"], "description": "[![Coverage Status](https://coveralls.io/repos/github/kivy-garden/filebrowser/badge.svg?branch=master)](https://coveralls.io/github/kivy-garden/filebrowser?branch=master)\n[![Github Build Status](https://github.com/kivy-garden/filebrowser/workflows/Garden%20flower/badge.svg)](https://github.com/kivy-garden/filebrowser/actions)\n\nSee https://kivy-garden.github.io/filebrowser/ for the rendered filebrowser docs.\n\nFileBrowser\n===========\n\nThe ``FileBrowser`` widget is an advanced file browser. You use it\nsimilarly to FileChooser usage.\n\nIt provides a shortcut bar with links to special and system directories.\nWhen touching next to a shortcut in the links bar, it'll expand and show\nall the directories within that directory. It also facilitates specifying\ncustom paths to be added to the shortcuts list.\n\nIt provides a icon and list view to choose files from. And it also accepts\nfilter and filename inputs.\n\nTo create a ``FileBrowser`` which prints the currently selected file as \nwell as the current text in the filename field when 'Select' is pressed,\nwith a shortcut to the Documents directory added to the favorites bar:\n\n.. code-block:: python\n\n    from kivy.app import App\n    from os.path import sep, expanduser, isdir, dirname\n    import sys\n\n    class TestApp(App):\n\n        def build(self):\n            if sys.platform == 'win':\n                user_path = dirname(expanduser('~')) + sep + 'Documents'\n            else:\n                user_path = expanduser('~') + sep + 'Documents'\n            browser = FileBrowser(select_string='Select',\n                                  favorites=[(user_path, 'Documents')])\n            browser.bind(\n                        on_success=self._fbrowser_success,\n                        on_canceled=self._fbrowser_canceled)\n            return browser\n\n        def _fbrowser_canceled(self, instance):\n            print 'cancelled, Close self.'\n\n        def _fbrowser_success(self, instance):\n            print instance.selection\n\n    TestApp().run()\n\nEvents\n------\n\n- ``on_canceled``\n  Fired when the `Cancel` buttons `on_release` event is called.\n- ``on_success``\n  Fired when the `Select` buttons `on_release` event is called.\n\n\n\nInstall\n---------\n\n```sh\npip install kivy_garden.filebrowser\n```\n\nCI\n--\n\nEvery push or pull request run the [GitHub Action](https://github.com/kivy-garden/flower/actions) CI.\nIt tests the code on various OS and also generates wheels that can be released on PyPI upon a\ntag. Docs are also generated and uploaded to the repo as well as artifacts of the CI.\n\nTODO\n-------\n\n* add your code\n\nContributing\n--------------\n\nCheck out our [contribution guide](CONTRIBUTING.md) and feel free to improve the flower.\n\nLicense\n---------\n\nThis software is released under the terms of the MIT License.\nPlease see the [LICENSE.txt](LICENSE.txt) file.\n\nHow to release\n===============\n\n* update `__version__` in `kivy-garden/filebrowser/__init__.py` to the latest version.\n* update `CHANGELOG.md` and commit the changes\n* call `git tag -a x.y.z -m \"Tagging version x.y.z\"`\n* call `python setup.py bdist_wheel --universal` and `python setup.py sdist`, which generates the wheel and sdist in the dist/* directory\n* Make sure the dist directory contains the files to be uploaded to pypi and call `twine check dist/*`\n* then call `twine upload dist/*` to upload to pypi.\n* call `git push origin master --tags` to push the latest changes and the tags to github.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kivy-garden/filebrowser", "keywords": "Kivy kivy-garden", "license": "", "maintainer": "", "maintainer_email": "", "name": "kivy-garden.filebrowser", "package_url": "https://pypi.org/project/kivy-garden.filebrowser/", "platform": "", "project_url": "https://pypi.org/project/kivy-garden.filebrowser/", "project_urls": {"Bug Reports": "https://github.com/kivy-garden/filebrowser/issues", "Homepage": "https://github.com/kivy-garden/filebrowser", "Source": "https://github.com/kivy-garden/filebrowser"}, "release_url": "https://pypi.org/project/kivy-garden.filebrowser/1.1.2/", "requires_dist": ["coveralls ; extra == 'ci'", "pycodestyle ; extra == 'ci'", "pytest (>=3.6) ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "pytest-asyncio ; extra == 'dev'", "sphinx-rtd-theme ; extra == 'dev'"], "requires_python": "", "summary": "An advanced kivy file browser.", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://coveralls.io/github/kivy-garden/filebrowser?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d980c62309f4462d9c923dac9c9bc62766183d9/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6b6976792d67617264656e2f66696c6562726f777365722f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/kivy-garden/filebrowser/actions\" rel=\"nofollow\"><img alt=\"Github Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8b147d747c0f7103bc6f6d9ba4dadcc3224d5b3/68747470733a2f2f6769746875622e636f6d2f6b6976792d67617264656e2f66696c6562726f777365722f776f726b666c6f77732f47617264656e253230666c6f7765722f62616467652e737667\"></a></p>\n<p>See <a href=\"https://kivy-garden.github.io/filebrowser/\" rel=\"nofollow\">https://kivy-garden.github.io/filebrowser/</a> for the rendered filebrowser docs.</p>\n<h1>FileBrowser</h1>\n<p>The <code>FileBrowser</code> widget is an advanced file browser. You use it\nsimilarly to FileChooser usage.</p>\n<p>It provides a shortcut bar with links to special and system directories.\nWhen touching next to a shortcut in the links bar, it'll expand and show\nall the directories within that directory. It also facilitates specifying\ncustom paths to be added to the shortcuts list.</p>\n<p>It provides a icon and list view to choose files from. And it also accepts\nfilter and filename inputs.</p>\n<p>To create a <code>FileBrowser</code> which prints the currently selected file as\nwell as the current text in the filename field when 'Select' is pressed,\nwith a shortcut to the Documents directory added to the favorites bar:</p>\n<p>.. code-block:: python</p>\n<pre><code>from kivy.app import App\nfrom os.path import sep, expanduser, isdir, dirname\nimport sys\n\nclass TestApp(App):\n\n    def build(self):\n        if sys.platform == 'win':\n            user_path = dirname(expanduser('~')) + sep + 'Documents'\n        else:\n            user_path = expanduser('~') + sep + 'Documents'\n        browser = FileBrowser(select_string='Select',\n                              favorites=[(user_path, 'Documents')])\n        browser.bind(\n                    on_success=self._fbrowser_success,\n                    on_canceled=self._fbrowser_canceled)\n        return browser\n\n    def _fbrowser_canceled(self, instance):\n        print 'cancelled, Close self.'\n\n    def _fbrowser_success(self, instance):\n        print instance.selection\n\nTestApp().run()\n</code></pre>\n<h2>Events</h2>\n<ul>\n<li><code>on_canceled</code>\nFired when the <code>Cancel</code> buttons <code>on_release</code> event is called.</li>\n<li><code>on_success</code>\nFired when the <code>Select</code> buttons <code>on_release</code> event is called.</li>\n</ul>\n<h2>Install</h2>\n<pre>pip install kivy_garden.filebrowser\n</pre>\n<h2>CI</h2>\n<p>Every push or pull request run the <a href=\"https://github.com/kivy-garden/flower/actions\" rel=\"nofollow\">GitHub Action</a> CI.\nIt tests the code on various OS and also generates wheels that can be released on PyPI upon a\ntag. Docs are also generated and uploaded to the repo as well as artifacts of the CI.</p>\n<h2>TODO</h2>\n<ul>\n<li>add your code</li>\n</ul>\n<h2>Contributing</h2>\n<p>Check out our <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">contribution guide</a> and feel free to improve the flower.</p>\n<h2>License</h2>\n<p>This software is released under the terms of the MIT License.\nPlease see the <a href=\"LICENSE.txt\" rel=\"nofollow\">LICENSE.txt</a> file.</p>\n<h1>How to release</h1>\n<ul>\n<li>update <code>__version__</code> in <code>kivy-garden/filebrowser/__init__.py</code> to the latest version.</li>\n<li>update <code>CHANGELOG.md</code> and commit the changes</li>\n<li>call <code>git tag -a x.y.z -m \"Tagging version x.y.z\"</code></li>\n<li>call <code>python setup.py bdist_wheel --universal</code> and <code>python setup.py sdist</code>, which generates the wheel and sdist in the dist/* directory</li>\n<li>Make sure the dist directory contains the files to be uploaded to pypi and call <code>twine check dist/*</code></li>\n<li>then call <code>twine upload dist/*</code> to upload to pypi.</li>\n<li>call <code>git push origin master --tags</code> to push the latest changes and the tags to github.</li>\n</ul>\n\n          </div>"}, "last_serial": 6211162, "releases": {"1.1.1.dev0": [{"comment_text": "", "digests": {"md5": "341ccf4f91f2a4a4157c4ea748001458", "sha256": "502b9c8eb9ce1e6bc28ccb5ff0129522e4ae44690e5538ff75ff623ddf8460ed"}, "downloads": -1, "filename": "kivy_garden.filebrowser-1.1.1.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "341ccf4f91f2a4a4157c4ea748001458", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9391, "upload_time": "2019-11-27T22:03:20", "upload_time_iso_8601": "2019-11-27T22:03:20.746872Z", "url": "https://files.pythonhosted.org/packages/ea/9b/cd2b37a2fff6108f3402f03835a18e411da589fe92854622953e96e33b09/kivy_garden.filebrowser-1.1.1.dev0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "482f2f6301124d92b09af1fc9456da6a", "sha256": "4bf246fe19bddf81e8078ad3ffbdd45c1b1702ad7f8ef891d4fdc8588f5ffe4a"}, "downloads": -1, "filename": "kivy_garden.filebrowser-1.1.1.dev0.tar.gz", "has_sig": false, "md5_digest": "482f2f6301124d92b09af1fc9456da6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9025, "upload_time": "2019-11-27T22:03:30", "upload_time_iso_8601": "2019-11-27T22:03:30.592620Z", "url": "https://files.pythonhosted.org/packages/5d/29/d6f7ae54952fad00a5a33c728849e9499466ce66144e9b05437d58a4d3c8/kivy_garden.filebrowser-1.1.1.dev0.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "bc2be82760b8ea5f989e06e188b3e847", "sha256": "b20e186be7991037a3b84f2b36de62e310cf40f00a2de6d87cc593ff50084ceb"}, "downloads": -1, "filename": "kivy_garden.filebrowser-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bc2be82760b8ea5f989e06e188b3e847", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9329, "upload_time": "2019-11-27T23:03:23", "upload_time_iso_8601": "2019-11-27T23:03:23.750312Z", "url": "https://files.pythonhosted.org/packages/3a/06/74e8b851bf562552765994051fa9f0092e3adfeba6e67d2f6dd74ffa0f6e/kivy_garden.filebrowser-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8acbf777f2549b4d6f12b640e6a34970", "sha256": "70507c604d9692dcb06283c1a48a8fbbb0382f5420f49ba359d29f066747b246"}, "downloads": -1, "filename": "kivy_garden.filebrowser-1.1.2.tar.gz", "has_sig": false, "md5_digest": "8acbf777f2549b4d6f12b640e6a34970", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9032, "upload_time": "2019-11-27T23:03:25", "upload_time_iso_8601": "2019-11-27T23:03:25.120004Z", "url": "https://files.pythonhosted.org/packages/93/69/293908da625a2811059a1f4b1df714fde5f8218455c61f027fd7890bc5af/kivy_garden.filebrowser-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bc2be82760b8ea5f989e06e188b3e847", "sha256": "b20e186be7991037a3b84f2b36de62e310cf40f00a2de6d87cc593ff50084ceb"}, "downloads": -1, "filename": "kivy_garden.filebrowser-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bc2be82760b8ea5f989e06e188b3e847", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9329, "upload_time": "2019-11-27T23:03:23", "upload_time_iso_8601": "2019-11-27T23:03:23.750312Z", "url": "https://files.pythonhosted.org/packages/3a/06/74e8b851bf562552765994051fa9f0092e3adfeba6e67d2f6dd74ffa0f6e/kivy_garden.filebrowser-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8acbf777f2549b4d6f12b640e6a34970", "sha256": "70507c604d9692dcb06283c1a48a8fbbb0382f5420f49ba359d29f066747b246"}, "downloads": -1, "filename": "kivy_garden.filebrowser-1.1.2.tar.gz", "has_sig": false, "md5_digest": "8acbf777f2549b4d6f12b640e6a34970", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9032, "upload_time": "2019-11-27T23:03:25", "upload_time_iso_8601": "2019-11-27T23:03:25.120004Z", "url": "https://files.pythonhosted.org/packages/93/69/293908da625a2811059a1f4b1df714fde5f8218455c61f027fd7890bc5af/kivy_garden.filebrowser-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:30 2020"}