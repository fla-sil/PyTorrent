{"info": {"author": "garyelephant", "author_email": "garygaowork@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "pygrok |Build Status|\n=====================\n\n|Join the chat at https://gitter.im/garyelephant/pygrok|\n\nA Python library to parse strings and extract information from\nstructured/unstructured data\n\nWhat can I use Grok for?\n------------------------\n\n-  parsing and matching patterns in a string(log, message etc.)\n-  relieving from complex regular expressions.\n-  extracting information from structured/unstructured data\n\nInstallation\n------------\n\n.. code:: Bash\n\n        $ pip install pygrok\n\nor download, uncompress and install pygrok from\n`here <https://github.com/garyelephant/pygrok/releases/latest>`__:\n\n.. code:: Bash\n\n        $ tar zxvf pygrok-xx.tar.gz\n        $ cd pygrok_dir\n        $ sudo python setup.py install\n\nGetting Started\n---------------\n\n.. code:: Python\n\n    from pygrok import Grok\n    text = 'gary is male, 25 years old and weighs 68.5 kilograms'\n    pattern = '%{WORD:name} is %{WORD:gender}, %{NUMBER:age} years old and weighs %{NUMBER:weight} kilograms'\n    grok = Grok(pattern)\n    print grok.match(text)\n\n    # {'gender': 'male', 'age': '25', 'name': 'gary', 'weight': '68.5'}\n\nPretty Cool !\n\nNumbers can be converted from string to ``int`` or ``float`` if you use\n``%{pattern:name:type}`` syntax, such as ``%{NUMBER:age:int}``\n\n.. code:: Python\n\n    from pygrok import Grok\n    text = 'gary is male, 25 years old and weighs 68.5 kilograms'\n    pattern = '%{WORD:name} is %{WORD:gender}, %{NUMBER:age:int} years old and weighs %{NUMBER:weight:float} kilograms'\n    grok = Grok(pattern)\n    print grok.match(text, pattern)\n\n    # {'gender': 'male', 'age': 25, 'name': 'gary', 'weight': 68.5}\n\nNow ``age`` is of type ``int`` and ``weight`` is of type ``float``.\n\nAwesome !\n\nSome of the pattern you can use are listed here:\n\n::\n\n    `WORD` means \\b\\w+\\b in regular expression.\n    `NUMBER` means (?:%{BASE10NUM})\n    `BASE10NUM` means (?<![0-9.+-])(?>[+-]?(?:(?:[0-9]+(?:\\.[0-9]+)?)|(?:\\.[0-9]+)))\n\n    other patterns such as `IP`, `HOSTNAME`, `URIPATH`, `DATE`, `TIMESTAMP_ISO8601`, `COMMONAPACHELOG`..\n\nSee All patterns `here <./pygrok/patterns>`__\n\nYou can also have custom pattern, see `these\ncodes <https://github.com/garyelephant/pygrok/blob/master/tests/test_pygrok.py#L97>`__.\n\nMore details\n------------\n\nBeause python re module does not support regular expression syntax\natomic grouping(?>),so pygrok requires\n`regex <https://pypi.python.org/pypi/regex/2014.06.28>`__ to be\ninstalled.\n\npygrok is inspired by `Grok <https://github.com/jordansissel/grok>`__\ndeveloped by Jordan Sissel. This is not a wrapper of Jordan Sissel's\nGrok and totally implemented by me.\n\nGrok is a simple software that allows you to easily parse strings, logs\nand other files. With grok, you can turn unstructured log and event data\ninto structured data.Pygrok does the same thing.\n\nI recommend you to have a look at `logstash filter\ngrok <https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html>`__,\nit explains how Grok-like thing work.\n\npattern files come from `logstash filter grok's pattern\nfiles <https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns>`__\n\nContribute\n----------\n\n-  You are encouraged to\n   `fork <https://github.com/garyelephant/pygrok/fork>`__, improve the\n   code, then make a pull request.\n-  `Issue tracker <https://github.com/garyelephant/pygrok/issues>`__\n\nGet Help\n--------\n\n::\n\n    mail:garygaowork@gmail.com\n    twitter:@garyelephant\n\nContributors\n------------\n\nThanks to `all\ncontributors <https://github.com/garyelephant/pygrok/graphs/contributors>`__\n\n.. |Build Status| image:: https://travis-ci.org/garyelephant/pygrok.svg?branch=master\n   :target: https://travis-ci.org/garyelephant/pygrok\n.. |Join the chat at https://gitter.im/garyelephant/pygrok| image:: https://badges.gitter.im/Join%20Chat.svg\n   :target: https://gitter.im/garyelephant/pygrok?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/garyelephant/pygrok/tarball/v1.0.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/garyelephant/pygrok", "keywords": "python grok,regex", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pygrok", "package_url": "https://pypi.org/project/pygrok/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pygrok/", "project_urls": {"Download": "https://github.com/garyelephant/pygrok/tarball/v1.0.0", "Homepage": "https://github.com/garyelephant/pygrok"}, "release_url": "https://pypi.org/project/pygrok/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "A Python library to parse strings and extract information from structured/unstructured data", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://gitter.im/garyelephant/pygrok?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/garyelephant/pygrok\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/454be82554a06af0fd3393415ef17b59d8550498/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\"></a></p>\n<p>A Python library to parse strings and extract information from\nstructured/unstructured data</p>\n<div id=\"what-can-i-use-grok-for\">\n<h2>What can I use Grok for?</h2>\n<ul>\n<li>parsing and matching patterns in a string(log, message etc.)</li>\n<li>relieving from complex regular expressions.</li>\n<li>extracting information from structured/unstructured data</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install pygrok\n</pre>\n<p>or download, uncompress and install pygrok from\n<a href=\"https://github.com/garyelephant/pygrok/releases/latest\" rel=\"nofollow\">here</a>:</p>\n<pre>$ tar zxvf pygrok-xx.tar.gz\n$ <span class=\"nb\">cd</span> pygrok_dir\n$ sudo python setup.py install\n</pre>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pygrok</span> <span class=\"kn\">import</span> <span class=\"n\">Grok</span>\n<span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s1\">'gary is male, 25 years old and weighs 68.5 kilograms'</span>\n<span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"s1\">'%{WORD:name} is %{WORD:gender}, %{NUMBER:age} years old and weighs %{NUMBER:weight} kilograms'</span>\n<span class=\"n\">grok</span> <span class=\"o\">=</span> <span class=\"n\">Grok</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">grok</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># {'gender': 'male', 'age': '25', 'name': 'gary', 'weight': '68.5'}</span>\n</pre>\n<p>Pretty Cool !</p>\n<p>Numbers can be converted from string to <tt>int</tt> or <tt>float</tt> if you use\n<tt>%{pattern:name:type}</tt> syntax, such as <tt>%{NUMBER:age:int}</tt></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pygrok</span> <span class=\"kn\">import</span> <span class=\"n\">Grok</span>\n<span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s1\">'gary is male, 25 years old and weighs 68.5 kilograms'</span>\n<span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"s1\">'%{WORD:name} is %{WORD:gender}, %{NUMBER:age:int} years old and weighs %{NUMBER:weight:float} kilograms'</span>\n<span class=\"n\">grok</span> <span class=\"o\">=</span> <span class=\"n\">Grok</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">grok</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">pattern</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># {'gender': 'male', 'age': 25, 'name': 'gary', 'weight': 68.5}</span>\n</pre>\n<p>Now <tt>age</tt> is of type <tt>int</tt> and <tt>weight</tt> is of type <tt>float</tt>.</p>\n<p>Awesome !</p>\n<p>Some of the pattern you can use are listed here:</p>\n<pre>`WORD` means \\b\\w+\\b in regular expression.\n`NUMBER` means (?:%{BASE10NUM})\n`BASE10NUM` means (?&lt;![0-9.+-])(?&gt;[+-]?(?:(?:[0-9]+(?:\\.[0-9]+)?)|(?:\\.[0-9]+)))\n\nother patterns such as `IP`, `HOSTNAME`, `URIPATH`, `DATE`, `TIMESTAMP_ISO8601`, `COMMONAPACHELOG`..\n</pre>\n<p>See All patterns <a href=\"./pygrok/patterns\" rel=\"nofollow\">here</a></p>\n<p>You can also have custom pattern, see <a href=\"https://github.com/garyelephant/pygrok/blob/master/tests/test_pygrok.py#L97\" rel=\"nofollow\">these\ncodes</a>.</p>\n</div>\n<div id=\"more-details\">\n<h2>More details</h2>\n<p>Beause python re module does not support regular expression syntax\natomic grouping(?&gt;),so pygrok requires\n<a href=\"https://pypi.python.org/pypi/regex/2014.06.28\" rel=\"nofollow\">regex</a> to be\ninstalled.</p>\n<p>pygrok is inspired by <a href=\"https://github.com/jordansissel/grok\" rel=\"nofollow\">Grok</a>\ndeveloped by Jordan Sissel. This is not a wrapper of Jordan Sissel\u2019s\nGrok and totally implemented by me.</p>\n<p>Grok is a simple software that allows you to easily parse strings, logs\nand other files. With grok, you can turn unstructured log and event data\ninto structured data.Pygrok does the same thing.</p>\n<p>I recommend you to have a look at <a href=\"https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html\" rel=\"nofollow\">logstash filter\ngrok</a>,\nit explains how Grok-like thing work.</p>\n<p>pattern files come from <a href=\"https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns\" rel=\"nofollow\">logstash filter grok\u2019s pattern\nfiles</a></p>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<ul>\n<li>You are encouraged to\n<a href=\"https://github.com/garyelephant/pygrok/fork\" rel=\"nofollow\">fork</a>, improve the\ncode, then make a pull request.</li>\n<li><a href=\"https://github.com/garyelephant/pygrok/issues\" rel=\"nofollow\">Issue tracker</a></li>\n</ul>\n</div>\n<div id=\"get-help\">\n<h2>Get Help</h2>\n<pre>mail:garygaowork@gmail.com\ntwitter:@garyelephant\n</pre>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<p>Thanks to <a href=\"https://github.com/garyelephant/pygrok/graphs/contributors\" rel=\"nofollow\">all\ncontributors</a></p>\n</div>\n\n          </div>"}, "last_serial": 2360976, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "225a73e5a6324a5e18867086639f9c06", "sha256": "582ca04ce1c74b1930ddd1103289d91a184002dcda33b555923ada867f35b017"}, "downloads": -1, "filename": "pygrok-0.5.0.tar.gz", "has_sig": false, "md5_digest": "225a73e5a6324a5e18867086639f9c06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13469, "upload_time": "2015-05-09T08:53:38", "upload_time_iso_8601": "2015-05-09T08:53:38.636898Z", "url": "https://files.pythonhosted.org/packages/08/6b/854505af1a223f0a0cb4675a2285cb88bc6a66450a42866af91b632b7376/pygrok-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "3b0a11b62a5c14bb3586ee07b078c728", "sha256": "9957999743381e9b8ea2757640a5ca19b65980f7aa34eab9940b0e326e6ce0ef"}, "downloads": -1, "filename": "pygrok-0.6.0.tar.gz", "has_sig": false, "md5_digest": "3b0a11b62a5c14bb3586ee07b078c728", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13455, "upload_time": "2015-10-09T06:48:20", "upload_time_iso_8601": "2015-10-09T06:48:20.329632Z", "url": "https://files.pythonhosted.org/packages/a1/b3/cdcf1d5ed2883d634c3d82333b808e9b8d1d9d85999695911fe86af2b593/pygrok-0.6.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "f81a95825c77ce9414f572e0cba72ed4", "sha256": "d1b8d287833f7746a425a438f670e494b3885bb9c80e923c8496ebf7b7d61b87"}, "downloads": -1, "filename": "pygrok-0.7.1.tar.gz", "has_sig": false, "md5_digest": "f81a95825c77ce9414f572e0cba72ed4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13513, "upload_time": "2015-11-06T07:05:56", "upload_time_iso_8601": "2015-11-06T07:05:56.337812Z", "url": "https://files.pythonhosted.org/packages/e6/89/eb8eaab801ddf740da4aa2bb308eb41d8dd212ba61fbb653300989624e3f/pygrok-0.7.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "db490a696c46f4ffbd4057f5e2d4cd3f", "sha256": "ae635e3c0ba0eab76aec9d86ae1bab70883e8e71505ec2d6cb8989e66f5810af"}, "downloads": -1, "filename": "pygrok-1.0.0.tar.gz", "has_sig": false, "md5_digest": "db490a696c46f4ffbd4057f5e2d4cd3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18997, "upload_time": "2016-09-24T08:32:38", "upload_time_iso_8601": "2016-09-24T08:32:38.164199Z", "url": "https://files.pythonhosted.org/packages/ce/a5/963d78c4eda7edb0ea827679dbcf5f77e4d767562b59681bd23ea5913af6/pygrok-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "db490a696c46f4ffbd4057f5e2d4cd3f", "sha256": "ae635e3c0ba0eab76aec9d86ae1bab70883e8e71505ec2d6cb8989e66f5810af"}, "downloads": -1, "filename": "pygrok-1.0.0.tar.gz", "has_sig": false, "md5_digest": "db490a696c46f4ffbd4057f5e2d4cd3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18997, "upload_time": "2016-09-24T08:32:38", "upload_time_iso_8601": "2016-09-24T08:32:38.164199Z", "url": "https://files.pythonhosted.org/packages/ce/a5/963d78c4eda7edb0ea827679dbcf5f77e4d767562b59681bd23ea5913af6/pygrok-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:39 2020"}