{"info": {"author": "Eli Segal", "author_email": "eli.segal@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/rockem/busypie/master/doc/readme-logo.png\" width=\"120\"/>\n</p>\n<p align=\"center\">\n  <strong>Easy and expressive busy-waiting for Python</strong>\n</p>\n<p align=\"center\">\n  <a href=\"https://github.com/rockem/busypie/actions\"><img src=\"https://github.com/rockem/busypie/workflows/Build/badge.svg\"/></a>\n  <a href=\"https://github.com/rockem/busypie/releases\"><img src=\"https://img.shields.io/github/v/release/rockem/busypie\"/></a>\n  <a href=\"https://github.com/rockem/busypie/blob/master/LICENSE\"><img src=\"http://img.shields.io/:license-apache2.0-blue.svg\"/></a>\n</p>\n\n## Intro\nAlthough you wouldn't want to do much busy waiting in your production code, \nTesting is a different matter. When testing asynchronous systems, \nit's very helpful to wait for some scenario to finish its course. \nBusyPie will help you to do busy waiting easily and expressively. \n\n## Installation\nTo install it using pip \n```shell script\npython -m pip install busypie\n```\nTo include it in *requirements.txt* file add\n```text\nbusypie==0.2.1\n```\n\n## Example\nMost typical usage will be in test, when we have a scenario \nthat require us to wait for something to happen.\n```python\ndef test_event_should_be_dispatched():\n    dispatcher.dispatch(event)\n    wait().at_most(2, SECONDS).until(event_dispatched)\n```\n\n## Usage\nWait for a condition. Default wait time is 10 seconds.\n```python\nwait().until(condiction_function)\nwait().during(condition_function)\n```\nSpecify maximum time to meet the condition \n```python\nwait().at_most(FIVE_SECONDS).until(condition_function)\nwait_at_most(FIVE_SECONDS).until(condition_function)\nwait().at_most(10, SECOND).until(condition_function)\nwait_at_most(10, SECONDS).until(condition_function)    \n```\nIgnoring exceptions thrown from a condition function\n```python\ngiven().ignore_exceptions().wait().until(condiction_function)\nwait().ignore_exceptions(ZeroDevisionError).until(condiction_function)\n```\nChanging poll interval\n```python\nwait().poll_interval(FIVE_HUNDRED_MILLISECONDS).until(condiction_function)\nwait().poll_interval(2, SECOND).until(condiction_function)\n```\nChanging polling delay\n```python\nwait().poll_delay(SECOND).during(app_is_pending)\n```\nChanging the default values of busypie\n```python\nset_default_timeout(60, SECONDS) # Default is 10 seconds\n```\nResetting default values\n```python\nreset_defaults()\n```\n\n\n## Credits\nThis project took a lot of inspiration from [Awaitility](https://github.com/awaitility/awaitility)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rockem/busypie", "keywords": "busy wait tdd test builder sleep wait pytest", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "busypie", "package_url": "https://pypi.org/project/busypie/", "platform": "", "project_url": "https://pypi.org/project/busypie/", "project_urls": {"Homepage": "https://github.com/rockem/busypie"}, "release_url": "https://pypi.org/project/busypie/0.3.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Easy and expressive busy-waiting for Python", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1677501f9facf382f823f10930e17a381ac0635a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f726f636b656d2f627573797069652f6d61737465722f646f632f726561646d652d6c6f676f2e706e67\" width=\"120\">\n</p>\n<p align=\"center\">\n  <strong>Easy and expressive busy-waiting for Python</strong>\n</p>\n<p align=\"center\">\n  <a href=\"https://github.com/rockem/busypie/actions\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aba280c12bd2ea80c3c14d4a4566a67e852151ad/68747470733a2f2f6769746875622e636f6d2f726f636b656d2f627573797069652f776f726b666c6f77732f4275696c642f62616467652e737667\"></a>\n  <a href=\"https://github.com/rockem/busypie/releases\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a37257c420e58e4a2d9303b0a999c2646869b4b8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f726f636b656d2f62757379706965\"></a>\n  <a href=\"https://github.com/rockem/busypie/blob/master/LICENSE\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c237cfab76bcdac696a911b59b8ce66d37bef088/687474703a2f2f696d672e736869656c64732e696f2f3a6c6963656e73652d617061636865322e302d626c75652e737667\"></a>\n</p>\n<h2>Intro</h2>\n<p>Although you wouldn't want to do much busy waiting in your production code,\nTesting is a different matter. When testing asynchronous systems,\nit's very helpful to wait for some scenario to finish its course.\nBusyPie will help you to do busy waiting easily and expressively.</p>\n<h2>Installation</h2>\n<p>To install it using pip</p>\n<pre>python -m pip install busypie\n</pre>\n<p>To include it in <em>requirements.txt</em> file add</p>\n<pre>busypie==0.2.1\n</pre>\n<h2>Example</h2>\n<p>Most typical usage will be in test, when we have a scenario\nthat require us to wait for something to happen.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_event_should_be_dispatched</span><span class=\"p\">():</span>\n    <span class=\"n\">dispatcher</span><span class=\"o\">.</span><span class=\"n\">dispatch</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span>\n    <span class=\"n\">wait</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">at_most</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">SECONDS</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">until</span><span class=\"p\">(</span><span class=\"n\">event_dispatched</span><span class=\"p\">)</span>\n</pre>\n<h2>Usage</h2>\n<p>Wait for a condition. Default wait time is 10 seconds.</p>\n<pre><span class=\"n\">wait</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">until</span><span class=\"p\">(</span><span class=\"n\">condiction_function</span><span class=\"p\">)</span>\n<span class=\"n\">wait</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">during</span><span class=\"p\">(</span><span class=\"n\">condition_function</span><span class=\"p\">)</span>\n</pre>\n<p>Specify maximum time to meet the condition</p>\n<pre><span class=\"n\">wait</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">at_most</span><span class=\"p\">(</span><span class=\"n\">FIVE_SECONDS</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">until</span><span class=\"p\">(</span><span class=\"n\">condition_function</span><span class=\"p\">)</span>\n<span class=\"n\">wait_at_most</span><span class=\"p\">(</span><span class=\"n\">FIVE_SECONDS</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">until</span><span class=\"p\">(</span><span class=\"n\">condition_function</span><span class=\"p\">)</span>\n<span class=\"n\">wait</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">at_most</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">SECOND</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">until</span><span class=\"p\">(</span><span class=\"n\">condition_function</span><span class=\"p\">)</span>\n<span class=\"n\">wait_at_most</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">SECONDS</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">until</span><span class=\"p\">(</span><span class=\"n\">condition_function</span><span class=\"p\">)</span>    \n</pre>\n<p>Ignoring exceptions thrown from a condition function</p>\n<pre><span class=\"n\">given</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">ignore_exceptions</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">until</span><span class=\"p\">(</span><span class=\"n\">condiction_function</span><span class=\"p\">)</span>\n<span class=\"n\">wait</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">ignore_exceptions</span><span class=\"p\">(</span><span class=\"n\">ZeroDevisionError</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">until</span><span class=\"p\">(</span><span class=\"n\">condiction_function</span><span class=\"p\">)</span>\n</pre>\n<p>Changing poll interval</p>\n<pre><span class=\"n\">wait</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">poll_interval</span><span class=\"p\">(</span><span class=\"n\">FIVE_HUNDRED_MILLISECONDS</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">until</span><span class=\"p\">(</span><span class=\"n\">condiction_function</span><span class=\"p\">)</span>\n<span class=\"n\">wait</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">poll_interval</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">SECOND</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">until</span><span class=\"p\">(</span><span class=\"n\">condiction_function</span><span class=\"p\">)</span>\n</pre>\n<p>Changing polling delay</p>\n<pre><span class=\"n\">wait</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">poll_delay</span><span class=\"p\">(</span><span class=\"n\">SECOND</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">during</span><span class=\"p\">(</span><span class=\"n\">app_is_pending</span><span class=\"p\">)</span>\n</pre>\n<p>Changing the default values of busypie</p>\n<pre><span class=\"n\">set_default_timeout</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">SECONDS</span><span class=\"p\">)</span> <span class=\"c1\"># Default is 10 seconds</span>\n</pre>\n<p>Resetting default values</p>\n<pre><span class=\"n\">reset_defaults</span><span class=\"p\">()</span>\n</pre>\n<h2>Credits</h2>\n<p>This project took a lot of inspiration from <a href=\"https://github.com/awaitility/awaitility\" rel=\"nofollow\">Awaitility</a></p>\n\n          </div>"}, "last_serial": 6551160, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "4a28049edd8dae7d8fcf5052c6c3940f", "sha256": "849e550045c3732efd4f645038c0d096e136b7c21c32ad85702771041d751a99"}, "downloads": -1, "filename": "busypie-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4a28049edd8dae7d8fcf5052c6c3940f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7722, "upload_time": "2019-12-21T16:36:56", "upload_time_iso_8601": "2019-12-21T16:36:56.639659Z", "url": "https://files.pythonhosted.org/packages/9a/66/28b1d597caf2121504e0f14eed77933091221da5776a5f60d64b9edc05c5/busypie-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17fca74f65b38406922ece7138fab396", "sha256": "4d8428cc675cd61699635c05da28d86a04a441285d5fd596d8cab5196c8cf8ee"}, "downloads": -1, "filename": "busypie-0.1.1.tar.gz", "has_sig": false, "md5_digest": "17fca74f65b38406922ece7138fab396", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3122, "upload_time": "2019-12-21T16:36:57", "upload_time_iso_8601": "2019-12-21T16:36:57.856387Z", "url": "https://files.pythonhosted.org/packages/22/23/5801ad87b6e9d42a75a956ede5d9edbb66643c837db664b14f2072eef095/busypie-0.1.1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0719d90b4aaba8ef86611168c72b665d", "sha256": "2e56f6d373812c5abc3ffc5e2bb747293b481705ece6aad444531c865abb5cd5"}, "downloads": -1, "filename": "busypie-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0719d90b4aaba8ef86611168c72b665d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8866, "upload_time": "2019-12-30T05:36:16", "upload_time_iso_8601": "2019-12-30T05:36:16.696496Z", "url": "https://files.pythonhosted.org/packages/55/36/077e5e494f90b2bfe1f45d1de2c26f576d41ab0b821d97a2e83f365f7d08/busypie-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b3678379d4ff940dd99a176161c826f", "sha256": "fba03f087ba1720ce8b18f64efbf17e2c55de54147b8a8d887424e1c9dbc78d8"}, "downloads": -1, "filename": "busypie-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0b3678379d4ff940dd99a176161c826f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4067, "upload_time": "2019-12-30T05:36:17", "upload_time_iso_8601": "2019-12-30T05:36:17.943543Z", "url": "https://files.pythonhosted.org/packages/12/0a/526e9bd8e663806090168db2d280f948f47547b77e5870729153e4dab2fb/busypie-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8c3ee95c0a40536127e46c97bf9e1b7a", "sha256": "117b42ebb7bfe030b8eb71f9ec073050b09b4ac443eb7d2f42c3fa00c0b582c7"}, "downloads": -1, "filename": "busypie-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8c3ee95c0a40536127e46c97bf9e1b7a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 9330, "upload_time": "2020-01-31T18:39:12", "upload_time_iso_8601": "2020-01-31T18:39:12.570419Z", "url": "https://files.pythonhosted.org/packages/55/ed/ae15f6870d2d5d3c2ec5513b0f800e729689ed06e8d3e9c8cc16f766b061/busypie-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4dac34d56fdb92b3b28ffb0ad54cea1", "sha256": "4847977fff198ebc92c7e724345af945eb3863f2cb58a34c9aba163a8f6aa4b8"}, "downloads": -1, "filename": "busypie-0.3.0.tar.gz", "has_sig": false, "md5_digest": "b4dac34d56fdb92b3b28ffb0ad54cea1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4310, "upload_time": "2020-01-31T18:39:13", "upload_time_iso_8601": "2020-01-31T18:39:13.795451Z", "url": "https://files.pythonhosted.org/packages/f9/cc/6c70d20cea4e295951cec73d12ef59620e4cf72d6e446d4a45555a18a617/busypie-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c3ee95c0a40536127e46c97bf9e1b7a", "sha256": "117b42ebb7bfe030b8eb71f9ec073050b09b4ac443eb7d2f42c3fa00c0b582c7"}, "downloads": -1, "filename": "busypie-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8c3ee95c0a40536127e46c97bf9e1b7a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 9330, "upload_time": "2020-01-31T18:39:12", "upload_time_iso_8601": "2020-01-31T18:39:12.570419Z", "url": "https://files.pythonhosted.org/packages/55/ed/ae15f6870d2d5d3c2ec5513b0f800e729689ed06e8d3e9c8cc16f766b061/busypie-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4dac34d56fdb92b3b28ffb0ad54cea1", "sha256": "4847977fff198ebc92c7e724345af945eb3863f2cb58a34c9aba163a8f6aa4b8"}, "downloads": -1, "filename": "busypie-0.3.0.tar.gz", "has_sig": false, "md5_digest": "b4dac34d56fdb92b3b28ffb0ad54cea1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4310, "upload_time": "2020-01-31T18:39:13", "upload_time_iso_8601": "2020-01-31T18:39:13.795451Z", "url": "https://files.pythonhosted.org/packages/f9/cc/6c70d20cea4e295951cec73d12ef59620e4cf72d6e446d4a45555a18a617/busypie-0.3.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:55 2020"}