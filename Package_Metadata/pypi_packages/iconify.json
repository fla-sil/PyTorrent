{"info": {"author": "Jason Gilholme", "author_email": "jasongilholme@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: X11 Applications :: Qt", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: User Interfaces"], "description": "# Iconify\n\n![](https://github.com/jasongilholme/iconify/workflows/linux/badge.svg)\n![](https://github.com/jasongilholme/iconify/workflows/macos/badge.svg)\n![](https://github.com/jasongilholme/iconify/workflows/windows/badge.svg)\n\n![](https://github.com/jasongilholme/iconify/workflows/mypy/badge.svg)\n![](https://github.com/jasongilholme/iconify/workflows/lint/badge.svg)\n![](coverage.svg)\n\nIconify allows you to create `QIcon`s and `QPixmap`s from svg files with \ndifferent color and animation.  It provides a way of fetching popular image\npacks such as Font Awesome, Material Design etc and installing them on the \npath that's used for finding images.\n\n## Quickstart\n\nTo get started with iconify, use the following commands:\n\n```shell script\n# Install iconify\npip install iconify\n\n# Fetch the icon libraries - Font Awesome, Material Design etc.\niconify-fetch\n\n# Start the icon browser to find the icon you want\niconify-browser\n```\n\n![alt text](images/browser.png)\n\nOnce you have the icon browser open, search for the type of icon you want and\ncopy the name to the clipboard. Then you can jump into python:\n\n```python\nimport iconify as ico\n\nicon = ico.Icon('google-emojis:face-with-symbols-on-mouth')\nmyQtButton.setIcon(icon)\n```\n\n## Configuration\n\nIconify will search paths identified by the `ICONIFY_PATH` environment variable.\nYou can also set this at runtime with the following code:\n\n```python\nimport iconify as ico\n\nico.path.addIconDirectory('/path/to/icon/dir')\n```\n\nYou will also require a Qt python binding such as `PySide2`. Iconify will use the \nbinding identified by the `ICONIFY_QTLIB` environment variable.  Set this variable\nto the name required to import the python binding e.g. `PySide2` or `PyQt5`. \nIconify expects Qt5 interfaces so if you'd like to use this library with Qt4\nyou should consider using a shim such as `Qt.py` or `QtPy`.\n\n\n## Examples\n\n### Simple\n\nThe following code will find the first occurrence of a `delete.svg` file on the\n`ICONIFY_PATH` environment variable and use it as is.\n\n```python\nimport iconify as ico\n\nicon = ico.Icon('delete')\nbutton.setIcon(icon)\n```\n\n### Changing Color\n\nTo set the color of the icon, provide a `QColor` object via the `color` kwarg:\n\n```python\nimport iconify as ico\nfrom iconify.qt import QtGui, QtWidgets\n\nicon = ico.Icon('filters', color=QtGui.QColor('salmon'))\n\nbutton = QtWidgets.QPushButton()\nbutton.setIcon(icon)\n```\n\n### Animation\n\nFor animation, instantiate an animation object and pass it in via the `anim` kwarg:\n\n```python\nimport iconify as ico\nfrom iconify.qt import QtGui, QtWidgets\n\nanim = ico.anim.Spin()\nicon = ico.Icon(\n    # The ':' here denotes a directory and provides cross platform support.\n    'spinners:simple',  \n    color=QtGui.QColor('lightblue'),\n    anim=anim,\n)\n\n# `icon.setAsButtonIcon` is used here so that the animation\n# used by the icon will update the widget when it plays.\nbutton = QtWidgets.QPushButton()\nicon.setAsButtonIcon(button)\n\n# Start the animation\nanim.start()\n```\n\n### Multi State Icons\n\nTo create a multi state icon, call `addState` with the appropriate `mode` and `state`\nkwargs to set the values you want.\n\n```python\nimport iconify as ico\nfrom iconify.qt import QtGui, QtWidgets\n\nonHoverAnimation = ico.anim.Spin()\n\nicon = ico.Icon('filters', color=QtGui.QColor('salmon'))\n# When the button has focus, make it green and spinning.\nicon.addState(\n    'filters',\n    color=QtGui.QColor('seagreen'),\n    anim=onHoverAnimation,\n    mode=QtGui.QIcon.Active,\n)\n# Make it gray when it's disabled.\nicon.addState(\n    'filters',\n    color=QtGui.QColor('gray'),\n    mode=QtGui.QIcon.Disabled,\n)\n\nbutton = QtWidgets.QPushButton()\nbutton.setIcon(icon)\n\n# Connect directly to the animation here to\n# ensure that the button animates on hover.\nonHoverAnimation.tick.connect(button.update)\n```\n\n### Advanced Animation\n\nThe same animation object can be used with multiple icons, and the same icon can be applied\nto multiple buttons.  This is useful when you want numerous widgets to update when \nan event happens e.g. loading something:\n\n```python\nimport iconify as ico\nfrom iconify.qt import QtGui, QtWidgets\n\n# Animations can be added together using the + operator.\nloadingAnim = ico.anim.Spin() + ico.anim.Breathe()\n\n# Instantiate two icons with the same animation\nsimpleIcon = ico.Icon(\n    'spinners:simple',\n    color=QtGui.QColor('lightblue'),\n    anim=loadingAnim,\n)\ndetailedIcon = ico.Icon(\n    'spinners:detailed',\n    color=QtGui.QColor('grey'),\n    anim=loadingAnim,\n)\n\n# Use those icons on multiple buttons\nsmallButtonOne = QtWidgets.QPushButton()\nsimpleIcon.setAsButtonIcon(smallButtonOne)\n\nsmallButtonTwo = QtWidgets.QPushButton()\nsimpleIcon.setAsButtonIcon(smallButtonTwo)\n\nlargeButtonOne = QtWidgets.QPushButton()\ndetailedIcon.setAsButtonIcon(largeButtonOne)\n\nlargeButtonTwo = QtWidgets.QPushButton()\ndetailedIcon.setAsButtonIcon(largeButtonTwo)\n\n\ndef loadData():\n    # Start the animation.  All buttons using the two icons\n    # from above should start to animate.\n    loadingAnim.start()\n\n    # Do a long running process here, preferably in a separate\n    # thread to keep the user interface refreshing nicely.\n\n    # Stop the animation now that the work has been done.\n    loadingAnim.stop()\n```\n\n### Pixmaps\n\nIt's also possible to use iconify to create pixmaps.  The following code is a \ncustom `QLabel` subclass which using iconify to draw a `QPixmap` in the center of\nthe label:\n\n```python\nimport iconify as ico\nfrom iconify.qt import QtCore, QtGui, QtWidgets\n\n\nclass IconifyLabel(QtWidgets.QLabel):\n\n    def __init__(self, pixmapGenerator):\n        super(IconifyLabel, self).__init__()\n        self._pixmapGenerator = pixmapGenerator\n\n        # Ensure this label updates when the animation ticks.\n        self._pixmapGenerator.anim().tick.connect(self.update)\n\n    def paintEvent(self, event):\n        super(IconifyLabel, self).paintEvent(event)\n\n        rect = event.rect()\n\n        if rect.width() > rect.height():\n            size = QtCore.QSize(rect.height(), rect.height())\n        else:\n            size = QtCore.QSize(rect.width(), rect.width())\n\n        pixmap = self._pixmapGenerator.pixmap(size)\n\n        painter = QtGui.QPainter(self)\n        halfSize  = size / 2\n        point = rect.center() - QtCore.QPoint(halfSize.width(), halfSize.height())\n        painter.drawPixmap(point, pixmap)\n        painter.end()\n\n\nanim = ico.anim.Spin()\npixmapGenerator = ico.PixmapGenerator(\n    'loading',\n    color=QtGui.QColor('orange'),\n    anim=anim,\n)\nlabel = IconifyLabel(pixmapGenerator)\nanim.start()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jasongilholme/iconify", "keywords": "Qt,icons,svg,PySide,PyQt", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "iconify", "package_url": "https://pypi.org/project/iconify/", "platform": "OS-independent", "project_url": "https://pypi.org/project/iconify/", "project_urls": {"Homepage": "https://github.com/jasongilholme/iconify"}, "release_url": "https://pypi.org/project/iconify/0.0.103/", "requires_dist": ["kids.cache (==0.0.7)", "requests (==2.23.0)", "typing (==3.7.4)", "enum34 (==1.1.9) ; python_version <= \"3.3\""], "requires_python": "", "summary": "An icon and image library for Qt that lets you use svg's from common packs like FontAwesome, MateriallDesign etc.", "version": "0.0.103", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Iconify</h1>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/805db711a8cff3b59091e6e4dbb798ff6cae9c62/68747470733a2f2f6769746875622e636f6d2f6a61736f6e67696c686f6c6d652f69636f6e6966792f776f726b666c6f77732f6c696e75782f62616467652e737667\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ad5453d15f5977ec8939f4c9d395f85dc4b2345/68747470733a2f2f6769746875622e636f6d2f6a61736f6e67696c686f6c6d652f69636f6e6966792f776f726b666c6f77732f6d61636f732f62616467652e737667\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df3d0f51209794548d844b89c420bc38ae18aa17/68747470733a2f2f6769746875622e636f6d2f6a61736f6e67696c686f6c6d652f69636f6e6966792f776f726b666c6f77732f77696e646f77732f62616467652e737667\"></p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c581af179c5089acd0c09e80a36d9a823ecaf226/68747470733a2f2f6769746875622e636f6d2f6a61736f6e67696c686f6c6d652f69636f6e6966792f776f726b666c6f77732f6d7970792f62616467652e737667\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50eba8ecea2d9586a8945e548eb640b1561ae999/68747470733a2f2f6769746875622e636f6d2f6a61736f6e67696c686f6c6d652f69636f6e6966792f776f726b666c6f77732f6c696e742f62616467652e737667\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a64f84ff993066f90d9885f5981b728963c18e7/636f7665726167652e737667\"></p>\n<p>Iconify allows you to create <code>QIcon</code>s and <code>QPixmap</code>s from svg files with\ndifferent color and animation.  It provides a way of fetching popular image\npacks such as Font Awesome, Material Design etc and installing them on the\npath that's used for finding images.</p>\n<h2>Quickstart</h2>\n<p>To get started with iconify, use the following commands:</p>\n<pre><span class=\"c1\"># Install iconify</span>\npip install iconify\n\n<span class=\"c1\"># Fetch the icon libraries - Font Awesome, Material Design etc.</span>\niconify-fetch\n\n<span class=\"c1\"># Start the icon browser to find the icon you want</span>\niconify-browser\n</pre>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a89506c55c8067a42c2cd75d6a787314f4bbbf9d/696d616765732f62726f777365722e706e67\"></p>\n<p>Once you have the icon browser open, search for the type of icon you want and\ncopy the name to the clipboard. Then you can jump into python:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">iconify</span> <span class=\"k\">as</span> <span class=\"nn\">ico</span>\n\n<span class=\"n\">icon</span> <span class=\"o\">=</span> <span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">Icon</span><span class=\"p\">(</span><span class=\"s1\">'google-emojis:face-with-symbols-on-mouth'</span><span class=\"p\">)</span>\n<span class=\"n\">myQtButton</span><span class=\"o\">.</span><span class=\"n\">setIcon</span><span class=\"p\">(</span><span class=\"n\">icon</span><span class=\"p\">)</span>\n</pre>\n<h2>Configuration</h2>\n<p>Iconify will search paths identified by the <code>ICONIFY_PATH</code> environment variable.\nYou can also set this at runtime with the following code:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">iconify</span> <span class=\"k\">as</span> <span class=\"nn\">ico</span>\n\n<span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">addIconDirectory</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/icon/dir'</span><span class=\"p\">)</span>\n</pre>\n<p>You will also require a Qt python binding such as <code>PySide2</code>. Iconify will use the\nbinding identified by the <code>ICONIFY_QTLIB</code> environment variable.  Set this variable\nto the name required to import the python binding e.g. <code>PySide2</code> or <code>PyQt5</code>.\nIconify expects Qt5 interfaces so if you'd like to use this library with Qt4\nyou should consider using a shim such as <code>Qt.py</code> or <code>QtPy</code>.</p>\n<h2>Examples</h2>\n<h3>Simple</h3>\n<p>The following code will find the first occurrence of a <code>delete.svg</code> file on the\n<code>ICONIFY_PATH</code> environment variable and use it as is.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">iconify</span> <span class=\"k\">as</span> <span class=\"nn\">ico</span>\n\n<span class=\"n\">icon</span> <span class=\"o\">=</span> <span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">Icon</span><span class=\"p\">(</span><span class=\"s1\">'delete'</span><span class=\"p\">)</span>\n<span class=\"n\">button</span><span class=\"o\">.</span><span class=\"n\">setIcon</span><span class=\"p\">(</span><span class=\"n\">icon</span><span class=\"p\">)</span>\n</pre>\n<h3>Changing Color</h3>\n<p>To set the color of the icon, provide a <code>QColor</code> object via the <code>color</code> kwarg:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">iconify</span> <span class=\"k\">as</span> <span class=\"nn\">ico</span>\n<span class=\"kn\">from</span> <span class=\"nn\">iconify.qt</span> <span class=\"kn\">import</span> <span class=\"n\">QtGui</span><span class=\"p\">,</span> <span class=\"n\">QtWidgets</span>\n\n<span class=\"n\">icon</span> <span class=\"o\">=</span> <span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">Icon</span><span class=\"p\">(</span><span class=\"s1\">'filters'</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"s1\">'salmon'</span><span class=\"p\">))</span>\n\n<span class=\"n\">button</span> <span class=\"o\">=</span> <span class=\"n\">QtWidgets</span><span class=\"o\">.</span><span class=\"n\">QPushButton</span><span class=\"p\">()</span>\n<span class=\"n\">button</span><span class=\"o\">.</span><span class=\"n\">setIcon</span><span class=\"p\">(</span><span class=\"n\">icon</span><span class=\"p\">)</span>\n</pre>\n<h3>Animation</h3>\n<p>For animation, instantiate an animation object and pass it in via the <code>anim</code> kwarg:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">iconify</span> <span class=\"k\">as</span> <span class=\"nn\">ico</span>\n<span class=\"kn\">from</span> <span class=\"nn\">iconify.qt</span> <span class=\"kn\">import</span> <span class=\"n\">QtGui</span><span class=\"p\">,</span> <span class=\"n\">QtWidgets</span>\n\n<span class=\"n\">anim</span> <span class=\"o\">=</span> <span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">anim</span><span class=\"o\">.</span><span class=\"n\">Spin</span><span class=\"p\">()</span>\n<span class=\"n\">icon</span> <span class=\"o\">=</span> <span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">Icon</span><span class=\"p\">(</span>\n    <span class=\"c1\"># The ':' here denotes a directory and provides cross platform support.</span>\n    <span class=\"s1\">'spinners:simple'</span><span class=\"p\">,</span>  \n    <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"s1\">'lightblue'</span><span class=\"p\">),</span>\n    <span class=\"n\">anim</span><span class=\"o\">=</span><span class=\"n\">anim</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># `icon.setAsButtonIcon` is used here so that the animation</span>\n<span class=\"c1\"># used by the icon will update the widget when it plays.</span>\n<span class=\"n\">button</span> <span class=\"o\">=</span> <span class=\"n\">QtWidgets</span><span class=\"o\">.</span><span class=\"n\">QPushButton</span><span class=\"p\">()</span>\n<span class=\"n\">icon</span><span class=\"o\">.</span><span class=\"n\">setAsButtonIcon</span><span class=\"p\">(</span><span class=\"n\">button</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Start the animation</span>\n<span class=\"n\">anim</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n<h3>Multi State Icons</h3>\n<p>To create a multi state icon, call <code>addState</code> with the appropriate <code>mode</code> and <code>state</code>\nkwargs to set the values you want.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">iconify</span> <span class=\"k\">as</span> <span class=\"nn\">ico</span>\n<span class=\"kn\">from</span> <span class=\"nn\">iconify.qt</span> <span class=\"kn\">import</span> <span class=\"n\">QtGui</span><span class=\"p\">,</span> <span class=\"n\">QtWidgets</span>\n\n<span class=\"n\">onHoverAnimation</span> <span class=\"o\">=</span> <span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">anim</span><span class=\"o\">.</span><span class=\"n\">Spin</span><span class=\"p\">()</span>\n\n<span class=\"n\">icon</span> <span class=\"o\">=</span> <span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">Icon</span><span class=\"p\">(</span><span class=\"s1\">'filters'</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"s1\">'salmon'</span><span class=\"p\">))</span>\n<span class=\"c1\"># When the button has focus, make it green and spinning.</span>\n<span class=\"n\">icon</span><span class=\"o\">.</span><span class=\"n\">addState</span><span class=\"p\">(</span>\n    <span class=\"s1\">'filters'</span><span class=\"p\">,</span>\n    <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"s1\">'seagreen'</span><span class=\"p\">),</span>\n    <span class=\"n\">anim</span><span class=\"o\">=</span><span class=\"n\">onHoverAnimation</span><span class=\"p\">,</span>\n    <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QIcon</span><span class=\"o\">.</span><span class=\"n\">Active</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># Make it gray when it's disabled.</span>\n<span class=\"n\">icon</span><span class=\"o\">.</span><span class=\"n\">addState</span><span class=\"p\">(</span>\n    <span class=\"s1\">'filters'</span><span class=\"p\">,</span>\n    <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"s1\">'gray'</span><span class=\"p\">),</span>\n    <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QIcon</span><span class=\"o\">.</span><span class=\"n\">Disabled</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">button</span> <span class=\"o\">=</span> <span class=\"n\">QtWidgets</span><span class=\"o\">.</span><span class=\"n\">QPushButton</span><span class=\"p\">()</span>\n<span class=\"n\">button</span><span class=\"o\">.</span><span class=\"n\">setIcon</span><span class=\"p\">(</span><span class=\"n\">icon</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Connect directly to the animation here to</span>\n<span class=\"c1\"># ensure that the button animates on hover.</span>\n<span class=\"n\">onHoverAnimation</span><span class=\"o\">.</span><span class=\"n\">tick</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">button</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">)</span>\n</pre>\n<h3>Advanced Animation</h3>\n<p>The same animation object can be used with multiple icons, and the same icon can be applied\nto multiple buttons.  This is useful when you want numerous widgets to update when\nan event happens e.g. loading something:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">iconify</span> <span class=\"k\">as</span> <span class=\"nn\">ico</span>\n<span class=\"kn\">from</span> <span class=\"nn\">iconify.qt</span> <span class=\"kn\">import</span> <span class=\"n\">QtGui</span><span class=\"p\">,</span> <span class=\"n\">QtWidgets</span>\n\n<span class=\"c1\"># Animations can be added together using the + operator.</span>\n<span class=\"n\">loadingAnim</span> <span class=\"o\">=</span> <span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">anim</span><span class=\"o\">.</span><span class=\"n\">Spin</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">anim</span><span class=\"o\">.</span><span class=\"n\">Breathe</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Instantiate two icons with the same animation</span>\n<span class=\"n\">simpleIcon</span> <span class=\"o\">=</span> <span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">Icon</span><span class=\"p\">(</span>\n    <span class=\"s1\">'spinners:simple'</span><span class=\"p\">,</span>\n    <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"s1\">'lightblue'</span><span class=\"p\">),</span>\n    <span class=\"n\">anim</span><span class=\"o\">=</span><span class=\"n\">loadingAnim</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">detailedIcon</span> <span class=\"o\">=</span> <span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">Icon</span><span class=\"p\">(</span>\n    <span class=\"s1\">'spinners:detailed'</span><span class=\"p\">,</span>\n    <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"s1\">'grey'</span><span class=\"p\">),</span>\n    <span class=\"n\">anim</span><span class=\"o\">=</span><span class=\"n\">loadingAnim</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Use those icons on multiple buttons</span>\n<span class=\"n\">smallButtonOne</span> <span class=\"o\">=</span> <span class=\"n\">QtWidgets</span><span class=\"o\">.</span><span class=\"n\">QPushButton</span><span class=\"p\">()</span>\n<span class=\"n\">simpleIcon</span><span class=\"o\">.</span><span class=\"n\">setAsButtonIcon</span><span class=\"p\">(</span><span class=\"n\">smallButtonOne</span><span class=\"p\">)</span>\n\n<span class=\"n\">smallButtonTwo</span> <span class=\"o\">=</span> <span class=\"n\">QtWidgets</span><span class=\"o\">.</span><span class=\"n\">QPushButton</span><span class=\"p\">()</span>\n<span class=\"n\">simpleIcon</span><span class=\"o\">.</span><span class=\"n\">setAsButtonIcon</span><span class=\"p\">(</span><span class=\"n\">smallButtonTwo</span><span class=\"p\">)</span>\n\n<span class=\"n\">largeButtonOne</span> <span class=\"o\">=</span> <span class=\"n\">QtWidgets</span><span class=\"o\">.</span><span class=\"n\">QPushButton</span><span class=\"p\">()</span>\n<span class=\"n\">detailedIcon</span><span class=\"o\">.</span><span class=\"n\">setAsButtonIcon</span><span class=\"p\">(</span><span class=\"n\">largeButtonOne</span><span class=\"p\">)</span>\n\n<span class=\"n\">largeButtonTwo</span> <span class=\"o\">=</span> <span class=\"n\">QtWidgets</span><span class=\"o\">.</span><span class=\"n\">QPushButton</span><span class=\"p\">()</span>\n<span class=\"n\">detailedIcon</span><span class=\"o\">.</span><span class=\"n\">setAsButtonIcon</span><span class=\"p\">(</span><span class=\"n\">largeButtonTwo</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">loadData</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Start the animation.  All buttons using the two icons</span>\n    <span class=\"c1\"># from above should start to animate.</span>\n    <span class=\"n\">loadingAnim</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Do a long running process here, preferably in a separate</span>\n    <span class=\"c1\"># thread to keep the user interface refreshing nicely.</span>\n\n    <span class=\"c1\"># Stop the animation now that the work has been done.</span>\n    <span class=\"n\">loadingAnim</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<h3>Pixmaps</h3>\n<p>It's also possible to use iconify to create pixmaps.  The following code is a\ncustom <code>QLabel</code> subclass which using iconify to draw a <code>QPixmap</code> in the center of\nthe label:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">iconify</span> <span class=\"k\">as</span> <span class=\"nn\">ico</span>\n<span class=\"kn\">from</span> <span class=\"nn\">iconify.qt</span> <span class=\"kn\">import</span> <span class=\"n\">QtCore</span><span class=\"p\">,</span> <span class=\"n\">QtGui</span><span class=\"p\">,</span> <span class=\"n\">QtWidgets</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">IconifyLabel</span><span class=\"p\">(</span><span class=\"n\">QtWidgets</span><span class=\"o\">.</span><span class=\"n\">QLabel</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pixmapGenerator</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">IconifyLabel</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pixmapGenerator</span> <span class=\"o\">=</span> <span class=\"n\">pixmapGenerator</span>\n\n        <span class=\"c1\"># Ensure this label updates when the animation ticks.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pixmapGenerator</span><span class=\"o\">.</span><span class=\"n\">anim</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">tick</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">paintEvent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">IconifyLabel</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">paintEvent</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span>\n\n        <span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">rect</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">rect</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"n\">rect</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">():</span>\n            <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">QtCore</span><span class=\"o\">.</span><span class=\"n\">QSize</span><span class=\"p\">(</span><span class=\"n\">rect</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">(),</span> <span class=\"n\">rect</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">())</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">QtCore</span><span class=\"o\">.</span><span class=\"n\">QSize</span><span class=\"p\">(</span><span class=\"n\">rect</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"p\">(),</span> <span class=\"n\">rect</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"p\">())</span>\n\n        <span class=\"n\">pixmap</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pixmapGenerator</span><span class=\"o\">.</span><span class=\"n\">pixmap</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">)</span>\n\n        <span class=\"n\">painter</span> <span class=\"o\">=</span> <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QPainter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"n\">halfSize</span>  <span class=\"o\">=</span> <span class=\"n\">size</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n        <span class=\"n\">point</span> <span class=\"o\">=</span> <span class=\"n\">rect</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">QtCore</span><span class=\"o\">.</span><span class=\"n\">QPoint</span><span class=\"p\">(</span><span class=\"n\">halfSize</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"p\">(),</span> <span class=\"n\">halfSize</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">())</span>\n        <span class=\"n\">painter</span><span class=\"o\">.</span><span class=\"n\">drawPixmap</span><span class=\"p\">(</span><span class=\"n\">point</span><span class=\"p\">,</span> <span class=\"n\">pixmap</span><span class=\"p\">)</span>\n        <span class=\"n\">painter</span><span class=\"o\">.</span><span class=\"n\">end</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">anim</span> <span class=\"o\">=</span> <span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">anim</span><span class=\"o\">.</span><span class=\"n\">Spin</span><span class=\"p\">()</span>\n<span class=\"n\">pixmapGenerator</span> <span class=\"o\">=</span> <span class=\"n\">ico</span><span class=\"o\">.</span><span class=\"n\">PixmapGenerator</span><span class=\"p\">(</span>\n    <span class=\"s1\">'loading'</span><span class=\"p\">,</span>\n    <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QColor</span><span class=\"p\">(</span><span class=\"s1\">'orange'</span><span class=\"p\">),</span>\n    <span class=\"n\">anim</span><span class=\"o\">=</span><span class=\"n\">anim</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"n\">IconifyLabel</span><span class=\"p\">(</span><span class=\"n\">pixmapGenerator</span><span class=\"p\">)</span>\n<span class=\"n\">anim</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6754392, "releases": {"0.0.100": [{"comment_text": "", "digests": {"md5": "28a2e1e45e31b67ea20862a78e82a80e", "sha256": "f61f680613660db1a6288aea5f632e5f197a45b9195b0919d87065993d3cd2c2"}, "downloads": -1, "filename": "iconify-0.0.100-py3-none-any.whl", "has_sig": false, "md5_digest": "28a2e1e45e31b67ea20862a78e82a80e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27849, "upload_time": "2020-03-03T06:34:22", "upload_time_iso_8601": "2020-03-03T06:34:22.766151Z", "url": "https://files.pythonhosted.org/packages/bb/5d/210f06fc815af46bb81c665ac74fd5f8ae8eaf6610dc8806df66a4d9f890/iconify-0.0.100-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "105dcb12e8c79b19ff00201e6d60c046", "sha256": "3eda83044e511249f64af41c61a6f6e2df72ac064c96d8b8eebb06ec6e2790f6"}, "downloads": -1, "filename": "iconify-0.0.100.tar.gz", "has_sig": false, "md5_digest": "105dcb12e8c79b19ff00201e6d60c046", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15171, "upload_time": "2020-03-03T06:34:23", "upload_time_iso_8601": "2020-03-03T06:34:23.665780Z", "url": "https://files.pythonhosted.org/packages/e1/2b/63092fbbede1e4f11b03aaf3ce99cdadee000a7152ae03b22afa34c44020/iconify-0.0.100.tar.gz", "yanked": false}], "0.0.101": [{"comment_text": "", "digests": {"md5": "9be1c4e392c974d3381a4ac6a13ffdb4", "sha256": "5cb2e2de80a5122e7b3afc4c914a5bbb19eeb0ea58ba8788ed06cfe1bbf2f76f"}, "downloads": -1, "filename": "iconify-0.0.101-py3-none-any.whl", "has_sig": false, "md5_digest": "9be1c4e392c974d3381a4ac6a13ffdb4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28292, "upload_time": "2020-03-04T03:31:32", "upload_time_iso_8601": "2020-03-04T03:31:32.411267Z", "url": "https://files.pythonhosted.org/packages/86/9d/6ce398d54780858a92d5b3734f04a6610a7b20cb6099bba08488f2728e20/iconify-0.0.101-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "132cba61e0b69d7bc2e23fad1453203b", "sha256": "257c955169e0eb41bc3e883b8b6a36942751b8db69b5598e5c4159aaad1c32ea"}, "downloads": -1, "filename": "iconify-0.0.101.tar.gz", "has_sig": false, "md5_digest": "132cba61e0b69d7bc2e23fad1453203b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16134, "upload_time": "2020-03-04T03:31:33", "upload_time_iso_8601": "2020-03-04T03:31:33.404980Z", "url": "https://files.pythonhosted.org/packages/c0/7b/82a87273e0bcb5394fb1050fd2d49538b3d4fe030d63519b59a548354e44/iconify-0.0.101.tar.gz", "yanked": false}], "0.0.103": [{"comment_text": "", "digests": {"md5": "00e65b0fc37828e6e88f4dec38bb74d3", "sha256": "82ab85582b9222777e70eb01a8ae4dd7ef3963fe149cfd43e54af7dd6b647599"}, "downloads": -1, "filename": "iconify-0.0.103-py3-none-any.whl", "has_sig": false, "md5_digest": "00e65b0fc37828e6e88f4dec38bb74d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29509, "upload_time": "2020-03-05T10:17:52", "upload_time_iso_8601": "2020-03-05T10:17:52.762293Z", "url": "https://files.pythonhosted.org/packages/a4/fe/30843733523e4796ddca29d628529de503728d7e11217d5dee4b96fc851c/iconify-0.0.103-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "877ccd6a18bee0476845356346b81af6", "sha256": "079b4cdb2783fa9f56e6040038d9442880c28015d6bd93e7dfad1c8f7adbe731"}, "downloads": -1, "filename": "iconify-0.0.103.tar.gz", "has_sig": false, "md5_digest": "877ccd6a18bee0476845356346b81af6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17172, "upload_time": "2020-03-05T10:17:54", "upload_time_iso_8601": "2020-03-05T10:17:54.118683Z", "url": "https://files.pythonhosted.org/packages/fa/07/75ec54a75688c388af540a2b94afa9ff3952aeed1d51b1d7fa64d31980e0/iconify-0.0.103.tar.gz", "yanked": false}], "0.0.80": [{"comment_text": "", "digests": {"md5": "a7fe858e2caba1c8834a6693970da7fd", "sha256": "91870eed3306c93565ce725fb9522be1347bc288e5c95aaaec860daa1f3e71d0"}, "downloads": -1, "filename": "iconify-0.0.80-py3-none-any.whl", "has_sig": false, "md5_digest": "a7fe858e2caba1c8834a6693970da7fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23099, "upload_time": "2020-02-29T12:10:19", "upload_time_iso_8601": "2020-02-29T12:10:19.299115Z", "url": "https://files.pythonhosted.org/packages/79/ab/079a0de2dd776237c45a788aca3997b173b08f511682e7499ac35612fe6a/iconify-0.0.80-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10d590cf45356abfbc9e8a2b7d02b119", "sha256": "b1a5e3d4e16f01baab2c0d67a7f22f53ade4ee5d5a225185c9f1abfc92d9289b"}, "downloads": -1, "filename": "iconify-0.0.80.tar.gz", "has_sig": false, "md5_digest": "10d590cf45356abfbc9e8a2b7d02b119", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10605, "upload_time": "2020-02-29T12:10:21", "upload_time_iso_8601": "2020-02-29T12:10:21.257842Z", "url": "https://files.pythonhosted.org/packages/47/21/983cb46d8757e20a7872b89ad596e159581990ca7495c17636b618e3019e/iconify-0.0.80.tar.gz", "yanked": false}], "0.0.82": [{"comment_text": "", "digests": {"md5": "118a1c68eb0db4308397d9c5f4837a77", "sha256": "7b0c9a6ef8f588f99fc42d5cc7b079aa029f797e52cf7a77469560afa8508a96"}, "downloads": -1, "filename": "iconify-0.0.82-py3-none-any.whl", "has_sig": false, "md5_digest": "118a1c68eb0db4308397d9c5f4837a77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24915, "upload_time": "2020-02-29T12:34:18", "upload_time_iso_8601": "2020-02-29T12:34:18.431443Z", "url": "https://files.pythonhosted.org/packages/e9/33/ccc911314c7db216c7f7e2b0eef5c6c94f580b166f828b824d4b120822ff/iconify-0.0.82-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bba7f43d64bd8cd2f89dfc2d89c3f2a9", "sha256": "2b04a299b77b80d332dc1da0aa2251172ea7c3920af34384eb1a40a0e8adf8f8"}, "downloads": -1, "filename": "iconify-0.0.82.tar.gz", "has_sig": false, "md5_digest": "bba7f43d64bd8cd2f89dfc2d89c3f2a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12725, "upload_time": "2020-02-29T12:34:19", "upload_time_iso_8601": "2020-02-29T12:34:19.667898Z", "url": "https://files.pythonhosted.org/packages/6e/b3/b5928374f05e1c18cf591d83f39ff14b9d9044efe77ff654686dfc6a161e/iconify-0.0.82.tar.gz", "yanked": false}], "0.0.92": [{"comment_text": "", "digests": {"md5": "0efe93024f6b8a38c732fd08bcda0239", "sha256": "c72db2005f7c56b15faec6058eb3fa0537ad662d981c440e6819d5ea6fbf55cf"}, "downloads": -1, "filename": "iconify-0.0.92-py3-none-any.whl", "has_sig": false, "md5_digest": "0efe93024f6b8a38c732fd08bcda0239", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27314, "upload_time": "2020-03-01T21:22:26", "upload_time_iso_8601": "2020-03-01T21:22:26.064122Z", "url": "https://files.pythonhosted.org/packages/16/2c/16391aafbd78868965b1c3f09b5646a4817c1f830007256911f624300fc2/iconify-0.0.92-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a7de59ddb94e0d13e65a9b35a49e6ec", "sha256": "7f07d9b09ad0fec2777793d11190d33a5dbd7b71ee8126457c42fd4ebc4a80f7"}, "downloads": -1, "filename": "iconify-0.0.92.tar.gz", "has_sig": false, "md5_digest": "2a7de59ddb94e0d13e65a9b35a49e6ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14966, "upload_time": "2020-03-01T21:22:26", "upload_time_iso_8601": "2020-03-01T21:22:26.998503Z", "url": "https://files.pythonhosted.org/packages/98/61/f8ccbc46312e2184166d7c7c31df18463c50ab006feb98bf640e012df9d7/iconify-0.0.92.tar.gz", "yanked": false}], "0.0.93": [{"comment_text": "", "digests": {"md5": "619aa41bbdb25a03dd35f04188c06737", "sha256": "02f1747e6e0d73d7224fdb6433ab96f89f94f03b4043a1ca066658f6c9bb3648"}, "downloads": -1, "filename": "iconify-0.0.93-py3-none-any.whl", "has_sig": false, "md5_digest": "619aa41bbdb25a03dd35f04188c06737", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27383, "upload_time": "2020-03-01T22:30:20", "upload_time_iso_8601": "2020-03-01T22:30:20.632507Z", "url": "https://files.pythonhosted.org/packages/a6/bc/f2058380c28326d1e3cacfc3dfa9bcf202b954ea10e65525ca4abcf54241/iconify-0.0.93-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da37cacefd7fe61ad601c1addc99ce28", "sha256": "cc95f8fb5866103f0d76f07c27579be6ad54cd5ec65173fbdbfcc78548bbb8b1"}, "downloads": -1, "filename": "iconify-0.0.93.tar.gz", "has_sig": false, "md5_digest": "da37cacefd7fe61ad601c1addc99ce28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15032, "upload_time": "2020-03-01T22:30:21", "upload_time_iso_8601": "2020-03-01T22:30:21.708593Z", "url": "https://files.pythonhosted.org/packages/c7/df/d1a022834507b877eeaa881f8616d5393e1a5c5c19e2880225e7b9f63d75/iconify-0.0.93.tar.gz", "yanked": false}], "0.0.94": [{"comment_text": "", "digests": {"md5": "6fe0cd7842bba9155520b150b0b52351", "sha256": "70d38f580f5cc2391c75880db555a1f533b775ffde03403b1b1e3aee9f0ef703"}, "downloads": -1, "filename": "iconify-0.0.94-py3-none-any.whl", "has_sig": false, "md5_digest": "6fe0cd7842bba9155520b150b0b52351", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27715, "upload_time": "2020-03-01T22:38:53", "upload_time_iso_8601": "2020-03-01T22:38:53.540880Z", "url": "https://files.pythonhosted.org/packages/f6/ef/43698892a8b41c2f6e8341db53402499e393c9e60b396f9bb8ede3fbb9e7/iconify-0.0.94-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b0cd6df046f7b684a00cca52e44821b", "sha256": "aa42e7a82e8f2700da60120b7191ab3830a96ce1aef03221b6a058265f248c4c"}, "downloads": -1, "filename": "iconify-0.0.94.tar.gz", "has_sig": false, "md5_digest": "0b0cd6df046f7b684a00cca52e44821b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15086, "upload_time": "2020-03-01T22:38:54", "upload_time_iso_8601": "2020-03-01T22:38:54.844797Z", "url": "https://files.pythonhosted.org/packages/f3/39/55486307951909329ef481a2e4a3a8ddf7f1adc91a5529bd5f29d88edab9/iconify-0.0.94.tar.gz", "yanked": false}], "0.0.96": [{"comment_text": "", "digests": {"md5": "f80bce35249bac38fadbb0cea6135927", "sha256": "4bc6e89822bed25dccb7b76c151ee7a8e34452c6c35a0cf6743872e06a1ea255"}, "downloads": -1, "filename": "iconify-0.0.96-py3-none-any.whl", "has_sig": false, "md5_digest": "f80bce35249bac38fadbb0cea6135927", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27972, "upload_time": "2020-03-02T01:41:37", "upload_time_iso_8601": "2020-03-02T01:41:37.613187Z", "url": "https://files.pythonhosted.org/packages/53/f7/b6296b1b3529e2df74d6f3e4aad4bed3f25007a5fcb058415f73e7ca4be2/iconify-0.0.96-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c17e0db49b4e2514fae84e4887abc356", "sha256": "19ffeab0b1cef20c4357e87d90caa20d8dd4dbb6bc89970a97d59f43c9043ea6"}, "downloads": -1, "filename": "iconify-0.0.96.tar.gz", "has_sig": false, "md5_digest": "c17e0db49b4e2514fae84e4887abc356", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15332, "upload_time": "2020-03-02T01:41:38", "upload_time_iso_8601": "2020-03-02T01:41:38.610690Z", "url": "https://files.pythonhosted.org/packages/26/5d/736fb5084bf3dd14cfa110cf77643b4e4b783f6f24eb1417666ddf96e4f0/iconify-0.0.96.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "00e65b0fc37828e6e88f4dec38bb74d3", "sha256": "82ab85582b9222777e70eb01a8ae4dd7ef3963fe149cfd43e54af7dd6b647599"}, "downloads": -1, "filename": "iconify-0.0.103-py3-none-any.whl", "has_sig": false, "md5_digest": "00e65b0fc37828e6e88f4dec38bb74d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29509, "upload_time": "2020-03-05T10:17:52", "upload_time_iso_8601": "2020-03-05T10:17:52.762293Z", "url": "https://files.pythonhosted.org/packages/a4/fe/30843733523e4796ddca29d628529de503728d7e11217d5dee4b96fc851c/iconify-0.0.103-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "877ccd6a18bee0476845356346b81af6", "sha256": "079b4cdb2783fa9f56e6040038d9442880c28015d6bd93e7dfad1c8f7adbe731"}, "downloads": -1, "filename": "iconify-0.0.103.tar.gz", "has_sig": false, "md5_digest": "877ccd6a18bee0476845356346b81af6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17172, "upload_time": "2020-03-05T10:17:54", "upload_time_iso_8601": "2020-03-05T10:17:54.118683Z", "url": "https://files.pythonhosted.org/packages/fa/07/75ec54a75688c388af540a2b94afa9ff3952aeed1d51b1d7fa64d31980e0/iconify-0.0.103.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:01 2020"}