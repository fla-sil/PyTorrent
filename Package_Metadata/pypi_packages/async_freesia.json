{"info": {"author": "ArianX", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "![freesia](./images/logo.png)\n\n## Introduction\nFreesia is a concise and lightweight async web framework. Its api is inspired by Flask.\n\n## Installation\n```bash\npip install async-freesia\n```\n\n## Docs\nYou can find the project's detailed API documentation on [here](https://freesia.readthedocs.io/en/latest/?).\n\n## Example\n*hello world*\n```python\nfrom freesia import Freesia\n\napp = Freesia()\n\n@app.route('/hello/<name>')\nasync def hello(request, name):\n    return \"Hello, \" + name + \"!\"\n\nif __name__ == \"__main__\":\n    app.run()\n```\n\n*middleware*\n```python\nfrom freesia import Freesia\n\napp = Freesia()\n\n@app.route(\"/<name>\")\nasync def hello(request, name):\n    print(\"enter user handler\")\n    return \"hello, \" + name\n\n\nasync def middleware1(request, handler):\n    print(\"enter middleware1\")\n    res = await handler()\n    print(\"exit middleware1\")\n    return res + \" !\"\n\n\nasync def middleware2(request, handler):\n    print(\"enter middleware2\")\n    res = await handler()\n    print(\"exit middleware2\")\n    return res + \" :D\"\n\n\napp.use([middleware1, middleware2])\n\nif __name__ == \"__main__\":\n    app.run()\n```\n\n*session*\n```python\nfrom freesia import Freesia, set_up_session, get_session, Response\nfrom freesia.session import SimpleCookieSession\n\napp = Freesia()\n\n@app.route(\"/\")\nasync def hello(request):\n    s = await get_session(request)\n    if \"count\" not in s:\n        s[\"count\"] = 1\n        return Response(text=\"Hello, stranger!\")\n    else:\n        s[\"count\"] += 1\n        return Response(text=\"I've seen you %d times\" % s[\"count\"])\n\nif __name__ == \"__main__\":\n    set_up_session(app, SimpleCookieSession)\n    app.run()\n```\n\n## More\nYou can see more exmaple and usags in [docs](https://freesia.readthedocs.io/en/latest/?) and [examples](./examples).", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AuraiProject/freesia", "keywords": "freesia", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "async_freesia", "package_url": "https://pypi.org/project/async_freesia/", "platform": "", "project_url": "https://pypi.org/project/async_freesia/", "project_urls": {"Homepage": "https://github.com/AuraiProject/freesia"}, "release_url": "https://pypi.org/project/async_freesia/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "A concise and lightweight web framework.\u2728", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            ![freesia](./images/logo.png)<br><br>## Introduction<br>Freesia is a concise and lightweight async web framework. Its api is inspired by Flask.<br><br>## Installation<br>```bash<br>pip install async-freesia<br>```<br><br>## Docs<br>You can find the project's detailed API documentation on [here](https://freesia.readthedocs.io/en/latest/?).<br><br>## Example<br>*hello world*<br>```python<br>from freesia import Freesia<br><br>app = Freesia()<br><br>@app.route('/hello/&lt;name&gt;')<br>async def hello(request, name):<br>    return \"Hello, \" + name + \"!\"<br><br>if __name__ == \"__main__\":<br>    app.run()<br>```<br><br>*middleware*<br>```python<br>from freesia import Freesia<br><br>app = Freesia()<br><br>@app.route(\"/&lt;name&gt;\")<br>async def hello(request, name):<br>    print(\"enter user handler\")<br>    return \"hello, \" + name<br><br><br>async def middleware1(request, handler):<br>    print(\"enter middleware1\")<br>    res = await handler()<br>    print(\"exit middleware1\")<br>    return res + \" !\"<br><br><br>async def middleware2(request, handler):<br>    print(\"enter middleware2\")<br>    res = await handler()<br>    print(\"exit middleware2\")<br>    return res + \" :D\"<br><br><br>app.use([middleware1, middleware2])<br><br>if __name__ == \"__main__\":<br>    app.run()<br>```<br><br>*session*<br>```python<br>from freesia import Freesia, set_up_session, get_session, Response<br>from freesia.session import SimpleCookieSession<br><br>app = Freesia()<br><br>@app.route(\"/\")<br>async def hello(request):<br>    s = await get_session(request)<br>    if \"count\" not in s:<br>        s[\"count\"] = 1<br>        return Response(text=\"Hello, stranger!\")<br>    else:<br>        s[\"count\"] += 1<br>        return Response(text=\"I've seen you %d times\" % s[\"count\"])<br><br>if __name__ == \"__main__\":<br>    set_up_session(app, SimpleCookieSession)<br>    app.run()<br>```<br><br>## More<br>You can see more exmaple and usags in [docs](https://freesia.readthedocs.io/en/latest/?) and [examples](./examples).\n          </div>"}, "last_serial": 5206165, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "71244cfc6dec37637258f44509a89e12", "sha256": "ea066cadfc80abde77829e910f8fcabd5002dc97896b165d1a1512037d4a51e4"}, "downloads": -1, "filename": "async_freesia-0.0.2.tar.gz", "has_sig": false, "md5_digest": "71244cfc6dec37637258f44509a89e12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18475, "upload_time": "2019-03-07T14:44:29", "upload_time_iso_8601": "2019-03-07T14:44:29.780941Z", "url": "https://files.pythonhosted.org/packages/b2/18/7c2848ff350d4285500cc7340ebb83970b1664e11adc830c6e27557e4cde/async_freesia-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e26feb83755f70f2db163036f8c3f166", "sha256": "10c5a706e00801a62a07849771dcc63606b5cda5898c6ad62fce4e7ab47c57d0"}, "downloads": -1, "filename": "async_freesia-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e26feb83755f70f2db163036f8c3f166", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18592, "upload_time": "2019-03-07T15:02:09", "upload_time_iso_8601": "2019-03-07T15:02:09.488097Z", "url": "https://files.pythonhosted.org/packages/26/06/64a6c963fb8dc5ca40ab456eedfc2cafffdb0397f5c0621d5b440e234740/async_freesia-0.0.3.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8b56baa269157fadf3def2246e5464cd", "sha256": "74db114b0335fc700613329315dc8d51b297a46b5272cbc2962acf604a5e5510"}, "downloads": -1, "filename": "async_freesia-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8b56baa269157fadf3def2246e5464cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18595, "upload_time": "2019-03-07T15:03:43", "upload_time_iso_8601": "2019-03-07T15:03:43.253798Z", "url": "https://files.pythonhosted.org/packages/f2/24/d8c612c4d0d25042ebecab94953c9eb93b77d06a714d57ae0873667b77be/async_freesia-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7fab578c46a27bf5294b30ae93f08725", "sha256": "7808fe613cce06d0a9892bb9996977f1a3af186c783f877601c9e05485aaf0a7"}, "downloads": -1, "filename": "async_freesia-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7fab578c46a27bf5294b30ae93f08725", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18787, "upload_time": "2019-04-30T03:33:02", "upload_time_iso_8601": "2019-04-30T03:33:02.054787Z", "url": "https://files.pythonhosted.org/packages/56/7a/559b67642daed474a5ecdca2828c872c126f5b57aab25a106c072bcba3fb/async_freesia-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7fab578c46a27bf5294b30ae93f08725", "sha256": "7808fe613cce06d0a9892bb9996977f1a3af186c783f877601c9e05485aaf0a7"}, "downloads": -1, "filename": "async_freesia-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7fab578c46a27bf5294b30ae93f08725", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18787, "upload_time": "2019-04-30T03:33:02", "upload_time_iso_8601": "2019-04-30T03:33:02.054787Z", "url": "https://files.pythonhosted.org/packages/56/7a/559b67642daed474a5ecdca2828c872c126f5b57aab25a106c072bcba3fb/async_freesia-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:45 2020"}