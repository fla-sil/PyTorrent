{"info": {"author": "David Zentgraf", "author_email": "deceze@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Topic :: Software Development :: Documentation"], "description": "Sphinx HTTP Domain\n==================\n\nDescription\n-----------\n\nSphinx plugin to add an HTTP domain, allowing the documentation of\nRESTful HTTP methods.\n\n*This is very rudimentary and experimental code at the moment.*\n\nHTTP methods\n------------\n\nYou can document simple methods, wrap any arguments in the path\nwith curly-braces::\n\n    .. http:method:: GET /api/foo/bar/{id}/{slug}\n\n       :arg id: An id\n       :arg slug: A slug\n\n       Retrieve list of foobars matching given id.\n\nQuery string parameters are also supported, both mandatory and\noptional::\n\n    .. http:method:: GET /api/foo/bar/?id&slug\n\n       :param id: An id\n       :optparam slug: A slug\n\n       Search for a list of foobars matching given id.\n\nAs well, you can provide types for parameters and arguments::\n\n    .. http:method:: GET /api/foo/bar/{id}/?slug\n       \n       :arg integer id: An id\n       :optparam string slug: A slug\n\n       Search for a list of foobars matching given id.\n\nFragments are also supported::\n\n    .. http:method:: GET /#!/username\n\n       :fragment username: A username\n\n       Renders a user's profile page.\n\nPlus, you can document the responses with their response codes::\n\n    .. http:method:: POST /api/foo/bar/\n\n       :param string slug: A slug\n       :response 201: A foobar was created successfully.\n       :response 400:\n\n       Create a foobar.\n\nTo refer to an HTTP method, use ``:http:method:``::\n\n    .. http:method:: GET /api/\n       :label-name: get-root\n       :title: API root\n\n    The :http:method:`get-root` contains all of the API.\n\n\nHTTP responses\n--------------\n\nDocumenting responses is also simple::\n\n   .. http:response:: Foobar object\n\n      A foobar object looks like this::\n\n      .. source-code:: js\n         {\n            'slug': SLUG\n         }\n   \n      :data string SLUG: A slug\n      :format: JSON\n\nTo refer to an HTTP response, use ``:http:response:``::\n\n   .. http:response:: Foobar object\n\n   A :http:response:`foobar-object` is returned when you foo the bar.\n\n\nInstallation\n------------\n\nRun ``pip install sphinx-http-domain``.\n\nThen, add ``sphinx_http_domain`` to your conf.py::\n\n    extensions = ['sphinx_http_domain']\n\n\nDevelopment\n-----------\n\n- Version: pre-Alpha\n- Homepage: https://github.com/deceze/Sphinx-HTTP-domain\n\nFor contributions, please fork this project on GitHub!\n\n\nAuthor\n``````\n\nDavid Zentgraf (https://github.com/deceze)\n\n\nContributors\n````````````\n\n- Simon Law (https://github.com/sfllaw)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/deceze/Sphinx-HTTP-domain/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "sphinx-http-domain", "package_url": "https://pypi.org/project/sphinx-http-domain/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/sphinx-http-domain/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/deceze/Sphinx-HTTP-domain/"}, "release_url": "https://pypi.org/project/sphinx-http-domain/0.2/", "requires_dist": null, "requires_python": null, "summary": "Sphinx domain to mark up RESTful web services in ReST", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"description\">\n<h2>Description</h2>\n<p>Sphinx plugin to add an HTTP domain, allowing the documentation of\nRESTful HTTP methods.</p>\n<p><em>This is very rudimentary and experimental code at the moment.</em></p>\n</div>\n<div id=\"http-methods\">\n<h2>HTTP methods</h2>\n<p>You can document simple methods, wrap any arguments in the path\nwith curly-braces:</p>\n<pre>.. http:method:: GET /api/foo/bar/{id}/{slug}\n\n   :arg id: An id\n   :arg slug: A slug\n\n   Retrieve list of foobars matching given id.\n</pre>\n<p>Query string parameters are also supported, both mandatory and\noptional:</p>\n<pre>.. http:method:: GET /api/foo/bar/?id&amp;slug\n\n   :param id: An id\n   :optparam slug: A slug\n\n   Search for a list of foobars matching given id.\n</pre>\n<p>As well, you can provide types for parameters and arguments:</p>\n<pre>.. http:method:: GET /api/foo/bar/{id}/?slug\n\n   :arg integer id: An id\n   :optparam string slug: A slug\n\n   Search for a list of foobars matching given id.\n</pre>\n<p>Fragments are also supported:</p>\n<pre>.. http:method:: GET /#!/username\n\n   :fragment username: A username\n\n   Renders a user's profile page.\n</pre>\n<p>Plus, you can document the responses with their response codes:</p>\n<pre>.. http:method:: POST /api/foo/bar/\n\n   :param string slug: A slug\n   :response 201: A foobar was created successfully.\n   :response 400:\n\n   Create a foobar.\n</pre>\n<p>To refer to an HTTP method, use <tt>:http:method:</tt>:</p>\n<pre>.. http:method:: GET /api/\n   :label-name: get-root\n   :title: API root\n\nThe :http:method:`get-root` contains all of the API.\n</pre>\n</div>\n<div id=\"http-responses\">\n<h2>HTTP responses</h2>\n<p>Documenting responses is also simple:</p>\n<pre>.. http:response:: Foobar object\n\n   A foobar object looks like this::\n\n   .. source-code:: js\n      {\n         'slug': SLUG\n      }\n\n   :data string SLUG: A slug\n   :format: JSON\n</pre>\n<p>To refer to an HTTP response, use <tt>:http:response:</tt>:</p>\n<pre>.. http:response:: Foobar object\n\nA :http:response:`foobar-object` is returned when you foo the bar.\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Run <tt>pip install <span class=\"pre\">sphinx-http-domain</span></tt>.</p>\n<p>Then, add <tt>sphinx_http_domain</tt> to your conf.py:</p>\n<pre>extensions = ['sphinx_http_domain']\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<ul>\n<li>Version: pre-Alpha</li>\n<li>Homepage: <a href=\"https://github.com/deceze/Sphinx-HTTP-domain\" rel=\"nofollow\">https://github.com/deceze/Sphinx-HTTP-domain</a></li>\n</ul>\n<p>For contributions, please fork this project on GitHub!</p>\n<div id=\"author\">\n<h3>Author</h3>\n<p>David Zentgraf (<a href=\"https://github.com/deceze\" rel=\"nofollow\">https://github.com/deceze</a>)</p>\n</div>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<ul>\n<li>Simon Law (<a href=\"https://github.com/sfllaw\" rel=\"nofollow\">https://github.com/sfllaw</a>)</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 703211, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6ef922f5375213a7cf1dd5fcc95af62a", "sha256": "26a66ffe2e6028b8afd93e52cfa287ef27a1a6edf4c4eb334ee0ecad4f0d669d"}, "downloads": -1, "filename": "sphinx-http-domain-0.1.tar.gz", "has_sig": false, "md5_digest": "6ef922f5375213a7cf1dd5fcc95af62a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2329, "upload_time": "2011-03-10T20:12:13", "upload_time_iso_8601": "2011-03-10T20:12:13.780029Z", "url": "https://files.pythonhosted.org/packages/96/c7/1865a82418dddbc92c6fe0ba7a9619d3910ffa97d9910c15e416f8b3914a/sphinx-http-domain-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "84ad0466da96d25b4a7dc4679adb9e62", "sha256": "7e3f29bab7a00ccc40a8f58400a77522780aa262d6a5c140147721da8e25f2fb"}, "downloads": -1, "filename": "sphinx-http-domain-0.2.tar.gz", "has_sig": false, "md5_digest": "84ad0466da96d25b4a7dc4679adb9e62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9610, "upload_time": "2011-03-12T21:54:47", "upload_time_iso_8601": "2011-03-12T21:54:47.726116Z", "url": "https://files.pythonhosted.org/packages/2f/0f/8cba5fa05ae80a96cbe768fac6e628b1e65edfecff88d0b67240d92e6d1a/sphinx-http-domain-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "84ad0466da96d25b4a7dc4679adb9e62", "sha256": "7e3f29bab7a00ccc40a8f58400a77522780aa262d6a5c140147721da8e25f2fb"}, "downloads": -1, "filename": "sphinx-http-domain-0.2.tar.gz", "has_sig": false, "md5_digest": "84ad0466da96d25b4a7dc4679adb9e62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9610, "upload_time": "2011-03-12T21:54:47", "upload_time_iso_8601": "2011-03-12T21:54:47.726116Z", "url": "https://files.pythonhosted.org/packages/2f/0f/8cba5fa05ae80a96cbe768fac6e628b1e65edfecff88d0b67240d92e6d1a/sphinx-http-domain-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:05 2020"}