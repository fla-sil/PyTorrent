{"info": {"author": "Kevin Dias", "author_email": "kevin@kevindias.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "Text snippets for Django templates\n==================================\n\nSummary\n-------\n\nThis very simple application provides a way to stick a \"quote\" object into\nthe context of your `Django <https://www.djangoproject.com/>`_ templates. Quotes are selected at random from\nthe quotidian_quote database table ignoring any rows with the \"public\" field\nset to False.\n\n\nInstalling django-quotidian\n---------------------------\n\nThere are several ways to install this application.\n\nUsing pip or easy_install\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPip is the recommended package-installation tool for Python. To install\ndjango-quotidian with pip, use the command::\n\n    pip install django-quotidian\n\nIf you prefer to use easy_install then replace ``pip`` with ``easy_install``\nin the above command.\n\nTo install the latest in-development version (which may not be stable) directly\nfrom the project's Git repository you can use the command::\n\n    pip install -e git+ssh://git@bitbucket.org/dias.kev/django-quotidian#egg=quotidian\n\nUsing setuptools\n^^^^^^^^^^^^^^^^\n\nDownload the package source code or distribution tarball and then run the\nfollowing command in the django-quotidian directory::\n\n    python setup.py install\n\n\nUsing django-quotidian\n----------------------\n\n1. Install django-quotidian as described above.\n2. Create the quotidian_quote database table using manage.py syncdb.\n3. Populate the new database table with whatever quotations, testimonials,\n   hints, tips or snippets you want to use.\n4. Add \"quotidian\" to your project's INSTALLED_APPS setting.\n5. You can now choose between using quotidian's context processor or template\n   tag, or both.\n\nContext processor\n^^^^^^^^^^^^^^^^^\n\nThis adds a variable named \"quotidian_quote\" with the attributes described in\nthe 'Quote object attributes' section to the template context of every request.\n\nAdd 'quotidian.context_processors.random_public_quote' to your project's\nTEMPLATE_CONTEXT_PROCESSORS setting to activate the context processor.\n\nTemplate tag\n^^^^^^^^^^^^\n\nIf you only want to use quotidian on a few pages of your site and don't want\nthe overhead of running the context processor for every request then use\nquotidian's template tag instead. This also lets you add filters to select\nspecific quotes or inlcude multiple quotes on a page, things you can't do with\nthe context processor.\n\nTo use the template tag, load the quotidian template library with\n``{% load quotidian_tags %}`` at the top of your template. You can then inlcude \na quote on your page by using the ``{% random_quote %}`` tag. \n\nYou can override ``templates/quotidian/quotidian_quote.html`` if you need to\ncustomize the quote's template fragment.\n\nThe 'random_quote' tag accepts keyword arguments in the same format as Django's\nqueryset filter method which are used to restrict the pool of quotes quotidian\nselects from. For example, use ``{% random_quote source__contains='John' %}`` to\nselect a random quote from all (public) quotes with a source containing the\nstring 'John'.\n\n\nQuote object attributes\n-----------------------\n\nid\n    The quote's database primary key.\n\nsource\n    Intended as a short attribution for the quote's contents.\n\ncontent\n    The actual text of the quote.\n\ndetailed_citation\n    Can be used for additional attribution.\n\npublic\n    A boolean flag controlling whether the quote should be considered public\n    or not. Currently only public quotes will be selected.\n\ncreated\n    The quote's creation timestamp.\n\nmodified\n    The quote's last modified timestamp.\n\n\nReporting problems or suggesting improvements\n---------------------------------------------\n\nPlease use the issue tracker at the project's Bitbucket repository:\nhttps://bitbucket.org/dias.kev/django-quotidian\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://kevindias.com/projects/quotidian/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-quotidian", "package_url": "https://pypi.org/project/django-quotidian/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-quotidian/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://kevindias.com/projects/quotidian/"}, "release_url": "https://pypi.org/project/django-quotidian/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Adds snippets of text to your Django templates.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"summary\">\n<h2>Summary</h2>\n<p>This very simple application provides a way to stick a \u201cquote\u201d object into\nthe context of your <a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">Django</a> templates. Quotes are selected at random from\nthe quotidian_quote database table ignoring any rows with the \u201cpublic\u201d field\nset to False.</p>\n</div>\n<div id=\"installing-django-quotidian\">\n<h2>Installing django-quotidian</h2>\n<p>There are several ways to install this application.</p>\n<div id=\"using-pip-or-easy-install\">\n<h3>Using pip or easy_install</h3>\n<p>Pip is the recommended package-installation tool for Python. To install\ndjango-quotidian with pip, use the command:</p>\n<pre>pip install django-quotidian\n</pre>\n<p>If you prefer to use easy_install then replace <tt>pip</tt> with <tt>easy_install</tt>\nin the above command.</p>\n<p>To install the latest in-development version (which may not be stable) directly\nfrom the project\u2019s Git repository you can use the command:</p>\n<pre>pip install -e git+ssh://git@bitbucket.org/dias.kev/django-quotidian#egg=quotidian\n</pre>\n</div>\n<div id=\"using-setuptools\">\n<h3>Using setuptools</h3>\n<p>Download the package source code or distribution tarball and then run the\nfollowing command in the django-quotidian directory:</p>\n<pre>python setup.py install\n</pre>\n</div>\n</div>\n<div id=\"using-django-quotidian\">\n<h2>Using django-quotidian</h2>\n<ol>\n<li>Install django-quotidian as described above.</li>\n<li>Create the quotidian_quote database table using manage.py syncdb.</li>\n<li>Populate the new database table with whatever quotations, testimonials,\nhints, tips or snippets you want to use.</li>\n<li>Add \u201cquotidian\u201d to your project\u2019s INSTALLED_APPS setting.</li>\n<li>You can now choose between using quotidian\u2019s context processor or template\ntag, or both.</li>\n</ol>\n<div id=\"context-processor\">\n<h3>Context processor</h3>\n<p>This adds a variable named \u201cquotidian_quote\u201d with the attributes described in\nthe \u2018Quote object attributes\u2019 section to the template context of every request.</p>\n<p>Add \u2018quotidian.context_processors.random_public_quote\u2019 to your project\u2019s\nTEMPLATE_CONTEXT_PROCESSORS setting to activate the context processor.</p>\n</div>\n<div id=\"template-tag\">\n<h3>Template tag</h3>\n<p>If you only want to use quotidian on a few pages of your site and don\u2019t want\nthe overhead of running the context processor for every request then use\nquotidian\u2019s template tag instead. This also lets you add filters to select\nspecific quotes or inlcude multiple quotes on a page, things you can\u2019t do with\nthe context processor.</p>\n<p>To use the template tag, load the quotidian template library with\n<tt>{% load quotidian_tags %}</tt> at the top of your template. You can then inlcude\na quote on your page by using the <tt>{% random_quote %}</tt> tag.</p>\n<p>You can override <tt>templates/quotidian/quotidian_quote.html</tt> if you need to\ncustomize the quote\u2019s template fragment.</p>\n<p>The \u2018random_quote\u2019 tag accepts keyword arguments in the same format as Django\u2019s\nqueryset filter method which are used to restrict the pool of quotes quotidian\nselects from. For example, use <tt>{% random_quote <span class=\"pre\">source__contains='John'</span> %}</tt> to\nselect a random quote from all (public) quotes with a source containing the\nstring \u2018John\u2019.</p>\n</div>\n</div>\n<div id=\"quote-object-attributes\">\n<h2>Quote object attributes</h2>\n<dl>\n<dt>id</dt>\n<dd>The quote\u2019s database primary key.</dd>\n<dt>source</dt>\n<dd>Intended as a short attribution for the quote\u2019s contents.</dd>\n<dt>content</dt>\n<dd>The actual text of the quote.</dd>\n<dt>detailed_citation</dt>\n<dd>Can be used for additional attribution.</dd>\n<dt>public</dt>\n<dd>A boolean flag controlling whether the quote should be considered public\nor not. Currently only public quotes will be selected.</dd>\n<dt>created</dt>\n<dd>The quote\u2019s creation timestamp.</dd>\n<dt>modified</dt>\n<dd>The quote\u2019s last modified timestamp.</dd>\n</dl>\n</div>\n<div id=\"reporting-problems-or-suggesting-improvements\">\n<h2>Reporting problems or suggesting improvements</h2>\n<p>Please use the issue tracker at the project\u2019s Bitbucket repository:\n<a href=\"https://bitbucket.org/dias.kev/django-quotidian\" rel=\"nofollow\">https://bitbucket.org/dias.kev/django-quotidian</a></p>\n</div>\n\n          </div>"}, "last_serial": 842737, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "2cbc5bdd682e7ebdd38e33c0758c20cd", "sha256": "9ab5883a2dfb974d2b239e5be0d4503c392d9b720daf076736030fb51c3f2f75"}, "downloads": -1, "filename": "django-quotidian-0.2.tar.gz", "has_sig": false, "md5_digest": "2cbc5bdd682e7ebdd38e33c0758c20cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4572, "upload_time": "2013-08-18T18:49:32", "upload_time_iso_8601": "2013-08-18T18:49:32.573199Z", "url": "https://files.pythonhosted.org/packages/c3/f7/add5a8b83a6722b35cf3a250f420cffa33f094ac4324ffd3f1573bca9fc0/django-quotidian-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c557d27921e5aed9d20be58af98d3371", "sha256": "36a5a092cbefbb5da5d8b27e5e139706928b81cc249c35cfed9608f34a85a32c"}, "downloads": -1, "filename": "django-quotidian-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c557d27921e5aed9d20be58af98d3371", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4777, "upload_time": "2013-08-18T19:52:56", "upload_time_iso_8601": "2013-08-18T19:52:56.884001Z", "url": "https://files.pythonhosted.org/packages/d2/d9/1ecc832289c10ef743f2cf3795232cfd25b28401b5c869fcef3e180b7bab/django-quotidian-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c557d27921e5aed9d20be58af98d3371", "sha256": "36a5a092cbefbb5da5d8b27e5e139706928b81cc249c35cfed9608f34a85a32c"}, "downloads": -1, "filename": "django-quotidian-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c557d27921e5aed9d20be58af98d3371", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4777, "upload_time": "2013-08-18T19:52:56", "upload_time_iso_8601": "2013-08-18T19:52:56.884001Z", "url": "https://files.pythonhosted.org/packages/d2/d9/1ecc832289c10ef743f2cf3795232cfd25b28401b5c869fcef3e180b7bab/django-quotidian-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:27 2020"}