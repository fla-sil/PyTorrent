{"info": {"author": "Varia members", "author_email": "info@varia.zone", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Programming Language :: Python :: 3"], "description": "etherpump\n=========\n\n[![PyPI version](https://badge.fury.io/py/etherpump.svg)](https://badge.fury.io/py/etherpump)\n[![GPL license](https://img.shields.io/badge/license-GPL-brightgreen.svg)](https://git.vvvvvvaria.org/varia/etherpump/src/branch/master/LICENSE.txt)\n\n*Pumping text from etherpads into publications*\n\nA command-line utility that extends the multi writing and publishing functionalities of the [etherpad](http://etherpad.org/) by exporting the pads in multiple formats.\n\nMany pads, many networks\n------------------------\n\n*Etherpump* is a friendly fork of [*etherdump*](https://gitlab.constantvzw.org/aa/etherdump), a command line tool written by [Michael Murtaugh](http://automatist.org/) that converts etherpad pages to files. This fork is made out of curiosities in the tool, a wish to study it and shared sparks of enthusiasm to use it in different situations within Varia.\n\nEtherpump is a stretched version of etherdump. It is a playground in which we would like to add features to the initial tool that diffuse actions of *dumping* into *pumping*. So most of all, etherpump is a work-in-progress, exploring potential uses of etherpads to edit, structure and publish various types of content.\n\nAdded features are:\n\n* opt-in publishing with the `__PUBLISH__` magic word\n* the `publication` command, that listens to custom magic words such as `__RELEARN__`\n\nSee the [Change log / notes ](#change-log--notes) section for further changes.\n\nEtherpump is a tool that is used from the command line. It pumps all pads of one etherpad installation to a folder, saving them as different text files, such as plain text and HTML. It also creates an index file, that allows one to easily navigate through the list of pads. Etherpump follows a document-driven idea of publishing, which means that it converts pads as database entries into pads as files. This seems to be a redundant act of copying, but is actually an important in-between step that allows for many different publishing projects and experiments.\n\nWe started to get to know etherpump through various editions of Relearn and/or the worksessions organized by Constant. Collaborative writing on an etherpad has been an important ingredient for these situations. The habit of using pads branched into the day-to-day practice of Varia, where we use etherpads for all sorts of things, ranging from organising remote-meetings with 10+ people, to writing and designing PDF documents collaboratively.\n\nAfter installing etherpump on the Varia server, we collectively decided to not want to publish pads by default. Discussions in the group around the use of etherpads, privacy and ideas of what publishing means, led to a need to have etherpump only start the indexing work after it recognizes a `__PUBLISH__` marker on a pad. We decided to work on a `__PUBLISH__ vs. __NOPUBLISH__` branch of etherdump, which we now fork into **etherpump**.\n\nChange log / notes\n==================\n\n**January 2020**\n\nAdded experimental [trio](trio.readthedocs.io) and\n[asks](https://asks.readthedocs.io/en/latest/index.html) support for the `pull`\ncommand which enables pads to be processed concurrently. The default\n`--connection` option is set to 20 which may overpower the target server. If in\ndoubt, set this to a lower number (like 5). This functionality is experimental,\nbe cautious and please report bugs!\n\nRemoved fancy progress bars for pulling because concurrent processing makes\nthat hard to track. For now, we simply output whichever padid we're finished\nwith.\n\n**October 2019**\n\nImprove `etherpump --help` handling to make it easier for new users.\n\nAdded the `python-dateutil` and `pypandoc` dependencies\n\nAdded a fancy progress bar with `tqdm` for long running `etherpump pull --all` calls\n\nStarted with the [experimental library API](#library-api-example).\n\n**September 2019**\n\nForking *etherpump* into *etherpump*.\n\n<https://git.vvvvvvaria.org/varia/etherpump>\n\nMigrating the source code to Python 3.\n\nIntegrate PyPi publishing with setuptools.\n\n-----\n\n**May - September 2019**\n\netherpump is used to produce the *Ruminating Relearn* section of the Network Of One's Own 2 (NOOO2) publication.\n\nA new command is added to make a web publication, based on the custom magic word `__RELEARN__`.\n\n-----\n\n**June 2019**\n\nMultiple conversations around etherpump emerged during Relearn Curved in Varia, Rotterdam.\n\nIncluding the idea of executable pads (*etherhooks*), custom magic words, a federated snippet protocol (*etherstekje*) and more.\n\n<https://varia.zone/relearn-2019.html>\n\n-----\n\n**April 2019**\n\nInstallation of etherpump on the Varia server.\n\n<https://etherpump.vvvvvvaria.org/>\n\n-----\n\n**March 2019**\n\nThe `__PUBLISH__ vs. __NOPUBLISH__` was added to the etherpump repository by *decentral1se*.\n\n<https://gitlab.constantvzw.org/aa/etherpump/issues/3>\n\n-----\n\nOriginally designed for use at: [Constant](http://etherdump.constantvzw.org/).\n\nMore notes can be found in the [git repository of etherdump](https://gitlab.constantvzw.org/aa/etherdump).\n\n\nInstall etherpump\n=================\n\n`$ pip install etherpump`\n\nEtherpump only supports Python 3.\n\nCommand-line example\n--------------------\n\n```\n$ mkdir mydump\n$ cd myddump\n$ etherpump init\n```\n\nThe program then interactively asks some questions:\n\n> Please type the URL of the etherpad:\n> https://pad.vvvvvvaria.org/\n\nThe APIKEY is the contents of the file APIKEY.txt in the etherpad folder.\n\n> Please paste the APIKEY:\n> xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\nThe settings are placed in a file called `.etherpump/settings.json` and are used (by default) by future commands.\n\nLibrary API Example\n-------------------\n\nEtherpump can be used as a library.\n\nAll commands can be imported and run programmatically.\n\n```python\n>>> from etherpump.api import pull\n>>> pull(['--all', '--publish-opt-in', '--publish', '__PUB_CLUB__'])\n```\n\nSubcommands\n----------\n\nTo see all available subcommands, run:\n\n`$ etherpump --help`\n\nFor help on each individual subcommand, run:\n\n`$ etherpump revisionscount --help`\n\nPublishing\n----------\n\n* `pip install twine`\n* Bump the version number in `etherpump/__init__.py` following [\"semver\"](https://semver.org/) conventions\n* Run `make publish`\n\nYou should have a [PyPi](https://pypi.org/) account and be added as an owner/maintainer on the [etherpump package](https://pypi.org/project/etherpump/).\n\nMaintenance utilities\n---------------------\n\nTools to help things stay tidy over time.\n\n```bash\n$ pip install flake8 isort black\n$ make format\n$ make lint\n```\n\nPlease see the following links for further reading:\n\n* http://flake8.pycqa.org\n* https://isort.readthedocs.io\n* https://black.readthedocs.io\n\nKeeping track of Etherpad-lite\n------------------------------\n\n* [Etherpad-lite API documentation](https://etherpad.org/doc/v1.7.5/)\n* [Etherpad-lite releases](https://github.com/ether/etherpad-lite/releases)\n\nLicense\n=======\n\nGNU AFFERO GENERAL PUBLIC LICENSE, Version 3.\n\nSee [LICENSE.txt](./LICENSE.txt).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.vvvvvvaria.org/varia/etherpump", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "etherpump", "package_url": "https://pypi.org/project/etherpump/", "platform": "any", "project_url": "https://pypi.org/project/etherpump/", "project_urls": {"Homepage": "https://git.vvvvvvaria.org/varia/etherpump"}, "release_url": "https://pypi.org/project/etherpump/0.0.13/", "requires_dist": ["asks", "html5lib", "jinja2", "pypandoc", "python-dateutil", "requests", "trio"], "requires_python": ">=3.5", "summary": "Etherpump: pumping text from etherpads into publications", "version": "0.0.13", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>etherpump</h1>\n<p><a href=\"https://badge.fury.io/py/etherpump\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0a85413a93cfe7aa7a96f754341db0c1211c8b8/68747470733a2f2f62616467652e667572792e696f2f70792f657468657270756d702e737667\"></a>\n<a href=\"https://git.vvvvvvaria.org/varia/etherpump/src/branch/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"GPL license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/056f8ba1d6ebcdd5cbcca71849d9440704b3f35d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c2d627269676874677265656e2e737667\"></a></p>\n<p><em>Pumping text from etherpads into publications</em></p>\n<p>A command-line utility that extends the multi writing and publishing functionalities of the <a href=\"http://etherpad.org/\" rel=\"nofollow\">etherpad</a> by exporting the pads in multiple formats.</p>\n<h2>Many pads, many networks</h2>\n<p><em>Etherpump</em> is a friendly fork of <a href=\"https://gitlab.constantvzw.org/aa/etherdump\" rel=\"nofollow\"><em>etherdump</em></a>, a command line tool written by <a href=\"http://automatist.org/\" rel=\"nofollow\">Michael Murtaugh</a> that converts etherpad pages to files. This fork is made out of curiosities in the tool, a wish to study it and shared sparks of enthusiasm to use it in different situations within Varia.</p>\n<p>Etherpump is a stretched version of etherdump. It is a playground in which we would like to add features to the initial tool that diffuse actions of <em>dumping</em> into <em>pumping</em>. So most of all, etherpump is a work-in-progress, exploring potential uses of etherpads to edit, structure and publish various types of content.</p>\n<p>Added features are:</p>\n<ul>\n<li>opt-in publishing with the <code>__PUBLISH__</code> magic word</li>\n<li>the <code>publication</code> command, that listens to custom magic words such as <code>__RELEARN__</code></li>\n</ul>\n<p>See the <a href=\"#change-log--notes\" rel=\"nofollow\">Change log / notes </a> section for further changes.</p>\n<p>Etherpump is a tool that is used from the command line. It pumps all pads of one etherpad installation to a folder, saving them as different text files, such as plain text and HTML. It also creates an index file, that allows one to easily navigate through the list of pads. Etherpump follows a document-driven idea of publishing, which means that it converts pads as database entries into pads as files. This seems to be a redundant act of copying, but is actually an important in-between step that allows for many different publishing projects and experiments.</p>\n<p>We started to get to know etherpump through various editions of Relearn and/or the worksessions organized by Constant. Collaborative writing on an etherpad has been an important ingredient for these situations. The habit of using pads branched into the day-to-day practice of Varia, where we use etherpads for all sorts of things, ranging from organising remote-meetings with 10+ people, to writing and designing PDF documents collaboratively.</p>\n<p>After installing etherpump on the Varia server, we collectively decided to not want to publish pads by default. Discussions in the group around the use of etherpads, privacy and ideas of what publishing means, led to a need to have etherpump only start the indexing work after it recognizes a <code>__PUBLISH__</code> marker on a pad. We decided to work on a <code>__PUBLISH__ vs. __NOPUBLISH__</code> branch of etherdump, which we now fork into <strong>etherpump</strong>.</p>\n<h1>Change log / notes</h1>\n<p><strong>January 2020</strong></p>\n<p>Added experimental <a href=\"trio.readthedocs.io\" rel=\"nofollow\">trio</a> and\n<a href=\"https://asks.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">asks</a> support for the <code>pull</code>\ncommand which enables pads to be processed concurrently. The default\n<code>--connection</code> option is set to 20 which may overpower the target server. If in\ndoubt, set this to a lower number (like 5). This functionality is experimental,\nbe cautious and please report bugs!</p>\n<p>Removed fancy progress bars for pulling because concurrent processing makes\nthat hard to track. For now, we simply output whichever padid we're finished\nwith.</p>\n<p><strong>October 2019</strong></p>\n<p>Improve <code>etherpump --help</code> handling to make it easier for new users.</p>\n<p>Added the <code>python-dateutil</code> and <code>pypandoc</code> dependencies</p>\n<p>Added a fancy progress bar with <code>tqdm</code> for long running <code>etherpump pull --all</code> calls</p>\n<p>Started with the <a href=\"#library-api-example\" rel=\"nofollow\">experimental library API</a>.</p>\n<p><strong>September 2019</strong></p>\n<p>Forking <em>etherpump</em> into <em>etherpump</em>.</p>\n<p><a href=\"https://git.vvvvvvaria.org/varia/etherpump\" rel=\"nofollow\">https://git.vvvvvvaria.org/varia/etherpump</a></p>\n<p>Migrating the source code to Python 3.</p>\n<p>Integrate PyPi publishing with setuptools.</p>\n<hr>\n<p><strong>May - September 2019</strong></p>\n<p>etherpump is used to produce the <em>Ruminating Relearn</em> section of the Network Of One's Own 2 (NOOO2) publication.</p>\n<p>A new command is added to make a web publication, based on the custom magic word <code>__RELEARN__</code>.</p>\n<hr>\n<p><strong>June 2019</strong></p>\n<p>Multiple conversations around etherpump emerged during Relearn Curved in Varia, Rotterdam.</p>\n<p>Including the idea of executable pads (<em>etherhooks</em>), custom magic words, a federated snippet protocol (<em>etherstekje</em>) and more.</p>\n<p><a href=\"https://varia.zone/relearn-2019.html\" rel=\"nofollow\">https://varia.zone/relearn-2019.html</a></p>\n<hr>\n<p><strong>April 2019</strong></p>\n<p>Installation of etherpump on the Varia server.</p>\n<p><a href=\"https://etherpump.vvvvvvaria.org/\" rel=\"nofollow\">https://etherpump.vvvvvvaria.org/</a></p>\n<hr>\n<p><strong>March 2019</strong></p>\n<p>The <code>__PUBLISH__ vs. __NOPUBLISH__</code> was added to the etherpump repository by <em>decentral1se</em>.</p>\n<p><a href=\"https://gitlab.constantvzw.org/aa/etherpump/issues/3\" rel=\"nofollow\">https://gitlab.constantvzw.org/aa/etherpump/issues/3</a></p>\n<hr>\n<p>Originally designed for use at: <a href=\"http://etherdump.constantvzw.org/\" rel=\"nofollow\">Constant</a>.</p>\n<p>More notes can be found in the <a href=\"https://gitlab.constantvzw.org/aa/etherdump\" rel=\"nofollow\">git repository of etherdump</a>.</p>\n<h1>Install etherpump</h1>\n<p><code>$ pip install etherpump</code></p>\n<p>Etherpump only supports Python 3.</p>\n<h2>Command-line example</h2>\n<pre><code>$ mkdir mydump\n$ cd myddump\n$ etherpump init\n</code></pre>\n<p>The program then interactively asks some questions:</p>\n<blockquote>\n<p>Please type the URL of the etherpad:\n<a href=\"https://pad.vvvvvvaria.org/\" rel=\"nofollow\">https://pad.vvvvvvaria.org/</a></p>\n</blockquote>\n<p>The APIKEY is the contents of the file APIKEY.txt in the etherpad folder.</p>\n<blockquote>\n<p>Please paste the APIKEY:\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</p>\n</blockquote>\n<p>The settings are placed in a file called <code>.etherpump/settings.json</code> and are used (by default) by future commands.</p>\n<h2>Library API Example</h2>\n<p>Etherpump can be used as a library.</p>\n<p>All commands can be imported and run programmatically.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">etherpump.api</span> <span class=\"kn\">import</span> <span class=\"n\">pull</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pull</span><span class=\"p\">([</span><span class=\"s1\">'--all'</span><span class=\"p\">,</span> <span class=\"s1\">'--publish-opt-in'</span><span class=\"p\">,</span> <span class=\"s1\">'--publish'</span><span class=\"p\">,</span> <span class=\"s1\">'__PUB_CLUB__'</span><span class=\"p\">])</span>\n</pre>\n<h2>Subcommands</h2>\n<p>To see all available subcommands, run:</p>\n<p><code>$ etherpump --help</code></p>\n<p>For help on each individual subcommand, run:</p>\n<p><code>$ etherpump revisionscount --help</code></p>\n<h2>Publishing</h2>\n<ul>\n<li><code>pip install twine</code></li>\n<li>Bump the version number in <code>etherpump/__init__.py</code> following <a href=\"https://semver.org/\" rel=\"nofollow\">\"semver\"</a> conventions</li>\n<li>Run <code>make publish</code></li>\n</ul>\n<p>You should have a <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPi</a> account and be added as an owner/maintainer on the <a href=\"https://pypi.org/project/etherpump/\" rel=\"nofollow\">etherpump package</a>.</p>\n<h2>Maintenance utilities</h2>\n<p>Tools to help things stay tidy over time.</p>\n<pre>$ pip install flake8 isort black\n$ make format\n$ make lint\n</pre>\n<p>Please see the following links for further reading:</p>\n<ul>\n<li><a href=\"http://flake8.pycqa.org\" rel=\"nofollow\">http://flake8.pycqa.org</a></li>\n<li><a href=\"https://isort.readthedocs.io\" rel=\"nofollow\">https://isort.readthedocs.io</a></li>\n<li><a href=\"https://black.readthedocs.io\" rel=\"nofollow\">https://black.readthedocs.io</a></li>\n</ul>\n<h2>Keeping track of Etherpad-lite</h2>\n<ul>\n<li><a href=\"https://etherpad.org/doc/v1.7.5/\" rel=\"nofollow\">Etherpad-lite API documentation</a></li>\n<li><a href=\"https://github.com/ether/etherpad-lite/releases\" rel=\"nofollow\">Etherpad-lite releases</a></li>\n</ul>\n<h1>License</h1>\n<p>GNU AFFERO GENERAL PUBLIC LICENSE, Version 3.</p>\n<p>See <a href=\"./LICENSE.txt\" rel=\"nofollow\">LICENSE.txt</a>.</p>\n\n          </div>"}, "last_serial": 6491234, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e05c5850b0a7acff1cf6036bdd202f3c", "sha256": "5498b619e855789a99657dc7b218435b9d911ffd8cd21ab88089bf509c7bad1e"}, "downloads": -1, "filename": "etherpump-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e05c5850b0a7acff1cf6036bdd202f3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47699, "upload_time": "2019-09-25T19:48:11", "upload_time_iso_8601": "2019-09-25T19:48:11.604224Z", "url": "https://files.pythonhosted.org/packages/89/8b/d7dff119e67836c3ed5c6123b30898d1b5b1f984c9e240cd04167ab839a5/etherpump-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "8366b9518acb4c9c40ff30bab6cc2825", "sha256": "40df67c7ace0928d60dfaaf818d31bf774b5cc288e0ad7cef0141530cf284b52"}, "downloads": -1, "filename": "etherpump-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "8366b9518acb4c9c40ff30bab6cc2825", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 53490, "upload_time": "2020-01-20T16:54:52", "upload_time_iso_8601": "2020-01-20T16:54:52.090921Z", "url": "https://files.pythonhosted.org/packages/99/d6/79789ecf71ea4af5583f9fec87f37a82b33f36b398087c19e0214f0958fe/etherpump-0.0.10-py3-none-any.whl", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "90ddc8f165f6a6493b6d903774c94726", "sha256": "a31acdae5ba179f40a34e4e90f3e5230a7f12bcf9bb89a56f75455023f19def2"}, "downloads": -1, "filename": "etherpump-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "90ddc8f165f6a6493b6d903774c94726", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 53490, "upload_time": "2020-01-20T17:20:27", "upload_time_iso_8601": "2020-01-20T17:20:27.888484Z", "url": "https://files.pythonhosted.org/packages/db/db/c8364d5ef0454750ea8a9c883f1e5d7035a935af2e6fd7f94b59d9cf5945/etherpump-0.0.11-py3-none-any.whl", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "be95b1f0fb4723d35275be8008b97c19", "sha256": "2cceff21c6672ba2384ce5b97af2acc9a126ac61cb96b933d3a8cf5177c8034b"}, "downloads": -1, "filename": "etherpump-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "be95b1f0fb4723d35275be8008b97c19", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 53525, "upload_time": "2020-01-20T23:31:17", "upload_time_iso_8601": "2020-01-20T23:31:17.662585Z", "url": "https://files.pythonhosted.org/packages/56/69/2ae4089a8c57fc178cb1035d4bfec3716cb0ecfd6ee7ddc5577b25239f0d/etherpump-0.0.12-py3-none-any.whl", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "4eed7e666c56613a3ab5d294d3af37df", "sha256": "d1b4f15017c32f82e5ffb8873bff7e0ed428c17b71a53ab49d08d76243c00ae1"}, "downloads": -1, "filename": "etherpump-0.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "4eed7e666c56613a3ab5d294d3af37df", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 53530, "upload_time": "2020-01-20T23:36:47", "upload_time_iso_8601": "2020-01-20T23:36:47.286604Z", "url": "https://files.pythonhosted.org/packages/4a/2d/ea2504233cfed9d62717121e08417939bd4c38b4b7b15e9926be2cb8c353/etherpump-0.0.13-py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "5ddb2f79200324414a3ba4046c0f54f4", "sha256": "0bbf2777efcd1fc51037a6f5521038d2d38796b2447572b8010af8c394da5c50"}, "downloads": -1, "filename": "etherpump-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5ddb2f79200324414a3ba4046c0f54f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49875, "upload_time": "2019-09-25T19:49:53", "upload_time_iso_8601": "2019-09-25T19:49:53.131486Z", "url": "https://files.pythonhosted.org/packages/e6/cc/f7d53599c2a52a11c6a30057ee22466eeaef96ce5734c181bae79960368a/etherpump-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ed139defd734e8720a2f4441474d23a8", "sha256": "2122083f510a357445a6207a7309630815fa1eebddc457b3876a742f59501f3a"}, "downloads": -1, "filename": "etherpump-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ed139defd734e8720a2f4441474d23a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51239, "upload_time": "2019-09-27T22:18:04", "upload_time_iso_8601": "2019-09-27T22:18:04.208972Z", "url": "https://files.pythonhosted.org/packages/f6/d8/1bf1a6c19bb4324cba524d25ee153d20aff53283c84f99cfcad33d8fed6e/etherpump-0.0.3-py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "d60e268c7bbf75968ff0e9437883c1ac", "sha256": "12645af0dfbdda49c73cebdaf65e87b6f50b5f88632041f82c1fbd7346212607"}, "downloads": -1, "filename": "etherpump-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d60e268c7bbf75968ff0e9437883c1ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50745, "upload_time": "2019-10-07T17:20:28", "upload_time_iso_8601": "2019-10-07T17:20:28.518778Z", "url": "https://files.pythonhosted.org/packages/87/37/0c19c27f51beeb8ef6169d956a095c411bc79e2b01610fe7174526668433/etherpump-0.0.4-py3-none-any.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "4bc6f63d900163de1a1c5ecc3917611f", "sha256": "f2c5829256174168f307387d670e505d2f4e767130a189fc6f276063922f17fb"}, "downloads": -1, "filename": "etherpump-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "4bc6f63d900163de1a1c5ecc3917611f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52945, "upload_time": "2019-10-07T20:24:12", "upload_time_iso_8601": "2019-10-07T20:24:12.276842Z", "url": "https://files.pythonhosted.org/packages/de/04/b1db73acb691568adb7c532ae8c910e0e36767284222b2873d411e942abe/etherpump-0.0.5-py3-none-any.whl", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "c266e5524ea37cc432bd6fa43c21b0a4", "sha256": "cd8cdb4490360fcdf7e854620c7d9c945a7be2d0de2a49bf3f08654423cf2354"}, "downloads": -1, "filename": "etherpump-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "c266e5524ea37cc432bd6fa43c21b0a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52898, "upload_time": "2019-10-07T20:43:07", "upload_time_iso_8601": "2019-10-07T20:43:07.476947Z", "url": "https://files.pythonhosted.org/packages/32/b2/07a89672cfd951a4e8039354c7d0913dc3e136a8b5ece8eac1f6a991429c/etherpump-0.0.6-py3-none-any.whl", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "facaecdd92ba5196aa35adb131eddd08", "sha256": "84c41f769e64713cd0c80527e559a8b8c0ede0d98ce0ac854e2485ae8b6fbdb2"}, "downloads": -1, "filename": "etherpump-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "facaecdd92ba5196aa35adb131eddd08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52968, "upload_time": "2019-10-07T21:42:00", "upload_time_iso_8601": "2019-10-07T21:42:00.018782Z", "url": "https://files.pythonhosted.org/packages/0c/1e/6241306aa86107dd51a91c59b73ca939ca92d3f3216f129c8f18ec61af5d/etherpump-0.0.7-py3-none-any.whl", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "804e56f123b34554e5b2522b26e59261", "sha256": "2ce6c3e785e0776f0987b38049663541c865182f46ee0187eefd666c059e5b08"}, "downloads": -1, "filename": "etherpump-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "804e56f123b34554e5b2522b26e59261", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52937, "upload_time": "2019-10-07T21:52:20", "upload_time_iso_8601": "2019-10-07T21:52:20.007058Z", "url": "https://files.pythonhosted.org/packages/9a/97/90a84b7d2f998ad0bb23ebd9dcc91a56b01611dc7812c1789a1b61940526/etherpump-0.0.8-py3-none-any.whl", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "51bad44f376f3f59ebcb4b56fe2baaf0", "sha256": "0f0bacf1fec979bc0d229ef2f1cc693240dff0e904f882ab591ebf84d60d40c6"}, "downloads": -1, "filename": "etherpump-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "51bad44f376f3f59ebcb4b56fe2baaf0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 53453, "upload_time": "2020-01-20T16:28:28", "upload_time_iso_8601": "2020-01-20T16:28:28.047812Z", "url": "https://files.pythonhosted.org/packages/e5/bc/023b5e9dcdb09e27a3b7a206c7643d8a7d042fd70747f14e014000fa80c8/etherpump-0.0.9-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4eed7e666c56613a3ab5d294d3af37df", "sha256": "d1b4f15017c32f82e5ffb8873bff7e0ed428c17b71a53ab49d08d76243c00ae1"}, "downloads": -1, "filename": "etherpump-0.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "4eed7e666c56613a3ab5d294d3af37df", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 53530, "upload_time": "2020-01-20T23:36:47", "upload_time_iso_8601": "2020-01-20T23:36:47.286604Z", "url": "https://files.pythonhosted.org/packages/4a/2d/ea2504233cfed9d62717121e08417939bd4c38b4b7b15e9926be2cb8c353/etherpump-0.0.13-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:45:28 2020"}