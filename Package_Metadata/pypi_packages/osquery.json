{"info": {"author": "osquery developers", "author_email": "osquery@fb.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.6", "Topic :: Security"], "description": "## osquery-python\n\n![osquery-python-logo](https://i.imgur.com/9Vy2GFx.png)\n\n[osquery](https://github.com/facebook/osquery) exposes an operating system as a high-performance relational database. This allows you to write SQL-based queries to explore operating system data. With osquery, SQL tables represent abstract concepts such as running processes, loaded kernel modules, open network connections, browser plugins, hardware events or file hashes.\n\nIf you're interested in learning more about osquery, visit the [GitHub project](https://github.com/facebook/osquery), the [website](https://osquery.io), and the [users guide](https://osquery.readthedocs.org/).\n\n### What is osquery-python?\n\n[![Build Status](https://travis-ci.org/osquery/osquery-python.svg?branch=master)](https://travis-ci.org/osquery/osquery-python)\n\nIn osquery, SQL tables, configuration retrieval, log handling, etc are implemented via a simple, robust plugin and extensions API. This project contains the official Python bindings for creating osquery extensions in Python. Consider the following example:\n\n```python\n#!/usr/bin/env python\n\nimport osquery\n\n@osquery.register_plugin\nclass MyTablePlugin(osquery.TablePlugin):\n    def name(self):\n        return \"foobar\"\n\n    def columns(self):\n        return [\n            osquery.TableColumn(name=\"foo\", type=osquery.STRING),\n            osquery.TableColumn(name=\"baz\", type=osquery.STRING),\n        ]\n\n    def generate(self, context):\n        query_data = []\n\n        for _ in range(2):\n            row = {}\n            row[\"foo\"] = \"bar\"\n            row[\"baz\"] = \"baz\"\n            query_data.append(row)\n\n        return query_data\n\nif __name__ == \"__main__\":\n    osquery.start_extension(name=\"my_awesome_extension\", version=\"1.0.0\")\n```\n\nTo test this code start an osquery shell:\n\n```\nosqueryi --nodisable_extensions\nosquery> select value from osquery_flags where name = 'extensions_socket';\n+-----------------------------------+\n| value                             |\n+-----------------------------------+\n| /Users/USERNAME/.osquery/shell.em |\n+-----------------------------------+\n```\n\nThen start the Python extension:\n\n```\npython ./my_table_plugin.py --socket /Users/USERNAME/.osquery/shell.em\n```\n\nAlternatively, you can also autoload your extension when starting an osquery shell:\n\n```\nosqueryi --extension path_to_my_table_plugin.py\n```\n\nThis will register a table called \"foobar\". As you can see, the table will return two rows:\n\n```\nosquery> select * from foobar;\n+-----+-----+\n| foo | baz |\n+-----+-----+\n| bar | baz |\n| bar | baz |\n+-----+-----+\nosquery>\n```\n\nThis is obviously a contrived example, but it's easy to imagine the possibilities.\n\nUsing the instructions found on the [wiki](https://osquery.readthedocs.org/en/latest/development/osquery-sdk/), you can easily deploy your extension with an existing osquery deployment.\n\nExtensions are the core way that you can extend and customize osquery. At Facebook, we use extensions extensively to implement many plugins that take advantage of internal APIs and tools.\n\n### Execute queries in Python\n\nThe same Thrift bindings can be used to create a Python client for the `osqueryd` or `osqueryi`'s extension socket. There are helper classes provided that spawn an ephemeral osquery process for consecutive or long running client instances.\n\n```python\nimport osquery\n\nif __name__ == \"__main__\":\n    # Spawn an osquery process using an ephemeral extension socket.\n    instance = osquery.SpawnInstance()\n    instance.open()  # This may raise an exception\n\n    # Issues queries and call osquery Thrift APIs.\n    instance.client.query(\"select timestamp from time\")\n```\n\n### Connect to an existing socket\n\nIn the example above the `SpawnInstance()` method is used to fork and configure an osquery instance. We can use similar APIs to connect to the Thrift socket of an existing osquery instance. Remember, normal UNIX permissions apply to the Thrift socket.\n\nImagine if you started `osqueryd`:\n```sh\n$ osqueryd --ephemeral --disable_logging --disable_database \\\n    --extensions_socket /home/you/.osquery/osqueryd.sock &\n```\n\nThen use the Python bindings:\n```python\nimport osquery\n\nif __name__ == \"__main__\":\n    # You must know the Thrift socket path\n    # For an installed and running system osqueryd, this is:\n    #   Linux and macOS: /var/osquery/osquery.em\n    #   FreeBSD: /var/run/osquery.em\n    #   Windows: \\\\.pipe\\osquery.em\n    instance = osquery.ExtensionClient('/home/you/.osquery/osqueryd.sock')\n    instance.open()  # This may raise an exception\n\n    # Issue queries and call osquery Thrift APIs.\n    client = instance.extension_client()\n    client.query('select timestamp from time')\n```\n\n### Install\n\nTo install from PyPi, run the following:\n\n```\npip install osquery\n```\n\nAlternatively, to install from this repo, run the following:\n\n```\npython setup.py build\npython setup.py install\n```\n\n\n### Development\n\nSee [CONTRIBUTING.md](https://github.com/osquery/osquery-python/blob/master/CONTRIBUTING.md) and the [osquery wiki](https://osquery.readthedocs.org) for development information.\n\n### Vulnerabilities\n\nFacebook has a [bug bounty](https://www.facebook.com/whitehat/) program that includes osquery. If you find a security vulnerability in osquery, please submit it via the process outlined on that page and do not file a public issue. For more information on finding vulnerabilities in osquery, see a recent blog post about [bug-hunting osquery](https://www.facebook.com/notes/facebook-bug-bounty/bug-hunting-osquery/954850014529225).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://osquery.io", "keywords": "security databases operating systems", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "osquery", "package_url": "https://pypi.org/project/osquery/", "platform": "", "project_url": "https://pypi.org/project/osquery/", "project_urls": {"Homepage": "https://osquery.io"}, "release_url": "https://pypi.org/project/osquery/3.0.6/", "requires_dist": ["thrift (>=0.10)", "argparse (>=1.1)", "future"], "requires_python": "", "summary": "Osquery Python API", "version": "3.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>osquery-python</h2>\n<p><img alt=\"osquery-python-logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/76ba36da6d074d4b52139d87b8d8bc1ea882e649/68747470733a2f2f692e696d6775722e636f6d2f395679324746782e706e67\"></p>\n<p><a href=\"https://github.com/facebook/osquery\" rel=\"nofollow\">osquery</a> exposes an operating system as a high-performance relational database. This allows you to write SQL-based queries to explore operating system data. With osquery, SQL tables represent abstract concepts such as running processes, loaded kernel modules, open network connections, browser plugins, hardware events or file hashes.</p>\n<p>If you're interested in learning more about osquery, visit the <a href=\"https://github.com/facebook/osquery\" rel=\"nofollow\">GitHub project</a>, the <a href=\"https://osquery.io\" rel=\"nofollow\">website</a>, and the <a href=\"https://osquery.readthedocs.org/\" rel=\"nofollow\">users guide</a>.</p>\n<h3>What is osquery-python?</h3>\n<p><a href=\"https://travis-ci.org/osquery/osquery-python\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a70ae145c514c31314c33572c68b1b9c50506ae3/68747470733a2f2f7472617669732d63692e6f72672f6f7371756572792f6f7371756572792d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>In osquery, SQL tables, configuration retrieval, log handling, etc are implemented via a simple, robust plugin and extensions API. This project contains the official Python bindings for creating osquery extensions in Python. Consider the following example:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">osquery</span>\n\n<span class=\"nd\">@osquery</span><span class=\"o\">.</span><span class=\"n\">register_plugin</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyTablePlugin</span><span class=\"p\">(</span><span class=\"n\">osquery</span><span class=\"o\">.</span><span class=\"n\">TablePlugin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"foobar\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">columns</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span>\n            <span class=\"n\">osquery</span><span class=\"o\">.</span><span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">osquery</span><span class=\"o\">.</span><span class=\"n\">STRING</span><span class=\"p\">),</span>\n            <span class=\"n\">osquery</span><span class=\"o\">.</span><span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"baz\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">osquery</span><span class=\"o\">.</span><span class=\"n\">STRING</span><span class=\"p\">),</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">generate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n        <span class=\"n\">query_data</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n            <span class=\"n\">row</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n            <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"s2\">\"foo\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"bar\"</span>\n            <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"s2\">\"baz\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"baz\"</span>\n            <span class=\"n\">query_data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">query_data</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">osquery</span><span class=\"o\">.</span><span class=\"n\">start_extension</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"my_awesome_extension\"</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s2\">\"1.0.0\"</span><span class=\"p\">)</span>\n</pre>\n<p>To test this code start an osquery shell:</p>\n<pre><code>osqueryi --nodisable_extensions\nosquery&gt; select value from osquery_flags where name = 'extensions_socket';\n+-----------------------------------+\n| value                             |\n+-----------------------------------+\n| /Users/USERNAME/.osquery/shell.em |\n+-----------------------------------+\n</code></pre>\n<p>Then start the Python extension:</p>\n<pre><code>python ./my_table_plugin.py --socket /Users/USERNAME/.osquery/shell.em\n</code></pre>\n<p>Alternatively, you can also autoload your extension when starting an osquery shell:</p>\n<pre><code>osqueryi --extension path_to_my_table_plugin.py\n</code></pre>\n<p>This will register a table called \"foobar\". As you can see, the table will return two rows:</p>\n<pre><code>osquery&gt; select * from foobar;\n+-----+-----+\n| foo | baz |\n+-----+-----+\n| bar | baz |\n| bar | baz |\n+-----+-----+\nosquery&gt;\n</code></pre>\n<p>This is obviously a contrived example, but it's easy to imagine the possibilities.</p>\n<p>Using the instructions found on the <a href=\"https://osquery.readthedocs.org/en/latest/development/osquery-sdk/\" rel=\"nofollow\">wiki</a>, you can easily deploy your extension with an existing osquery deployment.</p>\n<p>Extensions are the core way that you can extend and customize osquery. At Facebook, we use extensions extensively to implement many plugins that take advantage of internal APIs and tools.</p>\n<h3>Execute queries in Python</h3>\n<p>The same Thrift bindings can be used to create a Python client for the <code>osqueryd</code> or <code>osqueryi</code>'s extension socket. There are helper classes provided that spawn an ephemeral osquery process for consecutive or long running client instances.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">osquery</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Spawn an osquery process using an ephemeral extension socket.</span>\n    <span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">osquery</span><span class=\"o\">.</span><span class=\"n\">SpawnInstance</span><span class=\"p\">()</span>\n    <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span>  <span class=\"c1\"># This may raise an exception</span>\n\n    <span class=\"c1\"># Issues queries and call osquery Thrift APIs.</span>\n    <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">\"select timestamp from time\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Connect to an existing socket</h3>\n<p>In the example above the <code>SpawnInstance()</code> method is used to fork and configure an osquery instance. We can use similar APIs to connect to the Thrift socket of an existing osquery instance. Remember, normal UNIX permissions apply to the Thrift socket.</p>\n<p>Imagine if you started <code>osqueryd</code>:</p>\n<pre>$ osqueryd --ephemeral --disable_logging --disable_database <span class=\"se\">\\</span>\n    --extensions_socket /home/you/.osquery/osqueryd.sock <span class=\"p\">&amp;</span>\n</pre>\n<p>Then use the Python bindings:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">osquery</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"c1\"># You must know the Thrift socket path</span>\n    <span class=\"c1\"># For an installed and running system osqueryd, this is:</span>\n    <span class=\"c1\">#   Linux and macOS: /var/osquery/osquery.em</span>\n    <span class=\"c1\">#   FreeBSD: /var/run/osquery.em</span>\n    <span class=\"c1\">#   Windows: \\\\.pipe\\osquery.em</span>\n    <span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">osquery</span><span class=\"o\">.</span><span class=\"n\">ExtensionClient</span><span class=\"p\">(</span><span class=\"s1\">'/home/you/.osquery/osqueryd.sock'</span><span class=\"p\">)</span>\n    <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span>  <span class=\"c1\"># This may raise an exception</span>\n\n    <span class=\"c1\"># Issue queries and call osquery Thrift APIs.</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">extension_client</span><span class=\"p\">()</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s1\">'select timestamp from time'</span><span class=\"p\">)</span>\n</pre>\n<h3>Install</h3>\n<p>To install from PyPi, run the following:</p>\n<pre><code>pip install osquery\n</code></pre>\n<p>Alternatively, to install from this repo, run the following:</p>\n<pre><code>python setup.py build\npython setup.py install\n</code></pre>\n<h3>Development</h3>\n<p>See <a href=\"https://github.com/osquery/osquery-python/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a> and the <a href=\"https://osquery.readthedocs.org\" rel=\"nofollow\">osquery wiki</a> for development information.</p>\n<h3>Vulnerabilities</h3>\n<p>Facebook has a <a href=\"https://www.facebook.com/whitehat/\" rel=\"nofollow\">bug bounty</a> program that includes osquery. If you find a security vulnerability in osquery, please submit it via the process outlined on that page and do not file a public issue. For more information on finding vulnerabilities in osquery, see a recent blog post about <a href=\"https://www.facebook.com/notes/facebook-bug-bounty/bug-hunting-osquery/954850014529225\" rel=\"nofollow\">bug-hunting osquery</a>.</p>\n\n          </div>"}, "last_serial": 5651570, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "8141febb50cac0ad64ac7970558a61e6", "sha256": "48d87c4d68d9f1088347736eb12e2445897c2930ee65137494e90c7960241c15"}, "downloads": -1, "filename": "osquery-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8141febb50cac0ad64ac7970558a61e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15528, "upload_time": "2015-12-28T10:19:08", "upload_time_iso_8601": "2015-12-28T10:19:08.669996Z", "url": "https://files.pythonhosted.org/packages/e3/6d/e9e0e1c2d391f0f77d38520562aa6f5fa1eb1c2171f28d5267b40a265732/osquery-0.1.1.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "9269ebb180e987bba27693a658e28a2b", "sha256": "b8e49141867283d254c577277a2c0c3b6a2df26652cb7517c1a1788efa5e904a"}, "downloads": -1, "filename": "osquery-1.8.0.tar.gz", "has_sig": false, "md5_digest": "9269ebb180e987bba27693a658e28a2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16162, "upload_time": "2016-07-20T18:10:14", "upload_time_iso_8601": "2016-07-20T18:10:14.300069Z", "url": "https://files.pythonhosted.org/packages/32/7a/e4243535d24c1e1478d88f6109fbf149bfc8148901754da58ea97ce0f601/osquery-1.8.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "a748c5276c0c36ec9f993556443f377e", "sha256": "896c3dd09a7662c2a685d72f523ca2aa006ac2c9f3652370d7aca5ac4e0d5e57"}, "downloads": -1, "filename": "osquery-2.2.0.tar.gz", "has_sig": false, "md5_digest": "a748c5276c0c36ec9f993556443f377e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16508, "upload_time": "2017-01-31T02:06:38", "upload_time_iso_8601": "2017-01-31T02:06:38.799831Z", "url": "https://files.pythonhosted.org/packages/92/7b/fbdbeefa8c0bbd98d762674de48bea4e066cebd7021e2d52df54f236dfc5/osquery-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "ef10277cb4559ef2fad12fd46fcb86f8", "sha256": "e10fc7d422e2cd326239dd31df5754e5cba0676efdac49db144076e2278818f7"}, "downloads": -1, "filename": "osquery-2.2.1.tar.gz", "has_sig": false, "md5_digest": "ef10277cb4559ef2fad12fd46fcb86f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16699, "upload_time": "2017-05-29T01:17:18", "upload_time_iso_8601": "2017-05-29T01:17:18.677313Z", "url": "https://files.pythonhosted.org/packages/e8/6f/9af61ff2b013fe70ae3e3a91b0888824756ab92c72aef0949a6e7434bb28/osquery-2.2.1.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "4bfc6aca8586f649c4ac40d9a1146307", "sha256": "64497ce6860f91ed65ac2f206c62b5461896dc8ed489c65e128892f6e15ed44a"}, "downloads": -1, "filename": "osquery-3.0.0.tar.gz", "has_sig": false, "md5_digest": "4bfc6aca8586f649c4ac40d9a1146307", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16557, "upload_time": "2017-10-04T21:01:05", "upload_time_iso_8601": "2017-10-04T21:01:05.031266Z", "url": "https://files.pythonhosted.org/packages/de/80/5b2fe258b1d309a02a007fc6e272fdb76d998715e5d97efa8fceb6e9a864/osquery-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "ea4e58b8eb0a22b8829d64bf2d06eb7b", "sha256": "2dca8b86d5d61a52165a15309c5820bdd31cda89298cb3aff5d80d02f1b7e044"}, "downloads": -1, "filename": "osquery-3.0.1.tar.gz", "has_sig": false, "md5_digest": "ea4e58b8eb0a22b8829d64bf2d06eb7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21893, "upload_time": "2018-04-11T21:05:53", "upload_time_iso_8601": "2018-04-11T21:05:53.819736Z", "url": "https://files.pythonhosted.org/packages/33/17/92941f0bc5172d087947d704026362e405edfd44acb29d0c22b9dc3d55f3/osquery-3.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "7c699fa0563a28921b5b0b5f42e846cd", "sha256": "46cc3c9c2460204b43247ab5e047fadbb69652887d0d4723b9e9389b40fb36ff"}, "downloads": -1, "filename": "osquery-3.0.2.tar.gz", "has_sig": false, "md5_digest": "7c699fa0563a28921b5b0b5f42e846cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21897, "upload_time": "2018-04-11T21:07:01", "upload_time_iso_8601": "2018-04-11T21:07:01.035602Z", "url": "https://files.pythonhosted.org/packages/64/75/dedbff4de42590611883073697f04e6ed02266720b8c459e5028be5351dd/osquery-3.0.2.tar.gz", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "adf7da65cd580cae1def223ccbc28f18", "sha256": "5b7f56fa2bbed8ff938516a7318e6361dd7ca855ea2a0af158ea1ef0ade996ba"}, "downloads": -1, "filename": "osquery-3.0.3.tar.gz", "has_sig": false, "md5_digest": "adf7da65cd580cae1def223ccbc28f18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21987, "upload_time": "2018-05-17T22:36:51", "upload_time_iso_8601": "2018-05-17T22:36:51.076763Z", "url": "https://files.pythonhosted.org/packages/dc/16/81d1e18f567caef39f302bf5221f3b819aa7a8784d6a793fe56e7dad4887/osquery-3.0.3.tar.gz", "yanked": false}], "3.0.4": [{"comment_text": "", "digests": {"md5": "34daef88c96e665ca7aad3aeebe76471", "sha256": "08b0c6e338ef81e86e406a9c8ff8e669a937d8ebe40f4edf309673cff1c32ec2"}, "downloads": -1, "filename": "osquery-3.0.4.tar.gz", "has_sig": false, "md5_digest": "34daef88c96e665ca7aad3aeebe76471", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22007, "upload_time": "2018-06-15T14:44:25", "upload_time_iso_8601": "2018-06-15T14:44:25.627026Z", "url": "https://files.pythonhosted.org/packages/cc/6d/9acf693c6c2355dc8d75c68626685bf34865db2b2994b8b00dd68bf0bf40/osquery-3.0.4.tar.gz", "yanked": false}], "3.0.5": [{"comment_text": "", "digests": {"md5": "5f30dd05c173d30d2b763793a39556a2", "sha256": "51b8f46d2c76bdeda8ed0630b26c9371d184bd8750368eff520388eabfff9750"}, "downloads": -1, "filename": "osquery-3.0.5.tar.gz", "has_sig": false, "md5_digest": "5f30dd05c173d30d2b763793a39556a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22046, "upload_time": "2018-07-13T18:18:42", "upload_time_iso_8601": "2018-07-13T18:18:42.546534Z", "url": "https://files.pythonhosted.org/packages/e3/12/a1b1b47b4fd8517031b65ad3973244eade8a6db32b63f578adf2936dd6f3/osquery-3.0.5.tar.gz", "yanked": false}], "3.0.6": [{"comment_text": "", "digests": {"md5": "cfc472b52c6f2900fd85da7c5515e0c6", "sha256": "84b28cfe1283e4a988a57355efb976383ba68d80e82cc1bebe1a35524b136326"}, "downloads": -1, "filename": "osquery-3.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cfc472b52c6f2900fd85da7c5515e0c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26306, "upload_time": "2019-08-07T18:41:29", "upload_time_iso_8601": "2019-08-07T18:41:29.593107Z", "url": "https://files.pythonhosted.org/packages/ee/d9/9b6359dc85a3ee557cddf5692fb45620fcfca7d5bba6a5d224da972cfc2c/osquery-3.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b35e134df15a1e3c0be18af744dfbc8", "sha256": "d934f3508197acb607d6e803659aa3ce58af17faf04e76a0860a9fc3e557390b"}, "downloads": -1, "filename": "osquery-3.0.6.tar.gz", "has_sig": false, "md5_digest": "2b35e134df15a1e3c0be18af744dfbc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22157, "upload_time": "2019-08-07T18:41:30", "upload_time_iso_8601": "2019-08-07T18:41:30.940303Z", "url": "https://files.pythonhosted.org/packages/ef/ce/07fc88515a5ea0459c9ac9e1e67ffd4357db5d8d6423f045f02e487dcc1b/osquery-3.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cfc472b52c6f2900fd85da7c5515e0c6", "sha256": "84b28cfe1283e4a988a57355efb976383ba68d80e82cc1bebe1a35524b136326"}, "downloads": -1, "filename": "osquery-3.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cfc472b52c6f2900fd85da7c5515e0c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26306, "upload_time": "2019-08-07T18:41:29", "upload_time_iso_8601": "2019-08-07T18:41:29.593107Z", "url": "https://files.pythonhosted.org/packages/ee/d9/9b6359dc85a3ee557cddf5692fb45620fcfca7d5bba6a5d224da972cfc2c/osquery-3.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b35e134df15a1e3c0be18af744dfbc8", "sha256": "d934f3508197acb607d6e803659aa3ce58af17faf04e76a0860a9fc3e557390b"}, "downloads": -1, "filename": "osquery-3.0.6.tar.gz", "has_sig": false, "md5_digest": "2b35e134df15a1e3c0be18af744dfbc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22157, "upload_time": "2019-08-07T18:41:30", "upload_time_iso_8601": "2019-08-07T18:41:30.940303Z", "url": "https://files.pythonhosted.org/packages/ef/ce/07fc88515a5ea0459c9ac9e1e67ffd4357db5d8d6423f045f02e487dcc1b/osquery-3.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:02 2020"}