{"info": {"author": "Kirk Erickson", "author_email": "ekirk0+gitlab@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# GMC\n\ngmc geiger counter api\n\n\n### about the device\n\n[gmc geiger counter](https://www.gqelectronicsllc.com/comersus/store/comersus_viewItem.asp?idProduct=4570)\n\nAn inexpensive geiger counter that has many software interface projects.  \nThis tool can be found on amazon.\n\n\n### aim of this project \n\nThis project [gmc](https://github.com/slippers/gmc) updates to python3 and \nattempts to simplify some of the features of the gmc api.  Many of the \nbug fixes and were utilized from other projects as listed in\n\n\n### installation\n\nUsing pip I suggest creating a virtualenv first.\n\n    python3 -m venv venv\n    source ./venv/bin/activate\n\nThen install gmc using pip from web\n\n    pip install gmc\n\nOr from local directory\n\n    pip install ~/projects/rad/gmc\n\n\n### usage\n\n    python\n    >>> from gmc import GMC\n    >>> g = GMC()  # or with configuration GMC({'DEFAULT_BAUDRATE':57600})\n    >>> g.version()\n    'GMC-300Re 4.22'\n\n\n### features\n\n* access to gmc device api functions\n* read and modify configuration\n* read history\n* heartbeat as non blocking process\n* modular configuration per device model\n* utilize ctypes.Structure for confiuration model\n* tests using pytest\n* preparation setup for pypi deployment\n* GMC class has a logger = logging='gmc.gmc' \n* inject configuration into GMC to override gmc.config\n\n\n### todo\n\n* parse history logs\n* issues with writing configuration - mostly works\n* example scripts to report to internet radiation detection sites.\n\n### other projects\n\nThere are others out there too.  Here is what I worked from.\n\n[geigerlog](https://sourceforge.net/projects/geigerlog/)\n\n[gq-gmc-control](https://github.com/chaim-zax/gq-gmc-control)\n\n[gqgmc-code](http://www.gqelectronicsllc.com/comersus/store/download.asp)\n\n[stelas/gclog](https://github.com/stelas/gclog)\n\n### radiation mapping sites\n\n[radmon.org](https://radmon.org/index.php/register)\n\n### bash binary files\n\ngmc produces a tmp file of history data. \nit is in binary format\n\ntake a look at the raw history data file.\n\nexample:\n\n    od -t x1 /tmp/tmpdmtc4ow1.bin\n\n    hexdump -x /tmp/tmpdmtc4ow1.bin\n\n    hd /tmp/tmpdmtc4ow1.bin | HEAD\n\n    xxd /tmp/tmpdmtc4ow1.bin | head\n\n\n### testing\n\ntesting could be harmful to your device.\nyou may have to factory reset it with\nsome types of commands.\n\n\nthis will activate all tests\n\n    pytest \n\njust run one test by name\n\n    pytest --pdb -k test_device\n\n\n### usb connection\n\ndifferent per system.\n\ncreate [udev-usb](documents/udev-usb.md) to describe linux connections.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/slippers/gmc", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gmc", "package_url": "https://pypi.org/project/gmc/", "platform": "", "project_url": "https://pypi.org/project/gmc/", "project_urls": {"Homepage": "https://gitlab.com/slippers/gmc"}, "release_url": "https://pypi.org/project/gmc/1.0.0/", "requires_dist": ["pyserial (==3.4)"], "requires_python": "", "summary": "GMC Geiger counter api", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GMC</h1>\n<p>gmc geiger counter api</p>\n<h3>about the device</h3>\n<p><a href=\"https://www.gqelectronicsllc.com/comersus/store/comersus_viewItem.asp?idProduct=4570\" rel=\"nofollow\">gmc geiger counter</a></p>\n<p>An inexpensive geiger counter that has many software interface projects.<br>\nThis tool can be found on amazon.</p>\n<h3>aim of this project</h3>\n<p>This project <a href=\"https://github.com/slippers/gmc\" rel=\"nofollow\">gmc</a> updates to python3 and\nattempts to simplify some of the features of the gmc api.  Many of the\nbug fixes and were utilized from other projects as listed in</p>\n<h3>installation</h3>\n<p>Using pip I suggest creating a virtualenv first.</p>\n<pre><code>python3 -m venv venv\nsource ./venv/bin/activate\n</code></pre>\n<p>Then install gmc using pip from web</p>\n<pre><code>pip install gmc\n</code></pre>\n<p>Or from local directory</p>\n<pre><code>pip install ~/projects/rad/gmc\n</code></pre>\n<h3>usage</h3>\n<pre><code>python\n&gt;&gt;&gt; from gmc import GMC\n&gt;&gt;&gt; g = GMC()  # or with configuration GMC({'DEFAULT_BAUDRATE':57600})\n&gt;&gt;&gt; g.version()\n'GMC-300Re 4.22'\n</code></pre>\n<h3>features</h3>\n<ul>\n<li>access to gmc device api functions</li>\n<li>read and modify configuration</li>\n<li>read history</li>\n<li>heartbeat as non blocking process</li>\n<li>modular configuration per device model</li>\n<li>utilize ctypes.Structure for confiuration model</li>\n<li>tests using pytest</li>\n<li>preparation setup for pypi deployment</li>\n<li>GMC class has a logger = logging='gmc.gmc'</li>\n<li>inject configuration into GMC to override gmc.config</li>\n</ul>\n<h3>todo</h3>\n<ul>\n<li>parse history logs</li>\n<li>issues with writing configuration - mostly works</li>\n<li>example scripts to report to internet radiation detection sites.</li>\n</ul>\n<h3>other projects</h3>\n<p>There are others out there too.  Here is what I worked from.</p>\n<p><a href=\"https://sourceforge.net/projects/geigerlog/\" rel=\"nofollow\">geigerlog</a></p>\n<p><a href=\"https://github.com/chaim-zax/gq-gmc-control\" rel=\"nofollow\">gq-gmc-control</a></p>\n<p><a href=\"http://www.gqelectronicsllc.com/comersus/store/download.asp\" rel=\"nofollow\">gqgmc-code</a></p>\n<p><a href=\"https://github.com/stelas/gclog\" rel=\"nofollow\">stelas/gclog</a></p>\n<h3>radiation mapping sites</h3>\n<p><a href=\"https://radmon.org/index.php/register\" rel=\"nofollow\">radmon.org</a></p>\n<h3>bash binary files</h3>\n<p>gmc produces a tmp file of history data.\nit is in binary format</p>\n<p>take a look at the raw history data file.</p>\n<p>example:</p>\n<pre><code>od -t x1 /tmp/tmpdmtc4ow1.bin\n\nhexdump -x /tmp/tmpdmtc4ow1.bin\n\nhd /tmp/tmpdmtc4ow1.bin | HEAD\n\nxxd /tmp/tmpdmtc4ow1.bin | head\n</code></pre>\n<h3>testing</h3>\n<p>testing could be harmful to your device.\nyou may have to factory reset it with\nsome types of commands.</p>\n<p>this will activate all tests</p>\n<pre><code>pytest \n</code></pre>\n<p>just run one test by name</p>\n<pre><code>pytest --pdb -k test_device\n</code></pre>\n<h3>usb connection</h3>\n<p>different per system.</p>\n<p>create <a href=\"documents/udev-usb.md\" rel=\"nofollow\">udev-usb</a> to describe linux connections.</p>\n\n          </div>"}, "last_serial": 4541465, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "2f471b8e6fab718b2ed7e909a87bd935", "sha256": "d81197e0c686de49495c3d774afa4df88d3aba1e3279fb0f594c87edd7e73f73"}, "downloads": -1, "filename": "gmc-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2f471b8e6fab718b2ed7e909a87bd935", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25516, "upload_time": "2018-11-29T04:24:05", "upload_time_iso_8601": "2018-11-29T04:24:05.147584Z", "url": "https://files.pythonhosted.org/packages/23/d6/0d488f66abc482c79097e7a32f873c7661d040bb8917f47510f38087a552/gmc-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7af4f84f3fdea73b2dcef1924f78a8ba", "sha256": "e7a75002256523b267b431cd3dc6e7e2f0afc084e96c892801812fd75d760843"}, "downloads": -1, "filename": "gmc-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7af4f84f3fdea73b2dcef1924f78a8ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11846, "upload_time": "2018-11-29T04:24:07", "upload_time_iso_8601": "2018-11-29T04:24:07.821958Z", "url": "https://files.pythonhosted.org/packages/07/dd/c03c8bd5b0287b32aa77348314dd66ae2f5613ca41d64183e090d188f59a/gmc-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2f471b8e6fab718b2ed7e909a87bd935", "sha256": "d81197e0c686de49495c3d774afa4df88d3aba1e3279fb0f594c87edd7e73f73"}, "downloads": -1, "filename": "gmc-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2f471b8e6fab718b2ed7e909a87bd935", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25516, "upload_time": "2018-11-29T04:24:05", "upload_time_iso_8601": "2018-11-29T04:24:05.147584Z", "url": "https://files.pythonhosted.org/packages/23/d6/0d488f66abc482c79097e7a32f873c7661d040bb8917f47510f38087a552/gmc-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7af4f84f3fdea73b2dcef1924f78a8ba", "sha256": "e7a75002256523b267b431cd3dc6e7e2f0afc084e96c892801812fd75d760843"}, "downloads": -1, "filename": "gmc-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7af4f84f3fdea73b2dcef1924f78a8ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11846, "upload_time": "2018-11-29T04:24:07", "upload_time_iso_8601": "2018-11-29T04:24:07.821958Z", "url": "https://files.pythonhosted.org/packages/07/dd/c03c8bd5b0287b32aa77348314dd66ae2f5613ca41d64183e090d188f59a/gmc-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:19 2020"}