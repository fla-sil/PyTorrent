{"info": {"author": "Matthias Erll", "author_email": "matthias@erll.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "PDF-Config\n==========\n\nA simple, easy-to-script tool for merging multiple PDF files into one\ndocument using a YAML configuration file.\n\nThe program is written in Python, using the\n`PyPDF4 <https://github.com/claird/PyPDF4>`__ library.\n\nPurpose\n-------\n\nThere are many good utilities for splitting and merging PDF files. For\ninstance, if you prefer one with a GUI, `PDF\nArranger <https://github.com/jeromerobert/pdfarranger>`__ is a good\nchoice. However, I had slightly different requirements: \\* Composing\nseveral documents from a similar set of files, but each time with slight\nmodifications. \\* Creating a structure of bookmarks, so that it is\neasier to navigate the larger document. \\* Original PDF features such as\nhyperlinks and the page orientation should remain intact.\n\nFeatures\n--------\n\n-  Simple YAML configuration file structure\n-  Adding PDF metadata\n-  Creating bookmarks, also with nested structures\n-  Checking the version of merged PDF files and setting the minimum in\n   the output PDF\n\nInstallation\n------------\n\nPrerequisites\n~~~~~~~~~~~~~\n\nThis program requires Python 3.6+.\n\nWindows\n^^^^^^^\n\nDownload and install from https://www.python.org/downloads/.\n\nMacOS X\n^^^^^^^\n\nThe best is to use `Homebrew <https://brew.sh/>`__ and install using\n\n.. code:: sh\n\n   brew install python\n\nLinux\n^^^^^\n\nInstall Python using your distribution\u2019s package manager. Usually the\npackage is named ``python3``.\n\nVirtual environment\n~~~~~~~~~~~~~~~~~~~\n\nIt is not strictly required but strongly advised to create a *virtual\nenvironment* for installing Python packages for a specific purpose.\n\nCreate one in any preferred location using\n\n.. code:: sh\n\n   virtualenv -p python3 pdfconfig\n\nThe last argument can also be changed if preferred. Then activate the\nnew environment:\n\n.. code:: sh\n\n   source pdfconfig/bin/activate\n\nInstalling this tool\n~~~~~~~~~~~~~~~~~~~~\n\n.. code:: sh\n\n   pip install pdf-config\n\nUsage\n-----\n\nConfiguration file\n~~~~~~~~~~~~~~~~~~\n\nA configuration file is set up in `YAML\nsyntax <https://en.wikipedia.org/wiki/YAML#Syntax>`__ with the following\ncomponents:\n\n.. code:: yaml\n\n   metadata:  # Optional\n     title: My document title\n     author: ME\n     # Additionally supported:\n     # creator, keywords, producer, subject\n\n     # Hard-coded version to set in the header. Set to 'auto' or leave out\n     # entirely for using the maximum version of all input documents. \n     version: '1.6'\n\n   paths:  # Optional\n     # List of paths to look up any files that do not contain a path\n     # specification. The current directory is checked first, then the following\n     # directories are checked in that order.\n     - ~/my-pdfs  # User home directory can be referred to.\n     - $ADDITIONAL_PDF_PATH  # Environment variables are also supported.\n\n   contents:  # The only required element\n     # Each list entry can contain any of the following:\n     # bookmark: The bookmark title\n     # document: The name (and path) of the input file.\n     # contents: An additional list of contents. Any bookmarks in this sub-structure\n     #   are placed under this bookmark, if present.\n    \n     - bookmark: First  \n       document: first.pdf\n     - bookmark: Second\n       contents:\n         - bookmark: Second doc 1\n           document: sd1.pdf\n         - bookmark: Second doc 2\n           document: sd2.pdf\n     - bookmark: Third\n       document: ~/pdfpath/third.pdf  # Relative and absolute paths are supported.\n       contents:\n         - bookmark: Third doc 1\n           document: $PDF_T1  # Environment variables are also expanded.\n         - bookmark: Third doc 2\n           document: $PDF_T2\n\nThe order of ``metadata``, ``paths``, and ``contents`` above is not\nrelevant. The resulting PDF bookmark structure will be\n\n::\n\n   |-First\n   |\n   |-Second\n   | |-Second doc 1\n   | |-Second doc 2\n   |\n   |-Third\n     |-Third doc 1\n     |-Third doc 2\n\n``Second`` points to the same page as ``Second doc 1``, whereas\n``Third`` and ``Third doc 1`` point to different pages, since ``Third``\ninserts pages on its own.\n\nStart\n~~~~~\n\nWith the configuration stored in ``sample.yaml`` and the PDF files in\nplace, start the merging process by running\n\n.. code:: sh\n\n   pdfconfig sample.yaml\n\nThis will merge the listed PDF files into ``sample.pdf``. For changing\nthe output name, simply append it to the end of the line; e.g.\u00a0run\n\n.. code:: sh\n\n   pdfconfig sample.yaml path/to/output.pdf\n\nIn Windows, use ``pdfconfig.exe``.\n\nFor more explanation, run\n\n.. code:: sh\n\n   pdfconfig -- --help", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/merll/pdf-config", "keywords": "pdf,yaml", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pdf-config", "package_url": "https://pypi.org/project/pdf-config/", "platform": "OS Independent", "project_url": "https://pypi.org/project/pdf-config/", "project_urls": {"Homepage": "https://github.com/merll/pdf-config"}, "release_url": "https://pypi.org/project/pdf-config/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Merges PDF files into one using a YAML configuration file.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple, easy-to-script tool for merging multiple PDF files into one\ndocument using a YAML configuration file.</p>\n<p>The program is written in Python, using the\n<a href=\"https://github.com/claird/PyPDF4\" rel=\"nofollow\">PyPDF4</a> library.</p>\n<div id=\"purpose\">\n<h2>Purpose</h2>\n<p>There are many good utilities for splitting and merging PDF files. For\ninstance, if you prefer one with a GUI, <a href=\"https://github.com/jeromerobert/pdfarranger\" rel=\"nofollow\">PDF\nArranger</a> is a good\nchoice. However, I had slightly different requirements: * Composing\nseveral documents from a similar set of files, but each time with slight\nmodifications. * Creating a structure of bookmarks, so that it is\neasier to navigate the larger document. * Original PDF features such as\nhyperlinks and the page orientation should remain intact.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Simple YAML configuration file structure</li>\n<li>Adding PDF metadata</li>\n<li>Creating bookmarks, also with nested structures</li>\n<li>Checking the version of merged PDF files and setting the minimum in\nthe output PDF</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"prerequisites\">\n<h3>Prerequisites</h3>\n<p>This program requires Python 3.6+.</p>\n<div id=\"windows\">\n<h4>Windows</h4>\n<p>Download and install from <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">https://www.python.org/downloads/</a>.</p>\n</div>\n<div id=\"macos-x\">\n<h4>MacOS X</h4>\n<p>The best is to use <a href=\"https://brew.sh/\" rel=\"nofollow\">Homebrew</a> and install using</p>\n<pre>brew install python\n</pre>\n</div>\n<div id=\"linux\">\n<h4>Linux</h4>\n<p>Install Python using your distribution\u2019s package manager. Usually the\npackage is named <tt>python3</tt>.</p>\n</div>\n</div>\n<div id=\"virtual-environment\">\n<h3>Virtual environment</h3>\n<p>It is not strictly required but strongly advised to create a <em>virtual\nenvironment</em> for installing Python packages for a specific purpose.</p>\n<p>Create one in any preferred location using</p>\n<pre>virtualenv -p python3 pdfconfig\n</pre>\n<p>The last argument can also be changed if preferred. Then activate the\nnew environment:</p>\n<pre><span class=\"nb\">source</span> pdfconfig/bin/activate\n</pre>\n</div>\n<div id=\"installing-this-tool\">\n<h3>Installing this tool</h3>\n<pre>pip install pdf-config\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"configuration-file\">\n<h3>Configuration file</h3>\n<p>A configuration file is set up in <a href=\"https://en.wikipedia.org/wiki/YAML#Syntax\" rel=\"nofollow\">YAML\nsyntax</a> with the following\ncomponents:</p>\n<pre><span class=\"nt\">metadata</span><span class=\"p\">:</span>  <span class=\"c1\"># Optional</span>\n  <span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">My document title</span>\n  <span class=\"nt\">author</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">ME</span>\n  <span class=\"c1\"># Additionally supported:</span>\n  <span class=\"c1\"># creator, keywords, producer, subject</span>\n\n  <span class=\"c1\"># Hard-coded version to set in the header. Set to 'auto' or leave out</span>\n  <span class=\"c1\"># entirely for using the maximum version of all input documents.</span>\n  <span class=\"nt\">version</span><span class=\"p\">:</span> <span class=\"s\">'1.6'</span>\n\n<span class=\"nt\">paths</span><span class=\"p\">:</span>  <span class=\"c1\"># Optional</span>\n  <span class=\"c1\"># List of paths to look up any files that do not contain a path</span>\n  <span class=\"c1\"># specification. The current directory is checked first, then the following</span>\n  <span class=\"c1\"># directories are checked in that order.</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">~/my-pdfs</span>  <span class=\"c1\"># User home directory can be referred to.</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">$ADDITIONAL_PDF_PATH</span>  <span class=\"c1\"># Environment variables are also supported.</span>\n\n<span class=\"nt\">contents</span><span class=\"p\">:</span>  <span class=\"c1\"># The only required element</span>\n  <span class=\"c1\"># Each list entry can contain any of the following:</span>\n  <span class=\"c1\"># bookmark: The bookmark title</span>\n  <span class=\"c1\"># document: The name (and path) of the input file.</span>\n  <span class=\"c1\"># contents: An additional list of contents. Any bookmarks in this sub-structure</span>\n  <span class=\"c1\">#   are placed under this bookmark, if present.</span>\n\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">bookmark</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">First</span>\n    <span class=\"nt\">document</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">first.pdf</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">bookmark</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Second</span>\n    <span class=\"nt\">contents</span><span class=\"p\">:</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"nt\">bookmark</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Second doc 1</span>\n        <span class=\"nt\">document</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">sd1.pdf</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"nt\">bookmark</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Second doc 2</span>\n        <span class=\"nt\">document</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">sd2.pdf</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">bookmark</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Third</span>\n    <span class=\"nt\">document</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">~/pdfpath/third.pdf</span>  <span class=\"c1\"># Relative and absolute paths are supported.</span>\n    <span class=\"nt\">contents</span><span class=\"p\">:</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"nt\">bookmark</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Third doc 1</span>\n        <span class=\"nt\">document</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">$PDF_T1</span>  <span class=\"c1\"># Environment variables are also expanded.</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"nt\">bookmark</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Third doc 2</span>\n        <span class=\"nt\">document</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">$PDF_T2</span>\n</pre>\n<p>The order of <tt>metadata</tt>, <tt>paths</tt>, and <tt>contents</tt> above is not\nrelevant. The resulting PDF bookmark structure will be</p>\n<pre>|-First\n|\n|-Second\n| |-Second doc 1\n| |-Second doc 2\n|\n|-Third\n  |-Third doc 1\n  |-Third doc 2\n</pre>\n<p><tt>Second</tt> points to the same page as <tt>Second doc 1</tt>, whereas\n<tt>Third</tt> and <tt>Third doc 1</tt> point to different pages, since <tt>Third</tt>\ninserts pages on its own.</p>\n</div>\n<div id=\"start\">\n<h3>Start</h3>\n<p>With the configuration stored in <tt>sample.yaml</tt> and the PDF files in\nplace, start the merging process by running</p>\n<pre>pdfconfig sample.yaml\n</pre>\n<p>This will merge the listed PDF files into <tt>sample.pdf</tt>. For changing\nthe output name, simply append it to the end of the line; e.g.\u00a0run</p>\n<pre>pdfconfig sample.yaml path/to/output.pdf\n</pre>\n<p>In Windows, use <tt>pdfconfig.exe</tt>.</p>\n<p>For more explanation, run</p>\n<pre>pdfconfig -- --help\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6670623, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9a779020dbb3b0b610488ca94e12164f", "sha256": "0bba7f391e1a8eed3d639878bdaabd06d63cb1db6ac6b74633fec27977938f21"}, "downloads": -1, "filename": "pdf-config-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9a779020dbb3b0b610488ca94e12164f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7559, "upload_time": "2020-02-20T21:04:00", "upload_time_iso_8601": "2020-02-20T21:04:00.638789Z", "url": "https://files.pythonhosted.org/packages/d1/70/86af2db447b438d17de49305dbe18f3bb36093a6893fbbc65ddbba9a5e2c/pdf-config-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9a779020dbb3b0b610488ca94e12164f", "sha256": "0bba7f391e1a8eed3d639878bdaabd06d63cb1db6ac6b74633fec27977938f21"}, "downloads": -1, "filename": "pdf-config-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9a779020dbb3b0b610488ca94e12164f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7559, "upload_time": "2020-02-20T21:04:00", "upload_time_iso_8601": "2020-02-20T21:04:00.638789Z", "url": "https://files.pythonhosted.org/packages/d1/70/86af2db447b438d17de49305dbe18f3bb36093a6893fbbc65ddbba9a5e2c/pdf-config-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:14 2020"}