{"info": {"author": "Ranjith M S", "author_email": "ranjithms523@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "\u00ef\u00bb\u00bf# musicgen\nmusicgen is a module for pre-processing audio and to prepare the dataset for neural networks in genarating music. Built on top of Music21 and youtube_dl\n### Features\n  - Download the songs,videos from URL\n  - Get the notes from music\n  - Prepare the dataset for neural networks\n\n### Installation\n\n\n\n```sh\n$ pip install musicgen\n```\n#### get_notes(path='*.mid')\nGet all the notes and chords from the midi files  \n##### Args:  \npath : path for the song with midi extension. \u00e2\u20ac\u02dc*.mid\u00e2\u20ac\u2122 by default which gets the note of all the songs in the current working directory.  \n##### Returns:  \nList of notes obtained from the midi file   \n#### download_song_with_url(url,audio_type='mp3',quality='192')\nDownloads the audio of a video present in the given video URL to current working directory.  \n##### Args:   \nurl : (string)  URL of a video  \naudio_type :(string)\"aac\", \"flac\", \"mp3\", \"m4a\", \"opus\", \"vorbis\", or \"wav\". \u00e2\u20ac\u02dcmp3\u00e2\u20ac\u2122 by default  \n#### create_midi(prediction_output,name='output')\nconvert the output from the prediction to notes and create a midi file from the notes in current working directory.  \n##### Args:   \nprediction_output : the output predictions of a trained model.  \nname : (string) name of the generated file. output by default.  \n#### prepare_sequences(notes, n_vocab,sequence_length = 100)\nPrepare the sequences used by the Neural Network  \n##### Args:  \nnotes : (list) notes of midi file   \nn_vocab : (int) number of unique notes  \nsequence_length : (int) number of time steps required. 100 by default.  \n##### Returns:  \nnetwork_input, network_output   \n\n#### download_video_with_url(url)\nDownloads the video from the given URL into current working directory.  \n##### Args:  \nurl : (string)  URL of a video  \n\n#### download_videos(path)\nDownloads the videos from the URL\u00e2\u20ac\u2122s present in a text file into current working directory.  \n##### Args:  \npath : (string)  path of a text file containing URL\u00e2\u20ac\u2122s  \n\n#### download_songs(path)\nDownloads the audio of videos from the URL\u00e2\u20ac\u2122s present in a text file into current working directory.  \n##### Args:  \npath : (string)  path of a text file containing URL\u00e2\u20ac\u2122s.  \n\n#### song_notes_to_pickle(path,output)\nsaves the notes of a midi file as a pickle object.  \n##### Args:  \npath : (string) path  of the songs    \noutput : (string) name of the pickle file.  \n\n#### generate_notes(model, network_input, pitchnames, n_vocab)\ngenerates the notes from the trained keras model  \n##### Args:  \nmodel : Trained keras model for prediction  \nnetwork_input : input to the network  \npitchnames : set of items in the notes. It is found using pitchnames = sorted(set(item for item in notes))  \nn_vocab : (int) number of unique notes  \n##### Returns:  \npredicted_output  \n\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/ranjith-ms/musicgen/archive/v0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ranjith-ms", "keywords": "LSTM,Sequence models,RNN,Neural network,Music generation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "musicgen", "package_url": "https://pypi.org/project/musicgen/", "platform": "", "project_url": "https://pypi.org/project/musicgen/", "project_urls": {"Download": "https://github.com/ranjith-ms/musicgen/archive/v0.1.tar.gz", "Homepage": "https://github.com/ranjith-ms"}, "release_url": "https://pypi.org/project/musicgen/0.0.1/", "requires_dist": ["youtube-dl", "music21", "numpy"], "requires_python": "", "summary": "A module for pre-processing steps in music generation", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>\u00ef\u00bb\u00bf# musicgen\nmusicgen is a module for pre-processing audio and to prepare the dataset for neural networks in genarating music. Built on top of Music21 and youtube_dl</p>\n<h3>Features</h3>\n<ul>\n<li>Download the songs,videos from URL</li>\n<li>Get the notes from music</li>\n<li>Prepare the dataset for neural networks</li>\n</ul>\n<h3>Installation</h3>\n<pre>$ pip install musicgen\n</pre>\n<h4>get_notes(path='*.mid')</h4>\n<p>Get all the notes and chords from the midi files</p>\n<h5>Args:</h5>\n<p>path : path for the song with midi extension. \u00e2\u20ac\u02dc*.mid\u00e2\u20ac\u2122 by default which gets the note of all the songs in the current working directory.</p>\n<h5>Returns:</h5>\n<p>List of notes obtained from the midi file</p>\n<h4>download_song_with_url(url,audio_type='mp3',quality='192')</h4>\n<p>Downloads the audio of a video present in the given video URL to current working directory.</p>\n<h5>Args:</h5>\n<p>url : (string)  URL of a video<br>\naudio_type :(string)\"aac\", \"flac\", \"mp3\", \"m4a\", \"opus\", \"vorbis\", or \"wav\". \u00e2\u20ac\u02dcmp3\u00e2\u20ac\u2122 by default</p>\n<h4>create_midi(prediction_output,name='output')</h4>\n<p>convert the output from the prediction to notes and create a midi file from the notes in current working directory.</p>\n<h5>Args:</h5>\n<p>prediction_output : the output predictions of a trained model.<br>\nname : (string) name of the generated file. output by default.</p>\n<h4>prepare_sequences(notes, n_vocab,sequence_length = 100)</h4>\n<p>Prepare the sequences used by the Neural Network</p>\n<h5>Args:</h5>\n<p>notes : (list) notes of midi file<br>\nn_vocab : (int) number of unique notes<br>\nsequence_length : (int) number of time steps required. 100 by default.</p>\n<h5>Returns:</h5>\n<p>network_input, network_output</p>\n<h4>download_video_with_url(url)</h4>\n<p>Downloads the video from the given URL into current working directory.</p>\n<h5>Args:</h5>\n<p>url : (string)  URL of a video</p>\n<h4>download_videos(path)</h4>\n<p>Downloads the videos from the URL\u00e2\u20ac\u2122s present in a text file into current working directory.</p>\n<h5>Args:</h5>\n<p>path : (string)  path of a text file containing URL\u00e2\u20ac\u2122s</p>\n<h4>download_songs(path)</h4>\n<p>Downloads the audio of videos from the URL\u00e2\u20ac\u2122s present in a text file into current working directory.</p>\n<h5>Args:</h5>\n<p>path : (string)  path of a text file containing URL\u00e2\u20ac\u2122s.</p>\n<h4>song_notes_to_pickle(path,output)</h4>\n<p>saves the notes of a midi file as a pickle object.</p>\n<h5>Args:</h5>\n<p>path : (string) path  of the songs<br>\noutput : (string) name of the pickle file.</p>\n<h4>generate_notes(model, network_input, pitchnames, n_vocab)</h4>\n<p>generates the notes from the trained keras model</p>\n<h5>Args:</h5>\n<p>model : Trained keras model for prediction<br>\nnetwork_input : input to the network<br>\npitchnames : set of items in the notes. It is found using pitchnames = sorted(set(item for item in notes))<br>\nn_vocab : (int) number of unique notes</p>\n<h5>Returns:</h5>\n<p>predicted_output</p>\n\n          </div>"}, "last_serial": 5727077, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6d4e57ea95338035db5d1329403c2f10", "sha256": "d7b12f62a44b611549d94e7b7ab1ea0fb36fd956d3585e88948d0d23c38e7a42"}, "downloads": -1, "filename": "musicgen-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6d4e57ea95338035db5d1329403c2f10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5724, "upload_time": "2019-08-25T13:39:53", "upload_time_iso_8601": "2019-08-25T13:39:53.825443Z", "url": "https://files.pythonhosted.org/packages/5a/95/351d059aff63c9c1fee56a77098bd1b515ecbf15b0a84af8064274a59f97/musicgen-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88bb2386b352023355c27fa0e5e96987", "sha256": "908ccf822537857d569435ed00491ccc6d59a9cf9d2b5548fc11aa0889519fe9"}, "downloads": -1, "filename": "musicgen-0.0.1.tar.gz", "has_sig": false, "md5_digest": "88bb2386b352023355c27fa0e5e96987", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4563, "upload_time": "2019-08-25T13:39:56", "upload_time_iso_8601": "2019-08-25T13:39:56.130673Z", "url": "https://files.pythonhosted.org/packages/5d/86/858590baf8d0b06ef87fc5e3a6be0b71a6c59c316f8de535a1aada8eacfa/musicgen-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6d4e57ea95338035db5d1329403c2f10", "sha256": "d7b12f62a44b611549d94e7b7ab1ea0fb36fd956d3585e88948d0d23c38e7a42"}, "downloads": -1, "filename": "musicgen-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6d4e57ea95338035db5d1329403c2f10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5724, "upload_time": "2019-08-25T13:39:53", "upload_time_iso_8601": "2019-08-25T13:39:53.825443Z", "url": "https://files.pythonhosted.org/packages/5a/95/351d059aff63c9c1fee56a77098bd1b515ecbf15b0a84af8064274a59f97/musicgen-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88bb2386b352023355c27fa0e5e96987", "sha256": "908ccf822537857d569435ed00491ccc6d59a9cf9d2b5548fc11aa0889519fe9"}, "downloads": -1, "filename": "musicgen-0.0.1.tar.gz", "has_sig": false, "md5_digest": "88bb2386b352023355c27fa0e5e96987", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4563, "upload_time": "2019-08-25T13:39:56", "upload_time_iso_8601": "2019-08-25T13:39:56.130673Z", "url": "https://files.pythonhosted.org/packages/5d/86/858590baf8d0b06ef87fc5e3a6be0b71a6c59c316f8de535a1aada8eacfa/musicgen-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:09 2020"}