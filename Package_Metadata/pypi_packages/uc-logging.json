{"info": {"author": "Eduard S. Markelov", "author_email": "markeloveduard@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# uc_logging  \nA set of classes and functions that extend the log package.  \n\nIt is part of the Unicon project.\n\nhttps://unicon.10k.me\n\n## Usage:\n\n##### Install\n```sh\npip install --user uc-logging\n```\n##### and use\n\n```python\nimport uc_logging\n```\n\n## Functions:\n\n\n\n## Classes:\n\n**Formatter(default=logging.BASIC_FORMAT, formats=None)**\n\nMulti formatter.\nAdds the ability to format log messages based on their level.\n\nFormats is a dict where key is a level and value it's a format.\n\n**UnbufferedStreamHandler(stream)**\n\nUnbuffered stream handler.\n\nWhen multiprocessing queue is used (for example), standard output may stuck. Common flushing not working. Using -u option not guaranteed (it helps). So write directly.\n\n## Example:\n\n```python\nimport logging\nimport uc_logging\n\nformat_standard_a = \"%(asctime)s [%(levelname)s] - %(message)s\"\nformat_standard_d = \"%(asctime)s [%(levelname)s] %(filename)s:%(lineno)d - %(message)s\"\n\nlogger = logging.getLogger(\"formatter_test\")\nlogger.handlers.clear()\nlogger.setLevel(logging.DEBUG)\n# Set multi formatter\nformatter = uc_logging.Formatter(default=format_standard_a, formats={logging.DEBUG: format_standard_d})\nhandler = logging.StreamHandler()\nhandler.setFormatter(formatter)\nlogger.addHandler(handler)\n\nlogger.info(\"TEST FORMATTER.\")\nlogger.debug(\"TEST FORMATTER.\")\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dentist128/uc_logging", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "uc-logging", "package_url": "https://pypi.org/project/uc-logging/", "platform": "", "project_url": "https://pypi.org/project/uc-logging/", "project_urls": {"Homepage": "https://github.com/dentist128/uc_logging"}, "release_url": "https://pypi.org/project/uc-logging/0.0.2/", "requires_dist": null, "requires_python": ">=3.4, <4", "summary": "A set of classes and functions that extend the log package.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>uc_logging</h1>\n<p>A set of classes and functions that extend the log package.</p>\n<p>It is part of the Unicon project.</p>\n<p><a href=\"https://unicon.10k.me\" rel=\"nofollow\">https://unicon.10k.me</a></p>\n<h2>Usage:</h2>\n<h5>Install</h5>\n<pre>pip install --user uc-logging\n</pre>\n<h5>and use</h5>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">uc_logging</span>\n</pre>\n<h2>Functions:</h2>\n<h2>Classes:</h2>\n<p><strong>Formatter(default=logging.BASIC_FORMAT, formats=None)</strong></p>\n<p>Multi formatter.\nAdds the ability to format log messages based on their level.</p>\n<p>Formats is a dict where key is a level and value it's a format.</p>\n<p><strong>UnbufferedStreamHandler(stream)</strong></p>\n<p>Unbuffered stream handler.</p>\n<p>When multiprocessing queue is used (for example), standard output may stuck. Common flushing not working. Using -u option not guaranteed (it helps). So write directly.</p>\n<h2>Example:</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uc_logging</span>\n\n<span class=\"n\">format_standard_a</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"si\">%(asctime)s</span><span class=\"s2\"> [</span><span class=\"si\">%(levelname)s</span><span class=\"s2\">] - </span><span class=\"si\">%(message)s</span><span class=\"s2\">\"</span>\n<span class=\"n\">format_standard_d</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"si\">%(asctime)s</span><span class=\"s2\"> [</span><span class=\"si\">%(levelname)s</span><span class=\"s2\">] </span><span class=\"si\">%(filename)s</span><span class=\"s2\">:</span><span class=\"si\">%(lineno)d</span><span class=\"s2\"> - </span><span class=\"si\">%(message)s</span><span class=\"s2\">\"</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s2\">\"formatter_test\"</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">handlers</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n<span class=\"c1\"># Set multi formatter</span>\n<span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">uc_logging</span><span class=\"o\">.</span><span class=\"n\">Formatter</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">format_standard_a</span><span class=\"p\">,</span> <span class=\"n\">formats</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">:</span> <span class=\"n\">format_standard_d</span><span class=\"p\">})</span>\n<span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">StreamHandler</span><span class=\"p\">()</span>\n<span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">setFormatter</span><span class=\"p\">(</span><span class=\"n\">formatter</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">handler</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"TEST FORMATTER.\"</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">\"TEST FORMATTER.\"</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7151058, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7cdb587cbd9d386b0cd7026093c741c9", "sha256": "d93bedbfd3647cffd8cdfcd34a2845469dd3c95cfb4b9320c881c8fb76f25032"}, "downloads": -1, "filename": "uc_logging-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7cdb587cbd9d386b0cd7026093c741c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 15153, "upload_time": "2020-05-02T08:41:14", "upload_time_iso_8601": "2020-05-02T08:41:14.933871Z", "url": "https://files.pythonhosted.org/packages/6a/8b/db0b953db7eaa5a6819ce644267e148d6d2bee3f74c7ef8ae295405c074c/uc_logging-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2589bb350a4e747107b6fbc0f819b86a", "sha256": "caaf7f977cd5ef5679061743a9ad6c0c1dfaf7d5519d6d668b46257914068611"}, "downloads": -1, "filename": "uc_logging-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2589bb350a4e747107b6fbc0f819b86a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4, <4", "size": 2805, "upload_time": "2020-05-02T08:41:17", "upload_time_iso_8601": "2020-05-02T08:41:17.068022Z", "url": "https://files.pythonhosted.org/packages/a1/03/103430ccf53551414cf93e4f54a9aa5f74793d13e4bdee5a7b4b65379104/uc_logging-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "43d33773b458d6dfd502c3fd65d12990", "sha256": "b19bd2494a946f3664c64548dba0f42ede4b06178594315bbb72b524f775f302"}, "downloads": -1, "filename": "uc_logging-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "43d33773b458d6dfd502c3fd65d12990", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 15146, "upload_time": "2020-05-02T11:34:43", "upload_time_iso_8601": "2020-05-02T11:34:43.561334Z", "url": "https://files.pythonhosted.org/packages/45/fc/0e0d3854523a9fd4e00674a13fbf928361d13b29cb1715efd243ff322296/uc_logging-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "993f42d6bc647f9b91cafbcb667cab1c", "sha256": "a24907b27c0edee95c5f823b70537bb85df5e127a745e3b08d930124232ffc8a"}, "downloads": -1, "filename": "uc_logging-0.0.2.tar.gz", "has_sig": false, "md5_digest": "993f42d6bc647f9b91cafbcb667cab1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4, <4", "size": 2771, "upload_time": "2020-05-02T11:34:44", "upload_time_iso_8601": "2020-05-02T11:34:44.588016Z", "url": "https://files.pythonhosted.org/packages/2b/59/d8d2a4bd04b19720d15a97acd2349c1195eccb6fe507c83dda340aec3f24/uc_logging-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "43d33773b458d6dfd502c3fd65d12990", "sha256": "b19bd2494a946f3664c64548dba0f42ede4b06178594315bbb72b524f775f302"}, "downloads": -1, "filename": "uc_logging-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "43d33773b458d6dfd502c3fd65d12990", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 15146, "upload_time": "2020-05-02T11:34:43", "upload_time_iso_8601": "2020-05-02T11:34:43.561334Z", "url": "https://files.pythonhosted.org/packages/45/fc/0e0d3854523a9fd4e00674a13fbf928361d13b29cb1715efd243ff322296/uc_logging-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "993f42d6bc647f9b91cafbcb667cab1c", "sha256": "a24907b27c0edee95c5f823b70537bb85df5e127a745e3b08d930124232ffc8a"}, "downloads": -1, "filename": "uc_logging-0.0.2.tar.gz", "has_sig": false, "md5_digest": "993f42d6bc647f9b91cafbcb667cab1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4, <4", "size": 2771, "upload_time": "2020-05-02T11:34:44", "upload_time_iso_8601": "2020-05-02T11:34:44.588016Z", "url": "https://files.pythonhosted.org/packages/2b/59/d8d2a4bd04b19720d15a97acd2349c1195eccb6fe507c83dda340aec3f24/uc_logging-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:42:09 2020"}