{"info": {"author": "Slawomir Ehlert", "author_email": "slafs.e@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "==================\ndjango-compass2\n==================\n\n**django-compass2** is a re-usable Django application which provides an easy way of\ncompiling your `Compass`_ or `Sass`_ based stylesheets to CSS. Its main\nbenefit is Django settings integration, so you don't need lots of ``compass.rb``\nconfiguration files lying around (especially with multiple deployments, et\ncetera). Other than that, it's simply a proxy to the ``compass`` command-line\napplication.\n\n.. _Compass: http://compass-style.org/\n.. _Sass:    http://sass-lang.com\n\n\nInstallation and Setup\n============================\n\n*   You'll need to install `Compass`_; this is a Ruby library, so use the ``gem``\n    utility (installed out-of-the-box on most systems)::\n\n        $ [sudo] gem install compass --pre\n\n*   Then, just use ``pip`` or ``easy_install`` to install ``django-compass2`` (the\n    dependencies will be handled automatically)::\n\n        $ pip install django-compass2 # OR\n        $ easy_install django-compass2\n        \n*   Add ``'djcompass'`` to your ``INSTALLED_APPS`` setting.\n\n*   In your ``settings.py`` file, add the necessary settings. Take a look at the\n    configuration reference below for more information, but here's a quick\n    example::\n    \n        COMPASS_INPUT = PROJECT_ROOT + 'media/sass'\n        COMPASS_OUTPUT = PROJECT_ROOT + 'media/css'\n        COMPASS_STYLE = 'compact'\n        COMPASS_REQUIRES = (\n            'ninesixty',  # 960.gs Grid System\n        )\n\n*   You can now compile your Sass with the management command::\n\n        $ python manage.py compass\n\n\nUsage\n============\n\nThe command-line interface is very simple. \nTo see available options and commands try::\n\n    $ python manage.py compass --help\n\nBasically the syntax is as simple as::\n\n    $ python manage.py compass <primary_command>\n\nJust compile your Sass into CSS::\n\n    $ python manage.py compass\n       exists media/css\n    unchanged media/sass/style.sass\n\nThe above command is more or less equivalent to invoking::\n\n    compass --sass-dir media/sass --css-dir media/css --output-style compact\n\nMonitor your Sass continuously::\n\n    $ python manage.py compass watch\n    >>> Compass is watching for changes. Press Ctrl-C to Stop.\n    >>> Change detected to: .../media/sass/style.sass\n    overwrite media/css/style.css\n    ...\n\nWhich is something like::\n\n    compass --sass-dir media/sass --css-dir media/css --output-style compact --watch\n\nConfiguration Reference\n==========================\n\nDjango Settings\n-----------------\n\nThese should go in your ``settings.py`` file.\n\n\nRequired settings\n```````````````````````\n\n*   ``COMPASS_INPUT``: The directory where you keep your Sass/Scss stylesheets.\n\n*   ``COMPASS_OUTPUT``: The directory to which Compass should output CSS.\n\nNote that neither of these should have trailing slashes. They may be absolute or\nrelative paths; if relative, they will be resolved against the current working\ndirectory.\n\n\nOptional settings\n````````````````````````\n\n*   ``COMPASS_EXECUTABLE``: Path for your compass binary. Defaults to \"compass\"\n\n*   ``COMPASS_STYLE``: One of ``'nested'``, ``'expanded'``, ``'compact'`` or\n    ``'compressed'``, specifying the style of the produced CSS output. The default\n    is ``'compact'``.\n\n*   ``COMPASS_REQUIRES``: A sequence of Ruby libraries to ``require`` before running\n    Compass commands.\n\n*   ``COMPASS_IMAGE_DIR``: The directory where images are stored (used for\n    Compass's asset URL helpers).\n\n*   ``COMPASS_SCRIPT_DIR``: The directory containing your JavaScript files (used\n    for Compass's asset URL helpers).\n\n*   ``COMPASS_RELATIVE_URLS``: Boolean specifying whether or not Compass's asset\n    URL helpers should generate relative URLs.\n\n\nCommand-line Options\n------------------------\n\nThese options may be passed at runtime to affect how Compass is run.\n\n*   ``-t``, ``--trace``: Print a full stacktrace on Compass errors.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/slafs/django-compass2", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-compass2", "package_url": "https://pypi.org/project/django-compass2/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-compass2/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bitbucket.org/slafs/django-compass2"}, "release_url": "https://pypi.org/project/django-compass2/0.2/", "requires_dist": null, "requires_python": null, "summary": "Simple compilation of Compass projects for Django.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>django-compass2</strong> is a re-usable Django application which provides an easy way of\ncompiling your <a href=\"http://compass-style.org/\" rel=\"nofollow\">Compass</a> or <a href=\"http://sass-lang.com\" rel=\"nofollow\">Sass</a> based stylesheets to CSS. Its main\nbenefit is Django settings integration, so you don\u2019t need lots of <tt>compass.rb</tt>\nconfiguration files lying around (especially with multiple deployments, et\ncetera). Other than that, it\u2019s simply a proxy to the <tt>compass</tt> command-line\napplication.</p>\n<div id=\"installation-and-setup\">\n<h2>Installation and Setup</h2>\n<ul>\n<li><p>You\u2019ll need to install <a href=\"http://compass-style.org/\" rel=\"nofollow\">Compass</a>; this is a Ruby library, so use the <tt>gem</tt>\nutility (installed out-of-the-box on most systems):</p>\n<pre>$ [sudo] gem install compass --pre\n</pre>\n</li>\n<li><p>Then, just use <tt>pip</tt> or <tt>easy_install</tt> to install <tt><span class=\"pre\">django-compass2</span></tt> (the\ndependencies will be handled automatically):</p>\n<pre>$ pip install django-compass2 # OR\n$ easy_install django-compass2\n</pre>\n</li>\n<li><p>Add <tt>'djcompass'</tt> to your <tt>INSTALLED_APPS</tt> setting.</p>\n</li>\n<li><p>In your <tt>settings.py</tt> file, add the necessary settings. Take a look at the\nconfiguration reference below for more information, but here\u2019s a quick\nexample:</p>\n<pre>COMPASS_INPUT = PROJECT_ROOT + 'media/sass'\nCOMPASS_OUTPUT = PROJECT_ROOT + 'media/css'\nCOMPASS_STYLE = 'compact'\nCOMPASS_REQUIRES = (\n    'ninesixty',  # 960.gs Grid System\n)\n</pre>\n</li>\n<li><p>You can now compile your Sass with the management command:</p>\n<pre>$ python manage.py compass\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The command-line interface is very simple.\nTo see available options and commands try:</p>\n<pre>$ python manage.py compass --help\n</pre>\n<p>Basically the syntax is as simple as:</p>\n<pre>$ python manage.py compass &lt;primary_command&gt;\n</pre>\n<p>Just compile your Sass into CSS:</p>\n<pre>$ python manage.py compass\n   exists media/css\nunchanged media/sass/style.sass\n</pre>\n<p>The above command is more or less equivalent to invoking:</p>\n<pre>compass --sass-dir media/sass --css-dir media/css --output-style compact\n</pre>\n<p>Monitor your Sass continuously:</p>\n<pre>$ python manage.py compass watch\n&gt;&gt;&gt; Compass is watching for changes. Press Ctrl-C to Stop.\n&gt;&gt;&gt; Change detected to: .../media/sass/style.sass\noverwrite media/css/style.css\n...\n</pre>\n<p>Which is something like:</p>\n<pre>compass --sass-dir media/sass --css-dir media/css --output-style compact --watch\n</pre>\n</div>\n<div id=\"configuration-reference\">\n<h2>Configuration Reference</h2>\n<div id=\"django-settings\">\n<h3>Django Settings</h3>\n<p>These should go in your <tt>settings.py</tt> file.</p>\n<div id=\"required-settings\">\n<h4>Required settings</h4>\n<ul>\n<li><tt>COMPASS_INPUT</tt>: The directory where you keep your Sass/Scss stylesheets.</li>\n<li><tt>COMPASS_OUTPUT</tt>: The directory to which Compass should output CSS.</li>\n</ul>\n<p>Note that neither of these should have trailing slashes. They may be absolute or\nrelative paths; if relative, they will be resolved against the current working\ndirectory.</p>\n</div>\n<div id=\"optional-settings\">\n<h4>Optional settings</h4>\n<ul>\n<li><tt>COMPASS_EXECUTABLE</tt>: Path for your compass binary. Defaults to \u201ccompass\u201d</li>\n<li><tt>COMPASS_STYLE</tt>: One of <tt>'nested'</tt>, <tt>'expanded'</tt>, <tt>'compact'</tt> or\n<tt>'compressed'</tt>, specifying the style of the produced CSS output. The default\nis <tt>'compact'</tt>.</li>\n<li><tt>COMPASS_REQUIRES</tt>: A sequence of Ruby libraries to <tt>require</tt> before running\nCompass commands.</li>\n<li><tt>COMPASS_IMAGE_DIR</tt>: The directory where images are stored (used for\nCompass\u2019s asset URL helpers).</li>\n<li><tt>COMPASS_SCRIPT_DIR</tt>: The directory containing your JavaScript files (used\nfor Compass\u2019s asset URL helpers).</li>\n<li><tt>COMPASS_RELATIVE_URLS</tt>: Boolean specifying whether or not Compass\u2019s asset\nURL helpers should generate relative URLs.</li>\n</ul>\n</div>\n</div>\n<div id=\"command-line-options\">\n<h3>Command-line Options</h3>\n<p>These options may be passed at runtime to affect how Compass is run.</p>\n<ul>\n<li><tt><span class=\"pre\">-t</span></tt>, <tt><span class=\"pre\">--trace</span></tt>: Print a full stacktrace on Compass errors.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 733305, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "acae3a61d3d2a7335dc4104b4deb5338", "sha256": "ffc1dddbc52708e9294dd3f14c2d6997fb640b56abe0d716835c1a951a03e013"}, "downloads": -1, "filename": "django-compass2-0.1.tar.gz", "has_sig": false, "md5_digest": "acae3a61d3d2a7335dc4104b4deb5338", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8911, "upload_time": "2012-04-02T23:00:36", "upload_time_iso_8601": "2012-04-02T23:00:36.167052Z", "url": "https://files.pythonhosted.org/packages/80/f1/6dcb93f6a8c5f59b915cba10441ff0f28ac04efd1f3681f79a0295726932/django-compass2-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "a7cf6a285e5e3fbd8869302dba9f6f8c", "sha256": "885f48b5ce50c4b1d4b739c8b25d631dc9b7908eaa0bfb33c5d7bb33d25021f0"}, "downloads": -1, "filename": "django-compass2-0.2.tar.gz", "has_sig": false, "md5_digest": "a7cf6a285e5e3fbd8869302dba9f6f8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8918, "upload_time": "2012-04-04T18:46:46", "upload_time_iso_8601": "2012-04-04T18:46:46.595888Z", "url": "https://files.pythonhosted.org/packages/88/9a/12a63ece523843da9da61d6fcb5a0fd33904c04f6af2626b8ce7def9db35/django-compass2-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a7cf6a285e5e3fbd8869302dba9f6f8c", "sha256": "885f48b5ce50c4b1d4b739c8b25d631dc9b7908eaa0bfb33c5d7bb33d25021f0"}, "downloads": -1, "filename": "django-compass2-0.2.tar.gz", "has_sig": false, "md5_digest": "a7cf6a285e5e3fbd8869302dba9f6f8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8918, "upload_time": "2012-04-04T18:46:46", "upload_time_iso_8601": "2012-04-04T18:46:46.595888Z", "url": "https://files.pythonhosted.org/packages/88/9a/12a63ece523843da9da61d6fcb5a0fd33904c04f6af2626b8ce7def9db35/django-compass2-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:56 2020"}