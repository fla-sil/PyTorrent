{"info": {"author": "Guy Rutenberg", "author_email": "guyrutenberg@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)"], "description": "========\r\nradio.py\r\n========\r\nCommand-line frontend for mplayer designed to make listening to online\r\nradio easy.\r\n\r\nHomepage: http://www.guyrutenberg.com/radiopy\r\n\r\nFeatures\r\n========\r\n\r\n * Allows you to easily play your favorite online radio stations.\r\n * Adding new stations to radio.py is very simple.\r\n * Record radio streams.\r\n * Sleep and Wake-Up features.\r\n * Search TuneIn for new stations.\r\n\r\nInstallation\r\n============\r\nTo install ``radio.py``, use pip::\r\n\r\n  pip install radiopy\r\n\r\nThe latest development version is available via git from SourceForge_::\r\n\r\n  pip install git+http://git.code.sf.net/p/radiopy/code\r\n\r\nSee the `pip documentation`_ for more details.\r\n\r\n.. _SourceForge: https://www.sourceforge.net/projects/radiopy\r\n.. _`pip documentation`: http://www.pip-installer.org/en/latest/usage.html\r\n\r\n\r\nUsage\r\n=====\r\n::\r\n\r\n  usage: radio.py [OPTIONS] station_name\r\n  \r\n  positional arguments:\r\n    station_name          Station name\r\n  \r\n  optional arguments:\r\n    -h, --help            show this help message and exit\r\n    -s MIN, --sleep MIN   go to sleep after MIN minutes\r\n    -w MIN, --wake-up MIN\r\n                          wake up and start playing after MIN minutes\r\n    -l, --list            show a list of known radio stations and their homepage\r\n    -c SIZE, --cache SIZE\r\n                          set the size of the cache in KBytes [default: 320]\r\n    -r FILE, --record FILE\r\n                          record the stream as mp3 and save it to FILE\r\n    --random              let radio.py select a random station for you\r\n    -v, --verbose         Verbose mode. Multiple -v options increase the\r\n                          verbosity\r\n    -q, --quiet           Quiet mode. Multiple -q options decrease the\r\n                          verbosity.\r\n    --version             show program's version number and exit\r\n\r\nListening\r\n---------\r\nTo listen to a station just pass it's name to ``radio.py``::\r\n\r\n  radio.py BBC World Service\r\n\r\nThe list of supported can be viewed using ``--list`` flag. Additionally, ``radio.py``\r\nwill search TuneIn when given an unkown station.\r\n\r\n\r\nWakeup and Sleep\r\n----------------\r\n\r\nYou can use the ``--wake-up`` and ``--sleep`` to make ``radio.py`` start to play\r\nafter specified number of minutes and shut itself down after specified number\r\nof minutes accordingly::\r\n\r\n  radio.py --wake-up 30 BBC World Service\r\n  radio.py --sleep 60 BBC World Service\r\n\r\n\r\nRecording\r\n---------\r\n``radio.py`` also supports recording streams to file::\r\n\r\n  radio.py --record news BBC World Service\r\n\r\nThis dumps the raw stream to a file named ``news``. The exact version of the\r\nfile depends on the exact stream. The dumped stream using can be played using\r\n``mplayer``. You can later use ``avconv`` (or ``ffmpeg``) to converted the\r\ndumped stream to any format that suits you.\r\n\r\nThis option can also be combined with the ``--sleep`` and ``--wake-up`` flags\r\nto time the recording.\r\n\r\nFiles\r\n=====\r\n\r\n``radio.py`` comes with a builtin list of stations. If you want to add new stations\r\n(or override existing ones) you can add them to ``/etc/radiopy`` (global\r\nconfiguration) or to ``~/.radiopy`` (per-user). The format is::\r\n\r\n  [BBC World Service News]\r\n  home: http://bbcworldservice.com/\r\n  stream: http://www.bbc.co.uk/worldservice/meta/tx/nb/live/ennws.pls\r\n\r\nAuthors\r\n=======\r\n* Author: `Guy Rutenberg`_\r\n\r\n.. _`Guy Rutenberg`: http://www.guyrutenberg.com", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.guyrutenberg.com/radiopy", "keywords": "", "license": "GPLv2+", "maintainer": "", "maintainer_email": "", "name": "radiopy", "package_url": "https://pypi.org/project/radiopy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/radiopy/", "project_urls": {"Homepage": "http://www.guyrutenberg.com/radiopy"}, "release_url": "https://pypi.org/project/radiopy/0.6/", "requires_dist": null, "requires_python": null, "summary": "An interface for mplayer aimed at listening to streaming radio.", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Command-line frontend for mplayer designed to make listening to online\nradio easy.</p>\n<p>Homepage: <a href=\"http://www.guyrutenberg.com/radiopy\" rel=\"nofollow\">http://www.guyrutenberg.com/radiopy</a></p>\n<div id=\"features\">\n<h2>Features</h2>\n<blockquote>\n<ul>\n<li>Allows you to easily play your favorite online radio stations.</li>\n<li>Adding new stations to radio.py is very simple.</li>\n<li>Record radio streams.</li>\n<li>Sleep and Wake-Up features.</li>\n<li>Search TuneIn for new stations.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install <tt>radio.py</tt>, use pip:</p>\n<pre>pip install radiopy\n</pre>\n<p>The latest development version is available via git from <a href=\"https://www.sourceforge.net/projects/radiopy\" rel=\"nofollow\">SourceForge</a>:</p>\n<pre>pip install git+http://git.code.sf.net/p/radiopy/code\n</pre>\n<p>See the <a href=\"http://www.pip-installer.org/en/latest/usage.html\" rel=\"nofollow\">pip documentation</a> for more details.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>usage: radio.py [OPTIONS] station_name\n\npositional arguments:\n  station_name          Station name\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s MIN, --sleep MIN   go to sleep after MIN minutes\n  -w MIN, --wake-up MIN\n                        wake up and start playing after MIN minutes\n  -l, --list            show a list of known radio stations and their homepage\n  -c SIZE, --cache SIZE\n                        set the size of the cache in KBytes [default: 320]\n  -r FILE, --record FILE\n                        record the stream as mp3 and save it to FILE\n  --random              let radio.py select a random station for you\n  -v, --verbose         Verbose mode. Multiple -v options increase the\n                        verbosity\n  -q, --quiet           Quiet mode. Multiple -q options decrease the\n                        verbosity.\n  --version             show program's version number and exit\n</pre>\n<div id=\"listening\">\n<h3>Listening</h3>\n<p>To listen to a station just pass it\u2019s name to <tt>radio.py</tt>:</p>\n<pre>radio.py BBC World Service\n</pre>\n<p>The list of supported can be viewed using <tt><span class=\"pre\">--list</span></tt> flag. Additionally, <tt>radio.py</tt>\nwill search TuneIn when given an unkown station.</p>\n</div>\n<div id=\"wakeup-and-sleep\">\n<h3>Wakeup and Sleep</h3>\n<p>You can use the <tt><span class=\"pre\">--wake-up</span></tt> and <tt><span class=\"pre\">--sleep</span></tt> to make <tt>radio.py</tt> start to play\nafter specified number of minutes and shut itself down after specified number\nof minutes accordingly:</p>\n<pre>radio.py --wake-up 30 BBC World Service\nradio.py --sleep 60 BBC World Service\n</pre>\n</div>\n<div id=\"recording\">\n<h3>Recording</h3>\n<p><tt>radio.py</tt> also supports recording streams to file:</p>\n<pre>radio.py --record news BBC World Service\n</pre>\n<p>This dumps the raw stream to a file named <tt>news</tt>. The exact version of the\nfile depends on the exact stream. The dumped stream using can be played using\n<tt>mplayer</tt>. You can later use <tt>avconv</tt> (or <tt>ffmpeg</tt>) to converted the\ndumped stream to any format that suits you.</p>\n<p>This option can also be combined with the <tt><span class=\"pre\">--sleep</span></tt> and <tt><span class=\"pre\">--wake-up</span></tt> flags\nto time the recording.</p>\n</div>\n</div>\n<div id=\"files\">\n<h2>Files</h2>\n<p><tt>radio.py</tt> comes with a builtin list of stations. If you want to add new stations\n(or override existing ones) you can add them to <tt>/etc/radiopy</tt> (global\nconfiguration) or to <tt><span class=\"pre\">~/.radiopy</span></tt> (per-user). The format is:</p>\n<pre>[BBC World Service News]\nhome: http://bbcworldservice.com/\nstream: http://www.bbc.co.uk/worldservice/meta/tx/nb/live/ennws.pls\n</pre>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li>Author: <a href=\"http://www.guyrutenberg.com\" rel=\"nofollow\">Guy Rutenberg</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1896902, "releases": {"0.5": [], "0.6": [{"comment_text": "", "digests": {"md5": "dc6509705f105702a12b3652d32a5290", "sha256": "062af9228b43c0e8d07f15f4dd0a4de755189a49f67ce9404f20db88fa8213a4"}, "downloads": -1, "filename": "radiopy-0.6.tar.gz", "has_sig": false, "md5_digest": "dc6509705f105702a12b3652d32a5290", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18519, "upload_time": "2016-01-09T20:40:52", "upload_time_iso_8601": "2016-01-09T20:40:52.525273Z", "url": "https://files.pythonhosted.org/packages/b4/d8/c56cb77c74b84fa9edae6365582a840a71dd6969322dcfc198451637f94b/radiopy-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dc6509705f105702a12b3652d32a5290", "sha256": "062af9228b43c0e8d07f15f4dd0a4de755189a49f67ce9404f20db88fa8213a4"}, "downloads": -1, "filename": "radiopy-0.6.tar.gz", "has_sig": false, "md5_digest": "dc6509705f105702a12b3652d32a5290", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18519, "upload_time": "2016-01-09T20:40:52", "upload_time_iso_8601": "2016-01-09T20:40:52.525273Z", "url": "https://files.pythonhosted.org/packages/b4/d8/c56cb77c74b84fa9edae6365582a840a71dd6969322dcfc198451637f94b/radiopy-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:59 2020"}