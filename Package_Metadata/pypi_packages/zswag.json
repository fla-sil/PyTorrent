{"info": {"author": "Klebert Engineering", "author_email": "j.birkner@klebert-engineering.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Zswag\n\nConvenience functionality to create python modules from zserio services at warp speed.\nTranslate/verify Zserio services to/with OpenAPI/Swagger and serve them in Flask/Connexion WSGI apps.\n\n## Installation\n\nJust run\n\n```bash\npip3 install zswag\n```\n\nAlternatively, clone this repository, and run\n\n```bash\npip3 install -e .\n```\n\n## Creating a Swagger service from zserio\n\n`ZserioSwaggerApp` gives you the power to marry a user-written app controller\nwith a zserio-generated app server class (argument parser/response serialiser)\nand a fitting Swagger OpenAPI spec.\n\n**Example**\n\n```py\nimport zswag\nimport zserio\nimport my.app.controller\n\nzserio.generate(\"myapp/service.zs\", \"myapp\")\nfrom myapp.service import Service\n\n# The OpenApi argument `yaml_path=...` is optional\napp = zswag.ZserioSwaggerApp(my.app.controller, Service)\n```\n\nHere, the API endpoints are routed to `my/app/controller.py`,\nwhich might look as follows:\n\n```py\n# Written by you\ndef myApi(request):\n    return \"response\"\n\n# Injected by ZserioSwaggerApp\n# _service = Service()\n# _service.myApi = lambda request: _service._myApiMethod(request)\n# _service._myApiImpl = my.app.controller.myApi\n```\n\n**Note:** The server is currently generated such that the\nzserio RPC method parameter is expected to be a Base64-encoded\nstring called `requestData`, which is placed in the URL query part.\nIt is planned to making this more flexible in a future release.\n\n## Using the client\n\nIf you have a service called `my.package.Service`, then zserio\nwill automatically generate a client for the service under\n`my.package.Service.Client`. This client can be instantiated alas ...\n\n```python\nfrom my.package import Service\nimport zswag\n\nclient = Service.Client(zswag.HttpClient(host=host, port=port))\n```\n\n`zswag.HttpClient` provides the service client interface expected\nFor more options with `HttpClient` apart from `host` and `port`,\ncheck out it's doc-string.\n\n## Swagger UI \n\nIf you have installed `pip install connexion[swagger-ui]`, you can view\nAPI docs of your service under `[/prefix]/ui`.\n\n## OpenAPI YAML spec\n\n### YAML file location/auto-generation\n\n* If you do not specify a non-existing file path, the OpenAPI spec is auto-generated.\n* If you specify an empty YAML path, the yaml file is placed next to the\n`<service>.zs` source-file.\n* If you specify an existing file, the `zswag` will simply verify\n  all the methods specified in your zserio service are also reflected in\n  the OpenAPI-spec.\n\n### Documentation extraction\n\nWhen the OpenAPI/Swagger YAML is auto-generated, `ZserioSwaggerApp`\ntries to populate the service/method/argument/result descriptions\nwith doc-strings extracted from the zserio sources.\n\nFor structs and services, the documentation is expected to be\nenclosed by `/*! .... !*/` markers preceding the declaration:\n\n```C\n/*!\n### My Markdown Struct Doc\nI choose to __highlight__ this word.\n!*/\n\nsruct MyStruct {\n    ...\n}\n``` \n\nFor service methods, a single-line doc-string is parsed which\nimmediately precedes the declaration:\n\n```\n/** This method is documented. */\nReturnType myMethod(ArgumentType);\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/klebert-engineering/zswag", "keywords": "", "license": "BSD-3 Clause", "maintainer": "", "maintainer_email": "", "name": "zswag", "package_url": "https://pypi.org/project/zswag/", "platform": "", "project_url": "https://pypi.org/project/zswag/", "project_urls": {"Homepage": "https://github.com/klebert-engineering/zswag"}, "release_url": "https://pypi.org/project/zswag/0.4.1/", "requires_dist": ["connexion", "requests", "zserio (>=2.0.0rc3)"], "requires_python": ">=3.6", "summary": "Convenience functionality to create python modules from zserio services at warp speed.", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Zswag</h1>\n<p>Convenience functionality to create python modules from zserio services at warp speed.\nTranslate/verify Zserio services to/with OpenAPI/Swagger and serve them in Flask/Connexion WSGI apps.</p>\n<h2>Installation</h2>\n<p>Just run</p>\n<pre>pip3 install zswag\n</pre>\n<p>Alternatively, clone this repository, and run</p>\n<pre>pip3 install -e .\n</pre>\n<h2>Creating a Swagger service from zserio</h2>\n<p><code>ZserioSwaggerApp</code> gives you the power to marry a user-written app controller\nwith a zserio-generated app server class (argument parser/response serialiser)\nand a fitting Swagger OpenAPI spec.</p>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">zswag</span>\n<span class=\"kn\">import</span> <span class=\"nn\">zserio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">my.app.controller</span>\n\n<span class=\"n\">zserio</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"s2\">\"myapp/service.zs\"</span><span class=\"p\">,</span> <span class=\"s2\">\"myapp\"</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.service</span> <span class=\"kn\">import</span> <span class=\"n\">Service</span>\n\n<span class=\"c1\"># The OpenApi argument `yaml_path=...` is optional</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">zswag</span><span class=\"o\">.</span><span class=\"n\">ZserioSwaggerApp</span><span class=\"p\">(</span><span class=\"n\">my</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">controller</span><span class=\"p\">,</span> <span class=\"n\">Service</span><span class=\"p\">)</span>\n</pre>\n<p>Here, the API endpoints are routed to <code>my/app/controller.py</code>,\nwhich might look as follows:</p>\n<pre><span class=\"c1\"># Written by you</span>\n<span class=\"k\">def</span> <span class=\"nf\">myApi</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s2\">\"response\"</span>\n\n<span class=\"c1\"># Injected by ZserioSwaggerApp</span>\n<span class=\"c1\"># _service = Service()</span>\n<span class=\"c1\"># _service.myApi = lambda request: _service._myApiMethod(request)</span>\n<span class=\"c1\"># _service._myApiImpl = my.app.controller.myApi</span>\n</pre>\n<p><strong>Note:</strong> The server is currently generated such that the\nzserio RPC method parameter is expected to be a Base64-encoded\nstring called <code>requestData</code>, which is placed in the URL query part.\nIt is planned to making this more flexible in a future release.</p>\n<h2>Using the client</h2>\n<p>If you have a service called <code>my.package.Service</code>, then zserio\nwill automatically generate a client for the service under\n<code>my.package.Service.Client</code>. This client can be instantiated alas ...</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">my.package</span> <span class=\"kn\">import</span> <span class=\"n\">Service</span>\n<span class=\"kn\">import</span> <span class=\"nn\">zswag</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Service</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">zswag</span><span class=\"o\">.</span><span class=\"n\">HttpClient</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"n\">port</span><span class=\"p\">))</span>\n</pre>\n<p><code>zswag.HttpClient</code> provides the service client interface expected\nFor more options with <code>HttpClient</code> apart from <code>host</code> and <code>port</code>,\ncheck out it's doc-string.</p>\n<h2>Swagger UI</h2>\n<p>If you have installed <code>pip install connexion[swagger-ui]</code>, you can view\nAPI docs of your service under <code>[/prefix]/ui</code>.</p>\n<h2>OpenAPI YAML spec</h2>\n<h3>YAML file location/auto-generation</h3>\n<ul>\n<li>If you do not specify a non-existing file path, the OpenAPI spec is auto-generated.</li>\n<li>If you specify an empty YAML path, the yaml file is placed next to the\n<code>&lt;service&gt;.zs</code> source-file.</li>\n<li>If you specify an existing file, the <code>zswag</code> will simply verify\nall the methods specified in your zserio service are also reflected in\nthe OpenAPI-spec.</li>\n</ul>\n<h3>Documentation extraction</h3>\n<p>When the OpenAPI/Swagger YAML is auto-generated, <code>ZserioSwaggerApp</code>\ntries to populate the service/method/argument/result descriptions\nwith doc-strings extracted from the zserio sources.</p>\n<p>For structs and services, the documentation is expected to be\nenclosed by <code>/*! .... !*/</code> markers preceding the declaration:</p>\n<pre><span class=\"cm\">/*!</span>\n<span class=\"cm\">### My Markdown Struct Doc</span>\n<span class=\"cm\">I choose to __highlight__ this word.</span>\n<span class=\"cm\">!*/</span>\n\n<span class=\"n\">sruct</span> <span class=\"n\">MyStruct</span> <span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">}</span>\n</pre>\n<p>For service methods, a single-line doc-string is parsed which\nimmediately precedes the declaration:</p>\n<pre><code>/** This method is documented. */\nReturnType myMethod(ArgumentType);\n</code></pre>\n\n          </div>"}, "last_serial": 7165613, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b4f6a9a9f111cd6bb554f8604befd74b", "sha256": "68d4d2184899bea9a9e848c78843634ecb19a4757678ea77273f48b87b33cd57"}, "downloads": -1, "filename": "zswag-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b4f6a9a9f111cd6bb554f8604befd74b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7553, "upload_time": "2020-04-23T17:51:08", "upload_time_iso_8601": "2020-04-23T17:51:08.722702Z", "url": "https://files.pythonhosted.org/packages/1c/42/c38340601cde2c5b6f613e48dcd13d6dc7b25323157b952c639ed4a33651/zswag-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85a82eb0fd4a814d7a70991690945451", "sha256": "912f3839e968d04e9eb77c1ed6ef93f40bac1dfe44eb06c395ffcb649f992968"}, "downloads": -1, "filename": "zswag-0.1.0.tar.gz", "has_sig": false, "md5_digest": "85a82eb0fd4a814d7a70991690945451", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5640, "upload_time": "2020-04-23T17:51:10", "upload_time_iso_8601": "2020-04-23T17:51:10.867874Z", "url": "https://files.pythonhosted.org/packages/ed/9e/e3392c913e6d38784436835c67df74abe765ab9d19d694cacd795bca2b61/zswag-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "6d999029f13bce4c3d2ba7946c8c5ba6", "sha256": "7587dc55d82d067db0efc672e1d549b41c26fb899ab00058224825a43b9df078"}, "downloads": -1, "filename": "zswag-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6d999029f13bce4c3d2ba7946c8c5ba6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6054, "upload_time": "2020-04-24T15:00:56", "upload_time_iso_8601": "2020-04-24T15:00:56.744295Z", "url": "https://files.pythonhosted.org/packages/df/1a/0cd57eb49d0e0e48c9705157e2e40ff210f5e346d6698475c38a75b5ed31/zswag-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7215e5c3a4559c37504c5d1aaa776252", "sha256": "1db94b908aed1bc0903502c2ea313b7eb87d5cebd4776822d0b168c379755c39"}, "downloads": -1, "filename": "zswag-0.2.0.tar.gz", "has_sig": false, "md5_digest": "7215e5c3a4559c37504c5d1aaa776252", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4716, "upload_time": "2020-04-24T15:00:58", "upload_time_iso_8601": "2020-04-24T15:00:58.084759Z", "url": "https://files.pythonhosted.org/packages/56/f1/0e7ccf85d489e1a270d57f564edf37c96b3d7d2050686f8041218393e93a/zswag-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "bf8ad0ad214eac78cc861f433bc104b8", "sha256": "99a57656711060060c37003d99045d7940f0909aac037b7bd570e1d5eba09af1"}, "downloads": -1, "filename": "zswag-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bf8ad0ad214eac78cc861f433bc104b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8885, "upload_time": "2020-04-28T15:31:02", "upload_time_iso_8601": "2020-04-28T15:31:02.500322Z", "url": "https://files.pythonhosted.org/packages/cf/40/e330f34566bc42bc3eae214c9afb556152d5059e4143f1393b1fd2308ffa/zswag-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07e5d24e9b46485771c087451e64b354", "sha256": "84b12fa71d5f4dd3391cab61776539ee02ea98653988a9b2433631954633f4d0"}, "downloads": -1, "filename": "zswag-0.3.0.tar.gz", "has_sig": false, "md5_digest": "07e5d24e9b46485771c087451e64b354", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8757, "upload_time": "2020-04-28T15:31:03", "upload_time_iso_8601": "2020-04-28T15:31:03.683617Z", "url": "https://files.pythonhosted.org/packages/dd/97/66cbda8fc8709b4f2f3c30eca1f50212eee6ed49c5f2ce323342a94dd910/zswag-0.3.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "5b716a2500d29935d4953162d5c94a65", "sha256": "4de26dd7a001fe32889bd6326c324a62380476e7f4a46b7eb131937cfe4f17a2"}, "downloads": -1, "filename": "zswag-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5b716a2500d29935d4953162d5c94a65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8913, "upload_time": "2020-05-04T16:23:08", "upload_time_iso_8601": "2020-05-04T16:23:08.912409Z", "url": "https://files.pythonhosted.org/packages/84/f7/733c5b6925c966ed803f7cc658ff68d6fd95d1d52f8a48e6a72c138ab283/zswag-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90731ece6ffaed4fec7dcf680dfb80b2", "sha256": "3274a0ddf861f823a85414702205208106c6545464f94226fd33785658a1cbcd"}, "downloads": -1, "filename": "zswag-0.4.1.tar.gz", "has_sig": false, "md5_digest": "90731ece6ffaed4fec7dcf680dfb80b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8841, "upload_time": "2020-05-04T16:23:10", "upload_time_iso_8601": "2020-05-04T16:23:10.264556Z", "url": "https://files.pythonhosted.org/packages/de/17/7ed0eec3845abd7b0a8f66883cbe806018a72fa1e7b0f50e048286ded64e/zswag-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b716a2500d29935d4953162d5c94a65", "sha256": "4de26dd7a001fe32889bd6326c324a62380476e7f4a46b7eb131937cfe4f17a2"}, "downloads": -1, "filename": "zswag-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5b716a2500d29935d4953162d5c94a65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8913, "upload_time": "2020-05-04T16:23:08", "upload_time_iso_8601": "2020-05-04T16:23:08.912409Z", "url": "https://files.pythonhosted.org/packages/84/f7/733c5b6925c966ed803f7cc658ff68d6fd95d1d52f8a48e6a72c138ab283/zswag-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90731ece6ffaed4fec7dcf680dfb80b2", "sha256": "3274a0ddf861f823a85414702205208106c6545464f94226fd33785658a1cbcd"}, "downloads": -1, "filename": "zswag-0.4.1.tar.gz", "has_sig": false, "md5_digest": "90731ece6ffaed4fec7dcf680dfb80b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8841, "upload_time": "2020-05-04T16:23:10", "upload_time_iso_8601": "2020-05-04T16:23:10.264556Z", "url": "https://files.pythonhosted.org/packages/de/17/7ed0eec3845abd7b0a8f66883cbe806018a72fa1e7b0f50e048286ded64e/zswag-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:55 2020"}