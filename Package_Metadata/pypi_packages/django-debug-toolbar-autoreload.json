{"info": {"author": "Gregor M\u00fcllegger", "author_email": "gregor@muellegger.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python"], "description": "django-debug-toolbar-autoreload\n===============================\n\n    **THIS MODULE IS NO LONGER MAINTAINED**\n\n    I decided to stop the development on this project since there are now more\n    mature solutions to the same problem. I personally prefer to use gulp_ to\n    observe files for changes and to start a livereload server that can be used\n    with your browser's livereload plugin.\n\n    .. _gulp: http://gulpjs.com/\n\n    Here is an example ``gulpfile.js`` that does nearly the same as the\n    autoreload feature of this package::\n\n        var gulp = require('gulp'),\n            livereload = require('gulp-livereload'),\n            watch = require('gulp-watch');\n\n        var watchPaths = [\n            'templates/**.html',\n            'static/**.js',\n            'static/**.css',\n        ];\n\n        gulp.task('watch', function() {\n            gulp.src(watchPaths)\n                .pipe(watch())\n                .pipe(livereload());\n        });\n\n    If you still have interest in this project and want to maintain it, just\n    drop me a message and we can discuss the details.\n\nThis package contains an extra panel for the excellent django-debug-toolbar_.\n\nThe purpose is to automatically reload the page if a template that was used to\nrender the current page is changed. It is for your browser what the\n``runserver``'s auto-reload feature is for your python code.\n\nWatch this screencast for a short introduction: http://www.youtube.com/watch?v=zQSoJF70if4\n\n.. _django-debug-toolbar: http://pypi.python.org/pypi/django-debug-toolbar\n\nInstall\n-------\n\n1. Put the ``debug_toolbar_autoreload`` source folder in your ``PYTHONPATH``.\n2. Add ``'debug_toolbar_autoreload'`` to your ``INSTALLED_APPS`` settings.\n3. Add ``'debug_toolbar_autoreload.AutoreloadPanel'`` to your ``DEBUG_TOOLBAR_PANELS``.\n\nThis means your settings file should look something like::\n\n    INSTALLED_APPS = (\n        # ... other apps ...\n        'debug_toolbar',\n        'debug_toolbar_autoreload',\n    )\n\n    DEBUG_TOOLBAR_PANELS = (\n        # default panels\n        'debug_toolbar.panels.version.VersionDebugPanel',\n        'debug_toolbar.panels.timer.TimerDebugPanel',\n        'debug_toolbar.panels.settings_vars.SettingsVarsDebugPanel',\n        'debug_toolbar.panels.headers.HeaderDebugPanel',\n        'debug_toolbar.panels.profiling.ProfilingDebugPanel',\n        'debug_toolbar.panels.request_vars.RequestVarsDebugPanel',\n        'debug_toolbar.panels.sql.SQLDebugPanel',\n        'debug_toolbar.panels.template.TemplateDebugPanel',\n        'debug_toolbar.panels.cache.CacheDebugPanel',\n        'debug_toolbar.panels.signals.SignalDebugPanel',\n        'debug_toolbar.panels.logger.LoggingPanel',\n\n        # autoreload panel\n        'debug_toolbar_autoreload.AutoreloadPanel',\n    )\n\n**Requirements:** Django 1.4 or higher is required since we need a\nmultithreaded development server.\n\nContribute\n----------\n\n1. Download and setup the project::\n\n    git clone https://github.com/gregmuellegger/django-debug-toolbar-autoreload.git\n    cd django-debug-toolbar-autoreload\n    virtualenv .\n    source bin/activate\n    pip install -r requirements/development.txt\n    python manage.py syncdb\n    python manage.py runserver\n\n2. Open one of the demo pages from http://localhost:8000/ in your browser.\n3. Hack\n4. Send a pull request\n\n\nChangelog\n=========\n\n0.2.0\n-----\n\n* Don't reload the whole page if only a css file was changed. Instead load CSS\n  in place.\n* Adding CHANGES.rst to MANIFEST.in which caused errors during install.\n\n0.1.1\n-----\n\n* Try to detect if development server wants to shutdown. Before this change\n  was the server still running in the background and didn't allow you to\n  restart it again.\n\n0.1.0\n-----\n\n* Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gregmuellegger/django-debug-toolbar-autoreload", "keywords": null, "license": "BSD licence, see LICENSE file", "maintainer": null, "maintainer_email": null, "name": "django-debug-toolbar-autoreload", "package_url": "https://pypi.org/project/django-debug-toolbar-autoreload/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-debug-toolbar-autoreload/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/gregmuellegger/django-debug-toolbar-autoreload"}, "release_url": "https://pypi.org/project/django-debug-toolbar-autoreload/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Automatically reloads your browser when a template, css or javascript file was modified.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-debug-toolbar-autoreload\">\n<h2>django-debug-toolbar-autoreload</h2>\n<blockquote>\n<p><strong>THIS MODULE IS NO LONGER MAINTAINED</strong></p>\n<p>I decided to stop the development on this project since there are now more\nmature solutions to the same problem. I personally prefer to use <a href=\"http://gulpjs.com/\" rel=\"nofollow\">gulp</a> to\nobserve files for changes and to start a livereload server that can be used\nwith your browser\u2019s livereload plugin.</p>\n<p>Here is an example <tt>gulpfile.js</tt> that does nearly the same as the\nautoreload feature of this package:</p>\n<pre>var gulp = require('gulp'),\n    livereload = require('gulp-livereload'),\n    watch = require('gulp-watch');\n\nvar watchPaths = [\n    'templates/**.html',\n    'static/**.js',\n    'static/**.css',\n];\n\ngulp.task('watch', function() {\n    gulp.src(watchPaths)\n        .pipe(watch())\n        .pipe(livereload());\n});\n</pre>\n<p>If you still have interest in this project and want to maintain it, just\ndrop me a message and we can discuss the details.</p>\n</blockquote>\n<p>This package contains an extra panel for the excellent <a href=\"http://pypi.python.org/pypi/django-debug-toolbar\" rel=\"nofollow\">django-debug-toolbar</a>.</p>\n<p>The purpose is to automatically reload the page if a template that was used to\nrender the current page is changed. It is for your browser what the\n<tt>runserver</tt>\u2019s auto-reload feature is for your python code.</p>\n<p>Watch this screencast for a short introduction: <a href=\"http://www.youtube.com/watch?v=zQSoJF70if4\" rel=\"nofollow\">http://www.youtube.com/watch?v=zQSoJF70if4</a></p>\n<div id=\"install\">\n<h3>Install</h3>\n<ol>\n<li>Put the <tt>debug_toolbar_autoreload</tt> source folder in your <tt>PYTHONPATH</tt>.</li>\n<li>Add <tt>'debug_toolbar_autoreload'</tt> to your <tt>INSTALLED_APPS</tt> settings.</li>\n<li>Add <tt>'debug_toolbar_autoreload.AutoreloadPanel'</tt> to your <tt>DEBUG_TOOLBAR_PANELS</tt>.</li>\n</ol>\n<p>This means your settings file should look something like:</p>\n<pre>INSTALLED_APPS = (\n    # ... other apps ...\n    'debug_toolbar',\n    'debug_toolbar_autoreload',\n)\n\nDEBUG_TOOLBAR_PANELS = (\n    # default panels\n    'debug_toolbar.panels.version.VersionDebugPanel',\n    'debug_toolbar.panels.timer.TimerDebugPanel',\n    'debug_toolbar.panels.settings_vars.SettingsVarsDebugPanel',\n    'debug_toolbar.panels.headers.HeaderDebugPanel',\n    'debug_toolbar.panels.profiling.ProfilingDebugPanel',\n    'debug_toolbar.panels.request_vars.RequestVarsDebugPanel',\n    'debug_toolbar.panels.sql.SQLDebugPanel',\n    'debug_toolbar.panels.template.TemplateDebugPanel',\n    'debug_toolbar.panels.cache.CacheDebugPanel',\n    'debug_toolbar.panels.signals.SignalDebugPanel',\n    'debug_toolbar.panels.logger.LoggingPanel',\n\n    # autoreload panel\n    'debug_toolbar_autoreload.AutoreloadPanel',\n)\n</pre>\n<p><strong>Requirements:</strong> Django 1.4 or higher is required since we need a\nmultithreaded development server.</p>\n</div>\n<div id=\"contribute\">\n<h3>Contribute</h3>\n<ol>\n<li><p>Download and setup the project:</p>\n<pre>git clone https://github.com/gregmuellegger/django-debug-toolbar-autoreload.git\ncd django-debug-toolbar-autoreload\nvirtualenv .\nsource bin/activate\npip install -r requirements/development.txt\npython manage.py syncdb\npython manage.py runserver\n</pre>\n</li>\n<li><p>Open one of the demo pages from <a href=\"http://localhost:8000/\" rel=\"nofollow\">http://localhost:8000/</a> in your browser.</p>\n</li>\n<li><p>Hack</p>\n</li>\n<li><p>Send a pull request</p>\n</li>\n</ol>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.2.0</h3>\n<ul>\n<li>Don\u2019t reload the whole page if only a css file was changed. Instead load CSS\nin place.</li>\n<li>Adding CHANGES.rst to MANIFEST.in which caused errors during install.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.1</h3>\n<ul>\n<li>Try to detect if development server wants to shutdown. Before this change\nwas the server still running in the background and didn\u2019t allow you to\nrestart it again.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.0</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1069639, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5d016b85759390601f750c8e8844e85e", "sha256": "6d84c4b69320b12cf826d933aeccffbcb986025c39be5635713358fc555f7c2f"}, "downloads": -1, "filename": "django-debug-toolbar-autoreload-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5d016b85759390601f750c8e8844e85e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8603, "upload_time": "2012-10-05T10:37:04", "upload_time_iso_8601": "2012-10-05T10:37:04.880737Z", "url": "https://files.pythonhosted.org/packages/da/c9/8f26f27deb0bd105af9c5c71fb963f3b5c0afc226595067d9dfa71bb9382/django-debug-toolbar-autoreload-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "674d7ef771f503f18750869e130d092b", "sha256": "58a337b118c136f59b2cde90e7736f7f4ce5418207600132c0525aca085ea95b"}, "downloads": -1, "filename": "django-debug-toolbar-autoreload-0.1.1.tar.gz", "has_sig": false, "md5_digest": "674d7ef771f503f18750869e130d092b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9106, "upload_time": "2012-10-22T16:19:18", "upload_time_iso_8601": "2012-10-22T16:19:18.907333Z", "url": "https://files.pythonhosted.org/packages/8a/4b/75ef25d6c13d3a25e9f016b8c1f0cd6075cbe9a4dc4059061c7e6d823d9b/django-debug-toolbar-autoreload-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b0eae67dc4e1faf53443ed4bb340be0a", "sha256": "70457869331210822f5978c845b99fdf338692145cb872637a78eccc37f18c7d"}, "downloads": -1, "filename": "django-debug-toolbar-autoreload-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b0eae67dc4e1faf53443ed4bb340be0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9476, "upload_time": "2012-10-23T09:59:45", "upload_time_iso_8601": "2012-10-23T09:59:45.292403Z", "url": "https://files.pythonhosted.org/packages/90/94/e5dd7791df2924ab4560a18649befd236fb95179588416a066162091587a/django-debug-toolbar-autoreload-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b0eae67dc4e1faf53443ed4bb340be0a", "sha256": "70457869331210822f5978c845b99fdf338692145cb872637a78eccc37f18c7d"}, "downloads": -1, "filename": "django-debug-toolbar-autoreload-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b0eae67dc4e1faf53443ed4bb340be0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9476, "upload_time": "2012-10-23T09:59:45", "upload_time_iso_8601": "2012-10-23T09:59:45.292403Z", "url": "https://files.pythonhosted.org/packages/90/94/e5dd7791df2924ab4560a18649befd236fb95179588416a066162091587a/django-debug-toolbar-autoreload-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:37 2020"}