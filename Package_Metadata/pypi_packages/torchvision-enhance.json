{"info": {"author": "sshuair", "author_email": "sshuair@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# torchvision-enhance\n\ntorchvision-enhance is used to enhance the offical PyTorch vision library torchvision. Here is the enhanced parts:\n- support multi-channel(> 4 channels, e.g. 8 channels) images\n- support 16-bit TIF file \n- more easier to semantic segmentation transform\n\n\n\n## Support transforms\n- RandomFlip\n- RandomVFlip\n- RandomHFlip\n- RandomRotate\n- RandomShift\n- RandomCrop\n- CenterCrop\n- Resize\n- Pad\n- GaussianBlur\n- PieceTransform\n- Lambda\n- ToTensor\n- Normalize\n\n## Install\n```\npip install torchvision-enhance\n```  \n\nor  install from the source\n\n```\ngit clone \npip install -r requirements.txt\npython setup.py install\n```\n## Dependencies\n- numpy\n- scipy\n- Pillow\n- PyTorch\n- opencv\n- scikit-image\n\n## Usage\nFor more useage, check out the [example-classification.py](./test/example-classification.py) and [example-segmentation.py](./test/example-segmentation.py)\n\n``` python\nfrom torchvision_x.datasets import image_loader\nfrom torchvision_x.transforms import transforms_seg,functional\n\ntransform = transforms_seg.SegCompose([\n#     transforms_seg.SegFlip(),\n    transforms_seg.SegVFlip(), \n    # transforms_seg.SegHFlip(),\n    # transforms_seg.SegRandomFlip(),\n    # transforms_seg.SegRandomRotate(90),\n    # transforms_seg.SegRandomShift(40),\n    # transforms_seg.SegRandomCrop((256,256)),\n    # transforms_seg.SegCenterCrop(224),\n    # transforms_seg.SegResize(224),\n    # transforms_seg.SegPad(20),\n    # transforms_seg.SegNoise(dtype='uint16', var=0.001),  #TODO\n    # transforms_seg.SegGaussianBlur(sigma=2, dtype='uint8', multichannel=False),\n    # transforms_seg.SegPieceTransform(),\n#     transforms_seg.SegLambda(lambda x: functional.to_tensor(x))\n    transforms_seg.SegToTensor(),\n    transforms_seg.SegNormalize((0.5,0.5,0.5),(0.5,0.5,0.5)),\n    ])\n\ntrainset = image_loader.SemanticSegmentationLoader(\n    rootdir='sample-data/', lstpath='sample-data/segmentation_jpg.lst',\n    filetype='jpg', transform=transform,\n    )\ntrainloader = DataLoader(dataset=trainset,batch_size=batch_size,shuffle=False)\n\nfor step, (inputs, targets) in enumerate(trainloader):\n    print('batch: {} ........'.format(step))\n    print(type(inputs), inputs.shape)\n    print(type(targets), targets.shape)\n```\n\n## TODO\n- Noise\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sshuair/torchvision-enhance", "keywords": "pytorch", "license": "", "maintainer": "", "maintainer_email": "", "name": "torchvision-enhance", "package_url": "https://pypi.org/project/torchvision-enhance/", "platform": "", "project_url": "https://pypi.org/project/torchvision-enhance/", "project_urls": {"Homepage": "https://github.com/sshuair/torchvision-enhance"}, "release_url": "https://pypi.org/project/torchvision-enhance/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "Enhance torchvision for multi-channel images, 16-bit image, segmentation...", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # torchvision-enhance<br><br>torchvision-enhance is used to enhance the offical PyTorch vision library torchvision. Here is the enhanced parts:<br>- support multi-channel(&gt; 4 channels, e.g. 8 channels) images<br>- support 16-bit TIF file <br>- more easier to semantic segmentation transform<br><br><br><br>## Support transforms<br>- RandomFlip<br>- RandomVFlip<br>- RandomHFlip<br>- RandomRotate<br>- RandomShift<br>- RandomCrop<br>- CenterCrop<br>- Resize<br>- Pad<br>- GaussianBlur<br>- PieceTransform<br>- Lambda<br>- ToTensor<br>- Normalize<br><br>## Install<br>```<br>pip install torchvision-enhance<br>```  <br><br>or  install from the source<br><br>```<br>git clone <br>pip install -r requirements.txt<br>python setup.py install<br>```<br>## Dependencies<br>- numpy<br>- scipy<br>- Pillow<br>- PyTorch<br>- opencv<br>- scikit-image<br><br>## Usage<br>For more useage, check out the [example-classification.py](./test/example-classification.py) and [example-segmentation.py](./test/example-segmentation.py)<br><br>``` python<br>from torchvision_x.datasets import image_loader<br>from torchvision_x.transforms import transforms_seg,functional<br><br>transform = transforms_seg.SegCompose([<br>#     transforms_seg.SegFlip(),<br>    transforms_seg.SegVFlip(), <br>    # transforms_seg.SegHFlip(),<br>    # transforms_seg.SegRandomFlip(),<br>    # transforms_seg.SegRandomRotate(90),<br>    # transforms_seg.SegRandomShift(40),<br>    # transforms_seg.SegRandomCrop((256,256)),<br>    # transforms_seg.SegCenterCrop(224),<br>    # transforms_seg.SegResize(224),<br>    # transforms_seg.SegPad(20),<br>    # transforms_seg.SegNoise(dtype='uint16', var=0.001),  #TODO<br>    # transforms_seg.SegGaussianBlur(sigma=2, dtype='uint8', multichannel=False),<br>    # transforms_seg.SegPieceTransform(),<br>#     transforms_seg.SegLambda(lambda x: functional.to_tensor(x))<br>    transforms_seg.SegToTensor(),<br>    transforms_seg.SegNormalize((0.5,0.5,0.5),(0.5,0.5,0.5)),<br>    ])<br><br>trainset = image_loader.SemanticSegmentationLoader(<br>    rootdir='sample-data/', lstpath='sample-data/segmentation_jpg.lst',<br>    filetype='jpg', transform=transform,<br>    )<br>trainloader = DataLoader(dataset=trainset,batch_size=batch_size,shuffle=False)<br><br>for step, (inputs, targets) in enumerate(trainloader):<br>    print('batch: {} ........'.format(step))<br>    print(type(inputs), inputs.shape)<br>    print(type(targets), targets.shape)<br>```<br><br>## TODO<br>- Noise<br>\n          </div>"}, "last_serial": 3783182, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "d93799cc42829aec7938ec961b28332d", "sha256": "e8c6c32f9992fce81d013f62f06475099b024d9d5b264f254a0bf08a778b3064"}, "downloads": -1, "filename": "torchvision-enhance-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d93799cc42829aec7938ec961b28332d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13270, "upload_time": "2018-02-16T13:27:12", "upload_time_iso_8601": "2018-02-16T13:27:12.357892Z", "url": "https://files.pythonhosted.org/packages/6f/55/a094975ef8cd176fc1fcee1b7d689f19e4a6f00c4ba72f4acd69850c92b1/torchvision-enhance-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "04cce8906b42f2093637c2142aea9b67", "sha256": "677ec999d53f20ba04f822d22c3ea04cd733bb7ca757a8b9d9cf106f4344400f"}, "downloads": -1, "filename": "torchvision-enhance-0.1.2.tar.gz", "has_sig": false, "md5_digest": "04cce8906b42f2093637c2142aea9b67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13285, "upload_time": "2018-02-23T06:42:25", "upload_time_iso_8601": "2018-02-23T06:42:25.743633Z", "url": "https://files.pythonhosted.org/packages/40/09/c8877848c39186b151c9c46acb9ad3d3fb4292ec27c895a5de0786e46178/torchvision-enhance-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "a0e6ad8f987525d69a027e9e6529d50e", "sha256": "3f03d638216b33d299d4238fb8f9a5c9968373c33c651e9f8620fd1bf0980eee"}, "downloads": -1, "filename": "torchvision-enhance-0.1.3.tar.gz", "has_sig": false, "md5_digest": "a0e6ad8f987525d69a027e9e6529d50e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13449, "upload_time": "2018-04-20T07:08:30", "upload_time_iso_8601": "2018-04-20T07:08:30.197639Z", "url": "https://files.pythonhosted.org/packages/a4/ae/7e1ac9784927b4ae5174c6f6533acacfa964982c30f77cd379ebfbaa7fd6/torchvision-enhance-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a0e6ad8f987525d69a027e9e6529d50e", "sha256": "3f03d638216b33d299d4238fb8f9a5c9968373c33c651e9f8620fd1bf0980eee"}, "downloads": -1, "filename": "torchvision-enhance-0.1.3.tar.gz", "has_sig": false, "md5_digest": "a0e6ad8f987525d69a027e9e6529d50e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13449, "upload_time": "2018-04-20T07:08:30", "upload_time_iso_8601": "2018-04-20T07:08:30.197639Z", "url": "https://files.pythonhosted.org/packages/a4/ae/7e1ac9784927b4ae5174c6f6533acacfa964982c30f77cd379ebfbaa7fd6/torchvision-enhance-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:03 2020"}