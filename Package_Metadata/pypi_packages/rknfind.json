{"info": {"author": "scpketer", "author_email": "scpketer@protonmail.ch", "bugtrack_url": null, "classifiers": [], "description": "# RknFind project\n\n## Disclaimer\n\nThis application provides tools for browsing and exporting\nRKN (RosKomNadzor, a Russian communications managing autority)\ndump of sites blocked in Russia.\n\nPlease note that visiting sites exposed from RKN dump by\nthis application may be illegal in some countries.\n\nEnd user takes full responsibility for any actions made using this application,\nwhich include, but not limited by:\n\n-   Downloading a copy of RKN dump file from Zapret-Info Github repository\n-   Retrieving a human-readable list of blocked sites/URLs/IP addresses\n-   Exporting list of blocked resources to SQLite database\n\n## Features\n\nWhat can this application do?\n\n-   Retrieve and auto-update RKN dump file\n-   Process RKN dump file and print out human-readable/JSON-formatted list of\n    blocked sites\n-   Export list of blocked sites to SQLite database\n\n## Usage\n### Installation\nApplication is available at PyPI and can be retrieved using `pip`:\n\n```bash\n$ pip install rknfind\n```\n\nYou can install `git` and `gitpython` module to slightly improve performance\non dump file download:\n-   Git downloads - https://git-scm.com/downloads\n-   GitPython installation:\n    ```bash\n    $ pip install rknfind[git]\n    ```\n\nYou can also install `peewee` to be able to export data into SQLite database:\n```bash\n$ pip install rknfind[db]\n```\n\n### Launching\nOnce you've installed `rknfind`, just run it in terminal:\n```bash\n$ rknfind\n```\n\nWith no filter parameters provided, `rknfind` will exit. Use `rknfind -f <field> <occurence>` to add filter. You can use `-f` flag multiple times!\n\nList of fields:\n| Field    | Description                   |\n|----------|-------------------------------|\n| `addr`   | List of IP addresses of entry |\n| `date`   | Issue date of entry           |\n| `decree` | Decree of entry               |\n| `issuer` | Issuing authority of entry    |\n| `domain` | List of domain names of entry |\n| `url`    | List of URLs of entry         |\n\nFor info related to other flags, use `rknfind -h`", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scpketer/rknfind", "keywords": "rkn roskomnadzor cli find", "license": "", "maintainer": "", "maintainer_email": "", "name": "rknfind", "package_url": "https://pypi.org/project/rknfind/", "platform": "", "project_url": "https://pypi.org/project/rknfind/", "project_urls": {"Homepage": "https://github.com/scpketer/rknfind"}, "release_url": "https://pypi.org/project/rknfind/2.1.0a1/", "requires_dist": null, "requires_python": ">=3, <4", "summary": "Dig into RKN dump with ease", "version": "2.1.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>RknFind project</h1>\n<h2>Disclaimer</h2>\n<p>This application provides tools for browsing and exporting\nRKN (RosKomNadzor, a Russian communications managing autority)\ndump of sites blocked in Russia.</p>\n<p>Please note that visiting sites exposed from RKN dump by\nthis application may be illegal in some countries.</p>\n<p>End user takes full responsibility for any actions made using this application,\nwhich include, but not limited by:</p>\n<ul>\n<li>Downloading a copy of RKN dump file from Zapret-Info Github repository</li>\n<li>Retrieving a human-readable list of blocked sites/URLs/IP addresses</li>\n<li>Exporting list of blocked resources to SQLite database</li>\n</ul>\n<h2>Features</h2>\n<p>What can this application do?</p>\n<ul>\n<li>Retrieve and auto-update RKN dump file</li>\n<li>Process RKN dump file and print out human-readable/JSON-formatted list of\nblocked sites</li>\n<li>Export list of blocked sites to SQLite database</li>\n</ul>\n<h2>Usage</h2>\n<h3>Installation</h3>\n<p>Application is available at PyPI and can be retrieved using <code>pip</code>:</p>\n<pre>$ pip install rknfind\n</pre>\n<p>You can install <code>git</code> and <code>gitpython</code> module to slightly improve performance\non dump file download:</p>\n<ul>\n<li>Git downloads - <a href=\"https://git-scm.com/downloads\" rel=\"nofollow\">https://git-scm.com/downloads</a></li>\n<li>GitPython installation:\n<pre>$ pip install rknfind<span class=\"o\">[</span>git<span class=\"o\">]</span>\n</pre>\n</li>\n</ul>\n<p>You can also install <code>peewee</code> to be able to export data into SQLite database:</p>\n<pre>$ pip install rknfind<span class=\"o\">[</span>db<span class=\"o\">]</span>\n</pre>\n<h3>Launching</h3>\n<p>Once you've installed <code>rknfind</code>, just run it in terminal:</p>\n<pre>$ rknfind\n</pre>\n<p>With no filter parameters provided, <code>rknfind</code> will exit. Use <code>rknfind -f &lt;field&gt; &lt;occurence&gt;</code> to add filter. You can use <code>-f</code> flag multiple times!</p>\n<p>List of fields:\n| Field    | Description                   |\n|----------|-------------------------------|\n| <code>addr</code>   | List of IP addresses of entry |\n| <code>date</code>   | Issue date of entry           |\n| <code>decree</code> | Decree of entry               |\n| <code>issuer</code> | Issuing authority of entry    |\n| <code>domain</code> | List of domain names of entry |\n| <code>url</code>    | List of URLs of entry         |</p>\n<p>For info related to other flags, use <code>rknfind -h</code></p>\n\n          </div>"}, "last_serial": 6940990, "releases": {"2.1.0a1": [{"comment_text": "", "digests": {"md5": "b4c0c5c2598be9f3bbe00527f6831557", "sha256": "0caa27270b148f2233933b47671bb72652a236881d3137e1591fc52c953cd11a"}, "downloads": -1, "filename": "rknfind-2.1.0a1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "b4c0c5c2598be9f3bbe00527f6831557", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3, <4", "size": 18290, "upload_time": "2019-09-21T12:23:09", "upload_time_iso_8601": "2019-09-21T12:23:09.954233Z", "url": "https://files.pythonhosted.org/packages/e0/14/8b6294cf0a46af32fd62ba49f5021ee643065da3f21836db01ceef840639/rknfind-2.1.0a1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "f69b9593dad678564c775c2b72d5cc1f", "sha256": "9dcd6e3cf91b0120c224c2364ad6b69d94bab66752fa980f00ff454d30ebb98b"}, "downloads": -1, "filename": "rknfind-2.1.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "f69b9593dad678564c775c2b72d5cc1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3, <4", "size": 13521, "upload_time": "2019-09-21T12:25:54", "upload_time_iso_8601": "2019-09-21T12:25:54.119465Z", "url": "https://files.pythonhosted.org/packages/a4/f4/590dbb8adc0f51ea8be593334e67d58670f85cdc171f3d31cc788ba82a90/rknfind-2.1.0a1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b4c0c5c2598be9f3bbe00527f6831557", "sha256": "0caa27270b148f2233933b47671bb72652a236881d3137e1591fc52c953cd11a"}, "downloads": -1, "filename": "rknfind-2.1.0a1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "b4c0c5c2598be9f3bbe00527f6831557", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3, <4", "size": 18290, "upload_time": "2019-09-21T12:23:09", "upload_time_iso_8601": "2019-09-21T12:23:09.954233Z", "url": "https://files.pythonhosted.org/packages/e0/14/8b6294cf0a46af32fd62ba49f5021ee643065da3f21836db01ceef840639/rknfind-2.1.0a1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "f69b9593dad678564c775c2b72d5cc1f", "sha256": "9dcd6e3cf91b0120c224c2364ad6b69d94bab66752fa980f00ff454d30ebb98b"}, "downloads": -1, "filename": "rknfind-2.1.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "f69b9593dad678564c775c2b72d5cc1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3, <4", "size": 13521, "upload_time": "2019-09-21T12:25:54", "upload_time_iso_8601": "2019-09-21T12:25:54.119465Z", "url": "https://files.pythonhosted.org/packages/a4/f4/590dbb8adc0f51ea8be593334e67d58670f85cdc171f3d31cc788ba82a90/rknfind-2.1.0a1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:02:20 2020"}