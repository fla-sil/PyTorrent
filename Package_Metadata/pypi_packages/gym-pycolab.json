{"info": {"author": "Fomoro AI", "author_email": "team@fomoro.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# Gym PyColab\n\n[`gym`](http://gym.openai.com/docs/) interface for [`pycolab`](https://github.com/deepmind/pycolab) games.\n\n<hr/>\n\n<p align=\"center\">\n  <p align=\"center\">\n    <img src=\"extraterrestrial_marauders.gif\" alt=\"Extraterrestrial Marauders\">\n  </p>\n  <p align=\"center\"><i>Extraterrestrial Marauders</i></p>\n</p>\n\n```sh\n$ pip install gym-pycolab\n```\n\n# API\n\n## Example\n\nInherit from `gym_pycolab.PyColabEnv` to make a `gym.Env` version. Also see [pycolab_games.py](gym_pycolab/pycolab_games.py) for more examples.\n\n```python\nimport gym_pycolab\nfrom gym import spaces\n\nclass MyGameEnv(gym_pycolab.PyColabEnv):\n    \"\"\"A pycolab game env.\"\"\"\n\n    def __init__(self,\n                 max_iterations=10,\n                 default_reward=-1.):\n        super(MyGameEnv, self).__init__(\n            max_iterations=max_iterations,\n            default_reward=default_reward,\n            action_space=spaces.Discrete(4))\n\n    def make_game(self):\n        return my_game\n\n    def make_colors(self):\n        return {'#': (0, 0, 255)}\n\nenv = MyGameEnv()\nstate = env.reset()\nstate, reward, done, info = env.step(0)\n```\n\n# Games and Envs\n\nIncludes most of the pycolab example games (with `gym.make(game)` or `gym_pycolab.{game}Env(...)`):\n\n+ `Ordeal-v0` ([ordeal](https://github.com/deepmind/pycolab/blob/master/pycolab/examples/ordeal.py))\n+ `WarehouseManager-v{0,1,2}` ([warehouse_manager](https://github.com/deepmind/pycolab/blob/master/pycolab/examples/warehouse_manager.py))\n+ `FluvialNatation-v0` ([fluvial_natation](https://github.com/deepmind/pycolab/blob/master/pycolab/examples/fluvial_natation.py))\n+ `ExtraterrestrialMarauders-v0` ([extraterrestrial_marauders](https://github.com/deepmind/pycolab/blob/master/pycolab/examples/extraterrestrial_marauders.py))\n+ `ShockWave-v{0,1}` ([shockwave](https://github.com/deepmind/pycolab/blob/master/pycolab/examples/shockwave.py))\n+ `Aperture-v{0,1,2}` ([aperture](https://github.com/deepmind/pycolab/blob/master/pycolab/examples/aperture.py))\n+ `Apprehend-v0` ([apprehend](https://github.com/deepmind/pycolab/blob/master/pycolab/examples/apprehend.py))\n+ `BetterScrollyMaze-v{0,1,2}` ([better_scrolly_maze](https://github.com/deepmind/pycolab/blob/master/pycolab/examples/better_scrolly_maze.py))\n+ `ChainWalk-v0` ([classics/chain_walk](https://github.com/deepmind/pycolab/blob/master/pycolab/examples/classics/chain_walk.py))\n+ `CliffWalk-v0` ([classics/cliff_walk](https://github.com/deepmind/pycolab/blob/master/pycolab/examples/classics/cliff_walk.py))\n+ `FourRooms-v0` ([classics/four_rooms](https://github.com/deepmind/pycolab/blob/master/pycolab/examples/classics/four_rooms.py))\n\n## Running an Example\n\nRendering the `ExtraterrestrialMarauders-v0` with random actions:\n\n```sh\n$ python -m gym_pycolab.pycolab_games --game extraterrestrial_marauders\n```\n\n# Development\n\nDevelopment is started with `pipenv`.\n\n```sh\n$ pipenv install\n$ pipenv shell\n```\n\n# Testing\n\n```sh\n$ python -m gym_pycolab.pycolab_env_test\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/fomorians/gym_pycolab/archive/v1.0.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fomorians/gym_pycolab", "keywords": "gym,pycolab,reinforcement-learning", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "gym-pycolab", "package_url": "https://pypi.org/project/gym-pycolab/", "platform": "", "project_url": "https://pypi.org/project/gym-pycolab/", "project_urls": {"Download": "https://github.com/fomorians/gym_pycolab/archive/v1.0.0.tar.gz", "Homepage": "https://github.com/fomorians/gym_pycolab"}, "release_url": "https://pypi.org/project/gym-pycolab/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Gym interface for pycolab games.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Gym PyColab</h1>\n<p><a href=\"http://gym.openai.com/docs/\" rel=\"nofollow\"><code>gym</code></a> interface for <a href=\"https://github.com/deepmind/pycolab\" rel=\"nofollow\"><code>pycolab</code></a> games.</p>\n<hr>\n<p align=\"center\">\n  </p><p align=\"center\">\n    <img alt=\"Extraterrestrial Marauders\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0f2cc742508572cc0a469736cc25235ecdac137/6578747261746572726573747269616c5f6d61726175646572732e676966\">\n  </p>\n  <p align=\"center\"><i>Extraterrestrial Marauders</i></p>\n<p></p>\n<pre>$ pip install gym-pycolab\n</pre>\n<h1>API</h1>\n<h2>Example</h2>\n<p>Inherit from <code>gym_pycolab.PyColabEnv</code> to make a <code>gym.Env</code> version. Also see <a href=\"gym_pycolab/pycolab_games.py\" rel=\"nofollow\">pycolab_games.py</a> for more examples.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">gym_pycolab</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gym</span> <span class=\"kn\">import</span> <span class=\"n\">spaces</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyGameEnv</span><span class=\"p\">(</span><span class=\"n\">gym_pycolab</span><span class=\"o\">.</span><span class=\"n\">PyColabEnv</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"A pycolab game env.\"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\n                 <span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n                 <span class=\"n\">default_reward</span><span class=\"o\">=-</span><span class=\"mf\">1.</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">MyGameEnv</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"n\">max_iterations</span><span class=\"p\">,</span>\n            <span class=\"n\">default_reward</span><span class=\"o\">=</span><span class=\"n\">default_reward</span><span class=\"p\">,</span>\n            <span class=\"n\">action_space</span><span class=\"o\">=</span><span class=\"n\">spaces</span><span class=\"o\">.</span><span class=\"n\">Discrete</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">make_game</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">my_game</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">make_colors</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'#'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)}</span>\n\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">MyGameEnv</span><span class=\"p\">()</span>\n<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"n\">state</span><span class=\"p\">,</span> <span class=\"n\">reward</span><span class=\"p\">,</span> <span class=\"n\">done</span><span class=\"p\">,</span> <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<h1>Games and Envs</h1>\n<p>Includes most of the pycolab example games (with <code>gym.make(game)</code> or <code>gym_pycolab.{game}Env(...)</code>):</p>\n<ul>\n<li><code>Ordeal-v0</code> (<a href=\"https://github.com/deepmind/pycolab/blob/master/pycolab/examples/ordeal.py\" rel=\"nofollow\">ordeal</a>)</li>\n<li><code>WarehouseManager-v{0,1,2}</code> (<a href=\"https://github.com/deepmind/pycolab/blob/master/pycolab/examples/warehouse_manager.py\" rel=\"nofollow\">warehouse_manager</a>)</li>\n<li><code>FluvialNatation-v0</code> (<a href=\"https://github.com/deepmind/pycolab/blob/master/pycolab/examples/fluvial_natation.py\" rel=\"nofollow\">fluvial_natation</a>)</li>\n<li><code>ExtraterrestrialMarauders-v0</code> (<a href=\"https://github.com/deepmind/pycolab/blob/master/pycolab/examples/extraterrestrial_marauders.py\" rel=\"nofollow\">extraterrestrial_marauders</a>)</li>\n<li><code>ShockWave-v{0,1}</code> (<a href=\"https://github.com/deepmind/pycolab/blob/master/pycolab/examples/shockwave.py\" rel=\"nofollow\">shockwave</a>)</li>\n<li><code>Aperture-v{0,1,2}</code> (<a href=\"https://github.com/deepmind/pycolab/blob/master/pycolab/examples/aperture.py\" rel=\"nofollow\">aperture</a>)</li>\n<li><code>Apprehend-v0</code> (<a href=\"https://github.com/deepmind/pycolab/blob/master/pycolab/examples/apprehend.py\" rel=\"nofollow\">apprehend</a>)</li>\n<li><code>BetterScrollyMaze-v{0,1,2}</code> (<a href=\"https://github.com/deepmind/pycolab/blob/master/pycolab/examples/better_scrolly_maze.py\" rel=\"nofollow\">better_scrolly_maze</a>)</li>\n<li><code>ChainWalk-v0</code> (<a href=\"https://github.com/deepmind/pycolab/blob/master/pycolab/examples/classics/chain_walk.py\" rel=\"nofollow\">classics/chain_walk</a>)</li>\n<li><code>CliffWalk-v0</code> (<a href=\"https://github.com/deepmind/pycolab/blob/master/pycolab/examples/classics/cliff_walk.py\" rel=\"nofollow\">classics/cliff_walk</a>)</li>\n<li><code>FourRooms-v0</code> (<a href=\"https://github.com/deepmind/pycolab/blob/master/pycolab/examples/classics/four_rooms.py\" rel=\"nofollow\">classics/four_rooms</a>)</li>\n</ul>\n<h2>Running an Example</h2>\n<p>Rendering the <code>ExtraterrestrialMarauders-v0</code> with random actions:</p>\n<pre>$ python -m gym_pycolab.pycolab_games --game extraterrestrial_marauders\n</pre>\n<h1>Development</h1>\n<p>Development is started with <code>pipenv</code>.</p>\n<pre>$ pipenv install\n$ pipenv shell\n</pre>\n<h1>Testing</h1>\n<pre>$ python -m gym_pycolab.pycolab_env_test\n</pre>\n\n          </div>"}, "last_serial": 5495680, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "762bcdbe169ec9c3796cc9b6fac014fe", "sha256": "98c62924f4b08cb1e2325a4c17d77a4d5c4ded5e8736ca18307911f006ee37f9"}, "downloads": -1, "filename": "gym-pycolab-1.0.0.tar.gz", "has_sig": false, "md5_digest": "762bcdbe169ec9c3796cc9b6fac014fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6857, "upload_time": "2019-07-06T21:33:43", "upload_time_iso_8601": "2019-07-06T21:33:43.286481Z", "url": "https://files.pythonhosted.org/packages/a5/8b/9b575079e358a0b92fb9d9ac2bc0d42cbcace96d9dff50cb94490a665881/gym-pycolab-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "762bcdbe169ec9c3796cc9b6fac014fe", "sha256": "98c62924f4b08cb1e2325a4c17d77a4d5c4ded5e8736ca18307911f006ee37f9"}, "downloads": -1, "filename": "gym-pycolab-1.0.0.tar.gz", "has_sig": false, "md5_digest": "762bcdbe169ec9c3796cc9b6fac014fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6857, "upload_time": "2019-07-06T21:33:43", "upload_time_iso_8601": "2019-07-06T21:33:43.286481Z", "url": "https://files.pythonhosted.org/packages/a5/8b/9b575079e358a0b92fb9d9ac2bc0d42cbcace96d9dff50cb94490a665881/gym-pycolab-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:00 2020"}