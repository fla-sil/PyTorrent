{"info": {"author": "Plone Collective", "author_email": "product-developers@lists.plone.org", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\n============\nPDFtoOCR processes text in PDF documents using OCR. This is needed\nwhen text cannot be extracted from a (scanned) PDF. PDFtoOCR uses content rules to \nschedule the OCR processing. The processing cannot be done one the fly, for \nexample with a custom TextIndexNG plugin. Processing large PDF documents using \nOCR is a time/processor consuming task.\n\nConfiguration\n=============\n\nOn the operating system\n-----------------------\nPDF to Text uses three tools that are available for under Linux. The \ncooperation with the tools is only tested in Debian. But it the will probably \nwork in in other \\*NIX enviroments.\n\nInstall requirements, PDF to OCR uses the following programs:\n\n- pdftotext, checks if OCR processing is necessary\n- ghostscript, converts the pdf documents to tiff images\n- tesseract,  does the OCR processing (make sure you've got all language packs!*)\n\nSet the environment variables:\n\n- The environment variable *$GS* must be set and point to the ghostscript binary.\n- The environment variable *$TESSERACT* must be set and point to the tesseract binary.\n\n\nOn the Plone site\n-----------------\n\nAdd a content rule\n\n- Event trigger: Object modified and object added\n- Condition: Content type is file\n- Actions: Store OCR output from a PDF in searchable text\n\nAssign content rule to a Plone site or a folder\n\nInstall cron4plone and add the following cronjob: portal/@@do_pdf_ocr_index\n\nUsage\n=====\nJust add a file with a PDF document. Optionally you can select the language so the OCR\nengine can use dictionaries when indexing. Only a limited amount of languages are\nsupported by Tesseract.\n\nAn overview of indexed documents is found in the control panel, 'PDF to OCR status'.\nIn this status page (re)indexing of documents is possible.\n\n\nPDF Processing\n==============\n\nEach time a file is added or modified  the unique id (uid) of the file is added\nto a queue. This queue is persistent and has two functions, for indexing en reindexing. \nThe indexing function uses the queue to process the documents. When reindexing is used all\nfiles in the queue history are processed.\n\nIf the text from a PDF document is extracted using pdftotext no OCR is done. Else the\nOCR extracts the text and stores it the content type file. The ATFile is patched with an \nextra field to accommodate the extracted text and the language of the PDF.\n\nPage views:\n\n- @@do_pdf_ocr_index - indexes documents in the queue\n- @@do_pdf_ocr_reindex - reindexes all pdf documents in the Plone site\n- @@pdf_ocr_status - Show the queue and a history 10 documents\n\n\nFuther reading:\n===============\n\nhttp://plone.org/documentation/how-to/ocr-in-plone-using-tesseract-ocr/\nhttp://code.google.com/p/tesseract-ocr/\n\n* Make sure you don't got empty language files in /usr/local/share/tessdata/\n\nMaybe a good alternative in the future, uses tesseract but hard to setup and\nstill too much beta: \nhttp://sites.google.com/site/ocropus/\n\n \n\nChangelog\n=========\n\n1.1\n----------------------\n\n* Compatible with Plone 4\n* Added a control panel page\n* Field 'text from ocr' is added using archetypes.schemaextender instead of a monkey patch\n* No more old style external method for doing things on the filesystem.\n* Added doc tests\n\n\n1.0 - First release\n-------------------\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.plone.org/svn/collective/", "keywords": "web zope plone theme", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "Products.PDFtoOCR", "package_url": "https://pypi.org/project/Products.PDFtoOCR/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Products.PDFtoOCR/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://svn.plone.org/svn/collective/"}, "release_url": "https://pypi.org/project/Products.PDFtoOCR/1.1/", "requires_dist": null, "requires_python": null, "summary": "PDFtoOCR does OCR processing on PDF documents. The text from OCR is used in the search results.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>PDFtoOCR processes text in PDF documents using OCR. This is needed\nwhen text cannot be extracted from a (scanned) PDF. PDFtoOCR uses content rules to\nschedule the OCR processing. The processing cannot be done one the fly, for\nexample with a custom TextIndexNG plugin. Processing large PDF documents using\nOCR is a time/processor consuming task.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<div id=\"on-the-operating-system\">\n<h3>On the operating system</h3>\n<p>PDF to Text uses three tools that are available for under Linux. The\ncooperation with the tools is only tested in Debian. But it the will probably\nwork in in other *NIX enviroments.</p>\n<p>Install requirements, PDF to OCR uses the following programs:</p>\n<ul>\n<li>pdftotext, checks if OCR processing is necessary</li>\n<li>ghostscript, converts the pdf documents to tiff images</li>\n<li>tesseract,  does the OCR processing (make sure you\u2019ve got all language packs!*)</li>\n</ul>\n<p>Set the environment variables:</p>\n<ul>\n<li>The environment variable <em>$GS</em> must be set and point to the ghostscript binary.</li>\n<li>The environment variable <em>$TESSERACT</em> must be set and point to the tesseract binary.</li>\n</ul>\n</div>\n<div id=\"on-the-plone-site\">\n<h3>On the Plone site</h3>\n<p>Add a content rule</p>\n<ul>\n<li>Event trigger: Object modified and object added</li>\n<li>Condition: Content type is file</li>\n<li>Actions: Store OCR output from a PDF in searchable text</li>\n</ul>\n<p>Assign content rule to a Plone site or a folder</p>\n<p>Install cron4plone and add the following cronjob: portal/@@do_pdf_ocr_index</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Just add a file with a PDF document. Optionally you can select the language so the OCR\nengine can use dictionaries when indexing. Only a limited amount of languages are\nsupported by Tesseract.</p>\n<p>An overview of indexed documents is found in the control panel, \u2018PDF to OCR status\u2019.\nIn this status page (re)indexing of documents is possible.</p>\n</div>\n<div id=\"pdf-processing\">\n<h2>PDF Processing</h2>\n<p>Each time a file is added or modified  the unique id (uid) of the file is added\nto a queue. This queue is persistent and has two functions, for indexing en reindexing.\nThe indexing function uses the queue to process the documents. When reindexing is used all\nfiles in the queue history are processed.</p>\n<p>If the text from a PDF document is extracted using pdftotext no OCR is done. Else the\nOCR extracts the text and stores it the content type file. The ATFile is patched with an\nextra field to accommodate the extracted text and the language of the PDF.</p>\n<p>Page views:</p>\n<ul>\n<li>@@do_pdf_ocr_index - indexes documents in the queue</li>\n<li>@@do_pdf_ocr_reindex - reindexes all pdf documents in the Plone site</li>\n<li>@@pdf_ocr_status - Show the queue and a history 10 documents</li>\n</ul>\n</div>\n<div id=\"futher-reading\">\n<h2>Futher reading:</h2>\n<p><a href=\"http://plone.org/documentation/how-to/ocr-in-plone-using-tesseract-ocr/\" rel=\"nofollow\">http://plone.org/documentation/how-to/ocr-in-plone-using-tesseract-ocr/</a>\n<a href=\"http://code.google.com/p/tesseract-ocr/\" rel=\"nofollow\">http://code.google.com/p/tesseract-ocr/</a></p>\n<ul>\n<li>Make sure you don\u2019t got empty language files in /usr/local/share/tessdata/</li>\n</ul>\n<p>Maybe a good alternative in the future, uses tesseract but hard to setup and\nstill too much beta:\n<a href=\"http://sites.google.com/site/ocropus/\" rel=\"nofollow\">http://sites.google.com/site/ocropus/</a></p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.1</h3>\n<ul>\n<li>Compatible with Plone 4</li>\n<li>Added a control panel page</li>\n<li>Field \u2018text from ocr\u2019 is added using archetypes.schemaextender instead of a monkey patch</li>\n<li>No more old style external method for doing things on the filesystem.</li>\n<li>Added doc tests</li>\n</ul>\n</div>\n<div id=\"first-release\">\n<h3>1.0 - First release</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 785062, "releases": {"1.0": [], "1.0dev": [{"comment_text": "", "digests": {"md5": "efb60d4eba0a7ef2603af2960741bb00", "sha256": "5bef161fe7099a345a464927eb5bd4c88f1c10c5e8eabf18d44fb8f030c1870e"}, "downloads": -1, "filename": "Products.PDFtoOCR-1.0dev.tar.gz", "has_sig": false, "md5_digest": "efb60d4eba0a7ef2603af2960741bb00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16641, "upload_time": "2009-06-17T16:16:50", "upload_time_iso_8601": "2009-06-17T16:16:50.417679Z", "url": "https://files.pythonhosted.org/packages/a6/d7/48b9ba5ff300034fba39438644634bc05bf3d29fae1a27230ddebf26d9e2/Products.PDFtoOCR-1.0dev.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "f536114bbba215151cf77f7c64a67762", "sha256": "e3954b64b6f79303e715904924930d6a5c8f593d8b6797e51a2cebb79d09352e"}, "downloads": -1, "filename": "Products.PDFtoOCR-1.1.tar.gz", "has_sig": false, "md5_digest": "f536114bbba215151cf77f7c64a67762", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17875, "upload_time": "2010-03-16T12:52:20", "upload_time_iso_8601": "2010-03-16T12:52:20.033361Z", "url": "https://files.pythonhosted.org/packages/2a/9b/e05b5c48c220adec9491ccad94d35a69ad554f83f30788afe43493a5019e/Products.PDFtoOCR-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f536114bbba215151cf77f7c64a67762", "sha256": "e3954b64b6f79303e715904924930d6a5c8f593d8b6797e51a2cebb79d09352e"}, "downloads": -1, "filename": "Products.PDFtoOCR-1.1.tar.gz", "has_sig": false, "md5_digest": "f536114bbba215151cf77f7c64a67762", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17875, "upload_time": "2010-03-16T12:52:20", "upload_time_iso_8601": "2010-03-16T12:52:20.033361Z", "url": "https://files.pythonhosted.org/packages/2a/9b/e05b5c48c220adec9491ccad94d35a69ad554f83f30788afe43493a5019e/Products.PDFtoOCR-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:06 2020"}