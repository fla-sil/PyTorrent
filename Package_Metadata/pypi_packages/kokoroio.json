{"info": {"author": "mtwtkman", "author_email": "", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.6"], "description": ".. image:: https://badge.fury.io/py/kokoroio.svg\n    :target: https://badge.fury.io/py/kokoroio\n\n############\nWhat is this\n############\nThis is a client for `kokoro.io <https://kokoro.io/>`_ which is a chat service (maybe going to be) best ever.\n\nI know that you want to join as soon as possible, please ask `me <https://twitter.com/mtwtkman>`_ or `supermomonga-san <https://twitter.com/supermomonga>`_ about how to create account.\n\n############\nRequirements\n############\n- Python3.6+\n- kokoro.io account(using your access token)\n\n########\nInstall\n########\n.. code-block:: bash\n\n   $ pip install kokoroio\n\n#########\nConfigure\n#########\nYou must set an access token to sign in to kokoro.io by three way like follows.\n\n- Set environ path named ``KOKOROIO_ACCESS_TOKEN``.\n- Set your access token to any file your choice and pass it's file name to ``Kokoroio`` constructor as ``env_path``.\n- Pass directly ``Kokoroio`` constructor as ``access_token``.\n\n#####\nUsage\n#####\nOnce you create ``Kokoroio`` instance, you can request from two way syncronous or asyncronous.\n\n.. code-block:: python\n\n   from kokoroio import Kokoroio\n   client = Kokoroio(access_token='xxxxxxx')\n   client.channels.get()  # You received a response!\n\nIf an endpoint requires path parameters, you need to pass path parameters as arguments for request method.\n\n.. code-block:: python\n\n   # Assuming you want to post a message to channel whose channel_id is 'hogehoge'.\n   # In this case, url is `channels/hogehoge`.\n   o = client.channels.send_message(channle_id='hogehoge')\n   # So you can request with a payload.\n   o(message='hi')\n\nAnd you can find every client's methods.\n\n.. code-block:: python\n\n  clients.channels.method_names\n  clients.channels.methods\n\n===================\nSyncronous request\n===================\nYou will get ``requests's HttpResponse`` object.\n\nIf you want to know about response object, please refer `requests doc <http://docs.python-requests.org/en/master/>`_.\n\n-------\nExample\n-------\n.. code-block:: python\n\n   client.channels.get()\n\n===================\nAsyncronous request\n===================\nDifferent from syncronous version, request method has ``a`` prefix like ``channels.aget()`` and you don't need to create new event loop at every request.\n\nYou will get ``aiohttp's ClientResponse`` object because using ``aiohttp`` internally.\n\nIf you want to know about ``aiohttp``, please refer `aiohttp doc <http://aiohttp.readthedocs.io/en/stable/>`_.\n\n-------\nExample\n-------\n.. code-block:: python\n\n   client.channels.aget()\n\n####\nTest\n####\nSorry now I have no test\ud83d\ude2d\n\n############################\nAbout kokoro.io's API detail\n############################\nYou can find all of current API detail from `the official apidoc <https://kokoro.io/apidoc>`_.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mtwtkman/kokoro-io-py", "keywords": "kokoro.io", "license": "WTFPL", "maintainer": "", "maintainer_email": "", "name": "kokoroio", "package_url": "https://pypi.org/project/kokoroio/", "platform": "", "project_url": "https://pypi.org/project/kokoroio/", "project_urls": {"Homepage": "https://github.com/mtwtkman/kokoro-io-py"}, "release_url": "https://pypi.org/project/kokoroio/0.0.3/", "requires_dist": ["requests", "aiohttp", "wheel; extra == 'build'", "flake8; extra == 'dev'", "mypy-lang; extra == 'dev'"], "requires_python": ">=3.6", "summary": "Client for kokoro.io", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/kokoroio\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/kokoroio.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/acbc43b555e3e3a8fd5d3e7eb4ccd2417140bd3b/68747470733a2f2f62616467652e667572792e696f2f70792f6b6f6b6f726f696f2e737667\"></a>\n<div id=\"what-is-this\">\n<h2>What is this</h2>\n<p>This is a client for <a href=\"https://kokoro.io/\" rel=\"nofollow\">kokoro.io</a> which is a chat service (maybe going to be) best ever.</p>\n<p>I know that you want to join as soon as possible, please ask <a href=\"https://twitter.com/mtwtkman\" rel=\"nofollow\">me</a> or <a href=\"https://twitter.com/supermomonga\" rel=\"nofollow\">supermomonga-san</a> about how to create account.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python3.6+</li>\n<li>kokoro.io account(using your access token)</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install kokoroio\n</pre>\n</div>\n<div id=\"configure\">\n<h2>Configure</h2>\n<p>You must set an access token to sign in to kokoro.io by three way like follows.</p>\n<ul>\n<li>Set environ path named <tt>KOKOROIO_ACCESS_TOKEN</tt>.</li>\n<li>Set your access token to any file your choice and pass it\u2019s file name to <tt>Kokoroio</tt> constructor as <tt>env_path</tt>.</li>\n<li>Pass directly <tt>Kokoroio</tt> constructor as <tt>access_token</tt>.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Once you create <tt>Kokoroio</tt> instance, you can request from two way syncronous or asyncronous.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kokoroio</span> <span class=\"kn\">import</span> <span class=\"n\">Kokoroio</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Kokoroio</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"s1\">'xxxxxxx'</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">channels</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>  <span class=\"c1\"># You received a response!</span>\n</pre>\n<p>If an endpoint requires path parameters, you need to pass path parameters as arguments for request method.</p>\n<pre><span class=\"c1\"># Assuming you want to post a message to channel whose channel_id is 'hogehoge'.</span>\n<span class=\"c1\"># In this case, url is `channels/hogehoge`.</span>\n<span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">channels</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">channle_id</span><span class=\"o\">=</span><span class=\"s1\">'hogehoge'</span><span class=\"p\">)</span>\n<span class=\"c1\"># So you can request with a payload.</span>\n<span class=\"n\">o</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s1\">'hi'</span><span class=\"p\">)</span>\n</pre>\n<p>And you can find every client\u2019s methods.</p>\n<pre><span class=\"n\">clients</span><span class=\"o\">.</span><span class=\"n\">channels</span><span class=\"o\">.</span><span class=\"n\">method_names</span>\n<span class=\"n\">clients</span><span class=\"o\">.</span><span class=\"n\">channels</span><span class=\"o\">.</span><span class=\"n\">methods</span>\n</pre>\n<div id=\"syncronous-request\">\n<h3>Syncronous request</h3>\n<p>You will get <tt>requests's HttpResponse</tt> object.</p>\n<p>If you want to know about response object, please refer <a href=\"http://docs.python-requests.org/en/master/\" rel=\"nofollow\">requests doc</a>.</p>\n<div id=\"example\">\n<h4>Example</h4>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">channels</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"asyncronous-request\">\n<h3>Asyncronous request</h3>\n<p>Different from syncronous version, request method has <tt>a</tt> prefix like <tt>channels.aget()</tt> and you don\u2019t need to create new event loop at every request.</p>\n<p>You will get <tt>aiohttp's ClientResponse</tt> object because using <tt>aiohttp</tt> internally.</p>\n<p>If you want to know about <tt>aiohttp</tt>, please refer <a href=\"http://aiohttp.readthedocs.io/en/stable/\" rel=\"nofollow\">aiohttp doc</a>.</p>\n<div id=\"id1\">\n<h4>Example</h4>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">channels</span><span class=\"o\">.</span><span class=\"n\">aget</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n</div>\n<div id=\"test\">\n<h2>Test</h2>\n<p>Sorry now I have no test\ud83d\ude2d</p>\n</div>\n<div id=\"about-kokoro-io-s-api-detail\">\n<h2>About kokoro.io\u2019s API detail</h2>\n<p>You can find all of current API detail from <a href=\"https://kokoro.io/apidoc\" rel=\"nofollow\">the official apidoc</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 3235448, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "23de716f7fa84c71501d68c0b2dc2cd4", "sha256": "3c959e5c632d83daa684deb05e346245456608efcf660c705c97b530ed90590c"}, "downloads": -1, "filename": "kokoroio-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "23de716f7fa84c71501d68c0b2dc2cd4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8191, "upload_time": "2017-10-06T01:38:40", "upload_time_iso_8601": "2017-10-06T01:38:40.378202Z", "url": "https://files.pythonhosted.org/packages/35/4d/6f4383589f3cf15b7150c5328d9d53584a624bd0bdc4942c9304d743cae4/kokoroio-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "df287c1317beae62ae2bae613d3ce184", "sha256": "892e3251291c086165985f3c0144855734ca7d6878d4e16116d213fe490ebbea"}, "downloads": -1, "filename": "kokoroio-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "df287c1317beae62ae2bae613d3ce184", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9259, "upload_time": "2017-10-08T11:39:47", "upload_time_iso_8601": "2017-10-08T11:39:47.883652Z", "url": "https://files.pythonhosted.org/packages/6a/48/7be145f11a6a714bf433d8094b4254c666e6ccb293613f601859d9b5066d/kokoroio-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "96cd0fdfe1103753217677f1003229d1", "sha256": "458a132afd92238d44521509d554f9853ce968ef53072069037a03f10fc7f329"}, "downloads": -1, "filename": "kokoroio-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "96cd0fdfe1103753217677f1003229d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9144, "upload_time": "2017-10-09T06:34:32", "upload_time_iso_8601": "2017-10-09T06:34:32.667885Z", "url": "https://files.pythonhosted.org/packages/2a/d2/2a2a0879e6a558c53cf956459b88c6fd3027e99373626cce956effa0f044/kokoroio-0.0.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "96cd0fdfe1103753217677f1003229d1", "sha256": "458a132afd92238d44521509d554f9853ce968ef53072069037a03f10fc7f329"}, "downloads": -1, "filename": "kokoroio-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "96cd0fdfe1103753217677f1003229d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9144, "upload_time": "2017-10-09T06:34:32", "upload_time_iso_8601": "2017-10-09T06:34:32.667885Z", "url": "https://files.pythonhosted.org/packages/2a/d2/2a2a0879e6a558c53cf956459b88c6fd3027e99373626cce956effa0f044/kokoroio-0.0.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:49:07 2020"}