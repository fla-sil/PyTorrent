{"info": {"author": "Alexander Pletzer and John C Mollis", "author_email": "alexander@gokliya.net", "bugtrack_url": null, "classifiers": [], "description": "\nELLIPT2D: a general purpose 2-D finite element solver \n=====================================================\n\n\nA. Pletzer and J.C. Mollis (pletzer@pppl.gov)\n\nVersion: 1.4 Wed Jun 25 15:18:19 EDT 2003\n\n\nPrerequisites:\n\n- Python 2.2 or later\n- Tkinter\n- A C/C++ compiler (except for .exe Windows installer)\n- jython with Java/Java3D (optional)\n\n\n1. Summary\n----------\n\nELLIPT2D is a Python programming environment for solving 2-D elliptic equations \nof the form - div F . grad v + g v = s where F=((fxx,fxy),(fyx,fyy)), g and s \nare user supplied, possibly complex, functions. Boundary conditions can be of \nDirichlet (v=B), Neumann (n . F . grad v = B) or Robbins type \n(n . F . grad v + A v = B). The trial basis functions are linear over \ntriangles with full support for unstructured meshes. \n\n2. Installation and settings\n----------------------------\n\n\n2.1 Minimal installation\n........................\n\nELLIPT2D is a collection of python scripts. Python must be installed on your\nplatform with Tkinter activated. Python is free and can be obtained at \nhttp://www.python.org. Check the installations to find out how to activate\nTkinter (python is automatically distributed with Tkinter on Win32). \nNote that if you have to compile shared libraries (see 2.3) then you will \nalso need the Python source distribution (i.e. have access to Python.h and \nother headers). \n\nThe scripts can be accessed anywhere provided the PYTHONPATH environment \nvariable is properly set (see below). Alternatively, you can move the scripts \nby hand to /usr/local/lib/python2.2/site-packages, or equivalent. Under\nWindows the installation directory is often C:\\Python22\\Lib\\site-packages.\n\n\n2.2 Triangulation and fast solver\n.................................\n\nType \n\npython setup.py install\n\nThis will also build shared objects (dll on Windows) of\n\n- triangle: A robust triangulation routine from \nhttp://www.cs.cmu.edu/~quake/triangle.html.\n\n\n- superlu: A linear sparse matrix solver from http://www.nersc.gov/~xiaoye/SuperLU/. \n\n\n\n3. Tests\n--------\n\nType the following command (under UNIX or Cygwin)\n\ntest.sh\n\nThis will exercize all the scripts.\n\n4. Graphics\n-----------\n\nSimple Tk graphics routines are provided. For high quality visualization,\ndownload openDX from http://www.opendx.org, which is also free, as Ellipt2d\ngenerates results in the DX format. As an alternative, Ellipt2d also \ngenerates output in the UCD format of Avs/Express (http://www.avs.com). \nAvs/Express is a commercial product. \n\n\n5. User guide\n-------------\n\nAll ellipt2d classes and functions are documented in HTMLdoc. To check the \ncontent of a python file, run doc.py [-a] <file>.py. \n\nExamples of ELLIPT2D scripts can be found under Demos.\n\nEnjoy,\n\nAlex.\n\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://ellipt2d.sourceforge.net", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "ellipt2d", "package_url": "https://pypi.org/project/ellipt2d/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ellipt2d/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://ellipt2d.sourceforge.net"}, "release_url": "https://pypi.org/project/ellipt2d/3.0.1/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "3.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br>ELLIPT2D: a general purpose 2-D finite element solver <br>=====================================================<br><br><br>A. Pletzer and J.C. Mollis (pletzer@pppl.gov)<br><br>Version: 1.4 Wed Jun 25 15:18:19 EDT 2003<br><br><br>Prerequisites:<br><br>- Python 2.2 or later<br>- Tkinter<br>- A C/C++ compiler (except for .exe Windows installer)<br>- jython with Java/Java3D (optional)<br><br><br>1. Summary<br>----------<br><br>ELLIPT2D is a Python programming environment for solving 2-D elliptic equations <br>of the form - div F . grad v + g v = s where F=((fxx,fxy),(fyx,fyy)), g and s <br>are user supplied, possibly complex, functions. Boundary conditions can be of <br>Dirichlet (v=B), Neumann (n . F . grad v = B) or Robbins type <br>(n . F . grad v + A v = B). The trial basis functions are linear over <br>triangles with full support for unstructured meshes. <br><br>2. Installation and settings<br>----------------------------<br><br><br>2.1 Minimal installation<br>........................<br><br>ELLIPT2D is a collection of python scripts. Python must be installed on your<br>platform with Tkinter activated. Python is free and can be obtained at <br>http://www.python.org. Check the installations to find out how to activate<br>Tkinter (python is automatically distributed with Tkinter on Win32). <br>Note that if you have to compile shared libraries (see 2.3) then you will <br>also need the Python source distribution (i.e. have access to Python.h and <br>other headers). <br><br>The scripts can be accessed anywhere provided the PYTHONPATH environment <br>variable is properly set (see below). Alternatively, you can move the scripts <br>by hand to /usr/local/lib/python2.2/site-packages, or equivalent. Under<br>Windows the installation directory is often C:\\Python22\\Lib\\site-packages.<br><br><br>2.2 Triangulation and fast solver<br>.................................<br><br>Type <br><br>python setup.py install<br><br>This will also build shared objects (dll on Windows) of<br><br>- triangle: A robust triangulation routine from <br>http://www.cs.cmu.edu/~quake/triangle.html.<br><br><br>- superlu: A linear sparse matrix solver from http://www.nersc.gov/~xiaoye/SuperLU/. <br><br><br><br>3. Tests<br>--------<br><br>Type the following command (under UNIX or Cygwin)<br><br>test.sh<br><br>This will exercize all the scripts.<br><br>4. Graphics<br>-----------<br><br>Simple Tk graphics routines are provided. For high quality visualization,<br>download openDX from http://www.opendx.org, which is also free, as Ellipt2d<br>generates results in the DX format. As an alternative, Ellipt2d also <br>generates output in the UCD format of Avs/Express (http://www.avs.com). <br>Avs/Express is a commercial product. <br><br><br>5. User guide<br>-------------<br><br>All ellipt2d classes and functions are documented in HTMLdoc. To check the <br>content of a python file, run doc.py [-a] &lt;file&gt;.py. <br><br>Examples of ELLIPT2D scripts can be found under Demos.<br><br>Enjoy,<br><br>Alex.<br><br><br><br><br>\n          </div>"}, "last_serial": 1015427, "releases": {"1.9": [{"comment_text": "", "digests": {"md5": "faa89f83f14663b2eb3ea6a64b5982d9", "sha256": "304057eb20dfade32e2094bbd88efbe477cb0c926fef50443a92f2e9cb091b2a"}, "downloads": -1, "filename": "ellipt2d-1.9.tar.gz", "has_sig": false, "md5_digest": "faa89f83f14663b2eb3ea6a64b5982d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 374783, "upload_time": "2014-02-02T14:21:46", "upload_time_iso_8601": "2014-02-02T14:21:46.499836Z", "url": "https://files.pythonhosted.org/packages/ac/91/f01944b1228a8466c357bc659ae77aa97393092663ce53ff8ecddb66e241/ellipt2d-1.9.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "59c40b9f1b08889e92a908072c3e4388", "sha256": "ba559dc30bb5374f9a2e7368589edb410d94413de9b44e589c3e705b2413997e"}, "downloads": -1, "filename": "ellipt2d-3.0.1.tar.gz", "has_sig": false, "md5_digest": "59c40b9f1b08889e92a908072c3e4388", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 925718, "upload_time": "2014-02-28T23:12:57", "upload_time_iso_8601": "2014-02-28T23:12:57.186971Z", "url": "https://files.pythonhosted.org/packages/26/75/702d88a007d1a005c70b593e3c66a85f11ffd30d9d87bae66adee5b1b141/ellipt2d-3.0.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f6f5194709c56ea6285e91dd4331373", "sha256": "d4eec4ea0f8df95d85907a8b4fc49d7165e0a068f08fed99f273e48d21ca3b6c"}, "downloads": -1, "filename": "ellipt2d-3.0.1.zip", "has_sig": false, "md5_digest": "8f6f5194709c56ea6285e91dd4331373", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1083418, "upload_time": "2014-02-28T23:13:01", "upload_time_iso_8601": "2014-02-28T23:13:01.241557Z", "url": "https://files.pythonhosted.org/packages/bd/a4/8bf274b57627c11b2dd1513e837f53328287dd80c42b1875d47dd3d237b7/ellipt2d-3.0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "59c40b9f1b08889e92a908072c3e4388", "sha256": "ba559dc30bb5374f9a2e7368589edb410d94413de9b44e589c3e705b2413997e"}, "downloads": -1, "filename": "ellipt2d-3.0.1.tar.gz", "has_sig": false, "md5_digest": "59c40b9f1b08889e92a908072c3e4388", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 925718, "upload_time": "2014-02-28T23:12:57", "upload_time_iso_8601": "2014-02-28T23:12:57.186971Z", "url": "https://files.pythonhosted.org/packages/26/75/702d88a007d1a005c70b593e3c66a85f11ffd30d9d87bae66adee5b1b141/ellipt2d-3.0.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f6f5194709c56ea6285e91dd4331373", "sha256": "d4eec4ea0f8df95d85907a8b4fc49d7165e0a068f08fed99f273e48d21ca3b6c"}, "downloads": -1, "filename": "ellipt2d-3.0.1.zip", "has_sig": false, "md5_digest": "8f6f5194709c56ea6285e91dd4331373", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1083418, "upload_time": "2014-02-28T23:13:01", "upload_time_iso_8601": "2014-02-28T23:13:01.241557Z", "url": "https://files.pythonhosted.org/packages/bd/a4/8bf274b57627c11b2dd1513e837f53328287dd80c42b1875d47dd3d237b7/ellipt2d-3.0.1.zip", "yanked": false}], "timestamp": "Fri May  8 00:46:48 2020"}