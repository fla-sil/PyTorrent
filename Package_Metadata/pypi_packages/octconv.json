{"info": {"author": "BrainCreators", "author_email": "miguel@braincreators.com", "bugtrack_url": null, "classifiers": [], "description": "# Octave Convolution\n\n[![Build Status](https://travis-ci.org/braincreators/octconv.svg?branch=master)](https://travis-ci.org/braincreators/octconv)\n\nImplementation of [Drop an Octave: Reducing Spatial Redundancy in\nConvolutional Neural Networks with Octave Convolution](https://arxiv.org/pdf/1904.05049.pdf)\n\n![schema](assets/octconv.png)\n\n## Paper Abstract\n\nIn natural images, information is conveyed at different frequencies \nwhere higher frequencies are usually encoded with fine details and \nlower frequencies are usually encoded with global structures. \nSimilarly, the output feature maps of a convolution layer can also be \nseen as a mixture of information at different frequencies. \nIn this work, we propose to factorize the mixed feature maps by their \nfrequencies, and design a novel Octave Convolution (OctConv) operation \nto store and process feature maps that vary spatially \u201cslower\u201d at a lower \nspatial resolution reducing both memory and computation cost. Unlike existing \nmulti-scale methods, OctConv is formulated as a single, generic, plug-and-play \nconvolutional unit that can be used as a direct replacement \nof (vanilla) convolutions without any adjustments in the network architecture. \nIt is also orthogonal and complementary to methods that suggest better \ntopologies or reduce channel-wise redundancy like group or depth-wise convolutions. \nWe experimentally show that by simply replacing convolutions with OctConv, \nwe can consistently boost accuracy for both image and video recognition tasks, \nwhile reducing memory and computational cost. \nAn OctConv-equipped ResNet-152 can achieve 82.9% top-1 classification accuracy on\n ImageNet with merely 22.2 GFLOPs.\n\n\n## Installation \n\nFrom PyPI:\n\n    pip install octconv\n\nBleeding edge version from github:\n\n    pip install git+https://github.com/braincreators/octconv.git#egg=octconv\n\n## Usage\n\n```python\nimport torch\nfrom octconv import OctConv2d\n\n\n# (batch, channels, height, width)\nx = torch.rand(5, 3, 200, 200)\n\nconv1 = OctConv2d(in_channels=3, out_channels=10, kernel_size=3, alpha=(0., 0.5), padding=1)\nconv2 = OctConv2d(in_channels=10, out_channels=20, kernel_size=7, alpha=(0.5, 0.8), padding=3)\nconv3 = OctConv2d(in_channels=20, out_channels=1, kernel_size=3, alpha=(0.8, 0.), padding=1)\n\nout = conv3(conv2(conv1(x)))  # shape: (5, 1, 200, 200)\n```\n\n## Original implementation\n\n - [facebookresearch/OctConv (MXNET)](https://github.com/facebookresearch/OctConv)\n\n## Citation\n\n```\n@article{chen2019drop,\n  title={Drop an Octave: Reducing Spatial Redundancy in Convolutional Neural Networks with Octave Convolution},\n  author={Chen, Yunpeng and Fan, Haoqi and Xu, Bing and Yan, Zhicheng and Kalantidis, Yannis and Rohrbach, Marcus and Yan, Shuicheng and Feng, Jiashi},\n  journal={arXiv preprint arXiv:1904.05049},\n  year={2019}\n}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/braincreators/octconv", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "octconv", "package_url": "https://pypi.org/project/octconv/", "platform": "", "project_url": "https://pypi.org/project/octconv/", "project_urls": {"Homepage": "https://github.com/braincreators/octconv"}, "release_url": "https://pypi.org/project/octconv/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Octave Convolution Implementation in PyTorch", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Octave Convolution</h1>\n<p><a href=\"https://travis-ci.org/braincreators/octconv\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e8d5b34d8c74939cdc865209bbe4d09f65d7cd21/68747470733a2f2f7472617669732d63692e6f72672f627261696e63726561746f72732f6f6374636f6e762e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Implementation of <a href=\"https://arxiv.org/pdf/1904.05049.pdf\" rel=\"nofollow\">Drop an Octave: Reducing Spatial Redundancy in\nConvolutional Neural Networks with Octave Convolution</a></p>\n<p><img alt=\"schema\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/165067990a72aeb1d4625b8ee214e541b2281be3/6173736574732f6f6374636f6e762e706e67\"></p>\n<h2>Paper Abstract</h2>\n<p>In natural images, information is conveyed at different frequencies\nwhere higher frequencies are usually encoded with fine details and\nlower frequencies are usually encoded with global structures.\nSimilarly, the output feature maps of a convolution layer can also be\nseen as a mixture of information at different frequencies.\nIn this work, we propose to factorize the mixed feature maps by their\nfrequencies, and design a novel Octave Convolution (OctConv) operation\nto store and process feature maps that vary spatially \u201cslower\u201d at a lower\nspatial resolution reducing both memory and computation cost. Unlike existing\nmulti-scale methods, OctConv is formulated as a single, generic, plug-and-play\nconvolutional unit that can be used as a direct replacement\nof (vanilla) convolutions without any adjustments in the network architecture.\nIt is also orthogonal and complementary to methods that suggest better\ntopologies or reduce channel-wise redundancy like group or depth-wise convolutions.\nWe experimentally show that by simply replacing convolutions with OctConv,\nwe can consistently boost accuracy for both image and video recognition tasks,\nwhile reducing memory and computational cost.\nAn OctConv-equipped ResNet-152 can achieve 82.9% top-1 classification accuracy on\nImageNet with merely 22.2 GFLOPs.</p>\n<h2>Installation</h2>\n<p>From PyPI:</p>\n<pre><code>pip install octconv\n</code></pre>\n<p>Bleeding edge version from github:</p>\n<pre><code>pip install git+https://github.com/braincreators/octconv.git#egg=octconv\n</code></pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">octconv</span> <span class=\"kn\">import</span> <span class=\"n\">OctConv2d</span>\n\n\n<span class=\"c1\"># (batch, channels, height, width)</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">)</span>\n\n<span class=\"n\">conv1</span> <span class=\"o\">=</span> <span class=\"n\">OctConv2d</span><span class=\"p\">(</span><span class=\"n\">in_channels</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">out_channels</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">kernel_size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">conv2</span> <span class=\"o\">=</span> <span class=\"n\">OctConv2d</span><span class=\"p\">(</span><span class=\"n\">in_channels</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">out_channels</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">kernel_size</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">),</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">conv3</span> <span class=\"o\">=</span> <span class=\"n\">OctConv2d</span><span class=\"p\">(</span><span class=\"n\">in_channels</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">out_channels</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">kernel_size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">),</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">conv3</span><span class=\"p\">(</span><span class=\"n\">conv2</span><span class=\"p\">(</span><span class=\"n\">conv1</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)))</span>  <span class=\"c1\"># shape: (5, 1, 200, 200)</span>\n</pre>\n<h2>Original implementation</h2>\n<ul>\n<li><a href=\"https://github.com/facebookresearch/OctConv\" rel=\"nofollow\">facebookresearch/OctConv (MXNET)</a></li>\n</ul>\n<h2>Citation</h2>\n<pre><code>@article{chen2019drop,\n  title={Drop an Octave: Reducing Spatial Redundancy in Convolutional Neural Networks with Octave Convolution},\n  author={Chen, Yunpeng and Fan, Haoqi and Xu, Bing and Yan, Zhicheng and Kalantidis, Yannis and Rohrbach, Marcus and Yan, Shuicheng and Feng, Jiashi},\n  journal={arXiv preprint arXiv:1904.05049},\n  year={2019}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 6415722, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6e275aa1e9d05581d2211efbb6b46ec3", "sha256": "6e9e33d9232fdee60468b74fd2aa4bfebe3af7425e671d08af7b2a260ffd5bbd"}, "downloads": -1, "filename": "octconv-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6e275aa1e9d05581d2211efbb6b46ec3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3314, "upload_time": "2019-05-01T12:32:29", "upload_time_iso_8601": "2019-05-01T12:32:29.339821Z", "url": "https://files.pythonhosted.org/packages/72/aa/f62f92bdea99ef05a277100ff55fd3bb76f0acb1a1c8c873d75def7ea681/octconv-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "62621117fc1899e91577ea4f359f9c90", "sha256": "4d2378f67b4cd7670dce09e91dd5892073cb60f34d9f7fd44d32b3afa90be4cd"}, "downloads": -1, "filename": "octconv-0.2.0-py3.6.egg", "has_sig": false, "md5_digest": "62621117fc1899e91577ea4f359f9c90", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 7255, "upload_time": "2020-01-08T14:46:23", "upload_time_iso_8601": "2020-01-08T14:46:23.712786Z", "url": "https://files.pythonhosted.org/packages/7d/6d/81838e17f9a05d00c08c46249a127f22965e4d76b8ab0bb1b410c9e49c46/octconv-0.2.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec2074e8613903a43178656509e258ef", "sha256": "e63c86f2d3f819191ce3aa84eddc9c46016965686fdc4d190fb96df6fbd0d5c5"}, "downloads": -1, "filename": "octconv-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ec2074e8613903a43178656509e258ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4302, "upload_time": "2020-01-08T14:45:41", "upload_time_iso_8601": "2020-01-08T14:45:41.256794Z", "url": "https://files.pythonhosted.org/packages/33/c7/b5ea3d12ba1954e48d9bc5beaf998bcc11478483a76452c5fbdbfe588a6d/octconv-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "62621117fc1899e91577ea4f359f9c90", "sha256": "4d2378f67b4cd7670dce09e91dd5892073cb60f34d9f7fd44d32b3afa90be4cd"}, "downloads": -1, "filename": "octconv-0.2.0-py3.6.egg", "has_sig": false, "md5_digest": "62621117fc1899e91577ea4f359f9c90", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 7255, "upload_time": "2020-01-08T14:46:23", "upload_time_iso_8601": "2020-01-08T14:46:23.712786Z", "url": "https://files.pythonhosted.org/packages/7d/6d/81838e17f9a05d00c08c46249a127f22965e4d76b8ab0bb1b410c9e49c46/octconv-0.2.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec2074e8613903a43178656509e258ef", "sha256": "e63c86f2d3f819191ce3aa84eddc9c46016965686fdc4d190fb96df6fbd0d5c5"}, "downloads": -1, "filename": "octconv-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ec2074e8613903a43178656509e258ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4302, "upload_time": "2020-01-08T14:45:41", "upload_time_iso_8601": "2020-01-08T14:45:41.256794Z", "url": "https://files.pythonhosted.org/packages/33/c7/b5ea3d12ba1954e48d9bc5beaf998bcc11478483a76452c5fbdbfe588a6d/octconv-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:37 2020"}