{"info": {"author": "Martin Roelfs", "author_email": "martin.roelfs@kuleuven.be", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "============\nDeconvoluted\n============\n\n\n.. image:: https://img.shields.io/pypi/v/deconvoluted.svg\n        :target: https://pypi.python.org/pypi/deconvoluted\n\n.. image:: https://img.shields.io/travis/tbuli/deconvoluted.svg\n        :target: https://travis-ci.org/tbuli/deconvoluted\n\n.. image:: https://readthedocs.org/projects/deconvoluted/badge/?version=latest\n        :target: https://deconvoluted.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\n\n\nDeconvoluted makes performing numerical integral transforms simple and pythonic!\n\n\n* Free software: MIT license\n* Documentation: https://deconvoluted.readthedocs.io.\n\n\nFeatures\n--------\n\nFourier Transforms\n~~~~~~~~~~~~~~~~~~\n\nAs a first example, let's perform a Fourier transform:\n\n.. code-block:: python\n\n    t = np.linspace(0, 10, 201)\n    f = np.sin(3 * 2 * np.pi * t)\n    F, nu = fourier_transform(f, t)\n\nBy default, Fourier transforms use Fourier coefficients `a=0`,\n`b=-2\\pi`. Using another convention is simple:\n\n.. code-block:: python\n\n    F, omega = fourier_transform(f, t, convention=(-1, 1))\n\nAs a physicist myself, I therefore switch the labelling of the output from\n`\\nu` for frequency, to `\\omega` for angular frequency.\n\nPerforming multidimensional transforms is just as easy. For example:\n\n.. code-block:: python\n\n    F_pq, p, q = fourier_transform(f_xy, x, y)\n\ntransforms both `x` and `y` at the same time.\nTransforming only one of the two variables can be done simply by setting those\nthat shouldn't transform to ``None``:\n\n.. code-block:: python\n\n    F_py, p = fourier_transform(f_xy, x, None)\n    F_xq, q = fourier_transform(f_xy, None, y)\n\nSee the documentation for more examples!\n\n\n=======\nHistory\n=======\n\n0.1.1 (2019-06-05)\n------------------\n\n* Implemented support for different FT conventions.\n\n0.1.0 (2019-06-03)\n------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tbuli/deconvoluted", "keywords": "deconvoluted", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "deconvoluted", "package_url": "https://pypi.org/project/deconvoluted/", "platform": "", "project_url": "https://pypi.org/project/deconvoluted/", "project_urls": {"Homepage": "https://github.com/tbuli/deconvoluted"}, "release_url": "https://pypi.org/project/deconvoluted/0.1.1/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Deconvoluted makes performing integral transforms simple and pythonic!", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"deconvoluted\">\n<h2>Deconvoluted</h2>\n<a href=\"https://pypi.python.org/pypi/deconvoluted\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/deconvoluted.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35543cd971ddebaab22e832338822fd6f1395ddc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6465636f6e766f6c757465642e737667\"></a>\n<a href=\"https://travis-ci.org/tbuli/deconvoluted\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/tbuli/deconvoluted.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ba9fe84d7251a1b37a5f685a4b90092b8d95118/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7462756c692f6465636f6e766f6c757465642e737667\"></a>\n<a href=\"https://deconvoluted.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3a548a67f75a1868a2343c72d9a3fee6ad12c7d/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6465636f6e766f6c757465642f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>Deconvoluted makes performing numerical integral transforms simple and pythonic!</p>\n<ul>\n<li>Free software: MIT license</li>\n<li>Documentation: <a href=\"https://deconvoluted.readthedocs.io\" rel=\"nofollow\">https://deconvoluted.readthedocs.io</a>.</li>\n</ul>\n<div id=\"features\">\n<h3>Features</h3>\n<h3 id=\"fourier-transforms\"><span class=\"section-subtitle\">Fourier Transforms</span></h3>\n<p>As a first example, let\u2019s perform a Fourier transform:</p>\n<pre><span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">201</span><span class=\"p\">)</span>\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"mi\">3</span> <span class=\"o\">*</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">*</span> <span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"n\">F</span><span class=\"p\">,</span> <span class=\"n\">nu</span> <span class=\"o\">=</span> <span class=\"n\">fourier_transform</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">)</span>\n</pre>\n<p>By default, Fourier transforms use Fourier coefficients <cite>a=0</cite>,\n<cite>b=-2pi</cite>. Using another convention is simple:</p>\n<pre><span class=\"n\">F</span><span class=\"p\">,</span> <span class=\"n\">omega</span> <span class=\"o\">=</span> <span class=\"n\">fourier_transform</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">convention</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n</pre>\n<p>As a physicist myself, I therefore switch the labelling of the output from\n<cite>nu</cite> for frequency, to <cite>omega</cite> for angular frequency.</p>\n<p>Performing multidimensional transforms is just as easy. For example:</p>\n<pre><span class=\"n\">F_pq</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">fourier_transform</span><span class=\"p\">(</span><span class=\"n\">f_xy</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n</pre>\n<p>transforms both <cite>x</cite> and <cite>y</cite> at the same time.\nTransforming only one of the two variables can be done simply by setting those\nthat shouldn\u2019t transform to <tt>None</tt>:</p>\n<pre><span class=\"n\">F_py</span><span class=\"p\">,</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">fourier_transform</span><span class=\"p\">(</span><span class=\"n\">f_xy</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"n\">F_xq</span><span class=\"p\">,</span> <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">fourier_transform</span><span class=\"p\">(</span><span class=\"n\">f_xy</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n</pre>\n<p>See the documentation for more examples!</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.1.1 (2019-06-05)</h3>\n<ul>\n<li>Implemented support for different FT conventions.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.0 (2019-06-03)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5362025, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9b75bf954d9582bac0c390b38be6dd5c", "sha256": "b4a28a00ed34fe28c47fd3c09c9945d65de02dc1fa67e660aee5fb91e4a8052e"}, "downloads": -1, "filename": "deconvoluted-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9b75bf954d9582bac0c390b38be6dd5c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4619, "upload_time": "2019-06-04T20:24:10", "upload_time_iso_8601": "2019-06-04T20:24:10.727371Z", "url": "https://files.pythonhosted.org/packages/f2/18/e5fa3ec60b0f93736ca326a0dc919baace25864fbb6a35bc22f844ef164c/deconvoluted-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "575b5a4e7a38a8b549e529247b327927", "sha256": "36be33eddd0134d7c6d79d74a21f391a5e079628cb944b9335eb21680c5ef5d1"}, "downloads": -1, "filename": "deconvoluted-0.1.0.tar.gz", "has_sig": false, "md5_digest": "575b5a4e7a38a8b549e529247b327927", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10370, "upload_time": "2019-06-04T20:24:13", "upload_time_iso_8601": "2019-06-04T20:24:13.015609Z", "url": "https://files.pythonhosted.org/packages/96/9d/f53df77d890ff208f8ec75986529e43d69f64faaf24210c997646e634acf/deconvoluted-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "bedc9545f8cbb1227ef31b6b0ae193e6", "sha256": "cf8559c2e3042add1a13ad614a219be639611b01ef367b2b1be05407c220463f"}, "downloads": -1, "filename": "deconvoluted-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bedc9545f8cbb1227ef31b6b0ae193e6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5531, "upload_time": "2019-06-05T10:41:55", "upload_time_iso_8601": "2019-06-05T10:41:55.979482Z", "url": "https://files.pythonhosted.org/packages/13/36/65a78dcf5d4c07b783a46a26386f3f4bd18795d75ab2ffdb3d7754f9e6b5/deconvoluted-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74ff71366ea05a9dc79d6add6077211a", "sha256": "87cb8edeab1e485bb1564ff58117023ab05314d244f4753bff56c650a001549f"}, "downloads": -1, "filename": "deconvoluted-0.1.1.tar.gz", "has_sig": false, "md5_digest": "74ff71366ea05a9dc79d6add6077211a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11453, "upload_time": "2019-06-05T10:41:57", "upload_time_iso_8601": "2019-06-05T10:41:57.581130Z", "url": "https://files.pythonhosted.org/packages/8f/db/9d60d8ca29c46e035733fba192caaa86795881745b1f13f092b8db0f3e1b/deconvoluted-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bedc9545f8cbb1227ef31b6b0ae193e6", "sha256": "cf8559c2e3042add1a13ad614a219be639611b01ef367b2b1be05407c220463f"}, "downloads": -1, "filename": "deconvoluted-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bedc9545f8cbb1227ef31b6b0ae193e6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5531, "upload_time": "2019-06-05T10:41:55", "upload_time_iso_8601": "2019-06-05T10:41:55.979482Z", "url": "https://files.pythonhosted.org/packages/13/36/65a78dcf5d4c07b783a46a26386f3f4bd18795d75ab2ffdb3d7754f9e6b5/deconvoluted-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74ff71366ea05a9dc79d6add6077211a", "sha256": "87cb8edeab1e485bb1564ff58117023ab05314d244f4753bff56c650a001549f"}, "downloads": -1, "filename": "deconvoluted-0.1.1.tar.gz", "has_sig": false, "md5_digest": "74ff71366ea05a9dc79d6add6077211a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11453, "upload_time": "2019-06-05T10:41:57", "upload_time_iso_8601": "2019-06-05T10:41:57.581130Z", "url": "https://files.pythonhosted.org/packages/8f/db/9d60d8ca29c46e035733fba192caaa86795881745b1f13f092b8db0f3e1b/deconvoluted-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:34 2020"}