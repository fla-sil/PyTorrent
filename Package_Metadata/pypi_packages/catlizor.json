{"info": {"author": "BTaskaya", "author_email": "batuhanosmantaskaya@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Catlizor (v1)\nAction Hooks\n\n> It modifies your methods, they aren't same after the hooking operation so you should use catalizor_instance.reset() method or you can wait for [v1-extended](https://github.com/BTaskaya/catlizor/tree/v1-extended) branch get merged. It overrites default behavior of python with doing some magical stuff and slowes your code down. I'm eager to complete it and never merge it.\n\n## Example\n```py\nfrom catlizor import Hook, Catlizor\n\nclass TaskManager:\n    def __init__(self):\n        self.tasks = {}\n        \n    def add_task(self, task: str, *items):\n        self.tasks[task] = items\n        \n    def pop_task(self):\n        return self.tasks.popitem()\n    \n    def get_tasks(self, task: str):\n        return self.tasks[task]\n        \n@Hook.pre\nclass PreLoggingHook(Hook):\n    methods = ['add_task']\n    callbacks = [lambda result: print(result.args, result.kwargs)]\n\n@Hook.on_call\nclass PostLoggingHook(Hook):\n    methods = ['pop_task', 'get_tasks']\n    callbacks = [lambda result: print(result.result)]\n\ntm_catlizor = Catlizor.hook(TaskManager, PreLoggingHook, PostLoggingHook)\ntm = TaskManager()\ntm.add_task(\"s\u00fct al\", \"markete git\", \"s\u00fct reyonuna ula\u015f\")\ntm.get_tasks(\"s\u00fct al\")\ntm.pop_task()\n```\n\nResult (stdout);\n```\n(<__main__.TaskManager object at 0x7fa851743748>, 's\u00fct al', 'markete git', 's\u00fct reyonuna ula\u015f') {}\n('markete git', 's\u00fct reyonuna ula\u015f')\n('s\u00fct al', ('markete git', 's\u00fct reyonuna ula\u015f'))\n```\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/btaskaya/catlizor", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "catlizor", "package_url": "https://pypi.org/project/catlizor/", "platform": "", "project_url": "https://pypi.org/project/catlizor/", "project_urls": {"Homepage": "https://github.com/btaskaya/catlizor"}, "release_url": "https://pypi.org/project/catlizor/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Action Hooks.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Catlizor (v1)</h1>\n<p>Action Hooks</p>\n<blockquote>\n<p>It modifies your methods, they aren't same after the hooking operation so you should use catalizor_instance.reset() method or you can wait for <a href=\"https://github.com/BTaskaya/catlizor/tree/v1-extended\" rel=\"nofollow\">v1-extended</a> branch get merged. It overrites default behavior of python with doing some magical stuff and slowes your code down. I'm eager to complete it and never merge it.</p>\n</blockquote>\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">catlizor</span> <span class=\"kn\">import</span> <span class=\"n\">Hook</span><span class=\"p\">,</span> <span class=\"n\">Catlizor</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TaskManager</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tasks</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        \n    <span class=\"k\">def</span> <span class=\"nf\">add_task</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">items</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"p\">[</span><span class=\"n\">task</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">items</span>\n        \n    <span class=\"k\">def</span> <span class=\"nf\">pop_task</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">popitem</span><span class=\"p\">()</span>\n    \n    <span class=\"k\">def</span> <span class=\"nf\">get_tasks</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"p\">[</span><span class=\"n\">task</span><span class=\"p\">]</span>\n        \n<span class=\"nd\">@Hook</span><span class=\"o\">.</span><span class=\"n\">pre</span>\n<span class=\"k\">class</span> <span class=\"nc\">PreLoggingHook</span><span class=\"p\">(</span><span class=\"n\">Hook</span><span class=\"p\">):</span>\n    <span class=\"n\">methods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'add_task'</span><span class=\"p\">]</span>\n    <span class=\"n\">callbacks</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"k\">lambda</span> <span class=\"n\">result</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">kwargs</span><span class=\"p\">)]</span>\n\n<span class=\"nd\">@Hook</span><span class=\"o\">.</span><span class=\"n\">on_call</span>\n<span class=\"k\">class</span> <span class=\"nc\">PostLoggingHook</span><span class=\"p\">(</span><span class=\"n\">Hook</span><span class=\"p\">):</span>\n    <span class=\"n\">methods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'pop_task'</span><span class=\"p\">,</span> <span class=\"s1\">'get_tasks'</span><span class=\"p\">]</span>\n    <span class=\"n\">callbacks</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"k\">lambda</span> <span class=\"n\">result</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">)]</span>\n\n<span class=\"n\">tm_catlizor</span> <span class=\"o\">=</span> <span class=\"n\">Catlizor</span><span class=\"o\">.</span><span class=\"n\">hook</span><span class=\"p\">(</span><span class=\"n\">TaskManager</span><span class=\"p\">,</span> <span class=\"n\">PreLoggingHook</span><span class=\"p\">,</span> <span class=\"n\">PostLoggingHook</span><span class=\"p\">)</span>\n<span class=\"n\">tm</span> <span class=\"o\">=</span> <span class=\"n\">TaskManager</span><span class=\"p\">()</span>\n<span class=\"n\">tm</span><span class=\"o\">.</span><span class=\"n\">add_task</span><span class=\"p\">(</span><span class=\"s2\">\"s\u00fct al\"</span><span class=\"p\">,</span> <span class=\"s2\">\"markete git\"</span><span class=\"p\">,</span> <span class=\"s2\">\"s\u00fct reyonuna ula\u015f\"</span><span class=\"p\">)</span>\n<span class=\"n\">tm</span><span class=\"o\">.</span><span class=\"n\">get_tasks</span><span class=\"p\">(</span><span class=\"s2\">\"s\u00fct al\"</span><span class=\"p\">)</span>\n<span class=\"n\">tm</span><span class=\"o\">.</span><span class=\"n\">pop_task</span><span class=\"p\">()</span>\n</pre>\n<p>Result (stdout);</p>\n<pre><code>(&lt;__main__.TaskManager object at 0x7fa851743748&gt;, 's\u00fct al', 'markete git', 's\u00fct reyonuna ula\u015f') {}\n('markete git', 's\u00fct reyonuna ula\u015f')\n('s\u00fct al', ('markete git', 's\u00fct reyonuna ula\u015f'))\n</code></pre>\n<pre><code></code></pre>\n\n          </div>"}, "last_serial": 4888497, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7aff98c25f886a24e8e874e89b7b7f63", "sha256": "633721067dde524dea5068e2e91db34abc0811553196d010bc6ca08dd4f62051"}, "downloads": -1, "filename": "catlizor-0.1.tar.gz", "has_sig": false, "md5_digest": "7aff98c25f886a24e8e874e89b7b7f63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3513, "upload_time": "2019-02-24T08:04:12", "upload_time_iso_8601": "2019-02-24T08:04:12.973112Z", "url": "https://files.pythonhosted.org/packages/da/31/6061d667bed0d51ce482230b16b44417bfb10eb337e9a79a34a57468f8a5/catlizor-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7087610b58f6bdaa72d352cb53397677", "sha256": "4de5a545fe85269d9619cda2a24ff8bf72241895a5bd0ff1125278547d825fe7"}, "downloads": -1, "filename": "catlizor-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7087610b58f6bdaa72d352cb53397677", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3532, "upload_time": "2019-02-24T08:05:21", "upload_time_iso_8601": "2019-02-24T08:05:21.910091Z", "url": "https://files.pythonhosted.org/packages/4c/8a/fbe89b1c2b75e13384a77fc38e4328598f29d01fd9df9e94f470f9dcb94a/catlizor-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "2c648aa6468e41905fe1dc47cb4d675d", "sha256": "101833f10a17567c0b54078250c5867ea8632f68272f36c1beddddb74c4c2b7b"}, "downloads": -1, "filename": "catlizor-0.2.tar.gz", "has_sig": false, "md5_digest": "2c648aa6468e41905fe1dc47cb4d675d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3776, "upload_time": "2019-02-24T10:00:56", "upload_time_iso_8601": "2019-02-24T10:00:56.195344Z", "url": "https://files.pythonhosted.org/packages/98/8c/a72105a24624dbbb2b3e7d4177f4149753fa46b6059dd51a66881c1fba47/catlizor-0.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "4691d76be9e9228c2bca40ea0af0a71f", "sha256": "66d04e7f150d097c090570fef99fef3a53d763b63851dc0e3ddbd871ee8d19ee"}, "downloads": -1, "filename": "catlizor-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4691d76be9e9228c2bca40ea0af0a71f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4799, "upload_time": "2019-03-02T15:07:47", "upload_time_iso_8601": "2019-03-02T15:07:47.329401Z", "url": "https://files.pythonhosted.org/packages/2d/80/d4f0d684bc87b9f8dcaec7ff0e04f5a7abc901ff54e24d28efdd4532d770/catlizor-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4691d76be9e9228c2bca40ea0af0a71f", "sha256": "66d04e7f150d097c090570fef99fef3a53d763b63851dc0e3ddbd871ee8d19ee"}, "downloads": -1, "filename": "catlizor-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4691d76be9e9228c2bca40ea0af0a71f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4799, "upload_time": "2019-03-02T15:07:47", "upload_time_iso_8601": "2019-03-02T15:07:47.329401Z", "url": "https://files.pythonhosted.org/packages/2d/80/d4f0d684bc87b9f8dcaec7ff0e04f5a7abc901ff54e24d28efdd4532d770/catlizor-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:13 2020"}