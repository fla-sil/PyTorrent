{"info": {"author": "D. Vincent West", "author_email": "dvincentwest@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Visualization"], "description": "# Rapid Data Import Environment (radie)\n\nCopyright (&copy;) 3M Company, 2018, \n\nLicense: GPL version 2 \n\nRadie is a python package for experimental data primarily using pandas\nfor data structures\n\nThe point of radie is to remove the pain of loading and visualizing\nexperimental data. It is not meant for complex plotting or pretty\npictures, but rather a focus on rapidly converging experimental data\nstored in files into a single place for rapid visualization.\n\n\n## GUI Demo\n\n![Alt Text](https://raw.githubusercontent.com/dvincentwest/radie-demos/master/radie-demo.gif)\n\nThe screen capture above shows the loading of three different experimental files (Rigaku XRD file, Particle Size Distribution and an IDEA VSM file) simultaneously into the program with drag and drop using the OS file explorer.  From there we initialize new visualizations and then drag the datasets into the visualizations.  Each visualization is tailored to a certain goal, be it the particularities of vieweing XRD files, PSD files, or the generic needs of plotting columnar data in an XY-scatter plot.  The whole process only takes a few seconds and allows the user to rapidly view and display any kind of experimental data, provided an appropriate loader plugin has been written.\n\n\n## Python Usage\n\n```python\nimport radie as rd\ndf = rd.DataStructure(data=[1, 2, 3], name=\"data frame\")\nprint(df.metadata[\"name\"])\nprint(df.metadata[\"date\"])\n\ncsv_df = rd.load_file(\"my_random_data.csv\")  # unspecified csv data\n\npow_df = rd.load_file(\"powder_diffraction_measurement.ras\")  # powder diffraction data\nprint(pow_df.metadata[\"name\"])\n\nvsm_df = rd.load_file(\"magnetization_v_field.txt\")  # VSM measurement\nprint(vsm_df.metadata[\"name\"])\n\nvsm_df.savetxt('my_vsm_file.df', overwrite=True)  # save as a csv with metadata\n                                                  # in a commented json block\nvsm_reread = rd.load_file('my_vsm_file.df')  # will read in savetxt output with\n                                             # proper class and metadata info                                                  \n```\n\n\n## Launch PyQt Gui\n\n```shell\npython -m radie.qt.viewer\n```\n\n\n## Requirements\n- numpy\n- pandas\n\nadditionally for the gui application:\n- pyqt >= 5.6\n- pyqtgraph >= 0.10\n\noptional\n- pywin32 (Windows only)\n\n\n## Installation\n\n    pip install radie\n\nto use the PyQt Gui you must also have PyQt5 and pyqtgraph installed:\n\n    pip install radie PyQt5 pyqtgraph\n\nfor the latest updates, clone this repo and add radie/ to your PythonPath\n\nOn Windows, running the `install_windows_shortcut.py` script will install\nshorcuts for radie using the same python executables that are used to\nrun the install script.  This requires pywin32.\n\n\n## Highlights\n\n-   Core Features:\n    -   StructuredDataFrame - base class, just a pandas DataFrame with some\n        restrictions, metadata and templates for more specific\n        sub-classes\n    -   Common text file format - This is just a csv file where the metadata\n        attached to the .metadata property is converted to a json object\n        and stored in a commented block at the top.\n    -   CSV importer that under some structure assumptions attempts to:\n        -   automatically determine delimiter\n        -   automatically find the csv data-block\n        -   automatically determine headers\n        -   ignore preceding metadata\n    -   Qt-based Gui Viewer with Drag and Drop handling of files and\n        data-set comparison\n-   Extensible because (nearly) everything is a plugin\n    -   StructuredDataFrame subclasses specify structured data\n        (add-your-own!)\n    -   Custom Visualizations of Structured Data, based on whatever fits\n        into QMdiSubwindow (I use PyQtGraph)\n    -   File-loaders written for each supported file-type, register into\n        the system so that radie.load\\_file can automatically detect\n        and load registered file-types\n    -   \\*\\*GUI save files keep all your rapid analysis in one place\n        each plugin specifies its own save data in json format and all\n        DataStructures have a common save format\n\n\\*\\* Planned, but not yet implemented\n\n\n## Currently Supported File-types\n\n-   Powder Diffraction:\n    -   Rigaku (.asc, .ras)\n    -   Bruker (.raw (v2))\n    -   GSAS (.raw, .gsas, .fxye)\n-   Vibrating Sample Magnetometer:\n    -   Lakeshore (.dat, .txt (Field v Moment))\n-   Particle Size Distribution:\n    -   Horiba LA-960 (.csv)\n-   Thermogravimetric Analysis\n    -   TA Instruments Q500 (.001, .002, .003)\n-   Differential Scanning Calorimetry (DSC)\n    -   TA Instruments Q2000 (.001, .002, .003)\n\n\n## Vision\n\nRadie is not a replacement for Origin, Igor, QtiPlot or similar gui\nscientific plotting/analysis packages. Instead Radie has the\nfollowing goals:\n\n1.  import data files, with drag and drop and automatic file-type\n    detection\n    -   powder diffraction data\n    -   spectrum data\n    -   any data that maps to a Pandas StructuredDataFrame\n2.  rapid comparison of datasets into automatically generated\n    visualizations with drag and drop\n    -   I don't want to plot things, I want to visualize them, the\n        software should plot for me\n3.  reasonable interoperability with python for more complex operations\n    -   matplotlib, bokeh, whatever, I want to do the quick\n        visualizations and comparisons in a gui, and I will do all of\n        the complicated analysis and crazy figure plotting in something\n        more flexible like a Jupyter Notebook\n    -   strong clipboard integration\n    -   common file-saving scheme for all types of data\n4.  saving my collected datasets and visualizations\n    -   Origin/QtiPlot software is not my cup of tea for actually\n        analyzing data but its nice to save your collection of data and\n        plots in a single spot\n    -   Jupyter Notebooks / Matplotlib are much nicer when it comes to\n        analyzing data but all of that flexibility can screw things up\n        in the future, it would be nice to have it all in one\n        re-producible place that I can come back to at any time with a\n        double click of the mouse\n5.  reasonable exporting to excel\n    -   Excel is the most wide-spread format for sharing/visualizing 1-D\n        datasets and these datasets are literally everywhere. A quick\n        button to make an excel file to share with the non-programmers\n        out there is critical (currently Windows only)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.github.com/dvincentwest/radie", "keywords": "data visualization", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "radie", "package_url": "https://pypi.org/project/radie/", "platform": "", "project_url": "https://pypi.org/project/radie/", "project_urls": {"Homepage": "https://www.github.com/dvincentwest/radie"}, "release_url": "https://pypi.org/project/radie/0.1.4/", "requires_dist": ["numpy", "pandas", "pyqtgraph"], "requires_python": ">=3.5", "summary": "a python application to rapidly import and view experimental data", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Rapid Data Import Environment (radie)</h1>\n<p>Copyright (\u00a9) 3M Company, 2018,</p>\n<p>License: GPL version 2</p>\n<p>Radie is a python package for experimental data primarily using pandas\nfor data structures</p>\n<p>The point of radie is to remove the pain of loading and visualizing\nexperimental data. It is not meant for complex plotting or pretty\npictures, but rather a focus on rapidly converging experimental data\nstored in files into a single place for rapid visualization.</p>\n<h2>GUI Demo</h2>\n<p><img alt=\"Alt Text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43fb3c0e2bd7c92d9f796a047d1da963c9a23c03/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6476696e63656e74776573742f72616469652d64656d6f732f6d61737465722f72616469652d64656d6f2e676966\"></p>\n<p>The screen capture above shows the loading of three different experimental files (Rigaku XRD file, Particle Size Distribution and an IDEA VSM file) simultaneously into the program with drag and drop using the OS file explorer.  From there we initialize new visualizations and then drag the datasets into the visualizations.  Each visualization is tailored to a certain goal, be it the particularities of vieweing XRD files, PSD files, or the generic needs of plotting columnar data in an XY-scatter plot.  The whole process only takes a few seconds and allows the user to rapidly view and display any kind of experimental data, provided an appropriate loader plugin has been written.</p>\n<h2>Python Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">radie</span> <span class=\"k\">as</span> <span class=\"nn\">rd</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">rd</span><span class=\"o\">.</span><span class=\"n\">DataStructure</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"data frame\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"p\">[</span><span class=\"s2\">\"date\"</span><span class=\"p\">])</span>\n\n<span class=\"n\">csv_df</span> <span class=\"o\">=</span> <span class=\"n\">rd</span><span class=\"o\">.</span><span class=\"n\">load_file</span><span class=\"p\">(</span><span class=\"s2\">\"my_random_data.csv\"</span><span class=\"p\">)</span>  <span class=\"c1\"># unspecified csv data</span>\n\n<span class=\"n\">pow_df</span> <span class=\"o\">=</span> <span class=\"n\">rd</span><span class=\"o\">.</span><span class=\"n\">load_file</span><span class=\"p\">(</span><span class=\"s2\">\"powder_diffraction_measurement.ras\"</span><span class=\"p\">)</span>  <span class=\"c1\"># powder diffraction data</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pow_df</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">])</span>\n\n<span class=\"n\">vsm_df</span> <span class=\"o\">=</span> <span class=\"n\">rd</span><span class=\"o\">.</span><span class=\"n\">load_file</span><span class=\"p\">(</span><span class=\"s2\">\"magnetization_v_field.txt\"</span><span class=\"p\">)</span>  <span class=\"c1\"># VSM measurement</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">vsm_df</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">])</span>\n\n<span class=\"n\">vsm_df</span><span class=\"o\">.</span><span class=\"n\">savetxt</span><span class=\"p\">(</span><span class=\"s1\">'my_vsm_file.df'</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># save as a csv with metadata</span>\n                                                  <span class=\"c1\"># in a commented json block</span>\n<span class=\"n\">vsm_reread</span> <span class=\"o\">=</span> <span class=\"n\">rd</span><span class=\"o\">.</span><span class=\"n\">load_file</span><span class=\"p\">(</span><span class=\"s1\">'my_vsm_file.df'</span><span class=\"p\">)</span>  <span class=\"c1\"># will read in savetxt output with</span>\n                                             <span class=\"c1\"># proper class and metadata info                                                  </span>\n</pre>\n<h2>Launch PyQt Gui</h2>\n<pre>python -m radie.qt.viewer\n</pre>\n<h2>Requirements</h2>\n<ul>\n<li>numpy</li>\n<li>pandas</li>\n</ul>\n<p>additionally for the gui application:</p>\n<ul>\n<li>pyqt &gt;= 5.6</li>\n<li>pyqtgraph &gt;= 0.10</li>\n</ul>\n<p>optional</p>\n<ul>\n<li>pywin32 (Windows only)</li>\n</ul>\n<h2>Installation</h2>\n<pre><code>pip install radie\n</code></pre>\n<p>to use the PyQt Gui you must also have PyQt5 and pyqtgraph installed:</p>\n<pre><code>pip install radie PyQt5 pyqtgraph\n</code></pre>\n<p>for the latest updates, clone this repo and add radie/ to your PythonPath</p>\n<p>On Windows, running the <code>install_windows_shortcut.py</code> script will install\nshorcuts for radie using the same python executables that are used to\nrun the install script.  This requires pywin32.</p>\n<h2>Highlights</h2>\n<ul>\n<li>Core Features:\n<ul>\n<li>StructuredDataFrame - base class, just a pandas DataFrame with some\nrestrictions, metadata and templates for more specific\nsub-classes</li>\n<li>Common text file format - This is just a csv file where the metadata\nattached to the .metadata property is converted to a json object\nand stored in a commented block at the top.</li>\n<li>CSV importer that under some structure assumptions attempts to:\n<ul>\n<li>automatically determine delimiter</li>\n<li>automatically find the csv data-block</li>\n<li>automatically determine headers</li>\n<li>ignore preceding metadata</li>\n</ul>\n</li>\n<li>Qt-based Gui Viewer with Drag and Drop handling of files and\ndata-set comparison</li>\n</ul>\n</li>\n<li>Extensible because (nearly) everything is a plugin\n<ul>\n<li>StructuredDataFrame subclasses specify structured data\n(add-your-own!)</li>\n<li>Custom Visualizations of Structured Data, based on whatever fits\ninto QMdiSubwindow (I use PyQtGraph)</li>\n<li>File-loaders written for each supported file-type, register into\nthe system so that radie.load_file can automatically detect\nand load registered file-types</li>\n<li>**GUI save files keep all your rapid analysis in one place\neach plugin specifies its own save data in json format and all\nDataStructures have a common save format</li>\n</ul>\n</li>\n</ul>\n<p>** Planned, but not yet implemented</p>\n<h2>Currently Supported File-types</h2>\n<ul>\n<li>Powder Diffraction:\n<ul>\n<li>Rigaku (.asc, .ras)</li>\n<li>Bruker (.raw (v2))</li>\n<li>GSAS (.raw, .gsas, .fxye)</li>\n</ul>\n</li>\n<li>Vibrating Sample Magnetometer:\n<ul>\n<li>Lakeshore (.dat, .txt (Field v Moment))</li>\n</ul>\n</li>\n<li>Particle Size Distribution:\n<ul>\n<li>Horiba LA-960 (.csv)</li>\n</ul>\n</li>\n<li>Thermogravimetric Analysis\n<ul>\n<li>TA Instruments Q500 (.001, .002, .003)</li>\n</ul>\n</li>\n<li>Differential Scanning Calorimetry (DSC)\n<ul>\n<li>TA Instruments Q2000 (.001, .002, .003)</li>\n</ul>\n</li>\n</ul>\n<h2>Vision</h2>\n<p>Radie is not a replacement for Origin, Igor, QtiPlot or similar gui\nscientific plotting/analysis packages. Instead Radie has the\nfollowing goals:</p>\n<ol>\n<li>import data files, with drag and drop and automatic file-type\ndetection\n<ul>\n<li>powder diffraction data</li>\n<li>spectrum data</li>\n<li>any data that maps to a Pandas StructuredDataFrame</li>\n</ul>\n</li>\n<li>rapid comparison of datasets into automatically generated\nvisualizations with drag and drop\n<ul>\n<li>I don't want to plot things, I want to visualize them, the\nsoftware should plot for me</li>\n</ul>\n</li>\n<li>reasonable interoperability with python for more complex operations\n<ul>\n<li>matplotlib, bokeh, whatever, I want to do the quick\nvisualizations and comparisons in a gui, and I will do all of\nthe complicated analysis and crazy figure plotting in something\nmore flexible like a Jupyter Notebook</li>\n<li>strong clipboard integration</li>\n<li>common file-saving scheme for all types of data</li>\n</ul>\n</li>\n<li>saving my collected datasets and visualizations\n<ul>\n<li>Origin/QtiPlot software is not my cup of tea for actually\nanalyzing data but its nice to save your collection of data and\nplots in a single spot</li>\n<li>Jupyter Notebooks / Matplotlib are much nicer when it comes to\nanalyzing data but all of that flexibility can screw things up\nin the future, it would be nice to have it all in one\nre-producible place that I can come back to at any time with a\ndouble click of the mouse</li>\n</ul>\n</li>\n<li>reasonable exporting to excel\n<ul>\n<li>Excel is the most wide-spread format for sharing/visualizing 1-D\ndatasets and these datasets are literally everywhere. A quick\nbutton to make an excel file to share with the non-programmers\nout there is critical (currently Windows only)</li>\n</ul>\n</li>\n</ol>\n\n          </div>"}, "last_serial": 4238034, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "a07c7e3d30fde00e3b5622f65c57ea83", "sha256": "a0c889f15bb648e1fc48022a0f9033494fa4f87e8a0ce22f222c81e7fc9ff9cc"}, "downloads": -1, "filename": "radie-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a07c7e3d30fde00e3b5622f65c57ea83", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 105975, "upload_time": "2018-07-23T20:13:07", "upload_time_iso_8601": "2018-07-23T20:13:07.816826Z", "url": "https://files.pythonhosted.org/packages/e1/ff/7dd2f907adbbe9e08a4f5eaa0ea84f96eac923c4c2c817abc52e7597a6a8/radie-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "213c545b6d75a49f607c2e13dc59b0aa", "sha256": "e8957f0e9051218811984a8aa9c90c2bbbf15f376d0d0d1fd380593b0f313bb8"}, "downloads": -1, "filename": "radie-0.1.1.tar.gz", "has_sig": false, "md5_digest": "213c545b6d75a49f607c2e13dc59b0aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79114, "upload_time": "2018-07-23T20:13:09", "upload_time_iso_8601": "2018-07-23T20:13:09.429170Z", "url": "https://files.pythonhosted.org/packages/fe/54/d32933a34bb3d7fa78703c75484c9071d997307d71434c22f972448bfa63/radie-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c9847847550cb79bccdbff99b8bc3801", "sha256": "b8d2e52467a939b513195e8715dc381569306e5071a5ada60110cd2a63bb88d2"}, "downloads": -1, "filename": "radie-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c9847847550cb79bccdbff99b8bc3801", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 105981, "upload_time": "2018-07-25T02:18:11", "upload_time_iso_8601": "2018-07-25T02:18:11.968900Z", "url": "https://files.pythonhosted.org/packages/ea/58/78c4b6468683fa8cb82bb4fe04bc6b97351a96589614e4dd4da6fb458ccf/radie-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87be377a797bff63db5a0c49738a28f9", "sha256": "334e535e777e481593df48d0f31d71a357e2240afaa3bf24f89d271160bfbb97"}, "downloads": -1, "filename": "radie-0.1.2.tar.gz", "has_sig": false, "md5_digest": "87be377a797bff63db5a0c49738a28f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79418, "upload_time": "2018-07-25T02:18:13", "upload_time_iso_8601": "2018-07-25T02:18:13.573180Z", "url": "https://files.pythonhosted.org/packages/df/11/14a13bc6f4e05f3ea26c9138a4327adce864a6155b843a2f0e9780f45c3e/radie-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "0b8b3b97d60a11ac8f59a6091dbb290e", "sha256": "5e7111604580e666e7314dc109ae2a48aeccd2c146dabfa6201028fea0022bed"}, "downloads": -1, "filename": "radie-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0b8b3b97d60a11ac8f59a6091dbb290e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 107777, "upload_time": "2018-07-26T17:56:21", "upload_time_iso_8601": "2018-07-26T17:56:21.999861Z", "url": "https://files.pythonhosted.org/packages/46/e9/cc02e93244a8e0c39f4a607dac9bc8cd38f52941aaf6d57aefee6dedb1a6/radie-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c27cb03ad0ad3cec329a382f3c50279", "sha256": "ceda79cdf0217a09b524bfe0fb2e272338e62c34a33849462f2d0d22320681f6"}, "downloads": -1, "filename": "radie-0.1.3.tar.gz", "has_sig": false, "md5_digest": "5c27cb03ad0ad3cec329a382f3c50279", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 79971, "upload_time": "2018-07-26T17:56:23", "upload_time_iso_8601": "2018-07-26T17:56:23.063936Z", "url": "https://files.pythonhosted.org/packages/31/cf/668e79622ed07239b6f2c1f912bc0196a5d0b2a212b1304cb1ccbae700ee/radie-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "befa698946823daeaf5f2a056678263e", "sha256": "f8976ea95e2af0d4a44092d7d9597f1748f599238542a3ce3824c41888e15e2c"}, "downloads": -1, "filename": "radie-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "befa698946823daeaf5f2a056678263e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 112091, "upload_time": "2018-09-04T15:09:07", "upload_time_iso_8601": "2018-09-04T15:09:07.602962Z", "url": "https://files.pythonhosted.org/packages/84/85/f9c4d2aa0ca459a8925771f48b02a9a887c2bd5e5323b5ea5bfd821b2f00/radie-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c44c84995aea837852411ed5169b84f", "sha256": "00ee53e8d0d595a1390aaf8962b7a8f90b9dadaa06efa3a52f95381d745d7c69"}, "downloads": -1, "filename": "radie-0.1.4.tar.gz", "has_sig": false, "md5_digest": "9c44c84995aea837852411ed5169b84f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 81845, "upload_time": "2018-09-04T15:09:09", "upload_time_iso_8601": "2018-09-04T15:09:09.336737Z", "url": "https://files.pythonhosted.org/packages/1f/43/1f963cfd80d986ab230bef8a2c2941b83b21af16bf2b505352356ea63251/radie-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "befa698946823daeaf5f2a056678263e", "sha256": "f8976ea95e2af0d4a44092d7d9597f1748f599238542a3ce3824c41888e15e2c"}, "downloads": -1, "filename": "radie-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "befa698946823daeaf5f2a056678263e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 112091, "upload_time": "2018-09-04T15:09:07", "upload_time_iso_8601": "2018-09-04T15:09:07.602962Z", "url": "https://files.pythonhosted.org/packages/84/85/f9c4d2aa0ca459a8925771f48b02a9a887c2bd5e5323b5ea5bfd821b2f00/radie-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c44c84995aea837852411ed5169b84f", "sha256": "00ee53e8d0d595a1390aaf8962b7a8f90b9dadaa06efa3a52f95381d745d7c69"}, "downloads": -1, "filename": "radie-0.1.4.tar.gz", "has_sig": false, "md5_digest": "9c44c84995aea837852411ed5169b84f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 81845, "upload_time": "2018-09-04T15:09:09", "upload_time_iso_8601": "2018-09-04T15:09:09.336737Z", "url": "https://files.pythonhosted.org/packages/1f/43/1f963cfd80d986ab230bef8a2c2941b83b21af16bf2b505352356ea63251/radie-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:00 2020"}