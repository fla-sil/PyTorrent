{"info": {"author": "Munchii", "author_email": "contact@munchii.me", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# GGLogger\nA function logger for Python\n\nSee examples under `Examples/Example.py`\n\nSupported return types:\n- Int\n- Float\n- String\n- List\n- Dict\n- Tuple\n- Or use combine to combine 2 or more types\n\n<br><br>\n\n# Functions\n## Print Function\n*RIGHT NOW PRINT ONLY WORKS ON COMBINED FUNCTIONS!*\nUse:\n```py\n@GG.Print\n@GG.Combine (int, str, list)\ndef Test ():\n  if 0:\n    return [0]\n\n  elif 1:\n    return str (0)\n\n  else:\n    return int (0)\n\n# Output result:\n# [0]\n```\n\n## Log Function\nUse:\n```py\n@GG.Int\n@GG.Log ()\ndef Test ():\n    return 1\n\n# Output result:\n# ----- Log Result -----\n# Executed:           Test\n# Result:             1\n# Result Type:        str\n# Execution Time:     0.0 seconds\n# Arg Count:          0\n# File Path:          C:\\Path\\To\\File.py\n# Start Line:         1\n# ----------------------\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Dmunch04/GGLogger", "keywords": "simple function logger for python", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "GGLogger", "package_url": "https://pypi.org/project/GGLogger/", "platform": "", "project_url": "https://pypi.org/project/GGLogger/", "project_urls": {"Homepage": "https://github.com/Dmunch04/GGLogger"}, "release_url": "https://pypi.org/project/GGLogger/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "A simple function logger for Python", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GGLogger</h1>\n<p>A function logger for Python</p>\n<p>See examples under <code>Examples/Example.py</code></p>\n<p>Supported return types:</p>\n<ul>\n<li>Int</li>\n<li>Float</li>\n<li>String</li>\n<li>List</li>\n<li>Dict</li>\n<li>Tuple</li>\n<li>Or use combine to combine 2 or more types</li>\n</ul>\n<p><br><br></p>\n<h1>Functions</h1>\n<h2>Print Function</h2>\n<p><em>RIGHT NOW PRINT ONLY WORKS ON COMBINED FUNCTIONS!</em>\nUse:</p>\n<pre><span class=\"nd\">@GG</span><span class=\"o\">.</span><span class=\"n\">Print</span>\n<span class=\"nd\">@GG</span><span class=\"o\">.</span><span class=\"n\">Combine</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">Test</span> <span class=\"p\">():</span>\n  <span class=\"k\">if</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n  <span class=\"k\">elif</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"nb\">str</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n  <span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"nb\">int</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Output result:</span>\n<span class=\"c1\"># [0]</span>\n</pre>\n<h2>Log Function</h2>\n<p>Use:</p>\n<pre><span class=\"nd\">@GG</span><span class=\"o\">.</span><span class=\"n\">Int</span>\n<span class=\"nd\">@GG</span><span class=\"o\">.</span><span class=\"n\">Log</span> <span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">Test</span> <span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n<span class=\"c1\"># Output result:</span>\n<span class=\"c1\"># ----- Log Result -----</span>\n<span class=\"c1\"># Executed:           Test</span>\n<span class=\"c1\"># Result:             1</span>\n<span class=\"c1\"># Result Type:        str</span>\n<span class=\"c1\"># Execution Time:     0.0 seconds</span>\n<span class=\"c1\"># Arg Count:          0</span>\n<span class=\"c1\"># File Path:          C:\\Path\\To\\File.py</span>\n<span class=\"c1\"># Start Line:         1</span>\n<span class=\"c1\"># ----------------------</span>\n</pre>\n\n          </div>"}, "last_serial": 5338747, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ab6b1503fe3499b01cfc8c70c9c08ef3", "sha256": "f05c9a439b7b2e297bf3308bc91788f32dfa3cc86339d6533c894cd8bdd83a9f"}, "downloads": -1, "filename": "GGLogger-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ab6b1503fe3499b01cfc8c70c9c08ef3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2382, "upload_time": "2019-05-30T17:58:06", "upload_time_iso_8601": "2019-05-30T17:58:06.983130Z", "url": "https://files.pythonhosted.org/packages/88/6d/d2f1596eddfccf35807645655b7f3225ca94875c24da28d15b50b6caa5f7/GGLogger-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ab6b1503fe3499b01cfc8c70c9c08ef3", "sha256": "f05c9a439b7b2e297bf3308bc91788f32dfa3cc86339d6533c894cd8bdd83a9f"}, "downloads": -1, "filename": "GGLogger-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ab6b1503fe3499b01cfc8c70c9c08ef3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2382, "upload_time": "2019-05-30T17:58:06", "upload_time_iso_8601": "2019-05-30T17:58:06.983130Z", "url": "https://files.pythonhosted.org/packages/88/6d/d2f1596eddfccf35807645655b7f3225ca94875c24da28d15b50b6caa5f7/GGLogger-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:35 2020"}