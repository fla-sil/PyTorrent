{"info": {"author": "Sreejith K / K7Computing Pvt Ltd", "author_email": "sreejithemk@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Internet", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Site Management", "Topic :: Text Processing", "Topic :: Text Processing :: Filters", "Topic :: Text Processing :: Markup", "Topic :: Text Processing :: Markup :: HTML", "Topic :: Utilities"], "description": "Voldemort\n---------\n\nVoldemort is a simple static site generator using Jinja2 and markdown\ntemplates.\n\nInstallation\n------------\n\n::\n\n    sudo python setup.py install\n\nor\n\n::\n\n    sudo easy_install -U voldemort\n\nUsage Options\n-------------\n\n::\n\n    Usage: voldemort [options]\n\n    Options:\n      -h, --help            show this help message and exit\n      -w WORK_DIR, --work_dir=WORK_DIR\n                            Working Directory\n      -s, --serve           Start the HTTP Server\n      -p PORT, --port=PORT  Port inwhich the HTTPServer should run\n      -d, --deploy          Deploy this website\n      -u USER, --user=USER  Login name for server\n      -a AT, --at=AT        Server address to deploy the site\n      -t TO, --to=TO        Deployment directory\n      --skip-blog           Skip blog posts generation\n      --skip-pages          Skip pages generation\n      --skip-tags           Skip tags generation\n      --skip-feeds          Skip Atom feed generation\n      --skip-sitemap        Skip sitemap generation\n\nUsage Example\n-------------\n\nGo to the example directory\n\n::\n\n    cd example\n\nand run\n\n::\n\n    voldemort\n\nstart the HTTPServer\n\n::\n\n    voldemort --serve -p 8080\n\nOpen your browser and see the website in action.\n\nDeploy the website\n\n::\n\n    voldemort --deploy -u foobarnb -a foobarnbaz.com -t /home/foobarnbaz/public_html\n\nWriting posts\n-------------\n\nPosts mainly contain 2 sections. Config section and the Template\nsection. All data inside two ``---`` defines the config and are\nvalidated as YAML data. You can set your post related attributes here.\nIn template section you can use Jinja2 templates or Markdown in\n``{% markdown %}`` and ``{% endmarkdown %}`` blocks (You could ignore\nthese blocks if ``layout`` is defined in the metadata section).\n\nAs per Voldemort's default configuration, all base templates should be\nin ``layout`` and ``include`` directories. This is not a hard\nlimitation, but kept for preserving the meaning. Posts are written in a\ndirectory named ``posts``. For example, we have a directory structure as\nshown below\n\n::\n\n    layout/\n        listing.html\n        post.html\n    include/\n        navigation.html\n    posts/\n        voldemort-is-awesome.markdown\n    index.html\n    css/\n        screen.css\n        pygments.css\n\nAnd we have the following data in ``layout/listing.html``\n\n::\n\n    <!DOCTYPE html>\n    <html lang=\"en-US\">\n\n    <head>\n    <title>foobarnbaz.com - {{ page.title }}</title>\n    {% include \"head-common.html\" %}\n    </head>\n\n    <body>\n    <section class=\"page-content\">\n    {% block content %}{% endblock %}\n    </section>\n    </body>\n    </html>\n\nand ``include/header.html`` contains\n\n::\n\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"author\" content=\"Sreejith K\" />\n\n    <link rel=\"alternate\" href=\"http://feeds2.feedburner.com/foobarnbaz\"\n      title=\"foobarnbaz.com\" type=\"application/atom+xml\" />\n    <link rel=\"stylesheet\" href=\"/css/screen.css\" type=\"text/css\" />\n    <link rel=\"stylesheet\" href=\"/css/pygments.css\" type=\"text/css\" />\n    <link href='/images/layout/favicon.ico' rel='shortcut icon' type='image/ico' />\n\nWe will be able to write the following ``index.html`` which generates\nthe front page of your blog with all the posts, paginated with the value\nprovided in ``settings.yaml`` (defaults to 5).\n\n::\n\n    ---\n    paginate: true\n    ---\n    {% extends \"listing.html\" %}\n    {% block content %}\n\n    {% for post in paginator.posts %}\n    <article class=\"excerpt\">\n    <header>\n    <h1><a href=\"{{ post.url }}\">{{ post.title }}</a></h1>\n    <time datetime=\"{{ post.date | date_to_string }}\" pubdate=\"pubdate\">\n    {{ post.date.strftime(\"%b %d, %Y\") }}\n    </time>\n    </header>\n\n    {% if loop.first %}\n    {{ post.content }}\n    <p class=\"full-post\"><a href=\"{{ post.url }}#comments\">comments...</a></p>\n    {% else %}\n    <p>{{ post.content }}</p>\n    <p class=\"full-post\"><a href=\"{{ post.url }}\">full post...</a></p>\n    {% endif %}\n\n    </article>\n    {% endfor %}\n    {% endblock %}\n\nAnd our sample post ``posts/voldemort-is-awesome.markdown``,\n\n::\n\n    ---\n    title: Voldemort\n    date: '02-10-2011'\n    time: '10:45'\n    layout: 'post.html'\n    ---\n    [Voldemort](https://github.com/semk/voldemort) is an awesome static site generator based in Jinja2 and Markdown templates.\n\nFor more information about templating read the following documentations.\n\n-  Read `Jinja2 Documentation <http://jinja.pocoo.org/docs/templates/>`_\n-  Read `Markdown\n   Documentation <http://daringfireball.net/projects/markdown/syntax>`_\n\nConfiguration\n-------------\n\nYou can change the default settings by editing the ``settings.yaml``.\n\n::\n\n    layout_dirs : \n                  - layout      # directory inwhich base tempaltes reside\n                  - include     # html code that can be included goes here\n    posts_dir   : posts         # directory where you write posts\n    post_url    : \"%Y/%m/%d\"    # url to posts. You can alter the order\n    site_dir    : _site         # generated site will be in this directory\n    paginate    : 5             # number of pages to be paginated at once\n\nUser defined data should only be added under ``site`` as shown below\n\n::\n\n    site        :\n        name        : \"Pythoned!\"  \n        address     : \"http://foobarnbaz.com\"\n        author_name : \"Sreejith Kesavan\"\n        author_email: \"sreejithemk@gmail.com\"\n\nand you may deploy your website to a preferred location or GitHub\nitself.\n\n::\n\n    deploy :\n            user  : semk\n            at    : github.com\n            to    : semk.github.com\n\nGlobal variables\n----------------\n\n::\n\n    site:       User defined variables from settings.yaml. Also includes site.time\n                Eg: site.name, site.address, site.time\n\n    posts:      A list of all your posts. All attributes in the YAML section \n                can be accessed either using . or []. \n                eg. post['date'], post.date\n\n    paginator:  You can paginate your posts using this object.\n                eg: {% for post in paginator.posts %}\n                Attributes:\n                    posts:  list of posts in this paginator\n                    current_page    : current page number (None if not)\n                    next_page       : next page number (None if not)\n                    previous_page   : previous page number (None if not)\n\n    post:       Info about the post. Only accessible in posts.\n                Attributes:\n                    content         : html content of the post\n                    url             : url to this post\n                    id              : identifier for the post (url)\n                    next            : points to the next post\n                    previous        : points to the previous post\n                    tags            : points to the tags\n                and you can access all the attributes in the config section (eg: post.date)\n\n    page:       Info about a page. Only available in pages other than posts.\n                Attributes:\n                    content         : html content of the post\n                and you can access all the attributes in the config section (eg: page.title)\n\n    tags:       Tags for the blog posts. Globally available.\n                Eg: You can loop like {% for tag in tags %} and access tag.name, tag.url and tag.posts\n\n    tag:        Available only to the tag template (Default `tag.html`)\n                Usage: {% for post in tag.posts %}\n\nFilters\n-------\n\nApart from built-in filters provided by Jinja2, Voldemort provides the\nfollowing filters to use inside HTML pages.\n\n::\n\n    date:                   Format datetime objects.\n                                eg. post.date | date(\"%d-%m-%Y\")\n    date_to_string:         Convert date to string.\n                                eg. \"27 Jan 2011\"\n    date_to_long_string:    Format a date in long format.\n                                eg. \"27 January 2011\"\n    date_to_xmlschema:      Format a date for use in XML.\n                                eg. \"2011-04-24T20:34:46+05:30\"\n    xml_escape:             Replace special characters \"&\", \"<\" and \">\" to \n                                HTML-safe sequences.\n    cgi_escape:             CGI escape a string for use in a URL. Replaces any special \n                                characters with appropriate %XX replacements.\n    uri_escape:             Escape special characters in url.\n    number_of_words:        Return number of words in a string.\n    excerpt:                Split the html data. Eg: {{ post.content | excerpt(70) }}\n\nDeveloper\n---------\n\nSreejith K sreejithemk@gmail.com\n\nhttp://foobarnbaz.com", "description_content_type": null, "docs_url": "https://pythonhosted.org/voldemort/", "download_url": "https://github.com/semk/voldemort/tarball/master#egg=voldemort-0.8.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/semk/voldemort", "keywords": "Voldemort Static Site Generator Jinja Jinja2                     Markdown Blog Python", "license": "Apache License, Version 2.0", "maintainer": null, "maintainer_email": null, "name": "voldemort", "package_url": "https://pypi.org/project/voldemort/", "platform": "any", "project_url": "https://pypi.org/project/voldemort/", "project_urls": {"Download": "https://github.com/semk/voldemort/tarball/master#egg=voldemort-0.8.0", "Homepage": "https://github.com/semk/voldemort"}, "release_url": "https://pypi.org/project/voldemort/0.8.1/", "requires_dist": null, "requires_python": null, "summary": "Voldemort is a simple static site generator                     using Jinja2 and Markdown templates.", "version": "0.8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"voldemort\">\n<h2>Voldemort</h2>\n<p>Voldemort is a simple static site generator using Jinja2 and markdown\ntemplates.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>sudo python setup.py install\n</pre>\n<p>or</p>\n<pre>sudo easy_install -U voldemort\n</pre>\n</div>\n<div id=\"usage-options\">\n<h2>Usage Options</h2>\n<pre>Usage: voldemort [options]\n\nOptions:\n  -h, --help            show this help message and exit\n  -w WORK_DIR, --work_dir=WORK_DIR\n                        Working Directory\n  -s, --serve           Start the HTTP Server\n  -p PORT, --port=PORT  Port inwhich the HTTPServer should run\n  -d, --deploy          Deploy this website\n  -u USER, --user=USER  Login name for server\n  -a AT, --at=AT        Server address to deploy the site\n  -t TO, --to=TO        Deployment directory\n  --skip-blog           Skip blog posts generation\n  --skip-pages          Skip pages generation\n  --skip-tags           Skip tags generation\n  --skip-feeds          Skip Atom feed generation\n  --skip-sitemap        Skip sitemap generation\n</pre>\n</div>\n<div id=\"usage-example\">\n<h2>Usage Example</h2>\n<p>Go to the example directory</p>\n<pre>cd example\n</pre>\n<p>and run</p>\n<pre>voldemort\n</pre>\n<p>start the HTTPServer</p>\n<pre>voldemort --serve -p 8080\n</pre>\n<p>Open your browser and see the website in action.</p>\n<p>Deploy the website</p>\n<pre>voldemort --deploy -u foobarnb -a foobarnbaz.com -t /home/foobarnbaz/public_html\n</pre>\n</div>\n<div id=\"writing-posts\">\n<h2>Writing posts</h2>\n<p>Posts mainly contain 2 sections. Config section and the Template\nsection. All data inside two <tt><span class=\"pre\">---</span></tt> defines the config and are\nvalidated as YAML data. You can set your post related attributes here.\nIn template section you can use Jinja2 templates or Markdown in\n<tt>{% markdown %}</tt> and <tt>{% endmarkdown %}</tt> blocks (You could ignore\nthese blocks if <tt>layout</tt> is defined in the metadata section).</p>\n<p>As per Voldemort\u2019s default configuration, all base templates should be\nin <tt>layout</tt> and <tt>include</tt> directories. This is not a hard\nlimitation, but kept for preserving the meaning. Posts are written in a\ndirectory named <tt>posts</tt>. For example, we have a directory structure as\nshown below</p>\n<pre>layout/\n    listing.html\n    post.html\ninclude/\n    navigation.html\nposts/\n    voldemort-is-awesome.markdown\nindex.html\ncss/\n    screen.css\n    pygments.css\n</pre>\n<p>And we have the following data in <tt>layout/listing.html</tt></p>\n<pre>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en-US\"&gt;\n\n&lt;head&gt;\n&lt;title&gt;foobarnbaz.com - {{ page.title }}&lt;/title&gt;\n{% include \"head-common.html\" %}\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;section class=\"page-content\"&gt;\n{% block content %}{% endblock %}\n&lt;/section&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>\n<p>and <tt>include/header.html</tt> contains</p>\n<pre>&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;meta name=\"author\" content=\"Sreejith K\" /&gt;\n\n&lt;link rel=\"alternate\" href=\"http://feeds2.feedburner.com/foobarnbaz\"\n  title=\"foobarnbaz.com\" type=\"application/atom+xml\" /&gt;\n&lt;link rel=\"stylesheet\" href=\"/css/screen.css\" type=\"text/css\" /&gt;\n&lt;link rel=\"stylesheet\" href=\"/css/pygments.css\" type=\"text/css\" /&gt;\n&lt;link href='/images/layout/favicon.ico' rel='shortcut icon' type='image/ico' /&gt;\n</pre>\n<p>We will be able to write the following <tt>index.html</tt> which generates\nthe front page of your blog with all the posts, paginated with the value\nprovided in <tt>settings.yaml</tt> (defaults to 5).</p>\n<pre>---\npaginate: true\n---\n{% extends \"listing.html\" %}\n{% block content %}\n\n{% for post in paginator.posts %}\n&lt;article class=\"excerpt\"&gt;\n&lt;header&gt;\n&lt;h1&gt;&lt;a href=\"{{ post.url }}\"&gt;{{ post.title }}&lt;/a&gt;&lt;/h1&gt;\n&lt;time datetime=\"{{ post.date | date_to_string }}\" pubdate=\"pubdate\"&gt;\n{{ post.date.strftime(\"%b %d, %Y\") }}\n&lt;/time&gt;\n&lt;/header&gt;\n\n{% if loop.first %}\n{{ post.content }}\n&lt;p class=\"full-post\"&gt;&lt;a href=\"{{ post.url }}#comments\"&gt;comments...&lt;/a&gt;&lt;/p&gt;\n{% else %}\n&lt;p&gt;{{ post.content }}&lt;/p&gt;\n&lt;p class=\"full-post\"&gt;&lt;a href=\"{{ post.url }}\"&gt;full post...&lt;/a&gt;&lt;/p&gt;\n{% endif %}\n\n&lt;/article&gt;\n{% endfor %}\n{% endblock %}\n</pre>\n<p>And our sample post <tt><span class=\"pre\">posts/voldemort-is-awesome.markdown</span></tt>,</p>\n<pre>---\ntitle: Voldemort\ndate: '02-10-2011'\ntime: '10:45'\nlayout: 'post.html'\n---\n[Voldemort](https://github.com/semk/voldemort) is an awesome static site generator based in Jinja2 and Markdown templates.\n</pre>\n<p>For more information about templating read the following documentations.</p>\n<ul>\n<li>Read <a href=\"http://jinja.pocoo.org/docs/templates/\" rel=\"nofollow\">Jinja2 Documentation</a></li>\n<li>Read <a href=\"http://daringfireball.net/projects/markdown/syntax\" rel=\"nofollow\">Markdown\nDocumentation</a></li>\n</ul>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>You can change the default settings by editing the <tt>settings.yaml</tt>.</p>\n<pre>layout_dirs :\n              - layout      # directory inwhich base tempaltes reside\n              - include     # html code that can be included goes here\nposts_dir   : posts         # directory where you write posts\npost_url    : \"%Y/%m/%d\"    # url to posts. You can alter the order\nsite_dir    : _site         # generated site will be in this directory\npaginate    : 5             # number of pages to be paginated at once\n</pre>\n<p>User defined data should only be added under <tt>site</tt> as shown below</p>\n<pre>site        :\n    name        : \"Pythoned!\"\n    address     : \"http://foobarnbaz.com\"\n    author_name : \"Sreejith Kesavan\"\n    author_email: \"sreejithemk@gmail.com\"\n</pre>\n<p>and you may deploy your website to a preferred location or GitHub\nitself.</p>\n<pre>deploy :\n        user  : semk\n        at    : github.com\n        to    : semk.github.com\n</pre>\n</div>\n<div id=\"global-variables\">\n<h2>Global variables</h2>\n<pre>site:       User defined variables from settings.yaml. Also includes site.time\n            Eg: site.name, site.address, site.time\n\nposts:      A list of all your posts. All attributes in the YAML section\n            can be accessed either using . or [].\n            eg. post['date'], post.date\n\npaginator:  You can paginate your posts using this object.\n            eg: {% for post in paginator.posts %}\n            Attributes:\n                posts:  list of posts in this paginator\n                current_page    : current page number (None if not)\n                next_page       : next page number (None if not)\n                previous_page   : previous page number (None if not)\n\npost:       Info about the post. Only accessible in posts.\n            Attributes:\n                content         : html content of the post\n                url             : url to this post\n                id              : identifier for the post (url)\n                next            : points to the next post\n                previous        : points to the previous post\n                tags            : points to the tags\n            and you can access all the attributes in the config section (eg: post.date)\n\npage:       Info about a page. Only available in pages other than posts.\n            Attributes:\n                content         : html content of the post\n            and you can access all the attributes in the config section (eg: page.title)\n\ntags:       Tags for the blog posts. Globally available.\n            Eg: You can loop like {% for tag in tags %} and access tag.name, tag.url and tag.posts\n\ntag:        Available only to the tag template (Default `tag.html`)\n            Usage: {% for post in tag.posts %}\n</pre>\n</div>\n<div id=\"filters\">\n<h2>Filters</h2>\n<p>Apart from built-in filters provided by Jinja2, Voldemort provides the\nfollowing filters to use inside HTML pages.</p>\n<pre>date:                   Format datetime objects.\n                            eg. post.date | date(\"%d-%m-%Y\")\ndate_to_string:         Convert date to string.\n                            eg. \"27 Jan 2011\"\ndate_to_long_string:    Format a date in long format.\n                            eg. \"27 January 2011\"\ndate_to_xmlschema:      Format a date for use in XML.\n                            eg. \"2011-04-24T20:34:46+05:30\"\nxml_escape:             Replace special characters \"&amp;\", \"&lt;\" and \"&gt;\" to\n                            HTML-safe sequences.\ncgi_escape:             CGI escape a string for use in a URL. Replaces any special\n                            characters with appropriate %XX replacements.\nuri_escape:             Escape special characters in url.\nnumber_of_words:        Return number of words in a string.\nexcerpt:                Split the html data. Eg: {{ post.content | excerpt(70) }}\n</pre>\n</div>\n<div id=\"developer\">\n<h2>Developer</h2>\n<p>Sreejith K <a href=\"mailto:sreejithemk%40gmail.com\">sreejithemk<span>@</span>gmail<span>.</span>com</a></p>\n<p><a href=\"http://foobarnbaz.com\" rel=\"nofollow\">http://foobarnbaz.com</a></p>\n</div>\n\n          </div>"}, "last_serial": 992072, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "ad3cb4b2d496ea7a47bfcbd799889650", "sha256": "8ec17f677ff283a3723d45d0d4606eebb172e6f191b091e4d0e4805a5c825b41"}, "downloads": -1, "filename": "voldemort-0.6.0-py2.6.egg", "has_sig": false, "md5_digest": "ad3cb4b2d496ea7a47bfcbd799889650", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 20362, "upload_time": "2011-10-04T10:29:22", "upload_time_iso_8601": "2011-10-04T10:29:22.712992Z", "url": "https://files.pythonhosted.org/packages/ba/93/c5a92b5d8c1d49c2c436283c973466d1c0f7fbe8677e2c08d50de6d3d0d2/voldemort-0.6.0-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d51f83aa49b17010a56cc0721e43ddf", "sha256": "84238af59d3c277d489bcd802671105d03cb92418c8bdd74672c8a87b29cdba2"}, "downloads": -1, "filename": "voldemort-0.6.0-py2.7.egg", "has_sig": false, "md5_digest": "3d51f83aa49b17010a56cc0721e43ddf", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 20314, "upload_time": "2011-10-04T18:19:18", "upload_time_iso_8601": "2011-10-04T18:19:18.532110Z", "url": "https://files.pythonhosted.org/packages/10/ac/d0472706d85e436861975b193ff61057f1f9cc6d54f4eb58ac2dbcfebdde/voldemort-0.6.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "db195279e4fe84c1dab9dcb926e92a7a", "sha256": "14e431ec06754142d2451fb677edf93ac585030e9ba81379fd951c83c313cdb9"}, "downloads": -1, "filename": "voldemort-0.6.5-py2.7.egg", "has_sig": false, "md5_digest": "db195279e4fe84c1dab9dcb926e92a7a", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 21303, "upload_time": "2011-10-10T19:20:58", "upload_time_iso_8601": "2011-10-10T19:20:58.976885Z", "url": "https://files.pythonhosted.org/packages/e6/cb/aa618b32290fcce681dd49aa68f7b081671618caaa35a141e410e23b6a23/voldemort-0.6.5-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ffcc76d5e203801a0d13d22ce4748cfa", "sha256": "246ef1d462f8730ec59db47f7ee2c1a97fa896c42a0b5fd2c90b26d8eb24bcf7"}, "downloads": -1, "filename": "voldemort-0.6.5.tar.gz", "has_sig": false, "md5_digest": "ffcc76d5e203801a0d13d22ce4748cfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7910, "upload_time": "2011-10-10T19:20:18", "upload_time_iso_8601": "2011-10-10T19:20:18.701218Z", "url": "https://files.pythonhosted.org/packages/f3/28/d235ecbaf506b9348fee7f55f76559c063b8188572fc454e9cbff5e02d08/voldemort-0.6.5.tar.gz", "yanked": false}], "0.6.7": [{"comment_text": "", "digests": {"md5": "92e5c8554e40b41ed1a5d1102cd51667", "sha256": "e3e954d9b53562ac60697086c920ea59e6100a8a8bab0afca68783047b721bc4"}, "downloads": -1, "filename": "voldemort-0.6.7-py2.7.egg", "has_sig": false, "md5_digest": "92e5c8554e40b41ed1a5d1102cd51667", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 25297, "upload_time": "2011-10-11T20:15:51", "upload_time_iso_8601": "2011-10-11T20:15:51.923790Z", "url": "https://files.pythonhosted.org/packages/0e/7e/7309907282b454648ea04d7c9189f3274ba12e2db6d4ded91d63cc8b32d3/voldemort-0.6.7-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "16018767beba29af2ca61562f5e6a708", "sha256": "e88918fa1550804ee9f7f9d6d5badc82f41b9b9f05f2f339512b41e4ee47eaf8"}, "downloads": -1, "filename": "voldemort-0.6.7.tar.gz", "has_sig": false, "md5_digest": "16018767beba29af2ca61562f5e6a708", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13765, "upload_time": "2011-10-11T20:16:27", "upload_time_iso_8601": "2011-10-11T20:16:27.231190Z", "url": "https://files.pythonhosted.org/packages/0e/e9/76d2815efaf90d11c159683f504b49abaf6314c503bda86734342c6c9a44/voldemort-0.6.7.tar.gz", "yanked": false}], "0.7.0": [], "0.8.0": [{"comment_text": "", "digests": {"md5": "f9f81b4140f16e19274f54af4eb50882", "sha256": "f5d2cd61b683d5f63faef5129fd204dd67d5c010f92a93dcf1166deab1182dff"}, "downloads": -1, "filename": "voldemort-0.8.0-py2.6.egg", "has_sig": false, "md5_digest": "f9f81b4140f16e19274f54af4eb50882", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 27629, "upload_time": "2013-11-18T05:27:40", "upload_time_iso_8601": "2013-11-18T05:27:40.651823Z", "url": "https://files.pythonhosted.org/packages/a8/04/ca0c67aa5a062f2622a9f6441f382edec58c35707d12ebe4deb68aa4bd0b/voldemort-0.8.0-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "429eac6d4dba4ce6e5bb0493dfe9425d", "sha256": "3f916390bb7267e4a6f5228745d4155124344f705c0269d395dab55b4911af1a"}, "downloads": -1, "filename": "voldemort-0.8.0-py2.7.egg", "has_sig": false, "md5_digest": "429eac6d4dba4ce6e5bb0493dfe9425d", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 27461, "upload_time": "2013-11-18T05:23:52", "upload_time_iso_8601": "2013-11-18T05:23:52.810002Z", "url": "https://files.pythonhosted.org/packages/aa/9b/e7670fa73777f8e9fc7f56ab5e2a07c559e7591bf8927b4303866df277fd/voldemort-0.8.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6faa21214b4adb81bfadf4329ed5d5c3", "sha256": "9ab472c140aebdb9e2dc102ab44a341933ea4c58e6677747a88c913e908e2267"}, "downloads": -1, "filename": "voldemort-0.8.0.tar.gz", "has_sig": false, "md5_digest": "6faa21214b4adb81bfadf4329ed5d5c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15770, "upload_time": "2013-11-18T05:23:48", "upload_time_iso_8601": "2013-11-18T05:23:48.252716Z", "url": "https://files.pythonhosted.org/packages/d5/1f/d58c488b7b6282f7f03ecb200d6bef17d5aa8fe0a3fdbc6995befabe1648/voldemort-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "3787506dba1b2a940b2adf2bae58438f", "sha256": "94638b09e4d7132585839c08d354267d6e8d2222f777b3e445469e561321d227"}, "downloads": -1, "filename": "voldemort-0.8.1-py2.6.egg", "has_sig": false, "md5_digest": "3787506dba1b2a940b2adf2bae58438f", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 27725, "upload_time": "2014-02-06T07:25:09", "upload_time_iso_8601": "2014-02-06T07:25:09.856872Z", "url": "https://files.pythonhosted.org/packages/ae/79/15fd1f2791e48881e48c2d7ee459ad264e49234f42386e2c884b92b650c9/voldemort-0.8.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "639cb36e60da3ec20ea9cf833527f047", "sha256": "dcd35d00d74331759fa3c78d1326f129ef54744363a7eb4ecb8679748b6f55a2"}, "downloads": -1, "filename": "voldemort-0.8.1-py2.7.egg", "has_sig": false, "md5_digest": "639cb36e60da3ec20ea9cf833527f047", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 27547, "upload_time": "2014-02-06T07:23:54", "upload_time_iso_8601": "2014-02-06T07:23:54.720929Z", "url": "https://files.pythonhosted.org/packages/1b/4e/3b136f9c61a56cc5b3dd3292ebfb2ad389716a010d40e43b3e2306aaef65/voldemort-0.8.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "894450bcaa6e4fbf115af7e2ff4f335d", "sha256": "4294191b881e160f7963a33ef4d35f4bc0060f82956bc4d98b1ec206a8612bf7"}, "downloads": -1, "filename": "voldemort-0.8.1.tar.gz", "has_sig": false, "md5_digest": "894450bcaa6e4fbf115af7e2ff4f335d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15910, "upload_time": "2014-02-06T07:23:49", "upload_time_iso_8601": "2014-02-06T07:23:49.207327Z", "url": "https://files.pythonhosted.org/packages/cb/f8/7841f74e8d697650e98c4c3ccdd4e1226ad74e983e882be8fb1282fde3e3/voldemort-0.8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3787506dba1b2a940b2adf2bae58438f", "sha256": "94638b09e4d7132585839c08d354267d6e8d2222f777b3e445469e561321d227"}, "downloads": -1, "filename": "voldemort-0.8.1-py2.6.egg", "has_sig": false, "md5_digest": "3787506dba1b2a940b2adf2bae58438f", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 27725, "upload_time": "2014-02-06T07:25:09", "upload_time_iso_8601": "2014-02-06T07:25:09.856872Z", "url": "https://files.pythonhosted.org/packages/ae/79/15fd1f2791e48881e48c2d7ee459ad264e49234f42386e2c884b92b650c9/voldemort-0.8.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "639cb36e60da3ec20ea9cf833527f047", "sha256": "dcd35d00d74331759fa3c78d1326f129ef54744363a7eb4ecb8679748b6f55a2"}, "downloads": -1, "filename": "voldemort-0.8.1-py2.7.egg", "has_sig": false, "md5_digest": "639cb36e60da3ec20ea9cf833527f047", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 27547, "upload_time": "2014-02-06T07:23:54", "upload_time_iso_8601": "2014-02-06T07:23:54.720929Z", "url": "https://files.pythonhosted.org/packages/1b/4e/3b136f9c61a56cc5b3dd3292ebfb2ad389716a010d40e43b3e2306aaef65/voldemort-0.8.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "894450bcaa6e4fbf115af7e2ff4f335d", "sha256": "4294191b881e160f7963a33ef4d35f4bc0060f82956bc4d98b1ec206a8612bf7"}, "downloads": -1, "filename": "voldemort-0.8.1.tar.gz", "has_sig": false, "md5_digest": "894450bcaa6e4fbf115af7e2ff4f335d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15910, "upload_time": "2014-02-06T07:23:49", "upload_time_iso_8601": "2014-02-06T07:23:49.207327Z", "url": "https://files.pythonhosted.org/packages/cb/f8/7841f74e8d697650e98c4c3ccdd4e1226ad74e983e882be8fb1282fde3e3/voldemort-0.8.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:34:29 2020"}