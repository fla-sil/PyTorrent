{"info": {"author": "Asko Soukka", "author_email": "asko.soukka@iki.fi", "bugtrack_url": null, "classifiers": ["Programming Language :: Python"], "description": "CoreJet test runner Pivotal Tracker integration\n===============================================\n\nThis package provides a requirements catalogue source for `corejet.testrunner`_\nthat can fetch requirements from Pivotal Tracker.\n\nTo use it, make sure it is installed in the working set of the testrunner. If\nusing Buildout, you can do this with::\n\n    [test]\n    recipe = corejet.recipe.testrunner\n    eggs =\n        corejet.pivotal\n        <other packages>\n    defaults = ['--auto-color', '--auto-progress']\n\nHere is an example command line invocation::\n\n  ./bin/test -s corejet.core --corejet=\"pivotal,token=mypivotaltoken,project=123456,filter=myepickeyword\"\n\nThe ``--corejet`` option must start with ``pivotal,`` followed by a set of\nparameters that indicate how to connect to Pivotal Tracker. The parameters are:\n\n``<epic>,<epic>,...``\n    optional pivotal.cfg section names to retrieve options per epic\n``token=<token>``\n    default `Pivotal token`_ to use in authentication\n``project=<project>``\n    default Pivotal project id to retrieve stories from\n``filter=<filter>``\n    default `Pivotal filter`_ string to retrieve stories for this epic\n``title=<title>``\n    optional requirements catalog title (defaults to the first found Pivotal\n    project title)\n\nPivotal stories matching project and filter options may contain scenarios in\nsimple Gherkin syntax in their description field, e.g.::\n\n  Scenario: First scenario\n  Given a precondition\n    And another precondition\n  When something happens\n    And something else happens\n  Then a result is expected\n    And another result is expected\n\n  Scenario: Second scenario\n  Given another precondition\n  When something else happens\n  Then a different result is expected\n\nThe parser is relatively forgiving, but note:\n\n* The parser is case-insensitive\n* Zero or more scenarios may be present\n* Scenarios must start with \"Scenario: \" followed by a name\n* The \"Given\" clause is optional, but must come first in a scenario\n* The \"When\" clause is required, and must come before the \"Then\" clause\n* The \"Then\"\" clause is also required\n* An \"And\" or \"But\" clause can come after any \"Given\", \"When\" or \"Then\", but\n  not first.\n\nPlease, note that ``filter`` will include ``includedone:true`` implicitly when\nit's not explicitly set to *false*.\n\nOptional ``pivotal.cfg`` which is looked at first the current working directory\nupwards (or from ``~/.pivotalrc``) may be an INI-style config file describing\nkey value pairs within sections (special ``defaults``-section is supported for\ndefining defaults).\n\nYou may define several epics, for example, with the following setup:\n\n1) ``~/.pivotalrc``::\n\n     [defaults]\n     token = mysecretpivotaltrackertoken\n\n2) ``./pivotal.cfg``::\n\n     [defaults]\n     title = My project\n     project = 123456\n\n     [first-epic]\n     title = A component for my project\n     filter = label:firstlabel\n\n     [another-epic]\n     title = An another component for my project\n     filter = label:anotherlabel\n\n3) Execute CoreJet with::\n\n     ./bin/test  --corejet=\"pivotal,first-epic,another-epic\"\n\nIt's also possible to define list of epic-sections in ``[defaults]`` with\n``epics = first-epic,another-epic`` and run tests with ``--corejet=pivotal``.\n\nPackage `corejet.core`_ includes XSLT to generate test skeletons in Python from\ncorejet.xml, e.g.::\n\n  xsltproc eggs/corejet.core-1.0.0-py2.6.egg/corejet/core/xslt/corejet-to-python.xsl parts/test/corejet/corejet.xml\n\nInstall experimental ``bin/pivotal`` tool by adding the following part into\nyour ``buildout.cfg``::\n\n  [buildout]\n  parts += scripts\n\n  [scripts]\n  recipe = zc.recipe.egg\n  eggs = corejet.pivotal\n\n.. _corejet.core: http://pypi.python.org/pypi/corejet.core\n.. _corejet.testrunner: http://pypi.python.org/pypi/corejet.testrunner\n.. _Pivotal token: https://www.pivotaltracker.com/help/api?version=v3#retrieve_token\n.. _Pivotal filter: https://www.pivotaltracker.com/help#howcanasearchberefined\n\nChangelog\n=========\n\n1.2.0 (2012-10-18)\n------------------\n\n- Fixed stories to always have a minimum size of 1 point.\n\n1.1.0 (2012-10-18)\n------------------\n\n- Fixed to not crash on story parsing error, but print url of the failing\n  story instead.\n\n1.0.0 (2012-05-26)\n------------------\n\n- Added support for config files and possibility to define epics using them.\n- Changed scenarios parsed from tasks to be parsed only after parsing\n  description (to allow definition of story-level steps in description).\n\n1.0a5 (2011-08-28)\n------------------\n\n- Added support for tasks: If a story has tasks, their descriptions will be\n  parsed for scenarios (and those will be appended) before parsing story's main\n  description.\n\n1.0a4 (2011-08-26)\n------------------\n\n- Fixed to replace every \" with ' before parsing scenario descriptions. If \"s\n  were allowed to let through, those should be escaped in test decorators,\n  which would look ugly.\n\n1.0a3 (2011-08-02)\n------------------\n\n- Fixed package info to match with other corejet packages.\n\n1.0a2 (2011-08-02)\n------------------\n\n- Connected Pivotal estimates to CoreJet points.\n- Added filter for stories with no scenarios.\n\n1.0a1 (2011-08-01)\n------------------\n\n- First release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/datakurre/corejet.pivotal/", "keywords": "corejet pivotal", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "corejet.pivotal", "package_url": "https://pypi.org/project/corejet.pivotal/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/corejet.pivotal/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/datakurre/corejet.pivotal/"}, "release_url": "https://pypi.org/project/corejet.pivotal/1.2.0/", "requires_dist": null, "requires_python": null, "summary": "Pivotal Tracker data source for corejet.testrunner", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"corejet-test-runner-pivotal-tracker-integration\">\n<h2>CoreJet test runner Pivotal Tracker integration</h2>\n<p>This package provides a requirements catalogue source for <a href=\"http://pypi.python.org/pypi/corejet.testrunner\" rel=\"nofollow\">corejet.testrunner</a>\nthat can fetch requirements from Pivotal Tracker.</p>\n<p>To use it, make sure it is installed in the working set of the testrunner. If\nusing Buildout, you can do this with:</p>\n<pre>[test]\nrecipe = corejet.recipe.testrunner\neggs =\n    corejet.pivotal\n    &lt;other packages&gt;\ndefaults = ['--auto-color', '--auto-progress']\n</pre>\n<p>Here is an example command line invocation:</p>\n<pre>./bin/test -s corejet.core --corejet=\"pivotal,token=mypivotaltoken,project=123456,filter=myepickeyword\"\n</pre>\n<p>The <tt><span class=\"pre\">--corejet</span></tt> option must start with <tt>pivotal,</tt> followed by a set of\nparameters that indicate how to connect to Pivotal Tracker. The parameters are:</p>\n<dl>\n<dt><tt><span class=\"pre\">&lt;epic&gt;,&lt;epic&gt;,...</span></tt></dt>\n<dd>optional pivotal.cfg section names to retrieve options per epic</dd>\n<dt><tt><span class=\"pre\">token=&lt;token&gt;</span></tt></dt>\n<dd>default <a href=\"https://www.pivotaltracker.com/help/api?version=v3#retrieve_token\" rel=\"nofollow\">Pivotal token</a> to use in authentication</dd>\n<dt><tt><span class=\"pre\">project=&lt;project&gt;</span></tt></dt>\n<dd>default Pivotal project id to retrieve stories from</dd>\n<dt><tt><span class=\"pre\">filter=&lt;filter&gt;</span></tt></dt>\n<dd>default <a href=\"https://www.pivotaltracker.com/help#howcanasearchberefined\" rel=\"nofollow\">Pivotal filter</a> string to retrieve stories for this epic</dd>\n<dt><tt><span class=\"pre\">title=&lt;title&gt;</span></tt></dt>\n<dd>optional requirements catalog title (defaults to the first found Pivotal\nproject title)</dd>\n</dl>\n<p>Pivotal stories matching project and filter options may contain scenarios in\nsimple Gherkin syntax in their description field, e.g.:</p>\n<pre>Scenario: First scenario\nGiven a precondition\n  And another precondition\nWhen something happens\n  And something else happens\nThen a result is expected\n  And another result is expected\n\nScenario: Second scenario\nGiven another precondition\nWhen something else happens\nThen a different result is expected\n</pre>\n<p>The parser is relatively forgiving, but note:</p>\n<ul>\n<li>The parser is case-insensitive</li>\n<li>Zero or more scenarios may be present</li>\n<li>Scenarios must start with \u201cScenario: \u201d followed by a name</li>\n<li>The \u201cGiven\u201d clause is optional, but must come first in a scenario</li>\n<li>The \u201cWhen\u201d clause is required, and must come before the \u201cThen\u201d clause</li>\n<li>The \u201cThen\u201d\u201d clause is also required</li>\n<li>An \u201cAnd\u201d or \u201cBut\u201d clause can come after any \u201cGiven\u201d, \u201cWhen\u201d or \u201cThen\u201d, but\nnot first.</li>\n</ul>\n<p>Please, note that <tt>filter</tt> will include <tt>includedone:true</tt> implicitly when\nit\u2019s not explicitly set to <em>false</em>.</p>\n<p>Optional <tt>pivotal.cfg</tt> which is looked at first the current working directory\nupwards (or from <tt><span class=\"pre\">~/.pivotalrc</span></tt>) may be an INI-style config file describing\nkey value pairs within sections (special <tt>defaults</tt>-section is supported for\ndefining defaults).</p>\n<p>You may define several epics, for example, with the following setup:</p>\n<ol>\n<li><p><tt><span class=\"pre\">~/.pivotalrc</span></tt>:</p>\n<pre>[defaults]\ntoken = mysecretpivotaltrackertoken\n</pre>\n</li>\n<li><p><tt>./pivotal.cfg</tt>:</p>\n<pre>[defaults]\ntitle = My project\nproject = 123456\n\n[first-epic]\ntitle = A component for my project\nfilter = label:firstlabel\n\n[another-epic]\ntitle = An another component for my project\nfilter = label:anotherlabel\n</pre>\n</li>\n<li><p>Execute CoreJet with:</p>\n<pre>./bin/test  --corejet=\"pivotal,first-epic,another-epic\"\n</pre>\n</li>\n</ol>\n<p>It\u2019s also possible to define list of epic-sections in <tt>[defaults]</tt> with\n<tt>epics = <span class=\"pre\">first-epic,another-epic</span></tt> and run tests with <tt><span class=\"pre\">--corejet=pivotal</span></tt>.</p>\n<p>Package <a href=\"http://pypi.python.org/pypi/corejet.core\" rel=\"nofollow\">corejet.core</a> includes XSLT to generate test skeletons in Python from\ncorejet.xml, e.g.:</p>\n<pre>xsltproc eggs/corejet.core-1.0.0-py2.6.egg/corejet/core/xslt/corejet-to-python.xsl parts/test/corejet/corejet.xml\n</pre>\n<p>Install experimental <tt>bin/pivotal</tt> tool by adding the following part into\nyour <tt>buildout.cfg</tt>:</p>\n<pre>[buildout]\nparts += scripts\n\n[scripts]\nrecipe = zc.recipe.egg\neggs = corejet.pivotal\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.2.0 (2012-10-18)</h3>\n<ul>\n<li>Fixed stories to always have a minimum size of 1 point.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.1.0 (2012-10-18)</h3>\n<ul>\n<li>Fixed to not crash on story parsing error, but print url of the failing\nstory instead.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.0.0 (2012-05-26)</h3>\n<ul>\n<li>Added support for config files and possibility to define epics using them.</li>\n<li>Changed scenarios parsed from tasks to be parsed only after parsing\ndescription (to allow definition of story-level steps in description).</li>\n</ul>\n</div>\n<div id=\"a5-2011-08-28\">\n<h3>1.0a5 (2011-08-28)</h3>\n<ul>\n<li>Added support for tasks: If a story has tasks, their descriptions will be\nparsed for scenarios (and those will be appended) before parsing story\u2019s main\ndescription.</li>\n</ul>\n</div>\n<div id=\"a4-2011-08-26\">\n<h3>1.0a4 (2011-08-26)</h3>\n<ul>\n<li>Fixed to replace every \u201d with \u2018 before parsing scenario descriptions. If \u201cs\nwere allowed to let through, those should be escaped in test decorators,\nwhich would look ugly.</li>\n</ul>\n</div>\n<div id=\"a3-2011-08-02\">\n<h3>1.0a3 (2011-08-02)</h3>\n<ul>\n<li>Fixed package info to match with other corejet packages.</li>\n</ul>\n</div>\n<div id=\"a2-2011-08-02\">\n<h3>1.0a2 (2011-08-02)</h3>\n<ul>\n<li>Connected Pivotal estimates to CoreJet points.</li>\n<li>Added filter for stories with no scenarios.</li>\n</ul>\n</div>\n<div id=\"a1-2011-08-01\">\n<h3>1.0a1 (2011-08-01)</h3>\n<ul>\n<li>First release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 642676, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "610d75270f86547747d795996501f09b", "sha256": "0ca2c70f844d2694c4f9104b8d77ac4c95799d90338f1622bb762103f9f410c4"}, "downloads": -1, "filename": "corejet.pivotal-1.0.0.zip", "has_sig": false, "md5_digest": "610d75270f86547747d795996501f09b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15998, "upload_time": "2012-05-26T15:43:33", "upload_time_iso_8601": "2012-05-26T15:43:33.056581Z", "url": "https://files.pythonhosted.org/packages/1c/af/819e2436e3878fd9a9c4485a236ed4cb364dcf695c20802aa6c47e367042/corejet.pivotal-1.0.0.zip", "yanked": false}], "1.0a2": [{"comment_text": "", "digests": {"md5": "f40a579977a79f5ab740014623ba8a4b", "sha256": "71e8ea8b94c94cbd808b03a250cea998f67c8e376f11bcdd11e6f8f28d0477ac"}, "downloads": -1, "filename": "corejet.pivotal-1.0a2.zip", "has_sig": false, "md5_digest": "f40a579977a79f5ab740014623ba8a4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8914, "upload_time": "2011-08-02T07:44:45", "upload_time_iso_8601": "2011-08-02T07:44:45.414891Z", "url": "https://files.pythonhosted.org/packages/2d/2f/12b114ed0ca1f878ef64b27713c18c4bc6f016eec2bb3c9523f94ff3ff3e/corejet.pivotal-1.0a2.zip", "yanked": false}], "1.0a3": [{"comment_text": "", "digests": {"md5": "5ee2c5ee33716506e78726ef30186e83", "sha256": "5cfea78d20c5c24b2746efd554ff0561cc12a5cfab973384c15c4257d3ebf60c"}, "downloads": -1, "filename": "corejet.pivotal-1.0a3.zip", "has_sig": false, "md5_digest": "5ee2c5ee33716506e78726ef30186e83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8942, "upload_time": "2011-08-02T07:57:26", "upload_time_iso_8601": "2011-08-02T07:57:26.290506Z", "url": "https://files.pythonhosted.org/packages/33/50/0c687a43c71c963b07cbe77eba6c5b3bcb62a908b8698afe4cd2225736d5/corejet.pivotal-1.0a3.zip", "yanked": false}], "1.0a4": [{"comment_text": "", "digests": {"md5": "6e3c50f00c39edb8a6ddd221d1020cdf", "sha256": "0324f8ecf2dc296905c0dac0e65681c7faf628ffe3778311ae72a40f1376b1ca"}, "downloads": -1, "filename": "corejet.pivotal-1.0a4.zip", "has_sig": false, "md5_digest": "6e3c50f00c39edb8a6ddd221d1020cdf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9286, "upload_time": "2011-08-26T13:46:03", "upload_time_iso_8601": "2011-08-26T13:46:03.479964Z", "url": "https://files.pythonhosted.org/packages/64/e5/cfadfe1a17db952813886a8ae1adb551b11aa7802fecd4e40ded9d28555f/corejet.pivotal-1.0a4.zip", "yanked": false}], "1.0a5": [{"comment_text": "", "digests": {"md5": "7f6d0a8d3feccabdf022765785885f3a", "sha256": "47e83187caf9aa70c2b2c378bb956822a80fa716ed8d1796f86d8ff8fe277d03"}, "downloads": -1, "filename": "corejet.pivotal-1.0a5.zip", "has_sig": false, "md5_digest": "7f6d0a8d3feccabdf022765785885f3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9582, "upload_time": "2011-08-28T12:03:13", "upload_time_iso_8601": "2011-08-28T12:03:13.109273Z", "url": "https://files.pythonhosted.org/packages/1b/a3/abc7bd0094b4884ff2a6bed6110eb61e63784e1082632be5e32cfde153a0/corejet.pivotal-1.0a5.zip", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "26475b0593af9e5b9e13073f4544a60e", "sha256": "fa3ee5205f5d0666bf34decd6e141790912f5d17e62b88017e293823228ff614"}, "downloads": -1, "filename": "corejet.pivotal-1.1.0.zip", "has_sig": false, "md5_digest": "26475b0593af9e5b9e13073f4544a60e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16335, "upload_time": "2012-10-18T10:45:26", "upload_time_iso_8601": "2012-10-18T10:45:26.050376Z", "url": "https://files.pythonhosted.org/packages/52/fc/1b172f9ccdfb7498e2f0c5e8edbd554a268290ea3b8b700f6c80b7aabef3/corejet.pivotal-1.1.0.zip", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "1101a180ccff522506423caeaa1ac482", "sha256": "5ccc35d895e2c6f9d529885fd00a169c44a440191cb9aea7128aabb860da0064"}, "downloads": -1, "filename": "corejet.pivotal-1.2.0.zip", "has_sig": false, "md5_digest": "1101a180ccff522506423caeaa1ac482", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16444, "upload_time": "2012-10-18T12:03:18", "upload_time_iso_8601": "2012-10-18T12:03:18.179226Z", "url": "https://files.pythonhosted.org/packages/ac/8d/a67c59d6066ec2918fc5b1532d0266df2a0ed7125f757e3f4894298a4521/corejet.pivotal-1.2.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1101a180ccff522506423caeaa1ac482", "sha256": "5ccc35d895e2c6f9d529885fd00a169c44a440191cb9aea7128aabb860da0064"}, "downloads": -1, "filename": "corejet.pivotal-1.2.0.zip", "has_sig": false, "md5_digest": "1101a180ccff522506423caeaa1ac482", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16444, "upload_time": "2012-10-18T12:03:18", "upload_time_iso_8601": "2012-10-18T12:03:18.179226Z", "url": "https://files.pythonhosted.org/packages/ac/8d/a67c59d6066ec2918fc5b1532d0266df2a0ed7125f757e3f4894298a4521/corejet.pivotal-1.2.0.zip", "yanked": false}], "timestamp": "Fri May  8 00:43:13 2020"}