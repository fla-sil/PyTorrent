{"info": {"author": "Daniele Ongari", "author_email": "daniele.ongari@epfl.ch", "bugtrack_url": null, "classifiers": ["Programming Language :: Python"], "description": "# manage_crystal\nA tool to convert crystal files (atoms coordinates + unit cell) into common files and extract some useful info\n\n## Installation:\n```\npip install manage_crystal\n```\n\n## Usage:\n\n- to get default info about the crystal:\n\n```\n$ manage_crystal.py inputfilename.inputformat [options]`\n```\n\n- to convert to another format:\n\n```\n$ manage_crystal.py inputfilename.inputformat [options] -o outputfilename.outputformat\n```\n\nor\n\n```\n$ manage_crystal.py inputfilename.inputformat [options] -o outputformat\n```\n\n- to get help and explore the functionalities:\n\n```\n$ manage_crystal.py --help\n```\n\n- to convert files inside a python script:\n```\nfrom manage_crystal.utils import parse_and_write\nparse_and_write(inputfile, outputfile)\n```\n\nTips:\n\n- you may want to use `-silent` to suppress default verbose output: several options \"skip -silent\" so that you can print just that information on the screen (e.g., `-printatoms -silent` prints on the screen just the atom types on one line). This make easy to use bash loops for lists of structures.\n\n## Development\n\nInstall manage_crystal in editable mode, and enable automatic code formatting for every commit:\n```\ngit clone https://github.com/danieleongari/manage_crystal.git\ncd manage_crystal\npip install -e .\\[pre-commit\\]\npre-commit install\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/danieleongari/manage_crystal", "keywords": "", "license": "Creative Commons", "maintainer": "", "maintainer_email": "", "name": "manage-crystal", "package_url": "https://pypi.org/project/manage-crystal/", "platform": "", "project_url": "https://pypi.org/project/manage-crystal/", "project_urls": {"Homepage": "https://github.com/danieleongari/manage_crystal"}, "release_url": "https://pypi.org/project/manage-crystal/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Tools for manipulating crystal formats", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>manage_crystal</h1>\n<p>A tool to convert crystal files (atoms coordinates + unit cell) into common files and extract some useful info</p>\n<h2>Installation:</h2>\n<pre><code>pip install manage_crystal\n</code></pre>\n<h2>Usage:</h2>\n<ul>\n<li>to get default info about the crystal:</li>\n</ul>\n<pre><code>$ manage_crystal.py inputfilename.inputformat [options]`\n</code></pre>\n<ul>\n<li>to convert to another format:</li>\n</ul>\n<pre><code>$ manage_crystal.py inputfilename.inputformat [options] -o outputfilename.outputformat\n</code></pre>\n<p>or</p>\n<pre><code>$ manage_crystal.py inputfilename.inputformat [options] -o outputformat\n</code></pre>\n<ul>\n<li>to get help and explore the functionalities:</li>\n</ul>\n<pre><code>$ manage_crystal.py --help\n</code></pre>\n<ul>\n<li>to convert files inside a python script:</li>\n</ul>\n<pre><code>from manage_crystal.utils import parse_and_write\nparse_and_write(inputfile, outputfile)\n</code></pre>\n<p>Tips:</p>\n<ul>\n<li>you may want to use <code>-silent</code> to suppress default verbose output: several options \"skip -silent\" so that you can print just that information on the screen (e.g., <code>-printatoms -silent</code> prints on the screen just the atom types on one line). This make easy to use bash loops for lists of structures.</li>\n</ul>\n<h2>Development</h2>\n<p>Install manage_crystal in editable mode, and enable automatic code formatting for every commit:</p>\n<pre><code>git clone https://github.com/danieleongari/manage_crystal.git\ncd manage_crystal\npip install -e .\\[pre-commit\\]\npre-commit install\n</code></pre>\n\n          </div>"}, "last_serial": 6488957, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f8c36ca1ddc97daf2945f693d71e5646", "sha256": "f93e89931e457f9c3c94f95f76ec4709b54fa794ebc5fb76ad07f31c28c8e0e7"}, "downloads": -1, "filename": "manage_crystal-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f8c36ca1ddc97daf2945f693d71e5646", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24716, "upload_time": "2020-01-20T17:20:54", "upload_time_iso_8601": "2020-01-20T17:20:54.812641Z", "url": "https://files.pythonhosted.org/packages/b7/5e/a21a55389c84def50e2dd9260cca7234200ee20c616a4dbac8b0956d7da2/manage_crystal-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "315d199754097e729baa42c326bb3a47", "sha256": "17423cc1499a9e2931ccdc4437f70b26c823fabf6ead1ab62269e751bb6817cd"}, "downloads": -1, "filename": "manage_crystal-0.2.0.tar.gz", "has_sig": false, "md5_digest": "315d199754097e729baa42c326bb3a47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24575, "upload_time": "2020-01-20T17:32:10", "upload_time_iso_8601": "2020-01-20T17:32:10.406954Z", "url": "https://files.pythonhosted.org/packages/91/6e/ecbc445d0ae3e16ef39213b7d9a0d66efd6e3676577b43627ea4a8e19437/manage_crystal-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "315d199754097e729baa42c326bb3a47", "sha256": "17423cc1499a9e2931ccdc4437f70b26c823fabf6ead1ab62269e751bb6817cd"}, "downloads": -1, "filename": "manage_crystal-0.2.0.tar.gz", "has_sig": false, "md5_digest": "315d199754097e729baa42c326bb3a47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24575, "upload_time": "2020-01-20T17:32:10", "upload_time_iso_8601": "2020-01-20T17:32:10.406954Z", "url": "https://files.pythonhosted.org/packages/91/6e/ecbc445d0ae3e16ef39213b7d9a0d66efd6e3676577b43627ea4a8e19437/manage_crystal-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:38 2020"}