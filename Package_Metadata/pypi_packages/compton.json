{"info": {"author": "Kael Zhang", "author_email": "i+pypi@kael.me", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![Build Status](https://travis-ci.org/kaelzhang/python-compton.svg?branch=master)](https://travis-ci.org/kaelzhang/python-compton)\n[![Coverage](https://codecov.io/gh/kaelzhang/python-compton/branch/master/graph/badge.svg)](https://codecov.io/gh/kaelzhang/python-compton)\n<!-- optional appveyor tst\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/github/kaelzhang/python-compton?branch=master&svg=true)](https://ci.appveyor.com/project/kaelzhang/python-compton)\n-->\n<!-- optional npm version\n[![NPM version](https://badge.fury.io/js/python-compton.svg)](http://badge.fury.io/js/python-compton)\n-->\n<!-- optional npm downloads\n[![npm module downloads per month](http://img.shields.io/npm/dm/python-compton.svg)](https://www.npmjs.org/package/python-compton)\n-->\n<!-- optional dependency status\n[![Dependency Status](https://david-dm.org/kaelzhang/python-compton.svg)](https://david-dm.org/kaelzhang/python-compton)\n-->\n\n# python-compton\n\nAn abstract data-flow framework for quantitative trading, which decouples data initialization, data composition and data processing.\n\n## Install\n\n```sh\npip install compton\n```\n\n## Usage\n\n```py\nfrom compton import (\n  Orchestrator,\n  Provider,\n  Reducer,\n  Consumer\n)\n```\n\n## Vector\n\nWe call a tuple of hashable parameters as a vector which is used to identify a certain kind of data.\n\n```py\nfrom enum import Enum\n\nclass DataType(Enum):\n    KLINE = 1\n    ORDER_BOOK = 2\n\nclass TimeSpan(Enum):\n    DAY = 1\n    WEEK = 2\n\nvector = (DataType.KLINE, TimeSpan.DAY)\n```\n\n## Orchestrator(reducers, loop=None)\n\n- **reducers** `List[Reducer]` reducers to compose data\n- **loop** `EventLoop` The event loop object to use\n\nThe following code shows how to use compton in a non-coroutine environmennt\n\n```py\nloop = asyncio.new_event_loop()\n\norchestrator = Orchestrator(\n    Reducers,\n    loop\n)\n\norchestrator.add('US.TSLA')\n\nloop.run_forever()\n```\n\n### orchestrator.connect(provider: Provider) -> self\n\nConnects to a data provider\n\n### orchestrator.subscribe(consumer: Consumer) -> self\n\nSubscribes the consumer to orchestrator.\n\n### orchestrator.add(symbol: str) -> self\n\nAdds a new symbol to orchestrator, and start the data flow for `symbol`\n\n## Provider\n\n`Provider` is an abstract class which provides initial data and data updates.\n\nA provider should be implemented to support many symbols\n\nWe must inherit class `Provider` and implement some abstract method before use.\n\n- `@property vector` returns an `Vector`\n- `async def init()` method returns the initial data\n- `def when_update(dispatch)` registers the dispatcher which is a callable.\n\n```py\nclass MyProvider(Provider):\n    @property\n    def vector(self):\n        return (DataType.KLINE, TimeSpan.DAY)\n\n    def when_update(self, dispatch):\n        pass\n\n    async def init(self, symbol):\n        return {}\n```\n\n## Reducer\n\nAnother abstract class which handles data composition.\n\nThe `reducer.vector` could be a generic vector which applies partial match to other vectors\n\n```py\nclass MyReducer(Reducer):\n    @property\n    def vector(self):\n        # So, MyReducer support both\n        # - (DataType.KLINE, TimeSpan.DAY)\n        # - and (DataType.KLINE, TimeSpan.WEEK)\n        return (DataType.KLINE,)\n\n    def merge(self, old, new):\n        # `old` might be `None`, if `new` is the initial data\n        if old is None:\n            # We could clean the initial data\n            return clean(new)\n\n        return {**old, **new}\n```\n\n## Consumer\n\nA consumer could subscribes to more than one kind of data types\n\n```py\nclass MyConsumer(Consumer):\n    @property\n    def vectors(self):\n        # Subscribe to two kinds of data types\n        return [\n            (DataType.KLINE, TimeSpan.DAY),\n            (DataType.KLINE, TimeSpan.WEEK)\n        ]\n\n    @property\n    def all(self):\n        # `True` indicates that the consumer will only go processing\n        # if both of the data corresponds with the two vectors have changes\n\n        # And by default, `Consumer::all` is False\n        return True\n\n    @property\n    def concurrency(self):\n        # concurrency limit for method `process()`\n\n        # By default, `Consumer::concurrency` is `0` which means no limit\n        return 1\n\n    # Then there will be\n    # both `kline_day` and `kline_week` passed into method `process`\n    async def process(self, symbol, kline_day, kline_week):\n        await doSomething(symbol, kline_day, kline_week)\n```\n\n## License\n\n[MIT](LICENSE)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kaelzhang/python-compton", "keywords": "compton dataflow quant quantitative trading stock", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "compton", "package_url": "https://pypi.org/project/compton/", "platform": "", "project_url": "https://pypi.org/project/compton/", "project_urls": {"Homepage": "https://github.com/kaelzhang/python-compton"}, "release_url": "https://pypi.org/project/compton/3.0.3/", "requires_dist": null, "requires_python": ">=3.7", "summary": "An abstract data flow framework for quantitative trading", "version": "3.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/kaelzhang/python-compton\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c1305fb85554ab81e1079ca2d0a8a7b2ed60ffc/68747470733a2f2f7472617669732d63692e6f72672f6b61656c7a68616e672f707974686f6e2d636f6d70746f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/kaelzhang/python-compton\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1e0b16790cca50d443f001ddfb4890a54a5cb21c/68747470733a2f2f636f6465636f762e696f2f67682f6b61656c7a68616e672f707974686f6e2d636f6d70746f6e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n\n\n\n\n<h1>python-compton</h1>\n<p>An abstract data-flow framework for quantitative trading, which decouples data initialization, data composition and data processing.</p>\n<h2>Install</h2>\n<pre>pip install compton\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">compton</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n  <span class=\"n\">Orchestrator</span><span class=\"p\">,</span>\n  <span class=\"n\">Provider</span><span class=\"p\">,</span>\n  <span class=\"n\">Reducer</span><span class=\"p\">,</span>\n  <span class=\"n\">Consumer</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Vector</h2>\n<p>We call a tuple of hashable parameters as a vector which is used to identify a certain kind of data.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">enum</span> <span class=\"kn\">import</span> <span class=\"n\">Enum</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">DataType</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">KLINE</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">ORDER_BOOK</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TimeSpan</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">DAY</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">WEEK</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n<span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">DataType</span><span class=\"o\">.</span><span class=\"n\">KLINE</span><span class=\"p\">,</span> <span class=\"n\">TimeSpan</span><span class=\"o\">.</span><span class=\"n\">DAY</span><span class=\"p\">)</span>\n</pre>\n<h2>Orchestrator(reducers, loop=None)</h2>\n<ul>\n<li><strong>reducers</strong> <code>List[Reducer]</code> reducers to compose data</li>\n<li><strong>loop</strong> <code>EventLoop</code> The event loop object to use</li>\n</ul>\n<p>The following code shows how to use compton in a non-coroutine environmennt</p>\n<pre><span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">new_event_loop</span><span class=\"p\">()</span>\n\n<span class=\"n\">orchestrator</span> <span class=\"o\">=</span> <span class=\"n\">Orchestrator</span><span class=\"p\">(</span>\n    <span class=\"n\">Reducers</span><span class=\"p\">,</span>\n    <span class=\"n\">loop</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">orchestrator</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s1\">'US.TSLA'</span><span class=\"p\">)</span>\n\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n</pre>\n<h3>orchestrator.connect(provider: Provider) -&gt; self</h3>\n<p>Connects to a data provider</p>\n<h3>orchestrator.subscribe(consumer: Consumer) -&gt; self</h3>\n<p>Subscribes the consumer to orchestrator.</p>\n<h3>orchestrator.add(symbol: str) -&gt; self</h3>\n<p>Adds a new symbol to orchestrator, and start the data flow for <code>symbol</code></p>\n<h2>Provider</h2>\n<p><code>Provider</code> is an abstract class which provides initial data and data updates.</p>\n<p>A provider should be implemented to support many symbols</p>\n<p>We must inherit class <code>Provider</code> and implement some abstract method before use.</p>\n<ul>\n<li><code>@property vector</code> returns an <code>Vector</code></li>\n<li><code>async def init()</code> method returns the initial data</li>\n<li><code>def when_update(dispatch)</code> registers the dispatcher which is a callable.</li>\n</ul>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyProvider</span><span class=\"p\">(</span><span class=\"n\">Provider</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">vector</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">DataType</span><span class=\"o\">.</span><span class=\"n\">KLINE</span><span class=\"p\">,</span> <span class=\"n\">TimeSpan</span><span class=\"o\">.</span><span class=\"n\">DAY</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">when_update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dispatch</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">symbol</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{}</span>\n</pre>\n<h2>Reducer</h2>\n<p>Another abstract class which handles data composition.</p>\n<p>The <code>reducer.vector</code> could be a generic vector which applies partial match to other vectors</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyReducer</span><span class=\"p\">(</span><span class=\"n\">Reducer</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">vector</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># So, MyReducer support both</span>\n        <span class=\"c1\"># - (DataType.KLINE, TimeSpan.DAY)</span>\n        <span class=\"c1\"># - and (DataType.KLINE, TimeSpan.WEEK)</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">DataType</span><span class=\"o\">.</span><span class=\"n\">KLINE</span><span class=\"p\">,)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">merge</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">old</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"p\">):</span>\n        <span class=\"c1\"># `old` might be `None`, if `new` is the initial data</span>\n        <span class=\"k\">if</span> <span class=\"n\">old</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># We could clean the initial data</span>\n            <span class=\"k\">return</span> <span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"n\">new</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"o\">**</span><span class=\"n\">old</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">new</span><span class=\"p\">}</span>\n</pre>\n<h2>Consumer</h2>\n<p>A consumer could subscribes to more than one kind of data types</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyConsumer</span><span class=\"p\">(</span><span class=\"n\">Consumer</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">vectors</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Subscribe to two kinds of data types</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span>\n            <span class=\"p\">(</span><span class=\"n\">DataType</span><span class=\"o\">.</span><span class=\"n\">KLINE</span><span class=\"p\">,</span> <span class=\"n\">TimeSpan</span><span class=\"o\">.</span><span class=\"n\">DAY</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"n\">DataType</span><span class=\"o\">.</span><span class=\"n\">KLINE</span><span class=\"p\">,</span> <span class=\"n\">TimeSpan</span><span class=\"o\">.</span><span class=\"n\">WEEK</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">all</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># `True` indicates that the consumer will only go processing</span>\n        <span class=\"c1\"># if both of the data corresponds with the two vectors have changes</span>\n\n        <span class=\"c1\"># And by default, `Consumer::all` is False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">concurrency</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># concurrency limit for method `process()`</span>\n\n        <span class=\"c1\"># By default, `Consumer::concurrency` is `0` which means no limit</span>\n        <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n    <span class=\"c1\"># Then there will be</span>\n    <span class=\"c1\"># both `kline_day` and `kline_week` passed into method `process`</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">symbol</span><span class=\"p\">,</span> <span class=\"n\">kline_day</span><span class=\"p\">,</span> <span class=\"n\">kline_week</span><span class=\"p\">):</span>\n        <span class=\"k\">await</span> <span class=\"n\">doSomething</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"p\">,</span> <span class=\"n\">kline_day</span><span class=\"p\">,</span> <span class=\"n\">kline_week</span><span class=\"p\">)</span>\n</pre>\n<h2>License</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6880634, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "70f5155fe18d78df0c9ecd2838515805", "sha256": "d271b7d314a41172f9b5f6ed95fe84b17500cca5e772a1a5c685d1f10316ed20"}, "downloads": -1, "filename": "compton-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "70f5155fe18d78df0c9ecd2838515805", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 8371, "upload_time": "2020-03-21T08:11:54", "upload_time_iso_8601": "2020-03-21T08:11:54.893916Z", "url": "https://files.pythonhosted.org/packages/d1/e1/d4a1f5b52f8d3ec6b8cd5e7b31519a68be74afe49d96d8aa82ad67c43771/compton-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cff2037bbbd200b34d4a49d57626f0ce", "sha256": "ba4cd66f3cdbde50cbe5fae2435a4d0d1c5d28758949f2be7bd573bff8fa4554"}, "downloads": -1, "filename": "compton-1.0.0.tar.gz", "has_sig": false, "md5_digest": "cff2037bbbd200b34d4a49d57626f0ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7920, "upload_time": "2020-03-21T08:11:57", "upload_time_iso_8601": "2020-03-21T08:11:57.554784Z", "url": "https://files.pythonhosted.org/packages/93/86/9fa9e759e4db0aa914e693b1180bbb71971cc89f8fb1f976b20066fed314/compton-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "24bcd7bd1bb7afe5385373950e7c2e4b", "sha256": "fd3d2d1e42cb70188bde78bce20cc70b6a46cb1a6048ca73716793a353a1d461"}, "downloads": -1, "filename": "compton-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "24bcd7bd1bb7afe5385373950e7c2e4b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9210, "upload_time": "2020-03-21T08:36:09", "upload_time_iso_8601": "2020-03-21T08:36:09.367356Z", "url": "https://files.pythonhosted.org/packages/22/68/98424409ca7a3b75b3ccad83795b63fd06680bb12788764a9a9d05de1bed/compton-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8990a5a6ca5cb729b36eb061ec73365d", "sha256": "eaa0a20a362466f1bd0744f9f6d028525506c97c1b46c35135d53a00f366694d"}, "downloads": -1, "filename": "compton-1.0.1.tar.gz", "has_sig": false, "md5_digest": "8990a5a6ca5cb729b36eb061ec73365d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 9724, "upload_time": "2020-03-21T08:36:10", "upload_time_iso_8601": "2020-03-21T08:36:10.945736Z", "url": "https://files.pythonhosted.org/packages/ff/82/590afe4373111f90a40bff5cc9ec2732740a19a8e428e71c645405c30a5b/compton-1.0.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "e1bce24973592f39bd54769223c9de43", "sha256": "476618fb8005dfb521250afa68ecc394c779d5418d7c2da2b2e4f09e815a71f0"}, "downloads": -1, "filename": "compton-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e1bce24973592f39bd54769223c9de43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9264, "upload_time": "2020-03-21T15:50:42", "upload_time_iso_8601": "2020-03-21T15:50:42.842060Z", "url": "https://files.pythonhosted.org/packages/60/e5/5ed6d12ba467679366275936677acae3bb923508a24385ca07d494b1ed8d/compton-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7218c42360021a03a3df546bb093ee75", "sha256": "c4536ff93ab18592198f6f99037002282681719b3802b96bfa3843539fbe2d06"}, "downloads": -1, "filename": "compton-2.0.0.tar.gz", "has_sig": false, "md5_digest": "7218c42360021a03a3df546bb093ee75", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 9855, "upload_time": "2020-03-21T15:50:44", "upload_time_iso_8601": "2020-03-21T15:50:44.775474Z", "url": "https://files.pythonhosted.org/packages/c8/1a/e1fa29df619bd822429c9722c899bec17c4ba4745f2c8a58acd9b0dd8d93/compton-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "1f8106f5fdc6a1b0799d469840fbc2b5", "sha256": "37e83403d19715b70c90be3a999b36bb36cef0d832e773ab37e1c675d2484bed"}, "downloads": -1, "filename": "compton-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1f8106f5fdc6a1b0799d469840fbc2b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9311, "upload_time": "2020-03-22T08:44:52", "upload_time_iso_8601": "2020-03-22T08:44:52.900937Z", "url": "https://files.pythonhosted.org/packages/df/c3/c5c74d9e147b11e7a9de58c2ba8a3ade4bab9de3240928d5e39b0e83e7b9/compton-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e82458d049f82b290a189eb3b9701797", "sha256": "59dd5b82c37852f57754efc72abf65353654b3202adb139aee4e187cb611397b"}, "downloads": -1, "filename": "compton-2.0.1.tar.gz", "has_sig": false, "md5_digest": "e82458d049f82b290a189eb3b9701797", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 9902, "upload_time": "2020-03-22T08:44:54", "upload_time_iso_8601": "2020-03-22T08:44:54.494529Z", "url": "https://files.pythonhosted.org/packages/3d/2f/f489c6d21ca4580c3678e39fa99248a28ed2253dfa7cf03b89e4abd9ec1a/compton-2.0.1.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "ee0c930f4983df60f51236d7576a928b", "sha256": "a1b24b64a1a4fa19f1d837fa9e58d13d721f62c6d6f20b50c382c61feb10a918"}, "downloads": -1, "filename": "compton-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ee0c930f4983df60f51236d7576a928b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9597, "upload_time": "2020-03-22T09:45:25", "upload_time_iso_8601": "2020-03-22T09:45:25.334783Z", "url": "https://files.pythonhosted.org/packages/57/94/e0515db41eb8409a241278c3c8e235e18836725c87fae4ea1b39c49bb32d/compton-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1260b5a263f2c978de6d5539b93ef18", "sha256": "ebb7297f387546e63f332cd2d3a12520dac8820e557592193b2332d4e3327be3"}, "downloads": -1, "filename": "compton-2.1.0.tar.gz", "has_sig": false, "md5_digest": "f1260b5a263f2c978de6d5539b93ef18", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10379, "upload_time": "2020-03-22T09:45:26", "upload_time_iso_8601": "2020-03-22T09:45:26.985194Z", "url": "https://files.pythonhosted.org/packages/cc/9a/3f48c704cfae1edbd6f55dd8d93e10e5fe106fce5355fa158c9705dbb77f/compton-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "a77e7378d1b0ce5a8b754cb8c7f831de", "sha256": "c3c7c419d05df2e0e80af5137cc969bdf2b02f086b30bccbd6985c572f173c83"}, "downloads": -1, "filename": "compton-2.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a77e7378d1b0ce5a8b754cb8c7f831de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9597, "upload_time": "2020-03-23T06:44:17", "upload_time_iso_8601": "2020-03-23T06:44:17.025442Z", "url": "https://files.pythonhosted.org/packages/10/ed/2faf4a2fe52112f1793e1c2d48a72de734151cc5990996241bb66434d9ce/compton-2.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2634f7005a0b713df76cef060054b2fe", "sha256": "663dadedc15b01d691c6de053bc3582cfacdbcf3406f5b385d4b364a07fcf7fb"}, "downloads": -1, "filename": "compton-2.1.1.tar.gz", "has_sig": false, "md5_digest": "2634f7005a0b713df76cef060054b2fe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10366, "upload_time": "2020-03-23T06:44:19", "upload_time_iso_8601": "2020-03-23T06:44:19.389155Z", "url": "https://files.pythonhosted.org/packages/e6/a5/bc0b8fbf1d8b94de21a8004b434f8013a6e4c6d8df5adb40912146768df5/compton-2.1.1.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "5f5fd17563df8a41b3269ef20985c74f", "sha256": "62c9275aac9e3c1afda1009a812682669b16b9df44eae68397af7ea49493849f"}, "downloads": -1, "filename": "compton-2.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5f5fd17563df8a41b3269ef20985c74f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9840, "upload_time": "2020-03-23T09:23:26", "upload_time_iso_8601": "2020-03-23T09:23:26.438183Z", "url": "https://files.pythonhosted.org/packages/f7/59/f00ddbfde177034eee953301a509dd8934291b827cefc95f88c4d14958a1/compton-2.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d22d5c3b0b2831a685d635d546abf08", "sha256": "39c84fcd1dbfe272dc448e6cc3a338e05f0860408e004d2f5d4d584ccf993495"}, "downloads": -1, "filename": "compton-2.2.0.tar.gz", "has_sig": false, "md5_digest": "5d22d5c3b0b2831a685d635d546abf08", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10839, "upload_time": "2020-03-23T09:23:27", "upload_time_iso_8601": "2020-03-23T09:23:27.868462Z", "url": "https://files.pythonhosted.org/packages/e5/05/f82c5e4d45e40d94f6206013756cede8b66a00b78b5cd93e4e412b7d1ef2/compton-2.2.0.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "6e1220a052d2da3082c817bb841273e4", "sha256": "f23f424e4411ed212df16316176b4fa14ba7fe38b55036ae174ee142a577245f"}, "downloads": -1, "filename": "compton-2.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6e1220a052d2da3082c817bb841273e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9977, "upload_time": "2020-03-23T15:02:38", "upload_time_iso_8601": "2020-03-23T15:02:38.487418Z", "url": "https://files.pythonhosted.org/packages/49/76/9598c6e1ec6286925bd2dbc060ba74ae57069e7189198d00635b9fccbbb6/compton-2.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b775f1beebbac76d06504bca83da737", "sha256": "878ab17e27adb7342e7ec7fd121ce81e8b7217f5faf81fa110d69950f21d034d"}, "downloads": -1, "filename": "compton-2.3.0.tar.gz", "has_sig": false, "md5_digest": "1b775f1beebbac76d06504bca83da737", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11051, "upload_time": "2020-03-23T15:02:40", "upload_time_iso_8601": "2020-03-23T15:02:40.494876Z", "url": "https://files.pythonhosted.org/packages/b1/6c/c792235a91ad4f9e365c4a84208f76258f7ecf6e9255a2f9143d0816ebff/compton-2.3.0.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "1be0baa74f303dfd9af9fa07e45e9356", "sha256": "9f6801423c0c6829ec281ea9a308d89147920abafad9294ced180caefe173557"}, "downloads": -1, "filename": "compton-2.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1be0baa74f303dfd9af9fa07e45e9356", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10001, "upload_time": "2020-03-23T15:24:59", "upload_time_iso_8601": "2020-03-23T15:24:59.828744Z", "url": "https://files.pythonhosted.org/packages/93/0a/c6567cdc97b39544099fd25976ccd8100d3720a2549c146c5e195e3dde80/compton-2.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c156940d9b3f5f128a824c71dff516e0", "sha256": "531b9f73eee704dea8e68a96b9c47cb36bc1952444568263eeadfccf05d2f2c6"}, "downloads": -1, "filename": "compton-2.3.1.tar.gz", "has_sig": false, "md5_digest": "c156940d9b3f5f128a824c71dff516e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11060, "upload_time": "2020-03-23T15:25:01", "upload_time_iso_8601": "2020-03-23T15:25:01.790801Z", "url": "https://files.pythonhosted.org/packages/22/08/00538398f9272490d5887e8fed659e84328cd0643825cf23bef76facb873/compton-2.3.1.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "33269ccd66bf51f5876d4606c18cd73e", "sha256": "1e0f98677a99bf2b1e1aa45b659b1b62ba4b5659ef180ba201ceaedbd1c67f03"}, "downloads": -1, "filename": "compton-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "33269ccd66bf51f5876d4606c18cd73e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10007, "upload_time": "2020-03-24T09:11:00", "upload_time_iso_8601": "2020-03-24T09:11:00.709905Z", "url": "https://files.pythonhosted.org/packages/d8/0a/7967fcd0874e069a3b49ca2c84d07cba85e687bfdc114f5cfbb6233c308b/compton-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bef18d508187061db138a37ff762057b", "sha256": "3a05ba9661d4489aabda2d8923ec6518c0a673e3193e57ba9d50c529c932839b"}, "downloads": -1, "filename": "compton-3.0.0.tar.gz", "has_sig": false, "md5_digest": "bef18d508187061db138a37ff762057b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11104, "upload_time": "2020-03-24T09:11:02", "upload_time_iso_8601": "2020-03-24T09:11:02.349699Z", "url": "https://files.pythonhosted.org/packages/87/92/de36ce6af41f1ceedfd17795f3b8ff2aab5cfb68702e08a04c9b15a25890/compton-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "91f049aaf77089c4edbdfbfe26bc40b5", "sha256": "ae89efbbb9f2e70fa1b5231b0cc3cecbc929a3058aecb470b3de70efa3f74533"}, "downloads": -1, "filename": "compton-3.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "91f049aaf77089c4edbdfbfe26bc40b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9887, "upload_time": "2020-03-24T09:17:43", "upload_time_iso_8601": "2020-03-24T09:17:43.568726Z", "url": "https://files.pythonhosted.org/packages/04/ea/37f3687a3ee305f1003a22da59f70ad51ca63bcb4ff5f012ff1518a9c153/compton-3.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c1f08e342f880920cecf4e2c33e6559", "sha256": "63a8371d8f367715b679b08a61f5cd012332ad1e1b8c080ab72fa6d861bc0566"}, "downloads": -1, "filename": "compton-3.0.1.tar.gz", "has_sig": false, "md5_digest": "0c1f08e342f880920cecf4e2c33e6559", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11049, "upload_time": "2020-03-24T09:17:45", "upload_time_iso_8601": "2020-03-24T09:17:45.526857Z", "url": "https://files.pythonhosted.org/packages/1b/dd/043c94394097982749c56debabb631738b5de2a36a40892b8ea1c443f5a2/compton-3.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "51774dafeda7c1fa44c6892c929da295", "sha256": "7d2b9f923984a51fdec4dc22fb26003a00411135f88fb067597acf219ffc1c81"}, "downloads": -1, "filename": "compton-3.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "51774dafeda7c1fa44c6892c929da295", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9966, "upload_time": "2020-03-25T12:02:05", "upload_time_iso_8601": "2020-03-25T12:02:05.023290Z", "url": "https://files.pythonhosted.org/packages/ee/7a/d7c7411815598f6b82a4d554432d5a49a5d86a212b6f4c74ae1608c33a90/compton-3.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47e7af048f1ad3557cc341e301d00d47", "sha256": "08d59b34762654929e2a7c0cc174d41aa3673c2e1f37da16f2a76b03d86d6219"}, "downloads": -1, "filename": "compton-3.0.2.tar.gz", "has_sig": false, "md5_digest": "47e7af048f1ad3557cc341e301d00d47", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11108, "upload_time": "2020-03-25T12:02:06", "upload_time_iso_8601": "2020-03-25T12:02:06.746784Z", "url": "https://files.pythonhosted.org/packages/ae/ec/a7af560e2fb9e2d69380a1936c22f5ff3c64bc8404ee8b36924b26236ec7/compton-3.0.2.tar.gz", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "95341a428e0418be39d3974f3afa8f07", "sha256": "c46737a636850ab8cdb6d84303b59d6872e449a5b4fb21c8ce0f87d7d310c86e"}, "downloads": -1, "filename": "compton-3.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "95341a428e0418be39d3974f3afa8f07", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10167, "upload_time": "2020-03-25T13:40:09", "upload_time_iso_8601": "2020-03-25T13:40:09.598987Z", "url": "https://files.pythonhosted.org/packages/37/b6/114596c38d6ca8ed79afb7bbd05fd4df8204dcf8da5119a09b3ae3d9e81d/compton-3.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b4c3f930fc5d4c7f01b60111d3e0956", "sha256": "de90758d2f6d3b87bf6f74f95f53726a77866d6c65aec61dcf35a7e399136366"}, "downloads": -1, "filename": "compton-3.0.3.tar.gz", "has_sig": false, "md5_digest": "5b4c3f930fc5d4c7f01b60111d3e0956", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11245, "upload_time": "2020-03-25T13:40:11", "upload_time_iso_8601": "2020-03-25T13:40:11.480473Z", "url": "https://files.pythonhosted.org/packages/c4/40/ede9565028d3764a775a5edd8fa0ee5362108f4345279abd2d6ee5da5a31/compton-3.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "95341a428e0418be39d3974f3afa8f07", "sha256": "c46737a636850ab8cdb6d84303b59d6872e449a5b4fb21c8ce0f87d7d310c86e"}, "downloads": -1, "filename": "compton-3.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "95341a428e0418be39d3974f3afa8f07", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10167, "upload_time": "2020-03-25T13:40:09", "upload_time_iso_8601": "2020-03-25T13:40:09.598987Z", "url": "https://files.pythonhosted.org/packages/37/b6/114596c38d6ca8ed79afb7bbd05fd4df8204dcf8da5119a09b3ae3d9e81d/compton-3.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b4c3f930fc5d4c7f01b60111d3e0956", "sha256": "de90758d2f6d3b87bf6f74f95f53726a77866d6c65aec61dcf35a7e399136366"}, "downloads": -1, "filename": "compton-3.0.3.tar.gz", "has_sig": false, "md5_digest": "5b4c3f930fc5d4c7f01b60111d3e0956", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11245, "upload_time": "2020-03-25T13:40:11", "upload_time_iso_8601": "2020-03-25T13:40:11.480473Z", "url": "https://files.pythonhosted.org/packages/c4/40/ede9565028d3764a775a5edd8fa0ee5362108f4345279abd2d6ee5da5a31/compton-3.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:09 2020"}