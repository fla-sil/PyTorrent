{"info": {"author": "Diederik van der Boor", "author_email": "opensource@edoburu.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Office/Business :: Financial", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "====================\ndjango-oscar-docdata\n====================\n\nPayment gateway integration for `Docdata Payments <http://www.docdatapayments.com/>`_ in django-oscar_.\nDocData Payments is a large payment gateway based in The Netherlands that supports more than\n40 international payment methods.\n\n.. _django-oscar: https://github.com/django-oscar/django-oscar\n\n.. image:: https://travis-ci.org/django-oscar/django-oscar-docdata.svg?branch=master\n    :target: https://travis-ci.org/django-oscar/django-oscar-docdata\n\n.. image:: https://badge.fury.io/py/django-oscar-docdata.svg\n   :alt: Latest PyPi release\n   :target: https://pypi.python.org/pypi/django-oscar-docdata\n\n\nInstallation\n============\n\nInstall via pip:\n\n.. code-block:: bash\n\n    pip install django-oscar-docdata\n\n\nConfiguration\n-------------\n\nConfigure the application:\n\n`DOCDATA_MERCHANT_NAME`\n    Credentials as supplied by the payment provider.\n\n`DOCDATA_MERCHANT_PASSWORD`\n    Credentials as supplied by the payment provider.\n\n`DOCDATA_PROFILE`\n    The payment-methods profile that is created in the Docdata Backoffice.\n    By default, this is named \"standard\".\n\n`DOCDATA_TESTING`\n    Whether or not to run in testing mode. Defaults to `True`.\n\nAdd to ``urls.py``:\n\n.. code-block:: python\n\n    from oscar_docdata.dashboard.app import application as docdata_dashboard_app\n\n    urlpatterns += [\n        url(r'^api/docdata/', include('oscar_docdata.urls')),\n        url(r'^dashboard/docdata/', include(docdata_dashboard_app.urls)),\n    ]\n\nAdd to ``settings.py``:\n\n.. code-block:: python\n\n    OSCAR_DASHBOARD_NAVIGATION[2]['children'].insert(1, {\n        'label': _('Docdata Orders'),\n        'url_name': 'docdata-order-list',\n    })\n\nWhile developing, enabling logging for `suds` and `oscar_docdata` is recommended to see\ndetailed information:\n\n.. code-block:: python\n\n    LOGGING = {\n        # ...\n        'loggers': {\n            # ...\n            'suds.transport': {\n                'handlers': ['console'],\n                'level': 'DEBUG',\n                'propagate': True,\n            },\n            'oscar_docdata': {\n                'handlers': ['mail_admins', 'console'],\n                'level': 'DEBUG',\n                'propagate': True,\n            },\n        },\n    }\n\nExtra: subaccount support\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDocdata allows creating multiple accounts under the same contract.  This is called a \"sub account\".\nEach account has it's own connections to VISA/MasterCard/PayPal/etc.\nThis module supports such use-case.\n\nWhen you fill in the ``DOCDATA_MERCHANT_PASSWORDS`` dictionary,\norders submitted to any of these merchants can be displayed in the admin,\nand they can receive status updates. Each key/value is a merchant-name/password pair.\n\nWhen no subaccounts are configured, only the orders submitted by the current merchant can be displayed in the admin.\nThis supports a multi-tennant database structure, while each tennant only sees their own orders.\n\n\nIntegration into your project\n-----------------------------\n\nPlease view the `sandbox application`_ how to integrate the application.\nThis includes the project-specific decisions such as:\n\n* How to create payment events.\n* How to create a custom facade class\n* Which fields to map to the \"house number\" field. (e.g. ``line2``, ``line3`` or a custom field).\n* Whether to cancel an order when the customer aborted the payment.\n* When to submit confirmation emails.\n\n\nLocal development and running the tests\n---------------------------------------\n\nYou can use the included Makefile to install a development environment and to run the flake8\nchecker and the testrunner. Make sure you do this inside a virtualenv:\n\n.. code-block:: bash\n\n    git clone git@github.com:django-oscar/django-oscar-docdata.git\n\n    cd django-oscar-docdata\n    make install\n    make lint\n    make test\n\n\nRunning the Sandbox application\n-------------------------------\n\nIt is possible to run the `sandbox application`_ to test this package and to see if your\nDocdata credentials work. You can set the `DOCDATA_MERCHANT_NAME`, `DOCDATA_MERCHANT_PASSWORD` and `DOCDATA_PROFILE`\nenvironment variables before running `manage.py`:\n\n.. code-block:: bash\n\n    # creates a local sqlite database\n    ./sandbox/manage.py migrate\n\n    # loads some sample products (books)\n    ./sandbox/manage.py oscar_import_catalogue sandbox/fixtures/books.csv\n\n    # so you can fill out your shipping address\n    ./sandbox/manage.py loaddata sandbox/fixtures/countries.json\n\n    # run the sandbox installation with the docdata merchant username, password and profile\n    DOCDATA_MERCHANT_NAME=merchant DOCDATA_MERCHANT_PASSWORD=merchant DOCDATA_PROFILE=test ./sandbox/manage.py runserver\n\nDocdata is really keen on having unique merchant order ids. Why is not really clear as they don't\nuse this references (they use their own). To avoid conflicts, the sandbox app adds the current datetime\nas a prefix.\n\nDocdata's payment menu allows you to choose a payment method available so you don't need this in\nthe checkout application. You can disable the sandbox payment method selection with the following\nenvironment variable::\n\n    SKIP_PAYMENT_CHOICES=1\n\n\nConfiguration of the Docdata Backoffice\n---------------------------------------\n\nMake sure the following settings are configured:\n\n* The \"Payment Method names\" need to be added to a profile (default value of ``DOCDATA_PROFILE`` is \"standard\").\n* The notification URL and return URL need to be set. Example values:\n\n * Success: ``http://example.org/api/docdata/update_order/?callback=SUCCESS&order_id=``\n * Cancelled: ``http://example.org/api/docdata/update_order/?callback=CANCELLED&order_id=``\n * Error: ``http://example.org/api/docdata/update_order/?callback=ERROR&order_id=``\n * Pending: ``http://example.org/api/docdata/update_order/?callback=PENDING&order_id=``\n * Update URL: ``http://example.org/api/docdata/update_order/?order_id=``\n\n\nDocdata Payment Service Specification\n-------------------------------------\n\nSee the `paymentService <https://secure.docdatapayments.com/ps/orderapi-1_3.wsdl>`_ specification for\ndetailed technical information.\n\nCaveats\n=======\n\nWhile working with the Docdata 1.0, 1.2 and 1.3 API, we found the following limitations:\n\n* Address fields are oriented towards Dutch address standards.\n  Passing international address fields is hard, or requires hacking, for example:\n\n * Faking the house number (because the US address fields have no official field for that).\n * Streets have a limit of 35 characters, so the \"Address Line 1\" should be truncated.\n\n* Passing invalid address fields could cause PayPal, VISA or MasterCard transactions to fail.\n* PayPal payments may fail when the \"state\" field is invalid (e.g. because of a typo). This is a check done by PayPal. Docdata however, passes that responsibility to the merchant (you).\n* The ``<billTo><address><state>`` field is typically ignored. Provide it via ``<invoice><shipTo><address><state>``. Seriously.\n* The individual payment objects have a status value, but the payment cluster does not.\n  This means that there is no global status value to read.\n  If an order has been cancelled before starting a payment, there is no way to tell from the API.\n  The only way this can be detected, is when the customer presses the \"Back to shop\" link, which calls the cancel callback url.\n  You may want to catch the ``return_view_called`` signal for this.\n* Determining that an order has been paid happens by comparing \"received >= expected\".\n  This could break with currency conversions.\n  Again, because the payment cluster status is not exposed in the API.\n  As workaround, there is a ``DOCDATA_PAYMENT_SUCCESS_MARGIN`` setting to add a margin of 100 cents.\n* Be prepared to have XSD validation errors for bad input. For example, a bad postcode, house number or exceeding a max length leads to errors like::\n\n    REQUEST_DATA_INCORRECT\n    XML request does not match XSD. The data is: cvc-type.3.1.3: The value 'This is a wonderful product and campaign! Wish you a lot of luck!' of element 'ns0:description' is not valid\n\nWe hope this will be addressed by Docdata Payments in future versions of the API.\n\n\n.. _`sandbox application`: https://github.com/django-oscar/django-oscar-docdata/tree/master/sandbox\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/django-oscar/django-oscar-docdata/zipball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/django-oscar/django-oscar-docdata", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "django-oscar-docdata", "package_url": "https://pypi.org/project/django-oscar-docdata/", "platform": "", "project_url": "https://pypi.org/project/django-oscar-docdata/", "project_urls": {"Download": "https://github.com/django-oscar/django-oscar-docdata/zipball/master", "Homepage": "https://github.com/django-oscar/django-oscar-docdata"}, "release_url": "https://pypi.org/project/django-oscar-docdata/1.3.3/", "requires_dist": ["suds-jurko (>=0.6)", "django-oscar (>=1.5)", "six (>=1.10)", "wheel ; extra == 'dev'", "twine ; extra == 'dev'", "flake8 ; extra == 'dev'", "pytest (<5) ; extra == 'dev'", "pytest-django ; extra == 'dev'", "pytest-mock ; extra == 'dev'", "pytest-env ; extra == 'dev'", "django-webtest ; extra == 'dev'"], "requires_python": "", "summary": "Docdata Payments Gateway integration for django-oscar", "version": "1.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Payment gateway integration for <a href=\"http://www.docdatapayments.com/\" rel=\"nofollow\">Docdata Payments</a> in <a href=\"https://github.com/django-oscar/django-oscar\" rel=\"nofollow\">django-oscar</a>.\nDocData Payments is a large payment gateway based in The Netherlands that supports more than\n40 international payment methods.</p>\n<a href=\"https://travis-ci.org/django-oscar/django-oscar-docdata\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/django-oscar/django-oscar-docdata.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/635a329d328677debfa41a81e2492e67db809380/68747470733a2f2f7472617669732d63692e6f72672f646a616e676f2d6f736361722f646a616e676f2d6f736361722d646f63646174612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/django-oscar-docdata\" rel=\"nofollow\"><img alt=\"Latest PyPi release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68f39438043a7a56386c398a71f7b6548b8741df/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d6f736361722d646f63646174612e737667\"></a>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install via pip:</p>\n<pre>pip install django-oscar-docdata\n</pre>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>Configure the application:</p>\n<dl>\n<dt><cite>DOCDATA_MERCHANT_NAME</cite></dt>\n<dd>Credentials as supplied by the payment provider.</dd>\n<dt><cite>DOCDATA_MERCHANT_PASSWORD</cite></dt>\n<dd>Credentials as supplied by the payment provider.</dd>\n<dt><cite>DOCDATA_PROFILE</cite></dt>\n<dd>The payment-methods profile that is created in the Docdata Backoffice.\nBy default, this is named \u201cstandard\u201d.</dd>\n<dt><cite>DOCDATA_TESTING</cite></dt>\n<dd>Whether or not to run in testing mode. Defaults to <cite>True</cite>.</dd>\n</dl>\n<p>Add to <tt>urls.py</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">oscar_docdata.dashboard.app</span> <span class=\"kn\">import</span> <span class=\"n\">application</span> <span class=\"k\">as</span> <span class=\"n\">docdata_dashboard_app</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">+=</span> <span class=\"p\">[</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^api/docdata/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'oscar_docdata.urls'</span><span class=\"p\">)),</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^dashboard/docdata/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"n\">docdata_dashboard_app</span><span class=\"o\">.</span><span class=\"n\">urls</span><span class=\"p\">)),</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Add to <tt>settings.py</tt>:</p>\n<pre><span class=\"n\">OSCAR_DASHBOARD_NAVIGATION</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">][</span><span class=\"s1\">'children'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'label'</span><span class=\"p\">:</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s1\">'Docdata Orders'</span><span class=\"p\">),</span>\n    <span class=\"s1\">'url_name'</span><span class=\"p\">:</span> <span class=\"s1\">'docdata-order-list'</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n</pre>\n<p>While developing, enabling logging for <cite>suds</cite> and <cite>oscar_docdata</cite> is recommended to see\ndetailed information:</p>\n<pre><span class=\"n\">LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s1\">'loggers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"c1\"># ...</span>\n        <span class=\"s1\">'suds.transport'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'console'</span><span class=\"p\">],</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'propagate'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'oscar_docdata'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'mail_admins'</span><span class=\"p\">,</span> <span class=\"s1\">'console'</span><span class=\"p\">],</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'propagate'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n<div id=\"extra-subaccount-support\">\n<h4>Extra: subaccount support</h4>\n<p>Docdata allows creating multiple accounts under the same contract.  This is called a \u201csub account\u201d.\nEach account has it\u2019s own connections to VISA/MasterCard/PayPal/etc.\nThis module supports such use-case.</p>\n<p>When you fill in the <tt>DOCDATA_MERCHANT_PASSWORDS</tt> dictionary,\norders submitted to any of these merchants can be displayed in the admin,\nand they can receive status updates. Each key/value is a merchant-name/password pair.</p>\n<p>When no subaccounts are configured, only the orders submitted by the current merchant can be displayed in the admin.\nThis supports a multi-tennant database structure, while each tennant only sees their own orders.</p>\n</div>\n</div>\n<div id=\"integration-into-your-project\">\n<h3>Integration into your project</h3>\n<p>Please view the <a href=\"https://github.com/django-oscar/django-oscar-docdata/tree/master/sandbox\" rel=\"nofollow\">sandbox application</a> how to integrate the application.\nThis includes the project-specific decisions such as:</p>\n<ul>\n<li>How to create payment events.</li>\n<li>How to create a custom facade class</li>\n<li>Which fields to map to the \u201chouse number\u201d field. (e.g. <tt>line2</tt>, <tt>line3</tt> or a custom field).</li>\n<li>Whether to cancel an order when the customer aborted the payment.</li>\n<li>When to submit confirmation emails.</li>\n</ul>\n</div>\n<div id=\"local-development-and-running-the-tests\">\n<h3>Local development and running the tests</h3>\n<p>You can use the included Makefile to install a development environment and to run the flake8\nchecker and the testrunner. Make sure you do this inside a virtualenv:</p>\n<pre>git clone git@github.com:django-oscar/django-oscar-docdata.git\n\n<span class=\"nb\">cd</span> django-oscar-docdata\nmake install\nmake lint\nmake <span class=\"nb\">test</span>\n</pre>\n</div>\n<div id=\"running-the-sandbox-application\">\n<h3>Running the Sandbox application</h3>\n<p>It is possible to run the <a href=\"https://github.com/django-oscar/django-oscar-docdata/tree/master/sandbox\" rel=\"nofollow\">sandbox application</a> to test this package and to see if your\nDocdata credentials work. You can set the <cite>DOCDATA_MERCHANT_NAME</cite>, <cite>DOCDATA_MERCHANT_PASSWORD</cite> and <cite>DOCDATA_PROFILE</cite>\nenvironment variables before running <cite>manage.py</cite>:</p>\n<pre><span class=\"c1\"># creates a local sqlite database\n</span>./sandbox/manage.py migrate\n\n<span class=\"c1\"># loads some sample products (books)\n</span>./sandbox/manage.py oscar_import_catalogue sandbox/fixtures/books.csv\n\n<span class=\"c1\"># so you can fill out your shipping address\n</span>./sandbox/manage.py loaddata sandbox/fixtures/countries.json\n\n<span class=\"c1\"># run the sandbox installation with the docdata merchant username, password and profile\n</span><span class=\"nv\">DOCDATA_MERCHANT_NAME</span><span class=\"o\">=</span>merchant <span class=\"nv\">DOCDATA_MERCHANT_PASSWORD</span><span class=\"o\">=</span>merchant <span class=\"nv\">DOCDATA_PROFILE</span><span class=\"o\">=</span><span class=\"nb\">test</span> ./sandbox/manage.py runserver\n</pre>\n<p>Docdata is really keen on having unique merchant order ids. Why is not really clear as they don\u2019t\nuse this references (they use their own). To avoid conflicts, the sandbox app adds the current datetime\nas a prefix.</p>\n<p>Docdata\u2019s payment menu allows you to choose a payment method available so you don\u2019t need this in\nthe checkout application. You can disable the sandbox payment method selection with the following\nenvironment variable:</p>\n<pre>SKIP_PAYMENT_CHOICES=1\n</pre>\n</div>\n<div id=\"configuration-of-the-docdata-backoffice\">\n<h3>Configuration of the Docdata Backoffice</h3>\n<p>Make sure the following settings are configured:</p>\n<ul>\n<li>The \u201cPayment Method names\u201d need to be added to a profile (default value of <tt>DOCDATA_PROFILE</tt> is \u201cstandard\u201d).</li>\n<li>The notification URL and return URL need to be set. Example values:</li>\n</ul>\n<blockquote>\n<ul>\n<li>Success: <tt><span class=\"pre\">http://example.org/api/docdata/update_order/?callback=SUCCESS&amp;order_id=</span></tt></li>\n<li>Cancelled: <tt><span class=\"pre\">http://example.org/api/docdata/update_order/?callback=CANCELLED&amp;order_id=</span></tt></li>\n<li>Error: <tt><span class=\"pre\">http://example.org/api/docdata/update_order/?callback=ERROR&amp;order_id=</span></tt></li>\n<li>Pending: <tt><span class=\"pre\">http://example.org/api/docdata/update_order/?callback=PENDING&amp;order_id=</span></tt></li>\n<li>Update URL: <tt><span class=\"pre\">http://example.org/api/docdata/update_order/?order_id=</span></tt></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"docdata-payment-service-specification\">\n<h3>Docdata Payment Service Specification</h3>\n<p>See the <a href=\"https://secure.docdatapayments.com/ps/orderapi-1_3.wsdl\" rel=\"nofollow\">paymentService</a> specification for\ndetailed technical information.</p>\n</div>\n</div>\n<div id=\"caveats\">\n<h2>Caveats</h2>\n<p>While working with the Docdata 1.0, 1.2 and 1.3 API, we found the following limitations:</p>\n<ul>\n<li>Address fields are oriented towards Dutch address standards.\nPassing international address fields is hard, or requires hacking, for example:</li>\n</ul>\n<blockquote>\n<ul>\n<li>Faking the house number (because the US address fields have no official field for that).</li>\n<li>Streets have a limit of 35 characters, so the \u201cAddress Line 1\u201d should be truncated.</li>\n</ul>\n</blockquote>\n<ul>\n<li><p>Passing invalid address fields could cause PayPal, VISA or MasterCard transactions to fail.</p>\n</li>\n<li><p>PayPal payments may fail when the \u201cstate\u201d field is invalid (e.g. because of a typo). This is a check done by PayPal. Docdata however, passes that responsibility to the merchant (you).</p>\n</li>\n<li><p>The <tt><span class=\"pre\">&lt;billTo&gt;&lt;address&gt;&lt;state&gt;</span></tt> field is typically ignored. Provide it via <tt><span class=\"pre\">&lt;invoice&gt;&lt;shipTo&gt;&lt;address&gt;&lt;state&gt;</span></tt>. Seriously.</p>\n</li>\n<li><p>The individual payment objects have a status value, but the payment cluster does not.\nThis means that there is no global status value to read.\nIf an order has been cancelled before starting a payment, there is no way to tell from the API.\nThe only way this can be detected, is when the customer presses the \u201cBack to shop\u201d link, which calls the cancel callback url.\nYou may want to catch the <tt>return_view_called</tt> signal for this.</p>\n</li>\n<li><p>Determining that an order has been paid happens by comparing \u201creceived &gt;= expected\u201d.\nThis could break with currency conversions.\nAgain, because the payment cluster status is not exposed in the API.\nAs workaround, there is a <tt>DOCDATA_PAYMENT_SUCCESS_MARGIN</tt> setting to add a margin of 100 cents.</p>\n</li>\n<li><p>Be prepared to have XSD validation errors for bad input. For example, a bad postcode, house number or exceeding a max length leads to errors like:</p>\n<pre>REQUEST_DATA_INCORRECT\nXML request does not match XSD. The data is: cvc-type.3.1.3: The value 'This is a wonderful product and campaign! Wish you a lot of luck!' of element 'ns0:description' is not valid\n</pre>\n</li>\n</ul>\n<p>We hope this will be addressed by Docdata Payments in future versions of the API.</p>\n</div>\n\n          </div>"}, "last_serial": 5091315, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "3ad34f9999891c1a4d2d1e123174ee15", "sha256": "c7248eeec994176f2569d5283ca6aa1e9c60cd0ceac523f8b696dec20144de1c"}, "downloads": -1, "filename": "django-oscar-docdata-1.0.tar.gz", "has_sig": false, "md5_digest": "3ad34f9999891c1a4d2d1e123174ee15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28464, "upload_time": "2014-06-10T19:44:22", "upload_time_iso_8601": "2014-06-10T19:44:22.152907Z", "url": "https://files.pythonhosted.org/packages/2b/30/15685833ec73e4275c15a80412bb60f9d974aa8c7800927dd43f5eadc030/django-oscar-docdata-1.0.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "5520cdcf44784dcd75f9e5e17c5ac63a", "sha256": "4e1e45b95f9b88c0598f500bbe72d23ee14123fb911f2739adbf971b04eff244"}, "downloads": -1, "filename": "django-oscar-docdata-1.2.tar.gz", "has_sig": false, "md5_digest": "5520cdcf44784dcd75f9e5e17c5ac63a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28915, "upload_time": "2014-06-11T10:14:26", "upload_time_iso_8601": "2014-06-11T10:14:26.100811Z", "url": "https://files.pythonhosted.org/packages/b7/e2/be52be625015c851b204b1d955a3d8ec917cc01e029ce39ba661fe68bdbd/django-oscar-docdata-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "62a1b89a147589afd55797cef2d12b4b", "sha256": "b408a93518308885e86a410cc1f44cc6bcb7c3c741366957a3bfa039d72d4ee9"}, "downloads": -1, "filename": "django-oscar-docdata-1.2.1.tar.gz", "has_sig": false, "md5_digest": "62a1b89a147589afd55797cef2d12b4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29638, "upload_time": "2014-07-11T10:27:51", "upload_time_iso_8601": "2014-07-11T10:27:51.191630Z", "url": "https://files.pythonhosted.org/packages/36/e7/3e10e672325edc44ac943393dc4293b6d81d217b4d0597fcc91d14464b54/django-oscar-docdata-1.2.1.tar.gz", "yanked": false}], "1.2.10": [{"comment_text": "", "digests": {"md5": "21b6c0d862b550ef69b13ee19a09c399", "sha256": "bafc5ab2914b02355cfb9c05c5d6b9e61dbcf264f7c4ddc416c089b5cd36b647"}, "downloads": -1, "filename": "django_oscar_docdata-1.2.10-py3-none-any.whl", "has_sig": false, "md5_digest": "21b6c0d862b550ef69b13ee19a09c399", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 61507, "upload_time": "2017-01-04T12:51:04", "upload_time_iso_8601": "2017-01-04T12:51:04.001478Z", "url": "https://files.pythonhosted.org/packages/4a/57/8d43418a8bf7b24bbdd25f98519d17a03edcf07b229c75a6ffd99e77838e/django_oscar_docdata-1.2.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1a912ecec4e437f227ce6aa24ae6026", "sha256": "7a83eded8d66dc3c197cced1f9d22f8586eeccbc5eeffb3b5af0129c8cb3f89a"}, "downloads": -1, "filename": "django-oscar-docdata-1.2.10.tar.gz", "has_sig": false, "md5_digest": "c1a912ecec4e437f227ce6aa24ae6026", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46057, "upload_time": "2017-01-04T12:51:06", "upload_time_iso_8601": "2017-01-04T12:51:06.343683Z", "url": "https://files.pythonhosted.org/packages/d6/f0/344755a2a562e9fbdceb25d1c052bab8784a21e36a84a36a89f7fa127cf8/django-oscar-docdata-1.2.10.tar.gz", "yanked": false}], "1.2.11": [{"comment_text": "", "digests": {"md5": "3770ab9f506fd0240596bccb68e73137", "sha256": "80cb8485c68a9ac37648bb6a0065cac7ff643538934713abc5e2cd35024ee234"}, "downloads": -1, "filename": "django_oscar_docdata-1.2.11-py3-none-any.whl", "has_sig": false, "md5_digest": "3770ab9f506fd0240596bccb68e73137", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 62058, "upload_time": "2018-03-07T10:54:41", "upload_time_iso_8601": "2018-03-07T10:54:41.444615Z", "url": "https://files.pythonhosted.org/packages/0c/d2/7f65d3baddd0c555e7d5b030e9112b026f3f964263b6833bbae2da50243d/django_oscar_docdata-1.2.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a90f1bf101b76a8454f7dff0440dcf9", "sha256": "2e9090c71895360d23789c8c75a9ba2ede3d1fce9322fc007a5ca484bb026604"}, "downloads": -1, "filename": "django-oscar-docdata-1.2.11.tar.gz", "has_sig": false, "md5_digest": "4a90f1bf101b76a8454f7dff0440dcf9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47258, "upload_time": "2018-03-07T10:54:42", "upload_time_iso_8601": "2018-03-07T10:54:42.608275Z", "url": "https://files.pythonhosted.org/packages/1c/aa/27985fa856474a55feafc1d88c2bb2729220415679ae413f5b016dfa2e3b/django-oscar-docdata-1.2.11.tar.gz", "yanked": false}], "1.2.12": [{"comment_text": "", "digests": {"md5": "5b6c80cd1ef0847601f48fdf20dda44a", "sha256": "41e9995d4487edfca02a74476e620ded7d089612cc20b7f905568e503a64d99b"}, "downloads": -1, "filename": "django_oscar_docdata-1.2.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5b6c80cd1ef0847601f48fdf20dda44a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 56812, "upload_time": "2019-02-06T20:23:16", "upload_time_iso_8601": "2019-02-06T20:23:16.969161Z", "url": "https://files.pythonhosted.org/packages/63/2e/eed23fd6362c31bbc258fb72b6f7bd4d92d39a1a9a9f628df7eda0195e76/django_oscar_docdata-1.2.12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a9d338c0aaf6c61910e99d9f4bbb4f5", "sha256": "e8d61c8bb60d9d3a2db9a60e6a2af0d4d588f0469db4b5bbc5b15bac83e35638"}, "downloads": -1, "filename": "django-oscar-docdata-1.2.12.tar.gz", "has_sig": false, "md5_digest": "0a9d338c0aaf6c61910e99d9f4bbb4f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39994, "upload_time": "2019-02-06T20:23:18", "upload_time_iso_8601": "2019-02-06T20:23:18.856695Z", "url": "https://files.pythonhosted.org/packages/b3/1e/c8553e943bc81a74a2211f7d5610265b159584b850016f5d443f10e4b862/django-oscar-docdata-1.2.12.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "9d8ac2f1ec039daaa44d3f0de6733be1", "sha256": "6a1e47e0b5a46fd8ea8b724f4dc8bc62fee583cdf942ca0ea6b5c76b7e248c14"}, "downloads": -1, "filename": "django_oscar_docdata-1.2.2-py2-none-any.whl", "has_sig": false, "md5_digest": "9d8ac2f1ec039daaa44d3f0de6733be1", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 40224, "upload_time": "2014-08-15T10:33:28", "upload_time_iso_8601": "2014-08-15T10:33:28.588451Z", "url": "https://files.pythonhosted.org/packages/b6/b4/d735077496bc9bca5d214365dafa36a33202b676c176b4794ec236592f28/django_oscar_docdata-1.2.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e824007b70dfce8ee1c64eac62dcb750", "sha256": "ab9b6e618de5f2388094527ae9fc18c083338ca19dad007c49ff9407afba5f8f"}, "downloads": -1, "filename": "django-oscar-docdata-1.2.2.tar.gz", "has_sig": false, "md5_digest": "e824007b70dfce8ee1c64eac62dcb750", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31625, "upload_time": "2014-08-15T10:21:38", "upload_time_iso_8601": "2014-08-15T10:21:38.150105Z", "url": "https://files.pythonhosted.org/packages/a8/5f/25c2e8e2b6fa324af3f757f1f7a4d55a4cd53784532766f7a548c1dc4659/django-oscar-docdata-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "d68595a0d21062880cb2931833e37ee1", "sha256": "8743b986d6bffbfb77325a30794ba742f916155aba7425efc244b609f1b3a1b6"}, "downloads": -1, "filename": "django_oscar_docdata-1.2.3-py2-none-any.whl", "has_sig": false, "md5_digest": "d68595a0d21062880cb2931833e37ee1", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 40897, "upload_time": "2014-08-29T09:42:40", "upload_time_iso_8601": "2014-08-29T09:42:40.765327Z", "url": "https://files.pythonhosted.org/packages/d4/99/11556d6f69ef34828a76076be9430fe50ad259308b6b6185a8aa7669cf7c/django_oscar_docdata-1.2.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da9ef4bda09fe4da02d79111bf347cb1", "sha256": "dbb06eeac5401030d34b08bdfc42c54a35b3f08189dcd55e1b2f48049a392e17"}, "downloads": -1, "filename": "django-oscar-docdata-1.2.3.tar.gz", "has_sig": false, "md5_digest": "da9ef4bda09fe4da02d79111bf347cb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31994, "upload_time": "2014-08-29T09:42:38", "upload_time_iso_8601": "2014-08-29T09:42:38.062869Z", "url": "https://files.pythonhosted.org/packages/4f/b6/0ab26e372a8f7f348cd836d5b8d7fe3104999d4f56443a905acc0215a93e/django-oscar-docdata-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "c01314912c061518ae581f2a7bdda3f2", "sha256": "c09bd643c5c51956531996f7190c19ee25cf8b5ead9f2fe5046a9020f0f77dce"}, "downloads": -1, "filename": "django_oscar_docdata-1.2.4-py2-none-any.whl", "has_sig": false, "md5_digest": "c01314912c061518ae581f2a7bdda3f2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 52200, "upload_time": "2015-01-28T13:36:56", "upload_time_iso_8601": "2015-01-28T13:36:56.189579Z", "url": "https://files.pythonhosted.org/packages/15/63/2029dc7121267d3481b63d8ba082165059ad0d42f7330c6d663105bfc6fe/django_oscar_docdata-1.2.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bbdc13e18473a0912ad43bdbe4834f6", "sha256": "189735a78216bfcb5cb7b7af90fe3784086774d5bc2788c2b21ffd76c525cd15"}, "downloads": -1, "filename": "django-oscar-docdata-1.2.4.tar.gz", "has_sig": false, "md5_digest": "9bbdc13e18473a0912ad43bdbe4834f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40079, "upload_time": "2015-01-28T13:36:53", "upload_time_iso_8601": "2015-01-28T13:36:53.558104Z", "url": "https://files.pythonhosted.org/packages/dc/ed/1e74704aac341458dd016a006b7dc4929558f548ff09452e709fd1671d5d/django-oscar-docdata-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "22015253a1db9c2deca1dee3ada9303c", "sha256": "fa3029ce52dc84a96cdb40f3a0e53f5de9b139c05c60fdb6931d1cd28973f1f3"}, "downloads": -1, "filename": "django_oscar_docdata-1.2.5-py2-none-any.whl", "has_sig": false, "md5_digest": "22015253a1db9c2deca1dee3ada9303c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 55789, "upload_time": "2015-09-02T18:45:21", "upload_time_iso_8601": "2015-09-02T18:45:21.792805Z", "url": "https://files.pythonhosted.org/packages/b6/e1/9800bd7294a038bfed6152df14c6e2279e1b075f51693f48be7b603344ac/django_oscar_docdata-1.2.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41f5df465a50bd0c8b458c7901a10158", "sha256": "f12436aa4bc26e8a9fb14ce85dceb906268407bf3d08a8a83401b0c229d724dc"}, "downloads": -1, "filename": "django-oscar-docdata-1.2.5.tar.gz", "has_sig": false, "md5_digest": "41f5df465a50bd0c8b458c7901a10158", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43189, "upload_time": "2015-09-02T18:45:18", "upload_time_iso_8601": "2015-09-02T18:45:18.014100Z", "url": "https://files.pythonhosted.org/packages/48/bd/4f0596ed2cfb5e3013e985a764a451e5891c60f87a8d1904de7d98acf1ed/django-oscar-docdata-1.2.5.tar.gz", "yanked": false}], "1.2.6": [{"comment_text": "", "digests": {"md5": "a2e0825c016d174e7b652edc25061149", "sha256": "7d8c6a90d5f3398a326a52f75cc50f2d5fb5ed306be10b5b5c98cbcdcee69c5d"}, "downloads": -1, "filename": "django_oscar_docdata-1.2.6-py2-none-any.whl", "has_sig": false, "md5_digest": "a2e0825c016d174e7b652edc25061149", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 57465, "upload_time": "2015-10-02T10:40:00", "upload_time_iso_8601": "2015-10-02T10:40:00.130384Z", "url": "https://files.pythonhosted.org/packages/47/d1/238cf2da15c8108e74663ecf70b83da81e4891be45d07526437ed35227c6/django_oscar_docdata-1.2.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e9c9b200acab946fd1fc4f8b7dae933", "sha256": "eb52145829b2d4753f73dea032dc3b16bfc020553c9ea31766a6eb6b245f44a4"}, "downloads": -1, "filename": "django-oscar-docdata-1.2.6.tar.gz", "has_sig": false, "md5_digest": "0e9c9b200acab946fd1fc4f8b7dae933", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44099, "upload_time": "2015-10-02T10:39:41", "upload_time_iso_8601": "2015-10-02T10:39:41.471339Z", "url": "https://files.pythonhosted.org/packages/cd/e3/84f33af3421974ee588a07338ec317fb48354fa6d0a865afb09470ad69c1/django-oscar-docdata-1.2.6.tar.gz", "yanked": false}], "1.2.7": [{"comment_text": "", "digests": {"md5": "2567b41974defb98bf294c8f44cf2599", "sha256": "d46640fa7bb915d8183c9058483a7441c2a24cde290bcded7c5cad46a2f32f48"}, "downloads": -1, "filename": "django_oscar_docdata-1.2.7-py2-none-any.whl", "has_sig": false, "md5_digest": "2567b41974defb98bf294c8f44cf2599", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 61767, "upload_time": "2015-12-17T10:45:42", "upload_time_iso_8601": "2015-12-17T10:45:42.041962Z", "url": "https://files.pythonhosted.org/packages/0e/09/2c0cf2c812eefade4478993273e5e8996e9212f6e98811d0a5188ebdefbf/django_oscar_docdata-1.2.7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5f75c7b25e7606e7ffb8f648d09b28f", "sha256": "838d15e033c4a263470c395d27135425309e0cc4dece855c247d21e18fa7a081"}, "downloads": -1, "filename": "django-oscar-docdata-1.2.7.tar.gz", "has_sig": false, "md5_digest": "d5f75c7b25e7606e7ffb8f648d09b28f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46125, "upload_time": "2015-12-17T10:45:32", "upload_time_iso_8601": "2015-12-17T10:45:32.000394Z", "url": "https://files.pythonhosted.org/packages/0c/73/5b5ca5f4930239098f124e1ce5ee9189c60055e1ff673b1db9cf49385787/django-oscar-docdata-1.2.7.tar.gz", "yanked": false}], "1.2.8": [{"comment_text": "", "digests": {"md5": "dbbfc574f90943ca4c884518d34ebf9e", "sha256": "4c5dd2e59746e074c81e71b9fd2def0bbb549c270bc9a213e4004fb41987b097"}, "downloads": -1, "filename": "django_oscar_docdata-1.2.8-py2-none-any.whl", "has_sig": false, "md5_digest": "dbbfc574f90943ca4c884518d34ebf9e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 61755, "upload_time": "2016-02-26T14:23:48", "upload_time_iso_8601": "2016-02-26T14:23:48.052343Z", "url": "https://files.pythonhosted.org/packages/22/fd/2aa4df5b0c7021fd681f165782040435ab05b98cf65a6a80c79614bf3c50/django_oscar_docdata-1.2.8-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "859d2d160664beb71906cb681fb91a43", "sha256": "17005dbd8903e6f0d9a08701a2a6171e994bf42d6a51ccbb7ad28c7a2269ee49"}, "downloads": -1, "filename": "django-oscar-docdata-1.2.8.tar.gz", "has_sig": false, "md5_digest": "859d2d160664beb71906cb681fb91a43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46125, "upload_time": "2016-02-26T14:23:43", "upload_time_iso_8601": "2016-02-26T14:23:43.396049Z", "url": "https://files.pythonhosted.org/packages/03/f4/1878a8a7b752b7b01e2165bf9d9501907793e36999532fabf5b7e22827b0/django-oscar-docdata-1.2.8.tar.gz", "yanked": false}], "1.2.9": [{"comment_text": "", "digests": {"md5": "0b7018596ff0e01abd0bb2f84d1e6719", "sha256": "bc4b13924a1b73034187eaeddc99055e942d01b97a4f0b60a6e8d6267f5a259f"}, "downloads": -1, "filename": "django_oscar_docdata-1.2.9-py2-none-any.whl", "has_sig": false, "md5_digest": "0b7018596ff0e01abd0bb2f84d1e6719", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 61780, "upload_time": "2016-06-14T12:42:57", "upload_time_iso_8601": "2016-06-14T12:42:57.234993Z", "url": "https://files.pythonhosted.org/packages/61/1c/f3631287803a054e17862e7bc90e35e00515d0c6f04e5d4398f9993dbd2c/django_oscar_docdata-1.2.9-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8466fa319e68620aa8d82b6e3672e7cd", "sha256": "78f5f693a5633810c582b9fc57cec05dace1769a4d7ec73be266a465fab96d3d"}, "downloads": -1, "filename": "django-oscar-docdata-1.2.9.tar.gz", "has_sig": false, "md5_digest": "8466fa319e68620aa8d82b6e3672e7cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46134, "upload_time": "2016-06-14T12:44:34", "upload_time_iso_8601": "2016-06-14T12:44:34.780049Z", "url": "https://files.pythonhosted.org/packages/74/41/c9c8b42bc74e240220124f76d6b59a67f4dbe7c5f509a21973c6c22be350/django-oscar-docdata-1.2.9.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "4ac6c175dc1866dfeb27eed16b08e4b1", "sha256": "57b7448c80c76413e426e1658c3882a283c1cec07ef666ede34e54aa6c044845"}, "downloads": -1, "filename": "django_oscar_docdata-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4ac6c175dc1866dfeb27eed16b08e4b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 56242, "upload_time": "2019-02-14T16:14:01", "upload_time_iso_8601": "2019-02-14T16:14:01.228712Z", "url": "https://files.pythonhosted.org/packages/6b/43/65681142783fe681701b1b9f9088723c38e96b72c6b29d8362a9c2dfc8fa/django_oscar_docdata-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c9521bc7c298c2df206d69431136fd1", "sha256": "14c84335320028a6cb18c2282758775de272bf3229173a3509c76d09909515f9"}, "downloads": -1, "filename": "django-oscar-docdata-1.3.0.tar.gz", "has_sig": false, "md5_digest": "8c9521bc7c298c2df206d69431136fd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39517, "upload_time": "2019-02-14T16:14:02", "upload_time_iso_8601": "2019-02-14T16:14:02.960881Z", "url": "https://files.pythonhosted.org/packages/1f/e1/75f2688d38eff8a76489ed72196635b999393a350581d719781d6efaa3ad/django-oscar-docdata-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "77867fe30af58ad418110d8efd8d7a19", "sha256": "c366a5de8114eb03f3db292bd81ecb93b268e0f5fc4f6892b0142f20bcc388a9"}, "downloads": -1, "filename": "django_oscar_docdata-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "77867fe30af58ad418110d8efd8d7a19", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 56352, "upload_time": "2019-02-28T14:03:07", "upload_time_iso_8601": "2019-02-28T14:03:07.783721Z", "url": "https://files.pythonhosted.org/packages/87/b8/55165141e098a6e73f43f873cbdeffd5c1744048ccae61b96904e5803471/django_oscar_docdata-1.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba258ee475af671fd2452c0a73ddbda9", "sha256": "b35c7fd63a2ebacadd5577a4482dde98e6c1eeb2e86f92528a48e44c67891aa1"}, "downloads": -1, "filename": "django-oscar-docdata-1.3.1.tar.gz", "has_sig": false, "md5_digest": "ba258ee475af671fd2452c0a73ddbda9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39635, "upload_time": "2019-02-28T14:03:09", "upload_time_iso_8601": "2019-02-28T14:03:09.806851Z", "url": "https://files.pythonhosted.org/packages/7d/aa/5368a37caad41ad58a45c1d85f0fb4d1f4003ad6d5217e3a40a4b2927ff9/django-oscar-docdata-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "9e1de86db62b73dd57d4a85ca3cc6ae1", "sha256": "3a767eba8d928feda9f701e127de25af9c37b586a889d4ac5c43788ecdd6103a"}, "downloads": -1, "filename": "django_oscar_docdata-1.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9e1de86db62b73dd57d4a85ca3cc6ae1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 56298, "upload_time": "2019-03-14T21:18:40", "upload_time_iso_8601": "2019-03-14T21:18:40.846780Z", "url": "https://files.pythonhosted.org/packages/87/72/730d2c16f3e5a7a87d56a06cd5a1be806272fbefe2ba248074c51aca2185/django_oscar_docdata-1.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a6e4d501cdf5a86cb0a4e4163b58bce", "sha256": "85609b9ef177df340a2bd5ca1ab5858af776f105cca9fea816f5d7446de8f50d"}, "downloads": -1, "filename": "django-oscar-docdata-1.3.2.tar.gz", "has_sig": false, "md5_digest": "4a6e4d501cdf5a86cb0a4e4163b58bce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39578, "upload_time": "2019-03-14T21:18:43", "upload_time_iso_8601": "2019-03-14T21:18:43.302785Z", "url": "https://files.pythonhosted.org/packages/b6/c6/932ba0e2d3b40277d9f25259d2fcbd9ccc0b5da598f44a4417857cbeb5df/django-oscar-docdata-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "c8569464291c224f844a011343580308", "sha256": "b0f1c9b93002fb16d01d8774ece7b226ecf63ef016118cf7b0b9c93f95496447"}, "downloads": -1, "filename": "django_oscar_docdata-1.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c8569464291c224f844a011343580308", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 56143, "upload_time": "2019-04-03T14:50:58", "upload_time_iso_8601": "2019-04-03T14:50:58.044441Z", "url": "https://files.pythonhosted.org/packages/5a/a3/bc86cd899053a164a41f528ae948dda787ecc635e13a1c5f43f8bc521772/django_oscar_docdata-1.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "212221ba2e3539097ed71f61e449b074", "sha256": "2a1efd121d5da5c4cbd43956aeb4b01a4d48d222649beca6e00f2084f6c8c37f"}, "downloads": -1, "filename": "django-oscar-docdata-1.3.3.tar.gz", "has_sig": false, "md5_digest": "212221ba2e3539097ed71f61e449b074", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39433, "upload_time": "2019-04-03T14:51:00", "upload_time_iso_8601": "2019-04-03T14:51:00.069502Z", "url": "https://files.pythonhosted.org/packages/a1/36/e427b68630318bba354576c3fdf58fad703d4ef58833ab5d9db13bd1dc75/django-oscar-docdata-1.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c8569464291c224f844a011343580308", "sha256": "b0f1c9b93002fb16d01d8774ece7b226ecf63ef016118cf7b0b9c93f95496447"}, "downloads": -1, "filename": "django_oscar_docdata-1.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c8569464291c224f844a011343580308", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 56143, "upload_time": "2019-04-03T14:50:58", "upload_time_iso_8601": "2019-04-03T14:50:58.044441Z", "url": "https://files.pythonhosted.org/packages/5a/a3/bc86cd899053a164a41f528ae948dda787ecc635e13a1c5f43f8bc521772/django_oscar_docdata-1.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "212221ba2e3539097ed71f61e449b074", "sha256": "2a1efd121d5da5c4cbd43956aeb4b01a4d48d222649beca6e00f2084f6c8c37f"}, "downloads": -1, "filename": "django-oscar-docdata-1.3.3.tar.gz", "has_sig": false, "md5_digest": "212221ba2e3539097ed71f61e449b074", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39433, "upload_time": "2019-04-03T14:51:00", "upload_time_iso_8601": "2019-04-03T14:51:00.069502Z", "url": "https://files.pythonhosted.org/packages/a1/36/e427b68630318bba354576c3fdf58fad703d4ef58833ab5d9db13bd1dc75/django-oscar-docdata-1.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:24 2020"}