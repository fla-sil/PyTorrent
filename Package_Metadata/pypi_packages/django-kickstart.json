{"info": {"author": "Christoph Herzog", "author_email": "chris@theduke.at", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "DJANGO-KICKSTART\n================\n\nVersion: 0.1.6 (28.03.2014)\n\nThis tool helps you to kickstart your new django project,\nby providing a better, more comprehensive setup that allows you to get\ngoing right away, and saves your precious time by automating tedious tasks.\n\nThe template used provides a setup **based on current best practices**, and makes\nstarting a new project a breeze.\n\nAfter running django-kickstart, you will have a functional django setup with it's\n**own virtualenv** preconfigured, with bower packages fetched and **jQuery, modernizr**,\nand some **IE8 polyfills** ready and included in the base.html template,\n**SASS with Compass and Twitter Bootstrap** (SASS port) ready,\n all relevant settings configured (including **django-allauth**), a **development sqlite database ready to use**\n and even a **git repository initialized**, with a good python + django .gitignore, and initial base commit.\n\n\nQuickstart:\n-----------\n\n`pip install django-kickstart`\n\n`django-kickstart mynewproject`\n\n`cd mynewproject/app`\n\n`export ENV=dev`\n\n`./manage.py runserver`\n\nNote that for manage.py to work, you need to set the environment variable ENV\nto dev.\n\nDo not create new virtualenv: `--no-venv`\nDo not use bower: `--no-bower`\n(type `django-kickstart -h` for all options)\n\n\nFeatures:\n--------\n\n(for more details check About section)\n\n* SASS + Compass\n* Twitter Bootstrap\n* jQuery + Modernizr\n* IE Polyfills (for css3, media queries, html5 tags)\n\n* Bower with django-bower for frontend package management\n* django-pipeline for asset management\n* Good directory structure\n* Django setup with environment variables\n\n* Auto-create a git repo and do an intial commit\n* South for schema management\n\n\nDirectory Structure\n-------------------\n\napp/ - the django project\n\n  apps/ - containts your custom django apps\n\n  data/\n\n    db/ - contains development sqlite databases\n\n    fixtures/ - contains database fixtures\n\n    lib/ - place to put external, contributed django apps or python modules that are not available from PyPi\n\n    public/ - only this dir needs to be publicly accessible\n\n      media/ - Uploaded media\n\n      static/ - static files\n\n    requirements/ - contains package requirements for pip, separated by environment\n\nbin/ - various (non-django/python) scripts (bash,...) related to the project\n\nconf/ - Config files or templated you need, for example apache virtual host or other server configs\n\ndocs/ - documentation\n\npyenv/ - A custom virtualenv for your project. This will be automatically\n         created, and all dependencies will be downloaded\n\n\nWhat and why:\n-------------\n\n*  Modern and advanced CSS development with a setup for SASS, Compass, and\n   optionally Bootstrap (the Bootstrap SASS port).\n   Compass will require a setup of ruby and the gems specified in the GEMFILE\n   of the newly created project, but if you don't want to use SASS, you\n   can just delete the directory and use regular CSS without problems.\n\n   (http://sass-lang.com, http://compass-style.org, https://github.com/twbs/bootstrap-sass)\n\n* Out of the box setup of jQuery and modernizr AND important polyfills,\n   that provide fallback solutions for CSS3 selectors, styling, media queries,\n   and html5 tags. (Namely: selectivizr, respond, pie and html5shiv)\n\n* (Frontend) package management with Bower and django-bower.\n   (http://bower.io, https://github.com/nvbn/django-bower)\n\n   The packages are specified in settings.py by BOWER_INSTALLED_APPS and\n   downloaded/updated with ./manage.py bower_install\n\n* CSS and JS management with compression and merging by django-pipeline.\n   (https://django-pipeline.readthedocs.org/\u200e)\n\n* A good base.html template\n\n* A sane way to manage settings:\n   There is a base settings.py file, all locally relevant settings are\n   configured with ENVIRONMENT variables.\n\n   For easy development, you can just do export ENV=dev to get preconfigured\n   development settings.\n\n   To check all available env variables, check settings.py comments in the\n   first few lines, which provide a list.\n\n* Stubs for custom management commands (./manage.py commands) and\n   templatetag libraries that you can just copy and paste.\n\n* A custom public/ directory that contains static and media directories and is\n   the only one that's accessible publicly.\n\n* A good seperation of requirements, with a requirements.txt file and\n   custom files for the different environments.\n\n* Sample configuration files for other applications, like an Apache2 virtual\n   host.\n\n\nLicense:\n--------\n\nDjango-kickstart is under the BSD (3-clause) license.\nSee LICENSE.txt\n\n\nAuthors:\n--------\n\nSuggestions and contributions are very welcome!\n\n* Christoph Herzog - http://theduke.at - chris@theduke.at\n\n\nBehind the scenes:\n------------------\n\nThe tool goes through these steps to set up the new project.\n\n1. Start the new project.\n\n> django-admin.py startproject --template=\"https://github.com/theduke/django-kickstart/archive/master.zip\" --extension=\"py,gitignore,txt,md,conf\" PROJECTNAME\n\n2. Create virtualenv.\n\n> cd PROJECT\n\nRemove stub pyenv file:\n> rm -r pyenv\n\nCreate virtualenv with name pyenv:\n> virtualenv pyenv\n\nActivate the new virtualenv:\n> . pyenv/bin/activate\n\n3. Install requirements.\n\n> pip install -r app/requirements/development.txt\n\n4. Several settings are configured with environment variables.\n   To make it straight-forward for development, things are preconfigured\n   for the dev environment. To activate it, just run:\n\n   > export ENV=dev\n\n\n5. Create sqlite database for development.\n\n> app/manage.py syncdb\n> app/manage.py migrate\n\n6. Fetch bower packages.\n\napp/manage.py bower_install\n\n7. Set up a git repo\n\n> git init\n> git add .\n> git commit -m \"Initial commit\"\n\n7. Start building your awesome site.\n\n\nUpdating bootstrap-sass\n-----------------------\n\nAfter updating the bootstrap-sass GEM, you need to copy the\njavascript and font assets!\n\ncd to root (dir with this readme file in it)\ncp -r $(bundle show bootstrap-sass)/vendor/assets/fonts/* app/apps/{{ project_name }}/static/fonts/\ncp -r $(bundle show bootstrap-sass)/vendor/assets/javascripts/* app/apps/{{ project_name }}/static/js/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/theduke/django-kickstart", "keywords": null, "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "django-kickstart", "package_url": "https://pypi.org/project/django-kickstart/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-kickstart/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/theduke/django-kickstart"}, "release_url": "https://pypi.org/project/django-kickstart/0.1.6/", "requires_dist": null, "requires_python": null, "summary": "Tool for kickstarting django projects.", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            DJANGO-KICKSTART<br>================<br><br>Version: 0.1.6 (28.03.2014)<br><br>This tool helps you to kickstart your new django project,<br>by providing a better, more comprehensive setup that allows you to get<br>going right away, and saves your precious time by automating tedious tasks.<br><br>The template used provides a setup **based on current best practices**, and makes<br>starting a new project a breeze.<br><br>After running django-kickstart, you will have a functional django setup with it's<br>**own virtualenv** preconfigured, with bower packages fetched and **jQuery, modernizr**,<br>and some **IE8 polyfills** ready and included in the base.html template,<br>**SASS with Compass and Twitter Bootstrap** (SASS port) ready,<br> all relevant settings configured (including **django-allauth**), a **development sqlite database ready to use**<br> and even a **git repository initialized**, with a good python + django .gitignore, and initial base commit.<br><br><br>Quickstart:<br>-----------<br><br>`pip install django-kickstart`<br><br>`django-kickstart mynewproject`<br><br>`cd mynewproject/app`<br><br>`export ENV=dev`<br><br>`./manage.py runserver`<br><br>Note that for manage.py to work, you need to set the environment variable ENV<br>to dev.<br><br>Do not create new virtualenv: `--no-venv`<br>Do not use bower: `--no-bower`<br>(type `django-kickstart -h` for all options)<br><br><br>Features:<br>--------<br><br>(for more details check About section)<br><br>* SASS + Compass<br>* Twitter Bootstrap<br>* jQuery + Modernizr<br>* IE Polyfills (for css3, media queries, html5 tags)<br><br>* Bower with django-bower for frontend package management<br>* django-pipeline for asset management<br>* Good directory structure<br>* Django setup with environment variables<br><br>* Auto-create a git repo and do an intial commit<br>* South for schema management<br><br><br>Directory Structure<br>-------------------<br><br>app/ - the django project<br><br>  apps/ - containts your custom django apps<br><br>  data/<br><br>    db/ - contains development sqlite databases<br><br>    fixtures/ - contains database fixtures<br><br>    lib/ - place to put external, contributed django apps or python modules that are not available from PyPi<br><br>    public/ - only this dir needs to be publicly accessible<br><br>      media/ - Uploaded media<br><br>      static/ - static files<br><br>    requirements/ - contains package requirements for pip, separated by environment<br><br>bin/ - various (non-django/python) scripts (bash,...) related to the project<br><br>conf/ - Config files or templated you need, for example apache virtual host or other server configs<br><br>docs/ - documentation<br><br>pyenv/ - A custom virtualenv for your project. This will be automatically<br>         created, and all dependencies will be downloaded<br><br><br>What and why:<br>-------------<br><br>*  Modern and advanced CSS development with a setup for SASS, Compass, and<br>   optionally Bootstrap (the Bootstrap SASS port).<br>   Compass will require a setup of ruby and the gems specified in the GEMFILE<br>   of the newly created project, but if you don't want to use SASS, you<br>   can just delete the directory and use regular CSS without problems.<br><br>   (http://sass-lang.com, http://compass-style.org, https://github.com/twbs/bootstrap-sass)<br><br>* Out of the box setup of jQuery and modernizr AND important polyfills,<br>   that provide fallback solutions for CSS3 selectors, styling, media queries,<br>   and html5 tags. (Namely: selectivizr, respond, pie and html5shiv)<br><br>* (Frontend) package management with Bower and django-bower.<br>   (http://bower.io, https://github.com/nvbn/django-bower)<br><br>   The packages are specified in settings.py by BOWER_INSTALLED_APPS and<br>   downloaded/updated with ./manage.py bower_install<br><br>* CSS and JS management with compression and merging by django-pipeline.<br>   (https://django-pipeline.readthedocs.org/\u200e)<br><br>* A good base.html template<br><br>* A sane way to manage settings:<br>   There is a base settings.py file, all locally relevant settings are<br>   configured with ENVIRONMENT variables.<br><br>   For easy development, you can just do export ENV=dev to get preconfigured<br>   development settings.<br><br>   To check all available env variables, check settings.py comments in the<br>   first few lines, which provide a list.<br><br>* Stubs for custom management commands (./manage.py commands) and<br>   templatetag libraries that you can just copy and paste.<br><br>* A custom public/ directory that contains static and media directories and is<br>   the only one that's accessible publicly.<br><br>* A good seperation of requirements, with a requirements.txt file and<br>   custom files for the different environments.<br><br>* Sample configuration files for other applications, like an Apache2 virtual<br>   host.<br><br><br>License:<br>--------<br><br>Django-kickstart is under the BSD (3-clause) license.<br>See LICENSE.txt<br><br><br>Authors:<br>--------<br><br>Suggestions and contributions are very welcome!<br><br>* Christoph Herzog - http://theduke.at - chris@theduke.at<br><br><br>Behind the scenes:<br>------------------<br><br>The tool goes through these steps to set up the new project.<br><br>1. Start the new project.<br><br>&gt; django-admin.py startproject --template=\"https://github.com/theduke/django-kickstart/archive/master.zip\" --extension=\"py,gitignore,txt,md,conf\" PROJECTNAME<br><br>2. Create virtualenv.<br><br>&gt; cd PROJECT<br><br>Remove stub pyenv file:<br>&gt; rm -r pyenv<br><br>Create virtualenv with name pyenv:<br>&gt; virtualenv pyenv<br><br>Activate the new virtualenv:<br>&gt; . pyenv/bin/activate<br><br>3. Install requirements.<br><br>&gt; pip install -r app/requirements/development.txt<br><br>4. Several settings are configured with environment variables.<br>   To make it straight-forward for development, things are preconfigured<br>   for the dev environment. To activate it, just run:<br><br>   &gt; export ENV=dev<br><br><br>5. Create sqlite database for development.<br><br>&gt; app/manage.py syncdb<br>&gt; app/manage.py migrate<br><br>6. Fetch bower packages.<br><br>app/manage.py bower_install<br><br>7. Set up a git repo<br><br>&gt; git init<br>&gt; git add .<br>&gt; git commit -m \"Initial commit\"<br><br>7. Start building your awesome site.<br><br><br>Updating bootstrap-sass<br>-----------------------<br><br>After updating the bootstrap-sass GEM, you need to copy the<br>javascript and font assets!<br><br>cd to root (dir with this readme file in it)<br>cp -r $(bundle show bootstrap-sass)/vendor/assets/fonts/* app/apps/{{ project_name }}/static/fonts/<br>cp -r $(bundle show bootstrap-sass)/vendor/assets/javascripts/* app/apps/{{ project_name }}/static/js/\n          </div>"}, "last_serial": 1044878, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "258c30a6bd01f525a8ce6f48064bab7b", "sha256": "735843c6703696126a1bb7f680811f9b6282ef0eeaa0cf3b9df6f60adc637b78"}, "downloads": -1, "filename": "django-kickstart-0.1.4.tar.gz", "has_sig": false, "md5_digest": "258c30a6bd01f525a8ce6f48064bab7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152057, "upload_time": "2014-03-10T11:25:15", "upload_time_iso_8601": "2014-03-10T11:25:15.962334Z", "url": "https://files.pythonhosted.org/packages/b5/78/a4395e8e529efc094c5255f29f0f6bf7b41c967818a996dfc576fc1f3820/django-kickstart-0.1.4.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "0f4fdd71f066ca8443774b6673d1469a", "sha256": "4770382c5340a30d01e05778dd5ac00d433d12477081021eaf3ad897b3f8f456"}, "downloads": -1, "filename": "django_kickstart-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0f4fdd71f066ca8443774b6673d1469a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 172646, "upload_time": "2014-03-28T20:57:57", "upload_time_iso_8601": "2014-03-28T20:57:57.123935Z", "url": "https://files.pythonhosted.org/packages/98/8d/6346e97de5ba6ec9aa8dddb5ed8b3ca18b3dcaa9baf82d6133cccbf05732/django_kickstart-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f786f5a518e035d0a11a5bee62c0fb9", "sha256": "aabe9f331afd23c1d332d7233fae3793131c44c5937db7d07ac357a943a87ec5"}, "downloads": -1, "filename": "django-kickstart-0.1.6.tar.gz", "has_sig": false, "md5_digest": "2f786f5a518e035d0a11a5bee62c0fb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152378, "upload_time": "2014-03-28T20:57:11", "upload_time_iso_8601": "2014-03-28T20:57:11.461569Z", "url": "https://files.pythonhosted.org/packages/81/96/71700332d1c4262bf0841dd8b26ffa04299ad3b83ab6a1955b01b5f467a4/django-kickstart-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0f4fdd71f066ca8443774b6673d1469a", "sha256": "4770382c5340a30d01e05778dd5ac00d433d12477081021eaf3ad897b3f8f456"}, "downloads": -1, "filename": "django_kickstart-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0f4fdd71f066ca8443774b6673d1469a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 172646, "upload_time": "2014-03-28T20:57:57", "upload_time_iso_8601": "2014-03-28T20:57:57.123935Z", "url": "https://files.pythonhosted.org/packages/98/8d/6346e97de5ba6ec9aa8dddb5ed8b3ca18b3dcaa9baf82d6133cccbf05732/django_kickstart-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f786f5a518e035d0a11a5bee62c0fb9", "sha256": "aabe9f331afd23c1d332d7233fae3793131c44c5937db7d07ac357a943a87ec5"}, "downloads": -1, "filename": "django-kickstart-0.1.6.tar.gz", "has_sig": false, "md5_digest": "2f786f5a518e035d0a11a5bee62c0fb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152378, "upload_time": "2014-03-28T20:57:11", "upload_time_iso_8601": "2014-03-28T20:57:11.461569Z", "url": "https://files.pythonhosted.org/packages/81/96/71700332d1c4262bf0841dd8b26ffa04299ad3b83ab6a1955b01b5f467a4/django-kickstart-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:26 2020"}