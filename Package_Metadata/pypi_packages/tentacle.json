{"info": {"author": "Christian Vogelgsang", "author_email": "chris@vogelgsang.org", "bugtrack_url": null, "classifiers": [], "description": "tentacle - An OctoPrint frontend for small displays\n###################################################\n\n.. image:: tentacle.png\n    :alt: tentacle screenshots\n    :align: center\n\n.. class:: no-web no-pdf\n\n.. image:: https://img.shields.io/pypi/v/tentacle.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/tentacle\n\n.. contents::\n\n.. section-numbering::\n\nFeatures\n========\n\n* Stylus-friendly UI suitable for tiny TFTs\n* TFT Resolution of 320x240 and upwards supported\n* Low resource usage: PyQt5 running directly on framebuffer without X11\n* All relevant OctoPrint parameters are available in UI Tabs:\n\n  * Shows details on current print ``Job``\n  * Shows available print ``Files`` and allows to select one for printing\n  * Shows ``Temperature Curves`` of Hotends and Bed\n  * A ``Move Panel`` allows to move the tools\n  * A ``GCode Display`` shows the current layer while printing\n  * A ``Camera View`` shows your streamed camera\n\nInstallation\n============\n\nLinux / Raspberry Pi\n--------------------\n\n* First setup your TFT and the (calibrated) touch input.\n  Typically your TFT's framebuffer device is ``/dev/fb1``\n  See `Appendix`_ for details on my setup.\n\nInstall with PIP3\n+++++++++++++++++\n\n* Install the PyQt5 package for Python 3 with ``apt``:\n\n.. code-block:: bash\n\n    $ sudo apt install python3-pyqt5\n\n* Install ``tentacle`` with ``pip``\n\n.. code-block:: bash\n\n    $ sudo apt install python3-pip\n    $ pip3 install tentacle\n\nThis will install ``tentacle`` for the current user only.\nIf you want to install the package system-wide use ``sudo``:\n\n.. code-block:: bash\n\n    $ sudo pip3 install tentacle\n\nManual startup\n++++++++++++++\n\nNow you can test run the binary from a remote shell (ssh):\n\n    $ tentacle -v\n\nUse manual startup to tweak your Configuration_\n\nAutostart with ``systemd``\n++++++++++++++++++++++++++\n\nIn ``systemd/tentacle.service`` you'll find a template service file for\nsystemd. Adjust and copy this file to ``/etc/systemd/system/``.\n\nMake sure the user is setup correctly. Default is ``pi``.\n\nTry to run the service with:\n\n.. code-block:: bash\n\n    $ sudo systemctl start tentacle\n\nSee the status with:\n\n.. code-block:: bash\n\n    $ sudo systemctl status tentacle\n\nStop the service with:\n\n.. code-block:: bash\n\n    $ sudo systemctl stop tentacle\n\nTo permanently enable the service for the next boot use:\n\n.. code-block:: bash\n\n    $ sudo systemctl enable tentacle\n\nDone!\n\nmacOS\n-----\n\nYou can run ``tentacle`` on your Mac in a window to test the UI.\n\n* First install PyQt5 with:\n\n.. code-block:: bash\n\n    $ pip install pyqt5\n\n* Then install ``tentacle``:\n\n.. code-block:: bash\n\n    $ pip install tentacle\n\n\nConfiguration\n=============\n\nWhile ``tentacle`` already ships with a sensible set of default configuration\nparameters you can adjust them as you need.\n\nThe configuration file is called ``tentacle.cfg`` and searched at the\nfollowing locations:\n\n* current working directory (suitable for test runs)\n* ``$HOME/.tentacle.cfg``\n* ``/etc/tentacle.cfg`` (suitable for systemd setup)\n\nThe config has INI like syntax and is split into sections.\nTo get the default configuration just run ``tentacle --dump-config`` to write\nit into a file:\n\n.. code-block:: bash\n\n    $ tentacle --dump-config tentacle.cfg\n\nSection ``octoprint``\n---------------------\n\n``url``\n    The URL to reach OctoPrint. Either use ``http:`` or ``https:``. Make sure\n    the hostname matches (default: ``octopi``).\n\n    Default::\n\n        http://octopi\n\n``api_key``\n    Give the API key you created in ``OctoPrint`` to allow to execute commands\n    via the REST API.\n\nSection ``qt``\n--------------\n\n``fb_dev``\n    The frame buffer device of your TFT display.\n\n    Default::\n\n        /dev/fb0\n\n``ts_dev``\n    The touch screen input device.\n\n    Default::\n\n        /dev/input/touchscreen\n\nSection ``app``\n---------------\n\nGlobal settings for the whole UI.\n\n``font_family`` and ``font_size``\n    Specify the font used for the UI.\n\n``width`` and ``height``\n    The size of your display\n\n``dark``\n    Enable ``dark`` mode. Disable to see ``light`` mode.\n\n``style``\n    Select a specific Qt widget style\n\nSection ``temp``\n----------------\n\nSettings for the ``temp`` tab in the UI.\n\n``font_family`` and ``font_size``\n    Specify the font used for the UI temperate labels\n\n``min`` and ``max``\n    Set the minimum and maximum temperature shown in graph.\n\n``step``\n    Set the line and label stepping in the graph display.\n\nSection ``move``\n----------------\n\nSettings for the ``move`` tab in the UI.\n\n``unload_z``\n    The Z axis position to move to when selecting the ``Unload`` button.\n\n``label_a`` and ``label_b``\n    The label text to be displayed for the custom move buttons.\n\n``pos_a`` and ``pos_b``\n    The X,Y,Z position to move to when selecting a custom button.\n\nSection ``tool``\n----------------\n\nSettings for the ``tool`` tab in the UI.\n\n``t{0,1}_temp{1,2}`` and ``bed_temp{1,2}``\n    Set the default temperature for the tools 0, 1, and the bed.\n\nSection ``ser``\n---------------\n\nSettings for the ``ser`` tab in the UI.\n\n``font_family`` and ``font_size``\n    Specify the font used for the UI serial log output\n\nSection ``cam``\n---------------\n\nSettings for the ``cam`` tab in the UI.\n\n``url``\n    The the URL of ``mjpeg streamer`` to get the mjpeg stream from your camera.\n\n    Default::\n\n        http://octopi:8080/?action=stream\n\n\nSection ``commands``\n--------------------\n\nConfigure various external commands triggered by ``tentacle``.\n\nNote: Make sure the user running ``tentacle`` is allowed to perform these\ncommands. You may need to add ``sudo`` and configure it to run the\ncommands without password input.\n\n``restart_octoprint``\n    Restart the OctoPrint server.\n\n    Default::\n\n        /bin/systemctl restart octoprint\n\n``reboot_sys``\n    Reboot the whole system.\n\n    Default::\n\n        /sbin/reboot\n\n``poweroff_sys``\n    Power off the system.\n\n    Default::\n\n        /sbin/poweroff\n\n``backlight_on``\n    Enable the backlight of the TFT display.\n\n    Default::\n\n        +/scripts/backlight 1\n\n``backlight_off``\n    Disable the backlight of the TFT display.\n\n    Default::\n\n        +/scripts/backlight 0\n\nNote: A path starting with ``+/`` is automatically expanded to the ``scripts``\ndirectory in the ``tentacle`` module.\n\nUser's Manual\n=============\n\nHard keys\n---------\n\nThe following keys are recognized:\n\n``escape``\n    Enter the system menu to execute control commands.\n    In the menu abort the menu and close it.\n\n``return``\n    Save a screen shot.\n    In the menu select and activate an item.\n\n``cursor up``\n    Enable the backlight of the display.\n    In the menu move one item up.\n\n``cursor down``\n    Disable the backlight of the display.\n    In the menu move one item down.\n\n\nAppendix\n========\n\nRaspberry Camera Setup\n----------------------\n\nIn my OctoPi_ based setup I added a Raspberry Pi Cam.\nIn order to make it work I enabled the ``Video4Linux`` driver in\n``/etc/modules``::\n\n    bcm2835_v4l2\n\nIf the image has the wrong orientation you can flip it in any direction with\nthe ``v4l2-ctl`` tool found in the ``v4l-utils`` package.::\n\n    v4l2-ctl --set-ctrl vertical_flip=1 --set-ctrl horizontal_flip=1\n\nTo make this change persistet simply add the line to ``/etc/rc.local``.\n\nThe camera is then auto detected by ``mjpeg streamer`` running on the OctoPi\nsystem.\n\n.. _OctoPi: https://octoprint.org/download/\n\nSetup an Adafruit PiTFT Plus 2.8\"\n---------------------------------\n\nAdafruit_ offers a nice small 2.8\" display with 320 x 240 pixels, a resistive\ntouch panel and four hard keys.\n\nFollow the Instructions_ for initial setup. It boils down to adding the HAT\nin ``/etc/config.txt`` with::\n\n    dtparam=spi=on\n    dtparam=i2c1=on\n    dtparam=i2c_arm=on\n    dtoverlay=pitft28-resistive,rotate=90,speed=64000000,fps=30\n\nNote the *rotation of 90 degrees* so I can use landscape mode with the correct\norientation.\n\n.. _Adafruit: https://www.adafruit.com/product/2298\n.. _Instructions: https://learn.adafruit.com/adafruit-pitft-28-inch-resistive-touchscreen-display-raspberry-pi\n\nSetup Hard keys\n+++++++++++++++\n\nHard keys are not essential to run *tentacle*, but they offer useful functions\nincluding controlling of the backlight without the need for touching.\n\nThe following GPIOs are connected to the PiTFT+ Hardkeys (from top to bottom):\n\n* 17\n* 22\n* 23\n* 27\n\nI added a device tree file that maps these to the following input keys (see\nthe `Linux Kernel input event header`_ for the codes):\n\n* 17: Escape (code 1)\n* 22: Cursor Up (code 103)\n* 23: Enter (code 28)\n* 27: Cursor Down (code 108)\n\nEnter the directory ``contrib/pitft-keys`` and run the the supplied\n``Makefile`` there to build the device tree overlay binary and\ninstall it in `/boot/`.\n\n.. code-block:: bash\n\n    $ cd contrib/pitft-keys\n    $ make install\n\nNote: It will ask for your user password to install the file via ``sudo``.\n\n.. _Linux Kernel input event header: https://github.com/torvalds/linux/blob/master/include/uapi/linux/input-event-codes.h\n\nTouchscreen Calibration\n+++++++++++++++++++++++\n\nIt is essential to calibrate your touchscreen. Otherwise exact picking of UI\nelements with a stylus or even your fingers is not possible.\n\nPyQt5 in frame buffer mode is compiled for Raspbian to use libinput_ for\nreceiving touch panel events.\n\nUnfortunately, all documented ways I found on the net either assume ``tslib``\nor even ``X11`` support for calibration. Here is my own way I found with lots\ntrial and error.\n\n.. _libinput: https://www.freedesktop.org/wiki/Software/libinput/\n\nRunning the Calibration Tool on X11\n...................................\n\nYes, we want to run on frame buffer only but the only calibration tool I found\nstill uses X11. So we install a minimal X11 runtime just to start the tool.\n\nA minimal X11 server can be installed with:\n\n.. code-block:: bash\n\n    sudo apt-get install xserver-xorg xserver-xorg-video-fbdev xinit\n\nEdit ``/etc/X11/Xwrapper.config`` to allow everybody to start the server::\n\n    ...\n    allowed_users=anyboady\n\nNow selec the frame buffer of your display to run X11 on. My display uses\n``/dev/fb1``. Edit ``/usr/share/X11/xorg.conf.d/99-fbdev.conf``::\n\n    Section \"Device\"\n    Identifier \"myfb\"\n    Driver \"fbdev\"\n    Option \"fbdev\" \"/dev/fb1\"\n    EndSection\n\nNow run the X11 server once (preferrably from a ssh shell):\n\n.. code-block:: bash\n\n    $ startx &\n\nMake sure your current calibration matrix is reset:\n\n.. code-block:: bash\n\n    $ DISPLAY=:0.0 xinput set-prop \"stmpe-ts\" 'Coordinate Transformation Matrix' 1 0 0 0 1 0 0 0 1\n\nRun the calibration tool with:\n\n.. code-block:: bash\n\n    $ DISPLAY=:0.0 ./xtcal -geometry 320x240\n\nPick the drawn crosshairs with a stylus each and after that you get the matrix\nreported::\n\n    xinput set-prop <device name> 'Coordinate Transformation Matrix' 0.015731 -1.135927 1.014818 1.123037 0.017117 -0.062198 0 0 1\n\nWe are interested in the values of this matrix! So copy them in your\nclipboard.\n\nStop the X11 server as it is not needed anymore:\n\n.. code-block:: bash\n\n    $ pkill startx\n\nSave the Calibration Matrix for ``libinput``\n............................................\n\nWe need to assign the calibration matrix in an environment variable called\n``LIBINPUT_CALIBRATION_MATRIX``. This variable has to be set any time the\ntouchpanel device is detected and setup.\n\nThe PiTFT installer already has created a ``udev`` rule file\nthat creates a ``input/touchscren`` link for the touchpanel device.\nIn ``/etc/udev/rules.d/95-stmpe.rules`` we add the environment variable::\n\n    SUBSYSTEM==\"input\", ATTRS{name}==\"*stmpe*\", ENV{DEVNAME}==\"*event*\", SYMLINK+=\"input/touchscreen\", ENV{LIBINPUT_CALIBRATION_MATRIX}=\"0.015731 -1.135927 1.014818 1.123037 0.017117 -0.062198\"\n\nNote that only the first 6 values of the matrix are used here.\n\nReboot your Pi to make this matrix active.\n\nYou can check if the matrix is setup correctly with the\n``libinput-list-devices`` tool.\n\n.. code-block:: bash\n\n    $ sudo libinput-list-devices\n    Device:           stmpe-ts\n    ...\n    Calibration:      0.02 -1.14 1.01 1.12 0.02", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cnvogelg/tentacle", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "tentacle", "package_url": "https://pypi.org/project/tentacle/", "platform": "", "project_url": "https://pypi.org/project/tentacle/", "project_urls": {"Homepage": "https://github.com/cnvogelg/tentacle"}, "release_url": "https://pypi.org/project/tentacle/1.0.0/", "requires_dist": null, "requires_python": "~=3.4", "summary": "An OctoPrint frontend suitable for small displays", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"tentacle screenshots\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/06fdcb93abc40bbeac5b944a3067e5c19a3fdc64/74656e7461636c652e706e67\">\n<a href=\"https://pypi.python.org/pypi/tentacle\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/tentacle.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2119c0851fed09120964db98abb0209f2a3a1873/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f74656e7461636c652e7376673f7374796c653d666c61742d737175617265\"></a>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#features\" id=\"id1\" rel=\"nofollow\">1\u00a0\u00a0\u00a0Features</a></li>\n<li><a href=\"#installation\" id=\"id2\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Installation</a><ul>\n<li><a href=\"#linux-raspberry-pi\" id=\"id3\" rel=\"nofollow\">2.1\u00a0\u00a0\u00a0Linux / Raspberry Pi</a><ul>\n<li><a href=\"#install-with-pip3\" id=\"id4\" rel=\"nofollow\">2.1.1\u00a0\u00a0\u00a0Install with PIP3</a></li>\n<li><a href=\"#manual-startup\" id=\"id5\" rel=\"nofollow\">2.1.2\u00a0\u00a0\u00a0Manual startup</a></li>\n<li><a href=\"#autostart-with-systemd\" id=\"id6\" rel=\"nofollow\">2.1.3\u00a0\u00a0\u00a0Autostart with <tt>systemd</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#macos\" id=\"id7\" rel=\"nofollow\">2.2\u00a0\u00a0\u00a0macOS</a></li>\n</ul>\n</li>\n<li><a href=\"#configuration\" id=\"id8\" rel=\"nofollow\">3\u00a0\u00a0\u00a0Configuration</a><ul>\n<li><a href=\"#section-octoprint\" id=\"id9\" rel=\"nofollow\">3.1\u00a0\u00a0\u00a0Section <tt>octoprint</tt></a></li>\n<li><a href=\"#section-qt\" id=\"id10\" rel=\"nofollow\">3.2\u00a0\u00a0\u00a0Section <tt>qt</tt></a></li>\n<li><a href=\"#section-app\" id=\"id11\" rel=\"nofollow\">3.3\u00a0\u00a0\u00a0Section <tt>app</tt></a></li>\n<li><a href=\"#section-temp\" id=\"id12\" rel=\"nofollow\">3.4\u00a0\u00a0\u00a0Section <tt>temp</tt></a></li>\n<li><a href=\"#section-move\" id=\"id13\" rel=\"nofollow\">3.5\u00a0\u00a0\u00a0Section <tt>move</tt></a></li>\n<li><a href=\"#section-tool\" id=\"id14\" rel=\"nofollow\">3.6\u00a0\u00a0\u00a0Section <tt>tool</tt></a></li>\n<li><a href=\"#section-ser\" id=\"id15\" rel=\"nofollow\">3.7\u00a0\u00a0\u00a0Section <tt>ser</tt></a></li>\n<li><a href=\"#section-cam\" id=\"id16\" rel=\"nofollow\">3.8\u00a0\u00a0\u00a0Section <tt>cam</tt></a></li>\n<li><a href=\"#section-commands\" id=\"id17\" rel=\"nofollow\">3.9\u00a0\u00a0\u00a0Section <tt>commands</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#user-s-manual\" id=\"id18\" rel=\"nofollow\">4\u00a0\u00a0\u00a0User\u2019s Manual</a></li>\n<li><a href=\"#appendix\" id=\"id19\" rel=\"nofollow\">5\u00a0\u00a0\u00a0Appendix</a><ul>\n<li><a href=\"#raspberry-camera-setup\" id=\"id20\" rel=\"nofollow\">5.1\u00a0\u00a0\u00a0Raspberry Camera Setup</a></li>\n<li><a href=\"#setup-an-adafruit-pitft-plus-2-8\" id=\"id21\" rel=\"nofollow\">5.2\u00a0\u00a0\u00a0Setup an Adafruit PiTFT Plus 2.8\u201d</a><ul>\n<li><a href=\"#setup-hard-keys\" id=\"id22\" rel=\"nofollow\">5.2.1\u00a0\u00a0\u00a0Setup Hard keys</a></li>\n<li><a href=\"#touchscreen-calibration\" id=\"id23\" rel=\"nofollow\">5.2.2\u00a0\u00a0\u00a0Touchscreen Calibration</a><ul>\n<li><a href=\"#running-the-calibration-tool-on-x11\" id=\"id24\" rel=\"nofollow\">5.2.2.1\u00a0\u00a0\u00a0Running the Calibration Tool on X11</a></li>\n<li><a href=\"#save-the-calibration-matrix-for-libinput\" id=\"id25\" rel=\"nofollow\">5.2.2.2\u00a0\u00a0\u00a0Save the Calibration Matrix for <tt>libinput</tt></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"features\">\n<h2><a href=\"#id1\" rel=\"nofollow\">1\u00a0\u00a0\u00a0Features</a></h2>\n<ul>\n<li>Stylus-friendly UI suitable for tiny TFTs</li>\n<li>TFT Resolution of 320x240 and upwards supported</li>\n<li>Low resource usage: PyQt5 running directly on framebuffer without X11</li>\n<li>All relevant OctoPrint parameters are available in UI Tabs:<ul>\n<li>Shows details on current print <tt>Job</tt></li>\n<li>Shows available print <tt>Files</tt> and allows to select one for printing</li>\n<li>Shows <tt>Temperature Curves</tt> of Hotends and Bed</li>\n<li>A <tt>Move Panel</tt> allows to move the tools</li>\n<li>A <tt>GCode Display</tt> shows the current layer while printing</li>\n<li>A <tt>Camera View</tt> shows your streamed camera</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id2\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Installation</a></h2>\n<div id=\"linux-raspberry-pi\">\n<h3><a href=\"#id3\" rel=\"nofollow\">2.1\u00a0\u00a0\u00a0Linux / Raspberry Pi</a></h3>\n<ul>\n<li>First setup your TFT and the (calibrated) touch input.\nTypically your TFT\u2019s framebuffer device is <tt>/dev/fb1</tt>\nSee <a href=\"#appendix\" rel=\"nofollow\">Appendix</a> for details on my setup.</li>\n</ul>\n<div id=\"install-with-pip3\">\n<h4><a href=\"#id4\" rel=\"nofollow\">2.1.1\u00a0\u00a0\u00a0Install with PIP3</a></h4>\n<ul>\n<li>Install the PyQt5 package for Python 3 with <tt>apt</tt>:</li>\n</ul>\n<pre>$ sudo apt install python3-pyqt5\n</pre>\n<ul>\n<li>Install <tt>tentacle</tt> with <tt>pip</tt></li>\n</ul>\n<pre>$ sudo apt install python3-pip\n$ pip3 install tentacle\n</pre>\n<p>This will install <tt>tentacle</tt> for the current user only.\nIf you want to install the package system-wide use <tt>sudo</tt>:</p>\n<pre>$ sudo pip3 install tentacle\n</pre>\n</div>\n<div id=\"manual-startup\">\n<h4><a href=\"#id5\" rel=\"nofollow\">2.1.2\u00a0\u00a0\u00a0Manual startup</a></h4>\n<p>Now you can test run the binary from a remote shell (ssh):</p>\n<blockquote>\n$ tentacle -v</blockquote>\n<p>Use manual startup to tweak your <a href=\"#configuration\" rel=\"nofollow\">Configuration</a></p>\n</div>\n<div id=\"autostart-with-systemd\">\n<h4><a href=\"#id6\" rel=\"nofollow\">2.1.3\u00a0\u00a0\u00a0Autostart with <tt>systemd</tt></a></h4>\n<p>In <tt>systemd/tentacle.service</tt> you\u2019ll find a template service file for\nsystemd. Adjust and copy this file to <tt>/etc/systemd/system/</tt>.</p>\n<p>Make sure the user is setup correctly. Default is <tt>pi</tt>.</p>\n<p>Try to run the service with:</p>\n<pre>$ sudo systemctl start tentacle\n</pre>\n<p>See the status with:</p>\n<pre>$ sudo systemctl status tentacle\n</pre>\n<p>Stop the service with:</p>\n<pre>$ sudo systemctl stop tentacle\n</pre>\n<p>To permanently enable the service for the next boot use:</p>\n<pre>$ sudo systemctl <span class=\"nb\">enable</span> tentacle\n</pre>\n<p>Done!</p>\n</div>\n</div>\n<div id=\"macos\">\n<h3><a href=\"#id7\" rel=\"nofollow\">2.2\u00a0\u00a0\u00a0macOS</a></h3>\n<p>You can run <tt>tentacle</tt> on your Mac in a window to test the UI.</p>\n<ul>\n<li>First install PyQt5 with:</li>\n</ul>\n<pre>$ pip install pyqt5\n</pre>\n<ul>\n<li>Then install <tt>tentacle</tt>:</li>\n</ul>\n<pre>$ pip install tentacle\n</pre>\n</div>\n</div>\n<div id=\"configuration\">\n<h2><a href=\"#id8\" rel=\"nofollow\">3\u00a0\u00a0\u00a0Configuration</a></h2>\n<p>While <tt>tentacle</tt> already ships with a sensible set of default configuration\nparameters you can adjust them as you need.</p>\n<p>The configuration file is called <tt>tentacle.cfg</tt> and searched at the\nfollowing locations:</p>\n<ul>\n<li>current working directory (suitable for test runs)</li>\n<li><tt><span class=\"pre\">$HOME/.tentacle.cfg</span></tt></li>\n<li><tt>/etc/tentacle.cfg</tt> (suitable for systemd setup)</li>\n</ul>\n<p>The config has INI like syntax and is split into sections.\nTo get the default configuration just run <tt>tentacle <span class=\"pre\">--dump-config</span></tt> to write\nit into a file:</p>\n<pre>$ tentacle --dump-config tentacle.cfg\n</pre>\n<div id=\"section-octoprint\">\n<h3><a href=\"#id9\" rel=\"nofollow\">3.1\u00a0\u00a0\u00a0Section <tt>octoprint</tt></a></h3>\n<dl>\n<dt><tt>url</tt></dt>\n<dd><p>The URL to reach OctoPrint. Either use <tt>http:</tt> or <tt>https:</tt>. Make sure\nthe hostname matches (default: <tt>octopi</tt>).</p>\n<p>Default:</p>\n<pre>http://octopi\n</pre>\n</dd>\n<dt><tt>api_key</tt></dt>\n<dd>Give the API key you created in <tt>OctoPrint</tt> to allow to execute commands\nvia the REST API.</dd>\n</dl>\n</div>\n<div id=\"section-qt\">\n<h3><a href=\"#id10\" rel=\"nofollow\">3.2\u00a0\u00a0\u00a0Section <tt>qt</tt></a></h3>\n<dl>\n<dt><tt>fb_dev</tt></dt>\n<dd><p>The frame buffer device of your TFT display.</p>\n<p>Default:</p>\n<pre>/dev/fb0\n</pre>\n</dd>\n<dt><tt>ts_dev</tt></dt>\n<dd><p>The touch screen input device.</p>\n<p>Default:</p>\n<pre>/dev/input/touchscreen\n</pre>\n</dd>\n</dl>\n</div>\n<div id=\"section-app\">\n<h3><a href=\"#id11\" rel=\"nofollow\">3.3\u00a0\u00a0\u00a0Section <tt>app</tt></a></h3>\n<p>Global settings for the whole UI.</p>\n<dl>\n<dt><tt>font_family</tt> and <tt>font_size</tt></dt>\n<dd>Specify the font used for the UI.</dd>\n<dt><tt>width</tt> and <tt>height</tt></dt>\n<dd>The size of your display</dd>\n<dt><tt>dark</tt></dt>\n<dd>Enable <tt>dark</tt> mode. Disable to see <tt>light</tt> mode.</dd>\n<dt><tt>style</tt></dt>\n<dd>Select a specific Qt widget style</dd>\n</dl>\n</div>\n<div id=\"section-temp\">\n<h3><a href=\"#id12\" rel=\"nofollow\">3.4\u00a0\u00a0\u00a0Section <tt>temp</tt></a></h3>\n<p>Settings for the <tt>temp</tt> tab in the UI.</p>\n<dl>\n<dt><tt>font_family</tt> and <tt>font_size</tt></dt>\n<dd>Specify the font used for the UI temperate labels</dd>\n<dt><tt>min</tt> and <tt>max</tt></dt>\n<dd>Set the minimum and maximum temperature shown in graph.</dd>\n<dt><tt>step</tt></dt>\n<dd>Set the line and label stepping in the graph display.</dd>\n</dl>\n</div>\n<div id=\"section-move\">\n<h3><a href=\"#id13\" rel=\"nofollow\">3.5\u00a0\u00a0\u00a0Section <tt>move</tt></a></h3>\n<p>Settings for the <tt>move</tt> tab in the UI.</p>\n<dl>\n<dt><tt>unload_z</tt></dt>\n<dd>The Z axis position to move to when selecting the <tt>Unload</tt> button.</dd>\n<dt><tt>label_a</tt> and <tt>label_b</tt></dt>\n<dd>The label text to be displayed for the custom move buttons.</dd>\n<dt><tt>pos_a</tt> and <tt>pos_b</tt></dt>\n<dd>The X,Y,Z position to move to when selecting a custom button.</dd>\n</dl>\n</div>\n<div id=\"section-tool\">\n<h3><a href=\"#id14\" rel=\"nofollow\">3.6\u00a0\u00a0\u00a0Section <tt>tool</tt></a></h3>\n<p>Settings for the <tt>tool</tt> tab in the UI.</p>\n<dl>\n<dt><tt>t{0,1}_temp{1,2}</tt> and <tt>bed_temp{1,2}</tt></dt>\n<dd>Set the default temperature for the tools 0, 1, and the bed.</dd>\n</dl>\n</div>\n<div id=\"section-ser\">\n<h3><a href=\"#id15\" rel=\"nofollow\">3.7\u00a0\u00a0\u00a0Section <tt>ser</tt></a></h3>\n<p>Settings for the <tt>ser</tt> tab in the UI.</p>\n<dl>\n<dt><tt>font_family</tt> and <tt>font_size</tt></dt>\n<dd>Specify the font used for the UI serial log output</dd>\n</dl>\n</div>\n<div id=\"section-cam\">\n<h3><a href=\"#id16\" rel=\"nofollow\">3.8\u00a0\u00a0\u00a0Section <tt>cam</tt></a></h3>\n<p>Settings for the <tt>cam</tt> tab in the UI.</p>\n<dl>\n<dt><tt>url</tt></dt>\n<dd><p>The the URL of <tt>mjpeg streamer</tt> to get the mjpeg stream from your camera.</p>\n<p>Default:</p>\n<pre>http://octopi:8080/?action=stream\n</pre>\n</dd>\n</dl>\n</div>\n<div id=\"section-commands\">\n<h3><a href=\"#id17\" rel=\"nofollow\">3.9\u00a0\u00a0\u00a0Section <tt>commands</tt></a></h3>\n<p>Configure various external commands triggered by <tt>tentacle</tt>.</p>\n<p>Note: Make sure the user running <tt>tentacle</tt> is allowed to perform these\ncommands. You may need to add <tt>sudo</tt> and configure it to run the\ncommands without password input.</p>\n<dl>\n<dt><tt>restart_octoprint</tt></dt>\n<dd><p>Restart the OctoPrint server.</p>\n<p>Default:</p>\n<pre>/bin/systemctl restart octoprint\n</pre>\n</dd>\n<dt><tt>reboot_sys</tt></dt>\n<dd><p>Reboot the whole system.</p>\n<p>Default:</p>\n<pre>/sbin/reboot\n</pre>\n</dd>\n<dt><tt>poweroff_sys</tt></dt>\n<dd><p>Power off the system.</p>\n<p>Default:</p>\n<pre>/sbin/poweroff\n</pre>\n</dd>\n<dt><tt>backlight_on</tt></dt>\n<dd><p>Enable the backlight of the TFT display.</p>\n<p>Default:</p>\n<pre>+/scripts/backlight 1\n</pre>\n</dd>\n<dt><tt>backlight_off</tt></dt>\n<dd><p>Disable the backlight of the TFT display.</p>\n<p>Default:</p>\n<pre>+/scripts/backlight 0\n</pre>\n</dd>\n</dl>\n<p>Note: A path starting with <tt>+/</tt> is automatically expanded to the <tt>scripts</tt>\ndirectory in the <tt>tentacle</tt> module.</p>\n</div>\n</div>\n<div id=\"user-s-manual\">\n<h2><a href=\"#id18\" rel=\"nofollow\">4\u00a0\u00a0\u00a0User\u2019s Manual</a></h2>\n<h2 id=\"hard-keys\"><span class=\"section-subtitle\">Hard keys</span></h2>\n<p>The following keys are recognized:</p>\n<dl>\n<dt><tt>escape</tt></dt>\n<dd>Enter the system menu to execute control commands.\nIn the menu abort the menu and close it.</dd>\n<dt><tt>return</tt></dt>\n<dd>Save a screen shot.\nIn the menu select and activate an item.</dd>\n<dt><tt>cursor up</tt></dt>\n<dd>Enable the backlight of the display.\nIn the menu move one item up.</dd>\n<dt><tt>cursor down</tt></dt>\n<dd>Disable the backlight of the display.\nIn the menu move one item down.</dd>\n</dl>\n</div>\n<div id=\"appendix\">\n<h2><a href=\"#id19\" rel=\"nofollow\">5\u00a0\u00a0\u00a0Appendix</a></h2>\n<div id=\"raspberry-camera-setup\">\n<h3><a href=\"#id20\" rel=\"nofollow\">5.1\u00a0\u00a0\u00a0Raspberry Camera Setup</a></h3>\n<p>In my <a href=\"https://octoprint.org/download/\" rel=\"nofollow\">OctoPi</a> based setup I added a Raspberry Pi Cam.\nIn order to make it work I enabled the <tt>Video4Linux</tt> driver in\n<tt>/etc/modules</tt>:</p>\n<pre>bcm2835_v4l2\n</pre>\n<p>If the image has the wrong orientation you can flip it in any direction with\nthe <tt><span class=\"pre\">v4l2-ctl</span></tt> tool found in the <tt><span class=\"pre\">v4l-utils</span></tt> package.:</p>\n<pre>v4l2-ctl --set-ctrl vertical_flip=1 --set-ctrl horizontal_flip=1\n</pre>\n<p>To make this change persistet simply add the line to <tt>/etc/rc.local</tt>.</p>\n<p>The camera is then auto detected by <tt>mjpeg streamer</tt> running on the OctoPi\nsystem.</p>\n</div>\n<div id=\"setup-an-adafruit-pitft-plus-2-8\">\n<h3><a href=\"#id21\" rel=\"nofollow\">5.2\u00a0\u00a0\u00a0Setup an Adafruit PiTFT Plus 2.8\u201d</a></h3>\n<p><a href=\"https://www.adafruit.com/product/2298\" rel=\"nofollow\">Adafruit</a> offers a nice small 2.8\u201d display with 320 x 240 pixels, a resistive\ntouch panel and four hard keys.</p>\n<p>Follow the <a href=\"https://learn.adafruit.com/adafruit-pitft-28-inch-resistive-touchscreen-display-raspberry-pi\" rel=\"nofollow\">Instructions</a> for initial setup. It boils down to adding the HAT\nin <tt>/etc/config.txt</tt> with:</p>\n<pre>dtparam=spi=on\ndtparam=i2c1=on\ndtparam=i2c_arm=on\ndtoverlay=pitft28-resistive,rotate=90,speed=64000000,fps=30\n</pre>\n<p>Note the <em>rotation of 90 degrees</em> so I can use landscape mode with the correct\norientation.</p>\n<div id=\"setup-hard-keys\">\n<h4><a href=\"#id22\" rel=\"nofollow\">5.2.1\u00a0\u00a0\u00a0Setup Hard keys</a></h4>\n<p>Hard keys are not essential to run <em>tentacle</em>, but they offer useful functions\nincluding controlling of the backlight without the need for touching.</p>\n<p>The following GPIOs are connected to the PiTFT+ Hardkeys (from top to bottom):</p>\n<ul>\n<li>17</li>\n<li>22</li>\n<li>23</li>\n<li>27</li>\n</ul>\n<p>I added a device tree file that maps these to the following input keys (see\nthe <a href=\"https://github.com/torvalds/linux/blob/master/include/uapi/linux/input-event-codes.h\" rel=\"nofollow\">Linux Kernel input event header</a> for the codes):</p>\n<ul>\n<li>17: Escape (code 1)</li>\n<li>22: Cursor Up (code 103)</li>\n<li>23: Enter (code 28)</li>\n<li>27: Cursor Down (code 108)</li>\n</ul>\n<p>Enter the directory <tt><span class=\"pre\">contrib/pitft-keys</span></tt> and run the the supplied\n<tt>Makefile</tt> there to build the device tree overlay binary and\ninstall it in <cite>/boot/</cite>.</p>\n<pre>$ <span class=\"nb\">cd</span> contrib/pitft-keys\n$ make install\n</pre>\n<p>Note: It will ask for your user password to install the file via <tt>sudo</tt>.</p>\n</div>\n<div id=\"touchscreen-calibration\">\n<h4><a href=\"#id23\" rel=\"nofollow\">5.2.2\u00a0\u00a0\u00a0Touchscreen Calibration</a></h4>\n<p>It is essential to calibrate your touchscreen. Otherwise exact picking of UI\nelements with a stylus or even your fingers is not possible.</p>\n<p>PyQt5 in frame buffer mode is compiled for Raspbian to use <a href=\"https://www.freedesktop.org/wiki/Software/libinput/\" rel=\"nofollow\">libinput</a> for\nreceiving touch panel events.</p>\n<p>Unfortunately, all documented ways I found on the net either assume <tt>tslib</tt>\nor even <tt>X11</tt> support for calibration. Here is my own way I found with lots\ntrial and error.</p>\n<div id=\"running-the-calibration-tool-on-x11\">\n<h5><a href=\"#id24\" rel=\"nofollow\">5.2.2.1\u00a0\u00a0\u00a0Running the Calibration Tool on X11</a></h5>\n<p>Yes, we want to run on frame buffer only but the only calibration tool I found\nstill uses X11. So we install a minimal X11 runtime just to start the tool.</p>\n<p>A minimal X11 server can be installed with:</p>\n<pre>sudo apt-get install xserver-xorg xserver-xorg-video-fbdev xinit\n</pre>\n<p>Edit <tt>/etc/X11/Xwrapper.config</tt> to allow everybody to start the server:</p>\n<pre>...\nallowed_users=anyboady\n</pre>\n<p>Now selec the frame buffer of your display to run X11 on. My display uses\n<tt>/dev/fb1</tt>. Edit <tt><span class=\"pre\">/usr/share/X11/xorg.conf.d/99-fbdev.conf</span></tt>:</p>\n<pre>Section \"Device\"\nIdentifier \"myfb\"\nDriver \"fbdev\"\nOption \"fbdev\" \"/dev/fb1\"\nEndSection\n</pre>\n<p>Now run the X11 server once (preferrably from a ssh shell):</p>\n<pre>$ startx <span class=\"p\">&amp;</span>\n</pre>\n<p>Make sure your current calibration matrix is reset:</p>\n<pre>$ <span class=\"nv\">DISPLAY</span><span class=\"o\">=</span>:0.0 xinput set-prop <span class=\"s2\">\"stmpe-ts\"</span> <span class=\"s1\">'Coordinate Transformation Matrix'</span> <span class=\"m\">1</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">1</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">1</span>\n</pre>\n<p>Run the calibration tool with:</p>\n<pre>$ <span class=\"nv\">DISPLAY</span><span class=\"o\">=</span>:0.0 ./xtcal -geometry 320x240\n</pre>\n<p>Pick the drawn crosshairs with a stylus each and after that you get the matrix\nreported:</p>\n<pre>xinput set-prop &lt;device name&gt; 'Coordinate Transformation Matrix' 0.015731 -1.135927 1.014818 1.123037 0.017117 -0.062198 0 0 1\n</pre>\n<p>We are interested in the values of this matrix! So copy them in your\nclipboard.</p>\n<p>Stop the X11 server as it is not needed anymore:</p>\n<pre>$ pkill startx\n</pre>\n</div>\n<div id=\"save-the-calibration-matrix-for-libinput\">\n<h5><a href=\"#id25\" rel=\"nofollow\">5.2.2.2\u00a0\u00a0\u00a0Save the Calibration Matrix for <tt>libinput</tt></a></h5>\n<p>We need to assign the calibration matrix in an environment variable called\n<tt>LIBINPUT_CALIBRATION_MATRIX</tt>. This variable has to be set any time the\ntouchpanel device is detected and setup.</p>\n<p>The PiTFT installer already has created a <tt>udev</tt> rule file\nthat creates a <tt>input/touchscren</tt> link for the touchpanel device.\nIn <tt><span class=\"pre\">/etc/udev/rules.d/95-stmpe.rules</span></tt> we add the environment variable:</p>\n<pre>SUBSYSTEM==\"input\", ATTRS{name}==\"*stmpe*\", ENV{DEVNAME}==\"*event*\", SYMLINK+=\"input/touchscreen\", ENV{LIBINPUT_CALIBRATION_MATRIX}=\"0.015731 -1.135927 1.014818 1.123037 0.017117 -0.062198\"\n</pre>\n<p>Note that only the first 6 values of the matrix are used here.</p>\n<p>Reboot your Pi to make this matrix active.</p>\n<p>You can check if the matrix is setup correctly with the\n<tt><span class=\"pre\">libinput-list-devices</span></tt> tool.</p>\n<pre>$ sudo libinput-list-devices\nDevice:           stmpe-ts\n...\nCalibration:      <span class=\"m\">0</span>.02 -1.14 <span class=\"m\">1</span>.01 <span class=\"m\">1</span>.12 <span class=\"m\">0</span>.02\n</pre>\n</div>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4919512, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e9cdabe6ee3f0d378ab6bce6d7e39c87", "sha256": "1d3ac4a1fc34dba6d5f7c5c173821d5cfe6e0269a76bd829fa83549d1c2003b2"}, "downloads": -1, "filename": "tentacle-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e9cdabe6ee3f0d378ab6bce6d7e39c87", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 49320, "upload_time": "2019-03-09T20:13:25", "upload_time_iso_8601": "2019-03-09T20:13:25.571812Z", "url": "https://files.pythonhosted.org/packages/3e/93/7bf4cc7205060d4915fe78e235c60ae38be83048757aa494dffe5bb2ee8c/tentacle-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e9cdabe6ee3f0d378ab6bce6d7e39c87", "sha256": "1d3ac4a1fc34dba6d5f7c5c173821d5cfe6e0269a76bd829fa83549d1c2003b2"}, "downloads": -1, "filename": "tentacle-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e9cdabe6ee3f0d378ab6bce6d7e39c87", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 49320, "upload_time": "2019-03-09T20:13:25", "upload_time_iso_8601": "2019-03-09T20:13:25.571812Z", "url": "https://files.pythonhosted.org/packages/3e/93/7bf4cc7205060d4915fe78e235c60ae38be83048757aa494dffe5bb2ee8c/tentacle-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:00 2020"}