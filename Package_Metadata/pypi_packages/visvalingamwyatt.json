{"info": {"author": "fitnr", "author_email": "contact@fakeisthenewreal.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Operating System :: Unix", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: PyPy"], "description": "Visvalingam-Wyatt\n=================\n\nA Python implementation of the Visvalingam-Wyatt line simplification\nalgorithm.\n\nThis implementation is due to `Eliot\nHallmark <https://github.com/Permafacture/Py-Visvalingam-Whyatt/>`__.\nThis release simply packages it as a Python module.\n\nUse\n---\n\n.. code:: python\n\n    >>> import visvalingamwyatt as vw\n    >>> points = [(1, 2), (2, 3), (3, 4), ...]\n    >>> vw.simplify(points)\n    [(1, 2), (3, 4), ...]\n\nPoints may be any ``Sequence``-like object that (``list``, ``tuple``, a\ncustom class that exposes an ``__iter__`` method).\n\nTest different methods and thresholds:\n\n.. code:: python\n\n    simplifier = vw.Simplifier(points)\n\n    # Simplify by percentage of points to keep\n    simplifier.simplify(ratio=0.5)\n\n    # Simplify by giving number of points to keep\n    simplifier.simplify(number=1000)\n\n    # Simplify by giving an area threshold\n    simplifier.simplify(threshold=0.01)\n\nShorthands for working with geodata:\n\n.. code:: python\n\n    import visvalingamwyatt as vw\n\n    feature = {\n        \"properties\": {\"foo\": \"bar\"},\n        \"geometry\": {\n            \"type\": \"Polygon\",\n            \"coordinates\": [...]\n        }\n    }\n\n    # returns a copy of the geometry, simplified (keeping 90% of points)\n    vw.simplify_geometry(feature['geometry'], ratio=0.90)\n\n    # returns a copy of the feature, simplified (using an area threshold)\n    vw.simplify_feature(feature, threshold=0.90)\n\nThe command line tool ``vwsimplify`` is available to simplify GeoJSON\nfiles:\n\n::\n\n    # Simplify using a ratio of points\n    vwsimplify --ratio 0.90 in.geojson -o simple.geojson\n\n    # Simplify using the number of points to keep\n    vwsimplify --number 1000 in.geojson -o simple.geojson\n\n    # Simplify using a minimum area\n    vwsimplify --threshold 0.001 in.geojson -o simple.geojson\n\nInstall `Fiona <https://github.com/Toblerity/Fiona>`__ for the\nadditional ability to simplify any geodata layer.\n\nLicense\n-------\n\nMIT\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fitnr/visvalingamwyatt", "keywords": "gis", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "visvalingamwyatt", "package_url": "https://pypi.org/project/visvalingamwyatt/", "platform": "", "project_url": "https://pypi.org/project/visvalingamwyatt/", "project_urls": {"Homepage": "https://github.com/fitnr/visvalingamwyatt"}, "release_url": "https://pypi.org/project/visvalingamwyatt/0.1.2/", "requires_dist": ["numpy (<2,>=1.8)", "Fiona (<2,>=1.6.2); extra == 'cli'"], "requires_python": "", "summary": "Simplify geometries with the Visvalingam-Wyatt algorithm", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python implementation of the Visvalingam-Wyatt line simplification\nalgorithm.</p>\n<p>This implementation is due to <a href=\"https://github.com/Permafacture/Py-Visvalingam-Whyatt/\" rel=\"nofollow\">Eliot\nHallmark</a>.\nThis release simply packages it as a Python module.</p>\n<div id=\"use\">\n<h2>Use</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">visvalingamwyatt</span> <span class=\"k\">as</span> <span class=\"nn\">vw</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">vw</span><span class=\"o\">.</span><span class=\"n\">simplify</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">)</span>\n<span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n</pre>\n<p>Points may be any <tt>Sequence</tt>-like object that (<tt>list</tt>, <tt>tuple</tt>, a\ncustom class that exposes an <tt>__iter__</tt> method).</p>\n<p>Test different methods and thresholds:</p>\n<pre><span class=\"n\">simplifier</span> <span class=\"o\">=</span> <span class=\"n\">vw</span><span class=\"o\">.</span><span class=\"n\">Simplifier</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Simplify by percentage of points to keep</span>\n<span class=\"n\">simplifier</span><span class=\"o\">.</span><span class=\"n\">simplify</span><span class=\"p\">(</span><span class=\"n\">ratio</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Simplify by giving number of points to keep</span>\n<span class=\"n\">simplifier</span><span class=\"o\">.</span><span class=\"n\">simplify</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Simplify by giving an area threshold</span>\n<span class=\"n\">simplifier</span><span class=\"o\">.</span><span class=\"n\">simplify</span><span class=\"p\">(</span><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.01</span><span class=\"p\">)</span>\n</pre>\n<p>Shorthands for working with geodata:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">visvalingamwyatt</span> <span class=\"k\">as</span> <span class=\"nn\">vw</span>\n\n<span class=\"n\">feature</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">},</span>\n    <span class=\"s2\">\"geometry\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Polygon\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"coordinates\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># returns a copy of the geometry, simplified (keeping 90% of points)</span>\n<span class=\"n\">vw</span><span class=\"o\">.</span><span class=\"n\">simplify_geometry</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"p\">[</span><span class=\"s1\">'geometry'</span><span class=\"p\">],</span> <span class=\"n\">ratio</span><span class=\"o\">=</span><span class=\"mf\">0.90</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># returns a copy of the feature, simplified (using an area threshold)</span>\n<span class=\"n\">vw</span><span class=\"o\">.</span><span class=\"n\">simplify_feature</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.90</span><span class=\"p\">)</span>\n</pre>\n<p>The command line tool <tt>vwsimplify</tt> is available to simplify GeoJSON\nfiles:</p>\n<pre># Simplify using a ratio of points\nvwsimplify --ratio 0.90 in.geojson -o simple.geojson\n\n# Simplify using the number of points to keep\nvwsimplify --number 1000 in.geojson -o simple.geojson\n\n# Simplify using a minimum area\nvwsimplify --threshold 0.001 in.geojson -o simple.geojson\n</pre>\n<p>Install <a href=\"https://github.com/Toblerity/Fiona\" rel=\"nofollow\">Fiona</a> for the\nadditional ability to simplify any geodata layer.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT</p>\n</div>\n\n          </div>"}, "last_serial": 3385420, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "274a3124d6d7327870c24fd16e12429e", "sha256": "461696728569240d6d66115668f458c1430677cf9e401a59aa3278e03e06b123"}, "downloads": -1, "filename": "visvalingamwyatt-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "274a3124d6d7327870c24fd16e12429e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15151, "upload_time": "2016-01-21T15:17:37", "upload_time_iso_8601": "2016-01-21T15:17:37.578959Z", "url": "https://files.pythonhosted.org/packages/a1/1e/24855d2f63f78b05efc834c6a76ef629e252cf60fb180e32bf977fe69b05/visvalingamwyatt-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51b5a03959f54c280d31fa81db2c8145", "sha256": "c5443af6a12d568732850403cbcdc0c5d5c159bebfe39d7cbac78958a4f716e0"}, "downloads": -1, "filename": "visvalingamwyatt-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "51b5a03959f54c280d31fa81db2c8145", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15153, "upload_time": "2016-01-21T15:17:51", "upload_time_iso_8601": "2016-01-21T15:17:51.067237Z", "url": "https://files.pythonhosted.org/packages/fe/61/d8dd9bba9d84e3f508c271455ae9a21bcaa89b0bea841556ea8d4ce37be8/visvalingamwyatt-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c3cbcd647e286d15322f135bbedd8268", "sha256": "ea7a9055f87d0408155fa272f82fc4de98d426b40be2a75dc67f66a499ecd1d4"}, "downloads": -1, "filename": "visvalingamwyatt-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "c3cbcd647e286d15322f135bbedd8268", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15167, "upload_time": "2016-01-21T20:03:59", "upload_time_iso_8601": "2016-01-21T20:03:59.270409Z", "url": "https://files.pythonhosted.org/packages/2f/a5/f3f5c0ed79debe55f4777898d7651a9bc870898e9827c77634bca0624afc/visvalingamwyatt-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea4955a93738180439a69e1caf97468a", "sha256": "c179b45528a45586357fdbf7ceace272eed196c3c0dbf3808ce6a2cafa3bb6b9"}, "downloads": -1, "filename": "visvalingamwyatt-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ea4955a93738180439a69e1caf97468a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15169, "upload_time": "2016-01-21T20:04:24", "upload_time_iso_8601": "2016-01-21T20:04:24.114482Z", "url": "https://files.pythonhosted.org/packages/e0/47/1f9dc9d2444187850f4785694477197efe08cc717d7d7f9472280d22b3ee/visvalingamwyatt-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "170e150c71c805df3a9bcd0198279277", "sha256": "d6866ddec26dca4d7c9cc18687cdab10fbfe8bf004a9277a14951e8b294489bf"}, "downloads": -1, "filename": "visvalingamwyatt-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "170e150c71c805df3a9bcd0198279277", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16468, "upload_time": "2017-12-03T21:54:45", "upload_time_iso_8601": "2017-12-03T21:54:45.835393Z", "url": "https://files.pythonhosted.org/packages/0d/45/938a471cdd3ca65abb2eb1f1b5f8fda219c10cbebd6ce15084bdb4437480/visvalingamwyatt-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c3509d3f7cc7380bd6da3e98d2e86f9", "sha256": "8e0098841854f96179b215c2cda5bfed47d02eedc0c9a7954309057507b39c2a"}, "downloads": -1, "filename": "visvalingamwyatt-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6c3509d3f7cc7380bd6da3e98d2e86f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7754, "upload_time": "2017-12-03T21:54:47", "upload_time_iso_8601": "2017-12-03T21:54:47.094154Z", "url": "https://files.pythonhosted.org/packages/8f/16/aeb01de587a538d0b4228d3b0654365084e406ca370bd2b428b0ce716bba/visvalingamwyatt-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "170e150c71c805df3a9bcd0198279277", "sha256": "d6866ddec26dca4d7c9cc18687cdab10fbfe8bf004a9277a14951e8b294489bf"}, "downloads": -1, "filename": "visvalingamwyatt-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "170e150c71c805df3a9bcd0198279277", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16468, "upload_time": "2017-12-03T21:54:45", "upload_time_iso_8601": "2017-12-03T21:54:45.835393Z", "url": "https://files.pythonhosted.org/packages/0d/45/938a471cdd3ca65abb2eb1f1b5f8fda219c10cbebd6ce15084bdb4437480/visvalingamwyatt-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c3509d3f7cc7380bd6da3e98d2e86f9", "sha256": "8e0098841854f96179b215c2cda5bfed47d02eedc0c9a7954309057507b39c2a"}, "downloads": -1, "filename": "visvalingamwyatt-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6c3509d3f7cc7380bd6da3e98d2e86f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7754, "upload_time": "2017-12-03T21:54:47", "upload_time_iso_8601": "2017-12-03T21:54:47.094154Z", "url": "https://files.pythonhosted.org/packages/8f/16/aeb01de587a538d0b4228d3b0654365084e406ca370bd2b428b0ce716bba/visvalingamwyatt-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:35:09 2020"}