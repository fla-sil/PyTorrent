{"info": {"author": "Akis, Christina, Paschalis", "author_email": "pnatsidis@hotmail.com", "bugtrack_url": null, "classifiers": [], "description": "SYNOPSIS\n\n\nPACtool is a program that performs GWAS analysis on control/case data of SNP variants and was implemented using Python 3.\n\n\tPACTOOL Features:\n\t- Allele frequency of each variant for all selected SNPs\n\t- HWE statistic and respective p-value calculation for the unified controls and and cases dataset\n\t- Linkage Disequilibrium evaluation between two selected SNPs (D' and r-squared are calculated)\n\t- Association Test on the provided dataset, with optional generation of manhattan plot and qq-plot\n\t- Information retrieval for selected SNPs, from Ensembl Variant Effect Predictor database.\n\n\tPACtool Limitations:\n\t- Current version of PACtool does not support analysis for variants located on different chromosomes.\n\t  Please make sure that all SNPs in your dataset are located on the same chromosome.\n\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nINPUT FILES FORMAT\n\nThe input files must be provided in accordance to the HAPGEN2 program, which can be applied on various genomic datasets.\nThe input file consists of rows and columns, where each row represents a SNP, and the columns contain information about the following:\n\nColumn_1: snp_id\n\t  - e.g. snp_0\n\t  - a unique identifier for each SNP\n\nColumns_2: rs_id\n\t  - e.g. rs6054257\n\t  - or alternatively the genomic coordinates, with a pefix indicating the chromosome e.g. 20-9150\n\nColumns_3: snp_coordinates based on NCBI build 36\n\t  - e.g. 9150\n\nColumn_4: reference allele\n\t  - denoted with the nucleotide base\n\t  - e.g. C\n\nColumn_5: alternative allele\n\t  - denoted with the nucleotide base\n\t  - e.g. G\n\nColumn_6 to Last_Column:\n\t  - These columns contain the genotype for each sample.\n\t    Each sample genotype is represented by 3 columns consisted of '0' and '1' digits, with the positioning of '1' being the indicator of the genotype.\n\t    More specifically,\n\t    - 1 0 0 ---> ref-ref , homozygous for the reference allele\n\t    - 0 1 0 ---> ref-alt , heterozygous\n\t    - 0 0 1 ---> alt-alt , homozygous for the alternative allele\n\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nOUTPUT FILES FORMAT\n\nThe output files follow the same space separated file format as the input files described above.\n\nThe first column for each SNP in all output files is the snp_id, while the rest of the columns hold the values from the respective statistical tests and analyses.\n\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nINSTALLATION-UTILIZATION\n\nPACtool can be downloaded from the following PyPI page:\n\n     https://pypi.python.org/pypi/pactool\n\nBy unzipping/untaring the downloaded .tgz file, you can get necessary information on how to execute the program by typing (while being in pactool directory):\n\n     python3 pactool.py -h\n\nYou can execute the file pactool.py using python 3, and include all preferred arguments.\nThree of the arguments are required and must be provided every time, or else you will receive an error message.\nPlease be sure to include the following arguments:\n\n       -controls_file\t  Indicates the input file containing control samples\n       -cases_file\t  Indicates the input file containing case samples\n       -output\t \t  Specifies the prefix of each output file\n\nThe following optional arguments can also be included, alongside with a file with snp_codes (one in each line) to perform the corresponding action:\n\n       -keep_snps      \t  Keeps for analysis only the SNPs specified in the provided file.\n       -remove_snps\t  Removes from following analysis the SNPs specified in the provided file.\n\nThe above actions can be applied to the samples as well (the lines in given file shall be e.g. control_5 or case_10):\n\n       -keep_samples      Keeps for analysis only the control/case samples specified in the provided file.\n       -remove_samples    Removes from further analysis the control/case samples specified in the provided file.\n\nAfter performing the keep/remove actions, the following analysis options can be selected:\n\n       -allele_frequency   Calculates the frequencies of the reference and alternative variants in control samples, case samples as well as their total frequencies.\n                           Outputs the file 'output'.frequency with 7 columns: snp_code ref_freq_control alt_freq_control ref_freq_cases alt_freq_cases ref_freq_total alt_freq_total\n       -hwe, -HWE\t   Calculates the Hardy-Weinberg Equilibrium and the corresponding p-value.\n                           Outputs the file 'output'.hwe with 3 columns: snp_code hwe_statistic p-value\n       -ld SNP1 SNP2       Estimates if the two given SNPs are in Linkage Disequilibrium, by calculating the D' and r-squared statistics. SNP1 and SNP2 are required snp_codes.\n       \t   \t\t   Ouputs the file 'output'.ld with 4 colums: snp1_code snp2_code D' r-squared\n       -association_test   Performs genotypic association test for each SNP and calculates the odds-ratios (r=reference, a=alternative, OR_control_case)\n       \t\t\t   Outputs the file 'output'.association with 8 columns: snp_code locus ref alt p-value OR_rr_ra OR_rr_aa OR_ra_aa\n       -manhattan\t   Draws a manhattan plot for the p-values of the association test.\n       \t\t\t   Can only be used if -association_test argument is given.\n       -qqplot\t\t   Draws a qq-plot for the p-values of the association test.\n       \t\t\t   Can only be used of -association_test argument is given\n       -get_info SNP\t   Retrieves information about variant with snp_code SNP. Prints a json format output with all information obtained from VEP database of Ensembl.\n\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nTESTING\n\nPACtool was built around and tested using the following files:\n\ngwas.controls.gen\ngwas.cases.gen\n\nwhich can be download from the following link:\n\nhttps://s3.eu-central-1.amazonaws.com/pythonprojectgwas/gwas.tar.gz\n\nCredits to the creation of this artificial dataset goes to the team running 'BIO-102 Introduction to Programming' course of MSc Bioinformatics, UoCrete, Heraklion.\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nCONTRIBUTORS\n\nAuthors of PACtool are:\n\nChristina Chatzipantsiou\t(chatzipantsiou@gmail.com)\nPanayiotis Linardos\t\t(mondestrasz@gmail.com)\nPaschalis Natsidis\t\t(pnatsidis@hotmail.com)\n\nFor any bug report, contribution or general comment please contact any of the authors using the provided e-mail addresses.\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nLICENSE\n\nPACtool lies under MIT license described in this link:\n\nhttps://opensource.org/license/MIT\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pnatsi/PACtool", "keywords": "project python linux gwas bioinfo-grad", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "PAC-tool", "package_url": "https://pypi.org/project/PAC-tool/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/PAC-tool/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/pnatsi/PACtool"}, "release_url": "https://pypi.org/project/PAC-tool/1.0.6a/", "requires_dist": null, "requires_python": null, "summary": "This is our little project for GWAS", "version": "1.0.6a", "yanked": false, "html_description": "<div class=\"project-description\">\n            SYNOPSIS<br><br><br>PACtool is a program that performs GWAS analysis on control/case data of SNP variants and was implemented using Python 3.<br><br>\tPACTOOL Features:<br>\t- Allele frequency of each variant for all selected SNPs<br>\t- HWE statistic and respective p-value calculation for the unified controls and and cases dataset<br>\t- Linkage Disequilibrium evaluation between two selected SNPs (D' and r-squared are calculated)<br>\t- Association Test on the provided dataset, with optional generation of manhattan plot and qq-plot<br>\t- Information retrieval for selected SNPs, from Ensembl Variant Effect Predictor database.<br><br>\tPACtool Limitations:<br>\t- Current version of PACtool does not support analysis for variants located on different chromosomes.<br>\t  Please make sure that all SNPs in your dataset are located on the same chromosome.<br><br>-----------------------------------------------------------------------------------------------------------------------------------------------------------------------<br><br>INPUT FILES FORMAT<br><br>The input files must be provided in accordance to the HAPGEN2 program, which can be applied on various genomic datasets.<br>The input file consists of rows and columns, where each row represents a SNP, and the columns contain information about the following:<br><br>Column_1: snp_id<br>\t  - e.g. snp_0<br>\t  - a unique identifier for each SNP<br><br>Columns_2: rs_id<br>\t  - e.g. rs6054257<br>\t  - or alternatively the genomic coordinates, with a pefix indicating the chromosome e.g. 20-9150<br><br>Columns_3: snp_coordinates based on NCBI build 36<br>\t  - e.g. 9150<br><br>Column_4: reference allele<br>\t  - denoted with the nucleotide base<br>\t  - e.g. C<br><br>Column_5: alternative allele<br>\t  - denoted with the nucleotide base<br>\t  - e.g. G<br><br>Column_6 to Last_Column:<br>\t  - These columns contain the genotype for each sample.<br>\t    Each sample genotype is represented by 3 columns consisted of '0' and '1' digits, with the positioning of '1' being the indicator of the genotype.<br>\t    More specifically,<br>\t    - 1 0 0 ---&gt; ref-ref , homozygous for the reference allele<br>\t    - 0 1 0 ---&gt; ref-alt , heterozygous<br>\t    - 0 0 1 ---&gt; alt-alt , homozygous for the alternative allele<br><br>-----------------------------------------------------------------------------------------------------------------------------------------------------------------------<br><br>OUTPUT FILES FORMAT<br><br>The output files follow the same space separated file format as the input files described above.<br><br>The first column for each SNP in all output files is the snp_id, while the rest of the columns hold the values from the respective statistical tests and analyses.<br><br>-----------------------------------------------------------------------------------------------------------------------------------------------------------------------<br><br>INSTALLATION-UTILIZATION<br><br>PACtool can be downloaded from the following PyPI page:<br><br>     https://pypi.python.org/pypi/pactool<br><br>By unzipping/untaring the downloaded .tgz file, you can get necessary information on how to execute the program by typing (while being in pactool directory):<br><br>     python3 pactool.py -h<br><br>You can execute the file pactool.py using python 3, and include all preferred arguments.<br>Three of the arguments are required and must be provided every time, or else you will receive an error message.<br>Please be sure to include the following arguments:<br><br>       -controls_file\t  Indicates the input file containing control samples<br>       -cases_file\t  Indicates the input file containing case samples<br>       -output\t \t  Specifies the prefix of each output file<br><br>The following optional arguments can also be included, alongside with a file with snp_codes (one in each line) to perform the corresponding action:<br><br>       -keep_snps      \t  Keeps for analysis only the SNPs specified in the provided file.<br>       -remove_snps\t  Removes from following analysis the SNPs specified in the provided file.<br><br>The above actions can be applied to the samples as well (the lines in given file shall be e.g. control_5 or case_10):<br><br>       -keep_samples      Keeps for analysis only the control/case samples specified in the provided file.<br>       -remove_samples    Removes from further analysis the control/case samples specified in the provided file.<br><br>After performing the keep/remove actions, the following analysis options can be selected:<br><br>       -allele_frequency   Calculates the frequencies of the reference and alternative variants in control samples, case samples as well as their total frequencies.<br>                           Outputs the file 'output'.frequency with 7 columns: snp_code ref_freq_control alt_freq_control ref_freq_cases alt_freq_cases ref_freq_total alt_freq_total<br>       -hwe, -HWE\t   Calculates the Hardy-Weinberg Equilibrium and the corresponding p-value.<br>                           Outputs the file 'output'.hwe with 3 columns: snp_code hwe_statistic p-value<br>       -ld SNP1 SNP2       Estimates if the two given SNPs are in Linkage Disequilibrium, by calculating the D' and r-squared statistics. SNP1 and SNP2 are required snp_codes.<br>       \t   \t\t   Ouputs the file 'output'.ld with 4 colums: snp1_code snp2_code D' r-squared<br>       -association_test   Performs genotypic association test for each SNP and calculates the odds-ratios (r=reference, a=alternative, OR_control_case)<br>       \t\t\t   Outputs the file 'output'.association with 8 columns: snp_code locus ref alt p-value OR_rr_ra OR_rr_aa OR_ra_aa<br>       -manhattan\t   Draws a manhattan plot for the p-values of the association test.<br>       \t\t\t   Can only be used if -association_test argument is given.<br>       -qqplot\t\t   Draws a qq-plot for the p-values of the association test.<br>       \t\t\t   Can only be used of -association_test argument is given<br>       -get_info SNP\t   Retrieves information about variant with snp_code SNP. Prints a json format output with all information obtained from VEP database of Ensembl.<br><br>-----------------------------------------------------------------------------------------------------------------------------------------------------------------------<br><br>TESTING<br><br>PACtool was built around and tested using the following files:<br><br>gwas.controls.gen<br>gwas.cases.gen<br><br>which can be download from the following link:<br><br>https://s3.eu-central-1.amazonaws.com/pythonprojectgwas/gwas.tar.gz<br><br>Credits to the creation of this artificial dataset goes to the team running 'BIO-102 Introduction to Programming' course of MSc Bioinformatics, UoCrete, Heraklion.<br><br>------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br><br>CONTRIBUTORS<br><br>Authors of PACtool are:<br><br>Christina Chatzipantsiou\t(chatzipantsiou@gmail.com)<br>Panayiotis Linardos\t\t(mondestrasz@gmail.com)<br>Paschalis Natsidis\t\t(pnatsidis@hotmail.com)<br><br>For any bug report, contribution or general comment please contact any of the authors using the provided e-mail addresses.<br><br>-------------------------------------------------------------------------------------------------------------------------------------------------------------------------<br><br>LICENSE<br><br>PACtool lies under MIT license described in this link:<br><br>https://opensource.org/license/MIT<br>\n          </div>"}, "last_serial": 2659074, "releases": {"1.0.6a": [{"comment_text": "", "digests": {"md5": "dedd5fba2762ac0e9bd9a87659e20c1d", "sha256": "80f711a076b6b01be3264d123bc52da5f45c40524a30ef77ccb82e50b1354cf4"}, "downloads": -1, "filename": "PAC-tool-1.0.6a.tar.gz", "has_sig": false, "md5_digest": "dedd5fba2762ac0e9bd9a87659e20c1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11128, "upload_time": "2017-02-21T22:05:28", "upload_time_iso_8601": "2017-02-21T22:05:28.424688Z", "url": "https://files.pythonhosted.org/packages/e8/4f/8ac008f6b47d02448ee596f801e7f755462ced053753748a25d4223ca3f1/PAC-tool-1.0.6a.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dedd5fba2762ac0e9bd9a87659e20c1d", "sha256": "80f711a076b6b01be3264d123bc52da5f45c40524a30ef77ccb82e50b1354cf4"}, "downloads": -1, "filename": "PAC-tool-1.0.6a.tar.gz", "has_sig": false, "md5_digest": "dedd5fba2762ac0e9bd9a87659e20c1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11128, "upload_time": "2017-02-21T22:05:28", "upload_time_iso_8601": "2017-02-21T22:05:28.424688Z", "url": "https://files.pythonhosted.org/packages/e8/4f/8ac008f6b47d02448ee596f801e7f755462ced053753748a25d4223ca3f1/PAC-tool-1.0.6a.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:02 2020"}