{"info": {"author": "Georgi Valkov", "author_email": "georgi.t.valkov@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3"], "description": "Python module launcher\n----------------------\n\nThis module tries to improve the start-up time of Python scripts. It\ndoes so by doing two things:\n\n - Eliminating the time it takes to spawn a new Python process.\n - Loading modules ahead of time.\n\nEliminating interpreter start-up time is done by maintaining a pool of\nPython processes. Reducing module load times is done by importing\nmodules immediately after a worker is spawned. Python is smart about\nnot re-importing modules that are already in ``sys.modules``.\n\nI ended up writing this module because of a few small Qt programs that\nweren't launching as fast as I would like them too. The results were a\n~100ms reduction in startup time, which can be attributed to PySide\nbeing a hefty package to import.\n\nThere are plenty of bugs and todos left - handling return code and\nproper process shutdown seem to be on top of the list.\n\nUsage\n=====\n\n::\n\n    Usage: python-module-launcher-3.3 [-hvdpws] socket [mod, ...]\n\n    Options:\n      -h, --help           show this help message and exit\n      -v, --version        show version and exit\n      -d, --daemonize      run in background (default: no)\n      -p, --pidfile        pid file to use if running as a daemon\n      -w, --workers <num>  worker processes to start (default: 5)\n      -s, --spare <num>    spare worker processes to maintain (default: 3)\n\n    Arguments:\n      socket               path to AF_UNIX socket\n      mod*                 modules to pre-import in workers\n\n    Examples:\n      python-module-launcher-3.3 launcher.sock numpy PySide.QtCore\n\n      echo -n \"module path.to.module\" | nc -U launcher.sock\n      echo -n \"file path/to/script.py arg1 arg2 | nc -U launcher.sock\n      echo -n  \"entrypoint name==0.1.0 console_scripts name arg1 arg2\"\n\nYou can send the following commands to the unix socket::\n\n    file path/to/script.py arg1 arg2 ...\n    module path.to.module arg1 arg2 ...\n    entrypoint name==0.1.0 console_scripts name arg1 arg2 ...\n\n\nLicense\n=======\n\nThis module is released under the terms of the `Revised BSD License`_.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gvalkov/python-module-launcher", "keywords": "module launcher speedup prefork", "license": "Revised BSD License", "maintainer": null, "maintainer_email": null, "name": "module-launcher", "package_url": "https://pypi.org/project/module-launcher/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/module-launcher/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/gvalkov/python-module-launcher"}, "release_url": "https://pypi.org/project/module-launcher/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Preforks interpreters to reduce script startup time", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Python module launcher<br>----------------------<br><br>This module tries to improve the start-up time of Python scripts. It<br>does so by doing two things:<br><br> - Eliminating the time it takes to spawn a new Python process.<br> - Loading modules ahead of time.<br><br>Eliminating interpreter start-up time is done by maintaining a pool of<br>Python processes. Reducing module load times is done by importing<br>modules immediately after a worker is spawned. Python is smart about<br>not re-importing modules that are already in ``sys.modules``.<br><br>I ended up writing this module because of a few small Qt programs that<br>weren't launching as fast as I would like them too. The results were a<br>~100ms reduction in startup time, which can be attributed to PySide<br>being a hefty package to import.<br><br>There are plenty of bugs and todos left - handling return code and<br>proper process shutdown seem to be on top of the list.<br><br>Usage<br>=====<br><br>::<br><br>    Usage: python-module-launcher-3.3 [-hvdpws] socket [mod, ...]<br><br>    Options:<br>      -h, --help           show this help message and exit<br>      -v, --version        show version and exit<br>      -d, --daemonize      run in background (default: no)<br>      -p, --pidfile        pid file to use if running as a daemon<br>      -w, --workers &lt;num&gt;  worker processes to start (default: 5)<br>      -s, --spare &lt;num&gt;    spare worker processes to maintain (default: 3)<br><br>    Arguments:<br>      socket               path to AF_UNIX socket<br>      mod*                 modules to pre-import in workers<br><br>    Examples:<br>      python-module-launcher-3.3 launcher.sock numpy PySide.QtCore<br><br>      echo -n \"module path.to.module\" | nc -U launcher.sock<br>      echo -n \"file path/to/script.py arg1 arg2 | nc -U launcher.sock<br>      echo -n  \"entrypoint name==0.1.0 console_scripts name arg1 arg2\"<br><br>You can send the following commands to the unix socket::<br><br>    file path/to/script.py arg1 arg2 ...<br>    module path.to.module arg1 arg2 ...<br>    entrypoint name==0.1.0 console_scripts name arg1 arg2 ...<br><br><br>License<br>=======<br><br>This module is released under the terms of the `Revised BSD License`_.\n          </div>"}, "last_serial": 935956, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b57ce61e51fecb172d6bd41f4ede2ad3", "sha256": "08b07c37ce9f6da6288c38f21c5cd4345abbc8a871285d0455ff81f1f0be60ff"}, "downloads": -1, "filename": "module-launcher-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b57ce61e51fecb172d6bd41f4ede2ad3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4364, "upload_time": "2012-09-14T18:46:58", "upload_time_iso_8601": "2012-09-14T18:46:58.043118Z", "url": "https://files.pythonhosted.org/packages/26/6e/58a52f5c7eb84945f01541067a39650f332f6a1a4741222e4cc25b7bd33c/module-launcher-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b4adff31c28cad030cd0e2d9bbbc794d", "sha256": "6cb2d3c5db6e9476da8795a18cd7b1a6d78872190b415f54f5f7d9574b2ea986"}, "downloads": -1, "filename": "module-launcher-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b4adff31c28cad030cd0e2d9bbbc794d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4487, "upload_time": "2013-12-04T16:36:27", "upload_time_iso_8601": "2013-12-04T16:36:27.231336Z", "url": "https://files.pythonhosted.org/packages/6f/58/9681d8e46600d143453614b114afcc9549c9755e0f369010106dbed20c3c/module-launcher-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b4adff31c28cad030cd0e2d9bbbc794d", "sha256": "6cb2d3c5db6e9476da8795a18cd7b1a6d78872190b415f54f5f7d9574b2ea986"}, "downloads": -1, "filename": "module-launcher-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b4adff31c28cad030cd0e2d9bbbc794d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4487, "upload_time": "2013-12-04T16:36:27", "upload_time_iso_8601": "2013-12-04T16:36:27.231336Z", "url": "https://files.pythonhosted.org/packages/6f/58/9681d8e46600d143453614b114afcc9549c9755e0f369010106dbed20c3c/module-launcher-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:43 2020"}