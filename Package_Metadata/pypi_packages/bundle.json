{"info": {"author": "Ask Solem", "author_email": "ask@celeryproject.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Setuptools Plugin", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Installation/Setup", "Topic :: System :: Software Distribution"], "description": "===================================\n Create and manage bundle packages\n===================================\n\n:Version: 1.1.2\n\nSynopsis\n========\n\nA bundle consists of several packages, and can be used as a shortcut in\napplications and libraries requirements lists.\n\nBundles are used to follow a\ncommon group of packages, or a package with an optional extension feature.\n\nThis distribution lets you create bundles, and may also be able to manage\ninstalled bundles in the future.\n\nUsage\n=====\n\nYou can create and upload a bundle to PyPI::\n\n    >>> b = Bundle(\"mybundle\", description=\"Cool bundle\",\n                  version=\"1.0.0\",\n                  requires=[\"pkg1\", \"pkg2>1.3\", \"pkg3\"],\n                  author=\"George Costanza\",\n                  author_email=\"george@vandelay.com\",\n                  url=\"http://vandelay.com\",\n                  license=\"BSD\")\n    >>> b.upload()\n\nNote that this requires a ``.pypirc`` containing your PyPI login information.\n\n\nAs a setuptools plugin\n----------------------\n\nIf you use bundles for extension dependencies then you can use ``setup.py``\nto manage them.\n\nIf you have a library called ``george``, with bundles defined in ``george.bundles``\nlike this::\n\n    from bundle.extensions import Dist\n\n    # version must be a tuple of at least 2 elements,\n    # e.g. (1, 2), or (1, 2, 6).\n    from george import VERSION\n\n    defaults = {\"author\": \"George Costanza\",\n                \"author_email\": \"art@vandelay.com\",\n                \"url\": \"http://vandelay.com\",\n                \"license\": \"BSD\"}\n    george = Dist(\"george\", VERSION, **defaults)\n\n    bundles = [\n        george.Bundle(\"george-with-django\",\n                      \"Bundle installing george and Django\",\n                      requires=['django>=1.2']),\n        george.Bundle(\"george-in-production\",\n                      \"Bundle for george and deps suitable for production\",\n                      requires=[\"celery\", \"psycopg2\", \"ultrajson\"]),\n    ]\n\n\nWith your bundles list you can now tell ``setup.py`` where to find it,\nby adding it to the ``bundle.bundles`` entrypoints.\n\nIn george's ``setup.py`` add::\n\n    setup(\n        ...\n        entry_points = {\n            \"bundle.bundles\": [\"george = george.bundles:bundles\"]\n        },\n    )\n\nAnd then you can manage your bundles with the ``register_bundles``,\n``upload_bundles``, and ``upload_bundles_fix`` setup commands::\n\n    $ python setup.py upload_bundles\n\nNote that you need run ``setup.py develop`` or ``setup.py install``\nfirst, so that the entry points are properly installed before you\nrun bundle commands.  And you need to have your PyPI credentials\nproperly setup in your `~/.pypirc` file.\n\nThe commands are:\n\n:upload_bundles:\n    Uploads bundles to PyPI, but only the bundles for which version\n    has not been uploaded before.\n\n:register_bundles:\n    Register the bundles at PyPI.  ``upload_bundles`` will also\n    register, but this is useful if you only need to change metadata\n    without uploading a new version.\n\n:upload_bundles_fix:\n    Bumps the last version number for all of the bundles\n    and uploads the bundles to PyPI.\n\nInstallation\n============\n\nYou can install `Bundle` either via the Python Package Index (PyPI)\nor from source.\n\nTo install using `pip`,::\n\n    $ pip install bundle\n\nTo install using `easy_install`,::\n\n    $ easy_install bundle\n\nIf you have downloaded a source tarball you can install it\nby doing the following,::\n\n    $ python setup.py build\n    # python setup.py install # as root\n\nGetting Help\n============\n\nBug tracker\n===========\n\nIf you have any suggestions, bug reports or annoyances please report them\nto our issue tracker at http://github.com/ask/bundle/issues/\n\nContributing\n============\n\nDevelopment of `Bundle` happens at Github: http://github.com/ask/bundle\n\nYou are highly encouraged to participate in the development. If you don't\nlike Github (for some reason) you're welcome to send regular patches.\n\nLicense\n=======\n\nThis software is licensed under the `New BSD License`. See the `LICENSE`\nfile in the top distribution directory for the full license text.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/ask/bundle/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "bundle", "package_url": "https://pypi.org/project/bundle/", "platform": "any", "project_url": "https://pypi.org/project/bundle/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/ask/bundle/"}, "release_url": "https://pypi.org/project/bundle/1.1.2/", "requires_dist": null, "requires_python": null, "summary": "Create and manage bundle packages.", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Version:</th>\n<td>1.1.2</td></tr>\n</tbody>\n</table>\n<div id=\"synopsis\">\n<h2>Synopsis</h2>\n<p>A bundle consists of several packages, and can be used as a shortcut in\napplications and libraries requirements lists.</p>\n<p>Bundles are used to follow a\ncommon group of packages, or a package with an optional extension feature.</p>\n<p>This distribution lets you create bundles, and may also be able to manage\ninstalled bundles in the future.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You can create and upload a bundle to PyPI:</p>\n<pre>&gt;&gt;&gt; b = Bundle(\"mybundle\", description=\"Cool bundle\",\n              version=\"1.0.0\",\n              requires=[\"pkg1\", \"pkg2&gt;1.3\", \"pkg3\"],\n              author=\"George Costanza\",\n              author_email=\"george@vandelay.com\",\n              url=\"http://vandelay.com\",\n              license=\"BSD\")\n&gt;&gt;&gt; b.upload()\n</pre>\n<p>Note that this requires a <tt>.pypirc</tt> containing your PyPI login information.</p>\n<div id=\"as-a-setuptools-plugin\">\n<h3>As a setuptools plugin</h3>\n<p>If you use bundles for extension dependencies then you can use <tt>setup.py</tt>\nto manage them.</p>\n<p>If you have a library called <tt>george</tt>, with bundles defined in <tt>george.bundles</tt>\nlike this:</p>\n<pre>from bundle.extensions import Dist\n\n# version must be a tuple of at least 2 elements,\n# e.g. (1, 2), or (1, 2, 6).\nfrom george import VERSION\n\ndefaults = {\"author\": \"George Costanza\",\n            \"author_email\": \"art@vandelay.com\",\n            \"url\": \"http://vandelay.com\",\n            \"license\": \"BSD\"}\ngeorge = Dist(\"george\", VERSION, **defaults)\n\nbundles = [\n    george.Bundle(\"george-with-django\",\n                  \"Bundle installing george and Django\",\n                  requires=['django&gt;=1.2']),\n    george.Bundle(\"george-in-production\",\n                  \"Bundle for george and deps suitable for production\",\n                  requires=[\"celery\", \"psycopg2\", \"ultrajson\"]),\n]\n</pre>\n<p>With your bundles list you can now tell <tt>setup.py</tt> where to find it,\nby adding it to the <tt>bundle.bundles</tt> entrypoints.</p>\n<p>In george\u2019s <tt>setup.py</tt> add:</p>\n<pre>setup(\n    ...\n    entry_points = {\n        \"bundle.bundles\": [\"george = george.bundles:bundles\"]\n    },\n)\n</pre>\n<p>And then you can manage your bundles with the <tt>register_bundles</tt>,\n<tt>upload_bundles</tt>, and <tt>upload_bundles_fix</tt> setup commands:</p>\n<pre>$ python setup.py upload_bundles\n</pre>\n<p>Note that you need run <tt>setup.py develop</tt> or <tt>setup.py install</tt>\nfirst, so that the entry points are properly installed before you\nrun bundle commands.  And you need to have your PyPI credentials\nproperly setup in your <cite>~/.pypirc</cite> file.</p>\n<p>The commands are:</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>upload_bundles:</th><td>Uploads bundles to PyPI, but only the bundles for which version\nhas not been uploaded before.</td>\n</tr>\n<tr><th>register_bundles:</th></tr>\n<tr><td>\u00a0</td><td>Register the bundles at PyPI.  <tt>upload_bundles</tt> will also\nregister, but this is useful if you only need to change metadata\nwithout uploading a new version.</td>\n</tr>\n<tr><th>upload_bundles_fix:</th></tr>\n<tr><td>\u00a0</td><td>Bumps the last version number for all of the bundles\nand uploads the bundles to PyPI.</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <cite>Bundle</cite> either via the Python Package Index (PyPI)\nor from source.</p>\n<p>To install using <cite>pip</cite>,:</p>\n<pre>$ pip install bundle\n</pre>\n<p>To install using <cite>easy_install</cite>,:</p>\n<pre>$ easy_install bundle\n</pre>\n<p>If you have downloaded a source tarball you can install it\nby doing the following,:</p>\n<pre>$ python setup.py build\n# python setup.py install # as root\n</pre>\n</div>\n<div id=\"getting-help\">\n<h2>Getting Help</h2>\n</div>\n<div id=\"bug-tracker\">\n<h2>Bug tracker</h2>\n<p>If you have any suggestions, bug reports or annoyances please report them\nto our issue tracker at <a href=\"http://github.com/ask/bundle/issues/\" rel=\"nofollow\">http://github.com/ask/bundle/issues/</a></p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Development of <cite>Bundle</cite> happens at Github: <a href=\"http://github.com/ask/bundle\" rel=\"nofollow\">http://github.com/ask/bundle</a></p>\n<p>You are highly encouraged to participate in the development. If you don\u2019t\nlike Github (for some reason) you\u2019re welcome to send regular patches.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This software is licensed under the <cite>New BSD License</cite>. See the <cite>LICENSE</cite>\nfile in the top distribution directory for the full license text.</p>\n</div>\n\n          </div>"}, "last_serial": 667678, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "8eea496b85b8c3dbfa5fb8eef8335478", "sha256": "55c6fede63bf333b963fbf2ffe372fb1f04fc60f7a4dc153f81320db25dfa478"}, "downloads": -1, "filename": "bundle-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8eea496b85b8c3dbfa5fb8eef8335478", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4460, "upload_time": "2011-11-29T23:55:51", "upload_time_iso_8601": "2011-11-29T23:55:51.893794Z", "url": "https://files.pythonhosted.org/packages/15/ef/b0f2aa72ba763348e0584b0037768d666313d31425728efda5aa94a89cd1/bundle-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "c283369fffc7ae9a8e62da3be24fd7bd", "sha256": "7949af91247314b2b2b41b0de5658edc5fe7c8578ede5ad844a3dcd18a208177"}, "downloads": -1, "filename": "bundle-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c283369fffc7ae9a8e62da3be24fd7bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7091, "upload_time": "2011-12-01T19:23:24", "upload_time_iso_8601": "2011-12-01T19:23:24.565502Z", "url": "https://files.pythonhosted.org/packages/60/f1/535b32109411f323fee69d5b885119c678313fe1ca8bb1f4c4b914b06844/bundle-1.0.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "bc78e1b7841166a42abfe841efc08960", "sha256": "1d486e56fbe504803cc7f794ce3d46d9f14692d13e5fd478b91ba36510007603"}, "downloads": -1, "filename": "bundle-1.1.1.tar.gz", "has_sig": false, "md5_digest": "bc78e1b7841166a42abfe841efc08960", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9849, "upload_time": "2011-12-02T16:10:38", "upload_time_iso_8601": "2011-12-02T16:10:38.629558Z", "url": "https://files.pythonhosted.org/packages/61/d9/9dcba74577ea9813e4d0921f883cff0df871a527cff8fb8084856d9612dd/bundle-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "fae483c4a36bb3554faf4b54cab7af62", "sha256": "e0212778fe83ade02e12eea2f888aa1da253b9b1910314861bc59e7a157036f4"}, "downloads": -1, "filename": "bundle-1.1.2.tar.gz", "has_sig": false, "md5_digest": "fae483c4a36bb3554faf4b54cab7af62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9900, "upload_time": "2012-01-13T14:54:28", "upload_time_iso_8601": "2012-01-13T14:54:28.082450Z", "url": "https://files.pythonhosted.org/packages/78/4c/c4aebdc888d7645faa0ffb8f3217283606af06db855d5fffad697e544b8b/bundle-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fae483c4a36bb3554faf4b54cab7af62", "sha256": "e0212778fe83ade02e12eea2f888aa1da253b9b1910314861bc59e7a157036f4"}, "downloads": -1, "filename": "bundle-1.1.2.tar.gz", "has_sig": false, "md5_digest": "fae483c4a36bb3554faf4b54cab7af62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9900, "upload_time": "2012-01-13T14:54:28", "upload_time_iso_8601": "2012-01-13T14:54:28.082450Z", "url": "https://files.pythonhosted.org/packages/78/4c/c4aebdc888d7645faa0ffb8f3217283606af06db855d5fffad697e544b8b/bundle-1.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:59 2020"}