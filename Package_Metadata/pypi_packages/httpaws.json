{"info": {"author": "Todd Leonhardt", "author_email": "todd.leonhardt@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development", "Topic :: System :: Networking", "Topic :: Terminals", "Topic :: Text Processing", "Topic :: Utilities"], "description": "# httpAWS: a command line HTTP tool for AWS Services\n\nhttpAWS is a command line HTTP client for AWS services. Its goal is to make CLI interaction with AWS web services as\nhuman-friendly as possible. It provides a simple ``httpaws`` command that allows for sending HTTP requests to AWS\nservices using a simple and natural syntax, and displays colorized output. httpAWS can be used for testing, debugging,\nand generally interacting direly with AWS services with HTTP requests.\n\nhttpAWS directly makes HTTP calls to AWS service endpoints using the [requests](http://docs.python-requests.org) and\n[aws-requests-auth](https://github.com/DavidMuller/aws-requests-auth) modules.\n\nThis is a low-level command-line tool intended for use by developers so that they can easily make direct HTTP calls\nto AWS services.  It is effectively a command-line programmatic replacement for using a graphical tool like\n[Postman](https://www.getpostman.com) and was inspired by tools like [HTTPie](https://httpie.org) but is specific to\nAWS services.\n\n[![Latest Version](https://img.shields.io/pypi/v/httpaws.svg?style=flat-square&label=latest%20stable%20version)](https://pypi.python.org/pypi/httpaws/)\n\n# Main features\n\n* Expressive and intuitive syntax\n* Formatted and colorized terminal output\n* Built-in XML support\n* Python 2.7 and 3.x support\n* Linux, macOS and Windows support\n\n# Installation\n\nA universal installation method (that works on Windows, Mac OS X, Linux, \u2026,\nand always provides the latest version) is to use [pip](https://pip.pypa.io/en/stable/installing/):\n\n```bash\n# Make sure we have an up-to-date version of pip and setuptools:\n$ pip install --upgrade pip setuptools\n\n$ pip install --upgrade httpaws\n```\n\n(If ``pip`` installation fails for some reason, you can try ``easy_install httpaws`` as a fallback.)\n\n## Python version\n\nAlthough Python 2.7 is supported as well, it is strongly recommended to\ninstall httpAWS against the latest Python 3.x whenever possible. That will\nensure that some of the newer HTTP features, such as\n*SNI (Server Name Indication)*, work out of the box.\nPython 3 is the default for Homebrew installations starting with version 0.9.4.\n\n## Unstable version\n\nYou can also install the latest unreleased development version directly from\nthe ``master`` branch on GitHub.  It is a work-in-progress of a future stable\nrelease so the experience might be not as smooth.\n\n```bash\n$ pip install -U https://github.com/http-aws/http-aws/archive/master.tar.gz\n```\n\nUsage\n=====\n\nHello World:\n\n```bash\n$ httpaws -s ec2 DescribeVpcs\n```\n\nSynopsis:\n\n```bash\n$ httpaws [flags] <API>\n```\n\nSee also ``httpaws -h`` for detailed help:\n\n```bash\n$ httpaws -h\nusage: httpaws [-h] [-r REGION] [-s SERVICE] [-e ENDPOINT] [-c CREDS]\n               [-v VERSION] [-p] [-w]\n               api\n\nhttpaws v0.0.2: A CLI HTTP client for AWS services with syntax highlighting\n\npositional arguments:\n  api                   name of the API to call - e.g. \"DescribeVpcs\"\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r REGION, --region REGION\n                        AWS region. Overrides config/env - e.g. us-east-1\n  -s SERVICE, --service SERVICE\n                        AWS service - e.g. ec2, s3, etc.\n  -e ENDPOINT, --endpoint ENDPOINT\n                        override command's default URL with the given URL -\n                        e.g. ec2.us-east-1.amazonaws.com\n  -c CREDS, --creds CREDS\n                        override AWS Access Key Id and AWS Secret Access Key -\n                        i.e. <Access_Key>:<Secret_Key>\n  -v VERSION, --version VERSION\n                        API version to use for the service\n  -p, --paginate        paginate long output\n  -w, --wrap            wrap long lines in paginated output (instead of chop)\n\nSee the AWS Documentation for API references for each service:\nhttps://docs.aws.amazon.com\n```\n\n# Authentication\n\nThe currently supported authentication scheme is provided by the\n[aws-requests-auth](https://github.com/DavidMuller/aws-requests-auth) Python module. The two modes are are Automatic\nand Manual. There is one flag that controls authentication:\n\n| Flag        | Description |\n| ----------- | ----------- |\n| -c/--creds  | Pass a ``<AWS_Access_Key_Id>:<AWS_Secret_Access_Key>`` pair as the argument |\n\n## Automatic auth\n\nIf the ``-c`` flag is not provided, then httpAWS will attempt to automatically gather your AWS credentials using\n``botocore``.\n\n```bash\n$ httpaws DescribeVpcs\n```\n\n## Manual auth\n\n```bash\n$ http -c <Access_Key>:<Secret_Key> DescribeVpcs\n```\n\n# HTTP redirects\n\nHTTP redirects are not followed and only the first esponse is shown.\n\n# Output options\n\nAt this time, httpAWS only outputs the final response and the whole response\nmessage is printed (headers as well as the body).\n\n# Terminal output\n\nhttpAWS does several things by default in order to make its terminal output\neasy to read.\n\n\n## Colors and formatting\n\nSyntax highlighting is applied to HTTP headers bodies (where it makes\nsense).\n\nAlso, the following formatting is applied:\n\n* XML data is indented and unicode escapes are converted to the characters they represent.\n\n# Redirected output\n\nBy default, httpAWS sends all output to ``stdout``.\n\nThe reason is to make piping httpAWS's output to other programs work with no extra flags. Most of the time, only the raw\nresponse body is of an interest when the output is redirected.\n\nForce colorizing and formatting, and show both the request and the response in\n``less`` pager:\n\n```bash\n$ httpaws -p DescribeVpcs\n```\n\nThe ``-p`` flag tells httpAWS to pipe the output to ``less`` and to interpret color escape sequences included\nhttpAWS`s output.\n\n\n## Piping output\n\nYou can also redirect the response body to another program:\n\n```bash\n$ httpaws -s s3 List |  grep \"MagnumOpus.txt\"\n```\n\n# Responses\n\nResponses are downloaded synchronously and printed when the download is complete which is convenient for formatting and\ncoloring moderate sized responses.  However, if you want to download large files without using too much memory, this isn't\nthe tool you are looking for.\n\n# Sessions\n\nAt this time every request httpAWS makes is completely independent of any previous ones to the same host and httpAWS \ndoes not support persistent sessions.\n\n# Config\n\nhttpAWS uses the same config files as used by the ``aws cli``.\n\n## Config file location\n\nThe default location of the configuration files are ``~/.aws/config`` and ``~/.aws/credentials``.\n\n## Configurable options\n\nThe default AWS region is read from the ``config`` file, while the default AWS access and secret keys are read from the\n``credentials`` file.\n\n## Best practices\n\nThe ``-p`` option for paginating long output is excellent when a human is reading this output, but\nis not typically desirable during non-interactive invocations. You most likely do not want to use\nuse the ``-p`` option when httpAWS is invoke from example form a cron job.  Also, if you wnat to redirect or\npipe the output of httpAWS, the ``-p`` flag should also be avoided.\n\n# Meta\n\n## User support\n\nPlease use the following support channels:\n\n* [GitHub issues](https://github.com/http-aws/http-aws/issues)\n    * for bug reports, feature requests, and to ask questions\n* [GitHub pull requests](https://github.com/http-aws/http-aws/pulls)\n    * for bug fixes and feature submissions\n\n## Related projects\n\n### Dependencies\n\nUnder the hood, httpAWS uses these amazing libraries:\n\n* [Requests](http://python-requests.org)\n    * Python HTTP library for humans\n* [aws-requests-auth](https://github.com/DavidMuller/aws-requests-auth)\n    * AWS signature version 4 signing process for the Python requests module\n* [botocore](https://github.com/boto/botocore)\n    * The low-level, core functionality of boto 3 (the official AWS Python SDK)\n* [Pygments](http://pygments.org)\n    * Python syntax highlighter\n* [Colorama](https://github.com/tartley/colorama)\n    * Simple cross-platform colored terminal text in Python\n* [lxml](https://lxml.de)\n    * XML with Python\n\n### Alternatives\n\n* [HTTPie](https://httpie.org)\n    * an awesome and much more feature rich HTTP CLI that isn't specific to AWS\n* [curl](https://curl.haxx.se)\n    * a \"Swiss army knife\" command line tool and library for transferring data with URLs\n\n### Warning\n\nThis tool is intended for development and educational purposes.  It is NOT intended for robust and reliable\nadministration of AWS services.  For interaction with production AWS services, it is highly recommended that you use\nan officially supported tool specifically designed for that purpose such as any of the following:\n\n* [AWS Console](https://aws.amazon.com/console)\n* [AWS CLI](https://aws.amazon.com/cli)\n* [AWS Shell](https://github.com/awslabs/aws-shell)\n* [AWS SDK for Python (boto3)](https://aws.amazon.com/sdk-for-python)\n\n## Contributing\n\nSee [CONTRIBUTING.md](https://github.com/http-aws/http-aws/blob/master/CONTRIBUTING.md)\n\n## Change log\n\nSee [CHANGELOG.md](https://github.com/http-aws/http-aws/blob/master/CHANGELOG.md)\n\n## Licence\n\nApache 2.0: [LICENSE](https://github.com/http-aws/http-aws/blob/master/LICENSE)\n\n## Authors\n\n[Todd Leonhardt](https://github.com/tleonhardt) created httpaws and \n[these fine people](https://github.com/http-aws/http-aws/graphs/contributors) have contributed.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/http-aws/http-aws", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/http-aws/http-aws", "keywords": "http cli aws", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "httpaws", "package_url": "https://pypi.org/project/httpaws/", "platform": "any", "project_url": "https://pypi.org/project/httpaws/", "project_urls": {"Download": "https://github.com/http-aws/http-aws", "Homepage": "https://github.com/http-aws/http-aws"}, "release_url": "https://pypi.org/project/httpaws/0.0.4/", "requires_dist": ["requests (>=2.19.0)", "aws-requests-auth (>=0.4.0)", "botocore (>=1.12.0)", "colorama (>=0.3.0)", "pygments (>=2.3.0)", "lxml (>=4.0.0)"], "requires_python": ">=2.7", "summary": "httpAWS - a CLI, cURL-like tool for AWS services.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>httpAWS: a command line HTTP tool for AWS Services</h1>\n<p>httpAWS is a command line HTTP client for AWS services. Its goal is to make CLI interaction with AWS web services as\nhuman-friendly as possible. It provides a simple <code>httpaws</code> command that allows for sending HTTP requests to AWS\nservices using a simple and natural syntax, and displays colorized output. httpAWS can be used for testing, debugging,\nand generally interacting direly with AWS services with HTTP requests.</p>\n<p>httpAWS directly makes HTTP calls to AWS service endpoints using the <a href=\"http://docs.python-requests.org\" rel=\"nofollow\">requests</a> and\n<a href=\"https://github.com/DavidMuller/aws-requests-auth\" rel=\"nofollow\">aws-requests-auth</a> modules.</p>\n<p>This is a low-level command-line tool intended for use by developers so that they can easily make direct HTTP calls\nto AWS services.  It is effectively a command-line programmatic replacement for using a graphical tool like\n<a href=\"https://www.getpostman.com\" rel=\"nofollow\">Postman</a> and was inspired by tools like <a href=\"https://httpie.org\" rel=\"nofollow\">HTTPie</a> but is specific to\nAWS services.</p>\n<p><a href=\"https://pypi.python.org/pypi/httpaws/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f8c3cbac8667ba1f7dbbf81d0ba0c0c3b41b3e2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f687474706177732e7376673f7374796c653d666c61742d737175617265266c6162656c3d6c6174657374253230737461626c6525323076657273696f6e\"></a></p>\n<h1>Main features</h1>\n<ul>\n<li>Expressive and intuitive syntax</li>\n<li>Formatted and colorized terminal output</li>\n<li>Built-in XML support</li>\n<li>Python 2.7 and 3.x support</li>\n<li>Linux, macOS and Windows support</li>\n</ul>\n<h1>Installation</h1>\n<p>A universal installation method (that works on Windows, Mac OS X, Linux, \u2026,\nand always provides the latest version) is to use <a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">pip</a>:</p>\n<pre><span class=\"c1\"># Make sure we have an up-to-date version of pip and setuptools:</span>\n$ pip install --upgrade pip setuptools\n\n$ pip install --upgrade httpaws\n</pre>\n<p>(If <code>pip</code> installation fails for some reason, you can try <code>easy_install httpaws</code> as a fallback.)</p>\n<h2>Python version</h2>\n<p>Although Python 2.7 is supported as well, it is strongly recommended to\ninstall httpAWS against the latest Python 3.x whenever possible. That will\nensure that some of the newer HTTP features, such as\n<em>SNI (Server Name Indication)</em>, work out of the box.\nPython 3 is the default for Homebrew installations starting with version 0.9.4.</p>\n<h2>Unstable version</h2>\n<p>You can also install the latest unreleased development version directly from\nthe <code>master</code> branch on GitHub.  It is a work-in-progress of a future stable\nrelease so the experience might be not as smooth.</p>\n<pre>$ pip install -U https://github.com/http-aws/http-aws/archive/master.tar.gz\n</pre>\n<h1>Usage</h1>\n<p>Hello World:</p>\n<pre>$ httpaws -s ec2 DescribeVpcs\n</pre>\n<p>Synopsis:</p>\n<pre>$ httpaws <span class=\"o\">[</span>flags<span class=\"o\">]</span> &lt;API&gt;\n</pre>\n<p>See also <code>httpaws -h</code> for detailed help:</p>\n<pre>$ httpaws -h\nusage: httpaws <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-r REGION<span class=\"o\">]</span> <span class=\"o\">[</span>-s SERVICE<span class=\"o\">]</span> <span class=\"o\">[</span>-e ENDPOINT<span class=\"o\">]</span> <span class=\"o\">[</span>-c CREDS<span class=\"o\">]</span>\n               <span class=\"o\">[</span>-v VERSION<span class=\"o\">]</span> <span class=\"o\">[</span>-p<span class=\"o\">]</span> <span class=\"o\">[</span>-w<span class=\"o\">]</span>\n               api\n\nhttpaws v0.0.2: A CLI HTTP client <span class=\"k\">for</span> AWS services with syntax highlighting\n\npositional arguments:\n  api                   name of the API to call - e.g. <span class=\"s2\">\"DescribeVpcs\"</span>\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -r REGION, --region REGION\n                        AWS region. Overrides config/env - e.g. us-east-1\n  -s SERVICE, --service SERVICE\n                        AWS service - e.g. ec2, s3, etc.\n  -e ENDPOINT, --endpoint ENDPOINT\n                        override command<span class=\"err\">'</span>s default URL with the given URL -\n                        e.g. ec2.us-east-1.amazonaws.com\n  -c CREDS, --creds CREDS\n                        override AWS Access Key Id and AWS Secret Access Key -\n                        i.e. &lt;Access_Key&gt;:&lt;Secret_Key&gt;\n  -v VERSION, --version VERSION\n                        API version to use <span class=\"k\">for</span> the service\n  -p, --paginate        paginate long output\n  -w, --wrap            wrap long lines in paginated output <span class=\"o\">(</span>instead of chop<span class=\"o\">)</span>\n\nSee the AWS Documentation <span class=\"k\">for</span> API references <span class=\"k\">for</span> each service:\nhttps://docs.aws.amazon.com\n</pre>\n<h1>Authentication</h1>\n<p>The currently supported authentication scheme is provided by the\n<a href=\"https://github.com/DavidMuller/aws-requests-auth\" rel=\"nofollow\">aws-requests-auth</a> Python module. The two modes are are Automatic\nand Manual. There is one flag that controls authentication:</p>\n<table>\n<thead>\n<tr>\n<th>Flag</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-c/--creds</td>\n<td>Pass a <code>&lt;AWS_Access_Key_Id&gt;:&lt;AWS_Secret_Access_Key&gt;</code> pair as the argument</td>\n</tr></tbody></table>\n<h2>Automatic auth</h2>\n<p>If the <code>-c</code> flag is not provided, then httpAWS will attempt to automatically gather your AWS credentials using\n<code>botocore</code>.</p>\n<pre>$ httpaws DescribeVpcs\n</pre>\n<h2>Manual auth</h2>\n<pre>$ http -c &lt;Access_Key&gt;:&lt;Secret_Key&gt; DescribeVpcs\n</pre>\n<h1>HTTP redirects</h1>\n<p>HTTP redirects are not followed and only the first esponse is shown.</p>\n<h1>Output options</h1>\n<p>At this time, httpAWS only outputs the final response and the whole response\nmessage is printed (headers as well as the body).</p>\n<h1>Terminal output</h1>\n<p>httpAWS does several things by default in order to make its terminal output\neasy to read.</p>\n<h2>Colors and formatting</h2>\n<p>Syntax highlighting is applied to HTTP headers bodies (where it makes\nsense).</p>\n<p>Also, the following formatting is applied:</p>\n<ul>\n<li>XML data is indented and unicode escapes are converted to the characters they represent.</li>\n</ul>\n<h1>Redirected output</h1>\n<p>By default, httpAWS sends all output to <code>stdout</code>.</p>\n<p>The reason is to make piping httpAWS's output to other programs work with no extra flags. Most of the time, only the raw\nresponse body is of an interest when the output is redirected.</p>\n<p>Force colorizing and formatting, and show both the request and the response in\n<code>less</code> pager:</p>\n<pre>$ httpaws -p DescribeVpcs\n</pre>\n<p>The <code>-p</code> flag tells httpAWS to pipe the output to <code>less</code> and to interpret color escape sequences included\nhttpAWS`s output.</p>\n<h2>Piping output</h2>\n<p>You can also redirect the response body to another program:</p>\n<pre>$ httpaws -s s3 List <span class=\"p\">|</span>  grep <span class=\"s2\">\"MagnumOpus.txt\"</span>\n</pre>\n<h1>Responses</h1>\n<p>Responses are downloaded synchronously and printed when the download is complete which is convenient for formatting and\ncoloring moderate sized responses.  However, if you want to download large files without using too much memory, this isn't\nthe tool you are looking for.</p>\n<h1>Sessions</h1>\n<p>At this time every request httpAWS makes is completely independent of any previous ones to the same host and httpAWS\ndoes not support persistent sessions.</p>\n<h1>Config</h1>\n<p>httpAWS uses the same config files as used by the <code>aws cli</code>.</p>\n<h2>Config file location</h2>\n<p>The default location of the configuration files are <code>~/.aws/config</code> and <code>~/.aws/credentials</code>.</p>\n<h2>Configurable options</h2>\n<p>The default AWS region is read from the <code>config</code> file, while the default AWS access and secret keys are read from the\n<code>credentials</code> file.</p>\n<h2>Best practices</h2>\n<p>The <code>-p</code> option for paginating long output is excellent when a human is reading this output, but\nis not typically desirable during non-interactive invocations. You most likely do not want to use\nuse the <code>-p</code> option when httpAWS is invoke from example form a cron job.  Also, if you wnat to redirect or\npipe the output of httpAWS, the <code>-p</code> flag should also be avoided.</p>\n<h1>Meta</h1>\n<h2>User support</h2>\n<p>Please use the following support channels:</p>\n<ul>\n<li><a href=\"https://github.com/http-aws/http-aws/issues\" rel=\"nofollow\">GitHub issues</a>\n<ul>\n<li>for bug reports, feature requests, and to ask questions</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/http-aws/http-aws/pulls\" rel=\"nofollow\">GitHub pull requests</a>\n<ul>\n<li>for bug fixes and feature submissions</li>\n</ul>\n</li>\n</ul>\n<h2>Related projects</h2>\n<h3>Dependencies</h3>\n<p>Under the hood, httpAWS uses these amazing libraries:</p>\n<ul>\n<li><a href=\"http://python-requests.org\" rel=\"nofollow\">Requests</a>\n<ul>\n<li>Python HTTP library for humans</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/DavidMuller/aws-requests-auth\" rel=\"nofollow\">aws-requests-auth</a>\n<ul>\n<li>AWS signature version 4 signing process for the Python requests module</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/boto/botocore\" rel=\"nofollow\">botocore</a>\n<ul>\n<li>The low-level, core functionality of boto 3 (the official AWS Python SDK)</li>\n</ul>\n</li>\n<li><a href=\"http://pygments.org\" rel=\"nofollow\">Pygments</a>\n<ul>\n<li>Python syntax highlighter</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/tartley/colorama\" rel=\"nofollow\">Colorama</a>\n<ul>\n<li>Simple cross-platform colored terminal text in Python</li>\n</ul>\n</li>\n<li><a href=\"https://lxml.de\" rel=\"nofollow\">lxml</a>\n<ul>\n<li>XML with Python</li>\n</ul>\n</li>\n</ul>\n<h3>Alternatives</h3>\n<ul>\n<li><a href=\"https://httpie.org\" rel=\"nofollow\">HTTPie</a>\n<ul>\n<li>an awesome and much more feature rich HTTP CLI that isn't specific to AWS</li>\n</ul>\n</li>\n<li><a href=\"https://curl.haxx.se\" rel=\"nofollow\">curl</a>\n<ul>\n<li>a \"Swiss army knife\" command line tool and library for transferring data with URLs</li>\n</ul>\n</li>\n</ul>\n<h3>Warning</h3>\n<p>This tool is intended for development and educational purposes.  It is NOT intended for robust and reliable\nadministration of AWS services.  For interaction with production AWS services, it is highly recommended that you use\nan officially supported tool specifically designed for that purpose such as any of the following:</p>\n<ul>\n<li><a href=\"https://aws.amazon.com/console\" rel=\"nofollow\">AWS Console</a></li>\n<li><a href=\"https://aws.amazon.com/cli\" rel=\"nofollow\">AWS CLI</a></li>\n<li><a href=\"https://github.com/awslabs/aws-shell\" rel=\"nofollow\">AWS Shell</a></li>\n<li><a href=\"https://aws.amazon.com/sdk-for-python\" rel=\"nofollow\">AWS SDK for Python (boto3)</a></li>\n</ul>\n<h2>Contributing</h2>\n<p>See <a href=\"https://github.com/http-aws/http-aws/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a></p>\n<h2>Change log</h2>\n<p>See <a href=\"https://github.com/http-aws/http-aws/blob/master/CHANGELOG.md\" rel=\"nofollow\">CHANGELOG.md</a></p>\n<h2>Licence</h2>\n<p>Apache 2.0: <a href=\"https://github.com/http-aws/http-aws/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a></p>\n<h2>Authors</h2>\n<p><a href=\"https://github.com/tleonhardt\" rel=\"nofollow\">Todd Leonhardt</a> created httpaws and\n<a href=\"https://github.com/http-aws/http-aws/graphs/contributors\" rel=\"nofollow\">these fine people</a> have contributed.</p>\n\n          </div>"}, "last_serial": 4949505, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4d8b4670f950436a9a2bf653baae7dd7", "sha256": "516e3c7bc7d997d39b2a8b918ae4bdf51883c86c141a7abd9351c1bf5963d491"}, "downloads": -1, "filename": "httpaws-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4d8b4670f950436a9a2bf653baae7dd7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12390, "upload_time": "2019-03-16T18:46:10", "upload_time_iso_8601": "2019-03-16T18:46:10.693352Z", "url": "https://files.pythonhosted.org/packages/f9/76/7b20785a0f877d4294b0a84a458ba3f168b7214b7418fe2b179596b04338/httpaws-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f383e8c13a0ba9b1745b9986e8b3373", "sha256": "2360da21f39df680d2abcf46be0a96d602d356dfb5e03371c6803e3a9f89b1e9"}, "downloads": -1, "filename": "httpaws-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5f383e8c13a0ba9b1745b9986e8b3373", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13648, "upload_time": "2019-03-16T18:46:12", "upload_time_iso_8601": "2019-03-16T18:46:12.505999Z", "url": "https://files.pythonhosted.org/packages/38/1a/b4942f18d3a7eee01e2a22458365b9d4f7e13dfcfb4c070eec445b9a1bcb/httpaws-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8e6d130eb111e9d48b3f768c8b18154b", "sha256": "90b81f9f975db2e1a32987b8c7bf8b39a041a602ad443a0d6bd0bf327ab0d547"}, "downloads": -1, "filename": "httpaws-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8e6d130eb111e9d48b3f768c8b18154b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 14021, "upload_time": "2019-03-17T04:03:59", "upload_time_iso_8601": "2019-03-17T04:03:59.516399Z", "url": "https://files.pythonhosted.org/packages/72/3b/3406b3f1a11c034cac7bbc28e7c7f2f4bb723e8ad3ce1fedb9c01b105d0a/httpaws-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0da1cb410af5ac1d483cbe380e68601", "sha256": "1259cc6d923d0fa6a1a1429c44bfef4e71e94d498ea5b26338f711e7e82b9eac"}, "downloads": -1, "filename": "httpaws-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f0da1cb410af5ac1d483cbe380e68601", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 27233, "upload_time": "2019-03-17T04:04:00", "upload_time_iso_8601": "2019-03-17T04:04:00.473035Z", "url": "https://files.pythonhosted.org/packages/63/d8/d9dc6b63a6defb78f1a300751ea22cb1e2c2329e67ae35d8d7f56464b67b/httpaws-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ae0be33f9cecaae0b170b80be648482e", "sha256": "2d32f55392559efd068f6311fbf97acd022568f476b1df42915ca5003d297d00"}, "downloads": -1, "filename": "httpaws-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ae0be33f9cecaae0b170b80be648482e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 13827, "upload_time": "2019-03-17T04:53:06", "upload_time_iso_8601": "2019-03-17T04:53:06.305243Z", "url": "https://files.pythonhosted.org/packages/f2/c3/dd8888e99d4ea8121519a0e408e425b11fd0b197c4336c22a1b237a65325/httpaws-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0da357a9e1e225feb4c810073a86dc2", "sha256": "b04a1783ccfdcd54651d289196fb463f1e393c3b9bfab3d6d34fa6ffb1f6d6d9"}, "downloads": -1, "filename": "httpaws-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a0da357a9e1e225feb4c810073a86dc2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 26795, "upload_time": "2019-03-17T04:53:07", "upload_time_iso_8601": "2019-03-17T04:53:07.597617Z", "url": "https://files.pythonhosted.org/packages/82/ba/265a7fe821a3b4502fc0bbfe2d3da06e0d836643471c109b894115fc1776/httpaws-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "f6d6858d568e9c7f864c99cc27bd13e3", "sha256": "aff58e69c2f6e9b6219d9228dabc60125c97941c4b12ffe256e62fd95d8b79c6"}, "downloads": -1, "filename": "httpaws-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f6d6858d568e9c7f864c99cc27bd13e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 13847, "upload_time": "2019-03-17T05:01:32", "upload_time_iso_8601": "2019-03-17T05:01:32.399715Z", "url": "https://files.pythonhosted.org/packages/2d/01/c864a14481f3faadd188b8de737181cbd4984a0c301ee8cc006b6d59630d/httpaws-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e418afa1da2c8877b3b250b348571bd", "sha256": "5e4c554d7c740a8fecee154c45856fc4f498ef02a92296257785f0f779560f67"}, "downloads": -1, "filename": "httpaws-0.0.4.tar.gz", "has_sig": false, "md5_digest": "9e418afa1da2c8877b3b250b348571bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 26881, "upload_time": "2019-03-17T05:01:33", "upload_time_iso_8601": "2019-03-17T05:01:33.714260Z", "url": "https://files.pythonhosted.org/packages/af/23/5d55b407075999765e1b862670fde8bc4846f39d6d49d900924796ae130d/httpaws-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f6d6858d568e9c7f864c99cc27bd13e3", "sha256": "aff58e69c2f6e9b6219d9228dabc60125c97941c4b12ffe256e62fd95d8b79c6"}, "downloads": -1, "filename": "httpaws-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f6d6858d568e9c7f864c99cc27bd13e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 13847, "upload_time": "2019-03-17T05:01:32", "upload_time_iso_8601": "2019-03-17T05:01:32.399715Z", "url": "https://files.pythonhosted.org/packages/2d/01/c864a14481f3faadd188b8de737181cbd4984a0c301ee8cc006b6d59630d/httpaws-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e418afa1da2c8877b3b250b348571bd", "sha256": "5e4c554d7c740a8fecee154c45856fc4f498ef02a92296257785f0f779560f67"}, "downloads": -1, "filename": "httpaws-0.0.4.tar.gz", "has_sig": false, "md5_digest": "9e418afa1da2c8877b3b250b348571bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 26881, "upload_time": "2019-03-17T05:01:33", "upload_time_iso_8601": "2019-03-17T05:01:33.714260Z", "url": "https://files.pythonhosted.org/packages/af/23/5d55b407075999765e1b862670fde8bc4846f39d6d49d900924796ae130d/httpaws-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:10 2020"}