{"info": {"author": "Thomas Minier", "author_email": "thomas.minier@univ-nantes.fr", "bugtrack_url": null, "classifiers": [], "description": "pyOTTR\n======\n\nManipulate `OTTR Reasonable Ontology Templates`_ in Python.\n\n`Package documentation`_\n\n`OTTR documentation`_\n\n**Supported features:**\n\n* `Definition and execution of templates`_ in the `stOTTR syntax`_\n* `Nesting templates`_\n* `Type checking`_\n* `Non blank`_, `Optional`_ and `default values`_ for template parameters.\n* *RDF and RDFS templates* from the `OTTR template library`_ are loaded by default.\n\n\n**In development:**\n\n* `Expansion modes`_\n* Support for `OWL templates`_ from the template library\n\n\nInstallation\n============\n\nUsing pip (recommended)\n-----------------------\n\n::\n\n   pip install ottr\n\nManual installation\n-------------------\n\n::\n\n   git clone\n   cd pyOTTR/\n   python setup.py install\n\nGetting started\n===============\n\nThe main class to manipulate is ``OttrGenerator``, which is used to load\nOTTR templates and expand template instances. So, in practice, you only\nneed to create a new generator, load some templates and then execute\nyour instances to produce RDF triples.\n\nBy default, **all templates** from the `OTTR template\nlibrary <http://tpl.ottr.xyz/>`__ are loaded when the generator is\ncreated.\n\n.. code:: python\n\n     from ottr import OttrGenerator\n     # An OttrGenerator is used to load templates and expand instances\n     generator = OttrGenerator()\n\n     # Load a simple OTTR template definition\n     generator.load_templates(\"\"\"\n       @prefix ex: <http://example.org#>.\n\n       ex:FirstName [ottr:IRI ?uri, ?firstName] :: {\n         ottr:Triple (?uri, foaf:firstName, ?firstName )\n       } .\n\n       ex:Person[ ?firstName ] :: {\n         ottr:Triple (_:person, rdf:type, foaf:Person ),\n         ex:FirstName (_:person, ?firstName)\n       } .\n     \"\"\")\n\n     # Parse and prepare an instance for execution\n     instances = generator.instanciate(\"\"\"\n       @prefix ex: <http://example.org#>.\n\n       ex:Person(\"Ann\").\n     \"\"\")\n\n     # Execute the instance, which yield RDF triples\n     # The following prints (_:person0, rdf:type, foaf:Person) and (_:person0, foaf:firstName, \"Ann\")\n     for s, p, o in instances.execute(as_nt=True):\n       print(\"# ----- RDF triple ----- #\")\n       print((s, p, o)\n\n.. _OTTR Reasonable Ontology Templates: http://ottr.xyz/\n.. _Package documentation: https://callidon.github.io/pyOTTR\n.. _OTTR documentation: http://ottr.xyz/\n.. _Definition and execution of templates: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#2_Templates_and_Instances\n.. _stOTTR syntax: http://spec.ottr.xyz/stOTTR/0.1/\n.. _Nesting templates: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#3_Nesting_templates\n.. _Type checking: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#4_Types\n.. _Non blank: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#5_NonBlank\n.. _Optional: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#6_Optionals_and_None\n.. _default values: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#7_Default_values\n.. _OTTR template library: %5Bhttp://tpl.ottr.xyz/%5D\n.. _Expansion modes: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#8_Expansion_modes\n.. _OWL templates: http://tpl.ottr.xyz/owl/", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Callidon/pyOTTR", "keywords": "rdf,owl,ottr,template,ontology,reusable", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ottr", "package_url": "https://pypi.org/project/ottr/", "platform": "", "project_url": "https://pypi.org/project/ottr/", "project_urls": {"Homepage": "https://github.com/Callidon/pyOTTR"}, "release_url": "https://pypi.org/project/ottr/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Manipulate OTTR Reasonable Ontology Templates in Python", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pyottr\">\n<h2>pyOTTR</h2>\n<p>Manipulate <a href=\"http://ottr.xyz/\" rel=\"nofollow\">OTTR Reasonable Ontology Templates</a> in Python.</p>\n<p><a href=\"https://callidon.github.io/pyOTTR\" rel=\"nofollow\">Package documentation</a></p>\n<p><a href=\"http://ottr.xyz/\" rel=\"nofollow\">OTTR documentation</a></p>\n<p><strong>Supported features:</strong></p>\n<ul>\n<li><a href=\"http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#2_Templates_and_Instances\" rel=\"nofollow\">Definition and execution of templates</a> in the <a href=\"http://spec.ottr.xyz/stOTTR/0.1/\" rel=\"nofollow\">stOTTR syntax</a></li>\n<li><a href=\"http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#3_Nesting_templates\" rel=\"nofollow\">Nesting templates</a></li>\n<li><a href=\"http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#4_Types\" rel=\"nofollow\">Type checking</a></li>\n<li><a href=\"http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#5_NonBlank\" rel=\"nofollow\">Non blank</a>, <a href=\"http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#6_Optionals_and_None\" rel=\"nofollow\">Optional</a> and <a href=\"http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#7_Default_values\" rel=\"nofollow\">default values</a> for template parameters.</li>\n<li><em>RDF and RDFS templates</em> from the <a href=\"%5Bhttp://tpl.ottr.xyz/%5D\" rel=\"nofollow\">OTTR template library</a> are loaded by default.</li>\n</ul>\n<p><strong>In development:</strong></p>\n<ul>\n<li><a href=\"http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#8_Expansion_modes\" rel=\"nofollow\">Expansion modes</a></li>\n<li>Support for <a href=\"http://tpl.ottr.xyz/owl/\" rel=\"nofollow\">OWL templates</a> from the template library</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"using-pip-recommended\">\n<h3>Using pip (recommended)</h3>\n<pre>pip install ottr\n</pre>\n</div>\n<div id=\"manual-installation\">\n<h3>Manual installation</h3>\n<pre>git clone\ncd pyOTTR/\npython setup.py install\n</pre>\n</div>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p>The main class to manipulate is <tt>OttrGenerator</tt>, which is used to load\nOTTR templates and expand template instances. So, in practice, you only\nneed to create a new generator, load some templates and then execute\nyour instances to produce RDF triples.</p>\n<p>By default, <strong>all templates</strong> from the <a href=\"http://tpl.ottr.xyz/\" rel=\"nofollow\">OTTR template\nlibrary</a> are loaded when the generator is\ncreated.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ottr</span> <span class=\"kn\">import</span> <span class=\"n\">OttrGenerator</span>\n<span class=\"c1\"># An OttrGenerator is used to load templates and expand instances</span>\n<span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">OttrGenerator</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Load a simple OTTR template definition</span>\n<span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">load_templates</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"\n  @prefix ex: &lt;http://example.org#&gt;.\n\n  ex:FirstName [ottr:IRI ?uri, ?firstName] :: {\n    ottr:Triple (?uri, foaf:firstName, ?firstName )\n  } .\n\n  ex:Person[ ?firstName ] :: {\n    ottr:Triple (_:person, rdf:type, foaf:Person ),\n    ex:FirstName (_:person, ?firstName)\n  } .\n\"\"\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Parse and prepare an instance for execution</span>\n<span class=\"n\">instances</span> <span class=\"o\">=</span> <span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">instanciate</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"\n  @prefix ex: &lt;http://example.org#&gt;.\n\n  ex:Person(\"Ann\").\n\"\"\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Execute the instance, which yield RDF triples</span>\n<span class=\"c1\"># The following prints (_:person0, rdf:type, foaf:Person) and (_:person0, foaf:firstName, \"Ann\")</span>\n<span class=\"k\">for</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">o</span> <span class=\"ow\">in</span> <span class=\"n\">instances</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">as_nt</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"# ----- RDF triple ----- #\"</span><span class=\"p\">)</span>\n  <span class=\"nb\">print</span><span class=\"p\">((</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">o</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6142967, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d5d89935205a43905238e748ac68e639", "sha256": "5050f20ce329fc3ccee5aa9c9603d4853961d572bcd1aae15e7245c6d37c06aa"}, "downloads": -1, "filename": "ottr-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d5d89935205a43905238e748ac68e639", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11391, "upload_time": "2019-11-15T12:30:26", "upload_time_iso_8601": "2019-11-15T12:30:26.407063Z", "url": "https://files.pythonhosted.org/packages/c5/5a/249ef88441ffcb64a198cb1c7f743cb7e7d278a56e1181903f19b02ee4fa/ottr-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d5d89935205a43905238e748ac68e639", "sha256": "5050f20ce329fc3ccee5aa9c9603d4853961d572bcd1aae15e7245c6d37c06aa"}, "downloads": -1, "filename": "ottr-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d5d89935205a43905238e748ac68e639", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11391, "upload_time": "2019-11-15T12:30:26", "upload_time_iso_8601": "2019-11-15T12:30:26.407063Z", "url": "https://files.pythonhosted.org/packages/c5/5a/249ef88441ffcb64a198cb1c7f743cb7e7d278a56e1181903f19b02ee4fa/ottr-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:46 2020"}