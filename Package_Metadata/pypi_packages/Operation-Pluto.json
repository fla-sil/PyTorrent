{"info": {"author": "Operation Pluto contributors", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Programming Language :: Python :: 3.5", "Topic :: Office/Business :: Financial :: Investment"], "description": "Operation Pluto\n===============\n\n|PyPI version| |Codacy Badge|\n\n`Operation Pluto <https://en.wikipedia.org/wiki/Operation_Pluto>`__ is a\npipeline set-up. It plumbs financial and economic data. Focused markets\nare *Hong Kong*, *U.S.* and *China*.\n\nThis data pipeline is organized in `Luigi\nframework <https://github.com/spotify/luigi>`__ with Python.\n\nAvailable Data\n--------------\n\nCurrently connected data sources :\n\nHong Kong\n~~~~~~~~~\n\n-  `Census and Statistics Department <https://www.censtatd.gov.hk>`__\n-  `The Hong Kong Association of Banks <https://www.hkab.org.hk>`__\n-  `Hong Kong Government Bond Programme <http://www.hkgb.gov.hk>`__\n-  `Hong Kong Monetary Authority <https://www.hkma.gov.hk>`__\n-  `Hang Seng Indexes Company <https://www.hsi.com.hk>`__\n-  `Rating and Valuation Department <https://www.rvd.gov.hk/en>`__\n\nUnited States\n~~~~~~~~~~~~~\n\n-  `U.S. Bureau of Labor Statistics <https://www.bls.gov>`__\n-  `Federal Reserve System <https://www.federalreserve.gov>`__\n-  `St.\u00a0Louis Federal Reserve Economic\n   Data <https://fred.stlouisfed.org>`__\n\nChina\n~~~~~\n\n-  ?\n\nMaster Data\n~~~~~~~~~~~\n\n-  `Holiday API <https://holidayapi.com>`__\n\nPipeline Organization\n---------------------\n\n-  Crawl websites, back-fill past data, and construct file directories.\n   All done as code.\n-  One table in data source corresponds to one target file.\n-  Pipeline task is stateful. Overwrite source file the least possible.\n\nPrerequisites\n-------------\n\n-  `Python 3.5 <https://conda.io/miniconda.html>`__\n-  `Luigi 2.7 <https://luigi.readthedocs.io/en/stable/>`__\n\nGetting Started\n---------------\n\nHave Python 3.5 installed and clone this repository :\n\n::\n\n    # Clone this repository\n    $ git clone https://github.com/hydra-lab/operation-pluto\n\nInstall Python dependencies :\n\n::\n\n    # Installing with Conda may not work\n    $ pip install -r requirements.txt\n\nSet up Luigi configuration file :\n\n::\n\n    # Rename luigi.cfg.sample to luigi.cfg\n    $ mv luigi.cfg.sample luigi.cfg\n\nConfigure proxies in ``luigi.cfg`` if you\u2019re behind any :\n\n::\n\n    [proxies]\n    https = https://username:password@hostname:port/\n\nTest the installation. New data should be extracted and parsed into\nfolder ``test/data`` :\n\n::\n\n    $ python -m luigi --module main RunMock --local-scheduler\n    $ ls test/data\n\nHigh-level job orchestration is done in ``main.py``. e.g. ``RunAll()``\nis the wrapper class to initialize whole ``data`` directory and trigger\nall processing tasks. In production, tasks should be run on Luigi\nserver. Because Luigi daemon will not run on Windows, simply run :\n\n::\n\n    # Run Luigi server on http://localhost:8082\n    $ luigid\n    # Run task on Luigi server\n    $ python -m luigi --module main RunAll\n\nSchedule pipeline to run periodically in Task Scheduler or cron. Set up\n``run.sh`` on Windows :\n\n::\n\n    # Script on Windows\n    start luigid\n    python -m luigi --module main RunAll\n    cmd \"/c taskkill /IM \"luigid.exe\" /T /F\"\n\nLicense\n-------\n\n|License: AGPL v3|\n\nThis project is licensed under GNU Affero General Public License,\nVersion 3.0. See LICENSE for full license text.\n\n.. |PyPI version| image:: https://badge.fury.io/py/Operation-Pluto.svg\n   :target: https://pypi.python.org/pypi/Operation-Pluto\n.. |Codacy Badge| image:: https://api.codacy.com/project/badge/Coverage/ae24c1a0b93a45bb972c40af136a01b2\n   :target: https://www.codacy.com/app/tc-ying/Operation-Pluto-upstream?utm_source=github.com&utm_medium=referral&utm_content=hydra-lab/Operation-Pluto&utm_campaign=Badge_Coverage\n.. |License: AGPL v3| image:: https://img.shields.io/badge/License-AGPL%20v3-blue.svg\n   :target: https://www.gnu.org/licenses/agpl-3.0", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hydra-lab/Operation-Pluto", "keywords": "data-pipeline finance market", "license": "AGPL-3.0", "maintainer": "", "maintainer_email": "", "name": "Operation-Pluto", "package_url": "https://pypi.org/project/Operation-Pluto/", "platform": "", "project_url": "https://pypi.org/project/Operation-Pluto/", "project_urls": {"Homepage": "https://github.com/hydra-lab/Operation-Pluto"}, "release_url": "https://pypi.org/project/Operation-Pluto/0.1.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Grab and rinse financial and economic data.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/Operation-Pluto\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/152842ecdec97c548eff96340e919a469e9b88dc/68747470733a2f2f62616467652e667572792e696f2f70792f4f7065726174696f6e2d506c75746f2e737667\"></a> <a href=\"https://www.codacy.com/app/tc-ying/Operation-Pluto-upstream?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=hydra-lab/Operation-Pluto&amp;utm_campaign=Badge_Coverage\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a8eafd72d5ad17f45cfc3d39180849a255c52f5/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f436f7665726167652f6165323463316130623933613435626239373263343061663133366130316232\"></a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Operation_Pluto\" rel=\"nofollow\">Operation Pluto</a> is a\npipeline set-up. It plumbs financial and economic data. Focused markets\nare <em>Hong Kong</em>, <em>U.S.</em> and <em>China</em>.</p>\n<p>This data pipeline is organized in <a href=\"https://github.com/spotify/luigi\" rel=\"nofollow\">Luigi\nframework</a> with Python.</p>\n<div id=\"available-data\">\n<h2>Available Data</h2>\n<p>Currently connected data sources :</p>\n<div id=\"hong-kong\">\n<h3>Hong Kong</h3>\n<ul>\n<li><a href=\"https://www.censtatd.gov.hk\" rel=\"nofollow\">Census and Statistics Department</a></li>\n<li><a href=\"https://www.hkab.org.hk\" rel=\"nofollow\">The Hong Kong Association of Banks</a></li>\n<li><a href=\"http://www.hkgb.gov.hk\" rel=\"nofollow\">Hong Kong Government Bond Programme</a></li>\n<li><a href=\"https://www.hkma.gov.hk\" rel=\"nofollow\">Hong Kong Monetary Authority</a></li>\n<li><a href=\"https://www.hsi.com.hk\" rel=\"nofollow\">Hang Seng Indexes Company</a></li>\n<li><a href=\"https://www.rvd.gov.hk/en\" rel=\"nofollow\">Rating and Valuation Department</a></li>\n</ul>\n</div>\n<div id=\"united-states\">\n<h3>United States</h3>\n<ul>\n<li><a href=\"https://www.bls.gov\" rel=\"nofollow\">U.S. Bureau of Labor Statistics</a></li>\n<li><a href=\"https://www.federalreserve.gov\" rel=\"nofollow\">Federal Reserve System</a></li>\n<li><a href=\"https://fred.stlouisfed.org\" rel=\"nofollow\">St.\u00a0Louis Federal Reserve Economic\nData</a></li>\n</ul>\n</div>\n<div id=\"china\">\n<h3>China</h3>\n<ul>\n<li>?</li>\n</ul>\n</div>\n<div id=\"master-data\">\n<h3>Master Data</h3>\n<ul>\n<li><a href=\"https://holidayapi.com\" rel=\"nofollow\">Holiday API</a></li>\n</ul>\n</div>\n</div>\n<div id=\"pipeline-organization\">\n<h2>Pipeline Organization</h2>\n<ul>\n<li>Crawl websites, back-fill past data, and construct file directories.\nAll done as code.</li>\n<li>One table in data source corresponds to one target file.</li>\n<li>Pipeline task is stateful. Overwrite source file the least possible.</li>\n</ul>\n</div>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<ul>\n<li><a href=\"https://conda.io/miniconda.html\" rel=\"nofollow\">Python 3.5</a></li>\n<li><a href=\"https://luigi.readthedocs.io/en/stable/\" rel=\"nofollow\">Luigi 2.7</a></li>\n</ul>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>Have Python 3.5 installed and clone this repository :</p>\n<pre># Clone this repository\n$ git clone https://github.com/hydra-lab/operation-pluto\n</pre>\n<p>Install Python dependencies :</p>\n<pre># Installing with Conda may not work\n$ pip install -r requirements.txt\n</pre>\n<p>Set up Luigi configuration file :</p>\n<pre># Rename luigi.cfg.sample to luigi.cfg\n$ mv luigi.cfg.sample luigi.cfg\n</pre>\n<p>Configure proxies in <tt>luigi.cfg</tt> if you\u2019re behind any :</p>\n<pre>[proxies]\nhttps = https://username:password@hostname:port/\n</pre>\n<p>Test the installation. New data should be extracted and parsed into\nfolder <tt>test/data</tt> :</p>\n<pre>$ python -m luigi --module main RunMock --local-scheduler\n$ ls test/data\n</pre>\n<p>High-level job orchestration is done in <tt>main.py</tt>. e.g. <tt>RunAll()</tt>\nis the wrapper class to initialize whole <tt>data</tt> directory and trigger\nall processing tasks. In production, tasks should be run on Luigi\nserver. Because Luigi daemon will not run on Windows, simply run :</p>\n<pre># Run Luigi server on http://localhost:8082\n$ luigid\n# Run task on Luigi server\n$ python -m luigi --module main RunAll\n</pre>\n<p>Schedule pipeline to run periodically in Task Scheduler or cron. Set up\n<tt>run.sh</tt> on Windows :</p>\n<pre># Script on Windows\nstart luigid\npython -m luigi --module main RunAll\ncmd \"/c taskkill /IM \"luigid.exe\" /T /F\"\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><a href=\"https://www.gnu.org/licenses/agpl-3.0\" rel=\"nofollow\"><img alt=\"License: AGPL v3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f911b8188c89b9c92c672604b630cd7354a956f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4147504c25323076332d626c75652e737667\"></a></p>\n<p>This project is licensed under GNU Affero General Public License,\nVersion 3.0. See LICENSE for full license text.</p>\n</div>\n\n          </div>"}, "last_serial": 3550684, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "aa81c27173bca39ac32bd215ce7b1879", "sha256": "869d82c9ad6e871770b36d46d4fd4993fafb2afafcb91977322dc14df930af87"}, "downloads": -1, "filename": "Operation-Pluto-0.1.0.tar.gz", "has_sig": false, "md5_digest": "aa81c27173bca39ac32bd215ce7b1879", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 34780, "upload_time": "2018-02-04T05:33:15", "upload_time_iso_8601": "2018-02-04T05:33:15.333832Z", "url": "https://files.pythonhosted.org/packages/df/0b/c7aa1fcc5f2560f963073661be45c5b979fa45285a25402be491b297f050/Operation-Pluto-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d22c3a4657d1785306c9573ad41e030a", "sha256": "f36742d2f2e356930834baa49c01752caab7feba02db5a0c78adcc72b9e361ea"}, "downloads": -1, "filename": "Operation-Pluto-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d22c3a4657d1785306c9573ad41e030a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 35158, "upload_time": "2018-02-04T16:27:45", "upload_time_iso_8601": "2018-02-04T16:27:45.335552Z", "url": "https://files.pythonhosted.org/packages/4c/ab/a31bf07f801d4596cfecec1144b425b0a3125d4de0c1bb3f5eabbf974d4e/Operation-Pluto-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d22c3a4657d1785306c9573ad41e030a", "sha256": "f36742d2f2e356930834baa49c01752caab7feba02db5a0c78adcc72b9e361ea"}, "downloads": -1, "filename": "Operation-Pluto-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d22c3a4657d1785306c9573ad41e030a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 35158, "upload_time": "2018-02-04T16:27:45", "upload_time_iso_8601": "2018-02-04T16:27:45.335552Z", "url": "https://files.pythonhosted.org/packages/4c/ab/a31bf07f801d4596cfecec1144b425b0a3125d4de0c1bb3f5eabbf974d4e/Operation-Pluto-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:13 2020"}