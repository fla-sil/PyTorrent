{"info": {"author": "Lucas Weyne", "author_email": "weynelucas@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Healthcare Industry", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing", "Topic :: Text Processing :: Markup :: XML"], "description": "[![PyPi version](https://img.shields.io/pypi/v/python-xml-hl7.svg)](https://pypi.python.org/pypi/python-xml-hl7) [![Build Status](https://travis-ci.org/weynelucas/python-xml-hl7.svg?branch=master)](https://travis-ci.org/weynelucas/python-xml-hl7) [![codecov](https://codecov.io/gh/weynelucas/python-xml-hl7/branch/master/graph/badge.svg)](https://codecov.io/gh/weynelucas/python-xml-hl7)\n\n# python-xml-hl7\nA library for parsing HL7 (version 2.x) messages in XML format into Python objects\n\n\n## Instalation\n\nYou can install this library using pip:\n```\npip install python-xml-hl7\n```\n\nor from the git repository:\n```\ngit clone https://github.com/weynelucas/python-xml-hl7.git\ncd python-xml-hl7\npython setup.py install\n```\n\n## Quickstart\n\nAs an example, let\u2019s create a HL7 message:\n\n```python\nmessage = \"\"\"\n<ORU_R01>\n<MSH><MSH.1>|</MSH.1><MSH.2>^~\\\\&amp;</MSH.2><MSH.3>hospital</MSH.3><MSH.7>20180703111743</MSH.7><MSH.9><MSH.9.1>ORU</MSH.9.1><MSH.9.2>R01</MSH.9.2></MSH.9><MSH.12>2.3.1</MSH.12></MSH>\n<PID><PID.2>shenzhen</PID.2><PID.3>1</PID.3><PID.5>libang</PID.5><PID.7>20091010</PID.7><PID.8>M</PID.8></PID>\n<PV1><PV1.2>U</PV1.2><PV1.18>adult</PV1.18><PV1.44>20180726181346</PV1.44></PV1>\n<OBR><OBR.7>20180703111743</OBR.7></OBR>\n<OBX><OBX.2>NM</OBX.2><OBX.3>SPO2</OBX.3><OBX.5>96</OBX.5><OBX.6>%</OBX.6><OBX.7>90-100</OBX.7></OBX>\n<OBX><OBX.2>NM</OBX.2><OBX.3>PR</OBX.3><OBX.5>68</OBX.5><OBX.6>bpm</OBX.6><OBX.7>50-120</OBX.7></OBX>\n<OBX><OBX.2>NM</OBX.2><OBX.3>SYS</OBX.3><OBX.5>131</OBX.5><OBX.6>mmHg</OBX.6><OBX.7>90-160</OBX.7><OBX.14>20180703111713</OBX.14></OBX>\n<OBX><OBX.2>NM</OBX.2><OBX.3>DIA</OBX.3><OBX.5>85</OBX.5><OBX.6>mmHg</OBX.6><OBX.7>50-90</OBX.7><OBX.14>20180703111713</OBX.14></OBX>\n<OBX><OBX.2>NM</OBX.2><OBX.3>MAP</OBX.3><OBX.5>100</OBX.5><OBX.6>mmHg</OBX.6><OBX.7>60-110</OBX.7><OBX.14>20180703111713</OBX.14></OBX>\n<OBX><OBX.2>NM</OBX.2><OBX.3>NIBP_PR</OBX.3><OBX.5>73</OBX.5><OBX.6>bpm</OBX.6><OBX.7>50-120</OBX.7><OBX.14>20180703111713</OBX.14></OBX>\n</ORU_R01>\n\"\"\"\n```\n\nCall `hl7.xml.parse()` command to convert the string message\n\n```python\nfrom hl7.xml import parse\n\nh = parse(message)\n```\n\nThis command returns a `Message` instance, wrapping a series of `Segment` objects. Is possible iterate over segments or match for specific ones:\n\n```python\n>>> list(h) # List all message segments\n[<hl7.xml.containers.MSH>,\n <hl7.xml.containers.PID>,\n <hl7.xml.containers.PV1>,\n <hl7.xml.containers.OBR>,\n <hl7.xml.containers.OBX: SPO2>,\n <hl7.xml.containers.OBX: PR>,\n <hl7.xml.containers.OBX: SYS>,\n <hl7.xml.containers.OBX: DIA>,\n <hl7.xml.containers.OBX: MAP>,\n <hl7.xml.containers.OBX: NIBP_PR>]\n\n>>> h[0]  # Get 1st message segment\n<hl7.xml.containers.MSH>\n\n>>> h['OBX'] # Find all OBX segments\n[<hl7.xml.containers.OBX: SPO2>,\n <hl7.xml.containers.OBX: PR>,\n <hl7.xml.containers.OBX: SYS>,\n <hl7.xml.containers.OBX: DIA>,\n <hl7.xml.containers.OBX: MAP>,\n <hl7.xml.containers.OBX: NIBP_PR>]\n```\n\nA `Segment` instance wraps a serie of `Field` objects, you can iterate over them:\n\n```python\n>>> list(h[2]) # List all fields for 3rd message segment (PV1)\n[<hl7.xml.containers.Field: PV1.2>,\n <hl7.xml.containers.Field: PV1.18>,\n <hl7.xml.containers.Field: PV1.44>]\n\n>>> list(h[5]) # List all fields for 6th message segment (OBX)\n[<hl7.xml.containers.Field: OBX.2>,\n <hl7.xml.containers.Field: OBX.3>,\n <hl7.xml.containers.Field: OBX.5>,\n <hl7.xml.containers.Field: OBX.6>,\n <hl7.xml.containers.Field: OBX.7>]\n\n>>> h[5][0].value\n'NM'\n\n>>> h[5][2].value\n'62'\n```\n\nThere are different types of `Segment`, they are: `MSH`, `PID`, `PV1`, `OBR` and `OBX`. Each of them has helper methods to retrieve data from its respective HL7 segment without iterate over his `Field` objects\n\n#### MSH\n\n```python\n>>> msh = h['MSH'][0]\n>>> (msh.field_separator,\n     msh.encoding_chars,\n     msh.sending_application,\n     msh.datetime,\n     msh.version,\n     msh.message_type)\n('|', '^~\\\\&', 'hospital', datetime.datetime(2018, 7, 3, 11, 17, 43), '2.3.1', ('ORU', 'R01'))\n```\n\n#### PID\n``` python\n>>> pid = h['PID'][0]\n>>> (pid.id,\n     pid.id_list,\n     pid.name,\n     pid.birthdate,\n     pid.gender)\n('shenzhen', '1', 'libang', datetime.datetime(2009, 10, 10, 0, 0), 'M')\n```\n\n#### PV1\n```python\n>>> pv1 = h['PV1'][0]\n>>> (pv1.patient_class,\n     pv1.patient_class_display,\n     pv1.patient_type,\n     pv1.patient_type_display,\n     pv1.assigned_patient_location,\n     pv1.admit_datetime)\n('U', 'Unknown', 'adult', 'Adult', None, datetime.datetime(2018, 7, 26, 18, 13, 46))\n```\n\n#### OBR\n```python\n>>> obr = h['OBR'][0]\n>>> obr.datetime\ndatetime.datetime(2018, 7, 3, 11, 17, 43)\n```\n\n#### OBX\n```python\n>>> obx = h['OBX'][3] # 4th OBX instance\n>>> (obx.identifier,\n     obx.value_type,\n     obx.value,\n     obx.units,\n     obx.reference_range,\n     obx.datetime)\n('DIA', 'NM', 85, 'mmHg', (50, 90), datetime.datetime(2018, 7, 3, 11, 17, 13))\n```\n\nTo find a `OBX` segment or value inside a `Message` by its identifier, use `get_obx` and `get_obx_value` methods:\n\n```python\n>>> h.get_obx('DIA')\n<hl7.xml.containers.OBX: DIA>\n\n>>> h.get_obx('DIA').value\n85\n\n>>> h.get_obx_value('SPO2')\n96\n```\n\n## Network client\n`python-xml-hl7` provides a simple network (TCP/IP) client, wich reads HL7 messages from [Alfamed](http://www.alfamed.com/) patient monitors like [VITA 200e](http://www.alfamed.com/monitor-multiparametro-vita-200.html)\n\n```python\nfrom hl7.xml.client import AlfamedClient\n\nclient = AlfamedClient('169.254.215.35') # Default communication port is 9100\nclient.read_message()  # By default, HL7 messages are converted into Message objects\nclient.read_message(parse_message=False) # Returns the original HL7 message as string\n```\n\n`AlfamedClient` objects instantiated with invalid host addresses will raises `AttributeError`\n\n## Testing\nYou can run tests locally using `unittest` module\n\n```\ncd python-xml-hl7\npython -m unittest tests\n```\n\nIf all the tests pass you will see a success message like this:\n```\n.................\n----------------------------------------------------------------------\nRan 17 tests in 0.007s\n\nOK\n```\n\n## Notes\n\n* Specification for XML encoding rules of HL7 v2 messages can be found [here](http://www.hl7.org/implement/standards/product_brief.cfm?product_id=83)\n* For any suggestion, feature or bug fix, you can report an issue [here](https://github.com/weynelucas/python-xml-hl7/issues). Or submit a pull request\n* For handle HL7 messages in original stream format, use solutions like [python-hl7](http://python-hl7.readthedocs.io/en/latest/) or [HL7apy](http://hl7apy.org/)\n\n## Release Notes\n\n* 1.0.0 - First release\n* 1.1.0 - Find `OBX` segments with `get_obx` and `get_obx_value`\n* 1.2.0 - String representation for client and container objects\n* 1.3.0 - Add Travis and Codecov support", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/weynelucas/python-xml-hl7/archive/1.3.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/weynelucas/python-xml-hl7", "keywords": "hl7 health level xml python-hl7 python-xml-hl7", "license": "", "maintainer": "", "maintainer_email": "", "name": "python-xml-hl7", "package_url": "https://pypi.org/project/python-xml-hl7/", "platform": "", "project_url": "https://pypi.org/project/python-xml-hl7/", "project_urls": {"Download": "https://github.com/weynelucas/python-xml-hl7/archive/1.3.0.tar.gz", "Homepage": "https://github.com/weynelucas/python-xml-hl7"}, "release_url": "https://pypi.org/project/python-xml-hl7/1.3.0/", "requires_dist": null, "requires_python": "", "summary": "A library for parsing HL7 (version 2.x) messages in XML format into Python objects", "version": "1.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/python-xml-hl7\" rel=\"nofollow\"><img alt=\"PyPi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6673efa84fbea310a7b016c5131446adb8311c31/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707974686f6e2d786d6c2d686c372e737667\"></a> <a href=\"https://travis-ci.org/weynelucas/python-xml-hl7\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/06e5927a6be7a2d2f8d7ec3600b90954e2818f46/68747470733a2f2f7472617669732d63692e6f72672f7765796e656c756361732f707974686f6e2d786d6c2d686c372e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/weynelucas/python-xml-hl7\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/21ed80fd020c3450b2a6f02814eb5eb30ab3ced3/68747470733a2f2f636f6465636f762e696f2f67682f7765796e656c756361732f707974686f6e2d786d6c2d686c372f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<h1>python-xml-hl7</h1>\n<p>A library for parsing HL7 (version 2.x) messages in XML format into Python objects</p>\n<h2>Instalation</h2>\n<p>You can install this library using pip:</p>\n<pre><code>pip install python-xml-hl7\n</code></pre>\n<p>or from the git repository:</p>\n<pre><code>git clone https://github.com/weynelucas/python-xml-hl7.git\ncd python-xml-hl7\npython setup.py install\n</code></pre>\n<h2>Quickstart</h2>\n<p>As an example, let\u2019s create a HL7 message:</p>\n<pre><span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">&lt;ORU_R01&gt;</span>\n<span class=\"s2\">&lt;MSH&gt;&lt;MSH.1&gt;|&lt;/MSH.1&gt;&lt;MSH.2&gt;^~</span><span class=\"se\">\\\\</span><span class=\"s2\">&amp;amp;&lt;/MSH.2&gt;&lt;MSH.3&gt;hospital&lt;/MSH.3&gt;&lt;MSH.7&gt;20180703111743&lt;/MSH.7&gt;&lt;MSH.9&gt;&lt;MSH.9.1&gt;ORU&lt;/MSH.9.1&gt;&lt;MSH.9.2&gt;R01&lt;/MSH.9.2&gt;&lt;/MSH.9&gt;&lt;MSH.12&gt;2.3.1&lt;/MSH.12&gt;&lt;/MSH&gt;</span>\n<span class=\"s2\">&lt;PID&gt;&lt;PID.2&gt;shenzhen&lt;/PID.2&gt;&lt;PID.3&gt;1&lt;/PID.3&gt;&lt;PID.5&gt;libang&lt;/PID.5&gt;&lt;PID.7&gt;20091010&lt;/PID.7&gt;&lt;PID.8&gt;M&lt;/PID.8&gt;&lt;/PID&gt;</span>\n<span class=\"s2\">&lt;PV1&gt;&lt;PV1.2&gt;U&lt;/PV1.2&gt;&lt;PV1.18&gt;adult&lt;/PV1.18&gt;&lt;PV1.44&gt;20180726181346&lt;/PV1.44&gt;&lt;/PV1&gt;</span>\n<span class=\"s2\">&lt;OBR&gt;&lt;OBR.7&gt;20180703111743&lt;/OBR.7&gt;&lt;/OBR&gt;</span>\n<span class=\"s2\">&lt;OBX&gt;&lt;OBX.2&gt;NM&lt;/OBX.2&gt;&lt;OBX.3&gt;SPO2&lt;/OBX.3&gt;&lt;OBX.5&gt;96&lt;/OBX.5&gt;&lt;OBX.6&gt;%&lt;/OBX.6&gt;&lt;OBX.7&gt;90-100&lt;/OBX.7&gt;&lt;/OBX&gt;</span>\n<span class=\"s2\">&lt;OBX&gt;&lt;OBX.2&gt;NM&lt;/OBX.2&gt;&lt;OBX.3&gt;PR&lt;/OBX.3&gt;&lt;OBX.5&gt;68&lt;/OBX.5&gt;&lt;OBX.6&gt;bpm&lt;/OBX.6&gt;&lt;OBX.7&gt;50-120&lt;/OBX.7&gt;&lt;/OBX&gt;</span>\n<span class=\"s2\">&lt;OBX&gt;&lt;OBX.2&gt;NM&lt;/OBX.2&gt;&lt;OBX.3&gt;SYS&lt;/OBX.3&gt;&lt;OBX.5&gt;131&lt;/OBX.5&gt;&lt;OBX.6&gt;mmHg&lt;/OBX.6&gt;&lt;OBX.7&gt;90-160&lt;/OBX.7&gt;&lt;OBX.14&gt;20180703111713&lt;/OBX.14&gt;&lt;/OBX&gt;</span>\n<span class=\"s2\">&lt;OBX&gt;&lt;OBX.2&gt;NM&lt;/OBX.2&gt;&lt;OBX.3&gt;DIA&lt;/OBX.3&gt;&lt;OBX.5&gt;85&lt;/OBX.5&gt;&lt;OBX.6&gt;mmHg&lt;/OBX.6&gt;&lt;OBX.7&gt;50-90&lt;/OBX.7&gt;&lt;OBX.14&gt;20180703111713&lt;/OBX.14&gt;&lt;/OBX&gt;</span>\n<span class=\"s2\">&lt;OBX&gt;&lt;OBX.2&gt;NM&lt;/OBX.2&gt;&lt;OBX.3&gt;MAP&lt;/OBX.3&gt;&lt;OBX.5&gt;100&lt;/OBX.5&gt;&lt;OBX.6&gt;mmHg&lt;/OBX.6&gt;&lt;OBX.7&gt;60-110&lt;/OBX.7&gt;&lt;OBX.14&gt;20180703111713&lt;/OBX.14&gt;&lt;/OBX&gt;</span>\n<span class=\"s2\">&lt;OBX&gt;&lt;OBX.2&gt;NM&lt;/OBX.2&gt;&lt;OBX.3&gt;NIBP_PR&lt;/OBX.3&gt;&lt;OBX.5&gt;73&lt;/OBX.5&gt;&lt;OBX.6&gt;bpm&lt;/OBX.6&gt;&lt;OBX.7&gt;50-120&lt;/OBX.7&gt;&lt;OBX.14&gt;20180703111713&lt;/OBX.14&gt;&lt;/OBX&gt;</span>\n<span class=\"s2\">&lt;/ORU_R01&gt;</span>\n<span class=\"s2\">\"\"\"</span>\n</pre>\n<p>Call <code>hl7.xml.parse()</code> command to convert the string message</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hl7.xml</span> <span class=\"kn\">import</span> <span class=\"n\">parse</span>\n\n<span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n</pre>\n<p>This command returns a <code>Message</code> instance, wrapping a series of <code>Segment</code> objects. Is possible iterate over segments or match for specific ones:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">)</span> <span class=\"c1\"># List all message segments</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">MSH</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">PID</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">PV1</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBR</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBX</span><span class=\"p\">:</span> <span class=\"n\">SPO2</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBX</span><span class=\"p\">:</span> <span class=\"n\">PR</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBX</span><span class=\"p\">:</span> <span class=\"n\">SYS</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBX</span><span class=\"p\">:</span> <span class=\"n\">DIA</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBX</span><span class=\"p\">:</span> <span class=\"n\">MAP</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBX</span><span class=\"p\">:</span> <span class=\"n\">NIBP_PR</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">h</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>  <span class=\"c1\"># Get 1st message segment</span>\n<span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">MSH</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">h</span><span class=\"p\">[</span><span class=\"s1\">'OBX'</span><span class=\"p\">]</span> <span class=\"c1\"># Find all OBX segments</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBX</span><span class=\"p\">:</span> <span class=\"n\">SPO2</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBX</span><span class=\"p\">:</span> <span class=\"n\">PR</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBX</span><span class=\"p\">:</span> <span class=\"n\">SYS</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBX</span><span class=\"p\">:</span> <span class=\"n\">DIA</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBX</span><span class=\"p\">:</span> <span class=\"n\">MAP</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBX</span><span class=\"p\">:</span> <span class=\"n\">NIBP_PR</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n</pre>\n<p>A <code>Segment</code> instance wraps a serie of <code>Field</code> objects, you can iterate over them:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span> <span class=\"c1\"># List all fields for 3rd message segment (PV1)</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">:</span> <span class=\"n\">PV1</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">:</span> <span class=\"n\">PV1</span><span class=\"o\">.</span><span class=\"mi\">18</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">:</span> <span class=\"n\">PV1</span><span class=\"o\">.</span><span class=\"mi\">44</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span> <span class=\"c1\"># List all fields for 6th message segment (OBX)</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">:</span> <span class=\"n\">OBX</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">:</span> <span class=\"n\">OBX</span><span class=\"o\">.</span><span class=\"mi\">3</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">:</span> <span class=\"n\">OBX</span><span class=\"o\">.</span><span class=\"mi\">5</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">:</span> <span class=\"n\">OBX</span><span class=\"o\">.</span><span class=\"mi\">6</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">:</span> <span class=\"n\">OBX</span><span class=\"o\">.</span><span class=\"mi\">7</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">h</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span>\n<span class=\"s1\">'NM'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">h</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span>\n<span class=\"s1\">'62'</span>\n</pre>\n<p>There are different types of <code>Segment</code>, they are: <code>MSH</code>, <code>PID</code>, <code>PV1</code>, <code>OBR</code> and <code>OBX</code>. Each of them has helper methods to retrieve data from its respective HL7 segment without iterate over his <code>Field</code> objects</p>\n<h4>MSH</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">msh</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"p\">[</span><span class=\"s1\">'MSH'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"n\">msh</span><span class=\"o\">.</span><span class=\"n\">field_separator</span><span class=\"p\">,</span>\n     <span class=\"n\">msh</span><span class=\"o\">.</span><span class=\"n\">encoding_chars</span><span class=\"p\">,</span>\n     <span class=\"n\">msh</span><span class=\"o\">.</span><span class=\"n\">sending_application</span><span class=\"p\">,</span>\n     <span class=\"n\">msh</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">,</span>\n     <span class=\"n\">msh</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">,</span>\n     <span class=\"n\">msh</span><span class=\"o\">.</span><span class=\"n\">message_type</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"s1\">'|'</span><span class=\"p\">,</span> <span class=\"s1\">'^~</span><span class=\"se\">\\\\</span><span class=\"s1\">&amp;'</span><span class=\"p\">,</span> <span class=\"s1\">'hospital'</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">43</span><span class=\"p\">),</span> <span class=\"s1\">'2.3.1'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">'ORU'</span><span class=\"p\">,</span> <span class=\"s1\">'R01'</span><span class=\"p\">))</span>\n</pre>\n<h4>PID</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pid</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"p\">[</span><span class=\"s1\">'PID'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"n\">pid</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n     <span class=\"n\">pid</span><span class=\"o\">.</span><span class=\"n\">id_list</span><span class=\"p\">,</span>\n     <span class=\"n\">pid</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n     <span class=\"n\">pid</span><span class=\"o\">.</span><span class=\"n\">birthdate</span><span class=\"p\">,</span>\n     <span class=\"n\">pid</span><span class=\"o\">.</span><span class=\"n\">gender</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"s1\">'shenzhen'</span><span class=\"p\">,</span> <span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"s1\">'libang'</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2009</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"s1\">'M'</span><span class=\"p\">)</span>\n</pre>\n<h4>PV1</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pv1</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"p\">[</span><span class=\"s1\">'PV1'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"n\">pv1</span><span class=\"o\">.</span><span class=\"n\">patient_class</span><span class=\"p\">,</span>\n     <span class=\"n\">pv1</span><span class=\"o\">.</span><span class=\"n\">patient_class_display</span><span class=\"p\">,</span>\n     <span class=\"n\">pv1</span><span class=\"o\">.</span><span class=\"n\">patient_type</span><span class=\"p\">,</span>\n     <span class=\"n\">pv1</span><span class=\"o\">.</span><span class=\"n\">patient_type_display</span><span class=\"p\">,</span>\n     <span class=\"n\">pv1</span><span class=\"o\">.</span><span class=\"n\">assigned_patient_location</span><span class=\"p\">,</span>\n     <span class=\"n\">pv1</span><span class=\"o\">.</span><span class=\"n\">admit_datetime</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"s1\">'U'</span><span class=\"p\">,</span> <span class=\"s1\">'Unknown'</span><span class=\"p\">,</span> <span class=\"s1\">'adult'</span><span class=\"p\">,</span> <span class=\"s1\">'Adult'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">46</span><span class=\"p\">))</span>\n</pre>\n<h4>OBR</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obr</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"p\">[</span><span class=\"s1\">'OBR'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obr</span><span class=\"o\">.</span><span class=\"n\">datetime</span>\n<span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">43</span><span class=\"p\">)</span>\n</pre>\n<h4>OBX</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obx</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"p\">[</span><span class=\"s1\">'OBX'</span><span class=\"p\">][</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"c1\"># 4th OBX instance</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"n\">obx</span><span class=\"o\">.</span><span class=\"n\">identifier</span><span class=\"p\">,</span>\n     <span class=\"n\">obx</span><span class=\"o\">.</span><span class=\"n\">value_type</span><span class=\"p\">,</span>\n     <span class=\"n\">obx</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span>\n     <span class=\"n\">obx</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">,</span>\n     <span class=\"n\">obx</span><span class=\"o\">.</span><span class=\"n\">reference_range</span><span class=\"p\">,</span>\n     <span class=\"n\">obx</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"s1\">'DIA'</span><span class=\"p\">,</span> <span class=\"s1\">'NM'</span><span class=\"p\">,</span> <span class=\"mi\">85</span><span class=\"p\">,</span> <span class=\"s1\">'mmHg'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">))</span>\n</pre>\n<p>To find a <code>OBX</code> segment or value inside a <code>Message</code> by its identifier, use <code>get_obx</code> and <code>get_obx_value</code> methods:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">get_obx</span><span class=\"p\">(</span><span class=\"s1\">'DIA'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">hl7</span><span class=\"o\">.</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">OBX</span><span class=\"p\">:</span> <span class=\"n\">DIA</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">get_obx</span><span class=\"p\">(</span><span class=\"s1\">'DIA'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">value</span>\n<span class=\"mi\">85</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">get_obx_value</span><span class=\"p\">(</span><span class=\"s1\">'SPO2'</span><span class=\"p\">)</span>\n<span class=\"mi\">96</span>\n</pre>\n<h2>Network client</h2>\n<p><code>python-xml-hl7</code> provides a simple network (TCP/IP) client, wich reads HL7 messages from <a href=\"http://www.alfamed.com/\" rel=\"nofollow\">Alfamed</a> patient monitors like <a href=\"http://www.alfamed.com/monitor-multiparametro-vita-200.html\" rel=\"nofollow\">VITA 200e</a></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hl7.xml.client</span> <span class=\"kn\">import</span> <span class=\"n\">AlfamedClient</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">AlfamedClient</span><span class=\"p\">(</span><span class=\"s1\">'169.254.215.35'</span><span class=\"p\">)</span> <span class=\"c1\"># Default communication port is 9100</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">read_message</span><span class=\"p\">()</span>  <span class=\"c1\"># By default, HL7 messages are converted into Message objects</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">read_message</span><span class=\"p\">(</span><span class=\"n\">parse_message</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"c1\"># Returns the original HL7 message as string</span>\n</pre>\n<p><code>AlfamedClient</code> objects instantiated with invalid host addresses will raises <code>AttributeError</code></p>\n<h2>Testing</h2>\n<p>You can run tests locally using <code>unittest</code> module</p>\n<pre><code>cd python-xml-hl7\npython -m unittest tests\n</code></pre>\n<p>If all the tests pass you will see a success message like this:</p>\n<pre><code>.................\n----------------------------------------------------------------------\nRan 17 tests in 0.007s\n\nOK\n</code></pre>\n<h2>Notes</h2>\n<ul>\n<li>Specification for XML encoding rules of HL7 v2 messages can be found <a href=\"http://www.hl7.org/implement/standards/product_brief.cfm?product_id=83\" rel=\"nofollow\">here</a></li>\n<li>For any suggestion, feature or bug fix, you can report an issue <a href=\"https://github.com/weynelucas/python-xml-hl7/issues\" rel=\"nofollow\">here</a>. Or submit a pull request</li>\n<li>For handle HL7 messages in original stream format, use solutions like <a href=\"http://python-hl7.readthedocs.io/en/latest/\" rel=\"nofollow\">python-hl7</a> or <a href=\"http://hl7apy.org/\" rel=\"nofollow\">HL7apy</a></li>\n</ul>\n<h2>Release Notes</h2>\n<ul>\n<li>1.0.0 - First release</li>\n<li>1.1.0 - Find <code>OBX</code> segments with <code>get_obx</code> and <code>get_obx_value</code></li>\n<li>1.2.0 - String representation for client and container objects</li>\n<li>1.3.0 - Add Travis and Codecov support</li>\n</ul>\n\n          </div>"}, "last_serial": 5457856, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "52b94c8caaf787fe0aff0923357a2a1c", "sha256": "ead4e4f4a06e5c654962ced1053ae8521ceee0451f1c9d999f5a276d8ffeecde"}, "downloads": -1, "filename": "python-xml-hl7-1.0.0.tar.gz", "has_sig": false, "md5_digest": "52b94c8caaf787fe0aff0923357a2a1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9861, "upload_time": "2018-08-08T20:55:31", "upload_time_iso_8601": "2018-08-08T20:55:31.182851Z", "url": "https://files.pythonhosted.org/packages/c1/84/3ad3c9705bb3df1fe3110e2e703202c480a5a3a99832175761af390c74e1/python-xml-hl7-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "535863db9b4c4d6c7b1d70bce99bb832", "sha256": "8fdcb9148d376a6320ad3647ae799c1501e053fac0671970343f8e596821b3bd"}, "downloads": -1, "filename": "python-xml-hl7-1.1.0.zip", "has_sig": false, "md5_digest": "535863db9b4c4d6c7b1d70bce99bb832", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19100, "upload_time": "2018-08-13T13:30:19", "upload_time_iso_8601": "2018-08-13T13:30:19.447018Z", "url": "https://files.pythonhosted.org/packages/32/2a/4bd8489d2055f88e447cad60c45f10636b4d477e31c3d74935080b8fa394/python-xml-hl7-1.1.0.zip", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "19405142b94953815df86ddd9b11531d", "sha256": "0b4cf4b167e1befa3a8e1d9f105dd8dd82de4545fd1cfc14fa0f9a0ac2bb11d4"}, "downloads": -1, "filename": "python-xml-hl7-1.2.0.tar.gz", "has_sig": false, "md5_digest": "19405142b94953815df86ddd9b11531d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10617, "upload_time": "2018-08-14T20:22:26", "upload_time_iso_8601": "2018-08-14T20:22:26.489201Z", "url": "https://files.pythonhosted.org/packages/93/31/d80b84ca48375ae7b9a9210275f8f31fcedc8c710b64232de303b923ede5/python-xml-hl7-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "3bfd9b863675d2f809efaa27a2db84c2", "sha256": "25acc48c70bea60eb766b3d09a928c26dd076c8c99f9be8a00d9ecdc75832f10"}, "downloads": -1, "filename": "python-xml-hl7-1.3.0.tar.gz", "has_sig": false, "md5_digest": "3bfd9b863675d2f809efaa27a2db84c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11813, "upload_time": "2019-06-27T16:46:41", "upload_time_iso_8601": "2019-06-27T16:46:41.963457Z", "url": "https://files.pythonhosted.org/packages/88/c6/ce3386d2fbc493c748b3e683493e9aca7545736e741dbfb943428cc71a05/python-xml-hl7-1.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3bfd9b863675d2f809efaa27a2db84c2", "sha256": "25acc48c70bea60eb766b3d09a928c26dd076c8c99f9be8a00d9ecdc75832f10"}, "downloads": -1, "filename": "python-xml-hl7-1.3.0.tar.gz", "has_sig": false, "md5_digest": "3bfd9b863675d2f809efaa27a2db84c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11813, "upload_time": "2019-06-27T16:46:41", "upload_time_iso_8601": "2019-06-27T16:46:41.963457Z", "url": "https://files.pythonhosted.org/packages/88/c6/ce3386d2fbc493c748b3e683493e9aca7545736e741dbfb943428cc71a05/python-xml-hl7-1.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:29 2020"}