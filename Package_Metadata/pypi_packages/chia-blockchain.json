{"info": {"author": "Mariano Sorgente", "author_email": "mariano@chia.net", "bugtrack_url": null, "classifiers": [], "description": "# chia-blockchain\nPlease check out the [wiki](https://github.com/Chia-Network/chia-blockchain/wiki) and [FAQ](https://github.com/Chia-Network/chia-blockchain/wiki/FAQ) for information on this project.\n\nPython 3.7 is required. Make sure your default python version is >=3.7 by typing `python3`.\n\nYou will need to enable [UPnP](https://www.homenethowto.com/ports-and-nat/upnp-automatic-port-forward/) on your router or add a NAT (for IPv4 but not IPv6) and firewall rules to allow TCP port 8444 access to your peer. These methods tend to be router make/model specific.\n\nFor alpha testnet most should only install harvesters, farmers, plotter and full nodes. Building timelords and VDFs is for sophisticated users in most environments. Chia Network and additional volunteers are running sufficient time lords for testnet consensus.\n\nAll data is now stored in $CHIA_ROOT or ~/.chia/VERSION-DIR/ if unset. You can find databases, keys, plots, logs here.\n\n## Step 1: Install the code\nTo install the chia-blockchain node, follow [these install](INSTALL.md) instructions according to your operating system.\n\nRemember that once you complete your install you **must be in the Python virtual environment** which you access from the chia-blockchain directory with the command `. ./activate`. Both dots are critical and once executed correctly your cli prompt will look something like `(venv) username@machine:~$` with the (venv) prepended. Use `deactivate` to exit the venv.\n\n## Step 2: Generate keys\nFirst, create some keys by running the following script:\n```bash\nchia-generate-keys\n```\n\n## Step 3a: Run a full node + wallet\nTo run a full node on port 8444, and connect to the testnet, run the following command.\nIf you want to see std::out log output, modify the logging.std_out variable in ./config/config.yaml.\n\n```bash\nchia-start-node &\nchia-start-wallet-gui &\n```\n\n## Step 3b: Run a farmer + full node + wallet\nInstead of running only a full node (as in 4a), you can also run a farmer.\nFarmers are entities in the network who use their hard drive space to try to create\nblocks (like Bitcoin's miners), and earn block rewards. First, you must generate some hard drive plots, which\ncan take a long time depending on the [size of the plots](https://github.com/Chia-Network/chia-blockchain/wiki/k-sizes)\n(the k variable). Then, run the farmer + full node with the following script. A full node is also started.\nYou can also change the working directory and\nfinal directory for plotting, with the \"-t\" and \"-d\" arguments to the create_plots script.\n```bash\nchia-create-plots -k 20 -n 10\nchia-start-farmer &\nchia-start-wallet-gui &\n```\n\n\n## Step 3c: Run a timelord + full node + wallet\n\n*Note*\nIf you want to run a timelord on Linux, see LINUX_TIMELORD.md.\n\nTimelords execute sequential verifiable delay functions (proofs of time), that get added to\nblocks to make them valid. This requires fast CPUs and a lot of memory as well as completing\nboth install steps above.\n```bash\nchia-start-timelord &\nchia-start-wallet-gui &\n```\n\n## Tips\nWhen running the servers on Mac OS, allow the application to accept incoming connections.\n\nUbuntu 19.xx, Amazon Linux 2, and CentOS 7.7 or newer are the easiest linux install environments currently.\n\nUPnP is enabled by default, to open port 8444 for incoming connections. If this causes issues,\nyou can disable it in the configuration. Some routers may require port forwarding, or enabling\nUPnP in the router configuration.\n\nDue to the nature of proof of space lookups by the harvester in the current alpha you should limit\nthe number of plots on a physical drive to 50 or less. This limit should significantly increase before beta.\n\nYou can also run the simulation, which runs all servers and multiple full nodes, locally, at once.\n\nNote the the simulation is local only and requires installation of timelords and VDFs.\n\nThe introducer will only know the local ips of the full nodes, so it cannot broadcast the correct\nips to external peers.\n\n```bash\nchia-start-sim\n```\n\nFor increased networking performance, install uvloop:\n```bash\npip install -e \".[uvloop]\"\n```\n\nYou can also use the [HTTP RPC](https://github.com/Chia-Network/chia-blockchain/wiki/Networking-and-Serialization#rpc) api to access information and control the full node:\n\n\n```bash\ncurl -X POST http://localhost:8555/get_blockchain_state\ncurl -d '{\"header_hash\":\"afe223d75d40dd7bd19bf35846d0c9dce608bfc77ee5baa9f9cd6b98436e428b\"}' -H \"Content-Type: application/json\" -X POST http://localhost:8555/get_header\n```", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "chia blockchain node", "license": "Apache License", "maintainer": "", "maintainer_email": "", "name": "chia-blockchain", "package_url": "https://pypi.org/project/chia-blockchain/", "platform": "", "project_url": "https://pypi.org/project/chia-blockchain/", "project_urls": null, "release_url": "https://pypi.org/project/chia-blockchain/0.1/", "requires_dist": null, "requires_python": ">=3.7, <4", "summary": "Chia proof of space plotting, proving, and verifying (wraps C++)", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># chia-blockchain\nPlease check out the [wiki](<a href=\"https://github.com/Chia-Network/chia-blockchain/wiki\" rel=\"nofollow\">https://github.com/Chia-Network/chia-blockchain/wiki</a>) and [FAQ](<a href=\"https://github.com/Chia-Network/chia-blockchain/wiki/FAQ\" rel=\"nofollow\">https://github.com/Chia-Network/chia-blockchain/wiki/FAQ</a>) for information on this project.</p>\n<p>Python 3.7 is required. Make sure your default python version is &gt;=3.7 by typing <cite>python3</cite>.</p>\n<p>You will need to enable [UPnP](<a href=\"https://www.homenethowto.com/ports-and-nat/upnp-automatic-port-forward/\" rel=\"nofollow\">https://www.homenethowto.com/ports-and-nat/upnp-automatic-port-forward/</a>) on your router or add a NAT (for IPv4 but not IPv6) and firewall rules to allow TCP port 8444 access to your peer. These methods tend to be router make/model specific.</p>\n<p>For alpha testnet most should only install harvesters, farmers, plotter and full nodes. Building timelords and VDFs is for sophisticated users in most environments. Chia Network and additional volunteers are running sufficient time lords for testnet consensus.</p>\n<p>All data is now stored in $CHIA_ROOT or ~/.chia/VERSION-DIR/ if unset. You can find databases, keys, plots, logs here.</p>\n<p>## Step 1: Install the code\nTo install the chia-blockchain node, follow [these install](INSTALL.md) instructions according to your operating system.</p>\n<p>Remember that once you complete your install you <strong>must be in the Python virtual environment</strong> which you access from the chia-blockchain directory with the command <cite>. ./activate</cite>. Both dots are critical and once executed correctly your cli prompt will look something like <cite>(venv) username@machine:~$</cite> with the (venv) prepended. Use <cite>deactivate</cite> to exit the venv.</p>\n<p>## Step 2: Generate keys\nFirst, create some keys by running the following script:\n<tt>`bash\n<span class=\"pre\">chia-generate-keys</span>\n`</tt></p>\n<p>## Step 3a: Run a full node + wallet\nTo run a full node on port 8444, and connect to the testnet, run the following command.\nIf you want to see std::out log output, modify the logging.std_out variable in ./config/config.yaml.</p>\n<p><tt>`bash\n<span class=\"pre\">chia-start-node</span> &amp;\n<span class=\"pre\">chia-start-wallet-gui</span> &amp;\n`</tt></p>\n<p>## Step 3b: Run a farmer + full node + wallet\nInstead of running only a full node (as in 4a), you can also run a farmer.\nFarmers are entities in the network who use their hard drive space to try to create\nblocks (like Bitcoin\u2019s miners), and earn block rewards. First, you must generate some hard drive plots, which\ncan take a long time depending on the [size of the plots](<a href=\"https://github.com/Chia-Network/chia-blockchain/wiki/k-sizes\" rel=\"nofollow\">https://github.com/Chia-Network/chia-blockchain/wiki/k-sizes</a>)\n(the k variable). Then, run the farmer + full node with the following script. A full node is also started.\nYou can also change the working directory and\nfinal directory for plotting, with the \u201c-t\u201d and \u201c-d\u201d arguments to the create_plots script.\n<tt>`bash\n<span class=\"pre\">chia-create-plots</span> <span class=\"pre\">-k</span> 20 <span class=\"pre\">-n</span> 10\n<span class=\"pre\">chia-start-farmer</span> &amp;\n<span class=\"pre\">chia-start-wallet-gui</span> &amp;\n`</tt></p>\n<p>## Step 3c: Run a timelord + full node + wallet</p>\n<p><em>Note</em>\nIf you want to run a timelord on Linux, see LINUX_TIMELORD.md.</p>\n<p>Timelords execute sequential verifiable delay functions (proofs of time), that get added to\nblocks to make them valid. This requires fast CPUs and a lot of memory as well as completing\nboth install steps above.\n<tt>`bash\n<span class=\"pre\">chia-start-timelord</span> &amp;\n<span class=\"pre\">chia-start-wallet-gui</span> &amp;\n`</tt></p>\n<p>## Tips\nWhen running the servers on Mac OS, allow the application to accept incoming connections.</p>\n<p>Ubuntu 19.xx, Amazon Linux 2, and CentOS 7.7 or newer are the easiest linux install environments currently.</p>\n<p>UPnP is enabled by default, to open port 8444 for incoming connections. If this causes issues,\nyou can disable it in the configuration. Some routers may require port forwarding, or enabling\nUPnP in the router configuration.</p>\n<p>Due to the nature of proof of space lookups by the harvester in the current alpha you should limit\nthe number of plots on a physical drive to 50 or less. This limit should significantly increase before beta.</p>\n<p>You can also run the simulation, which runs all servers and multiple full nodes, locally, at once.</p>\n<p>Note the the simulation is local only and requires installation of timelords and VDFs.</p>\n<p>The introducer will only know the local ips of the full nodes, so it cannot broadcast the correct\nips to external peers.</p>\n<p><tt>`bash\n<span class=\"pre\">chia-start-sim</span>\n`</tt></p>\n<p>For increased networking performance, install uvloop:\n<tt>`bash\npip install <span class=\"pre\">-e</span> <span class=\"pre\">\".[uvloop]\"</span>\n`</tt></p>\n<p>You can also use the [HTTP RPC](<a href=\"https://github.com/Chia-Network/chia-blockchain/wiki/Networking-and-Serialization#rpc\" rel=\"nofollow\">https://github.com/Chia-Network/chia-blockchain/wiki/Networking-and-Serialization#rpc</a>) api to access information and control the full node:</p>\n<p><tt>`bash\ncurl <span class=\"pre\">-X</span> POST <span class=\"pre\">http://localhost:8555/get_blockchain_state</span>\ncurl <span class=\"pre\">-d</span> <span class=\"pre\">'{\"header_hash\":\"afe223d75d40dd7bd19bf35846d0c9dce608bfc77ee5baa9f9cd6b98436e428b\"}'</span> <span class=\"pre\">-H</span> <span class=\"pre\">\"Content-Type:</span> application/json\" <span class=\"pre\">-X</span> POST <span class=\"pre\">http://localhost:8555/get_header</span>\n`</tt></p>\n\n          </div>"}, "last_serial": 7177398, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a19ffee8b0ba9f5691f83e90852ca6b2", "sha256": "330744a616e22657daa89356ba9bc2edf551beed27cd63c8f949e20b3ae86276"}, "downloads": -1, "filename": "chia-blockchain-0.1.tar.gz", "has_sig": false, "md5_digest": "a19ffee8b0ba9f5691f83e90852ca6b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 759702, "upload_time": "2020-03-30T20:34:29", "upload_time_iso_8601": "2020-03-30T20:34:29.274898Z", "url": "https://files.pythonhosted.org/packages/16/2a/8eb51f77bdc8bd1e6348284783118bf1a3466da07c751411b468d2be7e98/chia-blockchain-0.1.tar.gz", "yanked": false}], "1.0b1": [{"comment_text": "", "digests": {"md5": "8dee2406c84016c52ce7f47e7671dab2", "sha256": "7dfb2a968234b9a102cace52fc3bc4cc5a5560d44ad15dc6bb6067b01418d151"}, "downloads": -1, "filename": "chia-blockchain-1.0b1.tar.gz", "has_sig": false, "md5_digest": "8dee2406c84016c52ce7f47e7671dab2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 766272, "upload_time": "2020-04-02T21:32:58", "upload_time_iso_8601": "2020-04-02T21:32:58.495393Z", "url": "https://files.pythonhosted.org/packages/bd/96/a884855cf89d4d7bc3f2623f801db1ab6bd523eed9b533076f90a5853d08/chia-blockchain-1.0b1.tar.gz", "yanked": false}], "1.0b2": [{"comment_text": "", "digests": {"md5": "7154d43b50613bf60d40f22caf7f66ff", "sha256": "a9c12747fd846593d5a4fd08bbdeedb81e3d2fc7ba43933ff9ec4a5e1ccd9f77"}, "downloads": -1, "filename": "chia-blockchain-1.0b2.tar.gz", "has_sig": false, "md5_digest": "7154d43b50613bf60d40f22caf7f66ff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 766314, "upload_time": "2020-04-04T19:42:16", "upload_time_iso_8601": "2020-04-04T19:42:16.185024Z", "url": "https://files.pythonhosted.org/packages/52/25/559aa95d16d4d206a7f29eaf367fdfecb3426d07fac15781eb3192f5a788/chia-blockchain-1.0b2.tar.gz", "yanked": false}], "1.0b3": [{"comment_text": "", "digests": {"md5": "97972a2b17732b793b680c11fdacb82d", "sha256": "ec72aa28230d7e56d6ef61dd2f995007fbe4fd8d8f9bae1e40a73c31d493b769"}, "downloads": -1, "filename": "chia-blockchain-1.0b3.tar.gz", "has_sig": false, "md5_digest": "97972a2b17732b793b680c11fdacb82d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 775203, "upload_time": "2020-04-09T04:34:43", "upload_time_iso_8601": "2020-04-09T04:34:43.771028Z", "url": "https://files.pythonhosted.org/packages/46/19/b71f6a4f01d666ff69a142829a3061c439bf1740dac82144dfe0a491b166/chia-blockchain-1.0b3.tar.gz", "yanked": false}], "1.0b4": [{"comment_text": "", "digests": {"md5": "779efca410d1709698b74ac6f6fd3021", "sha256": "f5d9f5e6a743b29d9eee816534f22b6dca496a2a3add161f79f29fce797f1629"}, "downloads": -1, "filename": "chia-blockchain-1.0b4.tar.gz", "has_sig": false, "md5_digest": "779efca410d1709698b74ac6f6fd3021", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 872405, "upload_time": "2020-04-30T00:28:18", "upload_time_iso_8601": "2020-04-30T00:28:18.746142Z", "url": "https://files.pythonhosted.org/packages/9d/db/56cdff1a87241ca70305bfd0f11d2cd12c1da7873c491b5fb942612ce36d/chia-blockchain-1.0b4.tar.gz", "yanked": false}], "1.0b5": [{"comment_text": "", "digests": {"md5": "27a65d8e7f173a44e795ef857c3bd461", "sha256": "dd577de5af455e11cdf461e498b675142cf6211a58656b5bbff7e4bc87a80715"}, "downloads": -1, "filename": "chia-blockchain-1.0b5.tar.gz", "has_sig": false, "md5_digest": "27a65d8e7f173a44e795ef857c3bd461", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 875447, "upload_time": "2020-05-06T04:13:21", "upload_time_iso_8601": "2020-05-06T04:13:21.296846Z", "url": "https://files.pythonhosted.org/packages/d8/87/e2f4434f84e935347f8be2ab10c96611a31b1f55ac532152e6ab4414eb5e/chia-blockchain-1.0b5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a19ffee8b0ba9f5691f83e90852ca6b2", "sha256": "330744a616e22657daa89356ba9bc2edf551beed27cd63c8f949e20b3ae86276"}, "downloads": -1, "filename": "chia-blockchain-0.1.tar.gz", "has_sig": false, "md5_digest": "a19ffee8b0ba9f5691f83e90852ca6b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 759702, "upload_time": "2020-03-30T20:34:29", "upload_time_iso_8601": "2020-03-30T20:34:29.274898Z", "url": "https://files.pythonhosted.org/packages/16/2a/8eb51f77bdc8bd1e6348284783118bf1a3466da07c751411b468d2be7e98/chia-blockchain-0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:36 2020"}