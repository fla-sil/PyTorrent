{"info": {"author": "victor-galisson", "author_email": "victor.galisson@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# pySankey2\n\nUses matplotlib to create simple <a href=\"https://en.wikipedia.org/wiki/Sankey_diagram\">\nSankey diagrams</a> flowing from left to right.\n\nA fork of a fork of [pySankey](https://github.com/anazalea/pySankey).\n\n[![PyPI version](https://badge.fury.io/py/pySankey2.svg)](https://badge.fury.io/py/pySankey2)\n[![Build Status](https://travis-ci.org/vgalisson/pySankey.svg?branch=master)](https://travis-ci.org/vgalisson/pySankey)\n[![Coverage Status](https://coveralls.io/repos/github/vgalisson/pySankey/badge.svg?branch=master)](https://coveralls.io/github/vgalisson/pySankey?branch=master)\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n\n## Requirements\n\nRequires python-tk (for python 2.7) or python3-tk (for python 3.x) install with `apt-get` or your package manager.\n\nYou can install the other requirements with:\n\n``` bash\n    pip install -r requirements.txt\n```\n\n## Examples\n\nWith fruits.txt :\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>true</th>\n      <th>predicted</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>blueberry</td>\n      <td>orange</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>lime</td>\n      <td>orange</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>blueberry</td>\n      <td>lime</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>apple</td>\n      <td>orange</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>996</th>\n      <td>lime</td>\n      <td>orange</td>\n    </tr>\n    <tr>\n      <th>997</th>\n      <td>blueberry</td>\n      <td>orange</td>\n    </tr>\n    <tr>\n      <th>998</th>\n      <td>orange</td>\n      <td>banana</td>\n    </tr>\n    <tr>\n      <th>999</th>\n      <td>apple</td>\n      <td>lime</td>\n    </tr>\n  </tbody>\n</table>\n<p>1000 rows \u00d7 2 columns</p>\n</div>\n\nYou can generate a sankey's diagram with this code (`colorDict` is optional):\n\n```python\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom pysankey import sankey\n\ndf = pd.read_csv(\n    'pysankey/tests/fruits.txt', sep=' ', names=['true', 'predicted']\n)\ncolorDict = {\n    'apple':'#f71b1b',\n    'blueberry':'#1b7ef7',\n    'banana':'#f3f71b',\n    'lime':'#12e23f',\n    'orange':'#f78c1b',\n    'kiwi':'#9BD937'\n}\n\nax = sankey(\n    df['true'], df['predicted'], aspect=20, colorDict=colorDict,\n    leftLabels=['banana','orange','blueberry','apple','lime'],\n    rightLabels=['orange','banana','blueberry','apple','lime','kiwi'],\n    fontsize=12\n)\n\nplt.show() # to display\nplt.savefig('fruit.png', bbox_inches='tight') # to save\n```\n\n\nWith customer-goods.csv :\n\n```\n,customer,good,revenue\n0,John,fruit,5.5\n1,Mike,meat,11.0\n2,Betty,drinks,7.0\n3,Ben,fruit,4.0\n4,Betty,bread,2.0\n5,John,bread,2.5\n6,John,drinks,8.0\n7,Ben,bread,2.0\n8,Mike,bread,3.5\n9,John,meat,13.0\n```\n\nYou could also weight:\n\n```python\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom pysankey import sankey\n\ndf = pd.read_csv(\n    'pysankey/tests/customers-goods.csv', sep=',',\n    names=['id', 'customer', 'good', 'revenue']\n)\nweight = df['revenue'].values[1:].astype(float)\n\nax = sankey(\n      left=df['customer'].values[1:], right=df['good'].values[1:],\n      rightWeight=weight, leftWeight=weight, aspect=20, fontsize=20\n)\n\nplt.show() # to display\nplt.savefig('customers-goods.png', bbox_inches='tight') # to save\n```\n\n\nSimilar to seaborn, you can pass a matplotlib `Axes` to `sankey` function with the keyword `ax=`:\n\n```python\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom pysankey import sankey\n\ndf = pd.read_csv(\n        'pysankey/tests/fruits.txt',\n        sep=' ', names=['true', 'predicted']\n)\ncolorDict = {\n    'apple': '#f71b1b',\n    'blueberry': '#1b7ef7',\n    'banana': '#f3f71b',\n    'lime': '#12e23f',\n    'orange': '#f78c1b'\n}\n\nax1 = plt.axes()\n\nax1 = sankey(\n      df['true'], df['predicted'], aspect=20, colorDict=colorDict,\n      fontsize=12, ax=ax1\n)\n\nplt.show()\n```\n\n## Important informations\n\nUse of `figureName`, `closePlot` and `figSize` in `sankey()` has been removed.\nThis is done so matplotlib is used more transparently as this [issue] suggested (https://github.com/anazalea/pySankey/issues/26#issue-429312025) on the original github repo.\n\nNow, `sankey()` does less of the customization and let the user do it to their liking by returning a matplotlib `Axes` object, which mean the user also has access to the `Figure` to customise.\nThen they can choose what to do with it - showing it, saving it with much more flexibility.\n\n### Recommended changes to your code from pySankey\n - To save a figure, after `sankey()`, one can simply do:\n  ```python\n    plt.savefig(\"<figureName>.png\", bbox_inches=\"tight\", dpi=150)\n  ```\n\n - To display the diagram, simply do `plt.show()` after `sankey()`.\n\n- You can modify the sankey size by changing the one from the matplotlib figure.\n  ```python\n    plt.gcf().set_size_inches(figSize)\n  ```\n\n- It is possible to modify the diagram font looks, for example, add the following lines before calling `sankey()` :\n  ```python\n    plt.rc(\"text\", usetex=False)\n    plt.rc(\"font\", family=\"serif\")\n  ```\n\n## Package development\n\n### Lint\n\n\tpylint pysankey\n\n### Testing\n\n\tpython -m unittest\n\n### Coverage\n\n\tcoverage run -m unittest\n\tcoverage html\n\t# Open htmlcov/index.html in a navigator\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vgalisson/pySankey", "keywords": "", "license": "GNU General Public License v3.0", "maintainer": "", "maintainer_email": "", "name": "pySankey2", "package_url": "https://pypi.org/project/pySankey2/", "platform": "", "project_url": "https://pypi.org/project/pySankey2/", "project_urls": {"Homepage": "https://github.com/vgalisson/pySankey"}, "release_url": "https://pypi.org/project/pySankey2/2.0.1/", "requires_dist": ["matplotlib (>=2.1.0rc1)", "seaborn (>=0.8.1)", "numpy (>=1.13.3)"], "requires_python": "", "summary": "Make simple, pretty Sankey Diagrams as a matplotlib object", "version": "2.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pySankey2</h1>\n<p>Uses matplotlib to create simple <a href=\"https://en.wikipedia.org/wiki/Sankey_diagram\" rel=\"nofollow\">\nSankey diagrams</a> flowing from left to right.</p>\n<p>A fork of a fork of <a href=\"https://github.com/anazalea/pySankey\" rel=\"nofollow\">pySankey</a>.</p>\n<p><a href=\"https://badge.fury.io/py/pySankey2\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9922f47ec9e6121ca80ccd31341cf3373bd2a7e9/68747470733a2f2f62616467652e667572792e696f2f70792f707953616e6b6579322e737667\"></a>\n<a href=\"https://travis-ci.org/vgalisson/pySankey\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa0fd6e8f23dbc973c20bdc2f93a0826658dcda0/68747470733a2f2f7472617669732d63692e6f72672f7667616c6973736f6e2f707953616e6b65792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/vgalisson/pySankey?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/17acb01a2eb48f1cb495aeef2c1388c657df0195/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7667616c6973736f6e2f707953616e6b65792f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://www.gnu.org/licenses/gpl-3.0\" rel=\"nofollow\"><img alt=\"License: GPL v3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8de17537dd1659a5a076ce547de301e27c839e67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76332d626c75652e737667\"></a></p>\n<h2>Requirements</h2>\n<p>Requires python-tk (for python 2.7) or python3-tk (for python 3.x) install with <code>apt-get</code> or your package manager.</p>\n<p>You can install the other requirements with:</p>\n<pre>    pip install -r requirements.txt\n</pre>\n<h2>Examples</h2>\n<p>With fruits.txt :</p>\n<div>\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>true</th>\n      <th>predicted</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>blueberry</td>\n      <td>orange</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>lime</td>\n      <td>orange</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>blueberry</td>\n      <td>lime</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>apple</td>\n      <td>orange</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>996</th>\n      <td>lime</td>\n      <td>orange</td>\n    </tr>\n    <tr>\n      <th>997</th>\n      <td>blueberry</td>\n      <td>orange</td>\n    </tr>\n    <tr>\n      <th>998</th>\n      <td>orange</td>\n      <td>banana</td>\n    </tr>\n    <tr>\n      <th>999</th>\n      <td>apple</td>\n      <td>lime</td>\n    </tr>\n  </tbody>\n</table>\n<p>1000 rows \u00d7 2 columns</p>\n</div>\n<p>You can generate a sankey's diagram with this code (<code>colorDict</code> is optional):</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pysankey</span> <span class=\"kn\">import</span> <span class=\"n\">sankey</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span>\n    <span class=\"s1\">'pysankey/tests/fruits.txt'</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">' '</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'true'</span><span class=\"p\">,</span> <span class=\"s1\">'predicted'</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n<span class=\"n\">colorDict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'apple'</span><span class=\"p\">:</span><span class=\"s1\">'#f71b1b'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'blueberry'</span><span class=\"p\">:</span><span class=\"s1\">'#1b7ef7'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'banana'</span><span class=\"p\">:</span><span class=\"s1\">'#f3f71b'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'lime'</span><span class=\"p\">:</span><span class=\"s1\">'#12e23f'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'orange'</span><span class=\"p\">:</span><span class=\"s1\">'#f78c1b'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'kiwi'</span><span class=\"p\">:</span><span class=\"s1\">'#9BD937'</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">sankey</span><span class=\"p\">(</span>\n    <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'true'</span><span class=\"p\">],</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'predicted'</span><span class=\"p\">],</span> <span class=\"n\">aspect</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">colorDict</span><span class=\"o\">=</span><span class=\"n\">colorDict</span><span class=\"p\">,</span>\n    <span class=\"n\">leftLabels</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'banana'</span><span class=\"p\">,</span><span class=\"s1\">'orange'</span><span class=\"p\">,</span><span class=\"s1\">'blueberry'</span><span class=\"p\">,</span><span class=\"s1\">'apple'</span><span class=\"p\">,</span><span class=\"s1\">'lime'</span><span class=\"p\">],</span>\n    <span class=\"n\">rightLabels</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'orange'</span><span class=\"p\">,</span><span class=\"s1\">'banana'</span><span class=\"p\">,</span><span class=\"s1\">'blueberry'</span><span class=\"p\">,</span><span class=\"s1\">'apple'</span><span class=\"p\">,</span><span class=\"s1\">'lime'</span><span class=\"p\">,</span><span class=\"s1\">'kiwi'</span><span class=\"p\">],</span>\n    <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">12</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span> <span class=\"c1\"># to display</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">'fruit.png'</span><span class=\"p\">,</span> <span class=\"n\">bbox_inches</span><span class=\"o\">=</span><span class=\"s1\">'tight'</span><span class=\"p\">)</span> <span class=\"c1\"># to save</span>\n</pre>\n<p>With customer-goods.csv :</p>\n<pre><code>,customer,good,revenue\n0,John,fruit,5.5\n1,Mike,meat,11.0\n2,Betty,drinks,7.0\n3,Ben,fruit,4.0\n4,Betty,bread,2.0\n5,John,bread,2.5\n6,John,drinks,8.0\n7,Ben,bread,2.0\n8,Mike,bread,3.5\n9,John,meat,13.0\n</code></pre>\n<p>You could also weight:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pysankey</span> <span class=\"kn\">import</span> <span class=\"n\">sankey</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span>\n    <span class=\"s1\">'pysankey/tests/customers-goods.csv'</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">','</span><span class=\"p\">,</span>\n    <span class=\"n\">names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'customer'</span><span class=\"p\">,</span> <span class=\"s1\">'good'</span><span class=\"p\">,</span> <span class=\"s1\">'revenue'</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n<span class=\"n\">weight</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'revenue'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">sankey</span><span class=\"p\">(</span>\n      <span class=\"n\">left</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'customer'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:],</span> <span class=\"n\">right</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'good'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:],</span>\n      <span class=\"n\">rightWeight</span><span class=\"o\">=</span><span class=\"n\">weight</span><span class=\"p\">,</span> <span class=\"n\">leftWeight</span><span class=\"o\">=</span><span class=\"n\">weight</span><span class=\"p\">,</span> <span class=\"n\">aspect</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">20</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span> <span class=\"c1\"># to display</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">'customers-goods.png'</span><span class=\"p\">,</span> <span class=\"n\">bbox_inches</span><span class=\"o\">=</span><span class=\"s1\">'tight'</span><span class=\"p\">)</span> <span class=\"c1\"># to save</span>\n</pre>\n<p>Similar to seaborn, you can pass a matplotlib <code>Axes</code> to <code>sankey</code> function with the keyword <code>ax=</code>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pysankey</span> <span class=\"kn\">import</span> <span class=\"n\">sankey</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span>\n        <span class=\"s1\">'pysankey/tests/fruits.txt'</span><span class=\"p\">,</span>\n        <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">' '</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'true'</span><span class=\"p\">,</span> <span class=\"s1\">'predicted'</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n<span class=\"n\">colorDict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'apple'</span><span class=\"p\">:</span> <span class=\"s1\">'#f71b1b'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'blueberry'</span><span class=\"p\">:</span> <span class=\"s1\">'#1b7ef7'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'banana'</span><span class=\"p\">:</span> <span class=\"s1\">'#f3f71b'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'lime'</span><span class=\"p\">:</span> <span class=\"s1\">'#12e23f'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'orange'</span><span class=\"p\">:</span> <span class=\"s1\">'#f78c1b'</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">ax1</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">axes</span><span class=\"p\">()</span>\n\n<span class=\"n\">ax1</span> <span class=\"o\">=</span> <span class=\"n\">sankey</span><span class=\"p\">(</span>\n      <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'true'</span><span class=\"p\">],</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'predicted'</span><span class=\"p\">],</span> <span class=\"n\">aspect</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">colorDict</span><span class=\"o\">=</span><span class=\"n\">colorDict</span><span class=\"p\">,</span>\n      <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"n\">ax1</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<h2>Important informations</h2>\n<p>Use of <code>figureName</code>, <code>closePlot</code> and <code>figSize</code> in <code>sankey()</code> has been removed.\nThis is done so matplotlib is used more transparently as this [issue] suggested (<a href=\"https://github.com/anazalea/pySankey/issues/26#issue-429312025\" rel=\"nofollow\">https://github.com/anazalea/pySankey/issues/26#issue-429312025</a>) on the original github repo.</p>\n<p>Now, <code>sankey()</code> does less of the customization and let the user do it to their liking by returning a matplotlib <code>Axes</code> object, which mean the user also has access to the <code>Figure</code> to customise.\nThen they can choose what to do with it - showing it, saving it with much more flexibility.</p>\n<h3>Recommended changes to your code from pySankey</h3>\n<ul>\n<li>To save a figure, after <code>sankey()</code>, one can simply do:</li>\n</ul>\n<pre>  <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;figureName&gt;.png\"</span><span class=\"p\">,</span> <span class=\"n\">bbox_inches</span><span class=\"o\">=</span><span class=\"s2\">\"tight\"</span><span class=\"p\">,</span> <span class=\"n\">dpi</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>\n<p>To display the diagram, simply do <code>plt.show()</code> after <code>sankey()</code>.</p>\n</li>\n<li>\n<p>You can modify the sankey size by changing the one from the matplotlib figure.</p>\n<pre>  <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">gcf</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_size_inches</span><span class=\"p\">(</span><span class=\"n\">figSize</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>It is possible to modify the diagram font looks, for example, add the following lines before calling <code>sankey()</code> :</p>\n<pre>  <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">rc</span><span class=\"p\">(</span><span class=\"s2\">\"text\"</span><span class=\"p\">,</span> <span class=\"n\">usetex</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n  <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">rc</span><span class=\"p\">(</span><span class=\"s2\">\"font\"</span><span class=\"p\">,</span> <span class=\"n\">family</span><span class=\"o\">=</span><span class=\"s2\">\"serif\"</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ul>\n<h2>Package development</h2>\n<h3>Lint</h3>\n<pre><code>pylint pysankey\n</code></pre>\n<h3>Testing</h3>\n<pre><code>python -m unittest\n</code></pre>\n<h3>Coverage</h3>\n<pre><code>coverage run -m unittest\ncoverage html\n# Open htmlcov/index.html in a navigator\n</code></pre>\n\n          </div>"}, "last_serial": 6175603, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "16e8f9aacc10af072a72821914161f18", "sha256": "aac5e25c052c4cdda376d1da64d0c5b7692cd12e2d996b96efc1d2331db50534"}, "downloads": -1, "filename": "pySankey2-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "16e8f9aacc10af072a72821914161f18", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21636, "upload_time": "2019-11-21T11:29:41", "upload_time_iso_8601": "2019-11-21T11:29:41.721642Z", "url": "https://files.pythonhosted.org/packages/04/b3/de953ad17aef354d6456db1591ef095c6ec4cca4fe65f690937c5babb819/pySankey2-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b49a02a468470619350d4981955cb1f", "sha256": "73563f9f26674cbd59e6e236b50a2b127a5ae08fe698258c5fd01af93eff8057"}, "downloads": -1, "filename": "pySankey2-2.0.0.tar.gz", "has_sig": false, "md5_digest": "9b49a02a468470619350d4981955cb1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 541085, "upload_time": "2019-11-21T11:29:44", "upload_time_iso_8601": "2019-11-21T11:29:44.714451Z", "url": "https://files.pythonhosted.org/packages/9f/08/9ef7b03453a781ae3b8583be798a466dfdc18bdf9963bc28c33ebba31363/pySankey2-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "4e9e1b27c08d712eaf2aa626ab942fbd", "sha256": "07d9ae117b9ac8c2be0350373728d65e45bdabb12bd701c305c78e0f7ace9a33"}, "downloads": -1, "filename": "pySankey2-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4e9e1b27c08d712eaf2aa626ab942fbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21771, "upload_time": "2019-11-21T15:08:23", "upload_time_iso_8601": "2019-11-21T15:08:23.671533Z", "url": "https://files.pythonhosted.org/packages/db/a6/62bb97bfefd43216fff10345a2c3763613fb61dbed71defcff337f764d4d/pySankey2-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ed4ff91f5aa1c112fca55c947de10ae", "sha256": "d22a8361269a2eadc5226a6cb430208fb0f79f0c3d62bd9afc89087aad150ba6"}, "downloads": -1, "filename": "pySankey2-2.0.1.tar.gz", "has_sig": false, "md5_digest": "3ed4ff91f5aa1c112fca55c947de10ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17449, "upload_time": "2019-11-21T15:08:25", "upload_time_iso_8601": "2019-11-21T15:08:25.326766Z", "url": "https://files.pythonhosted.org/packages/fb/2e/73a768a9949b2e174be34ac79530d4709c76a8af87a690cf3f986f45fab8/pySankey2-2.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4e9e1b27c08d712eaf2aa626ab942fbd", "sha256": "07d9ae117b9ac8c2be0350373728d65e45bdabb12bd701c305c78e0f7ace9a33"}, "downloads": -1, "filename": "pySankey2-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4e9e1b27c08d712eaf2aa626ab942fbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21771, "upload_time": "2019-11-21T15:08:23", "upload_time_iso_8601": "2019-11-21T15:08:23.671533Z", "url": "https://files.pythonhosted.org/packages/db/a6/62bb97bfefd43216fff10345a2c3763613fb61dbed71defcff337f764d4d/pySankey2-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ed4ff91f5aa1c112fca55c947de10ae", "sha256": "d22a8361269a2eadc5226a6cb430208fb0f79f0c3d62bd9afc89087aad150ba6"}, "downloads": -1, "filename": "pySankey2-2.0.1.tar.gz", "has_sig": false, "md5_digest": "3ed4ff91f5aa1c112fca55c947de10ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17449, "upload_time": "2019-11-21T15:08:25", "upload_time_iso_8601": "2019-11-21T15:08:25.326766Z", "url": "https://files.pythonhosted.org/packages/fb/2e/73a768a9949b2e174be34ac79530d4709c76a8af87a690cf3f986f45fab8/pySankey2-2.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:24 2020"}