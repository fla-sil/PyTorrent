{"info": {"author": "Justin Locsei", "author_email": "justin.locsei@oberlin.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Diplomat\n========\n\nDiplomat provides Django models for the countries and languages covered by the \nISO 3166 and ISO 639 standards, respectively.  Diplomat is implemented as a \nwrapper around a subset of pycountry, and its interface should feel familiar to \nusers of that module.\n\nInstallation\n============\n\nAdd `diplomat` to your `INSTALLED_APPS`, then run the `syncdb` command, which\nwill create the required language and country models.\n\nModel Usage\n===========\n\nDiplomat's field models exactly mirror the attributes of the pycountry database\nobjects that they imitate.  In addition to these attributes, custom manager\nmethods are available for some of the objects provided by diplomat.\n\nLanguages\n---------\n\nThe `ISOLanguage` model is a wrapper around the `pycountry.db.Language` model.\n\n    >>> from diplomat.models import ISOLanguage\n    >>> aragonese = ISOLanguage.objects.get(alpha2='an')\n    >>> aragonese.alpha2\n    u'an'\n    >>> aragonese.bibliographic\n    u'arg'\n    >>> aragonese.terminology\n    u'arg'\n    >>> aragonese.name\n    u'Aragonese'\n\nIn addition, it provides a custom model manager.\n\n    >>> from diplomat.models import ISOLanguage\n    >>> all_languages = ISOLanguage.objects.all()\n    >>> basic_languages = ISOLanguage.objects.basic()\n    >>> usable_languages = ISOLanguage.objects.usable()\n    >>> all_languages.count() > usable_languages.count() > basic_languages.count()\n    True\n    >>> all([l.alpha2 for l in all_languages])\n    False\n    >>> all([l.alpha2 for l in basic_languages])\n    True\n    >>> all_languages.filter(terminology='zxx').count()\n    1\n    >>> usable_languages.filter(terminology='zxx').count()\n    0\n\nCountries\n---------\n\nThe `ISOCountry` model is a wrapper around the `pycountry.db.Country` model.\n\n    >>> from diplomat.models import ISOCountry\n    >>> germany = ISOCountry.objects.get(alpha2='DE')\n    >>> germany.alpha2\n    u'DE'\n    >>> germany.alpha3\n    u'DEU'\n    >>> germany.numeric\n    u'276'\n    >>> germany.name\n    u'Germany'\n    >>> germany.official_name\n    u'Federal Republic of Germany'\n\nField Usage\n===========\n\nDiplomat provides a series of simple form fields for selecting country and\nlanguage objects.  These fields, which can be imported from `diplomat.fields`,\nare as follows:\n\n**LanguageChoiceField**  \nA field for selecting a single usable language.\n\n**LanguageMultipleChoiceField**  \nA field for selecting multiple usable languages.\n\n**BasicLanguageChoiceField**  \nA field for selecting a single basic language covered by ISO 639-1.\n\n**BasicLanguageMultipleChoiceField**  \nA field for selecting multiple basic languages covered by ISO 639-1.\n\n**CountryChoiceField**  \nA field for selecting a single country.\n\n**CountryMultipleChoiceField**  \nA field for selecting multiple countries.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/oberlin/django-diplomat/zipball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/oberlin/django-diplomat/", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-diplomat", "package_url": "https://pypi.org/project/django-diplomat/", "platform": "any", "project_url": "https://pypi.org/project/django-diplomat/", "project_urls": {"Download": "https://github.com/oberlin/django-diplomat/zipball/master", "Homepage": "http://github.com/oberlin/django-diplomat/"}, "release_url": "https://pypi.org/project/django-diplomat/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Language and country models for Django derived from the pycountry module.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"diplomat\">\n<h2>Diplomat</h2>\n<p>Diplomat provides Django models for the countries and languages covered by the\nISO 3166 and ISO 639 standards, respectively.  Diplomat is implemented as a\nwrapper around a subset of pycountry, and its interface should feel familiar to\nusers of that module.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Add <cite>diplomat</cite> to your <cite>INSTALLED_APPS</cite>, then run the <cite>syncdb</cite> command, which\nwill create the required language and country models.</p>\n</div>\n<div id=\"model-usage\">\n<h2>Model Usage</h2>\n<p>Diplomat\u2019s field models exactly mirror the attributes of the pycountry database\nobjects that they imitate.  In addition to these attributes, custom manager\nmethods are available for some of the objects provided by diplomat.</p>\n<div id=\"languages\">\n<h3>Languages</h3>\n<p>The <cite>ISOLanguage</cite> model is a wrapper around the <cite>pycountry.db.Language</cite> model.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from diplomat.models import ISOLanguage\n&gt;&gt;&gt; aragonese = ISOLanguage.objects.get(alpha2='an')\n&gt;&gt;&gt; aragonese.alpha2\nu'an'\n&gt;&gt;&gt; aragonese.bibliographic\nu'arg'\n&gt;&gt;&gt; aragonese.terminology\nu'arg'\n&gt;&gt;&gt; aragonese.name\nu'Aragonese'\n</pre>\n</blockquote>\n<p>In addition, it provides a custom model manager.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from diplomat.models import ISOLanguage\n&gt;&gt;&gt; all_languages = ISOLanguage.objects.all()\n&gt;&gt;&gt; basic_languages = ISOLanguage.objects.basic()\n&gt;&gt;&gt; usable_languages = ISOLanguage.objects.usable()\n&gt;&gt;&gt; all_languages.count() &gt; usable_languages.count() &gt; basic_languages.count()\nTrue\n&gt;&gt;&gt; all([l.alpha2 for l in all_languages])\nFalse\n&gt;&gt;&gt; all([l.alpha2 for l in basic_languages])\nTrue\n&gt;&gt;&gt; all_languages.filter(terminology='zxx').count()\n1\n&gt;&gt;&gt; usable_languages.filter(terminology='zxx').count()\n0\n</pre>\n</blockquote>\n</div>\n<div id=\"countries\">\n<h3>Countries</h3>\n<p>The <cite>ISOCountry</cite> model is a wrapper around the <cite>pycountry.db.Country</cite> model.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from diplomat.models import ISOCountry\n&gt;&gt;&gt; germany = ISOCountry.objects.get(alpha2='DE')\n&gt;&gt;&gt; germany.alpha2\nu'DE'\n&gt;&gt;&gt; germany.alpha3\nu'DEU'\n&gt;&gt;&gt; germany.numeric\nu'276'\n&gt;&gt;&gt; germany.name\nu'Germany'\n&gt;&gt;&gt; germany.official_name\nu'Federal Republic of Germany'\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"field-usage\">\n<h2>Field Usage</h2>\n<p>Diplomat provides a series of simple form fields for selecting country and\nlanguage objects.  These fields, which can be imported from <cite>diplomat.fields</cite>,\nare as follows:</p>\n<p><strong>LanguageChoiceField</strong>\nA field for selecting a single usable language.</p>\n<p><strong>LanguageMultipleChoiceField</strong>\nA field for selecting multiple usable languages.</p>\n<p><strong>BasicLanguageChoiceField</strong>\nA field for selecting a single basic language covered by ISO 639-1.</p>\n<p><strong>BasicLanguageMultipleChoiceField</strong>\nA field for selecting multiple basic languages covered by ISO 639-1.</p>\n<p><strong>CountryChoiceField</strong>\nA field for selecting a single country.</p>\n<p><strong>CountryMultipleChoiceField</strong>\nA field for selecting multiple countries.</p>\n</div>\n\n          </div>"}, "last_serial": 789468, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "2139176d66310f91fc0609b9d2fa0138", "sha256": "6fd2380e9dfb7934b765e14241e32b2a863763465c35a59f5faa4ed585cffbf9"}, "downloads": -1, "filename": "django-diplomat-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2139176d66310f91fc0609b9d2fa0138", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25439, "upload_time": "2012-04-25T20:19:03", "upload_time_iso_8601": "2012-04-25T20:19:03.885149Z", "url": "https://files.pythonhosted.org/packages/56/a6/d5fed141aed1f0b631638feed808345d070173e796ab587316c1f93bd019/django-diplomat-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2139176d66310f91fc0609b9d2fa0138", "sha256": "6fd2380e9dfb7934b765e14241e32b2a863763465c35a59f5faa4ed585cffbf9"}, "downloads": -1, "filename": "django-diplomat-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2139176d66310f91fc0609b9d2fa0138", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25439, "upload_time": "2012-04-25T20:19:03", "upload_time_iso_8601": "2012-04-25T20:19:03.885149Z", "url": "https://files.pythonhosted.org/packages/56/a6/d5fed141aed1f0b631638feed808345d070173e796ab587316c1f93bd019/django-diplomat-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:34 2020"}