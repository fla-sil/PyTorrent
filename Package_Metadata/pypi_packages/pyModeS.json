{"info": {"author": "Junzi Sun", "author_email": "j.sun-1@tudelft.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries"], "description": "The Python ADS-B/Mode-S Decoder\n===============================\n\nPyModeS is a Python library designed to decode Mode-S (including ADS-B) message. It can be imported to your python project or used as a standalone tool to view and save live traffic data.\n\nThis is a project created by Junzi Sun, who works at `TU Delft <https://www.tudelft.nl/en/>`_, `Aerospace Engineering Faculty <https://www.tudelft.nl/en/ae/>`_, `CNS/ATM research group <http://cs.lr.tudelft.nl/atm/>`_. It is supported by many `contributors <https://github.com/junzis/pyModeS/graphs/contributors>`_ from different institutions.\n\nIntroduction\n------------\n\npyModeS supports the decoding of following types of messages:\n\n- DF4 / DF20: Altitude code\n- DF5 / DF21: Identity code (squawk code)\n\n- DF17 / DF18: Automatic Dependent Surveillance-Broadcast (ADS-B)\n\n  - TC=1-4  / BDS 0,8: Aircraft identification and category\n  - TC=5-8  / BDS 0,6: Surface position\n  - TC=9-18 / BDS 0,5: Airborne position\n  - TC=19   / BDS 0,9: Airborne velocity\n  - TC=28   / BDS 6,1: Airborne status [to be implemented]\n  - TC=29   / BDS 6,2: Target state and status information [to be implemented]\n  - TC=31   / BDS 6,5: Aircraft operational status [to be implemented]\n\n- DF20 / DF21: Mode-S Comm-B messages\n\n  - BDS 1,0: Data link capability report\n  - BDS 1,7: Common usage GICB capability report\n  - BDS 2,0: Aircraft identification\n  - BDS 3,0: ACAS active resolution advisory\n  - BDS 4,0: Selected vertical intention\n  - BDS 4,4: Meteorological routine air report (experimental)\n  - BDS 4,5: Meteorological hazard report (experimental)\n  - BDS 5,0: Track and turn report\n  - BDS 6,0: Heading and speed report\n\n\n\nIf you find this project useful for your research, please considering cite this tool as::\n\n  @article{sun2019pymodes,\n      author={J. {Sun} and H. {V\\^u} and J. {Ellerbroek} and J. M. {Hoekstra}},\n      journal={IEEE Transactions on Intelligent Transportation Systems},\n      title={pyModeS: Decoding Mode-S Surveillance Data for Open Air Transportation Research},\n      year={2019},\n      doi={10.1109/TITS.2019.2914770},\n      ISSN={1524-9050},\n  }\n\n\n\n\nResources\n-----------\nCheck out and contribute to this open-source project at:\nhttps://github.com/junzis/pyModeS\n\nDetailed manual on Mode-S decoding is published at:\nhttps://mode-s.org/decode\n\nThe API documentation of pyModeS is at:\nhttps://mode-s.org/api\n\n\n\nBasic installation\n-------------------\n\nInstallation examples::\n\n  # stable version\n  pip install pyModeS\n\n  # development version\n  pip install git+https://github.com/junzis/pyModeS\n\n\nDependencies ``numpy``, ``pyzmq`` and ``pyrtlsdr`` are installed automatically during previous installations processes.\n\nAdvanced installation (using c modules)\n------------------------------------------\n\nIf you want to make use of the (faster) c module, install ``pyModeS`` as follows::\n\n  git clone https://github.com/junzis/pyModeS\n  cd pyModeS\n  make ext\n  make install\n\n\nView live traffic (modeslive)\n----------------------------------------------------\n\nGeneral usage::\n\n  $ modeslive [-h] --source SOURCE [--connect SERVER PORT DATAYPE]\n              [--latlon LAT LON] [--show-uncertainty] [--dumpto DUMPTO]\n\n  arguments:\n   -h, --help            show this help message and exit\n   --source SOURCE       Choose data source, \"rtlsdr\" or \"net\"\n   --connect SERVER PORT DATATYPE\n                         Define server, port and data type. Supported data\n                         types are: ['raw', 'beast', 'skysense']\n   --latlon LAT LON      Receiver latitude and longitude, needed for the surface\n                         position, default none\n   --show-uncertainty    Display uncertainty values, default off\n   --dumpto DUMPTO       Folder to dump decoded output, default none\n\n\nLive with RTL-SDR\n*******************\n\nIf you have an RTL-SDR receiver plugged to the computer, you can connect it with ``rtlsdr`` source switch, shown as follows::\n\n  $ modeslive --source rtlsdr\n\n\nLive with network data\n***************************\n\nIf you want to connect to a TCP server that broadcast raw data. use can use ``net`` source switch, for example::\n\n  $ modeslive --source net --connect localhost 30002 raw\n  $ modeslive --source net --connect 127.0.0.1 30005 beast\n\n\n\nExample screenshot:\n\n.. image:: https://github.com/junzis/pyModeS/raw/master/doc/modeslive-screenshot.png\n   :width: 700px\n\n\nUse the library\n---------------\n\n.. code:: python\n\n  import pyModeS as pms\n\n\nCommon functions\n*****************\n\n.. code:: python\n\n  pms.df(msg)                 # Downlink Format\n  pms.icao(msg)               # Infer the ICAO address from the message\n  pms.crc(msg, encode=False)  # Perform CRC or generate parity bit\n\n  pms.hex2bin(str)      # Convert hexadecimal string to binary string\n  pms.bin2int(str)      # Convert binary string to integer\n  pms.hex2int(str)      # Convert hexadecimal string to integer\n  pms.gray2int(str)     # Convert grey code to integer\n\n\nCore functions for ADS-B decoding\n*********************************\n\n.. code:: python\n\n  pms.adsb.icao(msg)\n  pms.adsb.typecode(msg)\n\n  # Typecode 1-4\n  pms.adsb.callsign(msg)\n\n  # Typecode 5-8 (surface), 9-18 (airborne, barometric height), and 20-22 (airborne, GNSS height)\n  pms.adsb.position(msg_even, msg_odd, t_even, t_odd, lat_ref=None, lon_ref=None)\n  pms.adsb.airborne_position(msg_even, msg_odd, t_even, t_odd)\n  pms.adsb.surface_position(msg_even, msg_odd, t_even, t_odd, lat_ref, lon_ref)\n  pms.adsb.surface_velocity(msg)\n\n  pms.adsb.position_with_ref(msg, lat_ref, lon_ref)\n  pms.adsb.airborne_position_with_ref(msg, lat_ref, lon_ref)\n  pms.adsb.surface_position_with_ref(msg, lat_ref, lon_ref)\n\n  pms.adsb.altitude(msg)\n\n  # Typecode: 19\n  pms.adsb.velocity(msg)          # Handles both surface & airborne messages\n  pms.adsb.speed_heading(msg)     # Handles both surface & airborne messages\n  pms.adsb.airborne_velocity(msg)\n\n\nNote: When you have a fix position of the aircraft, it is convenient to use `position_with_ref()` method to decode with only one position message (either odd or even). This works with both airborne and surface position messages. But the reference position shall be within 180NM (airborne) or 45NM (surface) of the true position.\n\n\nDecode altitude replies in DF4 / DF20\n**************************************\n.. code:: python\n\n  pms.common.altcode(msg)   # Downlink format must be 4 or 20\n\n\nDecode identity replies in DF5 / DF21\n**************************************\n.. code:: python\n\n  pms.common.idcode(msg)   # Downlink format must be 5 or 21\n\n\n\nCommon Mode-S functions\n************************\n\n.. code:: python\n\n  pms.icao(msg)           # Infer the ICAO address from the message\n  pms.bds.infer(msg)      # Infer the Modes-S BDS register\n\n  # Check if BDS is 5,0 or 6,0, give reference speed, track, altitude (from ADS-B)\n  pms.bds.is50or60(msg, spd_ref, trk_ref, alt_ref)\n\n  # Check each BDS explicitly\n  pms.bds.bds10.is10(msg)\n  pms.bds.bds17.is17(msg)\n  pms.bds.bds20.is20(msg)\n  pms.bds.bds30.is30(msg)\n  pms.bds.bds40.is40(msg)\n  pms.bds.bds44.is44(msg)\n  pms.bds.bds50.is50(msg)\n  pms.bds.bds60.is60(msg)\n\n\n\nMode-S Elementary Surveillance (ELS)\n*************************************\n\n.. code:: python\n\n  pms.commb.ovc10(msg)      # Overlay capability, BDS 1,0\n  pms.commb.cap17(msg)      # GICB capability, BDS 1,7\n  pms.commb.cs20(msg)       # Callsign, BDS 2,0\n\n\nMode-S Enhanced Surveillance (EHS)\n***********************************\n\n.. code:: python\n\n  # BDS 4,0\n  pms.commb.selalt40mcp(msg)   # MCP/FCU selected altitude (ft)\n  pms.commb.selalt40fms(msg)   # FMS selected altitude (ft)\n  pms.commb.p40baro(msg)    # Barometric pressure (mb)\n\n  # BDS 5,0\n  pms.commb.roll50(msg)     # Roll angle (deg)\n  pms.commb.trk50(msg)      # True track angle (deg)\n  pms.commb.gs50(msg)       # Ground speed (kt)\n  pms.commb.rtrk50(msg)     # Track angle rate (deg/sec)\n  pms.commb.tas50(msg)      # True airspeed (kt)\n\n  # BDS 6,0\n  pms.commb.hdg60(msg)      # Magnetic heading (deg)\n  pms.commb.ias60(msg)      # Indicated airspeed (kt)\n  pms.commb.mach60(msg)     # Mach number (-)\n  pms.commb.vr60baro(msg)   # Barometric altitude rate (ft/min)\n  pms.commb.vr60ins(msg)    # Inertial vertical speed (ft/min)\n\n\nMeteorological routine air report (MRAR) [Experimental]\n********************************************************\n\n.. code:: python\n\n  # BDS 4,4\n  pms.commb.wind44(msg)     # Wind speed (kt) and direction (true) (deg)\n  pms.commb.temp44(msg)     # Static air temperature (C)\n  pms.commb.p44(msg)        # Average static pressure (hPa)\n  pms.commb.hum44(msg)      # Humidity (%)\n\n\nMeteorological hazard air report (MHR) [Experimental]\n*******************************************************\n\n.. code:: python\n\n  # BDS 4,5\n  pms.commb.turb45(msg)     # Turbulence level (0-3)\n  pms.commb.ws45(msg)       # Wind shear level (0-3)\n  pms.commb.mb45(msg)       # Microburst level (0-3)\n  pms.commb.ic45(msg)       # Icing level (0-3)\n  pms.commb.wv45(msg)       # Wake vortex level (0-3)\n  pms.commb.temp45(msg)     # Static air temperature (C)\n  pms.commb.p45(msg)        # Average static pressure (hPa)\n  pms.commb.rh45(msg)       # Radio height (ft)\n\n\n\nCustomize the streaming module\n******************************\nThe TCP client module from pyModeS can be re-used to stream and process Mode-S data as you like. You need to re-implement the ``handle_messages()`` function from the ``TcpClient`` class to write your own logic to handle the messages.\n\nHere is an example:\n\n.. code:: python\n\n  import pyModeS as pms\n  from pyModeS.extra.tcpclient import TcpClient\n\n  # define your custom class by extending the TcpClient\n  #   - implement your handle_messages() methods\n  class ADSBClient(TcpClient):\n      def __init__(self, host, port, rawtype):\n          super(ADSBClient, self).__init__(host, port, rawtype)\n\n      def handle_messages(self, messages):\n          for msg, ts in messages:\n              if len(msg) != 28:  # wrong data length\n                  continue\n\n              df = pms.df(msg)\n\n              if df != 17:  # not ADSB\n                  continue\n\n              if pms.crc(msg) !=0:  # CRC fail\n                  continue\n\n              icao = pms.adsb.icao(msg)\n              tc = pms.adsb.typecode(msg)\n\n              # TODO: write you magic code here\n              print(ts, icao, tc, msg)\n\n  # run new client, change the host, port, and rawtype if needed\n  client = ADSBClient(host='127.0.0.1', port=30005, rawtype='beast')\n  client.run()\n\n\nUnit test\n---------\nTo perform unit tests, ``pytest`` must be install first.\n\nBuild Cython extensions\n::\n\n  $ make ext\n\nRun unit tests\n::\n\n  $ make test\n\nClean build files\n::\n\n  $ make clean", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/junzis/pyModeS", "keywords": "Mode-S ADS-B EHS ELS Comm-B", "license": "GNU GPL v3", "maintainer": "", "maintainer_email": "", "name": "pyModeS", "package_url": "https://pypi.org/project/pyModeS/", "platform": "", "project_url": "https://pypi.org/project/pyModeS/", "project_urls": {"Homepage": "https://github.com/junzis/pyModeS"}, "release_url": "https://pypi.org/project/pyModeS/2.8/", "requires_dist": null, "requires_python": "", "summary": "Python Mode-S and ADS-B Decoder", "version": "2.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>PyModeS is a Python library designed to decode Mode-S (including ADS-B) message. It can be imported to your python project or used as a standalone tool to view and save live traffic data.</p>\n<p>This is a project created by Junzi Sun, who works at <a href=\"https://www.tudelft.nl/en/\" rel=\"nofollow\">TU Delft</a>, <a href=\"https://www.tudelft.nl/en/ae/\" rel=\"nofollow\">Aerospace Engineering Faculty</a>, <a href=\"http://cs.lr.tudelft.nl/atm/\" rel=\"nofollow\">CNS/ATM research group</a>. It is supported by many <a href=\"https://github.com/junzis/pyModeS/graphs/contributors\" rel=\"nofollow\">contributors</a> from different institutions.</p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>pyModeS supports the decoding of following types of messages:</p>\n<ul>\n<li>DF4 / DF20: Altitude code</li>\n<li>DF5 / DF21: Identity code (squawk code)</li>\n<li>DF17 / DF18: Automatic Dependent Surveillance-Broadcast (ADS-B)<ul>\n<li>TC=1-4  / BDS 0,8: Aircraft identification and category</li>\n<li>TC=5-8  / BDS 0,6: Surface position</li>\n<li>TC=9-18 / BDS 0,5: Airborne position</li>\n<li>TC=19   / BDS 0,9: Airborne velocity</li>\n<li>TC=28   / BDS 6,1: Airborne status [to be implemented]</li>\n<li>TC=29   / BDS 6,2: Target state and status information [to be implemented]</li>\n<li>TC=31   / BDS 6,5: Aircraft operational status [to be implemented]</li>\n</ul>\n</li>\n<li>DF20 / DF21: Mode-S Comm-B messages<ul>\n<li>BDS 1,0: Data link capability report</li>\n<li>BDS 1,7: Common usage GICB capability report</li>\n<li>BDS 2,0: Aircraft identification</li>\n<li>BDS 3,0: ACAS active resolution advisory</li>\n<li>BDS 4,0: Selected vertical intention</li>\n<li>BDS 4,4: Meteorological routine air report (experimental)</li>\n<li>BDS 4,5: Meteorological hazard report (experimental)</li>\n<li>BDS 5,0: Track and turn report</li>\n<li>BDS 6,0: Heading and speed report</li>\n</ul>\n</li>\n</ul>\n<p>If you find this project useful for your research, please considering cite this tool as:</p>\n<pre>@article{sun2019pymodes,\n    author={J. {Sun} and H. {V\\^u} and J. {Ellerbroek} and J. M. {Hoekstra}},\n    journal={IEEE Transactions on Intelligent Transportation Systems},\n    title={pyModeS: Decoding Mode-S Surveillance Data for Open Air Transportation Research},\n    year={2019},\n    doi={10.1109/TITS.2019.2914770},\n    ISSN={1524-9050},\n}\n</pre>\n</div>\n<div id=\"resources\">\n<h2>Resources</h2>\n<p>Check out and contribute to this open-source project at:\n<a href=\"https://github.com/junzis/pyModeS\" rel=\"nofollow\">https://github.com/junzis/pyModeS</a></p>\n<p>Detailed manual on Mode-S decoding is published at:\n<a href=\"https://mode-s.org/decode\" rel=\"nofollow\">https://mode-s.org/decode</a></p>\n<p>The API documentation of pyModeS is at:\n<a href=\"https://mode-s.org/api\" rel=\"nofollow\">https://mode-s.org/api</a></p>\n</div>\n<div id=\"basic-installation\">\n<h2>Basic installation</h2>\n<p>Installation examples:</p>\n<pre># stable version\npip install pyModeS\n\n# development version\npip install git+https://github.com/junzis/pyModeS\n</pre>\n<p>Dependencies <tt>numpy</tt>, <tt>pyzmq</tt> and <tt>pyrtlsdr</tt> are installed automatically during previous installations processes.</p>\n</div>\n<div id=\"advanced-installation-using-c-modules\">\n<h2>Advanced installation (using c modules)</h2>\n<p>If you want to make use of the (faster) c module, install <tt>pyModeS</tt> as follows:</p>\n<pre>git clone https://github.com/junzis/pyModeS\ncd pyModeS\nmake ext\nmake install\n</pre>\n</div>\n<div id=\"view-live-traffic-modeslive\">\n<h2>View live traffic (modeslive)</h2>\n<p>General usage:</p>\n<pre>$ modeslive [-h] --source SOURCE [--connect SERVER PORT DATAYPE]\n            [--latlon LAT LON] [--show-uncertainty] [--dumpto DUMPTO]\n\narguments:\n -h, --help            show this help message and exit\n --source SOURCE       Choose data source, \"rtlsdr\" or \"net\"\n --connect SERVER PORT DATATYPE\n                       Define server, port and data type. Supported data\n                       types are: ['raw', 'beast', 'skysense']\n --latlon LAT LON      Receiver latitude and longitude, needed for the surface\n                       position, default none\n --show-uncertainty    Display uncertainty values, default off\n --dumpto DUMPTO       Folder to dump decoded output, default none\n</pre>\n<div id=\"live-with-rtl-sdr\">\n<h3>Live with RTL-SDR</h3>\n<p>If you have an RTL-SDR receiver plugged to the computer, you can connect it with <tt>rtlsdr</tt> source switch, shown as follows:</p>\n<pre>$ modeslive --source rtlsdr\n</pre>\n</div>\n<div id=\"live-with-network-data\">\n<h3>Live with network data</h3>\n<p>If you want to connect to a TCP server that broadcast raw data. use can use <tt>net</tt> source switch, for example:</p>\n<pre>$ modeslive --source net --connect localhost 30002 raw\n$ modeslive --source net --connect 127.0.0.1 30005 beast\n</pre>\n<p>Example screenshot:</p>\n<img alt=\"https://github.com/junzis/pyModeS/raw/master/doc/modeslive-screenshot.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d66374e4c85c57d055af10a3da30fcc3c020ad8e/68747470733a2f2f6769746875622e636f6d2f6a756e7a69732f70794d6f6465532f7261772f6d61737465722f646f632f6d6f6465736c6976652d73637265656e73686f742e706e67\" width=\"700px\">\n</div>\n</div>\n<div id=\"use-the-library\">\n<h2>Use the library</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyModeS</span> <span class=\"k\">as</span> <span class=\"nn\">pms</span>\n</pre>\n<div id=\"common-functions\">\n<h3>Common functions</h3>\n<pre><span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">df</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>                 <span class=\"c1\"># Downlink Format</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">icao</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>               <span class=\"c1\"># Infer the ICAO address from the message</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">crc</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">encode</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>  <span class=\"c1\"># Perform CRC or generate parity bit</span>\n\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">hex2bin</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>      <span class=\"c1\"># Convert hexadecimal string to binary string</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">bin2int</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>      <span class=\"c1\"># Convert binary string to integer</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">hex2int</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>      <span class=\"c1\"># Convert hexadecimal string to integer</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">gray2int</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>     <span class=\"c1\"># Convert grey code to integer</span>\n</pre>\n</div>\n<div id=\"core-functions-for-ads-b-decoding\">\n<h3>Core functions for ADS-B decoding</h3>\n<pre><span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">icao</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">typecode</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Typecode 1-4</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">callsign</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Typecode 5-8 (surface), 9-18 (airborne, barometric height), and 20-22 (airborne, GNSS height)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">(</span><span class=\"n\">msg_even</span><span class=\"p\">,</span> <span class=\"n\">msg_odd</span><span class=\"p\">,</span> <span class=\"n\">t_even</span><span class=\"p\">,</span> <span class=\"n\">t_odd</span><span class=\"p\">,</span> <span class=\"n\">lat_ref</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">lon_ref</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">airborne_position</span><span class=\"p\">(</span><span class=\"n\">msg_even</span><span class=\"p\">,</span> <span class=\"n\">msg_odd</span><span class=\"p\">,</span> <span class=\"n\">t_even</span><span class=\"p\">,</span> <span class=\"n\">t_odd</span><span class=\"p\">)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">surface_position</span><span class=\"p\">(</span><span class=\"n\">msg_even</span><span class=\"p\">,</span> <span class=\"n\">msg_odd</span><span class=\"p\">,</span> <span class=\"n\">t_even</span><span class=\"p\">,</span> <span class=\"n\">t_odd</span><span class=\"p\">,</span> <span class=\"n\">lat_ref</span><span class=\"p\">,</span> <span class=\"n\">lon_ref</span><span class=\"p\">)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">surface_velocity</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">position_with_ref</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">lat_ref</span><span class=\"p\">,</span> <span class=\"n\">lon_ref</span><span class=\"p\">)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">airborne_position_with_ref</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">lat_ref</span><span class=\"p\">,</span> <span class=\"n\">lon_ref</span><span class=\"p\">)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">surface_position_with_ref</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">lat_ref</span><span class=\"p\">,</span> <span class=\"n\">lon_ref</span><span class=\"p\">)</span>\n\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">altitude</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Typecode: 19</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>          <span class=\"c1\"># Handles both surface &amp; airborne messages</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">speed_heading</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>     <span class=\"c1\"># Handles both surface &amp; airborne messages</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">airborne_velocity</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n</pre>\n<p>Note: When you have a fix position of the aircraft, it is convenient to use <cite>position_with_ref()</cite> method to decode with only one position message (either odd or even). This works with both airborne and surface position messages. But the reference position shall be within 180NM (airborne) or 45NM (surface) of the true position.</p>\n</div>\n<div id=\"decode-altitude-replies-in-df4-df20\">\n<h3>Decode altitude replies in DF4 / DF20</h3>\n<pre><span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">common</span><span class=\"o\">.</span><span class=\"n\">altcode</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>   <span class=\"c1\"># Downlink format must be 4 or 20</span>\n</pre>\n</div>\n<div id=\"decode-identity-replies-in-df5-df21\">\n<h3>Decode identity replies in DF5 / DF21</h3>\n<pre><span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">common</span><span class=\"o\">.</span><span class=\"n\">idcode</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>   <span class=\"c1\"># Downlink format must be 5 or 21</span>\n</pre>\n</div>\n<div id=\"common-mode-s-functions\">\n<h3>Common Mode-S functions</h3>\n<pre><span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">icao</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>           <span class=\"c1\"># Infer the ICAO address from the message</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">bds</span><span class=\"o\">.</span><span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>      <span class=\"c1\"># Infer the Modes-S BDS register</span>\n\n<span class=\"c1\"># Check if BDS is 5,0 or 6,0, give reference speed, track, altitude (from ADS-B)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">bds</span><span class=\"o\">.</span><span class=\"n\">is50or60</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">spd_ref</span><span class=\"p\">,</span> <span class=\"n\">trk_ref</span><span class=\"p\">,</span> <span class=\"n\">alt_ref</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Check each BDS explicitly</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">bds</span><span class=\"o\">.</span><span class=\"n\">bds10</span><span class=\"o\">.</span><span class=\"n\">is10</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">bds</span><span class=\"o\">.</span><span class=\"n\">bds17</span><span class=\"o\">.</span><span class=\"n\">is17</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">bds</span><span class=\"o\">.</span><span class=\"n\">bds20</span><span class=\"o\">.</span><span class=\"n\">is20</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">bds</span><span class=\"o\">.</span><span class=\"n\">bds30</span><span class=\"o\">.</span><span class=\"n\">is30</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">bds</span><span class=\"o\">.</span><span class=\"n\">bds40</span><span class=\"o\">.</span><span class=\"n\">is40</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">bds</span><span class=\"o\">.</span><span class=\"n\">bds44</span><span class=\"o\">.</span><span class=\"n\">is44</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">bds</span><span class=\"o\">.</span><span class=\"n\">bds50</span><span class=\"o\">.</span><span class=\"n\">is50</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">bds</span><span class=\"o\">.</span><span class=\"n\">bds60</span><span class=\"o\">.</span><span class=\"n\">is60</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"mode-s-elementary-surveillance-els\">\n<h3>Mode-S Elementary Surveillance (ELS)</h3>\n<pre><span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">ovc10</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>      <span class=\"c1\"># Overlay capability, BDS 1,0</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">cap17</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>      <span class=\"c1\"># GICB capability, BDS 1,7</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">cs20</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>       <span class=\"c1\"># Callsign, BDS 2,0</span>\n</pre>\n</div>\n<div id=\"mode-s-enhanced-surveillance-ehs\">\n<h3>Mode-S Enhanced Surveillance (EHS)</h3>\n<pre><span class=\"c1\"># BDS 4,0</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">selalt40mcp</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>   <span class=\"c1\"># MCP/FCU selected altitude (ft)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">selalt40fms</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>   <span class=\"c1\"># FMS selected altitude (ft)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">p40baro</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>    <span class=\"c1\"># Barometric pressure (mb)</span>\n\n<span class=\"c1\"># BDS 5,0</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">roll50</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>     <span class=\"c1\"># Roll angle (deg)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">trk50</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>      <span class=\"c1\"># True track angle (deg)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">gs50</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>       <span class=\"c1\"># Ground speed (kt)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">rtrk50</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>     <span class=\"c1\"># Track angle rate (deg/sec)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">tas50</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>      <span class=\"c1\"># True airspeed (kt)</span>\n\n<span class=\"c1\"># BDS 6,0</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">hdg60</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>      <span class=\"c1\"># Magnetic heading (deg)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">ias60</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>      <span class=\"c1\"># Indicated airspeed (kt)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">mach60</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>     <span class=\"c1\"># Mach number (-)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">vr60baro</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>   <span class=\"c1\"># Barometric altitude rate (ft/min)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">vr60ins</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>    <span class=\"c1\"># Inertial vertical speed (ft/min)</span>\n</pre>\n</div>\n<div id=\"meteorological-routine-air-report-mrar-experimental\">\n<h3>Meteorological routine air report (MRAR) [Experimental]</h3>\n<pre><span class=\"c1\"># BDS 4,4</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">wind44</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>     <span class=\"c1\"># Wind speed (kt) and direction (true) (deg)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">temp44</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>     <span class=\"c1\"># Static air temperature (C)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">p44</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>        <span class=\"c1\"># Average static pressure (hPa)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">hum44</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>      <span class=\"c1\"># Humidity (%)</span>\n</pre>\n</div>\n<div id=\"meteorological-hazard-air-report-mhr-experimental\">\n<h3>Meteorological hazard air report (MHR) [Experimental]</h3>\n<pre><span class=\"c1\"># BDS 4,5</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">turb45</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>     <span class=\"c1\"># Turbulence level (0-3)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">ws45</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>       <span class=\"c1\"># Wind shear level (0-3)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">mb45</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>       <span class=\"c1\"># Microburst level (0-3)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">ic45</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>       <span class=\"c1\"># Icing level (0-3)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">wv45</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>       <span class=\"c1\"># Wake vortex level (0-3)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">temp45</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>     <span class=\"c1\"># Static air temperature (C)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">p45</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>        <span class=\"c1\"># Average static pressure (hPa)</span>\n<span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">commb</span><span class=\"o\">.</span><span class=\"n\">rh45</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>       <span class=\"c1\"># Radio height (ft)</span>\n</pre>\n</div>\n<div id=\"customize-the-streaming-module\">\n<h3>Customize the streaming module</h3>\n<p>The TCP client module from pyModeS can be re-used to stream and process Mode-S data as you like. You need to re-implement the <tt>handle_messages()</tt> function from the <tt>TcpClient</tt> class to write your own logic to handle the messages.</p>\n<p>Here is an example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyModeS</span> <span class=\"k\">as</span> <span class=\"nn\">pms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyModeS.extra.tcpclient</span> <span class=\"kn\">import</span> <span class=\"n\">TcpClient</span>\n\n<span class=\"c1\"># define your custom class by extending the TcpClient</span>\n<span class=\"c1\">#   - implement your handle_messages() methods</span>\n<span class=\"k\">class</span> <span class=\"nc\">ADSBClient</span><span class=\"p\">(</span><span class=\"n\">TcpClient</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">rawtype</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">ADSBClient</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">rawtype</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle_messages</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">messages</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">ts</span> <span class=\"ow\">in</span> <span class=\"n\">messages</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">28</span><span class=\"p\">:</span>  <span class=\"c1\"># wrong data length</span>\n                <span class=\"k\">continue</span>\n\n            <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">df</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">df</span> <span class=\"o\">!=</span> <span class=\"mi\">17</span><span class=\"p\">:</span>  <span class=\"c1\"># not ADSB</span>\n                <span class=\"k\">continue</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">crc</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span> <span class=\"o\">!=</span><span class=\"mi\">0</span><span class=\"p\">:</span>  <span class=\"c1\"># CRC fail</span>\n                <span class=\"k\">continue</span>\n\n            <span class=\"n\">icao</span> <span class=\"o\">=</span> <span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">icao</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n            <span class=\"n\">tc</span> <span class=\"o\">=</span> <span class=\"n\">pms</span><span class=\"o\">.</span><span class=\"n\">adsb</span><span class=\"o\">.</span><span class=\"n\">typecode</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># TODO: write you magic code here</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">,</span> <span class=\"n\">icao</span><span class=\"p\">,</span> <span class=\"n\">tc</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># run new client, change the host, port, and rawtype if needed</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ADSBClient</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">30005</span><span class=\"p\">,</span> <span class=\"n\">rawtype</span><span class=\"o\">=</span><span class=\"s1\">'beast'</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"unit-test\">\n<h2>Unit test</h2>\n<p>To perform unit tests, <tt>pytest</tt> must be install first.</p>\n<p>Build Cython extensions</p>\n<pre>$ make ext\n</pre>\n<p>Run unit tests</p>\n<pre>$ make test\n</pre>\n<p>Clean build files</p>\n<pre>$ make clean\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7166776, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "a20def2d7d1ee49fa41b817774d211ae", "sha256": "10157c959b1b63b78e573e394015bf4a6b768dbf21f16c143f004c6ccf3bf42d"}, "downloads": -1, "filename": "pyModeS-1.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "a20def2d7d1ee49fa41b817774d211ae", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11264, "upload_time": "2016-03-16T21:54:04", "upload_time_iso_8601": "2016-03-16T21:54:04.972408Z", "url": "https://files.pythonhosted.org/packages/d6/c8/e1314f031563eb79562a714e259166930af8c4435b07ff1caeef450765f9/pyModeS-1.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af8fbb17817925f1477b5c310ad77d7f", "sha256": "2e7bb9ea599dc7e121eb3cafc3f1b2b61edf5aa7b92aa8e4068a68bbf0993953"}, "downloads": -1, "filename": "pyModeS-1.0.2.tar.gz", "has_sig": false, "md5_digest": "af8fbb17817925f1477b5c310ad77d7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9832, "upload_time": "2016-03-16T21:54:15", "upload_time_iso_8601": "2016-03-16T21:54:15.499573Z", "url": "https://files.pythonhosted.org/packages/a2/2b/4e3a97cbdf77fccba3798aef9c7dbdfccf7470b917bccd1150b47b128b4d/pyModeS-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "d3a22eb98c7872aa057f8dac0bb45ac5", "sha256": "dc76ae5b18181a36b7e499314f70b0db43d71b8fd7da854ee8e4f2f17249ea62"}, "downloads": -1, "filename": "pyModeS-1.0.3.tar.gz", "has_sig": false, "md5_digest": "d3a22eb98c7872aa057f8dac0bb45ac5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8596, "upload_time": "2016-03-23T12:37:41", "upload_time_iso_8601": "2016-03-23T12:37:41.101473Z", "url": "https://files.pythonhosted.org/packages/0e/8e/ca191615120bc1e4c2144033b3a6ed817874f8cb360b9a8de7c0da969c5b/pyModeS-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "f18c958303796fc29a882248623116f1", "sha256": "0458e6f55eb9d6b53bbbdec1fd3890ec9b4b94db82861179bd78c7907917048c"}, "downloads": -1, "filename": "pyModeS-1.0.4.tar.gz", "has_sig": false, "md5_digest": "f18c958303796fc29a882248623116f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8598, "upload_time": "2016-03-23T12:46:51", "upload_time_iso_8601": "2016-03-23T12:46:51.691357Z", "url": "https://files.pythonhosted.org/packages/d8/56/56d10df7cbe4beb2dcafe584baa3b64fa34416a731325a570af1286dc9dd/pyModeS-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "e9744b395ce2ab512121eacc42a25cb0", "sha256": "3e4afbe754df3e862bd67902229bf802728f30bdb2ba5aa43f181183b911ab00"}, "downloads": -1, "filename": "pyModeS-1.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e9744b395ce2ab512121eacc42a25cb0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11913, "upload_time": "2016-08-16T14:11:23", "upload_time_iso_8601": "2016-08-16T14:11:23.855784Z", "url": "https://files.pythonhosted.org/packages/0e/51/2be29e39be97f078203c6b88da7661a5fc1d113583ba2d288670b243848f/pyModeS-1.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "311f880b357306b1130b32e0f9c34d99", "sha256": "2c371a8a82e5b3d12d73ebcfa6b0b697cc4e67dff875176e3126916ae5635e28"}, "downloads": -1, "filename": "pyModeS-1.0.5.tar.gz", "has_sig": false, "md5_digest": "311f880b357306b1130b32e0f9c34d99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9324, "upload_time": "2016-08-16T14:11:26", "upload_time_iso_8601": "2016-08-16T14:11:26.815236Z", "url": "https://files.pythonhosted.org/packages/73/f3/bc31e63019d4e0846f425ca7baf4288b9deb478283306723913fe10e3446/pyModeS-1.0.5.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "296ad7aff965edce00452968fe1c171d", "sha256": "eb9268f6dfb10317b13a72710e24bea89e069b4fc98eb58a5080beb7dea3a877"}, "downloads": -1, "filename": "pyModeS-1.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "296ad7aff965edce00452968fe1c171d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13252, "upload_time": "2016-10-26T19:06:45", "upload_time_iso_8601": "2016-10-26T19:06:45.829901Z", "url": "https://files.pythonhosted.org/packages/61/4b/de7823ab47de841dbf4b852f297b1fc65303cc19935000a73b7ead182b97/pyModeS-1.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "541785c75bc388721b92d59825ba4207", "sha256": "461d0c95478f9e20e4fe82cbd8af8fd47b987ca7db8a2a7e24dfae4956f2f909"}, "downloads": -1, "filename": "pyModeS-1.0.7.tar.gz", "has_sig": false, "md5_digest": "541785c75bc388721b92d59825ba4207", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10545, "upload_time": "2016-10-26T19:06:48", "upload_time_iso_8601": "2016-10-26T19:06:48.123840Z", "url": "https://files.pythonhosted.org/packages/bb/39/3c0b173cc3ea778909d0c3964e0cfa7c93db41f7295164846a8f4915f159/pyModeS-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "ee48f83427e337874cff59f27b42c83d", "sha256": "cd2a8f9ed5a9f16fd943e4e1f0f897d90afb96f02381c1aef66a535680a024f8"}, "downloads": -1, "filename": "pyModeS-1.0.8-py2-none-any.whl", "has_sig": false, "md5_digest": "ee48f83427e337874cff59f27b42c83d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 13255, "upload_time": "2017-03-07T09:30:58", "upload_time_iso_8601": "2017-03-07T09:30:58.244098Z", "url": "https://files.pythonhosted.org/packages/ee/1c/df8ba69fac414d43e2b297da226171312eab980980397a986b214aee0d68/pyModeS-1.0.8-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f875187ea0d75538020d8526bf0335e", "sha256": "e9258df5acbdcbc06a4e7ff71e75b63a6adf7148b9aeb909d534c92a08ba2e80"}, "downloads": -1, "filename": "pyModeS-1.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3f875187ea0d75538020d8526bf0335e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13258, "upload_time": "2017-03-07T09:30:59", "upload_time_iso_8601": "2017-03-07T09:30:59.894860Z", "url": "https://files.pythonhosted.org/packages/e5/1e/b6e0f823305f7517aa9bb2be13ce10a693ed8293a791eea4c1b651c4ff50/pyModeS-1.0.8-py2.py3-none-any.whl", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "6381a44632a6d2c7e4372d57a1b007a9", "sha256": "47cc287a633d9ffd14b7ca90d1de6a62818410ed33c7fb8b79be8035f0a87081"}, "downloads": -1, "filename": "pyModeS-1.0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6381a44632a6d2c7e4372d57a1b007a9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13752, "upload_time": "2017-03-21T16:22:39", "upload_time_iso_8601": "2017-03-21T16:22:39.221291Z", "url": "https://files.pythonhosted.org/packages/d5/3f/9c9dfb116c14dfac5bd7c7d2110410a844875dcf88777955f885e34a35de/pyModeS-1.0.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9774ff986105e369d5526c8907f0144a", "sha256": "00c217851d6330ba082b8cfd50db884b86fee86bbe2d57f005b67b2ca03dd34d"}, "downloads": -1, "filename": "pyModeS-1.0.9.tar.gz", "has_sig": false, "md5_digest": "9774ff986105e369d5526c8907f0144a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11147, "upload_time": "2017-03-21T16:22:41", "upload_time_iso_8601": "2017-03-21T16:22:41.002656Z", "url": "https://files.pythonhosted.org/packages/4a/0f/c45943670dacd812ef552ca2b9b24c8e56053886786800126c1835273765/pyModeS-1.0.9.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "a55e8fcb0a5eed828d3093c308e436b8", "sha256": "3caf51b0fd70b408f2bd6f4885770223529c80eed8d26c8f30b97d516e0e92e2"}, "downloads": -1, "filename": "pyModeS-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a55e8fcb0a5eed828d3093c308e436b8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14681, "upload_time": "2017-03-22T20:13:52", "upload_time_iso_8601": "2017-03-22T20:13:52.747904Z", "url": "https://files.pythonhosted.org/packages/a9/01/2c9d6e5699141d290ee5908537bcc11f0c509fd3058031aacd2f4c2d4a58/pyModeS-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65377de926fa375280eac547b89a28ac", "sha256": "6e5c62312b1feafb7ca6dd415faf3e0fc2c2d292893d06407a247601de8afe53"}, "downloads": -1, "filename": "pyModeS-1.1.0.tar.gz", "has_sig": false, "md5_digest": "65377de926fa375280eac547b89a28ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13369, "upload_time": "2017-03-22T20:13:54", "upload_time_iso_8601": "2017-03-22T20:13:54.680821Z", "url": "https://files.pythonhosted.org/packages/79/6e/b8d0ce0a1408793a9819cd4bed92d92c2d531473ec05dd9445898edd9d5e/pyModeS-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "07016f54c275f7b387ffaac075b53a61", "sha256": "a3ec680c7fb3b3920bc7c819961f0899b032dda45d8df025d091bd7c97cd9248"}, "downloads": -1, "filename": "pyModeS-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "07016f54c275f7b387ffaac075b53a61", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15235, "upload_time": "2017-03-23T15:14:53", "upload_time_iso_8601": "2017-03-23T15:14:53.242723Z", "url": "https://files.pythonhosted.org/packages/ac/f4/fa081fb5302339d39174398df2b97c4cc7b8abf2f7a0ade8fe2bc06999e7/pyModeS-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "788c4eebe44bd97b27b718ff2446e021", "sha256": "483aa94c6197826c7b347733f015cf22e88f8bc7836c5adf36702017ec906633"}, "downloads": -1, "filename": "pyModeS-1.1.1.tar.gz", "has_sig": false, "md5_digest": "788c4eebe44bd97b27b718ff2446e021", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12238, "upload_time": "2017-03-23T15:14:55", "upload_time_iso_8601": "2017-03-23T15:14:55.423258Z", "url": "https://files.pythonhosted.org/packages/78/d5/be25e8d0460615587deedf1d6a048d8f877a903d2cb8bc9a41a94a1a3901/pyModeS-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "6b7db2f9622ec54c0740d04973ed2bb3", "sha256": "684244691698f7e4e0af0914f27c6bbb298a69e65ff9abb48f0e6bb16be4c04b"}, "downloads": -1, "filename": "pyModeS-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6b7db2f9622ec54c0740d04973ed2bb3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17707, "upload_time": "2017-09-18T14:00:10", "upload_time_iso_8601": "2017-09-18T14:00:10.471260Z", "url": "https://files.pythonhosted.org/packages/c5/a8/114dfb5b337b7fe090d839165b1632727881c6c69354d3b36f90dfbbe5bf/pyModeS-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7d7e9156e1feb057b2a547d0b8f486b", "sha256": "61529bee8151ac84fcf74130df1ffb66f131b4c4b99d53022f30d79e52e0306a"}, "downloads": -1, "filename": "pyModeS-1.2.0.tar.gz", "has_sig": false, "md5_digest": "a7d7e9156e1feb057b2a547d0b8f486b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13880, "upload_time": "2017-09-18T14:00:14", "upload_time_iso_8601": "2017-09-18T14:00:14.759633Z", "url": "https://files.pythonhosted.org/packages/09/d0/f92ab5e74f4cffde049014005e1023bd6d93ef41751bea37b7fc3a83fb6a/pyModeS-1.2.0.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "e087031424e6a24ab5f35100bf2f19b6", "sha256": "808fb300924710298c099aa50d4fd60a34065105407c9e44fa8c2ab842a69168"}, "downloads": -1, "filename": "pyModeS-1.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e087031424e6a24ab5f35100bf2f19b6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18067, "upload_time": "2018-03-28T11:47:20", "upload_time_iso_8601": "2018-03-28T11:47:20.957979Z", "url": "https://files.pythonhosted.org/packages/9d/20/b3e9458392d39cb57c8624f90038f43c06200542d42cf9d22ae4e3e0b3b3/pyModeS-1.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70e06dcb1869314a3502a08a38072b7f", "sha256": "b209739b3f9ee17c4ec1817198900696e77632d0c43f60ddcc8cc8bef06b806c"}, "downloads": -1, "filename": "pyModeS-1.2.2.tar.gz", "has_sig": false, "md5_digest": "70e06dcb1869314a3502a08a38072b7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15846, "upload_time": "2018-03-28T11:47:21", "upload_time_iso_8601": "2018-03-28T11:47:21.953711Z", "url": "https://files.pythonhosted.org/packages/24/76/23c8295d36783e89505424b8002a86b0223de4776f6a99a0f6a19b4b9e46/pyModeS-1.2.2.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "f277877573084e050c9568847c1a071d", "sha256": "4127ba4cf5a7a8f220f442aa52ea35ac421b29ffe5849fee83bb2b33e0555773"}, "downloads": -1, "filename": "pyModeS-2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f277877573084e050c9568847c1a071d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 58063, "upload_time": "2019-02-21T13:50:33", "upload_time_iso_8601": "2019-02-21T13:50:33.789583Z", "url": "https://files.pythonhosted.org/packages/0d/ad/dd5112ba3a1a75ef2b6693d973d27c344e6e6c01258b2977e9d289842482/pyModeS-2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f38a5b688c2cce67f56b81ed2b5a7e03", "sha256": "5f9105bf03472fbec7b6ccf469b5e1259e65a1c7ec256774b5c21423da6a9494"}, "downloads": -1, "filename": "pyModeS-2.0.tar.gz", "has_sig": false, "md5_digest": "f38a5b688c2cce67f56b81ed2b5a7e03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29202, "upload_time": "2019-02-21T13:50:35", "upload_time_iso_8601": "2019-02-21T13:50:35.403275Z", "url": "https://files.pythonhosted.org/packages/8a/af/28402aadf7cc964cd2b950cc889aaf23bfbbd57757bcc4ffa718004b963e/pyModeS-2.0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "22367ab7b7397cf46f7deace5fbd1268", "sha256": "cd3042e23b66fa99c32f9023d8e72a84bea0b92b412c50ecd1da4490000afd16"}, "downloads": -1, "filename": "pyModeS-2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "22367ab7b7397cf46f7deace5fbd1268", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 60180, "upload_time": "2019-04-16T14:58:15", "upload_time_iso_8601": "2019-04-16T14:58:15.099409Z", "url": "https://files.pythonhosted.org/packages/fc/76/df96b418ed13cab6edb47ea43ae86713dab7a8869e509343519d9a153b3b/pyModeS-2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e007917a60a00ea68ca9e11a56bc5d9a", "sha256": "02c854b40658357e36dbef2cb5b84731ec210115b887d7d9662825a71a2ee706"}, "downloads": -1, "filename": "pyModeS-2.1.tar.gz", "has_sig": false, "md5_digest": "e007917a60a00ea68ca9e11a56bc5d9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32698, "upload_time": "2019-04-16T14:58:16", "upload_time_iso_8601": "2019-04-16T14:58:16.617677Z", "url": "https://files.pythonhosted.org/packages/c1/14/9a2f87b76edcba5e4fee7c849f38bbf4d1217a7cb717ebca61a20100095e/pyModeS-2.1.tar.gz", "yanked": false}], "2.2": [{"comment_text": "", "digests": {"md5": "d2e92d93829336ffbeb3e8edbcee0bb0", "sha256": "dbb721b911f58a865249d836a15202220f5419a6ab22c6181c91c0fcf1102829"}, "downloads": -1, "filename": "pyModeS-2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d2e92d93829336ffbeb3e8edbcee0bb0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 62278, "upload_time": "2019-08-05T14:38:30", "upload_time_iso_8601": "2019-08-05T14:38:30.015898Z", "url": "https://files.pythonhosted.org/packages/5c/70/1c0e4b585ec31c46ec29523de11b505a5b45e6a63553d81bc8319fc030f8/pyModeS-2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0227ded73c3652e708fdb9f48e76b932", "sha256": "54e7f0b9ed035927878c0ee3c8724b227178c7ccd7056af7d561bc059c09e2b0"}, "downloads": -1, "filename": "pyModeS-2.2.tar.gz", "has_sig": false, "md5_digest": "0227ded73c3652e708fdb9f48e76b932", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35348, "upload_time": "2019-08-05T14:38:32", "upload_time_iso_8601": "2019-08-05T14:38:32.286742Z", "url": "https://files.pythonhosted.org/packages/ef/8d/e1b31bfe8fecdbb1aff59ddf98d68cb7d615beed41ce38c35c026076bfe2/pyModeS-2.2.tar.gz", "yanked": false}], "2.4": [{"comment_text": "", "digests": {"md5": "9c93eb25730c1719e31830a4d2b30065", "sha256": "ea8d2be945a403d731e44b6aec9854df9b9c5a9ded2568395c6c44b5cded9683"}, "downloads": -1, "filename": "pyModeS-2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9c93eb25730c1719e31830a4d2b30065", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 66807, "upload_time": "2019-09-24T19:27:59", "upload_time_iso_8601": "2019-09-24T19:27:59.488695Z", "url": "https://files.pythonhosted.org/packages/a9/fb/102fee627c4e0c9e4eabcaf26d790f676adaf0af0ee41a08b21af2a70b16/pyModeS-2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d54f2061155cbb65c2fd071d44b647e", "sha256": "2cfe14e968346db58e0271eeee52e67193655d35aaee369ba7f805ab837ed952"}, "downloads": -1, "filename": "pyModeS-2.4.tar.gz", "has_sig": false, "md5_digest": "7d54f2061155cbb65c2fd071d44b647e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38813, "upload_time": "2019-09-24T19:28:02", "upload_time_iso_8601": "2019-09-24T19:28:02.271533Z", "url": "https://files.pythonhosted.org/packages/24/66/b9e1ea84e3c6ca3b045403fcca45f22aa08697002ddbaf038b18c113c9ef/pyModeS-2.4.tar.gz", "yanked": false}], "2.5": [{"comment_text": "", "digests": {"md5": "9e03e51c3dd55303c45b89636eef46b3", "sha256": "5ab0bec8e6d64de3e735f01e37b73799902b823ff016b487289299ec985cbd14"}, "downloads": -1, "filename": "pyModeS-2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9e03e51c3dd55303c45b89636eef46b3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 67313, "upload_time": "2020-02-13T16:40:15", "upload_time_iso_8601": "2020-02-13T16:40:15.168725Z", "url": "https://files.pythonhosted.org/packages/f2/1f/0d5d0fb2deb48d3114b3cc88d3ae77b8a2319890eaf6e05e7aa299059c33/pyModeS-2.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad0562d1f9a0d37fb025188d736e9bd2", "sha256": "ddb59432d4d3a661f4ec93e48ede49dcde957ca4c165a304277ec4cbc066042e"}, "downloads": -1, "filename": "pyModeS-2.5.tar.gz", "has_sig": false, "md5_digest": "ad0562d1f9a0d37fb025188d736e9bd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38866, "upload_time": "2020-02-13T16:40:17", "upload_time_iso_8601": "2020-02-13T16:40:17.998538Z", "url": "https://files.pythonhosted.org/packages/45/5b/3258c8fe1d833317b067b0b263e7a666eda719a5ec93a6b1ad7e318e8436/pyModeS-2.5.tar.gz", "yanked": false}], "2.8": [{"comment_text": "", "digests": {"md5": "77a822fb6b0385ddf9aef8f69052e2f0", "sha256": "c8b79c75d5a686d12901c44ff6506d2e271edcd4789a5655ded803b8aa829789"}, "downloads": -1, "filename": "pyModeS-2.8.tar.gz", "has_sig": false, "md5_digest": "77a822fb6b0385ddf9aef8f69052e2f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 165906, "upload_time": "2020-05-04T19:32:59", "upload_time_iso_8601": "2020-05-04T19:32:59.350744Z", "url": "https://files.pythonhosted.org/packages/fd/ba/1db2071f33b50930a308058dc7e7e42401825dfd8726416a0666cc284e3c/pyModeS-2.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "77a822fb6b0385ddf9aef8f69052e2f0", "sha256": "c8b79c75d5a686d12901c44ff6506d2e271edcd4789a5655ded803b8aa829789"}, "downloads": -1, "filename": "pyModeS-2.8.tar.gz", "has_sig": false, "md5_digest": "77a822fb6b0385ddf9aef8f69052e2f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 165906, "upload_time": "2020-05-04T19:32:59", "upload_time_iso_8601": "2020-05-04T19:32:59.350744Z", "url": "https://files.pythonhosted.org/packages/fd/ba/1db2071f33b50930a308058dc7e7e42401825dfd8726416a0666cc284e3c/pyModeS-2.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:56 2020"}