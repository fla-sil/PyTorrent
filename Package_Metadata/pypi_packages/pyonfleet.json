{"info": {"author": "James Li", "author_email": "support@onfleet.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7"], "description": "# Onfleet Python Wrapper\n\n![Travis (.org)](https://img.shields.io/travis/onfleet/pyonfleet.svg?style=popout-square)\n[![GitHub](https://img.shields.io/github/license/onfleet/pyonfleet.svg?style=popout-square)](https://github.com/onfleet/pyonfleet/blob/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/pyonfleet.svg?style=popout-square)](https://pypi.org/project/pyonfleet/)\n![GitHub top language](https://img.shields.io/github/languages/top/onfleet/pyonfleet.svg?style=popout-square)\n\n*Read this document in another language: [English](https://github.com/onfleet/pyonfleet/blob/master/README.md), [\u6b63\u9ad4\u4e2d\u6587](https://github.com/onfleet/pyonfleet/blob/master/README.zh-tw.md)*\n\nIf you have any questions, please reach out to Onfleet by submitting an issue [here](https://github.com/onfleet/pyonfleet/issues) or contact support@onfleet.com\n\n## Table of Contents\n- [Onfleet Python Wrapper](#onfleet-python-wrapper)\n  * [Table of Contents](#table-of-contents)\n  * [Synopsis](#synopsis)\n  * [Installation](#installation)\n  * [Usage](#usage)\n    + [Throttling](#throttling)\n    + [Responses](#responses)\n    + [Supported CRUD Operations](#supported-crud-operations)\n      - [GET Requests](#get-requests)\n        * [Examples of get()](#examples-of-get--)\n        * [Examples of get(param)](#examples-of-get-param-)\n        * [Examples of getByLocation:](#examples-of-getbylocation-)\n      - [POST Requests](#post-requests)\n        * [Examples of create()](#examples-of-create--)\n      - [PUT Requests](#put-requests)\n        * [Examples of update()](#examples-of-update--)\n        * [Examples of updateSchedule()](#examples-of-updateschedule--)\n        * [Examples of insertTask()](#examples-of-inserttask--)\n      - [DELETE Requests](#delete-requests)\n        * [Examples of deleteOne()](#examples-of-deleteone--)\n\n## Synopsis\n\nThe Onfleet Python library provides convenient access to the Onfleet API. \n\n## Installation\n\n```\npip install pyonfleet\n```\n## Usage\nBefore using the API wrapper, you will need to obtain an API key from your organization admin. Creation and integration of API keys are performed through the [Onfleet dashboard](https://onfleet.com/dashboard#/manage).\n\nTo authenticate, you will also need to create a file named `.auth.json` under your working directory, this is where you will store your API credentials.\n\nThe format of `.auth.json` is shown below:\n```json\n{\n    \"API_KEY\": \"<your_api_key>\", \n}\n```\nYou can also opt in to not store your API key here and use it on the fly instead.\n\nOnce the Onfleet object is created, you will get access to all the API endpoints as documented in the [Onfleet API documentation](http://docs.onfleet.com/). Here are some usage case:\n```python\nfrom onfleet import Onfleet\n\napi = Onfleet() # if .auth.json was provided\napi = Onfleet(api_key=\"<your_api_key>\") # if no .auth.json was provided\n```\n\n### Throttling\nRate limiting is enforced by the API with a threshold of 20 requests per second across all your organization's API keys, learn more about it [here](http://docs.onfleet.com/docs/throttling). \n\n### Responses\nThe `pyonfleet` API wrapper returns the body of a [Response object](https://2.python-requests.org//en/master/api/#requests.Response).\n\n### Supported CRUD Operations \nThe base URL for the Onfleet API is `https://onfleet.com/api/v2`, here are the supported CRUD operations for each endpoint:\n\n| `<endpoint>` | GET | POST | PUT | DELETE |\n|:------------:|:---------------------------------------------------------------:|:----------------------------------------------------------------------:|:------------------------------------:|:-------------:|\n| [Admins](http://docs.onfleet.com/docs/administrators) | get() | create(body) | update(id, body) | deleteOne(id) |\n| [Containers](http://docs.onfleet.com/docs/containers) | get(workers=id), get(teams=id), get(organizations=id) | x | update(id, body) | x |\n| [Destinations](http://docs.onfleet.com/docs/destinations) | get(id) | create(body) | x | x |\n| [Hubs](http://docs.onfleet.com/docs/hubs) | get() | x | x | x |\n| [Organization](http://docs.onfleet.com/docs/organizations) | get(), get(id) | x | insertTask(id, body) | x |\n| [Recipients](http://docs.onfleet.com/docs/recipients)  | get(id), get(name), get(phone) | create(body) | update(id, body) | x |\n| [Tasks](http://docs.onfleet.com/docs/tasks) | get(queryParams), get(id), get(shortId) | create(body), clone(id), forceComplete(id), batch(body), autoAssign(body) | update(id, body) | deleteOne(id) |\n| [Teams](http://docs.onfleet.com/docs/teams) | get(), get(id) | create(body) | update(id, body), insertTask(id, body) | deleteOne(id) |\n| [Webhooks](http://docs.onfleet.com/docs/webhooks) | get() | create(body) | x | deleteOne(id) |\n| [Workers](http://docs.onfleet.com/docs/workers) | get(), get(queryParams), get(id), getByLocation(queryParams), getSchedule(id) | create(body), setSchedule(id, body) | update(id, body), insertTask(id, body) | deleteOne(id) |\n\n#### GET Requests\nTo get all the documents within an endpoint:\n```python\nget()\n```\n##### Examples of get()\n```python\napi.workers.get()\napi.workers.get(queryParams=\"\")\n```\nOption to use query parameters for some certain endpoints, refer back to API documents for endpoints that support query parameters:\n```python\napi.workers.get(queryParams=\"phones=<phone_number>\")\n\nor\n\napi.workers.get(queryParams={\"phones\":\"<phone_number>\"})\n```\n\nTo get one of the document within an endpoint, specify the param that you wish to search by:\n```python\nget(param=<some_param>)\n```\n\n##### Examples of get(param) \n```python\napi.workers.get(id=\"<24_digit_id>\")\napi.workers.get(id=\"<24_digit_id>\", queryParams={\"analytics\": \"true\"})\napi.tasks.get(shortId=\"<shortId>\")\napi.recipients.get(phone=\"<phone_number>\")\napi.recipients.get(name=\"<recipient_name>\")\n\napi.containers.get(workers=\"<worker_id>\")\napi.containers.get(teams=\"<team_id>\")\napi.containers.get(organizations=\"<org_id>\")\n```\nTo get a driver by location, use the `getByLocation` function:\n```python\ngetByLocation(queryParams=<some_param>)\n```\n\n##### Examples of getByLocation:\n```python\nparams = {\"longitude\":\"-122.4\",\"latitude\":\"37.7601983\",\"radius\":\"6000\"}\napi.workers.getByLocation(queryParams=params)\n```\n\n#### POST Requests\nTo create a document within an endpoint:\n```python\ncreate(body=\"<body_object>\")\n```\n##### Examples of create()\n```python\ndriver = {\n  \"name\": \"A Swartz Test\",\n  \"phone\": \"+16173428853\",\n  \"teams\": [\"<a_team_id>\", \"<a_team_id> (optional)...\"],\n  \"vehicle\": {\n    \"type\": \"CAR\",\n    \"description\": \"Tesla Model S\",\n    \"licensePlate\": \"FKNS9A\",\n    \"color\": \"purple\",\n  }\n}\n\napi.workers.create(body=driver)\n```\nExtended POST requests include `clone`, `forceComplete`, `batchCreate`, `autoAssign` on the tasks endpoint, and `setSchedule` on the workers endpoint:\n\n```python\napi.tasks.clone(id=\"<24_digit_id>\")\napi.tasks.forceComplete(id=\"<24_digit_id>\", body=\"<completion_details>\")\napi.tasks.batchCreate(body=\"<task_object_get>\")\napi.tasks.autoAssign(body=\"<auto_assign_object>\")\n\napi.workers.setSchedule(id=\"<24_digit_id>\", body=\"<schedule_object>\")\n```\nFor more details, check our documentation on [clone](http://docs.onfleet.com/docs/tasks#clone-task), [forceComplete](http://docs.onfleet.com/docs/tasks#complete-task), [batchCreate](http://docs.onfleet.com/docs/tasks#create-tasks-in-batch), [autoAssign](http://docs.onfleet.com/docs/tasks#automatically-assign-get-of-tasks), and [setSchedule](http://docs.onfleet.com/docs/workers#set-workers-schedule).\n\n#### PUT Requests\nTo update a document within an endpoint:\n```python\nupdate(id=\"<24_digit_id>\", body=\"<body_object>\")\n```\n##### Examples of update()\n```python\nupdateBody = {\n    \"name\": \"New Driver Name\",\n}\napi.workers.update(id=\"<24_digit_id>\", body=updateBody)\n```\n##### Examples of updateSchedule()\n```python\napi.workers.updateSchedule(id=\"<24_digit_id>\", body=newSchedule)\n```\nFor more details, check our documentation on [updateSchedule](http://docs.onfleet.com/docs/workers#update-workers-schedule)\n\n##### Examples of insertTask()\n```python\napi.workers.insertTask(id=\"kAQ*G5hnqlOq4jVvwtGNuacl\", body=\"<body_object>\")\n```\n\n#### DELETE Requests\nTo delete a document within an endpoint:\n```python\ndeleteOne(id=\"<24_digit_id>\")\n```\n##### Examples of deleteOne()\n```python\napi.workers.deleteOne(id=\"<24_digit_id>\")\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://docs.onfleet.com", "keywords": "", "license": "LICENSE", "maintainer": "", "maintainer_email": "", "name": "pyonfleet", "package_url": "https://pypi.org/project/pyonfleet/", "platform": "", "project_url": "https://pypi.org/project/pyonfleet/", "project_urls": {"Homepage": "http://docs.onfleet.com"}, "release_url": "https://pypi.org/project/pyonfleet/1.0.1/", "requires_dist": ["requests", "configparser"], "requires_python": "", "summary": "Onfleet's Python API Wrapper Package", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Onfleet Python Wrapper</h1>\n<p><img alt=\"Travis (.org)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da1ce0994350229eeb58a39c4df5b76b72709e0b/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6f6e666c6565742f70796f6e666c6565742e7376673f7374796c653d706f706f75742d737175617265\">\n<a href=\"https://github.com/onfleet/pyonfleet/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86a7e75dba4f687672c86dc6236ca98d15b7cd60/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6f6e666c6565742f70796f6e666c6565742e7376673f7374796c653d706f706f75742d737175617265\"></a>\n<a href=\"https://pypi.org/project/pyonfleet/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e0afd3e8ac4e68a34ea2626d9bcbcb2bec1a009/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796f6e666c6565742e7376673f7374796c653d706f706f75742d737175617265\"></a>\n<img alt=\"GitHub top language\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e70cf4b5989d0f41c0a9e80175027e390d548c1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f746f702f6f6e666c6565742f70796f6e666c6565742e7376673f7374796c653d706f706f75742d737175617265\"></p>\n<p><em>Read this document in another language: <a href=\"https://github.com/onfleet/pyonfleet/blob/master/README.md\" rel=\"nofollow\">English</a>, <a href=\"https://github.com/onfleet/pyonfleet/blob/master/README.zh-tw.md\" rel=\"nofollow\">\u6b63\u9ad4\u4e2d\u6587</a></em></p>\n<p>If you have any questions, please reach out to Onfleet by submitting an issue <a href=\"https://github.com/onfleet/pyonfleet/issues\" rel=\"nofollow\">here</a> or contact <a href=\"mailto:support@onfleet.com\">support@onfleet.com</a></p>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#onfleet-python-wrapper\" rel=\"nofollow\">Onfleet Python Wrapper</a>\n<ul>\n<li><a href=\"#table-of-contents\" rel=\"nofollow\">Table of Contents</a></li>\n<li><a href=\"#synopsis\" rel=\"nofollow\">Synopsis</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#throttling\" rel=\"nofollow\">Throttling</a></li>\n<li><a href=\"#responses\" rel=\"nofollow\">Responses</a></li>\n<li><a href=\"#supported-crud-operations\" rel=\"nofollow\">Supported CRUD Operations</a>\n<ul>\n<li><a href=\"#get-requests\" rel=\"nofollow\">GET Requests</a>\n<ul>\n<li><a href=\"#examples-of-get--\" rel=\"nofollow\">Examples of get()</a></li>\n<li><a href=\"#examples-of-get-param-\" rel=\"nofollow\">Examples of get(param)</a></li>\n<li><a href=\"#examples-of-getbylocation-\" rel=\"nofollow\">Examples of getByLocation:</a></li>\n</ul>\n</li>\n<li><a href=\"#post-requests\" rel=\"nofollow\">POST Requests</a>\n<ul>\n<li><a href=\"#examples-of-create--\" rel=\"nofollow\">Examples of create()</a></li>\n</ul>\n</li>\n<li><a href=\"#put-requests\" rel=\"nofollow\">PUT Requests</a>\n<ul>\n<li><a href=\"#examples-of-update--\" rel=\"nofollow\">Examples of update()</a></li>\n<li><a href=\"#examples-of-updateschedule--\" rel=\"nofollow\">Examples of updateSchedule()</a></li>\n<li><a href=\"#examples-of-inserttask--\" rel=\"nofollow\">Examples of insertTask()</a></li>\n</ul>\n</li>\n<li><a href=\"#delete-requests\" rel=\"nofollow\">DELETE Requests</a>\n<ul>\n<li><a href=\"#examples-of-deleteone--\" rel=\"nofollow\">Examples of deleteOne()</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Synopsis</h2>\n<p>The Onfleet Python library provides convenient access to the Onfleet API.</p>\n<h2>Installation</h2>\n<pre><code>pip install pyonfleet\n</code></pre>\n<h2>Usage</h2>\n<p>Before using the API wrapper, you will need to obtain an API key from your organization admin. Creation and integration of API keys are performed through the <a href=\"https://onfleet.com/dashboard#/manage\" rel=\"nofollow\">Onfleet dashboard</a>.</p>\n<p>To authenticate, you will also need to create a file named <code>.auth.json</code> under your working directory, this is where you will store your API credentials.</p>\n<p>The format of <code>.auth.json</code> is shown below:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"API_KEY\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;your_api_key&gt;\"</span><span class=\"p\">,</span> \n<span class=\"p\">}</span>\n</pre>\n<p>You can also opt in to not store your API key here and use it on the fly instead.</p>\n<p>Once the Onfleet object is created, you will get access to all the API endpoints as documented in the <a href=\"http://docs.onfleet.com/\" rel=\"nofollow\">Onfleet API documentation</a>. Here are some usage case:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">onfleet</span> <span class=\"kn\">import</span> <span class=\"n\">Onfleet</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Onfleet</span><span class=\"p\">()</span> <span class=\"c1\"># if .auth.json was provided</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Onfleet</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;your_api_key&gt;\"</span><span class=\"p\">)</span> <span class=\"c1\"># if no .auth.json was provided</span>\n</pre>\n<h3>Throttling</h3>\n<p>Rate limiting is enforced by the API with a threshold of 20 requests per second across all your organization's API keys, learn more about it <a href=\"http://docs.onfleet.com/docs/throttling\" rel=\"nofollow\">here</a>.</p>\n<h3>Responses</h3>\n<p>The <code>pyonfleet</code> API wrapper returns the body of a <a href=\"https://2.python-requests.org//en/master/api/#requests.Response\" rel=\"nofollow\">Response object</a>.</p>\n<h3>Supported CRUD Operations</h3>\n<p>The base URL for the Onfleet API is <code>https://onfleet.com/api/v2</code>, here are the supported CRUD operations for each endpoint:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><code>&lt;endpoint&gt;</code></th>\n<th align=\"center\">GET</th>\n<th align=\"center\">POST</th>\n<th align=\"center\">PUT</th>\n<th align=\"center\">DELETE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><a href=\"http://docs.onfleet.com/docs/administrators\" rel=\"nofollow\">Admins</a></td>\n<td align=\"center\">get()</td>\n<td align=\"center\">create(body)</td>\n<td align=\"center\">update(id, body)</td>\n<td align=\"center\">deleteOne(id)</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://docs.onfleet.com/docs/containers\" rel=\"nofollow\">Containers</a></td>\n<td align=\"center\">get(workers=id), get(teams=id), get(organizations=id)</td>\n<td align=\"center\">x</td>\n<td align=\"center\">update(id, body)</td>\n<td align=\"center\">x</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://docs.onfleet.com/docs/destinations\" rel=\"nofollow\">Destinations</a></td>\n<td align=\"center\">get(id)</td>\n<td align=\"center\">create(body)</td>\n<td align=\"center\">x</td>\n<td align=\"center\">x</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://docs.onfleet.com/docs/hubs\" rel=\"nofollow\">Hubs</a></td>\n<td align=\"center\">get()</td>\n<td align=\"center\">x</td>\n<td align=\"center\">x</td>\n<td align=\"center\">x</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://docs.onfleet.com/docs/organizations\" rel=\"nofollow\">Organization</a></td>\n<td align=\"center\">get(), get(id)</td>\n<td align=\"center\">x</td>\n<td align=\"center\">insertTask(id, body)</td>\n<td align=\"center\">x</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://docs.onfleet.com/docs/recipients\" rel=\"nofollow\">Recipients</a></td>\n<td align=\"center\">get(id), get(name), get(phone)</td>\n<td align=\"center\">create(body)</td>\n<td align=\"center\">update(id, body)</td>\n<td align=\"center\">x</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://docs.onfleet.com/docs/tasks\" rel=\"nofollow\">Tasks</a></td>\n<td align=\"center\">get(queryParams), get(id), get(shortId)</td>\n<td align=\"center\">create(body), clone(id), forceComplete(id), batch(body), autoAssign(body)</td>\n<td align=\"center\">update(id, body)</td>\n<td align=\"center\">deleteOne(id)</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://docs.onfleet.com/docs/teams\" rel=\"nofollow\">Teams</a></td>\n<td align=\"center\">get(), get(id)</td>\n<td align=\"center\">create(body)</td>\n<td align=\"center\">update(id, body), insertTask(id, body)</td>\n<td align=\"center\">deleteOne(id)</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://docs.onfleet.com/docs/webhooks\" rel=\"nofollow\">Webhooks</a></td>\n<td align=\"center\">get()</td>\n<td align=\"center\">create(body)</td>\n<td align=\"center\">x</td>\n<td align=\"center\">deleteOne(id)</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"http://docs.onfleet.com/docs/workers\" rel=\"nofollow\">Workers</a></td>\n<td align=\"center\">get(), get(queryParams), get(id), getByLocation(queryParams), getSchedule(id)</td>\n<td align=\"center\">create(body), setSchedule(id, body)</td>\n<td align=\"center\">update(id, body), insertTask(id, body)</td>\n<td align=\"center\">deleteOne(id)</td>\n</tr></tbody></table>\n<h4>GET Requests</h4>\n<p>To get all the documents within an endpoint:</p>\n<pre><span class=\"n\">get</span><span class=\"p\">()</span>\n</pre>\n<h5>Examples of get()</h5>\n<pre><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">queryParams</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span><span class=\"p\">)</span>\n</pre>\n<p>Option to use query parameters for some certain endpoints, refer back to API documents for endpoints that support query parameters:</p>\n<pre><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">queryParams</span><span class=\"o\">=</span><span class=\"s2\">\"phones=&lt;phone_number&gt;\"</span><span class=\"p\">)</span>\n\n<span class=\"ow\">or</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">queryParams</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"phones\"</span><span class=\"p\">:</span><span class=\"s2\">\"&lt;phone_number&gt;\"</span><span class=\"p\">})</span>\n</pre>\n<p>To get one of the document within an endpoint, specify the param that you wish to search by:</p>\n<pre><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">param</span><span class=\"o\">=&lt;</span><span class=\"n\">some_param</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n</pre>\n<h5>Examples of get(param)</h5>\n<pre><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;24_digit_id&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;24_digit_id&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">queryParams</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"analytics\"</span><span class=\"p\">:</span> <span class=\"s2\">\"true\"</span><span class=\"p\">})</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">shortId</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;shortId&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">recipients</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">phone</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;phone_number&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">recipients</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;recipient_name&gt;\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">workers</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;worker_id&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">teams</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;team_id&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">organizations</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;org_id&gt;\"</span><span class=\"p\">)</span>\n</pre>\n<p>To get a driver by location, use the <code>getByLocation</code> function:</p>\n<pre><span class=\"n\">getByLocation</span><span class=\"p\">(</span><span class=\"n\">queryParams</span><span class=\"o\">=&lt;</span><span class=\"n\">some_param</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n</pre>\n<h5>Examples of getByLocation:</h5>\n<pre><span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"longitude\"</span><span class=\"p\">:</span><span class=\"s2\">\"-122.4\"</span><span class=\"p\">,</span><span class=\"s2\">\"latitude\"</span><span class=\"p\">:</span><span class=\"s2\">\"37.7601983\"</span><span class=\"p\">,</span><span class=\"s2\">\"radius\"</span><span class=\"p\">:</span><span class=\"s2\">\"6000\"</span><span class=\"p\">}</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"o\">.</span><span class=\"n\">getByLocation</span><span class=\"p\">(</span><span class=\"n\">queryParams</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"p\">)</span>\n</pre>\n<h4>POST Requests</h4>\n<p>To create a document within an endpoint:</p>\n<pre><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;body_object&gt;\"</span><span class=\"p\">)</span>\n</pre>\n<h5>Examples of create()</h5>\n<pre><span class=\"n\">driver</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"A Swartz Test\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"phone\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+16173428853\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"teams\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"&lt;a_team_id&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;a_team_id&gt; (optional)...\"</span><span class=\"p\">],</span>\n  <span class=\"s2\">\"vehicle\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CAR\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Tesla Model S\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"licensePlate\"</span><span class=\"p\">:</span> <span class=\"s2\">\"FKNS9A\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"color\"</span><span class=\"p\">:</span> <span class=\"s2\">\"purple\"</span><span class=\"p\">,</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"o\">=</span><span class=\"n\">driver</span><span class=\"p\">)</span>\n</pre>\n<p>Extended POST requests include <code>clone</code>, <code>forceComplete</code>, <code>batchCreate</code>, <code>autoAssign</code> on the tasks endpoint, and <code>setSchedule</code> on the workers endpoint:</p>\n<pre><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">clone</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;24_digit_id&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">forceComplete</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;24_digit_id&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;completion_details&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">batchCreate</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;task_object_get&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">autoAssign</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;auto_assign_object&gt;\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"o\">.</span><span class=\"n\">setSchedule</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;24_digit_id&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;schedule_object&gt;\"</span><span class=\"p\">)</span>\n</pre>\n<p>For more details, check our documentation on <a href=\"http://docs.onfleet.com/docs/tasks#clone-task\" rel=\"nofollow\">clone</a>, <a href=\"http://docs.onfleet.com/docs/tasks#complete-task\" rel=\"nofollow\">forceComplete</a>, <a href=\"http://docs.onfleet.com/docs/tasks#create-tasks-in-batch\" rel=\"nofollow\">batchCreate</a>, <a href=\"http://docs.onfleet.com/docs/tasks#automatically-assign-get-of-tasks\" rel=\"nofollow\">autoAssign</a>, and <a href=\"http://docs.onfleet.com/docs/workers#set-workers-schedule\" rel=\"nofollow\">setSchedule</a>.</p>\n<h4>PUT Requests</h4>\n<p>To update a document within an endpoint:</p>\n<pre><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;24_digit_id&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;body_object&gt;\"</span><span class=\"p\">)</span>\n</pre>\n<h5>Examples of update()</h5>\n<pre><span class=\"n\">updateBody</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"New Driver Name\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;24_digit_id&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"n\">updateBody</span><span class=\"p\">)</span>\n</pre>\n<h5>Examples of updateSchedule()</h5>\n<pre><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"o\">.</span><span class=\"n\">updateSchedule</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;24_digit_id&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"n\">newSchedule</span><span class=\"p\">)</span>\n</pre>\n<p>For more details, check our documentation on <a href=\"http://docs.onfleet.com/docs/workers#update-workers-schedule\" rel=\"nofollow\">updateSchedule</a></p>\n<h5>Examples of insertTask()</h5>\n<pre><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"o\">.</span><span class=\"n\">insertTask</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"kAQ*G5hnqlOq4jVvwtGNuacl\"</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;body_object&gt;\"</span><span class=\"p\">)</span>\n</pre>\n<h4>DELETE Requests</h4>\n<p>To delete a document within an endpoint:</p>\n<pre><span class=\"n\">deleteOne</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;24_digit_id&gt;\"</span><span class=\"p\">)</span>\n</pre>\n<h5>Examples of deleteOne()</h5>\n<pre><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"o\">.</span><span class=\"n\">deleteOne</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"&lt;24_digit_id&gt;\"</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5303857, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ee6ef85da8b661ab35a3015a107942e2", "sha256": "24063dd61f50b8dbed951ff5c7a0a9cd663da88cab3114bbd9d35acb52f08788"}, "downloads": -1, "filename": "pyonfleet-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ee6ef85da8b661ab35a3015a107942e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9809, "upload_time": "2019-05-22T16:47:11", "upload_time_iso_8601": "2019-05-22T16:47:11.753824Z", "url": "https://files.pythonhosted.org/packages/42/2c/5a1a7efe8049fcb3d809b31eb592f19e40e70b46513b84af0d402dbb17c0/pyonfleet-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "290cf60d47bd324af9c34f60950cd237", "sha256": "2dc1b653a516189010528fe6548135cfbcd2860b2e086ebf45a70d87e74d5f33"}, "downloads": -1, "filename": "pyonfleet-1.0.0.tar.gz", "has_sig": false, "md5_digest": "290cf60d47bd324af9c34f60950cd237", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11462, "upload_time": "2019-05-22T16:47:13", "upload_time_iso_8601": "2019-05-22T16:47:13.694784Z", "url": "https://files.pythonhosted.org/packages/43/0f/daec0dbc4f274a1f754d1621ae8f729a83fc2411c6a2ac64cba33a736e9e/pyonfleet-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "38363e56ccd4df701fe17ac7768b91ae", "sha256": "93ec561c6c2e30a45591d86ed077a7a1ada38959dd1729063f0e58b255884962"}, "downloads": -1, "filename": "pyonfleet-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "38363e56ccd4df701fe17ac7768b91ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9817, "upload_time": "2019-05-22T17:51:49", "upload_time_iso_8601": "2019-05-22T17:51:49.172618Z", "url": "https://files.pythonhosted.org/packages/67/60/7ed3221631d8a6e8e13688ffe706921dc402d74c0ac663bf5f03f5fcec70/pyonfleet-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "582b7ed0ee49fa97ee18094434993d40", "sha256": "b162dd388503cad4368db7f5bb0229b6436dedf215949c7ed1dca0f63b186ce8"}, "downloads": -1, "filename": "pyonfleet-1.0.1.tar.gz", "has_sig": false, "md5_digest": "582b7ed0ee49fa97ee18094434993d40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11550, "upload_time": "2019-05-22T17:51:50", "upload_time_iso_8601": "2019-05-22T17:51:50.846394Z", "url": "https://files.pythonhosted.org/packages/31/1c/e8169cf6e2dc3b7a9d8bfb6480a27548d867c2297559da3c58b52bf13d82/pyonfleet-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38363e56ccd4df701fe17ac7768b91ae", "sha256": "93ec561c6c2e30a45591d86ed077a7a1ada38959dd1729063f0e58b255884962"}, "downloads": -1, "filename": "pyonfleet-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "38363e56ccd4df701fe17ac7768b91ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9817, "upload_time": "2019-05-22T17:51:49", "upload_time_iso_8601": "2019-05-22T17:51:49.172618Z", "url": "https://files.pythonhosted.org/packages/67/60/7ed3221631d8a6e8e13688ffe706921dc402d74c0ac663bf5f03f5fcec70/pyonfleet-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "582b7ed0ee49fa97ee18094434993d40", "sha256": "b162dd388503cad4368db7f5bb0229b6436dedf215949c7ed1dca0f63b186ce8"}, "downloads": -1, "filename": "pyonfleet-1.0.1.tar.gz", "has_sig": false, "md5_digest": "582b7ed0ee49fa97ee18094434993d40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11550, "upload_time": "2019-05-22T17:51:50", "upload_time_iso_8601": "2019-05-22T17:51:50.846394Z", "url": "https://files.pythonhosted.org/packages/31/1c/e8169cf6e2dc3b7a9d8bfb6480a27548d867c2297559da3c58b52bf13d82/pyonfleet-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:15 2020"}