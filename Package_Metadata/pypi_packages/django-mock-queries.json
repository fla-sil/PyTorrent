{"info": {"author": "Phivos Stylianides", "author_email": "stphivos@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Testing", "Topic :: Software Development :: Testing :: Mocking", "Topic :: Software Development :: Testing :: Unit"], "description": "|Latest Version| |Build Status| |Code Coverage| |Code Climate|\n\nDjango Mock Queries\n===================\n\nA library for mocking Django queryset functions in memory for testing\n\nFeatures\n--------\n\n-  QuerySet style support for method chaining\n-  Filtering with Q objects\n-  Aggregates generation\n-  CRUD functions\n-  Field lookups\n-  django-rest-framework serializer asserts\n\nExamples\n--------\n\n.. code:: python\n\n    from django.db.models import Avg, Q\n    from django_mock_queries.query import MockSet, MockModel\n\n    qs = MockSet(\n        MockModel(mock_name='john', email='john@gmail.com'),\n        MockModel(mock_name='jeff', email='jeff@hotmail.com'),\n        MockModel(mock_name='bill', email='bill@gmail.com'),\n    )\n\n    print [x for x in qs.all().filter(email__icontains='gmail.com').select_related('address')]\n    # Outputs: [john, bill]\n\n    qs = MockSet(\n        MockModel(mock_name='model s', msrp=70000),\n        MockModel(mock_name='model x', msrp=80000),\n        MockModel(mock_name='model 3', msrp=35000),\n    )\n\n    print qs.all().aggregate(Avg('msrp'))\n    # Outputs: {'msrp__avg': 61666}\n\n    qs = MockSet(\n        MockModel(mock_name='model x', make='tesla', country='usa'),\n        MockModel(mock_name='s-class', make='mercedes', country='germany'),\n        MockModel(mock_name='s90', make='volvo', country='sweden'),\n    )\n\n    print [x for x in qs.all().filter(Q(make__iexact='tesla') | Q(country__iexact='germany'))]\n    # Outputs: [model x, s-class]\n\n    qs = MockSet(cls=MockModel)\n    print qs.create(mock_name='my_object', foo='1', bar='a')\n    # Outputs: my_object\n\n    print [x for x in qs]\n    # Outputs: [my_object]\n\nTest function that uses Django QuerySet:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    \"\"\"\n    Function that queries active users\n    \"\"\"\n    def active_users(self):\n        return User.objects.filter(is_active=True).all()\n\n    \"\"\"\n    Test function applies expected filters by patching Django's user model Manager or Queryset with a MockSet\n    \"\"\"\n    from django_mock_queries.query import MockSet, MockModel\n\n\n    class TestApi(TestCase):\n        users = MockSet()\n        user_objects = patch('django.contrib.auth.models.User.objects', users)\n\n        @user_objects\n        def test_api_active_users_filters_by_is_active_true(self):\n            self.users.add(\n                MockModel(mock_name='active user', is_active=True),\n                MockModel(mock_name='inactive user', is_active=False)\n            )\n\n            for x in self.api.active_users():\n                assert x.is_active\n\nTest django-rest-framework model serializer:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    \"\"\"\n    Car model serializer that includes a nested serializer and a method field\n    \"\"\"\n    class CarSerializer(serializers.ModelSerializer):\n        make = ManufacturerSerializer()\n        speed = serializers.SerializerMethodField()\n\n        def get_speed(self, obj):\n            return obj.format_speed()\n\n        class Meta:\n            model = Car\n            fields = ('id', 'make', 'model', 'speed',)\n\n    \"\"\"\n    Test serializer returns fields with expected values and mock the result of nested serializer for field make\n    \"\"\"\n    def test_car_serializer_fields(self):\n        car = Car(id=1, make=Manufacturer(id=1, name='vw'), model='golf', speed=300)\n\n        values = {\n            'id': car.id,\n            'model': car.model,\n            'speed': car.formatted_speed(),\n        }\n\n        assert_serializer(CarSerializer) \\\n            .instance(car) \\\n            .returns('id', 'make', 'model', 'speed') \\\n            .values(**values) \\\n            .mocks('make') \\\n            .run()\n\nFull Example\n~~~~~~~~~~~~\n\nThere is a full Django application in the ``examples/users`` folder. It\nshows how to configure ``django_mock_queries`` in your tests and run\nthem with or without setting up a Django database. Running the mock\ntests without a database can be much faster when your Django application\nhas a lot of database migrations.\n\nTo run your Django tests without a database, add a new settings file,\nand call ``monkey_patch_test_db()``. Use a wildcard import to get all\nthe regular settings as well.\n\n.. code:: python\n\n    # settings_mocked.py\n    from django_mock_queries.mocks import monkey_patch_test_db\n\n    from users.settings import *\n\n    monkey_patch_test_db()\n\nThen run your Django tests with the new settings file:\n\n::\n\n    ./manage.py test --settings=users.settings_mocked\n\nHere\u2019s the pytest equivalent:\n\n::\n\n    pytest --ds=users.settings_mocked\n\nThat will run your tests without setting up a test database. All of your\ntests that use Django mock queries should run fine, but what about the\ntests that really need a database?\n\n::\n\n    ERROR: test_create (examples.users.analytics.tests.TestApi)\n    ----------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"/.../examples/users/analytics/tests.py\", line 28, in test_create\n        start_count = User.objects.count()\n      [...]\n    NotSupportedError: Mock database tried to execute SQL for User model.\n\nIf you want to run your tests without a database, you need to tell\nDjango to skip the tests that need a database. You can do that by\nputting a skip decorator on the test classes or test methods that need a\ndatabase.\n\n.. code:: python\n\n    @skipIfDBFeature('is_mocked')\n    class TestApi(TestCase):\n        def test_create(self):\n            start_count = User.objects.count()\n\n            User.objects.create(username='bob')\n            final_count = User.objects.count()\n\n            self.assertEqual(start_count + 1, final_count)\n\nInstallation\n------------\n\n.. code:: bash\n\n    $ pip install django_mock_queries\n\nContributing\n------------\n\nAnything missing or not functioning correctly? PRs are always welcome!\nOtherwise, you can create an issue so someone else does it when time\nallows.\n\nYou can follow these guidelines:\n\n-  Fork the repo from this page\n-  Clone your fork:\n\n.. code:: bash\n\n    $ git clone https://github.com/{your-username}/django-mock-queries.git\n    $ cd django-mock-queries\n    $ git checkout -b feature/your_cool_feature\n\n-  Implement feature/fix\n-  Add/modify relevant tests\n-  Run tox to verify all tests and flake8 quality checks pass\n\n.. code:: bash\n\n    $ tox\n\n-  Commit and push local branch to your origin\n\n.. code:: bash\n\n    $ git commit . -m \"New cool feature does this\"\n    $ git push -u origin HEAD\n\n-  Create pull request\n\nTODO\n----\n\n-  Add docs as a service like readthedocs with examples for every\n   feature\n-  Add support for missing QuerySet methods/Field lookups/Aggregation\n   functions:\n\n   -  Methods that return new QuerySets: annotate, reverse, none, extra,\n      raw\n\n   -  Methods that do not return QuerySets: bulk_create, in_bulk,\n      as_manager\n\n   -  Field lookups: search\n\n   -  Aggregation functions: StdDev, Variance\n\n.. |Latest Version| image:: https://img.shields.io/pypi/v/django_mock_queries.svg\n   :target: https://pypi.python.org/pypi/django_mock_queries\n.. |Build Status| image:: https://travis-ci.org/stphivos/django-mock-queries.svg?branch=master\n   :target: https://travis-ci.org/stphivos/django-mock-queries\n.. |Code Coverage| image:: https://codecov.io/github/stphivos/django-mock-queries/coverage.svg?branch=master\n   :target: https://codecov.io/github/stphivos/django-mock-queries?branch=master\n.. |Code Climate| image:: https://codeclimate.com/github/stphivos/django-mock-queries/badges/gpa.svg\n   :target: https://codeclimate.com/github/stphivos/django-mock-queries", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stphivos/django-mock-queries", "keywords": "django orm mocking unit-testing tdd", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-mock-queries", "package_url": "https://pypi.org/project/django-mock-queries/", "platform": "", "project_url": "https://pypi.org/project/django-mock-queries/", "project_urls": {"Homepage": "https://github.com/stphivos/django-mock-queries"}, "release_url": "https://pypi.org/project/django-mock-queries/2.1.5/", "requires_dist": null, "requires_python": "", "summary": "A django library for mocking queryset functions in memory for testing", "version": "2.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/django_mock_queries\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5cabb27cc27aa54db2964db12981ac4013c097c1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f5f6d6f636b5f717565726965732e737667\"></a> <a href=\"https://travis-ci.org/stphivos/django-mock-queries\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3378ed8a523ebf8764c4f53c9c6e8f06979802f0/68747470733a2f2f7472617669732d63692e6f72672f7374706869766f732f646a616e676f2d6d6f636b2d717565726965732e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/github/stphivos/django-mock-queries?branch=master\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3570d9433238f54f3b58ccf9b0cc633b74a377b/68747470733a2f2f636f6465636f762e696f2f6769746875622f7374706869766f732f646a616e676f2d6d6f636b2d717565726965732f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codeclimate.com/github/stphivos/django-mock-queries\" rel=\"nofollow\"><img alt=\"Code Climate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a51d5175f5f167012a7e1a033b91eae41a513d3/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f7374706869766f732f646a616e676f2d6d6f636b2d717565726965732f6261646765732f6770612e737667\"></a></p>\n<div id=\"django-mock-queries\">\n<h2>Django Mock Queries</h2>\n<p>A library for mocking Django queryset functions in memory for testing</p>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>QuerySet style support for method chaining</li>\n<li>Filtering with Q objects</li>\n<li>Aggregates generation</li>\n<li>CRUD functions</li>\n<li>Field lookups</li>\n<li>django-rest-framework serializer asserts</li>\n</ul>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">Avg</span><span class=\"p\">,</span> <span class=\"n\">Q</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_mock_queries.query</span> <span class=\"kn\">import</span> <span class=\"n\">MockSet</span><span class=\"p\">,</span> <span class=\"n\">MockModel</span>\n\n<span class=\"n\">qs</span> <span class=\"o\">=</span> <span class=\"n\">MockSet</span><span class=\"p\">(</span>\n    <span class=\"n\">MockModel</span><span class=\"p\">(</span><span class=\"n\">mock_name</span><span class=\"o\">=</span><span class=\"s1\">'john'</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'john@gmail.com'</span><span class=\"p\">),</span>\n    <span class=\"n\">MockModel</span><span class=\"p\">(</span><span class=\"n\">mock_name</span><span class=\"o\">=</span><span class=\"s1\">'jeff'</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'jeff@hotmail.com'</span><span class=\"p\">),</span>\n    <span class=\"n\">MockModel</span><span class=\"p\">(</span><span class=\"n\">mock_name</span><span class=\"o\">=</span><span class=\"s1\">'bill'</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'bill@gmail.com'</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">email__icontains</span><span class=\"o\">=</span><span class=\"s1\">'gmail.com'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select_related</span><span class=\"p\">(</span><span class=\"s1\">'address'</span><span class=\"p\">)]</span>\n<span class=\"c1\"># Outputs: [john, bill]</span>\n\n<span class=\"n\">qs</span> <span class=\"o\">=</span> <span class=\"n\">MockSet</span><span class=\"p\">(</span>\n    <span class=\"n\">MockModel</span><span class=\"p\">(</span><span class=\"n\">mock_name</span><span class=\"o\">=</span><span class=\"s1\">'model s'</span><span class=\"p\">,</span> <span class=\"n\">msrp</span><span class=\"o\">=</span><span class=\"mi\">70000</span><span class=\"p\">),</span>\n    <span class=\"n\">MockModel</span><span class=\"p\">(</span><span class=\"n\">mock_name</span><span class=\"o\">=</span><span class=\"s1\">'model x'</span><span class=\"p\">,</span> <span class=\"n\">msrp</span><span class=\"o\">=</span><span class=\"mi\">80000</span><span class=\"p\">),</span>\n    <span class=\"n\">MockModel</span><span class=\"p\">(</span><span class=\"n\">mock_name</span><span class=\"o\">=</span><span class=\"s1\">'model 3'</span><span class=\"p\">,</span> <span class=\"n\">msrp</span><span class=\"o\">=</span><span class=\"mi\">35000</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span> <span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">aggregate</span><span class=\"p\">(</span><span class=\"n\">Avg</span><span class=\"p\">(</span><span class=\"s1\">'msrp'</span><span class=\"p\">))</span>\n<span class=\"c1\"># Outputs: {'msrp__avg': 61666}</span>\n\n<span class=\"n\">qs</span> <span class=\"o\">=</span> <span class=\"n\">MockSet</span><span class=\"p\">(</span>\n    <span class=\"n\">MockModel</span><span class=\"p\">(</span><span class=\"n\">mock_name</span><span class=\"o\">=</span><span class=\"s1\">'model x'</span><span class=\"p\">,</span> <span class=\"n\">make</span><span class=\"o\">=</span><span class=\"s1\">'tesla'</span><span class=\"p\">,</span> <span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s1\">'usa'</span><span class=\"p\">),</span>\n    <span class=\"n\">MockModel</span><span class=\"p\">(</span><span class=\"n\">mock_name</span><span class=\"o\">=</span><span class=\"s1\">'s-class'</span><span class=\"p\">,</span> <span class=\"n\">make</span><span class=\"o\">=</span><span class=\"s1\">'mercedes'</span><span class=\"p\">,</span> <span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s1\">'germany'</span><span class=\"p\">),</span>\n    <span class=\"n\">MockModel</span><span class=\"p\">(</span><span class=\"n\">mock_name</span><span class=\"o\">=</span><span class=\"s1\">'s90'</span><span class=\"p\">,</span> <span class=\"n\">make</span><span class=\"o\">=</span><span class=\"s1\">'volvo'</span><span class=\"p\">,</span> <span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s1\">'sweden'</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">Q</span><span class=\"p\">(</span><span class=\"n\">make__iexact</span><span class=\"o\">=</span><span class=\"s1\">'tesla'</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">Q</span><span class=\"p\">(</span><span class=\"n\">country__iexact</span><span class=\"o\">=</span><span class=\"s1\">'germany'</span><span class=\"p\">))]</span>\n<span class=\"c1\"># Outputs: [model x, s-class]</span>\n\n<span class=\"n\">qs</span> <span class=\"o\">=</span> <span class=\"n\">MockSet</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">MockModel</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">mock_name</span><span class=\"o\">=</span><span class=\"s1\">'my_object'</span><span class=\"p\">,</span> <span class=\"n\">foo</span><span class=\"o\">=</span><span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"n\">bar</span><span class=\"o\">=</span><span class=\"s1\">'a'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Outputs: my_object</span>\n\n<span class=\"nb\">print</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">qs</span><span class=\"p\">]</span>\n<span class=\"c1\"># Outputs: [my_object]</span>\n</pre>\n<div id=\"test-function-that-uses-django-queryset\">\n<h4>Test function that uses Django QuerySet:</h4>\n<pre><span class=\"sd\">\"\"\"\nFunction that queries active users\n\"\"\"</span>\n<span class=\"k\">def</span> <span class=\"nf\">active_users</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">is_active</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n\n<span class=\"sd\">\"\"\"\nTest function applies expected filters by patching Django's user model Manager or Queryset with a MockSet\n\"\"\"</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_mock_queries.query</span> <span class=\"kn\">import</span> <span class=\"n\">MockSet</span><span class=\"p\">,</span> <span class=\"n\">MockModel</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TestApi</span><span class=\"p\">(</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>\n    <span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">MockSet</span><span class=\"p\">()</span>\n    <span class=\"n\">user_objects</span> <span class=\"o\">=</span> <span class=\"n\">patch</span><span class=\"p\">(</span><span class=\"s1\">'django.contrib.auth.models.User.objects'</span><span class=\"p\">,</span> <span class=\"n\">users</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@user_objects</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_api_active_users_filters_by_is_active_true</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n            <span class=\"n\">MockModel</span><span class=\"p\">(</span><span class=\"n\">mock_name</span><span class=\"o\">=</span><span class=\"s1\">'active user'</span><span class=\"p\">,</span> <span class=\"n\">is_active</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n            <span class=\"n\">MockModel</span><span class=\"p\">(</span><span class=\"n\">mock_name</span><span class=\"o\">=</span><span class=\"s1\">'inactive user'</span><span class=\"p\">,</span> <span class=\"n\">is_active</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">active_users</span><span class=\"p\">():</span>\n            <span class=\"k\">assert</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">is_active</span>\n</pre>\n</div>\n<div id=\"test-django-rest-framework-model-serializer\">\n<h4>Test django-rest-framework model serializer:</h4>\n<pre><span class=\"sd\">\"\"\"\nCar model serializer that includes a nested serializer and a method field\n\"\"\"</span>\n<span class=\"k\">class</span> <span class=\"nc\">CarSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"n\">make</span> <span class=\"o\">=</span> <span class=\"n\">ManufacturerSerializer</span><span class=\"p\">()</span>\n    <span class=\"n\">speed</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">SerializerMethodField</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_speed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">format_speed</span><span class=\"p\">()</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Car</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'make'</span><span class=\"p\">,</span> <span class=\"s1\">'model'</span><span class=\"p\">,</span> <span class=\"s1\">'speed'</span><span class=\"p\">,)</span>\n\n<span class=\"sd\">\"\"\"\nTest serializer returns fields with expected values and mock the result of nested serializer for field make\n\"\"\"</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_car_serializer_fields</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">car</span> <span class=\"o\">=</span> <span class=\"n\">Car</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">make</span><span class=\"o\">=</span><span class=\"n\">Manufacturer</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'vw'</span><span class=\"p\">),</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s1\">'golf'</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n\n    <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"n\">car</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n        <span class=\"s1\">'model'</span><span class=\"p\">:</span> <span class=\"n\">car</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">,</span>\n        <span class=\"s1\">'speed'</span><span class=\"p\">:</span> <span class=\"n\">car</span><span class=\"o\">.</span><span class=\"n\">formatted_speed</span><span class=\"p\">(),</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">assert_serializer</span><span class=\"p\">(</span><span class=\"n\">CarSerializer</span><span class=\"p\">)</span> \\\n        <span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">(</span><span class=\"n\">car</span><span class=\"p\">)</span> \\\n        <span class=\"o\">.</span><span class=\"n\">returns</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'make'</span><span class=\"p\">,</span> <span class=\"s1\">'model'</span><span class=\"p\">,</span> <span class=\"s1\">'speed'</span><span class=\"p\">)</span> \\\n        <span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">values</span><span class=\"p\">)</span> \\\n        <span class=\"o\">.</span><span class=\"n\">mocks</span><span class=\"p\">(</span><span class=\"s1\">'make'</span><span class=\"p\">)</span> \\\n        <span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"full-example\">\n<h4>Full Example</h4>\n<p>There is a full Django application in the <tt>examples/users</tt> folder. It\nshows how to configure <tt>django_mock_queries</tt> in your tests and run\nthem with or without setting up a Django database. Running the mock\ntests without a database can be much faster when your Django application\nhas a lot of database migrations.</p>\n<p>To run your Django tests without a database, add a new settings file,\nand call <tt>monkey_patch_test_db()</tt>. Use a wildcard import to get all\nthe regular settings as well.</p>\n<pre><span class=\"c1\"># settings_mocked.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_mock_queries.mocks</span> <span class=\"kn\">import</span> <span class=\"n\">monkey_patch_test_db</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">users.settings</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">monkey_patch_test_db</span><span class=\"p\">()</span>\n</pre>\n<p>Then run your Django tests with the new settings file:</p>\n<pre>./manage.py test --settings=users.settings_mocked\n</pre>\n<p>Here\u2019s the pytest equivalent:</p>\n<pre>pytest --ds=users.settings_mocked\n</pre>\n<p>That will run your tests without setting up a test database. All of your\ntests that use Django mock queries should run fine, but what about the\ntests that really need a database?</p>\n<pre>ERROR: test_create (examples.users.analytics.tests.TestApi)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/.../examples/users/analytics/tests.py\", line 28, in test_create\n    start_count = User.objects.count()\n  [...]\nNotSupportedError: Mock database tried to execute SQL for User model.\n</pre>\n<p>If you want to run your tests without a database, you need to tell\nDjango to skip the tests that need a database. You can do that by\nputting a skip decorator on the test classes or test methods that need a\ndatabase.</p>\n<pre><span class=\"nd\">@skipIfDBFeature</span><span class=\"p\">(</span><span class=\"s1\">'is_mocked'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">TestApi</span><span class=\"p\">(</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">start_count</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">()</span>\n\n        <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'bob'</span><span class=\"p\">)</span>\n        <span class=\"n\">final_count</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">()</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"n\">start_count</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">final_count</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>$ pip install django_mock_queries\n</pre>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>Anything missing or not functioning correctly? PRs are always welcome!\nOtherwise, you can create an issue so someone else does it when time\nallows.</p>\n<p>You can follow these guidelines:</p>\n<ul>\n<li>Fork the repo from this page</li>\n<li>Clone your fork:</li>\n</ul>\n<pre>$ git clone https://github.com/<span class=\"o\">{</span>your-username<span class=\"o\">}</span>/django-mock-queries.git\n$ <span class=\"nb\">cd</span> django-mock-queries\n$ git checkout -b feature/your_cool_feature\n</pre>\n<ul>\n<li>Implement feature/fix</li>\n<li>Add/modify relevant tests</li>\n<li>Run tox to verify all tests and flake8 quality checks pass</li>\n</ul>\n<pre>$ tox\n</pre>\n<ul>\n<li>Commit and push local branch to your origin</li>\n</ul>\n<pre>$ git commit . -m <span class=\"s2\">\"New cool feature does this\"</span>\n$ git push -u origin HEAD\n</pre>\n<ul>\n<li>Create pull request</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h3>TODO</h3>\n<ul>\n<li>Add docs as a service like readthedocs with examples for every\nfeature</li>\n<li>Add support for missing QuerySet methods/Field lookups/Aggregation\nfunctions:<ul>\n<li>Methods that return new QuerySets: annotate, reverse, none, extra,\nraw</li>\n<li>Methods that do not return QuerySets: bulk_create, in_bulk,\nas_manager</li>\n<li>Field lookups: search</li>\n<li>Aggregation functions: StdDev, Variance</li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7160945, "releases": {"0.0.1": [], "0.0.10": [{"comment_text": "", "digests": {"md5": "7554ea3e1e3237509c88583cc6defdd0", "sha256": "4de7be94e1f0a707f223914021ab7888e1d48b62771b44512fbeaf201f343aab"}, "downloads": -1, "filename": "django_mock_queries-0.0.10.tar.gz", "has_sig": false, "md5_digest": "7554ea3e1e3237509c88583cc6defdd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2975, "upload_time": "2016-03-30T23:22:13", "upload_time_iso_8601": "2016-03-30T23:22:13.872465Z", "url": "https://files.pythonhosted.org/packages/2f/09/53061628c3c2256825ffd1a8be1ff0ac989af0fc76ef70dc023bf62c71be/django_mock_queries-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "eaaa82bc563dfa43c816f44d9b241b2f", "sha256": "e467446cd0b55db9cef36fbc8ad7ed9f4f027bcf9f11ddaf2e46b22a298f8cf3"}, "downloads": -1, "filename": "django_mock_queries-0.0.11.tar.gz", "has_sig": false, "md5_digest": "eaaa82bc563dfa43c816f44d9b241b2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2981, "upload_time": "2016-04-03T15:21:38", "upload_time_iso_8601": "2016-04-03T15:21:38.826350Z", "url": "https://files.pythonhosted.org/packages/ae/94/0b4076471eaaa99e3a18032575a466585b7a367e5f1c2515b2eade45e621/django_mock_queries-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "380381f253a4a1141a4df74b6df616f7", "sha256": "a22b6f5bf4fc94c9bd1616944280b77f17311c9ee194090b49d49bac0cfd025f"}, "downloads": -1, "filename": "django_mock_queries-0.0.12.tar.gz", "has_sig": false, "md5_digest": "380381f253a4a1141a4df74b6df616f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3800, "upload_time": "2016-04-10T21:41:16", "upload_time_iso_8601": "2016-04-10T21:41:16.630918Z", "url": "https://files.pythonhosted.org/packages/07/83/393e598d00d10a519678e8530119bd84b28c803351bb2ec25e2ace12fe91/django_mock_queries-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "9d3649b110317f9611f7e7f01268892e", "sha256": "77e7eb620b17091e6699824ba22104f8c4f291246fbd592aeff510a28870f854"}, "downloads": -1, "filename": "django_mock_queries-0.0.13.tar.gz", "has_sig": false, "md5_digest": "9d3649b110317f9611f7e7f01268892e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4378, "upload_time": "2016-06-08T18:49:29", "upload_time_iso_8601": "2016-06-08T18:49:29.357171Z", "url": "https://files.pythonhosted.org/packages/37/1f/52bc981d0ddaed24cc62a0de50d917e09146e61e7b6e337923404bb62ce0/django_mock_queries-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "69f75fdacec1740cd42015cfa40af2b4", "sha256": "d4a959cb3a8057174c4a6590eed59b87f76f8fe041f3cb1ac6bef5d352957a02"}, "downloads": -1, "filename": "django_mock_queries-0.0.14.tar.gz", "has_sig": false, "md5_digest": "69f75fdacec1740cd42015cfa40af2b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5730, "upload_time": "2016-12-15T11:50:09", "upload_time_iso_8601": "2016-12-15T11:50:09.751907Z", "url": "https://files.pythonhosted.org/packages/c5/62/ae386ccb16a14b345a2fc6a8f49b657a08002dc9b2b21f04912e2cb94326/django_mock_queries-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "886c1ce05e9e6213b4bd284148d39746", "sha256": "49735abf4a8a0cfc477355a3a29705db3b67913273f31019a56fe34701f73f29"}, "downloads": -1, "filename": "django_mock_queries-0.0.15.tar.gz", "has_sig": false, "md5_digest": "886c1ce05e9e6213b4bd284148d39746", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9545, "upload_time": "2017-03-08T14:41:41", "upload_time_iso_8601": "2017-03-08T14:41:41.606256Z", "url": "https://files.pythonhosted.org/packages/42/5d/b5c5e01b01d2e60fbd56974dd9b2ab86d30fff82807006bab2eab570b894/django_mock_queries-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "edcf8e3693ec8b685ba4731dd2665e60", "sha256": "73b7e4b9e990b8db302807c7b84f460f58cfee59c60158d8ced13cc0cb530b54"}, "downloads": -1, "filename": "django_mock_queries-0.0.16.tar.gz", "has_sig": false, "md5_digest": "edcf8e3693ec8b685ba4731dd2665e60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10190, "upload_time": "2017-03-14T10:30:37", "upload_time_iso_8601": "2017-03-14T10:30:37.719634Z", "url": "https://files.pythonhosted.org/packages/f3/cd/670b2abdfe1e7025d42eb0db3572cb7ce191bf693aff5a7d28d897227113/django_mock_queries-0.0.16.tar.gz", "yanked": false}], "0.0.16.1": [{"comment_text": "", "digests": {"md5": "6540db6149feb48fc5dfa7d8312425e9", "sha256": "d2407b26062a4d50be6cee76245b1f2947f08240bc3412adc0cf37602cd2c7a2"}, "downloads": -1, "filename": "django_mock_queries-0.0.16.1.tar.gz", "has_sig": false, "md5_digest": "6540db6149feb48fc5dfa7d8312425e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10211, "upload_time": "2017-03-14T10:39:49", "upload_time_iso_8601": "2017-03-14T10:39:49.570081Z", "url": "https://files.pythonhosted.org/packages/77/25/3827d794be75cf8fa886b357f386c40c442079aae12894f2129a14c22bc4/django_mock_queries-0.0.16.1.tar.gz", "yanked": false}], "0.0.16.2": [{"comment_text": "", "digests": {"md5": "ca3f7fa9510590c637f8a3d067b86842", "sha256": "7b09671dfac87867c23ae5fc0374bb30f5afff252c434180ab0ef1f68240ca44"}, "downloads": -1, "filename": "django_mock_queries-0.0.16.2.tar.gz", "has_sig": false, "md5_digest": "ca3f7fa9510590c637f8a3d067b86842", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12672, "upload_time": "2017-03-14T10:46:35", "upload_time_iso_8601": "2017-03-14T10:46:35.458813Z", "url": "https://files.pythonhosted.org/packages/ed/5e/675bd8a3cf25ee754ff80291a660ff449d8c158f90d55594b0d94bb55fe8/django_mock_queries-0.0.16.2.tar.gz", "yanked": false}], "0.0.16.3": [{"comment_text": "", "digests": {"md5": "70ead27f55f1b7f8444e8f0ce3a13dc6", "sha256": "0be8f23a7e86f1e1fcb83ee57bdf8cf2e4048ac6a37fb8a53a4d213801c67b45"}, "downloads": -1, "filename": "django_mock_queries-0.0.16.3.tar.gz", "has_sig": false, "md5_digest": "70ead27f55f1b7f8444e8f0ce3a13dc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12848, "upload_time": "2017-03-14T10:48:22", "upload_time_iso_8601": "2017-03-14T10:48:22.553471Z", "url": "https://files.pythonhosted.org/packages/43/29/a1dea689373be3c214eabccda6a268e9bf3ceb7506d0ae97c524763a5772/django_mock_queries-0.0.16.3.tar.gz", "yanked": false}], "0.0.16.4": [{"comment_text": "", "digests": {"md5": "c3a2fe2dae073e687b6ac36314d1392f", "sha256": "cd293c61014bbaed9fc42b1262ad62198f9a03dec4926096e5dc174251939c5c"}, "downloads": -1, "filename": "django_mock_queries-0.0.16.4.tar.gz", "has_sig": false, "md5_digest": "c3a2fe2dae073e687b6ac36314d1392f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12877, "upload_time": "2017-03-14T11:41:56", "upload_time_iso_8601": "2017-03-14T11:41:56.275987Z", "url": "https://files.pythonhosted.org/packages/00/dd/c8dcc377673d00caee5ec3957f72eef9c61ecee67d2e6481c26addf96c9a/django_mock_queries-0.0.16.4.tar.gz", "yanked": false}], "0.0.16.5": [{"comment_text": "", "digests": {"md5": "d02173b4f72197676f70f6a5fff63a1d", "sha256": "39fb2ea673bfdb216324d69761e1f22ec638bc05226e66ad457a3782b59a4803"}, "downloads": -1, "filename": "django_mock_queries-0.0.16.5.tar.gz", "has_sig": false, "md5_digest": "d02173b4f72197676f70f6a5fff63a1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12902, "upload_time": "2017-03-14T12:58:00", "upload_time_iso_8601": "2017-03-14T12:58:00.645310Z", "url": "https://files.pythonhosted.org/packages/af/ff/0ab8d8a3089166c6a0e89b9c10920a67aefe5cccd99c489da5423faa1f65/django_mock_queries-0.0.16.5.tar.gz", "yanked": false}], "0.0.2": [], "0.0.3": [{"comment_text": "", "digests": {"md5": "d67ce6ae8f354e1bc1a09a4bf62ed02e", "sha256": "1a9170a205654ed019a0b067277d4852edd9e54e1ea91afc6c6d58ebaa4c07bb"}, "downloads": -1, "filename": "django_mock_queries-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d67ce6ae8f354e1bc1a09a4bf62ed02e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2677, "upload_time": "2016-03-20T20:45:33", "upload_time_iso_8601": "2016-03-20T20:45:33.130165Z", "url": "https://files.pythonhosted.org/packages/ba/e1/7e104d86939c854393a4f701b6ceee3412f4d64c5ae1e8d951f2fc19f86c/django_mock_queries-0.0.3.tar.gz", "yanked": false}], "0.0.4": [], "0.0.5": [{"comment_text": "", "digests": {"md5": "df60089afe512d47339f0acb0f7dd281", "sha256": "77e8051b3b080bfe415e8c3721ad402ab1ff1fd6dcdaa6b030c7a2e3ae058514"}, "downloads": -1, "filename": "django_mock_queries-0.0.5.tar.gz", "has_sig": false, "md5_digest": "df60089afe512d47339f0acb0f7dd281", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2897, "upload_time": "2016-03-27T19:34:33", "upload_time_iso_8601": "2016-03-27T19:34:33.898285Z", "url": "https://files.pythonhosted.org/packages/4d/a6/f08e8faa877b81cdc25d112b1b445e6745d188f7cdaeae31840306698f00/django_mock_queries-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "bfbf851178ea9053a0879616cb2faed1", "sha256": "4ca5b432f0b942234b01565ac98d61312f39d3e6581fc61320da81ec1954395d"}, "downloads": -1, "filename": "django_mock_queries-0.0.6.tar.gz", "has_sig": false, "md5_digest": "bfbf851178ea9053a0879616cb2faed1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2937, "upload_time": "2016-03-29T15:44:05", "upload_time_iso_8601": "2016-03-29T15:44:05.927583Z", "url": "https://files.pythonhosted.org/packages/4d/2a/8b249063139c0234e8a9c11dae9aa2506d42697a2cb29f822ce003bf9622/django_mock_queries-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "d37e344788631162926df4b08ba44c59", "sha256": "a4124fba3f6745c8b014db49474ef9277b63bf1007aa1aeab9d9c25ba9cb790f"}, "downloads": -1, "filename": "django_mock_queries-0.0.7.tar.gz", "has_sig": false, "md5_digest": "d37e344788631162926df4b08ba44c59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2899, "upload_time": "2016-03-30T12:25:56", "upload_time_iso_8601": "2016-03-30T12:25:56.466160Z", "url": "https://files.pythonhosted.org/packages/47/2c/56d666210f01c8ff684b2a331c331ec7f4aef8341b615537b421b5cd0f9d/django_mock_queries-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "30787e491e8d490c54f6d240bfc8fc89", "sha256": "935e2056d756fafd90b0ab53b27bdc5424e76725b6edc5b07c82f64898ea16e1"}, "downloads": -1, "filename": "django_mock_queries-0.0.8.tar.gz", "has_sig": false, "md5_digest": "30787e491e8d490c54f6d240bfc8fc89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2881, "upload_time": "2016-03-30T13:29:12", "upload_time_iso_8601": "2016-03-30T13:29:12.422646Z", "url": "https://files.pythonhosted.org/packages/3d/22/f08565d669b8fc4f9447766dc36440d6b08515a286850c8383f84b119981/django_mock_queries-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "57b58a823d847f195e77a7737d8b4c9e", "sha256": "35a8d632ff260bc6ebe548a637d774e7d95a26deb88a7aa62168dc248227dd54"}, "downloads": -1, "filename": "django_mock_queries-0.0.9.tar.gz", "has_sig": false, "md5_digest": "57b58a823d847f195e77a7737d8b4c9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2972, "upload_time": "2016-03-30T23:20:09", "upload_time_iso_8601": "2016-03-30T23:20:09.701889Z", "url": "https://files.pythonhosted.org/packages/3b/b0/ea985b4aeb0b1da054b1cefa2242cbc79e8d2c32117f9c2e169c22d75dac/django_mock_queries-0.0.9.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "071ab8f44b569cd309b090db4225a80c", "sha256": "3ea70b6f7ca3bc9924d55c322b74f2370f771d98cca48f07b42ec8523d1eb993"}, "downloads": -1, "filename": "django_mock_queries-1.0.0.tar.gz", "has_sig": false, "md5_digest": "071ab8f44b569cd309b090db4225a80c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13541, "upload_time": "2017-10-15T17:50:26", "upload_time_iso_8601": "2017-10-15T17:50:26.189372Z", "url": "https://files.pythonhosted.org/packages/1c/12/7ffc31052b564f86eeb87880d5033616ae89d91fc92edb82e7db41c12896/django_mock_queries-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4fa41f9ee18ce297f1aaa80b2c3724a8", "sha256": "beda5f10b7d8a4e7a189ac2e6f35b11b5f9fa05a7c01b9e611cf1a8971b9f3e4"}, "downloads": -1, "filename": "django_mock_queries-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4fa41f9ee18ce297f1aaa80b2c3724a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13300, "upload_time": "2017-10-16T20:52:02", "upload_time_iso_8601": "2017-10-16T20:52:02.395979Z", "url": "https://files.pythonhosted.org/packages/31/a6/da6678e60fd06904a1d93af5bbe32e76ffe2e8f8f3aa1595d579c5f6657e/django_mock_queries-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "10be47b2669ed9171b2fdbc3f549e588", "sha256": "b0e87270638f8f473fbb3e001528a86a067c628cd6832ea30919a575aeb29edf"}, "downloads": -1, "filename": "django_mock_queries-1.0.2.tar.gz", "has_sig": false, "md5_digest": "10be47b2669ed9171b2fdbc3f549e588", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13394, "upload_time": "2017-10-16T20:52:42", "upload_time_iso_8601": "2017-10-16T20:52:42.858449Z", "url": "https://files.pythonhosted.org/packages/1d/39/12760a056fc6a31bdc4706df03d4c86161f7886e0e976af437bc3e4aefa4/django_mock_queries-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "99e8758b7804fdd1da730cff6fbeffe6", "sha256": "f05f77d3928fff3a94d94cd70c08ef63f5416e8c50a401dbc0fb1ffa173f01e9"}, "downloads": -1, "filename": "django_mock_queries-1.0.3.tar.gz", "has_sig": false, "md5_digest": "99e8758b7804fdd1da730cff6fbeffe6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14513, "upload_time": "2017-11-30T20:20:13", "upload_time_iso_8601": "2017-11-30T20:20:13.387594Z", "url": "https://files.pythonhosted.org/packages/77/ac/eb8db330134d9bed37d392a8318703e070d8ccf4394ffe0226125c8743f6/django_mock_queries-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "8441baa62915f51706a2e4b0ded5ba1d", "sha256": "2006c22f2f43e0d449c094e407358b0a614beca47cfb4e9b24e9d7b650b1b03b"}, "downloads": -1, "filename": "django_mock_queries-1.0.4.tar.gz", "has_sig": false, "md5_digest": "8441baa62915f51706a2e4b0ded5ba1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14767, "upload_time": "2017-11-30T20:26:51", "upload_time_iso_8601": "2017-11-30T20:26:51.592856Z", "url": "https://files.pythonhosted.org/packages/5d/8d/bd036d434f1c72ff363c79ca487ea26478ff34d3ffa320a8f81b25eed5fd/django_mock_queries-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "14975adc2ab34cb949f8fe163309835a", "sha256": "236d4e6de4a72c261a11e7e090cb566749d8c2e48c0aa11e925f661e5ed67317"}, "downloads": -1, "filename": "django_mock_queries-1.0.5.tar.gz", "has_sig": false, "md5_digest": "14975adc2ab34cb949f8fe163309835a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14792, "upload_time": "2017-11-30T20:50:18", "upload_time_iso_8601": "2017-11-30T20:50:18.118972Z", "url": "https://files.pythonhosted.org/packages/ea/a0/55fefaafa3e8199dead557c4ec89c9f340af49b84f83d59c649af56dfee7/django_mock_queries-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "0814b26d0024f6da7b1446f71a03bce7", "sha256": "8e3272734d1f690c6c55dace79575408117cb5ebd650b9b6a438a49f2975fba2"}, "downloads": -1, "filename": "django_mock_queries-1.0.6.tar.gz", "has_sig": false, "md5_digest": "0814b26d0024f6da7b1446f71a03bce7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16543, "upload_time": "2018-02-13T09:49:16", "upload_time_iso_8601": "2018-02-13T09:49:16.501481Z", "url": "https://files.pythonhosted.org/packages/23/5f/d2b7eca1c70c58e355a780607782674390b30061fa6f8ec3c619e76bff78/django_mock_queries-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "1af47f13e0329b9f6641cc6a89ed49cd", "sha256": "b5ca1ee25b642336f118265e91ae72ceeb942b55afc7db39fb0ebef03b266e7c"}, "downloads": -1, "filename": "django_mock_queries-1.0.7.tar.gz", "has_sig": false, "md5_digest": "1af47f13e0329b9f6641cc6a89ed49cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17592, "upload_time": "2018-03-03T00:39:02", "upload_time_iso_8601": "2018-03-03T00:39:02.263348Z", "url": "https://files.pythonhosted.org/packages/a9/aa/931e08b8576ac594d7ba2ff512194cc49302c93a2caddfc7ef0bc185f0b7/django_mock_queries-1.0.7.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "660cc6fd1b96b4bd24247373cb722e5c", "sha256": "8f788f7c0d55d96a4dc0f1f6b062647b3455d81fda601c0e473a42af7ef17897"}, "downloads": -1, "filename": "django_mock_queries-2.0.0.tar.gz", "has_sig": false, "md5_digest": "660cc6fd1b96b4bd24247373cb722e5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17849, "upload_time": "2018-04-21T15:02:28", "upload_time_iso_8601": "2018-04-21T15:02:28.170779Z", "url": "https://files.pythonhosted.org/packages/f0/1a/070e5262800b12e31590a1cab8125123f967b698f388875e07db614f44cb/django_mock_queries-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "3a8b332f743f7a91ad8b27f6d6521de1", "sha256": "aad1cebf5a024df9fa0b32f5cb75f5d7a2e4becb2143fba3d67f3d738164c4e9"}, "downloads": -1, "filename": "django_mock_queries-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a8b332f743f7a91ad8b27f6d6521de1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21278, "upload_time": "2019-04-27T15:14:41", "upload_time_iso_8601": "2019-04-27T15:14:41.550850Z", "url": "https://files.pythonhosted.org/packages/32/98/b1d168a72a0fb1d16b405f04a21a46307fc17373199b82cccdff14594c48/django_mock_queries-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c3cd5dc82e76a732ffe28d292455fbb", "sha256": "fffa7e8917d15f3731147b830e294b7f24a36c3460984508aedaa3903db785a4"}, "downloads": -1, "filename": "django_mock_queries-2.0.1.tar.gz", "has_sig": false, "md5_digest": "7c3cd5dc82e76a732ffe28d292455fbb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17859, "upload_time": "2018-05-18T18:24:37", "upload_time_iso_8601": "2018-05-18T18:24:37.783257Z", "url": "https://files.pythonhosted.org/packages/1e/d2/aa8a2e6093be6e12ced48bb26840a67c557fb004d22e5e1d1aac054a2b93/django_mock_queries-2.0.1.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "2cf9810dc245c7ef946c8a71a85fa0de", "sha256": "7e4363135d0502695e32c54dc7812dd0d5981d20635f5221fa23fcae67e65bb2"}, "downloads": -1, "filename": "django_mock_queries-2.0.5.tar.gz", "has_sig": false, "md5_digest": "2cf9810dc245c7ef946c8a71a85fa0de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16898, "upload_time": "2018-08-09T08:32:26", "upload_time_iso_8601": "2018-08-09T08:32:26.334152Z", "url": "https://files.pythonhosted.org/packages/a6/99/6cd18c2ca80915f25ff1fb217c02f85a1044369048da27fbb8ef3c45e66b/django_mock_queries-2.0.5.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "6d2c36810a17a1737ebfbee287ef77d9", "sha256": "1f47997cdbe97a2e0f6d6e6b4cdee7c728feb086a2f82c22cc25f3609e75a501"}, "downloads": -1, "filename": "django_mock_queries-2.1.0.tar.gz", "has_sig": false, "md5_digest": "6d2c36810a17a1737ebfbee287ef77d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16898, "upload_time": "2018-08-09T08:38:32", "upload_time_iso_8601": "2018-08-09T08:38:32.050270Z", "url": "https://files.pythonhosted.org/packages/5f/b7/0b5dc732dfa3341ba9f141b53ae3a9b4760fcb71a85fd725e03e22faf0e6/django_mock_queries-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "e83bdb1decdb990e9a3299482747b2ae", "sha256": "1c3a8c05d65c8b61bc9169eb7058c250139ae39b38157d0aef844653c665a27c"}, "downloads": -1, "filename": "django_mock_queries-2.1.1.tar.gz", "has_sig": false, "md5_digest": "e83bdb1decdb990e9a3299482747b2ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16901, "upload_time": "2018-08-09T09:18:03", "upload_time_iso_8601": "2018-08-09T09:18:03.744105Z", "url": "https://files.pythonhosted.org/packages/1b/f6/8af335c6f22eedd37fea2e8e7816049ef424434d1166812e9b1cfdb14ce4/django_mock_queries-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "f97daa8395e7f09cfea7360824d0f100", "sha256": "e81f448fd18a90157f07ba18ce11abc6522e26d3a92ce38e35b1db822641d47e"}, "downloads": -1, "filename": "django_mock_queries-2.1.2.tar.gz", "has_sig": false, "md5_digest": "f97daa8395e7f09cfea7360824d0f100", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19812, "upload_time": "2019-04-27T15:16:48", "upload_time_iso_8601": "2019-04-27T15:16:48.538972Z", "url": "https://files.pythonhosted.org/packages/a1/4f/995af5a1bad67f29ad603467eeab68a0e3ed8b7dcbc9b36b9a4647723dac/django_mock_queries-2.1.2.tar.gz", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "f80f162b8f3250d6fbe3251508a34eb0", "sha256": "d5b6991d1b65c54b272c89f17296a034f7fffd0f4ea78e39104b8c9f0796b4d4"}, "downloads": -1, "filename": "django_mock_queries-2.1.3.tar.gz", "has_sig": false, "md5_digest": "f80f162b8f3250d6fbe3251508a34eb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16928, "upload_time": "2019-05-04T21:41:47", "upload_time_iso_8601": "2019-05-04T21:41:47.186783Z", "url": "https://files.pythonhosted.org/packages/0f/93/2bdadc0b74ce698843dc7ea3f564b1095cbc7d256fdab0827d5e6eace1b9/django_mock_queries-2.1.3.tar.gz", "yanked": false}], "2.1.4": [{"comment_text": "", "digests": {"md5": "dfd1d3ec36b8f44aa43c0cb39eb97e3f", "sha256": "63a1fb31376a9533ba246c4d8b676007f05a1afe9af4f2de8714582519d66fcf"}, "downloads": -1, "filename": "django_mock_queries-2.1.4.tar.gz", "has_sig": false, "md5_digest": "dfd1d3ec36b8f44aa43c0cb39eb97e3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19743, "upload_time": "2020-03-02T00:51:25", "upload_time_iso_8601": "2020-03-02T00:51:25.941586Z", "url": "https://files.pythonhosted.org/packages/61/9d/2a1828b6cfcdcc8dbb16e3ab28399a483863015cb2e1ae5f2f1216824e44/django_mock_queries-2.1.4.tar.gz", "yanked": false}], "2.1.5": [{"comment_text": "", "digests": {"md5": "b68164c91567de70ae33d7dfaaf05fbf", "sha256": "0c5f51eaaaa9732c43a7af8c55a543542d747ea2780aecf6e7b0bbf29f20c083"}, "downloads": -1, "filename": "django_mock_queries-2.1.5.tar.gz", "has_sig": false, "md5_digest": "b68164c91567de70ae33d7dfaaf05fbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19760, "upload_time": "2020-05-04T02:24:30", "upload_time_iso_8601": "2020-05-04T02:24:30.861803Z", "url": "https://files.pythonhosted.org/packages/d9/e9/6848f5ec12842022d9f39477d033904819e1018634f68f12cc671402f1b9/django_mock_queries-2.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b68164c91567de70ae33d7dfaaf05fbf", "sha256": "0c5f51eaaaa9732c43a7af8c55a543542d747ea2780aecf6e7b0bbf29f20c083"}, "downloads": -1, "filename": "django_mock_queries-2.1.5.tar.gz", "has_sig": false, "md5_digest": "b68164c91567de70ae33d7dfaaf05fbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19760, "upload_time": "2020-05-04T02:24:30", "upload_time_iso_8601": "2020-05-04T02:24:30.861803Z", "url": "https://files.pythonhosted.org/packages/d9/e9/6848f5ec12842022d9f39477d033904819e1018634f68f12cc671402f1b9/django_mock_queries-2.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:02 2020"}