{"info": {"author": "Giuseppe De Marco", "author_email": "giuseppe.demarco@unical.it", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Django Audit Wazuh\n------------------\n\nAuditing app, simple as possible, to have a good logging system for security purpose.\nYou'll have a json file able to be processed by a SIEM like Wazuh or OSSEC.\n\nFeatures\n- Login, logout and bruteforce attempts.\n\nTodo\n- Other critical django.security messages, needs more testing with sane unit tests.\n\nSetup\n-----\n\n````\npip install django-audit\n# or\npip install git+https://github.com/peppelinux/django-audit.git\n````\n\nConfiguration\n-------------\n\nIn `settings.py`:\n\n1. add 'auditing' in `INSTALLED_APPS`\n2. add a Middleware as follows (not mandatory!)\n3. configure a logging as follows\n\n````\n# requests headers auditing\nif 'auditing' in INSTALLED_APPS:\n    MIDDLEWARE.append('auditing.middlewares.HttpHeadersLoggingMiddleware')\n#\n\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'default': {\n            # exact format is not important, this is the minimum information\n            'format': '%(asctime)s %(name)-12s %(levelname)-8s %(message)s',\n        },\n        'detailed': {\n            'format': '[%(asctime)s] %(message)s [(%(levelname)s)] %(args)s %(name)s %(filename)s.%(funcName)s:%(lineno)s]'\n        },\n        'json': {\n            'format': '{\"timestamp\": \"%(asctime)s\", \"msg\": %(message)s, \"level\": \"%(levelname)s\",  \"name\": \"%(name)s\", \"path\": \"%(filename)s.%(funcName)s:%(lineno)s\", \"@source\":\"django-audit\"}'\n        },\n    },\n    'filters': {\n        'require_debug_false': {\n            '()': 'django.utils.log.RequireDebugFalse'\n        }\n    },\n    'handlers': {\n        'mail_admins': {\n            'level': 'ERROR',\n            'filters': ['require_debug_false'],\n            'class': 'django.utils.log.AdminEmailHandler'\n        },\n        'file': {\n            'formatter': 'json',\n            'level': 'DEBUG',\n            'class': 'logging.handlers.RotatingFileHandler',\n            'filename': './django_siem.log',\n            'maxBytes': 1024000,\n            'backupCount': 3,\n        },\n        'console': {\n            'formatter': 'detailed',\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n        },\n    },\n    'loggers': {\n        'django.security': {\n                'handlers': ['console', 'file'],\n                'level': 'DEBUG',\n                'propagate': False,\n        },\n        'django.request': {\n            'handlers': ['console', 'file'],\n            'level': 'DEBUG',\n            'propagate': True,\n        },\n        'django.contrib.auth': {\n            'handlers': ['console', 'file'],\n            'level': 'DEBUG',\n            'propagate': True,\n        },\n        'django.db.backends': {\n            'level': 'ERROR',\n            'handlers': ['console', 'file'],\n            'propagate': True,\n        },\n        'auditing': {\n            'handlers': ['console', 'file'],\n            'level': 'INFO',\n            'propagate': True,\n        },\n    }\n}\n\n````\n\nResults\n-------\n\nYou'll get a file with all the relevant events in json format, like\n\n````\n{\"timestamp\": \"2020-04-21 13:05:01,238\", \"msg\": \"Django Login failed\", \"username\": \"dsfsdf\", \"url\": \"http://localhost:8000/gestionelogin/?next=/gestione\", \"data.srcip\": \"127.0.0.1\", \"path\": \"/gestionelogin/?next=/gestione\", \"Content-Length\": \"132\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"Host\": \"localhost:8000\", \"User-Agent\": \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:75.0) Gecko/20100101 Firefox/75.0\", \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Accept-Encoding\": \"gzip, deflate\", \"Origin\": \"http://localhost:8000\", \"Connection\": \"keep-alive\", \"Referer\": \"http://localhost:8000/gestionelogin/?next=/gestione\", \"Cookie\": \"csrftoken=pTG3UCHtiE0q4PNectVIH4hbezbqL2O2tvWx97rY8zwOxigSzG9unl2tqELzMhpM; cookieconsent_status=dismiss\", \"Upgrade-Insecure-Requests\": \"1\", \"level\": \"WARNING\",  \"name\": \"auditing\", \"path\": \"__init__.py.login_failed_logger:23\", \"@source\":\"django-audit\"}\n{\"timestamp\": \"2020-04-21 13:05:33,521\", \"msg\": \"Django Login successful\", \"username\": \"wert\", \"url\": \"http://localhost:8000/gestionelogin/?next=/gestione\", \"data.srcip\": \"127.0.0.1\", \"path\": \"/gestionelogin/?next=/gestione\", \"Content-Length\": \"131\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"Host\": \"localhost:8000\", \"User-Agent\": \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:75.0) Gecko/20100101 Firefox/75.0\", \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Accept-Encoding\": \"gzip, deflate\", \"Origin\": \"http://localhost:8000\", \"Connection\": \"keep-alive\", \"Referer\": \"http://localhost:8000/gestionelogin/?next=/gestione\", \"Cookie\": \"csrftoken=pTG3UCHtiE0q4PNectVIH4hbezbqL2O2tvWx97rY8zwOxigSzG9unl2tqELzMhpM; cookieconsent_status=dismiss\", \"Upgrade-Insecure-Requests\": \"1\", \"level\": \"INFO\",  \"name\": \"auditing\", \"path\": \"__init__.py.login_logger:16\", \"@source\":\"django-audit\"}\n{\"timestamp\": \"2020-04-21 13:05:36,582\", \"msg\": \"Django Logout successful\", \"username\": \"wert\", \"url\": \"http://localhost:8000/gestionelogout/\", \"data.srcip\": \"127.0.0.1\", \"path\": \"/gestionelogout/\", \"Content-Type\": \"text/plain\", \"Host\": \"localhost:8000\", \"User-Agent\": \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:75.0) Gecko/20100101 Firefox/75.0\", \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Accept-Encoding\": \"gzip, deflate\", \"Connection\": \"keep-alive\", \"Referer\": \"http://localhost:8000/gestione\", \"Cookie\": \"csrftoken=e50mIQ4NWKYjDKBKA9a1iFufQuRv2W8LKAWnIjm4meXhiCSWPHzxfkrllMeNVqDR; cookieconsent_status=dismiss; sessionid=cxu3hfono6t6p1dl70q80836pe292ri3\", \"Upgrade-Insecure-Requests\": \"1\", \"level\": \"INFO\",  \"name\": \"auditing\", \"path\": \"__init__.py.logout_logger:30\", \"@source\":\"django-audit\"}\n````\n\nTuning\n------\n\nAuditing Middleware can log everything between a http request and its following response.\nThese are the overloadable settings variables\n\n````\n# for i in http.HTTPStatus: print(i, i.value) \nAUDIT_RESPONSE_HTTPCODES = getattr(settings,\n                                   'AUDIT_RESPONSE_HTTPCODES',\n                                   [i.value for i in http.HTTPStatus if i not in (200,201,202,301,302)])\n\n# prevents to read the password in clear\nAUDIT_REQUEST_POST_IGNORED = ('password', )\n````\n\n\nWazuh configuration\n-------------------\n\n1. Copy the content of `wazuh-ruleset/27081-django_decoders.xml` in `/var/ossec/etc/decoders/local_decoder.xml`\n\n2. Copy the content of `wazuh-ruleset/27081-django_rules.xml` in `/var/ossec/etc/rules/local_rules.xml`.\n\n3. Test the triggers with `/var/ossec/bin/ossec-logtest`, copy a log line in stdin and see events.\n\n4. Create an agent group called `django`\n   ````\n   /var/ossec/bin/agent_groups -a -g django\n   ````\n5. Edit agent group configuration `/var/ossec/etc/shared/django/agent.conf` this way\n   ````\n   <localfile>\n        <location>ABSOLUTE_PATH_TO_YOUR_DJANGO_AUDIT_LOG.json</location>\n        <log_format>json</log_format>\n        <label key=\"@source\">django-audit</label>\n   </localfile>\n   ````\n6. Add agents to this group\n   ````\n   /var/ossec/bin/agent_groups -a -i 014 -g django\n   ````\n7. Control when they are synced\n   ````\n   /var/ossec/bin/agent_groups -S -i 014\n   ````\n8. Restart Wazuh-manager to reload rulesets `service wazuh-manager restart`\n\n\nGeoIP\n-----\n\nOn wazuh-manager, edit /usr/share/filebeat/module/wazuh/alerts/ingest/pipeline.json adding the new IP field inside processors, along the other Geolocation fields:\n````\n    {\n      \"geoip\": {\n        \"field\": \"srcip\",\n        \"target_field\": \"GeoLocation\",\n        \"properties\": [\"city_name\", \"country_name\", \"region_name\", \"location\"],\n        \"ignore_missing\": true,\n        \"ignore_failure\": true\n      }\n    },\n````\n\nWe now need to delete the current pipeline. In Kibana, go to Dev Tools clicking on the Wrench icon. Then execute the following:\n````\nDELETE _ingest/pipeline/filebeat-7.6.2-wazuh-alerts-pipeline\n````\n\nWe restart Filebeat in wazuh-manager:\n````\nsystemctl restart filebeat\n````\n\nLicense\n-------\n\nApache\n\n\nAuthors\n-------\n\nGiuseppe De Marco <giuseppe.demarco@unical.it>\n\n\nCredits\n-------\n\nGarrlab Wazuh SIEM crew", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/peppelinux/django-audit", "keywords": "", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "django-audit-wazuh", "package_url": "https://pypi.org/project/django-audit-wazuh/", "platform": "", "project_url": "https://pypi.org/project/django-audit-wazuh/", "project_urls": {"Homepage": "https://github.com/peppelinux/django-audit"}, "release_url": "https://pypi.org/project/django-audit-wazuh/0.2.6/", "requires_dist": null, "requires_python": "", "summary": "Django Audit", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Django Audit Wazuh</h2>\n<p>Auditing app, simple as possible, to have a good logging system for security purpose.\nYou'll have a json file able to be processed by a SIEM like Wazuh or OSSEC.</p>\n<p>Features</p>\n<ul>\n<li>Login, logout and bruteforce attempts.</li>\n</ul>\n<p>Todo</p>\n<ul>\n<li>Other critical django.security messages, needs more testing with sane unit tests.</li>\n</ul>\n<h2>Setup</h2>\n<pre><code>pip install django-audit\n# or\npip install git+https://github.com/peppelinux/django-audit.git\n</code></pre>\n<h2>Configuration</h2>\n<p>In <code>settings.py</code>:</p>\n<ol>\n<li>add 'auditing' in <code>INSTALLED_APPS</code></li>\n<li>add a Middleware as follows (not mandatory!)</li>\n<li>configure a logging as follows</li>\n</ol>\n<pre><code># requests headers auditing\nif 'auditing' in INSTALLED_APPS:\n    MIDDLEWARE.append('auditing.middlewares.HttpHeadersLoggingMiddleware')\n#\n\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'default': {\n            # exact format is not important, this is the minimum information\n            'format': '%(asctime)s %(name)-12s %(levelname)-8s %(message)s',\n        },\n        'detailed': {\n            'format': '[%(asctime)s] %(message)s [(%(levelname)s)] %(args)s %(name)s %(filename)s.%(funcName)s:%(lineno)s]'\n        },\n        'json': {\n            'format': '{\"timestamp\": \"%(asctime)s\", \"msg\": %(message)s, \"level\": \"%(levelname)s\",  \"name\": \"%(name)s\", \"path\": \"%(filename)s.%(funcName)s:%(lineno)s\", \"@source\":\"django-audit\"}'\n        },\n    },\n    'filters': {\n        'require_debug_false': {\n            '()': 'django.utils.log.RequireDebugFalse'\n        }\n    },\n    'handlers': {\n        'mail_admins': {\n            'level': 'ERROR',\n            'filters': ['require_debug_false'],\n            'class': 'django.utils.log.AdminEmailHandler'\n        },\n        'file': {\n            'formatter': 'json',\n            'level': 'DEBUG',\n            'class': 'logging.handlers.RotatingFileHandler',\n            'filename': './django_siem.log',\n            'maxBytes': 1024000,\n            'backupCount': 3,\n        },\n        'console': {\n            'formatter': 'detailed',\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n        },\n    },\n    'loggers': {\n        'django.security': {\n                'handlers': ['console', 'file'],\n                'level': 'DEBUG',\n                'propagate': False,\n        },\n        'django.request': {\n            'handlers': ['console', 'file'],\n            'level': 'DEBUG',\n            'propagate': True,\n        },\n        'django.contrib.auth': {\n            'handlers': ['console', 'file'],\n            'level': 'DEBUG',\n            'propagate': True,\n        },\n        'django.db.backends': {\n            'level': 'ERROR',\n            'handlers': ['console', 'file'],\n            'propagate': True,\n        },\n        'auditing': {\n            'handlers': ['console', 'file'],\n            'level': 'INFO',\n            'propagate': True,\n        },\n    }\n}\n\n</code></pre>\n<h2>Results</h2>\n<p>You'll get a file with all the relevant events in json format, like</p>\n<pre><code>{\"timestamp\": \"2020-04-21 13:05:01,238\", \"msg\": \"Django Login failed\", \"username\": \"dsfsdf\", \"url\": \"http://localhost:8000/gestionelogin/?next=/gestione\", \"data.srcip\": \"127.0.0.1\", \"path\": \"/gestionelogin/?next=/gestione\", \"Content-Length\": \"132\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"Host\": \"localhost:8000\", \"User-Agent\": \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:75.0) Gecko/20100101 Firefox/75.0\", \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Accept-Encoding\": \"gzip, deflate\", \"Origin\": \"http://localhost:8000\", \"Connection\": \"keep-alive\", \"Referer\": \"http://localhost:8000/gestionelogin/?next=/gestione\", \"Cookie\": \"csrftoken=pTG3UCHtiE0q4PNectVIH4hbezbqL2O2tvWx97rY8zwOxigSzG9unl2tqELzMhpM; cookieconsent_status=dismiss\", \"Upgrade-Insecure-Requests\": \"1\", \"level\": \"WARNING\",  \"name\": \"auditing\", \"path\": \"__init__.py.login_failed_logger:23\", \"@source\":\"django-audit\"}\n{\"timestamp\": \"2020-04-21 13:05:33,521\", \"msg\": \"Django Login successful\", \"username\": \"wert\", \"url\": \"http://localhost:8000/gestionelogin/?next=/gestione\", \"data.srcip\": \"127.0.0.1\", \"path\": \"/gestionelogin/?next=/gestione\", \"Content-Length\": \"131\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"Host\": \"localhost:8000\", \"User-Agent\": \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:75.0) Gecko/20100101 Firefox/75.0\", \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Accept-Encoding\": \"gzip, deflate\", \"Origin\": \"http://localhost:8000\", \"Connection\": \"keep-alive\", \"Referer\": \"http://localhost:8000/gestionelogin/?next=/gestione\", \"Cookie\": \"csrftoken=pTG3UCHtiE0q4PNectVIH4hbezbqL2O2tvWx97rY8zwOxigSzG9unl2tqELzMhpM; cookieconsent_status=dismiss\", \"Upgrade-Insecure-Requests\": \"1\", \"level\": \"INFO\",  \"name\": \"auditing\", \"path\": \"__init__.py.login_logger:16\", \"@source\":\"django-audit\"}\n{\"timestamp\": \"2020-04-21 13:05:36,582\", \"msg\": \"Django Logout successful\", \"username\": \"wert\", \"url\": \"http://localhost:8000/gestionelogout/\", \"data.srcip\": \"127.0.0.1\", \"path\": \"/gestionelogout/\", \"Content-Type\": \"text/plain\", \"Host\": \"localhost:8000\", \"User-Agent\": \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:75.0) Gecko/20100101 Firefox/75.0\", \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Accept-Encoding\": \"gzip, deflate\", \"Connection\": \"keep-alive\", \"Referer\": \"http://localhost:8000/gestione\", \"Cookie\": \"csrftoken=e50mIQ4NWKYjDKBKA9a1iFufQuRv2W8LKAWnIjm4meXhiCSWPHzxfkrllMeNVqDR; cookieconsent_status=dismiss; sessionid=cxu3hfono6t6p1dl70q80836pe292ri3\", \"Upgrade-Insecure-Requests\": \"1\", \"level\": \"INFO\",  \"name\": \"auditing\", \"path\": \"__init__.py.logout_logger:30\", \"@source\":\"django-audit\"}\n</code></pre>\n<h2>Tuning</h2>\n<p>Auditing Middleware can log everything between a http request and its following response.\nThese are the overloadable settings variables</p>\n<pre><code># for i in http.HTTPStatus: print(i, i.value) \nAUDIT_RESPONSE_HTTPCODES = getattr(settings,\n                                   'AUDIT_RESPONSE_HTTPCODES',\n                                   [i.value for i in http.HTTPStatus if i not in (200,201,202,301,302)])\n\n# prevents to read the password in clear\nAUDIT_REQUEST_POST_IGNORED = ('password', )\n</code></pre>\n<h2>Wazuh configuration</h2>\n<ol>\n<li>\n<p>Copy the content of <code>wazuh-ruleset/27081-django_decoders.xml</code> in <code>/var/ossec/etc/decoders/local_decoder.xml</code></p>\n</li>\n<li>\n<p>Copy the content of <code>wazuh-ruleset/27081-django_rules.xml</code> in <code>/var/ossec/etc/rules/local_rules.xml</code>.</p>\n</li>\n<li>\n<p>Test the triggers with <code>/var/ossec/bin/ossec-logtest</code>, copy a log line in stdin and see events.</p>\n</li>\n<li>\n<p>Create an agent group called <code>django</code></p>\n<pre><code>/var/ossec/bin/agent_groups -a -g django\n</code></pre>\n</li>\n<li>\n<p>Edit agent group configuration <code>/var/ossec/etc/shared/django/agent.conf</code> this way</p>\n<pre><code>&lt;localfile&gt;\n     &lt;location&gt;ABSOLUTE_PATH_TO_YOUR_DJANGO_AUDIT_LOG.json&lt;/location&gt;\n     &lt;log_format&gt;json&lt;/log_format&gt;\n     &lt;label key=\"@source\"&gt;django-audit&lt;/label&gt;\n&lt;/localfile&gt;\n</code></pre>\n</li>\n<li>\n<p>Add agents to this group</p>\n<pre><code>/var/ossec/bin/agent_groups -a -i 014 -g django\n</code></pre>\n</li>\n<li>\n<p>Control when they are synced</p>\n<pre><code>/var/ossec/bin/agent_groups -S -i 014\n</code></pre>\n</li>\n<li>\n<p>Restart Wazuh-manager to reload rulesets <code>service wazuh-manager restart</code></p>\n</li>\n</ol>\n<h2>GeoIP</h2>\n<p>On wazuh-manager, edit /usr/share/filebeat/module/wazuh/alerts/ingest/pipeline.json adding the new IP field inside processors, along the other Geolocation fields:</p>\n<pre><code>    {\n      \"geoip\": {\n        \"field\": \"srcip\",\n        \"target_field\": \"GeoLocation\",\n        \"properties\": [\"city_name\", \"country_name\", \"region_name\", \"location\"],\n        \"ignore_missing\": true,\n        \"ignore_failure\": true\n      }\n    },\n</code></pre>\n<p>We now need to delete the current pipeline. In Kibana, go to Dev Tools clicking on the Wrench icon. Then execute the following:</p>\n<pre><code>DELETE _ingest/pipeline/filebeat-7.6.2-wazuh-alerts-pipeline\n</code></pre>\n<p>We restart Filebeat in wazuh-manager:</p>\n<pre><code>systemctl restart filebeat\n</code></pre>\n<h2>License</h2>\n<p>Apache</p>\n<h2>Authors</h2>\n<p>Giuseppe De Marco <a href=\"mailto:giuseppe.demarco@unical.it\">giuseppe.demarco@unical.it</a></p>\n<h2>Credits</h2>\n<p>Garrlab Wazuh SIEM crew</p>\n\n          </div>"}, "last_serial": 7068987, "releases": {"0.2.4": [{"comment_text": "", "digests": {"md5": "9056143720dc3db9b943562233cf79d1", "sha256": "8adb36b3c49a8f399a98e0610099630cf688611694ebc9ecd83c416e0f7e6ad0"}, "downloads": -1, "filename": "django_audit_wazuh-0.2.4.tar.gz", "has_sig": false, "md5_digest": "9056143720dc3db9b943562233cf79d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6523, "upload_time": "2020-04-20T22:56:31", "upload_time_iso_8601": "2020-04-20T22:56:31.474122Z", "url": "https://files.pythonhosted.org/packages/52/81/446e56854c3a0deb7df4ff09c31770b3f536f79a7f62209a0db309f3cd7e/django_audit_wazuh-0.2.4.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "2f7567a1b41573de3eba87cac97769aa", "sha256": "7b03d495ae840bc7288fc847bb69a4e1385e72e32f03fce1a26be25280825115"}, "downloads": -1, "filename": "django_audit_wazuh-0.2.6.tar.gz", "has_sig": false, "md5_digest": "2f7567a1b41573de3eba87cac97769aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6896, "upload_time": "2020-04-21T16:00:12", "upload_time_iso_8601": "2020-04-21T16:00:12.722824Z", "url": "https://files.pythonhosted.org/packages/1c/44/da08f4ac303e62c565300dac6f448b77d9823dd5c48f21256ce5a28fb9f1/django_audit_wazuh-0.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2f7567a1b41573de3eba87cac97769aa", "sha256": "7b03d495ae840bc7288fc847bb69a4e1385e72e32f03fce1a26be25280825115"}, "downloads": -1, "filename": "django_audit_wazuh-0.2.6.tar.gz", "has_sig": false, "md5_digest": "2f7567a1b41573de3eba87cac97769aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6896, "upload_time": "2020-04-21T16:00:12", "upload_time_iso_8601": "2020-04-21T16:00:12.722824Z", "url": "https://files.pythonhosted.org/packages/1c/44/da08f4ac303e62c565300dac6f448b77d9823dd5c48f21256ce5a28fb9f1/django_audit_wazuh-0.2.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:34 2020"}