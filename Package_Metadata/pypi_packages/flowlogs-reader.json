{"info": {"author": "Observable Networks", "author_email": "support@observable.net", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3"], "description": "## Introduction\n\n[![Build Status](https://travis-ci.org/obsrvbl/flowlogs-reader.svg?branch=master)](https://travis-ci.org/obsrvbl/flowlogs-reader)\n[![Coverage Status](https://coveralls.io/repos/obsrvbl/flowlogs-reader/badge.svg?branch=master&service=github)](https://coveralls.io/github/obsrvbl/flowlogs-reader?branch=master)\n[![PyPI Version](https://img.shields.io/pypi/v/flowlogs_reader.svg)](https://pypi.python.org/pypi/flowlogs_reader)\n\nAmazon's VPC Flow Logs are analagous to NetFlow and IPFIX logs, and can be used for security and performance analysis.\n[Observable Networks](https://observable.net) uses VPC Flow logs as an input to endpoint modeling for security monitoring.\n\nThis project contains:\n* A utility for working with VPC Flow Logs on the command line\n* A Python library for retrieving and working with VPC Flow logs\n\nThe tools support reading Flow Logs from both [CloudWatch Logs](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/flow-logs-cwl.html) and [S3](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/flow-logs-s3.html).\nFor S3 destinations, [version 3](https://aws.amazon.com/blogs/aws/learn-from-your-vpc-flow-logs-with-additional-meta-data/) custom log formats are supported.\n\nThe library builds on [boto3](https://github.com/boto/boto3) and should work on Python 3.4+.\n\nFor information on VPC Flow Logs and how to enable them see [this post](https://aws.amazon.com/blogs/aws/vpc-flow-logs-log-and-view-network-traffic-flows/) at the AWS blog.\nYou may use this library with the [kinesis-logs-reader](https://github.com/obsrvbl/kinesis-logs-reader) library when retrieving VPC flow logs from Amazon Kinesis.\n\n\n## Installation\n\nYou can get `flowlogs_reader` by using `pip`:\n\n```\npip install flowlogs_reader\n```\n\nOr if you want to install from source and/or contribute you can clone from GitHub:\n\n```\ngit clone https://github.com/obsrvbl/flowlogs-reader.git\ncd flowlogs-reader\npython setup.py develop\n```\n\n## CLI Usage\n\n`flowlogs-reader` provides a command line interface called `flowlogs_reader` that allows you to print VPC Flow Log records to your screen.\nIt assumes your AWS credentials are available through environment variables, a boto configuration file, or through IAM metadata.\nSome example uses are below.\n\n__Location types__\n\n`flowlogs_reader` has one required argument, `location`. By default that is interpreted as a CloudWatch Logs group.\n\nTo use an S3 location, specify `--location-type='s3'`:\n\n* `flowlogs_reader --location-type=\"s3\" \"bucket-name/optional-prefix\"`\n\n__Printing flows__\n\nThe default action is to `print` flows. You may also specify the `ipset`, `findip`, and `aggregate` actions:\n\n* `flowlogs_reader location` - print all flows in the past hour\n* `flowlogs_reader location print 10` - print the first 10 flows from the past hour\n* `flowlogs_reader location ipset` - print the unique IPs seen in the past hour\n* `flowlogs_reader location findip 198.51.100.2` - print all flows involving 198.51.100.2\n* `flowlogs_reader location aggregate` - aggregate the flows by 5-tuple, then print them as a tab-separated stream (with a header). This requires that each of the fields in the 5-tuple are present in the data format.\n\nYou may combine the output of `flowlogs_reader` with other command line utilities:\n\n* `flowlogs_reader location | grep REJECT` - print all `REJECT`ed Flow Log records\n* `flowlogs_reader location | awk '$6 = 443'` - print all traffic from port 443\n\n__Time windows__\n\nThe default time window is the last hour. You may also specify a `--start-time` and/or an `--end-time`. The `-s` and `-e` switches may be used also:\n\n* `flowlogs_reader --start-time='2015-08-13 00:00:00' location`\n* `flowlogs_reader --end-time='2015-08-14 00:00:00' location`\n* `flowlogs_reader --start-time='2015-08-13 01:00:00' --end-time='2015-08-14 02:00:00' location`\n\nUse the `--time-format` switch to control how start and end times are interpreted. The default is `'%Y-%m-%d %H:%M:%S'`. See the Python documentation for `strptime` for information on format strings.\n\n__Concurrent reads__\n\nGive `--thread-count` to read from multiple log groups or S3 keys at once:\n\n* `flowlogs_reader --thread_count=4 location`\n\n__AWS options__\n\nOther command line switches:\n\n* `flowlogs_reader --region='us-west-2' location` - connect to the given AWS region\n* `flowlogs_reader --profile='dev_profile' location` - use the profile from your [local AWS configuration file](http://docs.aws.amazon.com/cli/latest/topic/config-vars.html) to specify credentials and regions\n* `flowlogs_reader --role-arn='arn:aws:iam::12345678901:role/myrole' --external-id='0a1b2c3d' location` - use the given role and external ID to connect to a 3rd party's account using [`sts assume-role`](http://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html)\n\nFor CloudWatch Logs locations:\n\n* `flowlogs_reader --filter-pattern='REJECT' location` - use the given [filter pattern](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/FilterAndPatternSyntax.html) to have the server limit the output\n\nFor S3 locations:\n\n* `flowlogs_reader --location-type='s3' --include-accounts='12345678901,12345678902' bucket-name/optional-prefix` - return logs only for the given accounts\n* `flowlogs_reader --location-type='s3' --include-regions='us-east-1,us-east-2' bucket-name/optional-prefix` - return logs only for the given regions\n\n\n## Module Usage\n\n`FlowRecord` takes an `event` dictionary retrieved from a log stream. It parses the `message` in the event, which takes a record like this:\n\n```\n2 123456789010 eni-102010ab 198.51.100.1 192.0.2.1 443 49152 6 10 840 1439387263 1439387264 ACCEPT OK\n```\n\nAnd turns it into a Python object like this:\n\n```python\n>>> flow_record.srcaddr\n'198.51.100.1'\n>>> flow_record.dstaddr\n'192.0.2.1'\n>>> flow_record.srcport\n443\n>>> flow_record.to_dict()\n{'account_id': '123456789010',\n 'action': 'ACCEPT',\n 'bytes': 840,\n 'dstaddr': '192.0.2.1',\n 'dstport': 49152,\n 'end': datetime.datetime(2015, 8, 12, 13, 47, 44),\n 'interface_id': 'eni-102010ab',\n 'log_status': 'OK',\n 'packets': 10,\n 'protocol': 6,\n 'srcaddr': '198.51.100.1',\n 'srcport': 443,\n 'start': datetime.datetime(2015, 8, 12, 13, 47, 43),\n 'version': 2}\n```\n\n`FlowLogsReader` reads from CloudWatch Logs. It takes the name of a log group and can then yield all the Flow Log records from that group.\n\n```python\n>>> from flowlogs_reader import FlowLogsReader\n... flow_log_reader = FlowLogsReader('flowlog_group')\n... records = list(flow_log_reader)\n... print(len(records))\n176\n```\n\n`S3FlowLogsReader` reads from S3. It takes a `bucket` name or a `bucket/prefix` identifier.\n\nBy default these classes will yield records from the last hour.\n\nYou can control what's retrieved with these parameters:\n* `start_time` and `end_time` are Python `datetime.datetime` objects\n* `region_name` is a string like `'us-east-1'`. This will be used to create a [boto3 Session object](http://boto3.readthedocs.io/en/latest/reference/core/session.html#boto3.session.Session).\n* `profile_name` is a string like `'my-profile'`\n* `boto_client_kwargs` is a dictionary of parameters to pass when creating the [boto3 client](http://boto3.readthedocs.io/en/latest/reference/core/session.html#boto3.session.Session.client).\n* `boto_client` is a boto3 client object. This takes overrides `region_name`, `profile_name`, and `boto_client_kwargs`.\n\nWhen using `FlowLogsReader` with CloudWatch Logs:\n\n* The `filter_pattern` keyword is a string like `REJECT` or `443` used to filter the logs. See the examples below.\n\nWhen using `S3FlowLogsReader` with S3:\n\n* The `include_accounts` keyword is an iterable of account identifiers (as strings) used to filter the logs.\n* The `include_regions` keyword is an iterable of region names used to filter the logs.\n\n## Examples\n\nStart by importing `FlowLogsReader`:\n\n```python\nfrom flowlogs_reader import FlowLogsReader\n```\n\nFind all of the IP addresses communicating inside the VPC:\n\n```python\nip_set = set()\nfor record in FlowLogsReader('flowlog_group'):\n    ip_set.add(record.srcaddr)\n    ip_set.add(record.dstaddr)\n```\n\nSee all of the traffic for one IP address:\n\n```python\ntarget_ip = '192.0.2.1'\nrecords = []\nfor record in FlowLogsReader('flowlog_group'):\n    if (record.srcaddr == target_ip) or (record.dstaddr == target_ip):\n        records.append(record)\n```\n\nLoop through a few preconfigured profiles and collect all of the IP addresses:\n\n```python\nip_set = set()\nprofile_names = ['profile1', 'profile2']\nfor profile_name in profile_names:\n    for record in FlowLogsReader('flowlog_group', profile_name=profile_name):\n        ip_set.add(record.srcaddr)\n        ip_set.add(record.dstaddr)\n```\n\nApply a filter for UDP traffic that was logged normally (CloudWatch Logs only):\n\n```python\nFILTER_PATTERN = (\n    '[version=\"2\", account_id, interface_id, srcaddr, dstaddr, '\n    'srcport, dstport, protocol=\"17\", packets, bytes, '\n    'start, end, action, log_status=\"OK\"]'\n)\n\nflow_log_reader = FlowLogsReader('flowlog_group', filter_pattern=FILTER_PATTERN)\nrecords = list(flow_log_reader)\nprint(len(records))\n```\n\nRetrieve logs from a list of regions:\n\n```python\nfrom flowlogs_reader import S3FlowLogsReader\n\nreader = S3FlowLogsReader('example-bucket/optional-prefix', include_regions=['us-east-1', 'us-east-2'])\nrecords = list(reader)\nprint(len(records))\n```\n\nYou may aggregate records with the `aggregate_records` function.\nPass in a `FlowLogsReader` or `S3FlowLogsReader` object and optionally a `key_fields` tuple.\nPython `dict` objects will be yielded representing the aggregated flow records.\nBy default the typical `('srcaddr', 'dstaddr', 'srcport', 'dstport', 'protocol')` will be used.\nThe `start`, `end`, `packets`, and `bytes` items will be aggregated.\n\n```python\nflow_log_reader = FlowLogsReader('flowlog_group')\nkey_fields = ('srcaddr', 'dstaddr')\nrecords = list(aggregated_records(flow_log_reader, key_fields=key_fields))\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/obsrvbl/flowlogs-reader", "keywords": "", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "flowlogs-reader", "package_url": "https://pypi.org/project/flowlogs-reader/", "platform": "", "project_url": "https://pypi.org/project/flowlogs-reader/", "project_urls": {"Homepage": "https://github.com/obsrvbl/flowlogs-reader"}, "release_url": "https://pypi.org/project/flowlogs-reader/2.2.1/", "requires_dist": ["boto3 (>=1.7.75)", "botocore (>=1.10.75)", "python-dateutil (>=2.7.0)"], "requires_python": ">=3.4", "summary": "Reader for AWS VPC Flow Logs", "version": "2.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Introduction</h2>\n<p><a href=\"https://travis-ci.org/obsrvbl/flowlogs-reader\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3af8bdaa5369211d63885ae7fd00a0931069f12/68747470733a2f2f7472617669732d63692e6f72672f6f62737276626c2f666c6f776c6f67732d7265616465722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/obsrvbl/flowlogs-reader?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9613f7602156ea59a1214c4a59fca20fa6e34c7b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6f62737276626c2f666c6f776c6f67732d7265616465722f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a>\n<a href=\"https://pypi.python.org/pypi/flowlogs_reader\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e97bfd9d53a60cecc43ed96a6661929e41f535eb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666c6f776c6f67735f7265616465722e737667\"></a></p>\n<p>Amazon's VPC Flow Logs are analagous to NetFlow and IPFIX logs, and can be used for security and performance analysis.\n<a href=\"https://observable.net\" rel=\"nofollow\">Observable Networks</a> uses VPC Flow logs as an input to endpoint modeling for security monitoring.</p>\n<p>This project contains:</p>\n<ul>\n<li>A utility for working with VPC Flow Logs on the command line</li>\n<li>A Python library for retrieving and working with VPC Flow logs</li>\n</ul>\n<p>The tools support reading Flow Logs from both <a href=\"https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/flow-logs-cwl.html\" rel=\"nofollow\">CloudWatch Logs</a> and <a href=\"https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/flow-logs-s3.html\" rel=\"nofollow\">S3</a>.\nFor S3 destinations, <a href=\"https://aws.amazon.com/blogs/aws/learn-from-your-vpc-flow-logs-with-additional-meta-data/\" rel=\"nofollow\">version 3</a> custom log formats are supported.</p>\n<p>The library builds on <a href=\"https://github.com/boto/boto3\" rel=\"nofollow\">boto3</a> and should work on Python 3.4+.</p>\n<p>For information on VPC Flow Logs and how to enable them see <a href=\"https://aws.amazon.com/blogs/aws/vpc-flow-logs-log-and-view-network-traffic-flows/\" rel=\"nofollow\">this post</a> at the AWS blog.\nYou may use this library with the <a href=\"https://github.com/obsrvbl/kinesis-logs-reader\" rel=\"nofollow\">kinesis-logs-reader</a> library when retrieving VPC flow logs from Amazon Kinesis.</p>\n<h2>Installation</h2>\n<p>You can get <code>flowlogs_reader</code> by using <code>pip</code>:</p>\n<pre><code>pip install flowlogs_reader\n</code></pre>\n<p>Or if you want to install from source and/or contribute you can clone from GitHub:</p>\n<pre><code>git clone https://github.com/obsrvbl/flowlogs-reader.git\ncd flowlogs-reader\npython setup.py develop\n</code></pre>\n<h2>CLI Usage</h2>\n<p><code>flowlogs-reader</code> provides a command line interface called <code>flowlogs_reader</code> that allows you to print VPC Flow Log records to your screen.\nIt assumes your AWS credentials are available through environment variables, a boto configuration file, or through IAM metadata.\nSome example uses are below.</p>\n<p><strong>Location types</strong></p>\n<p><code>flowlogs_reader</code> has one required argument, <code>location</code>. By default that is interpreted as a CloudWatch Logs group.</p>\n<p>To use an S3 location, specify <code>--location-type='s3'</code>:</p>\n<ul>\n<li><code>flowlogs_reader --location-type=\"s3\" \"bucket-name/optional-prefix\"</code></li>\n</ul>\n<p><strong>Printing flows</strong></p>\n<p>The default action is to <code>print</code> flows. You may also specify the <code>ipset</code>, <code>findip</code>, and <code>aggregate</code> actions:</p>\n<ul>\n<li><code>flowlogs_reader location</code> - print all flows in the past hour</li>\n<li><code>flowlogs_reader location print 10</code> - print the first 10 flows from the past hour</li>\n<li><code>flowlogs_reader location ipset</code> - print the unique IPs seen in the past hour</li>\n<li><code>flowlogs_reader location findip 198.51.100.2</code> - print all flows involving 198.51.100.2</li>\n<li><code>flowlogs_reader location aggregate</code> - aggregate the flows by 5-tuple, then print them as a tab-separated stream (with a header). This requires that each of the fields in the 5-tuple are present in the data format.</li>\n</ul>\n<p>You may combine the output of <code>flowlogs_reader</code> with other command line utilities:</p>\n<ul>\n<li><code>flowlogs_reader location | grep REJECT</code> - print all <code>REJECT</code>ed Flow Log records</li>\n<li><code>flowlogs_reader location | awk '$6 = 443'</code> - print all traffic from port 443</li>\n</ul>\n<p><strong>Time windows</strong></p>\n<p>The default time window is the last hour. You may also specify a <code>--start-time</code> and/or an <code>--end-time</code>. The <code>-s</code> and <code>-e</code> switches may be used also:</p>\n<ul>\n<li><code>flowlogs_reader --start-time='2015-08-13 00:00:00' location</code></li>\n<li><code>flowlogs_reader --end-time='2015-08-14 00:00:00' location</code></li>\n<li><code>flowlogs_reader --start-time='2015-08-13 01:00:00' --end-time='2015-08-14 02:00:00' location</code></li>\n</ul>\n<p>Use the <code>--time-format</code> switch to control how start and end times are interpreted. The default is <code>'%Y-%m-%d %H:%M:%S'</code>. See the Python documentation for <code>strptime</code> for information on format strings.</p>\n<p><strong>Concurrent reads</strong></p>\n<p>Give <code>--thread-count</code> to read from multiple log groups or S3 keys at once:</p>\n<ul>\n<li><code>flowlogs_reader --thread_count=4 location</code></li>\n</ul>\n<p><strong>AWS options</strong></p>\n<p>Other command line switches:</p>\n<ul>\n<li><code>flowlogs_reader --region='us-west-2' location</code> - connect to the given AWS region</li>\n<li><code>flowlogs_reader --profile='dev_profile' location</code> - use the profile from your <a href=\"http://docs.aws.amazon.com/cli/latest/topic/config-vars.html\" rel=\"nofollow\">local AWS configuration file</a> to specify credentials and regions</li>\n<li><code>flowlogs_reader --role-arn='arn:aws:iam::12345678901:role/myrole' --external-id='0a1b2c3d' location</code> - use the given role and external ID to connect to a 3rd party's account using <a href=\"http://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html\" rel=\"nofollow\"><code>sts assume-role</code></a></li>\n</ul>\n<p>For CloudWatch Logs locations:</p>\n<ul>\n<li><code>flowlogs_reader --filter-pattern='REJECT' location</code> - use the given <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/FilterAndPatternSyntax.html\" rel=\"nofollow\">filter pattern</a> to have the server limit the output</li>\n</ul>\n<p>For S3 locations:</p>\n<ul>\n<li><code>flowlogs_reader --location-type='s3' --include-accounts='12345678901,12345678902' bucket-name/optional-prefix</code> - return logs only for the given accounts</li>\n<li><code>flowlogs_reader --location-type='s3' --include-regions='us-east-1,us-east-2' bucket-name/optional-prefix</code> - return logs only for the given regions</li>\n</ul>\n<h2>Module Usage</h2>\n<p><code>FlowRecord</code> takes an <code>event</code> dictionary retrieved from a log stream. It parses the <code>message</code> in the event, which takes a record like this:</p>\n<pre><code>2 123456789010 eni-102010ab 198.51.100.1 192.0.2.1 443 49152 6 10 840 1439387263 1439387264 ACCEPT OK\n</code></pre>\n<p>And turns it into a Python object like this:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">flow_record</span><span class=\"o\">.</span><span class=\"n\">srcaddr</span>\n<span class=\"s1\">'198.51.100.1'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">flow_record</span><span class=\"o\">.</span><span class=\"n\">dstaddr</span>\n<span class=\"s1\">'192.0.2.1'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">flow_record</span><span class=\"o\">.</span><span class=\"n\">srcport</span>\n<span class=\"mi\">443</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">flow_record</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">'account_id'</span><span class=\"p\">:</span> <span class=\"s1\">'123456789010'</span><span class=\"p\">,</span>\n <span class=\"s1\">'action'</span><span class=\"p\">:</span> <span class=\"s1\">'ACCEPT'</span><span class=\"p\">,</span>\n <span class=\"s1\">'bytes'</span><span class=\"p\">:</span> <span class=\"mi\">840</span><span class=\"p\">,</span>\n <span class=\"s1\">'dstaddr'</span><span class=\"p\">:</span> <span class=\"s1\">'192.0.2.1'</span><span class=\"p\">,</span>\n <span class=\"s1\">'dstport'</span><span class=\"p\">:</span> <span class=\"mi\">49152</span><span class=\"p\">,</span>\n <span class=\"s1\">'end'</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">47</span><span class=\"p\">,</span> <span class=\"mi\">44</span><span class=\"p\">),</span>\n <span class=\"s1\">'interface_id'</span><span class=\"p\">:</span> <span class=\"s1\">'eni-102010ab'</span><span class=\"p\">,</span>\n <span class=\"s1\">'log_status'</span><span class=\"p\">:</span> <span class=\"s1\">'OK'</span><span class=\"p\">,</span>\n <span class=\"s1\">'packets'</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n <span class=\"s1\">'protocol'</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span>\n <span class=\"s1\">'srcaddr'</span><span class=\"p\">:</span> <span class=\"s1\">'198.51.100.1'</span><span class=\"p\">,</span>\n <span class=\"s1\">'srcport'</span><span class=\"p\">:</span> <span class=\"mi\">443</span><span class=\"p\">,</span>\n <span class=\"s1\">'start'</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">47</span><span class=\"p\">,</span> <span class=\"mi\">43</span><span class=\"p\">),</span>\n <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}</span>\n</pre>\n<p><code>FlowLogsReader</code> reads from CloudWatch Logs. It takes the name of a log group and can then yield all the Flow Log records from that group.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">flowlogs_reader</span> <span class=\"kn\">import</span> <span class=\"n\">FlowLogsReader</span>\n<span class=\"o\">...</span> <span class=\"n\">flow_log_reader</span> <span class=\"o\">=</span> <span class=\"n\">FlowLogsReader</span><span class=\"p\">(</span><span class=\"s1\">'flowlog_group'</span><span class=\"p\">)</span>\n<span class=\"o\">...</span> <span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">flow_log_reader</span><span class=\"p\">)</span>\n<span class=\"o\">...</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">records</span><span class=\"p\">))</span>\n<span class=\"mi\">176</span>\n</pre>\n<p><code>S3FlowLogsReader</code> reads from S3. It takes a <code>bucket</code> name or a <code>bucket/prefix</code> identifier.</p>\n<p>By default these classes will yield records from the last hour.</p>\n<p>You can control what's retrieved with these parameters:</p>\n<ul>\n<li><code>start_time</code> and <code>end_time</code> are Python <code>datetime.datetime</code> objects</li>\n<li><code>region_name</code> is a string like <code>'us-east-1'</code>. This will be used to create a <a href=\"http://boto3.readthedocs.io/en/latest/reference/core/session.html#boto3.session.Session\" rel=\"nofollow\">boto3 Session object</a>.</li>\n<li><code>profile_name</code> is a string like <code>'my-profile'</code></li>\n<li><code>boto_client_kwargs</code> is a dictionary of parameters to pass when creating the <a href=\"http://boto3.readthedocs.io/en/latest/reference/core/session.html#boto3.session.Session.client\" rel=\"nofollow\">boto3 client</a>.</li>\n<li><code>boto_client</code> is a boto3 client object. This takes overrides <code>region_name</code>, <code>profile_name</code>, and <code>boto_client_kwargs</code>.</li>\n</ul>\n<p>When using <code>FlowLogsReader</code> with CloudWatch Logs:</p>\n<ul>\n<li>The <code>filter_pattern</code> keyword is a string like <code>REJECT</code> or <code>443</code> used to filter the logs. See the examples below.</li>\n</ul>\n<p>When using <code>S3FlowLogsReader</code> with S3:</p>\n<ul>\n<li>The <code>include_accounts</code> keyword is an iterable of account identifiers (as strings) used to filter the logs.</li>\n<li>The <code>include_regions</code> keyword is an iterable of region names used to filter the logs.</li>\n</ul>\n<h2>Examples</h2>\n<p>Start by importing <code>FlowLogsReader</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flowlogs_reader</span> <span class=\"kn\">import</span> <span class=\"n\">FlowLogsReader</span>\n</pre>\n<p>Find all of the IP addresses communicating inside the VPC:</p>\n<pre><span class=\"n\">ip_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">record</span> <span class=\"ow\">in</span> <span class=\"n\">FlowLogsReader</span><span class=\"p\">(</span><span class=\"s1\">'flowlog_group'</span><span class=\"p\">):</span>\n    <span class=\"n\">ip_set</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">srcaddr</span><span class=\"p\">)</span>\n    <span class=\"n\">ip_set</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">dstaddr</span><span class=\"p\">)</span>\n</pre>\n<p>See all of the traffic for one IP address:</p>\n<pre><span class=\"n\">target_ip</span> <span class=\"o\">=</span> <span class=\"s1\">'192.0.2.1'</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">record</span> <span class=\"ow\">in</span> <span class=\"n\">FlowLogsReader</span><span class=\"p\">(</span><span class=\"s1\">'flowlog_group'</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">srcaddr</span> <span class=\"o\">==</span> <span class=\"n\">target_ip</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">(</span><span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">dstaddr</span> <span class=\"o\">==</span> <span class=\"n\">target_ip</span><span class=\"p\">):</span>\n        <span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"p\">)</span>\n</pre>\n<p>Loop through a few preconfigured profiles and collect all of the IP addresses:</p>\n<pre><span class=\"n\">ip_set</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">()</span>\n<span class=\"n\">profile_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'profile1'</span><span class=\"p\">,</span> <span class=\"s1\">'profile2'</span><span class=\"p\">]</span>\n<span class=\"k\">for</span> <span class=\"n\">profile_name</span> <span class=\"ow\">in</span> <span class=\"n\">profile_names</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">record</span> <span class=\"ow\">in</span> <span class=\"n\">FlowLogsReader</span><span class=\"p\">(</span><span class=\"s1\">'flowlog_group'</span><span class=\"p\">,</span> <span class=\"n\">profile_name</span><span class=\"o\">=</span><span class=\"n\">profile_name</span><span class=\"p\">):</span>\n        <span class=\"n\">ip_set</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">srcaddr</span><span class=\"p\">)</span>\n        <span class=\"n\">ip_set</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">dstaddr</span><span class=\"p\">)</span>\n</pre>\n<p>Apply a filter for UDP traffic that was logged normally (CloudWatch Logs only):</p>\n<pre><span class=\"n\">FILTER_PATTERN</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s1\">'[version=\"2\", account_id, interface_id, srcaddr, dstaddr, '</span>\n    <span class=\"s1\">'srcport, dstport, protocol=\"17\", packets, bytes, '</span>\n    <span class=\"s1\">'start, end, action, log_status=\"OK\"]'</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">flow_log_reader</span> <span class=\"o\">=</span> <span class=\"n\">FlowLogsReader</span><span class=\"p\">(</span><span class=\"s1\">'flowlog_group'</span><span class=\"p\">,</span> <span class=\"n\">filter_pattern</span><span class=\"o\">=</span><span class=\"n\">FILTER_PATTERN</span><span class=\"p\">)</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">flow_log_reader</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">records</span><span class=\"p\">))</span>\n</pre>\n<p>Retrieve logs from a list of regions:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flowlogs_reader</span> <span class=\"kn\">import</span> <span class=\"n\">S3FlowLogsReader</span>\n\n<span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">S3FlowLogsReader</span><span class=\"p\">(</span><span class=\"s1\">'example-bucket/optional-prefix'</span><span class=\"p\">,</span> <span class=\"n\">include_regions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'us-east-1'</span><span class=\"p\">,</span> <span class=\"s1\">'us-east-2'</span><span class=\"p\">])</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">reader</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">records</span><span class=\"p\">))</span>\n</pre>\n<p>You may aggregate records with the <code>aggregate_records</code> function.\nPass in a <code>FlowLogsReader</code> or <code>S3FlowLogsReader</code> object and optionally a <code>key_fields</code> tuple.\nPython <code>dict</code> objects will be yielded representing the aggregated flow records.\nBy default the typical <code>('srcaddr', 'dstaddr', 'srcport', 'dstport', 'protocol')</code> will be used.\nThe <code>start</code>, <code>end</code>, <code>packets</code>, and <code>bytes</code> items will be aggregated.</p>\n<pre><span class=\"n\">flow_log_reader</span> <span class=\"o\">=</span> <span class=\"n\">FlowLogsReader</span><span class=\"p\">(</span><span class=\"s1\">'flowlog_group'</span><span class=\"p\">)</span>\n<span class=\"n\">key_fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'srcaddr'</span><span class=\"p\">,</span> <span class=\"s1\">'dstaddr'</span><span class=\"p\">)</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">aggregated_records</span><span class=\"p\">(</span><span class=\"n\">flow_log_reader</span><span class=\"p\">,</span> <span class=\"n\">key_fields</span><span class=\"o\">=</span><span class=\"n\">key_fields</span><span class=\"p\">))</span>\n</pre>\n\n          </div>"}, "last_serial": 7012689, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7135fb7af167d215c0415437e7d54402", "sha256": "b4a6e26860e5b52b267fcc13edd4ecfba25cd9c757729a452fad94037e1f0720"}, "downloads": -1, "filename": "flowlogs_reader-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7135fb7af167d215c0415437e7d54402", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12100, "upload_time": "2015-08-14T18:57:33", "upload_time_iso_8601": "2015-08-14T18:57:33.213566Z", "url": "https://files.pythonhosted.org/packages/0a/56/502379dcd70323ff6ea1fb383709055b7a478aac979ba9c8039f01d8671a/flowlogs_reader-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d19572c18c2482db0b85020198c65b3", "sha256": "de00b0ddf23f00417c7d0f3a0920097c2cbbd71420a7d567bdad8c846a039bf5"}, "downloads": -1, "filename": "flowlogs_reader-0.1.tar.gz", "has_sig": false, "md5_digest": "4d19572c18c2482db0b85020198c65b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6945, "upload_time": "2015-08-14T18:32:20", "upload_time_iso_8601": "2015-08-14T18:32:20.939141Z", "url": "https://files.pythonhosted.org/packages/59/0f/0d4ab5d7f4f446e57fe9a942c0901469ed8351d04cd9234789c4296f8879/flowlogs_reader-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "a556ed8fcf74405b71f21f59ceb45a26", "sha256": "43857c9cb423595b78d764dd86477d45cbd2bc6a2b6a7ba44c6a1ad233db58a4"}, "downloads": -1, "filename": "flowlogs_reader-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a556ed8fcf74405b71f21f59ceb45a26", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11276, "upload_time": "2015-08-14T20:32:12", "upload_time_iso_8601": "2015-08-14T20:32:12.101907Z", "url": "https://files.pythonhosted.org/packages/92/e9/f56b34fa125be0d423d683c1d4aa884c7e2502d1e0a1ad50ba3b5d7a7d26/flowlogs_reader-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8758c51022c8c44d79ede6462472fdbe", "sha256": "5177f9a1a820ec07726c42542a6843f605cb12329fe2b188705a847e4a05050d"}, "downloads": -1, "filename": "flowlogs_reader-0.2.tar.gz", "has_sig": false, "md5_digest": "8758c51022c8c44d79ede6462472fdbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6203, "upload_time": "2015-08-14T20:32:23", "upload_time_iso_8601": "2015-08-14T20:32:23.164517Z", "url": "https://files.pythonhosted.org/packages/97/f0/1b07f9e399925522cbb7037ef28a01a93237480a57250749b1e5d5a669cd/flowlogs_reader-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "48698a26c9b581c54b4d4cf57aeaddcd", "sha256": "e00d551333cdd7521b0a75fc38a95f5ae6c7568eefdfc7d7fb31215339e568c6"}, "downloads": -1, "filename": "flowlogs_reader-0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "48698a26c9b581c54b4d4cf57aeaddcd", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11647, "upload_time": "2015-08-18T16:11:00", "upload_time_iso_8601": "2015-08-18T16:11:00.014670Z", "url": "https://files.pythonhosted.org/packages/42/2e/6f3509c2cee302a0c124c8d764ed028d64c4f185cdbccba07dd815e05dd5/flowlogs_reader-0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aafe71de645e0d0711a3809170301724", "sha256": "9c557a2567bc3f293062a0f805f9e098571c6012ee1a19782ca4566c96934134"}, "downloads": -1, "filename": "flowlogs_reader-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "aafe71de645e0d0711a3809170301724", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11642, "upload_time": "2015-08-18T16:17:06", "upload_time_iso_8601": "2015-08-18T16:17:06.710943Z", "url": "https://files.pythonhosted.org/packages/8a/19/0a334de065c188c00cf850839829af4c30b2693ff8e44e9388fd87bd3dc3/flowlogs_reader-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a94cfcaa8093ce1bf6a518c10ba68c75", "sha256": "4139df15a238484750951ae6a93624e5bc140416d9934f74b0b8c58ff5159271"}, "downloads": -1, "filename": "flowlogs_reader-0.3.tar.gz", "has_sig": false, "md5_digest": "a94cfcaa8093ce1bf6a518c10ba68c75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6659, "upload_time": "2015-08-18T16:07:03", "upload_time_iso_8601": "2015-08-18T16:07:03.317209Z", "url": "https://files.pythonhosted.org/packages/ab/a0/63acaf93c42c2adc92660a680349ad34e7a80175e08bd0eeb56a4ccaed8e/flowlogs_reader-0.3.tar.gz", "yanked": false}], "0.4": [], "0.4.1": [{"comment_text": "", "digests": {"md5": "22180970cfcc3d11a0724866c40b2806", "sha256": "ea9850cce51494e06b2f516e79621325d2d41412eac07cac3286201005fa5a3a"}, "downloads": -1, "filename": "flowlogs_reader-0.4.1-py2-none-any.whl", "has_sig": false, "md5_digest": "22180970cfcc3d11a0724866c40b2806", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11901, "upload_time": "2016-02-19T16:09:32", "upload_time_iso_8601": "2016-02-19T16:09:32.411838Z", "url": "https://files.pythonhosted.org/packages/db/7a/0b6426b3ea8bad862fcc942ef523477455843663b3df8540996b7e9dc73d/flowlogs_reader-0.4.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15970cc373e484c14e574f291e98f7a7", "sha256": "575827a1032e2cb79dc61ff48ef46d2a68c834de8ea0d9ce1db8929bd403d73d"}, "downloads": -1, "filename": "flowlogs_reader-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "15970cc373e484c14e574f291e98f7a7", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 11904, "upload_time": "2016-02-19T16:08:46", "upload_time_iso_8601": "2016-02-19T16:08:46.445280Z", "url": "https://files.pythonhosted.org/packages/3b/62/5606055e68977df37afc2b1ffd49ff8dd03c8524c9334fcf964cb5f34704/flowlogs_reader-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89ce7cd2e1cc06d58d1e07d82c8a8e70", "sha256": "a0c0dfb29d3c283cd718ad2f1afaeecdcd34f5768ec7c14d89eff15d873803a7"}, "downloads": -1, "filename": "flowlogs_reader-0.4.1.tar.gz", "has_sig": false, "md5_digest": "89ce7cd2e1cc06d58d1e07d82c8a8e70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6665, "upload_time": "2016-02-19T16:08:39", "upload_time_iso_8601": "2016-02-19T16:08:39.809602Z", "url": "https://files.pythonhosted.org/packages/60/55/ef8dd96b79265634bc60e7a86f532c35d6ea7805745354493be3f7c2c120/flowlogs_reader-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "2839234e1b2309c806ca5e0d8e216b27", "sha256": "dba6b7a16fe3731ef0b6e73e4d849841e1f4dd433c0db99bd975efde1b2d5032"}, "downloads": -1, "filename": "flowlogs_reader-0.5.0-py2-none-any.whl", "has_sig": false, "md5_digest": "2839234e1b2309c806ca5e0d8e216b27", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11832, "upload_time": "2016-03-23T15:07:15", "upload_time_iso_8601": "2016-03-23T15:07:15.388155Z", "url": "https://files.pythonhosted.org/packages/8d/b6/27f89d6f02c77a2df99e8100492f25048477a8879b349417245fdd19f380/flowlogs_reader-0.5.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb69d103c556af199f0f888297554128", "sha256": "242a831fb3ed9cc4e081169c7fb7407e954713dc009b832ebb58de67cc8805e3"}, "downloads": -1, "filename": "flowlogs_reader-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bb69d103c556af199f0f888297554128", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11828, "upload_time": "2016-03-23T15:06:13", "upload_time_iso_8601": "2016-03-23T15:06:13.824952Z", "url": "https://files.pythonhosted.org/packages/6a/b8/04806f79b76f847c075a09c6283676119f170c69c19ae7144ff195185393/flowlogs_reader-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26104d00178f37e7dbce9ccb0801e109", "sha256": "41ee608e1803822c3189927c2ec1a0ba2043c2425e01e00e2f7dd61f5b8751f6"}, "downloads": -1, "filename": "flowlogs_reader-0.5.0.tar.gz", "has_sig": false, "md5_digest": "26104d00178f37e7dbce9ccb0801e109", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6911, "upload_time": "2016-03-23T15:06:25", "upload_time_iso_8601": "2016-03-23T15:06:25.959301Z", "url": "https://files.pythonhosted.org/packages/fb/e5/6b6fc85c7cbc381b3f2690b69267dff58e92d5abd39ec9448c0b9aa8d6c9/flowlogs_reader-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "d432fc345128aa262875d1fb96721cde", "sha256": "149ec05eaac77927c32813a26c906ebf45a94490e58e6c9f5cd403422a4f5f7e"}, "downloads": -1, "filename": "flowlogs_reader-0.6.0-py2-none-any.whl", "has_sig": false, "md5_digest": "d432fc345128aa262875d1fb96721cde", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 12135, "upload_time": "2016-05-31T15:49:27", "upload_time_iso_8601": "2016-05-31T15:49:27.651885Z", "url": "https://files.pythonhosted.org/packages/12/4b/1d8d7777972284c36293147bf4fc51dd6b73dcc1659faf7197315998efda/flowlogs_reader-0.6.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8f56a8a3a46bb80e12dc216ab78c738", "sha256": "345e1877f23a5c89616940142c3039f5ef14fb368beb498a84b596218079e04c"}, "downloads": -1, "filename": "flowlogs_reader-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c8f56a8a3a46bb80e12dc216ab78c738", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12132, "upload_time": "2016-05-31T15:47:21", "upload_time_iso_8601": "2016-05-31T15:47:21.236746Z", "url": "https://files.pythonhosted.org/packages/2f/96/7243df00a0d5172a0fdf515aa03d887b6fe7928abf1bb870040a6932b2c7/flowlogs_reader-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9161a3ca59283fdf7c21240be2468c0e", "sha256": "579517c28219ee95eb456e6f534f595c4a9990b3afac3db4f7190fd05faf757f"}, "downloads": -1, "filename": "flowlogs_reader-0.6.0.tar.gz", "has_sig": false, "md5_digest": "9161a3ca59283fdf7c21240be2468c0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7196, "upload_time": "2016-05-31T15:45:42", "upload_time_iso_8601": "2016-05-31T15:45:42.187711Z", "url": "https://files.pythonhosted.org/packages/2c/00/0425f73d4e4f501d5736756f2d4294ea9700a1ebf7268b564ebdeb1b69d2/flowlogs_reader-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "565055db3d47c7f4ef27b7958fb87c0b", "sha256": "f4ded73fcbee2f8c94e75a53c25675f34aa9355e509abdfe23edeeff6b3a15c9"}, "downloads": -1, "filename": "flowlogs_reader-0.7.0-py2-none-any.whl", "has_sig": false, "md5_digest": "565055db3d47c7f4ef27b7958fb87c0b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 12287, "upload_time": "2016-06-07T12:05:41", "upload_time_iso_8601": "2016-06-07T12:05:41.578054Z", "url": "https://files.pythonhosted.org/packages/16/1a/768acc0206ffaa69e96463ff6d93ca56057410a8c95e457d8e17d3ccf8e9/flowlogs_reader-0.7.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c0593bc713646b7bc032e3bc3fd2347", "sha256": "a2b03af902dc3d1aa6f75370add47852a09feb8b1a660a3605ffc661396eddcd"}, "downloads": -1, "filename": "flowlogs_reader-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7c0593bc713646b7bc032e3bc3fd2347", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 12283, "upload_time": "2016-06-07T12:05:25", "upload_time_iso_8601": "2016-06-07T12:05:25.026561Z", "url": "https://files.pythonhosted.org/packages/2c/59/ea572f151eaea09c69249c4a7eae01a571cd9c7f3a6c054b7f216e998ca7/flowlogs_reader-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0d3e021c4069d917f93e7319f97f605", "sha256": "4f626af92280ef1410902ebbb6e04bb44778ece5e226976b80c4c9c86543595c"}, "downloads": -1, "filename": "flowlogs_reader-0.7.0.tar.gz", "has_sig": false, "md5_digest": "c0d3e021c4069d917f93e7319f97f605", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7042, "upload_time": "2016-06-07T12:05:45", "upload_time_iso_8601": "2016-06-07T12:05:45.376124Z", "url": "https://files.pythonhosted.org/packages/f8/39/9e4387fff7f279379141af4f819d0345f00abdcea28e9ab8f80e793b622a/flowlogs_reader-0.7.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "20f983faa6a85dd136c52b4b221225d4", "sha256": "c8c284e2823ff666de492d542d4662f796149ed56a667ea90b8dbe40acdf97ad"}, "downloads": -1, "filename": "flowlogs_reader-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "20f983faa6a85dd136c52b4b221225d4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 14835, "upload_time": "2016-06-21T14:44:33", "upload_time_iso_8601": "2016-06-21T14:44:33.660801Z", "url": "https://files.pythonhosted.org/packages/c1/35/6308fcbead5ded2db2d58cb7d8fb5c7bb0e2e406d4c38a287d7cd4740741/flowlogs_reader-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29901e553a74acc34b55678e6c7d3331", "sha256": "ef38f1b36b8e97c0101aa3ade20ef7eba90efa6e77ec17cfa13ff4f518f5cca8"}, "downloads": -1, "filename": "flowlogs_reader-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "29901e553a74acc34b55678e6c7d3331", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14833, "upload_time": "2016-06-21T14:43:52", "upload_time_iso_8601": "2016-06-21T14:43:52.410496Z", "url": "https://files.pythonhosted.org/packages/95/55/b7c2220221074d5ae03d5ec4c8be8b96172bfbf4af04871ca501c81bfb78/flowlogs_reader-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43a619f79ac5d48e23a29b3ee5a0ca30", "sha256": "8e47b58359165187c786c8b5e5ebec2e438f1102c0b40b5172f38e6ae254a804"}, "downloads": -1, "filename": "flowlogs_reader-1.0.0.tar.gz", "has_sig": false, "md5_digest": "43a619f79ac5d48e23a29b3ee5a0ca30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9039, "upload_time": "2016-06-21T14:43:56", "upload_time_iso_8601": "2016-06-21T14:43:56.462177Z", "url": "https://files.pythonhosted.org/packages/09/e5/70e757ae1fe53400d97d95bd04c4cd6936643965a26f709842d6085b1b0d/flowlogs_reader-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0b31a3e7432e272e5871cda6bf08515d", "sha256": "b6bb7dcbae0408b0493bf6453c33231f4ee9ebae8dd1b71e5caf9ddcb17c4b7d"}, "downloads": -1, "filename": "flowlogs_reader-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0b31a3e7432e272e5871cda6bf08515d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9371, "upload_time": "2016-08-22T21:36:03", "upload_time_iso_8601": "2016-08-22T21:36:03.912371Z", "url": "https://files.pythonhosted.org/packages/f5/d1/3290cc4bfc27c59130699d9b51157497d575b6a9386c362605ee179dfb58/flowlogs_reader-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "424f511597b074d42659678acd2d4d02", "sha256": "4740d7c151223f48e37a9d947f8d52685f1abed5c981e0d3dc5aa0befe020d24"}, "downloads": -1, "filename": "flowlogs_reader-1.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "424f511597b074d42659678acd2d4d02", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15507, "upload_time": "2017-12-06T15:24:11", "upload_time_iso_8601": "2017-12-06T15:24:11.374420Z", "url": "https://files.pythonhosted.org/packages/94/d0/e1a0b25231b0604476e07accc52f1d6b8a8ffac6cc179dca4566015d0ce7/flowlogs_reader-1.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d7b585b10e79100fb2f1fa22d6155f1", "sha256": "454119bed6e68858e1569a0c05ac51693ac34aae8a2b719b5c0622fd3f2f0a33"}, "downloads": -1, "filename": "flowlogs_reader-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9d7b585b10e79100fb2f1fa22d6155f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15505, "upload_time": "2017-12-06T15:24:12", "upload_time_iso_8601": "2017-12-06T15:24:12.804183Z", "url": "https://files.pythonhosted.org/packages/0d/fb/53d0e254401cb3773852c53e805c0fac02c6058aa9f03d606ab3c3bd140b/flowlogs_reader-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbe418e91ecb41593c7f654df96020dc", "sha256": "0842315e0c24d9092091c9a3b651d9d740769b7c9c219e92d47d61ccf2ad1e4d"}, "downloads": -1, "filename": "flowlogs_reader-1.0.2.tar.gz", "has_sig": false, "md5_digest": "fbe418e91ecb41593c7f654df96020dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12161, "upload_time": "2017-12-06T15:24:14", "upload_time_iso_8601": "2017-12-06T15:24:14.452222Z", "url": "https://files.pythonhosted.org/packages/cd/03/75aa349f341e5562be944bf3c7dfcda2df17a5aa94c16c751f998f02757f/flowlogs_reader-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "e817d247ab0b113c0213a9abeb33e8eb", "sha256": "97697094d4fbd40ab3acc64786eaa3e57afe00200ac2bff51d5948bad2bba068"}, "downloads": -1, "filename": "flowlogs_reader-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e817d247ab0b113c0213a9abeb33e8eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16797, "upload_time": "2018-08-20T01:25:42", "upload_time_iso_8601": "2018-08-20T01:25:42.846104Z", "url": "https://files.pythonhosted.org/packages/41/e8/42870e3f921ab55bae06860172ba86e044f241b36deeedaaa292919dcb3b/flowlogs_reader-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a39bb55bc04c2341bfded56c8a90349c", "sha256": "a79019f04d8e16aefc2b238ff7b50316891a6ff80ae9a0ca458e1d8858d9cf4f"}, "downloads": -1, "filename": "flowlogs_reader-1.1.0.tar.gz", "has_sig": false, "md5_digest": "a39bb55bc04c2341bfded56c8a90349c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15206, "upload_time": "2018-08-20T01:25:44", "upload_time_iso_8601": "2018-08-20T01:25:44.301371Z", "url": "https://files.pythonhosted.org/packages/ed/c5/ca04d3e72e62a6b1340e294fe23cb0e492d66ed2c8de8c27a864df5f321b/flowlogs_reader-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "201f96ca36322d29b55e739391c1f3e9", "sha256": "3f9df0b4f308b6dd30297b46e2f6c2c2ffa3c036bf17a2093e1f6b1b2c052d55"}, "downloads": -1, "filename": "flowlogs_reader-1.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "201f96ca36322d29b55e739391c1f3e9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21034, "upload_time": "2018-10-24T02:06:30", "upload_time_iso_8601": "2018-10-24T02:06:30.938391Z", "url": "https://files.pythonhosted.org/packages/f6/0a/27575f67c783c17a30692364cbe598e1bc65bb364892494f880e3863d737/flowlogs_reader-1.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59abd2f779f1007522dec3ea68bcf5d1", "sha256": "5e681afa623e63f7f27324b69be2c365312b9fc733e8b823357557ccd4150f79"}, "downloads": -1, "filename": "flowlogs_reader-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "59abd2f779f1007522dec3ea68bcf5d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21034, "upload_time": "2018-10-24T02:06:32", "upload_time_iso_8601": "2018-10-24T02:06:32.582552Z", "url": "https://files.pythonhosted.org/packages/a8/bd/6ed244157252df9690f7ee7d9d507f6f8b3e0608a61cd11141164f529cde/flowlogs_reader-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34d6199a010f199bbca1c957904a55f5", "sha256": "cd6344fdad097c38756772624922ee37452ef1e131213c7d0b5702bcf52a5b02"}, "downloads": -1, "filename": "flowlogs_reader-1.1.1.tar.gz", "has_sig": false, "md5_digest": "34d6199a010f199bbca1c957904a55f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15066, "upload_time": "2018-10-24T02:06:35", "upload_time_iso_8601": "2018-10-24T02:06:35.959216Z", "url": "https://files.pythonhosted.org/packages/5b/56/8bd925495ce6ccb65941d46ffd9eb66121d57a94b18d844bb5f1bfe12374/flowlogs_reader-1.1.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "58201d17fa24969f4f30a6625d0338c3", "sha256": "65d02e34b03ce5a3d0aebdf9daaab0cad2789b9584487bbaa6fd66ed0849c041"}, "downloads": -1, "filename": "flowlogs_reader-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "58201d17fa24969f4f30a6625d0338c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 21195, "upload_time": "2019-10-01T16:33:10", "upload_time_iso_8601": "2019-10-01T16:33:10.680179Z", "url": "https://files.pythonhosted.org/packages/8d/fd/16c9794b83573b00c99881e5b5238ba091eeaf5b7cdb1a2f78395cee42b1/flowlogs_reader-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48334e8ef28082183e2346e46e600a05", "sha256": "256c67afabc1783e8a378c7589877f76660c6a645aa6dfe1759e26f4a93a22d0"}, "downloads": -1, "filename": "flowlogs_reader-2.0.0.tar.gz", "has_sig": false, "md5_digest": "48334e8ef28082183e2346e46e600a05", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 15342, "upload_time": "2019-10-01T16:33:12", "upload_time_iso_8601": "2019-10-01T16:33:12.730640Z", "url": "https://files.pythonhosted.org/packages/72/e7/7940f4d8aaef7676faaaffae2d62cb18d43924e1cd3de1a73071f1099d88/flowlogs_reader-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "b295b0afee8bc9414b069bc98b03f8d5", "sha256": "eb7c0795c53efa04ac3e38db5bd3f091f7e9c9b058dc58f18d232591a6805318"}, "downloads": -1, "filename": "flowlogs_reader-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b295b0afee8bc9414b069bc98b03f8d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 21445, "upload_time": "2020-04-03T12:44:51", "upload_time_iso_8601": "2020-04-03T12:44:51.159547Z", "url": "https://files.pythonhosted.org/packages/5e/d1/aa574193193b611972897e28376874c42ccf82d1ff62ef0691537134e01a/flowlogs_reader-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a32c5e9f37a72cd9d790bef97363b936", "sha256": "fa0acaf84f1340d06f7e254b6d03b7a394c8114f519b282ba923c470cb65e2e7"}, "downloads": -1, "filename": "flowlogs_reader-2.1.0.tar.gz", "has_sig": false, "md5_digest": "a32c5e9f37a72cd9d790bef97363b936", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 16311, "upload_time": "2020-04-03T12:44:52", "upload_time_iso_8601": "2020-04-03T12:44:52.607963Z", "url": "https://files.pythonhosted.org/packages/9e/a7/a8f0aff102206e374ce8d023e6364ba9170288f84e7661d82984a077a605/flowlogs_reader-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "404ecd4274cafe3729946b3c5d3bdf4a", "sha256": "e6d63c3c0117053d5db1e56346ec85b2b656fa4548c83635f7112783809c248b"}, "downloads": -1, "filename": "flowlogs_reader-2.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "404ecd4274cafe3729946b3c5d3bdf4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 17722, "upload_time": "2020-04-08T12:49:17", "upload_time_iso_8601": "2020-04-08T12:49:17.283325Z", "url": "https://files.pythonhosted.org/packages/6c/64/7e7c46cd1b5a5001b0af438330b60b0c509417a624338a0b44d29852af45/flowlogs_reader-2.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0aed9a82c6ad259936fbeb310819d6e", "sha256": "4f2ed3a4a1ebcc115330fee044b698bf456b718caf8fb8564a384e23a2621995"}, "downloads": -1, "filename": "flowlogs_reader-2.1.1.tar.gz", "has_sig": false, "md5_digest": "f0aed9a82c6ad259936fbeb310819d6e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 15349, "upload_time": "2020-04-08T12:49:18", "upload_time_iso_8601": "2020-04-08T12:49:18.581524Z", "url": "https://files.pythonhosted.org/packages/a9/a9/afde705ad3cdebdba4761c3493e80e2c5057e5dd241be53ecc6e2e99ef47/flowlogs_reader-2.1.1.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "48196828202f575b2a678fb90faaf421", "sha256": "49573059df64c2f13079e30bbd0325a125dd81fe95d11471d00c2053e92c407f"}, "downloads": -1, "filename": "flowlogs_reader-2.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "48196828202f575b2a678fb90faaf421", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 18014, "upload_time": "2020-04-10T15:16:45", "upload_time_iso_8601": "2020-04-10T15:16:45.511871Z", "url": "https://files.pythonhosted.org/packages/1a/d7/cc5af7c82402ef4991e10442a699172cd5de137061984d9ec38b5a58c78c/flowlogs_reader-2.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfc63afed2cb21c13d8f35866d8a0d21", "sha256": "b14aa4a9125a9ad6efa11ae0824af77167283465c93fd3660a9297d861339e95"}, "downloads": -1, "filename": "flowlogs_reader-2.2.0.tar.gz", "has_sig": false, "md5_digest": "bfc63afed2cb21c13d8f35866d8a0d21", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 15791, "upload_time": "2020-04-10T15:16:46", "upload_time_iso_8601": "2020-04-10T15:16:46.832497Z", "url": "https://files.pythonhosted.org/packages/47/ab/a130393ff1cdc5abbc6f49004f16d3d17f4f06391cca1b11f17bb6017360/flowlogs_reader-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "9b2aa866deaed8f21f9a9f358f9043f2", "sha256": "f1e1dbbdb9a809be7e5a2a086f73e6b43d17b0346d0263aab984a78378bfa56a"}, "downloads": -1, "filename": "flowlogs_reader-2.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9b2aa866deaed8f21f9a9f358f9043f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 18138, "upload_time": "2020-04-13T20:41:17", "upload_time_iso_8601": "2020-04-13T20:41:17.000269Z", "url": "https://files.pythonhosted.org/packages/f6/e5/03bbb67d0502b9374779b7711c85cabb894d2c5b84422fe6220d679c38e3/flowlogs_reader-2.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce2a367b1bf0c7a5855b50a22f25c217", "sha256": "7c24156a3d6887b641ceb37b57d91805bee6c3352e8a3ca97a3274217ead9294"}, "downloads": -1, "filename": "flowlogs_reader-2.2.1.tar.gz", "has_sig": false, "md5_digest": "ce2a367b1bf0c7a5855b50a22f25c217", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 15898, "upload_time": "2020-04-13T20:41:18", "upload_time_iso_8601": "2020-04-13T20:41:18.356517Z", "url": "https://files.pythonhosted.org/packages/7e/97/ecfde8a8672aaca6f47e95b415c5efcf7ee0244a8ea395606188ba996922/flowlogs_reader-2.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b2aa866deaed8f21f9a9f358f9043f2", "sha256": "f1e1dbbdb9a809be7e5a2a086f73e6b43d17b0346d0263aab984a78378bfa56a"}, "downloads": -1, "filename": "flowlogs_reader-2.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9b2aa866deaed8f21f9a9f358f9043f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 18138, "upload_time": "2020-04-13T20:41:17", "upload_time_iso_8601": "2020-04-13T20:41:17.000269Z", "url": "https://files.pythonhosted.org/packages/f6/e5/03bbb67d0502b9374779b7711c85cabb894d2c5b84422fe6220d679c38e3/flowlogs_reader-2.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce2a367b1bf0c7a5855b50a22f25c217", "sha256": "7c24156a3d6887b641ceb37b57d91805bee6c3352e8a3ca97a3274217ead9294"}, "downloads": -1, "filename": "flowlogs_reader-2.2.1.tar.gz", "has_sig": false, "md5_digest": "ce2a367b1bf0c7a5855b50a22f25c217", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 15898, "upload_time": "2020-04-13T20:41:18", "upload_time_iso_8601": "2020-04-13T20:41:18.356517Z", "url": "https://files.pythonhosted.org/packages/7e/97/ecfde8a8672aaca6f47e95b415c5efcf7ee0244a8ea395606188ba996922/flowlogs_reader-2.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:01:40 2020"}