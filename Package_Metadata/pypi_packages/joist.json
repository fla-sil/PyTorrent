{"info": {"author": "Kitware, Inc.", "author_email": "kitware@kitware.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# joist\n\n[![PyPI version shields.io](https://img.shields.io/pypi/v/joist.svg)](https://pypi.python.org/pypi/joist/)\n\nJoist is a Django Widget library for providing a direct S3 bucket upload via the browser instead of going through the server. It extends the [django-storages](https://github.com/jschneier/django-storages) library for the S3 file storage\n\n## Installation\n\n```sh\npip install django-storages joist\n```\n\nby source:\n\n```sh\npip install -e 'git+https://github.com/danlamanna/joist.git#egg=joist'\n```\n\n## Configuration\n\nJoist depends on the django-storages S3 config (see https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html), following settings are used\n\n| Key                     | Description  |\n| ----------------------- | ------------- |\n| AWS_ACCESS_KEY_ID       | Your Amazon Web Services access key, as a string. |\n| AWS_SECRET_ACCESS_KEY   | Your Amazon Web Services secret access key, as a string. |\n| AWS_S3_REGION_NAME      | Name of the AWS S3 region to use (eg. eu-west-1) |\n| AWS_STORAGE_BUCKET_NAME | Your Amazon Web Services storage bucket name, as a string. (required) |\n\nAdditional settings\n\n| Key                     | Description  |\n| ----------------------- | ------------- |\n| JOIST_UPLOAD_STS_ARN    | The STS Arn Role to use (required) |\n| JOIST_UPLOAD_DURATION   | The duration the upload token should be valid in seconds (default: `60*60*12 = 12h`) |\n| JOIST_UPLOAD_PREFIX      | Prefix where files should be stored (default: `''`) |\n| JOIST_API_BASE_URL | API prefix where the server urls are hosted (default: `/api/joist`) |\n\n\n## Usage\n\n### Setup\n\nAdd `joist` to the list of installed apps:\n\n`settings.py`:\n```python\nINSTALLED_APPS = [\n    ...\n    'rest_framework',\n    'rest_framework.authtoken',\n    'joist',\n]\n```\n\nMoreover, since the field requires additional REST endpoints one has to use add them to the `urlpatterns`:\n\n`urls.py`\n```python\nurlpatterns = [\n    ...\n    path('api/joist/', include('joist.urls')),\n]\n```\n\n### Model Definition:\n\ninstead of\n\n```python\nphoto = models.FileField()\n```\n\nuse\n```python\nfrom joist.models import S3FileField\n\nphoto = S3FileField()\n```\n\nThe result is that once the user select a file in the file chooser, it will be automatically uploaded to S3 on the client side.\n\n## Signals\n\nJoist sends out two signals when its REST api is called:\n\n```python\njoist_upload_prepare(name: str, object_key: str)\njoist_upload_finalize(name: str, object_key: str, status: string)\n```\n\n## Development Environment\n\n### Requirements\n * Terraform\n * AWS CLI\n * Python 3.7\n * node\n\n## Init AWS\nlogin to AWS Concole and create an API access key\n```sh\naws configure\n```\n\n### Run Terraform\n```sh\ncd terraform\nterraform init\nterraform workspace new <NAME>\nterraform apply\n```\n\n### Create env File\n```sh\ncd terraform\nterraform output > ../example/.env\n```\nNote:\n * edit the `.env` file and remove the whitespaces around the `=` characters\n\n\n### Init Django and Python Repo\n```sh\npipenv --python=3\npipenv install -r requirements.txt example/requirements.txt\npip install -e .\n\ncd example\n./manage.py migrate\n./manage.py createsuperuser\n```\n\n### Init Repo Pre Commits\n```sh\npipenv shell\npip install pre-commit\npre-commit install\n```\n\n### Init Widget Client\n```sh\ncd client\nnpm install\nnpm run dev\n```\n\n### Init Test Vue Client\n```sh\ncd example-client\nnpm install\n```\n\nTODO\n\n\n```sh\ncd example\n./manager.py runserver\n```\n--> run at http://localhost:8000 and http://localhost:8000/admin\n\nExample blob forms:\n * http://localhost:8000/\n * http://localhost:8000/new/\n * http://127.0.0.1:8000/admin/blobs/blob\n\n\n```sh\ncd example-client\nnpm run serve\n```\n--> run at http://localhost:8080\n\n\n### Release\n\n```sh\npipenv shell\npip install bumpversion\nbumpversion minor\n```\n\nTODO: npm release\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/danlamanna/joist", "keywords": "django,s3,django-widget", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "joist", "package_url": "https://pypi.org/project/joist/", "platform": "", "project_url": "https://pypi.org/project/joist/", "project_urls": {"Homepage": "https://github.com/danlamanna/joist"}, "release_url": "https://pypi.org/project/joist/0.0.2/", "requires_dist": ["django", "django-storages", "boto3", "djangorestframework"], "requires_python": ">=3.7.0", "summary": "A django widget library for direct S3 uploads", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>joist</h1>\n<p><a href=\"https://pypi.python.org/pypi/joist/\" rel=\"nofollow\"><img alt=\"PyPI version shields.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ce502d1ff91667fd2dfc97c59a371c3b1b7856e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6a6f6973742e737667\"></a></p>\n<p>Joist is a Django Widget library for providing a direct S3 bucket upload via the browser instead of going through the server. It extends the <a href=\"https://github.com/jschneier/django-storages\" rel=\"nofollow\">django-storages</a> library for the S3 file storage</p>\n<h2>Installation</h2>\n<pre>pip install django-storages joist\n</pre>\n<p>by source:</p>\n<pre>pip install -e <span class=\"s1\">'git+https://github.com/danlamanna/joist.git#egg=joist'</span>\n</pre>\n<h2>Configuration</h2>\n<p>Joist depends on the django-storages S3 config (see <a href=\"https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html\" rel=\"nofollow\">https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html</a>), following settings are used</p>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AWS_ACCESS_KEY_ID</td>\n<td>Your Amazon Web Services access key, as a string.</td>\n</tr>\n<tr>\n<td>AWS_SECRET_ACCESS_KEY</td>\n<td>Your Amazon Web Services secret access key, as a string.</td>\n</tr>\n<tr>\n<td>AWS_S3_REGION_NAME</td>\n<td>Name of the AWS S3 region to use (eg. eu-west-1)</td>\n</tr>\n<tr>\n<td>AWS_STORAGE_BUCKET_NAME</td>\n<td>Your Amazon Web Services storage bucket name, as a string. (required)</td>\n</tr></tbody></table>\n<p>Additional settings</p>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JOIST_UPLOAD_STS_ARN</td>\n<td>The STS Arn Role to use (required)</td>\n</tr>\n<tr>\n<td>JOIST_UPLOAD_DURATION</td>\n<td>The duration the upload token should be valid in seconds (default: <code>60*60*12 = 12h</code>)</td>\n</tr>\n<tr>\n<td>JOIST_UPLOAD_PREFIX</td>\n<td>Prefix where files should be stored (default: <code>''</code>)</td>\n</tr>\n<tr>\n<td>JOIST_API_BASE_URL</td>\n<td>API prefix where the server urls are hosted (default: <code>/api/joist</code>)</td>\n</tr></tbody></table>\n<h2>Usage</h2>\n<h3>Setup</h3>\n<p>Add <code>joist</code> to the list of installed apps:</p>\n<p><code>settings.py</code>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'rest_framework'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'rest_framework.authtoken'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'joist'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Moreover, since the field requires additional REST endpoints one has to use add them to the <code>urlpatterns</code>:</p>\n<p><code>urls.py</code></p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'api/joist/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'joist.urls'</span><span class=\"p\">)),</span>\n<span class=\"p\">]</span>\n</pre>\n<h3>Model Definition:</h3>\n<p>instead of</p>\n<pre><span class=\"n\">photo</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FileField</span><span class=\"p\">()</span>\n</pre>\n<p>use</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">joist.models</span> <span class=\"kn\">import</span> <span class=\"n\">S3FileField</span>\n\n<span class=\"n\">photo</span> <span class=\"o\">=</span> <span class=\"n\">S3FileField</span><span class=\"p\">()</span>\n</pre>\n<p>The result is that once the user select a file in the file chooser, it will be automatically uploaded to S3 on the client side.</p>\n<h2>Signals</h2>\n<p>Joist sends out two signals when its REST api is called:</p>\n<pre><span class=\"n\">joist_upload_prepare</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">object_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span>\n<span class=\"n\">joist_upload_finalize</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">object_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"n\">string</span><span class=\"p\">)</span>\n</pre>\n<h2>Development Environment</h2>\n<h3>Requirements</h3>\n<ul>\n<li>Terraform</li>\n<li>AWS CLI</li>\n<li>Python 3.7</li>\n<li>node</li>\n</ul>\n<h2>Init AWS</h2>\n<p>login to AWS Concole and create an API access key</p>\n<pre>aws configure\n</pre>\n<h3>Run Terraform</h3>\n<pre><span class=\"nb\">cd</span> terraform\nterraform init\nterraform workspace new &lt;NAME&gt;\nterraform apply\n</pre>\n<h3>Create env File</h3>\n<pre><span class=\"nb\">cd</span> terraform\nterraform output &gt; ../example/.env\n</pre>\n<p>Note:</p>\n<ul>\n<li>edit the <code>.env</code> file and remove the whitespaces around the <code>=</code> characters</li>\n</ul>\n<h3>Init Django and Python Repo</h3>\n<pre>pipenv --python<span class=\"o\">=</span><span class=\"m\">3</span>\npipenv install -r requirements.txt example/requirements.txt\npip install -e .\n\n<span class=\"nb\">cd</span> example\n./manage.py migrate\n./manage.py createsuperuser\n</pre>\n<h3>Init Repo Pre Commits</h3>\n<pre>pipenv shell\npip install pre-commit\npre-commit install\n</pre>\n<h3>Init Widget Client</h3>\n<pre><span class=\"nb\">cd</span> client\nnpm install\nnpm run dev\n</pre>\n<h3>Init Test Vue Client</h3>\n<pre><span class=\"nb\">cd</span> example-client\nnpm install\n</pre>\n<p>TODO</p>\n<pre><span class=\"nb\">cd</span> example\n./manager.py runserver\n</pre>\n<p>--&gt; run at <a href=\"http://localhost:8000\" rel=\"nofollow\">http://localhost:8000</a> and <a href=\"http://localhost:8000/admin\" rel=\"nofollow\">http://localhost:8000/admin</a></p>\n<p>Example blob forms:</p>\n<ul>\n<li><a href=\"http://localhost:8000/\" rel=\"nofollow\">http://localhost:8000/</a></li>\n<li><a href=\"http://localhost:8000/new/\" rel=\"nofollow\">http://localhost:8000/new/</a></li>\n<li><a href=\"http://127.0.0.1:8000/admin/blobs/blob\" rel=\"nofollow\">http://127.0.0.1:8000/admin/blobs/blob</a></li>\n</ul>\n<pre><span class=\"nb\">cd</span> example-client\nnpm run serve\n</pre>\n<p>--&gt; run at <a href=\"http://localhost:8080\" rel=\"nofollow\">http://localhost:8080</a></p>\n<h3>Release</h3>\n<pre>pipenv shell\npip install bumpversion\nbumpversion minor\n</pre>\n<p>TODO: npm release</p>\n\n          </div>"}, "last_serial": 6269858, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "7eda8e15a451107f5e70d5978c7a468e", "sha256": "f5a73624b123fec5f87a3b2eab47e565ba66c210b2c29a2708b72bb77d08de6d"}, "downloads": -1, "filename": "joist-0.0.0.tar.gz", "has_sig": false, "md5_digest": "7eda8e15a451107f5e70d5978c7a468e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 547, "upload_time": "2019-11-20T19:11:55", "upload_time_iso_8601": "2019-11-20T19:11:55.257228Z", "url": "https://files.pythonhosted.org/packages/9c/a1/882a0002938c805b5566947c81014b61e5aaaeecc5a8ac2b2fcbb6fdc90e/joist-0.0.0.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "be477123f27a097cc7e853980c5d11d5", "sha256": "4c3650b9df4e8536bb140339e0c6653971a7106b6f84b1ba5a608cb2ff12a977"}, "downloads": -1, "filename": "joist-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "be477123f27a097cc7e853980c5d11d5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7.0", "size": 102254, "upload_time": "2019-11-21T18:41:40", "upload_time_iso_8601": "2019-11-21T18:41:40.740052Z", "url": "https://files.pythonhosted.org/packages/42/e0/d0f8f19dfa55b63043ab995a61215a4c5ef206c93cc1529d891f7048a6a3/joist-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79ac825da3dda37d2c412a5e9a51f35c", "sha256": "95f2e9491f84b45f79b82119a18a4d39dd11ce2ebbc886781d9a084f0fbd09da"}, "downloads": -1, "filename": "joist-0.0.2.tar.gz", "has_sig": false, "md5_digest": "79ac825da3dda37d2c412a5e9a51f35c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 106078, "upload_time": "2019-11-21T18:41:42", "upload_time_iso_8601": "2019-11-21T18:41:42.948083Z", "url": "https://files.pythonhosted.org/packages/42/6c/76099ae748c85187a3338806a76ed8d0f679f00895e2a2de99510b3c21bf/joist-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be477123f27a097cc7e853980c5d11d5", "sha256": "4c3650b9df4e8536bb140339e0c6653971a7106b6f84b1ba5a608cb2ff12a977"}, "downloads": -1, "filename": "joist-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "be477123f27a097cc7e853980c5d11d5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7.0", "size": 102254, "upload_time": "2019-11-21T18:41:40", "upload_time_iso_8601": "2019-11-21T18:41:40.740052Z", "url": "https://files.pythonhosted.org/packages/42/e0/d0f8f19dfa55b63043ab995a61215a4c5ef206c93cc1529d891f7048a6a3/joist-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79ac825da3dda37d2c412a5e9a51f35c", "sha256": "95f2e9491f84b45f79b82119a18a4d39dd11ce2ebbc886781d9a084f0fbd09da"}, "downloads": -1, "filename": "joist-0.0.2.tar.gz", "has_sig": false, "md5_digest": "79ac825da3dda37d2c412a5e9a51f35c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 106078, "upload_time": "2019-11-21T18:41:42", "upload_time_iso_8601": "2019-11-21T18:41:42.948083Z", "url": "https://files.pythonhosted.org/packages/42/6c/76099ae748c85187a3338806a76ed8d0f679f00895e2a2de99510b3c21bf/joist-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:16 2020"}