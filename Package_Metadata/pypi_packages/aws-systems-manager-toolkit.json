{"info": {"author": "Vonage SRE", "author_email": "sre@vonage.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows :: Windows 10", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only"], "description": "\n# aws-systems-manager-toolkit\n\naws-systems-manager-toolkit is a Python library that provides wrapper tools around AWS Systems Manager functionality.\n\nThis project was partially inspired by, and based off of, work done by Michael Ludvig in *[aws-ssm-tools](https://github.com/mludvig/aws-ssm-tools/)*.\n\nAll scripts below have been tested with various linux distros, Mac, and Windows10/Server 2019.  \n\nNOTE: On Windows they will install as an .exe file but this still requires a local python installation.\n\n# Requirements\n\n* Python3.x\n* AWS CLI\n\n\n# Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install aws-systems-manager-toolkit.\n\n```bash\npip install aws-systems-manager-toolkit\n```\n\n## Tools\n* ### ssm-connect\n\nConnects you to an SSM-enabled machine by InstanceID, Hostname, Name Tag, or IP Address. \n\nIf the create-run-as-user.yml doc is uploaded to the account, will also attempt to create the user you're authenticated as, as well as adding you to the sudoers file. The document is located in docs/create-run-as-user.yml. See: *[AWS Documentation](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-ssm-docs.html)*.\n\nThis feature is typically used with the *[Run As](https://docs.aws.amazon.com/systems-manager/latest/userguide/session-preferences-run-as.html)* option enabled in Session Manager preferences.  By enabling this and uploading the document you can now log in as your own username vs the generic ssm-user.  This is often helpful for tracking actions in logs.\n\n  usage:\n  ```\n    ~ $ ssm-connect test-host1\n\n    Starting session with SessionId: session-0d286540f75bc3161\n    sh-4.2$\n    sh-4.2$ cd\n    sh-4.2$ whoami\n    ssm-user\n    sh-4.2$ hostname\n    ip-10-0-0-114.ec2.internal\n    sh-4.2$ exit\n    exit\n\n\n    Exiting session with sessionId: session-0d286540f75bc3161.\n  ```\n* ### ssm-list\n\nDisplays a list of all SSM-enabled machines in the account.  You can use any of the results to connect to the system using ssm-connect.\n\n##### Basic usage:\n  ```\n    ~ $ ssm-list\n    i-0a11abcd1ab0abc01   ip-10-0-0-75.ec2.internal    test-host1    10.0.0.75 \n    i-0a11abcd1ab0abc02   ip-10-0-0-114.ec2.internal   ssm-test      10.0.0.114\n    i-0a11abcd1ab0abc03   ip-10-0-0-55.ec2.internal    test-host2    10.0.0.55 \n    i-0a11abcd1ab0abc04   ip-10-0-00-112.ec2.internal  ssm-test2     10.0.0.112\n\n  ```\n##### Return instances based on one or more instance tags, using awscli syntax:\n  ```\n    ~ $ ssm-list --tags Name=tag:Name,Values=test-host1,ssm-test2\n    i-0a11abcd1ab0abc01   ip-10-0-0-75.ec2.internal    test-host1    10.0.0.75\n    i-0a11abcd1ab0abc04   ip-10-0-00-112.ec2.internal  ssm-test2     10.0.0.112\n  ```\n* ### ssm-port-forward\n\nSimplifies the port forwarding process.  The following example would expose remote Postgres port 5432 to your localhost:12345.  \n\n  usage:\n  ```\n    ~ $ ssm-port-forward --target i-0a11abcd1ab0abc01:5432 --local 12345\n\n    Starting session with SessionId: session-07cb202eeca63c39d\n    Port 12345 opened for sessionId session-07cb202eeca63c39d.\n\n    ^CTerminate signal received, exiting.\n\n\n    Exiting session with sessionId: session-07cb202eeca63c39d.\n  ```\n\n  #### You can also double port forward (set up port forwarding on the remote host first)\n\nThis is useful in situations where you have a database like RDS that is not running SSM.  Behind the scenes the script will setup 2 tunnels.  \n\n  1) A tunnel from your machine -> jumphost\n  2) A tunnel from jumphost -> RDS\n\nIn order to create the second tunnel we create a temporary user and pem on the jump host.  When you CTRL+C and end the script the user is also removed.  \n\nNOTE: In situations where internet is lost the temporary user can be left behind.  The user has a unique hash in the username in order to not conflict with regular OS users.  \n\n  usage:\n  ```\n\n    ~ $ ssm-port-forward --target i-0d14faab9db41ee57:3389 --local 12345 --remote i-0a11abcd1ab0abc01:111\n\n    Starting session with SessionId: user-0c702acdf8f164b7a\n    Port 12345 opened for sessionId user-0c702acdf8f164b7a.\n\n    ^CTerminate signal received, exiting.\n    Stopping remote SSH tunnel with Command ID 18bf6db1-7a2b-44bc-901a-ffc07c1868a1\n\n\n    Exiting session with sessionId: user-0c702acdf8f164b7a.\n  ```\n* ### ssm-run\n\nQuickly run commands on multiple machines at once and see the output broken down by machine. \n\n  usage:\n  ```\n    ~ $ ssm-run 10.0.0.114 10.0.0.55 --commands whoami hostname pwd \"sudo cat /etc/redhat-release\"\n    10.0.0.114 | i-0a11abcd1ab0abc01\n    root\n    ip-10-0-0-114.ec2.internal\n    /usr/bin\n    CentOS Linux release 7.7.1908 (Core)\n\n    10.0.0.55 | i-0a11abcd1ab0abc01\n    root\n    ip-10-0-0-55.ec2.internal\n    /usr/bin\n    CentOS Linux release 7.7.1908 (Core)\n\n  ```\n* ### ssm-ssh\n\nDelivers the full functionality of SSH, but removes the requirement of using InstanceID's.  Connect to any machine by using the same results provided by ssm-list.\n\n  usage:\n  ```\n    ~ $ ssm-ssh -i ~/.ssh/myuser.pem  myuser@10.0.0.114\n    Last login: Mon Feb 24 18:39:45 2020 from localhost\n\n    [myuser@ip-10-0-0-114 ~]$ exit\n    logout\n    Connection to i-0a11abcd1ab0abc01 closed.\n\n  ```\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vonage/aws-systems-manager-toolkit", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aws-systems-manager-toolkit", "package_url": "https://pypi.org/project/aws-systems-manager-toolkit/", "platform": "", "project_url": "https://pypi.org/project/aws-systems-manager-toolkit/", "project_urls": {"Homepage": "https://github.com/vonage/aws-systems-manager-toolkit"}, "release_url": "https://pypi.org/project/aws-systems-manager-toolkit/0.0.4/", "requires_dist": ["boto3", "botocore"], "requires_python": ">=3.6.0", "summary": "Wrapper tools for AWS Systems Manager", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aws-systems-manager-toolkit</h1>\n<p>aws-systems-manager-toolkit is a Python library that provides wrapper tools around AWS Systems Manager functionality.</p>\n<p>This project was partially inspired by, and based off of, work done by Michael Ludvig in <em><a href=\"https://github.com/mludvig/aws-ssm-tools/\" rel=\"nofollow\">aws-ssm-tools</a></em>.</p>\n<p>All scripts below have been tested with various linux distros, Mac, and Windows10/Server 2019.</p>\n<p>NOTE: On Windows they will install as an .exe file but this still requires a local python installation.</p>\n<h1>Requirements</h1>\n<ul>\n<li>Python3.x</li>\n<li>AWS CLI</li>\n</ul>\n<h1>Installation</h1>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install aws-systems-manager-toolkit.</p>\n<pre>pip install aws-systems-manager-toolkit\n</pre>\n<h2>Tools</h2>\n<ul>\n<li>\n<h3>ssm-connect</h3>\n</li>\n</ul>\n<p>Connects you to an SSM-enabled machine by InstanceID, Hostname, Name Tag, or IP Address.</p>\n<p>If the create-run-as-user.yml doc is uploaded to the account, will also attempt to create the user you're authenticated as, as well as adding you to the sudoers file. The document is located in docs/create-run-as-user.yml. See: <em><a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-ssm-docs.html\" rel=\"nofollow\">AWS Documentation</a></em>.</p>\n<p>This feature is typically used with the <em><a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/session-preferences-run-as.html\" rel=\"nofollow\">Run As</a></em> option enabled in Session Manager preferences.  By enabling this and uploading the document you can now log in as your own username vs the generic ssm-user.  This is often helpful for tracking actions in logs.</p>\n<p>usage:</p>\n<pre><code>  ~ $ ssm-connect test-host1\n\n  Starting session with SessionId: session-0d286540f75bc3161\n  sh-4.2$\n  sh-4.2$ cd\n  sh-4.2$ whoami\n  ssm-user\n  sh-4.2$ hostname\n  ip-10-0-0-114.ec2.internal\n  sh-4.2$ exit\n  exit\n\n\n  Exiting session with sessionId: session-0d286540f75bc3161.\n</code></pre>\n<ul>\n<li>\n<h3>ssm-list</h3>\n</li>\n</ul>\n<p>Displays a list of all SSM-enabled machines in the account.  You can use any of the results to connect to the system using ssm-connect.</p>\n<h5>Basic usage:</h5>\n<pre><code>  ~ $ ssm-list\n  i-0a11abcd1ab0abc01   ip-10-0-0-75.ec2.internal    test-host1    10.0.0.75 \n  i-0a11abcd1ab0abc02   ip-10-0-0-114.ec2.internal   ssm-test      10.0.0.114\n  i-0a11abcd1ab0abc03   ip-10-0-0-55.ec2.internal    test-host2    10.0.0.55 \n  i-0a11abcd1ab0abc04   ip-10-0-00-112.ec2.internal  ssm-test2     10.0.0.112\n\n</code></pre>\n<h5>Return instances based on one or more instance tags, using awscli syntax:</h5>\n<pre><code>  ~ $ ssm-list --tags Name=tag:Name,Values=test-host1,ssm-test2\n  i-0a11abcd1ab0abc01   ip-10-0-0-75.ec2.internal    test-host1    10.0.0.75\n  i-0a11abcd1ab0abc04   ip-10-0-00-112.ec2.internal  ssm-test2     10.0.0.112\n</code></pre>\n<ul>\n<li>\n<h3>ssm-port-forward</h3>\n</li>\n</ul>\n<p>Simplifies the port forwarding process.  The following example would expose remote Postgres port 5432 to your localhost:12345.</p>\n<p>usage:</p>\n<pre><code>  ~ $ ssm-port-forward --target i-0a11abcd1ab0abc01:5432 --local 12345\n\n  Starting session with SessionId: session-07cb202eeca63c39d\n  Port 12345 opened for sessionId session-07cb202eeca63c39d.\n\n  ^CTerminate signal received, exiting.\n\n\n  Exiting session with sessionId: session-07cb202eeca63c39d.\n</code></pre>\n<h4>You can also double port forward (set up port forwarding on the remote host first)</h4>\n<p>This is useful in situations where you have a database like RDS that is not running SSM.  Behind the scenes the script will setup 2 tunnels.</p>\n<ol>\n<li>A tunnel from your machine -&gt; jumphost</li>\n<li>A tunnel from jumphost -&gt; RDS</li>\n</ol>\n<p>In order to create the second tunnel we create a temporary user and pem on the jump host.  When you CTRL+C and end the script the user is also removed.</p>\n<p>NOTE: In situations where internet is lost the temporary user can be left behind.  The user has a unique hash in the username in order to not conflict with regular OS users.</p>\n<p>usage:</p>\n<pre><code>\n  ~ $ ssm-port-forward --target i-0d14faab9db41ee57:3389 --local 12345 --remote i-0a11abcd1ab0abc01:111\n\n  Starting session with SessionId: user-0c702acdf8f164b7a\n  Port 12345 opened for sessionId user-0c702acdf8f164b7a.\n\n  ^CTerminate signal received, exiting.\n  Stopping remote SSH tunnel with Command ID 18bf6db1-7a2b-44bc-901a-ffc07c1868a1\n\n\n  Exiting session with sessionId: user-0c702acdf8f164b7a.\n</code></pre>\n<ul>\n<li>\n<h3>ssm-run</h3>\n</li>\n</ul>\n<p>Quickly run commands on multiple machines at once and see the output broken down by machine.</p>\n<p>usage:</p>\n<pre><code>  ~ $ ssm-run 10.0.0.114 10.0.0.55 --commands whoami hostname pwd \"sudo cat /etc/redhat-release\"\n  10.0.0.114 | i-0a11abcd1ab0abc01\n  root\n  ip-10-0-0-114.ec2.internal\n  /usr/bin\n  CentOS Linux release 7.7.1908 (Core)\n\n  10.0.0.55 | i-0a11abcd1ab0abc01\n  root\n  ip-10-0-0-55.ec2.internal\n  /usr/bin\n  CentOS Linux release 7.7.1908 (Core)\n\n</code></pre>\n<ul>\n<li>\n<h3>ssm-ssh</h3>\n</li>\n</ul>\n<p>Delivers the full functionality of SSH, but removes the requirement of using InstanceID's.  Connect to any machine by using the same results provided by ssm-list.</p>\n<p>usage:</p>\n<pre><code>  ~ $ ssm-ssh -i ~/.ssh/myuser.pem  myuser@10.0.0.114\n  Last login: Mon Feb 24 18:39:45 2020 from localhost\n\n  [myuser@ip-10-0-0-114 ~]$ exit\n  logout\n  Connection to i-0a11abcd1ab0abc01 closed.\n\n</code></pre>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 7111593, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e9e3c22ba2c08feef9f56622b52c5320", "sha256": "b7cc57ee4a641feb52071c96a90dee406da611388925a03afd4423a32fad6b31"}, "downloads": -1, "filename": "aws_systems_manager_toolkit-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e9e3c22ba2c08feef9f56622b52c5320", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 165003, "upload_time": "2020-02-25T23:19:35", "upload_time_iso_8601": "2020-02-25T23:19:35.185339Z", "url": "https://files.pythonhosted.org/packages/c3/7b/42d429341e3c207a5bb84a4bc5c41344cc2fe1cc04bae59cd958dc539f87/aws_systems_manager_toolkit-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3b36f13c3a542c38da77627c9a7db9e", "sha256": "e257bf5cd93211e0f7cf1b90a94744d10ca76c0fd4edf91d04bdea095255f4eb"}, "downloads": -1, "filename": "aws-systems-manager-toolkit-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c3b36f13c3a542c38da77627c9a7db9e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 10742, "upload_time": "2020-02-25T23:19:37", "upload_time_iso_8601": "2020-02-25T23:19:37.760771Z", "url": "https://files.pythonhosted.org/packages/a6/87/5134db57d18463d8ff5e6389f0c47f7bf521499b865b8b574270f523d2b2/aws-systems-manager-toolkit-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "66e4deccacbf07640afd965eb16642cb", "sha256": "2501af4f3364165a7646b95fd6676a5835f4576c0b28c2507f33e3658d79a399"}, "downloads": -1, "filename": "aws_systems_manager_toolkit-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "66e4deccacbf07640afd965eb16642cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 14475, "upload_time": "2020-04-21T12:36:53", "upload_time_iso_8601": "2020-04-21T12:36:53.539730Z", "url": "https://files.pythonhosted.org/packages/5a/e2/f650cbf1de85ffbb41bbf46d79d41b8402ae55ec6f57a417a2bd9efeb958/aws_systems_manager_toolkit-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bb6809c7721f7efd7fbb9dc669a04d4", "sha256": "e7865c4b2ee1172da5ec8f4ab98a393df8d45a570301f4ed2d6fecdd951895af"}, "downloads": -1, "filename": "aws-systems-manager-toolkit-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2bb6809c7721f7efd7fbb9dc669a04d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 11230, "upload_time": "2020-04-21T12:36:54", "upload_time_iso_8601": "2020-04-21T12:36:54.776555Z", "url": "https://files.pythonhosted.org/packages/4b/16/a317d718d7b9b6d859f4c9739a1b3235ea1b8d8689fbc069604eaf92572d/aws-systems-manager-toolkit-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "25f836e7001f92595cc611bd5f235b1c", "sha256": "575fa344867dbb9454d839844c3be7527d7b152cfa308afc481796c4a6e638ae"}, "downloads": -1, "filename": "aws_systems_manager_toolkit-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "25f836e7001f92595cc611bd5f235b1c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 25487, "upload_time": "2020-04-21T19:39:16", "upload_time_iso_8601": "2020-04-21T19:39:16.482881Z", "url": "https://files.pythonhosted.org/packages/1f/42/baad2cdc670827406ba47970f42888115a7d5703a1262e1de3e80f135cda/aws_systems_manager_toolkit-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ecaca6e09c8b1956308b9afdaca8c8b", "sha256": "8e14c3820bb1d616c5ae0a272b9f69b39212ada4f0cf5167caac9cd283987c6e"}, "downloads": -1, "filename": "aws-systems-manager-toolkit-0.0.3.tar.gz", "has_sig": false, "md5_digest": "7ecaca6e09c8b1956308b9afdaca8c8b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 11561, "upload_time": "2020-04-21T19:39:17", "upload_time_iso_8601": "2020-04-21T19:39:17.465764Z", "url": "https://files.pythonhosted.org/packages/74/77/9a37bd0400e2194627451906fc7923f06ff98e297dfc7cc1a08832958c2a/aws-systems-manager-toolkit-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "0d476842794ed19cb3062ad9665819c6", "sha256": "e15bc1c616773e742b103cf1b0d40932672ba05582f3b67a96d87dafb14ab23f"}, "downloads": -1, "filename": "aws_systems_manager_toolkit-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0d476842794ed19cb3062ad9665819c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 36376, "upload_time": "2020-04-27T13:05:57", "upload_time_iso_8601": "2020-04-27T13:05:57.334640Z", "url": "https://files.pythonhosted.org/packages/df/62/e35add585006eb71f2185fca122cc5140077422e34f1ee00225b5b428566/aws_systems_manager_toolkit-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "785c6cdd7035d90dfe497ca10365a6df", "sha256": "47b084e85b37d7ca743f93fad46f62393f8ecf3fcfa69db4e4df96b08c8b9743"}, "downloads": -1, "filename": "aws-systems-manager-toolkit-0.0.4.tar.gz", "has_sig": false, "md5_digest": "785c6cdd7035d90dfe497ca10365a6df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 11571, "upload_time": "2020-04-27T13:06:01", "upload_time_iso_8601": "2020-04-27T13:06:01.166707Z", "url": "https://files.pythonhosted.org/packages/d4/e8/7123080a083476a1194cd2bfe5839b280e397630c45da3a48838afe5efa3/aws-systems-manager-toolkit-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0d476842794ed19cb3062ad9665819c6", "sha256": "e15bc1c616773e742b103cf1b0d40932672ba05582f3b67a96d87dafb14ab23f"}, "downloads": -1, "filename": "aws_systems_manager_toolkit-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0d476842794ed19cb3062ad9665819c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 36376, "upload_time": "2020-04-27T13:05:57", "upload_time_iso_8601": "2020-04-27T13:05:57.334640Z", "url": "https://files.pythonhosted.org/packages/df/62/e35add585006eb71f2185fca122cc5140077422e34f1ee00225b5b428566/aws_systems_manager_toolkit-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "785c6cdd7035d90dfe497ca10365a6df", "sha256": "47b084e85b37d7ca743f93fad46f62393f8ecf3fcfa69db4e4df96b08c8b9743"}, "downloads": -1, "filename": "aws-systems-manager-toolkit-0.0.4.tar.gz", "has_sig": false, "md5_digest": "785c6cdd7035d90dfe497ca10365a6df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 11571, "upload_time": "2020-04-27T13:06:01", "upload_time_iso_8601": "2020-04-27T13:06:01.166707Z", "url": "https://files.pythonhosted.org/packages/d4/e8/7123080a083476a1194cd2bfe5839b280e397630c45da3a48838afe5efa3/aws-systems-manager-toolkit-0.0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:33 2020"}