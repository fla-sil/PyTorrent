{"info": {"author": "Clova AI Research, NAVER Corp., Ashish Jha", "author_email": "youngmin.baek@navercorp.com, arj7192@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## CRAFT: Character-Region Awareness For Text detection\nOfficial Pytorch implementation of CRAFT text detector | [Paper](https://arxiv.org/abs/1904.01941) | [Pretrained Model](https://drive.google.com/open?id=1Jk4eGD7crsqCCg9C9VjCLkMN3ze8kutZ) | [Supplementary](https://youtu.be/HI8MzpY8KMI)\n\n**[Youngmin Baek](mailto:youngmin.baek@navercorp.com), Bado Lee, Dongyoon Han, Sangdoo Yun, Hwalsuk Lee.**\n\nClova AI Research, NAVER Corp.\n\n**Packaged by [Ashish Jha](mailto:arj7192@gmail.com)**\n\n### Sample Results\n\n### Overview\nPyTorch implementation for CRAFT text detector that effectively detect text area by exploring each character region and affinity between characters. The bounding box of texts are obtained by simply finding minimum bounding rectangles on binary map after thresholding character region and affinity scores. \n\n<img width=\"1000\" alt=\"teaser\" src=\"./figures/craft_example.gif\">\n\n## Updates\n**13 Jun, 2019**: Initial update\n**20 Jul, 2019**: Added post-processing for polygon result\n**28 Sep, 2019**: Added the trained model on IC15 and the link refiner\n**25 Jan, 2020**: Put it together as a PyPI package\n\n\n## Getting started\n\n### Use it straight from PyPI\n#### Installation\n```\npip install craft-text-detection\n```\n#### Usage\n```\nimport craft\nimport cv2\nimg = cv2.imread('/path/to/image/file')\n\n# run the detector\nbboxes, polys, heatmap = craft.detect_text(img)\n\n# view the image with bounding boxes\nimg_boxed = craft.show_bounding_boxes(img, bboxes)\ncv2.imshow('fig', img_boxed)\n\n# view detection heatmap\ncv2.imshow('fig', heatmap)\n```\n\n### Use from source - install dependencies\n#### Requirements\n- PyTorch>=0.4.1\n- torchvision>=0.2.1\n- opencv-python>=3.4.2\n- check requiremetns.txt\n```\npip install -r requirements.txt\n```\n\n### Training\nThe code for training is not included in this repository, and we cannot release the full training code for IP reason.\n\n\n### Arguments for detect_text\n* `--text_threshold`: text confidence threshold\n* `--low_text`: text low-bound score\n* `--link_threshold`: link confidence threshold\n* `--canvas_size`: max image size for inference\n* `--mag_ratio`: image magnification ratio\n* `--refine`: use link refiner for sentence-level dataset\n* `--refiner_model`: pretrained refiner model\n\n\n## Links\n- WebDemo : https://demo.ocr.clova.ai/\n- Repo of recognition : https://github.com/clovaai/deep-text-recognition-benchmark\n\n## Citation\n```\n@inproceedings{baek2019character,\n  title={Character Region Awareness for Text Detection},\n  author={Baek, Youngmin and Lee, Bado and Han, Dongyoon and Yun, Sangdoo and Lee, Hwalsuk},\n  booktitle={Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},\n  pages={9365--9374},\n  year={2019}\n}\n```\n\n## License\n```\nCopyright (c) 2019-present NAVER Corp.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arj7192/CRAFT-pytorch", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "craft-text-detection", "package_url": "https://pypi.org/project/craft-text-detection/", "platform": "", "project_url": "https://pypi.org/project/craft-text-detection/", "project_urls": {"Homepage": "https://github.com/arj7192/CRAFT-pytorch"}, "release_url": "https://pypi.org/project/craft-text-detection/0.0.2/", "requires_dist": ["torch (==0.4.1)", "torchvision (==0.2.1)", "opencv-python (==3.4.2.17)", "scikit-image (==0.14.2)", "scipy (==1.1.0)", "pillow (==6.2.0)", "requests (==2.22.0)"], "requires_python": ">=3.6", "summary": "Official implementation of Character Region Awareness for Text Detection (CRAFT)", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>CRAFT: Character-Region Awareness For Text detection</h2>\n<p>Official Pytorch implementation of CRAFT text detector | <a href=\"https://arxiv.org/abs/1904.01941\" rel=\"nofollow\">Paper</a> | <a href=\"https://drive.google.com/open?id=1Jk4eGD7crsqCCg9C9VjCLkMN3ze8kutZ\" rel=\"nofollow\">Pretrained Model</a> | <a href=\"https://youtu.be/HI8MzpY8KMI\" rel=\"nofollow\">Supplementary</a></p>\n<p><strong><a href=\"mailto:youngmin.baek@navercorp.com\">Youngmin Baek</a>, Bado Lee, Dongyoon Han, Sangdoo Yun, Hwalsuk Lee.</strong></p>\n<p>Clova AI Research, NAVER Corp.</p>\n<p><strong>Packaged by <a href=\"mailto:arj7192@gmail.com\">Ashish Jha</a></strong></p>\n<h3>Sample Results</h3>\n<h3>Overview</h3>\n<p>PyTorch implementation for CRAFT text detector that effectively detect text area by exploring each character region and affinity between characters. The bounding box of texts are obtained by simply finding minimum bounding rectangles on binary map after thresholding character region and affinity scores.</p>\n<img alt=\"teaser\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d85325ea8c752b18f45629811ecf372ba80c210/2e2f666967757265732f63726166745f6578616d706c652e676966\" width=\"1000\">\n<h2>Updates</h2>\n<p><strong>13 Jun, 2019</strong>: Initial update\n<strong>20 Jul, 2019</strong>: Added post-processing for polygon result\n<strong>28 Sep, 2019</strong>: Added the trained model on IC15 and the link refiner\n<strong>25 Jan, 2020</strong>: Put it together as a PyPI package</p>\n<h2>Getting started</h2>\n<h3>Use it straight from PyPI</h3>\n<h4>Installation</h4>\n<pre><code>pip install craft-text-detection\n</code></pre>\n<h4>Usage</h4>\n<pre><code>import craft\nimport cv2\nimg = cv2.imread('/path/to/image/file')\n\n# run the detector\nbboxes, polys, heatmap = craft.detect_text(img)\n\n# view the image with bounding boxes\nimg_boxed = craft.show_bounding_boxes(img, bboxes)\ncv2.imshow('fig', img_boxed)\n\n# view detection heatmap\ncv2.imshow('fig', heatmap)\n</code></pre>\n<h3>Use from source - install dependencies</h3>\n<h4>Requirements</h4>\n<ul>\n<li>PyTorch&gt;=0.4.1</li>\n<li>torchvision&gt;=0.2.1</li>\n<li>opencv-python&gt;=3.4.2</li>\n<li>check requiremetns.txt</li>\n</ul>\n<pre><code>pip install -r requirements.txt\n</code></pre>\n<h3>Training</h3>\n<p>The code for training is not included in this repository, and we cannot release the full training code for IP reason.</p>\n<h3>Arguments for detect_text</h3>\n<ul>\n<li><code>--text_threshold</code>: text confidence threshold</li>\n<li><code>--low_text</code>: text low-bound score</li>\n<li><code>--link_threshold</code>: link confidence threshold</li>\n<li><code>--canvas_size</code>: max image size for inference</li>\n<li><code>--mag_ratio</code>: image magnification ratio</li>\n<li><code>--refine</code>: use link refiner for sentence-level dataset</li>\n<li><code>--refiner_model</code>: pretrained refiner model</li>\n</ul>\n<h2>Links</h2>\n<ul>\n<li>WebDemo : <a href=\"https://demo.ocr.clova.ai/\" rel=\"nofollow\">https://demo.ocr.clova.ai/</a></li>\n<li>Repo of recognition : <a href=\"https://github.com/clovaai/deep-text-recognition-benchmark\" rel=\"nofollow\">https://github.com/clovaai/deep-text-recognition-benchmark</a></li>\n</ul>\n<h2>Citation</h2>\n<pre><code>@inproceedings{baek2019character,\n  title={Character Region Awareness for Text Detection},\n  author={Baek, Youngmin and Lee, Bado and Han, Dongyoon and Yun, Sangdoo and Lee, Hwalsuk},\n  booktitle={Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},\n  pages={9365--9374},\n  year={2019}\n}\n</code></pre>\n<h2>License</h2>\n<pre><code>Copyright (c) 2019-present NAVER Corp.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n</code></pre>\n\n          </div>"}, "last_serial": 6525998, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6c05f9f8243300ee154cf95d942f9ba3", "sha256": "13edff8b1102cd9d8109119eb761ca0e94dd9ccdbac536dcdc62f4898dfd9567"}, "downloads": -1, "filename": "craft_text_detection-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6c05f9f8243300ee154cf95d942f9ba3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18521, "upload_time": "2020-01-25T20:45:04", "upload_time_iso_8601": "2020-01-25T20:45:04.671875Z", "url": "https://files.pythonhosted.org/packages/f0/55/32fc0c4a3641d4f446c0bf15bbf7638b0698a80ab81e73d10520337f43db/craft_text_detection-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "140c8be90f50de06a720efc851befe06", "sha256": "b53622f4713d31986e8546681c9a1a4f85762037d0b5a3f2b82e9d4c1229378d"}, "downloads": -1, "filename": "craft-text-detection-0.0.1.tar.gz", "has_sig": false, "md5_digest": "140c8be90f50de06a720efc851befe06", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14497, "upload_time": "2020-01-25T20:45:06", "upload_time_iso_8601": "2020-01-25T20:45:06.983420Z", "url": "https://files.pythonhosted.org/packages/67/15/03934d004840f15fd54121a540838475be8e08fe77f2e0e475537a9dae5b/craft-text-detection-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "5889cab45859329923831ae9024a0707", "sha256": "fe5f5242b17329ec5d6114ab4462790d457b0fe2532f8d35c2d6245249ab74ef"}, "downloads": -1, "filename": "craft_text_detection-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5889cab45859329923831ae9024a0707", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18531, "upload_time": "2020-01-27T11:54:19", "upload_time_iso_8601": "2020-01-27T11:54:19.142069Z", "url": "https://files.pythonhosted.org/packages/2b/6f/dcb39222649f50d5125225a531b3eb58306c01537209035ccb0c91b64848/craft_text_detection-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6feb90ef5ff43ab5825dd4f2a8a4e09", "sha256": "d8dfc6fdc56666e4590584f78f06baa860e2ca3f259e30353c58be5356152044"}, "downloads": -1, "filename": "craft-text-detection-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f6feb90ef5ff43ab5825dd4f2a8a4e09", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14509, "upload_time": "2020-01-27T11:54:20", "upload_time_iso_8601": "2020-01-27T11:54:20.685925Z", "url": "https://files.pythonhosted.org/packages/3f/c6/572d57838373bca00939a6abfdbbddffc16fefb68f6d1084b8001bc87bec/craft-text-detection-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5889cab45859329923831ae9024a0707", "sha256": "fe5f5242b17329ec5d6114ab4462790d457b0fe2532f8d35c2d6245249ab74ef"}, "downloads": -1, "filename": "craft_text_detection-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5889cab45859329923831ae9024a0707", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18531, "upload_time": "2020-01-27T11:54:19", "upload_time_iso_8601": "2020-01-27T11:54:19.142069Z", "url": "https://files.pythonhosted.org/packages/2b/6f/dcb39222649f50d5125225a531b3eb58306c01537209035ccb0c91b64848/craft_text_detection-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6feb90ef5ff43ab5825dd4f2a8a4e09", "sha256": "d8dfc6fdc56666e4590584f78f06baa860e2ca3f259e30353c58be5356152044"}, "downloads": -1, "filename": "craft-text-detection-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f6feb90ef5ff43ab5825dd4f2a8a4e09", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14509, "upload_time": "2020-01-27T11:54:20", "upload_time_iso_8601": "2020-01-27T11:54:20.685925Z", "url": "https://files.pythonhosted.org/packages/3f/c6/572d57838373bca00939a6abfdbbddffc16fefb68f6d1084b8001bc87bec/craft-text-detection-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:29 2020"}