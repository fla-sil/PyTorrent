{"info": {"author": "Alberto Donato", "author_email": "alberto.donato@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: AsyncIO", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Database", "Topic :: System :: Monitoring", "Topic :: Utilities"], "description": "|query-exporter logo|\n\nExport Prometheus metrics from SQL queries\n==========================================\n\n|Latest Version| |Build Status| |Coverage Status| |Snap Status| |Docker Pulls|\n\n``query-exporter`` is a Prometheus_ exporter which allows collecting metrics\nfrom database queries, at specified time intervals.\n\nIt uses SQLAlchemy_ to connect to different database engines, including\nPostgreSQL, MySQL, Oracle and Microsoft SQL Server.\n\nEach query can be run on multiple databases, and update multiple metrics.\n\nThe application is simply run as::\n\n  query-exporter config.yaml\n\nwhere the passed configuration file contains the definitions of the databases\nto connect and queries to perform to update metrics.\n\n\nConfiguration file format\n-------------------------\n\nA sample configuration file for the application looks like this:\n\n.. code:: yaml\n\n    databases:\n      db1:\n        dsn: sqlite://\n        connect-sql:\n          - PRAGMA application_id = 123\n          - PRAGMA auto_vacuum = 1\n        labels:\n          region: us1\n          app: app1\n      db2:\n        dsn: sqlite://\n        keep-connected: false\n        labels:\n          region: us2\n          app: app1\n\n    metrics:\n      metric1:\n        type: gauge\n        description: A sample gauge\n      metric2:\n        type: summary\n        description: A sample summary\n        labels: [l1, l2]\n      metric3:\n        type: histogram\n        description: A sample histogram\n        buckets: [10, 20, 50, 100, 1000]\n      metric4:\n        type: enum\n        description: A sample enum\n        states: [foo, bar, baz]\n\n    queries:\n      query1:\n        interval: 5\n        databases: [db1]\n        metrics: [metric1]\n        sql: SELECT random() / 1000000000000000 AS metric1\n      query2:\n        interval: 20\n        databases: [db1, db2]\n        metrics: [metric2, metric3]\n        sql: |\n          SELECT abs(random() / 1000000000000000) AS metric2,\n                 abs(random() / 10000000000000000) AS metric3,\n                 \"value1\" AS l1,\n                 \"value2\" AS l2\n      query3:\n        interval: 10\n        databases: [db2]\n        metrics: [metric4]\n        sql: |\n          SELECT value FROM (\n            SELECT \"foo\" AS metric4 UNION\n            SELECT \"bar\" AS metric3 UNION\n            SELECT \"baz\" AS metric4\n          )\n          ORDER BY random()\n          LIMIT 1\n\n``databases`` section\n~~~~~~~~~~~~~~~~~~~~~\n\nThis section contains defintions for databases to connect to. Key names are\narbitrary and only used to reference databases in the ``queries`` section.\n\nEach database defintions can have the following keys:\n\n``dsn``:\n  the connection string for the database, in the following format::\n\n    dialect[+driver]://[username:password][@host:port]/database[?option=value&...]\n\n  See `SQLAlchemy documentation`_ for details on available engines.\n\n  It's also possible to get the connection string from an environment variable\n  (e.g. ``$CONNECTION_STRING``) by setting ``dsn`` to::\n\n    env:CONNECTION_STRING\n\n``connect-sql``:\n  An optional list of queries to run right after database connection. This can\n  be used to set up connection-wise parameters and configurations.\n\n``keep-connected``:\n  whether to keep the connection open for the database between queries, or\n  disconnect after each one. If not specified, defaults to ``true``.  Setting\n  this option to ``false`` might be useful if queries on a database are run\n  with very long interval, to avoid holding idle connections.\n\n``labels``:\n  an optional mapping of label names and values to tag metrics collected from each database.\n  When labels are used, all databases must define the same set of labels.\n\n``metrics`` section\n~~~~~~~~~~~~~~~~~~~\n\nThis section contains Prometheus_ metrics definitions. Keys are used as metric\nnames, and must therefore be valid metric identifiers.\n\nEach metric definition can have the following keys:\n\n``type``:\n  the type of the metric, must be specified. The following metric types are\n  supported:\n\n  - counter\n  - enum\n  - gauge\n  - histogram\n  - summary\n\n``description``:\n  an optional description of the metric.\n\n``labels``:\n  an optional list of label names to apply to the metric.\n\n  If specified, queries updating the metric must return rows that include\n  values for each label in addition to the metric value.  Column names must\n  match metric and labels names.\n\n``buckets``:\n  for ``histogram`` metrics, a list of buckets for the metrics.\n\n  If not specified, default buckets are applied.\n\n``states``:\n  for ``enum`` metrics, a list of string values for possible states.\n\n  Queries for updating the enum must return valid states.\n\n``queries`` section\n~~~~~~~~~~~~~~~~~~~\n\nThis section contains definitions for queries to perform. Key names are\narbitrary and only used to identify queries in logs.\n\nEach query definition can have the following keys:la-\n\n``databases``:\n  the list of databases to run the query on.\n\n  Names must match those defined in the ``databases`` section.\n\n  Metrics are automatically tagged with the ``database`` label so that\n  indipendent series are generated for each database that a query is run on.\n\n``interval``:\n  the time interval at which the query is run.\n\n  The value is interpreted as seconds if no suffix is specified; valid suffixes\n  are ``s``, ``m``, ``h``, ``d``. Only integer values are accepted.\n\n  If no value is specified (or specified as ``null``), the query is only\n  executed upon HTTP requests.\n\n``metrics``:\n  the list of metrics that the query updates.\n\n  Names must match those defined in the ``metrics`` section.\n\n``parameters``:\n  an optional list of parameters sets to run the query with.\n\n  If a query is specified with parameters in its ``sql``, it will be run once\n  for every set of parameters specified in this list, for every interval.\n\n  Each parameter set must be a dictionary where keys must match parameters\n  names from the query SQL (e.g. ``:param``).\n\n  As an example:\n\n  .. code:: yaml\n\n      query:\n        databases: [db]\n        metrics: [metric]\n        sql: |\n          SELECT COUNT(*) AS metric FROM table\n          WHERE id > :param1 AND id < :param2\n        parameters:\n          - param1: 10\n            param2: 20\n          - param1: 30\n            param2: 40\n\n``sql``:\n  the SQL text of the query.\n\n  The query must return columns with names that match those of the metrics\n  defined in ``metrics``, plus those of labels (if any) for all these metrics.\n\n  .. code:: yaml\n\n      query:\n        databases: [db]\n        metrics: [metric1, metric2]\n        sql: SELECT 10.0 AS metric1, 20.0 AS metric2\n\n  will update ``metric1`` to ``10.0`` and ``metric2`` to ``20.0``.\n\n  **Note**:\n   since ``:`` is used for parameter markers (see ``parameters`` above),\n   literal single ``:`` at the beginning of a word must be escaped with\n   backslash (e.g. ``SELECT '\\:bar' FROM table``).  There's no need to escape\n   when the colon occurs inside a word (e.g. ``SELECT 'foo:bar' FROM table``).\n\n\nMetrics endpoint\n----------------\n\nThe exporter uses port ``9560`` by default for exposting metrics, under the\nstandard ``/metrics`` endpoint.\n\nFor the configuration above, the endpoint would return something like this::\n\n  # HELP database_errors_total Number of database errors\n  # TYPE database_errors_total counter\n  # HELP queries_total Number of database queries\n  # TYPE queries_total counter\n  queries_total{database=\"db2\",status=\"success\"} 2.0\n  queries_total{database=\"db1\",status=\"success\"} 3.0\n  # TYPE queries_created gauge\n  queries_created{database=\"db2\",status=\"success\"} 1.558334663380845e+09\n  queries_created{database=\"db1\",status=\"success\"} 1.558334663381175e+09\n  # HELP metric1 A sample gauge\n  # TYPE metric1 gauge\n  metric1{database=\"db1\"} 2580.0\n  # HELP metric2 A sample summary\n  # TYPE metric2 summary\n  metric2_count{database=\"db2\",l1=\"value1\",l2=\"value2\"} 1.0\n  metric2_sum{database=\"db2\",l1=\"value1\",l2=\"value2\"} 6476.0\n  metric2_count{database=\"db1\",l1=\"value1\",l2=\"value2\"} 1.0\n  metric2_sum{database=\"db1\",l1=\"value1\",l2=\"value2\"} 2340.0\n  # TYPE metric2_created gauge\n  metric2_created{database=\"db2\",l1=\"value1\",l2=\"value2\"} 1.5583346633805697e+09\n  metric2_created{database=\"db1\",l1=\"value1\",l2=\"value2\"} 1.5583346633816812e+09\n  # HELP metric3 A sample histogram\n  # TYPE metric3 histogram\n  metric3_bucket{database=\"db2\",le=\"10.0\"} 0.0\n  metric3_bucket{database=\"db2\",le=\"20.0\"} 0.0\n  metric3_bucket{database=\"db2\",le=\"50.0\"} 0.0\n  metric3_bucket{database=\"db2\",le=\"100.0\"} 0.0\n  metric3_bucket{database=\"db2\",le=\"1000.0\"} 1.0\n  metric3_bucket{database=\"db2\",le=\"+Inf\"} 1.0\n  metric3_count{database=\"db2\"} 1.0\n  metric3_sum{database=\"db2\"} 135.0\n  metric3_bucket{database=\"db1\",le=\"10.0\"} 0.0\n  metric3_bucket{database=\"db1\",le=\"20.0\"} 0.0\n  metric3_bucket{database=\"db1\",le=\"50.0\"} 0.0\n  metric3_bucket{database=\"db1\",le=\"100.0\"} 0.0\n  metric3_bucket{database=\"db1\",le=\"1000.0\"} 1.0\n  metric3_bucket{database=\"db1\",le=\"+Inf\"} 1.0\n  metric3_count{database=\"db1\"} 1.0\n  metric3_sum{database=\"db1\"} 164.0\n  # TYPE metric3_created gauge\n  metric3_created{database=\"db2\"} 1.5583346633807e+09\n  metric3_created{database=\"db1\"} 1.558334663381795e+09\n  # HELP metric4 A sample enum\n  # TYPE metric4 gauge\n  metric4{database=\"db2\",metric4=\"foo\"} 0.0\n  metric4{database=\"db2\",metric4=\"bar\"} 0.0\n  metric4{database=\"db2\",metric4=\"baz\"} 1.0\n\n\nDatabase engines\n----------------\n\nSQLAlchemy_ doesn't depend on specific Python database modules at\ninstallation. This means additional modules might need to be installed for\nengines in use. These can be installed as follows::\n\n  pip install SQLAlchemy[postgresql] SQLAlchemy[mysql] ...\n\nbased on which database engines are needed.\n\nSee `supported databases`_ for details.\n\n\nInstall from Snap\n-----------------\n\n|Get it from the Snap Store|\n\n``query-exporter`` can be installed from `Snap Store`_ on systems where Snaps\nare supported, via::\n\n  sudo snap install query-exporter\n\nThe snap provides both the ``query-exporter`` command and a deamon instance of\nthe command, managed via a Systemd service.\n\nTo configure the daemon:\n\n- create or edit ``/var/snap/query-exporter/current/config.yaml`` with the\n  configuration\n- run ``sudo snap restart query-exporter``\n\nThe snap has support for connecting the following databases:\n\n- PostgreSQL (``postgresql://``)\n- MySQL (``mysql://``)\n- SQLite (``sqlite://``)\n- Microsoft SQL Server (``mssql+pyodbc://``)\n- IBM DB2 (``db2+ibm_db://``)\n\n\nRun in Docker\n-------------\n\n``query-exporter`` can be run inside Docker_ containers, and is availble from the `Docker Hub`_::\n\n  docker run -p 9560:9560/tcp -v \"$PWD/config.yaml:/config.yaml\" --rm -it \\\n      adonato/query-exporter:latest -- /config.yaml\n\nThe image has support for connecting the following databases:\n\n- PostgreSQL (``postgresql://``)\n- MySQL (``mysql://``)\n- SQLite (``sqlite://``)\n- Microsoft SQL Server (``mssql+pyodbc://``)\n- IBM DB2 (``db2+ibm_db://``)\n\n\n.. _Prometheus: https://prometheus.io/\n.. _SQLAlchemy: https://www.sqlalchemy.org/\n.. _`SQLAlchemy documentation`:\n   http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls\n.. _`supported databases`:\n   http://docs.sqlalchemy.org/en/latest/core/engines.html#supported-databases\n.. _`Snap Store`: https://snapcraft.io\n.. _Docker: http://docker.com/\n.. _`Docker Hub`: https://hub.docker.com/r/adonato/query-exporter\n\n.. |query-exporter logo| image:: ./logo.svg\n   :alt: query-exporter logo\n.. |Latest Version| image:: https://img.shields.io/pypi/v/query-exporter.svg\n   :alt: Latest Version\n   :target: https://pypi.python.org/pypi/query-exporter\n.. |Build Status| image:: https://img.shields.io/travis/albertodonato/query-exporter.svg\n   :alt: Build Status\n   :target: https://travis-ci.com/albertodonato/query-exporter\n.. |Coverage Status| image:: https://img.shields.io/codecov/c/github/albertodonato/query-exporter/master.svg\n   :alt: Coverage Status\n   :target: https://codecov.io/gh/albertodonato/query-exporter\n.. |Snap Status| image:: https://build.snapcraft.io/badge/albertodonato/query-exporter.svg\n   :alt: Snap Status\n   :target: https://build.snapcraft.io/user/albertodonato/query-exporter\n.. |Get it from the Snap Store| image:: https://snapcraft.io/static/images/badges/en/snap-store-black.svg\n   :alt: Get it from the Snap Store\n   :target: https://snapcraft.io/query-exporter\n.. |Docker Pulls| image:: https://img.shields.io/docker/pulls/adonato/query-exporter\n   :alt: Docker Pulls\n   :target: https://hub.docker.com/r/adonato/query-exporter", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/albertodonato/query-exporter", "keywords": "sql,metric,prometheus,exporter", "license": "GPLv3+", "maintainer": "Alberto Donato", "maintainer_email": "alberto.donato@gmail.com", "name": "query-exporter", "package_url": "https://pypi.org/project/query-exporter/", "platform": "", "project_url": "https://pypi.org/project/query-exporter/", "project_urls": {"Homepage": "https://github.com/albertodonato/query-exporter"}, "release_url": "https://pypi.org/project/query-exporter/2.2.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Export Prometheus metrics generated from SQL queries", "version": "2.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"query-exporter logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d8a3a848a79743708a682608f3cd48c4f6209f75/2e2f6c6f676f2e737667\"></p>\n<div id=\"export-prometheus-metrics-from-sql-queries\">\n<h2>Export Prometheus metrics from SQL queries</h2>\n<p><a href=\"https://pypi.python.org/pypi/query-exporter\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5665d129f71f7860e676e79ecb74e4358ce9dc60/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f71756572792d6578706f727465722e737667\"></a> <a href=\"https://travis-ci.com/albertodonato/query-exporter\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1573373dea8364743f9d5a7f3648da29d0b7e7a3/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f616c626572746f646f6e61746f2f71756572792d6578706f727465722e737667\"></a> <a href=\"https://codecov.io/gh/albertodonato/query-exporter\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb287686fd6819d9ab1ee6551d2436e2faa624de/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f616c626572746f646f6e61746f2f71756572792d6578706f727465722f6d61737465722e737667\"></a> <a href=\"https://build.snapcraft.io/user/albertodonato/query-exporter\" rel=\"nofollow\"><img alt=\"Snap Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/22d5dda5f1f7e334e360a62ecd0e3179ebca1637/68747470733a2f2f6275696c642e736e617063726166742e696f2f62616467652f616c626572746f646f6e61746f2f71756572792d6578706f727465722e737667\"></a> <a href=\"https://hub.docker.com/r/adonato/query-exporter\" rel=\"nofollow\"><img alt=\"Docker Pulls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0cb5a46deb5acd4ade29451c880905dd84efccb/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f61646f6e61746f2f71756572792d6578706f72746572\"></a></p>\n<p><tt><span class=\"pre\">query-exporter</span></tt> is a <a href=\"https://prometheus.io/\" rel=\"nofollow\">Prometheus</a> exporter which allows collecting metrics\nfrom database queries, at specified time intervals.</p>\n<p>It uses <a href=\"https://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a> to connect to different database engines, including\nPostgreSQL, MySQL, Oracle and Microsoft SQL Server.</p>\n<p>Each query can be run on multiple databases, and update multiple metrics.</p>\n<p>The application is simply run as:</p>\n<pre>query-exporter config.yaml\n</pre>\n<p>where the passed configuration file contains the definitions of the databases\nto connect and queries to perform to update metrics.</p>\n<div id=\"configuration-file-format\">\n<h3>Configuration file format</h3>\n<p>A sample configuration file for the application looks like this:</p>\n<pre><span class=\"nt\">databases</span><span class=\"p\">:</span>\n  <span class=\"nt\">db1</span><span class=\"p\">:</span>\n    <span class=\"nt\">dsn</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">sqlite://</span>\n    <span class=\"nt\">connect-sql</span><span class=\"p\">:</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">PRAGMA application_id = 123</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">PRAGMA auto_vacuum = 1</span>\n    <span class=\"nt\">labels</span><span class=\"p\">:</span>\n      <span class=\"nt\">region</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">us1</span>\n      <span class=\"nt\">app</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">app1</span>\n  <span class=\"nt\">db2</span><span class=\"p\">:</span>\n    <span class=\"nt\">dsn</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">sqlite://</span>\n    <span class=\"nt\">keep-connected</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">false</span>\n    <span class=\"nt\">labels</span><span class=\"p\">:</span>\n      <span class=\"nt\">region</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">us2</span>\n      <span class=\"nt\">app</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">app1</span>\n\n<span class=\"nt\">metrics</span><span class=\"p\">:</span>\n  <span class=\"nt\">metric1</span><span class=\"p\">:</span>\n    <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">gauge</span>\n    <span class=\"nt\">description</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">A sample gauge</span>\n  <span class=\"nt\">metric2</span><span class=\"p\">:</span>\n    <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">summary</span>\n    <span class=\"nt\">description</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">A sample summary</span>\n    <span class=\"nt\">labels</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">l1</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">l2</span><span class=\"p-Indicator\">]</span>\n  <span class=\"nt\">metric3</span><span class=\"p\">:</span>\n    <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">histogram</span>\n    <span class=\"nt\">description</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">A sample histogram</span>\n    <span class=\"nt\">buckets</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">10</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">20</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">50</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">100</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">1000</span><span class=\"p-Indicator\">]</span>\n  <span class=\"nt\">metric4</span><span class=\"p\">:</span>\n    <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">enum</span>\n    <span class=\"nt\">description</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">A sample enum</span>\n    <span class=\"nt\">states</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">foo</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">bar</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">baz</span><span class=\"p-Indicator\">]</span>\n\n<span class=\"nt\">queries</span><span class=\"p\">:</span>\n  <span class=\"nt\">query1</span><span class=\"p\">:</span>\n    <span class=\"nt\">interval</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">5</span>\n    <span class=\"nt\">databases</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">db1</span><span class=\"p-Indicator\">]</span>\n    <span class=\"nt\">metrics</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">metric1</span><span class=\"p-Indicator\">]</span>\n    <span class=\"nt\">sql</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">SELECT random() / 1000000000000000 AS metric1</span>\n  <span class=\"nt\">query2</span><span class=\"p\">:</span>\n    <span class=\"nt\">interval</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">20</span>\n    <span class=\"nt\">databases</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">db1</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">db2</span><span class=\"p-Indicator\">]</span>\n    <span class=\"nt\">metrics</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">metric2</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">metric3</span><span class=\"p-Indicator\">]</span>\n    <span class=\"nt\">sql</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n      <span class=\"no\">SELECT abs(random() / 1000000000000000) AS metric2,</span>\n             <span class=\"no\">abs(random() / 10000000000000000) AS metric3,</span>\n             <span class=\"no\">\"value1\" AS l1,</span>\n             <span class=\"no\">\"value2\" AS l2</span>\n  <span class=\"nt\">query3</span><span class=\"p\">:</span>\n    <span class=\"nt\">interval</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">10</span>\n    <span class=\"nt\">databases</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">db2</span><span class=\"p-Indicator\">]</span>\n    <span class=\"nt\">metrics</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">metric4</span><span class=\"p-Indicator\">]</span>\n    <span class=\"nt\">sql</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n      <span class=\"no\">SELECT value FROM (</span>\n        <span class=\"no\">SELECT \"foo\" AS metric4 UNION</span>\n        <span class=\"no\">SELECT \"bar\" AS metric3 UNION</span>\n        <span class=\"no\">SELECT \"baz\" AS metric4</span>\n      <span class=\"no\">)</span>\n      <span class=\"no\">ORDER BY random()</span>\n      <span class=\"no\">LIMIT 1</span>\n</pre>\n<div id=\"databases-section\">\n<h4><tt>databases</tt> section</h4>\n<p>This section contains defintions for databases to connect to. Key names are\narbitrary and only used to reference databases in the <tt>queries</tt> section.</p>\n<p>Each database defintions can have the following keys:</p>\n<dl>\n<dt><tt>dsn</tt>:</dt>\n<dd><p>the connection string for the database, in the following format:</p>\n<pre>dialect[+driver]://[username:password][@host:port]/database[?option=value&amp;...]\n</pre>\n<p>See <a href=\"http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls\" rel=\"nofollow\">SQLAlchemy documentation</a> for details on available engines.</p>\n<p>It\u2019s also possible to get the connection string from an environment variable\n(e.g. <tt>$CONNECTION_STRING</tt>) by setting <tt>dsn</tt> to:</p>\n<pre>env:CONNECTION_STRING\n</pre>\n</dd>\n<dt><tt><span class=\"pre\">connect-sql</span></tt>:</dt>\n<dd>An optional list of queries to run right after database connection. This can\nbe used to set up connection-wise parameters and configurations.</dd>\n<dt><tt><span class=\"pre\">keep-connected</span></tt>:</dt>\n<dd>whether to keep the connection open for the database between queries, or\ndisconnect after each one. If not specified, defaults to <tt>true</tt>.  Setting\nthis option to <tt>false</tt> might be useful if queries on a database are run\nwith very long interval, to avoid holding idle connections.</dd>\n<dt><tt>labels</tt>:</dt>\n<dd>an optional mapping of label names and values to tag metrics collected from each database.\nWhen labels are used, all databases must define the same set of labels.</dd>\n</dl>\n</div>\n<div id=\"metrics-section\">\n<h4><tt>metrics</tt> section</h4>\n<p>This section contains <a href=\"https://prometheus.io/\" rel=\"nofollow\">Prometheus</a> metrics definitions. Keys are used as metric\nnames, and must therefore be valid metric identifiers.</p>\n<p>Each metric definition can have the following keys:</p>\n<dl>\n<dt><tt>type</tt>:</dt>\n<dd><p>the type of the metric, must be specified. The following metric types are\nsupported:</p>\n<ul>\n<li>counter</li>\n<li>enum</li>\n<li>gauge</li>\n<li>histogram</li>\n<li>summary</li>\n</ul>\n</dd>\n<dt><tt>description</tt>:</dt>\n<dd>an optional description of the metric.</dd>\n<dt><tt>labels</tt>:</dt>\n<dd><p>an optional list of label names to apply to the metric.</p>\n<p>If specified, queries updating the metric must return rows that include\nvalues for each label in addition to the metric value.  Column names must\nmatch metric and labels names.</p>\n</dd>\n<dt><tt>buckets</tt>:</dt>\n<dd><p>for <tt>histogram</tt> metrics, a list of buckets for the metrics.</p>\n<p>If not specified, default buckets are applied.</p>\n</dd>\n<dt><tt>states</tt>:</dt>\n<dd><p>for <tt>enum</tt> metrics, a list of string values for possible states.</p>\n<p>Queries for updating the enum must return valid states.</p>\n</dd>\n</dl>\n</div>\n<div id=\"queries-section\">\n<h4><tt>queries</tt> section</h4>\n<p>This section contains definitions for queries to perform. Key names are\narbitrary and only used to identify queries in logs.</p>\n<p>Each query definition can have the following keys:la-</p>\n<dl>\n<dt><tt>databases</tt>:</dt>\n<dd><p>the list of databases to run the query on.</p>\n<p>Names must match those defined in the <tt>databases</tt> section.</p>\n<p>Metrics are automatically tagged with the <tt>database</tt> label so that\nindipendent series are generated for each database that a query is run on.</p>\n</dd>\n<dt><tt>interval</tt>:</dt>\n<dd><p>the time interval at which the query is run.</p>\n<p>The value is interpreted as seconds if no suffix is specified; valid suffixes\nare <tt>s</tt>, <tt>m</tt>, <tt>h</tt>, <tt>d</tt>. Only integer values are accepted.</p>\n<p>If no value is specified (or specified as <tt>null</tt>), the query is only\nexecuted upon HTTP requests.</p>\n</dd>\n<dt><tt>metrics</tt>:</dt>\n<dd><p>the list of metrics that the query updates.</p>\n<p>Names must match those defined in the <tt>metrics</tt> section.</p>\n</dd>\n<dt><tt>parameters</tt>:</dt>\n<dd><p>an optional list of parameters sets to run the query with.</p>\n<p>If a query is specified with parameters in its <tt>sql</tt>, it will be run once\nfor every set of parameters specified in this list, for every interval.</p>\n<p>Each parameter set must be a dictionary where keys must match parameters\nnames from the query SQL (e.g. <tt>:param</tt>).</p>\n<p>As an example:</p>\n<pre><span class=\"nt\">query</span><span class=\"p\">:</span>\n  <span class=\"nt\">databases</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">db</span><span class=\"p-Indicator\">]</span>\n  <span class=\"nt\">metrics</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">metric</span><span class=\"p-Indicator\">]</span>\n  <span class=\"nt\">sql</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n    <span class=\"no\">SELECT COUNT(*) AS metric FROM table</span>\n    <span class=\"no\">WHERE id &gt; :param1 AND id &lt; :param2</span>\n  <span class=\"nt\">parameters</span><span class=\"p\">:</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"nt\">param1</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">10</span>\n      <span class=\"nt\">param2</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">20</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"nt\">param1</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">30</span>\n      <span class=\"nt\">param2</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">40</span>\n</pre>\n</dd>\n<dt><tt>sql</tt>:</dt>\n<dd><p>the SQL text of the query.</p>\n<p>The query must return columns with names that match those of the metrics\ndefined in <tt>metrics</tt>, plus those of labels (if any) for all these metrics.</p>\n<pre><span class=\"nt\">query</span><span class=\"p\">:</span>\n  <span class=\"nt\">databases</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">db</span><span class=\"p-Indicator\">]</span>\n  <span class=\"nt\">metrics</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">metric1</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">metric2</span><span class=\"p-Indicator\">]</span>\n  <span class=\"nt\">sql</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">SELECT 10.0 AS metric1, 20.0 AS metric2</span>\n</pre>\n<p>will update <tt>metric1</tt> to <tt>10.0</tt> and <tt>metric2</tt> to <tt>20.0</tt>.</p>\n<dl>\n<dt><strong>Note</strong>:</dt>\n<dd>since <tt>:</tt> is used for parameter markers (see <tt>parameters</tt> above),\nliteral single <tt>:</tt> at the beginning of a word must be escaped with\nbackslash (e.g. <tt>SELECT <span class=\"pre\">'\\:bar'</span> FROM table</tt>).  There\u2019s no need to escape\nwhen the colon occurs inside a word (e.g. <tt>SELECT 'foo:bar' FROM table</tt>).</dd>\n</dl>\n</dd>\n</dl>\n</div>\n</div>\n<div id=\"metrics-endpoint\">\n<h3>Metrics endpoint</h3>\n<p>The exporter uses port <tt>9560</tt> by default for exposting metrics, under the\nstandard <tt>/metrics</tt> endpoint.</p>\n<p>For the configuration above, the endpoint would return something like this:</p>\n<pre># HELP database_errors_total Number of database errors\n# TYPE database_errors_total counter\n# HELP queries_total Number of database queries\n# TYPE queries_total counter\nqueries_total{database=\"db2\",status=\"success\"} 2.0\nqueries_total{database=\"db1\",status=\"success\"} 3.0\n# TYPE queries_created gauge\nqueries_created{database=\"db2\",status=\"success\"} 1.558334663380845e+09\nqueries_created{database=\"db1\",status=\"success\"} 1.558334663381175e+09\n# HELP metric1 A sample gauge\n# TYPE metric1 gauge\nmetric1{database=\"db1\"} 2580.0\n# HELP metric2 A sample summary\n# TYPE metric2 summary\nmetric2_count{database=\"db2\",l1=\"value1\",l2=\"value2\"} 1.0\nmetric2_sum{database=\"db2\",l1=\"value1\",l2=\"value2\"} 6476.0\nmetric2_count{database=\"db1\",l1=\"value1\",l2=\"value2\"} 1.0\nmetric2_sum{database=\"db1\",l1=\"value1\",l2=\"value2\"} 2340.0\n# TYPE metric2_created gauge\nmetric2_created{database=\"db2\",l1=\"value1\",l2=\"value2\"} 1.5583346633805697e+09\nmetric2_created{database=\"db1\",l1=\"value1\",l2=\"value2\"} 1.5583346633816812e+09\n# HELP metric3 A sample histogram\n# TYPE metric3 histogram\nmetric3_bucket{database=\"db2\",le=\"10.0\"} 0.0\nmetric3_bucket{database=\"db2\",le=\"20.0\"} 0.0\nmetric3_bucket{database=\"db2\",le=\"50.0\"} 0.0\nmetric3_bucket{database=\"db2\",le=\"100.0\"} 0.0\nmetric3_bucket{database=\"db2\",le=\"1000.0\"} 1.0\nmetric3_bucket{database=\"db2\",le=\"+Inf\"} 1.0\nmetric3_count{database=\"db2\"} 1.0\nmetric3_sum{database=\"db2\"} 135.0\nmetric3_bucket{database=\"db1\",le=\"10.0\"} 0.0\nmetric3_bucket{database=\"db1\",le=\"20.0\"} 0.0\nmetric3_bucket{database=\"db1\",le=\"50.0\"} 0.0\nmetric3_bucket{database=\"db1\",le=\"100.0\"} 0.0\nmetric3_bucket{database=\"db1\",le=\"1000.0\"} 1.0\nmetric3_bucket{database=\"db1\",le=\"+Inf\"} 1.0\nmetric3_count{database=\"db1\"} 1.0\nmetric3_sum{database=\"db1\"} 164.0\n# TYPE metric3_created gauge\nmetric3_created{database=\"db2\"} 1.5583346633807e+09\nmetric3_created{database=\"db1\"} 1.558334663381795e+09\n# HELP metric4 A sample enum\n# TYPE metric4 gauge\nmetric4{database=\"db2\",metric4=\"foo\"} 0.0\nmetric4{database=\"db2\",metric4=\"bar\"} 0.0\nmetric4{database=\"db2\",metric4=\"baz\"} 1.0\n</pre>\n</div>\n<div id=\"database-engines\">\n<h3>Database engines</h3>\n<p><a href=\"https://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a> doesn\u2019t depend on specific Python database modules at\ninstallation. This means additional modules might need to be installed for\nengines in use. These can be installed as follows:</p>\n<pre>pip install SQLAlchemy[postgresql] SQLAlchemy[mysql] ...\n</pre>\n<p>based on which database engines are needed.</p>\n<p>See <a href=\"http://docs.sqlalchemy.org/en/latest/core/engines.html#supported-databases\" rel=\"nofollow\">supported databases</a> for details.</p>\n</div>\n<div id=\"install-from-snap\">\n<h3>Install from Snap</h3>\n<p><a href=\"https://snapcraft.io/query-exporter\" rel=\"nofollow\"><img alt=\"Get it from the Snap Store\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c260bb057d7e5b725ab4daf05ed250ab0e1dd601/68747470733a2f2f736e617063726166742e696f2f7374617469632f696d616765732f6261646765732f656e2f736e61702d73746f72652d626c61636b2e737667\"></a></p>\n<p><tt><span class=\"pre\">query-exporter</span></tt> can be installed from <a href=\"https://snapcraft.io\" rel=\"nofollow\">Snap Store</a> on systems where Snaps\nare supported, via:</p>\n<pre>sudo snap install query-exporter\n</pre>\n<p>The snap provides both the <tt><span class=\"pre\">query-exporter</span></tt> command and a deamon instance of\nthe command, managed via a Systemd service.</p>\n<p>To configure the daemon:</p>\n<ul>\n<li>create or edit <tt><span class=\"pre\">/var/snap/query-exporter/current/config.yaml</span></tt> with the\nconfiguration</li>\n<li>run <tt>sudo snap restart <span class=\"pre\">query-exporter</span></tt></li>\n</ul>\n<p>The snap has support for connecting the following databases:</p>\n<ul>\n<li>PostgreSQL (<tt><span class=\"pre\">postgresql://</span></tt>)</li>\n<li>MySQL (<tt><span class=\"pre\">mysql://</span></tt>)</li>\n<li>SQLite (<tt><span class=\"pre\">sqlite://</span></tt>)</li>\n<li>Microsoft SQL Server (<tt><span class=\"pre\">mssql+pyodbc://</span></tt>)</li>\n<li>IBM DB2 (<tt><span class=\"pre\">db2+ibm_db://</span></tt>)</li>\n</ul>\n</div>\n<div id=\"run-in-docker\">\n<h3>Run in Docker</h3>\n<p><tt><span class=\"pre\">query-exporter</span></tt> can be run inside <a href=\"http://docker.com/\" rel=\"nofollow\">Docker</a> containers, and is availble from the <a href=\"https://hub.docker.com/r/adonato/query-exporter\" rel=\"nofollow\">Docker Hub</a>:</p>\n<pre>docker run -p 9560:9560/tcp -v \"$PWD/config.yaml:/config.yaml\" --rm -it \\\n    adonato/query-exporter:latest -- /config.yaml\n</pre>\n<p>The image has support for connecting the following databases:</p>\n<ul>\n<li>PostgreSQL (<tt><span class=\"pre\">postgresql://</span></tt>)</li>\n<li>MySQL (<tt><span class=\"pre\">mysql://</span></tt>)</li>\n<li>SQLite (<tt><span class=\"pre\">sqlite://</span></tt>)</li>\n<li>Microsoft SQL Server (<tt><span class=\"pre\">mssql+pyodbc://</span></tt>)</li>\n<li>IBM DB2 (<tt><span class=\"pre\">db2+ibm_db://</span></tt>)</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6824419, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "6eb4e36238a566858fea4819ffddb0f0", "sha256": "d914026a8d31f0fc81370ce1e057766bbbe297153168a663d626682624544076"}, "downloads": -1, "filename": "query-exporter-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6eb4e36238a566858fea4819ffddb0f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22986, "upload_time": "2017-05-07T17:51:54", "upload_time_iso_8601": "2017-05-07T17:51:54.010737Z", "url": "https://files.pythonhosted.org/packages/59/53/6ecf5d5257b0efc9d8de73022cc3f563b2e40a7ff7764520fdce9ceb0e4d/query-exporter-0.1.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "8b7925c06a84c23c66b94ac5c1d24f58", "sha256": "8ec01bb5d5a9d2c1fa39398b134bb9738ffaec44b33b0de4da30cc400ffea7c3"}, "downloads": -1, "filename": "query-exporter-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8b7925c06a84c23c66b94ac5c1d24f58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23193, "upload_time": "2017-05-13T09:58:06", "upload_time_iso_8601": "2017-05-13T09:58:06.217861Z", "url": "https://files.pythonhosted.org/packages/9d/ef/21bf98e8df0ada2876290ff9f73bffacccc793dea3ef8972951a12d95cf0/query-exporter-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c9372b93bdd2d52ac27440fa3a72ed65", "sha256": "91228f06353ccdaee7102648a59b9ec86a4cc2a8b4fdcba1e7fe33f3e2339887"}, "downloads": -1, "filename": "query-exporter-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c9372b93bdd2d52ac27440fa3a72ed65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22950, "upload_time": "2017-05-21T11:34:34", "upload_time_iso_8601": "2017-05-21T11:34:34.402211Z", "url": "https://files.pythonhosted.org/packages/f0/80/cc771113504582bff11de1db4952d742f50e5c196cb840728c06d71be994/query-exporter-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "2b86ea2ba37d23c879b65e46376fc2f6", "sha256": "7b71eedeaf656ced0a12a7ca6ca54f35bbb1ee2fbcd7b8f785b7b2a6e27da97a"}, "downloads": -1, "filename": "query-exporter-1.2.0.tar.gz", "has_sig": false, "md5_digest": "2b86ea2ba37d23c879b65e46376fc2f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23711, "upload_time": "2017-06-30T19:29:57", "upload_time_iso_8601": "2017-06-30T19:29:57.802200Z", "url": "https://files.pythonhosted.org/packages/27/cc/5a4ef5ddfd270dd5b674a2c8daae77b22703f3fa5c535ab320bf8ed0b137/query-exporter-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "43e6ce27386c00374b1ccd42895fea4c", "sha256": "4dfb5273bb855859a7ee5f73a0479e35c11258f21ebbb145b1c0c1097629b8b1"}, "downloads": -1, "filename": "query_exporter-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "43e6ce27386c00374b1ccd42895fea4c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15275, "upload_time": "2017-10-24T23:42:04", "upload_time_iso_8601": "2017-10-24T23:42:04.895212Z", "url": "https://files.pythonhosted.org/packages/74/71/fa4e5086309c8fb19c7f098deccfa8242e46c357970b2b1a7c1bd7be74b5/query_exporter-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb2e98d662cebfd291c1bdff02369aed", "sha256": "a3db9446d92d22f9e1b701a5c64385f2f64e1dd7b4ba5443ca6fafb2ab008f3e"}, "downloads": -1, "filename": "query-exporter-1.2.1.tar.gz", "has_sig": false, "md5_digest": "bb2e98d662cebfd291c1bdff02369aed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23890, "upload_time": "2017-10-24T23:42:06", "upload_time_iso_8601": "2017-10-24T23:42:06.368568Z", "url": "https://files.pythonhosted.org/packages/54/a7/206ca5de441f35b8b13d0b9dc24b462e27f4fb152e1faf214bcdda311f65/query-exporter-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "f27af40a02a60dc02536d8f6bd9dde9e", "sha256": "9c387da277019936ec5f9bdb319e0ad153eec06d034e1202982e9f07f7893e32"}, "downloads": -1, "filename": "query_exporter-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f27af40a02a60dc02536d8f6bd9dde9e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15229, "upload_time": "2017-10-24T23:53:25", "upload_time_iso_8601": "2017-10-24T23:53:25.589296Z", "url": "https://files.pythonhosted.org/packages/1a/7f/b28fd709776d1dd559ba7352664ffd21903fe9678c17fe1698bbfc5acfad/query_exporter-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21bc11e4073571d10bc7cb82e410e462", "sha256": "c7a7982a54e73359bb2bcd66aecbd1bda0dbc4c932a52810e373f3eaed2ff588"}, "downloads": -1, "filename": "query-exporter-1.2.2.tar.gz", "has_sig": false, "md5_digest": "21bc11e4073571d10bc7cb82e410e462", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23859, "upload_time": "2017-10-24T23:53:27", "upload_time_iso_8601": "2017-10-24T23:53:27.176967Z", "url": "https://files.pythonhosted.org/packages/f5/79/01f728e03f7fc1fbe0b6595c8ff229ed9618801c5eb1828015ea9704913d/query-exporter-1.2.2.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "5c15bac6a5f6bb71cbe952e647db50f1", "sha256": "607b1982e6b8680ed405bccab19d8c96b2f3297ad6fef828d5a3554268e41f50"}, "downloads": -1, "filename": "query_exporter-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5c15bac6a5f6bb71cbe952e647db50f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15778, "upload_time": "2018-02-19T23:41:00", "upload_time_iso_8601": "2018-02-19T23:41:00.565754Z", "url": "https://files.pythonhosted.org/packages/a3/f1/938e899b30043b6b628d7f889567762fade7df33db736323a6237d541bd3/query_exporter-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9db108e9c18a1c4ce1481bf30a62ee27", "sha256": "94da98db2a138a0d45d9580852adb358aeae17674ecbf94d4d0e67e31d59144a"}, "downloads": -1, "filename": "query-exporter-1.3.0.tar.gz", "has_sig": false, "md5_digest": "9db108e9c18a1c4ce1481bf30a62ee27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24445, "upload_time": "2018-02-19T23:41:03", "upload_time_iso_8601": "2018-02-19T23:41:03.601856Z", "url": "https://files.pythonhosted.org/packages/a6/86/982b47f6c80f2458dcac788fd147cde048e3f6a09238023c63c3114163d3/query-exporter-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "78bd3a69a2c65e5256bc8d0797a9fd76", "sha256": "3acbc325877c5bd7dbeb297f6dd700961019007e960989586c45ff60a82bf9d0"}, "downloads": -1, "filename": "query_exporter-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "78bd3a69a2c65e5256bc8d0797a9fd76", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15823, "upload_time": "2018-06-08T16:18:59", "upload_time_iso_8601": "2018-06-08T16:18:59.460093Z", "url": "https://files.pythonhosted.org/packages/8e/62/807f030f9d71b6d12bf07c6f22558f2332011a60698531056f04a954c49b/query_exporter-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75aa2e9866deffd6383a092cfcf10ade", "sha256": "84ae6468798018f995e629be1bd15c9e604ba742af92eecbe132afe480d456ff"}, "downloads": -1, "filename": "query-exporter-1.4.0.tar.gz", "has_sig": false, "md5_digest": "75aa2e9866deffd6383a092cfcf10ade", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24621, "upload_time": "2018-06-08T16:25:44", "upload_time_iso_8601": "2018-06-08T16:25:44.963723Z", "url": "https://files.pythonhosted.org/packages/30/7e/86aca2e886f5417e0c151050bec9339a16946bb8309c3532f7aa1ba2afed/query-exporter-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "1f6e810714074a27941cd621ae26c3ef", "sha256": "f1914673fbe403ecded3a07231c6a09d8d94cb97d73ada61ea39cef867e18789"}, "downloads": -1, "filename": "query_exporter-1.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1f6e810714074a27941cd621ae26c3ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17711, "upload_time": "2018-12-28T14:21:32", "upload_time_iso_8601": "2018-12-28T14:21:32.248971Z", "url": "https://files.pythonhosted.org/packages/67/12/c906e9f08c5d23f30f9c3e11a1320da33e87d1c358714d8812f4d8ead29f/query_exporter-1.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1014cbe19387a39d1e9bac6bfe418286", "sha256": "0290a45ab313f00e228835575a621ec22c5c463c060b496ccd67b4240f56d5bb"}, "downloads": -1, "filename": "query-exporter-1.5.0.tar.gz", "has_sig": false, "md5_digest": "1014cbe19387a39d1e9bac6bfe418286", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26331, "upload_time": "2018-12-28T14:21:34", "upload_time_iso_8601": "2018-12-28T14:21:34.087099Z", "url": "https://files.pythonhosted.org/packages/9a/d9/b8d8d6e2ca23e0d87d16c81638b5f56e1ac117b6cbf2ee611d763ec9f071/query-exporter-1.5.0.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "dc7ed7ddd714b0cff91fd9f690714af8", "sha256": "29a9c8cc61ddd91befeed87b34d95494420fc3b8169d41164d86322f65fcc6a2"}, "downloads": -1, "filename": "query-exporter-1.6.0.tar.gz", "has_sig": false, "md5_digest": "dc7ed7ddd714b0cff91fd9f690714af8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26371, "upload_time": "2019-03-26T22:47:49", "upload_time_iso_8601": "2019-03-26T22:47:49.422681Z", "url": "https://files.pythonhosted.org/packages/0d/0b/50daf1f05078b0a1bc7eecd54523967db68fa6154b682e093240494ed55f/query-exporter-1.6.0.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "f762a8e2146a25f7d1c93b0aa487e7e4", "sha256": "f51890b7bcd0cfcff864ab868e1f834b7ced0fc9f012ec48a3f22ae8f5a8a115"}, "downloads": -1, "filename": "query-exporter-1.7.0.tar.gz", "has_sig": false, "md5_digest": "f762a8e2146a25f7d1c93b0aa487e7e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28866, "upload_time": "2019-04-11T07:05:13", "upload_time_iso_8601": "2019-04-11T07:05:13.375325Z", "url": "https://files.pythonhosted.org/packages/94/af/23d686d6422415eff5ad5d1f3b2e224e5e9570a234450884af3aba89e4ff/query-exporter-1.7.0.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "ce04595c9bb00b1c8145fdae61cd039b", "sha256": "a9f57bcde6a6b921889276b112c6fc7246caac5781443de3f3c004120924885c"}, "downloads": -1, "filename": "query-exporter-1.8.0.tar.gz", "has_sig": false, "md5_digest": "ce04595c9bb00b1c8145fdae61cd039b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34152, "upload_time": "2019-05-25T10:42:47", "upload_time_iso_8601": "2019-05-25T10:42:47.947878Z", "url": "https://files.pythonhosted.org/packages/97/c2/45080922ed09f8367c651a0d5de1f09d350bbfcf10b98488264f6b8c80e3/query-exporter-1.8.0.tar.gz", "yanked": false}], "1.8.1": [{"comment_text": "", "digests": {"md5": "66b2667ad5651ce6b98470c5db4ce8b7", "sha256": "cb5252a4d882f5c3163fe9f6aa9be9f45af6e40053e7182939d23ae55f19066a"}, "downloads": -1, "filename": "query-exporter-1.8.1.tar.gz", "has_sig": false, "md5_digest": "66b2667ad5651ce6b98470c5db4ce8b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34257, "upload_time": "2019-07-14T10:06:05", "upload_time_iso_8601": "2019-07-14T10:06:05.619697Z", "url": "https://files.pythonhosted.org/packages/4e/ec/474304c639c1b5ad7897e7901b91178c31a643d2faf18346057293b4718f/query-exporter-1.8.1.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "deba73ce408a663a402a5fd609b11ecd", "sha256": "76bef4a4fc6251d65167332b0c0deb405eb1e9d606125677e74a8b0ebe04ceab"}, "downloads": -1, "filename": "query-exporter-1.9.0.tar.gz", "has_sig": false, "md5_digest": "deba73ce408a663a402a5fd609b11ecd", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 36423, "upload_time": "2019-11-03T12:04:08", "upload_time_iso_8601": "2019-11-03T12:04:08.655680Z", "url": "https://files.pythonhosted.org/packages/df/f7/d65f45051ee5b6f01fed688b801753dc6d38cc66db16a63cd9c9c7e1c127/query-exporter-1.9.0.tar.gz", "yanked": false}], "1.9.1": [{"comment_text": "", "digests": {"md5": "13fba51de8f801e1808ab133ac224a8a", "sha256": "055cfdb5ce5c05ca900f829598c1fe808cc899dbba2dbdf4e35b5eaf1caf8efa"}, "downloads": -1, "filename": "query-exporter-1.9.1.tar.gz", "has_sig": false, "md5_digest": "13fba51de8f801e1808ab133ac224a8a", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 37024, "upload_time": "2019-11-26T22:59:52", "upload_time_iso_8601": "2019-11-26T22:59:52.656892Z", "url": "https://files.pythonhosted.org/packages/7a/fd/64489f66159061e358c8a497c491eaa78e2214496c9634c1f12fc00503ce/query-exporter-1.9.1.tar.gz", "yanked": false}], "1.9.2": [{"comment_text": "", "digests": {"md5": "661399fd0e5ea6585656ce1236788b86", "sha256": "aa2757648869448ea5792d3667398678fb59463bf1605bfafec6edd7c32108fb"}, "downloads": -1, "filename": "query-exporter-1.9.2.tar.gz", "has_sig": false, "md5_digest": "661399fd0e5ea6585656ce1236788b86", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 37646, "upload_time": "2019-12-24T09:26:55", "upload_time_iso_8601": "2019-12-24T09:26:55.761647Z", "url": "https://files.pythonhosted.org/packages/41/7f/7996f110297ed54b471ebd77dd92a2995e72d4391b44cc1638b0b912b91a/query-exporter-1.9.2.tar.gz", "yanked": false}], "1.9.3": [{"comment_text": "", "digests": {"md5": "3d7e307ff5ea7ebc236f30cd70df7399", "sha256": "e105fbc9fa64ebb0bd94ec531f7b414a2198ff300f301ff610eb8ff637e769a1"}, "downloads": -1, "filename": "query_exporter-1.9.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3d7e307ff5ea7ebc236f30cd70df7399", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 35476, "upload_time": "2019-12-29T22:28:00", "upload_time_iso_8601": "2019-12-29T22:28:00.325474Z", "url": "https://files.pythonhosted.org/packages/5a/33/73944eb2260e406367322eb6f02ad406cd444d181c2e7397c6030cdb3a65/query_exporter-1.9.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "532ccbb95f2aa2028dcec65d345e85d2", "sha256": "f7960dd09880f156c9b6a7318e556a4ffe9167acfc6f9632deb3690798863145"}, "downloads": -1, "filename": "query-exporter-1.9.3.tar.gz", "has_sig": false, "md5_digest": "532ccbb95f2aa2028dcec65d345e85d2", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 37786, "upload_time": "2019-12-29T22:28:02", "upload_time_iso_8601": "2019-12-29T22:28:02.295022Z", "url": "https://files.pythonhosted.org/packages/69/85/d13a0dfc1ac1f78527dc7b1638af72bb1aadca3a926c79d63d94bf695d15/query-exporter-1.9.3.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "e34b549be4908f0183c97c9062faa2f7", "sha256": "62e8f5a430eebc4485c4a19dc7f973a40fb211adaa22821f3cfa8c23cc373a68"}, "downloads": -1, "filename": "query-exporter-2.0.0.tar.gz", "has_sig": false, "md5_digest": "e34b549be4908f0183c97c9062faa2f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 39554, "upload_time": "2020-02-02T19:30:11", "upload_time_iso_8601": "2020-02-02T19:30:11.448673Z", "url": "https://files.pythonhosted.org/packages/0c/84/e8c7a396bd7e1e584795cbaf70b9e37f053e071e136b26b7ab2cf6239dd5/query-exporter-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "22e1ad08cc05a0ca945273a69f0bbc9e", "sha256": "8b3bdf879b16713e40a585181abed62394e9f74b93c19991995a123ebebcf2d4"}, "downloads": -1, "filename": "query-exporter-2.0.1.tar.gz", "has_sig": false, "md5_digest": "22e1ad08cc05a0ca945273a69f0bbc9e", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 39613, "upload_time": "2020-02-07T17:39:35", "upload_time_iso_8601": "2020-02-07T17:39:35.785389Z", "url": "https://files.pythonhosted.org/packages/cd/80/4314cf0d607b6553f9311c9ef4e1c445aef1e9726e1b6b2cf43c2e8b6d92/query-exporter-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "d23ec2ad785f9e0853aa8a546c9d1c4a", "sha256": "a5c9fd581463aa485a5bac189945cbfdf3f41cd65ba88c2cee09d1cb00ff21a3"}, "downloads": -1, "filename": "query-exporter-2.0.2.tar.gz", "has_sig": false, "md5_digest": "d23ec2ad785f9e0853aa8a546c9d1c4a", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 39787, "upload_time": "2020-02-15T09:39:32", "upload_time_iso_8601": "2020-02-15T09:39:32.268518Z", "url": "https://files.pythonhosted.org/packages/fe/7f/431f959d466d0e9d873853a8a31994ed14fe195fc4ffdc446997adac567c/query-exporter-2.0.2.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "7ec7f8348c7c37baa499d256000dfca6", "sha256": "b3b6cb3a78a60bfaebaa391071eb3680021cc325cc8a1a91fcd45dfbc9e77f0e"}, "downloads": -1, "filename": "query-exporter-2.1.0.tar.gz", "has_sig": false, "md5_digest": "7ec7f8348c7c37baa499d256000dfca6", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 41020, "upload_time": "2020-02-29T14:19:55", "upload_time_iso_8601": "2020-02-29T14:19:55.832682Z", "url": "https://files.pythonhosted.org/packages/74/69/b1921e5cc76d77df20c37cd4691c481aa831c103c0801b7b33673e6ba41d/query-exporter-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "5fdd30068e98a5c8a4aca5b2a9da0689", "sha256": "7db13c22c53338b149c2aecd25b5ad2356bbc58bf3a86e87317e4e202c441c09"}, "downloads": -1, "filename": "query-exporter-2.2.0.tar.gz", "has_sig": false, "md5_digest": "5fdd30068e98a5c8a4aca5b2a9da0689", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42943, "upload_time": "2020-03-16T21:45:23", "upload_time_iso_8601": "2020-03-16T21:45:23.805175Z", "url": "https://files.pythonhosted.org/packages/0e/0d/36f9b64b1285d27608169cb1532be2306c48a9ea442a4b9a6f930db80153/query-exporter-2.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5fdd30068e98a5c8a4aca5b2a9da0689", "sha256": "7db13c22c53338b149c2aecd25b5ad2356bbc58bf3a86e87317e4e202c441c09"}, "downloads": -1, "filename": "query-exporter-2.2.0.tar.gz", "has_sig": false, "md5_digest": "5fdd30068e98a5c8a4aca5b2a9da0689", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42943, "upload_time": "2020-03-16T21:45:23", "upload_time_iso_8601": "2020-03-16T21:45:23.805175Z", "url": "https://files.pythonhosted.org/packages/0e/0d/36f9b64b1285d27608169cb1532be2306c48a9ea442a4b9a6f930db80153/query-exporter-2.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:38 2020"}