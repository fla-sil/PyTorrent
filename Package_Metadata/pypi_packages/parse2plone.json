{"info": {"author": "Alex Clark", "author_email": "aclark@aclark.net", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Framework :: Plone"], "description": ".. contents:: :depth: 2\n\nParse2Plone\n===========\n\nEasily import static websites into Plone\n\nIntroduction\n------------\n\n``Parse2Plone`` is a \"one off\" HTML parser (in the form of a Buildout recipe that\ncreates a script for you) to easily get content from static HTML websites\n(on the file system) into Plone.\n\nIt is designed to satisfy only the most trivial of use cases (e.g. a simple static\nsite in /var/www/html); for more serious deployments, you might enjoy\n`funnelweb`_.\n\n.. _`funnelweb`: http://pypi.python.org/pypi/funnelweb\n\nWarning\n-------\n\nThis is a **Buildout** recipe for use with **Plone**; by itself it does nothing. If you\ndon't know what Plone is, please see: http://plone.org. If you don't know\nwhat Buildout is, please see: http://www.buildout.org/.\n\nGetting started\n---------------\n\nBecause it drives the author nuts whenever he has to dig for a recipe's options,\nhere are this recipe's options::\n\n    [import]\n    recipe = parse2plone\n\n    # core features\n    path = /Plone\n    illegal_chars = _ .\n    html_extensions = html\n    image_extensions = gif jpg jpeg png\n    file_extensions = mp3\n    target_tags = a div h1 h2 p\n   \n    # additional bells & whistles\n    force = false\n    publish = false\n    collapse = false\n    replacetypes =\n    rename =\n    match =\n    paths =\n\n.. Note::\n    The parameters listed above are configured with their default values. Edit these\n    values if you would like to change the default behavior; they are (mostly)\n    self-explanatory. Now you can just cut and paste to get started or keep reading if\n    you would like to know more.\n\nJustification\n-------------\n\nWhy did you create ``Parse2Plone`` when `collective.transmogrifier`_ already\nexists?\n\nHere are some reasons:\n\n* Because ``Parse2Plone`` is aimed at lowering the bar for folks who don't already\n  know (or want to know) what a \"transmogrifier blueprint\" is but are able to update\n  their ``buildout.cfg`` file; run ``Buildout``; then run a single command; all\n  without having to think too much.\n\n* collective.transmogrify provides a framework for creating reusable pipes\n  (whose definitions are called blueprints). ``Parse2Plone`` provides \n  a single, non-reusable script.\n\n* Transmogrifier and friends appear to be \"developer's tools\", while the author wants\n  ``Parse2Plone`` to be an \"end user's tool\".\n\nIf you are a developer looking to create repeatable migrations, you probably want to be\nusing ``collective.transmogrifier``. If you are an end user that just wants to see your\nstatic website in Plone, then you might want to give ``Parse2Plone`` a try.\n\nThere is also this user/contributor comment, which captures the author's sentiment::\n\n    Parse2Plone's release was very timely as I need either this or something very\n    similar - and while I've no doubt I could make transmogrify do the job, it's a\n    lot of work for a one-shot loading of legacy pages.\n\n                                                    -Derek Broughton, Pointer\n                                                     Stop Consulting, Inc.\n\nThat's great, but why didn't you try to improve `collective.transmogrifier`_\nand make it more user friendly?\n\nHere are some reasons:\n\n* The author is a minimalist. One of the design aims of ``Parse2Plone`` was to\n  have as few dependencies as possible. There are two \"big\" dependencies,\n  ``zc.buildout`` and ``lxml``. Using Buildout was a design compromise, and\n  using ``lxml`` is pretty much a must if you want to \"parse\". Oh, and \n  ``BeautifulSoup`` was thrown in after the author read this:\n  http://codespeak.net/lxml/elementsoup.html\n\n* ``parse2plone`` in addition to its primary role as a content importer, is\n  intended to serve as an educational tool; both for the author and consumer.\n  Python coding best practices, and demonstrating how to script tasks in Plone\n  with \"bin/instance run\" are the aim. Forking and pull requests are encouraged.\n\n* The author had an itch to scratch; it will be nice for him to be able to say\n  \"just go write a script\" and then point to an example.\n\nAll of that said, the author understands that reusability and conservation of\ndeveloper resources are important goals, especially for the Plone project.\nBut for better or worse, these were not the goals of ``Parse2Plone``. However,\nyou can be sure that the lessons learned while developing ``Parse2Plone`` will  \nbe applied outside of it, particularly with regard to the conservation of developer\nresources within the Plone project.\n\n.. _`collective.transmogrifier`: http://pypi.python.org/pypi/collective.transmogrifier\n\nInstallation\n------------\n\nYou can install ``Parse2Plone`` by editing your ``buildout.cfg`` file like\nso. First add an ``import`` section::\n\n    [import]\n    recipe = parse2plone\n\nThen add the ``import`` section to the list of parts::\n\n    [buildout]\n    ...\n    parts =\n        ...\n        import\n\nNow run ``bin/buildout`` as usual.\n\n.. Note::\n    The section name ``import`` is arbitrary, you can call it whatever you\n    want. Just keep in mind that the section name corresponds directly to the\n    script name. In other words, whatever you name the section - that's what\n    the script will be called.\n\n\nExecution\n---------\n\nNow you can run ``Parse2Plone`` like this::\n\n    $ bin/plone run bin/import /path/to/files\n\n.. Note:: \n    In the example above and examples below, ``bin/plone`` refers to a *Zope 2\n    instance* script created by `plone.recipe.zope2instance`_.\n\n    Your ``bin/plone`` script may be called ``bin/instance`` or\n    ``bin/client``, etc. instead.\n\n.. _`plone.recipe.zope2instance`: http://pypi.python.org/pypi/plone.recipe.zope2instance\n\nExample\n-------\n\nIf you have a site in /var/www/html that contains the following::\n\n    /var/www/html/index.html\n    /var/www/html/about/index.html\n\nYou should run::\n\n    $ bin/plone run bin/import /var/www/html\n\nAnd the following will be created:\n\n* http://localhost:8080/Plone/index.html\n* http://localhost:8080/Plone/about/index.html\n\nCustomization\n-------------\n\nModifying the default behavior of ``parse2plone`` is easy; just use the command\nline options or add parameters to your ``buildout.cfg`` file. Both approaches\nallow customization of the exact same set of options, but the command line\narguments will trump any settings found in your ``buildout.cfg`` file.\n\nBuildout options\n~~~~~~~~~~~~~~~~\n\nYou can configure the following parameters in your ``buildout.cfg`` file in\nthe ``parse2plone`` recipe section.\n\nOptions\n'''''''\n+---------------------+-------------+----------------------------------------+\n| **Parameter**       | **Default** | **Description**                        |\n|                     | **value**   |                                        |\n+---------------------+-------------+----------------------------------------+\n| ``path``            | /Plone      | Specify an alternate location in the   |\n|                     |             | database for the import to occur.      |\n+---------------------+-------------+----------------------------------------+\n| ``illegal_chars``   | _ .         | Specify illegal characters.            |\n|                     |             | ``parse2plone`` will ignore files that |\n|                     |             | contain these characters.              |\n+---------------------+-------------+----------------------------------------+\n| ``html_extensions`` | html        | Specify HTML file extensions.          |\n|                     |             | ``parse2plone`` will import HTML files |\n|                     |             | with these extensions                  |\n+---------------------+-------------+----------------------------------------+\n| ``image_extensions``| png, gif,   | Specify image file extensions.         |\n|                     | jpg, jpeg,  | ``parse2plone`` will import image files|\n|                     |             | with these extensions.                 |\n+---------------------+-------------+----------------------------------------+\n| ``file_extensions`` | mp3         | Specify image file extensions.         |\n|                     |             | ``parse2plone`` will import files with |\n|                     |             | with these extensions.                 |\n+---------------------+-------------+----------------------------------------+\n| ``target_tags``     | a h1 h2 p   | Specify target tags. ``parse2plone``   |\n|                     |             | will parse the contents of HTML tags   |\n|                     |             | listed. If any tag is provided as an   |\n|                     |             | XPath expression (any expression       |\n|                     |             | begining with /) the matching elements |\n|                     |             | will first be extracted from the root  |\n|                     |             | document.  Selections for the contents |\n|                     |             | of other tags will then be performed   |\n|                     |             | only on the document subset.           |\n|                     |             | If only XPath expressions are given,   |\n|                     |             | then the entire subtree of the matched |\n|                     |             | elements are returned (including HTML) |\n+---------------------+-------------+----------------------------------------+\n| ``force``           | false       | Force create folders that do not exist.|\n|                     |             | For example, if you do                 |\n|                     |             | --path=/Plone/foo and foo does not     |\n|                     |             | exist, you will get an error message.  |\n|                     |             | Use --force to tell ``parse2plone`` to |\n|                     |             | create it.                             |\n+---------------------+-------------+----------------------------------------+\n| ``publish``         | false       | Publish newly created content.         |\n+---------------------+-------------+----------------------------------------+\n| ``collapse``        | false       | \"collapse\" content. (see               |\n|                     |             | collapse_parts() in parse2plone.py)    |\n+---------------------+-------------+----------------------------------------+\n| ``rename``          |             | Rename content. (see rename_parts()    |\n|                     |             | in parse2plone.py                      | \n+---------------------+-------------+----------------------------------------+\n| ``replacetypes``    |             | Use custom types. (see replace_types())|\n+---------------------+-------------+----------------------------------------+\n| ``match``           |             | Match files. (see match_files())       |\n+---------------------+-------------+----------------------------------------+\n| ``paths``           |             | Specify a series of locations on the   |\n|                     |             | filesystem, with corresponding         |\n|                     |             | locations in the database for imports, |\n|                     |             | with syntax:                           |\n|                     |             | --paths=import_dirs:object_paths       |\n|                     |             | (--path will be ignored)               |\n+---------------------+-------------+----------------------------------------+\n\nExample\n'''''''\n\nInstead of accepting the default ``parse2plone`` behaviour, in your\n``buildout.cfg`` file you may specify the following::\n\n    [import]\n    recipe = parse2plone\n    path = /Plone/foo\n    html_extensions = htm\n    image_extensions = png\n    target_tags = p\n\nThis will configure ``parse2plone`` to (only) import content *from*:\n\n* Images ending in ``.png``\n* HTML files ending in ``.htm``\n* Text within ``p`` tags\n\n*to*: \n\n* A folder named ``/Plone/foo``.\n\nCommand line options\n~~~~~~~~~~~~~~~~~~~~\n\nThe following ``parse2plone`` command line options are supported.\n\nOptions\n'''''''\n\n``'--path'``, ``'-p'``\n**********************\n\nYou can specify an alternate import path ('/Plone' by default)\nwith ``--path`` or ``-p``::\n\n    $ bin/plone run bin/import /path/to/files --path=/Plone/foo\n\n``'--html-extensions'``\n***********************\n\nYou can specify HTML file extensions with the ``--html-extensions`` option::\n\n    $ bin/plone run bin/import /path/to/files --html-extensions=htm\n\n``'--image-extensions'``\n************************\n\nYou can specify image file extensions with the ``--image-extensions`` option::\n\n    $ bin/plone run bin/import /path/to/files --image-extensions=png\n\n``'--file-extensions'``\n***********************\n\nYou can specify generic file extensions with the ``--file-extensions`` option::\n\n    $ bin/plone run bin/import /path/to/files --file-extensions=pdf\n\n``'--target-tags'``\n*******************\n\nYou can specify the target tags to parse with the ``--target-tags`` option::\n\n    $ bin/plone run bin/import /path/to/files --target-tags=p\n\n``'--force'``\n*************\n\nForce create folders that do not exist.\n\n``'--publish'``\n***************\n\nPublish newly created content.\n\n``'--collapse'``\n****************\n\n\"collapse\" content (see collapse_parts()).\n\n``'--rename'``\n***************\n\nRename content (see rename_files()).\n\n``'--replacetypes'``\n********************\n\nCustomize types (see replace_types() in parse2plone.py).\n\n``'--match'``\n****************\n\nMatch files (see match_files()).\n\n``'--paths'``\n*************\n\nYou can specify a series of import paths and corresponding object paths::\n\n    $ bin/plone run bin/import --paths=sample:Plone/sample,sample2:Plone/sample2\n\n``'--help'``\n************\n\nAnd lastly, you can always ask ``parse2plone`` to tell you about its available options with\nthe ``--help`` or ``-h`` option::\n\n    $ bin/plone run bin/import -h\n\nExample\n'''''''\n\nInstead of accepting the default ``parse2plone`` behaviour, on the command line you\nmay specify the following::\n\n    $ bin/plone run bin/import /path/to/files -p /Plone/foo --html-extensions=html \\\n        --image-extensions=png --target-tags=p\n\nThis will configure ``parse2plone`` to (only) import content *from*:\n\n* Images ending in ``.png``\n* HTML files ending in ``.htm``\n* Text within ``p`` tags\n\n*to*: \n\n* A Plone site folder named ``/Plone/foo``.\n\nTroubleshooting\n---------------\n\nHere are some trouble-shooting comments/tips.\n\nCompiling lxml\n~~~~~~~~~~~~~~\n\n``Parse2Plone`` requires ``lxml`` which in turn requires ``libxml2`` and\n``libxslt``. If you do not have ``lxml`` installed \"globally\" (i.e. in your\nsystem Python's site-packages directory) then Buildout will try to install it\nfor you. At this point ``lxml`` will look for the libxml2/libxslt2 development\nlibraries to build against, and if you don't have them installed on your system\nalready *your mileage may vary* (i.e. Buildout will fail).\n\nDatabase access\n~~~~~~~~~~~~~~~\n\nBefore running ``parse2plone``, you must either stop your Plone site or\nuse ZEO. Otherwise ``parse2plone`` will not be able to access the\ndatabase.\n\nContact\n-------\n\nQuestions, comments, or concerns? Please e-mail: aclark@aclark.net.\n\nCredits\n-------\n\nDevelopment sponsored by Radio Free Asia \n\nHistory\n-------\n\n0.9.9 (11/16/2010)\n~~~~~~~~~~~~~~~~~~\n\n* Added a large number of tests; performed associated refactoring; 50% test coverage\n\n0.9.8 (11/12/2010)\n~~~~~~~~~~~~~~~~~~\n\n* Add \"paths\" feature to allow multi-import dirs (on the\n  file system), and corresponding object paths (in Plone)\n  to be specified.\n\n0.9.7 (11/08/2010)\n~~~~~~~~~~~~~~~~~~\n\n* Fix import error\n* Add file handler to logger; saves output to a file called \"parse2plone.log\"\n\n0.9.6 (11/08/2010)\n~~~~~~~~~~~~~~~~~~\n\n* Fixes to \"match\" feature\n* Combine all modules into one\n* Remove a stray pdb (!)\n* Add tests (we're at 20% test coverage people!)\n* Update docs\n\n0.9.5 (11/08/2010)\n~~~~~~~~~~~~~~~~~~\n\n* Add match feature\n* Add more project justifications to the docs\n\n0.9.4 (11/06/2010)\n~~~~~~~~~~~~~~~~~~\n\n* Remove ``bin/import`` script whenever recipe is uninstalled [aclark4life]\n* Add support for XPath syntax in target_tags [derek]\n* Add \"typeswap\" feature [aclark4life]\n* Update docs [aclark4life]\n\n0.9.3 (11/04/2010)\n~~~~~~~~~~~~~~~~~~\n\n* Add Plone 2.5 compat\n* Bug fixes\n\n  * Better handling of file system path; better base dir calculation\n\n0.9.2 (11/03/2010)\n~~~~~~~~~~~~~~~~~~\n\n* More doc fixes\n\n0.9.1 (11/03/2010)\n~~~~~~~~~~~~~~~~~~\n\n* Doc fixes\n\n0.9.0 (11/03/2010)\n~~~~~~~~~~~~~~~~~~\n\n* Fix regressions introduced (or unresolved as of) 0.8.2. Thanks Derek\n  Broughton for the bug report(s)\n\n  * Many fixes to convert_parameter_values() method which converts\n    recipe parameters to arguments passed to main()\n  * Fix \"slugify\" feature\n\n0.8.2 (11/02/2010)\n~~~~~~~~~~~~~~~~~~\n\n* Add rename feature\n* Fix regressions introduced in 0.8.1\n\n0.8.1 (10/29/2010)\n~~~~~~~~~~~~~~~~~~\n\n* Refactor options/parameters functionality to universally support _SETTINGS dict\n* Add \"slugify\" feature\n* Doc fixes\n* Add support to optionally publish content after creation\n* Add support for generic file import\n\n0.8 (10/27/2010)\n~~~~~~~~~~~~~~~~\n\n* Support the importing of content to folders within the Plone site object\n\n0.7 (10/25/2010)\n~~~~~~~~~~~~~~~~\n\n* Documentation fixes\n\n0.6 (10/25/2010)\n~~~~~~~~~~~~~~~~\n\n* Support customization via recipe parameters and command line arguments\n\n0.5 (10/22/2010)\n~~~~~~~~~~~~~~~~\n\n* Revert 'Add Plone to install_requires'\n\n0.4 (10/22/2010)\n~~~~~~~~~~~~~~~~\n\n* Add 'Plone' to install_requires\n\n0.3 (10/22/2010)\n~~~~~~~~~~~~~~~~\n\n* Another setuptools fix\n\n0.2 (10/22/2010)\n~~~~~~~~~~~~~~~~\n\n* Setuptools fix\n\n0.1 (10/21/2010)\n~~~~~~~~~~~~~~~~\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://aclark4life.github.com/Parse2Plone", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "parse2plone", "package_url": "https://pypi.org/project/parse2plone/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/parse2plone/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://aclark4life.github.com/Parse2Plone"}, "release_url": "https://pypi.org/project/parse2plone/0.9.9/", "requires_dist": null, "requires_python": null, "summary": "Easily import static HTML websites into Plone.", "version": "0.9.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#parse2plone\" id=\"id24\" rel=\"nofollow\">Parse2Plone</a><ul>\n<li><a href=\"#introduction\" id=\"id25\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#warning\" id=\"id26\" rel=\"nofollow\">Warning</a></li>\n<li><a href=\"#getting-started\" id=\"id27\" rel=\"nofollow\">Getting started</a></li>\n<li><a href=\"#justification\" id=\"id28\" rel=\"nofollow\">Justification</a></li>\n<li><a href=\"#installation\" id=\"id29\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#execution\" id=\"id30\" rel=\"nofollow\">Execution</a></li>\n<li><a href=\"#example\" id=\"id31\" rel=\"nofollow\">Example</a></li>\n<li><a href=\"#customization\" id=\"id32\" rel=\"nofollow\">Customization</a></li>\n<li><a href=\"#troubleshooting\" id=\"id33\" rel=\"nofollow\">Troubleshooting</a></li>\n<li><a href=\"#contact\" id=\"id34\" rel=\"nofollow\">Contact</a></li>\n<li><a href=\"#credits\" id=\"id35\" rel=\"nofollow\">Credits</a></li>\n<li><a href=\"#history\" id=\"id36\" rel=\"nofollow\">History</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"parse2plone\">\n<h2><a href=\"#id24\" rel=\"nofollow\">Parse2Plone</a></h2>\n<p>Easily import static websites into Plone</p>\n<div id=\"introduction\">\n<h3><a href=\"#id25\" rel=\"nofollow\">Introduction</a></h3>\n<p><tt>Parse2Plone</tt> is a \u201cone off\u201d HTML parser (in the form of a Buildout recipe that\ncreates a script for you) to easily get content from static HTML websites\n(on the file system) into Plone.</p>\n<p>It is designed to satisfy only the most trivial of use cases (e.g. a simple static\nsite in /var/www/html); for more serious deployments, you might enjoy\n<a href=\"http://pypi.python.org/pypi/funnelweb\" rel=\"nofollow\">funnelweb</a>.</p>\n</div>\n<div id=\"warning\">\n<h3><a href=\"#id26\" rel=\"nofollow\">Warning</a></h3>\n<p>This is a <strong>Buildout</strong> recipe for use with <strong>Plone</strong>; by itself it does nothing. If you\ndon\u2019t know what Plone is, please see: <a href=\"http://plone.org\" rel=\"nofollow\">http://plone.org</a>. If you don\u2019t know\nwhat Buildout is, please see: <a href=\"http://www.buildout.org/\" rel=\"nofollow\">http://www.buildout.org/</a>.</p>\n</div>\n<div id=\"getting-started\">\n<h3><a href=\"#id27\" rel=\"nofollow\">Getting started</a></h3>\n<p>Because it drives the author nuts whenever he has to dig for a recipe\u2019s options,\nhere are this recipe\u2019s options:</p>\n<pre>[import]\nrecipe = parse2plone\n\n# core features\npath = /Plone\nillegal_chars = _ .\nhtml_extensions = html\nimage_extensions = gif jpg jpeg png\nfile_extensions = mp3\ntarget_tags = a div h1 h2 p\n\n# additional bells &amp; whistles\nforce = false\npublish = false\ncollapse = false\nreplacetypes =\nrename =\nmatch =\npaths =\n</pre>\n<div>\n<p>Note</p>\n<p>The parameters listed above are configured with their default values. Edit these\nvalues if you would like to change the default behavior; they are (mostly)\nself-explanatory. Now you can just cut and paste to get started or keep reading if\nyou would like to know more.</p>\n</div>\n</div>\n<div id=\"justification\">\n<h3><a href=\"#id28\" rel=\"nofollow\">Justification</a></h3>\n<p>Why did you create <tt>Parse2Plone</tt> when <a href=\"http://pypi.python.org/pypi/collective.transmogrifier\" rel=\"nofollow\">collective.transmogrifier</a> already\nexists?</p>\n<p>Here are some reasons:</p>\n<ul>\n<li>Because <tt>Parse2Plone</tt> is aimed at lowering the bar for folks who don\u2019t already\nknow (or want to know) what a \u201ctransmogrifier blueprint\u201d is but are able to update\ntheir <tt>buildout.cfg</tt> file; run <tt>Buildout</tt>; then run a single command; all\nwithout having to think too much.</li>\n<li>collective.transmogrify provides a framework for creating reusable pipes\n(whose definitions are called blueprints). <tt>Parse2Plone</tt> provides\na single, non-reusable script.</li>\n<li>Transmogrifier and friends appear to be \u201cdeveloper\u2019s tools\u201d, while the author wants\n<tt>Parse2Plone</tt> to be an \u201cend user\u2019s tool\u201d.</li>\n</ul>\n<p>If you are a developer looking to create repeatable migrations, you probably want to be\nusing <tt>collective.transmogrifier</tt>. If you are an end user that just wants to see your\nstatic website in Plone, then you might want to give <tt>Parse2Plone</tt> a try.</p>\n<p>There is also this user/contributor comment, which captures the author\u2019s sentiment:</p>\n<pre>Parse2Plone's release was very timely as I need either this or something very\nsimilar - and while I've no doubt I could make transmogrify do the job, it's a\nlot of work for a one-shot loading of legacy pages.\n\n                                                -Derek Broughton, Pointer\n                                                 Stop Consulting, Inc.\n</pre>\n<p>That\u2019s great, but why didn\u2019t you try to improve <a href=\"http://pypi.python.org/pypi/collective.transmogrifier\" rel=\"nofollow\">collective.transmogrifier</a>\nand make it more user friendly?</p>\n<p>Here are some reasons:</p>\n<ul>\n<li>The author is a minimalist. One of the design aims of <tt>Parse2Plone</tt> was to\nhave as few dependencies as possible. There are two \u201cbig\u201d dependencies,\n<tt>zc.buildout</tt> and <tt>lxml</tt>. Using Buildout was a design compromise, and\nusing <tt>lxml</tt> is pretty much a must if you want to \u201cparse\u201d. Oh, and\n<tt>BeautifulSoup</tt> was thrown in after the author read this:\n<a href=\"http://codespeak.net/lxml/elementsoup.html\" rel=\"nofollow\">http://codespeak.net/lxml/elementsoup.html</a></li>\n<li><tt>parse2plone</tt> in addition to its primary role as a content importer, is\nintended to serve as an educational tool; both for the author and consumer.\nPython coding best practices, and demonstrating how to script tasks in Plone\nwith \u201cbin/instance run\u201d are the aim. Forking and pull requests are encouraged.</li>\n<li>The author had an itch to scratch; it will be nice for him to be able to say\n\u201cjust go write a script\u201d and then point to an example.</li>\n</ul>\n<p>All of that said, the author understands that reusability and conservation of\ndeveloper resources are important goals, especially for the Plone project.\nBut for better or worse, these were not the goals of <tt>Parse2Plone</tt>. However,\nyou can be sure that the lessons learned while developing <tt>Parse2Plone</tt> will\nbe applied outside of it, particularly with regard to the conservation of developer\nresources within the Plone project.</p>\n</div>\n<div id=\"installation\">\n<h3><a href=\"#id29\" rel=\"nofollow\">Installation</a></h3>\n<p>You can install <tt>Parse2Plone</tt> by editing your <tt>buildout.cfg</tt> file like\nso. First add an <tt>import</tt> section:</p>\n<pre>[import]\nrecipe = parse2plone\n</pre>\n<p>Then add the <tt>import</tt> section to the list of parts:</p>\n<pre>[buildout]\n...\nparts =\n    ...\n    import\n</pre>\n<p>Now run <tt>bin/buildout</tt> as usual.</p>\n<div>\n<p>Note</p>\n<p>The section name <tt>import</tt> is arbitrary, you can call it whatever you\nwant. Just keep in mind that the section name corresponds directly to the\nscript name. In other words, whatever you name the section - that\u2019s what\nthe script will be called.</p>\n</div>\n</div>\n<div id=\"execution\">\n<h3><a href=\"#id30\" rel=\"nofollow\">Execution</a></h3>\n<p>Now you can run <tt>Parse2Plone</tt> like this:</p>\n<pre>$ bin/plone run bin/import /path/to/files\n</pre>\n<div>\n<p>Note</p>\n<p>In the example above and examples below, <tt>bin/plone</tt> refers to a <em>Zope 2\ninstance</em> script created by <a href=\"http://pypi.python.org/pypi/plone.recipe.zope2instance\" rel=\"nofollow\">plone.recipe.zope2instance</a>.</p>\n<p>Your <tt>bin/plone</tt> script may be called <tt>bin/instance</tt> or\n<tt>bin/client</tt>, etc. instead.</p>\n</div>\n</div>\n<div id=\"example\">\n<h3><a href=\"#id31\" rel=\"nofollow\">Example</a></h3>\n<p>If you have a site in /var/www/html that contains the following:</p>\n<pre>/var/www/html/index.html\n/var/www/html/about/index.html\n</pre>\n<p>You should run:</p>\n<pre>$ bin/plone run bin/import /var/www/html\n</pre>\n<p>And the following will be created:</p>\n<ul>\n<li><a href=\"http://localhost:8080/Plone/index.html\" rel=\"nofollow\">http://localhost:8080/Plone/index.html</a></li>\n<li><a href=\"http://localhost:8080/Plone/about/index.html\" rel=\"nofollow\">http://localhost:8080/Plone/about/index.html</a></li>\n</ul>\n</div>\n<div id=\"customization\">\n<h3><a href=\"#id32\" rel=\"nofollow\">Customization</a></h3>\n<p>Modifying the default behavior of <tt>parse2plone</tt> is easy; just use the command\nline options or add parameters to your <tt>buildout.cfg</tt> file. Both approaches\nallow customization of the exact same set of options, but the command line\narguments will trump any settings found in your <tt>buildout.cfg</tt> file.</p>\n<div id=\"buildout-options\">\n<h4>Buildout options</h4>\n<p>You can configure the following parameters in your <tt>buildout.cfg</tt> file in\nthe <tt>parse2plone</tt> recipe section.</p>\n<div id=\"options\">\n<h5>Options</h5>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td><strong>Parameter</strong></td>\n<td><strong>Default</strong>\n<strong>value</strong></td>\n<td><strong>Description</strong></td>\n</tr>\n<tr><td><tt>path</tt></td>\n<td>/Plone</td>\n<td>Specify an alternate location in the\ndatabase for the import to occur.</td>\n</tr>\n<tr><td><tt>illegal_chars</tt></td>\n<td>_ .</td>\n<td>Specify illegal characters.\n<tt>parse2plone</tt> will ignore files that\ncontain these characters.</td>\n</tr>\n<tr><td><tt>html_extensions</tt></td>\n<td>html</td>\n<td>Specify HTML file extensions.\n<tt>parse2plone</tt> will import HTML files\nwith these extensions</td>\n</tr>\n<tr><td><tt>image_extensions</tt></td>\n<td>png, gif,\njpg, jpeg,</td>\n<td>Specify image file extensions.\n<tt>parse2plone</tt> will import image files\nwith these extensions.</td>\n</tr>\n<tr><td><tt>file_extensions</tt></td>\n<td>mp3</td>\n<td>Specify image file extensions.\n<tt>parse2plone</tt> will import files with\nwith these extensions.</td>\n</tr>\n<tr><td><tt>target_tags</tt></td>\n<td>a h1 h2 p</td>\n<td>Specify target tags. <tt>parse2plone</tt>\nwill parse the contents of HTML tags\nlisted. If any tag is provided as an\nXPath expression (any expression\nbegining with /) the matching elements\nwill first be extracted from the root\ndocument.  Selections for the contents\nof other tags will then be performed\nonly on the document subset.\nIf only XPath expressions are given,\nthen the entire subtree of the matched\nelements are returned (including HTML)</td>\n</tr>\n<tr><td><tt>force</tt></td>\n<td>false</td>\n<td>Force create folders that do not exist.\nFor example, if you do\n\u2013path=/Plone/foo and foo does not\nexist, you will get an error message.\nUse \u2013force to tell <tt>parse2plone</tt> to\ncreate it.</td>\n</tr>\n<tr><td><tt>publish</tt></td>\n<td>false</td>\n<td>Publish newly created content.</td>\n</tr>\n<tr><td><tt>collapse</tt></td>\n<td>false</td>\n<td>\u201ccollapse\u201d content. (see\ncollapse_parts() in parse2plone.py)</td>\n</tr>\n<tr><td><tt>rename</tt></td>\n<td>\u00a0</td>\n<td>Rename content. (see rename_parts()\nin parse2plone.py</td>\n</tr>\n<tr><td><tt>replacetypes</tt></td>\n<td>\u00a0</td>\n<td>Use custom types. (see replace_types())</td>\n</tr>\n<tr><td><tt>match</tt></td>\n<td>\u00a0</td>\n<td>Match files. (see match_files())</td>\n</tr>\n<tr><td><tt>paths</tt></td>\n<td>\u00a0</td>\n<td>Specify a series of locations on the\nfilesystem, with corresponding\nlocations in the database for imports,\nwith syntax:\n\u2013paths=import_dirs:object_paths\n(\u2013path will be ignored)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"id1\">\n<h5>Example</h5>\n<p>Instead of accepting the default <tt>parse2plone</tt> behaviour, in your\n<tt>buildout.cfg</tt> file you may specify the following:</p>\n<pre>[import]\nrecipe = parse2plone\npath = /Plone/foo\nhtml_extensions = htm\nimage_extensions = png\ntarget_tags = p\n</pre>\n<p>This will configure <tt>parse2plone</tt> to (only) import content <em>from</em>:</p>\n<ul>\n<li>Images ending in <tt>.png</tt></li>\n<li>HTML files ending in <tt>.htm</tt></li>\n<li>Text within <tt>p</tt> tags</li>\n</ul>\n<p><em>to</em>:</p>\n<ul>\n<li>A folder named <tt>/Plone/foo</tt>.</li>\n</ul>\n</div>\n</div>\n<div id=\"command-line-options\">\n<h4>Command line options</h4>\n<p>The following <tt>parse2plone</tt> command line options are supported.</p>\n<div id=\"id2\">\n<h5>Options</h5>\n<div id=\"path-p\">\n<h6><tt><span class=\"pre\">'--path'</span></tt>, <tt><span class=\"pre\">'-p'</span></tt></h6>\n<p>You can specify an alternate import path (\u2018/Plone\u2019 by default)\nwith <tt><span class=\"pre\">--path</span></tt> or <tt><span class=\"pre\">-p</span></tt>:</p>\n<pre>$ bin/plone run bin/import /path/to/files --path=/Plone/foo\n</pre>\n</div>\n<div id=\"html-extensions\">\n<h6><tt><span class=\"pre\">'--html-extensions'</span></tt></h6>\n<p>You can specify HTML file extensions with the <tt><span class=\"pre\">--html-extensions</span></tt> option:</p>\n<pre>$ bin/plone run bin/import /path/to/files --html-extensions=htm\n</pre>\n</div>\n<div id=\"image-extensions\">\n<h6><tt><span class=\"pre\">'--image-extensions'</span></tt></h6>\n<p>You can specify image file extensions with the <tt><span class=\"pre\">--image-extensions</span></tt> option:</p>\n<pre>$ bin/plone run bin/import /path/to/files --image-extensions=png\n</pre>\n</div>\n<div id=\"file-extensions\">\n<h6><tt><span class=\"pre\">'--file-extensions'</span></tt></h6>\n<p>You can specify generic file extensions with the <tt><span class=\"pre\">--file-extensions</span></tt> option:</p>\n<pre>$ bin/plone run bin/import /path/to/files --file-extensions=pdf\n</pre>\n</div>\n<div id=\"target-tags\">\n<h6><tt><span class=\"pre\">'--target-tags'</span></tt></h6>\n<p>You can specify the target tags to parse with the <tt><span class=\"pre\">--target-tags</span></tt> option:</p>\n<pre>$ bin/plone run bin/import /path/to/files --target-tags=p\n</pre>\n</div>\n<div id=\"force\">\n<h6><tt><span class=\"pre\">'--force'</span></tt></h6>\n<p>Force create folders that do not exist.</p>\n</div>\n<div id=\"publish\">\n<h6><tt><span class=\"pre\">'--publish'</span></tt></h6>\n<p>Publish newly created content.</p>\n</div>\n<div id=\"collapse\">\n<h6><tt><span class=\"pre\">'--collapse'</span></tt></h6>\n<p>\u201ccollapse\u201d content (see collapse_parts()).</p>\n</div>\n<div id=\"rename\">\n<h6><tt><span class=\"pre\">'--rename'</span></tt></h6>\n<p>Rename content (see rename_files()).</p>\n</div>\n<div id=\"replacetypes\">\n<h6><tt><span class=\"pre\">'--replacetypes'</span></tt></h6>\n<p>Customize types (see replace_types() in parse2plone.py).</p>\n</div>\n<div id=\"match\">\n<h6><tt><span class=\"pre\">'--match'</span></tt></h6>\n<p>Match files (see match_files()).</p>\n</div>\n<div id=\"paths\">\n<h6><tt><span class=\"pre\">'--paths'</span></tt></h6>\n<p>You can specify a series of import paths and corresponding object paths:</p>\n<pre>$ bin/plone run bin/import --paths=sample:Plone/sample,sample2:Plone/sample2\n</pre>\n</div>\n<div id=\"help\">\n<h6><tt><span class=\"pre\">'--help'</span></tt></h6>\n<p>And lastly, you can always ask <tt>parse2plone</tt> to tell you about its available options with\nthe <tt><span class=\"pre\">--help</span></tt> or <tt><span class=\"pre\">-h</span></tt> option:</p>\n<pre>$ bin/plone run bin/import -h\n</pre>\n</div>\n</div>\n<div id=\"id3\">\n<h5>Example</h5>\n<p>Instead of accepting the default <tt>parse2plone</tt> behaviour, on the command line you\nmay specify the following:</p>\n<pre>$ bin/plone run bin/import /path/to/files -p /Plone/foo --html-extensions=html \\\n    --image-extensions=png --target-tags=p\n</pre>\n<p>This will configure <tt>parse2plone</tt> to (only) import content <em>from</em>:</p>\n<ul>\n<li>Images ending in <tt>.png</tt></li>\n<li>HTML files ending in <tt>.htm</tt></li>\n<li>Text within <tt>p</tt> tags</li>\n</ul>\n<p><em>to</em>:</p>\n<ul>\n<li>A Plone site folder named <tt>/Plone/foo</tt>.</li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"troubleshooting\">\n<h3><a href=\"#id33\" rel=\"nofollow\">Troubleshooting</a></h3>\n<p>Here are some trouble-shooting comments/tips.</p>\n<div id=\"compiling-lxml\">\n<h4>Compiling lxml</h4>\n<p><tt>Parse2Plone</tt> requires <tt>lxml</tt> which in turn requires <tt>libxml2</tt> and\n<tt>libxslt</tt>. If you do not have <tt>lxml</tt> installed \u201cglobally\u201d (i.e. in your\nsystem Python\u2019s site-packages directory) then Buildout will try to install it\nfor you. At this point <tt>lxml</tt> will look for the libxml2/libxslt2 development\nlibraries to build against, and if you don\u2019t have them installed on your system\nalready <em>your mileage may vary</em> (i.e. Buildout will fail).</p>\n</div>\n<div id=\"database-access\">\n<h4>Database access</h4>\n<p>Before running <tt>parse2plone</tt>, you must either stop your Plone site or\nuse ZEO. Otherwise <tt>parse2plone</tt> will not be able to access the\ndatabase.</p>\n</div>\n</div>\n<div id=\"contact\">\n<h3><a href=\"#id34\" rel=\"nofollow\">Contact</a></h3>\n<p>Questions, comments, or concerns? Please e-mail: <a href=\"mailto:aclark%40aclark.net\">aclark<span>@</span>aclark<span>.</span>net</a>.</p>\n</div>\n<div id=\"credits\">\n<h3><a href=\"#id35\" rel=\"nofollow\">Credits</a></h3>\n<p>Development sponsored by Radio Free Asia</p>\n</div>\n<div id=\"history\">\n<h3><a href=\"#id36\" rel=\"nofollow\">History</a></h3>\n<div id=\"id4\">\n<h4>0.9.9 (11/16/2010)</h4>\n<ul>\n<li>Added a large number of tests; performed associated refactoring; 50% test coverage</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h4>0.9.8 (11/12/2010)</h4>\n<ul>\n<li>Add \u201cpaths\u201d feature to allow multi-import dirs (on the\nfile system), and corresponding object paths (in Plone)\nto be specified.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h4>0.9.7 (11/08/2010)</h4>\n<ul>\n<li>Fix import error</li>\n<li>Add file handler to logger; saves output to a file called \u201cparse2plone.log\u201d</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h4>0.9.6 (11/08/2010)</h4>\n<ul>\n<li>Fixes to \u201cmatch\u201d feature</li>\n<li>Combine all modules into one</li>\n<li>Remove a stray pdb (!)</li>\n<li>Add tests (we\u2019re at 20% test coverage people!)</li>\n<li>Update docs</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h4>0.9.5 (11/08/2010)</h4>\n<ul>\n<li>Add match feature</li>\n<li>Add more project justifications to the docs</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h4>0.9.4 (11/06/2010)</h4>\n<ul>\n<li>Remove <tt>bin/import</tt> script whenever recipe is uninstalled [aclark4life]</li>\n<li>Add support for XPath syntax in target_tags [derek]</li>\n<li>Add \u201ctypeswap\u201d feature [aclark4life]</li>\n<li>Update docs [aclark4life]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h4>0.9.3 (11/04/2010)</h4>\n<ul>\n<li>Add Plone 2.5 compat</li>\n<li>Bug fixes<ul>\n<li>Better handling of file system path; better base dir calculation</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h4>0.9.2 (11/03/2010)</h4>\n<ul>\n<li>More doc fixes</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h4>0.9.1 (11/03/2010)</h4>\n<ul>\n<li>Doc fixes</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h4>0.9.0 (11/03/2010)</h4>\n<ul>\n<li>Fix regressions introduced (or unresolved as of) 0.8.2. Thanks Derek\nBroughton for the bug report(s)<ul>\n<li>Many fixes to convert_parameter_values() method which converts\nrecipe parameters to arguments passed to main()</li>\n<li>Fix \u201cslugify\u201d feature</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h4>0.8.2 (11/02/2010)</h4>\n<ul>\n<li>Add rename feature</li>\n<li>Fix regressions introduced in 0.8.1</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h4>0.8.1 (10/29/2010)</h4>\n<ul>\n<li>Refactor options/parameters functionality to universally support _SETTINGS dict</li>\n<li>Add \u201cslugify\u201d feature</li>\n<li>Doc fixes</li>\n<li>Add support to optionally publish content after creation</li>\n<li>Add support for generic file import</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h4>0.8 (10/27/2010)</h4>\n<ul>\n<li>Support the importing of content to folders within the Plone site object</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h4>0.7 (10/25/2010)</h4>\n<ul>\n<li>Documentation fixes</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h4>0.6 (10/25/2010)</h4>\n<ul>\n<li>Support customization via recipe parameters and command line arguments</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h4>0.5 (10/22/2010)</h4>\n<ul>\n<li>Revert \u2018Add Plone to install_requires\u2019</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h4>0.4 (10/22/2010)</h4>\n<ul>\n<li>Add \u2018Plone\u2019 to install_requires</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h4>0.3 (10/22/2010)</h4>\n<ul>\n<li>Another setuptools fix</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h4>0.2 (10/22/2010)</h4>\n<ul>\n<li>Setuptools fix</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h4>0.1 (10/21/2010)</h4>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 796021, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6d3040c09ed322c6fb233c74aca3acc4", "sha256": "4e5c9582c74dc706f725b95c76d3d52e29c9aef9424da2c202eacf5e3a8e5346"}, "downloads": -1, "filename": "parse2plone-0.1.zip", "has_sig": false, "md5_digest": "6d3040c09ed322c6fb233c74aca3acc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12650, "upload_time": "2010-10-22T03:41:36", "upload_time_iso_8601": "2010-10-22T03:41:36.870535Z", "url": "https://files.pythonhosted.org/packages/15/b4/9ae7bca4013194266064e56bf956dfcee52c4e0ecaeecc035a0912053be3/parse2plone-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "fe6c827d07861572b98d7d5a4e40e749", "sha256": "bccaf6402c17a0da6bb4072461782c1aa0b818b99344814e28790ed1c51231ee"}, "downloads": -1, "filename": "parse2plone-0.2.zip", "has_sig": false, "md5_digest": "fe6c827d07861572b98d7d5a4e40e749", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9961, "upload_time": "2010-10-22T15:16:14", "upload_time_iso_8601": "2010-10-22T15:16:14.463265Z", "url": "https://files.pythonhosted.org/packages/bc/01/488c94ee36c347080ec7e8d1871081da4da547a04d0a556c6e3a870ed043/parse2plone-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "25a22bdfd9005c9a00f9208bb7ac4bfb", "sha256": "0cbe28a0e91e1a4540dbfcc33f1dc265553fb535a6630f248e392884ec59ea26"}, "downloads": -1, "filename": "parse2plone-0.3.zip", "has_sig": false, "md5_digest": "25a22bdfd9005c9a00f9208bb7ac4bfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12492, "upload_time": "2010-10-22T15:18:49", "upload_time_iso_8601": "2010-10-22T15:18:49.729592Z", "url": "https://files.pythonhosted.org/packages/bf/1e/3d0f1c16ce361e576dd023502e825c93ce3c57ea058c6c78c298f549747d/parse2plone-0.3.zip", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "45933094608562f488452ef284d0c977", "sha256": "2737f9f119c06d36a77871bfe2e2e618927f49cdeb61df99dd4ee0aecb880db5"}, "downloads": -1, "filename": "parse2plone-0.4.zip", "has_sig": false, "md5_digest": "45933094608562f488452ef284d0c977", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12966, "upload_time": "2010-10-22T15:26:49", "upload_time_iso_8601": "2010-10-22T15:26:49.034511Z", "url": "https://files.pythonhosted.org/packages/ab/98/32c2cd99a9c1d9f24dbc7484c2e76209d6134ca85ef53bab3eac1939e97b/parse2plone-0.4.zip", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "c820d15916fce6c49281d97ec9e6a0ea", "sha256": "165f34e68c17e5b8b4c0dcd85d85cfbdfff3917478ee0bfd5b95b35a01facf01"}, "downloads": -1, "filename": "parse2plone-0.5.zip", "has_sig": false, "md5_digest": "c820d15916fce6c49281d97ec9e6a0ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12781, "upload_time": "2010-10-22T15:30:08", "upload_time_iso_8601": "2010-10-22T15:30:08.347010Z", "url": "https://files.pythonhosted.org/packages/2f/06/afc20ecea171b29dffbde8ab21d187a1565cce826dfa5940ceeb0117dfc9/parse2plone-0.5.zip", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "9283d0f4c18f53f4abeb3b874b258e3c", "sha256": "fd7874973461ce6bdbc323df6ba6e44e08864ee7f59385ed49fb0449bd8826a4"}, "downloads": -1, "filename": "parse2plone-0.6.zip", "has_sig": false, "md5_digest": "9283d0f4c18f53f4abeb3b874b258e3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17811, "upload_time": "2010-10-25T20:33:31", "upload_time_iso_8601": "2010-10-25T20:33:31.148993Z", "url": "https://files.pythonhosted.org/packages/73/41/23dd0172003f59ccf2bb6306216eac5cdea53d9e3a7cfe24ba9eec722080/parse2plone-0.6.zip", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "799564c58bb1b5cb4260fd1052d2128e", "sha256": "919319950aa27bd9b012dd7f5009d63e401c0aec52cd79d36cb4ee81e912a8fd"}, "downloads": -1, "filename": "parse2plone-0.7.zip", "has_sig": false, "md5_digest": "799564c58bb1b5cb4260fd1052d2128e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18321, "upload_time": "2010-10-25T22:30:13", "upload_time_iso_8601": "2010-10-25T22:30:13.494613Z", "url": "https://files.pythonhosted.org/packages/db/a4/3d2ef509fff6f681b3f55d6f0eb00d42ee0cc9f1d30cea8240c6ac968f11/parse2plone-0.7.zip", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "8c302e2b3d881417554d923f424d9aec", "sha256": "6f999624c2315e40f15cef7d8c23f1d9ec18902c9e099037bab2faa5378634aa"}, "downloads": -1, "filename": "parse2plone-0.8.zip", "has_sig": false, "md5_digest": "8c302e2b3d881417554d923f424d9aec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22695, "upload_time": "2010-10-27T21:34:53", "upload_time_iso_8601": "2010-10-27T21:34:53.782097Z", "url": "https://files.pythonhosted.org/packages/75/df/e9571e9226db3a4963e7ef5a985f4f97f63c559c688e651f9db8743fc014/parse2plone-0.8.zip", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "69dc8395a9960c7b320bcf3bed83b4e3", "sha256": "fe7619a776c85d988dd95f02feb46191886aed729849a42094196451c7ea6a7c"}, "downloads": -1, "filename": "parse2plone-0.8.1.zip", "has_sig": false, "md5_digest": "69dc8395a9960c7b320bcf3bed83b4e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26075, "upload_time": "2010-10-30T05:00:18", "upload_time_iso_8601": "2010-10-30T05:00:18.507106Z", "url": "https://files.pythonhosted.org/packages/6a/6f/195bf35728f3e6e54a47cf2a608d5b4bce2e0421647e1c0ade1238f52837/parse2plone-0.8.1.zip", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "a16577b5972e38b798759cfa035dc636", "sha256": "cbc44840e2c3b7aa0f45081a4d1ea71c2aedd65e925d173a2706bf2836002744"}, "downloads": -1, "filename": "parse2plone-0.8.2.zip", "has_sig": false, "md5_digest": "a16577b5972e38b798759cfa035dc636", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32967, "upload_time": "2010-11-02T15:30:09", "upload_time_iso_8601": "2010-11-02T15:30:09.529196Z", "url": "https://files.pythonhosted.org/packages/e2/66/58421b332577b8f260250bde1e6f7e192703587d0a71d44f8bc3eb734333/parse2plone-0.8.2.zip", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "e885667a6cccaad9e5f4d23c766f89f0", "sha256": "59fb2c4b81ba1c69e4515b4c05ed0d6104c327e2170e2b8c079febc1bd4c3716"}, "downloads": -1, "filename": "parse2plone-0.9.0.zip", "has_sig": false, "md5_digest": "e885667a6cccaad9e5f4d23c766f89f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35627, "upload_time": "2010-11-03T23:35:28", "upload_time_iso_8601": "2010-11-03T23:35:28.976002Z", "url": "https://files.pythonhosted.org/packages/d3/be/f8b1322b6b436c932d24ab0b1c3d423fe9e18963ff5eec87cd02a07d7eeb/parse2plone-0.9.0.zip", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "2e9d5c35c08957741f2e2070aabf2e48", "sha256": "7a90fc5e52958a043a784d07ef88ca1efb50c87e3f491fdccbb34e4d398f6ebf"}, "downloads": -1, "filename": "parse2plone-0.9.1.zip", "has_sig": false, "md5_digest": "2e9d5c35c08957741f2e2070aabf2e48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35627, "upload_time": "2010-11-03T23:40:13", "upload_time_iso_8601": "2010-11-03T23:40:13.345281Z", "url": "https://files.pythonhosted.org/packages/28/f2/3a34491ded1bd30a60e18746c54bcf0918d30a17075d4fbe9b66791c4d75/parse2plone-0.9.1.zip", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "78d1daba633d2058ed59a2d25881983a", "sha256": "654af6606a7ce50630ab2a30f7231612c16e98c1ab9a72a47e3e83cb0d0da39e"}, "downloads": -1, "filename": "parse2plone-0.9.2.zip", "has_sig": false, "md5_digest": "78d1daba633d2058ed59a2d25881983a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35677, "upload_time": "2010-11-03T23:42:59", "upload_time_iso_8601": "2010-11-03T23:42:59.575460Z", "url": "https://files.pythonhosted.org/packages/2b/29/f189e4ce4b874137ba13a05cbbe4dc2cf72f36bbe85f41a682e938b8f8e5/parse2plone-0.9.2.zip", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "ec36f24867026c224c472dabaf16ef6f", "sha256": "e278dc4258ceccbb7293a61ea96133689aac32a0e885b3cfc1491085f32e00fc"}, "downloads": -1, "filename": "parse2plone-0.9.3.zip", "has_sig": false, "md5_digest": "ec36f24867026c224c472dabaf16ef6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36449, "upload_time": "2010-11-05T02:51:51", "upload_time_iso_8601": "2010-11-05T02:51:51.115156Z", "url": "https://files.pythonhosted.org/packages/9f/40/5d412d5a4db96b74c255a16e7fb08cb715e315619e9fb338faecf154e81d/parse2plone-0.9.3.zip", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "35df575831074e496de8fa798bb61834", "sha256": "53df6b8bd9f880e7acf05bb2f310eff34b3d5a90dae861e3833ae60fb17b2dae"}, "downloads": -1, "filename": "parse2plone-0.9.4.zip", "has_sig": false, "md5_digest": "35df575831074e496de8fa798bb61834", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39832, "upload_time": "2010-11-06T13:56:23", "upload_time_iso_8601": "2010-11-06T13:56:23.403110Z", "url": "https://files.pythonhosted.org/packages/55/81/5e2d2a9948076aab4a19db5c2dc0485ac25cf83174c0fc1cbd9c1a5d395d/parse2plone-0.9.4.zip", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "11e99c99002017a956d0e9f7cec5d136", "sha256": "eb7b944ad0123a258ca64bd04d4244dee1f2761907541f17e37244a4bdac35c3"}, "downloads": -1, "filename": "parse2plone-0.9.5.zip", "has_sig": false, "md5_digest": "11e99c99002017a956d0e9f7cec5d136", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41954, "upload_time": "2010-11-09T15:19:10", "upload_time_iso_8601": "2010-11-09T15:19:10.344768Z", "url": "https://files.pythonhosted.org/packages/19/ac/c79dd24c105762c028d7b95c27de76e9e63d7d4561010448900aa275807d/parse2plone-0.9.5.zip", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "e3765c0a61138f0adda74fc3ab7cf07e", "sha256": "475152e8c0c0badc3d0b7e9d61b54fc24577972d485bdf4cc72cc7c2f422f11d"}, "downloads": -1, "filename": "parse2plone-0.9.6.zip", "has_sig": false, "md5_digest": "e3765c0a61138f0adda74fc3ab7cf07e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48061, "upload_time": "2010-11-10T05:16:20", "upload_time_iso_8601": "2010-11-10T05:16:20.802138Z", "url": "https://files.pythonhosted.org/packages/82/81/d4381eab08df8ecaa25015b14823012bd0b46f5a94eb6b638c68eaf1d541/parse2plone-0.9.6.zip", "yanked": false}], "0.9.7": [{"comment_text": "", "digests": {"md5": "354fbe0b9c4b6e29edef9176ca4d3bdc", "sha256": "410971d802ebe47b37d18bcc31a097941e5469b8450172d8ec273c5e0096aea2"}, "downloads": -1, "filename": "parse2plone-0.9.7.zip", "has_sig": false, "md5_digest": "354fbe0b9c4b6e29edef9176ca4d3bdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48350, "upload_time": "2010-11-10T06:03:23", "upload_time_iso_8601": "2010-11-10T06:03:23.565943Z", "url": "https://files.pythonhosted.org/packages/1d/60/0d9de5544f4baee19ef5c814065cafb183c43a17157d3da0201f2243dd88/parse2plone-0.9.7.zip", "yanked": false}], "0.9.8": [{"comment_text": "", "digests": {"md5": "842c52bab194c623f89ca90d5d8709a7", "sha256": "113d0727b4325824f4afd6e51bfbc676c8f77fb2f9b6eb9b177947e8be10f0eb"}, "downloads": -1, "filename": "parse2plone-0.9.8.zip", "has_sig": false, "md5_digest": "842c52bab194c623f89ca90d5d8709a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61353, "upload_time": "2010-11-13T04:38:48", "upload_time_iso_8601": "2010-11-13T04:38:48.469734Z", "url": "https://files.pythonhosted.org/packages/46/45/b11adbedd99db705661890cafc2a26d8f19d31ff0637f13f3e3a2ac19934/parse2plone-0.9.8.zip", "yanked": false}], "0.9.9": [{"comment_text": "", "digests": {"md5": "73ab880033513672db3347e1ed5cd6ea", "sha256": "a1f2bad273fdfd20e3153f988674c117851ab577ad7149fc16bd705680b9fa06"}, "downloads": -1, "filename": "parse2plone-0.9.9.zip", "has_sig": false, "md5_digest": "73ab880033513672db3347e1ed5cd6ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64205, "upload_time": "2010-11-16T09:42:41", "upload_time_iso_8601": "2010-11-16T09:42:41.166350Z", "url": "https://files.pythonhosted.org/packages/9a/6e/9b02294a7f02805f79c2b67311e5e2da19eec92df38dc7becef0ebea0656/parse2plone-0.9.9.zip", "yanked": false}], "1.0a1": [{"comment_text": "", "digests": {"md5": "78fe79460cc9b6df6a8f68f8df5907ba", "sha256": "b1266ec42555e128c0563c547cf8e149e19dc7f36aca5209ac2851e0764e579f"}, "downloads": -1, "filename": "parse2plone-1.0a1.zip", "has_sig": false, "md5_digest": "78fe79460cc9b6df6a8f68f8df5907ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69348, "upload_time": "2010-11-17T14:51:20", "upload_time_iso_8601": "2010-11-17T14:51:20.078008Z", "url": "https://files.pythonhosted.org/packages/3c/3b/b2b4f1d130475926b06994666176388ca45eb0497a94bdc08c9b6ac4f65f/parse2plone-1.0a1.zip", "yanked": false}], "1.0a2": [{"comment_text": "", "digests": {"md5": "22303d570ea949c3b69aae3aaddade49", "sha256": "ab642239cd707d01481c51bc8a25130b9f19d37ba42162ce6537159c88f7b31d"}, "downloads": -1, "filename": "parse2plone-1.0a2.zip", "has_sig": false, "md5_digest": "22303d570ea949c3b69aae3aaddade49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69396, "upload_time": "2010-11-17T14:56:12", "upload_time_iso_8601": "2010-11-17T14:56:12.645884Z", "url": "https://files.pythonhosted.org/packages/10/fb/67248c3c086b028e993fbd92394e71ffc92b083ce1fdcbdf253c5ddb22b3/parse2plone-1.0a2.zip", "yanked": false}], "1.0a3": [{"comment_text": "", "digests": {"md5": "d6704818941076808d6bc761523d7570", "sha256": "f4942d38b019be70604dd5b9cdff37103169c4922d512bd5d36c12a4e48b99c4"}, "downloads": -1, "filename": "parse2plone-1.0a3.zip", "has_sig": false, "md5_digest": "d6704818941076808d6bc761523d7570", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69821, "upload_time": "2010-11-17T15:29:56", "upload_time_iso_8601": "2010-11-17T15:29:56.411551Z", "url": "https://files.pythonhosted.org/packages/b1/01/623bc47b7402063db3079030082a2396cf2c20b9df42377d597195b00926/parse2plone-1.0a3.zip", "yanked": false}], "1.0a4": [{"comment_text": "", "digests": {"md5": "25928e6b0d97212e8638856fbc7df938", "sha256": "94067f27618818483716a093273a4e0485fb6af9f88025f7b4941114482d5974"}, "downloads": -1, "filename": "parse2plone-1.0a4.zip", "has_sig": false, "md5_digest": "25928e6b0d97212e8638856fbc7df938", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70112, "upload_time": "2011-01-12T15:18:42", "upload_time_iso_8601": "2011-01-12T15:18:42.199609Z", "url": "https://files.pythonhosted.org/packages/c7/8d/669a14c5fa967b1466ee5460942e396bb39e09828555e2188b3d3de679ef/parse2plone-1.0a4.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "73ab880033513672db3347e1ed5cd6ea", "sha256": "a1f2bad273fdfd20e3153f988674c117851ab577ad7149fc16bd705680b9fa06"}, "downloads": -1, "filename": "parse2plone-0.9.9.zip", "has_sig": false, "md5_digest": "73ab880033513672db3347e1ed5cd6ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64205, "upload_time": "2010-11-16T09:42:41", "upload_time_iso_8601": "2010-11-16T09:42:41.166350Z", "url": "https://files.pythonhosted.org/packages/9a/6e/9b02294a7f02805f79c2b67311e5e2da19eec92df38dc7becef0ebea0656/parse2plone-0.9.9.zip", "yanked": false}], "timestamp": "Fri May  8 02:58:23 2020"}