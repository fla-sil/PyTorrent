{"info": {"author": "G. Worrall", "author_email": "worrall.george@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "getsentinel\n===========\n\n## A download, process, and masking pipeline for ESA Sentinel-X data.\n\n### Author: G. Worrall\n\n#### Requirements: \n                  Python 3.6\n                  requests\n                  clint\n                  pyshp\n                  geojson\n                  shapely\n                  osgeo\n                  numpy\n                  rasterio\n\nExample Usage:\n\n```\nfrom getsentinel import gs_downloader, gs_stacker\nfrom datetime import date\n\n# download Sentinel-2 products for a region of interest.\nstart_date = date(2018, 5, 6)\nend_date = date(2018, 5, 8)\nROI = '/path/to/roi.geojson'\n\nquery = gs_downloader.Query('S2', start_date, end_date, ROI)\nquery.product_details('BEST', cloudcoverlimit=50) \n\n# submit a query to the ESA database\nhub = gs_downloader.CopernicusHubConnection()\ntotal, products = hub.submit_query(query)\n# download all the returned products\nhub.download_products(products)\n\n# process all the downloaded products\nprocessed = gs_processor.batch_process(products)\n\n# extract the data into a stack\nstacker = gs_stacker.Stacker(products,\n                             ROI,\n                             start_date,\n                             end_date)\n\n# set the bands to extract from the S2 products\nstacker.set_bands(s2_band_list=['TCI'], s2_resolution = 10)\n# check the Sentinel weather masks for ROI coverage\nstacker.check_weather(cloud=20, snow=20)\n\ndata = stacker.generate_stacks()\n\n```\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/wirrell/getsentinel", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "getsentinel", "package_url": "https://pypi.org/project/getsentinel/", "platform": "", "project_url": "https://pypi.org/project/getsentinel/", "project_urls": {"Documentation": "https://getsentinel.readthedocs.io/", "Homepage": "https://bitbucket.org/wirrell/getsentinel", "Source": "https://www.bitbucket.org/wirrell/getsentinel"}, "release_url": "https://pypi.org/project/getsentinel/0.1/", "requires_dist": ["requests", "clint", "pyshp", "geojson", "shapely", "numpy", "rasterio"], "requires_python": ">=3.4", "summary": "An ESA Sentinel data pipeline.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>getsentinel</h1>\n<h2>A download, process, and masking pipeline for ESA Sentinel-X data.</h2>\n<h3>Author: G. Worrall</h3>\n<h4>Requirements:</h4>\n<pre><code>              Python 3.6\n              requests\n              clint\n              pyshp\n              geojson\n              shapely\n              osgeo\n              numpy\n              rasterio\n</code></pre>\n<p>Example Usage:</p>\n<pre><code>from getsentinel import gs_downloader, gs_stacker\nfrom datetime import date\n\n# download Sentinel-2 products for a region of interest.\nstart_date = date(2018, 5, 6)\nend_date = date(2018, 5, 8)\nROI = '/path/to/roi.geojson'\n\nquery = gs_downloader.Query('S2', start_date, end_date, ROI)\nquery.product_details('BEST', cloudcoverlimit=50) \n\n# submit a query to the ESA database\nhub = gs_downloader.CopernicusHubConnection()\ntotal, products = hub.submit_query(query)\n# download all the returned products\nhub.download_products(products)\n\n# process all the downloaded products\nprocessed = gs_processor.batch_process(products)\n\n# extract the data into a stack\nstacker = gs_stacker.Stacker(products,\n                             ROI,\n                             start_date,\n                             end_date)\n\n# set the bands to extract from the S2 products\nstacker.set_bands(s2_band_list=['TCI'], s2_resolution = 10)\n# check the Sentinel weather masks for ROI coverage\nstacker.check_weather(cloud=20, snow=20)\n\ndata = stacker.generate_stacks()\n\n</code></pre>\n\n          </div>"}, "last_serial": 4240788, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b939b360f56b89df5547fa2ab96f1935", "sha256": "35979187c341a4e1b907680be69ad0692de9516e329613f3819b0e7634425d5f"}, "downloads": -1, "filename": "getsentinel-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b939b360f56b89df5547fa2ab96f1935", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.4", "size": 26707, "upload_time": "2018-09-05T11:57:04", "upload_time_iso_8601": "2018-09-05T11:57:04.246332Z", "url": "https://files.pythonhosted.org/packages/c6/e3/332ce9bce2fc0f2e855a90febf65bce8eb96f18e2851ec32e5412e6dbdfd/getsentinel-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b58d50283c44cfc9385fe6d61a60ddbc", "sha256": "5dd6910b0b418f157e25c80cbc7a0b1f0c389d30a01e91bb5afe3f644889fece"}, "downloads": -1, "filename": "getsentinel-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b58d50283c44cfc9385fe6d61a60ddbc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 26702, "upload_time": "2018-09-05T11:57:06", "upload_time_iso_8601": "2018-09-05T11:57:06.106454Z", "url": "https://files.pythonhosted.org/packages/7f/b4/7e8def5ee50180965e500fdf6627457c4779156aff7c0e5b881dccc6a8cf/getsentinel-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21150b5476291e26a3a451bc4f66139c", "sha256": "55afa6b359b9635bca9484f9150328fe6618dfaddbbcb0cb5d1652f8df897cc8"}, "downloads": -1, "filename": "getsentinel-0.1.tar.gz", "has_sig": false, "md5_digest": "21150b5476291e26a3a451bc4f66139c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 24003, "upload_time": "2018-09-05T11:57:07", "upload_time_iso_8601": "2018-09-05T11:57:07.520467Z", "url": "https://files.pythonhosted.org/packages/18/fe/6f27ec8ff2eae833d686ee0773001c9dce9d62917914875fbf26f923ec35/getsentinel-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b939b360f56b89df5547fa2ab96f1935", "sha256": "35979187c341a4e1b907680be69ad0692de9516e329613f3819b0e7634425d5f"}, "downloads": -1, "filename": "getsentinel-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b939b360f56b89df5547fa2ab96f1935", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.4", "size": 26707, "upload_time": "2018-09-05T11:57:04", "upload_time_iso_8601": "2018-09-05T11:57:04.246332Z", "url": "https://files.pythonhosted.org/packages/c6/e3/332ce9bce2fc0f2e855a90febf65bce8eb96f18e2851ec32e5412e6dbdfd/getsentinel-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b58d50283c44cfc9385fe6d61a60ddbc", "sha256": "5dd6910b0b418f157e25c80cbc7a0b1f0c389d30a01e91bb5afe3f644889fece"}, "downloads": -1, "filename": "getsentinel-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b58d50283c44cfc9385fe6d61a60ddbc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 26702, "upload_time": "2018-09-05T11:57:06", "upload_time_iso_8601": "2018-09-05T11:57:06.106454Z", "url": "https://files.pythonhosted.org/packages/7f/b4/7e8def5ee50180965e500fdf6627457c4779156aff7c0e5b881dccc6a8cf/getsentinel-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21150b5476291e26a3a451bc4f66139c", "sha256": "55afa6b359b9635bca9484f9150328fe6618dfaddbbcb0cb5d1652f8df897cc8"}, "downloads": -1, "filename": "getsentinel-0.1.tar.gz", "has_sig": false, "md5_digest": "21150b5476291e26a3a451bc4f66139c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 24003, "upload_time": "2018-09-05T11:57:07", "upload_time_iso_8601": "2018-09-05T11:57:07.520467Z", "url": "https://files.pythonhosted.org/packages/18/fe/6f27ec8ff2eae833d686ee0773001c9dce9d62917914875fbf26f923ec35/getsentinel-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:43 2020"}