{"info": {"author": "Thomas Moreau", "author_email": "thomas.moreau.2010@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Thread-pool Controls [![Build Status](https://dev.azure.com/joblib/threadpoolctl/_apis/build/status/joblib.threadpoolctl?branchName=master)](https://dev.azure.com/joblib/threadpoolctl/_build/latest?definitionId=1&branchName=master) [![codecov](https://codecov.io/gh/joblib/threadpoolctl/branch/master/graph/badge.svg)](https://codecov.io/gh/joblib/threadpoolctl)\n\nPython helpers to limit the number of threads used in the\nthreadpool-backed of common native libraries used for scientific\ncomputing and data science (e.g. BLAS and OpenMP).\n\nFine control of the underlying thread-pool size can be useful in\nworkloads that involve nested parallelism so as to mitigate\noversubscription issues.\n\n## Installation\n\n- For users, install the last published version from PyPI:\n\n  ```bash\n  pip install threadpoolctl\n  ```\n\n- For contributors, install from the source repository in developer\n  mode:\n\n  ```bash\n  pip install -r dev-requirements.txt\n  flit install --symlink\n  ```\n\n  then you run the tests with pytest:\n\n  ```bash\n  pytest\n  ```\n\n## Usage\n\n### Runtime Introspection\n\nIntrospect the current state of the threadpool-enabled runtime libraries\nthat are loaded when importing Python packages:\n\n```python\n>>> from threadpoolctl import threadpool_info\n>>> from pprint import pprint\n>>> pprint(threadpool_info())\n[]\n\n>>> import numpy\n>>> pprint(threadpool_info())\n[{'filepath': '/opt/venvs/py37/lib/python3.7/site-packages/numpy/.libs/libopenblasp-r0-382c8f3a.3.5.dev.so',\n  'internal_api': 'openblas',\n  'num_threads': 4,\n  'prefix': 'libopenblas',\n  'user_api': 'blas',\n  'version': '0.3.5.dev'}]\n\n>>> import xgboost\n>>> pprint(threadpool_info())\n[{'filepath': '/opt/venvs/py37/lib/python3.7/site-packages/numpy/.libs/libopenblasp-r0-382c8f3a.3.5.dev.so',\n  'internal_api': 'openblas',\n  'num_threads': 4,\n  'prefix': 'libopenblas',\n  'user_api': 'blas',\n  'version': '0.3.5.dev'},\n {'filepath': '/opt/venvs/py37/lib/python3.7/site-packages/scipy/.libs/libopenblasp-r0-8dca6697.3.0.dev.so',\n  'internal_api': 'openblas',\n  'num_threads': 4,\n  'prefix': 'libopenblas',\n  'user_api': 'blas',\n  'version': None},\n {'filepath': '/usr/lib/x86_64-linux-gnu/libgomp.so.1',\n  'internal_api': 'openmp',\n  'num_threads': 4,\n  'prefix': 'libgomp',\n  'user_api': 'openmp',\n  'version': None}]\n```\n\n### Set the maximum size of thread-pools\n\nControl the number of threads used by the underlying runtime libraries\nin specific sections of your Python program:\n\n```python\nfrom threadpoolctl import threadpool_limits\nimport numpy as np\n\n\nwith threadpool_limits(limits=1, user_api='blas'):\n    # In this block, calls to blas implementation (like openblas or MKL)\n    # will be limited to use only one thread. They can thus be used jointly\n    # with thread-parallelism.\n    a = np.random.randn(1000, 1000)\n    a_squared = a @ a\n```\n\n### Known limitation\n\n`threadpool_limits` does not act as expected in nested parallel loops\nmanaged by distinct OpenMP runtime implementations (for instance libgomp\nfrom GCC and libomp from clang/llvm or libiomp from ICC).\n\nSee the `test_openmp_nesting()` function in `tests/test_threadpoolctl.py`\nfor an example.\n\n## Maintainers\n\nTo make a release:\n\nBump the version number (`__version__`) in `threadpoolctl.py`.\n\nBuild the distribution archives:\n\n```bash\npip install flit\nflit build\n```\n\nCheck the contents of `dist/`.\n\nIf everything is fine, make a commit for the release, tag it, push the\ntag to github and then:\n\n```bash\nflit publish\n```\n\n### Credits\n\nThe initial dynamic library introspection code was written by @anton-malakhov\nfor the smp package available at https://github.com/IntelPython/smp .\n\nthreadpoolctl extends this for other operationg systems. Contrary to smp,\nthreadpoolctl does not attempt to limit the size of Python multiprocessing\npools (threads or processes) or set operating system-level CPU affinity\nconstraints: threadpoolctl only interacts with native libraries via their\npublic runtime APIs.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/joblib/threadpoolctl", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "threadpoolctl", "package_url": "https://pypi.org/project/threadpoolctl/", "platform": "", "project_url": "https://pypi.org/project/threadpoolctl/", "project_urls": {"Homepage": "https://github.com/joblib/threadpoolctl"}, "release_url": "https://pypi.org/project/threadpoolctl/2.0.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "threadpoolctl", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Thread-pool Controls <a href=\"https://dev.azure.com/joblib/threadpoolctl/_build/latest?definitionId=1&amp;branchName=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a68d7e29d8cecfa698a843e96a7acc10c116073a/68747470733a2f2f6465762e617a7572652e636f6d2f6a6f626c69622f746872656164706f6f6c63746c2f5f617069732f6275696c642f7374617475732f6a6f626c69622e746872656164706f6f6c63746c3f6272616e63684e616d653d6d6173746572\"></a> <a href=\"https://codecov.io/gh/joblib/threadpoolctl\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d07700eda72841aa6ebbf4fa6909445909fc412f/68747470733a2f2f636f6465636f762e696f2f67682f6a6f626c69622f746872656164706f6f6c63746c2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></h1>\n<p>Python helpers to limit the number of threads used in the\nthreadpool-backed of common native libraries used for scientific\ncomputing and data science (e.g. BLAS and OpenMP).</p>\n<p>Fine control of the underlying thread-pool size can be useful in\nworkloads that involve nested parallelism so as to mitigate\noversubscription issues.</p>\n<h2>Installation</h2>\n<ul>\n<li>\n<p>For users, install the last published version from PyPI:</p>\n<pre>pip install threadpoolctl\n</pre>\n</li>\n<li>\n<p>For contributors, install from the source repository in developer\nmode:</p>\n<pre>pip install -r dev-requirements.txt\nflit install --symlink\n</pre>\n<p>then you run the tests with pytest:</p>\n<pre>pytest\n</pre>\n</li>\n</ul>\n<h2>Usage</h2>\n<h3>Runtime Introspection</h3>\n<p>Introspect the current state of the threadpool-enabled runtime libraries\nthat are loaded when importing Python packages:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">threadpoolctl</span> <span class=\"kn\">import</span> <span class=\"n\">threadpool_info</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">threadpool_info</span><span class=\"p\">())</span>\n<span class=\"p\">[]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">threadpool_info</span><span class=\"p\">())</span>\n<span class=\"p\">[{</span><span class=\"s1\">'filepath'</span><span class=\"p\">:</span> <span class=\"s1\">'/opt/venvs/py37/lib/python3.7/site-packages/numpy/.libs/libopenblasp-r0-382c8f3a.3.5.dev.so'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'internal_api'</span><span class=\"p\">:</span> <span class=\"s1\">'openblas'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'num_threads'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n  <span class=\"s1\">'prefix'</span><span class=\"p\">:</span> <span class=\"s1\">'libopenblas'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'user_api'</span><span class=\"p\">:</span> <span class=\"s1\">'blas'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"s1\">'0.3.5.dev'</span><span class=\"p\">}]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">xgboost</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">threadpool_info</span><span class=\"p\">())</span>\n<span class=\"p\">[{</span><span class=\"s1\">'filepath'</span><span class=\"p\">:</span> <span class=\"s1\">'/opt/venvs/py37/lib/python3.7/site-packages/numpy/.libs/libopenblasp-r0-382c8f3a.3.5.dev.so'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'internal_api'</span><span class=\"p\">:</span> <span class=\"s1\">'openblas'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'num_threads'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n  <span class=\"s1\">'prefix'</span><span class=\"p\">:</span> <span class=\"s1\">'libopenblas'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'user_api'</span><span class=\"p\">:</span> <span class=\"s1\">'blas'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"s1\">'0.3.5.dev'</span><span class=\"p\">},</span>\n <span class=\"p\">{</span><span class=\"s1\">'filepath'</span><span class=\"p\">:</span> <span class=\"s1\">'/opt/venvs/py37/lib/python3.7/site-packages/scipy/.libs/libopenblasp-r0-8dca6697.3.0.dev.so'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'internal_api'</span><span class=\"p\">:</span> <span class=\"s1\">'openblas'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'num_threads'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n  <span class=\"s1\">'prefix'</span><span class=\"p\">:</span> <span class=\"s1\">'libopenblas'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'user_api'</span><span class=\"p\">:</span> <span class=\"s1\">'blas'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">},</span>\n <span class=\"p\">{</span><span class=\"s1\">'filepath'</span><span class=\"p\">:</span> <span class=\"s1\">'/usr/lib/x86_64-linux-gnu/libgomp.so.1'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'internal_api'</span><span class=\"p\">:</span> <span class=\"s1\">'openmp'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'num_threads'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n  <span class=\"s1\">'prefix'</span><span class=\"p\">:</span> <span class=\"s1\">'libgomp'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'user_api'</span><span class=\"p\">:</span> <span class=\"s1\">'openmp'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">}]</span>\n</pre>\n<h3>Set the maximum size of thread-pools</h3>\n<p>Control the number of threads used by the underlying runtime libraries\nin specific sections of your Python program:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">threadpoolctl</span> <span class=\"kn\">import</span> <span class=\"n\">threadpool_limits</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n\n<span class=\"k\">with</span> <span class=\"n\">threadpool_limits</span><span class=\"p\">(</span><span class=\"n\">limits</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">user_api</span><span class=\"o\">=</span><span class=\"s1\">'blas'</span><span class=\"p\">):</span>\n    <span class=\"c1\"># In this block, calls to blas implementation (like openblas or MKL)</span>\n    <span class=\"c1\"># will be limited to use only one thread. They can thus be used jointly</span>\n    <span class=\"c1\"># with thread-parallelism.</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">)</span>\n    <span class=\"n\">a_squared</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">@</span> <span class=\"n\">a</span>\n</pre>\n<h3>Known limitation</h3>\n<p><code>threadpool_limits</code> does not act as expected in nested parallel loops\nmanaged by distinct OpenMP runtime implementations (for instance libgomp\nfrom GCC and libomp from clang/llvm or libiomp from ICC).</p>\n<p>See the <code>test_openmp_nesting()</code> function in <code>tests/test_threadpoolctl.py</code>\nfor an example.</p>\n<h2>Maintainers</h2>\n<p>To make a release:</p>\n<p>Bump the version number (<code>__version__</code>) in <code>threadpoolctl.py</code>.</p>\n<p>Build the distribution archives:</p>\n<pre>pip install flit\nflit build\n</pre>\n<p>Check the contents of <code>dist/</code>.</p>\n<p>If everything is fine, make a commit for the release, tag it, push the\ntag to github and then:</p>\n<pre>flit publish\n</pre>\n<h3>Credits</h3>\n<p>The initial dynamic library introspection code was written by @anton-malakhov\nfor the smp package available at <a href=\"https://github.com/IntelPython/smp\" rel=\"nofollow\">https://github.com/IntelPython/smp</a> .</p>\n<p>threadpoolctl extends this for other operationg systems. Contrary to smp,\nthreadpoolctl does not attempt to limit the size of Python multiprocessing\npools (threads or processes) or set operating system-level CPU affinity\nconstraints: threadpoolctl only interacts with native libraries via their\npublic runtime APIs.</p>\n\n          </div>"}, "last_serial": 6248615, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0699b4185c5ffc61b5b72a05a7aa70f6", "sha256": "000a0d6a4e83e0f046a9994ea103932bab20a51108e4d79fca3ad35b643d5dd2"}, "downloads": -1, "filename": "threadpoolctl-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0699b4185c5ffc61b5b72a05a7aa70f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 24350, "upload_time": "2019-06-03T13:48:32", "upload_time_iso_8601": "2019-06-03T13:48:32.327338Z", "url": "https://files.pythonhosted.org/packages/05/1e/b36153c14f32adf6431ef66adf0954c7b907a4fc1eb845f34fa135d9674a/threadpoolctl-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "247092b13ab8ae0f4f7c60e2a974b464", "sha256": "e0d65c8883f8074607624d9767539ea9bb763ea8d7ce2b403ead10eab01871bc"}, "downloads": -1, "filename": "threadpoolctl-1.0.0.tar.gz", "has_sig": false, "md5_digest": "247092b13ab8ae0f4f7c60e2a974b464", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17520, "upload_time": "2019-06-03T13:48:34", "upload_time_iso_8601": "2019-06-03T13:48:34.948718Z", "url": "https://files.pythonhosted.org/packages/16/66/9c8b241425ddce72873e356d593ecced09ccf5c57148173a055b5be98c4b/threadpoolctl-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "290b79daaeb1832d73263450eb2479a1", "sha256": "fd69f43f4d6e8d861b4e1715a9c909cb01973220b21493b6bb261a1d1172d3d8"}, "downloads": -1, "filename": "threadpoolctl-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "290b79daaeb1832d73263450eb2479a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 26257, "upload_time": "2019-09-12T15:46:44", "upload_time_iso_8601": "2019-09-12T15:46:44.190207Z", "url": "https://files.pythonhosted.org/packages/bd/09/88c9d47193bffd0925e4495f8074e424d7d93de5dbd97d893bc429175af7/threadpoolctl-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2744693260320318c7fe7d90f98266bf", "sha256": "86f330c5ead7fd2d2143e76c4a4cc032d5a2f9cd4c4857fa06847cae2211ab82"}, "downloads": -1, "filename": "threadpoolctl-1.1.0.tar.gz", "has_sig": false, "md5_digest": "2744693260320318c7fe7d90f98266bf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 19886, "upload_time": "2019-09-12T15:46:45", "upload_time_iso_8601": "2019-09-12T15:46:45.621875Z", "url": "https://files.pythonhosted.org/packages/d3/e3/20510e8a060fe36545752a54375d85f77232f7094a7d85824c24cffe7e0a/threadpoolctl-1.1.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "281b4676b53611812e3f3d7a0329ff24", "sha256": "72eed211bb25feecc3244c5c26b015579777a466589e9b854c66f18d6deaeee1"}, "downloads": -1, "filename": "threadpoolctl-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "281b4676b53611812e3f3d7a0329ff24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 34003, "upload_time": "2019-12-05T17:37:27", "upload_time_iso_8601": "2019-12-05T17:37:27.700906Z", "url": "https://files.pythonhosted.org/packages/db/09/cab2f398e28e9f183714afde872b2ce23629f5833e467b151f18e1e08908/threadpoolctl-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99bfceb7a7e9547c0ae98d74e382f328", "sha256": "48b3e3e9ee079d6b5295c65cbe255b36a3026afc6dde3fb49c085cd0c004bbcf"}, "downloads": -1, "filename": "threadpoolctl-2.0.0.tar.gz", "has_sig": false, "md5_digest": "99bfceb7a7e9547c0ae98d74e382f328", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 24617, "upload_time": "2019-12-05T17:37:33", "upload_time_iso_8601": "2019-12-05T17:37:33.370304Z", "url": "https://files.pythonhosted.org/packages/49/f9/0c328a665dc97892b867b98b94565f6c397b1c0bf92297ffc700e7b90b0f/threadpoolctl-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "281b4676b53611812e3f3d7a0329ff24", "sha256": "72eed211bb25feecc3244c5c26b015579777a466589e9b854c66f18d6deaeee1"}, "downloads": -1, "filename": "threadpoolctl-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "281b4676b53611812e3f3d7a0329ff24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 34003, "upload_time": "2019-12-05T17:37:27", "upload_time_iso_8601": "2019-12-05T17:37:27.700906Z", "url": "https://files.pythonhosted.org/packages/db/09/cab2f398e28e9f183714afde872b2ce23629f5833e467b151f18e1e08908/threadpoolctl-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99bfceb7a7e9547c0ae98d74e382f328", "sha256": "48b3e3e9ee079d6b5295c65cbe255b36a3026afc6dde3fb49c085cd0c004bbcf"}, "downloads": -1, "filename": "threadpoolctl-2.0.0.tar.gz", "has_sig": false, "md5_digest": "99bfceb7a7e9547c0ae98d74e382f328", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 24617, "upload_time": "2019-12-05T17:37:33", "upload_time_iso_8601": "2019-12-05T17:37:33.370304Z", "url": "https://files.pythonhosted.org/packages/49/f9/0c328a665dc97892b867b98b94565f6c397b1c0bf92297ffc700e7b90b0f/threadpoolctl-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:45 2020"}