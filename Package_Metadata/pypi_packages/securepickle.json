{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# securepickle\n\n## Why should I use `securepickle` instead of `pickle?`\n\nAs the documentation for `pickle` [explains](https://docs.python.org/3/library/pickle.html), **pickle is insecure**. If you store pickled data in a database or filesystem that could be compromised or accessed by someone with malicious intentions, you should use `securepickle`. \n\nIf you're not sure if you need it, it might be better to be safe than sorry.`securepickle` is a drop-in replacement for `pickle`, so you don't need to change any of your loading code.\n\n## Why should I use `securepickle` instead of another secure pickling solution?\n`securepickle` has 0 dependencies. It only uses the python standard library, and supports python 2 and 3.\n`securepickle` has a documented file format and promises to be backward compatible. You will be able to unpickle your data even if the `securepickle` library or the used cryptographic primitives change.\n\n## How do I use it?\n```\nimport securepickle as pickle\n# DON'T USE THIS KEY! Make sure to generate your own key randomly\nsecurepickle.set_key(\"BO4cHKNaJE0GmiShTQ8mL8oSvqBDCx2q5Xdq7iNeCaU\")\n\n...\n\npickle.loads(...)\npickle.load(...)\npickle.dump(...)\npickle.dumps(...)\n```\n\n## Where should I store my key\nMake sure you don't store the key in the same location of the pickled data. It's also recommended to not store the key on the source code.\n\n## What kind of attacks does `securepickle` prevent\n\n`securepickle` prevents [arbitrary code execution](https://en.wikipedia.org/wiki/Arbitrary_code_execution) from attackers that can modify (or directly influence) the pickled data.\nThis can happen, for example, if your database is compromised, or you store pickled files in a filesystem without regard to file access permissions.\n\n`securepickle` does **NOT** prevent random people from unpickling the pickled data, even without the key. If this is a scenario you're concerned about, you should use standard database or disk encryption mechanisms. \n\n## What's the file format\n```securepickle|<version>|<crypto primitive>|<signature>|<pickled data>```\nList of crypto primitive strings supported:\n\n  - `HMAC(SHA512)`\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/goncalopp/securepickle", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "securepickle", "package_url": "https://pypi.org/project/securepickle/", "platform": "", "project_url": "https://pypi.org/project/securepickle/", "project_urls": {"Homepage": "https://github.com/goncalopp/securepickle"}, "release_url": "https://pypi.org/project/securepickle/0.0.0/", "requires_dist": null, "requires_python": "", "summary": "Tools for secured pickling", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>securepickle</h1>\n<h2>Why should I use <code>securepickle</code> instead of <code>pickle?</code></h2>\n<p>As the documentation for <code>pickle</code> <a href=\"https://docs.python.org/3/library/pickle.html\" rel=\"nofollow\">explains</a>, <strong>pickle is insecure</strong>. If you store pickled data in a database or filesystem that could be compromised or accessed by someone with malicious intentions, you should use <code>securepickle</code>.</p>\n<p>If you're not sure if you need it, it might be better to be safe than sorry.<code>securepickle</code> is a drop-in replacement for <code>pickle</code>, so you don't need to change any of your loading code.</p>\n<h2>Why should I use <code>securepickle</code> instead of another secure pickling solution?</h2>\n<p><code>securepickle</code> has 0 dependencies. It only uses the python standard library, and supports python 2 and 3.\n<code>securepickle</code> has a documented file format and promises to be backward compatible. You will be able to unpickle your data even if the <code>securepickle</code> library or the used cryptographic primitives change.</p>\n<h2>How do I use it?</h2>\n<pre><code>import securepickle as pickle\n# DON'T USE THIS KEY! Make sure to generate your own key randomly\nsecurepickle.set_key(\"BO4cHKNaJE0GmiShTQ8mL8oSvqBDCx2q5Xdq7iNeCaU\")\n\n...\n\npickle.loads(...)\npickle.load(...)\npickle.dump(...)\npickle.dumps(...)\n</code></pre>\n<h2>Where should I store my key</h2>\n<p>Make sure you don't store the key in the same location of the pickled data. It's also recommended to not store the key on the source code.</p>\n<h2>What kind of attacks does <code>securepickle</code> prevent</h2>\n<p><code>securepickle</code> prevents <a href=\"https://en.wikipedia.org/wiki/Arbitrary_code_execution\" rel=\"nofollow\">arbitrary code execution</a> from attackers that can modify (or directly influence) the pickled data.\nThis can happen, for example, if your database is compromised, or you store pickled files in a filesystem without regard to file access permissions.</p>\n<p><code>securepickle</code> does <strong>NOT</strong> prevent random people from unpickling the pickled data, even without the key. If this is a scenario you're concerned about, you should use standard database or disk encryption mechanisms.</p>\n<h2>What's the file format</h2>\n<p><code>securepickle|&lt;version&gt;|&lt;crypto primitive&gt;|&lt;signature&gt;|&lt;pickled data&gt;</code>\nList of crypto primitive strings supported:</p>\n<ul>\n<li><code>HMAC(SHA512)</code></li>\n</ul>\n\n          </div>"}, "last_serial": 6920969, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "5b2036204393d0dd1c8faf77f7e08994", "sha256": "71afbab75a812ccdea18b69aaeb4dcd5c7e368ad50919121f39411d4bcfae960"}, "downloads": -1, "filename": "securepickle-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5b2036204393d0dd1c8faf77f7e08994", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3938, "upload_time": "2020-03-31T15:27:03", "upload_time_iso_8601": "2020-03-31T15:27:03.777628Z", "url": "https://files.pythonhosted.org/packages/be/95/3dd26b58f40dd6f2171b3db5c2007d01123a545e03a822952c0675ff864a/securepickle-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c3324bc048c26a7cb3d17a27b460cb7", "sha256": "55f8dae0f269a9c3323994327542f13d7b99056d6f5ec89d5ed6e936419ae97f"}, "downloads": -1, "filename": "securepickle-0.0.0.tar.gz", "has_sig": false, "md5_digest": "7c3324bc048c26a7cb3d17a27b460cb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3460, "upload_time": "2020-03-31T15:27:06", "upload_time_iso_8601": "2020-03-31T15:27:06.006615Z", "url": "https://files.pythonhosted.org/packages/56/db/0ed343060467158a5349a431ceac32c7887298edf1ccf9b1d2528ac5753f/securepickle-0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b2036204393d0dd1c8faf77f7e08994", "sha256": "71afbab75a812ccdea18b69aaeb4dcd5c7e368ad50919121f39411d4bcfae960"}, "downloads": -1, "filename": "securepickle-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5b2036204393d0dd1c8faf77f7e08994", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3938, "upload_time": "2020-03-31T15:27:03", "upload_time_iso_8601": "2020-03-31T15:27:03.777628Z", "url": "https://files.pythonhosted.org/packages/be/95/3dd26b58f40dd6f2171b3db5c2007d01123a545e03a822952c0675ff864a/securepickle-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c3324bc048c26a7cb3d17a27b460cb7", "sha256": "55f8dae0f269a9c3323994327542f13d7b99056d6f5ec89d5ed6e936419ae97f"}, "downloads": -1, "filename": "securepickle-0.0.0.tar.gz", "has_sig": false, "md5_digest": "7c3324bc048c26a7cb3d17a27b460cb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3460, "upload_time": "2020-03-31T15:27:06", "upload_time_iso_8601": "2020-03-31T15:27:06.006615Z", "url": "https://files.pythonhosted.org/packages/56/db/0ed343060467158a5349a431ceac32c7887298edf1ccf9b1d2528ac5753f/securepickle-0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:55 2020"}