{"info": {"author": "The Astropy Developers", "author_email": "astropy.team@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Testing", "Topic :: Utilities"], "description": "==================\npytest-doctestplus\n==================\n\nThis package contains a plugin for the `pytest`_ framework that provides\nadvanced doctest support and enables the testing of `reStructuredText`_\n(\".rst\") files. It was originally part of the `astropy`_ core package, but has\nbeen moved to a separate package in order to be of more general use.\n\n.. _pytest: https://pytest.org/en/latest/\n.. _astropy: https://astropy.org/en/latest/\n.. _reStructuredText: https://en.wikipedia.org/wiki/ReStructuredText\n\n\nMotivation\n----------\n\nThis plugin provides advanced features for testing example Python code that is\nincluded in Python docstrings and in standalone documentation files.\n\nGood documentation for developers contains example code. This is true of both\nstandalone documentation and of documentation that is integrated with the code\nitself. Python provides a mechanism for testing code snippets that are provided\nin Python docstrings. The unit test framework pytest provides a mechanism for\nrunning doctests against both docstrings in source code and in standalone\ndocumentation files.\n\nThis plugin augments the functionality provided by Python and pytest by\nproviding the following features:\n\n* approximate floating point comparison for doctests that produce floating\n  point results (see `Floating Point Comparison`_)\n* skipping particular classes, methods, and functions when running doctests (see `Skipping Tests`_)\n* handling doctests that use remote data in conjunction with the\n  `pytest-remotedata`_ plugin (see `Remote Data`_)\n* optional inclusion of ``*.rst`` files for doctests (see `Setup and Configuration`_)\n\n.. _pytest-remotedata: https://github.com/astropy/pytest-remotedata\n\nInstallation\n------------\n\nThe ``pytest-doctestplus`` plugin can be installed using ``pip``::\n\n    $ pip install pytest-doctestplus\n\nIt is also possible to install the latest development version from the source\nrepository::\n\n    $ git clone https://github.com/astropy/pytest-doctestplus\n    $ cd pytest-doctestplus\n    $ python ./setup.py install\n\nIn either case, the plugin will automatically be registered for use with\n``pytest``.\n\nUsage\n-----\n\n.. _setup:\n\nSetup and Configuration\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThis plugin provides two command line options: ``--doctest-plus`` for enabling\nthe advanced features mentioned above, and ``--doctest-rst`` for including\n``*.rst`` files in doctest collection.\n\nThis plugin can also be enabled by default by adding ``doctest_plus = enabled``\nto the ``[tool:pytest]`` section of the package's ``setup.cfg`` file.\n\nThe plugin is applied to all directories and files that ``pytest`` collects.\nThis means that configuring ``testpaths`` and ``norecursedirs`` in\n``setup.cfg`` also affects the files that will be discovered by\n``pytest-doctestplus``. In addition, this plugin provides a\n``doctest_norecursedirs`` configuration variable that indicates directories\nthat should be ignored by ``pytest-doctestplus`` but do not need to be ignored\nby other ``pytest`` features.\n\nUsing ``pytest``'s built-in ``--doctest-modules`` option will override the\nbehavior of this plugin, even if ``doctest_plus = enabled`` in ``setup.cfg``,\nand will cause the default doctest plugin to be used. However, if for some\nreason both ``--doctest-modules`` and ``--doctest-plus`` are given, the\n``pytest-doctestplus`` plugin will be used, regardless of the contents of\n``setup.cfg``.\n\nThis plugin respects the doctest options that are used by the built-in doctest\nplugin and are set in ``doctest_optionflags`` in ``setup.cfg``. By default,\n``ELLIPSIS`` and ``NORMALIZE_WHITESPACE`` are used. For a description of all\ndoctest settings, see the `doctest documentation\n<https://https://docs.python.org/3/library/doctest.html#option-flags>`_.\n\nDoctest Directives\n~~~~~~~~~~~~~~~~~~\n\nThe ``pytest-doctestplus`` plugin defines `doctest directives`_ that are used\nto control the behavior of particular features. For general information on\ndirectives and how they are used, consult the `documentation`_. The specifics\nof the directives that this plugin defines are described in the sections below.\n\n.. _doctest directives: https://docs.python.org/3/library/doctest.html#directives\n.. _documentation: https://docs.python.org/3/library/doctest.html#directives\n\nFloating Point Comparison\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSome doctests may produce output that contains string representations of\nfloating point values.  Floating point representations are often not exact and\ncontain roundoffs in their least significant digits.  Depending on the platform\nthe tests are being run on (different Python versions, different OS, etc.) the\nexact number of digits shown can differ.  Because doctests work by comparing\nstrings this can cause such tests to fail.\n\nTo address this issue, the ``pytest-doctestplus`` plugin provides support for a\n``FLOAT_CMP`` flag that can be used with doctests.  For example:\n\n.. code-block:: python\n\n  >>> 1.0 / 3.0  # doctest: +FLOAT_CMP\n  0.333333333333333311\n\nWhen this flag is used, the expected and actual outputs are both parsed to find\nany floating point values in the strings.  Those are then converted to actual\nPython `float` objects and compared numerically.  This means that small\ndifferences in representation of roundoff digits will be ignored by the\ndoctest.  The values are otherwise compared exactly, so more significant\n(albeit possibly small) differences will still be caught by these tests.\n\nThis flag can be enabled globally by adding it to ``setup.cfg`` as in\n\n.. code-block:: ini\n\n    doctest_optionflags =\n        NORMALIZE_WHITESPACE\n        ELLIPSIS\n        FLOAT_CMP\n\nIgnoring warnings\n~~~~~~~~~~~~~~~~~\n\nIf code in a doctest emits a warning and you want to make sure that warning is silenced,\nyou can make use of the ``IGNORE_WARNINGS`` flag. For example:\n\n.. code-block:: python\n\n  >>> import numpy as np\n  >>> np.mean([])  # doctest: +IGNORE_WARNINGS\n  np.nan\n\nSkipping Tests\n~~~~~~~~~~~~~~\n\nDoctest provides the ``+SKIP`` directive for skipping statements that should\nnot be executed when testing documentation.\n\n.. code-block:: python\n\n    >>> open('file.txt') # doctest: +SKIP\n\nIn Sphinx ``.rst`` documentation, whole code example blocks can be skipped with the\ndirective\n\n.. code-block:: rst\n\n    .. doctest-skip::\n\n        >>> import asdf\n        >>> asdf.open('file.asdf')\n\nHowever, it is often useful to be able to skip docstrings associated with\nparticular functions, methods, classes, or even entire files.\n\nSkip Unconditionally\n^^^^^^^^^^^^^^^^^^^^\n\nThe ``pytest-doctestplus`` plugin provides a way to indicate that certain\ndocstrings should be skipped altogether. This is configured by defining the\nvariable ``__doctest_skip__`` in each module where tests should be skipped. The\nvalue of ``__doctest_skip__`` should be a list of wildcard patterns for all\nfunctions/classes whose doctests should be skipped.  For example::\n\n   __doctest_skip__ = ['myfunction', 'MyClass', 'MyClass.*']\n\nskips the doctests in a function called ``myfunction``, the doctest for a\nclass called ``MyClass``, and all *methods* of ``MyClass``.\n\nModule docstrings may contain doctests as well. To skip the module-level\ndoctests::\n\n    __doctest_skip__  = ['.', 'myfunction', 'MyClass']\n\nTo skip all doctests in a module::\n\n   __doctest_skip__ = ['*']\n\nDoctest Dependencies\n^^^^^^^^^^^^^^^^^^^^\n\nIt is also possible to skip certain doctests depending on whether particular\ndependencies are available. This is configured by defining the variable\n``__doctest_requires__`` at the module level. The value of this variable is\na dictionary that indicates the modules that are required to run the doctests\nassociated with particular functions, classes, and methods.\n\nThe keys in the dictionary are wildcard patterns like those described above, or\ntuples of wildcard patterns, indicating which docstrings should be skipped. The\nvalues in the dictionary are lists of module names that are required in order\nfor the given doctests to be executed.\n\nConsider the following example::\n\n    __doctest_requires__ = {('func1', 'func2'): ['scipy']}\n\nHaving this module-level variable will require ``scipy`` to be importable\nin order to run the doctests for functions ``func1`` and ``func2`` in that\nmodule.\n\nSimilarly, in Sphinx ``.rst`` documentation, whole code example blocks can be\nconditionally skipped if a dependency is not available.\n\n.. code-block:: rst\n\n    .. doctest-requires:: asdf\n\n        >>> import asdf\n        >>> asdf.open('file.asdf')\n\nRemote Data\n~~~~~~~~~~~\n\nThe ``pytest-doctestplus`` plugin can be used in conjunction with the\n`pytest-remotedata`_ plugin in order to control doctest code that requires\naccess to data from the internet. In order to make use of these features, the\n``pytest-remotedata`` plugin must be installed, and remote data access must\nbe enabled using the ``--remote-data`` command line option to ``pytest``. See\nthe `pytest-remotedata plugin documentation`__ for more details.\n\nThe following example illustrates how a doctest that uses remote data should be\nmarked:\n\n.. code-block:: python\n\n    >>> from urlib.request import urlopen\n    >>> url = urlopen('http://astropy.org') # doctest: +REMOTE_DATA\n\nThe ``+REMOTE_DATA`` directive indicates that the marked statement should only\nbe executed if the ``--remote-data`` option is given. By default, all\nstatements marked with ``--remote-data`` will be skipped.\n\n.. _pytest-remotedata: https://github.com/astropy/pytest-remotedata\n__ pytest-remotedata_\n\nDevelopment Status\n------------------\n\n.. image:: https://travis-ci.org/astropy/pytest-doctestplus.svg\n    :target: https://travis-ci.org/astropy/pytest-doctestplus\n    :alt: Travis CI Status\n\nQuestions, bug reports, and feature requests can be submitted on `github`_.\n\n.. _github: https://github.com/astropy/pytest-doctestplus\n\nLicense\n-------\nThis plugin is licensed under a 3-clause BSD style license - see the\n``LICENSE.rst`` file.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://astropy.org", "keywords": "doctest,rst,pytest,py.test", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "pytest-doctestplus", "package_url": "https://pypi.org/project/pytest-doctestplus/", "platform": "", "project_url": "https://pypi.org/project/pytest-doctestplus/", "project_urls": {"Homepage": "https://astropy.org"}, "release_url": "https://pypi.org/project/pytest-doctestplus/0.6.1/", "requires_dist": ["pytest (>=4.0)", "pip"], "requires_python": ">=3.6", "summary": "Pytest plugin with advanced doctest features.", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package contains a plugin for the <a href=\"https://pytest.org/en/latest/\" rel=\"nofollow\">pytest</a> framework that provides\nadvanced doctest support and enables the testing of <a href=\"https://en.wikipedia.org/wiki/ReStructuredText\" rel=\"nofollow\">reStructuredText</a>\n(\u201c.rst\u201d) files. It was originally part of the <a href=\"https://astropy.org/en/latest/\" rel=\"nofollow\">astropy</a> core package, but has\nbeen moved to a separate package in order to be of more general use.</p>\n<div id=\"motivation\">\n<h2>Motivation</h2>\n<p>This plugin provides advanced features for testing example Python code that is\nincluded in Python docstrings and in standalone documentation files.</p>\n<p>Good documentation for developers contains example code. This is true of both\nstandalone documentation and of documentation that is integrated with the code\nitself. Python provides a mechanism for testing code snippets that are provided\nin Python docstrings. The unit test framework pytest provides a mechanism for\nrunning doctests against both docstrings in source code and in standalone\ndocumentation files.</p>\n<p>This plugin augments the functionality provided by Python and pytest by\nproviding the following features:</p>\n<ul>\n<li>approximate floating point comparison for doctests that produce floating\npoint results (see <a href=\"#floating-point-comparison\" rel=\"nofollow\">Floating Point Comparison</a>)</li>\n<li>skipping particular classes, methods, and functions when running doctests (see <a href=\"#skipping-tests\" rel=\"nofollow\">Skipping Tests</a>)</li>\n<li>handling doctests that use remote data in conjunction with the\n<a href=\"https://github.com/astropy/pytest-remotedata\" rel=\"nofollow\">pytest-remotedata</a> plugin (see <a href=\"#remote-data\" rel=\"nofollow\">Remote Data</a>)</li>\n<li>optional inclusion of <tt>*.rst</tt> files for doctests (see <a href=\"#setup-and-configuration\" rel=\"nofollow\">Setup and Configuration</a>)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The <tt><span class=\"pre\">pytest-doctestplus</span></tt> plugin can be installed using <tt>pip</tt>:</p>\n<pre>$ pip install pytest-doctestplus\n</pre>\n<p>It is also possible to install the latest development version from the source\nrepository:</p>\n<pre>$ git clone https://github.com/astropy/pytest-doctestplus\n$ cd pytest-doctestplus\n$ python ./setup.py install\n</pre>\n<p>In either case, the plugin will automatically be registered for use with\n<tt>pytest</tt>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"setup-and-configuration\">\n<span id=\"setup\"></span><h3>Setup and Configuration</h3>\n<p>This plugin provides two command line options: <tt><span class=\"pre\">--doctest-plus</span></tt> for enabling\nthe advanced features mentioned above, and <tt><span class=\"pre\">--doctest-rst</span></tt> for including\n<tt>*.rst</tt> files in doctest collection.</p>\n<p>This plugin can also be enabled by default by adding <tt>doctest_plus = enabled</tt>\nto the <tt>[tool:pytest]</tt> section of the package\u2019s <tt>setup.cfg</tt> file.</p>\n<p>The plugin is applied to all directories and files that <tt>pytest</tt> collects.\nThis means that configuring <tt>testpaths</tt> and <tt>norecursedirs</tt> in\n<tt>setup.cfg</tt> also affects the files that will be discovered by\n<tt><span class=\"pre\">pytest-doctestplus</span></tt>. In addition, this plugin provides a\n<tt>doctest_norecursedirs</tt> configuration variable that indicates directories\nthat should be ignored by <tt><span class=\"pre\">pytest-doctestplus</span></tt> but do not need to be ignored\nby other <tt>pytest</tt> features.</p>\n<p>Using <tt>pytest</tt>\u2019s built-in <tt><span class=\"pre\">--doctest-modules</span></tt> option will override the\nbehavior of this plugin, even if <tt>doctest_plus = enabled</tt> in <tt>setup.cfg</tt>,\nand will cause the default doctest plugin to be used. However, if for some\nreason both <tt><span class=\"pre\">--doctest-modules</span></tt> and <tt><span class=\"pre\">--doctest-plus</span></tt> are given, the\n<tt><span class=\"pre\">pytest-doctestplus</span></tt> plugin will be used, regardless of the contents of\n<tt>setup.cfg</tt>.</p>\n<p>This plugin respects the doctest options that are used by the built-in doctest\nplugin and are set in <tt>doctest_optionflags</tt> in <tt>setup.cfg</tt>. By default,\n<tt>ELLIPSIS</tt> and <tt>NORMALIZE_WHITESPACE</tt> are used. For a description of all\ndoctest settings, see the <a href=\"https://https://docs.python.org/3/library/doctest.html#option-flags\" rel=\"nofollow\">doctest documentation</a>.</p>\n</div>\n<div id=\"doctest-directives\">\n<h3>Doctest Directives</h3>\n<p>The <tt><span class=\"pre\">pytest-doctestplus</span></tt> plugin defines <a href=\"https://docs.python.org/3/library/doctest.html#directives\" rel=\"nofollow\">doctest directives</a> that are used\nto control the behavior of particular features. For general information on\ndirectives and how they are used, consult the <a href=\"https://docs.python.org/3/library/doctest.html#directives\" rel=\"nofollow\">documentation</a>. The specifics\nof the directives that this plugin defines are described in the sections below.</p>\n</div>\n<div id=\"floating-point-comparison\">\n<h3>Floating Point Comparison</h3>\n<p>Some doctests may produce output that contains string representations of\nfloating point values.  Floating point representations are often not exact and\ncontain roundoffs in their least significant digits.  Depending on the platform\nthe tests are being run on (different Python versions, different OS, etc.) the\nexact number of digits shown can differ.  Because doctests work by comparing\nstrings this can cause such tests to fail.</p>\n<p>To address this issue, the <tt><span class=\"pre\">pytest-doctestplus</span></tt> plugin provides support for a\n<tt>FLOAT_CMP</tt> flag that can be used with doctests.  For example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mf\">1.0</span> <span class=\"o\">/</span> <span class=\"mf\">3.0</span>  <span class=\"c1\"># doctest: +FLOAT_CMP</span>\n<span class=\"mf\">0.333333333333333311</span>\n</pre>\n<p>When this flag is used, the expected and actual outputs are both parsed to find\nany floating point values in the strings.  Those are then converted to actual\nPython <cite>float</cite> objects and compared numerically.  This means that small\ndifferences in representation of roundoff digits will be ignored by the\ndoctest.  The values are otherwise compared exactly, so more significant\n(albeit possibly small) differences will still be caught by these tests.</p>\n<p>This flag can be enabled globally by adding it to <tt>setup.cfg</tt> as in</p>\n<pre><span class=\"na\">doctest_optionflags</span> <span class=\"o\">=</span><span class=\"s\">\n    NORMALIZE_WHITESPACE\n    ELLIPSIS\n    FLOAT_CMP</span>\n</pre>\n</div>\n<div id=\"ignoring-warnings\">\n<h3>Ignoring warnings</h3>\n<p>If code in a doctest emits a warning and you want to make sure that warning is silenced,\nyou can make use of the <tt>IGNORE_WARNINGS</tt> flag. For example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">([])</span>  <span class=\"c1\"># doctest: +IGNORE_WARNINGS</span>\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span>\n</pre>\n</div>\n<div id=\"skipping-tests\">\n<h3>Skipping Tests</h3>\n<p>Doctest provides the <tt>+SKIP</tt> directive for skipping statements that should\nnot be executed when testing documentation.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'file.txt'</span><span class=\"p\">)</span> <span class=\"c1\"># doctest: +SKIP</span>\n</pre>\n<p>In Sphinx <tt>.rst</tt> documentation, whole code example blocks can be skipped with the\ndirective</p>\n<pre><span class=\"p\">..</span> <span class=\"ow\">doctest-skip</span><span class=\"p\">::</span>\n\n    &gt;&gt;&gt; import asdf\n    &gt;&gt;&gt; asdf.open('file.asdf')\n</pre>\n<p>However, it is often useful to be able to skip docstrings associated with\nparticular functions, methods, classes, or even entire files.</p>\n<div id=\"skip-unconditionally\">\n<h4>Skip Unconditionally</h4>\n<p>The <tt><span class=\"pre\">pytest-doctestplus</span></tt> plugin provides a way to indicate that certain\ndocstrings should be skipped altogether. This is configured by defining the\nvariable <tt>__doctest_skip__</tt> in each module where tests should be skipped. The\nvalue of <tt>__doctest_skip__</tt> should be a list of wildcard patterns for all\nfunctions/classes whose doctests should be skipped.  For example:</p>\n<pre>__doctest_skip__ = ['myfunction', 'MyClass', 'MyClass.*']\n</pre>\n<p>skips the doctests in a function called <tt>myfunction</tt>, the doctest for a\nclass called <tt>MyClass</tt>, and all <em>methods</em> of <tt>MyClass</tt>.</p>\n<p>Module docstrings may contain doctests as well. To skip the module-level\ndoctests:</p>\n<pre>__doctest_skip__  = ['.', 'myfunction', 'MyClass']\n</pre>\n<p>To skip all doctests in a module:</p>\n<pre>__doctest_skip__ = ['*']\n</pre>\n</div>\n<div id=\"doctest-dependencies\">\n<h4>Doctest Dependencies</h4>\n<p>It is also possible to skip certain doctests depending on whether particular\ndependencies are available. This is configured by defining the variable\n<tt>__doctest_requires__</tt> at the module level. The value of this variable is\na dictionary that indicates the modules that are required to run the doctests\nassociated with particular functions, classes, and methods.</p>\n<p>The keys in the dictionary are wildcard patterns like those described above, or\ntuples of wildcard patterns, indicating which docstrings should be skipped. The\nvalues in the dictionary are lists of module names that are required in order\nfor the given doctests to be executed.</p>\n<p>Consider the following example:</p>\n<pre>__doctest_requires__ = {('func1', 'func2'): ['scipy']}\n</pre>\n<p>Having this module-level variable will require <tt>scipy</tt> to be importable\nin order to run the doctests for functions <tt>func1</tt> and <tt>func2</tt> in that\nmodule.</p>\n<p>Similarly, in Sphinx <tt>.rst</tt> documentation, whole code example blocks can be\nconditionally skipped if a dependency is not available.</p>\n<pre><span class=\"p\">..</span> <span class=\"ow\">doctest-requires</span><span class=\"p\">::</span> asdf\n\n    &gt;&gt;&gt; import asdf\n    &gt;&gt;&gt; asdf.open('file.asdf')\n</pre>\n</div>\n</div>\n<div id=\"remote-data\">\n<h3>Remote Data</h3>\n<p>The <tt><span class=\"pre\">pytest-doctestplus</span></tt> plugin can be used in conjunction with the\n<a href=\"https://github.com/astropy/pytest-remotedata\" rel=\"nofollow\">pytest-remotedata</a> plugin in order to control doctest code that requires\naccess to data from the internet. In order to make use of these features, the\n<tt><span class=\"pre\">pytest-remotedata</span></tt> plugin must be installed, and remote data access must\nbe enabled using the <tt><span class=\"pre\">--remote-data</span></tt> command line option to <tt>pytest</tt>. See\nthe <a href=\"https://github.com/astropy/pytest-remotedata\" rel=\"nofollow\">pytest-remotedata plugin documentation</a> for more details.</p>\n<p>The following example illustrates how a doctest that uses remote data should be\nmarked:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">urlib.request</span> <span class=\"kn\">import</span> <span class=\"n\">urlopen</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">urlopen</span><span class=\"p\">(</span><span class=\"s1\">'http://astropy.org'</span><span class=\"p\">)</span> <span class=\"c1\"># doctest: +REMOTE_DATA</span>\n</pre>\n<p>The <tt>+REMOTE_DATA</tt> directive indicates that the marked statement should only\nbe executed if the <tt><span class=\"pre\">--remote-data</span></tt> option is given. By default, all\nstatements marked with <tt><span class=\"pre\">--remote-data</span></tt> will be skipped.</p>\n</div>\n</div>\n<div id=\"development-status\">\n<h2>Development Status</h2>\n<a href=\"https://travis-ci.org/astropy/pytest-doctestplus\" rel=\"nofollow\"><img alt=\"Travis CI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70532b55102bdf1f952c95202778ba193345a788/68747470733a2f2f7472617669732d63692e6f72672f617374726f70792f7079746573742d646f6374657374706c75732e737667\"></a>\n<p>Questions, bug reports, and feature requests can be submitted on <a href=\"https://github.com/astropy/pytest-doctestplus\" rel=\"nofollow\">github</a>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This plugin is licensed under a 3-clause BSD style license - see the\n<tt>LICENSE.rst</tt> file.</p>\n</div>\n\n          </div>"}, "last_serial": 7168894, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8fec9827f5f0ebddc43a2b44a9a19b4d", "sha256": "80a03db6f57eacd2800db89aa01b37cf2b08c8b06482284e04c61cdc69172abb"}, "downloads": -1, "filename": "pytest-doctestplus-0.1.0.tar.gz", "has_sig": true, "md5_digest": "8fec9827f5f0ebddc43a2b44a9a19b4d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 10672, "upload_time": "2017-10-10T18:12:42", "upload_time_iso_8601": "2017-10-10T18:12:42.456778Z", "url": "https://files.pythonhosted.org/packages/d9/ae/ccda809c61216f7b585139f2aa1d2222d24b3bb5fcca5df518522cd863ed/pytest-doctestplus-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "84d47cb2e48efc5e11a786ba95a493d6", "sha256": "b7a204af69885c8677cbf414b7539ad280f496633d03dfaf690653c8960a7812"}, "downloads": -1, "filename": "pytest-doctestplus-0.1.1.tar.gz", "has_sig": true, "md5_digest": "84d47cb2e48efc5e11a786ba95a493d6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 10881, "upload_time": "2017-10-18T20:04:52", "upload_time_iso_8601": "2017-10-18T20:04:52.400398Z", "url": "https://files.pythonhosted.org/packages/b8/83/7d8d8210224da74232429b41d3b767cd8de2b5d6bbd415ab39346b66c80b/pytest-doctestplus-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4929b135dfff1b1bded726a2c719c101", "sha256": "07672d4a6950d5f5ad48648edd30663be9770435af5baa6c692810c39e0f6648"}, "downloads": -1, "filename": "pytest-doctestplus-0.1.2.tar.gz", "has_sig": true, "md5_digest": "4929b135dfff1b1bded726a2c719c101", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 14217, "upload_time": "2017-12-07T21:31:00", "upload_time_iso_8601": "2017-12-07T21:31:00.338806Z", "url": "https://files.pythonhosted.org/packages/83/ad/fdafa7993090c3e55a28027a6bdf1da8b3ee393c5fdc61dc6732cff50d80/pytest-doctestplus-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c8c3107a601aadd3dad05b9dd6c68d1d", "sha256": "91a5f81ff9e2038d363f6d49f4ec3c1b9726cc989ae8e3f227689a3793aa51fc"}, "downloads": -1, "filename": "pytest-doctestplus-0.1.3.tar.gz", "has_sig": true, "md5_digest": "c8c3107a601aadd3dad05b9dd6c68d1d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 13169, "upload_time": "2018-04-20T18:01:11", "upload_time_iso_8601": "2018-04-20T18:01:11.860429Z", "url": "https://files.pythonhosted.org/packages/f4/41/f78d44d612fb8c182105b64bb9ddd537f533cd553e0611b343ebac40bad3/pytest-doctestplus-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1ab4e8b08e2de65250c95f11574cab71", "sha256": "f18fe570201e5e8182cbc50a5db7b9b3185faaee9da1635dc1e36296660e9b5a"}, "downloads": -1, "filename": "pytest-doctestplus-0.2.0.tar.gz", "has_sig": true, "md5_digest": "1ab4e8b08e2de65250c95f11574cab71", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 17606, "upload_time": "2018-11-14T19:39:46", "upload_time_iso_8601": "2018-11-14T19:39:46.230562Z", "url": "https://files.pythonhosted.org/packages/28/ba/51690aebf7b86bd18181414cb2f19795a3eeaf1d1eddf777f7f35bd397bb/pytest-doctestplus-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c4ed640675a548ee383835a28f09f079", "sha256": "4e641bc720661c08ec3afe44a7951660cdff5e187259c433aa66e9ec2d5ccea1"}, "downloads": -1, "filename": "pytest-doctestplus-0.3.0.tar.gz", "has_sig": true, "md5_digest": "c4ed640675a548ee383835a28f09f079", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 19620, "upload_time": "2019-03-06T18:35:45", "upload_time_iso_8601": "2019-03-06T18:35:45.125935Z", "url": "https://files.pythonhosted.org/packages/40/09/4c9db3d0b83d52aced3f8925c7690ee5f7f59d7af16eef95e45940e5b0f4/pytest-doctestplus-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "70f224f8e5440c5efc6d25b06cb29982", "sha256": "8872b9c236924af20c39c2813d7f1bde50a1edca7c4aba5a8bfbae3a32360e87"}, "downloads": -1, "filename": "pytest-doctestplus-0.4.0.tar.gz", "has_sig": true, "md5_digest": "70f224f8e5440c5efc6d25b06cb29982", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 19783, "upload_time": "2019-09-18T17:38:41", "upload_time_iso_8601": "2019-09-18T17:38:41.196948Z", "url": "https://files.pythonhosted.org/packages/7a/4d/cab8cf0396bf7da36b5053f17a35203e9726096d21b971e9d57ebd0b7b9d/pytest-doctestplus-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "d66be4e94281c6da2652e4af7f208d0f", "sha256": "426ec0ef0d3ee84faea72b4530bfb87c2aa9204c39b91b775b7714f9caf5978b"}, "downloads": -1, "filename": "pytest_doctestplus-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d66be4e94281c6da2652e4af7f208d0f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 17918, "upload_time": "2019-11-15T21:29:56", "upload_time_iso_8601": "2019-11-15T21:29:56.480859Z", "url": "https://files.pythonhosted.org/packages/83/78/fdea656cc5736bd56c94b87f51c19f6da4931869a0d7eaf2fc325166a606/pytest_doctestplus-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9136bd78001a83b9a39f8cfdad2926e", "sha256": "41386187b9261cd59a3ffe4cf9df58d517288a1d3f11d96749b39b4e38b0a02c"}, "downloads": -1, "filename": "pytest-doctestplus-0.5.0.tar.gz", "has_sig": false, "md5_digest": "f9136bd78001a83b9a39f8cfdad2926e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 26945, "upload_time": "2019-11-15T21:29:58", "upload_time_iso_8601": "2019-11-15T21:29:58.620637Z", "url": "https://files.pythonhosted.org/packages/57/d1/c0e41364a9ff2e6f302767e966c07a628a2b2ab0760f9aae94a6fb92fdac/pytest-doctestplus-0.5.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "449e0bc8c51a2e1ef9c8ee44243f4121", "sha256": "b69c3d736d8cbd285a21345eacbe3ff8028cc80ed650a92219059eba471510d1"}, "downloads": -1, "filename": "pytest_doctestplus-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "449e0bc8c51a2e1ef9c8ee44243f4121", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17680, "upload_time": "2020-05-05T01:40:33", "upload_time_iso_8601": "2020-05-05T01:40:33.760605Z", "url": "https://files.pythonhosted.org/packages/b9/76/8ccf7da1b37aba952ed956fb383df09eb2f2c3668db133a607cbf8289618/pytest_doctestplus-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e06592a4b6bac238692d5ee8a6428a8e", "sha256": "7bcb73b6a41859492c98eb0a9e2c7e93c9681876fd306eadba4a9593a47cc185"}, "downloads": -1, "filename": "pytest-doctestplus-0.6.1.tar.gz", "has_sig": true, "md5_digest": "e06592a4b6bac238692d5ee8a6428a8e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 27200, "upload_time": "2020-05-05T01:40:35", "upload_time_iso_8601": "2020-05-05T01:40:35.412039Z", "url": "https://files.pythonhosted.org/packages/9a/49/ed66135015eecc4501379534659bb35e7b340003a55d1efd8f5708738612/pytest-doctestplus-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "449e0bc8c51a2e1ef9c8ee44243f4121", "sha256": "b69c3d736d8cbd285a21345eacbe3ff8028cc80ed650a92219059eba471510d1"}, "downloads": -1, "filename": "pytest_doctestplus-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "449e0bc8c51a2e1ef9c8ee44243f4121", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17680, "upload_time": "2020-05-05T01:40:33", "upload_time_iso_8601": "2020-05-05T01:40:33.760605Z", "url": "https://files.pythonhosted.org/packages/b9/76/8ccf7da1b37aba952ed956fb383df09eb2f2c3668db133a607cbf8289618/pytest_doctestplus-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e06592a4b6bac238692d5ee8a6428a8e", "sha256": "7bcb73b6a41859492c98eb0a9e2c7e93c9681876fd306eadba4a9593a47cc185"}, "downloads": -1, "filename": "pytest-doctestplus-0.6.1.tar.gz", "has_sig": true, "md5_digest": "e06592a4b6bac238692d5ee8a6428a8e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 27200, "upload_time": "2020-05-05T01:40:35", "upload_time_iso_8601": "2020-05-05T01:40:35.412039Z", "url": "https://files.pythonhosted.org/packages/9a/49/ed66135015eecc4501379534659bb35e7b340003a55d1efd8f5708738612/pytest-doctestplus-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:13 2020"}