{"info": {"author": "Jan Justi", "author_email": "jan.ma.justi@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3.6"], "description": "# Deep Codon Mutation Analyser (DCMA)\n\nDCMA analyses each column of codons within .fasta files, from a target file, generating a report with all possible mutations listed.\n\n## Installation\n```bash\npip install dcma\n```\n\n## Examples\n\n- [Simple Execution](examples/example1-simple.md)\n- [Group Execution](examples/example2-group.md)\n\n## Usage\n### Command Line\n\n```bash\nusage: run-dcma [-h] [--reportName REPORTNAME] [--reportPath REPORTPATH]\n                [--searchKP SEARCHKP] [--debug]\n                TARGET REPORTTYPE\n\nAnalyse mutation on all nucleotide alignment .fasta files from a target.\n\npositional arguments:\n  TARGET                Target .fasta file to be analysed.\n  REPORTTYPE            Output report file type.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --reportName REPORTNAME\n                        Output report custom file name.\n  --reportPath REPORTPATH\n                        Output report custom file path.\n  --searchKP SEARCHKP   Custom keyphrase to detect searchable sequences.\n  --debug               Turn debug messages on.\n```\n\n### Python\n\n```python\nimport dcma.core as solver\n\ntarget_path = 'example.fasta'\nreport_name = 'myrep'\nreport_type = 'all' # 'xls', 'csv' or 'all'\nreport_path = 'results-folder' # optional\n\nsolver.set_debug_mode(True) # optional\n\n# results[0] -> polarity results dataframe\n# results[1] -> alerts dataframe\nresults = solver.run(target_path)\n\n# option 1: export to the current folder\nsolver.export(results, report_type, report_name)\n# option 2: export to custom folder\nsolver.export(results, report_type, report_name, report_path)\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/janjusti/dcma", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dcma", "package_url": "https://pypi.org/project/dcma/", "platform": "", "project_url": "https://pypi.org/project/dcma/", "project_urls": {"Homepage": "https://github.com/janjusti/dcma"}, "release_url": "https://pypi.org/project/dcma/0.1.2/", "requires_dist": ["tqdm (>=4.31.1)", "anytree (>=2.6.0)", "pandas (>=0.24.2)", "biopython (>=1.73)", "openpyxl (>=2.6.2)", "styleframe (>=2.0.3)"], "requires_python": "", "summary": "Deep Codon Mutation Analyser", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Deep Codon Mutation Analyser (DCMA)</h1>\n<p>DCMA analyses each column of codons within .fasta files, from a target file, generating a report with all possible mutations listed.</p>\n<h2>Installation</h2>\n<pre>pip install dcma\n</pre>\n<h2>Examples</h2>\n<ul>\n<li><a href=\"examples/example1-simple.md\" rel=\"nofollow\">Simple Execution</a></li>\n<li><a href=\"examples/example2-group.md\" rel=\"nofollow\">Group Execution</a></li>\n</ul>\n<h2>Usage</h2>\n<h3>Command Line</h3>\n<pre>usage: run-dcma <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--reportName REPORTNAME<span class=\"o\">]</span> <span class=\"o\">[</span>--reportPath REPORTPATH<span class=\"o\">]</span>\n                <span class=\"o\">[</span>--searchKP SEARCHKP<span class=\"o\">]</span> <span class=\"o\">[</span>--debug<span class=\"o\">]</span>\n                TARGET REPORTTYPE\n\nAnalyse mutation on all nucleotide alignment .fasta files from a target.\n\npositional arguments:\n  TARGET                Target .fasta file to be analysed.\n  REPORTTYPE            Output report file type.\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --reportName REPORTNAME\n                        Output report custom file name.\n  --reportPath REPORTPATH\n                        Output report custom file path.\n  --searchKP SEARCHKP   Custom keyphrase to detect searchable sequences.\n  --debug               Turn debug messages on.\n</pre>\n<h3>Python</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">dcma.core</span> <span class=\"k\">as</span> <span class=\"nn\">solver</span>\n\n<span class=\"n\">target_path</span> <span class=\"o\">=</span> <span class=\"s1\">'example.fasta'</span>\n<span class=\"n\">report_name</span> <span class=\"o\">=</span> <span class=\"s1\">'myrep'</span>\n<span class=\"n\">report_type</span> <span class=\"o\">=</span> <span class=\"s1\">'all'</span> <span class=\"c1\"># 'xls', 'csv' or 'all'</span>\n<span class=\"n\">report_path</span> <span class=\"o\">=</span> <span class=\"s1\">'results-folder'</span> <span class=\"c1\"># optional</span>\n\n<span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">set_debug_mode</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"c1\"># optional</span>\n\n<span class=\"c1\"># results[0] -&gt; polarity results dataframe</span>\n<span class=\"c1\"># results[1] -&gt; alerts dataframe</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">target_path</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># option 1: export to the current folder</span>\n<span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">export</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">,</span> <span class=\"n\">report_type</span><span class=\"p\">,</span> <span class=\"n\">report_name</span><span class=\"p\">)</span>\n<span class=\"c1\"># option 2: export to custom folder</span>\n<span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">export</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">,</span> <span class=\"n\">report_type</span><span class=\"p\">,</span> <span class=\"n\">report_name</span><span class=\"p\">,</span> <span class=\"n\">report_path</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5718086, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "99571e60518cad42c515da105ca26613", "sha256": "dbb1da7bc9ca98ce8565cd07b44cdaca6610a8422bc05f87ef04329c01aa9711"}, "downloads": -1, "filename": "dcma-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "99571e60518cad42c515da105ca26613", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11083, "upload_time": "2019-07-10T17:47:30", "upload_time_iso_8601": "2019-07-10T17:47:30.083361Z", "url": "https://files.pythonhosted.org/packages/ca/ce/2836f92204b4db4f3e7af54992771469b0d3f69245b44f6d7d9f4e1db254/dcma-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca99bc417473f5019a99e823769ffb07", "sha256": "70b36963bf5466b98170e402f1e4c9b253e70264c121b808651e40383d12a12b"}, "downloads": -1, "filename": "dcma-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ca99bc417473f5019a99e823769ffb07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8872, "upload_time": "2019-07-10T17:47:32", "upload_time_iso_8601": "2019-07-10T17:47:32.351915Z", "url": "https://files.pythonhosted.org/packages/66/e2/a9c103f027f48220d64bba6e6b3dd9028d22eb3f4b07a32c4e8fa2ba7999/dcma-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "6fa9e34fce65661e96c782f9b59535d0", "sha256": "9e1e9232e147f569af8acad97baf8d308498cbe4585beac44d2eb1f4a02d3375"}, "downloads": -1, "filename": "dcma-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6fa9e34fce65661e96c782f9b59535d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11245, "upload_time": "2019-08-23T00:59:34", "upload_time_iso_8601": "2019-08-23T00:59:34.715423Z", "url": "https://files.pythonhosted.org/packages/19/8f/f85da93e26752399b9c75f9475d67968bdf8530b96e98e1b10a682b4e13e/dcma-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a04f688fe2f7bd1b6b1bea817564b32f", "sha256": "80da780cfd3f0f2193ba3038454c22ac239c5f5b83c1df4b49dc690d8f074fde"}, "downloads": -1, "filename": "dcma-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a04f688fe2f7bd1b6b1bea817564b32f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9077, "upload_time": "2019-08-23T00:59:36", "upload_time_iso_8601": "2019-08-23T00:59:36.193021Z", "url": "https://files.pythonhosted.org/packages/b3/d8/e6f0b7f3015cc069bcfaa16ef5fa80c146f720fc98e28c268aa05aeb3ec9/dcma-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6fa9e34fce65661e96c782f9b59535d0", "sha256": "9e1e9232e147f569af8acad97baf8d308498cbe4585beac44d2eb1f4a02d3375"}, "downloads": -1, "filename": "dcma-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6fa9e34fce65661e96c782f9b59535d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11245, "upload_time": "2019-08-23T00:59:34", "upload_time_iso_8601": "2019-08-23T00:59:34.715423Z", "url": "https://files.pythonhosted.org/packages/19/8f/f85da93e26752399b9c75f9475d67968bdf8530b96e98e1b10a682b4e13e/dcma-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a04f688fe2f7bd1b6b1bea817564b32f", "sha256": "80da780cfd3f0f2193ba3038454c22ac239c5f5b83c1df4b49dc690d8f074fde"}, "downloads": -1, "filename": "dcma-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a04f688fe2f7bd1b6b1bea817564b32f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9077, "upload_time": "2019-08-23T00:59:36", "upload_time_iso_8601": "2019-08-23T00:59:36.193021Z", "url": "https://files.pythonhosted.org/packages/b3/d8/e6f0b7f3015cc069bcfaa16ef5fa80c146f720fc98e28c268aa05aeb3ec9/dcma-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:47 2020"}