{"info": {"author": "Alberto Donato", "author_email": "alberto.donato@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: System :: Archiving :: Packaging", "Topic :: System :: Software Distribution"], "description": "snap-helpers - Interact with the Snap system within a Snap\n==========================================================\n\n|Latest Version| |Build Status| |Coverage Status| |Documentation Status|\n\n\nA Python library to interact with snap configuration and properties from inside a snap.\n\nIt exposes a top-level ``snaphelpers.Snap`` object which provides access to:\n\n- snap details:\n\n  .. code:: python\n\n     >>> snap = snaphelpers.Snap()\n     >>> snap.name\n     'testapp'\n     >>> snap.instance_name\n     'testapp'\n     >>> snap.version\n     '0+git.fdf80cd'\n     >>> snap.revision\n     'x1'\n\n- paths:\n\n  .. code:: python\n\n     >>> snap.paths.common\n     PosixPath('/var/snap/testapp/common')\n     >>> snap.paths.data\n     PosixPath('/var/snap/testapp/x1')\n     >>> snap.paths.snap\n     PosixPath('/snap/testapp/x1')\n     >>> snap.paths.user_common\n     PosixPath('/home/ack/snap/testapp/common')\n     >>> snap.paths.user_data\n     PosixPath('/home/ack/snap/testapp/x1')\n\n- snap-related environment variables:\n\n  .. code:: python\n\n     >>> pprint.pprint(dict(snap.environ))\n     {'ARCH': 'amd64',\n      'COMMON': '/var/snap/testapp/common',\n      'CONTEXT': 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890',\n      'COOKIE': 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890',\n      'DATA': '/var/snap/testapp/x1',\n      'INSTANCE_KEY': '',\n      'INSTANCE_NAME': 'testapp',\n      'LIBRARY_PATH': '/var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void',\n      'NAME': 'testapp',\n      'REEXEC': '',\n      'REVISION': 'x1',\n      'SNAP': '/snap/testapp/x1',\n      'USER_COMMON': '/home/ack/snap/testapp/common',\n      'USER_DATA': '/home/ack/snap/testapp/x1',\n      'VERSION': '0+git.fdf80cd'}\n     >>> snap.environ.ARCH\n     'amd64'\n\n- configuration options:\n\n  .. code:: python\n\n     >>> snap.config.set({'foo.bar': 'baz', 'asdf': 3})  # this needs to be run as root\n     >>> options = snap.config.get_options('foo', 'asdf')\n     >>> options['foo']\n     {'bar': 'baz'}\n     >>> options['foo.bar']\n     'baz'\n     >>> options['asdf']\n     3\n     >>> options.as_dict()\n     {'asdf': 3, 'foo': {'bar': 'baz'}}\n\n- setting snap health status, along with message and optional status code:\n\n  .. code:: python\n\n     >>> snap.health.okay()\n     >>> snap.health.waiting('foo must happen first', code='wait-foo')\n\n  Health status (when different from ``okay``) is visible from the ``snap``\n  CLI::\n\n    $ snap info snap-helpers\n    name:    snap-helpers\n    summary: Test snap for snap-helpers\n    health:\n      status:  waiting\n      message: foo must happen first\n      code:    wait-foo\n      checked: today at 16:23 CEST\n\n- content of snap metadata files such as:\n\n  - ``snap/metadata.yaml``\n  - ``meta/snap.yaml``\n  - ``snap/snapcraft.yaml``\n\n  These can be accessed as follows:\n\n  .. code:: python\n\n     >>> snap.metadata_files.snap\n     SnapMetadataFile(/snap/snap-helpers/x3/meta/snap.yaml)\n     >>> pprint(dict(snap.metadata_files.snap))\n     {'apps': {'ipython': {'command': 'snap/command-chain/snapcraft-runner '\n                                      '$SNAP/command-ipython.wrapper',\n                           'plugs': ['home', 'network', 'network-bind']},\n               'python': {'command': 'snap/command-chain/snapcraft-runner '\n                                     '$SNAP/command-python.wrapper',\n                          'plugs': ['home', 'network', 'network-bind']},\n               'snap-helpers': {'command': 'snap/command-chain/snapcraft-runner '\n                                           '$SNAP/command-snap-helpers.wrapper',\n                                'plugs': ['home', 'network', 'network-bind']}},\n      'architectures': ['amd64'],\n      'base': 'core18',\n      'confinement': 'strict',\n      'description': 'Test snap for snap-helpers.\\n'\n                     '\\n'\n                     'It provides python and ipython shells to test the '\n                     '`snaphelpers` library.\\n',\n      'grade': 'stable',\n      'name': 'snap-helpers',\n      'summary': 'Test snap for snap-helpers',\n      'version': '0.1.6+git6.37370cd'}\n\n\nHook helpers\n------------\n\nThe library provides helpers to reduce boilerplate when setting up hooks for the snap.\n\nHooks can be defined by simply registering functions to be called as hooks via\n``entry_points`` in the application ``setup.py``:\n\n.. code:: python\n\n   setup(\n       # ...\n       entry_points={\n           \"snaphelpers.hooks\": [\n               \"configure = testapp:configure_hook\",\n               \"install = testapp:install_hook\",\n           ]\n       }\n   )\n\nHook functions are called with a ``Snap`` object as argument:\n\n.. code:: python\n\n   def install_hook(snap: snaphelpers.Snap):\n       # ...\n\n\n   def configure_hook(snap: snaphelpers.Snap):\n       # ...\n\n``snap-helpers`` will take care of the hooks plumbing (i.e. creating hook files\nin ``$SNAP/snap/hooks``).\n\nAlternatively, the configuration can be done in ``setup.cfg``:\n\n.. code:: ini\n\n   [options.entry_points]\n   snaphelpers.hooks =\n       install = testapp:install_hook\n       configure = testapp:configure_hook\n\n\nTesting with the snap\n---------------------\n\nThe ``snap-helpers`` snap provides a way to easily test code using the library in\na real snap environment with strict confinement.\n\nIt provides an IPython_ shell which automatically imports the ``snaphelpers``\nmodule and provides a ``Snap`` instance for the current snap.\n\n.. code::\n\n   $ snap-helpers\n   Python 3.6.8 (default, Aug 20 2019, 17:12:48)\n   Type 'copyright', 'credits' or 'license' for more information\n   IPython 7.8.0 -- An enhanced Interactive Python. Type '?' for help.\n\n\n   Use the \"snap\" variable for an instance for the current snap.\n\n   In [1]: import pprint\n\n   In [2]: pprint.pprint(dict(snap.environ))\n   {'ARCH': 'amd64',\n    'COMMON': '/var/snap/snap-helpers/common',\n    'CONTEXT': 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890',\n    'COOKIE': 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890',\n    'DATA': '/var/snap/snap-helpers/x1',\n    'INSTANCE_KEY': '',\n    'INSTANCE_NAME': 'snap-helpers',\n    'LIBRARY_PATH': '/var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void',\n    'NAME': 'snap-helpers',\n    'REEXEC': '',\n    'REVISION': 'x1',\n    'SNAP': '/snap/snap-helpers/x1',\n    'USER_COMMON': '/home/ack/snap/snap-helpers/common',\n    'USER_DATA': '/home/ack/snap/snap-helpers/x1',\n    'VERSION': '0.1.6+git1.4a0b997'}\n\nThe snap can be built and installed as follows:\n\n.. code:: shell\n\n   $ snapcraft\n   $ sudo snap install --dangerous snap-helpers_*.snap\n\n\nInstallation\n------------\n\n``snap-helpers`` can be installed from PyPI_.\n\nRun:\n\n.. code:: shell\n\n   $ pip install snap-helpers\n\n\nDocumentation\n-------------\n\nFull documentation is available on ReadTheDocs_.\n\n\n.. _IPython: https://ipython.org/\n.. _PyPI: https://pypi.org/\n.. _ReadTheDocs: https://snap-helpers.readthedocs.io/en/latest/\n\n.. |Latest Version| image:: https://img.shields.io/pypi/v/snap-helpers.svg\n   :target: https://pypi.python.org/pypi/snap-helpers\n.. |Build Status| image:: https://img.shields.io/travis/albertodonato/snap-helpers.svg\n   :target: https://travis-ci.com/albertodonato/snap-helpers\n.. |Coverage Status| image:: https://img.shields.io/codecov/c/github/albertodonato/snap-helpers/master.svg\n   :target: https://codecov.io/gh/albertodonato/snap-helpers\n.. |Documentation Status| image:: https://readthedocs.org/projects/snap-helpers/badge/?version=stable\n   :target: https://snap-helpers.readthedocs.io/en/stable/?badge=stable", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/albertodonato/snap-helpers", "keywords": "snap,snappy,snapcraft", "license": "LGPLv3+", "maintainer": "Alberto Donato", "maintainer_email": "alberto.donato@gmail.com", "name": "snap-helpers", "package_url": "https://pypi.org/project/snap-helpers/", "platform": "", "project_url": "https://pypi.org/project/snap-helpers/", "project_urls": {"Homepage": "https://github.com/albertodonato/snap-helpers"}, "release_url": "https://pypi.org/project/snap-helpers/0.2.0/", "requires_dist": null, "requires_python": ">= 3.6", "summary": "Helpers for interacting with the Snap system within a Snap", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/snap-helpers\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c62a606a51906995684ca7f87fb85df81d6fcdae/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f736e61702d68656c706572732e737667\"></a> <a href=\"https://travis-ci.com/albertodonato/snap-helpers\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca510c1c3a0f92b9a81e3f85a5eb2b372a9ec135/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f616c626572746f646f6e61746f2f736e61702d68656c706572732e737667\"></a> <a href=\"https://codecov.io/gh/albertodonato/snap-helpers\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c2d4b1f19c90576c7c2b516df2b4898ae143224c/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f616c626572746f646f6e61746f2f736e61702d68656c706572732f6d61737465722e737667\"></a> <a href=\"https://snap-helpers.readthedocs.io/en/stable/?badge=stable\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ead1082adc60e78e49551999d8d6779996ec39d/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f736e61702d68656c706572732f62616467652f3f76657273696f6e3d737461626c65\"></a></p>\n<p>A Python library to interact with snap configuration and properties from inside a snap.</p>\n<p>It exposes a top-level <tt>snaphelpers.Snap</tt> object which provides access to:</p>\n<ul>\n<li><p>snap details:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span> <span class=\"o\">=</span> <span class=\"n\">snaphelpers</span><span class=\"o\">.</span><span class=\"n\">Snap</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"s1\">'testapp'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">instance_name</span>\n<span class=\"s1\">'testapp'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">version</span>\n<span class=\"s1\">'0+git.fdf80cd'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">revision</span>\n<span class=\"s1\">'x1'</span>\n</pre>\n</li>\n<li><p>paths:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">paths</span><span class=\"o\">.</span><span class=\"n\">common</span>\n<span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">'/var/snap/testapp/common'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">paths</span><span class=\"o\">.</span><span class=\"n\">data</span>\n<span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">'/var/snap/testapp/x1'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">paths</span><span class=\"o\">.</span><span class=\"n\">snap</span>\n<span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">'/snap/testapp/x1'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">paths</span><span class=\"o\">.</span><span class=\"n\">user_common</span>\n<span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">'/home/ack/snap/testapp/common'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">paths</span><span class=\"o\">.</span><span class=\"n\">user_data</span>\n<span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">'/home/ack/snap/testapp/x1'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>snap-related environment variables:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"o\">.</span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">))</span>\n<span class=\"p\">{</span><span class=\"s1\">'ARCH'</span><span class=\"p\">:</span> <span class=\"s1\">'amd64'</span><span class=\"p\">,</span>\n <span class=\"s1\">'COMMON'</span><span class=\"p\">:</span> <span class=\"s1\">'/var/snap/testapp/common'</span><span class=\"p\">,</span>\n <span class=\"s1\">'CONTEXT'</span><span class=\"p\">:</span> <span class=\"s1\">'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'</span><span class=\"p\">,</span>\n <span class=\"s1\">'COOKIE'</span><span class=\"p\">:</span> <span class=\"s1\">'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'</span><span class=\"p\">,</span>\n <span class=\"s1\">'DATA'</span><span class=\"p\">:</span> <span class=\"s1\">'/var/snap/testapp/x1'</span><span class=\"p\">,</span>\n <span class=\"s1\">'INSTANCE_KEY'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n <span class=\"s1\">'INSTANCE_NAME'</span><span class=\"p\">:</span> <span class=\"s1\">'testapp'</span><span class=\"p\">,</span>\n <span class=\"s1\">'LIBRARY_PATH'</span><span class=\"p\">:</span> <span class=\"s1\">'/var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void'</span><span class=\"p\">,</span>\n <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"s1\">'testapp'</span><span class=\"p\">,</span>\n <span class=\"s1\">'REEXEC'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n <span class=\"s1\">'REVISION'</span><span class=\"p\">:</span> <span class=\"s1\">'x1'</span><span class=\"p\">,</span>\n <span class=\"s1\">'SNAP'</span><span class=\"p\">:</span> <span class=\"s1\">'/snap/testapp/x1'</span><span class=\"p\">,</span>\n <span class=\"s1\">'USER_COMMON'</span><span class=\"p\">:</span> <span class=\"s1\">'/home/ack/snap/testapp/common'</span><span class=\"p\">,</span>\n <span class=\"s1\">'USER_DATA'</span><span class=\"p\">:</span> <span class=\"s1\">'/home/ack/snap/testapp/x1'</span><span class=\"p\">,</span>\n <span class=\"s1\">'VERSION'</span><span class=\"p\">:</span> <span class=\"s1\">'0+git.fdf80cd'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">ARCH</span>\n<span class=\"s1\">'amd64'</span>\n</pre>\n</li>\n<li><p>configuration options:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span><span class=\"s1\">'foo.bar'</span><span class=\"p\">:</span> <span class=\"s1\">'baz'</span><span class=\"p\">,</span> <span class=\"s1\">'asdf'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">})</span>  <span class=\"c1\"># this needs to be run as root</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get_options</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"s1\">'asdf'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">options</span><span class=\"p\">[</span><span class=\"s1\">'foo'</span><span class=\"p\">]</span>\n<span class=\"p\">{</span><span class=\"s1\">'bar'</span><span class=\"p\">:</span> <span class=\"s1\">'baz'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">options</span><span class=\"p\">[</span><span class=\"s1\">'foo.bar'</span><span class=\"p\">]</span>\n<span class=\"s1\">'baz'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">options</span><span class=\"p\">[</span><span class=\"s1\">'asdf'</span><span class=\"p\">]</span>\n<span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">as_dict</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">'asdf'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'bar'</span><span class=\"p\">:</span> <span class=\"s1\">'baz'</span><span class=\"p\">}}</span>\n</pre>\n</li>\n<li><p>setting snap health status, along with message and optional status code:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">health</span><span class=\"o\">.</span><span class=\"n\">okay</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">health</span><span class=\"o\">.</span><span class=\"n\">waiting</span><span class=\"p\">(</span><span class=\"s1\">'foo must happen first'</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s1\">'wait-foo'</span><span class=\"p\">)</span>\n</pre>\n<p>Health status (when different from <tt>okay</tt>) is visible from the <tt>snap</tt>\nCLI:</p>\n<pre>$ snap info snap-helpers\nname:    snap-helpers\nsummary: Test snap for snap-helpers\nhealth:\n  status:  waiting\n  message: foo must happen first\n  code:    wait-foo\n  checked: today at 16:23 CEST\n</pre>\n</li>\n<li><p>content of snap metadata files such as:</p>\n<ul>\n<li><tt>snap/metadata.yaml</tt></li>\n<li><tt>meta/snap.yaml</tt></li>\n<li><tt>snap/snapcraft.yaml</tt></li>\n</ul>\n<p>These can be accessed as follows:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">metadata_files</span><span class=\"o\">.</span><span class=\"n\">snap</span>\n<span class=\"n\">SnapMetadataFile</span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">snap</span><span class=\"o\">/</span><span class=\"n\">snap</span><span class=\"o\">-</span><span class=\"n\">helpers</span><span class=\"o\">/</span><span class=\"n\">x3</span><span class=\"o\">/</span><span class=\"n\">meta</span><span class=\"o\">/</span><span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">yaml</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">snap</span><span class=\"o\">.</span><span class=\"n\">metadata_files</span><span class=\"o\">.</span><span class=\"n\">snap</span><span class=\"p\">))</span>\n<span class=\"p\">{</span><span class=\"s1\">'apps'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'ipython'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'command'</span><span class=\"p\">:</span> <span class=\"s1\">'snap/command-chain/snapcraft-runner '</span>\n                                 <span class=\"s1\">'$SNAP/command-ipython.wrapper'</span><span class=\"p\">,</span>\n                      <span class=\"s1\">'plugs'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'home'</span><span class=\"p\">,</span> <span class=\"s1\">'network'</span><span class=\"p\">,</span> <span class=\"s1\">'network-bind'</span><span class=\"p\">]},</span>\n          <span class=\"s1\">'python'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'command'</span><span class=\"p\">:</span> <span class=\"s1\">'snap/command-chain/snapcraft-runner '</span>\n                                <span class=\"s1\">'$SNAP/command-python.wrapper'</span><span class=\"p\">,</span>\n                     <span class=\"s1\">'plugs'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'home'</span><span class=\"p\">,</span> <span class=\"s1\">'network'</span><span class=\"p\">,</span> <span class=\"s1\">'network-bind'</span><span class=\"p\">]},</span>\n          <span class=\"s1\">'snap-helpers'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'command'</span><span class=\"p\">:</span> <span class=\"s1\">'snap/command-chain/snapcraft-runner '</span>\n                                      <span class=\"s1\">'$SNAP/command-snap-helpers.wrapper'</span><span class=\"p\">,</span>\n                           <span class=\"s1\">'plugs'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'home'</span><span class=\"p\">,</span> <span class=\"s1\">'network'</span><span class=\"p\">,</span> <span class=\"s1\">'network-bind'</span><span class=\"p\">]}},</span>\n <span class=\"s1\">'architectures'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'amd64'</span><span class=\"p\">],</span>\n <span class=\"s1\">'base'</span><span class=\"p\">:</span> <span class=\"s1\">'core18'</span><span class=\"p\">,</span>\n <span class=\"s1\">'confinement'</span><span class=\"p\">:</span> <span class=\"s1\">'strict'</span><span class=\"p\">,</span>\n <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'Test snap for snap-helpers.</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n                <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n                <span class=\"s1\">'It provides python and ipython shells to test the '</span>\n                <span class=\"s1\">'`snaphelpers` library.</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n <span class=\"s1\">'grade'</span><span class=\"p\">:</span> <span class=\"s1\">'stable'</span><span class=\"p\">,</span>\n <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'snap-helpers'</span><span class=\"p\">,</span>\n <span class=\"s1\">'summary'</span><span class=\"p\">:</span> <span class=\"s1\">'Test snap for snap-helpers'</span><span class=\"p\">,</span>\n <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"s1\">'0.1.6+git6.37370cd'</span><span class=\"p\">}</span>\n</pre>\n</li>\n</ul>\n<div id=\"hook-helpers\">\n<h2>Hook helpers</h2>\n<p>The library provides helpers to reduce boilerplate when setting up hooks for the snap.</p>\n<p>Hooks can be defined by simply registering functions to be called as hooks via\n<tt>entry_points</tt> in the application <tt>setup.py</tt>:</p>\n<pre><span class=\"n\">setup</span><span class=\"p\">(</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"n\">entry_points</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"snaphelpers.hooks\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"configure = testapp:configure_hook\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"install = testapp:install_hook\"</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Hook functions are called with a <tt>Snap</tt> object as argument:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">install_hook</span><span class=\"p\">(</span><span class=\"n\">snap</span><span class=\"p\">:</span> <span class=\"n\">snaphelpers</span><span class=\"o\">.</span><span class=\"n\">Snap</span><span class=\"p\">):</span>\n    <span class=\"c1\"># ...</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">configure_hook</span><span class=\"p\">(</span><span class=\"n\">snap</span><span class=\"p\">:</span> <span class=\"n\">snaphelpers</span><span class=\"o\">.</span><span class=\"n\">Snap</span><span class=\"p\">):</span>\n    <span class=\"c1\"># ...</span>\n</pre>\n<p><tt><span class=\"pre\">snap-helpers</span></tt> will take care of the hooks plumbing (i.e. creating hook files\nin <tt>$SNAP/snap/hooks</tt>).</p>\n<p>Alternatively, the configuration can be done in <tt>setup.cfg</tt>:</p>\n<pre><span class=\"k\">[options.entry_points]</span>\n<span class=\"na\">snaphelpers.hooks</span> <span class=\"o\">=</span><span class=\"s\">\n    install = testapp:install_hook\n    configure = testapp:configure_hook</span>\n</pre>\n</div>\n<div id=\"testing-with-the-snap\">\n<h2>Testing with the snap</h2>\n<p>The <tt><span class=\"pre\">snap-helpers</span></tt> snap provides a way to easily test code using the library in\na real snap environment with strict confinement.</p>\n<p>It provides an <a href=\"https://ipython.org/\" rel=\"nofollow\">IPython</a> shell which automatically imports the <tt>snaphelpers</tt>\nmodule and provides a <tt>Snap</tt> instance for the current snap.</p>\n<pre>$ snap-helpers\nPython 3.6.8 (default, Aug 20 2019, 17:12:48)\nType 'copyright', 'credits' or 'license' for more information\nIPython 7.8.0 -- An enhanced Interactive Python. Type '?' for help.\n\n\nUse the \"snap\" variable for an instance for the current snap.\n\nIn [1]: import pprint\n\nIn [2]: pprint.pprint(dict(snap.environ))\n{'ARCH': 'amd64',\n 'COMMON': '/var/snap/snap-helpers/common',\n 'CONTEXT': 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890',\n 'COOKIE': 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890',\n 'DATA': '/var/snap/snap-helpers/x1',\n 'INSTANCE_KEY': '',\n 'INSTANCE_NAME': 'snap-helpers',\n 'LIBRARY_PATH': '/var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void',\n 'NAME': 'snap-helpers',\n 'REEXEC': '',\n 'REVISION': 'x1',\n 'SNAP': '/snap/snap-helpers/x1',\n 'USER_COMMON': '/home/ack/snap/snap-helpers/common',\n 'USER_DATA': '/home/ack/snap/snap-helpers/x1',\n 'VERSION': '0.1.6+git1.4a0b997'}\n</pre>\n<p>The snap can be built and installed as follows:</p>\n<pre>$ snapcraft\n$ sudo snap install --dangerous snap-helpers_*.snap\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt><span class=\"pre\">snap-helpers</span></tt> can be installed from <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPI</a>.</p>\n<p>Run:</p>\n<pre>$ pip install snap-helpers\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Full documentation is available on <a href=\"https://snap-helpers.readthedocs.io/en/latest/\" rel=\"nofollow\">ReadTheDocs</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6171762, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c852d47b92418d196ae6241977ec7719", "sha256": "0e30849d6cab35cacbd00e8180ea4bd0dffb0fb39e150bd6a168a4798303027a"}, "downloads": -1, "filename": "snap-helpers-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c852d47b92418d196ae6241977ec7719", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16052, "upload_time": "2019-03-09T14:46:36", "upload_time_iso_8601": "2019-03-09T14:46:36.561117Z", "url": "https://files.pythonhosted.org/packages/6c/1f/bce769d1e3cc07a9519737d207b7e7f3bca472243bcce4acd307ab1910ca/snap-helpers-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "ae502ebf1b44b7f682e013f0b2c5e698", "sha256": "a64002306ff41dc6f1fade7a0ac2b080ddd63ed57cf593f7ad49f7f17e014246"}, "downloads": -1, "filename": "snap-helpers-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ae502ebf1b44b7f682e013f0b2c5e698", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17723, "upload_time": "2019-03-10T18:10:47", "upload_time_iso_8601": "2019-03-10T18:10:47.086895Z", "url": "https://files.pythonhosted.org/packages/c7/cb/fbca46075b5df3d0af79024242b2eb76037aa5140cfc2d11af4781f35017/snap-helpers-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e1b61ba4423e4ccb86a647c49be15b94", "sha256": "9aca540ab361bd19cc899aa89e823dc3e8ee13aa41eb3185a9ac8b78da612a9b"}, "downloads": -1, "filename": "snap-helpers-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e1b61ba4423e4ccb86a647c49be15b94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17858, "upload_time": "2019-03-12T16:07:41", "upload_time_iso_8601": "2019-03-12T16:07:41.961333Z", "url": "https://files.pythonhosted.org/packages/d8/72/c279eb863188acf93848243674936c6ca320f83805be93daf68658822583/snap-helpers-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a4503720f6804d09564bedab40144227", "sha256": "cd43ebc66a7b709b45d175d4a13f17d2e183337d7b5a5a8945e0a5d0b879f027"}, "downloads": -1, "filename": "snap-helpers-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a4503720f6804d09564bedab40144227", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18046, "upload_time": "2019-03-14T11:43:21", "upload_time_iso_8601": "2019-03-14T11:43:21.253716Z", "url": "https://files.pythonhosted.org/packages/58/54/4edb7e702b519b2afadffb61e0aa781a3683c48d2656fa90b355cb3b4515/snap-helpers-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "85c7b69bbe49bc978726486f63ece368", "sha256": "b1b1fcf6e32aa234dc2e4b66dfd309d8aea539f044ca70f390ff1437c65ed319"}, "downloads": -1, "filename": "snap-helpers-0.1.3.tar.gz", "has_sig": false, "md5_digest": "85c7b69bbe49bc978726486f63ece368", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16243, "upload_time": "2019-04-29T07:26:46", "upload_time_iso_8601": "2019-04-29T07:26:46.518783Z", "url": "https://files.pythonhosted.org/packages/1f/19/e3b624582ee730a8b67b7f4ecc252912b74c9cc66cfe85f0c1358bbebee2/snap-helpers-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "77344a9200d64085253bebb806987aa9", "sha256": "43262fc85863280b3b7a3ddb9626e76f86ae4589dd7f5510636cd982ae2776d9"}, "downloads": -1, "filename": "snap-helpers-0.1.4.tar.gz", "has_sig": false, "md5_digest": "77344a9200d64085253bebb806987aa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16176, "upload_time": "2019-04-29T08:22:52", "upload_time_iso_8601": "2019-04-29T08:22:52.138860Z", "url": "https://files.pythonhosted.org/packages/01/f3/5edbaa4ff322d37b2f3050fa4f07cb3cc8aff89a81de9b217daf18e079ca/snap-helpers-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "00e8267d5ff643d2594d6bd2ec84421f", "sha256": "dbcf4310b0a379f76ecb254990b7bf08714a8560cc84b5a7ac7933807e3a0acf"}, "downloads": -1, "filename": "snap-helpers-0.1.5.tar.gz", "has_sig": false, "md5_digest": "00e8267d5ff643d2594d6bd2ec84421f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16232, "upload_time": "2019-04-29T08:30:20", "upload_time_iso_8601": "2019-04-29T08:30:20.518993Z", "url": "https://files.pythonhosted.org/packages/14/35/fd3f6f99608fada7e4946e3879545f99bf5ae91ebb3e9331da432c026df8/snap-helpers-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "bd2a6515e224a0ee46857d01f52dc290", "sha256": "bced67503c36854ed656bc9c9e002b5da4e1cc74da3c865bbcdce54680130489"}, "downloads": -1, "filename": "snap-helpers-0.1.6.tar.gz", "has_sig": false, "md5_digest": "bd2a6515e224a0ee46857d01f52dc290", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17573, "upload_time": "2019-09-18T21:42:23", "upload_time_iso_8601": "2019-09-18T21:42:23.940140Z", "url": "https://files.pythonhosted.org/packages/97/de/7d1aadb0dd37a6257fd6266511494ff309c51b975b34315b0e348995c6bf/snap-helpers-0.1.6.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a14d1d9ab21a26ac03a671463f1f323a", "sha256": "e72c810af32a0126bfcb7d5c39dda5ca2037889ca2fe2ee5aa543a25b9ca670b"}, "downloads": -1, "filename": "snap-helpers-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a14d1d9ab21a26ac03a671463f1f323a", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 20141, "upload_time": "2019-11-20T22:09:21", "upload_time_iso_8601": "2019-11-20T22:09:21.023298Z", "url": "https://files.pythonhosted.org/packages/54/a4/7f11eb8d96826cfe17c4c68b907f8005d97ad1ef23dea67aa3d39287f6d7/snap-helpers-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a14d1d9ab21a26ac03a671463f1f323a", "sha256": "e72c810af32a0126bfcb7d5c39dda5ca2037889ca2fe2ee5aa543a25b9ca670b"}, "downloads": -1, "filename": "snap-helpers-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a14d1d9ab21a26ac03a671463f1f323a", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 20141, "upload_time": "2019-11-20T22:09:21", "upload_time_iso_8601": "2019-11-20T22:09:21.023298Z", "url": "https://files.pythonhosted.org/packages/54/a4/7f11eb8d96826cfe17c4c68b907f8005d97ad1ef23dea67aa3d39287f6d7/snap-helpers-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:35 2020"}