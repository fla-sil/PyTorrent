{"info": {"author": "Ian Gow", "author_email": "iandgow@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# WRDS (or SAS) to PostgreSQL\nThis software has two functions:\n- Download tables from [WRDS](https://wrds-web.wharton.upenn.edu/wrds/) and feeds them to a PostgreSQL database. (Requires access to WRDS and to the data in question.)\n- Import a SAS file (`*.sas7dbat`) into a PostgreSQL database.\n\n## Requirements\n\n### 1. Python\nThe software uses Python 3 and depends on Pandas, SQLAlchemy and Paramiko. In addition, the Python scripts generally interact with PostgreSQL using SQLAlchemy and the [Psycopg](http://initd.org/psycopg/) library. \nThese dependencies are installed when you use Pip (see instructions below).\n\n### 2. A WRDS ID\nTo use public-key authentication to access WRDS, follow hints taken from [here](https://debian-administration.org/article/152/Password-less_logins_with_OpenSSH) to set up a public key.\nCopy that key to the WRDS server from the terminal on my computer. \n(Note that this code assumes you have a directory `.ssh` in your home directory. If not, log into WRDS via SSH, then type `mkdir ~/.ssh` to create this.) \nHere's code to create the key and send it to WRDS (for me):\n```\nssh-keygen -t rsa\ncat ~/.ssh/id_rsa.pub | ssh iangow@wrds-cloud.wharton.upenn.edu \"cat >> ~/.ssh/authorized_keys\"\n```\nUse an empty passphrase in setting up the key so that the scripts can run without user intervention.\n\n### 3. PostgreSQL\nYou should have a PostgreSQL database to store the data.\n\n### 4. Environment variables\n\nEnvironment variables that the code can use include:\n\n- `PGDATABASE`: The name of the PostgreSQL database you use.\n- `PGUSER`: Your username on the PostgreSQL database.\n- `PGHOST`: Where the PostgreSQL database is to be found (this will be `localhost` if its on the same machine as you're running the code on)\n- `WRDS_ID`: Your [WRDS](https://wrds-web.wharton.upenn.edu/wrds/) ID.\n\nI set these environment variables in `~/.profile`:\n\n```\nexport PGHOST=\"localhost\"\nexport PGDATABASE=\"crsp\"\nexport WRDS_ID=\"iangow\"\nexport PGUSER=\"igow\"\n```\n\n## Using the function `wrds_update`.\n\nTwo arguments `table_name` and `schema` are required.\n\n### 1. WRDS Settings\nSet `WRDS_ID`  using either `wrds_id=your_wrds_id` in the function call or the environment variable `WRDS_ID`.\n\n### 2. Environment variables\nThe software will use the environment variables `PGHOST`, `PGDATABASE`, and `PGUSER` if you If you have set them. Otherwise, you need to provide values as arguments to `wrds_udpate()`. Default `PGPORT` is`5432`.\n\n### 3. Table settings\nTo tailor your request, specify the following arguments:\n\n- `fix_missing`: set to `True` to fix missing values. This addresses special missign values, which SAS's `PROC EXPORT` dumps as strings. Default value is `False`. \n- `fix_cr`: set to `True` to fix characters. Default value is `False`.\n- `drop`: add column names to be dropped (e.g., `drop=\"id name\"` will drop columns `id` and `name`).\n- `obs`: add maxium number of observations (e.g., `obs=10` will import the first 10 rows from the table on WRDS).\n- `rename`: rename columns (e.g., `rename=\"fee=mngt_fee\"` renames `fee` to `mngt_fee`).\n- `force`: set to `True` to force update. Default value is `False`.\n\n## Importing SAS data into PostgreSQL\nThe software can also upload SAS file directly to PostgreSQL. \nYou need to have local SAS in order to use this function.\nUse `fpath` to specify the path to the file to be imported\n\n### Examples\nHere are some examples.\n\nIf you are at the home directory of this git repo, you can import and use the software as shown below.\n\nTo install it from Github:\n\n```\nsudo -H pip3 install git+https://github.com/iangow/wrds2pg --upgrade\n```\n\nThis software is also available from PyPI. To install it from [PyPI](https://pypi.org/project/wrds2pg/):\n```\npip3 install wrds2pg\n```\nExample usage:\n```py\nfrom wrds2pg import wrds_update\n\n# 1. Download crsp.mcti from wrds and upload to pg as crps.mcti\n# Simplest version\nwrds_update(table_name=\"mcti\", schema=\"crsp\")\n\n# Tailored arguments \nwrds_update(table_name=\"mcti\", schema=\"crsp\", host=your_pghost, \n\tdbname=your_pg_database, \n\tfix_missing=True, fix_cr=True, drop=\"b30ret b30ind\", obs=10, \n\trename=\"caldt=calendar_date\", force=True)\n\n# 2. Upload test.sas7dbat to pg as crsp.mcti\nwrds_update(table_name=\"mcti\", schema=\"crsp\", fpath=\"your_path/test.sas7dbat\")\n```\n\n### Report Bugs\nAuthor: Ian Gow, <iandgow@gmail.com>\n\nContributor: Jingyu Zhang, <jingyu.zhang@chicagobooth.edu>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/iangow/wrds2pg/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "wrds2pg", "package_url": "https://pypi.org/project/wrds2pg/", "platform": "", "project_url": "https://pypi.org/project/wrds2pg/", "project_urls": {"Homepage": "https://github.com/iangow/wrds2pg/"}, "release_url": "https://pypi.org/project/wrds2pg/0.1.20/", "requires_dist": ["pandas", "sqlalchemy", "paramiko", "psycopg2"], "requires_python": ">=3", "summary": "Import WRDS tables or SAS data into PostgreSQL.", "version": "0.1.20", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>WRDS (or SAS) to PostgreSQL</h1>\n<p>This software has two functions:</p>\n<ul>\n<li>Download tables from <a href=\"https://wrds-web.wharton.upenn.edu/wrds/\" rel=\"nofollow\">WRDS</a> and feeds them to a PostgreSQL database. (Requires access to WRDS and to the data in question.)</li>\n<li>Import a SAS file (<code>*.sas7dbat</code>) into a PostgreSQL database.</li>\n</ul>\n<h2>Requirements</h2>\n<h3>1. Python</h3>\n<p>The software uses Python 3 and depends on Pandas, SQLAlchemy and Paramiko. In addition, the Python scripts generally interact with PostgreSQL using SQLAlchemy and the <a href=\"http://initd.org/psycopg/\" rel=\"nofollow\">Psycopg</a> library.\nThese dependencies are installed when you use Pip (see instructions below).</p>\n<h3>2. A WRDS ID</h3>\n<p>To use public-key authentication to access WRDS, follow hints taken from <a href=\"https://debian-administration.org/article/152/Password-less_logins_with_OpenSSH\" rel=\"nofollow\">here</a> to set up a public key.\nCopy that key to the WRDS server from the terminal on my computer.\n(Note that this code assumes you have a directory <code>.ssh</code> in your home directory. If not, log into WRDS via SSH, then type <code>mkdir ~/.ssh</code> to create this.)\nHere's code to create the key and send it to WRDS (for me):</p>\n<pre><code>ssh-keygen -t rsa\ncat ~/.ssh/id_rsa.pub | ssh iangow@wrds-cloud.wharton.upenn.edu \"cat &gt;&gt; ~/.ssh/authorized_keys\"\n</code></pre>\n<p>Use an empty passphrase in setting up the key so that the scripts can run without user intervention.</p>\n<h3>3. PostgreSQL</h3>\n<p>You should have a PostgreSQL database to store the data.</p>\n<h3>4. Environment variables</h3>\n<p>Environment variables that the code can use include:</p>\n<ul>\n<li><code>PGDATABASE</code>: The name of the PostgreSQL database you use.</li>\n<li><code>PGUSER</code>: Your username on the PostgreSQL database.</li>\n<li><code>PGHOST</code>: Where the PostgreSQL database is to be found (this will be <code>localhost</code> if its on the same machine as you're running the code on)</li>\n<li><code>WRDS_ID</code>: Your <a href=\"https://wrds-web.wharton.upenn.edu/wrds/\" rel=\"nofollow\">WRDS</a> ID.</li>\n</ul>\n<p>I set these environment variables in <code>~/.profile</code>:</p>\n<pre><code>export PGHOST=\"localhost\"\nexport PGDATABASE=\"crsp\"\nexport WRDS_ID=\"iangow\"\nexport PGUSER=\"igow\"\n</code></pre>\n<h2>Using the function <code>wrds_update</code>.</h2>\n<p>Two arguments <code>table_name</code> and <code>schema</code> are required.</p>\n<h3>1. WRDS Settings</h3>\n<p>Set <code>WRDS_ID</code>  using either <code>wrds_id=your_wrds_id</code> in the function call or the environment variable <code>WRDS_ID</code>.</p>\n<h3>2. Environment variables</h3>\n<p>The software will use the environment variables <code>PGHOST</code>, <code>PGDATABASE</code>, and <code>PGUSER</code> if you If you have set them. Otherwise, you need to provide values as arguments to <code>wrds_udpate()</code>. Default <code>PGPORT</code> is<code>5432</code>.</p>\n<h3>3. Table settings</h3>\n<p>To tailor your request, specify the following arguments:</p>\n<ul>\n<li><code>fix_missing</code>: set to <code>True</code> to fix missing values. This addresses special missign values, which SAS's <code>PROC EXPORT</code> dumps as strings. Default value is <code>False</code>.</li>\n<li><code>fix_cr</code>: set to <code>True</code> to fix characters. Default value is <code>False</code>.</li>\n<li><code>drop</code>: add column names to be dropped (e.g., <code>drop=\"id name\"</code> will drop columns <code>id</code> and <code>name</code>).</li>\n<li><code>obs</code>: add maxium number of observations (e.g., <code>obs=10</code> will import the first 10 rows from the table on WRDS).</li>\n<li><code>rename</code>: rename columns (e.g., <code>rename=\"fee=mngt_fee\"</code> renames <code>fee</code> to <code>mngt_fee</code>).</li>\n<li><code>force</code>: set to <code>True</code> to force update. Default value is <code>False</code>.</li>\n</ul>\n<h2>Importing SAS data into PostgreSQL</h2>\n<p>The software can also upload SAS file directly to PostgreSQL.\nYou need to have local SAS in order to use this function.\nUse <code>fpath</code> to specify the path to the file to be imported</p>\n<h3>Examples</h3>\n<p>Here are some examples.</p>\n<p>If you are at the home directory of this git repo, you can import and use the software as shown below.</p>\n<p>To install it from Github:</p>\n<pre><code>sudo -H pip3 install git+https://github.com/iangow/wrds2pg --upgrade\n</code></pre>\n<p>This software is also available from PyPI. To install it from <a href=\"https://pypi.org/project/wrds2pg/\" rel=\"nofollow\">PyPI</a>:</p>\n<pre><code>pip3 install wrds2pg\n</code></pre>\n<p>Example usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">wrds2pg</span> <span class=\"kn\">import</span> <span class=\"n\">wrds_update</span>\n\n<span class=\"c1\"># 1. Download crsp.mcti from wrds and upload to pg as crps.mcti</span>\n<span class=\"c1\"># Simplest version</span>\n<span class=\"n\">wrds_update</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"o\">=</span><span class=\"s2\">\"mcti\"</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"s2\">\"crsp\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Tailored arguments </span>\n<span class=\"n\">wrds_update</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"o\">=</span><span class=\"s2\">\"mcti\"</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"s2\">\"crsp\"</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"n\">your_pghost</span><span class=\"p\">,</span> \n\t<span class=\"n\">dbname</span><span class=\"o\">=</span><span class=\"n\">your_pg_database</span><span class=\"p\">,</span> \n\t<span class=\"n\">fix_missing</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">fix_cr</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">drop</span><span class=\"o\">=</span><span class=\"s2\">\"b30ret b30ind\"</span><span class=\"p\">,</span> <span class=\"n\">obs</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> \n\t<span class=\"n\">rename</span><span class=\"o\">=</span><span class=\"s2\">\"caldt=calendar_date\"</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># 2. Upload test.sas7dbat to pg as crsp.mcti</span>\n<span class=\"n\">wrds_update</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"o\">=</span><span class=\"s2\">\"mcti\"</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"s2\">\"crsp\"</span><span class=\"p\">,</span> <span class=\"n\">fpath</span><span class=\"o\">=</span><span class=\"s2\">\"your_path/test.sas7dbat\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Report Bugs</h3>\n<p>Author: Ian Gow, <a href=\"mailto:iandgow@gmail.com\">iandgow@gmail.com</a></p>\n<p>Contributor: Jingyu Zhang, <a href=\"mailto:jingyu.zhang@chicagobooth.edu\">jingyu.zhang@chicagobooth.edu</a></p>\n\n          </div>"}, "last_serial": 7181339, "releases": {"0.1.17": [{"comment_text": "", "digests": {"md5": "9fcb7e3454e6f63fad22324881b6cbe8", "sha256": "3471efec23d7b15c86751d79adc43cb425d7ad46016afc247f1e1992b78083b9"}, "downloads": -1, "filename": "wrds2pg-0.1.17-py3-none-any.whl", "has_sig": false, "md5_digest": "9fcb7e3454e6f63fad22324881b6cbe8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8924, "upload_time": "2020-04-22T16:52:56", "upload_time_iso_8601": "2020-04-22T16:52:56.728626Z", "url": "https://files.pythonhosted.org/packages/36/4d/10bef13832bdc17990beac4a20b47a77976768547aa4bd6137cbafd46f83/wrds2pg-0.1.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e36180084ae85104c86f6437a6b50899", "sha256": "665c4fb5c4dcc9f3553eb144053f334ea76e1721b65a96b438fc5a3f78719ef1"}, "downloads": -1, "filename": "wrds2pg-0.1.17.tar.gz", "has_sig": false, "md5_digest": "e36180084ae85104c86f6437a6b50899", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 10040, "upload_time": "2020-04-22T16:52:59", "upload_time_iso_8601": "2020-04-22T16:52:59.011401Z", "url": "https://files.pythonhosted.org/packages/ae/9c/ee0b12002821c2c8e21625c915081fc315d9f1ceef100cb330e9116f2d0d/wrds2pg-0.1.17.tar.gz", "yanked": false}], "0.1.18": [{"comment_text": "", "digests": {"md5": "36373685786b9a100797309321ce4e94", "sha256": "896ccb2badb2923b55bb6fbe62a8d74604733c8c9c0181b144e2e2f9aabb629c"}, "downloads": -1, "filename": "wrds2pg-0.1.18-py3-none-any.whl", "has_sig": false, "md5_digest": "36373685786b9a100797309321ce4e94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8915, "upload_time": "2020-04-22T17:11:00", "upload_time_iso_8601": "2020-04-22T17:11:00.920500Z", "url": "https://files.pythonhosted.org/packages/ac/24/35ec84d1b765955286a326d0f0c98423730b5818f33c5cdc3e2a2d528adf/wrds2pg-0.1.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d4d290a5659c58d7d2ce433b502d2dd", "sha256": "7dc2949f1891c602c81f795369c5bd3c72fd257370306eca459e7330e0874988"}, "downloads": -1, "filename": "wrds2pg-0.1.18.tar.gz", "has_sig": false, "md5_digest": "1d4d290a5659c58d7d2ce433b502d2dd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 10039, "upload_time": "2020-04-22T17:11:03", "upload_time_iso_8601": "2020-04-22T17:11:03.803614Z", "url": "https://files.pythonhosted.org/packages/dd/4f/6c631513b90802ad1fae0c3fb3dbf65efc603d3fee00a1cae4af45f6b2c5/wrds2pg-0.1.18.tar.gz", "yanked": false}], "0.1.20": [{"comment_text": "", "digests": {"md5": "960c1f36081c35ab99c117141d222f36", "sha256": "bdca9bdaa2e54c59f2120c519804dc52bf271a35e03a80dd8b1f65f961f28ff6"}, "downloads": -1, "filename": "wrds2pg-0.1.20-py3-none-any.whl", "has_sig": false, "md5_digest": "960c1f36081c35ab99c117141d222f36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8932, "upload_time": "2020-05-06T16:19:36", "upload_time_iso_8601": "2020-05-06T16:19:36.995865Z", "url": "https://files.pythonhosted.org/packages/42/1a/cbdac7035e9b7836ed96c6a9e493b556d3f595245c4f0b239c9ba639d53e/wrds2pg-0.1.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5089f5769904a71974232a80ee4e5a0", "sha256": "a9b86e50a278a821f4d1faa3f52312e3e557c332ab234b32def5e10f6afc00ae"}, "downloads": -1, "filename": "wrds2pg-0.1.20.tar.gz", "has_sig": false, "md5_digest": "a5089f5769904a71974232a80ee4e5a0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8393, "upload_time": "2020-05-06T16:19:38", "upload_time_iso_8601": "2020-05-06T16:19:38.379259Z", "url": "https://files.pythonhosted.org/packages/14/81/4c94b875ec21dccdefb6a1846bc4f4d4a6a529a0a6921cbbf580e07f8b6b/wrds2pg-0.1.20.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "960c1f36081c35ab99c117141d222f36", "sha256": "bdca9bdaa2e54c59f2120c519804dc52bf271a35e03a80dd8b1f65f961f28ff6"}, "downloads": -1, "filename": "wrds2pg-0.1.20-py3-none-any.whl", "has_sig": false, "md5_digest": "960c1f36081c35ab99c117141d222f36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 8932, "upload_time": "2020-05-06T16:19:36", "upload_time_iso_8601": "2020-05-06T16:19:36.995865Z", "url": "https://files.pythonhosted.org/packages/42/1a/cbdac7035e9b7836ed96c6a9e493b556d3f595245c4f0b239c9ba639d53e/wrds2pg-0.1.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5089f5769904a71974232a80ee4e5a0", "sha256": "a9b86e50a278a821f4d1faa3f52312e3e557c332ab234b32def5e10f6afc00ae"}, "downloads": -1, "filename": "wrds2pg-0.1.20.tar.gz", "has_sig": false, "md5_digest": "a5089f5769904a71974232a80ee4e5a0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8393, "upload_time": "2020-05-06T16:19:38", "upload_time_iso_8601": "2020-05-06T16:19:38.379259Z", "url": "https://files.pythonhosted.org/packages/14/81/4c94b875ec21dccdefb6a1846bc4f4d4a6a529a0a6921cbbf580e07f8b6b/wrds2pg-0.1.20.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:18 2020"}