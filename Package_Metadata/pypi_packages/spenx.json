{"info": {"author": "Julien LEICHER", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Text Processing :: Markup"], "description": "spenx |travis| |cover| |pypi| |license|\n===========================================\n\n.. |travis| image:: https://travis-ci.org/ducent/spenx.svg?branch=master\n    :target: https://travis-ci.org/ducent/spenx\n\n.. |cover| image:: https://codecov.io/gh/ducent/spenx/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/ducent/spenx\n\n.. |pypi| image:: https://badge.fury.io/py/spenx.svg\n    :target: https://badge.fury.io/py/spenx\n\n.. |license| image:: https://img.shields.io/badge/License-GPL%20v3-blue.svg\n    :target: https://www.gnu.org/licenses/gpl-3.0\n\nTiny template parser which will convert a `pugjs <https://github.com/kakulukia/pypugjs>`_ like syntax to HTML with the help of popular template engines.\n\n**spenx** is not a direct port of the javascript pugjs library but has been heavily influenced by it so don't expect full pugjs features to work. That being said, if you need to add a feature, don't hesitate to submit your pull requests or open an issue!\n\nIn spenx, statements, like conditions and loops, are not processed and outputted \"as it\" to be processed by the template engine you wish to use.\n\nAt the time being, only **Jinja2** and **Mako** has been tested but adding support for anything else should be easy.\n\nWhy another parser?\n-------------------\n\nI know there's a lot of port of jade, pugjs and so on for python. But everyone seems to be unmaintained. I really like the syntax use by pug and want something simplier and easier to maintain in the future with a strict set of features.\n\nThis is why the parser is defined using `Arpeggio <https://github.com/textX/Arpeggio>`_ and the cleanpeg syntax. It's easier to read, understand and maintain.\n\nThe spenx code is really tiny, check it yourself!\n\nInstallation\n------------\n\n.. code-block:: console\n\n  $ pip install spenx\n\nUsage\n-----\n\nUsing spenx is fairly easy:\n\n.. code-block:: python\n\n  from spenx import Parser\n\n  # Without backend\n  parser = Parser()\n\n  parser.parse(\"\"\"\n  p Hello world\n  \"\"\")\n\n  # => <p>Hello world</p>\n\n  # Using jinja2\n  from spenx.ext.jinja import Spenx\n  from jinja import Environment\n\n  env = Environment(\n    # Common jinja parameters\n    extensions=[Spenx], # And the spenx extension\n  )\n\n  # Only preprocess files with given extensions\n  env.spenx_process_extensions = ['.pug', '.spenx'] # Those are the default\n\n  # And use env.get_template and render as usual\n\n  # Using mako\n  from spenx.ext.mako import preprocessor\n  from mako.template import Template\n\n  tpl = Template(\"p Hello world\", preprocessor=preprocessor)\n\n  # And use render as usual\n\nSyntax\n------\n\nIf you're already using pugjs, you should feel familiar with the syntax (see the `tests/` folder for more insights).\n\nValid attributes values are:\n\n- strings, enclosed in `'` or `\\`` (`type='text'`)\n- booleans (`required=True`)\n- numbers (`value=42.0`)\n\n.. code-block:: text\n\n  <!DOCTYPE html>\n  html(lang='en')\n    head\n      meta(charset='utf-8')\n      title My first spenx webpage!\n    body\n      h1 spenx\n      p.welcome\n        | Did I said you'll feel right at home if you're using pugjs? \n        | Because I guess that's right!\n      .container\n        p Without a tag defined, div will be assumed \n          strong pretty cool huh?\n\nAnd this is what's rendered by spenx:\n\n.. code-block:: text\n\n  <!DOCTYPE html><html lang=\"en\"><head><meta charset=\"utf-8\" /><title>My first spenx webpage!</title></head><body><h1>spenx</h1><p class=\"welcome\">Did I said you'll feel right at home if you're using pugjs? Because I guess that's right!</p><div class=\"container\"><p>Without a tag defined, div will be assumed <strong>pretty cool huh?</strong></p></div></body></html>\n\nAnd after using BeautifulSoup:\n\n.. code-block:: text\n\n  <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>\n    My first spenx webpage!\n    </title>\n  </head>\n  <body>\n    <h1>\n    spenx\n    </h1>\n    <p class=\"welcome\">\n    Did I said you'll feel right at home if you're using pugjs? Because I guess that's right!\n    </p>\n    <div class=\"container\">\n    <p>\n      Without a tag defined, div will be assumed\n      <strong>\n      pretty cool huh?\n      </strong>\n    </p>\n    </div>\n  </body>\n  </html>\n\nTesting\n-------\n\n.. code-block:: bash\n\n  $ pip install -e .[test]\n  $ python -m nose --with-doctest -v --with-coverage --cover-package=spenx", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ducent/spenx", "keywords": "", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "spenx", "package_url": "https://pypi.org/project/spenx/", "platform": "", "project_url": "https://pypi.org/project/spenx/", "project_urls": {"Homepage": "https://github.com/ducent/spenx"}, "release_url": "https://pypi.org/project/spenx/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Python 3 template parser to generate HTML from a pug/jade like syntax", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Tiny template parser which will convert a <a href=\"https://github.com/kakulukia/pypugjs\" rel=\"nofollow\">pugjs</a> like syntax to HTML with the help of popular template engines.</p>\n<p><strong>spenx</strong> is not a direct port of the javascript pugjs library but has been heavily influenced by it so don\u2019t expect full pugjs features to work. That being said, if you need to add a feature, don\u2019t hesitate to submit your pull requests or open an issue!</p>\n<p>In spenx, statements, like conditions and loops, are not processed and outputted \u201cas it\u201d to be processed by the template engine you wish to use.</p>\n<p>At the time being, only <strong>Jinja2</strong> and <strong>Mako</strong> has been tested but adding support for anything else should be easy.</p>\n<div id=\"why-another-parser\">\n<h2>Why another parser?</h2>\n<p>I know there\u2019s a lot of port of jade, pugjs and so on for python. But everyone seems to be unmaintained. I really like the syntax use by pug and want something simplier and easier to maintain in the future with a strict set of features.</p>\n<p>This is why the parser is defined using <a href=\"https://github.com/textX/Arpeggio\" rel=\"nofollow\">Arpeggio</a> and the cleanpeg syntax. It\u2019s easier to read, understand and maintain.</p>\n<p>The spenx code is really tiny, check it yourself!</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre><span class=\"gp\">$</span> pip install spenx\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Using spenx is fairly easy:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">spenx</span> <span class=\"kn\">import</span> <span class=\"n\">Parser</span>\n\n<span class=\"c1\"># Without backend</span>\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">Parser</span><span class=\"p\">()</span>\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"\np Hello world\n\"\"\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># =&gt; &lt;p&gt;Hello world&lt;/p&gt;</span>\n\n<span class=\"c1\"># Using jinja2</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spenx.ext.jinja</span> <span class=\"kn\">import</span> <span class=\"n\">Spenx</span>\n<span class=\"kn\">from</span> <span class=\"nn\">jinja</span> <span class=\"kn\">import</span> <span class=\"n\">Environment</span>\n\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">Environment</span><span class=\"p\">(</span>\n  <span class=\"c1\"># Common jinja parameters</span>\n  <span class=\"n\">extensions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Spenx</span><span class=\"p\">],</span> <span class=\"c1\"># And the spenx extension</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Only preprocess files with given extensions</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">spenx_process_extensions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'.pug'</span><span class=\"p\">,</span> <span class=\"s1\">'.spenx'</span><span class=\"p\">]</span> <span class=\"c1\"># Those are the default</span>\n\n<span class=\"c1\"># And use env.get_template and render as usual</span>\n\n<span class=\"c1\"># Using mako</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spenx.ext.mako</span> <span class=\"kn\">import</span> <span class=\"n\">preprocessor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mako.template</span> <span class=\"kn\">import</span> <span class=\"n\">Template</span>\n\n<span class=\"n\">tpl</span> <span class=\"o\">=</span> <span class=\"n\">Template</span><span class=\"p\">(</span><span class=\"s2\">\"p Hello world\"</span><span class=\"p\">,</span> <span class=\"n\">preprocessor</span><span class=\"o\">=</span><span class=\"n\">preprocessor</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># And use render as usual</span>\n</pre>\n</div>\n<div id=\"syntax\">\n<h2>Syntax</h2>\n<p>If you\u2019re already using pugjs, you should feel familiar with the syntax (see the <cite>tests/</cite> folder for more insights).</p>\n<p>Valid attributes values are:</p>\n<ul>\n<li>strings, enclosed in <cite>\u2018</cite> or <cite>`</cite> (<cite>type=\u2019text\u2019</cite>)</li>\n<li>booleans (<cite>required=True</cite>)</li>\n<li>numbers (<cite>value=42.0</cite>)</li>\n</ul>\n<pre>&lt;!DOCTYPE html&gt;\nhtml(lang='en')\n  head\n    meta(charset='utf-8')\n    title My first spenx webpage!\n  body\n    h1 spenx\n    p.welcome\n      | Did I said you'll feel right at home if you're using pugjs?\n      | Because I guess that's right!\n    .container\n      p Without a tag defined, div will be assumed\n        strong pretty cool huh?\n</pre>\n<p>And this is what\u2019s rendered by spenx:</p>\n<pre>&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt;&lt;meta charset=\"utf-8\" /&gt;&lt;title&gt;My first spenx webpage!&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;spenx&lt;/h1&gt;&lt;p class=\"welcome\"&gt;Did I said you'll feel right at home if you're using pugjs? Because I guess that's right!&lt;/p&gt;&lt;div class=\"container\"&gt;&lt;p&gt;Without a tag defined, div will be assumed &lt;strong&gt;pretty cool huh?&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n</pre>\n<p>And after using BeautifulSoup:</p>\n<pre>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"/&gt;\n  &lt;title&gt;\n  My first spenx webpage!\n  &lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;\n  spenx\n  &lt;/h1&gt;\n  &lt;p class=\"welcome\"&gt;\n  Did I said you'll feel right at home if you're using pugjs? Because I guess that's right!\n  &lt;/p&gt;\n  &lt;div class=\"container\"&gt;\n  &lt;p&gt;\n    Without a tag defined, div will be assumed\n    &lt;strong&gt;\n    pretty cool huh?\n    &lt;/strong&gt;\n  &lt;/p&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<pre>$ pip install -e .<span class=\"o\">[</span>test<span class=\"o\">]</span>\n$ python -m nose --with-doctest -v --with-coverage --cover-package<span class=\"o\">=</span>spenx\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5352059, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "7918d476c01aaa96c56083a089dc5b7a", "sha256": "b172cc8f860c8da6501274400ad5726c5e2d9c908ae1c7d79151bb0801192e2f"}, "downloads": -1, "filename": "spenx-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7918d476c01aaa96c56083a089dc5b7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6019, "upload_time": "2019-04-12T20:13:40", "upload_time_iso_8601": "2019-04-12T20:13:40.770443Z", "url": "https://files.pythonhosted.org/packages/fe/01/322b6b787a99f1559cd6e34d5baab64d4fda255cf2037eee0442da0ea2f9/spenx-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "77a2f46ea6984164f3ac28f22340cd77", "sha256": "56d2e0ae52b0f360727714f6c90be19b9ce8b64d0f7aa4e3ad93ea37d2b47525"}, "downloads": -1, "filename": "spenx-1.0.1.tar.gz", "has_sig": false, "md5_digest": "77a2f46ea6984164f3ac28f22340cd77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6013, "upload_time": "2019-04-17T07:00:45", "upload_time_iso_8601": "2019-04-17T07:00:45.062853Z", "url": "https://files.pythonhosted.org/packages/9e/83/37136414a69a32a58b6fbf5640dd837cecf7dba76b44384980212b88cba8/spenx-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "4289a04e47f82eb6c5fc2ee25b944106", "sha256": "652239060beed1c8ca44756b1fef76488575ff0d77b038bfff9c973181c26a77"}, "downloads": -1, "filename": "spenx-1.0.2.tar.gz", "has_sig": false, "md5_digest": "4289a04e47f82eb6c5fc2ee25b944106", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6312, "upload_time": "2019-04-19T07:33:46", "upload_time_iso_8601": "2019-04-19T07:33:46.202793Z", "url": "https://files.pythonhosted.org/packages/80/20/2eeb0a474ebc6b4bfd8d26d8891a56df02b9e7143cd2aa127af93ee25fc4/spenx-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "41a78ed958f11d2c5aa7ef260d1544b0", "sha256": "d218be0e33b4638f7ab8d47fad375d464ce5bde972f68e2c61c94a2e8815be29"}, "downloads": -1, "filename": "spenx-1.1.0.tar.gz", "has_sig": false, "md5_digest": "41a78ed958f11d2c5aa7ef260d1544b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6638, "upload_time": "2019-06-03T11:44:57", "upload_time_iso_8601": "2019-06-03T11:44:57.252602Z", "url": "https://files.pythonhosted.org/packages/db/3e/6fc13541ee67af1a251679c3775d5aff9b6cc6fe21f6985a272cb5540139/spenx-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "41a78ed958f11d2c5aa7ef260d1544b0", "sha256": "d218be0e33b4638f7ab8d47fad375d464ce5bde972f68e2c61c94a2e8815be29"}, "downloads": -1, "filename": "spenx-1.1.0.tar.gz", "has_sig": false, "md5_digest": "41a78ed958f11d2c5aa7ef260d1544b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6638, "upload_time": "2019-06-03T11:44:57", "upload_time_iso_8601": "2019-06-03T11:44:57.252602Z", "url": "https://files.pythonhosted.org/packages/db/3e/6fc13541ee67af1a251679c3775d5aff9b6cc6fe21f6985a272cb5540139/spenx-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:30 2020"}