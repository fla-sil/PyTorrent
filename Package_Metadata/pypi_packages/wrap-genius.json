{"info": {"author": "Federico Calendino", "author_email": "federico@calendino.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "wrap-genius\n===========\n\nPython wrapper for genius.com's API\n-----------------------------------\n\n.. image:: https://img.shields.io/pypi/v/wrap-genius?logo=pypi\n    :target: https://pypi.org/project/wrap-genius\n\n.. image:: https://img.shields.io/readthedocs/wrap-genius?logo=read%20the%20docs\n    :target: https://wrap-genius.readthedocs.io/en/latest/\n\n.. image:: https://img.shields.io/travis/fedecalendino/wrap-genius/master?logo=travis\n    :target: https://travis-ci.com/fedecalendino/wrap-genius\n\n.. image:: https://img.shields.io/sonar/alert_status/fedecalendino_wrap-genius?logo=sonarcloud&server=https://sonarcloud.io\n    :target: https://sonarcloud.io/dashboard?id=fedecalendino_wrap-genius\n\n.. image:: https://img.shields.io/codecov/c/gh/fedecalendino/wrap-genius?logo=codecov\n    :target: https://codecov.io/gh/fedecalendino/wrap-genius\n\n\nInstallation\n------------\n\n**wrap-genius** is supported on Python 3.6+ and it can be installed using `pip <https://pypi.python.org/pypi/pip>`_\n\n.. code-block:: bash\n\n   pip install wrap-genius\n\nTo be able to use it, you'll need to create an API client for `genius.com <https://genius.com/api-clients>`_ and get a **CLIENT ACCESS TOKEN**.\n\nQuickstart\n----------\n\nAssuming you already have you access token, get an instance of the genius wrapper as follows:\n\n.. code-block:: python\n\n    from genius import Genius\n    g = Genius(access_token=\"YOUR-TOKEN\")\n\n\nWith this instance you can interact with genius in many ways:\n\n.. code-block:: python\n\n    # Search for an artist by name\n    artist = g.search_artist(\"Gorillaz\")\n    print(artist)\n\n    >> \"Gorillaz (860)\"\n\n\n\n.. code-block:: python\n\n    # Get the artist's social media accounts\n    instagram = artist.social_media[\"instagram\"]\n    print(instagram.handle, instagram.followers)\n\n    >> \"gorillaz 2277483\"\n\n\n.. code-block:: python\n\n    # Get the artist's song by popularity\n    for song in artist.songs_by_popularity:\n        print(song)\n\n    >> \"Feel Good Inc. (21569)\"\n    >> \"Clint Eastwood (1698)\"\n    >> \"Saturnz Barz (3027437)\"\n    >> \"Ascension (3027418)\"\n    >> \"On Melancholy Hill (53533)\"\n    >> ...\n\n\n.. code-block:: python\n\n    # Get the details of a song by its id\n    song = g.get_song(song_id=3027414)\n    print(song.title_with_featured)\n    print(song.release_date_for_display)\n\n    >> \"Andromeda (Ft.\u00a0DRAM)\"\n    >> \"March 23, 2017\"\n\n\n.. code-block:: python\n\n    # Get the song album, or the featured artists\n    print(song.album)\n    for featured in song.features:\n        print(featured.name)\n\n    >> \"Humanz (335930)\"\n    >> \"DRAM (241761)\"\n\n\n.. code-block:: python\n\n    # And even, a song's lyrics\n    lyrics = song.lyrics\n    print('\\n'.join(lyrics))\n\n    >> \"[Verse 1: 2-D]\"\n    >> \"When the pulsing looks to die for\"\n    >> \"Take it in your heart now, lover\"\n    >> \"When the case is out\"\n    >> \"And tired and sodden\"\n    >> \"Take it in your heart\"\n    >> \"Take it in your heart\"\n    >> ...\n\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fedecalendino/wrap-genius", "keywords": "python,api,genius,lyrics,genius-api,genius-lyrics,wrapper-api,wrapper", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "wrap-genius", "package_url": "https://pypi.org/project/wrap-genius/", "platform": "", "project_url": "https://pypi.org/project/wrap-genius/", "project_urls": {"Homepage": "https://github.com/fedecalendino/wrap-genius"}, "release_url": "https://pypi.org/project/wrap-genius/1.1/", "requires_dist": ["unidecode"], "requires_python": "", "summary": "python wrapper for api.genius.com", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"python-wrapper-for-genius-com-s-api\">\n<h2>Python wrapper for genius.com\u2019s API</h2>\n<a href=\"https://pypi.org/project/wrap-genius\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/wrap-genius?logo=pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f62e44a2426b7a7d910da57adc3e048f111fd8bf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f777261702d67656e6975733f6c6f676f3d70797069\"></a>\n<a href=\"https://wrap-genius.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/readthedocs/wrap-genius?logo=read%20the%20docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7e4ba8b6114520869266d5c60e3290f074892d6b/68747470733a2f2f696d672e736869656c64732e696f2f72656164746865646f63732f777261702d67656e6975733f6c6f676f3d72656164253230746865253230646f6373\"></a>\n<a href=\"https://travis-ci.com/fedecalendino/wrap-genius\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/fedecalendino/wrap-genius/master?logo=travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40b21f09c72fa67b8561419f12d2d8ececded941/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6665646563616c656e64696e6f2f777261702d67656e6975732f6d61737465723f6c6f676f3d747261766973\"></a>\n<a href=\"https://sonarcloud.io/dashboard?id=fedecalendino_wrap-genius\" rel=\"nofollow\"><img alt=\"https://img.shields.io/sonar/alert_status/fedecalendino_wrap-genius?logo=sonarcloud&amp;server=https://sonarcloud.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/80847c0ae3ce67102aa22e24bb854a66339246e6/68747470733a2f2f696d672e736869656c64732e696f2f736f6e61722f616c6572745f7374617475732f6665646563616c656e64696e6f5f777261702d67656e6975733f6c6f676f3d736f6e6172636c6f7564267365727665723d68747470733a2f2f736f6e6172636c6f75642e696f\"></a>\n<a href=\"https://codecov.io/gh/fedecalendino/wrap-genius\" rel=\"nofollow\"><img alt=\"https://img.shields.io/codecov/c/gh/fedecalendino/wrap-genius?logo=codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/18bc5a9c9001fe913de034117a539728611d71ae/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f67682f6665646563616c656e64696e6f2f777261702d67656e6975733f6c6f676f3d636f6465636f76\"></a>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><strong>wrap-genius</strong> is supported on Python 3.6+ and it can be installed using <a href=\"https://pypi.python.org/pypi/pip\" rel=\"nofollow\">pip</a></p>\n<pre>pip install wrap-genius\n</pre>\n<p>To be able to use it, you\u2019ll need to create an API client for <a href=\"https://genius.com/api-clients\" rel=\"nofollow\">genius.com</a> and get a <strong>CLIENT ACCESS TOKEN</strong>.</p>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Assuming you already have you access token, get an instance of the genius wrapper as follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">genius</span> <span class=\"kn\">import</span> <span class=\"n\">Genius</span>\n<span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">Genius</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"s2\">\"YOUR-TOKEN\"</span><span class=\"p\">)</span>\n</pre>\n<p>With this instance you can interact with genius in many ways:</p>\n<pre><span class=\"c1\"># Search for an artist by name</span>\n<span class=\"n\">artist</span> <span class=\"o\">=</span> <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">search_artist</span><span class=\"p\">(</span><span class=\"s2\">\"Gorillaz\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">artist</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"Gorillaz (860)\"</span>\n</pre>\n<pre><span class=\"c1\"># Get the artist's social media accounts</span>\n<span class=\"n\">instagram</span> <span class=\"o\">=</span> <span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">social_media</span><span class=\"p\">[</span><span class=\"s2\">\"instagram\"</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">instagram</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">,</span> <span class=\"n\">instagram</span><span class=\"o\">.</span><span class=\"n\">followers</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"gorillaz 2277483\"</span>\n</pre>\n<pre><span class=\"c1\"># Get the artist's song by popularity</span>\n<span class=\"k\">for</span> <span class=\"n\">song</span> <span class=\"ow\">in</span> <span class=\"n\">artist</span><span class=\"o\">.</span><span class=\"n\">songs_by_popularity</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">song</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"Feel Good Inc. (21569)\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"Clint Eastwood (1698)\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"Saturnz Barz (3027437)\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"Ascension (3027418)\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"On Melancholy Hill (53533)\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"o\">...</span>\n</pre>\n<pre><span class=\"c1\"># Get the details of a song by its id</span>\n<span class=\"n\">song</span> <span class=\"o\">=</span> <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">get_song</span><span class=\"p\">(</span><span class=\"n\">song_id</span><span class=\"o\">=</span><span class=\"mi\">3027414</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">song</span><span class=\"o\">.</span><span class=\"n\">title_with_featured</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">song</span><span class=\"o\">.</span><span class=\"n\">release_date_for_display</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"Andromeda (Ft.\u00a0DRAM)\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"March 23, 2017\"</span>\n</pre>\n<pre><span class=\"c1\"># Get the song album, or the featured artists</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">song</span><span class=\"o\">.</span><span class=\"n\">album</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">featured</span> <span class=\"ow\">in</span> <span class=\"n\">song</span><span class=\"o\">.</span><span class=\"n\">features</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">featured</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"Humanz (335930)\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"DRAM (241761)\"</span>\n</pre>\n<pre><span class=\"c1\"># And even, a song's lyrics</span>\n<span class=\"n\">lyrics</span> <span class=\"o\">=</span> <span class=\"n\">song</span><span class=\"o\">.</span><span class=\"n\">lyrics</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">lyrics</span><span class=\"p\">))</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"[Verse 1: 2-D]\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"When the pulsing looks to die for\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"Take it in your heart now, lover\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"When the case is out\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"And tired and sodden\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"Take it in your heart\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s2\">\"Take it in your heart\"</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"o\">...</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7133233, "releases": {"0.1a0": [{"comment_text": "", "digests": {"md5": "c9bca46dfe7581ad36ed328a364081ca", "sha256": "41c8cd27a1f8c181a2a8a7318bfec108e09f9b9e9cfb39787fc30d9bf9b5802b"}, "downloads": -1, "filename": "wrap_genius-0.1a0-py3-none-any.whl", "has_sig": false, "md5_digest": "c9bca46dfe7581ad36ed328a364081ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9563, "upload_time": "2020-04-18T17:31:28", "upload_time_iso_8601": "2020-04-18T17:31:28.924586Z", "url": "https://files.pythonhosted.org/packages/10/d0/1c50995486670769d161dc303846af9d54b366ffd8522e7373fa094ac1a6/wrap_genius-0.1a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa12a68216c2825eaaa941945e7c01f2", "sha256": "1226911631bf917046225190b0a00ec7a702cadf2f35393b170b5dc63f5dd0a2"}, "downloads": -1, "filename": "wrap-genius-0.1a0.tar.gz", "has_sig": false, "md5_digest": "aa12a68216c2825eaaa941945e7c01f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6483, "upload_time": "2020-04-18T17:31:29", "upload_time_iso_8601": "2020-04-18T17:31:29.800677Z", "url": "https://files.pythonhosted.org/packages/f4/57/3851c5be9c10cc70c4d659de76352136c9dd916c37f0db3ca000c7910262/wrap-genius-0.1a0.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "724bd5d34bf71258a23fbc49e09a70ee", "sha256": "41561b64da31b38b5231b1eeedbb4379f26fded2a466cea442948e2d709d9775"}, "downloads": -1, "filename": "wrap_genius-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "724bd5d34bf71258a23fbc49e09a70ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11574, "upload_time": "2020-04-19T03:15:16", "upload_time_iso_8601": "2020-04-19T03:15:16.046438Z", "url": "https://files.pythonhosted.org/packages/59/3c/0ebe1bc248c8c1ff7c479d6af359aca3eeb693700562787d7e65b6eee313/wrap_genius-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e921b9f49610b5b2044857d49e73bd5", "sha256": "c6f13c7d0e9ba2fe4dbcbf73f91e509b40d4f868d014a86e8234f16a1404930e"}, "downloads": -1, "filename": "wrap-genius-1.0.tar.gz", "has_sig": false, "md5_digest": "9e921b9f49610b5b2044857d49e73bd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9506, "upload_time": "2020-04-19T03:15:17", "upload_time_iso_8601": "2020-04-19T03:15:17.280852Z", "url": "https://files.pythonhosted.org/packages/d0/ec/fcc79e8222c5ce86e98d914d25b8962b32ddd91048e145b815b71e624f48/wrap-genius-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "39633ab2f5eb14e0a4d18f9b9acf5557", "sha256": "389c1d739064c7e685ba072d4f0d6eefebde28eacf001c754e266023a43b47cf"}, "downloads": -1, "filename": "wrap_genius-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "39633ab2f5eb14e0a4d18f9b9acf5557", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11573, "upload_time": "2020-04-29T23:09:23", "upload_time_iso_8601": "2020-04-29T23:09:23.553907Z", "url": "https://files.pythonhosted.org/packages/02/be/4f540ecca896d047e13faa8085d40ef1c83b945ce2cc14251b81f8226f34/wrap_genius-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81dd5d11d30382356496481c0b68daba", "sha256": "eb008d51322fe9475feb1b27e36d1f5b69119c3e452c042b2df88107db6588bd"}, "downloads": -1, "filename": "wrap-genius-1.1.tar.gz", "has_sig": false, "md5_digest": "81dd5d11d30382356496481c0b68daba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9535, "upload_time": "2020-04-29T23:09:24", "upload_time_iso_8601": "2020-04-29T23:09:24.416361Z", "url": "https://files.pythonhosted.org/packages/62/b8/b35fca67aadf55269fd4bbbe72bf51d777167c04fa89bab669b2e2550c62/wrap-genius-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "39633ab2f5eb14e0a4d18f9b9acf5557", "sha256": "389c1d739064c7e685ba072d4f0d6eefebde28eacf001c754e266023a43b47cf"}, "downloads": -1, "filename": "wrap_genius-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "39633ab2f5eb14e0a4d18f9b9acf5557", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11573, "upload_time": "2020-04-29T23:09:23", "upload_time_iso_8601": "2020-04-29T23:09:23.553907Z", "url": "https://files.pythonhosted.org/packages/02/be/4f540ecca896d047e13faa8085d40ef1c83b945ce2cc14251b81f8226f34/wrap_genius-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81dd5d11d30382356496481c0b68daba", "sha256": "eb008d51322fe9475feb1b27e36d1f5b69119c3e452c042b2df88107db6588bd"}, "downloads": -1, "filename": "wrap-genius-1.1.tar.gz", "has_sig": false, "md5_digest": "81dd5d11d30382356496481c0b68daba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9535, "upload_time": "2020-04-29T23:09:24", "upload_time_iso_8601": "2020-04-29T23:09:24.416361Z", "url": "https://files.pythonhosted.org/packages/62/b8/b35fca67aadf55269fd4bbbe72bf51d777167c04fa89bab669b2e2550c62/wrap-genius-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:22 2020"}