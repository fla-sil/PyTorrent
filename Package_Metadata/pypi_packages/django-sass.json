{"info": {"author": "CodeRed LLC", "author_email": "info@coderedcorp.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only"], "description": "django-sass\n===========\n\nThe absolute simplest way to use [Sass](https://sass-lang.com/) with Django.\nPure Python, minimal dependencies, and no special configuration required.\n\n[Source code on GitHub](https://github.com/coderedcorp/django-sass)\n\n\nStatus\n------\n\n|                        |                      |\n|------------------------|----------------------|\n| Python Package         |[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/django-sass)](https://pypi.org/project/django-sass/) [![PyPI - Django Version](https://img.shields.io/pypi/djversions/django-sass)](https://pypi.org/project/django-sass/) [![PyPI - Wheel](https://img.shields.io/pypi/wheel/django-sass)](https://pypi.org/project/django-sass/) [![PyPI - Downloads](https://img.shields.io/pypi/dm/django-sass)](https://pypi.org/project/django-sass/) [![PyPI](https://img.shields.io/pypi/v/django-sass)](https://pypi.org/project/django-sass/) |\n| Build                  | [![Build Status](https://dev.azure.com/coderedcorp/coderedcms/_apis/build/status/django-sass?branchName=master)](https://dev.azure.com/coderedcorp/coderedcms/_build/latest?definitionId=10&branchName=master) [![Azure DevOps tests (branch)](https://img.shields.io/azure-devops/tests/coderedcorp/coderedcms/10/master)](https://dev.azure.com/coderedcorp/coderedcms/_build/latest?definitionId=10&branchName=master) [![Azure DevOps coverage (branch)](https://img.shields.io/azure-devops/coverage/coderedcorp/coderedcms/10/master)](https://dev.azure.com/coderedcorp/coderedcms/_build/latest?definitionId=10&branchName=master) |\n\n\nInstallation\n------------\n\n1. Install from pip.\n\n```\npip install django-sass\n```\n\n2. Add to your `INSTALLED_APPS` (you only need to do this in a dev environment,\nyou would not want this in your production settings file, although it adds zero\noverhead):\n\n```python\nINSTALLED_APPS = [\n    ...,\n    'django_sass',\n]\n```\n\n3. Congratulations, you're done \ud83d\ude00\n\n\nUsage\n-----\n\nIn your app's static files, use Sass as normal. The only difference is that\nyou can **not** traverse upwards using `../` in `@import` statements. For example:\n\n```\napp1/\n|- static/\n   |- app1/\n      |- scss/\n         |- _colors.scss\n         |- app1.scss\napp2/\n|- static/\n   |- app2/\n      |- scss/\n         |- _colors.scss\n         |- app2.scss\n```\n\nIn `app2.scss` you could reference app1's and app2's `_colors.scss` import as so:\n\n```scss\n@import 'app1/scss/colors';\n@import 'app2/scss/colors';\n// Or since you are in app2, you can reference its colors with a relative path.\n@import 'colors';\n```\n\nThen to compile `app2.scss` and put it in the `css` directory,\nrun the following management command (the `-g` will build a source map, which\nis helpful for debugging CSS):\n\n```\npython manage.py sass app2/static/app2/scss/app2.scss app2/static/app2/css/app2.css -g\n```\n\nOr, you can compile the entire `scss` directory into\na corresponding `css` directory. This will traverse all subdirectories as well:\n\n```\npython manage.py sass app2/static/app2/scss/ app2/static/app2/css/\n```\n\nIn your Django HTML template, reference the CSS file as normal:\n\n```html\n{% load static %}\n<link href=\"{% static 'app2/css/app2.css' %}\" rel=\"stylesheet\">\n```\n\n\u2728\u2728 **Congratulations, you are now a Django + Sass developer!** \u2728\u2728\n\nNow you can commit those CSS files to version control, or run `collectstatic` and deploy them as normal.\n\nFor an example project layout, see `testproject/` in this repository.\n\n\nWatch Mode\n----------\n\nTo have `django-sass` watch files and recompile them as they change (useful in development),\nadd the ``--watch`` flag.\n\n```\npython manage.py sass app2/static/app2/scss/ app2/static/app2/css/ --watch\n```\n\n\nExample: deploying compressed CSS to production\n-----------------------------------------------\n\nTo compile minified CSS, use the `-t` flag to specify compression level (one of:\n\"expanded\", \"nested\", \"compact\", \"compressed\"). The default is \"expanded\" which\nis human-readable.\n\n```\npython manage.py sass app2/static/app2/scss/ app2/static/app2/css/ -t compressed\n```\n\nYou may now optionally commit the CSS files to version control if so desired,\nor omit them, whatever fits your needs better. Then run `collectsatic` as normal.\n\n```\npython manage.py collectstatic\n```\n\nAnd now proceed with deploying your files as normal.\n\n\nLimitations\n-----------\n\n* `@import` statements must reference a path relative to a path in `STATICFILES_FINDERS`\n  (which will usually be an app's `static/` directory or some other directory specified\n  in `STATICFILES_DIRS`). Or they can reference a relative path equal to or below the\n  current file. It does not support traversing up the filesystem (i.e. `../`).\n\n  Legal imports:\n  ```scss\n  @import 'file-from-currdir';\n  @import 'subdir/file';\n  @import 'another-app/file';\n  ```\n  Illegal imports:\n  ```scss\n  @import '../file';\n  ```\n\n* Only files ending in `.scss` are supported for now.\n\n* Only supports `-g`, `-p`, and `-t` options similar to `pysassc`. Ideally `django-sass` will\n  be as similar as possible to the `pysassc` command line interface.\n\nFeel free to file an issue or make a pull request to improve any of these limitations. \ud83d\udc31\u200d\ud83d\udcbb\n\n\nWhy django-sass?\n----------------\n\nOther packages such as [django-libsass](https://github.com/torchbox/django-libsass)\nand [django-sass-processor](https://github.com/jrief/django-sass-processor),\nwhile nice packages, require `django-compressor` which itself depends on several\nother packages that require compilation to install.\n\n* If you simply want to use Sass in development without installing a web of unwanted\n  dependencies, then `django-sass` is for you.\n* If you don't want to deploy any processors or compressors to your production server,\n  then `django-sass` is for you.\n* If you don't want to change the way you reference and serve static files,\n  then `django-sass` is for you.\n* And if you want the absolute simplest installation and setup possible for doing Sass,\n  `django-sass` is for you too.\n\ndjango-sass only depends on libsass (which provides pre-built wheels for Windows, Mac,\nand Linux), and of course Django (any version).\n\n\nProgrammatically Compiling Sass\n-------------------------------\n\nYou can also use `django-sass` in Python to programmatically compile the sass.\nThis is useful for build scripts and static site generators.\n\n```python\nfrom django_sass import compile_sass\n\n# Compile scss and write to output file.\ncompile_sass(\n    inpath=\"/path/to/file.scss\",\n    outpath=\"/path/to/output.css\",\n    output_style=\"compressed\",\n    precision=8,\n    source_map=True\n)\n```\n\nFor more advanced usage, you can specify additional sass search paths outside\nof your Django project by using the `include_paths` argument.\n\n```python\nfrom django_sass import compile_sass, find_static_paths\n\n# Get Django's static paths.\ndirs = find_static_paths()\n\n# Add external paths.\ndirs.append(\"/external/path/\")\n\n# Compile scss and write to output file.\ncompile_sass(\n    inpath=\"/path/to/file.scss\",\n    outpath=\"/path/to/output.css\",\n    output_style=\"compressed\",\n    precision=8,\n    source_map=True,\n    include_paths=dirs,\n)\n```\n\nContributing\n------------\n\nTo set up a development environment, first check out this repository, create a\nvenv, then:\n\n```\n(myvenv)$ pip install -r requirements-dev.txt\n```\n\nBefore committing, run static analysis tools:\n\n```\n(myvenv)$ flake8\n(myvenv)$ mypy\n```\n\nThen run the unit tests:\n\n```\n(myvenv)$ pytest\n```\n\n\nChangelog\n---------\n\n#### 1.0.0\n* New: You can now use `django_sass` APIs directly in Python.\n* Added unit tests.\n* Code quality improvements.\n\n#### 0.2.0\n* New feature: `-g` option to build a source map (when input is a file, not a directory).\n\n#### 0.1.2\n* Fix: Write compiled CSS files as UTF-8.\n* Change: Default `-p` precision from 5 to 8 for better support building Bootstrap CSS.\n\n#### 0.1.1\n* Fix: Create full file path if not exists when specifying a file output.\n\n#### 0.1.0\n* Initial release\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/coderedcorp/django-sass", "keywords": "", "license": "BSD license", "maintainer": "", "maintainer_email": "", "name": "django-sass", "package_url": "https://pypi.org/project/django-sass/", "platform": "", "project_url": "https://pypi.org/project/django-sass/", "project_urls": {"Homepage": "https://github.com/coderedcorp/django-sass"}, "release_url": "https://pypi.org/project/django-sass/1.0.0/", "requires_dist": ["django", "libsass"], "requires_python": "", "summary": "The absolute simplest way to use Sass with Django. Pure Python, minimal dependencies, and no special configuration required!", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-sass</h1>\n<p>The absolute simplest way to use <a href=\"https://sass-lang.com/\" rel=\"nofollow\">Sass</a> with Django.\nPure Python, minimal dependencies, and no special configuration required.</p>\n<p><a href=\"https://github.com/coderedcorp/django-sass\" rel=\"nofollow\">Source code on GitHub</a></p>\n<h2>Status</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Python Package</td>\n<td><a href=\"https://pypi.org/project/django-sass/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e9b9886306dc28956ef06c4cac90bfecea3f5ab/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f2d73617373\"></a> <a href=\"https://pypi.org/project/django-sass/\" rel=\"nofollow\"><img alt=\"PyPI - Django Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a1a1342ff5636d2f9330a028a7431725af953a6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646a76657273696f6e732f646a616e676f2d73617373\"></a> <a href=\"https://pypi.org/project/django-sass/\" rel=\"nofollow\"><img alt=\"PyPI - Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1405134cb5728d0d4e1f4fa1dde62b037278372a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f646a616e676f2d73617373\"></a> <a href=\"https://pypi.org/project/django-sass/\" rel=\"nofollow\"><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/392acf682045b1146fee81c89fcf165985e21b56/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f646a616e676f2d73617373\"></a> <a href=\"https://pypi.org/project/django-sass/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d439dc53a316b7f15f5a28dcb2241aedd5df5708/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d73617373\"></a></td>\n</tr>\n<tr>\n<td>Build</td>\n<td><a href=\"https://dev.azure.com/coderedcorp/coderedcms/_build/latest?definitionId=10&amp;branchName=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49a06fc984fad77984be1ff5658542cceaa16e5d/68747470733a2f2f6465762e617a7572652e636f6d2f636f6465726564636f72702f636f6465726564636d732f5f617069732f6275696c642f7374617475732f646a616e676f2d736173733f6272616e63684e616d653d6d6173746572\"></a> <a href=\"https://dev.azure.com/coderedcorp/coderedcms/_build/latest?definitionId=10&amp;branchName=master\" rel=\"nofollow\"><img alt=\"Azure DevOps tests (branch)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b539494785d38438f05639ffcdfc9d02f3d996d/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f74657374732f636f6465726564636f72702f636f6465726564636d732f31302f6d6173746572\"></a> <a href=\"https://dev.azure.com/coderedcorp/coderedcms/_build/latest?definitionId=10&amp;branchName=master\" rel=\"nofollow\"><img alt=\"Azure DevOps coverage (branch)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/866aab9601bb2c307158f9c6c2f78a7095fcb3f0/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f636f7665726167652f636f6465726564636f72702f636f6465726564636d732f31302f6d6173746572\"></a></td>\n</tr></tbody></table>\n<h2>Installation</h2>\n<ol>\n<li>Install from pip.</li>\n</ol>\n<pre><code>pip install django-sass\n</code></pre>\n<ol>\n<li>Add to your <code>INSTALLED_APPS</code> (you only need to do this in a dev environment,\nyou would not want this in your production settings file, although it adds zero\noverhead):</li>\n</ol>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_sass'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<ol>\n<li>Congratulations, you're done \ud83d\ude00</li>\n</ol>\n<h2>Usage</h2>\n<p>In your app's static files, use Sass as normal. The only difference is that\nyou can <strong>not</strong> traverse upwards using <code>../</code> in <code>@import</code> statements. For example:</p>\n<pre><code>app1/\n|- static/\n   |- app1/\n      |- scss/\n         |- _colors.scss\n         |- app1.scss\napp2/\n|- static/\n   |- app2/\n      |- scss/\n         |- _colors.scss\n         |- app2.scss\n</code></pre>\n<p>In <code>app2.scss</code> you could reference app1's and app2's <code>_colors.scss</code> import as so:</p>\n<pre><span class=\"k\">@import</span> <span class=\"s1\">'app1/scss/colors'</span><span class=\"p\">;</span>\n<span class=\"k\">@import</span> <span class=\"s1\">'app2/scss/colors'</span><span class=\"p\">;</span>\n<span class=\"c1\">// Or since you are in app2, you can reference its colors with a relative path.</span>\n<span class=\"k\">@import</span> <span class=\"s1\">'colors'</span><span class=\"p\">;</span>\n</pre>\n<p>Then to compile <code>app2.scss</code> and put it in the <code>css</code> directory,\nrun the following management command (the <code>-g</code> will build a source map, which\nis helpful for debugging CSS):</p>\n<pre><code>python manage.py sass app2/static/app2/scss/app2.scss app2/static/app2/css/app2.css -g\n</code></pre>\n<p>Or, you can compile the entire <code>scss</code> directory into\na corresponding <code>css</code> directory. This will traverse all subdirectories as well:</p>\n<pre><code>python manage.py sass app2/static/app2/scss/ app2/static/app2/css/\n</code></pre>\n<p>In your Django HTML template, reference the CSS file as normal:</p>\n<pre>{% load static %}\n<span class=\"p\">&lt;</span><span class=\"nt\">link</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"{% static 'app2/css/app2.css' %}\"</span> <span class=\"na\">rel</span><span class=\"o\">=</span><span class=\"s\">\"stylesheet\"</span><span class=\"p\">&gt;</span>\n</pre>\n<p>\u2728\u2728 <strong>Congratulations, you are now a Django + Sass developer!</strong> \u2728\u2728</p>\n<p>Now you can commit those CSS files to version control, or run <code>collectstatic</code> and deploy them as normal.</p>\n<p>For an example project layout, see <code>testproject/</code> in this repository.</p>\n<h2>Watch Mode</h2>\n<p>To have <code>django-sass</code> watch files and recompile them as they change (useful in development),\nadd the <code>--watch</code> flag.</p>\n<pre><code>python manage.py sass app2/static/app2/scss/ app2/static/app2/css/ --watch\n</code></pre>\n<h2>Example: deploying compressed CSS to production</h2>\n<p>To compile minified CSS, use the <code>-t</code> flag to specify compression level (one of:\n\"expanded\", \"nested\", \"compact\", \"compressed\"). The default is \"expanded\" which\nis human-readable.</p>\n<pre><code>python manage.py sass app2/static/app2/scss/ app2/static/app2/css/ -t compressed\n</code></pre>\n<p>You may now optionally commit the CSS files to version control if so desired,\nor omit them, whatever fits your needs better. Then run <code>collectsatic</code> as normal.</p>\n<pre><code>python manage.py collectstatic\n</code></pre>\n<p>And now proceed with deploying your files as normal.</p>\n<h2>Limitations</h2>\n<ul>\n<li>\n<p><code>@import</code> statements must reference a path relative to a path in <code>STATICFILES_FINDERS</code>\n(which will usually be an app's <code>static/</code> directory or some other directory specified\nin <code>STATICFILES_DIRS</code>). Or they can reference a relative path equal to or below the\ncurrent file. It does not support traversing up the filesystem (i.e. <code>../</code>).</p>\n<p>Legal imports:</p>\n<pre><span class=\"k\">@import</span> <span class=\"s1\">'file-from-currdir'</span><span class=\"p\">;</span>\n<span class=\"k\">@import</span> <span class=\"s1\">'subdir/file'</span><span class=\"p\">;</span>\n<span class=\"k\">@import</span> <span class=\"s1\">'another-app/file'</span><span class=\"p\">;</span>\n</pre>\n<p>Illegal imports:</p>\n<pre><span class=\"k\">@import</span> <span class=\"s1\">'../file'</span><span class=\"p\">;</span>\n</pre>\n</li>\n<li>\n<p>Only files ending in <code>.scss</code> are supported for now.</p>\n</li>\n<li>\n<p>Only supports <code>-g</code>, <code>-p</code>, and <code>-t</code> options similar to <code>pysassc</code>. Ideally <code>django-sass</code> will\nbe as similar as possible to the <code>pysassc</code> command line interface.</p>\n</li>\n</ul>\n<p>Feel free to file an issue or make a pull request to improve any of these limitations. \ud83d\udc31\u200d\ud83d\udcbb</p>\n<h2>Why django-sass?</h2>\n<p>Other packages such as <a href=\"https://github.com/torchbox/django-libsass\" rel=\"nofollow\">django-libsass</a>\nand <a href=\"https://github.com/jrief/django-sass-processor\" rel=\"nofollow\">django-sass-processor</a>,\nwhile nice packages, require <code>django-compressor</code> which itself depends on several\nother packages that require compilation to install.</p>\n<ul>\n<li>If you simply want to use Sass in development without installing a web of unwanted\ndependencies, then <code>django-sass</code> is for you.</li>\n<li>If you don't want to deploy any processors or compressors to your production server,\nthen <code>django-sass</code> is for you.</li>\n<li>If you don't want to change the way you reference and serve static files,\nthen <code>django-sass</code> is for you.</li>\n<li>And if you want the absolute simplest installation and setup possible for doing Sass,\n<code>django-sass</code> is for you too.</li>\n</ul>\n<p>django-sass only depends on libsass (which provides pre-built wheels for Windows, Mac,\nand Linux), and of course Django (any version).</p>\n<h2>Programmatically Compiling Sass</h2>\n<p>You can also use <code>django-sass</code> in Python to programmatically compile the sass.\nThis is useful for build scripts and static site generators.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_sass</span> <span class=\"kn\">import</span> <span class=\"n\">compile_sass</span>\n\n<span class=\"c1\"># Compile scss and write to output file.</span>\n<span class=\"n\">compile_sass</span><span class=\"p\">(</span>\n    <span class=\"n\">inpath</span><span class=\"o\">=</span><span class=\"s2\">\"/path/to/file.scss\"</span><span class=\"p\">,</span>\n    <span class=\"n\">outpath</span><span class=\"o\">=</span><span class=\"s2\">\"/path/to/output.css\"</span><span class=\"p\">,</span>\n    <span class=\"n\">output_style</span><span class=\"o\">=</span><span class=\"s2\">\"compressed\"</span><span class=\"p\">,</span>\n    <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span>\n    <span class=\"n\">source_map</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</pre>\n<p>For more advanced usage, you can specify additional sass search paths outside\nof your Django project by using the <code>include_paths</code> argument.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_sass</span> <span class=\"kn\">import</span> <span class=\"n\">compile_sass</span><span class=\"p\">,</span> <span class=\"n\">find_static_paths</span>\n\n<span class=\"c1\"># Get Django's static paths.</span>\n<span class=\"n\">dirs</span> <span class=\"o\">=</span> <span class=\"n\">find_static_paths</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Add external paths.</span>\n<span class=\"n\">dirs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">\"/external/path/\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Compile scss and write to output file.</span>\n<span class=\"n\">compile_sass</span><span class=\"p\">(</span>\n    <span class=\"n\">inpath</span><span class=\"o\">=</span><span class=\"s2\">\"/path/to/file.scss\"</span><span class=\"p\">,</span>\n    <span class=\"n\">outpath</span><span class=\"o\">=</span><span class=\"s2\">\"/path/to/output.css\"</span><span class=\"p\">,</span>\n    <span class=\"n\">output_style</span><span class=\"o\">=</span><span class=\"s2\">\"compressed\"</span><span class=\"p\">,</span>\n    <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span>\n    <span class=\"n\">source_map</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">include_paths</span><span class=\"o\">=</span><span class=\"n\">dirs</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Contributing</h2>\n<p>To set up a development environment, first check out this repository, create a\nvenv, then:</p>\n<pre><code>(myvenv)$ pip install -r requirements-dev.txt\n</code></pre>\n<p>Before committing, run static analysis tools:</p>\n<pre><code>(myvenv)$ flake8\n(myvenv)$ mypy\n</code></pre>\n<p>Then run the unit tests:</p>\n<pre><code>(myvenv)$ pytest\n</code></pre>\n<h2>Changelog</h2>\n<h4>1.0.0</h4>\n<ul>\n<li>New: You can now use <code>django_sass</code> APIs directly in Python.</li>\n<li>Added unit tests.</li>\n<li>Code quality improvements.</li>\n</ul>\n<h4>0.2.0</h4>\n<ul>\n<li>New feature: <code>-g</code> option to build a source map (when input is a file, not a directory).</li>\n</ul>\n<h4>0.1.2</h4>\n<ul>\n<li>Fix: Write compiled CSS files as UTF-8.</li>\n<li>Change: Default <code>-p</code> precision from 5 to 8 for better support building Bootstrap CSS.</li>\n</ul>\n<h4>0.1.1</h4>\n<ul>\n<li>Fix: Create full file path if not exists when specifying a file output.</li>\n</ul>\n<h4>0.1.0</h4>\n<ul>\n<li>Initial release</li>\n</ul>\n\n          </div>"}, "last_serial": 6670360, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "41a8a1989b1fdb6685d27088db89ac72", "sha256": "3c5b9b9f25af1298e216e40873660e8d3dd898bd9fe346f6fecf8e3a590e1a2d"}, "downloads": -1, "filename": "django_sass-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "41a8a1989b1fdb6685d27088db89ac72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6894, "upload_time": "2019-05-10T20:22:59", "upload_time_iso_8601": "2019-05-10T20:22:59.988018Z", "url": "https://files.pythonhosted.org/packages/77/4e/002b8d7b64822e60e83f09936c08f2f6911c45097b51e14fbb82c8c3569e/django_sass-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ee57341df33031760eba677dd9c8e1c", "sha256": "c47a5e6cd76e94d7a5a78d89896e6be427920f49c01800b4ace2847be9b5d982"}, "downloads": -1, "filename": "django-sass-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9ee57341df33031760eba677dd9c8e1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6338, "upload_time": "2019-05-10T20:23:02", "upload_time_iso_8601": "2019-05-10T20:23:02.833890Z", "url": "https://files.pythonhosted.org/packages/45/b8/f909e4f7f79fc830e346a722ad500ba32a4300303f21665dc1cbb6795816/django-sass-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ee18c52fd0ebfe852028f4a6dc3b7275", "sha256": "1bc103fcb8a48f6686e8e0d27e51d6c8b854bfa790ea84fa973e8ed221a8f1a6"}, "downloads": -1, "filename": "django_sass-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ee18c52fd0ebfe852028f4a6dc3b7275", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6993, "upload_time": "2019-05-11T00:35:03", "upload_time_iso_8601": "2019-05-11T00:35:03.620024Z", "url": "https://files.pythonhosted.org/packages/dd/ce/7a38b263a168fc64709e4941057ad7c67e2c76c84f4b2158d902da182233/django_sass-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e9f1d07a4e40e648dff655e923963a7", "sha256": "972c7e8216e8cd1d0b3091d0e3ddd2f692b55c1de2a497bb24308c850e2ef166"}, "downloads": -1, "filename": "django-sass-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8e9f1d07a4e40e648dff655e923963a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6430, "upload_time": "2019-05-11T00:35:05", "upload_time_iso_8601": "2019-05-11T00:35:05.673152Z", "url": "https://files.pythonhosted.org/packages/51/dd/cf045bd9c6c61a9e9825647d3c45a06bee95972b94b7fd36e6147fd9f5db/django-sass-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "6a21592be5edca5c171bcf5f99b3da77", "sha256": "fa6bc84dae6450f8e9ad868d27acffa1f920391e89b06862652974f37f9e0dc0"}, "downloads": -1, "filename": "django_sass-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6a21592be5edca5c171bcf5f99b3da77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6562, "upload_time": "2019-08-02T20:18:06", "upload_time_iso_8601": "2019-08-02T20:18:06.686682Z", "url": "https://files.pythonhosted.org/packages/aa/d1/b5debe2274d0572d440af693ef0c38ab57f7c511752f5622e36dd3612260/django_sass-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c10399a12f43e83db9aeda16f6dcc8e7", "sha256": "4d7987560304cfc57ae60e3eb2ca0ff6db3b65bc02511ea4b06bb591205f62a7"}, "downloads": -1, "filename": "django-sass-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c10399a12f43e83db9aeda16f6dcc8e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6530, "upload_time": "2019-08-02T20:18:10", "upload_time_iso_8601": "2019-08-02T20:18:10.398166Z", "url": "https://files.pythonhosted.org/packages/cf/99/33d0aee041ae91b05cdc075eb5875cbeee20e54a4292357813fdc0bd844a/django-sass-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "30921c90447229596592683cbba5680d", "sha256": "c295fb20796bf03be87a815f2c8d9d9de5738014a09513b9603e2fa171687d22"}, "downloads": -1, "filename": "django_sass-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "30921c90447229596592683cbba5680d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6783, "upload_time": "2019-08-16T04:56:20", "upload_time_iso_8601": "2019-08-16T04:56:20.221140Z", "url": "https://files.pythonhosted.org/packages/41/1a/3df72acfd6478ca6a1e3359c467b4f086438682ee887058638ffa893b8f8/django_sass-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec99a8147831569e0f69d552b6eb6298", "sha256": "83a054b3d5f8f9b3694b484260a30f7caa927670d414d42fc67edd13d86e1852"}, "downloads": -1, "filename": "django-sass-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ec99a8147831569e0f69d552b6eb6298", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6765, "upload_time": "2019-08-16T04:56:21", "upload_time_iso_8601": "2019-08-16T04:56:21.969849Z", "url": "https://files.pythonhosted.org/packages/53/9d/175929e2d1e16e8a1c080fc31ba135fcf477664224574c2ad4c0c9b62802/django-sass-0.2.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "faf7800259c1e56f09faf21c45a436e9", "sha256": "ae6d3ac2959758ea0e9c11dc9a66c22c6694ec3c94c13cfada3ff2b884b568ae"}, "downloads": -1, "filename": "django_sass-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "faf7800259c1e56f09faf21c45a436e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8262, "upload_time": "2020-02-20T20:18:43", "upload_time_iso_8601": "2020-02-20T20:18:43.504350Z", "url": "https://files.pythonhosted.org/packages/38/36/0d15dd8e857579897dd924774b1108b176343b35ccb3ce555a7862fc7d84/django_sass-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c2f01c0581b0a6e640a3a6d3380d353", "sha256": "4c7f5041fdc366e879cc951c3fe16eb3811ac6d18142431af67283a430e4e12a"}, "downloads": -1, "filename": "django-sass-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6c2f01c0581b0a6e640a3a6d3380d353", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9880, "upload_time": "2020-02-20T20:18:44", "upload_time_iso_8601": "2020-02-20T20:18:44.564404Z", "url": "https://files.pythonhosted.org/packages/34/9a/6f7c32dcf62cbbd62c0a02f165c062b60932a33dc62b0ddb773f83d90585/django-sass-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "faf7800259c1e56f09faf21c45a436e9", "sha256": "ae6d3ac2959758ea0e9c11dc9a66c22c6694ec3c94c13cfada3ff2b884b568ae"}, "downloads": -1, "filename": "django_sass-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "faf7800259c1e56f09faf21c45a436e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8262, "upload_time": "2020-02-20T20:18:43", "upload_time_iso_8601": "2020-02-20T20:18:43.504350Z", "url": "https://files.pythonhosted.org/packages/38/36/0d15dd8e857579897dd924774b1108b176343b35ccb3ce555a7862fc7d84/django_sass-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c2f01c0581b0a6e640a3a6d3380d353", "sha256": "4c7f5041fdc366e879cc951c3fe16eb3811ac6d18142431af67283a430e4e12a"}, "downloads": -1, "filename": "django-sass-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6c2f01c0581b0a6e640a3a6d3380d353", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9880, "upload_time": "2020-02-20T20:18:44", "upload_time_iso_8601": "2020-02-20T20:18:44.564404Z", "url": "https://files.pythonhosted.org/packages/34/9a/6f7c32dcf62cbbd62c0a02f165c062b60932a33dc62b0ddb773f83d90585/django-sass-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:46 2020"}