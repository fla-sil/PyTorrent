{"info": {"author": "kfzteile24 GmbH", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Blockpype\n\nBreaks apart input stream into blocks and pipes each block into newly spawned processes\n\n## Installing\n\n```\npip install git+https://github.com/kfzteile24/blockpype.git\n```\n\n## Testing\nClone the repository and run visual tests that display each started PID and their output:\n* `test/by-byte.sh` - should break apart in the middle of the 2-byte character\n* `test/by-char.sh` - should break apart in the middle of some numbers\n* `test/by-line.sh` - should break apart nicely line by line\n\n## Usage\n```\ncat content.txt | blockpype -l 10 other-program --arg-for-program --another-arg \"argument value\"\n```\n\nIt will cut `content.txt` into blocks of 10 lines, and for each block, a process will be started using the command:\n\n```\nother-program --arg-for-program --another-arg \"argument value\"\n```\n\nand the contents of the block will be served to *stdin*\n\n## What's it for?\n\nWhenever you want to break apart a large stream when the `other-program` consumer stores it into memory until EOF, and you don't have enough memory for it.\n\nSimilar to `split --filter \"other-program --arg-for-program --another-arg \\\"argument value\\\"\"` except less clunky, `other-program` gets launched from current `pwd` with the current user, and with the current environment variables.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kfzteile24/blockpype", "keywords": "pipe split buffer block streaming", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "blockpype", "package_url": "https://pypi.org/project/blockpype/", "platform": "", "project_url": "https://pypi.org/project/blockpype/", "project_urls": {"Homepage": "https://github.com/kfzteile24/blockpype"}, "release_url": "https://pypi.org/project/blockpype/1.0.0a1/", "requires_dist": null, "requires_python": "~=3.6", "summary": "Breaks apart input stream into blocks and pipes each block into newly spawned processes", "version": "1.0.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Blockpype</h1>\n<p>Breaks apart input stream into blocks and pipes each block into newly spawned processes</p>\n<h2>Installing</h2>\n<pre><code>pip install git+https://github.com/kfzteile24/blockpype.git\n</code></pre>\n<h2>Testing</h2>\n<p>Clone the repository and run visual tests that display each started PID and their output:</p>\n<ul>\n<li><code>test/by-byte.sh</code> - should break apart in the middle of the 2-byte character</li>\n<li><code>test/by-char.sh</code> - should break apart in the middle of some numbers</li>\n<li><code>test/by-line.sh</code> - should break apart nicely line by line</li>\n</ul>\n<h2>Usage</h2>\n<pre><code>cat content.txt | blockpype -l 10 other-program --arg-for-program --another-arg \"argument value\"\n</code></pre>\n<p>It will cut <code>content.txt</code> into blocks of 10 lines, and for each block, a process will be started using the command:</p>\n<pre><code>other-program --arg-for-program --another-arg \"argument value\"\n</code></pre>\n<p>and the contents of the block will be served to <em>stdin</em></p>\n<h2>What's it for?</h2>\n<p>Whenever you want to break apart a large stream when the <code>other-program</code> consumer stores it into memory until EOF, and you don't have enough memory for it.</p>\n<p>Similar to <code>split --filter \"other-program --arg-for-program --another-arg \\\"argument value\\\"\"</code> except less clunky, <code>other-program</code> gets launched from current <code>pwd</code> with the current user, and with the current environment variables.</p>\n\n          </div>"}, "last_serial": 5471655, "releases": {"1.0.0a1": [{"comment_text": "", "digests": {"md5": "60a9cd0489a2875d3e3aaa757fde281d", "sha256": "88cf958d60cf3db6aba9d58f7f2679d901fcc3b71bb139890ebf5fbd489db842"}, "downloads": -1, "filename": "blockpype-1.0.0a1-py3.7.egg", "has_sig": false, "md5_digest": "60a9cd0489a2875d3e3aaa757fde281d", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": "~=3.6", "size": 4740, "upload_time": "2019-07-01T15:29:40", "upload_time_iso_8601": "2019-07-01T15:29:40.321084Z", "url": "https://files.pythonhosted.org/packages/57/cc/c79a9682dc1bf29f68613d5300bf5778ae60fe15e140949a55d8052d044e/blockpype-1.0.0a1-py3.7.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "60a9cd0489a2875d3e3aaa757fde281d", "sha256": "88cf958d60cf3db6aba9d58f7f2679d901fcc3b71bb139890ebf5fbd489db842"}, "downloads": -1, "filename": "blockpype-1.0.0a1-py3.7.egg", "has_sig": false, "md5_digest": "60a9cd0489a2875d3e3aaa757fde281d", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": "~=3.6", "size": 4740, "upload_time": "2019-07-01T15:29:40", "upload_time_iso_8601": "2019-07-01T15:29:40.321084Z", "url": "https://files.pythonhosted.org/packages/57/cc/c79a9682dc1bf29f68613d5300bf5778ae60fe15e140949a55d8052d044e/blockpype-1.0.0a1-py3.7.egg", "yanked": false}], "timestamp": "Thu May  7 22:37:02 2020"}