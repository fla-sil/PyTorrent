{"info": {"author": "Bajusz Tam\u00e1s", "author_email": "gbtami@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "### Overview\n\n[![Build Status](https://travis-ci.org/ianfab/Seirawan-Stockfish.svg?branch=master)](https://travis-ci.org/ianfab/Seirawan-Stockfish)\n[![Build Status](https://ci.appveyor.com/api/projects/status/github/ianfab/Seirawan-Stockfish?svg=true)](https://ci.appveyor.com/project/ianfab/Seirawan-Stockfish)\n[![PyPI version](https://badge.fury.io/py/pysfish.svg)](https://badge.fury.io/py/pysfish)\n\nStockfish is a free UCI chess engine derived from Glaurung 2.1. It is\nnot a complete chess program and requires some UCI-compatible GUI\n(e.g. XBoard with PolyGlot, eboard, Arena, Sigma Chess, Shredder, Chess\nPartner or Fritz) in order to be used comfortably. Read the\ndocumentation for your GUI of choice for information about how to use\nStockfish with it.\n\nThis version of Stockfish supports up to 512 cores. The engine defaults\nto one search thread, so it is therefore recommended to inspect the value of\nthe *Threads* UCI parameter, and to make sure it equals the number of CPU\ncores on your computer.\n\nThis version of Stockfish has support for Syzygybases.\n\n\n### Files\n\nThis distribution of Stockfish consists of the following files:\n\n  * Readme.md, the file you are currently reading.\n\n  * Copying.txt, a text file containing the GNU General Public License.\n\n  * src, a subdirectory containing the full source code, including a Makefile\n    that can be used to compile Stockfish on Unix-like systems.\n\n\n### Syzygybases\n\n**Configuration**\n\nSyzygybases are configured using the UCI options \"SyzygyPath\",\n\"SyzygyProbeDepth\", \"Syzygy50MoveRule\" and \"SyzygyProbeLimit\".\n\nThe option \"SyzygyPath\" should be set to the directory or directories that\ncontain the .rtbw and .rtbz files. Multiple directories should be\nseparated by \";\" on Windows and by \":\" on Unix-based operating systems.\n**Do not use spaces around the \";\" or \":\".**\n\nExample: `C:\\tablebases\\wdl345;C:\\tablebases\\wdl6;D:\\tablebases\\dtz345;D:\\tablebases\\dtz6`\n\nIt is recommended to store .rtbw files on an SSD. There is no loss in\nstoring the .rtbz files on a regular HD.\n\nIncreasing the \"SyzygyProbeDepth\" option lets the engine probe less\naggressively. Set this option to a higher value if you experience too much\nslowdown (in terms of nps) due to TB probing.\n\nSet the \"Syzygy50MoveRule\" option to false if you want tablebase positions\nthat are drawn by the 50-move rule to count as win or loss. This may be useful\nfor correspondence games (because of tablebase adjudication).\n\nThe \"SyzygyProbeLimit\" option should normally be left at its default value.\n\n**What to expect**\nIf the engine is searching a position that is not in the tablebases (e.g.\na position with 7 pieces), it will access the tablebases during the search.\nIf the engine reports a very large score (typically 123.xx), this means\nthat it has found a winning line into a tablebase position.\n\nIf the engine is given a position to search that is in the tablebases, it\nwill use the tablebases at the beginning of the search to preselect all\ngood moves, i.e. all moves that preserve the win or preserve the draw while\ntaking into account the 50-move rule.\nIt will then perform a search only on those moves. **The engine will not move\nimmediately**, unless there is only a single good move. **The engine likely\nwill not report a mate score even if the position is known to be won.**\n\nIt is therefore clear that behaviour is not identical to what one might\nbe used to with Nalimov tablebases. There are technical reasons for this\ndifference, the main technical reason being that Nalimov tablebases use the\nDTM metric (distance-to-mate), while Syzygybases use a variation of the\nDTZ metric (distance-to-zero, zero meaning any move that resets the 50-move\ncounter). This special metric is one of the reasons that Syzygybases are\nmore compact than Nalimov tablebases, while still storing all information\nneeded for optimal play and in addition being able to take into account\nthe 50-move rule.\n\n\n### Compiling it yourself\n\nOn Unix-like systems, it should be possible to compile Stockfish\ndirectly from the source code with the included Makefile.\n\nStockfish has support for 32 or 64-bit CPUs, the hardware POPCNT\ninstruction, big-endian machines such as Power PC, and other platforms.\n\nIn general it is recommended to run `make help` to see a list of make\ntargets with corresponding descriptions. When not using the Makefile to\ncompile (for instance with Microsoft MSVC) you need to manually\nset/unset some switches in the compiler command line; see file *types.h*\nfor a quick reference.\n\n### Resource For Understanding the Code Base\n\n* [Chessprogramingwiki](https://chessprogramming.wikispaces.com) has good overall chess engines explanations\n(techniques used here are well explained like hash maps etc), it was\nalso recommended by the [support at stockfish.](http://support.stockfishchess.org/discussions/questions/1132-how-to-understand-stockfish-sources)\n\n* [Here](https://chessprogramming.wikispaces.com/Stockfish) you can find a set of features and techniques used by stockfish and each of them is explained at the wiki, however, it's a generic way rather than focusing on stockfish's own implementation, but it will still help you.\n\n\n### Terms of use\n\nStockfish is free, and distributed under the **GNU General Public License**\n(GPL). Essentially, this means that you are free to do almost exactly\nwhat you want with the program, including distributing it among your\nfriends, making it available for download from your web site, selling\nit (either by itself or as part of some bigger software package), or\nusing it as the starting point for a software project of your own.\n\nThe only real limitation is that whenever you distribute Stockfish in\nsome way, you must always include the full source code, or a pointer\nto where the source code can be found. If you make any changes to the\nsource code, these changes must also be made available under the GPL.\n\nFor full details, read the copy of the GPL found in the file named\n*Copying.txt*.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gbtami/Seirawan-Stockfish", "keywords": "", "license": "GPL3", "maintainer": "", "maintainer_email": "", "name": "pysfish", "package_url": "https://pypi.org/project/pysfish/", "platform": "", "project_url": "https://pypi.org/project/pysfish/", "project_urls": {"Homepage": "https://github.com/gbtami/Seirawan-Stockfish"}, "release_url": "https://pypi.org/project/pysfish/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Seirawan-Stockfish Python wrapper", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h3>Overview</h3>\n<p><a href=\"https://travis-ci.org/ianfab/Seirawan-Stockfish\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f426b9f7678169563ac601d9ec066e48fee3d4df/68747470733a2f2f7472617669732d63692e6f72672f69616e6661622f536569726177616e2d53746f636b666973682e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/ianfab/Seirawan-Stockfish\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/061dbd8a08e2095a5b4b87d1dfeefd16b690a372/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f69616e6661622f536569726177616e2d53746f636b666973683f7376673d74727565\"></a>\n<a href=\"https://badge.fury.io/py/pysfish\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7feeb3e1a35274db2ceb7ec6ae58fb17d1216bb3/68747470733a2f2f62616467652e667572792e696f2f70792f707973666973682e737667\"></a></p>\n<p>Stockfish is a free UCI chess engine derived from Glaurung 2.1. It is\nnot a complete chess program and requires some UCI-compatible GUI\n(e.g. XBoard with PolyGlot, eboard, Arena, Sigma Chess, Shredder, Chess\nPartner or Fritz) in order to be used comfortably. Read the\ndocumentation for your GUI of choice for information about how to use\nStockfish with it.</p>\n<p>This version of Stockfish supports up to 512 cores. The engine defaults\nto one search thread, so it is therefore recommended to inspect the value of\nthe <em>Threads</em> UCI parameter, and to make sure it equals the number of CPU\ncores on your computer.</p>\n<p>This version of Stockfish has support for Syzygybases.</p>\n<h3>Files</h3>\n<p>This distribution of Stockfish consists of the following files:</p>\n<ul>\n<li>\n<p>Readme.md, the file you are currently reading.</p>\n</li>\n<li>\n<p>Copying.txt, a text file containing the GNU General Public License.</p>\n</li>\n<li>\n<p>src, a subdirectory containing the full source code, including a Makefile\nthat can be used to compile Stockfish on Unix-like systems.</p>\n</li>\n</ul>\n<h3>Syzygybases</h3>\n<p><strong>Configuration</strong></p>\n<p>Syzygybases are configured using the UCI options \"SyzygyPath\",\n\"SyzygyProbeDepth\", \"Syzygy50MoveRule\" and \"SyzygyProbeLimit\".</p>\n<p>The option \"SyzygyPath\" should be set to the directory or directories that\ncontain the .rtbw and .rtbz files. Multiple directories should be\nseparated by \";\" on Windows and by \":\" on Unix-based operating systems.\n<strong>Do not use spaces around the \";\" or \":\".</strong></p>\n<p>Example: <code>C:\\tablebases\\wdl345;C:\\tablebases\\wdl6;D:\\tablebases\\dtz345;D:\\tablebases\\dtz6</code></p>\n<p>It is recommended to store .rtbw files on an SSD. There is no loss in\nstoring the .rtbz files on a regular HD.</p>\n<p>Increasing the \"SyzygyProbeDepth\" option lets the engine probe less\naggressively. Set this option to a higher value if you experience too much\nslowdown (in terms of nps) due to TB probing.</p>\n<p>Set the \"Syzygy50MoveRule\" option to false if you want tablebase positions\nthat are drawn by the 50-move rule to count as win or loss. This may be useful\nfor correspondence games (because of tablebase adjudication).</p>\n<p>The \"SyzygyProbeLimit\" option should normally be left at its default value.</p>\n<p><strong>What to expect</strong>\nIf the engine is searching a position that is not in the tablebases (e.g.\na position with 7 pieces), it will access the tablebases during the search.\nIf the engine reports a very large score (typically 123.xx), this means\nthat it has found a winning line into a tablebase position.</p>\n<p>If the engine is given a position to search that is in the tablebases, it\nwill use the tablebases at the beginning of the search to preselect all\ngood moves, i.e. all moves that preserve the win or preserve the draw while\ntaking into account the 50-move rule.\nIt will then perform a search only on those moves. <strong>The engine will not move\nimmediately</strong>, unless there is only a single good move. <strong>The engine likely\nwill not report a mate score even if the position is known to be won.</strong></p>\n<p>It is therefore clear that behaviour is not identical to what one might\nbe used to with Nalimov tablebases. There are technical reasons for this\ndifference, the main technical reason being that Nalimov tablebases use the\nDTM metric (distance-to-mate), while Syzygybases use a variation of the\nDTZ metric (distance-to-zero, zero meaning any move that resets the 50-move\ncounter). This special metric is one of the reasons that Syzygybases are\nmore compact than Nalimov tablebases, while still storing all information\nneeded for optimal play and in addition being able to take into account\nthe 50-move rule.</p>\n<h3>Compiling it yourself</h3>\n<p>On Unix-like systems, it should be possible to compile Stockfish\ndirectly from the source code with the included Makefile.</p>\n<p>Stockfish has support for 32 or 64-bit CPUs, the hardware POPCNT\ninstruction, big-endian machines such as Power PC, and other platforms.</p>\n<p>In general it is recommended to run <code>make help</code> to see a list of make\ntargets with corresponding descriptions. When not using the Makefile to\ncompile (for instance with Microsoft MSVC) you need to manually\nset/unset some switches in the compiler command line; see file <em>types.h</em>\nfor a quick reference.</p>\n<h3>Resource For Understanding the Code Base</h3>\n<ul>\n<li>\n<p><a href=\"https://chessprogramming.wikispaces.com\" rel=\"nofollow\">Chessprogramingwiki</a> has good overall chess engines explanations\n(techniques used here are well explained like hash maps etc), it was\nalso recommended by the <a href=\"http://support.stockfishchess.org/discussions/questions/1132-how-to-understand-stockfish-sources\" rel=\"nofollow\">support at stockfish.</a></p>\n</li>\n<li>\n<p><a href=\"https://chessprogramming.wikispaces.com/Stockfish\" rel=\"nofollow\">Here</a> you can find a set of features and techniques used by stockfish and each of them is explained at the wiki, however, it's a generic way rather than focusing on stockfish's own implementation, but it will still help you.</p>\n</li>\n</ul>\n<h3>Terms of use</h3>\n<p>Stockfish is free, and distributed under the <strong>GNU General Public License</strong>\n(GPL). Essentially, this means that you are free to do almost exactly\nwhat you want with the program, including distributing it among your\nfriends, making it available for download from your web site, selling\nit (either by itself or as part of some bigger software package), or\nusing it as the starting point for a software project of your own.</p>\n<p>The only real limitation is that whenever you distribute Stockfish in\nsome way, you must always include the full source code, or a pointer\nto where the source code can be found. If you make any changes to the\nsource code, these changes must also be made available under the GPL.</p>\n<p>For full details, read the copy of the GPL found in the file named\n<em>Copying.txt</em>.</p>\n\n          </div>"}, "last_serial": 5328058, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "18752e960b6d21b5cfc89bda3b1086af", "sha256": "dd18442aedd524389b449d716068b4243c8b1f32ac942eb145e61be20cf3cf2e"}, "downloads": -1, "filename": "pysfish-0.0.1.tar.gz", "has_sig": false, "md5_digest": "18752e960b6d21b5cfc89bda3b1086af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138019, "upload_time": "2019-03-13T00:04:33", "upload_time_iso_8601": "2019-03-13T00:04:33.307535Z", "url": "https://files.pythonhosted.org/packages/bb/c3/da0f21c2409426db00452c3fadc93bbc63d96d9ca7484fad6776bab6c69d/pysfish-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2f68f89c658e0491e7110b0eccf5f8ea", "sha256": "65b6b9caa5663e2b3ee37433cc8cc138b2a30044fa80a029d51d90c3b3a89f6d"}, "downloads": -1, "filename": "pysfish-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2f68f89c658e0491e7110b0eccf5f8ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 139254, "upload_time": "2019-03-22T17:51:56", "upload_time_iso_8601": "2019-03-22T17:51:56.727362Z", "url": "https://files.pythonhosted.org/packages/14/c5/5ad1344e9729bea5a646d3526718629a385f59e59eeb6d390e1cc8e7f4f5/pysfish-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "874309b74bc00e89dfc7c4629df5478c", "sha256": "c3f49da00a0409a3e7f305d99d68aeedcf2baa23091a6b59d6bd5efaaa756805"}, "downloads": -1, "filename": "pysfish-0.0.3.tar.gz", "has_sig": false, "md5_digest": "874309b74bc00e89dfc7c4629df5478c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 139869, "upload_time": "2019-05-28T17:24:01", "upload_time_iso_8601": "2019-05-28T17:24:01.815198Z", "url": "https://files.pythonhosted.org/packages/7d/7f/c355dcdee2885e9e42e80dfc10709692b6d29584154f317a14f6a8b8966f/pysfish-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "874309b74bc00e89dfc7c4629df5478c", "sha256": "c3f49da00a0409a3e7f305d99d68aeedcf2baa23091a6b59d6bd5efaaa756805"}, "downloads": -1, "filename": "pysfish-0.0.3.tar.gz", "has_sig": false, "md5_digest": "874309b74bc00e89dfc7c4629df5478c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 139869, "upload_time": "2019-05-28T17:24:01", "upload_time_iso_8601": "2019-05-28T17:24:01.815198Z", "url": "https://files.pythonhosted.org/packages/7d/7f/c355dcdee2885e9e42e80dfc10709692b6d29584154f317a14f6a8b8966f/pysfish-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:03 2020"}