{"info": {"author": "Ekate Kuznetsova", "author_email": "char-classify@technekate.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: Text Processing"], "description": "Char Classifier\n---------\n\nGiven a short phrase, train a neural network to classify it based on the characters that it contains.\n\nThe trainer takes in a file of phrases (separated by new line) and a file of target values (separated by new line).\n\nTo train on the sample data (parts of speech classification):\n\n```\nfrom phrase_classifier import PhraseClassificationTrainer, PhraseClassifier\np = PhraseClassificationTrainer(\"sample/words\", \"sample/parts-of-speech\")\np.train([100, 100], 20, 100)\np.save(\"sample\", \"example-run\")\n```\n\nThis will save a trained model with the tag 'example-run' in the sample directory. To use that model, run:\n\n```\nk = PhraseClassifier(\"sample\", \"example-run\")\nprint k.classify(\"dog\")\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ekatek/char-classify", "keywords": "deep-learning machine-learning string classifier", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "char-classifer", "package_url": "https://pypi.org/project/char-classifer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/char-classifer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ekatek/char-classify"}, "release_url": "https://pypi.org/project/char-classifer/0.6.0/", "requires_dist": null, "requires_python": null, "summary": "Neural Network to classify short strings", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Char Classifier<br>---------<br><br>Given a short phrase, train a neural network to classify it based on the characters that it contains.<br><br>The trainer takes in a file of phrases (separated by new line) and a file of target values (separated by new line).<br><br>To train on the sample data (parts of speech classification):<br><br>```<br>from phrase_classifier import PhraseClassificationTrainer, PhraseClassifier<br>p = PhraseClassificationTrainer(\"sample/words\", \"sample/parts-of-speech\")<br>p.train([100, 100], 20, 100)<br>p.save(\"sample\", \"example-run\")<br>```<br><br>This will save a trained model with the tag 'example-run' in the sample directory. To use that model, run:<br><br>```<br>k = PhraseClassifier(\"sample\", \"example-run\")<br>print k.classify(\"dog\")<br>```\n          </div>"}, "last_serial": 1977436, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "a83883fff1cb8434ec3a6ba91dd8cd9e", "sha256": "1a985be66617dc696e31ce8cf96f3d229e27d3f29129c64e193d053508516544"}, "downloads": -1, "filename": "char_classifer-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a83883fff1cb8434ec3a6ba91dd8cd9e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6476, "upload_time": "2016-02-26T04:39:22", "upload_time_iso_8601": "2016-02-26T04:39:22.129275Z", "url": "https://files.pythonhosted.org/packages/ac/9a/5815b75a7faaf9b60d772ed719632e06c26b4722f509f682da93a8156964/char_classifer-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01cc286286326f026f55f3e6be08f0dc", "sha256": "92ee7ddb37de0f1bcb215264863b2ee4d6234beec10834065360dea142f47a0f"}, "downloads": -1, "filename": "char-classifer-0.6.0.tar.gz", "has_sig": false, "md5_digest": "01cc286286326f026f55f3e6be08f0dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5659, "upload_time": "2016-02-26T04:39:17", "upload_time_iso_8601": "2016-02-26T04:39:17.374467Z", "url": "https://files.pythonhosted.org/packages/48/b0/498868c250b119ee16b2b47538a606f9f7a843bde193599cd8a3db0b86da/char-classifer-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a83883fff1cb8434ec3a6ba91dd8cd9e", "sha256": "1a985be66617dc696e31ce8cf96f3d229e27d3f29129c64e193d053508516544"}, "downloads": -1, "filename": "char_classifer-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a83883fff1cb8434ec3a6ba91dd8cd9e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6476, "upload_time": "2016-02-26T04:39:22", "upload_time_iso_8601": "2016-02-26T04:39:22.129275Z", "url": "https://files.pythonhosted.org/packages/ac/9a/5815b75a7faaf9b60d772ed719632e06c26b4722f509f682da93a8156964/char_classifer-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01cc286286326f026f55f3e6be08f0dc", "sha256": "92ee7ddb37de0f1bcb215264863b2ee4d6234beec10834065360dea142f47a0f"}, "downloads": -1, "filename": "char-classifer-0.6.0.tar.gz", "has_sig": false, "md5_digest": "01cc286286326f026f55f3e6be08f0dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5659, "upload_time": "2016-02-26T04:39:17", "upload_time_iso_8601": "2016-02-26T04:39:17.374467Z", "url": "https://files.pythonhosted.org/packages/48/b0/498868c250b119ee16b2b47538a606f9f7a843bde193599cd8a3db0b86da/char-classifer-0.6.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:26 2020"}