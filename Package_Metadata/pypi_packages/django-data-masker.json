{"info": {"author": "Kuo-Cheng Yeu", "author_email": "kcyeu@mikuru.tw", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "===========\nData Masker\n===========\n\nData Masker is a simple Django app to do data masking. It masks sensitive data\nby name of form fields and is highly configurable. Currently `CharField <https://docs.djangoproject.com/en/dev/ref/forms/fields/#charfield>`_ and\n`EmailField <https://docs.djangoproject.com/en/dev/ref/forms/fields/#emailfield>`_ are supported.\n\nQuick start\n-----------\n\n1. Add ``data_masker`` to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'data_masker',\n    ]\n\n2. In template, pass the form which contains sensitive data to ``mask_form`` tag\n   before any rendering tags.\n\n\nExample template\n----------------\n\n  .. code:: Django\n\n    {# Load the tag library #}\n    {% load data_masker %}\n\n    {# Display a form #}\n    <form action=\"/url/to/submit/\" method=\"post\" class=\"form\">\n      {% csrf_token %}\n      {# Mask the form #}\n      {% mask_form form as masked_form %}\n      {{ masked_form }}\n\n      {# It also works well with django-bootstrap #}\n      {% comment %}\n      {% bootstrap_form masked_form %}\n      {% endcomment %}\n      \n      <button type=\"submit\">Submit</button>\n    </form>\n    \nSettings\n--------\ndjango-data-masker has some pre-configured settings which can be modified by adding variables with ``DATA_MASKER_`` prefix in your ``settings.py`` and customizing the values you want.\n\n+-----------------------------+---------------------------------------------------+---------------------------------------------+\n| Variable                    | Usage                                             | Default                                     |\n+=============================+===================================================+=============================================+\n| DATA_MASKER_CLEAR_HEADING   | Number of heading characters to leave untouched   | 2                                           |\n+-----------------------------+---------------------------------------------------+---------------------------------------------+\n| DATA_MASKER_CLEAR_TAILING   | Number of tailing characters to leave untouched   | 2                                           |\n+-----------------------------+---------------------------------------------------+---------------------------------------------+\n| DATA_MASKER_MASK_FULL_EMAIL | Mask full email address including domainname part | False                                       |\n+-----------------------------+---------------------------------------------------+---------------------------------------------+\n| DATA_MASKER_FIELD_LIST      | List of field name to mask                        | ['account_name', 'account_number', 'email'] |\n+-----------------------------+---------------------------------------------------+---------------------------------------------+", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kcyeu/django-data-masker", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-data-masker", "package_url": "https://pypi.org/project/django-data-masker/", "platform": "", "project_url": "https://pypi.org/project/django-data-masker/", "project_urls": {"Homepage": "https://github.com/kcyeu/django-data-masker"}, "release_url": "https://pypi.org/project/django-data-masker/1.1.1/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "summary": "A simple Django app to mask sensitive data in forms.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Data Masker is a simple Django app to do data masking. It masks sensitive data\nby name of form fields and is highly configurable. Currently <a href=\"https://docs.djangoproject.com/en/dev/ref/forms/fields/#charfield\" rel=\"nofollow\">CharField</a> and\n<a href=\"https://docs.djangoproject.com/en/dev/ref/forms/fields/#emailfield\" rel=\"nofollow\">EmailField</a> are supported.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li><p>Add <tt>data_masker</tt> to your INSTALLED_APPS setting like this:</p>\n<pre>INSTALLED_APPS = [\n    ...\n    'data_masker',\n]\n</pre>\n</li>\n<li><p>In template, pass the form which contains sensitive data to <tt>mask_form</tt> tag\nbefore any rendering tags.</p>\n</li>\n</ol>\n</div>\n<div id=\"example-template\">\n<h2>Example template</h2>\n<blockquote>\n<pre><span class=\"c\">{# Load the tag library #}</span><span class=\"x\">\n</span><span class=\"cp\">{%</span> <span class=\"k\">load</span> <span class=\"nv\">data_masker</span> <span class=\"cp\">%}</span><span class=\"x\">\n\n</span><span class=\"c\">{# Display a form #}</span><span class=\"x\">\n&lt;form action=\"/url/to/submit/\" method=\"post\" class=\"form\"&gt;\n  </span><span class=\"cp\">{%</span> <span class=\"k\">csrf_token</span> <span class=\"cp\">%}</span><span class=\"x\">\n  </span><span class=\"c\">{# Mask the form #}</span><span class=\"x\">\n  </span><span class=\"cp\">{%</span> <span class=\"k\">mask_form</span> <span class=\"nv\">form</span> <span class=\"k\">as</span> <span class=\"nv\">masked_form</span> <span class=\"cp\">%}</span><span class=\"x\">\n  </span><span class=\"cp\">{{</span> <span class=\"nv\">masked_form</span> <span class=\"cp\">}}</span><span class=\"x\">\n\n  </span><span class=\"c\">{# It also works well with django-bootstrap #}</span><span class=\"x\">\n  </span><span class=\"cp\">{%</span> <span class=\"k\">comment</span> <span class=\"cp\">%}</span><span class=\"c\">\n  {% bootstrap_form masked_form %}\n  </span><span class=\"cp\">{%</span> <span class=\"k\">endcomment</span> <span class=\"cp\">%}</span><span class=\"x\">\n\n  &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;</span>\n</pre>\n</blockquote>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>django-data-masker has some pre-configured settings which can be modified by adding variables with <tt>DATA_MASKER_</tt> prefix in your <tt>settings.py</tt> and customizing the values you want.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Variable</th>\n<th>Usage</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>DATA_MASKER_CLEAR_HEADING</td>\n<td>Number of heading characters to leave untouched</td>\n<td>2</td>\n</tr>\n<tr><td>DATA_MASKER_CLEAR_TAILING</td>\n<td>Number of tailing characters to leave untouched</td>\n<td>2</td>\n</tr>\n<tr><td>DATA_MASKER_MASK_FULL_EMAIL</td>\n<td>Mask full email address including domainname part</td>\n<td>False</td>\n</tr>\n<tr><td>DATA_MASKER_FIELD_LIST</td>\n<td>List of field name to mask</td>\n<td>[\u2018account_name\u2019, \u2018account_number\u2019, \u2018email\u2019]</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 4562855, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "da22d5391391187b0a4280ab78fc6a4d", "sha256": "bb04788e45493441769b223ce3037435edf81dc2b5496eb8842dc227e0a9fee1"}, "downloads": -1, "filename": "django-data-masker-1.0.1.tar.gz", "has_sig": false, "md5_digest": "da22d5391391187b0a4280ab78fc6a4d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 3845, "upload_time": "2018-12-05T06:21:11", "upload_time_iso_8601": "2018-12-05T06:21:11.460337Z", "url": "https://files.pythonhosted.org/packages/ed/a0/9481d779019ef98bb12ce669375a826be9c7a8a3fda16bfc1ef81f76ead9/django-data-masker-1.0.1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "4c0827c5096f7ad3c5a01191a77f31a6", "sha256": "64a23ff67a7934ed94cf355ed03f1a9debdbca8d5b163ccca4d300d1b0d77c68"}, "downloads": -1, "filename": "django-data-masker-1.1.1.tar.gz", "has_sig": false, "md5_digest": "4c0827c5096f7ad3c5a01191a77f31a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 4338, "upload_time": "2018-12-05T07:53:16", "upload_time_iso_8601": "2018-12-05T07:53:16.994759Z", "url": "https://files.pythonhosted.org/packages/5a/43/4a9727ee4d32b0436d7710a4d81905c42da79dadbe1bac689b884c7f9ab5/django-data-masker-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c0827c5096f7ad3c5a01191a77f31a6", "sha256": "64a23ff67a7934ed94cf355ed03f1a9debdbca8d5b163ccca4d300d1b0d77c68"}, "downloads": -1, "filename": "django-data-masker-1.1.1.tar.gz", "has_sig": false, "md5_digest": "4c0827c5096f7ad3c5a01191a77f31a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 4338, "upload_time": "2018-12-05T07:53:16", "upload_time_iso_8601": "2018-12-05T07:53:16.994759Z", "url": "https://files.pythonhosted.org/packages/5a/43/4a9727ee4d32b0436d7710a4d81905c42da79dadbe1bac689b884c7f9ab5/django-data-masker-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:42 2020"}