{"info": {"author": "Jan Zaucha", "author_email": "j.zaucha@tum.de", "bugtrack_url": null, "classifiers": [], "description": "calcDiameter: a method to find the maximum diameter of a ring-shaped protein complex of symmetry Cn. \n\n########################################\n\nHow it works\n=============\n\nIt reads a 'Biological Assembly' PDB file and finds the right orientation such that the protein ring lies 'flat' on XY plane. Then, the maximum distance between any pair of residues residing in the same 'height slice' is returned. On top of that the method returns the 'effective radius'\n\n\nInstallation\n============\n\n\nVia pip from `PyPi <https://pypi.org/project/calcDiameter/>`_\n(recommended):\n\n.. code-block:: bash\n\n    $ sudo pip install calcDiameter\n\n\nIf your system lacks pip, `install it first <https://www.makeuseof.com/tag/install-pip-for-python/>`_. \n\n\nPython version\n--------------\n\nThe tool was developed using Python 3.7, however running under \nPython 3.x *should* work as well.\n\n\n\n\nUsage\n=====\n\n\nPython 3.7 shell\n\n\n.. code-block:: bash\n\n    >>> from calcDiameter import *\n    >>> calcDiameter('1qaw.pdb')\n    Reading PDB file\n    Obtaining approximate orientation by testing rotations about X and Y axes every 10 degrees...\n    Obtaining accurate orientation by testing rotations about X and Y axes every 1 degree...\n    Plotting projecton of CA atom coordinates onto the XY plane\n    Max diameter between E:75 & K:17 is 79.701881; effective radius is 39.898543\n    (79.70188096903092, 'E:75', 'K:17', 39.89854271684067)\n\n\n\nYou can set the tolerated height difference between points using the bin\\_ parameter; by default=3 Angstrom, change to 30 (the Z component of the distance is disregarded regardless of the bin\\_ parameter!). Note that the effective radius has not changed:\n\n\n.. code-block:: bash\n\n    >>> calcDiameter.calcDiameter('1qaw.pdb', bin_=30)\n    Reading PDB file\n    Obtaining approximate orientation by testing rotations about X and Y axes every 10 degrees...\n    Obtaining accurate orientation by testing rotations about X and Y axes every 1 degree...\n    Plotting projecton of CA atom coordinates onto the XY plane\n    Max diameter between E:75 & K:18 is 79.706971; effective radius is 39.898543\n    (79.70697056799868, 'E:75', 'K:18', 39.89854271684067)\n\nThe full list of options is as follows\n\n.. code-block:: bash\n\n    >>>calcDiameter(pdb, plot=True, plot3d=False, no_rotation=False, bin_=3, test=5)\n\nYou can set 'no_rotation' to True if you believe that the pdb is already correctly oriented - the structure is already flat on the XY plane.\n\nYou can also set plot3d to True if you want to see the 3d plots of points making up the structure. First you will see the original orientation of the pdb - feel free to look at it from all angles, then close it to see the best orientation that the program has found - the structure should lie flat on the XY plane; close the plot to obtain the max diameter along the XY plane. \n\nThe test parameter specifies the radius of the structure (from its centre) that is expected to stay hollow provided we have found the right orientation for the structure.\n\n\n\nThen you can query PDB to retrieve all structures of rotational symmetry Cn (specify n); returns a pandas data-frame with parameters calculated for the structures:\n\n\n.. code-block:: bash\n\n    >>> getDiametersCn(13)\n    Retrieving list of PDBs that match the selected criteria...\n\t2JES,2X2V,3JVO,4CBJ,4CBK,4V2T,4XJN,6GY6\n\tDownloading PDB 2JES\n\tReading 2JES PDB file\n\tObtaining approximate orientation by testing rotations about X and Y axes every 10 degrees...\n\t(...)\n\t        Diameter label1 label2  Eff. radus  Cn\n\t2JES  162.626456   G:30   U:29   81.913051  13\n\t2X2V   60.312264   G:40   M:40   30.425173  13\n\t3JVO  110.369143    C:1   I:50   55.239389  13\n\t4CBJ   60.344003   F:40   M:40   30.422166  13\n\t4CBK   60.169909   E:40   L:40   30.276677  13\n\t4V2T  220.978870   C:82   X:82  111.307835  13\n\t4XJN  193.364481  B:110  M:110   97.363493  13\n\t6GY6  249.636369  I:151  S:151  125.730877  13\n\nThe full list of options is as follows: res_min & res_max are the minimum and maximum structure resolution thresholds - defaults 0.0 and 3.0, respectively:\n\n\n.. code-block:: bash\n\n\t    >>>getDiametersCn(n, res_min = 0.0, res_max = 3.0, plot=True, bin_=3, test=5)\n\nLicence\n-------\n\nMIT\n\n\nAuthors\n-------\n\n`Jan Zaucha <j.zaucha@tum.de>`_\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "calcDiameter", "package_url": "https://pypi.org/project/calcDiameter/", "platform": "", "project_url": "https://pypi.org/project/calcDiameter/", "project_urls": null, "release_url": "https://pypi.org/project/calcDiameter/0.17/", "requires_dist": null, "requires_python": "", "summary": "The program takes in a Molecular Assembly PDB file as arument, finds the right orientation such that the ring sits on the XY plane, projects all atoms onto the XY plane and calculates the max diameter between two atoms that lie furthest apart on the XY plane", "version": "0.17", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>calcDiameter: a method to find the maximum diameter of a ring-shaped protein complex of symmetry Cn.</p>\n<hr class=\"docutils\">\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>It reads a \u2018Biological Assembly\u2019 PDB file and finds the right orientation such that the protein ring lies \u2018flat\u2019 on XY plane. Then, the maximum distance between any pair of residues residing in the same \u2018height slice\u2019 is returned. On top of that the method returns the \u2018effective radius\u2019</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Via pip from <a href=\"https://pypi.org/project/calcDiameter/\" rel=\"nofollow\">PyPi</a>\n(recommended):</p>\n<pre>$ sudo pip install calcDiameter\n</pre>\n<p>If your system lacks pip, <a href=\"https://www.makeuseof.com/tag/install-pip-for-python/\" rel=\"nofollow\">install it first</a>.</p>\n<div id=\"python-version\">\n<h3>Python version</h3>\n<p>The tool was developed using Python 3.7, however running under\nPython 3.x <em>should</em> work as well.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Python 3.7 shell</p>\n<pre>&gt;&gt;&gt; from calcDiameter import *\n&gt;&gt;&gt; calcDiameter<span class=\"o\">(</span><span class=\"s1\">'1qaw.pdb'</span><span class=\"o\">)</span>\nReading PDB file\nObtaining approximate orientation by testing rotations about X and Y axes every <span class=\"m\">10</span> degrees...\nObtaining accurate orientation by testing rotations about X and Y axes every <span class=\"m\">1</span> degree...\nPlotting projecton of CA atom coordinates onto the XY plane\nMax diameter between E:75 <span class=\"p\">&amp;</span> K:17 is <span class=\"m\">79</span>.701881<span class=\"p\">;</span> effective radius is <span class=\"m\">39</span>.898543\n<span class=\"o\">(</span><span class=\"m\">79</span>.70188096903092, <span class=\"s1\">'E:75'</span>, <span class=\"s1\">'K:17'</span>, <span class=\"m\">39</span>.89854271684067<span class=\"o\">)</span>\n</pre>\n<p>You can set the tolerated height difference between points using the bin_ parameter; by default=3 Angstrom, change to 30 (the Z component of the distance is disregarded regardless of the bin_ parameter!). Note that the effective radius has not changed:</p>\n<pre>&gt;&gt;&gt; calcDiameter.calcDiameter<span class=\"o\">(</span><span class=\"s1\">'1qaw.pdb'</span>, <span class=\"nv\">bin_</span><span class=\"o\">=</span><span class=\"m\">30</span><span class=\"o\">)</span>\nReading PDB file\nObtaining approximate orientation by testing rotations about X and Y axes every <span class=\"m\">10</span> degrees...\nObtaining accurate orientation by testing rotations about X and Y axes every <span class=\"m\">1</span> degree...\nPlotting projecton of CA atom coordinates onto the XY plane\nMax diameter between E:75 <span class=\"p\">&amp;</span> K:18 is <span class=\"m\">79</span>.706971<span class=\"p\">;</span> effective radius is <span class=\"m\">39</span>.898543\n<span class=\"o\">(</span><span class=\"m\">79</span>.70697056799868, <span class=\"s1\">'E:75'</span>, <span class=\"s1\">'K:18'</span>, <span class=\"m\">39</span>.89854271684067<span class=\"o\">)</span>\n</pre>\n<p>The full list of options is as follows</p>\n<pre>&gt;&gt;&gt;calcDiameter<span class=\"o\">(</span>pdb, <span class=\"nv\">plot</span><span class=\"o\">=</span>True, <span class=\"nv\">plot3d</span><span class=\"o\">=</span>False, <span class=\"nv\">no_rotation</span><span class=\"o\">=</span>False, <span class=\"nv\">bin_</span><span class=\"o\">=</span><span class=\"m\">3</span>, <span class=\"nv\">test</span><span class=\"o\">=</span><span class=\"m\">5</span><span class=\"o\">)</span>\n</pre>\n<p>You can set \u2018no_rotation\u2019 to True if you believe that the pdb is already correctly oriented - the structure is already flat on the XY plane.</p>\n<p>You can also set plot3d to True if you want to see the 3d plots of points making up the structure. First you will see the original orientation of the pdb - feel free to look at it from all angles, then close it to see the best orientation that the program has found - the structure should lie flat on the XY plane; close the plot to obtain the max diameter along the XY plane.</p>\n<p>The test parameter specifies the radius of the structure (from its centre) that is expected to stay hollow provided we have found the right orientation for the structure.</p>\n<p>Then you can query PDB to retrieve all structures of rotational symmetry Cn (specify n); returns a pandas data-frame with parameters calculated for the structures:</p>\n<pre>&gt;&gt;&gt; getDiametersCn<span class=\"o\">(</span><span class=\"m\">13</span><span class=\"o\">)</span>\nRetrieving list of PDBs that match the selected criteria...\n    2JES,2X2V,3JVO,4CBJ,4CBK,4V2T,4XJN,6GY6\n    Downloading PDB 2JES\n    Reading 2JES PDB file\n    Obtaining approximate orientation by testing rotations about X and Y axes every <span class=\"m\">10</span> degrees...\n    <span class=\"o\">(</span>...<span class=\"o\">)</span>\n            Diameter label1 label2  Eff. radus  Cn\n    2JES  <span class=\"m\">162</span>.626456   G:30   U:29   <span class=\"m\">81</span>.913051  <span class=\"m\">13</span>\n    2X2V   <span class=\"m\">60</span>.312264   G:40   M:40   <span class=\"m\">30</span>.425173  <span class=\"m\">13</span>\n    3JVO  <span class=\"m\">110</span>.369143    C:1   I:50   <span class=\"m\">55</span>.239389  <span class=\"m\">13</span>\n    4CBJ   <span class=\"m\">60</span>.344003   F:40   M:40   <span class=\"m\">30</span>.422166  <span class=\"m\">13</span>\n    4CBK   <span class=\"m\">60</span>.169909   E:40   L:40   <span class=\"m\">30</span>.276677  <span class=\"m\">13</span>\n    4V2T  <span class=\"m\">220</span>.978870   C:82   X:82  <span class=\"m\">111</span>.307835  <span class=\"m\">13</span>\n    4XJN  <span class=\"m\">193</span>.364481  B:110  M:110   <span class=\"m\">97</span>.363493  <span class=\"m\">13</span>\n    6GY6  <span class=\"m\">249</span>.636369  I:151  S:151  <span class=\"m\">125</span>.730877  <span class=\"m\">13</span>\n</pre>\n<p>The full list of options is as follows: res_min &amp; res_max are the minimum and maximum structure resolution thresholds - defaults 0.0 and 3.0, respectively:</p>\n<pre>&gt;&gt;&gt;getDiametersCn<span class=\"o\">(</span>n, <span class=\"nv\">res_min</span> <span class=\"o\">=</span> <span class=\"m\">0</span>.0, <span class=\"nv\">res_max</span> <span class=\"o\">=</span> <span class=\"m\">3</span>.0, <span class=\"nv\">plot</span><span class=\"o\">=</span>True, <span class=\"nv\">bin_</span><span class=\"o\">=</span><span class=\"m\">3</span>, <span class=\"nv\">test</span><span class=\"o\">=</span><span class=\"m\">5</span><span class=\"o\">)</span>\n</pre>\n<div id=\"licence\">\n<h3>Licence</h3>\n<p>MIT</p>\n</div>\n<div id=\"authors\">\n<h3>Authors</h3>\n<p><a href=\"mailto:j.zaucha%40tum.de\">Jan Zaucha</a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4620973, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fff0741d2505926846f92b46f0c598e2", "sha256": "142424f8a7d006e4515fce0bfd6fe566c1237318c7ac7ba23120f91ab48d21bf"}, "downloads": -1, "filename": "calcDiameter-0.1.tar.gz", "has_sig": false, "md5_digest": "fff0741d2505926846f92b46f0c598e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2557, "upload_time": "2018-12-11T14:19:00", "upload_time_iso_8601": "2018-12-11T14:19:00.397063Z", "url": "https://files.pythonhosted.org/packages/c2/cc/307b9b975ff0929c1e06727773a26d73c87e54bc8e5bcfc528a876d3d688/calcDiameter-0.1.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "a688136f04b646db9d1a0ffd92d74add", "sha256": "f59a152f8aa965106f65f127f5e6e4bafe820debd6450e2e6730bacb08bb6a0b"}, "downloads": -1, "filename": "calcDiameter-0.11.tar.gz", "has_sig": false, "md5_digest": "a688136f04b646db9d1a0ffd92d74add", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4737, "upload_time": "2018-12-14T10:25:16", "upload_time_iso_8601": "2018-12-14T10:25:16.060366Z", "url": "https://files.pythonhosted.org/packages/0d/83/5a8ef62dec74a0749ea0a13e99ca26d46fcb72fb0ff104d74466d5f997b8/calcDiameter-0.11.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "5663c8763ebcd09d6a3915837f3c0aeb", "sha256": "e173077b482122a40b821114a26e5d1fbc51af262f4cfb3ad73af1fe41692f2e"}, "downloads": -1, "filename": "calcDiameter-0.12.tar.gz", "has_sig": false, "md5_digest": "5663c8763ebcd09d6a3915837f3c0aeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4783, "upload_time": "2018-12-14T10:31:02", "upload_time_iso_8601": "2018-12-14T10:31:02.179482Z", "url": "https://files.pythonhosted.org/packages/0b/87/dbeac56e99ef2c81c75760942ab36adf471d791837286632780623c43fd2/calcDiameter-0.12.tar.gz", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "5446657f94a8363bc797f2acdab53436", "sha256": "f66bf5a19f85571e5cac11c9a380c622cabf7609992df1534bcfd76dcc6e9ced"}, "downloads": -1, "filename": "calcDiameter-0.13.tar.gz", "has_sig": false, "md5_digest": "5446657f94a8363bc797f2acdab53436", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4784, "upload_time": "2018-12-14T10:35:05", "upload_time_iso_8601": "2018-12-14T10:35:05.437148Z", "url": "https://files.pythonhosted.org/packages/c0/ac/ebf46cf0021342861cb4d559cd34444e109126ccf79547b996facb809636/calcDiameter-0.13.tar.gz", "yanked": false}], "0.14": [{"comment_text": "", "digests": {"md5": "18b3dd19be30f4af0faf6dc708d269d4", "sha256": "fd8363446c07559b1f6e6a07383e53982d52e4fdcba854e42cf3374373352b42"}, "downloads": -1, "filename": "calcDiameter-0.14.tar.gz", "has_sig": false, "md5_digest": "18b3dd19be30f4af0faf6dc708d269d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4790, "upload_time": "2018-12-14T10:38:06", "upload_time_iso_8601": "2018-12-14T10:38:06.548379Z", "url": "https://files.pythonhosted.org/packages/b7/77/afce432b96ada2d27eff6415fef304f1a834b44f48a84712c2f51fa93b68/calcDiameter-0.14.tar.gz", "yanked": false}], "0.15": [{"comment_text": "", "digests": {"md5": "3209ae4672c3ef1e090e6fcf6e38fcf5", "sha256": "fd223c113cf20f0270d937ed39418834440313642cfa6eb67d92c730fc6b6a91"}, "downloads": -1, "filename": "calcDiameter-0.15.tar.gz", "has_sig": false, "md5_digest": "3209ae4672c3ef1e090e6fcf6e38fcf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9035, "upload_time": "2018-12-20T13:40:42", "upload_time_iso_8601": "2018-12-20T13:40:42.371768Z", "url": "https://files.pythonhosted.org/packages/18/95/b1caf3af02d2e9a75c71c38189390b82f8d835a7178b1b0524cca5ee1762/calcDiameter-0.15.tar.gz", "yanked": false}], "0.16": [{"comment_text": "", "digests": {"md5": "4eb4d2bafed3387801ff6d9ab09799e9", "sha256": "c4895ac338ec38dfcd2710c2202992cfd7cb3ce6f2afa4008c5c12abd45c490a"}, "downloads": -1, "filename": "calcDiameter-0.16.tar.gz", "has_sig": false, "md5_digest": "4eb4d2bafed3387801ff6d9ab09799e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7355, "upload_time": "2018-12-20T14:11:03", "upload_time_iso_8601": "2018-12-20T14:11:03.362594Z", "url": "https://files.pythonhosted.org/packages/2a/b1/213ba63684a7b7398ca9f2aad501d6b29096956c9d16db14ea5e44e38d02/calcDiameter-0.16.tar.gz", "yanked": false}], "0.17": [{"comment_text": "", "digests": {"md5": "2f6db619ebaf9c8125e2d8d2fd82ed5c", "sha256": "4c28962e65a29e3f621f8bff4c4bebe4c25e3364b75a423f13b166f8cec286fa"}, "downloads": -1, "filename": "calcDiameter-0.17.tar.gz", "has_sig": false, "md5_digest": "2f6db619ebaf9c8125e2d8d2fd82ed5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7355, "upload_time": "2018-12-20T14:13:03", "upload_time_iso_8601": "2018-12-20T14:13:03.660831Z", "url": "https://files.pythonhosted.org/packages/b0/a2/4de4785dfcd0466406ced17972a68682ed55967d9accd44caf5b03f876f5/calcDiameter-0.17.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2f6db619ebaf9c8125e2d8d2fd82ed5c", "sha256": "4c28962e65a29e3f621f8bff4c4bebe4c25e3364b75a423f13b166f8cec286fa"}, "downloads": -1, "filename": "calcDiameter-0.17.tar.gz", "has_sig": false, "md5_digest": "2f6db619ebaf9c8125e2d8d2fd82ed5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7355, "upload_time": "2018-12-20T14:13:03", "upload_time_iso_8601": "2018-12-20T14:13:03.660831Z", "url": "https://files.pythonhosted.org/packages/b0/a2/4de4785dfcd0466406ced17972a68682ed55967d9accd44caf5b03f876f5/calcDiameter-0.17.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:39 2020"}