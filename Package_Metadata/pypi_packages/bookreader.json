{"info": {"author": "Texas A&M University Library", "author_email": "webmaster@library.tamu.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Topic :: Education", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\n============\n\nThis is a book reading UI application for items that have been deposited in a \nDSpace repository that has the OAI-PMH repository views enabled.\n\nUsing the bookreader\n====================\n\nInstallation\n------------\n\nPackage\n_______\n\nInstall the ``bookreader`` Python package by doing one of the following:\n\n- Adding it to your list of eggs in buildout.cfg and running ``bin/buildout``\n- Use ``easy_install bookreader`` to install it globally\n- Download the source code, unpack it and run ``python setup.py install``\n\nDjango\n______\n\nIn your project's settings.py, add ``bookreader`` to the list of ``INSTALLED_APPS`` \nand run ``manage.py syncdb`` to add the tables to the database. Then include \n``bookreader.urls`` in your url patterns. Last, you will need to add the base \nURL for your Djatoka server in your settings file as ``DJATOKA_BASE_URL``.\n\nAdministration\n--------------\n\nThe bookreader uses the Django admin interface for the manipulation of the data.\nFirst, you must add a *Repository*. The only input required is the OAI-PMH server\nurl of your DSpace repository. Using that url, Django will connect to the server\nand query for its name. Then collections can be added by DSpace handle. Once a \nhandle is entered, Django will query the server to validate that it is a valid \nhandle and query for the name of the collection. At this point, it will also query\nfor all books (items) in the collection and harvest the metadata and pages for \nthose books. This automatic behavior can be disabled by setting \n``BOOKREADER_SIGNALS_ENABLED`` to False in your settings.\n\n\nDSpace Requirements\n===================\n\nItem and Bitstream Layout\n-------------------------\n\nFor the use case of this Django UI, books are DSpace items and pages are \nbitstreams attached to those book items. The page bitstreams must be JPEG2000 \nfiles in the 'ORIGINAL' or main content bundle. Thumbnails can be provided for \neach page by adding a jpeg file in a 'THUMBNAILS' bundle that has the same base \nfilename as the original page bitstream. For example, if the page bitstream \nfilename is ``tamu_pl_0001.jpf`` then the thumbnail must end with ``tamu_pl_0001.jpg``.\nIn this case ``thumbs/tamu_pl_0001.jpg`` would also be acceptable.\n\nOAI-PMH Repository\n------------------\n\nIn order for the data be harvested, the DSpace OAI-PMH server must have the \n``ORE`` and ``DIM`` metadata prefixes enabled and compatible crosswalks installed\nfor the books.\n\nMetadata Fields\n---------------\n\nDIM data\n________\n\nThe DIM metadata prefix is used to gather the book (item) metadata. The fields \nare harvested using the `pyoai <http://pypi.python.org/pypi/pyoai>`_ ``MetadataReader``\nthat is extended in the Python `dspace <http://pypi.python.org/pypi/dspace>`_ \nlibrary, ``NestedMetadataReader``. XPath evaluators are used to map xml elements\nto fields. For the current mapping, see ``bookreader.harvesting.metadata.dim_reader``.\n\nORE data\n________\n\nThe ORE metadata prefix is used to gather the page and link (bitstream) metadata.\nThe bitstream URL, title, and bundle are all gathered from the ORE xml document.\n\nCanonical Items\n===============\n\nStarting with version 0.3, a new canonical items requirement was added. The \nlist of bitstreams is checked for an additional bitstream in the 'METADATA' \nbundle that is named ``bitstream_metadata.xml``. This file is then parsed for \na repository url of a canonical version of the book as well as additional \nmetadata about the page bitstreams so that missing pages can be marked for \nfuture reference/use. See the schema at ``docs/bitstream_metadata.xsd`` for more \nreference on the format. \n\nHistory\n=======\n\n1.0 (2011-07-07)\n----------------\n* First official version \n* Compiled PDFs for frankenbooks and other copies\n* Bug and error fixes\n\n\n0.9 (2011-03-29)\n----------------\n* Switching to a 'type' field to support multiple book forms (canonical, \n  franken, extant and work). South data and schema migrations provided.\n* Detailed pages view now supports a jp2 url in the request to select the \n  current page\n* Added SWORD client configuration parameters to the repository\n* Switched URL to base_url and oai_path for OAI client to match the changes in\n  the DSpace client\n* Added published flag to books\n* Added view to publish books over SWORD\n* Added ability to add books (except for extant books)\n\n\n0.8 (2010-12-02)\n----------------\n\n* Added South integration with the initial migration based on version 0.7\n* Added is_canonical attribute to accommodate feature requests\n* Updated CanonicalSelectionForm to use new is_canonical attribute\n* Tests for canonical flag in bitstream metadata files\n* Added a PageURLForm for editing only page urls\n* Added a URL for accessing the page editing view with the new PageURLForm\n* Added admin list_filter for collection when viewing books\n\n0.7.1 (2010-11-15)\n------------------\n\n* Bugfix: harvesting missing pages was creating too many pages\n\n0.7 (2010-11-12)\n----------------\n\n* Added a redirecting print view\n* Fixed print url to the new printable view\n* Reading view now enforces a more 'reading' like interaction: front cover, \n  pages, then back cover\n* Cleaned up extra imports\n* Added sequence and internal fields to page form\n* Changed Exterior Page form to be page conversion form\n* Added external_views property to book objects\n* Changed edit-external url to be conversion url\n* Clarified harvesting code on missing books a bit\n* Added an exterior editor view, page adding view only sets page sequence if \n  it isn't in the incoming form\n* Harvesting pages without a bitstream_metadata.xml forces all pages to be \n  internal\n* Modified the canonical selection form so that canonical link can be removed\n\n0.6.1 (2010-11-02)\n------------------\n\n* Bug fix for book pages view when no sequence/page set \n\n0.6 (2010-11-02)\n----------------\n\n* Added Exterior page form, Canonical selection form, and annotation form\n* Made canonical attribute of books be editable\n* Fixed holdover rtf->rft attribute bug in template tag\n* Added  views/urls: book annotations, edit canonical, copy annotations, edit \n  exterior page, add/edit/delete annoations\n* Added CSRF wrappers to posted views \n\n0.5 (2010-10-27)\n----------------\n\n* Added various editor views (edit pages, add page, edit page, order pages, \n  delete page)\n* Added a page annotations view, fixed a bug with the page view\n* Added bitstream_metadata view to export bitstream_metadata files\n* Added a page form\n* Added necessary url configurations for new views\n* Added an Annotation model\n* Added an Internal flag to pages\n* Updates to harvesting and tests for newer bitstream_metadata format\n\n\n0.4 (2010-09-29)\n----------------\n\n* Add a setting for the url arguments for books to compare, \n  BOOKREADER_COMPARISON_GET_ARGUMENT\n* Add a setting for the session key for storing books to compare,\n  BOOKREADER_COMPARISON_SESSION_KEY\n* Add a setting for the template variable for the books to compare, \n  BOOKREADER_COMPARISON_TEMPLATE_VARIABLE\n* Add a context processor for turning book id's into books, prefers GET \n  arguments over session variable for bookmarkability\n* Add template tags for adding/removing/retrieving get arguments for comparisons\n* Add views for adding to/removing from/clearing the comparison list\n* Add separate view for a comparison portlet\n* Updated the bitstream_metadata.xsd and the detailed page harvesting to match\n\n0.3 (2010-09-14)\n----------------\n\n* Added canonical field to Book model\n* Made jp2 url field on Page model optional (support for 'missing' pages)\n* Made title field on Page model optional (support for 'missing' pages)\n* Added python logging support with a default null handler\n* Added a parser for the bitstream metadata file\n* Added a custom lxml etree parser since the default is now to disable network\n* Switched loading pages and loading links signals to be on creation of books only\n\n0.2 (2010-08-23)\n------------------\n\n* Switching data model to one where books are items and the pages are just \n  represented by bitstreams.\n* Harvesting of books in a collection\n* Harvesting of pages in a book\n* Signal for loading repository names from the repositories\n* Signal for loading collection name from the repository\n* Signal for loading books in a collection from the repository\n* Signal for loading book metadata from the repository\n* Signal for loading pages from the repository\n\n0.1 (Unreleased)\n------------------\n\n* Books and pages generated from Manakin views of a DSpace repository where\n  pages are items and the bitstreams are the jpeg2000 files for the pages.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://library.tamu.edu", "keywords": "djatoka dspace", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "bookreader", "package_url": "https://pypi.org/project/bookreader/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/bookreader/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://library.tamu.edu"}, "release_url": "https://pypi.org/project/bookreader/1.0/", "requires_dist": null, "requires_python": null, "summary": "A Django book reading application that utilizes Djatoka and a DSpace repository to present browseable views of scanned books.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This is a book reading UI application for items that have been deposited in a\nDSpace repository that has the OAI-PMH repository views enabled.</p>\n</div>\n<div id=\"using-the-bookreader\">\n<h2>Using the bookreader</h2>\n<div id=\"installation\">\n<h3>Installation</h3>\n<div id=\"package\">\n<h4>Package</h4>\n<p>Install the <tt>bookreader</tt> Python package by doing one of the following:</p>\n<ul>\n<li>Adding it to your list of eggs in buildout.cfg and running <tt>bin/buildout</tt></li>\n<li>Use <tt>easy_install bookreader</tt> to install it globally</li>\n<li>Download the source code, unpack it and run <tt>python setup.py install</tt></li>\n</ul>\n</div>\n<div id=\"django\">\n<h4>Django</h4>\n<p>In your project\u2019s settings.py, add <tt>bookreader</tt> to the list of <tt>INSTALLED_APPS</tt>\nand run <tt>manage.py syncdb</tt> to add the tables to the database. Then include\n<tt>bookreader.urls</tt> in your url patterns. Last, you will need to add the base\nURL for your Djatoka server in your settings file as <tt>DJATOKA_BASE_URL</tt>.</p>\n</div>\n</div>\n<div id=\"administration\">\n<h3>Administration</h3>\n<p>The bookreader uses the Django admin interface for the manipulation of the data.\nFirst, you must add a <em>Repository</em>. The only input required is the OAI-PMH server\nurl of your DSpace repository. Using that url, Django will connect to the server\nand query for its name. Then collections can be added by DSpace handle. Once a\nhandle is entered, Django will query the server to validate that it is a valid\nhandle and query for the name of the collection. At this point, it will also query\nfor all books (items) in the collection and harvest the metadata and pages for\nthose books. This automatic behavior can be disabled by setting\n<tt>BOOKREADER_SIGNALS_ENABLED</tt> to False in your settings.</p>\n</div>\n</div>\n<div id=\"dspace-requirements\">\n<h2>DSpace Requirements</h2>\n<div id=\"item-and-bitstream-layout\">\n<h3>Item and Bitstream Layout</h3>\n<p>For the use case of this Django UI, books are DSpace items and pages are\nbitstreams attached to those book items. The page bitstreams must be JPEG2000\nfiles in the \u2018ORIGINAL\u2019 or main content bundle. Thumbnails can be provided for\neach page by adding a jpeg file in a \u2018THUMBNAILS\u2019 bundle that has the same base\nfilename as the original page bitstream. For example, if the page bitstream\nfilename is <tt>tamu_pl_0001.jpf</tt> then the thumbnail must end with <tt>tamu_pl_0001.jpg</tt>.\nIn this case <tt>thumbs/tamu_pl_0001.jpg</tt> would also be acceptable.</p>\n</div>\n<div id=\"oai-pmh-repository\">\n<h3>OAI-PMH Repository</h3>\n<p>In order for the data be harvested, the DSpace OAI-PMH server must have the\n<tt>ORE</tt> and <tt>DIM</tt> metadata prefixes enabled and compatible crosswalks installed\nfor the books.</p>\n</div>\n<div id=\"metadata-fields\">\n<h3>Metadata Fields</h3>\n<div id=\"dim-data\">\n<h4>DIM data</h4>\n<p>The DIM metadata prefix is used to gather the book (item) metadata. The fields\nare harvested using the <a href=\"http://pypi.python.org/pypi/pyoai\" rel=\"nofollow\">pyoai</a> <tt>MetadataReader</tt>\nthat is extended in the Python <a href=\"http://pypi.python.org/pypi/dspace\" rel=\"nofollow\">dspace</a>\nlibrary, <tt>NestedMetadataReader</tt>. XPath evaluators are used to map xml elements\nto fields. For the current mapping, see <tt>bookreader.harvesting.metadata.dim_reader</tt>.</p>\n</div>\n<div id=\"ore-data\">\n<h4>ORE data</h4>\n<p>The ORE metadata prefix is used to gather the page and link (bitstream) metadata.\nThe bitstream URL, title, and bundle are all gathered from the ORE xml document.</p>\n</div>\n</div>\n</div>\n<div id=\"canonical-items\">\n<h2>Canonical Items</h2>\n<p>Starting with version 0.3, a new canonical items requirement was added. The\nlist of bitstreams is checked for an additional bitstream in the \u2018METADATA\u2019\nbundle that is named <tt>bitstream_metadata.xml</tt>. This file is then parsed for\na repository url of a canonical version of the book as well as additional\nmetadata about the page bitstreams so that missing pages can be marked for\nfuture reference/use. See the schema at <tt>docs/bitstream_metadata.xsd</tt> for more\nreference on the format.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>1.0 (2011-07-07)</h3>\n<ul>\n<li>First official version</li>\n<li>Compiled PDFs for frankenbooks and other copies</li>\n<li>Bug and error fixes</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.9 (2011-03-29)</h3>\n<ul>\n<li>Switching to a \u2018type\u2019 field to support multiple book forms (canonical,\nfranken, extant and work). South data and schema migrations provided.</li>\n<li>Detailed pages view now supports a jp2 url in the request to select the\ncurrent page</li>\n<li>Added SWORD client configuration parameters to the repository</li>\n<li>Switched URL to base_url and oai_path for OAI client to match the changes in\nthe DSpace client</li>\n<li>Added published flag to books</li>\n<li>Added view to publish books over SWORD</li>\n<li>Added ability to add books (except for extant books)</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.8 (2010-12-02)</h3>\n<ul>\n<li>Added South integration with the initial migration based on version 0.7</li>\n<li>Added is_canonical attribute to accommodate feature requests</li>\n<li>Updated CanonicalSelectionForm to use new is_canonical attribute</li>\n<li>Tests for canonical flag in bitstream metadata files</li>\n<li>Added a PageURLForm for editing only page urls</li>\n<li>Added a URL for accessing the page editing view with the new PageURLForm</li>\n<li>Added admin list_filter for collection when viewing books</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.7.1 (2010-11-15)</h3>\n<ul>\n<li>Bugfix: harvesting missing pages was creating too many pages</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.7 (2010-11-12)</h3>\n<ul>\n<li>Added a redirecting print view</li>\n<li>Fixed print url to the new printable view</li>\n<li>Reading view now enforces a more \u2018reading\u2019 like interaction: front cover,\npages, then back cover</li>\n<li>Cleaned up extra imports</li>\n<li>Added sequence and internal fields to page form</li>\n<li>Changed Exterior Page form to be page conversion form</li>\n<li>Added external_views property to book objects</li>\n<li>Changed edit-external url to be conversion url</li>\n<li>Clarified harvesting code on missing books a bit</li>\n<li>Added an exterior editor view, page adding view only sets page sequence if\nit isn\u2019t in the incoming form</li>\n<li>Harvesting pages without a bitstream_metadata.xml forces all pages to be\ninternal</li>\n<li>Modified the canonical selection form so that canonical link can be removed</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.6.1 (2010-11-02)</h3>\n<ul>\n<li>Bug fix for book pages view when no sequence/page set</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.6 (2010-11-02)</h3>\n<ul>\n<li>Added Exterior page form, Canonical selection form, and annotation form</li>\n<li>Made canonical attribute of books be editable</li>\n<li>Fixed holdover rtf-&gt;rft attribute bug in template tag</li>\n<li>Added  views/urls: book annotations, edit canonical, copy annotations, edit\nexterior page, add/edit/delete annoations</li>\n<li>Added CSRF wrappers to posted views</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.5 (2010-10-27)</h3>\n<ul>\n<li>Added various editor views (edit pages, add page, edit page, order pages,\ndelete page)</li>\n<li>Added a page annotations view, fixed a bug with the page view</li>\n<li>Added bitstream_metadata view to export bitstream_metadata files</li>\n<li>Added a page form</li>\n<li>Added necessary url configurations for new views</li>\n<li>Added an Annotation model</li>\n<li>Added an Internal flag to pages</li>\n<li>Updates to harvesting and tests for newer bitstream_metadata format</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.4 (2010-09-29)</h3>\n<ul>\n<li>Add a setting for the url arguments for books to compare,\nBOOKREADER_COMPARISON_GET_ARGUMENT</li>\n<li>Add a setting for the session key for storing books to compare,\nBOOKREADER_COMPARISON_SESSION_KEY</li>\n<li>Add a setting for the template variable for the books to compare,\nBOOKREADER_COMPARISON_TEMPLATE_VARIABLE</li>\n<li>Add a context processor for turning book id\u2019s into books, prefers GET\narguments over session variable for bookmarkability</li>\n<li>Add template tags for adding/removing/retrieving get arguments for comparisons</li>\n<li>Add views for adding to/removing from/clearing the comparison list</li>\n<li>Add separate view for a comparison portlet</li>\n<li>Updated the bitstream_metadata.xsd and the detailed page harvesting to match</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.3 (2010-09-14)</h3>\n<ul>\n<li>Added canonical field to Book model</li>\n<li>Made jp2 url field on Page model optional (support for \u2018missing\u2019 pages)</li>\n<li>Made title field on Page model optional (support for \u2018missing\u2019 pages)</li>\n<li>Added python logging support with a default null handler</li>\n<li>Added a parser for the bitstream metadata file</li>\n<li>Added a custom lxml etree parser since the default is now to disable network</li>\n<li>Switched loading pages and loading links signals to be on creation of books only</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.2 (2010-08-23)</h3>\n<ul>\n<li>Switching data model to one where books are items and the pages are just\nrepresented by bitstreams.</li>\n<li>Harvesting of books in a collection</li>\n<li>Harvesting of pages in a book</li>\n<li>Signal for loading repository names from the repositories</li>\n<li>Signal for loading collection name from the repository</li>\n<li>Signal for loading books in a collection from the repository</li>\n<li>Signal for loading book metadata from the repository</li>\n<li>Signal for loading pages from the repository</li>\n</ul>\n</div>\n<div id=\"unreleased\">\n<h3>0.1 (Unreleased)</h3>\n<ul>\n<li>Books and pages generated from Manakin views of a DSpace repository where\npages are items and the bitstreams are the jpeg2000 files for the pages.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 745676, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "164d7ac2ee2938a72eee225589270a4d", "sha256": "7f4d057c40b19a5d94a3bd9e60db1cc126915c77519468c99b97980e02b7fc9b"}, "downloads": -1, "filename": "bookreader-0.2.tar.gz", "has_sig": false, "md5_digest": "164d7ac2ee2938a72eee225589270a4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17822, "upload_time": "2010-08-23T22:27:46", "upload_time_iso_8601": "2010-08-23T22:27:46.820206Z", "url": "https://files.pythonhosted.org/packages/6e/b6/fae50695c07ec6706d26d4481c54b989d7c0e9015870f0bc8ef159a7ae1c/bookreader-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "c154fd3fa18bf47cfa289776ad3c81c5", "sha256": "b04fdf5f0743230c63cfcca5ae716e3dada2361f243adf2ad844cb955a69dffb"}, "downloads": -1, "filename": "bookreader-0.3.tar.gz", "has_sig": false, "md5_digest": "c154fd3fa18bf47cfa289776ad3c81c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20585, "upload_time": "2010-09-14T23:26:57", "upload_time_iso_8601": "2010-09-14T23:26:57.830769Z", "url": "https://files.pythonhosted.org/packages/66/e4/4dda3fa8f7ec787c909532ab930803b70ce0941a0f8db836a9c04f31974e/bookreader-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "6dc4b45bb564e257571698c30b871787", "sha256": "4d25c6521abf0b960b2ce7809d25801b48aedb70b7e403101898d07804b976a5"}, "downloads": -1, "filename": "bookreader-0.4.tar.gz", "has_sig": false, "md5_digest": "6dc4b45bb564e257571698c30b871787", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23013, "upload_time": "2010-09-29T22:08:34", "upload_time_iso_8601": "2010-09-29T22:08:34.347253Z", "url": "https://files.pythonhosted.org/packages/3f/5e/7f655a012713d1a34b0a06df890b40ace5ddbffef286830914a11f2c8bdb/bookreader-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "d32ac202613feffabaa87425c60267c9", "sha256": "d9c828516d89d95d9436d52fb68025ad89cd69019bcace6369988d85ee00a51a"}, "downloads": -1, "filename": "bookreader-0.5.tar.gz", "has_sig": false, "md5_digest": "d32ac202613feffabaa87425c60267c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26656, "upload_time": "2010-10-27T17:56:50", "upload_time_iso_8601": "2010-10-27T17:56:50.235883Z", "url": "https://files.pythonhosted.org/packages/cb/23/a1ccfc5a6ac5d080b7cb2b12256462331131976e23d71378c42bc0e1f276/bookreader-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "d2ed414d7db641cabd4727afba366498", "sha256": "abad7473b75061e5f1625af7100261798a6a29e6d59edaa3ceb0341277d4a25a"}, "downloads": -1, "filename": "bookreader-0.6.tar.gz", "has_sig": false, "md5_digest": "d2ed414d7db641cabd4727afba366498", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28079, "upload_time": "2010-11-02T20:12:13", "upload_time_iso_8601": "2010-11-02T20:12:13.311384Z", "url": "https://files.pythonhosted.org/packages/d6/78/1810ffbb37c643c7dc5b5f163364d6d5c01d70051ee51e0e9575545efbb9/bookreader-0.6.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "f8a78607da147ac7ccd5bfd0e790e90e", "sha256": "9f1e8408a3885ff0ac319d58636ba6b19c63b937691a69c1a35f6e96272d1827"}, "downloads": -1, "filename": "bookreader-0.6.1.tar.gz", "has_sig": false, "md5_digest": "f8a78607da147ac7ccd5bfd0e790e90e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28129, "upload_time": "2010-11-02T20:18:01", "upload_time_iso_8601": "2010-11-02T20:18:01.326766Z", "url": "https://files.pythonhosted.org/packages/f2/e7/d8f54faf98dcac6ff5ffa5d59322c0ad906f195d8534937b7966243b64ae/bookreader-0.6.1.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "db6a374c4c647b916b5cc9d2ebd771d1", "sha256": "53ff90503abe3f0eb97270840bb10651287e2b940650a91f6cb654e0b30714be"}, "downloads": -1, "filename": "bookreader-0.7.tar.gz", "has_sig": false, "md5_digest": "db6a374c4c647b916b5cc9d2ebd771d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28886, "upload_time": "2010-11-12T22:29:35", "upload_time_iso_8601": "2010-11-12T22:29:35.256045Z", "url": "https://files.pythonhosted.org/packages/31/37/55a72953d8611bf491afcc82b1e4b6e942b632dddd1cdedeb49abc749c8f/bookreader-0.7.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "9931c4598113c94a8494e84931644ca3", "sha256": "4c3814dc8f2f675a4a33562f43d9a2fc44ade707226a41d6b2da37681767e3eb"}, "downloads": -1, "filename": "bookreader-0.7.1.tar.gz", "has_sig": false, "md5_digest": "9931c4598113c94a8494e84931644ca3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28926, "upload_time": "2010-11-15T18:53:33", "upload_time_iso_8601": "2010-11-15T18:53:33.882841Z", "url": "https://files.pythonhosted.org/packages/9a/59/872754b8cd98187c20836a3d9663a63d2c5b91edb2b1198a5c0262227873/bookreader-0.7.1.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "c1b22fb8db8a66d516d59094478a194d", "sha256": "079d2d028a2c3698cdffb3c961b244b6330efbba6846845b72a498998d027298"}, "downloads": -1, "filename": "bookreader-0.8.tar.gz", "has_sig": false, "md5_digest": "c1b22fb8db8a66d516d59094478a194d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31913, "upload_time": "2010-12-02T22:34:28", "upload_time_iso_8601": "2010-12-02T22:34:28.199841Z", "url": "https://files.pythonhosted.org/packages/5c/1b/ab8d9494ab07fd2bd37509a03cf794508faa416fac713e27242958ee60b3/bookreader-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "0c6485ef677c7873a193eeaeef8532c4", "sha256": "454d7a643b0695a79d4e3c043169b46f7f42f68d8b157427d01326809f2bcf7b"}, "downloads": -1, "filename": "bookreader-0.9.tar.gz", "has_sig": false, "md5_digest": "0c6485ef677c7873a193eeaeef8532c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40414, "upload_time": "2011-03-29T21:17:29", "upload_time_iso_8601": "2011-03-29T21:17:29.491078Z", "url": "https://files.pythonhosted.org/packages/49/c9/fe03a884d41393bd8ca1a63ba530130430db88c257cd17aa3897ffb29483/bookreader-0.9.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "23a7b28fef9f0c86821cb9ac38d75ce7", "sha256": "e06bf086632b9c2d20b51a40314343a90f1e60fd263a4563674aa1e6291616a7"}, "downloads": -1, "filename": "bookreader-1.0.tar.gz", "has_sig": false, "md5_digest": "23a7b28fef9f0c86821cb9ac38d75ce7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42180, "upload_time": "2011-07-07T22:37:16", "upload_time_iso_8601": "2011-07-07T22:37:16.992205Z", "url": "https://files.pythonhosted.org/packages/97/b2/a057df7dbcec097d574f856ea7a7cd9f62b40fe8d2407698cae3c9a1bcb7/bookreader-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "23a7b28fef9f0c86821cb9ac38d75ce7", "sha256": "e06bf086632b9c2d20b51a40314343a90f1e60fd263a4563674aa1e6291616a7"}, "downloads": -1, "filename": "bookreader-1.0.tar.gz", "has_sig": false, "md5_digest": "23a7b28fef9f0c86821cb9ac38d75ce7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42180, "upload_time": "2011-07-07T22:37:16", "upload_time_iso_8601": "2011-07-07T22:37:16.992205Z", "url": "https://files.pythonhosted.org/packages/97/b2/a057df7dbcec097d574f856ea7a7cd9f62b40fe8d2407698cae3c9a1bcb7/bookreader-1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:44 2020"}