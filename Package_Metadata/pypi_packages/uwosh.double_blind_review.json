{"info": {"author": "Jonathan Gutow", "author_email": "gutow@uwosh.edu", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\r\n============\r\nThis product product provides workflows and some test types for providing \r\ndouble-blind reviews of plone content items.\r\n\r\nIn addition to special workflows the following root templates are modified to \r\nprevent all but managers and owners from see identifying information.\r\n   contenthistory - located in this product at \r\n      uwosh.double_blind_review/uwosh/double_blind_review/static/overrides/plone.app.layout.viewlets.content_history.pt\r\n   plone.belowcontenttitle.documentbyline - located in this product at \r\n      uwosh.double_blind_review/uwosh/double_blind_review/static/overrides/plone.app.layout.viewlets.document_byline.pt\r\n      \r\nOverview of what this product does\r\n==================================\r\n*Target Uses \r\nThis product was designed to allow double blind review (neither\r\nauthor nor reviewer knows who the other is) of content posted to the web site.\r\nIn particular it was designed for review of grant proposals and written student\r\nwork. The idea was to provide this facility in as \"plonish\" a way as possible,\r\nso that it could be used with almost any content type one could devise. In\r\nparticular, I wanted to create something that non-programmers could use for any\r\nkind of submission they could build through the web using Dexterity. The main\r\nimpetus for this was that I foresee passing responsibility for my institution's\r\ninternal grant processing onto someone else in the near future.- May 16, 2013 -\r\nJonathan Gutow, University of Wisconsin Oshkosh, Oshkosh, WI, USA\r\n\r\n*Administration Overview \r\nFor each type of proposal or proposal cycle the\r\nadministrator creates a Proposal Drop Box with instructions in it for what to\r\nsubmit and when. At the end of the submission period the administrator stops\r\naccepting submissions by changing the workflow state. The administrator then\r\nassigns reviewers to the proposals and changes the state of the Proposal Drop\r\nBox and its contents to \"under review\". Content rules could be used to\r\nautomatically notify the assigned reviewers by e-mail that the proposals are\r\nready for review, but this is not set up by default. Once the reviewers are done\r\nthe proposals are passed on to the panel (another state change) for a final\r\ndecision, which is recorded by changing the state of the proposal, as well. When\r\neverything is complete the drop box state is changed to cycle complete and the\r\ndecisions and reviews are made visible to the proposers.\r\n\r\n*Submitting a Proposal Overview \r\nThe proposer navigates to the web site. In general they should be directed to\r\nthe public landing page. Once they log in links will appear in the \r\nmain navigation bar at the top of the page for any proposal \r\ndrop boxes that are currently accepting submissions or under review.\r\nThus the landing page should describe what kind of an account is necessary to\r\naccess the site. Proposals for which the submission-review cycle is complete do\r\nnot show up in the main bar (the administrator is encouraged to make them\r\navailable through an \"Archive\" collection at the root level of the site). By\r\nclicking on the link in the top navigation bar the proposer navigates to the\r\nproposal drop box. Using the \"Add New ...\" menu they add a new proposal and\r\nprovide some basic information. Once the proposal is created they add proposer\r\nID and contact information to the proposal as sub items. In the examples\r\nprovided there are two types of proposers (proposers and mentors), allowing for\r\nstudent proposers and faculty mentors to provide different information. The\r\nproposer and mentor items follow their own workflows and are only visible to the\r\nsite manager and the proposer or mentor. This way the proposal can be anonymous\r\nas long as the proposer avoids putting identifying information in the proposal.\r\nA one or two tiered submission process is available. If the proposer is a member\r\nof a group that is assigned the role of \"submitter\" they can directly submit the\r\nproposal by selecting the \"submit\" option in the state menu. If the proposer is\r\nnot a member of the \"submitter\" group (students proposers are not allowed to\r\nsubmit directly in our system), they cannot submit directly. They must \"share\"\r\ntheir proposal with their mentor using the sharing tab and they also select the\r\n\"Send proposal to Advisor for approval and submission...\" in the state menu. The\r\nmentor can then submit it if they approve. The manager then assigns reviewers\r\nusing the sharing tab and transitions the proposal to the \"Under Review\" state.\r\nOnce decisions are made the whole drop box is converted to the \"Cycle complete\"\r\nstate and the decisions and reviews become visible to the proposer.\r\n\r\n*How It Works \r\nThis product defines a number of specialized workflows: \r\nA. Proposal Folder Workflow with the following state progression: \r\n  1. private (viewable by manager and owner) \r\n  2. Accepting Submissions (all logged in users can see and create\r\n  proposals within the dropbox) \r\n  3. No longer Accepting submissions (visible to logged\r\n  in users, but no proposals can be added) \r\n  4. Under Review (only reviewers can see proposals) \r\n  5. Under Panel Review (only panelists can see proposals) \r\n  6. Cycle Complete (visible to logged in users) \r\nB. Proposal Workflow with the following state progression: \r\n  1. Private (visible to and editable by owner, editor(s), manager)\r\n  2. Advisor Review (visible to and editable by owner, editor(s), manager) \r\n  3. Submitted (visible to owner, editor(s) and editable by manager) \r\n  4. Under Review (visible to reviewer(s) and editable by manager) \r\n  5. Panel Review (visible to panelist(s) and editable by manager) \r\n  6. approved_invisible (visible to panelist(s) and editable by manager) \r\n  7. Approved (visible to owner, editor(s), reviewer(s) and editable by\r\n  manager) \r\n  8. alternate_invisible (visible to panelist(s) and editable by manager)\r\n  9. Alternate (visible to owner, editor(s), reviewer(s) and editable by manager)\r\n  10. denied_invisible (visible to panelist(s) and editable by manager) \r\n  11. Denied (visible to owner, editor(s), reviewer(s) and editable by manager) \r\nC. ID info Workflow with only a private state (visible and editable by owner, \r\n  editor(s) and manager). \r\nD. Anonymous Peer Review Workflow with the following state progression:\r\n  1. Private (visible to and editable by owner (aka reviewer) and manager) \r\n  2. Submitted (visible to owner (aka reviewer) and and editable by manager) \r\n  3. Under Panel Review (visible to panelist(s) and editable by manager) \r\n  4. Cycle Complete (visible to owner, reviewer(s), and panelist(s), editable \r\n  by manager) \r\nE. Instructor Only Workflow is an always private workflow only visible to managers. \r\n\r\nThis product defines some Dexterity based content types as well: \r\nA. Web Page: It is intended as a replacement for the traditional Plone type \r\n  \"Page\". It has the advantage when building a product that it can be easily\r\n  exported into a product using Portal_Setup in the ZMI (see Plone developer \r\n  documentation at Plone.org).  The instruction pages included in this product\r\n  use clones of this type.\r\nB. Proposal Drop Box: this is a container that follows the Proposal Folder\r\n  Workflow. A new Proposal Drop Box with an appropriate title and a prominent\r\n  warning about closing date should be created for each proposal cycle. This can\r\n  be used as an assignment drop box for student work as well. \r\nC. mock proposal: this is a content type which is a simple example of \r\n  how to build a proposal. The key features are that it has an upload \r\n  button for uploading the submitted document and is a container into \r\n  which the proposer can add other documents, which may or may not be \r\n  viewable by the reviewers. This type follows the Proposal Workflow.\r\n  Cloning this is a good place to start when building a proposal type for your\r\n  site. \r\nD. Proposer: this is an example of the content type I use to contain\r\n  information about the proposer that would compromise the anonymity of the\r\n  proposer. It follows the ID info Workflow, making it invisible to anyone but the\r\n  proposer and authenticated users with the role of Administrator. \r\nE. Mentor: this is an example of the content type I use to contain information \r\n  about the faculty mentor that would compromise the anonymity of \r\n  the proposing team. It follows the ID info Workflow, making it invisible to \r\n  anyone but the proposer and authenticated users with the role of Administrator.\r\n\r\nChangelog\r\n=========\r\n\r\n0.9dev (unreleased)\r\n-------------------\r\n\r\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gutow/uwosh.double_blind_review", "keywords": "review,double-blind,double-blind review,proposals,dropbox", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "uwosh.double_blind_review", "package_url": "https://pypi.org/project/uwosh.double_blind_review/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/uwosh.double_blind_review/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/gutow/uwosh.double_blind_review"}, "release_url": "https://pypi.org/project/uwosh.double_blind_review/0.9/", "requires_dist": null, "requires_python": null, "summary": "Double Blind Review Workflows", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            Introduction\n<br>============\n<br>This product product provides workflows and some test types for providing \n<br>double-blind reviews of plone content items.\n<br>\n<br>In addition to special workflows the following root templates are modified to \n<br>prevent all but managers and owners from see identifying information.\n<br>   contenthistory - located in this product at \n<br>      uwosh.double_blind_review/uwosh/double_blind_review/static/overrides/plone.app.layout.viewlets.content_history.pt\n<br>   plone.belowcontenttitle.documentbyline - located in this product at \n<br>      uwosh.double_blind_review/uwosh/double_blind_review/static/overrides/plone.app.layout.viewlets.document_byline.pt\n<br>      \n<br>Overview of what this product does\n<br>==================================\n<br>*Target Uses \n<br>This product was designed to allow double blind review (neither\n<br>author nor reviewer knows who the other is) of content posted to the web site.\n<br>In particular it was designed for review of grant proposals and written student\n<br>work. The idea was to provide this facility in as \"plonish\" a way as possible,\n<br>so that it could be used with almost any content type one could devise. In\n<br>particular, I wanted to create something that non-programmers could use for any\n<br>kind of submission they could build through the web using Dexterity. The main\n<br>impetus for this was that I foresee passing responsibility for my institution's\n<br>internal grant processing onto someone else in the near future.- May 16, 2013 -\n<br>Jonathan Gutow, University of Wisconsin Oshkosh, Oshkosh, WI, USA\n<br>\n<br>*Administration Overview \n<br>For each type of proposal or proposal cycle the\n<br>administrator creates a Proposal Drop Box with instructions in it for what to\n<br>submit and when. At the end of the submission period the administrator stops\n<br>accepting submissions by changing the workflow state. The administrator then\n<br>assigns reviewers to the proposals and changes the state of the Proposal Drop\n<br>Box and its contents to \"under review\". Content rules could be used to\n<br>automatically notify the assigned reviewers by e-mail that the proposals are\n<br>ready for review, but this is not set up by default. Once the reviewers are done\n<br>the proposals are passed on to the panel (another state change) for a final\n<br>decision, which is recorded by changing the state of the proposal, as well. When\n<br>everything is complete the drop box state is changed to cycle complete and the\n<br>decisions and reviews are made visible to the proposers.\n<br>\n<br>*Submitting a Proposal Overview \n<br>The proposer navigates to the web site. In general they should be directed to\n<br>the public landing page. Once they log in links will appear in the \n<br>main navigation bar at the top of the page for any proposal \n<br>drop boxes that are currently accepting submissions or under review.\n<br>Thus the landing page should describe what kind of an account is necessary to\n<br>access the site. Proposals for which the submission-review cycle is complete do\n<br>not show up in the main bar (the administrator is encouraged to make them\n<br>available through an \"Archive\" collection at the root level of the site). By\n<br>clicking on the link in the top navigation bar the proposer navigates to the\n<br>proposal drop box. Using the \"Add New ...\" menu they add a new proposal and\n<br>provide some basic information. Once the proposal is created they add proposer\n<br>ID and contact information to the proposal as sub items. In the examples\n<br>provided there are two types of proposers (proposers and mentors), allowing for\n<br>student proposers and faculty mentors to provide different information. The\n<br>proposer and mentor items follow their own workflows and are only visible to the\n<br>site manager and the proposer or mentor. This way the proposal can be anonymous\n<br>as long as the proposer avoids putting identifying information in the proposal.\n<br>A one or two tiered submission process is available. If the proposer is a member\n<br>of a group that is assigned the role of \"submitter\" they can directly submit the\n<br>proposal by selecting the \"submit\" option in the state menu. If the proposer is\n<br>not a member of the \"submitter\" group (students proposers are not allowed to\n<br>submit directly in our system), they cannot submit directly. They must \"share\"\n<br>their proposal with their mentor using the sharing tab and they also select the\n<br>\"Send proposal to Advisor for approval and submission...\" in the state menu. The\n<br>mentor can then submit it if they approve. The manager then assigns reviewers\n<br>using the sharing tab and transitions the proposal to the \"Under Review\" state.\n<br>Once decisions are made the whole drop box is converted to the \"Cycle complete\"\n<br>state and the decisions and reviews become visible to the proposer.\n<br>\n<br>*How It Works \n<br>This product defines a number of specialized workflows: \n<br>A. Proposal Folder Workflow with the following state progression: \n<br>  1. private (viewable by manager and owner) \n<br>  2. Accepting Submissions (all logged in users can see and create\n<br>  proposals within the dropbox) \n<br>  3. No longer Accepting submissions (visible to logged\n<br>  in users, but no proposals can be added) \n<br>  4. Under Review (only reviewers can see proposals) \n<br>  5. Under Panel Review (only panelists can see proposals) \n<br>  6. Cycle Complete (visible to logged in users) \n<br>B. Proposal Workflow with the following state progression: \n<br>  1. Private (visible to and editable by owner, editor(s), manager)\n<br>  2. Advisor Review (visible to and editable by owner, editor(s), manager) \n<br>  3. Submitted (visible to owner, editor(s) and editable by manager) \n<br>  4. Under Review (visible to reviewer(s) and editable by manager) \n<br>  5. Panel Review (visible to panelist(s) and editable by manager) \n<br>  6. approved_invisible (visible to panelist(s) and editable by manager) \n<br>  7. Approved (visible to owner, editor(s), reviewer(s) and editable by\n<br>  manager) \n<br>  8. alternate_invisible (visible to panelist(s) and editable by manager)\n<br>  9. Alternate (visible to owner, editor(s), reviewer(s) and editable by manager)\n<br>  10. denied_invisible (visible to panelist(s) and editable by manager) \n<br>  11. Denied (visible to owner, editor(s), reviewer(s) and editable by manager) \n<br>C. ID info Workflow with only a private state (visible and editable by owner, \n<br>  editor(s) and manager). \n<br>D. Anonymous Peer Review Workflow with the following state progression:\n<br>  1. Private (visible to and editable by owner (aka reviewer) and manager) \n<br>  2. Submitted (visible to owner (aka reviewer) and and editable by manager) \n<br>  3. Under Panel Review (visible to panelist(s) and editable by manager) \n<br>  4. Cycle Complete (visible to owner, reviewer(s), and panelist(s), editable \n<br>  by manager) \n<br>E. Instructor Only Workflow is an always private workflow only visible to managers. \n<br>\n<br>This product defines some Dexterity based content types as well: \n<br>A. Web Page: It is intended as a replacement for the traditional Plone type \n<br>  \"Page\". It has the advantage when building a product that it can be easily\n<br>  exported into a product using Portal_Setup in the ZMI (see Plone developer \n<br>  documentation at Plone.org).  The instruction pages included in this product\n<br>  use clones of this type.\n<br>B. Proposal Drop Box: this is a container that follows the Proposal Folder\n<br>  Workflow. A new Proposal Drop Box with an appropriate title and a prominent\n<br>  warning about closing date should be created for each proposal cycle. This can\n<br>  be used as an assignment drop box for student work as well. \n<br>C. mock proposal: this is a content type which is a simple example of \n<br>  how to build a proposal. The key features are that it has an upload \n<br>  button for uploading the submitted document and is a container into \n<br>  which the proposer can add other documents, which may or may not be \n<br>  viewable by the reviewers. This type follows the Proposal Workflow.\n<br>  Cloning this is a good place to start when building a proposal type for your\n<br>  site. \n<br>D. Proposer: this is an example of the content type I use to contain\n<br>  information about the proposer that would compromise the anonymity of the\n<br>  proposer. It follows the ID info Workflow, making it invisible to anyone but the\n<br>  proposer and authenticated users with the role of Administrator. \n<br>E. Mentor: this is an example of the content type I use to contain information \n<br>  about the faculty mentor that would compromise the anonymity of \n<br>  the proposing team. It follows the ID info Workflow, making it invisible to \n<br>  anyone but the proposer and authenticated users with the role of Administrator.\n<br>\n<br>Changelog\n<br>=========\n<br>\n<br>0.9dev (unreleased)\n<br>-------------------\n<br>\n<br>- Initial release\n          </div>"}, "last_serial": 807368, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "c3ba0a9ea80328659801e5f1b856bf4c", "sha256": "34c2b43867b22568ae97c378f44be9b7b6b311bb5cf199937ebb2ff39e0829e1"}, "downloads": -1, "filename": "uwosh.double_blind_review-0.9.tar.gz", "has_sig": false, "md5_digest": "c3ba0a9ea80328659801e5f1b856bf4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72181, "upload_time": "2013-07-03T14:54:10", "upload_time_iso_8601": "2013-07-03T14:54:10.502361Z", "url": "https://files.pythonhosted.org/packages/8d/e6/47909a371d39fd7ff7339f9c038999a59bd640e13201178b2e8507bba196/uwosh.double_blind_review-0.9.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc1e90b85c546f79ed7b866773ff249a", "sha256": "ffcf28421d7da665483015d8392275fd6c9fd210947ab5de2d5237719185c3e4"}, "downloads": -1, "filename": "uwosh.double_blind_review-0.9.zip", "has_sig": false, "md5_digest": "cc1e90b85c546f79ed7b866773ff249a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 114798, "upload_time": "2013-07-03T14:54:12", "upload_time_iso_8601": "2013-07-03T14:54:12.850758Z", "url": "https://files.pythonhosted.org/packages/92/91/d61cb45e8d268807238926bdcacdf4866d5e4219c5976c84fff36c5e257b/uwosh.double_blind_review-0.9.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c3ba0a9ea80328659801e5f1b856bf4c", "sha256": "34c2b43867b22568ae97c378f44be9b7b6b311bb5cf199937ebb2ff39e0829e1"}, "downloads": -1, "filename": "uwosh.double_blind_review-0.9.tar.gz", "has_sig": false, "md5_digest": "c3ba0a9ea80328659801e5f1b856bf4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72181, "upload_time": "2013-07-03T14:54:10", "upload_time_iso_8601": "2013-07-03T14:54:10.502361Z", "url": "https://files.pythonhosted.org/packages/8d/e6/47909a371d39fd7ff7339f9c038999a59bd640e13201178b2e8507bba196/uwosh.double_blind_review-0.9.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc1e90b85c546f79ed7b866773ff249a", "sha256": "ffcf28421d7da665483015d8392275fd6c9fd210947ab5de2d5237719185c3e4"}, "downloads": -1, "filename": "uwosh.double_blind_review-0.9.zip", "has_sig": false, "md5_digest": "cc1e90b85c546f79ed7b866773ff249a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 114798, "upload_time": "2013-07-03T14:54:12", "upload_time_iso_8601": "2013-07-03T14:54:12.850758Z", "url": "https://files.pythonhosted.org/packages/92/91/d61cb45e8d268807238926bdcacdf4866d5e4219c5976c84fff36c5e257b/uwosh.double_blind_review-0.9.zip", "yanked": false}], "timestamp": "Fri May  8 03:38:35 2020"}