{"info": {"author": "Aron Griffis", "author_email": "aron@scampersand.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "=========\nbienvenue\n=========\n\n|PyPI| |Build Status| |Coverage Report|\n\nPython module for reading config from environment for `12-factor apps <https://12factor.net/>`_.\nSupports Python 3.4+\n\nRationale\n---------\n\nIn a 12-factor app, `config comes from the environment <https://12factor.net/config>`_.\nFor example, on Heroku, config variables are set using ``heroku config:set`` on the command line,\nthen `passed to the application in the environment <https://devcenter.heroku.com/articles/config-vars>`_.\n\nReading and parsing config from the environment is tedious and error-prone. For\nexample, a Django app has ``settings.DEBUG`` which should be\neither ``True`` or ``False``. The operator runs ``heroku config:set DJANGO_DEBUG\noff`` intending to disable it, but the application only sees a non-empty string\nand treats the value as ``True``.\n\nThis sort of problem can be handled case-by-case but doesn't need to be. Clearly\na configuration setting with a fallback boolean value should be interpreted as\nboolean from the environment. Likewise a fallback integer setting indicates the\nassociated environment variable should be converted from string to int.\n\nSounds like a job for a small and well-tested Python module, right?\n\nInstallation\n------------\n\nInstall from PyPI_:\n\n.. code:: sh\n\n    pip install bienvenue\n\nUsage\n-----\n\nBienvenue provides the function ``make_env_reader`` which returns a new\nfunction for accessing the environment. For example:\n\n.. code:: python\n\n    from bienvenue import make_env_reader\n\n    env = make_env_reader(prefix='MY_')\n\n    DEBUG = env('DEBUG', False)\n    SECRET_KEY = env('SECRET_KEY', 'fallback-secret-for-dev')\n    ALLOWED_HOSTS = env('ALLOWED_HOSTS', [])\n\nThe env reader looks for ``MY_DEBUG`` in ``os.environ``. If it's not there,\nthe default value ``False`` will be returned. However if it's found, then the\nvalue there will be interpreted according to the type of the default, in this\ncase boolean. Common strings such as on/off, true/false and yes/no are\ninterpreted into ``True`` or ``False``.\n\nLikewise ``SECRET_KEY`` will be extracted from ``MY_SECRET_KEY`` and then\ninterpreted as a string value.\n\n``ALLOWED_HOSTS`` will be extracted from ``MY_ALLOWED_HOSTS`` and JSON\ndecoded as a list, since the default value is a list.\n\nIf bienvenue encounters unknown types or values during parsing, it will log an\nerror and fall back to the provided default.\n\nLegal\n-----\n\nCopyright 2017 `Scampersand LLC <https://scampersand.com>`_\n\nReleased under the `MIT license <https://github.com/scampersand/bienvenue/blob/master/LICENSE>`_\n\n.. _PyPI: https://pypi.python.org/pypi/bienvenue\n\n.. |Build Status| image:: https://img.shields.io/travis/scampersand/bienvenue/master.svg?style=plastic\n   :target: https://travis-ci.org/scampersand/bienvenue?branch=master\n\n.. |Coverage Report| image:: https://img.shields.io/codecov/c/github/scampersand/bienvenue/master.svg?style=plastic\n   :target: https://codecov.io/gh/scampersand/bienvenue/branch/master\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/bienvenue.svg?style=plastic\n   :target: PyPI_\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scampersand/bienvenue", "keywords": "django,environment,environ,env", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "bienvenue", "package_url": "https://pypi.org/project/bienvenue/", "platform": "", "project_url": "https://pypi.org/project/bienvenue/", "project_urls": {"Homepage": "https://github.com/scampersand/bienvenue"}, "release_url": "https://pypi.org/project/bienvenue/3.0.1/", "requires_dist": null, "requires_python": "", "summary": "Read config from environment for 12 factor apps", "version": "3.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/bienvenue\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0aef8707749ce23b092e329fbe7ccada2ffa72de/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6269656e76656e75652e7376673f7374796c653d706c6173746963\"></a> <a href=\"https://travis-ci.org/scampersand/bienvenue?branch=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0fd4175cc02fe64fa560bd5a60624a3847476a8/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7363616d70657273616e642f6269656e76656e75652f6d61737465722e7376673f7374796c653d706c6173746963\"></a> <a href=\"https://codecov.io/gh/scampersand/bienvenue/branch/master\" rel=\"nofollow\"><img alt=\"Coverage Report\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/676f97f8fdbddbc96f97105c41b29e4648912cfd/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f7363616d70657273616e642f6269656e76656e75652f6d61737465722e7376673f7374796c653d706c6173746963\"></a></p>\n<p>Python module for reading config from environment for <a href=\"https://12factor.net/\" rel=\"nofollow\">12-factor apps</a>.\nSupports Python 3.4+</p>\n<div id=\"rationale\">\n<h2>Rationale</h2>\n<p>In a 12-factor app, <a href=\"https://12factor.net/config\" rel=\"nofollow\">config comes from the environment</a>.\nFor example, on Heroku, config variables are set using <tt>heroku config:set</tt> on the command line,\nthen <a href=\"https://devcenter.heroku.com/articles/config-vars\" rel=\"nofollow\">passed to the application in the environment</a>.</p>\n<p>Reading and parsing config from the environment is tedious and error-prone. For\nexample, a Django app has <tt>settings.DEBUG</tt> which should be\neither <tt>True</tt> or <tt>False</tt>. The operator runs <tt>heroku config:set DJANGO_DEBUG\noff</tt> intending to disable it, but the application only sees a non-empty string\nand treats the value as <tt>True</tt>.</p>\n<p>This sort of problem can be handled case-by-case but doesn\u2019t need to be. Clearly\na configuration setting with a fallback boolean value should be interpreted as\nboolean from the environment. Likewise a fallback integer setting indicates the\nassociated environment variable should be converted from string to int.</p>\n<p>Sounds like a job for a small and well-tested Python module, right?</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install from <a href=\"https://pypi.python.org/pypi/bienvenue\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>pip install bienvenue\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Bienvenue provides the function <tt>make_env_reader</tt> which returns a new\nfunction for accessing the environment. For example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bienvenue</span> <span class=\"kn\">import</span> <span class=\"n\">make_env_reader</span>\n\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">make_env_reader</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">'MY_'</span><span class=\"p\">)</span>\n\n<span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"p\">(</span><span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"p\">(</span><span class=\"s1\">'SECRET_KEY'</span><span class=\"p\">,</span> <span class=\"s1\">'fallback-secret-for-dev'</span><span class=\"p\">)</span>\n<span class=\"n\">ALLOWED_HOSTS</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"p\">(</span><span class=\"s1\">'ALLOWED_HOSTS'</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n</pre>\n<p>The env reader looks for <tt>MY_DEBUG</tt> in <tt>os.environ</tt>. If it\u2019s not there,\nthe default value <tt>False</tt> will be returned. However if it\u2019s found, then the\nvalue there will be interpreted according to the type of the default, in this\ncase boolean. Common strings such as on/off, true/false and yes/no are\ninterpreted into <tt>True</tt> or <tt>False</tt>.</p>\n<p>Likewise <tt>SECRET_KEY</tt> will be extracted from <tt>MY_SECRET_KEY</tt> and then\ninterpreted as a string value.</p>\n<p><tt>ALLOWED_HOSTS</tt> will be extracted from <tt>MY_ALLOWED_HOSTS</tt> and JSON\ndecoded as a list, since the default value is a list.</p>\n<p>If bienvenue encounters unknown types or values during parsing, it will log an\nerror and fall back to the provided default.</p>\n</div>\n<div id=\"legal\">\n<h2>Legal</h2>\n<p>Copyright 2017 <a href=\"https://scampersand.com\" rel=\"nofollow\">Scampersand LLC</a></p>\n<p>Released under the <a href=\"https://github.com/scampersand/bienvenue/blob/master/LICENSE\" rel=\"nofollow\">MIT license</a></p>\n</div>\n\n          </div>"}, "last_serial": 4305319, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ebd406532206fc1b0718859a925633c5", "sha256": "3e3109a957baa4457ad635573d7d963f319476bb729dc15ee3858368aa9a1e54"}, "downloads": -1, "filename": "bienvenue-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ebd406532206fc1b0718859a925633c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4829, "upload_time": "2017-01-30T15:30:43", "upload_time_iso_8601": "2017-01-30T15:30:43.313256Z", "url": "https://files.pythonhosted.org/packages/dc/c7/3f9c41088560b2eefc7064dba108e787f38f29dd6ae5f2acf7fb102d6774/bienvenue-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "1ec8da78a6e886619cf5061cb5524895", "sha256": "2dd53675698acfd1ee556b6c9265416cff059203d373cdd6825b399b9c9b9748"}, "downloads": -1, "filename": "bienvenue-2.0.0.tar.gz", "has_sig": false, "md5_digest": "1ec8da78a6e886619cf5061cb5524895", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4897, "upload_time": "2017-01-30T21:13:42", "upload_time_iso_8601": "2017-01-30T21:13:42.890451Z", "url": "https://files.pythonhosted.org/packages/d7/08/6e0b320886f9fdc0f7e014384b40efaaee081f86855541b9702b5769dadd/bienvenue-2.0.0.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "370adfe8c4a7bfa43a44b861a6ec85c2", "sha256": "19286943819142a532fa5b8b0244d69cf661427b48af6b3605e4a93f9137cf5b"}, "downloads": -1, "filename": "bienvenue-3.0.0.tar.gz", "has_sig": false, "md5_digest": "370adfe8c4a7bfa43a44b861a6ec85c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4846, "upload_time": "2017-02-22T13:45:28", "upload_time_iso_8601": "2017-02-22T13:45:28.478764Z", "url": "https://files.pythonhosted.org/packages/25/32/1655790133dd9475aabcd2b48563b88c911edc7dc2d29abd8c5aaeaf8bad/bienvenue-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "c5c890ab14329e1287316a009d5e4024", "sha256": "e1b2232d64016414e67203855a805d30e7db969d3d72b7eb4f6b320174c14b2e"}, "downloads": -1, "filename": "bienvenue-3.0.1-py3-none-any.whl", "has_sig": true, "md5_digest": "c5c890ab14329e1287316a009d5e4024", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7896, "upload_time": "2018-09-24T16:25:55", "upload_time_iso_8601": "2018-09-24T16:25:55.354295Z", "url": "https://files.pythonhosted.org/packages/b4/0c/f9164f6430f6b12437205c02679bf065bdb069e0d64480ed452216c41e53/bienvenue-3.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b66ef4ffe4e4241b01976d156ecd0c12", "sha256": "9cafe50a37e9df8b4f31fcecccc9c36a7e939f7523da6cd860205d6b2afd4962"}, "downloads": -1, "filename": "bienvenue-3.0.1.tar.gz", "has_sig": true, "md5_digest": "b66ef4ffe4e4241b01976d156ecd0c12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4852, "upload_time": "2018-09-24T16:26:08", "upload_time_iso_8601": "2018-09-24T16:26:08.340179Z", "url": "https://files.pythonhosted.org/packages/79/28/3ac12e1d5632c4f6f5523b4f6789eed93ed588591b98287f479b0dae8ca2/bienvenue-3.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c5c890ab14329e1287316a009d5e4024", "sha256": "e1b2232d64016414e67203855a805d30e7db969d3d72b7eb4f6b320174c14b2e"}, "downloads": -1, "filename": "bienvenue-3.0.1-py3-none-any.whl", "has_sig": true, "md5_digest": "c5c890ab14329e1287316a009d5e4024", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7896, "upload_time": "2018-09-24T16:25:55", "upload_time_iso_8601": "2018-09-24T16:25:55.354295Z", "url": "https://files.pythonhosted.org/packages/b4/0c/f9164f6430f6b12437205c02679bf065bdb069e0d64480ed452216c41e53/bienvenue-3.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b66ef4ffe4e4241b01976d156ecd0c12", "sha256": "9cafe50a37e9df8b4f31fcecccc9c36a7e939f7523da6cd860205d6b2afd4962"}, "downloads": -1, "filename": "bienvenue-3.0.1.tar.gz", "has_sig": true, "md5_digest": "b66ef4ffe4e4241b01976d156ecd0c12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4852, "upload_time": "2018-09-24T16:26:08", "upload_time_iso_8601": "2018-09-24T16:26:08.340179Z", "url": "https://files.pythonhosted.org/packages/79/28/3ac12e1d5632c4f6f5523b4f6789eed93ed588591b98287f479b0dae8ca2/bienvenue-3.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:35 2020"}