{"info": {"author": "Terry Boult, Ethan Rudd, and Manuel Gunther", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "Synopsis\n========\n\nlibMR provides core MetaRecognition and  Weibull fitting functionality.\nIt is used to calculate w-scores used for multi-modal fusion, renormalize SVM data and in general support open-set algorithms with outlier detection\n\n\nMotivation\n==========\n\nDetermine when something is an outlier is tricky business.\nLuckily extreme value theory provides a strong basis for modeling of the largest or smallest known values and then determing if something else is too large or too small. This library supports such computations.\nIt is also easy to do the work in almost any advanced package (R, Matlab, etc.) but it is trick to keep it all straight.\nThe C++ classes here track translation and flipping to make it easier to correctly use the meta-recognition concepts.\n\n\nLicense\n=======\n\nThis version libMR is released under the BSD 3-Clause license. (see License.txt) and superseed previous license.  We dropped pursing the patent protection.\n\nPlease cite libMR in your publications if it helps your research::\n\n  @article{Scheirer_2011_TPAMI,\n    author = {Walter J. Scheirer and Anderson Rocha and Ross Michaels and Terrance E. Boult},\n    title = {Meta-Recognition: The Theory and Practice of Recognition Score Analysis},\n    journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence (PAMI)},\n    volume = {33},\n    issue = {8},\n    pages = {1689--1695},\n    year = {2011}\n  }\n\nor one of our later works if combining it with them.\n\n\n\nThis version uses object, that retain the \"transforms\" (including save/load) need to compute the actual w-scores.\nIt includes functions  for Prediction, CDF,  Inverse, FitHigh (larger is better), FitLow (smaller is better) and FitSVM.\n\nInstallation\n============\n\nProject layout\n--------------\n\n* libMR      Library source code and resources\n* python     A python wrapper for libMR using Cython\n* examples   Directory with example programs that test that also test for correctness\n* doc        C++ documentation; directory starts at html/index.html\n\n\n\nC++ library\n-----------\n\nThis needs CMake (version > 2.8)\n\nQuick build instructions for Windows::\n\n  use CMake GUI\n  Source code = <where libmr is> libMR/libMR\n  Where to build binaries = < where libmr is > /libMR/build\n  Click generate\n  Select correct visual studio version compiler\n  Click yes to add directory build\n  Open Visual Studio Solution\n  Build ALL_BUILD project to build libmr\n  Build INSTALL project to install\n  Add install dir to path to link against libmr dll.\n\nQuick build instructions for linux/Mac::\n\n  $ tar -zxf libMR.tgz\n  $ cd libMR\n  $ mkdir build;  % or whereyou like to build it\n  $ cd build\n  $ cmake ..\n  or to get a different installation directory\n  $ cmake -DCMAKE_INSTALL_PREFIX=<YOUR_INSTALLATON_PATH> ..\n  $ make\n\nRunning examples - Run after installing libMR::\n\n  $ examples/mr-test\n  $ examples/wlb-test\n\n\nOptionally you can \"install\" it (by default in the system path -- there you have to use sudo)::\n\n  $ make install\n\nThere are built in tests in examples/mr-test to ensure it compiled correctly and is computing proper values\n\n\n\nPython\n------\n\nPython bindings to LibMR are provided by Cython >=0.17. When building\nthis way, LibMR is statically linked into the Python library which\nmeans you don't have to build the entire package.\n\nThere are several ways to install LibMR for Python.\n\n1. (preferred) Installing with Pip:\n\n   This method will build LibMR as a Python extension and will install\n   it into your python path. If you are inside a virtualenv, this\n   allows you to install LibMR as a standard user without needing\n   sudo::\n\n     $ virtualenv venv && source venv/bin/activate\n     $ pip install -r python/requirements.txt\n     $ pip install .\n\n   Update: libmr is now available on PyPI. To install the latest version,\n   you can simply::\n\n     $ pip install libmr\n\n2. Building a shared object\n\n   If you have Cython and NumPy already installed but you do not want\n   to install LibMR into Python's path, you can simply build the\n   module directly::\n\n     $ python setup.py build_ext -i\n\n   This will place 'libmr.so' into the current folder. You can import\n   it directly::\n\n     $ file libmr.so\n     libmr.so: ELF 64-bit LSB  shared object, ...\n     $ python\n     >>> import libmr\n     >>> mr = libmr.MR()\n\n   Now, move ``libmr.so`` into your project's folder, or add this path into your ``PYTHONPATH`` environment variable.\n\n\nContributors\n============\n\nDeveloped by Dr. Terrance (Terry) Boult,  Dr. Walter Scheir   with some implemntation by Vijay Iyer @Securics and Enhancements for Python by Ethan Rudd and Dr. Manuel Gunther\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Vastlab/libMR", "keywords": "", "license": "http://www.metarecognition.com/libmr-license/", "maintainer": "", "maintainer_email": "", "name": "libmr", "package_url": "https://pypi.org/project/libmr/", "platform": "", "project_url": "https://pypi.org/project/libmr/", "project_urls": {"Homepage": "https://github.com/Vastlab/libMR"}, "release_url": "https://pypi.org/project/libmr/0.1.9/", "requires_dist": null, "requires_python": "", "summary": "LibMR, the MetaRecognition library", "version": "0.1.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"synopsis\">\n<h2>Synopsis</h2>\n<p>libMR provides core MetaRecognition and  Weibull fitting functionality.\nIt is used to calculate w-scores used for multi-modal fusion, renormalize SVM data and in general support open-set algorithms with outlier detection</p>\n</div>\n<div id=\"motivation\">\n<h2>Motivation</h2>\n<p>Determine when something is an outlier is tricky business.\nLuckily extreme value theory provides a strong basis for modeling of the largest or smallest known values and then determing if something else is too large or too small. This library supports such computations.\nIt is also easy to do the work in almost any advanced package (R, Matlab, etc.) but it is trick to keep it all straight.\nThe C++ classes here track translation and flipping to make it easier to correctly use the meta-recognition concepts.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This version libMR is released under the BSD 3-Clause license. (see License.txt) and superseed previous license.  We dropped pursing the patent protection.</p>\n<p>Please cite libMR in your publications if it helps your research:</p>\n<pre>@article{Scheirer_2011_TPAMI,\n  author = {Walter J. Scheirer and Anderson Rocha and Ross Michaels and Terrance E. Boult},\n  title = {Meta-Recognition: The Theory and Practice of Recognition Score Analysis},\n  journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence (PAMI)},\n  volume = {33},\n  issue = {8},\n  pages = {1689--1695},\n  year = {2011}\n}\n</pre>\n<p>or one of our later works if combining it with them.</p>\n<p>This version uses object, that retain the \u201ctransforms\u201d (including save/load) need to compute the actual w-scores.\nIt includes functions  for Prediction, CDF,  Inverse, FitHigh (larger is better), FitLow (smaller is better) and FitSVM.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"project-layout\">\n<h3>Project layout</h3>\n<ul>\n<li>libMR      Library source code and resources</li>\n<li>python     A python wrapper for libMR using Cython</li>\n<li>examples   Directory with example programs that test that also test for correctness</li>\n<li>doc        C++ documentation; directory starts at html/index.html</li>\n</ul>\n</div>\n<div id=\"c-library\">\n<h3>C++ library</h3>\n<p>This needs CMake (version &gt; 2.8)</p>\n<p>Quick build instructions for Windows:</p>\n<pre>use CMake GUI\nSource code = &lt;where libmr is&gt; libMR/libMR\nWhere to build binaries = &lt; where libmr is &gt; /libMR/build\nClick generate\nSelect correct visual studio version compiler\nClick yes to add directory build\nOpen Visual Studio Solution\nBuild ALL_BUILD project to build libmr\nBuild INSTALL project to install\nAdd install dir to path to link against libmr dll.\n</pre>\n<p>Quick build instructions for linux/Mac:</p>\n<pre>$ tar -zxf libMR.tgz\n$ cd libMR\n$ mkdir build;  % or whereyou like to build it\n$ cd build\n$ cmake ..\nor to get a different installation directory\n$ cmake -DCMAKE_INSTALL_PREFIX=&lt;YOUR_INSTALLATON_PATH&gt; ..\n$ make\n</pre>\n<p>Running examples - Run after installing libMR:</p>\n<pre>$ examples/mr-test\n$ examples/wlb-test\n</pre>\n<p>Optionally you can \u201cinstall\u201d it (by default in the system path \u2013 there you have to use sudo):</p>\n<pre>$ make install\n</pre>\n<p>There are built in tests in examples/mr-test to ensure it compiled correctly and is computing proper values</p>\n</div>\n<div id=\"python\">\n<h3>Python</h3>\n<p>Python bindings to LibMR are provided by Cython &gt;=0.17. When building\nthis way, LibMR is statically linked into the Python library which\nmeans you don\u2019t have to build the entire package.</p>\n<p>There are several ways to install LibMR for Python.</p>\n<ol>\n<li><p>(preferred) Installing with Pip:</p>\n<p>This method will build LibMR as a Python extension and will install\nit into your python path. If you are inside a virtualenv, this\nallows you to install LibMR as a standard user without needing\nsudo:</p>\n<pre>$ virtualenv venv &amp;&amp; source venv/bin/activate\n$ pip install -r python/requirements.txt\n$ pip install .\n</pre>\n<p>Update: libmr is now available on PyPI. To install the latest version,\nyou can simply:</p>\n<pre>$ pip install libmr\n</pre>\n</li>\n<li><p>Building a shared object</p>\n<p>If you have Cython and NumPy already installed but you do not want\nto install LibMR into Python\u2019s path, you can simply build the\nmodule directly:</p>\n<pre>$ python setup.py build_ext -i\n</pre>\n<p>This will place \u2018libmr.so\u2019 into the current folder. You can import\nit directly:</p>\n<pre>$ file libmr.so\nlibmr.so: ELF 64-bit LSB  shared object, ...\n$ python\n&gt;&gt;&gt; import libmr\n&gt;&gt;&gt; mr = libmr.MR()\n</pre>\n<p>Now, move <tt>libmr.so</tt> into your project\u2019s folder, or add this path into your <tt>PYTHONPATH</tt> environment variable.</p>\n</li>\n</ol>\n</div>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<p>Developed by Dr. Terrance (Terry) Boult,  Dr. Walter Scheir   with some implemntation by Vijay Iyer @Securics and Enhancements for Python by Ethan Rudd and Dr. Manuel Gunther</p>\n</div>\n\n          </div>"}, "last_serial": 3910956, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5f78f82bba934553a451d620a9367191", "sha256": "b69e6162b74cfd42e18e2c179c85d0f940182850e287cc05610f137ccba737ef"}, "downloads": -1, "filename": "libmr-0.1.0.zip", "has_sig": false, "md5_digest": "5f78f82bba934553a451d620a9367191", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28093, "upload_time": "2017-03-23T21:20:38", "upload_time_iso_8601": "2017-03-23T21:20:38.790938Z", "url": "https://files.pythonhosted.org/packages/c0/e9/86c2317c58cd57a61e2ad0b003bc609d9003ab3c1d516eb0f262c35986ba/libmr-0.1.0.zip", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "84afe87382385f722ac8de4128a6491e", "sha256": "d784ee2596f1b2bdf575cff83e717aa661b1cba6fbb6299aab87ad49ab7152f0"}, "downloads": -1, "filename": "libmr-0.1.1.zip", "has_sig": false, "md5_digest": "84afe87382385f722ac8de4128a6491e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28117, "upload_time": "2017-03-23T21:25:53", "upload_time_iso_8601": "2017-03-23T21:25:53.743763Z", "url": "https://files.pythonhosted.org/packages/61/d2/72ae1001df66a62d01e85ccb2bd59c3ed02fd91eb646b08af4f80cc9e238/libmr-0.1.1.zip", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9240d0f3c41cfb5b691b8c2365ad5c44", "sha256": "04decf09854d570c52b9c2ec420190d39ad18469247e9f1f74cf91aac80b7a8f"}, "downloads": -1, "filename": "libmr-0.1.2.zip", "has_sig": false, "md5_digest": "9240d0f3c41cfb5b691b8c2365ad5c44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27117, "upload_time": "2017-03-23T21:31:07", "upload_time_iso_8601": "2017-03-23T21:31:07.676870Z", "url": "https://files.pythonhosted.org/packages/4d/a2/8168b9251f118e9207194dfb27bc321db5c64c3f725225c93cf3fc27c922/libmr-0.1.2.zip", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "136e26384063c526a1c9f2a6b4f82374", "sha256": "b35b0c65e2dd8d7a0ab84d6aadfe17ee49743366857f9111514e717063d5c6be"}, "downloads": -1, "filename": "libmr-0.1.3.zip", "has_sig": false, "md5_digest": "136e26384063c526a1c9f2a6b4f82374", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26991, "upload_time": "2017-03-23T21:36:56", "upload_time_iso_8601": "2017-03-23T21:36:56.406699Z", "url": "https://files.pythonhosted.org/packages/09/59/1ec2ebcd63af2e8d958d90be5e7cd531d44cead82837553007b278a94716/libmr-0.1.3.zip", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "3afd5291fcaf6486647ed12522acd9ec", "sha256": "387efd81af247e285c862e773978e50a95736f042fedd61f42fbd2dbf263645c"}, "downloads": -1, "filename": "libmr-0.1.4.zip", "has_sig": false, "md5_digest": "3afd5291fcaf6486647ed12522acd9ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 123837, "upload_time": "2017-03-24T22:43:57", "upload_time_iso_8601": "2017-03-24T22:43:57.321778Z", "url": "https://files.pythonhosted.org/packages/65/97/0385477dadf84b39df24c4721f4eaee00a615931746b9ac1488a70254cd7/libmr-0.1.4.zip", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "49647e1271eae202ad8f442d66f51f8e", "sha256": "5057bccd6b1401f932b88212ba4d00970e2041aa4245dddd1806f033a0e770b0"}, "downloads": -1, "filename": "libmr-0.1.5.zip", "has_sig": false, "md5_digest": "49647e1271eae202ad8f442d66f51f8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27399, "upload_time": "2017-03-24T22:52:56", "upload_time_iso_8601": "2017-03-24T22:52:56.377134Z", "url": "https://files.pythonhosted.org/packages/07/c3/b952279a10eb7b0ee3485e30e57ad64211c885be73909fa0cf928eed1ad4/libmr-0.1.5.zip", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "a9aa51c81a42cc2c3633211325fc3d32", "sha256": "dbbf2d46026f2619ca4becd55149a025705b87a6903a2e03d8a31916a31e70db"}, "downloads": -1, "filename": "libmr-0.1.6.zip", "has_sig": false, "md5_digest": "a9aa51c81a42cc2c3633211325fc3d32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33638, "upload_time": "2017-03-24T22:56:41", "upload_time_iso_8601": "2017-03-24T22:56:41.202523Z", "url": "https://files.pythonhosted.org/packages/1e/cd/49152b43834828632f368d70a106410158bedf81c2d6d3f3cc9e1dbb96aa/libmr-0.1.6.zip", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "96c06ace68646809865ad40ebcd6c836", "sha256": "e2ec54169eb733b1d6d9b3c09f81cb163ceedf3135a1aff8c90956fca32f8bb9"}, "downloads": -1, "filename": "libmr-0.1.7.zip", "has_sig": false, "md5_digest": "96c06ace68646809865ad40ebcd6c836", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39807, "upload_time": "2017-04-19T20:13:36", "upload_time_iso_8601": "2017-04-19T20:13:36.085566Z", "url": "https://files.pythonhosted.org/packages/c6/9e/47bb91b8eec42103c398ca448a62c5a3e91bdec725a8c1b1735d94706cca/libmr-0.1.7.zip", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "82fa0441920b70add6386f000f82ccec", "sha256": "49b1f1532b82345fa41613b8b6766287bb5feeb42610dd60be60a1b5477dc1eb"}, "downloads": -1, "filename": "libmr-0.1.8.zip", "has_sig": false, "md5_digest": "82fa0441920b70add6386f000f82ccec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39831, "upload_time": "2017-08-08T22:02:57", "upload_time_iso_8601": "2017-08-08T22:02:57.786510Z", "url": "https://files.pythonhosted.org/packages/14/1c/269aa651401cc5d24863c57479b6f56f19bcb93a8a02ea49d78aabad1c06/libmr-0.1.8.zip", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "fec9cae9f71cea8a2d196f4f4a579eed", "sha256": "43ccd86693b725fa3abe648c8cdcef17ba5fa46b5528168829e5f9b968dfeb70"}, "downloads": -1, "filename": "libmr-0.1.9.zip", "has_sig": false, "md5_digest": "fec9cae9f71cea8a2d196f4f4a579eed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39797, "upload_time": "2018-05-30T00:08:27", "upload_time_iso_8601": "2018-05-30T00:08:27.715673Z", "url": "https://files.pythonhosted.org/packages/f3/48/f9d43abb742cbebec15933a052042da84d682da2142e803a0c1fa4524210/libmr-0.1.9.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fec9cae9f71cea8a2d196f4f4a579eed", "sha256": "43ccd86693b725fa3abe648c8cdcef17ba5fa46b5528168829e5f9b968dfeb70"}, "downloads": -1, "filename": "libmr-0.1.9.zip", "has_sig": false, "md5_digest": "fec9cae9f71cea8a2d196f4f4a579eed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39797, "upload_time": "2018-05-30T00:08:27", "upload_time_iso_8601": "2018-05-30T00:08:27.715673Z", "url": "https://files.pythonhosted.org/packages/f3/48/f9d43abb742cbebec15933a052042da84d682da2142e803a0c1fa4524210/libmr-0.1.9.zip", "yanked": false}], "timestamp": "Fri May  8 00:46:32 2020"}