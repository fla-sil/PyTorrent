{"info": {"author": "Lewis", "author_email": "lewis.morris@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "\n<p align=\"center\"> \n<img src=\"https://github.com/lewis-morris/Skperopt/blob/master/images/logo.png?raw=true\">\n</p>\n\n# Skperopt\n\nA hyperopt wrapper - simplifying hyperparameter tuning with Scikit-learn style estimators.\n\nWorks with either classification evaluation metrics \"f1\", \"auc\" or \"accuracy\" AND regression \"rmse\" and \"mse\".\n\n## Installation:\n\n```\npip install skperopt\n```\n\n## Usage:\n\nJust pass in an estimator, a parameter grid and Hyperopt will do the rest. No need to define objectives or write hyoperopt specific parameter grids. \n\n### Recipe (vanilla flavour):\n\n- [x]  Import skperopt\n- [x]  Initalize skperopt \n- [x]  Run skperopt.HyperSearch.search\n- [x]  Collect the results\n\nCode example below.\n\n```python\nimport skperopt as sk\n\nimport pandas as pd\n\nfrom sklearn.datasets import make_classification\nfrom sklearn.neighbors import KNeighborsClassifier\n\n#generate classification data\ndata = make_classification(n_samples=1000, n_features=10, n_classes=2)\nX = pd.DataFrame(data[0])\ny = pd.DataFrame(data[1])\n\n#init the classifier\nkn = KNeighborsClassifier()\nparam = {\"n_neighbors\": [int(x) for x in np.linspace(1, 60, 30)],\n         \"leaf_size\": [int(x) for x in np.linspace(1, 60, 30)],\n         \"p\": [1, 2, 3, 4, 5, 10, 20],\n         \"algorithm\": ['auto', 'ball_tree', 'kd_tree', 'brute'],\n         \"weights\": [\"uniform\", \"distance\"]}\n\n\n#search parameters\nsearch = sk.HyperSearch(kn, X, y, params=param)\nsearch.search()\n\n#gather and apply the best parameters\nkn.set_params(**search.best_params)\n\n#view run results\nprint(search.stats)\n\n\n```\n\n## HyperSearch parameters\n\n* **est** (*[sklearn estimator]* required) \n> any sklearn style estimator\n\n* **X** (*[pandas Dataframe]* required) \n> your training data\n\n* **y** (*[pandas Dataframe]* required) \n> your training data\n\n* **params** (*[dictionary]* required) \n> a parameter search grid \n\n* **iters** (default 500 *[int]*) \n> number of iterations to try before early stopping\n\n* **time_to_search** (default None *[int]*) \n> time in seconds to run for before early stopping (None = no time limit)\n\n* **cv** (default 5 *[int]*) \n> number of folds to use in cross_vaidation tests\n\n* **cv_times** (default 1 *[int]*) \n> number of times to perfrom cross validation on a new random sample of the data -higher values decrease variance but increase run time\n\n* **randomState** (default 10 *[int]*) \n> random state for the data shuffling\n\n* **scorer** (default \"f1\" *[str]*) \n> type of evaluation metric to use - accepts classification \"f1\",\"auc\",\"accuracy\" or regression \"rmse\" and \"mse\"\n\n* **verbose** (default 1 *[int]*) \n> amount of verbosity \n\n         0 = none \n\n         1 = some \n\n         2 = debug\n\n* **random** (default - *False*) \n> should the data be randomized during the cross validation\n\n* **foldtype** (default \"Kfold\" *[str]*) \n> type of folds to use - accepts \"KFold\", \"Stratified\"\n\n## HyperSearch methods \n\n* **HyperSearch.search()** (None) \n> Used to search the parameter grid using hyperopt. No parameters need to be passed to the function. All parameters are set during initialization.\n\n\n# Testing\n\nWith 100 tests of 150 search iterations for both RandomSearch and Skperopt Searches.\n\nSkperopt (hyperopt) performs better than a RandomSearch, producing higher average f1 score with a smaller standard deviation.\n\n\n![alt chart](./chart.png \"Logo Title Text 1\")\n\n### Skperopt Search Results \n\nf1 score over 100 test runs:\n\n> Mean **0.9340930**\n\n> Standard deviation **0.0062275**\n\n\n### Random Search Results\n\nf1 score over 100 test runs \n\n> Mean **0.927461652**\n\n> Standard deviation **0.0063314**\n\n\n----------------------------------------------------------------------------\n\n\n## Updates\n\n### V0.0.73\n\n* Added cv_times attr - runs the cross validation n times (ie cv (5x5) ) each iteration on a new randomly sampled data set\n this should reduce overfitting \n\n\n### V0.0.7\n\n* Added **FIXED** RMSE eval metric \n\n* Added MSE eval metric \n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/lewis-morris/Skperopt/archive/0.0.74.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lewis-morris/Skperopt", "keywords": "hyperopt-wrapper,hyperparameter", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Skperopt", "package_url": "https://pypi.org/project/Skperopt/", "platform": "", "project_url": "https://pypi.org/project/Skperopt/", "project_urls": {"Download": "https://github.com/lewis-morris/Skperopt/archive/0.0.74.tar.gz", "Homepage": "https://github.com/lewis-morris/Skperopt"}, "release_url": "https://pypi.org/project/Skperopt/0.0.74/", "requires_dist": ["numpy", "pandas", "sklearn", "hyperopt (==0.2.3)"], "requires_python": "", "summary": "A hyperopt wrapper - simplifying hyperparameter tuning with Scikit-learn style estimators.", "version": "0.0.74", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\"> \n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/33800fdcb32b0a056c164bee4864fd171d02363f/68747470733a2f2f6769746875622e636f6d2f6c657769732d6d6f727269732f536b7065726f70742f626c6f622f6d61737465722f696d616765732f6c6f676f2e706e673f7261773d74727565\">\n</p>\n<h1>Skperopt</h1>\n<p>A hyperopt wrapper - simplifying hyperparameter tuning with Scikit-learn style estimators.</p>\n<p>Works with either classification evaluation metrics \"f1\", \"auc\" or \"accuracy\" AND regression \"rmse\" and \"mse\".</p>\n<h2>Installation:</h2>\n<pre><code>pip install skperopt\n</code></pre>\n<h2>Usage:</h2>\n<p>Just pass in an estimator, a parameter grid and Hyperopt will do the rest. No need to define objectives or write hyoperopt specific parameter grids.</p>\n<h3>Recipe (vanilla flavour):</h3>\n<ul>\n<li>[x]  Import skperopt</li>\n<li>[x]  Initalize skperopt</li>\n<li>[x]  Run skperopt.HyperSearch.search</li>\n<li>[x]  Collect the results</li>\n</ul>\n<p>Code example below.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">skperopt</span> <span class=\"k\">as</span> <span class=\"nn\">sk</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">make_classification</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.neighbors</span> <span class=\"kn\">import</span> <span class=\"n\">KNeighborsClassifier</span>\n\n<span class=\"c1\">#generate classification data</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">make_classification</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">n_features</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">n_classes</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n<span class=\"c1\">#init the classifier</span>\n<span class=\"n\">kn</span> <span class=\"o\">=</span> <span class=\"n\">KNeighborsClassifier</span><span class=\"p\">()</span>\n<span class=\"n\">param</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"n_neighbors\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">)],</span>\n         <span class=\"s2\">\"leaf_size\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">)],</span>\n         <span class=\"s2\">\"p\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">],</span>\n         <span class=\"s2\">\"algorithm\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'auto'</span><span class=\"p\">,</span> <span class=\"s1\">'ball_tree'</span><span class=\"p\">,</span> <span class=\"s1\">'kd_tree'</span><span class=\"p\">,</span> <span class=\"s1\">'brute'</span><span class=\"p\">],</span>\n         <span class=\"s2\">\"weights\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"uniform\"</span><span class=\"p\">,</span> <span class=\"s2\">\"distance\"</span><span class=\"p\">]}</span>\n\n\n<span class=\"c1\">#search parameters</span>\n<span class=\"n\">search</span> <span class=\"o\">=</span> <span class=\"n\">sk</span><span class=\"o\">.</span><span class=\"n\">HyperSearch</span><span class=\"p\">(</span><span class=\"n\">kn</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">param</span><span class=\"p\">)</span>\n<span class=\"n\">search</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#gather and apply the best parameters</span>\n<span class=\"n\">kn</span><span class=\"o\">.</span><span class=\"n\">set_params</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">search</span><span class=\"o\">.</span><span class=\"n\">best_params</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#view run results</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">search</span><span class=\"o\">.</span><span class=\"n\">stats</span><span class=\"p\">)</span>\n</pre>\n<h2>HyperSearch parameters</h2>\n<ul>\n<li><strong>est</strong> (<em>[sklearn estimator]</em> required)</li>\n</ul>\n<blockquote>\n<p>any sklearn style estimator</p>\n</blockquote>\n<ul>\n<li><strong>X</strong> (<em>[pandas Dataframe]</em> required)</li>\n</ul>\n<blockquote>\n<p>your training data</p>\n</blockquote>\n<ul>\n<li><strong>y</strong> (<em>[pandas Dataframe]</em> required)</li>\n</ul>\n<blockquote>\n<p>your training data</p>\n</blockquote>\n<ul>\n<li><strong>params</strong> (<em>[dictionary]</em> required)</li>\n</ul>\n<blockquote>\n<p>a parameter search grid</p>\n</blockquote>\n<ul>\n<li><strong>iters</strong> (default 500 <em>[int]</em>)</li>\n</ul>\n<blockquote>\n<p>number of iterations to try before early stopping</p>\n</blockquote>\n<ul>\n<li><strong>time_to_search</strong> (default None <em>[int]</em>)</li>\n</ul>\n<blockquote>\n<p>time in seconds to run for before early stopping (None = no time limit)</p>\n</blockquote>\n<ul>\n<li><strong>cv</strong> (default 5 <em>[int]</em>)</li>\n</ul>\n<blockquote>\n<p>number of folds to use in cross_vaidation tests</p>\n</blockquote>\n<ul>\n<li><strong>cv_times</strong> (default 1 <em>[int]</em>)</li>\n</ul>\n<blockquote>\n<p>number of times to perfrom cross validation on a new random sample of the data -higher values decrease variance but increase run time</p>\n</blockquote>\n<ul>\n<li><strong>randomState</strong> (default 10 <em>[int]</em>)</li>\n</ul>\n<blockquote>\n<p>random state for the data shuffling</p>\n</blockquote>\n<ul>\n<li><strong>scorer</strong> (default \"f1\" <em>[str]</em>)</li>\n</ul>\n<blockquote>\n<p>type of evaluation metric to use - accepts classification \"f1\",\"auc\",\"accuracy\" or regression \"rmse\" and \"mse\"</p>\n</blockquote>\n<ul>\n<li><strong>verbose</strong> (default 1 <em>[int]</em>)</li>\n</ul>\n<blockquote>\n<p>amount of verbosity</p>\n</blockquote>\n<pre><code>     0 = none \n\n     1 = some \n\n     2 = debug\n</code></pre>\n<ul>\n<li><strong>random</strong> (default - <em>False</em>)</li>\n</ul>\n<blockquote>\n<p>should the data be randomized during the cross validation</p>\n</blockquote>\n<ul>\n<li><strong>foldtype</strong> (default \"Kfold\" <em>[str]</em>)</li>\n</ul>\n<blockquote>\n<p>type of folds to use - accepts \"KFold\", \"Stratified\"</p>\n</blockquote>\n<h2>HyperSearch methods</h2>\n<ul>\n<li><strong>HyperSearch.search()</strong> (None)</li>\n</ul>\n<blockquote>\n<p>Used to search the parameter grid using hyperopt. No parameters need to be passed to the function. All parameters are set during initialization.</p>\n</blockquote>\n<h1>Testing</h1>\n<p>With 100 tests of 150 search iterations for both RandomSearch and Skperopt Searches.</p>\n<p>Skperopt (hyperopt) performs better than a RandomSearch, producing higher average f1 score with a smaller standard deviation.</p>\n<p><img alt=\"alt chart\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d85ef4e1f1803987dbc51f851b8863ccc363da8/2e2f63686172742e706e67\"></p>\n<h3>Skperopt Search Results</h3>\n<p>f1 score over 100 test runs:</p>\n<blockquote>\n<p>Mean <strong>0.9340930</strong></p>\n</blockquote>\n<blockquote>\n<p>Standard deviation <strong>0.0062275</strong></p>\n</blockquote>\n<h3>Random Search Results</h3>\n<p>f1 score over 100 test runs</p>\n<blockquote>\n<p>Mean <strong>0.927461652</strong></p>\n</blockquote>\n<blockquote>\n<p>Standard deviation <strong>0.0063314</strong></p>\n</blockquote>\n<hr>\n<h2>Updates</h2>\n<h3>V0.0.73</h3>\n<ul>\n<li>Added cv_times attr - runs the cross validation n times (ie cv (5x5) ) each iteration on a new randomly sampled data set\nthis should reduce overfitting</li>\n</ul>\n<h3>V0.0.7</h3>\n<ul>\n<li>\n<p>Added <strong>FIXED</strong> RMSE eval metric</p>\n</li>\n<li>\n<p>Added MSE eval metric</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6592553, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "988014a9a81882579467bdcb886e2a45", "sha256": "7842e9c7d455875761ed3c9fc3c71c3e3ded7af7a752c6b13664d8bfcf062456"}, "downloads": -1, "filename": "Skperopt-0.0.1-py3.7.egg", "has_sig": false, "md5_digest": "988014a9a81882579467bdcb886e2a45", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 10271, "upload_time": "2020-01-20T05:01:25", "upload_time_iso_8601": "2020-01-20T05:01:25.218823Z", "url": "https://files.pythonhosted.org/packages/c8/8c/a0263d3164696fe35c0024bf7f4460f3ab130f51c11d723ccff3ecbe970d/Skperopt-0.0.1-py3.7.egg", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "745b06e28f50360ba214d844ae557f95", "sha256": "8adf932b5cb69aca3b34fd8c1af1d3db4c129ce8fabdaeac47489af963c5b01b"}, "downloads": -1, "filename": "Skperopt-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "745b06e28f50360ba214d844ae557f95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6088, "upload_time": "2020-01-20T05:11:23", "upload_time_iso_8601": "2020-01-20T05:11:23.170885Z", "url": "https://files.pythonhosted.org/packages/4b/b7/0bcf5762b4f56cfa63a6c1e46c8e8c72ef3da7a113725ab2d634b2cf0dc6/Skperopt-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "b6447dc1c725dee54fdee0a545a7b78a", "sha256": "dfd46179acf5764d382d8df38d7e7a810a8778756c4fd376ded34983d0119040"}, "downloads": -1, "filename": "Skperopt-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b6447dc1c725dee54fdee0a545a7b78a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6120, "upload_time": "2020-01-20T10:34:55", "upload_time_iso_8601": "2020-01-20T10:34:55.501994Z", "url": "https://files.pythonhosted.org/packages/46/4f/21c21b6e9bebf836cef8d7ca53b60e437e2c68bbd91e3c50f5150f683154/Skperopt-0.0.3-py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "d10255ec307372e621c0a8549501ef8a", "sha256": "9bdded47767f6d12b6fd44cc90c76266060f3e8307ce6b055231ecdba20aaf68"}, "downloads": -1, "filename": "Skperopt-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d10255ec307372e621c0a8549501ef8a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6127, "upload_time": "2020-01-20T19:07:21", "upload_time_iso_8601": "2020-01-20T19:07:21.736732Z", "url": "https://files.pythonhosted.org/packages/e9/2f/dd91884532eed20c69c3dbd8b9348586537d4237da59efc9d21f393b15eb/Skperopt-0.0.4-py3-none-any.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "5c8474f61019bf3f041e700ccb6e57bf", "sha256": "07f05e8d55dc2cccd09ec6e1152c8dbef19fcc64b3aa7a9411a8dbb32cca2d8b"}, "downloads": -1, "filename": "Skperopt-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "5c8474f61019bf3f041e700ccb6e57bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6179, "upload_time": "2020-01-23T04:45:11", "upload_time_iso_8601": "2020-01-23T04:45:11.326230Z", "url": "https://files.pythonhosted.org/packages/3a/16/6e5b69374e938f983f4ee54ea39d7523c5e15b08db5167e5080709e2cd08/Skperopt-0.0.5-py3-none-any.whl", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "a37815fd3c77ab74a6497afa0e6fe07d", "sha256": "90b68686a00aa8e39d0fcd611256a533ca73fbdc8e4ef3eaaf44cdbf98ed9c24"}, "downloads": -1, "filename": "Skperopt-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a37815fd3c77ab74a6497afa0e6fe07d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6171, "upload_time": "2020-01-25T21:54:44", "upload_time_iso_8601": "2020-01-25T21:54:44.820378Z", "url": "https://files.pythonhosted.org/packages/6a/c4/0492d6651f4cb7f8fc7300ddcf48fef9ecd9aac019497d7e76f953b8acb6/Skperopt-0.0.6-py3-none-any.whl", "yanked": false}], "0.0.65": [{"comment_text": "", "digests": {"md5": "8b55fb12269aa9786db595cb25fde763", "sha256": "0b0150730569c380567faf23145060a1eb964e4d583ca589dd86c307442bf27f"}, "downloads": -1, "filename": "Skperopt-0.0.65-py3-none-any.whl", "has_sig": false, "md5_digest": "8b55fb12269aa9786db595cb25fde763", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6164, "upload_time": "2020-01-25T22:01:37", "upload_time_iso_8601": "2020-01-25T22:01:37.322805Z", "url": "https://files.pythonhosted.org/packages/94/96/02661f43b1b89a405efa6c3734ac1a249c3dab40db5a37ca2fc86bb5a8df/Skperopt-0.0.65-py3-none-any.whl", "yanked": false}], "0.0.66": [{"comment_text": "", "digests": {"md5": "7f8e4e15d065434342ec1014218e5b09", "sha256": "e49fce0c08b9c637bb854b4017f864c3dfbff9a62567a35357062d53cd10f5fd"}, "downloads": -1, "filename": "Skperopt-0.0.66-py3-none-any.whl", "has_sig": false, "md5_digest": "7f8e4e15d065434342ec1014218e5b09", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5258, "upload_time": "2020-01-26T05:25:47", "upload_time_iso_8601": "2020-01-26T05:25:47.235961Z", "url": "https://files.pythonhosted.org/packages/93/aa/2dd5c95242f139b88ff9197db45419a86b5b334101f4084120adca3e4d73/Skperopt-0.0.66-py3-none-any.whl", "yanked": false}], "0.0.67": [{"comment_text": "", "digests": {"md5": "dfee34882e031694bc164213718ef6a8", "sha256": "65e40e8a0da113f15536e21eef8ea25f9f8addc84848f7eb97bdc66e9055e4b0"}, "downloads": -1, "filename": "Skperopt-0.0.67-py3-none-any.whl", "has_sig": false, "md5_digest": "dfee34882e031694bc164213718ef6a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5277, "upload_time": "2020-01-26T05:40:56", "upload_time_iso_8601": "2020-01-26T05:40:56.374907Z", "url": "https://files.pythonhosted.org/packages/d4/a8/8661a08f652c29fe4695df82863b2b69c2b12095b078bf664826b1000542/Skperopt-0.0.67-py3-none-any.whl", "yanked": false}], "0.0.68": [{"comment_text": "", "digests": {"md5": "b33ce62d33d5fdf11c20ed5825ab2d3f", "sha256": "ca4aee465928efa1b42c99034aecbb28b39144aa6e3c76916e6f5ef86e7512b4"}, "downloads": -1, "filename": "Skperopt-0.0.68-py3-none-any.whl", "has_sig": false, "md5_digest": "b33ce62d33d5fdf11c20ed5825ab2d3f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5254, "upload_time": "2020-01-26T05:48:16", "upload_time_iso_8601": "2020-01-26T05:48:16.560359Z", "url": "https://files.pythonhosted.org/packages/35/47/45f8b29ac865d6e200a4a613c321a04d642ea6d246f3e1332285f949ce15/Skperopt-0.0.68-py3-none-any.whl", "yanked": false}], "0.0.69": [{"comment_text": "", "digests": {"md5": "918a992e6749e254aeac7251d670ca22", "sha256": "7e8c26b5cfacc6cb002b2fed3d60481d48f970c29d36f5edefacd2236fb43e46"}, "downloads": -1, "filename": "Skperopt-0.0.69-py3-none-any.whl", "has_sig": false, "md5_digest": "918a992e6749e254aeac7251d670ca22", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5264, "upload_time": "2020-01-26T05:55:37", "upload_time_iso_8601": "2020-01-26T05:55:37.290395Z", "url": "https://files.pythonhosted.org/packages/3b/f6/bdd3f764181d0fc6f5de37a6469b083bd603ba53e20ad6053ef3f768dd92/Skperopt-0.0.69-py3-none-any.whl", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "f08518914fd874c32a53452e046c1761", "sha256": "9f5e826cfbb8ea507725349ccc2e6ae9d29ac731a9b314090125cf50853698ab"}, "downloads": -1, "filename": "Skperopt-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "f08518914fd874c32a53452e046c1761", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5249, "upload_time": "2020-01-27T16:18:30", "upload_time_iso_8601": "2020-01-27T16:18:30.411045Z", "url": "https://files.pythonhosted.org/packages/7b/2a/67aa6fc9311107a5c721b615c8e3fc7f38279aabf4db303035e6cee0a046/Skperopt-0.0.7-py3-none-any.whl", "yanked": false}], "0.0.71": [{"comment_text": "", "digests": {"md5": "17368d2cc6328def490538f5cb7ce231", "sha256": "b4cde5ade02248b5e8036fc176852125060f5687629828faa267240e71bd2014"}, "downloads": -1, "filename": "Skperopt-0.0.71-py3-none-any.whl", "has_sig": false, "md5_digest": "17368d2cc6328def490538f5cb7ce231", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5258, "upload_time": "2020-01-28T12:05:27", "upload_time_iso_8601": "2020-01-28T12:05:27.329503Z", "url": "https://files.pythonhosted.org/packages/90/4f/6d91dd70b5250f7c960c367e6e872f42f2f462663df84cfc668893ea8692/Skperopt-0.0.71-py3-none-any.whl", "yanked": false}], "0.0.72": [{"comment_text": "", "digests": {"md5": "8f2415965455ca495a75f2e6ce409c06", "sha256": "74258fa757a722d58985fea8176bd9cde5fb25b206be187d4de0e62006d871df"}, "downloads": -1, "filename": "Skperopt-0.0.72-py3-none-any.whl", "has_sig": false, "md5_digest": "8f2415965455ca495a75f2e6ce409c06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6986, "upload_time": "2020-02-08T04:51:34", "upload_time_iso_8601": "2020-02-08T04:51:34.138031Z", "url": "https://files.pythonhosted.org/packages/bf/0a/d40fde3deb58d99f8683b0e057635d8e7487dde97d9baeb3a57544bb5764/Skperopt-0.0.72-py3-none-any.whl", "yanked": false}], "0.0.73": [{"comment_text": "", "digests": {"md5": "d21499f9f3fd5de0b987bd2dbc0677c4", "sha256": "58fff3ae802f37d10b95477cb1553d8b770a1849f54f7dcb61c8487d13600b70"}, "downloads": -1, "filename": "Skperopt-0.0.73-py3-none-any.whl", "has_sig": false, "md5_digest": "d21499f9f3fd5de0b987bd2dbc0677c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6993, "upload_time": "2020-02-08T05:00:05", "upload_time_iso_8601": "2020-02-08T05:00:05.991521Z", "url": "https://files.pythonhosted.org/packages/16/97/720632d592d4d412bcc77828ad729969c5330db15f3322b8cadb843c37bc/Skperopt-0.0.73-py3-none-any.whl", "yanked": false}], "0.0.74": [{"comment_text": "", "digests": {"md5": "4d263a8520c7156b28774c824156bf1e", "sha256": "683f8e255bafa16baf79bacaf3508352abea20bb339f18074a5984f203d439c8"}, "downloads": -1, "filename": "Skperopt-0.0.74-py3-none-any.whl", "has_sig": false, "md5_digest": "4d263a8520c7156b28774c824156bf1e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7088, "upload_time": "2020-02-08T05:23:05", "upload_time_iso_8601": "2020-02-08T05:23:05.100459Z", "url": "https://files.pythonhosted.org/packages/37/05/0592301c94bf44c116c6a75bb1db949b31c40f36f4f8eba1c58ba4cb2a7b/Skperopt-0.0.74-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4d263a8520c7156b28774c824156bf1e", "sha256": "683f8e255bafa16baf79bacaf3508352abea20bb339f18074a5984f203d439c8"}, "downloads": -1, "filename": "Skperopt-0.0.74-py3-none-any.whl", "has_sig": false, "md5_digest": "4d263a8520c7156b28774c824156bf1e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7088, "upload_time": "2020-02-08T05:23:05", "upload_time_iso_8601": "2020-02-08T05:23:05.100459Z", "url": "https://files.pythonhosted.org/packages/37/05/0592301c94bf44c116c6a75bb1db949b31c40f36f4f8eba1c58ba4cb2a7b/Skperopt-0.0.74-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:08:52 2020"}