{"info": {"author": "Boris Tomic", "author_email": "boris@kodmasin.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Information Technology", "License :: OSI Approved :: Apache Software License", "Natural Language :: Croatian", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Office/Business :: Financial :: Accounting", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "fiskpy\n------\n\nEN: *A simple fiscalization library for fiscalizing the receipts to the Croatian tax service.*\n\nHR: *Biblioteka za fiskalizaciju ra\u010duna Poreznoj upravi Republike Hrvatske.*\n\n**Note1:** This library is not Python 3 compatible.\n\nINSTALLATION\n------------\n\nTo install this package from PyPI, use the following command:\n\n.. code:: bash\n\n    $ pip install fisk\n\nREQUIREMENTS\n------------\n\n1. signxml - pip install signxml (version 2 supported from fiskpy\n   v0.8.1)\n2. pyCrypto library - https://www.dlitz.net/software/pycrypto/\n\nUSAGE\n-----\n\nEcho Request\n~~~~~~~~~~~~\n\n.. code:: python\n\n    import fisk\n    import lxml.etree as et\n\n    #As we did not set environment with FiskInit default environment is DEMO. This\n    #works just with EchoRequest as it does not require key (with password) and certificate.\n\n    #test echo\n    echo = fisk.EchoRequest(\"Proba echo poruke\")\n\n    #send request and print server reply\n    echo_reply = echo.execute()\n    if(echo_reply != False):\n        print echo_reply\n    else:\n        errors = echo.get_last_error()\n        print \"EchoRequest errors:\"\n        for error in errors:\n            print error\n\nPoslovniProstor Request\n~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    import fisk\n    import lxml.etree as et\n    from datetime import date, timedelta\n\n    #fiskpy initialization !!! must be used for PoslovniProstorZahtjev\n    fisk.FiskInit.init('/path/to/your/key.pem', \"kaypassword\", '/path/to/your/cert.pem')\n    #For production environment\n    #fisk.FiskInit.init('/path/to/your/key.pem', \"kaypassword\", '/path/to/your/cert.pem', Ture)\n    #create addres\n    adresa = fisk.Adresa(data = {\"Ulica\": \"Proba\", \"KucniBroj\": \"1\", \"BrojPoste\": \"54321\"})\n    #create poslovni prostor\n    pp = fisk.PoslovniProstor(data = {\"Oib\": \"12345678901\",\n                                 \"OznPoslProstora\": \"POS1\",\n                                 \"AdresniPodatak\": fisk.AdresniPodatak(adresa),\n                                 \"RadnoVrijeme\": \"PON-PET 9:00-17:00\",\n                                 \"DatumPocetkaPrimjene\": (date.today() + timedelta(days = 1)).strftime('%d.%m.%Y')})\n\n    #you can also access (set and get) attributes of fisk element classes as\n    pp.SpecNamj = \"12345678901\"\n    print pp.OznPoslProstora\n\n    #poslovni prostor request\n    ppz = fisk.PoslovniProstorZahtjev(pp)\n\n    ppz_reply = ppz.execute()\n    if(ppz_reply == True):\n        print \"PoslovniProstorZahtjev seccessfuly sent!\"\n    else:\n        errors = ppz.get_last_error()\n        print \"PoslovniProstorZahtjev reply errors:\"\n        for error in errors:\n            print error\n\n    #fiskpy deinitialization - maybe not needed but good for correct garbage cleaning\n    fisk.FiskInit.deinit()\n\nRacun Request\n-------------\n\n.. code:: python\n\n    import fisk\n    import lxml.etree as et\n    from datetime import date, timedelta\n\n    #fiskpy initialization !!! must be used for RacunZahtjev\n    fisk.FiskInit.init('/path/to/your/key.pem', \"kaypassword\", '/path/to/your/cert.pem')\n    #For production environment\n    #fisk.FiskInit.init('/path/to/your/key.pem', \"kaypassword\", '/path/to/your/cert.pem', Ture)\n\n    racun = fisk.Racun(data = {\"Oib\": \"12345678901\",\n                  \"USustPdv\": \"true\",\n                  \"DatVrijeme\": \"26.10.2013T23:50:00\",\n                  \"BrRac\": fisk.BrRac({\"BrOznRac\": \"2\", \"OznPosPr\":\"POS2\", \"OznNapUr\":\"1\"}),\n                  \"Pdv\": [fisk.Porez({\"Stopa\":\"25.00\", \"Osnovica\":\"100.00\", \"Iznos\":\"25.00\"}), fisk.Porez({\"Stopa\":\"10.00\", \"Osnovica\":\"100.00\", \"Iznos\":\"10.00\"})],\n                  \"Pnp\": [fisk.Porez({\"Stopa\":\"25.00\", \"Osnovica\":\"100.00\", \"Iznos\":\"25.00\"}), fisk.Porez({\"Stopa\":\"10.00\", \"Osnovica\":\"100.00\", \"Iznos\":\"10.00\"})],\n                  \"OstaliPor\": [fisk.OstPorez({\"Naziv\": \"Neki porez\",  \"Stopa\":\"3.00\", \"Osnovica\":\"100.00\", \"Iznos\":\"3.00\"})],\n                  \"IznosOslobPdv\": \"100.00\",\n                  \"IznosMarza\": \"100.00\",\n                  \"IznosNePodlOpor\": \"50.00\",\n                  \"Naknade\": [fisk.Naknada({\"NazivN\" : \"test\", \"IznosN\": \"10.00\"})],\n                  \"IznosUkupno\": \"500.00\",\n                  \"NacinPlac\": \"G\",\n                  \"OibOper\": \"12345678901\",\n                  \"NakDost\": \"false\",\n                  \"ParagonBrRac\": \"123-234-12\",\n                  \"SpecNamj\": \"Tekst specijalne namjne\"})\n\n    #IWe did not supplied required element in constructor so now we set it\n    racun.OznSlijed = \"P\"\n\n    #Zastitni kod is calculated so print it\n    print \"ZKI: \" + racun.ZastKod\n\n    #change one variable and check new zastitni kod\n    racun.IznosUkupno = \"1233.00\"\n    print \"ZKI: \" + racun.ZastKod\n\n    #create Request and send it to server (DEMO) and print reply\n    racunZahtjev = fisk.RacunZahtjev(racun)\n    racun_reply = racunZahtjev.execute()\n    if(racun_reply != False):\n        print \"JIR is: \" + racun_reply\n    else:\n        errors = racunZahtjev.get_last_error()\n        print \"RacunZahtjev reply errors:\"\n        for error in errors:\n            print error\n\n    #fiskpy deinitialization - maybe not needed but good for correct garbage cleaning\n    fisk.FiskInit.deinit()\n\nProvjera Request\n----------------\n\n.. code:: python\n\n    import fisk\n    from lxml import etree as et\n    from datetime import date, timedelta\n\n    #fiskpy initialization\n    fisk.FiskInit.init('/path/to/your/key.pem', \"kaypassword\", '/path/to/your/cert.pem')\n\n    racun = fisk.Racun(data = {\"Oib\": \"12345678901\",\n                \"USustPdv\": \"true\",\n                \"DatVrijeme\": \"26.10.2013T23:50:00\",\n                \"BrRac\": fisk.BrRac({\"BrOznRac\": \"2\", \"OznPosPr\":\"POS2\", \"OznNapUr\":\"1\"}),\n                \"Pdv\": [fisk.Porez({\"Stopa\":\"25.00\", \"Osnovica\":\"100.00\", \"Iznos\":\"25.00\"}), fisk.Porez({\"Stopa\":\"10.00\", \"Osnovica\":\"100.00\", \"Iznos\":\"10.00\"})],\n                \"Pnp\": [fisk.Porez({\"Stopa\":\"25.00\", \"Osnovica\":\"100.00\", \"Iznos\":\"25.00\"}), fisk.Porez({\"Stopa\":\"10.00\", \"Osnovica\":\"100.00\", \"Iznos\":\"10.00\"})],\n                \"OstaliPor\": [fisk.OstPorez({\"Naziv\": \"Neki porez\",  \"Stopa\":\"3.00\", \"Osnovica\":\"100.00\", \"Iznos\":\"3.00\"})],\n                \"IznosOslobPdv\": \"100.00\",\n                \"IznosMarza\": \"100.00\",\n                \"IznosNePodlOpor\": \"50.00\",\n                \"Naknade\": [fisk.Naknada({\"NazivN\" : \"test\", \"IznosN\": \"10.00\"})],\n                \"IznosUkupno\": \"500.00\",\n                \"NacinPlac\": \"G\",\n                \"OibOper\": \"12345678901\",\n                \"NakDost\": \"false\",\n                \"ParagonBrRac\": \"123-234-12\",\n                \"SpecNamj\": \"Tekst specijalne namjne\"})\n\n    #We did not supplied required element in constructor so now we set it\n    racun.OznSlijed = \"P\"\n\n    #Zastitni kod is calculated so print it\n    print \"ZKI: \" + racun.ZastKod\n\n    #change one variable and check new zastitni kod\n    racun.IznosUkupno = \"1233.00\"\n    print \"ZKI :\" + racun.ZastKod\n\n    #create Request and send it to server (DEMO) and print reply\n    provjeraZahtjev = fisk.ProvjeraZahtjev(racun)\n    provjera_reply = provjeraZahtjev.execute()\n\n    if(provjera_reply == False):\n      print \"Request and response data is not the same\"\n    elif(isinstance(provjera_reply, et._Element)):\n      for greska in provjera_reply:\n        print u\"Code: {} -> Message: {}\".format(greska[0].text, greska[1].text)\n    else:\n      print(\"Unhandled error\")\n\nKEY GENERATION\n--------------\n\nFiscalization keys and certificates are delivered in .p12 or .pfx\nformat. To be used with this library you should convert them to .pem\nformat. This can be done with openssl.\n\n.. code:: bash\n\n    $ openssl pkcs12 -in certificate.pfx -out certificate.pem -nodes\n\nNow certificate.pem holds both key and certificate. So you should\nmanually open this file and copy each to separate file including\nBEGIN/END statements.\n\nPrivate key should be encrypted so if it is not you should run:\n\n.. code:: bash\n\n    $ openssl rsa -in key.pem -des3 -out passkey.pem\n\nCA Certificates\n~~~~~~~~~~~~~~~\n\nVersion >= 0.7.4\n^^^^^^^^^^^^^^^^\n\nCA certificate are included in release. You do should not supply them to\nFiskInit class.\n\nVersions < 0.7.4\n^^^^^^^^^^^^^^^^\n\nYou will also need CA certificate for DEMO and PRODUCTION environment.\nThis certificate is needed for verification process.\n\nDEMO CA Certificate\n'''''''''''''''''''\n\nYou can download this certificate\nhttps://demo-pki.fina.hr/crl/democacert.cer\n\nDEMO CA 2014 Certificate (2 of them)\n''''''''''''''''''''''''''''''''''''\n\nYou can download this certificates\nhttp://www.fina.hr/Default.aspx?sec=1730\n\nBut in time of writing this you have to include old DEMO CA certificate\nin list too, to work.\n\nPRODUCTION CA Certificate\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nYou can download them from http://www.fina.hr/Default.aspx?art=10758\n\nTroubleshooting\n^^^^^^^^^^^^^^^\n\n**500: Internal Server Error** - this was bug before version 0.7.5\n\n**ValueError: RSA key format is not supported** - this error could\nhappen if your private key is not encrypted. Please check if your\nprivate key is encrypted. If it is not please encrypt it (''openssl rsa\n-in key.pem -des3 -out passkey.pem'')", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kodmasin/fiskpy", "keywords": "fiscalization tax", "license": "Apache Software License", "maintainer": null, "maintainer_email": null, "name": "fisk", "package_url": "https://pypi.org/project/fisk/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fisk/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/kodmasin/fiskpy"}, "release_url": "https://pypi.org/project/fisk/0.8.2/", "requires_dist": null, "requires_python": null, "summary": "library for fiscalization (Hrvatska) as defined in wsdl-1.1.2 and wsdl-1.2", "version": "0.8.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"fiskpy\">\n<h2>fiskpy</h2>\n<p>EN: <em>A simple fiscalization library for fiscalizing the receipts to the Croatian tax service.</em></p>\n<p>HR: <em>Biblioteka za fiskalizaciju ra\u010duna Poreznoj upravi Republike Hrvatske.</em></p>\n<p><strong>Note1:</strong> This library is not Python 3 compatible.</p>\n</div>\n<div id=\"installation\">\n<h2>INSTALLATION</h2>\n<p>To install this package from PyPI, use the following command:</p>\n<pre>$ pip install fisk\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>REQUIREMENTS</h2>\n<ol>\n<li>signxml - pip install signxml (version 2 supported from fiskpy\nv0.8.1)</li>\n<li>pyCrypto library - <a href=\"https://www.dlitz.net/software/pycrypto/\" rel=\"nofollow\">https://www.dlitz.net/software/pycrypto/</a></li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>USAGE</h2>\n<div id=\"echo-request\">\n<h3>Echo Request</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fisk</span>\n<span class=\"kn\">import</span> <span class=\"nn\">lxml.etree</span> <span class=\"k\">as</span> <span class=\"nn\">et</span>\n\n<span class=\"c1\">#As we did not set environment with FiskInit default environment is DEMO. This</span>\n<span class=\"c1\">#works just with EchoRequest as it does not require key (with password) and certificate.</span>\n\n<span class=\"c1\">#test echo</span>\n<span class=\"n\">echo</span> <span class=\"o\">=</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">EchoRequest</span><span class=\"p\">(</span><span class=\"s2\">\"Proba echo poruke\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#send request and print server reply</span>\n<span class=\"n\">echo_reply</span> <span class=\"o\">=</span> <span class=\"n\">echo</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">echo_reply</span> <span class=\"o\">!=</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"n\">echo_reply</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"n\">echo</span><span class=\"o\">.</span><span class=\"n\">get_last_error</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"EchoRequest errors:\"</span>\n    <span class=\"k\">for</span> <span class=\"n\">error</span> <span class=\"ow\">in</span> <span class=\"n\">errors</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span> <span class=\"n\">error</span>\n</pre>\n</div>\n<div id=\"poslovniprostor-request\">\n<h3>PoslovniProstor Request</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fisk</span>\n<span class=\"kn\">import</span> <span class=\"nn\">lxml.etree</span> <span class=\"k\">as</span> <span class=\"nn\">et</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span><span class=\"p\">,</span> <span class=\"n\">timedelta</span>\n\n<span class=\"c1\">#fiskpy initialization !!! must be used for PoslovniProstorZahtjev</span>\n<span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">FiskInit</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/your/key.pem'</span><span class=\"p\">,</span> <span class=\"s2\">\"kaypassword\"</span><span class=\"p\">,</span> <span class=\"s1\">'/path/to/your/cert.pem'</span><span class=\"p\">)</span>\n<span class=\"c1\">#For production environment</span>\n<span class=\"c1\">#fisk.FiskInit.init('/path/to/your/key.pem', \"kaypassword\", '/path/to/your/cert.pem', Ture)</span>\n<span class=\"c1\">#create addres</span>\n<span class=\"n\">adresa</span> <span class=\"o\">=</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">Adresa</span><span class=\"p\">(</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"Ulica\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Proba\"</span><span class=\"p\">,</span> <span class=\"s2\">\"KucniBroj\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"BrojPoste\"</span><span class=\"p\">:</span> <span class=\"s2\">\"54321\"</span><span class=\"p\">})</span>\n<span class=\"c1\">#create poslovni prostor</span>\n<span class=\"n\">pp</span> <span class=\"o\">=</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">PoslovniProstor</span><span class=\"p\">(</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"Oib\"</span><span class=\"p\">:</span> <span class=\"s2\">\"12345678901\"</span><span class=\"p\">,</span>\n                             <span class=\"s2\">\"OznPoslProstora\"</span><span class=\"p\">:</span> <span class=\"s2\">\"POS1\"</span><span class=\"p\">,</span>\n                             <span class=\"s2\">\"AdresniPodatak\"</span><span class=\"p\">:</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">AdresniPodatak</span><span class=\"p\">(</span><span class=\"n\">adresa</span><span class=\"p\">),</span>\n                             <span class=\"s2\">\"RadnoVrijeme\"</span><span class=\"p\">:</span> <span class=\"s2\">\"PON-PET 9:00-17:00\"</span><span class=\"p\">,</span>\n                             <span class=\"s2\">\"DatumPocetkaPrimjene\"</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">date</span><span class=\"o\">.</span><span class=\"n\">today</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">%d</span><span class=\"s1\">.%m.%Y'</span><span class=\"p\">)})</span>\n\n<span class=\"c1\">#you can also access (set and get) attributes of fisk element classes as</span>\n<span class=\"n\">pp</span><span class=\"o\">.</span><span class=\"n\">SpecNamj</span> <span class=\"o\">=</span> <span class=\"s2\">\"12345678901\"</span>\n<span class=\"nb\">print</span> <span class=\"n\">pp</span><span class=\"o\">.</span><span class=\"n\">OznPoslProstora</span>\n\n<span class=\"c1\">#poslovni prostor request</span>\n<span class=\"n\">ppz</span> <span class=\"o\">=</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">PoslovniProstorZahtjev</span><span class=\"p\">(</span><span class=\"n\">pp</span><span class=\"p\">)</span>\n\n<span class=\"n\">ppz_reply</span> <span class=\"o\">=</span> <span class=\"n\">ppz</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">ppz_reply</span> <span class=\"o\">==</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"PoslovniProstorZahtjev seccessfuly sent!\"</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"n\">ppz</span><span class=\"o\">.</span><span class=\"n\">get_last_error</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"PoslovniProstorZahtjev reply errors:\"</span>\n    <span class=\"k\">for</span> <span class=\"n\">error</span> <span class=\"ow\">in</span> <span class=\"n\">errors</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span> <span class=\"n\">error</span>\n\n<span class=\"c1\">#fiskpy deinitialization - maybe not needed but good for correct garbage cleaning</span>\n<span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">FiskInit</span><span class=\"o\">.</span><span class=\"n\">deinit</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"racun-request\">\n<h2>Racun Request</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fisk</span>\n<span class=\"kn\">import</span> <span class=\"nn\">lxml.etree</span> <span class=\"k\">as</span> <span class=\"nn\">et</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span><span class=\"p\">,</span> <span class=\"n\">timedelta</span>\n\n<span class=\"c1\">#fiskpy initialization !!! must be used for RacunZahtjev</span>\n<span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">FiskInit</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/your/key.pem'</span><span class=\"p\">,</span> <span class=\"s2\">\"kaypassword\"</span><span class=\"p\">,</span> <span class=\"s1\">'/path/to/your/cert.pem'</span><span class=\"p\">)</span>\n<span class=\"c1\">#For production environment</span>\n<span class=\"c1\">#fisk.FiskInit.init('/path/to/your/key.pem', \"kaypassword\", '/path/to/your/cert.pem', Ture)</span>\n\n<span class=\"n\">racun</span> <span class=\"o\">=</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">Racun</span><span class=\"p\">(</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"Oib\"</span><span class=\"p\">:</span> <span class=\"s2\">\"12345678901\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"USustPdv\"</span><span class=\"p\">:</span> <span class=\"s2\">\"true\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"DatVrijeme\"</span><span class=\"p\">:</span> <span class=\"s2\">\"26.10.2013T23:50:00\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"BrRac\"</span><span class=\"p\">:</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">BrRac</span><span class=\"p\">({</span><span class=\"s2\">\"BrOznRac\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"OznPosPr\"</span><span class=\"p\">:</span><span class=\"s2\">\"POS2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"OznNapUr\"</span><span class=\"p\">:</span><span class=\"s2\">\"1\"</span><span class=\"p\">}),</span>\n              <span class=\"s2\">\"Pdv\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">Porez</span><span class=\"p\">({</span><span class=\"s2\">\"Stopa\"</span><span class=\"p\">:</span><span class=\"s2\">\"25.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Osnovica\"</span><span class=\"p\">:</span><span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Iznos\"</span><span class=\"p\">:</span><span class=\"s2\">\"25.00\"</span><span class=\"p\">}),</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">Porez</span><span class=\"p\">({</span><span class=\"s2\">\"Stopa\"</span><span class=\"p\">:</span><span class=\"s2\">\"10.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Osnovica\"</span><span class=\"p\">:</span><span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Iznos\"</span><span class=\"p\">:</span><span class=\"s2\">\"10.00\"</span><span class=\"p\">})],</span>\n              <span class=\"s2\">\"Pnp\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">Porez</span><span class=\"p\">({</span><span class=\"s2\">\"Stopa\"</span><span class=\"p\">:</span><span class=\"s2\">\"25.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Osnovica\"</span><span class=\"p\">:</span><span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Iznos\"</span><span class=\"p\">:</span><span class=\"s2\">\"25.00\"</span><span class=\"p\">}),</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">Porez</span><span class=\"p\">({</span><span class=\"s2\">\"Stopa\"</span><span class=\"p\">:</span><span class=\"s2\">\"10.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Osnovica\"</span><span class=\"p\">:</span><span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Iznos\"</span><span class=\"p\">:</span><span class=\"s2\">\"10.00\"</span><span class=\"p\">})],</span>\n              <span class=\"s2\">\"OstaliPor\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">OstPorez</span><span class=\"p\">({</span><span class=\"s2\">\"Naziv\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Neki porez\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"Stopa\"</span><span class=\"p\">:</span><span class=\"s2\">\"3.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Osnovica\"</span><span class=\"p\">:</span><span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Iznos\"</span><span class=\"p\">:</span><span class=\"s2\">\"3.00\"</span><span class=\"p\">})],</span>\n              <span class=\"s2\">\"IznosOslobPdv\"</span><span class=\"p\">:</span> <span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"IznosMarza\"</span><span class=\"p\">:</span> <span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"IznosNePodlOpor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"50.00\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"Naknade\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">Naknada</span><span class=\"p\">({</span><span class=\"s2\">\"NazivN\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"test\"</span><span class=\"p\">,</span> <span class=\"s2\">\"IznosN\"</span><span class=\"p\">:</span> <span class=\"s2\">\"10.00\"</span><span class=\"p\">})],</span>\n              <span class=\"s2\">\"IznosUkupno\"</span><span class=\"p\">:</span> <span class=\"s2\">\"500.00\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"NacinPlac\"</span><span class=\"p\">:</span> <span class=\"s2\">\"G\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"OibOper\"</span><span class=\"p\">:</span> <span class=\"s2\">\"12345678901\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"NakDost\"</span><span class=\"p\">:</span> <span class=\"s2\">\"false\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"ParagonBrRac\"</span><span class=\"p\">:</span> <span class=\"s2\">\"123-234-12\"</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"SpecNamj\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Tekst specijalne namjne\"</span><span class=\"p\">})</span>\n\n<span class=\"c1\">#IWe did not supplied required element in constructor so now we set it</span>\n<span class=\"n\">racun</span><span class=\"o\">.</span><span class=\"n\">OznSlijed</span> <span class=\"o\">=</span> <span class=\"s2\">\"P\"</span>\n\n<span class=\"c1\">#Zastitni kod is calculated so print it</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"ZKI: \"</span> <span class=\"o\">+</span> <span class=\"n\">racun</span><span class=\"o\">.</span><span class=\"n\">ZastKod</span>\n\n<span class=\"c1\">#change one variable and check new zastitni kod</span>\n<span class=\"n\">racun</span><span class=\"o\">.</span><span class=\"n\">IznosUkupno</span> <span class=\"o\">=</span> <span class=\"s2\">\"1233.00\"</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"ZKI: \"</span> <span class=\"o\">+</span> <span class=\"n\">racun</span><span class=\"o\">.</span><span class=\"n\">ZastKod</span>\n\n<span class=\"c1\">#create Request and send it to server (DEMO) and print reply</span>\n<span class=\"n\">racunZahtjev</span> <span class=\"o\">=</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">RacunZahtjev</span><span class=\"p\">(</span><span class=\"n\">racun</span><span class=\"p\">)</span>\n<span class=\"n\">racun_reply</span> <span class=\"o\">=</span> <span class=\"n\">racunZahtjev</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">racun_reply</span> <span class=\"o\">!=</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"JIR is: \"</span> <span class=\"o\">+</span> <span class=\"n\">racun_reply</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"n\">racunZahtjev</span><span class=\"o\">.</span><span class=\"n\">get_last_error</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"RacunZahtjev reply errors:\"</span>\n    <span class=\"k\">for</span> <span class=\"n\">error</span> <span class=\"ow\">in</span> <span class=\"n\">errors</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span> <span class=\"n\">error</span>\n\n<span class=\"c1\">#fiskpy deinitialization - maybe not needed but good for correct garbage cleaning</span>\n<span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">FiskInit</span><span class=\"o\">.</span><span class=\"n\">deinit</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"provjera-request\">\n<h2>Provjera Request</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fisk</span>\n<span class=\"kn\">from</span> <span class=\"nn\">lxml</span> <span class=\"kn\">import</span> <span class=\"n\">etree</span> <span class=\"k\">as</span> <span class=\"n\">et</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span><span class=\"p\">,</span> <span class=\"n\">timedelta</span>\n\n<span class=\"c1\">#fiskpy initialization</span>\n<span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">FiskInit</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/your/key.pem'</span><span class=\"p\">,</span> <span class=\"s2\">\"kaypassword\"</span><span class=\"p\">,</span> <span class=\"s1\">'/path/to/your/cert.pem'</span><span class=\"p\">)</span>\n\n<span class=\"n\">racun</span> <span class=\"o\">=</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">Racun</span><span class=\"p\">(</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"Oib\"</span><span class=\"p\">:</span> <span class=\"s2\">\"12345678901\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"USustPdv\"</span><span class=\"p\">:</span> <span class=\"s2\">\"true\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"DatVrijeme\"</span><span class=\"p\">:</span> <span class=\"s2\">\"26.10.2013T23:50:00\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"BrRac\"</span><span class=\"p\">:</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">BrRac</span><span class=\"p\">({</span><span class=\"s2\">\"BrOznRac\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"OznPosPr\"</span><span class=\"p\">:</span><span class=\"s2\">\"POS2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"OznNapUr\"</span><span class=\"p\">:</span><span class=\"s2\">\"1\"</span><span class=\"p\">}),</span>\n            <span class=\"s2\">\"Pdv\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">Porez</span><span class=\"p\">({</span><span class=\"s2\">\"Stopa\"</span><span class=\"p\">:</span><span class=\"s2\">\"25.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Osnovica\"</span><span class=\"p\">:</span><span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Iznos\"</span><span class=\"p\">:</span><span class=\"s2\">\"25.00\"</span><span class=\"p\">}),</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">Porez</span><span class=\"p\">({</span><span class=\"s2\">\"Stopa\"</span><span class=\"p\">:</span><span class=\"s2\">\"10.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Osnovica\"</span><span class=\"p\">:</span><span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Iznos\"</span><span class=\"p\">:</span><span class=\"s2\">\"10.00\"</span><span class=\"p\">})],</span>\n            <span class=\"s2\">\"Pnp\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">Porez</span><span class=\"p\">({</span><span class=\"s2\">\"Stopa\"</span><span class=\"p\">:</span><span class=\"s2\">\"25.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Osnovica\"</span><span class=\"p\">:</span><span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Iznos\"</span><span class=\"p\">:</span><span class=\"s2\">\"25.00\"</span><span class=\"p\">}),</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">Porez</span><span class=\"p\">({</span><span class=\"s2\">\"Stopa\"</span><span class=\"p\">:</span><span class=\"s2\">\"10.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Osnovica\"</span><span class=\"p\">:</span><span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Iznos\"</span><span class=\"p\">:</span><span class=\"s2\">\"10.00\"</span><span class=\"p\">})],</span>\n            <span class=\"s2\">\"OstaliPor\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">OstPorez</span><span class=\"p\">({</span><span class=\"s2\">\"Naziv\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Neki porez\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"Stopa\"</span><span class=\"p\">:</span><span class=\"s2\">\"3.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Osnovica\"</span><span class=\"p\">:</span><span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Iznos\"</span><span class=\"p\">:</span><span class=\"s2\">\"3.00\"</span><span class=\"p\">})],</span>\n            <span class=\"s2\">\"IznosOslobPdv\"</span><span class=\"p\">:</span> <span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"IznosMarza\"</span><span class=\"p\">:</span> <span class=\"s2\">\"100.00\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"IznosNePodlOpor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"50.00\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"Naknade\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">Naknada</span><span class=\"p\">({</span><span class=\"s2\">\"NazivN\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"test\"</span><span class=\"p\">,</span> <span class=\"s2\">\"IznosN\"</span><span class=\"p\">:</span> <span class=\"s2\">\"10.00\"</span><span class=\"p\">})],</span>\n            <span class=\"s2\">\"IznosUkupno\"</span><span class=\"p\">:</span> <span class=\"s2\">\"500.00\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"NacinPlac\"</span><span class=\"p\">:</span> <span class=\"s2\">\"G\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"OibOper\"</span><span class=\"p\">:</span> <span class=\"s2\">\"12345678901\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"NakDost\"</span><span class=\"p\">:</span> <span class=\"s2\">\"false\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ParagonBrRac\"</span><span class=\"p\">:</span> <span class=\"s2\">\"123-234-12\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"SpecNamj\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Tekst specijalne namjne\"</span><span class=\"p\">})</span>\n\n<span class=\"c1\">#We did not supplied required element in constructor so now we set it</span>\n<span class=\"n\">racun</span><span class=\"o\">.</span><span class=\"n\">OznSlijed</span> <span class=\"o\">=</span> <span class=\"s2\">\"P\"</span>\n\n<span class=\"c1\">#Zastitni kod is calculated so print it</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"ZKI: \"</span> <span class=\"o\">+</span> <span class=\"n\">racun</span><span class=\"o\">.</span><span class=\"n\">ZastKod</span>\n\n<span class=\"c1\">#change one variable and check new zastitni kod</span>\n<span class=\"n\">racun</span><span class=\"o\">.</span><span class=\"n\">IznosUkupno</span> <span class=\"o\">=</span> <span class=\"s2\">\"1233.00\"</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"ZKI :\"</span> <span class=\"o\">+</span> <span class=\"n\">racun</span><span class=\"o\">.</span><span class=\"n\">ZastKod</span>\n\n<span class=\"c1\">#create Request and send it to server (DEMO) and print reply</span>\n<span class=\"n\">provjeraZahtjev</span> <span class=\"o\">=</span> <span class=\"n\">fisk</span><span class=\"o\">.</span><span class=\"n\">ProvjeraZahtjev</span><span class=\"p\">(</span><span class=\"n\">racun</span><span class=\"p\">)</span>\n<span class=\"n\">provjera_reply</span> <span class=\"o\">=</span> <span class=\"n\">provjeraZahtjev</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">provjera_reply</span> <span class=\"o\">==</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span> <span class=\"s2\">\"Request and response data is not the same\"</span>\n<span class=\"k\">elif</span><span class=\"p\">(</span><span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">provjera_reply</span><span class=\"p\">,</span> <span class=\"n\">et</span><span class=\"o\">.</span><span class=\"n\">_Element</span><span class=\"p\">)):</span>\n  <span class=\"k\">for</span> <span class=\"n\">greska</span> <span class=\"ow\">in</span> <span class=\"n\">provjera_reply</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"sa\">u</span><span class=\"s2\">\"Code: </span><span class=\"si\">{}</span><span class=\"s2\"> -&gt; Message: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">greska</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">greska</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Unhandled error\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"key-generation\">\n<h2>KEY GENERATION</h2>\n<p>Fiscalization keys and certificates are delivered in .p12 or .pfx\nformat. To be used with this library you should convert them to .pem\nformat. This can be done with openssl.</p>\n<pre>$ openssl pkcs12 -in certificate.pfx -out certificate.pem -nodes\n</pre>\n<p>Now certificate.pem holds both key and certificate. So you should\nmanually open this file and copy each to separate file including\nBEGIN/END statements.</p>\n<p>Private key should be encrypted so if it is not you should run:</p>\n<pre>$ openssl rsa -in key.pem -des3 -out passkey.pem\n</pre>\n<div id=\"ca-certificates\">\n<h3>CA Certificates</h3>\n<div id=\"version-0-7-4\">\n<h4>Version &gt;= 0.7.4</h4>\n<p>CA certificate are included in release. You do should not supply them to\nFiskInit class.</p>\n</div>\n<div id=\"versions-0-7-4\">\n<h4>Versions &lt; 0.7.4</h4>\n<p>You will also need CA certificate for DEMO and PRODUCTION environment.\nThis certificate is needed for verification process.</p>\n<div id=\"demo-ca-certificate\">\n<h5>DEMO CA Certificate</h5>\n<p>You can download this certificate\n<a href=\"https://demo-pki.fina.hr/crl/democacert.cer\" rel=\"nofollow\">https://demo-pki.fina.hr/crl/democacert.cer</a></p>\n</div>\n<div id=\"demo-ca-2014-certificate-2-of-them\">\n<h5>DEMO CA 2014 Certificate (2 of them)</h5>\n<p>You can download this certificates\n<a href=\"http://www.fina.hr/Default.aspx?sec=1730\" rel=\"nofollow\">http://www.fina.hr/Default.aspx?sec=1730</a></p>\n<p>But in time of writing this you have to include old DEMO CA certificate\nin list too, to work.</p>\n</div>\n</div>\n<div id=\"production-ca-certificate\">\n<h4>PRODUCTION CA Certificate</h4>\n<p>You can download them from <a href=\"http://www.fina.hr/Default.aspx?art=10758\" rel=\"nofollow\">http://www.fina.hr/Default.aspx?art=10758</a></p>\n</div>\n<div id=\"troubleshooting\">\n<h4>Troubleshooting</h4>\n<p><strong>500: Internal Server Error</strong> - this was bug before version 0.7.5</p>\n<p><strong>ValueError: RSA key format is not supported</strong> - this error could\nhappen if your private key is not encrypted. Please check if your\nprivate key is encrypted. If it is not please encrypt it (\u2018\u2019openssl rsa\n-in key.pem -des3 -out passkey.pem\u2019\u2019)</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4749216, "releases": {"0.8.2": [{"comment_text": "", "digests": {"md5": "74a4993925bb32cd52c1e28c54c10cd0", "sha256": "414bb87e9c6f7c53c5343cc0f91c4b0fa7bb2443953c67cbc84a713858bd1117"}, "downloads": -1, "filename": "fisk-0.8.2.tar.gz", "has_sig": false, "md5_digest": "74a4993925bb32cd52c1e28c54c10cd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33934, "upload_time": "2017-03-30T07:52:41", "upload_time_iso_8601": "2017-03-30T07:52:41.118823Z", "url": "https://files.pythonhosted.org/packages/46/b0/a77c00a4784eb5147c43d24a32ccf5e887b7753f601ed6047e0698f64ff0/fisk-0.8.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "74a4993925bb32cd52c1e28c54c10cd0", "sha256": "414bb87e9c6f7c53c5343cc0f91c4b0fa7bb2443953c67cbc84a713858bd1117"}, "downloads": -1, "filename": "fisk-0.8.2.tar.gz", "has_sig": false, "md5_digest": "74a4993925bb32cd52c1e28c54c10cd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33934, "upload_time": "2017-03-30T07:52:41", "upload_time_iso_8601": "2017-03-30T07:52:41.118823Z", "url": "https://files.pythonhosted.org/packages/46/b0/a77c00a4784eb5147c43d24a32ccf5e887b7753f601ed6047e0698f64ff0/fisk-0.8.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:08 2020"}