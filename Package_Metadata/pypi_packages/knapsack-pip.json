{"info": {"author": "Ali El Adi", "author_email": "alieladi@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# knapsack-pip: A 0-1 knapsack solver\nThis is a library for solving knapsack problems.\n\nUse this solver for maximization or minimization of 0-1 knapsack problems a Branch and Bound algorithm.\n\nNon negative weights and profits can also be included.\n\n## Installation\nThis library can be installed via pip. Use command: `pip install knapsack-pip`\n\n## Usage\nSo far, there are different knapsack solvers for different algorithms:\n- BBKnapsack: a knapsack solver using branch and bound with a stack. To import: `from knapsack01.BBKnapsack import BBKnapsack`\n- HSKnapsack: a knapsack solver using the Horowitz-Sahni branch and bound algorithm. To import: `from knapsack01.HSKnapsack import HSKnapsack`\n\nThe output includes the maximum or minimum profit and its corresponding solution as a list of the same length as list of items (solution[i] = 1 if ith item is included in the solution and solution[i] = 0 otherwise)\n\n\n### Example of maximization\n```\nfrom knapsack01.BBKnapsack import BBKnapsack\n\ncapacity = 50\nweights = [31, 10, 20, 20, 5, 3, -6]\nprofits = [70, 20, 39, 37, 7, 5, 10]\n\nmy_knapsack1 = BBKnapsack(capacity, profits, weights)\nmax_profit, max_solution = my_knapsack1.maximize()\n# (126, [1, 0, 1, 0, 1, 0, 1])\n```\n### Example of minimization\n```\nfrom knapsack01.BBKnapsack import BBKnapsack\n\ncapacity = 50\nweights = [31, 10, 20, 20, 5, 3, -6]\nprofits = [70, 20, 39, 37, 7, 5, 10]\n\nmy_knapsack2 = BBKnapsack(capacity, profits, weights)\nmin_profit, min_solution = my_knapsack2.minimize()\n# (96, [0, 1, 1, 1, 0, 1, 0])\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Alieladi/knapsack-pip", "keywords": "knapsack backpack", "license": "", "maintainer": "", "maintainer_email": "", "name": "knapsack-pip", "package_url": "https://pypi.org/project/knapsack-pip/", "platform": "", "project_url": "https://pypi.org/project/knapsack-pip/", "project_urls": {"Homepage": "https://github.com/Alieladi/knapsack-pip"}, "release_url": "https://pypi.org/project/knapsack-pip/0.2/", "requires_dist": null, "requires_python": ">=3", "summary": "Knapsack problem solver", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>knapsack-pip: A 0-1 knapsack solver</h1>\n<p>This is a library for solving knapsack problems.</p>\n<p>Use this solver for maximization or minimization of 0-1 knapsack problems a Branch and Bound algorithm.</p>\n<p>Non negative weights and profits can also be included.</p>\n<h2>Installation</h2>\n<p>This library can be installed via pip. Use command: <code>pip install knapsack-pip</code></p>\n<h2>Usage</h2>\n<p>So far, there are different knapsack solvers for different algorithms:</p>\n<ul>\n<li>BBKnapsack: a knapsack solver using branch and bound with a stack. To import: <code>from knapsack01.BBKnapsack import BBKnapsack</code></li>\n<li>HSKnapsack: a knapsack solver using the Horowitz-Sahni branch and bound algorithm. To import: <code>from knapsack01.HSKnapsack import HSKnapsack</code></li>\n</ul>\n<p>The output includes the maximum or minimum profit and its corresponding solution as a list of the same length as list of items (solution[i] = 1 if ith item is included in the solution and solution[i] = 0 otherwise)</p>\n<h3>Example of maximization</h3>\n<pre><code>from knapsack01.BBKnapsack import BBKnapsack\n\ncapacity = 50\nweights = [31, 10, 20, 20, 5, 3, -6]\nprofits = [70, 20, 39, 37, 7, 5, 10]\n\nmy_knapsack1 = BBKnapsack(capacity, profits, weights)\nmax_profit, max_solution = my_knapsack1.maximize()\n# (126, [1, 0, 1, 0, 1, 0, 1])\n</code></pre>\n<h3>Example of minimization</h3>\n<pre><code>from knapsack01.BBKnapsack import BBKnapsack\n\ncapacity = 50\nweights = [31, 10, 20, 20, 5, 3, -6]\nprofits = [70, 20, 39, 37, 7, 5, 10]\n\nmy_knapsack2 = BBKnapsack(capacity, profits, weights)\nmin_profit, min_solution = my_knapsack2.minimize()\n# (96, [0, 1, 1, 1, 0, 1, 0])\n</code></pre>\n\n          </div>"}, "last_serial": 7081105, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "f1d646c048bcfe4ed172f89af7673a25", "sha256": "3cc9f70d6fa8005254782266026a2fd045908f2e75320dd795840b6e276cf872"}, "downloads": -1, "filename": "knapsack-pip-0.2.tar.gz", "has_sig": false, "md5_digest": "f1d646c048bcfe4ed172f89af7673a25", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 5750, "upload_time": "2020-04-23T01:30:20", "upload_time_iso_8601": "2020-04-23T01:30:20.212352Z", "url": "https://files.pythonhosted.org/packages/0b/d7/036ba30da0e26e54093c5e2e8050ae7e328c6eca4ce37dd93b939f6d0745/knapsack-pip-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f1d646c048bcfe4ed172f89af7673a25", "sha256": "3cc9f70d6fa8005254782266026a2fd045908f2e75320dd795840b6e276cf872"}, "downloads": -1, "filename": "knapsack-pip-0.2.tar.gz", "has_sig": false, "md5_digest": "f1d646c048bcfe4ed172f89af7673a25", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 5750, "upload_time": "2020-04-23T01:30:20", "upload_time_iso_8601": "2020-04-23T01:30:20.212352Z", "url": "https://files.pythonhosted.org/packages/0b/d7/036ba30da0e26e54093c5e2e8050ae7e328c6eca4ce37dd93b939f6d0745/knapsack-pip-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:15 2020"}