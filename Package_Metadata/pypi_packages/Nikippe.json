{"info": {"author": "Tobias Gawron-Deutsch", "author_email": "tobias@strix.at", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: No Input/Output (Daemon)", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Home Automation", "Topic :: Utilities"], "description": "This is a simple general purpose display server - it takes values from\nmqtt and publishes the resulting image to mqtt.\n\n.. figure:: img/example.png\n   :alt: Example\n\n   Example\n\nBased on the received values a black/white 8bit image is generated\n(optionaly, the background color can be set to transparent). The image\ncan be generated from the following elements:\n\n-  ``Bar`` - Subscribes to a topic and draws a solid bar.\n-  ``CircularChart`` - A circular chart with a static time axis (e.g\n   00:00-23:59).\n-  ``DigitalClock`` - Writes the current time.\n-  ``ImageList`` - Image list preloads a set of images and displays one\n   based on received mqtt-messages.\n-  ``MQTTImage`` - Displays images that are received via mqtt messages.\n-  ``SequentialChart`` - Regular chart with the latest values added at\n   the right and the oldest values on the left.\n-  ``StaticImage`` - Displays a static image.\n-  ``StaticText`` - Writes the provided text.\n\nEach element can be used multiple times.\n\nThe name\n`Nikippe <https://de.wikipedia.org/wiki/Nikippe_(Tochter_des_Pelops)>`__\n(\u039di\u03ba\u03af\u03c0\u03c0\u03b7) is taken from the children of Pelops.\n\n.. figure:: img/Microservice%20Overview.png\n   :alt: Pelops Overview\n\n   Pelops Overview\n\n``Nikippe`` is part of the collection of mqtt based microservices\n`pelops <https://gitlab.com/pelops>`__. An overview on the microservice\narchitecture and examples can be found at\n(http://gitlab.com/pelops/pelops).\n\nFor Users\n=========\n\nInstallation\n------------\n\nPrerequisites for the core functionality are:\n\n::\n\n    sudo apt install python3 python3-pip python-pil\n    sudo pip3 install pelops\n\nInstall via pip:\n\n::\n\n    sudo pip3 install nikippe\n\nTo update to the latest version add ``--upgrade`` as suffix to the\n``pip3`` line above.\n\nInstall via gitlab (might need additional packages):\n\n::\n\n    git clone git@gitlab.com:pelops/nikippe.git\n    cd nikippe\n    sudo python3 setup.py install\n\nThis will install the following shell script: \\* ``nikippe`` - the\ndisplay server as a registered shell script.\n\nThe script cli arguments are: \\* '-c'/'--config' - config file\n(mandatory) \\* '-v' - verbose output (optional) \\* '--version' - show\nthe version number and exit\n\nYAML-Config Example\n-------------------\n\nA yaml file must contain two root blocks: \\* mqtt - mqtt-address,\nmqtt-port, and path to credentials file credentials-file (a file\nconsisting of two entries: mqtt-user, mqtt-password) \\* display-server -\ntopics that nikippe should publish the resulting image to and the update\nbehavior. \\* renderer - configuration for the render engine and the\nelements that should be displayed.\n\n| Each element must have at least the following parameters: \\*\n  ``name: humidity-chart`` - free choose able name - not used internally\n  \\* ``type: chart`` - element type. must be [bar, circularchart,\n  digitalclock, imagelist, mqttimage, mqtttext, sequentialchart,\n  staticimage, statictext] \\* ``x: 30`` - position in rendered image\n  (top/left) \\* ``y: 5`` - position in rendered image (top/left) \\*\n  ``width: 256`` - size of the element \\* ``height: 60`` - size of the\n  element \\* ``foreground-color: 0`` - between 0 (black) and 255\n  (white). \\* ``background-color: 255`` - between 0 (black) and 255\n  (white).\n| \\* ``active: True`` - if set to false, this entry will be ignored.\n\nOptional parameters for all elements are: \\*\n``ignore-update-available: False`` - if present and set to True, this\nelement will not trigger an update. For example you have a clock-element\nthat updates every minute and you want to display the latest received\ntemperature value, you set this parameter to True for mqtttext element.\n\nconfig.yaml\n~~~~~~~~~~~\n\nThe config file consists of three root nodes: mqtt, display-driver, and\nrenderer. #### mqtt\n\n::\n\n    mqtt:\n        mqtt-address: localhost\n        mqtt-port: 1883\n        credentials-file: ~/credentials.yaml\n\ndisplay-server\n^^^^^^^^^^^^^^\n\n::\n\n    display-server:\n        topics-pub-image: /test/image  # send image to the display driver\n        send-on-change: True  # send new image to epaper if any element reports that it received an update\n        send-interval: 60  # seconds. if 0 interval is disabled.\n\nThe first two entries are the topics the epaper device driver (see\n`copreus <https://gitlab.com/pelops/copreus>`__) listens to.\n``send-on-change`` and ``send-interval`` define the update behavior.\n\nRenderer\n''''''''\n\n::\n\n        renderer:\n            width: 250\n            height: 122\n            background: ../resources/gui_background_2.13.png  # optional\n            background-color: 255  # from 0 to 255.\n            elements:\n\nCommon properties for all elments:\n\n::\n\n              - name: [name]\n                type: [element type]\n                x: 0  # x position in image\n                y: 10  # y position in image\n                width: 242  # width of element\n                height: 77  # height of element\n                foreground-color: 0  # gray value - 0 is black, 255 is white\n                background-color: 255  # gray value - 0 is black, 255 is white\n                transparent-background: True  # boolean / optional. If True, background-color will be treated as transparent\n                active: False  # if False, entry will be ignored\n\nBar\n   \n\n.. figure:: img/example_bar.png\n   :alt: Example Bar\n\n   Example Bar\n\n::\n\n              - name: current-humidity\n                type: bar\n                x: 5\n                y: 5\n                width: 20\n                height: 60\n                foreground-color: 0 \n                background-color: 255 \n                active: True\n                border: True  # if true, the whole bar will be surrounded by a single line in foreground-color.\n                orientation: up  # up, down, left, right\n                topic-sub: /test/humidity  # input value\n                min-value: 5  # displayed bar % = (max(max-value, input) - min-value) / (max-value - min-value)\n                max-value: 23  #\n\nCircularChart\n             \n\n.. figure:: img/example_circularchart.png\n   :alt: Example Circular Chart\n\n   Example Circular Chart\n\n::\n\n              - name: time-chart\n                type: circularchart\n                active: False\n                topic-sub: /test/humidity\n                width: 210\n                height: 60\n                x: 30\n                y: 5\n                foreground-color: 0  # from 0 to 255.\n                background-color: 255  # from 0 to 255.\n                border-top: False\n                border-bottom: True\n                border-left: True\n                border-right: False\n                connect-values: True  # if true - values are connected with lines, other wise they are independent dots\n                pixel-per-value: 2  # a new value/dot is drawn every n-th pixel on the x-axis. must be > 0.\n                draw-cursor: True  # draw a cursor at the current time slot\n                time-span: Day  # Week, Day, Hour, Minute\n                history-service:\n                    group-by: 300  # in seconds. 0==no grouping\n                    aggregator: avg  # aggregator for group-by. valid values: avg, min, max, median. can be omitted if group-by=0.\n                    use-dataservice: True  # use the dataservice archippe to fill the chart with persisted data\n                    dataservice-request-topic-prefix: /dataservice/request\n                    dataservice-response-topic-prefix: /dataservice/response\n\nDigitalClock\n            \n\n.. figure:: img/example_digitalclock.png\n   :alt: Example Digital Clock\n\n   Example Digital Clock\n\n::\n\n              - name: digital-clock\n                type: digitalclock\n                x: 0  \n                y: 10 \n                width: 242\n                height: 77\n                foreground-color: 0 \n                background-color: 255  \n                active: False\n                font: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf\n                size: 20  # font-size\n\nImageList\n         \n\n|Example ImageList Clock| |Example ImageList Day| |Example ImageList\nMorning|\n\n::\n\n              - name: dynamicicons\n                type: imagelist\n                active: False\n                x: 50\n                y: 50\n                width: 50\n                height: 50\n                foreground-color: 0  # from 0 to 255.\n                background-color: 205  # from 0 to 255.\n                default-image: clock\n                topic-sub: /test/imagelist\n                images:\n                  - name: clock\n                    image: ../resources/icon_clock.png\n                    offset_x: 5\n                    offset_y: 5\n                  - name: day\n                    image: ../resources/icon_day.png\n                  - name: morning\n                    image: ../resources/icon_morning.png\n                    offset_y: 5\n\nMQTTImage\n         \n\n.. figure:: img/example_mqttimage.png\n   :alt: Example MQTTImage\n\n   Example MQTTImage\n\n::\n\n              - name: icon\n                type: mqttimage\n                active: False\n                x: 10\n                y: 10\n                width: 50\n                height: 50\n                foreground-color: 0  # from 0 to 255.\n                background-color: 205  # from 0 to 255.\n                topic-sub: /test/image\n                offset_x: 5\n                offset_y: 5\n\nMQTTText\n        \n\n.. figure:: img/example_mqtttext.png\n   :alt: Example MQTTText\n\n   Example MQTTText\n\n::\n\n              - name: humidity-value\n                type: mqtttext\n                x: 5  \n                y: 70 \n                width: 70\n                height: 25\n                foreground-color: 0 \n                background-color: 255\n                active: True\n                font: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf\n                size: 20  # font-size\n                string: \"{0:.1f}%\"  # format string\n                topic-sub: /test/humidity  # input value\n\nSequentialChart\n               \n\n.. figure:: img/example_sequentialchart.png\n   :alt: Example Sequential Chart\n\n   Example Sequential Chart\n\n::\n\n              - name: humidity-chart\n                type: sequentialchart\n                active: True\n                topic-sub: /test/humidity\n                width: 210\n                height: 60\n                x: 30\n                y: 5\n                foreground-color: 0  # from 0 to 255.\n                background-color: 255  # from 0 to 255.\n                border-top: False\n                border-bottom: True\n                border-left: True\n                border-right: False\n                connect-values: True  # if true - values are connected with lines, other wise they are independent dots\n                pixel-per-value: 2  # a new value/dot is drawn every n-th pixel on the x-axis. must be > 0.\n                range-minimum: 10  # if set, chart minimum value is set to this value. otherwise auto range  (optional)\n                range-maximum: 20  # if set, chart maximum value is set to this value. otherwise auto range  (optional)\n                history-service:\n                    group-by: 300  # in seconds. 0==no grouping\n                    aggregator: avg  # aggregator for group-by. valid values: avg, min, max, median. can be omitted if group-by=0.\n                    # use-dataservice: True  # use the dataservice archippe to fill the chart with persisted data\n                    # dataservice-request-topic-prefix: /dataservice/request\n                    # dataservice-response-topic-prefix: /dataservice/response\n\nStaticImage\n           \n\n.. figure:: img/example_staticimage.png\n   :alt: Example Static Image\n\n   Example Static Image\n\n::\n\n              - name: clock\n                type: staticimage\n                active: False\n                x: 10\n                y: 10\n                width: 50\n                height: 50\n                foreground-color: 0  # from 0 to 255.\n                background-color: 205  # from 0 to 255.\n                image: ../resources/icon_clock.png\n                offset_x: 5\n                offset_y: 5\n\nStaticText\n          \n\n.. figure:: img/example_statictext.png\n   :alt: Example Static Text\n\n   Example Static Text\n\n::\n\n              - name: design\n                type: statictext\n                x: 124  \n                y: 103  \n                width: 76\n                height: 10\n                foreground-color: 0  \n                background-color: 255\n                active: True        \n                font: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf\n                size: 8  # font-size\n                string: \"design by tgd1975\"  # text to be displayed     \n\ncredentials.yaml\n~~~~~~~~~~~~~~~~\n\n::\n\n    mqtt:\n        mqtt-user: user\n        mqtt-password: password\n\nrun Nikippe\n-----------\n\nusing ``screen``\n~~~~~~~~~~~~~~~~\n\n``screen -d -m -S nikippe bash -c 'nikippe -c config_nikippe.yaml'`` ###\nusing ``systemd`` - add systemd example.\n\nFor Developers\n==============\n\nGetting Started\n---------------\n\nNikippe consists of three elements: ``DisplayServer``, ``Renderer`` and\nthe render elements. The ``DisplayServer`` instantiates the render\nengine and sends the publishes the updated image. This is done either\nwith a time interval and/or upon reception of new values. The\n``Renderer`` is controlling the render elements and integrates them into\na single image.\n\nRender elements are either specialications of ``AElement``,\n``AElementMQTT`` or ``AElementHistory``. If you write a new element you\nmust also add it to the ``ElementFactory`` and write a schema extension.\n\\* ``AElement`` - Static element. to be used for elements that do not\nchange over the time (e.g. ``StaticText``) \\* ``AElementMQTT`` - Element\nthat reacts to MQTT Messages (e.g. ``MQTTText``) \\* ``AElementHistory``\n- Something that needs not only the last MQTT Message but a history\n(e.g. ``SequentialChart``)\n\nAdditional Dependencies\n-----------------------\n\nNext to the dependencies listed above, you need to install the\nfollowing:\n\n::\n\n    sudo apt install pandoc\n    sudo pip3 install pypandoc\n\nTodos\n-----\n\n-  ...\n\nMisc\n----\n\nThe code is written for ``python3`` (and tested with python 3.5 on an\nRaspberry Pi Zero with Raspbian Stretch).\n\n`Merge requests <https://gitlab.com/pelops/nikippe/merge_requests>`__ /\n`bug reports <https://gitlab.com/pelops/nikippe/issues>`__ are always\nwelcome.\n\n.. |Example ImageList Clock| image:: img/example_imagelist_clock.png\n.. |Example ImageList Day| image:: img/example_imagelist_day.png\n.. |Example ImageList Morning| image:: img/example_imagelist_morning.png\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/pelops/nikippe/", "keywords": "mqtt device driver rpi raspberry pi", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "Nikippe", "package_url": "https://pypi.org/project/Nikippe/", "platform": "", "project_url": "https://pypi.org/project/Nikippe/", "project_urls": {"Homepage": "https://gitlab.com/pelops/nikippe/"}, "release_url": "https://pypi.org/project/Nikippe/0.1.11/", "requires_dist": null, "requires_python": "", "summary": "A general purpose display server - takes values from mqtt and publishes the resulting image to mqtt.", "version": "0.1.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a simple general purpose display server - it takes values from\nmqtt and publishes the resulting image to mqtt.</p>\n<div>\n<img alt=\"Example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32600ff2133125945509a787d0509481cd45fd5f/696d672f6578616d706c652e706e67\">\n<p>Example</p>\n</div>\n<p>Based on the received values a black/white 8bit image is generated\n(optionaly, the background color can be set to transparent). The image\ncan be generated from the following elements:</p>\n<ul>\n<li><tt>Bar</tt> - Subscribes to a topic and draws a solid bar.</li>\n<li><tt>CircularChart</tt> - A circular chart with a static time axis (e.g\n00:00-23:59).</li>\n<li><tt>DigitalClock</tt> - Writes the current time.</li>\n<li><tt>ImageList</tt> - Image list preloads a set of images and displays one\nbased on received mqtt-messages.</li>\n<li><tt>MQTTImage</tt> - Displays images that are received via mqtt messages.</li>\n<li><tt>SequentialChart</tt> - Regular chart with the latest values added at\nthe right and the oldest values on the left.</li>\n<li><tt>StaticImage</tt> - Displays a static image.</li>\n<li><tt>StaticText</tt> - Writes the provided text.</li>\n</ul>\n<p>Each element can be used multiple times.</p>\n<p>The name\n<a href=\"https://de.wikipedia.org/wiki/Nikippe_(Tochter_des_Pelops)\" rel=\"nofollow\">Nikippe</a>\n(\u039di\u03ba\u03af\u03c0\u03c0\u03b7) is taken from the children of Pelops.</p>\n<div>\n<img alt=\"Pelops Overview\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d4845705acaa500c00740da30893929a9b28efd8/696d672f4d6963726f736572766963652532304f766572766965772e706e67\">\n<p>Pelops Overview</p>\n</div>\n<p><tt>Nikippe</tt> is part of the collection of mqtt based microservices\n<a href=\"https://gitlab.com/pelops\" rel=\"nofollow\">pelops</a>. An overview on the microservice\narchitecture and examples can be found at\n(<a href=\"http://gitlab.com/pelops/pelops\" rel=\"nofollow\">http://gitlab.com/pelops/pelops</a>).</p>\n<div id=\"for-users\">\n<h2>For Users</h2>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Prerequisites for the core functionality are:</p>\n<pre>sudo apt install python3 python3-pip python-pil\nsudo pip3 install pelops\n</pre>\n<p>Install via pip:</p>\n<pre>sudo pip3 install nikippe\n</pre>\n<p>To update to the latest version add <tt><span class=\"pre\">--upgrade</span></tt> as suffix to the\n<tt>pip3</tt> line above.</p>\n<p>Install via gitlab (might need additional packages):</p>\n<pre>git clone git@gitlab.com:pelops/nikippe.git\ncd nikippe\nsudo python3 setup.py install\n</pre>\n<p>This will install the following shell script: * <tt>nikippe</tt> - the\ndisplay server as a registered shell script.</p>\n<p>The script cli arguments are: * \u2018-c\u2019/\u2019\u2013config\u2019 - config file\n(mandatory) * \u2018-v\u2019 - verbose output (optional) * \u2018\u2013version\u2019 - show\nthe version number and exit</p>\n</div>\n<div id=\"yaml-config-example\">\n<h3>YAML-Config Example</h3>\n<p>A yaml file must contain two root blocks: * mqtt - mqtt-address,\nmqtt-port, and path to credentials file credentials-file (a file\nconsisting of two entries: mqtt-user, mqtt-password) * display-server -\ntopics that nikippe should publish the resulting image to and the update\nbehavior. * renderer - configuration for the render engine and the\nelements that should be displayed.</p>\n<div>\n<div>Each element must have at least the following parameters: *\n<tt>name: <span class=\"pre\">humidity-chart</span></tt> - free choose able name - not used internally\n* <tt>type: chart</tt> - element type. must be [bar, circularchart,\ndigitalclock, imagelist, mqttimage, mqtttext, sequentialchart,\nstaticimage, statictext] * <tt>x: 30</tt> - position in rendered image\n(top/left) * <tt>y: 5</tt> - position in rendered image (top/left) *\n<tt>width: 256</tt> - size of the element * <tt>height: 60</tt> - size of the\nelement * <tt><span class=\"pre\">foreground-color:</span> 0</tt> - between 0 (black) and 255\n(white). * <tt><span class=\"pre\">background-color:</span> 255</tt> - between 0 (black) and 255\n(white).</div>\n<div>* <tt>active: True</tt> - if set to false, this entry will be ignored.</div>\n</div>\n<p>Optional parameters for all elements are: *\n<tt><span class=\"pre\">ignore-update-available:</span> False</tt> - if present and set to True, this\nelement will not trigger an update. For example you have a clock-element\nthat updates every minute and you want to display the latest received\ntemperature value, you set this parameter to True for mqtttext element.</p>\n<div id=\"config-yaml\">\n<h4>config.yaml</h4>\n<p>The config file consists of three root nodes: mqtt, display-driver, and\nrenderer. #### mqtt</p>\n<pre>mqtt:\n    mqtt-address: localhost\n    mqtt-port: 1883\n    credentials-file: ~/credentials.yaml\n</pre>\n<div id=\"display-server\">\n<h5>display-server</h5>\n<pre>display-server:\n    topics-pub-image: /test/image  # send image to the display driver\n    send-on-change: True  # send new image to epaper if any element reports that it received an update\n    send-interval: 60  # seconds. if 0 interval is disabled.\n</pre>\n<p>The first two entries are the topics the epaper device driver (see\n<a href=\"https://gitlab.com/pelops/copreus\" rel=\"nofollow\">copreus</a>) listens to.\n<tt><span class=\"pre\">send-on-change</span></tt> and <tt><span class=\"pre\">send-interval</span></tt> define the update behavior.</p>\n<div id=\"renderer\">\n<h6>Renderer</h6>\n<pre>renderer:\n    width: 250\n    height: 122\n    background: ../resources/gui_background_2.13.png  # optional\n    background-color: 255  # from 0 to 255.\n    elements:\n</pre>\n<p>Common properties for all elments:</p>\n<pre>- name: [name]\n  type: [element type]\n  x: 0  # x position in image\n  y: 10  # y position in image\n  width: 242  # width of element\n  height: 77  # height of element\n  foreground-color: 0  # gray value - 0 is black, 255 is white\n  background-color: 255  # gray value - 0 is black, 255 is white\n  transparent-background: True  # boolean / optional. If True, background-color will be treated as transparent\n  active: False  # if False, entry will be ignored\n</pre>\n<p>Bar</p>\n<div>\n<img alt=\"Example Bar\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a1ad5110b5c4ba2f18f80de01e7dbbcb9e567fc/696d672f6578616d706c655f6261722e706e67\">\n<p>Example Bar</p>\n</div>\n<pre>- name: current-humidity\n  type: bar\n  x: 5\n  y: 5\n  width: 20\n  height: 60\n  foreground-color: 0\n  background-color: 255\n  active: True\n  border: True  # if true, the whole bar will be surrounded by a single line in foreground-color.\n  orientation: up  # up, down, left, right\n  topic-sub: /test/humidity  # input value\n  min-value: 5  # displayed bar % = (max(max-value, input) - min-value) / (max-value - min-value)\n  max-value: 23  #\n</pre>\n<p>CircularChart</p>\n<div>\n<img alt=\"Example Circular Chart\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2633309a4ce287750c0d1521fe38b938743aa5db/696d672f6578616d706c655f63697263756c617263686172742e706e67\">\n<p>Example Circular Chart</p>\n</div>\n<pre>- name: time-chart\n  type: circularchart\n  active: False\n  topic-sub: /test/humidity\n  width: 210\n  height: 60\n  x: 30\n  y: 5\n  foreground-color: 0  # from 0 to 255.\n  background-color: 255  # from 0 to 255.\n  border-top: False\n  border-bottom: True\n  border-left: True\n  border-right: False\n  connect-values: True  # if true - values are connected with lines, other wise they are independent dots\n  pixel-per-value: 2  # a new value/dot is drawn every n-th pixel on the x-axis. must be &gt; 0.\n  draw-cursor: True  # draw a cursor at the current time slot\n  time-span: Day  # Week, Day, Hour, Minute\n  history-service:\n      group-by: 300  # in seconds. 0==no grouping\n      aggregator: avg  # aggregator for group-by. valid values: avg, min, max, median. can be omitted if group-by=0.\n      use-dataservice: True  # use the dataservice archippe to fill the chart with persisted data\n      dataservice-request-topic-prefix: /dataservice/request\n      dataservice-response-topic-prefix: /dataservice/response\n</pre>\n<p>DigitalClock</p>\n<div>\n<img alt=\"Example Digital Clock\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45e9ebb3400222b61d1ce2ab27eb16836a6f3d0e/696d672f6578616d706c655f6469676974616c636c6f636b2e706e67\">\n<p>Example Digital Clock</p>\n</div>\n<pre>- name: digital-clock\n  type: digitalclock\n  x: 0\n  y: 10\n  width: 242\n  height: 77\n  foreground-color: 0\n  background-color: 255\n  active: False\n  font: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf\n  size: 20  # font-size\n</pre>\n<p>ImageList</p>\n<p><img alt=\"Example ImageList Clock\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2dbd11172535bdb243aa1f2ad11e947e1d0e5a7d/696d672f6578616d706c655f696d6167656c6973745f636c6f636b2e706e67\"> <img alt=\"Example ImageList Day\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c1740fea97fb8e5b272172b9df68aaa5cad0568/696d672f6578616d706c655f696d6167656c6973745f6461792e706e67\"> <img alt=\"Example ImageList Morning\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8d80fec70fb99defc7241dac7ad71ff5fecfc3a/696d672f6578616d706c655f696d6167656c6973745f6d6f726e696e672e706e67\"></p>\n<pre>- name: dynamicicons\n  type: imagelist\n  active: False\n  x: 50\n  y: 50\n  width: 50\n  height: 50\n  foreground-color: 0  # from 0 to 255.\n  background-color: 205  # from 0 to 255.\n  default-image: clock\n  topic-sub: /test/imagelist\n  images:\n    - name: clock\n      image: ../resources/icon_clock.png\n      offset_x: 5\n      offset_y: 5\n    - name: day\n      image: ../resources/icon_day.png\n    - name: morning\n      image: ../resources/icon_morning.png\n      offset_y: 5\n</pre>\n<p>MQTTImage</p>\n<div>\n<img alt=\"Example MQTTImage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a9899601d83ea007ce3049056c8ebafb9887938a/696d672f6578616d706c655f6d717474696d6167652e706e67\">\n<p>Example MQTTImage</p>\n</div>\n<pre>- name: icon\n  type: mqttimage\n  active: False\n  x: 10\n  y: 10\n  width: 50\n  height: 50\n  foreground-color: 0  # from 0 to 255.\n  background-color: 205  # from 0 to 255.\n  topic-sub: /test/image\n  offset_x: 5\n  offset_y: 5\n</pre>\n<p>MQTTText</p>\n<div>\n<img alt=\"Example MQTTText\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52b41b12c437268209814c292359c6a46a911ffc/696d672f6578616d706c655f6d717474746578742e706e67\">\n<p>Example MQTTText</p>\n</div>\n<pre>- name: humidity-value\n  type: mqtttext\n  x: 5\n  y: 70\n  width: 70\n  height: 25\n  foreground-color: 0\n  background-color: 255\n  active: True\n  font: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf\n  size: 20  # font-size\n  string: \"{0:.1f}%\"  # format string\n  topic-sub: /test/humidity  # input value\n</pre>\n<p>SequentialChart</p>\n<div>\n<img alt=\"Example Sequential Chart\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c301c65e5c3272e0f9e77dd881184a01e2f6dade/696d672f6578616d706c655f73657175656e7469616c63686172742e706e67\">\n<p>Example Sequential Chart</p>\n</div>\n<pre>- name: humidity-chart\n  type: sequentialchart\n  active: True\n  topic-sub: /test/humidity\n  width: 210\n  height: 60\n  x: 30\n  y: 5\n  foreground-color: 0  # from 0 to 255.\n  background-color: 255  # from 0 to 255.\n  border-top: False\n  border-bottom: True\n  border-left: True\n  border-right: False\n  connect-values: True  # if true - values are connected with lines, other wise they are independent dots\n  pixel-per-value: 2  # a new value/dot is drawn every n-th pixel on the x-axis. must be &gt; 0.\n  range-minimum: 10  # if set, chart minimum value is set to this value. otherwise auto range  (optional)\n  range-maximum: 20  # if set, chart maximum value is set to this value. otherwise auto range  (optional)\n  history-service:\n      group-by: 300  # in seconds. 0==no grouping\n      aggregator: avg  # aggregator for group-by. valid values: avg, min, max, median. can be omitted if group-by=0.\n      # use-dataservice: True  # use the dataservice archippe to fill the chart with persisted data\n      # dataservice-request-topic-prefix: /dataservice/request\n      # dataservice-response-topic-prefix: /dataservice/response\n</pre>\n<p>StaticImage</p>\n<div>\n<img alt=\"Example Static Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34aaa0e36cb10457f3f83e1c7df6c58e7e1d8986/696d672f6578616d706c655f737461746963696d6167652e706e67\">\n<p>Example Static Image</p>\n</div>\n<pre>- name: clock\n  type: staticimage\n  active: False\n  x: 10\n  y: 10\n  width: 50\n  height: 50\n  foreground-color: 0  # from 0 to 255.\n  background-color: 205  # from 0 to 255.\n  image: ../resources/icon_clock.png\n  offset_x: 5\n  offset_y: 5\n</pre>\n<p>StaticText</p>\n<div>\n<img alt=\"Example Static Text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/682d72c5ce13128e6ac7817bba8b3379e7240826/696d672f6578616d706c655f737461746963746578742e706e67\">\n<p>Example Static Text</p>\n</div>\n<pre>- name: design\n  type: statictext\n  x: 124\n  y: 103\n  width: 76\n  height: 10\n  foreground-color: 0\n  background-color: 255\n  active: True\n  font: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf\n  size: 8  # font-size\n  string: \"design by tgd1975\"  # text to be displayed\n</pre>\n</div>\n</div>\n</div>\n<div id=\"credentials-yaml\">\n<h4>credentials.yaml</h4>\n<pre>mqtt:\n    mqtt-user: user\n    mqtt-password: password\n</pre>\n</div>\n</div>\n<div id=\"run-nikippe\">\n<h3>run Nikippe</h3>\n<h3 id=\"using-screen\"><span class=\"section-subtitle\">using <tt>screen</tt></span></h3>\n<p><tt>screen <span class=\"pre\">-d</span> <span class=\"pre\">-m</span> <span class=\"pre\">-S</span> nikippe bash <span class=\"pre\">-c</span> 'nikippe <span class=\"pre\">-c</span> config_nikippe.yaml'</tt> ###\nusing <tt>systemd</tt> - add systemd example.</p>\n</div>\n</div>\n<div id=\"for-developers\">\n<h2>For Developers</h2>\n<div id=\"getting-started\">\n<h3>Getting Started</h3>\n<p>Nikippe consists of three elements: <tt>DisplayServer</tt>, <tt>Renderer</tt> and\nthe render elements. The <tt>DisplayServer</tt> instantiates the render\nengine and sends the publishes the updated image. This is done either\nwith a time interval and/or upon reception of new values. The\n<tt>Renderer</tt> is controlling the render elements and integrates them into\na single image.</p>\n<p>Render elements are either specialications of <tt>AElement</tt>,\n<tt>AElementMQTT</tt> or <tt>AElementHistory</tt>. If you write a new element you\nmust also add it to the <tt>ElementFactory</tt> and write a schema extension.\n* <tt>AElement</tt> - Static element. to be used for elements that do not\nchange over the time (e.g. <tt>StaticText</tt>) * <tt>AElementMQTT</tt> - Element\nthat reacts to MQTT Messages (e.g. <tt>MQTTText</tt>) * <tt>AElementHistory</tt>\n- Something that needs not only the last MQTT Message but a history\n(e.g. <tt>SequentialChart</tt>)</p>\n</div>\n<div id=\"additional-dependencies\">\n<h3>Additional Dependencies</h3>\n<p>Next to the dependencies listed above, you need to install the\nfollowing:</p>\n<pre>sudo apt install pandoc\nsudo pip3 install pypandoc\n</pre>\n</div>\n<div id=\"todos\">\n<h3>Todos</h3>\n<ul>\n<li>\u2026</li>\n</ul>\n</div>\n<div id=\"misc\">\n<h3>Misc</h3>\n<p>The code is written for <tt>python3</tt> (and tested with python 3.5 on an\nRaspberry Pi Zero with Raspbian Stretch).</p>\n<p><a href=\"https://gitlab.com/pelops/nikippe/merge_requests\" rel=\"nofollow\">Merge requests</a> /\n<a href=\"https://gitlab.com/pelops/nikippe/issues\" rel=\"nofollow\">bug reports</a> are always\nwelcome.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5162135, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "38806a2279c85d648888727167f163da", "sha256": "44d2835a1e68c1f08fbb441f1902f4d3927b8374c6e00922c4dbf4c3d1637a4c"}, "downloads": -1, "filename": "Nikippe-0.1.tar.gz", "has_sig": false, "md5_digest": "38806a2279c85d648888727167f163da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23535, "upload_time": "2018-07-12T19:55:09", "upload_time_iso_8601": "2018-07-12T19:55:09.643452Z", "url": "https://files.pythonhosted.org/packages/a6/4a/d488e219eaadba759a6ca8d5e9d4871ffba1d3561878a92d10324ff60232/Nikippe-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "95b8b968e96f0e6466b75175cd9339e9", "sha256": "43e62298893e2cb5e288b63bdce9bfa3f8463b81c44175c87f8a2c46c355530d"}, "downloads": -1, "filename": "Nikippe-0.1.1.tar.gz", "has_sig": false, "md5_digest": "95b8b968e96f0e6466b75175cd9339e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23649, "upload_time": "2018-07-18T18:44:29", "upload_time_iso_8601": "2018-07-18T18:44:29.295990Z", "url": "https://files.pythonhosted.org/packages/ed/79/6586c4cbe58e87900efadbff1aeba2bd586bbef999568336264a04a1edc8/Nikippe-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "4256964ca0c21194c74127a7a2154531", "sha256": "8fddd44ba99f236a7d753a90d5a749309c5bd6512fc21914d789af9b9f3baf5b"}, "downloads": -1, "filename": "Nikippe-0.1.10.tar.gz", "has_sig": false, "md5_digest": "4256964ca0c21194c74127a7a2154531", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24567, "upload_time": "2019-04-18T19:22:01", "upload_time_iso_8601": "2019-04-18T19:22:01.464682Z", "url": "https://files.pythonhosted.org/packages/e9/39/332b0407059c1133ae03abb255c4fc1f1a0df7e4a3535c9f35bb237b5767/Nikippe-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "515c8e9f6a0e9667ba2721ba61fabe3e", "sha256": "1715deb154a9c268f4f9d70929c3cd3f4754396885279ee1dd4f8ebfdc7f4f03"}, "downloads": -1, "filename": "Nikippe-0.1.11.tar.gz", "has_sig": false, "md5_digest": "515c8e9f6a0e9667ba2721ba61fabe3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24605, "upload_time": "2019-04-18T20:57:47", "upload_time_iso_8601": "2019-04-18T20:57:47.230308Z", "url": "https://files.pythonhosted.org/packages/8d/29/314ac624bdbaced0902303ce763acfbfb17ca214195e19c20c0a349d6e0f/Nikippe-0.1.11.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8656f7d0c44242dce87ce9e4d99af446", "sha256": "1380265da2c9f6062707c80a5a4f112fec653dbd85fe1fdcbab90c13c333ec90"}, "downloads": -1, "filename": "Nikippe-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8656f7d0c44242dce87ce9e4d99af446", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23622, "upload_time": "2018-08-08T21:08:23", "upload_time_iso_8601": "2018-08-08T21:08:23.414008Z", "url": "https://files.pythonhosted.org/packages/c1/37/e48e0cc55e4aeb155f7c0a22ab8ba642fe8f7b1cfdb6cbdde0a1720cb9d0/Nikippe-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "0890a2945aa44bc8f5944c44256a2169", "sha256": "78eb952fce05133840a045b82b070a243eb9742c434fb41444b5e19f9d1bd931"}, "downloads": -1, "filename": "Nikippe-0.1.3.tar.gz", "has_sig": false, "md5_digest": "0890a2945aa44bc8f5944c44256a2169", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23694, "upload_time": "2018-11-01T23:27:37", "upload_time_iso_8601": "2018-11-01T23:27:37.485054Z", "url": "https://files.pythonhosted.org/packages/b9/c8/db8aac0fb1301e3f94b266191452c30ffdd45634b2102e60cfdd69aa3014/Nikippe-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "571a03d94bca2511e06cfe59794cd8aa", "sha256": "d07e7bbb8830a516073a5fe1cf8bc428adcb72f65a2fd2f7533c8f5747e597aa"}, "downloads": -1, "filename": "Nikippe-0.1.4.tar.gz", "has_sig": false, "md5_digest": "571a03d94bca2511e06cfe59794cd8aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24061, "upload_time": "2018-11-05T19:24:32", "upload_time_iso_8601": "2018-11-05T19:24:32.607037Z", "url": "https://files.pythonhosted.org/packages/d6/3b/22da58a37ebd2e9abffdae63f959a59b87f8cd42d0858b07884a6dafe4b8/Nikippe-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "1ae7a9e54e4c2ded460b24974d5718b1", "sha256": "b99d2bef57db2835deb6615b274db7ccc04f48f60b900f109ece3b8f89159c58"}, "downloads": -1, "filename": "Nikippe-0.1.5.tar.gz", "has_sig": false, "md5_digest": "1ae7a9e54e4c2ded460b24974d5718b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24075, "upload_time": "2018-11-09T20:00:33", "upload_time_iso_8601": "2018-11-09T20:00:33.305982Z", "url": "https://files.pythonhosted.org/packages/a9/da/54d712ef17a02402afbfe2c5693c880011bf391ff9820d00dd6db3e4fe19/Nikippe-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "aeb773ab8da60891e5194dfd0e4ce472", "sha256": "76e6d7ce16b17f60769a0eebac1281810d833e3240f363bcca46aa46b7fbb1ae"}, "downloads": -1, "filename": "Nikippe-0.1.6.tar.gz", "has_sig": false, "md5_digest": "aeb773ab8da60891e5194dfd0e4ce472", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24257, "upload_time": "2018-11-22T20:43:51", "upload_time_iso_8601": "2018-11-22T20:43:51.107711Z", "url": "https://files.pythonhosted.org/packages/61/9b/54bdcc55c6759bb6fc1f209d02f54db42fe8aa50518e090194f010c1f87b/Nikippe-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "e8808b6ee051af84e2e2dfe54635ced0", "sha256": "c4026c94b4dd19ce60725c2482debd7697c4bdaee6154b26fbfc7d61ccfd8cc1"}, "downloads": -1, "filename": "Nikippe-0.1.7.tar.gz", "has_sig": false, "md5_digest": "e8808b6ee051af84e2e2dfe54635ced0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24381, "upload_time": "2019-03-09T22:26:52", "upload_time_iso_8601": "2019-03-09T22:26:52.046446Z", "url": "https://files.pythonhosted.org/packages/4c/b1/8fd1f2865c0076e35a4e1c4ad8f2c582d2d8db7c6ca03b6dba1f8770601f/Nikippe-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "6cc17e255ca9153d67b865c104ba9a15", "sha256": "de9010f995ba5ab19b250fed0516c85a55295c6580b911c5f5ff17d78b108e25"}, "downloads": -1, "filename": "Nikippe-0.1.8.tar.gz", "has_sig": false, "md5_digest": "6cc17e255ca9153d67b865c104ba9a15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24492, "upload_time": "2019-04-04T21:33:57", "upload_time_iso_8601": "2019-04-04T21:33:57.797729Z", "url": "https://files.pythonhosted.org/packages/15/2c/904c9dc92e0cfe96eaa30028b6b55a0a7a238b6f400801b3fc5837505f92/Nikippe-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "c048bcc3c0d150af9ac2c0d68085c02a", "sha256": "6faefdbff2c2aeb1820195f5e858ce3bba209932cb1aaf958ae28d908120ab23"}, "downloads": -1, "filename": "Nikippe-0.1.9.tar.gz", "has_sig": false, "md5_digest": "c048bcc3c0d150af9ac2c0d68085c02a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24506, "upload_time": "2019-04-07T20:19:17", "upload_time_iso_8601": "2019-04-07T20:19:17.538685Z", "url": "https://files.pythonhosted.org/packages/c4/33/54bb0dfaf750200b7a745664bc34649f153510d1d052fe9db309fca7737f/Nikippe-0.1.9.tar.gz", "yanked": false}], "0.1a1": [{"comment_text": "", "digests": {"md5": "6324528ae93bc3e13ce40a21d0a8e541", "sha256": "ccb2246c6f2eb126f1d729769edb7f1b173cc46ca2777d24d1f126ccb31dcfdb"}, "downloads": -1, "filename": "Nikippe-0.1a1.tar.gz", "has_sig": false, "md5_digest": "6324528ae93bc3e13ce40a21d0a8e541", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1337, "upload_time": "2018-03-23T00:11:07", "upload_time_iso_8601": "2018-03-23T00:11:07.568091Z", "url": "https://files.pythonhosted.org/packages/5d/9b/23809054e9d18ca83dccb789f4c0c76c109176e51344427dd563074473ef/Nikippe-0.1a1.tar.gz", "yanked": false}], "0.1a10": [{"comment_text": "", "digests": {"md5": "b7a6932b365529b09ebf493b67a2e780", "sha256": "3e26ecf672be95bc1ba0f839ae8cf1e17584ffdfd900b433d6888c1e84bfa542"}, "downloads": -1, "filename": "Nikippe-0.1a10.tar.gz", "has_sig": false, "md5_digest": "b7a6932b365529b09ebf493b67a2e780", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12009, "upload_time": "2018-04-08T19:11:30", "upload_time_iso_8601": "2018-04-08T19:11:30.452142Z", "url": "https://files.pythonhosted.org/packages/72/1e/2b03e1aacf36be64684d33e099974641afc480fa9ca152eb16c802652d10/Nikippe-0.1a10.tar.gz", "yanked": false}], "0.1a11": [{"comment_text": "", "digests": {"md5": "17df8b4bbd68b22f3940f4c159882530", "sha256": "b310d3702943322b98726d2c7e5fa6242a45ffa4bf5867b9f0a2e9ac6808aa34"}, "downloads": -1, "filename": "Nikippe-0.1a11.tar.gz", "has_sig": false, "md5_digest": "17df8b4bbd68b22f3940f4c159882530", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16108, "upload_time": "2018-06-28T19:41:35", "upload_time_iso_8601": "2018-06-28T19:41:35.698425Z", "url": "https://files.pythonhosted.org/packages/89/1a/f29bc4458a80de034021e8885598bef3a1aca82f3d0d62f5088ae61a1e9c/Nikippe-0.1a11.tar.gz", "yanked": false}], "0.1a12": [{"comment_text": "", "digests": {"md5": "9263c4aa0ecb17f769a1b0bcb284f6c5", "sha256": "4f611bf74dc39603e2e942cfa17c9417a75f3dc1861d3b56ca95393277a49864"}, "downloads": -1, "filename": "Nikippe-0.1a12.tar.gz", "has_sig": false, "md5_digest": "9263c4aa0ecb17f769a1b0bcb284f6c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16691, "upload_time": "2018-06-29T20:19:06", "upload_time_iso_8601": "2018-06-29T20:19:06.431668Z", "url": "https://files.pythonhosted.org/packages/9e/81/531087d74b878fe8e05a73e784896554d6f56254302a35d0bdd7abea3c5f/Nikippe-0.1a12.tar.gz", "yanked": false}], "0.1a13": [{"comment_text": "", "digests": {"md5": "bed213ded49005e98ab6b4cb823184aa", "sha256": "8704deb3e4f06f29849783dc1e226dbd0ae3c2c58e9cb562db110d1e267777fb"}, "downloads": -1, "filename": "Nikippe-0.1a13.tar.gz", "has_sig": false, "md5_digest": "bed213ded49005e98ab6b4cb823184aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18218, "upload_time": "2018-06-29T22:35:01", "upload_time_iso_8601": "2018-06-29T22:35:01.953708Z", "url": "https://files.pythonhosted.org/packages/55/7d/312b9887a997b63b2f55fcc20f8d4b1d4774bb37d79ad19e24bd021f5a15/Nikippe-0.1a13.tar.gz", "yanked": false}], "0.1a14": [{"comment_text": "", "digests": {"md5": "5f6de4937695b5189de6a0a8d82b92b6", "sha256": "d176fa7ca868952b1bc9641d6775324e1380894fca74980b6cdc6f69a1b7efa0"}, "downloads": -1, "filename": "Nikippe-0.1a14.tar.gz", "has_sig": false, "md5_digest": "5f6de4937695b5189de6a0a8d82b92b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18537, "upload_time": "2018-06-30T22:42:05", "upload_time_iso_8601": "2018-06-30T22:42:05.432543Z", "url": "https://files.pythonhosted.org/packages/89/83/6a79f447192a4fb61f8d84cb0755ab34980fdb211f44f3b86305424d52b8/Nikippe-0.1a14.tar.gz", "yanked": false}], "0.1a15": [{"comment_text": "", "digests": {"md5": "cc7cbe90a780c88383fc2c1409a8dd16", "sha256": "448aa5b8d9aea09c4a0406f176ed20b0420300efb535ca4d436c317cbdf31cd4"}, "downloads": -1, "filename": "Nikippe-0.1a15.tar.gz", "has_sig": false, "md5_digest": "cc7cbe90a780c88383fc2c1409a8dd16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18789, "upload_time": "2018-07-01T21:13:29", "upload_time_iso_8601": "2018-07-01T21:13:29.011596Z", "url": "https://files.pythonhosted.org/packages/70/a0/db25598dc1d44e222d514ca3b1d5261b93ff03ac5500de19f5f309eb3314/Nikippe-0.1a15.tar.gz", "yanked": false}], "0.1a16": [{"comment_text": "", "digests": {"md5": "74009a2df5af51cfbd34a8f69969e6bb", "sha256": "86c75cf88e5767a1544d38235ca0f9cf4706cef3efb27e751466af3921abb45a"}, "downloads": -1, "filename": "Nikippe-0.1a16.tar.gz", "has_sig": false, "md5_digest": "74009a2df5af51cfbd34a8f69969e6bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23536, "upload_time": "2018-07-12T19:50:23", "upload_time_iso_8601": "2018-07-12T19:50:23.080807Z", "url": "https://files.pythonhosted.org/packages/b1/ca/58b7b4c638ae536ae1a7fe69afdf56fd290472dd400ed928c06e59850dc1/Nikippe-0.1a16.tar.gz", "yanked": false}], "0.1a2": [{"comment_text": "", "digests": {"md5": "59bddab7045d73b0295f8fddf024e27c", "sha256": "9ed351047218c72ac86a7e49e74bd8d02e458ed960152f654133647e9c89ab8d"}, "downloads": -1, "filename": "Nikippe-0.1a2.tar.gz", "has_sig": false, "md5_digest": "59bddab7045d73b0295f8fddf024e27c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10832, "upload_time": "2018-03-29T22:13:14", "upload_time_iso_8601": "2018-03-29T22:13:14.235430Z", "url": "https://files.pythonhosted.org/packages/89/b9/96f464ac16b8597a3d977225375a4b334276355f69f11bad60e861d486a4/Nikippe-0.1a2.tar.gz", "yanked": false}], "0.1a3": [{"comment_text": "", "digests": {"md5": "6476bdb2eb565b736f6e01c9f08aebcb", "sha256": "09df982c993ad6e88c2ed29070843af4e0d555b96e2cd937ae11778ef0f9911f"}, "downloads": -1, "filename": "Nikippe-0.1a3.tar.gz", "has_sig": false, "md5_digest": "6476bdb2eb565b736f6e01c9f08aebcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11365, "upload_time": "2018-04-07T21:11:56", "upload_time_iso_8601": "2018-04-07T21:11:56.150091Z", "url": "https://files.pythonhosted.org/packages/3a/98/b2b084dd7664f4c84e998a684c3ad34f2fe1d3f96acf151f0f45063c1edf/Nikippe-0.1a3.tar.gz", "yanked": false}], "0.1a8": [{"comment_text": "", "digests": {"md5": "869da00daaeac17c272d53bd72b2347b", "sha256": "8f26c244cf47cd0a438613580b6edba9eb0a0e61e864cc03953e998fb62955ca"}, "downloads": -1, "filename": "Nikippe-0.1a8.tar.gz", "has_sig": false, "md5_digest": "869da00daaeac17c272d53bd72b2347b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11583, "upload_time": "2018-04-07T22:33:35", "upload_time_iso_8601": "2018-04-07T22:33:35.643708Z", "url": "https://files.pythonhosted.org/packages/6f/6c/6056c5276a9eb6bb195e0e6d6c94d8dc484cfd1832fdcf66f6055e916e5d/Nikippe-0.1a8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "515c8e9f6a0e9667ba2721ba61fabe3e", "sha256": "1715deb154a9c268f4f9d70929c3cd3f4754396885279ee1dd4f8ebfdc7f4f03"}, "downloads": -1, "filename": "Nikippe-0.1.11.tar.gz", "has_sig": false, "md5_digest": "515c8e9f6a0e9667ba2721ba61fabe3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24605, "upload_time": "2019-04-18T20:57:47", "upload_time_iso_8601": "2019-04-18T20:57:47.230308Z", "url": "https://files.pythonhosted.org/packages/8d/29/314ac624bdbaced0902303ce763acfbfb17ca214195e19c20c0a349d6e0f/Nikippe-0.1.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:22 2020"}