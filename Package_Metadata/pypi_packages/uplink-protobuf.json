{"info": {"author": "P. Raj Kumar", "author_email": "raj.pritvi.kumar@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\n# Uplink + Protocol Buffers\n[![Build Status](https://travis-ci.org/prkumar/uplink-protobuf.svg?branch=master)](https://travis-ci.org/prkumar/uplink-protobuf)\n[![codecov](https://codecov.io/gh/prkumar/uplink-protobuf/branch/master/graph/badge.svg)](https://codecov.io/gh/prkumar/uplink-protobuf)\n[![Maintainability](https://api.codeclimate.com/v1/badges/65d2d66958c6e20a3bb0/maintainability)](https://codeclimate.com/github/prkumar/uplink-protobuf/maintainability)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n`uplink-protobuf` makes it easy to send and receive protobuf messages over HTTP.\n\nThis library is an [Uplink](https://github.com/prkumar/uplink) plugin.\n\n## Table of Contents\n\n- **[Installation](#installation)**\n- **[Basic Usage](#basic-usage)**\n    * **[Receiving Protobuf Messages](#receiving-protobuf-messages)**\n    * **[Sending Protobuf Messages](#sending-protobuf-messages)**\n- **[Communicating with a JSON API](#communicating-with-a-json-api)**\n    * **[Converting JSON Responses into Protobuf Messages](#converting-json-responses-into-protobuf-messages)**\n    * **[Converting Protobuf Messages into JSON Requests](#converting-protobuf-messages-into-json-requests)**\n    * **[JSON Options](#json-options)**\n- **[FAQs](#faqs)**\n\n## Installation\n\n```\n$ pip install uplink-protobuf\n```\n\n## Basic Usage\n\n### Receiving Protobuf Messages\n\nFor any `Consumer` method that is expecting a protobuf encoded response,\nsimply set the appropriate protobuf message type as the method's [return\nvalue annotation](https://www.python.org/dev/peps/pep-3107/#return-values):\n\n```python\nfrom uplink import Consumer, get\n\n# Import Python code generated by Google's protobuf compiler:\nfrom addressbook_pb2.py import Person\n\nclass AddressBookClient(Consumer):\n    @get(\"/persons/{person_id}\")\n    def get_person(self, person_id) -> Person:\n        pass\n```\n\nThen when invoked, the annotated method will appropriately decode the\nresponse into the specified message type:\n\n```python\n>>> addressbook_client = AddressBookClient(base_url=BASE_URL)\n>>> addressbook_client.get_person(1234)\nname: \"Omar Little\"\nid: 1234\nemail: \"omar.little@example.com\"\nphones {\n  number: \"555-4321\"\n  type: HOME\n}\n```\n\n### Sending Protobuf Messages\n\nFor a `Consumer` method that needs to send a protobuf encoded request,\nsimply annotate the appropriate method argument with [`uplink.Body`](https://uplink.readthedocs.io/en/stable/quickstart.html#request-body):\n\n```python\nfrom uplink import Consumer, post, Body\n\n# Import Python code generated by Google's protobuf compiler:\nfrom addressbook_pb2.py import Person\n\nclass AddressBookClient(Consumer):\n    @post(\"/persons\")\n    def create_person(self, person: Body(type=Person)):\n        pass\n```\n\nThen when the method is invoked, the value of the annotated argument is\nautomatically encoded:\n\n```python\n# Register new person:\nperson = Person()\nperson.name = \"Stringer Bell\"\nperson.id = 5678\nperson.email = \"stringer.bell@example.com\"\n\n# Send person to API:\naddressbook_client = AddressBookClient(base_url=BASE_URL)\naddressbook_client.create_person(person)\n```\n\n## Communicating with a JSON API\n\nThis library also supports converting JSON responses and requests\nto and from protobuf messages.\n\n### Converting JSON Responses into Protobuf Messages\n\n`uplink-protobuf` can automatically convert JSON responses into\nprotobuf messages if the `Consumer` method is annotated with\n`returns.from_json`:\n\n```python\nfrom uplink import Consumer, get, returns\n\n# Import Python code generated by Google's protobuf compiler:\nfrom addressbook_pb2.py import Person\n\nclass AddressBookClient(Consumer):\n    @returns.from_json\n    @get(\"/persons/{person_id}\")\n    def get_person(self, person_id) -> Person:\n        pass\n```\n\n### Converting Protobuf Messages into JSON Requests\n\n`uplink-protobuf` can automatically convert a protobuf message into\nJSON request body if the `Consumer` method is annotated with\n`uplink.json`:\n\n```python\nfrom uplink import Consumer, post, Body, json\n\n# Import Python code generated by Google's protobuf compiler:\nfrom addressbook_pb2.py import Person\n\nclass AddressBookClient(Consumer):\n    @json\n    @post(\"/persons\")\n    def create_person(self, person: Body(type=Person)):\n        pass\n```\n\n### JSON Options\n\nThere are also a few decorators we provide that allows you to control\nthe JSON conversion. These decorators are available through the\n`uplink_protobuf.json_options` submodule.\n\n#### Options for Sending JSON Requests\n\nHere are options that can be used with `@json`, to control\nthe conversion of protobuf messages to JSON objects:\n\n- `@json_options.include_default_value_fields`: This decorator\n  indicates that the JSON output should include fields with their default\n  values. By default, default values are omitted if the field is not set.\n- `@json_options.preserve_proto_field_names`: This decorator indicates\n  that the JSON output should use the proto field names as the JSON names.\n  By default, the JSON printer converts each proto field name to\n  lowerCamelCase and uses that as the JSON name.\n- `@json_options.use_integers_for_enums`: This decorator indicates that\n  the JSON output should use the numerical value of a proto enum value,\n  instead of the name of the enum value. By default, the name of an\n  enum value is used in the JSON output.\n\n\n#### Options for Parsing JSON Responses\n\nNext, Here are options that can be used with `@returns.json`, to control\nthe conversion of JSON responses to protobuf messages:\n\n- `@json_options.ignore_unknown_fields`: This decorator indicates\n  that the JSON parser should ignore unknown fields in parsing.\n  By default, the JSON parser raises an error if it encounters\n  an unknown field.\n\n\nFinally, here's an example of a `Consumer` that uses these options:\n```python\nfrom uplink import Consumer, post, Body\nfrom uplink_protobuf import json_options\n\n# Import Python code generated by Google's protobuf compiler:\nfrom addressbook_pb2.py import Person\n\nclass AddressBookClient(Consumer):\n\n    @returns.from_json\n    @json_options.ignore_unknown_fields\n    @get(\"/persons/{person_id}\")\n    def get_person(self, person_id) -> Person:\n        pass\n\n    @json\n    @json_options.include_default_value_fields\n    @post(\"/persons\")\n    def create_person(self, person: Body(type=Person)):\n        pass\n```\n\n## FAQs\n\n- **What is Protocol Buffers?**\n\n    Checkout Google's official Protocol Buffers [Developer Guide](https://developers.google.com/protocol-buffers/docs/overview).\n\n- **How do I install Google's protobuf compiler, `protoc`?**\n\n   Checkout [this guide](http://google.github.io/proto-lens/installing-protoc.html) for installation instructions with Mac\n   and Linux.\n\n- **How do compile my `.proto` file using `protoc`?**\n\n    Refer to [this section](https://developers.google.com/protocol-buffers/docs/reference/python-generated#invocation)\n    in the offical Protocol Buffers Developer Guide.\n\n- **What is Uplink?**\n\n  It's a \"Declarative HTTP Client\". Checkout the library's [GitHub repo](https://github.com/prkumar/uplink)\n  for more.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/prkumar/uplink-protobuf", "keywords": "http api rest client retrofit protobuf protocol buffers", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "uplink-protobuf", "package_url": "https://pypi.org/project/uplink-protobuf/", "platform": "", "project_url": "https://pypi.org/project/uplink-protobuf/", "project_urls": {"Homepage": "https://github.com/prkumar/uplink-protobuf"}, "release_url": "https://pypi.org/project/uplink-protobuf/0.1.0/", "requires_dist": ["uplink (>=0.6.0)", "protobuf", "pytest; extra == 'tests'", "pytest-mock; extra == 'tests'", "pytest-cov; extra == 'tests'"], "requires_python": "", "summary": "Protocol Buffers (Protobuf) support for Uplink.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Uplink + Protocol Buffers</h1>\n<p><a href=\"https://travis-ci.org/prkumar/uplink-protobuf\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7c6681ff796f474f9ae3e54f5adb1258e30e88d/68747470733a2f2f7472617669732d63692e6f72672f70726b756d61722f75706c696e6b2d70726f746f6275662e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/prkumar/uplink-protobuf\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b5fc6fd8b75168034cb8a6ed9fac60364aaf42af/68747470733a2f2f636f6465636f762e696f2f67682f70726b756d61722f75706c696e6b2d70726f746f6275662f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://codeclimate.com/github/prkumar/uplink-protobuf/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc83ea41eac58ff8251f58d198c5c2637f9e251b/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f36356432643636393538633665323061336262302f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p><code>uplink-protobuf</code> makes it easy to send and receive protobuf messages over HTTP.</p>\n<p>This library is an <a href=\"https://github.com/prkumar/uplink\" rel=\"nofollow\">Uplink</a> plugin.</p>\n<h2>Table of Contents</h2>\n<ul>\n<li><strong><a href=\"#installation\" rel=\"nofollow\">Installation</a></strong></li>\n<li><strong><a href=\"#basic-usage\" rel=\"nofollow\">Basic Usage</a></strong>\n<ul>\n<li><strong><a href=\"#receiving-protobuf-messages\" rel=\"nofollow\">Receiving Protobuf Messages</a></strong></li>\n<li><strong><a href=\"#sending-protobuf-messages\" rel=\"nofollow\">Sending Protobuf Messages</a></strong></li>\n</ul>\n</li>\n<li><strong><a href=\"#communicating-with-a-json-api\" rel=\"nofollow\">Communicating with a JSON API</a></strong>\n<ul>\n<li><strong><a href=\"#converting-json-responses-into-protobuf-messages\" rel=\"nofollow\">Converting JSON Responses into Protobuf Messages</a></strong></li>\n<li><strong><a href=\"#converting-protobuf-messages-into-json-requests\" rel=\"nofollow\">Converting Protobuf Messages into JSON Requests</a></strong></li>\n<li><strong><a href=\"#json-options\" rel=\"nofollow\">JSON Options</a></strong></li>\n</ul>\n</li>\n<li><strong><a href=\"#faqs\" rel=\"nofollow\">FAQs</a></strong></li>\n</ul>\n<h2>Installation</h2>\n<pre><code>$ pip install uplink-protobuf\n</code></pre>\n<h2>Basic Usage</h2>\n<h3>Receiving Protobuf Messages</h3>\n<p>For any <code>Consumer</code> method that is expecting a protobuf encoded response,\nsimply set the appropriate protobuf message type as the method's <a href=\"https://www.python.org/dev/peps/pep-3107/#return-values\" rel=\"nofollow\">return\nvalue annotation</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">uplink</span> <span class=\"kn\">import</span> <span class=\"n\">Consumer</span><span class=\"p\">,</span> <span class=\"n\">get</span>\n\n<span class=\"c1\"># Import Python code generated by Google's protobuf compiler:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">addressbook_pb2.py</span> <span class=\"kn\">import</span> <span class=\"n\">Person</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">AddressBookClient</span><span class=\"p\">(</span><span class=\"n\">Consumer</span><span class=\"p\">):</span>\n    <span class=\"nd\">@get</span><span class=\"p\">(</span><span class=\"s2\">\"/persons/</span><span class=\"si\">{person_id}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_person</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">person_id</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Person</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n</pre>\n<p>Then when invoked, the annotated method will appropriately decode the\nresponse into the specified message type:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">addressbook_client</span> <span class=\"o\">=</span> <span class=\"n\">AddressBookClient</span><span class=\"p\">(</span><span class=\"n\">base_url</span><span class=\"o\">=</span><span class=\"n\">BASE_URL</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">addressbook_client</span><span class=\"o\">.</span><span class=\"n\">get_person</span><span class=\"p\">(</span><span class=\"mi\">1234</span><span class=\"p\">)</span>\n<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"s2\">\"Omar Little\"</span>\n<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"mi\">1234</span>\n<span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"s2\">\"omar.little@example.com\"</span>\n<span class=\"n\">phones</span> <span class=\"p\">{</span>\n  <span class=\"n\">number</span><span class=\"p\">:</span> <span class=\"s2\">\"555-4321\"</span>\n  <span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">HOME</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Sending Protobuf Messages</h3>\n<p>For a <code>Consumer</code> method that needs to send a protobuf encoded request,\nsimply annotate the appropriate method argument with <a href=\"https://uplink.readthedocs.io/en/stable/quickstart.html#request-body\" rel=\"nofollow\"><code>uplink.Body</code></a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">uplink</span> <span class=\"kn\">import</span> <span class=\"n\">Consumer</span><span class=\"p\">,</span> <span class=\"n\">post</span><span class=\"p\">,</span> <span class=\"n\">Body</span>\n\n<span class=\"c1\"># Import Python code generated by Google's protobuf compiler:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">addressbook_pb2.py</span> <span class=\"kn\">import</span> <span class=\"n\">Person</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">AddressBookClient</span><span class=\"p\">(</span><span class=\"n\">Consumer</span><span class=\"p\">):</span>\n    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">\"/persons\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_person</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">person</span><span class=\"p\">:</span> <span class=\"n\">Body</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">Person</span><span class=\"p\">)):</span>\n        <span class=\"k\">pass</span>\n</pre>\n<p>Then when the method is invoked, the value of the annotated argument is\nautomatically encoded:</p>\n<pre><span class=\"c1\"># Register new person:</span>\n<span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">()</span>\n<span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Stringer Bell\"</span>\n<span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"mi\">5678</span>\n<span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"s2\">\"stringer.bell@example.com\"</span>\n\n<span class=\"c1\"># Send person to API:</span>\n<span class=\"n\">addressbook_client</span> <span class=\"o\">=</span> <span class=\"n\">AddressBookClient</span><span class=\"p\">(</span><span class=\"n\">base_url</span><span class=\"o\">=</span><span class=\"n\">BASE_URL</span><span class=\"p\">)</span>\n<span class=\"n\">addressbook_client</span><span class=\"o\">.</span><span class=\"n\">create_person</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">)</span>\n</pre>\n<h2>Communicating with a JSON API</h2>\n<p>This library also supports converting JSON responses and requests\nto and from protobuf messages.</p>\n<h3>Converting JSON Responses into Protobuf Messages</h3>\n<p><code>uplink-protobuf</code> can automatically convert JSON responses into\nprotobuf messages if the <code>Consumer</code> method is annotated with\n<code>returns.from_json</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">uplink</span> <span class=\"kn\">import</span> <span class=\"n\">Consumer</span><span class=\"p\">,</span> <span class=\"n\">get</span><span class=\"p\">,</span> <span class=\"n\">returns</span>\n\n<span class=\"c1\"># Import Python code generated by Google's protobuf compiler:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">addressbook_pb2.py</span> <span class=\"kn\">import</span> <span class=\"n\">Person</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">AddressBookClient</span><span class=\"p\">(</span><span class=\"n\">Consumer</span><span class=\"p\">):</span>\n    <span class=\"nd\">@returns</span><span class=\"o\">.</span><span class=\"n\">from_json</span>\n    <span class=\"nd\">@get</span><span class=\"p\">(</span><span class=\"s2\">\"/persons/</span><span class=\"si\">{person_id}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_person</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">person_id</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Person</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n</pre>\n<h3>Converting Protobuf Messages into JSON Requests</h3>\n<p><code>uplink-protobuf</code> can automatically convert a protobuf message into\nJSON request body if the <code>Consumer</code> method is annotated with\n<code>uplink.json</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">uplink</span> <span class=\"kn\">import</span> <span class=\"n\">Consumer</span><span class=\"p\">,</span> <span class=\"n\">post</span><span class=\"p\">,</span> <span class=\"n\">Body</span><span class=\"p\">,</span> <span class=\"n\">json</span>\n\n<span class=\"c1\"># Import Python code generated by Google's protobuf compiler:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">addressbook_pb2.py</span> <span class=\"kn\">import</span> <span class=\"n\">Person</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">AddressBookClient</span><span class=\"p\">(</span><span class=\"n\">Consumer</span><span class=\"p\">):</span>\n    <span class=\"nd\">@json</span>\n    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">\"/persons\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_person</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">person</span><span class=\"p\">:</span> <span class=\"n\">Body</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">Person</span><span class=\"p\">)):</span>\n        <span class=\"k\">pass</span>\n</pre>\n<h3>JSON Options</h3>\n<p>There are also a few decorators we provide that allows you to control\nthe JSON conversion. These decorators are available through the\n<code>uplink_protobuf.json_options</code> submodule.</p>\n<h4>Options for Sending JSON Requests</h4>\n<p>Here are options that can be used with <code>@json</code>, to control\nthe conversion of protobuf messages to JSON objects:</p>\n<ul>\n<li><code>@json_options.include_default_value_fields</code>: This decorator\nindicates that the JSON output should include fields with their default\nvalues. By default, default values are omitted if the field is not set.</li>\n<li><code>@json_options.preserve_proto_field_names</code>: This decorator indicates\nthat the JSON output should use the proto field names as the JSON names.\nBy default, the JSON printer converts each proto field name to\nlowerCamelCase and uses that as the JSON name.</li>\n<li><code>@json_options.use_integers_for_enums</code>: This decorator indicates that\nthe JSON output should use the numerical value of a proto enum value,\ninstead of the name of the enum value. By default, the name of an\nenum value is used in the JSON output.</li>\n</ul>\n<h4>Options for Parsing JSON Responses</h4>\n<p>Next, Here are options that can be used with <code>@returns.json</code>, to control\nthe conversion of JSON responses to protobuf messages:</p>\n<ul>\n<li><code>@json_options.ignore_unknown_fields</code>: This decorator indicates\nthat the JSON parser should ignore unknown fields in parsing.\nBy default, the JSON parser raises an error if it encounters\nan unknown field.</li>\n</ul>\n<p>Finally, here's an example of a <code>Consumer</code> that uses these options:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">uplink</span> <span class=\"kn\">import</span> <span class=\"n\">Consumer</span><span class=\"p\">,</span> <span class=\"n\">post</span><span class=\"p\">,</span> <span class=\"n\">Body</span>\n<span class=\"kn\">from</span> <span class=\"nn\">uplink_protobuf</span> <span class=\"kn\">import</span> <span class=\"n\">json_options</span>\n\n<span class=\"c1\"># Import Python code generated by Google's protobuf compiler:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">addressbook_pb2.py</span> <span class=\"kn\">import</span> <span class=\"n\">Person</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">AddressBookClient</span><span class=\"p\">(</span><span class=\"n\">Consumer</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@returns</span><span class=\"o\">.</span><span class=\"n\">from_json</span>\n    <span class=\"nd\">@json_options</span><span class=\"o\">.</span><span class=\"n\">ignore_unknown_fields</span>\n    <span class=\"nd\">@get</span><span class=\"p\">(</span><span class=\"s2\">\"/persons/</span><span class=\"si\">{person_id}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_person</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">person_id</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Person</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@json</span>\n    <span class=\"nd\">@json_options</span><span class=\"o\">.</span><span class=\"n\">include_default_value_fields</span>\n    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">\"/persons\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_person</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">person</span><span class=\"p\">:</span> <span class=\"n\">Body</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">Person</span><span class=\"p\">)):</span>\n        <span class=\"k\">pass</span>\n</pre>\n<h2>FAQs</h2>\n<ul>\n<li>\n<p><strong>What is Protocol Buffers?</strong></p>\n<p>Checkout Google's official Protocol Buffers <a href=\"https://developers.google.com/protocol-buffers/docs/overview\" rel=\"nofollow\">Developer Guide</a>.</p>\n</li>\n<li>\n<p><strong>How do I install Google's protobuf compiler, <code>protoc</code>?</strong></p>\n<p>Checkout <a href=\"http://google.github.io/proto-lens/installing-protoc.html\" rel=\"nofollow\">this guide</a> for installation instructions with Mac\nand Linux.</p>\n</li>\n<li>\n<p><strong>How do compile my <code>.proto</code> file using <code>protoc</code>?</strong></p>\n<p>Refer to <a href=\"https://developers.google.com/protocol-buffers/docs/reference/python-generated#invocation\" rel=\"nofollow\">this section</a>\nin the offical Protocol Buffers Developer Guide.</p>\n</li>\n<li>\n<p><strong>What is Uplink?</strong></p>\n<p>It's a \"Declarative HTTP Client\". Checkout the library's <a href=\"https://github.com/prkumar/uplink\" rel=\"nofollow\">GitHub repo</a>\nfor more.</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 4274096, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2e6a5daedbf276ede063cf3caa85d240", "sha256": "69ab7485657f0a53bf1bcb57078555eb233a27feb63277374a56117e0e9f2e81"}, "downloads": -1, "filename": "uplink_protobuf-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2e6a5daedbf276ede063cf3caa85d240", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6747, "upload_time": "2018-09-15T00:17:24", "upload_time_iso_8601": "2018-09-15T00:17:24.268671Z", "url": "https://files.pythonhosted.org/packages/83/26/6ee21985b19cdcd04e57630a5baafddd2c833b7cbc978f3f0fb97bae2ba7/uplink_protobuf-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42929391e0e572868eaa276b3620e588", "sha256": "aa7e1ae29f1c8c3720cd8e6582eceb4633e95a2c86248960532492a9e208ad62"}, "downloads": -1, "filename": "uplink-protobuf-0.1.0.tar.gz", "has_sig": false, "md5_digest": "42929391e0e572868eaa276b3620e588", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7994, "upload_time": "2018-09-15T00:17:25", "upload_time_iso_8601": "2018-09-15T00:17:25.675885Z", "url": "https://files.pythonhosted.org/packages/28/d8/cf52f9f50e0e425a750f704817cf330c857d3c6bfb96212dc693fa66c9f4/uplink-protobuf-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e6a5daedbf276ede063cf3caa85d240", "sha256": "69ab7485657f0a53bf1bcb57078555eb233a27feb63277374a56117e0e9f2e81"}, "downloads": -1, "filename": "uplink_protobuf-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2e6a5daedbf276ede063cf3caa85d240", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6747, "upload_time": "2018-09-15T00:17:24", "upload_time_iso_8601": "2018-09-15T00:17:24.268671Z", "url": "https://files.pythonhosted.org/packages/83/26/6ee21985b19cdcd04e57630a5baafddd2c833b7cbc978f3f0fb97bae2ba7/uplink_protobuf-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42929391e0e572868eaa276b3620e588", "sha256": "aa7e1ae29f1c8c3720cd8e6582eceb4633e95a2c86248960532492a9e208ad62"}, "downloads": -1, "filename": "uplink-protobuf-0.1.0.tar.gz", "has_sig": false, "md5_digest": "42929391e0e572868eaa276b3620e588", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7994, "upload_time": "2018-09-15T00:17:25", "upload_time_iso_8601": "2018-09-15T00:17:25.675885Z", "url": "https://files.pythonhosted.org/packages/28/d8/cf52f9f50e0e425a750f704817cf330c857d3c6bfb96212dc693fa66c9f4/uplink-protobuf-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:39:50 2020"}