{"info": {"author": "Arkadiusz Bokowy", "author_email": "arkadiusz.bokowy@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Flake8", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Quality Assurance"], "description": "Package requirements checker\n============================\n\nThis module provides a plug-in for `flake8 <http://flake8.pycqa.org>`_, which checks/validates\npackage import requirements. It reports missing and/or not used project direct dependencies.\n\nThis plug-in adds new flake8 warnings:\n\n- ``I900``: Package is not listed as a requirement.\n- ``I901``: Package is required but not used.\n\nImportant notice\n----------------\n\nIn order to collect project's dependencies, this checker evaluates Python code from the\n``setup.py`` file stored in the project's root directory. Code evaluation is done with the\n`eval() <https://docs.python.org/3/library/functions.html#eval>`_ function. As a fall-back\nmethod, this checker also tries to load dependencies from the ``pyproject.toml`` file from\nthe `poetry <https://python-poetry.org/>`_ tool section, or from the ``requirements.txt``\ntext file.\n\nAt this point it is very important to be aware of the consequences of the above approach. One\nmight inject malicious code into the ``setup.py`` file, which will be executed by this checker.\nHence, this checker shall NEVER be use to check code from an unknown source! However, in most\ncases, one validates code from a known source (e.g. own code) and one will run script stored in\nthe ``setup.py`` file anyway. The worst case scenario is, that this checker will execute the\nequivalent of the ``python setup.py``, which shall be idempotent (it's a horribly designed\n``setup.py`` file if it's not).\n\nIf you have noticed some side effects during the ``flake8`` check and your ``setup.py`` file is\nwritten in a standard way (e.g. `pypa-sampleproject\n<https://github.com/pypa/sampleproject/blob/master/setup.py>`_), please fill out a bug report.\n\nInstallation\n------------\n\nYou can install, upgrade, or uninstall ``flake8-requirements`` with these commands::\n\n  $ pip install flake8-requirements\n  $ pip install --upgrade flake8-requirements\n  $ pip uninstall flake8-requirements\n\nCustomization\n-------------\n\nFor projects with custom (private) dependencies, one can provide mapping between project name and\nprovided modules. Such a mapping can be set on the command line during the flake8 invocation with\nthe ``--known-modules`` option or alternatively in the ``[flake8]`` section of the configuration\nfile, e.g. ``setup.cfg``. The syntax of the custom mapping looks like follows::\n\n  1st-project-name:[module1,module2,...],2nd-project-name:[moduleA,moduleB,...],...\n\nIf some local project lacks \"name\" attribute in the ``setup.py`` file (it is highly discouraged\nnot to provide the \"name\" attribute, though), one can omit the project name in the mapping and do\nas follows::\n\n  :[localmodule1,localmodule2,...],1st-local-library:[moduleA,moduleB,...],...\n\nReal life example::\n\n  $ cat setup.cfg\n  [flake8]\n  max-line-length = 100\n  known-modules = my-lib:[mylib.drm,mylib.encryption]\n\nIf you use the ``-r`` flag in your ``requirements.txt`` file with more than one level of recursion\n(in other words, one file includes another, the included file includes yet another, and so on),\nadd the ``--requirements-max-depth`` option to flake8 (for example, ``--requirements-max-depth=3``\nto allow three levels of recursion).\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Arkq/flake8-requirements", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flake8-requirements", "package_url": "https://pypi.org/project/flake8-requirements/", "platform": "", "project_url": "https://pypi.org/project/flake8-requirements/", "project_urls": {"Homepage": "https://github.com/Arkq/flake8-requirements"}, "release_url": "https://pypi.org/project/flake8-requirements/1.3.1/", "requires_dist": ["flake8 (>=2.0.0)", "setuptools", "toml"], "requires_python": "", "summary": "Package requirements checker, plugin for flake8", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This module provides a plug-in for <a href=\"http://flake8.pycqa.org\" rel=\"nofollow\">flake8</a>, which checks/validates\npackage import requirements. It reports missing and/or not used project direct dependencies.</p>\n<p>This plug-in adds new flake8 warnings:</p>\n<ul>\n<li><tt>I900</tt>: Package is not listed as a requirement.</li>\n<li><tt>I901</tt>: Package is required but not used.</li>\n</ul>\n<div id=\"important-notice\">\n<h2>Important notice</h2>\n<p>In order to collect project\u2019s dependencies, this checker evaluates Python code from the\n<tt>setup.py</tt> file stored in the project\u2019s root directory. Code evaluation is done with the\n<a href=\"https://docs.python.org/3/library/functions.html#eval\" rel=\"nofollow\">eval()</a> function. As a fall-back\nmethod, this checker also tries to load dependencies from the <tt>pyproject.toml</tt> file from\nthe <a href=\"https://python-poetry.org/\" rel=\"nofollow\">poetry</a> tool section, or from the <tt>requirements.txt</tt>\ntext file.</p>\n<p>At this point it is very important to be aware of the consequences of the above approach. One\nmight inject malicious code into the <tt>setup.py</tt> file, which will be executed by this checker.\nHence, this checker shall NEVER be use to check code from an unknown source! However, in most\ncases, one validates code from a known source (e.g. own code) and one will run script stored in\nthe <tt>setup.py</tt> file anyway. The worst case scenario is, that this checker will execute the\nequivalent of the <tt>python setup.py</tt>, which shall be idempotent (it\u2019s a horribly designed\n<tt>setup.py</tt> file if it\u2019s not).</p>\n<p>If you have noticed some side effects during the <tt>flake8</tt> check and your <tt>setup.py</tt> file is\nwritten in a standard way (e.g. <a href=\"https://github.com/pypa/sampleproject/blob/master/setup.py\" rel=\"nofollow\">pypa-sampleproject</a>), please fill out a bug report.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install, upgrade, or uninstall <tt><span class=\"pre\">flake8-requirements</span></tt> with these commands:</p>\n<pre>$ pip install flake8-requirements\n$ pip install --upgrade flake8-requirements\n$ pip uninstall flake8-requirements\n</pre>\n</div>\n<div id=\"customization\">\n<h2>Customization</h2>\n<p>For projects with custom (private) dependencies, one can provide mapping between project name and\nprovided modules. Such a mapping can be set on the command line during the flake8 invocation with\nthe <tt><span class=\"pre\">--known-modules</span></tt> option or alternatively in the <tt>[flake8]</tt> section of the configuration\nfile, e.g. <tt>setup.cfg</tt>. The syntax of the custom mapping looks like follows:</p>\n<pre>1st-project-name:[module1,module2,...],2nd-project-name:[moduleA,moduleB,...],...\n</pre>\n<p>If some local project lacks \u201cname\u201d attribute in the <tt>setup.py</tt> file (it is highly discouraged\nnot to provide the \u201cname\u201d attribute, though), one can omit the project name in the mapping and do\nas follows:</p>\n<pre>:[localmodule1,localmodule2,...],1st-local-library:[moduleA,moduleB,...],...\n</pre>\n<p>Real life example:</p>\n<pre>$ cat setup.cfg\n[flake8]\nmax-line-length = 100\nknown-modules = my-lib:[mylib.drm,mylib.encryption]\n</pre>\n<p>If you use the <tt><span class=\"pre\">-r</span></tt> flag in your <tt>requirements.txt</tt> file with more than one level of recursion\n(in other words, one file includes another, the included file includes yet another, and so on),\nadd the <tt><span class=\"pre\">--requirements-max-depth</span></tt> option to flake8 (for example, <tt><span class=\"pre\">--requirements-max-depth=3</span></tt>\nto allow three levels of recursion).</p>\n</div>\n\n          </div>"}, "last_serial": 6972670, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "67687bc5e3483b59f2d99245cd4c2419", "sha256": "af8de10acf94e2feaceffa1ede0adc4b3800c8519737f4e3b145515f837749c4"}, "downloads": -1, "filename": "flake8_requirements-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67687bc5e3483b59f2d99245cd4c2419", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10275, "upload_time": "2017-11-30T08:09:14", "upload_time_iso_8601": "2017-11-30T08:09:14.072607Z", "url": "https://files.pythonhosted.org/packages/bd/6a/226df7ad1b26e05e70328b9afdd7935d55f148a61161c66ff6851b82d44d/flake8_requirements-1.0.0-py2.py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "d37b20eb643002c8844bb2112d19ca11", "sha256": "f06b8042de976d69ef8125e3da4afc0bbc1039e975daac9b5d2729c9331051f3"}, "downloads": -1, "filename": "flake8_requirements-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d37b20eb643002c8844bb2112d19ca11", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 10631, "upload_time": "2018-01-23T15:49:38", "upload_time_iso_8601": "2018-01-23T15:49:38.489092Z", "url": "https://files.pythonhosted.org/packages/8a/ad/59f4208b87537ead58f56346b8a70ef7c8b1234c084f298330ef7e19de38/flake8_requirements-1.1.0-py2.py3-none-any.whl", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "9909fb2663c9a4f9235d30402bcd2543", "sha256": "ebd7e55a1af82b08c4edd0bf0a3d5410c4b9f34843aa103e751c0fce0aed257f"}, "downloads": -1, "filename": "flake8_requirements-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9909fb2663c9a4f9235d30402bcd2543", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10699, "upload_time": "2018-01-30T16:55:02", "upload_time_iso_8601": "2018-01-30T16:55:02.867617Z", "url": "https://files.pythonhosted.org/packages/b3/04/f86a82326643af2cad037073bc417523c759b3bd2ee9d6450bcfdfdcff55/flake8_requirements-1.1.1-py2.py3-none-any.whl", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "53c561e6b6b04b7259993a5e3e3943a7", "sha256": "6ca05efc4dfcce8fdc0748e623fbd15a56410dc3e418388efe333d785e988df9"}, "downloads": -1, "filename": "flake8_requirements-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "53c561e6b6b04b7259993a5e3e3943a7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11453, "upload_time": "2019-07-13T20:13:07", "upload_time_iso_8601": "2019-07-13T20:13:07.127430Z", "url": "https://files.pythonhosted.org/packages/33/c2/028dce26ee00694f84c4907808bfa391b294abfe2db348fe4b371590704b/flake8_requirements-1.1.2-py2.py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "e2772754d03b5383eb32ed889b07be38", "sha256": "f44d24ab162b953cd9f42cce12ab661c5749ed9016cca043991e378d78bf660e"}, "downloads": -1, "filename": "flake8_requirements-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e2772754d03b5383eb32ed889b07be38", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12094, "upload_time": "2019-11-26T19:32:23", "upload_time_iso_8601": "2019-11-26T19:32:23.368750Z", "url": "https://files.pythonhosted.org/packages/f9/49/568b801d5491023e56aada2abefd717a68a294f28ee2d1a43683d709c626/flake8_requirements-1.2.0-py2.py3-none-any.whl", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "17da892ac8096d0fe75c5a2946bb3922", "sha256": "9c19638c1ec992d57a9c694346a47bcf517fbacf5b88880f663a679c08e8892a"}, "downloads": -1, "filename": "flake8_requirements-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "17da892ac8096d0fe75c5a2946bb3922", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11496, "upload_time": "2020-02-04T19:13:47", "upload_time_iso_8601": "2020-02-04T19:13:47.990712Z", "url": "https://files.pythonhosted.org/packages/e1/5d/7ce1b219d91434989f14286fab8046d612f0e0d7ebbf2050342940ad3fd4/flake8_requirements-1.3.0-py2.py3-none-any.whl", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "8046a2b7be1d473965b98f8c9fe411d4", "sha256": "ce72d11f0e238931aa34114225d26168946edbeb45e5e11ce2ec70997d2d49a3"}, "downloads": -1, "filename": "flake8_requirements-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8046a2b7be1d473965b98f8c9fe411d4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11599, "upload_time": "2020-04-07T20:19:47", "upload_time_iso_8601": "2020-04-07T20:19:47.478359Z", "url": "https://files.pythonhosted.org/packages/08/a1/9155644105896c8825e24d9d9a50630b24db25fb38135f1974c508486634/flake8_requirements-1.3.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8046a2b7be1d473965b98f8c9fe411d4", "sha256": "ce72d11f0e238931aa34114225d26168946edbeb45e5e11ce2ec70997d2d49a3"}, "downloads": -1, "filename": "flake8_requirements-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8046a2b7be1d473965b98f8c9fe411d4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11599, "upload_time": "2020-04-07T20:19:47", "upload_time_iso_8601": "2020-04-07T20:19:47.478359Z", "url": "https://files.pythonhosted.org/packages/08/a1/9155644105896c8825e24d9d9a50630b24db25fb38135f1974c508486634/flake8_requirements-1.3.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 01:03:20 2020"}