{"info": {"author": "drymer", "author_email": "drymer@autistici.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: End Users/Desktop", "Operating System :: OS Independent", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4"], "description": "-  `English <#english>`__\n\n   -  `About <#about>`__\n   -  `DISCLAIMER <#disclaimer>`__\n   -  `Requirements <#requirements>`__\n   -  `Git repository <#git-repository>`__\n   -  `Installation <#installation>`__\n   -  `Settings <#settings>`__\n   -  `Web Interface <#web-interface>`__\n   -  `Crontab <#crontab>`__\n\n-  `Castellano <#castellano>`__\n\n   -  `Acerca de <#acerca-de>`__\n   -  `DISCLAIMER <#disclaimer>`__\n   -  `Requisitos <#requisitos>`__\n   -  `Repositorio git <#repositorio-git>`__\n   -  `Instalaci\u00f3n <#instalaci\u00f3n>`__\n   -  `Configuraci\u00f3n <#configuraci\u00f3n>`__\n   -  `Interfaz Web <#interfaz-web>`__\n   -  `Crontab <#crontab>`__\n\nTwitter2RSS\n===========\n\nEnglish\n-------\n\nAbout\n~~~~~\n\ntwitter2rss searches for twitter's user data and creates a feed from it.\n\nDISCLAIMER\n~~~~~~~~~~\n\nThis program searches the data directly on the twitter's website using a\ntechnique called scrapping, it does not use it's API. This means that\nany changes made to the website can bug this program. Each time it\nhappens, will be fixed, but it probably will not work for a while.\n\nRequirements\n~~~~~~~~~~~~\n\nYou need a version of Python and pip equal to or greater than 3.4 and\ntwo libraries:\n\n-  `requests <https://pypi.python.org/pypi/requests>`__ >= 2.9.0\n\n-  `PyRSS2Gen <https://pypi.python.org/pypi/PyRSS2Gen>`__ >= 1.1\n\nIt can be used with Python 3.2 (the version that comes with Debian\nWheezy), but it may be unreliable.\n\nGit repository\n~~~~~~~~~~~~~~\n\nIt's in two places:\n\n-  http://daemons.cf/cgit/twitter2rss: the original repository\n\nInstallation\n~~~~~~~~~~~~\n\nAs any program written in Python, is it advisable to use a virtual\nenvironment (virtualenv), but that is user's choice. It can choosen from\nthe following installation methods:\n\nInstalled using pip:\n\n.. code:: bash\n\n    $ su -c \"pip3 install twitter2rss\"\n\nUsing git:\n\n.. code:: bash\n\n    $ git clone git: //daemons.cf/twitter2rss\n\n    $ cd twitter2rss\n    $ su -c \"pip3 install -r requirements.txt\"\n    $ su -c \"python3 setup.py install\"\n\nSettings\n~~~~~~~~\n\nThis program has no options, so it should be easy to use. All it have to\nbe done is to create a file in the directory where ``twitter2rss`` run\nand fill it with twitter user's names:\n\n.. code:: bash\n\n    $ cd PATH/TO/twitter2rss/\n    # Edit user file. The following are just four examples\n    $ echo -e \"snowden\\nioerror\\neldiarioes\\nlamarea_com\" > twitter_users\n    $ twitter2rss.py\n    # Or if you just want to add or update one\n    $ twitter2rss.py snowden\n\nIn addition, it's possible change the threads used by the program. If\nthey're increased and the machine is powerful enough, it will run\nfaster.\n\nBy default it uses two threads in the implementation of the program. You\ncan add up to, if the machine supports it, to five threads. From ten\nthreads, the speed increase is no longer noticed, so is not worth it.\n\nWeb Interface\n~~~~~~~~~~~~~\n\nThis repository can be cloned directly into the root of the web server\nand run as is with the standard configuration of PHP. For the nginx\nvirtual host, you can use the file called ``nginx_virtualhost`` file.\n\nThis interface does two things: put the Twitter user in the file\n``twitter_users`` and run a Python function in which only creates the\nfeed of that user.\n\nCrontab\n~~~~~~~\n\nThe ``twitter2rss`` preferred execution mode is using crontab. If added\nthe following, should apply:\n\n.. code:: bash\n\n    $ crontab -e\n    # A file is open and gets the following\n    */5 * * * * cd /var/www/twitter2rss && twitter2rss.py\n\nLike this, it runs every five minutes. Is recommended this low execution\ntime as tweets could be lost otherwise. It has to be remembered that\nit's important to run it in the directory where the file\n``twitter_users`` was created, since it's there where it will try to\nfind it.\n\nCastellano\n----------\n\nAcerca de\n~~~~~~~~~\n\ntwitter2rss busca los datos de usuarios de twitter y crea un feed a\npartir de ello.\n\nDISCLAIMER\n~~~~~~~~~~\n\nEste programa busca los datos directamente en la web de Twitter mediante\nuna t\u00e9cnica llamada scrapping, no usa su API. Esto quiere decir que\ncualquier cambio que hagan a la web puede fastidiar el funcionamiento de\neste programa. Cada vez que pase, se procurar\u00e1 arreglarlo, pero es\nprobable que durante un tiempo no funcione.\n\nRequisitos\n~~~~~~~~~~\n\nNecesita una versi\u00f3n de Python y pip igual o superior a la 3.4 y dos\nlibrerias:\n\n-  `requests <https://pypi.python.org/pypi/requests>`__ >= 2.9.0\n\n-  `PyRSS2Gen <https://pypi.python.org/pypi/PyRSS2Gen>`__ >= 1.1\n\nSe puede usar con Python 3.2 (la versi\u00f3n que usa Debian Wheezy), pero\npuede no ser demasiado confiable.\n\nRepositorio git\n~~~~~~~~~~~~~~~\n\nEst\u00e1 en dos sitios:\n\n-  http://daemons.cf/cgit/twitter2rss: el repositorio original\n\nInstalaci\u00f3n\n~~~~~~~~~~~\n\nC\u00f3mo con cualquier programa escrito en Python, es recomendable usar un\nentorno virtual (virtualenv), pero eso queda a elecci\u00f3n del usuario. Se\npuede escoger entre los siguientes m\u00e9todos de instalaci\u00f3n:\n\nInstalar usando pip:\n\n.. code:: bash\n\n    $ su -c \"pip3 install twitter2rss\"\n\nUsando git:\n\n.. code:: bash\n\n    $ git clone git://daemons.cf/twitter2rss\n\n    $ cd twitter2rss\n    $ su -c \"pip3 install -r requirements.txt\"\n    $ su -c \"python3 setup.py install\"\n\nConfiguraci\u00f3n\n~~~~~~~~~~~~~\n\nEste programa no tiene ninguna opci\u00f3n, por lo que deber\u00eda ser sencillo\nde usar. Lo \u00fanico que hay que hacer es crear un archivo en el directorio\nen el que se ejecute ``twitter2rss`` y llenarlo con nombres de usuarias\nde Twitter:\n\n.. code:: bash\n\n    $ cd RUTA/A/twitter2rss/\n    # editar fichero de usuarios. Lo siguiente son s\u00f3lo cuatro ejemplos\n    $ echo -e \"snowden\\nioerror\\neldiarioes\\nlamarea_com\" > twitter_users\n    $ twitter2rss.py\n    # O si s\u00f3lo se quiere a\u00f1adir o actualizar uno\n    $ twitter2rss.py snowden\n\nAdem\u00e1s, se pueden modificar los hilos que usa el programa. Si se\naumentan y la m\u00e1quina es suficientemente potente, se ejecutar\u00e1 m\u00e1s\nr\u00e1pido.\n\nPor defecto usa dos hilos en la ejecuci\u00f3n del programa. Se puede subir a\nm\u00e1s, si la m\u00e1quina lo soporta, a cinco hilos. A partir de los diez hilos\nya no se nota el incremento de velocidad, por lo que no vale la pena.\n\nInterfaz Web\n~~~~~~~~~~~~\n\nEste repositorio se puede clonar directamente en la raiz del servidor\nweb y funcionar\u00e1 tal cual con la configuraci\u00f3n est\u00e1ndar de PHP. Para el\nvirtual host de nginx, se puede usar el fichero llamado\n``nginx_virtualhost``.\n\nEsta interfaz hace dos cosas, meter la usuaria de Twitter en el archivo\n``twitter_users`` y ejecutar una funci\u00f3n de Python en la que s\u00f3lo crea\nel feed de esa usuaria.\n\nCrontab\n~~~~~~~\n\nEl modo recomendado de ejecuci\u00f3n de ``twitter2rss`` es usando el\ncrontab. Con poner lo siguiente, deberia valer:\n\n.. code:: bash\n\n    $ crontab -e\n    # Se abrir\u00e1 un archivo y se mete lo siguiente\n    */5 * * * * cd /var/www/twitter2rss && twitter2rss.py\n\nAs\u00ed se ejecuta cada cinco minutos. Se recomienda este tiempo de\nejecuci\u00f3n tan bajo por que se podrian perder tweets de no ser as\u00ed. Hay\nque recordar que es importante que se ejecute en el directorio en el que\nse ha creado el archivo ``twitter_users``, ya que es ah\u00ed d\u00f3nde lo\nbuscar\u00e1.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://daemons.cf/cgit/twiter2rss/about/", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "twitter2rss", "package_url": "https://pypi.org/project/twitter2rss/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/twitter2rss/", "project_urls": {"Homepage": "http://daemons.cf/cgit/twiter2rss/about/"}, "release_url": "https://pypi.org/project/twitter2rss/0.2.1.3/", "requires_dist": null, "requires_python": "", "summary": "Parse Twitter users and create RSS files", "version": "0.2.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <ul>\n<li><a href=\"#english\" rel=\"nofollow\">English</a><ul>\n<li><a href=\"#about\" rel=\"nofollow\">About</a></li>\n<li><a href=\"#disclaimer\" rel=\"nofollow\">DISCLAIMER</a></li>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#git-repository\" rel=\"nofollow\">Git repository</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#settings\" rel=\"nofollow\">Settings</a></li>\n<li><a href=\"#web-interface\" rel=\"nofollow\">Web Interface</a></li>\n<li><a href=\"#crontab\" rel=\"nofollow\">Crontab</a></li>\n</ul>\n</li>\n<li><a href=\"#castellano\" rel=\"nofollow\">Castellano</a><ul>\n<li><a href=\"#acerca-de\" rel=\"nofollow\">Acerca de</a></li>\n<li><a href=\"#disclaimer\" rel=\"nofollow\">DISCLAIMER</a></li>\n<li><a href=\"#requisitos\" rel=\"nofollow\">Requisitos</a></li>\n<li><a href=\"#repositorio-git\" rel=\"nofollow\">Repositorio git</a></li>\n<li><a href=\"#instalaci%C3%B3n\" rel=\"nofollow\">Instalaci\u00f3n</a></li>\n<li><a href=\"#configuraci%C3%B3n\" rel=\"nofollow\">Configuraci\u00f3n</a></li>\n<li><a href=\"#interfaz-web\" rel=\"nofollow\">Interfaz Web</a></li>\n<li><a href=\"#crontab\" rel=\"nofollow\">Crontab</a></li>\n</ul>\n</li>\n</ul>\n<div id=\"twitter2rss\">\n<h2>Twitter2RSS</h2>\n<div id=\"english\">\n<h3>English</h3>\n<div id=\"about\">\n<h4>About</h4>\n<p>twitter2rss searches for twitter\u2019s user data and creates a feed from it.</p>\n</div>\n<div id=\"disclaimer\">\n<h4>DISCLAIMER</h4>\n<p>This program searches the data directly on the twitter\u2019s website using a\ntechnique called scrapping, it does not use it\u2019s API. This means that\nany changes made to the website can bug this program. Each time it\nhappens, will be fixed, but it probably will not work for a while.</p>\n</div>\n<div id=\"requirements\">\n<h4>Requirements</h4>\n<p>You need a version of Python and pip equal to or greater than 3.4 and\ntwo libraries:</p>\n<ul>\n<li><a href=\"https://pypi.python.org/pypi/requests\" rel=\"nofollow\">requests</a> &gt;= 2.9.0</li>\n<li><a href=\"https://pypi.python.org/pypi/PyRSS2Gen\" rel=\"nofollow\">PyRSS2Gen</a> &gt;= 1.1</li>\n</ul>\n<p>It can be used with Python 3.2 (the version that comes with Debian\nWheezy), but it may be unreliable.</p>\n</div>\n<div id=\"git-repository\">\n<h4>Git repository</h4>\n<p>It\u2019s in two places:</p>\n<ul>\n<li><a href=\"http://daemons.cf/cgit/twitter2rss\" rel=\"nofollow\">http://daemons.cf/cgit/twitter2rss</a>: the original repository</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h4>Installation</h4>\n<p>As any program written in Python, is it advisable to use a virtual\nenvironment (virtualenv), but that is user\u2019s choice. It can choosen from\nthe following installation methods:</p>\n<p>Installed using pip:</p>\n<pre>$ su -c <span class=\"s2\">\"pip3 install twitter2rss\"</span>\n</pre>\n<p>Using git:</p>\n<pre>$ git clone git: //daemons.cf/twitter2rss\n\n$ <span class=\"nb\">cd</span> twitter2rss\n$ su -c <span class=\"s2\">\"pip3 install -r requirements.txt\"</span>\n$ su -c <span class=\"s2\">\"python3 setup.py install\"</span>\n</pre>\n</div>\n<div id=\"settings\">\n<h4>Settings</h4>\n<p>This program has no options, so it should be easy to use. All it have to\nbe done is to create a file in the directory where <tt>twitter2rss</tt> run\nand fill it with twitter user\u2019s names:</p>\n<pre>$ <span class=\"nb\">cd</span> PATH/TO/twitter2rss/\n<span class=\"c1\"># Edit user file. The following are just four examples\n</span>$ <span class=\"nb\">echo</span> -e <span class=\"s2\">\"snowden\\nioerror\\neldiarioes\\nlamarea_com\"</span> &gt; twitter_users\n$ twitter2rss.py\n<span class=\"c1\"># Or if you just want to add or update one\n</span>$ twitter2rss.py snowden\n</pre>\n<p>In addition, it\u2019s possible change the threads used by the program. If\nthey\u2019re increased and the machine is powerful enough, it will run\nfaster.</p>\n<p>By default it uses two threads in the implementation of the program. You\ncan add up to, if the machine supports it, to five threads. From ten\nthreads, the speed increase is no longer noticed, so is not worth it.</p>\n</div>\n<div id=\"web-interface\">\n<h4>Web Interface</h4>\n<p>This repository can be cloned directly into the root of the web server\nand run as is with the standard configuration of PHP. For the nginx\nvirtual host, you can use the file called <tt>nginx_virtualhost</tt> file.</p>\n<p>This interface does two things: put the Twitter user in the file\n<tt>twitter_users</tt> and run a Python function in which only creates the\nfeed of that user.</p>\n</div>\n<div id=\"crontab\">\n<h4>Crontab</h4>\n<p>The <tt>twitter2rss</tt> preferred execution mode is using crontab. If added\nthe following, should apply:</p>\n<pre>$ crontab -e\n<span class=\"c1\"># A file is open and gets the following\n</span>*/5 * * * * <span class=\"nb\">cd</span> /var/www/twitter2rss <span class=\"o\">&amp;&amp;</span> twitter2rss.py\n</pre>\n<p>Like this, it runs every five minutes. Is recommended this low execution\ntime as tweets could be lost otherwise. It has to be remembered that\nit\u2019s important to run it in the directory where the file\n<tt>twitter_users</tt> was created, since it\u2019s there where it will try to\nfind it.</p>\n</div>\n</div>\n<div id=\"castellano\">\n<h3>Castellano</h3>\n<div id=\"acerca-de\">\n<h4>Acerca de</h4>\n<p>twitter2rss busca los datos de usuarios de twitter y crea un feed a\npartir de ello.</p>\n</div>\n<div id=\"id1\">\n<h4>DISCLAIMER</h4>\n<p>Este programa busca los datos directamente en la web de Twitter mediante\nuna t\u00e9cnica llamada scrapping, no usa su API. Esto quiere decir que\ncualquier cambio que hagan a la web puede fastidiar el funcionamiento de\neste programa. Cada vez que pase, se procurar\u00e1 arreglarlo, pero es\nprobable que durante un tiempo no funcione.</p>\n</div>\n<div id=\"requisitos\">\n<h4>Requisitos</h4>\n<p>Necesita una versi\u00f3n de Python y pip igual o superior a la 3.4 y dos\nlibrerias:</p>\n<ul>\n<li><a href=\"https://pypi.python.org/pypi/requests\" rel=\"nofollow\">requests</a> &gt;= 2.9.0</li>\n<li><a href=\"https://pypi.python.org/pypi/PyRSS2Gen\" rel=\"nofollow\">PyRSS2Gen</a> &gt;= 1.1</li>\n</ul>\n<p>Se puede usar con Python 3.2 (la versi\u00f3n que usa Debian Wheezy), pero\npuede no ser demasiado confiable.</p>\n</div>\n<div id=\"repositorio-git\">\n<h4>Repositorio git</h4>\n<p>Est\u00e1 en dos sitios:</p>\n<ul>\n<li><a href=\"http://daemons.cf/cgit/twitter2rss\" rel=\"nofollow\">http://daemons.cf/cgit/twitter2rss</a>: el repositorio original</li>\n</ul>\n</div>\n<div id=\"instalacion\">\n<h4>Instalaci\u00f3n</h4>\n<p>C\u00f3mo con cualquier programa escrito en Python, es recomendable usar un\nentorno virtual (virtualenv), pero eso queda a elecci\u00f3n del usuario. Se\npuede escoger entre los siguientes m\u00e9todos de instalaci\u00f3n:</p>\n<p>Instalar usando pip:</p>\n<pre>$ su -c <span class=\"s2\">\"pip3 install twitter2rss\"</span>\n</pre>\n<p>Usando git:</p>\n<pre>$ git clone git://daemons.cf/twitter2rss\n\n$ <span class=\"nb\">cd</span> twitter2rss\n$ su -c <span class=\"s2\">\"pip3 install -r requirements.txt\"</span>\n$ su -c <span class=\"s2\">\"python3 setup.py install\"</span>\n</pre>\n</div>\n<div id=\"configuracion\">\n<h4>Configuraci\u00f3n</h4>\n<p>Este programa no tiene ninguna opci\u00f3n, por lo que deber\u00eda ser sencillo\nde usar. Lo \u00fanico que hay que hacer es crear un archivo en el directorio\nen el que se ejecute <tt>twitter2rss</tt> y llenarlo con nombres de usuarias\nde Twitter:</p>\n<pre>$ <span class=\"nb\">cd</span> RUTA/A/twitter2rss/\n<span class=\"c1\"># editar fichero de usuarios. Lo siguiente son s\u00f3lo cuatro ejemplos\n</span>$ <span class=\"nb\">echo</span> -e <span class=\"s2\">\"snowden\\nioerror\\neldiarioes\\nlamarea_com\"</span> &gt; twitter_users\n$ twitter2rss.py\n<span class=\"c1\"># O si s\u00f3lo se quiere a\u00f1adir o actualizar uno\n</span>$ twitter2rss.py snowden\n</pre>\n<p>Adem\u00e1s, se pueden modificar los hilos que usa el programa. Si se\naumentan y la m\u00e1quina es suficientemente potente, se ejecutar\u00e1 m\u00e1s\nr\u00e1pido.</p>\n<p>Por defecto usa dos hilos en la ejecuci\u00f3n del programa. Se puede subir a\nm\u00e1s, si la m\u00e1quina lo soporta, a cinco hilos. A partir de los diez hilos\nya no se nota el incremento de velocidad, por lo que no vale la pena.</p>\n</div>\n<div id=\"interfaz-web\">\n<h4>Interfaz Web</h4>\n<p>Este repositorio se puede clonar directamente en la raiz del servidor\nweb y funcionar\u00e1 tal cual con la configuraci\u00f3n est\u00e1ndar de PHP. Para el\nvirtual host de nginx, se puede usar el fichero llamado\n<tt>nginx_virtualhost</tt>.</p>\n<p>Esta interfaz hace dos cosas, meter la usuaria de Twitter en el archivo\n<tt>twitter_users</tt> y ejecutar una funci\u00f3n de Python en la que s\u00f3lo crea\nel feed de esa usuaria.</p>\n</div>\n<div id=\"id2\">\n<h4>Crontab</h4>\n<p>El modo recomendado de ejecuci\u00f3n de <tt>twitter2rss</tt> es usando el\ncrontab. Con poner lo siguiente, deberia valer:</p>\n<pre>$ crontab -e\n<span class=\"c1\"># Se abrir\u00e1 un archivo y se mete lo siguiente\n</span>*/5 * * * * <span class=\"nb\">cd</span> /var/www/twitter2rss <span class=\"o\">&amp;&amp;</span> twitter2rss.py\n</pre>\n<p>As\u00ed se ejecuta cada cinco minutos. Se recomienda este tiempo de\nejecuci\u00f3n tan bajo por que se podrian perder tweets de no ser as\u00ed. Hay\nque recordar que es importante que se ejecute en el directorio en el que\nse ha creado el archivo <tt>twitter_users</tt>, ya que es ah\u00ed d\u00f3nde lo\nbuscar\u00e1.</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2491291, "releases": {"0.2.1.1": [], "0.2.1.2": [{"comment_text": "", "digests": {"md5": "df37e2641b3bd067c6637b4036bad89f", "sha256": "01ca9945f5c70dd1fd936e0601b05575271fee60ef77286afde88fc0890397b2"}, "downloads": -1, "filename": "twitter2rss-0.2.1.2.tar.gz", "has_sig": false, "md5_digest": "df37e2641b3bd067c6637b4036bad89f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8875, "upload_time": "2016-04-05T20:44:24", "upload_time_iso_8601": "2016-04-05T20:44:24.129479Z", "url": "https://files.pythonhosted.org/packages/a3/1c/861fe3699627e544c50612124a3c1bc05ab90d8f4f4fe7730576440ffeb1/twitter2rss-0.2.1.2.tar.gz", "yanked": false}], "0.2.1.3": [{"comment_text": "", "digests": {"md5": "dc514886f9b23ecfb790598dbc8e3c26", "sha256": "69daf3e18ab4512455941c70e4b82ccd759fe6c9a4d5aee0135040b12a58c1bb"}, "downloads": -1, "filename": "twitter2rss-0.2.1.3.tar.gz", "has_sig": true, "md5_digest": "dc514886f9b23ecfb790598dbc8e3c26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7618, "upload_time": "2016-11-30T09:30:28", "upload_time_iso_8601": "2016-11-30T09:30:28.593070Z", "url": "https://files.pythonhosted.org/packages/6d/43/b028687c3db4a48458d0a0d738c4d4859fa3b84256e944c3347be2636259/twitter2rss-0.2.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dc514886f9b23ecfb790598dbc8e3c26", "sha256": "69daf3e18ab4512455941c70e4b82ccd759fe6c9a4d5aee0135040b12a58c1bb"}, "downloads": -1, "filename": "twitter2rss-0.2.1.3.tar.gz", "has_sig": true, "md5_digest": "dc514886f9b23ecfb790598dbc8e3c26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7618, "upload_time": "2016-11-30T09:30:28", "upload_time_iso_8601": "2016-11-30T09:30:28.593070Z", "url": "https://files.pythonhosted.org/packages/6d/43/b028687c3db4a48458d0a0d738c4d4859fa3b84256e944c3347be2636259/twitter2rss-0.2.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:45 2020"}