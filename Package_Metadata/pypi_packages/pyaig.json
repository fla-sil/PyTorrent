{"info": {"author": "Baruch Sterin", "author_email": "pyaig@bsterin.com", "bugtrack_url": null, "classifiers": [], "description": "# PyAIG: A simpe Python AIG and Truth Table package\n\n## AIG\n\nAnd-Inverter Graph ([AIG](https://en.wikipedia.org/wiki/And-inverter_graph)) is a data structure for logic synthesis and verification. The code follows the [AIGER](http://fmv.jku.at/aiger/) conventions.\n\n## Installation\n\nInstall using `pip`:\n\n```shell\npip install .\n```\n\n## Truth Tables example\n\n### Import the package\n\n```python\nfrom pyaig import *\n```\n\n### Create the truth table manger - the max number of variables is required\n\n``` pyhton\nm = truth_tables(6, \"ABCDEF\")\n```\n\nIf the second parameter to `truth_tables` is provided, it automatically inserts the sequence of names into the global namespace\n\n### Build truth tables with operator overloading\n\n```python\nf = A.ite(B, C ^ D) & E | F\n```\n\nThe truth table support `|`, `&`, `^`, and `~` for OR, AND, XOR, INVERT, respectively. It also supports `ite` (if-then-else), `iff` (if-and-only-if, or EXOR) and `implies` (logical implication). \n\n### Output the truth table\n\n```python\nprint(f)\n```\n\nWill print the truth as a prime-irredudant cover, in this case:\n\n```python\nA&B&E + ~A&C&~D&E + ~A&~C&D&E + F\n```\n\nOr,\n\n```python\nprint(f.SOP())\n```\n\nResulting in \n\n```\n-----1 1\n0-011- 1\n0-101- 1\n11--1- 1\n```\n\nOr \n\n```python\nprint(f.isop())\n```\n\nResulting in \n\n```\n[{1, 2, 5}, {3, -4, 5, -1}, {-3, 4, 5, -1}, {6}]\n```\n\nAll three are the same cover. The first is a human-readable expression. The second is similar to Espresso and BLIF formats, and the third is the list of cubes where negative means negation and the nubmer is the variable number starting from 0.\n\n### Manipulate truth tables\n\nIn addition to the above, it supports permuting and negating inputs and the output, generating the list of all NPN-equivalent functions and a few other operations.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/sterin/pyaig", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyaig", "package_url": "https://pypi.org/project/pyaig/", "platform": "any", "project_url": "https://pypi.org/project/pyaig/", "project_urls": {"Homepage": "http://github.com/sterin/pyaig"}, "release_url": "https://pypi.org/project/pyaig/1.0.11/", "requires_dist": ["future", "click"], "requires_python": "", "summary": "A simple Python AIG package", "version": "1.0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyAIG: A simpe Python AIG and Truth Table package</h1>\n<h2>AIG</h2>\n<p>And-Inverter Graph (<a href=\"https://en.wikipedia.org/wiki/And-inverter_graph\" rel=\"nofollow\">AIG</a>) is a data structure for logic synthesis and verification. The code follows the <a href=\"http://fmv.jku.at/aiger/\" rel=\"nofollow\">AIGER</a> conventions.</p>\n<h2>Installation</h2>\n<p>Install using <code>pip</code>:</p>\n<pre>pip install .\n</pre>\n<h2>Truth Tables example</h2>\n<h3>Import the package</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyaig</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<h3>Create the truth table manger - the max number of variables is required</h3>\n<pre>m = truth_tables(6, \"ABCDEF\")\n</pre>\n<p>If the second parameter to <code>truth_tables</code> is provided, it automatically inserts the sequence of names into the global namespace</p>\n<h3>Build truth tables with operator overloading</h3>\n<pre><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">ite</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">C</span> <span class=\"o\">^</span> <span class=\"n\">D</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"n\">E</span> <span class=\"o\">|</span> <span class=\"n\">F</span>\n</pre>\n<p>The truth table support <code>|</code>, <code>&amp;</code>, <code>^</code>, and <code>~</code> for OR, AND, XOR, INVERT, respectively. It also supports <code>ite</code> (if-then-else), <code>iff</code> (if-and-only-if, or EXOR) and <code>implies</code> (logical implication).</p>\n<h3>Output the truth table</h3>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n</pre>\n<p>Will print the truth as a prime-irredudant cover, in this case:</p>\n<pre><span class=\"n\">A</span><span class=\"o\">&amp;</span><span class=\"n\">B</span><span class=\"o\">&amp;</span><span class=\"n\">E</span> <span class=\"o\">+</span> <span class=\"o\">~</span><span class=\"n\">A</span><span class=\"o\">&amp;</span><span class=\"n\">C</span><span class=\"o\">&amp;~</span><span class=\"n\">D</span><span class=\"o\">&amp;</span><span class=\"n\">E</span> <span class=\"o\">+</span> <span class=\"o\">~</span><span class=\"n\">A</span><span class=\"o\">&amp;~</span><span class=\"n\">C</span><span class=\"o\">&amp;</span><span class=\"n\">D</span><span class=\"o\">&amp;</span><span class=\"n\">E</span> <span class=\"o\">+</span> <span class=\"n\">F</span>\n</pre>\n<p>Or,</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">SOP</span><span class=\"p\">())</span>\n</pre>\n<p>Resulting in</p>\n<pre><code>-----1 1\n0-011- 1\n0-101- 1\n11--1- 1\n</code></pre>\n<p>Or</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">isop</span><span class=\"p\">())</span>\n</pre>\n<p>Resulting in</p>\n<pre><code>[{1, 2, 5}, {3, -4, 5, -1}, {-3, 4, 5, -1}, {6}]\n</code></pre>\n<p>All three are the same cover. The first is a human-readable expression. The second is similar to Espresso and BLIF formats, and the third is the list of cubes where negative means negation and the nubmer is the variable number starting from 0.</p>\n<h3>Manipulate truth tables</h3>\n<p>In addition to the above, it supports permuting and negating inputs and the output, generating the list of all NPN-equivalent functions and a few other operations.</p>\n\n          </div>"}, "last_serial": 6711894, "releases": {"1.0.11": [{"comment_text": "", "digests": {"md5": "c2090cb52b910b42995eab7226be301e", "sha256": "d1b4e5fffc84e5c48e72284ce8925c027abb678edda093672aeccbdd0863baa2"}, "downloads": -1, "filename": "pyaig-1.0.11-py2-none-any.whl", "has_sig": false, "md5_digest": "c2090cb52b910b42995eab7226be301e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 23142, "upload_time": "2020-02-27T16:19:47", "upload_time_iso_8601": "2020-02-27T16:19:47.851182Z", "url": "https://files.pythonhosted.org/packages/c5/50/798bd5ef54d1a63e5cbb3436f21da0b8b299e0e3486c2cf96a30be1162b3/pyaig-1.0.11-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4887f90dba6e2e4c654a2ca3d43b6659", "sha256": "2798221799501027c7b5e96639172cea37474e6763bdd6aa0ec1bb7bab054f7b"}, "downloads": -1, "filename": "pyaig-1.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "4887f90dba6e2e4c654a2ca3d43b6659", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23141, "upload_time": "2020-02-27T16:20:12", "upload_time_iso_8601": "2020-02-27T16:20:12.564180Z", "url": "https://files.pythonhosted.org/packages/4e/a8/4b5ace316797045bc0312c79fdb1a746f3bcbfe7c980ab67aea0c335f0ee/pyaig-1.0.11-py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a5c93d19d0dc5e5d7d805f49e24f20fa", "sha256": "33bd594f1a9979859cc79422ff10e9551dc3ccb75e9afdb971b7844b2b307749"}, "downloads": -1, "filename": "PyAIG-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a5c93d19d0dc5e5d7d805f49e24f20fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18558, "upload_time": "2020-02-20T08:44:10", "upload_time_iso_8601": "2020-02-20T08:44:10.925237Z", "url": "https://files.pythonhosted.org/packages/dc/e2/40f558fb7cd722b63c3d650ddc944d929aab5b02d05b538a2681599aac0c/PyAIG-1.0.2.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "440990660b7990d7fc1b64c98abf3985", "sha256": "030be87c9536ec04d26d63c8bbd4a96b13e37fdb75c9f9afbe11dd78a578f7f7"}, "downloads": -1, "filename": "pyaig-1.0.4.tar.gz", "has_sig": false, "md5_digest": "440990660b7990d7fc1b64c98abf3985", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18596, "upload_time": "2020-02-22T20:31:24", "upload_time_iso_8601": "2020-02-22T20:31:24.105311Z", "url": "https://files.pythonhosted.org/packages/10/7f/3157453cbab835557b7d77cda2165bd4b6d09dede7023206e0252619a06d/pyaig-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "91b2451f6d60d4939ea7aefa7ebbceb4", "sha256": "82d6d07fa14d7b8acec787ea389a98f3a4369ec76156a8858a61fcc0d41904a9"}, "downloads": -1, "filename": "pyaig-1.0.5.tar.gz", "has_sig": false, "md5_digest": "91b2451f6d60d4939ea7aefa7ebbceb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18691, "upload_time": "2020-02-23T17:35:41", "upload_time_iso_8601": "2020-02-23T17:35:41.516248Z", "url": "https://files.pythonhosted.org/packages/43/0c/fed585c0da9c28bb56edf5e8e3986b0b4cd5285ceb27f7635f82181ec64c/pyaig-1.0.5.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "5b29b02d0d1d29773b89ae052ee12d56", "sha256": "dfd8584ee7bd0a8617b45304922063e737aec01c8f5228481d129fe0f979aa21"}, "downloads": -1, "filename": "pyaig-1.0.7.tar.gz", "has_sig": false, "md5_digest": "5b29b02d0d1d29773b89ae052ee12d56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20151, "upload_time": "2020-02-27T12:14:51", "upload_time_iso_8601": "2020-02-27T12:14:51.289780Z", "url": "https://files.pythonhosted.org/packages/e8/0f/568a163a9bcb45073d31207dfd1b91d19d891dde4c1dddd6c8817c39e598/pyaig-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "ad99c01f6c082a2a2e862eb8b662e1da", "sha256": "48ee6b02f593db3bc193b18e7a566c7b1afe54ddb185830816a451f0f871f760"}, "downloads": -1, "filename": "pyaig-1.0.8.tar.gz", "has_sig": false, "md5_digest": "ad99c01f6c082a2a2e862eb8b662e1da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18695, "upload_time": "2020-02-27T14:00:45", "upload_time_iso_8601": "2020-02-27T14:00:45.827259Z", "url": "https://files.pythonhosted.org/packages/2e/45/b958587c3c248654bc08e762de48560bd75a33ae95cfbfb24994fa8c57c7/pyaig-1.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c2090cb52b910b42995eab7226be301e", "sha256": "d1b4e5fffc84e5c48e72284ce8925c027abb678edda093672aeccbdd0863baa2"}, "downloads": -1, "filename": "pyaig-1.0.11-py2-none-any.whl", "has_sig": false, "md5_digest": "c2090cb52b910b42995eab7226be301e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 23142, "upload_time": "2020-02-27T16:19:47", "upload_time_iso_8601": "2020-02-27T16:19:47.851182Z", "url": "https://files.pythonhosted.org/packages/c5/50/798bd5ef54d1a63e5cbb3436f21da0b8b299e0e3486c2cf96a30be1162b3/pyaig-1.0.11-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4887f90dba6e2e4c654a2ca3d43b6659", "sha256": "2798221799501027c7b5e96639172cea37474e6763bdd6aa0ec1bb7bab054f7b"}, "downloads": -1, "filename": "pyaig-1.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "4887f90dba6e2e4c654a2ca3d43b6659", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23141, "upload_time": "2020-02-27T16:20:12", "upload_time_iso_8601": "2020-02-27T16:20:12.564180Z", "url": "https://files.pythonhosted.org/packages/4e/a8/4b5ace316797045bc0312c79fdb1a746f3bcbfe7c980ab67aea0c335f0ee/pyaig-1.0.11-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:10:57 2020"}