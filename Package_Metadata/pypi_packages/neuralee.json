{"info": {"author": "Jiankang Xiong", "author_email": "hibearme@163.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "========\nNeuralEE\n========\n.. image:: https://travis-ci.org/HiBearME/NeuralEE.svg?branch=master\n    :target: https://travis-ci.org/HiBearME/NeuralEE\n    :alt: Build Status\n.. image:: https://readthedocs.org/projects/neuralee/badge/?version=latest\n    :target: https://neuralee.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n* Free software: MIT license\n* Documentation: https://neuralee.readthedocs.io.\n\nThis is an applicable version for NeuralEE.\n\n1. The datasets loading and preprocessing module is modified from\n   `scVI <https://github.com/YosefLab/scVI>`_.\n2. Define NeuralEE class and some auxiliary function, mainly for cuda\n   computation, except like entropic affinity calculation which is \n   quite faster computed on cpu.\n3. General elastic embedding algorithm on cuda is given based on matlab code\n   from `Max Vladymyrov <https://eng.ucmerced.edu/people/vladymyrov>`_.\n4. Add some demos of notebook helping to reproduce.\n\n------------\nInstallation\n------------\n\n1. Install Python 3.7. \n\n2. Install `PyTorch <https://pytorch.org>`_. If you have an NVIDIA GPU, be sure\n   to install a version of PyTorch that supports it. NeuralEE runs much faster\n   with a discrete GPU.  \n\n3. Install NeuralEE through pip or from GitHub:\n\n.. code-block:: bash\n\n    pip install neuralee\n\n.. code-block:: bash\n\n    git clone git://github.com/HiBearME/NeuralEE.git\n    cd NeuralEE\n    python setup.py install --user\n\n--------\nTutorial\n--------\n\n.. code-block:: python\n\n    from neuralee.dataset import CortexDataset \n    from neuralee.embedding import NeuralEE\n\n    import torch\n\n    # detect whether to use GPU.\n    device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n\n    # 1 load dataset.\n    cortex_dataset = CortexDataset(save_path='../data/')\n\n    # 2 preprocess dataset. logarithm transformation, genes subsample and standard scale.\n    cortex_dataset.log_shift()\n    cortex_dataset.subsample_genes(558)  \n    cortex_dataset.standardscale()\n\n    # 3 embedding.\n    # 3.1 not using mini-batch trick, if dataset is not large.\n    # 3.1.1 calculate weights matrix\n    cortex_dataset.affinity()\n\n    # 3.1.2 initialize NeuralEE class.\n    NEE = NeuralEE(cortex_dataset, device=device)\n\n    # 3.1.3.1 elastic embedding.\n    results = NEE.EE()\n\n    # 3.1.3.2 NeuralEE.\n    results_Neural = NEE.fine_tune()\n\n    # 3.2 introduce mini-batch trick.\n    # 3.2.1 calculate weights matrix on each batch.\n    cortex_dataset.affinity_split(N_small=0.25)\n\n    # 3.2.2 initialize NeuralEE class.\n    NEE = NeuralEE(cortex_dataset, device=device)\n\n    # 3.2.3 elastic embedding.\n    results_Neural_with4batches = NEE.fine_tune()\n\nFor more detailed tutorials and reproduction of original paper's results, check at\n`notebook <https://github.com/HiBearME/NeuralEE/tree/master/tests/notebooks>`_\nfiles.\n\n--------\nExamples\n--------\n\nHEMATO\n\n.. image:: https://raw.githubusercontent.com/HiBearME/NeuralEE/master/img/hemato.png\n    :alt: NeuralEE of HEMATO\n\nBRAIN LARGE\n\n.. image:: https://raw.githubusercontent.com/HiBearME/NeuralEE/master/img/brainlarge.png\n    :alt: NeuralEE of BRAIN LARGE\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HibearME/NeuralEE", "keywords": "neuralee", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "neuralee", "package_url": "https://pypi.org/project/neuralee/", "platform": "", "project_url": "https://pypi.org/project/neuralee/", "project_urls": {"Homepage": "https://github.com/HibearME/NeuralEE"}, "release_url": "https://pypi.org/project/neuralee/0.1.4/", "requires_dist": ["numpy (>=1.16.3)", "scipy (>=1.1.0)", "torch (>=1.0.1)", "matplotlib (>=2.2.3)", "tqdm (>=4.26.0)", "anndata (>=0.6.19)", "scikit-learn (>=0.19.2)", "h5py (>=2.8.0)", "pandas (>=0.23.4)", "loompy (>=2.0.17)", "jupyter (>=1.0.0)", "ipython (>=6.5.0)"], "requires_python": "", "summary": "Scalable Visualization of Massive Single-Cell DataUsing Neural Networks", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/HiBearME/NeuralEE\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dab6d2b5b2363c10641b1bb7c02108d5772d02f0/68747470733a2f2f7472617669732d63692e6f72672f4869426561724d452f4e657572616c45452e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://neuralee.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f9bb11778a5f6e246a33f6c6d473ea77a628138/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6e657572616c65652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<ul>\n<li>Free software: MIT license</li>\n<li>Documentation: <a href=\"https://neuralee.readthedocs.io\" rel=\"nofollow\">https://neuralee.readthedocs.io</a>.</li>\n</ul>\n<p>This is an applicable version for NeuralEE.</p>\n<ol>\n<li>The datasets loading and preprocessing module is modified from\n<a href=\"https://github.com/YosefLab/scVI\" rel=\"nofollow\">scVI</a>.</li>\n<li>Define NeuralEE class and some auxiliary function, mainly for cuda\ncomputation, except like entropic affinity calculation which is\nquite faster computed on cpu.</li>\n<li>General elastic embedding algorithm on cuda is given based on matlab code\nfrom <a href=\"https://eng.ucmerced.edu/people/vladymyrov\" rel=\"nofollow\">Max Vladymyrov</a>.</li>\n<li>Add some demos of notebook helping to reproduce.</li>\n</ol>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li>Install Python 3.7.</li>\n<li>Install <a href=\"https://pytorch.org\" rel=\"nofollow\">PyTorch</a>. If you have an NVIDIA GPU, be sure\nto install a version of PyTorch that supports it. NeuralEE runs much faster\nwith a discrete GPU.</li>\n<li>Install NeuralEE through pip or from GitHub:</li>\n</ol>\n<pre>pip install neuralee\n</pre>\n<pre>git clone git://github.com/HiBearME/NeuralEE.git\n<span class=\"nb\">cd</span> NeuralEE\npython setup.py install --user\n</pre>\n</div>\n<div id=\"tutorial\">\n<h2>Tutorial</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">neuralee.dataset</span> <span class=\"kn\">import</span> <span class=\"n\">CortexDataset</span>\n<span class=\"kn\">from</span> <span class=\"nn\">neuralee.embedding</span> <span class=\"kn\">import</span> <span class=\"n\">NeuralEE</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n\n<span class=\"c1\"># detect whether to use GPU.</span>\n<span class=\"n\">device</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"p\">(</span><span class=\"s1\">'cuda'</span> <span class=\"k\">if</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"o\">.</span><span class=\"n\">is_available</span><span class=\"p\">()</span> <span class=\"k\">else</span> <span class=\"s1\">'cpu'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># 1 load dataset.</span>\n<span class=\"n\">cortex_dataset</span> <span class=\"o\">=</span> <span class=\"n\">CortexDataset</span><span class=\"p\">(</span><span class=\"n\">save_path</span><span class=\"o\">=</span><span class=\"s1\">'../data/'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># 2 preprocess dataset. logarithm transformation, genes subsample and standard scale.</span>\n<span class=\"n\">cortex_dataset</span><span class=\"o\">.</span><span class=\"n\">log_shift</span><span class=\"p\">()</span>\n<span class=\"n\">cortex_dataset</span><span class=\"o\">.</span><span class=\"n\">subsample_genes</span><span class=\"p\">(</span><span class=\"mi\">558</span><span class=\"p\">)</span>\n<span class=\"n\">cortex_dataset</span><span class=\"o\">.</span><span class=\"n\">standardscale</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># 3 embedding.</span>\n<span class=\"c1\"># 3.1 not using mini-batch trick, if dataset is not large.</span>\n<span class=\"c1\"># 3.1.1 calculate weights matrix</span>\n<span class=\"n\">cortex_dataset</span><span class=\"o\">.</span><span class=\"n\">affinity</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># 3.1.2 initialize NeuralEE class.</span>\n<span class=\"n\">NEE</span> <span class=\"o\">=</span> <span class=\"n\">NeuralEE</span><span class=\"p\">(</span><span class=\"n\">cortex_dataset</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"n\">device</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># 3.1.3.1 elastic embedding.</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">NEE</span><span class=\"o\">.</span><span class=\"n\">EE</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># 3.1.3.2 NeuralEE.</span>\n<span class=\"n\">results_Neural</span> <span class=\"o\">=</span> <span class=\"n\">NEE</span><span class=\"o\">.</span><span class=\"n\">fine_tune</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># 3.2 introduce mini-batch trick.</span>\n<span class=\"c1\"># 3.2.1 calculate weights matrix on each batch.</span>\n<span class=\"n\">cortex_dataset</span><span class=\"o\">.</span><span class=\"n\">affinity_split</span><span class=\"p\">(</span><span class=\"n\">N_small</span><span class=\"o\">=</span><span class=\"mf\">0.25</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># 3.2.2 initialize NeuralEE class.</span>\n<span class=\"n\">NEE</span> <span class=\"o\">=</span> <span class=\"n\">NeuralEE</span><span class=\"p\">(</span><span class=\"n\">cortex_dataset</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"n\">device</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># 3.2.3 elastic embedding.</span>\n<span class=\"n\">results_Neural_with4batches</span> <span class=\"o\">=</span> <span class=\"n\">NEE</span><span class=\"o\">.</span><span class=\"n\">fine_tune</span><span class=\"p\">()</span>\n</pre>\n<p>For more detailed tutorials and reproduction of original paper\u2019s results, check at\n<a href=\"https://github.com/HiBearME/NeuralEE/tree/master/tests/notebooks\" rel=\"nofollow\">notebook</a>\nfiles.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>HEMATO</p>\n<img alt=\"NeuralEE of HEMATO\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7872216d77becb1916d165af04ab286d80e4aa1c/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4869426561724d452f4e657572616c45452f6d61737465722f696d672f68656d61746f2e706e67\">\n<p>BRAIN LARGE</p>\n<img alt=\"NeuralEE of BRAIN LARGE\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb4ad735a74741124a8dd3ec566d21b2897dac95/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4869426561724d452f4e657572616c45452f6d61737465722f696d672f627261696e6c617267652e706e67\">\n</div>\n\n          </div>"}, "last_serial": 5504637, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "7e926bd4fb3450072b172600f3123db7", "sha256": "bce852c98d4efd601ce04486df4d75d37142869284636c4bbf301dfc39e68f4b"}, "downloads": -1, "filename": "neuralee-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7e926bd4fb3450072b172600f3123db7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36914, "upload_time": "2019-05-28T21:15:32", "upload_time_iso_8601": "2019-05-28T21:15:32.383610Z", "url": "https://files.pythonhosted.org/packages/da/4f/2f90e17c54a72a4eba88f016700297b6400858ed20db117f608571e0da56/neuralee-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c254dc3d56c6a440783369954803eab8", "sha256": "69203862eb79f954790f71bab83561fe1669920ab013126f7ddbd3c42d6b2e92"}, "downloads": -1, "filename": "neuralee-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c254dc3d56c6a440783369954803eab8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28899, "upload_time": "2019-05-28T21:15:34", "upload_time_iso_8601": "2019-05-28T21:15:34.435494Z", "url": "https://files.pythonhosted.org/packages/fc/fc/8f10578d5981c57f05d88b15e91c724236f59f438b0eb3b578d430668cab/neuralee-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "90ab218552adcb7bce5c4d5c54e3484f", "sha256": "5a5f30044d6c40ec6a9d1664cf64341935b9fd4d38872176f46c32b4a738919e"}, "downloads": -1, "filename": "neuralee-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "90ab218552adcb7bce5c4d5c54e3484f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 37114, "upload_time": "2019-06-02T15:37:45", "upload_time_iso_8601": "2019-06-02T15:37:45.132912Z", "url": "https://files.pythonhosted.org/packages/a7/ec/c61a58607b62d06cfd587d198ff1b7673054629a2a9ea8468d0feba73005/neuralee-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d6890fff7cc7fc895dd207e2e869102", "sha256": "224d16a5e3ef58a974654a3d0bf44128949a7a2fdc7a4a76eb3bb2e2b9781f09"}, "downloads": -1, "filename": "neuralee-0.1.3.tar.gz", "has_sig": false, "md5_digest": "2d6890fff7cc7fc895dd207e2e869102", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29968, "upload_time": "2019-06-02T15:37:47", "upload_time_iso_8601": "2019-06-02T15:37:47.171441Z", "url": "https://files.pythonhosted.org/packages/10/b9/5935e8e578cc04c360f4c02a89e0612d021dcf65318eb783d4165cd39d48/neuralee-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "3efe868e581b1b7aa197827e72048525", "sha256": "7524d1334abb4731b9a4ee425f18055c4df46ee23c544fc4e3f65da914eb7585"}, "downloads": -1, "filename": "neuralee-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3efe868e581b1b7aa197827e72048525", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36912, "upload_time": "2019-07-09T04:21:26", "upload_time_iso_8601": "2019-07-09T04:21:26.595269Z", "url": "https://files.pythonhosted.org/packages/2e/da/93ccec56dd8804c8890738af45ed242a45ee6b18d55f777730b7366c7722/neuralee-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dea59a1b2d5db252965e62159330e2cd", "sha256": "b08643c8c021b809f29b37f2658f0494775eed1ffbb93baa598d2a91a9ba2401"}, "downloads": -1, "filename": "neuralee-0.1.4.tar.gz", "has_sig": false, "md5_digest": "dea59a1b2d5db252965e62159330e2cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30042, "upload_time": "2019-07-09T04:21:28", "upload_time_iso_8601": "2019-07-09T04:21:28.299757Z", "url": "https://files.pythonhosted.org/packages/18/a3/fdd22e2444a9d7dee7b52f674aa29e8c31f2da2559d59ab60135753b3eb4/neuralee-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3efe868e581b1b7aa197827e72048525", "sha256": "7524d1334abb4731b9a4ee425f18055c4df46ee23c544fc4e3f65da914eb7585"}, "downloads": -1, "filename": "neuralee-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3efe868e581b1b7aa197827e72048525", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36912, "upload_time": "2019-07-09T04:21:26", "upload_time_iso_8601": "2019-07-09T04:21:26.595269Z", "url": "https://files.pythonhosted.org/packages/2e/da/93ccec56dd8804c8890738af45ed242a45ee6b18d55f777730b7366c7722/neuralee-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dea59a1b2d5db252965e62159330e2cd", "sha256": "b08643c8c021b809f29b37f2658f0494775eed1ffbb93baa598d2a91a9ba2401"}, "downloads": -1, "filename": "neuralee-0.1.4.tar.gz", "has_sig": false, "md5_digest": "dea59a1b2d5db252965e62159330e2cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30042, "upload_time": "2019-07-09T04:21:28", "upload_time_iso_8601": "2019-07-09T04:21:28.299757Z", "url": "https://files.pythonhosted.org/packages/18/a3/fdd22e2444a9d7dee7b52f674aa29e8c31f2da2559d59ab60135753b3eb4/neuralee-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:48 2020"}