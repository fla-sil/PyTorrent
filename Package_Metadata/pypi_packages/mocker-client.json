{"info": {"author": "Shevchenko Vladimir", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "===========================\nclient for http mock server\n===========================\n\n.. image:: https://badge.fury.io/py/mocker-client.svg\n    :target: https://badge.fury.io/py/mocker-client\n\n.. image:: https://codecov.io/gh/vilus/mocker_client/branch/master/graph/badge.svg\n     :target: https://codecov.io/gh/vilus/mocker_client\n\n.. image:: https://travis-ci.org/vilus/mocker_client.svg?branch=master\n       :target: https://travis-ci.org/vilus/mocker_client\n\npython client for create/delete mocks on mock server\n\n\nExample\n--------\n.. code-block:: bash\n\n    pip install mocker-client\n\n\n.. code-block:: python\n\n    from mocker_client import MockServer, Mock\n\n\n    mock = MockServer(url='http://127.0.0.1:8080/mocker_api/mocks/').create_mock(\n        {'name': 'hi', 'route': '/q', 'method': 'get', 'responses': 'Hi_1'}\n    )\n    # actions\n    mock.delete()\n    #\n    help(MockServer.create_mock)\n    create_mock(self, data)\n        :param data: dict with keys:\n          'name' - optional, '' by default\n          'route' - for example '/some_path'\n          'method' - a http method like GET, POST, PUT, etc\n          'response_type' - optional, choice from ['single', 'sequence', 'cycle'], 'single' by default\n          'responses' - list of dicts with keys (or just dict if response_type is single):\n            'body' - response body\n            'return_code' - http status code, like 200\n            'headers' - dict with http headers\n        :returns Mock object\n    #\n    help(MockServer.create_mocks)\n    create_mocks(self, list_data)\n        :param list_data: list of dicts with keys:\n          'name' - optional, '' by default\n          'route' - for example '/some_path'\n          'method' - a http method like GET, POST, PUT, etc\n          'response_type' - optional, choice from ['single', 'sequence', 'cycle'], 'single' by default\n          'responses' - list of dicts with keys (or just dict if response_type is single):\n            'body' - response body\n            'return_code' - http status code, like 200\n            'headers' - dict with http headers\n        :returns list of Mock objects\n    #\n    help(Mock.delete)\n    delete(self)\n        delete mock on server and return its info - {is_expired: bool}", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vilus/mocker_client", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mocker-client", "package_url": "https://pypi.org/project/mocker-client/", "platform": "", "project_url": "https://pypi.org/project/mocker-client/", "project_urls": {"Homepage": "https://github.com/vilus/mocker_client"}, "release_url": "https://pypi.org/project/mocker-client/0.0.5dev1/", "requires_dist": null, "requires_python": "", "summary": "client for http mock server https://github.com/vilus/mocker", "version": "0.0.5dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/mocker-client\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/mocker-client.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7de1ba20e4e1469054f8debb79c5b227f50a5556/68747470733a2f2f62616467652e667572792e696f2f70792f6d6f636b65722d636c69656e742e737667\"></a>\n<a href=\"https://codecov.io/gh/vilus/mocker_client\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/vilus/mocker_client/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e53e3875f9216a04ede652ba3635734daa4ac22b/68747470733a2f2f636f6465636f762e696f2f67682f76696c75732f6d6f636b65725f636c69656e742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://travis-ci.org/vilus/mocker_client\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/vilus/mocker_client.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f59afba611156833cc29181c14edeeaae8458101/68747470733a2f2f7472617669732d63692e6f72672f76696c75732f6d6f636b65725f636c69656e742e7376673f6272616e63683d6d6173746572\"></a>\n<p>python client for create/delete mocks on mock server</p>\n<div id=\"example\">\n<h2>Example</h2>\n<pre>pip install mocker-client\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mocker_client</span> <span class=\"kn\">import</span> <span class=\"n\">MockServer</span><span class=\"p\">,</span> <span class=\"n\">Mock</span>\n\n\n<span class=\"n\">mock</span> <span class=\"o\">=</span> <span class=\"n\">MockServer</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'http://127.0.0.1:8080/mocker_api/mocks/'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">create_mock</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'hi'</span><span class=\"p\">,</span> <span class=\"s1\">'route'</span><span class=\"p\">:</span> <span class=\"s1\">'/q'</span><span class=\"p\">,</span> <span class=\"s1\">'method'</span><span class=\"p\">:</span> <span class=\"s1\">'get'</span><span class=\"p\">,</span> <span class=\"s1\">'responses'</span><span class=\"p\">:</span> <span class=\"s1\">'Hi_1'</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># actions</span>\n<span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n<span class=\"c1\">#</span>\n<span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">MockServer</span><span class=\"o\">.</span><span class=\"n\">create_mock</span><span class=\"p\">)</span>\n<span class=\"n\">create_mock</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">)</span>\n    <span class=\"p\">:</span><span class=\"n\">param</span> <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"k\">with</span> <span class=\"n\">keys</span><span class=\"p\">:</span>\n      <span class=\"s1\">'name'</span> <span class=\"o\">-</span> <span class=\"n\">optional</span><span class=\"p\">,</span> <span class=\"s1\">''</span> <span class=\"n\">by</span> <span class=\"n\">default</span>\n      <span class=\"s1\">'route'</span> <span class=\"o\">-</span> <span class=\"k\">for</span> <span class=\"n\">example</span> <span class=\"s1\">'/some_path'</span>\n      <span class=\"s1\">'method'</span> <span class=\"o\">-</span> <span class=\"n\">a</span> <span class=\"n\">http</span> <span class=\"n\">method</span> <span class=\"n\">like</span> <span class=\"n\">GET</span><span class=\"p\">,</span> <span class=\"n\">POST</span><span class=\"p\">,</span> <span class=\"n\">PUT</span><span class=\"p\">,</span> <span class=\"n\">etc</span>\n      <span class=\"s1\">'response_type'</span> <span class=\"o\">-</span> <span class=\"n\">optional</span><span class=\"p\">,</span> <span class=\"n\">choice</span> <span class=\"kn\">from</span> <span class=\"p\">[</span><span class=\"s1\">'single'</span><span class=\"p\">,</span> <span class=\"s1\">'sequence'</span><span class=\"p\">,</span> <span class=\"s1\">'cycle'</span><span class=\"p\">],</span> <span class=\"s1\">'single'</span> <span class=\"n\">by</span> <span class=\"n\">default</span>\n      <span class=\"s1\">'responses'</span> <span class=\"o\">-</span> <span class=\"nb\">list</span> <span class=\"n\">of</span> <span class=\"n\">dicts</span> <span class=\"k\">with</span> <span class=\"n\">keys</span> <span class=\"p\">(</span><span class=\"ow\">or</span> <span class=\"n\">just</span> <span class=\"nb\">dict</span> <span class=\"k\">if</span> <span class=\"n\">response_type</span> <span class=\"ow\">is</span> <span class=\"n\">single</span><span class=\"p\">):</span>\n        <span class=\"s1\">'body'</span> <span class=\"o\">-</span> <span class=\"n\">response</span> <span class=\"n\">body</span>\n        <span class=\"s1\">'return_code'</span> <span class=\"o\">-</span> <span class=\"n\">http</span> <span class=\"n\">status</span> <span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">like</span> <span class=\"mi\">200</span>\n        <span class=\"s1\">'headers'</span> <span class=\"o\">-</span> <span class=\"nb\">dict</span> <span class=\"k\">with</span> <span class=\"n\">http</span> <span class=\"n\">headers</span>\n    <span class=\"p\">:</span><span class=\"n\">returns</span> <span class=\"n\">Mock</span> <span class=\"nb\">object</span>\n<span class=\"c1\">#</span>\n<span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">MockServer</span><span class=\"o\">.</span><span class=\"n\">create_mocks</span><span class=\"p\">)</span>\n<span class=\"n\">create_mocks</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">list_data</span><span class=\"p\">)</span>\n    <span class=\"p\">:</span><span class=\"n\">param</span> <span class=\"n\">list_data</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"n\">of</span> <span class=\"n\">dicts</span> <span class=\"k\">with</span> <span class=\"n\">keys</span><span class=\"p\">:</span>\n      <span class=\"s1\">'name'</span> <span class=\"o\">-</span> <span class=\"n\">optional</span><span class=\"p\">,</span> <span class=\"s1\">''</span> <span class=\"n\">by</span> <span class=\"n\">default</span>\n      <span class=\"s1\">'route'</span> <span class=\"o\">-</span> <span class=\"k\">for</span> <span class=\"n\">example</span> <span class=\"s1\">'/some_path'</span>\n      <span class=\"s1\">'method'</span> <span class=\"o\">-</span> <span class=\"n\">a</span> <span class=\"n\">http</span> <span class=\"n\">method</span> <span class=\"n\">like</span> <span class=\"n\">GET</span><span class=\"p\">,</span> <span class=\"n\">POST</span><span class=\"p\">,</span> <span class=\"n\">PUT</span><span class=\"p\">,</span> <span class=\"n\">etc</span>\n      <span class=\"s1\">'response_type'</span> <span class=\"o\">-</span> <span class=\"n\">optional</span><span class=\"p\">,</span> <span class=\"n\">choice</span> <span class=\"kn\">from</span> <span class=\"p\">[</span><span class=\"s1\">'single'</span><span class=\"p\">,</span> <span class=\"s1\">'sequence'</span><span class=\"p\">,</span> <span class=\"s1\">'cycle'</span><span class=\"p\">],</span> <span class=\"s1\">'single'</span> <span class=\"n\">by</span> <span class=\"n\">default</span>\n      <span class=\"s1\">'responses'</span> <span class=\"o\">-</span> <span class=\"nb\">list</span> <span class=\"n\">of</span> <span class=\"n\">dicts</span> <span class=\"k\">with</span> <span class=\"n\">keys</span> <span class=\"p\">(</span><span class=\"ow\">or</span> <span class=\"n\">just</span> <span class=\"nb\">dict</span> <span class=\"k\">if</span> <span class=\"n\">response_type</span> <span class=\"ow\">is</span> <span class=\"n\">single</span><span class=\"p\">):</span>\n        <span class=\"s1\">'body'</span> <span class=\"o\">-</span> <span class=\"n\">response</span> <span class=\"n\">body</span>\n        <span class=\"s1\">'return_code'</span> <span class=\"o\">-</span> <span class=\"n\">http</span> <span class=\"n\">status</span> <span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">like</span> <span class=\"mi\">200</span>\n        <span class=\"s1\">'headers'</span> <span class=\"o\">-</span> <span class=\"nb\">dict</span> <span class=\"k\">with</span> <span class=\"n\">http</span> <span class=\"n\">headers</span>\n    <span class=\"p\">:</span><span class=\"n\">returns</span> <span class=\"nb\">list</span> <span class=\"n\">of</span> <span class=\"n\">Mock</span> <span class=\"n\">objects</span>\n<span class=\"c1\">#</span>\n<span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">Mock</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">)</span>\n<span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n    <span class=\"n\">delete</span> <span class=\"n\">mock</span> <span class=\"n\">on</span> <span class=\"n\">server</span> <span class=\"ow\">and</span> <span class=\"k\">return</span> <span class=\"n\">its</span> <span class=\"n\">info</span> <span class=\"o\">-</span> <span class=\"p\">{</span><span class=\"n\">is_expired</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">}</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5990222, "releases": {"0.0.1dev1": [{"comment_text": "", "digests": {"md5": "1c260383f743739a1aaad9e42b35d581", "sha256": "9c1fef5b2a895d92119b463553c7295c4755966cf233b3feb429be8332821595"}, "downloads": -1, "filename": "mocker_client-0.0.1dev1.tar.gz", "has_sig": false, "md5_digest": "1c260383f743739a1aaad9e42b35d581", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1158, "upload_time": "2019-09-12T18:46:51", "upload_time_iso_8601": "2019-09-12T18:46:51.137268Z", "url": "https://files.pythonhosted.org/packages/3e/a8/f9bab8a03479f336fdd1eb576f6e0554bdaeae26a2075081517f6ee4fae8/mocker_client-0.0.1dev1.tar.gz", "yanked": false}], "0.0.2dev1": [{"comment_text": "", "digests": {"md5": "b47893f5d8fe2642e8214e1cbd55d196", "sha256": "256700d6dd93c6fa190d322876abfc0109b2a6c79ff47ac50b9a8520eacb6744"}, "downloads": -1, "filename": "mocker_client-0.0.2dev1.tar.gz", "has_sig": false, "md5_digest": "b47893f5d8fe2642e8214e1cbd55d196", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1637, "upload_time": "2019-09-13T11:08:28", "upload_time_iso_8601": "2019-09-13T11:08:28.749144Z", "url": "https://files.pythonhosted.org/packages/be/d9/f7816073867c0f63bf6731d6c862c15119fcfec99a5eed1e471a04b495c1/mocker_client-0.0.2dev1.tar.gz", "yanked": false}], "0.0.3dev1": [{"comment_text": "", "digests": {"md5": "c7d6aa413fe66b1948a6e57e2d3aeeaa", "sha256": "65c96e3e547a763030f96ba1b9da50f1dc5a3eb19647e7a98fbff907066a8a51"}, "downloads": -1, "filename": "mocker_client-0.0.3dev1.tar.gz", "has_sig": false, "md5_digest": "c7d6aa413fe66b1948a6e57e2d3aeeaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1706, "upload_time": "2019-09-13T17:38:23", "upload_time_iso_8601": "2019-09-13T17:38:23.586233Z", "url": "https://files.pythonhosted.org/packages/dd/6e/ba68afcf875c30d174b6b8fa90421fcfbc8953eca56564cd0d98452694c9/mocker_client-0.0.3dev1.tar.gz", "yanked": false}], "0.0.4dev1": [{"comment_text": "", "digests": {"md5": "508fc48c3f90d94c9ea0a5e5b06da727", "sha256": "5f66018138784e0cb1dac8544a7b15ea6682814458bc0f07ebdc1b810124c624"}, "downloads": -1, "filename": "mocker_client-0.0.4dev1.tar.gz", "has_sig": false, "md5_digest": "508fc48c3f90d94c9ea0a5e5b06da727", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1704, "upload_time": "2019-09-13T17:44:41", "upload_time_iso_8601": "2019-09-13T17:44:41.128555Z", "url": "https://files.pythonhosted.org/packages/93/1e/cbeb58fb74c18750c7520a9e2b2165accc2b13b8dd93257a2d3f2fe6a244/mocker_client-0.0.4dev1.tar.gz", "yanked": false}], "0.0.5dev1": [{"comment_text": "", "digests": {"md5": "c53b3cc94e422436087a9f6642f07d08", "sha256": "ff8474f049dc859d2eb70e0469e28583cac8587e7832be13b4c372169efcf719"}, "downloads": -1, "filename": "mocker_client-0.0.5dev1.tar.gz", "has_sig": false, "md5_digest": "c53b3cc94e422436087a9f6642f07d08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1807, "upload_time": "2019-10-17T14:49:44", "upload_time_iso_8601": "2019-10-17T14:49:44.574570Z", "url": "https://files.pythonhosted.org/packages/64/61/523ad979407a4453955495b7e4ff476c5f5e2ed2d0f574322c0e5473aba3/mocker_client-0.0.5dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c53b3cc94e422436087a9f6642f07d08", "sha256": "ff8474f049dc859d2eb70e0469e28583cac8587e7832be13b4c372169efcf719"}, "downloads": -1, "filename": "mocker_client-0.0.5dev1.tar.gz", "has_sig": false, "md5_digest": "c53b3cc94e422436087a9f6642f07d08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1807, "upload_time": "2019-10-17T14:49:44", "upload_time_iso_8601": "2019-10-17T14:49:44.574570Z", "url": "https://files.pythonhosted.org/packages/64/61/523ad979407a4453955495b7e4ff476c5f5e2ed2d0f574322c0e5473aba3/mocker_client-0.0.5dev1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:04 2020"}