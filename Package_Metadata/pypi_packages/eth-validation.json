{"info": {"author": "Jason Carver", "author_email": "ethcalibur+pip@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "eth-validation\n==============\n\n|Join the chat at https://gitter.im/ethereum/eth-validation|\n\n|Build Status|\n\nPython tools for validating Ethereum-related objects\n\n-  Python 3.5+ support\n\nRead more in the `documentation on\nReadTheDocs <http://eth-validation.readthedocs.io/>`__. `View the change\nlog on Github <docs/releases.rst>`__.\n\nQuickstart\n----------\n\n.. code:: sh\n\n    pip install eth-validation\n\nDeveloper setup\n---------------\n\nIf you would like to hack on eth-validation, set up your dev environment\nwith:\n\n.. code:: sh\n\n\n    git clone git@github.com:ethereum/eth-validation.git\n    cd eth-validation\n    virtualenv -p python3 venv\n    . venv/bin/activate\n    pip install -e .[dev]\n\nTesting Setup\n~~~~~~~~~~~~~\n\nDuring development, you might like to have tests run on every file save.\n\nShow flake8 errors on file change:\n\n.. code:: sh\n\n    # Test flake8\n    when-changed -v -s -r -1 eth_validation/ tests/ -c \"clear; flake8 eth_validation tests && echo 'flake8 success' || echo 'error'\"\n\nRun multi-process tests in one command, but without color:\n\n.. code:: sh\n\n    # in the project root:\n    pytest --numprocesses=4 --looponfail --maxfail=1\n    # the same thing, succinctly:\n    pytest -n 4 -f --maxfail=1\n\nRun in one thread, with color and desktop notifications:\n\n.. code:: sh\n\n    cd venv\n    ptw --onfail \"notify-send -t 5000 'Test failure \u26a0\u26a0\u26a0\u26a0\u26a0' 'python 3 test on eth-validation failed'\" ../tests ../eth_validation\n\nRelease setup\n~~~~~~~~~~~~~\n\nFor Debian-like systems:\n\n::\n\n    apt install pandoc\n\nTo release a new version:\n\n.. code:: sh\n\n    make release bump=$$VERSION_PART_TO_BUMP$$\n\nHow to bumpversion\n^^^^^^^^^^^^^^^^^^\n\nThe version format for this repo is ``{major}.{minor}.{patch}`` for\nstable, and ``{major}.{minor}.{patch}-{stage}.{devnum}`` for unstable\n(``stage`` can be alpha or beta).\n\nTo issue the next version in line, specify which part to bump, like\n``make release bump=minor`` or ``make release bump=devnum``.\n\nIf you are in a beta version, ``make release bump=stage`` will switch to\na stable.\n\nTo issue an unstable version when the current version is stable, specify\nthe new version explicitly, like\n``make release bump=\"--new-version 4.0.0-alpha.1 devnum\"``\n\n.. |Join the chat at https://gitter.im/ethereum/eth-validation| image:: https://badges.gitter.im/ethereum/eth-validation.svg\n   :target: https://gitter.im/ethereum/eth-validation?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n.. |Build Status| image:: https://travis-ci.org/ethereum/eth-validation.png\n   :target: https://travis-ci.org/ethereum/eth-validation\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ethereum/eth-validation", "keywords": "ethereum", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "eth-validation", "package_url": "https://pypi.org/project/eth-validation/", "platform": "", "project_url": "https://pypi.org/project/eth-validation/", "project_urls": {"Homepage": "https://github.com/ethereum/eth-validation"}, "release_url": "https://pypi.org/project/eth-validation/0.1.0a1/", "requires_dist": null, "requires_python": "", "summary": "eth-validation: Python tools for validating Ethereum-related objects", "version": "0.1.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://gitter.im/ethereum/eth-validation?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/ethereum/eth-validation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5fa6b16b8fa5f389a6a6d68c98ed3554d69a233/68747470733a2f2f6261646765732e6769747465722e696d2f657468657265756d2f6574682d76616c69646174696f6e2e737667\"></a></p>\n<p><a href=\"https://travis-ci.org/ethereum/eth-validation\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c02287ef30698b7fa9026a95097a814b1d17b0a8/68747470733a2f2f7472617669732d63692e6f72672f657468657265756d2f6574682d76616c69646174696f6e2e706e67\"></a></p>\n<p>Python tools for validating Ethereum-related objects</p>\n<ul>\n<li>Python 3.5+ support</li>\n</ul>\n<p>Read more in the <a href=\"http://eth-validation.readthedocs.io/\" rel=\"nofollow\">documentation on\nReadTheDocs</a>. <a href=\"docs/releases.rst\" rel=\"nofollow\">View the change\nlog on Github</a>.</p>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<pre>pip install eth-validation\n</pre>\n</div>\n<div id=\"developer-setup\">\n<h2>Developer setup</h2>\n<p>If you would like to hack on eth-validation, set up your dev environment\nwith:</p>\n<pre>git clone git@github.com:ethereum/eth-validation.git\n<span class=\"nb\">cd</span> eth-validation\nvirtualenv -p python3 venv\n. venv/bin/activate\npip install -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\n</pre>\n<div id=\"testing-setup\">\n<h3>Testing Setup</h3>\n<p>During development, you might like to have tests run on every file save.</p>\n<p>Show flake8 errors on file change:</p>\n<pre><span class=\"c1\"># Test flake8\n</span>when-changed -v -s -r -1 eth_validation/ tests/ -c <span class=\"s2\">\"clear; flake8 eth_validation tests &amp;&amp; echo 'flake8 success' || echo 'error'\"</span>\n</pre>\n<p>Run multi-process tests in one command, but without color:</p>\n<pre><span class=\"c1\"># in the project root:\n</span>pytest --numprocesses<span class=\"o\">=</span><span class=\"m\">4</span> --looponfail --maxfail<span class=\"o\">=</span><span class=\"m\">1</span>\n<span class=\"c1\"># the same thing, succinctly:\n</span>pytest -n <span class=\"m\">4</span> -f --maxfail<span class=\"o\">=</span><span class=\"m\">1</span>\n</pre>\n<p>Run in one thread, with color and desktop notifications:</p>\n<pre><span class=\"nb\">cd</span> venv\nptw --onfail <span class=\"s2\">\"notify-send -t 5000 'Test failure \u26a0\u26a0\u26a0\u26a0\u26a0' 'python 3 test on eth-validation failed'\"</span> ../tests ../eth_validation\n</pre>\n</div>\n<div id=\"release-setup\">\n<h3>Release setup</h3>\n<p>For Debian-like systems:</p>\n<pre>apt install pandoc\n</pre>\n<p>To release a new version:</p>\n<pre>make release <span class=\"nv\">bump</span><span class=\"o\">=</span><span class=\"nv\">$$</span>VERSION_PART_TO_BUMP<span class=\"nv\">$$</span>\n</pre>\n<div id=\"how-to-bumpversion\">\n<h4>How to bumpversion</h4>\n<p>The version format for this repo is <tt><span class=\"pre\">{major}.{minor}.{patch}</span></tt> for\nstable, and <tt><span class=\"pre\">{major}.{minor}.{patch}-{stage}.{devnum}</span></tt> for unstable\n(<tt>stage</tt> can be alpha or beta).</p>\n<p>To issue the next version in line, specify which part to bump, like\n<tt>make release bump=minor</tt> or <tt>make release bump=devnum</tt>.</p>\n<p>If you are in a beta version, <tt>make release bump=stage</tt> will switch to\na stable.</p>\n<p>To issue an unstable version when the current version is stable, specify\nthe new version explicitly, like\n<tt>make release <span class=\"pre\">bump=\"--new-version</span> <span class=\"pre\">4.0.0-alpha.1</span> devnum\"</tt></p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3519037, "releases": {"0.1.0a1": [{"comment_text": "", "digests": {"md5": "56883815d366d19f5df4a5845f3a0376", "sha256": "d8ad691b83689bb3ce082c8e8dd70ece1307a07d6958f71d0cd929c52a9111cf"}, "downloads": -1, "filename": "eth_validation-0.1.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "56883815d366d19f5df4a5845f3a0376", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 5010, "upload_time": "2018-01-25T01:13:53", "upload_time_iso_8601": "2018-01-25T01:13:53.420901Z", "url": "https://files.pythonhosted.org/packages/eb/ef/1302c5532bbf887ff3dc386a8df5e5c4498e4e8aea57a9db160f42ca58e1/eth_validation-0.1.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fd62d19067c5677ada2b4d7c2aa4aba", "sha256": "8ab3099dab7f4ccbf110d11595ae5e5eddc94edfbeec9137add443156332de98"}, "downloads": -1, "filename": "eth-validation-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "4fd62d19067c5677ada2b4d7c2aa4aba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3066, "upload_time": "2018-01-25T01:13:52", "upload_time_iso_8601": "2018-01-25T01:13:52.130877Z", "url": "https://files.pythonhosted.org/packages/e7/5e/be99dd254e827a1140eeb09e0fca5eb87fca408c31aff4413d7653e0c27b/eth-validation-0.1.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "56883815d366d19f5df4a5845f3a0376", "sha256": "d8ad691b83689bb3ce082c8e8dd70ece1307a07d6958f71d0cd929c52a9111cf"}, "downloads": -1, "filename": "eth_validation-0.1.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "56883815d366d19f5df4a5845f3a0376", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 5010, "upload_time": "2018-01-25T01:13:53", "upload_time_iso_8601": "2018-01-25T01:13:53.420901Z", "url": "https://files.pythonhosted.org/packages/eb/ef/1302c5532bbf887ff3dc386a8df5e5c4498e4e8aea57a9db160f42ca58e1/eth_validation-0.1.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fd62d19067c5677ada2b4d7c2aa4aba", "sha256": "8ab3099dab7f4ccbf110d11595ae5e5eddc94edfbeec9137add443156332de98"}, "downloads": -1, "filename": "eth-validation-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "4fd62d19067c5677ada2b4d7c2aa4aba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3066, "upload_time": "2018-01-25T01:13:52", "upload_time_iso_8601": "2018-01-25T01:13:52.130877Z", "url": "https://files.pythonhosted.org/packages/e7/5e/be99dd254e827a1140eeb09e0fca5eb87fca408c31aff4413d7653e0c27b/eth-validation-0.1.0a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:25 2020"}