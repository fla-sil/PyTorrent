{"info": {"author": "Daichi Narushima", "author_email": "dnarsil+github@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: MacOS", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Office/Business :: Financial :: Investment"], "description": "oanda-cli\n=========\n\nCommand Line Interface for Oanda V20 REST API\n\n[![wercker status](https://app.wercker.com/status/f747d0ad7049ed7a12936e7e993ac627/s/master \"wercker status\")](https://app.wercker.com/project/byKey/f747d0ad7049ed7a12936e7e993ac627)\n\nInstallation\n------------\n\n```sh\n$ pip install -U oanda-cli\n```\n\nDocker image\n------------\n\nThe image is available at [Docker Hub](https://hub.docker.com/r/dceoy/oanda-cli/).\n\n```sh\n$ docker pull dceoy/oanda-cli\n```\n\nGetting started\n---------------\n\n1.  Create and edit a configuration YAML file.\n\n    ```sh\n    $ oanda-cli init\n    $ vim oanda.yml     # => edit\n    ```\n\n    An account ID and an API token are required to be set in the configuration file.\n\n2.  Execute commands.\n\n    ```sh\n    # Print information\n    $ oanda-cli info account\n    $ oanda-cli info instruments\n    $ oanda-cli info positions\n\n    # Fetch past rates\n    $ oanda-cli track\n\n    # Stream market prices or authorized account transactions\n    $ oanda-cli stream                          # prices\n    $ oanda-cli stream --target=transaction     # transactions\n\n    # Close all positions\n    $ oanda-cli close\n    ```\n\nUsage\n-----\n\n```sh\n$ oanda-cli --help\nCommand Line Interface for Oanda API\n\nUsage:\n    oanda-cli -h|--help\n    oanda-cli -v|--version\n    oanda-cli init [--debug|--info] [--file=<yaml>]\n    oanda-cli info [--debug|--info] [--file=<yaml>] [--json] <info_target>\n                   [<instrument>...]\n    oanda-cli track [--debug|--info] [--file=<yaml>] [--csv-dir=<path>]\n                    [--sqlite=<path>] [--granularity=<code>] [--count=<int>]\n                    [--json] [--quiet] [<instrument>...]\n    oanda-cli stream [--debug|--info] [--file=<yaml>] [--target=<str>]\n                     [--timeout=<sec>] [--csv=<path>] [--sqlite=<path>]\n                     [--use-redis] [--redis-host=<ip>] [--redis-port=<int>]\n                     [--redis-db=<int>] [--redis-max-llen=<int>]\n                     [--ignore-api-error] [--quiet] [<instrument>...]\n    oanda-cli close [--debug|--info] [--file=<yaml>] [<instrument>...]\n\nOptions:\n    -h, --help          Print help and exit\n    -v, --version       Print version and exit\n    --debug, --info     Execute a command with debug|info messages\n    --file=<yaml>       Set a path to a YAML for configurations [$OANDA_YML]\n    --quiet             Suppress messages\n    --csv-dir=<path>    Write data with daily CSV in a directory\n    --sqlite=<path>     Save data in an SQLite3 database\n    --granularity=<code>\n                        Set a granularity for rate tracking [default: S5]\n    --count=<int>       Set a size for rate tracking (max: 5000) [default: 60]\n    --json              Print data with JSON\n    --target=<str>      Set a streaming target [default: pricing]\n                        { pricing, transaction }\n    --timeout=<sec>     Set senconds for response timeout\n    --csv=<path>        Write data with CSV into a file\n    --use-redis         Use Redis for data store\n    --redis-host=<ip>   Set a Redis server host (override YAML configurations)\n    --redis-port=<int>  Set a Redis server port (override YAML configurations)\n    --redis-db=<int>    Set a Redis database (override YAML configurations)\n    --redis-max-llen=<int>\n                        Limit Redis list length (override YAML configurations)\n    --ignore-api-error  Ignore Oanda API connection errors\n\nCommands:\n    init                Create a YAML template for configuration\n    info                Print information about <info_target>\n    track               Fetch past rates\n    stream              Stream market prices or authorized account events\n    close               Close positions (if not <instrument>, close all)\n\nArguments:\n    <info_target>       { instruments, prices, account, accounts, orders,\n                          trades, positions, position, transactions,\n                          order_book, position_book }\n    <instrument>        { AUD_CAD, AUD_CHF, AUD_HKD, AUD_JPY, AUD_NZD, AUD_SGD,\n                          AUD_USD, CAD_CHF, CAD_HKD, CAD_JPY, CAD_SGD, CHF_HKD,\n                          CHF_JPY, CHF_ZAR, EUR_AUD, EUR_CAD, EUR_CHF, EUR_CZK,\n                          EUR_DKK, EUR_GBP, EUR_HKD, EUR_HUF, EUR_JPY, EUR_NOK,\n                          EUR_NZD, EUR_PLN, EUR_SEK, EUR_SGD, EUR_TRY, EUR_USD,\n                          EUR_ZAR, GBP_AUD, GBP_CAD, GBP_CHF, GBP_HKD, GBP_JPY,\n                          GBP_NZD, GBP_PLN, GBP_SGD, GBP_USD, GBP_ZAR, HKD_JPY,\n                          NZD_CAD, NZD_CHF, NZD_HKD, NZD_JPY, NZD_SGD, NZD_USD,\n                          SGD_CHF, SGD_HKD, SGD_JPY, TRY_JPY, USD_CAD, USD_CHF,\n                          USD_CNH, USD_CZK, USD_DKK, USD_HKD, USD_HUF, USD_INR,\n                          USD_JPY, USD_MXN, USD_NOK, USD_PLN, USD_SAR, USD_SEK,\n                          USD_SGD, USD_THB, USD_TRY, USD_ZAR, ZAR_JPY }\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dceoy/oanda-cli", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "oanda-cli", "package_url": "https://pypi.org/project/oanda-cli/", "platform": "", "project_url": "https://pypi.org/project/oanda-cli/", "project_urls": {"Homepage": "https://github.com/dceoy/oanda-cli"}, "release_url": "https://pypi.org/project/oanda-cli/1.0.2/", "requires_dist": ["docopt", "pandas", "pyyaml", "redis", "ujson", "v20"], "requires_python": ">=3.6", "summary": "Command Line Interface for Oanda API", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>oanda-cli</h1>\n<p>Command Line Interface for Oanda V20 REST API</p>\n<p><a href=\"https://app.wercker.com/project/byKey/f747d0ad7049ed7a12936e7e993ac627\" rel=\"nofollow\"><img alt=\"wercker status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e55097c400d1cb7f9a189bfc88c69d28a7709a0f/68747470733a2f2f6170702e776572636b65722e636f6d2f7374617475732f66373437643061643730343965643761313239333665376539393361633632372f732f6d6173746572\"></a></p>\n<h2>Installation</h2>\n<pre>$ pip install -U oanda-cli\n</pre>\n<h2>Docker image</h2>\n<p>The image is available at <a href=\"https://hub.docker.com/r/dceoy/oanda-cli/\" rel=\"nofollow\">Docker Hub</a>.</p>\n<pre>$ docker pull dceoy/oanda-cli\n</pre>\n<h2>Getting started</h2>\n<ol>\n<li>\n<p>Create and edit a configuration YAML file.</p>\n<pre>$ oanda-cli init\n$ vim oanda.yml     <span class=\"c1\"># =&gt; edit</span>\n</pre>\n<p>An account ID and an API token are required to be set in the configuration file.</p>\n</li>\n<li>\n<p>Execute commands.</p>\n<pre><span class=\"c1\"># Print information</span>\n$ oanda-cli info account\n$ oanda-cli info instruments\n$ oanda-cli info positions\n\n<span class=\"c1\"># Fetch past rates</span>\n$ oanda-cli track\n\n<span class=\"c1\"># Stream market prices or authorized account transactions</span>\n$ oanda-cli stream                          <span class=\"c1\"># prices</span>\n$ oanda-cli stream --target<span class=\"o\">=</span>transaction     <span class=\"c1\"># transactions</span>\n\n<span class=\"c1\"># Close all positions</span>\n$ oanda-cli close\n</pre>\n</li>\n</ol>\n<h2>Usage</h2>\n<pre>$ oanda-cli --help\nCommand Line Interface <span class=\"k\">for</span> Oanda API\n\nUsage:\n    oanda-cli -h<span class=\"p\">|</span>--help\n    oanda-cli -v<span class=\"p\">|</span>--version\n    oanda-cli init <span class=\"o\">[</span>--debug<span class=\"p\">|</span>--info<span class=\"o\">]</span> <span class=\"o\">[</span>--file<span class=\"o\">=</span>&lt;yaml&gt;<span class=\"o\">]</span>\n    oanda-cli info <span class=\"o\">[</span>--debug<span class=\"p\">|</span>--info<span class=\"o\">]</span> <span class=\"o\">[</span>--file<span class=\"o\">=</span>&lt;yaml&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--json<span class=\"o\">]</span> &lt;info_target&gt;\n                   <span class=\"o\">[</span>&lt;instrument&gt;...<span class=\"o\">]</span>\n    oanda-cli track <span class=\"o\">[</span>--debug<span class=\"p\">|</span>--info<span class=\"o\">]</span> <span class=\"o\">[</span>--file<span class=\"o\">=</span>&lt;yaml&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--csv-dir<span class=\"o\">=</span>&lt;path&gt;<span class=\"o\">]</span>\n                    <span class=\"o\">[</span>--sqlite<span class=\"o\">=</span>&lt;path&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--granularity<span class=\"o\">=</span>&lt;code&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--count<span class=\"o\">=</span>&lt;int&gt;<span class=\"o\">]</span>\n                    <span class=\"o\">[</span>--json<span class=\"o\">]</span> <span class=\"o\">[</span>--quiet<span class=\"o\">]</span> <span class=\"o\">[</span>&lt;instrument&gt;...<span class=\"o\">]</span>\n    oanda-cli stream <span class=\"o\">[</span>--debug<span class=\"p\">|</span>--info<span class=\"o\">]</span> <span class=\"o\">[</span>--file<span class=\"o\">=</span>&lt;yaml&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--target<span class=\"o\">=</span>&lt;str&gt;<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--timeout<span class=\"o\">=</span>&lt;sec&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--csv<span class=\"o\">=</span>&lt;path&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--sqlite<span class=\"o\">=</span>&lt;path&gt;<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--use-redis<span class=\"o\">]</span> <span class=\"o\">[</span>--redis-host<span class=\"o\">=</span>&lt;ip&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--redis-port<span class=\"o\">=</span>&lt;int&gt;<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--redis-db<span class=\"o\">=</span>&lt;int&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--redis-max-llen<span class=\"o\">=</span>&lt;int&gt;<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--ignore-api-error<span class=\"o\">]</span> <span class=\"o\">[</span>--quiet<span class=\"o\">]</span> <span class=\"o\">[</span>&lt;instrument&gt;...<span class=\"o\">]</span>\n    oanda-cli close <span class=\"o\">[</span>--debug<span class=\"p\">|</span>--info<span class=\"o\">]</span> <span class=\"o\">[</span>--file<span class=\"o\">=</span>&lt;yaml&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>&lt;instrument&gt;...<span class=\"o\">]</span>\n\nOptions:\n    -h, --help          Print <span class=\"nb\">help</span> and <span class=\"nb\">exit</span>\n    -v, --version       Print version and <span class=\"nb\">exit</span>\n    --debug, --info     Execute a <span class=\"nb\">command</span> with debug<span class=\"p\">|</span>info messages\n    --file<span class=\"o\">=</span>&lt;yaml&gt;       Set a path to a YAML <span class=\"k\">for</span> configurations <span class=\"o\">[</span><span class=\"nv\">$OANDA_YML</span><span class=\"o\">]</span>\n    --quiet             Suppress messages\n    --csv-dir<span class=\"o\">=</span>&lt;path&gt;    Write data with daily CSV in a directory\n    --sqlite<span class=\"o\">=</span>&lt;path&gt;     Save data in an SQLite3 database\n    --granularity<span class=\"o\">=</span>&lt;code&gt;\n                        Set a granularity <span class=\"k\">for</span> rate tracking <span class=\"o\">[</span>default: S5<span class=\"o\">]</span>\n    --count<span class=\"o\">=</span>&lt;int&gt;       Set a size <span class=\"k\">for</span> rate tracking <span class=\"o\">(</span>max: <span class=\"m\">5000</span><span class=\"o\">)</span> <span class=\"o\">[</span>default: <span class=\"m\">60</span><span class=\"o\">]</span>\n    --json              Print data with JSON\n    --target<span class=\"o\">=</span>&lt;str&gt;      Set a streaming target <span class=\"o\">[</span>default: pricing<span class=\"o\">]</span>\n                        <span class=\"o\">{</span> pricing, transaction <span class=\"o\">}</span>\n    --timeout<span class=\"o\">=</span>&lt;sec&gt;     Set senconds <span class=\"k\">for</span> response timeout\n    --csv<span class=\"o\">=</span>&lt;path&gt;        Write data with CSV into a file\n    --use-redis         Use Redis <span class=\"k\">for</span> data store\n    --redis-host<span class=\"o\">=</span>&lt;ip&gt;   Set a Redis server host <span class=\"o\">(</span>override YAML configurations<span class=\"o\">)</span>\n    --redis-port<span class=\"o\">=</span>&lt;int&gt;  Set a Redis server port <span class=\"o\">(</span>override YAML configurations<span class=\"o\">)</span>\n    --redis-db<span class=\"o\">=</span>&lt;int&gt;    Set a Redis database <span class=\"o\">(</span>override YAML configurations<span class=\"o\">)</span>\n    --redis-max-llen<span class=\"o\">=</span>&lt;int&gt;\n                        Limit Redis list length <span class=\"o\">(</span>override YAML configurations<span class=\"o\">)</span>\n    --ignore-api-error  Ignore Oanda API connection errors\n\nCommands:\n    init                Create a YAML template <span class=\"k\">for</span> configuration\n    info                Print information about &lt;info_target&gt;\n    track               Fetch past rates\n    stream              Stream market prices or authorized account events\n    close               Close positions <span class=\"o\">(</span><span class=\"k\">if</span> not &lt;instrument&gt;, close all<span class=\"o\">)</span>\n\nArguments:\n    &lt;info_target&gt;       <span class=\"o\">{</span> instruments, prices, account, accounts, orders,\n                          trades, positions, position, transactions,\n                          order_book, position_book <span class=\"o\">}</span>\n    &lt;instrument&gt;        <span class=\"o\">{</span> AUD_CAD, AUD_CHF, AUD_HKD, AUD_JPY, AUD_NZD, AUD_SGD,\n                          AUD_USD, CAD_CHF, CAD_HKD, CAD_JPY, CAD_SGD, CHF_HKD,\n                          CHF_JPY, CHF_ZAR, EUR_AUD, EUR_CAD, EUR_CHF, EUR_CZK,\n                          EUR_DKK, EUR_GBP, EUR_HKD, EUR_HUF, EUR_JPY, EUR_NOK,\n                          EUR_NZD, EUR_PLN, EUR_SEK, EUR_SGD, EUR_TRY, EUR_USD,\n                          EUR_ZAR, GBP_AUD, GBP_CAD, GBP_CHF, GBP_HKD, GBP_JPY,\n                          GBP_NZD, GBP_PLN, GBP_SGD, GBP_USD, GBP_ZAR, HKD_JPY,\n                          NZD_CAD, NZD_CHF, NZD_HKD, NZD_JPY, NZD_SGD, NZD_USD,\n                          SGD_CHF, SGD_HKD, SGD_JPY, TRY_JPY, USD_CAD, USD_CHF,\n                          USD_CNH, USD_CZK, USD_DKK, USD_HKD, USD_HUF, USD_INR,\n                          USD_JPY, USD_MXN, USD_NOK, USD_PLN, USD_SAR, USD_SEK,\n                          USD_SGD, USD_THB, USD_TRY, USD_ZAR, ZAR_JPY <span class=\"o\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 6440497, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "e1cf41849391212b33a66a3649bcd607", "sha256": "54bfc2ed11f36b77d1f0bcb04755195678c824616f03dc0975b454bfc39e6041"}, "downloads": -1, "filename": "oanda_cli-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e1cf41849391212b33a66a3649bcd607", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 25631, "upload_time": "2020-01-12T17:18:11", "upload_time_iso_8601": "2020-01-12T17:18:11.403698Z", "url": "https://files.pythonhosted.org/packages/b4/23/929b6cac75fff78abec88373af8d4a49ae001eebd8a651801a596ab8a54a/oanda_cli-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d25217ad2e6050648f482f645a7a583f", "sha256": "b4a1cdc3ce5522087c20cc9de1003f72d18172ad32c415872ef11d5cc410c9cd"}, "downloads": -1, "filename": "oanda-cli-1.0.2.tar.gz", "has_sig": false, "md5_digest": "d25217ad2e6050648f482f645a7a583f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10860, "upload_time": "2020-01-12T17:18:13", "upload_time_iso_8601": "2020-01-12T17:18:13.336690Z", "url": "https://files.pythonhosted.org/packages/77/58/05154662e6269b78513a1b0a798ca6f16cf2e7eddaa2b5e6892382f7b979/oanda-cli-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1cf41849391212b33a66a3649bcd607", "sha256": "54bfc2ed11f36b77d1f0bcb04755195678c824616f03dc0975b454bfc39e6041"}, "downloads": -1, "filename": "oanda_cli-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e1cf41849391212b33a66a3649bcd607", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 25631, "upload_time": "2020-01-12T17:18:11", "upload_time_iso_8601": "2020-01-12T17:18:11.403698Z", "url": "https://files.pythonhosted.org/packages/b4/23/929b6cac75fff78abec88373af8d4a49ae001eebd8a651801a596ab8a54a/oanda_cli-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d25217ad2e6050648f482f645a7a583f", "sha256": "b4a1cdc3ce5522087c20cc9de1003f72d18172ad32c415872ef11d5cc410c9cd"}, "downloads": -1, "filename": "oanda-cli-1.0.2.tar.gz", "has_sig": false, "md5_digest": "d25217ad2e6050648f482f645a7a583f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10860, "upload_time": "2020-01-12T17:18:13", "upload_time_iso_8601": "2020-01-12T17:18:13.336690Z", "url": "https://files.pythonhosted.org/packages/77/58/05154662e6269b78513a1b0a798ca6f16cf2e7eddaa2b5e6892382f7b979/oanda-cli-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:57 2020"}