{"info": {"author": "Deutscher Django Verein e. V.", "author_email": "kontakt@django-de.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "=====================\ndjango-simple-ratings\n=====================\n\na simple, extensible rating system.\n\ndependencies:\n\n* django-generic-aggregation: http://github.com/coleifer/django-generic-aggregation\n\n\nWith a little bit more\n----------------------\n\nalso, a playground for different stuff i've been reading about in\n*programming collective intelligence*, by toby segaran.\n\nthis stuff lives in utils.py and is there if you want to experiment (or\ncontribute!).\n\n\nGetting started\n---------------\n\nyou'd like to add ratings to some model::\n\n    from django.db import models\n    from ratings.models import Ratings\n\n    class Food(models.Model):\n        name = models.CharField(max_length=50)\n\n        ratings = Ratings()\n\nnow, you can::\n\n    # add ratings to things\n    >>> apple.ratings.rate(user=john, score=1)\n    <RatedItem: apple rated 1 by john>\n\n    >>> apple.ratings.rate(user=jane, score=5)\n    <RatedItem: apple rated 5 by jane>\n\n    # get interesting aggregate data\n    >>> apple.ratings.all()\n    [<RatedItem: apple rated 1 by john>, <RatedItem: apple rated 5 by jane>]\n\n    >>> apple.ratings.cumulative_score()\n    6\n\n    >>> apple.ratings.average_score()\n    3.0\n\n    # order things by their rating\n    >>> Food.ratings.order_by_rating()\n    [<Food: apple>, <Food: orange>]\n\n\nUse GFKs, FKs, whatever\n-----------------------\n\nBy default, whenever you add Ratings() to your model it uses the RatedItem model\nwhich has a GFK on it.  Suppose you are only rating one thing, or would like to\nhave an explicit database constraint -- that's no problem.  You can provide a\ncustom RatedItem model with a ForeignKey instead of a GFK.  Here's the example\nfrom the tests::\n\n    class BeverageRating(RatedItemBase):\n        content_object = models.ForeignKey('Beverage')\n\n\n    class Beverage(models.Model):\n        name = models.CharField(max_length=50)\n\n        ratings = Ratings(BeverageRating)\n\n        def __unicode__(self):\n            return self.name\n\n\nThe API is exactly the same.", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/django-de/django-simple-ratings/tree/master", "keywords": null, "license": null, "maintainer": null, "maintainer_email": null, "name": "django-simple-ratings", "package_url": "https://pypi.org/project/django-simple-ratings/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-simple-ratings/", "project_urls": {"Homepage": "http://github.com/django-de/django-simple-ratings/tree/master"}, "release_url": "https://pypi.org/project/django-simple-ratings/0.3.3/", "requires_dist": null, "requires_python": null, "summary": "a simple, extensible rating system.", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>a simple, extensible rating system.</p>\n<p>dependencies:</p>\n<ul>\n<li>django-generic-aggregation: <a href=\"http://github.com/coleifer/django-generic-aggregation\" rel=\"nofollow\">http://github.com/coleifer/django-generic-aggregation</a></li>\n</ul>\n<div id=\"with-a-little-bit-more\">\n<h2>With a little bit more</h2>\n<p>also, a playground for different stuff i\u2019ve been reading about in\n<em>programming collective intelligence</em>, by toby segaran.</p>\n<p>this stuff lives in utils.py and is there if you want to experiment (or\ncontribute!).</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p>you\u2019d like to add ratings to some model:</p>\n<pre>from django.db import models\nfrom ratings.models import Ratings\n\nclass Food(models.Model):\n    name = models.CharField(max_length=50)\n\n    ratings = Ratings()\n</pre>\n<p>now, you can:</p>\n<pre># add ratings to things\n&gt;&gt;&gt; apple.ratings.rate(user=john, score=1)\n&lt;RatedItem: apple rated 1 by john&gt;\n\n&gt;&gt;&gt; apple.ratings.rate(user=jane, score=5)\n&lt;RatedItem: apple rated 5 by jane&gt;\n\n# get interesting aggregate data\n&gt;&gt;&gt; apple.ratings.all()\n[&lt;RatedItem: apple rated 1 by john&gt;, &lt;RatedItem: apple rated 5 by jane&gt;]\n\n&gt;&gt;&gt; apple.ratings.cumulative_score()\n6\n\n&gt;&gt;&gt; apple.ratings.average_score()\n3.0\n\n# order things by their rating\n&gt;&gt;&gt; Food.ratings.order_by_rating()\n[&lt;Food: apple&gt;, &lt;Food: orange&gt;]\n</pre>\n</div>\n<div id=\"use-gfks-fks-whatever\">\n<h2>Use GFKs, FKs, whatever</h2>\n<p>By default, whenever you add Ratings() to your model it uses the RatedItem model\nwhich has a GFK on it.  Suppose you are only rating one thing, or would like to\nhave an explicit database constraint \u2013 that\u2019s no problem.  You can provide a\ncustom RatedItem model with a ForeignKey instead of a GFK.  Here\u2019s the example\nfrom the tests:</p>\n<pre>class BeverageRating(RatedItemBase):\n    content_object = models.ForeignKey('Beverage')\n\n\nclass Beverage(models.Model):\n    name = models.CharField(max_length=50)\n\n    ratings = Ratings(BeverageRating)\n\n    def __unicode__(self):\n        return self.name\n</pre>\n<p>The API is exactly the same.</p>\n</div>\n\n          </div>"}, "last_serial": 931251, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "031c8a4614b3a925bbda314e7cc4b02f", "sha256": "a1fb6fb2e47eb861ec0f6d7bd0304c424bf6574c575ef5f515335213b5aff4dc"}, "downloads": -1, "filename": "django-simple-ratings-0.1.0.tar.gz", "has_sig": false, "md5_digest": "031c8a4614b3a925bbda314e7cc4b02f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12699, "upload_time": "2010-08-08T00:35:15", "upload_time_iso_8601": "2010-08-08T00:35:15.038065Z", "url": "https://files.pythonhosted.org/packages/80/29/44a7c55f544b7ce565cbdc27386676ff000e3c802c820553d45898d00bf3/django-simple-ratings-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "86b1fac3cc4a78a24794cf5b3d3d0183", "sha256": "90b2fdbdc35b91f9d213e4dfe958cbb4bde95ea793ece82a115e145a2fa125f4"}, "downloads": -1, "filename": "django-simple-ratings-0.1.1.tar.gz", "has_sig": false, "md5_digest": "86b1fac3cc4a78a24794cf5b3d3d0183", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12806, "upload_time": "2010-09-25T20:42:37", "upload_time_iso_8601": "2010-09-25T20:42:37.850672Z", "url": "https://files.pythonhosted.org/packages/d8/8d/06a578b2dfecc15c915003dea5661369fc9d58bb23c91d9603637cefafa3/django-simple-ratings-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "dece59dfefdb4db64c0970375d18dd92", "sha256": "facd1e0a76a2249a526901ae2345b862e2034932ef6802ebd1ed96a456b61827"}, "downloads": -1, "filename": "django-simple-ratings-0.1.2.tar.gz", "has_sig": false, "md5_digest": "dece59dfefdb4db64c0970375d18dd92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12937, "upload_time": "2010-10-19T05:28:18", "upload_time_iso_8601": "2010-10-19T05:28:18.833374Z", "url": "https://files.pythonhosted.org/packages/b4/55/cbb3a0810c81ac4e4ee8303a2e4bc749ccf706f02d276daadf57a33eac1c/django-simple-ratings-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "256a1fb2bf82441856bd104b9191b5b2", "sha256": "d20a8865c56b9235ab2699a5843035feda03867d7f1055d62c04e190d85eed10"}, "downloads": -1, "filename": "django-simple-ratings-0.2.0.tar.gz", "has_sig": false, "md5_digest": "256a1fb2bf82441856bd104b9191b5b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11863, "upload_time": "2011-03-16T15:28:53", "upload_time_iso_8601": "2011-03-16T15:28:53.524608Z", "url": "https://files.pythonhosted.org/packages/77/d7/3803a6f15137db7fc715933074f0ab59ce00247f0a3b86c7571f0301cb19/django-simple-ratings-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "507bf25619a7b08287e617e5f33d5ce7", "sha256": "a1ee82283ad9d389414e3d52bcae93d713e616cef91ec4297c3cfeff997d87e4"}, "downloads": -1, "filename": "django-simple-ratings-0.3.0.tar.gz", "has_sig": false, "md5_digest": "507bf25619a7b08287e617e5f33d5ce7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13662, "upload_time": "2011-07-13T22:50:19", "upload_time_iso_8601": "2011-07-13T22:50:19.333509Z", "url": "https://files.pythonhosted.org/packages/59/87/92cfa112bda06e90bcff4a9535db1fb41ae861620bab3dac8f1cdc9217a3/django-simple-ratings-0.3.0.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "ea477e02a537dd9ba0a33f24c3f2d437", "sha256": "5a99aab9f4ee37c5a2101c2829ae5662a5e705672aff93c7ad5c32b4edc40208"}, "downloads": -1, "filename": "django-simple-ratings-0.3.2.tar.gz", "has_sig": false, "md5_digest": "ea477e02a537dd9ba0a33f24c3f2d437", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14434, "upload_time": "2012-08-27T15:08:13", "upload_time_iso_8601": "2012-08-27T15:08:13.213298Z", "url": "https://files.pythonhosted.org/packages/58/94/79614b97fbcdd45dc94787760b0c41470208ae93952940160e78dbaa3c53/django-simple-ratings-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "9625f47a60abe1f89ecf39da4f489883", "sha256": "40580269c15bcf37af051fe554c250dded484d8f566e0a69cff73f0b2b5d422f"}, "downloads": -1, "filename": "django_simple_ratings-0.3.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "9625f47a60abe1f89ecf39da4f489883", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18987, "upload_time": "2013-11-28T15:44:55", "upload_time_iso_8601": "2013-11-28T15:44:55.410276Z", "url": "https://files.pythonhosted.org/packages/f9/bc/9c976afeb684e5ed4b6a663181abbd7336dde62d4cb95613e4f647f93052/django_simple_ratings-0.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "775717d41e6bbb44aa9a49faf18490a0", "sha256": "14cdd23703edfb099fb3c6ec6b488a1e5025b770cd6fe0b6b5aa0fc98f2ca053"}, "downloads": -1, "filename": "django-simple-ratings-0.3.3.tar.gz", "has_sig": true, "md5_digest": "775717d41e6bbb44aa9a49faf18490a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22266, "upload_time": "2013-11-28T15:44:49", "upload_time_iso_8601": "2013-11-28T15:44:49.778040Z", "url": "https://files.pythonhosted.org/packages/4d/2a/87e5dc7af91b37c48c98fda306c01aaf558f66d909d6d19aae70c97b054f/django-simple-ratings-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9625f47a60abe1f89ecf39da4f489883", "sha256": "40580269c15bcf37af051fe554c250dded484d8f566e0a69cff73f0b2b5d422f"}, "downloads": -1, "filename": "django_simple_ratings-0.3.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "9625f47a60abe1f89ecf39da4f489883", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18987, "upload_time": "2013-11-28T15:44:55", "upload_time_iso_8601": "2013-11-28T15:44:55.410276Z", "url": "https://files.pythonhosted.org/packages/f9/bc/9c976afeb684e5ed4b6a663181abbd7336dde62d4cb95613e4f647f93052/django_simple_ratings-0.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "775717d41e6bbb44aa9a49faf18490a0", "sha256": "14cdd23703edfb099fb3c6ec6b488a1e5025b770cd6fe0b6b5aa0fc98f2ca053"}, "downloads": -1, "filename": "django-simple-ratings-0.3.3.tar.gz", "has_sig": true, "md5_digest": "775717d41e6bbb44aa9a49faf18490a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22266, "upload_time": "2013-11-28T15:44:49", "upload_time_iso_8601": "2013-11-28T15:44:49.778040Z", "url": "https://files.pythonhosted.org/packages/4d/2a/87e5dc7af91b37c48c98fda306c01aaf558f66d909d6d19aae70c97b054f/django-simple-ratings-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:21 2020"}