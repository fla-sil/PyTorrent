{"info": {"author": "Jorge Lopez Marcos", "author_email": "jlomar2005@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Natural Language :: Spanish", "Operating System :: Microsoft :: Windows :: Windows 10", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Medical Science Apps.", "Topic :: Software Development :: Build Tools"], "description": "# NeuroSkyPy\n\n[![](https://img.shields.io/pypi/v/neuroskypy.svg)](https://pypi.org/project/NeuroSkyPy/)\n[![](https://img.shields.io/pypi/pyversions/neuroskypy.svg)](https://pypi.org/project/NeuroSkyPy/)\n[![](https://img.shields.io/pypi/l/neuroskypy.svg)](https://github.com/Jor-G-ete/NeuroSkyPy/blob/master/LICENSE)\n[![](https://img.shields.io/pypi/dd/neuroskypy.svg)]()\n[![](https://img.shields.io/github/last-commit/Jor-G-ete/NeuroSkyPy)]()\n[![](https://img.shields.io/github/v/release/Jor-G-ete/NeuroSkyPy)]()\n[![](https://img.shields.io/github/v/tag/Jor-G-ete/NeuroSkyPy)]()\n\nNeuroSkyPy library written in python3.7 to connect, interact, get, save and plot data  from **NeuroSky's MindWave** EEG headset, the first one ( black ).\n\nThis library is based on the mindwave mindset communication protocol published by [Neurosky](http:://neurosky.com) and is tested with Neurosky Mindwave EEG headset. Where It's readen the data in hex, after that it's decoded.\n\n## Installation\n\n### Source file\n1. Download the source file from github\n2. Unzip and navigate to the folder containing `setup.py` and other files\n3. Run the following command: `python setup.py install`\n\n### Pip\n```python3\n    pip3 install NeuroSkyPy\n```\n\n## Usage\n\nA test-script which is used as experiment it's left in order to check and learn how to use the class. \nThe basic steps to use the class are:\n1. Importing the module: `from NeuroPy import NeuroPy`\n2. Initializing: `neuropy = NeuroPy()`\n3. After initializing, either the callbacks can be set or just extract data from the object as it's done in test-script. \n4. Then call `neuropy.start()` method, it will start fetching data from mindwave.\n5. To stop call `neuropy.stop()` **WARNING: The main problem it's that the thread is not stopped so it will trigger a error. Nevermind you could continue using the script.**\n\n\n### Obtaining Data from Device \n\n* **Obtaining value:** `attention = neuropy.attention` \\#to get value of attention_\n    >**Other Variable** attention, meditation, rawValue, delta, theta, lowAlpha, highAlpha, lowBeta, highBeta, lowGamma, midGamma, poorSignal and blinkStrength\n\n* **Setting callback:** A call back can be associated with all the above variables so that a function is called when the variable is updated. Syntax: \n\n    ```\n    setCallBack(\"[variable]\",callback_function)\n    ``` \n    **for eg.** to set a callback for attention data the syntax will be \n    ```\n    setCallBack(\"attention\",callback_function)\n    ```\n    >**Other Variables:** attention, meditation, rawValue, delta, theta, lowAlpha, highAlpha, lowBeta, highBeta, lowGamma, midGamma, poorSignal and blinkStrength\n\n## Sample Program 1 (Access via callback)\n\n```python\nfrom NeuroPy import NeuroPy\nfrom time import sleep\n\nneuropy = NeuroPy() \n\ndef attention_callback(attention_value):\n    \"\"\"this function will be called everytime NeuroPy has a new value for attention\"\"\"\n    print (\"Value of attention is: \", attention_value)\n    return None\n\nneuropy.setCallBack(\"attention\", attention_callback)\nneuropy.start()\n\ntry:\n    while True:\n        sleep(0.2)\nfinally:\n    neuropy.stop()\n```\n\n\n## Sample Program 2 (Access via object)\n\n```python\nfrom NeuroPy import NeuroPy\nfrom time import sleep\n\nneuropy = NeuroPy() \nneuropy.start()\n\nwhile True:\n    if neuropy.meditation > 70: # Access data through object\n        neuropy.stop() \n    sleep(0.2) # Don't eat the CPU cycles\n```\n\n## Python Compatibility\n\n* [Python](http://www.python.com) - v3.7\n\n### Note\nThis library comes from the libraries [NeuroPy](https://github.com/lihas/NeuroPy) and [mindwave-python](https://github.com/BarkleyUS/mindwave-python). \nThe library is tested and comes with extracted data. \n\n### More Information\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/Jor-G-ete/NeuroSkyPy/archive/v1.6.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Jor-G-ete/NeuroSkyPy", "keywords": "python3.7,NeuroSky,graphics,threads", "license": "GNU General Public License v3.0", "maintainer": "Jorge Lopez Marcos", "maintainer_email": "jlomar2005@hotmail.com", "name": "NeuroSkyPy", "package_url": "https://pypi.org/project/NeuroSkyPy/", "platform": "Windows", "project_url": "https://pypi.org/project/NeuroSkyPy/", "project_urls": {"Documentation": "https://github.com/Jor-G-ete/NeuroSkyPy", "Download": "https://github.com/Jor-G-ete/NeuroSkyPy/archive/v1.6.tar.gz", "Homepage": "https://github.com/Jor-G-ete/NeuroSkyPy", "Source Code": "https://github.com/Jor-G-ete/NeuroSkyPy/blob/master/NeuroSkyPy/NeuroSkyPy.py"}, "release_url": "https://pypi.org/project/NeuroSkyPy/1.6/", "requires_dist": ["numpy", "scikit-learn", "matplotlib", "pyserial", "pyyaml"], "requires_python": ">=3.7", "summary": "Library for interfacing with Neurosky's Mindwave EEG headset", "version": "1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>NeuroSkyPy</h1>\n<p><a href=\"https://pypi.org/project/NeuroSkyPy/\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee0bc054d38873890d854d9c473c457db0a222c5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6e6575726f736b7970792e737667\"></a>\n<a href=\"https://pypi.org/project/NeuroSkyPy/\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88744fd6d4989539cbe5380658b1c792c4a9ac10/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6e6575726f736b7970792e737667\"></a>\n<a href=\"https://github.com/Jor-G-ete/NeuroSkyPy/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d95175b47d1dfe2c8375854f0fbec45c7b410d5f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6e6575726f736b7970792e737667\"></a>\n<a href=\"\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6046d08fd9adccc073ddac9f12178faba711a735/68747470733a2f2f696d672e736869656c64732e696f2f707970692f64642f6e6575726f736b7970792e737667\"></a>\n<a href=\"\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/20670ef049cfc99b871ccdf1a7f16e770b6ee3ed/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f4a6f722d472d6574652f4e6575726f536b795079\"></a>\n<a href=\"\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/170bef6d9d0a7e787a7ca88a8cb588fbfb5a2941/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f4a6f722d472d6574652f4e6575726f536b795079\"></a>\n<a href=\"\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/57716442cb85ef75ed7aff63ae58a0432e5bac65/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f7461672f4a6f722d472d6574652f4e6575726f536b795079\"></a></p>\n<p>NeuroSkyPy library written in python3.7 to connect, interact, get, save and plot data  from <strong>NeuroSky's MindWave</strong> EEG headset, the first one ( black ).</p>\n<p>This library is based on the mindwave mindset communication protocol published by <a href=\"http:://neurosky.com\" rel=\"nofollow\">Neurosky</a> and is tested with Neurosky Mindwave EEG headset. Where It's readen the data in hex, after that it's decoded.</p>\n<h2>Installation</h2>\n<h3>Source file</h3>\n<ol>\n<li>Download the source file from github</li>\n<li>Unzip and navigate to the folder containing <code>setup.py</code> and other files</li>\n<li>Run the following command: <code>python setup.py install</code></li>\n</ol>\n<h3>Pip</h3>\n<pre>    <span class=\"n\">pip3</span> <span class=\"n\">install</span> <span class=\"n\">NeuroSkyPy</span>\n</pre>\n<h2>Usage</h2>\n<p>A test-script which is used as experiment it's left in order to check and learn how to use the class.\nThe basic steps to use the class are:</p>\n<ol>\n<li>Importing the module: <code>from NeuroPy import NeuroPy</code></li>\n<li>Initializing: <code>neuropy = NeuroPy()</code></li>\n<li>After initializing, either the callbacks can be set or just extract data from the object as it's done in test-script.</li>\n<li>Then call <code>neuropy.start()</code> method, it will start fetching data from mindwave.</li>\n<li>To stop call <code>neuropy.stop()</code> <strong>WARNING: The main problem it's that the thread is not stopped so it will trigger a error. Nevermind you could continue using the script.</strong></li>\n</ol>\n<h3>Obtaining Data from Device</h3>\n<ul>\n<li>\n<p><strong>Obtaining value:</strong> <code>attention = neuropy.attention</code> #to get value of attention_</p>\n<blockquote>\n<p><strong>Other Variable</strong> attention, meditation, rawValue, delta, theta, lowAlpha, highAlpha, lowBeta, highBeta, lowGamma, midGamma, poorSignal and blinkStrength</p>\n</blockquote>\n</li>\n<li>\n<p><strong>Setting callback:</strong> A call back can be associated with all the above variables so that a function is called when the variable is updated. Syntax:</p>\n<pre><code>setCallBack(\"[variable]\",callback_function)\n</code></pre>\n<p><strong>for eg.</strong> to set a callback for attention data the syntax will be</p>\n<pre><code>setCallBack(\"attention\",callback_function)\n</code></pre>\n<blockquote>\n<p><strong>Other Variables:</strong> attention, meditation, rawValue, delta, theta, lowAlpha, highAlpha, lowBeta, highBeta, lowGamma, midGamma, poorSignal and blinkStrength</p>\n</blockquote>\n</li>\n</ul>\n<h2>Sample Program 1 (Access via callback)</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">NeuroPy</span> <span class=\"kn\">import</span> <span class=\"n\">NeuroPy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n\n<span class=\"n\">neuropy</span> <span class=\"o\">=</span> <span class=\"n\">NeuroPy</span><span class=\"p\">()</span> \n\n<span class=\"k\">def</span> <span class=\"nf\">attention_callback</span><span class=\"p\">(</span><span class=\"n\">attention_value</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"this function will be called everytime NeuroPy has a new value for attention\"\"\"</span>\n    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Value of attention is: \"</span><span class=\"p\">,</span> <span class=\"n\">attention_value</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n<span class=\"n\">neuropy</span><span class=\"o\">.</span><span class=\"n\">setCallBack</span><span class=\"p\">(</span><span class=\"s2\">\"attention\"</span><span class=\"p\">,</span> <span class=\"n\">attention_callback</span><span class=\"p\">)</span>\n<span class=\"n\">neuropy</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n<span class=\"k\">finally</span><span class=\"p\">:</span>\n    <span class=\"n\">neuropy</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<h2>Sample Program 2 (Access via object)</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">NeuroPy</span> <span class=\"kn\">import</span> <span class=\"n\">NeuroPy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n\n<span class=\"n\">neuropy</span> <span class=\"o\">=</span> <span class=\"n\">NeuroPy</span><span class=\"p\">()</span> \n<span class=\"n\">neuropy</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">neuropy</span><span class=\"o\">.</span><span class=\"n\">meditation</span> <span class=\"o\">&gt;</span> <span class=\"mi\">70</span><span class=\"p\">:</span> <span class=\"c1\"># Access data through object</span>\n        <span class=\"n\">neuropy</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span> \n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">)</span> <span class=\"c1\"># Don't eat the CPU cycles</span>\n</pre>\n<h2>Python Compatibility</h2>\n<ul>\n<li><a href=\"http://www.python.com\" rel=\"nofollow\">Python</a> - v3.7</li>\n</ul>\n<h3>Note</h3>\n<p>This library comes from the libraries <a href=\"https://github.com/lihas/NeuroPy\" rel=\"nofollow\">NeuroPy</a> and <a href=\"https://github.com/BarkleyUS/mindwave-python\" rel=\"nofollow\">mindwave-python</a>.\nThe library is tested and comes with extracted data.</p>\n<h3>More Information</h3>\n\n          </div>"}, "last_serial": 6510955, "releases": {"1.2": [{"comment_text": "", "digests": {"md5": "439fcd7fb4318e5e74deb61bd81a7c55", "sha256": "0d4849a5f35ce0152ca5e2ec8651b797904f6fb0024c7b7f21f8166bcc1f9a57"}, "downloads": -1, "filename": "NeuroSkyPy-1.2.tar.gz", "has_sig": false, "md5_digest": "439fcd7fb4318e5e74deb61bd81a7c55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4473, "upload_time": "2020-01-21T18:32:58", "upload_time_iso_8601": "2020-01-21T18:32:58.761076Z", "url": "https://files.pythonhosted.org/packages/3c/26/bab86a3eb0d42d4ede76e7eb51c5f6f55cc8295dc32683ede432866268bb/NeuroSkyPy-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "c086ab53d6f36bf6d924a298cb489cac", "sha256": "fd8dd67efe4630bcf69fd7b7a4c7bd3cc728290ddb01d7005b18f39a3b96c26f"}, "downloads": -1, "filename": "NeuroSkyPy-1.3.tar.gz", "has_sig": false, "md5_digest": "c086ab53d6f36bf6d924a298cb489cac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7734, "upload_time": "2020-01-23T00:50:21", "upload_time_iso_8601": "2020-01-23T00:50:21.745638Z", "url": "https://files.pythonhosted.org/packages/96/a3/c5983585b0b480a6a708b1da923a5d2350fc30ecfbe2f73d2e5142753b52/NeuroSkyPy-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "f46f3a265fc0a4cd772544a42e749ed7", "sha256": "e5cb5876bb9a9b245b6be95e6af0e9186f13f6f7fb1871b6f3d953813f329f36"}, "downloads": -1, "filename": "NeuroSkyPy-1.4.tar.gz", "has_sig": false, "md5_digest": "f46f3a265fc0a4cd772544a42e749ed7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7738, "upload_time": "2020-01-23T00:53:12", "upload_time_iso_8601": "2020-01-23T00:53:12.926096Z", "url": "https://files.pythonhosted.org/packages/8f/14/5514d96d20936e0eec55ac881bd17ad911a1b2d653bf73776f1b862671f3/NeuroSkyPy-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "3c3d766d75bbac89d85494683057426b", "sha256": "16e79c8113fc3913b720e72052f661271417562f81cd6c924d3f9d9e8a65702b"}, "downloads": -1, "filename": "NeuroSkyPy-1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "3c3d766d75bbac89d85494683057426b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 20817, "upload_time": "2020-01-23T01:11:47", "upload_time_iso_8601": "2020-01-23T01:11:47.070612Z", "url": "https://files.pythonhosted.org/packages/57/23/da69c18b80ce3939dd37ac7d81fc6f456adfa9f02c419bc0fbe610da545f/NeuroSkyPy-1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0d9d3c3b332c57ef6b5ba0854efdd67", "sha256": "1f500fff9778fed09b79bc1c4b8bb47e8b41664811f37571838b563be31ddab5"}, "downloads": -1, "filename": "NeuroSkyPy-1.5.tar.gz", "has_sig": false, "md5_digest": "f0d9d3c3b332c57ef6b5ba0854efdd67", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8162, "upload_time": "2020-01-23T01:11:49", "upload_time_iso_8601": "2020-01-23T01:11:49.187470Z", "url": "https://files.pythonhosted.org/packages/d2/77/48126d51995316145252ce7210022aaaac8fb21665b7d128672ae49debb1/NeuroSkyPy-1.5.tar.gz", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "b65a5660f096520f2d483b2a78ad7099", "sha256": "e92f47745cda7f15a0292f8403b7dbc02668412427a8b51db6e754093ba8ecf0"}, "downloads": -1, "filename": "NeuroSkyPy-1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "b65a5660f096520f2d483b2a78ad7099", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 20908, "upload_time": "2020-01-23T22:39:27", "upload_time_iso_8601": "2020-01-23T22:39:27.718166Z", "url": "https://files.pythonhosted.org/packages/54/00/c94dabcfb95e00726dd98546c720842a9881d7783500245083b9d793f87f/NeuroSkyPy-1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f26597d87a5bea02389d6232934069e", "sha256": "bdb792ac3dca730b311f129a86b1c8fdf79254c64acb40ff7eee6b01ef89da20"}, "downloads": -1, "filename": "NeuroSkyPy-1.6.tar.gz", "has_sig": false, "md5_digest": "7f26597d87a5bea02389d6232934069e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8248, "upload_time": "2020-01-23T22:39:29", "upload_time_iso_8601": "2020-01-23T22:39:29.842777Z", "url": "https://files.pythonhosted.org/packages/66/14/6eef72ded226d1e296cdaaf2d24a4e1f61d95beae34d047117ad21391d6b/NeuroSkyPy-1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b65a5660f096520f2d483b2a78ad7099", "sha256": "e92f47745cda7f15a0292f8403b7dbc02668412427a8b51db6e754093ba8ecf0"}, "downloads": -1, "filename": "NeuroSkyPy-1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "b65a5660f096520f2d483b2a78ad7099", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 20908, "upload_time": "2020-01-23T22:39:27", "upload_time_iso_8601": "2020-01-23T22:39:27.718166Z", "url": "https://files.pythonhosted.org/packages/54/00/c94dabcfb95e00726dd98546c720842a9881d7783500245083b9d793f87f/NeuroSkyPy-1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f26597d87a5bea02389d6232934069e", "sha256": "bdb792ac3dca730b311f129a86b1c8fdf79254c64acb40ff7eee6b01ef89da20"}, "downloads": -1, "filename": "NeuroSkyPy-1.6.tar.gz", "has_sig": false, "md5_digest": "7f26597d87a5bea02389d6232934069e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8248, "upload_time": "2020-01-23T22:39:29", "upload_time_iso_8601": "2020-01-23T22:39:29.842777Z", "url": "https://files.pythonhosted.org/packages/66/14/6eef72ded226d1e296cdaaf2d24a4e1f61d95beae34d047117ad21391d6b/NeuroSkyPy-1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:45 2020"}