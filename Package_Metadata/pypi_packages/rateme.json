{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: C++", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Image Recognition", "Topic :: Software Development"], "description": "# Rating system using computer vision\n\n## Introduction\n\nRateMe is a neural network that allows you to recognize gestures of thumb up and thumb down.\nThe algorithm can be embedded in your project and automate the process of evaluation of something or someone.\n\n![](gifs/Algorithm.gif)\n\nFor example, using Rate Me you can:\n\n+ Rate music on the YouTube Music service, when you are uncomfortable with clicking buttons\n\n    ![](gifs/YouTube.gif)\n\n+ Count the votes in a beauty contest to determine the winner\n\n    ![](gifs/Street.gif)\n\n+ Rate drinks and meals during their tasting\n\n    ![](gifs/Wine.gif)\n\n## Technical part\n\n### Dependencies\n\n`opencv-contrib-python`, `numpy`\n\n`matplotlib`, `jupyter` for jupyter-notebook\n\n```bash\npip3 install opencv-contrib-python numpy\n```\n\n### Usage\n\nOpen `Test_RateMe.ipynb` to test RateMe on example images \n(for that you need to start `jupyter-notebook`, it will open window in your browser, where you need to select `Test_RateMe.ipynb`).\n\nFor example of realtime detection run `detect_on_webcam.py`.\n\nMinimal working example:\n\n```python\nimport cv2\nfrom RateMe.utils import RateMe\n\nimg = cv2.imread('test_imgs/like.jpg')\nlabel = net.decode(img)\n```\n\n### Description\n\nRateMe is based on [tiny-YOLOv3](https://pjreddie.com/darknet/yolo/) architecture. \n\nIt's accuracy of thumb up/down gesture recognition is calculated as mean average precision (mAP@0.25) = 0.851941, or 85.19%; average IoU = 73.89%\n\nThe neural network has been trained on ~3K images (taken from different angles photos of people showing their thumbs or not).\nImages were labeled using the [labelImg](https://github.com/tzutalin/labelImg) program.\n\nClass labels: 0 -- \"Like (thumb up)\", 1 -- \"Dislike (thumb down)\"\n\n### Speed\n\nFull pipeline speed is 6-7 FPS on Intel(R) Core(TM) i5-4300M CPU @ 2.60GHz.\n\n~100ms on frame grabbing\n\n~100ms on neural network inference\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/heyml/rateme", "keywords": "", "license": "MIT", "maintainer": "heyML", "maintainer_email": "", "name": "rateme", "package_url": "https://pypi.org/project/rateme/", "platform": "", "project_url": "https://pypi.org/project/rateme/", "project_urls": {"Homepage": "https://github.com/heyml/rateme"}, "release_url": "https://pypi.org/project/rateme/0.1.0/", "requires_dist": ["numpy", "opencv-python"], "requires_python": "", "summary": "RateMe is a neural network that allows you to recognize gestures of thumb up and thumb down", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Rating system using computer vision</h1>\n<h2>Introduction</h2>\n<p>RateMe is a neural network that allows you to recognize gestures of thumb up and thumb down.\nThe algorithm can be embedded in your project and automate the process of evaluation of something or someone.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28cb13c5118fb6663893da915b5f38b73b7aafe8/676966732f416c676f726974686d2e676966\"></p>\n<p>For example, using Rate Me you can:</p>\n<ul>\n<li>\n<p>Rate music on the YouTube Music service, when you are uncomfortable with clicking buttons</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be27696f6be7e9ce23f7e2fa5367fe9a7e481981/676966732f596f75547562652e676966\"></p>\n</li>\n<li>\n<p>Count the votes in a beauty contest to determine the winner</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1da0f7d759062216c58a3aef9e7d1950141304ae/676966732f5374726565742e676966\"></p>\n</li>\n<li>\n<p>Rate drinks and meals during their tasting</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2dbf966734db66ccc3dedb6e276d9b0560e6d4d4/676966732f57696e652e676966\"></p>\n</li>\n</ul>\n<h2>Technical part</h2>\n<h3>Dependencies</h3>\n<p><code>opencv-contrib-python</code>, <code>numpy</code></p>\n<p><code>matplotlib</code>, <code>jupyter</code> for jupyter-notebook</p>\n<pre>pip3 install opencv-contrib-python numpy\n</pre>\n<h3>Usage</h3>\n<p>Open <code>Test_RateMe.ipynb</code> to test RateMe on example images\n(for that you need to start <code>jupyter-notebook</code>, it will open window in your browser, where you need to select <code>Test_RateMe.ipynb</code>).</p>\n<p>For example of realtime detection run <code>detect_on_webcam.py</code>.</p>\n<p>Minimal working example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n<span class=\"kn\">from</span> <span class=\"nn\">RateMe.utils</span> <span class=\"kn\">import</span> <span class=\"n\">RateMe</span>\n\n<span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s1\">'test_imgs/like.jpg'</span><span class=\"p\">)</span>\n<span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">)</span>\n</pre>\n<h3>Description</h3>\n<p>RateMe is based on <a href=\"https://pjreddie.com/darknet/yolo/\" rel=\"nofollow\">tiny-YOLOv3</a> architecture.</p>\n<p>It's accuracy of thumb up/down gesture recognition is calculated as mean average precision (mAP@0.25) = 0.851941, or 85.19%; average IoU = 73.89%</p>\n<p>The neural network has been trained on ~3K images (taken from different angles photos of people showing their thumbs or not).\nImages were labeled using the <a href=\"https://github.com/tzutalin/labelImg\" rel=\"nofollow\">labelImg</a> program.</p>\n<p>Class labels: 0 -- \"Like (thumb up)\", 1 -- \"Dislike (thumb down)\"</p>\n<h3>Speed</h3>\n<p>Full pipeline speed is 6-7 FPS on Intel(R) Core(TM) i5-4300M CPU @ 2.60GHz.</p>\n<p>~100ms on frame grabbing</p>\n<p>~100ms on neural network inference</p>\n\n          </div>"}, "last_serial": 5480726, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1c387bccedbc0a4f8c74e49c9b9a5642", "sha256": "85e43c8328d3f0cc5784353c8e412047a4cf471deef79bddfeca555f3488af86"}, "downloads": -1, "filename": "rateme-0.1.0-cp3-none-any.whl", "has_sig": false, "md5_digest": "1c387bccedbc0a4f8c74e49c9b9a5642", "packagetype": "bdist_wheel", "python_version": "cp3", "requires_python": null, "size": 32192706, "upload_time": "2019-07-03T10:50:31", "upload_time_iso_8601": "2019-07-03T10:50:31.913945Z", "url": "https://files.pythonhosted.org/packages/6d/6d/1dda63022e0dae87615b7a1af5172f0c0c3547948de4769d977064143891/rateme-0.1.0-cp3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1c387bccedbc0a4f8c74e49c9b9a5642", "sha256": "85e43c8328d3f0cc5784353c8e412047a4cf471deef79bddfeca555f3488af86"}, "downloads": -1, "filename": "rateme-0.1.0-cp3-none-any.whl", "has_sig": false, "md5_digest": "1c387bccedbc0a4f8c74e49c9b9a5642", "packagetype": "bdist_wheel", "python_version": "cp3", "requires_python": null, "size": 32192706, "upload_time": "2019-07-03T10:50:31", "upload_time_iso_8601": "2019-07-03T10:50:31.913945Z", "url": "https://files.pythonhosted.org/packages/6d/6d/1dda63022e0dae87615b7a1af5172f0c0c3547948de4769d977064143891/rateme-0.1.0-cp3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:07:06 2020"}