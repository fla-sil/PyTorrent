{"info": {"author": "Simon Weber", "author_email": "simon@simonmweber.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "python-libfaketime: fast date/time mocking\n==========================================\n\n.. image:: https://img.shields.io/travis/simon-weber/python-libfaketime.svg\n        :target: https://travis-ci.org/simon-weber/python-libfaketime\n.. image:: https://img.shields.io/pypi/v/libfaketime.svg\n        :target: https://pypi.python.org/pypi/libfaketime\n.. image:: https://img.shields.io/badge/dynamic/json.svg?label=release&query=%24.status&maxAge=43200&uri=https%3A%2F%2Fwww.repominder.com%2Fbadge%2FeyJ1c2VyX2lkIjogMiwgInJlcG9faWQiOiA3OX0%3D%2F&link=https%3A%2F%2Fwww.repominder.com%2F\n        :target: https://www.repominder.com\n\npython-libfaketime is a wrapper of `libfaketime <https://github.com/wolfcw/libfaketime>`__ for python.\nSome brief details:\n\n* Linux and OS X, Pythons 3.5 through 3.8, pypy and pypy3\n* Mostly compatible with `freezegun <https://github.com/spulec/freezegun>`__.\n* Microsecond resolution.\n* Accepts datetimes and strings that can be parsed by dateutil.\n* Not threadsafe.\n* Will break profiling. A workaround: use ``libfaketime.{begin, end}_callback`` to disable/enable your profiler (`nosetest example <https://gist.github.com/simon-weber/8d43e33448684f85718417ce1a072bc8>`__).\n\n\nInstallation\n------------\n\n.. code-block:: sh\n\n    $ pip install libfaketime\n\nUsage\n-----\n\n.. code-block:: python\n\n    import datetime\n    from libfaketime import fake_time, reexec_if_needed\n\n    # libfaketime needs to be preloaded by the dynamic linker.\n    # This will exec the same command, but with the proper environment variables set.\n    # You can also skip this and manually manage your env (see \"How to avoid re-exec\").\n    reexec_if_needed()\n\n    def test_datetime_now():\n\n        # fake_time can be used as a context_manager\n        with fake_time('1970-01-01 00:00:01'):\n\n            # Every calls to a date or datetime function returns the mocked date\n            assert datetime.datetime.utcnow() == datetime.datetime(1970, 1, 1, 0, 0, 1)\n            assert datetime.datetime.now() == datetime.datetime(1970, 1, 1, 0, 0, 1)\n            assert time.time() == 1\n\n\n    # fake_time can also be used as a decorator\n    @fake_time('1970-01-01 00:00:01', tz_offset=12)\n    def test_datetime_now_with_offset():\n\n        # datetime.utcnow returns the mocked datetime without offset\n        assert datetime.datetime.utcnow() == datetime.datetime(1970, 1, 1, 0, 0, 1)\n\n        # datetime.now returns the mocked datetime with the offset passed to fake_time\n        assert datetime.datetime.now() == datetime.datetime(1970, 1, 1, 12, 0, 1)\n\n\nPerformance\n-----------\n\nlibfaketime tends to be significantly faster than `freezegun <https://github.com/spulec/freezegun>`__.\nHere's the output of a `totally unscientific benchmark <https://github.com/simon-weber/python-libfaketime/blob/master/benchmark.py>`__ on my laptop:\n\n.. code-block:: sh\n\n    $ python benchmark.py\n    re-exec with libfaketime dependencies\n    timing 1000 executions of <class 'libfaketime.fake_time'>\n    0.021755 seconds\n\n    $ python benchmark.py freezegun\n    timing 1000 executions of <function freeze_time at 0x10aaa1140>\n    6.561472 seconds\n\n\nUse with py.test\n----------------\n\nThe `pytest-libfaketime <https://gitlab.com/yaal/pytest-libfaketime>`__ plugin will automatically configure python-libfaketime for you:\n\n.. code-block:: sh\n\n    $ pip install pytest-libfaketime\n\n\nAlternatively, you can reexec manually from inside the pytest_configure hook:\n\n.. code-block:: python\n\n    # conftest.py\n    import os\n    import libfaketime\n\n    def pytest_configure():\n        libfaketime.reexec_if_needed()\n        _, env_additions = libfaketime.get_reload_information()\n        os.environ.update(env_additions)\n\n\nUse with tox\n------------\n\nIn your tox configuration file, under the ``testenv`` bloc, add the libfaketime environment variables to avoid re-execution:\n\n.. code-block::\n\n    setenv =\n        LD_PRELOAD = {envsitepackagesdir}/libfaketime/vendor/libfaketime/src/libfaketime.so.1\n        DONT_FAKE_MONOTONIC = 1\n        FAKETIME_DID_REEXEC = true\n\n\nMigration from freezegun\n------------------------\n\npython-libfaketime should have the same behavior as freezegun when running on supported code. To migrate to it, you can run:\n\n.. code-block:: bash\n\n    find . -type f -name \"*.py\" -exec sed -i 's/freezegun/libfaketime/g' \"{}\" \\;\n\n\nHow to avoid re-exec\n--------------------\n\nIn some cases - especially when your tests start other processes - re-execing can cause unexpected problems. To avoid this, you can preload the necessary environment variables yourself. The necessary environment for your system can be found by running ``python-libfaketime`` on the command line:\n\n.. code-block:: sh\n\n    $ python-libfaketime\n    export LD_PRELOAD=\"/home/foo/<snip>/vendor/libfaketime/src/libfaketime.so.1\"\n    export DONT_FAKE_MONOTONIC=\"1\"\n    export FAKETIME_DID_REEXEC=true\n\nYou can easily put this in a script like:\n\n.. code-block:: sh\n\n    $ eval $(python-libfaketime)\n    $ pytest  # ...or any other code that imports libfaketime\n\n\nContributing and testing\n------------------------\n\nContributions are welcome! You should compile libfaketime before running tests:\n\n.. code-block:: bash\n\n    make -C libfaketime/vendor/libfaketime\n\nThen you can install requirements with ``pip install -r requirements.txt`` and use ``pytest`` and ``tox`` to run the tests.\n\nuuid1 deadlock\n--------------\n\nCalling ``uuid.uuid1()`` multiple times while in a fake_time context can result in a deadlock when an OS-level uuid library is available.\nTo avoid this, python-libtaketime will monkeypatch uuid._uuid_generate_time (or similar, it varies by version) to None inside a fake_time context.\nThis may slow down uuid1 generation but should not affect correctness.\n\n\n.. :changelog:\n\nChangelog\n---------\n\n`Semantic versioning <http://semver.org/>`__ is used.\n\n2.0.0\n+++++\nreleased 2020-04-17\n\n- breaking: drop python 2.7 support\n- set LD_LIBRARY_PATH on linux to support paths containing spaces: `\\#57 <https://github.com/simon-weber/python-libfaketime/pull/57>`__\n- fix compatibility with non-pytz tzinfo objects: `\\#58 <https://github.com/simon-weber/python-libfaketime/pull/58>`__\n\n1.2.1\n+++++\nreleased 2019-01-20\n\n- fix a deadlock on python 3.7+\n\n1.2.0\n+++++\nreleased 2018-10-28\n\n- offset-aware datetimes now properly fake the timezone as well: `\\#49 <https://github.com/simon-weber/python-libfaketime/pull/49>`__\n\n1.1.0\n+++++\nreleased 2018-10-07\n\n- decorated classes can access the fake_time object with ``self._faked_time``: `\\#47 <https://github.com/simon-weber/python-libfaketime/pull/47>`__\n\n1.0.0\n+++++\nreleased 2018-06-16\n\n- **backwards incompatible**: the monotonic clock is no longer mocked: `\\#45 <https://github.com/simon-weber/python-libfaketime/pull/45>`__\n- ensure TZ is set to a valid timezone: `\\#46 <https://github.com/simon-weber/python-libfaketime/pull/46>`__\n\n0.5.2\n+++++\nreleased 2018-05-19\n\n- fix a bug causing incorrect times after unpatching under python 3.6+: `\\#43 <https://github.com/simon-weber/python-libfaketime/pull/43>`__\n- fix compilation under gcc8: `\\#44 <https://github.com/simon-weber/python-libfaketime/pull/44>`__\n\n0.5.1\n+++++\nreleased 2018-01-19\n\n- fix usage as a class decorator : `\\#41 <https://github.com/simon-weber/python-libfaketime/pull/41>`__\n\n0.5.0\n+++++\nreleased 2017-09-10\n\n- alias fake_time for freeze_time: `\\#31 <https://github.com/simon-weber/python-libfaketime/pull/31>`__\n- add tz_offset parameter: `\\#36 <https://github.com/simon-weber/python-libfaketime/pull/36>`__\n\n0.4.4\n+++++\nreleased 2017-07-16\n\n- allow contextlib2 as an alternative to contextdecorator: `\\#30 <https://github.com/simon-weber/python-libfaketime/pull/30>`__\n\n0.4.3\n+++++\nreleased 2017-07-07\n\n- add macOS Sierra compatibility: `\\#29 <https://github.com/simon-weber/python-libfaketime/pull/29>`__\n\n0.4.2\n+++++\nreleased 2016-06-30\n\n- fix only_main_thread=False: `\\#24 <https://github.com/simon-weber/python-libfaketime/pull/24>`__\n\n0.4.1\n+++++\nreleased 2016-05-02\n\n- fix deadlocks from uuid.uuid1 when faking time: `\\#14 <https://github.com/simon-weber/python-libfaketime/pull/14>`__\n- remove contextdecorator dependency on python3: `\\#15 <https://github.com/simon-weber/python-libfaketime/pull/15>`__\n\n0.4.0\n+++++\nreleased 2016-04-02\n\n- freezegun's tick() is now supported; see `their docs <https://github.com/spulec/freezegun/blob/f1f5148720dd715cfd6dc03bf1861dbedfaad493/README.rst#manual-ticks>`__ for usage.\n\n0.3.0\n+++++\nreleased 2016-03-04\n\n- invoking ``libfaketime`` from the command line will now print the necessary environment to avoid a re-exec.\n\n0.2.1\n+++++\nreleased 2016-03-01\n\n- python 3 support\n\n0.1.1\n+++++\nreleased 2015-09-11\n\n- prevent distribution of test directory: https://github.com/simon-weber/python-libfaketime/pull/4\n\n0.1.0\n+++++\nreleased 2015-06-23\n\n- add global start/stop callbacks\n\n0.0.3\n+++++\nreleased 2015-03-28\n\n- initial packaged release\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/libfaketime/", "keywords": "", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "libfaketime", "package_url": "https://pypi.org/project/libfaketime/", "platform": "", "project_url": "https://pypi.org/project/libfaketime/", "project_urls": {"Homepage": "http://pypi.python.org/pypi/libfaketime/"}, "release_url": "https://pypi.org/project/libfaketime/2.0.0/", "requires_dist": null, "requires_python": "", "summary": "A fast alternative to freezegun that wraps libfaketime.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/simon-weber/python-libfaketime\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/simon-weber/python-libfaketime.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96a4c567faba0b736c0501104fc559d31f9d8135/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f73696d6f6e2d77656265722f707974686f6e2d6c696266616b6574696d652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/libfaketime\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/libfaketime.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d3f6ccab0d04f38f7471358de05255e4a2566fbd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c696266616b6574696d652e737667\"></a>\n<a href=\"https://www.repominder.com\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/dynamic/json.svg?label=release&amp;query=%24.status&amp;maxAge=43200&amp;uri=https%3A%2F%2Fwww.repominder.com%2Fbadge%2FeyJ1c2VyX2lkIjogMiwgInJlcG9faWQiOiA3OX0%3D%2F&amp;link=https%3A%2F%2Fwww.repominder.com%2F\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f37e0055ad100c9f9ecc286b4d9029fea19ab778/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e2e7376673f6c6162656c3d72656c656173652671756572793d2532342e737461747573266d61784167653d3433323030267572693d68747470732533412532462532467777772e7265706f6d696e6465722e636f6d253246626164676525324665794a316332567958326c6b496a6f674d697767496e4a6c63473966615751694f6941334f5830253344253246266c696e6b3d68747470732533412532462532467777772e7265706f6d696e6465722e636f6d253246\"></a>\n<p>python-libfaketime is a wrapper of <a href=\"https://github.com/wolfcw/libfaketime\" rel=\"nofollow\">libfaketime</a> for python.\nSome brief details:</p>\n<ul>\n<li>Linux and OS X, Pythons 3.5 through 3.8, pypy and pypy3</li>\n<li>Mostly compatible with <a href=\"https://github.com/spulec/freezegun\" rel=\"nofollow\">freezegun</a>.</li>\n<li>Microsecond resolution.</li>\n<li>Accepts datetimes and strings that can be parsed by dateutil.</li>\n<li>Not threadsafe.</li>\n<li>Will break profiling. A workaround: use <tt><span class=\"pre\">libfaketime.{begin,</span> end}_callback</tt> to disable/enable your profiler (<a href=\"https://gist.github.com/simon-weber/8d43e33448684f85718417ce1a072bc8\" rel=\"nofollow\">nosetest example</a>).</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install libfaketime\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">libfaketime</span> <span class=\"kn\">import</span> <span class=\"n\">fake_time</span><span class=\"p\">,</span> <span class=\"n\">reexec_if_needed</span>\n\n<span class=\"c1\"># libfaketime needs to be preloaded by the dynamic linker.</span>\n<span class=\"c1\"># This will exec the same command, but with the proper environment variables set.</span>\n<span class=\"c1\"># You can also skip this and manually manage your env (see \"How to avoid re-exec\").</span>\n<span class=\"n\">reexec_if_needed</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_datetime_now</span><span class=\"p\">():</span>\n\n    <span class=\"c1\"># fake_time can be used as a context_manager</span>\n    <span class=\"k\">with</span> <span class=\"n\">fake_time</span><span class=\"p\">(</span><span class=\"s1\">'1970-01-01 00:00:01'</span><span class=\"p\">):</span>\n\n        <span class=\"c1\"># Every calls to a date or datetime function returns the mocked date</span>\n        <span class=\"k\">assert</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">utcnow</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">1970</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">1970</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n\n\n<span class=\"c1\"># fake_time can also be used as a decorator</span>\n<span class=\"nd\">@fake_time</span><span class=\"p\">(</span><span class=\"s1\">'1970-01-01 00:00:01'</span><span class=\"p\">,</span> <span class=\"n\">tz_offset</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_datetime_now_with_offset</span><span class=\"p\">():</span>\n\n    <span class=\"c1\"># datetime.utcnow returns the mocked datetime without offset</span>\n    <span class=\"k\">assert</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">utcnow</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">1970</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># datetime.now returns the mocked datetime with the offset passed to fake_time</span>\n    <span class=\"k\">assert</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">1970</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"performance\">\n<h2>Performance</h2>\n<p>libfaketime tends to be significantly faster than <a href=\"https://github.com/spulec/freezegun\" rel=\"nofollow\">freezegun</a>.\nHere\u2019s the output of a <a href=\"https://github.com/simon-weber/python-libfaketime/blob/master/benchmark.py\" rel=\"nofollow\">totally unscientific benchmark</a> on my laptop:</p>\n<pre>$ python benchmark.py\nre-exec with libfaketime dependencies\ntiming <span class=\"m\">1000</span> executions of &lt;class <span class=\"s1\">'libfaketime.fake_time'</span>&gt;\n<span class=\"m\">0</span>.021755 seconds\n\n$ python benchmark.py freezegun\ntiming <span class=\"m\">1000</span> executions of &lt;<span class=\"k\">function</span> freeze_time at 0x10aaa1140&gt;\n<span class=\"m\">6</span>.561472 seconds\n</pre>\n</div>\n<div id=\"use-with-py-test\">\n<h2>Use with py.test</h2>\n<p>The <a href=\"https://gitlab.com/yaal/pytest-libfaketime\" rel=\"nofollow\">pytest-libfaketime</a> plugin will automatically configure python-libfaketime for you:</p>\n<pre>$ pip install pytest-libfaketime\n</pre>\n<p>Alternatively, you can reexec manually from inside the pytest_configure hook:</p>\n<pre><span class=\"c1\"># conftest.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">libfaketime</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">pytest_configure</span><span class=\"p\">():</span>\n    <span class=\"n\">libfaketime</span><span class=\"o\">.</span><span class=\"n\">reexec_if_needed</span><span class=\"p\">()</span>\n    <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">env_additions</span> <span class=\"o\">=</span> <span class=\"n\">libfaketime</span><span class=\"o\">.</span><span class=\"n\">get_reload_information</span><span class=\"p\">()</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">env_additions</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"use-with-tox\">\n<h2>Use with tox</h2>\n<p>In your tox configuration file, under the <tt>testenv</tt> bloc, add the libfaketime environment variables to avoid re-execution:</p>\n<pre>setenv =\n    LD_PRELOAD = {envsitepackagesdir}/libfaketime/vendor/libfaketime/src/libfaketime.so.1\n    DONT_FAKE_MONOTONIC = 1\n    FAKETIME_DID_REEXEC = true\n</pre>\n</div>\n<div id=\"migration-from-freezegun\">\n<h2>Migration from freezegun</h2>\n<p>python-libfaketime should have the same behavior as freezegun when running on supported code. To migrate to it, you can run:</p>\n<pre>find . -type f -name <span class=\"s2\">\"*.py\"</span> -exec sed -i <span class=\"s1\">'s/freezegun/libfaketime/g'</span> <span class=\"s2\">\"{}\"</span> <span class=\"se\">\\;</span>\n</pre>\n</div>\n<div id=\"how-to-avoid-re-exec\">\n<h2>How to avoid re-exec</h2>\n<p>In some cases - especially when your tests start other processes - re-execing can cause unexpected problems. To avoid this, you can preload the necessary environment variables yourself. The necessary environment for your system can be found by running <tt><span class=\"pre\">python-libfaketime</span></tt> on the command line:</p>\n<pre>$ python-libfaketime\n<span class=\"nb\">export</span> <span class=\"nv\">LD_PRELOAD</span><span class=\"o\">=</span><span class=\"s2\">\"/home/foo/&lt;snip&gt;/vendor/libfaketime/src/libfaketime.so.1\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">DONT_FAKE_MONOTONIC</span><span class=\"o\">=</span><span class=\"s2\">\"1\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">FAKETIME_DID_REEXEC</span><span class=\"o\">=</span><span class=\"nb\">true</span>\n</pre>\n<p>You can easily put this in a script like:</p>\n<pre>$ <span class=\"nb\">eval</span> <span class=\"k\">$(</span>python-libfaketime<span class=\"k\">)</span>\n$ pytest  <span class=\"c1\"># ...or any other code that imports libfaketime</span>\n</pre>\n</div>\n<div id=\"contributing-and-testing\">\n<h2>Contributing and testing</h2>\n<p>Contributions are welcome! You should compile libfaketime before running tests:</p>\n<pre>make -C libfaketime/vendor/libfaketime\n</pre>\n<p>Then you can install requirements with <tt>pip install <span class=\"pre\">-r</span> requirements.txt</tt> and use <tt>pytest</tt> and <tt>tox</tt> to run the tests.</p>\n</div>\n<div id=\"uuid1-deadlock\">\n<h2>uuid1 deadlock</h2>\n<p>Calling <tt>uuid.uuid1()</tt> multiple times while in a fake_time context can result in a deadlock when an OS-level uuid library is available.\nTo avoid this, python-libtaketime will monkeypatch uuid._uuid_generate_time (or similar, it varies by version) to None inside a fake_time context.\nThis may slow down uuid1 generation but should not affect correctness.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p><a href=\"http://semver.org/\" rel=\"nofollow\">Semantic versioning</a> is used.</p>\n<div id=\"id1\">\n<h3>2.0.0</h3>\n<p>released 2020-04-17</p>\n<ul>\n<li>breaking: drop python 2.7 support</li>\n<li>set LD_LIBRARY_PATH on linux to support paths containing spaces: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/57\" rel=\"nofollow\">#57</a></li>\n<li>fix compatibility with non-pytz tzinfo objects: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/58\" rel=\"nofollow\">#58</a></li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.2.1</h3>\n<p>released 2019-01-20</p>\n<ul>\n<li>fix a deadlock on python 3.7+</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.2.0</h3>\n<p>released 2018-10-28</p>\n<ul>\n<li>offset-aware datetimes now properly fake the timezone as well: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/49\" rel=\"nofollow\">#49</a></li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.1.0</h3>\n<p>released 2018-10-07</p>\n<ul>\n<li>decorated classes can access the fake_time object with <tt>self._faked_time</tt>: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/47\" rel=\"nofollow\">#47</a></li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.0.0</h3>\n<p>released 2018-06-16</p>\n<ul>\n<li><strong>backwards incompatible</strong>: the monotonic clock is no longer mocked: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/45\" rel=\"nofollow\">#45</a></li>\n<li>ensure TZ is set to a valid timezone: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/46\" rel=\"nofollow\">#46</a></li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.5.2</h3>\n<p>released 2018-05-19</p>\n<ul>\n<li>fix a bug causing incorrect times after unpatching under python 3.6+: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/43\" rel=\"nofollow\">#43</a></li>\n<li>fix compilation under gcc8: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/44\" rel=\"nofollow\">#44</a></li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.5.1</h3>\n<p>released 2018-01-19</p>\n<ul>\n<li>fix usage as a class decorator : <a href=\"https://github.com/simon-weber/python-libfaketime/pull/41\" rel=\"nofollow\">#41</a></li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.5.0</h3>\n<p>released 2017-09-10</p>\n<ul>\n<li>alias fake_time for freeze_time: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/31\" rel=\"nofollow\">#31</a></li>\n<li>add tz_offset parameter: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/36\" rel=\"nofollow\">#36</a></li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.4.4</h3>\n<p>released 2017-07-16</p>\n<ul>\n<li>allow contextlib2 as an alternative to contextdecorator: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/30\" rel=\"nofollow\">#30</a></li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.4.3</h3>\n<p>released 2017-07-07</p>\n<ul>\n<li>add macOS Sierra compatibility: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/29\" rel=\"nofollow\">#29</a></li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.4.2</h3>\n<p>released 2016-06-30</p>\n<ul>\n<li>fix only_main_thread=False: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/24\" rel=\"nofollow\">#24</a></li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.4.1</h3>\n<p>released 2016-05-02</p>\n<ul>\n<li>fix deadlocks from uuid.uuid1 when faking time: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/14\" rel=\"nofollow\">#14</a></li>\n<li>remove contextdecorator dependency on python3: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/15\" rel=\"nofollow\">#15</a></li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.4.0</h3>\n<p>released 2016-04-02</p>\n<ul>\n<li>freezegun\u2019s tick() is now supported; see <a href=\"https://github.com/spulec/freezegun/blob/f1f5148720dd715cfd6dc03bf1861dbedfaad493/README.rst#manual-ticks\" rel=\"nofollow\">their docs</a> for usage.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.3.0</h3>\n<p>released 2016-03-04</p>\n<ul>\n<li>invoking <tt>libfaketime</tt> from the command line will now print the necessary environment to avoid a re-exec.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.2.1</h3>\n<p>released 2016-03-01</p>\n<ul>\n<li>python 3 support</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.1.1</h3>\n<p>released 2015-09-11</p>\n<ul>\n<li>prevent distribution of test directory: <a href=\"https://github.com/simon-weber/python-libfaketime/pull/4\" rel=\"nofollow\">https://github.com/simon-weber/python-libfaketime/pull/4</a></li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>0.1.0</h3>\n<p>released 2015-06-23</p>\n<ul>\n<li>add global start/stop callbacks</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>0.0.3</h3>\n<p>released 2015-03-28</p>\n<ul>\n<li>initial packaged release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7041343, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "47255825beed14ee3ca50870de68035e", "sha256": "d4bb1732cc149f55e45ac7ddc2cc38043e08cce69dd015951baf8dddf7e6fde1"}, "downloads": -1, "filename": "libfaketime-0.0.2.tar.gz", "has_sig": false, "md5_digest": "47255825beed14ee3ca50870de68035e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36075, "upload_time": "2015-03-28T23:45:09", "upload_time_iso_8601": "2015-03-28T23:45:09.479837Z", "url": "https://files.pythonhosted.org/packages/fc/ee/4cb334590a2ffc9b24542009ccd1421523b7535f58d9ce95224d894c4e82/libfaketime-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "86d2a55cf05fd510d59e0caae9d3c20a", "sha256": "8df01729c14427c327ca7fd95ca4166823b811fd89714e384af750a6140c7479"}, "downloads": -1, "filename": "libfaketime-0.0.3.tar.gz", "has_sig": false, "md5_digest": "86d2a55cf05fd510d59e0caae9d3c20a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36184, "upload_time": "2015-03-29T01:34:39", "upload_time_iso_8601": "2015-03-29T01:34:39.569091Z", "url": "https://files.pythonhosted.org/packages/0e/00/ccdbb6482008c31d918e27a9eb7766460c85798465c6bff58b4101dc5bfb/libfaketime-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "f9b0fff478fac1271d120d56b6c1bd5a", "sha256": "ab422fa5d814503bf69e3fdbb4ba7322e8ef5ae95bff7c0b085fea521e4dfe1e"}, "downloads": -1, "filename": "libfaketime-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f9b0fff478fac1271d120d56b6c1bd5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36295, "upload_time": "2015-07-23T15:28:34", "upload_time_iso_8601": "2015-07-23T15:28:34.189910Z", "url": "https://files.pythonhosted.org/packages/be/e1/64529ac4c404540ce4b997dd792cd24c04bee88d496488fb6b4b43b2cde1/libfaketime-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a66f6f5a63ae1f8f837b7b6d68be5fa9", "sha256": "c181a6a613799d3f263d77454a7ca7d61a6b3dd8275945b865b41e08c3c0f7a9"}, "downloads": -1, "filename": "libfaketime-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a66f6f5a63ae1f8f837b7b6d68be5fa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36884, "upload_time": "2015-09-11T19:47:03", "upload_time_iso_8601": "2015-09-11T19:47:03.200785Z", "url": "https://files.pythonhosted.org/packages/61/ce/43bb56cde7773b7ab8197684c03b31a2295548f250c288e69c2f8b33c127/libfaketime-0.1.1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "814baacb9e51c49ab13d6bf0eeedfe72", "sha256": "e5b1192820261f093b4686ab09bf4141caab291a11db22e6a049c2a505e29226"}, "downloads": -1, "filename": "libfaketime-0.2.1.tar.gz", "has_sig": false, "md5_digest": "814baacb9e51c49ab13d6bf0eeedfe72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37232, "upload_time": "2016-03-01T19:09:25", "upload_time_iso_8601": "2016-03-01T19:09:25.088552Z", "url": "https://files.pythonhosted.org/packages/fe/31/d1e8cf05fbcd9badf6060584b04ae9977f23d6e72ce6161605badc1a8a19/libfaketime-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c631a4b7fdcc913d7cc9595028b7e812", "sha256": "fec8df9e233910bac423f2325a90d2cc884da1d18bf6837d88b5f1207bff4edd"}, "downloads": -1, "filename": "libfaketime-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c631a4b7fdcc913d7cc9595028b7e812", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38097, "upload_time": "2016-03-04T19:24:22", "upload_time_iso_8601": "2016-03-04T19:24:22.496648Z", "url": "https://files.pythonhosted.org/packages/93/33/fb59078b2975562c3b4848bbc8e65a8fe87b51d4e9c13ee4a9ef1cc95777/libfaketime-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "66eb5f905a3f327737c98278f66aebff", "sha256": "5be468049ac91940910400eef5a17051039e3e8796eb3210542604cc0a186a84"}, "downloads": -1, "filename": "libfaketime-0.4.0.tar.gz", "has_sig": false, "md5_digest": "66eb5f905a3f327737c98278f66aebff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37415, "upload_time": "2016-04-03T01:33:02", "upload_time_iso_8601": "2016-04-03T01:33:02.862695Z", "url": "https://files.pythonhosted.org/packages/f1/f8/c9d85656cd54c5837fc25c9cebc234c35ee5bed8142fe00ddb957d110055/libfaketime-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "7ff449b227fd980fa47216c6a8bab723", "sha256": "d9f3b27acae6a9e289ebee5ed0c9e926bd46cf11e2fa84a27a2b265ccb23562a"}, "downloads": -1, "filename": "libfaketime-0.4.1.tar.gz", "has_sig": false, "md5_digest": "7ff449b227fd980fa47216c6a8bab723", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38811, "upload_time": "2016-05-02T17:41:22", "upload_time_iso_8601": "2016-05-02T17:41:22.259918Z", "url": "https://files.pythonhosted.org/packages/5d/98/9a19fb047ee0fe6be8604c575da4ba8f8593a7e02a37e819e923aecd396a/libfaketime-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "3571de419c39a4c48173fcfc29d6ad84", "sha256": "889e8d7fba4d4e3b5c32e88c2e4007e1c846b5163f04c4cb61812288ca2bc6b9"}, "downloads": -1, "filename": "libfaketime-0.4.2.tar.gz", "has_sig": false, "md5_digest": "3571de419c39a4c48173fcfc29d6ad84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38394, "upload_time": "2016-07-30T20:54:35", "upload_time_iso_8601": "2016-07-30T20:54:35.681844Z", "url": "https://files.pythonhosted.org/packages/0b/0c/acf93e2e793266cebeca2312d50cebc1fac2b6f81ead05178dea6175324b/libfaketime-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "c0c98f6f6891cdc4ddb1c419b160bed3", "sha256": "730597182fd71c1991a067d4ead0f6791c31b5668996e64a4eb3877fd5c60e04"}, "downloads": -1, "filename": "libfaketime-0.4.3.tar.gz", "has_sig": false, "md5_digest": "c0c98f6f6891cdc4ddb1c419b160bed3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64035, "upload_time": "2017-07-07T15:45:45", "upload_time_iso_8601": "2017-07-07T15:45:45.657676Z", "url": "https://files.pythonhosted.org/packages/09/52/3c83eb60f031e451892c7c7bf092fc2b483207073df7322f50b414591bda/libfaketime-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "7283a60ed7be8bf02801a8aed81c2a51", "sha256": "34232e4c0b79dc6c450699b3bdbd0b8d12cc44d518d28014cf5e590a88033158"}, "downloads": -1, "filename": "libfaketime-0.4.4.tar.gz", "has_sig": false, "md5_digest": "7283a60ed7be8bf02801a8aed81c2a51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63632, "upload_time": "2017-07-16T04:17:41", "upload_time_iso_8601": "2017-07-16T04:17:41.450715Z", "url": "https://files.pythonhosted.org/packages/c0/79/3ccac018432017b35bb0cf7fb6fb8c5dba4f8f454d44068093d220e3d605/libfaketime-0.4.4.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "365c57251758efe305a994110725cbe1", "sha256": "e81c59c571b9883743f34eea6b7412fd326c7a53dbbd191b84f5c3312d664dab"}, "downloads": -1, "filename": "libfaketime-0.5.0.tar.gz", "has_sig": false, "md5_digest": "365c57251758efe305a994110725cbe1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64809, "upload_time": "2017-09-10T20:19:25", "upload_time_iso_8601": "2017-09-10T20:19:25.083108Z", "url": "https://files.pythonhosted.org/packages/f5/b9/a257276ae57952ddb4e34d73c4de3b85aa08c49a409edf2327783a8c7a32/libfaketime-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "aaec3ec1b1a501fdfe8728fcc1643e94", "sha256": "0a4d34620d0d21d570e6e51bf82a5ecbc41fb30a8fc5529e9289c0a1f2db6046"}, "downloads": -1, "filename": "libfaketime-0.5.1.tar.gz", "has_sig": false, "md5_digest": "aaec3ec1b1a501fdfe8728fcc1643e94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68854, "upload_time": "2018-01-20T02:29:20", "upload_time_iso_8601": "2018-01-20T02:29:20.441060Z", "url": "https://files.pythonhosted.org/packages/cf/e4/f45b712ecd26d77702941f939a5bd574ef33e0fc345365b8d77399c4f506/libfaketime-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "d29b3f9a1e54cdae8041e3d8e067fb38", "sha256": "865f5437f1e105eb3540270e17bb551f726b673e8bcf44ce7c638d934130eb79"}, "downloads": -1, "filename": "libfaketime-0.5.2.tar.gz", "has_sig": false, "md5_digest": "d29b3f9a1e54cdae8041e3d8e067fb38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83655, "upload_time": "2018-05-19T23:48:39", "upload_time_iso_8601": "2018-05-19T23:48:39.205611Z", "url": "https://files.pythonhosted.org/packages/4e/40/62b36576f59818f9a5547e1e6e1947225429ec62f401ef5d7bd436960c10/libfaketime-0.5.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "ccf3a7503c02064c61e2f4cb3ffb8621", "sha256": "02fc23d62fb75cf2174749d8c6408c0e27ec23678da2fb6be40ad951c9102d98"}, "downloads": -1, "filename": "libfaketime-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ccf3a7503c02064c61e2f4cb3ffb8621", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83922, "upload_time": "2018-06-16T23:08:19", "upload_time_iso_8601": "2018-06-16T23:08:19.999514Z", "url": "https://files.pythonhosted.org/packages/84/d0/0792456f20f89a7c269da3d5da82d227c0d44ccdeef54c80c903518e5971/libfaketime-1.0.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "c921e6ca62ef1ee045013678034c9c8b", "sha256": "5632aa0576a61f951d5131d189cd844475be6bda8f9f48d923349521edfc5a66"}, "downloads": -1, "filename": "libfaketime-1.2.0.tar.gz", "has_sig": false, "md5_digest": "c921e6ca62ef1ee045013678034c9c8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84951, "upload_time": "2018-10-28T19:29:07", "upload_time_iso_8601": "2018-10-28T19:29:07.938987Z", "url": "https://files.pythonhosted.org/packages/99/11/48056b50ce45fe4e8a55ed3b17d68564e3718c3643c23c7c37da68219d79/libfaketime-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "d21c37e84a8fb6e64049eb7cdca630a1", "sha256": "e4f54bfcefe8545e462abfbd501e4c037f35b5e8bbe4f1b206df672336e2e0eb"}, "downloads": -1, "filename": "libfaketime-1.2.1.tar.gz", "has_sig": false, "md5_digest": "d21c37e84a8fb6e64049eb7cdca630a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84098, "upload_time": "2019-01-21T03:49:51", "upload_time_iso_8601": "2019-01-21T03:49:51.206345Z", "url": "https://files.pythonhosted.org/packages/a3/cd/560c9f7d8afdb7dc71b96392c5d8d97533879a2c965fb9e6b005bcb60996/libfaketime-1.2.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "c328eb227e9a9b67f690009fb0e8a4c7", "sha256": "a63b3f359f6f15f7b814ebfe1e4a9642bd481178223f0d97aab1a537475876df"}, "downloads": -1, "filename": "libfaketime-2.0.0.tar.gz", "has_sig": false, "md5_digest": "c328eb227e9a9b67f690009fb0e8a4c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84942, "upload_time": "2020-04-17T16:03:11", "upload_time_iso_8601": "2020-04-17T16:03:11.312944Z", "url": "https://files.pythonhosted.org/packages/74/ed/3022e9494664c4d3b083e0b5d061be800a71c13ed8808ee73421e89f1eff/libfaketime-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c328eb227e9a9b67f690009fb0e8a4c7", "sha256": "a63b3f359f6f15f7b814ebfe1e4a9642bd481178223f0d97aab1a537475876df"}, "downloads": -1, "filename": "libfaketime-2.0.0.tar.gz", "has_sig": false, "md5_digest": "c328eb227e9a9b67f690009fb0e8a4c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84942, "upload_time": "2020-04-17T16:03:11", "upload_time_iso_8601": "2020-04-17T16:03:11.312944Z", "url": "https://files.pythonhosted.org/packages/74/ed/3022e9494664c4d3b083e0b5d061be800a71c13ed8808ee73421e89f1eff/libfaketime-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:37 2020"}