{"info": {"author": "Louis Paternault", "author_email": "spalax@gresille.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Plugins", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Testing"], "description": "fullcoverage \u2014 Cheat and get 100% test coverage\n===============================================\n\n|sources| |pypi| |build| |documentation| |license|\n\n.. warning::\n\n    In case this is not clear enough: *this module is a joke !* Do not use it. It is not dangerous; it is just useless.\n\nNowadays, every trendy project has a collection of shiny littel badges. They look great, but they can be hard to get. This modules is here to help you to get the 100\u00a0% test coverage badge, without any effort.\n\n\n.. contents::\n  :local:\n  :backlinks: none\n\nWhat's new?\n-----------\n\nSee `changelog\n<https://git.framasoft.org/spalax/fullcoverage/blob/master/CHANGELOG.md>`_.\n\nDownload and install\n--------------------\n\n* From sources:\n\n  * Download: https://pypi.python.org/pypi/fullcoverage\n  * Install (in a `virtualenv`, if you do not want to mess with your distribution installation system)::\n\n        python3 setup.py install\n\n* From pip::\n\n    pip install fullcoverage\n\n* Quick and dirty Debian (and Ubuntu?) package\n\n  This requires `stdeb <https://github.com/astraw/stdeb>`_ to be installed::\n\n      python3 setup.py --command-packages=stdeb.command bdist_deb\n      sudo dpkg -i deb_dist/fullcoverage-<VERSION>_all.deb\n\nHow-to\n------\n\nLet's say you want to get you module ``foobar`` thoroughly covered.\n\n#. Install `fullcoverage`::\n\n    pip install fullcoverage\n\n#. Enable this plugin. That is, in the `.coveragerc` file of ``foobar``, have the lines::\n\n    [run]\n    plugins = fullcoverage.plugin\n\n#. Optionnaly, if you want to restrict the test report to your module, you can add, in the same `.coveragerc` file::\n\n    [fullcoverage.plugin]\n    source = foobar\n\n#. If you already have tests that import all of ``foobar`` submodules, that's it. Otherwise, somewhere in your tests, have the following lines import everything in your module::\n\n    import foobar\n    import fullcoverage\n\n    fullcoverage.import_all(foobar)\n\n#. That's it! You can now run your tests::\n\n    coverage run --source foobar -m unittest\n    coverage report --fail-under=100\n\nBugs and Limitations\n--------------------\n\n* This does not work with ``doctest``. Please feel free to `send a patch <http://git.framasoft.org/spalax/fullcoverage/issues/new>`__.\n* This only works with python 3.5. Please feel free to `send a patch <http://git.framasoft.org/spalax/fullcoverage/issues/new>`__.\n* Even though tests cover 100\u00a0% of your module, it may still contain bugs.\n\nFAQ\n---\n\n* Isn't it dangerous? Are you running every line of a module to get 100\u00a0% test coverage? What if you run a line ``shutil.rmtree('/')`` ?\n\nThis plugins does not run random line of codes. It imports every plugin that is to be covered, but it cheats ``coverage`` into thinking they were thoroughly tested, without testing anything. If your module is safe to import, it is safe to use ``fullcoverage``. If your module is not safe to import, fix your module.\n\n* If your plugin is so great, why aren't you showing off with one of those *100\u00a0% coverage* badges?\n\nWell, ``fullcoverage`` is hosted on a `Gitlab instance <http://git.framasoft.org/spalax/fullcoverage>`_, which `does not provide those badges yet <https://gitlab.com/gitlab-org/gitlab-ce/issues/3714>`_. But this plugin is implemented to test itself, and `it is thoroughly covered by tests <https://git.framasoft.org/spalax/fullcoverage/builds>`_.\n\n.. |documentation| image:: http://readthedocs.org/projects/fullcoverage/badge\n  :target: http://fullcoverage.readthedocs.org\n.. |pypi| image:: https://img.shields.io/pypi/v/fullcoverage.svg\n  :target: http://pypi.python.org/pypi/fullcoverage\n.. |license| image:: https://img.shields.io/pypi/l/fullcoverage.svg\n  :target: http://www.gnu.org/licenses/gpl-3.0.html\n.. |sources| image:: https://img.shields.io/badge/sources-fullcoverage-brightgreen.svg\n  :target: http://git.framasoft.org/spalax/fullcoverage\n.. |build| image:: https://git.framasoft.org/spalax/fullcoverage/badges/master/build.svg\n  :target: https://git.framasoft.org/spalax/fullcoverage/builds", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://git.framasoft.org/spalax/fullcoverage", "keywords": null, "license": "GPLv3 or any later version", "maintainer": null, "maintainer_email": null, "name": "fullcoverage", "package_url": "https://pypi.org/project/fullcoverage/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fullcoverage/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://git.framasoft.org/spalax/fullcoverage"}, "release_url": "https://pypi.org/project/fullcoverage/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Cheat and get 100% test coverage", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://git.framasoft.org/spalax/fullcoverage\" rel=\"nofollow\"><img alt=\"sources\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b8dbb23c296501cab97ff2c0b9f7c357f666fe65/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f75726365732d66756c6c636f7665726167652d627269676874677265656e2e737667\"></a> <a href=\"http://pypi.python.org/pypi/fullcoverage\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/98b652e5a8afeb83f1282cb553c097e3447ae489/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f66756c6c636f7665726167652e737667\"></a> <a href=\"https://git.framasoft.org/spalax/fullcoverage/builds\" rel=\"nofollow\"><img alt=\"build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cde0fe54da0049778ebe8af03ceaea78a4d79f90/68747470733a2f2f6769742e6672616d61736f66742e6f72672f7370616c61782f66756c6c636f7665726167652f6261646765732f6d61737465722f6275696c642e737667\"></a> <a href=\"http://fullcoverage.readthedocs.org\" rel=\"nofollow\"><img alt=\"documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a916121c351bf821bd821e744916080e989e035/687474703a2f2f72656164746865646f63732e6f72672f70726f6a656374732f66756c6c636f7665726167652f6261646765\"></a> <a href=\"http://www.gnu.org/licenses/gpl-3.0.html\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b2f5f8b71861ba7507b12b5eb5e96067126b2e76/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f66756c6c636f7665726167652e737667\"></a></p>\n<div>\n<p>Warning</p>\n<p>In case this is not clear enough: <em>this module is a joke !</em> Do not use it. It is not dangerous; it is just useless.</p>\n</div>\n<p>Nowadays, every trendy project has a collection of shiny littel badges. They look great, but they can be hard to get. This modules is here to help you to get the 100\u00a0% test coverage badge, without any effort.</p>\n<div id=\"contents\">\n<ul>\n<li><a href=\"#what-s-new\" id=\"id1\" rel=\"nofollow\">What\u2019s new?</a></li>\n<li><a href=\"#download-and-install\" id=\"id2\" rel=\"nofollow\">Download and install</a></li>\n<li><a href=\"#how-to\" id=\"id3\" rel=\"nofollow\">How-to</a></li>\n<li><a href=\"#bugs-and-limitations\" id=\"id4\" rel=\"nofollow\">Bugs and Limitations</a></li>\n<li><a href=\"#faq\" id=\"id5\" rel=\"nofollow\">FAQ</a></li>\n</ul>\n</div>\n<div id=\"what-s-new\">\n<h2>What\u2019s new?</h2>\n<p>See <a href=\"https://git.framasoft.org/spalax/fullcoverage/blob/master/CHANGELOG.md\" rel=\"nofollow\">changelog</a>.</p>\n</div>\n<div id=\"download-and-install\">\n<h2>Download and install</h2>\n<ul>\n<li><p>From sources:</p>\n<ul>\n<li><p>Download: <a href=\"https://pypi.python.org/pypi/fullcoverage\" rel=\"nofollow\">https://pypi.python.org/pypi/fullcoverage</a></p>\n</li>\n<li><p>Install (in a <cite>virtualenv</cite>, if you do not want to mess with your distribution installation system):</p>\n<pre>python3 setup.py install\n</pre>\n</li>\n</ul>\n</li>\n<li><p>From pip:</p>\n<pre>pip install fullcoverage\n</pre>\n</li>\n<li><p>Quick and dirty Debian (and Ubuntu?) package</p>\n<p>This requires <a href=\"https://github.com/astraw/stdeb\" rel=\"nofollow\">stdeb</a> to be installed:</p>\n<pre>python3 setup.py --command-packages=stdeb.command bdist_deb\nsudo dpkg -i deb_dist/fullcoverage-&lt;VERSION&gt;_all.deb\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"how-to\">\n<h2>How-to</h2>\n<p>Let\u2019s say you want to get you module <tt>foobar</tt> thoroughly covered.</p>\n<ol>\n<li><p>Install <cite>fullcoverage</cite>:</p>\n<pre>pip install fullcoverage\n</pre>\n</li>\n<li><p>Enable this plugin. That is, in the <cite>.coveragerc</cite> file of <tt>foobar</tt>, have the lines:</p>\n<pre>[run]\nplugins = fullcoverage.plugin\n</pre>\n</li>\n<li><p>Optionnaly, if you want to restrict the test report to your module, you can add, in the same <cite>.coveragerc</cite> file:</p>\n<pre>[fullcoverage.plugin]\nsource = foobar\n</pre>\n</li>\n<li><p>If you already have tests that import all of <tt>foobar</tt> submodules, that\u2019s it. Otherwise, somewhere in your tests, have the following lines import everything in your module:</p>\n<pre>import foobar\nimport fullcoverage\n\nfullcoverage.import_all(foobar)\n</pre>\n</li>\n<li><p>That\u2019s it! You can now run your tests:</p>\n<pre>coverage run --source foobar -m unittest\ncoverage report --fail-under=100\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"bugs-and-limitations\">\n<h2>Bugs and Limitations</h2>\n<ul>\n<li>This does not work with <tt>doctest</tt>. Please feel free to <a href=\"http://git.framasoft.org/spalax/fullcoverage/issues/new\" rel=\"nofollow\">send a patch</a>.</li>\n<li>This only works with python 3.5. Please feel free to <a href=\"http://git.framasoft.org/spalax/fullcoverage/issues/new\" rel=\"nofollow\">send a patch</a>.</li>\n<li>Even though tests cover 100\u00a0% of your module, it may still contain bugs.</li>\n</ul>\n</div>\n<div id=\"faq\">\n<h2>FAQ</h2>\n<ul>\n<li>Isn\u2019t it dangerous? Are you running every line of a module to get 100\u00a0% test coverage? What if you run a line <tt><span class=\"pre\">shutil.rmtree('/')</span></tt> ?</li>\n</ul>\n<p>This plugins does not run random line of codes. It imports every plugin that is to be covered, but it cheats <tt>coverage</tt> into thinking they were thoroughly tested, without testing anything. If your module is safe to import, it is safe to use <tt>fullcoverage</tt>. If your module is not safe to import, fix your module.</p>\n<ul>\n<li>If your plugin is so great, why aren\u2019t you showing off with one of those <em>100\u00a0% coverage</em> badges?</li>\n</ul>\n<p>Well, <tt>fullcoverage</tt> is hosted on a <a href=\"http://git.framasoft.org/spalax/fullcoverage\" rel=\"nofollow\">Gitlab instance</a>, which <a href=\"https://gitlab.com/gitlab-org/gitlab-ce/issues/3714\" rel=\"nofollow\">does not provide those badges yet</a>. But this plugin is implemented to test itself, and <a href=\"https://git.framasoft.org/spalax/fullcoverage/builds\" rel=\"nofollow\">it is thoroughly covered by tests</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 2025795, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d86c66ee48794d59cf8cf6eadcb516ec", "sha256": "4ae2005f36a6167c8de81c8a7c6f31fd42e1b4ede92842fc33a7ab04dd7c9233"}, "downloads": -1, "filename": "fullcoverage-0.1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "d86c66ee48794d59cf8cf6eadcb516ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8504, "upload_time": "2016-03-24T21:11:50", "upload_time_iso_8601": "2016-03-24T21:11:50.348135Z", "url": "https://files.pythonhosted.org/packages/4e/71/4ad2e521b4b41b8cf5ae55520f69772e2ef0365b45962adbc06affd14e5a/fullcoverage-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d96ba5a8a5cc8ec2ba0806734d621f5", "sha256": "f7ba17150efafd8336cd7266cfd93cf01a13401fd305c1f9fbc37f9d97ea2395"}, "downloads": -1, "filename": "fullcoverage-0.1.0.tar.gz", "has_sig": true, "md5_digest": "0d96ba5a8a5cc8ec2ba0806734d621f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24893, "upload_time": "2016-03-24T21:12:02", "upload_time_iso_8601": "2016-03-24T21:12:02.856551Z", "url": "https://files.pythonhosted.org/packages/ae/04/93acd2ad4f51c90ee63386094b998c6b2256d7b66deba9370a6ffa6565dc/fullcoverage-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d86c66ee48794d59cf8cf6eadcb516ec", "sha256": "4ae2005f36a6167c8de81c8a7c6f31fd42e1b4ede92842fc33a7ab04dd7c9233"}, "downloads": -1, "filename": "fullcoverage-0.1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "d86c66ee48794d59cf8cf6eadcb516ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8504, "upload_time": "2016-03-24T21:11:50", "upload_time_iso_8601": "2016-03-24T21:11:50.348135Z", "url": "https://files.pythonhosted.org/packages/4e/71/4ad2e521b4b41b8cf5ae55520f69772e2ef0365b45962adbc06affd14e5a/fullcoverage-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d96ba5a8a5cc8ec2ba0806734d621f5", "sha256": "f7ba17150efafd8336cd7266cfd93cf01a13401fd305c1f9fbc37f9d97ea2395"}, "downloads": -1, "filename": "fullcoverage-0.1.0.tar.gz", "has_sig": true, "md5_digest": "0d96ba5a8a5cc8ec2ba0806734d621f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24893, "upload_time": "2016-03-24T21:12:02", "upload_time_iso_8601": "2016-03-24T21:12:02.856551Z", "url": "https://files.pythonhosted.org/packages/ae/04/93acd2ad4f51c90ee63386094b998c6b2256d7b66deba9370a6ffa6565dc/fullcoverage-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:45 2020"}