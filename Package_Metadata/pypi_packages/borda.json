{"info": {"author": "Luis Osa", "author_email": "luis.osa.gdc@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Bottle", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Topic :: Office/Business :: Groupware"], "description": "===================\nBorda voting system\n===================\n\nThe Borda count is a single-winner election method in which voters rank\ncandidates in order of preference. The Borda count determines the winner of an\nelection by giving each candidate a certain number of points corresponding to\nthe position in which he or she is ranked by each voter. Once all votes have\nbeen counted the candidate with the most points is the winner. Because it\nsometimes elects broadly acceptable candidates, rather than those preferred by\nthe majority, the Borda count is often described as a consensus-based electoral\nsystem, rather than a majoritarian one.\n\n    >>> import borda.count\n    >>> who_is_superman = borda.count.Election()\n\n    >>> calisto = borda.count.Candidate('calisto')\n    >>> calvin = borda.count.Candidate('calvin')\n    >>> clark = borda.count.Candidate('clark')\n    >>> who_is_superman.set_candidates([calisto, calvin])\n    >>> who_is_superman.add_candidate(clark)\n\n    >>> valentine = borda.count.Voter(who_is_superman, 'valentine')\n    >>> veronica = borda.count.Voter(who_is_superman, 'veronica')\n\n    >>> valentine.votes([clark, calisto, calvin])\n    >>> veronica.votes([clark, calvin, calisto])\n\n    >>> who_is_superman.get_winner() is clark\n    True", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/logc/borda", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "borda", "package_url": "https://pypi.org/project/borda/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/borda/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/logc/borda"}, "release_url": "https://pypi.org/project/borda/0.1/", "requires_dist": null, "requires_python": null, "summary": "Voting system based on the Borda counting scheme", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The Borda count is a single-winner election method in which voters rank\ncandidates in order of preference. The Borda count determines the winner of an\nelection by giving each candidate a certain number of points corresponding to\nthe position in which he or she is ranked by each voter. Once all votes have\nbeen counted the candidate with the most points is the winner. Because it\nsometimes elects broadly acceptable candidates, rather than those preferred by\nthe majority, the Borda count is often described as a consensus-based electoral\nsystem, rather than a majoritarian one.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import borda.count\n&gt;&gt;&gt; who_is_superman = borda.count.Election()\n</pre>\n<pre>&gt;&gt;&gt; calisto = borda.count.Candidate('calisto')\n&gt;&gt;&gt; calvin = borda.count.Candidate('calvin')\n&gt;&gt;&gt; clark = borda.count.Candidate('clark')\n&gt;&gt;&gt; who_is_superman.set_candidates([calisto, calvin])\n&gt;&gt;&gt; who_is_superman.add_candidate(clark)\n</pre>\n<pre>&gt;&gt;&gt; valentine = borda.count.Voter(who_is_superman, 'valentine')\n&gt;&gt;&gt; veronica = borda.count.Voter(who_is_superman, 'veronica')\n</pre>\n<pre>&gt;&gt;&gt; valentine.votes([clark, calisto, calvin])\n&gt;&gt;&gt; veronica.votes([clark, calvin, calisto])\n</pre>\n<pre>&gt;&gt;&gt; who_is_superman.get_winner() is clark\nTrue\n</pre>\n</blockquote>\n\n          </div>"}, "last_serial": 832809, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "40bd36649ff1840b8184ae16b4261964", "sha256": "6ed2f0e0432051ec69ce7a5a162d75ebeb61dd97abdfed6e4cc939811f4450cf"}, "downloads": -1, "filename": "borda-0.1-py2.7.egg", "has_sig": false, "md5_digest": "40bd36649ff1840b8184ae16b4261964", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 11068, "upload_time": "2013-08-05T18:04:08", "upload_time_iso_8601": "2013-08-05T18:04:08.459975Z", "url": "https://files.pythonhosted.org/packages/1a/46/43eaf366b7211ae5bcffdd66c55e9b51b29e1e584c542c6e9b422a85a267/borda-0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a499d971a004e046c418cf5619c9580", "sha256": "c7942079d30977780a7296b4a7c4a721008cb20da36a71248b0775b57c16ca00"}, "downloads": -1, "filename": "borda-0.1.tar.gz", "has_sig": false, "md5_digest": "0a499d971a004e046c418cf5619c9580", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4273, "upload_time": "2013-08-05T18:01:44", "upload_time_iso_8601": "2013-08-05T18:01:44.293085Z", "url": "https://files.pythonhosted.org/packages/18/37/41aab560353b0ad0d8305ca90743505014bb6f88b63fc05d76f6a618202c/borda-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "40bd36649ff1840b8184ae16b4261964", "sha256": "6ed2f0e0432051ec69ce7a5a162d75ebeb61dd97abdfed6e4cc939811f4450cf"}, "downloads": -1, "filename": "borda-0.1-py2.7.egg", "has_sig": false, "md5_digest": "40bd36649ff1840b8184ae16b4261964", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 11068, "upload_time": "2013-08-05T18:04:08", "upload_time_iso_8601": "2013-08-05T18:04:08.459975Z", "url": "https://files.pythonhosted.org/packages/1a/46/43eaf366b7211ae5bcffdd66c55e9b51b29e1e584c542c6e9b422a85a267/borda-0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a499d971a004e046c418cf5619c9580", "sha256": "c7942079d30977780a7296b4a7c4a721008cb20da36a71248b0775b57c16ca00"}, "downloads": -1, "filename": "borda-0.1.tar.gz", "has_sig": false, "md5_digest": "0a499d971a004e046c418cf5619c9580", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4273, "upload_time": "2013-08-05T18:01:44", "upload_time_iso_8601": "2013-08-05T18:01:44.293085Z", "url": "https://files.pythonhosted.org/packages/18/37/41aab560353b0ad0d8305ca90743505014bb6f88b63fc05d76f6a618202c/borda-0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:41 2020"}