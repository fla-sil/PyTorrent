{"info": {"author": "Richard Jovelin", "author_email": "richard.jovelin@oicr.on.ca", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "Debarcer\n========\n\nA package for De-Barcoding and Error Correction of sequencing data containing molecular barcodes. For information on getting started, including installing and running ```Debarcer```, see the [wiki](https://github.com/oicr-gsi/debarcer/wiki/)\n\n\nNote : The repository for the original release of Debarcer (V0.3.1) as described in Nature Protocols can be found under \nhttps://github.com/oicr-gsi/debarcer/releases/tag/v0.3.1\n\nhttps://github.com/oicr-gsi/debarcer/tree/master-old\n\n\n# Configuration\n\n\nA sample config file is provided in ``/debarcer/config/sample_config.ini``, and a sample prepfile is provided in ``/debarcer/config/library_prep_types.ini``.\nParameters provided in the config can also be provided in the command. But parameters in the config have precedence over parameters in the command if duplicated.\n\nThe prepfile contains instructions for how different library preps should be handled.\nInformation for several library preps is already in the prep file. Custom library prep is available but it should be noted that:\n- a single UMI is allowed\n- UMI length is constant for all reads\n- the same spacer sequence is expected for all reads, if present\n\nExample information required in the prepfile:\n\n\n```python\n[SIMSENSEQ-PE]\nINPUT_READS=2\nOUTPUT_READS=2\nUMI_LOCS=1\nUMI_LENS=12\nSPACER=TRUE\nSPACER_SEQ=ATGGGAAAGAGTGTCC\nUMI_POS=1\nUMI_INLINE=TRUE\n```\n\n* INPUT_READS: Number of unprocessed fastq files (1-3)\n* OUTPUT_READS: Number of reheadered fastq files (1-2)\n* UMI_LOCS: Indices of unprocessed fastq files with a UMI (1-3). Single value or comma-separated\n* UMI_LENS: Lengths of the UMIs in each fastq with umis. Single value or comma-separated\n* SPACER: True if a spacer is used (TRUE/FALSE)\n* SPACER_SEQ: Sequence of the spacer ([A,C,G,T]+)\n* UMI_POS: Left-most position of the umi within read (1-based). Single value or comma-separated\n* UMI_INLINE: True id umis are inline with reads, False if umis are in separate input fastq (TRUE/FALSE)\n\nSingle-value of parameters UMI_LENS, UMI_POS are propagated to all fastqs with umis.\nHowever, for comma-separated values, info must be listed in the same order as UMI_LOCS,\nand the number of values must match that of UMI_LOCS\n\nMultiple spacers are not allowed. It is assumed that the same spacer is used for all input fastqs with umis if spacer if present.\nUse empty string or None to specify SPACER_SEQ when SPACER=False\n\n```LIBRARY_NAME``` (eg, SIMSENSEQ-PE) would then be the ```--prepname``` argument passed to debarcer.py.\n\n\n# Typical Workflow\nExample commands. See the [wiki](https://github.com/oicr-gsi/debarcer/wiki/) for a full description of parameters\n\n\n1. Preprocess fastq files\n```python\npython debarcer.py preprocess -o /path/to/output_dir -r1 /path/to/read1.fastq -r /path/to/read2.fastq\n-p \"SIMSENSEQ-PE\" -pf /path/to/library_prep_types.ini -c /path/to/config.ini -px newfile_name\n```\n\n2. Align processed fastqs (outside of debarcer)\n\n   debarcer does not align processed fastqs\n   * align fastqs (eg, with bwa-mem)\n   * bam should then be coordinate-sorted\n   * index bam\n   bam_file.bam and bam_file.bam.bai are required for following steps\n\n3. Error-correct and group UMIs into families\n```python\npython debarcer.py group -o /path/to/output_dir -r \"chrN:posA-posB\" -b /path/to/bamfile.bam -d 1 -p 10 -i False\n-t False\n```\n\n4. Perform base collapsing\n```python\npython debarcer.py collapse -o /path/to/output_dir -b /path/to/bamfile.bam -rf /path/to/reference_genome\n-r \"chrN:posA-posB\" -u /path/to/Umifiles/umifile.json -f \"1,3,5\" -ct 1 -pt 50 -p 10 -m 1000000 -t False\n-i False -stp nofilter\n```\n\n5. Call variants for specified umi family size\n```python\npython debarcer.py call -o /path/to/output_dir -rf /path/to/reference_genome -rt 95 -at 2 -ft 10 -f 3\n```\n\n6. Generate plots\n```python\npython debarcer.py plot -d /path/to/main_directory -e png -s my_sample_name -r True -mv 1000 -mr 0.1 -mu 1000\n-mc 500 -rt 95\n```\n\n7. Generate report\n```python\npython debarcer.py report -d /path/to/main_directory -e png -s my_sample_name -mv 1000 -mr 0.1 -mu 1000\n-mc 500\n```\n\n# Dependencies\n\nDebarcer was tested using Python 3.6.4 and depends on the packages pysam and pandas (among others).\nSee ```requirements.txt```.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/oicr-gsi/debarcer", "keywords": "computational genomics", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "debarcer", "package_url": "https://pypi.org/project/debarcer/", "platform": "", "project_url": "https://pypi.org/project/debarcer/", "project_urls": {"Homepage": "https://github.com/oicr-gsi/debarcer"}, "release_url": "https://pypi.org/project/debarcer/2.1.0/", "requires_dist": ["argparse", "base64", "collections", "configparser", "gzip", "itertools", "json", "matplotlib", "mistune", "networkx", "numpy", "operator", "pandas", "pygal", "pysam", "scipy", "seaborn", "subprocess", "time", "uuid", "yaml"], "requires_python": ">=3.6", "summary": "A package for de-barcoding and error correction of sequencing data containing molecular barcodes.", "version": "2.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A package for De-Barcoding and Error Correction of sequencing data containing molecular barcodes. For information on getting started, including installing and running <tt>`Debarcer`</tt>, see the [wiki](<a href=\"https://github.com/oicr-gsi/debarcer/wiki/\" rel=\"nofollow\">https://github.com/oicr-gsi/debarcer/wiki/</a>)</p>\n<p>Note : The repository for the original release of Debarcer (V0.3.1) as described in Nature Protocols can be found under\n<a href=\"https://github.com/oicr-gsi/debarcer/releases/tag/v0.3.1\" rel=\"nofollow\">https://github.com/oicr-gsi/debarcer/releases/tag/v0.3.1</a></p>\n<p><a href=\"https://github.com/oicr-gsi/debarcer/tree/master-old\" rel=\"nofollow\">https://github.com/oicr-gsi/debarcer/tree/master-old</a></p>\n<p># Configuration</p>\n<p>A sample config file is provided in <tt>/debarcer/config/sample_config.ini</tt>, and a sample prepfile is provided in <tt>/debarcer/config/library_prep_types.ini</tt>.\nParameters provided in the config can also be provided in the command. But parameters in the config have precedence over parameters in the command if duplicated.</p>\n<p>The prepfile contains instructions for how different library preps should be handled.\nInformation for several library preps is already in the prep file. Custom library prep is available but it should be noted that:\n- a single UMI is allowed\n- UMI length is constant for all reads\n- the same spacer sequence is expected for all reads, if present</p>\n<p>Example information required in the prepfile:</p>\n<p><tt>`python\n<span class=\"pre\">[SIMSENSEQ-PE]</span>\nINPUT_READS=2\nOUTPUT_READS=2\nUMI_LOCS=1\nUMI_LENS=12\nSPACER=TRUE\nSPACER_SEQ=ATGGGAAAGAGTGTCC\nUMI_POS=1\nUMI_INLINE=TRUE\n`</tt></p>\n<ul>\n<li>INPUT_READS: Number of unprocessed fastq files (1-3)</li>\n<li>OUTPUT_READS: Number of reheadered fastq files (1-2)</li>\n<li>UMI_LOCS: Indices of unprocessed fastq files with a UMI (1-3). Single value or comma-separated</li>\n<li>UMI_LENS: Lengths of the UMIs in each fastq with umis. Single value or comma-separated</li>\n<li>SPACER: True if a spacer is used (TRUE/FALSE)</li>\n<li>SPACER_SEQ: Sequence of the spacer ([A,C,G,T]+)</li>\n<li>UMI_POS: Left-most position of the umi within read (1-based). Single value or comma-separated</li>\n<li>UMI_INLINE: True id umis are inline with reads, False if umis are in separate input fastq (TRUE/FALSE)</li>\n</ul>\n<p>Single-value of parameters UMI_LENS, UMI_POS are propagated to all fastqs with umis.\nHowever, for comma-separated values, info must be listed in the same order as UMI_LOCS,\nand the number of values must match that of UMI_LOCS</p>\n<p>Multiple spacers are not allowed. It is assumed that the same spacer is used for all input fastqs with umis if spacer if present.\nUse empty string or None to specify SPACER_SEQ when SPACER=False</p>\n<p><tt>`LIBRARY_NAME`</tt> (eg, SIMSENSEQ-PE) would then be the <tt><span class=\"pre\">`--prepname`</span></tt> argument passed to debarcer.py.</p>\n<p># Typical Workflow\nExample commands. See the [wiki](<a href=\"https://github.com/oicr-gsi/debarcer/wiki/\" rel=\"nofollow\">https://github.com/oicr-gsi/debarcer/wiki/</a>) for a full description of parameters</p>\n<p>1. Preprocess fastq files\n<tt>`python\npython debarcer.py preprocess <span class=\"pre\">-o</span> /path/to/output_dir <span class=\"pre\">-r1</span> /path/to/read1.fastq <span class=\"pre\">-r</span> /path/to/read2.fastq\n<span class=\"pre\">-p</span> <span class=\"pre\">\"SIMSENSEQ-PE\"</span> <span class=\"pre\">-pf</span> /path/to/library_prep_types.ini <span class=\"pre\">-c</span> /path/to/config.ini <span class=\"pre\">-px</span> newfile_name\n`</tt></p>\n<ol>\n<li><p>Align processed fastqs (outside of debarcer)</p>\n<p>debarcer does not align processed fastqs\n* align fastqs (eg, with bwa-mem)\n* bam should then be coordinate-sorted\n* index bam\nbam_file.bam and bam_file.bam.bai are required for following steps</p>\n</li>\n</ol>\n<p>3. Error-correct and group UMIs into families\n<tt>`python\npython debarcer.py group <span class=\"pre\">-o</span> /path/to/output_dir <span class=\"pre\">-r</span> <span class=\"pre\">\"chrN:posA-posB\"</span> <span class=\"pre\">-b</span> /path/to/bamfile.bam <span class=\"pre\">-d</span> 1 <span class=\"pre\">-p</span> 10 <span class=\"pre\">-i</span> False\n<span class=\"pre\">-t</span> False\n`</tt></p>\n<p>4. Perform base collapsing\n<tt>`python\npython debarcer.py collapse <span class=\"pre\">-o</span> /path/to/output_dir <span class=\"pre\">-b</span> /path/to/bamfile.bam <span class=\"pre\">-rf</span> /path/to/reference_genome\n<span class=\"pre\">-r</span> <span class=\"pre\">\"chrN:posA-posB\"</span> <span class=\"pre\">-u</span> /path/to/Umifiles/umifile.json <span class=\"pre\">-f</span> \"1,3,5\" <span class=\"pre\">-ct</span> 1 <span class=\"pre\">-pt</span> 50 <span class=\"pre\">-p</span> 10 <span class=\"pre\">-m</span> 1000000 <span class=\"pre\">-t</span> False\n<span class=\"pre\">-i</span> False <span class=\"pre\">-stp</span> nofilter\n`</tt></p>\n<p>5. Call variants for specified umi family size\n<tt>`python\npython debarcer.py call <span class=\"pre\">-o</span> /path/to/output_dir <span class=\"pre\">-rf</span> /path/to/reference_genome <span class=\"pre\">-rt</span> 95 <span class=\"pre\">-at</span> 2 <span class=\"pre\">-ft</span> 10 <span class=\"pre\">-f</span> 3\n`</tt></p>\n<p>6. Generate plots\n<tt>`python\npython debarcer.py plot <span class=\"pre\">-d</span> /path/to/main_directory <span class=\"pre\">-e</span> png <span class=\"pre\">-s</span> my_sample_name <span class=\"pre\">-r</span> True <span class=\"pre\">-mv</span> 1000 <span class=\"pre\">-mr</span> 0.1 <span class=\"pre\">-mu</span> 1000\n<span class=\"pre\">-mc</span> 500 <span class=\"pre\">-rt</span> 95\n`</tt></p>\n<p>7. Generate report\n<tt>`python\npython debarcer.py report <span class=\"pre\">-d</span> /path/to/main_directory <span class=\"pre\">-e</span> png <span class=\"pre\">-s</span> my_sample_name <span class=\"pre\">-mv</span> 1000 <span class=\"pre\">-mr</span> 0.1 <span class=\"pre\">-mu</span> 1000\n<span class=\"pre\">-mc</span> 500\n`</tt></p>\n<p># Dependencies</p>\n<p>Debarcer was tested using Python 3.6.4 and depends on the packages pysam and pandas (among others).\nSee <tt>`requirements.txt`</tt>.</p>\n\n          </div>"}, "last_serial": 6404703, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "ed06e7891c0b0b166f4aca359de4cc8c", "sha256": "5c698c6163f0b00d3a49ed6a97544126771ccb1ffd27ab5c1e7f01cfc136fe80"}, "downloads": -1, "filename": "debarcer-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ed06e7891c0b0b166f4aca359de4cc8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7214, "upload_time": "2018-04-18T16:18:41", "upload_time_iso_8601": "2018-04-18T16:18:41.344701Z", "url": "https://files.pythonhosted.org/packages/a5/ae/0e29704e259b6146801cdfb1f47c315eaf9da2e7bf0bc8cfcf4b9a82fb7b/debarcer-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d7fefbc6c61ce494738534bff2eb2a3", "sha256": "73a125e620be6b915def4a5a705ea43084a4a8a1beed4af91edbcc842b3ca766"}, "downloads": -1, "filename": "debarcer-2.0.0.tar.gz", "has_sig": false, "md5_digest": "3d7fefbc6c61ce494738534bff2eb2a3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5804, "upload_time": "2018-04-18T16:18:42", "upload_time_iso_8601": "2018-04-18T16:18:42.236740Z", "url": "https://files.pythonhosted.org/packages/cf/af/35bffd7edacf55e6b97bbde67955742b9c08f9c3a6cdae36870febc2db35/debarcer-2.0.0.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "56ec60d192a804697cec55de826a2635", "sha256": "9d65255a49386aa166b558aa60a9f0f86db15bdc67df04736f20f92c8c85c233"}, "downloads": -1, "filename": "debarcer-2.0.2.tar.gz", "has_sig": false, "md5_digest": "56ec60d192a804697cec55de826a2635", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25793, "upload_time": "2019-04-23T15:20:00", "upload_time_iso_8601": "2019-04-23T15:20:00.828278Z", "url": "https://files.pythonhosted.org/packages/44/6b/e4e38cd1b547d59af382f97af4df9f8ef9f7e386039638f6362983f46aa5/debarcer-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "5679ee6c997afa466c74177f3b7ef03f", "sha256": "d253730a7559c678b55da26dcaff4717b1be096ff30a4b0e219c6a3ecb432601"}, "downloads": -1, "filename": "debarcer-2.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5679ee6c997afa466c74177f3b7ef03f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 35169, "upload_time": "2019-04-23T17:15:30", "upload_time_iso_8601": "2019-04-23T17:15:30.913366Z", "url": "https://files.pythonhosted.org/packages/9f/e0/f9bbb01a6172a7a90ab66ea3097e429dcf09c5546909bef37d7aa04565aa/debarcer-2.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "550e8a4a0b4c3ade3383991d833634d5", "sha256": "b4f94cc14acb61d091fa28441fc995fe2ae0d124285f3bb43eb913d77dfd6ff7"}, "downloads": -1, "filename": "debarcer-2.0.3.tar.gz", "has_sig": false, "md5_digest": "550e8a4a0b4c3ade3383991d833634d5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 27651, "upload_time": "2019-04-23T17:15:33", "upload_time_iso_8601": "2019-04-23T17:15:33.058420Z", "url": "https://files.pythonhosted.org/packages/50/92/fe65d748d8bf8ff601d460b5906c0807d376fd1abf94a170e33fb64fa18f/debarcer-2.0.3.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "f3f3e856c601f386d4253133de764b39", "sha256": "6a2a1b57cf3d9c76c674b814d469c8b78f5fc33bcead20094f3f26f3cc133ca9"}, "downloads": -1, "filename": "debarcer-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f3f3e856c601f386d4253133de764b39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 69919, "upload_time": "2020-01-06T21:54:08", "upload_time_iso_8601": "2020-01-06T21:54:08.275233Z", "url": "https://files.pythonhosted.org/packages/7e/51/98afb3c7d8ab99ac86a58688dd747cc0a46a29a31691f2a629d984f06128/debarcer-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "28f071a98ea811df8d43e7d6a6953404", "sha256": "a4cb4541bca251574a6a18bc08477488eca30319b8aa53e5c060a5d6da3da89f"}, "downloads": -1, "filename": "debarcer-2.1.0.tar.gz", "has_sig": false, "md5_digest": "28f071a98ea811df8d43e7d6a6953404", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 62860, "upload_time": "2020-01-06T21:54:10", "upload_time_iso_8601": "2020-01-06T21:54:10.137645Z", "url": "https://files.pythonhosted.org/packages/55/f8/55fe24e2770b446a04f110e04f53c6fe4b855ab71c02537f2881216a950f/debarcer-2.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f3f3e856c601f386d4253133de764b39", "sha256": "6a2a1b57cf3d9c76c674b814d469c8b78f5fc33bcead20094f3f26f3cc133ca9"}, "downloads": -1, "filename": "debarcer-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f3f3e856c601f386d4253133de764b39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 69919, "upload_time": "2020-01-06T21:54:08", "upload_time_iso_8601": "2020-01-06T21:54:08.275233Z", "url": "https://files.pythonhosted.org/packages/7e/51/98afb3c7d8ab99ac86a58688dd747cc0a46a29a31691f2a629d984f06128/debarcer-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "28f071a98ea811df8d43e7d6a6953404", "sha256": "a4cb4541bca251574a6a18bc08477488eca30319b8aa53e5c060a5d6da3da89f"}, "downloads": -1, "filename": "debarcer-2.1.0.tar.gz", "has_sig": false, "md5_digest": "28f071a98ea811df8d43e7d6a6953404", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 62860, "upload_time": "2020-01-06T21:54:10", "upload_time_iso_8601": "2020-01-06T21:54:10.137645Z", "url": "https://files.pythonhosted.org/packages/55/f8/55fe24e2770b446a04f110e04f53c6fe4b855ab71c02537f2881216a950f/debarcer-2.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:40 2020"}