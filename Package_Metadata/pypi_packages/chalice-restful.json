{"info": {"author": "Joshua Light", "author_email": "j.light.developer@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Chalice-RESTful\n\n[![Build](https://github.com/JoshuaLight/chalice-restful/workflows/Build/badge.svg)](https://github.com/JoshuaLight/chalice-restful/actions)\n[![PyPI version](https://badge.fury.io/py/chalice-restful.svg)](https://badge.fury.io/py/chalice-restful)\n\n_A more structured way of writing [Chalice](https://github.com/aws/chalice) APIs.\nVery similar to [Flask-RESTful](https://github.com/flask-restful/flask-restful)._\n\n## Motivation\n\nIn pure [Chalice](https://github.com/aws/chalice) you only need to define plain functions\nto handle routed HTTP-requests:\n\n``` python\napp = Chalice('example')\n\n@app.route('/v1/items', methods=['GET'])\ndef get_items(): ...\n\n@app.route('/v1/items', methods=['POST'])\ndef add_item(): ...\n```\n\nThis is great for building any kind of API, but in REST we deal with\nhigher level objects -- resources, where each represents a set of functions\nrelated to each other.\n\nThough we still limited to write them in one place:\n\n``` python\napp = Chalice('example')\n\n@app.route('/v1/items', methods=['GET'])\ndef get_items(): ...\n\n@app.route('/v1/items', methods=['POST'])\ndef add_item(): ...\n\n...\n\n@app.route('/v1/orders', methods=['GET'])\ndef get_orders(): ...\n\n@app.route('/v1/orders', methods=['POST'])\ndef add_order(): ...\n```\n\nIt'd be much better if we could use an object-oriented approach, so closely related functions\nwill be grouped together in a class.\n\nAnd this is _exactly_ what the Chalice-RESTful for:\n\n``` python\napp = Chalice('example')\napi = Api(app)\n\n@route('/v1/items')\nclass Items(Resource):\n    def get(): ...\n    def post(): ...\n\n@route('/v1/orders')\nclass Orders(Resource):\n    def get(): ...\n    def post(): ...\n\napi.add(Items)\napi.add(Orders)\n```\n\n## Installation\n\nInstall Chalice-RESTful with `pip`:\n\n``` shell\n$ pip install chalice-restful\n```\n\n## Usage\n\n### Resources\n\nAn atomic block of Chalice-RESTful is a _resource_: any subclass of the `Resource`\nthat has `route` attribute and at least one endpoint (`get`, `post`, `put`, etc.).\nAll resources should be then added to the `Api` object that will take care of registering\neach individual endpoint in the `Chalice` instance.\n\n``` python\nfrom chalice import Chalice\nfrom chalice_restful import Api, Resource\n\napp = Chalice('example')\napi = Api(app)\n\nclass Items(Resource):\n    route = '/v1/items'\n\n    def get(): ...\n\napi.add(Items)\n```\n\nIt's worth mentioning that you can use configuration decorator `route` that will add\n`route` attribute automatically while preserving pretty decorators syntax:\n\n``` python\nfrom chalice import Chalice\nfrom chalice_restful import Api, Resource, route\n\napp = Chalice('example')\napi = Api(app)\n\n@route('/v1/items')\nclass Items(Resource):\n    def get(): ...\n\napi.add(Items)\n```\n\n#### HTTP Methods\n\nCurrently, Chalice-RESTful supports `get`, `post`, `put`, `patch` and `delete` endpoints,\nwhich can be defined in resources.\n\n### Authorization\n\nYou can add an authorization to resources or endpoints in several ways.\n\n#### API key\n\nTo require an API key use `api_key_required` configuration decorator:\n\n``` python\nfrom chalice import Chalice\nfrom chalice_restful import Api, Resource, api_key_required, route\n\napp = Chalice('example')\napi = Api(app)\n\n@route('/v1/items')\n@api_key_required\nclass Items(Resource):\n    def get(): ...\n\napi.add(Items)\n```\n\nYou can decorate individual endpoints as well:\n\n``` python\nfrom chalice import Chalice\nfrom chalice_restful import Api, Resource, api_key_required, route\n\napp = Chalice('example')\napi = Api(app)\n\n@route('/v1/items')\nclass Items(Resource):\n    def get(): ...\n\n    @api_key_required\n    def post(): ...\n\n    @api_key_required\n    def put(): ...\n\napi.add(Items)\n```\n\n#### Authorizers\n\nTo add an authorizer instance use `authorizer` configuration decorator:\n\n``` python\nfrom chalice import Chalice, IAMAuthorizer\nfrom chalice_restful import Api, Resource, authorizer, route\n\napp = Chalice('example')\napi = Api(app)\niam = IAMAuthorizer()\n\n@route('/v1/items')\n@authorizer(iam)\nclass Items(Resource):\n    def get(): ...\n\napi.add(Items)\n```\n\nYou can decorate individual endpoints as well:\n\n``` python\nfrom chalice import Chalice, IAMAuthorizer\nfrom chalice_restful import Api, Resource, authorizer, route\n\napp = Chalice('example')\napi = Api(app)\niam = IAMAuthorizer()\n\n@route('/v1/items')\nclass Items(Resource):\n    def get(): ...\n\n    @authorizer(iam)\n    def post(): ...\n\n    @authorizer(iam)\n    def put(): ...\n\napi.add(Items)\n```\n\nRead more about Chalice authorizers [here](https://github.com/aws/chalice/blob/master/docs/source/topics/authorizers.rst).\n\n### CORS\n\nTo enable CORS use `cors` configuration decorator:\n\n``` python\nfrom chalice import Chalice\nfrom chalice_restful import Api, Resource, cors, route\n\napp = Chalice('example')\napi = Api(app)\n\n@route('/v1/items')\n@cors\nclass Items(Resource):\n    def get(): ...\n\napi.add(Items)\n```\n\nYou can decorate individual endpoints as well:\n``` python\nfrom chalice import Chalice\nfrom chalice_restful import Api, Resource, cors, route\n\napp = Chalice('example')\napi = Api(app)\n\n@route('/v1/items')\nclass Items(Resource):\n    def get(): ...\n\n    @cors\n    def post(): ...\n\n    @cors\n    def put(): ...\n\n\napi.add(Items)\n```\n\n## License\n\nThe package is licensed under the [MIT](https://github.com/JoshuaLight/chalice-restul/blob/master/LICENSE) license.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JoshuaLight/chalice-restful", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "chalice-restful", "package_url": "https://pypi.org/project/chalice-restful/", "platform": "", "project_url": "https://pypi.org/project/chalice-restful/", "project_urls": {"Homepage": "https://github.com/JoshuaLight/chalice-restful"}, "release_url": "https://pypi.org/project/chalice-restful/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Provides a more structured way of writing RESTful APIs with Chalice.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Chalice-RESTful</h1>\n<p><a href=\"https://github.com/JoshuaLight/chalice-restful/actions\" rel=\"nofollow\"><img alt=\"Build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7ed83443d789f63fca2a7c97cca83bf25432a600/68747470733a2f2f6769746875622e636f6d2f4a6f736875614c696768742f6368616c6963652d7265737466756c2f776f726b666c6f77732f4275696c642f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/chalice-restful\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6a5a92df0da7322acb84ef19c3f6a6c68ffd532/68747470733a2f2f62616467652e667572792e696f2f70792f6368616c6963652d7265737466756c2e737667\"></a></p>\n<p><em>A more structured way of writing <a href=\"https://github.com/aws/chalice\" rel=\"nofollow\">Chalice</a> APIs.\nVery similar to <a href=\"https://github.com/flask-restful/flask-restful\" rel=\"nofollow\">Flask-RESTful</a>.</em></p>\n<h2>Motivation</h2>\n<p>In pure <a href=\"https://github.com/aws/chalice\" rel=\"nofollow\">Chalice</a> you only need to define plain functions\nto handle routed HTTP-requests:</p>\n<pre><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Chalice</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/items'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_items</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/items'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_item</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n</pre>\n<p>This is great for building any kind of API, but in REST we deal with\nhigher level objects -- resources, where each represents a set of functions\nrelated to each other.</p>\n<p>Though we still limited to write them in one place:</p>\n<pre><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Chalice</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/items'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_items</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/items'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_item</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/orders'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_orders</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/orders'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_order</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n</pre>\n<p>It'd be much better if we could use an object-oriented approach, so closely related functions\nwill be grouped together in a class.</p>\n<p>And this is <em>exactly</em> what the Chalice-RESTful for:</p>\n<pre><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Chalice</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/items'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Items</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n    <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"nd\">@route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/orders'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Orders</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n    <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Items</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Orders</span><span class=\"p\">)</span>\n</pre>\n<h2>Installation</h2>\n<p>Install Chalice-RESTful with <code>pip</code>:</p>\n<pre>$ pip install chalice-restful\n</pre>\n<h2>Usage</h2>\n<h3>Resources</h3>\n<p>An atomic block of Chalice-RESTful is a <em>resource</em>: any subclass of the <code>Resource</code>\nthat has <code>route</code> attribute and at least one endpoint (<code>get</code>, <code>post</code>, <code>put</code>, etc.).\nAll resources should be then added to the <code>Api</code> object that will take care of registering\neach individual endpoint in the <code>Chalice</code> instance.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">chalice</span> <span class=\"kn\">import</span> <span class=\"n\">Chalice</span>\n<span class=\"kn\">from</span> <span class=\"nn\">chalice_restful</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">Resource</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Chalice</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Items</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"n\">route</span> <span class=\"o\">=</span> <span class=\"s1\">'/v1/items'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Items</span><span class=\"p\">)</span>\n</pre>\n<p>It's worth mentioning that you can use configuration decorator <code>route</code> that will add\n<code>route</code> attribute automatically while preserving pretty decorators syntax:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">chalice</span> <span class=\"kn\">import</span> <span class=\"n\">Chalice</span>\n<span class=\"kn\">from</span> <span class=\"nn\">chalice_restful</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">Resource</span><span class=\"p\">,</span> <span class=\"n\">route</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Chalice</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/items'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Items</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Items</span><span class=\"p\">)</span>\n</pre>\n<h4>HTTP Methods</h4>\n<p>Currently, Chalice-RESTful supports <code>get</code>, <code>post</code>, <code>put</code>, <code>patch</code> and <code>delete</code> endpoints,\nwhich can be defined in resources.</p>\n<h3>Authorization</h3>\n<p>You can add an authorization to resources or endpoints in several ways.</p>\n<h4>API key</h4>\n<p>To require an API key use <code>api_key_required</code> configuration decorator:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">chalice</span> <span class=\"kn\">import</span> <span class=\"n\">Chalice</span>\n<span class=\"kn\">from</span> <span class=\"nn\">chalice_restful</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">Resource</span><span class=\"p\">,</span> <span class=\"n\">api_key_required</span><span class=\"p\">,</span> <span class=\"n\">route</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Chalice</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/items'</span><span class=\"p\">)</span>\n<span class=\"nd\">@api_key_required</span>\n<span class=\"k\">class</span> <span class=\"nc\">Items</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Items</span><span class=\"p\">)</span>\n</pre>\n<p>You can decorate individual endpoints as well:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">chalice</span> <span class=\"kn\">import</span> <span class=\"n\">Chalice</span>\n<span class=\"kn\">from</span> <span class=\"nn\">chalice_restful</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">Resource</span><span class=\"p\">,</span> <span class=\"n\">api_key_required</span><span class=\"p\">,</span> <span class=\"n\">route</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Chalice</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/items'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Items</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n    <span class=\"nd\">@api_key_required</span>\n    <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n    <span class=\"nd\">@api_key_required</span>\n    <span class=\"k\">def</span> <span class=\"nf\">put</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Items</span><span class=\"p\">)</span>\n</pre>\n<h4>Authorizers</h4>\n<p>To add an authorizer instance use <code>authorizer</code> configuration decorator:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">chalice</span> <span class=\"kn\">import</span> <span class=\"n\">Chalice</span><span class=\"p\">,</span> <span class=\"n\">IAMAuthorizer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">chalice_restful</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">Resource</span><span class=\"p\">,</span> <span class=\"n\">authorizer</span><span class=\"p\">,</span> <span class=\"n\">route</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Chalice</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">iam</span> <span class=\"o\">=</span> <span class=\"n\">IAMAuthorizer</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/items'</span><span class=\"p\">)</span>\n<span class=\"nd\">@authorizer</span><span class=\"p\">(</span><span class=\"n\">iam</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Items</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Items</span><span class=\"p\">)</span>\n</pre>\n<p>You can decorate individual endpoints as well:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">chalice</span> <span class=\"kn\">import</span> <span class=\"n\">Chalice</span><span class=\"p\">,</span> <span class=\"n\">IAMAuthorizer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">chalice_restful</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">Resource</span><span class=\"p\">,</span> <span class=\"n\">authorizer</span><span class=\"p\">,</span> <span class=\"n\">route</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Chalice</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">iam</span> <span class=\"o\">=</span> <span class=\"n\">IAMAuthorizer</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/items'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Items</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n    <span class=\"nd\">@authorizer</span><span class=\"p\">(</span><span class=\"n\">iam</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n    <span class=\"nd\">@authorizer</span><span class=\"p\">(</span><span class=\"n\">iam</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">put</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Items</span><span class=\"p\">)</span>\n</pre>\n<p>Read more about Chalice authorizers <a href=\"https://github.com/aws/chalice/blob/master/docs/source/topics/authorizers.rst\" rel=\"nofollow\">here</a>.</p>\n<h3>CORS</h3>\n<p>To enable CORS use <code>cors</code> configuration decorator:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">chalice</span> <span class=\"kn\">import</span> <span class=\"n\">Chalice</span>\n<span class=\"kn\">from</span> <span class=\"nn\">chalice_restful</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">Resource</span><span class=\"p\">,</span> <span class=\"n\">cors</span><span class=\"p\">,</span> <span class=\"n\">route</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Chalice</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/items'</span><span class=\"p\">)</span>\n<span class=\"nd\">@cors</span>\n<span class=\"k\">class</span> <span class=\"nc\">Items</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Items</span><span class=\"p\">)</span>\n</pre>\n<p>You can decorate individual endpoints as well:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">chalice</span> <span class=\"kn\">import</span> <span class=\"n\">Chalice</span>\n<span class=\"kn\">from</span> <span class=\"nn\">chalice_restful</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">Resource</span><span class=\"p\">,</span> <span class=\"n\">cors</span><span class=\"p\">,</span> <span class=\"n\">route</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Chalice</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@route</span><span class=\"p\">(</span><span class=\"s1\">'/v1/items'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Items</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n    <span class=\"nd\">@cors</span>\n    <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n    <span class=\"nd\">@cors</span>\n    <span class=\"k\">def</span> <span class=\"nf\">put</span><span class=\"p\">():</span> <span class=\"o\">...</span>\n\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Items</span><span class=\"p\">)</span>\n</pre>\n<h2>License</h2>\n<p>The package is licensed under the <a href=\"https://github.com/JoshuaLight/chalice-restul/blob/master/LICENSE\" rel=\"nofollow\">MIT</a> license.</p>\n\n          </div>"}, "last_serial": 6544029, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "713ff3764ef82258d9160399302cf5a8", "sha256": "b652f6eec155445a07fb2216f412d6a899ff71408ef02badcf92dac813d5852c"}, "downloads": -1, "filename": "chalice-restful-0.0.1.tar.gz", "has_sig": false, "md5_digest": "713ff3764ef82258d9160399302cf5a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1205, "upload_time": "2020-01-16T22:43:34", "upload_time_iso_8601": "2020-01-16T22:43:34.007574Z", "url": "https://files.pythonhosted.org/packages/37/ba/1d28561e59c9712426207175644d7c6fb543f5ef7dfa9a323f0bbfcbbcef/chalice-restful-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "94aff7b5aa3ff73c2926c5f7bf75bbb7", "sha256": "78207a0b2ae3ef9c7b58541475305d05d01fe653a75e54d865be07e73344abd5"}, "downloads": -1, "filename": "chalice-restful-0.0.2.tar.gz", "has_sig": false, "md5_digest": "94aff7b5aa3ff73c2926c5f7bf75bbb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5652, "upload_time": "2020-01-26T07:28:37", "upload_time_iso_8601": "2020-01-26T07:28:37.312960Z", "url": "https://files.pythonhosted.org/packages/42/cf/d2d1e6676420eb8e8610dc356d52077719dd6b68fbf471624fd3ee000e50/chalice-restful-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "a5f9301b23917423feeb6a884b6de382", "sha256": "f455606ee36146a0cb8795db045ddfec1891bb6e2ee996bf957e014c696cee01"}, "downloads": -1, "filename": "chalice-restful-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a5f9301b23917423feeb6a884b6de382", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5739, "upload_time": "2020-01-26T17:18:38", "upload_time_iso_8601": "2020-01-26T17:18:38.840704Z", "url": "https://files.pythonhosted.org/packages/15/25/2d49a7e7ed0d809cbaabadfc86c1eff5b96a7f6c10e4f34c31d0fc4dfcd2/chalice-restful-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "3876a6c02450129dfca7cb1150ea5ec1", "sha256": "a7f4b910156cf840a9a6e4763ae5d57ebe25dcd08d05b1a799f279596e7fcda9"}, "downloads": -1, "filename": "chalice-restful-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3876a6c02450129dfca7cb1150ea5ec1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5741, "upload_time": "2020-01-27T12:08:37", "upload_time_iso_8601": "2020-01-27T12:08:37.200622Z", "url": "https://files.pythonhosted.org/packages/a9/89/581b9c92282df9a05e94dd4c1be360eb879c820e4a3d9cf6c129715eb78c/chalice-restful-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "b257f5b2caf14706eaae77db7e738622", "sha256": "4792ad25c21375412c8bee288490fae153480d3e6ef0370123f434ba245639e5"}, "downloads": -1, "filename": "chalice-restful-0.0.5.tar.gz", "has_sig": false, "md5_digest": "b257f5b2caf14706eaae77db7e738622", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6902, "upload_time": "2020-01-27T12:16:59", "upload_time_iso_8601": "2020-01-27T12:16:59.626428Z", "url": "https://files.pythonhosted.org/packages/0c/8d/380d99e9ce1ad259773d8db97fae9ce75bd133c8b983f74083f5cab70e7e/chalice-restful-0.0.5.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "4e71e131321271d226e80ec52546b95c", "sha256": "e5eb7c0f353dfcfa8fbcc079bb43e49bd00cf0c8d8ce3dcbebb25094b41af3d2"}, "downloads": -1, "filename": "chalice-restful-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4e71e131321271d226e80ec52546b95c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6999, "upload_time": "2020-01-30T15:19:14", "upload_time_iso_8601": "2020-01-30T15:19:14.810693Z", "url": "https://files.pythonhosted.org/packages/4a/0c/672a82a1aad12507ce795cf26820f983173d7a059cef691bad94f7ecb233/chalice-restful-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4e71e131321271d226e80ec52546b95c", "sha256": "e5eb7c0f353dfcfa8fbcc079bb43e49bd00cf0c8d8ce3dcbebb25094b41af3d2"}, "downloads": -1, "filename": "chalice-restful-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4e71e131321271d226e80ec52546b95c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6999, "upload_time": "2020-01-30T15:19:14", "upload_time_iso_8601": "2020-01-30T15:19:14.810693Z", "url": "https://files.pythonhosted.org/packages/4a/0c/672a82a1aad12507ce795cf26820f983173d7a059cef691bad94f7ecb233/chalice-restful-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:31 2020"}