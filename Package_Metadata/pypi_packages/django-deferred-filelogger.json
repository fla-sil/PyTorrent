{"info": {"author": "David Winterbottom", "author_email": "david.winterbottom@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "==========================\ndjango-deferred-filelogger\n==========================\n\nThis package provides a new logging handler that defers evaluation of the\nfilepath until a message is emitted.  It uses a setting ``LOG_ROOT`` as the\nfolder for the log files.  This is useful when you don't know the exact location\nof your log files when the ``LOGGING`` setting is defined - this can be the case\nif you have a environment specific settings file which gets imported after your\ncore settings.\n\nUsage\n-----\n\nIn your main settings file, configure your handlers with a filename\n\n.. code:: python\n\n    LOGGING = {\n        ...\n        'handlers': {\n            'error_file': {\n                'level': 'INFO',\n                'class': 'deferred_filelogger.DeferredFilehandler',\n                'filename': 'errors.log',\n            }\n        },\n        'loggers': {\n            'django.request': {\n                'handlers': ['error_file', 'mail_admins'],\n                'level': 'ERROR',\n                'propagate': False\n            }\n        }\n    }\n\nthen in your environmental overrides (eg ``settings_local.py``), specify a\n``LOG_ROOT`` folder.  For instance, in your test environment you might specify\n\n.. code:: python\n\n    LOG_ROOT = '/var/www/client/project/logs/test'\n\nwhich would cause your Django errors to be logged to\n``/var/www/client/project/logs/test/errors.log``.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/codeinthehole/django-deferred-filelogger", "keywords": null, "license": "Copyright (C) 2012 django-deferred-filelogger authors (see AUTHORS file)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "django-deferred-filelogger", "package_url": "https://pypi.org/project/django-deferred-filelogger/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-deferred-filelogger/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/codeinthehole/django-deferred-filelogger"}, "release_url": "https://pypi.org/project/django-deferred-filelogger/0.1/", "requires_dist": null, "requires_python": null, "summary": "A logging handler for Django that defers evaluation of the filepath", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides a new logging handler that defers evaluation of the\nfilepath until a message is emitted.  It uses a setting <tt>LOG_ROOT</tt> as the\nfolder for the log files.  This is useful when you don\u2019t know the exact location\nof your log files when the <tt>LOGGING</tt> setting is defined - this can be the case\nif you have a environment specific settings file which gets imported after your\ncore settings.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>In your main settings file, configure your handlers with a filename</p>\n<pre><span class=\"n\">LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'error_file'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'INFO'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'deferred_filelogger.DeferredFilehandler'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'filename'</span><span class=\"p\">:</span> <span class=\"s1\">'errors.log'</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'loggers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'django.request'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'error_file'</span><span class=\"p\">,</span> <span class=\"s1\">'mail_admins'</span><span class=\"p\">],</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'ERROR'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'propagate'</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>then in your environmental overrides (eg <tt>settings_local.py</tt>), specify a\n<tt>LOG_ROOT</tt> folder.  For instance, in your test environment you might specify</p>\n<pre><span class=\"n\">LOG_ROOT</span> <span class=\"o\">=</span> <span class=\"s1\">'/var/www/client/project/logs/test'</span>\n</pre>\n<p>which would cause your Django errors to be logged to\n<tt>/var/www/client/project/logs/test/errors.log</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 769255, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f5e3eb532dcc9a0d7d8d4882566d2c6e", "sha256": "b198e885cf2ab4e0364dd0ac499bbaa8ae2fb6bbd226bdd1256e3a50300da56b"}, "downloads": -1, "filename": "django-deferred-filelogger-0.1.tar.gz", "has_sig": false, "md5_digest": "f5e3eb532dcc9a0d7d8d4882566d2c6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2891, "upload_time": "2013-06-12T14:44:36", "upload_time_iso_8601": "2013-06-12T14:44:36.745504Z", "url": "https://files.pythonhosted.org/packages/32/6d/00107d06ff29d5648636932045e415dbf32b132bad2c80b68aa6fec493ca/django-deferred-filelogger-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f5e3eb532dcc9a0d7d8d4882566d2c6e", "sha256": "b198e885cf2ab4e0364dd0ac499bbaa8ae2fb6bbd226bdd1256e3a50300da56b"}, "downloads": -1, "filename": "django-deferred-filelogger-0.1.tar.gz", "has_sig": false, "md5_digest": "f5e3eb532dcc9a0d7d8d4882566d2c6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2891, "upload_time": "2013-06-12T14:44:36", "upload_time_iso_8601": "2013-06-12T14:44:36.745504Z", "url": "https://files.pythonhosted.org/packages/32/6d/00107d06ff29d5648636932045e415dbf32b132bad2c80b68aa6fec493ca/django-deferred-filelogger-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:36 2020"}