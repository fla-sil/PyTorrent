{"info": {"author": "TotvsLabs", "author_email": "ops@totvslabs.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": ".. note::\n   For the latest source, discussion, etc, please visit the\n   `GitHub repository <https://github.com/totvslabs/pyCarol>`_\n\n\n=======\nPyCarol\n=======\n\n.. image:: https://badge.buildkite.com/b92ca1611add8d61063f61c92b9798fe81e859d468aae36463.svg\n    :target: https://buildkite.com/totvslabs/pycarol\n\n.. contents::\n\nGetting Started\n---------------\nRun ``pip install pycarol`` to install the latest stable version from `PyPI\n<https://pypi.python.org/pypi/pycarol>`_. `Documentation for the latest release\n<http://pycarol.readthedocs.io/>`__ is hosted on readthedocs.\n\nInitializing pyCarol\n--------------------\n\nCarol is the main object to access pyCarol and all Carol's APIs.\n\n.. code:: python\n\n    from pycarol import PwdAuth, Carol\n    carol = Carol(domain=TENANT_NAME, app_name=APP_NAME,\n                  auth=PwdAuth(USERNAME, PASSWORD), organization=ORGANIZATION)\n\n\nwhere ``domain`` is the tenant name, ``app_name`` is the Carol's app name, if any, ``auth``\nis the authentication method to be used (using user/password in this case) and ``organization`` is the organization\none wants to connect. Carols's URL is build as ``www.ORGANIZATION.carol.ai/TENANT_NAME``\n\nUsing API Key\n--------------\nTo use API keys instead of username and password:\n\n.. code:: python\n\n    from pycarol import ApiKeyAuth, Carol\n\n    carol = Carol(domain=DOMAIN,\n                  app_name=APP_NAME,\n                  auth=ApiKeyAuth(api_key=X_AUTH_KEY),\n                  connector_id=CONNECTOR, organization=ORGANIZATION)\n\nIn this case one changes the authentication method to ``ApiKeyAuth``. Noticed that one needs to pass the ``connector_id``\ntoo. An API key is always associated to a connector ID. \n\nIt is possible to use pyCarol to generate an API key\n\n.. code:: python\n\n    from pycarol import PwdAuth, ApiKeyAuth, Carol\n\n    carol = Carol(domain=TENANT_NAME, app_name=APP_NAME, organization=ORGANIZATION,\n                  auth=PwdAuth(USERNAME, PASSWORD), connector_id=CONNECTOR)\n    api_key = carol.issue_api_key()\n\n    print(f\"This is a API key {api_key['X-Auth-Key']}\")\n    print(f\"This is the connector Id {api_key['X-Auth-ConnectorId']}\")\n\nTo get the details of the API key you can do:\n\n.. code:: python\n\n    details = carol.api_key_details(APIKEY, CONNECTORID)\n\n\nFinally, to revoke an API key:\n\n.. code:: python\n\n    carol.api_key_revoke(CONNECTORID)\n\n\n\nGood practice using token\n-------------------------\n\nNever write in plain text your password/API token in your application. Use environment variables. pyCarol can use \nenvironment variables automatically. When none parameter is passed to the Carol constructor pycarol will look for:\n\n 1. ``CAROLTENANT`` for domain\n 2. ``CAROLAPPNAME`` for app_name\n 3. ``CAROL_DOMAIN`` for environment\n 4. ``CAROLORGANIZATION`` for organization\n 5. ``CAROLAPPOAUTH`` for auth\n 6. ``CAROLCONNECTORID`` for connector_id\n 7. ``CAROLUSER`` for carol user email\n 8. ``CAROLPWD`` for user password.\n \n e.g., one can create a ``.env`` file like this:\n\n.. code:: python\n\n    CAROLAPPNAME=myApp\n    CAROLTENANT=myTenant\n    CAROLORGANIZATION=myOrganization\n    CAROLAPPOAUTH=myAPIKey\n    CAROLCONNECTORID=myConnector\n\nand then\n\n.. code:: python\n\n    from pycarol import Carol\n    from dotenv import load_dotenv\n    load_dotenv(\".env\") #this will import these env variables to your execution.\n    carol = Carol()\n\n\nFilter queries\n---------------\n\n\n.. code:: python\n\n    from pycarol.filter import TYPE_FILTER, TERM_FILTER, Filter\n    from pycarol import Query\n    json_query = Filter.Builder() \\\n        .must(TYPE_FILTER(value='ratings' + \"Golden\")) \\\n        .must(TERM_FILTER(key='mdmGoldenFieldAndValues.userid.raw',value='123'))\\\n        .build().to_json()\n\n    FIELDS_ITEMS = ['mdmGoldenFieldAndValues.mdmaddress.coordinates']\n    query = Query(carol, page_size=10, print_status=True, only_hits=True,\n                  fields=FIELDS_ITEMS, max_hits=200).query(json_query).go()\n    query.results\n\n\n\nThe result will be ``200`` hits of the query ``json_query``  above, the pagination will be 10, that means in each response\nthere will be 10 records. The query will return only the fields set in ``FIELDS_ITEMS``.\n\nThe parameter ``only_hits = True`` will make sure that only records into the path ``$hits.mdmGoldenFieldAndValues`` will return.\nIf one wants all the response use ``only_hits = False``. Also, if your filter has an aggregation, one should use\n``only_hits = False`` and ``get_aggs=True``, e.g.,\n\n\n.. code:: python\n\n    from pycarol import Query\n    from pycarol.filter import TYPE_FILTER, Filter, CARDINALITY\n\n    json_query = Filter.Builder() \\\n        .must(TYPE_FILTER(value='datamodelname' + \"Golden\")) \\\n        .aggregation(CARDINALITY(name='cardinality', params = [\"mdmGoldenFieldAndValues.taxid.raw\"], size=40))\\\n        .build().to_json()\n\n    query = Query(carol, get_aggs=True, only_hits=False)\n    query.query(json_query).go()\n    query.results\n\n\n\nNamed queries\n-------------\n\n.. code:: python\n\n    from pycarol import Query\n\n    named_query = 'revenueHist'  # named query name\n    params = {\"bin\":\"1d\",\"cnpj\":\"24386434000130\"}  #query parameters to send.\n    results = Query(carol).named(named_query, params=params).go().results\n\nIt is possible to use all the parameters used in the filter query, i.e., ``only_hits`` ,\n``save_results``, etc. For more information for the possible input parameters check the docstring.\n\nWhat if one does not remember the parameters for a given named query?\n\n\n.. code:: python\n\n    named_query = 'revenueHist'  # named query name\n    Query(carol).named_query_params(named_query)\n    > {'revenueHist': ['*cnpj', 'dateFrom', 'dateTo', '*bin']}  #Parameters starting by * are mandatory.\n\n\n\nSending data\n------------\n\nThe first step to send data to Carol is to create a connector.\n\n.. code:: python\n\n    from pycarol import Connectors\n    connector_id = Connectors(carol).create(name='my_conector', label=\"conector_label\", group_name=\"GroupName\")\n    print(f\"This is the connector id: {connector_id}\")\n\n\nWith the connector Id on hands we can create the staging schema and then create the staging table. Assuming we have\na sample of the data we want to send.\n\n.. code:: python\n\n    from pycarol import Staging\n\n    json_ex = {\"name\":'Rafael',\"email\": {\"type\": \"email\", \"email\": 'rafael@totvs.com.br'} }\n\n    staging = Staging(carol)\n    staging.create_schema(staging_name='my_stag', data = json_ex,\n                          crosswalk_name= 'my_crosswalk' ,crosswalk_list=['name'],\n                            connector_name='may_connector')\n\n\nThe json schema will be in the variable ``schema.schema``. The code above will create the following schema:\n\n.. code:: python\n\n    {\n      'mdmCrosswalkTemplate': {\n        'mdmCrossreference': {\n          'my_crosswalk': [\n            'name'\n          ]\n        }\n      },\n      'mdmFlexible': 'false',\n      'mdmStagingMapping': {\n        'properties': {\n          'email': {\n            'properties': {\n              'email': {\n                'type': 'string'\n              },\n              'type': {\n                'type': 'string'\n              }\n            },\n            'type': 'nested'\n          },\n          'name': {\n            'type': 'string'\n          }\n        }\n      },\n      'mdmStagingType': 'my_stag'\n    }\n\n\nTo send the data  (assuming we have a json with the data we want to send).\n\n.. code:: python\n\n    from pycarol import Staging\n\n    json_ex = [{\"name\":'Rafael',\"email\": {\"type\": \"email\", \"email\": 'rafael@totvs.com.br'}   },\n               {\"name\":'Leandro',\"email\": {\"type\": \"email\", \"email\": 'Leandro@totvs.com.br'}   },\n               {\"name\":'Joao',\"email\": {\"type\": \"email\", \"email\": 'joao@rolima.com.br'}   },\n               {\"name\":'Marcelo',\"email\": {\"type\": \"email\", \"email\": 'marcelo@totvs.com.br'}   }]\n\n\n    staging = Staging(carol)\n    staging.sendData(staging_name = 'my_stag', data = json_ex, step_size = 2,\n                     connector_id=connectorId, print_stats = True)\n\nThe parameter ``step_size`` says how many registers will be sent each time. Remember the the max size per payload is\n5MB. The parameter  ``data`` can be a pandas DataFrame.\n\nOBS: It is not possible to create a mapping using pycarol. The Mapping has to be done via the UI\n\n\n\nLogging\n--------\n\n\nTo log messages to Carol:\n\n.. code:: python\n\n    from pycarol import Carol, CarolHandler\n    import logging\n\n    logger = logging.getLogger(__name__)\n    logger.setLevel(logging.DEBUG)\n    carol = CarolHandler(Carol())\n    carol.setLevel(logging.INFO)\n    logger.addHandler(carol)\n\n    logger.debug('This is a debug message') #This will not be logged in Carol. Level is set to INFO\n    logger.info('This is an info message')\n    logger.warning('This is a warning message')\n    logger.error('This is an error message')\n    logger.critical('This is a critical message')\n\n\nThese methods will use the current long task id provided by Carol when running your application.\nFor local environments you need to set that manually first on the beginning of your code:\n\n.. code:: python\n\n    import os\n    os.environ['LONGTASKID'] = task_id\n\nWe recommend to log only INFO+ information in Carol. If no TASK ID is passed it works as a Console Handler. \n\nSettings\n--------\nWe can use pyCarol to access the settings of your Carol App.\n\n.. code:: python\n\n    from pycarol.apps import Apps\n    app = Apps(carol)\n    settings = app.get_settings(app_name='my_app')\n    print(settings)\n\n\nThe settings will be returned as a dictionary where the keys are the parameter names and the values are\nthe value for that parameter. Please note that your app must be created in Carol.\n\nRelease process\n----------------\n1. Open a PR with your change for `master` branch;\n2. Once approved, merge into `master`;\n3. Locally, checkout to `master` branch;\n4. make bump_patch/bump_minor depending on the type of version. THis will create a commit with the new version.;\n5. Push your commit and tag;\n6. Create a new Release.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/totvslabs/pyCarol", "keywords": "Totvs,Carol.ai,AI", "license": "TOTVS", "maintainer": "TOTVS Labs", "maintainer_email": "", "name": "pycarol", "package_url": "https://pypi.org/project/pycarol/", "platform": "", "project_url": "https://pypi.org/project/pycarol/", "project_urls": {"Homepage": "https://github.com/totvslabs/pyCarol"}, "release_url": "https://pypi.org/project/pycarol/2.33.2/", "requires_dist": null, "requires_python": "", "summary": "Carol Python API and Tools", "version": "2.33.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<p>Note</p>\n<p>For the latest source, discussion, etc, please visit the\n<a href=\"https://github.com/totvslabs/pyCarol\" rel=\"nofollow\">GitHub repository</a></p>\n</div>\n<div id=\"pycarol\">\n<h2><a href=\"#id1\" rel=\"nofollow\">PyCarol</a></h2>\n<a href=\"https://buildkite.com/totvslabs/pycarol\" rel=\"nofollow\"><img alt=\"https://badge.buildkite.com/b92ca1611add8d61063f61c92b9798fe81e859d468aae36463.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a54094a67e6c02e3696d0b8c9a85f55a6a1a8200/68747470733a2f2f62616467652e6275696c646b6974652e636f6d2f62393263613136313161646438643631303633663631633932623937393866653831653835396434363861616533363436332e737667\"></a>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#pycarol\" id=\"id1\" rel=\"nofollow\">PyCarol</a><ul>\n<li><a href=\"#getting-started\" id=\"id2\" rel=\"nofollow\">Getting Started</a></li>\n<li><a href=\"#initializing-pycarol\" id=\"id3\" rel=\"nofollow\">Initializing pyCarol</a></li>\n<li><a href=\"#using-api-key\" id=\"id4\" rel=\"nofollow\">Using API Key</a></li>\n<li><a href=\"#good-practice-using-token\" id=\"id5\" rel=\"nofollow\">Good practice using token</a></li>\n<li><a href=\"#filter-queries\" id=\"id6\" rel=\"nofollow\">Filter queries</a></li>\n<li><a href=\"#named-queries\" id=\"id7\" rel=\"nofollow\">Named queries</a></li>\n<li><a href=\"#sending-data\" id=\"id8\" rel=\"nofollow\">Sending data</a></li>\n<li><a href=\"#logging\" id=\"id9\" rel=\"nofollow\">Logging</a></li>\n<li><a href=\"#settings\" id=\"id10\" rel=\"nofollow\">Settings</a></li>\n<li><a href=\"#release-process\" id=\"id11\" rel=\"nofollow\">Release process</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"getting-started\">\n<h3><a href=\"#id2\" rel=\"nofollow\">Getting Started</a></h3>\n<p>Run <tt>pip install pycarol</tt> to install the latest stable version from <a href=\"https://pypi.python.org/pypi/pycarol\" rel=\"nofollow\">PyPI</a>. <a href=\"http://pycarol.readthedocs.io/\" rel=\"nofollow\">Documentation for the latest release</a> is hosted on readthedocs.</p>\n</div>\n<div id=\"initializing-pycarol\">\n<h3><a href=\"#id3\" rel=\"nofollow\">Initializing pyCarol</a></h3>\n<p>Carol is the main object to access pyCarol and all Carol\u2019s APIs.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycarol</span> <span class=\"kn\">import</span> <span class=\"n\">PwdAuth</span><span class=\"p\">,</span> <span class=\"n\">Carol</span>\n<span class=\"n\">carol</span> <span class=\"o\">=</span> <span class=\"n\">Carol</span><span class=\"p\">(</span><span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"n\">TENANT_NAME</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"n\">APP_NAME</span><span class=\"p\">,</span>\n              <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"n\">PwdAuth</span><span class=\"p\">(</span><span class=\"n\">USERNAME</span><span class=\"p\">,</span> <span class=\"n\">PASSWORD</span><span class=\"p\">),</span> <span class=\"n\">organization</span><span class=\"o\">=</span><span class=\"n\">ORGANIZATION</span><span class=\"p\">)</span>\n</pre>\n<p>where <tt>domain</tt> is the tenant name, <tt>app_name</tt> is the Carol\u2019s app name, if any, <tt>auth</tt>\nis the authentication method to be used (using user/password in this case) and <tt>organization</tt> is the organization\none wants to connect. Carols\u2019s URL is build as <tt>www.ORGANIZATION.carol.ai/TENANT_NAME</tt></p>\n</div>\n<div id=\"using-api-key\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Using API Key</a></h3>\n<p>To use API keys instead of username and password:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycarol</span> <span class=\"kn\">import</span> <span class=\"n\">ApiKeyAuth</span><span class=\"p\">,</span> <span class=\"n\">Carol</span>\n\n<span class=\"n\">carol</span> <span class=\"o\">=</span> <span class=\"n\">Carol</span><span class=\"p\">(</span><span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"n\">DOMAIN</span><span class=\"p\">,</span>\n              <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"n\">APP_NAME</span><span class=\"p\">,</span>\n              <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"n\">ApiKeyAuth</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"n\">X_AUTH_KEY</span><span class=\"p\">),</span>\n              <span class=\"n\">connector_id</span><span class=\"o\">=</span><span class=\"n\">CONNECTOR</span><span class=\"p\">,</span> <span class=\"n\">organization</span><span class=\"o\">=</span><span class=\"n\">ORGANIZATION</span><span class=\"p\">)</span>\n</pre>\n<p>In this case one changes the authentication method to <tt>ApiKeyAuth</tt>. Noticed that one needs to pass the <tt>connector_id</tt>\ntoo. An API key is always associated to a connector ID.</p>\n<p>It is possible to use pyCarol to generate an API key</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycarol</span> <span class=\"kn\">import</span> <span class=\"n\">PwdAuth</span><span class=\"p\">,</span> <span class=\"n\">ApiKeyAuth</span><span class=\"p\">,</span> <span class=\"n\">Carol</span>\n\n<span class=\"n\">carol</span> <span class=\"o\">=</span> <span class=\"n\">Carol</span><span class=\"p\">(</span><span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"n\">TENANT_NAME</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"n\">APP_NAME</span><span class=\"p\">,</span> <span class=\"n\">organization</span><span class=\"o\">=</span><span class=\"n\">ORGANIZATION</span><span class=\"p\">,</span>\n              <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"n\">PwdAuth</span><span class=\"p\">(</span><span class=\"n\">USERNAME</span><span class=\"p\">,</span> <span class=\"n\">PASSWORD</span><span class=\"p\">),</span> <span class=\"n\">connector_id</span><span class=\"o\">=</span><span class=\"n\">CONNECTOR</span><span class=\"p\">)</span>\n<span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"n\">carol</span><span class=\"o\">.</span><span class=\"n\">issue_api_key</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"This is a API key </span><span class=\"si\">{</span><span class=\"n\">api_key</span><span class=\"p\">[</span><span class=\"s1\">'X-Auth-Key'</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"This is the connector Id </span><span class=\"si\">{</span><span class=\"n\">api_key</span><span class=\"p\">[</span><span class=\"s1\">'X-Auth-ConnectorId'</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p>To get the details of the API key you can do:</p>\n<pre><span class=\"n\">details</span> <span class=\"o\">=</span> <span class=\"n\">carol</span><span class=\"o\">.</span><span class=\"n\">api_key_details</span><span class=\"p\">(</span><span class=\"n\">APIKEY</span><span class=\"p\">,</span> <span class=\"n\">CONNECTORID</span><span class=\"p\">)</span>\n</pre>\n<p>Finally, to revoke an API key:</p>\n<pre><span class=\"n\">carol</span><span class=\"o\">.</span><span class=\"n\">api_key_revoke</span><span class=\"p\">(</span><span class=\"n\">CONNECTORID</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"good-practice-using-token\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Good practice using token</a></h3>\n<p>Never write in plain text your password/API token in your application. Use environment variables. pyCarol can use\nenvironment variables automatically. When none parameter is passed to the Carol constructor pycarol will look for:</p>\n<blockquote>\n<ol>\n<li><tt>CAROLTENANT</tt> for domain</li>\n<li><tt>CAROLAPPNAME</tt> for app_name</li>\n<li><tt>CAROL_DOMAIN</tt> for environment</li>\n<li><tt>CAROLORGANIZATION</tt> for organization</li>\n<li><tt>CAROLAPPOAUTH</tt> for auth</li>\n<li><tt>CAROLCONNECTORID</tt> for connector_id</li>\n<li><tt>CAROLUSER</tt> for carol user email</li>\n<li><tt>CAROLPWD</tt> for user password.</li>\n</ol>\n<p>e.g., one can create a <tt>.env</tt> file like this:</p>\n</blockquote>\n<pre><span class=\"n\">CAROLAPPNAME</span><span class=\"o\">=</span><span class=\"n\">myApp</span>\n<span class=\"n\">CAROLTENANT</span><span class=\"o\">=</span><span class=\"n\">myTenant</span>\n<span class=\"n\">CAROLORGANIZATION</span><span class=\"o\">=</span><span class=\"n\">myOrganization</span>\n<span class=\"n\">CAROLAPPOAUTH</span><span class=\"o\">=</span><span class=\"n\">myAPIKey</span>\n<span class=\"n\">CAROLCONNECTORID</span><span class=\"o\">=</span><span class=\"n\">myConnector</span>\n</pre>\n<p>and then</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycarol</span> <span class=\"kn\">import</span> <span class=\"n\">Carol</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dotenv</span> <span class=\"kn\">import</span> <span class=\"n\">load_dotenv</span>\n<span class=\"n\">load_dotenv</span><span class=\"p\">(</span><span class=\"s2\">\".env\"</span><span class=\"p\">)</span> <span class=\"c1\">#this will import these env variables to your execution.</span>\n<span class=\"n\">carol</span> <span class=\"o\">=</span> <span class=\"n\">Carol</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"filter-queries\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Filter queries</a></h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycarol.filter</span> <span class=\"kn\">import</span> <span class=\"n\">TYPE_FILTER</span><span class=\"p\">,</span> <span class=\"n\">TERM_FILTER</span><span class=\"p\">,</span> <span class=\"n\">Filter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pycarol</span> <span class=\"kn\">import</span> <span class=\"n\">Query</span>\n<span class=\"n\">json_query</span> <span class=\"o\">=</span> <span class=\"n\">Filter</span><span class=\"o\">.</span><span class=\"n\">Builder</span><span class=\"p\">()</span> \\\n    <span class=\"o\">.</span><span class=\"n\">must</span><span class=\"p\">(</span><span class=\"n\">TYPE_FILTER</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'ratings'</span> <span class=\"o\">+</span> <span class=\"s2\">\"Golden\"</span><span class=\"p\">))</span> \\\n    <span class=\"o\">.</span><span class=\"n\">must</span><span class=\"p\">(</span><span class=\"n\">TERM_FILTER</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'mdmGoldenFieldAndValues.userid.raw'</span><span class=\"p\">,</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'123'</span><span class=\"p\">))</span>\\\n    <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">()</span>\n\n<span class=\"n\">FIELDS_ITEMS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'mdmGoldenFieldAndValues.mdmaddress.coordinates'</span><span class=\"p\">]</span>\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">carol</span><span class=\"p\">,</span> <span class=\"n\">page_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">print_status</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">only_hits</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n              <span class=\"n\">fields</span><span class=\"o\">=</span><span class=\"n\">FIELDS_ITEMS</span><span class=\"p\">,</span> <span class=\"n\">max_hits</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">json_query</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">go</span><span class=\"p\">()</span>\n<span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">results</span>\n</pre>\n<p>The result will be <tt>200</tt> hits of the query <tt>json_query</tt>  above, the pagination will be 10, that means in each response\nthere will be 10 records. The query will return only the fields set in <tt>FIELDS_ITEMS</tt>.</p>\n<p>The parameter <tt>only_hits = True</tt> will make sure that only records into the path <tt>$hits.mdmGoldenFieldAndValues</tt> will return.\nIf one wants all the response use <tt>only_hits = False</tt>. Also, if your filter has an aggregation, one should use\n<tt>only_hits = False</tt> and <tt>get_aggs=True</tt>, e.g.,</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycarol</span> <span class=\"kn\">import</span> <span class=\"n\">Query</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pycarol.filter</span> <span class=\"kn\">import</span> <span class=\"n\">TYPE_FILTER</span><span class=\"p\">,</span> <span class=\"n\">Filter</span><span class=\"p\">,</span> <span class=\"n\">CARDINALITY</span>\n\n<span class=\"n\">json_query</span> <span class=\"o\">=</span> <span class=\"n\">Filter</span><span class=\"o\">.</span><span class=\"n\">Builder</span><span class=\"p\">()</span> \\\n    <span class=\"o\">.</span><span class=\"n\">must</span><span class=\"p\">(</span><span class=\"n\">TYPE_FILTER</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'datamodelname'</span> <span class=\"o\">+</span> <span class=\"s2\">\"Golden\"</span><span class=\"p\">))</span> \\\n    <span class=\"o\">.</span><span class=\"n\">aggregation</span><span class=\"p\">(</span><span class=\"n\">CARDINALITY</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'cardinality'</span><span class=\"p\">,</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"mdmGoldenFieldAndValues.taxid.raw\"</span><span class=\"p\">],</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">))</span>\\\n    <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">()</span>\n\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">carol</span><span class=\"p\">,</span> <span class=\"n\">get_aggs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">only_hits</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">json_query</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">go</span><span class=\"p\">()</span>\n<span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">results</span>\n</pre>\n</div>\n<div id=\"named-queries\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Named queries</a></h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycarol</span> <span class=\"kn\">import</span> <span class=\"n\">Query</span>\n\n<span class=\"n\">named_query</span> <span class=\"o\">=</span> <span class=\"s1\">'revenueHist'</span>  <span class=\"c1\"># named query name</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"bin\"</span><span class=\"p\">:</span><span class=\"s2\">\"1d\"</span><span class=\"p\">,</span><span class=\"s2\">\"cnpj\"</span><span class=\"p\">:</span><span class=\"s2\">\"24386434000130\"</span><span class=\"p\">}</span>  <span class=\"c1\">#query parameters to send.</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">carol</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">named</span><span class=\"p\">(</span><span class=\"n\">named_query</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">go</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">results</span>\n</pre>\n<p>It is possible to use all the parameters used in the filter query, i.e., <tt>only_hits</tt> ,\n<tt>save_results</tt>, etc. For more information for the possible input parameters check the docstring.</p>\n<p>What if one does not remember the parameters for a given named query?</p>\n<pre><span class=\"n\">named_query</span> <span class=\"o\">=</span> <span class=\"s1\">'revenueHist'</span>  <span class=\"c1\"># named query name</span>\n<span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">carol</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">named_query_params</span><span class=\"p\">(</span><span class=\"n\">named_query</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"p\">{</span><span class=\"s1\">'revenueHist'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'*cnpj'</span><span class=\"p\">,</span> <span class=\"s1\">'dateFrom'</span><span class=\"p\">,</span> <span class=\"s1\">'dateTo'</span><span class=\"p\">,</span> <span class=\"s1\">'*bin'</span><span class=\"p\">]}</span>  <span class=\"c1\">#Parameters starting by * are mandatory.</span>\n</pre>\n</div>\n<div id=\"sending-data\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Sending data</a></h3>\n<p>The first step to send data to Carol is to create a connector.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycarol</span> <span class=\"kn\">import</span> <span class=\"n\">Connectors</span>\n<span class=\"n\">connector_id</span> <span class=\"o\">=</span> <span class=\"n\">Connectors</span><span class=\"p\">(</span><span class=\"n\">carol</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'my_conector'</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">\"conector_label\"</span><span class=\"p\">,</span> <span class=\"n\">group_name</span><span class=\"o\">=</span><span class=\"s2\">\"GroupName\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"This is the connector id: </span><span class=\"si\">{</span><span class=\"n\">connector_id</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p>With the connector Id on hands we can create the staging schema and then create the staging table. Assuming we have\na sample of the data we want to send.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycarol</span> <span class=\"kn\">import</span> <span class=\"n\">Staging</span>\n\n<span class=\"n\">json_ex</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span><span class=\"s1\">'Rafael'</span><span class=\"p\">,</span><span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"email\"</span><span class=\"p\">,</span> <span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"s1\">'rafael@totvs.com.br'</span><span class=\"p\">}</span> <span class=\"p\">}</span>\n\n<span class=\"n\">staging</span> <span class=\"o\">=</span> <span class=\"n\">Staging</span><span class=\"p\">(</span><span class=\"n\">carol</span><span class=\"p\">)</span>\n<span class=\"n\">staging</span><span class=\"o\">.</span><span class=\"n\">create_schema</span><span class=\"p\">(</span><span class=\"n\">staging_name</span><span class=\"o\">=</span><span class=\"s1\">'my_stag'</span><span class=\"p\">,</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json_ex</span><span class=\"p\">,</span>\n                      <span class=\"n\">crosswalk_name</span><span class=\"o\">=</span> <span class=\"s1\">'my_crosswalk'</span> <span class=\"p\">,</span><span class=\"n\">crosswalk_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">],</span>\n                        <span class=\"n\">connector_name</span><span class=\"o\">=</span><span class=\"s1\">'may_connector'</span><span class=\"p\">)</span>\n</pre>\n<p>The json schema will be in the variable <tt>schema.schema</tt>. The code above will create the following schema:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"s1\">'mdmCrosswalkTemplate'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'mdmCrossreference'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s1\">'my_crosswalk'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s1\">'name'</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"s1\">'mdmFlexible'</span><span class=\"p\">:</span> <span class=\"s1\">'false'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'mdmStagingMapping'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'properties'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'properties'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span>\n          <span class=\"p\">},</span>\n          <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'nested'</span>\n      <span class=\"p\">},</span>\n      <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"s1\">'mdmStagingType'</span><span class=\"p\">:</span> <span class=\"s1\">'my_stag'</span>\n<span class=\"p\">}</span>\n</pre>\n<p>To send the data  (assuming we have a json with the data we want to send).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycarol</span> <span class=\"kn\">import</span> <span class=\"n\">Staging</span>\n\n<span class=\"n\">json_ex</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span><span class=\"s1\">'Rafael'</span><span class=\"p\">,</span><span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"email\"</span><span class=\"p\">,</span> <span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"s1\">'rafael@totvs.com.br'</span><span class=\"p\">}</span>   <span class=\"p\">},</span>\n           <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span><span class=\"s1\">'Leandro'</span><span class=\"p\">,</span><span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"email\"</span><span class=\"p\">,</span> <span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"s1\">'Leandro@totvs.com.br'</span><span class=\"p\">}</span>   <span class=\"p\">},</span>\n           <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span><span class=\"s1\">'Joao'</span><span class=\"p\">,</span><span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"email\"</span><span class=\"p\">,</span> <span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"s1\">'joao@rolima.com.br'</span><span class=\"p\">}</span>   <span class=\"p\">},</span>\n           <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span><span class=\"s1\">'Marcelo'</span><span class=\"p\">,</span><span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"email\"</span><span class=\"p\">,</span> <span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"s1\">'marcelo@totvs.com.br'</span><span class=\"p\">}</span>   <span class=\"p\">}]</span>\n\n\n<span class=\"n\">staging</span> <span class=\"o\">=</span> <span class=\"n\">Staging</span><span class=\"p\">(</span><span class=\"n\">carol</span><span class=\"p\">)</span>\n<span class=\"n\">staging</span><span class=\"o\">.</span><span class=\"n\">sendData</span><span class=\"p\">(</span><span class=\"n\">staging_name</span> <span class=\"o\">=</span> <span class=\"s1\">'my_stag'</span><span class=\"p\">,</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json_ex</span><span class=\"p\">,</span> <span class=\"n\">step_size</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                 <span class=\"n\">connector_id</span><span class=\"o\">=</span><span class=\"n\">connectorId</span><span class=\"p\">,</span> <span class=\"n\">print_stats</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>The parameter <tt>step_size</tt> says how many registers will be sent each time. Remember the the max size per payload is\n5MB. The parameter  <tt>data</tt> can be a pandas DataFrame.</p>\n<p>OBS: It is not possible to create a mapping using pycarol. The Mapping has to be done via the UI</p>\n</div>\n<div id=\"logging\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Logging</a></h3>\n<p>To log messages to Carol:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycarol</span> <span class=\"kn\">import</span> <span class=\"n\">Carol</span><span class=\"p\">,</span> <span class=\"n\">CarolHandler</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n<span class=\"n\">carol</span> <span class=\"o\">=</span> <span class=\"n\">CarolHandler</span><span class=\"p\">(</span><span class=\"n\">Carol</span><span class=\"p\">())</span>\n<span class=\"n\">carol</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">carol</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'This is a debug message'</span><span class=\"p\">)</span> <span class=\"c1\">#This will not be logged in Carol. Level is set to INFO</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'This is an info message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s1\">'This is a warning message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'This is an error message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">critical</span><span class=\"p\">(</span><span class=\"s1\">'This is a critical message'</span><span class=\"p\">)</span>\n</pre>\n<p>These methods will use the current long task id provided by Carol when running your application.\nFor local environments you need to set that manually first on the beginning of your code:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'LONGTASKID'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">task_id</span>\n</pre>\n<p>We recommend to log only INFO+ information in Carol. If no TASK ID is passed it works as a Console Handler.</p>\n</div>\n<div id=\"settings\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Settings</a></h3>\n<p>We can use pyCarol to access the settings of your Carol App.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycarol.apps</span> <span class=\"kn\">import</span> <span class=\"n\">Apps</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Apps</span><span class=\"p\">(</span><span class=\"n\">carol</span><span class=\"p\">)</span>\n<span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">get_settings</span><span class=\"p\">(</span><span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s1\">'my_app'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">)</span>\n</pre>\n<p>The settings will be returned as a dictionary where the keys are the parameter names and the values are\nthe value for that parameter. Please note that your app must be created in Carol.</p>\n</div>\n<div id=\"release-process\">\n<h3><a href=\"#id11\" rel=\"nofollow\">Release process</a></h3>\n<ol>\n<li>Open a PR with your change for <cite>master</cite> branch;</li>\n<li>Once approved, merge into <cite>master</cite>;</li>\n<li>Locally, checkout to <cite>master</cite> branch;</li>\n<li>make bump_patch/bump_minor depending on the type of version. THis will create a commit with the new version.;</li>\n<li>Push your commit and tag;</li>\n<li>Create a new Release.</li>\n</ol>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7183397, "releases": {"2.12": [{"comment_text": "", "digests": {"md5": "f46b323c489cccc5a91840e4ae37a769", "sha256": "38b5e64ad08526cdcd6d9a07edf00de3d57c5820921cfcdd8c810067f7ac774a"}, "downloads": -1, "filename": "pycarol-2.12.tar.gz", "has_sig": false, "md5_digest": "f46b323c489cccc5a91840e4ae37a769", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91601, "upload_time": "2019-05-20T16:23:24", "upload_time_iso_8601": "2019-05-20T16:23:24.207801Z", "url": "https://files.pythonhosted.org/packages/e9/8e/274851907c7be9d5db10bcfa50c44b0bbf1acd2fbcdb01f94bd0ab9bca60/pycarol-2.12.tar.gz", "yanked": false}], "2.12.1": [{"comment_text": "", "digests": {"md5": "c9afca79356164159013f48ac3761d04", "sha256": "52fe55e29c633975f9d468aa64dd980c56b51af1eee56fc7da1dc0159abdcce8"}, "downloads": -1, "filename": "pycarol-2.12.1.tar.gz", "has_sig": false, "md5_digest": "c9afca79356164159013f48ac3761d04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91996, "upload_time": "2019-05-21T20:53:19", "upload_time_iso_8601": "2019-05-21T20:53:19.018208Z", "url": "https://files.pythonhosted.org/packages/9d/7b/d2b2e45d510069d4ec8b5df877b4dd086f22bc0151ad0d71c42c89be2a62/pycarol-2.12.1.tar.gz", "yanked": false}], "2.12.2": [{"comment_text": "", "digests": {"md5": "a006e938fe05eb6309d1766c37b4d78b", "sha256": "db738e3879c1c1d8ac87950eb48789f36e4c3b7ef25051e8d83031da7f33f55b"}, "downloads": -1, "filename": "pycarol-2.12.2.tar.gz", "has_sig": false, "md5_digest": "a006e938fe05eb6309d1766c37b4d78b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91995, "upload_time": "2019-05-22T13:53:39", "upload_time_iso_8601": "2019-05-22T13:53:39.224709Z", "url": "https://files.pythonhosted.org/packages/73/83/fd22c8dd84127178937d046b13e1ddc6e94e65665c6baa45fb5b9289e237/pycarol-2.12.2.tar.gz", "yanked": false}], "2.12.3": [{"comment_text": "", "digests": {"md5": "55f60506eb1c4375ea1efe5ef7f256c4", "sha256": "d5ccaedd3cc9023213f38bc0fd22f37de5c3157a92d82e0cd04efe4e0b762147"}, "downloads": -1, "filename": "pycarol-2.12.3.tar.gz", "has_sig": false, "md5_digest": "55f60506eb1c4375ea1efe5ef7f256c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91988, "upload_time": "2019-05-23T14:36:08", "upload_time_iso_8601": "2019-05-23T14:36:08.114274Z", "url": "https://files.pythonhosted.org/packages/44/6b/2a11c852d75a2e14b7bcf8356ad18fe91b909bc35414e84acac31566d48c/pycarol-2.12.3.tar.gz", "yanked": false}], "2.13.1": [{"comment_text": "", "digests": {"md5": "b3c87d90c35736f444eb5afaef4522d2", "sha256": "edc18ce9a8c2e451ed05f11e0f8e772b391eab6805637a485c675f9f40add9ac"}, "downloads": -1, "filename": "pycarol-2.13.1.tar.gz", "has_sig": false, "md5_digest": "b3c87d90c35736f444eb5afaef4522d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91215, "upload_time": "2019-05-23T22:18:41", "upload_time_iso_8601": "2019-05-23T22:18:41.639927Z", "url": "https://files.pythonhosted.org/packages/83/be/31f2eb9f5a1752768e88bc8a12a933d114e4d56fc11462f9e9cd149d3e6a/pycarol-2.13.1.tar.gz", "yanked": false}], "2.13.2": [{"comment_text": "", "digests": {"md5": "45eadc1408b19d1adde59d9d525d80a9", "sha256": "1935f26eb495edf8e9c5d1beeb51e55340eb692abc74b9d6d1f62ef12b206511"}, "downloads": -1, "filename": "pycarol-2.13.2.tar.gz", "has_sig": false, "md5_digest": "45eadc1408b19d1adde59d9d525d80a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91130, "upload_time": "2019-05-24T14:44:57", "upload_time_iso_8601": "2019-05-24T14:44:57.154881Z", "url": "https://files.pythonhosted.org/packages/1a/1e/e7b10fa32427f62ec8d3003f4a202bf66e8d4584ab73f2d8ba77837d68d3/pycarol-2.13.2.tar.gz", "yanked": false}], "2.13.3": [{"comment_text": "", "digests": {"md5": "4321f02eab97af3fa3ece027bebdcbb4", "sha256": "6760bc6e1cbff65de10f3e2fb60cf72f8ee27da34362befd2c8ecec472f08635"}, "downloads": -1, "filename": "pycarol-2.13.3.tar.gz", "has_sig": false, "md5_digest": "4321f02eab97af3fa3ece027bebdcbb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91153, "upload_time": "2019-05-27T19:23:36", "upload_time_iso_8601": "2019-05-27T19:23:36.704996Z", "url": "https://files.pythonhosted.org/packages/96/13/0c718623deb981af8ef11ac9b4e55fa4a5601b13176ee8fff897aec51417/pycarol-2.13.3.tar.gz", "yanked": false}], "2.13.4": [{"comment_text": "", "digests": {"md5": "58df491037482d70421d6636ec9b8e18", "sha256": "822a3e67b618b7faef42dc304aff98a1ed8f242d3f321c793f6acb6708089710"}, "downloads": -1, "filename": "pycarol-2.13.4.tar.gz", "has_sig": false, "md5_digest": "58df491037482d70421d6636ec9b8e18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90996, "upload_time": "2019-05-28T19:42:36", "upload_time_iso_8601": "2019-05-28T19:42:36.394454Z", "url": "https://files.pythonhosted.org/packages/82/04/298694636df87b8f211b711de06e925ec53d5e0a6aa8141318aa1e346815/pycarol-2.13.4.tar.gz", "yanked": false}], "2.13.5": [{"comment_text": "", "digests": {"md5": "25d573109e7786fbe1284bfb2c6156d6", "sha256": "737d164d9118aa5e704f25a21409ee772ff52b6c797e45c72e19179db0f11b2b"}, "downloads": -1, "filename": "pycarol-2.13.5.tar.gz", "has_sig": false, "md5_digest": "25d573109e7786fbe1284bfb2c6156d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90633, "upload_time": "2019-05-28T20:19:38", "upload_time_iso_8601": "2019-05-28T20:19:38.693697Z", "url": "https://files.pythonhosted.org/packages/7e/b5/dfe8d66743539a11384202db39bb52d010a33105550aab86b93c14fe6e91/pycarol-2.13.5.tar.gz", "yanked": false}], "2.13.6": [{"comment_text": "", "digests": {"md5": "f58a337d458a2f5667e82d6f94288270", "sha256": "f061b54e6cc9e3a41776099112d3952846af4563545e9f670f64a57dc2628589"}, "downloads": -1, "filename": "pycarol-2.13.6.tar.gz", "has_sig": false, "md5_digest": "f58a337d458a2f5667e82d6f94288270", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90618, "upload_time": "2019-05-28T21:40:12", "upload_time_iso_8601": "2019-05-28T21:40:12.653464Z", "url": "https://files.pythonhosted.org/packages/04/12/5fea31f80a5116a70ebf5caa3a073b54edf7993e9b96604d304e1269a12d/pycarol-2.13.6.tar.gz", "yanked": false}], "2.13.7": [{"comment_text": "", "digests": {"md5": "9ca3e3b5bd9dbfe13b97c60f5efb168d", "sha256": "965c2ba1899c48236270b27650a54e14e4a630c0e897448d78d44b5166c94e66"}, "downloads": -1, "filename": "pycarol-2.13.7.tar.gz", "has_sig": false, "md5_digest": "9ca3e3b5bd9dbfe13b97c60f5efb168d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90588, "upload_time": "2019-05-29T17:55:53", "upload_time_iso_8601": "2019-05-29T17:55:53.689770Z", "url": "https://files.pythonhosted.org/packages/ea/18/86b6f4637e2cebefb0411d21fb28a475ff128f7a060f127f165b2eadd135/pycarol-2.13.7.tar.gz", "yanked": false}], "2.14.1": [{"comment_text": "", "digests": {"md5": "4f7263890f74ec1ff492adbf84e00960", "sha256": "6af7b59c68c4b4bf3c2d2e730473c4e16b462315768c4282a3ba69db1081c957"}, "downloads": -1, "filename": "pycarol-2.14.1.tar.gz", "has_sig": false, "md5_digest": "4f7263890f74ec1ff492adbf84e00960", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91106, "upload_time": "2019-06-01T18:18:10", "upload_time_iso_8601": "2019-06-01T18:18:10.150306Z", "url": "https://files.pythonhosted.org/packages/39/4b/9f0b1f5a48130e76008b7a98bb88d1c203e3177f230fffb44134acb3a98a/pycarol-2.14.1.tar.gz", "yanked": false}], "2.14.2": [{"comment_text": "", "digests": {"md5": "79e199437778cbfd696a5e1f569173d9", "sha256": "b7868d858bd1ca14653ff02e159a0a9b2c4accdffd8f8ff69d33034b8d5f2fa2"}, "downloads": -1, "filename": "pycarol-2.14.2.tar.gz", "has_sig": false, "md5_digest": "79e199437778cbfd696a5e1f569173d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91154, "upload_time": "2019-06-03T19:18:04", "upload_time_iso_8601": "2019-06-03T19:18:04.853844Z", "url": "https://files.pythonhosted.org/packages/c9/95/dad57dda22814b72ff8efe4087442f536c793516e3a08ec9a24915cbe611/pycarol-2.14.2.tar.gz", "yanked": false}], "2.14.3": [{"comment_text": "", "digests": {"md5": "ffef00257c3dcf0fa4fd0e4fdbb81948", "sha256": "12b825be12fe60629ff44c9556c315b017273e5ac3601ad6af82d79e266a8074"}, "downloads": -1, "filename": "pycarol-2.14.3.tar.gz", "has_sig": false, "md5_digest": "ffef00257c3dcf0fa4fd0e4fdbb81948", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91217, "upload_time": "2019-06-05T18:36:37", "upload_time_iso_8601": "2019-06-05T18:36:37.102334Z", "url": "https://files.pythonhosted.org/packages/b9/49/257746c0cb7c1711779c7d9060be77eb95976885ad7060539d8c515f9f89/pycarol-2.14.3.tar.gz", "yanked": false}], "2.15.1": [{"comment_text": "", "digests": {"md5": "92ef2fcd8cfbeade1806b756c0e66767", "sha256": "cc895f0c6127d69ce20ac585d8dc789a28473d3ddb3176aa89bcc7f8558287b0"}, "downloads": -1, "filename": "pycarol-2.15.1.tar.gz", "has_sig": false, "md5_digest": "92ef2fcd8cfbeade1806b756c0e66767", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81572, "upload_time": "2019-06-18T19:01:51", "upload_time_iso_8601": "2019-06-18T19:01:51.402597Z", "url": "https://files.pythonhosted.org/packages/0d/14/e643a54599654b64211a2d93be706461b085053afbd9dedb77a4712b1071/pycarol-2.15.1.tar.gz", "yanked": false}], "2.15.2": [{"comment_text": "", "digests": {"md5": "86defdcfd0d94472f397eefeef998956", "sha256": "c896e8dce5572eb5f85c9c8dd40f2f5225f82922dd701ec744113be2978ebc83"}, "downloads": -1, "filename": "pycarol-2.15.2.tar.gz", "has_sig": false, "md5_digest": "86defdcfd0d94472f397eefeef998956", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81603, "upload_time": "2019-06-18T22:58:15", "upload_time_iso_8601": "2019-06-18T22:58:15.577740Z", "url": "https://files.pythonhosted.org/packages/72/0e/32a7bd16271a7eb6a57e2b6e52221e4756bb74d108515e0d3644850051bd/pycarol-2.15.2.tar.gz", "yanked": false}], "2.15.3": [{"comment_text": "", "digests": {"md5": "fbbffef2a5eb761765978b6a10f2964b", "sha256": "ac0c27d6c86a786c83d22634c77fc7591a38a3448af3dc98b244278ced3e77c7"}, "downloads": -1, "filename": "pycarol-2.15.3.tar.gz", "has_sig": false, "md5_digest": "fbbffef2a5eb761765978b6a10f2964b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81582, "upload_time": "2019-06-28T19:17:43", "upload_time_iso_8601": "2019-06-28T19:17:43.908085Z", "url": "https://files.pythonhosted.org/packages/97/d1/f230a2e0e5ab2da79821eefdb73674f40cc64135731ce4314b5d8b31c571/pycarol-2.15.3.tar.gz", "yanked": false}], "2.16.1": [{"comment_text": "", "digests": {"md5": "66ffea3687f42c86ab2e9efc27ddfc88", "sha256": "a73c3bbeb2aaaf1d9f546476cd011c2bc3d41229e2265cd7895d157dc8e0034f"}, "downloads": -1, "filename": "pycarol-2.16.1.tar.gz", "has_sig": false, "md5_digest": "66ffea3687f42c86ab2e9efc27ddfc88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83037, "upload_time": "2019-07-01T13:48:59", "upload_time_iso_8601": "2019-07-01T13:48:59.354187Z", "url": "https://files.pythonhosted.org/packages/dd/05/a1b8018183199e61f1f0558c6d8df40d72bb93681b3ba7d37163d3f5d448/pycarol-2.16.1.tar.gz", "yanked": false}], "2.16.2": [{"comment_text": "", "digests": {"md5": "cd0a2ae550c8e02df592654dabc2aa6c", "sha256": "4ee5942b4e1d9264fde7e89c6bdcaa6253dda197fa24000ca07c12778c6ecbc1"}, "downloads": -1, "filename": "pycarol-2.16.2.tar.gz", "has_sig": false, "md5_digest": "cd0a2ae550c8e02df592654dabc2aa6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83022, "upload_time": "2019-07-02T20:56:35", "upload_time_iso_8601": "2019-07-02T20:56:35.308287Z", "url": "https://files.pythonhosted.org/packages/62/e5/445baa07e3e334bca6d3f860eed897856c46a3b5844e7fc9d89921f73bc9/pycarol-2.16.2.tar.gz", "yanked": false}], "2.16.3": [{"comment_text": "", "digests": {"md5": "6f9f9dc2e78992569dfcf0e98137270c", "sha256": "63b9d42c822f99e6a5e549a59979bfb42cfcf8ca704b9eb67bf5f05ccbcead93"}, "downloads": -1, "filename": "pycarol-2.16.3.tar.gz", "has_sig": false, "md5_digest": "6f9f9dc2e78992569dfcf0e98137270c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83022, "upload_time": "2019-07-03T01:56:48", "upload_time_iso_8601": "2019-07-03T01:56:48.543809Z", "url": "https://files.pythonhosted.org/packages/ed/10/aca039c6c881b6a64c598e4f246879c479e0b035581b12335fb27abbe2a5/pycarol-2.16.3.tar.gz", "yanked": false}], "2.16.4": [{"comment_text": "", "digests": {"md5": "e50f10588629a904b9c11f2612feb06a", "sha256": "6bbe56d2f9fd3769b79d47f8308c58d3d5c602bffdb9dd7b1ca9cd36f91618ef"}, "downloads": -1, "filename": "pycarol-2.16.4.tar.gz", "has_sig": false, "md5_digest": "e50f10588629a904b9c11f2612feb06a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83050, "upload_time": "2019-07-03T17:46:49", "upload_time_iso_8601": "2019-07-03T17:46:49.650268Z", "url": "https://files.pythonhosted.org/packages/e1/9c/534d42984003b11d7b8f6b19f51a4317d75043d6ea62a97bfe49bba4b5e1/pycarol-2.16.4.tar.gz", "yanked": false}], "2.17.0": [{"comment_text": "", "digests": {"md5": "4d6b5ccfc48f4734a26e82a14164c150", "sha256": "27f897f4257932dba87bbb8ab938ef2d071a8ebc4efd4b4ef2d8a9c612d5e9e0"}, "downloads": -1, "filename": "pycarol-2.17.0.tar.gz", "has_sig": false, "md5_digest": "4d6b5ccfc48f4734a26e82a14164c150", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88605, "upload_time": "2019-07-15T20:38:19", "upload_time_iso_8601": "2019-07-15T20:38:19.019512Z", "url": "https://files.pythonhosted.org/packages/a4/61/1b3fff29fcd453e8c81adbc446ab9e93538546f6c570583033729860ba11/pycarol-2.17.0.tar.gz", "yanked": false}], "2.18.0": [{"comment_text": "", "digests": {"md5": "eaae5029af1bd85820482ddc555ea5c7", "sha256": "d532ea6d5c6cad420f8571ad37ff6011065aa7a301b6e535b4f070371848b42e"}, "downloads": -1, "filename": "pycarol-2.18.0.tar.gz", "has_sig": false, "md5_digest": "eaae5029af1bd85820482ddc555ea5c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89069, "upload_time": "2019-07-30T11:52:58", "upload_time_iso_8601": "2019-07-30T11:52:58.470590Z", "url": "https://files.pythonhosted.org/packages/22/56/43ec52c41f75313ef6c9a3168e2b4aafdada21f7110b1efd13c6d4ff3acb/pycarol-2.18.0.tar.gz", "yanked": false}], "2.19.0": [{"comment_text": "", "digests": {"md5": "a6f5d91fd898f0ff33a200f1f49d131b", "sha256": "c05551e26fd22fd84b6ac350a4573bc706ccfc7ee317ebeeed86c8e9b932e955"}, "downloads": -1, "filename": "pycarol-2.19.0.tar.gz", "has_sig": false, "md5_digest": "a6f5d91fd898f0ff33a200f1f49d131b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88920, "upload_time": "2019-08-07T14:42:17", "upload_time_iso_8601": "2019-08-07T14:42:17.442519Z", "url": "https://files.pythonhosted.org/packages/b2/13/fc25a3a3b9f344534f5c6463905cdd2b6ee487e5076388d8bbbfd1f80b6c/pycarol-2.19.0.tar.gz", "yanked": false}], "2.19.1": [{"comment_text": "", "digests": {"md5": "d8278f57e4fbfb82ea7a426013d98179", "sha256": "608ddb0f3a4be8c6637a19fe0ca1fbe86b5f8e9874724fd3dc01baf8b6d9192e"}, "downloads": -1, "filename": "pycarol-2.19.1.tar.gz", "has_sig": false, "md5_digest": "d8278f57e4fbfb82ea7a426013d98179", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89802, "upload_time": "2019-08-12T12:40:21", "upload_time_iso_8601": "2019-08-12T12:40:21.954301Z", "url": "https://files.pythonhosted.org/packages/3b/9f/5754cd0bc9648eec83295e5ade328c26ff6a31524440ba2bdb7fc4a97f50/pycarol-2.19.1.tar.gz", "yanked": false}], "2.19.2": [{"comment_text": "", "digests": {"md5": "964ac04d4d14525951d3b4fa998e8f2c", "sha256": "28804c52e37b3e17815f0fee638496f21e08d31ca7a3104bba3b00f553f3cc55"}, "downloads": -1, "filename": "pycarol-2.19.2.tar.gz", "has_sig": false, "md5_digest": "964ac04d4d14525951d3b4fa998e8f2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89743, "upload_time": "2019-08-14T16:43:34", "upload_time_iso_8601": "2019-08-14T16:43:34.573480Z", "url": "https://files.pythonhosted.org/packages/71/92/53039f5054be8dacd8d8f9000336e173ae3e6b34044fe38b175f5cb85ef6/pycarol-2.19.2.tar.gz", "yanked": false}], "2.19.3": [{"comment_text": "", "digests": {"md5": "5c34c9b560212989478bf5cd4960c427", "sha256": "0c6195eb93e725e176ade3f7f3f94c1cddfe1a173f93e02000465b83d8f883ff"}, "downloads": -1, "filename": "pycarol-2.19.3.tar.gz", "has_sig": false, "md5_digest": "5c34c9b560212989478bf5cd4960c427", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89826, "upload_time": "2019-08-21T19:43:41", "upload_time_iso_8601": "2019-08-21T19:43:41.958731Z", "url": "https://files.pythonhosted.org/packages/7f/e3/7c87435898a1ca121e240c425fca98adc38e65ef585d61a7a976a8b2e582/pycarol-2.19.3.tar.gz", "yanked": false}], "2.19.4": [{"comment_text": "", "digests": {"md5": "bf5e280394feaf5c4ff03f6fec03c02f", "sha256": "021ca91d0c14cb3fdb42261e45f0b44a76e4fab87d4e657f7aeaf8436690c956"}, "downloads": -1, "filename": "pycarol-2.19.4.tar.gz", "has_sig": false, "md5_digest": "bf5e280394feaf5c4ff03f6fec03c02f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89757, "upload_time": "2019-08-24T20:24:29", "upload_time_iso_8601": "2019-08-24T20:24:29.653626Z", "url": "https://files.pythonhosted.org/packages/89/32/40e04117e3e566f1dffafc6e52e0e2449da3da332965cf15cf6a5e8e7294/pycarol-2.19.4.tar.gz", "yanked": false}], "2.20.0": [{"comment_text": "", "digests": {"md5": "f98db5018dd141b6c55b37acac12b289", "sha256": "b1ee1a4fa3c4a25939a0d95171a69088856cd016bdf0ec95e729dac8fd6a1bc7"}, "downloads": -1, "filename": "pycarol-2.20.0.tar.gz", "has_sig": false, "md5_digest": "f98db5018dd141b6c55b37acac12b289", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91135, "upload_time": "2019-08-26T20:22:40", "upload_time_iso_8601": "2019-08-26T20:22:40.668920Z", "url": "https://files.pythonhosted.org/packages/3c/1d/4e7d18f46488a6dd46fbb3fd50d385221b7f414d067123e3429c52b6e1ea/pycarol-2.20.0.tar.gz", "yanked": false}], "2.20.1": [{"comment_text": "", "digests": {"md5": "b98fffbce76de872c826019515cad383", "sha256": "6ce2180cb059c2dbbbc71064aee74ece53ccb7e2b5764049a5829aea5924fdf0"}, "downloads": -1, "filename": "pycarol-2.20.1.tar.gz", "has_sig": false, "md5_digest": "b98fffbce76de872c826019515cad383", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91148, "upload_time": "2019-08-27T14:27:20", "upload_time_iso_8601": "2019-08-27T14:27:20.114801Z", "url": "https://files.pythonhosted.org/packages/c2/0b/679be41176610cce7a3a71eb19f8230d61316a0c6a3e9ff3fe3671b23bc0/pycarol-2.20.1.tar.gz", "yanked": false}], "2.20.2": [{"comment_text": "", "digests": {"md5": "73c1f4bf71a0fc30ae1665d53d96e9da", "sha256": "b396097b57f187e41da0beeef003c2a5770cb1e7b5764ab1cbe4c2add5e6b83a"}, "downloads": -1, "filename": "pycarol-2.20.2.tar.gz", "has_sig": false, "md5_digest": "73c1f4bf71a0fc30ae1665d53d96e9da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91137, "upload_time": "2019-08-30T15:12:10", "upload_time_iso_8601": "2019-08-30T15:12:10.007980Z", "url": "https://files.pythonhosted.org/packages/f6/af/d9d2a7c63f01c40499113f6f1bdc7ac20d5dea531a96c8ff32533a4fb377/pycarol-2.20.2.tar.gz", "yanked": false}], "2.21.0": [{"comment_text": "", "digests": {"md5": "8d22af49174aff5d8a660fefa2cff3c4", "sha256": "c53c7725d6c0556ff7e2576a7d558a1e0caf6a3dbbe246a9677432399735aedb"}, "downloads": -1, "filename": "pycarol-2.21.0.tar.gz", "has_sig": false, "md5_digest": "8d22af49174aff5d8a660fefa2cff3c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92654, "upload_time": "2019-09-10T23:26:40", "upload_time_iso_8601": "2019-09-10T23:26:40.558784Z", "url": "https://files.pythonhosted.org/packages/8c/b4/e3b8534c4e79ea5c6de1b9dfeb0c683335b5b99c5c28b1ac94a86306a80c/pycarol-2.21.0.tar.gz", "yanked": false}], "2.22.0": [{"comment_text": "", "digests": {"md5": "0482a240d14f62123d4f268cc77467d6", "sha256": "a25de55620533a1a5a1dc5980b66252eff504af95c000299a94868e691257eda"}, "downloads": -1, "filename": "pycarol-2.22.0.tar.gz", "has_sig": false, "md5_digest": "0482a240d14f62123d4f268cc77467d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91576, "upload_time": "2019-09-23T15:18:09", "upload_time_iso_8601": "2019-09-23T15:18:09.932019Z", "url": "https://files.pythonhosted.org/packages/f1/f9/1739a8ffb7445f4712786f6bc17dd3020adb32d77dfd8b0dec7a05ebbb34/pycarol-2.22.0.tar.gz", "yanked": false}], "2.23.0": [{"comment_text": "", "digests": {"md5": "4f7fba05790b4555eab3d61df1b47c0f", "sha256": "bf7545d3190516b872fff990010ba8f33ce9420c99aa13e9ebd535562e33d001"}, "downloads": -1, "filename": "pycarol-2.23.0.tar.gz", "has_sig": false, "md5_digest": "4f7fba05790b4555eab3d61df1b47c0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94013, "upload_time": "2019-10-07T16:49:21", "upload_time_iso_8601": "2019-10-07T16:49:21.214850Z", "url": "https://files.pythonhosted.org/packages/b3/11/88b29b0abdd70c0b573fadaf91cb6b2aed085a62d0a3fe5d27e10dd32978/pycarol-2.23.0.tar.gz", "yanked": false}], "2.24.0": [{"comment_text": "", "digests": {"md5": "554f2dd53d98a9dc82e795746fb61bc1", "sha256": "e933272d41d6dec87a445412e0b53b8cb12308f7525901bfaee79eb7dfd5484c"}, "downloads": -1, "filename": "pycarol-2.24.0.tar.gz", "has_sig": false, "md5_digest": "554f2dd53d98a9dc82e795746fb61bc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92604, "upload_time": "2019-11-06T12:50:51", "upload_time_iso_8601": "2019-11-06T12:50:51.720544Z", "url": "https://files.pythonhosted.org/packages/a9/bc/ec52f1a44d0e3ed89680ff118773db170d8e2d561d78d7d26cffbb4855b7/pycarol-2.24.0.tar.gz", "yanked": false}], "2.24.1": [{"comment_text": "", "digests": {"md5": "4d015549a20081fc9f29be85ffb42ba6", "sha256": "0e57c37760bc4aabf97e844330004128c47b8f0e428d8b9efa1d739c51d96e5f"}, "downloads": -1, "filename": "pycarol-2.24.1.tar.gz", "has_sig": false, "md5_digest": "4d015549a20081fc9f29be85ffb42ba6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92558, "upload_time": "2019-11-14T21:36:59", "upload_time_iso_8601": "2019-11-14T21:36:59.424710Z", "url": "https://files.pythonhosted.org/packages/af/52/ddcf4c0e797f2703e40225cfecb264be7279968cbaa7316660e0ce12d870/pycarol-2.24.1.tar.gz", "yanked": false}], "2.24.2": [{"comment_text": "", "digests": {"md5": "208c36e21ce9bd5a3188972d206e4f0d", "sha256": "8b2ee042b1fdb2197c6a887d815a4c25311c32747c79d7369a10dc8dd99b3eef"}, "downloads": -1, "filename": "pycarol-2.24.2.tar.gz", "has_sig": false, "md5_digest": "208c36e21ce9bd5a3188972d206e4f0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92593, "upload_time": "2019-11-20T10:24:39", "upload_time_iso_8601": "2019-11-20T10:24:39.990497Z", "url": "https://files.pythonhosted.org/packages/67/b0/51089b542bc679c3708a0df5643b9d0997e85d6455a3dd92e1384f28c2ae/pycarol-2.24.2.tar.gz", "yanked": false}], "2.25.0": [{"comment_text": "", "digests": {"md5": "2aafcec09d4ff2854cedf574f937485c", "sha256": "eb7f3d14722048d67fdb075116877bd50a1adc23cf32428b255153c96f174433"}, "downloads": -1, "filename": "pycarol-2.25.0.tar.gz", "has_sig": false, "md5_digest": "2aafcec09d4ff2854cedf574f937485c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93378, "upload_time": "2019-11-27T21:17:48", "upload_time_iso_8601": "2019-11-27T21:17:48.604223Z", "url": "https://files.pythonhosted.org/packages/5f/9f/ada4acf9d25b78de689c5e9bdcb23289c5cde8a07d53c5556cbc52b4af02/pycarol-2.25.0.tar.gz", "yanked": false}], "2.26.0": [{"comment_text": "", "digests": {"md5": "dc9f0a397638dbe40ad1f5034b561fa7", "sha256": "0a1831b21e3947099f701320c028a4b8a358a578a04f6febfca153b7a8bb2cdd"}, "downloads": -1, "filename": "pycarol-2.26.0.tar.gz", "has_sig": false, "md5_digest": "dc9f0a397638dbe40ad1f5034b561fa7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93729, "upload_time": "2019-12-11T23:12:33", "upload_time_iso_8601": "2019-12-11T23:12:33.035794Z", "url": "https://files.pythonhosted.org/packages/8e/5a/d0caf4d18d72f9c3227c30066a55db380ca32a681ed87a55b48df254182c/pycarol-2.26.0.tar.gz", "yanked": false}], "2.27.0": [{"comment_text": "", "digests": {"md5": "2477cc593e986ab87ea42af9ef0ed972", "sha256": "a05203ac1e5fbf81df2bf69110f4c50556b44e39571278795f76cb02060dcaa1"}, "downloads": -1, "filename": "pycarol-2.27.0.tar.gz", "has_sig": false, "md5_digest": "2477cc593e986ab87ea42af9ef0ed972", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93855, "upload_time": "2020-01-07T11:49:57", "upload_time_iso_8601": "2020-01-07T11:49:57.975744Z", "url": "https://files.pythonhosted.org/packages/4c/9f/8c230304255a72e38633188fb07727e8519480ec298a719fa98ea18c2441/pycarol-2.27.0.tar.gz", "yanked": false}], "2.27.1": [{"comment_text": "", "digests": {"md5": "d15ce3996662e93dc956bf2735abc465", "sha256": "c274b1c896a2a0fb32e8d364b78864398a16044f0d09c57f9bb4e82fc7d9d06d"}, "downloads": -1, "filename": "pycarol-2.27.1.tar.gz", "has_sig": false, "md5_digest": "d15ce3996662e93dc956bf2735abc465", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93855, "upload_time": "2020-01-13T14:56:03", "upload_time_iso_8601": "2020-01-13T14:56:03.587698Z", "url": "https://files.pythonhosted.org/packages/8d/39/68208be422fbd2ea1a24cc079514c2039c51bc31b8a2783c177d1e18272c/pycarol-2.27.1.tar.gz", "yanked": false}], "2.27.2": [{"comment_text": "", "digests": {"md5": "cea1da41affddc6563e9133c7d86d672", "sha256": "c539a58a75c50a91a21926f261b621d2717e96ce1bc516428accfca3f5ce84e6"}, "downloads": -1, "filename": "pycarol-2.27.2.tar.gz", "has_sig": false, "md5_digest": "cea1da41affddc6563e9133c7d86d672", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93812, "upload_time": "2020-01-15T20:53:15", "upload_time_iso_8601": "2020-01-15T20:53:15.910826Z", "url": "https://files.pythonhosted.org/packages/53/60/1c55fdc6dbce9ccf27e0c6a169be01eeebcc67e8eb5b11d9ba3ec161bb92/pycarol-2.27.2.tar.gz", "yanked": false}], "2.28.0": [{"comment_text": "", "digests": {"md5": "2193a7bb1284026b6c049fe9325349da", "sha256": "efb0de8b542d7a81f86fa359af7ebc731fd9ebeef28db6d4fd4a8339640aca1a"}, "downloads": -1, "filename": "pycarol-2.28.0.tar.gz", "has_sig": false, "md5_digest": "2193a7bb1284026b6c049fe9325349da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93831, "upload_time": "2020-01-15T23:22:25", "upload_time_iso_8601": "2020-01-15T23:22:25.492543Z", "url": "https://files.pythonhosted.org/packages/c5/ec/11c01aa2489ab4138fb317aa36d7f568b13ad9acae78d4b0a013a71439c4/pycarol-2.28.0.tar.gz", "yanked": false}], "2.28.1": [{"comment_text": "", "digests": {"md5": "8f2bd4135f42f246fa65e9b65958194b", "sha256": "10c98d529bdf7c3e299734f1be75168680f7e3e179164d7f16e8d18f6b965b25"}, "downloads": -1, "filename": "pycarol-2.28.1.tar.gz", "has_sig": false, "md5_digest": "8f2bd4135f42f246fa65e9b65958194b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94403, "upload_time": "2020-01-23T15:55:30", "upload_time_iso_8601": "2020-01-23T15:55:30.578778Z", "url": "https://files.pythonhosted.org/packages/fc/56/45a3cd64cf5fae43bc959a5d5484733c547ed96bcf70031938cdd523b539/pycarol-2.28.1.tar.gz", "yanked": false}], "2.29.0": [{"comment_text": "", "digests": {"md5": "d5e019fb378b424931ce86174208a72c", "sha256": "7d0304a9827a35e3bb278745c90ab5a4f5b10006f9ed101672fd1c5eb798d836"}, "downloads": -1, "filename": "pycarol-2.29.0.tar.gz", "has_sig": false, "md5_digest": "d5e019fb378b424931ce86174208a72c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94694, "upload_time": "2020-02-03T13:37:14", "upload_time_iso_8601": "2020-02-03T13:37:14.083834Z", "url": "https://files.pythonhosted.org/packages/84/60/45a63bf54bfeac7cbaf0145ae8e1270230f0041d72cab625bc5ce4b6a640/pycarol-2.29.0.tar.gz", "yanked": false}], "2.29.1": [{"comment_text": "", "digests": {"md5": "bcae25ad663d661a32b92f9761ad8274", "sha256": "a976cbbe1eaac498e3dcf2aa3b45f071b452595dd202e1ee4993067a7defe9dc"}, "downloads": -1, "filename": "pycarol-2.29.1.tar.gz", "has_sig": false, "md5_digest": "bcae25ad663d661a32b92f9761ad8274", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96281, "upload_time": "2020-02-09T23:50:08", "upload_time_iso_8601": "2020-02-09T23:50:08.454947Z", "url": "https://files.pythonhosted.org/packages/71/35/41e7d426da2404d3c1b34221190a95efccdd9005cf01c7c89ba5a296dc91/pycarol-2.29.1.tar.gz", "yanked": false}], "2.29.2": [{"comment_text": "", "digests": {"md5": "c91b4f417a7f915e67d589db2fee4f3f", "sha256": "c4e7f177e3fd523bcf4c10668f62bb23789ae84b350d964c92546cd3894575f8"}, "downloads": -1, "filename": "pycarol-2.29.2.tar.gz", "has_sig": false, "md5_digest": "c91b4f417a7f915e67d589db2fee4f3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101288, "upload_time": "2020-02-12T12:20:15", "upload_time_iso_8601": "2020-02-12T12:20:15.076899Z", "url": "https://files.pythonhosted.org/packages/93/c0/3f46a2019c00ea6a59fe1260dc6edb57561822591e87845c504c5991c8dc/pycarol-2.29.2.tar.gz", "yanked": false}], "2.30.0": [{"comment_text": "", "digests": {"md5": "7223599b81248b4ea336bb6d534efe19", "sha256": "f2f47f476a0f55e92d3c67f5c4e92f8a54a8d3fc6346ae2d15ef6aba038ce127"}, "downloads": -1, "filename": "pycarol-2.30.0.tar.gz", "has_sig": false, "md5_digest": "7223599b81248b4ea336bb6d534efe19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100053, "upload_time": "2020-02-18T14:46:45", "upload_time_iso_8601": "2020-02-18T14:46:45.458934Z", "url": "https://files.pythonhosted.org/packages/f6/9b/6e120250aac5d6dd140539c9703c16a47bbca512e9aa4c9c4a53ac2e7553/pycarol-2.30.0.tar.gz", "yanked": false}], "2.31.1": [{"comment_text": "", "digests": {"md5": "e8c3e9b6010af2ea5c490ae00728ee3f", "sha256": "8a0ae01e52a5b1ea8c007fd0c4dde7d9b319045b89b293972c5c762b44c75718"}, "downloads": -1, "filename": "pycarol-2.31.1.tar.gz", "has_sig": false, "md5_digest": "e8c3e9b6010af2ea5c490ae00728ee3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110523, "upload_time": "2020-03-26T12:57:34", "upload_time_iso_8601": "2020-03-26T12:57:34.426368Z", "url": "https://files.pythonhosted.org/packages/55/99/c860448cd1c891149b832a94c8e80aa439c9c588283825135304165699c8/pycarol-2.31.1.tar.gz", "yanked": false}], "2.31.2": [{"comment_text": "", "digests": {"md5": "fdc6ec45504210193b32e58816f58bb6", "sha256": "8e401faa3689b754f6e632a0fc471aff4f5192bdd697350958aed373db575e46"}, "downloads": -1, "filename": "pycarol-2.31.2.tar.gz", "has_sig": false, "md5_digest": "fdc6ec45504210193b32e58816f58bb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101564, "upload_time": "2020-03-26T13:14:55", "upload_time_iso_8601": "2020-03-26T13:14:55.740204Z", "url": "https://files.pythonhosted.org/packages/b8/c4/0df4a380894877922b6af32a1a4e25a9efc8696ddf8c8ca6f5d88190ee88/pycarol-2.31.2.tar.gz", "yanked": false}], "2.32.0": [{"comment_text": "", "digests": {"md5": "a4fd99abce9b22641f84221b15c608b7", "sha256": "47947dc39394c5aee05732fbc137f273d99c81ff4fad3214c26f2ebdf53ec454"}, "downloads": -1, "filename": "pycarol-2.32.0.tar.gz", "has_sig": false, "md5_digest": "a4fd99abce9b22641f84221b15c608b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101706, "upload_time": "2020-03-31T12:54:02", "upload_time_iso_8601": "2020-03-31T12:54:02.275022Z", "url": "https://files.pythonhosted.org/packages/70/d4/5f8b9fcbdc2c345683f138405f2f783dea6ed8f4acd2bbb506b0c76fe677/pycarol-2.32.0.tar.gz", "yanked": false}], "2.32.1": [{"comment_text": "", "digests": {"md5": "82b6ec15279931fce278692dc02d5398", "sha256": "1d5db34cc96d243397d0898bfb9fe4f41a9ba9f826f3a34bcc6937fd70d33491"}, "downloads": -1, "filename": "pycarol-2.32.1.tar.gz", "has_sig": false, "md5_digest": "82b6ec15279931fce278692dc02d5398", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101889, "upload_time": "2020-04-02T14:16:31", "upload_time_iso_8601": "2020-04-02T14:16:31.537288Z", "url": "https://files.pythonhosted.org/packages/f8/1f/a96f860a08c1ecaed8fa6bc7d38ba6fac9d3c8065208b947595a789be279/pycarol-2.32.1.tar.gz", "yanked": false}], "2.33.0": [{"comment_text": "", "digests": {"md5": "5c1a4d286b5fc97090367167954293bb", "sha256": "5c26aa09b59e5d4cebd7ceb38546f377adb6e5d24546ea7b2f45946ba5f25ee2"}, "downloads": -1, "filename": "pycarol-2.33.0.tar.gz", "has_sig": false, "md5_digest": "5c1a4d286b5fc97090367167954293bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102073, "upload_time": "2020-04-20T21:42:58", "upload_time_iso_8601": "2020-04-20T21:42:58.451331Z", "url": "https://files.pythonhosted.org/packages/53/e1/ecb4a598a7d5ab9d94f7bd5ada0336d559fad43fae901a91f9ed22bbc59e/pycarol-2.33.0.tar.gz", "yanked": false}], "2.33.1": [{"comment_text": "", "digests": {"md5": "53f46d4dad950c34cad4555701f31d8b", "sha256": "9f82902b0a408d73747e11e6f215dc0585ad0da41935637d32d809f228eff3d6"}, "downloads": -1, "filename": "pycarol-2.33.1.tar.gz", "has_sig": false, "md5_digest": "53f46d4dad950c34cad4555701f31d8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102262, "upload_time": "2020-04-27T12:35:59", "upload_time_iso_8601": "2020-04-27T12:35:59.228298Z", "url": "https://files.pythonhosted.org/packages/77/e2/01184f7e076d528a248f5560bc087ef0c493da039b4fd2adf0d46b7034a8/pycarol-2.33.1.tar.gz", "yanked": false}], "2.33.2": [{"comment_text": "", "digests": {"md5": "75e6257ebb82776684eabb42c7bfdc83", "sha256": "1f15a56cb0b8ad2cebf8750a83aa59b68c87d429631cb14636418322d7e840ce"}, "downloads": -1, "filename": "pycarol-2.33.2.tar.gz", "has_sig": false, "md5_digest": "75e6257ebb82776684eabb42c7bfdc83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104515, "upload_time": "2020-05-06T20:40:05", "upload_time_iso_8601": "2020-05-06T20:40:05.766934Z", "url": "https://files.pythonhosted.org/packages/3d/23/e9a2ff696a1e5e9416f82d75ee7f4efcf735c453e12e1bf373e90889b8b8/pycarol-2.33.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "75e6257ebb82776684eabb42c7bfdc83", "sha256": "1f15a56cb0b8ad2cebf8750a83aa59b68c87d429631cb14636418322d7e840ce"}, "downloads": -1, "filename": "pycarol-2.33.2.tar.gz", "has_sig": false, "md5_digest": "75e6257ebb82776684eabb42c7bfdc83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104515, "upload_time": "2020-05-06T20:40:05", "upload_time_iso_8601": "2020-05-06T20:40:05.766934Z", "url": "https://files.pythonhosted.org/packages/3d/23/e9a2ff696a1e5e9416f82d75ee7f4efcf735c453e12e1bf373e90889b8b8/pycarol-2.33.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:45 2020"}