{"info": {"author": "WinKaR", "author_email": "winkar@163.com", "bugtrack_url": null, "classifiers": [], "description": "Install\n=======\n\n.. code:: shell\n\n    pip install winkar_utils\n\nUtils for python\n================\n\nchaining\n~~~~~~~~\n\nAdd chaining enumerate supports for iterables\n\n.. code:: python\n\n    import utils\n    range(10).map(lambda x: x**2) \\\n          .filter(lambda x: x>10) \\\n          .take(5) \\\n          .reduce(lambda x,y: x+y)\n\nEncodings\n~~~~~~~~~\n\nAdd additional encodings for str\n\n.. code:: python\n\n    import utils\n    print \"asd\".encode(\"bin\")   # => 011000010111001101100100\n    print \"011000010111001101100100\".decode(\"bin\")  # => asd\n\nConcurrent\n~~~~~~~~~~\n\nUtils for coding concurrently\n\n.. code:: python\n\n\n    from utils.concurrent import multiThread\n\n    @multiThread(10)  # the param indicate how many threads to start\n    def ox(x):\n        return x\n\n    ox(range(10))     # this will run concurrently\n                      # param should be a collection of orgin param type\n\nLog\n~~~\n\nUtils for log\n\n.. code:: python\n\n    import logging\n    from utils.log import stream_handler, formatter, logger\n\n    logger.warn(\"test\")   # the logger has been set level to warn\n                          # use formatter as its default output format\n                          # and will only print to stdout\n    logger.setLevel(logging.INFO)\n                          # change log level\n    logger.name = \"test\"  # change logger name\n\nFactor\n~~~~~~\n\n.. code:: python\n\n    from utils.factor import factor\n    factor(130)         # => [2,5,13]\n    factor(131)         # => [1,131]\n\nWhich will also add a factor command like linux to PATH\n\nUseful third-party libraries\n============================\n\nPwntools\n~~~~~~~~\n\nA very useful integrated pwn library.\n\n`Pwntools github repo <https://github.com/Gallopsled/pwntools>`__\n\nCan just install through pip.\n\n.. code:: python\n\n    from pwn import *\n    context(arch = 'i386', os = 'linux')\n\n    r = remote('exploitme.example.com', 31337)\n    # EXPLOIT CODE GOES HERE\n    r.send(asm(shellcraft.sh()))\n    r.interactive()\n\nlibformatstr\n~~~~~~~~~~~~\n\nLibrary specially for format string exploit.\n\nInstall with pip.\n\n.. code:: python\n\n    import sys\n    from libformatstr import FormatStr\n\n    addr = 0x08049580\n    system_addr = 0x080489a3\n\n    p = FormatStr()\n    p[addr] = system_addr\n\n    # buf is 14th argument, 4 bytes are already printed\n    sys.stdout.write( p.payload(14, start_len=4) )\n\nfnmatch\n~~~~~~~\n\nLibrary that supports bash-style wildcard.\n\nInstall with pip\n\n.. code:: python\n\n    from fnmatch import fnmatch\n    fnmatch(\"target\", \"tar*\")     # => true\n    fnmatch(\"target\", \"TARG.T\")   # => false", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "winkar_utils", "package_url": "https://pypi.org/project/winkar_utils/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/winkar_utils/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/winkar_utils/0.0.7/", "requires_dist": null, "requires_python": null, "summary": "Util functions for python", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"install\">\n<h2>Install</h2>\n<pre>pip install winkar_utils\n</pre>\n</div>\n<div id=\"utils-for-python\">\n<h2>Utils for python</h2>\n<div id=\"chaining\">\n<h3>chaining</h3>\n<p>Add chaining enumerate supports for iterables</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">utils</span>\n<span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">)</span> \\\n      <span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">&gt;</span><span class=\"mi\">10</span><span class=\"p\">)</span> \\\n      <span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span> \\\n      <span class=\"o\">.</span><span class=\"n\">reduce</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"n\">y</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"encodings\">\n<h3>Encodings</h3>\n<p>Add additional encodings for str</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">utils</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"asd\"</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s2\">\"bin\"</span><span class=\"p\">)</span>   <span class=\"c1\"># =&gt; 011000010111001101100100</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"011000010111001101100100\"</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">\"bin\"</span><span class=\"p\">)</span>  <span class=\"c1\"># =&gt; asd</span>\n</pre>\n</div>\n<div id=\"concurrent\">\n<h3>Concurrent</h3>\n<p>Utils for coding concurrently</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">utils.concurrent</span> <span class=\"kn\">import</span> <span class=\"n\">multiThread</span>\n\n<span class=\"nd\">@multiThread</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># the param indicate how many threads to start</span>\n<span class=\"k\">def</span> <span class=\"nf\">ox</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span>\n\n<span class=\"n\">ox</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">))</span>     <span class=\"c1\"># this will run concurrently</span>\n                  <span class=\"c1\"># param should be a collection of orgin param type</span>\n</pre>\n</div>\n<div id=\"log\">\n<h3>Log</h3>\n<p>Utils for log</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">utils.log</span> <span class=\"kn\">import</span> <span class=\"n\">stream_handler</span><span class=\"p\">,</span> <span class=\"n\">formatter</span><span class=\"p\">,</span> <span class=\"n\">logger</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">)</span>   <span class=\"c1\"># the logger has been set level to warn</span>\n                      <span class=\"c1\"># use formatter as its default output format</span>\n                      <span class=\"c1\"># and will only print to stdout</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span>\n                      <span class=\"c1\"># change log level</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"test\"</span>  <span class=\"c1\"># change logger name</span>\n</pre>\n</div>\n<div id=\"factor\">\n<h3>Factor</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">utils.factor</span> <span class=\"kn\">import</span> <span class=\"n\">factor</span>\n<span class=\"n\">factor</span><span class=\"p\">(</span><span class=\"mi\">130</span><span class=\"p\">)</span>         <span class=\"c1\"># =&gt; [2,5,13]</span>\n<span class=\"n\">factor</span><span class=\"p\">(</span><span class=\"mi\">131</span><span class=\"p\">)</span>         <span class=\"c1\"># =&gt; [1,131]</span>\n</pre>\n<p>Which will also add a factor command like linux to PATH</p>\n</div>\n</div>\n<div id=\"useful-third-party-libraries\">\n<h2>Useful third-party libraries</h2>\n<div id=\"pwntools\">\n<h3>Pwntools</h3>\n<p>A very useful integrated pwn library.</p>\n<p><a href=\"https://github.com/Gallopsled/pwntools\" rel=\"nofollow\">Pwntools github repo</a></p>\n<p>Can just install through pip.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pwn</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">context</span><span class=\"p\">(</span><span class=\"n\">arch</span> <span class=\"o\">=</span> <span class=\"s1\">'i386'</span><span class=\"p\">,</span> <span class=\"n\">os</span> <span class=\"o\">=</span> <span class=\"s1\">'linux'</span><span class=\"p\">)</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">remote</span><span class=\"p\">(</span><span class=\"s1\">'exploitme.example.com'</span><span class=\"p\">,</span> <span class=\"mi\">31337</span><span class=\"p\">)</span>\n<span class=\"c1\"># EXPLOIT CODE GOES HERE</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">asm</span><span class=\"p\">(</span><span class=\"n\">shellcraft</span><span class=\"o\">.</span><span class=\"n\">sh</span><span class=\"p\">()))</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">interactive</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"libformatstr\">\n<h3>libformatstr</h3>\n<p>Library specially for format string exploit.</p>\n<p>Install with pip.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">from</span> <span class=\"nn\">libformatstr</span> <span class=\"kn\">import</span> <span class=\"n\">FormatStr</span>\n\n<span class=\"n\">addr</span> <span class=\"o\">=</span> <span class=\"mh\">0x08049580</span>\n<span class=\"n\">system_addr</span> <span class=\"o\">=</span> <span class=\"mh\">0x080489a3</span>\n\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">FormatStr</span><span class=\"p\">()</span>\n<span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">addr</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">system_addr</span>\n\n<span class=\"c1\"># buf is 14th argument, 4 bytes are already printed</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">payload</span><span class=\"p\">(</span><span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"n\">start_len</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"fnmatch\">\n<h3>fnmatch</h3>\n<p>Library that supports bash-style wildcard.</p>\n<p>Install with pip</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fnmatch</span> <span class=\"kn\">import</span> <span class=\"n\">fnmatch</span>\n<span class=\"n\">fnmatch</span><span class=\"p\">(</span><span class=\"s2\">\"target\"</span><span class=\"p\">,</span> <span class=\"s2\">\"tar*\"</span><span class=\"p\">)</span>     <span class=\"c1\"># =&gt; true</span>\n<span class=\"n\">fnmatch</span><span class=\"p\">(</span><span class=\"s2\">\"target\"</span><span class=\"p\">,</span> <span class=\"s2\">\"TARG.T\"</span><span class=\"p\">)</span>   <span class=\"c1\"># =&gt; false</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1864624, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "d697692f09eaf67cbff4048d433ff39d", "sha256": "53aa2ce5dafb51e93d68c0faad5cb7e77e52e9c8622380c23fe2175b60003a08"}, "downloads": -1, "filename": "winkar_utils-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d697692f09eaf67cbff4048d433ff39d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2281, "upload_time": "2015-11-24T15:54:12", "upload_time_iso_8601": "2015-11-24T15:54:12.789779Z", "url": "https://files.pythonhosted.org/packages/e6/3d/20cd46873457bb8194175f862383145e1ef4bcc30250c04f105de9d32492/winkar_utils-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ec911ac74ad1ec2c5f8353e447684d30", "sha256": "56aa15c4ec45b66a3f91083dd67fa6f4721eae209b34255e5a725bcbc0e6503e"}, "downloads": -1, "filename": "winkar_utils-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ec911ac74ad1ec2c5f8353e447684d30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2267, "upload_time": "2015-11-24T15:55:54", "upload_time_iso_8601": "2015-11-24T15:55:54.261083Z", "url": "https://files.pythonhosted.org/packages/43/f7/4cf11787e0a0897be94fbedefb5019e6578fddf855de9821dcce4e7d0fc9/winkar_utils-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "7afbdcac4686e0a0ffc44d0844e367bc", "sha256": "1a229dd9f60dfe5947a2d07333c55209493f11204e68eb7ceaa00fb88d481bd6"}, "downloads": -1, "filename": "winkar_utils-0.0.4.tar.gz", "has_sig": false, "md5_digest": "7afbdcac4686e0a0ffc44d0844e367bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2799, "upload_time": "2015-11-25T10:19:02", "upload_time_iso_8601": "2015-11-25T10:19:02.784453Z", "url": "https://files.pythonhosted.org/packages/19/b6/abbfec66ba71c74039985dc58304610c16759e69f304398ee97a32442fe6/winkar_utils-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "3ddf2a7e69a610b4b768d005a6b11b16", "sha256": "8b1e1a212a9dcc85cf516458377bb10ba7f5ab82e6924c0b87df42e8f41e9efc"}, "downloads": -1, "filename": "winkar_utils-0.0.5.tar.gz", "has_sig": false, "md5_digest": "3ddf2a7e69a610b4b768d005a6b11b16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3046, "upload_time": "2015-11-29T13:03:37", "upload_time_iso_8601": "2015-11-29T13:03:37.846053Z", "url": "https://files.pythonhosted.org/packages/39/39/cc8a69744de7ec50877aa1aea45e68bef6846e1ac2c62ff212a16f5f2632/winkar_utils-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "34de2bf6a298f737e77e0cfa6cc978df", "sha256": "09a0bb46d423e4fb8f7dbb9ffdf895ddc8343146717c72cf957b91a85838ec7c"}, "downloads": -1, "filename": "winkar_utils-0.0.6.tar.gz", "has_sig": false, "md5_digest": "34de2bf6a298f737e77e0cfa6cc978df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2963, "upload_time": "2015-12-03T12:36:00", "upload_time_iso_8601": "2015-12-03T12:36:00.030297Z", "url": "https://files.pythonhosted.org/packages/9d/3e/b7e0918e343b60d16315cfb63dbe9345bbe511f2bcf505ee7f2568138578/winkar_utils-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "b9663f506dc01589fe106b315bd72499", "sha256": "bf60149c30e618778a8729c34783f98d2cbe78923f8bddffb31a4fbc49e39daa"}, "downloads": -1, "filename": "winkar_utils-0.0.7.tar.gz", "has_sig": false, "md5_digest": "b9663f506dc01589fe106b315bd72499", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4121, "upload_time": "2015-12-16T08:00:23", "upload_time_iso_8601": "2015-12-16T08:00:23.410248Z", "url": "https://files.pythonhosted.org/packages/b9/c0/f89aca8ec629b512edbdb255cec10860e2a2510936a049f3e8ae311ca0cb/winkar_utils-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9663f506dc01589fe106b315bd72499", "sha256": "bf60149c30e618778a8729c34783f98d2cbe78923f8bddffb31a4fbc49e39daa"}, "downloads": -1, "filename": "winkar_utils-0.0.7.tar.gz", "has_sig": false, "md5_digest": "b9663f506dc01589fe106b315bd72499", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4121, "upload_time": "2015-12-16T08:00:23", "upload_time_iso_8601": "2015-12-16T08:00:23.410248Z", "url": "https://files.pythonhosted.org/packages/b9/c0/f89aca8ec629b512edbdb255cec10860e2a2510936a049f3e8ae311ca0cb/winkar_utils-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:55 2020"}