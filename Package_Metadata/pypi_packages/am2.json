{"info": {"author": "Renato Pedigoni", "author_email": "renatopedigoni@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "am2\n===\n\nStuff made on the machine learning course at my university\n\n\nSimple neuron\n-------------\n\nInstantiating a neuron with a sigmoid transfer function: ::\n\n    from am2 import Neuron, SigmoidTransferFunction\n\n    neuron = Neuron(SigmoidTransferFunction, weights=[0, 1, 1])\n    print neuron.run([3, 2, 1])\n\n\nOr with a staircase transfer function: ::\n\n    from am2 import Neuron, StaircaseTransferFunction\n\n    neuron = Neuron(StaircaseTransferFunction, function=lambda y: y > 2, weights=[0, 1, 1])\n    print neuron.run([1, 1, 1])\n\n\n``function`` is optional (default is ``lambda y: y >= 1``)\n\n\nPerceptron\n----------\n\nA simple Perceptron_ is implemented: ::\n\n    from am2 import Perceptron\n\n    train_dataset = [\n        ((1, 0, 0), 1),\n        ((1, 0, 1), 1),\n        ((1, 1, 0), 1),\n        ((1, 1, 1), 0),\n    ]\n\n    perceptron = Perceptron(function=lambda y: y >= 1)\n    perceptron.train(train_dataset)  # executa o algoritmo de treinamento\n\n    print perceptron.run((1, 0, 0))\n\n\n.. _Perceptron: http://en.wikipedia.org/wiki/Perceptron", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/rpedigoni/am2", "keywords": "perceptron,neural networks", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "am2", "package_url": "https://pypi.org/project/am2/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/am2/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/rpedigoni/am2"}, "release_url": "https://pypi.org/project/am2/0.1/", "requires_dist": null, "requires_python": null, "summary": "Stuff made on the machine learning course at my university", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Stuff made on the machine learning course at my university</p>\n<div id=\"simple-neuron\">\n<h2>Simple neuron</h2>\n<p>Instantiating a neuron with a sigmoid transfer function:</p>\n<pre>from am2 import Neuron, SigmoidTransferFunction\n\nneuron = Neuron(SigmoidTransferFunction, weights=[0, 1, 1])\nprint neuron.run([3, 2, 1])\n</pre>\n<p>Or with a staircase transfer function:</p>\n<pre>from am2 import Neuron, StaircaseTransferFunction\n\nneuron = Neuron(StaircaseTransferFunction, function=lambda y: y &gt; 2, weights=[0, 1, 1])\nprint neuron.run([1, 1, 1])\n</pre>\n<p><tt>function</tt> is optional (default is <tt>lambda y: y &gt;= 1</tt>)</p>\n</div>\n<div id=\"perceptron\">\n<h2>Perceptron</h2>\n<p>A simple <a href=\"http://en.wikipedia.org/wiki/Perceptron\" rel=\"nofollow\">Perceptron</a> is implemented:</p>\n<pre>from am2 import Perceptron\n\ntrain_dataset = [\n    ((1, 0, 0), 1),\n    ((1, 0, 1), 1),\n    ((1, 1, 0), 1),\n    ((1, 1, 1), 0),\n]\n\nperceptron = Perceptron(function=lambda y: y &gt;= 1)\nperceptron.train(train_dataset)  # executa o algoritmo de treinamento\n\nprint perceptron.run((1, 0, 0))\n</pre>\n</div>\n\n          </div>"}, "last_serial": 609890, "releases": {"0.1": []}, "urls": [], "timestamp": "Thu May  7 18:18:26 2020"}