{"info": {"author": "dr-prodigy", "author_email": "maurizio.montel@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Office/Business :: Scheduling", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Localization"], "description": "===============\npython-holidays\n===============\n\nA fast, efficient Python library for generating country, province and state\nspecific sets of holidays on the fly. It aims to make determining whether a\nspecific date is a holiday as fast and flexible as possible.\n\n.. image:: http://img.shields.io/travis/dr-prodigy/python-holidays.svg\n    :target: https://travis-ci.org/dr-prodigy/python-holidays\n\n.. image:: http://img.shields.io/coveralls/dr-prodigy/python-holidays.svg\n    :target: https://coveralls.io/r/dr-prodigy/python-holidays\n\n.. image:: http://img.shields.io/pypi/v/holidays.svg\n    :target: https://pypi.python.org/pypi/holidays\n\n.. image:: http://img.shields.io/pypi/l/holidays.svg\n    :target: https://github.com/dr-prodigy/python-holidays/blob/master/LICENSE\n\n\nExample Usage\n-------------\n\n.. code-block:: python\n\n    from datetime import date\n\n    import holidays\n\n    us_holidays = holidays.UnitedStates()\n    # or:\n    # us_holidays = holidays.US()\n    # or:\n    # us_holidays = holidays.CountryHoliday('US')\n    # or, for specific prov / states:\n    # us_holidays = holidays.CountryHoliday('US', prov=None, state='CA')\n\n    date(2015, 1, 1) in us_holidays  # True\n    date(2015, 1, 2) in us_holidays  # False\n\n    # The Holiday class will also recognize strings of any format\n    # and int/float representing a Unix timestamp\n    '2014-01-01' in us_holidays  # True\n    '1/1/2014' in us_holidays    # True\n    1388597445 in us_holidays    # True\n\n    us_holidays.get('2014-01-01')  # \"New Year's Day\"\n\n    us_holidays['2014-01-01': '2014-01-03']  # [date(2014, 1, 1)]\n\n    us_pr_holidays = holidays.UnitedStates(state='PR')  # or holidays.US(...), or holidays.CountryHoliday('US', state='PR')\n\n    # some holidays are only present in parts of a country\n    '2018-01-06' in us_holidays     # False\n    '2018-01-06' in us_pr_holidays  # True\n\n    # Easily create custom Holiday objects with your own dates instead\n    # of using the pre-defined countries/states/provinces available\n    custom_holidays = holidays.HolidayBase()\n    # Append custom holiday dates by passing:\n    # 1) a dict with date/name key/value pairs,\n    custom_holidays.append({\"2015-01-01\": \"New Year's Day\"})\n    # 2) a list of dates (in any format: date, datetime, string, integer),\n    custom_holidays.append(['2015-07-01', '07/04/2015'])\n    # 3) a single date item\n    custom_holidays.append(date(2015, 12, 25))\n\n    date(2015, 1, 1) in custom_holidays  # True\n    date(2015, 1, 2) in custom_holidays  # False\n    '12/25/2015' in custom_holidays      # True\n\n    # For more complex logic like 4th Monday of January, you can inherit the\n    # HolidayBase class and define your own _populate(year) method. See below\n    # documentation for examples.\n\n\nInstall\n-------\n\nThe latest stable version can always be installed or updated via pip:\n\n.. code-block:: bash\n\n    $ pip install holidays\n\nIf the above fails, please use easy_install instead:\n\n.. code-block:: bash\n\n    $ easy_install holidays\n\n\nAvailable Countries\n-------------------\n\n=================== ========= =============================================================\nCountry             ISO code  Provinces/States Available\n=================== ========= =============================================================\nArgentina           AR/ARG    None\nAruba               AW/ABW    None\nAustralia           AU/AUS    prov = **ACT** (default), NSW, NT, QLD, SA, TAS, VIC, WA\nAustria             AT/AUT    prov = 1, 2, 3, 4, 5, 6, 7, 8, **9** (default)\nBelarus             BY/BLR    None\nBelgium             BE/BEL    None\nBrazil              BR/BRA    state = AC, AL, AP, AM, BA, CE, DF, ES, GO, MA, MT, MS, MG,\n                              PA, PB, PE, PI, RJ, RN, RS, RO, RR, SC, SP, SE, TO\nBulgaria            BG/BLG    None\nCanada              CA/CAN    prov = AB, BC, MB, NB, NL, NS, NT, NU, **ON** (default),\n                              PE, QC, SK, YU\nChile               CL/CHL    None\nColombia            CO/COL    None\nCroatia             HR/HRV    None\nCzechia             CZ/CZE    None\nDenmark             DK/DNK    None\nDominican Republic  DO/DOM    None\nEgypt               EG/EGY    None\nEngland                       None\nEstonia             EE/EST    None\nEuropeanCentralBank ECB/TAR   Trans-European Automated Real-time Gross Settlement (TARGET2)\nFinland             FI/FIN    None\nFrance              FRA       **M\u00e9tropole** (default), Alsace-Moselle, Guadeloupe, Guyane,\n                              Martinique, Mayotte, Nouvelle-Cal\u00e9donie, La R\u00e9union,\n                              Polyn\u00e9sie Fran\u00e7aise, Saint-Barth\u00e9l\u00e9my, Saint-Martin,\n                              Wallis-et-Futuna\nGermany             DE/DEU    prov = BW, BY, BE, BB, HB, HH, HE, MV, NI, NW, RP, SL, SN,\n                              ST, SH, TH\nGreece              GR/GRC    None\nHonduras            HN/HND    None\nHongKong            HK/HKG    None\nHungary             HU/HUN    None\nIceland             IS/ISL    None\nIndia               IN/IND    prov = AS, SK, CG, KA, GJ, BR, RJ, OD, TN, AP, WB, KL, HR,\n                              MH, MP, UP, UK, TN\nIreland             IE/IRL    None\nIsleOfMan                     None\nIsrael              IL/ISR    None\nItaly               IT/ITA    prov = AN, AO, BA, BL, BO, BS, BZ, CB, Cesena, CH, CS, CT,\n                              EN, FC, FE, FI, Forl\u00ec, FR, GE, GO, IS, KR, LT, MB, MI, MO,\n                              MN, MS, NA, PA, PC, PD, PG, PR, RM, SP, TS, VI\nJapan               JP/JPN    None\nKenya               KE/KEN    None\nKorea               KR/KOR    None\nLithuania           LT/LTU    None\nLuxembourg          LU/LUX    None\nMexico              MX/MEX    None\nMorocco             MA/MOR    None\nNetherlands         NL/NLD    None\nNewZealand          NZ/NZL    prov = NTL, AUK, TKI, HKB, WGN, MBH, NSN, CAN, STC, WTL,\n                              OTA, STL, CIT\nNicaragua           NI/NIC    prov = MN\nNigeria             NG/NGA    None\nNorthern Ireland              None\nNorway              NO/NOR    None\nParaguay            PY/PRY    None\nPeru                PE/PER    None\nPoland              PL/POL    None\nPortugal            PT/PRT    None\nPortugalExt         PTE/PRTE  *Portugal plus extended days most people have off*\nRussia              RU/RUS    None\nScotland                      None\nSerbia              RS/SRB    None\nSingapore           SG/SGP    None\nSlovakia            SK/SVK    None\nSlovenia            SI/SVN    None\nSouth Africa        ZA/ZAF    None\nSpain               ES/ESP    prov = AN, AR, AS, CB, CL, CM, CN, CT, EX, GA, IB, MC,\n                              MD, NC, PV, RI, VC\nSweden              SE/SWE    None\nSwitzerland         CH/CHE    prov = AG, AR, AI, BL, BS, BE, FR, GE, GL, GR, JU, LU,\n                              NE, NW, OW, SG, SH, SZ, SO, TG, TI, UR, VD, VS, ZG, ZH\nTurkey              TR/TUR    None\nUkraine             UA/UKR    None\nUnitedKingdom       UK/GB/GBR None\nUnitedStates        US/USA    state = AL, AK, AS, AZ, AR, CA, CO, CT, DE, DC, FL, GA,\n                              GU, HI, ID, IL, IN, IA, KS, KY, LA, ME, MD, MH, MA, MI,\n                              FM, MN, MS, MO, MT, NE, NV, NH, NJ, NM, NY, NC, ND, MP,\n                              OH, OK, OR, PW, PA, PR, RI, SC, SD, TN, TX, UT, VT, VA,\n                              VI, WA, WV, WI, WY\nVietnam             VN/VNM\nWales                         None\n=================== ========= =============================================================\n\n\nAPI\n---\n\nclass holidays.HolidayBase(years=[], expand=True, observed=True, prov=None, state=None)\n    The base class used to create holiday country classes.\n\nParameters:\n\nyears\n    An iterable list of integers specifying the years that the Holiday object\n    should pre-generate. This would generally only be used if setting *expand*\n    to False. (Default: [])\n\nexpand\n    A boolean value which specifies whether or not to append holidays in new\n    years to the holidays object. (Default: True)\n\nobserved\n    A boolean value which when set to True will include the observed day of a\n    holiday that falls on a weekend, when appropriate. (Default: True)\n\nprov\n    A string specifying a province that has unique statutory holidays.\n    (Default: Australia='ACT', Canada='ON', NewZealand=None)\n\nstate\n    A string specifying a state that has unique statutory holidays.\n    (Default: UnitedStates=None)\n\nMethods:\n\nget(key, default=None)\n    Returns a string containing the name of the holiday(s) in date `key`, which\n    can be of date, datetime, string, unicode, bytes, integer or float type. If\n    multiple holidays fall on the same date the names will be separated by\n    commas\n\nget_list(key)\n    Same as `get` except returns a `list` of holiday names instead of a comma\n    separated string\n\npop(key, default=None)\n    Same as `get` except the key is removed from the holiday object\n\nupdate/append\n    Accepts dictionary of {date: name} pairs, a list of dates, or even singular\n    date/string/timestamp objects and adds them to the list of holidays\n\n\nMore Examples\n-------------\n\n.. code-block:: python\n\n    # Simplest example possible\n\n    >>> from datetime import date\n    >>> import holidays\n    >>> date(2014, 1, 1) in holidays.US()\n    True\n    >> date(2014, 1, 2) in holidays.US()\n    False\n\n    # But this is not efficient because it is initializing a new Holiday object\n    # and generating a list of all the holidays in 2014 during each comparison\n\n    # It is more efficient to create the object only once\n\n    >>> us_holidays = holidays.US()\n    >>> date(2014, 1, 1) in us_holidays\n    True\n    >> date(2014, 1, 2) in us_holidays\n    False\n\n    # Each country has three class names that can be called--a full name\n    # and the 2 and 3-digit ISO codes. Use whichever you prefer.\n\n    >>> holidays.UnitedStates() == holidays.US()\n    True\n    >>> holidays.Canada() == holidays.CA()\n    True\n    >>> holidays.US() == holidays.CA()\n    False\n\n    # Let's print out the holidays in 2014 specific to California, USA\n\n    >>> for date, name in sorted(holidays.US(state='CA', years=2014).items()):\n    >>>     print(date, name)\n    2014-01-01 New Year's Day\n    2014-01-20 Martin Luther King Jr. Day\n    2014-02-15 Susan B. Anthony Day\n    2014-02-17 Washington's Birthday\n    2014-03-31 C\u00e9sar Ch\u00e1vez Day\n    2014-05-26 Memorial Day\n    2014-07-04 Independence Day\n    2014-09-01 Labor Day\n    2014-10-13 Columbus Day\n    2014-11-11 Veterans Day\n    2014-11-27 Thanksgiving\n    2014-12-25 Christmas Day\n\n    # So far we've only checked holidays in 2014 so that's the only year the\n    # Holidays object has generated\n\n    >>> us_holidays.years\n    set([2014])\n    >>> len(us_holidays)\n    10\n\n    # Because by default the `expand` param is True the Holiday object will add\n    # holidays from other years as they are required.\n\n    >>> date(2013, 1, 1) in us_holidays\n    True\n    >>> us_holidays.years\n    set([2013, 2014])\n    >>> len(us_holidays)\n    20\n\n    # If we change the `expand` param to False the Holiday object will no longer\n    # add holidays from new years\n\n    >>> us_holidays.expand = False\n    >>> date(2012, 1, 1) in us_holidays\n    False\n    >>> us.holidays.expand = True\n    >>> date(2012, 1, 1) in us_holidays\n    True\n\n    # January 1st, 2012 fell on a Sunday so the statutory holiday was observed\n    # on the 2nd. By default the `observed` param is True so the holiday list\n    # will include January 2nd, 2012 as a holiday.\n\n    >>> date(2012, 1, 1) in us_holidays\n    True\n    >>> us_holidays[date(2012, 1, 1)]\n    \"New Year's Day\"\n    >>> date(2012, 1, 2) in us_holidays\n    True\n    >>> us_holidays.get(date(2012 ,1, 2))\n    \"New Year's Day (Observed)\"\n\n    # The `observed` and `expand` values can both be changed on the fly and the\n    # holiday list will be adjusted accordingly\n\n    >>> us_holidays.observed = False\n    >>> date(2012, 1, 2) in us_holidays\n    False\n    us_holidays.observed = True\n    >> date(2012, 1, 2) in us_holidays\n    True\n\n    # Holiday objects can be added together and the resulting object will\n    # generate the holidays from all of the initial objects\n\n    >>> north_america = holidays.CA() + holidays.US() + holidays.MX()\n    >>> north_america.get('2014-07-01')\n    \"Canada Day\"\n    >>> north_america.get('2014-07-04')\n    \"Independence Day\"\n\n    # The other form of addition is also available\n\n    >>> north_america = holidays.Canada()\n    >>> north_america += holidays.UnitedStates()\n    >>> north_america += holidays.Mexico()\n    >>> north_america.country\n    ['CA', 'US', 'MX']\n\n    # We can even get a set of holidays that include all the province- or\n    # state-specific holidays using the built-in sum() function\n    >>> a = sum([holidays.CA(prov=x) for x in holidays.CA.PROVINCES])\n    >>> a.prov\n    PROVINCES = ['AB', 'BC', 'MB', 'NB', 'NL', 'NS', 'NT', 'NU', 'ON', 'PE',\n                 'QC', 'SK', 'YU']\n\n    # Sometimes we may not be able to use the official federal statutory\n    # holiday list in our code. Let's pretend we work for a company that\n    # does not include Columbus Day as a statutory holiday but does include\n    # \"Ninja Turtle Day\" on July 13th. We can create a new class that inherits\n    # the UnitedStates class and the only method we need to override is _populate()\n\n    >>> from dateutil.relativedelta import relativedelta\n    >>> class CorporateHolidays(holidays.UnitedStates):\n    >>>     def _populate(self, year):\n    >>>         # Populate the holiday list with the default US holidays\n    >>>         holidays.UnitedStates._populate(self, year)\n    >>>         # Remove Columbus Day\n    >>>         self.pop(date(year, 10, 1) + relativedelta(weekday=MO(+2)), None)\n    >>>         # Add Ninja Turtle Day\n    >>>         self[date(year, 7, 13)] = \"Ninja Turtle Day\"\n    >>> date(2014, 10, 14) in Holidays(country=\"US\")\n    True\n    >>> date(2014, 10, 14) in CorporateHolidays(country=\"US\")\n    False\n    >>> date(2014, 7, 13) in Holidays(country=\"US\")\n    False\n    >>> date(2014 ,7, 13) in CorporateHolidays(country=\"US\")\n    True\n\n    # We can also inherit from the HolidayBase class which has an empty\n    # _populate method so we start with no holidays and must define them\n    # all ourselves. This is how we would create a holidays class for a country\n    # that is not supported yet.\n\n    >>> class NewCountryHolidays(holidays.HolidayBase):\n    >>>     def _populate(self, year):\n    >>>         self[date(year, 1, 2)] = \"Some Federal Holiday\"\n    >>>         self[date(year, 2, 3)] = \"Another Federal Holiday\"\n    >>> hdays = NewCountryHolidays()\n\n    # We can also include prov/state specific holidays in our new class.\n\n    >>> class NewCountryHolidays(holidays.HolidayBase):\n    >>>     def _populate(self, year):\n    >>>         # Set default prov if not provided\n    >>>         if self.prov == None:\n    >>>             self.prov = 'XX'\n    >>>         self[date(year, 1, 2)] = \"Some Federal Holiday\"\n    >>>         if self.prov == 'XX':\n    >>>             self[date(year, 2, 3)] = \"Special XX province-only holiday\"\n    >>>         if self.prov == 'YY':\n    >>>             self[date(year, 3, 4)] = \"Special YY province-only holiday\"\n    >>> hdays = NewCountryHolidays()\n    >>> hdays = NewCountryHolidays(prov='XX')\n\n    # If you write the code necessary to create a holiday class for a country\n    # not currently supported please contribute your code to the project!\n\n    # Perhaps you just have a list of dates that are holidays and want to turn\n    # them into a Holiday class to access all the useful functionality. You can\n    # use the append() method which accepts a dictionary of {date: name} pairs,\n    # a list of dates, or even singular date/string/timestamp objects.\n\n    >>> custom_holidays = holidays.HolidayBase()\n    >>> custom_holidays.append(['2015-01-01', '07/04/2015'])\n    >>> custom_holidays.append(date(2015, 12, 25))\n\n\n>>> from datetime import date\n>>> holidays.US()[date(2013, 12, 31): date(2014, 1, 2)]\n\nDevelopment Version\n-------------------\n\nThe latest development (beta) version can be installed directly from GitHub:\n\n.. code-block:: bash\n\n    $ pip install --upgrade https://github.com/dr-prodigy/python-holidays/tarball/beta\n\nAll new features are always first pushed to beta branch, then released on\nmaster branch upon official version upgrades.\n\nRunning Tests\n-------------\n\n.. code-block:: bash\n\n    $ pip install flake8\n    $ flake8 --ignore=F401,W504 constants.py holiday_base.py utils.py holidays/countries/*.py\n    $ python tests.py\n\n\nCoverage\n--------\n\n.. code-block:: bash\n\n    $ pip install coverage\n    $ coverage run --omit=*site-packages* tests.py\n    $ coverage report -m\n\n\nContributions\n-------------\n\n.. _issues: https://github.com/dr-prodigy/python-holidays/issues\n.. __: https://github.com/dr-prodigy/python-holidays/pulls\n.. _`beta branch`: https://github.com/dr-prodigy/python-holidays/tree/beta\n\nIssues_ and `Pull Requests`__ are always welcome.\n\nWhen contributing with fixes and new features, please start forking/branching\nfrom `beta branch`_, to work on latest code and reduce merging issues.\n\nAlso, whenever possible, please provide 100% test coverage for your new code.\n\nThanks a lot for your support.\n\nLicense\n-------\n\n.. __: https://github.com/dr-prodigy/python-holidays/raw/master/LICENSE\n\nCode and documentation are available according to the MIT License\n(see LICENSE__).", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dr-prodigy/python-holidays", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "holidays", "package_url": "https://pypi.org/project/holidays/", "platform": "any", "project_url": "https://pypi.org/project/holidays/", "project_urls": {"Homepage": "https://github.com/dr-prodigy/python-holidays"}, "release_url": "https://pypi.org/project/holidays/0.10.2/", "requires_dist": null, "requires_python": "", "summary": "Generate and work with holidays in Python", "version": "0.10.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A fast, efficient Python library for generating country, province and state\nspecific sets of holidays on the fly. It aims to make determining whether a\nspecific date is a holiday as fast and flexible as possible.</p>\n<a href=\"https://travis-ci.org/dr-prodigy/python-holidays\" rel=\"nofollow\"><img alt=\"http://img.shields.io/travis/dr-prodigy/python-holidays.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/18c79f60319f626a83bbac1acd3d6e36ef8aff16/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f64722d70726f646967792f707974686f6e2d686f6c69646179732e737667\"></a>\n<a href=\"https://coveralls.io/r/dr-prodigy/python-holidays\" rel=\"nofollow\"><img alt=\"http://img.shields.io/coveralls/dr-prodigy/python-holidays.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/315dc86da73a9f4ec40ab6e5bb08941ff0785eaf/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f64722d70726f646967792f707974686f6e2d686f6c69646179732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/holidays\" rel=\"nofollow\"><img alt=\"http://img.shields.io/pypi/v/holidays.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/80f22bc9750f432ab5a401801fb2a1e43fbd42fb/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f686f6c69646179732e737667\"></a>\n<a href=\"https://github.com/dr-prodigy/python-holidays/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"http://img.shields.io/pypi/l/holidays.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/63b61a82757a73e05d181e9b1c56733d4f1346bf/687474703a2f2f696d672e736869656c64732e696f2f707970692f6c2f686f6c69646179732e737667\"></a>\n<div id=\"example-usage\">\n<h2>Example Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">holidays</span>\n\n<span class=\"n\">us_holidays</span> <span class=\"o\">=</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">UnitedStates</span><span class=\"p\">()</span>\n<span class=\"c1\"># or:</span>\n<span class=\"c1\"># us_holidays = holidays.US()</span>\n<span class=\"c1\"># or:</span>\n<span class=\"c1\"># us_holidays = holidays.CountryHoliday('US')</span>\n<span class=\"c1\"># or, for specific prov / states:</span>\n<span class=\"c1\"># us_holidays = holidays.CountryHoliday('US', prov=None, state='CA')</span>\n\n<span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>  <span class=\"c1\"># True</span>\n<span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>  <span class=\"c1\"># False</span>\n\n<span class=\"c1\"># The Holiday class will also recognize strings of any format</span>\n<span class=\"c1\"># and int/float representing a Unix timestamp</span>\n<span class=\"s1\">'2014-01-01'</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>  <span class=\"c1\"># True</span>\n<span class=\"s1\">'1/1/2014'</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>    <span class=\"c1\"># True</span>\n<span class=\"mi\">1388597445</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>    <span class=\"c1\"># True</span>\n\n<span class=\"n\">us_holidays</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'2014-01-01'</span><span class=\"p\">)</span>  <span class=\"c1\"># \"New Year's Day\"</span>\n\n<span class=\"n\">us_holidays</span><span class=\"p\">[</span><span class=\"s1\">'2014-01-01'</span><span class=\"p\">:</span> <span class=\"s1\">'2014-01-03'</span><span class=\"p\">]</span>  <span class=\"c1\"># [date(2014, 1, 1)]</span>\n\n<span class=\"n\">us_pr_holidays</span> <span class=\"o\">=</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">UnitedStates</span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"o\">=</span><span class=\"s1\">'PR'</span><span class=\"p\">)</span>  <span class=\"c1\"># or holidays.US(...), or holidays.CountryHoliday('US', state='PR')</span>\n\n<span class=\"c1\"># some holidays are only present in parts of a country</span>\n<span class=\"s1\">'2018-01-06'</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>     <span class=\"c1\"># False</span>\n<span class=\"s1\">'2018-01-06'</span> <span class=\"ow\">in</span> <span class=\"n\">us_pr_holidays</span>  <span class=\"c1\"># True</span>\n\n<span class=\"c1\"># Easily create custom Holiday objects with your own dates instead</span>\n<span class=\"c1\"># of using the pre-defined countries/states/provinces available</span>\n<span class=\"n\">custom_holidays</span> <span class=\"o\">=</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">HolidayBase</span><span class=\"p\">()</span>\n<span class=\"c1\"># Append custom holiday dates by passing:</span>\n<span class=\"c1\"># 1) a dict with date/name key/value pairs,</span>\n<span class=\"n\">custom_holidays</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span><span class=\"s2\">\"2015-01-01\"</span><span class=\"p\">:</span> <span class=\"s2\">\"New Year's Day\"</span><span class=\"p\">})</span>\n<span class=\"c1\"># 2) a list of dates (in any format: date, datetime, string, integer),</span>\n<span class=\"n\">custom_holidays</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s1\">'2015-07-01'</span><span class=\"p\">,</span> <span class=\"s1\">'07/04/2015'</span><span class=\"p\">])</span>\n<span class=\"c1\"># 3) a single date item</span>\n<span class=\"n\">custom_holidays</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">))</span>\n\n<span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">custom_holidays</span>  <span class=\"c1\"># True</span>\n<span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">custom_holidays</span>  <span class=\"c1\"># False</span>\n<span class=\"s1\">'12/25/2015'</span> <span class=\"ow\">in</span> <span class=\"n\">custom_holidays</span>      <span class=\"c1\"># True</span>\n\n<span class=\"c1\"># For more complex logic like 4th Monday of January, you can inherit the</span>\n<span class=\"c1\"># HolidayBase class and define your own _populate(year) method. See below</span>\n<span class=\"c1\"># documentation for examples.</span>\n</pre>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>The latest stable version can always be installed or updated via pip:</p>\n<pre>$ pip install holidays\n</pre>\n<p>If the above fails, please use easy_install instead:</p>\n<pre>$ easy_install holidays\n</pre>\n</div>\n<div id=\"available-countries\">\n<h2>Available Countries</h2>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Country</th>\n<th>ISO code</th>\n<th>Provinces/States Available</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Argentina</td>\n<td>AR/ARG</td>\n<td>None</td>\n</tr>\n<tr><td>Aruba</td>\n<td>AW/ABW</td>\n<td>None</td>\n</tr>\n<tr><td>Australia</td>\n<td>AU/AUS</td>\n<td>prov = <strong>ACT</strong> (default), NSW, NT, QLD, SA, TAS, VIC, WA</td>\n</tr>\n<tr><td>Austria</td>\n<td>AT/AUT</td>\n<td>prov = 1, 2, 3, 4, 5, 6, 7, 8, <strong>9</strong> (default)</td>\n</tr>\n<tr><td>Belarus</td>\n<td>BY/BLR</td>\n<td>None</td>\n</tr>\n<tr><td>Belgium</td>\n<td>BE/BEL</td>\n<td>None</td>\n</tr>\n<tr><td>Brazil</td>\n<td>BR/BRA</td>\n<td>state = AC, AL, AP, AM, BA, CE, DF, ES, GO, MA, MT, MS, MG,\nPA, PB, PE, PI, RJ, RN, RS, RO, RR, SC, SP, SE, TO</td>\n</tr>\n<tr><td>Bulgaria</td>\n<td>BG/BLG</td>\n<td>None</td>\n</tr>\n<tr><td>Canada</td>\n<td>CA/CAN</td>\n<td>prov = AB, BC, MB, NB, NL, NS, NT, NU, <strong>ON</strong> (default),\nPE, QC, SK, YU</td>\n</tr>\n<tr><td>Chile</td>\n<td>CL/CHL</td>\n<td>None</td>\n</tr>\n<tr><td>Colombia</td>\n<td>CO/COL</td>\n<td>None</td>\n</tr>\n<tr><td>Croatia</td>\n<td>HR/HRV</td>\n<td>None</td>\n</tr>\n<tr><td>Czechia</td>\n<td>CZ/CZE</td>\n<td>None</td>\n</tr>\n<tr><td>Denmark</td>\n<td>DK/DNK</td>\n<td>None</td>\n</tr>\n<tr><td>Dominican Republic</td>\n<td>DO/DOM</td>\n<td>None</td>\n</tr>\n<tr><td>Egypt</td>\n<td>EG/EGY</td>\n<td>None</td>\n</tr>\n<tr><td>England</td>\n<td>\u00a0</td>\n<td>None</td>\n</tr>\n<tr><td>Estonia</td>\n<td>EE/EST</td>\n<td>None</td>\n</tr>\n<tr><td>EuropeanCentralBank</td>\n<td>ECB/TAR</td>\n<td>Trans-European Automated Real-time Gross Settlement (TARGET2)</td>\n</tr>\n<tr><td>Finland</td>\n<td>FI/FIN</td>\n<td>None</td>\n</tr>\n<tr><td>France</td>\n<td>FRA</td>\n<td><strong>M\u00e9tropole</strong> (default), Alsace-Moselle, Guadeloupe, Guyane,\nMartinique, Mayotte, Nouvelle-Cal\u00e9donie, La R\u00e9union,\nPolyn\u00e9sie Fran\u00e7aise, Saint-Barth\u00e9l\u00e9my, Saint-Martin,\nWallis-et-Futuna</td>\n</tr>\n<tr><td>Germany</td>\n<td>DE/DEU</td>\n<td>prov = BW, BY, BE, BB, HB, HH, HE, MV, NI, NW, RP, SL, SN,\nST, SH, TH</td>\n</tr>\n<tr><td>Greece</td>\n<td>GR/GRC</td>\n<td>None</td>\n</tr>\n<tr><td>Honduras</td>\n<td>HN/HND</td>\n<td>None</td>\n</tr>\n<tr><td>HongKong</td>\n<td>HK/HKG</td>\n<td>None</td>\n</tr>\n<tr><td>Hungary</td>\n<td>HU/HUN</td>\n<td>None</td>\n</tr>\n<tr><td>Iceland</td>\n<td>IS/ISL</td>\n<td>None</td>\n</tr>\n<tr><td>India</td>\n<td>IN/IND</td>\n<td>prov = AS, SK, CG, KA, GJ, BR, RJ, OD, TN, AP, WB, KL, HR,\nMH, MP, UP, UK, TN</td>\n</tr>\n<tr><td>Ireland</td>\n<td>IE/IRL</td>\n<td>None</td>\n</tr>\n<tr><td>IsleOfMan</td>\n<td>\u00a0</td>\n<td>None</td>\n</tr>\n<tr><td>Israel</td>\n<td>IL/ISR</td>\n<td>None</td>\n</tr>\n<tr><td>Italy</td>\n<td>IT/ITA</td>\n<td>prov = AN, AO, BA, BL, BO, BS, BZ, CB, Cesena, CH, CS, CT,\nEN, FC, FE, FI, Forl\u00ec, FR, GE, GO, IS, KR, LT, MB, MI, MO,\nMN, MS, NA, PA, PC, PD, PG, PR, RM, SP, TS, VI</td>\n</tr>\n<tr><td>Japan</td>\n<td>JP/JPN</td>\n<td>None</td>\n</tr>\n<tr><td>Kenya</td>\n<td>KE/KEN</td>\n<td>None</td>\n</tr>\n<tr><td>Korea</td>\n<td>KR/KOR</td>\n<td>None</td>\n</tr>\n<tr><td>Lithuania</td>\n<td>LT/LTU</td>\n<td>None</td>\n</tr>\n<tr><td>Luxembourg</td>\n<td>LU/LUX</td>\n<td>None</td>\n</tr>\n<tr><td>Mexico</td>\n<td>MX/MEX</td>\n<td>None</td>\n</tr>\n<tr><td>Morocco</td>\n<td>MA/MOR</td>\n<td>None</td>\n</tr>\n<tr><td>Netherlands</td>\n<td>NL/NLD</td>\n<td>None</td>\n</tr>\n<tr><td>NewZealand</td>\n<td>NZ/NZL</td>\n<td>prov = NTL, AUK, TKI, HKB, WGN, MBH, NSN, CAN, STC, WTL,\nOTA, STL, CIT</td>\n</tr>\n<tr><td>Nicaragua</td>\n<td>NI/NIC</td>\n<td>prov = MN</td>\n</tr>\n<tr><td>Nigeria</td>\n<td>NG/NGA</td>\n<td>None</td>\n</tr>\n<tr><td>Northern Ireland</td>\n<td>\u00a0</td>\n<td>None</td>\n</tr>\n<tr><td>Norway</td>\n<td>NO/NOR</td>\n<td>None</td>\n</tr>\n<tr><td>Paraguay</td>\n<td>PY/PRY</td>\n<td>None</td>\n</tr>\n<tr><td>Peru</td>\n<td>PE/PER</td>\n<td>None</td>\n</tr>\n<tr><td>Poland</td>\n<td>PL/POL</td>\n<td>None</td>\n</tr>\n<tr><td>Portugal</td>\n<td>PT/PRT</td>\n<td>None</td>\n</tr>\n<tr><td>PortugalExt</td>\n<td>PTE/PRTE</td>\n<td><em>Portugal plus extended days most people have off</em></td>\n</tr>\n<tr><td>Russia</td>\n<td>RU/RUS</td>\n<td>None</td>\n</tr>\n<tr><td>Scotland</td>\n<td>\u00a0</td>\n<td>None</td>\n</tr>\n<tr><td>Serbia</td>\n<td>RS/SRB</td>\n<td>None</td>\n</tr>\n<tr><td>Singapore</td>\n<td>SG/SGP</td>\n<td>None</td>\n</tr>\n<tr><td>Slovakia</td>\n<td>SK/SVK</td>\n<td>None</td>\n</tr>\n<tr><td>Slovenia</td>\n<td>SI/SVN</td>\n<td>None</td>\n</tr>\n<tr><td>South Africa</td>\n<td>ZA/ZAF</td>\n<td>None</td>\n</tr>\n<tr><td>Spain</td>\n<td>ES/ESP</td>\n<td>prov = AN, AR, AS, CB, CL, CM, CN, CT, EX, GA, IB, MC,\nMD, NC, PV, RI, VC</td>\n</tr>\n<tr><td>Sweden</td>\n<td>SE/SWE</td>\n<td>None</td>\n</tr>\n<tr><td>Switzerland</td>\n<td>CH/CHE</td>\n<td>prov = AG, AR, AI, BL, BS, BE, FR, GE, GL, GR, JU, LU,\nNE, NW, OW, SG, SH, SZ, SO, TG, TI, UR, VD, VS, ZG, ZH</td>\n</tr>\n<tr><td>Turkey</td>\n<td>TR/TUR</td>\n<td>None</td>\n</tr>\n<tr><td>Ukraine</td>\n<td>UA/UKR</td>\n<td>None</td>\n</tr>\n<tr><td>UnitedKingdom</td>\n<td>UK/GB/GBR</td>\n<td>None</td>\n</tr>\n<tr><td>UnitedStates</td>\n<td>US/USA</td>\n<td>state = AL, AK, AS, AZ, AR, CA, CO, CT, DE, DC, FL, GA,\nGU, HI, ID, IL, IN, IA, KS, KY, LA, ME, MD, MH, MA, MI,\nFM, MN, MS, MO, MT, NE, NV, NH, NJ, NM, NY, NC, ND, MP,\nOH, OK, OR, PW, PA, PR, RI, SC, SD, TN, TX, UT, VT, VA,\nVI, WA, WV, WI, WY</td>\n</tr>\n<tr><td>Vietnam</td>\n<td>VN/VNM</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>Wales</td>\n<td>\u00a0</td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<dl>\n<dt>class holidays.HolidayBase(years=[], expand=True, observed=True, prov=None, state=None)</dt>\n<dd>The base class used to create holiday country classes.</dd>\n</dl>\n<p>Parameters:</p>\n<dl>\n<dt>years</dt>\n<dd>An iterable list of integers specifying the years that the Holiday object\nshould pre-generate. This would generally only be used if setting <em>expand</em>\nto False. (Default: [])</dd>\n<dt>expand</dt>\n<dd>A boolean value which specifies whether or not to append holidays in new\nyears to the holidays object. (Default: True)</dd>\n<dt>observed</dt>\n<dd>A boolean value which when set to True will include the observed day of a\nholiday that falls on a weekend, when appropriate. (Default: True)</dd>\n<dt>prov</dt>\n<dd>A string specifying a province that has unique statutory holidays.\n(Default: Australia=\u2019ACT\u2019, Canada=\u2019ON\u2019, NewZealand=None)</dd>\n<dt>state</dt>\n<dd>A string specifying a state that has unique statutory holidays.\n(Default: UnitedStates=None)</dd>\n</dl>\n<p>Methods:</p>\n<dl>\n<dt>get(key, default=None)</dt>\n<dd>Returns a string containing the name of the holiday(s) in date <cite>key</cite>, which\ncan be of date, datetime, string, unicode, bytes, integer or float type. If\nmultiple holidays fall on the same date the names will be separated by\ncommas</dd>\n<dt>get_list(key)</dt>\n<dd>Same as <cite>get</cite> except returns a <cite>list</cite> of holiday names instead of a comma\nseparated string</dd>\n<dt>pop(key, default=None)</dt>\n<dd>Same as <cite>get</cite> except the key is removed from the holiday object</dd>\n<dt>update/append</dt>\n<dd>Accepts dictionary of {date: name} pairs, a list of dates, or even singular\ndate/string/timestamp objects and adds them to the list of holidays</dd>\n</dl>\n</div>\n<div id=\"more-examples\">\n<h2>More Examples</h2>\n<pre><span class=\"c1\"># Simplest example possible</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">holidays</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">US</span><span class=\"p\">()</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">US</span><span class=\"p\">()</span>\n<span class=\"kc\">False</span>\n\n<span class=\"c1\"># But this is not efficient because it is initializing a new Holiday object</span>\n<span class=\"c1\"># and generating a list of all the holidays in 2014 during each comparison</span>\n\n<span class=\"c1\"># It is more efficient to create the object only once</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">us_holidays</span> <span class=\"o\">=</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">US</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>\n<span class=\"kc\">False</span>\n\n<span class=\"c1\"># Each country has three class names that can be called--a full name</span>\n<span class=\"c1\"># and the 2 and 3-digit ISO codes. Use whichever you prefer.</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">UnitedStates</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">US</span><span class=\"p\">()</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">Canada</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">CA</span><span class=\"p\">()</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">US</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">CA</span><span class=\"p\">()</span>\n<span class=\"kc\">False</span>\n\n<span class=\"c1\"># Let's print out the holidays in 2014 specific to California, USA</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">date</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">US</span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"o\">=</span><span class=\"s1\">'CA'</span><span class=\"p\">,</span> <span class=\"n\">years</span><span class=\"o\">=</span><span class=\"mi\">2014</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">date</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"mi\">2014</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"n\">New</span> <span class=\"n\">Year</span><span class=\"s1\">'s Day</span>\n<span class=\"mi\">2014</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">20</span> <span class=\"n\">Martin</span> <span class=\"n\">Luther</span> <span class=\"n\">King</span> <span class=\"n\">Jr</span><span class=\"o\">.</span> <span class=\"n\">Day</span>\n<span class=\"mi\">2014</span><span class=\"o\">-</span><span class=\"mi\">02</span><span class=\"o\">-</span><span class=\"mi\">15</span> <span class=\"n\">Susan</span> <span class=\"n\">B</span><span class=\"o\">.</span> <span class=\"n\">Anthony</span> <span class=\"n\">Day</span>\n<span class=\"mi\">2014</span><span class=\"o\">-</span><span class=\"mi\">02</span><span class=\"o\">-</span><span class=\"mi\">17</span> <span class=\"n\">Washington</span><span class=\"s1\">'s Birthday</span>\n<span class=\"mi\">2014</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">31</span> <span class=\"n\">C\u00e9sar</span> <span class=\"n\">Ch\u00e1vez</span> <span class=\"n\">Day</span>\n<span class=\"mi\">2014</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">26</span> <span class=\"n\">Memorial</span> <span class=\"n\">Day</span>\n<span class=\"mi\">2014</span><span class=\"o\">-</span><span class=\"mi\">07</span><span class=\"o\">-</span><span class=\"mi\">04</span> <span class=\"n\">Independence</span> <span class=\"n\">Day</span>\n<span class=\"mi\">2014</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"n\">Labor</span> <span class=\"n\">Day</span>\n<span class=\"mi\">2014</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"o\">-</span><span class=\"mi\">13</span> <span class=\"n\">Columbus</span> <span class=\"n\">Day</span>\n<span class=\"mi\">2014</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"o\">-</span><span class=\"mi\">11</span> <span class=\"n\">Veterans</span> <span class=\"n\">Day</span>\n<span class=\"mi\">2014</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"o\">-</span><span class=\"mi\">27</span> <span class=\"n\">Thanksgiving</span>\n<span class=\"mi\">2014</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">25</span> <span class=\"n\">Christmas</span> <span class=\"n\">Day</span>\n\n<span class=\"c1\"># So far we've only checked holidays in 2014 so that's the only year the</span>\n<span class=\"c1\"># Holidays object has generated</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">us_holidays</span><span class=\"o\">.</span><span class=\"n\">years</span>\n<span class=\"nb\">set</span><span class=\"p\">([</span><span class=\"mi\">2014</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">us_holidays</span><span class=\"p\">)</span>\n<span class=\"mi\">10</span>\n\n<span class=\"c1\"># Because by default the `expand` param is True the Holiday object will add</span>\n<span class=\"c1\"># holidays from other years as they are required.</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2013</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">us_holidays</span><span class=\"o\">.</span><span class=\"n\">years</span>\n<span class=\"nb\">set</span><span class=\"p\">([</span><span class=\"mi\">2013</span><span class=\"p\">,</span> <span class=\"mi\">2014</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">us_holidays</span><span class=\"p\">)</span>\n<span class=\"mi\">20</span>\n\n<span class=\"c1\"># If we change the `expand` param to False the Holiday object will no longer</span>\n<span class=\"c1\"># add holidays from new years</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">us_holidays</span><span class=\"o\">.</span><span class=\"n\">expand</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2012</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">us</span><span class=\"o\">.</span><span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">expand</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2012</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>\n<span class=\"kc\">True</span>\n\n<span class=\"c1\"># January 1st, 2012 fell on a Sunday so the statutory holiday was observed</span>\n<span class=\"c1\"># on the 2nd. By default the `observed` param is True so the holiday list</span>\n<span class=\"c1\"># will include January 2nd, 2012 as a holiday.</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2012</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">us_holidays</span><span class=\"p\">[</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2012</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"s2\">\"New Year's Day\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2012</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">us_holidays</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2012</span> <span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"s2\">\"New Year's Day (Observed)\"</span>\n\n<span class=\"c1\"># The `observed` and `expand` values can both be changed on the fly and the</span>\n<span class=\"c1\"># holiday list will be adjusted accordingly</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">us_holidays</span><span class=\"o\">.</span><span class=\"n\">observed</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2012</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>\n<span class=\"kc\">False</span>\n<span class=\"n\">us_holidays</span><span class=\"o\">.</span><span class=\"n\">observed</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2012</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">us_holidays</span>\n<span class=\"kc\">True</span>\n\n<span class=\"c1\"># Holiday objects can be added together and the resulting object will</span>\n<span class=\"c1\"># generate the holidays from all of the initial objects</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">north_america</span> <span class=\"o\">=</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">CA</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">US</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">MX</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">north_america</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'2014-07-01'</span><span class=\"p\">)</span>\n<span class=\"s2\">\"Canada Day\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">north_america</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'2014-07-04'</span><span class=\"p\">)</span>\n<span class=\"s2\">\"Independence Day\"</span>\n\n<span class=\"c1\"># The other form of addition is also available</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">north_america</span> <span class=\"o\">=</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">Canada</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">north_america</span> <span class=\"o\">+=</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">UnitedStates</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">north_america</span> <span class=\"o\">+=</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">Mexico</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">north_america</span><span class=\"o\">.</span><span class=\"n\">country</span>\n<span class=\"p\">[</span><span class=\"s1\">'CA'</span><span class=\"p\">,</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span> <span class=\"s1\">'MX'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># We can even get a set of holidays that include all the province- or</span>\n<span class=\"c1\"># state-specific holidays using the built-in sum() function</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">([</span><span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">CA</span><span class=\"p\">(</span><span class=\"n\">prov</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">CA</span><span class=\"o\">.</span><span class=\"n\">PROVINCES</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">prov</span>\n<span class=\"n\">PROVINCES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'AB'</span><span class=\"p\">,</span> <span class=\"s1\">'BC'</span><span class=\"p\">,</span> <span class=\"s1\">'MB'</span><span class=\"p\">,</span> <span class=\"s1\">'NB'</span><span class=\"p\">,</span> <span class=\"s1\">'NL'</span><span class=\"p\">,</span> <span class=\"s1\">'NS'</span><span class=\"p\">,</span> <span class=\"s1\">'NT'</span><span class=\"p\">,</span> <span class=\"s1\">'NU'</span><span class=\"p\">,</span> <span class=\"s1\">'ON'</span><span class=\"p\">,</span> <span class=\"s1\">'PE'</span><span class=\"p\">,</span>\n             <span class=\"s1\">'QC'</span><span class=\"p\">,</span> <span class=\"s1\">'SK'</span><span class=\"p\">,</span> <span class=\"s1\">'YU'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Sometimes we may not be able to use the official federal statutory</span>\n<span class=\"c1\"># holiday list in our code. Let's pretend we work for a company that</span>\n<span class=\"c1\"># does not include Columbus Day as a statutory holiday but does include</span>\n<span class=\"c1\"># \"Ninja Turtle Day\" on July 13th. We can create a new class that inherits</span>\n<span class=\"c1\"># the UnitedStates class and the only method we need to override is _populate()</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">dateutil.relativedelta</span> <span class=\"kn\">import</span> <span class=\"n\">relativedelta</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">CorporateHolidays</span><span class=\"p\">(</span><span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">UnitedStates</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"k\">def</span> <span class=\"nf\">_populate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">year</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"c1\"># Populate the holiday list with the default US holidays</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">UnitedStates</span><span class=\"o\">.</span><span class=\"n\">_populate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">year</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"c1\"># Remove Columbus Day</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">relativedelta</span><span class=\"p\">(</span><span class=\"n\">weekday</span><span class=\"o\">=</span><span class=\"n\">MO</span><span class=\"p\">(</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">)),</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"c1\"># Add Ninja Turtle Day</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"s2\">\"Ninja Turtle Day\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">Holidays</span><span class=\"p\">(</span><span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s2\">\"US\"</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">CorporateHolidays</span><span class=\"p\">(</span><span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s2\">\"US\"</span><span class=\"p\">)</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">Holidays</span><span class=\"p\">(</span><span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s2\">\"US\"</span><span class=\"p\">)</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2014</span> <span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">CorporateHolidays</span><span class=\"p\">(</span><span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s2\">\"US\"</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n\n<span class=\"c1\"># We can also inherit from the HolidayBase class which has an empty</span>\n<span class=\"c1\"># _populate method so we start with no holidays and must define them</span>\n<span class=\"c1\"># all ourselves. This is how we would create a holidays class for a country</span>\n<span class=\"c1\"># that is not supported yet.</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">NewCountryHolidays</span><span class=\"p\">(</span><span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">HolidayBase</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"k\">def</span> <span class=\"nf\">_populate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">year</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"s2\">\"Some Federal Holiday\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"s2\">\"Another Federal Holiday\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">hdays</span> <span class=\"o\">=</span> <span class=\"n\">NewCountryHolidays</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># We can also include prov/state specific holidays in our new class.</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">NewCountryHolidays</span><span class=\"p\">(</span><span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">HolidayBase</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"k\">def</span> <span class=\"nf\">_populate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">year</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"c1\"># Set default prov if not provided</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prov</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;&gt;&gt;</span>             <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prov</span> <span class=\"o\">=</span> <span class=\"s1\">'XX'</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"s2\">\"Some Federal Holiday\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prov</span> <span class=\"o\">==</span> <span class=\"s1\">'XX'</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;&gt;&gt;</span>             <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"s2\">\"Special XX province-only holiday\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prov</span> <span class=\"o\">==</span> <span class=\"s1\">'YY'</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;&gt;&gt;</span>             <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"s2\">\"Special YY province-only holiday\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">hdays</span> <span class=\"o\">=</span> <span class=\"n\">NewCountryHolidays</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">hdays</span> <span class=\"o\">=</span> <span class=\"n\">NewCountryHolidays</span><span class=\"p\">(</span><span class=\"n\">prov</span><span class=\"o\">=</span><span class=\"s1\">'XX'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If you write the code necessary to create a holiday class for a country</span>\n<span class=\"c1\"># not currently supported please contribute your code to the project!</span>\n\n<span class=\"c1\"># Perhaps you just have a list of dates that are holidays and want to turn</span>\n<span class=\"c1\"># them into a Holiday class to access all the useful functionality. You can</span>\n<span class=\"c1\"># use the append() method which accepts a dictionary of {date: name} pairs,</span>\n<span class=\"c1\"># a list of dates, or even singular date/string/timestamp objects.</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">custom_holidays</span> <span class=\"o\">=</span> <span class=\"n\">holidays</span><span class=\"o\">.</span><span class=\"n\">HolidayBase</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">custom_holidays</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s1\">'2015-01-01'</span><span class=\"p\">,</span> <span class=\"s1\">'07/04/2015'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">custom_holidays</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">))</span>\n</pre>\n<pre>&gt;&gt;&gt; from datetime import date\n&gt;&gt;&gt; holidays.US()[date(2013, 12, 31): date(2014, 1, 2)]\n</pre>\n</div>\n<div id=\"development-version\">\n<h2>Development Version</h2>\n<p>The latest development (beta) version can be installed directly from GitHub:</p>\n<pre>$ pip install --upgrade https://github.com/dr-prodigy/python-holidays/tarball/beta\n</pre>\n<p>All new features are always first pushed to beta branch, then released on\nmaster branch upon official version upgrades.</p>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<pre>$ pip install flake8\n$ flake8 --ignore<span class=\"o\">=</span>F401,W504 constants.py holiday_base.py utils.py holidays/countries/*.py\n$ python tests.py\n</pre>\n</div>\n<div id=\"coverage\">\n<h2>Coverage</h2>\n<pre>$ pip install coverage\n$ coverage run --omit<span class=\"o\">=</span>*site-packages* tests.py\n$ coverage report -m\n</pre>\n</div>\n<div id=\"contributions\">\n<h2>Contributions</h2>\n<p><a href=\"https://github.com/dr-prodigy/python-holidays/issues\" rel=\"nofollow\">Issues</a> and <a href=\"https://github.com/dr-prodigy/python-holidays/pulls\" rel=\"nofollow\">Pull Requests</a> are always welcome.</p>\n<p>When contributing with fixes and new features, please start forking/branching\nfrom <a href=\"https://github.com/dr-prodigy/python-holidays/tree/beta\" rel=\"nofollow\">beta branch</a>, to work on latest code and reduce merging issues.</p>\n<p>Also, whenever possible, please provide 100% test coverage for your new code.</p>\n<p>Thanks a lot for your support.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Code and documentation are available according to the MIT License\n(see <a href=\"https://github.com/dr-prodigy/python-holidays/raw/master/LICENSE\" rel=\"nofollow\">LICENSE</a>).</p>\n</div>\n\n          </div>"}, "last_serial": 7008744, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "02ac351cf015b9ff5ae1af62a531b9a9", "sha256": "2ceb8f235c0b2ce4a6b28893de67ff4c7d43e973b40af850df6a640d313f6bcd"}, "downloads": -1, "filename": "holidays-0.1.tar.gz", "has_sig": false, "md5_digest": "02ac351cf015b9ff5ae1af62a531b9a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10048, "upload_time": "2014-08-28T12:08:29", "upload_time_iso_8601": "2014-08-28T12:08:29.445048Z", "url": "https://files.pythonhosted.org/packages/f2/5d/dd15c513b2f755322046361924d193b39509d0b8ef6364f574d8e1b98674/holidays-0.1.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "18f1e91189072a49d694076d01774063", "sha256": "63c3a68e28270a92ecf581e7a368f1d5e7d417ddfbdc014d123496f8e20a523e"}, "downloads": -1, "filename": "holidays-0.10.1-py2.7.egg", "has_sig": false, "md5_digest": "18f1e91189072a49d694076d01774063", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 303722, "upload_time": "2020-01-26T07:50:29", "upload_time_iso_8601": "2020-01-26T07:50:29.039479Z", "url": "https://files.pythonhosted.org/packages/3e/1b/b5701c968ceb106e55cc65fba2b769334a437f19a3bba765421e9ca36827/holidays-0.10.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2fcdb9cfc96117a13af763539be7d32f", "sha256": "d2435c29689985020af18a5ada26555ac2bba4e2bc70a8edb0bce01e2bb08dbb"}, "downloads": -1, "filename": "holidays-0.10.1-py3.8.egg", "has_sig": false, "md5_digest": "2fcdb9cfc96117a13af763539be7d32f", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": null, "size": 303635, "upload_time": "2020-01-26T07:50:35", "upload_time_iso_8601": "2020-01-26T07:50:35.288853Z", "url": "https://files.pythonhosted.org/packages/c7/df/52491cc29a3fbdd465a5e655dc5187e50cf604460bca2ffa4267d85eb858/holidays-0.10.1-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f4069d4b4b323e5312303e4f75b15b1", "sha256": "9024315e6c15e2cde1362a8c36a6d1e5004f78e56f17789a6dcc2ca7f24ca3b7"}, "downloads": -1, "filename": "holidays-0.10.1.tar.gz", "has_sig": false, "md5_digest": "7f4069d4b4b323e5312303e4f75b15b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105192, "upload_time": "2020-01-26T07:50:39", "upload_time_iso_8601": "2020-01-26T07:50:39.320566Z", "url": "https://files.pythonhosted.org/packages/75/b5/0b149df0c4539dd2d03e4f9a3df4869145134153c7886b3a360e10ba7ace/holidays-0.10.1.tar.gz", "yanked": false}], "0.10.2": [{"comment_text": "", "digests": {"md5": "cbd836fa27a4c806101038e05ca6c8ba", "sha256": "e5055b7b8e3895f4071992760991de43904df5905f45ab0aa398b58ef14afb5c"}, "downloads": -1, "filename": "holidays-0.10.2-py2.7.egg", "has_sig": false, "md5_digest": "cbd836fa27a4c806101038e05ca6c8ba", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 317381, "upload_time": "2020-04-13T09:35:21", "upload_time_iso_8601": "2020-04-13T09:35:21.615228Z", "url": "https://files.pythonhosted.org/packages/07/2b/840795eb8e25de63db0ae6ff8bec3721f3b906c51d12cb67897ee5ba5773/holidays-0.10.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfbb3377b3d19a378adf41d015dec4e0", "sha256": "26fc94e0a88cfa77b79e1225b2ad82f4c6b370e466be662ec81362c9ea59947a"}, "downloads": -1, "filename": "holidays-0.10.2-py3.8.egg", "has_sig": false, "md5_digest": "bfbb3377b3d19a378adf41d015dec4e0", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": null, "size": 317297, "upload_time": "2020-04-13T09:35:27", "upload_time_iso_8601": "2020-04-13T09:35:27.099505Z", "url": "https://files.pythonhosted.org/packages/c2/00/5a5b889930e5dbab08335a6aaaeee41667618ef85ecdf46d5cfcb60bd7e4/holidays-0.10.2-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "25618b191dd0201012e4e17a86a33cfa", "sha256": "5a91324fcaa4c72a0fe9a13601436f65ee33b2ef033686f4e2228d58a7631970"}, "downloads": -1, "filename": "holidays-0.10.2.tar.gz", "has_sig": false, "md5_digest": "25618b191dd0201012e4e17a86a33cfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110971, "upload_time": "2020-04-13T09:35:32", "upload_time_iso_8601": "2020-04-13T09:35:32.105475Z", "url": "https://files.pythonhosted.org/packages/0a/95/73efcf821449709def494400d497aac620a3caeb83af932d874559030ced/holidays-0.10.2.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "4a0557e99aab8fa4f2c412d9f5fa101b", "sha256": "b874f7383a410a4d90c939397f1d424498da730592ac22c6cd78d08e998ac47d"}, "downloads": -1, "filename": "holidays-0.2.tar.gz", "has_sig": false, "md5_digest": "4a0557e99aab8fa4f2c412d9f5fa101b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13117, "upload_time": "2014-08-28T11:59:28", "upload_time_iso_8601": "2014-08-28T11:59:28.833730Z", "url": "https://files.pythonhosted.org/packages/d8/63/e3b0b94cb5d22d8dd24f74b6ee3e50472763e3cf69add5bdfb49eda95120/holidays-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "66d73de700bdcfe4758c967745a1e15b", "sha256": "1ee460312e6e4c50e615c6cd5b658c9341df83720326158f5d29a8c499becf20"}, "downloads": -1, "filename": "holidays-0.3.tar.gz", "has_sig": false, "md5_digest": "66d73de700bdcfe4758c967745a1e15b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15282, "upload_time": "2014-09-04T15:04:31", "upload_time_iso_8601": "2014-09-04T15:04:31.517127Z", "url": "https://files.pythonhosted.org/packages/ec/23/c58965750eee3fe61ef3824bd22975c4b21eea8ad81f949f7689938551b0/holidays-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "ef45e817a15fcc503730c78ef99025fd", "sha256": "93e1d2db5e6006717d6639018a3fcae2739e1d858202eb2455b2d2713d34a52b"}, "downloads": -1, "filename": "holidays-0.3.1.tar.gz", "has_sig": false, "md5_digest": "ef45e817a15fcc503730c78ef99025fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15195, "upload_time": "2014-10-09T14:56:46", "upload_time_iso_8601": "2014-10-09T14:56:46.040204Z", "url": "https://files.pythonhosted.org/packages/f2/b6/2114d979965551acb498e6549ca222f37b04b90d068d4125d27b290b118e/holidays-0.3.1.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "334d334ae3e9727ab69c4267174a4822", "sha256": "398b9c4d918c4058102366b124f073493c82db27bd1302334091736c9f11b1e8"}, "downloads": -1, "filename": "holidays-0.4.tar.gz", "has_sig": false, "md5_digest": "334d334ae3e9727ab69c4267174a4822", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31645, "upload_time": "2015-10-04T22:37:52", "upload_time_iso_8601": "2015-10-04T22:37:52.472977Z", "url": "https://files.pythonhosted.org/packages/2e/6a/eef072535ffa294298b491579d86854e9a3351fc10c382be25aab4d30c79/holidays-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "1b3e3678e705480c40688701d3c69760", "sha256": "c5c7e86d86cbcf9cb1f7625c8e794f9975e58f323a30a527a9ef76eabc215781"}, "downloads": -1, "filename": "holidays-0.4.1.tar.gz", "has_sig": false, "md5_digest": "1b3e3678e705480c40688701d3c69760", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34623, "upload_time": "2016-01-05T15:10:19", "upload_time_iso_8601": "2016-01-05T15:10:19.678289Z", "url": "https://files.pythonhosted.org/packages/b7/11/38976c635e73ae4510fff98a7c4d0025ab4c9b8b8f2ca3edb138cf02881a/holidays-0.4.1.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "5cd5c3f46ea76e0dfcf7ac9bdd8b33c5", "sha256": "3bb68416fd91a027282919c0e5e0f695c2df56c35775c7788b6253863330295a"}, "downloads": -1, "filename": "holidays-0.5.tar.gz", "has_sig": false, "md5_digest": "5cd5c3f46ea76e0dfcf7ac9bdd8b33c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38315, "upload_time": "2016-09-05T12:47:56", "upload_time_iso_8601": "2016-09-05T12:47:56.392237Z", "url": "https://files.pythonhosted.org/packages/5e/2b/de89202df56d7199005870818dcfebe88e16619c990df552e488e36c5eef/holidays-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "ae8209588161b71f1e31a7315a813e91", "sha256": "1fec5342e06e8303111a4b73c7ab56a58202d48d7727011141d3b2d15a3897bb"}, "downloads": -1, "filename": "holidays-0.6.tar.gz", "has_sig": false, "md5_digest": "ae8209588161b71f1e31a7315a813e91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40117, "upload_time": "2016-11-18T16:11:01", "upload_time_iso_8601": "2016-11-18T16:11:01.882697Z", "url": "https://files.pythonhosted.org/packages/42/fe/ff65c6b9b9f5132a78a278d2e25ff67d94c45b1b11095124f8f807b66e50/holidays-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "bab5f85222a15b635a91f289831517cf", "sha256": "076d39d83b7a5c8d41499b0df00e645742bc3061c231f22faa63399d60fb5bf2"}, "downloads": -1, "filename": "holidays-0.7.tar.gz", "has_sig": false, "md5_digest": "bab5f85222a15b635a91f289831517cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41884, "upload_time": "2017-01-12T14:02:45", "upload_time_iso_8601": "2017-01-12T14:02:45.948623Z", "url": "https://files.pythonhosted.org/packages/72/c4/7cf4f6b01273c0e28b3e4a36e4ccf620082997b463db9dbd166d0d1584d6/holidays-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "2eb1497554ade986088826add42f3a1e", "sha256": "1b9786ffd4d7e1517cd5660bb1ce212f56de9fae1a9af65f2c895510d1bff38f"}, "downloads": -1, "filename": "holidays-0.8.tar.gz", "has_sig": false, "md5_digest": "2eb1497554ade986088826add42f3a1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42326, "upload_time": "2017-02-03T12:50:24", "upload_time_iso_8601": "2017-02-03T12:50:24.297534Z", "url": "https://files.pythonhosted.org/packages/6d/84/1a0c54c1b5b62925c40c6f32b3db2ad1163c18f4e98efcb4a95a9e17351e/holidays-0.8.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "3823223396be183c985f99c001a7cb57", "sha256": "b94bff84fe85dc351af2cdec5f2c57aad80b47ff95bb16f1a14e81f4f0994810"}, "downloads": -1, "filename": "holidays-0.8.1.tar.gz", "has_sig": false, "md5_digest": "3823223396be183c985f99c001a7cb57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43807, "upload_time": "2017-02-12T20:45:43", "upload_time_iso_8601": "2017-02-12T20:45:43.615614Z", "url": "https://files.pythonhosted.org/packages/ad/72/10fd630ee8a7b7024c588f28bd6d7a9f609a7df25aed16fc01725edb8b13/holidays-0.8.1.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "49616b7c7f118c0855b5bd25aec017a8", "sha256": "bcde9bcfa5d5e88331d52211b346099f7a5406bd5331531ade30ef3c1834faf0"}, "downloads": -1, "filename": "holidays-0.9.1-py2.7.egg", "has_sig": false, "md5_digest": "49616b7c7f118c0855b5bd25aec017a8", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 55559, "upload_time": "2018-03-12T22:30:31", "upload_time_iso_8601": "2018-03-12T22:30:31.359933Z", "url": "https://files.pythonhosted.org/packages/e3/49/417548bcdf0f8bc43be3737ee505a7e81d3bedb49e4f820902fbe16c7429/holidays-0.9.1-py2.7.egg", "yanked": false}], "0.9.10": [{"comment_text": "", "digests": {"md5": "d8d496f4e97f3303bd1d3710652b9cce", "sha256": "ade0182f95e55dc739d3cdc79cf47c84cab8e9fedbe3547297e70f4d501f87d5"}, "downloads": -1, "filename": "holidays-0.9.10-py2.7.egg", "has_sig": false, "md5_digest": "d8d496f4e97f3303bd1d3710652b9cce", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 82259, "upload_time": "2019-03-12T21:42:33", "upload_time_iso_8601": "2019-03-12T21:42:33.479777Z", "url": "https://files.pythonhosted.org/packages/75/5a/a264fe65d2aa0c51cab2dac399591c6a980f9411f044df77fb53c53764b4/holidays-0.9.10-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "65bd2d3fa7f10be90079f8fe0c10f945", "sha256": "2d091b951c3363edbb54a9ba25f0a95b169300a8f17635b38b2cd652fb5fd0e8"}, "downloads": -1, "filename": "holidays-0.9.10-py3.7.egg", "has_sig": false, "md5_digest": "65bd2d3fa7f10be90079f8fe0c10f945", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 81119, "upload_time": "2019-03-12T21:42:36", "upload_time_iso_8601": "2019-03-12T21:42:36.184329Z", "url": "https://files.pythonhosted.org/packages/e8/03/dc54fe3a0abf5c5a9a386dbad4c6dee4861807cd2acdd29ad4aeff192072/holidays-0.9.10-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8e1efac6b1e1ef18938ddf42bdbe534", "sha256": "9f06d143eb708e8732230260636938f2f57114e94defd8fa2082408e0d422d6f"}, "downloads": -1, "filename": "holidays-0.9.10.tar.gz", "has_sig": false, "md5_digest": "c8e1efac6b1e1ef18938ddf42bdbe534", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73539, "upload_time": "2019-03-12T21:42:38", "upload_time_iso_8601": "2019-03-12T21:42:38.686434Z", "url": "https://files.pythonhosted.org/packages/16/09/c882bee98acfa310933b654697405260ec7657c78430a14e785ef0f1314b/holidays-0.9.10.tar.gz", "yanked": false}], "0.9.11": [{"comment_text": "", "digests": {"md5": "a698c67cd2405fe35cfd6056b5e79f1d", "sha256": "4b1b6b5afaf5af8adef0d5a7e37d5085c5fcf70c203f641c1f01e205cbf94516"}, "downloads": -1, "filename": "holidays-0.9.11-py2.7.egg", "has_sig": false, "md5_digest": "a698c67cd2405fe35cfd6056b5e79f1d", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 92194, "upload_time": "2019-07-28T17:13:04", "upload_time_iso_8601": "2019-07-28T17:13:04.002950Z", "url": "https://files.pythonhosted.org/packages/0c/a1/4c9148638990cdeac4c6a6985255ab22d03de758faaf158f44d6528958ad/holidays-0.9.11-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7ad9c35e222c0ffd55f2d928f8bdce3", "sha256": "b8e3914abe7460e866732c1424b6ab4586f3fa01e3149aec3785d012a0d943a4"}, "downloads": -1, "filename": "holidays-0.9.11-py3.7.egg", "has_sig": false, "md5_digest": "e7ad9c35e222c0ffd55f2d928f8bdce3", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 90901, "upload_time": "2019-07-28T17:16:31", "upload_time_iso_8601": "2019-07-28T17:16:31.730773Z", "url": "https://files.pythonhosted.org/packages/e7/a4/406f11c5a26dc5df33aeb54022fff07291323c8d37957526d61265d9a420/holidays-0.9.11-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c68a7d605f1d4be8bcea8d8a01da951", "sha256": "915fdb92b596cfb66067010759b4384a9c6bc82931311d5bf07fe04920cc11bc"}, "downloads": -1, "filename": "holidays-0.9.11.tar.gz", "has_sig": false, "md5_digest": "5c68a7d605f1d4be8bcea8d8a01da951", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81217, "upload_time": "2019-07-28T17:13:07", "upload_time_iso_8601": "2019-07-28T17:13:07.781105Z", "url": "https://files.pythonhosted.org/packages/d0/17/a452275a0b3e811a381137ff6a61649086af4c5bf2a25755f518cc64b39e/holidays-0.9.11.tar.gz", "yanked": false}], "0.9.12": [{"comment_text": "", "digests": {"md5": "34f40d886f351af28876264d9f64a030", "sha256": "7e3e7f56bd8c817b5422b2b74c3dc658293ab289b3e96f58692d301320759cdf"}, "downloads": -1, "filename": "holidays-0.9.12-py2.7.egg", "has_sig": false, "md5_digest": "34f40d886f351af28876264d9f64a030", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 97836, "upload_time": "2019-12-23T22:45:58", "upload_time_iso_8601": "2019-12-23T22:45:58.317692Z", "url": "https://files.pythonhosted.org/packages/13/19/766dab9f82958bd8c5deb7fd7e9e89c2b0c0064ce3d3d1d3e00938140df9/holidays-0.9.12-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3a20cfeb61f7832562efe835911b09c", "sha256": "97e9cd423b7ecbb8c943c7678d9ec7d879a956e645e7ccca46da8f33c9414a32"}, "downloads": -1, "filename": "holidays-0.9.12-py3.7.egg", "has_sig": false, "md5_digest": "b3a20cfeb61f7832562efe835911b09c", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 96712, "upload_time": "2019-12-23T22:46:01", "upload_time_iso_8601": "2019-12-23T22:46:01.678349Z", "url": "https://files.pythonhosted.org/packages/8d/2b/c9f2da37f8c43c8b4fad520cadc95d5e365264f4a8cde7110190072982d3/holidays-0.9.12-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "03e10c16c6fdc258ff97afa671b5f5c2", "sha256": "3182c4a6fef8d01a829468362ace9c3bba7645873610535fef53454dbb4ea092"}, "downloads": -1, "filename": "holidays-0.9.12.tar.gz", "has_sig": false, "md5_digest": "03e10c16c6fdc258ff97afa671b5f5c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85685, "upload_time": "2019-12-23T22:46:05", "upload_time_iso_8601": "2019-12-23T22:46:05.169636Z", "url": "https://files.pythonhosted.org/packages/51/2c/5289263b6bb3a1ac51ddfd1f631947e2636ad9ebe8ac5e88ec37bceffc11/holidays-0.9.12.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "3126f11525ee13dce020ef5f0e544703", "sha256": "2e558d8be2f3b6b4c2fc1f686bc3953739434c45c0e7c1f1041d48c4a662ed5d"}, "downloads": -1, "filename": "holidays-0.9.3.tar.gz", "has_sig": false, "md5_digest": "3126f11525ee13dce020ef5f0e544703", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56240, "upload_time": "2018-01-19T17:55:42", "upload_time_iso_8601": "2018-01-19T17:55:42.296642Z", "url": "https://files.pythonhosted.org/packages/be/cc/3784ef99ba975936116f01d815a34cd762d27a0dbcfe86073af41a3cb34e/holidays-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "5eb6ca724f1d2d56bab8ee9936fe38cb", "sha256": "802199644fcb3347a30dd603eb0b2f8b4fc39facb2264cf4352a0d24a2b503db"}, "downloads": -1, "filename": "holidays-0.9.4-py2.7.egg", "has_sig": false, "md5_digest": "5eb6ca724f1d2d56bab8ee9936fe38cb", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 59289, "upload_time": "2018-03-12T22:30:33", "upload_time_iso_8601": "2018-03-12T22:30:33.623916Z", "url": "https://files.pythonhosted.org/packages/80/71/72204e0655a3639c6f98ae95ed18e7321c103fa1b393b080e9b58e0efb38/holidays-0.9.4-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c85c8ab6445d54f0a7308e9c08277af3", "sha256": "2fab722f6d57affea2ebd4259979f95534972e753929d9c2804635581b8a06a7"}, "downloads": -1, "filename": "holidays-0.9.4.tar.gz", "has_sig": false, "md5_digest": "c85c8ab6445d54f0a7308e9c08277af3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50585, "upload_time": "2018-03-12T22:30:36", "upload_time_iso_8601": "2018-03-12T22:30:36.237859Z", "url": "https://files.pythonhosted.org/packages/5b/13/9b48f0f4afc1fb1cd18fd4b0670fd994159ae119ee571b3a696fe68b001e/holidays-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "61d55cc56ddc3a4ed2de7d0ff2b4be0b", "sha256": "a31882ac2021a5fdbd5a84e302df0d23e9cdd8fa56f856454daa313857f8d257"}, "downloads": -1, "filename": "holidays-0.9.5-py2.7.egg", "has_sig": false, "md5_digest": "61d55cc56ddc3a4ed2de7d0ff2b4be0b", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 59313, "upload_time": "2018-04-23T20:13:45", "upload_time_iso_8601": "2018-04-23T20:13:45.124110Z", "url": "https://files.pythonhosted.org/packages/7b/d1/41a77a7dd89d75a65bc9127d0df64c32bd5156e3d1bd7e143166c5bc42e2/holidays-0.9.5-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "27078a7d76559d48427611a6789d9b2d", "sha256": "eb21d70ce994da7f4520776fca9841b6e8343b86cf7f59fc83701d484c069b5e"}, "downloads": -1, "filename": "holidays-0.9.5.tar.gz", "has_sig": false, "md5_digest": "27078a7d76559d48427611a6789d9b2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62003, "upload_time": "2018-05-02T16:18:34", "upload_time_iso_8601": "2018-05-02T16:18:34.231709Z", "url": "https://files.pythonhosted.org/packages/21/6e/39924e7a7184e00fd5588282b4a6284cdb5d716ec812d25fc78348a4632f/holidays-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "8f4e51fbbd2f25e4d508a5ae2018f0ed", "sha256": "df39e4c86f72501b6b6b34d4e43c3d3bae8cb6e56d92522226777fb9696e4c92"}, "downloads": -1, "filename": "holidays-0.9.6-py2.7.egg", "has_sig": false, "md5_digest": "8f4e51fbbd2f25e4d508a5ae2018f0ed", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 59369, "upload_time": "2018-08-01T21:38:17", "upload_time_iso_8601": "2018-08-01T21:38:17.021591Z", "url": "https://files.pythonhosted.org/packages/74/6a/942475487c33e4d5f8d3d68ab0035daca44832ef95da839cdf35c03fa561/holidays-0.9.6-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "50db1e381af6c3c8f3a643a13e4b3f92", "sha256": "d86c188d86681be429eadf424f1ae5bc6bff0f6a25a2333cd61f4cd0d46a84c5"}, "downloads": -1, "filename": "holidays-0.9.6.tar.gz", "has_sig": false, "md5_digest": "50db1e381af6c3c8f3a643a13e4b3f92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55163, "upload_time": "2018-08-06T16:11:59", "upload_time_iso_8601": "2018-08-06T16:11:59.486855Z", "url": "https://files.pythonhosted.org/packages/f6/68/ad2c0e2dcb767b40492896dd21cad2d20b33090e86a648530813b9fc71b8/holidays-0.9.6.tar.gz", "yanked": false}], "0.9.7": [{"comment_text": "", "digests": {"md5": "633f639d05ab5517a3a80dec37dc88df", "sha256": "4779b1f8239ef201415751f9b9a739d16f17deb9cb4c67da0e8404179ecded9e"}, "downloads": -1, "filename": "holidays-0.9.7-py2.7.egg", "has_sig": false, "md5_digest": "633f639d05ab5517a3a80dec37dc88df", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 63280, "upload_time": "2018-09-12T21:20:30", "upload_time_iso_8601": "2018-09-12T21:20:30.426012Z", "url": "https://files.pythonhosted.org/packages/5f/b4/a73a4a726d14fbb6710cfe4363d29895488145e420b48efa472e24cbbf1d/holidays-0.9.7-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c850e9688959b2602010dd78d33121a1", "sha256": "1307de56729b78f6fc2a64a3b4c3e57b9abb06aa64ae879867afe3cc021c975a"}, "downloads": -1, "filename": "holidays-0.9.7-py2-none-any.whl", "has_sig": false, "md5_digest": "c850e9688959b2602010dd78d33121a1", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 37350, "upload_time": "2018-09-12T21:20:27", "upload_time_iso_8601": "2018-09-12T21:20:27.896191Z", "url": "https://files.pythonhosted.org/packages/c2/be/8b4ee1169b5b35c0050f41b4b41022b53818187f111e702b9e75dcd06079/holidays-0.9.7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2988e1377d7580b428766ba3b67086b", "sha256": "eafa659b4f7f2c53b21aa9cb53b3a63d02016adad5b785841f2713237e94abd2"}, "downloads": -1, "filename": "holidays-0.9.7-py3.7.egg", "has_sig": false, "md5_digest": "d2988e1377d7580b428766ba3b67086b", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 62276, "upload_time": "2018-09-12T21:20:33", "upload_time_iso_8601": "2018-09-12T21:20:33.123986Z", "url": "https://files.pythonhosted.org/packages/d5/34/6161e1185196534af6c5eac2b6cd330ce09903312e5924ec406a84f53560/holidays-0.9.7-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf51f504c28956bad39da851c5705df3", "sha256": "78ebcb5a791acd021b00718c4871b6eac9b22783676498126be76acc99817470"}, "downloads": -1, "filename": "holidays-0.9.7.tar.gz", "has_sig": false, "md5_digest": "cf51f504c28956bad39da851c5705df3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56236, "upload_time": "2018-09-12T21:20:35", "upload_time_iso_8601": "2018-09-12T21:20:35.320062Z", "url": "https://files.pythonhosted.org/packages/fa/c5/766ed7caa3ee591119a56d0740fc4128d39aaebfaf3b3d86adb2c9517aea/holidays-0.9.7.tar.gz", "yanked": false}], "0.9.8": [{"comment_text": "", "digests": {"md5": "bfefb90f6c61c70816cf08515c6ab806", "sha256": "af74fce6c1e0631b548ef6e7743982b514902167144eb7487ca8508b82cf2b0d"}, "downloads": -1, "filename": "holidays-0.9.8-py2.7.egg", "has_sig": false, "md5_digest": "bfefb90f6c61c70816cf08515c6ab806", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 64732, "upload_time": "2018-10-18T20:56:27", "upload_time_iso_8601": "2018-10-18T20:56:27.727696Z", "url": "https://files.pythonhosted.org/packages/a9/53/480040e2a48fa3651fbcb8d0576812a369fd2e3b8610b1dbb7d331215182/holidays-0.9.8-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "29356958b4f83be74d9569e68d23ea1d", "sha256": "adb3fa5bdbc36b4ebec43ce88737ed8683f315c3ef3cd1e5d730ae3a91607289"}, "downloads": -1, "filename": "holidays-0.9.8.tar.gz", "has_sig": false, "md5_digest": "29356958b4f83be74d9569e68d23ea1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64910, "upload_time": "2018-10-18T20:56:00", "upload_time_iso_8601": "2018-10-18T20:56:00.924741Z", "url": "https://files.pythonhosted.org/packages/cc/da/7d0642a8b94ea413fc7005f4538c01475a45b420d705f57481752552ac55/holidays-0.9.8.tar.gz", "yanked": false}], "0.9.9": [{"comment_text": "", "digests": {"md5": "46ad8192cea0f3dc50e5c9393b009e6b", "sha256": "bb91e9502b1621bf5627f04d5f5c82fbf72c492b5bbe36a8fd0c0d463da216da"}, "downloads": -1, "filename": "holidays-0.9.9-py2.7.egg", "has_sig": false, "md5_digest": "46ad8192cea0f3dc50e5c9393b009e6b", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 76691, "upload_time": "2019-01-03T12:56:41", "upload_time_iso_8601": "2019-01-03T12:56:41.485131Z", "url": "https://files.pythonhosted.org/packages/3d/d9/f2ffdb62c12cab43dc70687922098e6103d522095cdfc4b9d72ed45bee68/holidays-0.9.9-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "98880be147f54754f2866b56f820f05f", "sha256": "b38e11736e2fad04c51e6d8d38ff66b483905d9448ba0291640cda5889687baa"}, "downloads": -1, "filename": "holidays-0.9.9.tar.gz", "has_sig": false, "md5_digest": "98880be147f54754f2866b56f820f05f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68973, "upload_time": "2019-01-03T12:56:43", "upload_time_iso_8601": "2019-01-03T12:56:43.766100Z", "url": "https://files.pythonhosted.org/packages/40/b0/3dfe3d3ed79087848a22de46d379462e371517571ee64668791f3d49ea29/holidays-0.9.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cbd836fa27a4c806101038e05ca6c8ba", "sha256": "e5055b7b8e3895f4071992760991de43904df5905f45ab0aa398b58ef14afb5c"}, "downloads": -1, "filename": "holidays-0.10.2-py2.7.egg", "has_sig": false, "md5_digest": "cbd836fa27a4c806101038e05ca6c8ba", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 317381, "upload_time": "2020-04-13T09:35:21", "upload_time_iso_8601": "2020-04-13T09:35:21.615228Z", "url": "https://files.pythonhosted.org/packages/07/2b/840795eb8e25de63db0ae6ff8bec3721f3b906c51d12cb67897ee5ba5773/holidays-0.10.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfbb3377b3d19a378adf41d015dec4e0", "sha256": "26fc94e0a88cfa77b79e1225b2ad82f4c6b370e466be662ec81362c9ea59947a"}, "downloads": -1, "filename": "holidays-0.10.2-py3.8.egg", "has_sig": false, "md5_digest": "bfbb3377b3d19a378adf41d015dec4e0", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": null, "size": 317297, "upload_time": "2020-04-13T09:35:27", "upload_time_iso_8601": "2020-04-13T09:35:27.099505Z", "url": "https://files.pythonhosted.org/packages/c2/00/5a5b889930e5dbab08335a6aaaeee41667618ef85ecdf46d5cfcb60bd7e4/holidays-0.10.2-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "25618b191dd0201012e4e17a86a33cfa", "sha256": "5a91324fcaa4c72a0fe9a13601436f65ee33b2ef033686f4e2228d58a7631970"}, "downloads": -1, "filename": "holidays-0.10.2.tar.gz", "has_sig": false, "md5_digest": "25618b191dd0201012e4e17a86a33cfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110971, "upload_time": "2020-04-13T09:35:32", "upload_time_iso_8601": "2020-04-13T09:35:32.105475Z", "url": "https://files.pythonhosted.org/packages/0a/95/73efcf821449709def494400d497aac620a3caeb83af932d874559030ced/holidays-0.10.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:49 2020"}