{"info": {"author": "Zachery P. Brady, John R. Leeman", "author_email": "bradyzp@dynamicgravitysystems.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: Microsoft", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering :: Astronomy", "Topic :: Scientific/Engineering :: GIS", "Topic :: Software Development :: Libraries"], "description": "Tide Gravity\n============\n\ntidegravity is a Python library which implements Ivor Longman's scheme for computing the tidal accelerations due to the\nmoon and sun, as published by I.M. Longman in the Journal of Geophysical Research, Vol 64, no. 12, 1959\nThis can be useful for correcting gravimetric survey data, as the gravitational forces due to the tidal effects of the\nSun and Moon can be on the order of several hundred microGals, depending on the surveyors location and the relative\npositions of the Sun and Moon to each other, and the surveyor.\n\nRequirements\n------------\n\n- numpy\n- pandas\n\nThe numpy and pandas libraries are required for processing tide corrections, and importing trajectory data for correction\n\nThe matplotlib library is an optional requirement and is currently only used in the examples to plot a visual\nrepresentation of the data.\n\nAPI\n---\n\n.. role:: py(code)\n    :language: python\n\nThe following API functions are provided (subject to change in future releases):\n\n* :py:`solve_longman_tide(lat, lon, alt, time)`\n\n  Solve for total gravity correction due to Sun/Moon from numpy array inputs\n* :py:`solve_longman_tide_scalar(lat, lon, alt, time)`\n\n  Wrapper around solve_longman_tide, accepts single scalar values for lat/lon/alt and a single DateTime object\n* :py:`solve_point_corr(lat, lon, alt, t0, n=3600, increment='S')`\n\n  Return tidal correction over a time span defined by t0 with n points at given increment for static (scalar)\n  position parameters\n* :py:`solve_tide_df(df, lat='lat', lon='lon', alt='alt')`\n\n  Wrapper accepting a pandas DataFrame (df) object as the input, df should have a DatetimeIndex, and lat/lon/alt\n  columns. Alternate column names can be provided via parameters, which will then be used to extract components from\n  the input DataFrame.\n\n\nReferences\n----------\n\n* I.M. Longman \"Forumlas for Computing the Tidal Accelerations Due to the Moon\n  and the Sun\" Journal of Geophysical Research, vol. 64, no. 12, 1959,\n  pp. 2351-2355\n* P\\. Schureman \"Manual of harmonic analysis and prediction of tides\" U.S. Coast and Geodetic Survey, 1958\n\n\nAcknowledgements\n----------------\n\n.. _LongmanTide: https://github.com/jrleeman/LongmanTide\n\nThis library is based on the work of John Leeman's LongmanTide Python implementation.\nLongmanTide_\n\n\nExamples\n--------\n\nThere are several example scripts in the examples directory illustrating how to use the longmantide solving functions.\n\nHere is a simple demonstration of calculating a correction series for a static latitude/longitude/altitude over a\nspecified time period, with intervals of 1 second.\n\n.. code-block:: python\n\n    from datetime import datetime\n    from tidegravity import solve_point_corr\n\n    # Example static data for Denver, January 1, 2018\n    lat = 39.7392\n    lon = -104.9903\n    # Note: West should be entered as a negative longitude value\n    alt = 1609.3\n    t0 = datetime(2018, 1, 1, 12, 0, 0)\n\n    # Calculate corrections for one day (60*60*24 points), with 1 second resolution\n    result_df = solve_point_corr(lat, lon, alt, t0, n=60*60*24, increment='S')\n\n    # Result is a pandas DataFrame, with a DatetimeIndex, and correction\n    # values in the 'total_corr' column i.e.\n    corrections = result_df['total_corr'].values\n\n    # Plot the corrections using matplotlib\n    from matplotlib import pyplot as plt\n\n    plt.plot(corrections)\n    plt.ylabel('Tidal Correction [mGals]')\n    plt.show()\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/bradyzp/LongmanTide", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bradyzp/LongmanTide/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tidegravity", "package_url": "https://pypi.org/project/tidegravity/", "platform": "", "project_url": "https://pypi.org/project/tidegravity/", "project_urls": {"Download": "https://github.com/bradyzp/LongmanTide", "Homepage": "https://github.com/bradyzp/LongmanTide/"}, "release_url": "https://pypi.org/project/tidegravity/0.3.0b1/", "requires_dist": ["numpy (>=1.14.2)", "pandas (>=0.22.0)", "matplotlib (>=2.2.0); extra == 'MPL'"], "requires_python": ">=3.5.*", "summary": "Tide gravitational correction based on I.M. Longman's Formulas for Computing the Tidal Accelerations Due to the Moon and the Sun", "version": "0.3.0b1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>tidegravity is a Python library which implements Ivor Longman\u2019s scheme for computing the tidal accelerations due to the\nmoon and sun, as published by I.M. Longman in the Journal of Geophysical Research, Vol 64, no. 12, 1959\nThis can be useful for correcting gravimetric survey data, as the gravitational forces due to the tidal effects of the\nSun and Moon can be on the order of several hundred microGals, depending on the surveyors location and the relative\npositions of the Sun and Moon to each other, and the surveyor.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>numpy</li>\n<li>pandas</li>\n</ul>\n<p>The numpy and pandas libraries are required for processing tide corrections, and importing trajectory data for correction</p>\n<p>The matplotlib library is an optional requirement and is currently only used in the examples to plot a visual\nrepresentation of the data.</p>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<p>The following API functions are provided (subject to change in future releases):</p>\n<ul>\n<li><p><code class=\"py python\"><span class=\"n\">solve_longman_tide</span><span class=\"p\">(</span><span class=\"n\">lat</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"p\">,</span> <span class=\"n\">alt</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"p\">)</span></code></p>\n<p>Solve for total gravity correction due to Sun/Moon from numpy array inputs</p>\n</li>\n<li><p><code class=\"py python\"><span class=\"n\">solve_longman_tide_scalar</span><span class=\"p\">(</span><span class=\"n\">lat</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"p\">,</span> <span class=\"n\">alt</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"p\">)</span></code></p>\n<p>Wrapper around solve_longman_tide, accepts single scalar values for lat/lon/alt and a single DateTime object</p>\n</li>\n<li><p><code class=\"py python\"><span class=\"n\">solve_point_corr</span><span class=\"p\">(</span><span class=\"n\">lat</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"p\">,</span> <span class=\"n\">alt</span><span class=\"p\">,</span> <span class=\"n\">t0</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">3600</span><span class=\"p\">,</span> <span class=\"n\">increment</span><span class=\"o\">=</span><span class=\"s1\">\u2019S\u2019</span><span class=\"p\">)</span></code></p>\n<p>Return tidal correction over a time span defined by t0 with n points at given increment for static (scalar)\nposition parameters</p>\n</li>\n<li><p><code class=\"py python\"><span class=\"n\">solve_tide_df</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">lat</span><span class=\"o\">=</span><span class=\"s1\">\u2019lat\u2019</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"o\">=</span><span class=\"s1\">\u2019lon\u2019</span><span class=\"p\">,</span> <span class=\"n\">alt</span><span class=\"o\">=</span><span class=\"s1\">\u2019alt\u2019</span><span class=\"p\">)</span></code></p>\n<p>Wrapper accepting a pandas DataFrame (df) object as the input, df should have a DatetimeIndex, and lat/lon/alt\ncolumns. Alternate column names can be provided via parameters, which will then be used to extract components from\nthe input DataFrame.</p>\n</li>\n</ul>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<ul>\n<li>I.M. Longman \u201cForumlas for Computing the Tidal Accelerations Due to the Moon\nand the Sun\u201d Journal of Geophysical Research, vol. 64, no. 12, 1959,\npp. 2351-2355</li>\n<li>P. Schureman \u201cManual of harmonic analysis and prediction of tides\u201d U.S. Coast and Geodetic Survey, 1958</li>\n</ul>\n</div>\n<div id=\"acknowledgements\">\n<h2>Acknowledgements</h2>\n<p>This library is based on the work of John Leeman\u2019s LongmanTide Python implementation.\n<a href=\"https://github.com/jrleeman/LongmanTide\" rel=\"nofollow\">LongmanTide</a></p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>There are several example scripts in the examples directory illustrating how to use the longmantide solving functions.</p>\n<p>Here is a simple demonstration of calculating a correction series for a static latitude/longitude/altitude over a\nspecified time period, with intervals of 1 second.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tidegravity</span> <span class=\"kn\">import</span> <span class=\"n\">solve_point_corr</span>\n\n<span class=\"c1\"># Example static data for Denver, January 1, 2018</span>\n<span class=\"n\">lat</span> <span class=\"o\">=</span> <span class=\"mf\">39.7392</span>\n<span class=\"n\">lon</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">104.9903</span>\n<span class=\"c1\"># Note: West should be entered as a negative longitude value</span>\n<span class=\"n\">alt</span> <span class=\"o\">=</span> <span class=\"mf\">1609.3</span>\n<span class=\"n\">t0</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Calculate corrections for one day (60*60*24 points), with 1 second resolution</span>\n<span class=\"n\">result_df</span> <span class=\"o\">=</span> <span class=\"n\">solve_point_corr</span><span class=\"p\">(</span><span class=\"n\">lat</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"p\">,</span> <span class=\"n\">alt</span><span class=\"p\">,</span> <span class=\"n\">t0</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"o\">*</span><span class=\"mi\">60</span><span class=\"o\">*</span><span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"n\">increment</span><span class=\"o\">=</span><span class=\"s1\">'S'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Result is a pandas DataFrame, with a DatetimeIndex, and correction</span>\n<span class=\"c1\"># values in the 'total_corr' column i.e.</span>\n<span class=\"n\">corrections</span> <span class=\"o\">=</span> <span class=\"n\">result_df</span><span class=\"p\">[</span><span class=\"s1\">'total_corr'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span>\n\n<span class=\"c1\"># Plot the corrections using matplotlib</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotlib</span> <span class=\"kn\">import</span> <span class=\"n\">pyplot</span> <span class=\"k\">as</span> <span class=\"n\">plt</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">corrections</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"s1\">'Tidal Correction [mGals]'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3844592, "releases": {"0.2.0a2": [{"comment_text": "", "digests": {"md5": "d52b9b6ff99a10a1fd35b262e66f62c7", "sha256": "97130200f5f7f3509cb805b3ebf0aeab15560a0bd7d898f44bc0a68437a1b483"}, "downloads": -1, "filename": "tidegravity-0.2.0a2.tar.gz", "has_sig": false, "md5_digest": "d52b9b6ff99a10a1fd35b262e66f62c7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 11074, "upload_time": "2018-04-20T00:51:17", "upload_time_iso_8601": "2018-04-20T00:51:17.554960Z", "url": "https://files.pythonhosted.org/packages/7d/16/4725217b8c66dea394d019697c74035de9f95ecaae3a1c2a297a8fb86c76/tidegravity-0.2.0a2.tar.gz", "yanked": false}], "0.2.0a3": [{"comment_text": "", "digests": {"md5": "96ad2e471ae7cba1124c604749dc9623", "sha256": "91469a6b5428f2fdc448688d63b3e5e0c5c2f7c209873d472e5a114cbd7796a1"}, "downloads": -1, "filename": "tidegravity-0.2.0a3-py3-none-any.whl", "has_sig": false, "md5_digest": "96ad2e471ae7cba1124c604749dc9623", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 11403, "upload_time": "2018-04-20T15:13:42", "upload_time_iso_8601": "2018-04-20T15:13:42.202450Z", "url": "https://files.pythonhosted.org/packages/98/97/5b282cb13ac169a76cd67286d80718ae2c67df63754d61883ef05527e8a1/tidegravity-0.2.0a3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f3c2ce0fd1a66ab3efe191d42c34862", "sha256": "46f90663022bf0317982cf946e359ad15c2ca6665e0414d0288be6cada1ec2cd"}, "downloads": -1, "filename": "tidegravity-0.2.0a3.tar.gz", "has_sig": false, "md5_digest": "2f3c2ce0fd1a66ab3efe191d42c34862", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 37673, "upload_time": "2018-04-20T15:13:43", "upload_time_iso_8601": "2018-04-20T15:13:43.424168Z", "url": "https://files.pythonhosted.org/packages/8a/df/705eb1e6c253a6c59e71b85809761a6a0d73b068bef45eb7339b78488d05/tidegravity-0.2.0a3.tar.gz", "yanked": false}], "0.2.0a4": [{"comment_text": "", "digests": {"md5": "deb2797ecd0ead1cb12959d492146371", "sha256": "d8120f21427d528b176acd6e51d8207da0b4b8f81224d250028e605a6e0fddc7"}, "downloads": -1, "filename": "tidegravity-0.2.0a4-py3-none-any.whl", "has_sig": false, "md5_digest": "deb2797ecd0ead1cb12959d492146371", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 12034, "upload_time": "2018-04-20T16:07:26", "upload_time_iso_8601": "2018-04-20T16:07:26.537912Z", "url": "https://files.pythonhosted.org/packages/ce/69/94d38530ddc825a0df83c6e5315727d94b5ae4dfa9195296e8b1621d122c/tidegravity-0.2.0a4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f05255c49b8ec67de7818df0f409b25f", "sha256": "32cd3d3bc704b7e41768d4dbe2be62d460c4a148575b31da3d8245c6d3ef8b17"}, "downloads": -1, "filename": "tidegravity-0.2.0a4.tar.gz", "has_sig": false, "md5_digest": "f05255c49b8ec67de7818df0f409b25f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 38749, "upload_time": "2018-04-20T16:07:28", "upload_time_iso_8601": "2018-04-20T16:07:28.942497Z", "url": "https://files.pythonhosted.org/packages/9b/11/8f852224a6854310f5157039cd56721c4b67ceeb6e329bdc7c8db92cd2ec/tidegravity-0.2.0a4.tar.gz", "yanked": false}], "0.2.1b1": [{"comment_text": "", "digests": {"md5": "2b20f4bbda0c6ffb0bde5ac88d23cc2e", "sha256": "c34f348fcc7b3f1c59323fa66560535e4a41fe7778609e07db8eeb470a8269ba"}, "downloads": -1, "filename": "tidegravity-0.2.1b1-py3-none-any.whl", "has_sig": false, "md5_digest": "2b20f4bbda0c6ffb0bde5ac88d23cc2e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 12109, "upload_time": "2018-05-01T15:17:15", "upload_time_iso_8601": "2018-05-01T15:17:15.984245Z", "url": "https://files.pythonhosted.org/packages/98/f1/9c5d3efc2319ed08f9c69057e206af12040493712c3545a5bbf962150c12/tidegravity-0.2.1b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3055cb91b6dfb9845456ae7675a5bca", "sha256": "49aac426f6d9b98fc85ded8b83c76106d3c1fd8f190b95e4650a8c2b137c28e5"}, "downloads": -1, "filename": "tidegravity-0.2.1b1.tar.gz", "has_sig": false, "md5_digest": "e3055cb91b6dfb9845456ae7675a5bca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 38916, "upload_time": "2018-05-01T15:17:17", "upload_time_iso_8601": "2018-05-01T15:17:17.143141Z", "url": "https://files.pythonhosted.org/packages/ef/b9/b260c3460e050ea2443a3debdd9598881a9182bf1f702620911022a81ba4/tidegravity-0.2.1b1.tar.gz", "yanked": false}], "0.3.0b1": [{"comment_text": "", "digests": {"md5": "f36948257106643c70caf73bc80002c5", "sha256": "a947a271a0e73316ebe66a448292d157906a59b6557d62f79efde26d1681ee02"}, "downloads": -1, "filename": "tidegravity-0.3.0b1-py3-none-any.whl", "has_sig": false, "md5_digest": "f36948257106643c70caf73bc80002c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 13315, "upload_time": "2018-05-08T15:20:47", "upload_time_iso_8601": "2018-05-08T15:20:47.518814Z", "url": "https://files.pythonhosted.org/packages/39/34/f2ef5ff721ccce20bb3c1ffd7fe095a8952acdc3e333042c3918063fb571/tidegravity-0.3.0b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0a4a97253514152874cb00dbcd7c9b6", "sha256": "64879e0723bca59324e68dd9aed04cfb813a279deb8254f463cb324399b32b22"}, "downloads": -1, "filename": "tidegravity-0.3.0b1.tar.gz", "has_sig": false, "md5_digest": "f0a4a97253514152874cb00dbcd7c9b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 39543, "upload_time": "2018-05-08T15:20:48", "upload_time_iso_8601": "2018-05-08T15:20:48.720323Z", "url": "https://files.pythonhosted.org/packages/f9/a5/f5145d00812189c732c32c2cc696e6e3e3b4df871d27c7344f0da0c2fcd2/tidegravity-0.3.0b1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f36948257106643c70caf73bc80002c5", "sha256": "a947a271a0e73316ebe66a448292d157906a59b6557d62f79efde26d1681ee02"}, "downloads": -1, "filename": "tidegravity-0.3.0b1-py3-none-any.whl", "has_sig": false, "md5_digest": "f36948257106643c70caf73bc80002c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 13315, "upload_time": "2018-05-08T15:20:47", "upload_time_iso_8601": "2018-05-08T15:20:47.518814Z", "url": "https://files.pythonhosted.org/packages/39/34/f2ef5ff721ccce20bb3c1ffd7fe095a8952acdc3e333042c3918063fb571/tidegravity-0.3.0b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0a4a97253514152874cb00dbcd7c9b6", "sha256": "64879e0723bca59324e68dd9aed04cfb813a279deb8254f463cb324399b32b22"}, "downloads": -1, "filename": "tidegravity-0.3.0b1.tar.gz", "has_sig": false, "md5_digest": "f0a4a97253514152874cb00dbcd7c9b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 39543, "upload_time": "2018-05-08T15:20:48", "upload_time_iso_8601": "2018-05-08T15:20:48.720323Z", "url": "https://files.pythonhosted.org/packages/f9/a5/f5145d00812189c732c32c2cc696e6e3e3b4df871d27c7344f0da0c2fcd2/tidegravity-0.3.0b1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:23 2020"}