{"info": {"author": "Craig Weber", "author_email": "weberc2@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "<!-- THIS FILE IS AUTOGENERATED. DO NOT MODIFY. -->\n# GitRange\n\nGit is confusing. Most of us know the basics, but we all have to Google for\nspecific incantations from time to time. If you haven't used a different VCS,\nlike Mercurial, then you may not realize that this Googling for these somewhat\ncommon things isn't normal or necessary--that it's a consequence of Git's\ninconsistent UI.\n\nGitRange (`gr`) attempts to bring some of that consistency to git by providing\na common syntax for specifying git commit ranges and passing those ranges to a\ngit subcommand.\n\n## Usage\n\n    USAGE: gr <selector> [<git-command>] [<git-command-args>]\n\n      Invoke a git command with a more sane range-selection syntax.\n\n    SELECTORS\n\n      -b, --branch <commit-id>  A range of commits from <commit-id> to the common\n                                ancestor of <commit-id> and `master`.\n\n      -c, --commit <commit-id>  Exactly the commit identified by <commit-id>.\n\n    COMMIT ID SYNTAX\n\n      `.`, `0`                  The current commit.\n\n      <branch-name>             The name of the git branch. Resolves to the\n                                branch's tip.\n\n      <commit-sha>              A git commit sha.\n\n      <tag>                     A git tag.\n\n      (nonpositive integers)    A relative number of parent commits from `.`.\n                                Positive integers are an error.\n\n    OTHER ARGUMENTS\n\n      git-command               The git command to invoke with the range resulting\n                                from the provided selector. If this is missing, the\n                                range will be printed directly (useful for\n                                debugging). This should not include the \"git\"\n                                (e.g., \"log\", not \"git log\").\n\n      git-command-args          The arguments to the git command. These will be\n                                passed to <git-command> before the range.\n\n    EXAMPLES\n\n      Log all changes in a branch:\n\n        $ gr -b my-feature-branch log\n\n      Log all changes in the current branch\n\n        $ gr -b . log\n\n      Diff a single changeset (against its parent):\n\n        $ gr -c <git-sha1> diff\n\n      Diff the current changeset (against its parent):\n\n        $ gr -c . diff\n\n      Diff an entire branch\n\n        $ gr -b my-feature-branch diff\n\n      Diff the current branch up to the parent commit\n\n        $ gr -b -1 diff\n        diff --git a/bar b/bar\n        new file mode 100644\n        index 0000000000..e69de29bb2\n        diff --git a/foo b/foo\n        new file mode 100644\n        index 0000000000..e69de29bb2\n\n      Pass other arguments\n\n        $ gr -b . log --oneline --graph --decorate\n        * dd6e2ccff4 (HEAD -> my-feature-branch) Removed foo and bar\n        * 357bc24de5 Added bar\n        * 8dd48a84d0 Added foo\n\n      Debug a range\n\n        $ gr -c .\n        HEAD~1..HEAD\n\n\n\n## Contributing\n\nAll pull requests must pass the [CI checks](./.github/workflows/ci.yml). These\ninclude `mypy --strict` and `black --check` for all Python files. Further, this\nREADME.md is generated by [gen/mkreadme.py](./gen/mkreadme.py). Instead of\nediting it directly, edit [gen/README.md](./gen/README.md) (the template file\nused to generate it).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/weberc2/gitrange", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gitrange", "package_url": "https://pypi.org/project/gitrange/", "platform": "", "project_url": "https://pypi.org/project/gitrange/", "project_urls": {"Documentation": "https://github.com/weberc2/gitrange/README.md", "Homepage": "https://github.com/weberc2/gitrange", "Source": "https://github.com/weberc2/gitrange"}, "release_url": "https://pypi.org/project/gitrange/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GitRange</h1>\n<p>Git is confusing. Most of us know the basics, but we all have to Google for\nspecific incantations from time to time. If you haven't used a different VCS,\nlike Mercurial, then you may not realize that this Googling for these somewhat\ncommon things isn't normal or necessary--that it's a consequence of Git's\ninconsistent UI.</p>\n<p>GitRange (<code>gr</code>) attempts to bring some of that consistency to git by providing\na common syntax for specifying git commit ranges and passing those ranges to a\ngit subcommand.</p>\n<h2>Usage</h2>\n<pre><code>USAGE: gr &lt;selector&gt; [&lt;git-command&gt;] [&lt;git-command-args&gt;]\n\n  Invoke a git command with a more sane range-selection syntax.\n\nSELECTORS\n\n  -b, --branch &lt;commit-id&gt;  A range of commits from &lt;commit-id&gt; to the common\n                            ancestor of &lt;commit-id&gt; and `master`.\n\n  -c, --commit &lt;commit-id&gt;  Exactly the commit identified by &lt;commit-id&gt;.\n\nCOMMIT ID SYNTAX\n\n  `.`, `0`                  The current commit.\n\n  &lt;branch-name&gt;             The name of the git branch. Resolves to the\n                            branch's tip.\n\n  &lt;commit-sha&gt;              A git commit sha.\n\n  &lt;tag&gt;                     A git tag.\n\n  (nonpositive integers)    A relative number of parent commits from `.`.\n                            Positive integers are an error.\n\nOTHER ARGUMENTS\n\n  git-command               The git command to invoke with the range resulting\n                            from the provided selector. If this is missing, the\n                            range will be printed directly (useful for\n                            debugging). This should not include the \"git\"\n                            (e.g., \"log\", not \"git log\").\n\n  git-command-args          The arguments to the git command. These will be\n                            passed to &lt;git-command&gt; before the range.\n\nEXAMPLES\n\n  Log all changes in a branch:\n\n    $ gr -b my-feature-branch log\n\n  Log all changes in the current branch\n\n    $ gr -b . log\n\n  Diff a single changeset (against its parent):\n\n    $ gr -c &lt;git-sha1&gt; diff\n\n  Diff the current changeset (against its parent):\n\n    $ gr -c . diff\n\n  Diff an entire branch\n\n    $ gr -b my-feature-branch diff\n\n  Diff the current branch up to the parent commit\n\n    $ gr -b -1 diff\n    diff --git a/bar b/bar\n    new file mode 100644\n    index 0000000000..e69de29bb2\n    diff --git a/foo b/foo\n    new file mode 100644\n    index 0000000000..e69de29bb2\n\n  Pass other arguments\n\n    $ gr -b . log --oneline --graph --decorate\n    * dd6e2ccff4 (HEAD -&gt; my-feature-branch) Removed foo and bar\n    * 357bc24de5 Added bar\n    * 8dd48a84d0 Added foo\n\n  Debug a range\n\n    $ gr -c .\n    HEAD~1..HEAD\n</code></pre>\n<h2>Contributing</h2>\n<p>All pull requests must pass the <a href=\"./.github/workflows/ci.yml\" rel=\"nofollow\">CI checks</a>. These\ninclude <code>mypy --strict</code> and <code>black --check</code> for all Python files. Further, this\nREADME.md is generated by <a href=\"./gen/mkreadme.py\" rel=\"nofollow\">gen/mkreadme.py</a>. Instead of\nediting it directly, edit <a href=\"./gen/README.md\" rel=\"nofollow\">gen/README.md</a> (the template file\nused to generate it).</p>\n\n          </div>"}, "last_serial": 6069792, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "bbd8c7b841d272912b27a290a9a92b01", "sha256": "29c7ea4bd2ff8071b4e927d17ccfb3d49322b065f3995d35e340724e7963b265"}, "downloads": -1, "filename": "gitrange-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bbd8c7b841d272912b27a290a9a92b01", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1241, "upload_time": "2019-11-03T01:53:24", "upload_time_iso_8601": "2019-11-03T01:53:24.822880Z", "url": "https://files.pythonhosted.org/packages/1b/b5/ad7feaa4507ba9e2bb7dfcabefee749ba6304bf3519cacbc01a38b52fc3e/gitrange-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb3923f8681190ac96221b00d338c1d7", "sha256": "ed1383c4602e93922447c8695dd55a1896727c9dc2c43504328b0769e52566af"}, "downloads": -1, "filename": "gitrange-0.0.0.tar.gz", "has_sig": false, "md5_digest": "cb3923f8681190ac96221b00d338c1d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2273, "upload_time": "2019-11-03T01:53:26", "upload_time_iso_8601": "2019-11-03T01:53:26.932451Z", "url": "https://files.pythonhosted.org/packages/30/2f/baa0e338d649971666f2dbe4eb4a16140cb5329d533190260b27b9f2ccde/gitrange-0.0.0.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "4496bedfe48683f0f8b54b50621ab53d", "sha256": "da21a85d906660b9b453f95635d7983bf4aba7c98c91a50034015b31a1bd7958"}, "downloads": -1, "filename": "gitrange-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4496bedfe48683f0f8b54b50621ab53d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2801, "upload_time": "2019-11-03T02:16:15", "upload_time_iso_8601": "2019-11-03T02:16:15.317825Z", "url": "https://files.pythonhosted.org/packages/c1/e6/8f6df2b7b5c427ca68ed94ebee05e3771133df889efe0e67a27cb94d12b7/gitrange-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27142b1cdd07dbd21c98bcde2b0397ac", "sha256": "80c23c4baadeee43a8ccf00fb20abf6ba90bdf95c3a5846012cce00e09740178"}, "downloads": -1, "filename": "gitrange-0.0.4.tar.gz", "has_sig": false, "md5_digest": "27142b1cdd07dbd21c98bcde2b0397ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2971, "upload_time": "2019-11-03T02:16:16", "upload_time_iso_8601": "2019-11-03T02:16:16.648930Z", "url": "https://files.pythonhosted.org/packages/49/17/6e48d1513451e123af539ab80707385760f62df97090407e6d3be8f3b41f/gitrange-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4496bedfe48683f0f8b54b50621ab53d", "sha256": "da21a85d906660b9b453f95635d7983bf4aba7c98c91a50034015b31a1bd7958"}, "downloads": -1, "filename": "gitrange-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4496bedfe48683f0f8b54b50621ab53d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2801, "upload_time": "2019-11-03T02:16:15", "upload_time_iso_8601": "2019-11-03T02:16:15.317825Z", "url": "https://files.pythonhosted.org/packages/c1/e6/8f6df2b7b5c427ca68ed94ebee05e3771133df889efe0e67a27cb94d12b7/gitrange-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27142b1cdd07dbd21c98bcde2b0397ac", "sha256": "80c23c4baadeee43a8ccf00fb20abf6ba90bdf95c3a5846012cce00e09740178"}, "downloads": -1, "filename": "gitrange-0.0.4.tar.gz", "has_sig": false, "md5_digest": "27142b1cdd07dbd21c98bcde2b0397ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2971, "upload_time": "2019-11-03T02:16:16", "upload_time_iso_8601": "2019-11-03T02:16:16.648930Z", "url": "https://files.pythonhosted.org/packages/49/17/6e48d1513451e123af539ab80707385760f62df97090407e6d3be8f3b41f/gitrange-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:49 2020"}