{"info": {"author": "Openlabs Technologies and Consulting (P) Ltd.", "author_email": "info@openlabs.co.in", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Plugins", "Framework :: Tryton", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Office/Business"], "description": "Nereid Passbook\n===============\n\nApple Passbook integration for Nereid.\n\nEasily create passbook passes and leave the rest to this module to handle\nupdates.\n\nScreenshot\n------------\n.. image:: images/example.png\n\nBasics\n------\n\nCreating passesti require you to have an apple developer account and a\ncertificate issued by apple that can be used to sign/verify the passes.\nThis section explains how you can get one and use it with this module.\n\n\n1. Create a Pass Type ID\n````````````````````````\n\nOn the `apple developer portal <https://developer.apple.com/account/ios/identifiers/passTypeId/passTypeIdList.action>`_\ncreate a new Pass Type ID and give it a ``description`` and ``ID``. Click\n`continue` and then `Register`. Hit `Done` and then select the newly\ncreated Pass Type ID and click Edit. You should be shown the screen where\nyou can create a new certificate for the Pass Type. Click on `Create\nCertificate` and then follow instructions on the next step.\n\n2. Generating a certificate\n````````````````````````````\n\nCreating a certificate requires a CSR (A request to generate the\ncertificate). To generate such a certificate you also need a private key.\nWe recommend that you create a new private key for the purpose of the\npassbook as the key will be deployed on all the servers where you will\nhave to generate passes.\n\nThe instructions to create a new CSR should be available on the apple\ndeveloper portal if you followed the above step. Once you upload the CSR\napple should create a new certificate for you, which could be downloaded\nin the subsequent step.\n\n3. Export certificate and private key as pem files\n``````````````````````````````````````````````````\n\nThis module uses the ``passbook`` python package which requires the key\nand certificate to be in the pem format for it to work.\n\nTo export the downloaded ``pass.cer`` (certificate) to PEM format::\n\n    openssl x509 -inform der -in /path/to/pass.cer -out certificate.pem\n\nThe private key has to be first exported from keychain to a supported\nformat and then converted to ``pem`` file. The usual export option of private\nkeys is to a ``p12`` file::\n\n    openssl pkcs12 -in /path/to/exported/private-key.p12 -out key.pem\n\nInstallation of the module\n--------------------------\n\nThe key requirement of the module is the ``M2Crypto`` package which is a\npain in the butt to build and run. The easy approach is to install it using\nyour OS package manager. For example, in Ubuntu::\n\n    sudo apt-get install python-m2crypto\n\nOnce M2Crypto is installed, the module can be installed using pip::\n\n    pip install openlabs_nereid_passbook\n\nOr download the module source and then run::\n\n    python setup.py install\n\nConfiguration\n-------------\n\nThe certificate and key generated in step 1 should be made available to\nthe Tryton configuration subsystem. For this add a new section to your\ntryton configuration::\n\n    [nereid_passbook]\n    certificate = /path/to/certificate.pem\n    key = /path/to/key.pem\n    pass_type_identifier = pass.com.your.organization\n    team_identifier = AGK5BZEN3E\n\nIf you do not know your team identifier, navigate to the home page of the\napple ``Member Center`` and click on \n`your organization <https://developer.apple.com/membercenter/index.action#profile>`_. \nThe team id would be displayed in the organization profile.\n\nTODO\n----\n\n* Support for push notifications to update passes.\n* Add a model to keep the logs sent from devices. (Currently spits to the\n  log file of tryton).\n\nImplementations\n---------------\n\n* Nereid Event Sales - Sends event tickets as passes.\n\nAuthors and Contributors\n------------------------\n\nThis module was built at `Openlabs <http://www.openlabs.co.in>`_. \n\nProfessional Support\n--------------------\n\nThis module is professionally supported by `Openlabs <http://www.openlabs.co.in>`_.\nIf you are looking for on-site teaching or consulting support, contact our\n`sales <mailto:sales@openlabs.co.in>`_ and `support\n<mailto:support@openlabs.co.in>`_ teams.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.openlabs.co.in/", "keywords": null, "license": "GPL-3", "maintainer": null, "maintainer_email": null, "name": "openlabs_nereid_passbook", "package_url": "https://pypi.org/project/openlabs_nereid_passbook/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/openlabs_nereid_passbook/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.openlabs.co.in/"}, "release_url": "https://pypi.org/project/openlabs_nereid_passbook/3.4.0.1/", "requires_dist": null, "requires_python": null, "summary": "Apple Passbook Passes for Nereid Apps", "version": "3.4.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Apple Passbook integration for Nereid.</p>\n<p>Easily create passbook passes and leave the rest to this module to handle\nupdates.</p>\n<div id=\"screenshot\">\n<h2>Screenshot</h2>\n<img alt=\"images/example.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/635b085cdca8e4d1cbb25994c8a78db1499773cd/696d616765732f6578616d706c652e706e67\">\n</div>\n<div id=\"basics\">\n<h2>Basics</h2>\n<p>Creating passesti require you to have an apple developer account and a\ncertificate issued by apple that can be used to sign/verify the passes.\nThis section explains how you can get one and use it with this module.</p>\n<div id=\"create-a-pass-type-id\">\n<h3>1. Create a Pass Type ID</h3>\n<p>On the <a href=\"https://developer.apple.com/account/ios/identifiers/passTypeId/passTypeIdList.action\" rel=\"nofollow\">apple developer portal</a>\ncreate a new Pass Type ID and give it a <tt>description</tt> and <tt>ID</tt>. Click\n<cite>continue</cite> and then <cite>Register</cite>. Hit <cite>Done</cite> and then select the newly\ncreated Pass Type ID and click Edit. You should be shown the screen where\nyou can create a new certificate for the Pass Type. Click on <cite>Create\nCertificate</cite> and then follow instructions on the next step.</p>\n</div>\n<div id=\"generating-a-certificate\">\n<h3>2. Generating a certificate</h3>\n<p>Creating a certificate requires a CSR (A request to generate the\ncertificate). To generate such a certificate you also need a private key.\nWe recommend that you create a new private key for the purpose of the\npassbook as the key will be deployed on all the servers where you will\nhave to generate passes.</p>\n<p>The instructions to create a new CSR should be available on the apple\ndeveloper portal if you followed the above step. Once you upload the CSR\napple should create a new certificate for you, which could be downloaded\nin the subsequent step.</p>\n</div>\n<div id=\"export-certificate-and-private-key-as-pem-files\">\n<h3>3. Export certificate and private key as pem files</h3>\n<p>This module uses the <tt>passbook</tt> python package which requires the key\nand certificate to be in the pem format for it to work.</p>\n<p>To export the downloaded <tt>pass.cer</tt> (certificate) to PEM format:</p>\n<pre>openssl x509 -inform der -in /path/to/pass.cer -out certificate.pem\n</pre>\n<p>The private key has to be first exported from keychain to a supported\nformat and then converted to <tt>pem</tt> file. The usual export option of private\nkeys is to a <tt>p12</tt> file:</p>\n<pre>openssl pkcs12 -in /path/to/exported/private-key.p12 -out key.pem\n</pre>\n</div>\n</div>\n<div id=\"installation-of-the-module\">\n<h2>Installation of the module</h2>\n<p>The key requirement of the module is the <tt>M2Crypto</tt> package which is a\npain in the butt to build and run. The easy approach is to install it using\nyour OS package manager. For example, in Ubuntu:</p>\n<pre>sudo apt-get install python-m2crypto\n</pre>\n<p>Once M2Crypto is installed, the module can be installed using pip:</p>\n<pre>pip install openlabs_nereid_passbook\n</pre>\n<p>Or download the module source and then run:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>The certificate and key generated in step 1 should be made available to\nthe Tryton configuration subsystem. For this add a new section to your\ntryton configuration:</p>\n<pre>[nereid_passbook]\ncertificate = /path/to/certificate.pem\nkey = /path/to/key.pem\npass_type_identifier = pass.com.your.organization\nteam_identifier = AGK5BZEN3E\n</pre>\n<p>If you do not know your team identifier, navigate to the home page of the\napple <tt>Member Center</tt> and click on\n<a href=\"https://developer.apple.com/membercenter/index.action#profile\" rel=\"nofollow\">your organization</a>.\nThe team id would be displayed in the organization profile.</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Support for push notifications to update passes.</li>\n<li>Add a model to keep the logs sent from devices. (Currently spits to the\nlog file of tryton).</li>\n</ul>\n</div>\n<div id=\"implementations\">\n<h2>Implementations</h2>\n<ul>\n<li>Nereid Event Sales - Sends event tickets as passes.</li>\n</ul>\n</div>\n<div id=\"authors-and-contributors\">\n<h2>Authors and Contributors</h2>\n<p>This module was built at <a href=\"http://www.openlabs.co.in\" rel=\"nofollow\">Openlabs</a>.</p>\n</div>\n<div id=\"professional-support\">\n<h2>Professional Support</h2>\n<p>This module is professionally supported by <a href=\"http://www.openlabs.co.in\" rel=\"nofollow\">Openlabs</a>.\nIf you are looking for on-site teaching or consulting support, contact our\n<a href=\"mailto:sales%40openlabs.co.in\">sales</a> and <a href=\"mailto:support%40openlabs.co.in\">support</a> teams.</p>\n</div>\n\n          </div>"}, "last_serial": 1698206, "releases": {"3.2.0": [], "3.2.0.1": [{"comment_text": "", "digests": {"md5": "cb98c0a5f0bcd796700e9f4d63d70275", "sha256": "153fe8157242a022818e35a6bdf7973b3339482f3e1c77f26ff3c36d51b6b3db"}, "downloads": -1, "filename": "openlabs_nereid_passbook-3.2.0.1.tar.gz", "has_sig": false, "md5_digest": "cb98c0a5f0bcd796700e9f4d63d70275", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9098, "upload_time": "2015-03-14T13:26:23", "upload_time_iso_8601": "2015-03-14T13:26:23.231993Z", "url": "https://files.pythonhosted.org/packages/68/e5/29711f919d6b27cdec4e530162232cdc53dbdf1270691fff0a2b222324a0/openlabs_nereid_passbook-3.2.0.1.tar.gz", "yanked": false}], "3.2.0.2": [{"comment_text": "", "digests": {"md5": "81edf0ae60cb02129827cb54f2f6f6e0", "sha256": "f5b1046b8032a42bbdf6aabda3901428f91103321dfb1c68872ac9f96396a086"}, "downloads": -1, "filename": "openlabs_nereid_passbook-3.2.0.2.tar.gz", "has_sig": false, "md5_digest": "81edf0ae60cb02129827cb54f2f6f6e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9132, "upload_time": "2015-03-14T13:49:10", "upload_time_iso_8601": "2015-03-14T13:49:10.941986Z", "url": "https://files.pythonhosted.org/packages/a2/2e/d7abd6612b81fa5fe242ecf3ec30e8c72ed77d16a98215cdb8dca3275107/openlabs_nereid_passbook-3.2.0.2.tar.gz", "yanked": false}], "3.4.0.1": [{"comment_text": "", "digests": {"md5": "d84e20e349754ce23dafa081454882c6", "sha256": "083a8dd2d4b58354653122e013c45e91a819250a548e67a0b5c8598431a2c219"}, "downloads": -1, "filename": "openlabs_nereid_passbook-3.4.0.1.tar.gz", "has_sig": false, "md5_digest": "d84e20e349754ce23dafa081454882c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9156, "upload_time": "2015-03-19T08:49:22", "upload_time_iso_8601": "2015-03-19T08:49:22.947683Z", "url": "https://files.pythonhosted.org/packages/d3/09/4a00276c6202a30e2a6be5a4efed0a1572b82c1a5862fbae012215c97898/openlabs_nereid_passbook-3.4.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d84e20e349754ce23dafa081454882c6", "sha256": "083a8dd2d4b58354653122e013c45e91a819250a548e67a0b5c8598431a2c219"}, "downloads": -1, "filename": "openlabs_nereid_passbook-3.4.0.1.tar.gz", "has_sig": false, "md5_digest": "d84e20e349754ce23dafa081454882c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9156, "upload_time": "2015-03-19T08:49:22", "upload_time_iso_8601": "2015-03-19T08:49:22.947683Z", "url": "https://files.pythonhosted.org/packages/d3/09/4a00276c6202a30e2a6be5a4efed0a1572b82c1a5862fbae012215c97898/openlabs_nereid_passbook-3.4.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:49 2020"}