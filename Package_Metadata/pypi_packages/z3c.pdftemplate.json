{"info": {"author": "Stephan Richter and the Zope Community", "author_email": "zope-dev@zope.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Zope3", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "Quickly generate PDF files using page templates and RML.\n\n\n.. contents::\n\n=====================================\nUsing ReportLab to generate PDF Views\n=====================================\n\nThis package,\n\n  >>> import z3c.pdftemplate\n\nprovides the functionality of creating browser views that generate PDFs\ninstead of HTML using reportlab's PDF writer technology. There are several\nways to use the features in this package, which are demonstrated in the text\nbelow.\n\nBut first we have to load the directives' meta configuration:\n\n  >>> import zope.component\n  >>> from zope.publisher.browser import TestRequest\n  >>> from zope.configuration import xmlconfig\n  >>> context = xmlconfig.file('meta.zcml', package=z3c.pdftemplate)\n\n\nUsing ``z3c.rml`` and ReportLab to generate PDF Views\n-----------------------------------------------------\n\nSee DEPENDENCIES.cfg, this lib depends on some 3rd party libraries.\n\n\nPurpose: PDF-Generration with the help of ``z3c.rml`` (an open source\nimplementation of RML) and Reportlab. The ``z3c.rml`` is really a dialect of\nthe official RML and supports many more features, such as charting while still\nremaining compatible with the commercial version of RML as much as possible.\n\nThis package provides the functionality of creating browser views that\ngenerate PDFs instead of HTML using reportlab's PDF writer technology.\n\nBut first we have to load the directives' meta configuration:\n\n  >>> from zope.configuration import xmlconfig\n  >>> context = xmlconfig.file('meta.zcml', package=z3c.pdftemplate)\n\nRML, an XML-dialect developed by Reportlab.org, is much like HTML in that it\nlets you define the structure of a PDF document. The RML is dynamically\ngenerated using page templates and then used to generate a PDF file.\n\nLet's say we want to create a PDF that shows the contents of a folder. The\nfirst step is to create a rml-document that contains the structure of the\nPDF. The following folder contents document template is available in\n``rml_contents.pt``\n\n::\n\n  <?xml version=\"1.0\" encoding=\"iso-8859-1\" standalone=\"no\" ?>\n  <!DOCTYPE document SYSTEM \"rml_1_0.dtd\">\n  <document\n      xmlns:tal=\"http://xml.zope.org/namespaces/tal\"\n      xmlns:metal=\"http://xml.zope.org/namespaces/metal\"\n      filename=\"contents.pdf\">\n  <content>\n\n  <para style=\"FolderName\">\n    Folder Name:\n    <tal:block\n       condition=\"context/__name__\"\n       replace=\"context/__name__|default\" />\n    <tal:block condition=\"not:context/__name__\">&lt;no name&gt;</tal:block>\n  </para>\n\n  <spacer height=\"30\" />\n\n  <table splitbyrow=\"1\" repeatrows=\"0\" repeatcols=\"0\" style=\"ContentTable\">\n    <tr>\n      <td>Name</td>\n      <td>Title</td>\n      <td>Size</td>\n      <td>Created</td>\n      <td>Modified</td>\n    </tr>\n    <tr tal:repeat=\"item view/listContentInfo\">\n      <td tal:content=\"item/id\">me.png</td>\n      <td tal:content=\"item/title|default\">&lt;no title&gt;</td>\n      <td tal:content=\"item/size/sizeForDisplay|nothing\">34.5 kB</td>\n      <td tal:content=\"item/created|default\"></td>\n      <td tal:content=\"item/modified|default\"></td>\n    </tr>\n  </table>\n\n  <action name=\"frameEnd\" />\n\n  </content>\n  </document>\n\nPretty easy isn't it? Fortunately, we can simply reuse the ``Contents`` view\nclass for the HTML contents view.\n\nNow that we have the template and the document, we can simply register the\nview:\n\n  >>> context = xmlconfig.string(\"\"\"\n  ...     <configure xmlns:browser=\"http://namespaces.zope.org/browser\">\n  ...       <browser:rml2pdf\n  ...           name=\"rmlsample.pdf\"\n  ...           for=\"zope.app.folder.interfaces.IFolder\"\n  ...           template=\"sample/rml_contents.pt\"\n  ...           class=\"zope.app.container.browser.contents.Contents\"\n  ...           permission=\"zope.Public\"\n  ...           />\n  ...     </configure>\n  ...     \"\"\", context)\n\nOnce we have created a folder instance:\n\n  >>> from zope.app.folder.folder import Folder\n  >>> folder = Folder()\n  >>> folder.__name__ = 'my folder'\n  >>> folder['subFolder'] = Folder()\n\nwe can can look up the view\n\n  >>> class Principal:\n  ...   id = 'bob'\n\n  >>> request = TestRequest()\n  >>> request.setPrincipal(Principal())\n\n  >>> contents = zope.component.getMultiAdapter((folder, request),\n  ...                                           name=\"rmlsample.pdf\")\n\nand create the PDF:\n\n  >>> contents() #doctest: +ELLIPSIS\n  '%PDF-1.4...'\n\n\n=======\nCHANGES\n=======\n\n0.2.0 (2010-12-12)\n------------------\n\n- Added missing install dependencies and test dependencies.\n\n- Fixed tests to run with current package versions.\n\n- Adapted tests to `reportlab` 2.4+ which produces PDF 1.4, so requiring at\n  least this `reportlab` version.\n\n- Using python's `doctest` module instead of the deprecated\n  `zope.testing.doctest`.\n\n- Removed ZCML slugs and ZPKG ones.\n\n- Fixed REST of ``long_description``.\n\n\n0.1.0 (2008-02-15)\n------------------\n\n- Initial Release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/z3c.pdftemplate", "keywords": "zope3 pdf rml reportlab template", "license": "ZPL 2.1", "maintainer": null, "maintainer_email": null, "name": "z3c.pdftemplate", "package_url": "https://pypi.org/project/z3c.pdftemplate/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/z3c.pdftemplate/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/z3c.pdftemplate"}, "release_url": "https://pypi.org/project/z3c.pdftemplate/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "PDF Template", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Quickly generate PDF files using page templates and RML.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#using-reportlab-to-generate-pdf-views\" id=\"id3\" rel=\"nofollow\">Using ReportLab to generate PDF Views</a><ul>\n<li><a href=\"#using-z3c-rml-and-reportlab-to-generate-pdf-views\" id=\"id4\" rel=\"nofollow\">Using <tt>z3c.rml</tt> and ReportLab to generate PDF Views</a></li>\n</ul>\n</li>\n<li><a href=\"#changes\" id=\"id5\" rel=\"nofollow\">CHANGES</a><ul>\n<li><a href=\"#id1\" id=\"id6\" rel=\"nofollow\">0.2.0 (2010-12-12)</a></li>\n<li><a href=\"#id2\" id=\"id7\" rel=\"nofollow\">0.1.0 (2008-02-15)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"using-reportlab-to-generate-pdf-views\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Using ReportLab to generate PDF Views</a></h2>\n<p>This package,</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import z3c.pdftemplate\n</pre>\n</blockquote>\n<p>provides the functionality of creating browser views that generate PDFs\ninstead of HTML using reportlab\u2019s PDF writer technology. There are several\nways to use the features in this package, which are demonstrated in the text\nbelow.</p>\n<p>But first we have to load the directives\u2019 meta configuration:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import zope.component\n&gt;&gt;&gt; from zope.publisher.browser import TestRequest\n&gt;&gt;&gt; from zope.configuration import xmlconfig\n&gt;&gt;&gt; context = xmlconfig.file('meta.zcml', package=z3c.pdftemplate)\n</pre>\n</blockquote>\n<div id=\"using-z3c-rml-and-reportlab-to-generate-pdf-views\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Using <tt>z3c.rml</tt> and ReportLab to generate PDF Views</a></h3>\n<p>See DEPENDENCIES.cfg, this lib depends on some 3rd party libraries.</p>\n<p>Purpose: PDF-Generration with the help of <tt>z3c.rml</tt> (an open source\nimplementation of RML) and Reportlab. The <tt>z3c.rml</tt> is really a dialect of\nthe official RML and supports many more features, such as charting while still\nremaining compatible with the commercial version of RML as much as possible.</p>\n<p>This package provides the functionality of creating browser views that\ngenerate PDFs instead of HTML using reportlab\u2019s PDF writer technology.</p>\n<p>But first we have to load the directives\u2019 meta configuration:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from zope.configuration import xmlconfig\n&gt;&gt;&gt; context = xmlconfig.file('meta.zcml', package=z3c.pdftemplate)\n</pre>\n</blockquote>\n<p>RML, an XML-dialect developed by Reportlab.org, is much like HTML in that it\nlets you define the structure of a PDF document. The RML is dynamically\ngenerated using page templates and then used to generate a PDF file.</p>\n<p>Let\u2019s say we want to create a PDF that shows the contents of a folder. The\nfirst step is to create a rml-document that contains the structure of the\nPDF. The following folder contents document template is available in\n<tt>rml_contents.pt</tt></p>\n<pre>&lt;?xml version=\"1.0\" encoding=\"iso-8859-1\" standalone=\"no\" ?&gt;\n&lt;!DOCTYPE document SYSTEM \"rml_1_0.dtd\"&gt;\n&lt;document\n    xmlns:tal=\"http://xml.zope.org/namespaces/tal\"\n    xmlns:metal=\"http://xml.zope.org/namespaces/metal\"\n    filename=\"contents.pdf\"&gt;\n&lt;content&gt;\n\n&lt;para style=\"FolderName\"&gt;\n  Folder Name:\n  &lt;tal:block\n     condition=\"context/__name__\"\n     replace=\"context/__name__|default\" /&gt;\n  &lt;tal:block condition=\"not:context/__name__\"&gt;&amp;lt;no name&amp;gt;&lt;/tal:block&gt;\n&lt;/para&gt;\n\n&lt;spacer height=\"30\" /&gt;\n\n&lt;table splitbyrow=\"1\" repeatrows=\"0\" repeatcols=\"0\" style=\"ContentTable\"&gt;\n  &lt;tr&gt;\n    &lt;td&gt;Name&lt;/td&gt;\n    &lt;td&gt;Title&lt;/td&gt;\n    &lt;td&gt;Size&lt;/td&gt;\n    &lt;td&gt;Created&lt;/td&gt;\n    &lt;td&gt;Modified&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr tal:repeat=\"item view/listContentInfo\"&gt;\n    &lt;td tal:content=\"item/id\"&gt;me.png&lt;/td&gt;\n    &lt;td tal:content=\"item/title|default\"&gt;&amp;lt;no title&amp;gt;&lt;/td&gt;\n    &lt;td tal:content=\"item/size/sizeForDisplay|nothing\"&gt;34.5 kB&lt;/td&gt;\n    &lt;td tal:content=\"item/created|default\"&gt;&lt;/td&gt;\n    &lt;td tal:content=\"item/modified|default\"&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n\n&lt;action name=\"frameEnd\" /&gt;\n\n&lt;/content&gt;\n&lt;/document&gt;\n</pre>\n<p>Pretty easy isn\u2019t it? Fortunately, we can simply reuse the <tt>Contents</tt> view\nclass for the HTML contents view.</p>\n<p>Now that we have the template and the document, we can simply register the\nview:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; context = xmlconfig.string(\"\"\"\n...     &lt;configure xmlns:browser=\"http://namespaces.zope.org/browser\"&gt;\n...       &lt;browser:rml2pdf\n...           name=\"rmlsample.pdf\"\n...           for=\"zope.app.folder.interfaces.IFolder\"\n...           template=\"sample/rml_contents.pt\"\n...           class=\"zope.app.container.browser.contents.Contents\"\n...           permission=\"zope.Public\"\n...           /&gt;\n...     &lt;/configure&gt;\n...     \"\"\", context)\n</pre>\n</blockquote>\n<p>Once we have created a folder instance:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from zope.app.folder.folder import Folder\n&gt;&gt;&gt; folder = Folder()\n&gt;&gt;&gt; folder.__name__ = 'my folder'\n&gt;&gt;&gt; folder['subFolder'] = Folder()\n</pre>\n</blockquote>\n<p>we can can look up the view</p>\n<blockquote>\n<pre>&gt;&gt;&gt; class Principal:\n...   id = 'bob'\n</pre>\n<pre>&gt;&gt;&gt; request = TestRequest()\n&gt;&gt;&gt; request.setPrincipal(Principal())\n</pre>\n<pre>&gt;&gt;&gt; contents = zope.component.getMultiAdapter((folder, request),\n...                                           name=\"rmlsample.pdf\")\n</pre>\n</blockquote>\n<p>and create the PDF:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; contents() #doctest: +ELLIPSIS\n'%PDF-1.4...'\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"changes\">\n<h2><a href=\"#id5\" rel=\"nofollow\">CHANGES</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id6\" rel=\"nofollow\">0.2.0 (2010-12-12)</a></h3>\n<ul>\n<li>Added missing install dependencies and test dependencies.</li>\n<li>Fixed tests to run with current package versions.</li>\n<li>Adapted tests to <cite>reportlab</cite> 2.4+ which produces PDF 1.4, so requiring at\nleast this <cite>reportlab</cite> version.</li>\n<li>Using python\u2019s <cite>doctest</cite> module instead of the deprecated\n<cite>zope.testing.doctest</cite>.</li>\n<li>Removed ZCML slugs and ZPKG ones.</li>\n<li>Fixed REST of <tt>long_description</tt>.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id7\" rel=\"nofollow\">0.1.0 (2008-02-15)</a></h3>\n<ul>\n<li>Initial Release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 802062, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9f7a4d64104d87c905a241a349d56f3c", "sha256": "ddce3e90a3ded24d1cbe485bb220956346bdec6819913fd089c19769839a6943"}, "downloads": -1, "filename": "z3c.pdftemplate-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9f7a4d64104d87c905a241a349d56f3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 369123, "upload_time": "2008-02-15T07:58:30", "upload_time_iso_8601": "2008-02-15T07:58:30Z", "url": "https://files.pythonhosted.org/packages/24/4b/db63c946a81c94f9e91492e82648d722ec9000d708c11559ef2a78da5f8b/z3c.pdftemplate-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "04ba7f70d006def8d39cbf590f2e0d93", "sha256": "80560e7f0588d46eb8a5622201d6de9139bb798eeefee711844b9513499fe732"}, "downloads": -1, "filename": "z3c.pdftemplate-0.2.0.tar.gz", "has_sig": false, "md5_digest": "04ba7f70d006def8d39cbf590f2e0d93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 363510, "upload_time": "2010-12-12T17:45:12", "upload_time_iso_8601": "2010-12-12T17:45:12.872670Z", "url": "https://files.pythonhosted.org/packages/e2/47/b8c20c8fa1e6268de3e684243cf5dfab284fbfc984a637e5b0c487ff0f36/z3c.pdftemplate-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "04ba7f70d006def8d39cbf590f2e0d93", "sha256": "80560e7f0588d46eb8a5622201d6de9139bb798eeefee711844b9513499fe732"}, "downloads": -1, "filename": "z3c.pdftemplate-0.2.0.tar.gz", "has_sig": false, "md5_digest": "04ba7f70d006def8d39cbf590f2e0d93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 363510, "upload_time": "2010-12-12T17:45:12", "upload_time_iso_8601": "2010-12-12T17:45:12.872670Z", "url": "https://files.pythonhosted.org/packages/e2/47/b8c20c8fa1e6268de3e684243cf5dfab284fbfc984a637e5b0c487ff0f36/z3c.pdftemplate-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:51 2020"}