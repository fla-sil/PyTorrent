{"info": {"author": "Ingeniweb", "author_email": "support@ingeniweb.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Framework :: Zope2", "Framework :: Zope3", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "================\niw.debug package\n================\n\n.. contents::\n\nWhat is iw.debug\n----------------\n\nThis package allow you to start the ipython debugger (ipdb) on any objects in\nzope.\nFor that you have to add /ipdb to the url of any object. And if your zope\ninstance is in debug mode it will start the ipdb in your terminal.\n\nExploring objects\n-----------------\n\nRun your zope instance in foreground::\n\n  ./bin/zopectl fg\n\nCall an url ended with /ipdb::\n\n  wget http://localhost:8080/portal/ipdb\n\nThen you get ipdb prompt in your console::\n\n  ipdb> \n\nTyping `ll` will show you a few locals::\n\n  ipdb> ll\n  Out[0]: \n  {'context': <PloneSite at /portal>,\n   'meth': None,\n   'portal': <PloneSite at /portal>,\n   'request': <HTTPRequest, URL=http://localhost:8080/portal/ipdb/pdb>,\n   'view': None}\n\nDebuging objects views and methods\n----------------------------------\n\nYou can also use a query string in the url to debug a callable::\n\n  wget http://localhost:8080/portal/ipdb?v=__repr__\n\nThen back to your console::\n\n  ipdb> ll\n  Out[0]: \n  {'context': <PloneSite at /portal>,\n   'meth': <bound method PloneSite.__repr__ of <PloneSite at /portal>>,\n   'portal': <PloneSite at /portal>,\n   'request': <HTTPRequest, URL=http://localhost:8080/portal/ipdb/pdb>,\n   'view': None}\n\nIf a browser view is found, then it will be used as callable::\n\n  wget http://localhost:8080/portal/ipdb?v=rules-controlpanel\n\nThen back to your console::\n\n  ipdb> ll\n  ipdb> Out[0]: \n  {'context': <PloneSite at /portal>,\n   'meth': None,\n   'portal': <PloneSite at /portal>,\n   'request': <HTTPRequest, URL=http://localhost:8080/portal/ipdb/pdb>,\n   'view': <Products.Five.metaclass.ContentRulesControlPanel object at ...>}\n\n\nFor both view and callable, you can enter in it by typing s::\n\n  ipdb> s\n  ipdb> --Call--\n  > /../plone/app/contentrules/browser/controlpanel.py(18)__call__()\n       17 \n  ---> 18     def __call__(self):\n       19         form = self.request.form\n\nIf you want to pass extra args to the callable do something like::\n\n  wget http://localhost:8080/portal/ipdb?v=myview&arg1=value1&arg2:int=2\n\nExtra args will be passed to the callable as keyword arguments.\n\nAdd iw.debug to your plone3 buildout\n------------------------------------\n\nIn the [buildout] section of your buildout.cfg add::\n\n  [buildout]\n  ...\n  # Add additional eggs here\n  # elementtree is required by Plone\n  eggs =\n    elementtree\n    iw.debug\n    ...\n\nThen in the [instance] section::\n\n  [instance]\n  ...\n  # If you want to register ZCML slugs for any packages, list them here.\n  # e.g. zcml = my.package my.other.package\n  zcml = iw.debug\n         ...", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://ingeniweb.svn.sourceforge.net/svnroot/ingeniweb/iw.debug", "keywords": "debug pdb ipdb plone zope", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "iw.debug", "package_url": "https://pypi.org/project/iw.debug/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/iw.debug/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://ingeniweb.svn.sourceforge.net/svnroot/ingeniweb/iw.debug"}, "release_url": "https://pypi.org/project/iw.debug/0.3/", "requires_dist": null, "requires_python": null, "summary": "Tools to help debugging a zope based application", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#what-is-iw-debug\" id=\"id1\" rel=\"nofollow\">What is iw.debug</a></li>\n<li><a href=\"#exploring-objects\" id=\"id2\" rel=\"nofollow\">Exploring objects</a></li>\n<li><a href=\"#debuging-objects-views-and-methods\" id=\"id3\" rel=\"nofollow\">Debuging objects views and methods</a></li>\n<li><a href=\"#add-iw-debug-to-your-plone3-buildout\" id=\"id4\" rel=\"nofollow\">Add iw.debug to your plone3 buildout</a></li>\n</ul>\n</div>\n<div id=\"what-is-iw-debug\">\n<h2><a href=\"#id1\" rel=\"nofollow\">What is iw.debug</a></h2>\n<p>This package allow you to start the ipython debugger (ipdb) on any objects in\nzope.\nFor that you have to add /ipdb to the url of any object. And if your zope\ninstance is in debug mode it will start the ipdb in your terminal.</p>\n</div>\n<div id=\"exploring-objects\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Exploring objects</a></h2>\n<p>Run your zope instance in foreground:</p>\n<pre>./bin/zopectl fg\n</pre>\n<p>Call an url ended with /ipdb:</p>\n<pre>wget http://localhost:8080/portal/ipdb\n</pre>\n<p>Then you get ipdb prompt in your console:</p>\n<pre>ipdb&gt;\n</pre>\n<p>Typing <cite>ll</cite> will show you a few locals:</p>\n<pre>ipdb&gt; ll\nOut[0]:\n{'context': &lt;PloneSite at /portal&gt;,\n 'meth': None,\n 'portal': &lt;PloneSite at /portal&gt;,\n 'request': &lt;HTTPRequest, URL=http://localhost:8080/portal/ipdb/pdb&gt;,\n 'view': None}\n</pre>\n</div>\n<div id=\"debuging-objects-views-and-methods\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Debuging objects views and methods</a></h2>\n<p>You can also use a query string in the url to debug a callable:</p>\n<pre>wget http://localhost:8080/portal/ipdb?v=__repr__\n</pre>\n<p>Then back to your console:</p>\n<pre>ipdb&gt; ll\nOut[0]:\n{'context': &lt;PloneSite at /portal&gt;,\n 'meth': &lt;bound method PloneSite.__repr__ of &lt;PloneSite at /portal&gt;&gt;,\n 'portal': &lt;PloneSite at /portal&gt;,\n 'request': &lt;HTTPRequest, URL=http://localhost:8080/portal/ipdb/pdb&gt;,\n 'view': None}\n</pre>\n<p>If a browser view is found, then it will be used as callable:</p>\n<pre>wget http://localhost:8080/portal/ipdb?v=rules-controlpanel\n</pre>\n<p>Then back to your console:</p>\n<pre>ipdb&gt; ll\nipdb&gt; Out[0]:\n{'context': &lt;PloneSite at /portal&gt;,\n 'meth': None,\n 'portal': &lt;PloneSite at /portal&gt;,\n 'request': &lt;HTTPRequest, URL=http://localhost:8080/portal/ipdb/pdb&gt;,\n 'view': &lt;Products.Five.metaclass.ContentRulesControlPanel object at ...&gt;}\n</pre>\n<p>For both view and callable, you can enter in it by typing s:</p>\n<pre>ipdb&gt; s\nipdb&gt; --Call--\n&gt; /../plone/app/contentrules/browser/controlpanel.py(18)__call__()\n     17\n---&gt; 18     def __call__(self):\n     19         form = self.request.form\n</pre>\n<p>If you want to pass extra args to the callable do something like:</p>\n<pre>wget http://localhost:8080/portal/ipdb?v=myview&amp;arg1=value1&amp;arg2:int=2\n</pre>\n<p>Extra args will be passed to the callable as keyword arguments.</p>\n</div>\n<div id=\"add-iw-debug-to-your-plone3-buildout\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Add iw.debug to your plone3 buildout</a></h2>\n<p>In the [buildout] section of your buildout.cfg add:</p>\n<pre>[buildout]\n...\n# Add additional eggs here\n# elementtree is required by Plone\neggs =\n  elementtree\n  iw.debug\n  ...\n</pre>\n<p>Then in the [instance] section:</p>\n<pre>[instance]\n...\n# If you want to register ZCML slugs for any packages, list them here.\n# e.g. zcml = my.package my.other.package\nzcml = iw.debug\n       ...\n</pre>\n</div>\n\n          </div>"}, "last_serial": 755037, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "762f13045547b7122f001d10f11fdcb7", "sha256": "402afb12dd4c2d39c925348b053ab15f406cb5fee7c241465f9a1dc58694a9e8"}, "downloads": -1, "filename": "iw.debug-0.1-py2.4.egg", "has_sig": false, "md5_digest": "762f13045547b7122f001d10f11fdcb7", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 6565, "upload_time": "2007-12-12T17:52:20", "upload_time_iso_8601": "2007-12-12T17:52:20Z", "url": "https://files.pythonhosted.org/packages/a7/04/8848d4d3b11d8e6953b489dcf3887126922ec3eb18df7d5e7a88b3593bbf/iw.debug-0.1-py2.4.egg", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "31448a62bb791c1d49746463ed48e215", "sha256": "2fe4fc7fc6f2fcb81a1e45cac49ec654891257333ad4d265df1345ec86704ecb"}, "downloads": -1, "filename": "iw.debug-0.2-py2.4.egg", "has_sig": false, "md5_digest": "31448a62bb791c1d49746463ed48e215", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 9272, "upload_time": "2008-01-10T06:02:23", "upload_time_iso_8601": "2008-01-10T06:02:23Z", "url": "https://files.pythonhosted.org/packages/b6/b8/33f10712521d938fd7e2edc26998bc55af31d428790287a070ebef097bce/iw.debug-0.2-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "318b79e44b5a72f60a06c9e39e97193d", "sha256": "ca9b9f4e1fa8eea96f549da5cde3cd0ceae6fb03748d0af0f44224a4ab202ce3"}, "downloads": -1, "filename": "iw.debug-0.2.tar.gz", "has_sig": false, "md5_digest": "318b79e44b5a72f60a06c9e39e97193d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4305, "upload_time": "2008-01-10T06:02:10", "upload_time_iso_8601": "2008-01-10T06:02:10Z", "url": "https://files.pythonhosted.org/packages/10/78/c0fcb1edc03e0a1713a9e66a9225fbb2fff1c73c520ff9e2f9a9a1123459/iw.debug-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "4a28ef3a16cd0f859fff4371c82ff191", "sha256": "f07c052bc43e60edfa2c0d5a3a357d6637d2938ba37005e39a9c97b148ea9c85"}, "downloads": -1, "filename": "iw.debug-0.3-py2.4.egg", "has_sig": false, "md5_digest": "4a28ef3a16cd0f859fff4371c82ff191", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 9181, "upload_time": "2008-05-28T15:12:12", "upload_time_iso_8601": "2008-05-28T15:12:12Z", "url": "https://files.pythonhosted.org/packages/90/e2/1f9ad774fff6f010c1a040a7fe0a5077e4d7b56b1d1c41094ca15e02d4c1/iw.debug-0.3-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "95139aa2c63b404e6da8f319c51a89a3", "sha256": "a9260e4365d72cc9eaacab3376927351852cff66efcf72538589d34eb39a07cd"}, "downloads": -1, "filename": "iw.debug-0.3.tar.gz", "has_sig": false, "md5_digest": "95139aa2c63b404e6da8f319c51a89a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4235, "upload_time": "2008-05-28T15:12:02", "upload_time_iso_8601": "2008-05-28T15:12:02Z", "url": "https://files.pythonhosted.org/packages/b2/f5/6ec890568dbe4d6282e3c11a41bf2c92ac7e1f2f8c262ddee5dc7fe251db/iw.debug-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4a28ef3a16cd0f859fff4371c82ff191", "sha256": "f07c052bc43e60edfa2c0d5a3a357d6637d2938ba37005e39a9c97b148ea9c85"}, "downloads": -1, "filename": "iw.debug-0.3-py2.4.egg", "has_sig": false, "md5_digest": "4a28ef3a16cd0f859fff4371c82ff191", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 9181, "upload_time": "2008-05-28T15:12:12", "upload_time_iso_8601": "2008-05-28T15:12:12Z", "url": "https://files.pythonhosted.org/packages/90/e2/1f9ad774fff6f010c1a040a7fe0a5077e4d7b56b1d1c41094ca15e02d4c1/iw.debug-0.3-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "95139aa2c63b404e6da8f319c51a89a3", "sha256": "a9260e4365d72cc9eaacab3376927351852cff66efcf72538589d34eb39a07cd"}, "downloads": -1, "filename": "iw.debug-0.3.tar.gz", "has_sig": false, "md5_digest": "95139aa2c63b404e6da8f319c51a89a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4235, "upload_time": "2008-05-28T15:12:02", "upload_time_iso_8601": "2008-05-28T15:12:02Z", "url": "https://files.pythonhosted.org/packages/b2/f5/6ec890568dbe4d6282e3c11a41bf2c92ac7e1f2f8c262ddee5dc7fe251db/iw.debug-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:32 2020"}