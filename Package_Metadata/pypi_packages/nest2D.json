{"info": {"author": "Mark Fink", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "Introduction\n============\n\nNest2D is a 2D bin packaging tool for python.\n\nNest2D works with the C++ libnest2d backend for speed. For python C++\ninteroperability we use pybind11.\n\nThe library is written in a way that it should be usable out of the box\nwith a very simple interface. The backend is reasonably fast and robust,\nbeing built on top of boost geometry and the\n`polyclipping <http://www.angusj.com/delphi/clipper.php>`__ library.\n\nExample\n=======\n\nA simple example may be the best way to demonstrate the usage of the\nlibrary.\n\n.. code:: python\n\n   from nest2D import Point, Box, Item, nest, SVGWriter\n\n   def add_shape1(n, items):\n       for i in range(n):\n           item = Item([\n               Point(-5000000, 8954050),\n               Point(5000000, 8954050),\n               Point(5000000, -45949),\n               Point(4972609, -568550),\n               Point(3500000, -8954050),\n               Point(-3500000, -8954050),\n               Point(-4972609, -568550),\n               Point(-5000000, -45949),\n               Point(-5000000, 8954050)\n           ])\n           items.append(item)\n\n   def add_shape2(n, items):\n       for i in range(n):\n           item = Item([\n               Point(-11750000, 13057900),\n               Point(-9807860, 15000000),\n               Point(4392139, 24000000),\n               Point(11750000, 24000000),\n               Point(11750000, -24000000),\n               Point(4392139, -24000000),\n               Point(-9807860, -15000000),\n               Point(-11750000, -13057900),\n               Point(-11750000, 13057900)\n           ])\n           items.append(item)\n\n   def main():\n       box = Box(150000000, 150000000)\n       input = []\n       add_shape1(23, input)\n       add_shape2(15, input)\n\n       pgrp = nest(input, box)\n\n       sw = SVGWriter()\n       sw.write_packgroup(pgrp)\n       sw.save()\n\nIt is worth to note that the type of the polygon carried by the Item\nobjects is the type defined as a polygon by the geometry backend. In the\nexample we use the clipper backend and clipper works with integer\ncoordinates.\n\nExample call\n------------\n\n.. code:: bash\n\n   $ pip install nest2D\n   $ python examples/simple_sample.py\n\nExample output\n--------------\n\n.. figure:: https://raw.githubusercontent.com/markfink/nest2d/master/docs/media/example_output.svg?sanitize=true\n   :alt: Alt text\n\n   Alt text\n\nLicense\n-------\n\nUnfortunately libnest2d is provided with a contractible GPL type license\nso we can not release this with better license terms. Details can be\nfound in the LICENSE file. By using, distributing, or contributing to\nthis project, you agree to the terms and conditions of this license.\n\nReferences\n==========\n\n-  `pybind11 <https://github.com/pybind/pybind11>`__\n-  `libnest2d <https://github.com/tamasmeszaros/libnest2d>`__\n-  `SVGNest <https://github.com/Jack000/SVGnest>`__\n-  `An effective heuristic for the two-dimensional irregular bin packing\n   problem <http://www.cs.stir.ac.uk/~goc/papers/EffectiveHueristic2DAOR2013.pdf>`__\n-  `Complete and robust no-fit polygon generation for the irregular\n   stock cutting\n   problem <https://www.sciencedirect.com/science/article/abs/pii/S0377221706001639>`__\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/markfink/nest2D", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nest2D", "package_url": "https://pypi.org/project/nest2D/", "platform": "", "project_url": "https://pypi.org/project/nest2D/", "project_urls": {"Homepage": "https://github.com/markfink/nest2D"}, "release_url": "https://pypi.org/project/nest2D/0.4.5/", "requires_dist": null, "requires_python": "", "summary": "2D irregular bin packaging and nesting for python", "version": "0.4.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Nest2D is a 2D bin packaging tool for python.</p>\n<p>Nest2D works with the C++ libnest2d backend for speed. For python C++\ninteroperability we use pybind11.</p>\n<p>The library is written in a way that it should be usable out of the box\nwith a very simple interface. The backend is reasonably fast and robust,\nbeing built on top of boost geometry and the\n<a href=\"http://www.angusj.com/delphi/clipper.php\" rel=\"nofollow\">polyclipping</a> library.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>A simple example may be the best way to demonstrate the usage of the\nlibrary.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nest2D</span> <span class=\"kn\">import</span> <span class=\"n\">Point</span><span class=\"p\">,</span> <span class=\"n\">Box</span><span class=\"p\">,</span> <span class=\"n\">Item</span><span class=\"p\">,</span> <span class=\"n\">nest</span><span class=\"p\">,</span> <span class=\"n\">SVGWriter</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">add_shape1</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">items</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">item</span> <span class=\"o\">=</span> <span class=\"n\">Item</span><span class=\"p\">([</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">5000000</span><span class=\"p\">,</span> <span class=\"mi\">8954050</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">5000000</span><span class=\"p\">,</span> <span class=\"mi\">8954050</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">5000000</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">45949</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">4972609</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">568550</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">3500000</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">8954050</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">3500000</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">8954050</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">4972609</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">568550</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">5000000</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">45949</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">5000000</span><span class=\"p\">,</span> <span class=\"mi\">8954050</span><span class=\"p\">)</span>\n        <span class=\"p\">])</span>\n        <span class=\"n\">items</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">add_shape2</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">items</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">item</span> <span class=\"o\">=</span> <span class=\"n\">Item</span><span class=\"p\">([</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">11750000</span><span class=\"p\">,</span> <span class=\"mi\">13057900</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">9807860</span><span class=\"p\">,</span> <span class=\"mi\">15000000</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">4392139</span><span class=\"p\">,</span> <span class=\"mi\">24000000</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">11750000</span><span class=\"p\">,</span> <span class=\"mi\">24000000</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">11750000</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">24000000</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">4392139</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">24000000</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">9807860</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">15000000</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">11750000</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">13057900</span><span class=\"p\">),</span>\n            <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">11750000</span><span class=\"p\">,</span> <span class=\"mi\">13057900</span><span class=\"p\">)</span>\n        <span class=\"p\">])</span>\n        <span class=\"n\">items</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">box</span> <span class=\"o\">=</span> <span class=\"n\">Box</span><span class=\"p\">(</span><span class=\"mi\">150000000</span><span class=\"p\">,</span> <span class=\"mi\">150000000</span><span class=\"p\">)</span>\n    <span class=\"nb\">input</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">add_shape1</span><span class=\"p\">(</span><span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"nb\">input</span><span class=\"p\">)</span>\n    <span class=\"n\">add_shape2</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"nb\">input</span><span class=\"p\">)</span>\n\n    <span class=\"n\">pgrp</span> <span class=\"o\">=</span> <span class=\"n\">nest</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">,</span> <span class=\"n\">box</span><span class=\"p\">)</span>\n\n    <span class=\"n\">sw</span> <span class=\"o\">=</span> <span class=\"n\">SVGWriter</span><span class=\"p\">()</span>\n    <span class=\"n\">sw</span><span class=\"o\">.</span><span class=\"n\">write_packgroup</span><span class=\"p\">(</span><span class=\"n\">pgrp</span><span class=\"p\">)</span>\n    <span class=\"n\">sw</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<p>It is worth to note that the type of the polygon carried by the Item\nobjects is the type defined as a polygon by the geometry backend. In the\nexample we use the clipper backend and clipper works with integer\ncoordinates.</p>\n<div id=\"example-call\">\n<h3>Example call</h3>\n<pre>$ pip install nest2D\n$ python examples/simple_sample.py\n</pre>\n</div>\n<div id=\"example-output\">\n<h3>Example output</h3>\n<div>\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7affed64c933126df9b087053dc89f20928297c1/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d61726b66696e6b2f6e65737432642f6d61737465722f646f63732f6d656469612f6578616d706c655f6f75747075742e7376673f73616e6974697a653d74727565\">\n<p>Alt text</p>\n</div>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>Unfortunately libnest2d is provided with a contractible GPL type license\nso we can not release this with better license terms. Details can be\nfound in the LICENSE file. By using, distributing, or contributing to\nthis project, you agree to the terms and conditions of this license.</p>\n</div>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<ul>\n<li><a href=\"https://github.com/pybind/pybind11\" rel=\"nofollow\">pybind11</a></li>\n<li><a href=\"https://github.com/tamasmeszaros/libnest2d\" rel=\"nofollow\">libnest2d</a></li>\n<li><a href=\"https://github.com/Jack000/SVGnest\" rel=\"nofollow\">SVGNest</a></li>\n<li><a href=\"http://www.cs.stir.ac.uk/~goc/papers/EffectiveHueristic2DAOR2013.pdf\" rel=\"nofollow\">An effective heuristic for the two-dimensional irregular bin packing\nproblem</a></li>\n<li><a href=\"https://www.sciencedirect.com/science/article/abs/pii/S0377221706001639\" rel=\"nofollow\">Complete and robust no-fit polygon generation for the irregular\nstock cutting\nproblem</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6398643, "releases": {"0.4.0": [{"comment_text": "", "digests": {"md5": "e59c6a8e8e3617499d8b4f7aec85f1eb", "sha256": "f7b4fd9b609f91aa9fb1b81b7ea635dd78a7044e6aa661a3aa147b46bdac0b27"}, "downloads": -1, "filename": "nest2D-0.4.0.tar.gz", "has_sig": false, "md5_digest": "e59c6a8e8e3617499d8b4f7aec85f1eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 180319, "upload_time": "2020-01-05T14:59:32", "upload_time_iso_8601": "2020-01-05T14:59:32.493002Z", "url": "https://files.pythonhosted.org/packages/97/95/e1ea465270c13561246aa93f19d61f7ae9071d2768ef16608e19ebb633a4/nest2D-0.4.0.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "1dc845a0de99402113efcdfb2b3370c3", "sha256": "cae3598d24cbcaa122fbd6d13885138d2c8c21a606e1b758fa509674063738dc"}, "downloads": -1, "filename": "nest2D-0.4.2.tar.gz", "has_sig": false, "md5_digest": "1dc845a0de99402113efcdfb2b3370c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 254360, "upload_time": "2020-01-05T15:37:32", "upload_time_iso_8601": "2020-01-05T15:37:32.923721Z", "url": "https://files.pythonhosted.org/packages/ca/97/2d8022e640c8b42a2be40db5a82a02cc767760f10ad2d62217104bba778c/nest2D-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "175ddf3d1c8d2def9de53b8c2e69660f", "sha256": "5f9b5dfac49cd3ff0773317a046e8892044d8f47824c0a7e714b2d89b17132cf"}, "downloads": -1, "filename": "nest2D-0.4.3.tar.gz", "has_sig": false, "md5_digest": "175ddf3d1c8d2def9de53b8c2e69660f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 315669, "upload_time": "2020-01-05T15:44:28", "upload_time_iso_8601": "2020-01-05T15:44:28.254443Z", "url": "https://files.pythonhosted.org/packages/a1/8d/bfbab5882855b0e48cc48bac677875e837346018b86834ffc574bbfd3d1a/nest2D-0.4.3.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "321ff45e76aa8708da627158dcf8f909", "sha256": "b9f9def811dcc79c3ce09d925ca13c81295805c07c3b84e14b63f75b36a0e477"}, "downloads": -1, "filename": "nest2D-0.4.5.tar.gz", "has_sig": false, "md5_digest": "321ff45e76aa8708da627158dcf8f909", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 315645, "upload_time": "2020-01-05T15:55:22", "upload_time_iso_8601": "2020-01-05T15:55:22.351223Z", "url": "https://files.pythonhosted.org/packages/a7/8a/8b905b9b1e1612b84278768b7c6789c69617473b5cbeeaca9eb9d665fa02/nest2D-0.4.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "321ff45e76aa8708da627158dcf8f909", "sha256": "b9f9def811dcc79c3ce09d925ca13c81295805c07c3b84e14b63f75b36a0e477"}, "downloads": -1, "filename": "nest2D-0.4.5.tar.gz", "has_sig": false, "md5_digest": "321ff45e76aa8708da627158dcf8f909", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 315645, "upload_time": "2020-01-05T15:55:22", "upload_time_iso_8601": "2020-01-05T15:55:22.351223Z", "url": "https://files.pythonhosted.org/packages/a7/8a/8b905b9b1e1612b84278768b7c6789c69617473b5cbeeaca9eb9d665fa02/nest2D-0.4.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:24 2020"}