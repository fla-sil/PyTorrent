{"info": {"author": "wayhome", "author_email": "y@zhihu.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# Tache\n[![Build Status](https://travis-ci.org/zhihu/tache.svg?branch=master)](https://travis-ci.org/zhihu/tache)\n[![Pypi Status](https://img.shields.io/pypi/v/tache.svg)](https://pypi.python.org/pypi/tache)\n\nTache \u662f\u4e00\u4e2a Python \u7684\u7f13\u5b58\u6846\u67b6\u3002\u5b83\u57fa\u4e8e\u5982\u4e0b\u7684\u76ee\u6807\u800c\u8bbe\u8ba1:\n\n* \u540c\u65f6\u652f\u6301 Python2 \u548c Python3\n* \u652f\u6301\u7f13\u5b58\u666e\u901a\u51fd\u6570/\u5b9e\u4f8b\u65b9\u6cd5/\u7c7b\u65b9\u6cd5/\u9759\u6001\u65b9\u6cd5\n* \u652f\u6301 Batch \u6279\u91cf\u7f13\u5b58\n* \u652f\u6301\u57fa\u4e8e Tag \u7684\u7f13\u5b58\u548c\u5931\u6548\n* \u652f\u6301\u57fa\u4e8e\u53c2\u6570\u663e\u5f0f\u58f0\u660e key \u683c\u5f0f\n\n [Documention](http://zhihu.github.io/tache)\n \n [\u9879\u76ee\u5730\u5740](https://github.com/zhihu/tache)\n\n\nContents\n---------\n* [Tag \u8be6\u7ec6\u7528\u6cd5](docs/advance_tag.md)\n* [\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570](docs/use_kwargs.md)\n* [Cache \u7a7a\u503c\u4e0e\u7f13\u5b58\u7a7f\u900f](docs/cache_null_and_miss.md)\n\n\n## Features\n\n* \u9ed8\u8ba4\u7f13\u5b58\u7a7a\u503c\uff0c\u9632\u6b62\u7a7f\u900f\n* \u57fa\u4e8etag \u6279\u91cf\u5931\u6548\u7f13\u5b58\n* batch \u6279\u91cf\u7f13\u5b58\n* \u652f\u6301 `YAML` `JSON` `PICKLE` \u591a\u79cd Backend Serializer\n\n## Getting Started\n\n* \u57fa\u672c\u7528\u6cd5\n\n```\nimport random\nimport fakeredis\nfrom tache import RedisCache\n\nredis_client = fakeredis.FakeStrictRedis()\ncache = RedisCache(conn=redis_client, format=\"JSON\")\n\n@cache.cached()\ndef add(a, b):\n    return a + b + random.randint(1,100)\n\nresult1 = add(5, 6)\n# \u7f13\u5b58\u751f\u6548\u503c\u4e0d\u53d8\nassert add(5, 6) == result1\n# \u5931\u6548\u7f13\u5b58\nadd.invalidate(5, 6)\nassert add(5, 6) != result1\n```\n\n* \u57fa\u4e8e tag \u7684\u6279\u91cf\u7f13\u5b58\u5931\u6548\n\ntag \u53ef\u4ee5\u662f\u56fa\u5b9a\u4e5f\u53ef\u4ee5\u662f\u52a8\u6001\u7684\uff0c\u5176\u4e2d\u52a8\u6001\u53c2\u6570\u4ee3\u8868\u5728\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u4f4d\u7f6e\u3002\n\u5931\u6548\u67d0\u4e2a tag \u65f6\uff0c\u4ee3\u8868\u8fd9\u4e2a\u51fd\u6570\u4e0b\u62e5\u6709\u76f8\u540c tag \u7684\u7f13\u5b58\u5168\u90e8\u5931\u6548\u3002\n\n```\n@cache.cached(tags=[\"a:{0}\"])\ndef add(a, b):\n    return a + b + random.randint(1,100)\n\nresult1 = add(5, 6) \nresult2 = add(5, 7)\nadd.invalidate_tag(\"a:5\")\nassert result1 != add(5, 6) \nassert result2 != add(5, 7)\n```\n\n\n* refresh \u5237\u65b0\u7f13\u5b58\n\n\u5f53\u8c03\u7528refresh \u65f6\uff0c\u5c06\u4f1a\u91cd\u65b0\u5237\u65b0\u7f13\u5b58\u5e76\u8fd4\u56de\u6700\u65b0\u503c\u3002\n\n\n```\nclass A(object):\n\n    def __init__(self):\n        self.extra = 0\n\n    @cache.cached()\n    def add(self, a, b):\n        self.extra += 1\n        return a + b + self.extra\n\na = A()\nassert a.add(5, 6) == 12\nassert a.extra == 1\nassert a.add.refresh(5, 6) == 13\nassert a.extra == 2\n```\n\n* batch \u7f13\u5b58\u6a21\u5f0f\n\n```\n@cache.batch()\ndef get_comments(*comment_ids):\n    return [get_comment(c) for c in comment_ids]\n\nget_comments(1,2,3,4,5) # no cache, \u8c03\u7528\u5b8c\u6bd5\u5168\u90e8\u7f13\u5b58\nget_comments(2,3,4,5,6) # 2,3,4,5 \u4ece\u7f13\u5b58\u4e2d\u53d6\uff0c6 \u5728\u8c03\u7528\u5b8c\u7f13\u5b58\nget_comments.invalidate(3,4,5) # \u5931\u6548 3,4,5 \u7684\u7f13\u5b58\n```\n\n* \u663e\u5f0f\u58f0\u660e Key\n\nTache \u5141\u8bb8\u4f60\u663e\u5f0f\u58f0\u660e Key \u7684\u751f\u6210\u89c4\u5219\uff0c \u4e0d\u8bba\u4ee3\u7801\u5982\u4f55\u91cd\u6784, \u751f\u6210\u7684 key \u90fd\u4e0d\u4f1a\u6539\u53d8\u3002\n\n```\nclass B:\n\n    def __init__(self):\n        self.count = 0\n\n    @cache.cached(\"counter.B.add|{0}-{1}\")\n    def add(self, a, b):\n        self.count += 1\n        return a + b + self.count\n```\n\n\n## Notice\n\n* \u652f\u6301 `classmethod/staticmethod` \u63cf\u8ff0\u7b26, \u4f46\u5728\u4f7f\u7528 `classmethod` \u65f6\u76ee\u524d\u5fc5\u987b\u628a\n`classmethod` \u653e\u5728\u5185\u5c42\n\n\n```\nclass AC(object):\n\n    @cache.cached()\n    @classmethod\n    def add(cls, a, b):\n        return a + b + random.randint(1,100)\n```\n\n* \u8bbe\u7f6e namespace, \u5904\u7406\u5bf9\u8c61\u5c5e\u6027\u4fee\u6539\u7684\u95ee\u9898\n\nkey \u7684\u751f\u6210\u89c4\u5219\u9ed8\u8ba4\u4e3a `namespace:module.classname.func|arg1-arg2|tag1-tag2`\u3002\n\u5176\u4e2d `namespace` \u4e3a\u7a7a, `classname` \u4e0d\u5b58\u5728\u65f6\u4e5f\u4e3a\u7a7a\u3002\n\n```\nclass A(object):\n    @cache.cache(namespace=\"v1\")\n    def add(self, a, b):\n        return db.execute(sql).fetchone()\n```\n\n\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u6570\u636e\u5e93\u5b57\u6bb5\u53d1\u751f\u66f4\u6539\uff0c\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539 namespace \u7684\u65b9\u5f0f\uff0c\u8ba9\u65b0\u8001\u4ee3\u7801\u4f7f\u7528\u4e0d\u540c\u7684\u7f13\u5b58\u7ed3\u679c\u3002", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zhihu/tache", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tache", "package_url": "https://pypi.org/project/tache/", "platform": "", "project_url": "https://pypi.org/project/tache/", "project_urls": {"Homepage": "https://github.com/zhihu/tache"}, "release_url": "https://pypi.org/project/tache/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "A tag based invalidation caching library", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Tache</h1>\n<p><a href=\"https://travis-ci.org/zhihu/tache\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cce27afaea16e2fa065616b7d8f6a7bbba64d013/68747470733a2f2f7472617669732d63692e6f72672f7a686968752f74616368652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/tache\" rel=\"nofollow\"><img alt=\"Pypi Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28dd61ca87fce8bc4b6de02d117fc768a0bf7a48/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f74616368652e737667\"></a></p>\n<p>Tache \u662f\u4e00\u4e2a Python \u7684\u7f13\u5b58\u6846\u67b6\u3002\u5b83\u57fa\u4e8e\u5982\u4e0b\u7684\u76ee\u6807\u800c\u8bbe\u8ba1:</p>\n<ul>\n<li>\u540c\u65f6\u652f\u6301 Python2 \u548c Python3</li>\n<li>\u652f\u6301\u7f13\u5b58\u666e\u901a\u51fd\u6570/\u5b9e\u4f8b\u65b9\u6cd5/\u7c7b\u65b9\u6cd5/\u9759\u6001\u65b9\u6cd5</li>\n<li>\u652f\u6301 Batch \u6279\u91cf\u7f13\u5b58</li>\n<li>\u652f\u6301\u57fa\u4e8e Tag \u7684\u7f13\u5b58\u548c\u5931\u6548</li>\n<li>\u652f\u6301\u57fa\u4e8e\u53c2\u6570\u663e\u5f0f\u58f0\u660e key \u683c\u5f0f</li>\n</ul>\n<p><a href=\"http://zhihu.github.io/tache\" rel=\"nofollow\">Documention</a></p>\n<p><a href=\"https://github.com/zhihu/tache\" rel=\"nofollow\">\u9879\u76ee\u5730\u5740</a></p>\n<h2>Contents</h2>\n<ul>\n<li><a href=\"docs/advance_tag.md\" rel=\"nofollow\">Tag \u8be6\u7ec6\u7528\u6cd5</a></li>\n<li><a href=\"docs/use_kwargs.md\" rel=\"nofollow\">\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570</a></li>\n<li><a href=\"docs/cache_null_and_miss.md\" rel=\"nofollow\">Cache \u7a7a\u503c\u4e0e\u7f13\u5b58\u7a7f\u900f</a></li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>\u9ed8\u8ba4\u7f13\u5b58\u7a7a\u503c\uff0c\u9632\u6b62\u7a7f\u900f</li>\n<li>\u57fa\u4e8etag \u6279\u91cf\u5931\u6548\u7f13\u5b58</li>\n<li>batch \u6279\u91cf\u7f13\u5b58</li>\n<li>\u652f\u6301 <code>YAML</code> <code>JSON</code> <code>PICKLE</code> \u591a\u79cd Backend Serializer</li>\n</ul>\n<h2>Getting Started</h2>\n<ul>\n<li>\u57fa\u672c\u7528\u6cd5</li>\n</ul>\n<pre><code>import random\nimport fakeredis\nfrom tache import RedisCache\n\nredis_client = fakeredis.FakeStrictRedis()\ncache = RedisCache(conn=redis_client, format=\"JSON\")\n\n@cache.cached()\ndef add(a, b):\n    return a + b + random.randint(1,100)\n\nresult1 = add(5, 6)\n# \u7f13\u5b58\u751f\u6548\u503c\u4e0d\u53d8\nassert add(5, 6) == result1\n# \u5931\u6548\u7f13\u5b58\nadd.invalidate(5, 6)\nassert add(5, 6) != result1\n</code></pre>\n<ul>\n<li>\u57fa\u4e8e tag \u7684\u6279\u91cf\u7f13\u5b58\u5931\u6548</li>\n</ul>\n<p>tag \u53ef\u4ee5\u662f\u56fa\u5b9a\u4e5f\u53ef\u4ee5\u662f\u52a8\u6001\u7684\uff0c\u5176\u4e2d\u52a8\u6001\u53c2\u6570\u4ee3\u8868\u5728\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u4f4d\u7f6e\u3002\n\u5931\u6548\u67d0\u4e2a tag \u65f6\uff0c\u4ee3\u8868\u8fd9\u4e2a\u51fd\u6570\u4e0b\u62e5\u6709\u76f8\u540c tag \u7684\u7f13\u5b58\u5168\u90e8\u5931\u6548\u3002</p>\n<pre><code>@cache.cached(tags=[\"a:{0}\"])\ndef add(a, b):\n    return a + b + random.randint(1,100)\n\nresult1 = add(5, 6) \nresult2 = add(5, 7)\nadd.invalidate_tag(\"a:5\")\nassert result1 != add(5, 6) \nassert result2 != add(5, 7)\n</code></pre>\n<ul>\n<li>refresh \u5237\u65b0\u7f13\u5b58</li>\n</ul>\n<p>\u5f53\u8c03\u7528refresh \u65f6\uff0c\u5c06\u4f1a\u91cd\u65b0\u5237\u65b0\u7f13\u5b58\u5e76\u8fd4\u56de\u6700\u65b0\u503c\u3002</p>\n<pre><code>class A(object):\n\n    def __init__(self):\n        self.extra = 0\n\n    @cache.cached()\n    def add(self, a, b):\n        self.extra += 1\n        return a + b + self.extra\n\na = A()\nassert a.add(5, 6) == 12\nassert a.extra == 1\nassert a.add.refresh(5, 6) == 13\nassert a.extra == 2\n</code></pre>\n<ul>\n<li>batch \u7f13\u5b58\u6a21\u5f0f</li>\n</ul>\n<pre><code>@cache.batch()\ndef get_comments(*comment_ids):\n    return [get_comment(c) for c in comment_ids]\n\nget_comments(1,2,3,4,5) # no cache, \u8c03\u7528\u5b8c\u6bd5\u5168\u90e8\u7f13\u5b58\nget_comments(2,3,4,5,6) # 2,3,4,5 \u4ece\u7f13\u5b58\u4e2d\u53d6\uff0c6 \u5728\u8c03\u7528\u5b8c\u7f13\u5b58\nget_comments.invalidate(3,4,5) # \u5931\u6548 3,4,5 \u7684\u7f13\u5b58\n</code></pre>\n<ul>\n<li>\u663e\u5f0f\u58f0\u660e Key</li>\n</ul>\n<p>Tache \u5141\u8bb8\u4f60\u663e\u5f0f\u58f0\u660e Key \u7684\u751f\u6210\u89c4\u5219\uff0c \u4e0d\u8bba\u4ee3\u7801\u5982\u4f55\u91cd\u6784, \u751f\u6210\u7684 key \u90fd\u4e0d\u4f1a\u6539\u53d8\u3002</p>\n<pre><code>class B:\n\n    def __init__(self):\n        self.count = 0\n\n    @cache.cached(\"counter.B.add|{0}-{1}\")\n    def add(self, a, b):\n        self.count += 1\n        return a + b + self.count\n</code></pre>\n<h2>Notice</h2>\n<ul>\n<li>\u652f\u6301 <code>classmethod/staticmethod</code> \u63cf\u8ff0\u7b26, \u4f46\u5728\u4f7f\u7528 <code>classmethod</code> \u65f6\u76ee\u524d\u5fc5\u987b\u628a\n<code>classmethod</code> \u653e\u5728\u5185\u5c42</li>\n</ul>\n<pre><code>class AC(object):\n\n    @cache.cached()\n    @classmethod\n    def add(cls, a, b):\n        return a + b + random.randint(1,100)\n</code></pre>\n<ul>\n<li>\u8bbe\u7f6e namespace, \u5904\u7406\u5bf9\u8c61\u5c5e\u6027\u4fee\u6539\u7684\u95ee\u9898</li>\n</ul>\n<p>key \u7684\u751f\u6210\u89c4\u5219\u9ed8\u8ba4\u4e3a <code>namespace:module.classname.func|arg1-arg2|tag1-tag2</code>\u3002\n\u5176\u4e2d <code>namespace</code> \u4e3a\u7a7a, <code>classname</code> \u4e0d\u5b58\u5728\u65f6\u4e5f\u4e3a\u7a7a\u3002</p>\n<pre><code>class A(object):\n    @cache.cache(namespace=\"v1\")\n    def add(self, a, b):\n        return db.execute(sql).fetchone()\n</code></pre>\n<p>\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u6570\u636e\u5e93\u5b57\u6bb5\u53d1\u751f\u66f4\u6539\uff0c\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539 namespace \u7684\u65b9\u5f0f\uff0c\u8ba9\u65b0\u8001\u4ee3\u7801\u4f7f\u7528\u4e0d\u540c\u7684\u7f13\u5b58\u7ed3\u679c\u3002</p>\n\n          </div>"}, "last_serial": 6093313, "releases": {"0.1.0": [], "0.2.0": [{"comment_text": "", "digests": {"md5": "c0ed853430cb153397ae76ff7b9176ff", "sha256": "250a386e0cc01048638cb8e2aaab23764f4cf3e6cfadc9ff9cbb597b2ed8b075"}, "downloads": -1, "filename": "tache-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c0ed853430cb153397ae76ff7b9176ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9412, "upload_time": "2017-12-20T06:09:20", "upload_time_iso_8601": "2017-12-20T06:09:20.137864Z", "url": "https://files.pythonhosted.org/packages/21/c9/85388a27769d698cd71e81f945bbc09e5df09d8de29b67471015ecef9b49/tache-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "9ee4edd944da54a1b55fc44d77b48a90", "sha256": "5b5c3d886bfc7d79002a6fd3d9ca07cea5e4711385c357660dd8bfdfbaa115a5"}, "downloads": -1, "filename": "tache-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9ee4edd944da54a1b55fc44d77b48a90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10516, "upload_time": "2019-11-07T13:27:34", "upload_time_iso_8601": "2019-11-07T13:27:34.825043Z", "url": "https://files.pythonhosted.org/packages/df/05/98a90c919a91db9406e7000b9a4e2b4145625171c96e1b471e06aa66a578/tache-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9ee4edd944da54a1b55fc44d77b48a90", "sha256": "5b5c3d886bfc7d79002a6fd3d9ca07cea5e4711385c357660dd8bfdfbaa115a5"}, "downloads": -1, "filename": "tache-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9ee4edd944da54a1b55fc44d77b48a90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10516, "upload_time": "2019-11-07T13:27:34", "upload_time_iso_8601": "2019-11-07T13:27:34.825043Z", "url": "https://files.pythonhosted.org/packages/df/05/98a90c919a91db9406e7000b9a4e2b4145625171c96e1b471e06aa66a578/tache-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:32 2020"}