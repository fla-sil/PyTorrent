{"info": {"author": "Trent Mick", "author_email": "trentm@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.4", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.1", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "`eol` is both a command-line script `eol` and a Python module `eol` for working\nwith end-of-line chars in text files.\n\nThis project lives here: <http://github.com/trentm/eol>\n\n## Installation\n\nTo install in your Python's global site-packages use one of the\nfollowing:\n\n    pip install eol\n    pypm install eol   # if you use ActivePython (http://www.activestate.com/activepython)\n\nBut you use a\n[virtualenv](http://www.arthurkoziel.com/2008/10/22/working-virtualenv/),\nright? If so, then use one of the following:\n\n    pip -E path/to/env install eol\n    pypm -E path/to/env install eol\n\n\n## Command-line examples\n\n**List the EOL-style** of given paths:\n\n    $ eol *.txt\n    foo_cr.txt: Mac Classic (CR)\n    foo_crlf.txt: Windows (CRLF)\n    foo_empty.txt: No EOLs\n    foo_lf.txt: Unix (LF)\n    foo_mixed.txt: Mixed, predominantly Unix (LF)\n\nRecursively:\n    \n    $ eol -r ~/src/redis\n    /Users/trentm/src/redis/.gitignore: Unix (LF)\n    /Users/trentm/src/redis/BETATESTING.txt: Unix (LF)\n    /Users/trentm/src/redis/BUGS: Unix (LF)\n    /Users/trentm/src/redis/COPYING: Unix (LF)\n    ...\n    /Users/trentm/src/redis/zmalloc.h: Unix (LF)\n    /Users/trentm/src/redis/.git/HEAD: Unix (LF)\n    /Users/trentm/src/redis/.git/config: Unix (LF)\n    ...\n    /Users/trentm/src/redis/client-libraries/README: Unix (LF)\n    /Users/trentm/src/redis/design-documents/REDIS-CLUSTER: Unix (LF)\n    /Users/trentm/src/redis/doc/AppendOnlyFileHowto.html: Unix (LF)\n    /Users/trentm/src/redis/doc/AuthCommand.html: Unix (LF)\n    ...\n\n**Find files** with the given EOL-style:\n\n    $ eol -f dos -x .svn -r ~/src/python\n    /Users/trentm/src/python/Doc/make.bat\n    /Users/trentm/src/python/Lib/email/test/data/msg_26.txt\n    /Users/trentm/src/python/Lib/encodings/cp720.py\n    /Users/trentm/src/python/Lib/test/decimaltestdata/and.decTest\n    ...\n    /Users/trentm/src/python/PC/VS8.0/x64.vsprops\n    /Users/trentm/src/python/PCbuild/pcbuild.sln\n    ...\n\n**Convert files** to a given EOL-style:\n\n    $ eol ~/src/python/Tools/msi/merge.py\n    /Users/trentm/src/python/Tools/msi/merge.py: Windows (CRLF)\n    $ eol -c cr ~/src/python/Tools/msi/merge.py\n    \n    # But who really wants CR (aka Mac Classic, '\\r') EOLs.\n    # \"native\" is an alias for the EOL-style native to the current platform\n    $ eol -c native ~/src/python/Tools/msi/merge.py\n    converted `/Users/trentm/src/python/Tools/msi/merge.py' to LF EOLs\n    $ eol ~/src/python/Tools/msi/merge.py\n    /Users/trentm/src/python/Tools/msi/merge.py: Unix (LF)\n\n\n## Module examples\n\n**List the EOL-style** of given paths:\n\n    >>> import eol, glob\n    >>> for path in glob.glob(\"*.txt\")\n    >>> for path in glob.glob(\"*.txt\"):\n    ...   print path, eol.eol_info_from_path(path)\n    ... \n    foo_cr.txt ('\\r', '\\r')         # (<detected-eols>, <suggested-eols>)\n    foo_crlf.txt ('\\r\\n', '\\r\\n')\n    foo_empty.txt (None, '\\n')      # suggests the native EOL for empty content\n    foo_lf.txt ('\\n', '\\n')\n    foo_mixed.txt (<class 'eol.MIXED'>, '\\n')\n\nRecursively:\n    \n    >>> for i in eol.eol_info_from_path_patterns([\"/Users/trentm/src/redis\"], recursive=True): print i\n    ... \n    ('/Users/trentm/src/redis/.gitignore', '\\n', '\\n')\n    ('/Users/trentm/src/redis/BETATESTING.txt', '\\n', '\\n')\n    ('/Users/trentm/src/redis/BUGS', '\\n', '\\n')\n    ('/Users/trentm/src/redis/COPYING', '\\n', '\\n')\n    ...\n\n**Convert files** to a given EOL-style:\n\n    >>> path = \"/Users/trentm/src/python/Tools/msi/merge.py\"\n    >>> eol.eol_info_from_path(path)\n    ('\\r\\n', '\\r\\n')\n    >>> eol.convert_path_eol(path, \"\\n\")\n    >>> eol.eol_info_from_path(path)\n    ('\\n', '\\n')", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/trentm/eol", "keywords": "eol cli cr crlf lf", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "eol", "package_url": "https://pypi.org/project/eol/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/eol/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/trentm/eol"}, "release_url": "https://pypi.org/project/eol/0.7.5/", "requires_dist": null, "requires_python": null, "summary": "a command-line script and Python module for working with text file end-of-line (EOL) characters", "version": "0.7.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            `eol` is both a command-line script `eol` and a Python module `eol` for working<br>with end-of-line chars in text files.<br><br>This project lives here: &lt;http://github.com/trentm/eol&gt;<br><br>## Installation<br><br>To install in your Python's global site-packages use one of the<br>following:<br><br>    pip install eol<br>    pypm install eol   # if you use ActivePython (http://www.activestate.com/activepython)<br><br>But you use a<br>[virtualenv](http://www.arthurkoziel.com/2008/10/22/working-virtualenv/),<br>right? If so, then use one of the following:<br><br>    pip -E path/to/env install eol<br>    pypm -E path/to/env install eol<br><br><br>## Command-line examples<br><br>**List the EOL-style** of given paths:<br><br>    $ eol *.txt<br>    foo_cr.txt: Mac Classic (CR)<br>    foo_crlf.txt: Windows (CRLF)<br>    foo_empty.txt: No EOLs<br>    foo_lf.txt: Unix (LF)<br>    foo_mixed.txt: Mixed, predominantly Unix (LF)<br><br>Recursively:<br>    <br>    $ eol -r ~/src/redis<br>    /Users/trentm/src/redis/.gitignore: Unix (LF)<br>    /Users/trentm/src/redis/BETATESTING.txt: Unix (LF)<br>    /Users/trentm/src/redis/BUGS: Unix (LF)<br>    /Users/trentm/src/redis/COPYING: Unix (LF)<br>    ...<br>    /Users/trentm/src/redis/zmalloc.h: Unix (LF)<br>    /Users/trentm/src/redis/.git/HEAD: Unix (LF)<br>    /Users/trentm/src/redis/.git/config: Unix (LF)<br>    ...<br>    /Users/trentm/src/redis/client-libraries/README: Unix (LF)<br>    /Users/trentm/src/redis/design-documents/REDIS-CLUSTER: Unix (LF)<br>    /Users/trentm/src/redis/doc/AppendOnlyFileHowto.html: Unix (LF)<br>    /Users/trentm/src/redis/doc/AuthCommand.html: Unix (LF)<br>    ...<br><br>**Find files** with the given EOL-style:<br><br>    $ eol -f dos -x .svn -r ~/src/python<br>    /Users/trentm/src/python/Doc/make.bat<br>    /Users/trentm/src/python/Lib/email/test/data/msg_26.txt<br>    /Users/trentm/src/python/Lib/encodings/cp720.py<br>    /Users/trentm/src/python/Lib/test/decimaltestdata/and.decTest<br>    ...<br>    /Users/trentm/src/python/PC/VS8.0/x64.vsprops<br>    /Users/trentm/src/python/PCbuild/pcbuild.sln<br>    ...<br><br>**Convert files** to a given EOL-style:<br><br>    $ eol ~/src/python/Tools/msi/merge.py<br>    /Users/trentm/src/python/Tools/msi/merge.py: Windows (CRLF)<br>    $ eol -c cr ~/src/python/Tools/msi/merge.py<br>    <br>    # But who really wants CR (aka Mac Classic, '\\r') EOLs.<br>    # \"native\" is an alias for the EOL-style native to the current platform<br>    $ eol -c native ~/src/python/Tools/msi/merge.py<br>    converted `/Users/trentm/src/python/Tools/msi/merge.py' to LF EOLs<br>    $ eol ~/src/python/Tools/msi/merge.py<br>    /Users/trentm/src/python/Tools/msi/merge.py: Unix (LF)<br><br><br>## Module examples<br><br>**List the EOL-style** of given paths:<br><br>    &gt;&gt;&gt; import eol, glob<br>    &gt;&gt;&gt; for path in glob.glob(\"*.txt\")<br>    &gt;&gt;&gt; for path in glob.glob(\"*.txt\"):<br>    ...   print path, eol.eol_info_from_path(path)<br>    ... <br>    foo_cr.txt ('\\r', '\\r')         # (&lt;detected-eols&gt;, &lt;suggested-eols&gt;)<br>    foo_crlf.txt ('\\r\\n', '\\r\\n')<br>    foo_empty.txt (None, '\\n')      # suggests the native EOL for empty content<br>    foo_lf.txt ('\\n', '\\n')<br>    foo_mixed.txt (&lt;class 'eol.MIXED'&gt;, '\\n')<br><br>Recursively:<br>    <br>    &gt;&gt;&gt; for i in eol.eol_info_from_path_patterns([\"/Users/trentm/src/redis\"], recursive=True): print i<br>    ... <br>    ('/Users/trentm/src/redis/.gitignore', '\\n', '\\n')<br>    ('/Users/trentm/src/redis/BETATESTING.txt', '\\n', '\\n')<br>    ('/Users/trentm/src/redis/BUGS', '\\n', '\\n')<br>    ('/Users/trentm/src/redis/COPYING', '\\n', '\\n')<br>    ...<br><br>**Convert files** to a given EOL-style:<br><br>    &gt;&gt;&gt; path = \"/Users/trentm/src/python/Tools/msi/merge.py\"<br>    &gt;&gt;&gt; eol.eol_info_from_path(path)<br>    ('\\r\\n', '\\r\\n')<br>    &gt;&gt;&gt; eol.convert_path_eol(path, \"\\n\")<br>    &gt;&gt;&gt; eol.eol_info_from_path(path)<br>    ('\\n', '\\n')\n          </div>"}, "last_serial": 791676, "releases": {"0.7.0": [{"comment_text": "", "digests": {"md5": "315f4f296851c5493fb15016b9a805f6", "sha256": "5e31d0e194332fca0bf529d6908d5b4ba83ce9417c86dda51dafe3c24d0b402b"}, "downloads": -1, "filename": "eol-0.7.0.zip", "has_sig": false, "md5_digest": "315f4f296851c5493fb15016b9a805f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14441, "upload_time": "2010-05-19T09:04:19", "upload_time_iso_8601": "2010-05-19T09:04:19.924967Z", "url": "https://files.pythonhosted.org/packages/b4/b3/4067d3e0f5878d70bc1a4576cfb0a9d1d5c3eda58dafb7e2b9e53ee67b22/eol-0.7.0.zip", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "26f2778ba9e449c4df26300c708f608b", "sha256": "8a80df8bfede631ef90610d725e61d636911ab9d33be1b9ffdbcb5f807a4868f"}, "downloads": -1, "filename": "eol-0.7.1.zip", "has_sig": false, "md5_digest": "26f2778ba9e449c4df26300c708f608b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15119, "upload_time": "2010-05-21T06:42:47", "upload_time_iso_8601": "2010-05-21T06:42:47.854591Z", "url": "https://files.pythonhosted.org/packages/bd/33/9b0ca4f4cc415205d619207f39c9fc7cc98f215f91482096f650982c15a9/eol-0.7.1.zip", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "35e5396092aacbc73b0579f2c90fbac7", "sha256": "fc48c4e332c2026dfbc6049939b9d5893f763ab0dd0fc20f9837de813dbbc221"}, "downloads": -1, "filename": "eol-0.7.2.zip", "has_sig": false, "md5_digest": "35e5396092aacbc73b0579f2c90fbac7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15280, "upload_time": "2010-06-12T06:53:59", "upload_time_iso_8601": "2010-06-12T06:53:59.730044Z", "url": "https://files.pythonhosted.org/packages/ed/5c/8062cc6696c4581711e7822f2a566c8de63ee804f6cf51c665d395179224/eol-0.7.2.zip", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "c9cd4b8d02bf7c20ec072c8e442cb676", "sha256": "8b744fe260978e7645b964011aebe2c8425a3fea5ea0ada5b1b061bd9f3d810e"}, "downloads": -1, "filename": "eol-0.7.3.zip", "has_sig": false, "md5_digest": "c9cd4b8d02bf7c20ec072c8e442cb676", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16208, "upload_time": "2010-06-18T05:46:27", "upload_time_iso_8601": "2010-06-18T05:46:27.634098Z", "url": "https://files.pythonhosted.org/packages/50/9d/429ad7efdce2b9fa1a356c6785554cadd453aebad652038d45ca8adefb16/eol-0.7.3.zip", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "208c858ef3846f22e25940a13d2d8e56", "sha256": "3b2daa2c58187fc6851dbfaeacd2e46f39708c59db8b8b09fed1b38bdf53c79b"}, "downloads": -1, "filename": "eol-0.7.4.zip", "has_sig": false, "md5_digest": "208c858ef3846f22e25940a13d2d8e56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25927, "upload_time": "2010-07-13T06:37:06", "upload_time_iso_8601": "2010-07-13T06:37:06.045200Z", "url": "https://files.pythonhosted.org/packages/ad/ee/f3aa2f7260824a2b16e4cba85a2d16b64faf7a03ffe7b00e00a495ed69dc/eol-0.7.4.zip", "yanked": false}], "0.7.5": [{"comment_text": "", "digests": {"md5": "6becb0e915b475552e1be477f2a49fae", "sha256": "1a30348a5cddbf0fc16309c9f284b761a624eda33357b42c81256325185ce3bd"}, "downloads": -1, "filename": "eol-0.7.5.zip", "has_sig": false, "md5_digest": "6becb0e915b475552e1be477f2a49fae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25271, "upload_time": "2010-10-24T07:12:02", "upload_time_iso_8601": "2010-10-24T07:12:02.006394Z", "url": "https://files.pythonhosted.org/packages/25/f5/b0019907b9f0e7885191de507a18cbe018c58006a2f4576ca11604b14338/eol-0.7.5.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6becb0e915b475552e1be477f2a49fae", "sha256": "1a30348a5cddbf0fc16309c9f284b761a624eda33357b42c81256325185ce3bd"}, "downloads": -1, "filename": "eol-0.7.5.zip", "has_sig": false, "md5_digest": "6becb0e915b475552e1be477f2a49fae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25271, "upload_time": "2010-10-24T07:12:02", "upload_time_iso_8601": "2010-10-24T07:12:02.006394Z", "url": "https://files.pythonhosted.org/packages/25/f5/b0019907b9f0e7885191de507a18cbe018c58006a2f4576ca11604b14338/eol-0.7.5.zip", "yanked": false}], "timestamp": "Fri May  8 00:46:05 2020"}