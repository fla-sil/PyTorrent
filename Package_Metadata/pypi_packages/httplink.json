{"info": {"author": "J\u00f6rn Heissler", "author_email": "NOSPAM-httplink@joern.heissler.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "HTTP Link Header Parser\n=======================\n\nPython (>= 3.6) library for parsing RFC 8288 HTTP Link headers.\n\n.. code-block:: python3\n\n    from httplink import parse_link_header\n    result = parse_link_header('''\n       <https://example.com/foo/index.html>; rel=index;\n       foo*=UTF-8'en'b%c3%a5r, </path#frag>;rel=\"what ever\"\n    ''')\n\n    ## Target URL:\n    print(result['index'].target)\n    # https://example.com/foo/index.html\n\n    ## Set of link relations:\n    print(result['index'].rel)\n    # {'index'}\n\n    ## Decoded attribute value:\n    print(result['index']['foo'])\n    # b\u00e5r\n\n    ## Raw undecoded attributes:\n    print(result['index'].attributes)\n    # [('rel', 'index'), ('foo*', \"UTF-8'en'b%c3%a5r\")]\n\n    ## Iterate over all links:\n    for link in result.links:\n        print(link.rel, link.target)\n    # {'index'} https://example.com/foo/index.html\n    # {'ever', 'what'} /path#frag\n\n\nMultiple Link headers can be parsed at the same time if you concatenate them with ``,``.\n\nRedundant white space and comma delimiters are ignored.\n\n``[\"key\"]``-access is always case-insensitive.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/joernheissler/httplink", "keywords": "rfc8288,Web Linking", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "httplink", "package_url": "https://pypi.org/project/httplink/", "platform": "", "project_url": "https://pypi.org/project/httplink/", "project_urls": {"Homepage": "https://github.com/joernheissler/httplink"}, "release_url": "https://pypi.org/project/httplink/0.1.0/", "requires_dist": null, "requires_python": ">= 3.6", "summary": "Library for parsing RFC 8288 \"Link\" HTTP headers", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python (&gt;= 3.6) library for parsing RFC 8288 HTTP Link headers.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">httplink</span> <span class=\"kn\">import</span> <span class=\"n\">parse_link_header</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">parse_link_header</span><span class=\"p\">(</span><span class=\"s1\">'''\n   &lt;https://example.com/foo/index.html&gt;; rel=index;\n   foo*=UTF-8'en'b</span><span class=\"si\">%c</span><span class=\"s1\">3</span><span class=\"si\">%a</span><span class=\"s1\">5r, &lt;/path#frag&gt;;rel=\"what ever\"\n'''</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## Target URL:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'index'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">)</span>\n<span class=\"c1\"># https://example.com/foo/index.html</span>\n\n<span class=\"c1\">## Set of link relations:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'index'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">rel</span><span class=\"p\">)</span>\n<span class=\"c1\"># {'index'}</span>\n\n<span class=\"c1\">## Decoded attribute value:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'index'</span><span class=\"p\">][</span><span class=\"s1\">'foo'</span><span class=\"p\">])</span>\n<span class=\"c1\"># b\u00e5r</span>\n\n<span class=\"c1\">## Raw undecoded attributes:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'index'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">attributes</span><span class=\"p\">)</span>\n<span class=\"c1\"># [('rel', 'index'), ('foo*', \"UTF-8'en'b%c3%a5r\")]</span>\n\n<span class=\"c1\">## Iterate over all links:</span>\n<span class=\"k\">for</span> <span class=\"n\">link</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">links</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">link</span><span class=\"o\">.</span><span class=\"n\">rel</span><span class=\"p\">,</span> <span class=\"n\">link</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">)</span>\n<span class=\"c1\"># {'index'} https://example.com/foo/index.html</span>\n<span class=\"c1\"># {'ever', 'what'} /path#frag</span>\n</pre>\n<p>Multiple Link headers can be parsed at the same time if you concatenate them with <tt>,</tt>.</p>\n<p>Redundant white space and comma delimiters are ignored.</p>\n<p><tt>[\"key\"]</tt>-access is always case-insensitive.</p>\n\n          </div>"}, "last_serial": 4664496, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "74e77f1355a26c198c74420f8271d37b", "sha256": "c54717820463965820bc5eed2569a4746c941c1a2d0f4adfd6853d61a364943b"}, "downloads": -1, "filename": "httplink-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "74e77f1355a26c198c74420f8271d37b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 5012, "upload_time": "2019-01-05T23:49:06", "upload_time_iso_8601": "2019-01-05T23:49:06.148580Z", "url": "https://files.pythonhosted.org/packages/90/73/762b31baa5704bbe0b3653ef65b3d48022d45b97a8f873cdb6a16b55d956/httplink-0.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "74e77f1355a26c198c74420f8271d37b", "sha256": "c54717820463965820bc5eed2569a4746c941c1a2d0f4adfd6853d61a364943b"}, "downloads": -1, "filename": "httplink-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "74e77f1355a26c198c74420f8271d37b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 5012, "upload_time": "2019-01-05T23:49:06", "upload_time_iso_8601": "2019-01-05T23:49:06.148580Z", "url": "https://files.pythonhosted.org/packages/90/73/762b31baa5704bbe0b3653ef65b3d48022d45b97a8f873cdb6a16b55d956/httplink-0.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:50:06 2020"}