{"info": {"author": "Valassis Digital", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# Theto: workflow automation for exploring location data\n\nAny visualization requires a large number of trivial decisions that, when added up, result in a non-trivial \nimpact on the quality and usability of the visualization. This is especially true of geospatial visualization,\nwhere data needs to transformed fit a particular map projection or a particular map tile service needs to be \nconfigured to contextualize the plot. `Theto` abstracts a lot of this overhead so more time can be devoted\nto looking at and understanding the data. A `Theto` instance allows users to:\n\n1. Store api keys, palettes, and other static resources repeatedly needed throughout a typical visualization \npipeline.\n2. Load data sources, format coordinate data to stage it for all foreseeable downstream needs, and append metadata. \n3. Add widgets to interactively filter what the final visualization shows, and infer the appropriate parameters\nfor those widgets based on the source data.\n4. Determine plot bounds, size, map zoom level, and other parameters in ways that accommodate the data. \n5. Add layers of visualization, including tooltips and other visual aids, including connections between data points.\n6. Render the plot, either in the notebook or by saving to file, optionally appending an interactive legend.\n\n\"Theto\" is a transliteration of the Greek word \u0398\u03ad\u03c4\u03c9, which means \"I place\" or \"I situate\", or simply \"I put\". \nThat's what the tool does: it puts geospatial data where it needs to be so users can spend their time looking\nat and making sense of what's there.\n\nA Jupyter notebook demonstrating a lot of `Theto`'s functionality can be found here:\n\nhttps://nbviewer.jupyter.org/github/Valassis-Digital-Media/theto/blob/master/theto_demo_notebook.ipynb\n\n## Installation\nTo install from PyPI:\n\n`pip install theto`\n\n`conda` installation coming soon.\n\n## Supported data representations\nData can be loaded in a variety of formats (geohashes, WKT, shapely objects, GeoJSON, or coordinate pairs). The tool \nwill automatically detect the format and process it appropriately. Likewise, any input can be rendered as the original \nshape itself (a polygon) or as the centroid of the shape (a point). Polygons are rendered using Bokeh's \n`MultiPolygons` glyph. Points can be rendered using any of Bokeh's marker glyphs.\n\n## Limitations\n`Theto` is designed for interactive exploration, and is therefore appropriate for small-to-medium sized data. \nA very rough benchmark indicated that it takes about 5 seconds to plot every 50,000 points (a polygon might contain \nvery many individual points) in a Jupyer notebook, and the notebook freezes at around 250,000 points. Outputting to \nfile and viewing in a separate browser window should allow up to around 1 million points. For larger visualization, \nsee http://datashader.org/.\n\n## Contributing\nWe welcome issues and pull requests that help improve the variety of data sources and plot elements Theto \nsupports, its usability, and its re-usability within other tools.\n\n## License\nCopyright (c) 2019 Valassis Digital under the terms of the BSD 3-Clause license\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Valassis-Digital-Media/theto", "keywords": "", "license": "BSD 3-Clause", "maintainer": "", "maintainer_email": "", "name": "theto", "package_url": "https://pypi.org/project/theto/", "platform": "Linux", "project_url": "https://pypi.org/project/theto/", "project_urls": {"Homepage": "https://github.com/Valassis-Digital-Media/theto"}, "release_url": "https://pypi.org/project/theto/0.2.1/", "requires_dist": ["bokeh (>=1.0)", "pandas", "numpy", "shapely", "pyproj"], "requires_python": "", "summary": "Workflow automation for exploring location data", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Theto: workflow automation for exploring location data</h1>\n<p>Any visualization requires a large number of trivial decisions that, when added up, result in a non-trivial\nimpact on the quality and usability of the visualization. This is especially true of geospatial visualization,\nwhere data needs to transformed fit a particular map projection or a particular map tile service needs to be\nconfigured to contextualize the plot. <code>Theto</code> abstracts a lot of this overhead so more time can be devoted\nto looking at and understanding the data. A <code>Theto</code> instance allows users to:</p>\n<ol>\n<li>Store api keys, palettes, and other static resources repeatedly needed throughout a typical visualization\npipeline.</li>\n<li>Load data sources, format coordinate data to stage it for all foreseeable downstream needs, and append metadata.</li>\n<li>Add widgets to interactively filter what the final visualization shows, and infer the appropriate parameters\nfor those widgets based on the source data.</li>\n<li>Determine plot bounds, size, map zoom level, and other parameters in ways that accommodate the data.</li>\n<li>Add layers of visualization, including tooltips and other visual aids, including connections between data points.</li>\n<li>Render the plot, either in the notebook or by saving to file, optionally appending an interactive legend.</li>\n</ol>\n<p>\"Theto\" is a transliteration of the Greek word \u0398\u03ad\u03c4\u03c9, which means \"I place\" or \"I situate\", or simply \"I put\".\nThat's what the tool does: it puts geospatial data where it needs to be so users can spend their time looking\nat and making sense of what's there.</p>\n<p>A Jupyter notebook demonstrating a lot of <code>Theto</code>'s functionality can be found here:</p>\n<p><a href=\"https://nbviewer.jupyter.org/github/Valassis-Digital-Media/theto/blob/master/theto_demo_notebook.ipynb\" rel=\"nofollow\">https://nbviewer.jupyter.org/github/Valassis-Digital-Media/theto/blob/master/theto_demo_notebook.ipynb</a></p>\n<h2>Installation</h2>\n<p>To install from PyPI:</p>\n<p><code>pip install theto</code></p>\n<p><code>conda</code> installation coming soon.</p>\n<h2>Supported data representations</h2>\n<p>Data can be loaded in a variety of formats (geohashes, WKT, shapely objects, GeoJSON, or coordinate pairs). The tool\nwill automatically detect the format and process it appropriately. Likewise, any input can be rendered as the original\nshape itself (a polygon) or as the centroid of the shape (a point). Polygons are rendered using Bokeh's\n<code>MultiPolygons</code> glyph. Points can be rendered using any of Bokeh's marker glyphs.</p>\n<h2>Limitations</h2>\n<p><code>Theto</code> is designed for interactive exploration, and is therefore appropriate for small-to-medium sized data.\nA very rough benchmark indicated that it takes about 5 seconds to plot every 50,000 points (a polygon might contain\nvery many individual points) in a Jupyer notebook, and the notebook freezes at around 250,000 points. Outputting to\nfile and viewing in a separate browser window should allow up to around 1 million points. For larger visualization,\nsee <a href=\"http://datashader.org/\" rel=\"nofollow\">http://datashader.org/</a>.</p>\n<h2>Contributing</h2>\n<p>We welcome issues and pull requests that help improve the variety of data sources and plot elements Theto\nsupports, its usability, and its re-usability within other tools.</p>\n<h2>License</h2>\n<p>Copyright (c) 2019 Valassis Digital under the terms of the BSD 3-Clause license</p>\n\n          </div>"}, "last_serial": 6479541, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "05aed193f81ad5d14a9be2a7d65cb634", "sha256": "4fb21335668d99e2332a771230996f583ecba6e7271b5bd14f32764454081388"}, "downloads": -1, "filename": "theto-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "05aed193f81ad5d14a9be2a7d65cb634", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18462, "upload_time": "2019-04-19T12:52:57", "upload_time_iso_8601": "2019-04-19T12:52:57.503047Z", "url": "https://files.pythonhosted.org/packages/de/9a/4eff073cb889cdcd68b0579334481740752d37229ef79a0ccc1d3c511f1a/theto-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b65725acc417891299c4f1fd9a07e8f8", "sha256": "07bdb321e305fdd0e7f1a24923ec9d255b738e3b2449e699ec49fd4e8bc427cd"}, "downloads": -1, "filename": "theto-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b65725acc417891299c4f1fd9a07e8f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17466, "upload_time": "2019-04-19T12:52:59", "upload_time_iso_8601": "2019-04-19T12:52:59.739237Z", "url": "https://files.pythonhosted.org/packages/0e/87/cf6f147c034e7bdf3b07f2017fc0a8b47582c2e2bef5424106e43e985601/theto-0.1.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d1f43cf804fe424be7a0bc4f2474a12f", "sha256": "7f7940c0122e3debbd73824cfbb7e61060ada73a0a758b3e508aec2ef31e4852"}, "downloads": -1, "filename": "theto-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d1f43cf804fe424be7a0bc4f2474a12f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23068, "upload_time": "2020-01-18T21:08:59", "upload_time_iso_8601": "2020-01-18T21:08:59.603824Z", "url": "https://files.pythonhosted.org/packages/02/37/bc49a27ea9dc849825b5d475b5612815d48da92145fa034c74d3d4f82452/theto-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ded5ea0f07bdb08671b4699f7e5809e2", "sha256": "f3a094333e6a84d6b9256e7e18cb46a1e5244b0b24c4649055f0c925ad0a5d0b"}, "downloads": -1, "filename": "theto-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ded5ea0f07bdb08671b4699f7e5809e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21842, "upload_time": "2020-01-18T21:09:00", "upload_time_iso_8601": "2020-01-18T21:09:00.766778Z", "url": "https://files.pythonhosted.org/packages/8c/2e/01481bbc6c924fbd938da907725d7b43a85365c0e8bcefb9c767b4b3e8c8/theto-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d1f43cf804fe424be7a0bc4f2474a12f", "sha256": "7f7940c0122e3debbd73824cfbb7e61060ada73a0a758b3e508aec2ef31e4852"}, "downloads": -1, "filename": "theto-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d1f43cf804fe424be7a0bc4f2474a12f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23068, "upload_time": "2020-01-18T21:08:59", "upload_time_iso_8601": "2020-01-18T21:08:59.603824Z", "url": "https://files.pythonhosted.org/packages/02/37/bc49a27ea9dc849825b5d475b5612815d48da92145fa034c74d3d4f82452/theto-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ded5ea0f07bdb08671b4699f7e5809e2", "sha256": "f3a094333e6a84d6b9256e7e18cb46a1e5244b0b24c4649055f0c925ad0a5d0b"}, "downloads": -1, "filename": "theto-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ded5ea0f07bdb08671b4699f7e5809e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21842, "upload_time": "2020-01-18T21:09:00", "upload_time_iso_8601": "2020-01-18T21:09:00.766778Z", "url": "https://files.pythonhosted.org/packages/8c/2e/01481bbc6c924fbd938da907725d7b43a85365c0e8bcefb9c767b4b3e8c8/theto-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:00 2020"}