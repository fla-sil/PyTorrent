{"info": {"author": "Anton Tsitsulin", "author_email": "anton.tsitsulin@hpi.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Mathematics"], "description": "===============================\nNetLSD\n===============================\n\nNetLSD is a family of spectral graph descriptros. Given a graph, NetLSD computes a low-dimensional vector representation that can be used for different tasks.\n\nQuick start\n-----------\n\n.. code-block:: python\n\n    import netlsd\n    import networkx as nx\n\n    g = nx.erdos_renyi_graph(100, 0.01) # create a random graph with 100 nodes\n    descriptor = netlsd.heat(g) # compute the signature\n\nThat's it! Then, signatures of two graphs can be compared easily. NetLSD supports `networkx <http://networkx.github.io/>`_, `graph_tool <https://graph-tool.skewed.de/>`_, and `igraph <http://igraph.org/python/>`_ packages natively.\n\n.. code-block:: python\n\n    import netlsd\n    import numpy as np\n\n    distance = netlsd.compare(desc1, desc2) # compare the signatures using l2 distance\n    distance = np.linalg.norm(desc1 - desc2) # equivalent\n\n\nFor more advanced usage, check out `online documentation <http://netlsd.readthedocs.org/>`_.\n\n\nRequirements\n------------\n* numpy\n* scipy\n\n\nInstallation\n------------\n#. cd netlsd\n#. pip install -r requirements.txt \n#. python setup.py install\n\nOr simply ``pip install netlsd``\n\nCiting\n------\nIf you find NetLSD useful in your research, we ask that you cite the following paper::\n\n    @inproceedings{Tsitsulin:2018:KDD,\n     author={Tsitsulin, Anton and Mottin, Davide and Karras, Panagiotis and Bronstein, Alex and M{\\\"u}ller, Emmanuel},\n     title={NetLSD: Hearing the Shape of a Graph},\n     booktitle = {Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},\n     series = {KDD '18},\n     year = {2018},\n    } \n\nMisc\n----\n\nNetLSD - Hearing the shape of graphs.\n\n* MIT license\n* Documentation: http://netlsd.readthedocs.org", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/xgfs/netlsd/archive/0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/xgfs/netlsd", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "NetLSD", "package_url": "https://pypi.org/project/NetLSD/", "platform": "", "project_url": "https://pypi.org/project/NetLSD/", "project_urls": {"Download": "https://github.com/xgfs/netlsd/archive/0.1.tar.gz", "Homepage": "http://github.com/xgfs/netlsd"}, "release_url": "https://pypi.org/project/NetLSD/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "NetLSD descriptors for graphs. Compare and analyze graph structure on multiple levels!", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>NetLSD is a family of spectral graph descriptros. Given a graph, NetLSD computes a low-dimensional vector representation that can be used for different tasks.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">netlsd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">networkx</span> <span class=\"k\">as</span> <span class=\"nn\">nx</span>\n\n<span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">erdos_renyi_graph</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">)</span> <span class=\"c1\"># create a random graph with 100 nodes</span>\n<span class=\"n\">descriptor</span> <span class=\"o\">=</span> <span class=\"n\">netlsd</span><span class=\"o\">.</span><span class=\"n\">heat</span><span class=\"p\">(</span><span class=\"n\">g</span><span class=\"p\">)</span> <span class=\"c1\"># compute the signature</span>\n</pre>\n<p>That\u2019s it! Then, signatures of two graphs can be compared easily. NetLSD supports <a href=\"http://networkx.github.io/\" rel=\"nofollow\">networkx</a>, <a href=\"https://graph-tool.skewed.de/\" rel=\"nofollow\">graph_tool</a>, and <a href=\"http://igraph.org/python/\" rel=\"nofollow\">igraph</a> packages natively.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">netlsd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">distance</span> <span class=\"o\">=</span> <span class=\"n\">netlsd</span><span class=\"o\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">desc1</span><span class=\"p\">,</span> <span class=\"n\">desc2</span><span class=\"p\">)</span> <span class=\"c1\"># compare the signatures using l2 distance</span>\n<span class=\"n\">distance</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">desc1</span> <span class=\"o\">-</span> <span class=\"n\">desc2</span><span class=\"p\">)</span> <span class=\"c1\"># equivalent</span>\n</pre>\n<p>For more advanced usage, check out <a href=\"http://netlsd.readthedocs.org/\" rel=\"nofollow\">online documentation</a>.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>numpy</li>\n<li>scipy</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li>cd netlsd</li>\n<li>pip install -r requirements.txt</li>\n<li>python setup.py install</li>\n</ol>\n<p>Or simply <tt>pip install netlsd</tt></p>\n</div>\n<div id=\"citing\">\n<h2>Citing</h2>\n<p>If you find NetLSD useful in your research, we ask that you cite the following paper:</p>\n<pre>@inproceedings{Tsitsulin:2018:KDD,\n author={Tsitsulin, Anton and Mottin, Davide and Karras, Panagiotis and Bronstein, Alex and M{\\\"u}ller, Emmanuel},\n title={NetLSD: Hearing the Shape of a Graph},\n booktitle = {Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},\n series = {KDD '18},\n year = {2018},\n}\n</pre>\n</div>\n<div id=\"misc\">\n<h2>Misc</h2>\n<p>NetLSD - Hearing the shape of graphs.</p>\n<ul>\n<li>MIT license</li>\n<li>Documentation: <a href=\"http://netlsd.readthedocs.org\" rel=\"nofollow\">http://netlsd.readthedocs.org</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4315638, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "b2ff42e30d329802d79fc5328fc2769a", "sha256": "61ac6d8048d1a03370a8079f60ce106c6e4cfc9b4089522add3d28439216ce33"}, "downloads": -1, "filename": "NetLSD-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b2ff42e30d329802d79fc5328fc2769a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5931, "upload_time": "2018-06-04T15:27:10", "upload_time_iso_8601": "2018-06-04T15:27:10.131462Z", "url": "https://files.pythonhosted.org/packages/84/59/b4859e0f7220ec600f9726167178916c6bf88a8960f5c7a150aff1a65397/NetLSD-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "dbc2f9192f397e804e924d7768756520", "sha256": "212f4a0b2752d2626eb745d5835cad29f8a68e218af2053ed0fe21deb2b5e328"}, "downloads": -1, "filename": "NetLSD-1.0.1.tar.gz", "has_sig": false, "md5_digest": "dbc2f9192f397e804e924d7768756520", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5999, "upload_time": "2018-09-27T09:24:22", "upload_time_iso_8601": "2018-09-27T09:24:22.785794Z", "url": "https://files.pythonhosted.org/packages/4e/a5/4bee7a8dc572720f3a33db85a079d1465fdf3ea3a9b076c46bfdbbc86e92/NetLSD-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "bc8e8d39d033881739aaf86743903c02", "sha256": "2e407e5db5dbc54079f99537d7608079e2ee73f1415ce8fb0eab9497936c7349"}, "downloads": -1, "filename": "NetLSD-1.0.2.tar.gz", "has_sig": false, "md5_digest": "bc8e8d39d033881739aaf86743903c02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5986, "upload_time": "2018-09-27T09:27:51", "upload_time_iso_8601": "2018-09-27T09:27:51.130119Z", "url": "https://files.pythonhosted.org/packages/37/05/9f479b6fd30275290bc2abdd15dc2364b6942758a3616cd9210bcb659952/NetLSD-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bc8e8d39d033881739aaf86743903c02", "sha256": "2e407e5db5dbc54079f99537d7608079e2ee73f1415ce8fb0eab9497936c7349"}, "downloads": -1, "filename": "NetLSD-1.0.2.tar.gz", "has_sig": false, "md5_digest": "bc8e8d39d033881739aaf86743903c02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5986, "upload_time": "2018-09-27T09:27:51", "upload_time_iso_8601": "2018-09-27T09:27:51.130119Z", "url": "https://files.pythonhosted.org/packages/37/05/9f479b6fd30275290bc2abdd15dc2364b6942758a3616cd9210bcb659952/NetLSD-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:56 2020"}