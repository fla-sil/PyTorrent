{"info": {"author": "Jorge Gomes", "author_email": "udocker@lip.pt", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "\n<!---\n[![Build Status](https://jenkins.indigo-datacloud.eu/buildStatus/icon?job=Pipeline-as-code/udocker/master)](https://jenkins.indigo-datacloud.eu/job/Pipeline-as-code/job/udocker/job/master/)\n-->\n[![Build Status](https://jenkins.indigo-datacloud.eu/buildStatus/icon?job=Pipeline-as-code/udocker/master)](https://jenkins.indigo-datacloud.eu/job/Pipeline-as-code/job/udocker/job/master/)\n\n[![logo](https://raw.githubusercontent.com/indigo-dc/udocker/master/doc/logo-small.png)]()\n\nudocker is a basic user tool to execute simple docker containers in user\nspace without requiring root privileges. Enables download and execution\nof docker containers by non-privileged users in Linux systems where\ndocker is not available. It can be used to pull and execute docker\ncontainers in Linux batch systems and interactive clusters that are\nmanaged by other entities such as grid infrastructures or externally\nmanaged batch or interactive systems.\n\nudocker does not require any type of privileges nor the deployment of\nservices by system administrators. It can be downloaded and executed\nentirely by the end user.\n\nudocker is a wrapper around several tools to mimic a subset of the\ndocker capabilities including pulling images and running containers\nwith minimal functionality.\n\n## How does it work\nudocker is a simple tool written in Python, it has a minimal set\nof dependencies so that can be executed in a wide range of Linux\nsystems.\n\nudocker does not make use of docker nor requires its presence.\n\nudocker \"executes\" the containers by simply providing a chroot like\nenvironment over the extracted container. The current implementation\nsupports different methods to mimic chroot thus enabling execution of\ncontainers under a chroot like environment without requiring privileges.\nudocker transparently supports several methods to execute the containers\nusing tools and libraries such as:\n\n* PRoot\n* Fakechroot\n* runC\n* Singularity\n\n## Advantages\n* Provides a docker like command line interface\n* Supports a subset of docker commands:\n  search, pull, import, export, load, save, create and run\n* Understands docker container metadata\n* Allows loading of docker and OCI containers\n* Can be deployed by the end-user\n* Does not require privileges for installation\n* Does not require privileges for execution\n* Does not require compilation, just transfer the Python script and run\n* Encapsulates several tools and execution methods\n* Includes the required tools already statically compiled to work across systems\n* Tested with GPGPU and MPI applications\n* Runs both on new and older Linux distributions including:\n  CentOS 6, CentOS 7, CentOS 8, Ubuntu 14, Ubuntu 16, Ubuntu 18, Fedora, etc\n\n## Installation and Users manuals\nSee the **[Installation manual](doc/installation_manual.md)**\nand the **[Users manual](doc/user_manual.md)**.\n\n## Syntax\n```\n        Commands:\n          search <repo/expression>      :Search dockerhub for container images\n          pull <repo/image:tag>         :Pull container image from dockerhub\n          create <repo/image:tag>       :Create container from a pulled image\n          run <container>               :Execute container\n\n          images -l                     :List container images\n          ps -m -s                      :List created containers\n          name <container_id> <name>    :Give name to container\n          rmname <name>                 :Delete name from container\n          rename <name> <new_name>      :Change container name \n          clone <container_id>          :Duplicate container\n          rm <container-id>             :Delete container\n          rmi <repo/image:tag>          :Delete image\n\n          import <tar> <repo/image:tag> :Import tar file (exported by docker)\n          import - <repo/image:tag>     :Import from stdin (exported by docker)\n          export -o <tar> <container>   :Export container directory tree\n          export - <container>          :Export container directory tree\n          load -i <imagefile>           :Load image from file (saved by docker)\n          load                          :Load image from stdin (saved by docker)\n          save -o <imagefile> <repo/image:tag>  :Save image with layers to file\n\n          inspect -p <repo/image:tag>   :Return low level information on image\n          verify <repo/image:tag>       :Verify a pulled or loaded image\n\n          protect <repo/image:tag>      :Protect repository\n          unprotect <repo/image:tag>    :Unprotect repository\n          protect <container>           :Protect container\n          unprotect <container>         :Unprotect container\n\n          mkrepo <top-repo-dir>         :Create another repository in location\n          setup                         :Change container execution settings\n          login                         :Login into docker repository\n          logout                        :Logout from docker repository\n\n          help                          :This help\n          run --help                    :Command specific help\n          version                       :Shows udocker version\n\n        Options common to all commands must appear before the command:\n          -D                            :Debug\n          --quiet                       :Less verbosity\n          --repo=<directory>            :Use repository at directory\n          --insecure                    :Allow insecure non authenticated https\n          --allow-root                  :Allow execution by root NOT recommended\n```\n\n## Examples\nSome examples of usage:\n\nSearch container images in dockerhub.\n```\nudocker search  fedora\nudocker search  ubuntu\nudocker search  indigodatacloud\n```\n\nPull from dockerhub and list the pulled images.\n```\nudocker pull   fedora:29\nudocker pull   busybox\nudocker pull   iscampos/openqcd\nudocker images\n```\n\nPull from a registry other than dockerhub.\n```\nudocker search  quay.io/bio\nudocker search  --list-tags  quay.io/biocontainers/scikit-bio\nudocker pull    quay.io/biocontainers/scikit-bio:0.2.3--np112py35_0\nudocker images\n```\n\nCreate a container from a pulled image and run it.\n```\nudocker create --name=myfed  fedora:29\nudocker run  myfed  cat /etc/redhat-release\n```\n\nThe three steps of pulling, creating and running can be achieved in\na single command, however this will create a new container in each\ninvocation consuming additional space and time. Therefore is better\nto pull and create separately and use the identifier returned by\ncreate or use an alias to execute the container as demonstrated above.\n\n```\nudocker run  fedora:29  cat /etc/redhat-release\n```\n\nExecute mounting the host /home/u457 into the container directory /home/cuser.\nNotice that you can \"mount\" any host directory inside the container.\nDepending on the execution mode the \"mount\" is implemented differently and\nmay have restrictions.\n```\nudocker run -v /home/u457:/home/cuser -w /home/user myfed  /bin/bash\nudocker run -v /var -v /proc -v /sys -v /tmp  myfed  /bin/bash\n```\n\nPut a script in your host /tmp and execute it in the container.\n```\nudocker run  -v /tmp  myfed  /bin/bash -c 'cd /tmp; ./myscript.sh'\n```\n\nExecute mounting the host /var, /proc, /sys and /tmp in the same container\ndirectories. Notice that the content of these container directories will\nbe obfuscated.\n```\nudocker run -v /var -v /proc -v /sys -v /tmp  myfed  /bin/bash\n```\n\nInstall software inside the container.\n```\nudocker run  --user=root myfed  yum install -y firefox pulseaudio gnash-plugin\n```\n\nRun as some user. The usernames should exist in the container.\n```\nudocker run --user 1000:1001  myfed  /bin/id\nudocker run --user root   myfed  /bin/id\nudocker run --user jorge  myfed  /bin/id\n```\n\nRunning Firefox.\n```\nudocker run --bindhome --hostauth --hostenv \\\n   -v /sys -v /proc -v /var/run -v /dev --user=jorge --dri myfed  firefox\n```\n\nChange execution engine mode from PRoot to Fakechroot and run.\n```\nudocker setup  --execmode=F3  myfed\n\nudocker run --bindhome --hostauth --hostenv \\\n   -v /sys -v /proc -v /var/run -v /dev --user=jorge --dri myfed  firefox\n```\n\nChange execution engine mode to accelerated PRoot.\n```\nudocker setup  --execmode=P1  myfed\n```\n\nChange execution engine to runC.\n```\nudocker setup  --execmode=R1  myfed\n```\n\nChange execution engine to Singularity. Requires the availability of\nSingularity in the host system.\n```\n./udocker setup  --execmode=S1  myfed\n```\n\nInstall software running as root emulation in Singularity:\n```\nudocker setup  --execmode=S1  myfed\nudocker run  --user=root myfed  yum install -y firefox pulseaudio gnash-plugin\n```\n\n\n## Limitations\nSince root privileges are not involved any operation that really\nrequires such privileges will not be possible. The following  are\nexamples of operations that are not possible:\n\n* accessing host protected devices and files\n* listening on TCP/IP privileged ports (range below 1024)\n* mount file-systems\n* the su command will not work\n* change the system time\n* changing routing tables, firewall rules, or network interfaces\n\nIf the containers require such capabilities then docker should be used\ninstead.\n\nThe current implementation is limited to the pulling of docker images\nand its execution. The actual containers should be built using docker\nand dockerfiles.\n\nudocker does not provide all the docker features, and is not intended\nas a docker replacement.\n\nDebugging inside of udocker with the PRoot engine will not work due to\nthe way PRoot implements the chroot environment\n\nudocker is mainly oriented at providing a run-time environment for\ncontainers execution in user space. udocker is particularly suited to \nrun user applications encapsulated in docker containers.\n\n## Security\nBecause of the limitations described in the previous section udocker does\nnot offer robust isolation features such as the ones offered by docker. \nIf the containers content is not trusted then these containers should not \nbe executed with udocker as they will run inside the user environment.\n\nThe containers data will be unpacked and stored in the user home directory or\nother location of choice. Therefore the containers data will be subjected to\nthe same filesystem protections as other files owned by the user. If the\ncontainers have sensitive information the files and directories should be\nadequately protected by the user.\n\nudocker does not require privileges and runs under the identity of the user\ninvoking it.\n\nUsers can downloaded udocker and execute it without requiring system\nadministrators intervention.\n\nudocker via PRoot offers the emulation of the root user. This emulation\nmimics a real root user (e.g getuid will return 0). This is just an emulation\nno root privileges are involved. This feature makes possible the execution\nof some tools that do not require actual privileges but which refuse to\nwork if the username or id are not root or 0. This enables for instance\nsoftware installation using rpm, yum or dnf inside the container.\n\nudocker must not be run by privileged users.\n\nudocker also provides execution with runc and Singularity, these modes make\nuse of rootless namespaces and enable a normal user to execute as root with\ncertain limitations.\n\n## Other limitations\nWhen using execution modes such as F2, F3 and F4 the created\ncontainers cannot be moved across hosts. In this case convert back to a Pn\nmode before transfer.\nThis is not needed if the hosts are part of an homogeneous cluster where\nthe mount points and directory structure is the same. This limitation\napplies to the absolute realpath to the container directory.\n\n\nThe default accelerated mode of PRoot (mode P1) may exhibit failures in Linux \nkernels above 4.0 due to kernel changes and upstream issues, in this case use\nmode P2 or any of the other execution modes.\n\n```\n./udocker setup  --execmode=P2  my-container-id\n```\n\nThe Fn modes require shared libraries compiled against the libc within\nthe containers. udocker provides these libraries for several distributions\nand versions, they are installed under:\n\n```\n$HOME/.udocker/lib/libfakechroot-*\n```\n\nThe runC mode requires a recent kernel with user namespaces enabled.\n\nThe singularity mode requires the availability of Singularity in the host\nsystem.\n\n## Documentation\nThe full documentation is available at:\n\n* master: https://github.com/indigo-dc/udocker/blob/master/SUMMARY.md\n* devel: https://github.com/indigo-dc/udocker/blob/devel/SUMMARY.md\n\n## Contributing\n\nSee: [Contributing](CONTRIBUTING.md)\n\n## Citing\nWhen citing udocker please use the following:\n\n* Jorge Gomes, Emanuele Bagnaschi, Isabel Campos, Mario David, Lu\u00eds Alves, Jo\u00e3o Martins, Jo\u00e3o Pina, Alvaro L\u00f3pez-Garc\u00eda, Pablo Orviz, Enabling rootless Linux Containers in multi-user environments: The udocker tool, Computer Physics Communications, Available online 6 June 2018, ISSN 0010-4655, https://doi.org/10.1016/j.cpc.2018.05.021\n\n## Acknowledgements\n\n* Docker https://www.docker.com/\n* PRoot https://proot-me.github.io/\n* Fakechroot https://github.com/dex4er/fakechroot/wiki\n* runC https://runc.io/\n* Singularity https://www.sylabs.io/\n* Open Container Initiative https://www.opencontainers.org/\n* INDIGO DataCloud https://www.indigo-datacloud.eu\n* EOSC-hub https://eosc-hub.eu\n* DEEP-Hybrid-DataCloud https://deep-hybrid-datacloud.eu\n* LIP https://www.lip.pt\n* INCD https://www.incd.pt\n\n\nudocker (1.1.4)\n  * Use hub.docker.com as default registry\n  * Search using v1 and v2 APIs\n  * Implement API /v2/search/repositories\n  * Adjust search results to screen size\n  * List container size with ps -s\n  * List container execution modes with ps -m\n  * Added support for nameat() and statx() in Pn and Fn modes\n  * Added Fn libraries for Ubuntu18, Ubuntu19, Fedora29, Fedora30, Fedora31, CentOS8\n  * Added Fn libraries for Alpine 3.8, 3.9, 3.10, 3.11\n  * Added support for sha512 hashes\n  * Added support for opaque whiteouts\n  * Added search --list-tags to available tags for a given repository\n  * Add CLI support for image names in format host/repository:tag\n  * Support for fake root in Sn execution modes via --user=root\n  * Improve verify of loaded/pulled images\n  * Improve handling of mountpoints\n  * Added --containerauth to enable direct use of the container passwd and group\n  * Added support for file mount bindings in singularity\n  * Added UDOCKER_USE_PROOT_EXECUTABLE env var to select proot location\n  * Added UDOCKER_USE_RUNC_EXECUTABLE env var to select runc location\n  * Added UDOCKER_USE_SINGULARITY_EXECUTABLE env var to select singularity\n  * Added UDOCKER_DEFAULT_EXECUTION_MODE env var to select default execution mode\n  * Added R2 and R3 execution modes for PRoot overlay execution in runc\n  * Added setup --purge for cleanup of mountpoints and files \n  * Added setup --fixperms to fix container file permissions\n  * Added run --env-file= to load file with environment variables\n  * Improve file and directory binding support for Singularity and runc\n  * Add command rename for renaming of containers\n  * Create processes without shell context\n  * Safer parsing of config files\n  * Safer removal of directories\n  * Improve installation\n  * Improved fix of SECCOMP accelerated mode for P1 mode\n  * Fix processing of --dri in Sn mode\n    - closes: #241\n  * Improve handling of container and host authentication\n    - partially addresses: #239\n  * Fixes to address authentication and redirects in pull\n    - closes: #225, #230\n  * Added minimal support to load OCI images\n    - closes: #111\n  * Added Pn support for newer distributions\n    - closes: #192\n  * Improve the installation of udockertools\n    - closes: #220, #228\n  * Read environment variables from file with --env-file=\n    - closes: #212\n  * Prepare for pypy\n    - closes: #211\n  * Fixes for verification of container images\n    - closes: #209\n  * Fix command line processing for \"-\" in argument\n    - closes: #202\n  * Fix file protections on extraction making files u+r\n    - closes: #202, #206\n  * Fix comparison of kernel versions having non-integers\n    - closes: #183\n  * Support for both manifest V2 schema 1 and schema 2\n    - closes: #218, #225\n  * Further improved pathname translation in Fn modes\n    - closes: #160\n  * Implement save images in docker format\n    - closes: #74\n  * useradd and groupadd not working in containers\n    - closes: #141\n\nudocker (1.1.3)\n  * Support for nvidia drivers on ubuntu\n    - closes: #162\n  * Installation improvements\n    - closes: #166\n  * Fix issue on Fn mode symlink convertion\n    - partially addresses: #160\n\nudocker (1.1.2)\n  * Improve parsing of quotes in the command line\n    - closes: #98\n  * Fix version command to exit with 0\n    - closes: #107\n  * Add kill-on-exit to proot on Pn modes\n  * Improve download of udocker utils\n  * Handle authentication headers when pulling \n    - closes: #110\n  * Handle of redirects when pulling\n  * Fix registries table\n  * Support search quay.io\n  * Fix auth header when no standard Docker registry is used\n  * Add registry detection on image name\n  * Add --version option\n  * Force python2 as interpreter\n    - closes: #131\n  * Fix handling of volumes in metadata\n  * Handle empty metadata\n  * Fix http proxy functionality\n    - closes: #115\n  * Ignore --no-trunc and --all in the images command\n    - closes: #108\n  * Implement verification of layers in manifest\n  * Add --nvidia to support GPUs and related drivers\n  * Send download messages to stderr\n  * Enable override of curl executable\n  * Fix building on CentOS 6\n    - closes: #157\n  * Mitigation for upstream limitation in runC without tty\n    - closes: #132\n  * Fix detection of executable with symlinks in container\n    - closes: #118\n  * Updated runC to v1.0.0-rc5\n  * Experimental support for Alpine in Fn modes\n  * Improve pathname translation in Fn modes for mounted dirs\n    - partially addresses: #160\n\nudocker (1.1.1)\n  * New execution engine using singularity\n  * Updated documentation with OpenMPI information and examples\n  * Additional unit tests\n  * Redirect messages to stderr\n  * Improved parsing of quotes in the command line\n    - closes: #87\n  * Allow override of the HOME environment variable\n  * Allow override of libfakechroot.so at the container level\n  * Automatic selection of libfakechroot.so from container info\n  * Improve automatic install\n  * Enable resetting prefix paths in Fn modes in remote hosts\n  * Do not set AF_UNIX_PATH in Fn modes when the host /tmp is a volume\n  * Export containers in both docker and udocker format\n  * Import containers docker and udocker format\n  * Load, import and export to/from stdin/stdout\n  * Clone existing containers\n  * Support for TCP/IP port remap in execution modes Pn\n  * Fix run with basenames failing\n    - closes: #89\n  * Allow run as root flag\n    - closes: #91\n\nudocker (1.1.0)\n\n  * Support image names prefixed by registry similarly to docker \n  * Add execution engine selection logic\n  * Add fr execution engine based on shared library interception\n  * Add rc execution engine based on rootless namespaces\n  * Improve proot tmp files cleanup on non ext filesystems\n  * Improve search returning empty on Docker repositories\n  * Improve runC execution portability \n  * Add environment variable UDOCKER_KEYSTORE\n    - closes: #75\n  * Prevent creation of .udocker when UDOCKER_KEYSTORE is used\n    - closes: #75\n\nudocker (1.0.4)\n\n  * Documentation fixes\n\nudocker (1.0.3)\n\n  * Support for import Docker containers in newer metadata structure\n  * Improve the command line parsing\n  * Improve temporary file handling and removal\n  * Support for additional execution engines to be provided in the future\n  * Improved parsing of entrypoint and cmd metadata\n    - closes: #53\n  * Increase name alias length\n    - closes: #52\n  * Add support for change dir into volume directories\n    - closes: #51\n  * Fix deletion of files upon container import\n    - closes: #50\n  * Fix exporting of host environment variables to the containers\n    - closes: #48\n  * Change misleading behavior of import tarball from move to copy\n    - closes: #44\n  * Fix validation of volumes specification\n    - closes: #43\n\nudocker (1.0.2)\n\n  * Improve download on repositories that fail authentication on /v2\n  * Improve run verification of binaries with recursive symbolic links\n  * Improve accelerated seccomp on kernels >= 4.8.0\n    - closes: #40\n\nudocker (1.0.1)\n\n  * Minor bugfixes\n  * Executable name changed from udocker.py to udocker\n  * Added support for login into docker repositories\n  * Added support for private repositories\n  * Added support for listing of v2 repositories catalog\n  * Added checksum verification for sha256 layers\n  * Improved download handling for v1 and v2 repositories\n  * Improved installation tarball structure\n  * Insecure flag fixed\n  * Address seccomp change introduced on kernels >= 4.8.0\n  * Utilities for packaging\n  * Improved verbose levels, messaging and output\n    - closes: #24, #23\n  * Fully implement support for registry selection --registry parameter\n    - closes: #29\n  * Provide support for private repositories e.g. gitlab registries\n    - closes: #30\n  * Provide --insecure command line parameter for SSL requests\n    - closes: #31\n\nudocker (1.0.0)\n\n  * Initial version\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/indigo-dc/udocker", "keywords": "udocker", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "udocker", "package_url": "https://pypi.org/project/udocker/", "platform": "", "project_url": "https://pypi.org/project/udocker/", "project_urls": {"Homepage": "https://github.com/indigo-dc/udocker"}, "release_url": "https://pypi.org/project/udocker/1.1.4/", "requires_dist": null, "requires_python": "", "summary": "A basic user tool to execute simple docker         containers in batch or interactive systems without root privileges", "version": "1.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://jenkins.indigo-datacloud.eu/job/Pipeline-as-code/job/udocker/job/master/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f1699e11df82ff0317fc74c52800b63169ca735/68747470733a2f2f6a656e6b696e732e696e6469676f2d64617461636c6f75642e65752f6275696c645374617475732f69636f6e3f6a6f623d506970656c696e652d61732d636f64652f75646f636b65722f6d6173746572\"></a></p>\n<p><a href=\"\" rel=\"nofollow\"><img alt=\"logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2f6e53f30a1b3e56911523ee74e7993b459ec98f/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f696e6469676f2d64632f75646f636b65722f6d61737465722f646f632f6c6f676f2d736d616c6c2e706e67\"></a></p>\n<p>udocker is a basic user tool to execute simple docker containers in user\nspace without requiring root privileges. Enables download and execution\nof docker containers by non-privileged users in Linux systems where\ndocker is not available. It can be used to pull and execute docker\ncontainers in Linux batch systems and interactive clusters that are\nmanaged by other entities such as grid infrastructures or externally\nmanaged batch or interactive systems.</p>\n<p>udocker does not require any type of privileges nor the deployment of\nservices by system administrators. It can be downloaded and executed\nentirely by the end user.</p>\n<p>udocker is a wrapper around several tools to mimic a subset of the\ndocker capabilities including pulling images and running containers\nwith minimal functionality.</p>\n<h2>How does it work</h2>\n<p>udocker is a simple tool written in Python, it has a minimal set\nof dependencies so that can be executed in a wide range of Linux\nsystems.</p>\n<p>udocker does not make use of docker nor requires its presence.</p>\n<p>udocker \"executes\" the containers by simply providing a chroot like\nenvironment over the extracted container. The current implementation\nsupports different methods to mimic chroot thus enabling execution of\ncontainers under a chroot like environment without requiring privileges.\nudocker transparently supports several methods to execute the containers\nusing tools and libraries such as:</p>\n<ul>\n<li>PRoot</li>\n<li>Fakechroot</li>\n<li>runC</li>\n<li>Singularity</li>\n</ul>\n<h2>Advantages</h2>\n<ul>\n<li>Provides a docker like command line interface</li>\n<li>Supports a subset of docker commands:\nsearch, pull, import, export, load, save, create and run</li>\n<li>Understands docker container metadata</li>\n<li>Allows loading of docker and OCI containers</li>\n<li>Can be deployed by the end-user</li>\n<li>Does not require privileges for installation</li>\n<li>Does not require privileges for execution</li>\n<li>Does not require compilation, just transfer the Python script and run</li>\n<li>Encapsulates several tools and execution methods</li>\n<li>Includes the required tools already statically compiled to work across systems</li>\n<li>Tested with GPGPU and MPI applications</li>\n<li>Runs both on new and older Linux distributions including:\nCentOS 6, CentOS 7, CentOS 8, Ubuntu 14, Ubuntu 16, Ubuntu 18, Fedora, etc</li>\n</ul>\n<h2>Installation and Users manuals</h2>\n<p>See the <strong><a href=\"doc/installation_manual.md\" rel=\"nofollow\">Installation manual</a></strong>\nand the <strong><a href=\"doc/user_manual.md\" rel=\"nofollow\">Users manual</a></strong>.</p>\n<h2>Syntax</h2>\n<pre><code>        Commands:\n          search &lt;repo/expression&gt;      :Search dockerhub for container images\n          pull &lt;repo/image:tag&gt;         :Pull container image from dockerhub\n          create &lt;repo/image:tag&gt;       :Create container from a pulled image\n          run &lt;container&gt;               :Execute container\n\n          images -l                     :List container images\n          ps -m -s                      :List created containers\n          name &lt;container_id&gt; &lt;name&gt;    :Give name to container\n          rmname &lt;name&gt;                 :Delete name from container\n          rename &lt;name&gt; &lt;new_name&gt;      :Change container name \n          clone &lt;container_id&gt;          :Duplicate container\n          rm &lt;container-id&gt;             :Delete container\n          rmi &lt;repo/image:tag&gt;          :Delete image\n\n          import &lt;tar&gt; &lt;repo/image:tag&gt; :Import tar file (exported by docker)\n          import - &lt;repo/image:tag&gt;     :Import from stdin (exported by docker)\n          export -o &lt;tar&gt; &lt;container&gt;   :Export container directory tree\n          export - &lt;container&gt;          :Export container directory tree\n          load -i &lt;imagefile&gt;           :Load image from file (saved by docker)\n          load                          :Load image from stdin (saved by docker)\n          save -o &lt;imagefile&gt; &lt;repo/image:tag&gt;  :Save image with layers to file\n\n          inspect -p &lt;repo/image:tag&gt;   :Return low level information on image\n          verify &lt;repo/image:tag&gt;       :Verify a pulled or loaded image\n\n          protect &lt;repo/image:tag&gt;      :Protect repository\n          unprotect &lt;repo/image:tag&gt;    :Unprotect repository\n          protect &lt;container&gt;           :Protect container\n          unprotect &lt;container&gt;         :Unprotect container\n\n          mkrepo &lt;top-repo-dir&gt;         :Create another repository in location\n          setup                         :Change container execution settings\n          login                         :Login into docker repository\n          logout                        :Logout from docker repository\n\n          help                          :This help\n          run --help                    :Command specific help\n          version                       :Shows udocker version\n\n        Options common to all commands must appear before the command:\n          -D                            :Debug\n          --quiet                       :Less verbosity\n          --repo=&lt;directory&gt;            :Use repository at directory\n          --insecure                    :Allow insecure non authenticated https\n          --allow-root                  :Allow execution by root NOT recommended\n</code></pre>\n<h2>Examples</h2>\n<p>Some examples of usage:</p>\n<p>Search container images in dockerhub.</p>\n<pre><code>udocker search  fedora\nudocker search  ubuntu\nudocker search  indigodatacloud\n</code></pre>\n<p>Pull from dockerhub and list the pulled images.</p>\n<pre><code>udocker pull   fedora:29\nudocker pull   busybox\nudocker pull   iscampos/openqcd\nudocker images\n</code></pre>\n<p>Pull from a registry other than dockerhub.</p>\n<pre><code>udocker search  quay.io/bio\nudocker search  --list-tags  quay.io/biocontainers/scikit-bio\nudocker pull    quay.io/biocontainers/scikit-bio:0.2.3--np112py35_0\nudocker images\n</code></pre>\n<p>Create a container from a pulled image and run it.</p>\n<pre><code>udocker create --name=myfed  fedora:29\nudocker run  myfed  cat /etc/redhat-release\n</code></pre>\n<p>The three steps of pulling, creating and running can be achieved in\na single command, however this will create a new container in each\ninvocation consuming additional space and time. Therefore is better\nto pull and create separately and use the identifier returned by\ncreate or use an alias to execute the container as demonstrated above.</p>\n<pre><code>udocker run  fedora:29  cat /etc/redhat-release\n</code></pre>\n<p>Execute mounting the host /home/u457 into the container directory /home/cuser.\nNotice that you can \"mount\" any host directory inside the container.\nDepending on the execution mode the \"mount\" is implemented differently and\nmay have restrictions.</p>\n<pre><code>udocker run -v /home/u457:/home/cuser -w /home/user myfed  /bin/bash\nudocker run -v /var -v /proc -v /sys -v /tmp  myfed  /bin/bash\n</code></pre>\n<p>Put a script in your host /tmp and execute it in the container.</p>\n<pre><code>udocker run  -v /tmp  myfed  /bin/bash -c 'cd /tmp; ./myscript.sh'\n</code></pre>\n<p>Execute mounting the host /var, /proc, /sys and /tmp in the same container\ndirectories. Notice that the content of these container directories will\nbe obfuscated.</p>\n<pre><code>udocker run -v /var -v /proc -v /sys -v /tmp  myfed  /bin/bash\n</code></pre>\n<p>Install software inside the container.</p>\n<pre><code>udocker run  --user=root myfed  yum install -y firefox pulseaudio gnash-plugin\n</code></pre>\n<p>Run as some user. The usernames should exist in the container.</p>\n<pre><code>udocker run --user 1000:1001  myfed  /bin/id\nudocker run --user root   myfed  /bin/id\nudocker run --user jorge  myfed  /bin/id\n</code></pre>\n<p>Running Firefox.</p>\n<pre><code>udocker run --bindhome --hostauth --hostenv \\\n   -v /sys -v /proc -v /var/run -v /dev --user=jorge --dri myfed  firefox\n</code></pre>\n<p>Change execution engine mode from PRoot to Fakechroot and run.</p>\n<pre><code>udocker setup  --execmode=F3  myfed\n\nudocker run --bindhome --hostauth --hostenv \\\n   -v /sys -v /proc -v /var/run -v /dev --user=jorge --dri myfed  firefox\n</code></pre>\n<p>Change execution engine mode to accelerated PRoot.</p>\n<pre><code>udocker setup  --execmode=P1  myfed\n</code></pre>\n<p>Change execution engine to runC.</p>\n<pre><code>udocker setup  --execmode=R1  myfed\n</code></pre>\n<p>Change execution engine to Singularity. Requires the availability of\nSingularity in the host system.</p>\n<pre><code>./udocker setup  --execmode=S1  myfed\n</code></pre>\n<p>Install software running as root emulation in Singularity:</p>\n<pre><code>udocker setup  --execmode=S1  myfed\nudocker run  --user=root myfed  yum install -y firefox pulseaudio gnash-plugin\n</code></pre>\n<h2>Limitations</h2>\n<p>Since root privileges are not involved any operation that really\nrequires such privileges will not be possible. The following  are\nexamples of operations that are not possible:</p>\n<ul>\n<li>accessing host protected devices and files</li>\n<li>listening on TCP/IP privileged ports (range below 1024)</li>\n<li>mount file-systems</li>\n<li>the su command will not work</li>\n<li>change the system time</li>\n<li>changing routing tables, firewall rules, or network interfaces</li>\n</ul>\n<p>If the containers require such capabilities then docker should be used\ninstead.</p>\n<p>The current implementation is limited to the pulling of docker images\nand its execution. The actual containers should be built using docker\nand dockerfiles.</p>\n<p>udocker does not provide all the docker features, and is not intended\nas a docker replacement.</p>\n<p>Debugging inside of udocker with the PRoot engine will not work due to\nthe way PRoot implements the chroot environment</p>\n<p>udocker is mainly oriented at providing a run-time environment for\ncontainers execution in user space. udocker is particularly suited to\nrun user applications encapsulated in docker containers.</p>\n<h2>Security</h2>\n<p>Because of the limitations described in the previous section udocker does\nnot offer robust isolation features such as the ones offered by docker.\nIf the containers content is not trusted then these containers should not\nbe executed with udocker as they will run inside the user environment.</p>\n<p>The containers data will be unpacked and stored in the user home directory or\nother location of choice. Therefore the containers data will be subjected to\nthe same filesystem protections as other files owned by the user. If the\ncontainers have sensitive information the files and directories should be\nadequately protected by the user.</p>\n<p>udocker does not require privileges and runs under the identity of the user\ninvoking it.</p>\n<p>Users can downloaded udocker and execute it without requiring system\nadministrators intervention.</p>\n<p>udocker via PRoot offers the emulation of the root user. This emulation\nmimics a real root user (e.g getuid will return 0). This is just an emulation\nno root privileges are involved. This feature makes possible the execution\nof some tools that do not require actual privileges but which refuse to\nwork if the username or id are not root or 0. This enables for instance\nsoftware installation using rpm, yum or dnf inside the container.</p>\n<p>udocker must not be run by privileged users.</p>\n<p>udocker also provides execution with runc and Singularity, these modes make\nuse of rootless namespaces and enable a normal user to execute as root with\ncertain limitations.</p>\n<h2>Other limitations</h2>\n<p>When using execution modes such as F2, F3 and F4 the created\ncontainers cannot be moved across hosts. In this case convert back to a Pn\nmode before transfer.\nThis is not needed if the hosts are part of an homogeneous cluster where\nthe mount points and directory structure is the same. This limitation\napplies to the absolute realpath to the container directory.</p>\n<p>The default accelerated mode of PRoot (mode P1) may exhibit failures in Linux\nkernels above 4.0 due to kernel changes and upstream issues, in this case use\nmode P2 or any of the other execution modes.</p>\n<pre><code>./udocker setup  --execmode=P2  my-container-id\n</code></pre>\n<p>The Fn modes require shared libraries compiled against the libc within\nthe containers. udocker provides these libraries for several distributions\nand versions, they are installed under:</p>\n<pre><code>$HOME/.udocker/lib/libfakechroot-*\n</code></pre>\n<p>The runC mode requires a recent kernel with user namespaces enabled.</p>\n<p>The singularity mode requires the availability of Singularity in the host\nsystem.</p>\n<h2>Documentation</h2>\n<p>The full documentation is available at:</p>\n<ul>\n<li>master: <a href=\"https://github.com/indigo-dc/udocker/blob/master/SUMMARY.md\" rel=\"nofollow\">https://github.com/indigo-dc/udocker/blob/master/SUMMARY.md</a></li>\n<li>devel: <a href=\"https://github.com/indigo-dc/udocker/blob/devel/SUMMARY.md\" rel=\"nofollow\">https://github.com/indigo-dc/udocker/blob/devel/SUMMARY.md</a></li>\n</ul>\n<h2>Contributing</h2>\n<p>See: <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">Contributing</a></p>\n<h2>Citing</h2>\n<p>When citing udocker please use the following:</p>\n<ul>\n<li>Jorge Gomes, Emanuele Bagnaschi, Isabel Campos, Mario David, Lu\u00eds Alves, Jo\u00e3o Martins, Jo\u00e3o Pina, Alvaro L\u00f3pez-Garc\u00eda, Pablo Orviz, Enabling rootless Linux Containers in multi-user environments: The udocker tool, Computer Physics Communications, Available online 6 June 2018, ISSN 0010-4655, <a href=\"https://doi.org/10.1016/j.cpc.2018.05.021\" rel=\"nofollow\">https://doi.org/10.1016/j.cpc.2018.05.021</a></li>\n</ul>\n<h2>Acknowledgements</h2>\n<ul>\n<li>Docker <a href=\"https://www.docker.com/\" rel=\"nofollow\">https://www.docker.com/</a></li>\n<li>PRoot <a href=\"https://proot-me.github.io/\" rel=\"nofollow\">https://proot-me.github.io/</a></li>\n<li>Fakechroot <a href=\"https://github.com/dex4er/fakechroot/wiki\" rel=\"nofollow\">https://github.com/dex4er/fakechroot/wiki</a></li>\n<li>runC <a href=\"https://runc.io/\" rel=\"nofollow\">https://runc.io/</a></li>\n<li>Singularity <a href=\"https://www.sylabs.io/\" rel=\"nofollow\">https://www.sylabs.io/</a></li>\n<li>Open Container Initiative <a href=\"https://www.opencontainers.org/\" rel=\"nofollow\">https://www.opencontainers.org/</a></li>\n<li>INDIGO DataCloud <a href=\"https://www.indigo-datacloud.eu\" rel=\"nofollow\">https://www.indigo-datacloud.eu</a></li>\n<li>EOSC-hub <a href=\"https://eosc-hub.eu\" rel=\"nofollow\">https://eosc-hub.eu</a></li>\n<li>DEEP-Hybrid-DataCloud <a href=\"https://deep-hybrid-datacloud.eu\" rel=\"nofollow\">https://deep-hybrid-datacloud.eu</a></li>\n<li>LIP <a href=\"https://www.lip.pt\" rel=\"nofollow\">https://www.lip.pt</a></li>\n<li>INCD <a href=\"https://www.incd.pt\" rel=\"nofollow\">https://www.incd.pt</a></li>\n</ul>\n<p>udocker (1.1.4)</p>\n<ul>\n<li>Use hub.docker.com as default registry</li>\n<li>Search using v1 and v2 APIs</li>\n<li>Implement API /v2/search/repositories</li>\n<li>Adjust search results to screen size</li>\n<li>List container size with ps -s</li>\n<li>List container execution modes with ps -m</li>\n<li>Added support for nameat() and statx() in Pn and Fn modes</li>\n<li>Added Fn libraries for Ubuntu18, Ubuntu19, Fedora29, Fedora30, Fedora31, CentOS8</li>\n<li>Added Fn libraries for Alpine 3.8, 3.9, 3.10, 3.11</li>\n<li>Added support for sha512 hashes</li>\n<li>Added support for opaque whiteouts</li>\n<li>Added search --list-tags to available tags for a given repository</li>\n<li>Add CLI support for image names in format host/repository:tag</li>\n<li>Support for fake root in Sn execution modes via --user=root</li>\n<li>Improve verify of loaded/pulled images</li>\n<li>Improve handling of mountpoints</li>\n<li>Added --containerauth to enable direct use of the container passwd and group</li>\n<li>Added support for file mount bindings in singularity</li>\n<li>Added UDOCKER_USE_PROOT_EXECUTABLE env var to select proot location</li>\n<li>Added UDOCKER_USE_RUNC_EXECUTABLE env var to select runc location</li>\n<li>Added UDOCKER_USE_SINGULARITY_EXECUTABLE env var to select singularity</li>\n<li>Added UDOCKER_DEFAULT_EXECUTION_MODE env var to select default execution mode</li>\n<li>Added R2 and R3 execution modes for PRoot overlay execution in runc</li>\n<li>Added setup --purge for cleanup of mountpoints and files</li>\n<li>Added setup --fixperms to fix container file permissions</li>\n<li>Added run --env-file= to load file with environment variables</li>\n<li>Improve file and directory binding support for Singularity and runc</li>\n<li>Add command rename for renaming of containers</li>\n<li>Create processes without shell context</li>\n<li>Safer parsing of config files</li>\n<li>Safer removal of directories</li>\n<li>Improve installation</li>\n<li>Improved fix of SECCOMP accelerated mode for P1 mode</li>\n<li>Fix processing of --dri in Sn mode\n<ul>\n<li>closes: #241</li>\n</ul>\n</li>\n<li>Improve handling of container and host authentication\n<ul>\n<li>partially addresses: #239</li>\n</ul>\n</li>\n<li>Fixes to address authentication and redirects in pull\n<ul>\n<li>closes: #225, #230</li>\n</ul>\n</li>\n<li>Added minimal support to load OCI images\n<ul>\n<li>closes: #111</li>\n</ul>\n</li>\n<li>Added Pn support for newer distributions\n<ul>\n<li>closes: #192</li>\n</ul>\n</li>\n<li>Improve the installation of udockertools\n<ul>\n<li>closes: #220, #228</li>\n</ul>\n</li>\n<li>Read environment variables from file with --env-file=\n<ul>\n<li>closes: #212</li>\n</ul>\n</li>\n<li>Prepare for pypy\n<ul>\n<li>closes: #211</li>\n</ul>\n</li>\n<li>Fixes for verification of container images\n<ul>\n<li>closes: #209</li>\n</ul>\n</li>\n<li>Fix command line processing for \"-\" in argument\n<ul>\n<li>closes: #202</li>\n</ul>\n</li>\n<li>Fix file protections on extraction making files u+r\n<ul>\n<li>closes: #202, #206</li>\n</ul>\n</li>\n<li>Fix comparison of kernel versions having non-integers\n<ul>\n<li>closes: #183</li>\n</ul>\n</li>\n<li>Support for both manifest V2 schema 1 and schema 2\n<ul>\n<li>closes: #218, #225</li>\n</ul>\n</li>\n<li>Further improved pathname translation in Fn modes\n<ul>\n<li>closes: #160</li>\n</ul>\n</li>\n<li>Implement save images in docker format\n<ul>\n<li>closes: #74</li>\n</ul>\n</li>\n<li>useradd and groupadd not working in containers\n<ul>\n<li>closes: #141</li>\n</ul>\n</li>\n</ul>\n<p>udocker (1.1.3)</p>\n<ul>\n<li>Support for nvidia drivers on ubuntu\n<ul>\n<li>closes: #162</li>\n</ul>\n</li>\n<li>Installation improvements\n<ul>\n<li>closes: #166</li>\n</ul>\n</li>\n<li>Fix issue on Fn mode symlink convertion\n<ul>\n<li>partially addresses: #160</li>\n</ul>\n</li>\n</ul>\n<p>udocker (1.1.2)</p>\n<ul>\n<li>Improve parsing of quotes in the command line\n<ul>\n<li>closes: #98</li>\n</ul>\n</li>\n<li>Fix version command to exit with 0\n<ul>\n<li>closes: #107</li>\n</ul>\n</li>\n<li>Add kill-on-exit to proot on Pn modes</li>\n<li>Improve download of udocker utils</li>\n<li>Handle authentication headers when pulling\n<ul>\n<li>closes: #110</li>\n</ul>\n</li>\n<li>Handle of redirects when pulling</li>\n<li>Fix registries table</li>\n<li>Support search quay.io</li>\n<li>Fix auth header when no standard Docker registry is used</li>\n<li>Add registry detection on image name</li>\n<li>Add --version option</li>\n<li>Force python2 as interpreter\n<ul>\n<li>closes: #131</li>\n</ul>\n</li>\n<li>Fix handling of volumes in metadata</li>\n<li>Handle empty metadata</li>\n<li>Fix http proxy functionality\n<ul>\n<li>closes: #115</li>\n</ul>\n</li>\n<li>Ignore --no-trunc and --all in the images command\n<ul>\n<li>closes: #108</li>\n</ul>\n</li>\n<li>Implement verification of layers in manifest</li>\n<li>Add --nvidia to support GPUs and related drivers</li>\n<li>Send download messages to stderr</li>\n<li>Enable override of curl executable</li>\n<li>Fix building on CentOS 6\n<ul>\n<li>closes: #157</li>\n</ul>\n</li>\n<li>Mitigation for upstream limitation in runC without tty\n<ul>\n<li>closes: #132</li>\n</ul>\n</li>\n<li>Fix detection of executable with symlinks in container\n<ul>\n<li>closes: #118</li>\n</ul>\n</li>\n<li>Updated runC to v1.0.0-rc5</li>\n<li>Experimental support for Alpine in Fn modes</li>\n<li>Improve pathname translation in Fn modes for mounted dirs\n<ul>\n<li>partially addresses: #160</li>\n</ul>\n</li>\n</ul>\n<p>udocker (1.1.1)</p>\n<ul>\n<li>New execution engine using singularity</li>\n<li>Updated documentation with OpenMPI information and examples</li>\n<li>Additional unit tests</li>\n<li>Redirect messages to stderr</li>\n<li>Improved parsing of quotes in the command line\n<ul>\n<li>closes: #87</li>\n</ul>\n</li>\n<li>Allow override of the HOME environment variable</li>\n<li>Allow override of libfakechroot.so at the container level</li>\n<li>Automatic selection of libfakechroot.so from container info</li>\n<li>Improve automatic install</li>\n<li>Enable resetting prefix paths in Fn modes in remote hosts</li>\n<li>Do not set AF_UNIX_PATH in Fn modes when the host /tmp is a volume</li>\n<li>Export containers in both docker and udocker format</li>\n<li>Import containers docker and udocker format</li>\n<li>Load, import and export to/from stdin/stdout</li>\n<li>Clone existing containers</li>\n<li>Support for TCP/IP port remap in execution modes Pn</li>\n<li>Fix run with basenames failing\n<ul>\n<li>closes: #89</li>\n</ul>\n</li>\n<li>Allow run as root flag\n<ul>\n<li>closes: #91</li>\n</ul>\n</li>\n</ul>\n<p>udocker (1.1.0)</p>\n<ul>\n<li>Support image names prefixed by registry similarly to docker</li>\n<li>Add execution engine selection logic</li>\n<li>Add fr execution engine based on shared library interception</li>\n<li>Add rc execution engine based on rootless namespaces</li>\n<li>Improve proot tmp files cleanup on non ext filesystems</li>\n<li>Improve search returning empty on Docker repositories</li>\n<li>Improve runC execution portability</li>\n<li>Add environment variable UDOCKER_KEYSTORE\n<ul>\n<li>closes: #75</li>\n</ul>\n</li>\n<li>Prevent creation of .udocker when UDOCKER_KEYSTORE is used\n<ul>\n<li>closes: #75</li>\n</ul>\n</li>\n</ul>\n<p>udocker (1.0.4)</p>\n<ul>\n<li>Documentation fixes</li>\n</ul>\n<p>udocker (1.0.3)</p>\n<ul>\n<li>Support for import Docker containers in newer metadata structure</li>\n<li>Improve the command line parsing</li>\n<li>Improve temporary file handling and removal</li>\n<li>Support for additional execution engines to be provided in the future</li>\n<li>Improved parsing of entrypoint and cmd metadata\n<ul>\n<li>closes: #53</li>\n</ul>\n</li>\n<li>Increase name alias length\n<ul>\n<li>closes: #52</li>\n</ul>\n</li>\n<li>Add support for change dir into volume directories\n<ul>\n<li>closes: #51</li>\n</ul>\n</li>\n<li>Fix deletion of files upon container import\n<ul>\n<li>closes: #50</li>\n</ul>\n</li>\n<li>Fix exporting of host environment variables to the containers\n<ul>\n<li>closes: #48</li>\n</ul>\n</li>\n<li>Change misleading behavior of import tarball from move to copy\n<ul>\n<li>closes: #44</li>\n</ul>\n</li>\n<li>Fix validation of volumes specification\n<ul>\n<li>closes: #43</li>\n</ul>\n</li>\n</ul>\n<p>udocker (1.0.2)</p>\n<ul>\n<li>Improve download on repositories that fail authentication on /v2</li>\n<li>Improve run verification of binaries with recursive symbolic links</li>\n<li>Improve accelerated seccomp on kernels &gt;= 4.8.0\n<ul>\n<li>closes: #40</li>\n</ul>\n</li>\n</ul>\n<p>udocker (1.0.1)</p>\n<ul>\n<li>Minor bugfixes</li>\n<li>Executable name changed from udocker.py to udocker</li>\n<li>Added support for login into docker repositories</li>\n<li>Added support for private repositories</li>\n<li>Added support for listing of v2 repositories catalog</li>\n<li>Added checksum verification for sha256 layers</li>\n<li>Improved download handling for v1 and v2 repositories</li>\n<li>Improved installation tarball structure</li>\n<li>Insecure flag fixed</li>\n<li>Address seccomp change introduced on kernels &gt;= 4.8.0</li>\n<li>Utilities for packaging</li>\n<li>Improved verbose levels, messaging and output\n<ul>\n<li>closes: #24, #23</li>\n</ul>\n</li>\n<li>Fully implement support for registry selection --registry parameter\n<ul>\n<li>closes: #29</li>\n</ul>\n</li>\n<li>Provide support for private repositories e.g. gitlab registries\n<ul>\n<li>closes: #30</li>\n</ul>\n</li>\n<li>Provide --insecure command line parameter for SSL requests\n<ul>\n<li>closes: #31</li>\n</ul>\n</li>\n</ul>\n<p>udocker (1.0.0)</p>\n<ul>\n<li>Initial version</li>\n</ul>\n\n          </div>"}, "last_serial": 6498981, "releases": {"1.1.3": [{"comment_text": "", "digests": {"md5": "7945e523ad51f319d17afe7978ee78c4", "sha256": "c66d92dd7a7091d31c04ac376d5b71ea2450e84756e3af43bc3a8d00657a2600"}, "downloads": -1, "filename": "udocker-1.1.3.tar.gz", "has_sig": false, "md5_digest": "7945e523ad51f319d17afe7978ee78c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150327, "upload_time": "2019-03-19T15:18:32", "upload_time_iso_8601": "2019-03-19T15:18:32.737187Z", "url": "https://files.pythonhosted.org/packages/59/6b/559ea1104a3873ef94d0837f64576466dc7c9ea4c70433c4ba72b9364643/udocker-1.1.3.tar.gz", "yanked": false}], "1.1.3.post1": [{"comment_text": "", "digests": {"md5": "2da8841ffe3c970445b64b1b232df48d", "sha256": "d41230089acb0b0e2441f22c7e91746104cee47b04505c322b306452e6d45a53"}, "downloads": -1, "filename": "udocker-1.1.3.post1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2da8841ffe3c970445b64b1b232df48d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 66990, "upload_time": "2019-06-25T09:30:24", "upload_time_iso_8601": "2019-06-25T09:30:24.439238Z", "url": "https://files.pythonhosted.org/packages/d8/c3/1844e7df019a56f529544250c63cdae5ac2f06a420483e6ceeacecb727dd/udocker-1.1.3.post1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e68ee43c6c6329e56e0e443ae55ae158", "sha256": "ec1bd483776aaab101929e839f1e8d2a87464a3e2f0c35a117bdad40b60767be"}, "downloads": -1, "filename": "udocker-1.1.3.post1.tar.gz", "has_sig": false, "md5_digest": "e68ee43c6c6329e56e0e443ae55ae158", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150299, "upload_time": "2019-06-25T09:30:26", "upload_time_iso_8601": "2019-06-25T09:30:26.231753Z", "url": "https://files.pythonhosted.org/packages/04/ca/8dbe98d3b1b90099f4cad3f647d4722e912d87ceed4563cdfe182eb8d2c3/udocker-1.1.3.post1.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "51d44959d7b057a3248645e32e20d49f", "sha256": "bfb3e1ebdb682a4575f70b9efd5da667f4e16e1e5fe64560c48549636f4b439d"}, "downloads": -1, "filename": "udocker-1.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "51d44959d7b057a3248645e32e20d49f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 78947, "upload_time": "2020-01-22T08:18:55", "upload_time_iso_8601": "2020-01-22T08:18:55.174492Z", "url": "https://files.pythonhosted.org/packages/92/19/6c66558b821aff9d6f85003829ab13c14d340d2e83e6a6b3e7ec5c94dd97/udocker-1.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6065d9222bf44b1b10939bd6ff335646", "sha256": "f12adca7d52cec6e6e91f5ecaa690c47128c5768b9591c4595750d70fbad6df0"}, "downloads": -1, "filename": "udocker-1.1.4.tar.gz", "has_sig": false, "md5_digest": "6065d9222bf44b1b10939bd6ff335646", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 178548, "upload_time": "2020-01-22T08:18:57", "upload_time_iso_8601": "2020-01-22T08:18:57.487981Z", "url": "https://files.pythonhosted.org/packages/ef/ed/6d34c874e245717435dfa9592e327af3aa2f086d279b190b0629581553c6/udocker-1.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "51d44959d7b057a3248645e32e20d49f", "sha256": "bfb3e1ebdb682a4575f70b9efd5da667f4e16e1e5fe64560c48549636f4b439d"}, "downloads": -1, "filename": "udocker-1.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "51d44959d7b057a3248645e32e20d49f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 78947, "upload_time": "2020-01-22T08:18:55", "upload_time_iso_8601": "2020-01-22T08:18:55.174492Z", "url": "https://files.pythonhosted.org/packages/92/19/6c66558b821aff9d6f85003829ab13c14d340d2e83e6a6b3e7ec5c94dd97/udocker-1.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6065d9222bf44b1b10939bd6ff335646", "sha256": "f12adca7d52cec6e6e91f5ecaa690c47128c5768b9591c4595750d70fbad6df0"}, "downloads": -1, "filename": "udocker-1.1.4.tar.gz", "has_sig": false, "md5_digest": "6065d9222bf44b1b10939bd6ff335646", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 178548, "upload_time": "2020-01-22T08:18:57", "upload_time_iso_8601": "2020-01-22T08:18:57.487981Z", "url": "https://files.pythonhosted.org/packages/ef/ed/6d34c874e245717435dfa9592e327af3aa2f086d279b190b0629581553c6/udocker-1.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:41:49 2020"}