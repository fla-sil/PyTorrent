{"info": {"author": "Ulf Hamster", "author_email": "554c46@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "[![Build Status](https://travis-ci.org/kmedian/thermoencoder.svg?branch=master)](https://travis-ci.org/kmedian/thermoencoder)\n[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/kmedian/thermoencoder/master?urlpath=lab)\n\n# thermoencoder\n\n\n## Table of Contents\n* [Installation](#installation)\n* [Usage](#usage)\n* [Commands](#commands)\n* [Support](#support)\n* [Contributing](#contributing)\n\n\n## Installation\nThe `thermoencoder` [git repo](http://github.com/kmedian/thermoencoder) is available as [PyPi package](https://pypi.org/project/thermoencoder)\n\n```\npip install thermoencoder\n```\n\n\n## Usage\nCheck the [examples](http://github.com/kmedian/thermoencoder/examples) folder for notebooks.\n\n\n```\nX = [[0, 0], [1, 1], [3, 5]]  # two ordinal features with 3 samples\nfrom thermoencoder import ThermoEncoder\nenc = ThermoEncoder()\nZ = enc.fit_transform(X)  # encode\nX_back = enc.inverse_transform(Z)  # decode\n```\n\n\n## Commands\n* Check syntax: `flake8 --ignore=F401`\n* Run Unit Tests: `python -W ignore -m unittest discover`\n* Remove `.pyc` files: `find . -type f -name \"*.pyc\" | xargs rm`\n* Remove `__pycache__` folders: `find . -type d -name \"__pycache__\" | xargs rm -rf`\n* Upload to PyPi: `python setup.py sdist upload -r pypi`\n* Upload to PyPi with twine: `python setup.py sdist && twine upload -r pypi dist/*`\n\n\n## Debugging\n* Notebooks to profile python code are in the [profile](profile) folder\n\n\n## Support\nPlease [open an issue](https://github.com/kmedian/thermoencoder/issues/new) for support.\n\n\n## Contributing\nPlease contribute using [Github Flow](https://guides.github.com/introduction/flow/). Create a branch, add commits, and [open a pull request](https://github.com/kmedian/thermoencoder/compare/).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/kmedian/thermoencoder", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "thermoencoder", "package_url": "https://pypi.org/project/thermoencoder/", "platform": "", "project_url": "https://pypi.org/project/thermoencoder/", "project_urls": {"Homepage": "http://github.com/kmedian/thermoencoder"}, "release_url": "https://pypi.org/project/thermoencoder/0.1.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Thermometer Encoding for ordinal variables", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/kmedian/thermoencoder\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/67ca2f2d6c810a2c41849a236f3a516e8a63dd52/68747470733a2f2f7472617669732d63692e6f72672f6b6d656469616e2f746865726d6f656e636f6465722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://mybinder.org/v2/gh/kmedian/thermoencoder/master?urlpath=lab\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86eb116bc9e98bea90d9454762d384d9cae5055c/68747470733a2f2f6d7962696e6465722e6f72672f62616467652e737667\"></a></p>\n<h1>thermoencoder</h1>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#commands\" rel=\"nofollow\">Commands</a></li>\n<li><a href=\"#support\" rel=\"nofollow\">Support</a></li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n</ul>\n<h2>Installation</h2>\n<p>The <code>thermoencoder</code> <a href=\"http://github.com/kmedian/thermoencoder\" rel=\"nofollow\">git repo</a> is available as <a href=\"https://pypi.org/project/thermoencoder\" rel=\"nofollow\">PyPi package</a></p>\n<pre><code>pip install thermoencoder\n</code></pre>\n<h2>Usage</h2>\n<p>Check the <a href=\"http://github.com/kmedian/thermoencoder/examples\" rel=\"nofollow\">examples</a> folder for notebooks.</p>\n<pre><code>X = [[0, 0], [1, 1], [3, 5]]  # two ordinal features with 3 samples\nfrom thermoencoder import ThermoEncoder\nenc = ThermoEncoder()\nZ = enc.fit_transform(X)  # encode\nX_back = enc.inverse_transform(Z)  # decode\n</code></pre>\n<h2>Commands</h2>\n<ul>\n<li>Check syntax: <code>flake8 --ignore=F401</code></li>\n<li>Run Unit Tests: <code>python -W ignore -m unittest discover</code></li>\n<li>Remove <code>.pyc</code> files: <code>find . -type f -name \"*.pyc\" | xargs rm</code></li>\n<li>Remove <code>__pycache__</code> folders: <code>find . -type d -name \"__pycache__\" | xargs rm -rf</code></li>\n<li>Upload to PyPi: <code>python setup.py sdist upload -r pypi</code></li>\n<li>Upload to PyPi with twine: <code>python setup.py sdist &amp;&amp; twine upload -r pypi dist/*</code></li>\n</ul>\n<h2>Debugging</h2>\n<ul>\n<li>Notebooks to profile python code are in the <a href=\"profile\" rel=\"nofollow\">profile</a> folder</li>\n</ul>\n<h2>Support</h2>\n<p>Please <a href=\"https://github.com/kmedian/thermoencoder/issues/new\" rel=\"nofollow\">open an issue</a> for support.</p>\n<h2>Contributing</h2>\n<p>Please contribute using <a href=\"https://guides.github.com/introduction/flow/\" rel=\"nofollow\">Github Flow</a>. Create a branch, add commits, and <a href=\"https://github.com/kmedian/thermoencoder/compare/\" rel=\"nofollow\">open a pull request</a>.</p>\n\n          </div>"}, "last_serial": 6028527, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "db2860ed1257c3ed236073f743e5f4ab", "sha256": "52ab0cdb59fbf872c7b8cd545b035c47793fc30d845b41f91e455ae7b69db26b"}, "downloads": -1, "filename": "thermoencoder-0.1.0.tar.gz", "has_sig": false, "md5_digest": "db2860ed1257c3ed236073f743e5f4ab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6678, "upload_time": "2019-07-26T08:03:10", "upload_time_iso_8601": "2019-07-26T08:03:10.370945Z", "url": "https://files.pythonhosted.org/packages/fc/70/6f955d772cb8819682041757e4597254fd3970470ca5e2f97299a90f9b7c/thermoencoder-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "78be6cc1ace78219b28f7ef5a90c7986", "sha256": "3fccb7acfdbfd3380bf208d4bb4663f7000f1db5da0406f86df703d4f9093f2e"}, "downloads": -1, "filename": "thermoencoder-0.1.1.tar.gz", "has_sig": false, "md5_digest": "78be6cc1ace78219b28f7ef5a90c7986", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6480, "upload_time": "2019-07-26T08:23:36", "upload_time_iso_8601": "2019-07-26T08:23:36.157969Z", "url": "https://files.pythonhosted.org/packages/f4/52/a5f3edbf1c6914858dd176c3bbca993e714dc66fa5afd3eef0b609f29ee7/thermoencoder-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "5ca639cdc375070c0f5aaa81ae27ff94", "sha256": "05bf0805205c8e5a2071652229cb14b2defd929bb9331c0fef84cd67e59274b0"}, "downloads": -1, "filename": "thermoencoder-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5ca639cdc375070c0f5aaa81ae27ff94", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3708, "upload_time": "2019-10-25T09:46:11", "upload_time_iso_8601": "2019-10-25T09:46:11.214248Z", "url": "https://files.pythonhosted.org/packages/f5/28/eba37dd717d5838a605821a6b037ebd71c58737a67e6df60909c7a2c1c31/thermoencoder-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5ca639cdc375070c0f5aaa81ae27ff94", "sha256": "05bf0805205c8e5a2071652229cb14b2defd929bb9331c0fef84cd67e59274b0"}, "downloads": -1, "filename": "thermoencoder-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5ca639cdc375070c0f5aaa81ae27ff94", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3708, "upload_time": "2019-10-25T09:46:11", "upload_time_iso_8601": "2019-10-25T09:46:11.214248Z", "url": "https://files.pythonhosted.org/packages/f5/28/eba37dd717d5838a605821a6b037ebd71c58737a67e6df60909c7a2c1c31/thermoencoder-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:01 2020"}