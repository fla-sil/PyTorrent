{"info": {"author": "Fabien Arcellier", "author_email": "fabien.arcellier@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Topic :: Software Development :: Build Tools", "Topic :: Text Processing :: Markup"], "description": "Motivation\r\n----------\r\n\r\nI need to generate a changelog based on git content. I want to controle\r\nthe structure of the changelog but I don't want to manage the git\r\ncontent.\r\n\r\n.. code:: text\r\n\r\n    ### from 2016-01 to 2016-05\r\n\r\n      We implements feature activation ...\r\n\r\n      * 2016-04-13 : Fabien Arcellier : feat: activate ...\r\n      * 2016-04-10 : Fabien Arcellier : feat: add index ...\r\n      * 2016-04-10 : Fabien Arcellier : feat: add search ...\r\n      * ...\r\n\r\nI need to manage the format and the place of content myself and let git\r\ngenerate some contents from a file ``CHANGELOG.md.in``\r\n\r\n.. code:: text\r\n\r\n    ### from 2016-01 to 2016-05\r\n\r\n      We implements feature activation ...\r\n\r\n      * @tsincluder git log --date=short --pretty=format:'%ad : %aN : %s'  --abbrev-commit --since=\"1/1/2016\" --until=\"4/31/2016\" | grep feat\r\n\r\nTo generate ``CHANGELOG.md``, run\r\n\r\n.. code:: bash\r\n\r\n    tsincluder CHANGELOG.md.in > CHANGELOG.md\r\n\r\nSynopsis\r\n--------\r\n\r\n``tsincluder`` means Text Script Inclusion Manager. ``tsincluder`` is a\r\n``cli`` and a ``library`` you can call from a python script that will\r\nreplace a markup as ``@tsincluder echo hello world`` by ``hello world``.\r\n\r\nIt keep the content that prefix the markup to generate a valid format as\r\nmarkdown and add it on all the lines if tsincluder generate many lines.\r\n\r\nThe latest version\r\n------------------\r\n\r\nYou can find the latest version to ...\r\n\r\n::\r\n\r\n    git clone https://github.com/FabienArcellier/tsincluder.git\r\n\r\nUsage\r\n-----\r\n\r\nrun tsincluder to replace the markers @tsinclude (text script include)\r\nby the content generate by the command on stdout\r\n\r\n.. code:: python\r\n\r\n    python -m tsincluder file.in\r\n\r\nto use it as a library\r\n\r\n.. code:: python\r\n\r\n    from tsincluder import Processor\r\n\r\n    line = \" * @tsincluder git log --date=short --pretty=format:'%ad : %aN : %s'  --abbrev-commit --since=\"1/1/2016\" --until=\"4/31/2016\" | grep feat\"\r\n    processor = Processor()\r\n    content = processor.process(line)\r\n    print(content)\r\n\r\nAs tsincluder executes a subprocess command, the script can configure\r\nthe working directory and markup\r\n\r\n.. code:: python\r\n\r\n    from tsincluder import Processor\r\n\r\n    processor = Processor(working_directory=\"/tmp\", markup=\"@other_markup\")\r\n\r\nInstallation\r\n------------\r\n\r\nInstall tsincluder using PyPi\r\n\r\n.. code:: bash\r\n\r\n    pip install tsincluder\r\n\r\nInstall tsincluder from the source\r\n\r\n.. code:: bash\r\n\r\n    python setup.py install\r\n\r\nTests\r\n-----\r\n\r\nUse make to execute unit tests.\r\n\r\n::\r\n\r\n    make tests\r\n\r\nContributors\r\n------------\r\n\r\n-  Fabien Arcellier\r\n\r\nLicense\r\n-------\r\n\r\n::\r\n\r\n    This Source Code Form is subject to the terms of the Mozilla Public\r\n    License, v. 2.0. If a copy of the MPL was not distributed with this\r\n    file, You can obtain one at http://mozilla.org/MPL/2.0/.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FabienArcellier/tsincluder", "keywords": "", "license": "Mozilla Public License, v. 2.0", "maintainer": "", "maintainer_email": "", "name": "tsincluder", "package_url": "https://pypi.org/project/tsincluder/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tsincluder/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/FabienArcellier/tsincluder"}, "release_url": "https://pypi.org/project/tsincluder/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Text Script Inclusions Manager generate contents from any text file based on shell instructions", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"motivation\">\n<h2>Motivation</h2>\n<p>I need to generate a changelog based on git content. I want to controle\nthe structure of the changelog but I don\u2019t want to manage the git\ncontent.</p>\n<pre>### from 2016-01 to 2016-05\n\n  We implements feature activation ...\n\n  * 2016-04-13 : Fabien Arcellier : feat: activate ...\n  * 2016-04-10 : Fabien Arcellier : feat: add index ...\n  * 2016-04-10 : Fabien Arcellier : feat: add search ...\n  * ...\n</pre>\n<p>I need to manage the format and the place of content myself and let git\ngenerate some contents from a file <tt>CHANGELOG.md.in</tt></p>\n<pre>### from 2016-01 to 2016-05\n\n  We implements feature activation ...\n\n  * @tsincluder git log --date=short --pretty=format:'%ad : %aN : %s'  --abbrev-commit --since=\"1/1/2016\" --until=\"4/31/2016\" | grep feat\n</pre>\n<p>To generate <tt>CHANGELOG.md</tt>, run</p>\n<pre>tsincluder CHANGELOG.md.in &gt; CHANGELOG.md\n</pre>\n</div>\n<div id=\"synopsis\">\n<h2>Synopsis</h2>\n<p><tt>tsincluder</tt> means Text Script Inclusion Manager. <tt>tsincluder</tt> is a\n<tt>cli</tt> and a <tt>library</tt> you can call from a python script that will\nreplace a markup as <tt>@tsincluder echo hello world</tt> by <tt>hello world</tt>.</p>\n<p>It keep the content that prefix the markup to generate a valid format as\nmarkdown and add it on all the lines if tsincluder generate many lines.</p>\n</div>\n<div id=\"the-latest-version\">\n<h2>The latest version</h2>\n<p>You can find the latest version to \u2026</p>\n<pre>git clone https://github.com/FabienArcellier/tsincluder.git\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>run tsincluder to replace the markers @tsinclude (text script include)\nby the content generate by the command on stdout</p>\n<pre><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"n\">tsincluder</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"ow\">in</span>\n</pre>\n<p>to use it as a library</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tsincluder</span> <span class=\"kn\">import</span> <span class=\"n\">Processor</span>\n\n<span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"s2\">\" * @tsincluder git log --date=short --pretty=format:'</span><span class=\"si\">%a</span><span class=\"s2\">d : </span><span class=\"si\">%a</span><span class=\"s2\">N : </span><span class=\"si\">%s</span><span class=\"s2\">'  --abbrev-commit --since=\"</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">2016</span><span class=\"s2\">\" --until=\"</span><span class=\"mi\">4</span><span class=\"o\">/</span><span class=\"mi\">31</span><span class=\"o\">/</span><span class=\"mi\">2016</span><span class=\"s2\">\" | grep feat\"</span>\n<span class=\"n\">processor</span> <span class=\"o\">=</span> <span class=\"n\">Processor</span><span class=\"p\">()</span>\n<span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">processor</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">)</span>\n</pre>\n<p>As tsincluder executes a subprocess command, the script can configure\nthe working directory and markup</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tsincluder</span> <span class=\"kn\">import</span> <span class=\"n\">Processor</span>\n\n<span class=\"n\">processor</span> <span class=\"o\">=</span> <span class=\"n\">Processor</span><span class=\"p\">(</span><span class=\"n\">working_directory</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp\"</span><span class=\"p\">,</span> <span class=\"n\">markup</span><span class=\"o\">=</span><span class=\"s2\">\"@other_markup\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install tsincluder using PyPi</p>\n<pre>pip install tsincluder\n</pre>\n<p>Install tsincluder from the source</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Use make to execute unit tests.</p>\n<pre>make tests\n</pre>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li>Fabien Arcellier</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<pre>This Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2282260, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "448eeb03f63a024b2ca540970f78bc82", "sha256": "3b2f53d81e6d21d7d0ba8e90a18c212b5b7dd2bf78dea312e905a2dc1cc3201b"}, "downloads": -1, "filename": "tsincluder-0.1.tar.gz", "has_sig": false, "md5_digest": "448eeb03f63a024b2ca540970f78bc82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3228, "upload_time": "2016-08-15T14:22:31", "upload_time_iso_8601": "2016-08-15T14:22:31.663673Z", "url": "https://files.pythonhosted.org/packages/75/44/1f711889b1c07c4480ebe08e3f64829f6be30ced1bd51e52ae72800f0ab6/tsincluder-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "daaabf86f67b188d65a938ba6c71a4a2", "sha256": "21ef4413172356633653e33001090d2f1fde02d65eb9c64f9f3015b4def4a2c5"}, "downloads": -1, "filename": "tsincluder-0.1.1.tar.gz", "has_sig": false, "md5_digest": "daaabf86f67b188d65a938ba6c71a4a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3248, "upload_time": "2016-08-15T14:27:01", "upload_time_iso_8601": "2016-08-15T14:27:01.971758Z", "url": "https://files.pythonhosted.org/packages/bd/58/e2f007ff2eebfdfb35bc37f66ca29b51d4f0fac4338d9e269fb39583e022/tsincluder-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "daaabf86f67b188d65a938ba6c71a4a2", "sha256": "21ef4413172356633653e33001090d2f1fde02d65eb9c64f9f3015b4def4a2c5"}, "downloads": -1, "filename": "tsincluder-0.1.1.tar.gz", "has_sig": false, "md5_digest": "daaabf86f67b188d65a938ba6c71a4a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3248, "upload_time": "2016-08-15T14:27:01", "upload_time_iso_8601": "2016-08-15T14:27:01.971758Z", "url": "https://files.pythonhosted.org/packages/bd/58/e2f007ff2eebfdfb35bc37f66ca29b51d4f0fac4338d9e269fb39583e022/tsincluder-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:45:18 2020"}