{"info": {"author": "Sumit Rana", "author_email": "rana.sumit93@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=======\nDbReact\n=======\n\nDbReact is simple but effective django app which makes any database defined within the project reactive \nusing SSE ( Server Side Events - no need to install anything for sse | its a http concept ).\n\nThe library provides any addition ,or deletion of objects in model ( row in rdms table ) ,in a json based protocol\n( sends json structure of objects deleted and added ) to the client (Android ,Ios ,Web).\n\n( On more Granular Level ) you can also make group of Model objects as reactive .\n\nQuick start\n-----------\n\n1. Add middleware string in middleware list of your project (in settings.py):\n\n    MIDDLEWARE_CLASSES = [\n        ...\n        'DbReactCreator.reactMiddle.reactiveMiddleware',\n    ]\n\n2. Import reactive decorator to views where you want to create the event pusher, and then create eventsource::\n\n\tfrom DbReactCreator.reactDecorators import dbreact\n\n\t...\n\n\t@dbreact(\"unique_id_for_eventsource_in_string\")\n\tdef pusher_function(request):\n\t\trequest.META['objects_to_be_reactive'] = Model.objects.all() | Model.objects.filter() ( always a list of queryset objects)\n\t\trequest.META['for_model'] = Model\n\t\treturn JsonResponse({},status=200)\n\n\n3. Define a url for the view , and pass it to the client (mobile | web) .\n\n4. As soon as client registers the url ,it starts getting json objects of the elements not present on its end.\n\n* Format of data received by client :\n\t{ add: [ json_serialized_queryset_object, ... ],\n\t  delete: [ json_serialized_queryset_object, ... ]\n\t  }\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-dbreact", "package_url": "https://pypi.org/project/django-dbreact/", "platform": "", "project_url": "https://pypi.org/project/django-dbreact/", "project_urls": null, "release_url": "https://pypi.org/project/django-dbreact/0.3/", "requires_dist": null, "requires_python": "", "summary": "A Django based library to make django database reactive using Server Side Events .", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            =======<br>DbReact<br>=======<br><br>DbReact is simple but effective django app which makes any database defined within the project reactive <br>using SSE ( Server Side Events - no need to install anything for sse | its a http concept ).<br><br>The library provides any addition ,or deletion of objects in model ( row in rdms table ) ,in a json based protocol<br>( sends json structure of objects deleted and added ) to the client (Android ,Ios ,Web).<br><br>( On more Granular Level ) you can also make group of Model objects as reactive .<br><br>Quick start<br>-----------<br><br>1. Add middleware string in middleware list of your project (in settings.py):<br><br>    MIDDLEWARE_CLASSES = [<br>        ...<br>        'DbReactCreator.reactMiddle.reactiveMiddleware',<br>    ]<br><br>2. Import reactive decorator to views where you want to create the event pusher, and then create eventsource::<br><br>\tfrom DbReactCreator.reactDecorators import dbreact<br><br>\t...<br><br>\t@dbreact(\"unique_id_for_eventsource_in_string\")<br>\tdef pusher_function(request):<br>\t\trequest.META['objects_to_be_reactive'] = Model.objects.all() | Model.objects.filter() ( always a list of queryset objects)<br>\t\trequest.META['for_model'] = Model<br>\t\treturn JsonResponse({},status=200)<br><br><br>3. Define a url for the view , and pass it to the client (mobile | web) .<br><br>4. As soon as client registers the url ,it starts getting json objects of the elements not present on its end.<br><br>* Format of data received by client :<br>\t{ add: [ json_serialized_queryset_object, ... ],<br>\t  delete: [ json_serialized_queryset_object, ... ]<br>\t  }<br><br>\n          </div>"}, "last_serial": 3400919, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "a8f34cd111562564583fe139e4f3f927", "sha256": "61f616d7120ac82114990922ba4b13783f022a672224a017a9df70ea9159e3ef"}, "downloads": -1, "filename": "django_dbreact-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "a8f34cd111562564583fe139e4f3f927", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5803, "upload_time": "2017-12-06T13:34:43", "upload_time_iso_8601": "2017-12-06T13:34:43.889058Z", "url": "https://files.pythonhosted.org/packages/54/6f/3187b2b744fe6110c2252bd450ea41b156ee9a34e409eef4b8865310fdfa/django_dbreact-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "418856ca74ef2f2ffedfc6ac4af2e7be", "sha256": "f221c37700ff1c6274166a85a9b20b4bfeb00c494858eba3918112df15d48853"}, "downloads": -1, "filename": "django-dbreact-0.2.tar.gz", "has_sig": false, "md5_digest": "418856ca74ef2f2ffedfc6ac4af2e7be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3186, "upload_time": "2017-12-06T13:34:45", "upload_time_iso_8601": "2017-12-06T13:34:45.407563Z", "url": "https://files.pythonhosted.org/packages/32/8e/4e252a2601bdecd5e0e39dccdbb3fbb247f618a516bc5ff1a7e50d781606/django-dbreact-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "d8a4c769793edba6c73269b230f4d70b", "sha256": "9855c4ddc745bf9af33a16d44528c9ed208bc650585224da16aa87b5b1d31d9e"}, "downloads": -1, "filename": "django_dbreact-0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "d8a4c769793edba6c73269b230f4d70b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6520, "upload_time": "2017-12-08T13:47:18", "upload_time_iso_8601": "2017-12-08T13:47:18.491304Z", "url": "https://files.pythonhosted.org/packages/db/d6/826bb6f26b9b43b4b859a52e4c9608a6c06f7669c63e55e7e4a5d8d84df4/django_dbreact-0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c7dc522231001e82510188cfed84401", "sha256": "b2a5b7c4d67a2e3918601c4e120529b82948381ade14239ae94418546091016d"}, "downloads": -1, "filename": "django-dbreact-0.3.tar.gz", "has_sig": false, "md5_digest": "1c7dc522231001e82510188cfed84401", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3533, "upload_time": "2017-12-08T13:47:21", "upload_time_iso_8601": "2017-12-08T13:47:21.162141Z", "url": "https://files.pythonhosted.org/packages/85/df/173d26fadb040b9cafd77361785fc186f88a26fea8fcf9574890615fba7d/django-dbreact-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d8a4c769793edba6c73269b230f4d70b", "sha256": "9855c4ddc745bf9af33a16d44528c9ed208bc650585224da16aa87b5b1d31d9e"}, "downloads": -1, "filename": "django_dbreact-0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "d8a4c769793edba6c73269b230f4d70b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6520, "upload_time": "2017-12-08T13:47:18", "upload_time_iso_8601": "2017-12-08T13:47:18.491304Z", "url": "https://files.pythonhosted.org/packages/db/d6/826bb6f26b9b43b4b859a52e4c9608a6c06f7669c63e55e7e4a5d8d84df4/django_dbreact-0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c7dc522231001e82510188cfed84401", "sha256": "b2a5b7c4d67a2e3918601c4e120529b82948381ade14239ae94418546091016d"}, "downloads": -1, "filename": "django-dbreact-0.3.tar.gz", "has_sig": false, "md5_digest": "1c7dc522231001e82510188cfed84401", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3533, "upload_time": "2017-12-08T13:47:21", "upload_time_iso_8601": "2017-12-08T13:47:21.162141Z", "url": "https://files.pythonhosted.org/packages/85/df/173d26fadb040b9cafd77361785fc186f88a26fea8fcf9574890615fba7d/django-dbreact-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:38 2020"}