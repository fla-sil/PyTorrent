{"info": {"author": "Calvin DeBoer", "author_email": "cgdeboer@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "Environize\n========================================\n\n.. image:: https://travis-ci.org/cgdeboer/environize.svg?branch=master\n    :target: https://travis-ci.org/cgdeboer/environize\n\n.. image:: https://img.shields.io/pypi/v/iteround.svg\n    :target: https://pypi.org/project/environize/\n\n.. image:: https://raw.githubusercontent.com/cgdeboer/environize/master/docs/environize.png\n\n**Environize enables environment and state savvy DataMigration tools for Django**\n\n1. Decorators\n    - adds a pair of decorators (**only_in** and **except_in**) for use with the **migrations.RunPython** method.\n    - use django's DataMigrations to allow dev data and prod data to be different.\n    - exclude large data creation migrations from tests which may define their own data.\n\n2. Command(s)\n    - adds a **loaddata** method that loads JSON fixtures into the database based on the state of the migration.\n    - different from ``./manage.py loaddata`` or ``call_command(\"loaddata\")``, which both load fixtures to the database based on the current state of models.\n    - no more updating fixtures to keep them current. The data model in the fixture is tied to the state of your models in the migration.\n\nDecorators - Usage\n------------------\n\n*Exclude Tests*\n\n.. code-block:: python\n\n    from django.db import migrations\n    import environize\n\n    # runs in every env except testing\n    @environize.except_in(envs=[\"test\"])\n    def except_test_data(apps, schema_editor):\n        Ham = apps.get_model(\"app\", \"Ham\")\n        Ham.objects.create(name=\"not-test\")\n\n    @environize.except_in(envs=[\"test\"])\n    def remove_hams(apps, schema_editor):\n        Ham = apps.get_model(\"app\", \"Ham\")\n        Ham.objects.all().delete()\n\n\n    class Migration(migrations.Migration):\n\n        dependencies = [\n            ('app', '0002_auto_20180916_1122'),\n        ]\n\n        operations = [\n            migrations.RunPython(except_test_data, remove_hams)\n        ]\n\n*Production Only Data*\n\n.. code-block:: python\n\n    from django.db import migrations\n    import environize\n\n    # runs in every env except testing\n    @environize.only_in(envs=[\"production\"])\n    def add_prod_data(apps, schema_editor):\n        Ham = apps.get_model(\"app\", \"Ham\")\n        Ham.objects.create(name=\"not-test\")\n\n    @environize.only_in(envs=[\"production\"])\n    def remove_hams(apps, schema_editor):\n        Ham = apps.get_model(\"app\", \"Ham\")\n        Ham.objects.all().delete()\n\n\n    class Migration(migrations.Migration):\n\n        dependencies = [\n            ('app', '0002_auto_20180916_1122'),\n        ]\n\n        operations = [\n            migrations.RunPython(add_prod_data, remove_hams)\n        ]\n\n\nCommands - Usage\n------------------\n\n.. code-block:: python\n\n    import os\n    from django.db import migrations\n    import environize\n\n    PATH = 'path/to/fixtures/'\n\n    def load_fixture(apps, schema_editor):\n        fixture_file = os.path.join(PATH, 'myfixture.json')\n        environize.loaddata(apps, fixture_file)\n\n\n    class Migration(migrations.Migration):\n\n        dependencies = [\n            ('app', '0003_auto_20180916_1122'),\n        ]\n\n        operations = [\n            migrations.RunPython(load_fixture, lambda x, y: None)\n        ]\n\n\n\nFeature Support\n---------------\n\nEnvironize officially supports:\n    - Python 2.7 on Django 1.11 LTS\n    - Python 3.5+ on Django 2+\n\n\nInstallation\n------------\n\nTo install Environize, use `pipenv <http://pipenv.org/>`_ (or pip, of course):\n\n.. code-block:: bash\n\n    $ pipenv install environize\n\n\n*Inside various settings files set an ENVIRONMENT variable.*\n\n.. code-block:: python\n\n    # /settings_production.py\n    ENVIRONMENT = 'production'\n\n    # /settings_qa.py\n    ENVIRONMENT = 'qa'\n\n    # /settings_dev.py\n    ENVIRONMENT = 'dev'\n\nThe default env keys are listed below but can be overridden by setting ENVIRONIZE_ENVS in your django settings:\n\n.. code-block:: python\n\n    # these are the default env keys\n    ENVIRONIZE_ENVS = (\"dev\", \"test\", \"ci\", \"qa\", \"staging\", \"production\")\n\n    # by default this key will be used if one is not set in a settings file.\n    DEFAULT_ENV = \"dev\"\n\n\nDocumentation\n-------------\n\nTBD\n\n\nHow to Contribute\n-----------------\n\n#. Check for open issues or open a fresh issue to start a discussion around a feature idea or a bug.\n#. Fork `the repository`_ on GitHub to start making your changes to the **master** branch (or branch off of it).\n#. Write a test which shows that the bug was fixed or that the feature works as expected.\n#. Send a pull request. Make sure to add yourself to AUTHORS_.\n\n.. _`the repository`: https://github.com/cgdeboer/environize\n.. _AUTHORS: https://github.com/cgdeboer/environize/blob/master/AUTHORS.rst\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cgdeboer/environize", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "environize", "package_url": "https://pypi.org/project/environize/", "platform": "", "project_url": "https://pypi.org/project/environize/", "project_urls": {"Homepage": "https://github.com/cgdeboer/environize"}, "release_url": "https://pypi.org/project/environize/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "enables environment and state savvy DataMigration tools for Django", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/cgdeboer/environize\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/cgdeboer/environize.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/77cba38cef5fb0eb6960ddbf48b83faac830cee6/68747470733a2f2f7472617669732d63692e6f72672f63676465626f65722f656e7669726f6e697a652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/environize/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/iteround.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24d5e512c4c737bd43db171d85f296950f2173fd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f697465726f756e642e737667\"></a>\n<img alt=\"https://raw.githubusercontent.com/cgdeboer/environize/master/docs/environize.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d66e1c99023dae6ec81f0d6746d5e966e3f9f95/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f63676465626f65722f656e7669726f6e697a652f6d61737465722f646f63732f656e7669726f6e697a652e706e67\">\n<p><strong>Environize enables environment and state savvy DataMigration tools for Django</strong></p>\n<ol>\n<li><dl>\n<dt>Decorators</dt>\n<dd><ul>\n<li>adds a pair of decorators (<strong>only_in</strong> and <strong>except_in</strong>) for use with the <strong>migrations.RunPython</strong> method.</li>\n<li>use django\u2019s DataMigrations to allow dev data and prod data to be different.</li>\n<li>exclude large data creation migrations from tests which may define their own data.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Command(s)</dt>\n<dd><ul>\n<li>adds a <strong>loaddata</strong> method that loads JSON fixtures into the database based on the state of the migration.</li>\n<li>different from <tt>./manage.py loaddata</tt> or <tt><span class=\"pre\">call_command(\"loaddata\")</span></tt>, which both load fixtures to the database based on the current state of models.</li>\n<li>no more updating fixtures to keep them current. The data model in the fixture is tied to the state of your models in the migration.</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ol>\n<div id=\"decorators-usage\">\n<h2>Decorators - Usage</h2>\n<p><em>Exclude Tests</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">migrations</span>\n<span class=\"kn\">import</span> <span class=\"nn\">environize</span>\n\n<span class=\"c1\"># runs in every env except testing</span>\n<span class=\"nd\">@environize</span><span class=\"o\">.</span><span class=\"n\">except_in</span><span class=\"p\">(</span><span class=\"n\">envs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"test\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">except_test_data</span><span class=\"p\">(</span><span class=\"n\">apps</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n    <span class=\"n\">Ham</span> <span class=\"o\">=</span> <span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_model</span><span class=\"p\">(</span><span class=\"s2\">\"app\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Ham\"</span><span class=\"p\">)</span>\n    <span class=\"n\">Ham</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"not-test\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@environize</span><span class=\"o\">.</span><span class=\"n\">except_in</span><span class=\"p\">(</span><span class=\"n\">envs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"test\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">remove_hams</span><span class=\"p\">(</span><span class=\"n\">apps</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n    <span class=\"n\">Ham</span> <span class=\"o\">=</span> <span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_model</span><span class=\"p\">(</span><span class=\"s2\">\"app\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Ham\"</span><span class=\"p\">)</span>\n    <span class=\"n\">Ham</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Migration</span><span class=\"p\">(</span><span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">Migration</span><span class=\"p\">):</span>\n\n    <span class=\"n\">dependencies</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'app'</span><span class=\"p\">,</span> <span class=\"s1\">'0002_auto_20180916_1122'</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"n\">operations</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">RunPython</span><span class=\"p\">(</span><span class=\"n\">except_test_data</span><span class=\"p\">,</span> <span class=\"n\">remove_hams</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n</pre>\n<p><em>Production Only Data</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">migrations</span>\n<span class=\"kn\">import</span> <span class=\"nn\">environize</span>\n\n<span class=\"c1\"># runs in every env except testing</span>\n<span class=\"nd\">@environize</span><span class=\"o\">.</span><span class=\"n\">only_in</span><span class=\"p\">(</span><span class=\"n\">envs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"production\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_prod_data</span><span class=\"p\">(</span><span class=\"n\">apps</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n    <span class=\"n\">Ham</span> <span class=\"o\">=</span> <span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_model</span><span class=\"p\">(</span><span class=\"s2\">\"app\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Ham\"</span><span class=\"p\">)</span>\n    <span class=\"n\">Ham</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"not-test\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@environize</span><span class=\"o\">.</span><span class=\"n\">only_in</span><span class=\"p\">(</span><span class=\"n\">envs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"production\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">remove_hams</span><span class=\"p\">(</span><span class=\"n\">apps</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n    <span class=\"n\">Ham</span> <span class=\"o\">=</span> <span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_model</span><span class=\"p\">(</span><span class=\"s2\">\"app\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Ham\"</span><span class=\"p\">)</span>\n    <span class=\"n\">Ham</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Migration</span><span class=\"p\">(</span><span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">Migration</span><span class=\"p\">):</span>\n\n    <span class=\"n\">dependencies</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'app'</span><span class=\"p\">,</span> <span class=\"s1\">'0002_auto_20180916_1122'</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"n\">operations</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">RunPython</span><span class=\"p\">(</span><span class=\"n\">add_prod_data</span><span class=\"p\">,</span> <span class=\"n\">remove_hams</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"commands-usage\">\n<h2>Commands - Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">migrations</span>\n<span class=\"kn\">import</span> <span class=\"nn\">environize</span>\n\n<span class=\"n\">PATH</span> <span class=\"o\">=</span> <span class=\"s1\">'path/to/fixtures/'</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">load_fixture</span><span class=\"p\">(</span><span class=\"n\">apps</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n    <span class=\"n\">fixture_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">PATH</span><span class=\"p\">,</span> <span class=\"s1\">'myfixture.json'</span><span class=\"p\">)</span>\n    <span class=\"n\">environize</span><span class=\"o\">.</span><span class=\"n\">loaddata</span><span class=\"p\">(</span><span class=\"n\">apps</span><span class=\"p\">,</span> <span class=\"n\">fixture_file</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Migration</span><span class=\"p\">(</span><span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">Migration</span><span class=\"p\">):</span>\n\n    <span class=\"n\">dependencies</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'app'</span><span class=\"p\">,</span> <span class=\"s1\">'0003_auto_20180916_1122'</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"n\">operations</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">RunPython</span><span class=\"p\">(</span><span class=\"n\">load_fixture</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"feature-support\">\n<h2>Feature Support</h2>\n<dl>\n<dt>Environize officially supports:</dt>\n<dd><ul>\n<li>Python 2.7 on Django 1.11 LTS</li>\n<li>Python 3.5+ on Django 2+</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install Environize, use <a href=\"http://pipenv.org/\" rel=\"nofollow\">pipenv</a> (or pip, of course):</p>\n<pre>$ pipenv install environize\n</pre>\n<p><em>Inside various settings files set an ENVIRONMENT variable.</em></p>\n<pre><span class=\"c1\"># /settings_production.py</span>\n<span class=\"n\">ENVIRONMENT</span> <span class=\"o\">=</span> <span class=\"s1\">'production'</span>\n\n<span class=\"c1\"># /settings_qa.py</span>\n<span class=\"n\">ENVIRONMENT</span> <span class=\"o\">=</span> <span class=\"s1\">'qa'</span>\n\n<span class=\"c1\"># /settings_dev.py</span>\n<span class=\"n\">ENVIRONMENT</span> <span class=\"o\">=</span> <span class=\"s1\">'dev'</span>\n</pre>\n<p>The default env keys are listed below but can be overridden by setting ENVIRONIZE_ENVS in your django settings:</p>\n<pre><span class=\"c1\"># these are the default env keys</span>\n<span class=\"n\">ENVIRONIZE_ENVS</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"dev\"</span><span class=\"p\">,</span> <span class=\"s2\">\"test\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ci\"</span><span class=\"p\">,</span> <span class=\"s2\">\"qa\"</span><span class=\"p\">,</span> <span class=\"s2\">\"staging\"</span><span class=\"p\">,</span> <span class=\"s2\">\"production\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># by default this key will be used if one is not set in a settings file.</span>\n<span class=\"n\">DEFAULT_ENV</span> <span class=\"o\">=</span> <span class=\"s2\">\"dev\"</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>TBD</p>\n</div>\n<div id=\"how-to-contribute\">\n<h2>How to Contribute</h2>\n<ol>\n<li>Check for open issues or open a fresh issue to start a discussion around a feature idea or a bug.</li>\n<li>Fork <a href=\"https://github.com/cgdeboer/environize\" rel=\"nofollow\">the repository</a> on GitHub to start making your changes to the <strong>master</strong> branch (or branch off of it).</li>\n<li>Write a test which shows that the bug was fixed or that the feature works as expected.</li>\n<li>Send a pull request. Make sure to add yourself to <a href=\"https://github.com/cgdeboer/environize/blob/master/AUTHORS.rst\" rel=\"nofollow\">AUTHORS</a>.</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 4286648, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "051fa3481436e289667a97dd9d3e5ef0", "sha256": "41e1f23d5f9b7f8253354f544d7b76400ff7b7751eb6cb71b2523537b453ea0b"}, "downloads": -1, "filename": "environize-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "051fa3481436e289667a97dd9d3e5ef0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10377, "upload_time": "2018-09-19T00:57:38", "upload_time_iso_8601": "2018-09-19T00:57:38.235736Z", "url": "https://files.pythonhosted.org/packages/a3/95/820effc5f174c9ddf45c762c45a48038ef61d54e0e1b1fa7c6aa7d53f22f/environize-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e17819c928ee3c74a6b9b13d1017dc69", "sha256": "e2f1f55f245f408d9013e82126253981009571d1c9b21f6f4d4da12559b15c2e"}, "downloads": -1, "filename": "environize-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e17819c928ee3c74a6b9b13d1017dc69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7691, "upload_time": "2018-09-19T00:57:39", "upload_time_iso_8601": "2018-09-19T00:57:39.994317Z", "url": "https://files.pythonhosted.org/packages/0c/a4/f1f864376b415e48093b8a2d40379e1229684b5bcc83aa105bb1d35f2e7e/environize-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "051fa3481436e289667a97dd9d3e5ef0", "sha256": "41e1f23d5f9b7f8253354f544d7b76400ff7b7751eb6cb71b2523537b453ea0b"}, "downloads": -1, "filename": "environize-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "051fa3481436e289667a97dd9d3e5ef0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10377, "upload_time": "2018-09-19T00:57:38", "upload_time_iso_8601": "2018-09-19T00:57:38.235736Z", "url": "https://files.pythonhosted.org/packages/a3/95/820effc5f174c9ddf45c762c45a48038ef61d54e0e1b1fa7c6aa7d53f22f/environize-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e17819c928ee3c74a6b9b13d1017dc69", "sha256": "e2f1f55f245f408d9013e82126253981009571d1c9b21f6f4d4da12559b15c2e"}, "downloads": -1, "filename": "environize-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e17819c928ee3c74a6b9b13d1017dc69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7691, "upload_time": "2018-09-19T00:57:39", "upload_time_iso_8601": "2018-09-19T00:57:39.994317Z", "url": "https://files.pythonhosted.org/packages/0c/a4/f1f864376b415e48093b8a2d40379e1229684b5bcc83aa105bb1d35f2e7e/environize-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:09 2020"}