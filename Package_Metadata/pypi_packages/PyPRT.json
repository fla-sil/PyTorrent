{"info": {"author": "Esri R&D Center Zurich", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: Free for non-commercial use", "License :: OSI Approved :: Apache Software License", "Operating System :: Microsoft :: Windows", "Operating System :: Unix", "Programming Language :: C++", "Programming Language :: Python", "Programming Language :: Python :: 3 :: Only", "Topic :: Multimedia :: Graphics :: 3D Modeling", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "\nPyPRT is a Python binding for PRT (\"Procedural Runtime\"). It enables the execution of [CityEngine](http://www.esri.com/software/cityengine) \nCGA rules within Python. Using PyPRT, the generation of 3D content in Python is greatly simplified. Therefore, Python developers, data \nscientists, GIS analysts, etc. can efficiently make use of CityEngine rule packages in order to create 3D geometries stored as Python data \nstructures, or to export these geometries in another format (like OBJ, Scene Layer Package, ... ). Given an initial geometry, on which to \napply the CGA rule, the 3D generation is procedurally done in Python (Python script, Jupyter Notebook, ...). This allows for efficient and \ncustomizable geometry generation. For instance, when modeling buildings, PyPRT users can easily change the parameters of the generated \nbuildings (like the height or the shape) by changing the values of the CGA rule input attributes.\n\nPyPRT 3D content generation is based on CGA rule packages (RPK), which are authored in CityEngine. RPKs contain the CGA rule files that \ndefine the shape transformations, as well as supplementary assets. RPK examples can be found below and directly used in PyPRT.\n\nPyPRT allows generating 3D models on multiple initial geometries. Different input attributes can be applied on each of these initial \nshapes. Moreover, the outputted 3D geometries can either be used inside Python or exported to another format by using one of PRT encoders.\n\n*PyPRT is free for non-commercial use.* Commercial use requires at least one commercial license of the latest CityEngine version installed \nin the organization. No redistribution is allowed. An exception is the PyPRT source code (without CityEngine SDK, binaries or object code), \nwhich is licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this work except in compliance with the License. \nYou may obtain a copy of the License at [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/Esri/pyprt/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://esri.github.io/pyprt/", "keywords": "", "license": "PyPRT is under the same license as the included CityEngine SDK. An exception is the PyPRT source code, which is licensed under the Apache License, Version 2.0.", "maintainer": "", "maintainer_email": "", "name": "PyPRT", "package_url": "https://pypi.org/project/PyPRT/", "platform": "Windows", "project_url": "https://pypi.org/project/PyPRT/", "project_urls": {"Documentation": "https://github.com/Esri/pyprt/blob/master/README.md#documentation", "Download": "https://github.com/Esri/pyprt/releases", "Examples": "https://github.com/Esri/pyprt-examples", "Homepage": "https://esri.github.io/pyprt/", "Source Code": "https://github.com/Esri/pyprt"}, "release_url": "https://pypi.org/project/PyPRT/1.0.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Python bindings for the \"Procedural Runtime\" (PRT) of CityEngine by Esri.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>PyPRT is a Python binding for PRT (\"Procedural Runtime\"). It enables the execution of <a href=\"http://www.esri.com/software/cityengine\" rel=\"nofollow\">CityEngine</a>\nCGA rules within Python. Using PyPRT, the generation of 3D content in Python is greatly simplified. Therefore, Python developers, data\nscientists, GIS analysts, etc. can efficiently make use of CityEngine rule packages in order to create 3D geometries stored as Python data\nstructures, or to export these geometries in another format (like OBJ, Scene Layer Package, ... ). Given an initial geometry, on which to\napply the CGA rule, the 3D generation is procedurally done in Python (Python script, Jupyter Notebook, ...). This allows for efficient and\ncustomizable geometry generation. For instance, when modeling buildings, PyPRT users can easily change the parameters of the generated\nbuildings (like the height or the shape) by changing the values of the CGA rule input attributes.</p>\n<p>PyPRT 3D content generation is based on CGA rule packages (RPK), which are authored in CityEngine. RPKs contain the CGA rule files that\ndefine the shape transformations, as well as supplementary assets. RPK examples can be found below and directly used in PyPRT.</p>\n<p>PyPRT allows generating 3D models on multiple initial geometries. Different input attributes can be applied on each of these initial\nshapes. Moreover, the outputted 3D geometries can either be used inside Python or exported to another format by using one of PRT encoders.</p>\n<p><em>PyPRT is free for non-commercial use.</em> Commercial use requires at least one commercial license of the latest CityEngine version installed\nin the organization. No redistribution is allowed. An exception is the PyPRT source code (without CityEngine SDK, binaries or object code),\nwhich is licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this work except in compliance with the License.\nYou may obtain a copy of the License at <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a>.</p>\n\n          </div>"}, "last_serial": 7109746, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "666535ff09d3a9dfafec7eca63238aa8", "sha256": "555a5b9a9d2967800a058dc494ca31277cc7affb7cc15d540e0fd31ea8d6c6c7"}, "downloads": -1, "filename": "pyprt-1.0.0-31-cp36-cp36m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "666535ff09d3a9dfafec7eca63238aa8", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 16799003, "upload_time": "2020-04-27T08:31:41", "upload_time_iso_8601": "2020-04-27T08:31:41.195448Z", "url": "https://files.pythonhosted.org/packages/8b/cd/6e829562e8ec9419e46025213f11d154705ecc6da62a13e7cdb654c8a82d/pyprt-1.0.0-31-cp36-cp36m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e77597f6a640cae07d569c448258267", "sha256": "eaffa68719e69dc294e99aec598fa489698bb3e11ab8dd8818701e1c30df5585"}, "downloads": -1, "filename": "pyprt-1.0.0-31-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "3e77597f6a640cae07d569c448258267", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 21031013, "upload_time": "2020-04-27T08:32:05", "upload_time_iso_8601": "2020-04-27T08:32:05.047024Z", "url": "https://files.pythonhosted.org/packages/03/9b/5e5c0b331cba9348fb5ce389ef6f3e3c1c7edc10483d4c150e448754211a/pyprt-1.0.0-31-cp36-cp36m-win_amd64.whl", "yanked": false}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "d6aa53787fa6b4708efc20b8978d16f9", "sha256": "8036c871ede67c5d8e020c20e407dc42d3339db7b2e982befd4233fc507f59b9"}, "downloads": -1, "filename": "pyprt-1.0.0b1-20-cp36-cp36m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "d6aa53787fa6b4708efc20b8978d16f9", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 16787970, "upload_time": "2020-02-20T13:45:13", "upload_time_iso_8601": "2020-02-20T13:45:13.713171Z", "url": "https://files.pythonhosted.org/packages/c1/4c/a41002cf27b47858872a2d8d4525204a6057063d4f42e918b53b69eb76bd/pyprt-1.0.0b1-20-cp36-cp36m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c0e1b914ea3fc7c728d6c9bda49a863", "sha256": "f7cf413337bafa6085c600132b6118f9fde46e22f9d15ba383d2c9b4a5d33a78"}, "downloads": -1, "filename": "pyprt-1.0.0b1-20-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "2c0e1b914ea3fc7c728d6c9bda49a863", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 21019275, "upload_time": "2020-02-20T13:45:20", "upload_time_iso_8601": "2020-02-20T13:45:20.279547Z", "url": "https://files.pythonhosted.org/packages/57/da/ecb76fdad93457046be548755fa5cf4236b74f46b4e8a197cd67ce30262f/pyprt-1.0.0b1-20-cp36-cp36m-win_amd64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "666535ff09d3a9dfafec7eca63238aa8", "sha256": "555a5b9a9d2967800a058dc494ca31277cc7affb7cc15d540e0fd31ea8d6c6c7"}, "downloads": -1, "filename": "pyprt-1.0.0-31-cp36-cp36m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "666535ff09d3a9dfafec7eca63238aa8", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 16799003, "upload_time": "2020-04-27T08:31:41", "upload_time_iso_8601": "2020-04-27T08:31:41.195448Z", "url": "https://files.pythonhosted.org/packages/8b/cd/6e829562e8ec9419e46025213f11d154705ecc6da62a13e7cdb654c8a82d/pyprt-1.0.0-31-cp36-cp36m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e77597f6a640cae07d569c448258267", "sha256": "eaffa68719e69dc294e99aec598fa489698bb3e11ab8dd8818701e1c30df5585"}, "downloads": -1, "filename": "pyprt-1.0.0-31-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "3e77597f6a640cae07d569c448258267", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 21031013, "upload_time": "2020-04-27T08:32:05", "upload_time_iso_8601": "2020-04-27T08:32:05.047024Z", "url": "https://files.pythonhosted.org/packages/03/9b/5e5c0b331cba9348fb5ce389ef6f3e3c1c7edc10483d4c150e448754211a/pyprt-1.0.0-31-cp36-cp36m-win_amd64.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:02 2020"}