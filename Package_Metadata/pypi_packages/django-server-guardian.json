{"info": {"author": "Django Server Guardian", "author_email": "daniel.kaufhold@bitmazk.com", "bugtrack_url": null, "classifiers": [], "description": "Django Server Guardian\n======================\n\nA reusable Django app, that fetches and visualizes server health metrics.\n\nThe data is fetched from the `API app`_, that is installed on the client server.\n\nInstallation\n------------\n\nTo get the latest stable release from PyPi\n\n.. code-block:: bash\n\n    pip install django-server-guardian\n\nTo get the latest commit from GitHub\n\n.. code-block:: bash\n\n    pip install -e git+git://github.com/bitmazk/django-server-guardian.git#egg=server_guardian\n\nTODO: Describe further installation steps (edit / remove the examples below):\n\nAdd ``server_guardian`` to your ``INSTALLED_APPS``\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...,\n        'server_guardian',\n    )\n\nAdd the ``server_guardian`` URLs to your ``urls.py``\n\n.. code-block:: python\n\n    urlpatterns = patterns('',\n        ...\n        url(r'^server-guardian/', include('server_guardian.urls')),\n    )\n\n\nDon't forget to migrate your database\n\n.. code-block:: bash\n\n    ./manage.py migrate server_guardian\n\n\nFor simple color highlighting of the server status, you can include the following\nline to your template:\n\n.. code-block:: html\n\n        <link href=\"{% static \"server_guardian/css/styles.css\" %}\" rel=\"stylesheet\">\n\n\nReload now button\n^^^^^^^^^^^^^^^^^\n\nThe ``server_list.html`` template includes a reload now button, which is useful\nfor testing or if you don't want to wait for the cron job to fire again.\nIt requires ``jQuery`` and if you want to keep the default template, make sure,\nyou have an ``extrajs`` block in your ``main.html`` template.\n\nNote, that atm this will reload all servers, so it might take a bit\nif you have many servers configured.\n\nUsage\n-----\n\nOnce you've installed the `API app`_ on the client server and added some\nendpoitns to your settings, as described there, you can go ahead and configure\nyour servers.\n\nVisit the Django admin for the server guardian, create a new ``Server`` object\nand fill out the fields.\n\n:API URL: This is the url, the `API app`_ is hooked in under on the client server.\n:Server name: You can simply name the server.\n:Token: You will need to create a token string, that you'll add here and on the remote server.\n\nThe other fields are not to be edited and they will be overwritten every time the\nguardian fetches new data.\n\nFinally you should schedule the management command ``guardian_fetch`` to run\nas often as you wish to update your server status (e.g. with cron).\n\nVisit ``/server-guardian/`` for health status overview.\n\nSettings\n--------\n\nThere are a few settings, you can work with.\n\nDJANGO_PROJECT_ROOT (mandatory!)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIt's likely, that you already have this setting. If not, please set it to\nthe directory where your ``manage.py`` file is located.\n\nSERVER_GUARDIAN_EMAIL_ON_STATUS\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSets on which HTML status codes to send an email to the admins.\n\nDefault: ``SERVER_GUARDIAN_EMAIL_ON_STATUS = [403, 404, 405]``\n\nSERVER_GUARDIAN_DASHBOARD_VIEW_PERMISSION\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThis setting gets a function assigned, that is passed to the\n``user_passes_test`` decorator in the dashboard view.\n\nDefault: ``SERVER_GUARDIAN_DASHBOARD_VIEW_PERMISSION = lambda u: u.is_superuser``\n\nContribute\n----------\n\nIf you want to contribute to this project, please perform the following steps\n\n.. code-block:: bash\n\n    # Fork this repository\n    # Clone your fork\n    mkvirtualenv -p python2.7 django-server-guardian\n    make develop\n\n    git co -b feature_branch master\n    # Implement your feature and tests\n    git add . && git commit\n    git push -u origin feature_branch\n    # Send us a pull request for your feature branch\n\nIn order to run the tests, simply execute ``tox``. This will install two new\nenvironments (for Django 1.6 and Django 1.7) and run the tests against both\nenvironments.\n\n.. _API app: https://github.com/bitmazk/django-server-guardian-api", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bitmazk/django-server-guardian", "keywords": "django,app,reusable,server,guardian,api,health,status,monitoring", "license": "The MIT License", "maintainer": null, "maintainer_email": null, "name": "django-server-guardian", "package_url": "https://pypi.org/project/django-server-guardian/", "platform": "OS Independent", "project_url": "https://pypi.org/project/django-server-guardian/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/bitmazk/django-server-guardian"}, "release_url": "https://pypi.org/project/django-server-guardian/0.3.2/", "requires_dist": null, "requires_python": null, "summary": "A reusable Django app, that fetches and visualizes server health metrics.", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A reusable Django app, that fetches and visualizes server health metrics.</p>\n<p>The data is fetched from the <a href=\"https://github.com/bitmazk/django-server-guardian-api\" rel=\"nofollow\">API app</a>, that is installed on the client server.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To get the latest stable release from PyPi</p>\n<pre>pip install django-server-guardian\n</pre>\n<p>To get the latest commit from GitHub</p>\n<pre>pip install -e git+git://github.com/bitmazk/django-server-guardian.git#egg<span class=\"o\">=</span>server_guardian\n</pre>\n<p>TODO: Describe further installation steps (edit / remove the examples below):</p>\n<p>Add <tt>server_guardian</tt> to your <tt>INSTALLED_APPS</tt></p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'server_guardian'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Add the <tt>server_guardian</tt> URLs to your <tt>urls.py</tt></p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^server-guardian/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'server_guardian.urls'</span><span class=\"p\">)),</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Don\u2019t forget to migrate your database</p>\n<pre>./manage.py migrate server_guardian\n</pre>\n<p>For simple color highlighting of the server status, you can include the following\nline to your template:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">link</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"{% static \"</span><span class=\"na\">server_guardian</span><span class=\"err\">/</span><span class=\"na\">css</span><span class=\"err\">/</span><span class=\"na\">styles</span><span class=\"err\">.</span><span class=\"na\">css</span><span class=\"err\">\"</span> <span class=\"err\">%}\"</span> <span class=\"na\">rel</span><span class=\"o\">=</span><span class=\"s\">\"stylesheet\"</span><span class=\"p\">&gt;</span>\n</pre>\n<div id=\"reload-now-button\">\n<h3>Reload now button</h3>\n<p>The <tt>server_list.html</tt> template includes a reload now button, which is useful\nfor testing or if you don\u2019t want to wait for the cron job to fire again.\nIt requires <tt>jQuery</tt> and if you want to keep the default template, make sure,\nyou have an <tt>extrajs</tt> block in your <tt>main.html</tt> template.</p>\n<p>Note, that atm this will reload all servers, so it might take a bit\nif you have many servers configured.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Once you\u2019ve installed the <a href=\"https://github.com/bitmazk/django-server-guardian-api\" rel=\"nofollow\">API app</a> on the client server and added some\nendpoitns to your settings, as described there, you can go ahead and configure\nyour servers.</p>\n<p>Visit the Django admin for the server guardian, create a new <tt>Server</tt> object\nand fill out the fields.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>API URL:</th><td>This is the url, the <a href=\"https://github.com/bitmazk/django-server-guardian-api\" rel=\"nofollow\">API app</a> is hooked in under on the client server.</td>\n</tr>\n<tr><th>Server name:</th><td>You can simply name the server.</td>\n</tr>\n<tr><th>Token:</th><td>You will need to create a token string, that you\u2019ll add here and on the remote server.</td>\n</tr>\n</tbody>\n</table>\n<p>The other fields are not to be edited and they will be overwritten every time the\nguardian fetches new data.</p>\n<p>Finally you should schedule the management command <tt>guardian_fetch</tt> to run\nas often as you wish to update your server status (e.g. with cron).</p>\n<p>Visit <tt><span class=\"pre\">/server-guardian/</span></tt> for health status overview.</p>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>There are a few settings, you can work with.</p>\n<div id=\"django-project-root-mandatory\">\n<h3>DJANGO_PROJECT_ROOT (mandatory!)</h3>\n<p>It\u2019s likely, that you already have this setting. If not, please set it to\nthe directory where your <tt>manage.py</tt> file is located.</p>\n</div>\n<div id=\"server-guardian-email-on-status\">\n<h3>SERVER_GUARDIAN_EMAIL_ON_STATUS</h3>\n<p>Sets on which HTML status codes to send an email to the admins.</p>\n<p>Default: <tt>SERVER_GUARDIAN_EMAIL_ON_STATUS = [403, 404, 405]</tt></p>\n</div>\n<div id=\"server-guardian-dashboard-view-permission\">\n<h3>SERVER_GUARDIAN_DASHBOARD_VIEW_PERMISSION</h3>\n<p>This setting gets a function assigned, that is passed to the\n<tt>user_passes_test</tt> decorator in the dashboard view.</p>\n<p>Default: <tt>SERVER_GUARDIAN_DASHBOARD_VIEW_PERMISSION = lambda u: u.is_superuser</tt></p>\n</div>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>If you want to contribute to this project, please perform the following steps</p>\n<pre><span class=\"c1\"># Fork this repository\n# Clone your fork\n</span>mkvirtualenv -p python2.7 django-server-guardian\nmake develop\n\ngit co -b feature_branch master\n<span class=\"c1\"># Implement your feature and tests\n</span>git add . <span class=\"o\">&amp;&amp;</span> git commit\ngit push -u origin feature_branch\n<span class=\"c1\"># Send us a pull request for your feature branch</span>\n</pre>\n<p>In order to run the tests, simply execute <tt>tox</tt>. This will install two new\nenvironments (for Django 1.6 and Django 1.7) and run the tests against both\nenvironments.</p>\n</div>\n\n          </div>"}, "last_serial": 2095811, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c49bb39b57ba030419a5a157c655fb11", "sha256": "252ff83fdc816652a5f9dc8c622b67f1a66af8a0c17fc1499bc03f2538fcf4f9"}, "downloads": -1, "filename": "django-server-guardian-0.1.tar.gz", "has_sig": false, "md5_digest": "c49bb39b57ba030419a5a157c655fb11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12196, "upload_time": "2015-12-09T06:48:22", "upload_time_iso_8601": "2015-12-09T06:48:22.365048Z", "url": "https://files.pythonhosted.org/packages/f8/70/571288353829d5b17521eabeaefe226439fa2af7bcab03be40bb52901c93/django-server-guardian-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "c0e23a48a3f50c0c4c4939b9196b9e0f", "sha256": "d13ee2a2a6c1d9e7f22bf0de50de4d4d86c5a93fe4d31d173096e43ed23b7a5d"}, "downloads": -1, "filename": "django-server-guardian-0.2.tar.gz", "has_sig": false, "md5_digest": "c0e23a48a3f50c0c4c4939b9196b9e0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16519, "upload_time": "2015-12-30T12:49:19", "upload_time_iso_8601": "2015-12-30T12:49:19.305790Z", "url": "https://files.pythonhosted.org/packages/0e/c8/a8e71aeb91088e74579ec0cb6aa138a650d77510465ccb9bcf879ea14ef3/django-server-guardian-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d04a79e5a5f9401b0d6533ab1ed4487a", "sha256": "7a489c6db37f794683bff2c57573f054c075bcadb43b4d997847ba8a3993c0e7"}, "downloads": -1, "filename": "django-server-guardian-0.2.1.tar.gz", "has_sig": false, "md5_digest": "d04a79e5a5f9401b0d6533ab1ed4487a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16629, "upload_time": "2015-12-30T13:02:40", "upload_time_iso_8601": "2015-12-30T13:02:40.509491Z", "url": "https://files.pythonhosted.org/packages/0b/2e/3407cbd7166f730c56e85fe016e4d88206076baceb18b3c202d8a89f704e/django-server-guardian-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "58f607227ae7b023c743cdc76f80d7fe", "sha256": "0f8f6306f444b91940b69546dbfe13fb0b9f6bbb8034637b028af399ea0a5e42"}, "downloads": -1, "filename": "django-server-guardian-0.3.0.tar.gz", "has_sig": false, "md5_digest": "58f607227ae7b023c743cdc76f80d7fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18838, "upload_time": "2016-02-22T12:21:29", "upload_time_iso_8601": "2016-02-22T12:21:29.130228Z", "url": "https://files.pythonhosted.org/packages/16/05/31c066cdbde6b892d94eff46f018dbb8f85d083adcccc28242c9607e1cfb/django-server-guardian-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "09bcdd2ff56181846fc3a97ba2411a36", "sha256": "5f65cd45d8a8cc200d82c8055b5b1779c2f1c57ca0e9dd7921238fb05dc7d3df"}, "downloads": -1, "filename": "django-server-guardian-0.3.1.tar.gz", "has_sig": false, "md5_digest": "09bcdd2ff56181846fc3a97ba2411a36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18876, "upload_time": "2016-02-22T12:27:43", "upload_time_iso_8601": "2016-02-22T12:27:43.889418Z", "url": "https://files.pythonhosted.org/packages/5e/8d/167eb534166891cfb230c77ee2e86324a71e4927b21f03bb21daa9d0d11a/django-server-guardian-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "dfc3be9da961daeb40f67840a75844dd", "sha256": "6e030c305883b2b1039be0a783415560946f374032c95555b8b8883649b7ee15"}, "downloads": -1, "filename": "django-server-guardian-0.3.2.tar.gz", "has_sig": false, "md5_digest": "dfc3be9da961daeb40f67840a75844dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15257, "upload_time": "2016-05-02T21:33:41", "upload_time_iso_8601": "2016-05-02T21:33:41.887109Z", "url": "https://files.pythonhosted.org/packages/a1/30/ab0f44f5751f2e16f497e09393b4e278237f35ed5859df9042fe9d1aefaa/django-server-guardian-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dfc3be9da961daeb40f67840a75844dd", "sha256": "6e030c305883b2b1039be0a783415560946f374032c95555b8b8883649b7ee15"}, "downloads": -1, "filename": "django-server-guardian-0.3.2.tar.gz", "has_sig": false, "md5_digest": "dfc3be9da961daeb40f67840a75844dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15257, "upload_time": "2016-05-02T21:33:41", "upload_time_iso_8601": "2016-05-02T21:33:41.887109Z", "url": "https://files.pythonhosted.org/packages/a1/30/ab0f44f5751f2e16f497e09393b4e278237f35ed5859df9042fe9d1aefaa/django-server-guardian-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:35 2020"}