{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "Picard : Preconditioned ICA for Real Data\n=========================================\n\n|Travis|_ |Codecov|_ |Downloads|_\n\n\n.. |Travis| image:: https://api.travis-ci.org/pierreablin/picard.svg?branch=master\n.. _Travis: https://travis-ci.org/pierreablin/picard\n\n.. |Codecov| image:: http://codecov.io/github/pierreablin/picard/coverage.svg?branch=master\n.. _Codecov: http://codecov.io/github/pierreablin/picard?branch=master\n\n.. |Downloads| image:: http://pepy.tech/badge/python-picard\n.. _Downloads: http://pepy.tech/project/python-picard\n\nThis repository hosts Python/Octave/Matlab code of the Preconditioned ICA\nfor Real Data (Picard) and Picard-O algorithms.\n\nSee the `documentation <https://pierreablin.github.io/picard/index.html>`_.\n\nAlgorithm\n---------\n\nPicard is an algorithm for maximum likelihood independent component analysis.\nIt shows state of the art speed of convergence, and solves the same problems as the widely used FastICA, Infomax and extended-Infomax, faster.\n\n.. image:: comparison.png\n  :scale: 50 %\n  :alt: Comparison\n  :align: center\n\nThe parameter `ortho` choses whether to work under orthogonal constraint (i.e. enforce the decorrelation of the output) or not.\nIt also comes with an extended version just like extended-infomax, which makes separation of both sub and super-Gaussian signals possible.\nIt is chosen with the parameter `extended`.\n\n* `ortho=False, extended=False`: same solution as Infomax\n* `ortho=False, extended=True`: same solution as extended-Infomax\n* `ortho=True, extended=True`: same solution as FastICA\n* `ortho=True, extended=False`: finds the same solutions as Infomax under orthogonal constraint.\n\n\n\n\nInstallation\n------------\n\nTo install the package, the simplest way is to use pip to get the latest release::\n\n  $ pip install python-picard\n\nor to get the latest version of the code::\n\n  $ pip install git+https://github.com/pierreablin/picard.git#egg=picard\n\nThe Matlab/Octave version of Picard and Picard-O is `available here <https://github.com/pierreablin/picard/tree/master/matlab_octave>`_.\n\nQuickstart\n----------\n\nTo get started, you can build a synthetic mixed signals matrix:\n\n.. code:: python\n\n   >>> import numpy as np\n   >>> N, T = 3, 1000\n   >>> S = np.random.laplace(size=(N, T))\n   >>> A = np.random.randn(N, N)\n   >>> X = np.dot(A, S)\n\nAnd then use Picard to separate the signals:\n\n.. code:: python\n\n   >>> from picard import picard\n   >>> K, W, Y = picard(X)\n\nPicard outputs the whitening matrix, K, the estimated unmixing matrix, W, and\nthe estimated sources Y. It means that:\n\n.. math::\n\n    Y = W K X\n\nDependencies\n------------\n\nThese are the dependencies to use Picard:\n\n* numpy (>=1.8)\n* matplotlib (>=1.3)\n* numexpr (>= 2.0)\n* scipy (>=0.19)\n\n\nThese are the dependencies to run the EEG example:\n\n* mne (>=0.14)\n\nCite\n----\n\nIf you use this code in your project, please cite::\n\n    Pierre Ablin, Jean-Francois Cardoso, Alexandre Gramfort\n    Faster independent component analysis by preconditioning with Hessian approximations\n    IEEE Transactions on Signal Processing, 2018\n    https://arxiv.org/abs/1706.08171\n\n    Pierre Ablin, Jean-Fran\u00e7ois Cardoso, Alexandre Gramfort\n    Faster ICA under orthogonal constraint\n    ICASSP, 2018\n    https://arxiv.org/abs/1711.10873\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/pierreablin/picard.git", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pierreablin.github.io/picard", "keywords": "", "license": "BSD (3-clause)", "maintainer": "Pierre Ablin", "maintainer_email": "pierre.ablin@inria.fr", "name": "python-picard", "package_url": "https://pypi.org/project/python-picard/", "platform": "any", "project_url": "https://pypi.org/project/python-picard/", "project_urls": {"Download": "https://github.com/pierreablin/picard.git", "Homepage": "https://pierreablin.github.io/picard"}, "release_url": "https://pypi.org/project/python-picard/0.4/", "requires_dist": ["numexpr"], "requires_python": "", "summary": "Preconditoned ICA for Real Data", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            Picard : Preconditioned ICA for Real Data<br>=========================================<br><br>|Travis|_ |Codecov|_ |Downloads|_<br><br><br>.. |Travis| image:: https://api.travis-ci.org/pierreablin/picard.svg?branch=master<br>.. _Travis: https://travis-ci.org/pierreablin/picard<br><br>.. |Codecov| image:: http://codecov.io/github/pierreablin/picard/coverage.svg?branch=master<br>.. _Codecov: http://codecov.io/github/pierreablin/picard?branch=master<br><br>.. |Downloads| image:: http://pepy.tech/badge/python-picard<br>.. _Downloads: http://pepy.tech/project/python-picard<br><br>This repository hosts Python/Octave/Matlab code of the Preconditioned ICA<br>for Real Data (Picard) and Picard-O algorithms.<br><br>See the `documentation &lt;https://pierreablin.github.io/picard/index.html&gt;`_.<br><br>Algorithm<br>---------<br><br>Picard is an algorithm for maximum likelihood independent component analysis.<br>It shows state of the art speed of convergence, and solves the same problems as the widely used FastICA, Infomax and extended-Infomax, faster.<br><br>.. image:: comparison.png<br>  :scale: 50 %<br>  :alt: Comparison<br>  :align: center<br><br>The parameter `ortho` choses whether to work under orthogonal constraint (i.e. enforce the decorrelation of the output) or not.<br>It also comes with an extended version just like extended-infomax, which makes separation of both sub and super-Gaussian signals possible.<br>It is chosen with the parameter `extended`.<br><br>* `ortho=False, extended=False`: same solution as Infomax<br>* `ortho=False, extended=True`: same solution as extended-Infomax<br>* `ortho=True, extended=True`: same solution as FastICA<br>* `ortho=True, extended=False`: finds the same solutions as Infomax under orthogonal constraint.<br><br><br><br><br>Installation<br>------------<br><br>To install the package, the simplest way is to use pip to get the latest release::<br><br>  $ pip install python-picard<br><br>or to get the latest version of the code::<br><br>  $ pip install git+https://github.com/pierreablin/picard.git#egg=picard<br><br>The Matlab/Octave version of Picard and Picard-O is `available here &lt;https://github.com/pierreablin/picard/tree/master/matlab_octave&gt;`_.<br><br>Quickstart<br>----------<br><br>To get started, you can build a synthetic mixed signals matrix:<br><br>.. code:: python<br><br>   &gt;&gt;&gt; import numpy as np<br>   &gt;&gt;&gt; N, T = 3, 1000<br>   &gt;&gt;&gt; S = np.random.laplace(size=(N, T))<br>   &gt;&gt;&gt; A = np.random.randn(N, N)<br>   &gt;&gt;&gt; X = np.dot(A, S)<br><br>And then use Picard to separate the signals:<br><br>.. code:: python<br><br>   &gt;&gt;&gt; from picard import picard<br>   &gt;&gt;&gt; K, W, Y = picard(X)<br><br>Picard outputs the whitening matrix, K, the estimated unmixing matrix, W, and<br>the estimated sources Y. It means that:<br><br>.. math::<br><br>    Y = W K X<br><br>Dependencies<br>------------<br><br>These are the dependencies to use Picard:<br><br>* numpy (&gt;=1.8)<br>* matplotlib (&gt;=1.3)<br>* numexpr (&gt;= 2.0)<br>* scipy (&gt;=0.19)<br><br><br>These are the dependencies to run the EEG example:<br><br>* mne (&gt;=0.14)<br><br>Cite<br>----<br><br>If you use this code in your project, please cite::<br><br>    Pierre Ablin, Jean-Francois Cardoso, Alexandre Gramfort<br>    Faster independent component analysis by preconditioning with Hessian approximations<br>    IEEE Transactions on Signal Processing, 2018<br>    https://arxiv.org/abs/1706.08171<br><br>    Pierre Ablin, Jean-Fran\u00e7ois Cardoso, Alexandre Gramfort<br>    Faster ICA under orthogonal constraint<br>    ICASSP, 2018<br>    https://arxiv.org/abs/1711.10873<br><br><br>\n          </div>"}, "last_serial": 4845895, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "620b451ed0a05f37b4910bff35e0ecb1", "sha256": "610da7e0a26e01012f66a67ce3936ab72df2d80767233e0f7d59c397d94bbd47"}, "downloads": -1, "filename": "python-picard-0.1.tar.gz", "has_sig": false, "md5_digest": "620b451ed0a05f37b4910bff35e0ecb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9594, "upload_time": "2017-11-03T10:38:35", "upload_time_iso_8601": "2017-11-03T10:38:35.711751Z", "url": "https://files.pythonhosted.org/packages/30/07/e91164102728302d0450f9b3f312f3a6060c727abd0696bf35c01f24cb23/python-picard-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "ac8fe18e3d989a011afd6b54fd25cdaf", "sha256": "b5a56f18d649c1639072067d2d58a575d20dd97f12efcdf66e19386eb5aa8b43"}, "downloads": -1, "filename": "python_picard-0.2-py3.6.egg", "has_sig": false, "md5_digest": "ac8fe18e3d989a011afd6b54fd25cdaf", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 21517, "upload_time": "2018-02-27T18:56:16", "upload_time_iso_8601": "2018-02-27T18:56:16.400226Z", "url": "https://files.pythonhosted.org/packages/a8/00/c4979d4e579663e39cd3e58b81016f4013d2e8eb739f3f9b2cc3df069bc2/python_picard-0.2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "841ad24778cb58b86b7e7a6967721545", "sha256": "fbf87cfc6d4c8d8ac94e29e59e8fad108d24c48f969293bd1f017616f16fd4db"}, "downloads": -1, "filename": "python-picard-0.2.tar.gz", "has_sig": false, "md5_digest": "841ad24778cb58b86b7e7a6967721545", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14041, "upload_time": "2018-02-27T18:56:17", "upload_time_iso_8601": "2018-02-27T18:56:17.444761Z", "url": "https://files.pythonhosted.org/packages/09/01/2cf99b6ef821906de248355341d7b6e1d422eaaeb1b85a7cbdf04cac4a1a/python-picard-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "03fdd7ecb2d4cd138a16d19f4d84d1a3", "sha256": "f5b1fbdcca358b6c15ff978a87727bb98f97777d20a79dc9aff7a9d84df81fb3"}, "downloads": -1, "filename": "python-picard-0.3.tar.gz", "has_sig": false, "md5_digest": "03fdd7ecb2d4cd138a16d19f4d84d1a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15073, "upload_time": "2018-03-02T14:11:08", "upload_time_iso_8601": "2018-03-02T14:11:08.379124Z", "url": "https://files.pythonhosted.org/packages/2e/08/2c22d1702a3aa4f84ec8f816c006b4c8dd16fdb04c06c4ffd56c1f97c8d5/python-picard-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "3c5227cd280c7b3be789aea6c5833d86", "sha256": "e2b961f6a5c9494a0240a1a7ed995fc3a8260ffbb2bf47f81d9ae4e7f64e5548"}, "downloads": -1, "filename": "python_picard-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3c5227cd280c7b3be789aea6c5833d86", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13731, "upload_time": "2019-02-20T14:48:36", "upload_time_iso_8601": "2019-02-20T14:48:36.336093Z", "url": "https://files.pythonhosted.org/packages/dd/c9/3b3c717ccf9e2525e38edb8ab583e2262ee6f06d0873c2bee08ebfb2a5bb/python_picard-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72365fc79641754d88400bdebc7f1c40", "sha256": "e7359f44ac4c0988faed690b2efaa6ad9424a297e3e2d37433a263ea9dbd537f"}, "downloads": -1, "filename": "python-picard-0.4.tar.gz", "has_sig": false, "md5_digest": "72365fc79641754d88400bdebc7f1c40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58647, "upload_time": "2019-02-20T14:48:40", "upload_time_iso_8601": "2019-02-20T14:48:40.499184Z", "url": "https://files.pythonhosted.org/packages/b5/1d/9c265967a110628ae9b27e2b79c059ad0b1da6e51e900c3704d03b8fce8e/python-picard-0.4.tar.gz", "yanked": false}], "0.4.dev0": [{"comment_text": "", "digests": {"md5": "5ef814e5bfba963aa218c6dd9826dc56", "sha256": "32648cce31bad593672cbf9c8956b30193ac6e46b350c29cd27d5cd29e0d7cef"}, "downloads": -1, "filename": "python_picard-0.4.dev0-py3.6.egg", "has_sig": false, "md5_digest": "5ef814e5bfba963aa218c6dd9826dc56", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 34939, "upload_time": "2019-02-20T14:48:38", "upload_time_iso_8601": "2019-02-20T14:48:38.824559Z", "url": "https://files.pythonhosted.org/packages/47/4b/a1221fceeaa8a25bf902a177616bd07baf6bcd8a1803944abac7457a9423/python_picard-0.4.dev0-py3.6.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c5227cd280c7b3be789aea6c5833d86", "sha256": "e2b961f6a5c9494a0240a1a7ed995fc3a8260ffbb2bf47f81d9ae4e7f64e5548"}, "downloads": -1, "filename": "python_picard-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3c5227cd280c7b3be789aea6c5833d86", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13731, "upload_time": "2019-02-20T14:48:36", "upload_time_iso_8601": "2019-02-20T14:48:36.336093Z", "url": "https://files.pythonhosted.org/packages/dd/c9/3b3c717ccf9e2525e38edb8ab583e2262ee6f06d0873c2bee08ebfb2a5bb/python_picard-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72365fc79641754d88400bdebc7f1c40", "sha256": "e7359f44ac4c0988faed690b2efaa6ad9424a297e3e2d37433a263ea9dbd537f"}, "downloads": -1, "filename": "python-picard-0.4.tar.gz", "has_sig": false, "md5_digest": "72365fc79641754d88400bdebc7f1c40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58647, "upload_time": "2019-02-20T14:48:40", "upload_time_iso_8601": "2019-02-20T14:48:40.499184Z", "url": "https://files.pythonhosted.org/packages/b5/1d/9c265967a110628ae9b27e2b79c059ad0b1da6e51e900c3704d03b8fce8e/python-picard-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:00 2020"}