{"info": {"author": "Nic Cope", "author_email": "negz@spotify.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: System Administrators", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "requests-crtauth\n================\nA plugin to support [crtauth authentication](https://github.com/spotify/crtauth) in [Python Requests](http://www.python-requests.org/).\n\nUsage\n=====\nrequests-crtauth works as an authentication plugin for Python Requests. See the [authentication documentation](http://www.python-requests.org/en/latest/user/authentication/) for more details. The following arguments may be provided to a new instance of `HttpCrtAuth`:\n```\nusername: User to authenticate as. Defaults to $USER.\nprivate_key: A PEM encoded private key string. Overrides signer.\nsigner: A crtauth SigningPlug instance. Defaults to using the SSH agent (AgentSigner).\nversion: Integer version of the crtauth protocol. Defaults to version 1.\n```\n\nHere's an example.\n```python\nIn [1]: import requests, requests_crtauth, json, logging\nIn [2]: logging.basicConfig(level=logging.DEBUG)\nIn [3]: session = requests.Session()\n# HttpCrtAuth() will default to authenticating with your $USER env variable and a key from your SSH agent.\n# To specify an explicit key: requests_crtauth.HttpCrtAuth(username='negz', private_key='key data as a string')\nIn [4]: session.auth = requests_crtauth.HttpCrtAuth()\nIn [5]: data = json.dumps({'comment': 'I\\'m a comment!'})\nIn [6]: headers = {'content-type': 'application/json; charset=utf-8'}\nIn [7]: response = session.put('https://db.spotify.net/v1/things/yomaris', data=data, headers=headers)\nINFO:requests.packages.urllib3.connectionpool:Starting new HTTPS connection (1): db.spotify.net\nDEBUG:requests.packages.urllib3.connectionpool:\"PUT /v1/things/yomaris HTTP/1.1\" 401 12\nDEBUG:root:Sending challenge request\nDEBUG:requests.packages.urllib3.connectionpool:\"HEAD /_auth HTTP/1.1\" 200 0\nDEBUG:root:Sending response to challenge REDACTED\nDEBUG:requests.packages.urllib3.connectionpool:\"HEAD /_auth HTTP/1.1\" 200 0\nDEBUG:root:Stored CHAP token REDACTED\nDEBUG:root:Using newly stored CHAP token.\nDEBUG:requests.packages.urllib3.connectionpool:\"PUT /v1/things/yomaris HTTP/1.1\" 200 None\nIn [8]: response.ok\nOut[8]: True\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "requests-crtauth", "package_url": "https://pypi.org/project/requests-crtauth/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/requests-crtauth/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/requests-crtauth/0.4/", "requires_dist": null, "requires_python": null, "summary": "A crtauth authentication plugin for Python Requests.", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"requests-crtauth\">\n<h2>requests-crtauth</h2>\n<p>A plugin to support [crtauth authentication](<a href=\"https://github.com/spotify/crtauth\" rel=\"nofollow\">https://github.com/spotify/crtauth</a>) in [Python Requests](<a href=\"http://www.python-requests.org/\" rel=\"nofollow\">http://www.python-requests.org/</a>).</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>requests-crtauth works as an authentication plugin for Python Requests. See the [authentication documentation](<a href=\"http://www.python-requests.org/en/latest/user/authentication/\" rel=\"nofollow\">http://www.python-requests.org/en/latest/user/authentication/</a>) for more details. The following arguments may be provided to a new instance of <cite>HttpCrtAuth</cite>:\n<tt>`\nusername: User to authenticate as. Defaults to $USER.\nprivate_key: A PEM encoded private key string. Overrides signer.\nsigner: A crtauth SigningPlug instance. Defaults to using the SSH agent (AgentSigner).\nversion: Integer version of the crtauth protocol. Defaults to version 1.\n`</tt></p>\n<p>Here\u2019s an example.\n<tt>`python\nIn [1]: import requests, requests_crtauth, json, logging\nIn [2]: logging.basicConfig(level=logging.DEBUG)\nIn [3]: session = requests.Session()\n# HttpCrtAuth() will default to authenticating with your $USER env variable and a key from your SSH agent.\n# To specify an explicit key: <span class=\"pre\">requests_crtauth.HttpCrtAuth(username='negz',</span> <span class=\"pre\">private_key='key</span> data as a string')\nIn [4]: session.auth = requests_crtauth.HttpCrtAuth()\nIn [5]: data = <span class=\"pre\">json.dumps({'comment':</span> <span class=\"pre\">'I\\'m</span> a <span class=\"pre\">comment!'})</span>\nIn [6]: headers = <span class=\"pre\">{'content-type':</span> 'application/json; <span class=\"pre\">charset=utf-8'}</span>\nIn [7]: response = <span class=\"pre\">session.put('https://db.spotify.net/v1/things/yomaris',</span> data=data, headers=headers)\nINFO:requests.packages.urllib3.connectionpool:Starting new HTTPS connection (1): db.spotify.net\n<span class=\"pre\">DEBUG:requests.packages.urllib3.connectionpool:\"PUT</span> /v1/things/yomaris HTTP/1.1\" 401 12\nDEBUG:root:Sending challenge request\n<span class=\"pre\">DEBUG:requests.packages.urllib3.connectionpool:\"HEAD</span> /_auth HTTP/1.1\" 200 0\nDEBUG:root:Sending response to challenge REDACTED\n<span class=\"pre\">DEBUG:requests.packages.urllib3.connectionpool:\"HEAD</span> /_auth HTTP/1.1\" 200 0\nDEBUG:root:Stored CHAP token REDACTED\nDEBUG:root:Using newly stored CHAP token.\n<span class=\"pre\">DEBUG:requests.packages.urllib3.connectionpool:\"PUT</span> /v1/things/yomaris HTTP/1.1\" 200 None\nIn [8]: response.ok\nOut[8]: True\n`</tt></p>\n</div>\n\n          </div>"}, "last_serial": 1732291, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "3aa3528b694476ad1ee0452899dd1c55", "sha256": "8fb6c0f853b6c41832b62a5df7b5865aa6509c811b712c62e852e429b06d784e"}, "downloads": -1, "filename": "requests-crtauth-0.4.tar.gz", "has_sig": false, "md5_digest": "3aa3528b694476ad1ee0452899dd1c55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8720, "upload_time": "2015-09-21T22:02:32", "upload_time_iso_8601": "2015-09-21T22:02:32.078633Z", "url": "https://files.pythonhosted.org/packages/b5/e9/c5134b8ddc447cd15e995d1953bf3424a826b2fb69667892061cf91422dc/requests-crtauth-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3aa3528b694476ad1ee0452899dd1c55", "sha256": "8fb6c0f853b6c41832b62a5df7b5865aa6509c811b712c62e852e429b06d784e"}, "downloads": -1, "filename": "requests-crtauth-0.4.tar.gz", "has_sig": false, "md5_digest": "3aa3528b694476ad1ee0452899dd1c55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8720, "upload_time": "2015-09-21T22:02:32", "upload_time_iso_8601": "2015-09-21T22:02:32.078633Z", "url": "https://files.pythonhosted.org/packages/b5/e9/c5134b8ddc447cd15e995d1953bf3424a826b2fb69667892061cf91422dc/requests-crtauth-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:08 2020"}