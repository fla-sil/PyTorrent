{"info": {"author": "Ilya Vouk", "author_email": "ilya.vouk@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "# cv2studio\n\n`cv2studio` is an OpenCV framework that give\nyou an ability to decompose processing flow into\ncomponents.\n\n## Features\n\n- Component-based development\n- Channel independence\n- Classes wrappers for HighGUI elements of OpenCV\n- Channel independence for components\n\n## Getting Started\n\nThe main principle behind this framework is decomposition.\nSplitting up a code into one-format components make\nit highly reusable. It becomes easy to develop\ndifferent parts of video/image processing separately and\nshare it with others.\n\n## Installing\n\nTo install the latest release:\n\n```bash\npip install cv2studio\n```\n\n## Usage\n\n### Importing\n\nBefore using features of the framework\ngoes importing.\n\n`from cv2studio import App, Component`\n\n### Component creation\n\nTo create a component describe a class derived from `Component`.\nTo use this class it's required to declare the method `process(self, img)`,\nwhere `img` is an image to be process. This function must return an image as well.\n\n```python\nclass Blur(Component):\n    def process(self, img):\n        img = cv2.GaussianBlur(img, (5, 5), 5)\n        return img\n```\n\nThis component apply blur to an input image.\n\n### App creation\n\nTo create an app that will hold processing components\ndescribe a class derived from 'App' and add components\nusing `add_component(component)` method.\n\n```python\nclass VideoApp(App):\n    def __init__(self, path):\n        App.__init__(self, path, VIDEO)\n        # self.add_component(MyComponent())\n        self.add_component(Blur())\n```\n\n### Running\n\nTo run the described app use `main_loop` method.\nIt will start main processing loop with applying\nchain of added component.\n\n```python\napp = VideoApp('path/to/video')\napp.main_loop()\n```\n\n`main_loop` starts a video processing loop. For creating\nmore complex app see the following examples.\n\n## Testing\n\nTo run tests run the following command:\n\n```bash\npytest\n```\n\n## Versioning\n\nWe use SemVer for versioning. For the versions available,\nsee the tags on this repository.\n\n## Contributing\n\nPlease read CONTRIBUTE.md for details on our code of conduct, and the process for submitting pull requests to us.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.txt) file for details", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/VoIlAlex/cv2studio/archive/1.0.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/VoIlAlex/cv2studio", "keywords": "OpenCV,Computer Vision,Framework,Wrapper,Components", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cv2studio", "package_url": "https://pypi.org/project/cv2studio/", "platform": "", "project_url": "https://pypi.org/project/cv2studio/", "project_urls": {"Download": "https://github.com/VoIlAlex/cv2studio/archive/1.0.2.tar.gz", "Homepage": "https://github.com/VoIlAlex/cv2studio"}, "release_url": "https://pypi.org/project/cv2studio/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Chain-based framework to split image processing into components.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>cv2studio</h1>\n<p><code>cv2studio</code> is an OpenCV framework that give\nyou an ability to decompose processing flow into\ncomponents.</p>\n<h2>Features</h2>\n<ul>\n<li>Component-based development</li>\n<li>Channel independence</li>\n<li>Classes wrappers for HighGUI elements of OpenCV</li>\n<li>Channel independence for components</li>\n</ul>\n<h2>Getting Started</h2>\n<p>The main principle behind this framework is decomposition.\nSplitting up a code into one-format components make\nit highly reusable. It becomes easy to develop\ndifferent parts of video/image processing separately and\nshare it with others.</p>\n<h2>Installing</h2>\n<p>To install the latest release:</p>\n<pre>pip install cv2studio\n</pre>\n<h2>Usage</h2>\n<h3>Importing</h3>\n<p>Before using features of the framework\ngoes importing.</p>\n<p><code>from cv2studio import App, Component</code></p>\n<h3>Component creation</h3>\n<p>To create a component describe a class derived from <code>Component</code>.\nTo use this class it's required to declare the method <code>process(self, img)</code>,\nwhere <code>img</code> is an image to be process. This function must return an image as well.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Blur</span><span class=\"p\">(</span><span class=\"n\">Component</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"p\">):</span>\n        <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">GaussianBlur</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">img</span>\n</pre>\n<p>This component apply blur to an input image.</p>\n<h3>App creation</h3>\n<p>To create an app that will hold processing components\ndescribe a class derived from 'App' and add components\nusing <code>add_component(component)</code> method.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">VideoApp</span><span class=\"p\">(</span><span class=\"n\">App</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">):</span>\n        <span class=\"n\">App</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">VIDEO</span><span class=\"p\">)</span>\n        <span class=\"c1\"># self.add_component(MyComponent())</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_component</span><span class=\"p\">(</span><span class=\"n\">Blur</span><span class=\"p\">())</span>\n</pre>\n<h3>Running</h3>\n<p>To run the described app use <code>main_loop</code> method.\nIt will start main processing loop with applying\nchain of added component.</p>\n<pre><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">VideoApp</span><span class=\"p\">(</span><span class=\"s1\">'path/to/video'</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">main_loop</span><span class=\"p\">()</span>\n</pre>\n<p><code>main_loop</code> starts a video processing loop. For creating\nmore complex app see the following examples.</p>\n<h2>Testing</h2>\n<p>To run tests run the following command:</p>\n<pre>pytest\n</pre>\n<h2>Versioning</h2>\n<p>We use SemVer for versioning. For the versions available,\nsee the tags on this repository.</p>\n<h2>Contributing</h2>\n<p>Please read CONTRIBUTE.md for details on our code of conduct, and the process for submitting pull requests to us.</p>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE.txt\" rel=\"nofollow\">LICENSE.md</a> file for details</p>\n\n          </div>"}, "last_serial": 6947226, "releases": {"1.0.0-alpha": [{"comment_text": "", "digests": {"md5": "5a1d414bb3ac9cca0cbf78690442756c", "sha256": "aacd4fc6967302ca8a313824e0c5c493f17121d9f4ebc12f7a051ada0bc127fb"}, "downloads": -1, "filename": "cv2studio-1.0.0-alpha.tar.gz", "has_sig": false, "md5_digest": "5a1d414bb3ac9cca0cbf78690442756c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5294, "upload_time": "2019-10-06T18:36:45", "upload_time_iso_8601": "2019-10-06T18:36:45.087634Z", "url": "https://files.pythonhosted.org/packages/f2/ea/c466c3945b4ab3e63663bc1315646d8fe654c844a84ed356e340692fe6de/cv2studio-1.0.0-alpha.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b1e7534600ce2a28fc7106ed4b695108", "sha256": "7f6e5e6958a20910598a866f9f106675303198a492b893385cc766aea9323459"}, "downloads": -1, "filename": "cv2studio-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b1e7534600ce2a28fc7106ed4b695108", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6852, "upload_time": "2020-04-03T23:48:50", "upload_time_iso_8601": "2020-04-03T23:48:50.740267Z", "url": "https://files.pythonhosted.org/packages/92/ce/0b02f8809d1d4d068622d6d1529a1f2f41485cb2f551438147ecc4932277/cv2studio-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "3f8d1f5ed976c1c7aefa203fbcea8f13", "sha256": "e280848b73cf1fe643f19bbd938979ea13e2aa710ccf23b6209ad5112f256097"}, "downloads": -1, "filename": "cv2studio-1.0.2.tar.gz", "has_sig": false, "md5_digest": "3f8d1f5ed976c1c7aefa203fbcea8f13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6849, "upload_time": "2020-04-03T23:51:38", "upload_time_iso_8601": "2020-04-03T23:51:38.768309Z", "url": "https://files.pythonhosted.org/packages/f0/94/dd48b9332f6f537ae9c07adbe4d958794b1b1654f0ea0463c8c64aa51cb4/cv2studio-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3f8d1f5ed976c1c7aefa203fbcea8f13", "sha256": "e280848b73cf1fe643f19bbd938979ea13e2aa710ccf23b6209ad5112f256097"}, "downloads": -1, "filename": "cv2studio-1.0.2.tar.gz", "has_sig": false, "md5_digest": "3f8d1f5ed976c1c7aefa203fbcea8f13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6849, "upload_time": "2020-04-03T23:51:38", "upload_time_iso_8601": "2020-04-03T23:51:38.768309Z", "url": "https://files.pythonhosted.org/packages/f0/94/dd48b9332f6f537ae9c07adbe4d958794b1b1654f0ea0463c8c64aa51cb4/cv2studio-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:15 2020"}