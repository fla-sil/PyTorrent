{"info": {"author": "R\u00e9my Sanchez", "author_email": "remy.sanchez@hyperthese.net", "bugtrack_url": null, "classifiers": [], "description": "========\nPonytile\n========\n\nA Python library/utility to create CSS sprites.\n\nThis library was made out of my frustration to be unable to find a library that\nsuited exactly what I had in mind. And also because I found the idea of writing\nthat quite fun :)\n\nNow a first version is done, I don't know if I'm going to push the development\nfurther. Don't use this in production, unless you are ready to dig into the\ncode and maintain the app yourself.\n\nUsage\n=====\n\nPTL source file\n---------------\n\nEverything is generated from the PTL source file. It has a few options::\n\n\t[css]\n\t# The prefix that will be put in front of every generated CSS selector.\n\t# The selectors are generated from the file names. With the current\n\t# configuration, what you'd get for a toto.png file would be a\n\t# .icon-toto class.\n\tprefix = .icon-\n\n\t# This is a selector of the global class for all generated tiles (it\n\t# sets some styles attributes for everybody)\n\tgeneral_selector = [class^=\"icon-\"], [class*=\" icon-\"]\n\n\t[sprite]\n\t# A hint of the number of tiles that fits in the width of the sprite.\n\twidth = 15\n\n\t# The relative path from the generated CSS file to the generated sprite\n\t# file. This sprite file will be generated at compilation time.\n\tfilename = sprite.png\n\n\t# A valid PIL format name\n\tformat = PNG\n\n\t[tile]\n\t# This is a hint about the tiles size. Put here your most common tile\n\t# size, or the LCM of your tiles sizes, or something in that mood.\n\twidth = 16\n\theight = 16\n\n\t[files]\n\t# Here goes a plain glob list of files to be put in the sprite. The\n\t# path is relative to the .ptl file.\n\tsprite/*.png\n\nCLI Tool\n--------\n\nOnce you have the PTL source, compiling is quite simple::\n\n\tponytile input.ptl output.css\n\nIt will generate the output.css file with the appropriate sprite file as\nconfigured by the PTL file.\n\nUsing in your web page\n----------------------\n\nJust include the generated CSS somewhere, and then do::\n\n\t<i class=\"icon-toto\"></i>\n\nIt should make the trick :)\n\nUsing the library\n-----------------\n\nOpen `bin/ponytile` and look at how things are done. There is not much more to\nsay about the public API right now!\n\nCopyright\n=========\n\nThis whole thing is licenced under the WTFPL (see the attached LICENSE.txt\nfile).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Xowap/Ponytile", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "Ponytile", "package_url": "https://pypi.org/project/Ponytile/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Ponytile/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Xowap/Ponytile"}, "release_url": "https://pypi.org/project/Ponytile/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "A library bundled with a CLI tool to generate CSS sprites.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python library/utility to create CSS sprites.</p>\n<p>This library was made out of my frustration to be unable to find a library that\nsuited exactly what I had in mind. And also because I found the idea of writing\nthat quite fun :)</p>\n<p>Now a first version is done, I don\u2019t know if I\u2019m going to push the development\nfurther. Don\u2019t use this in production, unless you are ready to dig into the\ncode and maintain the app yourself.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"ptl-source-file\">\n<h3>PTL source file</h3>\n<p>Everything is generated from the PTL source file. It has a few options:</p>\n<pre>[css]\n# The prefix that will be put in front of every generated CSS selector.\n# The selectors are generated from the file names. With the current\n# configuration, what you'd get for a toto.png file would be a\n# .icon-toto class.\nprefix = .icon-\n\n# This is a selector of the global class for all generated tiles (it\n# sets some styles attributes for everybody)\ngeneral_selector = [class^=\"icon-\"], [class*=\" icon-\"]\n\n[sprite]\n# A hint of the number of tiles that fits in the width of the sprite.\nwidth = 15\n\n# The relative path from the generated CSS file to the generated sprite\n# file. This sprite file will be generated at compilation time.\nfilename = sprite.png\n\n# A valid PIL format name\nformat = PNG\n\n[tile]\n# This is a hint about the tiles size. Put here your most common tile\n# size, or the LCM of your tiles sizes, or something in that mood.\nwidth = 16\nheight = 16\n\n[files]\n# Here goes a plain glob list of files to be put in the sprite. The\n# path is relative to the .ptl file.\nsprite/*.png\n</pre>\n</div>\n<div id=\"cli-tool\">\n<h3>CLI Tool</h3>\n<p>Once you have the PTL source, compiling is quite simple:</p>\n<pre>ponytile input.ptl output.css\n</pre>\n<p>It will generate the output.css file with the appropriate sprite file as\nconfigured by the PTL file.</p>\n</div>\n<div id=\"using-in-your-web-page\">\n<h3>Using in your web page</h3>\n<p>Just include the generated CSS somewhere, and then do:</p>\n<pre>&lt;i class=\"icon-toto\"&gt;&lt;/i&gt;\n</pre>\n<p>It should make the trick :)</p>\n</div>\n<div id=\"using-the-library\">\n<h3>Using the library</h3>\n<p>Open <cite>bin/ponytile</cite> and look at how things are done. There is not much more to\nsay about the public API right now!</p>\n</div>\n</div>\n<div id=\"copyright\">\n<h2>Copyright</h2>\n<p>This whole thing is licenced under the WTFPL (see the attached LICENSE.txt\nfile).</p>\n</div>\n\n          </div>"}, "last_serial": 784935, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "72f77a026d16fd3ccc09d161c8970fe1", "sha256": "4342fd82e4bbeda18432a2e941518e30f89aa8cca0fd0069e72774ed9faef5c6"}, "downloads": -1, "filename": "Ponytile-0.1.0.tar.gz", "has_sig": true, "md5_digest": "72f77a026d16fd3ccc09d161c8970fe1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 228371, "upload_time": "2012-12-10T23:22:18", "upload_time_iso_8601": "2012-12-10T23:22:18.426329Z", "url": "https://files.pythonhosted.org/packages/ec/9f/6492930793b288d1d2ed26ea6757338fdb3cabd62b35b431d015c411a8ee/Ponytile-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4476b989247a19c68d6ff8bc4d4c63c5", "sha256": "eeed7b6816b3e70650ad8b33f5776d7e8f1bfddadfdeef21cf9b2bceacc65dc6"}, "downloads": -1, "filename": "Ponytile-0.1.1.tar.gz", "has_sig": true, "md5_digest": "4476b989247a19c68d6ff8bc4d4c63c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7031, "upload_time": "2012-12-11T21:33:15", "upload_time_iso_8601": "2012-12-11T21:33:15.347866Z", "url": "https://files.pythonhosted.org/packages/d2/81/c49b5d83d721849209618e4e13d3f8611e520ce48c47afd45d00085a6265/Ponytile-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4476b989247a19c68d6ff8bc4d4c63c5", "sha256": "eeed7b6816b3e70650ad8b33f5776d7e8f1bfddadfdeef21cf9b2bceacc65dc6"}, "downloads": -1, "filename": "Ponytile-0.1.1.tar.gz", "has_sig": true, "md5_digest": "4476b989247a19c68d6ff8bc4d4c63c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7031, "upload_time": "2012-12-11T21:33:15", "upload_time_iso_8601": "2012-12-11T21:33:15.347866Z", "url": "https://files.pythonhosted.org/packages/d2/81/c49b5d83d721849209618e4e13d3f8611e520ce48c47afd45d00085a6265/Ponytile-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:37 2020"}