{"info": {"author": "Florian Matter", "author_email": "florianmatter@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# script_converter\n\nThis is a simple tool to transliterate a given string using two character sets.\nThe mapping between the sets must be provided in a `.csv` file, which has two columns, `IPA` and `Ortho`\n\nUse is `script_converter.convert(STRING, MAPPING_FILE_PATH)`, which will return a transliterated string.\nPer default, the `Ortho` values will be replaced by the `IPA` values.\nIf transliteration should happen the other way around, the option `to_ipa=False` can be used.\n\n## example\nI illustrate the functionality using [Vamale](https://glottolog.org/resource/languoid/id/vama1243) as an example.\nThe IPA and orthographic representations of all Vamale phonemes are listed in a file `vamale_mapping.csv`:\n\n| IPA | Ortho\n| ----- | -----\n| xh | x\n| x | \u0263\n| xhw | x\u02b7\n| \u00e2 | a\u0303\n| \u00ea | e\u0303\n| \u00ee | i\u0303\n| \u00f4 | o\u0303\n| \u00fb | u\u0303\n| g | \u1d51\u0261\n| d | \u207fd\n| j | \u1dae\u025f\n| mw | m\u02b7\n| pw | p\u02b7\n| vw | v\u02b7\n| fw | f\u02b7\n| phw | p\u02b0\u02b7\n| bw | \u1d50b\u02b7\n| b | \u1d50b\n| ph | p\u02b0\n| kh | k\u02b0\n| th | t\u02b0\n| hm | m\u0325\n| hny | \u0272\u030a\n| ny | \u0272\n| hn | n\u0325\n| hl | l\u0325\n| aa | a\u02d0\n| ee | e\u02d0\n| ii | i\u02d0\n| oo | o\u02d0\n| uu | u\u02d0\n| \u00e2\u00e2 | a\u0303\u02d0\n| \u00ea\u00ea | e\u0303\u02d0\n| \u00ee\u00ee | i\u0303\u02d0\n| \u00f4\u00f4 | o\u0303\u02d0\n| \u00fb\u00fb | u\u0303\u02d0\n| a | a\n| e | e\n| i | i\n| o | o\n| u | u\n| ng | \u014b\n\nNow, the example sentence *i beeng a kon hnyimake ko li aman a a vwa* ('My friend is thinking about the things he is doing') can be converted:\n\n`print(script_converter.convert(\"i beeng a kon hnyimake ko li aman a a vwa\", \"vamale_mapping.csv\"))`\n\nThis results in the output `i \u1d50be\u02d0\u014b a kon \u0272\u030aimake ko li aman a a v\u02b7a`.\nThis, in turn, could be converted back to `i beeng a kon hnyimake ko li aman a a vwa` using the following command:\n\n`print(script_converter.convert(\"i \u1d50be\u02d0\u014b a kon \u0272\u030aimake ko li aman a a v\u02b7a\", \"vamale_mapping.csv\", to_ipa=False))`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/florianmatter/script_converter", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "script-converter", "package_url": "https://pypi.org/project/script-converter/", "platform": "", "project_url": "https://pypi.org/project/script-converter/", "project_urls": {"Homepage": "https://gitlab.com/florianmatter/script_converter"}, "release_url": "https://pypi.org/project/script-converter/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Converts strings between two character sets", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>script_converter</h1>\n<p>This is a simple tool to transliterate a given string using two character sets.\nThe mapping between the sets must be provided in a <code>.csv</code> file, which has two columns, <code>IPA</code> and <code>Ortho</code></p>\n<p>Use is <code>script_converter.convert(STRING, MAPPING_FILE_PATH)</code>, which will return a transliterated string.\nPer default, the <code>Ortho</code> values will be replaced by the <code>IPA</code> values.\nIf transliteration should happen the other way around, the option <code>to_ipa=False</code> can be used.</p>\n<h2>example</h2>\n<p>I illustrate the functionality using <a href=\"https://glottolog.org/resource/languoid/id/vama1243\" rel=\"nofollow\">Vamale</a> as an example.\nThe IPA and orthographic representations of all Vamale phonemes are listed in a file <code>vamale_mapping.csv</code>:</p>\n<table>\n<thead>\n<tr>\n<th>IPA</th>\n<th>Ortho</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>xh</td>\n<td>x</td>\n</tr>\n<tr>\n<td>x</td>\n<td>\u0263</td>\n</tr>\n<tr>\n<td>xhw</td>\n<td>x\u02b7</td>\n</tr>\n<tr>\n<td>\u00e2</td>\n<td>a\u0303</td>\n</tr>\n<tr>\n<td>\u00ea</td>\n<td>e\u0303</td>\n</tr>\n<tr>\n<td>\u00ee</td>\n<td>i\u0303</td>\n</tr>\n<tr>\n<td>\u00f4</td>\n<td>o\u0303</td>\n</tr>\n<tr>\n<td>\u00fb</td>\n<td>u\u0303</td>\n</tr>\n<tr>\n<td>g</td>\n<td>\u1d51\u0261</td>\n</tr>\n<tr>\n<td>d</td>\n<td>\u207fd</td>\n</tr>\n<tr>\n<td>j</td>\n<td>\u1dae\u025f</td>\n</tr>\n<tr>\n<td>mw</td>\n<td>m\u02b7</td>\n</tr>\n<tr>\n<td>pw</td>\n<td>p\u02b7</td>\n</tr>\n<tr>\n<td>vw</td>\n<td>v\u02b7</td>\n</tr>\n<tr>\n<td>fw</td>\n<td>f\u02b7</td>\n</tr>\n<tr>\n<td>phw</td>\n<td>p\u02b0\u02b7</td>\n</tr>\n<tr>\n<td>bw</td>\n<td>\u1d50b\u02b7</td>\n</tr>\n<tr>\n<td>b</td>\n<td>\u1d50b</td>\n</tr>\n<tr>\n<td>ph</td>\n<td>p\u02b0</td>\n</tr>\n<tr>\n<td>kh</td>\n<td>k\u02b0</td>\n</tr>\n<tr>\n<td>th</td>\n<td>t\u02b0</td>\n</tr>\n<tr>\n<td>hm</td>\n<td>m\u0325</td>\n</tr>\n<tr>\n<td>hny</td>\n<td>\u0272\u030a</td>\n</tr>\n<tr>\n<td>ny</td>\n<td>\u0272</td>\n</tr>\n<tr>\n<td>hn</td>\n<td>n\u0325</td>\n</tr>\n<tr>\n<td>hl</td>\n<td>l\u0325</td>\n</tr>\n<tr>\n<td>aa</td>\n<td>a\u02d0</td>\n</tr>\n<tr>\n<td>ee</td>\n<td>e\u02d0</td>\n</tr>\n<tr>\n<td>ii</td>\n<td>i\u02d0</td>\n</tr>\n<tr>\n<td>oo</td>\n<td>o\u02d0</td>\n</tr>\n<tr>\n<td>uu</td>\n<td>u\u02d0</td>\n</tr>\n<tr>\n<td>\u00e2\u00e2</td>\n<td>a\u0303\u02d0</td>\n</tr>\n<tr>\n<td>\u00ea\u00ea</td>\n<td>e\u0303\u02d0</td>\n</tr>\n<tr>\n<td>\u00ee\u00ee</td>\n<td>i\u0303\u02d0</td>\n</tr>\n<tr>\n<td>\u00f4\u00f4</td>\n<td>o\u0303\u02d0</td>\n</tr>\n<tr>\n<td>\u00fb\u00fb</td>\n<td>u\u0303\u02d0</td>\n</tr>\n<tr>\n<td>a</td>\n<td>a</td>\n</tr>\n<tr>\n<td>e</td>\n<td>e</td>\n</tr>\n<tr>\n<td>i</td>\n<td>i</td>\n</tr>\n<tr>\n<td>o</td>\n<td>o</td>\n</tr>\n<tr>\n<td>u</td>\n<td>u</td>\n</tr>\n<tr>\n<td>ng</td>\n<td>\u014b</td>\n</tr></tbody></table>\n<p>Now, the example sentence <em>i beeng a kon hnyimake ko li aman a a vwa</em> ('My friend is thinking about the things he is doing') can be converted:</p>\n<p><code>print(script_converter.convert(\"i beeng a kon hnyimake ko li aman a a vwa\", \"vamale_mapping.csv\"))</code></p>\n<p>This results in the output <code>i \u1d50be\u02d0\u014b a kon \u0272\u030aimake ko li aman a a v\u02b7a</code>.\nThis, in turn, could be converted back to <code>i beeng a kon hnyimake ko li aman a a vwa</code> using the following command:</p>\n<p><code>print(script_converter.convert(\"i \u1d50be\u02d0\u014b a kon \u0272\u030aimake ko li aman a a v\u02b7a\", \"vamale_mapping.csv\", to_ipa=False))</code></p>\n\n          </div>"}, "last_serial": 6116959, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "74cf701208a6e1877be4b810914ea3c4", "sha256": "d92a056f8fed71d1e2d98e45710a0d917a5a097f13deb981f05b678b9d44ff3c"}, "downloads": -1, "filename": "script_converter-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "74cf701208a6e1877be4b810914ea3c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15795, "upload_time": "2019-11-11T13:40:34", "upload_time_iso_8601": "2019-11-11T13:40:34.741744Z", "url": "https://files.pythonhosted.org/packages/a7/7c/e4011130349c4a6be5a6ab34396afc9c1f28c1a37012693aebcd198c8f6a/script_converter-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2327e763f4199ff9541b3850ef0d870d", "sha256": "638b9ea99fc9a4ed17e0a5ddefbd952507bf522ca74cf268cd4ec1e76a35dba3"}, "downloads": -1, "filename": "script_converter-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2327e763f4199ff9541b3850ef0d870d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2679, "upload_time": "2019-11-11T13:40:37", "upload_time_iso_8601": "2019-11-11T13:40:37.355180Z", "url": "https://files.pythonhosted.org/packages/1f/2d/6960efff14d861bc74b193dc0e1ef8d98a3aaf9dac52224e6fdeb9f6b0a3/script_converter-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "74cf701208a6e1877be4b810914ea3c4", "sha256": "d92a056f8fed71d1e2d98e45710a0d917a5a097f13deb981f05b678b9d44ff3c"}, "downloads": -1, "filename": "script_converter-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "74cf701208a6e1877be4b810914ea3c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15795, "upload_time": "2019-11-11T13:40:34", "upload_time_iso_8601": "2019-11-11T13:40:34.741744Z", "url": "https://files.pythonhosted.org/packages/a7/7c/e4011130349c4a6be5a6ab34396afc9c1f28c1a37012693aebcd198c8f6a/script_converter-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2327e763f4199ff9541b3850ef0d870d", "sha256": "638b9ea99fc9a4ed17e0a5ddefbd952507bf522ca74cf268cd4ec1e76a35dba3"}, "downloads": -1, "filename": "script_converter-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2327e763f4199ff9541b3850ef0d870d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2679, "upload_time": "2019-11-11T13:40:37", "upload_time_iso_8601": "2019-11-11T13:40:37.355180Z", "url": "https://files.pythonhosted.org/packages/1f/2d/6960efff14d861bc74b193dc0e1ef8d98a3aaf9dac52224e6fdeb9f6b0a3/script_converter-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:33 2020"}