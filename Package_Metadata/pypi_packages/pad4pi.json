{"info": {"author": "Brett McLean", "author_email": "brettrmclean@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Education", "Topic :: System :: Hardware"], "description": "pad4pi\n======\n\nAn interrupt-based Python 2/3 library for reading matrix_ keypad_ key presses using Raspberry Pi GPIO pins.\n\n.. _matrix: http://www.adafruit.com/products/419\n.. _keypad: http://www.adafruit.com/products/1824\n\n.. code-block:: python\n\n\tpip install pad4pi\n\nTested on a Raspberry Pi B+ using a `4x3 matrix keypad`_ but it should work with 4x4 and other sizes.\n\n.. _4x3 matrix keypad: http://www.adafruit.com/products/419\n\nUsage\n=====\n\n.. code-block:: python\n\n  from pad4pi import rpi_gpio\n\n  KEYPAD = [\n      [1, 2, 3],\n      [4, 5, 6],\n      [7, 8, 9],\n      [\"*\", 0, \"#\"]\n  ]\n\n  ROW_PINS = [4, 14, 15, 17] # BCM numbering\n  COL_PINS = [18, 27, 22] # BCM numbering\n\n  factory = rpi_gpio.KeypadFactory()\n\n  # Try factory.create_4_by_3_keypad \n  # and factory.create_4_by_4_keypad for reasonable defaults\n  keypad = factory.create_keypad(keypad=KEYPAD, row_pins=ROW_PINS, col_pins=COL_PINS)\n\n  def printKey(key):\n      print(key)\n\n  # printKey will be called each time a keypad button is pressed\n  keypad.registerKeyPressHandler(printKey)\n\nWhen your program exits, call ``keypad.cleanup()`` to ensure the Raspberry Pi's GPIO pins are reset.\n\nLicense\n=======\n\nLicensed under `GNU Lesser General Public License Version 3`_ (LGPL v3).\n\n.. _GNU Lesser General Public License Version 3: https://github.com/brettmclean/pad4pi/blob/master/LICENSE", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brettmclean/pad4pi", "keywords": "raspberry pi matrix keypad", "license": "LGPLv3", "maintainer": "", "maintainer_email": "", "name": "pad4pi", "package_url": "https://pypi.org/project/pad4pi/", "platform": "", "project_url": "https://pypi.org/project/pad4pi/", "project_urls": {"Homepage": "https://github.com/brettmclean/pad4pi"}, "release_url": "https://pypi.org/project/pad4pi/1.1.5/", "requires_dist": null, "requires_python": "", "summary": "Interrupt-based matrix keypad library for Raspberry Pi", "version": "1.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pad4pi\">\n<h2>pad4pi</h2>\n<p>An interrupt-based Python 2/3 library for reading <a href=\"http://www.adafruit.com/products/419\" rel=\"nofollow\">matrix</a> <a href=\"http://www.adafruit.com/products/1824\" rel=\"nofollow\">keypad</a> key presses using Raspberry Pi GPIO pins.</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">pad4pi</span>\n</pre>\n<p>Tested on a Raspberry Pi B+ using a <a href=\"http://www.adafruit.com/products/419\" rel=\"nofollow\">4x3 matrix keypad</a> but it should work with 4x4 and other sizes.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pad4pi</span> <span class=\"kn\">import</span> <span class=\"n\">rpi_gpio</span>\n\n<span class=\"n\">KEYPAD</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"s2\">\"*\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"#\"</span><span class=\"p\">]</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">ROW_PINS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">]</span> <span class=\"c1\"># BCM numbering</span>\n<span class=\"n\">COL_PINS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">]</span> <span class=\"c1\"># BCM numbering</span>\n\n<span class=\"n\">factory</span> <span class=\"o\">=</span> <span class=\"n\">rpi_gpio</span><span class=\"o\">.</span><span class=\"n\">KeypadFactory</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Try factory.create_4_by_3_keypad</span>\n<span class=\"c1\"># and factory.create_4_by_4_keypad for reasonable defaults</span>\n<span class=\"n\">keypad</span> <span class=\"o\">=</span> <span class=\"n\">factory</span><span class=\"o\">.</span><span class=\"n\">create_keypad</span><span class=\"p\">(</span><span class=\"n\">keypad</span><span class=\"o\">=</span><span class=\"n\">KEYPAD</span><span class=\"p\">,</span> <span class=\"n\">row_pins</span><span class=\"o\">=</span><span class=\"n\">ROW_PINS</span><span class=\"p\">,</span> <span class=\"n\">col_pins</span><span class=\"o\">=</span><span class=\"n\">COL_PINS</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">printKey</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># printKey will be called each time a keypad button is pressed</span>\n<span class=\"n\">keypad</span><span class=\"o\">.</span><span class=\"n\">registerKeyPressHandler</span><span class=\"p\">(</span><span class=\"n\">printKey</span><span class=\"p\">)</span>\n</pre>\n<p>When your program exits, call <tt>keypad.cleanup()</tt> to ensure the Raspberry Pi\u2019s GPIO pins are reset.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Licensed under <a href=\"https://github.com/brettmclean/pad4pi/blob/master/LICENSE\" rel=\"nofollow\">GNU Lesser General Public License Version 3</a> (LGPL v3).</p>\n</div>\n\n          </div>"}, "last_serial": 4171647, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f3eed362769d6253033c6ff2f0d7ab1d", "sha256": "d97796d6e2600cd46518566e79e0b3f5ebf53047d443c61631a2f8086b510925"}, "downloads": -1, "filename": "pad4pi-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f3eed362769d6253033c6ff2f0d7ab1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2458, "upload_time": "2015-07-26T18:59:31", "upload_time_iso_8601": "2015-07-26T18:59:31.793825Z", "url": "https://files.pythonhosted.org/packages/78/d3/3df477c826213ae92a7ba7c1602ad72dbe21cc4e6656accd06e5c1d633fc/pad4pi-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "4630d17d4f396559ec1a1088d8409cfe", "sha256": "bcdad5c0fa6b75fc414146fe1f206ac9bff3764cb088c17ecee0ac71e1ebeee1"}, "downloads": -1, "filename": "pad4pi-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4630d17d4f396559ec1a1088d8409cfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2477, "upload_time": "2015-08-01T04:28:32", "upload_time_iso_8601": "2015-08-01T04:28:32.030431Z", "url": "https://files.pythonhosted.org/packages/47/ea/3801f8a249e874930afa6bcb7d34923bc9720bcf2da66018780e5cb7d056/pad4pi-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "950bd717174738dd6da519a7e5c65cbf", "sha256": "0448b3b7285a83f732c10a1ade85cff85121ea7b754ea894184feb1e052f20c1"}, "downloads": -1, "filename": "pad4pi-1.1.1.tar.gz", "has_sig": false, "md5_digest": "950bd717174738dd6da519a7e5c65cbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2680, "upload_time": "2015-10-04T05:01:56", "upload_time_iso_8601": "2015-10-04T05:01:56.496181Z", "url": "https://files.pythonhosted.org/packages/74/d5/6b0a4c6323706a1282b4ecbf824dc53341319293ae753682f4377ef6725f/pad4pi-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "1fd28c450e17c02b0f4aa2ff14c64e55", "sha256": "aaead9fffbb2eabc52c3b88dcc818c2bd8e2bee159859d4a3fc2ce9319ca410f"}, "downloads": -1, "filename": "pad4pi-1.1.2.tar.gz", "has_sig": false, "md5_digest": "1fd28c450e17c02b0f4aa2ff14c64e55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2919, "upload_time": "2016-10-06T03:51:25", "upload_time_iso_8601": "2016-10-06T03:51:25.745166Z", "url": "https://files.pythonhosted.org/packages/9d/88/a180f2073dcbfb732e4162a6c9c83ce15a70bfc15d34d17fbd400efbe278/pad4pi-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "d92e4ab30169ef79c5cfee32aa172794", "sha256": "48f3da3b6c0afd2fddee6d97a17c19288be9378e662f03de3e9e2dd5136a07bd"}, "downloads": -1, "filename": "pad4pi-1.1.3.tar.gz", "has_sig": false, "md5_digest": "d92e4ab30169ef79c5cfee32aa172794", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3342, "upload_time": "2018-02-22T03:36:38", "upload_time_iso_8601": "2018-02-22T03:36:38.690391Z", "url": "https://files.pythonhosted.org/packages/bf/27/0d991cf6d2dd521edc31113efbc68ef3ac70efdc8441f3493321f1c27dab/pad4pi-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "01a3143c55a87d74b7efda49d1282866", "sha256": "966949e63f5cdb0039648091ad66fe919f63bf3dc871666e24644ae6cfc05820"}, "downloads": -1, "filename": "pad4pi-1.1.4.tar.gz", "has_sig": false, "md5_digest": "01a3143c55a87d74b7efda49d1282866", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3364, "upload_time": "2018-06-10T18:42:31", "upload_time_iso_8601": "2018-06-10T18:42:31.514978Z", "url": "https://files.pythonhosted.org/packages/ff/96/e5faefcf4d2da55bb41d0b9f6d1d7c40e2a4fbd60168985fae0934a4f1d6/pad4pi-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "1aa2dc476b92241d3cb7551309b775e2", "sha256": "fa855896a1793d0005cf810ed5aa7aa639984cb83dc50cba51b4236b8badb764"}, "downloads": -1, "filename": "pad4pi-1.1.5.tar.gz", "has_sig": false, "md5_digest": "1aa2dc476b92241d3cb7551309b775e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3377, "upload_time": "2018-08-15T03:51:11", "upload_time_iso_8601": "2018-08-15T03:51:11.431972Z", "url": "https://files.pythonhosted.org/packages/43/15/6ab0fe51324f52db2cb28ee739e59c7d1525c578d17df17005a50e3631cf/pad4pi-1.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1aa2dc476b92241d3cb7551309b775e2", "sha256": "fa855896a1793d0005cf810ed5aa7aa639984cb83dc50cba51b4236b8badb764"}, "downloads": -1, "filename": "pad4pi-1.1.5.tar.gz", "has_sig": false, "md5_digest": "1aa2dc476b92241d3cb7551309b775e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3377, "upload_time": "2018-08-15T03:51:11", "upload_time_iso_8601": "2018-08-15T03:51:11.431972Z", "url": "https://files.pythonhosted.org/packages/43/15/6ab0fe51324f52db2cb28ee739e59c7d1525c578d17df17005a50e3631cf/pad4pi-1.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:59 2020"}