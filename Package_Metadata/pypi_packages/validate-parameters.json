{"info": {"author": "chenyang21", "author_email": "745661294@qq.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "Operating System :: MacOS", "Operating System :: Microsoft", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet", "Topic :: Multimedia :: Video", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "validate_parameters\n-------------------\n\u6821\u9a8c\u51fd\u6570\u53c2\u6570\u7684\u5de5\u5177\n\n- \u6821\u9a8c\u7c7b\u578b\n\n.. code :: python\n\n    @validParam(a=int)\n    def func(a, b=1, *args, **kwargs):\n        return Result().data = a, b, args, kwargs\n\n\n| \u6b63\u786e\u65f6\uff0c\u8fd4\u56de\u503c\uff1afunc\u5b9a\u4e49\u7684Result()\u5bf9\u8c61\uff08\u7531\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\uff09\n| \u9519\u8bef\u65f6\uff0c\u8fd4\u56de\u503c\uff1aResult()\u5bf9\u8c61\uff0c\n\n.. code :: python\n\n    Result().flag = False,\n    Result().msg = 'func() parameter validation fails, param: a, value: a(str), msg(None)'\n    Result().code/status = -3000\n\n* \u81ea\u5b9a\u4e49\u51fd\u6570\n\n.. code :: python\n\n    def max_11(x):\n        if x> 11:\n            return True, 'msg', 'code'\n        else:\n            return False, 'msg', 'code'\n\n    @validParam(a=int, b=max_11)\n    def func(a, b=1, *args, **kwargs)\n        return Result().data = a, b, args, kwargs\n\n| \u5176\u4e2d\uff0cmsg\u548ccode\u4e3a\u7528\u6237\u81ea\u5b9a\u4e49\uff0c\u4e14\u4e3a\u53ef\u9009\u53c2\u6570\n| \u6b63\u786e\u65f6\uff0c\u8fd4\u56de\u503c\uff1afunc\u5b9a\u4e49\u7684Result()\u5bf9\u8c61\uff08\u7531\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\uff09\n| \u9519\u8bef\u65f6\uff0c\u8fd4\u56de\u503c\uff1aResult()\u5bf9\u8c61\uff0c\n\n.. code :: python\n\n    Result().flag = False,\n    Result().msg = 'func() parameter validation fails, param: a, value: a(str), msg(*{{ msg }}*)'\n    Result().code/status = *{{ code }}*\n\n* \u6821\u9a8c\u7c7b\u578b\u548c\u51fd\u6570\n\n.. code :: python\n\n    @validParam(a=int, b=(int, max_11))\n    def func(a, b=1, *args, **kwargs)\n        return Result().data = a, b, args, kwargs\n\n| \u5176\u4e2d\uff0cmsg\u548ccode\u4e3a\u7528\u6237\u81ea\u5b9a\u4e49\uff0c\u4e14\u4e3a\u53ef\u9009\u53c2\u6570\n| \u6b63\u786e\u65f6\uff0c\u8fd4\u56de\u503c\uff1afunc\u5b9a\u4e49\u7684Result()\u5bf9\u8c61\uff08\u7531\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\uff09\n| \u9519\u8bef\u65f6\uff0c\u8fd4\u56de\u503c\uff1aResult()\u5bf9\u8c61\uff0c\n\n.. code :: python\n\n    Result().flag = False,\n    Result().msg = 'func() parameter validation fails, param: a, value: a(str), msg(*{{ msg }}*)'\n    Result().code/status = *{{ code }}*\n\nResult\n------\n\n- \u8fd4\u56de\u503c\u5bf9\u8c61Result()\n- \u652f\u6301Result().code\u548cResult()[\"code]\u53d6\u503c\n- \u652f\u6301Result().code=1\u548cResult()[\"code]=1\u8d4b\u503c\n- \u652f\u6301\u8f6cjson\u683c\u5f0f\uff0cjson.dumps(Result(), defaults=Result().to_json)\n- \u652f\u6301\u8f6cdict\u5bf9\u8c61\uff0cResult().dict()\n\n- \u9ed8\u8ba4\u53c2\u6570\u5305\u62ec\uff1a\n\n.. code :: python\n\n    flag=True, data=None, code=None, msg=None, status=None, return_values=None\n\n\u4e0a\u4f20\u81f3pypi\n------\n\n::\n\n    python setup.py bdist_wheel --universal\n    twine upload dist/*\n\n| *username: chenyang21 passwd: devops58ganji*\n| *\u9700\u8981\u66f4\u65b0LICENSE\u91cc\u7684version\uff0c\u5426\u5219\u4e0a\u4f20\u4f1a\u5931\u8d25*\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://igit.58corp.com/ops/validate_param.git", "keywords": "", "license": "58ganji", "maintainer": "", "maintainer_email": "", "name": "validate-parameters", "package_url": "https://pypi.org/project/validate-parameters/", "platform": "", "project_url": "https://pypi.org/project/validate-parameters/", "project_urls": {"Homepage": "http://igit.58corp.com/ops/validate_param.git"}, "release_url": "https://pypi.org/project/validate-parameters/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "A Python library for checking parameters.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            validate_parameters<br>-------------------<br>\u6821\u9a8c\u51fd\u6570\u53c2\u6570\u7684\u5de5\u5177<br><br>- \u6821\u9a8c\u7c7b\u578b<br><br>.. code :: python<br><br>    @validParam(a=int)<br>    def func(a, b=1, *args, **kwargs):<br>        return Result().data = a, b, args, kwargs<br><br><br>| \u6b63\u786e\u65f6\uff0c\u8fd4\u56de\u503c\uff1afunc\u5b9a\u4e49\u7684Result()\u5bf9\u8c61\uff08\u7531\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\uff09<br>| \u9519\u8bef\u65f6\uff0c\u8fd4\u56de\u503c\uff1aResult()\u5bf9\u8c61\uff0c<br><br>.. code :: python<br><br>    Result().flag = False,<br>    Result().msg = 'func() parameter validation fails, param: a, value: a(str), msg(None)'<br>    Result().code/status = -3000<br><br>* \u81ea\u5b9a\u4e49\u51fd\u6570<br><br>.. code :: python<br><br>    def max_11(x):<br>        if x&gt; 11:<br>            return True, 'msg', 'code'<br>        else:<br>            return False, 'msg', 'code'<br><br>    @validParam(a=int, b=max_11)<br>    def func(a, b=1, *args, **kwargs)<br>        return Result().data = a, b, args, kwargs<br><br>| \u5176\u4e2d\uff0cmsg\u548ccode\u4e3a\u7528\u6237\u81ea\u5b9a\u4e49\uff0c\u4e14\u4e3a\u53ef\u9009\u53c2\u6570<br>| \u6b63\u786e\u65f6\uff0c\u8fd4\u56de\u503c\uff1afunc\u5b9a\u4e49\u7684Result()\u5bf9\u8c61\uff08\u7531\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\uff09<br>| \u9519\u8bef\u65f6\uff0c\u8fd4\u56de\u503c\uff1aResult()\u5bf9\u8c61\uff0c<br><br>.. code :: python<br><br>    Result().flag = False,<br>    Result().msg = 'func() parameter validation fails, param: a, value: a(str), msg(*{{ msg }}*)'<br>    Result().code/status = *{{ code }}*<br><br>* \u6821\u9a8c\u7c7b\u578b\u548c\u51fd\u6570<br><br>.. code :: python<br><br>    @validParam(a=int, b=(int, max_11))<br>    def func(a, b=1, *args, **kwargs)<br>        return Result().data = a, b, args, kwargs<br><br>| \u5176\u4e2d\uff0cmsg\u548ccode\u4e3a\u7528\u6237\u81ea\u5b9a\u4e49\uff0c\u4e14\u4e3a\u53ef\u9009\u53c2\u6570<br>| \u6b63\u786e\u65f6\uff0c\u8fd4\u56de\u503c\uff1afunc\u5b9a\u4e49\u7684Result()\u5bf9\u8c61\uff08\u7531\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\uff09<br>| \u9519\u8bef\u65f6\uff0c\u8fd4\u56de\u503c\uff1aResult()\u5bf9\u8c61\uff0c<br><br>.. code :: python<br><br>    Result().flag = False,<br>    Result().msg = 'func() parameter validation fails, param: a, value: a(str), msg(*{{ msg }}*)'<br>    Result().code/status = *{{ code }}*<br><br>Result<br>------<br><br>- \u8fd4\u56de\u503c\u5bf9\u8c61Result()<br>- \u652f\u6301Result().code\u548cResult()[\"code]\u53d6\u503c<br>- \u652f\u6301Result().code=1\u548cResult()[\"code]=1\u8d4b\u503c<br>- \u652f\u6301\u8f6cjson\u683c\u5f0f\uff0cjson.dumps(Result(), defaults=Result().to_json)<br>- \u652f\u6301\u8f6cdict\u5bf9\u8c61\uff0cResult().dict()<br><br>- \u9ed8\u8ba4\u53c2\u6570\u5305\u62ec\uff1a<br><br>.. code :: python<br><br>    flag=True, data=None, code=None, msg=None, status=None, return_values=None<br><br>\u4e0a\u4f20\u81f3pypi<br>------<br><br>::<br><br>    python setup.py bdist_wheel --universal<br>    twine upload dist/*<br><br>| *username: chenyang21 passwd: devops58ganji*<br>| *\u9700\u8981\u66f4\u65b0LICENSE\u91cc\u7684version\uff0c\u5426\u5219\u4e0a\u4f20\u4f1a\u5931\u8d25*<br><br><br>\n          </div>"}, "last_serial": 4456731, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "4699ae5810d511b5c9de73a6114d2209", "sha256": "7a239c592e89f432f481771141f22e90ccbb3dbf62a83be913ea1ea5e6820ec1"}, "downloads": -1, "filename": "validate_parameters-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4699ae5810d511b5c9de73a6114d2209", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4659, "upload_time": "2018-11-05T15:18:05", "upload_time_iso_8601": "2018-11-05T15:18:05.977691Z", "url": "https://files.pythonhosted.org/packages/ac/f4/1ee359308775d02b0cd84b03d5e8d0b8658fff03bd13933017222ec319c6/validate_parameters-0.1.3-py2.py3-none-any.whl", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "eadf95147dc9bea41640c7205c30b629", "sha256": "441710ff99e1b34a8d65d5ed83298e82ccc0c6c1366e8c38634cf071f625f896"}, "downloads": -1, "filename": "validate_parameters-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eadf95147dc9bea41640c7205c30b629", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7218, "upload_time": "2018-11-06T09:37:19", "upload_time_iso_8601": "2018-11-06T09:37:19.365609Z", "url": "https://files.pythonhosted.org/packages/88/51/ed712f225566711f570b6a0bd4e41ad6b52912ea061ef94342b91a715da4/validate_parameters-0.1.4-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eadf95147dc9bea41640c7205c30b629", "sha256": "441710ff99e1b34a8d65d5ed83298e82ccc0c6c1366e8c38634cf071f625f896"}, "downloads": -1, "filename": "validate_parameters-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eadf95147dc9bea41640c7205c30b629", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7218, "upload_time": "2018-11-06T09:37:19", "upload_time_iso_8601": "2018-11-06T09:37:19.365609Z", "url": "https://files.pythonhosted.org/packages/88/51/ed712f225566711f570b6a0bd4e41ad6b52912ea061ef94342b91a715da4/validate_parameters-0.1.4-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:38:08 2020"}