{"info": {"author": "Yusuke Hayashi", "author_email": "yusuke8h@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\n# mcmder\nYet Another Wrapper of Nysol M-Command in Python.\n\n\n## Description\n\nHigh-speed processing (CSV) of large-scale structured data tables.\n\nTo know more about Nysol and M-Command, see the official documents.\n\n\n### What is Nysol and M-Command?\n[Nysol Official Page](http://www.nysol.jp/en/home)\n\n[M-Command GitHub](https://github.com/nysol/mcmd)\n\n\n### How fast Nysol is?\n[Nysol Biz Page (Japanese)](http://www.nysol.biz/)\n\n\n## Features\n- Create M-Command easily in python with method chaining. \n- Execute M-Command without putting large data on memory.(csv to csv)\n- Optionally use pandas DataFrame as input and output.\n\n\n## Requirement\n- [nysol/mcmd](https://github.com/nysol/mcmd#installation)\n- [pandas](https://pandas.pydata.org/)\n\n\n## Usage\n\n### From CSV File\nsample.csv\n```\na,b,c\nx,1,4\ny,2,9\nz,3,3\n```\n\n```\n>>> from mcmder import Mcmder\n>>> m = Mcmder('sample.csv')\n>>> mc = m.mcut(['a','c'])\n>>> mc.save('cut.csv')\n```\n\ncut.csv\n```\na,c\nx,4\ny,9\nz,3\n```\n\n```\n>>> mc.dataframe\n   a  c\n0  x  4\n1  y  9\n2  z  3\n```\n\n### From pandas DataFrame\n```\n>>> from mcmder import Mcmder\n>>> import pandas as pd\n>>> import numpy as np\n>>> df = pd.DataFrame(np.random.randn(6,4), columns=list('ABCD'))\n>>> m = Mcmder(df)\n>>> mc = m.mcut(['A','C','D']).msel('${A}>0')\n>>> mc.dataframe\n          A         C         D\n0  0.251857  0.080099 -1.211923\n1  0.100167 -1.824585  0.051611\n2  0.890079  1.440997 -0.298709\n```\n\n## License\n\n[MIT](https://github.com/yhay81/mcmder/blob/master/LICENSE)\n\n\n## Author\n\n[Yusuke Hayashi](https://github.com/yahy81)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yhay81/mcmder", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mcmder", "package_url": "https://pypi.org/project/mcmder/", "platform": "", "project_url": "https://pypi.org/project/mcmder/", "project_urls": {"Homepage": "https://github.com/yhay81/mcmder"}, "release_url": "https://pypi.org/project/mcmder/0.2.0/", "requires_dist": ["pandas"], "requires_python": ">=3.5.0", "summary": "Yet Another Wrapper of Nysol M-Command in Python.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mcmder</h1>\n<p>Yet Another Wrapper of Nysol M-Command in Python.</p>\n<h2>Description</h2>\n<p>High-speed processing (CSV) of large-scale structured data tables.</p>\n<p>To know more about Nysol and M-Command, see the official documents.</p>\n<h3>What is Nysol and M-Command?</h3>\n<p><a href=\"http://www.nysol.jp/en/home\" rel=\"nofollow\">Nysol Official Page</a></p>\n<p><a href=\"https://github.com/nysol/mcmd\" rel=\"nofollow\">M-Command GitHub</a></p>\n<h3>How fast Nysol is?</h3>\n<p><a href=\"http://www.nysol.biz/\" rel=\"nofollow\">Nysol Biz Page (Japanese)</a></p>\n<h2>Features</h2>\n<ul>\n<li>Create M-Command easily in python with method chaining.</li>\n<li>Execute M-Command without putting large data on memory.(csv to csv)</li>\n<li>Optionally use pandas DataFrame as input and output.</li>\n</ul>\n<h2>Requirement</h2>\n<ul>\n<li><a href=\"https://github.com/nysol/mcmd#installation\" rel=\"nofollow\">nysol/mcmd</a></li>\n<li><a href=\"https://pandas.pydata.org/\" rel=\"nofollow\">pandas</a></li>\n</ul>\n<h2>Usage</h2>\n<h3>From CSV File</h3>\n<p>sample.csv</p>\n<pre><code>a,b,c\nx,1,4\ny,2,9\nz,3,3\n</code></pre>\n<pre><code>&gt;&gt;&gt; from mcmder import Mcmder\n&gt;&gt;&gt; m = Mcmder('sample.csv')\n&gt;&gt;&gt; mc = m.mcut(['a','c'])\n&gt;&gt;&gt; mc.save('cut.csv')\n</code></pre>\n<p>cut.csv</p>\n<pre><code>a,c\nx,4\ny,9\nz,3\n</code></pre>\n<pre><code>&gt;&gt;&gt; mc.dataframe\n   a  c\n0  x  4\n1  y  9\n2  z  3\n</code></pre>\n<h3>From pandas DataFrame</h3>\n<pre><code>&gt;&gt;&gt; from mcmder import Mcmder\n&gt;&gt;&gt; import pandas as pd\n&gt;&gt;&gt; import numpy as np\n&gt;&gt;&gt; df = pd.DataFrame(np.random.randn(6,4), columns=list('ABCD'))\n&gt;&gt;&gt; m = Mcmder(df)\n&gt;&gt;&gt; mc = m.mcut(['A','C','D']).msel('${A}&gt;0')\n&gt;&gt;&gt; mc.dataframe\n          A         C         D\n0  0.251857  0.080099 -1.211923\n1  0.100167 -1.824585  0.051611\n2  0.890079  1.440997 -0.298709\n</code></pre>\n<h2>License</h2>\n<p><a href=\"https://github.com/yhay81/mcmder/blob/master/LICENSE\" rel=\"nofollow\">MIT</a></p>\n<h2>Author</h2>\n<p><a href=\"https://github.com/yahy81\" rel=\"nofollow\">Yusuke Hayashi</a></p>\n\n          </div>"}, "last_serial": 4530203, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "f5419b9f4132883f4880204df0c35785", "sha256": "98d9150ec2efac4b581b9fdad87887bbc0f6cc7f84c8db2eed2a45667ec2ed22"}, "downloads": -1, "filename": "mcmder-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f5419b9f4132883f4880204df0c35785", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 6820, "upload_time": "2018-11-26T16:07:56", "upload_time_iso_8601": "2018-11-26T16:07:56.534708Z", "url": "https://files.pythonhosted.org/packages/c3/8f/0d22a37b8ac08915ad2be3fbda6c9e3d1158729925eb180f4c194d8743e4/mcmder-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65558910ff83bab81579e8ec42432694", "sha256": "a5cd20bcce990360e78068003f7e4efb2d89b21db27f047e3738995294860701"}, "downloads": -1, "filename": "mcmder-0.2.0.tar.gz", "has_sig": false, "md5_digest": "65558910ff83bab81579e8ec42432694", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 6792, "upload_time": "2018-11-26T16:07:58", "upload_time_iso_8601": "2018-11-26T16:07:58.839092Z", "url": "https://files.pythonhosted.org/packages/aa/b3/ec108592895bcc1004ce05bec0f492fe1572b2e6b77eb802fb4abe17ef45/mcmder-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f5419b9f4132883f4880204df0c35785", "sha256": "98d9150ec2efac4b581b9fdad87887bbc0f6cc7f84c8db2eed2a45667ec2ed22"}, "downloads": -1, "filename": "mcmder-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f5419b9f4132883f4880204df0c35785", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 6820, "upload_time": "2018-11-26T16:07:56", "upload_time_iso_8601": "2018-11-26T16:07:56.534708Z", "url": "https://files.pythonhosted.org/packages/c3/8f/0d22a37b8ac08915ad2be3fbda6c9e3d1158729925eb180f4c194d8743e4/mcmder-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65558910ff83bab81579e8ec42432694", "sha256": "a5cd20bcce990360e78068003f7e4efb2d89b21db27f047e3738995294860701"}, "downloads": -1, "filename": "mcmder-0.2.0.tar.gz", "has_sig": false, "md5_digest": "65558910ff83bab81579e8ec42432694", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 6792, "upload_time": "2018-11-26T16:07:58", "upload_time_iso_8601": "2018-11-26T16:07:58.839092Z", "url": "https://files.pythonhosted.org/packages/aa/b3/ec108592895bcc1004ce05bec0f492fe1572b2e6b77eb802fb4abe17ef45/mcmder-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:56 2020"}