{"info": {"author": "Tomas Nordin", "author_email": "tomnor@posteo.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Topic :: Scientific/Engineering"], "description": "channelpack\n===========\n\nA python package for loading, analyzing and slicing out acqusition data based on\nconditions. Conditions and naming of channels can be saved as config files and\nreused later in a convenient way.\n\nchannelpack origins from test engineering experience of handling data files from\ntest measurements. If those file are text kind of files, they might have some\ninconvinient need-to-know features before loadable into python:\n\n* Rows to skip - a number of lines (file meta data) prior to test data.\n* Data delimiter - The character used to separate one data from the other, often\n  space, tab or comma.\n* Decimal separator - Depending on your region, the decimal separator is\n  sometimes a comma, sometimes a dot.\n* The naming of \"channels\", if named, could be on a row not immediately above\n  the data, (following row could be engineering units for example).\n\nchannelpack intend to deal with the inconveniences of text data files described\nabove.\n\nData files:\n\n* Any text (numeric) kind of file (numpy's loadtxt is used).\n* dbf files (Raymond Hettinger `recipe\n  <http://code.activestate.com/recipes/362715>`_ as low level reader).\n* Spread sheet files (xlrd is used).\n* Any file read by your own tools, provide a function returning a dict\n  with channels to the ChannelPack class.\n\nExample\n-------\n\nchannelpack has some convenience functions for getting a pack::\n\n    >>> import channelpack as cp\n    >>> sp = cp.sheetpack('testdata/sampledat3.xls')\n    >>> sp.chnames\n    {0: u'txtdata', 1: u'nums', 2: u'floats'}\n\nPacks are made callable, by name or column index::\n\n    >>> sp(0)\n    array([u'A', u'A', u'C', u'D', u'D'],\n          dtype='<U1')\n    >>> sp(0) is sp('txtdata')\n    True\n\nA boolean mask array is kept to keep track of \"True parts\"::\n\n    >>> sp.parts()\n    [0]\n    >>> sp.add_condition('cond', '(%(0) == \"A\") | (%(0) == \"D\")')\n    >>> sp.parts()\n    [0, 1]\n    >>> sp('txtdata', 0)\n    array([u'A', u'A'],\n          dtype='<U1')\n    >>> sp('txtdata', 1)\n    array([u'D', u'D'],\n          dtype='<U1')\n\nNow persist the conditions and load a new data set that need the same\nconditions::\n\n    >>> sp.spit_config()\n    >>> sp = cp.sheetpack('testdata/sampledat4.xls', stopcell='c6')\n    >>> sp('txtdata')\n    array([u'A', u'C', u'C', u'C', u'D'],\n          dtype='<U1')\n    >>> sp.parts()\n    [0]\n    >>> sp.eat_config()\n    >>> sp.parts()\n    [0, 1]\n    >>> sp('txtdata', 0)\n    array([u'A'],\n          dtype='<U1')\n    >>> sp('txtdata', 1)\n    array([u'D'],\n          dtype='<U1')\n\n\nDepends\n-------\n\nThere is a dependency on xlrd as of version 0.2.0. It is installed if not\navailable.\n\nchannelpack imports numpy. Installation of channelpack will not arrange for\nnumpy to be installed. Do it your way. It is likely that if you consider\nchannelpack, you already have numpy installed.\n\nDocumentation and changes\n-------------------------\n\n`Documentation <http://channelpack.readthedocs.org/en/latest/>`_\n\n`Changes <http://channelpack.readthedocs.org/en/latest/changelog.html>`_\n\nAs of version 0.3.0, channelpack is not backwards compatible. The way of storing\nand making substitutions of conditions is new, plus a bunch of other changes\nthat breaks earlier versions. But it's much better now.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tomnor/channelpack", "keywords": "data-mining datafile daq masking conditions evaluation ad-hoc", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "channelpack", "package_url": "https://pypi.org/project/channelpack/", "platform": "", "project_url": "https://pypi.org/project/channelpack/", "project_urls": {"Homepage": "https://github.com/tomnor/channelpack"}, "release_url": "https://pypi.org/project/channelpack/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Package for loading, analyzing and slicing acqusition data", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A python package for loading, analyzing and slicing out acqusition data based on\nconditions. Conditions and naming of channels can be saved as config files and\nreused later in a convenient way.</p>\n<p>channelpack origins from test engineering experience of handling data files from\ntest measurements. If those file are text kind of files, they might have some\ninconvinient need-to-know features before loadable into python:</p>\n<ul>\n<li>Rows to skip - a number of lines (file meta data) prior to test data.</li>\n<li>Data delimiter - The character used to separate one data from the other, often\nspace, tab or comma.</li>\n<li>Decimal separator - Depending on your region, the decimal separator is\nsometimes a comma, sometimes a dot.</li>\n<li>The naming of \u201cchannels\u201d, if named, could be on a row not immediately above\nthe data, (following row could be engineering units for example).</li>\n</ul>\n<p>channelpack intend to deal with the inconveniences of text data files described\nabove.</p>\n<p>Data files:</p>\n<ul>\n<li>Any text (numeric) kind of file (numpy\u2019s loadtxt is used).</li>\n<li>dbf files (Raymond Hettinger <a href=\"http://code.activestate.com/recipes/362715\" rel=\"nofollow\">recipe</a> as low level reader).</li>\n<li>Spread sheet files (xlrd is used).</li>\n<li>Any file read by your own tools, provide a function returning a dict\nwith channels to the ChannelPack class.</li>\n</ul>\n<div id=\"example\">\n<h2>Example</h2>\n<p>channelpack has some convenience functions for getting a pack:</p>\n<pre>&gt;&gt;&gt; import channelpack as cp\n&gt;&gt;&gt; sp = cp.sheetpack('testdata/sampledat3.xls')\n&gt;&gt;&gt; sp.chnames\n{0: u'txtdata', 1: u'nums', 2: u'floats'}\n</pre>\n<p>Packs are made callable, by name or column index:</p>\n<pre>&gt;&gt;&gt; sp(0)\narray([u'A', u'A', u'C', u'D', u'D'],\n      dtype='&lt;U1')\n&gt;&gt;&gt; sp(0) is sp('txtdata')\nTrue\n</pre>\n<p>A boolean mask array is kept to keep track of \u201cTrue parts\u201d:</p>\n<pre>&gt;&gt;&gt; sp.parts()\n[0]\n&gt;&gt;&gt; sp.add_condition('cond', '(%(0) == \"A\") | (%(0) == \"D\")')\n&gt;&gt;&gt; sp.parts()\n[0, 1]\n&gt;&gt;&gt; sp('txtdata', 0)\narray([u'A', u'A'],\n      dtype='&lt;U1')\n&gt;&gt;&gt; sp('txtdata', 1)\narray([u'D', u'D'],\n      dtype='&lt;U1')\n</pre>\n<p>Now persist the conditions and load a new data set that need the same\nconditions:</p>\n<pre>&gt;&gt;&gt; sp.spit_config()\n&gt;&gt;&gt; sp = cp.sheetpack('testdata/sampledat4.xls', stopcell='c6')\n&gt;&gt;&gt; sp('txtdata')\narray([u'A', u'C', u'C', u'C', u'D'],\n      dtype='&lt;U1')\n&gt;&gt;&gt; sp.parts()\n[0]\n&gt;&gt;&gt; sp.eat_config()\n&gt;&gt;&gt; sp.parts()\n[0, 1]\n&gt;&gt;&gt; sp('txtdata', 0)\narray([u'A'],\n      dtype='&lt;U1')\n&gt;&gt;&gt; sp('txtdata', 1)\narray([u'D'],\n      dtype='&lt;U1')\n</pre>\n</div>\n<div id=\"depends\">\n<h2>Depends</h2>\n<p>There is a dependency on xlrd as of version 0.2.0. It is installed if not\navailable.</p>\n<p>channelpack imports numpy. Installation of channelpack will not arrange for\nnumpy to be installed. Do it your way. It is likely that if you consider\nchannelpack, you already have numpy installed.</p>\n</div>\n<div id=\"documentation-and-changes\">\n<h2>Documentation and changes</h2>\n<p><a href=\"http://channelpack.readthedocs.org/en/latest/\" rel=\"nofollow\">Documentation</a></p>\n<p><a href=\"http://channelpack.readthedocs.org/en/latest/changelog.html\" rel=\"nofollow\">Changes</a></p>\n<p>As of version 0.3.0, channelpack is not backwards compatible. The way of storing\nand making substitutions of conditions is new, plus a bunch of other changes\nthat breaks earlier versions. But it\u2019s much better now.</p>\n</div>\n\n          </div>"}, "last_serial": 3107291, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "03ecd4937e47482ec6838ed27f0746f5", "sha256": "4d07d2c79629b752f28c5a14be27e1850ccc07d79e164afd21f88de919afb81f"}, "downloads": -1, "filename": "channelpack-0.1.0.tar.gz", "has_sig": false, "md5_digest": "03ecd4937e47482ec6838ed27f0746f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32052, "upload_time": "2014-08-15T00:36:03", "upload_time_iso_8601": "2014-08-15T00:36:03.018373Z", "url": "https://files.pythonhosted.org/packages/ad/ae/86288fbca9d360480a26241a4d4e9f217a51377270bca9a7c12ecbe856b1/channelpack-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8022d828bf2fddc8b7eeb3c122fbe79f", "sha256": "a2fd19545b113177c9d5a27067df7fddde25894fa4b8b5bd685f6161a17bdb07"}, "downloads": -1, "filename": "channelpack-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8022d828bf2fddc8b7eeb3c122fbe79f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31619, "upload_time": "2014-08-15T22:14:37", "upload_time_iso_8601": "2014-08-15T22:14:37.830335Z", "url": "https://files.pythonhosted.org/packages/c6/78/bea8763b56ebee3cbe2c139144033d32ac61e00a9d492ce09c92085d93b6/channelpack-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "24f376a872679b96c8259e31ae43c207", "sha256": "6910306651f10737d330e7a7898a5ca2b43c2b8ff2959bab3affbab0c81c8304"}, "downloads": -1, "filename": "channelpack-0.1.2.tar.gz", "has_sig": false, "md5_digest": "24f376a872679b96c8259e31ae43c207", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31686, "upload_time": "2014-09-20T23:10:05", "upload_time_iso_8601": "2014-09-20T23:10:05.553054Z", "url": "https://files.pythonhosted.org/packages/c5/dc/760b98466ddac53ff0e9d608a67c30d7df91f24ef6a5a3cf3aef9a30552d/channelpack-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "ced266820a287de80a47b469c7a64240", "sha256": "d7ef8fa714fb0264be2a233a551d1554d5ed794864d11fcd90d069698aee2b12"}, "downloads": -1, "filename": "channelpack-0.1.3.tar.gz", "has_sig": false, "md5_digest": "ced266820a287de80a47b469c7a64240", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32770, "upload_time": "2014-09-21T21:38:33", "upload_time_iso_8601": "2014-09-21T21:38:33.662108Z", "url": "https://files.pythonhosted.org/packages/07/ee/53c41380820a0aaeedd225bd51249323ec1362f6d21f1dac0ffd1fd5e563/channelpack-0.1.3.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "4c136d9668186cf1f726fb8ba1ec5c06", "sha256": "265c29b82f79c288c5d8da38f2850d9912b3f1a39739a12307d8279d1aec43cd"}, "downloads": -1, "filename": "channelpack-0.1.5.tar.gz", "has_sig": false, "md5_digest": "4c136d9668186cf1f726fb8ba1ec5c06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32763, "upload_time": "2014-10-15T18:29:03", "upload_time_iso_8601": "2014-10-15T18:29:03.073790Z", "url": "https://files.pythonhosted.org/packages/20/73/ea22c85f6972bd58af99039435681459408ccfccb85d94776590d09d99fb/channelpack-0.1.5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "43ef62fe5a6ba821083ecfdcbdbe7562", "sha256": "43bf4dd0c38b94da67e691dc25ff99a391039b273c174ee1c4ac350b83f81a12"}, "downloads": -1, "filename": "channelpack-0.2.0.tar.gz", "has_sig": false, "md5_digest": "43ef62fe5a6ba821083ecfdcbdbe7562", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37095, "upload_time": "2014-10-19T20:28:55", "upload_time_iso_8601": "2014-10-19T20:28:55.764815Z", "url": "https://files.pythonhosted.org/packages/fd/bf/371bb7803ab069d0a62cdb8eba22be031b582e81125ea84df025ceaee384/channelpack-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8fd612f47a170cf5da7b6130ff213fcc", "sha256": "b82db21839c5eaa89b38ec0ce8bbe46745d98d0799cbb708a6fe7d5653c70055"}, "downloads": -1, "filename": "channelpack-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8fd612f47a170cf5da7b6130ff213fcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37173, "upload_time": "2014-10-20T19:50:10", "upload_time_iso_8601": "2014-10-20T19:50:10.538387Z", "url": "https://files.pythonhosted.org/packages/be/8b/2743fc698b7f9ca4ab55e321d3eb24d60f0d6de84d63574f0ea206a769e0/channelpack-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "0fc426142a471062e140fd2c97dff7ff", "sha256": "49b3933791fe711309e0fb1cc0be9e72f6c53801cf7000a5de7d738c18b87c18"}, "downloads": -1, "filename": "channelpack-0.2.2.tar.gz", "has_sig": false, "md5_digest": "0fc426142a471062e140fd2c97dff7ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37345, "upload_time": "2014-11-04T21:03:34", "upload_time_iso_8601": "2014-11-04T21:03:34.315484Z", "url": "https://files.pythonhosted.org/packages/7b/53/2460a834eec39269629ae22b315a42af401e5a08caad0fed73c89e544ce0/channelpack-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8088574661860f611ac18c8c4b8c88ff", "sha256": "b215e7817141cceebfda95446f1e51d28cd499923de17892ac3d96daf4f14103"}, "downloads": -1, "filename": "channelpack-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8088574661860f611ac18c8c4b8c88ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39270, "upload_time": "2015-04-05T23:17:46", "upload_time_iso_8601": "2015-04-05T23:17:46.679498Z", "url": "https://files.pythonhosted.org/packages/89/09/ba3b6cb9f79e7c9237a4696ba618755ee87dbc6282f973f849fe7db872e6/channelpack-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "e7d92c7bb59cc08a85ef407688e17d73", "sha256": "505245e9d3eb08ea5ac969a82579fa2adbd3b260da331552f4501636d8c9d596"}, "downloads": -1, "filename": "channelpack-0.3.1.tar.gz", "has_sig": false, "md5_digest": "e7d92c7bb59cc08a85ef407688e17d73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39505, "upload_time": "2015-05-10T13:58:07", "upload_time_iso_8601": "2015-05-10T13:58:07.117732Z", "url": "https://files.pythonhosted.org/packages/51/41/775bc4524edc0a77ba4b751a5ab7ae5194838a1724ec47b285c530ade45f/channelpack-0.3.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca023a916a8c3d7cb67c9611dfcd3207", "sha256": "d6574c207879741e023b123ca1f89fad54e093619a783a89c2e87abf63c7db83"}, "downloads": -1, "filename": "channelpack-0.3.1.zip", "has_sig": false, "md5_digest": "ca023a916a8c3d7cb67c9611dfcd3207", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47105, "upload_time": "2015-05-10T21:55:00", "upload_time_iso_8601": "2015-05-10T21:55:00.917986Z", "url": "https://files.pythonhosted.org/packages/c9/80/a8f128070a677157f9c59cb05357dc466bdb817af1283205192e81f18b83/channelpack-0.3.1.zip", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "2a9b8ad87178b7034e570d99dd273f95", "sha256": "0ce22df019789b7a4c657b969859843850f5f8485fa56c7ecd7f296aca9810c6"}, "downloads": -1, "filename": "channelpack-0.3.2.tar.gz", "has_sig": false, "md5_digest": "2a9b8ad87178b7034e570d99dd273f95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39513, "upload_time": "2016-10-29T15:48:56", "upload_time_iso_8601": "2016-10-29T15:48:56.790183Z", "url": "https://files.pythonhosted.org/packages/53/f2/760137f8e4dc42d88506c3cbd9195d3ed17296770b277dbbbbb8cdf7d5ec/channelpack-0.3.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "16f56cfdfbc696b7a1556626ef07c1cc", "sha256": "6818485160a4f44283e1db741f8a9b4079be674a28ed17d92855d42d2870086d"}, "downloads": -1, "filename": "channelpack-0.3.2.zip", "has_sig": false, "md5_digest": "16f56cfdfbc696b7a1556626ef07c1cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47107, "upload_time": "2016-10-29T15:49:01", "upload_time_iso_8601": "2016-10-29T15:49:01.121174Z", "url": "https://files.pythonhosted.org/packages/73/70/1b3cf044cfe31ab084ac6eca21642246c9f872050bb67209671964d1fbe1/channelpack-0.3.2.zip", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "030692c9b2a16bff6f1fc5923a74f954", "sha256": "5e216da61971ad0b436cc59ee31f7a9303af4a79e3cce5b99331870dd6fbba61"}, "downloads": -1, "filename": "channelpack-0.4.0.tar.gz", "has_sig": false, "md5_digest": "030692c9b2a16bff6f1fc5923a74f954", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39606, "upload_time": "2017-08-18T21:35:09", "upload_time_iso_8601": "2017-08-18T21:35:09.126643Z", "url": "https://files.pythonhosted.org/packages/64/e6/21868b5336ea7635e5b01f6260448caeb5daf0cfc631e47f572cb05defa5/channelpack-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "030692c9b2a16bff6f1fc5923a74f954", "sha256": "5e216da61971ad0b436cc59ee31f7a9303af4a79e3cce5b99331870dd6fbba61"}, "downloads": -1, "filename": "channelpack-0.4.0.tar.gz", "has_sig": false, "md5_digest": "030692c9b2a16bff6f1fc5923a74f954", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39606, "upload_time": "2017-08-18T21:35:09", "upload_time_iso_8601": "2017-08-18T21:35:09.126643Z", "url": "https://files.pythonhosted.org/packages/64/e6/21868b5336ea7635e5b01f6260448caeb5daf0cfc631e47f572cb05defa5/channelpack-0.4.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:29 2020"}