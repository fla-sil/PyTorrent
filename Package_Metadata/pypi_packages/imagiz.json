{"info": {"author": "Jafar Mowlaei", "author_email": "jmowlaei@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Imagiz\nFast and none blocking live video streaming over network with OpenCV and (ZMQ or TCP).\n\n\n# Install\n```\npip3 install imagiz\n```\n\n# ZMQ Client\n\n```\nimport imagiz\nimport cv2\n\n\nclient=imagiz.Client(\"cc1\",server_ip=\"localhost\")\nvid=cv2.VideoCapture(0)\nencode_param = [int(cv2.IMWRITE_JPEG_QUALITY), 90]\n\nwhile True:\n    r,frame=vid.read()\n    if r:\n        r, image = cv2.imencode('.jpg', frame, encode_param)\n        client.send(image)\n    else:\n        break\n\n```\n\n# ZMQ Server\n```\nimport imagiz\nimport cv2\n\nserver=imagiz.Server()\nwhile True:\n    message=server.recive()\n    frame=cv2.imdecode(message.image,1)\n    cv2.imshow(\"\",frame)\n    cv2.waitKey(1)\n```\n# TCP Client\n```\nimport imagiz\nimport cv2\n\nvid=cv2.VideoCapture(0)\nclient=imagiz.TCP_Client(server_port=9990,client_name=\"cc1\")\nencode_param = [int(cv2.IMWRITE_JPEG_QUALITY), 90]\n\n\nwhile True:\n    r,frame=vid.read()\n    if r:\n        r,image=cv2.imencode('.jpg',frame, encode_param)\n        response=client.send(image)\n        print(response)\n\n```\n\n# TCP Server\n```\nimport imagiz\nimport cv2\n\nserver=imagiz.TCP_Server(9990)\nserver.start()\nwhile True:\n    message=server.receive()\n    frame=cv2.imdecode(mmessage.image,1)\n    cv2.imshow(\"\",frame)\n    cv2.waitKey(1)\n```\n\n\n\n# Client Options\n| Name | Description |\n| --- | --- |\n| `client_name` | Name of client |\n| `server_ip` | Ip of server default value is localhost  |\n| `server_port` | Port of server default value is 5555 |\n| `request_timeout` | how many milliseconds wait to resend image again |\n| `request_retries` | how many time retries to send an image before client exit  |\n| `generate_image_id` | image_id is unique and ordered id that you can use for save data on disk or db also it is show time of image sended by client  |\n| `time_between_retries` | On TCP client show time between retries  |\n\n# Server Options\n| Name | Description |\n| --- | --- |\n| `Port` | Port of server |\n| `listener` | Number of listening threads.default value is 10 |\n\n# Message Class\n| Name | Description |\n| --- | --- |\n| `image` | Byte of image |\n| `client_name` | Name of client |\n| `image_id` | If disable generate_image_id it will be 0  |\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jmowlaei/imagiz", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "imagiz", "package_url": "https://pypi.org/project/imagiz/", "platform": "", "project_url": "https://pypi.org/project/imagiz/", "project_urls": {"Homepage": "https://github.com/jmowlaei/imagiz"}, "release_url": "https://pypi.org/project/imagiz/0.5/", "requires_dist": ["zmq"], "requires_python": "", "summary": "Live video streaming over network with OpenCV and (ZMQ or TCP)", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Imagiz</h1>\n<p>Fast and none blocking live video streaming over network with OpenCV and (ZMQ or TCP).</p>\n<h1>Install</h1>\n<pre><code>pip3 install imagiz\n</code></pre>\n<h1>ZMQ Client</h1>\n<pre><code>import imagiz\nimport cv2\n\n\nclient=imagiz.Client(\"cc1\",server_ip=\"localhost\")\nvid=cv2.VideoCapture(0)\nencode_param = [int(cv2.IMWRITE_JPEG_QUALITY), 90]\n\nwhile True:\n    r,frame=vid.read()\n    if r:\n        r, image = cv2.imencode('.jpg', frame, encode_param)\n        client.send(image)\n    else:\n        break\n\n</code></pre>\n<h1>ZMQ Server</h1>\n<pre><code>import imagiz\nimport cv2\n\nserver=imagiz.Server()\nwhile True:\n    message=server.recive()\n    frame=cv2.imdecode(message.image,1)\n    cv2.imshow(\"\",frame)\n    cv2.waitKey(1)\n</code></pre>\n<h1>TCP Client</h1>\n<pre><code>import imagiz\nimport cv2\n\nvid=cv2.VideoCapture(0)\nclient=imagiz.TCP_Client(server_port=9990,client_name=\"cc1\")\nencode_param = [int(cv2.IMWRITE_JPEG_QUALITY), 90]\n\n\nwhile True:\n    r,frame=vid.read()\n    if r:\n        r,image=cv2.imencode('.jpg',frame, encode_param)\n        response=client.send(image)\n        print(response)\n\n</code></pre>\n<h1>TCP Server</h1>\n<pre><code>import imagiz\nimport cv2\n\nserver=imagiz.TCP_Server(9990)\nserver.start()\nwhile True:\n    message=server.receive()\n    frame=cv2.imdecode(mmessage.image,1)\n    cv2.imshow(\"\",frame)\n    cv2.waitKey(1)\n</code></pre>\n<h1>Client Options</h1>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>client_name</code></td>\n<td>Name of client</td>\n</tr>\n<tr>\n<td><code>server_ip</code></td>\n<td>Ip of server default value is localhost</td>\n</tr>\n<tr>\n<td><code>server_port</code></td>\n<td>Port of server default value is 5555</td>\n</tr>\n<tr>\n<td><code>request_timeout</code></td>\n<td>how many milliseconds wait to resend image again</td>\n</tr>\n<tr>\n<td><code>request_retries</code></td>\n<td>how many time retries to send an image before client exit</td>\n</tr>\n<tr>\n<td><code>generate_image_id</code></td>\n<td>image_id is unique and ordered id that you can use for save data on disk or db also it is show time of image sended by client</td>\n</tr>\n<tr>\n<td><code>time_between_retries</code></td>\n<td>On TCP client show time between retries</td>\n</tr></tbody></table>\n<h1>Server Options</h1>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Port</code></td>\n<td>Port of server</td>\n</tr>\n<tr>\n<td><code>listener</code></td>\n<td>Number of listening threads.default value is 10</td>\n</tr></tbody></table>\n<h1>Message Class</h1>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>image</code></td>\n<td>Byte of image</td>\n</tr>\n<tr>\n<td><code>client_name</code></td>\n<td>Name of client</td>\n</tr>\n<tr>\n<td><code>image_id</code></td>\n<td>If disable generate_image_id it will be 0</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6768084, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "0aa527b3fd81c1393cff2bb2134a103a", "sha256": "a59a71c5412417e51d0c6b088dfba37674135c61311e218924fe533905b14c82"}, "downloads": -1, "filename": "imagiz-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0aa527b3fd81c1393cff2bb2134a103a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3153, "upload_time": "2019-11-25T06:14:46", "upload_time_iso_8601": "2019-11-25T06:14:46.442787Z", "url": "https://files.pythonhosted.org/packages/d9/d3/94e4cc9535653a593f0196fc294adc719ca8c24f43ca10496b34ad2e4c17/imagiz-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b4ed70b2fa39e612a526a7c566533da", "sha256": "7d7d1c8d28fe27a3c71a1029b9df8c311143e231710c887cf4d326dc683a4c43"}, "downloads": -1, "filename": "imagiz-0.2.tar.gz", "has_sig": false, "md5_digest": "6b4ed70b2fa39e612a526a7c566533da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3153, "upload_time": "2019-11-25T06:14:49", "upload_time_iso_8601": "2019-11-25T06:14:49.373265Z", "url": "https://files.pythonhosted.org/packages/28/e7/8c953c9bf127a4d2363edc67acd0094982cebdf4ac168f8fa3deefff5e9d/imagiz-0.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "8095b3976fbd744396cc335695dfce21", "sha256": "839a7310be9024ecb8c4a3d598bd9b11266fa350dbc00470bd699703a107f2f8"}, "downloads": -1, "filename": "imagiz-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8095b3976fbd744396cc335695dfce21", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4043, "upload_time": "2020-01-05T11:49:45", "upload_time_iso_8601": "2020-01-05T11:49:45.754659Z", "url": "https://files.pythonhosted.org/packages/87/e1/927df93335bd76d845fa991cac885fd68f289c9d234dd9de183376e02b3e/imagiz-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af8d520fa7fc71ee82ec60501779376c", "sha256": "68aed7e11acd2eef5187074ca8075930c8c225e552adf5df6415dae952010366"}, "downloads": -1, "filename": "imagiz-0.4.tar.gz", "has_sig": false, "md5_digest": "af8d520fa7fc71ee82ec60501779376c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4038, "upload_time": "2020-01-05T11:49:47", "upload_time_iso_8601": "2020-01-05T11:49:47.438782Z", "url": "https://files.pythonhosted.org/packages/78/42/8dbab70b976e94ffd7a8acd0f05f4e16dea82b1417657216bb240f488fdb/imagiz-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "46ed60bb88778df21a2adad805c2c0ac", "sha256": "a6d5d01beda48cbfbdf5f67eb0dc8408c641ef5c4d8ded3a31e9019b39c8d9f1"}, "downloads": -1, "filename": "imagiz-0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "46ed60bb88778df21a2adad805c2c0ac", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4052, "upload_time": "2020-03-07T13:59:52", "upload_time_iso_8601": "2020-03-07T13:59:52.882776Z", "url": "https://files.pythonhosted.org/packages/ea/c3/b61bb285f096af74fac7e5988cee3e56de3c66df208544d97df76dc46cd4/imagiz-0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3d1d36bfc9fa224af8b7839217d9218", "sha256": "797dca55bef4d674c04837b7ac0bcd5eb2c324270bdc0896ecc051b595614649"}, "downloads": -1, "filename": "imagiz-0.5.tar.gz", "has_sig": false, "md5_digest": "b3d1d36bfc9fa224af8b7839217d9218", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4050, "upload_time": "2020-03-07T13:59:54", "upload_time_iso_8601": "2020-03-07T13:59:54.472661Z", "url": "https://files.pythonhosted.org/packages/5d/a5/1c12506481637f785568ee9981bdf3b5a4e6c87a347f91cc672f11932908/imagiz-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "46ed60bb88778df21a2adad805c2c0ac", "sha256": "a6d5d01beda48cbfbdf5f67eb0dc8408c641ef5c4d8ded3a31e9019b39c8d9f1"}, "downloads": -1, "filename": "imagiz-0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "46ed60bb88778df21a2adad805c2c0ac", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4052, "upload_time": "2020-03-07T13:59:52", "upload_time_iso_8601": "2020-03-07T13:59:52.882776Z", "url": "https://files.pythonhosted.org/packages/ea/c3/b61bb285f096af74fac7e5988cee3e56de3c66df208544d97df76dc46cd4/imagiz-0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3d1d36bfc9fa224af8b7839217d9218", "sha256": "797dca55bef4d674c04837b7ac0bcd5eb2c324270bdc0896ecc051b595614649"}, "downloads": -1, "filename": "imagiz-0.5.tar.gz", "has_sig": false, "md5_digest": "b3d1d36bfc9fa224af8b7839217d9218", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4050, "upload_time": "2020-03-07T13:59:54", "upload_time_iso_8601": "2020-03-07T13:59:54.472661Z", "url": "https://files.pythonhosted.org/packages/5d/a5/1c12506481637f785568ee9981bdf3b5a4e6c87a347f91cc672f11932908/imagiz-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:47 2020"}