{"info": {"author": "Magnus Holmgren; ported by R. Aldridge", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "[![Codacy Badge](https://api.codacy.com/project/badge/Grade/c9ae5f60829541d8b6b2e8962997425d)](https://www.codacy.com/app/aldridge.robert.james/XSteamPython?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=raldridge11/XSteamPython&amp;utm_campaign=Badge_Grade)\n\n[![Codacy Badge](https://api.codacy.com/project/badge/Coverage/c9ae5f60829541d8b6b2e8962997425d)](https://www.codacy.com/app/aldridge.robert.james/XSteamPython?utm_source=github.com&utm_medium=referral&utm_content=raldridge11/XSteamPython&utm_campaign=Badge_Coverage)\n\n[![Build Status](https://travis-ci.org/raldridge11/XSteamPython.svg?branch=master)](https://travis-ci.org/raldridge11/XSteamPython)\n\n# XSteamPython\nPort of [XSteam](https://sourceforge.net/projects/xsteam/) tables into Python originally released by Magnus Holmgren.\n\nXSteam provides steam and water properties according to [IAPWS release IF-97](http://www.iapws.org/relguide/IF97-Rev.pdf). The range of applicability is from 0-1000 bar and 0-2000 \u00b0C.\n\nSome transport properties (thermal conductivity and viscosity) are also available and based upon [IAPWS 1998](http://www.iapws.org/relguide/ThCond.pdf).\n\n## Installation\nTwo options are available. The first is to install from PyPI using pip\n```sh\npip install XSteamPython\n```\nOr by cloning and running\n```sh\npython setup.py install\n```\n## Requirements\nXSteamPython only requires that `SciPy` be installed.\n\nFor development, all dependencies are contained in `requirements.txt`.\n\n## Usage\n```python\n>>> import XSteamPython as stm\n>>> enthalpy=stm.h_pT(101.0, 300.0)\n>>> print(enthalpy)\n3074.515918340631\n>>> stm.switchUnits()\nUsing English units\n>>> enthalpy=stm.h_pT(14.7, 70.0)\n>>> print(enthalpy)\n38.11798524502647\n>>> dir(stm)\n['Boundaries', 'Constants', 'Convert', 'P_hs', 'Pr_pT', 'Pr_ph', 'Psat_T', 'Psat_s', 'Region1', 'Region2', 'Region3', 'Region4', 'Region5', 'Regions', 'T_hs', 'T_ph', 'T_ps', 'Tsat_p', 'Tsat_s', 'Viscosity', 'XSteamPython', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'cpL_T', 'cpL_p', 'cpV_T', 'cpV_p', 'cp_pT', 'cp_ph', 'cp_ps', 'cvL_T', 'cvL_p', 'cvV_T', 'cvV_p', 'cv_pT', 'cv_ph', 'cv_ps', 'englishUnits', 'hL_T', 'hL_p', 'hV_T', 'hV_p', 'h_Tx', 'h_pT', 'h_ps', 'h_px', 'kappa_pT', 'kappa_ph', 'math', 'my_pT', 'my_ph', 'my_ps', 'rhoL_T', 'rhoL_p', 'rhoV_T', 'rhoV_p', 'rho_pT', 'rho_ph', 'rho_ps', 'sL_T', 'sL_p', 'sV_T', 'sV_p', 's_pT', 's_ph', 'st_p', 'st_t', 'surfaceTension_T', 'switchUnits', 'tcL_T', 'tcL_p', 'tcV_T', 'tcV_p', 'tc_hs', 'tc_pT', 'tc_pTrho', 'tc_ph', 'uL_T', 'uL_p', 'uV_T', 'uV_p', 'u_pT', 'u_ph', 'u_ps', 'vL_T', 'vL_p', 'vV_T', 'vV_p', 'v_pT', 'v_ph', 'v_ps', 'vx_ph', 'vx_ps', 'wL_T', 'wL_p', 'wV_T', 'wV_p', 'w_pT', 'w_ph', 'w_ps', 'x_ph', 'x_ps']\n```\n\nNote that calling `stm.switchUnits()` changes from SI to English units and vice versa. Default is SI units.\n\n## Syntax\n\nThe syntax for function calling is first the wanted property, followed by an underscore followed by input property(ies). Example:\n```\nh_pT(101.0, 300.0)\n```\nThe example will return enthalpy given a pressure (101 kPa) and temperature (300 \u00b0C).\n\n|Property|Key|\n|---|---|\n|T| Temperature (\u00b0C or \u00b0F)|\n|p| Pressure (kPa or psi)|\n|h| Enthalpy (kJ/kg or btu/lb)|\n|v| Specific volume (m\\*\\*3/kg or ft\\*\\*3/lb)|\n|rho| Density (kg/m\\*\\*3 or lb/ft\\*\\*3)|\n|s| Specific entropy (kJ/(kg\u00b0C) or btu/(lb\u00b0F))|\n|u| Specific internal energy (kJ/kg or btu/lb)|\n|Cp| Specific heat capacity constant pressure (kJ/(kg\u00b0C) or btu/(lb\u00b0F))|\n|Cv| Specific heat capacity constant volume (kJ/(kg\u00b0C) or btu/(lb\u00b0F))|\n|w| Speed of sound (m/s or ft/s)|\n|my| Viscosity (N\\*s/m\\*\\*2 or lbm/ft/hr)|\n|Pr|Prandtl number|\n|kappa|Heat capacity ratio|\n|tc| Thermal Conductivity (W/(m\\*\u00b0C) or btu/(h\\*ft\\*\u00b0F))|\n|st| Surface Tension (N/m or lb/ft)|\n|x| Vapor fraction (dmnls)|\n|vx| Vapor Volume Fraction (dmnls)|\n\nSome functions can have a little extra after the wanted property\n|Tag|Key|\n|---|---|\n|L|Liquid phase|\n|V|Vapor phase|\n|sat|At saturation|\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/raldridge11/XSteamPython", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "XSteamPython", "package_url": "https://pypi.org/project/XSteamPython/", "platform": "", "project_url": "https://pypi.org/project/XSteamPython/", "project_urls": {"Homepage": "https://github.com/raldridge11/XSteamPython"}, "release_url": "https://pypi.org/project/XSteamPython/1.0.0/", "requires_dist": ["scipy (==1.2.1)"], "requires_python": ">=2.7, >=3.4.*", "summary": "Port of XSteam tables by Magnus Holmgren to python", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://www.codacy.com/app/aldridge.robert.james/XSteamPython?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=raldridge11/XSteamPython&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/44609492f117178d265304a4cefb9afb7e5405bf/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6339616535663630383239353431643862366232653839363239393734323564\"></a></p>\n<p><a href=\"https://www.codacy.com/app/aldridge.robert.james/XSteamPython?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=raldridge11/XSteamPython&amp;utm_campaign=Badge_Coverage\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5638cf2d1e121096705d9f16c4c1c97a4730825/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f436f7665726167652f6339616535663630383239353431643862366232653839363239393734323564\"></a></p>\n<p><a href=\"https://travis-ci.org/raldridge11/XSteamPython\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7170567fc6f828f5bd0e5ee4002900c084e523f5/68747470733a2f2f7472617669732d63692e6f72672f72616c64726964676531312f58537465616d507974686f6e2e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>XSteamPython</h1>\n<p>Port of <a href=\"https://sourceforge.net/projects/xsteam/\" rel=\"nofollow\">XSteam</a> tables into Python originally released by Magnus Holmgren.</p>\n<p>XSteam provides steam and water properties according to <a href=\"http://www.iapws.org/relguide/IF97-Rev.pdf\" rel=\"nofollow\">IAPWS release IF-97</a>. The range of applicability is from 0-1000 bar and 0-2000 \u00b0C.</p>\n<p>Some transport properties (thermal conductivity and viscosity) are also available and based upon <a href=\"http://www.iapws.org/relguide/ThCond.pdf\" rel=\"nofollow\">IAPWS 1998</a>.</p>\n<h2>Installation</h2>\n<p>Two options are available. The first is to install from PyPI using pip</p>\n<pre>pip install XSteamPython\n</pre>\n<p>Or by cloning and running</p>\n<pre>python setup.py install\n</pre>\n<h2>Requirements</h2>\n<p>XSteamPython only requires that <code>SciPy</code> be installed.</p>\n<p>For development, all dependencies are contained in <code>requirements.txt</code>.</p>\n<h2>Usage</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">XSteamPython</span> <span class=\"k\">as</span> <span class=\"nn\">stm</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">enthalpy</span><span class=\"o\">=</span><span class=\"n\">stm</span><span class=\"o\">.</span><span class=\"n\">h_pT</span><span class=\"p\">(</span><span class=\"mf\">101.0</span><span class=\"p\">,</span> <span class=\"mf\">300.0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">enthalpy</span><span class=\"p\">)</span>\n<span class=\"mf\">3074.515918340631</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stm</span><span class=\"o\">.</span><span class=\"n\">switchUnits</span><span class=\"p\">()</span>\n<span class=\"n\">Using</span> <span class=\"n\">English</span> <span class=\"n\">units</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">enthalpy</span><span class=\"o\">=</span><span class=\"n\">stm</span><span class=\"o\">.</span><span class=\"n\">h_pT</span><span class=\"p\">(</span><span class=\"mf\">14.7</span><span class=\"p\">,</span> <span class=\"mf\">70.0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">enthalpy</span><span class=\"p\">)</span>\n<span class=\"mf\">38.11798524502647</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"n\">stm</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">'Boundaries'</span><span class=\"p\">,</span> <span class=\"s1\">'Constants'</span><span class=\"p\">,</span> <span class=\"s1\">'Convert'</span><span class=\"p\">,</span> <span class=\"s1\">'P_hs'</span><span class=\"p\">,</span> <span class=\"s1\">'Pr_pT'</span><span class=\"p\">,</span> <span class=\"s1\">'Pr_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'Psat_T'</span><span class=\"p\">,</span> <span class=\"s1\">'Psat_s'</span><span class=\"p\">,</span> <span class=\"s1\">'Region1'</span><span class=\"p\">,</span> <span class=\"s1\">'Region2'</span><span class=\"p\">,</span> <span class=\"s1\">'Region3'</span><span class=\"p\">,</span> <span class=\"s1\">'Region4'</span><span class=\"p\">,</span> <span class=\"s1\">'Region5'</span><span class=\"p\">,</span> <span class=\"s1\">'Regions'</span><span class=\"p\">,</span> <span class=\"s1\">'T_hs'</span><span class=\"p\">,</span> <span class=\"s1\">'T_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'T_ps'</span><span class=\"p\">,</span> <span class=\"s1\">'Tsat_p'</span><span class=\"p\">,</span> <span class=\"s1\">'Tsat_s'</span><span class=\"p\">,</span> <span class=\"s1\">'Viscosity'</span><span class=\"p\">,</span> <span class=\"s1\">'XSteamPython'</span><span class=\"p\">,</span> <span class=\"s1\">'__builtins__'</span><span class=\"p\">,</span> <span class=\"s1\">'__cached__'</span><span class=\"p\">,</span> <span class=\"s1\">'__doc__'</span><span class=\"p\">,</span> <span class=\"s1\">'__file__'</span><span class=\"p\">,</span> <span class=\"s1\">'__loader__'</span><span class=\"p\">,</span> <span class=\"s1\">'__name__'</span><span class=\"p\">,</span> <span class=\"s1\">'__package__'</span><span class=\"p\">,</span> <span class=\"s1\">'__path__'</span><span class=\"p\">,</span> <span class=\"s1\">'__spec__'</span><span class=\"p\">,</span> <span class=\"s1\">'cpL_T'</span><span class=\"p\">,</span> <span class=\"s1\">'cpL_p'</span><span class=\"p\">,</span> <span class=\"s1\">'cpV_T'</span><span class=\"p\">,</span> <span class=\"s1\">'cpV_p'</span><span class=\"p\">,</span> <span class=\"s1\">'cp_pT'</span><span class=\"p\">,</span> <span class=\"s1\">'cp_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'cp_ps'</span><span class=\"p\">,</span> <span class=\"s1\">'cvL_T'</span><span class=\"p\">,</span> <span class=\"s1\">'cvL_p'</span><span class=\"p\">,</span> <span class=\"s1\">'cvV_T'</span><span class=\"p\">,</span> <span class=\"s1\">'cvV_p'</span><span class=\"p\">,</span> <span class=\"s1\">'cv_pT'</span><span class=\"p\">,</span> <span class=\"s1\">'cv_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'cv_ps'</span><span class=\"p\">,</span> <span class=\"s1\">'englishUnits'</span><span class=\"p\">,</span> <span class=\"s1\">'hL_T'</span><span class=\"p\">,</span> <span class=\"s1\">'hL_p'</span><span class=\"p\">,</span> <span class=\"s1\">'hV_T'</span><span class=\"p\">,</span> <span class=\"s1\">'hV_p'</span><span class=\"p\">,</span> <span class=\"s1\">'h_Tx'</span><span class=\"p\">,</span> <span class=\"s1\">'h_pT'</span><span class=\"p\">,</span> <span class=\"s1\">'h_ps'</span><span class=\"p\">,</span> <span class=\"s1\">'h_px'</span><span class=\"p\">,</span> <span class=\"s1\">'kappa_pT'</span><span class=\"p\">,</span> <span class=\"s1\">'kappa_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'math'</span><span class=\"p\">,</span> <span class=\"s1\">'my_pT'</span><span class=\"p\">,</span> <span class=\"s1\">'my_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'my_ps'</span><span class=\"p\">,</span> <span class=\"s1\">'rhoL_T'</span><span class=\"p\">,</span> <span class=\"s1\">'rhoL_p'</span><span class=\"p\">,</span> <span class=\"s1\">'rhoV_T'</span><span class=\"p\">,</span> <span class=\"s1\">'rhoV_p'</span><span class=\"p\">,</span> <span class=\"s1\">'rho_pT'</span><span class=\"p\">,</span> <span class=\"s1\">'rho_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'rho_ps'</span><span class=\"p\">,</span> <span class=\"s1\">'sL_T'</span><span class=\"p\">,</span> <span class=\"s1\">'sL_p'</span><span class=\"p\">,</span> <span class=\"s1\">'sV_T'</span><span class=\"p\">,</span> <span class=\"s1\">'sV_p'</span><span class=\"p\">,</span> <span class=\"s1\">'s_pT'</span><span class=\"p\">,</span> <span class=\"s1\">'s_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'st_p'</span><span class=\"p\">,</span> <span class=\"s1\">'st_t'</span><span class=\"p\">,</span> <span class=\"s1\">'surfaceTension_T'</span><span class=\"p\">,</span> <span class=\"s1\">'switchUnits'</span><span class=\"p\">,</span> <span class=\"s1\">'tcL_T'</span><span class=\"p\">,</span> <span class=\"s1\">'tcL_p'</span><span class=\"p\">,</span> <span class=\"s1\">'tcV_T'</span><span class=\"p\">,</span> <span class=\"s1\">'tcV_p'</span><span class=\"p\">,</span> <span class=\"s1\">'tc_hs'</span><span class=\"p\">,</span> <span class=\"s1\">'tc_pT'</span><span class=\"p\">,</span> <span class=\"s1\">'tc_pTrho'</span><span class=\"p\">,</span> <span class=\"s1\">'tc_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'uL_T'</span><span class=\"p\">,</span> <span class=\"s1\">'uL_p'</span><span class=\"p\">,</span> <span class=\"s1\">'uV_T'</span><span class=\"p\">,</span> <span class=\"s1\">'uV_p'</span><span class=\"p\">,</span> <span class=\"s1\">'u_pT'</span><span class=\"p\">,</span> <span class=\"s1\">'u_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'u_ps'</span><span class=\"p\">,</span> <span class=\"s1\">'vL_T'</span><span class=\"p\">,</span> <span class=\"s1\">'vL_p'</span><span class=\"p\">,</span> <span class=\"s1\">'vV_T'</span><span class=\"p\">,</span> <span class=\"s1\">'vV_p'</span><span class=\"p\">,</span> <span class=\"s1\">'v_pT'</span><span class=\"p\">,</span> <span class=\"s1\">'v_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'v_ps'</span><span class=\"p\">,</span> <span class=\"s1\">'vx_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'vx_ps'</span><span class=\"p\">,</span> <span class=\"s1\">'wL_T'</span><span class=\"p\">,</span> <span class=\"s1\">'wL_p'</span><span class=\"p\">,</span> <span class=\"s1\">'wV_T'</span><span class=\"p\">,</span> <span class=\"s1\">'wV_p'</span><span class=\"p\">,</span> <span class=\"s1\">'w_pT'</span><span class=\"p\">,</span> <span class=\"s1\">'w_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'w_ps'</span><span class=\"p\">,</span> <span class=\"s1\">'x_ph'</span><span class=\"p\">,</span> <span class=\"s1\">'x_ps'</span><span class=\"p\">]</span>\n</pre>\n<p>Note that calling <code>stm.switchUnits()</code> changes from SI to English units and vice versa. Default is SI units.</p>\n<h2>Syntax</h2>\n<p>The syntax for function calling is first the wanted property, followed by an underscore followed by input property(ies). Example:</p>\n<pre><code>h_pT(101.0, 300.0)\n</code></pre>\n<p>The example will return enthalpy given a pressure (101 kPa) and temperature (300 \u00b0C).</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Key</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>T</td>\n<td>Temperature (\u00b0C or \u00b0F)</td>\n</tr>\n<tr>\n<td>p</td>\n<td>Pressure (kPa or psi)</td>\n</tr>\n<tr>\n<td>h</td>\n<td>Enthalpy (kJ/kg or btu/lb)</td>\n</tr>\n<tr>\n<td>v</td>\n<td>Specific volume (m**3/kg or ft**3/lb)</td>\n</tr>\n<tr>\n<td>rho</td>\n<td>Density (kg/m**3 or lb/ft**3)</td>\n</tr>\n<tr>\n<td>s</td>\n<td>Specific entropy (kJ/(kg\u00b0C) or btu/(lb\u00b0F))</td>\n</tr>\n<tr>\n<td>u</td>\n<td>Specific internal energy (kJ/kg or btu/lb)</td>\n</tr>\n<tr>\n<td>Cp</td>\n<td>Specific heat capacity constant pressure (kJ/(kg\u00b0C) or btu/(lb\u00b0F))</td>\n</tr>\n<tr>\n<td>Cv</td>\n<td>Specific heat capacity constant volume (kJ/(kg\u00b0C) or btu/(lb\u00b0F))</td>\n</tr>\n<tr>\n<td>w</td>\n<td>Speed of sound (m/s or ft/s)</td>\n</tr>\n<tr>\n<td>my</td>\n<td>Viscosity (N*s/m**2 or lbm/ft/hr)</td>\n</tr>\n<tr>\n<td>Pr</td>\n<td>Prandtl number</td>\n</tr>\n<tr>\n<td>kappa</td>\n<td>Heat capacity ratio</td>\n</tr>\n<tr>\n<td>tc</td>\n<td>Thermal Conductivity (W/(m*\u00b0C) or btu/(h*ft*\u00b0F))</td>\n</tr>\n<tr>\n<td>st</td>\n<td>Surface Tension (N/m or lb/ft)</td>\n</tr>\n<tr>\n<td>x</td>\n<td>Vapor fraction (dmnls)</td>\n</tr>\n<tr>\n<td>vx</td>\n<td>Vapor Volume Fraction (dmnls)</td>\n</tr></tbody></table>\n<p>Some functions can have a little extra after the wanted property\n|Tag|Key|\n|---|---|\n|L|Liquid phase|\n|V|Vapor phase|\n|sat|At saturation|</p>\n\n          </div>"}, "last_serial": 4887506, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9ba5caf3ec50401120c710b3eeea0e3c", "sha256": "12f5f42909f5c36dc06597f00b1c2c93881830509092cd142ed2648849b6ce1c"}, "downloads": -1, "filename": "XSteamPython-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9ba5caf3ec50401120c710b3eeea0e3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, >=3.4.*", "size": 41403, "upload_time": "2019-03-02T03:47:37", "upload_time_iso_8601": "2019-03-02T03:47:37.685866Z", "url": "https://files.pythonhosted.org/packages/ab/73/467c52afd2a5c4389a2a4875b58ab601bed6f7621be44d4315a7c91c552c/XSteamPython-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2517fcf5746530d74b2e8ccda946f60", "sha256": "3538ed402215120f3034737b5d7745f0c570d8b239b377c0be591d24d98e0e4a"}, "downloads": -1, "filename": "XSteamPython-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b2517fcf5746530d74b2e8ccda946f60", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, >=3.4.*", "size": 33009, "upload_time": "2019-03-02T03:47:40", "upload_time_iso_8601": "2019-03-02T03:47:40.237380Z", "url": "https://files.pythonhosted.org/packages/a5/84/80a64b58ad0189c78fae36e5d758074ccf257e5b3c2799705a4fddd96b39/XSteamPython-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9ba5caf3ec50401120c710b3eeea0e3c", "sha256": "12f5f42909f5c36dc06597f00b1c2c93881830509092cd142ed2648849b6ce1c"}, "downloads": -1, "filename": "XSteamPython-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9ba5caf3ec50401120c710b3eeea0e3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, >=3.4.*", "size": 41403, "upload_time": "2019-03-02T03:47:37", "upload_time_iso_8601": "2019-03-02T03:47:37.685866Z", "url": "https://files.pythonhosted.org/packages/ab/73/467c52afd2a5c4389a2a4875b58ab601bed6f7621be44d4315a7c91c552c/XSteamPython-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2517fcf5746530d74b2e8ccda946f60", "sha256": "3538ed402215120f3034737b5d7745f0c570d8b239b377c0be591d24d98e0e4a"}, "downloads": -1, "filename": "XSteamPython-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b2517fcf5746530d74b2e8ccda946f60", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, >=3.4.*", "size": 33009, "upload_time": "2019-03-02T03:47:40", "upload_time_iso_8601": "2019-03-02T03:47:40.237380Z", "url": "https://files.pythonhosted.org/packages/a5/84/80a64b58ad0189c78fae36e5d758074ccf257e5b3c2799705a4fddd96b39/XSteamPython-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:24:19 2020"}