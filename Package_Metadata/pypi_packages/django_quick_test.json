{"info": {"author": "Martin Rusev", "author_email": "martinrusev@live.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=================\ndjango-quick-test\n=================\n\nDjango quick test is a custom nose based test runner that\nseparates testing and test related database manipulations.\n\n\nUsualy running this command instead of the default ``manage.py test``\nwill give you 10-15 times speed boost. So you will be able to run\nyour test suite in seconds instead of minutes.\n\n===============\n Installation\n===============\n\n\n1. Install the package with ``pip install django_quick_test`` or alternatively you can  \ndownload the tarball and run ``python setup.py install``\n\n2. Add ``quick_test`` to your INSTALLED_APPS list in settings.py\n   \n\n::\n\n\tINSTALLED_APPS = ('quick_test')\n\n\n\n3. Add your test database details in settings.py. \n\n::\n\n\tDATABASES = {\n\t\t'default':{\n\t\t\t'ENGINE':'',\n        },\n\t\t'test':{\n\t\t\t'ENGINE': '',\n\t\t\t'NAME': 'test_database',\n\t\t}\n\t}\t\t\n\n\n4. And finally replace the default Django test runner with this one. Again in settings.py:\n\n::\n\n\tTEST_RUNNER = 'quick_test.testrunner.NoseTestSuiteRunner'\n\n\n=========\n Usage \n=========\n\ndjango-quick-test assumes that you have created your test database manualy and \nyou have loaded the required test data(fixtures) \n\n\n\nCommands you have to run before using the command\n\n::\n\n\tpython manage.py syncdb --database=test\n\tpython manage.py migrate --database=test\n\n\nand finaly run your tests with\n\n::\n\n\tpython manage.py quick_test\n\n\n==================\n Additional notes\n==================\n\n\nIf you are using the default Django TestCase class\nyou have to ovewrite the ``_pre_setup`` method which is executed\nautomatically when you call the class. If you don't overwrite it\nthe ``quick_test`` command will still work, but your test data\nwill be lost. Even if you don't have any fixtures in the database\noverwriting this method will give you additional speed boost.\n\n::\n\n    from django.test import TestCase\n\n    class SimpleTest(TestCase)\n\n\t    def _pre_setup(self):\n\t\t    # this method flushes the database and installs \n\t\t    # the fixtures defined in the fixtures=[] list\n\t\t    # we are doing everything manually, so we don't\n\t\t    # really need it\n            \n            # these are the results I get with 1 test before\n            and after ovewriting the method\n            # Before -> Ran 1 test in 2.336s\n            # After -> Ran 1 test in 0.004s \n\t\t    pass\n\n\t    def test_basic_addition(self):\n\t\t    self.assertEqual(1 + 1, 2)\n \n\n\n===============\n Requirements\n===============\n\n\nDjango 1.2+\n\nnose", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/martinrusev/django-quick-test", "keywords": "django,tests,nose,", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django_quick_test", "package_url": "https://pypi.org/project/django_quick_test/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django_quick_test/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/martinrusev/django-quick-test"}, "release_url": "https://pypi.org/project/django_quick_test/0.3.1/", "requires_dist": null, "requires_python": null, "summary": "Django test runner that separates test database creation and test running", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-quick-test\">\n<h2>django-quick-test</h2>\n<p>Django quick test is a custom nose based test runner that\nseparates testing and test related database manipulations.</p>\n<p>Usualy running this command instead of the default <tt>manage.py test</tt>\nwill give you 10-15 times speed boost. So you will be able to run\nyour test suite in seconds instead of minutes.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>1. Install the package with <tt>pip install django_quick_test</tt> or alternatively you can\ndownload the tarball and run <tt>python setup.py install</tt></p>\n<ol>\n<li>Add <tt>quick_test</tt> to your INSTALLED_APPS list in settings.py</li>\n</ol>\n<pre>INSTALLED_APPS = ('quick_test')\n</pre>\n<ol>\n<li>Add your test database details in settings.py.</li>\n</ol>\n<pre>DATABASES = {\n        'default':{\n                'ENGINE':'',\n},\n        'test':{\n                'ENGINE': '',\n                'NAME': 'test_database',\n        }\n}\n</pre>\n<ol>\n<li>And finally replace the default Django test runner with this one. Again in settings.py:</li>\n</ol>\n<pre>TEST_RUNNER = 'quick_test.testrunner.NoseTestSuiteRunner'\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>django-quick-test assumes that you have created your test database manualy and\nyou have loaded the required test data(fixtures)</p>\n<p>Commands you have to run before using the command</p>\n<pre>python manage.py syncdb --database=test\npython manage.py migrate --database=test\n</pre>\n<p>and finaly run your tests with</p>\n<pre>python manage.py quick_test\n</pre>\n</div>\n<div id=\"additional-notes\">\n<h2>Additional notes</h2>\n<p>If you are using the default Django TestCase class\nyou have to ovewrite the <tt>_pre_setup</tt> method which is executed\nautomatically when you call the class. If you don\u2019t overwrite it\nthe <tt>quick_test</tt> command will still work, but your test data\nwill be lost. Even if you don\u2019t have any fixtures in the database\noverwriting this method will give you additional speed boost.</p>\n<pre>from django.test import TestCase\n\nclass SimpleTest(TestCase)\n\n        def _pre_setup(self):\n                # this method flushes the database and installs\n                # the fixtures defined in the fixtures=[] list\n                # we are doing everything manually, so we don't\n                # really need it\n\n        # these are the results I get with 1 test before\n        and after ovewriting the method\n        # Before -&gt; Ran 1 test in 2.336s\n        # After -&gt; Ran 1 test in 0.004s\n                pass\n\n        def test_basic_addition(self):\n                self.assertEqual(1 + 1, 2)\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Django 1.2+</p>\n<p>nose</p>\n</div>\n\n          </div>"}, "last_serial": 791129, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "e3d528cb04c40ea994db25ef88294982", "sha256": "003baa89a58fa85585cb51928f44adb9c9f4be293ee809b1439915617f76bccd"}, "downloads": -1, "filename": "django_quick_test-0.3.0.linux-i686.exe", "has_sig": false, "md5_digest": "e3d528cb04c40ea994db25ef88294982", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 70530, "upload_time": "2011-07-04T10:34:23", "upload_time_iso_8601": "2011-07-04T10:34:23.186597Z", "url": "https://files.pythonhosted.org/packages/be/1b/e7993a00037542f267620e1a16cfba4da05c4262737bb6dff5cf1b033962/django_quick_test-0.3.0.linux-i686.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "06e8ec4a915d0f11b583956aa5b49a2d", "sha256": "e17808111022b104e288a852a32c21e08eb3e935751dc6a9a52fb15f98f6b52c"}, "downloads": -1, "filename": "django_quick_test-0.3.0-py2.6.egg", "has_sig": false, "md5_digest": "06e8ec4a915d0f11b583956aa5b49a2d", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 10116, "upload_time": "2011-07-04T10:34:22", "upload_time_iso_8601": "2011-07-04T10:34:22.466998Z", "url": "https://files.pythonhosted.org/packages/43/fc/e8763e8e92c8466d897e2fccfab96942af030e169b9ae02b817ab8ac88e2/django_quick_test-0.3.0-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d6b4c803e65fcd6f9b73fdd8e520425", "sha256": "31ed83e405cc09ac671a56a7fa203fd35ab93af3abc6f747ba96250ce7be33ff"}, "downloads": -1, "filename": "django_quick_test-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9d6b4c803e65fcd6f9b73fdd8e520425", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5586, "upload_time": "2011-07-04T10:34:23", "upload_time_iso_8601": "2011-07-04T10:34:23.695595Z", "url": "https://files.pythonhosted.org/packages/0f/c4/2e7da11a403685526c422ccc6aef653702861484b17a4270cf86c0eff842/django_quick_test-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "2c19af8fbaf4ad199d46293b56d24e3e", "sha256": "e455393ff8af9c9591e339807b0fe3dd6f040122b1564a0808ddc100d4f87a85"}, "downloads": -1, "filename": "django_quick_test-0.3.1-py2.6.egg", "has_sig": false, "md5_digest": "2c19af8fbaf4ad199d46293b56d24e3e", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 10419, "upload_time": "2011-08-01T19:13:42", "upload_time_iso_8601": "2011-08-01T19:13:42.141038Z", "url": "https://files.pythonhosted.org/packages/f6/68/88e6efbe0cc9d14778333085c4a62bdc7d8548e47195e71fb17e796020d6/django_quick_test-0.3.1-py2.6.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2c19af8fbaf4ad199d46293b56d24e3e", "sha256": "e455393ff8af9c9591e339807b0fe3dd6f040122b1564a0808ddc100d4f87a85"}, "downloads": -1, "filename": "django_quick_test-0.3.1-py2.6.egg", "has_sig": false, "md5_digest": "2c19af8fbaf4ad199d46293b56d24e3e", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 10419, "upload_time": "2011-08-01T19:13:42", "upload_time_iso_8601": "2011-08-01T19:13:42.141038Z", "url": "https://files.pythonhosted.org/packages/f6/68/88e6efbe0cc9d14778333085c4a62bdc7d8548e47195e71fb17e796020d6/django_quick_test-0.3.1-py2.6.egg", "yanked": false}], "timestamp": "Fri May  8 00:54:27 2020"}