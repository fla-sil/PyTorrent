{"info": {"author": "Yandex Money", "author_email": "cms@yamoney.ru", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Natural Language :: Russian", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Yandex.Checkout Payout API Python Client Library\n\n[![Build Status](https://travis-ci.org/yandex-money/yandex-checkout-payout-sdk-python.svg?branch=master)](https://travis-ci.org/yandex-money/yandex-checkout-payout-sdk-python)\n[![Latest Stable Version](https://img.shields.io/pypi/v/yandex-checkout-payout.svg)](https://pypi.org/project/yandex-checkout-payout/)\n[![Total Downloads](https://img.shields.io/pypi/dm/yandex-checkout-payout.svg)](https://pypi.org/project/yandex-checkout-payout/)\n[![License](https://img.shields.io/pypi/l/yandex-checkout-payout.svg)](https://github.com/yandex-money/yandex-checkout-payout-sdk-python)\n\n[Russian](https://github.com/yandex-money/yandex-checkout-payout-sdk-python/blob/master/README.md) | English\n\nClient to work on [Mass Payment Protocol](https://kassa.yandex.ru/tech/payout/config.html)\n\n## Opportunities\nYou can with this SDK:\n1. [Generate a certificate](https://kassa.yandex.ru/tech/ssl.html)\u043f\u00bb\u0457 for interaction with Yandex.Checkout.\n2. [Transfer money](https://kassa.yandex.ru/tech/payout/payments.html) to individuals for wallets in Yandex.Money, mobile phone numbers, Bank cards and accounts (makeDeposition).\n3. [To test the possibility of transfer of remittances](https://kassa.yandex.ru/tech/payout/payments.html#payments__testdeposition) to wallets in Yandex.Money (testDeposition).\n4. [Keep track of the balance of payments](https://kassa.yandex.ru/tech/payout/balance-request.html) (balance).\n5. [Receive notifications](https://kassa.yandex.ru/tech/payout/notification-error.html) the unsuccessful status of transfers to a Bank account, card, or mobile phone (errorDepositionNotification).\n\n## Requirements\n* Python 3.5 (\u0420\u0451 \u0420\u0406\u0421\u2039\u0421\u20ac\u0420\u00b5)\n* pip\n\n## Installation\n### Under console using pip\n\n1. Install pip.\n2. In the console, run the following command:\n```bash\npip install yandex_checkout_payout\n```\n\n### Under console using easy_install\n1. Install easy_install.\n2. In the console, run the following command:\n```bash\neasy_install --upgrade yandex_checkout_payout\n```\n\n### Manually\n1. In the console, run the following command:\n```bash\nwget https://github.com/yandex-money/yandex-checkout-payout-sdk-python/archive/master.zip\ntar zxf yandex_checkout-master.tar.gz\ncd yandex_checkout-master\npython setup.py install\n```\n\n## Getting a certificate for authenticating requests\nTo interact with Yandex.The cashier must obtain a certificate. For this:\n1. Create a private key and a certificate request (CSR).\n2. Fill out the certificate application form.\n3. Exchange data with Yandex.Money.\n\n### Step 1. Creating a private key and CSR\n\n#### Using the SDK method\n1. Import classes to create CSR\n```python\nfrom yandex_checkout_payout.domain.models.organization import Organization\nfrom yandex_checkout_payout.payout import Payout\n```\n\n2. Create an instance of the `Organization` class with data for creating the request. All data must be entered in Latin.\n```python\norg = Organization({\n    \"org_name\": \"Yandex Money\",             # Organization Name (Latin)\n    \"common_name\": \"/business/yandexmoney\", # Common Name, for example the name of your organization; must start with \u0412\u00ab/business/\u0412\u00bb\n    \"email\": \"cms@yamoney.ru\"               # Email\n})\n```\n3. Create a CSR and a private key.\n```python\n# Specify the location where the files should be saved and the password for the private key (if necessary)\nPayout.get_csr(org, './files/output', '12345')\n```\nAs a result, the SDK will generate a private key, CSR, and a text file with an electronic signature (necessary for further steps).\n\n#### Via the console\n1. In the console, go to your project folder.\n```bash\ncd '<your project folder>'\n```\n\n2. Execute the command:\n```\nym-payout -getcsr\n```\n\n3. Enter data for the certificate, following the instructions on the screen. The text must be entered in Latin letters.\nAs a result, the SDK will generate a private key, CSR, and a text file with an electronic signature (necessary for further steps).\n\n### Step 2. Filling out the certificate application\n[Download the application](https://kassa.yandex.ru/docs/ssl_cert_form.doc) to the certificate, fill it out and print it out. Sign and seal the document. Scan.\n\n| **Parameter**                                    | **Description**                                                                                                                                                                                                                                                                                                                                                             |\n|:-------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| CN                                               | Must match the value of the Common Name parameter (eg, YOUR name). For example, */business/predpriyatie*.                                                                                                                                                                                                                                                                   |\n| Electronic signature of the certificate request  | The text view obtained in the previous step.                                                                                                                                                                                                                                                                                                                                |\n| Organization name in Latin letters               | Must match the value of the Organization Name parameter (eg, company) *Internet Widgits Pty Ltd*.                                                                                                                                                                                                                                                                           |\n| The reason for the request                       | Possible options: <ul><li>*initial* \u0432\u0402\u201d to get the first certificate;</li><li>*scheduled replacement* \u0432\u0402\u201d to replace a certificate that has expired;</li><li>*replacement of a compromised* \u0432\u0402\u201d to replace a previously issued certificate in the event of a security breach;</li><li>*adding a server* \u0432\u0402\u201d to use the new certificate on additional servers or services.</li></ul> |\n| Contact person (full name, phone number, e-mail) | Contact a specialist to contact you if you have any questions about the issued certificate.                                                                                                                                                                                                                                                                                 |\n\n### Step 3. Data exchange with Yandex.Money\nSend the certificate request file (request.csr) and a scan of the request by email to your Yandex Manager.Box office.\nIn response to the request, the Manager will send a file with the certificate within 2 business days. The certificate is valid for 1 year.\nPlace the received certificate on your server\n\n## Start of work\n1. Determine what types of payments you need and whether you want to check your balance.\n2. Import required classes\n```python\nfrom yandex_checkout_payout.domain.common.keychain import KeyChain\nfrom yandex_checkout_payout.configuration import Configuration\nfrom yandex_checkout_payout.payout import Payout\n```\n\n3. Import the classes you need to solve your problems.\n4. Create an instance of the `KeyChain` class by passing the path to the public key, the path to the private key, and, if necessary, the password for the private key.\n```python\nkeychain = KeyChain('publicCert.cer', 'privateCert.pem', 'password')\n```\n\n5. Create an instance of the `Client` class and pass the gateway ID from the [merchant profile](https://kassa.yandex.ru/my) Yandex.Money and instance of the `KeyChain` class.\n```python\nConfiguration.configure('000000', keychain)\n```\n\n6. Call the appropriate method. [More information about making payments](https://kassa.yandex.ru/tech/payout/config.html)\n\n#### Example of payment to a Bank account\n```python\n# Importing classes\nfrom yandex_checkout_payout.configuration import Configuration\nfrom yandex_checkout_payout.payout import Payout\nfrom yandex_checkout_payout.domain.common.keychain import KeyChain\nfrom yandex_checkout_payout.domain.models.recipients.bank_account_recipient import BankAccountRecipient\n\n# Creating a housekeeper and saving settings\nkeychain = KeyChain('./files/250000.cer', './files/privateKey.pem', '12345')\nConfiguration.configure(250000, keychain)\n\n# Getting the current balance\nbalance = Payout.get_balance()\n\n# The compilation of data on the beneficiary\nrecipient = BankAccountRecipient()\nrecipient.pof_offer_accepted = True\nrecipient.bank_name = 'Barclays'\nrecipient.bank_city = 'London'\nrecipient.bank_cor_account = '30101810400000000225'\nrecipient.customer_account = '40817810255030943620'\nrecipient.bank_bik = '042809679'\nrecipient.payment_purpose = 'Refund under the agreement 25-001, without VAT'\nrecipient.pdr_first_name = 'John'\nrecipient.pdr_last_name = 'Watson'\nrecipient.pdr_doc_number = '4002109067'\nrecipient.pdr_doc_issue_date = '1999-07-30'\nrecipient.pdr_address = 'Baker street, 221'\nrecipient.pdr_birth_date = '1987-05-24'\nrecipient.sms_phone_number = '79653457676'\n\n# Preparing a request to create a payout\nrequest = MakeDepositionRequest()\nrequest.agent_id = 250000\nrequest.client_order_id = '215d8da0-000f-50be-b000-0003308c89be'\nrequest.request_dt = '2020-03-04T15:39:45.456+03:00'\nrequest.payment_params = recipient\n\n# The carrying out of the payment\nresult = Payout.create_deposition(request)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yandex-money/yandex-checkout-payout-sdk-python", "keywords": "yandex,checkout,payout,sdk,python", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "yandex-checkout-payout", "package_url": "https://pypi.org/project/yandex-checkout-payout/", "platform": "", "project_url": "https://pypi.org/project/yandex-checkout-payout/", "project_urls": {"Homepage": "https://github.com/yandex-money/yandex-checkout-payout-sdk-python"}, "release_url": "https://pypi.org/project/yandex-checkout-payout/1.0.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Yandex.Checkout Payout API Python Client Library</h1>\n<p><a href=\"https://travis-ci.org/yandex-money/yandex-checkout-payout-sdk-python\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/939f539fab1e554bcf5683bbab8b619d47747da2/68747470733a2f2f7472617669732d63692e6f72672f79616e6465782d6d6f6e65792f79616e6465782d636865636b6f75742d7061796f75742d73646b2d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/yandex-checkout-payout/\" rel=\"nofollow\"><img alt=\"Latest Stable Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68b3b350555180090baee53ddf182c6bd38c13b8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f79616e6465782d636865636b6f75742d7061796f75742e737667\"></a>\n<a href=\"https://pypi.org/project/yandex-checkout-payout/\" rel=\"nofollow\"><img alt=\"Total Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e848b5ba1a176a0efebd7753641aaf9628f13b7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f79616e6465782d636865636b6f75742d7061796f75742e737667\"></a>\n<a href=\"https://github.com/yandex-money/yandex-checkout-payout-sdk-python\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/10142e6faae7c593c15d323b7dc402a57023f5f6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f79616e6465782d636865636b6f75742d7061796f75742e737667\"></a></p>\n<p><a href=\"https://github.com/yandex-money/yandex-checkout-payout-sdk-python/blob/master/README.md\" rel=\"nofollow\">Russian</a> | English</p>\n<p>Client to work on <a href=\"https://kassa.yandex.ru/tech/payout/config.html\" rel=\"nofollow\">Mass Payment Protocol</a></p>\n<h2>Opportunities</h2>\n<p>You can with this SDK:</p>\n<ol>\n<li><a href=\"https://kassa.yandex.ru/tech/ssl.html\" rel=\"nofollow\">Generate a certificate</a>\u043f\u00bb\u0457 for interaction with Yandex.Checkout.</li>\n<li><a href=\"https://kassa.yandex.ru/tech/payout/payments.html\" rel=\"nofollow\">Transfer money</a> to individuals for wallets in Yandex.Money, mobile phone numbers, Bank cards and accounts (makeDeposition).</li>\n<li><a href=\"https://kassa.yandex.ru/tech/payout/payments.html#payments__testdeposition\" rel=\"nofollow\">To test the possibility of transfer of remittances</a> to wallets in Yandex.Money (testDeposition).</li>\n<li><a href=\"https://kassa.yandex.ru/tech/payout/balance-request.html\" rel=\"nofollow\">Keep track of the balance of payments</a> (balance).</li>\n<li><a href=\"https://kassa.yandex.ru/tech/payout/notification-error.html\" rel=\"nofollow\">Receive notifications</a> the unsuccessful status of transfers to a Bank account, card, or mobile phone (errorDepositionNotification).</li>\n</ol>\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.5 (\u0420\u0451 \u0420\u0406\u0421\u2039\u0421\u20ac\u0420\u00b5)</li>\n<li>pip</li>\n</ul>\n<h2>Installation</h2>\n<h3>Under console using pip</h3>\n<ol>\n<li>Install pip.</li>\n<li>In the console, run the following command:</li>\n</ol>\n<pre>pip install yandex_checkout_payout\n</pre>\n<h3>Under console using easy_install</h3>\n<ol>\n<li>Install easy_install.</li>\n<li>In the console, run the following command:</li>\n</ol>\n<pre>easy_install --upgrade yandex_checkout_payout\n</pre>\n<h3>Manually</h3>\n<ol>\n<li>In the console, run the following command:</li>\n</ol>\n<pre>wget https://github.com/yandex-money/yandex-checkout-payout-sdk-python/archive/master.zip\ntar zxf yandex_checkout-master.tar.gz\n<span class=\"nb\">cd</span> yandex_checkout-master\npython setup.py install\n</pre>\n<h2>Getting a certificate for authenticating requests</h2>\n<p>To interact with Yandex.The cashier must obtain a certificate. For this:</p>\n<ol>\n<li>Create a private key and a certificate request (CSR).</li>\n<li>Fill out the certificate application form.</li>\n<li>Exchange data with Yandex.Money.</li>\n</ol>\n<h3>Step 1. Creating a private key and CSR</h3>\n<h4>Using the SDK method</h4>\n<ol>\n<li>Import classes to create CSR</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">yandex_checkout_payout.domain.models.organization</span> <span class=\"kn\">import</span> <span class=\"n\">Organization</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yandex_checkout_payout.payout</span> <span class=\"kn\">import</span> <span class=\"n\">Payout</span>\n</pre>\n<ol>\n<li>Create an instance of the <code>Organization</code> class with data for creating the request. All data must be entered in Latin.</li>\n</ol>\n<pre><span class=\"n\">org</span> <span class=\"o\">=</span> <span class=\"n\">Organization</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"org_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Yandex Money\"</span><span class=\"p\">,</span>             <span class=\"c1\"># Organization Name (Latin)</span>\n    <span class=\"s2\">\"common_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/business/yandexmoney\"</span><span class=\"p\">,</span> <span class=\"c1\"># Common Name, for example the name of your organization; must start with \u0412\u00ab/business/\u0412\u00bb</span>\n    <span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cms@yamoney.ru\"</span>               <span class=\"c1\"># Email</span>\n<span class=\"p\">})</span>\n</pre>\n<ol>\n<li>Create a CSR and a private key.</li>\n</ol>\n<pre><span class=\"c1\"># Specify the location where the files should be saved and the password for the private key (if necessary)</span>\n<span class=\"n\">Payout</span><span class=\"o\">.</span><span class=\"n\">get_csr</span><span class=\"p\">(</span><span class=\"n\">org</span><span class=\"p\">,</span> <span class=\"s1\">'./files/output'</span><span class=\"p\">,</span> <span class=\"s1\">'12345'</span><span class=\"p\">)</span>\n</pre>\n<p>As a result, the SDK will generate a private key, CSR, and a text file with an electronic signature (necessary for further steps).</p>\n<h4>Via the console</h4>\n<ol>\n<li>In the console, go to your project folder.</li>\n</ol>\n<pre><span class=\"nb\">cd</span> <span class=\"s1\">'&lt;your project folder&gt;'</span>\n</pre>\n<ol>\n<li>Execute the command:</li>\n</ol>\n<pre><code>ym-payout -getcsr\n</code></pre>\n<ol>\n<li>Enter data for the certificate, following the instructions on the screen. The text must be entered in Latin letters.\nAs a result, the SDK will generate a private key, CSR, and a text file with an electronic signature (necessary for further steps).</li>\n</ol>\n<h3>Step 2. Filling out the certificate application</h3>\n<p><a href=\"https://kassa.yandex.ru/docs/ssl_cert_form.doc\" rel=\"nofollow\">Download the application</a> to the certificate, fill it out and print it out. Sign and seal the document. Scan.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"><strong>Parameter</strong></th>\n<th align=\"left\"><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">CN</td>\n<td align=\"left\">Must match the value of the Common Name parameter (eg, YOUR name). For example, <em>/business/predpriyatie</em>.</td>\n</tr>\n<tr>\n<td align=\"left\">Electronic signature of the certificate request</td>\n<td align=\"left\">The text view obtained in the previous step.</td>\n</tr>\n<tr>\n<td align=\"left\">Organization name in Latin letters</td>\n<td align=\"left\">Must match the value of the Organization Name parameter (eg, company) <em>Internet Widgits Pty Ltd</em>.</td>\n</tr>\n<tr>\n<td align=\"left\">The reason for the request</td>\n<td align=\"left\">Possible options: <ul><li><em>initial</em> \u0432\u0402\u201d to get the first certificate;</li><li><em>scheduled replacement</em> \u0432\u0402\u201d to replace a certificate that has expired;</li><li><em>replacement of a compromised</em> \u0432\u0402\u201d to replace a previously issued certificate in the event of a security breach;</li><li><em>adding a server</em> \u0432\u0402\u201d to use the new certificate on additional servers or services.</li></ul></td>\n</tr>\n<tr>\n<td align=\"left\">Contact person (full name, phone number, e-mail)</td>\n<td align=\"left\">Contact a specialist to contact you if you have any questions about the issued certificate.</td>\n</tr></tbody></table>\n<h3>Step 3. Data exchange with Yandex.Money</h3>\n<p>Send the certificate request file (request.csr) and a scan of the request by email to your Yandex Manager.Box office.\nIn response to the request, the Manager will send a file with the certificate within 2 business days. The certificate is valid for 1 year.\nPlace the received certificate on your server</p>\n<h2>Start of work</h2>\n<ol>\n<li>Determine what types of payments you need and whether you want to check your balance.</li>\n<li>Import required classes</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">yandex_checkout_payout.domain.common.keychain</span> <span class=\"kn\">import</span> <span class=\"n\">KeyChain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yandex_checkout_payout.configuration</span> <span class=\"kn\">import</span> <span class=\"n\">Configuration</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yandex_checkout_payout.payout</span> <span class=\"kn\">import</span> <span class=\"n\">Payout</span>\n</pre>\n<ol>\n<li>Import the classes you need to solve your problems.</li>\n<li>Create an instance of the <code>KeyChain</code> class by passing the path to the public key, the path to the private key, and, if necessary, the password for the private key.</li>\n</ol>\n<pre><span class=\"n\">keychain</span> <span class=\"o\">=</span> <span class=\"n\">KeyChain</span><span class=\"p\">(</span><span class=\"s1\">'publicCert.cer'</span><span class=\"p\">,</span> <span class=\"s1\">'privateCert.pem'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Create an instance of the <code>Client</code> class and pass the gateway ID from the <a href=\"https://kassa.yandex.ru/my\" rel=\"nofollow\">merchant profile</a> Yandex.Money and instance of the <code>KeyChain</code> class.</li>\n</ol>\n<pre><span class=\"n\">Configuration</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"s1\">'000000'</span><span class=\"p\">,</span> <span class=\"n\">keychain</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Call the appropriate method. <a href=\"https://kassa.yandex.ru/tech/payout/config.html\" rel=\"nofollow\">More information about making payments</a></li>\n</ol>\n<h4>Example of payment to a Bank account</h4>\n<pre><span class=\"c1\"># Importing classes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yandex_checkout_payout.configuration</span> <span class=\"kn\">import</span> <span class=\"n\">Configuration</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yandex_checkout_payout.payout</span> <span class=\"kn\">import</span> <span class=\"n\">Payout</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yandex_checkout_payout.domain.common.keychain</span> <span class=\"kn\">import</span> <span class=\"n\">KeyChain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">yandex_checkout_payout.domain.models.recipients.bank_account_recipient</span> <span class=\"kn\">import</span> <span class=\"n\">BankAccountRecipient</span>\n\n<span class=\"c1\"># Creating a housekeeper and saving settings</span>\n<span class=\"n\">keychain</span> <span class=\"o\">=</span> <span class=\"n\">KeyChain</span><span class=\"p\">(</span><span class=\"s1\">'./files/250000.cer'</span><span class=\"p\">,</span> <span class=\"s1\">'./files/privateKey.pem'</span><span class=\"p\">,</span> <span class=\"s1\">'12345'</span><span class=\"p\">)</span>\n<span class=\"n\">Configuration</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"mi\">250000</span><span class=\"p\">,</span> <span class=\"n\">keychain</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Getting the current balance</span>\n<span class=\"n\">balance</span> <span class=\"o\">=</span> <span class=\"n\">Payout</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># The compilation of data on the beneficiary</span>\n<span class=\"n\">recipient</span> <span class=\"o\">=</span> <span class=\"n\">BankAccountRecipient</span><span class=\"p\">()</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">pof_offer_accepted</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">bank_name</span> <span class=\"o\">=</span> <span class=\"s1\">'Barclays'</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">bank_city</span> <span class=\"o\">=</span> <span class=\"s1\">'London'</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">bank_cor_account</span> <span class=\"o\">=</span> <span class=\"s1\">'30101810400000000225'</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">customer_account</span> <span class=\"o\">=</span> <span class=\"s1\">'40817810255030943620'</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">bank_bik</span> <span class=\"o\">=</span> <span class=\"s1\">'042809679'</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">payment_purpose</span> <span class=\"o\">=</span> <span class=\"s1\">'Refund under the agreement 25-001, without VAT'</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">pdr_first_name</span> <span class=\"o\">=</span> <span class=\"s1\">'John'</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">pdr_last_name</span> <span class=\"o\">=</span> <span class=\"s1\">'Watson'</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">pdr_doc_number</span> <span class=\"o\">=</span> <span class=\"s1\">'4002109067'</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">pdr_doc_issue_date</span> <span class=\"o\">=</span> <span class=\"s1\">'1999-07-30'</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">pdr_address</span> <span class=\"o\">=</span> <span class=\"s1\">'Baker street, 221'</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">pdr_birth_date</span> <span class=\"o\">=</span> <span class=\"s1\">'1987-05-24'</span>\n<span class=\"n\">recipient</span><span class=\"o\">.</span><span class=\"n\">sms_phone_number</span> <span class=\"o\">=</span> <span class=\"s1\">'79653457676'</span>\n\n<span class=\"c1\"># Preparing a request to create a payout</span>\n<span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">MakeDepositionRequest</span><span class=\"p\">()</span>\n<span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">agent_id</span> <span class=\"o\">=</span> <span class=\"mi\">250000</span>\n<span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">client_order_id</span> <span class=\"o\">=</span> <span class=\"s1\">'215d8da0-000f-50be-b000-0003308c89be'</span>\n<span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">request_dt</span> <span class=\"o\">=</span> <span class=\"s1\">'2020-03-04T15:39:45.456+03:00'</span>\n<span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">payment_params</span> <span class=\"o\">=</span> <span class=\"n\">recipient</span>\n\n<span class=\"c1\"># The carrying out of the payment</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">Payout</span><span class=\"o\">.</span><span class=\"n\">create_deposition</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6963561, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "234be609f12eaaad5b2fa6ef5cef1ed0", "sha256": "92e1dff94d84a3722b1d770e394e463535ffee789388222b418de1222684f1be"}, "downloads": -1, "filename": "yandex_checkout_payout-1.0.0.tar.gz", "has_sig": false, "md5_digest": "234be609f12eaaad5b2fa6ef5cef1ed0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 32753, "upload_time": "2020-04-06T15:50:28", "upload_time_iso_8601": "2020-04-06T15:50:28.331102Z", "url": "https://files.pythonhosted.org/packages/1b/b8/1f94b784758908e64e6499f2fd62326eecc1dc38d0ab30594ff47d1f96e5/yandex_checkout_payout-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "9c39a499e38a6e8e30ea6c299168b651", "sha256": "707d99786a313a61a180d60a120c1dafe527d5afc4cca13d03c3d8fa2791a4b4"}, "downloads": -1, "filename": "yandex-checkout-payout-1.0.1.tar.gz", "has_sig": false, "md5_digest": "9c39a499e38a6e8e30ea6c299168b651", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 32824, "upload_time": "2020-04-06T18:27:57", "upload_time_iso_8601": "2020-04-06T18:27:57.917289Z", "url": "https://files.pythonhosted.org/packages/0a/02/91bd0367bb1ee0d2e2ebb18ccbd227a34b00051785735d3de6a187161155/yandex-checkout-payout-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c39a499e38a6e8e30ea6c299168b651", "sha256": "707d99786a313a61a180d60a120c1dafe527d5afc4cca13d03c3d8fa2791a4b4"}, "downloads": -1, "filename": "yandex-checkout-payout-1.0.1.tar.gz", "has_sig": false, "md5_digest": "9c39a499e38a6e8e30ea6c299168b651", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 32824, "upload_time": "2020-04-06T18:27:57", "upload_time_iso_8601": "2020-04-06T18:27:57.917289Z", "url": "https://files.pythonhosted.org/packages/0a/02/91bd0367bb1ee0d2e2ebb18ccbd227a34b00051785735d3de6a187161155/yandex-checkout-payout-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:23:13 2020"}