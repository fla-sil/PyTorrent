{"info": {"author": "UNKNOWN", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "django-database-storage\n=======================\n\nThis is a utility for Django that implements the Django Storage API (for\nstoring FileFields, ImageFields, etc.) and stores the contents of the files in\nyour Django database instead of on the filesystem.\n\nThis is mainly intended to be an easy-to-use way to store file attachments and\nget rid of the pain of managing filesystem access at run time, and the\ndeployment issues that come with it.  If your file attachment needs are\nsimple, this will generally be a quick way to get your app working.\n\nFeatures:\n\n* Store any file in any database supported by Django.\n* Simplify deployment and data management: No need to keep track of file\n  attachments when migrating data from one server to another, since files live\n  in the database.\n\nLimitations:\n\n* Django does not support binary fields (issue #2417) and as of this writing,\n  expects queries to always return unicode data (issue #5135).  As a result,\n  this library uses base64 encoding to make binary data safe for the database,\n  which inflates data size by about 33%.\n* Databases are not always built with large file storage in mind (unlike\n  filesystems).  As such, this is based on the assumption that files are\n  \"reasonably\" sized, meaning well under 1MB.  Files are entirely loaded into\n  RAM during requests. Your mileage may vary.\n* No performance guarantees whatsoever.  The idea is that these are small\n  image attachments for a blog or similar, not that you are hosting a Youtube\n  clone in your Django database.\n\nGetting Started\n---------------\n\n1. Install (pip install django-database-storage)\n2. Read the help:\n\n    $ ./manage.py shell\n    ...\n    >>> from database_storage import DatabaseStorage\n    >>> help(DatabaseStorage)\n\nLicense and Copyright\n---------------------\n\nLicense: BSD\n\nOriginally derived from this snippet, although almost entirely rewritten for\nbetter robustness and clarity:\n\n  http://djangosnippets.org/snippets/1305/\n\nCopyright 2011 Mike Mueller, mike@subfocal.net.\nOriginal copyright 2009 (c) GameKeeper Gambling Ltd, Ivanov E", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-database-storage", "package_url": "https://pypi.org/project/django-database-storage/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-database-storage/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/django-database-storage/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a utility for Django that implements the Django Storage API (for\nstoring FileFields, ImageFields, etc.) and stores the contents of the files in\nyour Django database instead of on the filesystem.</p>\n<p>This is mainly intended to be an easy-to-use way to store file attachments and\nget rid of the pain of managing filesystem access at run time, and the\ndeployment issues that come with it.  If your file attachment needs are\nsimple, this will generally be a quick way to get your app working.</p>\n<p>Features:</p>\n<ul>\n<li>Store any file in any database supported by Django.</li>\n<li>Simplify deployment and data management: No need to keep track of file\nattachments when migrating data from one server to another, since files live\nin the database.</li>\n</ul>\n<p>Limitations:</p>\n<ul>\n<li>Django does not support binary fields (issue #2417) and as of this writing,\nexpects queries to always return unicode data (issue #5135).  As a result,\nthis library uses base64 encoding to make binary data safe for the database,\nwhich inflates data size by about 33%.</li>\n<li>Databases are not always built with large file storage in mind (unlike\nfilesystems).  As such, this is based on the assumption that files are\n\u201creasonably\u201d sized, meaning well under 1MB.  Files are entirely loaded into\nRAM during requests. Your mileage may vary.</li>\n<li>No performance guarantees whatsoever.  The idea is that these are small\nimage attachments for a blog or similar, not that you are hosting a Youtube\nclone in your Django database.</li>\n</ul>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<ol>\n<li><p>Install (pip install django-database-storage)</p>\n</li>\n<li><p>Read the help:</p>\n<blockquote>\n<p>$ ./manage.py shell\n\u2026\n&gt;&gt;&gt; from database_storage import DatabaseStorage\n&gt;&gt;&gt; help(DatabaseStorage)</p>\n</blockquote>\n</li>\n</ol>\n</div>\n<div id=\"license-and-copyright\">\n<h2>License and Copyright</h2>\n<p>License: BSD</p>\n<p>Originally derived from this snippet, although almost entirely rewritten for\nbetter robustness and clarity:</p>\n<blockquote>\n<a href=\"http://djangosnippets.org/snippets/1305/\" rel=\"nofollow\">http://djangosnippets.org/snippets/1305/</a></blockquote>\n<p>Copyright 2011 Mike Mueller, <a href=\"mailto:mike%40subfocal.net\">mike<span>@</span>subfocal<span>.</span>net</a>.\nOriginal copyright 2009 (c) GameKeeper Gambling Ltd, Ivanov E</p>\n</div>\n\n          </div>"}, "last_serial": 789424, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "68a23ebc4ed7acee87b80e2b1fa9a0f8", "sha256": "31da2cb36b81c936235811d2f77a86dea4f227d6a4c236ca842ac19efa04408d"}, "downloads": -1, "filename": "django-database-storage-0.1.0.tar.gz", "has_sig": false, "md5_digest": "68a23ebc4ed7acee87b80e2b1fa9a0f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4887, "upload_time": "2011-10-29T12:51:32", "upload_time_iso_8601": "2011-10-29T12:51:32.774309Z", "url": "https://files.pythonhosted.org/packages/02/07/fb5f5c249ae609cf674776377c27f68da5cf41fd4a0806f6ff75ea949455/django-database-storage-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ae30616b294d1e59ba6383e934372f0f", "sha256": "0641990c94e3ff8e01059240aa9b15757eefc74cfa9a64f2de734d9abf5934e7"}, "downloads": -1, "filename": "django-database-storage-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ae30616b294d1e59ba6383e934372f0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5097, "upload_time": "2011-10-29T13:10:26", "upload_time_iso_8601": "2011-10-29T13:10:26.768542Z", "url": "https://files.pythonhosted.org/packages/4d/30/c06341545cb5a944c6bfc7e13de977dbd3d0d901c2427f9fd1dae45e71f6/django-database-storage-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "03d97880ee664372f29094fb2d98368c", "sha256": "9e932cd08df7fc26b714adc08fa273b99c978dcdf2788610ec554335e369be50"}, "downloads": -1, "filename": "django-database-storage-0.1.2.tar.gz", "has_sig": false, "md5_digest": "03d97880ee664372f29094fb2d98368c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5112, "upload_time": "2012-05-24T09:27:53", "upload_time_iso_8601": "2012-05-24T09:27:53.898562Z", "url": "https://files.pythonhosted.org/packages/b1/85/d797477e5ac6a06097416f13d3ae28161b8bccd694cdc8ab60e28b4b86fd/django-database-storage-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03d97880ee664372f29094fb2d98368c", "sha256": "9e932cd08df7fc26b714adc08fa273b99c978dcdf2788610ec554335e369be50"}, "downloads": -1, "filename": "django-database-storage-0.1.2.tar.gz", "has_sig": false, "md5_digest": "03d97880ee664372f29094fb2d98368c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5112, "upload_time": "2012-05-24T09:27:53", "upload_time_iso_8601": "2012-05-24T09:27:53.898562Z", "url": "https://files.pythonhosted.org/packages/b1/85/d797477e5ac6a06097416f13d3ae28161b8bccd694cdc8ab60e28b4b86fd/django-database-storage-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:42 2020"}