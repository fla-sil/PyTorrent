{"info": {"author": "Ramon Bartl", "author_email": "rb@nexiles.de", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\n============\n\n**Makes Plone File Uploads easy**\n\nMultifileupload for Plone using uploadify_\n\n.. _uploadify: http://www.uploadify.com\n\n\nPlone integration\n*****************\n\n``Upload`` folder tab action is install with default profile. You can install\nit via portal_quickinstaller or via Addons section in control panel.\n\n\nConfiguration\n*************\n\nThe following settings can be done in the site_properties.\n(please use **string** properties only!):\n\n  - ul_auto_upload -- true/false (default: false)\n\n    *Set to true if you would like the files to be uploaded when they are\n    selected.*\n\n  - ul_allow_multi -- true/false (default: true)\n\n    *Set to true if you want to allow multiple file uploads.*\n\n  - ul_sim_upload_limit -- number 1-n (default: 4)\n\n    *A limit to the number of simultaneous uploads you would like to allow.*\n\n  - ul_queue_size_limit -- number 1-n (default: 999)\n\n    *A limit to the number of files you can select to upload in one go.*\n\n  - ul_size_limit -- size in bytes (default: empty)\n\n    *A number representing the limit in bytes for each upload.*\n\n  - ul_file_description -- text (default: empty)\n\n    *The text that will appear in the file type drop down at the bottom of the\n    browse dialog box.*\n\n  - ul_file_extensions -- list of extensions (default: \\*.\\*;)\n\n    *A list of file extensions you would like to allow for upload.  Format like\n    \\*.ext1;\\*.ext2;\\*.ext3. FileDesc is required when using this option.*\n\n  - ul_button_text -- text (default: BROWSE)\n\n    *The text you would like to appear on the default button.*\n\n  - ul_button_image -- path to image (default: empty)\n\n    *The path to the image you will be using for the browse button.\n    NOTE: If you are using a **different sized button image** you have to set\n    ul_height and ul_width otherwise your ul_button_image will be stretched to\n    the defaults (110x30)*\n\n  - ul_hide_button -- true/false (default: false)\n\n    *Set to true if you want to hide the button image.*\n\n  - ul_script_access -- always/sameDomain (default: sameDomain)\n\n    *The access mode for scripts in the flash file.  If you are testing locally, set to `always`.*\n\n  - ul_width -- number (default: 110)\n\n    *The ul_width value which should be set when using a different sized\n    ul_button_image*\n\n  - ul_height -- number (default: 30)\n\n    *The ul_height value which should be set when using a different sized\n    ul_button_image*\n\n  - ul_scale_image_size -- x,y\n\n    *These two values define the max x,y size in pixels of the image. Scales\n    an image down to at most ul_scale_image_size size preserving aspect ratio.\n    Example: 800,600 to set a maximum size of 800x600 pixels*\n\n  - ul_content_field -- Contenttype.field\n\n    *The uploaded file is included into the specific field from the specific Contenttype\n    Example: File.file it uploads to field file from the contenttype File*\n\n\n\nAdding a custom File Mutator Utility\n************************************\n\nIf you want to so some special handling for uploaded files *before* they get\ncreated in the portal, you can simply register a new utility providing the\nIFileMutator Interface.\n\nYour utility will be called with **file_name, file_data, content_type** just\nbefore the content will be created in the portal.\n\n.. sidebar:: Parameters\n\n    **file_name**::\n\n        type: str\n\n        example: my-image.jpg\n\n    **file_data**::\n\n        type: <ZPublisher.HTTPRequest.FileUpload instance at -...>\n\n        can be used just like a file.\n\n    **content_type**::\n\n        type: str\n\n        example: 'image/jpeg'\n\n\nExample\n-------\n\nA simple utility which adds a \"photo-\" prefix to image filenames\n\n\nconfigure.zcml::\n\n    <!-- An Utility to give images an \"photo-\" prefix -->\n    <utility component=\".utility.prefix_image_filename\"\n             name=\"prefix-image-filename\"/>\n\n\nutility.py::\n\n    from zope import interface\n\n    def prefix_image_filename(file_name, file_data, content_type):\n        \"\"\" Prefix all images with 'photo-<filename>'\n        \"\"\"\n        # we only handle image files\n        if not content_type.startswith(\"image\"):\n            return (file_name, file_data, content_type)\n\n        if not file_name.startswith(\"photo\"):\n            file_name = \"-\".join([\"photo\", file_name])\n        return (file_name, file_data, content_type)\n\n\n    interface.directlyProvides(prefix_image_filename,\n                               IFileMutator)\n\n\n.. note::\n\n    Your utility has to return a tuple of::\n\n        (file_name, file_data, content_type)\n\n\nCustomization for specific BrowserLayer\n***************************************\n\nIf you have your own skin installed which is based on it's own BrowserLayer\n(by default IThemeSpecific) and want to customize the look and feel of\ncollective.uploadify's you could override the upload view and/or the upload\ninitialize callback view\n\n - Customize view template::\n\n     <configure\n         xmlns=\"http://namespaces.zope.org/zope\"\n         xmlns:browser=\"http://namespaces.zope.org/browser\">\n\n         ...\n\n         <!-- Customize collective.uploadify upload template -->\n         <browser:page\n             for=\"collective.uploadify.browser.interfaces.IUploadingCapable\"\n             name=\"upload\"\n             template=\"templates/upload.pt\"\n             permission=\"cmf.AddPortalContent\"\n             layer=\".interfaces.IThemeSpecific\"\n             />\n\n     </configure>\n\n - Customize initialize template::\n\n    from zope.i18n import translate\n    from zope.component import getMultiAdapter\n    from collective.uploadify.browser.upload import UploadInitalize\n    from my.product import MyMessageFactory as _\n\n\n    class MyCustomUploadInitalize(UploadInitalize):\n        \"\"\" Initialize uploadify js\n        \"\"\"\n\n        def upload_settings(self):\n\n            portal_state = getMultiAdapter(\n                (self.context, self.request), name=\"plone_portal_state\")\n\n            settings = super(MyCustomUploadInitalize, self).upload_settings()\n            settings.update(dict(\n                ul_height = 26,\n                ul_width = 105,\n                ul_button_text = translate(_('Choose images'), target_language= \\\n                                           self.request.get('LANGUAGE', 'de')),\n                ul_button_image = portal_state.navigation_root_url() + \\\n                    '/button_upload.png',\n            ))\n\n            return settings\n\n   Don't forget to register the new upload initialize view for your\n   themespecific browserlayer by using::\n\n     <configure\n          xmlns=\"http://namespaces.zope.org/zope\"\n          xmlns:browser=\"http://namespaces.zope.org/browser\">\n\n        ...\n\n         <browser:page\n             for=\"*\"\n             name=\"upload_initialize\"\n             class=\".uploadify.MyCustomUploadInitalize\"\n             permission=\"cmf.AddPortalContent\"\n             layer=\".interfaces.IThemeSpecific\"\n             />\n\n     </configure>\n\ncollective.uploadify Installation\n*********************************\n\nTo install collective.uploadify into the global Python environment (or a workingenv),\nusing a traditional Zope 2 instance, you can do this:\n\n* When you're reading this you have probably already run\n  ``easy_install collective.uploadify``. Find out how to install setuptools\n  (and EasyInstall) here:\n  http://peak.telecommunity.com/DevCenter/EasyInstall\n\n* If you are using Zope 2.9 (not 2.10), get `pythonproducts`_ and install it\n  via::\n\n    python setup.py install --home /path/to/instance\n\ninto your Zope instance.\n\n* Create a file called ``collective.uploadify-configure.zcml`` in the\n  ``/path/to/instance/etc/package-includes`` directory.  The file\n  should only contain this::\n\n    <include package=\"collective.uploadify\" />\n\n.. _pythonproducts: http://plone.org/products/pythonproducts\n\n\nAlternatively, if you are using zc.buildout and the plone.recipe.zope2instance\nrecipe to manage your project, you can do this:\n\n* Add ``collective.uploadify`` to the list of eggs and zcml to install, e.g.::\n\n    [buildout]\n    ...\n    eggs =\n        ...\n        collective.uploadify\n\n    zcml =\n        ...\n        collective.uploadify\n\n* Re-run buildout, e.g. with:\n\n    $ ./bin/buildout\n\nChangelog\n*********\n\n1.2 (2013-05-11)\n----------------\n\n* make compatible with dexterity (plone.app.contenttypes)\n  [pbauer]\n\n* use IUserPreferredURLNormalizer to set id's\n  [pbauer]\n\n\n1.1 - 2012-10-11\n----------------\n\n* moved to GitHub\n  [ramonski]\n\n* Plone 4.3 compatibility\n  [alert]\n\n* added italian translation.\n  [keul]\n\n* cleanup egg format, removing bad zopeskel elements\n  [keul]\n\n* added default genericsetup profile which adds folder tab for on each folder.\n  [garbas]\n\n1.0 - 2011-05-05\n----------------\n\n* fixed the loss of File Extensions for Plone > 3.3.5 with IDNormalizer.\n  Changed to use the IFileNameNormalizer Utility [jakke, ramonski]\n* added dutch translation [spereverde]\n\n1.0rc5 - 2011-04-04\n-------------------\n\n* Support for different contenttypes [thor27]\n* added basque translation [erral]\n* added spain translation [macagua]\n\n1.0rc4 - 2011-01-31\n-------------------\n\n* Added German translations [fRiSi]\n\n* Added Chinese (Taiwan)  translations [marr]\n\n* Updated documentation to show Upload action on default\n  pages too [fRiSi]\n\n1.0rc3 - 2010-09-18\n-------------------\n\n* Fire Archetypes ObjectInitializedEvent for uploaded content.\n  [hannosch]\n\n* Corrected ``i18n:domain`` in documented action and include its messages into\n  the pot file.\n  [hannosch]\n\n* Added a ``z3c.autoinclude`` entry point to avoid the need for a ZCML slug in\n  Plone 3.3 and later.\n  [hannosch]\n\n* changed permissions to cmf.AddPortalContent\n  this fixes http://plone.org/products/collective.uploadify/issues/13\n  [ramonski]\n\n* mimetypes.guess_type(file_name) returns now an empty string if the type\n  could not be guessed. This fixes an issue with the scale_image_size utility\n  [ramonski]\n\n* documentation updated\n  [ramonski]\n\n1.0rc2 - 2010-08-03\n-------------------\n\n* Interface \"IFileMutator\" introduced -- utilities which provide this\n  interface can do some file mutations on the uploaded file *before* it get\n  created as an content type\n  [ramonski]\n\n* utility scale_image_size registered -- this utility operates on images an\n  can scale down the image size using PIL preserving the aspect ration from\n  the input file\n  [ramonski]\n\n* id chooser gets now called *after* the thread lock. This should fix #8\n  [ramonski]\n\n* added adapter for cStringIO.OutputType -> IBlobbable to be compatible with\n  plone.app.blob. This adapter gets only registered when plone.app.blob is\n  istalled.\n  [ramonski]\n\n* use folder_url and remove is_folderish() and wf-state condition\n  to make upload action show up on private folders or\n  folders having a default page too\n  (fixes http://plone.org/products/collective.uploadify/issues/12)\n  [fRiSi]\n\n* i18n added + danish translation\n  [stonor]\n\n1.0rc1 - 2010-04-25\n-------------------\n\n* renamed resource swfobject.js to uploadify.swfobject.js.\n  This fixes the name clash with quintagroup.portlet.cumulus\n  [ramonski]\n\n* Added some basic tests to the package\n  [ramonski]\n\n* Added queue size to the settings in UploadInitialize flash response to\n  give users the possibility to customize their upload queue size.\n  [zupo]\n\n* Documentation updates. Added new section about customize uploadify's upload\n  view and upload initialize view templates.\n  [saily]\n\n* Added height and width to the settings in UploadInitialize flash response to\n  give users the possibility to customize their uploadbuttons.\n  [saily]\n\n* #9 fire ObjectModifiedEvent after upload of each item.\n  (fixes http://plone.org/products/collective.uploadify/issues/9)\n  [saily]\n\n0.10 - 2010-03-16\n-----------------\n\n* #5 play well with plone4's sunburst theme\n  (fixes http://plone.org/products/collective.uploadify/issues/5)\n  [fRiSi]\n\n* #7 reindex objects after upload so uploaded image files get\n  recognized as images (fixes http://plone.org/products/collective.uploadify/issues/7)\n  [fRiSi]\n\n0.9 - 2009-10-29\n----------------\n\n* updated to Uploadify v2.1.0\n  [ramonski]\n\n* removed cgi parser for QUERY_STRING.\n  Now we receive the data via POST\n  [ramonski]\n\n* updated js, css and upload.pt\n  [ramonski]\n\n0.8 - 2009-10-27\n----------------\n\n* added cgi parser for QUERY_STRING\n  [seletz, ramonski]\n\n* added custom string encoder/decoder\n  [seletz, ramonski]\n\n* fixed name chooser for german umlauts\n  [ramonski]\n\n0.7 - 2009-07-23\n----------------\n\n* re-fixed name chooser ...gnaarf\n  [ramonski]\n\n* removed silly logging\n  [ramonski]\n\n0.6 - 2009-07-23\n----------------\n\n* changed the paths to the resources in javascript from absolute to relative.\n  This fixes some strange behaviour resulting in Uploadify - IOErrors\n  [ramonski]\n\n* fixed #2 (AttributeError: aq_parent) -- when doing uploads in the portal root\n  [ramonski]\n\n* The upload folder can now be in private state as well.\n  [ramonski]\n\n0.5 - 2009-06-25\n----------------\n\n* use now the jquery.js shipped with Plone.\n  This satisfies the comment of Maurits van Rees in\n  http://old.plone.org/products/ploneflashupload/issues/1\n  [ramonski]\n\n* fixed Bug with M$ IE Browsers described in\n  http://www.uploadify.com/forum/viewtopic.php?f=4&t=266\n  [ramonski]\n\n* uses 'jq' variable instead of '$' in templates and javascript\n  [ramonski]\n\n0.4 - 2009-06-23\n----------------\n\n* added cancel button\n  [ramonski]\n\n* uploadify settings can be set in site_properties\n  [ramonski]\n\n* added a name chooser to avoid id clashes when uploading files\n  [ramonski]\n\n0.3 - 2009-06-22\n----------------\n\n* fixed bug for M$ IE Browsers that the 'Browse' button not appear\n  [ramonski]\n\n* changed permission for upload view to cmf.ModifyPortalContent\n  [ramonski]\n\n* added onAllComplete handler which reloads the location and displays the\n  uploaded files immediatly in the folder_listing macro\n  [ramonski]\n\n* registered a browser view for the uploadify javascript initialization\n  [ramonski]\n\n* registered a browser view for the uploadify upload action\n  [ramonski]\n\n* removed unused code\n  [ramonski]\n\n0.2.2 - 2009-06-04\n------------------\n\n* added missing *.txt extension to MANIFEST.in **gnarf**, I hate setuptools!\n  [ramonski]\n\n0.2.1 - 2009-06-04\n------------------\n\n* added missing MANIFEST.in file\n  [ramonski]\n\n0.2 - 2009-06-04\n----------------\n\n* removed gs profile\n  [ramonski]\n\n* added css styles for buttons\n  [ramonski]\n\n* fixed bug with upper case file extensions\n  [ramonski]\n\n0.1 - 2009-04-30\n----------------\n\n* Initial release\n  [ramonski]\n\nContributors\n************\n\nRamon Bartl, Author\n\nStefan Eletzhofer, InQuant GmbH\n\nHarald Friessnegger, Webmeisterei GmbH\n\nDaniel Widerin, Kombinat Media Gestalter GmbH\n\nNejc Zupan, NiteoWeb Ltd.\n\nJan Van Hees, K.U.Leuven\n\nKim Paulissen, K.U.Leuven\n\nRok Garbas, http://www.garbas.si\n\nPhilip Bauer, bauer@starzel.de", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.uploadify", "keywords": "", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.uploadify", "package_url": "https://pypi.org/project/collective.uploadify/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.uploadify/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/collective/collective.uploadify"}, "release_url": "https://pypi.org/project/collective.uploadify/1.2/", "requires_dist": null, "requires_python": null, "summary": "Multi File Upload for Plone", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Makes Plone File Uploads easy</strong></p>\n<p>Multifileupload for Plone using <a href=\"http://www.uploadify.com\" rel=\"nofollow\">uploadify</a></p>\n<div id=\"plone-integration\">\n<h2>Plone integration</h2>\n<p><tt>Upload</tt> folder tab action is install with default profile. You can install\nit via portal_quickinstaller or via Addons section in control panel.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>The following settings can be done in the site_properties.\n(please use <strong>string</strong> properties only!):</p>\n<blockquote>\n<ul>\n<li><p>ul_auto_upload \u2013 true/false (default: false)</p>\n<p><em>Set to true if you would like the files to be uploaded when they are\nselected.</em></p>\n</li>\n<li><p>ul_allow_multi \u2013 true/false (default: true)</p>\n<p><em>Set to true if you want to allow multiple file uploads.</em></p>\n</li>\n<li><p>ul_sim_upload_limit \u2013 number 1-n (default: 4)</p>\n<p><em>A limit to the number of simultaneous uploads you would like to allow.</em></p>\n</li>\n<li><p>ul_queue_size_limit \u2013 number 1-n (default: 999)</p>\n<p><em>A limit to the number of files you can select to upload in one go.</em></p>\n</li>\n<li><p>ul_size_limit \u2013 size in bytes (default: empty)</p>\n<p><em>A number representing the limit in bytes for each upload.</em></p>\n</li>\n<li><p>ul_file_description \u2013 text (default: empty)</p>\n<p><em>The text that will appear in the file type drop down at the bottom of the\nbrowse dialog box.</em></p>\n</li>\n<li><p>ul_file_extensions \u2013 list of extensions (default: *.*;)</p>\n<p><em>A list of file extensions you would like to allow for upload.  Format like\n*.ext1;*.ext2;*.ext3. FileDesc is required when using this option.</em></p>\n</li>\n<li><p>ul_button_text \u2013 text (default: BROWSE)</p>\n<p><em>The text you would like to appear on the default button.</em></p>\n</li>\n<li><p>ul_button_image \u2013 path to image (default: empty)</p>\n<p><em>The path to the image you will be using for the browse button.\nNOTE: If you are using a **different sized button image*</em> you have to set\nul_height and ul_width otherwise your ul_button_image will be stretched to\nthe defaults (110x30)*</p>\n</li>\n<li><p>ul_hide_button \u2013 true/false (default: false)</p>\n<p><em>Set to true if you want to hide the button image.</em></p>\n</li>\n<li><p>ul_script_access \u2013 always/sameDomain (default: sameDomain)</p>\n<p><em>The access mode for scripts in the flash file.  If you are testing locally, set to `always`.</em></p>\n</li>\n<li><p>ul_width \u2013 number (default: 110)</p>\n<p><em>The ul_width value which should be set when using a different sized\nul_button_image</em></p>\n</li>\n<li><p>ul_height \u2013 number (default: 30)</p>\n<p><em>The ul_height value which should be set when using a different sized\nul_button_image</em></p>\n</li>\n<li><p>ul_scale_image_size \u2013 x,y</p>\n<p><em>These two values define the max x,y size in pixels of the image. Scales\nan image down to at most ul_scale_image_size size preserving aspect ratio.\nExample: 800,600 to set a maximum size of 800x600 pixels</em></p>\n</li>\n<li><p>ul_content_field \u2013 Contenttype.field</p>\n<p><em>The uploaded file is included into the specific field from the specific Contenttype\nExample: File.file it uploads to field file from the contenttype File</em></p>\n</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"adding-a-custom-file-mutator-utility\">\n<h2>Adding a custom File Mutator Utility</h2>\n<p>If you want to so some special handling for uploaded files <em>before</em> they get\ncreated in the portal, you can simply register a new utility providing the\nIFileMutator Interface.</p>\n<p>Your utility will be called with <strong>file_name, file_data, content_type</strong> just\nbefore the content will be created in the portal.</p>\n<div>\n<p>Parameters</p>\n<p><strong>file_name</strong>:</p>\n<pre>type: str\n\nexample: my-image.jpg\n</pre>\n<p><strong>file_data</strong>:</p>\n<pre>type: &lt;ZPublisher.HTTPRequest.FileUpload instance at -...&gt;\n\ncan be used just like a file.\n</pre>\n<p><strong>content_type</strong>:</p>\n<pre>type: str\n\nexample: 'image/jpeg'\n</pre>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<p>A simple utility which adds a \u201cphoto-\u201d prefix to image filenames</p>\n<p>configure.zcml:</p>\n<pre>&lt;!-- An Utility to give images an \"photo-\" prefix --&gt;\n&lt;utility component=\".utility.prefix_image_filename\"\n         name=\"prefix-image-filename\"/&gt;\n</pre>\n<p>utility.py:</p>\n<pre>from zope import interface\n\ndef prefix_image_filename(file_name, file_data, content_type):\n    \"\"\" Prefix all images with 'photo-&lt;filename&gt;'\n    \"\"\"\n    # we only handle image files\n    if not content_type.startswith(\"image\"):\n        return (file_name, file_data, content_type)\n\n    if not file_name.startswith(\"photo\"):\n        file_name = \"-\".join([\"photo\", file_name])\n    return (file_name, file_data, content_type)\n\n\ninterface.directlyProvides(prefix_image_filename,\n                           IFileMutator)\n</pre>\n<div>\n<p>Note</p>\n<p>Your utility has to return a tuple of:</p>\n<pre>(file_name, file_data, content_type)\n</pre>\n</div>\n</div>\n</div>\n<div id=\"customization-for-specific-browserlayer\">\n<h2>Customization for specific BrowserLayer</h2>\n<p>If you have your own skin installed which is based on it\u2019s own BrowserLayer\n(by default IThemeSpecific) and want to customize the look and feel of\ncollective.uploadify\u2019s you could override the upload view and/or the upload\ninitialize callback view</p>\n<blockquote>\n<ul>\n<li><p>Customize view template:</p>\n<pre>&lt;configure\n    xmlns=\"http://namespaces.zope.org/zope\"\n    xmlns:browser=\"http://namespaces.zope.org/browser\"&gt;\n\n    ...\n\n    &lt;!-- Customize collective.uploadify upload template --&gt;\n    &lt;browser:page\n        for=\"collective.uploadify.browser.interfaces.IUploadingCapable\"\n        name=\"upload\"\n        template=\"templates/upload.pt\"\n        permission=\"cmf.AddPortalContent\"\n        layer=\".interfaces.IThemeSpecific\"\n        /&gt;\n\n&lt;/configure&gt;\n</pre>\n</li>\n<li><p>Customize initialize template:</p>\n<pre>from zope.i18n import translate\nfrom zope.component import getMultiAdapter\nfrom collective.uploadify.browser.upload import UploadInitalize\nfrom my.product import MyMessageFactory as _\n\n\nclass MyCustomUploadInitalize(UploadInitalize):\n    \"\"\" Initialize uploadify js\n    \"\"\"\n\n    def upload_settings(self):\n\n        portal_state = getMultiAdapter(\n            (self.context, self.request), name=\"plone_portal_state\")\n\n        settings = super(MyCustomUploadInitalize, self).upload_settings()\n        settings.update(dict(\n            ul_height = 26,\n            ul_width = 105,\n            ul_button_text = translate(_('Choose images'), target_language= \\\n                                       self.request.get('LANGUAGE', 'de')),\n            ul_button_image = portal_state.navigation_root_url() + \\\n                '/button_upload.png',\n        ))\n\n        return settings\n</pre>\n<p>Don\u2019t forget to register the new upload initialize view for your\nthemespecific browserlayer by using:</p>\n<pre>&lt;configure\n     xmlns=\"http://namespaces.zope.org/zope\"\n     xmlns:browser=\"http://namespaces.zope.org/browser\"&gt;\n\n   ...\n\n    &lt;browser:page\n        for=\"*\"\n        name=\"upload_initialize\"\n        class=\".uploadify.MyCustomUploadInitalize\"\n        permission=\"cmf.AddPortalContent\"\n        layer=\".interfaces.IThemeSpecific\"\n        /&gt;\n\n&lt;/configure&gt;\n</pre>\n</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"collective-uploadify-installation\">\n<h2>collective.uploadify Installation</h2>\n<p>To install collective.uploadify into the global Python environment (or a workingenv),\nusing a traditional Zope 2 instance, you can do this:</p>\n<ul>\n<li><p>When you\u2019re reading this you have probably already run\n<tt>easy_install collective.uploadify</tt>. Find out how to install setuptools\n(and EasyInstall) here:\n<a href=\"http://peak.telecommunity.com/DevCenter/EasyInstall\" rel=\"nofollow\">http://peak.telecommunity.com/DevCenter/EasyInstall</a></p>\n</li>\n<li><p>If you are using Zope 2.9 (not 2.10), get <a href=\"http://plone.org/products/pythonproducts\" rel=\"nofollow\">pythonproducts</a> and install it\nvia:</p>\n<pre>python setup.py install --home /path/to/instance\n</pre>\n</li>\n</ul>\n<p>into your Zope instance.</p>\n<ul>\n<li><p>Create a file called <tt><span class=\"pre\">collective.uploadify-configure.zcml</span></tt> in the\n<tt><span class=\"pre\">/path/to/instance/etc/package-includes</span></tt> directory.  The file\nshould only contain this:</p>\n<pre>&lt;include package=\"collective.uploadify\" /&gt;\n</pre>\n</li>\n</ul>\n<p>Alternatively, if you are using zc.buildout and the plone.recipe.zope2instance\nrecipe to manage your project, you can do this:</p>\n<ul>\n<li><p>Add <tt>collective.uploadify</tt> to the list of eggs and zcml to install, e.g.:</p>\n<pre>[buildout]\n...\neggs =\n    ...\n    collective.uploadify\n\nzcml =\n    ...\n    collective.uploadify\n</pre>\n</li>\n<li><p>Re-run buildout, e.g. with:</p>\n<blockquote>\n<p>$ ./bin/buildout</p>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.2 (2013-05-11)</h3>\n<ul>\n<li>make compatible with dexterity (plone.app.contenttypes)\n[pbauer]</li>\n<li>use IUserPreferredURLNormalizer to set id\u2019s\n[pbauer]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.1 - 2012-10-11</h3>\n<ul>\n<li>moved to GitHub\n[ramonski]</li>\n<li>Plone 4.3 compatibility\n[alert]</li>\n<li>added italian translation.\n[keul]</li>\n<li>cleanup egg format, removing bad zopeskel elements\n[keul]</li>\n<li>added default genericsetup profile which adds folder tab for on each folder.\n[garbas]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.0 - 2011-05-05</h3>\n<ul>\n<li>fixed the loss of File Extensions for Plone &gt; 3.3.5 with IDNormalizer.\nChanged to use the IFileNameNormalizer Utility [jakke, ramonski]</li>\n<li>added dutch translation [spereverde]</li>\n</ul>\n</div>\n<div id=\"rc5-2011-04-04\">\n<h3>1.0rc5 - 2011-04-04</h3>\n<ul>\n<li>Support for different contenttypes [thor27]</li>\n<li>added basque translation [erral]</li>\n<li>added spain translation [macagua]</li>\n</ul>\n</div>\n<div id=\"rc4-2011-01-31\">\n<h3>1.0rc4 - 2011-01-31</h3>\n<ul>\n<li>Added German translations [fRiSi]</li>\n<li>Added Chinese (Taiwan)  translations [marr]</li>\n<li>Updated documentation to show Upload action on default\npages too [fRiSi]</li>\n</ul>\n</div>\n<div id=\"rc3-2010-09-18\">\n<h3>1.0rc3 - 2010-09-18</h3>\n<ul>\n<li>Fire Archetypes ObjectInitializedEvent for uploaded content.\n[hannosch]</li>\n<li>Corrected <tt>i18n:domain</tt> in documented action and include its messages into\nthe pot file.\n[hannosch]</li>\n<li>Added a <tt>z3c.autoinclude</tt> entry point to avoid the need for a ZCML slug in\nPlone 3.3 and later.\n[hannosch]</li>\n<li>changed permissions to cmf.AddPortalContent\nthis fixes <a href=\"http://plone.org/products/collective.uploadify/issues/13\" rel=\"nofollow\">http://plone.org/products/collective.uploadify/issues/13</a>\n[ramonski]</li>\n<li>mimetypes.guess_type(file_name) returns now an empty string if the type\ncould not be guessed. This fixes an issue with the scale_image_size utility\n[ramonski]</li>\n<li>documentation updated\n[ramonski]</li>\n</ul>\n</div>\n<div id=\"rc2-2010-08-03\">\n<h3>1.0rc2 - 2010-08-03</h3>\n<ul>\n<li>Interface \u201cIFileMutator\u201d introduced \u2013 utilities which provide this\ninterface can do some file mutations on the uploaded file <em>before</em> it get\ncreated as an content type\n[ramonski]</li>\n<li>utility scale_image_size registered \u2013 this utility operates on images an\ncan scale down the image size using PIL preserving the aspect ration from\nthe input file\n[ramonski]</li>\n<li>id chooser gets now called <em>after</em> the thread lock. This should fix #8\n[ramonski]</li>\n<li>added adapter for cStringIO.OutputType -&gt; IBlobbable to be compatible with\nplone.app.blob. This adapter gets only registered when plone.app.blob is\nistalled.\n[ramonski]</li>\n<li>use folder_url and remove is_folderish() and wf-state condition\nto make upload action show up on private folders or\nfolders having a default page too\n(fixes <a href=\"http://plone.org/products/collective.uploadify/issues/12\" rel=\"nofollow\">http://plone.org/products/collective.uploadify/issues/12</a>)\n[fRiSi]</li>\n<li>i18n added + danish translation\n[stonor]</li>\n</ul>\n</div>\n<div id=\"rc1-2010-04-25\">\n<h3>1.0rc1 - 2010-04-25</h3>\n<ul>\n<li>renamed resource swfobject.js to uploadify.swfobject.js.\nThis fixes the name clash with quintagroup.portlet.cumulus\n[ramonski]</li>\n<li>Added some basic tests to the package\n[ramonski]</li>\n<li>Added queue size to the settings in UploadInitialize flash response to\ngive users the possibility to customize their upload queue size.\n[zupo]</li>\n<li>Documentation updates. Added new section about customize uploadify\u2019s upload\nview and upload initialize view templates.\n[saily]</li>\n<li>Added height and width to the settings in UploadInitialize flash response to\ngive users the possibility to customize their uploadbuttons.\n[saily]</li>\n<li>#9 fire ObjectModifiedEvent after upload of each item.\n(fixes <a href=\"http://plone.org/products/collective.uploadify/issues/9\" rel=\"nofollow\">http://plone.org/products/collective.uploadify/issues/9</a>)\n[saily]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.10 - 2010-03-16</h3>\n<ul>\n<li>#5 play well with plone4\u2019s sunburst theme\n(fixes <a href=\"http://plone.org/products/collective.uploadify/issues/5\" rel=\"nofollow\">http://plone.org/products/collective.uploadify/issues/5</a>)\n[fRiSi]</li>\n<li>#7 reindex objects after upload so uploaded image files get\nrecognized as images (fixes <a href=\"http://plone.org/products/collective.uploadify/issues/7\" rel=\"nofollow\">http://plone.org/products/collective.uploadify/issues/7</a>)\n[fRiSi]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.9 - 2009-10-29</h3>\n<ul>\n<li>updated to Uploadify v2.1.0\n[ramonski]</li>\n<li>removed cgi parser for QUERY_STRING.\nNow we receive the data via POST\n[ramonski]</li>\n<li>updated js, css and upload.pt\n[ramonski]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.8 - 2009-10-27</h3>\n<ul>\n<li>added cgi parser for QUERY_STRING\n[seletz, ramonski]</li>\n<li>added custom string encoder/decoder\n[seletz, ramonski]</li>\n<li>fixed name chooser for german umlauts\n[ramonski]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.7 - 2009-07-23</h3>\n<ul>\n<li>re-fixed name chooser \u2026gnaarf\n[ramonski]</li>\n<li>removed silly logging\n[ramonski]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.6 - 2009-07-23</h3>\n<ul>\n<li>changed the paths to the resources in javascript from absolute to relative.\nThis fixes some strange behaviour resulting in Uploadify - IOErrors\n[ramonski]</li>\n<li>fixed #2 (AttributeError: aq_parent) \u2013 when doing uploads in the portal root\n[ramonski]</li>\n<li>The upload folder can now be in private state as well.\n[ramonski]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.5 - 2009-06-25</h3>\n<ul>\n<li>use now the jquery.js shipped with Plone.\nThis satisfies the comment of Maurits van Rees in\n<a href=\"http://old.plone.org/products/ploneflashupload/issues/1\" rel=\"nofollow\">http://old.plone.org/products/ploneflashupload/issues/1</a>\n[ramonski]</li>\n<li>fixed Bug with M$ IE Browsers described in\n<a href=\"http://www.uploadify.com/forum/viewtopic.php?f=4&amp;t=266\" rel=\"nofollow\">http://www.uploadify.com/forum/viewtopic.php?f=4&amp;t=266</a>\n[ramonski]</li>\n<li>uses \u2018jq\u2019 variable instead of \u2018$\u2019 in templates and javascript\n[ramonski]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.4 - 2009-06-23</h3>\n<ul>\n<li>added cancel button\n[ramonski]</li>\n<li>uploadify settings can be set in site_properties\n[ramonski]</li>\n<li>added a name chooser to avoid id clashes when uploading files\n[ramonski]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.3 - 2009-06-22</h3>\n<ul>\n<li>fixed bug for M$ IE Browsers that the \u2018Browse\u2019 button not appear\n[ramonski]</li>\n<li>changed permission for upload view to cmf.ModifyPortalContent\n[ramonski]</li>\n<li>added onAllComplete handler which reloads the location and displays the\nuploaded files immediatly in the folder_listing macro\n[ramonski]</li>\n<li>registered a browser view for the uploadify javascript initialization\n[ramonski]</li>\n<li>registered a browser view for the uploadify upload action\n[ramonski]</li>\n<li>removed unused code\n[ramonski]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.2.2 - 2009-06-04</h3>\n<ul>\n<li>added missing <em>.txt extension to MANIFEST.in **gnarf*</em>, I hate setuptools!\n[ramonski]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.2.1 - 2009-06-04</h3>\n<ul>\n<li>added missing MANIFEST.in file\n[ramonski]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.2 - 2009-06-04</h3>\n<ul>\n<li>removed gs profile\n[ramonski]</li>\n<li>added css styles for buttons\n[ramonski]</li>\n<li>fixed bug with upper case file extensions\n[ramonski]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.1 - 2009-04-30</h3>\n<ul>\n<li>Initial release\n[ramonski]</li>\n</ul>\n</div>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<p>Ramon Bartl, Author</p>\n<p>Stefan Eletzhofer, InQuant GmbH</p>\n<p>Harald Friessnegger, Webmeisterei GmbH</p>\n<p>Daniel Widerin, Kombinat Media Gestalter GmbH</p>\n<p>Nejc Zupan, NiteoWeb Ltd.</p>\n<p>Jan Van Hees, K.U.Leuven</p>\n<p>Kim Paulissen, K.U.Leuven</p>\n<p>Rok Garbas, <a href=\"http://www.garbas.si\" rel=\"nofollow\">http://www.garbas.si</a></p>\n<p>Philip Bauer, <a href=\"mailto:bauer%40starzel.de\">bauer<span>@</span>starzel<span>.</span>de</a></p>\n</div>\n\n          </div>"}, "last_serial": 788259, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3be1a2172a6060cea10ccc327d205bc0", "sha256": "ab8b8f5d7a22ce553cf8f80c8b85f26cc07cb3a6cc5bf69f8b5c3c1e777a98e5"}, "downloads": -1, "filename": "collective.uploadify-0.1-py2.4.egg", "has_sig": false, "md5_digest": "3be1a2172a6060cea10ccc327d205bc0", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 59121, "upload_time": "2009-04-30T18:04:32", "upload_time_iso_8601": "2009-04-30T18:04:32.800365Z", "url": "https://files.pythonhosted.org/packages/de/ae/9f503e7ffc715f0e53452e006a5ad890cde1cab398b08412eec217f51277/collective.uploadify-0.1-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5808f0d6262e64e1734760ecdeaa1e4c", "sha256": "952099162d00d7523f8283208cd7613f81236e46db77d752f08f3f54eb19de9e"}, "downloads": -1, "filename": "collective.uploadify-0.1.tar.gz", "has_sig": false, "md5_digest": "5808f0d6262e64e1734760ecdeaa1e4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55339, "upload_time": "2009-04-30T18:04:32", "upload_time_iso_8601": "2009-04-30T18:04:32.359484Z", "url": "https://files.pythonhosted.org/packages/39/4e/5aa89207ac856872e06ecf1d3030fa1e9a94d38e2431eaa2064ab72f6f0a/collective.uploadify-0.1.tar.gz", "yanked": false}], "0.10": [{"comment_text": "", "digests": {"md5": "06c25bd312887135d0a8ce14c6a9eade", "sha256": "ae53bdf3fce12d7a48315b5e4915a84ab8ca1a943362c9430922c622c9960a23"}, "downloads": -1, "filename": "collective.uploadify-0.10-py2.6.egg", "has_sig": false, "md5_digest": "06c25bd312887135d0a8ce14c6a9eade", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 55751, "upload_time": "2010-03-16T22:08:30", "upload_time_iso_8601": "2010-03-16T22:08:30.986993Z", "url": "https://files.pythonhosted.org/packages/c1/59/cb454bccbc96a4193f67cfd4b4e94bd6227407ff3c4e5de88c70ad788e78/collective.uploadify-0.10-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "de7bf5acd17944b086cf18d2a16e4ca6", "sha256": "061d21075ae0d5083c750351f529d6e71c0c709631bf52a4472841e850e59bcd"}, "downloads": -1, "filename": "collective.uploadify-0.10.zip", "has_sig": false, "md5_digest": "de7bf5acd17944b086cf18d2a16e4ca6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64798, "upload_time": "2010-03-16T22:07:54", "upload_time_iso_8601": "2010-03-16T22:07:54.124183Z", "url": "https://files.pythonhosted.org/packages/3f/6a/b0fb141396989d571df762911ee77f3d8a2c693e72d7fb9170011aae99f0/collective.uploadify-0.10.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "a3aedebd964d86480f841c38e2aefb93", "sha256": "f4f5b15731191ba873024823e9b9aa86777b3502dfe05a6dffb6344baedd7c7d"}, "downloads": -1, "filename": "collective.uploadify-0.2.zip", "has_sig": false, "md5_digest": "a3aedebd964d86480f841c38e2aefb93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13230, "upload_time": "2009-06-04T14:28:26", "upload_time_iso_8601": "2009-06-04T14:28:26.476535Z", "url": "https://files.pythonhosted.org/packages/2b/68/a6c7f990e9ded87ea32ec363cd8a541469d0be7b83f96fd97b49cb72a42c/collective.uploadify-0.2.zip", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0d5923b1e6ee516aac503d912b9863d1", "sha256": "300b75062d43bea975320c03a558ee9b247b5735e0df4f9461473cf7f443c6dd"}, "downloads": -1, "filename": "collective.uploadify-0.2.1.zip", "has_sig": false, "md5_digest": "0d5923b1e6ee516aac503d912b9863d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58540, "upload_time": "2009-06-04T15:04:15", "upload_time_iso_8601": "2009-06-04T15:04:15.046303Z", "url": "https://files.pythonhosted.org/packages/f6/fa/64ecf7881a4161d6449fd2c71ff786d81e4e87eefa6a810ab391e3edbe57/collective.uploadify-0.2.1.zip", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "46e4be89c6876d1960feb4435a78a6b6", "sha256": "a47ea1b8449d54003c84b19821c4dde3a9064c752292ae590a7030838a8dfbb2"}, "downloads": -1, "filename": "collective.uploadify-0.2.2.zip", "has_sig": false, "md5_digest": "46e4be89c6876d1960feb4435a78a6b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65623, "upload_time": "2009-06-04T15:10:47", "upload_time_iso_8601": "2009-06-04T15:10:47.039734Z", "url": "https://files.pythonhosted.org/packages/1d/21/0ca7416082b36e60ed02c30ad10f1c269df4420879f5c92b997de5f48139/collective.uploadify-0.2.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "bf4b8d543f6f57b6b5593dd84e3f4564", "sha256": "3dbd03667eedec901adb1a2999aae4416908079f52d6cc58f739b9d7db455620"}, "downloads": -1, "filename": "collective.uploadify-0.3.zip", "has_sig": false, "md5_digest": "bf4b8d543f6f57b6b5593dd84e3f4564", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67429, "upload_time": "2009-06-22T18:16:19", "upload_time_iso_8601": "2009-06-22T18:16:19.167595Z", "url": "https://files.pythonhosted.org/packages/d2/10/a304996a3385eba1aae357728bb74771f157286f2e6f27b148cebe5d2fc6/collective.uploadify-0.3.zip", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "b157628b5e28b4da47e5bae2d95afd95", "sha256": "2d5ca103be2396b5fd6bb77c1694bbb84ad78e9a721cc462f4e08bff58915981"}, "downloads": -1, "filename": "collective.uploadify-0.4.zip", "has_sig": false, "md5_digest": "b157628b5e28b4da47e5bae2d95afd95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69634, "upload_time": "2009-06-23T11:42:17", "upload_time_iso_8601": "2009-06-23T11:42:17.238705Z", "url": "https://files.pythonhosted.org/packages/74/93/6d5ed5f3644b609ec1187801e09fe1dba4ffae7bf30f526649211b474c45/collective.uploadify-0.4.zip", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "b52d8899b3352d797ae033a53c8f15fe", "sha256": "94afce58ae5c17513c0493a6499fa45f97d380728eb548eb877b845a2405d887"}, "downloads": -1, "filename": "collective.uploadify-0.5.zip", "has_sig": false, "md5_digest": "b52d8899b3352d797ae033a53c8f15fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50357, "upload_time": "2009-06-25T16:11:08", "upload_time_iso_8601": "2009-06-25T16:11:08.359551Z", "url": "https://files.pythonhosted.org/packages/1a/18/f468bcb9bada56669fd5dcc8dc24df231d4538b7d8554a82cd0ec433a8e1/collective.uploadify-0.5.zip", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "20d0f4fd036706d169c2c3c803d99e74", "sha256": "7c76369cbd2a23c37e141fc8dcaafd20e1f18f88736f2ce68756bc56191caf2f"}, "downloads": -1, "filename": "collective.uploadify-0.6.zip", "has_sig": false, "md5_digest": "20d0f4fd036706d169c2c3c803d99e74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53179, "upload_time": "2009-07-23T17:40:59", "upload_time_iso_8601": "2009-07-23T17:40:59.958995Z", "url": "https://files.pythonhosted.org/packages/27/2f/3d1e97da599620fcb94bfb7c23dff95a98633031107fb04563eb7f367fbe/collective.uploadify-0.6.zip", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "d8c94a0c0df83fe246bbdc4b7edb6395", "sha256": "650c9d3bdcdf601fea8489355fa8b8bbc9669a7c9ac3e442b920a6b78986a489"}, "downloads": -1, "filename": "collective.uploadify-0.7.zip", "has_sig": false, "md5_digest": "d8c94a0c0df83fe246bbdc4b7edb6395", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53263, "upload_time": "2009-07-23T18:27:26", "upload_time_iso_8601": "2009-07-23T18:27:26.748622Z", "url": "https://files.pythonhosted.org/packages/94/d5/1a8566477d9fda013e7825acda0968921b4e0543118f361074f73244b0e8/collective.uploadify-0.7.zip", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "1f006167d289ae13c47ecde72be3f995", "sha256": "fcf2e7e5687fe6f0fb8eec2b831ff62c88f88a27d6e7d0ae4c01efab4bbc9dea"}, "downloads": -1, "filename": "collective.uploadify-0.8.zip", "has_sig": false, "md5_digest": "1f006167d289ae13c47ecde72be3f995", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53717, "upload_time": "2009-10-27T12:09:01", "upload_time_iso_8601": "2009-10-27T12:09:01.756358Z", "url": "https://files.pythonhosted.org/packages/37/67/d929875e8fa6570f0838ea89693ba9ffe6bb8f4c488631e1d94e476947cd/collective.uploadify-0.8.zip", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "37427aeda085b96db19bab759835c493", "sha256": "97956583afadaf7dcb22a4c7b7e7134c8f8ae55d71edcb31e951ef30eb87c98d"}, "downloads": -1, "filename": "collective.uploadify-0.9.zip", "has_sig": false, "md5_digest": "37427aeda085b96db19bab759835c493", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63177, "upload_time": "2009-10-29T13:37:30", "upload_time_iso_8601": "2009-10-29T13:37:30.040899Z", "url": "https://files.pythonhosted.org/packages/90/56/397b3f03d87410b19800e4df22b56cda97e0f1d68dac15c635e85dc87492/collective.uploadify-0.9.zip", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "b0937ae12fcc8bd36fb97e8807a01e78", "sha256": "c0fe79748b7f59f440c2efcfd6da30a9791eaf1d59eff5693437133198d541ad"}, "downloads": -1, "filename": "collective.uploadify-1.0.zip", "has_sig": false, "md5_digest": "b0937ae12fcc8bd36fb97e8807a01e78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84208, "upload_time": "2011-05-05T16:50:26", "upload_time_iso_8601": "2011-05-05T16:50:26.521833Z", "url": "https://files.pythonhosted.org/packages/db/53/3d1cd8f76e64dadffe6319b9a116501c3d962c81012e2c9d77f697fac47b/collective.uploadify-1.0.zip", "yanked": false}], "1.0rc1": [{"comment_text": "", "digests": {"md5": "689a03b89f698d5eb98476e8c7549e10", "sha256": "a7abf3f285e3b7e669b0e6fcf8e286bb95093644f183f99c353ca4486bbf518e"}, "downloads": -1, "filename": "collective.uploadify-1.0rc1.zip", "has_sig": false, "md5_digest": "689a03b89f698d5eb98476e8c7549e10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70256, "upload_time": "2010-04-25T10:18:19", "upload_time_iso_8601": "2010-04-25T10:18:19.452342Z", "url": "https://files.pythonhosted.org/packages/82/1e/c1669e69a9c3d20a3b6f578ce07f134cc304e4b7f36447b30aab37752df1/collective.uploadify-1.0rc1.zip", "yanked": false}], "1.0rc2": [{"comment_text": "", "digests": {"md5": "a590cebb8133fb37275c5c667c902336", "sha256": "20582b9ca9e1e15b9ed00669d556cdc8cada953647d940d3800136704084298b"}, "downloads": -1, "filename": "collective.uploadify-1.0rc2.zip", "has_sig": false, "md5_digest": "a590cebb8133fb37275c5c667c902336", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77736, "upload_time": "2010-08-03T17:57:46", "upload_time_iso_8601": "2010-08-03T17:57:46.947005Z", "url": "https://files.pythonhosted.org/packages/01/6b/a125a9d410cb7cd88419fbd920c21d4e812c49fd9f27d4d9492b0be0d869/collective.uploadify-1.0rc2.zip", "yanked": false}], "1.0rc3": [{"comment_text": "", "digests": {"md5": "6e06385a958f93e01533f51594648f1e", "sha256": "63238e963039fdaf67731356c3eb6bdd8aaeb4c2ddb1fdb9bed0eba4c1287804"}, "downloads": -1, "filename": "collective.uploadify-1.0rc3.zip", "has_sig": false, "md5_digest": "6e06385a958f93e01533f51594648f1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78719, "upload_time": "2010-09-18T09:49:04", "upload_time_iso_8601": "2010-09-18T09:49:04.650263Z", "url": "https://files.pythonhosted.org/packages/4d/18/e2f9f9d47944044e052378ede3e65b91cbec105b3ae1719c0a383c43b69b/collective.uploadify-1.0rc3.zip", "yanked": false}], "1.0rc4": [{"comment_text": "", "digests": {"md5": "594889307b23c06002ea7fd6986fef84", "sha256": "6e4aa95d1418c6ecde39797d82c32b0b5f3326358b903b10b74d6f5d7a9dcf69"}, "downloads": -1, "filename": "collective.uploadify-1.0rc4-py2.6.egg", "has_sig": false, "md5_digest": "594889307b23c06002ea7fd6986fef84", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 70747, "upload_time": "2011-01-31T10:58:58", "upload_time_iso_8601": "2011-01-31T10:58:58.458343Z", "url": "https://files.pythonhosted.org/packages/5c/f9/cda8d56dca27d660106a04309bd22dbfeb498e6c8589b7b378a9e478cda3/collective.uploadify-1.0rc4-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "53f0f44ff2119c37cc05759d459201ae", "sha256": "74dec9254173376375f039b6d43aa6a8dce595eb5735ed478984303abe3a265a"}, "downloads": -1, "filename": "collective.uploadify-1.0rc4.zip", "has_sig": false, "md5_digest": "53f0f44ff2119c37cc05759d459201ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81298, "upload_time": "2011-01-31T11:02:54", "upload_time_iso_8601": "2011-01-31T11:02:54.669188Z", "url": "https://files.pythonhosted.org/packages/11/33/fce4de9455d798fe5abdc415bb5f6cab303d050484d39bf4e2648aa677dd/collective.uploadify-1.0rc4.zip", "yanked": false}], "1.0rc5": [{"comment_text": "", "digests": {"md5": "9c77e189de1c3ae8c6c6d9c425d1fe04", "sha256": "b58da5c30fac5dfb269e595e931a6fd6e0b43a5be22bb7f30b86414d1f3bcc43"}, "downloads": -1, "filename": "collective.uploadify-1.0rc5.zip", "has_sig": false, "md5_digest": "9c77e189de1c3ae8c6c6d9c425d1fe04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83403, "upload_time": "2011-04-04T09:33:39", "upload_time_iso_8601": "2011-04-04T09:33:39.820278Z", "url": "https://files.pythonhosted.org/packages/e8/8a/52993ccebd911e9695603b9347d457c00110a3842a074984759494a2e8e7/collective.uploadify-1.0rc5.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "d4226963dfc9494ae814cacbdf520a31", "sha256": "a8207d1de3810871a836b2f8cca893e0beb995ba739c5fa9edcd6b37bc2a73f0"}, "downloads": -1, "filename": "collective.uploadify-1.1.tar.gz", "has_sig": false, "md5_digest": "d4226963dfc9494ae814cacbdf520a31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60756, "upload_time": "2012-10-11T10:41:14", "upload_time_iso_8601": "2012-10-11T10:41:14.876458Z", "url": "https://files.pythonhosted.org/packages/13/aa/c10405fddea24c37d62f6ef8dd80c89db67b421161676916128bff2ea78b/collective.uploadify-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "0599cf230e07a982074c541a5561ca46", "sha256": "92ab479a73842d866103d48677bb05e15a81e4349108f4427a41710b22fc3c01"}, "downloads": -1, "filename": "collective.uploadify-1.2.tar.gz", "has_sig": false, "md5_digest": "0599cf230e07a982074c541a5561ca46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61448, "upload_time": "2013-05-11T09:47:10", "upload_time_iso_8601": "2013-05-11T09:47:10.845521Z", "url": "https://files.pythonhosted.org/packages/7b/7b/d08368948fafbe12b0ccea3d29c0691f02afa6c886836d2c2515735e82e7/collective.uploadify-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0599cf230e07a982074c541a5561ca46", "sha256": "92ab479a73842d866103d48677bb05e15a81e4349108f4427a41710b22fc3c01"}, "downloads": -1, "filename": "collective.uploadify-1.2.tar.gz", "has_sig": false, "md5_digest": "0599cf230e07a982074c541a5561ca46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61448, "upload_time": "2013-05-11T09:47:10", "upload_time_iso_8601": "2013-05-11T09:47:10.845521Z", "url": "https://files.pythonhosted.org/packages/7b/7b/d08368948fafbe12b0ccea3d29c0691f02afa6c886836d2c2515735e82e7/collective.uploadify-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:44 2020"}