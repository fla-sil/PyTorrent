{"info": {"author": "Dusty Phillips", "author_email": "dusty@archlinux.ca", "bugtrack_url": null, "classifiers": [], "description": "Django JSON Serializer\n\nThis is a django serializer that outputs sensible json to be sent to the\nfrontend, rather than intended as a serializer to a file. Here's an example:\n\n>>> print s.serialize(User.objects.all(), relations=['groups'], excludes=['user_permissions'], indent=4)\n[\n    {\n        \"username\": \"dusty\", \n        \"first_name\": \"\", \n        \"last_name\": \"\", \n        \"is_active\": true, \n        \"is_superuser\": true, \n        \"is_staff\": true, \n        \"last_login\": \"2010-11-26 13:27:07\", \n        \"groups\": [\n            {\n                \"pk\": 1, \n                \"model\": \"auth.group\", \n                \"name\": \"hello\", \n                \"permissions\": []\n            }\n        ], \n        \"pk\": 1, \n        \"model\": \"auth.user\", \n        \"password\": \"sha1$8f816$b4c8139100c314b46f1ca931858e4d6d5c61917f\", \n        \"email\": \"dusty@linux.ca\", \n        \"date_joined\": \"2010-11-22 17:55:40\"\n    }\n]\n\nThe default serializer (djason.json) spits out a list of objects as a string.\nYou can optionally have it return that list wrapped in an HttpResponse object\nby passing the httpresponse=True option into serialize.\n\nThere is a second serializer that takes two optional parameters, attributes (a\ndict) and list_name (a string). This serializer returns a dictionary with any\nkey value attributes in the attributes dictionary, and one extra attribute\nnamed list_name, which contains the list of objects as returned by the json\nserializer. For example:\n\n>>> print s.serialize(User.objects.all(), relations=['groups'], excludes=['user_permissions'], indent=4, attributes={'somekey': 'somevalue'}, list_name=\"users\")\n{\n    \"somekey\": \"somevalue\",\n    \"users\": [\n        {\n            \"username\": \"dusty\", \n            \"first_name\": \"\", \n            \"last_name\": \"\", \n            \"is_active\": true, \n            \"is_superuser\": true, \n            \"is_staff\": true, \n            \"last_login\": \"2010-11-26 13:27:07\", \n            \"groups\": [\n                {\n                    \"pk\": 1, \n                    \"model\": \"auth.group\", \n                    \"name\": \"hello\", \n                    \"permissions\": []\n                }\n            ], \n            \"pk\": 1, \n            \"model\": \"auth.user\", \n            \"password\": \"sha1$8f816$b4c8139100c314b46f1ca931858e4d6d5c61917f\", \n            \"email\": \"dusty@linux.ca\", \n            \"date_joined\": \"2010-11-22 17:55:40\"\n        }\n    ]\n}\n\nThis project was originally forked from:\nhttps://code.google.com/p/wadofstuff/wiki/DjangoFullSerializers\n\nThe original code produced a json format that was good for ./manage.py dump and\nload, but wasn't as suitable for sending data to a web client for processing\nvia ajax.\n\nWhat's new\n==========\n\nVersion 0.2\n- Added a serializer that allows including the serialized object inside an\nobject with extra attributes\n- Added an 'httpresponse' option that will automatically wrap the serialized\nstream in an HttpResponse object\nVersion 0.1\n\n- First public released\n- forked from https://code.google.com/p/wadofstuff/wiki/DjangoFullSerializers\n- patched with https://code.google.com/p/wadofstuff/issues/detail?id=4\n- Modified to output more sensible json for client consumption\n- Turned it into a django app\n- Added a template tag for rendering raw django", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/buchuki/djason/archives/v0.2.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/buchuki/djason", "keywords": "django json serializer", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "djason", "package_url": "https://pypi.org/project/djason/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/djason/", "project_urls": {"Download": "https://github.com/buchuki/djason/archives/v0.2.1", "Homepage": "https://github.com/buchuki/djason"}, "release_url": "https://pypi.org/project/djason/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Convert django models to sensible json format", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django JSON Serializer</p>\n<p>This is a django serializer that outputs sensible json to be sent to the\nfrontend, rather than intended as a serializer to a file. Here\u2019s an example:</p>\n<pre>&gt;&gt;&gt; print s.serialize(User.objects.all(), relations=['groups'], excludes=['user_permissions'], indent=4)\n[\n    {\n        \"username\": \"dusty\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"is_active\": true,\n        \"is_superuser\": true,\n        \"is_staff\": true,\n        \"last_login\": \"2010-11-26 13:27:07\",\n        \"groups\": [\n            {\n                \"pk\": 1,\n                \"model\": \"auth.group\",\n                \"name\": \"hello\",\n                \"permissions\": []\n            }\n        ],\n        \"pk\": 1,\n        \"model\": \"auth.user\",\n        \"password\": \"sha1$8f816$b4c8139100c314b46f1ca931858e4d6d5c61917f\",\n        \"email\": \"dusty@linux.ca\",\n        \"date_joined\": \"2010-11-22 17:55:40\"\n    }\n]\n</pre>\n<p>The default serializer (djason.json) spits out a list of objects as a string.\nYou can optionally have it return that list wrapped in an HttpResponse object\nby passing the httpresponse=True option into serialize.</p>\n<p>There is a second serializer that takes two optional parameters, attributes (a\ndict) and list_name (a string). This serializer returns a dictionary with any\nkey value attributes in the attributes dictionary, and one extra attribute\nnamed list_name, which contains the list of objects as returned by the json\nserializer. For example:</p>\n<pre>&gt;&gt;&gt; print s.serialize(User.objects.all(), relations=['groups'], excludes=['user_permissions'], indent=4, attributes={'somekey': 'somevalue'}, list_name=\"users\")\n{\n    \"somekey\": \"somevalue\",\n    \"users\": [\n        {\n            \"username\": \"dusty\",\n            \"first_name\": \"\",\n            \"last_name\": \"\",\n            \"is_active\": true,\n            \"is_superuser\": true,\n            \"is_staff\": true,\n            \"last_login\": \"2010-11-26 13:27:07\",\n            \"groups\": [\n                {\n                    \"pk\": 1,\n                    \"model\": \"auth.group\",\n                    \"name\": \"hello\",\n                    \"permissions\": []\n                }\n            ],\n            \"pk\": 1,\n            \"model\": \"auth.user\",\n            \"password\": \"sha1$8f816$b4c8139100c314b46f1ca931858e4d6d5c61917f\",\n            \"email\": \"dusty@linux.ca\",\n            \"date_joined\": \"2010-11-22 17:55:40\"\n        }\n    ]\n}\n</pre>\n<p>This project was originally forked from:\n<a href=\"https://code.google.com/p/wadofstuff/wiki/DjangoFullSerializers\" rel=\"nofollow\">https://code.google.com/p/wadofstuff/wiki/DjangoFullSerializers</a></p>\n<p>The original code produced a json format that was good for ./manage.py dump and\nload, but wasn\u2019t as suitable for sending data to a web client for processing\nvia ajax.</p>\n<div id=\"what-s-new\">\n<h2>What\u2019s new</h2>\n<p>Version 0.2\n- Added a serializer that allows including the serialized object inside an\nobject with extra attributes\n- Added an \u2018httpresponse\u2019 option that will automatically wrap the serialized\nstream in an HttpResponse object\nVersion 0.1</p>\n<ul>\n<li>First public released</li>\n<li>forked from <a href=\"https://code.google.com/p/wadofstuff/wiki/DjangoFullSerializers\" rel=\"nofollow\">https://code.google.com/p/wadofstuff/wiki/DjangoFullSerializers</a></li>\n<li>patched with <a href=\"https://code.google.com/p/wadofstuff/issues/detail?id=4\" rel=\"nofollow\">https://code.google.com/p/wadofstuff/issues/detail?id=4</a></li>\n<li>Modified to output more sensible json for client consumption</li>\n<li>Turned it into a django app</li>\n<li>Added a template tag for rendering raw django</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 791186, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "bc472c094dc19ef6ec00c2886843e336", "sha256": "788cbd6efc7f21141c12730a79d5f1f4bcfa22a9ecb23c4cc9a92766b951d3d5"}, "downloads": -1, "filename": "djason-0.1.tar.gz", "has_sig": false, "md5_digest": "bc472c094dc19ef6ec00c2886843e336", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5743, "upload_time": "2010-11-28T20:26:20", "upload_time_iso_8601": "2010-11-28T20:26:20.638861Z", "url": "https://files.pythonhosted.org/packages/93/a3/57decf44071434170c434de2fa3c2a1f7313473cac6f0cadea04c2a4bc18/djason-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "339e2b3b0a3a7497bb11201668a99aa4", "sha256": "a83b8ad10ae008a55751a920be80069024f795d4507242d1f3836ee4c193387a"}, "downloads": -1, "filename": "djason-0.2.tar.gz", "has_sig": false, "md5_digest": "339e2b3b0a3a7497bb11201668a99aa4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6553, "upload_time": "2011-05-12T20:40:52", "upload_time_iso_8601": "2011-05-12T20:40:52.553916Z", "url": "https://files.pythonhosted.org/packages/31/c5/2f3ecd778f60bee1a11173d2025f34daa0cb12b71fe34d0dce2dffeabc06/djason-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "built for Linux-2.6.38-ARCH-i686-Genuine_Intel-R-_CPU_T2500_@_2.00GHz-with-glibc2.0", "digests": {"md5": "ab6e59680e4f6d995300bf55b52358d5", "sha256": "cf7941add51129b343127f8294849e788b2de091738f89907e64624bcb94f4d9"}, "downloads": -1, "filename": "djason-0.2.1.linux-i686.tar.gz", "has_sig": false, "md5_digest": "ab6e59680e4f6d995300bf55b52358d5", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 15388, "upload_time": "2011-05-13T20:15:03", "upload_time_iso_8601": "2011-05-13T20:15:03.343394Z", "url": "https://files.pythonhosted.org/packages/41/db/9f948266878315e0c7e88996f2f025ece4054c3d4423b1dc91c43c9c12a1/djason-0.2.1.linux-i686.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "f08ae76c35caeb38a72428c932c7f3b6", "sha256": "ea52ab35e7a9f6e392d6b01ca0cd911abf8baba971c43a6b58fcede63b63497a"}, "downloads": -1, "filename": "djason-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f08ae76c35caeb38a72428c932c7f3b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6919, "upload_time": "2011-05-13T20:14:52", "upload_time_iso_8601": "2011-05-13T20:14:52.284247Z", "url": "https://files.pythonhosted.org/packages/c0/00/9ce9c13eb883236892c182e878f13ce43b996709fe4e46a67ee49d72cd97/djason-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "built for Linux-2.6.38-ARCH-i686-Genuine_Intel-R-_CPU_T2500_@_2.00GHz-with-glibc2.0", "digests": {"md5": "ab6e59680e4f6d995300bf55b52358d5", "sha256": "cf7941add51129b343127f8294849e788b2de091738f89907e64624bcb94f4d9"}, "downloads": -1, "filename": "djason-0.2.1.linux-i686.tar.gz", "has_sig": false, "md5_digest": "ab6e59680e4f6d995300bf55b52358d5", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 15388, "upload_time": "2011-05-13T20:15:03", "upload_time_iso_8601": "2011-05-13T20:15:03.343394Z", "url": "https://files.pythonhosted.org/packages/41/db/9f948266878315e0c7e88996f2f025ece4054c3d4423b1dc91c43c9c12a1/djason-0.2.1.linux-i686.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "f08ae76c35caeb38a72428c932c7f3b6", "sha256": "ea52ab35e7a9f6e392d6b01ca0cd911abf8baba971c43a6b58fcede63b63497a"}, "downloads": -1, "filename": "djason-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f08ae76c35caeb38a72428c932c7f3b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6919, "upload_time": "2011-05-13T20:14:52", "upload_time_iso_8601": "2011-05-13T20:14:52.284247Z", "url": "https://files.pythonhosted.org/packages/c0/00/9ce9c13eb883236892c182e878f13ce43b996709fe4e46a67ee49d72cd97/djason-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:41 2020"}