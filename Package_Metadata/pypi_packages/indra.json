{"info": {"author": "Benjamin Gyori", "author_email": "benjamin_gyori@hms.harvard.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Mathematics"], "description": "[![Build Status](https://travis-ci.org/sorgerlab/indra.svg?branch=travis_ci)](https://travis-ci.org/sorgerlab/indra) [![Documentation Status](https://readthedocs.org/projects/indra/badge/?version=latest)](https://indra.readthedocs.io/en/latest/?badge=latest)\n\n# INDRA\n\n<img align=\"left\" src=\"https://raw.githubusercontent.com/sorgerlab/indra/master/doc/indra_logo.png\" width=\"300\" height=\"224\" />\n\nINDRA (Integrated Network and Dynamical Reasoning Assembler) is an automated\nmodel assembly system, originally developed for molecular systems biology and\ncurrently being generalized to other domains. INDRA draws on natural language\nprocessing systems and structured databases to collect mechanistic and causal\nassertions, represents them in a standardized form (INDRA Statements), and\nassembles them into various modeling formalisms including causal graphs and\ndynamical models.\n\nAt the core of INDRA are its knowledge-level assembly procedures, allowing\nsources to be assembled into coherent models, a process that involves\ncorrecting systematic input errors, finding and resolving redundancies,\ninferring missing information, filtering to a relevant scope and assessing the\nreliability of causal information.\n\nThe detailed INDRA documentation is available at\n[http://indra.readthedocs.io](http://indra.readthedocs.io).\n\n### Knowledge sources\n\nINDRA is currently integrated with the following natural language processing\nsystems and structured databases. These input modules (available in\n`indra.sources`) all produce INDRA Statements.\n\nGeneral purpose causal relation reading systems:\n\n| Reader     | Module                | Reference                                 |\n|------------|-----------------------|-------------------------------------------|\n| Eidos      | [`indra.sources.eidos`](https://indra.readthedocs.io/en/latest/modules/sources/eidos/index.html#) | https://github.com/clulab/eidos           |\n| TRIPS/CWMS | [`indra.sources.cwms`](https://indra.readthedocs.io/en/latest/modules/sources/cwms/index.html#)  | http://trips.ihmc.us/parser/cgi/cwmsreader|\n| Hume       | [`indra.sources.hume`](https://indra.readthedocs.io/en/latest/modules/sources/hume/index.html)  | https://github.com/BBN-E/Hume             |\n| Sofia      | [`indra.sources.sofia`](https://indra.readthedocs.io/en/latest/modules/sources/sofia/index.html) | https://sofia.worldmodelers.com/ui/       |\n\nBiology-oriented reading systems:\n\n| Reader     | Module                  | Reference                                       |\n|------------|-------------------------|-------------------------------------------------|\n| TRIPS/DRUM | [`indra.sources.trips`](https://indra.readthedocs.io/en/latest/modules/sources/trips/index.html)   | http://trips.ihmc.us/parser/cgi/drum            |\n| REACH      | [`indra.sources.reach`](https://indra.readthedocs.io/en/latest/modules/sources/reach/index.html)   | https://github.com/clulab/reach                 |\n| Sparser    | [`indra.sources.sparser`](https://indra.readthedocs.io/en/latest/modules/sources/sparser/index.html#) | https://github.com/ddmcdonald/sparser           |\n| TEES       | [`indra.sources.tees`](https://indra.readthedocs.io/en/latest/modules/sources/tees/index.html)   | https://github.com/jbjorne/TEES                 |\n| MedScan    | [`indra.sources.medscan`](https://indra.readthedocs.io/en/latest/modules/sources/medscan/index.html) | https://doi.org/10.1093/bioinformatics/btg207   |\n| RLIMS-P    | [`indra.sources.rlimsp`](https://indra.readthedocs.io/en/latest/modules/sources/rlimsp/index.html)  | https://research.bioinformatics.udel.edu/rlimsp |\n| ISI/AMR    | [`indra.sources.isi`](https://indra.readthedocs.io/en/latest/modules/sources/isi/index.html)     | https://github.com/sgarg87/big_mech_isi_gg      |\n| Geneways   | [`indra.sources.geneways`](https://indra.readthedocs.io/en/latest/modules/sources/geneways/index.html) | https://www.ncbi.nlm.nih.gov/pubmed/15016385    |\n\nBiological pathway databases:\n\n| Database / Exchange format | Module                     | Reference                                                       |\n|----------------------------|----------------------------|-----------------------------------------------------------------|\n| PathwayCommons / BioPax    | [`indra.sources.biopax`](https://indra.readthedocs.io/en/latest/modules/sources/biopax/index.html)     | http://pathwaycommons.org/ <br/> http://www.biopax.org/         |\n| Large Corpus / BEL         | [`indra.sources.bel`](https://indra.readthedocs.io/en/latest/modules/sources/bel/index.html)        | https://github.com/pybel/pybel <br/> https://github.com/OpenBEL |\n| Signor                     | [`indra.sources.signor`](https://indra.readthedocs.io/en/latest/modules/sources/signor/index.html)     | https://signor.uniroma2.it/                                     |\n| BioGRID                    | [`indra.sources.biogrid`](https://indra.readthedocs.io/en/latest/modules/sources/biogrid/index.html)    | https://thebiogrid.org/                                         |\n| Target Affinity Spectrum   | [`indra.sources.tas`](https://indra.readthedocs.io/en/latest/modules/sources/tas/index.html#)        | https://doi.org/10.1101/358978                                  |\n| LINCS small molecules      | [`indra.sources.lincs_drug`](https://indra.readthedocs.io/en/latest/modules/sources/lincs_drug/index.html) | http://lincs.hms.harvard.edu/db/sm/                             |\n| HPRD                       | [`indra.sources.hprd`](https://indra.readthedocs.io/en/latest/modules/sources/hprd/index.html) | http://www.hprd.org          |                   |\n| TRRUST                     | [`indra.sources.trrust`](https://indra.readthedocs.io/en/latest/modules/sources/trrust.html) | https://www.grnpedia.org/trrust/          |                   |\n| Phospho.ELM                | [`indra.sources.phosphoelm`](https://indra.readthedocs.io/en/latest/modules/sources/phosphoelm/index.html) | http://phospho.elm.eu.org/ |\n\nCustom knowledge bases:\n\n| Database / Exchange format | Module                        | Reference                            |\n|----------------------------|-------------------------------|--------------------------------------|\n| NDEx / CX                  | [`indra.sources.ndex_cx`](https://indra.readthedocs.io/en/latest/modules/sources/ndex_cx/index.html)       | http://ndexbio.org                   |\n| INDRA DB / INDRA Statements| [`indra.sources.indra_db_rest`](https://indra.readthedocs.io/en/latest/modules/sources/indra_db_rest/index.html) | https://github.com/indralab/indra_db |\n\n\n### Output model assemblers\n\nINDRA also provides several model output assemblers that take INDRA Statements\nas input. The most sophisticated model assembler is the PySB Assembler, which\nimplements a policy-guided automated assembly procedure of a rule-based\nexecutable model (that can then be further compiled into other formats such as\nSBML, Kappa, BNGL and SBGN to connect to a vast ecosystem of downstream tools).\nSeveral other model assembly modules target various network formats for\nvisualization, and graph/structural analysis (PyBEL, CyJS, Graphviz, SBGN,\nCX, SIF, etc.) and curation (HTML, TSV, IndexCards).\nFinally, the English Assembler produces English language descriptions of a set\nof INDRA Statements.\n\nINDRA also supports extension by outside model assembly tools which take\nINDRA Statements as input and produce models. One such example is Delphi\n(https://github.com/ml4ai/delphi), which is a Dynamic Bayesian Network\nmodel assembler. Similarly, outside tools that support INDRA Statements\ncan implement custom visualization methods, such as CauseMos, developed\nby Uncharted Software (https://uncharted.software/).\n\nAssemblers aimed at model-driven discovery and analysis:\n\n| Modeling formalism / Exchange format           | Purpose                                              | Module                  | Reference           |\n|------------------------------------------------|------------------------------------------------------|-------------------------|---------------------|\n| PySB (-> SBML, SBGN, BNGL, Kappa, etc.)        | Detailed, mechanistic modeling, simulation, analysis | [`indra.assemblers.pysb`](https://indra.readthedocs.io/en/latest/modules/assemblers/pysb_assembler.html#) | http://pysb.org     |\n| PyBEL                                          | Causal analysis, visualization                       | [`indra.assemblers.pybel`](https://indra.readthedocs.io/en/latest/modules/assemblers/pybel_assembler.html)| https://github.com/pybel/pybel <br/> https://bel-commons.scai.fraunhofer.de/ |\n| SIF                                            | Network analysis, logic modeling, visualization      | [`indra.assemblers.sif`](https://indra.readthedocs.io/en/latest/modules/assemblers/sif_assembler.html)  | [SIF format](http://manual.cytoscape.org/en/stable/Supported_Network_File_Formats.html#sif-format) |\n| Figaro                                         | Bayesian network inference                           | `indra.assemblers.figaro` | https://github.com/p2t2/figaro/ |\n| KAMI                                           | Knowledge aggregation of protein sites/states and Kappa modeling | [`indra.assemblers.kami`](https://indra.readthedocs.io/en/latest/modules/assemblers/kami_assembler.html) | https://github.com/Kappa-Dev/KAMI |\n\n\nAssemblers primarily aimed at visualization:\n\n| Network / Exchange format                      | Purpose                                              | Module                  | Reference           |\n|------------------------------------------------|------------------------------------------------------|-------------------------|---------------------|\n| Causal Analysis Graph                          | General causal graph visualization                   | [`indra.assemblers.cag`](https://indra.readthedocs.io/en/latest/modules/assemblers/cag_assembler.html)  |                     |\n| CX                                             | Network browsing, versioning on NDEx                 | [`indra.assemblers.cx`](https://indra.readthedocs.io/en/latest/modules/assemblers/cx_assembler.html)   | http://ndexbio.org  |\n| Cytoscape JS                                   | Interactive Cytoscape JS network to embed in websites| [`indra.assemblers.cyjs`](https://indra.readthedocs.io/en/latest/modules/assemblers/cyjs_assembler.html) | http://js.cytoscape.org/ |\n| Graphviz                                       | Static PDF/PNG visualization with powerful automated layout using Graphviz | [`indra.assemblers.graph`](https://indra.readthedocs.io/en/latest/modules/assemblers/graph_assembler.html) | https://www.graphviz.org/ |\n| SBGN                                           | Visualization with Systems Biology Graphical Notation| [`indra.assemblers.sbgn`](https://indra.readthedocs.io/en/latest/modules/assemblers/sbgn_assembler.html) | http://sbgn.org     |\n\nAssemblers primarily aimed at expert curation and browsing:\n\n| Output format                                  | Purpose                                                | Module                  | Reference           |\n|------------------------------------------------|------------------------------------------------------  |-------------------------|---------------------|\n| English language                               | Human-readable descriptions, reports, dialogue         | [`indra.assemblers.english`](https://indra.readthedocs.io/en/latest/modules/assemblers/english_assembler.html) |                  |\n| HTML                                           | Web-based browsing, linking out to provenance, curation| [`indra.assemblers.html`](https://indra.readthedocs.io/en/latest/modules/assemblers/html_assembler.html) | [Curation tutorial](https://indra.readthedocs.io/en/latest/tutorials/html_curation.html) |\n| TSV (Tab/Comma Separated Values)               | Spreadsheet-based browsing and curation                | [`indra.assemblers.tsv`](https://indra.readthedocs.io/en/latest/modules/assemblers/tsv_assembler.html)  |                     |\n| Index Cards                                    | Custom JSON format for curating biological mechanisms  | [`indra.assemblers.index_card`](https://indra.readthedocs.io/en/latest/modules/assemblers/index_card_assembler.html) |               |\n\n### Internal knowledge assembly\n\nA key feature of INDRA is providing internal knowledge-assembly modules\nthat operate on INDRA Statements and perform the following tasks:\n- Redundancy/subsumption/generalization/contradiction finding and resolution\nwith respect to an ontology with the Preassembler\n([`indra.preassembler.Preassembler`](https://indra.readthedocs.io/en/latest/modules/preassembler/index.html#module-indra.preassembler))\n- Belief calculation based on evidence using the BeliefEngine\n([`indra.belief`](https://indra.readthedocs.io/en/latest/modules/belief/index.html))\n- Mapping grounding between multiple ontologies\n([`indra.preassembler.ont_mapper.OntMapper`](https://indra.readthedocs.io/en/latest/modules/preassembler/index.html#module-indra.preassembler.ontology_mapper))\n- Grounding override and disambiguation\n([`indra.preassembler.grounding_mapper.GroundingMapper`](https://indra.readthedocs.io/en/latest/modules/preassembler/index.html#module-indra.preassembler.grounding_mapper))\n- Protein sequence mapping ([`indra.preassembler.site_mapper.SiteMapper`](https://indra.readthedocs.io/en/latest/modules/preassembler/index.html#module-indra.preassembler.sitemapper))\n\nThe internal assembly steps of INDRA including the ones listed above, and also\na large collection of filters (filter by source, belief, the presence of\ngrounding information, semantic filters by entity role, etc.) are exposed\nin the\n[indra.tools.assemble_corpus](http://indra.readthedocs.io/en/latest/modules/tools/index.html#module-indra.tools.assemble_corpus) \nsubmodule. This submodule contains functions that\ntake Statements as input and produce processed Statements as output. They can\nbe composed to form an assembly pipeline connecting knowledge collected from\nsources with an output model.\n\nINDRA also contains utility modules to access literature content (e.g. PubMed),\nontological information (e.g. UniProt, HGNC), and other resources.\n\n## Citation\n\nGyori B.M., Bachman J.A., Subramanian K., Muhlich J.L., Galescu L., Sorger P.K.\n[From word models to executable models of signaling networks using automated\nassembly](http://msb.embopress.org/content/13/11/954) (2017),\nMolecular Systems Biology, 13, 954.\n\n## Installation\n\nFor detailed installation instructions,\n[see the documentation](http://indra.readthedocs.io/en/latest/installation.html).\n\nINDRA currently supports Python 3.5+. The last release of INDRA compatible\nwith Python 2.7 was 1.10.\n\nThe preferred way to install INDRA is by pointing pip to the source repository\nas\n\n    $ pip install git+https://github.com/sorgerlab/indra.git\n\nReleases of INDRA are also available on\n[PyPI](https://pip.pypa.io/en/latest/installing/), you can install the latest\nrelease as\n\n    $ pip install indra\n\nHowever, releases will usually be behind the latest code available in this\nrepository.\n\nINDRA depends on a few standard Python packages. These packages are installed\nby pip during setup.\nFor certain modules and use cases, other \"extra\" dependencies may be needed,\nwhich are described in detail in the\n[documentation](http://indra.readthedocs.io/en/latest/installation.html).\n\n\n## INDRA REST API\nA REST API for INDRA is available at http://api.indra.bio:8000 with\ndocumentation at http://www.indra.bio/rest_api/docs. Note that the REST API\nis ideal for prototyping and for building light-weight web apps, but should\nnot be used for large reading and assembly workflows.\n\n\n## INDRA Docker\nINDRA is available as a Docker image on Dockerhub and can be pulled as\n\n```\ndocker pull labsyspharm/indra\n```\n\nYou can run the INDRA REST API using the container as\n```\ndocker run -id -p 8080:8080 --entrypoint python labsyspharm/indra /sw/indra/rest_api/api.py\n```\n\nTo build the image locally, there are currently two Dockerfiles for\nINDRA and its dependencies. They are available in the following repositories:\n- https://github.com/indralab/indra_docker\n- https://github.com/indralab/indra_deps_docker\n\n## Using INDRA\n\nIn this example INDRA assembles a PySB model from the natural language\ndescription of a mechanism via the [TRIPS reading web\nservice](http://trips.ihmc.us/parser/cgi/drum).\n\n```python\nfrom indra.sources import trips\nfrom indra.assemblers.pysb import PysbAssembler\npa = PysbAssembler()\n# Process a natural language description of a mechanism\ntrips_processor = trips.process_text('MEK2 phosphorylates ERK1 at Thr-202 and Tyr-204')\n# Collect extracted mechanisms in PysbAssembler\npa.add_statements(trips_processor.statements)\n# Assemble the model\nmodel = pa.make_model(policies='two_step')\n```\n\nINDRA also provides an interface for the\n[REACH](http://agathon.sista.arizona.edu:8080/odinweb/) natural language\nprocessor. In this example, a full paper from [PubMed\nCentral](http://www.ncbi.nlm.nih.gov/pmc/) is processed. The paper's PMC ID is\n[PMC3717945](http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3717945/).\n\n```python\nfrom indra.sources import reach\n# Process the neighborhood of BRAF and MAP2K1\nreach_processor = reach.process_pmc('3717945')\n```\nAt this point, `reach_processor.statements` contains a list of INDRA statements\nextracted from the PMC paper.\n\nNext we look at an example of reading the 10 most recent PubMed abstracts on\nBRAF and collecting the results in INDRA statements.\n\n```python\nfrom indra.sources import reach\nfrom indra.literature import pubmed_client\n# Search for 10 most recent abstracts in PubMed on 'BRAF'\npmids = pubmed_client.get_ids('BRAF', retmax=10)\nall_statements = []\nfor pmid in pmids:\n    abs = pubmed_client.get_abstract(pmid)\n    if abs is not None:\n        reach_processor = reach.process_text(abs)\n        if reach_processor is not None:\n            all_statements += reach_processor.statements\n```\nAt this point, the `all_statements` list contains all the statements\nextracted from the 10 abstracts.\n\nThe next example shows querying the [BEL large\ncorpus](http://public.ndexbio.org/#/network/9ea3c170-01ad-11e5-ac0f-000c29cb28fb)\nnetwork for a neighborhood of a given list of proteins using their\nHGNC gene names. This example performs the query via PyBEL.\n\n```python\nfrom indra.sources import bel\n# Process the neighborhood of BRAF and MAP2K1\nbel_processor = bel.process_pybel_neighborhood(['BRAF', 'MAP2K1'])\n```\nAt this point, `bel_processor.statements` contains a list of INDRA statements\nextracted from the neighborhood query.\n\nNext, we look at an example of querying the [Pathway Commons\ndatabase](http://pathwaycommons.org) for paths between two lists of proteins.\nNote: see installation notes above for installing pyjnius, which is required\nfor using the BioPAX API of INDRA.\n\n```python\nfrom indra.sources import biopax\n# Process the neighborhood of BRAF and MAP2K1\nbiopax_processor = biopax.process_pc_pathsfromto(['BRAF', 'RAF1'], ['MAP2K1', 'MAP2K2'])\n```\nAt this point, `biopax_processor.statements` contains a list of INDRA \nStatements extracted from the paths-from-to query.\n\n## Funding\n\nThe development of INDRA has been funded from the following sources:\n\n| Program                                          | Grant number         |\n|--------------------------------------------------|----------------------|\n| DARPA Big Mechanism                              | W911NF-14-1-0397     |\n| DARPA World Modelers                             | W911NF-18-1-0014     |\n| DARPA Communicating with Computers               | W911NF-15-1-0544     |\n| DARPA Automated Scientific Discovery Framework   | W911NF018-1-0124     |\n| DARPA Automating Scientific Knowledge Extraction | HR00111990009        |\n| DARPA Panacea                                    | HR00111920022        |\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/sorgerlab/indra", "keywords": "systems,biology,model,pathway,assembler,nlp,mechanism,biochemistry,network", "license": "", "maintainer": "", "maintainer_email": "", "name": "indra", "package_url": "https://pypi.org/project/indra/", "platform": "", "project_url": "https://pypi.org/project/indra/", "project_urls": {"Homepage": "http://github.com/sorgerlab/indra"}, "release_url": "https://pypi.org/project/indra/1.16.0/", "requires_dist": ["pysb (<=1.9.1,>=1.3.0)", "objectpath", "rdflib", "requests (>=2.11)", "lxml", "ipython", "future", "networkx (>=2)", "pandas", "ndex2 (==2.0.1)", "jinja2", "protmapper (>=0.0.14)", "kappy (==4.0.0rc1); extra == 'all'", "stemming; extra == 'all'", "tzlocal; extra == 'all'", "openpyxl; extra == 'all'", "pyyaml (>=5.1.0); extra == 'all'", "unidecode; extra == 'all'", "gilda; extra == 'all'", "reportlab; extra == 'all'", "flask; extra == 'all'", "paths-graph; extra == 'all'", "adeft; extra == 'all'", "matplotlib; extra == 'all'", "python-libsbml; extra == 'all'", "pyjnius (==1.1.4); extra == 'all'", "obonet; extra == 'all'", "click; extra == 'all'", "cython; extra == 'all'", "pybel (<0.15.0,>=0.14.2); extra == 'all'", "pykqml; extra == 'all'", "boto3; extra == 'all'", "nltk; extra == 'all'", "tweepy; extra == 'all'", "pytz; extra == 'all'", "pygraphviz; extra == 'all'", "flask; extra == 'api'", "boto3; extra == 'aws'", "reportlab; extra == 'aws'", "pybel (<0.15.0,>=0.14.2); extra == 'bel'", "cython; extra == 'biopax'", "pyjnius (==1.1.4); extra == 'biopax'", "pyyaml (>=5.1.0); extra == 'eidos_offline'", "cython; extra == 'eidos_offline'", "pyjnius (==1.1.4); extra == 'eidos_offline'", "kappy (==4.0.0rc1); extra == 'explanation'", "paths-graph; extra == 'explanation'", "stemming; extra == 'geneways'", "nltk; extra == 'geneways'", "pygraphviz; extra == 'graph'", "adeft; extra == 'grounding'", "gilda; extra == 'grounding'", "nltk; extra == 'isi'", "unidecode; extra == 'isi'", "pytz; extra == 'machine'", "tzlocal; extra == 'machine'", "tweepy; extra == 'machine'", "pyyaml (>=5.1.0); extra == 'machine'", "click; extra == 'machine'", "obonet; extra == 'obo'", "matplotlib; extra == 'plot'", "cython; extra == 'reach_offline'", "pyjnius (==1.1.4); extra == 'reach_offline'", "python-libsbml; extra == 'sbml'", "openpyxl; extra == 'sofia'", "pykqml; extra == 'trips_offline'"], "requires_python": "", "summary": "Integrated Network and Dynamical Reasoning Assembler", "version": "1.16.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/sorgerlab/indra\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e55e6239da8e5a7454ae54b26a4e7daf52ddf49/68747470733a2f2f7472617669732d63692e6f72672f736f726765726c61622f696e6472612e7376673f6272616e63683d7472617669735f6369\"></a> <a href=\"https://indra.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/19d8617689bcbc331e5398e7356e1f0d0c2e006c/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f696e6472612f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<h1>INDRA</h1>\n<img align=\"left\" height=\"224\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e26f5392445142c91a27695826f164e5dd651abb/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f736f726765726c61622f696e6472612f6d61737465722f646f632f696e6472615f6c6f676f2e706e67\" width=\"300\">\n<p>INDRA (Integrated Network and Dynamical Reasoning Assembler) is an automated\nmodel assembly system, originally developed for molecular systems biology and\ncurrently being generalized to other domains. INDRA draws on natural language\nprocessing systems and structured databases to collect mechanistic and causal\nassertions, represents them in a standardized form (INDRA Statements), and\nassembles them into various modeling formalisms including causal graphs and\ndynamical models.</p>\n<p>At the core of INDRA are its knowledge-level assembly procedures, allowing\nsources to be assembled into coherent models, a process that involves\ncorrecting systematic input errors, finding and resolving redundancies,\ninferring missing information, filtering to a relevant scope and assessing the\nreliability of causal information.</p>\n<p>The detailed INDRA documentation is available at\n<a href=\"http://indra.readthedocs.io\" rel=\"nofollow\">http://indra.readthedocs.io</a>.</p>\n<h3>Knowledge sources</h3>\n<p>INDRA is currently integrated with the following natural language processing\nsystems and structured databases. These input modules (available in\n<code>indra.sources</code>) all produce INDRA Statements.</p>\n<p>General purpose causal relation reading systems:</p>\n<table>\n<thead>\n<tr>\n<th>Reader</th>\n<th>Module</th>\n<th>Reference</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Eidos</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/eidos/index.html#\" rel=\"nofollow\"><code>indra.sources.eidos</code></a></td>\n<td><a href=\"https://github.com/clulab/eidos\" rel=\"nofollow\">https://github.com/clulab/eidos</a></td>\n</tr>\n<tr>\n<td>TRIPS/CWMS</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/cwms/index.html#\" rel=\"nofollow\"><code>indra.sources.cwms</code></a></td>\n<td><a href=\"http://trips.ihmc.us/parser/cgi/cwmsreader\" rel=\"nofollow\">http://trips.ihmc.us/parser/cgi/cwmsreader</a></td>\n</tr>\n<tr>\n<td>Hume</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/hume/index.html\" rel=\"nofollow\"><code>indra.sources.hume</code></a></td>\n<td><a href=\"https://github.com/BBN-E/Hume\" rel=\"nofollow\">https://github.com/BBN-E/Hume</a></td>\n</tr>\n<tr>\n<td>Sofia</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/sofia/index.html\" rel=\"nofollow\"><code>indra.sources.sofia</code></a></td>\n<td><a href=\"https://sofia.worldmodelers.com/ui/\" rel=\"nofollow\">https://sofia.worldmodelers.com/ui/</a></td>\n</tr></tbody></table>\n<p>Biology-oriented reading systems:</p>\n<table>\n<thead>\n<tr>\n<th>Reader</th>\n<th>Module</th>\n<th>Reference</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>TRIPS/DRUM</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/trips/index.html\" rel=\"nofollow\"><code>indra.sources.trips</code></a></td>\n<td><a href=\"http://trips.ihmc.us/parser/cgi/drum\" rel=\"nofollow\">http://trips.ihmc.us/parser/cgi/drum</a></td>\n</tr>\n<tr>\n<td>REACH</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/reach/index.html\" rel=\"nofollow\"><code>indra.sources.reach</code></a></td>\n<td><a href=\"https://github.com/clulab/reach\" rel=\"nofollow\">https://github.com/clulab/reach</a></td>\n</tr>\n<tr>\n<td>Sparser</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/sparser/index.html#\" rel=\"nofollow\"><code>indra.sources.sparser</code></a></td>\n<td><a href=\"https://github.com/ddmcdonald/sparser\" rel=\"nofollow\">https://github.com/ddmcdonald/sparser</a></td>\n</tr>\n<tr>\n<td>TEES</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/tees/index.html\" rel=\"nofollow\"><code>indra.sources.tees</code></a></td>\n<td><a href=\"https://github.com/jbjorne/TEES\" rel=\"nofollow\">https://github.com/jbjorne/TEES</a></td>\n</tr>\n<tr>\n<td>MedScan</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/medscan/index.html\" rel=\"nofollow\"><code>indra.sources.medscan</code></a></td>\n<td><a href=\"https://doi.org/10.1093/bioinformatics/btg207\" rel=\"nofollow\">https://doi.org/10.1093/bioinformatics/btg207</a></td>\n</tr>\n<tr>\n<td>RLIMS-P</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/rlimsp/index.html\" rel=\"nofollow\"><code>indra.sources.rlimsp</code></a></td>\n<td><a href=\"https://research.bioinformatics.udel.edu/rlimsp\" rel=\"nofollow\">https://research.bioinformatics.udel.edu/rlimsp</a></td>\n</tr>\n<tr>\n<td>ISI/AMR</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/isi/index.html\" rel=\"nofollow\"><code>indra.sources.isi</code></a></td>\n<td><a href=\"https://github.com/sgarg87/big_mech_isi_gg\" rel=\"nofollow\">https://github.com/sgarg87/big_mech_isi_gg</a></td>\n</tr>\n<tr>\n<td>Geneways</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/geneways/index.html\" rel=\"nofollow\"><code>indra.sources.geneways</code></a></td>\n<td><a href=\"https://www.ncbi.nlm.nih.gov/pubmed/15016385\" rel=\"nofollow\">https://www.ncbi.nlm.nih.gov/pubmed/15016385</a></td>\n</tr></tbody></table>\n<p>Biological pathway databases:</p>\n<table>\n<thead>\n<tr>\n<th>Database / Exchange format</th>\n<th>Module</th>\n<th>Reference</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PathwayCommons / BioPax</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/biopax/index.html\" rel=\"nofollow\"><code>indra.sources.biopax</code></a></td>\n<td><a href=\"http://pathwaycommons.org/\" rel=\"nofollow\">http://pathwaycommons.org/</a> <br> <a href=\"http://www.biopax.org/\" rel=\"nofollow\">http://www.biopax.org/</a></td>\n</tr>\n<tr>\n<td>Large Corpus / BEL</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/bel/index.html\" rel=\"nofollow\"><code>indra.sources.bel</code></a></td>\n<td><a href=\"https://github.com/pybel/pybel\" rel=\"nofollow\">https://github.com/pybel/pybel</a> <br> <a href=\"https://github.com/OpenBEL\" rel=\"nofollow\">https://github.com/OpenBEL</a></td>\n</tr>\n<tr>\n<td>Signor</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/signor/index.html\" rel=\"nofollow\"><code>indra.sources.signor</code></a></td>\n<td><a href=\"https://signor.uniroma2.it/\" rel=\"nofollow\">https://signor.uniroma2.it/</a></td>\n</tr>\n<tr>\n<td>BioGRID</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/biogrid/index.html\" rel=\"nofollow\"><code>indra.sources.biogrid</code></a></td>\n<td><a href=\"https://thebiogrid.org/\" rel=\"nofollow\">https://thebiogrid.org/</a></td>\n</tr>\n<tr>\n<td>Target Affinity Spectrum</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/tas/index.html#\" rel=\"nofollow\"><code>indra.sources.tas</code></a></td>\n<td><a href=\"https://doi.org/10.1101/358978\" rel=\"nofollow\">https://doi.org/10.1101/358978</a></td>\n</tr>\n<tr>\n<td>LINCS small molecules</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/lincs_drug/index.html\" rel=\"nofollow\"><code>indra.sources.lincs_drug</code></a></td>\n<td><a href=\"http://lincs.hms.harvard.edu/db/sm/\" rel=\"nofollow\">http://lincs.hms.harvard.edu/db/sm/</a></td>\n</tr>\n<tr>\n<td>HPRD</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/hprd/index.html\" rel=\"nofollow\"><code>indra.sources.hprd</code></a></td>\n<td><a href=\"http://www.hprd.org\" rel=\"nofollow\">http://www.hprd.org</a></td>\n</tr>\n<tr>\n<td>TRRUST</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/trrust.html\" rel=\"nofollow\"><code>indra.sources.trrust</code></a></td>\n<td><a href=\"https://www.grnpedia.org/trrust/\" rel=\"nofollow\">https://www.grnpedia.org/trrust/</a></td>\n</tr>\n<tr>\n<td>Phospho.ELM</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/phosphoelm/index.html\" rel=\"nofollow\"><code>indra.sources.phosphoelm</code></a></td>\n<td><a href=\"http://phospho.elm.eu.org/\" rel=\"nofollow\">http://phospho.elm.eu.org/</a></td>\n</tr></tbody></table>\n<p>Custom knowledge bases:</p>\n<table>\n<thead>\n<tr>\n<th>Database / Exchange format</th>\n<th>Module</th>\n<th>Reference</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NDEx / CX</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/ndex_cx/index.html\" rel=\"nofollow\"><code>indra.sources.ndex_cx</code></a></td>\n<td><a href=\"http://ndexbio.org\" rel=\"nofollow\">http://ndexbio.org</a></td>\n</tr>\n<tr>\n<td>INDRA DB / INDRA Statements</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/sources/indra_db_rest/index.html\" rel=\"nofollow\"><code>indra.sources.indra_db_rest</code></a></td>\n<td><a href=\"https://github.com/indralab/indra_db\" rel=\"nofollow\">https://github.com/indralab/indra_db</a></td>\n</tr></tbody></table>\n<h3>Output model assemblers</h3>\n<p>INDRA also provides several model output assemblers that take INDRA Statements\nas input. The most sophisticated model assembler is the PySB Assembler, which\nimplements a policy-guided automated assembly procedure of a rule-based\nexecutable model (that can then be further compiled into other formats such as\nSBML, Kappa, BNGL and SBGN to connect to a vast ecosystem of downstream tools).\nSeveral other model assembly modules target various network formats for\nvisualization, and graph/structural analysis (PyBEL, CyJS, Graphviz, SBGN,\nCX, SIF, etc.) and curation (HTML, TSV, IndexCards).\nFinally, the English Assembler produces English language descriptions of a set\nof INDRA Statements.</p>\n<p>INDRA also supports extension by outside model assembly tools which take\nINDRA Statements as input and produce models. One such example is Delphi\n(<a href=\"https://github.com/ml4ai/delphi\" rel=\"nofollow\">https://github.com/ml4ai/delphi</a>), which is a Dynamic Bayesian Network\nmodel assembler. Similarly, outside tools that support INDRA Statements\ncan implement custom visualization methods, such as CauseMos, developed\nby Uncharted Software (<a href=\"https://uncharted.software/\" rel=\"nofollow\">https://uncharted.software/</a>).</p>\n<p>Assemblers aimed at model-driven discovery and analysis:</p>\n<table>\n<thead>\n<tr>\n<th>Modeling formalism / Exchange format</th>\n<th>Purpose</th>\n<th>Module</th>\n<th>Reference</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PySB (-&gt; SBML, SBGN, BNGL, Kappa, etc.)</td>\n<td>Detailed, mechanistic modeling, simulation, analysis</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/assemblers/pysb_assembler.html#\" rel=\"nofollow\"><code>indra.assemblers.pysb</code></a></td>\n<td><a href=\"http://pysb.org\" rel=\"nofollow\">http://pysb.org</a></td>\n</tr>\n<tr>\n<td>PyBEL</td>\n<td>Causal analysis, visualization</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/assemblers/pybel_assembler.html\" rel=\"nofollow\"><code>indra.assemblers.pybel</code></a></td>\n<td><a href=\"https://github.com/pybel/pybel\" rel=\"nofollow\">https://github.com/pybel/pybel</a> <br> <a href=\"https://bel-commons.scai.fraunhofer.de/\" rel=\"nofollow\">https://bel-commons.scai.fraunhofer.de/</a></td>\n</tr>\n<tr>\n<td>SIF</td>\n<td>Network analysis, logic modeling, visualization</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/assemblers/sif_assembler.html\" rel=\"nofollow\"><code>indra.assemblers.sif</code></a></td>\n<td><a href=\"http://manual.cytoscape.org/en/stable/Supported_Network_File_Formats.html#sif-format\" rel=\"nofollow\">SIF format</a></td>\n</tr>\n<tr>\n<td>Figaro</td>\n<td>Bayesian network inference</td>\n<td><code>indra.assemblers.figaro</code></td>\n<td><a href=\"https://github.com/p2t2/figaro/\" rel=\"nofollow\">https://github.com/p2t2/figaro/</a></td>\n</tr>\n<tr>\n<td>KAMI</td>\n<td>Knowledge aggregation of protein sites/states and Kappa modeling</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/assemblers/kami_assembler.html\" rel=\"nofollow\"><code>indra.assemblers.kami</code></a></td>\n<td><a href=\"https://github.com/Kappa-Dev/KAMI\" rel=\"nofollow\">https://github.com/Kappa-Dev/KAMI</a></td>\n</tr></tbody></table>\n<p>Assemblers primarily aimed at visualization:</p>\n<table>\n<thead>\n<tr>\n<th>Network / Exchange format</th>\n<th>Purpose</th>\n<th>Module</th>\n<th>Reference</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Causal Analysis Graph</td>\n<td>General causal graph visualization</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/assemblers/cag_assembler.html\" rel=\"nofollow\"><code>indra.assemblers.cag</code></a></td>\n<td></td>\n</tr>\n<tr>\n<td>CX</td>\n<td>Network browsing, versioning on NDEx</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/assemblers/cx_assembler.html\" rel=\"nofollow\"><code>indra.assemblers.cx</code></a></td>\n<td><a href=\"http://ndexbio.org\" rel=\"nofollow\">http://ndexbio.org</a></td>\n</tr>\n<tr>\n<td>Cytoscape JS</td>\n<td>Interactive Cytoscape JS network to embed in websites</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/assemblers/cyjs_assembler.html\" rel=\"nofollow\"><code>indra.assemblers.cyjs</code></a></td>\n<td><a href=\"http://js.cytoscape.org/\" rel=\"nofollow\">http://js.cytoscape.org/</a></td>\n</tr>\n<tr>\n<td>Graphviz</td>\n<td>Static PDF/PNG visualization with powerful automated layout using Graphviz</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/assemblers/graph_assembler.html\" rel=\"nofollow\"><code>indra.assemblers.graph</code></a></td>\n<td><a href=\"https://www.graphviz.org/\" rel=\"nofollow\">https://www.graphviz.org/</a></td>\n</tr>\n<tr>\n<td>SBGN</td>\n<td>Visualization with Systems Biology Graphical Notation</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/assemblers/sbgn_assembler.html\" rel=\"nofollow\"><code>indra.assemblers.sbgn</code></a></td>\n<td><a href=\"http://sbgn.org\" rel=\"nofollow\">http://sbgn.org</a></td>\n</tr></tbody></table>\n<p>Assemblers primarily aimed at expert curation and browsing:</p>\n<table>\n<thead>\n<tr>\n<th>Output format</th>\n<th>Purpose</th>\n<th>Module</th>\n<th>Reference</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>English language</td>\n<td>Human-readable descriptions, reports, dialogue</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/assemblers/english_assembler.html\" rel=\"nofollow\"><code>indra.assemblers.english</code></a></td>\n<td></td>\n</tr>\n<tr>\n<td>HTML</td>\n<td>Web-based browsing, linking out to provenance, curation</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/assemblers/html_assembler.html\" rel=\"nofollow\"><code>indra.assemblers.html</code></a></td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/tutorials/html_curation.html\" rel=\"nofollow\">Curation tutorial</a></td>\n</tr>\n<tr>\n<td>TSV (Tab/Comma Separated Values)</td>\n<td>Spreadsheet-based browsing and curation</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/assemblers/tsv_assembler.html\" rel=\"nofollow\"><code>indra.assemblers.tsv</code></a></td>\n<td></td>\n</tr>\n<tr>\n<td>Index Cards</td>\n<td>Custom JSON format for curating biological mechanisms</td>\n<td><a href=\"https://indra.readthedocs.io/en/latest/modules/assemblers/index_card_assembler.html\" rel=\"nofollow\"><code>indra.assemblers.index_card</code></a></td>\n<td></td>\n</tr></tbody></table>\n<h3>Internal knowledge assembly</h3>\n<p>A key feature of INDRA is providing internal knowledge-assembly modules\nthat operate on INDRA Statements and perform the following tasks:</p>\n<ul>\n<li>Redundancy/subsumption/generalization/contradiction finding and resolution\nwith respect to an ontology with the Preassembler\n(<a href=\"https://indra.readthedocs.io/en/latest/modules/preassembler/index.html#module-indra.preassembler\" rel=\"nofollow\"><code>indra.preassembler.Preassembler</code></a>)</li>\n<li>Belief calculation based on evidence using the BeliefEngine\n(<a href=\"https://indra.readthedocs.io/en/latest/modules/belief/index.html\" rel=\"nofollow\"><code>indra.belief</code></a>)</li>\n<li>Mapping grounding between multiple ontologies\n(<a href=\"https://indra.readthedocs.io/en/latest/modules/preassembler/index.html#module-indra.preassembler.ontology_mapper\" rel=\"nofollow\"><code>indra.preassembler.ont_mapper.OntMapper</code></a>)</li>\n<li>Grounding override and disambiguation\n(<a href=\"https://indra.readthedocs.io/en/latest/modules/preassembler/index.html#module-indra.preassembler.grounding_mapper\" rel=\"nofollow\"><code>indra.preassembler.grounding_mapper.GroundingMapper</code></a>)</li>\n<li>Protein sequence mapping (<a href=\"https://indra.readthedocs.io/en/latest/modules/preassembler/index.html#module-indra.preassembler.sitemapper\" rel=\"nofollow\"><code>indra.preassembler.site_mapper.SiteMapper</code></a>)</li>\n</ul>\n<p>The internal assembly steps of INDRA including the ones listed above, and also\na large collection of filters (filter by source, belief, the presence of\ngrounding information, semantic filters by entity role, etc.) are exposed\nin the\n<a href=\"http://indra.readthedocs.io/en/latest/modules/tools/index.html#module-indra.tools.assemble_corpus\" rel=\"nofollow\">indra.tools.assemble_corpus</a>\nsubmodule. This submodule contains functions that\ntake Statements as input and produce processed Statements as output. They can\nbe composed to form an assembly pipeline connecting knowledge collected from\nsources with an output model.</p>\n<p>INDRA also contains utility modules to access literature content (e.g. PubMed),\nontological information (e.g. UniProt, HGNC), and other resources.</p>\n<h2>Citation</h2>\n<p>Gyori B.M., Bachman J.A., Subramanian K., Muhlich J.L., Galescu L., Sorger P.K.\n<a href=\"http://msb.embopress.org/content/13/11/954\" rel=\"nofollow\">From word models to executable models of signaling networks using automated\nassembly</a> (2017),\nMolecular Systems Biology, 13, 954.</p>\n<h2>Installation</h2>\n<p>For detailed installation instructions,\n<a href=\"http://indra.readthedocs.io/en/latest/installation.html\" rel=\"nofollow\">see the documentation</a>.</p>\n<p>INDRA currently supports Python 3.5+. The last release of INDRA compatible\nwith Python 2.7 was 1.10.</p>\n<p>The preferred way to install INDRA is by pointing pip to the source repository\nas</p>\n<pre><code>$ pip install git+https://github.com/sorgerlab/indra.git\n</code></pre>\n<p>Releases of INDRA are also available on\n<a href=\"https://pip.pypa.io/en/latest/installing/\" rel=\"nofollow\">PyPI</a>, you can install the latest\nrelease as</p>\n<pre><code>$ pip install indra\n</code></pre>\n<p>However, releases will usually be behind the latest code available in this\nrepository.</p>\n<p>INDRA depends on a few standard Python packages. These packages are installed\nby pip during setup.\nFor certain modules and use cases, other \"extra\" dependencies may be needed,\nwhich are described in detail in the\n<a href=\"http://indra.readthedocs.io/en/latest/installation.html\" rel=\"nofollow\">documentation</a>.</p>\n<h2>INDRA REST API</h2>\n<p>A REST API for INDRA is available at <a href=\"http://api.indra.bio:8000\" rel=\"nofollow\">http://api.indra.bio:8000</a> with\ndocumentation at <a href=\"http://www.indra.bio/rest_api/docs\" rel=\"nofollow\">http://www.indra.bio/rest_api/docs</a>. Note that the REST API\nis ideal for prototyping and for building light-weight web apps, but should\nnot be used for large reading and assembly workflows.</p>\n<h2>INDRA Docker</h2>\n<p>INDRA is available as a Docker image on Dockerhub and can be pulled as</p>\n<pre><code>docker pull labsyspharm/indra\n</code></pre>\n<p>You can run the INDRA REST API using the container as</p>\n<pre><code>docker run -id -p 8080:8080 --entrypoint python labsyspharm/indra /sw/indra/rest_api/api.py\n</code></pre>\n<p>To build the image locally, there are currently two Dockerfiles for\nINDRA and its dependencies. They are available in the following repositories:</p>\n<ul>\n<li><a href=\"https://github.com/indralab/indra_docker\" rel=\"nofollow\">https://github.com/indralab/indra_docker</a></li>\n<li><a href=\"https://github.com/indralab/indra_deps_docker\" rel=\"nofollow\">https://github.com/indralab/indra_deps_docker</a></li>\n</ul>\n<h2>Using INDRA</h2>\n<p>In this example INDRA assembles a PySB model from the natural language\ndescription of a mechanism via the <a href=\"http://trips.ihmc.us/parser/cgi/drum\" rel=\"nofollow\">TRIPS reading web\nservice</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">indra.sources</span> <span class=\"kn\">import</span> <span class=\"n\">trips</span>\n<span class=\"kn\">from</span> <span class=\"nn\">indra.assemblers.pysb</span> <span class=\"kn\">import</span> <span class=\"n\">PysbAssembler</span>\n<span class=\"n\">pa</span> <span class=\"o\">=</span> <span class=\"n\">PysbAssembler</span><span class=\"p\">()</span>\n<span class=\"c1\"># Process a natural language description of a mechanism</span>\n<span class=\"n\">trips_processor</span> <span class=\"o\">=</span> <span class=\"n\">trips</span><span class=\"o\">.</span><span class=\"n\">process_text</span><span class=\"p\">(</span><span class=\"s1\">'MEK2 phosphorylates ERK1 at Thr-202 and Tyr-204'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Collect extracted mechanisms in PysbAssembler</span>\n<span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">add_statements</span><span class=\"p\">(</span><span class=\"n\">trips_processor</span><span class=\"o\">.</span><span class=\"n\">statements</span><span class=\"p\">)</span>\n<span class=\"c1\"># Assemble the model</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">make_model</span><span class=\"p\">(</span><span class=\"n\">policies</span><span class=\"o\">=</span><span class=\"s1\">'two_step'</span><span class=\"p\">)</span>\n</pre>\n<p>INDRA also provides an interface for the\n<a href=\"http://agathon.sista.arizona.edu:8080/odinweb/\" rel=\"nofollow\">REACH</a> natural language\nprocessor. In this example, a full paper from <a href=\"http://www.ncbi.nlm.nih.gov/pmc/\" rel=\"nofollow\">PubMed\nCentral</a> is processed. The paper's PMC ID is\n<a href=\"http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3717945/\" rel=\"nofollow\">PMC3717945</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">indra.sources</span> <span class=\"kn\">import</span> <span class=\"n\">reach</span>\n<span class=\"c1\"># Process the neighborhood of BRAF and MAP2K1</span>\n<span class=\"n\">reach_processor</span> <span class=\"o\">=</span> <span class=\"n\">reach</span><span class=\"o\">.</span><span class=\"n\">process_pmc</span><span class=\"p\">(</span><span class=\"s1\">'3717945'</span><span class=\"p\">)</span>\n</pre>\n<p>At this point, <code>reach_processor.statements</code> contains a list of INDRA statements\nextracted from the PMC paper.</p>\n<p>Next we look at an example of reading the 10 most recent PubMed abstracts on\nBRAF and collecting the results in INDRA statements.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">indra.sources</span> <span class=\"kn\">import</span> <span class=\"n\">reach</span>\n<span class=\"kn\">from</span> <span class=\"nn\">indra.literature</span> <span class=\"kn\">import</span> <span class=\"n\">pubmed_client</span>\n<span class=\"c1\"># Search for 10 most recent abstracts in PubMed on 'BRAF'</span>\n<span class=\"n\">pmids</span> <span class=\"o\">=</span> <span class=\"n\">pubmed_client</span><span class=\"o\">.</span><span class=\"n\">get_ids</span><span class=\"p\">(</span><span class=\"s1\">'BRAF'</span><span class=\"p\">,</span> <span class=\"n\">retmax</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">all_statements</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">pmid</span> <span class=\"ow\">in</span> <span class=\"n\">pmids</span><span class=\"p\">:</span>\n    <span class=\"nb\">abs</span> <span class=\"o\">=</span> <span class=\"n\">pubmed_client</span><span class=\"o\">.</span><span class=\"n\">get_abstract</span><span class=\"p\">(</span><span class=\"n\">pmid</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"nb\">abs</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">reach_processor</span> <span class=\"o\">=</span> <span class=\"n\">reach</span><span class=\"o\">.</span><span class=\"n\">process_text</span><span class=\"p\">(</span><span class=\"nb\">abs</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">reach_processor</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">all_statements</span> <span class=\"o\">+=</span> <span class=\"n\">reach_processor</span><span class=\"o\">.</span><span class=\"n\">statements</span>\n</pre>\n<p>At this point, the <code>all_statements</code> list contains all the statements\nextracted from the 10 abstracts.</p>\n<p>The next example shows querying the <a href=\"http://public.ndexbio.org/#/network/9ea3c170-01ad-11e5-ac0f-000c29cb28fb\" rel=\"nofollow\">BEL large\ncorpus</a>\nnetwork for a neighborhood of a given list of proteins using their\nHGNC gene names. This example performs the query via PyBEL.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">indra.sources</span> <span class=\"kn\">import</span> <span class=\"n\">bel</span>\n<span class=\"c1\"># Process the neighborhood of BRAF and MAP2K1</span>\n<span class=\"n\">bel_processor</span> <span class=\"o\">=</span> <span class=\"n\">bel</span><span class=\"o\">.</span><span class=\"n\">process_pybel_neighborhood</span><span class=\"p\">([</span><span class=\"s1\">'BRAF'</span><span class=\"p\">,</span> <span class=\"s1\">'MAP2K1'</span><span class=\"p\">])</span>\n</pre>\n<p>At this point, <code>bel_processor.statements</code> contains a list of INDRA statements\nextracted from the neighborhood query.</p>\n<p>Next, we look at an example of querying the <a href=\"http://pathwaycommons.org\" rel=\"nofollow\">Pathway Commons\ndatabase</a> for paths between two lists of proteins.\nNote: see installation notes above for installing pyjnius, which is required\nfor using the BioPAX API of INDRA.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">indra.sources</span> <span class=\"kn\">import</span> <span class=\"n\">biopax</span>\n<span class=\"c1\"># Process the neighborhood of BRAF and MAP2K1</span>\n<span class=\"n\">biopax_processor</span> <span class=\"o\">=</span> <span class=\"n\">biopax</span><span class=\"o\">.</span><span class=\"n\">process_pc_pathsfromto</span><span class=\"p\">([</span><span class=\"s1\">'BRAF'</span><span class=\"p\">,</span> <span class=\"s1\">'RAF1'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'MAP2K1'</span><span class=\"p\">,</span> <span class=\"s1\">'MAP2K2'</span><span class=\"p\">])</span>\n</pre>\n<p>At this point, <code>biopax_processor.statements</code> contains a list of INDRA\nStatements extracted from the paths-from-to query.</p>\n<h2>Funding</h2>\n<p>The development of INDRA has been funded from the following sources:</p>\n<table>\n<thead>\n<tr>\n<th>Program</th>\n<th>Grant number</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DARPA Big Mechanism</td>\n<td>W911NF-14-1-0397</td>\n</tr>\n<tr>\n<td>DARPA World Modelers</td>\n<td>W911NF-18-1-0014</td>\n</tr>\n<tr>\n<td>DARPA Communicating with Computers</td>\n<td>W911NF-15-1-0544</td>\n</tr>\n<tr>\n<td>DARPA Automated Scientific Discovery Framework</td>\n<td>W911NF018-1-0124</td>\n</tr>\n<tr>\n<td>DARPA Automating Scientific Knowledge Extraction</td>\n<td>HR00111990009</td>\n</tr>\n<tr>\n<td>DARPA Panacea</td>\n<td>HR00111920022</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6570769, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "0b7c0ea38b98087db8b9509208874bf3", "sha256": "01fc604370b1b5f27f0c1057b238b590452e0fa027b58a73893c6b52eb82da85"}, "downloads": -1, "filename": "indra-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0b7c0ea38b98087db8b9509208874bf3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50175, "upload_time": "2016-04-07T22:51:53", "upload_time_iso_8601": "2016-04-07T22:51:53.138696Z", "url": "https://files.pythonhosted.org/packages/9a/3a/5af9f8f46f67d2b2b14eb9d3f4a4b93bc37e7b053398c292830974edd2a5/indra-1.0.1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "2470a4389998c38bb1d1870a201098ad", "sha256": "00e28f73bae1f2e1f3070b57a01929e253ef3523f5133f706d55a9b51c005bb7"}, "downloads": -1, "filename": "indra-1.1.1.tar.gz", "has_sig": false, "md5_digest": "2470a4389998c38bb1d1870a201098ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19715452, "upload_time": "2016-04-14T15:39:23", "upload_time_iso_8601": "2016-04-14T15:39:23.101367Z", "url": "https://files.pythonhosted.org/packages/dc/4f/7bcc071070bf8ac5538a0ec51aeba95df70b5b465663bf34579d9fd450e1/indra-1.1.1.tar.gz", "yanked": false}], "1.10.0": [{"comment_text": "", "digests": {"md5": "acbf0a7d7718b347ff46bf92f1bd2191", "sha256": "2b2df33ef096b4841c9f2a8ed96e0d7d97e757798437351885f6d0d6c06f4fa3"}, "downloads": -1, "filename": "indra-1.10.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "acbf0a7d7718b347ff46bf92f1bd2191", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 50559918, "upload_time": "2018-11-27T13:45:16", "upload_time_iso_8601": "2018-11-27T13:45:16.665361Z", "url": "https://files.pythonhosted.org/packages/16/32/b3a774b8a0b38a488e4f71747cbc9ebff2b6fa5652d4a525e212fb56342c/indra-1.10.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e081ba0dfabc0919cda4b3ce3f3685c1", "sha256": "19ccc5d906ce1059c18298759bb563bfb5e31cce4f64880d357bda12c9b84a73"}, "downloads": -1, "filename": "indra-1.10.0.tar.gz", "has_sig": false, "md5_digest": "e081ba0dfabc0919cda4b3ce3f3685c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61776710, "upload_time": "2018-11-27T13:45:29", "upload_time_iso_8601": "2018-11-27T13:45:29.313752Z", "url": "https://files.pythonhosted.org/packages/cb/51/b04ac15acb941b73936fa963fb4432ed4a2d212a8d7029cdaeb51238015b/indra-1.10.0.tar.gz", "yanked": false}], "1.11.0": [{"comment_text": "", "digests": {"md5": "6404ce3d854024386213afe53438be1f", "sha256": "9d09e98573b1d38993a1064bd1deede4a62c3f5b557472220140d3afb7c57847"}, "downloads": -1, "filename": "indra-1.11.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6404ce3d854024386213afe53438be1f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41056542, "upload_time": "2019-03-05T01:34:48", "upload_time_iso_8601": "2019-03-05T01:34:48.521833Z", "url": "https://files.pythonhosted.org/packages/00/c4/0a827fb29e03175382d12c499c6adc60534af8dd3732c35992ce16abe0c9/indra-1.11.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "814b9c0c36d469b8e9931f27720c855e", "sha256": "35aa76009dbbf1f9006799bcd2d694be4d76c8dddd2daefd35f3408b34d1e9b4"}, "downloads": -1, "filename": "indra-1.11.0.tar.gz", "has_sig": false, "md5_digest": "814b9c0c36d469b8e9931f27720c855e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56087579, "upload_time": "2019-03-05T01:34:57", "upload_time_iso_8601": "2019-03-05T01:34:57.007428Z", "url": "https://files.pythonhosted.org/packages/f0/3e/3042b24a895ef47152ac4622db6a451ee646970acefec3ddf1fd46935a07/indra-1.11.0.tar.gz", "yanked": false}], "1.12.0": [{"comment_text": "", "digests": {"md5": "517257ba683270d63679a3d1d507271e", "sha256": "e1342184f4b2386c67e3198436c205c3b1cb870dea0f0662dfc411a3caebc065"}, "downloads": -1, "filename": "indra-1.12.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "517257ba683270d63679a3d1d507271e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 42355729, "upload_time": "2019-03-31T21:27:02", "upload_time_iso_8601": "2019-03-31T21:27:02.178989Z", "url": "https://files.pythonhosted.org/packages/64/51/c77d3b93ca90cd5697a1632a111d85eca82a880cf5171b070aa4bc0c6689/indra-1.12.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7880abb96cea7249f3d0aaa65a5a1b9e", "sha256": "b4cca57db5321f1bec4db68707f739d25d5c7ffdb4602fe1370d2e634f8705e0"}, "downloads": -1, "filename": "indra-1.12.0.tar.gz", "has_sig": false, "md5_digest": "7880abb96cea7249f3d0aaa65a5a1b9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53001141, "upload_time": "2019-03-31T21:29:47", "upload_time_iso_8601": "2019-03-31T21:29:47.705504Z", "url": "https://files.pythonhosted.org/packages/fb/bc/90de967323b8d132ee0feb20dfa5df1accb35d0387c780837302d3e81d05/indra-1.12.0.tar.gz", "yanked": false}], "1.13.0": [{"comment_text": "", "digests": {"md5": "51987b3b69e11d48ab5e0ede16344e2a", "sha256": "b525fdcc97f0b91af44ae1c1769d3e2117a9b1ab5cf4186cb9f092b89f0e2907"}, "downloads": -1, "filename": "indra-1.13.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "51987b3b69e11d48ab5e0ede16344e2a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 43211275, "upload_time": "2019-06-12T18:52:29", "upload_time_iso_8601": "2019-06-12T18:52:29.379650Z", "url": "https://files.pythonhosted.org/packages/e7/b7/110ece0643c233cf4e3dedc794fd5a37973e692dad29e5a255c531d13c34/indra-1.13.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a10571f28b823a97b04b1b0b4e9124aa", "sha256": "7f1779b074bae9ecb03738839788fa30987f9a08d3cc93476a5380c39d4a5e4c"}, "downloads": -1, "filename": "indra-1.13.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a10571f28b823a97b04b1b0b4e9124aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52643116, "upload_time": "2019-09-20T21:23:21", "upload_time_iso_8601": "2019-09-20T21:23:21.048913Z", "url": "https://files.pythonhosted.org/packages/e8/64/944770797a1eaeb2f4bd97acb1f6a26e2bd34602ab6895b3cd7a28afbd1e/indra-1.13.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "321b778944d5e272b5f7754ead035010", "sha256": "6aa5b9591ae2c058cadf65cd8ef70cf0bf1375844e9e7968faa8a65032f22c86"}, "downloads": -1, "filename": "indra-1.13.0.tar.gz", "has_sig": false, "md5_digest": "321b778944d5e272b5f7754ead035010", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53857118, "upload_time": "2019-06-12T18:52:51", "upload_time_iso_8601": "2019-06-12T18:52:51.313882Z", "url": "https://files.pythonhosted.org/packages/4a/6f/74df79e32c878bb0ea95d80e9ee6499f6a5826032e6307b53e672fb8c2c1/indra-1.13.0.tar.gz", "yanked": false}], "1.14.0": [{"comment_text": "", "digests": {"md5": "48177895136d012d1ba6da1d226c8132", "sha256": "37b11f3ccb77fa3bccdabc9e6387b300afd10f2a8c1c37a89870cbfa30d204e5"}, "downloads": -1, "filename": "indra-1.14.0-py3-none-any.whl", "has_sig": false, "md5_digest": "48177895136d012d1ba6da1d226c8132", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52643107, "upload_time": "2019-09-20T21:33:59", "upload_time_iso_8601": "2019-09-20T21:33:59.016933Z", "url": "https://files.pythonhosted.org/packages/4f/54/109b56cd4baf682d1523104245e648151518a38a62c0d3034a2a49335809/indra-1.14.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1facaf40ff8d2de7220ea965ad5619f1", "sha256": "afffc7014f66c2f946fe391b36a91afd2de6b9221ec1b8e96ce32ea2eda7e255"}, "downloads": -1, "filename": "indra-1.14.0.tar.gz", "has_sig": false, "md5_digest": "1facaf40ff8d2de7220ea965ad5619f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59424512, "upload_time": "2019-09-20T21:34:07", "upload_time_iso_8601": "2019-09-20T21:34:07.889976Z", "url": "https://files.pythonhosted.org/packages/c1/79/eddc0f7d9ca9756964cd0c76f47ce02efbc17413c62787987e9ea8f6002e/indra-1.14.0.tar.gz", "yanked": false}], "1.14.1": [{"comment_text": "", "digests": {"md5": "c4f8e68bb5b4c72ca41706ed81c87d73", "sha256": "d173e741545d19a0b8db4d9e39786bd6a3fcdf9f385e2ef9d0a53ef08b300765"}, "downloads": -1, "filename": "indra-1.14.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c4f8e68bb5b4c72ca41706ed81c87d73", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52643116, "upload_time": "2019-09-20T21:38:04", "upload_time_iso_8601": "2019-09-20T21:38:04.758818Z", "url": "https://files.pythonhosted.org/packages/ad/ad/36d2fa5fdd4998ee595e6d2c387d973dbfb6e9be7420c7f634df0fbf1237/indra-1.14.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8014619ce0a5e1cc186b5da3eba92eb9", "sha256": "a977204111c6c3d53e09895fd5213a6a1bff70bb4daf8d28ede1ccbee6cd0588"}, "downloads": -1, "filename": "indra-1.14.1.tar.gz", "has_sig": false, "md5_digest": "8014619ce0a5e1cc186b5da3eba92eb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59424629, "upload_time": "2019-09-20T21:38:13", "upload_time_iso_8601": "2019-09-20T21:38:13.656682Z", "url": "https://files.pythonhosted.org/packages/8e/02/be7d6cb0e0a5b7a5f5b538c78e6c908d4df7310f035c47749ae68decf8b2/indra-1.14.1.tar.gz", "yanked": false}], "1.15.0": [{"comment_text": "", "digests": {"md5": "60e8434a743a8337c63f16746276d416", "sha256": "0819083e25abe18183efba7679b66b12c95246d2a69dbf3459f183eafe33554a"}, "downloads": -1, "filename": "indra-1.15.0-py3-none-any.whl", "has_sig": false, "md5_digest": "60e8434a743a8337c63f16746276d416", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52616582, "upload_time": "2019-10-11T09:58:40", "upload_time_iso_8601": "2019-10-11T09:58:40.395629Z", "url": "https://files.pythonhosted.org/packages/80/39/5942a649bf41d30241529a0889f67e7f75e32c7ac139d199cc3d76bd0ec3/indra-1.15.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab1428dc24d1a3efdcc024d4750cb4d4", "sha256": "9107101804e4d532d3ac9c380c4182b8c717f6fbb69b6350efaba650803bcbc0"}, "downloads": -1, "filename": "indra-1.15.0.tar.gz", "has_sig": false, "md5_digest": "ab1428dc24d1a3efdcc024d4750cb4d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55477402, "upload_time": "2019-10-11T09:58:48", "upload_time_iso_8601": "2019-10-11T09:58:48.213157Z", "url": "https://files.pythonhosted.org/packages/1f/60/bf1a9d72aa8b8ad68af1175b49c0a3f55184398c125ea068bc1903ad6bd6/indra-1.15.0.tar.gz", "yanked": false}], "1.15.1": [{"comment_text": "", "digests": {"md5": "5e70a7eeef19cb901cddbfa65251effb", "sha256": "e5b6ac76c39aadf4c3ce7d6168f6339478f707817468c49a18b7981bfc6a6241"}, "downloads": -1, "filename": "indra-1.15.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5e70a7eeef19cb901cddbfa65251effb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51507150, "upload_time": "2019-10-17T19:23:32", "upload_time_iso_8601": "2019-10-17T19:23:32.407293Z", "url": "https://files.pythonhosted.org/packages/ec/20/be8d777ab90221d670c1b221a813b772fe6bae7716bc39ba7d4d4f647db2/indra-1.15.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a9f0cccda7e9f3c42fb973e2a38948d", "sha256": "7cd61b292f846488df062e33f78f73b60ce7f7754a5efb140b11a4cc162f2417"}, "downloads": -1, "filename": "indra-1.15.1.tar.gz", "has_sig": false, "md5_digest": "4a9f0cccda7e9f3c42fb973e2a38948d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54399162, "upload_time": "2019-10-17T19:23:50", "upload_time_iso_8601": "2019-10-17T19:23:50.858966Z", "url": "https://files.pythonhosted.org/packages/fb/58/3e5bbab6cf447422a207f2b48502e191ffbc1ba642a606fe052bf530c54f/indra-1.15.1.tar.gz", "yanked": false}], "1.15.2": [{"comment_text": "", "digests": {"md5": "123150dae3d1e09d27377d575ee9fe04", "sha256": "a887da49fae423714d62cda5a3a4b1fac008a37b0336b55639d85624e6924e2c"}, "downloads": -1, "filename": "indra-1.15.2-py3-none-any.whl", "has_sig": false, "md5_digest": "123150dae3d1e09d27377d575ee9fe04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51576184, "upload_time": "2019-10-30T13:56:49", "upload_time_iso_8601": "2019-10-30T13:56:49.693797Z", "url": "https://files.pythonhosted.org/packages/b6/2b/3b6a9ee41666ef79c25751c85ad3e948dde2ec1169ca30bbeef7cf6f834f/indra-1.15.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfce66a565b30e3c66453e815aec14a7", "sha256": "46564b0c1d75ff65938e1130d28b0c5b18813d97da5d463c7a33d67158798ab2"}, "downloads": -1, "filename": "indra-1.15.2.tar.gz", "has_sig": false, "md5_digest": "cfce66a565b30e3c66453e815aec14a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54461777, "upload_time": "2019-10-30T13:56:59", "upload_time_iso_8601": "2019-10-30T13:56:59.677001Z", "url": "https://files.pythonhosted.org/packages/a5/00/1d32762c9fc453039fced117e1dfe83a245f7c44c4303263b5429a345b89/indra-1.15.2.tar.gz", "yanked": false}], "1.16.0": [{"comment_text": "", "digests": {"md5": "236fd50059c047b3cec2f0a7eb4b4a31", "sha256": "f5efdd4fb3a890ac30e99219202e179cf54ef4d8f2bec430454d4bcc31a53f49"}, "downloads": -1, "filename": "indra-1.16.0-py3-none-any.whl", "has_sig": false, "md5_digest": "236fd50059c047b3cec2f0a7eb4b4a31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51766457, "upload_time": "2020-02-04T19:02:00", "upload_time_iso_8601": "2020-02-04T19:02:00.662781Z", "url": "https://files.pythonhosted.org/packages/72/0f/6aec7c7cfbf336647ad965c75b4bd9ca2daef22256a5b92d02cb9f1c7958/indra-1.16.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0211fad8e6d1be8f4c9df523b49e2f8f", "sha256": "0cb84d201a4080ec06d54332760200cc4b5539e4954d43e9f1910cb70f9102c8"}, "downloads": -1, "filename": "indra-1.16.0.tar.gz", "has_sig": false, "md5_digest": "0211fad8e6d1be8f4c9df523b49e2f8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54626099, "upload_time": "2020-02-04T19:02:07", "upload_time_iso_8601": "2020-02-04T19:02:07.926308Z", "url": "https://files.pythonhosted.org/packages/d7/ee/56281c837ee468f63d493bda7e028dadd3f1f8228461dcaabbb3358166d4/indra-1.16.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "c897c9d36d4d3d8d6358f9cff4759433", "sha256": "4dad5063c1ef5a94ec2ac7e1898bd6eeb429360a325d60f1d4937bec822ef5e8"}, "downloads": -1, "filename": "indra-1.2.0.tar.gz", "has_sig": false, "md5_digest": "c897c9d36d4d3d8d6358f9cff4759433", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23911337, "upload_time": "2016-07-10T21:29:49", "upload_time_iso_8601": "2016-07-10T21:29:49.373459Z", "url": "https://files.pythonhosted.org/packages/2e/55/cf1a5a947d62e54ede85d622480555b22d30854849dc9bc3ef500f2a9908/indra-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "828ed865acb7e008578c0acbce9e188e", "sha256": "941049f87e91fb0e29739c640d0cddc4553fc2410383fe7aa973082316a07c3b"}, "downloads": -1, "filename": "indra-1.3.0.tar.gz", "has_sig": false, "md5_digest": "828ed865acb7e008578c0acbce9e188e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39165396, "upload_time": "2016-10-14T17:05:13", "upload_time_iso_8601": "2016-10-14T17:05:13.935120Z", "url": "https://files.pythonhosted.org/packages/63/52/a21e71a263232d841623680201b890f7398da0afb84bbfd038b6706df7dd/indra-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "1bdd1f816e2ebe63e224fc6520bd891b", "sha256": "e4966d33596318b5e9674cc6b8e4ac61ae6256bac7fcf6072d861b8496c178e6"}, "downloads": -1, "filename": "indra-1.4.0.tar.gz", "has_sig": false, "md5_digest": "1bdd1f816e2ebe63e224fc6520bd891b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39334100, "upload_time": "2017-03-05T04:47:46", "upload_time_iso_8601": "2017-03-05T04:47:46.907234Z", "url": "https://files.pythonhosted.org/packages/f9/9a/a1c7b208fc4d2badda4a9c6b6ff2fb106659940827b9e542a7eaa9b33a0e/indra-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "0a54f7b1378075b7205b420519ef3e76", "sha256": "7550895f5871e43f71529e50d4b463103abe4309a62a52b2cf0b8901f44a4252"}, "downloads": -1, "filename": "indra-1.4.1.tar.gz", "has_sig": false, "md5_digest": "0a54f7b1378075b7205b420519ef3e76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39284779, "upload_time": "2017-03-10T22:24:04", "upload_time_iso_8601": "2017-03-10T22:24:04.730428Z", "url": "https://files.pythonhosted.org/packages/62/6f/7d6e03d18bcfbb4891f0e2ca403c067c4213f206df04a39006ab84218ae0/indra-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "7ace3d362b1e3943c375e1baa2d88169", "sha256": "5d7d9c68b6376ad2e5783eb00ab1b64f364fb8d79d08eda328eb2ecaac174fec"}, "downloads": -1, "filename": "indra-1.4.2.tar.gz", "has_sig": false, "md5_digest": "7ace3d362b1e3943c375e1baa2d88169", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39282949, "upload_time": "2017-03-22T04:08:53", "upload_time_iso_8601": "2017-03-22T04:08:53.740190Z", "url": "https://files.pythonhosted.org/packages/8d/c6/1713570f7e60341c8848425d98fdc8710901ec7ccf94ae1270c7a174dfa8/indra-1.4.2.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "56c53c21f2e8c0f8a80e6b4d35ea3bcc", "sha256": "a79572ee5751f6463014970099f0a246553f1ad7902e380e92474bebffaf987e"}, "downloads": -1, "filename": "indra-1.5.0.tar.gz", "has_sig": false, "md5_digest": "56c53c21f2e8c0f8a80e6b4d35ea3bcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44566290, "upload_time": "2017-09-14T18:19:21", "upload_time_iso_8601": "2017-09-14T18:19:21.982729Z", "url": "https://files.pythonhosted.org/packages/24/f9/a085a2abc00925e9de4c04fec672a311221a56aaa585df51991f59f65da3/indra-1.5.0.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "c895d90d1bc6a6d78ece9127d1693c0e", "sha256": "eb5aa3f5aa6b9f14c806f4fd81be4a23589ec0c3c7d166b70afd656d4ec8323f"}, "downloads": -1, "filename": "indra-1.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c895d90d1bc6a6d78ece9127d1693c0e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 57874496, "upload_time": "2020-02-04T18:59:40", "upload_time_iso_8601": "2020-02-04T18:59:40.146543Z", "url": "https://files.pythonhosted.org/packages/16/f9/df804d21323c66835361c86502714649734273a715e90e27dbea3ef90509/indra-1.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5809b33fa2b55485e6139e7fc6afa417", "sha256": "49a5143f80781514bdce5bdea148948f2af2cb7e60cf089d2d8f7f1b2bb6614d"}, "downloads": -1, "filename": "indra-1.6.0.tar.gz", "has_sig": false, "md5_digest": "5809b33fa2b55485e6139e7fc6afa417", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48758331, "upload_time": "2018-03-20T03:33:28", "upload_time_iso_8601": "2018-03-20T03:33:28.120166Z", "url": "https://files.pythonhosted.org/packages/f9/89/f2a345f8d8b6fcbda76dfc01645c24e959e45e701fc2b12f7b7adf50c7dd/indra-1.6.0.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "0df537c7b31430bd6406499ebd0cf2f6", "sha256": "ec4704a5233741430b5bf0bc97a71bbffa54b715f266e4f20591722f7226876b"}, "downloads": -1, "filename": "indra-1.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0df537c7b31430bd6406499ebd0cf2f6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32550173, "upload_time": "2018-04-05T19:33:45", "upload_time_iso_8601": "2018-04-05T19:33:45.125011Z", "url": "https://files.pythonhosted.org/packages/f6/49/8b715af49116919b4508d6cbc19fe82d9f9360e123fb47ca8d1f20012f65/indra-1.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3abd4288c93bf5e18e9dded760eb80e6", "sha256": "3f19cbbedc93825df5e161c404d1c2b71b902c028324d5c3793cb79750348c11"}, "downloads": -1, "filename": "indra-1.7.0.tar.gz", "has_sig": false, "md5_digest": "3abd4288c93bf5e18e9dded760eb80e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50029465, "upload_time": "2018-04-05T19:33:51", "upload_time_iso_8601": "2018-04-05T19:33:51.569794Z", "url": "https://files.pythonhosted.org/packages/31/59/9c49fd4d0685108b70ede3e3221e1d088dde80c2aef5680b990599f31e36/indra-1.7.0.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "fb8e792971f089de9ccb541ede190e6b", "sha256": "61c2e937686aff9efb5ebd5f16e42bbd3350afd4ace8eb9be0e68d6ae359bf67"}, "downloads": -1, "filename": "indra-1.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb8e792971f089de9ccb541ede190e6b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 49130201, "upload_time": "2018-08-28T16:34:45", "upload_time_iso_8601": "2018-08-28T16:34:45.944242Z", "url": "https://files.pythonhosted.org/packages/98/76/03e13ae6f13a10e75308133bdcc543234a24da2cd1fac7e28c9bed420d65/indra-1.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdbb6d9b5ba7203bb08c2c6003879ef0", "sha256": "53abd4e7577fb3fd1646246ac097c01e5ad82eb0047f9c525a48287975729519"}, "downloads": -1, "filename": "indra-1.8.0.tar.gz", "has_sig": false, "md5_digest": "fdbb6d9b5ba7203bb08c2c6003879ef0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62202797, "upload_time": "2018-08-28T16:45:14", "upload_time_iso_8601": "2018-08-28T16:45:14.223302Z", "url": "https://files.pythonhosted.org/packages/35/5d/dc127fa7fc509552b877c578562f03fa83136f9facb27e6b39dcd4f64fe5/indra-1.8.0.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "eefd498613c115d4b234fd6d7e8df7cd", "sha256": "e5a9a0050d69147770407974843d364b820b50d264b54edd9c02f4cd149288b3"}, "downloads": -1, "filename": "indra-1.9.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eefd498613c115d4b234fd6d7e8df7cd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 49218246, "upload_time": "2018-10-24T14:07:50", "upload_time_iso_8601": "2018-10-24T14:07:50.337114Z", "url": "https://files.pythonhosted.org/packages/40/e0/b764069b070559a6f424dbf4a4d470e760eece7a152ba5bdb8154fcf046b/indra-1.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d2ef39ff72d9c46abe55e9d92e5b156", "sha256": "b4dbe38786eb8b1cc95e8a5640941b0425a59c72ed8022826c0b77d37c96e25b"}, "downloads": -1, "filename": "indra-1.9.0.tar.gz", "has_sig": false, "md5_digest": "3d2ef39ff72d9c46abe55e9d92e5b156", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59615688, "upload_time": "2018-10-24T14:09:52", "upload_time_iso_8601": "2018-10-24T14:09:52.821890Z", "url": "https://files.pythonhosted.org/packages/69/23/6218d10eaed8404a3fe46a62264145b6a7c5d67a5588faf689fe144cc820/indra-1.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "236fd50059c047b3cec2f0a7eb4b4a31", "sha256": "f5efdd4fb3a890ac30e99219202e179cf54ef4d8f2bec430454d4bcc31a53f49"}, "downloads": -1, "filename": "indra-1.16.0-py3-none-any.whl", "has_sig": false, "md5_digest": "236fd50059c047b3cec2f0a7eb4b4a31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51766457, "upload_time": "2020-02-04T19:02:00", "upload_time_iso_8601": "2020-02-04T19:02:00.662781Z", "url": "https://files.pythonhosted.org/packages/72/0f/6aec7c7cfbf336647ad965c75b4bd9ca2daef22256a5b92d02cb9f1c7958/indra-1.16.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0211fad8e6d1be8f4c9df523b49e2f8f", "sha256": "0cb84d201a4080ec06d54332760200cc4b5539e4954d43e9f1910cb70f9102c8"}, "downloads": -1, "filename": "indra-1.16.0.tar.gz", "has_sig": false, "md5_digest": "0211fad8e6d1be8f4c9df523b49e2f8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54626099, "upload_time": "2020-02-04T19:02:07", "upload_time_iso_8601": "2020-02-04T19:02:07.926308Z", "url": "https://files.pythonhosted.org/packages/d7/ee/56281c837ee468f63d493bda7e028dadd3f1f8228461dcaabbb3358166d4/indra-1.16.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:17 2020"}