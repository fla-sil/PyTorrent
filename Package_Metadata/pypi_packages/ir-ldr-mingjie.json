{"info": {"author": "Mingjie Jian", "author_email": "ssaajianmingjie@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: IPython", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Astronomy"], "description": "# ir_ldr\n\nThe package `ir_ldr` is for measuring the spectral line depth of the APOGEE and WINERED spectra, calculating the line depth ratio (LDR) and finally deriving the effective temperature (T_LDR).\n\nThe LDR-Teff relations inside this package are from [Jian+19](https://ui.adsabs.harvard.edu/abs/2019MNRAS.485.1310J/abstract), [Taniguchi+18](https://ui.adsabs.harvard.edu/abs/2018MNRAS.473.4993T/abstract) and Jian+20a (in prep.). Please also refer to [Fukue+15](https://ui.adsabs.harvard.edu/abs/2015ApJ...812...64F/abstract).\n\nThis package relys on `numpy`, `pandas`, `matplotlib` and `scipy`; it is based on python 3.\n\n# Installation\n\n`pip install ir_ldr`\n\n# Tutorial\n\nThe synthetic spectra of a dwarf star (Teff=5000 K, logg=4.5 dex and feh=0 dex; generated from MOOG) in `ir_ldr/file/dwarf` for an example of T_LDR calculation.\n\n```py\n# Load the linelist.\nlinelist = ir_ldr.load_linelist('yj', 'dwarf-j20a')\n\n# Here we use all the orders of synthetic spectra.\nfor order in [43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57]:\n    # Load the synthetic spectra\n    spec = pd.read_csv(ir_ldr.__path__[0] + '/file/example_spectra/dwarf/order{}.txt'.format(order),\n                       sep=' +', skiprows=2, engine='python', names=['wav', 'residual'])\n    wav = spec['wav'].values\n    residual = spec['residual'].values\n\n    # Select the line pairs for a specific order\n    linelist_sub = linelist[linelist['order'] == order]\n    if len(linelist_sub) == 0:\n        continue\n    linelist_sub.reset_index(drop=True, inplace=True)\n\n    # Measure the line depth of low(1)- and high(2)-EP line.\n    # Here the signal to noise ratio for the target star and telluric standard are\n    # manually set as 300, but the S_N of synthetic spectra is much higher than that.\n    d1 = ir_ldr.depth_measure(wav, residual, linelist_sub['linewav1'], suffix=1, S_N=[300, 300])\n    d2 = ir_ldr.depth_measure(wav, residual, linelist_sub['linewav2'], suffix=2, S_N=[300, 300])\n\n    # Calculate the logLDR value.\n    lgLDR = ir_ldr.cal_ldr(d1, d2, type='lgLDR')\n    # Combine the Dataframes of one order.\n    record = ir_ldr.combine_df([linelist_sub, d1, d2, lgLDR])\n\n    if order == 43:\n        record_all = record\n    else:\n        record_all = pd.concat([record_all, record], sort=False)\n\n# Calculate T_LDR\nLDR = ir_ldr.ldr2tldr_winered_solar(record_all, df_output=True)\n```\n\nAnd the result `(T_LDR, T_LDR_err)` is:\n```py\nLDR[0:2]\n>>> (5009.857201559249, 22.35966233607925)\n# Note the T_LDR_err is not an accurate estimation here since the S_N is manually set.\n```\n\n# Author\n\nMingjie Jian (ssaajianmingjie@gmail.com)\n\nPhD student, Department of Astronomy, the University of Tokyo\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MingjieJian/ir_ldr", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ir-ldr-mingjie", "package_url": "https://pypi.org/project/ir-ldr-mingjie/", "platform": "", "project_url": "https://pypi.org/project/ir-ldr-mingjie/", "project_urls": {"Homepage": "https://github.com/MingjieJian/ir_ldr"}, "release_url": "https://pypi.org/project/ir-ldr-mingjie/0.1.4/", "requires_dist": ["numpy (>=1.17.0)", "pandas (>=0.20.0)", "matplotlib (>=3.0.0)", "scipy (>=1.0.0)"], "requires_python": "", "summary": "The python package to deal with infrared LDR and Teff.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ir_ldr</h1>\n<p>The package <code>ir_ldr</code> is for measuring the spectral line depth of the APOGEE and WINERED spectra, calculating the line depth ratio (LDR) and finally deriving the effective temperature (T_LDR).</p>\n<p>The LDR-Teff relations inside this package are from <a href=\"https://ui.adsabs.harvard.edu/abs/2019MNRAS.485.1310J/abstract\" rel=\"nofollow\">Jian+19</a>, <a href=\"https://ui.adsabs.harvard.edu/abs/2018MNRAS.473.4993T/abstract\" rel=\"nofollow\">Taniguchi+18</a> and Jian+20a (in prep.). Please also refer to <a href=\"https://ui.adsabs.harvard.edu/abs/2015ApJ...812...64F/abstract\" rel=\"nofollow\">Fukue+15</a>.</p>\n<p>This package relys on <code>numpy</code>, <code>pandas</code>, <code>matplotlib</code> and <code>scipy</code>; it is based on python 3.</p>\n<h1>Installation</h1>\n<p><code>pip install ir_ldr</code></p>\n<h1>Tutorial</h1>\n<p>The synthetic spectra of a dwarf star (Teff=5000 K, logg=4.5 dex and feh=0 dex; generated from MOOG) in <code>ir_ldr/file/dwarf</code> for an example of T_LDR calculation.</p>\n<pre><span class=\"c1\"># Load the linelist.</span>\n<span class=\"n\">linelist</span> <span class=\"o\">=</span> <span class=\"n\">ir_ldr</span><span class=\"o\">.</span><span class=\"n\">load_linelist</span><span class=\"p\">(</span><span class=\"s1\">'yj'</span><span class=\"p\">,</span> <span class=\"s1\">'dwarf-j20a'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Here we use all the orders of synthetic spectra.</span>\n<span class=\"k\">for</span> <span class=\"n\">order</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">43</span><span class=\"p\">,</span> <span class=\"mi\">44</span><span class=\"p\">,</span> <span class=\"mi\">45</span><span class=\"p\">,</span> <span class=\"mi\">46</span><span class=\"p\">,</span> <span class=\"mi\">47</span><span class=\"p\">,</span> <span class=\"mi\">48</span><span class=\"p\">,</span> <span class=\"mi\">52</span><span class=\"p\">,</span> <span class=\"mi\">53</span><span class=\"p\">,</span> <span class=\"mi\">54</span><span class=\"p\">,</span> <span class=\"mi\">55</span><span class=\"p\">,</span> <span class=\"mi\">56</span><span class=\"p\">,</span> <span class=\"mi\">57</span><span class=\"p\">]:</span>\n    <span class=\"c1\"># Load the synthetic spectra</span>\n    <span class=\"n\">spec</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">ir_ldr</span><span class=\"o\">.</span><span class=\"n\">__path__</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">'/file/example_spectra/dwarf/order</span><span class=\"si\">{}</span><span class=\"s1\">.txt'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">order</span><span class=\"p\">),</span>\n                       <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">' +'</span><span class=\"p\">,</span> <span class=\"n\">skiprows</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">engine</span><span class=\"o\">=</span><span class=\"s1\">'python'</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'wav'</span><span class=\"p\">,</span> <span class=\"s1\">'residual'</span><span class=\"p\">])</span>\n    <span class=\"n\">wav</span> <span class=\"o\">=</span> <span class=\"n\">spec</span><span class=\"p\">[</span><span class=\"s1\">'wav'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span>\n    <span class=\"n\">residual</span> <span class=\"o\">=</span> <span class=\"n\">spec</span><span class=\"p\">[</span><span class=\"s1\">'residual'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span>\n\n    <span class=\"c1\"># Select the line pairs for a specific order</span>\n    <span class=\"n\">linelist_sub</span> <span class=\"o\">=</span> <span class=\"n\">linelist</span><span class=\"p\">[</span><span class=\"n\">linelist</span><span class=\"p\">[</span><span class=\"s1\">'order'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">order</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">linelist_sub</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">continue</span>\n    <span class=\"n\">linelist_sub</span><span class=\"o\">.</span><span class=\"n\">reset_index</span><span class=\"p\">(</span><span class=\"n\">drop</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Measure the line depth of low(1)- and high(2)-EP line.</span>\n    <span class=\"c1\"># Here the signal to noise ratio for the target star and telluric standard are</span>\n    <span class=\"c1\"># manually set as 300, but the S_N of synthetic spectra is much higher than that.</span>\n    <span class=\"n\">d1</span> <span class=\"o\">=</span> <span class=\"n\">ir_ldr</span><span class=\"o\">.</span><span class=\"n\">depth_measure</span><span class=\"p\">(</span><span class=\"n\">wav</span><span class=\"p\">,</span> <span class=\"n\">residual</span><span class=\"p\">,</span> <span class=\"n\">linelist_sub</span><span class=\"p\">[</span><span class=\"s1\">'linewav1'</span><span class=\"p\">],</span> <span class=\"n\">suffix</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">S_N</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">])</span>\n    <span class=\"n\">d2</span> <span class=\"o\">=</span> <span class=\"n\">ir_ldr</span><span class=\"o\">.</span><span class=\"n\">depth_measure</span><span class=\"p\">(</span><span class=\"n\">wav</span><span class=\"p\">,</span> <span class=\"n\">residual</span><span class=\"p\">,</span> <span class=\"n\">linelist_sub</span><span class=\"p\">[</span><span class=\"s1\">'linewav2'</span><span class=\"p\">],</span> <span class=\"n\">suffix</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">S_N</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">])</span>\n\n    <span class=\"c1\"># Calculate the logLDR value.</span>\n    <span class=\"n\">lgLDR</span> <span class=\"o\">=</span> <span class=\"n\">ir_ldr</span><span class=\"o\">.</span><span class=\"n\">cal_ldr</span><span class=\"p\">(</span><span class=\"n\">d1</span><span class=\"p\">,</span> <span class=\"n\">d2</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'lgLDR'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Combine the Dataframes of one order.</span>\n    <span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"n\">ir_ldr</span><span class=\"o\">.</span><span class=\"n\">combine_df</span><span class=\"p\">([</span><span class=\"n\">linelist_sub</span><span class=\"p\">,</span> <span class=\"n\">d1</span><span class=\"p\">,</span> <span class=\"n\">d2</span><span class=\"p\">,</span> <span class=\"n\">lgLDR</span><span class=\"p\">])</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">order</span> <span class=\"o\">==</span> <span class=\"mi\">43</span><span class=\"p\">:</span>\n        <span class=\"n\">record_all</span> <span class=\"o\">=</span> <span class=\"n\">record</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">record_all</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"p\">([</span><span class=\"n\">record_all</span><span class=\"p\">,</span> <span class=\"n\">record</span><span class=\"p\">],</span> <span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Calculate T_LDR</span>\n<span class=\"n\">LDR</span> <span class=\"o\">=</span> <span class=\"n\">ir_ldr</span><span class=\"o\">.</span><span class=\"n\">ldr2tldr_winered_solar</span><span class=\"p\">(</span><span class=\"n\">record_all</span><span class=\"p\">,</span> <span class=\"n\">df_output</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>And the result <code>(T_LDR, T_LDR_err)</code> is:</p>\n<pre><span class=\"n\">LDR</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"mf\">5009.857201559249</span><span class=\"p\">,</span> <span class=\"mf\">22.35966233607925</span><span class=\"p\">)</span>\n<span class=\"c1\"># Note the T_LDR_err is not an accurate estimation here since the S_N is manually set.</span>\n</pre>\n<h1>Author</h1>\n<p>Mingjie Jian (<a href=\"mailto:ssaajianmingjie@gmail.com\">ssaajianmingjie@gmail.com</a>)</p>\n<p>PhD student, Department of Astronomy, the University of Tokyo</p>\n\n          </div>"}, "last_serial": 6841137, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "7d47c47afddd80791fa47ed03a04451e", "sha256": "723e7ba3f02ef111e76ec282ee09137d23626fb243069875496aabafdd8be55b"}, "downloads": -1, "filename": "ir_ldr_mingjie-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "7d47c47afddd80791fa47ed03a04451e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 163661, "upload_time": "2020-03-19T04:35:10", "upload_time_iso_8601": "2020-03-19T04:35:10.944735Z", "url": "https://files.pythonhosted.org/packages/00/13/a1272092cd828fb95441b98bdae6a2f165444cee6964d667b6c7b12822a4/ir_ldr_mingjie-0.1.4-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7d47c47afddd80791fa47ed03a04451e", "sha256": "723e7ba3f02ef111e76ec282ee09137d23626fb243069875496aabafdd8be55b"}, "downloads": -1, "filename": "ir_ldr_mingjie-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "7d47c47afddd80791fa47ed03a04451e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 163661, "upload_time": "2020-03-19T04:35:10", "upload_time_iso_8601": "2020-03-19T04:35:10.944735Z", "url": "https://files.pythonhosted.org/packages/00/13/a1272092cd828fb95441b98bdae6a2f165444cee6964d667b6c7b12822a4/ir_ldr_mingjie-0.1.4-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:54:15 2020"}