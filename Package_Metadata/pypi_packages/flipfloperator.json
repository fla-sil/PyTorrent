{"info": {"author": "Peter Ward", "author_email": "peteraward@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Flipfloperator\n\nThis package implements the flip-flop operator in Python.\n\nInstall the package:\n\n```\n$ pip install flipfloperator\n```\n\nAnd then import the operator into your code:\n\n```python\nfrom flipfloperator import \ua4fa\n```\n\n## Examples\n\nWant to print out numbers between 1 to 20, but only after you reach 5 and stop\nwhen you reach 10?\n\n```python\n>>> for i in range(1, 20 + 1):\n...     if \ua4fa(i == 5, i == 10):\n...         print(i)\n5\n6\n7\n8\n9\n10\n```\n\nA handy text indenter:\n\n```python\n>>> for line in '''\n... zero indentation\n... indent\n... inside block\n... dedent\n... after the block\n... indent\n... another block\n... dedent\n... end of file\n... '''.strip().split('\\n'):\n...     if \ua4fa(line.startswith('indent'), line.startswith('dedent')):\n...         print('  ' + line)\n...     else:\n...         print(line)\nzero indentation\n  indent\n  inside block\n  dedent\nafter the block\n  indent\n  another block\n  dedent\nend of file\n```\n\nAnd you too can find adorable cat nicknames in text:\n\n```python\n>>> def bobo_nickname_finder(phrase):\n...     name = []\n...     phrase = phrase.replace('.', '').replace(',', '')\n...     for word in phrase.split():\n...         if \ua4fa(word == 'Monsieur', word == 'Bobo'):\n...             name.append(word)\n...     return ' '.join(name)\n>>> bobo_nickname_finder('''\n... I have had a great day with this large boy, Monsieur Bobo.\n... You may also know him as Monsieur 'Chonky' Bobo, or Monsieur\n... 'Loves to Eat the Food' Bobo.\n... ''')\n\"Monsieur Bobo Monsieur 'Chonky' Bobo Monsieur 'Loves to Eat the Food' Bobo\"\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "flipfloperator", "package_url": "https://pypi.org/project/flipfloperator/", "platform": "", "project_url": "https://pypi.org/project/flipfloperator/", "project_urls": null, "release_url": "https://pypi.org/project/flipfloperator/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Sorry.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flipfloperator</h1>\n<p>This package implements the flip-flop operator in Python.</p>\n<p>Install the package:</p>\n<pre><code>$ pip install flipfloperator\n</code></pre>\n<p>And then import the operator into your code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flipfloperator</span> <span class=\"kn\">import</span> <span class=\"n\">\ua4fa</span>\n</pre>\n<h2>Examples</h2>\n<p>Want to print out numbers between 1 to 20, but only after you reach 5 and stop\nwhen you reach 10?</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">20</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">if</span> <span class=\"n\">\ua4fa</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">10</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"mi\">5</span>\n<span class=\"mi\">6</span>\n<span class=\"mi\">7</span>\n<span class=\"mi\">8</span>\n<span class=\"mi\">9</span>\n<span class=\"mi\">10</span>\n</pre>\n<p>A handy text indenter:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"s1\">'''</span>\n<span class=\"s1\">... zero indentation</span>\n<span class=\"s1\">... indent</span>\n<span class=\"s1\">... inside block</span>\n<span class=\"s1\">... dedent</span>\n<span class=\"s1\">... after the block</span>\n<span class=\"s1\">... indent</span>\n<span class=\"s1\">... another block</span>\n<span class=\"s1\">... dedent</span>\n<span class=\"s1\">... end of file</span>\n<span class=\"s1\">... '''</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">if</span> <span class=\"n\">\ua4fa</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">'indent'</span><span class=\"p\">),</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">'dedent'</span><span class=\"p\">)):</span>\n<span class=\"o\">...</span>         <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'  '</span> <span class=\"o\">+</span> <span class=\"n\">line</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"k\">else</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>         <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n<span class=\"n\">zero</span> <span class=\"n\">indentation</span>\n  <span class=\"n\">indent</span>\n  <span class=\"n\">inside</span> <span class=\"n\">block</span>\n  <span class=\"n\">dedent</span>\n<span class=\"n\">after</span> <span class=\"n\">the</span> <span class=\"n\">block</span>\n  <span class=\"n\">indent</span>\n  <span class=\"n\">another</span> <span class=\"n\">block</span>\n  <span class=\"n\">dedent</span>\n<span class=\"n\">end</span> <span class=\"n\">of</span> <span class=\"n\">file</span>\n</pre>\n<p>And you too can find adorable cat nicknames in text:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">bobo_nickname_finder</span><span class=\"p\">(</span><span class=\"n\">phrase</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"o\">...</span>     <span class=\"n\">phrase</span> <span class=\"o\">=</span> <span class=\"n\">phrase</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">'.'</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">','</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"k\">for</span> <span class=\"n\">word</span> <span class=\"ow\">in</span> <span class=\"n\">phrase</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">():</span>\n<span class=\"o\">...</span>         <span class=\"k\">if</span> <span class=\"n\">\ua4fa</span><span class=\"p\">(</span><span class=\"n\">word</span> <span class=\"o\">==</span> <span class=\"s1\">'Monsieur'</span><span class=\"p\">,</span> <span class=\"n\">word</span> <span class=\"o\">==</span> <span class=\"s1\">'Bobo'</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>             <span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">word</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"s1\">' '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bobo_nickname_finder</span><span class=\"p\">(</span><span class=\"s1\">'''</span>\n<span class=\"s1\">... I have had a great day with this large boy, Monsieur Bobo.</span>\n<span class=\"s1\">... You may also know him as Monsieur 'Chonky' Bobo, or Monsieur</span>\n<span class=\"s1\">... 'Loves to Eat the Food' Bobo.</span>\n<span class=\"s1\">... '''</span><span class=\"p\">)</span>\n<span class=\"s2\">\"Monsieur Bobo Monsieur 'Chonky' Bobo Monsieur 'Loves to Eat the Food' Bobo\"</span>\n</pre>\n\n          </div>"}, "last_serial": 4207447, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fcdf6cb0d091c5f8688ed4a5a398de12", "sha256": "fec68b3a262202b335632618977a6c54326bd88a62b841a420793d9df6aae062"}, "downloads": -1, "filename": "flipfloperator-0.1.tar.gz", "has_sig": false, "md5_digest": "fcdf6cb0d091c5f8688ed4a5a398de12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1507, "upload_time": "2018-08-25T13:28:40", "upload_time_iso_8601": "2018-08-25T13:28:40.038619Z", "url": "https://files.pythonhosted.org/packages/bb/b9/d4f7da18238cc4897b9feb984c561afdf7f3351484ec9a85bce6fe2d5ebc/flipfloperator-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "2f779d54a28ea2eb4020ceeb79b13868", "sha256": "0a688ac38fce87ee2eb4569e24a8b403f19d3d93a6eb9ce931808ed913ff5f9e"}, "downloads": -1, "filename": "flipfloperator-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2f779d54a28ea2eb4020ceeb79b13868", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2040, "upload_time": "2018-08-26T01:42:47", "upload_time_iso_8601": "2018-08-26T01:42:47.376517Z", "url": "https://files.pythonhosted.org/packages/4b/43/eb88188d04854420b4181cd4738d41f4798e1c3f641e9f0c868a3bbf7462/flipfloperator-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b3d26c63ff9407e9758113003c1e5c4a", "sha256": "c3c901758185c5f2cbc5d6838a1475ef07f556909ddeac19a2dfce6854eb031c"}, "downloads": -1, "filename": "flipfloperator-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b3d26c63ff9407e9758113003c1e5c4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2051, "upload_time": "2018-08-26T01:44:23", "upload_time_iso_8601": "2018-08-26T01:44:23.241210Z", "url": "https://files.pythonhosted.org/packages/37/90/e8a285e56aa53dd03cf30f4a9928208374a386539b69e2326c8e6b82961b/flipfloperator-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b3d26c63ff9407e9758113003c1e5c4a", "sha256": "c3c901758185c5f2cbc5d6838a1475ef07f556909ddeac19a2dfce6854eb031c"}, "downloads": -1, "filename": "flipfloperator-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b3d26c63ff9407e9758113003c1e5c4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2051, "upload_time": "2018-08-26T01:44:23", "upload_time_iso_8601": "2018-08-26T01:44:23.241210Z", "url": "https://files.pythonhosted.org/packages/37/90/e8a285e56aa53dd03cf30f4a9928208374a386539b69e2326c8e6b82961b/flipfloperator-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:01:50 2020"}