{"info": {"author": "Andre Tocci", "author_email": "andre.tocci@dp6.com.br", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Marketing Attribution Models\n\n## 1. Sobre a Classe\nClasse em Python desenvolvida para solu\u00c3\u00a7\u00c3\u00b5es de problemas de atribui\u00c3\u00a7\u00c3\u00a3o de m\u00c3\u00addia em Marketing Digital.\n\n## 2. Sobre Atribui\u00c3\u00a7\u00c3\u00a3o Multicanal\nNo contexto digital, antes de convers\u00c3\u00a3o, o usu\u00c3\u00a1rio \u00c3\u00a9 impactado por diversos pontos de contato, podendo gerar jornadas cada vez mais longas e complexas. \n\n*Como atribuir os cr\u00c3\u00a9ditos das convers\u00c3\u00b5es e otimizar o investimento em m\u00c3\u00addia online?*\n\nPara resolver esse problema, utilizamos **Modelos de Atribui\u00c3\u00a7\u00c3\u00a3o**.\n\n\n### 2.1 Tipos de Modelos\n\n#### Modelos Heur\u00c3\u00adsticos\n\n- **Last Interaction**:\n    - Modelo padr\u00c3\u00a3o de atribui\u00c3\u00a7\u00c3\u00a3o tanto do Google Analytics, quanto de ferramentas de m\u00c3\u00addia como Google Ads e Facebook Business manager;\n    - Atribui todo o resultado da convers\u00c3\u00a3o para o \u00c3\u00baltimo ponto de contato.\n\n- **Last non-Direct Click**:\n    - Todo o tr\u00c3\u00a1fego direto \u00c3\u00a9 ignorado, e 100% do cr\u00c3\u00a9dito da venda vai para o \u00c3\u00baltimo canal por meio do qual o cliente chegou ao site antes de concluir a convers\u00c3\u00a3o.\n\n- **First Interaction**:\n    - Atribui todo o resultado da convers\u00c3\u00a3o para o primeiro ponto de contato.\n\n- **Linear**:\n    - Cada ponto de contato no caminho de convers\u00c3\u00a3o.\n\n- **Time Decay**:\n    - Os pontos de contato mais pr\u00c3\u00b3ximos em termos de tempo da venda ou convers\u00c3\u00a3o recebem a maior parte do cr\u00c3\u00a9dito. \n\n- **Position Based**:\n    - No modelo de atribui\u00c3\u00a7\u00c3\u00a3o Com base na posi\u00c3\u00a7\u00c3\u00a3o, 40% do cr\u00c3\u00a9dito \u00c3\u00a9 atribu\u00c3\u00addo a cada primeira e \u00c3\u00baltima intera\u00c3\u00a7\u00c3\u00a3o, e os 20% de cr\u00c3\u00a9dito restantes s\u00c3\u00a3o distribu\u00c3\u00addos uniformemente para as intera\u00c3\u00a7\u00c3\u00b5es intermedi\u00c3\u00a1rias.\n\n\n#### Modelos Algor\u00c3\u00adtmicos\n\n#### **Shapley Value**\n\nConceito vindo da Teoria dos Jogos, para distribuir a contribui\u00c3\u00a7\u00c3\u00a3o de cada jogador em um jogo de coopera\u00c3\u00a7\u00c3\u00a3o.\n\nAtribui os cr\u00c3\u00a9ditos das convers\u00c3\u00b5es calculando a contribui\u00c3\u00a7\u00c3\u00a3o de cada canal presente na jornada, utilizando permuta\u00c3\u00a7\u00c3\u00b5es de jornadas com e sem o canal em quest\u00c3\u00a3o.\n\n\n**Por exemplo**, como podemos atribuir as 19 convers\u00c3\u00b5es na jornada abaixo?\n\nNatural Search > Facebook > Direto > **$19** \n\n\nO Shapley Value de cada canal \u00c3\u00a9 calculado com base em observa\u00c3\u00a7\u00c3\u00b5es, isto \u00c3\u00a9, para cada jornada, \u00c3\u00a9 preciso ter o valores de convers\u00c3\u00a3o para todas as combina\u00c3\u00a7\u00c3\u00b5es que a comp\u00c3\u00b5e. \n\n\nNatural Search > **$7** <br/>\nFacebook > **$6** <br/>\nDireto > **$4** <br/>\nNatural Search > Facebook > **$15** <br/>\nNatural Search > Direto > **$7** <br/>\nFacebook > Direto > **$9** <br/>\nNatural Search > Facebook > Direto > **$19** <br/>\n\n\nO n\u00c3\u00bamero de itera\u00c3\u00a7\u00c3\u00b5es aumenta exponencialmente com o n\u00c3\u00bamero de canais: da ordem de 2^N, sendo N o n\u00c3\u00bamero de canais.\n\nAssim, para uma jornada com 3 canais s\u00c3\u00a3o necess\u00c3\u00a1rias 8 c\u00c3\u00a1lculos. **Para jornadas com mais de 15 canais, se torna praticamente invi\u00c3\u00a1vel.**\n\n\nO Shapley Value por padr\u00c3\u00a3o n\u00c3\u00a3o considera a ordem dos canais,mas sim a contribui\u00c3\u00a7\u00c3\u00a3o da presen\u00c3\u00a7a dele na jornada.\nPara levar isso em considera\u00c3\u00a7\u00c3\u00a3o \u00c3\u00a9 preciso aumentar a ordem do numero de combina\u00c3\u00a7\u00c3\u00b5es. \n\nDisso vem a dificuldade em usar um m\u00c3\u00a9todo que considere a *ordem dos canais* para um grande n\u00c3\u00bamero N, pois, al\u00c3\u00a9m das 2^N intera\u00c3\u00a7\u00c3\u00b5es para o c\u00c3\u00a1lculo do Shapley Value de um determinado canal i, **precisamos da *observa\u00c3\u00a7\u00c3\u00a3o* do canal i em todas as poss\u00c3\u00adveis posi\u00c3\u00a7\u00c3\u00b5es.**\n\n\n**Pontos negativos do Shapley Value**\n- Limita o n\u00c3\u00bamero de pontos de contato uma vez que o n\u00c3\u00bamero de itera\u00c3\u00a7\u00c3\u00a3o \u00c3\u00a9 da ordem de 2^N;\n- Se n\u00c3\u00a3o ordenado, o Shapley Value considera que a contribui\u00c3\u00a7\u00c3\u00a3o de um canal A \u00c3\u00a9 a mesma se antecedido por B ou por C;\n- Se ordenado, o n\u00c3\u00bamero de combina\u00c3\u00a7\u00c3\u00b5es cresce muito e as jornadas devem estar dispon\u00c3\u00adveis, caso contr\u00c3\u00a1rio atribui-se zero \u00c3\u00a0quela jornada;\n- Canais que est\u00c3\u00a3o poucos presentes ou presentes em jornadas longas v\u00c3\u00a3o ter pequenas contribui\u00c3\u00a7\u00c3\u00b5es;\n\n\n#### **Cadeias de Markov**\nUma cadeia de Markov \u00c3\u00a9 um caso particular de processo estoc\u00c3\u00a1stico com a propriedade de que a distribui\u00c3\u00a7\u00c3\u00a3o de probabilidade do pr\u00c3\u00b3ximo estado depende apenas do estado atual e n\u00c3\u00a3o na sequ\u00c3\u00aancia de eventos que o precederam.\n\n\nUtilizando cadeias de markov no contexto de atribui\u00c3\u00a7\u00c3\u00a3o multicanal, podemos calcular a probalidade de intera\u00c3\u00a7\u00c3\u00b5es entre os canais de m\u00c3\u00addia por meio da **Matriz de Transi\u00c3\u00a7\u00c3\u00a3o**.\n\n\nPara encontrar a contribui\u00c3\u00a7\u00c3\u00a3o de cada canal, utilizamos o **Removal Effect**: remove-se o canal em quest\u00c3\u00a3o da jornada e calcula-se a probabilidade de convers\u00c3\u00a3o.\n\nA atribui\u00c3\u00a7\u00c3\u00a3o \u00c3\u00a9 dada pela raz\u00c3\u00a3o entre a diferen\u00c3\u00a7a da probabilidade total de convers\u00c3\u00a3o e a probabilidade de convers\u00c3\u00a3o sem o canal, e a probabilidade total de convers\u00c3\u00a3o original.\n\nQuanto maior o removal effect, maior a contribui\u00c3\u00a7\u00c3\u00a3o do canal para a convers\u00c3\u00a3o.\n\n\n**Os processos markovianos n\u00c3\u00a3o possuem nenhum tipo de restri\u00c3\u00a7\u00c3\u00a3o em rela\u00c3\u00a7\u00c3\u00a3o a quantidade ou ordem dos canais e\nconsidera a sequ\u00c3\u00aancia de canais como uma parte fundamental do algoritmo**.\n\n\n### 2.2 Refer\u00c3\u00aancias\n- [Attribution Models in Marketing](https://data-science-blog.com/blog/2019/04/18/attribution-models-in-marketing/)\n- [Attribution Theory: The Two Best Models for Algorithmic Marketing Attribution \u00e2\u20ac\u201c Implemented in Apache Spark and R](http://datafeedtoolbox.com/attribution-theory-the-two-best-models-for-algorithmic-marketing-attribution-implemented-in-apache-spark-and-r/)\n- [Game Theory Attribution: The Model You\u00e2\u20ac\u2122ve Probably Never Heard Of](https://clearcode.cc/blog/game-theory-attribution/)\n- [Marketing Channel Attribution With Markov Models In R](https://www.bounteous.com/insights/2016/06/30/marketing-channel-attribution-markov-models-r/?ns=l)\n- [Multi-Channel Funnels Data-Driven Attribution](https://support.google.com/analytics/topic/3180362?hl=en&ref_topic=3205717)\n- [Marketing Multi-Channel Attribution model with R (part 1: Markov chains concept)](https://analyzecore.com/2016/08/03/attribution-model-r-part-1/)\n- [Marketing Multi-Channel Attribution model with R (part 2: practical issues)](https://analyzecore.com/2017/05/31/marketing-multi-channel-attribution-model-r-part-2-practical-issues/)\n- [ml-book/shapley](https://christophm.github.io/interpretable-ml-book/shapley.html)\n- [Overview of Attribution modeling in MCF](https://support.google.com/analytics/answer/1662518?hl=en)\n\n## 3. Importando a Classe\n\n\n```python\n>> pip install marketing_attribution_models\n```\n\n\n```python\nfrom marketing_attribution_models import MAM\n```\n\n## 4. Demonstra\u00c3\u00a7\u00c3\u00a3o\n\n### **Criando o objeto MAM**\n\n**A cria\u00c3\u00a7\u00c3\u00a3o do objeto MAM** \u00c3\u00a9 baseado em **dois formatos de Data Frame** e que \u00c3\u00a9 guiado pelo par\u00c3\u00a2metro group_channels:\n\n*   **group_channels = True**. Espera-se receber uma base na qual **cada linha seria uma sess\u00c3\u00a3o da jornada do usu\u00c3\u00a1rio**.\n  * Esse data frame deve conter colunas representando ID do Usu\u00c3\u00a1rio, indica\u00c3\u00a7\u00c3\u00a3o booleana se houve ou n\u00c3\u00a3o transa\u00c3\u00a7\u00c3\u00a3o durante a sess\u00c3\u00a3o, timestamp da sess\u00c3\u00a3o e o canal na qual o usu\u00c3\u00a1rio gerou a sess\u00c3\u00a3o;\n*   **group_channels = False**. Recebe a base na qual a **jornada j\u00c3\u00a1 foi agrupada** e que cada linha representa uma jornada completa de determinado usu\u00c3\u00a1rio at\u00c3\u00a9 a convers\u00c3\u00a3o. Para os usu\u00c3\u00a1rios do Google Analytics, essa base pode ser gerada atrav\u00c3\u00a9s da exporta\u00c3\u00a7\u00c3\u00a3o do relat\u00c3\u00b3rio de Top Conversion Paths na aba de Conversions.\n  * Nesse caso a coluna de canais e time_till_conv_colname receberiam em cada linha uma jornada separada por um separador, ' > ' como padr\u00c3\u00a3o e que pode ser alterado no par\u00c3\u00a2metro path_separator.\n\nNo nosso caso, iremos apresentar um exemplo na qual as jornadas ainda n\u00c3\u00a3o est\u00c3\u00a3o agrupadas, que cada linha representa uma jornada e que ainda n\u00c3\u00a3o temos um ID de Cada Jornada.\n\n**Ponto de Aten\u00c3\u00a7\u00c3\u00a3o:**\nA classe j\u00c3\u00a1 contempla uma fun\u00c3\u00a7\u00c3\u00a3o representada pelo par\u00c3\u00a2metro create_journey_id_based_on_conversion, que caso seja True, ser\u00c3\u00a1 criado um ID da Jornada baseado nas colunas de ID do Usu\u00c3\u00a1rio, passada no par\u00c3\u00a2metro group_channels_id_list e a coluna que representa se houve ou n\u00c3\u00a3o convers\u00c3\u00a3o, passada no par\u00c3\u00a2metro journey_with_conv_colname.\n\nNesse caso, ser\u00c3\u00a3o ordenadas as sess\u00c3\u00b5es de cada usu\u00c3\u00a1rio e a cada transa\u00c3\u00a7\u00c3\u00a3o ser\u00c3\u00a1 criado um novo ID da Jornada. Entretanto, **encorajamos que seja criado um ID da Jornada com base no conhecimento de neg\u00c3\u00b3cio de cada base explorada**. Podendo criar condi\u00c3\u00a7\u00c3\u00b5es expec\u00c3\u00adficas de tempo para que haja uma quebra de jornada, como por explempo se identificado que a jornada m\u00c3\u00a9dia de determidado neg\u00c3\u00b3cio dura 1 semana at\u00c3\u00a9 a convers\u00c3\u00a3o, podemos adotar um crit\u00c3\u00a9rio que se determinado usu\u00c3\u00a1rio n\u00c3\u00a3o interagir com o site por uma semana, sua jornada ser\u00c3\u00a1 quebrada, pois pode haver uma quebra de interesse.\n\n\n\nExemplificando como seria a configura\u00c3\u00a7\u00c3\u00a3o dos parametros no cen\u00c3\u00a1rio descrito acima com group_channels = True. \n\n1. Deve ser passado o **Pandas Data Frame** contendo a base de dados a ser analisada;\n2. Indicar o formato da base em **group_channels**=True\n3. Nome da coluna que contem os agrupamentos de canais em **channels_colname**;\n4. Coluna Booleana indicando se houve ou n\u00c3\u00a3o convers\u00c3\u00a3o na sess\u00c3\u00a3o em **journey_with_conv_colname**;\n5. Lista contendo os nomes das colunas que representam o ID da Jornada, podendo ser uma combina\u00c3\u00a7\u00c3\u00a3o de colunas em **group_channels_by_id_list**. Mas nesse caso como estamos indicando que iremos criar um ID da Jornada no par\u00c3\u00a2metro **create_journey_id_based_on_conversion = True**, basta indicar a coluna de ID do Usu\u00c3\u00a1rio; \n6. Coluna representando a data em que ocorreu a sess\u00c3\u00a3o em **group_timestamp_colname**. Coluna que pode receber al\u00c3\u00a9m dos dias do ano, o hor\u00c3\u00a1rio em que a sess\u00c3\u00a3o ocorreu;\n7. Por fim, em nosso caso, indicamos que iremos gerar um ID da Jornada a partir das colunas indicadas nos par\u00c3\u00a2metros group_channels_by_id_list e journey_with_conv_colname, em **create_journey_id_based_on_conversion** = True\n\n\n\n```python\nattributions = MAM(df,\n    group_channels=True,\n    channels_colname = 'channels',\n    journey_with_conv_colname= 'has_transaction',\n    group_channels_by_id_list=['user_id'],\n    group_timestamp_colname = 'visitStartTime',\n    create_journey_id_based_on_conversion = True)\n```\n\nPara fins explorat\u00c3\u00b3rios e de aprendizado, implementamos uma forma de gerar uma **base de dados aleat\u00c3\u00b3ria** atrav\u00c3\u00a9s do par\u00c3\u00a2metro **random_df=True**. N\u00c3\u00a3o sendo necess\u00c3\u00a1rio o preenchimento dos demais.\n\n\n```python\nattributions = MAM(random_df=True)\n```\n\nAssim que o objeto foi criado, podemos checar como ficou a **base ap\u00c3\u00b3s a cria\u00c3\u00a7\u00c3\u00a3o do journey_id e o agrupamento das sess\u00c3\u00b5es** em joranadas atrav\u00c3\u00a9s do **atributo .DataFrame.**\n\n\n```python\nattributions.DataFrame\n```\n|  | journey_id | channels_agg | time_till_conv_agg | converted_agg | conversion_value |\n| - | - | - | - | - | - |\n| 0 | id:0_J:0 | Facebook | 0.0 | True | 1 |\n| 1 | id:0_J:1 | Google Search | 0.0 | True | 1 |\n| 2 | id:0_J:10 | Google Search > Organic > Email Marketing | 72.0 > 24.0 > 0.0 | True | 1 |\n| 3 | id:0_J:11 | Organic | 0.0 | True | 1 |\n| 4 | id:0_J:12 | Email Marketing > Facebook | 432.0 > 0.0 | True | 1 |\n| ... | ... | ... | ... | ... | ... |\n| 20341 | id:9_J:5 | Direct > Facebook | 120.0 > 0.0 | True | 1 |\n| 20342 | id:9_J:6 | Google Search > Google Search > Google Search | 48.0 > 24.0 > 0.0 | True | 1 |\n| 20343 | id:9_J:7 | Organic > Organic > Google Search > Google Search | 480.0 > 480.0 > 288.0 > 0.0 | True | 1 |\n| 20344 | id:9_J:8 | Direct > Organic | 168.0 > 0.0 | True | 1 |\n| 20345 | id:9_J:9 | Google Search > Organic > Google Search > Emai... | 528.0 > 528.0 > 408.0 > 240.0 > 0.0 | True | 1 |\n\nEsse **atributo \u00c3\u00a9 atualizado para cada modelo gerado** e nos casos dos resultados heur\u00c3\u00adsticos, ser\u00c3\u00a1 adicionado uma coluna contendo a atribui\u00c3\u00a7\u00c3\u00a3o dada por determinado modelo no final.\n\n**Aten\u00c3\u00a7\u00c3\u00a3o:**\nOs c\u00c3\u00a1lculos dos modelos n\u00c3\u00a3o s\u00c3\u00a3o calculados com base no par\u00c3\u00a2metro .DataFrame, caso ele seja alterado, os resultados n\u00c3\u00a3o ser\u00c3\u00a3o afetados.\n\n\n```python\nattributions.attribution_last_click()\nattributions.DataFrame\n```\n\n| | journey_id | channels_agg | time_till_conv_agg | converted_agg | conversion_value |\n| - | - | - | - | - | - |\n| 0 | id:0_J:0 | Facebook | 0.0 | True | 1 |\n| 1 | id:0_J:1 | Google Search | 0.0 | True | 1 |\n| 2 | id:0_J:10 | Google Search > Organic > Email Marketing | 72.0 > 24.0 > 0.0 | True | 1 |\n| 3 | id:0_J:11 | Organic | 0.0 | True | 1 |\n| 4 | id:0_J:12 | Email Marketing > Facebook | 432.0 > 0.0 | True | 1 |\n| ... | ... | ... | ... | ... | ... |\n| 20341 | id:9_J:5 | Direct > Facebook | 120.0 > 0.0 | True | 1 |\n| 20342 | id:9_J:6 | Google Search > Google Search > Google Search | 48.0 > 24.0 > 0.0 | True | 1 |\n| 20343 | id:9_J:7 | Organic > Organic > Google Search > Google Search | 480.0 > 480.0 > 288.0 > 0.0 | True | 1 |\n| 20344 | id:9_J:8 | Direct > Organic | 168.0 > 0.0 | True | 1 |\n| 20345 | id:9_J:9 | Google Search > Organic > Google Search > Emai... | 528.0 > 528.0 > 408.0 > 240.0 > 0.0 | True | 1 |\n\n\nComo trabalhamos com um grande volume de dados, sabemos que n\u00c3\u00a3o \u00c3\u00a9 possivel avaliar os resultados atribu\u00c3\u00addos para cada jornada que resultou em uma transa\u00c3\u00a7\u00c3\u00a3o. Assim, atrav\u00c3\u00a9s da consulta do **atributo group_by_channels_models trazemos os resultados dos modelos agrupados por cada canal**. \n\n**Aten\u00c3\u00a7\u00c3\u00a3o:**\nOs resultados agrupados n\u00c3\u00a3o se sobrescrevem caso o mesmo modelo seja calculado mais de uma vez e ambos resultados estar\u00c3\u00a3o presentes no atributo group_by_channels_models.\n\n\n```python\nattributions.group_by_channels_models\n```\n\n\n\n\n<div>\n\n| channels | attribution_last_click_heuristic |\n| -- | -- |\n| Direct | 2133 |\n| Email Marketing | 1033 |\n| Facebook | 3168 |\n| Google Display | 1073 |\n| Google Search | 4255 |\n| Instagram | 1028 |\n| Organic | 6322 |\n| Youtube | 1093 |\n\n\n\nE como acontece com o .DataFrame, o **group_by_channels_models tamb\u00c3\u00a9m \u00c3\u00a9 atualizado para cada novo modelo rodado** e sem a limita\u00c3\u00a7\u00c3\u00a3o de n\u00c3\u00a3o trazer os resultados algor\u00c3\u00adtimicos\n\n\n```python\nattributions.attribution_shapley()\nattributions.group_by_channels_models\n```\n\n| | channels | attribution_last_click_heuristic | attribution_shapley_size4_conv_rate_algorithmic |\n| - | - | - | - |\n| 0 | Direct | 109 | 74.926849 |\n| 1 | Email Marketing | 54 | 70.558428 |\n| 2 | Facebook | 160 | 160.628945 |\n| 3 | Google Display | 65 | 110.649352 |\n| 4 | Google Search | 193 | 202.179519 |\n| 5 | Instagram | 64 | 72.982433 |\n| 6 | Organic | 315 | 265.768549 |\n| 7 | Youtube | 58 | 60.305925 |\n\n### **Sobre os modelos**\n\nTodos os modelos heur\u00c3\u00adsticos apresentam o mesmo comportamento quanto \u00c3\u00a0 atualiza\u00c3\u00a7\u00c3\u00a3o dos **atributos .DataFrame e .group_by_channels_models** e tamb\u00c3\u00a9m quanto ao **output do m\u00c3\u00a9todo** que ir\u00c3\u00a1 retornar uma **tupla contendo dois pandas Series**.\n\n\n```python\nattribution_first_click = attributions.attribution_first_click()\n```\n\n**O primeiro output** da tupla corresponde aos resultados na **granularidade de jornada**, similar ao resultado encontrado no .DataFrame\n\n\n```python\nattribution_first_click[0]\n```\n\n\n\n\n    0                          [1, 0, 0, 0, 0]\n    1                                      [1]\n    2              [1, 0, 0, 0, 0, 0, 0, 0, 0]\n    3                                   [1, 0]\n    4                                      [1]\n                           ...                \n    20512                               [1, 0]\n    20513                            [1, 0, 0]\n    20514    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    20515                            [1, 0, 0]\n    20516                         [1, 0, 0, 0]\n    Length: 20517, dtype: object\n\n\n\n**J\u00c3\u00a1 o segundo** corresponde aos resultados na **granularidade de canal**, similar ao resultado encontrado no .DataFrame\n\n\n```python\nattribution_first_click[1]\n```\n\n|  | channels | attribution_first_click_heuristic |\n| - | - | - |\n| 0 | Direct | 2078 |\n| 1 | Email Marketing | 1095 |\n| 2 | Facebook | 3177 |\n| 3 | Google Display | 1066 |\n| 4 | Google Search | 4259 |\n| 5 | Instagram | 1007 |\n| 6 | Organic | 6361 |\n| 7 | Youtube | 1062 |\n\n#### **Customiza\u00c3\u00a7\u00c3\u00a3o dos modelos**\n\nDentre os modelos presentes na classe apenas o Last Click, o First Click e Linear n\u00c3\u00a3o possuem parametros customiz\u00c3\u00a1veis al\u00c3\u00a9m do **parametro group_by_channels_models**, que recebe um **valor booleano** e que caso **falso**, **n\u00c3\u00a3o ir\u00c3\u00a1 retornar os resultados dos modelos agrupados por canais**.\n\n##### **Modelo Last Click Non** \n\nFoi criado para replicar o comportamento padr\u00c3\u00a3o do Google Analytics na qual o **tr\u00c3\u00a1fego Direto \u00c3\u00a9 sobreposto** caso ocorra ap\u00c3\u00b3s alguma intera\u00c3\u00a7\u00c3\u00a3o de outra origem dentro de determinado per\u00c3\u00adodo.\n\nPor padr\u00c3\u00a3o o par\u00c3\u00a2metro but_not_this_channel recebe o valor 'Direct', mas pode ser alterado para outros canais / valores de acordo com os seus canais e agrupamentos.\n\n\n\n\n```python\nattributions.attribution_last_click_non(but_not_this_channel='Direct')[1]\n```\n\n| channels | attribution_last_click_non_Direct_heuristic |\n| - | - | - |\n| 0 | Direct | 11 |\n| 1 | Email Marketing | 60 |\n| 2 | Facebook | 172 |\n| 3 | Google Display | 69 |\n| 4 | Google Search | 224 |\n| 5 | Instagram | 67 |\n| 6 | Organic | 350 |\n| 7 | Youtube | 65 |\n\n##### **Modelo Position Based** \n\nPode receber uma lista no par\u00c3\u00a2metro **list_positions_first_middle_last** determinando os percentuais que ser\u00c3\u00a3o atribu\u00c3\u00addos para o \u00c3\u00adnicio, meio e fim da jornada de acordo com o contexto de neg\u00c3\u00b3cio do seu cliente/dado. E que **por padr\u00c3\u00a3o** \u00c3\u00a9 distribu\u00c3\u00addo com os percentu\u00c3\u00a1is **40% para o canal introdutor, 20% distribu\u00c3\u00addo para os canais intermedi\u00c3\u00a1rios e 40% para o conversor.**\n\n\n```python\nattributions.attribution_position_based(list_positions_first_middle_last=[0.3, 0.3, 0.4])[1]\n```\n\n|  | channels | attribution_position_based_0.3_0.3_0.4_heuristic |\n| - | - | - |\n| 0 | Direct | 95.685085 |\n| 1 | Email Marketing | 57.617191 |\n| 2 | Facebook | 145.817501 |\n| 3 | Google Display | 56.340693 |\n| 4 | Google Search | 193.282305 |\n| 5 | Instagram | 54.678557 |\n| 6 | Organic | 288.148896 |\n| 7 | Youtube | 55.629772 |\n\n##### **Modelo Time Decay** \n\nPode ser curtomizado quanto ao **percentual de decaimento** no par\u00c3\u00a2metro **decay_over_time** e quanto ao **tempo em horas na qual esse percentual ser\u00c3\u00a1 aplicado** no par\u00c3\u00a2metro **frequency**.\n\nContudo, vale salientar que caso haja mais pontos de contato entre os espa\u00c3\u00a7os de tempo do decaimento, o valor ser\u00c3\u00a1 distribu\u00c3\u00addo igualmente para esses canais;\n\nExemplo de funcionamento do modelo:\n- **Canais:** Facebook > Organic > Paid Search\n- **Tempo at\u00c3\u00a9 a Convers\u00c3\u00a3o:** 14 > 12 > 0\n- **Frequ\u00c3\u00aancia do decaimento:** 7\n- **Resultados atribu\u00c3\u00addos:**\n  - 25% para Facebook;\n  - 25% para Organic;\n  - 50% para Paid Search;\n\n\n\n```python\nattributions.attribution_time_decay(\n    decay_over_time=0.6,\n    frequency=7)[1]\n```\n\n|  | channels | attribution_time_decay0.6_freq7_heuristic |\n| - | - | - |\n| 0 | Direct | 108.679538 |\n| 1 | Email Marketing | 54.425914 |\n| 2 | Facebook | 159.592216 |\n| 3 | Google Display | 64.350107 |\n| 4 | Google Search | 192.838884 |\n| 5 | Instagram | 64.611414 |\n| 6 | Organic | 314.920082 |\n| 7 | Youtube | 58.581845 |\n\n##### **Markov Chains**\n\n**Modelo de Atribui\u00c3\u00a7\u00c3\u00a3o** baseado em **Cadeias de Markov** nos auxilia a solucionar o problema de atribui\u00c3\u00a7\u00c3\u00a3o de m\u00c3\u00addia com uma **abordagem algor\u00c3\u00adtimica** baseada em dados que calcula a probabilidade de transi\u00c3\u00a7\u00c3\u00a3o entre canais.\n\nEsse modelo se comporta como os demais quanto a atualiza\u00c3\u00a7\u00c3\u00a3o do .DataFrame e do .group_by_channels_models, al\u00c3\u00a9m de **retornar uma tupla** com os dois primeiros resultados representando os mesmos descritos anteriormente nos modelos heur\u00c3\u00adsticos. Contudo, obtemos dois outputs, a **matriz de transi\u00c3\u00a7\u00c3\u00a3o** e o **removal effect**.\n\nComo par\u00c3\u00a2metro de entrada temos, a princ\u00c3\u00adpio, como indicar se ir\u00c3\u00a1 ser considerado ou n\u00c3\u00a3o a probabilidade de transi\u00c3\u00a7\u00c3\u00a3o para o mesmo estado.\n\n\n```python\nattribution_markov = attributions.attribution_markov(transition_to_same_state=False)\n```\n\n|  | channels | attribution_markov_algorithmic |\n| - | - | - |\n| 0 | Direct | 2305.324362 |\n| 1 | Email Marketing | 1237.400774 |\n| 2 | Facebook | 3273.918832 |\n| 3 | Youtube | 1231.183938 |\n| 4 | Google Search | 4035.260685 |\n| 5 | Instagram | 1205.949095 |\n| 6 | Organic | 5358.270644 |\n| 7 | Google Display | 1213.691671 |\n\nEssa configura\u00c3\u00a7\u00c3\u00a3o **n\u00c3\u00a3o afeta os resultados agregados** e que s\u00c3\u00a3o atribu\u00c3\u00addos para cada canal, **mas sim os valores observados na matriz de transi\u00c3\u00a7\u00c3\u00a3o**. E como inficamos **transition_to_same_state=False** a linha diagonal, que representa a auto-transi\u00c3\u00a7\u00c3\u00a3o, aparece zerada.\n\n\n```python\nax, fig = plt.subplots(figsize=(15,10))\nsns.heatmap(attribution_markov[2].round(3), cmap=\"YlGnBu\", annot=True, linewidths=.5)\n```\n\n\n\n\n![png](https://raw.githubusercontent.com/DP6/Marketing-Attribution-Models/master/readme-images/output_37_1.png)\n\n\n**Removal Effect**, quarto output dos resultados attribution_markov, \u00c3\u00a9 dada pela raz\u00c3\u00a3o entre a diferen\u00c3\u00a7a da probabilidade total de convers\u00c3\u00a3o e a probabilidade de convers\u00c3\u00a3o sem o canal, e a probabilidade total de convers\u00c3\u00a3o original.\n\n\n```python\nax, fig = plt.subplots(figsize=(2,5))\nsns.heatmap(attribution_markov[3].round(3), cmap=\"YlGnBu\", annot=True, linewidths=.5)\n```\n\n\n\n\n![png](https://raw.githubusercontent.com/DP6/Marketing-Attribution-Models/master/readme-images/output_39_1.png)\n\n\n##### **Shapley Value**\n\nPor fim, temos o segundo modelo algor\u00c3\u00adtmico da classe MAM o **Shapley Value**, conceito vindo da **Teoria dos Jogos**, para distribuir a contribui\u00c3\u00a7\u00c3\u00a3o de cada jogador em um jogo de coopera\u00c3\u00a7\u00c3\u00a3o.\n\nModelo atribui os cr\u00c3\u00a9ditos das convers\u00c3\u00b5es calculando a contribui\u00c3\u00a7\u00c3\u00a3o de cada canal presente na jornada, utilizando combina\u00c3\u00a7\u00c3\u00b5es de jornadas com e sem o canal em quest\u00c3\u00a3o. \n\nPar\u00c3\u00a2metro **size limita quantidade de canais \u00c3\u00banicos na jornada**, por **padr\u00c3\u00a3o** \u00c3\u00a9 definido como os **4 \u00c3\u00baltimos**. Isso ocorre pois o n\u00c3\u00bamero de itera\u00c3\u00a7\u00c3\u00b5es aumenta exponencialmente com o n\u00c3\u00bamero de canais. Da ordem de 2N, sendo N o n\u00c3\u00bamero de canais.   \n\nA metodologia do c\u00c3\u00a1lculo das contribui\u00c3\u00a7\u00c3\u00b5es marginais pode variar atrav\u00c3\u00a9s do **par\u00c3\u00a2metro order**, que por padr\u00c3\u00a3o calcula a contribui\u00c3\u00a7\u00c3\u00a3o da **combina\u00c3\u00a7\u00c3\u00a3o dos canais independende da ordem em que aparecem** nas diferentes jornadas.\n\n\n\n```python\nattributions.attribution_shapley(size=4, order=True, values_col='conv_rate')[0]\n```\n\n|  | combinations | conversions | total_sequences | conversion_value | conv_rate | attribution_shapley_size4_conv_rate_order_algorithmic |\n| - | - | - | - | - | - | - |\n| 0 | Direct | 909 | 926 | 909 | 0.981641 | [909.0] |\n| 1 | Direct > Email Marketing | 27 | 28 | 27 | 0.964286 | [13.948270234099155, 13.051729765900845] |\n| 2 | Direct > Email Marketing > Facebook | 5 | 5 | 5 | 1.000000 | [1.6636366232390172, 1.5835883671498818, 1.752... |\n| 3 | Direct > Email Marketing > Facebook > Google D... | 1 | 1 | 1 | 1.000000 | [0.2563402919193473, 0.2345560799963515, 0.259... |\n| 4 | Direct > Email Marketing > Facebook > Google S... | 1 | 1 | 1 | 1.000000 | [0.2522517802130265, 0.2401286956930936, 0.255... |\n| ... | ... | ... | ... | ... | ... | ... |\n| 1278 | Youtube > Organic > Google Search > Google Dis... | 1 | 2 | 1 | 0.500000 | [0.2514214624662836, 0.24872101523605275, 0.24... |\n| 1279 | Youtube > Organic > Google Search > Instagram | 1 | 1 | 1 | 1.000000 | [0.2544401477637237, 0.2541071889956603, 0.253... |\n| 1280 | Youtube > Organic > Instagram | 4 | 4 | 4 | 1.000000 | [1.2757196742326997, 1.4712839059493295, 1.252... |\n| 1281 | Youtube > Organic > Instagram > Facebook | 1 | 1 | 1 | 1.000000 | [0.2357631944623868, 0.2610913781266248, 0.247... |\n| 1282 | Youtube > Organic > Instagram > Google Search | 3 | 3 | 3 | 1.000000 | [0.7223482210689489, 0.7769049003203142, 0.726... |\n\nPor fim, par\u00c3\u00a2metro na qual o Shapley Value ser\u00c3\u00a1 calculado pode ser alterado em **values_col**, que por padr\u00c3\u00a3o utiliza a **taxa de convers\u00c3\u00a3o** que \u00c3\u00a9 uma forma de **considerarmos as n\u00c3\u00a3o convers\u00c3\u00b5es no c\u00c3\u00a1lculo do modelo**. Contudo, tamb\u00c3\u00a9m podemos considerar no c\u00c3\u00a1lculo o total de convers\u00c3\u00b5es ou o valor gerados pelas convers\u00c3\u00b5es, como demostrado abaixo. \n\n\n```python\nattributions.attribution_shapley(size=3, order=False, values_col='conversions')[0]\n```\n\n|  | combinations | conversions | total_sequences | conversion_value | conv_rate | attribution_shapley_size3_conversions_algorithmic |\n| - | - | - | - | - | - | - |\n| 0 | Direct | 11 | 18 | 18 | 0.611111 | [11.0] |\n| 1 | Direct > Email Marketing | 4 | 5 | 5 | 0.800000 | [2.0, 2.0] |\n| 2 | Direct > Email Marketing > Google Search | 1 | 2 | 2 | 0.500000 | [-3.1666666666666665, -7.666666666666666, 11.8... |\n| 3 | Direct > Email Marketing > Organic | 4 | 6 | 6 | 0.666667 | [-7.833333333333333, -10.833333333333332, 22.6... |\n| 4 | Direct > Facebook | 3 | 4 | 4 | 0.750000 | [-8.5, 11.5] |\n| ... | ... | ... | ... | ... | ... | ... |\n| 75 | Instagram > Organic > Youtube | 46 | 123 | 123 | 0.373984 | [5.833333333333332, 34.33333333333333, 5.83333... |\n| 76 | Instagram > Youtube | 2 | 4 | 4 | 0.500000 | [2.0, 0.0] |\n| 77 | Organic | 64 | 92 | 92 | 0.695652 | [64.0] |\n| 78 | Organic > Youtube | 8 | 11 | 11 | 0.727273 | [30.5, -22.5] |\n| 79 | Youtube | 11 | 15 | 15 | 0.733333 | [11.0] |\n\n### Visualiza\u00c3\u00a7\u00c3\u00a3o\nE agora que temos os resultados atribu\u00c3\u00addos pelos diferentes modelos guardados em nosso objeto **.group_by_channels_models** de acordo com o nosso contexto de neg\u00c3\u00b3cio podemos plotar um gr\u00c3\u00a1fico e comparar os resultados.\n\n\n```python\nattributions.plot()\n```\n\n\n\n![png](https://raw.githubusercontent.com/DP6/Marketing-Attribution-Models/master/readme-images/output_45_1.png)\n\n\nCaso queira selecionar apenas os modelos algor\u00c3\u00adtimicos, podemos especifica-lo no **par\u00c3\u00a2metro model_type**.\n\n\n```python\nattributions.plot(model_type='algorithmic')\n```\n\n\n\n\n![png](https://raw.githubusercontent.com/DP6/Marketing-Attribution-Models/master/readme-images/output_47_1.png)\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DP6/Marketing-Attribution-Models", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "marketing-attribution-models", "package_url": "https://pypi.org/project/marketing-attribution-models/", "platform": "", "project_url": "https://pypi.org/project/marketing-attribution-models/", "project_urls": {"Homepage": "https://github.com/DP6/Marketing-Attribution-Models"}, "release_url": "https://pypi.org/project/marketing-attribution-models/1.0.6/", "requires_dist": ["numpy", "pandas", "matplotlib", "seaborn"], "requires_python": ">=3.5", "summary": "Metodos de atribuicao de midia", "version": "1.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Marketing Attribution Models</h1>\n<h2>1. Sobre a Classe</h2>\n<p>Classe em Python desenvolvida para solu\u00c3\u00a7\u00c3\u00b5es de problemas de atribui\u00c3\u00a7\u00c3\u00a3o de m\u00c3\u00addia em Marketing Digital.</p>\n<h2>2. Sobre Atribui\u00c3\u00a7\u00c3\u00a3o Multicanal</h2>\n<p>No contexto digital, antes de convers\u00c3\u00a3o, o usu\u00c3\u00a1rio \u00c3\u00a9 impactado por diversos pontos de contato, podendo gerar jornadas cada vez mais longas e complexas.</p>\n<p><em>Como atribuir os cr\u00c3\u00a9ditos das convers\u00c3\u00b5es e otimizar o investimento em m\u00c3\u00addia online?</em></p>\n<p>Para resolver esse problema, utilizamos <strong>Modelos de Atribui\u00c3\u00a7\u00c3\u00a3o</strong>.</p>\n<h3>2.1 Tipos de Modelos</h3>\n<h4>Modelos Heur\u00c3\u00adsticos</h4>\n<ul>\n<li>\n<p><strong>Last Interaction</strong>:</p>\n<ul>\n<li>Modelo padr\u00c3\u00a3o de atribui\u00c3\u00a7\u00c3\u00a3o tanto do Google Analytics, quanto de ferramentas de m\u00c3\u00addia como Google Ads e Facebook Business manager;</li>\n<li>Atribui todo o resultado da convers\u00c3\u00a3o para o \u00c3\u00baltimo ponto de contato.</li>\n</ul>\n</li>\n<li>\n<p><strong>Last non-Direct Click</strong>:</p>\n<ul>\n<li>Todo o tr\u00c3\u00a1fego direto \u00c3\u00a9 ignorado, e 100% do cr\u00c3\u00a9dito da venda vai para o \u00c3\u00baltimo canal por meio do qual o cliente chegou ao site antes de concluir a convers\u00c3\u00a3o.</li>\n</ul>\n</li>\n<li>\n<p><strong>First Interaction</strong>:</p>\n<ul>\n<li>Atribui todo o resultado da convers\u00c3\u00a3o para o primeiro ponto de contato.</li>\n</ul>\n</li>\n<li>\n<p><strong>Linear</strong>:</p>\n<ul>\n<li>Cada ponto de contato no caminho de convers\u00c3\u00a3o.</li>\n</ul>\n</li>\n<li>\n<p><strong>Time Decay</strong>:</p>\n<ul>\n<li>Os pontos de contato mais pr\u00c3\u00b3ximos em termos de tempo da venda ou convers\u00c3\u00a3o recebem a maior parte do cr\u00c3\u00a9dito.</li>\n</ul>\n</li>\n<li>\n<p><strong>Position Based</strong>:</p>\n<ul>\n<li>No modelo de atribui\u00c3\u00a7\u00c3\u00a3o Com base na posi\u00c3\u00a7\u00c3\u00a3o, 40% do cr\u00c3\u00a9dito \u00c3\u00a9 atribu\u00c3\u00addo a cada primeira e \u00c3\u00baltima intera\u00c3\u00a7\u00c3\u00a3o, e os 20% de cr\u00c3\u00a9dito restantes s\u00c3\u00a3o distribu\u00c3\u00addos uniformemente para as intera\u00c3\u00a7\u00c3\u00b5es intermedi\u00c3\u00a1rias.</li>\n</ul>\n</li>\n</ul>\n<h4>Modelos Algor\u00c3\u00adtmicos</h4>\n<h4><strong>Shapley Value</strong></h4>\n<p>Conceito vindo da Teoria dos Jogos, para distribuir a contribui\u00c3\u00a7\u00c3\u00a3o de cada jogador em um jogo de coopera\u00c3\u00a7\u00c3\u00a3o.</p>\n<p>Atribui os cr\u00c3\u00a9ditos das convers\u00c3\u00b5es calculando a contribui\u00c3\u00a7\u00c3\u00a3o de cada canal presente na jornada, utilizando permuta\u00c3\u00a7\u00c3\u00b5es de jornadas com e sem o canal em quest\u00c3\u00a3o.</p>\n<p><strong>Por exemplo</strong>, como podemos atribuir as 19 convers\u00c3\u00b5es na jornada abaixo?</p>\n<p>Natural Search &gt; Facebook &gt; Direto &gt; <strong>$19</strong></p>\n<p>O Shapley Value de cada canal \u00c3\u00a9 calculado com base em observa\u00c3\u00a7\u00c3\u00b5es, isto \u00c3\u00a9, para cada jornada, \u00c3\u00a9 preciso ter o valores de convers\u00c3\u00a3o para todas as combina\u00c3\u00a7\u00c3\u00b5es que a comp\u00c3\u00b5e.</p>\n<p>Natural Search &gt; <strong>$7</strong> <br>\nFacebook &gt; <strong>$6</strong> <br>\nDireto &gt; <strong>$4</strong> <br>\nNatural Search &gt; Facebook &gt; <strong>$15</strong> <br>\nNatural Search &gt; Direto &gt; <strong>$7</strong> <br>\nFacebook &gt; Direto &gt; <strong>$9</strong> <br>\nNatural Search &gt; Facebook &gt; Direto &gt; <strong>$19</strong> <br></p>\n<p>O n\u00c3\u00bamero de itera\u00c3\u00a7\u00c3\u00b5es aumenta exponencialmente com o n\u00c3\u00bamero de canais: da ordem de 2^N, sendo N o n\u00c3\u00bamero de canais.</p>\n<p>Assim, para uma jornada com 3 canais s\u00c3\u00a3o necess\u00c3\u00a1rias 8 c\u00c3\u00a1lculos. <strong>Para jornadas com mais de 15 canais, se torna praticamente invi\u00c3\u00a1vel.</strong></p>\n<p>O Shapley Value por padr\u00c3\u00a3o n\u00c3\u00a3o considera a ordem dos canais,mas sim a contribui\u00c3\u00a7\u00c3\u00a3o da presen\u00c3\u00a7a dele na jornada.\nPara levar isso em considera\u00c3\u00a7\u00c3\u00a3o \u00c3\u00a9 preciso aumentar a ordem do numero de combina\u00c3\u00a7\u00c3\u00b5es.</p>\n<p>Disso vem a dificuldade em usar um m\u00c3\u00a9todo que considere a <em>ordem dos canais</em> para um grande n\u00c3\u00bamero N, pois, al\u00c3\u00a9m das 2^N intera\u00c3\u00a7\u00c3\u00b5es para o c\u00c3\u00a1lculo do Shapley Value de um determinado canal i, <strong>precisamos da <em>observa\u00c3\u00a7\u00c3\u00a3o</em> do canal i em todas as poss\u00c3\u00adveis posi\u00c3\u00a7\u00c3\u00b5es.</strong></p>\n<p><strong>Pontos negativos do Shapley Value</strong></p>\n<ul>\n<li>Limita o n\u00c3\u00bamero de pontos de contato uma vez que o n\u00c3\u00bamero de itera\u00c3\u00a7\u00c3\u00a3o \u00c3\u00a9 da ordem de 2^N;</li>\n<li>Se n\u00c3\u00a3o ordenado, o Shapley Value considera que a contribui\u00c3\u00a7\u00c3\u00a3o de um canal A \u00c3\u00a9 a mesma se antecedido por B ou por C;</li>\n<li>Se ordenado, o n\u00c3\u00bamero de combina\u00c3\u00a7\u00c3\u00b5es cresce muito e as jornadas devem estar dispon\u00c3\u00adveis, caso contr\u00c3\u00a1rio atribui-se zero \u00c3\u00a0quela jornada;</li>\n<li>Canais que est\u00c3\u00a3o poucos presentes ou presentes em jornadas longas v\u00c3\u00a3o ter pequenas contribui\u00c3\u00a7\u00c3\u00b5es;</li>\n</ul>\n<h4><strong>Cadeias de Markov</strong></h4>\n<p>Uma cadeia de Markov \u00c3\u00a9 um caso particular de processo estoc\u00c3\u00a1stico com a propriedade de que a distribui\u00c3\u00a7\u00c3\u00a3o de probabilidade do pr\u00c3\u00b3ximo estado depende apenas do estado atual e n\u00c3\u00a3o na sequ\u00c3\u00aancia de eventos que o precederam.</p>\n<p>Utilizando cadeias de markov no contexto de atribui\u00c3\u00a7\u00c3\u00a3o multicanal, podemos calcular a probalidade de intera\u00c3\u00a7\u00c3\u00b5es entre os canais de m\u00c3\u00addia por meio da <strong>Matriz de Transi\u00c3\u00a7\u00c3\u00a3o</strong>.</p>\n<p>Para encontrar a contribui\u00c3\u00a7\u00c3\u00a3o de cada canal, utilizamos o <strong>Removal Effect</strong>: remove-se o canal em quest\u00c3\u00a3o da jornada e calcula-se a probabilidade de convers\u00c3\u00a3o.</p>\n<p>A atribui\u00c3\u00a7\u00c3\u00a3o \u00c3\u00a9 dada pela raz\u00c3\u00a3o entre a diferen\u00c3\u00a7a da probabilidade total de convers\u00c3\u00a3o e a probabilidade de convers\u00c3\u00a3o sem o canal, e a probabilidade total de convers\u00c3\u00a3o original.</p>\n<p>Quanto maior o removal effect, maior a contribui\u00c3\u00a7\u00c3\u00a3o do canal para a convers\u00c3\u00a3o.</p>\n<p><strong>Os processos markovianos n\u00c3\u00a3o possuem nenhum tipo de restri\u00c3\u00a7\u00c3\u00a3o em rela\u00c3\u00a7\u00c3\u00a3o a quantidade ou ordem dos canais e\nconsidera a sequ\u00c3\u00aancia de canais como uma parte fundamental do algoritmo</strong>.</p>\n<h3>2.2 Refer\u00c3\u00aancias</h3>\n<ul>\n<li><a href=\"https://data-science-blog.com/blog/2019/04/18/attribution-models-in-marketing/\" rel=\"nofollow\">Attribution Models in Marketing</a></li>\n<li><a href=\"http://datafeedtoolbox.com/attribution-theory-the-two-best-models-for-algorithmic-marketing-attribution-implemented-in-apache-spark-and-r/\" rel=\"nofollow\">Attribution Theory: The Two Best Models for Algorithmic Marketing Attribution \u00e2\u20ac\u201c Implemented in Apache Spark and R</a></li>\n<li><a href=\"https://clearcode.cc/blog/game-theory-attribution/\" rel=\"nofollow\">Game Theory Attribution: The Model You\u00e2\u20ac\u2122ve Probably Never Heard Of</a></li>\n<li><a href=\"https://www.bounteous.com/insights/2016/06/30/marketing-channel-attribution-markov-models-r/?ns=l\" rel=\"nofollow\">Marketing Channel Attribution With Markov Models In R</a></li>\n<li><a href=\"https://support.google.com/analytics/topic/3180362?hl=en&amp;ref_topic=3205717\" rel=\"nofollow\">Multi-Channel Funnels Data-Driven Attribution</a></li>\n<li><a href=\"https://analyzecore.com/2016/08/03/attribution-model-r-part-1/\" rel=\"nofollow\">Marketing Multi-Channel Attribution model with R (part 1: Markov chains concept)</a></li>\n<li><a href=\"https://analyzecore.com/2017/05/31/marketing-multi-channel-attribution-model-r-part-2-practical-issues/\" rel=\"nofollow\">Marketing Multi-Channel Attribution model with R (part 2: practical issues)</a></li>\n<li><a href=\"https://christophm.github.io/interpretable-ml-book/shapley.html\" rel=\"nofollow\">ml-book/shapley</a></li>\n<li><a href=\"https://support.google.com/analytics/answer/1662518?hl=en\" rel=\"nofollow\">Overview of Attribution modeling in MCF</a></li>\n</ul>\n<h2>3. Importando a Classe</h2>\n<pre><span class=\"o\">&gt;&gt;</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">marketing_attribution_models</span>\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">marketing_attribution_models</span> <span class=\"kn\">import</span> <span class=\"n\">MAM</span>\n</pre>\n<h2>4. Demonstra\u00c3\u00a7\u00c3\u00a3o</h2>\n<h3><strong>Criando o objeto MAM</strong></h3>\n<p><strong>A cria\u00c3\u00a7\u00c3\u00a3o do objeto MAM</strong> \u00c3\u00a9 baseado em <strong>dois formatos de Data Frame</strong> e que \u00c3\u00a9 guiado pelo par\u00c3\u00a2metro group_channels:</p>\n<ul>\n<li><strong>group_channels = True</strong>. Espera-se receber uma base na qual <strong>cada linha seria uma sess\u00c3\u00a3o da jornada do usu\u00c3\u00a1rio</strong>.</li>\n<li>Esse data frame deve conter colunas representando ID do Usu\u00c3\u00a1rio, indica\u00c3\u00a7\u00c3\u00a3o booleana se houve ou n\u00c3\u00a3o transa\u00c3\u00a7\u00c3\u00a3o durante a sess\u00c3\u00a3o, timestamp da sess\u00c3\u00a3o e o canal na qual o usu\u00c3\u00a1rio gerou a sess\u00c3\u00a3o;</li>\n<li><strong>group_channels = False</strong>. Recebe a base na qual a <strong>jornada j\u00c3\u00a1 foi agrupada</strong> e que cada linha representa uma jornada completa de determinado usu\u00c3\u00a1rio at\u00c3\u00a9 a convers\u00c3\u00a3o. Para os usu\u00c3\u00a1rios do Google Analytics, essa base pode ser gerada atrav\u00c3\u00a9s da exporta\u00c3\u00a7\u00c3\u00a3o do relat\u00c3\u00b3rio de Top Conversion Paths na aba de Conversions.</li>\n<li>Nesse caso a coluna de canais e time_till_conv_colname receberiam em cada linha uma jornada separada por um separador, ' &gt; ' como padr\u00c3\u00a3o e que pode ser alterado no par\u00c3\u00a2metro path_separator.</li>\n</ul>\n<p>No nosso caso, iremos apresentar um exemplo na qual as jornadas ainda n\u00c3\u00a3o est\u00c3\u00a3o agrupadas, que cada linha representa uma jornada e que ainda n\u00c3\u00a3o temos um ID de Cada Jornada.</p>\n<p><strong>Ponto de Aten\u00c3\u00a7\u00c3\u00a3o:</strong>\nA classe j\u00c3\u00a1 contempla uma fun\u00c3\u00a7\u00c3\u00a3o representada pelo par\u00c3\u00a2metro create_journey_id_based_on_conversion, que caso seja True, ser\u00c3\u00a1 criado um ID da Jornada baseado nas colunas de ID do Usu\u00c3\u00a1rio, passada no par\u00c3\u00a2metro group_channels_id_list e a coluna que representa se houve ou n\u00c3\u00a3o convers\u00c3\u00a3o, passada no par\u00c3\u00a2metro journey_with_conv_colname.</p>\n<p>Nesse caso, ser\u00c3\u00a3o ordenadas as sess\u00c3\u00b5es de cada usu\u00c3\u00a1rio e a cada transa\u00c3\u00a7\u00c3\u00a3o ser\u00c3\u00a1 criado um novo ID da Jornada. Entretanto, <strong>encorajamos que seja criado um ID da Jornada com base no conhecimento de neg\u00c3\u00b3cio de cada base explorada</strong>. Podendo criar condi\u00c3\u00a7\u00c3\u00b5es expec\u00c3\u00adficas de tempo para que haja uma quebra de jornada, como por explempo se identificado que a jornada m\u00c3\u00a9dia de determidado neg\u00c3\u00b3cio dura 1 semana at\u00c3\u00a9 a convers\u00c3\u00a3o, podemos adotar um crit\u00c3\u00a9rio que se determinado usu\u00c3\u00a1rio n\u00c3\u00a3o interagir com o site por uma semana, sua jornada ser\u00c3\u00a1 quebrada, pois pode haver uma quebra de interesse.</p>\n<p>Exemplificando como seria a configura\u00c3\u00a7\u00c3\u00a3o dos parametros no cen\u00c3\u00a1rio descrito acima com group_channels = True.</p>\n<ol>\n<li>Deve ser passado o <strong>Pandas Data Frame</strong> contendo a base de dados a ser analisada;</li>\n<li>Indicar o formato da base em <strong>group_channels</strong>=True</li>\n<li>Nome da coluna que contem os agrupamentos de canais em <strong>channels_colname</strong>;</li>\n<li>Coluna Booleana indicando se houve ou n\u00c3\u00a3o convers\u00c3\u00a3o na sess\u00c3\u00a3o em <strong>journey_with_conv_colname</strong>;</li>\n<li>Lista contendo os nomes das colunas que representam o ID da Jornada, podendo ser uma combina\u00c3\u00a7\u00c3\u00a3o de colunas em <strong>group_channels_by_id_list</strong>. Mas nesse caso como estamos indicando que iremos criar um ID da Jornada no par\u00c3\u00a2metro <strong>create_journey_id_based_on_conversion = True</strong>, basta indicar a coluna de ID do Usu\u00c3\u00a1rio;</li>\n<li>Coluna representando a data em que ocorreu a sess\u00c3\u00a3o em <strong>group_timestamp_colname</strong>. Coluna que pode receber al\u00c3\u00a9m dos dias do ano, o hor\u00c3\u00a1rio em que a sess\u00c3\u00a3o ocorreu;</li>\n<li>Por fim, em nosso caso, indicamos que iremos gerar um ID da Jornada a partir das colunas indicadas nos par\u00c3\u00a2metros group_channels_by_id_list e journey_with_conv_colname, em <strong>create_journey_id_based_on_conversion</strong> = True</li>\n</ol>\n<pre><span class=\"n\">attributions</span> <span class=\"o\">=</span> <span class=\"n\">MAM</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span>\n    <span class=\"n\">group_channels</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">channels_colname</span> <span class=\"o\">=</span> <span class=\"s1\">'channels'</span><span class=\"p\">,</span>\n    <span class=\"n\">journey_with_conv_colname</span><span class=\"o\">=</span> <span class=\"s1\">'has_transaction'</span><span class=\"p\">,</span>\n    <span class=\"n\">group_channels_by_id_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'user_id'</span><span class=\"p\">],</span>\n    <span class=\"n\">group_timestamp_colname</span> <span class=\"o\">=</span> <span class=\"s1\">'visitStartTime'</span><span class=\"p\">,</span>\n    <span class=\"n\">create_journey_id_based_on_conversion</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Para fins explorat\u00c3\u00b3rios e de aprendizado, implementamos uma forma de gerar uma <strong>base de dados aleat\u00c3\u00b3ria</strong> atrav\u00c3\u00a9s do par\u00c3\u00a2metro <strong>random_df=True</strong>. N\u00c3\u00a3o sendo necess\u00c3\u00a1rio o preenchimento dos demais.</p>\n<pre><span class=\"n\">attributions</span> <span class=\"o\">=</span> <span class=\"n\">MAM</span><span class=\"p\">(</span><span class=\"n\">random_df</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Assim que o objeto foi criado, podemos checar como ficou a <strong>base ap\u00c3\u00b3s a cria\u00c3\u00a7\u00c3\u00a3o do journey_id e o agrupamento das sess\u00c3\u00b5es</strong> em joranadas atrav\u00c3\u00a9s do <strong>atributo .DataFrame.</strong></p>\n<pre><span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>journey_id</th>\n<th>channels_agg</th>\n<th>time_till_conv_agg</th>\n<th>converted_agg</th>\n<th>conversion_value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>id:0_J:0</td>\n<td>Facebook</td>\n<td>0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>id:0_J:1</td>\n<td>Google Search</td>\n<td>0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>2</td>\n<td>id:0_J:10</td>\n<td>Google Search &gt; Organic &gt; Email Marketing</td>\n<td>72.0 &gt; 24.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>3</td>\n<td>id:0_J:11</td>\n<td>Organic</td>\n<td>0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>4</td>\n<td>id:0_J:12</td>\n<td>Email Marketing &gt; Facebook</td>\n<td>432.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n</tr>\n<tr>\n<td>20341</td>\n<td>id:9_J:5</td>\n<td>Direct &gt; Facebook</td>\n<td>120.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>20342</td>\n<td>id:9_J:6</td>\n<td>Google Search &gt; Google Search &gt; Google Search</td>\n<td>48.0 &gt; 24.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>20343</td>\n<td>id:9_J:7</td>\n<td>Organic &gt; Organic &gt; Google Search &gt; Google Search</td>\n<td>480.0 &gt; 480.0 &gt; 288.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>20344</td>\n<td>id:9_J:8</td>\n<td>Direct &gt; Organic</td>\n<td>168.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>20345</td>\n<td>id:9_J:9</td>\n<td>Google Search &gt; Organic &gt; Google Search &gt; Emai...</td>\n<td>528.0 &gt; 528.0 &gt; 408.0 &gt; 240.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr></tbody></table>\n<p>Esse <strong>atributo \u00c3\u00a9 atualizado para cada modelo gerado</strong> e nos casos dos resultados heur\u00c3\u00adsticos, ser\u00c3\u00a1 adicionado uma coluna contendo a atribui\u00c3\u00a7\u00c3\u00a3o dada por determinado modelo no final.</p>\n<p><strong>Aten\u00c3\u00a7\u00c3\u00a3o:</strong>\nOs c\u00c3\u00a1lculos dos modelos n\u00c3\u00a3o s\u00c3\u00a3o calculados com base no par\u00c3\u00a2metro .DataFrame, caso ele seja alterado, os resultados n\u00c3\u00a3o ser\u00c3\u00a3o afetados.</p>\n<pre><span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">attribution_last_click</span><span class=\"p\">()</span>\n<span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>journey_id</th>\n<th>channels_agg</th>\n<th>time_till_conv_agg</th>\n<th>converted_agg</th>\n<th>conversion_value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>id:0_J:0</td>\n<td>Facebook</td>\n<td>0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>id:0_J:1</td>\n<td>Google Search</td>\n<td>0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>2</td>\n<td>id:0_J:10</td>\n<td>Google Search &gt; Organic &gt; Email Marketing</td>\n<td>72.0 &gt; 24.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>3</td>\n<td>id:0_J:11</td>\n<td>Organic</td>\n<td>0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>4</td>\n<td>id:0_J:12</td>\n<td>Email Marketing &gt; Facebook</td>\n<td>432.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n</tr>\n<tr>\n<td>20341</td>\n<td>id:9_J:5</td>\n<td>Direct &gt; Facebook</td>\n<td>120.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>20342</td>\n<td>id:9_J:6</td>\n<td>Google Search &gt; Google Search &gt; Google Search</td>\n<td>48.0 &gt; 24.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>20343</td>\n<td>id:9_J:7</td>\n<td>Organic &gt; Organic &gt; Google Search &gt; Google Search</td>\n<td>480.0 &gt; 480.0 &gt; 288.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>20344</td>\n<td>id:9_J:8</td>\n<td>Direct &gt; Organic</td>\n<td>168.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr>\n<tr>\n<td>20345</td>\n<td>id:9_J:9</td>\n<td>Google Search &gt; Organic &gt; Google Search &gt; Emai...</td>\n<td>528.0 &gt; 528.0 &gt; 408.0 &gt; 240.0 &gt; 0.0</td>\n<td>True</td>\n<td>1</td>\n</tr></tbody></table>\n<p>Como trabalhamos com um grande volume de dados, sabemos que n\u00c3\u00a3o \u00c3\u00a9 possivel avaliar os resultados atribu\u00c3\u00addos para cada jornada que resultou em uma transa\u00c3\u00a7\u00c3\u00a3o. Assim, atrav\u00c3\u00a9s da consulta do <strong>atributo group_by_channels_models trazemos os resultados dos modelos agrupados por cada canal</strong>.</p>\n<p><strong>Aten\u00c3\u00a7\u00c3\u00a3o:</strong>\nOs resultados agrupados n\u00c3\u00a3o se sobrescrevem caso o mesmo modelo seja calculado mais de uma vez e ambos resultados estar\u00c3\u00a3o presentes no atributo group_by_channels_models.</p>\n<pre><span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">group_by_channels_models</span>\n</pre>\n<div>\n<table>\n<thead>\n<tr>\n<th>channels</th>\n<th>attribution_last_click_heuristic</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Direct</td>\n<td>2133</td>\n</tr>\n<tr>\n<td>Email Marketing</td>\n<td>1033</td>\n</tr>\n<tr>\n<td>Facebook</td>\n<td>3168</td>\n</tr>\n<tr>\n<td>Google Display</td>\n<td>1073</td>\n</tr>\n<tr>\n<td>Google Search</td>\n<td>4255</td>\n</tr>\n<tr>\n<td>Instagram</td>\n<td>1028</td>\n</tr>\n<tr>\n<td>Organic</td>\n<td>6322</td>\n</tr>\n<tr>\n<td>Youtube</td>\n<td>1093</td>\n</tr></tbody></table>\n<p>E como acontece com o .DataFrame, o <strong>group_by_channels_models tamb\u00c3\u00a9m \u00c3\u00a9 atualizado para cada novo modelo rodado</strong> e sem a limita\u00c3\u00a7\u00c3\u00a3o de n\u00c3\u00a3o trazer os resultados algor\u00c3\u00adtimicos</p>\n<pre><span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">attribution_shapley</span><span class=\"p\">()</span>\n<span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">group_by_channels_models</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>channels</th>\n<th>attribution_last_click_heuristic</th>\n<th>attribution_shapley_size4_conv_rate_algorithmic</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>Direct</td>\n<td>109</td>\n<td>74.926849</td>\n</tr>\n<tr>\n<td>1</td>\n<td>Email Marketing</td>\n<td>54</td>\n<td>70.558428</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Facebook</td>\n<td>160</td>\n<td>160.628945</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Google Display</td>\n<td>65</td>\n<td>110.649352</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Google Search</td>\n<td>193</td>\n<td>202.179519</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Instagram</td>\n<td>64</td>\n<td>72.982433</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Organic</td>\n<td>315</td>\n<td>265.768549</td>\n</tr>\n<tr>\n<td>7</td>\n<td>Youtube</td>\n<td>58</td>\n<td>60.305925</td>\n</tr></tbody></table>\n<h3><strong>Sobre os modelos</strong></h3>\n<p>Todos os modelos heur\u00c3\u00adsticos apresentam o mesmo comportamento quanto \u00c3\u00a0 atualiza\u00c3\u00a7\u00c3\u00a3o dos <strong>atributos .DataFrame e .group_by_channels_models</strong> e tamb\u00c3\u00a9m quanto ao <strong>output do m\u00c3\u00a9todo</strong> que ir\u00c3\u00a1 retornar uma <strong>tupla contendo dois pandas Series</strong>.</p>\n<pre><span class=\"n\">attribution_first_click</span> <span class=\"o\">=</span> <span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">attribution_first_click</span><span class=\"p\">()</span>\n</pre>\n<p><strong>O primeiro output</strong> da tupla corresponde aos resultados na <strong>granularidade de jornada</strong>, similar ao resultado encontrado no .DataFrame</p>\n<pre><span class=\"n\">attribution_first_click</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n<pre><code>0                          [1, 0, 0, 0, 0]\n1                                      [1]\n2              [1, 0, 0, 0, 0, 0, 0, 0, 0]\n3                                   [1, 0]\n4                                      [1]\n                       ...                \n20512                               [1, 0]\n20513                            [1, 0, 0]\n20514    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n20515                            [1, 0, 0]\n20516                         [1, 0, 0, 0]\nLength: 20517, dtype: object\n</code></pre>\n<p><strong>J\u00c3\u00a1 o segundo</strong> corresponde aos resultados na <strong>granularidade de canal</strong>, similar ao resultado encontrado no .DataFrame</p>\n<pre><span class=\"n\">attribution_first_click</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>channels</th>\n<th>attribution_first_click_heuristic</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>Direct</td>\n<td>2078</td>\n</tr>\n<tr>\n<td>1</td>\n<td>Email Marketing</td>\n<td>1095</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Facebook</td>\n<td>3177</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Google Display</td>\n<td>1066</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Google Search</td>\n<td>4259</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Instagram</td>\n<td>1007</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Organic</td>\n<td>6361</td>\n</tr>\n<tr>\n<td>7</td>\n<td>Youtube</td>\n<td>1062</td>\n</tr></tbody></table>\n<h4><strong>Customiza\u00c3\u00a7\u00c3\u00a3o dos modelos</strong></h4>\n<p>Dentre os modelos presentes na classe apenas o Last Click, o First Click e Linear n\u00c3\u00a3o possuem parametros customiz\u00c3\u00a1veis al\u00c3\u00a9m do <strong>parametro group_by_channels_models</strong>, que recebe um <strong>valor booleano</strong> e que caso <strong>falso</strong>, <strong>n\u00c3\u00a3o ir\u00c3\u00a1 retornar os resultados dos modelos agrupados por canais</strong>.</p>\n<h5><strong>Modelo Last Click Non</strong></h5>\n<p>Foi criado para replicar o comportamento padr\u00c3\u00a3o do Google Analytics na qual o <strong>tr\u00c3\u00a1fego Direto \u00c3\u00a9 sobreposto</strong> caso ocorra ap\u00c3\u00b3s alguma intera\u00c3\u00a7\u00c3\u00a3o de outra origem dentro de determinado per\u00c3\u00adodo.</p>\n<p>Por padr\u00c3\u00a3o o par\u00c3\u00a2metro but_not_this_channel recebe o valor 'Direct', mas pode ser alterado para outros canais / valores de acordo com os seus canais e agrupamentos.</p>\n<pre><span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">attribution_last_click_non</span><span class=\"p\">(</span><span class=\"n\">but_not_this_channel</span><span class=\"o\">=</span><span class=\"s1\">'Direct'</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre>\n<p>| channels | attribution_last_click_non_Direct_heuristic |\n| - | - | - |\n| 0 | Direct | 11 |\n| 1 | Email Marketing | 60 |\n| 2 | Facebook | 172 |\n| 3 | Google Display | 69 |\n| 4 | Google Search | 224 |\n| 5 | Instagram | 67 |\n| 6 | Organic | 350 |\n| 7 | Youtube | 65 |</p>\n<h5><strong>Modelo Position Based</strong></h5>\n<p>Pode receber uma lista no par\u00c3\u00a2metro <strong>list_positions_first_middle_last</strong> determinando os percentuais que ser\u00c3\u00a3o atribu\u00c3\u00addos para o \u00c3\u00adnicio, meio e fim da jornada de acordo com o contexto de neg\u00c3\u00b3cio do seu cliente/dado. E que <strong>por padr\u00c3\u00a3o</strong> \u00c3\u00a9 distribu\u00c3\u00addo com os percentu\u00c3\u00a1is <strong>40% para o canal introdutor, 20% distribu\u00c3\u00addo para os canais intermedi\u00c3\u00a1rios e 40% para o conversor.</strong></p>\n<pre><span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">attribution_position_based</span><span class=\"p\">(</span><span class=\"n\">list_positions_first_middle_last</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">])[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>channels</th>\n<th>attribution_position_based_0.3_0.3_0.4_heuristic</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>Direct</td>\n<td>95.685085</td>\n</tr>\n<tr>\n<td>1</td>\n<td>Email Marketing</td>\n<td>57.617191</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Facebook</td>\n<td>145.817501</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Google Display</td>\n<td>56.340693</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Google Search</td>\n<td>193.282305</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Instagram</td>\n<td>54.678557</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Organic</td>\n<td>288.148896</td>\n</tr>\n<tr>\n<td>7</td>\n<td>Youtube</td>\n<td>55.629772</td>\n</tr></tbody></table>\n<h5><strong>Modelo Time Decay</strong></h5>\n<p>Pode ser curtomizado quanto ao <strong>percentual de decaimento</strong> no par\u00c3\u00a2metro <strong>decay_over_time</strong> e quanto ao <strong>tempo em horas na qual esse percentual ser\u00c3\u00a1 aplicado</strong> no par\u00c3\u00a2metro <strong>frequency</strong>.</p>\n<p>Contudo, vale salientar que caso haja mais pontos de contato entre os espa\u00c3\u00a7os de tempo do decaimento, o valor ser\u00c3\u00a1 distribu\u00c3\u00addo igualmente para esses canais;</p>\n<p>Exemplo de funcionamento do modelo:</p>\n<ul>\n<li><strong>Canais:</strong> Facebook &gt; Organic &gt; Paid Search</li>\n<li><strong>Tempo at\u00c3\u00a9 a Convers\u00c3\u00a3o:</strong> 14 &gt; 12 &gt; 0</li>\n<li><strong>Frequ\u00c3\u00aancia do decaimento:</strong> 7</li>\n<li><strong>Resultados atribu\u00c3\u00addos:</strong>\n<ul>\n<li>25% para Facebook;</li>\n<li>25% para Organic;</li>\n<li>50% para Paid Search;</li>\n</ul>\n</li>\n</ul>\n<pre><span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">attribution_time_decay</span><span class=\"p\">(</span>\n    <span class=\"n\">decay_over_time</span><span class=\"o\">=</span><span class=\"mf\">0.6</span><span class=\"p\">,</span>\n    <span class=\"n\">frequency</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>channels</th>\n<th>attribution_time_decay0.6_freq7_heuristic</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>Direct</td>\n<td>108.679538</td>\n</tr>\n<tr>\n<td>1</td>\n<td>Email Marketing</td>\n<td>54.425914</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Facebook</td>\n<td>159.592216</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Google Display</td>\n<td>64.350107</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Google Search</td>\n<td>192.838884</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Instagram</td>\n<td>64.611414</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Organic</td>\n<td>314.920082</td>\n</tr>\n<tr>\n<td>7</td>\n<td>Youtube</td>\n<td>58.581845</td>\n</tr></tbody></table>\n<h5><strong>Markov Chains</strong></h5>\n<p><strong>Modelo de Atribui\u00c3\u00a7\u00c3\u00a3o</strong> baseado em <strong>Cadeias de Markov</strong> nos auxilia a solucionar o problema de atribui\u00c3\u00a7\u00c3\u00a3o de m\u00c3\u00addia com uma <strong>abordagem algor\u00c3\u00adtimica</strong> baseada em dados que calcula a probabilidade de transi\u00c3\u00a7\u00c3\u00a3o entre canais.</p>\n<p>Esse modelo se comporta como os demais quanto a atualiza\u00c3\u00a7\u00c3\u00a3o do .DataFrame e do .group_by_channels_models, al\u00c3\u00a9m de <strong>retornar uma tupla</strong> com os dois primeiros resultados representando os mesmos descritos anteriormente nos modelos heur\u00c3\u00adsticos. Contudo, obtemos dois outputs, a <strong>matriz de transi\u00c3\u00a7\u00c3\u00a3o</strong> e o <strong>removal effect</strong>.</p>\n<p>Como par\u00c3\u00a2metro de entrada temos, a princ\u00c3\u00adpio, como indicar se ir\u00c3\u00a1 ser considerado ou n\u00c3\u00a3o a probabilidade de transi\u00c3\u00a7\u00c3\u00a3o para o mesmo estado.</p>\n<pre><span class=\"n\">attribution_markov</span> <span class=\"o\">=</span> <span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">attribution_markov</span><span class=\"p\">(</span><span class=\"n\">transition_to_same_state</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>channels</th>\n<th>attribution_markov_algorithmic</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>Direct</td>\n<td>2305.324362</td>\n</tr>\n<tr>\n<td>1</td>\n<td>Email Marketing</td>\n<td>1237.400774</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Facebook</td>\n<td>3273.918832</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Youtube</td>\n<td>1231.183938</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Google Search</td>\n<td>4035.260685</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Instagram</td>\n<td>1205.949095</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Organic</td>\n<td>5358.270644</td>\n</tr>\n<tr>\n<td>7</td>\n<td>Google Display</td>\n<td>1213.691671</td>\n</tr></tbody></table>\n<p>Essa configura\u00c3\u00a7\u00c3\u00a3o <strong>n\u00c3\u00a3o afeta os resultados agregados</strong> e que s\u00c3\u00a3o atribu\u00c3\u00addos para cada canal, <strong>mas sim os valores observados na matriz de transi\u00c3\u00a7\u00c3\u00a3o</strong>. E como inficamos <strong>transition_to_same_state=False</strong> a linha diagonal, que representa a auto-transi\u00c3\u00a7\u00c3\u00a3o, aparece zerada.</p>\n<pre><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">heatmap</span><span class=\"p\">(</span><span class=\"n\">attribution_markov</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s2\">\"YlGnBu\"</span><span class=\"p\">,</span> <span class=\"n\">annot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">linewidths</span><span class=\"o\">=.</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/473d41fdbe912fc0eaed5b265ac1528bbad76aea/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4450362f4d61726b6574696e672d4174747269627574696f6e2d4d6f64656c732f6d61737465722f726561646d652d696d616765732f6f75747075745f33375f312e706e67\"></p>\n<p><strong>Removal Effect</strong>, quarto output dos resultados attribution_markov, \u00c3\u00a9 dada pela raz\u00c3\u00a3o entre a diferen\u00c3\u00a7a da probabilidade total de convers\u00c3\u00a3o e a probabilidade de convers\u00c3\u00a3o sem o canal, e a probabilidade total de convers\u00c3\u00a3o original.</p>\n<pre><span class=\"n\">ax</span><span class=\"p\">,</span> <span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">heatmap</span><span class=\"p\">(</span><span class=\"n\">attribution_markov</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s2\">\"YlGnBu\"</span><span class=\"p\">,</span> <span class=\"n\">annot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">linewidths</span><span class=\"o\">=.</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb5e8dbf056ef82a9b73ab376c4c5117a406ca4d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4450362f4d61726b6574696e672d4174747269627574696f6e2d4d6f64656c732f6d61737465722f726561646d652d696d616765732f6f75747075745f33395f312e706e67\"></p>\n<h5><strong>Shapley Value</strong></h5>\n<p>Por fim, temos o segundo modelo algor\u00c3\u00adtmico da classe MAM o <strong>Shapley Value</strong>, conceito vindo da <strong>Teoria dos Jogos</strong>, para distribuir a contribui\u00c3\u00a7\u00c3\u00a3o de cada jogador em um jogo de coopera\u00c3\u00a7\u00c3\u00a3o.</p>\n<p>Modelo atribui os cr\u00c3\u00a9ditos das convers\u00c3\u00b5es calculando a contribui\u00c3\u00a7\u00c3\u00a3o de cada canal presente na jornada, utilizando combina\u00c3\u00a7\u00c3\u00b5es de jornadas com e sem o canal em quest\u00c3\u00a3o.</p>\n<p>Par\u00c3\u00a2metro <strong>size limita quantidade de canais \u00c3\u00banicos na jornada</strong>, por <strong>padr\u00c3\u00a3o</strong> \u00c3\u00a9 definido como os <strong>4 \u00c3\u00baltimos</strong>. Isso ocorre pois o n\u00c3\u00bamero de itera\u00c3\u00a7\u00c3\u00b5es aumenta exponencialmente com o n\u00c3\u00bamero de canais. Da ordem de 2N, sendo N o n\u00c3\u00bamero de canais.</p>\n<p>A metodologia do c\u00c3\u00a1lculo das contribui\u00c3\u00a7\u00c3\u00b5es marginais pode variar atrav\u00c3\u00a9s do <strong>par\u00c3\u00a2metro order</strong>, que por padr\u00c3\u00a3o calcula a contribui\u00c3\u00a7\u00c3\u00a3o da <strong>combina\u00c3\u00a7\u00c3\u00a3o dos canais independende da ordem em que aparecem</strong> nas diferentes jornadas.</p>\n<pre><span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">attribution_shapley</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">values_col</span><span class=\"o\">=</span><span class=\"s1\">'conv_rate'</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>combinations</th>\n<th>conversions</th>\n<th>total_sequences</th>\n<th>conversion_value</th>\n<th>conv_rate</th>\n<th>attribution_shapley_size4_conv_rate_order_algorithmic</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>Direct</td>\n<td>909</td>\n<td>926</td>\n<td>909</td>\n<td>0.981641</td>\n<td>[909.0]</td>\n</tr>\n<tr>\n<td>1</td>\n<td>Direct &gt; Email Marketing</td>\n<td>27</td>\n<td>28</td>\n<td>27</td>\n<td>0.964286</td>\n<td>[13.948270234099155, 13.051729765900845]</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Direct &gt; Email Marketing &gt; Facebook</td>\n<td>5</td>\n<td>5</td>\n<td>5</td>\n<td>1.000000</td>\n<td>[1.6636366232390172, 1.5835883671498818, 1.752...</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Direct &gt; Email Marketing &gt; Facebook &gt; Google D...</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1.000000</td>\n<td>[0.2563402919193473, 0.2345560799963515, 0.259...</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Direct &gt; Email Marketing &gt; Facebook &gt; Google S...</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1.000000</td>\n<td>[0.2522517802130265, 0.2401286956930936, 0.255...</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n</tr>\n<tr>\n<td>1278</td>\n<td>Youtube &gt; Organic &gt; Google Search &gt; Google Dis...</td>\n<td>1</td>\n<td>2</td>\n<td>1</td>\n<td>0.500000</td>\n<td>[0.2514214624662836, 0.24872101523605275, 0.24...</td>\n</tr>\n<tr>\n<td>1279</td>\n<td>Youtube &gt; Organic &gt; Google Search &gt; Instagram</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1.000000</td>\n<td>[0.2544401477637237, 0.2541071889956603, 0.253...</td>\n</tr>\n<tr>\n<td>1280</td>\n<td>Youtube &gt; Organic &gt; Instagram</td>\n<td>4</td>\n<td>4</td>\n<td>4</td>\n<td>1.000000</td>\n<td>[1.2757196742326997, 1.4712839059493295, 1.252...</td>\n</tr>\n<tr>\n<td>1281</td>\n<td>Youtube &gt; Organic &gt; Instagram &gt; Facebook</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1.000000</td>\n<td>[0.2357631944623868, 0.2610913781266248, 0.247...</td>\n</tr>\n<tr>\n<td>1282</td>\n<td>Youtube &gt; Organic &gt; Instagram &gt; Google Search</td>\n<td>3</td>\n<td>3</td>\n<td>3</td>\n<td>1.000000</td>\n<td>[0.7223482210689489, 0.7769049003203142, 0.726...</td>\n</tr></tbody></table>\n<p>Por fim, par\u00c3\u00a2metro na qual o Shapley Value ser\u00c3\u00a1 calculado pode ser alterado em <strong>values_col</strong>, que por padr\u00c3\u00a3o utiliza a <strong>taxa de convers\u00c3\u00a3o</strong> que \u00c3\u00a9 uma forma de <strong>considerarmos as n\u00c3\u00a3o convers\u00c3\u00b5es no c\u00c3\u00a1lculo do modelo</strong>. Contudo, tamb\u00c3\u00a9m podemos considerar no c\u00c3\u00a1lculo o total de convers\u00c3\u00b5es ou o valor gerados pelas convers\u00c3\u00b5es, como demostrado abaixo.</p>\n<pre><span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">attribution_shapley</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">values_col</span><span class=\"o\">=</span><span class=\"s1\">'conversions'</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>combinations</th>\n<th>conversions</th>\n<th>total_sequences</th>\n<th>conversion_value</th>\n<th>conv_rate</th>\n<th>attribution_shapley_size3_conversions_algorithmic</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>Direct</td>\n<td>11</td>\n<td>18</td>\n<td>18</td>\n<td>0.611111</td>\n<td>[11.0]</td>\n</tr>\n<tr>\n<td>1</td>\n<td>Direct &gt; Email Marketing</td>\n<td>4</td>\n<td>5</td>\n<td>5</td>\n<td>0.800000</td>\n<td>[2.0, 2.0]</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Direct &gt; Email Marketing &gt; Google Search</td>\n<td>1</td>\n<td>2</td>\n<td>2</td>\n<td>0.500000</td>\n<td>[-3.1666666666666665, -7.666666666666666, 11.8...</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Direct &gt; Email Marketing &gt; Organic</td>\n<td>4</td>\n<td>6</td>\n<td>6</td>\n<td>0.666667</td>\n<td>[-7.833333333333333, -10.833333333333332, 22.6...</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Direct &gt; Facebook</td>\n<td>3</td>\n<td>4</td>\n<td>4</td>\n<td>0.750000</td>\n<td>[-8.5, 11.5]</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n</tr>\n<tr>\n<td>75</td>\n<td>Instagram &gt; Organic &gt; Youtube</td>\n<td>46</td>\n<td>123</td>\n<td>123</td>\n<td>0.373984</td>\n<td>[5.833333333333332, 34.33333333333333, 5.83333...</td>\n</tr>\n<tr>\n<td>76</td>\n<td>Instagram &gt; Youtube</td>\n<td>2</td>\n<td>4</td>\n<td>4</td>\n<td>0.500000</td>\n<td>[2.0, 0.0]</td>\n</tr>\n<tr>\n<td>77</td>\n<td>Organic</td>\n<td>64</td>\n<td>92</td>\n<td>92</td>\n<td>0.695652</td>\n<td>[64.0]</td>\n</tr>\n<tr>\n<td>78</td>\n<td>Organic &gt; Youtube</td>\n<td>8</td>\n<td>11</td>\n<td>11</td>\n<td>0.727273</td>\n<td>[30.5, -22.5]</td>\n</tr>\n<tr>\n<td>79</td>\n<td>Youtube</td>\n<td>11</td>\n<td>15</td>\n<td>15</td>\n<td>0.733333</td>\n<td>[11.0]</td>\n</tr></tbody></table>\n<h3>Visualiza\u00c3\u00a7\u00c3\u00a3o</h3>\n<p>E agora que temos os resultados atribu\u00c3\u00addos pelos diferentes modelos guardados em nosso objeto <strong>.group_by_channels_models</strong> de acordo com o nosso contexto de neg\u00c3\u00b3cio podemos plotar um gr\u00c3\u00a1fico e comparar os resultados.</p>\n<pre><span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa86af0b5d6ba261ad5d1d101abfcaf2c6e8cb38/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4450362f4d61726b6574696e672d4174747269627574696f6e2d4d6f64656c732f6d61737465722f726561646d652d696d616765732f6f75747075745f34355f312e706e67\"></p>\n<p>Caso queira selecionar apenas os modelos algor\u00c3\u00adtimicos, podemos especifica-lo no <strong>par\u00c3\u00a2metro model_type</strong>.</p>\n<pre><span class=\"n\">attributions</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">model_type</span><span class=\"o\">=</span><span class=\"s1\">'algorithmic'</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0897f62316e7df51bb03ae5137cbe3d447b21c1c/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4450362f4d61726b6574696e672d4174747269627574696f6e2d4d6f64656c732f6d61737465722f726561646d652d696d616765732f6f75747075745f34375f312e706e67\"></p>\n</div>\n          </div>"}, "last_serial": 7129158, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "48d9d98210a408353e3b2571cd44aff5", "sha256": "68b6362116b32e563ad2cdb8a4445e4634096e510c6fc853cfceda40ce03e376"}, "downloads": -1, "filename": "marketing_attribution_models-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "48d9d98210a408353e3b2571cd44aff5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11830, "upload_time": "2020-02-03T16:32:32", "upload_time_iso_8601": "2020-02-03T16:32:32.702898Z", "url": "https://files.pythonhosted.org/packages/fb/57/e223be478a8b7316917590c399c4b983b30e8e1878fd3ccd254ce262baa9/marketing_attribution_models-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f9db6cbd8702bc8c1b8771203080c25", "sha256": "4876e3fca94fde5d50221bd5301c68f34549ffd0f7129ffcb06f4f5efbf37fa6"}, "downloads": -1, "filename": "marketing_attribution_models-1.0.tar.gz", "has_sig": false, "md5_digest": "8f9db6cbd8702bc8c1b8771203080c25", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11336, "upload_time": "2020-02-03T16:32:35", "upload_time_iso_8601": "2020-02-03T16:32:35.233428Z", "url": "https://files.pythonhosted.org/packages/98/a5/2d8101a98136a15273c4a4037388542b9a33eeed2096ad82960ddf85b972/marketing_attribution_models-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4a666772a7c3827ddc909d08271cdf82", "sha256": "77dc0b6355711430b8274faa3255f7efc0603879042fd3ce3674cf2bce833410"}, "downloads": -1, "filename": "marketing_attribution_models-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4a666772a7c3827ddc909d08271cdf82", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 12075, "upload_time": "2020-02-03T18:21:31", "upload_time_iso_8601": "2020-02-03T18:21:31.283570Z", "url": "https://files.pythonhosted.org/packages/b5/d3/a1b3b61fbdc63fecdbbed90daceac283e42b0022c158e3fc67373d17e2d8/marketing_attribution_models-1.0.1-py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "7a23fbab0682e881b7a3f57391784d09", "sha256": "34ba8fcd4471eadfcf732c12fb7546f6e6c173c5a00bbfd6140e6ca7ef616f61"}, "downloads": -1, "filename": "marketing_attribution_models-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7a23fbab0682e881b7a3f57391784d09", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19897, "upload_time": "2020-02-03T19:49:39", "upload_time_iso_8601": "2020-02-03T19:49:39.962028Z", "url": "https://files.pythonhosted.org/packages/51/aa/fc142c9af2cc71a7fc3099ac65b0ad14d35adc1ad47236f35da753290e80/marketing_attribution_models-1.0.2-py3-none-any.whl", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "dd9c7b8268a7c3032d4a3165bfd20186", "sha256": "6fbf1a3d194d26de26aacc83be64702346761d6e4ec9f026aec3f90e91aef6b2"}, "downloads": -1, "filename": "marketing_attribution_models-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "dd9c7b8268a7c3032d4a3165bfd20186", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19921, "upload_time": "2020-02-04T13:52:39", "upload_time_iso_8601": "2020-02-04T13:52:39.876433Z", "url": "https://files.pythonhosted.org/packages/e9/6c/0ddc8d528ebb5bd2929a10fadad71e62a7a86060dc5f274bc22b535aaf36/marketing_attribution_models-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cecd7cee54917d5bdded4405b5338159", "sha256": "f04c4d67a8e8d495fb3e0431b61de8211378b7af1f01691cca6e055ba27ef2df"}, "downloads": -1, "filename": "marketing_attribution_models-1.0.3.tar.gz", "has_sig": false, "md5_digest": "cecd7cee54917d5bdded4405b5338159", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 160019, "upload_time": "2020-02-10T11:30:50", "upload_time_iso_8601": "2020-02-10T11:30:50.086962Z", "url": "https://files.pythonhosted.org/packages/da/5d/61a59a3b53eb81ec321cd10807819e928e8b474fd995a5cc1357ae888eb1/marketing_attribution_models-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "a2fb23bd5c069ae9d9b8fa356355874b", "sha256": "7ac02e20ca92d971e419ed922e583e205afadd998b07bc4f6c7f70bc93d23a47"}, "downloads": -1, "filename": "marketing_attribution_models-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a2fb23bd5c069ae9d9b8fa356355874b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 20101, "upload_time": "2020-02-10T11:33:26", "upload_time_iso_8601": "2020-02-10T11:33:26.081048Z", "url": "https://files.pythonhosted.org/packages/bb/6a/9b823906de4bee0f380a59a04ae4a2d2bc4a986bfc40147ba74b8ff8bb3d/marketing_attribution_models-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03df57959632fe722d634b7f42cbd97b", "sha256": "e91f1fa57e84c5840dd3102ef29549300771314be8254080f2a6b1958f322942"}, "downloads": -1, "filename": "marketing_attribution_models-1.0.4.tar.gz", "has_sig": false, "md5_digest": "03df57959632fe722d634b7f42cbd97b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 160021, "upload_time": "2020-02-10T11:33:28", "upload_time_iso_8601": "2020-02-10T11:33:28.590763Z", "url": "https://files.pythonhosted.org/packages/d2/ef/eb1887be6637c641b970324a4e4e39ba14408db791cc6d3c3cf0908800c8/marketing_attribution_models-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "7a98eb05e043571147ed47354237f70f", "sha256": "187831ee42406a0d8076fc0c42d2956789b6e544e62db8bbcaaa10ef6d09e5de"}, "downloads": -1, "filename": "marketing_attribution_models-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7a98eb05e043571147ed47354237f70f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 20638, "upload_time": "2020-04-22T20:57:18", "upload_time_iso_8601": "2020-04-22T20:57:18.866755Z", "url": "https://files.pythonhosted.org/packages/aa/c1/368c6cf67e7a50af99283a8f47443851da252e394e53125a311f9764e4d7/marketing_attribution_models-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3787732cb2741aa23127cb6ae17323a", "sha256": "e31ba155c45cc652d139a26f42ff7b8891dc803ca0332279ae2e57ae47734274"}, "downloads": -1, "filename": "marketing_attribution_models-1.0.5.tar.gz", "has_sig": false, "md5_digest": "f3787732cb2741aa23127cb6ae17323a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 30911, "upload_time": "2020-04-22T20:57:20", "upload_time_iso_8601": "2020-04-22T20:57:20.376942Z", "url": "https://files.pythonhosted.org/packages/6d/80/bfbbdd3431d3009f897930536d258fd9f3a508ea98e4cb38fb2bc448e202/marketing_attribution_models-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "1719803525b95a73c83e7806c8807065", "sha256": "ba0b4ae85c2250dce978da8cefb497979a1d532933d60cba9fd93c2eb92b87d9"}, "downloads": -1, "filename": "marketing_attribution_models-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "1719803525b95a73c83e7806c8807065", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 20686, "upload_time": "2020-04-29T14:04:44", "upload_time_iso_8601": "2020-04-29T14:04:44.640909Z", "url": "https://files.pythonhosted.org/packages/f6/3c/d842b7ded44eb39d45436ec80f8d29c7c5efa6e7c05e11c5bf54f0c7c90a/marketing_attribution_models-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e3e3dc7fc6a14ba87576becf5e1eeea", "sha256": "76269f561154fbafe763c449bd0f8f524631aba636f7118426642b91fe75c983"}, "downloads": -1, "filename": "marketing_attribution_models-1.0.6.tar.gz", "has_sig": false, "md5_digest": "3e3e3dc7fc6a14ba87576becf5e1eeea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 30971, "upload_time": "2020-04-29T14:04:46", "upload_time_iso_8601": "2020-04-29T14:04:46.991314Z", "url": "https://files.pythonhosted.org/packages/22/4d/d4b3e2f48426b206d6ba6f321313663986c9bb6b1b8e7e32ffa82beadd8a/marketing_attribution_models-1.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1719803525b95a73c83e7806c8807065", "sha256": "ba0b4ae85c2250dce978da8cefb497979a1d532933d60cba9fd93c2eb92b87d9"}, "downloads": -1, "filename": "marketing_attribution_models-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "1719803525b95a73c83e7806c8807065", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 20686, "upload_time": "2020-04-29T14:04:44", "upload_time_iso_8601": "2020-04-29T14:04:44.640909Z", "url": "https://files.pythonhosted.org/packages/f6/3c/d842b7ded44eb39d45436ec80f8d29c7c5efa6e7c05e11c5bf54f0c7c90a/marketing_attribution_models-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e3e3dc7fc6a14ba87576becf5e1eeea", "sha256": "76269f561154fbafe763c449bd0f8f524631aba636f7118426642b91fe75c983"}, "downloads": -1, "filename": "marketing_attribution_models-1.0.6.tar.gz", "has_sig": false, "md5_digest": "3e3e3dc7fc6a14ba87576becf5e1eeea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 30971, "upload_time": "2020-04-29T14:04:46", "upload_time_iso_8601": "2020-04-29T14:04:46.991314Z", "url": "https://files.pythonhosted.org/packages/22/4d/d4b3e2f48426b206d6ba6f321313663986c9bb6b1b8e7e32ffa82beadd8a/marketing_attribution_models-1.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:42 2020"}