{"info": {"author": "Yukino Ikegami", "author_email": "yknikgm@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Text Processing :: Linguistic"], "description": "oll-python\n==========\n\n|travis| |coveralls| |version| |license|\n\nThis is a Python binding of the OLL library for machine learning.\n\nCurrently, OLL 0.03 supports following binary classification algorithms:\n\n- Perceptron\n- Averaged Perceptron\n- Passive Agressive (PA, PA-I, PA-II)\n- ALMA (modified slightly from original)\n- Confidence Weighted Linear-Classification.\n\nFor details of oll, see: http://code.google.com/p/oll\n\nInstallation\n------------\n\n::\n\n $ pip install oll\n\nOLL library is bundled, so you don't need to install it separately.\n\nUsage\n-----\n\n.. code:: python\n\n import oll\n # You can choose algorithms in\n # \"P\" -> Perceptron,\n # \"AP\" -> Averaged Perceptron,\n # \"PA\" -> Passive Agressive,\n # \"PA1\" -> Passive Agressive-I,\n # \"PA2\" -> Passive Agressive-II,\n # \"PAK\" -> Kernelized Passive Agressive,\n # \"CW\" -> Confidence Weighted Linear-Classification,\n # \"AL\" -> ALMA\n o = oll.oll(\"CW\", C=1.0, bias=0.0)\n o.add({0: 1.0, 1: 2.0, 2: -1.0}, 1)  # train\n o.classify({0:1.0, 1:1.0})  # predict\n o.save('oll.model')\n o.load('oll.model')\n\n # scikit-learn like fit/predict interface\n import numpy as np\n array = np.array([[1, 2, -1], [0, 0, 1]])\n o.fit(array, [1, -1])\n o.predict(np.array([[1, 2, -1], [0, 0, 1]]))\n # => [1, -1]\n from scipy.sparse import csr_matrix\n matrix = csr_matrix([[1, 2, -1], [0, 0, 1]])\n o.fit(matrix, [1, -1])\n o.predict(matrix)\n # => [1, -1]\n\n # Multi label classification\n import time\n import oll\n from sklearn.multiclass import OutputCodeClassifier\n from sklearn import datasets, cross_validation, metrics\n\n\n dataset = datasets.load_digits()\n ALGORITHMS = (\"P\", \"AP\", \"PA\", \"PA1\", \"PA2\", \"PAK\", \"CW\", \"AL\")\n for algorithm in ALGORITHMS:\n     print(algorithm)\n     occ_predicts = []\n     expected = []\n     start = time.time()\n     for (train_idx, test_idx) in cross_validation.StratifiedKFold(dataset.target,\n                                                                   n_folds=10, shuffle=True):\n         clf = OutputCodeClassifier(oll.oll(algorithm))\n         clf.fit(dataset.data[train_idx], dataset.target[train_idx])\n         occ_predicts += list(clf.predict(dataset.data[test_idx]))\n         expected += list(dataset.target[test_idx])\n     print('Elapsed time: %s' % (time.time() - start))\n     print('Accuracy', metrics.accuracy_score(expected, occ_predicts))\n # => P\n # => Elapsed time: 109.82188701629639\n # => Accuracy 0.770172509738\n # => AP\n # => Elapsed time: 111.42936396598816\n # => Accuracy 0.760155815248\n # => PA\n # => Elapsed time: 110.95964503288269\n # => Accuracy 0.74735670562\n # => PA1\n # => Elapsed time: 111.39844799041748\n # => Accuracy 0.806343906511\n # => PA2\n # => Elapsed time: 115.12716913223267\n # => Accuracy 0.766277128548\n # => PAK\n # => Elapsed time: 119.53838682174683\n # => Accuracy 0.77796327212\n # => CW\n # => Elapsed time: 121.20785689353943\n # => Accuracy 0.771285475793\n # => AL\n # => Elapsed time: 116.52497220039368\n # => Accuracy 0.785754034502\n\nNote\n----\n- This module requires C++ compiler to build.\n- oll.cpp & oll.hpp : Copyright (c) 2011, Daisuke Okanohara\n- oll_swig_wrap.cxx is generated based on 'oll_swig.i' in oll-ruby (https://github.com/syou6162/oll-ruby)\n\nLicense\n-------\nNew BSD License.\n\n.. |travis| image:: https://travis-ci.org/ikegami-yukino/oll-python.svg?branch=master\n    :target: https://travis-ci.org/ikegami-yukino/oll-python\n    :alt: travis-ci.org\n.. |coveralls| image:: https://coveralls.io/repos/ikegami-yukino/oll-python/badge.png\n    :target: https://coveralls.io/r/ikegami-yukino/oll-python\n    :alt: coveralls.io\n\n.. |version| image:: https://img.shields.io/pypi/v/oll.svg\n    :target: http://pypi.python.org/pypi/oll/\n    :alt: latest version\n\n.. |license| image:: https://img.shields.io/pypi/l/oll.svg\n    :target: http://pypi.python.org/pypi/oll/\n    :alt: license\n\n\n\nCHANGES\n=======\n\n0.2.1 (2017-6-30)\n-------------------\n\n- Multi label clasification (using scikit-learn)\n- Support Python 3.6\n\n0.2 (2016-11-26)\n-------------------\n\n- scikit-learn like fit/predict interfaces are available\n- Setting C and bias parameters is available in initialization\n- Support Python 3.5\n- Unsupport Python 2.6 and 3.3\n\n0.1.2 (2015-01-11)\n-------------------\n\n- Support testFile method\n- docstrings are available\n\n0.1.1 (2014-03-29)\n-------------------\n\n- Compatibility some compilers\n\n\n0.1 (2013-10-11)\n-------------------\n\n- Initial release.\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ikegami-yukino/oll-python", "keywords": "machine learning", "license": "", "maintainer": "", "maintainer_email": "", "name": "oll", "package_url": "https://pypi.org/project/oll/", "platform": "", "project_url": "https://pypi.org/project/oll/", "project_urls": {"Homepage": "https://github.com/ikegami-yukino/oll-python"}, "release_url": "https://pypi.org/project/oll/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Online binary classification algorithms library (wrapper for OLL C++ library)", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"oll-python\">\n<h2>oll-python</h2>\n<p><a href=\"https://travis-ci.org/ikegami-yukino/oll-python\" rel=\"nofollow\"><img alt=\"travis-ci.org\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc3131f61af839d30163f381a4ae0634954c06ea/68747470733a2f2f7472617669732d63692e6f72672f696b6567616d692d79756b696e6f2f6f6c6c2d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/r/ikegami-yukino/oll-python\" rel=\"nofollow\"><img alt=\"coveralls.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b4365a3021377b2179f470784a6c333e194c4e71/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f696b6567616d692d79756b696e6f2f6f6c6c2d707974686f6e2f62616467652e706e67\"></a> <a href=\"http://pypi.python.org/pypi/oll/\" rel=\"nofollow\"><img alt=\"latest version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0c978d31c991bfe3bd5187d5bfce20a622a738f9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f6c6c2e737667\"></a> <a href=\"http://pypi.python.org/pypi/oll/\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c3db76e04a379cd169d566117937e547f89e1e69/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6f6c6c2e737667\"></a></p>\n<p>This is a Python binding of the OLL library for machine learning.</p>\n<p>Currently, OLL 0.03 supports following binary classification algorithms:</p>\n<ul>\n<li>Perceptron</li>\n<li>Averaged Perceptron</li>\n<li>Passive Agressive (PA, PA-I, PA-II)</li>\n<li>ALMA (modified slightly from original)</li>\n<li>Confidence Weighted Linear-Classification.</li>\n</ul>\n<p>For details of oll, see: <a href=\"http://code.google.com/p/oll\" rel=\"nofollow\">http://code.google.com/p/oll</a></p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>$ pip install oll\n</pre>\n<p>OLL library is bundled, so you don\u2019t need to install it separately.</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">oll</span>\n<span class=\"c1\"># You can choose algorithms in</span>\n<span class=\"c1\"># \"P\" -&gt; Perceptron,</span>\n<span class=\"c1\"># \"AP\" -&gt; Averaged Perceptron,</span>\n<span class=\"c1\"># \"PA\" -&gt; Passive Agressive,</span>\n<span class=\"c1\"># \"PA1\" -&gt; Passive Agressive-I,</span>\n<span class=\"c1\"># \"PA2\" -&gt; Passive Agressive-II,</span>\n<span class=\"c1\"># \"PAK\" -&gt; Kernelized Passive Agressive,</span>\n<span class=\"c1\"># \"CW\" -&gt; Confidence Weighted Linear-Classification,</span>\n<span class=\"c1\"># \"AL\" -&gt; ALMA</span>\n<span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">oll</span><span class=\"o\">.</span><span class=\"n\">oll</span><span class=\"p\">(</span><span class=\"s2\">\"CW\"</span><span class=\"p\">,</span> <span class=\"n\">C</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">bias</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">)</span>\n<span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">({</span><span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">1.0</span><span class=\"p\">},</span> <span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># train</span>\n<span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">classify</span><span class=\"p\">({</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mf\">1.0</span><span class=\"p\">})</span>  <span class=\"c1\"># predict</span>\n<span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'oll.model'</span><span class=\"p\">)</span>\n<span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'oll.model'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># scikit-learn like fit/predict interface</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"n\">array</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]]))</span>\n<span class=\"c1\"># =&gt; [1, -1]</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scipy.sparse</span> <span class=\"kn\">import</span> <span class=\"n\">csr_matrix</span>\n<span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"n\">csr_matrix</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">matrix</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">matrix</span><span class=\"p\">)</span>\n<span class=\"c1\"># =&gt; [1, -1]</span>\n\n<span class=\"c1\"># Multi label classification</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">oll</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.multiclass</span> <span class=\"kn\">import</span> <span class=\"n\">OutputCodeClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn</span> <span class=\"kn\">import</span> <span class=\"n\">datasets</span><span class=\"p\">,</span> <span class=\"n\">cross_validation</span><span class=\"p\">,</span> <span class=\"n\">metrics</span>\n\n\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load_digits</span><span class=\"p\">()</span>\n<span class=\"n\">ALGORITHMS</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"P\"</span><span class=\"p\">,</span> <span class=\"s2\">\"AP\"</span><span class=\"p\">,</span> <span class=\"s2\">\"PA\"</span><span class=\"p\">,</span> <span class=\"s2\">\"PA1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"PA2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"PAK\"</span><span class=\"p\">,</span> <span class=\"s2\">\"CW\"</span><span class=\"p\">,</span> <span class=\"s2\">\"AL\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">algorithm</span> <span class=\"ow\">in</span> <span class=\"n\">ALGORITHMS</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">algorithm</span><span class=\"p\">)</span>\n    <span class=\"n\">occ_predicts</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">expected</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">train_idx</span><span class=\"p\">,</span> <span class=\"n\">test_idx</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">cross_validation</span><span class=\"o\">.</span><span class=\"n\">StratifiedKFold</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">,</span>\n                                                                  <span class=\"n\">n_folds</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">OutputCodeClassifier</span><span class=\"p\">(</span><span class=\"n\">oll</span><span class=\"o\">.</span><span class=\"n\">oll</span><span class=\"p\">(</span><span class=\"n\">algorithm</span><span class=\"p\">))</span>\n        <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">train_idx</span><span class=\"p\">],</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">[</span><span class=\"n\">train_idx</span><span class=\"p\">])</span>\n        <span class=\"n\">occ_predicts</span> <span class=\"o\">+=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">test_idx</span><span class=\"p\">]))</span>\n        <span class=\"n\">expected</span> <span class=\"o\">+=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">[</span><span class=\"n\">test_idx</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Elapsed time: </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">start</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Accuracy'</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">accuracy_score</span><span class=\"p\">(</span><span class=\"n\">expected</span><span class=\"p\">,</span> <span class=\"n\">occ_predicts</span><span class=\"p\">))</span>\n<span class=\"c1\"># =&gt; P</span>\n<span class=\"c1\"># =&gt; Elapsed time: 109.82188701629639</span>\n<span class=\"c1\"># =&gt; Accuracy 0.770172509738</span>\n<span class=\"c1\"># =&gt; AP</span>\n<span class=\"c1\"># =&gt; Elapsed time: 111.42936396598816</span>\n<span class=\"c1\"># =&gt; Accuracy 0.760155815248</span>\n<span class=\"c1\"># =&gt; PA</span>\n<span class=\"c1\"># =&gt; Elapsed time: 110.95964503288269</span>\n<span class=\"c1\"># =&gt; Accuracy 0.74735670562</span>\n<span class=\"c1\"># =&gt; PA1</span>\n<span class=\"c1\"># =&gt; Elapsed time: 111.39844799041748</span>\n<span class=\"c1\"># =&gt; Accuracy 0.806343906511</span>\n<span class=\"c1\"># =&gt; PA2</span>\n<span class=\"c1\"># =&gt; Elapsed time: 115.12716913223267</span>\n<span class=\"c1\"># =&gt; Accuracy 0.766277128548</span>\n<span class=\"c1\"># =&gt; PAK</span>\n<span class=\"c1\"># =&gt; Elapsed time: 119.53838682174683</span>\n<span class=\"c1\"># =&gt; Accuracy 0.77796327212</span>\n<span class=\"c1\"># =&gt; CW</span>\n<span class=\"c1\"># =&gt; Elapsed time: 121.20785689353943</span>\n<span class=\"c1\"># =&gt; Accuracy 0.771285475793</span>\n<span class=\"c1\"># =&gt; AL</span>\n<span class=\"c1\"># =&gt; Elapsed time: 116.52497220039368</span>\n<span class=\"c1\"># =&gt; Accuracy 0.785754034502</span>\n</pre>\n</div>\n<div id=\"note\">\n<h3>Note</h3>\n<ul>\n<li>This module requires C++ compiler to build.</li>\n<li>oll.cpp &amp; oll.hpp : Copyright (c) 2011, Daisuke Okanohara</li>\n<li>oll_swig_wrap.cxx is generated based on \u2018oll_swig.i\u2019 in oll-ruby (<a href=\"https://github.com/syou6162/oll-ruby\" rel=\"nofollow\">https://github.com/syou6162/oll-ruby</a>)</li>\n</ul>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>New BSD License.</p>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>0.2.1 (2017-6-30)</h3>\n<ul>\n<li>Multi label clasification (using scikit-learn)</li>\n<li>Support Python 3.6</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2 (2016-11-26)</h3>\n<ul>\n<li>scikit-learn like fit/predict interfaces are available</li>\n<li>Setting C and bias parameters is available in initialization</li>\n<li>Support Python 3.5</li>\n<li>Unsupport Python 2.6 and 3.3</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.2 (2015-01-11)</h3>\n<ul>\n<li>Support testFile method</li>\n<li>docstrings are available</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.1 (2014-03-29)</h3>\n<ul>\n<li>Compatibility some compilers</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1 (2013-10-11)</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2987989, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "0fa81dc4875d86b9d4892caabdd5d012", "sha256": "15b354aac18137215bfecc92aa400ab78a546762375032e5e91aed0f9a594563"}, "downloads": -1, "filename": "oll-0.1.tar.gz", "has_sig": false, "md5_digest": "0fa81dc4875d86b9d4892caabdd5d012", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66823, "upload_time": "2013-10-11T17:03:31", "upload_time_iso_8601": "2013-10-11T17:03:31.456340Z", "url": "https://files.pythonhosted.org/packages/16/d4/922d2807126c11c356df54a9efec2ff3971da40745c1f850967e2f277b48/oll-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "2ba30a544ff523c89bb7530949608c92", "sha256": "be345faf4f0b9e6982db8ee310f93f81be26cea8b2f533a0eaf5f1dc26754238"}, "downloads": -1, "filename": "oll-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2ba30a544ff523c89bb7530949608c92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67185, "upload_time": "2014-03-29T02:52:52", "upload_time_iso_8601": "2014-03-29T02:52:52.885528Z", "url": "https://files.pythonhosted.org/packages/80/11/89790a317649ac55b640a774af7b3b295d346175e75fdb7023e12974c8e9/oll-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3559d0b9f94d350281028117d7805105", "sha256": "82f3848811d4f2c7bd192cf4cba686101d07187dff9a55acd44158c694147899"}, "downloads": -1, "filename": "oll-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3559d0b9f94d350281028117d7805105", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67794, "upload_time": "2015-01-10T21:27:38", "upload_time_iso_8601": "2015-01-10T21:27:38.564371Z", "url": "https://files.pythonhosted.org/packages/99/79/95fb9a36715f347fad4705b0058848e578f395651a4ffc54d126c1829d1c/oll-0.1.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "777f0613853a4c75791cb887c2e24b82", "sha256": "de9a4a45a5da1cc55882289e85f186f582c024f82724053b813b0bd54c899d23"}, "downloads": -1, "filename": "oll-0.2.1.tar.gz", "has_sig": false, "md5_digest": "777f0613853a4c75791cb887c2e24b82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70068, "upload_time": "2017-06-29T17:03:07", "upload_time_iso_8601": "2017-06-29T17:03:07.625279Z", "url": "https://files.pythonhosted.org/packages/ac/c8/91ed18f42663960273ed4480e6b8cc51f234169a6a08ee3abb1fbb716759/oll-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "777f0613853a4c75791cb887c2e24b82", "sha256": "de9a4a45a5da1cc55882289e85f186f582c024f82724053b813b0bd54c899d23"}, "downloads": -1, "filename": "oll-0.2.1.tar.gz", "has_sig": false, "md5_digest": "777f0613853a4c75791cb887c2e24b82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70068, "upload_time": "2017-06-29T17:03:07", "upload_time_iso_8601": "2017-06-29T17:03:07.625279Z", "url": "https://files.pythonhosted.org/packages/ac/c8/91ed18f42663960273ed4480e6b8cc51f234169a6a08ee3abb1fbb716759/oll-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:39 2020"}