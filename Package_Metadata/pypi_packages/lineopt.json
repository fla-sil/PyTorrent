{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "Installing\n==========\n\n.. code-block:: bash\n\n  pip3 install throttle\n\nUsage\n=====\n\n.. code-block:: python\n\n  import lineopt\n\n  # dict w/ extra methods\n  state = lineopt.State()\n\n  @state.sub('echo')\n  def state_0(argument):\n\n    return argument\n\n  @state_0.sub('loud')\n  def state_0_0(argument):\n\n    return argument.upper()\n\n  flags = {'-c': 'content', '-s': 'meddle'}\n\n  @state_0.sub('fancy', flags)\n  def state_0_1(arguments):\n\n    content = arguments['-c']\n\n    meddle = arguments.get('-s', ' ')\n\n    return meddle.join(content)\n\n  starts = ('!', '.')\n\n  def parse(value, starts = starts):\n\n    try:\n\n      (start, names, argument, function) = state.context(starts, value)\n\n    except (KeyError, ValueError) as error:\n\n      raise\n\n      result = repr(error)\n\n    else:\n\n      result = function(argument)\n\n    print(result)\n\n  say = 'vocalizing is fun' # argument\n\n  parse(f'!echo {say}') # vocalizing is fun\n  parse(f'.echo.loud {say}') # VOCALIZING IS FUN\n  parse(f'!echo.fancy -c {say}') # v o c a l i z i n g   i s   f u n\n  parse(f'.echo.fancy {say} -s ~') # v~o~c~a~l~i~z~i~n~g~ ~i~s~ ~f~u~n\n  parse(f'-echo.loud {say}') # ValueError: 'invalid start'\n  parse(f'.fancy {say}') # KeyError: 'fancy' (only sub of echo)\n\nLinks\n-----\n\n- `Documentation <https://lineopt.readthedocs.io>`_\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Exahilosys/lineopt", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lineopt", "package_url": "https://pypi.org/project/lineopt/", "platform": "", "project_url": "https://pypi.org/project/lineopt/", "project_urls": {"Homepage": "https://github.com/Exahilosys/lineopt"}, "release_url": "https://pypi.org/project/lineopt/0.0.4/", "requires_dist": ["flagopt", "sphinx ; extra == 'docs'"], "requires_python": "", "summary": "Command line based invoke framework.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"installing\">\n<h2>Installing</h2>\n<pre>pip3 install throttle\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lineopt</span>\n\n<span class=\"c1\"># dict w/ extra methods</span>\n<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">lineopt</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@state</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s1\">'echo'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">state_0</span><span class=\"p\">(</span><span class=\"n\">argument</span><span class=\"p\">):</span>\n\n  <span class=\"k\">return</span> <span class=\"n\">argument</span>\n\n<span class=\"nd\">@state_0</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s1\">'loud'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">state_0_0</span><span class=\"p\">(</span><span class=\"n\">argument</span><span class=\"p\">):</span>\n\n  <span class=\"k\">return</span> <span class=\"n\">argument</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n\n<span class=\"n\">flags</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'-c'</span><span class=\"p\">:</span> <span class=\"s1\">'content'</span><span class=\"p\">,</span> <span class=\"s1\">'-s'</span><span class=\"p\">:</span> <span class=\"s1\">'meddle'</span><span class=\"p\">}</span>\n\n<span class=\"nd\">@state_0</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s1\">'fancy'</span><span class=\"p\">,</span> <span class=\"n\">flags</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">state_0_1</span><span class=\"p\">(</span><span class=\"n\">arguments</span><span class=\"p\">):</span>\n\n  <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">arguments</span><span class=\"p\">[</span><span class=\"s1\">'-c'</span><span class=\"p\">]</span>\n\n  <span class=\"n\">meddle</span> <span class=\"o\">=</span> <span class=\"n\">arguments</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'-s'</span><span class=\"p\">,</span> <span class=\"s1\">' '</span><span class=\"p\">)</span>\n\n  <span class=\"k\">return</span> <span class=\"n\">meddle</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">)</span>\n\n<span class=\"n\">starts</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'!'</span><span class=\"p\">,</span> <span class=\"s1\">'.'</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">parse</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">starts</span> <span class=\"o\">=</span> <span class=\"n\">starts</span><span class=\"p\">):</span>\n\n  <span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">argument</span><span class=\"p\">,</span> <span class=\"n\">function</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">(</span><span class=\"n\">starts</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n  <span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"ne\">KeyError</span><span class=\"p\">,</span> <span class=\"ne\">ValueError</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">error</span><span class=\"p\">:</span>\n\n    <span class=\"k\">raise</span>\n\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">)</span>\n\n  <span class=\"k\">else</span><span class=\"p\">:</span>\n\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">argument</span><span class=\"p\">)</span>\n\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"n\">say</span> <span class=\"o\">=</span> <span class=\"s1\">'vocalizing is fun'</span> <span class=\"c1\"># argument</span>\n\n<span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'!echo </span><span class=\"si\">{</span><span class=\"n\">say</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span> <span class=\"c1\"># vocalizing is fun</span>\n<span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'.echo.loud </span><span class=\"si\">{</span><span class=\"n\">say</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span> <span class=\"c1\"># VOCALIZING IS FUN</span>\n<span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'!echo.fancy -c </span><span class=\"si\">{</span><span class=\"n\">say</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span> <span class=\"c1\"># v o c a l i z i n g   i s   f u n</span>\n<span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'.echo.fancy </span><span class=\"si\">{</span><span class=\"n\">say</span><span class=\"si\">}</span><span class=\"s1\"> -s ~'</span><span class=\"p\">)</span> <span class=\"c1\"># v~o~c~a~l~i~z~i~n~g~ ~i~s~ ~f~u~n</span>\n<span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'-echo.loud </span><span class=\"si\">{</span><span class=\"n\">say</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span> <span class=\"c1\"># ValueError: 'invalid start'</span>\n<span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'.fancy </span><span class=\"si\">{</span><span class=\"n\">say</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span> <span class=\"c1\"># KeyError: 'fancy' (only sub of echo)</span>\n</pre>\n<div id=\"links\">\n<h3>Links</h3>\n<ul>\n<li><a href=\"https://lineopt.readthedocs.io\" rel=\"nofollow\">Documentation</a></li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6123191, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "320f41987e90bf0816a005bfbb98d923", "sha256": "9492e98a348f9316035583e76c776e50af846cc38c0049a2eb5babdd3f7fbb8a"}, "downloads": -1, "filename": "lineopt-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "320f41987e90bf0816a005bfbb98d923", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3870, "upload_time": "2019-11-07T13:17:47", "upload_time_iso_8601": "2019-11-07T13:17:47.274791Z", "url": "https://files.pythonhosted.org/packages/c9/eb/4bbe1ae8afed4cae756720b7d6fd567f8191bbd22110f0f2b034f8ad2c2e/lineopt-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "653183862fc1dd95e622673c25db4c10", "sha256": "0ca344c735aebab595f12e0e016024365e1b8575020e99079e51994e1685fbcd"}, "downloads": -1, "filename": "lineopt-0.0.3.tar.gz", "has_sig": false, "md5_digest": "653183862fc1dd95e622673c25db4c10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3156, "upload_time": "2019-11-07T13:17:49", "upload_time_iso_8601": "2019-11-07T13:17:49.766765Z", "url": "https://files.pythonhosted.org/packages/54/d5/dcb0989b3268887039f89cd343637d8a4b11653d417919af96698f349d1b/lineopt-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "0a8d432fe139751d6023d6e10d6d5346", "sha256": "c10c6fa909806c8a5c94111f49b3357c92aa1f7b6ebe604b38b19797d409dd90"}, "downloads": -1, "filename": "lineopt-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0a8d432fe139751d6023d6e10d6d5346", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3868, "upload_time": "2019-11-12T12:14:58", "upload_time_iso_8601": "2019-11-12T12:14:58.026638Z", "url": "https://files.pythonhosted.org/packages/7d/b9/c1801f53569da336cc34a8c281686ec31e0b1b1a74b4a476fcc995c9da84/lineopt-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ece92a4cb060a5ca5644ff575daf9901", "sha256": "a09f7bfeb61705322c19427353a22010aefdad59b7aa160d72ff0ad2202c912e"}, "downloads": -1, "filename": "lineopt-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ece92a4cb060a5ca5644ff575daf9901", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3136, "upload_time": "2019-11-12T12:15:00", "upload_time_iso_8601": "2019-11-12T12:15:00.318275Z", "url": "https://files.pythonhosted.org/packages/a9/ef/a6f18156329c53ae3bbd1f5553ef5f298e573d32380eb93e5c4587578f9e/lineopt-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a8d432fe139751d6023d6e10d6d5346", "sha256": "c10c6fa909806c8a5c94111f49b3357c92aa1f7b6ebe604b38b19797d409dd90"}, "downloads": -1, "filename": "lineopt-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0a8d432fe139751d6023d6e10d6d5346", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3868, "upload_time": "2019-11-12T12:14:58", "upload_time_iso_8601": "2019-11-12T12:14:58.026638Z", "url": "https://files.pythonhosted.org/packages/7d/b9/c1801f53569da336cc34a8c281686ec31e0b1b1a74b4a476fcc995c9da84/lineopt-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ece92a4cb060a5ca5644ff575daf9901", "sha256": "a09f7bfeb61705322c19427353a22010aefdad59b7aa160d72ff0ad2202c912e"}, "downloads": -1, "filename": "lineopt-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ece92a4cb060a5ca5644ff575daf9901", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3136, "upload_time": "2019-11-12T12:15:00", "upload_time_iso_8601": "2019-11-12T12:15:00.318275Z", "url": "https://files.pythonhosted.org/packages/a9/ef/a6f18156329c53ae3bbd1f5553ef5f298e573d32380eb93e5c4587578f9e/lineopt-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:44 2020"}