{"info": {"author": "Pedro Fern\u00e1ndez", "author_email": "rockersuke@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Triz2DAAD\n*********\n\nEnglish instructions below!\n\nTriz2DAAD versi\u00f3n 1.0.2 200222 (c) 2019 Pedro Fern\u00e1ndez\n\nTriz2DAAD es la fusi\u00f3n de los anteriores scripts de Python Triz2sce y Trizio2sce, que cargaban, en cada caso, ficheros procedentes de las utilidades Trizbort y Trizbort.io respectivamente. Este nuevo script carga indistintamente de una o de otra y realiza internamente la conversi\u00f3n necesaria para que un s\u00f3lo script se puedan manjar ambos formatos.\n\nTriz2DAAD.py es un script de Python 3.x que transforma un fichero generado con la utilidad de escritorio Trizbort (a partir de la versi\u00f3n 1.7.0) o su variante on-line Trizbort.io para mapear aventuras en un c\u00f3digo fuente compatible con el compilador del DAAD. No es un dise\u00f1ador visual de aventuras ni una aplicaci\u00f3n para su desarrollo completo. Est\u00e1 concebido como herramienta para hacer prototipos iniciales de aventuras con rapidez y facilidad y, a su vez, como herramienta de apoyo a autores n\u00f3veles, ideal para su uso en talleres de aprendizaje.\n\nUso:\n====\n\nUsar \"Python triz2DAAD.py -h\" en una l\u00ednea de comandos o powershell para ver las opciones.\n\nEl script requiere como argumentos un fichero de entrada (que debe ser un mapa generado por la utilidad Trizbort en formato XML, aunque con la extensi\u00f3n .trizbort,  o por Trizbort.io en formato json) y, opcionalmente, el nombre de un fichero de salida, que ser\u00e1 un c\u00f3digo fuente en formato .SCE compatible con la versi\u00f3n 2.40-2.42 del compilador del DAAD. Si no se especifica se crear\u00e1 un fichero con el mismo nombre y la extensi\u00f3n .SCE\n\n- La opci\u00f3n -p1 generar\u00e1 un listado SCE con los mensajes del sistema en primera persona. Por defecto \u00e9stos se crear\u00e1n en segunda persona.\n- La opci\u00f3n -e generar\u00e1 un listado SCE con los textos y el vocabulario en ingl\u00e9s. Por defecto se crear\u00e1n en espa\u00f1ol.\n- La opci\u00f3n -md a\u00f1adir\u00e1 c\u00f3digo (de compilaci\u00f3n condicional) para el modo \"dibujo invisible\" en los Amstrad CPC.\n- La opci\u00f3n -dsf generar\u00e1 un fichero DSF compatible con el nuevo compilador DAAD Reborn Compiler.\n- La opci\u00f3n -sl a\u00f1adir\u00e1 una barra de estado al c\u00f3digo fuente resultante (gastando mensajes adicionales)\n\nEnlaces:\n========\n- Trizbort:\n\n - http://trizbort.com\n\n- Trizbort.io:\n\n - http://trizbort.io/\n\n- DAAD\n\n - http://wiki.caad.es/DAAD\n - http://www.rockersuke.com/if/ebbp/\n - https://github.com/daad-adventure-writer/daad\n\nHasta el momento parece convertir correctamente:\n\n- Habitaciones, incluyendo sus descripciones y estableciendo la localidad de comienzo.\n- Conexiones comunes por puntos cardinales (N,S,E,O,NE,NO,SE,SO).\n- Conexiones up/down o in/out.\n- Conexiones de una sola direcci\u00f3n.\n- Objetos incluidos en las habitaciones.\n- Localidades marcadas como \"oscuras\".\n\nTriz2DAAD a\u00f1ade (con la opci\u00f3n -sl) una barra de estado con el nombre de la localidad actual y el n\u00famero de turnos transcurridos en la aventura.\nTambi\u00e9n a\u00f1ade un listado autom\u00e1tico de salidas y soporte para respuestas por defecto a los comandos \"SALIDAS\", \"MIRAR\",\"EXAMINAR\", \"AYUDA\", \"METER\", \"SACAR\" Y \"VACIAR\". Esto gastar\u00e1 un n\u00famero variable de mensajes en la secci\u00f3n /MTX y las banderas 100 y 101.\n\nTriz2DAAD usa los textos del cuadro de di\u00e1logo \"map settings\" como pantalla de presentaci\u00f3n y cr\u00e9ditos (a\u00f1adiendo frases por defecto en caso de que estuviesen vac\u00edos). Crear\u00e1 un texto por defecto de introducci\u00f3n a la aventura editable en el mensaje n\u00ba 14 que en el caso del Trizbort original se corresponder\u00e1 con el campo \"History\" (inexistente en Trizbort.io).\n\nA su vez usar\u00e1 el campo \"subtitle\" de cada localidad como texto para su descripci\u00f3n corta en la barra de estado (m\u00e1ximo 26 caracteres). Si no lo hubiera usar\u00e1 el campo \"name\" y si \u00e9ste fuera el elegido por defecto (\"Room\" o \"Cave\") lo cambiar\u00e1 por \"Localidad xx\". A su vez usar\u00e1 el campo \"description\" para la descripci\u00f3n larga de la localidad en la ventana de texto de la aventura (usando de nuevo un texto por defecto \"Descripci\u00f3n localidad xx\" si no encontrase ninguno).\n\nIgualmente, triz2DAAD usar\u00e1 el campo \"Name\" de los objetos como su palabra en el vocabulario. El campo \"Description\" se usar\u00e1 en los listados de objetos.\n\n- Para Trizbort.io se recomienda usar el mismo nombre con el art\u00edculo indeterminado apropiado seg\u00fan g\u00e9nero y n\u00famero para su \u00f3ptimo procesamiento por el motor del DAAD. Ej: \"Libro\" -> \"Un libro\", \"Gafas\" -> \"Unas gafas\".\n- En el caso de partir del Trizbrt de escritorio se reconocer\u00e1n los atributos [f] y [2] en el campo \"name\" como indicadores de \"femenino\" y \"plural\" respectivamente (entendi\u00e9ndose por defecto que el objeto tiene un nombre masculino y singular si no se indica nada) y se a\u00f1adir\u00e1 el art\u00edculo indeterminado (un, unos, una, unas) correspondiente al texto de los listados.\n\nSiguiendo las convenciones del Trizbort original, Triz2DAAD buscar\u00e1 las cadenas [w] y [c] en el nombre de los objetos para a\u00f1adirles los atributos ropa y contenedor (tanto en la aplicaci\u00f3n de escritorio como en la de web).\n\nY por el momento triz2DAAD no puede manejarse con:\n\n- Textos personalizados en los extremos de las conexiones.\n- Conexiones con puntos intermedios en los espacios del mapa. Cualquier cosa que no sea una conexi\u00f3n directa entre una habitaci\u00f3n y otra la ignorar\u00e1.\n\nBugs conocidos:\n===============\n\n- Debido al comportamiento ligeramente distinto del int\u00e9rprete ingl\u00e9s, intentar meter un objeto contenedor dentro de s\u00ed mismo (o de un objeto inexistente) en una obra inglesa, en lugar de un mensaje de error hace que el jugador deje el objeto en la localidad actual.\n\n- Debido a que los condactos para meter y/o sacar objetos de contenedores usan un \u00fanico mensaje del sistema, es probable que haya disonancias con el n\u00famero (singular/plural) del objeto.\n\nHISTORIA\n========\n\n- **1.0.2** 200222\n\n - Arreglado: especificar un fichero de salida colgaba el programa.\n - Bloqueados el reposicionamiento de la ventana de texto y las acciones \"TODO\" en MSX2 para una mejor compatibilidad con msx2daad.\n - Ahora la barra de estado es enteramente opcional.\n - A\u00f1adidas clausulas #define en la secci\u00f3n SYMBOLS para establecer los colores de texto y papel en cada plataforma, as\u00ed como la fila de la ventana de texto y de la barra de estado.\n - Arreglado: Los condactos WHATO en las entradas de EXAMINAR y VACIAR pod\u00edan enviar el valor 255 al condacto PRESENT [51] con resultados que parec\u00edan consistentes pero resultaron ser impredecibles.\n - Reinicia todas las banderas (menos GFlags) a 0, incluida la 255 (que se quedaba a 255 en la plantilla original).\n - Soporte para objetos contenidos dentro de otros seg\u00fan mapas de trizbort.io\n - Arreglado: dejaba el t\u00edtulo en blanco si no se especificaba en map-settings de Trizbort de escritorio.\n - Arreglado: al importar ficheros XML del trizbort de escritorio ignoraba el campo 'history' de map-settings.\n - Permite objetos con el mismo nombre (avisando y evitando repetirlo en el vocabulario)\n\n- **1.0.1** 190603\n\n - Actualizado a la nueva marca de inicio de entrada en formato DSF.\n - Arreglado: los mensajes de 1\u00aa y 2\u00aa persona estaban cambiados en modo DSF en ingl\u00e9s.\n - Arreglado: varios mensajes mal formateados en modo DSF en ingl\u00e9s.\n\n- **1.0** 190501\n\n - Carga ficheros tanto de Trizbort (aplicaci\u00f3n de escritorio) como de Trizbort.io (aplicaci\u00f3n web).\n - Opci\u00f3n para exportar a formato DSF del DAAD Reborn Compiler.\n \n\nTriz2DAAD english doc\n**********************\n\nTriz2DAAD version 1.0.2 200222 (c) 2019 Pedro Fern\u00e1ndez\n\nTriz2DAAD is a Python 3.x script that transforms a file generated with either the on-line text-adventure mapping tool Trizbort.io or the Trizbort desktop application into a source code compatible with the DAAD compiler. It's the fussion of former scripts Triz2SCE and Trizio2SCE, admitting both formats.\nIt's not meant to be either an adventure visual designer or a complete development tool. It's conceived as a fast and easy text-adventure prototyping tool, and also as a supporting tool for novel authors, specially suitable for learning workshops.\n\nUsage:\n======\n\nType \"Python triz2DAAD.py -h\" in a command line or powershell window to see the options.\n\nThe script requires as an argument a file (wwhich must be a map generated with either the Trizbort.io utility in json format or a XML trizbort file generated with the Trizbort desktop application) and, optionally, the name of an output file which will be a SCE formatted source code compatible with version 2.40-2.42 of the DAAD compiler. If it's not specified, a file with the same name and a .SCE extension will be created. \n\n- Option -p1 will create a SCE listing with first-person system messages. Default is second-person.\n- Option -e will create a SCE listing with english texts and vocabulary. Default is spanish.\n- Option -md will add some conditional code to support \"Invisible string\" mode in Amstrad CPC.\n- Option -dsf will create a DSF file compatible with the new DAAD Reborn Compiler.\n- Option -sl will add a status line to the resulting source code (at the expense of aditional messages)\n\nLinks:\n======\n\n-Trizbort:\n\n - http://trizbort.com\n\n- Trizbort.io:\n\n - http://trizbort.io/\n\n- DAAD\n\n - http://wiki.caad.es/DAAD\n - http://www.rockersuke.com/if/ebbp/\n - https://github.com/daad-adventure-writer/daad\n\nSo far it seems to convert correctly:\n\n- Rooms, including descriptions and setting the initial location.\n- Common cardinal points connections (N,S,E,W,NE,NW,SE,SW).\n- Up/down and in/out connections.\n- One way connections\n- Objects included in locations.\n- Locations labelled as \"dark\".\n\nTriz2DAAD adds (with -sl option) a status line with the current location name and the number of used turns.\nIt also adds an automatic exits listing and support for default answers to the \"EXITS\", \"LOOK\", \"EXAMINE\", \"HELP\" AND \"EMPTY\" commands. This will use a variable amount of messages in the /MTX section and flags 100 and 101.\n\nTriz2DAAD uses the fields in the \"map settings\" dialogue as an introduction screen and credits (adding default sentences if they were empty). It will create a default adventure introduction text the user can edit at message number 14 (in desktop trizbort it will use the \"history\" field).\n\nIt will also use each location \"subtitle\" field as a text for its short description at the status line (max. 26 characters). If it wasn't provided it will use the \"name\" field and if this was the default text (\"Room\" or \"Cave\") it will be changed to \"Loaction xx\". In turn, the \"description\" field will form the long room description in the adventure text window (again using a default \"Location xx description\" if there wasn't any).\n\nEqually, Triz2DAAD will use the objects field \"name\" as its word in the vocabulary. \"Description\" will be used in the objects listing.\n\n- When importing from Trizbort.io it's highly recommended tu use the same name with an appropriate indefinite article in order to secure an optimized processing by the DAAD engine. Examples: \"Book\" -> \"a book\", \"trousers\" - \"some trousers\".\n- When working from desktop Trizbort [f] (female) and [2] (plural) atributes will be recognized in the name filed (default is male and singular) adding the relevant indefinite articles in the listing texts.\n\nFollowing original Trizbort standards, Triz2DAAD will search for the [w] and [c] strings inside objects name, giving them wearable and container atributes.\n\nAnd for the moment Triz2DAAD cannot handle:\n\n- Personalized texts at the connections extremes.\n- Connections with intermediate points along the map. Anything other than a direct connection between a room and another will be ignored.\n\nKnown bugs:\n===========\n\n- Due to the slighty different behavior of the english interpreter, trying to put a container object inside itself (or into a non-existent object) in an english work, instead of displaying an error message will make player drop the object at current location.\n\n- Number (singular/plural) discordances are to be expected due to the fact that putting in and out condacts use just one system message for both cases.\n\nHISTORY\n========\n\n- **1.0.2** 200222\n\n - Fixed: adding a name for the output file crashed the program.\n - Blocked text-window repositioning and \"ALL\" actions in MSX2 for better compatibility with msx2daad.\n - Now the status line is entirely optional.\n - Added #define statements at SYMBOLS section to set paper and ink colours in every target platform as well as the text window and the status line row.\n - Fixed: WHATO condacts in EXAMINE and EMPTY entries could send a value of 255 to a PRESENT [51] condact with results that seemed consistent but turned out to be unpredictable.\n - All flags (save GFlags) are reset to 0, including 255 (which was kept to 255 in the original template).\n - Fixed: Containers support from 1.0.2b3 crashed in maps without objects.\n - Support for objects inside other objects as established in trizbort.io maps.\n - Fixed: title was left blank if not specified at map-settings in desktop Trizbort.\n - Fixed: Map-settings 'history' field is no longer ignored when importing XML from desktop trizbort.\n - Objects with the same name are now allowed (with a warning and without repeating the name at the VOC section).\n\n- **1.0.1** 190602\n\n - Updated support for the new \">\" mark for new entries in DSF format.\n - FIXED: 2nd and 1st person system messages were swapped in english DSF format.\n - FIXED: bad formatting in several english DSF messages.\n\n- **1.0** 190501\n\n - Load files from both Trizbort desktop and web applications.\n - Support forr DAAD Reborn Compiler DSF format.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.zonafi.es/triz2DAAD/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "triz2DAAD", "package_url": "https://pypi.org/project/triz2DAAD/", "platform": "", "project_url": "https://pypi.org/project/triz2DAAD/", "project_urls": {"Homepage": "http://www.zonafi.es/triz2DAAD/"}, "release_url": "https://pypi.org/project/triz2DAAD/1.0.2/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Convierte mapas de aventuras de texto generados por Trizbort en c\u00f3digo fuente para el DAAD.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"triz2daad\">\n<h2>Triz2DAAD</h2>\n<p>English instructions below!</p>\n<p>Triz2DAAD versi\u00f3n 1.0.2 200222 (c) 2019 Pedro Fern\u00e1ndez</p>\n<p>Triz2DAAD es la fusi\u00f3n de los anteriores scripts de Python Triz2sce y Trizio2sce, que cargaban, en cada caso, ficheros procedentes de las utilidades Trizbort y Trizbort.io respectivamente. Este nuevo script carga indistintamente de una o de otra y realiza internamente la conversi\u00f3n necesaria para que un s\u00f3lo script se puedan manjar ambos formatos.</p>\n<p>Triz2DAAD.py es un script de Python 3.x que transforma un fichero generado con la utilidad de escritorio Trizbort (a partir de la versi\u00f3n 1.7.0) o su variante on-line Trizbort.io para mapear aventuras en un c\u00f3digo fuente compatible con el compilador del DAAD. No es un dise\u00f1ador visual de aventuras ni una aplicaci\u00f3n para su desarrollo completo. Est\u00e1 concebido como herramienta para hacer prototipos iniciales de aventuras con rapidez y facilidad y, a su vez, como herramienta de apoyo a autores n\u00f3veles, ideal para su uso en talleres de aprendizaje.</p>\n<div id=\"uso\">\n<h3>Uso:</h3>\n<p>Usar \u201cPython triz2DAAD.py -h\u201d en una l\u00ednea de comandos o powershell para ver las opciones.</p>\n<p>El script requiere como argumentos un fichero de entrada (que debe ser un mapa generado por la utilidad Trizbort en formato XML, aunque con la extensi\u00f3n .trizbort,  o por Trizbort.io en formato json) y, opcionalmente, el nombre de un fichero de salida, que ser\u00e1 un c\u00f3digo fuente en formato .SCE compatible con la versi\u00f3n 2.40-2.42 del compilador del DAAD. Si no se especifica se crear\u00e1 un fichero con el mismo nombre y la extensi\u00f3n .SCE</p>\n<ul>\n<li>La opci\u00f3n -p1 generar\u00e1 un listado SCE con los mensajes del sistema en primera persona. Por defecto \u00e9stos se crear\u00e1n en segunda persona.</li>\n<li>La opci\u00f3n -e generar\u00e1 un listado SCE con los textos y el vocabulario en ingl\u00e9s. Por defecto se crear\u00e1n en espa\u00f1ol.</li>\n<li>La opci\u00f3n -md a\u00f1adir\u00e1 c\u00f3digo (de compilaci\u00f3n condicional) para el modo \u201cdibujo invisible\u201d en los Amstrad CPC.</li>\n<li>La opci\u00f3n -dsf generar\u00e1 un fichero DSF compatible con el nuevo compilador DAAD Reborn Compiler.</li>\n<li>La opci\u00f3n -sl a\u00f1adir\u00e1 una barra de estado al c\u00f3digo fuente resultante (gastando mensajes adicionales)</li>\n</ul>\n</div>\n<div id=\"enlaces\">\n<h3>Enlaces:</h3>\n<ul>\n<li>Trizbort:</li>\n</ul>\n<blockquote>\n<ul>\n<li><a href=\"http://trizbort.com\" rel=\"nofollow\">http://trizbort.com</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Trizbort.io:</li>\n</ul>\n<blockquote>\n<ul>\n<li><a href=\"http://trizbort.io/\" rel=\"nofollow\">http://trizbort.io/</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>DAAD</li>\n</ul>\n<blockquote>\n<ul>\n<li><a href=\"http://wiki.caad.es/DAAD\" rel=\"nofollow\">http://wiki.caad.es/DAAD</a></li>\n<li><a href=\"http://www.rockersuke.com/if/ebbp/\" rel=\"nofollow\">http://www.rockersuke.com/if/ebbp/</a></li>\n<li><a href=\"https://github.com/daad-adventure-writer/daad\" rel=\"nofollow\">https://github.com/daad-adventure-writer/daad</a></li>\n</ul>\n</blockquote>\n<p>Hasta el momento parece convertir correctamente:</p>\n<ul>\n<li>Habitaciones, incluyendo sus descripciones y estableciendo la localidad de comienzo.</li>\n<li>Conexiones comunes por puntos cardinales (N,S,E,O,NE,NO,SE,SO).</li>\n<li>Conexiones up/down o in/out.</li>\n<li>Conexiones de una sola direcci\u00f3n.</li>\n<li>Objetos incluidos en las habitaciones.</li>\n<li>Localidades marcadas como \u201coscuras\u201d.</li>\n</ul>\n<p>Triz2DAAD a\u00f1ade (con la opci\u00f3n -sl) una barra de estado con el nombre de la localidad actual y el n\u00famero de turnos transcurridos en la aventura.\nTambi\u00e9n a\u00f1ade un listado autom\u00e1tico de salidas y soporte para respuestas por defecto a los comandos \u201cSALIDAS\u201d, \u201cMIRAR\u201d,\u201dEXAMINAR\u201d, \u201cAYUDA\u201d, \u201cMETER\u201d, \u201cSACAR\u201d Y \u201cVACIAR\u201d. Esto gastar\u00e1 un n\u00famero variable de mensajes en la secci\u00f3n /MTX y las banderas 100 y 101.</p>\n<p>Triz2DAAD usa los textos del cuadro de di\u00e1logo \u201cmap settings\u201d como pantalla de presentaci\u00f3n y cr\u00e9ditos (a\u00f1adiendo frases por defecto en caso de que estuviesen vac\u00edos). Crear\u00e1 un texto por defecto de introducci\u00f3n a la aventura editable en el mensaje n\u00ba 14 que en el caso del Trizbort original se corresponder\u00e1 con el campo \u201cHistory\u201d (inexistente en Trizbort.io).</p>\n<p>A su vez usar\u00e1 el campo \u201csubtitle\u201d de cada localidad como texto para su descripci\u00f3n corta en la barra de estado (m\u00e1ximo 26 caracteres). Si no lo hubiera usar\u00e1 el campo \u201cname\u201d y si \u00e9ste fuera el elegido por defecto (\u201cRoom\u201d o \u201cCave\u201d) lo cambiar\u00e1 por \u201cLocalidad xx\u201d. A su vez usar\u00e1 el campo \u201cdescription\u201d para la descripci\u00f3n larga de la localidad en la ventana de texto de la aventura (usando de nuevo un texto por defecto \u201cDescripci\u00f3n localidad xx\u201d si no encontrase ninguno).</p>\n<p>Igualmente, triz2DAAD usar\u00e1 el campo \u201cName\u201d de los objetos como su palabra en el vocabulario. El campo \u201cDescription\u201d se usar\u00e1 en los listados de objetos.</p>\n<ul>\n<li>Para Trizbort.io se recomienda usar el mismo nombre con el art\u00edculo indeterminado apropiado seg\u00fan g\u00e9nero y n\u00famero para su \u00f3ptimo procesamiento por el motor del DAAD. Ej: \u201cLibro\u201d -&gt; \u201cUn libro\u201d, \u201cGafas\u201d -&gt; \u201cUnas gafas\u201d.</li>\n<li>En el caso de partir del Trizbrt de escritorio se reconocer\u00e1n los atributos [f] y [2] en el campo \u201cname\u201d como indicadores de \u201cfemenino\u201d y \u201cplural\u201d respectivamente (entendi\u00e9ndose por defecto que el objeto tiene un nombre masculino y singular si no se indica nada) y se a\u00f1adir\u00e1 el art\u00edculo indeterminado (un, unos, una, unas) correspondiente al texto de los listados.</li>\n</ul>\n<p>Siguiendo las convenciones del Trizbort original, Triz2DAAD buscar\u00e1 las cadenas [w] y [c] en el nombre de los objetos para a\u00f1adirles los atributos ropa y contenedor (tanto en la aplicaci\u00f3n de escritorio como en la de web).</p>\n<p>Y por el momento triz2DAAD no puede manejarse con:</p>\n<ul>\n<li>Textos personalizados en los extremos de las conexiones.</li>\n<li>Conexiones con puntos intermedios en los espacios del mapa. Cualquier cosa que no sea una conexi\u00f3n directa entre una habitaci\u00f3n y otra la ignorar\u00e1.</li>\n</ul>\n</div>\n<div id=\"bugs-conocidos\">\n<h3>Bugs conocidos:</h3>\n<ul>\n<li>Debido al comportamiento ligeramente distinto del int\u00e9rprete ingl\u00e9s, intentar meter un objeto contenedor dentro de s\u00ed mismo (o de un objeto inexistente) en una obra inglesa, en lugar de un mensaje de error hace que el jugador deje el objeto en la localidad actual.</li>\n<li>Debido a que los condactos para meter y/o sacar objetos de contenedores usan un \u00fanico mensaje del sistema, es probable que haya disonancias con el n\u00famero (singular/plural) del objeto.</li>\n</ul>\n</div>\n<div id=\"historia\">\n<h3>HISTORIA</h3>\n<ul>\n<li><strong>1.0.2</strong> 200222</li>\n</ul>\n<blockquote>\n<ul>\n<li>Arreglado: especificar un fichero de salida colgaba el programa.</li>\n<li>Bloqueados el reposicionamiento de la ventana de texto y las acciones \u201cTODO\u201d en MSX2 para una mejor compatibilidad con msx2daad.</li>\n<li>Ahora la barra de estado es enteramente opcional.</li>\n<li>A\u00f1adidas clausulas #define en la secci\u00f3n SYMBOLS para establecer los colores de texto y papel en cada plataforma, as\u00ed como la fila de la ventana de texto y de la barra de estado.</li>\n<li>Arreglado: Los condactos WHATO en las entradas de EXAMINAR y VACIAR pod\u00edan enviar el valor 255 al condacto PRESENT [51] con resultados que parec\u00edan consistentes pero resultaron ser impredecibles.</li>\n<li>Reinicia todas las banderas (menos GFlags) a 0, incluida la 255 (que se quedaba a 255 en la plantilla original).</li>\n<li>Soporte para objetos contenidos dentro de otros seg\u00fan mapas de trizbort.io</li>\n<li>Arreglado: dejaba el t\u00edtulo en blanco si no se especificaba en map-settings de Trizbort de escritorio.</li>\n<li>Arreglado: al importar ficheros XML del trizbort de escritorio ignoraba el campo \u2018history\u2019 de map-settings.</li>\n<li>Permite objetos con el mismo nombre (avisando y evitando repetirlo en el vocabulario)</li>\n</ul>\n</blockquote>\n<ul>\n<li><strong>1.0.1</strong> 190603</li>\n</ul>\n<blockquote>\n<ul>\n<li>Actualizado a la nueva marca de inicio de entrada en formato DSF.</li>\n<li>Arreglado: los mensajes de 1\u00aa y 2\u00aa persona estaban cambiados en modo DSF en ingl\u00e9s.</li>\n<li>Arreglado: varios mensajes mal formateados en modo DSF en ingl\u00e9s.</li>\n</ul>\n</blockquote>\n<ul>\n<li><strong>1.0</strong> 190501</li>\n</ul>\n<blockquote>\n<ul>\n<li>Carga ficheros tanto de Trizbort (aplicaci\u00f3n de escritorio) como de Trizbort.io (aplicaci\u00f3n web).</li>\n<li>Opci\u00f3n para exportar a formato DSF del DAAD Reborn Compiler.</li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div id=\"triz2daad-english-doc\">\n<h2>Triz2DAAD english doc</h2>\n<p>Triz2DAAD version 1.0.2 200222 (c) 2019 Pedro Fern\u00e1ndez</p>\n<p>Triz2DAAD is a Python 3.x script that transforms a file generated with either the on-line text-adventure mapping tool Trizbort.io or the Trizbort desktop application into a source code compatible with the DAAD compiler. It\u2019s the fussion of former scripts Triz2SCE and Trizio2SCE, admitting both formats.\nIt\u2019s not meant to be either an adventure visual designer or a complete development tool. It\u2019s conceived as a fast and easy text-adventure prototyping tool, and also as a supporting tool for novel authors, specially suitable for learning workshops.</p>\n<div id=\"usage\">\n<h3>Usage:</h3>\n<p>Type \u201cPython triz2DAAD.py -h\u201d in a command line or powershell window to see the options.</p>\n<p>The script requires as an argument a file (wwhich must be a map generated with either the Trizbort.io utility in json format or a XML trizbort file generated with the Trizbort desktop application) and, optionally, the name of an output file which will be a SCE formatted source code compatible with version 2.40-2.42 of the DAAD compiler. If it\u2019s not specified, a file with the same name and a .SCE extension will be created.</p>\n<ul>\n<li>Option -p1 will create a SCE listing with first-person system messages. Default is second-person.</li>\n<li>Option -e will create a SCE listing with english texts and vocabulary. Default is spanish.</li>\n<li>Option -md will add some conditional code to support \u201cInvisible string\u201d mode in Amstrad CPC.</li>\n<li>Option -dsf will create a DSF file compatible with the new DAAD Reborn Compiler.</li>\n<li>Option -sl will add a status line to the resulting source code (at the expense of aditional messages)</li>\n</ul>\n</div>\n<div id=\"links\">\n<h3>Links:</h3>\n<p>-Trizbort:</p>\n<blockquote>\n<ul>\n<li><a href=\"http://trizbort.com\" rel=\"nofollow\">http://trizbort.com</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Trizbort.io:</li>\n</ul>\n<blockquote>\n<ul>\n<li><a href=\"http://trizbort.io/\" rel=\"nofollow\">http://trizbort.io/</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>DAAD</li>\n</ul>\n<blockquote>\n<ul>\n<li><a href=\"http://wiki.caad.es/DAAD\" rel=\"nofollow\">http://wiki.caad.es/DAAD</a></li>\n<li><a href=\"http://www.rockersuke.com/if/ebbp/\" rel=\"nofollow\">http://www.rockersuke.com/if/ebbp/</a></li>\n<li><a href=\"https://github.com/daad-adventure-writer/daad\" rel=\"nofollow\">https://github.com/daad-adventure-writer/daad</a></li>\n</ul>\n</blockquote>\n<p>So far it seems to convert correctly:</p>\n<ul>\n<li>Rooms, including descriptions and setting the initial location.</li>\n<li>Common cardinal points connections (N,S,E,W,NE,NW,SE,SW).</li>\n<li>Up/down and in/out connections.</li>\n<li>One way connections</li>\n<li>Objects included in locations.</li>\n<li>Locations labelled as \u201cdark\u201d.</li>\n</ul>\n<p>Triz2DAAD adds (with -sl option) a status line with the current location name and the number of used turns.\nIt also adds an automatic exits listing and support for default answers to the \u201cEXITS\u201d, \u201cLOOK\u201d, \u201cEXAMINE\u201d, \u201cHELP\u201d AND \u201cEMPTY\u201d commands. This will use a variable amount of messages in the /MTX section and flags 100 and 101.</p>\n<p>Triz2DAAD uses the fields in the \u201cmap settings\u201d dialogue as an introduction screen and credits (adding default sentences if they were empty). It will create a default adventure introduction text the user can edit at message number 14 (in desktop trizbort it will use the \u201chistory\u201d field).</p>\n<p>It will also use each location \u201csubtitle\u201d field as a text for its short description at the status line (max. 26 characters). If it wasn\u2019t provided it will use the \u201cname\u201d field and if this was the default text (\u201cRoom\u201d or \u201cCave\u201d) it will be changed to \u201cLoaction xx\u201d. In turn, the \u201cdescription\u201d field will form the long room description in the adventure text window (again using a default \u201cLocation xx description\u201d if there wasn\u2019t any).</p>\n<p>Equally, Triz2DAAD will use the objects field \u201cname\u201d as its word in the vocabulary. \u201cDescription\u201d will be used in the objects listing.</p>\n<ul>\n<li>When importing from Trizbort.io it\u2019s highly recommended tu use the same name with an appropriate indefinite article in order to secure an optimized processing by the DAAD engine. Examples: \u201cBook\u201d -&gt; \u201ca book\u201d, \u201ctrousers\u201d - \u201csome trousers\u201d.</li>\n<li>When working from desktop Trizbort [f] (female) and [2] (plural) atributes will be recognized in the name filed (default is male and singular) adding the relevant indefinite articles in the listing texts.</li>\n</ul>\n<p>Following original Trizbort standards, Triz2DAAD will search for the [w] and [c] strings inside objects name, giving them wearable and container atributes.</p>\n<p>And for the moment Triz2DAAD cannot handle:</p>\n<ul>\n<li>Personalized texts at the connections extremes.</li>\n<li>Connections with intermediate points along the map. Anything other than a direct connection between a room and another will be ignored.</li>\n</ul>\n</div>\n<div id=\"known-bugs\">\n<h3>Known bugs:</h3>\n<ul>\n<li>Due to the slighty different behavior of the english interpreter, trying to put a container object inside itself (or into a non-existent object) in an english work, instead of displaying an error message will make player drop the object at current location.</li>\n<li>Number (singular/plural) discordances are to be expected due to the fact that putting in and out condacts use just one system message for both cases.</li>\n</ul>\n</div>\n<div id=\"history\">\n<h3>HISTORY</h3>\n<ul>\n<li><strong>1.0.2</strong> 200222</li>\n</ul>\n<blockquote>\n<ul>\n<li>Fixed: adding a name for the output file crashed the program.</li>\n<li>Blocked text-window repositioning and \u201cALL\u201d actions in MSX2 for better compatibility with msx2daad.</li>\n<li>Now the status line is entirely optional.</li>\n<li>Added #define statements at SYMBOLS section to set paper and ink colours in every target platform as well as the text window and the status line row.</li>\n<li>Fixed: WHATO condacts in EXAMINE and EMPTY entries could send a value of 255 to a PRESENT [51] condact with results that seemed consistent but turned out to be unpredictable.</li>\n<li>All flags (save GFlags) are reset to 0, including 255 (which was kept to 255 in the original template).</li>\n<li>Fixed: Containers support from 1.0.2b3 crashed in maps without objects.</li>\n<li>Support for objects inside other objects as established in trizbort.io maps.</li>\n<li>Fixed: title was left blank if not specified at map-settings in desktop Trizbort.</li>\n<li>Fixed: Map-settings \u2018history\u2019 field is no longer ignored when importing XML from desktop trizbort.</li>\n<li>Objects with the same name are now allowed (with a warning and without repeating the name at the VOC section).</li>\n</ul>\n</blockquote>\n<ul>\n<li><strong>1.0.1</strong> 190602</li>\n</ul>\n<blockquote>\n<ul>\n<li>Updated support for the new \u201c&gt;\u201d mark for new entries in DSF format.</li>\n<li>FIXED: 2nd and 1st person system messages were swapped in english DSF format.</li>\n<li>FIXED: bad formatting in several english DSF messages.</li>\n</ul>\n</blockquote>\n<ul>\n<li><strong>1.0</strong> 190501</li>\n</ul>\n<blockquote>\n<ul>\n<li>Load files from both Trizbort desktop and web applications.</li>\n<li>Support forr DAAD Reborn Compiler DSF format.</li>\n</ul>\n</blockquote>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6899483, "releases": {"0.9b0": [{"comment_text": "", "digests": {"md5": "dede1663ced4c7662b7ae8c029126060", "sha256": "d35f69df4c93afd5c255d38b7904dda6097ff496a1fd5c9a9697c1fef2610be0"}, "downloads": -1, "filename": "triz2DAAD-0.9b0.zip", "has_sig": false, "md5_digest": "dede1663ced4c7662b7ae8c029126060", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31354, "upload_time": "2019-04-20T11:31:21", "upload_time_iso_8601": "2019-04-20T11:31:21.040736Z", "url": "https://files.pythonhosted.org/packages/8d/c6/69cba01d6eaf1bc59dcd0f8e5804d59fa329542b196fd641ae01c1690e4f/triz2DAAD-0.9b0.zip", "yanked": false}], "0.9b1": [{"comment_text": "", "digests": {"md5": "bfe05c76d953b71ba374a0f1c9ea818d", "sha256": "41fcbcbc114fb589c9dc3da0249375ef898d29f551aa27d39934e33d8ceffd7a"}, "downloads": -1, "filename": "triz2DAAD-0.9b1.zip", "has_sig": false, "md5_digest": "bfe05c76d953b71ba374a0f1c9ea818d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31343, "upload_time": "2019-04-20T18:03:42", "upload_time_iso_8601": "2019-04-20T18:03:42.021041Z", "url": "https://files.pythonhosted.org/packages/3e/65/8a7779ff5808f2e2698d35b66c035bd61464c33ea50b35155c09c8cab898/triz2DAAD-0.9b1.zip", "yanked": false}], "0.9b2": [{"comment_text": "", "digests": {"md5": "2386c10379a4c3e788897745762f40e5", "sha256": "6e9e7865d0f1ae56e50abfa2e83268f1a7ed43e9ce288914e2bf78a2c425dc9a"}, "downloads": -1, "filename": "triz2DAAD-0.9b2.zip", "has_sig": false, "md5_digest": "2386c10379a4c3e788897745762f40e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31637, "upload_time": "2019-04-21T13:35:57", "upload_time_iso_8601": "2019-04-21T13:35:57.055774Z", "url": "https://files.pythonhosted.org/packages/45/1b/c2983805ecf31f9d15d89b9495240395f2f4513120f7370a1cfcae359e45/triz2DAAD-0.9b2.zip", "yanked": false}], "0.9b3": [{"comment_text": "", "digests": {"md5": "0c74b7c1796967ef6036902303a4586a", "sha256": "99ccf3ced6675aed6a3c78f16aef9a164668eeac821c5014a3c5456a11766fa2"}, "downloads": -1, "filename": "triz2DAAD-0.9b3.zip", "has_sig": false, "md5_digest": "0c74b7c1796967ef6036902303a4586a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 32195, "upload_time": "2019-04-21T19:38:42", "upload_time_iso_8601": "2019-04-21T19:38:42.545383Z", "url": "https://files.pythonhosted.org/packages/45/37/f3b8b298225706ddec0d252834bc648f6f779ddea3438166d39a59cc3db1/triz2DAAD-0.9b3.zip", "yanked": false}], "0.9b4": [{"comment_text": "", "digests": {"md5": "aa0deefa08162840d7cc2eb4d870ae5f", "sha256": "348df94a7d6e22dc06c2a893374743f70708d6ffc8ee9a3e008d27d8971d3c26"}, "downloads": -1, "filename": "triz2DAAD-0.9b4.zip", "has_sig": false, "md5_digest": "aa0deefa08162840d7cc2eb4d870ae5f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 33222, "upload_time": "2019-04-23T19:05:12", "upload_time_iso_8601": "2019-04-23T19:05:12.052387Z", "url": "https://files.pythonhosted.org/packages/87/36/32d22d9f7d7918b8386210d42813a0bde4b6274d62e2df807963461de146/triz2DAAD-0.9b4.zip", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "480db5679bb5028e53589a7acbbb9e04", "sha256": "83c898670ae762a410363170f73acb71f40b04f6c3fb13d14f6b80b0df0121f2"}, "downloads": -1, "filename": "triz2DAAD-1.0.zip", "has_sig": false, "md5_digest": "480db5679bb5028e53589a7acbbb9e04", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 37979, "upload_time": "2019-05-01T21:47:05", "upload_time_iso_8601": "2019-05-01T21:47:05.785669Z", "url": "https://files.pythonhosted.org/packages/d4/ac/418b134bfe7b43f6b347a6c1732794487a233ac3396eb4fa59d1c226e8a0/triz2DAAD-1.0.zip", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "e94dc7da8efbd78f6f8f154acf0a3d0d", "sha256": "78227f8dac27cdbcdea21788f30f95f6bee865e8560a8f74b347a6cd7a55bef9"}, "downloads": -1, "filename": "triz2DAAD-1.0.1.zip", "has_sig": false, "md5_digest": "e94dc7da8efbd78f6f8f154acf0a3d0d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38801, "upload_time": "2019-06-02T23:02:37", "upload_time_iso_8601": "2019-06-02T23:02:37.475380Z", "url": "https://files.pythonhosted.org/packages/b3/f7/f5204600b3ce96bd3cf1fb7de5e0aef046853cc6e81f253000583170989c/triz2DAAD-1.0.1.zip", "yanked": false}], "1.0.1b0": [{"comment_text": "", "digests": {"md5": "53e3a8bd4a25b5340ad9e056639f1463", "sha256": "ec1d0b298e3faa336ba84fe66648fdae53be94c3ced8726abddea37c628bdf15"}, "downloads": -1, "filename": "triz2DAAD-1.0.1b0.zip", "has_sig": false, "md5_digest": "53e3a8bd4a25b5340ad9e056639f1463", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38489, "upload_time": "2019-06-01T22:55:03", "upload_time_iso_8601": "2019-06-01T22:55:03.012578Z", "url": "https://files.pythonhosted.org/packages/4e/39/a084e20a73e5d83c1dd7044a27cc61d5df950f0c3b3415e14c034a4b7452/triz2DAAD-1.0.1b0.zip", "yanked": false}], "1.0.1rc0": [{"comment_text": "", "digests": {"md5": "99c4f86d965df337463765245c7a2277", "sha256": "bc1c4057d37a9c680c8b458b99621f0eb22681f8cf9d2e6a0ca00a91c6098fc9"}, "downloads": -1, "filename": "triz2DAAD-1.0.1rc0.zip", "has_sig": false, "md5_digest": "99c4f86d965df337463765245c7a2277", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38873, "upload_time": "2019-06-02T12:39:56", "upload_time_iso_8601": "2019-06-02T12:39:56.135471Z", "url": "https://files.pythonhosted.org/packages/f2/0a/216ab258afad43e7e2e3a79de63bf34c03941e06b0f3ba53ddd68baa5e7d/triz2DAAD-1.0.1rc0.zip", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "838227f29a5501bfd545d60d550e7fb3", "sha256": "f5927aa806a54331cb7c1cad5afe9b14c1b0a060da60e8eaccb3b4313af8b2f0"}, "downloads": -1, "filename": "triz2DAAD-1.0.2.zip", "has_sig": false, "md5_digest": "838227f29a5501bfd545d60d550e7fb3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 44048, "upload_time": "2020-02-22T20:23:16", "upload_time_iso_8601": "2020-02-22T20:23:16.798235Z", "url": "https://files.pythonhosted.org/packages/cd/b4/1be47b3384b3f7f8e04da0cce22830884e2a2d94a075d28fe0645dc2d036/triz2DAAD-1.0.2.zip", "yanked": false}], "1.0.2b0": [{"comment_text": "", "digests": {"md5": "cc1c45011a537ecc7c491f7ff3340925", "sha256": "7d2666b1b83e2c388f0d472845fa59508603666f804dadf67d89411b9c4697d9"}, "downloads": -1, "filename": "triz2DAAD-1.0.2b0.zip", "has_sig": false, "md5_digest": "cc1c45011a537ecc7c491f7ff3340925", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 39263, "upload_time": "2019-10-13T20:54:29", "upload_time_iso_8601": "2019-10-13T20:54:29.805569Z", "url": "https://files.pythonhosted.org/packages/ab/f5/33ad0efa9c8ab76c0e7895d9a7a22ba371e29bbcf4ac2d6dbce605ec11b8/triz2DAAD-1.0.2b0.zip", "yanked": false}], "1.0.2b1": [{"comment_text": "", "digests": {"md5": "5c12268cf72627a4521f78039e2b0540", "sha256": "440ff77be903b2e8a52400135150563c77b7520d6de96bcf9472b407f10f75da"}, "downloads": -1, "filename": "triz2DAAD-1.0.2b1.zip", "has_sig": false, "md5_digest": "5c12268cf72627a4521f78039e2b0540", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 39567, "upload_time": "2019-10-14T20:03:37", "upload_time_iso_8601": "2019-10-14T20:03:37.756025Z", "url": "https://files.pythonhosted.org/packages/ab/ad/f24602b8851d8ccd9e9602e4dd34246fc954e21fdc1bef479590350bcd10/triz2DAAD-1.0.2b1.zip", "yanked": false}], "1.0.2b2": [{"comment_text": "", "digests": {"md5": "b1e418883e633a3edad0ea5a38224fc9", "sha256": "685283e18bd799273a146e45f7b52912d5ded0fd947fe78461ebda2954f14902"}, "downloads": -1, "filename": "triz2DAAD-1.0.2b2.zip", "has_sig": false, "md5_digest": "b1e418883e633a3edad0ea5a38224fc9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 39785, "upload_time": "2019-10-31T00:09:29", "upload_time_iso_8601": "2019-10-31T00:09:29.134403Z", "url": "https://files.pythonhosted.org/packages/17/06/6e5173bcb86fc92b5e35a4565cf836dac9f84e6b4d36fca21da883f0bf44/triz2DAAD-1.0.2b2.zip", "yanked": false}], "1.0.2b3": [{"comment_text": "", "digests": {"md5": "d6e0c53f29427d6d035f5b7d68995d1d", "sha256": "b9fa1b662a9d93a93e2380b659bc8598a4ab4f6d68bcfaada0aa7f567fc04bac"}, "downloads": -1, "filename": "triz2DAAD-1.0.2b3.zip", "has_sig": false, "md5_digest": "d6e0c53f29427d6d035f5b7d68995d1d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 40537, "upload_time": "2019-11-03T03:07:55", "upload_time_iso_8601": "2019-11-03T03:07:55.577259Z", "url": "https://files.pythonhosted.org/packages/3f/bb/1fb1026685e85790e21f590bcb15a11a532c5b29a99959a4d7f82b62d97b/triz2DAAD-1.0.2b3.zip", "yanked": false}], "1.0.2b4": [{"comment_text": "", "digests": {"md5": "2094056a10168be1a08b02757a254e7a", "sha256": "4fc10727135c4a583301c80b128c3c8ba33e1c9b6df5f81fc64136ab29a83a24"}, "downloads": -1, "filename": "triz2DAAD-1.0.2b4.zip", "has_sig": false, "md5_digest": "2094056a10168be1a08b02757a254e7a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 40913, "upload_time": "2019-11-13T23:53:28", "upload_time_iso_8601": "2019-11-13T23:53:28.093746Z", "url": "https://files.pythonhosted.org/packages/bd/e4/871ed92936e38c3caab9f5ade0c0ba7763910626e39590a9f9d620b17c45/triz2DAAD-1.0.2b4.zip", "yanked": false}], "1.0.2b5": [{"comment_text": "", "digests": {"md5": "591935c5ed48715b5eb3888fb8ea1cdc", "sha256": "e39af8247df51488996464a94fe8f13d0b1683f3fb4b81eb1a5e91ad10f97b60"}, "downloads": -1, "filename": "triz2DAAD-1.0.2b5.zip", "has_sig": false, "md5_digest": "591935c5ed48715b5eb3888fb8ea1cdc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 41508, "upload_time": "2019-12-29T02:08:45", "upload_time_iso_8601": "2019-12-29T02:08:45.926505Z", "url": "https://files.pythonhosted.org/packages/e6/a5/15ba397ab19e9690c31996f56384b05a9c2fb5377d0d39c23f0944b3cd7b/triz2DAAD-1.0.2b5.zip", "yanked": false}], "1.0.2rc1": [{"comment_text": "", "digests": {"md5": "18d73d61d3d25860bed10d3d610c57a9", "sha256": "f993d368705103a26d58abd0fd2741be96dec4287a2dec91a3205adba44e5ac0"}, "downloads": -1, "filename": "triz2DAAD-1.0.2rc1.zip", "has_sig": false, "md5_digest": "18d73d61d3d25860bed10d3d610c57a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 43559, "upload_time": "2020-02-10T22:47:22", "upload_time_iso_8601": "2020-02-10T22:47:22.203960Z", "url": "https://files.pythonhosted.org/packages/ea/0a/737f714507e3ccae14f509b919d1ffa1aed184f4263c156c502548190832/triz2DAAD-1.0.2rc1.zip", "yanked": false}], "1.0.2rc2": [{"comment_text": "", "digests": {"md5": "cb50e09f24cb5f31acaeaa0dcef932e3", "sha256": "edb4aa4d0695fc05c627dafa4c701c6a2b60ffd8b6385c31563b8e45f33f2ed8"}, "downloads": -1, "filename": "triz2DAAD-1.0.2rc2.zip", "has_sig": false, "md5_digest": "cb50e09f24cb5f31acaeaa0dcef932e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 44245, "upload_time": "2020-02-22T18:02:13", "upload_time_iso_8601": "2020-02-22T18:02:13.446779Z", "url": "https://files.pythonhosted.org/packages/e5/4b/4aba9b00d332463949b13fc956d67403a1d64576bbc507fb9c842e5516ed/triz2DAAD-1.0.2rc2.zip", "yanked": false}], "1.0.3b1": [{"comment_text": "", "digests": {"md5": "182c24fdb9e3dd443946a4d96252d364", "sha256": "7ce0e622373c13d0ad174cd1f8905cd8ca585c4ddf112e18736d94ab24bc3382"}, "downloads": -1, "filename": "triz2DAAD-1.0.3b1.zip", "has_sig": false, "md5_digest": "182c24fdb9e3dd443946a4d96252d364", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 44446, "upload_time": "2020-03-05T20:14:59", "upload_time_iso_8601": "2020-03-05T20:14:59.798521Z", "url": "https://files.pythonhosted.org/packages/4a/2d/231f04a1a1b7f2b6ef96a44153ec58ac3566858f2a9accd56f28a4821983/triz2DAAD-1.0.3b1.zip", "yanked": false}], "1.0.3b2": [{"comment_text": "", "digests": {"md5": "da87f773a38c53564deb52ce74ae6c38", "sha256": "119c1f30bdb2cee526f149af26a1b413ab052a673a8bf1d5009aabf9af8d4628"}, "downloads": -1, "filename": "triz2DAAD-1.0.3b2-py3-none-any.whl", "has_sig": false, "md5_digest": "da87f773a38c53564deb52ce74ae6c38", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 33441, "upload_time": "2020-03-14T19:03:38", "upload_time_iso_8601": "2020-03-14T19:03:38.907148Z", "url": "https://files.pythonhosted.org/packages/5d/fc/886ceabaf9e2b64d09a035181586fa734adece30dfb3c934057a4a2b3cae/triz2DAAD-1.0.3b2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab9ffb605f4d0fbbaabf9f30e1d788e1", "sha256": "d77266a25e2e9f9194c8ecb8fddc1f177678d8b7d3cc6d9dcfd591705870b2e3"}, "downloads": -1, "filename": "triz2DAAD-1.0.3b2.zip", "has_sig": false, "md5_digest": "ab9ffb605f4d0fbbaabf9f30e1d788e1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 47597, "upload_time": "2020-03-14T19:03:40", "upload_time_iso_8601": "2020-03-14T19:03:40.478120Z", "url": "https://files.pythonhosted.org/packages/ee/34/32433268bcfbf28348468dca55064dd39affa5ee23fb723536443cefadf3/triz2DAAD-1.0.3b2.zip", "yanked": false}], "1.0.3b3": [{"comment_text": "", "digests": {"md5": "d1b0a9bec7d785e0e770240666f64407", "sha256": "7996878b1850664767266a9eb188a80a164cbec9318c0824bdd795a100592729"}, "downloads": -1, "filename": "triz2DAAD-1.0.3b3-py3-none-any.whl", "has_sig": false, "md5_digest": "d1b0a9bec7d785e0e770240666f64407", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 33892, "upload_time": "2020-03-22T16:24:07", "upload_time_iso_8601": "2020-03-22T16:24:07.761918Z", "url": "https://files.pythonhosted.org/packages/c1/ba/82bee035d9bd6d88c6f661d5adb3280191069c3a04587ed26ccdb01d7781/triz2DAAD-1.0.3b3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ede19729901bb1bf34386d92f5ac3401", "sha256": "083811900de8d8cdf55dd9d0e612ba71d6af0f09346fd926e181375623827b4a"}, "downloads": -1, "filename": "triz2DAAD-1.0.3b3.zip", "has_sig": false, "md5_digest": "ede19729901bb1bf34386d92f5ac3401", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 48572, "upload_time": "2020-03-22T16:24:09", "upload_time_iso_8601": "2020-03-22T16:24:09.362292Z", "url": "https://files.pythonhosted.org/packages/75/f2/544f61b8dfd544b6321e76595d304794275f9ad3f4ab29913048a2a44285/triz2DAAD-1.0.3b3.zip", "yanked": false}], "1.0.3b5": [{"comment_text": "", "digests": {"md5": "f97a2d20f12687a5adc7948d03863750", "sha256": "8d799e067374cb4b082ebf36a57e54b71d9022d3cfc64a50f3899f0e5b05755d"}, "downloads": -1, "filename": "triz2DAAD-1.0.3b5-py3-none-any.whl", "has_sig": false, "md5_digest": "f97a2d20f12687a5adc7948d03863750", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 33894, "upload_time": "2020-03-23T13:59:52", "upload_time_iso_8601": "2020-03-23T13:59:52.042780Z", "url": "https://files.pythonhosted.org/packages/73/ec/797ba52ae0c6f69bfbde6f665711669c7a2844e64cc96390cfa56a22400d/triz2DAAD-1.0.3b5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed5d1a35e18cefdd59b63142d026c0b2", "sha256": "0725b8dcfaa445d8df5690f1a742716d309719fcf13e62dd7f5e19810b0c3844"}, "downloads": -1, "filename": "triz2DAAD-1.0.3b5.zip", "has_sig": false, "md5_digest": "ed5d1a35e18cefdd59b63142d026c0b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 48583, "upload_time": "2020-03-23T13:59:53", "upload_time_iso_8601": "2020-03-23T13:59:53.578371Z", "url": "https://files.pythonhosted.org/packages/db/51/7fc8fd7a04329e9f4cad7d2117d9871ce135055a18f3487ff3071220697f/triz2DAAD-1.0.3b5.zip", "yanked": false}], "1.0.3b6": [{"comment_text": "", "digests": {"md5": "e7b54c688233bc67c552449bad097c31", "sha256": "e3c18d70496f2b995ad42c44364ee0e8ebc1c5759323507affc5d581616bfe68"}, "downloads": -1, "filename": "triz2DAAD-1.0.3b6-py3-none-any.whl", "has_sig": false, "md5_digest": "e7b54c688233bc67c552449bad097c31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 34205, "upload_time": "2020-03-27T22:41:34", "upload_time_iso_8601": "2020-03-27T22:41:34.456704Z", "url": "https://files.pythonhosted.org/packages/8a/76/ef462f99c26e3f4caab6ba5142ca6f8645da10f445a046a314322c5a27e9/triz2DAAD-1.0.3b6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d43cea51def6a1d1413d3f602f84bef", "sha256": "f0e24e8935aa1e081a22a7f383cae918fe003988e651bba62927cffbc5882584"}, "downloads": -1, "filename": "triz2DAAD-1.0.3b6.zip", "has_sig": false, "md5_digest": "0d43cea51def6a1d1413d3f602f84bef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 49326, "upload_time": "2020-03-27T22:41:36", "upload_time_iso_8601": "2020-03-27T22:41:36.260394Z", "url": "https://files.pythonhosted.org/packages/41/4d/0c5a907037cfe01366ed1e630f4aea91a501751cb96413752b35810909f8/triz2DAAD-1.0.3b6.zip", "yanked": false}], "1.0rc1": [{"comment_text": "", "digests": {"md5": "daca7d65cda42ae7369a44822f848aa3", "sha256": "98ab38add37b7d4fddb0f8c7a25eb54043fdde4df70f777afccf5963cc73352f"}, "downloads": -1, "filename": "triz2DAAD-1.0rc1.zip", "has_sig": false, "md5_digest": "daca7d65cda42ae7369a44822f848aa3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 33243, "upload_time": "2019-04-25T21:34:34", "upload_time_iso_8601": "2019-04-25T21:34:34.578866Z", "url": "https://files.pythonhosted.org/packages/80/2c/84c568bf479cf2e11771cf453c05b3e740caad3f9080322a2fc34d6a50b2/triz2DAAD-1.0rc1.zip", "yanked": false}], "1.0rc2": [{"comment_text": "", "digests": {"md5": "5c94c937e354d25f30addb39ba866869", "sha256": "4638e5faba97a4888cdd45f6a227a3c48921adf8d78a71c15af6fb0d8f19a44d"}, "downloads": -1, "filename": "triz2DAAD-1.0rc2.zip", "has_sig": false, "md5_digest": "5c94c937e354d25f30addb39ba866869", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38581, "upload_time": "2019-04-27T18:06:33", "upload_time_iso_8601": "2019-04-27T18:06:33.926783Z", "url": "https://files.pythonhosted.org/packages/4c/ad/cb802d4a29cd34f3c0c9688689471ee623a3b8cd861baa6a900affb28599/triz2DAAD-1.0rc2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "838227f29a5501bfd545d60d550e7fb3", "sha256": "f5927aa806a54331cb7c1cad5afe9b14c1b0a060da60e8eaccb3b4313af8b2f0"}, "downloads": -1, "filename": "triz2DAAD-1.0.2.zip", "has_sig": false, "md5_digest": "838227f29a5501bfd545d60d550e7fb3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 44048, "upload_time": "2020-02-22T20:23:16", "upload_time_iso_8601": "2020-02-22T20:23:16.798235Z", "url": "https://files.pythonhosted.org/packages/cd/b4/1be47b3384b3f7f8e04da0cce22830884e2a2d94a075d28fe0645dc2d036/triz2DAAD-1.0.2.zip", "yanked": false}], "timestamp": "Fri May  8 03:46:49 2020"}