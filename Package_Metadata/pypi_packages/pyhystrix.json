{"info": {"author": "Mohan Dutt", "author_email": "mohan@oogway.in", "bugtrack_url": null, "classifiers": [], "description": "# pyhystrix\n\n### A library to patch requests package in order to add following functionalities by default:\n\n- Connection and Read timeouts\n- Retries on connection failure\n- Circuitbreaking\n- Adding unique `x-request-id` in request header if not provided\n\n**NOTE:**: 0.0.2 supports python2.7 and >= 0.0.3 supports python3 only.\n\nInstallation\n------------\n\n```sh\npip3 install pyhystrix\n```\n\nUsage\n-----\nBefore making any request, just call `Init()`:\n\n```python\nimport requests\nimport pyhystrix\nrequests.get(\"http://abc.xyx\") // No functionalities of pyhystrix\npyhystrix.Init()\nrequests.get(\"http://abc.xyx\") // pyhystrix is attached to all requests\n```\n\nDefault Configurations can be changed in 2 ways:\n\n1. Setting following env variables:\n\t- `PHY_CONNECT_TIMEOUT` : connection timeout in sec\n\t- `PHY_READ_TIMEOUT`: read timeout in seconds\n\t- `PHY_MAX_RETRIES`: max number of retries for connection failure\n\t- `PHY_CIRCUIT_FAIL_THRESHOLD`: Number of failed requests after which circuit will be open and further requests on the same url will not be allowed.\n\t- `PHY_CIRCUIT_ALIVE_THRESHOLD`: Number of failed requests on open circuit to make it half_open (Described below)\n\t- `PHY_CIRCUIT_DELAY`: Number of seconds after which open circuit will be half_open.\n\n2. parameters in request itself:\n\t- `max_tries`(int): overrides `PHY_MAX_RETRIES`, some rules related to it are follows:\n\t\t- `max_tries=0`: will cause no retries, fail on first failure.\n\t\t- If a positive value is passed for non `GET` requests, they will be retried too in case received status is in `status_forcelist`.\n\t- `status_forcelist`: list of http status, retry if the returned status is one of these. default is `[500]` on `GET`.\n\t- `timeout`: same as timeout in [requests](http://docs.python-requests.org/en/master/user/advanced/#timeouts)\n\t- `backoff_factor`: delay in each retry will be affected by this using following formula: ```{backoff factor} * (2 ^ ({number of total retries} - 1))```. Default = `0.5`sec\n\nMore Examples\n-------------\n- `GET` with retry on multiple failure status codes:\n\n```python\nimport requests\nimport pyhystrix\npyhystrix.Init()\nrequest.get(\"http://abc.xyz\", status_forcelist=[501, 502, 403])\n```\n\n- `put` with retry on response status = `500` or `501`\n\n```python\nrequest.put(\"http://abc.xyz\", max_tries=3, status_forcelist=[500, 502])\n```\n\n**NOTE:** All type of requests will be retried in case of `ConnectionError`\n\nCircuit Breaker States\n---------------\n1. **OPEN** : No requests will be allowed\n2. **HALF_OPEN** : Only one request will be allowed\n3. **CLOSE** : All requests will be allowed.\n\n**NOTE** : State transitions:\n\n`CLOSE --> OPEN --> HALF_OPEN --> CLOSE/OPEN`\n\n### To know more about circuit breaker pattern, click [here](https://martinfowler.com/bliki/CircuitBreaker.html)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/oogway/pyhystrix", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyhystrix", "package_url": "https://pypi.org/project/pyhystrix/", "platform": "", "project_url": "https://pypi.org/project/pyhystrix/", "project_urls": {"Homepage": "https://github.com/oogway/pyhystrix"}, "release_url": "https://pypi.org/project/pyhystrix/1.0.0/", "requires_dist": ["certifi (==2017.4.17)", "chardet (==3.0.4)", "httmock (==1.2.6)", "idna (==2.5)", "requests (==2.22.0)", "urllib3 (==1.25.6)"], "requires_python": "", "summary": "", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyhystrix</h1>\n<h3>A library to patch requests package in order to add following functionalities by default:</h3>\n<ul>\n<li>Connection and Read timeouts</li>\n<li>Retries on connection failure</li>\n<li>Circuitbreaking</li>\n<li>Adding unique <code>x-request-id</code> in request header if not provided</li>\n</ul>\n<p><strong>NOTE:</strong>: 0.0.2 supports python2.7 and &gt;= 0.0.3 supports python3 only.</p>\n<h2>Installation</h2>\n<pre>pip3 install pyhystrix\n</pre>\n<h2>Usage</h2>\n<p>Before making any request, just call <code>Init()</code>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyhystrix</span>\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"http://abc.xyx\"</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"n\">No</span> <span class=\"n\">functionalities</span> <span class=\"n\">of</span> <span class=\"n\">pyhystrix</span>\n<span class=\"n\">pyhystrix</span><span class=\"o\">.</span><span class=\"n\">Init</span><span class=\"p\">()</span>\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"http://abc.xyx\"</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"n\">pyhystrix</span> <span class=\"ow\">is</span> <span class=\"n\">attached</span> <span class=\"n\">to</span> <span class=\"nb\">all</span> <span class=\"n\">requests</span>\n</pre>\n<p>Default Configurations can be changed in 2 ways:</p>\n<ol>\n<li>\n<p>Setting following env variables:</p>\n<ul>\n<li><code>PHY_CONNECT_TIMEOUT</code> : connection timeout in sec</li>\n<li><code>PHY_READ_TIMEOUT</code>: read timeout in seconds</li>\n<li><code>PHY_MAX_RETRIES</code>: max number of retries for connection failure</li>\n<li><code>PHY_CIRCUIT_FAIL_THRESHOLD</code>: Number of failed requests after which circuit will be open and further requests on the same url will not be allowed.</li>\n<li><code>PHY_CIRCUIT_ALIVE_THRESHOLD</code>: Number of failed requests on open circuit to make it half_open (Described below)</li>\n<li><code>PHY_CIRCUIT_DELAY</code>: Number of seconds after which open circuit will be half_open.</li>\n</ul>\n</li>\n<li>\n<p>parameters in request itself:</p>\n<ul>\n<li><code>max_tries</code>(int): overrides <code>PHY_MAX_RETRIES</code>, some rules related to it are follows:\n<ul>\n<li><code>max_tries=0</code>: will cause no retries, fail on first failure.</li>\n<li>If a positive value is passed for non <code>GET</code> requests, they will be retried too in case received status is in <code>status_forcelist</code>.</li>\n</ul>\n</li>\n<li><code>status_forcelist</code>: list of http status, retry if the returned status is one of these. default is <code>[500]</code> on <code>GET</code>.</li>\n<li><code>timeout</code>: same as timeout in <a href=\"http://docs.python-requests.org/en/master/user/advanced/#timeouts\" rel=\"nofollow\">requests</a></li>\n<li><code>backoff_factor</code>: delay in each retry will be affected by this using following formula: <code>{backoff factor} * (2 ^ ({number of total retries} - 1))</code>. Default = <code>0.5</code>sec</li>\n</ul>\n</li>\n</ol>\n<h2>More Examples</h2>\n<ul>\n<li><code>GET</code> with retry on multiple failure status codes:</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyhystrix</span>\n<span class=\"n\">pyhystrix</span><span class=\"o\">.</span><span class=\"n\">Init</span><span class=\"p\">()</span>\n<span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"http://abc.xyz\"</span><span class=\"p\">,</span> <span class=\"n\">status_forcelist</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">501</span><span class=\"p\">,</span> <span class=\"mi\">502</span><span class=\"p\">,</span> <span class=\"mi\">403</span><span class=\"p\">])</span>\n</pre>\n<ul>\n<li><code>put</code> with retry on response status = <code>500</code> or <code>501</code></li>\n</ul>\n<pre><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"s2\">\"http://abc.xyz\"</span><span class=\"p\">,</span> <span class=\"n\">max_tries</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">status_forcelist</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">502</span><span class=\"p\">])</span>\n</pre>\n<p><strong>NOTE:</strong> All type of requests will be retried in case of <code>ConnectionError</code></p>\n<h2>Circuit Breaker States</h2>\n<ol>\n<li><strong>OPEN</strong> : No requests will be allowed</li>\n<li><strong>HALF_OPEN</strong> : Only one request will be allowed</li>\n<li><strong>CLOSE</strong> : All requests will be allowed.</li>\n</ol>\n<p><strong>NOTE</strong> : State transitions:</p>\n<p><code>CLOSE --&gt; OPEN --&gt; HALF_OPEN --&gt; CLOSE/OPEN</code></p>\n<h3>To know more about circuit breaker pattern, click <a href=\"https://martinfowler.com/bliki/CircuitBreaker.html\" rel=\"nofollow\">here</a></h3>\n\n          </div>"}, "last_serial": 5948033, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d023ee4422f16185f22aa8c7ad05ff08", "sha256": "9f7b1cdf1e8b793e9288aaba184d651388f77623ce66876c10f94936f9e2476b"}, "downloads": -1, "filename": "pyhystrix-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "d023ee4422f16185f22aa8c7ad05ff08", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 9803, "upload_time": "2018-01-15T06:03:53", "upload_time_iso_8601": "2018-01-15T06:03:53.041991Z", "url": "https://files.pythonhosted.org/packages/ae/4f/c25f9c85c92c51b2e118edf731a0f801e92fd3fc6c90253161afa4de1552/pyhystrix-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5e92f1c4a8d484525fd422ba961d9a2", "sha256": "e2aebc27c9b7c877b1bf6e3297f64329779c816960572a83f6c76bca0614e546"}, "downloads": -1, "filename": "pyhystrix-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a5e92f1c4a8d484525fd422ba961d9a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6799, "upload_time": "2018-01-15T06:03:55", "upload_time_iso_8601": "2018-01-15T06:03:55.179070Z", "url": "https://files.pythonhosted.org/packages/5d/95/1fe61e27b95fd77e15ca4115638b4f8d83c411e28447a21982f950263077/pyhystrix-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "209ce89735d64e2d3dd32dc93cba0149", "sha256": "8566be15543cc0166324ff1a6f18894d9733836da9cff6736dbba80daa66f119"}, "downloads": -1, "filename": "pyhystrix-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "209ce89735d64e2d3dd32dc93cba0149", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 9848, "upload_time": "2018-01-15T06:27:22", "upload_time_iso_8601": "2018-01-15T06:27:22.609324Z", "url": "https://files.pythonhosted.org/packages/10/24/efb468d39a3b8be376ea65a9e8f53340a7678c78779c4d1b4f1730222348/pyhystrix-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5402d407e24fee56d4ef40f148183631", "sha256": "f097bacff47f79bd84d2680a4cd83d313c661e1d53fdba55c1ed31689a337941"}, "downloads": -1, "filename": "pyhystrix-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5402d407e24fee56d4ef40f148183631", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6819, "upload_time": "2018-01-15T06:27:24", "upload_time_iso_8601": "2018-01-15T06:27:24.166871Z", "url": "https://files.pythonhosted.org/packages/aa/ac/d48b15fd70ad37716d756c039d5d46b1d1ad115b4d617aa3b9e57d523003/pyhystrix-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ccb02d176057a90309b7585eff9ea2fd", "sha256": "d8d3ff7fa8f4121dbdef0cb1500c4d2db8c5d6b8798e94625ed39819dce8349f"}, "downloads": -1, "filename": "pyhystrix-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ccb02d176057a90309b7585eff9ea2fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7065, "upload_time": "2018-03-27T11:58:33", "upload_time_iso_8601": "2018-03-27T11:58:33.266454Z", "url": "https://files.pythonhosted.org/packages/a9/01/b8782c26736d544e2257ff446303330bb5b23896b517d2cadefd1546aa79/pyhystrix-0.0.3.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "403592459db853af6dea23cdcedf874d", "sha256": "5ccf7b7e4f6a7da48c5aef11418c51f7dd1c66d9dd4255321967c29518e112f0"}, "downloads": -1, "filename": "pyhystrix-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "403592459db853af6dea23cdcedf874d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8705, "upload_time": "2019-10-09T06:26:44", "upload_time_iso_8601": "2019-10-09T06:26:44.350783Z", "url": "https://files.pythonhosted.org/packages/82/81/47196ebef948d44fa0c4a526c3e1754b5794b75a6c13b70330f72fc067fd/pyhystrix-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7ddc4c7e5244dde484f82b735289645", "sha256": "5e279136373afbcad9e8a5468f38190a15bcd75212eface80e0cf36d6ca07b8b"}, "downloads": -1, "filename": "pyhystrix-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a7ddc4c7e5244dde484f82b735289645", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7055, "upload_time": "2019-10-09T06:26:46", "upload_time_iso_8601": "2019-10-09T06:26:46.482243Z", "url": "https://files.pythonhosted.org/packages/c3/bf/2bc63e0d68a5e6a033932b9d5a723bf71d50d606b6668a4f19012f091124/pyhystrix-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "403592459db853af6dea23cdcedf874d", "sha256": "5ccf7b7e4f6a7da48c5aef11418c51f7dd1c66d9dd4255321967c29518e112f0"}, "downloads": -1, "filename": "pyhystrix-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "403592459db853af6dea23cdcedf874d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8705, "upload_time": "2019-10-09T06:26:44", "upload_time_iso_8601": "2019-10-09T06:26:44.350783Z", "url": "https://files.pythonhosted.org/packages/82/81/47196ebef948d44fa0c4a526c3e1754b5794b75a6c13b70330f72fc067fd/pyhystrix-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7ddc4c7e5244dde484f82b735289645", "sha256": "5e279136373afbcad9e8a5468f38190a15bcd75212eface80e0cf36d6ca07b8b"}, "downloads": -1, "filename": "pyhystrix-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a7ddc4c7e5244dde484f82b735289645", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7055, "upload_time": "2019-10-09T06:26:46", "upload_time_iso_8601": "2019-10-09T06:26:46.482243Z", "url": "https://files.pythonhosted.org/packages/c3/bf/2bc63e0d68a5e6a033932b9d5a723bf71d50d606b6668a4f19012f091124/pyhystrix-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:13 2020"}