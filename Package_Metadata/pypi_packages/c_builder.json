{"info": {"author": "Abhijit Bansal", "author_email": "pip@abhijitbansal.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Code Generators"], "description": "C-Builder Project\n=================\n\n\nPurpose\n-------\n* To easily write C files\n* It provides classes so you dont have to worry about maintaining indent, ending things with semi colong\n* Make your C code standard if autogenerating using python script\n* Can be used in following scenarios\n\n    * Generating C code for your communication networks like CAN, LIN etc\n    * Generation of code through other database networks\n\n* It also includes a templating engine, that can produce a skeleton of python file that can generate the C code given\n  as input\n\n* So for example you want to start using this script for generating C code, you can follow the following steps\n\n    * Generate a skeleton of the C code with example functions\n    * Feed this as input to the parser as given below\n    * This will generate a python file called <c_file_name>_gen.py\n    * When this file is run it should produce a decent copy of the input file\n    * Use this template python file either as a function to extend and connect the code to your database info\n\n.. warning::\n\n    The templating function is in beta mode\n\n\nInstallation\n------------\n\nThis package can be pip installed\n\n    pip install c_builder\n\n.. note::\n\n    Built and tested with python 3.6\n\n\nUsage\n-----\n\n* For templating\n\n    run_c_builder -i <input_c_file.c>\n\n* For just writing to a c file\n\n.. highlight:: python\n\n    from c_builder import c_writer\n\n\n* Then just use the file classes provided and check the documentation in the classes\n* You can also check the generated template for pointers to usage\n* Or check out the sample installed along with the library\n\nFor Bugs\n--------\n\nJoin the slack workspace at -\nhttps://join.slack.com/t/projectaja/shared_invite/enQtMjk1NTk0NzIwNDIzLWRmMTNjMzY3ZGFmYjY4MGZhOTBiNjZjZTA1YzM3MmFmYWIxOTJkY2QyOWNjM2JhZTk3NTMzMzNmZGIyZGM3NmY\n\nAnd join the c_builder channel\n\nAlso you can email me at\n\npip[at]abhijit.bansal.com\n\n\nFuture\n------\n\n1. Add support for more C code\n2. Support for doing standards check on the datatypes\n3. More intelligent analysis\n4. Support for C++\n5. C++ style template classes for C\n\n\nVersion History\n---------------\n\n0.0.6 : Fix for package installation\n\n0.0.2 : More support and documentation\n\n0.0.1 : Initial version, tested upload to pypi", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ajbansal/c_builder", "keywords": "testing c_builder C", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "c_builder", "package_url": "https://pypi.org/project/c_builder/", "platform": "", "project_url": "https://pypi.org/project/c_builder/", "project_urls": {"Homepage": "https://github.com/ajbansal/c_builder"}, "release_url": "https://pypi.org/project/c_builder/0.0.6/", "requires_dist": null, "requires_python": "", "summary": "A tool to read write C file", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            C-Builder Project<br>=================<br><br><br>Purpose<br>-------<br>* To easily write C files<br>* It provides classes so you dont have to worry about maintaining indent, ending things with semi colong<br>* Make your C code standard if autogenerating using python script<br>* Can be used in following scenarios<br><br>    * Generating C code for your communication networks like CAN, LIN etc<br>    * Generation of code through other database networks<br><br>* It also includes a templating engine, that can produce a skeleton of python file that can generate the C code given<br>  as input<br><br>* So for example you want to start using this script for generating C code, you can follow the following steps<br><br>    * Generate a skeleton of the C code with example functions<br>    * Feed this as input to the parser as given below<br>    * This will generate a python file called &lt;c_file_name&gt;_gen.py<br>    * When this file is run it should produce a decent copy of the input file<br>    * Use this template python file either as a function to extend and connect the code to your database info<br><br>.. warning::<br><br>    The templating function is in beta mode<br><br><br>Installation<br>------------<br><br>This package can be pip installed<br><br>    pip install c_builder<br><br>.. note::<br><br>    Built and tested with python 3.6<br><br><br>Usage<br>-----<br><br>* For templating<br><br>    run_c_builder -i &lt;input_c_file.c&gt;<br><br>* For just writing to a c file<br><br>.. highlight:: python<br><br>    from c_builder import c_writer<br><br><br>* Then just use the file classes provided and check the documentation in the classes<br>* You can also check the generated template for pointers to usage<br>* Or check out the sample installed along with the library<br><br>For Bugs<br>--------<br><br>Join the slack workspace at -<br>https://join.slack.com/t/projectaja/shared_invite/enQtMjk1NTk0NzIwNDIzLWRmMTNjMzY3ZGFmYjY4MGZhOTBiNjZjZTA1YzM3MmFmYWIxOTJkY2QyOWNjM2JhZTk3NTMzMzNmZGIyZGM3NmY<br><br>And join the c_builder channel<br><br>Also you can email me at<br><br>pip[at]abhijit.bansal.com<br><br><br>Future<br>------<br><br>1. Add support for more C code<br>2. Support for doing standards check on the datatypes<br>3. More intelligent analysis<br>4. Support for C++<br>5. C++ style template classes for C<br><br><br>Version History<br>---------------<br><br>0.0.6 : Fix for package installation<br><br>0.0.2 : More support and documentation<br><br>0.0.1 : Initial version, tested upload to pypi\n          </div>"}, "last_serial": 3464182, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "52e7efc4349f3453dfd7245de37bb56e", "sha256": "dfba5ac62eb8ac55f63b8d5e979b779c340a88bec9750c39459de69b90208a12"}, "downloads": -1, "filename": "c_builder-0.0.1.tar.gz", "has_sig": false, "md5_digest": "52e7efc4349f3453dfd7245de37bb56e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13114, "upload_time": "2018-01-02T09:15:43", "upload_time_iso_8601": "2018-01-02T09:15:43.431027Z", "url": "https://files.pythonhosted.org/packages/c3/a6/45007a9d6d16ed5420248ea7065cd31d6d4c2269eae8cfd06fbef3faf480/c_builder-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8be81821647415a8fbb57aba7b2d3c6f", "sha256": "3bbf7dc5d182ac6dabe5460b682704a19ad0fdab4d6f4805c7d3413af7b41c2e"}, "downloads": -1, "filename": "c_builder-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8be81821647415a8fbb57aba7b2d3c6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14095, "upload_time": "2018-01-05T09:11:30", "upload_time_iso_8601": "2018-01-05T09:11:30.680450Z", "url": "https://files.pythonhosted.org/packages/f9/77/0530c86daf3c422ccbd31f3d13f32daa3ccf9d529ddc061900bf4038825d/c_builder-0.0.2.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "79fe2b053c1dfe32cdaf5b5dcf25e77f", "sha256": "41f5dd1a8a4f4ddcf1af489964750db038f52d4aef245665efc4de27aa264b1d"}, "downloads": -1, "filename": "c_builder-0.0.5.tar.gz", "has_sig": false, "md5_digest": "79fe2b053c1dfe32cdaf5b5dcf25e77f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17762, "upload_time": "2018-01-05T10:01:39", "upload_time_iso_8601": "2018-01-05T10:01:39.879862Z", "url": "https://files.pythonhosted.org/packages/5b/d0/4dce8644dee999c3a96039e80f04195a6959c1722ea98ac218c64cb800f5/c_builder-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "76abc775915cf4d8c021d8c379ddbe60", "sha256": "70f338e59b38adebf3bbae45c709e657e99426ff611ccbf59cff0e69f9e4b165"}, "downloads": -1, "filename": "c_builder-0.0.6.tar.gz", "has_sig": false, "md5_digest": "76abc775915cf4d8c021d8c379ddbe60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17756, "upload_time": "2018-01-05T10:02:09", "upload_time_iso_8601": "2018-01-05T10:02:09.582610Z", "url": "https://files.pythonhosted.org/packages/51/0c/e04012a770d2516c0e0b700715420aea8d39194efbf4d5874ba9ceb62384/c_builder-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "76abc775915cf4d8c021d8c379ddbe60", "sha256": "70f338e59b38adebf3bbae45c709e657e99426ff611ccbf59cff0e69f9e4b165"}, "downloads": -1, "filename": "c_builder-0.0.6.tar.gz", "has_sig": false, "md5_digest": "76abc775915cf4d8c021d8c379ddbe60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17756, "upload_time": "2018-01-05T10:02:09", "upload_time_iso_8601": "2018-01-05T10:02:09.582610Z", "url": "https://files.pythonhosted.org/packages/51/0c/e04012a770d2516c0e0b700715420aea8d39194efbf4d5874ba9ceb62384/c_builder-0.0.6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:08 2020"}