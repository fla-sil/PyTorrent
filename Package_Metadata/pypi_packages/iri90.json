{"info": {"author": "Michael Hirsch, Ph.D.", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Atmospheric Science"], "description": "[![Build Status](https://travis-ci.org/scivision/iri90.svg?branch=master)](https://travis-ci.org/scivision/iri90)\n[![Coverage Status](https://coveralls.io/repos/github/scivision/iri90/badge.svg?branch=master)](https://coveralls.io/github/scivision/iri90?branch=master)\n[![Build status](https://ci.appveyor.com/api/projects/status/4h8pm345hscdpyf7?svg=true)](https://ci.appveyor.com/project/scivision/iri90)\n[![PyPi version](https://img.shields.io/pypi/pyversions/iri90.svg)](https://pypi.python.org/pypi/iri90)\n[![PyPi formats](https://img.shields.io/pypi/format/iri90.svg)](https://pypi.python.org/pypi/iri90)\n[![PyPi Download stats](http://pepy.tech/badge/iri90)](http://pepy.tech/project/iri90)\n\n\n# IRI90: International reference ionosphere in Python\n\n> IRI-90 provides **monthly mean values** for magnetically quiet\n> conditions at non-auroral latitudes in the **altitude range 50km to\n> 2000km**.\n\nHowever, IRI90 is often used as an initialization for conditions at\nauroral latitudes, understanding the caveats.\n\n![example IRI output](.github/demoiri.png)\n\n## Install\n\n```sh\npip install iri90\n```\nor for the latest development version:\n\n```sh\npython -m pip install -e .\n```\n\n## Usage\n\nThis IRI90 Python module is as small and clean as possible to enable your custom IRI90 applications.\n\n```python\nimport iri90\n\niono = iri90.runiri(dtime, altkm, latlon, f107, f107s, ap=p.ap)\n```\n\n`iono` is an xarray.DataArray indexable by species, altitude, etc. and includes metadata.\n\n### Altitude profile\n\ndensity and temperature:\n```sh\npython AltitudeProfile.py\n```\n\n## Notes\n\nOptional: If you want to work with just the original Fortran code:\n```sh\ncd bin\ncmake ../src\ncmake --build .\n```\n\n### References\n\n[Fortran Code](http://download.hao.ucar.edu/pub/stans/iri/iri90.f)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scivision/iri90", "keywords": "ionosphere,thermosphere", "license": "", "maintainer": "", "maintainer_email": "", "name": "iri90", "package_url": "https://pypi.org/project/iri90/", "platform": "", "project_url": "https://pypi.org/project/iri90/", "project_urls": {"Homepage": "https://github.com/scivision/iri90"}, "release_url": "https://pypi.org/project/iri90/1.1.1/", "requires_dist": null, "requires_python": ">= 3.6", "summary": "IRI90 from Python, clean and flexible ionospheric model.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/scivision/iri90\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5cfc5f8c2920e500b0cf9da8efffd18cc233b8de/68747470733a2f2f7472617669732d63692e6f72672f736369766973696f6e2f69726939302e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/scivision/iri90?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52c18fbda2bf3a58a684d1bfca1c265b2f832cf2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f736369766973696f6e2f69726939302f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/scivision/iri90\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61791fab16f88c8577022e74a24bd2f718df46f3/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f346838706d33343568736364707966373f7376673d74727565\"></a>\n<a href=\"https://pypi.python.org/pypi/iri90\" rel=\"nofollow\"><img alt=\"PyPi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fde2a4b2b54e13897b9824dd468415427cd89e3e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f69726939302e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/iri90\" rel=\"nofollow\"><img alt=\"PyPi formats\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/38862466ba8620d02037759bec8f3ab4e895a389/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f69726939302e737667\"></a>\n<a href=\"http://pepy.tech/project/iri90\" rel=\"nofollow\"><img alt=\"PyPi Download stats\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05276ed5f27f17b869efe8455ce7deb637e4e8d5/687474703a2f2f706570792e746563682f62616467652f6972693930\"></a></p>\n<h1>IRI90: International reference ionosphere in Python</h1>\n<blockquote>\n<p>IRI-90 provides <strong>monthly mean values</strong> for magnetically quiet\nconditions at non-auroral latitudes in the <strong>altitude range 50km to\n2000km</strong>.</p>\n</blockquote>\n<p>However, IRI90 is often used as an initialization for conditions at\nauroral latitudes, understanding the caveats.</p>\n<p><img alt=\"example IRI output\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/56205043e8c09b67511bf139f1e438b4a51bcd69/2e6769746875622f64656d6f6972692e706e67\"></p>\n<h2>Install</h2>\n<pre>pip install iri90\n</pre>\n<p>or for the latest development version:</p>\n<pre>python -m pip install -e .\n</pre>\n<h2>Usage</h2>\n<p>This IRI90 Python module is as small and clean as possible to enable your custom IRI90 applications.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">iri90</span>\n\n<span class=\"n\">iono</span> <span class=\"o\">=</span> <span class=\"n\">iri90</span><span class=\"o\">.</span><span class=\"n\">runiri</span><span class=\"p\">(</span><span class=\"n\">dtime</span><span class=\"p\">,</span> <span class=\"n\">altkm</span><span class=\"p\">,</span> <span class=\"n\">latlon</span><span class=\"p\">,</span> <span class=\"n\">f107</span><span class=\"p\">,</span> <span class=\"n\">f107s</span><span class=\"p\">,</span> <span class=\"n\">ap</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">ap</span><span class=\"p\">)</span>\n</pre>\n<p><code>iono</code> is an xarray.DataArray indexable by species, altitude, etc. and includes metadata.</p>\n<h3>Altitude profile</h3>\n<p>density and temperature:</p>\n<pre>python AltitudeProfile.py\n</pre>\n<h2>Notes</h2>\n<p>Optional: If you want to work with just the original Fortran code:</p>\n<pre><span class=\"nb\">cd</span> bin\ncmake ../src\ncmake --build .\n</pre>\n<h3>References</h3>\n<p><a href=\"http://download.hao.ucar.edu/pub/stans/iri/iri90.f\" rel=\"nofollow\">Fortran Code</a></p>\n\n          </div>"}, "last_serial": 4171914, "releases": {"1.1.1": [{"comment_text": "", "digests": {"md5": "0f9a02006fc8e1efa5d3b5969e289149", "sha256": "ad45150811598d2c6c77f1e5ca95bfe559bdf35cd88e3a79d9f045b43754cb6e"}, "downloads": -1, "filename": "iri90-1.1.1.tar.gz", "has_sig": false, "md5_digest": "0f9a02006fc8e1efa5d3b5969e289149", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 39448, "upload_time": "2018-08-15T06:04:10", "upload_time_iso_8601": "2018-08-15T06:04:10.326882Z", "url": "https://files.pythonhosted.org/packages/82/5a/830e79a8eccc991e17bb327691b38f7b024a5f2e76924b7e6688179b7c72/iri90-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0f9a02006fc8e1efa5d3b5969e289149", "sha256": "ad45150811598d2c6c77f1e5ca95bfe559bdf35cd88e3a79d9f045b43754cb6e"}, "downloads": -1, "filename": "iri90-1.1.1.tar.gz", "has_sig": false, "md5_digest": "0f9a02006fc8e1efa5d3b5969e289149", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 39448, "upload_time": "2018-08-15T06:04:10", "upload_time_iso_8601": "2018-08-15T06:04:10.326882Z", "url": "https://files.pythonhosted.org/packages/82/5a/830e79a8eccc991e17bb327691b38f7b024a5f2e76924b7e6688179b7c72/iri90-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:16 2020"}