{"info": {"author": "Tycho Kirchner", "author_email": "tychokirchner@mail.de", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "# shournal-to-snakemake\n\nTransform a command series observed by \n[shournal](https://github.com/tycho-kirchner/shournal)\n to \n[snakemake](https://github.com/snakemake/snakemake)\n rules.\n\n[shournal](https://github.com/tycho-kirchner/shournal) \ntracks read and written files of shell commands. Thus, for\neach command the input- and output-section of a snakemake rule \nmay be generated. Matched file-paths are automatically replaced\nin the command string with {input} and {output}.\n\n\n## Basic Usage\nAfter \n[shournal](https://github.com/tycho-kirchner/shournal)\nis installed, start a new (by shournal observed) shell session. Within that\nperform the (shell-based) data analysis of your choice. \n\nOnce done, from within the same shell-session, generate the snakemake rules by\n\n```\nshournal -q --output-format json -sid $SHOURNAL_SESSION_ID | shournal-to-snakemake\n```\n\n## Toy example\n```\n$ SHOURNAL_ENABLE\n$ echo stuff > foo\n$ cat foo > bar\n$ shournal -q --output-format json -sid $SHOURNAL_SESSION_ID | shournal-to-snakemake\nrule undefined_1:\n    output:\n        \"foo\",\n    shell:\n        # raw: echo stuff > foo\n        \"echo stuff > {output}\"\n\n\nrule undefined_2:\n    input:\n        \"foo\",\n    output:\n        \"bar\",\n    shell:\n        # raw: cat foo > bar\n        \"cat {input} > {output}\"\n```\n\n## General hints\n* Don't change the working directory during the workflow.\n* Do not use wildcards or variables (in file-paths), otherwise the files\n  in the command string cannot be correctly replaced by {input} or {output}.\n* Stick to basic posix shell syntax\n\n\n## Installation\nCreate a wheel directly from source by executing\n```\npython3 setup.py sdist bdist_wheel\n```\nInstall the wheel as usual, e.g. by\n```\npip3 install --user dist/shournal_to_snakemake-VERSION-*.whl\n```\n\n\n## License\n\nCopyright &copy; 2020 Tycho Kirchner (see LICENSE)\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/snakemake/shournal-to-snakemake", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "shournal-to-snakemake", "package_url": "https://pypi.org/project/shournal-to-snakemake/", "platform": "", "project_url": "https://pypi.org/project/shournal-to-snakemake/", "project_urls": {"Homepage": "https://github.com/snakemake/shournal-to-snakemake"}, "release_url": "https://pypi.org/project/shournal-to-snakemake/0.1/", "requires_dist": ["ordered-set"], "requires_python": "", "summary": "Transform a command series from shournal into Snakemake rules", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>shournal-to-snakemake</h1>\n<p>Transform a command series observed by\n<a href=\"https://github.com/tycho-kirchner/shournal\" rel=\"nofollow\">shournal</a>\nto\n<a href=\"https://github.com/snakemake/snakemake\" rel=\"nofollow\">snakemake</a>\nrules.</p>\n<p><a href=\"https://github.com/tycho-kirchner/shournal\" rel=\"nofollow\">shournal</a>\ntracks read and written files of shell commands. Thus, for\neach command the input- and output-section of a snakemake rule\nmay be generated. Matched file-paths are automatically replaced\nin the command string with {input} and {output}.</p>\n<h2>Basic Usage</h2>\n<p>After\n<a href=\"https://github.com/tycho-kirchner/shournal\" rel=\"nofollow\">shournal</a>\nis installed, start a new (by shournal observed) shell session. Within that\nperform the (shell-based) data analysis of your choice.</p>\n<p>Once done, from within the same shell-session, generate the snakemake rules by</p>\n<pre><code>shournal -q --output-format json -sid $SHOURNAL_SESSION_ID | shournal-to-snakemake\n</code></pre>\n<h2>Toy example</h2>\n<pre><code>$ SHOURNAL_ENABLE\n$ echo stuff &gt; foo\n$ cat foo &gt; bar\n$ shournal -q --output-format json -sid $SHOURNAL_SESSION_ID | shournal-to-snakemake\nrule undefined_1:\n    output:\n        \"foo\",\n    shell:\n        # raw: echo stuff &gt; foo\n        \"echo stuff &gt; {output}\"\n\n\nrule undefined_2:\n    input:\n        \"foo\",\n    output:\n        \"bar\",\n    shell:\n        # raw: cat foo &gt; bar\n        \"cat {input} &gt; {output}\"\n</code></pre>\n<h2>General hints</h2>\n<ul>\n<li>Don't change the working directory during the workflow.</li>\n<li>Do not use wildcards or variables (in file-paths), otherwise the files\nin the command string cannot be correctly replaced by {input} or {output}.</li>\n<li>Stick to basic posix shell syntax</li>\n</ul>\n<h2>Installation</h2>\n<p>Create a wheel directly from source by executing</p>\n<pre><code>python3 setup.py sdist bdist_wheel\n</code></pre>\n<p>Install the wheel as usual, e.g. by</p>\n<pre><code>pip3 install --user dist/shournal_to_snakemake-VERSION-*.whl\n</code></pre>\n<h2>License</h2>\n<p>Copyright \u00a9 2020 Tycho Kirchner (see LICENSE)</p>\n\n          </div>"}, "last_serial": 7096270, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8298fb30118b630689bd9cd9af6ceb80", "sha256": "20a8e02c4a361e9214005edc9b9f5d4c9dfbac97cfe3321f051af4fd44f24d57"}, "downloads": -1, "filename": "shournal_to_snakemake-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8298fb30118b630689bd9cd9af6ceb80", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18362, "upload_time": "2020-04-24T20:57:25", "upload_time_iso_8601": "2020-04-24T20:57:25.964260Z", "url": "https://files.pythonhosted.org/packages/d8/fa/b3312804d7786dcec70499ff9ad64598a05fd7670e8c04bf6199dbde9609/shournal_to_snakemake-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0942bf7c34814e33dcb0b7444d86bfa", "sha256": "48728703993e8a12f561978243a41a13a2ff8d0018c7fe342bf39efc596a9866"}, "downloads": -1, "filename": "shournal-to-snakemake-0.1.tar.gz", "has_sig": false, "md5_digest": "f0942bf7c34814e33dcb0b7444d86bfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16430, "upload_time": "2020-04-24T20:57:28", "upload_time_iso_8601": "2020-04-24T20:57:28.254296Z", "url": "https://files.pythonhosted.org/packages/87/44/bb4cf1b219ebdceb307dd582716ceceeabaa4a5c5b9aece43458b96c4a0a/shournal-to-snakemake-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8298fb30118b630689bd9cd9af6ceb80", "sha256": "20a8e02c4a361e9214005edc9b9f5d4c9dfbac97cfe3321f051af4fd44f24d57"}, "downloads": -1, "filename": "shournal_to_snakemake-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8298fb30118b630689bd9cd9af6ceb80", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18362, "upload_time": "2020-04-24T20:57:25", "upload_time_iso_8601": "2020-04-24T20:57:25.964260Z", "url": "https://files.pythonhosted.org/packages/d8/fa/b3312804d7786dcec70499ff9ad64598a05fd7670e8c04bf6199dbde9609/shournal_to_snakemake-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0942bf7c34814e33dcb0b7444d86bfa", "sha256": "48728703993e8a12f561978243a41a13a2ff8d0018c7fe342bf39efc596a9866"}, "downloads": -1, "filename": "shournal-to-snakemake-0.1.tar.gz", "has_sig": false, "md5_digest": "f0942bf7c34814e33dcb0b7444d86bfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16430, "upload_time": "2020-04-24T20:57:28", "upload_time_iso_8601": "2020-04-24T20:57:28.254296Z", "url": "https://files.pythonhosted.org/packages/87/44/bb4cf1b219ebdceb307dd582716ceceeabaa4a5c5b9aece43458b96c4a0a/shournal-to-snakemake-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:37 2020"}