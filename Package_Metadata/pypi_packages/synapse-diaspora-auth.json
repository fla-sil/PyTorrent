{"info": {"author": "Shamil K", "author_email": "noteness@riseup.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 2.7", "Topic :: Communications :: Chat"], "description": "Synapse-diaspora-auth\n=====================\n\nA diaspora authenticator for matrix synapse.\n\nInstallation\n------------\n\nThis package is easy to install from pypi:\n\nJust run this command to install:\n\n.. code:: bash\n\n    pip install synapse-diaspora-auth\n\nAlternatively, to install from git:\n\n.. code:: bash\n\n    pip install git+https://git.fosscommunity.in/necessary129/synapse-diaspora-auth.git\n\nConfiguration\n-------------\n\nIn your ``homeserver.yaml`` file, the ``password_providers`` directive\nshould look like this:\n\n.. code:: yaml\n\n    password_providers:\n      - module: \"diaspora_auth_provider.DiasporaAuthProvider\"\n        config:\n          pepper: <pepper>\n          database:\n            engine: <db engine>\n            name: \"<database>\"\n            username: <db_user>\n            password: <db_password>\n            host: \"127.0.0.1\"\n            port: <port>\n\nYou should get ``pepper`` from ``<DIASPORA_HOME>/database.yaml`` or from\n``<DIASPORA_HOME>/initializers/devise.rb`` as ``config.pepper``.\n\nthe engine should either be ``mysql`` or ``postgres``\n\nThe port is usually ``5432`` for PostgreSQL and ``3306`` for MariaDB/MySQL\n\nDatabase\n~~~~~~~~\n\nsynapse-diaspora-auth currently supports MySQL and PostgreSQL as the database engines.\n\nPostgreSQL\n^^^^^^^^^^\n\nIt is recommended to create a seperate user for synapse in the postgres\ndatabase, with read-only access to ``<database>``.\n\nTo do that, first login to postgres as the root user:\n\n.. code:: bash\n\n    sudo -u postgres psql <database>\n\nthen, run these commands:\n\n.. code:: sql\n\n    CREATE user <db_user> WITH password '<db_password>';\n    GRANT CONNECT ON DATABASE <database> TO <db_user>;\n    GRANT SELECT ON users TO <db_user>;\n\nMySQL\n^^^^^\n\nThe commands are almost the same in MySQL:\n\nlogin to MySQL as root:\n\n.. code:: bash\n\n    sudo mysql -u root\n\nThen run these queries:\n\n.. code:: sql\n\n    CREATE user '<db_user>'@'localhost' WITH password '<db_password>';\n    GRANT SELECT ON <database>.users TO '<db_user>'@'localhost';\n\n\nAnd you will be good to go!\n\nEmail Authentication\n~~~~~~~~~~~~~~~~~~~~\n\nWhile this module helps in authenticating with diaspora, we need to set up mxisd_ for supporting\nauthentication through email.\n\nInstallation\n^^^^^^^^^^^^\n\nFollow the instructions `here <https://github.com/kamax-io/mxisd/blob/master/docs/getting-started.md#install>`_\n\nConfiguration & Setup\n^^^^^^^^^^^^^^^^^^^^^\n\nFollow `this <https://github.com/kamax-io/mxisd/blob/master/docs/getting-started.md#configure>`_.\n\nBasically, if you used the debian package, you just need to set up the ``matrix.domain`` first.\n\nAnd then, add these lines to ``mxisd.yaml``:\n\n.. code:: yaml\n\n    sql:\n      enabled: true\n      type: mysql\n      connection: \"//<HOST>/<DATABASE>?user=<USERNAME>&password=<PASSWORD>\"\n      identity:\n        type: 'uid'\n        query: \"select (case when ?='email' then username else null end) as uid from users where email=?\"\n\nWhere ``<HOST>``, ``<DATABASE>``,``<USERNAME>`` and ``<PASSWORD>`` are your database host, diaspora database, user and password you created when you set up database for synapse-diaspora-auth\n\nNow follow the steps `here <https://github.com/kamax-io/mxisd/blob/master/docs/features/authentication.md#advanced>`_. ie, forward the ``/_matrix/client/r0/login`` endpoint to mxisd and add\n\n.. code:: yaml\n\n    dns.overwrite.homeserver.client:\n      - name: '<DOMAIN>'\n        value: 'http://localhost:8008'\n\nwhere ``<DOMAIN>`` is your matrix server name.\n\nAn Apache2 reverse proxy example is already given `here <https://github.com/kamax-io/mxisd/blob/master/docs/features/authentication.md#apache2>`_. An example nginx configuration would be this:\n\n.. code::\n\n    location /_matrix/client/r0/login {\n        proxy_pass http://localhost:8090/_matrix/client/r0/login;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n\nMake sure to put this above other matrix reverse proxy directives. And Congrats! You now have a competely integrated synapse - diaspora setup! :D\n\n.. _mxisd: https://github.com/kamax-io/mxisd\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "matrix synapse diaspora authentication", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "synapse-diaspora-auth", "package_url": "https://pypi.org/project/synapse-diaspora-auth/", "platform": "", "project_url": "https://pypi.org/project/synapse-diaspora-auth/", "project_urls": null, "release_url": "https://pypi.org/project/synapse-diaspora-auth/0.1.1/", "requires_dist": ["Twisted (>=15.1.0)", "bcrypt", "psycopg2", "pymysql"], "requires_python": "", "summary": "A Diaspora* auth provider for Synapse", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Synapse-diaspora-auth<br>=====================<br><br>A diaspora authenticator for matrix synapse.<br><br>Installation<br>------------<br><br>This package is easy to install from pypi:<br><br>Just run this command to install:<br><br>.. code:: bash<br><br>    pip install synapse-diaspora-auth<br><br>Alternatively, to install from git:<br><br>.. code:: bash<br><br>    pip install git+https://git.fosscommunity.in/necessary129/synapse-diaspora-auth.git<br><br>Configuration<br>-------------<br><br>In your ``homeserver.yaml`` file, the ``password_providers`` directive<br>should look like this:<br><br>.. code:: yaml<br><br>    password_providers:<br>      - module: \"diaspora_auth_provider.DiasporaAuthProvider\"<br>        config:<br>          pepper: &lt;pepper&gt;<br>          database:<br>            engine: &lt;db engine&gt;<br>            name: \"&lt;database&gt;\"<br>            username: &lt;db_user&gt;<br>            password: &lt;db_password&gt;<br>            host: \"127.0.0.1\"<br>            port: &lt;port&gt;<br><br>You should get ``pepper`` from ``&lt;DIASPORA_HOME&gt;/database.yaml`` or from<br>``&lt;DIASPORA_HOME&gt;/initializers/devise.rb`` as ``config.pepper``.<br><br>the engine should either be ``mysql`` or ``postgres``<br><br>The port is usually ``5432`` for PostgreSQL and ``3306`` for MariaDB/MySQL<br><br>Database<br>~~~~~~~~<br><br>synapse-diaspora-auth currently supports MySQL and PostgreSQL as the database engines.<br><br>PostgreSQL<br>^^^^^^^^^^<br><br>It is recommended to create a seperate user for synapse in the postgres<br>database, with read-only access to ``&lt;database&gt;``.<br><br>To do that, first login to postgres as the root user:<br><br>.. code:: bash<br><br>    sudo -u postgres psql &lt;database&gt;<br><br>then, run these commands:<br><br>.. code:: sql<br><br>    CREATE user &lt;db_user&gt; WITH password '&lt;db_password&gt;';<br>    GRANT CONNECT ON DATABASE &lt;database&gt; TO &lt;db_user&gt;;<br>    GRANT SELECT ON users TO &lt;db_user&gt;;<br><br>MySQL<br>^^^^^<br><br>The commands are almost the same in MySQL:<br><br>login to MySQL as root:<br><br>.. code:: bash<br><br>    sudo mysql -u root<br><br>Then run these queries:<br><br>.. code:: sql<br><br>    CREATE user '&lt;db_user&gt;'@'localhost' WITH password '&lt;db_password&gt;';<br>    GRANT SELECT ON &lt;database&gt;.users TO '&lt;db_user&gt;'@'localhost';<br><br><br>And you will be good to go!<br><br>Email Authentication<br>~~~~~~~~~~~~~~~~~~~~<br><br>While this module helps in authenticating with diaspora, we need to set up mxisd_ for supporting<br>authentication through email.<br><br>Installation<br>^^^^^^^^^^^^<br><br>Follow the instructions `here &lt;https://github.com/kamax-io/mxisd/blob/master/docs/getting-started.md#install&gt;`_<br><br>Configuration &amp; Setup<br>^^^^^^^^^^^^^^^^^^^^^<br><br>Follow `this &lt;https://github.com/kamax-io/mxisd/blob/master/docs/getting-started.md#configure&gt;`_.<br><br>Basically, if you used the debian package, you just need to set up the ``matrix.domain`` first.<br><br>And then, add these lines to ``mxisd.yaml``:<br><br>.. code:: yaml<br><br>    sql:<br>      enabled: true<br>      type: mysql<br>      connection: \"//&lt;HOST&gt;/&lt;DATABASE&gt;?user=&lt;USERNAME&gt;&amp;password=&lt;PASSWORD&gt;\"<br>      identity:<br>        type: 'uid'<br>        query: \"select (case when ?='email' then username else null end) as uid from users where email=?\"<br><br>Where ``&lt;HOST&gt;``, ``&lt;DATABASE&gt;``,``&lt;USERNAME&gt;`` and ``&lt;PASSWORD&gt;`` are your database host, diaspora database, user and password you created when you set up database for synapse-diaspora-auth<br><br>Now follow the steps `here &lt;https://github.com/kamax-io/mxisd/blob/master/docs/features/authentication.md#advanced&gt;`_. ie, forward the ``/_matrix/client/r0/login`` endpoint to mxisd and add<br><br>.. code:: yaml<br><br>    dns.overwrite.homeserver.client:<br>      - name: '&lt;DOMAIN&gt;'<br>        value: 'http://localhost:8008'<br><br>where ``&lt;DOMAIN&gt;`` is your matrix server name.<br><br>An Apache2 reverse proxy example is already given `here &lt;https://github.com/kamax-io/mxisd/blob/master/docs/features/authentication.md#apache2&gt;`_. An example nginx configuration would be this:<br><br>.. code::<br><br>    location /_matrix/client/r0/login {<br>        proxy_pass http://localhost:8090/_matrix/client/r0/login;<br>        proxy_set_header Host $host;<br>        proxy_set_header X-Real-IP $remote_addr;<br>        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;<br>    }<br><br>Make sure to put this above other matrix reverse proxy directives. And Congrats! You now have a competely integrated synapse - diaspora setup! :D<br><br>.. _mxisd: https://github.com/kamax-io/mxisd<br><br>\n          </div>"}, "last_serial": 3818738, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "a212f4f51483f3c95c7119afa35ca1d4", "sha256": "093a6668f55d3b29adb5f9183417e8926d306b5db2d885fd844ad61219d6cafa"}, "downloads": -1, "filename": "synapse_diaspora_auth-0.0.4-py2-none-any.whl", "has_sig": true, "md5_digest": "a212f4f51483f3c95c7119afa35ca1d4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5428, "upload_time": "2017-05-29T16:23:07", "upload_time_iso_8601": "2017-05-29T16:23:07.308455Z", "url": "https://files.pythonhosted.org/packages/0f/35/5cb6f1a64f627a1deb0c6e8d17c4a37323c2ef2947a77ee6e77da258bfee/synapse_diaspora_auth-0.0.4-py2-none-any.whl", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "97701f20081d0fb0936424b3e7a7cdb8", "sha256": "1ceb90708772d253a51f5234acb25993c1e398c3369cc46c921b0e0ad51ce695"}, "downloads": -1, "filename": "synapse_diaspora_auth-0.0.7-py2-none-any.whl", "has_sig": true, "md5_digest": "97701f20081d0fb0936424b3e7a7cdb8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5817, "upload_time": "2018-04-03T10:01:11", "upload_time_iso_8601": "2018-04-03T10:01:11.531292Z", "url": "https://files.pythonhosted.org/packages/bb/e8/1d5d50c63f266652429ce26c0781f49b36c4b9f10543a83217cf5bc5abcc/synapse_diaspora_auth-0.0.7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa8bd56dbb44471003264e2b52a95eac", "sha256": "0ed30a2325c71a4fdd3c6be8b2e0f6079e79b6998f2cd0d7f49f09c8b805793d"}, "downloads": -1, "filename": "synapse_diaspora_auth-0.0.7-py3-none-any.whl", "has_sig": true, "md5_digest": "aa8bd56dbb44471003264e2b52a95eac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5819, "upload_time": "2018-04-03T10:01:13", "upload_time_iso_8601": "2018-04-03T10:01:13.130360Z", "url": "https://files.pythonhosted.org/packages/6b/ce/b4e81fc97f5e04a79f3334619d6e00c9845f678c81889597cfc2071baf51/synapse_diaspora_auth-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "014d400133a5d8f4436759853b23653d", "sha256": "ccdc17da92b76adcd46e730b0098bdc74409e55ad332ade13717ce8a49a98cae"}, "downloads": -1, "filename": "synapse-diaspora-auth-0.0.7.tar.gz", "has_sig": true, "md5_digest": "014d400133a5d8f4436759853b23653d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15942, "upload_time": "2018-04-03T10:01:15", "upload_time_iso_8601": "2018-04-03T10:01:15.076300Z", "url": "https://files.pythonhosted.org/packages/5c/7c/31c1f9a0152c7e1d9a0a10804ea575a09f6051bfc4b2639b39b786f1c874/synapse-diaspora-auth-0.0.7.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "03063b79bb1f69414746dc88376c2016", "sha256": "9336e0e30605b74df86ce2370c419fe0d81bcb3aff410cbeb2b3e9032f0433e5"}, "downloads": -1, "filename": "synapse_diaspora_auth-0.1.1-py2-none-any.whl", "has_sig": true, "md5_digest": "03063b79bb1f69414746dc88376c2016", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7846, "upload_time": "2018-04-29T13:33:46", "upload_time_iso_8601": "2018-04-29T13:33:46.753575Z", "url": "https://files.pythonhosted.org/packages/90/c4/4900566eca973ac8707c6a0130db2554638da25199e54683a77538e854c5/synapse_diaspora_auth-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdd5ffc53437e6537b7e66f3eade52c7", "sha256": "a820187312c97ddfbc0a7d0582b5737c87e0d35755fc9e1687e1fbbc8543bcc6"}, "downloads": -1, "filename": "synapse-diaspora-auth-0.1.1.tar.gz", "has_sig": true, "md5_digest": "fdd5ffc53437e6537b7e66f3eade52c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17323, "upload_time": "2018-04-29T13:33:50", "upload_time_iso_8601": "2018-04-29T13:33:50.714247Z", "url": "https://files.pythonhosted.org/packages/69/a8/4a84dddf7a226fa1fab2ddd38d88d365f3d88a8dcd0b890dd01655943dbd/synapse-diaspora-auth-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03063b79bb1f69414746dc88376c2016", "sha256": "9336e0e30605b74df86ce2370c419fe0d81bcb3aff410cbeb2b3e9032f0433e5"}, "downloads": -1, "filename": "synapse_diaspora_auth-0.1.1-py2-none-any.whl", "has_sig": true, "md5_digest": "03063b79bb1f69414746dc88376c2016", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7846, "upload_time": "2018-04-29T13:33:46", "upload_time_iso_8601": "2018-04-29T13:33:46.753575Z", "url": "https://files.pythonhosted.org/packages/90/c4/4900566eca973ac8707c6a0130db2554638da25199e54683a77538e854c5/synapse_diaspora_auth-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdd5ffc53437e6537b7e66f3eade52c7", "sha256": "a820187312c97ddfbc0a7d0582b5737c87e0d35755fc9e1687e1fbbc8543bcc6"}, "downloads": -1, "filename": "synapse-diaspora-auth-0.1.1.tar.gz", "has_sig": true, "md5_digest": "fdd5ffc53437e6537b7e66f3eade52c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17323, "upload_time": "2018-04-29T13:33:50", "upload_time_iso_8601": "2018-04-29T13:33:50.714247Z", "url": "https://files.pythonhosted.org/packages/69/a8/4a84dddf7a226fa1fab2ddd38d88d365f3d88a8dcd0b890dd01655943dbd/synapse-diaspora-auth-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:07 2020"}