{"info": {"author": "Alon Kipnis", "author_email": "alonkipnis@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# TwoSampleHC -- Higher Criticism Test between Two Frequency Tables\n\nAn adaptation of the Donoho-Jin-Tukey Higher-Critisim (HC) test to frequency tables. This adapatation uses a binomial allocation model for the number of occurances of each feature in two samples, each of which is associated with a frequency table. An exact binomial test on each feature yields a p-value. The HC statistic is used to combine these P-values that can be uses either as a measure of similarity or to construct a test against the null hypothesis that the two tables are sampled from the same population.\n\nThis test is particularly useful in identifying non-null effects under weak and sparse alternatives, i.e., when the difference between the tables is due to few features, and the evidence each such feature provide is realtively weak. More details and applications in text classification challenges can be found in\n[1] Alon Kipnis, ``Higher Criticism for Discriminating Word Frequency Tables and Testing Authorship'', 2019\n[2] David Donoho and Alon Kipnis, ``Two-sample Testing for Large, Sparse High-Dimensional Multinomials under Rare and WeakPerturbations'', 2020. \n\n## Example:\n```\nimport numpy as np\n\nN = 1000 # number of features\nn = 5 * N #number of samples\n\nP = 1 / np.arange(1,N+1) # Zipf base distribution\nP = P / P.sum()\n\nep = 0.03 #fraction of features to perturb\nmu = 0.005 #intensity of perturbation\n\nTH = np.random.rand(N) < ep\nQ = P.copy()\nQ[TH] += mu\nQ = Q / np.sum(Q)\n\nsmp_P = np.random.multinomial(n, P)  # sample form P\nsmp_Q = np.random.multinomial(n, Q)  # sample from Q\n\npv = two_sample_pvals(smp_Q, smp_P) # binomial P-values\nHC, p_th = hc_vals(pv, alpha = 0.25) # Higher Criticism test\n\nprint(\"TV distance between P and Q: \", 0.5*np.sum(np.abs(P-Q)))\nprint(\"Higher-Criticism score for testing P == Q: \", HC)  \n# TV distance between P and Q:  0.11229216095188953\n# Higher-Criticism score for testing P == Q:  3.874043440201504\n\n# (HC score rarely goes above 2.5 if P == Q)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alonkipnis/TwoSampleHC", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "TwoSampleHC-kipnisal", "package_url": "https://pypi.org/project/TwoSampleHC-kipnisal/", "platform": "", "project_url": "https://pypi.org/project/TwoSampleHC-kipnisal/", "project_urls": {"Homepage": "https://github.com/alonkipnis/TwoSampleHC"}, "release_url": "https://pypi.org/project/TwoSampleHC-kipnisal/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Two-sample Higher Criticism", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TwoSampleHC -- Higher Criticism Test between Two Frequency Tables</h1>\n<p>An adaptation of the Donoho-Jin-Tukey Higher-Critisim (HC) test to frequency tables. This adapatation uses a binomial allocation model for the number of occurances of each feature in two samples, each of which is associated with a frequency table. An exact binomial test on each feature yields a p-value. The HC statistic is used to combine these P-values that can be uses either as a measure of similarity or to construct a test against the null hypothesis that the two tables are sampled from the same population.</p>\n<p>This test is particularly useful in identifying non-null effects under weak and sparse alternatives, i.e., when the difference between the tables is due to few features, and the evidence each such feature provide is realtively weak. More details and applications in text classification challenges can be found in\n[1] Alon Kipnis, <code>Higher Criticism for Discriminating Word Frequency Tables and Testing Authorship'', 2019 [2] David Donoho and Alon Kipnis,</code>Two-sample Testing for Large, Sparse High-Dimensional Multinomials under Rare and WeakPerturbations'', 2020.</p>\n<h2>Example:</h2>\n<pre><code>import numpy as np\n\nN = 1000 # number of features\nn = 5 * N #number of samples\n\nP = 1 / np.arange(1,N+1) # Zipf base distribution\nP = P / P.sum()\n\nep = 0.03 #fraction of features to perturb\nmu = 0.005 #intensity of perturbation\n\nTH = np.random.rand(N) &lt; ep\nQ = P.copy()\nQ[TH] += mu\nQ = Q / np.sum(Q)\n\nsmp_P = np.random.multinomial(n, P)  # sample form P\nsmp_Q = np.random.multinomial(n, Q)  # sample from Q\n\npv = two_sample_pvals(smp_Q, smp_P) # binomial P-values\nHC, p_th = hc_vals(pv, alpha = 0.25) # Higher Criticism test\n\nprint(\"TV distance between P and Q: \", 0.5*np.sum(np.abs(P-Q)))\nprint(\"Higher-Criticism score for testing P == Q: \", HC)  \n# TV distance between P and Q:  0.11229216095188953\n# Higher-Criticism score for testing P == Q:  3.874043440201504\n\n# (HC score rarely goes above 2.5 if P == Q)\n</code></pre>\n\n          </div>"}, "last_serial": 6730316, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "27283d7c9a1c20ace426a2f8de7ed815", "sha256": "19d30d8c1bc8a30e5ee2f150a59fb3a16146b3fcfe30fc46c4259408ea25ff17"}, "downloads": -1, "filename": "TwoSampleHC_kipnisal-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "27283d7c9a1c20ace426a2f8de7ed815", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3803, "upload_time": "2020-03-01T23:09:09", "upload_time_iso_8601": "2020-03-01T23:09:09.903525Z", "url": "https://files.pythonhosted.org/packages/c5/47/61e492a8c2099124f6c2321a6a7cb8308ef1eaeeaeda1d0bcb1838f7806f/TwoSampleHC_kipnisal-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "559a2a14f1c01a5d903de66c5ceb74ea", "sha256": "ae099e9141a78ccc089f33410571fe820c75a7b54a7426dc8863e13e44d506b8"}, "downloads": -1, "filename": "TwoSampleHC-kipnisal-0.0.1.tar.gz", "has_sig": false, "md5_digest": "559a2a14f1c01a5d903de66c5ceb74ea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2267, "upload_time": "2020-03-01T23:09:12", "upload_time_iso_8601": "2020-03-01T23:09:12.018486Z", "url": "https://files.pythonhosted.org/packages/e4/73/e297e92c0442e253c52ba3e7003ff52db97c9e55fd79349ccc53a044541f/TwoSampleHC-kipnisal-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "27283d7c9a1c20ace426a2f8de7ed815", "sha256": "19d30d8c1bc8a30e5ee2f150a59fb3a16146b3fcfe30fc46c4259408ea25ff17"}, "downloads": -1, "filename": "TwoSampleHC_kipnisal-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "27283d7c9a1c20ace426a2f8de7ed815", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3803, "upload_time": "2020-03-01T23:09:09", "upload_time_iso_8601": "2020-03-01T23:09:09.903525Z", "url": "https://files.pythonhosted.org/packages/c5/47/61e492a8c2099124f6c2321a6a7cb8308ef1eaeeaeda1d0bcb1838f7806f/TwoSampleHC_kipnisal-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "559a2a14f1c01a5d903de66c5ceb74ea", "sha256": "ae099e9141a78ccc089f33410571fe820c75a7b54a7426dc8863e13e44d506b8"}, "downloads": -1, "filename": "TwoSampleHC-kipnisal-0.0.1.tar.gz", "has_sig": false, "md5_digest": "559a2a14f1c01a5d903de66c5ceb74ea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2267, "upload_time": "2020-03-01T23:09:12", "upload_time_iso_8601": "2020-03-01T23:09:12.018486Z", "url": "https://files.pythonhosted.org/packages/e4/73/e297e92c0442e253c52ba3e7003ff52db97c9e55fd79349ccc53a044541f/TwoSampleHC-kipnisal-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:24 2020"}