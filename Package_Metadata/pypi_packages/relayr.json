{"info": {"author": "Relayr Team", "author_email": "team@relayr.io", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Home Automation", "Topic :: Internet", "Topic :: System :: Distributed Computing", "Topic :: System :: Hardware", "Topic :: System :: Networking"], "description": "The relayr Python Library\n=========================\n\nWelcome to the relayr Python Library. The repository provides Python\ndevelopers with programmatic access points to the relayr platform.\n\nThese include access to the relayr cloud via the relayr API_ as well as \ndirect connection to the relayr WunderBar sensors, via Bluetooth Low\nEnergy (using BlueZ_ on Linux, still very experimental).\n\n\nInstallation\n--------------\n\nYou can install the library using one of the following methods, with the\nhelp of Pip:\n\n1. You can download the very latest version of the repository from GitHub::\n\n    pip install git+https://github.com/relayr/python-sdk\n\n2. You could also use the following to install the package from the `Python Package Index`_::\n\n    pip install relayr\n\n.. attention::\n\n    Receiving data via MQTT will work only for Python 2.7 and above\n    due to limited suport in ``paho-mqtt`` for TLS in Python 2.6.\n\nExamples\n--------\n\nReceive a 10 second data stream, from one of your WunderBar sensors (device). In the\nexample below the device does not have to be a public one in order to be used. \nYou can obtain your device IDs from the relayr Dashboard `My Devices section`_:\n\nMQTT_ style (new)\n.................\n\n.. code-block:: python\n\n    import time\n    from relayr import Client\n    from relayr.dataconnection import MqttStream\n    c = Client(token='<my_access_token>')\n    dev = c.get_device(id='<my_device_id>')\n    def mqtt_callback(topic, payload):\n        print('%s %s' % (topic, payload))\n    stream = MqttStream(mqtt_callback, [dev])\n    stream.start()\n    time.sleep(10)\n    stream.stop()\n\n\nPubNub_ style (old)\n...................\n\n.. code-block:: python\n\n    import time\n    from relayr import Client\n    c = Client(token='<my_access_token>')\n    dev = c.get_device(id='<my_device_id>').get_info()\n    user = c.get_user()\n    app = c.get_app()\n    def pubnub_callback(message, channel):\n        print(repr(message), type(message))\n    conn = user.connect_device(app, dev, pubnub_callback)\n    conn.start()\n    time.sleep(10)\n    conn.stop()\n\n\nSwitch a device's LED on/off\n............................\n\n.. code-block:: python\n\n    from relayr import Client\n    c = Client(token='<my_access_token>')\n    d = c.get_device(id='<my_device_id>')\n    d.switch_led_on(True)\n\n\nDocumentation\n-------------\n\nFor references to the full documenation for the Python library please visit\nour Developer Dashboard `Python section`_!\n\n\n.. comment:\n    .. include:: CHANGELOG.txt\n\n\n.. _repository: https://github.com/relayr/python-sdk\n.. _API: https://developer.relayr.io/documents/relayrAPI/Introduction\n.. _Python Package Index: https://pypi.python.org/pypi/relayr/\n.. _BlueZ: http://www.bluez.org/\n.. _Python section: https://developer.relayr.io/documents/Python/Introduction\n.. _My Devices section: https://developer.relayr.io/dashboard/devices\n.. _PubNub: http://www.pubnub.com/\n.. _MQTT: http://mqtt.org/\n.. _its Python client: https://github.com/pubnub/python/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/relayr/python-sdk", "keywords": "relayr,rest,api,cloud,python,client,iot,wunderbar", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "relayr", "package_url": "https://pypi.org/project/relayr/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/relayr/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/relayr/python-sdk"}, "release_url": "https://pypi.org/project/relayr/0.2.4/", "requires_dist": null, "requires_python": null, "summary": "Python client for Relayr API", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Welcome to the relayr Python Library. The repository provides Python\ndevelopers with programmatic access points to the relayr platform.</p>\n<p>These include access to the relayr cloud via the relayr <a href=\"https://developer.relayr.io/documents/relayrAPI/Introduction\" rel=\"nofollow\">API</a> as well as\ndirect connection to the relayr WunderBar sensors, via Bluetooth Low\nEnergy (using <a href=\"http://www.bluez.org/\" rel=\"nofollow\">BlueZ</a> on Linux, still very experimental).</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install the library using one of the following methods, with the\nhelp of Pip:</p>\n<ol>\n<li><p>You can download the very latest version of the repository from GitHub:</p>\n<pre>pip install git+https://github.com/relayr/python-sdk\n</pre>\n</li>\n<li><p>You could also use the following to install the package from the <a href=\"https://pypi.python.org/pypi/relayr/\" rel=\"nofollow\">Python Package Index</a>:</p>\n<pre>pip install relayr\n</pre>\n</li>\n</ol>\n<div>\n<p>Attention!</p>\n<p>Receiving data via MQTT will work only for Python 2.7 and above\ndue to limited suport in <tt><span class=\"pre\">paho-mqtt</span></tt> for TLS in Python 2.6.</p>\n</div>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Receive a 10 second data stream, from one of your WunderBar sensors (device). In the\nexample below the device does not have to be a public one in order to be used.\nYou can obtain your device IDs from the relayr Dashboard <a href=\"https://developer.relayr.io/dashboard/devices\" rel=\"nofollow\">My Devices section</a>:</p>\n<div id=\"mqtt-style-new\">\n<h3><a href=\"http://mqtt.org/\" rel=\"nofollow\">MQTT</a> style (new)</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">relayr</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">relayr.dataconnection</span> <span class=\"kn\">import</span> <span class=\"n\">MqttStream</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s1\">'&lt;my_access_token&gt;'</span><span class=\"p\">)</span>\n<span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_device</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'&lt;my_device_id&gt;'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">mqtt_callback</span><span class=\"p\">(</span><span class=\"n\">topic</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">topic</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">))</span>\n<span class=\"n\">stream</span> <span class=\"o\">=</span> <span class=\"n\">MqttStream</span><span class=\"p\">(</span><span class=\"n\">mqtt_callback</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">dev</span><span class=\"p\">])</span>\n<span class=\"n\">stream</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">stream</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"pubnub-style-old\">\n<h3><a href=\"http://www.pubnub.com/\" rel=\"nofollow\">PubNub</a> style (old)</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">relayr</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s1\">'&lt;my_access_token&gt;'</span><span class=\"p\">)</span>\n<span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_device</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'&lt;my_device_id&gt;'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_info</span><span class=\"p\">()</span>\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_user</span><span class=\"p\">()</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_app</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">pubnub_callback</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">channel</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">),</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">))</span>\n<span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">connect_device</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">dev</span><span class=\"p\">,</span> <span class=\"n\">pubnub_callback</span><span class=\"p\">)</span>\n<span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"switch-a-device-s-led-on-off\">\n<h3>Switch a device\u2019s LED on/off</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">relayr</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s1\">'&lt;my_access_token&gt;'</span><span class=\"p\">)</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_device</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'&lt;my_device_id&gt;'</span><span class=\"p\">)</span>\n<span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">switch_led_on</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>For references to the full documenation for the Python library please visit\nour Developer Dashboard <a href=\"https://developer.relayr.io/documents/Python/Introduction\" rel=\"nofollow\">Python section</a>!</p>\n</div>\n\n          </div>"}, "last_serial": 1441591, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "749789cd1f0bb81dd23a9d9edfd83c54", "sha256": "4234357da091ed889b8fd38b758d250c95edce1ea010372c1d0d0d6e02ab0e4c"}, "downloads": -1, "filename": "relayr-0.2.0.tar.gz", "has_sig": false, "md5_digest": "749789cd1f0bb81dd23a9d9edfd83c54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 221413, "upload_time": "2014-11-12T16:44:11", "upload_time_iso_8601": "2014-11-12T16:44:11.287117Z", "url": "https://files.pythonhosted.org/packages/71/59/3cefd1433160c8edf7126cdcad39331fa1cb54a79aabb3aab88cfbe6bb23/relayr-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ff5f5b73d53841bb4205abdc49bf136c", "sha256": "84716b5257216061f71bdeec0b60050874fc1f4c43a0e9f43b6aae9d1e8515db"}, "downloads": -1, "filename": "relayr-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ff5f5b73d53841bb4205abdc49bf136c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 235140, "upload_time": "2014-12-22T16:00:49", "upload_time_iso_8601": "2014-12-22T16:00:49.298953Z", "url": "https://files.pythonhosted.org/packages/01/f9/1ddac60420bba328d97227e744a4ae4e8c3717aa386f66c070825775014e/relayr-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "d50141a2f1b9f0f97c2b25eb86abb154", "sha256": "0dcfc3ea8b31fe4a14dd0b49031cc6b686f9a2fb2c12d1081e836f533b7c0dab"}, "downloads": -1, "filename": "relayr-0.2.2.tar.gz", "has_sig": false, "md5_digest": "d50141a2f1b9f0f97c2b25eb86abb154", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 222150, "upload_time": "2014-12-23T12:04:29", "upload_time_iso_8601": "2014-12-23T12:04:29.528699Z", "url": "https://files.pythonhosted.org/packages/4c/0b/28e500a2c60044391b03875f6f91b44d5100d3ad6da7e90337fdf3e6654a/relayr-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "1696d4eb57ec453df2b16d5698dd7580", "sha256": "699119525772251d1ddb3fc97f3f7b15a9ad7fe1a54914bfd7ef545865e2a563"}, "downloads": -1, "filename": "relayr-0.2.3.tar.gz", "has_sig": false, "md5_digest": "1696d4eb57ec453df2b16d5698dd7580", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 228095, "upload_time": "2015-02-24T17:05:39", "upload_time_iso_8601": "2015-02-24T17:05:39.644629Z", "url": "https://files.pythonhosted.org/packages/c0/78/3b18c6488baed80bfa0752badafc899ff5373416fbffbd98cf0bdade5844/relayr-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "bca0597dd0f33c4c6a4e43822907d2ab", "sha256": "18ae78f85147b98bf88157edfde331a9e0ab699957714fdae1b6de4aed1a8ab8"}, "downloads": -1, "filename": "relayr-0.2.4.tar.gz", "has_sig": false, "md5_digest": "bca0597dd0f33c4c6a4e43822907d2ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 228628, "upload_time": "2015-02-27T21:20:12", "upload_time_iso_8601": "2015-02-27T21:20:12.127781Z", "url": "https://files.pythonhosted.org/packages/4c/a6/ea2501473f096594f94bf72a34f55645f55e13b1be1b20780ed82d0990b2/relayr-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bca0597dd0f33c4c6a4e43822907d2ab", "sha256": "18ae78f85147b98bf88157edfde331a9e0ab699957714fdae1b6de4aed1a8ab8"}, "downloads": -1, "filename": "relayr-0.2.4.tar.gz", "has_sig": false, "md5_digest": "bca0597dd0f33c4c6a4e43822907d2ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 228628, "upload_time": "2015-02-27T21:20:12", "upload_time_iso_8601": "2015-02-27T21:20:12.127781Z", "url": "https://files.pythonhosted.org/packages/4c/a6/ea2501473f096594f94bf72a34f55645f55e13b1be1b20780ed82d0990b2/relayr-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:03 2020"}