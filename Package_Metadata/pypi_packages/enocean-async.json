{"info": {"author": "Angelo Cutaia", "author_email": "angeloxx92@hotmail.it", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# Python EnOcean Async\nA Python library for reading and controlling asynchronously [EnOcean](http://www.enocean.com/) devices.\nThis library was inspired by [Python EnOcean](https://github.com/kipe/enocean).\n\nI It has been tested on the [SB-300 EnOcean](https://www.enocean.com/en/products/enocean_modules/usb-300-oem/).\nThis Python module receives messages from an EnOcean interface (e.g. via USB) that runs in an asynchronous Thread and can publish those packets to an asynchronous TCP server.By default it answer to UTETeachInPacket\n\nYou may also configure the action done by the EnOcean interface and by the TCP server everytime you recive a RadioPacket. You are not obliged to use the TCP server.\n\nIt builds upon `asyncio`\n\n## Define persistant device name for EnOcean interface\n\nIf you own an USB EnOcean interface and use it together with some other USB devices you may face the situation that the EnOcean interface gets different device names depending on your plugging and unplugging sequence, such as `/dev/ttyUSB0` or `/dev/ttyUSB1`. \n\nTo solve this you'll need\n*  idVendor\n*  idProduct\n*  serial\n\nof your Enocean USB Serial Communicator. Paste the following lines inside a terminal to find them \n`Remember to take a note of those informations`\n\n```\nudevadm info -a -n /dev/ttyUSB0 | grep '{idVendor}' | head -n1\nudevadm info -a -n /dev/ttyUSB0 | grep '{idProduct}' | head -n1\nudevadm info -a -n /dev/ttyUSB0 | grep '{serial}' | head -n1\n```\n\nAfter that \n```\ncd /etc/udev/rules.d/\nsudo nano 99-usb-serial.rules\n```\nPast this line inside the file and **REPLACE** \n*  YOURidVendor\n*  YOURidProduct\n*  YOURserial\n\nwith the ones you've obtained above\n```\nSUBSYSTEM==\"tty\", ATTRS{idVendor}==\"YOURidVendor\", ATTRS{idProduct}==\"YOURidProduct\", ATTRS{serial}==\"YOURserial\", SYMLINK+=\"enocean\"\n```\nafter that you're device will be always `/dev/anocean`\n\n***THIS PYTHON MODULE ASSUMES THAT YOU'VE ALREADY DONE THAT***\n\n# Requirements\n*  python>=3.7\n\n# Installation\n\nOption 1: Using pip\n===================\n\nenocean_async is available on [PyPI](https://pypi.org/project/enocean-async/) and can be\ninstalled using ``pip``:\n\n\n    # Install system-wide\n    $ sudo pip3 install enocean-async\n\n    # ... or user-wide installation\n    $ pip3 install --user enocean-async\n\n\nOption 2: From source\n=====================\n\n    $ git clone https://github.com/Angeloxx92/enocean_async.git\n    $ cd enocean_async\n    $ python3 setup.py install\n\n\n# Simple Usage\nTo use the serial Gateway just Subclass `SerialCommunicator` and override the methods `SerialCommunicator.packet()` and `SerialCommunicator.teachin_packet` and define new methods (using `SerialCommunicator.send(packet)`) to controll the enocean actuators  Plug, a switch and so on.\nIn order to use the TCP server Subclass `TCPCommunicator` and override the method `TCP.packet()`.\nRun some [Examples](https://github.com/Angeloxx92/enocean_async/tree/master/examples) to have all clearer\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Angeloxx92/enocean_async", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "enocean-async", "package_url": "https://pypi.org/project/enocean-async/", "platform": "", "project_url": "https://pypi.org/project/enocean-async/", "project_urls": {"Homepage": "https://github.com/Angeloxx92/enocean_async"}, "release_url": "https://pypi.org/project/enocean-async/1.0.2/", "requires_dist": ["enum-compat (>=0.0.2)", "pyserial-asyncio (>=0.4)", "beautifulsoup4 (>=4.3.2)", "aioconsole (>=0.1.15)"], "requires_python": ">=3.7", "summary": "EnOcean serial protocol async implementation", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python EnOcean Async</h1>\n<p>A Python library for reading and controlling asynchronously <a href=\"http://www.enocean.com/\" rel=\"nofollow\">EnOcean</a> devices.\nThis library was inspired by <a href=\"https://github.com/kipe/enocean\" rel=\"nofollow\">Python EnOcean</a>.</p>\n<p>I It has been tested on the <a href=\"https://www.enocean.com/en/products/enocean_modules/usb-300-oem/\" rel=\"nofollow\">SB-300 EnOcean</a>.\nThis Python module receives messages from an EnOcean interface (e.g. via USB) that runs in an asynchronous Thread and can publish those packets to an asynchronous TCP server.By default it answer to UTETeachInPacket</p>\n<p>You may also configure the action done by the EnOcean interface and by the TCP server everytime you recive a RadioPacket. You are not obliged to use the TCP server.</p>\n<p>It builds upon <code>asyncio</code></p>\n<h2>Define persistant device name for EnOcean interface</h2>\n<p>If you own an USB EnOcean interface and use it together with some other USB devices you may face the situation that the EnOcean interface gets different device names depending on your plugging and unplugging sequence, such as <code>/dev/ttyUSB0</code> or <code>/dev/ttyUSB1</code>.</p>\n<p>To solve this you'll need</p>\n<ul>\n<li>idVendor</li>\n<li>idProduct</li>\n<li>serial</li>\n</ul>\n<p>of your Enocean USB Serial Communicator. Paste the following lines inside a terminal to find them\n<code>Remember to take a note of those informations</code></p>\n<pre><code>udevadm info -a -n /dev/ttyUSB0 | grep '{idVendor}' | head -n1\nudevadm info -a -n /dev/ttyUSB0 | grep '{idProduct}' | head -n1\nudevadm info -a -n /dev/ttyUSB0 | grep '{serial}' | head -n1\n</code></pre>\n<p>After that</p>\n<pre><code>cd /etc/udev/rules.d/\nsudo nano 99-usb-serial.rules\n</code></pre>\n<p>Past this line inside the file and <strong>REPLACE</strong></p>\n<ul>\n<li>YOURidVendor</li>\n<li>YOURidProduct</li>\n<li>YOURserial</li>\n</ul>\n<p>with the ones you've obtained above</p>\n<pre><code>SUBSYSTEM==\"tty\", ATTRS{idVendor}==\"YOURidVendor\", ATTRS{idProduct}==\"YOURidProduct\", ATTRS{serial}==\"YOURserial\", SYMLINK+=\"enocean\"\n</code></pre>\n<p>after that you're device will be always <code>/dev/anocean</code></p>\n<p><em><strong>THIS PYTHON MODULE ASSUMES THAT YOU'VE ALREADY DONE THAT</strong></em></p>\n<h1>Requirements</h1>\n<ul>\n<li>python&gt;=3.7</li>\n</ul>\n<h1>Installation</h1>\n<h1>Option 1: Using pip</h1>\n<p>enocean_async is available on <a href=\"https://pypi.org/project/enocean-async/\" rel=\"nofollow\">PyPI</a> and can be\ninstalled using <code>pip</code>:</p>\n<pre><code># Install system-wide\n$ sudo pip3 install enocean-async\n\n# ... or user-wide installation\n$ pip3 install --user enocean-async\n</code></pre>\n<h1>Option 2: From source</h1>\n<pre><code>$ git clone https://github.com/Angeloxx92/enocean_async.git\n$ cd enocean_async\n$ python3 setup.py install\n</code></pre>\n<h1>Simple Usage</h1>\n<p>To use the serial Gateway just Subclass <code>SerialCommunicator</code> and override the methods <code>SerialCommunicator.packet()</code> and <code>SerialCommunicator.teachin_packet</code> and define new methods (using <code>SerialCommunicator.send(packet)</code>) to controll the enocean actuators  Plug, a switch and so on.\nIn order to use the TCP server Subclass <code>TCPCommunicator</code> and override the method <code>TCP.packet()</code>.\nRun some <a href=\"https://github.com/Angeloxx92/enocean_async/tree/master/examples\" rel=\"nofollow\">Examples</a> to have all clearer</p>\n\n          </div>"}, "last_serial": 6405993, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "12e302988dc5d58620b627d33432119c", "sha256": "deb8ab40dba0efa36684cccb3b2b541640570a399671b1615c54c9b66fc4e1cf"}, "downloads": -1, "filename": "enocean_async-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "12e302988dc5d58620b627d33432119c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 26361, "upload_time": "2020-01-07T01:07:45", "upload_time_iso_8601": "2020-01-07T01:07:45.182015Z", "url": "https://files.pythonhosted.org/packages/9b/03/ea2b0363212cd59e68050a22228030901b7b46d79306b6ca17145502e879/enocean_async-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5504970deedadf0084bc6d1d6859110d", "sha256": "cb91581b8cfb959f7e4639f883744b67d48a991ad5440475d8d6de2afb632ba5"}, "downloads": -1, "filename": "enocean_async-1.0.2.tar.gz", "has_sig": false, "md5_digest": "5504970deedadf0084bc6d1d6859110d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 22679, "upload_time": "2020-01-07T01:07:47", "upload_time_iso_8601": "2020-01-07T01:07:47.212040Z", "url": "https://files.pythonhosted.org/packages/e0/ad/a501ae9f8e05fd8800e79077405f472bc1781f821fbeae8c82f2056216fd/enocean_async-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "12e302988dc5d58620b627d33432119c", "sha256": "deb8ab40dba0efa36684cccb3b2b541640570a399671b1615c54c9b66fc4e1cf"}, "downloads": -1, "filename": "enocean_async-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "12e302988dc5d58620b627d33432119c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 26361, "upload_time": "2020-01-07T01:07:45", "upload_time_iso_8601": "2020-01-07T01:07:45.182015Z", "url": "https://files.pythonhosted.org/packages/9b/03/ea2b0363212cd59e68050a22228030901b7b46d79306b6ca17145502e879/enocean_async-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5504970deedadf0084bc6d1d6859110d", "sha256": "cb91581b8cfb959f7e4639f883744b67d48a991ad5440475d8d6de2afb632ba5"}, "downloads": -1, "filename": "enocean_async-1.0.2.tar.gz", "has_sig": false, "md5_digest": "5504970deedadf0084bc6d1d6859110d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 22679, "upload_time": "2020-01-07T01:07:47", "upload_time_iso_8601": "2020-01-07T01:07:47.212040Z", "url": "https://files.pythonhosted.org/packages/e0/ad/a501ae9f8e05fd8800e79077405f472bc1781f821fbeae8c82f2056216fd/enocean_async-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:18 2020"}