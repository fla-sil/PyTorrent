{"info": {"author": "Yuki Igarashi", "author_email": "me@bonprosoft.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9"], "description": "# shamiko\n[![PyPI](https://img.shields.io/pypi/v/shamiko.svg)](https://pypi.org/project/shamiko/)\n[![PyPI Supported Python Versions](https://img.shields.io/pypi/pyversions/shamiko.svg)](https://pypi.org/project/shamiko/)\n[![GitHub license](https://img.shields.io/github/license/bonprosoft/shamiko.svg)](https://github.com/bonprosoft/shamiko)\n\nshamiko is a library for inspecting running Python processes.\n\nIt can\n- inspect Python processes\n  - obtain information about current frames and threads of the running process\n- inject arbitrary code into specified frame and thread of the process\n- attach the running process with pdb\n\n## Install\n\n```sh\npip install shamiko\n```\n\n## CLI\n\nshamiko provides the command-line interface.\n\n```sh\nshamiko --help\n```\n\n```\nUsage: shamiko [OPTIONS] PID COMMAND [ARGS]...\n\nArguments:\n  PID (int): PID of target Python process\n\nOptions:\n  -e, --executable (str):  executable path of given PID\n  -c, --context (str):     context directory of given PID\n  --help                   show help message\n\nCommands:\n  inspect     inspect the running process\n  attach      attach a debugger to the running process\n  run-file    inject a python script file into the running process\n  run-script  inject a python code into the running process\n  shell       launch an interactive shell\n```\n\n### inspect\n\ninspect the running process\n\n```\nUsage: shamiko PID inspect\n```\n\n![](https://raw.githubusercontent.com/bonprosoft/shamiko/master/imgs/inspect.gif)\n\n### attach\n\nattach a debugger to the running process\n\n```\nUsage: shamiko PID attach [OPTIONS]\n\nOptions:\n  --thread (int): thread id where you can obtain by `inspect` command\n  --frame (int): frame id where you can obtain by `inspect` command\n  --debugger (str): debugger type. available debuggers: [pdb]\n```\n\n![](https://raw.githubusercontent.com/bonprosoft/shamiko/master/imgs/attach.gif)\n\n### run-file\n\ninject a python script file into the running process\n\n```\nUsage: shamiko PID run-file [OPTIONS] FILE_PATH\n\nArguments:\n  FILE_PATH (str): a path of the python script that you want to inject into given PID\n\nOptions:\n  --thread (int): thread id where you can obtain by `inspect` command\n  --frame (int): frame id where you can obtain by `inspect` command\n```\n\n![](https://raw.githubusercontent.com/bonprosoft/shamiko/master/imgs/runfile.gif)\n\n### run-script\n\ninject a python code into the running process\n\n```\nUsage: shamiko PID run-script [OPTIONS] SCRIPT\n\nArguments:\n  SCRIPT (str): a python code that you want to inject into given PID\n\nOptions:\n  --thread (int): thread id where you can obtain by `inspect` command\n  --frame (int): frame id where you can obtain by `inspect` command\n```\n\n![](https://raw.githubusercontent.com/bonprosoft/shamiko/master/imgs/runscript.gif)\n\n### shell\n\nlaunch an interactive shell\n\n```\nUsage: shamiko PID shell\n```\n\n![](https://raw.githubusercontent.com/bonprosoft/shamiko/master/imgs/shell.gif)\n\n## FAQ\n\n### ptrace: Operation not permitted\n\n```\nCould not attach to process.  If your uid matches the uid of the target\nprocess, check the setting of /proc/sys/kernel/yama/ptrace_scope, or try\nagain as the root user.  For more details, see /etc/sysctl.d/10-ptrace.conf\nptrace: Operation not permitted.\n```\n\nIn most distributions, executing ptrace of non-child processes by a non-super user is disallowed.\nYou can disable this temporarily by\n```sh\necho 0 > /proc/sys/kernel/yama/ptrace_scope\n```\n\n### auto-loading has been declined by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\"\n\n```\nwarning: File \"/home/user/.pyenv/versions/3.6.9/bin/python3.6-gdb.py\" auto-loading has been declined by your `auto-load safe\n-path' set to \"$debugdir:$datadir/auto-load\".\n```\n\nshamiko uses the gdb Python extension script `python-gdb.py`.\nTo allow auto loading of this file, execute\n```sh\necho \"add-auto-load-safe-path [path to python-gdb.py]\" >> ~/.gdbinit\n```\nTo simply allow auto loading of all pathes, execute\n```sh\necho \"add-auto-load-safe-path /\" >> ~/.gdbinit\n```\n\n#### Examples\n\n- To allow Python 3.6 that you installed by pyenv\n```sh\necho \"add-auto-load-safe-path ~/.pyenv/shims/python3.6-gdb.py\" >> ~/.gdbinit\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bonprosoft/shamiko", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "shamiko", "package_url": "https://pypi.org/project/shamiko/", "platform": "", "project_url": "https://pypi.org/project/shamiko/", "project_urls": {"Homepage": "https://github.com/bonprosoft/shamiko"}, "release_url": "https://pypi.org/project/shamiko/0.1.0/", "requires_dist": ["psutil (<6,>=5.6.7)", "Jinja2 (<3,>=2.10.3)"], "requires_python": "", "summary": "Shamiko ga waruindayo", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>shamiko</h1>\n<p><a href=\"https://pypi.org/project/shamiko/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/136f0b334d67f6e253938372ed1bedd8a0dc5aab/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7368616d696b6f2e737667\"></a>\n<a href=\"https://pypi.org/project/shamiko/\" rel=\"nofollow\"><img alt=\"PyPI Supported Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/621e82414039843b813dc0a3c6dbdaeba2853dd6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7368616d696b6f2e737667\"></a>\n<a href=\"https://github.com/bonprosoft/shamiko\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a74cc8be17f2028e12a638ac02daff54479a6d3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f626f6e70726f736f66742f7368616d696b6f2e737667\"></a></p>\n<p>shamiko is a library for inspecting running Python processes.</p>\n<p>It can</p>\n<ul>\n<li>inspect Python processes\n<ul>\n<li>obtain information about current frames and threads of the running process</li>\n</ul>\n</li>\n<li>inject arbitrary code into specified frame and thread of the process</li>\n<li>attach the running process with pdb</li>\n</ul>\n<h2>Install</h2>\n<pre>pip install shamiko\n</pre>\n<h2>CLI</h2>\n<p>shamiko provides the command-line interface.</p>\n<pre>shamiko --help\n</pre>\n<pre><code>Usage: shamiko [OPTIONS] PID COMMAND [ARGS]...\n\nArguments:\n  PID (int): PID of target Python process\n\nOptions:\n  -e, --executable (str):  executable path of given PID\n  -c, --context (str):     context directory of given PID\n  --help                   show help message\n\nCommands:\n  inspect     inspect the running process\n  attach      attach a debugger to the running process\n  run-file    inject a python script file into the running process\n  run-script  inject a python code into the running process\n  shell       launch an interactive shell\n</code></pre>\n<h3>inspect</h3>\n<p>inspect the running process</p>\n<pre><code>Usage: shamiko PID inspect\n</code></pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5809cfcf241a83939dd69e8906c0983f3e5db6e3/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f626f6e70726f736f66742f7368616d696b6f2f6d61737465722f696d67732f696e73706563742e676966\"></p>\n<h3>attach</h3>\n<p>attach a debugger to the running process</p>\n<pre><code>Usage: shamiko PID attach [OPTIONS]\n\nOptions:\n  --thread (int): thread id where you can obtain by `inspect` command\n  --frame (int): frame id where you can obtain by `inspect` command\n  --debugger (str): debugger type. available debuggers: [pdb]\n</code></pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cfb5cccf9a8aa2b08581d4de5e705ddcedeb9504/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f626f6e70726f736f66742f7368616d696b6f2f6d61737465722f696d67732f6174746163682e676966\"></p>\n<h3>run-file</h3>\n<p>inject a python script file into the running process</p>\n<pre><code>Usage: shamiko PID run-file [OPTIONS] FILE_PATH\n\nArguments:\n  FILE_PATH (str): a path of the python script that you want to inject into given PID\n\nOptions:\n  --thread (int): thread id where you can obtain by `inspect` command\n  --frame (int): frame id where you can obtain by `inspect` command\n</code></pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a17d80084b7c422d19bd4c67e7ee8345875cec56/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f626f6e70726f736f66742f7368616d696b6f2f6d61737465722f696d67732f72756e66696c652e676966\"></p>\n<h3>run-script</h3>\n<p>inject a python code into the running process</p>\n<pre><code>Usage: shamiko PID run-script [OPTIONS] SCRIPT\n\nArguments:\n  SCRIPT (str): a python code that you want to inject into given PID\n\nOptions:\n  --thread (int): thread id where you can obtain by `inspect` command\n  --frame (int): frame id where you can obtain by `inspect` command\n</code></pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac50480d768f1c969a793237e4718a2bc6e11f03/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f626f6e70726f736f66742f7368616d696b6f2f6d61737465722f696d67732f72756e7363726970742e676966\"></p>\n<h3>shell</h3>\n<p>launch an interactive shell</p>\n<pre><code>Usage: shamiko PID shell\n</code></pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/74729cb259f636adfd61648d9754e3f41c165bbd/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f626f6e70726f736f66742f7368616d696b6f2f6d61737465722f696d67732f7368656c6c2e676966\"></p>\n<h2>FAQ</h2>\n<h3>ptrace: Operation not permitted</h3>\n<pre><code>Could not attach to process.  If your uid matches the uid of the target\nprocess, check the setting of /proc/sys/kernel/yama/ptrace_scope, or try\nagain as the root user.  For more details, see /etc/sysctl.d/10-ptrace.conf\nptrace: Operation not permitted.\n</code></pre>\n<p>In most distributions, executing ptrace of non-child processes by a non-super user is disallowed.\nYou can disable this temporarily by</p>\n<pre><span class=\"nb\">echo</span> <span class=\"m\">0</span> &gt; /proc/sys/kernel/yama/ptrace_scope\n</pre>\n<h3>auto-loading has been declined by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\"</h3>\n<pre><code>warning: File \"/home/user/.pyenv/versions/3.6.9/bin/python3.6-gdb.py\" auto-loading has been declined by your `auto-load safe\n-path' set to \"$debugdir:$datadir/auto-load\".\n</code></pre>\n<p>shamiko uses the gdb Python extension script <code>python-gdb.py</code>.\nTo allow auto loading of this file, execute</p>\n<pre><span class=\"nb\">echo</span> <span class=\"s2\">\"add-auto-load-safe-path [path to python-gdb.py]\"</span> &gt;&gt; ~/.gdbinit\n</pre>\n<p>To simply allow auto loading of all pathes, execute</p>\n<pre><span class=\"nb\">echo</span> <span class=\"s2\">\"add-auto-load-safe-path /\"</span> &gt;&gt; ~/.gdbinit\n</pre>\n<h4>Examples</h4>\n<ul>\n<li>To allow Python 3.6 that you installed by pyenv</li>\n</ul>\n<pre><span class=\"nb\">echo</span> <span class=\"s2\">\"add-auto-load-safe-path ~/.pyenv/shims/python3.6-gdb.py\"</span> &gt;&gt; ~/.gdbinit\n</pre>\n\n          </div>"}, "last_serial": 6386172, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4afc425241998e5ee8498c4ab83e2acd", "sha256": "d7c4603f482bafa71a498a093cfdd6895714526447991e28832b094ac60d1c3c"}, "downloads": -1, "filename": "shamiko-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4afc425241998e5ee8498c4ab83e2acd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19878, "upload_time": "2020-01-02T14:27:06", "upload_time_iso_8601": "2020-01-02T14:27:06.178706Z", "url": "https://files.pythonhosted.org/packages/98/69/5701f249eed7b760980adcf6f29161daf0236a9cecf969b8087880196134/shamiko-0.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4afc425241998e5ee8498c4ab83e2acd", "sha256": "d7c4603f482bafa71a498a093cfdd6895714526447991e28832b094ac60d1c3c"}, "downloads": -1, "filename": "shamiko-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4afc425241998e5ee8498c4ab83e2acd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19878, "upload_time": "2020-01-02T14:27:06", "upload_time_iso_8601": "2020-01-02T14:27:06.178706Z", "url": "https://files.pythonhosted.org/packages/98/69/5701f249eed7b760980adcf6f29161daf0236a9cecf969b8087880196134/shamiko-0.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:13:49 2020"}