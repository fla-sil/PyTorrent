{"info": {"author": "Dmitry Rodionov", "author_email": "i.am.rodionovd@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License"], "description": "machobot  \n========  \n\n.. image:: https://travis-ci.org/rodionovd/machobot.svg?branch=master\n    :target: https://travis-ci.org/rodionovd/machobot\n.. image:: https://codeclimate.com/github/rodionovd/machobot/badges/gpa.svg\n   :target: https://codeclimate.com/github/rodionovd/machobot\n   :alt: Code Climate\n\nA Python toolbox for Mach-O files analysis. Heavily relies on\n``macholib``.   \n  \nInstallation  \n------------  \n  \nFor usage\n'''''''''\n\n::\n\n\t$ [sudo] pip install machobot\n\nFor development\n'''''''''''''''\n\n::\n\n\t$ pip install nose macholib\n\t$ git clone https://github.com/rodionovd/machobot.git machobot\n\t$ cd ./machobot\n\t$ nosetests # run the test suite\n\nUsage\n-----\n\n-  As a command-line util:\n\n\t.. code:: bash\n\n\t   $ inject_dylib ./target \"@rpath/mylib.dylib\"\n\n-  As a Python module:\n\n\t.. code:: python\n\n\t   import machobot\n\n\tExample usage:\n\n\t.. code:: python\n\n\t   import machobot.dylib as dylib\n\n\t   dylib.insert_load_command(\"output.a\", \"@executable_path/../../libk.dylib\")\n\t   \nModules\n-------\n\ndylib\n'''''''''\n\n\t.. code:: python\n\n\t   insert_load_command (target_path, library_install_name)\n\nInserts a new ``LC_LOAD_DYLIB`` load command into the target Mach-O\nheader.\n\n+----------------------------+-------------------------------------------------------------------------------------------------+\n| Argument                   | Description                                                                                     |\n+============================+=================================================================================================+\n| ``target_path``            | A path to the target Mach-O executable file. **This file will be overwritten**.                 |\n+----------------------------+-------------------------------------------------------------------------------------------------+\n| ``library_install_name``   | An install name for the library to inject. This string is used as a part of the load command.   |\n+----------------------------+-------------------------------------------------------------------------------------------------+\n\n+-----------------------------------------------------------------------+\n| Return value                                                          |\n+=======================================================================+\n| Returns ``True`` if everything is OK. Otherwise rises an exception.   |\n+-----------------------------------------------------------------------+\n\n\n\n\t.. code:: python\n\n\t   macho_dependencies_list (target_path, header_magic=None)\n\nGenerates a list of libraries the given Mach-O file depends on.\n\nIn that list a single library is represented by its \"install path\": for some\nlibraries it would be a full file path, and for others it would be a relative\npath (sometimes with dyld templates like @executable_path or @rpath in it).\n\nNote: I don't know any reason why would some architectures of a fat Mach-O depend\non certain libraries while others don't, but *it's technically possible*.\nSo that's why you may want to specify the `header_magic` value for a particular header.\n\n+----------------------------+-------------------------------------------------------------------------------------------------+\n| Argument                   | Description                                                                                     |\n+============================+=================================================================================================+\n| ``target_path``            | A path to the target Mach-O executable file.                                                    |\n+----------------------------+-------------------------------------------------------------------------------------------------+\n| ``header_magic``           | Mach-O MAGIC value for a header you want to inspect. If this argument is not provided, the      |\n|                            | function returns a list of the first header's dependencies.                                     |\n+----------------------------+-------------------------------------------------------------------------------------------------+\n\n+-----------------------------------------------------------------------+\n| Return value                                                          |\n+=======================================================================+\n| An object with two properties: ``weak`` and ``strong`` that hold lists|\n| of weak and strong dependencies respectively.                         |\n+-----------------------------------------------------------------------+\n\nSee ``machobot/tests/test_dylib.py`` for usage examples.\n\n--------------\n\nFound an issue? Submit an issue! :shipit:", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/rodionovd/machobot", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "machobot", "package_url": "https://pypi.org/project/machobot/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/machobot/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/rodionovd/machobot"}, "release_url": "https://pypi.org/project/machobot/0.1.5/", "requires_dist": null, "requires_python": null, "summary": "A set of tools for Mach-O executables analysis on OS X", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/rodionovd/machobot\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/rodionovd/machobot.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2386b0efa5b81c01cf02a9617a241e6b8e4920e/68747470733a2f2f7472617669732d63692e6f72672f726f64696f6e6f76642f6d6163686f626f742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codeclimate.com/github/rodionovd/machobot\" rel=\"nofollow\"><img alt=\"Code Climate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/edeceee724620759053a31f0008b55f637301209/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f726f64696f6e6f76642f6d6163686f626f742f6261646765732f6770612e737667\"></a>\n<p>A Python toolbox for Mach-O files analysis. Heavily relies on\n<tt>macholib</tt>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"for-usage\">\n<h3>For usage</h3>\n<pre>$ [sudo] pip install machobot\n</pre>\n</div>\n<div id=\"for-development\">\n<h3>For development</h3>\n<pre>$ pip install nose macholib\n$ git clone https://github.com/rodionovd/machobot.git machobot\n$ cd ./machobot\n$ nosetests # run the test suite\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ul>\n<li><p>As a command-line util:</p>\n<blockquote>\n<pre>$ inject_dylib ./target <span class=\"s2\">\"@rpath/mylib.dylib\"</span>\n</pre>\n</blockquote>\n</li>\n<li><p>As a Python module:</p>\n<blockquote>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">machobot</span>\n</pre>\n<p>Example usage:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">machobot.dylib</span> <span class=\"k\">as</span> <span class=\"nn\">dylib</span>\n\n<span class=\"n\">dylib</span><span class=\"o\">.</span><span class=\"n\">insert_load_command</span><span class=\"p\">(</span><span class=\"s2\">\"output.a\"</span><span class=\"p\">,</span> <span class=\"s2\">\"@executable_path/../../libk.dylib\"</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"modules\">\n<h2>Modules</h2>\n<h2 id=\"dylib\"><span class=\"section-subtitle\">dylib</span></h2>\n<blockquote>\n<pre><span class=\"n\">insert_load_command</span> <span class=\"p\">(</span><span class=\"n\">target_path</span><span class=\"p\">,</span> <span class=\"n\">library_install_name</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n<p>Inserts a new <tt>LC_LOAD_DYLIB</tt> load command into the target Mach-O\nheader.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>target_path</tt></td>\n<td>A path to the target Mach-O executable file. <strong>This file will be overwritten</strong>.</td>\n</tr>\n<tr><td><tt>library_install_name</tt></td>\n<td>An install name for the library to inject. This string is used as a part of the load command.</td>\n</tr>\n</tbody>\n</table>\n<table>\n<colgroup>\n<col>\n</colgroup>\n<thead>\n<tr><th>Return value</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Returns <tt>True</tt> if everything is OK. Otherwise rises an exception.</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<pre><span class=\"n\">macho_dependencies_list</span> <span class=\"p\">(</span><span class=\"n\">target_path</span><span class=\"p\">,</span> <span class=\"n\">header_magic</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n<p>Generates a list of libraries the given Mach-O file depends on.</p>\n<p>In that list a single library is represented by its \u201cinstall path\u201d: for some\nlibraries it would be a full file path, and for others it would be a relative\npath (sometimes with dyld templates like @executable_path or @rpath in it).</p>\n<p>Note: I don\u2019t know any reason why would some architectures of a fat Mach-O depend\non certain libraries while others don\u2019t, but <em>it\u2019s technically possible</em>.\nSo that\u2019s why you may want to specify the <cite>header_magic</cite> value for a particular header.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>target_path</tt></td>\n<td>A path to the target Mach-O executable file.</td>\n</tr>\n<tr><td><tt>header_magic</tt></td>\n<td>Mach-O MAGIC value for a header you want to inspect. If this argument is not provided, the\nfunction returns a list of the first header\u2019s dependencies.</td>\n</tr>\n</tbody>\n</table>\n<table>\n<colgroup>\n<col>\n</colgroup>\n<thead>\n<tr><th>Return value</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>An object with two properties: <tt>weak</tt> and <tt>strong</tt> that hold lists\nof weak and strong dependencies respectively.</td>\n</tr>\n</tbody>\n</table>\n<p>See <tt>machobot/tests/test_dylib.py</tt> for usage examples.</p>\n<hr class=\"docutils\">\n<p>Found an issue? Submit an issue! :shipit:</p>\n</div>\n\n          </div>"}, "last_serial": 1682232, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "45ae62141d859b445444bf299cd75a6c", "sha256": "da2ccdd83193f9fa332486eedd841b3cc1301513ce920b85b2cf7ba7487bb701"}, "downloads": -1, "filename": "machobot-0.1.1.tar.gz", "has_sig": false, "md5_digest": "45ae62141d859b445444bf299cd75a6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2958, "upload_time": "2015-03-30T19:00:14", "upload_time_iso_8601": "2015-03-30T19:00:14.661111Z", "url": "https://files.pythonhosted.org/packages/29/af/390eabcc62467efcfd3792065d547a383f9976986df651fa1aad4c2d04d9/machobot-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "bc4950e7a65981b590fd367b60097f2a", "sha256": "2eb4ecc35867eba3aa57ad98e53bb4faf5b7fecbb98ed88d565f7f1fc6b634c7"}, "downloads": -1, "filename": "machobot-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bc4950e7a65981b590fd367b60097f2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3591, "upload_time": "2015-04-03T10:54:26", "upload_time_iso_8601": "2015-04-03T10:54:26.292052Z", "url": "https://files.pythonhosted.org/packages/b7/a8/87eab6cc18796b252d3dc76641f87eea1191f5ff9452469d933b3a22fef3/machobot-0.1.2.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "d7a69177643ff8c213ec0e7d77b4b4f8", "sha256": "d82154132bc16029fe0acdb0612a6d0a9c5daeb72e9dff803d968a61c5867cbd"}, "downloads": -1, "filename": "machobot-0.1.4.tar.gz", "has_sig": false, "md5_digest": "d7a69177643ff8c213ec0e7d77b4b4f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6524, "upload_time": "2015-08-18T12:33:17", "upload_time_iso_8601": "2015-08-18T12:33:17.326346Z", "url": "https://files.pythonhosted.org/packages/de/17/38e2a0f8c4e602f996f26a8965d2b8109956bf8a0df79324457349fa848c/machobot-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "cbd4f2ee2e4e0b8d5dbcc71648c0ae93", "sha256": "f1f1a26a7551c113b2a421d88ed935e3e1e0f4e1b24c8b96bf5ca5b1dbb505c4"}, "downloads": -1, "filename": "machobot-0.1.5.tar.gz", "has_sig": false, "md5_digest": "cbd4f2ee2e4e0b8d5dbcc71648c0ae93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6528, "upload_time": "2015-08-18T12:40:42", "upload_time_iso_8601": "2015-08-18T12:40:42.175712Z", "url": "https://files.pythonhosted.org/packages/8a/44/19de619226c3f3962858f4b4913753c635e97d7c1b32364b31360949ca48/machobot-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cbd4f2ee2e4e0b8d5dbcc71648c0ae93", "sha256": "f1f1a26a7551c113b2a421d88ed935e3e1e0f4e1b24c8b96bf5ca5b1dbb505c4"}, "downloads": -1, "filename": "machobot-0.1.5.tar.gz", "has_sig": false, "md5_digest": "cbd4f2ee2e4e0b8d5dbcc71648c0ae93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6528, "upload_time": "2015-08-18T12:40:42", "upload_time_iso_8601": "2015-08-18T12:40:42.175712Z", "url": "https://files.pythonhosted.org/packages/8a/44/19de619226c3f3962858f4b4913753c635e97d7c1b32364b31360949ca48/machobot-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:19 2020"}