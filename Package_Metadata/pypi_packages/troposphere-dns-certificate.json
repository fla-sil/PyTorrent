{"info": {"author": "Daniel Flook", "author_email": "daniel@flook.org", "bugtrack_url": null, "classifiers": [], "description": "# Cloudformation DNS Validated Certificate Resource\n\nThe cloudformation AWS::CertificateManager::Certificate resource can only create email validated certificates.\n\nThis is a cloudformation custom resource which can additionally create DNS validated certificates for domains that use\na Route 53 hosted zone. It can also create certificates in a region other than the stack's region.\n\n## Usage\n\nTo use this custom resource, copy the CustomAcmCertificateLambda and CustomAcmCertificateLambdaExecutionRole resources\ninto your template. You can then create certificate resources of Type: `Custom::DNSCertificate`.\n\nThis resource is also available as troposphere extension, in the [troposphere-dns-certificate](https://pypi.org/project/troposphere-dns-certificate/) package\n\nRemember to add a ServiceToken property to the resource which references the CustomAcmCertificateLambda arn.\nCertificates may take up to 30 minutes to be issued, but typically takes ~3 minutes. The Certificate resource remains as \nCREATE_IN_PROGRESS until the certificate is issued.\n\n### Differences from AWS::CertificateManager::Certificate\nIt should behave similarly to [AWS::CertificateManager::Certificate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html), \nexcept for the differences described here.\n\nWhen using 'DNS' as the `ValidationMethod` the `DomainValidation` property becomes required, and the `DomainValidationOption`\nrequires a `HostedZoneId` instead of a `ValidationDomain`. The `HostedZoneId` should be the zone to create the DNS validation \nrecords in. You can also specify a `Route53RoleArn`, which is a role to assume before creating DNS validation records.\n\nThe additional `Region` property can be used to set the region to create the certificate in.\n\n### Certificate Resource\n\n#### Syntax\n\n```yaml\nType: Custom::DNSCertificate\nProperties: \n  DomainName: String\n  DomainValidationOptions:\n    - DomainValidationOption\n  SubjectAlternativeNames:\n    - String\n  Tags:\n    - Resource Tag\n  ValidationMethod: String\n  Region: String\n  ServiceToken: !GetAtt 'CustomAcmCertificateLambda.Arn'  \n```\n\n#### Properties\n\n* `DomainName`\n\n  Fully qualified domain name (FQDN) to issue the certificate for. Use an asterisk as a wildcard.\n\n  - Required: Yes\n  - Type: String\n  - Update requires: [Replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement)\n\n* `DomainValidationOptions`\n\n  Information for validating domain ownership. A DomainValidationOption should be present for the DomainName and all \n  SubjectAlternativeNames. A DomainValidationOption for a parent domain can be used for names that have the same HostedZoneId.\n\n  - Required: Yes\n  - Type: List of `DomainValidationOption`\n  - Update requires: [Replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement)  \n\n* `SubjectAlternativeNames`\n\n  FQDNs to include in the Subject Alternative Name of the certificate.\n\n  - Required: No\n  - Type: List of String values\n  - Update requires: [Replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement)  \n\n* `Tags`\n\n  Tags for this certificate\n\n  - Required: No\n  - Type: [Resource Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)\n  - Update requires: [No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)  \n\n* `ValidationMethod`\n\n  Method to use to validate domain ownership. This should be `DNS`.\n\n  - Required: No\n  - Default: `EMAIL`\n  - Type: String\n  - Update requires: [Replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) \n\n* `Region`\n\n  The region to create the certificate in.\n\n  - Required: No\n  - Default: The Stack's region\n  - Type: String\n  - Update requires: [Replacement](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement) \n\n#### Return value\n\n* Ref\n\n  When the [`Ref`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html) \n  function is used on the logical ID of a Certificate resource the certificate ARN is returned.\n\n### DomainValidationOption\n\n#### Syntax\n\n```yaml\nDomainName: String\nHostedZoneId: String\nRoute53RoleArn: String\n```\n\n#### Properties\n\n* `DomainName`\n\n  Fully qualified domain name of the validation request.\n\n  - Required: Yes\n  - Type: String\n\n* `HostedZoneId`\n\n  The Route53 Hosted Zone to create validation records in.\n\n  - Required: Yes\n  - Type: String\n\n* `Route53RoleArn`\n\n  The arn of an IAM Role to assume when creating DNS validation records. This can be used to create the records for a\n  Hosted Zone in another AWS account.\n\n  - Required: No\n  - Type: String\n\n## Troposphere\n\nIf you are using troposphere you can install this resource as an extension using pip:\n\n    $ pip install troposphere_dns_certificate\n\nYou can then import the Certificate resource from troposphere_dns_certificate.certificatemanager instead of troposphere.certificatemanager. \n\ncloudformation.py is an example of using troposphere to create a template with a Certificate resource. \n\nIf you are not using troposphere, you can simply copy the CustomAcmCertificateLambda and CustomAcmCertificateLambdaExecutionRole\nresources from the cloudformation.json or cloudformation.yaml files.\n\n## Examples\n\nThe certificate resource looks like:\n\n```yaml\nExampleCertificate:\n  Properties:\n    DomainName: test.example.com\n    ValidationMethod: DNS\n    DomainValidationOptions:\n      - DomainName: test.example.com\n        HostedZoneId: Z2KZ5YTUFZNC7H\n    Tags:\n      - Key: Name\n        Value: Example Certificate\n    ServiceToken: !GetAtt 'CustomAcmCertificateLambda.Arn'\n  Type: Custom::DNSCertificate\n```\n\n\nAs with AWS::CertificateManager::Certificate providing the logical ID of the resource to the Ref function returns the certificate ARN.\n\nFor example (in yaml): `!Ref 'ExampleCertificate'`\n\n### SubjectAlternativeNames\n\nAdditional names can be added to the certificate using the SubjectAlternativeNames property.\n\n```yaml\nExampleCertificate:\n  Properties:\n    DomainName: example.com\n    SubjectAlternativeNames:\n      - additional.example.com\n      - another.example.com\n    ValidationMethod: DNS\n    DomainValidationOptions:\n      - DomainName: example.com\n        HostedZoneId: Z2KZ5YTUFZNC7H\n    Tags:\n      - Key: Name\n        Value: Example Certificate\n    ServiceToken: !GetAtt 'CustomAcmCertificateLambda.Arn'\nType: Custom::DNSCertificate\n```\n\n### Multiple Hosted Zones\n\nNames from multiple hosted zones can be used by adding DomainValidationOptions for each of the hosted zones.\nFor example:\n\n```yaml\nExampleCertificate:\n  Properties:\n    DomainName: example.com\n    SubjectAlternativeNames:\n      - additional.example.org\n    ValidationMethod: DNS\n    DomainValidationOptions:\n      - DomainName: example.com\n        HostedZoneId: Z2KZ5YTUFZNC7H\n      - DomainName: example.org\n        HostedZoneId: ZEJZ9DIN47IQN\n    Tags:\n      - Key: Name\n        Value: Example Certificate\n    ServiceToken: !GetAtt 'CustomAcmCertificateLambda.Arn'\nType: Custom::DNSCertificate\n```\n\n### Wildcards\n\nWildcards can be used normally. A certificate for a name and all subdomains for example:\n\n```yaml\nExampleCertificate:\n  Properties:\n    DomainName: example.com\n    SubjectAlternativeNames:\n      - *.example.com\n    ValidationMethod: DNS\n    DomainValidationOptions:\n      - DomainName: example.com\n        HostedZoneId: Z2KZ5YTUFZNC7H\n    Tags:\n      - Key: Name\n        Value: Example Certificate\n    ServiceToken: !GetAtt 'CustomAcmCertificateLambda.Arn'\n  Type: Custom::DNSCertificate\n```\n\n### Specifying a region\n\nThis example uses the Region property to create the certificate in us-east-1, for use with cloudfront:\n\n```yaml\nExampleCertificate:\n  Properties:\n    DomainName: example.com\n    ValidationMethod: DNS\n    DomainValidationOptions:\n      - DomainName: example.com\n        HostedZoneId: Z2KZ5YTUFZNC7H\n    Region: us-east-1\n    Tags:\n      - Key: Name\n        Value: Example Certificate\n    ServiceToken: !GetAtt 'CustomAcmCertificateLambda.Arn'\n  Type: Custom::DNSCertificate\n```\n\n### Assuming a role for Route 53 record creation\n\nIn some cases the account owning the hosted zone might be a different one than the one you are generating the certificate in.\nTo support this you can specify the domain validation option property `Route53RoleArn` with a role-ARN that should be \nassumed before creating the records required for certificate validation.\n\nIf a top-level Route53RoleArn property is specified it will be assumed when validating domains that don't contain a\nRoute53RoleArn domain validation option property.\n\n```yaml\nExampleCertificate:\n  Properties:\n    DomainName: test.example.com\n    ValidationMethod: DNS\n    DomainValidationOptions:\n      - DomainName: test.example.com\n        HostedZoneId: Z2KZ5YTUFZNC7H\n        Route53RoleArn: arn:aws:iam::TRUSTING-ACCOUNT-ID:role/ACMRecordCreationRole\n    Tags:\n      - Key: Name\n        Value: Example Certificate\n    ServiceToken: !GetAtt 'CustomAcmCertificateLambda.Arn'\n  Type: Custom::DNSCertificate\n```\n\nAdditionally you have to allow the assumption of this role by adding this statement to the CustomAcmCertificateLambdaExecutionRole:\n\n```yaml\n- Action:\n    - sts:AssumeRole\n  Resource:\n    - arn:aws:iam::TRUSTING-ACCOUNT-ID:role/ACMRecordCreationRole\n  Effect: Allow\n```\n\nIf you are using the troposphere extension, this statement is added automatically. The full CustomAcmCertificateLambdaExecutionRole\nfor this example would look like:\n\n```yaml\nCustomAcmCertificateLambdaExecutionRole:\n  Properties:\n    AssumeRolePolicyDocument:\n      Statement:\n        - Action:\n            - sts:AssumeRole\n          Effect: Allow\n          Principal:\n            Service: lambda.amazonaws.com\n      Version: '2012-10-17'\n    ManagedPolicyArns:\n      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\n      - arn:aws:iam::aws:policy/service-role/AWSLambdaRole\n    Policies:\n      - PolicyDocument:\n          Statement:\n            - Action:\n                - acm:AddTagsToCertificate\n                - acm:DeleteCertificate\n                - acm:DescribeCertificate\n                - acm:RemoveTagsFromCertificate\n              Effect: Allow\n              Resource:\n                - !Sub 'arn:aws:acm:*:${AWS::AccountId}:certificate/*'\n            - Action:\n                - acm:RequestCertificate\n                - acm:ListTagsForCertificate\n                - acm:ListCertificates\n              Effect: Allow\n              Resource:\n                - '*'\n            - Action:\n                - route53:ChangeResourceRecordSets\n              Effect: Allow\n              Resource:\n                - arn:aws:route53:::hostedzone/*\n            - Action:\n                - sts:AssumeRole\n              Effect: Allow\n              Resource:\n                - arn:aws:iam::TRUSTING-ACCOUNT-ID:role/ACMRecordCreationRole\n          Version: '2012-10-17'\n        PolicyName: !Sub '${AWS::StackName}CustomAcmCertificateLambdaExecutionPolicy'\n```\n\nThe IAM role in the account with the hosted zone would look something like:\n\n```yaml\nACMRecordCreationRole:\n  Type: AWS::IAM::Role\n  Properties:\n    AssumeRolePolicyDocument:\n      Statement:\n        - Action:\n            - sts:AssumeRole\n          Principal:\n            AWS:\n              - arn:aws:iam::TRUSTED-ACCOUNT-ID:root\n          Effect: Allow\n      Version: '2012-10-17'\n    Policies:\n      - PolicyName: 'ACMRecordCreation'\n        PolicyDocument:\n          Version: '2012-10-17'\n          Statement:\n            - Action:\n                - route53:ChangeResourceRecordSets\n              Resource:\n                - arn:aws:route53:::hostedzone/Z2KZ5YTUFZNC7H\n              Effect: Allow\n    RoleName: ACMRecordCreationRole\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dflook/cloudformation-dns-certificate", "keywords": "cloudformation troposphere certificate", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "troposphere-dns-certificate", "package_url": "https://pypi.org/project/troposphere-dns-certificate/", "platform": "", "project_url": "https://pypi.org/project/troposphere-dns-certificate/", "project_urls": {"Homepage": "https://github.com/dflook/cloudformation-dns-certificate", "Issues": "https://github.com/dflook/cloudformation-dns-certificate/issues"}, "release_url": "https://pypi.org/project/troposphere-dns-certificate/1.7.2/", "requires_dist": ["troposphere", "awacs", "wrapt", "python-minifier (>=2.3.0)", "boto3"], "requires_python": "", "summary": "Cloudformation DNS validated certificate resource for troposphere", "version": "1.7.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Cloudformation DNS Validated Certificate Resource</h1>\n<p>The cloudformation AWS::CertificateManager::Certificate resource can only create email validated certificates.</p>\n<p>This is a cloudformation custom resource which can additionally create DNS validated certificates for domains that use\na Route 53 hosted zone. It can also create certificates in a region other than the stack's region.</p>\n<h2>Usage</h2>\n<p>To use this custom resource, copy the CustomAcmCertificateLambda and CustomAcmCertificateLambdaExecutionRole resources\ninto your template. You can then create certificate resources of Type: <code>Custom::DNSCertificate</code>.</p>\n<p>This resource is also available as troposphere extension, in the <a href=\"https://pypi.org/project/troposphere-dns-certificate/\" rel=\"nofollow\">troposphere-dns-certificate</a> package</p>\n<p>Remember to add a ServiceToken property to the resource which references the CustomAcmCertificateLambda arn.\nCertificates may take up to 30 minutes to be issued, but typically takes ~3 minutes. The Certificate resource remains as\nCREATE_IN_PROGRESS until the certificate is issued.</p>\n<h3>Differences from AWS::CertificateManager::Certificate</h3>\n<p>It should behave similarly to <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html\" rel=\"nofollow\">AWS::CertificateManager::Certificate</a>,\nexcept for the differences described here.</p>\n<p>When using 'DNS' as the <code>ValidationMethod</code> the <code>DomainValidation</code> property becomes required, and the <code>DomainValidationOption</code>\nrequires a <code>HostedZoneId</code> instead of a <code>ValidationDomain</code>. The <code>HostedZoneId</code> should be the zone to create the DNS validation\nrecords in. You can also specify a <code>Route53RoleArn</code>, which is a role to assume before creating DNS validation records.</p>\n<p>The additional <code>Region</code> property can be used to set the region to create the certificate in.</p>\n<h3>Certificate Resource</h3>\n<h4>Syntax</h4>\n<pre><span class=\"nt\">Type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Custom::DNSCertificate</span>\n<span class=\"nt\">Properties</span><span class=\"p\">:</span> \n  <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">String</span>\n  <span class=\"nt\">DomainValidationOptions</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">DomainValidationOption</span>\n  <span class=\"nt\">SubjectAlternativeNames</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">String</span>\n  <span class=\"nt\">Tags</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">Resource Tag</span>\n  <span class=\"nt\">ValidationMethod</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">String</span>\n  <span class=\"nt\">Region</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">String</span>\n  <span class=\"nt\">ServiceToken</span><span class=\"p\">:</span> <span class=\"kt\">!GetAtt</span> <span class=\"s\">'CustomAcmCertificateLambda.Arn'</span>  \n</pre>\n<h4>Properties</h4>\n<ul>\n<li>\n<p><code>DomainName</code></p>\n<p>Fully qualified domain name (FQDN) to issue the certificate for. Use an asterisk as a wildcard.</p>\n<ul>\n<li>Required: Yes</li>\n<li>Type: String</li>\n<li>Update requires: <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\" rel=\"nofollow\">Replacement</a></li>\n</ul>\n</li>\n<li>\n<p><code>DomainValidationOptions</code></p>\n<p>Information for validating domain ownership. A DomainValidationOption should be present for the DomainName and all\nSubjectAlternativeNames. A DomainValidationOption for a parent domain can be used for names that have the same HostedZoneId.</p>\n<ul>\n<li>Required: Yes</li>\n<li>Type: List of <code>DomainValidationOption</code></li>\n<li>Update requires: <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\" rel=\"nofollow\">Replacement</a></li>\n</ul>\n</li>\n<li>\n<p><code>SubjectAlternativeNames</code></p>\n<p>FQDNs to include in the Subject Alternative Name of the certificate.</p>\n<ul>\n<li>Required: No</li>\n<li>Type: List of String values</li>\n<li>Update requires: <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\" rel=\"nofollow\">Replacement</a></li>\n</ul>\n</li>\n<li>\n<p><code>Tags</code></p>\n<p>Tags for this certificate</p>\n<ul>\n<li>Required: No</li>\n<li>Type: <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html\" rel=\"nofollow\">Resource Tag</a></li>\n<li>Update requires: <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\" rel=\"nofollow\">No interruption</a></li>\n</ul>\n</li>\n<li>\n<p><code>ValidationMethod</code></p>\n<p>Method to use to validate domain ownership. This should be <code>DNS</code>.</p>\n<ul>\n<li>Required: No</li>\n<li>Default: <code>EMAIL</code></li>\n<li>Type: String</li>\n<li>Update requires: <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\" rel=\"nofollow\">Replacement</a></li>\n</ul>\n</li>\n<li>\n<p><code>Region</code></p>\n<p>The region to create the certificate in.</p>\n<ul>\n<li>Required: No</li>\n<li>Default: The Stack's region</li>\n<li>Type: String</li>\n<li>Update requires: <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\" rel=\"nofollow\">Replacement</a></li>\n</ul>\n</li>\n</ul>\n<h4>Return value</h4>\n<ul>\n<li>\n<p>Ref</p>\n<p>When the <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html\" rel=\"nofollow\"><code>Ref</code></a>\nfunction is used on the logical ID of a Certificate resource the certificate ARN is returned.</p>\n</li>\n</ul>\n<h3>DomainValidationOption</h3>\n<h4>Syntax</h4>\n<pre><span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">String</span>\n<span class=\"nt\">HostedZoneId</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">String</span>\n<span class=\"nt\">Route53RoleArn</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">String</span>\n</pre>\n<h4>Properties</h4>\n<ul>\n<li>\n<p><code>DomainName</code></p>\n<p>Fully qualified domain name of the validation request.</p>\n<ul>\n<li>Required: Yes</li>\n<li>Type: String</li>\n</ul>\n</li>\n<li>\n<p><code>HostedZoneId</code></p>\n<p>The Route53 Hosted Zone to create validation records in.</p>\n<ul>\n<li>Required: Yes</li>\n<li>Type: String</li>\n</ul>\n</li>\n<li>\n<p><code>Route53RoleArn</code></p>\n<p>The arn of an IAM Role to assume when creating DNS validation records. This can be used to create the records for a\nHosted Zone in another AWS account.</p>\n<ul>\n<li>Required: No</li>\n<li>Type: String</li>\n</ul>\n</li>\n</ul>\n<h2>Troposphere</h2>\n<p>If you are using troposphere you can install this resource as an extension using pip:</p>\n<pre><code>$ pip install troposphere_dns_certificate\n</code></pre>\n<p>You can then import the Certificate resource from troposphere_dns_certificate.certificatemanager instead of troposphere.certificatemanager.</p>\n<p>cloudformation.py is an example of using troposphere to create a template with a Certificate resource.</p>\n<p>If you are not using troposphere, you can simply copy the CustomAcmCertificateLambda and CustomAcmCertificateLambdaExecutionRole\nresources from the cloudformation.json or cloudformation.yaml files.</p>\n<h2>Examples</h2>\n<p>The certificate resource looks like:</p>\n<pre><span class=\"nt\">ExampleCertificate</span><span class=\"p\">:</span>\n  <span class=\"nt\">Properties</span><span class=\"p\">:</span>\n    <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">test.example.com</span>\n    <span class=\"nt\">ValidationMethod</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">DNS</span>\n    <span class=\"nt\">DomainValidationOptions</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">test.example.com</span>\n        <span class=\"nt\">HostedZoneId</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Z2KZ5YTUFZNC7H</span>\n    <span class=\"nt\">Tags</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Name</span>\n        <span class=\"nt\">Value</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Example Certificate</span>\n    <span class=\"nt\">ServiceToken</span><span class=\"p\">:</span> <span class=\"kt\">!GetAtt</span> <span class=\"s\">'CustomAcmCertificateLambda.Arn'</span>\n  <span class=\"nt\">Type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Custom::DNSCertificate</span>\n</pre>\n<p>As with AWS::CertificateManager::Certificate providing the logical ID of the resource to the Ref function returns the certificate ARN.</p>\n<p>For example (in yaml): <code>!Ref 'ExampleCertificate'</code></p>\n<h3>SubjectAlternativeNames</h3>\n<p>Additional names can be added to the certificate using the SubjectAlternativeNames property.</p>\n<pre><span class=\"nt\">ExampleCertificate</span><span class=\"p\">:</span>\n  <span class=\"nt\">Properties</span><span class=\"p\">:</span>\n    <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">example.com</span>\n    <span class=\"nt\">SubjectAlternativeNames</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">additional.example.com</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">another.example.com</span>\n    <span class=\"nt\">ValidationMethod</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">DNS</span>\n    <span class=\"nt\">DomainValidationOptions</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">example.com</span>\n        <span class=\"nt\">HostedZoneId</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Z2KZ5YTUFZNC7H</span>\n    <span class=\"nt\">Tags</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Name</span>\n        <span class=\"nt\">Value</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Example Certificate</span>\n    <span class=\"nt\">ServiceToken</span><span class=\"p\">:</span> <span class=\"kt\">!GetAtt</span> <span class=\"s\">'CustomAcmCertificateLambda.Arn'</span>\n<span class=\"nt\">Type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Custom::DNSCertificate</span>\n</pre>\n<h3>Multiple Hosted Zones</h3>\n<p>Names from multiple hosted zones can be used by adding DomainValidationOptions for each of the hosted zones.\nFor example:</p>\n<pre><span class=\"nt\">ExampleCertificate</span><span class=\"p\">:</span>\n  <span class=\"nt\">Properties</span><span class=\"p\">:</span>\n    <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">example.com</span>\n    <span class=\"nt\">SubjectAlternativeNames</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">additional.example.org</span>\n    <span class=\"nt\">ValidationMethod</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">DNS</span>\n    <span class=\"nt\">DomainValidationOptions</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">example.com</span>\n        <span class=\"nt\">HostedZoneId</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Z2KZ5YTUFZNC7H</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">example.org</span>\n        <span class=\"nt\">HostedZoneId</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">ZEJZ9DIN47IQN</span>\n    <span class=\"nt\">Tags</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Name</span>\n        <span class=\"nt\">Value</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Example Certificate</span>\n    <span class=\"nt\">ServiceToken</span><span class=\"p\">:</span> <span class=\"kt\">!GetAtt</span> <span class=\"s\">'CustomAcmCertificateLambda.Arn'</span>\n<span class=\"nt\">Type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Custom::DNSCertificate</span>\n</pre>\n<h3>Wildcards</h3>\n<p>Wildcards can be used normally. A certificate for a name and all subdomains for example:</p>\n<pre><span class=\"nt\">ExampleCertificate</span><span class=\"p\">:</span>\n  <span class=\"nt\">Properties</span><span class=\"p\">:</span>\n    <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">example.com</span>\n    <span class=\"nt\">SubjectAlternativeNames</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"err\">*</span><span class=\"l l-Scalar l-Scalar-Plain\">.example.com</span>\n    <span class=\"nt\">ValidationMethod</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">DNS</span>\n    <span class=\"nt\">DomainValidationOptions</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">example.com</span>\n        <span class=\"nt\">HostedZoneId</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Z2KZ5YTUFZNC7H</span>\n    <span class=\"nt\">Tags</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Name</span>\n        <span class=\"nt\">Value</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Example Certificate</span>\n    <span class=\"nt\">ServiceToken</span><span class=\"p\">:</span> <span class=\"kt\">!GetAtt</span> <span class=\"s\">'CustomAcmCertificateLambda.Arn'</span>\n  <span class=\"nt\">Type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Custom::DNSCertificate</span>\n</pre>\n<h3>Specifying a region</h3>\n<p>This example uses the Region property to create the certificate in us-east-1, for use with cloudfront:</p>\n<pre><span class=\"nt\">ExampleCertificate</span><span class=\"p\">:</span>\n  <span class=\"nt\">Properties</span><span class=\"p\">:</span>\n    <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">example.com</span>\n    <span class=\"nt\">ValidationMethod</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">DNS</span>\n    <span class=\"nt\">DomainValidationOptions</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">example.com</span>\n        <span class=\"nt\">HostedZoneId</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Z2KZ5YTUFZNC7H</span>\n    <span class=\"nt\">Region</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">us-east-1</span>\n    <span class=\"nt\">Tags</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Name</span>\n        <span class=\"nt\">Value</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Example Certificate</span>\n    <span class=\"nt\">ServiceToken</span><span class=\"p\">:</span> <span class=\"kt\">!GetAtt</span> <span class=\"s\">'CustomAcmCertificateLambda.Arn'</span>\n  <span class=\"nt\">Type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Custom::DNSCertificate</span>\n</pre>\n<h3>Assuming a role for Route 53 record creation</h3>\n<p>In some cases the account owning the hosted zone might be a different one than the one you are generating the certificate in.\nTo support this you can specify the domain validation option property <code>Route53RoleArn</code> with a role-ARN that should be\nassumed before creating the records required for certificate validation.</p>\n<p>If a top-level Route53RoleArn property is specified it will be assumed when validating domains that don't contain a\nRoute53RoleArn domain validation option property.</p>\n<pre><span class=\"nt\">ExampleCertificate</span><span class=\"p\">:</span>\n  <span class=\"nt\">Properties</span><span class=\"p\">:</span>\n    <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">test.example.com</span>\n    <span class=\"nt\">ValidationMethod</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">DNS</span>\n    <span class=\"nt\">DomainValidationOptions</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">DomainName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">test.example.com</span>\n        <span class=\"nt\">HostedZoneId</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Z2KZ5YTUFZNC7H</span>\n        <span class=\"nt\">Route53RoleArn</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">arn:aws:iam::TRUSTING-ACCOUNT-ID:role/ACMRecordCreationRole</span>\n    <span class=\"nt\">Tags</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Name</span>\n        <span class=\"nt\">Value</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Example Certificate</span>\n    <span class=\"nt\">ServiceToken</span><span class=\"p\">:</span> <span class=\"kt\">!GetAtt</span> <span class=\"s\">'CustomAcmCertificateLambda.Arn'</span>\n  <span class=\"nt\">Type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Custom::DNSCertificate</span>\n</pre>\n<p>Additionally you have to allow the assumption of this role by adding this statement to the CustomAcmCertificateLambdaExecutionRole:</p>\n<pre><span class=\"p p-Indicator\">-</span> <span class=\"nt\">Action</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">sts:AssumeRole</span>\n  <span class=\"nt\">Resource</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">arn:aws:iam::TRUSTING-ACCOUNT-ID:role/ACMRecordCreationRole</span>\n  <span class=\"nt\">Effect</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Allow</span>\n</pre>\n<p>If you are using the troposphere extension, this statement is added automatically. The full CustomAcmCertificateLambdaExecutionRole\nfor this example would look like:</p>\n<pre><span class=\"nt\">CustomAcmCertificateLambdaExecutionRole</span><span class=\"p\">:</span>\n  <span class=\"nt\">Properties</span><span class=\"p\">:</span>\n    <span class=\"nt\">AssumeRolePolicyDocument</span><span class=\"p\">:</span>\n      <span class=\"nt\">Statement</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Action</span><span class=\"p\">:</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">sts:AssumeRole</span>\n          <span class=\"nt\">Effect</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Allow</span>\n          <span class=\"nt\">Principal</span><span class=\"p\">:</span>\n            <span class=\"nt\">Service</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">lambda.amazonaws.com</span>\n      <span class=\"nt\">Version</span><span class=\"p\">:</span> <span class=\"s\">'2012-10-17'</span>\n    <span class=\"nt\">ManagedPolicyArns</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">arn:aws:iam::aws:policy/service-role/AWSLambdaRole</span>\n    <span class=\"nt\">Policies</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">PolicyDocument</span><span class=\"p\">:</span>\n          <span class=\"nt\">Statement</span><span class=\"p\">:</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Action</span><span class=\"p\">:</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">acm:AddTagsToCertificate</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">acm:DeleteCertificate</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">acm:DescribeCertificate</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">acm:RemoveTagsFromCertificate</span>\n              <span class=\"nt\">Effect</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Allow</span>\n              <span class=\"nt\">Resource</span><span class=\"p\">:</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"kt\">!Sub</span> <span class=\"s\">'arn:aws:acm:*:${AWS::AccountId}:certificate/*'</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Action</span><span class=\"p\">:</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">acm:RequestCertificate</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">acm:ListTagsForCertificate</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">acm:ListCertificates</span>\n              <span class=\"nt\">Effect</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Allow</span>\n              <span class=\"nt\">Resource</span><span class=\"p\">:</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"s\">'*'</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Action</span><span class=\"p\">:</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">route53:ChangeResourceRecordSets</span>\n              <span class=\"nt\">Effect</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Allow</span>\n              <span class=\"nt\">Resource</span><span class=\"p\">:</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">arn:aws:route53:::hostedzone/*</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Action</span><span class=\"p\">:</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">sts:AssumeRole</span>\n              <span class=\"nt\">Effect</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Allow</span>\n              <span class=\"nt\">Resource</span><span class=\"p\">:</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">arn:aws:iam::TRUSTING-ACCOUNT-ID:role/ACMRecordCreationRole</span>\n          <span class=\"nt\">Version</span><span class=\"p\">:</span> <span class=\"s\">'2012-10-17'</span>\n        <span class=\"nt\">PolicyName</span><span class=\"p\">:</span> <span class=\"kt\">!Sub</span> <span class=\"s\">'${AWS::StackName}CustomAcmCertificateLambdaExecutionPolicy'</span>\n</pre>\n<p>The IAM role in the account with the hosted zone would look something like:</p>\n<pre><span class=\"nt\">ACMRecordCreationRole</span><span class=\"p\">:</span>\n  <span class=\"nt\">Type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">AWS::IAM::Role</span>\n  <span class=\"nt\">Properties</span><span class=\"p\">:</span>\n    <span class=\"nt\">AssumeRolePolicyDocument</span><span class=\"p\">:</span>\n      <span class=\"nt\">Statement</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Action</span><span class=\"p\">:</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">sts:AssumeRole</span>\n          <span class=\"nt\">Principal</span><span class=\"p\">:</span>\n            <span class=\"nt\">AWS</span><span class=\"p\">:</span>\n              <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">arn:aws:iam::TRUSTED-ACCOUNT-ID:root</span>\n          <span class=\"nt\">Effect</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Allow</span>\n      <span class=\"nt\">Version</span><span class=\"p\">:</span> <span class=\"s\">'2012-10-17'</span>\n    <span class=\"nt\">Policies</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">PolicyName</span><span class=\"p\">:</span> <span class=\"s\">'ACMRecordCreation'</span>\n        <span class=\"nt\">PolicyDocument</span><span class=\"p\">:</span>\n          <span class=\"nt\">Version</span><span class=\"p\">:</span> <span class=\"s\">'2012-10-17'</span>\n          <span class=\"nt\">Statement</span><span class=\"p\">:</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Action</span><span class=\"p\">:</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">route53:ChangeResourceRecordSets</span>\n              <span class=\"nt\">Resource</span><span class=\"p\">:</span>\n                <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">arn:aws:route53:::hostedzone/Z2KZ5YTUFZNC7H</span>\n              <span class=\"nt\">Effect</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Allow</span>\n    <span class=\"nt\">RoleName</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">ACMRecordCreationRole</span>\n</pre>\n\n          </div>"}, "last_serial": 6157949, "releases": {"1.2.1": [{"comment_text": "", "digests": {"md5": "53b9e13b9f2431797375bd06d78a1d6b", "sha256": "1b05796c46595682cd4bc43d84e60c1c88706752fd93f4ad8024e72e976e6383"}, "downloads": -1, "filename": "troposphere_dns_certificate-1.2.1-py3-none-any.whl", "has_sig": true, "md5_digest": "53b9e13b9f2431797375bd06d78a1d6b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7688, "upload_time": "2018-11-07T23:54:24", "upload_time_iso_8601": "2018-11-07T23:54:24.333756Z", "url": "https://files.pythonhosted.org/packages/e3/4b/2cac22c1ba0780ec1931687f4a4a505bdc71d9832d5217eebfe9a32fe4f7/troposphere_dns_certificate-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f27d6b2d89eb699e0f721dcdba26a91b", "sha256": "dff4ff94810fd2431389d5d8b983d196a2c6e4291c2d3d919ad9aa58ec976110"}, "downloads": -1, "filename": "troposphere-dns-certificate-1.2.1.tar.gz", "has_sig": true, "md5_digest": "f27d6b2d89eb699e0f721dcdba26a91b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5956, "upload_time": "2018-11-07T23:54:26", "upload_time_iso_8601": "2018-11-07T23:54:26.240957Z", "url": "https://files.pythonhosted.org/packages/87/3d/75afdd017985bb17a005e324545260ee0d29535954f6b46da32c73d90eb5/troposphere-dns-certificate-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "98fb624472a9cd9231767b2a1584e2ac", "sha256": "05943da1290b391a1fb5c5374f4b094065785c110444546f1dbf8f7c8a617db0"}, "downloads": -1, "filename": "troposphere_dns_certificate-1.3.0-py3-none-any.whl", "has_sig": true, "md5_digest": "98fb624472a9cd9231767b2a1584e2ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7763, "upload_time": "2018-11-10T12:12:08", "upload_time_iso_8601": "2018-11-10T12:12:08.230679Z", "url": "https://files.pythonhosted.org/packages/90/ce/33fa2974c94422e1c04bf395d90ea3765f9b024393432d55277e9f961435/troposphere_dns_certificate-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08a406727cba8fdab48f5e7341bdc689", "sha256": "68c024232ca571881527e88689c4464c646f67a83c7d6b1fce24703b1d6e28a5"}, "downloads": -1, "filename": "troposphere-dns-certificate-1.3.0.tar.gz", "has_sig": true, "md5_digest": "08a406727cba8fdab48f5e7341bdc689", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6046, "upload_time": "2018-11-10T12:12:10", "upload_time_iso_8601": "2018-11-10T12:12:10.004875Z", "url": "https://files.pythonhosted.org/packages/ec/50/14a361613885a71298923f2081e524c0c8f9cfd3dabe35de48457ccdda2a/troposphere-dns-certificate-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "aacf0dabdfc2a3d4335af0c25ca9ac6f", "sha256": "5626e2d46d6aeda42ca0ecc5f56f12aeb362c1211e603c8a987cb4f1e935e199"}, "downloads": -1, "filename": "troposphere_dns_certificate-1.4.0-py3-none-any.whl", "has_sig": true, "md5_digest": "aacf0dabdfc2a3d4335af0c25ca9ac6f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8300, "upload_time": "2018-11-30T20:13:31", "upload_time_iso_8601": "2018-11-30T20:13:31.563821Z", "url": "https://files.pythonhosted.org/packages/50/0e/936cf1a8da19c1c962a4be688963e923b74ce9e33e99ce4b0f669e2c7a9c/troposphere_dns_certificate-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd1b4b1161ec2f899af4d9e8df0aef32", "sha256": "18b122da89d474c5b8f09eb72887562b413722836f293466a5298a2281f8ebb1"}, "downloads": -1, "filename": "troposphere-dns-certificate-1.4.0.tar.gz", "has_sig": true, "md5_digest": "dd1b4b1161ec2f899af4d9e8df0aef32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7155, "upload_time": "2018-11-30T20:13:32", "upload_time_iso_8601": "2018-11-30T20:13:32.747613Z", "url": "https://files.pythonhosted.org/packages/4f/ee/d0b2ba0f2551246d72df36137b775316c63fb16b63a29bd94c95f48377e3/troposphere-dns-certificate-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "cd9ec050b70241abff1e738e0fdf8352", "sha256": "97286236a7c8fe2f4b741341c818427204434e42a5eb4246beaf077d56ee74df"}, "downloads": -1, "filename": "troposphere_dns_certificate-1.5.0-py3-none-any.whl", "has_sig": true, "md5_digest": "cd9ec050b70241abff1e738e0fdf8352", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9807, "upload_time": "2019-01-26T21:05:24", "upload_time_iso_8601": "2019-01-26T21:05:24.505965Z", "url": "https://files.pythonhosted.org/packages/b1/7f/c7b8b4eb77cb7b69a64e0aa432032a89bb7b5f6c11fd67bb15f09ef4ac3b/troposphere_dns_certificate-1.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "129e690fe92a4f557321dd136f9645fa", "sha256": "00676aaae8d0883dbe217091c63bfd83d64e0e2d1b957f8fa57b285e4903ad4f"}, "downloads": -1, "filename": "troposphere-dns-certificate-1.5.0.tar.gz", "has_sig": true, "md5_digest": "129e690fe92a4f557321dd136f9645fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9892, "upload_time": "2019-01-26T21:05:28", "upload_time_iso_8601": "2019-01-26T21:05:28.290590Z", "url": "https://files.pythonhosted.org/packages/b8/ab/fdb690bb6c7804cabdb108c86573a5a065428d378ff54f86a7d54701bbfc/troposphere-dns-certificate-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "eb49e7aa7da50a6234e32e106e4cce0b", "sha256": "7f00b793e4bb23a863bc04a19810de1489f5d3350afcc33dde0fda806d55fe5d"}, "downloads": -1, "filename": "troposphere_dns_certificate-1.5.1-py3-none-any.whl", "has_sig": true, "md5_digest": "eb49e7aa7da50a6234e32e106e4cce0b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9868, "upload_time": "2019-01-31T20:08:30", "upload_time_iso_8601": "2019-01-31T20:08:30.392613Z", "url": "https://files.pythonhosted.org/packages/c3/12/4d0c6284c3470ec52eddd4ee4df24d8483b6b38331b52d8d985a22b1a11d/troposphere_dns_certificate-1.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d9e87d9af19431a1551b430ca9e78a3", "sha256": "57cf69752f3ecae6464b8136863ec1bc621f49105fc9d1eee372f40f7e282024"}, "downloads": -1, "filename": "troposphere-dns-certificate-1.5.1.tar.gz", "has_sig": true, "md5_digest": "8d9e87d9af19431a1551b430ca9e78a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9997, "upload_time": "2019-01-31T20:08:32", "upload_time_iso_8601": "2019-01-31T20:08:32.025778Z", "url": "https://files.pythonhosted.org/packages/6a/8c/8b0a61c6f4f122043bf01aea5c71190cdc774f88bc350ca4f75d56990f07/troposphere-dns-certificate-1.5.1.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "6050b724dec561992ebb158fc3e93401", "sha256": "8ad2797a6b3774d1a6a5f432d0e07c926725e71aca3f5502fae7d83ef01e7b28"}, "downloads": -1, "filename": "troposphere_dns_certificate-1.6.0-py3-none-any.whl", "has_sig": true, "md5_digest": "6050b724dec561992ebb158fc3e93401", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10278, "upload_time": "2019-02-01T22:43:35", "upload_time_iso_8601": "2019-02-01T22:43:35.611295Z", "url": "https://files.pythonhosted.org/packages/e2/4f/750800d39f631bfd681e1968da8c360844eb368a0b7d11182c0ce27d8d0b/troposphere_dns_certificate-1.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d97f1c235d436fda3fee9310590209c9", "sha256": "69e695b3162be61322b10da3411ad38239b85013ee61ce54d4fbc3a64770c5a6"}, "downloads": -1, "filename": "troposphere-dns-certificate-1.6.0.tar.gz", "has_sig": true, "md5_digest": "d97f1c235d436fda3fee9310590209c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10422, "upload_time": "2019-02-01T22:43:37", "upload_time_iso_8601": "2019-02-01T22:43:37.301263Z", "url": "https://files.pythonhosted.org/packages/aa/21/3d06a830a52733d16454786c321ff7da1483ba80231bc52b6e8a54db597b/troposphere-dns-certificate-1.6.0.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "6c2f0a65046eef03a65aefae1b24282b", "sha256": "7d17fa0f7f7f57b58aa6c533444364939a10fa980d3c757bf0f8c3d4506428ee"}, "downloads": -1, "filename": "troposphere_dns_certificate-1.7.0-py3-none-any.whl", "has_sig": true, "md5_digest": "6c2f0a65046eef03a65aefae1b24282b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10951, "upload_time": "2019-02-16T14:16:36", "upload_time_iso_8601": "2019-02-16T14:16:36.950624Z", "url": "https://files.pythonhosted.org/packages/20/3e/f2770c368a023a72c49962b39cc295d369e71cac6e575cc453cb7e16258c/troposphere_dns_certificate-1.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70cb3e9d8e0e56a5bda488934b03fb8d", "sha256": "afc18511928ce04954b650dbab40815f92dc12d63563d611e70c2fb69526092f"}, "downloads": -1, "filename": "troposphere-dns-certificate-1.7.0.tar.gz", "has_sig": true, "md5_digest": "70cb3e9d8e0e56a5bda488934b03fb8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12074, "upload_time": "2019-02-16T14:16:38", "upload_time_iso_8601": "2019-02-16T14:16:38.640671Z", "url": "https://files.pythonhosted.org/packages/68/cf/e145d6d58f2f607b230a98fa2efc382172ac5ff59ee622018d6d3b4cbec2/troposphere-dns-certificate-1.7.0.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "b16866dd501179f4d4b4525de21cd9e1", "sha256": "be6912eacb568a0c56eeac694ab8d259ae764126ecc6b180e0bc379b66002968"}, "downloads": -1, "filename": "troposphere_dns_certificate-1.7.1-py3-none-any.whl", "has_sig": true, "md5_digest": "b16866dd501179f4d4b4525de21cd9e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10966, "upload_time": "2019-08-06T18:32:12", "upload_time_iso_8601": "2019-08-06T18:32:12.451813Z", "url": "https://files.pythonhosted.org/packages/e3/49/30e78369ec89d1e85b9baf98543ed6d94e3000eda63b2f8ba8bb343bd64d/troposphere_dns_certificate-1.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7e7eb0ad8699c8d67bdd06c7ba26b2d", "sha256": "6e6ffeffa7f5bcc7480826adf3e926b2abd791083ff29a30992779fa251b2428"}, "downloads": -1, "filename": "troposphere-dns-certificate-1.7.1.tar.gz", "has_sig": true, "md5_digest": "d7e7eb0ad8699c8d67bdd06c7ba26b2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12054, "upload_time": "2019-08-06T18:32:14", "upload_time_iso_8601": "2019-08-06T18:32:14.469922Z", "url": "https://files.pythonhosted.org/packages/35/6b/076d73f2d569e9540e5938faf81af6c5c0557be10f64b7afb1850e9b0ee6/troposphere-dns-certificate-1.7.1.tar.gz", "yanked": false}], "1.7.2": [{"comment_text": "", "digests": {"md5": "51223f22140738fc8e903bc381d577a7", "sha256": "ff070155d42629ea61c6ee6bdc8fd394fd6de77695784296f03b8206799da55c"}, "downloads": -1, "filename": "troposphere_dns_certificate-1.7.2-py3-none-any.whl", "has_sig": true, "md5_digest": "51223f22140738fc8e903bc381d577a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10985, "upload_time": "2019-11-18T19:54:51", "upload_time_iso_8601": "2019-11-18T19:54:51.576133Z", "url": "https://files.pythonhosted.org/packages/f1/73/ee589b2ef5db7efedb2fa65a6fbbc26bd9d57dc018b0000992ded254a6ab/troposphere_dns_certificate-1.7.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb53fc91acbefbc20e03a10fd0504a58", "sha256": "fce48ffe09b6abeb7712adebf54b4a4096762df5e9fc2a8aa349617614292c74"}, "downloads": -1, "filename": "troposphere-dns-certificate-1.7.2.tar.gz", "has_sig": true, "md5_digest": "fb53fc91acbefbc20e03a10fd0504a58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12479, "upload_time": "2019-11-18T19:54:53", "upload_time_iso_8601": "2019-11-18T19:54:53.290324Z", "url": "https://files.pythonhosted.org/packages/a8/fd/aea761e9fe1d10ec37152a184543ec8a8a463e50b9080bd7164870b390f9/troposphere-dns-certificate-1.7.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "51223f22140738fc8e903bc381d577a7", "sha256": "ff070155d42629ea61c6ee6bdc8fd394fd6de77695784296f03b8206799da55c"}, "downloads": -1, "filename": "troposphere_dns_certificate-1.7.2-py3-none-any.whl", "has_sig": true, "md5_digest": "51223f22140738fc8e903bc381d577a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10985, "upload_time": "2019-11-18T19:54:51", "upload_time_iso_8601": "2019-11-18T19:54:51.576133Z", "url": "https://files.pythonhosted.org/packages/f1/73/ee589b2ef5db7efedb2fa65a6fbbc26bd9d57dc018b0000992ded254a6ab/troposphere_dns_certificate-1.7.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb53fc91acbefbc20e03a10fd0504a58", "sha256": "fce48ffe09b6abeb7712adebf54b4a4096762df5e9fc2a8aa349617614292c74"}, "downloads": -1, "filename": "troposphere-dns-certificate-1.7.2.tar.gz", "has_sig": true, "md5_digest": "fb53fc91acbefbc20e03a10fd0504a58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12479, "upload_time": "2019-11-18T19:54:53", "upload_time_iso_8601": "2019-11-18T19:54:53.290324Z", "url": "https://files.pythonhosted.org/packages/a8/fd/aea761e9fe1d10ec37152a184543ec8a8a463e50b9080bd7164870b390f9/troposphere-dns-certificate-1.7.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:46:43 2020"}