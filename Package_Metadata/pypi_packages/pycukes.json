{"info": {"author": "Hugo Lopes Tavares", "author_email": "hltbra@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Software Development :: Documentation", "Topic :: Software Development :: Testing"], "description": "PyCukes\n=======\n\nPyCukes is a Cucumber-like BDD tool built on top of Pyhistorian.\nPyCukes was created to fill the gap pyhistorian left, so with it is possible to talk to your stakeholders first with text files, instead of simple understendable python files like Pyhistorian.\n\n\nUsage\n=====\n\nFirst, make sure you have installed story_runner, pyhistorian and pycukes.\nBy default, if you just call ``pycukes`` from your command line into some dir, it will look for a ``stories`` dir (expecting your stories files are there) and then look for a ``step_definitions`` dir (expecting your step definitions are there).\nEach story file by convention ends with .story, like ``calculator.story`` and each step definition should end with steps.py, like ``calculator_steps.py``.\n\nSo, lets say you have the directory tree::\n\n |-- calculator\n    `-- stories\n        |-- calculator.story\n        `-- step_definitions\n            `-- calculator_steps.py\n\n\nTo run your stories, you can simple call::\n\n    $ pycukes\n\nOr if you can specify exactly what stories run::\n    \n    $ pycukes stories/calculator.story\n\n\nParameters\n==========\n::\n\n    -s or --stories-dir  --  specify your stories directory\n    -t or --steps-dir  --  specify your step definitions directory\n    -n or --no-colors  --  tells pycukes not to show colored output\n    -c or --colored (default) -- tells pycukes to show colored output\n    -l or --language (en-us by default) -- specify your story language [en-us and pt-br are supported]\n\n\nReal Example\n============\n\nDirectory tree::\n\n    hugo@hugo-laptop:~/app$ tree\n    .\n    `-- stories\n        |-- bowling_game.story\n        `-- step_definitions\n            `-- bowling_game_steps.py\n\n\nContent of bowling_game.story file::\n\n    hugo@hugo-laptop:~/app$ cat stories/bowling_game.story \n    Story: Bowling Game\n      As a bowling player\n      I want to play bowling online\n      So that I can play with everyone in the world\n      \n        Scenario 1: Gutter Game\n          Given I am playing a bowling game\n          When I hit no balls\n          Then I have 0 points\n\nContent of bowling_game_steps.py::\n\n    hugo@hugo-laptop:~/app$ cat stories/step_definitions/bowling_game_steps.py\n    from pycukes import *\n\n    class BowlingGame(object):\n        score = 1\n        def hit(self, balls):\n            pass\n\n\n    @Given('I am playing a bowling game')\n    def start_game(context):\n        context._bowling_game = BowlingGame()\n\n    @When('I hit no balls')\n    def hit_no_balls(context):\n        context._bowling_game.hit(0)\n\n    @Then('I have 0 points')\n    def i_have_zero_points(context):\n        assert context._bowling_game.score == 0 \n\nRunning::\n\n    hugo@hugo-laptop:~/app$ pycukes stories/bowling_game.story \n    Story: Bowling Game\n      As a bowling player\n      I want to play bowling online\n      So that I can play with everyone in the world\n\n      Scenario 1: Gutter Game\n        Given I am playing a bowling game   ... OK\n        When I hit no balls   ... OK\n        Then I have 0 points   ... FAIL\n\n      Failures:\n        File \"stories/step_definitions/bowling_game_steps.py\", line 19, in i_have_zero_points\n          assert context._bowling_game.score == 0\n        AssertionError\n\n\n      Ran 1 scenario with 1 failure, 0 errors and 0 pending steps", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/hugobr/pycukes", "keywords": "bdd behaviour behavior pyhistorian story", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "pycukes", "package_url": "https://pypi.org/project/pycukes/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pycukes/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/hugobr/pycukes"}, "release_url": "https://pypi.org/project/pycukes/0.2/", "requires_dist": null, "requires_python": null, "summary": "A Cucumber-like BDD framework built on top of Pyhistorian", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pycukes\">\n<h2>PyCukes</h2>\n<p>PyCukes is a Cucumber-like BDD tool built on top of Pyhistorian.\nPyCukes was created to fill the gap pyhistorian left, so with it is possible to talk to your stakeholders first with text files, instead of simple understendable python files like Pyhistorian.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>First, make sure you have installed story_runner, pyhistorian and pycukes.\nBy default, if you just call <tt>pycukes</tt> from your command line into some dir, it will look for a <tt>stories</tt> dir (expecting your stories files are there) and then look for a <tt>step_definitions</tt> dir (expecting your step definitions are there).\nEach story file by convention ends with .story, like <tt>calculator.story</tt> and each step definition should end with steps.py, like <tt>calculator_steps.py</tt>.</p>\n<p>So, lets say you have the directory tree:</p>\n<pre>|-- calculator\n   `-- stories\n       |-- calculator.story\n       `-- step_definitions\n           `-- calculator_steps.py\n</pre>\n<p>To run your stories, you can simple call:</p>\n<pre>$ pycukes\n</pre>\n<p>Or if you can specify exactly what stories run:</p>\n<pre>$ pycukes stories/calculator.story\n</pre>\n</div>\n<div id=\"parameters\">\n<h2>Parameters</h2>\n<pre>-s or --stories-dir  --  specify your stories directory\n-t or --steps-dir  --  specify your step definitions directory\n-n or --no-colors  --  tells pycukes not to show colored output\n-c or --colored (default) -- tells pycukes to show colored output\n-l or --language (en-us by default) -- specify your story language [en-us and pt-br are supported]\n</pre>\n</div>\n<div id=\"real-example\">\n<h2>Real Example</h2>\n<p>Directory tree:</p>\n<pre>hugo@hugo-laptop:~/app$ tree\n.\n`-- stories\n    |-- bowling_game.story\n    `-- step_definitions\n        `-- bowling_game_steps.py\n</pre>\n<p>Content of bowling_game.story file:</p>\n<pre>hugo@hugo-laptop:~/app$ cat stories/bowling_game.story\nStory: Bowling Game\n  As a bowling player\n  I want to play bowling online\n  So that I can play with everyone in the world\n\n    Scenario 1: Gutter Game\n      Given I am playing a bowling game\n      When I hit no balls\n      Then I have 0 points\n</pre>\n<p>Content of bowling_game_steps.py:</p>\n<pre>hugo@hugo-laptop:~/app$ cat stories/step_definitions/bowling_game_steps.py\nfrom pycukes import *\n\nclass BowlingGame(object):\n    score = 1\n    def hit(self, balls):\n        pass\n\n\n@Given('I am playing a bowling game')\ndef start_game(context):\n    context._bowling_game = BowlingGame()\n\n@When('I hit no balls')\ndef hit_no_balls(context):\n    context._bowling_game.hit(0)\n\n@Then('I have 0 points')\ndef i_have_zero_points(context):\n    assert context._bowling_game.score == 0\n</pre>\n<p>Running:</p>\n<pre>hugo@hugo-laptop:~/app$ pycukes stories/bowling_game.story\nStory: Bowling Game\n  As a bowling player\n  I want to play bowling online\n  So that I can play with everyone in the world\n\n  Scenario 1: Gutter Game\n    Given I am playing a bowling game   ... OK\n    When I hit no balls   ... OK\n    Then I have 0 points   ... FAIL\n\n  Failures:\n    File \"stories/step_definitions/bowling_game_steps.py\", line 19, in i_have_zero_points\n      assert context._bowling_game.score == 0\n    AssertionError\n\n\n  Ran 1 scenario with 1 failure, 0 errors and 0 pending steps\n</pre>\n</div>\n\n          </div>"}, "last_serial": 797094, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d0e53b9f447fde5903ed8be1e0d23fa7", "sha256": "6e45836c250df32873c6c3a545e3abcadd633f2567a56ccd9a862f1ea41af258"}, "downloads": -1, "filename": "pycukes-0.1-py2.5.egg", "has_sig": false, "md5_digest": "d0e53b9f447fde5903ed8be1e0d23fa7", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 60593, "upload_time": "2009-09-25T22:52:25", "upload_time_iso_8601": "2009-09-25T22:52:25.979152Z", "url": "https://files.pythonhosted.org/packages/67/45/c6d54b44edbd0404b68b04b351103cbec4fa4e2adfb1a807b75796444094/pycukes-0.1-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fcaf6dccd519079360fd2b5b5b81ce0", "sha256": "d1b43b74d4b256e25b41d3add5c27f91f675a4096b93652a1ebf6ef5f95b8e9f"}, "downloads": -1, "filename": "pycukes-0.1.tar.gz", "has_sig": false, "md5_digest": "1fcaf6dccd519079360fd2b5b5b81ce0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7927, "upload_time": "2009-09-25T22:52:24", "upload_time_iso_8601": "2009-09-25T22:52:24.671550Z", "url": "https://files.pythonhosted.org/packages/a5/ec/19d87407ccddf94a1b70c9971313a4015f0d6f310178c75728ff988fa95e/pycukes-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "77958c7b5870ddcd06a7ea4884cd8332", "sha256": "49b0277f413581b12ea8ddc22294a646db594e191eb1e4f611a4f8389161db6a"}, "downloads": -1, "filename": "pycukes-0.1.1-py2.5.egg", "has_sig": false, "md5_digest": "77958c7b5870ddcd06a7ea4884cd8332", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 34096, "upload_time": "2009-10-06T02:59:55", "upload_time_iso_8601": "2009-10-06T02:59:55.120796Z", "url": "https://files.pythonhosted.org/packages/c1/19/edf83c64adbf6d0b6109bf5d4f785d8bc396fad07f2562af22e9a575b6cd/pycukes-0.1.1-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "48d737171d541a5f4fb3da8c47f42b47", "sha256": "5888bb6664f1a532698f67e45f9f00c985dcacb4ba53e5dbf491049b81e21d9c"}, "downloads": -1, "filename": "pycukes-0.1.1.tar.gz", "has_sig": false, "md5_digest": "48d737171d541a5f4fb3da8c47f42b47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9082, "upload_time": "2009-10-06T02:59:53", "upload_time_iso_8601": "2009-10-06T02:59:53.922465Z", "url": "https://files.pythonhosted.org/packages/e8/ae/82736106da575f4c64621c6f543133a723abd8dbe16324b5b0c8142db7ab/pycukes-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "01a2b2eba2e3a91ec34a7e25b080ef6c", "sha256": "d9dc54866311cfe44cb7b3bc5359416f1e257376322454d257ba70524a67f163"}, "downloads": -1, "filename": "pycukes-0.1.2-py2.5.egg", "has_sig": false, "md5_digest": "01a2b2eba2e3a91ec34a7e25b080ef6c", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 45970, "upload_time": "2009-10-27T21:46:45", "upload_time_iso_8601": "2009-10-27T21:46:45.856895Z", "url": "https://files.pythonhosted.org/packages/a4/4d/5c2971dd9d6bfb93eca9391396d627fa86ca148db1da088778d3811cf0b2/pycukes-0.1.2-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c604757615c89cccaaf697604d0aeeb4", "sha256": "0c31da0ed818f30831383905c43898fb5b3de30d98828188f24bd397f362b4d8"}, "downloads": -1, "filename": "pycukes-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c604757615c89cccaaf697604d0aeeb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11312, "upload_time": "2009-10-27T21:46:44", "upload_time_iso_8601": "2009-10-27T21:46:44.101633Z", "url": "https://files.pythonhosted.org/packages/e3/52/fee7d93dbc012ba5e36f65a9bf6b21a950edea1ac202a8bf06b19dd4466b/pycukes-0.1.2.tar.gz", "yanked": false}], "0.1.3": [], "0.2": [{"comment_text": "", "digests": {"md5": "c0705cbccf41adb62fe3b1982d1978aa", "sha256": "8794c599ebb28843c06784c3ebf991b2df6d5dafd10e67b78abf802ff515ce93"}, "downloads": -1, "filename": "pycukes-0.2.tar.gz", "has_sig": false, "md5_digest": "c0705cbccf41adb62fe3b1982d1978aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10530, "upload_time": "2010-05-05T23:55:06", "upload_time_iso_8601": "2010-05-05T23:55:06.418766Z", "url": "https://files.pythonhosted.org/packages/89/13/65de3c684e5c73bdcf484a0dae49752bb22b2e21d6aba3a3a9980bf75008/pycukes-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c0705cbccf41adb62fe3b1982d1978aa", "sha256": "8794c599ebb28843c06784c3ebf991b2df6d5dafd10e67b78abf802ff515ce93"}, "downloads": -1, "filename": "pycukes-0.2.tar.gz", "has_sig": false, "md5_digest": "c0705cbccf41adb62fe3b1982d1978aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10530, "upload_time": "2010-05-05T23:55:06", "upload_time_iso_8601": "2010-05-05T23:55:06.418766Z", "url": "https://files.pythonhosted.org/packages/89/13/65de3c684e5c73bdcf484a0dae49752bb22b2e21d6aba3a3a9980bf75008/pycukes-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:34 2020"}