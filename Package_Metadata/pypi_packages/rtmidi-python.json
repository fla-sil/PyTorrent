{"info": {"author": "Guido Lorenz", "author_email": "code@superquadratic.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Cython", "Topic :: Multimedia :: Sound/Audio :: MIDI"], "description": "rtmidi-python\n=============\n\nPython wrapper for `RtMidi`_, the lightweight, cross-platform MIDI I/O\nlibrary. For Linux, Mac OS X and Windows.\n\nSetup\n-----\n\nThe wrapper is written in `Cython`_, but the generated C++ code is\nincluded, so you can install the module as usual::\n\n    python setup.py install\n\nIf you want to build from the Cython source, make sure that you have a\nrecent version of Cython (>= 0.17), and run::\n\n    python setup.py install --from-cython\n\nUsage Examples\n--------------\n\n*rtmidi-python* uses the same API as `RtMidi`_, only reformatted to comply\nwith PEP-8, and with small changes to make it a little more pythonic.\n\nPrint all output ports\n~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    import rtmidi_python as rtmidi\n\n    midi_out = rtmidi.MidiOut()\n    for port_name in midi_out.ports:\n        print port_name\n\nSend messages\n~~~~~~~~~~~~~\n\n::\n\n    import rtmidi_python as rtmidi\n\n    midi_out = rtmidi.MidiOut()\n    midi_out.open_port(0)\n\n    midi_out.send_message([0x90, 48, 100]) # Note on\n    midi_out.send_message([0x80, 48, 100]) # Note off\n\nGet incoming messages by polling\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    import rtmidi_python as rtmidi\n\n    midi_in = rtmidi.MidiIn()\n    midi_in.open_port(0)\n\n    while True:\n        message, delta_time = midi_in.get_message()\n        if message:\n            print message, delta_time\n\nNote that the signature of ``get_message()`` differs from the original\n`RtMidi`_ API: It returns a tuple instead of using a return parameter.\n\nGet incoming messages using a callback\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    import rtmidi_python as rtmidi\n\n    def callback(message, time_stamp):\n        print message, time_stamp\n\n    midi_in = rtmidi.MidiIn()\n    midi_in.callback = callback\n    midi_in.open_port(0)\n\n    # do something else here (but don't quit)\n\nNote that the signature of the callback differs from the original `RtMidi`_\nAPI: ``message`` is now the first parameter, like in the tuple returned by\n``get_message()``.\n\nLicense\n-------\n\n*rtmidi-python* is licensed under the MIT License, see LICENSE.\n\nIt uses `RtMidi`_, licensed under a modified MIT License, see\nRtMidi/RtMidi.h.\n\n.. _RtMidi: http://www.music.mcgill.ca/~gary/rtmidi/\n.. _Cython: http://www.cython.org", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/superquadratic/rtmidi-python", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "rtmidi-python", "package_url": "https://pypi.org/project/rtmidi-python/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rtmidi-python/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/superquadratic/rtmidi-python"}, "release_url": "https://pypi.org/project/rtmidi-python/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Python wrapper for RtMidi", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python wrapper for <a href=\"http://www.music.mcgill.ca/~gary/rtmidi/\" rel=\"nofollow\">RtMidi</a>, the lightweight, cross-platform MIDI I/O\nlibrary. For Linux, Mac OS X and Windows.</p>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>The wrapper is written in <a href=\"http://www.cython.org\" rel=\"nofollow\">Cython</a>, but the generated C++ code is\nincluded, so you can install the module as usual:</p>\n<pre>python setup.py install\n</pre>\n<p>If you want to build from the Cython source, make sure that you have a\nrecent version of Cython (&gt;= 0.17), and run:</p>\n<pre>python setup.py install --from-cython\n</pre>\n</div>\n<div id=\"usage-examples\">\n<h2>Usage Examples</h2>\n<p><em>rtmidi-python</em> uses the same API as <a href=\"http://www.music.mcgill.ca/~gary/rtmidi/\" rel=\"nofollow\">RtMidi</a>, only reformatted to comply\nwith PEP-8, and with small changes to make it a little more pythonic.</p>\n<div id=\"print-all-output-ports\">\n<h3>Print all output ports</h3>\n<pre>import rtmidi_python as rtmidi\n\nmidi_out = rtmidi.MidiOut()\nfor port_name in midi_out.ports:\n    print port_name\n</pre>\n</div>\n<div id=\"send-messages\">\n<h3>Send messages</h3>\n<pre>import rtmidi_python as rtmidi\n\nmidi_out = rtmidi.MidiOut()\nmidi_out.open_port(0)\n\nmidi_out.send_message([0x90, 48, 100]) # Note on\nmidi_out.send_message([0x80, 48, 100]) # Note off\n</pre>\n</div>\n<div id=\"get-incoming-messages-by-polling\">\n<h3>Get incoming messages by polling</h3>\n<pre>import rtmidi_python as rtmidi\n\nmidi_in = rtmidi.MidiIn()\nmidi_in.open_port(0)\n\nwhile True:\n    message, delta_time = midi_in.get_message()\n    if message:\n        print message, delta_time\n</pre>\n<p>Note that the signature of <tt>get_message()</tt> differs from the original\n<a href=\"http://www.music.mcgill.ca/~gary/rtmidi/\" rel=\"nofollow\">RtMidi</a> API: It returns a tuple instead of using a return parameter.</p>\n</div>\n<div id=\"get-incoming-messages-using-a-callback\">\n<h3>Get incoming messages using a callback</h3>\n<pre>import rtmidi_python as rtmidi\n\ndef callback(message, time_stamp):\n    print message, time_stamp\n\nmidi_in = rtmidi.MidiIn()\nmidi_in.callback = callback\nmidi_in.open_port(0)\n\n# do something else here (but don't quit)\n</pre>\n<p>Note that the signature of the callback differs from the original <a href=\"http://www.music.mcgill.ca/~gary/rtmidi/\" rel=\"nofollow\">RtMidi</a>\nAPI: <tt>message</tt> is now the first parameter, like in the tuple returned by\n<tt>get_message()</tt>.</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><em>rtmidi-python</em> is licensed under the MIT License, see LICENSE.</p>\n<p>It uses <a href=\"http://www.music.mcgill.ca/~gary/rtmidi/\" rel=\"nofollow\">RtMidi</a>, licensed under a modified MIT License, see\nRtMidi/RtMidi.h.</p>\n</div>\n\n          </div>"}, "last_serial": 990827, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "9bf154e3b06cb21e8c8d4f4e7d4df696", "sha256": "a092ab3d9b45d43a342a602a60bfd94381dce39d8120f4d06152d7755d57ecf2"}, "downloads": -1, "filename": "rtmidi-python-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9bf154e3b06cb21e8c8d4f4e7d4df696", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54755, "upload_time": "2014-02-04T20:43:06", "upload_time_iso_8601": "2014-02-04T20:43:06.691771Z", "url": "https://files.pythonhosted.org/packages/d1/70/86e366288c5efef823926a0bfa19fdc90674ea11415f9b19a15894b71994/rtmidi-python-0.2.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4c7dbc6fbc139e526212cfc89a7b38d", "sha256": "20959f5db54338a497d7c9e1821e5845bd1501654f8c59be0129e8c04d14bdbb"}, "downloads": -1, "filename": "rtmidi-python-0.2.2.win32-py2.7.exe", "has_sig": false, "md5_digest": "b4c7dbc6fbc139e526212cfc89a7b38d", "packagetype": "bdist_wininst", "python_version": "2.7", "requires_python": null, "size": 224293, "upload_time": "2014-02-04T21:23:27", "upload_time_iso_8601": "2014-02-04T21:23:27.319221Z", "url": "https://files.pythonhosted.org/packages/3e/44/552a9cc5ee1e4d9c3f70dbd90504160d6018f90ff511dd3d245b6409f29a/rtmidi-python-0.2.2.win32-py2.7.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "033d6ee05ecd0476052d23fd8566c82c", "sha256": "1d341334182f4c041da107f109115b2e3a02c5eca961880fc11a664da7b4575d"}, "downloads": -1, "filename": "rtmidi-python-0.2.2.win-amd64-py2.7.exe", "has_sig": false, "md5_digest": "033d6ee05ecd0476052d23fd8566c82c", "packagetype": "bdist_wininst", "python_version": "2.7", "requires_python": null, "size": 256807, "upload_time": "2014-02-04T22:25:11", "upload_time_iso_8601": "2014-02-04T22:25:11.984043Z", "url": "https://files.pythonhosted.org/packages/18/e1/96b91ea9b79d9af6837ed4ef7af52ba4722b0b42a9e09d8f6acd0209316c/rtmidi-python-0.2.2.win-amd64-py2.7.exe", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9bf154e3b06cb21e8c8d4f4e7d4df696", "sha256": "a092ab3d9b45d43a342a602a60bfd94381dce39d8120f4d06152d7755d57ecf2"}, "downloads": -1, "filename": "rtmidi-python-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9bf154e3b06cb21e8c8d4f4e7d4df696", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54755, "upload_time": "2014-02-04T20:43:06", "upload_time_iso_8601": "2014-02-04T20:43:06.691771Z", "url": "https://files.pythonhosted.org/packages/d1/70/86e366288c5efef823926a0bfa19fdc90674ea11415f9b19a15894b71994/rtmidi-python-0.2.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4c7dbc6fbc139e526212cfc89a7b38d", "sha256": "20959f5db54338a497d7c9e1821e5845bd1501654f8c59be0129e8c04d14bdbb"}, "downloads": -1, "filename": "rtmidi-python-0.2.2.win32-py2.7.exe", "has_sig": false, "md5_digest": "b4c7dbc6fbc139e526212cfc89a7b38d", "packagetype": "bdist_wininst", "python_version": "2.7", "requires_python": null, "size": 224293, "upload_time": "2014-02-04T21:23:27", "upload_time_iso_8601": "2014-02-04T21:23:27.319221Z", "url": "https://files.pythonhosted.org/packages/3e/44/552a9cc5ee1e4d9c3f70dbd90504160d6018f90ff511dd3d245b6409f29a/rtmidi-python-0.2.2.win32-py2.7.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "033d6ee05ecd0476052d23fd8566c82c", "sha256": "1d341334182f4c041da107f109115b2e3a02c5eca961880fc11a664da7b4575d"}, "downloads": -1, "filename": "rtmidi-python-0.2.2.win-amd64-py2.7.exe", "has_sig": false, "md5_digest": "033d6ee05ecd0476052d23fd8566c82c", "packagetype": "bdist_wininst", "python_version": "2.7", "requires_python": null, "size": 256807, "upload_time": "2014-02-04T22:25:11", "upload_time_iso_8601": "2014-02-04T22:25:11.984043Z", "url": "https://files.pythonhosted.org/packages/18/e1/96b91ea9b79d9af6837ed4ef7af52ba4722b0b42a9e09d8f6acd0209316c/rtmidi-python-0.2.2.win-amd64-py2.7.exe", "yanked": false}], "timestamp": "Fri May  8 03:00:26 2020"}