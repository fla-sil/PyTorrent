{"info": {"author": "Magni Developers", "author_email": "magni@es.aau.dk", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Image Recognition", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Scientific/Engineering :: Physics", "Topic :: Scientific/Engineering :: Visualization"], "description": "=====\nMagni\n=====\n\n:Primary developers:\n    Christian Schou Oxvig,\n    Patrick Steffen Pedersen\n\n:Additional developers:\n   Jan \u00d8stergaard,\n   Thomas Arildsen,\n   Tobias L. Jensen,\n   Torben Larsen\n\n:Institution:\n   Aalborg University,\n   Department of Electronic Systems,\n   Signal and Information Processing\n\n:Version:\n   1.7.0\n\n:Travis CI test status:\n   .. image:: https://travis-ci.org/SIP-AAU/Magni.svg?branch=master\n       :target: https://travis-ci.org/SIP-AAU/Magni\n\n\nIntroduction\n------------\n\nMagni is a Python package which provides functionality for increasing the speed\nof image acquisition using Atomic Force Microscopy (AFM). The image\nacquisition algorithms of Magni are based on the Compressed Sensing (CS) signal\nacquisition paradigm and include both sensing and reconstruction. The sensing\npart of the acquisition generates sensed data from regular images possibly\nacquired using AFM. This is done by AFM hardware simulation. The reconstruction\npart of the acquisition reconstructs images from sensed data. This is done by\nCS reconstruction using well-known CS reconstruction algorithms modified for\nthe purpose. The Python implementation of the above functionality uses the\nstandard library, a number of third-party libraries, and additional utility\nfunctionality designed and implemented specifically for Magni. The\nfunctionality provided by Magni can thus be divided into five groups:\n\n- **Atomic Force Microscopy**: AFM specific functionality including AFM image\n  acquisition, AFM hardware simulation, and AFM data file handling.\n- **Compressed Sensing**: General CS functionality including signal\n  reconstruction and phase transition determination.\n- **Imaging**: General imaging functionality including measurement matrix and\n  dictionary construction in addition to visualisation and evaluation.\n- **Reproducibility**: Tools that may aid in increasing the reproducibility of\n  results obtained using Magni.\n- **Utilities**: General Python utilities including multiprocessing, tracing,\n  and validation.\n\n\nDownloading\n-----------\n\nMagni can be downloaded in a number of ways:\n\n- All official releases of Magni are available for download at \n  'http://dx.doi.org/10.5278/VBN/MISC/Magni'.\n- The source code is hosted on GitHub at 'https://github.com/SIP-AAU/Magni'\n  where every release of Magni is available for download and where **known\n  issues** are tracked.\n\nFurthermore, all official releases of the magni package (**without** examples\nand documentation) are made available through PyPI and binstar. Both of these\nare considered unofficial channels and provided solely for your convenience.\n\n- Using PyPI located at 'https://pypi.python.org/pypi/magni/'.\n- Using Anaconda.org located at 'https://anaconda.org/chroxvi/magni/'.\n\n\nInstallation\n------------\n\nTo use Magni, extract the downloaded archive and include the extracted Magni\nfolder in your PYTHONPATH.\n\nMagni has been designed for use with Python 2 >= 2.7 or Python 3 >= 3.3.\n\nThe required thid party dependencies and optional third party dependencies for\nMagni are listed in the compiled documentation which can be found in the Magni\nfolder under '/doc/build/html/index.html'. You may use the 'dep_check.py'\nscript found in the Magni folder under '/magni/tests/' to check for missing\ndependencies for Magni. Simply run the script to print a dependency report.\n\n\nDocumentation\n-------------\n\nThe included subpackages, modules, classes and functions are documented through\nPython docstrings using the same format as the third-party library, numpy, i.e.\nusing the numpydoc standard. A description of any entity can thus be found in\nthe source code of Magni in the docstring of that entity. For readability, the\ndocumentation has been compiled using Sphinx to produce an HTML page which can\nbe found in the Magni folder under '/doc/build/html/index.html'. The entire\ndocumentation is also available as a PDF file in the Magni folder under\n'doc/pdf/index.pdf'. Note, that neither the HTML version nor the PDF version of\nthe documentation is provided through PyPI and Anaconda.org.\n\n\nTests\n-----\n\nA test suite consisting of unittests, doctests, IPython notebook examples, and\nseveral style checks is included in Magni. The tests are organised in python\nmodules found in the Magni folder under '/magni/tests/'. These may be invoked\nusing any test runner that supports the unittest.TestCase classes. The entire\ntest suite may be run by executing the convenience script 'run_tests.py'. The\ncode is this repository is continuously tested by `Travis CI\n<https://travis-ci.org/SIP-AAU/Magni>`_.\n\n\nExamples\n--------\n\nA large number of examples showing the capabilities of Magni are included. Some\nof these examples are in the form of doctests whereas the more elaborated\nexamples are in the form of IPython notebook examples which can be found in the\nMagni folder under '/examples/'.\n\n\nCiting Magni\n------------\n\nA Magni software metapaper has been published:\n\nC.S. Oxvig, P.S. Pedersen, T. Arildsen, J. \u00d8stergaard, and T. Larsen, \"Magni: A\nPython Package for Compressive Sampling and Reconstruction of Atomic Force\nMicroscopy Images\", *Journal of Open Research Software*, 2(1):e29, 2014\nDOI: http://dx.doi.org/10.5334/jors.bk\n\nFurthermore, the `magni.utils.validation` system is detailed in:\n\nP.S. Pedersen, C.S. Oxvig, J. \u00d8stergaard, and T. Larsen, \"Validating Function\nArguments in Python Signal Processing Applications\", in *Proceedings of the\n15th Python in Science Conference*, pp. 106-113, Austin, Texas, USA,\nJuly 11 - 17, 2016\nURL: http://conference.scipy.org/proceedings/scipy2016/patrick_pedersen.html\n\nAnd the `magni.reproducibility` sub-package is detailed in:\n\nC.S. Oxvig, T. Arildsen, and T. Larsen, \"Storing Reproducible Results from\nComputational Experiments using Scientific Python Packages\", in *Proceedings of\nthe 15th Python in Science Conference*, pp. 45-50, Austin, Texas, USA,\nJuly 11 - 17, 2016\nURL: http://conference.scipy.org/proceedings/scipy2016/christian_oxvig.html\n\nPlease consider citing one or more of these papers if you publish any work in\nwhich you have used Magni.", "description_content_type": null, "docs_url": null, "download_url": "https://pypi.python.org/pypi/magni", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SIP-AAU/Magni", "keywords": "Atomic Force Microscopy; Compressive Sensing; Python; Image Reconstruction; Reproducible Research", "license": "BSD 2-Clause", "maintainer": null, "maintainer_email": null, "name": "magni", "package_url": "https://pypi.org/project/magni/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/magni/", "project_urls": {"Download": "https://pypi.python.org/pypi/magni", "Homepage": "https://github.com/SIP-AAU/Magni"}, "release_url": "https://pypi.org/project/magni/1.7.0/", "requires_dist": null, "requires_python": null, "summary": "A Python Package for Compressive Sampling and Reconstruction of Atomic Force Microscopy Images", "version": "1.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Primary developers:</th></tr>\n<tr><td>\u00a0</td><td>Christian Schou Oxvig,\nPatrick Steffen Pedersen</td>\n</tr>\n<tr><th>Additional developers:</th></tr>\n<tr><td>\u00a0</td><td>Jan \u00d8stergaard,\nThomas Arildsen,\nTobias L. Jensen,\nTorben Larsen</td>\n</tr>\n<tr><th>Institution:</th><td>Aalborg University,\nDepartment of Electronic Systems,\nSignal and Information Processing</td>\n</tr>\n<tr><th>Version:</th>\n<td>1.7.0</td></tr>\n<tr><th>Travis CI test status:</th></tr>\n<tr><td>\u00a0</td><td><a href=\"https://travis-ci.org/SIP-AAU/Magni\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/SIP-AAU/Magni.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb2c0956de69dcb2a952b8e89460154a01cba349/68747470733a2f2f7472617669732d63692e6f72672f5349502d4141552f4d61676e692e7376673f6272616e63683d6d6173746572\"></a>\n</td>\n</tr>\n</tbody>\n</table>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Magni is a Python package which provides functionality for increasing the speed\nof image acquisition using Atomic Force Microscopy (AFM). The image\nacquisition algorithms of Magni are based on the Compressed Sensing (CS) signal\nacquisition paradigm and include both sensing and reconstruction. The sensing\npart of the acquisition generates sensed data from regular images possibly\nacquired using AFM. This is done by AFM hardware simulation. The reconstruction\npart of the acquisition reconstructs images from sensed data. This is done by\nCS reconstruction using well-known CS reconstruction algorithms modified for\nthe purpose. The Python implementation of the above functionality uses the\nstandard library, a number of third-party libraries, and additional utility\nfunctionality designed and implemented specifically for Magni. The\nfunctionality provided by Magni can thus be divided into five groups:</p>\n<ul>\n<li><strong>Atomic Force Microscopy</strong>: AFM specific functionality including AFM image\nacquisition, AFM hardware simulation, and AFM data file handling.</li>\n<li><strong>Compressed Sensing</strong>: General CS functionality including signal\nreconstruction and phase transition determination.</li>\n<li><strong>Imaging</strong>: General imaging functionality including measurement matrix and\ndictionary construction in addition to visualisation and evaluation.</li>\n<li><strong>Reproducibility</strong>: Tools that may aid in increasing the reproducibility of\nresults obtained using Magni.</li>\n<li><strong>Utilities</strong>: General Python utilities including multiprocessing, tracing,\nand validation.</li>\n</ul>\n</div>\n<div id=\"downloading\">\n<h2>Downloading</h2>\n<p>Magni can be downloaded in a number of ways:</p>\n<ul>\n<li>All official releases of Magni are available for download at\n\u2018<a href=\"http://dx.doi.org/10.5278/VBN/MISC/Magni\" rel=\"nofollow\">http://dx.doi.org/10.5278/VBN/MISC/Magni</a>\u2019.</li>\n<li>The source code is hosted on GitHub at \u2018<a href=\"https://github.com/SIP-AAU/Magni\" rel=\"nofollow\">https://github.com/SIP-AAU/Magni</a>\u2019\nwhere every release of Magni is available for download and where <strong>known\nissues</strong> are tracked.</li>\n</ul>\n<p>Furthermore, all official releases of the magni package (<strong>without</strong> examples\nand documentation) are made available through PyPI and binstar. Both of these\nare considered unofficial channels and provided solely for your convenience.</p>\n<ul>\n<li>Using PyPI located at \u2018<a href=\"https://pypi.python.org/pypi/magni/\" rel=\"nofollow\">https://pypi.python.org/pypi/magni/</a>\u2019.</li>\n<li>Using Anaconda.org located at \u2018<a href=\"https://anaconda.org/chroxvi/magni/\" rel=\"nofollow\">https://anaconda.org/chroxvi/magni/</a>\u2019.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To use Magni, extract the downloaded archive and include the extracted Magni\nfolder in your PYTHONPATH.</p>\n<p>Magni has been designed for use with Python 2 &gt;= 2.7 or Python 3 &gt;= 3.3.</p>\n<p>The required thid party dependencies and optional third party dependencies for\nMagni are listed in the compiled documentation which can be found in the Magni\nfolder under \u2018/doc/build/html/index.html\u2019. You may use the \u2018dep_check.py\u2019\nscript found in the Magni folder under \u2018/magni/tests/\u2019 to check for missing\ndependencies for Magni. Simply run the script to print a dependency report.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The included subpackages, modules, classes and functions are documented through\nPython docstrings using the same format as the third-party library, numpy, i.e.\nusing the numpydoc standard. A description of any entity can thus be found in\nthe source code of Magni in the docstring of that entity. For readability, the\ndocumentation has been compiled using Sphinx to produce an HTML page which can\nbe found in the Magni folder under \u2018/doc/build/html/index.html\u2019. The entire\ndocumentation is also available as a PDF file in the Magni folder under\n\u2018doc/pdf/index.pdf\u2019. Note, that neither the HTML version nor the PDF version of\nthe documentation is provided through PyPI and Anaconda.org.</p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>A test suite consisting of unittests, doctests, IPython notebook examples, and\nseveral style checks is included in Magni. The tests are organised in python\nmodules found in the Magni folder under \u2018/magni/tests/\u2019. These may be invoked\nusing any test runner that supports the unittest.TestCase classes. The entire\ntest suite may be run by executing the convenience script \u2018run_tests.py\u2019. The\ncode is this repository is continuously tested by <a href=\"https://travis-ci.org/SIP-AAU/Magni\" rel=\"nofollow\">Travis CI</a>.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>A large number of examples showing the capabilities of Magni are included. Some\nof these examples are in the form of doctests whereas the more elaborated\nexamples are in the form of IPython notebook examples which can be found in the\nMagni folder under \u2018/examples/\u2019.</p>\n</div>\n<div id=\"citing-magni\">\n<h2>Citing Magni</h2>\n<p>A Magni software metapaper has been published:</p>\n<p>C.S. Oxvig, P.S. Pedersen, T. Arildsen, J. \u00d8stergaard, and T. Larsen, \u201cMagni: A\nPython Package for Compressive Sampling and Reconstruction of Atomic Force\nMicroscopy Images\u201d, <em>Journal of Open Research Software</em>, 2(1):e29, 2014\nDOI: <a href=\"http://dx.doi.org/10.5334/jors.bk\" rel=\"nofollow\">http://dx.doi.org/10.5334/jors.bk</a></p>\n<p>Furthermore, the <cite>magni.utils.validation</cite> system is detailed in:</p>\n<p>P.S. Pedersen, C.S. Oxvig, J. \u00d8stergaard, and T. Larsen, \u201cValidating Function\nArguments in Python Signal Processing Applications\u201d, in <em>Proceedings of the\n15th Python in Science Conference</em>, pp. 106-113, Austin, Texas, USA,\nJuly 11 - 17, 2016\nURL: <a href=\"http://conference.scipy.org/proceedings/scipy2016/patrick_pedersen.html\" rel=\"nofollow\">http://conference.scipy.org/proceedings/scipy2016/patrick_pedersen.html</a></p>\n<p>And the <cite>magni.reproducibility</cite> sub-package is detailed in:</p>\n<p>C.S. Oxvig, T. Arildsen, and T. Larsen, \u201cStoring Reproducible Results from\nComputational Experiments using Scientific Python Packages\u201d, in <em>Proceedings of\nthe 15th Python in Science Conference</em>, pp. 45-50, Austin, Texas, USA,\nJuly 11 - 17, 2016\nURL: <a href=\"http://conference.scipy.org/proceedings/scipy2016/christian_oxvig.html\" rel=\"nofollow\">http://conference.scipy.org/proceedings/scipy2016/christian_oxvig.html</a></p>\n<p>Please consider citing one or more of these papers if you publish any work in\nwhich you have used Magni.</p>\n</div>\n\n          </div>"}, "last_serial": 2981486, "releases": {"1.0": [], "1.0.0": [{"comment_text": "", "digests": {"md5": "938899978fef20b8e16b3af5d6d44efc", "sha256": "27d52a5ae830b641e7e4690d3b97d499462b21b644cfca40d44d581aad416e1a"}, "downloads": -1, "filename": "magni-1.0.0.tar.gz", "has_sig": false, "md5_digest": "938899978fef20b8e16b3af5d6d44efc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57704, "upload_time": "2014-05-23T10:40:00", "upload_time_iso_8601": "2014-05-23T10:40:00.692448Z", "url": "https://files.pythonhosted.org/packages/66/a4/82f263c81fc56f9271f36fab92cf0e1d576559102724619287b4f9c2bd51/magni-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "9ebe4593bde72632741635a5c92b77fd", "sha256": "8c68ccc2b2c330199cbe2b79ff730b990b3881ad5cb1f237b1fbbe867335c29f"}, "downloads": -1, "filename": "magni-1.1.0.tar.gz", "has_sig": false, "md5_digest": "9ebe4593bde72632741635a5c92b77fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59430, "upload_time": "2014-11-26T10:41:14", "upload_time_iso_8601": "2014-11-26T10:41:14.465313Z", "url": "https://files.pythonhosted.org/packages/21/7a/510d170212e90418bf119392bcdb9bba1c9d991f0ae8734a76c12efbdbdc/magni-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "4c003efb1c0a1fd54ae7b97cb629c854", "sha256": "7ebc972200bc45a7bd4e90c1a29bad9a547dce5d6a15d4b2ba47705a26992cb2"}, "downloads": -1, "filename": "magni-1.2.0.tar.gz", "has_sig": false, "md5_digest": "4c003efb1c0a1fd54ae7b97cb629c854", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76185, "upload_time": "2015-03-13T14:40:52", "upload_time_iso_8601": "2015-03-13T14:40:52.339240Z", "url": "https://files.pythonhosted.org/packages/98/af/bf7d4b30be070159e3688923ae0fda1d20a023642cc5e99d1d282cee2bfb/magni-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "e53a6007ffbc60866f2ddb2bbf2051fa", "sha256": "2f8406f584e3d8028f1a0a6bc31528ea1a539b3c359e9b61dba3a3f531df6ec2"}, "downloads": -1, "filename": "magni-1.3.0.tar.gz", "has_sig": false, "md5_digest": "e53a6007ffbc60866f2ddb2bbf2051fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 109724, "upload_time": "2015-05-05T08:59:36", "upload_time_iso_8601": "2015-05-05T08:59:36.282555Z", "url": "https://files.pythonhosted.org/packages/44/22/2b5505266c3b09418372423fa527f6aa5f9fd5b67451141099f73c37fd66/magni-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "36b5edfef43846fd8956f4e1ced85b3a", "sha256": "1446a9aff0f260e63debedc3c15601112e70161f0f7025adedd14d876e5d2190"}, "downloads": -1, "filename": "magni-1.4.0.tar.gz", "has_sig": false, "md5_digest": "36b5edfef43846fd8956f4e1ced85b3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 123820, "upload_time": "2016-02-01T08:02:35", "upload_time_iso_8601": "2016-02-01T08:02:35.341111Z", "url": "https://files.pythonhosted.org/packages/8e/5d/6a8e6124765efb9aee48556cac961e4420c81e6b3eb18041cdf22f5836e7/magni-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "72bf820a7c44938a7dce815f98c68939", "sha256": "fef9832378a3ad7ed2c6c3086eb086a8d50e16f4428432cdde65c9e06f488d88"}, "downloads": -1, "filename": "magni-1.5.0.tar.gz", "has_sig": false, "md5_digest": "72bf820a7c44938a7dce815f98c68939", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 136253, "upload_time": "2016-06-30T13:37:38", "upload_time_iso_8601": "2016-06-30T13:37:38.675904Z", "url": "https://files.pythonhosted.org/packages/89/62/1f2132f2d215407cadc2f8ce3e000dd4c4f905ee03998b3cea87711f9530/magni-1.5.0.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "d1521fb4e0d0cdd4ee62c898178be1db", "sha256": "28b6a734ec3b73083bc81960cb86afbf3f51e5554c10509422a38b75a18aa703"}, "downloads": -1, "filename": "magni-1.6.0.tar.gz", "has_sig": false, "md5_digest": "d1521fb4e0d0cdd4ee62c898178be1db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 185280, "upload_time": "2016-11-03T12:53:56", "upload_time_iso_8601": "2016-11-03T12:53:56.563514Z", "url": "https://files.pythonhosted.org/packages/31/2f/d2acf9751010d30cf545418db7ade6c58568bc40269620401bccf8ab720e/magni-1.6.0.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "6b2016652cbd0d5dd223f168b67a1a7e", "sha256": "e349d6f307b8805f1aa63db64088a54a48d4e7ed43cbbe39585876513591db8f"}, "downloads": -1, "filename": "magni-1.7.0.tar.gz", "has_sig": false, "md5_digest": "6b2016652cbd0d5dd223f168b67a1a7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 193960, "upload_time": "2017-03-01T14:35:15", "upload_time_iso_8601": "2017-03-01T14:35:15.228225Z", "url": "https://files.pythonhosted.org/packages/d8/b5/88f964cd56097ca8b364b02b2d5664870b68b693eb5a658030b3fa87e050/magni-1.7.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6b2016652cbd0d5dd223f168b67a1a7e", "sha256": "e349d6f307b8805f1aa63db64088a54a48d4e7ed43cbbe39585876513591db8f"}, "downloads": -1, "filename": "magni-1.7.0.tar.gz", "has_sig": false, "md5_digest": "6b2016652cbd0d5dd223f168b67a1a7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 193960, "upload_time": "2017-03-01T14:35:15", "upload_time_iso_8601": "2017-03-01T14:35:15.228225Z", "url": "https://files.pythonhosted.org/packages/d8/b5/88f964cd56097ca8b364b02b2d5664870b68b693eb5a658030b3fa87e050/magni-1.7.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:00 2020"}