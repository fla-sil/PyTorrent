{"info": {"author": "Gully Chen", "author_email": "deepgully@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python"], "description": "# Zilliqa-Python-Library API\n\n**pyzil** is the Python3 implement of Zilliqa BlockChain API. https://apidocs.zilliqa.com\n\n## Features\n\n* Zilliqa low-level APIs\n* Account and Transaction\n* Zilliqa ethash\n* Smart Contract\n\nPython 3.6+ on macOS or Linux.\n\n## Install\n\n```shell\npip install pyzil\n```\nor from source\n```shell\ngit clone https://github.com/deepgully/pyzil\ncd pyzil\npip install -r requirements.txt\npython setup.py install\n```\n\n## Usage\n\n\n### Import pyzil\n```python\nfrom pprint import pprint\n\nfrom pyzil.crypto import zilkey\nfrom pyzil.zilliqa import chain\nfrom pyzil.zilliqa.units import Zil, Qa\nfrom pyzil.account import Account, BatchTransfer\n```\n\n#### Set Active Chain, MainNet or TestNet\n```python\nchain.set_active_chain(chain.MainNet)  \n```  \n\n#### ZILs Transaction\n```python\n# load account from wallet address\naccount = Account(address=\"95B27EC211F86748DD985E1424B4058E94AA5814\")\nbalance = account.get_balance()\nprint(\"{}: {}\".format(account, balance))\n\n# load account from private key\n# private key is required to send ZILs\naccount = Account(private_key=\"05C3CF3387F31202CD0798B7AA882327A1BD365331F90954A58C18F61BD08FFC\")\nbalance2 = account.get_balance()\nprint(\"Account balance: {}\".format(balance2))\n\n# to_addr must be bech32 address or 20 bytes checksum address\nto_addr = \"zil1k5xzgp8xn87eshm3ktplqvs9nufav4pmcm52xx\"\n# send ZILs\ntxn_info = account.transfer(to_addr=to_addr, zils=2.718)\npprint(txn_info)\ntxn_id = txn_info[\"TranID\"]\n\n# wait chain confirm, may takes 2-3 minutes on MainNet\ntxn_details = account.wait_txn_confirm(txn_id, timeout=300)\npprint(txn_details)\nif txn_details and txn_details[\"receipt\"][\"success\"]:\n    print(\"Txn success: {}\".format(txn_id))\nelse:\n    print(\"Txn failed: {}\".format(txn_id))\n```  \n\n#### Send by Qa\n```python\namount = Qa(1234567890)\ntxn_info = account.transfer(to_addr=to_addr, zils=amount)\npprint(txn_info)\ntxn_id = txn_info[\"TranID\"]\n```  \n\n#### Wait for confirm\n```python\namount = Zil(3.14)\ntxn_details = account.transfer(to_addr, zils=amount, \n                               confirm=True, timeout=300, sleep=20)\nprint(\"Transfer Result:\")\npprint(txn_details)\npprint(account.last_params)\npprint(account.last_txn_info)\npprint(account.last_txn_details)\n\n```  \n\n#### Batch Transfer (Send zils to multi addresses)\n```python\nbatch = [BatchTransfer(to_addr=to_addr, zils=i) for i in range(10)]\npprint(batch)\n\ntxn_info_list = account.transfer_batch(batch)\npprint(txn_info_list)\n\nfor txn_info in txn_info_list:\n    if not txn_info:\n        print(\"Failed to create txn\")\n        continue\n\n    txn_details = account.wait_txn_confirm(txn_info[\"TranID\"], timeout=300)\n    pprint(txn_details)\n    if txn_details and txn_details[\"receipt\"][\"success\"]:\n        print(\"Txn success\")\n    else:\n        print(\"Txn failed\")\n\nbalance2 = account.get_balance()\nprint(\"Account balance: {}\".format(balance2))\n```\n\n#### Send ZILs from nodes to wallet\n```python\nnodes_keys = [\n    \"private_key1\",\n    \"private_key2\",\n    \"private_key3\",\n]\n\nto_address = \"your wallet address\"\nto_account = Account(address=to_address)\nprint(\"Account balance: {}\".format(to_account.get_balance()))\n\nmin_gas = Qa(chain.active_chain.api.GetMinimumGasPrice())\n\ntxn_info_list = []\nfor key in nodes_keys:\n    if not key:\n       continue\n    account = Account(private_key=key)\n    # send all zils\n    amount = account.get_balance_qa() - min_gas * 2\n    if amount <= 0:\n        continue\n\n    txn_info = account.transfer(to_addr=to_account.bech32_address, zils=amount, gas_price=min_gas)\n    pprint(txn_info)\n\n    txn_info_list.append(txn_info)\n\nfor txn_info in txn_info_list:   \n    txn_details = chain.active_chain.wait_txn_confirm(txn_info[\"TranID\"], timeout=300)\n    pprint(txn_details)\n    if txn_details and txn_details[\"receipt\"][\"success\"]:\n        print(\"Txn success\")\n    else:\n        print(\"Txn failed\")\n\nprint(\"Account balance: {}\".format(to_account.get_balance()))\n\n```\n\n#### load account from mykey.txt\n```python\naccount = Account.from_mykey_txt(\"mykey.txt\")\nprint(account)\n```  \n\n#### load account from keystore.json\n```python\naccount = Account.from_keystore(\"keystore.json\")\nprint(account)\n\n# see more examples in tests/test_account.py\n```  \n\n#### bech32 address\n```python\n# init from bech32 address\naccount1 = Account(address=\"zil1r5verznnwvrzrz6uhveyrlxuhkvccwnju4aehf\")\nprint(\"address: {}\".format(account1.address))\naccount2 = Account(address=\"1d19918a737306218b5cbb3241fcdcbd998c3a72\")\nprint(\"bech32 address: {}\".format(account2.bech32_address))\nassert account1 == account2\n\n# tranfer to bech32 address\naccount = Account.from_mykey_txt(\"mykey.txt\")\ntxn_info = account.transfer(to_addr=\"zil1r5verznnwvrzrz6uhveyrlxuhkvccwnju4aehf\", zils=0.01)\npprint(txn_info)\ntxn_id = txn_info[\"TranID\"]\n\n```  \n\n\n## Zilliqa Low-level APIs\n```python\nfrom pyzil.zilliqa.api import ZilliqaAPI, APIError\n\napi = ZilliqaAPI(\"https://api.zilliqa.com/\")\nprint(api)\n\ninfo = api.GetBlockchainInfo()\npprint(info)\n\nsharding = api.GetShardingStructure()\npprint(sharding)\n\nds_block = api.GetCurrentDSEpoch()\npprint(ds_block)\n\ntx_block = api.GetCurrentMiniEpoch()\npprint(tx_block)\n\n# see more examples in tests/test_lowlevel_api.py\n```\n\n\n## Zilliqa Currencies Units\n```python\nfrom pyzil.zilliqa.units import Zil, Qa\n\nzil = Zil(1000.123)\nprint(repr(zil))\nassert zil == Zil(\"1000.123\")\n\nqa = Qa(1000123000000000)\nprint(repr(qa))\nassert qa == zil\nassert zil == qa\n\nprint(repr(zil + qa))\nprint(repr(zil - 2))\nprint(repr(zil * 2))\nprint(repr(zil / 2.0))\n\nprint(repr(qa - 2))\nprint(repr(qa * 2))\nprint(repr(qa // 2))\n# see more examples in tests/test_units.py\n```\n\n\n## Zilliqa Smart Contract\n```python\nfrom pprint import pprint\nfrom pyzil.zilliqa import chain\nfrom pyzil.account import Account\nfrom pyzil.contract import Contract\n\n\nchain.set_active_chain(chain.TestNet)\n\naccount = Account.from_keystore(\"zxcvbnm,\", \"zilliqa_keystore.json\")\n```\n\n### Get contract from address\n```python\naddress = \"45dca9586598c8af78b191eaa28daf2b0a0b4f43\"\ncontract = Contract.load_from_address(address, load_state=True)\nprint(contract)\nprint(contract.status)\npprint(contract.state)\ncontract.get_state(get_code=True, get_init=True)\npprint(contract.code)\npprint(contract.init)\npprint(contract.state)\n```\n\n### New contract from code\n```python\ncode = open(\"HelloWorld.scilla\").read()\ncontract = Contract.new_from_code(code)\nprint(contract)\n\n# set account before deploy\ncontract.account = account\n\ncontract.deploy(timeout=300, sleep=10)\nassert contract.status == Contract.Status.Deployed\n```\n\n### Get contracts\n```python\nowner_addr = account.address\ncontracts = Contract.get_contracts(owner_addr)\npprint(contracts)\ncontracts2 = account.get_contracts()\npprint(contracts2)\n\nassert contracts == contracts2\n```\n\n### Call contract\n```python\ncontract_addr = \"45dca9586598c8af78b191eaa28daf2b0a0b4f43\"\ncontract = Contract.load_from_address(contract_addr)\n\ncontract.account = account\n\nresp = contract.call(method=\"getHello\", params=[])\npprint(resp)\npprint(contract.last_receipt)\n\nresp = contract.call(method=\"setHello\", params=[Contract.value_dict(\"msg\", \"String\", \"hi contract.\")])\npprint(resp)\npprint(contract.last_receipt)\n\nresp = contract.call(method=\"getHello\", params=[])\npprint(resp)\npprint(contract.last_receipt)\n\n# call contract and deposit Zils to contract (default is 0)\nresp = contract.call(method=\"getHello\", params=[], amount=Qa(110))\npprint(resp)\npprint(contract.last_receipt)\n\n# see more examples in test_contract.py\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/deepgully/pyzil", "keywords": "zilliqa api", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "pyzil", "package_url": "https://pypi.org/project/pyzil/", "platform": "", "project_url": "https://pypi.org/project/pyzil/", "project_urls": {"Homepage": "http://github.com/deepgully/pyzil"}, "release_url": "https://pypi.org/project/pyzil/1.4.16/", "requires_dist": ["requests", "jsonrpcclient", "jsonrpcclient[requests]", "protobuf", "fastecdsa", "pyethash", "pycryptodome", "eth-hash[pycryptodome]"], "requires_python": "", "summary": "Zilliqa Python API", "version": "1.4.16", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Zilliqa-Python-Library API</h1>\n<p><strong>pyzil</strong> is the Python3 implement of Zilliqa BlockChain API. <a href=\"https://apidocs.zilliqa.com\" rel=\"nofollow\">https://apidocs.zilliqa.com</a></p>\n<h2>Features</h2>\n<ul>\n<li>Zilliqa low-level APIs</li>\n<li>Account and Transaction</li>\n<li>Zilliqa ethash</li>\n<li>Smart Contract</li>\n</ul>\n<p>Python 3.6+ on macOS or Linux.</p>\n<h2>Install</h2>\n<pre>pip install pyzil\n</pre>\n<p>or from source</p>\n<pre>git clone https://github.com/deepgully/pyzil\n<span class=\"nb\">cd</span> pyzil\npip install -r requirements.txt\npython setup.py install\n</pre>\n<h2>Usage</h2>\n<h3>Import pyzil</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyzil.crypto</span> <span class=\"kn\">import</span> <span class=\"n\">zilkey</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyzil.zilliqa</span> <span class=\"kn\">import</span> <span class=\"n\">chain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyzil.zilliqa.units</span> <span class=\"kn\">import</span> <span class=\"n\">Zil</span><span class=\"p\">,</span> <span class=\"n\">Qa</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyzil.account</span> <span class=\"kn\">import</span> <span class=\"n\">Account</span><span class=\"p\">,</span> <span class=\"n\">BatchTransfer</span>\n</pre>\n<h4>Set Active Chain, MainNet or TestNet</h4>\n<pre><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">set_active_chain</span><span class=\"p\">(</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">MainNet</span><span class=\"p\">)</span>  \n</pre>\n<h4>ZILs Transaction</h4>\n<pre><span class=\"c1\"># load account from wallet address</span>\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s2\">\"95B27EC211F86748DD985E1424B4058E94AA5814\"</span><span class=\"p\">)</span>\n<span class=\"n\">balance</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">account</span><span class=\"p\">,</span> <span class=\"n\">balance</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># load account from private key</span>\n<span class=\"c1\"># private key is required to send ZILs</span>\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"s2\">\"05C3CF3387F31202CD0798B7AA882327A1BD365331F90954A58C18F61BD08FFC\"</span><span class=\"p\">)</span>\n<span class=\"n\">balance2</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Account balance: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">balance2</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># to_addr must be bech32 address or 20 bytes checksum address</span>\n<span class=\"n\">to_addr</span> <span class=\"o\">=</span> <span class=\"s2\">\"zil1k5xzgp8xn87eshm3ktplqvs9nufav4pmcm52xx\"</span>\n<span class=\"c1\"># send ZILs</span>\n<span class=\"n\">txn_info</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">transfer</span><span class=\"p\">(</span><span class=\"n\">to_addr</span><span class=\"o\">=</span><span class=\"n\">to_addr</span><span class=\"p\">,</span> <span class=\"n\">zils</span><span class=\"o\">=</span><span class=\"mf\">2.718</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">txn_info</span><span class=\"p\">)</span>\n<span class=\"n\">txn_id</span> <span class=\"o\">=</span> <span class=\"n\">txn_info</span><span class=\"p\">[</span><span class=\"s2\">\"TranID\"</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># wait chain confirm, may takes 2-3 minutes on MainNet</span>\n<span class=\"n\">txn_details</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">wait_txn_confirm</span><span class=\"p\">(</span><span class=\"n\">txn_id</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">txn_details</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">txn_details</span> <span class=\"ow\">and</span> <span class=\"n\">txn_details</span><span class=\"p\">[</span><span class=\"s2\">\"receipt\"</span><span class=\"p\">][</span><span class=\"s2\">\"success\"</span><span class=\"p\">]:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Txn success: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">txn_id</span><span class=\"p\">))</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Txn failed: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">txn_id</span><span class=\"p\">))</span>\n</pre>\n<h4>Send by Qa</h4>\n<pre><span class=\"n\">amount</span> <span class=\"o\">=</span> <span class=\"n\">Qa</span><span class=\"p\">(</span><span class=\"mi\">1234567890</span><span class=\"p\">)</span>\n<span class=\"n\">txn_info</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">transfer</span><span class=\"p\">(</span><span class=\"n\">to_addr</span><span class=\"o\">=</span><span class=\"n\">to_addr</span><span class=\"p\">,</span> <span class=\"n\">zils</span><span class=\"o\">=</span><span class=\"n\">amount</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">txn_info</span><span class=\"p\">)</span>\n<span class=\"n\">txn_id</span> <span class=\"o\">=</span> <span class=\"n\">txn_info</span><span class=\"p\">[</span><span class=\"s2\">\"TranID\"</span><span class=\"p\">]</span>\n</pre>\n<h4>Wait for confirm</h4>\n<pre><span class=\"n\">amount</span> <span class=\"o\">=</span> <span class=\"n\">Zil</span><span class=\"p\">(</span><span class=\"mf\">3.14</span><span class=\"p\">)</span>\n<span class=\"n\">txn_details</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">transfer</span><span class=\"p\">(</span><span class=\"n\">to_addr</span><span class=\"p\">,</span> <span class=\"n\">zils</span><span class=\"o\">=</span><span class=\"n\">amount</span><span class=\"p\">,</span> \n                               <span class=\"n\">confirm</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">sleep</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Transfer Result:\"</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">txn_details</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">last_params</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">last_txn_info</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">last_txn_details</span><span class=\"p\">)</span>\n</pre>\n<h4>Batch Transfer (Send zils to multi addresses)</h4>\n<pre><span class=\"n\">batch</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">BatchTransfer</span><span class=\"p\">(</span><span class=\"n\">to_addr</span><span class=\"o\">=</span><span class=\"n\">to_addr</span><span class=\"p\">,</span> <span class=\"n\">zils</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)]</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span>\n\n<span class=\"n\">txn_info_list</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">transfer_batch</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">txn_info_list</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">txn_info</span> <span class=\"ow\">in</span> <span class=\"n\">txn_info_list</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">txn_info</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Failed to create txn\"</span><span class=\"p\">)</span>\n        <span class=\"k\">continue</span>\n\n    <span class=\"n\">txn_details</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">wait_txn_confirm</span><span class=\"p\">(</span><span class=\"n\">txn_info</span><span class=\"p\">[</span><span class=\"s2\">\"TranID\"</span><span class=\"p\">],</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">txn_details</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">txn_details</span> <span class=\"ow\">and</span> <span class=\"n\">txn_details</span><span class=\"p\">[</span><span class=\"s2\">\"receipt\"</span><span class=\"p\">][</span><span class=\"s2\">\"success\"</span><span class=\"p\">]:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Txn success\"</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Txn failed\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">balance2</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Account balance: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">balance2</span><span class=\"p\">))</span>\n</pre>\n<h4>Send ZILs from nodes to wallet</h4>\n<pre><span class=\"n\">nodes_keys</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"private_key1\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"private_key2\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"private_key3\"</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">to_address</span> <span class=\"o\">=</span> <span class=\"s2\">\"your wallet address\"</span>\n<span class=\"n\">to_account</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"n\">to_address</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Account balance: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">to_account</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">()))</span>\n\n<span class=\"n\">min_gas</span> <span class=\"o\">=</span> <span class=\"n\">Qa</span><span class=\"p\">(</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">active_chain</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">GetMinimumGasPrice</span><span class=\"p\">())</span>\n\n<span class=\"n\">txn_info_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">nodes_keys</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">key</span><span class=\"p\">:</span>\n       <span class=\"k\">continue</span>\n    <span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">)</span>\n    <span class=\"c1\"># send all zils</span>\n    <span class=\"n\">amount</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">get_balance_qa</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">min_gas</span> <span class=\"o\">*</span> <span class=\"mi\">2</span>\n    <span class=\"k\">if</span> <span class=\"n\">amount</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">continue</span>\n\n    <span class=\"n\">txn_info</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">transfer</span><span class=\"p\">(</span><span class=\"n\">to_addr</span><span class=\"o\">=</span><span class=\"n\">to_account</span><span class=\"o\">.</span><span class=\"n\">bech32_address</span><span class=\"p\">,</span> <span class=\"n\">zils</span><span class=\"o\">=</span><span class=\"n\">amount</span><span class=\"p\">,</span> <span class=\"n\">gas_price</span><span class=\"o\">=</span><span class=\"n\">min_gas</span><span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">txn_info</span><span class=\"p\">)</span>\n\n    <span class=\"n\">txn_info_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">txn_info</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">txn_info</span> <span class=\"ow\">in</span> <span class=\"n\">txn_info_list</span><span class=\"p\">:</span>   \n    <span class=\"n\">txn_details</span> <span class=\"o\">=</span> <span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">active_chain</span><span class=\"o\">.</span><span class=\"n\">wait_txn_confirm</span><span class=\"p\">(</span><span class=\"n\">txn_info</span><span class=\"p\">[</span><span class=\"s2\">\"TranID\"</span><span class=\"p\">],</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">txn_details</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">txn_details</span> <span class=\"ow\">and</span> <span class=\"n\">txn_details</span><span class=\"p\">[</span><span class=\"s2\">\"receipt\"</span><span class=\"p\">][</span><span class=\"s2\">\"success\"</span><span class=\"p\">]:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Txn success\"</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Txn failed\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Account balance: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">to_account</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">()))</span>\n</pre>\n<h4>load account from mykey.txt</h4>\n<pre><span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"o\">.</span><span class=\"n\">from_mykey_txt</span><span class=\"p\">(</span><span class=\"s2\">\"mykey.txt\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">account</span><span class=\"p\">)</span>\n</pre>\n<h4>load account from keystore.json</h4>\n<pre><span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"o\">.</span><span class=\"n\">from_keystore</span><span class=\"p\">(</span><span class=\"s2\">\"keystore.json\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">account</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># see more examples in tests/test_account.py</span>\n</pre>\n<h4>bech32 address</h4>\n<pre><span class=\"c1\"># init from bech32 address</span>\n<span class=\"n\">account1</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s2\">\"zil1r5verznnwvrzrz6uhveyrlxuhkvccwnju4aehf\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"address: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">account1</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">))</span>\n<span class=\"n\">account2</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s2\">\"1d19918a737306218b5cbb3241fcdcbd998c3a72\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"bech32 address: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">account2</span><span class=\"o\">.</span><span class=\"n\">bech32_address</span><span class=\"p\">))</span>\n<span class=\"k\">assert</span> <span class=\"n\">account1</span> <span class=\"o\">==</span> <span class=\"n\">account2</span>\n\n<span class=\"c1\"># tranfer to bech32 address</span>\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"o\">.</span><span class=\"n\">from_mykey_txt</span><span class=\"p\">(</span><span class=\"s2\">\"mykey.txt\"</span><span class=\"p\">)</span>\n<span class=\"n\">txn_info</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">transfer</span><span class=\"p\">(</span><span class=\"n\">to_addr</span><span class=\"o\">=</span><span class=\"s2\">\"zil1r5verznnwvrzrz6uhveyrlxuhkvccwnju4aehf\"</span><span class=\"p\">,</span> <span class=\"n\">zils</span><span class=\"o\">=</span><span class=\"mf\">0.01</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">txn_info</span><span class=\"p\">)</span>\n<span class=\"n\">txn_id</span> <span class=\"o\">=</span> <span class=\"n\">txn_info</span><span class=\"p\">[</span><span class=\"s2\">\"TranID\"</span><span class=\"p\">]</span>\n</pre>\n<h2>Zilliqa Low-level APIs</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyzil.zilliqa.api</span> <span class=\"kn\">import</span> <span class=\"n\">ZilliqaAPI</span><span class=\"p\">,</span> <span class=\"n\">APIError</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">ZilliqaAPI</span><span class=\"p\">(</span><span class=\"s2\">\"https://api.zilliqa.com/\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"p\">)</span>\n\n<span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">GetBlockchainInfo</span><span class=\"p\">()</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">)</span>\n\n<span class=\"n\">sharding</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">GetShardingStructure</span><span class=\"p\">()</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">sharding</span><span class=\"p\">)</span>\n\n<span class=\"n\">ds_block</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">GetCurrentDSEpoch</span><span class=\"p\">()</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">ds_block</span><span class=\"p\">)</span>\n\n<span class=\"n\">tx_block</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">GetCurrentMiniEpoch</span><span class=\"p\">()</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">tx_block</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># see more examples in tests/test_lowlevel_api.py</span>\n</pre>\n<h2>Zilliqa Currencies Units</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyzil.zilliqa.units</span> <span class=\"kn\">import</span> <span class=\"n\">Zil</span><span class=\"p\">,</span> <span class=\"n\">Qa</span>\n\n<span class=\"n\">zil</span> <span class=\"o\">=</span> <span class=\"n\">Zil</span><span class=\"p\">(</span><span class=\"mf\">1000.123</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">zil</span><span class=\"p\">))</span>\n<span class=\"k\">assert</span> <span class=\"n\">zil</span> <span class=\"o\">==</span> <span class=\"n\">Zil</span><span class=\"p\">(</span><span class=\"s2\">\"1000.123\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">qa</span> <span class=\"o\">=</span> <span class=\"n\">Qa</span><span class=\"p\">(</span><span class=\"mi\">1000123000000000</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">qa</span><span class=\"p\">))</span>\n<span class=\"k\">assert</span> <span class=\"n\">qa</span> <span class=\"o\">==</span> <span class=\"n\">zil</span>\n<span class=\"k\">assert</span> <span class=\"n\">zil</span> <span class=\"o\">==</span> <span class=\"n\">qa</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">zil</span> <span class=\"o\">+</span> <span class=\"n\">qa</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">zil</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">zil</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">zil</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span><span class=\"p\">))</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">qa</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">qa</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">qa</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"c1\"># see more examples in tests/test_units.py</span>\n</pre>\n<h2>Zilliqa Smart Contract</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyzil.zilliqa</span> <span class=\"kn\">import</span> <span class=\"n\">chain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyzil.account</span> <span class=\"kn\">import</span> <span class=\"n\">Account</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyzil.contract</span> <span class=\"kn\">import</span> <span class=\"n\">Contract</span>\n\n\n<span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">set_active_chain</span><span class=\"p\">(</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">TestNet</span><span class=\"p\">)</span>\n\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"o\">.</span><span class=\"n\">from_keystore</span><span class=\"p\">(</span><span class=\"s2\">\"zxcvbnm,\"</span><span class=\"p\">,</span> <span class=\"s2\">\"zilliqa_keystore.json\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Get contract from address</h3>\n<pre><span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"s2\">\"45dca9586598c8af78b191eaa28daf2b0a0b4f43\"</span>\n<span class=\"n\">contract</span> <span class=\"o\">=</span> <span class=\"n\">Contract</span><span class=\"o\">.</span><span class=\"n\">load_from_address</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"p\">,</span> <span class=\"n\">load_state</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">contract</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">)</span>\n<span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">get_state</span><span class=\"p\">(</span><span class=\"n\">get_code</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">get_init</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">code</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">)</span>\n</pre>\n<h3>New contract from code</h3>\n<pre><span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"HelloWorld.scilla\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"n\">contract</span> <span class=\"o\">=</span> <span class=\"n\">Contract</span><span class=\"o\">.</span><span class=\"n\">new_from_code</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">contract</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set account before deploy</span>\n<span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">account</span>\n\n<span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">deploy</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">sleep</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"n\">Contract</span><span class=\"o\">.</span><span class=\"n\">Status</span><span class=\"o\">.</span><span class=\"n\">Deployed</span>\n</pre>\n<h3>Get contracts</h3>\n<pre><span class=\"n\">owner_addr</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">address</span>\n<span class=\"n\">contracts</span> <span class=\"o\">=</span> <span class=\"n\">Contract</span><span class=\"o\">.</span><span class=\"n\">get_contracts</span><span class=\"p\">(</span><span class=\"n\">owner_addr</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">contracts</span><span class=\"p\">)</span>\n<span class=\"n\">contracts2</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">get_contracts</span><span class=\"p\">()</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">contracts2</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">contracts</span> <span class=\"o\">==</span> <span class=\"n\">contracts2</span>\n</pre>\n<h3>Call contract</h3>\n<pre><span class=\"n\">contract_addr</span> <span class=\"o\">=</span> <span class=\"s2\">\"45dca9586598c8af78b191eaa28daf2b0a0b4f43\"</span>\n<span class=\"n\">contract</span> <span class=\"o\">=</span> <span class=\"n\">Contract</span><span class=\"o\">.</span><span class=\"n\">load_from_address</span><span class=\"p\">(</span><span class=\"n\">contract_addr</span><span class=\"p\">)</span>\n\n<span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">account</span>\n\n<span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"getHello\"</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">last_receipt</span><span class=\"p\">)</span>\n\n<span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"setHello\"</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Contract</span><span class=\"o\">.</span><span class=\"n\">value_dict</span><span class=\"p\">(</span><span class=\"s2\">\"msg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"String\"</span><span class=\"p\">,</span> <span class=\"s2\">\"hi contract.\"</span><span class=\"p\">)])</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">last_receipt</span><span class=\"p\">)</span>\n\n<span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"getHello\"</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">last_receipt</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># call contract and deposit Zils to contract (default is 0)</span>\n<span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"getHello\"</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"n\">Qa</span><span class=\"p\">(</span><span class=\"mi\">110</span><span class=\"p\">))</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">contract</span><span class=\"o\">.</span><span class=\"n\">last_receipt</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># see more examples in test_contract.py</span>\n</pre>\n\n          </div>"}, "last_serial": 7032563, "releases": {"0.3.31": [{"comment_text": "", "digests": {"md5": "bcdb977c29a226ca1d9f361850ce8cce", "sha256": "eff0397ea7e334d2d4ee971cfe21b851f2365321a4c388b6139df1703207f3b5"}, "downloads": -1, "filename": "pyzil-0.3.31-py3-none-any.whl", "has_sig": false, "md5_digest": "bcdb977c29a226ca1d9f361850ce8cce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 823950, "upload_time": "2019-03-31T14:15:59", "upload_time_iso_8601": "2019-03-31T14:15:59.845669Z", "url": "https://files.pythonhosted.org/packages/1d/ca/1323257bbea86a115f823cc74274db01bdbd89a4c697511dfaec4915fe7b/pyzil-0.3.31-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26b5b711f39412867779d381ddd7e818", "sha256": "5b8fb3a97dc88d7e1a69c98d3aa132989106992f7c193333b668442e7488a415"}, "downloads": -1, "filename": "pyzil-0.3.31.tar.gz", "has_sig": false, "md5_digest": "26b5b711f39412867779d381ddd7e818", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16236, "upload_time": "2019-03-31T13:45:12", "upload_time_iso_8601": "2019-03-31T13:45:12.883565Z", "url": "https://files.pythonhosted.org/packages/16/6a/57cbcffc7bad8c72a47f73c2ba63286b296a8c3a3d6879aff74a8b32436d/pyzil-0.3.31.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "d5951b394cf4ca3f958db9e50bf25aed", "sha256": "1d48678ede255892dccd9baa7395d796ea22cc66e1dda121719927a3fc4a025a"}, "downloads": -1, "filename": "pyzil-0.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d5951b394cf4ca3f958db9e50bf25aed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 826011, "upload_time": "2019-04-04T10:09:06", "upload_time_iso_8601": "2019-04-04T10:09:06.987670Z", "url": "https://files.pythonhosted.org/packages/b7/47/19633d99220f7635ab32419decdaa43817551cd8cdb4147ba780cc901639/pyzil-0.4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60c26ddcd8ca0187e1ae6de576c66e5d", "sha256": "be9b1faeb8e048ef1266a8597c86026ce58cb0f10714011d0d0fb7f65c92512e"}, "downloads": -1, "filename": "pyzil-0.4.4.tar.gz", "has_sig": false, "md5_digest": "60c26ddcd8ca0187e1ae6de576c66e5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20004, "upload_time": "2019-04-04T10:09:08", "upload_time_iso_8601": "2019-04-04T10:09:08.781771Z", "url": "https://files.pythonhosted.org/packages/02/78/7395dc65f43ebdc204355bc88dede98a7acc1a114524b92828e36f9a43bc/pyzil-0.4.4.tar.gz", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "3b5955da0c8b98620a38805030703bde", "sha256": "8d081f72bfdab1a88f75875e25bdc9ce32ed97c30bbc76329b2fe4c30c950385"}, "downloads": -1, "filename": "pyzil-0.4.9-py3-none-any.whl", "has_sig": false, "md5_digest": "3b5955da0c8b98620a38805030703bde", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 829951, "upload_time": "2019-04-09T11:27:23", "upload_time_iso_8601": "2019-04-09T11:27:23.292997Z", "url": "https://files.pythonhosted.org/packages/58/38/94a18f8aefd059f613be4c62cadab1f1fd54c67eae1ae111f5dcd7a0a2d4/pyzil-0.4.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1879e9ed2c634ac79c9803bb3c73ca3", "sha256": "317a2cf681aa5d6ef7738e9081a1ba425b15b25e2913eb2ddb57aa60de6af51c"}, "downloads": -1, "filename": "pyzil-0.4.9.tar.gz", "has_sig": false, "md5_digest": "d1879e9ed2c634ac79c9803bb3c73ca3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22465, "upload_time": "2019-04-09T11:27:24", "upload_time_iso_8601": "2019-04-09T11:27:24.853787Z", "url": "https://files.pythonhosted.org/packages/92/b2/304911e2baac834d85e79cb40ae75b0bff544dfd6c93c774aa3268d9dbd4/pyzil-0.4.9.tar.gz", "yanked": false}], "0.5.23": [{"comment_text": "", "digests": {"md5": "d69143769d600d26da513346514211c5", "sha256": "daf5d88559078ac769da30169c770cd6094441308aff465b7a93a67211ccad6a"}, "downloads": -1, "filename": "pyzil-0.5.23-py3-none-any.whl", "has_sig": false, "md5_digest": "d69143769d600d26da513346514211c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 834035, "upload_time": "2019-05-23T02:48:11", "upload_time_iso_8601": "2019-05-23T02:48:11.413610Z", "url": "https://files.pythonhosted.org/packages/85/8e/8f2e62d4aa3624df2136822dec5444a416f9e1d0553b52103aeb88927a0a/pyzil-0.5.23-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b68b48c0dfef95b3e8490d41ad74f024", "sha256": "616cebd7b70babb3b4f8d89e3ffc633d70b196c96cdb83c7a1354dc602326a71"}, "downloads": -1, "filename": "pyzil-0.5.23.tar.gz", "has_sig": false, "md5_digest": "b68b48c0dfef95b3e8490d41ad74f024", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25050, "upload_time": "2019-05-23T02:48:13", "upload_time_iso_8601": "2019-05-23T02:48:13.362236Z", "url": "https://files.pythonhosted.org/packages/cd/32/4e7a68e5afecd397dcf975ffd1b63e890701c67ded0270c94e25db333f64/pyzil-0.5.23.tar.gz", "yanked": false}], "0.5.25": [{"comment_text": "", "digests": {"md5": "ebbca83a066bc1c51a9fda43c8cfd28b", "sha256": "4622bd330634baab8217d033008fcd047dc1df1fa93568b24ee39df1478b9a63"}, "downloads": -1, "filename": "pyzil-0.5.25-py3-none-any.whl", "has_sig": false, "md5_digest": "ebbca83a066bc1c51a9fda43c8cfd28b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 845456, "upload_time": "2019-05-25T13:16:17", "upload_time_iso_8601": "2019-05-25T13:16:17.994107Z", "url": "https://files.pythonhosted.org/packages/f0/98/075955ab2e976622587a6419c5bc6eda849b02128de621cd25d54505fe42/pyzil-0.5.25-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32ee4cfda53257a1586f3dd09aa6883a", "sha256": "05b1b4483824ad8e13c2b57b3bacb990fd367b3ef08a49ded8114c1f36bb178c"}, "downloads": -1, "filename": "pyzil-0.5.25.tar.gz", "has_sig": false, "md5_digest": "32ee4cfda53257a1586f3dd09aa6883a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26271, "upload_time": "2019-05-25T13:16:20", "upload_time_iso_8601": "2019-05-25T13:16:20.023411Z", "url": "https://files.pythonhosted.org/packages/d6/37/be32c2b093349302da321adc16a08a3685bd7d9941ebcd3f86752ff901c0/pyzil-0.5.25.tar.gz", "yanked": false}], "1.1.10": [{"comment_text": "", "digests": {"md5": "97862ffa24aa161a7a950651861783a2", "sha256": "2459d17304201f4c516f7f476f60a98e35831e83cad8db8e648369acdb3b7819"}, "downloads": -1, "filename": "pyzil-1.1.10-py3-none-any.whl", "has_sig": false, "md5_digest": "97862ffa24aa161a7a950651861783a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 845458, "upload_time": "2020-01-10T13:15:28", "upload_time_iso_8601": "2020-01-10T13:15:28.306466Z", "url": "https://files.pythonhosted.org/packages/2b/97/43bf864f2de2ae3a429e0fedb5e90d2dede709e846df3599dfe19de431fe/pyzil-1.1.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1f3ed2910a392fcc077946e9c9c964b", "sha256": "26a4a7fd4c5f55fe3aca53355b114308de146d799f8453873bb487a34a453c72"}, "downloads": -1, "filename": "pyzil-1.1.10.tar.gz", "has_sig": false, "md5_digest": "a1f3ed2910a392fcc077946e9c9c964b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26263, "upload_time": "2020-01-10T13:15:30", "upload_time_iso_8601": "2020-01-10T13:15:30.382167Z", "url": "https://files.pythonhosted.org/packages/af/c9/eaa8a30c013c30064e3d9bf98f49f76800975e48c8bb3e7b49cbb073df4e/pyzil-1.1.10.tar.gz", "yanked": false}], "1.4.12": [{"comment_text": "", "digests": {"md5": "ebf485f13a97d0ab2c3d7596e1d1f958", "sha256": "4c1439d1a288cf62aa11a73ef29f1b1fe807c8ee8915ce3ea39c9427890937f8"}, "downloads": -1, "filename": "pyzil-1.4.12-py3-none-any.whl", "has_sig": false, "md5_digest": "ebf485f13a97d0ab2c3d7596e1d1f958", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 845525, "upload_time": "2020-04-12T11:21:24", "upload_time_iso_8601": "2020-04-12T11:21:24.988653Z", "url": "https://files.pythonhosted.org/packages/49/a2/4e890ae7349d0af3dec8506d35dbc1a8266269c3c84be528479f0dae0fbe/pyzil-1.4.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "020a81dfd96cd2f43dc662891f7419c3", "sha256": "13f885405f15b856ce3c9e346689efd2f3284c19bc64b2bcd9d29f79d3cb3afe"}, "downloads": -1, "filename": "pyzil-1.4.12.tar.gz", "has_sig": false, "md5_digest": "020a81dfd96cd2f43dc662891f7419c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26387, "upload_time": "2020-04-12T11:21:26", "upload_time_iso_8601": "2020-04-12T11:21:26.740820Z", "url": "https://files.pythonhosted.org/packages/29/06/e6a8f16f94052dfcfd5bd3093061fddeeb301d7f1eb2ec2f8e064b3055f8/pyzil-1.4.12.tar.gz", "yanked": false}], "1.4.16": [{"comment_text": "", "digests": {"md5": "74a52364d7a519ef0d726015bf4f07f6", "sha256": "32648a274c2594231e3e47e5dc66a6e4cae8eb72fe3bb274b7ddfd5ba3f4feff"}, "downloads": -1, "filename": "pyzil-1.4.16-py3-none-any.whl", "has_sig": false, "md5_digest": "74a52364d7a519ef0d726015bf4f07f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 845623, "upload_time": "2020-04-16T14:31:01", "upload_time_iso_8601": "2020-04-16T14:31:01.307115Z", "url": "https://files.pythonhosted.org/packages/b5/a2/e2409f41853535342d16d3f464cc104cb76abb33a0c19505d5aab3f268d0/pyzil-1.4.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a738874f111891a8bdd0a441a8ebb42", "sha256": "7d3fbaab1a84af28f5619359209beb5ff33239d13779a3630a30c28a248bf869"}, "downloads": -1, "filename": "pyzil-1.4.16.tar.gz", "has_sig": false, "md5_digest": "1a738874f111891a8bdd0a441a8ebb42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26425, "upload_time": "2020-04-16T14:31:02", "upload_time_iso_8601": "2020-04-16T14:31:02.707467Z", "url": "https://files.pythonhosted.org/packages/43/2b/03ad2346b3b914f68bc8c43f3d1e3452655e63225ed1592a1c512e0fccad/pyzil-1.4.16.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "74a52364d7a519ef0d726015bf4f07f6", "sha256": "32648a274c2594231e3e47e5dc66a6e4cae8eb72fe3bb274b7ddfd5ba3f4feff"}, "downloads": -1, "filename": "pyzil-1.4.16-py3-none-any.whl", "has_sig": false, "md5_digest": "74a52364d7a519ef0d726015bf4f07f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 845623, "upload_time": "2020-04-16T14:31:01", "upload_time_iso_8601": "2020-04-16T14:31:01.307115Z", "url": "https://files.pythonhosted.org/packages/b5/a2/e2409f41853535342d16d3f464cc104cb76abb33a0c19505d5aab3f268d0/pyzil-1.4.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a738874f111891a8bdd0a441a8ebb42", "sha256": "7d3fbaab1a84af28f5619359209beb5ff33239d13779a3630a30c28a248bf869"}, "downloads": -1, "filename": "pyzil-1.4.16.tar.gz", "has_sig": false, "md5_digest": "1a738874f111891a8bdd0a441a8ebb42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26425, "upload_time": "2020-04-16T14:31:02", "upload_time_iso_8601": "2020-04-16T14:31:02.707467Z", "url": "https://files.pythonhosted.org/packages/43/2b/03ad2346b3b914f68bc8c43f3d1e3452655e63225ed1592a1c512e0fccad/pyzil-1.4.16.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:37 2020"}