{"info": {"author": "Steven Grimm", "author_email": "koreth@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Topic :: Home Automation", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "pycoolmasternet\n===============\nA Python 3 library for interacting with a CoolMasterNet_ HVAC bridge.\n\n.. _CoolMasterNet: https://coolautomation.com/products/coolmasternet/\n\nInstallation\n------------\n`pip install pycoolmasternet`\n\nOr you can get the code from `https://github.com/koreth/pycoolmasternet`\n\nUsage\n-----\n\n.. code-block:: python\n\n    from pycoolmasternet import CoolMasterNet\n\n    # Supply the IP address and optional port number (default 10102).\n    #\n    # By default, properties will be refreshed by querying the device\n    # if last refresh was more than 1 second ago; pass auto_update=False\n    # to disable that behavior (in which case you will need to call\n    # update_status() explicitly).\n    cool = CoolMasterNet('192.168.0.123', port=12345, auto_update=False)\n\n    # Returns a list of CoolMasterDevice objects\n    devices = cool.devices()\n\n    # Device's unit ID on the CoolMasterNet bridge, e.g., \"L7.001\"\n    device.uid\n\n    # Temperature unit: imperial, celsius\n    device.unit\n\n    # Current reading of device's thermometer\n    device.temperature\n\n    # Current setting of device's thermostat\n    device.thermostat\n    device.set_thermostat(28)\n\n    # True if device is turned on\n    device.is_on\n    device.turn_on()\n    device.turn_off()\n\n    # Fan speed: low, med, high\n    device.fan_speed\n    device.set_fan_speed('med')\n\n    # Mode of operation: auto, cool, dry, fan, heat\n    device.mode\n    device.set_mode('cool')\n\n    # Swing mode: horizontal, vertical, auto, 30, 45, 60, stop\n    # Numeric settings are degrees of louver tilt. On read, the property can\n    # be None if the bridge reports that the device doesn't support swing.\n    device.swing\n    device.set_swing('30')\n\n    # Dict with all the properties listed above\n    device.status\n\n    # Force refresh of status (by default, device auto-updates its status\n    # if most recent update is more than 1 second ago)\n    device.update_status()\n\nLicense\n-------\nThis code is released under the MIT license.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/koreth/pycoolmasternet", "keywords": "hvac homeautomation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pycoolmasternet", "package_url": "https://pypi.org/project/pycoolmasternet/", "platform": "", "project_url": "https://pypi.org/project/pycoolmasternet/", "project_urls": {"Homepage": "http://github.com/koreth/pycoolmasternet"}, "release_url": "https://pypi.org/project/pycoolmasternet/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Lightweight Python API for CoolMasterNet HVAC bridges", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python 3 library for interacting with a <a href=\"https://coolautomation.com/products/coolmasternet/\" rel=\"nofollow\">CoolMasterNet</a> HVAC bridge.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><cite>pip install pycoolmasternet</cite></p>\n<p>Or you can get the code from <cite>https://github.com/koreth/pycoolmasternet</cite></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycoolmasternet</span> <span class=\"kn\">import</span> <span class=\"n\">CoolMasterNet</span>\n\n<span class=\"c1\"># Supply the IP address and optional port number (default 10102).</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># By default, properties will be refreshed by querying the device</span>\n<span class=\"c1\"># if last refresh was more than 1 second ago; pass auto_update=False</span>\n<span class=\"c1\"># to disable that behavior (in which case you will need to call</span>\n<span class=\"c1\"># update_status() explicitly).</span>\n<span class=\"n\">cool</span> <span class=\"o\">=</span> <span class=\"n\">CoolMasterNet</span><span class=\"p\">(</span><span class=\"s1\">'192.168.0.123'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">12345</span><span class=\"p\">,</span> <span class=\"n\">auto_update</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Returns a list of CoolMasterDevice objects</span>\n<span class=\"n\">devices</span> <span class=\"o\">=</span> <span class=\"n\">cool</span><span class=\"o\">.</span><span class=\"n\">devices</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Device's unit ID on the CoolMasterNet bridge, e.g., \"L7.001\"</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">uid</span>\n\n<span class=\"c1\"># Temperature unit: imperial, celsius</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">unit</span>\n\n<span class=\"c1\"># Current reading of device's thermometer</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">temperature</span>\n\n<span class=\"c1\"># Current setting of device's thermostat</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">thermostat</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">set_thermostat</span><span class=\"p\">(</span><span class=\"mi\">28</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># True if device is turned on</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">is_on</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">turn_on</span><span class=\"p\">()</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">turn_off</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Fan speed: low, med, high</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">fan_speed</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">set_fan_speed</span><span class=\"p\">(</span><span class=\"s1\">'med'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Mode of operation: auto, cool, dry, fan, heat</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">mode</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">set_mode</span><span class=\"p\">(</span><span class=\"s1\">'cool'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Swing mode: horizontal, vertical, auto, 30, 45, 60, stop</span>\n<span class=\"c1\"># Numeric settings are degrees of louver tilt. On read, the property can</span>\n<span class=\"c1\"># be None if the bridge reports that the device doesn't support swing.</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">swing</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">set_swing</span><span class=\"p\">(</span><span class=\"s1\">'30'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Dict with all the properties listed above</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">status</span>\n\n<span class=\"c1\"># Force refresh of status (by default, device auto-updates its status</span>\n<span class=\"c1\"># if most recent update is more than 1 second ago)</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">update_status</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This code is released under the MIT license.</p>\n</div>\n\n          </div>"}, "last_serial": 4832293, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "21f2cede2f7f2cdd0b89f6a200736b53", "sha256": "91b8be81b32908dee0d3f80bf1b814081bea6ce8a4e2edfc08c147e522bc34e0"}, "downloads": -1, "filename": "pycoolmasternet-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "21f2cede2f7f2cdd0b89f6a200736b53", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5207, "upload_time": "2017-09-04T20:31:22", "upload_time_iso_8601": "2017-09-04T20:31:22.388006Z", "url": "https://files.pythonhosted.org/packages/c0/67/fb4dac3c231f3bcb2ec2448204becaa5d2e3560423bed3288f4191ecdbae/pycoolmasternet-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da2bf11b1b170fdc70d11e583e9bc604", "sha256": "5bf43df1ac684f785e7b9aba72c4a0cd42ea7c11851f2675fa1793627118ba24"}, "downloads": -1, "filename": "pycoolmasternet-0.0.1.tar.gz", "has_sig": false, "md5_digest": "da2bf11b1b170fdc70d11e583e9bc604", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3375, "upload_time": "2017-09-04T20:31:24", "upload_time_iso_8601": "2017-09-04T20:31:24.480856Z", "url": "https://files.pythonhosted.org/packages/6c/ab/2a8a2ef21fdb535f6bd5499016aa178c4f193c817fefa7a1d6b92f7f9f05/pycoolmasternet-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "810ee0543cc4285ab55ead5da69d4ce4", "sha256": "58bdff55d71b44092e02fe56cd122c499549adc18051efcf0e2c72f43acc12e6"}, "downloads": -1, "filename": "pycoolmasternet-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "810ee0543cc4285ab55ead5da69d4ce4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5417, "upload_time": "2017-09-04T22:05:47", "upload_time_iso_8601": "2017-09-04T22:05:47.851553Z", "url": "https://files.pythonhosted.org/packages/2e/11/14dbe320d792ddd7bfec638f904d85ae24a51d9c023a138e9e8224a5e77e/pycoolmasternet-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2e05ec0ea8e5087d4bd35d82f66cc3d", "sha256": "d4084695799dcb46f975274c1d2ab5ad7d2752b57c235b9f1dad73b98bd4a88a"}, "downloads": -1, "filename": "pycoolmasternet-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f2e05ec0ea8e5087d4bd35d82f66cc3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3522, "upload_time": "2017-09-04T22:05:49", "upload_time_iso_8601": "2017-09-04T22:05:49.020092Z", "url": "https://files.pythonhosted.org/packages/f3/98/7644d0a3a16c69a3c100243448370e39ecd78f260a584f20997f1c8527b9/pycoolmasternet-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0d5a3a4b63a33fa863cd557b79df814a", "sha256": "752e154214dc2cdd70d35507b638b9caa6450dddefed2bddd43d74a9c9878fbd"}, "downloads": -1, "filename": "pycoolmasternet-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0d5a3a4b63a33fa863cd557b79df814a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3496, "upload_time": "2019-02-06T07:16:01", "upload_time_iso_8601": "2019-02-06T07:16:01.779879Z", "url": "https://files.pythonhosted.org/packages/16/31/b3f61ab07d3fc9170264c38a3220bcaec423d6cab76f28dc671065882f65/pycoolmasternet-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b8548aea092139b0ee938e4b179081c2", "sha256": "6632e5cfcc63d5a0ff05be2c3239cb4ac09abee1cdd453970a7a9fb887a5b08e"}, "downloads": -1, "filename": "pycoolmasternet-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b8548aea092139b0ee938e4b179081c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3499, "upload_time": "2019-02-06T07:34:51", "upload_time_iso_8601": "2019-02-06T07:34:51.700256Z", "url": "https://files.pythonhosted.org/packages/00/d0/a06fd16c25cc7d261d2468cc10c0aac156c02c088a17a1544805eaaee9bb/pycoolmasternet-0.0.4.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "422756e20855c0dbe3d746dbe381eba2", "sha256": "7585d01cb3ee6ff2b5723b9b7bb68fa5612e42179ed4a808725b38aaf798ee8e"}, "downloads": -1, "filename": "pycoolmasternet-0.1.0.tar.gz", "has_sig": false, "md5_digest": "422756e20855c0dbe3d746dbe381eba2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3827, "upload_time": "2019-02-17T18:57:59", "upload_time_iso_8601": "2019-02-17T18:57:59.263475Z", "url": "https://files.pythonhosted.org/packages/99/36/df0cd5a054b8f211f2a9f1e8e99ed286362b9c1158a69d6e444e2626358d/pycoolmasternet-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b4a0e7dedb15f16688df13aeb980e690", "sha256": "44c556b7ccb207e98a75d953925a7f08c395d9bd1deeb5dc6ca9ec8782ea9ff1"}, "downloads": -1, "filename": "pycoolmasternet-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b4a0e7dedb15f16688df13aeb980e690", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4274, "upload_time": "2019-02-17T20:37:00", "upload_time_iso_8601": "2019-02-17T20:37:00.857582Z", "url": "https://files.pythonhosted.org/packages/31/06/48322d5f9ee5a56c9d959808ba7f7a1adb8ec845a3949ee92eff1e6985ab/pycoolmasternet-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b4a0e7dedb15f16688df13aeb980e690", "sha256": "44c556b7ccb207e98a75d953925a7f08c395d9bd1deeb5dc6ca9ec8782ea9ff1"}, "downloads": -1, "filename": "pycoolmasternet-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b4a0e7dedb15f16688df13aeb980e690", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4274, "upload_time": "2019-02-17T20:37:00", "upload_time_iso_8601": "2019-02-17T20:37:00.857582Z", "url": "https://files.pythonhosted.org/packages/31/06/48322d5f9ee5a56c9d959808ba7f7a1adb8ec845a3949ee92eff1e6985ab/pycoolmasternet-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:04 2020"}