{"info": {"author": "Paul D. Mendes", "author_email": "pauldmendes@yahoo.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\nhttps://setuptools.readthedocs.io/en/latest/setuptools.html#develop-deploy-the-project-source-in-development-mode\nhttps://github.com/navdeep-G/setup.py\n\n`python setup.py develop`\n```python\nurl = 'https://www.google.com'\n\n# Instantiate the class which wraps selenium webdriver base class, with an event listener for debugging\n# and an automatic webdriver manager\nws = WebScraper()\n# Setup_driver takes care of downloading the latest chrome binary. You must call this to start the chrome browser.\n# By default, setup_driver will look for the path to the chrome binary first in an environment variable CHROMEDRIVER_PATH\n# This variable is specific to Heroku deployments. If that is not set, it will download the\n# latest chrome binary and save it to the project root directory.\n# The browser will also not be headless.\nws.setup_driver()\n\n# To override the defaults simply pass it keyword arguments.\n# ws.setup_driver(chrome_driver_path='/absolute/path/to/a/directory/to/save/chromedriver/in',\n#                 headless=True,\n#                 version=\"2.26\")\n\n# If you want to setup a driver the old fashioned way, then you can point to an already installed version of chromedriver to use\n# ws.setup_driver(chrome_driver_bin='/absolute/path/to/a/directory/to/save/chromedriver/in/chromedriver')\n\n# ws.setup_driver(chrome_driver_bin='/Users/home/PycharmProjects/seleniumX/seleniumX/drivers/drivers/chromedriver/2.26/mac64/chromedriver')\nws.driver.get(url)\n\n# Avoid bot detections\nws.random_sleep()  # Default is 5 - 10 seconds\nws.random_sleep(sleep_range=(1, 2))  # or you can pass a tuple of a different range.\n\n# Access the driver like normal.\nelement = ws.driver.find_element_by_name(\"q\")\n\n# Use random key inputs to prevent bot detection\nws.random_send_keys(\"Hello World\", element)\n# lucky_btn = ws.driver.find_element_by_name(\"btnI\")\nsearch_btn = ws.driver.find_element_by_name(\"btnK\")\nsearch_btn.click()\n\n# Shortened Webdriver wait class.\nws.wait().until(EC.title_contains(\"Hello World\"))\n\n# Quickly grab all the unique links from a webpage\nws.get_all_unique_links()\n\n# Js Functions\nws.js_scroll_to_bottom()\nelement = ws.driver.find_element_by_name('g')\nws.js_scroll_into_view(element)\n\n# Save a screenshot, by default will take the page title name as filename\nws.save_screenshot()\n# Or pass it a filename\nws.save_screenshot(\"Googlesearchresults\")\n\n# Returns various info about the driver and page.\nws.get_info()\n\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/GrilledChickenThighs/seleniumX", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "seleniumx", "package_url": "https://pypi.org/project/seleniumx/", "platform": "", "project_url": "https://pypi.org/project/seleniumx/", "project_urls": {"Homepage": "https://github.com/GrilledChickenThighs/seleniumX"}, "release_url": "https://pypi.org/project/seleniumx/0.1.1/", "requires_dist": ["webdriver-manager (==2.2.0)", "selenium (==3.141.0)"], "requires_python": ">=3.6.0", "summary": "Selenium extension", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://setuptools.readthedocs.io/en/latest/setuptools.html#develop-deploy-the-project-source-in-development-mode\" rel=\"nofollow\">https://setuptools.readthedocs.io/en/latest/setuptools.html#develop-deploy-the-project-source-in-development-mode</a>\n<a href=\"https://github.com/navdeep-G/setup.py\" rel=\"nofollow\">https://github.com/navdeep-G/setup.py</a></p>\n<p><code>python setup.py develop</code></p>\n<pre><span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://www.google.com'</span>\n\n<span class=\"c1\"># Instantiate the class which wraps selenium webdriver base class, with an event listener for debugging</span>\n<span class=\"c1\"># and an automatic webdriver manager</span>\n<span class=\"n\">ws</span> <span class=\"o\">=</span> <span class=\"n\">WebScraper</span><span class=\"p\">()</span>\n<span class=\"c1\"># Setup_driver takes care of downloading the latest chrome binary. You must call this to start the chrome browser.</span>\n<span class=\"c1\"># By default, setup_driver will look for the path to the chrome binary first in an environment variable CHROMEDRIVER_PATH</span>\n<span class=\"c1\"># This variable is specific to Heroku deployments. If that is not set, it will download the</span>\n<span class=\"c1\"># latest chrome binary and save it to the project root directory.</span>\n<span class=\"c1\"># The browser will also not be headless.</span>\n<span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">setup_driver</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># To override the defaults simply pass it keyword arguments.</span>\n<span class=\"c1\"># ws.setup_driver(chrome_driver_path='/absolute/path/to/a/directory/to/save/chromedriver/in',</span>\n<span class=\"c1\">#                 headless=True,</span>\n<span class=\"c1\">#                 version=\"2.26\")</span>\n\n<span class=\"c1\"># If you want to setup a driver the old fashioned way, then you can point to an already installed version of chromedriver to use</span>\n<span class=\"c1\"># ws.setup_driver(chrome_driver_bin='/absolute/path/to/a/directory/to/save/chromedriver/in/chromedriver')</span>\n\n<span class=\"c1\"># ws.setup_driver(chrome_driver_bin='/Users/home/PycharmProjects/seleniumX/seleniumX/drivers/drivers/chromedriver/2.26/mac64/chromedriver')</span>\n<span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Avoid bot detections</span>\n<span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">random_sleep</span><span class=\"p\">()</span>  <span class=\"c1\"># Default is 5 - 10 seconds</span>\n<span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">random_sleep</span><span class=\"p\">(</span><span class=\"n\">sleep_range</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>  <span class=\"c1\"># or you can pass a tuple of a different range.</span>\n\n<span class=\"c1\"># Access the driver like normal.</span>\n<span class=\"n\">element</span> <span class=\"o\">=</span> <span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">find_element_by_name</span><span class=\"p\">(</span><span class=\"s2\">\"q\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Use random key inputs to prevent bot detection</span>\n<span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">random_send_keys</span><span class=\"p\">(</span><span class=\"s2\">\"Hello World\"</span><span class=\"p\">,</span> <span class=\"n\">element</span><span class=\"p\">)</span>\n<span class=\"c1\"># lucky_btn = ws.driver.find_element_by_name(\"btnI\")</span>\n<span class=\"n\">search_btn</span> <span class=\"o\">=</span> <span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">find_element_by_name</span><span class=\"p\">(</span><span class=\"s2\">\"btnK\"</span><span class=\"p\">)</span>\n<span class=\"n\">search_btn</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Shortened Webdriver wait class.</span>\n<span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">until</span><span class=\"p\">(</span><span class=\"n\">EC</span><span class=\"o\">.</span><span class=\"n\">title_contains</span><span class=\"p\">(</span><span class=\"s2\">\"Hello World\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Quickly grab all the unique links from a webpage</span>\n<span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">get_all_unique_links</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Js Functions</span>\n<span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">js_scroll_to_bottom</span><span class=\"p\">()</span>\n<span class=\"n\">element</span> <span class=\"o\">=</span> <span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">find_element_by_name</span><span class=\"p\">(</span><span class=\"s1\">'g'</span><span class=\"p\">)</span>\n<span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">js_scroll_into_view</span><span class=\"p\">(</span><span class=\"n\">element</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save a screenshot, by default will take the page title name as filename</span>\n<span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">save_screenshot</span><span class=\"p\">()</span>\n<span class=\"c1\"># Or pass it a filename</span>\n<span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">save_screenshot</span><span class=\"p\">(</span><span class=\"s2\">\"Googlesearchresults\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Returns various info about the driver and page.</span>\n<span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">get_info</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6913986, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "10bc5ca1e7d1972dc898c981acc04fcd", "sha256": "fe2ced1219cb9b8f23c84fca5b533702560b761987cb518b1b22c28e3ad16e65"}, "downloads": -1, "filename": "seleniumx-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "10bc5ca1e7d1972dc898c981acc04fcd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 9486, "upload_time": "2019-12-02T13:10:16", "upload_time_iso_8601": "2019-12-02T13:10:16.020384Z", "url": "https://files.pythonhosted.org/packages/82/eb/cf6820376b2beeaa0992397c65415173d1050d76382c2808836f1ba229b8/seleniumx-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62083ffbf77446ccecf41a9b15609c1e", "sha256": "9687b6319401cc759780dba105b0f1fb87e517a574cc48b8597472f1f8872998"}, "downloads": -1, "filename": "seleniumx-0.1.0.tar.gz", "has_sig": false, "md5_digest": "62083ffbf77446ccecf41a9b15609c1e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 9235, "upload_time": "2019-12-02T13:10:18", "upload_time_iso_8601": "2019-12-02T13:10:18.417330Z", "url": "https://files.pythonhosted.org/packages/ad/ed/86d9f0b275b5ca1c58f5eaa45e3cf12856db8d0d992f8d5e544cdb5377b5/seleniumx-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1873816c5eac7c02398fedb849cad2e4", "sha256": "5aeb0a2455c3b0002edd54e5defbb58c01c841dbdb84e6de9c0e24240c4135de"}, "downloads": -1, "filename": "seleniumx-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1873816c5eac7c02398fedb849cad2e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 9531, "upload_time": "2020-03-30T16:01:23", "upload_time_iso_8601": "2020-03-30T16:01:23.437224Z", "url": "https://files.pythonhosted.org/packages/f5/55/c7990ddac7695df16b2b39abc4d2b6a5a7cc027d6d6e3cfb32e6813ed04a/seleniumx-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d504c55d9fea29001eda19e5802ba648", "sha256": "1dc57b47e45b484787fe9befbb20ce561d8ecbceed82e27d3bc2c5cbe625f767"}, "downloads": -1, "filename": "seleniumx-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d504c55d9fea29001eda19e5802ba648", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 9249, "upload_time": "2020-03-30T16:01:24", "upload_time_iso_8601": "2020-03-30T16:01:24.692204Z", "url": "https://files.pythonhosted.org/packages/3c/f0/bcb8565ef4cdaf1dc1886a552e36b7090c0c515a7722e9df20c3afd254da/seleniumx-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1873816c5eac7c02398fedb849cad2e4", "sha256": "5aeb0a2455c3b0002edd54e5defbb58c01c841dbdb84e6de9c0e24240c4135de"}, "downloads": -1, "filename": "seleniumx-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1873816c5eac7c02398fedb849cad2e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 9531, "upload_time": "2020-03-30T16:01:23", "upload_time_iso_8601": "2020-03-30T16:01:23.437224Z", "url": "https://files.pythonhosted.org/packages/f5/55/c7990ddac7695df16b2b39abc4d2b6a5a7cc027d6d6e3cfb32e6813ed04a/seleniumx-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d504c55d9fea29001eda19e5802ba648", "sha256": "1dc57b47e45b484787fe9befbb20ce561d8ecbceed82e27d3bc2c5cbe625f767"}, "downloads": -1, "filename": "seleniumx-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d504c55d9fea29001eda19e5802ba648", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 9249, "upload_time": "2020-03-30T16:01:24", "upload_time_iso_8601": "2020-03-30T16:01:24.692204Z", "url": "https://files.pythonhosted.org/packages/3c/f0/bcb8565ef4cdaf1dc1886a552e36b7090c0c515a7722e9df20c3afd254da/seleniumx-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:27 2020"}