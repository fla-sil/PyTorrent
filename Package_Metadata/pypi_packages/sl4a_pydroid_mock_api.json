{"info": {"author": "Ben Rousch", "author_email": "brousch@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: MacOS X", "Environment :: Win32 (MS Windows)", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.6"], "description": "A Mock API for SL4A's Python Android API\n========================================\n\nThis project provides an API to mimic the Python API provided by the `Scripting\nLanguage for Android`_ project. The SL4A Android API can only be run on an\nactual Android device, which can make development cumbersome. This project\nprovides an API very similar to the one on Android, but it is designed for use\non a desktop operating system such as Linux, OSX, and Windows.\n\nThe SL4A Android API is very large and allows you to interact with almost\nevery part of the Android operating system. For each of these features I have\nto find a similar desktop feature and hook into it. Sometimes there is nothing\nsimilar available. Because of this, this project will likely never be able to \nemulate every piece of the API.\n\nI am building this project as I come across SL4A Python API features that I\nneed to use. At the present time, I am not attempting to simulate the entire \nAPI. If you need a feature that hasn't yet been implemented, please fork this \nproject, code it up, and make a pull request. Your contributions will be \nwelcomed. \n\n.. _`Scripting Language for Android`: http://code.google.com/p/android-scripting/\n\nInstallation\n------------\n\nFrom your SL4A project's virtualenv: *pip install sl4a_pydroid_api*\n\nThis creates an *android* module which you can import just like a regular\nSL4A project.\n\nFurther Instructions for Text To Speech (ttsSpeak)\n--------------------------------------------------\n\nOn OSX, it uses the built-in 'say' program. No other action is necessary. If \nfor some strange reason 'say' is missing, you can also install and use \n`espeak`_.\n\nOn Linux, you can install and use `espeak`_ or `flite`_.\n\nOn Windows, you can install and use `espeak`_.\n\nIf no TTS program can be found, it will default to printing the message to the\nconsole.\n\nSpecial thanks to\n-------\n\n- `androidhelper`_\n- `modern-package-template`_\n\n.. _espeak: http://espeak.sourceforge.net/\n.. _flite: http://www.speech.cs.cmu.edu/flite/\n.. _androidhelper: https://groups.google.com/forum/?fromgroups#!topic/python-for-android/a26ponFlgho\n.. _`modern-package-template`: http://pypi.python.org/pypi/modern-package-template\n\n\n\nNews\n====\n\n0.4.1\n-----\n\n*Release date: 4-Oct-2012\n\n* Added espeak support to ttsSpeak for OSX, Linux, and Windows\n\n0.4\n---\n\n*Release date: 4-Oct-2012\n\n* Refactor of ttsSpeak due to no longer using PyTTSx\n* Added a Makefile for repetative tasks\n\n0.3\n---\n\n*Release date: 22-Jul-2012\n\n* Added code supplied by clach04:\n* Made pyttsx optional with a nosound fallback (echoes to output)\n* Added docstrings for all Android methods from androidhelper project\n\n0.2\n---\n\n*Release date: 16-Jul-2012*\n\n* Added support for makeToast via a Tkinter window.\n* Added a shim module for TTS on OSX since I couldn't get PyTTSx working\n  outside of the OSX system Python.\n\n0.1\n---\n\n*Release date: 15-Jun-2012*\n\n* This initial release of the project includes a working implementation of the \n  **ttsSpeak** method using PyTTSx. It also includes partial implementations \n  of the **ttsIsSpeaking** and **recognizeSpeech** functions. See the \n  SIMULATED_FUNCTIONS.TXT file for more details.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/brousch/sl4a_pydroid_mock_api", "keywords": "sl4a android api", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "sl4a_pydroid_mock_api", "package_url": "https://pypi.org/project/sl4a_pydroid_mock_api/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/sl4a_pydroid_mock_api/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/brousch/sl4a_pydroid_mock_api"}, "release_url": "https://pypi.org/project/sl4a_pydroid_mock_api/0.4.1/", "requires_dist": null, "requires_python": null, "summary": "Simulates the SL4A Python API for Android", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            A Mock API for SL4A's Python Android API<br>========================================<br><br>This project provides an API to mimic the Python API provided by the `Scripting<br>Language for Android`_ project. The SL4A Android API can only be run on an<br>actual Android device, which can make development cumbersome. This project<br>provides an API very similar to the one on Android, but it is designed for use<br>on a desktop operating system such as Linux, OSX, and Windows.<br><br>The SL4A Android API is very large and allows you to interact with almost<br>every part of the Android operating system. For each of these features I have<br>to find a similar desktop feature and hook into it. Sometimes there is nothing<br>similar available. Because of this, this project will likely never be able to <br>emulate every piece of the API.<br><br>I am building this project as I come across SL4A Python API features that I<br>need to use. At the present time, I am not attempting to simulate the entire <br>API. If you need a feature that hasn't yet been implemented, please fork this <br>project, code it up, and make a pull request. Your contributions will be <br>welcomed. <br><br>.. _`Scripting Language for Android`: http://code.google.com/p/android-scripting/<br><br>Installation<br>------------<br><br>From your SL4A project's virtualenv: *pip install sl4a_pydroid_api*<br><br>This creates an *android* module which you can import just like a regular<br>SL4A project.<br><br>Further Instructions for Text To Speech (ttsSpeak)<br>--------------------------------------------------<br><br>On OSX, it uses the built-in 'say' program. No other action is necessary. If <br>for some strange reason 'say' is missing, you can also install and use <br>`espeak`_.<br><br>On Linux, you can install and use `espeak`_ or `flite`_.<br><br>On Windows, you can install and use `espeak`_.<br><br>If no TTS program can be found, it will default to printing the message to the<br>console.<br><br>Special thanks to<br>-------<br><br>- `androidhelper`_<br>- `modern-package-template`_<br><br>.. _espeak: http://espeak.sourceforge.net/<br>.. _flite: http://www.speech.cs.cmu.edu/flite/<br>.. _androidhelper: https://groups.google.com/forum/?fromgroups#!topic/python-for-android/a26ponFlgho<br>.. _`modern-package-template`: http://pypi.python.org/pypi/modern-package-template<br><br><br><br>News<br>====<br><br>0.4.1<br>-----<br><br>*Release date: 4-Oct-2012<br><br>* Added espeak support to ttsSpeak for OSX, Linux, and Windows<br><br>0.4<br>---<br><br>*Release date: 4-Oct-2012<br><br>* Refactor of ttsSpeak due to no longer using PyTTSx<br>* Added a Makefile for repetative tasks<br><br>0.3<br>---<br><br>*Release date: 22-Jul-2012<br><br>* Added code supplied by clach04:<br>* Made pyttsx optional with a nosound fallback (echoes to output)<br>* Added docstrings for all Android methods from androidhelper project<br><br>0.2<br>---<br><br>*Release date: 16-Jul-2012*<br><br>* Added support for makeToast via a Tkinter window.<br>* Added a shim module for TTS on OSX since I couldn't get PyTTSx working<br>  outside of the OSX system Python.<br><br>0.1<br>---<br><br>*Release date: 15-Jun-2012*<br><br>* This initial release of the project includes a working implementation of the <br>  **ttsSpeak** method using PyTTSx. It also includes partial implementations <br>  of the **ttsIsSpeaking** and **recognizeSpeech** functions. See the <br>  SIMULATED_FUNCTIONS.TXT file for more details.\n          </div>"}, "last_serial": 799650, "releases": {"0.1": [], "0.2": [{"comment_text": "", "digests": {"md5": "11da95bfcdcefcb4d4d06312fb9d79f8", "sha256": "6bc4361a615758732243edb277860b415f7672390f1aab8b521856f29518022d"}, "downloads": -1, "filename": "sl4a_pydroid_mock_api-0.2.tar.gz", "has_sig": false, "md5_digest": "11da95bfcdcefcb4d4d06312fb9d79f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5780, "upload_time": "2012-07-16T21:38:54", "upload_time_iso_8601": "2012-07-16T21:38:54.360916Z", "url": "https://files.pythonhosted.org/packages/09/34/88496a1eaf3d8bb12d0904fb83e66a2c948589c6908d9b82aa5045d543fb/sl4a_pydroid_mock_api-0.2.tar.gz", "yanked": false}], "0.3": [], "0.4": [{"comment_text": "", "digests": {"md5": "0c4ecc49406b0a1a9c04caad2a02040f", "sha256": "3da60200fea78a61c72ea21ad7da8c7b18ad7027d34c2716eae62fd59ed61c1f"}, "downloads": -1, "filename": "sl4a_pydroid_mock_api-0.4.tar.gz", "has_sig": false, "md5_digest": "0c4ecc49406b0a1a9c04caad2a02040f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34003, "upload_time": "2012-10-04T15:54:13", "upload_time_iso_8601": "2012-10-04T15:54:13.036933Z", "url": "https://files.pythonhosted.org/packages/4c/97/b64697863284fea636bd2a709b39c373fe44715b3f6050653f701fd9466b/sl4a_pydroid_mock_api-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "3a9371d7bb6f68e9b741dea9c93ca108", "sha256": "2d63877fdac83562e834fc0eb65a8dad8b665eeccd03b2dcfa34a12c9d9c3653"}, "downloads": -1, "filename": "sl4a_pydroid_mock_api-0.4.1.tar.gz", "has_sig": false, "md5_digest": "3a9371d7bb6f68e9b741dea9c93ca108", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34285, "upload_time": "2012-10-04T18:38:26", "upload_time_iso_8601": "2012-10-04T18:38:26.241591Z", "url": "https://files.pythonhosted.org/packages/95/3b/0b1fae1c16706ea26b550fab0236a16e682a401aa8cab1bb7096d48e00b6/sl4a_pydroid_mock_api-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3a9371d7bb6f68e9b741dea9c93ca108", "sha256": "2d63877fdac83562e834fc0eb65a8dad8b665eeccd03b2dcfa34a12c9d9c3653"}, "downloads": -1, "filename": "sl4a_pydroid_mock_api-0.4.1.tar.gz", "has_sig": false, "md5_digest": "3a9371d7bb6f68e9b741dea9c93ca108", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34285, "upload_time": "2012-10-04T18:38:26", "upload_time_iso_8601": "2012-10-04T18:38:26.241591Z", "url": "https://files.pythonhosted.org/packages/95/3b/0b1fae1c16706ea26b550fab0236a16e682a401aa8cab1bb7096d48e00b6/sl4a_pydroid_mock_api-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:45 2020"}