{"info": {"author": "Pedro Tome", "author_email": "pedro.tome@idiap.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Framework :: Bob", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python", "Topic :: Scientific/Engineering"], "description": "========================================\nSpoofing Attack to Palm vein Recognition\n========================================\n\nThis package provides the source code to run the experiments published in the paper `On the Vulnerability of Palm Vein Recognition to Spoofing Attacks <http://publications.idiap.ch/index.php/publications/show/3096>`_.\nIt relies on the PalmveinRecLib_ to execute the palmvein recognition experiments, and some satellite packages from Bob_ to compute the evaluation. \n\n.. note::\n  Currently, this package only works in Unix-like environments and under MacOS.\n  Due to limitations of the Bob_ library, MS Windows operating systems are not supported.\n  We are working on a port of Bob_ for MS Windows, but it might take a while.\n  In the meanwhile you could use our VirtualBox_ images that can be downloaded `here <http://www.idiap.ch/software/bob/images>`_.\n\n\nInstallation\n============\nThe installation of this package relies on the `BuildOut <http://www.buildout.org>`_ system. By default, the command line sequence::\n\n  $ ./python bootstrap-buildout.py\n  $ ./bin/buildout\n\nshould download and install all requirements, including the PalmveinRecLib_, the database interface `bob.db.verapalm <http://pypi.python.org/pypi/bob.db.vera>`_, the Spoofing evaluation framework `antispoofing.evaluation <http://pypi.python.org/pypi/antispoofing.evaluation>`_ and all their required packages.\nThere are a few exceptions, which are not automatically downloaded:\n\nBob\n---\nThe face recognition experiments rely on the open source signal-processing and machine learning toolbox Bob_.\nTo install Bob_, please visit http://www.idiap.ch/software/bob and follow the installation instructions.\nPlease verify that you have at least version 2.0 of Bob installed.\nIf you have installed Bob in a non-standard directory, please open the buildout.cfg file from the base directory and set the ``prefixes`` directory accordingly.\n\n.. note::\n  The experiments that we report in the Paper_ were generated with Bob_ version 2.0 and PalmveinRecLib_ version 2.0.0.\n  If you use different versions of either of these packages, the results might differ slightly.\n  For example, we are aware that, due to some initialization differences, the results using Bob 1.2.0 and 1.2.1 are not identical, but similar.\n\n\nImage Databases\n---------------\nThe experiments are run on external image databases.\nWe do not provide the images from the databases themselves.\nHence, please contact the database owners to obtain a copy of the images.\nThe two databases used in our experiments can be downloaded here:\n\n- VERA Palmvein [``vera``]: http://www.idiap.ch/dataset/vera-palmvein\n- VERA SpoofingPalmvein [``vera``]: http://www.idiap.ch/dataset/vera-spoofingpalmvein\n\n.. note::\n  For the experiments you have to create a unique directory (example: vera) and two subdirectories (vera/Palmvein) and (vera/SpoofingPalmvein) that contain the databases.\n  After downloading the databases, you will need to tell our software, where it can find them by changing the **configuration files**.\n  In particular, please update the ``--imagedir`` to indicate the directory of the images in **bob.db.verapalm**.\n\n\nPlease let all other configuration parameters unchanged as this might influence the face recognition experiments and, hence, the reproducibility of the results.\n\nGetting help\n------------\nIn case anything goes wrong, please feel free to open a new ticket in our GitLab_ page, or send an email to pedro.tome@idiap.ch.\n\n\nRecreating the results of the Paper_\n====================================\n\nAfter successfully setting up the databases, you are now able to run the palmvein recognition and spoofing attack experiments as explained in the Paper_.\n\nThe experiment configuration\n----------------------------\nThe palmvein recognition experiment are run using the **bob.palmvein** package, but for convenience there exists a wrapper script that set up the right parametrization for the call to the PalmveinRecLib_.\nThe configuration files that are used by the PalmveinRecLib_, which contain all the parameters of the experiments, can be found in the **bob.palmvein/bob/palmvein/configurations** directory. \n\nRunning the experiments\n-----------------------\nThis script can be found in ``bin/icb2015_palmvein_NOMandSpoofingAttack.py``.\nIt requires some command line options, which you can list using ``./bin/icb2015_palmvein_NOMandSpoofingAttack.py --help``.\nUsually, the command line options have a long version (starting with ``--``) and a shortcut (starting with a single ``-``), here we use only the long versions:\n\n- ``--database``: Specify the name of the databases to run experiments on. (default: ``verapalm``).\n- ``--preprocessing``: Specify the image preprocessing to run; the preprocessors will automatically assigned to the according experiment. Possible value is ``palmvein-preprocessor``.\n- ``--features``: Specify the features to run the experimetns. By default, the feature selected is the 'lbp-linearbinarypatterns' local binary patterns - LBP.\n- ``--tool``: Specify the matcher to run the experimetns. By default, the match-lbp is selected.\n- ``--protocols``: Specify a list of protocols that you want to run. Possible values are ``NOM50`` and ``SpoofingAttack50``. By default, all protocols are used.\n- ``--dry-run``: Use this option to print the calls to the PalmveinRecLib_ without executing them.\n- ``--temp-directory``: Specify a directory where temporary files will be stored (default: ``temp``). This directory can be deleted after all experiments ran successfully.\n- ``--result-directory``: Specify a directory where final result files will be stored (default: ``results``). This directory is required to evaluate the experiments.\n\nAdditionally, you can pass options directly to the PalmveinRecLib_, but you should do that with care.\nSimply use ``--`` to separate options to the ``bin/icb2015_palmvein_NOMandSpoofingAttack.py`` from options to the PalmveinRecLib_.\nFor example, the ``--force`` option might be of interest.\nSee ``./bin/palmveinverify.py --help`` for a complete list of options.\n\nIt is advisable to use the ``--dry-run`` option before actually running the experiments, just to see that everything is correct.\nAlso, the Info (2) verbosity level prints useful information, e.g., by adding the ``--verbose --verbose`` (or shortly ``-vv``) on the command line.\nA commonly used command line sequence to execute the face recognition algorithm on both databases could be:\n\n1. Run the experiments on the VERA Palm database::\n\n    $ ./bin/icb2015_palmvein_NOMandSpoofingAttack.py -vv --databases verapalm\n\n.. note::\n  All output directories of the scripts will be automatically generated if they do not exist yet.\n\n.. warning::\n  The execution of the script may take a long time and require large amounts of memory.\n  Nevertheless, the scripts are set up such that they re-use all parts of the experiments as far as this is possible.\n\n\n\nEvaluating the experiments\n--------------------------\nAfter all experiments have finished successfully, the resulting score files can be evaluated.\nFor this, the ``bin/icb2015_evaluate.py`` script can be used to create a pdf file with the SFAR curves that are provided in the paper. See ``./bin/plot_on_demand.py --help`` for a complete list of options. To replicate the results of the paper:\n\n- ``--dev-file``: Specify the file of the scores file (4-column) containing the scores for the verification system, Normal Operation Mode (NOM) scenario.\n- ``--spoofing-file``: The file of the scores file (4-column) containing the scores for the verification system, Spoofing Attack scenario.\n- ``--output-file``: (Optional) Specify the name of the output pdf file. \n- ``--demandedplot``: Specify the option to plotting the score distribution for licit and spoof scenario and threshold line and probability of success line.\n\nAgain, the most usual way to compute the resulting tables could be:\n\n1. Evaluate experiments on VERA::\n\n    $ bin/icb2015_evaluate.py -vvv \n\n\nCite our paper\n--------------\n\nIf you use the results in any of your contributions, please cite the following paper::\n\n  @inproceedings{Tome_ICB2015-SpoofingPalmvein,\n       author = {Tome, Pedro and Marcel, S{\\'{e}}bastien},\n     keywords = {Biometrics, Palm vein, Spoofing Attacks},\n        month = may,\n        title = {On the Vulnerability of Palm Vein Recognition to Spoofing Attacks},\n    booktitle = {The 8th IAPR International Conference on Biometrics (ICB)},\n         year = {2015},\n     location = {Pucket, Thailand},\n          url = {http://publications.idiap.ch/index.php/publications/show/3096}\n  }\n\n\n.. _paper: http://publications.idiap.ch/index.php/publications/show/3096\n.. _idiap: http://www.idiap.ch\n.. _bob: http://www.idiap.ch/software/bob\n.. _palmveinreclib: http://pypi.python.org/pypi/bob.palmvein\n.. _bioidiap at github: http://www.github.com/bioidiap\n.. _gitlab: http://gitlab.idiap.ch/pedro.tome/bob.paper.ICB2015\n.. _virtualbox: http://www.virtualbox.org", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bioidiap/bob.paper.ICB2015", "keywords": "", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "bob.paper.ICB2015", "package_url": "https://pypi.org/project/bob.paper.ICB2015/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/bob.paper.ICB2015/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/bioidiap/bob.paper.ICB2015"}, "release_url": "https://pypi.org/project/bob.paper.ICB2015/2.0.0a0/", "requires_dist": null, "requires_python": null, "summary": "Running the experiments as given in paper: \"On the Vulnerability of Palm Vein Recognition to Spoofing Attacks\".", "version": "2.0.0a0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides the source code to run the experiments published in the paper <a href=\"http://publications.idiap.ch/index.php/publications/show/3096\" rel=\"nofollow\">On the Vulnerability of Palm Vein Recognition to Spoofing Attacks</a>.\nIt relies on the <a href=\"http://pypi.python.org/pypi/bob.palmvein\" rel=\"nofollow\">PalmveinRecLib</a> to execute the palmvein recognition experiments, and some satellite packages from <a href=\"http://www.idiap.ch/software/bob\" rel=\"nofollow\">Bob</a> to compute the evaluation.</p>\n<div>\n<p>Note</p>\n<p>Currently, this package only works in Unix-like environments and under MacOS.\nDue to limitations of the <a href=\"http://www.idiap.ch/software/bob\" rel=\"nofollow\">Bob</a> library, MS Windows operating systems are not supported.\nWe are working on a port of <a href=\"http://www.idiap.ch/software/bob\" rel=\"nofollow\">Bob</a> for MS Windows, but it might take a while.\nIn the meanwhile you could use our <a href=\"http://www.virtualbox.org\" rel=\"nofollow\">VirtualBox</a> images that can be downloaded <a href=\"http://www.idiap.ch/software/bob/images\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The installation of this package relies on the <a href=\"http://www.buildout.org\" rel=\"nofollow\">BuildOut</a> system. By default, the command line sequence:</p>\n<pre>$ ./python bootstrap-buildout.py\n$ ./bin/buildout\n</pre>\n<p>should download and install all requirements, including the <a href=\"http://pypi.python.org/pypi/bob.palmvein\" rel=\"nofollow\">PalmveinRecLib</a>, the database interface <a href=\"http://pypi.python.org/pypi/bob.db.vera\" rel=\"nofollow\">bob.db.verapalm</a>, the Spoofing evaluation framework <a href=\"http://pypi.python.org/pypi/antispoofing.evaluation\" rel=\"nofollow\">antispoofing.evaluation</a> and all their required packages.\nThere are a few exceptions, which are not automatically downloaded:</p>\n<div id=\"bob\">\n<h3>Bob</h3>\n<p>The face recognition experiments rely on the open source signal-processing and machine learning toolbox <a href=\"http://www.idiap.ch/software/bob\" rel=\"nofollow\">Bob</a>.\nTo install <a href=\"http://www.idiap.ch/software/bob\" rel=\"nofollow\">Bob</a>, please visit <a href=\"http://www.idiap.ch/software/bob\" rel=\"nofollow\">http://www.idiap.ch/software/bob</a> and follow the installation instructions.\nPlease verify that you have at least version 2.0 of Bob installed.\nIf you have installed Bob in a non-standard directory, please open the buildout.cfg file from the base directory and set the <tt>prefixes</tt> directory accordingly.</p>\n<div>\n<p>Note</p>\n<p>The experiments that we report in the <a href=\"http://publications.idiap.ch/index.php/publications/show/3096\" rel=\"nofollow\">Paper</a> were generated with <a href=\"http://www.idiap.ch/software/bob\" rel=\"nofollow\">Bob</a> version 2.0 and <a href=\"http://pypi.python.org/pypi/bob.palmvein\" rel=\"nofollow\">PalmveinRecLib</a> version 2.0.0.\nIf you use different versions of either of these packages, the results might differ slightly.\nFor example, we are aware that, due to some initialization differences, the results using Bob 1.2.0 and 1.2.1 are not identical, but similar.</p>\n</div>\n</div>\n<div id=\"image-databases\">\n<h3>Image Databases</h3>\n<p>The experiments are run on external image databases.\nWe do not provide the images from the databases themselves.\nHence, please contact the database owners to obtain a copy of the images.\nThe two databases used in our experiments can be downloaded here:</p>\n<ul>\n<li>VERA Palmvein [<tt>vera</tt>]: <a href=\"http://www.idiap.ch/dataset/vera-palmvein\" rel=\"nofollow\">http://www.idiap.ch/dataset/vera-palmvein</a></li>\n<li>VERA SpoofingPalmvein [<tt>vera</tt>]: <a href=\"http://www.idiap.ch/dataset/vera-spoofingpalmvein\" rel=\"nofollow\">http://www.idiap.ch/dataset/vera-spoofingpalmvein</a></li>\n</ul>\n<div>\n<p>Note</p>\n<p>For the experiments you have to create a unique directory (example: vera) and two subdirectories (vera/Palmvein) and (vera/SpoofingPalmvein) that contain the databases.\nAfter downloading the databases, you will need to tell our software, where it can find them by changing the <strong>configuration files</strong>.\nIn particular, please update the <tt><span class=\"pre\">--imagedir</span></tt> to indicate the directory of the images in <strong>bob.db.verapalm</strong>.</p>\n</div>\n<p>Please let all other configuration parameters unchanged as this might influence the face recognition experiments and, hence, the reproducibility of the results.</p>\n</div>\n<div id=\"getting-help\">\n<h3>Getting help</h3>\n<p>In case anything goes wrong, please feel free to open a new ticket in our <a href=\"http://gitlab.idiap.ch/pedro.tome/bob.paper.ICB2015\" rel=\"nofollow\">GitLab</a> page, or send an email to <a href=\"mailto:pedro.tome%40idiap.ch\">pedro<span>.</span>tome<span>@</span>idiap<span>.</span>ch</a>.</p>\n</div>\n</div>\n<div id=\"recreating-the-results-of-the-paper\">\n<h2>Recreating the results of the <a href=\"http://publications.idiap.ch/index.php/publications/show/3096\" rel=\"nofollow\">Paper</a></h2>\n<p>After successfully setting up the databases, you are now able to run the palmvein recognition and spoofing attack experiments as explained in the <a href=\"http://publications.idiap.ch/index.php/publications/show/3096\" rel=\"nofollow\">Paper</a>.</p>\n<div id=\"the-experiment-configuration\">\n<h3>The experiment configuration</h3>\n<p>The palmvein recognition experiment are run using the <strong>bob.palmvein</strong> package, but for convenience there exists a wrapper script that set up the right parametrization for the call to the <a href=\"http://pypi.python.org/pypi/bob.palmvein\" rel=\"nofollow\">PalmveinRecLib</a>.\nThe configuration files that are used by the <a href=\"http://pypi.python.org/pypi/bob.palmvein\" rel=\"nofollow\">PalmveinRecLib</a>, which contain all the parameters of the experiments, can be found in the <strong>bob.palmvein/bob/palmvein/configurations</strong> directory.</p>\n</div>\n<div id=\"running-the-experiments\">\n<h3>Running the experiments</h3>\n<p>This script can be found in <tt>bin/icb2015_palmvein_NOMandSpoofingAttack.py</tt>.\nIt requires some command line options, which you can list using <tt>./bin/icb2015_palmvein_NOMandSpoofingAttack.py <span class=\"pre\">--help</span></tt>.\nUsually, the command line options have a long version (starting with <tt><span class=\"pre\">--</span></tt>) and a shortcut (starting with a single <tt>-</tt>), here we use only the long versions:</p>\n<ul>\n<li><tt><span class=\"pre\">--database</span></tt>: Specify the name of the databases to run experiments on. (default: <tt>verapalm</tt>).</li>\n<li><tt><span class=\"pre\">--preprocessing</span></tt>: Specify the image preprocessing to run; the preprocessors will automatically assigned to the according experiment. Possible value is <tt><span class=\"pre\">palmvein-preprocessor</span></tt>.</li>\n<li><tt><span class=\"pre\">--features</span></tt>: Specify the features to run the experimetns. By default, the feature selected is the \u2018lbp-linearbinarypatterns\u2019 local binary patterns - LBP.</li>\n<li><tt><span class=\"pre\">--tool</span></tt>: Specify the matcher to run the experimetns. By default, the match-lbp is selected.</li>\n<li><tt><span class=\"pre\">--protocols</span></tt>: Specify a list of protocols that you want to run. Possible values are <tt>NOM50</tt> and <tt>SpoofingAttack50</tt>. By default, all protocols are used.</li>\n<li><tt><span class=\"pre\">--dry-run</span></tt>: Use this option to print the calls to the <a href=\"http://pypi.python.org/pypi/bob.palmvein\" rel=\"nofollow\">PalmveinRecLib</a> without executing them.</li>\n<li><tt><span class=\"pre\">--temp-directory</span></tt>: Specify a directory where temporary files will be stored (default: <tt>temp</tt>). This directory can be deleted after all experiments ran successfully.</li>\n<li><tt><span class=\"pre\">--result-directory</span></tt>: Specify a directory where final result files will be stored (default: <tt>results</tt>). This directory is required to evaluate the experiments.</li>\n</ul>\n<p>Additionally, you can pass options directly to the <a href=\"http://pypi.python.org/pypi/bob.palmvein\" rel=\"nofollow\">PalmveinRecLib</a>, but you should do that with care.\nSimply use <tt><span class=\"pre\">--</span></tt> to separate options to the <tt>bin/icb2015_palmvein_NOMandSpoofingAttack.py</tt> from options to the <a href=\"http://pypi.python.org/pypi/bob.palmvein\" rel=\"nofollow\">PalmveinRecLib</a>.\nFor example, the <tt><span class=\"pre\">--force</span></tt> option might be of interest.\nSee <tt>./bin/palmveinverify.py <span class=\"pre\">--help</span></tt> for a complete list of options.</p>\n<p>It is advisable to use the <tt><span class=\"pre\">--dry-run</span></tt> option before actually running the experiments, just to see that everything is correct.\nAlso, the Info (2) verbosity level prints useful information, e.g., by adding the <tt><span class=\"pre\">--verbose</span> <span class=\"pre\">--verbose</span></tt> (or shortly <tt><span class=\"pre\">-vv</span></tt>) on the command line.\nA commonly used command line sequence to execute the face recognition algorithm on both databases could be:</p>\n<ol>\n<li><p>Run the experiments on the VERA Palm database:</p>\n<pre>$ ./bin/icb2015_palmvein_NOMandSpoofingAttack.py -vv --databases verapalm\n</pre>\n</li>\n</ol>\n<div>\n<p>Note</p>\n<p>All output directories of the scripts will be automatically generated if they do not exist yet.</p>\n</div>\n<div>\n<p>Warning</p>\n<p>The execution of the script may take a long time and require large amounts of memory.\nNevertheless, the scripts are set up such that they re-use all parts of the experiments as far as this is possible.</p>\n</div>\n</div>\n<div id=\"evaluating-the-experiments\">\n<h3>Evaluating the experiments</h3>\n<p>After all experiments have finished successfully, the resulting score files can be evaluated.\nFor this, the <tt>bin/icb2015_evaluate.py</tt> script can be used to create a pdf file with the SFAR curves that are provided in the paper. See <tt>./bin/plot_on_demand.py <span class=\"pre\">--help</span></tt> for a complete list of options. To replicate the results of the paper:</p>\n<ul>\n<li><tt><span class=\"pre\">--dev-file</span></tt>: Specify the file of the scores file (4-column) containing the scores for the verification system, Normal Operation Mode (NOM) scenario.</li>\n<li><tt><span class=\"pre\">--spoofing-file</span></tt>: The file of the scores file (4-column) containing the scores for the verification system, Spoofing Attack scenario.</li>\n<li><tt><span class=\"pre\">--output-file</span></tt>: (Optional) Specify the name of the output pdf file.</li>\n<li><tt><span class=\"pre\">--demandedplot</span></tt>: Specify the option to plotting the score distribution for licit and spoof scenario and threshold line and probability of success line.</li>\n</ul>\n<p>Again, the most usual way to compute the resulting tables could be:</p>\n<ol>\n<li><p>Evaluate experiments on VERA:</p>\n<pre>$ bin/icb2015_evaluate.py -vvv\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"cite-our-paper\">\n<h3>Cite our paper</h3>\n<p>If you use the results in any of your contributions, please cite the following paper:</p>\n<pre>@inproceedings{Tome_ICB2015-SpoofingPalmvein,\n     author = {Tome, Pedro and Marcel, S{\\'{e}}bastien},\n   keywords = {Biometrics, Palm vein, Spoofing Attacks},\n      month = may,\n      title = {On the Vulnerability of Palm Vein Recognition to Spoofing Attacks},\n  booktitle = {The 8th IAPR International Conference on Biometrics (ICB)},\n       year = {2015},\n   location = {Pucket, Thailand},\n        url = {http://publications.idiap.ch/index.php/publications/show/3096}\n}\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2355347, "releases": {"2.0.0a0": [{"comment_text": "", "digests": {"md5": "1bbe3165f307aa31f4d55d9c9536a28a", "sha256": "7bf11d0a133c053ad45c81b1dafc8b1388ae41b8c8f1aa4e2fb26394613760ae"}, "downloads": -1, "filename": "bob.paper.ICB2015-2.0.0a0.zip", "has_sig": false, "md5_digest": "1bbe3165f307aa31f4d55d9c9536a28a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33688, "upload_time": "2015-05-03T18:35:47", "upload_time_iso_8601": "2015-05-03T18:35:47.273315Z", "url": "https://files.pythonhosted.org/packages/84/1a/b08ee9f9db872ed06a194b46db83ea7d50142602bb94fcfe375ac6cac96b/bob.paper.ICB2015-2.0.0a0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1bbe3165f307aa31f4d55d9c9536a28a", "sha256": "7bf11d0a133c053ad45c81b1dafc8b1388ae41b8c8f1aa4e2fb26394613760ae"}, "downloads": -1, "filename": "bob.paper.ICB2015-2.0.0a0.zip", "has_sig": false, "md5_digest": "1bbe3165f307aa31f4d55d9c9536a28a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33688, "upload_time": "2015-05-03T18:35:47", "upload_time_iso_8601": "2015-05-03T18:35:47.273315Z", "url": "https://files.pythonhosted.org/packages/84/1a/b08ee9f9db872ed06a194b46db83ea7d50142602bb94fcfe375ac6cac96b/bob.paper.ICB2015-2.0.0a0.zip", "yanked": false}], "timestamp": "Thu May  7 22:36:51 2020"}