{"info": {"author": "Anders Gjendem", "author_email": "anders.gjendem@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Software to control 7-segment displays.\n\n# Software:\nBased on code found in the comments section of the [SparkFun Hookup Guide](https://learn.sparkfun.com/tutorials/large-digit-driver-hookup-guide/discuss). Thanks to [Member #910971](https://www.sparkfun.com/users/910971) and [Member #642108](https://www.sparkfun.com/users/642108).\n\nThis code is further improved to easily support multiple displays, as well as text/numbers, with scrolling.\n\n# Hardware:\nTested with the following hardware:\n* [7-Segment Display - 6.5\" (Red)](https://www.sparkfun.com/products/8530)\n* [SparkFun Large Digit Driver](https://www.sparkfun.com/products/13279)\n* [RaspberryPi 4](https://www.raspberrypi.org/products/raspberry-pi-4-model-b/)\n* [SN74AHCT125N Quadruple Bus Buffer Gates With 3-State Outputs](https://www.ti.com/store/ti/en/p/product/?p=SN74AHCT125N)\n* [Adafruit Perma-Proto HAT](https://www.adafruit.com/product/2310)\n\nIt is likely to work with other variants, home made displays and/or drivers based on [TPIC6C596](http://www.ti.com/lit/pdf/slis093), as well as other voltage converters for signal, for example the [SparkFun Logic Level Converter](https://www.sparkfun.com/products/12009).\n\n12v power to the displays are provided externally.\n\n## Build instructions:\nhttps://learn.sparkfun.com/tutorials/large-digit-driver-hookup-guide/all\n\nIn our case, we swapped the Arduino with a RaspberryPi 4. As the Pi operates with 3.3v signals on the GPIO compared to the 5v of the Arduino, the signal lines (clk, latch, data) needs to be adjusted via a logic level converter.\n\n# Defaults:\nSegments class parameters, based on the [Raspberry BCM pinout](https://pinout.xyz/):\n* bcm_gpio_clock=11 *(CLK)*\n* bcm_gpio_latch=13 *(Signals when to switch to the next display)*\n* bcm_gpio_data=14  *(TXD - used to turn each segment on/off)*\n* num_displays=7 *(The number of displays you've chained)*\n* debug=False *(Turns on debug output to console)*\n* offline=False *(Deactivates the actual GPIO-parts, used mainly for dev/tests)*\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/agjendem/rpi-7segment", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "rpi-7segment", "package_url": "https://pypi.org/project/rpi-7segment/", "platform": "", "project_url": "https://pypi.org/project/rpi-7segment/", "project_urls": {"Homepage": "https://github.com/agjendem/rpi-7segment"}, "release_url": "https://pypi.org/project/rpi-7segment/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Library for running 7-segments displays with TPIC6C596 drivers", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Software to control 7-segment displays.</p>\n<h1>Software:</h1>\n<p>Based on code found in the comments section of the <a href=\"https://learn.sparkfun.com/tutorials/large-digit-driver-hookup-guide/discuss\" rel=\"nofollow\">SparkFun Hookup Guide</a>. Thanks to <a href=\"https://www.sparkfun.com/users/910971\" rel=\"nofollow\">Member #910971</a> and <a href=\"https://www.sparkfun.com/users/642108\" rel=\"nofollow\">Member #642108</a>.</p>\n<p>This code is further improved to easily support multiple displays, as well as text/numbers, with scrolling.</p>\n<h1>Hardware:</h1>\n<p>Tested with the following hardware:</p>\n<ul>\n<li><a href=\"https://www.sparkfun.com/products/8530\" rel=\"nofollow\">7-Segment Display - 6.5\" (Red)</a></li>\n<li><a href=\"https://www.sparkfun.com/products/13279\" rel=\"nofollow\">SparkFun Large Digit Driver</a></li>\n<li><a href=\"https://www.raspberrypi.org/products/raspberry-pi-4-model-b/\" rel=\"nofollow\">RaspberryPi 4</a></li>\n<li><a href=\"https://www.ti.com/store/ti/en/p/product/?p=SN74AHCT125N\" rel=\"nofollow\">SN74AHCT125N Quadruple Bus Buffer Gates With 3-State Outputs</a></li>\n<li><a href=\"https://www.adafruit.com/product/2310\" rel=\"nofollow\">Adafruit Perma-Proto HAT</a></li>\n</ul>\n<p>It is likely to work with other variants, home made displays and/or drivers based on <a href=\"http://www.ti.com/lit/pdf/slis093\" rel=\"nofollow\">TPIC6C596</a>, as well as other voltage converters for signal, for example the <a href=\"https://www.sparkfun.com/products/12009\" rel=\"nofollow\">SparkFun Logic Level Converter</a>.</p>\n<p>12v power to the displays are provided externally.</p>\n<h2>Build instructions:</h2>\n<p><a href=\"https://learn.sparkfun.com/tutorials/large-digit-driver-hookup-guide/all\" rel=\"nofollow\">https://learn.sparkfun.com/tutorials/large-digit-driver-hookup-guide/all</a></p>\n<p>In our case, we swapped the Arduino with a RaspberryPi 4. As the Pi operates with 3.3v signals on the GPIO compared to the 5v of the Arduino, the signal lines (clk, latch, data) needs to be adjusted via a logic level converter.</p>\n<h1>Defaults:</h1>\n<p>Segments class parameters, based on the <a href=\"https://pinout.xyz/\" rel=\"nofollow\">Raspberry BCM pinout</a>:</p>\n<ul>\n<li>bcm_gpio_clock=11 <em>(CLK)</em></li>\n<li>bcm_gpio_latch=13 <em>(Signals when to switch to the next display)</em></li>\n<li>bcm_gpio_data=14  <em>(TXD - used to turn each segment on/off)</em></li>\n<li>num_displays=7 <em>(The number of displays you've chained)</em></li>\n<li>debug=False <em>(Turns on debug output to console)</em></li>\n<li>offline=False <em>(Deactivates the actual GPIO-parts, used mainly for dev/tests)</em></li>\n</ul>\n\n          </div>"}, "last_serial": 6087274, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "29d64a9dbeb83bb391d50c2517b9d90f", "sha256": "e336b6d3389ef1940deff5698b4cc9ceaed752c7d24343dc2545e60469ce9fd3"}, "downloads": -1, "filename": "rpi_7segment-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "29d64a9dbeb83bb391d50c2517b9d90f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5736, "upload_time": "2019-11-06T13:13:11", "upload_time_iso_8601": "2019-11-06T13:13:11.710585Z", "url": "https://files.pythonhosted.org/packages/f1/9e/da2f7aca20cbc174e6277d8f746a8e0a9a6a7a9179d9df777af6685678d4/rpi_7segment-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a8c72fa85b84f2ba742c04e372857e2", "sha256": "9fda16fc6b289cb75d872ce1d293daf981ea47dc8a72fdec77146696a4aec9e3"}, "downloads": -1, "filename": "rpi_7segment-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6a8c72fa85b84f2ba742c04e372857e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4529, "upload_time": "2019-11-06T13:13:14", "upload_time_iso_8601": "2019-11-06T13:13:14.318780Z", "url": "https://files.pythonhosted.org/packages/08/57/c1207407f9f0c8e69ef8d3acd9e2d1a9e985ddb78b462c3664da2303ffc1/rpi_7segment-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "29d64a9dbeb83bb391d50c2517b9d90f", "sha256": "e336b6d3389ef1940deff5698b4cc9ceaed752c7d24343dc2545e60469ce9fd3"}, "downloads": -1, "filename": "rpi_7segment-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "29d64a9dbeb83bb391d50c2517b9d90f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5736, "upload_time": "2019-11-06T13:13:11", "upload_time_iso_8601": "2019-11-06T13:13:11.710585Z", "url": "https://files.pythonhosted.org/packages/f1/9e/da2f7aca20cbc174e6277d8f746a8e0a9a6a7a9179d9df777af6685678d4/rpi_7segment-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a8c72fa85b84f2ba742c04e372857e2", "sha256": "9fda16fc6b289cb75d872ce1d293daf981ea47dc8a72fdec77146696a4aec9e3"}, "downloads": -1, "filename": "rpi_7segment-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6a8c72fa85b84f2ba742c04e372857e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4529, "upload_time": "2019-11-06T13:13:14", "upload_time_iso_8601": "2019-11-06T13:13:14.318780Z", "url": "https://files.pythonhosted.org/packages/08/57/c1207407f9f0c8e69ef8d3acd9e2d1a9e985ddb78b462c3664da2303ffc1/rpi_7segment-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:57 2020"}