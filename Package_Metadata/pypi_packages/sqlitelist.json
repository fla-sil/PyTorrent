{"info": {"author": "deliro", "author_email": "t4k.kitaetz@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "==========\nsqlitelist\n==========\nsqlitelist is a SQLite3 wrapper with a python list-like interface. It comes with one purpose - to keep your data if it bigger than your RAM size.\n\n.. code-block:: python\n>>> from sqlitelist import open\n>>> with open('db') as lst:\n...     lst.append('hello')\n...     lst.extend(['world', {}])\n>>> print(len(lst))\n>>> for item in lst:\n>>>     print(item)\n\n\n===================================\nThere is some performance features\n===================================\n\n.. code-block:: python\n>>> from sqlitelist import open\n>>> with open('db', journal_mode='MEMORY', autocommit=False) as lst:\n...     for _ in range(1000):\n...         lst.extend(['some', 'data', {'key': 'value', 'another key': 1}])\n...     lst.commit()\n>>> # Do not forget to commit your changes if autocommit is off.\n>>> lst.flush()  # For flush all your data without removing a database file.\n\n\n========\nFeatures\n========\nValues can be any pickable objects.\nSupport for slices (step and negative indices aren't supported [yet])\n\n.. code-block:: python\n>>> with open('db') as lst:\n...     print(lst[1:200])\n...     print(lst[:50])\n...     print(lst[50:])\n\nSupport for getting items by it's index\n\n.. code-block:: python\n>>> with open('db') as lst:\n...     lst[5]\n...     lst[-3]\n\nSupport for pop, append and extend methods\n\n.. code-block:: python\n>>> with open('db') as lst:\n...     lst.pop()\n...     lst.pop(50)  # Pop the element in the 51th place\n\nSupport for delete (indices and slices with no negative values)\n\n.. code-block:: python\n>>> with open('db') as lst:\n...     del lst[0]\n...     del lst[-50]\n...     del lst[:50]\n...     del lst[50:]\n\n\nSupport for iteration (no multithreading support!)\n\n.. code-block:: python\n>>> with open('db') as lst:\n...     for item in lst:\n...         print(item)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "sqlitelist", "package_url": "https://pypi.org/project/sqlitelist/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/sqlitelist/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/sqlitelist/0.1/", "requires_dist": null, "requires_python": null, "summary": "SQLite3 wrapper with a list-like interface", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            ==========<br>sqlitelist<br>==========<br>sqlitelist is a SQLite3 wrapper with a python list-like interface. It comes with one purpose - to keep your data if it bigger than your RAM size.<br><br>.. code-block:: python<br>&gt;&gt;&gt; from sqlitelist import open<br>&gt;&gt;&gt; with open('db') as lst:<br>...     lst.append('hello')<br>...     lst.extend(['world', {}])<br>&gt;&gt;&gt; print(len(lst))<br>&gt;&gt;&gt; for item in lst:<br>&gt;&gt;&gt;     print(item)<br><br><br>===================================<br>There is some performance features<br>===================================<br><br>.. code-block:: python<br>&gt;&gt;&gt; from sqlitelist import open<br>&gt;&gt;&gt; with open('db', journal_mode='MEMORY', autocommit=False) as lst:<br>...     for _ in range(1000):<br>...         lst.extend(['some', 'data', {'key': 'value', 'another key': 1}])<br>...     lst.commit()<br>&gt;&gt;&gt; # Do not forget to commit your changes if autocommit is off.<br>&gt;&gt;&gt; lst.flush()  # For flush all your data without removing a database file.<br><br><br>========<br>Features<br>========<br>Values can be any pickable objects.<br>Support for slices (step and negative indices aren't supported [yet])<br><br>.. code-block:: python<br>&gt;&gt;&gt; with open('db') as lst:<br>...     print(lst[1:200])<br>...     print(lst[:50])<br>...     print(lst[50:])<br><br>Support for getting items by it's index<br><br>.. code-block:: python<br>&gt;&gt;&gt; with open('db') as lst:<br>...     lst[5]<br>...     lst[-3]<br><br>Support for pop, append and extend methods<br><br>.. code-block:: python<br>&gt;&gt;&gt; with open('db') as lst:<br>...     lst.pop()<br>...     lst.pop(50)  # Pop the element in the 51th place<br><br>Support for delete (indices and slices with no negative values)<br><br>.. code-block:: python<br>&gt;&gt;&gt; with open('db') as lst:<br>...     del lst[0]<br>...     del lst[-50]<br>...     del lst[:50]<br>...     del lst[50:]<br><br><br>Support for iteration (no multithreading support!)<br><br>.. code-block:: python<br>&gt;&gt;&gt; with open('db') as lst:<br>...     for item in lst:<br>...         print(item)\n          </div>"}, "last_serial": 1908984, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "059f65e8cf29b151e0b9f40af65ed476", "sha256": "fc0091787bd2f872f1256d1084cefc82b35245c50255856d99e78c3cea205985"}, "downloads": -1, "filename": "sqlitelist-0.1.tar.gz", "has_sig": false, "md5_digest": "059f65e8cf29b151e0b9f40af65ed476", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4189, "upload_time": "2016-01-17T21:16:51", "upload_time_iso_8601": "2016-01-17T21:16:51.517420Z", "url": "https://files.pythonhosted.org/packages/83/10/07b4b1a9a41349d7e187933512221d1d172c08f17bc3f3d176a3770ccae9/sqlitelist-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "059f65e8cf29b151e0b9f40af65ed476", "sha256": "fc0091787bd2f872f1256d1084cefc82b35245c50255856d99e78c3cea205985"}, "downloads": -1, "filename": "sqlitelist-0.1.tar.gz", "has_sig": false, "md5_digest": "059f65e8cf29b151e0b9f40af65ed476", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4189, "upload_time": "2016-01-17T21:16:51", "upload_time_iso_8601": "2016-01-17T21:16:51.517420Z", "url": "https://files.pythonhosted.org/packages/83/10/07b4b1a9a41349d7e187933512221d1d172c08f17bc3f3d176a3770ccae9/sqlitelist-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:41 2020"}