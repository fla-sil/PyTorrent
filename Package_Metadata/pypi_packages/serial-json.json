{"info": {"author": "Justin Engel", "author_email": "jtengel08@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "========================\nSerial JSON\n========================\n\nEasily add custom JSON serialization\n\n\nCode Example\n============\n\nDefaults\n--------\n\n.. code-block:: python\n\n    import serial_json as json\n    import datetime\n\n    value = b'Hello World!'  # Bytes are not supported by json normally\n    assert json.loads(json.dumps(value)) == value\n\n    dt = datetime.datetime.now()  # datetimes are not supported by json normally\n    assert json.loads(json.dumps(dt)) == dt\n\n\nCustom\n------\n\nCustom serialization using a classes __getstate__ and __setstate__ methods.\n\n.. code-block:: python\n\n    import serial_json as json\n\n    @json.register\n    class MyClass(object):\n        def __init__(self, x=0, y=0):\n            self.x = x\n            self.y = y\n\n        def __eq__(self, other):\n            \"\"\"Compare objects.\"\"\"\n            try:\n                return self.x == other.x and self.y == other.y\n            except (AttributeError, Exception):\n                return False\n\n        def __getstate__(self):\n            return {'x': self.x, 'y': self.y}\n\n        def __setstate__(self, state):\n            self.x = state.get('x', 0)\n            self.y = state.get('y', 0)\n\n    my_value = MyClass()\n    assert json.loads(json.dumps(my_value)) == my_value\n\n\nCustom serialization with functions instead of a class with getstate and setstate.\n\n.. code-block:: python\n\n    import serial_json\n\n    class MyClass(object):\n        def __init__(self, x=0, y=0):\n            self.x = x\n            self.y = y\n\n        def __eq__(self, other):\n            \"\"\"Compare objects.\"\"\"\n            try:\n                return self.x == other.x and self.y == other.y\n            except (AttributeError, Exception):\n                return False\n\n    def cls_to_dict(obj):\n        return {'x': obj.x, 'y': obj.y}\n\n    def cls_from_dict(obj):\n        return MyClass(**obj)\n\n    # Register the serialize and deserialize functions\n    serial_json.register(MyClass, cls_to_dict, cls_from_dict)\n\n    my_value = MyClass()\n    assert serial_json.loads(serial_json.dumps(my_value)) == my_value", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/justengel/serial_json/archive/v1.0.4.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/justengel/serial_json", "keywords": "JSON Serialize Deserialize numpy datetime", "license": "Proprietary", "maintainer": "", "maintainer_email": "", "name": "serial-json", "package_url": "https://pypi.org/project/serial-json/", "platform": "any", "project_url": "https://pypi.org/project/serial-json/", "project_urls": {"Download": "https://github.com/justengel/serial_json/archive/v1.0.4.tar.gz", "Homepage": "https://github.com/justengel/serial_json"}, "release_url": "https://pypi.org/project/serial-json/1.0.4/", "requires_dist": null, "requires_python": "", "summary": "Custom json serialization support.", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Easily add custom JSON serialization</p>\n<div id=\"code-example\">\n<h2>Code Example</h2>\n<div id=\"defaults\">\n<h3>Defaults</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">serial_json</span> <span class=\"k\">as</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">'Hello World!'</span>  <span class=\"c1\"># Bytes are not supported by json normally</span>\n<span class=\"k\">assert</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"n\">value</span>\n\n<span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>  <span class=\"c1\"># datetimes are not supported by json normally</span>\n<span class=\"k\">assert</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"n\">dt</span>\n</pre>\n</div>\n<div id=\"custom\">\n<h3>Custom</h3>\n<p>Custom serialization using a classes __getstate__ and __setstate__ methods.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">serial_json</span> <span class=\"k\">as</span> <span class=\"nn\">json</span>\n\n<span class=\"nd\">@json</span><span class=\"o\">.</span><span class=\"n\">register</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyClass</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">x</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">y</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__eq__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Compare objects.\"\"\"</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">y</span>\n        <span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"ne\">AttributeError</span><span class=\"p\">,</span> <span class=\"ne\">Exception</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__getstate__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__setstate__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'y'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">my_value</span> <span class=\"o\">=</span> <span class=\"n\">MyClass</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">my_value</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"n\">my_value</span>\n</pre>\n<p>Custom serialization with functions instead of a class with getstate and setstate.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">serial_json</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyClass</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">x</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">y</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__eq__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Compare objects.\"\"\"</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">y</span>\n        <span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"ne\">AttributeError</span><span class=\"p\">,</span> <span class=\"ne\">Exception</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">cls_to_dict</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">}</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">cls_from_dict</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">MyClass</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Register the serialize and deserialize functions</span>\n<span class=\"n\">serial_json</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">MyClass</span><span class=\"p\">,</span> <span class=\"n\">cls_to_dict</span><span class=\"p\">,</span> <span class=\"n\">cls_from_dict</span><span class=\"p\">)</span>\n\n<span class=\"n\">my_value</span> <span class=\"o\">=</span> <span class=\"n\">MyClass</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">serial_json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">serial_json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">my_value</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"n\">my_value</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6488985, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f778917c75fe38ccc0d821753777d7ff", "sha256": "44b42ea6d1aaabdad5c2f81e74c4510aa7c1f6291175dcecabf7ab82f81283d1"}, "downloads": -1, "filename": "serial_json-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f778917c75fe38ccc0d821753777d7ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6403, "upload_time": "2020-01-03T16:29:10", "upload_time_iso_8601": "2020-01-03T16:29:10.565746Z", "url": "https://files.pythonhosted.org/packages/32/95/c56ee2d513f864caced1caf2f13c19f90cd3fa044216df8c53d053102e0c/serial_json-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "7e0266733c03aa1875d82b57240b4dbe", "sha256": "708b61e30fd103e7c388b7f73e3d957c0a90d170866099e37a461e21d1746ec1"}, "downloads": -1, "filename": "serial_json-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7e0266733c03aa1875d82b57240b4dbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6614, "upload_time": "2020-01-03T16:56:05", "upload_time_iso_8601": "2020-01-03T16:56:05.874242Z", "url": "https://files.pythonhosted.org/packages/d7/8d/0a3d0dd007bd332dc03c0898c381915bb6fec62984ca1aed2aaf88f970fa/serial_json-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1946ea5695e5e27d63bb2a2544f74b5b", "sha256": "27c526d9c3ba5651b811d2eb55b3fff1eac3e07bf2d64e8fc09bf0aa9c94ad33"}, "downloads": -1, "filename": "serial_json-1.0.1.tar.gz", "has_sig": false, "md5_digest": "1946ea5695e5e27d63bb2a2544f74b5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7187, "upload_time": "2020-01-10T17:05:30", "upload_time_iso_8601": "2020-01-10T17:05:30.510962Z", "url": "https://files.pythonhosted.org/packages/ba/1b/8e9be350e2f32fe06a8f1c58edb2b357c973a3a8ea2edb935b2f8718608d/serial_json-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "fc1b3829bf3a56e64aeabdfe824f4578", "sha256": "889c0e07a63c12413bc38af5b9b950c3209515cdc998cd335af81338783de8f5"}, "downloads": -1, "filename": "serial_json-1.0.2.tar.gz", "has_sig": false, "md5_digest": "fc1b3829bf3a56e64aeabdfe824f4578", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7212, "upload_time": "2020-01-13T15:45:29", "upload_time_iso_8601": "2020-01-13T15:45:29.960573Z", "url": "https://files.pythonhosted.org/packages/71/69/248befb01633c3058f2b290c661c1fd19fbfdea78eec9b10684cebba0c0a/serial_json-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "68ae2bdf7a702b6ace9412fdf8f74450", "sha256": "82f67c5d0c26fed95b1c5da5b6172645e45a5347708cc5cf656bf29fae6332d6"}, "downloads": -1, "filename": "serial_json-1.0.3.tar.gz", "has_sig": false, "md5_digest": "68ae2bdf7a702b6ace9412fdf8f74450", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7224, "upload_time": "2020-01-13T15:51:12", "upload_time_iso_8601": "2020-01-13T15:51:12.200071Z", "url": "https://files.pythonhosted.org/packages/7e/c4/b56b164380b2a8a58751453fcfd3bc49cc6edd9452659595798194a8c26d/serial_json-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "41413277d4b7843e6664019d7687f6e0", "sha256": "53eeb7333d4d5b3f1e52c784d34b37b0c04ac9348c506719ab1db162e703fb5e"}, "downloads": -1, "filename": "serial_json-1.0.4.tar.gz", "has_sig": false, "md5_digest": "41413277d4b7843e6664019d7687f6e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7229, "upload_time": "2020-01-20T17:37:33", "upload_time_iso_8601": "2020-01-20T17:37:33.385060Z", "url": "https://files.pythonhosted.org/packages/71/b9/d59495b2ff351348c0dccf34bde4a5908c22ba6c5017dcbd2c2b58067655/serial_json-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "41413277d4b7843e6664019d7687f6e0", "sha256": "53eeb7333d4d5b3f1e52c784d34b37b0c04ac9348c506719ab1db162e703fb5e"}, "downloads": -1, "filename": "serial_json-1.0.4.tar.gz", "has_sig": false, "md5_digest": "41413277d4b7843e6664019d7687f6e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7229, "upload_time": "2020-01-20T17:37:33", "upload_time_iso_8601": "2020-01-20T17:37:33.385060Z", "url": "https://files.pythonhosted.org/packages/71/b9/d59495b2ff351348c0dccf34bde4a5908c22ba6c5017dcbd2c2b58067655/serial_json-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:16 2020"}