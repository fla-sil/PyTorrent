{"info": {"author": "Thomas Power", "author_email": "thomaspwr@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "===========\ndjango-envi\n===========\n\n.. contents:: Table of contents\n\n\nIntroduction\n============\n\nLightweight set of middleware classes that inject visual indicators for\neach type of environment that a project is deployed to. Inspired by\n`this article`_.\n\n.. _this article: https://goo.gl/7cLsOH\n\n.. image:: https://i.imgur.com/flSPk7w.png\n\n\nQuickstart\n==========\n\n1. Install the package: ``pip install django-envi``.\n2. Add the ``'envi'`` app to your ``INSTALLED_APPS``.\n3. Install the desired middleware class to ``MIDDLEWARE_CLASSES``:\n\n   * ``envi.middleware.EnviFooterMiddleware`` injects a sticky footer to\n     all pages that displays the current environment.\n\n4. In each environment's settings file, add the ``ENVIRONMENT_KEY`` setting,\n   with the corresponding environment key string. See below.\n\n\nBuilt-in environments\n=====================\n\nThere are a number of built-in environment definitions:\n\n* ``'local'``: A striped grey banner. Appears site-wide (default).\n\n* ``'dev'``: A striped blue banner. Appears site-wide.\n\n* ``'staging'``: A striped yellow banner. Appears site-wide.\n\n* ``'production'``: A striped red banner. Only appears in ``/admin``.\n\n\nConfiguration\n=============\n\nThe following settings are supported in your ``settings.py``:\n\n* ``ENVI_ENVIRONMENT_KEY``: A string representing the key to use to search\n  the ``ENVI_ENVIRONMENTS`` settings dictionary. Defaults to ``'local'``.\n\n* ``ENVI_ENVIRONMENTS``: A dictionary containing key-value pairs consisting\n  of environment keys (as strings) mapped to dictionaries representing an\n  environment definition. By default, there are 4 `built-in environments`_\n  available for selection.\n\n* ``ENVI_ENVIRONMENT``: The current environment. This can either be defined\n  explicitly (see `Creating environments`_), otherwise it will be set to the\n  corresponding dictionary by looking up the ``ENVI_ENVIRONMENT_KEY`` within\n  the ``ENVI_ENVIRONMENTS`` dictionary.\n\nCreating environments\n=====================\n\nEnvironments can be created using the following dictionary structure:\n\n.. code-block:: python\n\n  CUSTOM_ENV = {\n      # Required for all subclasses of EnviBaseMiddleware.\n      \"SHOW_IN_ADMIN\": True,\n      \"SHOW_IN_SITE\": True,\n\n      # Only required for subclasses of EnviBaseTemplateMiddleware.\n      \"CONTEXT\": {\n          # The contents of this dictionary will be passed to the template\n          # being rendered. You can add anything you want here.\n          \"CONTENT\": \"ENVIRONMENT: STAGING\",\n          \"COLOR_A\": \"#ffba1e\",\n          \"COLOR_B\": \"#dba11a\",\n      },\n  }\n\nThen, this environment definition can be either:\n\n* Added to the ``ENVI_ENVIRONMENTS`` dictionary, and activated by setting\n  the ``ENVI_ENVIRONMENT_KEY`` to the respective key.\n\n  .. code-block:: python\n\n    ENVI_ENVIRONMENTS = {\n        \"custom_key_1\": CUSTOM_ENV,\n        \"custom_key_2\": OTHER_CUSTOM_ENV,\n    }\n\n    ENVI_ENVIRONMENT_KEY = \"custom_key_1\"\n\n* Used to set the ``ENVI_ENVIRONMENT`` value directly.\n\n  .. code-block:: python\n\n    ENVI_ENVIRONMENT = CUSTOM_ENV\n\n\nAdvanced usage\n==============\n\nThe implementation of ``django-envi`` makes it easy to customize.\n\n\nExtending via templates\n-----------------------\n\nTODO: How to.\n\n\nExtending via subclassing\n-------------------------\n\nTODO: How to.\n\n\nCompatability\n=============\n\nThe latest build of ``django-envi`` has been tested on the following\nversions of Django:\n\n* ``2.0.1``\n\n* ``1.11.9 (LTS)``\n\n* ``1.8.18 (LTS)``\n\n\nChangelog\n=========\n\n+----------------+-----------------------------------------------------------+\n| Version        | Description                                               |\n+================+===========================================================+\n| 0.2.1          | Bugfix to prevent adding the banner to AJAX requests.     |\n|                | Thanks to @marksweb for the PR. Also adds backwards       |\n|                | compatability for Django versions < 1.10.                 |\n+----------------+-----------------------------------------------------------+\n| 0.2            | Repackaged without unnecessary docs/images directory. All |\n|                | documentation can be found in README.rst.                 |\n+----------------+-----------------------------------------------------------+\n| 0.1.2          | Fixes reference to nonexistent template. Manifest issue.  |\n+----------------+-----------------------------------------------------------+\n| 0.1.1          | Renamed to django-envi.                                   |\n+----------------+-----------------------------------------------------------+\n| 0.1            | Initial version.                                          |\n+----------------+-----------------------------------------------------------+\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/teapow/django-envi", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-envi", "package_url": "https://pypi.org/project/django-envi/", "platform": "", "project_url": "https://pypi.org/project/django-envi/", "project_urls": {"Homepage": "https://github.com/teapow/django-envi"}, "release_url": "https://pypi.org/project/django-envi/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Lightweight set of middleware classes that inject visual indicators for each type of environment that a project is deployed to.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"table-of-contents\">\n<p>Table of contents</p>\n<ul>\n<li><a href=\"#introduction\" id=\"id1\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#quickstart\" id=\"id2\" rel=\"nofollow\">Quickstart</a></li>\n<li><a href=\"#built-in-environments\" id=\"id3\" rel=\"nofollow\">Built-in environments</a></li>\n<li><a href=\"#configuration\" id=\"id4\" rel=\"nofollow\">Configuration</a></li>\n<li><a href=\"#creating-environments\" id=\"id5\" rel=\"nofollow\">Creating environments</a></li>\n<li><a href=\"#advanced-usage\" id=\"id6\" rel=\"nofollow\">Advanced usage</a><ul>\n<li><a href=\"#extending-via-templates\" id=\"id7\" rel=\"nofollow\">Extending via templates</a></li>\n<li><a href=\"#extending-via-subclassing\" id=\"id8\" rel=\"nofollow\">Extending via subclassing</a></li>\n</ul>\n</li>\n<li><a href=\"#compatability\" id=\"id9\" rel=\"nofollow\">Compatability</a></li>\n<li><a href=\"#changelog\" id=\"id10\" rel=\"nofollow\">Changelog</a></li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Introduction</a></h2>\n<p>Lightweight set of middleware classes that inject visual indicators for\neach type of environment that a project is deployed to. Inspired by\n<a href=\"https://goo.gl/7cLsOH\" rel=\"nofollow\">this article</a>.</p>\n<img alt=\"https://i.imgur.com/flSPk7w.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25264baa26f12549b44f3a3ae97c5be0a730d41c/68747470733a2f2f692e696d6775722e636f6d2f666c53506b37772e706e67\">\n</div>\n<div id=\"quickstart\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Quickstart</a></h2>\n<ol>\n<li>Install the package: <tt>pip install <span class=\"pre\">django-envi</span></tt>.</li>\n<li>Add the <tt>'envi'</tt> app to your <tt>INSTALLED_APPS</tt>.</li>\n<li>Install the desired middleware class to <tt>MIDDLEWARE_CLASSES</tt>:<ul>\n<li><tt>envi.middleware.EnviFooterMiddleware</tt> injects a sticky footer to\nall pages that displays the current environment.</li>\n</ul>\n</li>\n<li>In each environment\u2019s settings file, add the <tt>ENVIRONMENT_KEY</tt> setting,\nwith the corresponding environment key string. See below.</li>\n</ol>\n</div>\n<div id=\"built-in-environments\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Built-in environments</a></h2>\n<p>There are a number of built-in environment definitions:</p>\n<ul>\n<li><tt>'local'</tt>: A striped grey banner. Appears site-wide (default).</li>\n<li><tt>'dev'</tt>: A striped blue banner. Appears site-wide.</li>\n<li><tt>'staging'</tt>: A striped yellow banner. Appears site-wide.</li>\n<li><tt>'production'</tt>: A striped red banner. Only appears in <tt>/admin</tt>.</li>\n</ul>\n</div>\n<div id=\"configuration\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Configuration</a></h2>\n<p>The following settings are supported in your <tt>settings.py</tt>:</p>\n<ul>\n<li><tt>ENVI_ENVIRONMENT_KEY</tt>: A string representing the key to use to search\nthe <tt>ENVI_ENVIRONMENTS</tt> settings dictionary. Defaults to <tt>'local'</tt>.</li>\n<li><tt>ENVI_ENVIRONMENTS</tt>: A dictionary containing key-value pairs consisting\nof environment keys (as strings) mapped to dictionaries representing an\nenvironment definition. By default, there are 4 <a href=\"#built-in-environments\" rel=\"nofollow\">built-in environments</a>\navailable for selection.</li>\n<li><tt>ENVI_ENVIRONMENT</tt>: The current environment. This can either be defined\nexplicitly (see <a href=\"#creating-environments\" rel=\"nofollow\">Creating environments</a>), otherwise it will be set to the\ncorresponding dictionary by looking up the <tt>ENVI_ENVIRONMENT_KEY</tt> within\nthe <tt>ENVI_ENVIRONMENTS</tt> dictionary.</li>\n</ul>\n</div>\n<div id=\"creating-environments\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Creating environments</a></h2>\n<p>Environments can be created using the following dictionary structure:</p>\n<pre><span class=\"n\">CUSTOM_ENV</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># Required for all subclasses of EnviBaseMiddleware.</span>\n    <span class=\"s2\">\"SHOW_IN_ADMIN\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"SHOW_IN_SITE\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n\n    <span class=\"c1\"># Only required for subclasses of EnviBaseTemplateMiddleware.</span>\n    <span class=\"s2\">\"CONTEXT\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"c1\"># The contents of this dictionary will be passed to the template</span>\n        <span class=\"c1\"># being rendered. You can add anything you want here.</span>\n        <span class=\"s2\">\"CONTENT\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ENVIRONMENT: STAGING\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"COLOR_A\"</span><span class=\"p\">:</span> <span class=\"s2\">\"#ffba1e\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"COLOR_B\"</span><span class=\"p\">:</span> <span class=\"s2\">\"#dba11a\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Then, this environment definition can be either:</p>\n<ul>\n<li><p>Added to the <tt>ENVI_ENVIRONMENTS</tt> dictionary, and activated by setting\nthe <tt>ENVI_ENVIRONMENT_KEY</tt> to the respective key.</p>\n<pre><span class=\"n\">ENVI_ENVIRONMENTS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"custom_key_1\"</span><span class=\"p\">:</span> <span class=\"n\">CUSTOM_ENV</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"custom_key_2\"</span><span class=\"p\">:</span> <span class=\"n\">OTHER_CUSTOM_ENV</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">ENVI_ENVIRONMENT_KEY</span> <span class=\"o\">=</span> <span class=\"s2\">\"custom_key_1\"</span>\n</pre>\n</li>\n<li><p>Used to set the <tt>ENVI_ENVIRONMENT</tt> value directly.</p>\n<pre><span class=\"n\">ENVI_ENVIRONMENT</span> <span class=\"o\">=</span> <span class=\"n\">CUSTOM_ENV</span>\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"advanced-usage\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Advanced usage</a></h2>\n<p>The implementation of <tt><span class=\"pre\">django-envi</span></tt> makes it easy to customize.</p>\n<div id=\"extending-via-templates\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Extending via templates</a></h3>\n<p>TODO: How to.</p>\n</div>\n<div id=\"extending-via-subclassing\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Extending via subclassing</a></h3>\n<p>TODO: How to.</p>\n</div>\n</div>\n<div id=\"compatability\">\n<h2><a href=\"#id9\" rel=\"nofollow\">Compatability</a></h2>\n<p>The latest build of <tt><span class=\"pre\">django-envi</span></tt> has been tested on the following\nversions of Django:</p>\n<ul>\n<li><tt>2.0.1</tt></li>\n<li><tt>1.11.9 (LTS)</tt></li>\n<li><tt>1.8.18 (LTS)</tt></li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Changelog</a></h2>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Version</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>0.2.1</td>\n<td>Bugfix to prevent adding the banner to AJAX requests.\nThanks to @marksweb for the PR. Also adds backwards\ncompatability for Django versions &lt; 1.10.</td>\n</tr>\n<tr><td>0.2</td>\n<td>Repackaged without unnecessary docs/images directory. All\ndocumentation can be found in README.rst.</td>\n</tr>\n<tr><td>0.1.2</td>\n<td>Fixes reference to nonexistent template. Manifest issue.</td>\n</tr>\n<tr><td>0.1.1</td>\n<td>Renamed to django-envi.</td>\n</tr>\n<tr><td>0.1</td>\n<td>Initial version.</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 3482464, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "ab994191335e0b1096fd5e4d393003d3", "sha256": "e8f5fcbf0c50f75a5e104fa69a2e201ce2e00a12ac590fce5ea9055038ba2b12"}, "downloads": -1, "filename": "django-envi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ab994191335e0b1096fd5e4d393003d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102348, "upload_time": "2017-08-16T17:46:08", "upload_time_iso_8601": "2017-08-16T17:46:08.369798Z", "url": "https://files.pythonhosted.org/packages/24/be/e4f9f409f17012fdec16b15baaff1c0d6dadff19d2d187af46a02e85b76d/django-envi-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "068a15753016ae9539c21cfcaf24b4e7", "sha256": "b19151478351d01688dc0f221215220cb3a144e9571816c0264d748c312c9ab2"}, "downloads": -1, "filename": "django-envi-0.1.2.tar.gz", "has_sig": false, "md5_digest": "068a15753016ae9539c21cfcaf24b4e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102846, "upload_time": "2017-08-16T17:49:01", "upload_time_iso_8601": "2017-08-16T17:49:01.171499Z", "url": "https://files.pythonhosted.org/packages/a2/49/b10be0db29f624023e4b49c3fdf0c8b682b92c8ebbd29c40079185208ff8/django-envi-0.1.2.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "ea3eec3105629afd8cdf08c4803db10b", "sha256": "50d62de6739bd833b49a0c658c9dd5e03be6ca8c689dd9bd9d1a5494895c8390"}, "downloads": -1, "filename": "django-envi-0.2.tar.gz", "has_sig": false, "md5_digest": "ea3eec3105629afd8cdf08c4803db10b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4422, "upload_time": "2017-08-16T21:07:35", "upload_time_iso_8601": "2017-08-16T21:07:35.095160Z", "url": "https://files.pythonhosted.org/packages/d1/52/c45d99a6293609e3a32bb6d07e9c34f24aa604e24a4fa4f25c16597f5844/django-envi-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "cf073ca9b36b98a6f5d8d3423fe2628c", "sha256": "21ad64840d15960927449e531869322a75d52d2f00a551d2f88773b53278d2e0"}, "downloads": -1, "filename": "django-envi-0.2.1.tar.gz", "has_sig": false, "md5_digest": "cf073ca9b36b98a6f5d8d3423fe2628c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6055, "upload_time": "2018-01-11T23:49:05", "upload_time_iso_8601": "2018-01-11T23:49:05.426855Z", "url": "https://files.pythonhosted.org/packages/e7/1b/4c2b9bdbd42fe636c9623bf08ae2a3af4d37be97ddc3bf374490e6804384/django-envi-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cf073ca9b36b98a6f5d8d3423fe2628c", "sha256": "21ad64840d15960927449e531869322a75d52d2f00a551d2f88773b53278d2e0"}, "downloads": -1, "filename": "django-envi-0.2.1.tar.gz", "has_sig": false, "md5_digest": "cf073ca9b36b98a6f5d8d3423fe2628c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6055, "upload_time": "2018-01-11T23:49:05", "upload_time_iso_8601": "2018-01-11T23:49:05.426855Z", "url": "https://files.pythonhosted.org/packages/e7/1b/4c2b9bdbd42fe636c9623bf08ae2a3af4d37be97ddc3bf374490e6804384/django-envi-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:21 2020"}