{"info": {"author": "Matthias Hennig Lab, University of Edinburgh", "author_email": "m.hennig@ed.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Herding Spikes 2\n\n[![Build Status](https://travis-ci.org/mhhennig/HS2.svg?branch=master)](https://travis-ci.org/mhhennig/HS2)\n[![Gitter chat](https://badges.gitter.im/HerdingSpikes.png)](https://gitter.im/HerdingSpikes)\n\n![Spikes](documentation/pictures/spikes.png)\n\n## Software for high density electrophysiology\n\nThis software provides functionality for the detection, localisation and clustering of spike data from dense multielectrode arrays based on the methods described in the following papers:\n\nJ.-O. Muthmann, H. Amin, E. Sernagor, A. Maccione, D. Panas, L. Berdondini, U.S. Bhalla, M.H. Hennig MH (2015). [Spike detection for large neural populations using high density multielectrode arrays](http://journal.frontiersin.org/article/10.3389/fninf.2015.00028/abstract). Front. Neuroinform. 9:28. doi: 10.3389/fninf.2015.00028.\n\nG. Hilgen, M. Sorbaro, S. Pirmoradian, J.-O. Muthmann, I. Kepiro, S. Ullo, C. Juarez Ramirez, A. Puente Encinas, A. Maccione, L. Berdondini, V. Murino, D. Sona, F. Cella Zanacchi, E. Sernagor, M.H. Hennig (2016). [Unsupervised spike sorting for large scale, high density multielectrode arrays.](http://www.cell.com/cell-reports/fulltext/S2211-1247(17)30236-X) Cell Reports 18, 2521\u20132532. bioRxiv: <http://dx.doi.org/10.1101/048645>.\n\nThis implementation is highly efficient, spike detection and localisation runs in real time on recordings from 4,096 channels at 7kHz on a desktop PC. Large recordings with millions of events can be sorted in minutes.\n\nSince we believe publicly funded research code should be free and open, all code is released under GPL-3.0.\n\n### Supported systems  <a name=\"systems\"></a>\n\n- [3Brain](http://3brain.com/) BIOCAM and BIOCAM X\n- [Neuropixel array](https://www.ucl.ac.uk/neuropixels)\n- [ETH MEA1K](https://www.bsse.ethz.ch/bel/research/cmos-microsystems/microelectrode-systems.html)\n- [128 channel Neuroseeker array](http://neuroseeker.eu/)\n\n## Contributors, alphabetical <a name=\"people\"></a>\n\n- [Matthias Hennig](http://homepages.inf.ed.ac.uk/mhennig/index.html): Spike sorting\n- [Jano Horvath](https://github.com/JanoHorvath): Parameter optimisation\n- [Cole Hurwitz](https://github.com/colehurwitz31): Spike detection, localisation and sorting, C++ code\n- [Oliver Muthmann](mailto:ollimuh@googlemail.com): Spike detection and localisation\n- [Albert Puente Encinas](https://github.com/albertpuente): C++ implementation, optimisation and parallelisation\n- [Martino Sorbaro](http://martinosorb.github.io): Spike sorting, class structure and much of the python code\n- [Cesar Juarez Ramirez](mailto:cesaripn2@gmail.com): Visualisation\n- [Raimon Wintzer](https://github.com/lsIand): GUI and visualisation\n\n## Quick start <a name=\"quickstart\"></a>\n\nThe code has been tested with Python version 3.6. It is essential `numpy` is available before installing.\nThe other dependencies will be installed by the installer.\n\nIf your system does not have Python pre-installed, the [Anaconda distribution](https://www.anaconda.com/download/) may be used.\n\n### All operative systems - Installation via pip\n\nWe suggest you use Anaconda if you don't have a favourite Python installed yet. We also recommend installing the code in a virtual environment (see below in the \"from source\" sections).\n\nA pip distribution is available and can be installed as follows:\n\n    pip install numpy scipy\n    pip install herdingspikes\n\n**Note:** HerdingSpikes is tested on Python 3.5 and above. It *may* work on Python 3.0-3.4.\n\nTo install from source, clone this repository and follow the instructions below.\n\n### Linux/Mac - from source\n\nWe suggest you install the code in a virtual environment. You can create one by running\n\n    python3 -m venv --system-site-packages desired/location/HS2venv\n    source desired/location/HS2venv/bin/activate\n\nYou can omit `--system-site-packages` if you don't want to use the local versions of common Python libraries. You will need to `activate` whenever you're using the module.\n\nThe module can automatically be installed, including all dependencies, by running\n\n    pip install numpy scipy\n    python setup.py install\n\n\n### Windows - from source\n\n#### 1. Creating a Python virtual environment\n\n##### Option 1: GUI\n\nOnce [Anaconda](https://www.anaconda.com/download/#windows) is installed, create and activate a virtual environment called ``HS2env``. This can be done with the ``Anaconda Navigator`` per mouse click. To make sure ``numpy`` and ``Cython`` are available, type\n\n    conda install -n C:\\Users\\HS2env numpy\n\n\n##### Option 2: Command line (from source)\n\nAlternatively, open the ``Anaconda Prompt`` and type:\n\n    conda search \"^python$\"\n\nThis will display a list of available python versions. Here we choose 3.6.5:\n\n    conda create -n C:\\Users\\HS2env python=3.6.5 anaconda\n\nThis environment should be activated every time HS2 is used with the command\n\n    conda activate C:\\Users\\HS2env\n\nTo make sure ``numpy`` is available, type\n\n    conda install -n C:\\Users\\HS2env numpy\n\n#### 2. Installing a C++ Compiler\n\nHS2 contains fast C++ code, which requires a compiler. If you don't have a C++ compiler installed, the easiest solution is to download and install the Microsoft Visual Studio Build Tools: [https://www.visualstudio.com/downloads/#build-tools-for-visual-studio-2017](https://www.visualstudio.com/downloads/#build-tools-for-visual-studio-2017).\n\n\n#### 3. Obtaining and installing HS2\n\n##### Getting the code\n\n**Either** download and uncompress: [https://github.com/mhhennig/HS2/archive/master.zip](https://github.com/mhhennig/HS2/archive/master.zip)\n\n**Or** install ``git`` from [https://git-scm.com/download/win](https://git-scm.com/download/win). Then open a command prompt and type\n\n    git clone https://github.com/mhhennig/HS2.git\n\nThis will create a folder ``HS2`` in the current directory. Note that updates can now be simply retrieved by typing ``git pull``.\n\n##### Install\n\nTo install, go to the HS2 directory, e.g.\n\n    cd HS2\n\nand type\n\n    python setup.py install\n\nNow HS2 will be available in the current virtual environment.\n\n\n\n## Example code\n\nExample code for the different supported systems is in the folder [notebooks](notebooks). These can be run without installing HS2 system-wide, but requires to run ``python setup.py build_ext --inplace`` in the ``HS2`` directory. Next, run ``jupyter notebook`` and navigate to the directory to try the code. Each notebook will download a short segment of raw data.\n\nGo [here](documentation) for documentation. A worked example for Biocam data is [here](documentation/biocam/BioCam-demo.md).\n\n## Contact\n\nThe herders are based at the School of Informatics, University of Edinburgh. Contact us [here](http://homepages.inf.ed.ac.uk/mhennig/contact/), we are happy to help.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mhhennig/HS2", "keywords": "spikes sorting electrophysiology detection", "license": "", "maintainer": "", "maintainer_email": "", "name": "herdingspikes", "package_url": "https://pypi.org/project/herdingspikes/", "platform": "", "project_url": "https://pypi.org/project/herdingspikes/", "project_urls": {"Homepage": "https://github.com/mhhennig/HS2", "Source": "https://github.com/mhhennig/HS2/"}, "release_url": "https://pypi.org/project/herdingspikes/0.3.7/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Efficient spike detection and sorting for dense MEA", "version": "0.3.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Herding Spikes 2</h1>\n<p><a href=\"https://travis-ci.org/mhhennig/HS2\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e13d58f1af825d0e7241aca2a058a17824cf3f05/68747470733a2f2f7472617669732d63692e6f72672f6d6868656e6e69672f4853322e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://gitter.im/HerdingSpikes\" rel=\"nofollow\"><img alt=\"Gitter chat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28b60dbd50e2d86de700dfd272165655d5fc19bf/68747470733a2f2f6261646765732e6769747465722e696d2f48657264696e675370696b65732e706e67\"></a></p>\n<p><img alt=\"Spikes\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0e2985e6c44f49b2d7b5f911d0f9a6c665df3f2/646f63756d656e746174696f6e2f70696374757265732f7370696b65732e706e67\"></p>\n<h2>Software for high density electrophysiology</h2>\n<p>This software provides functionality for the detection, localisation and clustering of spike data from dense multielectrode arrays based on the methods described in the following papers:</p>\n<p>J.-O. Muthmann, H. Amin, E. Sernagor, A. Maccione, D. Panas, L. Berdondini, U.S. Bhalla, M.H. Hennig MH (2015). <a href=\"http://journal.frontiersin.org/article/10.3389/fninf.2015.00028/abstract\" rel=\"nofollow\">Spike detection for large neural populations using high density multielectrode arrays</a>. Front. Neuroinform. 9:28. doi: 10.3389/fninf.2015.00028.</p>\n<p>G. Hilgen, M. Sorbaro, S. Pirmoradian, J.-O. Muthmann, I. Kepiro, S. Ullo, C. Juarez Ramirez, A. Puente Encinas, A. Maccione, L. Berdondini, V. Murino, D. Sona, F. Cella Zanacchi, E. Sernagor, M.H. Hennig (2016). <a href=\"http://www.cell.com/cell-reports/fulltext/S2211-1247(17)30236-X\" rel=\"nofollow\">Unsupervised spike sorting for large scale, high density multielectrode arrays.</a> Cell Reports 18, 2521\u20132532. bioRxiv: <a href=\"http://dx.doi.org/10.1101/048645\" rel=\"nofollow\">http://dx.doi.org/10.1101/048645</a>.</p>\n<p>This implementation is highly efficient, spike detection and localisation runs in real time on recordings from 4,096 channels at 7kHz on a desktop PC. Large recordings with millions of events can be sorted in minutes.</p>\n<p>Since we believe publicly funded research code should be free and open, all code is released under GPL-3.0.</p>\n<h3>Supported systems  <a></a></h3>\n<ul>\n<li><a href=\"http://3brain.com/\" rel=\"nofollow\">3Brain</a> BIOCAM and BIOCAM X</li>\n<li><a href=\"https://www.ucl.ac.uk/neuropixels\" rel=\"nofollow\">Neuropixel array</a></li>\n<li><a href=\"https://www.bsse.ethz.ch/bel/research/cmos-microsystems/microelectrode-systems.html\" rel=\"nofollow\">ETH MEA1K</a></li>\n<li><a href=\"http://neuroseeker.eu/\" rel=\"nofollow\">128 channel Neuroseeker array</a></li>\n</ul>\n<h2>Contributors, alphabetical <a></a></h2>\n<ul>\n<li><a href=\"http://homepages.inf.ed.ac.uk/mhennig/index.html\" rel=\"nofollow\">Matthias Hennig</a>: Spike sorting</li>\n<li><a href=\"https://github.com/JanoHorvath\" rel=\"nofollow\">Jano Horvath</a>: Parameter optimisation</li>\n<li><a href=\"https://github.com/colehurwitz31\" rel=\"nofollow\">Cole Hurwitz</a>: Spike detection, localisation and sorting, C++ code</li>\n<li><a href=\"mailto:ollimuh@googlemail.com\">Oliver Muthmann</a>: Spike detection and localisation</li>\n<li><a href=\"https://github.com/albertpuente\" rel=\"nofollow\">Albert Puente Encinas</a>: C++ implementation, optimisation and parallelisation</li>\n<li><a href=\"http://martinosorb.github.io\" rel=\"nofollow\">Martino Sorbaro</a>: Spike sorting, class structure and much of the python code</li>\n<li><a href=\"mailto:cesaripn2@gmail.com\">Cesar Juarez Ramirez</a>: Visualisation</li>\n<li><a href=\"https://github.com/lsIand\" rel=\"nofollow\">Raimon Wintzer</a>: GUI and visualisation</li>\n</ul>\n<h2>Quick start <a></a></h2>\n<p>The code has been tested with Python version 3.6. It is essential <code>numpy</code> is available before installing.\nThe other dependencies will be installed by the installer.</p>\n<p>If your system does not have Python pre-installed, the <a href=\"https://www.anaconda.com/download/\" rel=\"nofollow\">Anaconda distribution</a> may be used.</p>\n<h3>All operative systems - Installation via pip</h3>\n<p>We suggest you use Anaconda if you don't have a favourite Python installed yet. We also recommend installing the code in a virtual environment (see below in the \"from source\" sections).</p>\n<p>A pip distribution is available and can be installed as follows:</p>\n<pre><code>pip install numpy scipy\npip install herdingspikes\n</code></pre>\n<p><strong>Note:</strong> HerdingSpikes is tested on Python 3.5 and above. It <em>may</em> work on Python 3.0-3.4.</p>\n<p>To install from source, clone this repository and follow the instructions below.</p>\n<h3>Linux/Mac - from source</h3>\n<p>We suggest you install the code in a virtual environment. You can create one by running</p>\n<pre><code>python3 -m venv --system-site-packages desired/location/HS2venv\nsource desired/location/HS2venv/bin/activate\n</code></pre>\n<p>You can omit <code>--system-site-packages</code> if you don't want to use the local versions of common Python libraries. You will need to <code>activate</code> whenever you're using the module.</p>\n<p>The module can automatically be installed, including all dependencies, by running</p>\n<pre><code>pip install numpy scipy\npython setup.py install\n</code></pre>\n<h3>Windows - from source</h3>\n<h4>1. Creating a Python virtual environment</h4>\n<h5>Option 1: GUI</h5>\n<p>Once <a href=\"https://www.anaconda.com/download/#windows\" rel=\"nofollow\">Anaconda</a> is installed, create and activate a virtual environment called <code>HS2env</code>. This can be done with the <code>Anaconda Navigator</code> per mouse click. To make sure <code>numpy</code> and <code>Cython</code> are available, type</p>\n<pre><code>conda install -n C:\\Users\\HS2env numpy\n</code></pre>\n<h5>Option 2: Command line (from source)</h5>\n<p>Alternatively, open the <code>Anaconda Prompt</code> and type:</p>\n<pre><code>conda search \"^python$\"\n</code></pre>\n<p>This will display a list of available python versions. Here we choose 3.6.5:</p>\n<pre><code>conda create -n C:\\Users\\HS2env python=3.6.5 anaconda\n</code></pre>\n<p>This environment should be activated every time HS2 is used with the command</p>\n<pre><code>conda activate C:\\Users\\HS2env\n</code></pre>\n<p>To make sure <code>numpy</code> is available, type</p>\n<pre><code>conda install -n C:\\Users\\HS2env numpy\n</code></pre>\n<h4>2. Installing a C++ Compiler</h4>\n<p>HS2 contains fast C++ code, which requires a compiler. If you don't have a C++ compiler installed, the easiest solution is to download and install the Microsoft Visual Studio Build Tools: <a href=\"https://www.visualstudio.com/downloads/#build-tools-for-visual-studio-2017\" rel=\"nofollow\">https://www.visualstudio.com/downloads/#build-tools-for-visual-studio-2017</a>.</p>\n<h4>3. Obtaining and installing HS2</h4>\n<h5>Getting the code</h5>\n<p><strong>Either</strong> download and uncompress: <a href=\"https://github.com/mhhennig/HS2/archive/master.zip\" rel=\"nofollow\">https://github.com/mhhennig/HS2/archive/master.zip</a></p>\n<p><strong>Or</strong> install <code>git</code> from <a href=\"https://git-scm.com/download/win\" rel=\"nofollow\">https://git-scm.com/download/win</a>. Then open a command prompt and type</p>\n<pre><code>git clone https://github.com/mhhennig/HS2.git\n</code></pre>\n<p>This will create a folder <code>HS2</code> in the current directory. Note that updates can now be simply retrieved by typing <code>git pull</code>.</p>\n<h5>Install</h5>\n<p>To install, go to the HS2 directory, e.g.</p>\n<pre><code>cd HS2\n</code></pre>\n<p>and type</p>\n<pre><code>python setup.py install\n</code></pre>\n<p>Now HS2 will be available in the current virtual environment.</p>\n<h2>Example code</h2>\n<p>Example code for the different supported systems is in the folder <a href=\"notebooks\" rel=\"nofollow\">notebooks</a>. These can be run without installing HS2 system-wide, but requires to run <code>python setup.py build_ext --inplace</code> in the <code>HS2</code> directory. Next, run <code>jupyter notebook</code> and navigate to the directory to try the code. Each notebook will download a short segment of raw data.</p>\n<p>Go <a href=\"documentation\" rel=\"nofollow\">here</a> for documentation. A worked example for Biocam data is <a href=\"documentation/biocam/BioCam-demo.md\" rel=\"nofollow\">here</a>.</p>\n<h2>Contact</h2>\n<p>The herders are based at the School of Informatics, University of Edinburgh. Contact us <a href=\"http://homepages.inf.ed.ac.uk/mhennig/contact/\" rel=\"nofollow\">here</a>, we are happy to help.</p>\n\n          </div>"}, "last_serial": 6684147, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "f0961b3e392b5142e57a0fe8974e77df", "sha256": "491353c9b60260c7ec297aa5c46e5b81358bc52667b49871ea4fe709e58b283d"}, "downloads": -1, "filename": "herdingspikes-0.3.0.tar.gz", "has_sig": false, "md5_digest": "f0961b3e392b5142e57a0fe8974e77df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 203811, "upload_time": "2019-05-29T16:50:19", "upload_time_iso_8601": "2019-05-29T16:50:19.103237Z", "url": "https://files.pythonhosted.org/packages/39/21/f704366142239664a74cc12afc840fca6b2e2cc4c52fe4c842fd5b914144/herdingspikes-0.3.0.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "c75b6a60fe011a37b939d5ea1c350c7d", "sha256": "d6fc36081e54d2e37de2c786bfb1ca2fd31021ae35ba8cdab5c56cb05be035bc"}, "downloads": -1, "filename": "herdingspikes-0.3.2-cp35-cp35m-macosx_10_6_x86_64.whl", "has_sig": false, "md5_digest": "c75b6a60fe011a37b939d5ea1c350c7d", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5", "size": 481507, "upload_time": "2019-06-24T11:30:54", "upload_time_iso_8601": "2019-06-24T11:30:54.905951Z", "url": "https://files.pythonhosted.org/packages/04/17/fb9b268f6a2893a7a470dd623d263f6bcdd79bfec167f1298444b243cf0b/herdingspikes-0.3.2-cp35-cp35m-macosx_10_6_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8c548e25fe38018996fb3ff1abeb2dd", "sha256": "264f8571eeb743ffff90a81f01b50e36ee3831d481877bdd4ef7e55d779e8fad"}, "downloads": -1, "filename": "herdingspikes-0.3.2-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "f8c548e25fe38018996fb3ff1abeb2dd", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5", "size": 484024, "upload_time": "2019-06-24T11:16:48", "upload_time_iso_8601": "2019-06-24T11:16:48.901344Z", "url": "https://files.pythonhosted.org/packages/ff/1a/f45f7b4e779ea7883b75a719721d6cd62f43826719efbba552c38ba9ae03/herdingspikes-0.3.2-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c9bb895f78b03b0f8ef9b41434c5fea", "sha256": "3c862a43d3471d97bd66225419ae2465ae4bb8b9e659531d4dfb2cea3785874c"}, "downloads": -1, "filename": "herdingspikes-0.3.2-cp37-cp37m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "0c9bb895f78b03b0f8ef9b41434c5fea", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5", "size": 482268, "upload_time": "2019-06-24T09:43:51", "upload_time_iso_8601": "2019-06-24T09:43:51.140575Z", "url": "https://files.pythonhosted.org/packages/38/35/bab57e6ed2db16e11420748b468909b508ae1b22d3db0d6477889dbdf399/herdingspikes-0.3.2-cp37-cp37m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a8cbc3f5fcc2406c2eb65bd3ae2c292", "sha256": "edefae0cce3629275282d8404827d1d262389d9e90df31c3c33e083bcb11ec7d"}, "downloads": -1, "filename": "herdingspikes-0.3.2.tar.gz", "has_sig": false, "md5_digest": "1a8cbc3f5fcc2406c2eb65bd3ae2c292", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 344418, "upload_time": "2019-05-30T14:13:58", "upload_time_iso_8601": "2019-05-30T14:13:58.868988Z", "url": "https://files.pythonhosted.org/packages/94/17/2b1732ef01d4c24b5ee22ef70e32b0fff00b61713f41e40dc145315cfd1b/herdingspikes-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "cbeca5e0d783c429ca7f07862c844214", "sha256": "643a88848504dea84922a9567324c9eaecaa2b8837983c1e10319a320730fe3c"}, "downloads": -1, "filename": "herdingspikes-0.3.3-py3.7-linux-x86_64.egg", "has_sig": false, "md5_digest": "cbeca5e0d783c429ca7f07862c844214", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.5", "size": 1109910, "upload_time": "2020-01-29T16:05:40", "upload_time_iso_8601": "2020-01-29T16:05:40.727304Z", "url": "https://files.pythonhosted.org/packages/fc/53/c2e1ed0a7ee9c31c2c1320a12c0c6c4b5eb0b87bdeed0487610393a8b70e/herdingspikes-0.3.3-py3.7-linux-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "56c5721bb3489cf3f8a9c70e622234e6", "sha256": "d7532f4805275ee5a8461e48d75c8bf283188a7342813832a6f6c6a842296144"}, "downloads": -1, "filename": "herdingspikes-0.3.3.tar.gz", "has_sig": false, "md5_digest": "56c5721bb3489cf3f8a9c70e622234e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 344329, "upload_time": "2019-08-12T20:36:34", "upload_time_iso_8601": "2019-08-12T20:36:34.750785Z", "url": "https://files.pythonhosted.org/packages/79/d3/8c6fdc73ce206f14494e9ed06577ce2d56134bd6707d45330cf0ea513451/herdingspikes-0.3.3.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "af5e5758ec2100adfb5a8a2761f6ce01", "sha256": "1d8f40fef5c8d653f4eaf3b68e9e857980565b7cc80dd484621292d7f5da8f22"}, "downloads": -1, "filename": "herdingspikes-0.3.6.tar.gz", "has_sig": false, "md5_digest": "af5e5758ec2100adfb5a8a2761f6ce01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6195880, "upload_time": "2020-01-29T16:05:43", "upload_time_iso_8601": "2020-01-29T16:05:43.635201Z", "url": "https://files.pythonhosted.org/packages/76/82/df99a317cf5a147916f46ed89c9b757e9469bd3838448e41bfec9a39ecf2/herdingspikes-0.3.6.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "ad4d3317ed1ca532f6e823b579b54406", "sha256": "73da16ee2c245e814181788067a13fc0a21d5ae7190df1a502f5b0bdc6af80ba"}, "downloads": -1, "filename": "herdingspikes-0.3.7.tar.gz", "has_sig": false, "md5_digest": "ad4d3317ed1ca532f6e823b579b54406", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3351600, "upload_time": "2020-02-23T14:43:45", "upload_time_iso_8601": "2020-02-23T14:43:45.936176Z", "url": "https://files.pythonhosted.org/packages/65/31/075bf96961488591f651ad4c8c907cc38fb23be40fdb31bfd3373bef417a/herdingspikes-0.3.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad4d3317ed1ca532f6e823b579b54406", "sha256": "73da16ee2c245e814181788067a13fc0a21d5ae7190df1a502f5b0bdc6af80ba"}, "downloads": -1, "filename": "herdingspikes-0.3.7.tar.gz", "has_sig": false, "md5_digest": "ad4d3317ed1ca532f6e823b579b54406", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3351600, "upload_time": "2020-02-23T14:43:45", "upload_time_iso_8601": "2020-02-23T14:43:45.936176Z", "url": "https://files.pythonhosted.org/packages/65/31/075bf96961488591f651ad4c8c907cc38fb23be40fdb31bfd3373bef417a/herdingspikes-0.3.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:34 2020"}