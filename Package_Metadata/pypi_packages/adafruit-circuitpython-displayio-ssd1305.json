{"info": {"author": "Adafruit Industries", "author_email": "circuitpython@adafruit.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: System :: Hardware"], "description": "Introduction\n============\n\n.. image:: https://readthedocs.org/projects/adafruit-circuitpython-displayio_ssd1305/badge/?version=latest\n    :target: https://circuitpython.readthedocs.io/projects/displayio_ssd1305/en/latest/\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/discord/327254708534116352.svg\n    :target: https://discord.gg/nBQh6qu\n    :alt: Discord\n\n.. image:: https://github.com/adafruit/Adafruit_CircuitPython_DisplayIO_SSD1305/workflows/Build%20CI/badge.svg\n    :target: https://github.com/adafruit/Adafruit_CircuitPython_DisplayIO_SSD1305/actions\n    :alt: Build Status\n\nDisplayIO driver for SSD1305 monochrome displays\n\nFor the framebuf based driver see `Adafruit CircuitPython SSD1305 <https://github.com/adafruit/Adafruit_CircuitPython_SSD1305/>`_.\n\n\nDependencies\n=============\nThis driver depends on:\n\n* `Adafruit CircuitPython Version 5+ <https://github.com/adafruit/circuitpython>`_\n\nPlease ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n`the Adafruit library and driver bundle <https://circuitpython.org/libraries>`_.\n\nInstalling from PyPI\n=====================\n.. note:: This library is not available on PyPI yet. Install documentation is included\n   as a standard element. Stay tuned for PyPI availability!\n\nOn supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `from\nPyPI <https://pypi.org/project/adafruit-circuitpython-displayio_ssd1305/>`_. To install for current user:\n\n.. code-block:: shell\n\n    pip3 install adafruit-circuitpython-displayio-ssd1305\n\nTo install system-wide (this may be required in some cases):\n\n.. code-block:: shell\n\n    sudo pip3 install adafruit-circuitpython-displayio-ssd1305\n\nTo install in a virtual environment in your current project:\n\n.. code-block:: shell\n\n    mkdir project-name && cd project-name\n    python3 -m venv .env\n    source .env/bin/activate\n    pip3 install adafruit-circuitpython-displayio-ssd1305\n\nUsage Example\n=============\n\n.. code-block:: python\n\n    import board\n    import displayio\n    import terminalio\n    from adafruit_display_text import label\n    import adafruit_displayio_ssd1305\n\n    displayio.release_displays()\n\n    # Use for SPI\n    spi = board.SPI()\n    oled_cs = board.D5\n    oled_dc = board.D6\n    display_bus = displayio.FourWire(spi, command=oled_dc, chip_select=oled_cs,\n                                     baudrate=1000000, reset=board.D9)\n\n    # Use for I2C\n    # i2c = board.I2C()\n    # display_bus = displayio.I2CDisplay(i2c, device_address=0x3c)\n\n    WIDTH = 128\n    HEIGHT = 64     # Change to 32 if needed\n    BORDER = 8\n    FONTSCALE = 1\n\n    display = adafruit_displayio_ssd1305.SSD1305(display_bus, width=WIDTH, height=HEIGHT)\n\n    # Make the display context\n    splash = displayio.Group(max_size=10)\n    display.show(splash)\n\n    color_bitmap = displayio.Bitmap(display.width, display.height, 1)\n    color_palette = displayio.Palette(1)\n    color_palette[0] = 0xFFFFFF # White\n\n    bg_sprite = displayio.TileGrid(color_bitmap,\n                                   pixel_shader=color_palette,\n                                   x=0, y=0)\n    splash.append(bg_sprite)\n\n    # Draw a smaller inner rectangle\n    inner_bitmap = displayio.Bitmap(display.width - BORDER * 2, display.height - BORDER * 2, 1)\n    inner_palette = displayio.Palette(1)\n    inner_palette[0] = 0x000000 # Black\n    inner_sprite = displayio.TileGrid(inner_bitmap,\n                                      pixel_shader=inner_palette,\n                                      x=BORDER, y=BORDER)\n    splash.append(inner_sprite)\n\n    # Draw a label\n    text = \"Hello World!\"\n    text_area = label.Label(terminalio.FONT, text=text, color=0xFFFFFF)\n    text_width = text_area.bounding_box[2] * FONTSCALE\n    text_group = displayio.Group(max_size=10, scale=FONTSCALE, x=display.width // 2 - text_width // 2,\n                                 y=display.height // 2)\n    text_group.append(text_area) # Subgroup for text scaling\n    splash.append(text_group)\n\n    while True:\n        pass\n\nContributing\n============\n\nContributions are welcome! Please read our `Code of Conduct\n<https://github.com/adafruit/Adafruit_CircuitPython_DisplayIO_SSD1305/blob/master/CODE_OF_CONDUCT.md>`_\nbefore contributing to help this project stay welcoming.\n\nDocumentation\n=============\n\nFor information on building library documentation, please check out `this guide <https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1>`_.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adafruit/Adafruit_CircuitPython_DisplayIO_SSD1305", "keywords": "adafruit blinka circuitpython micropython displayio_ssd1305 displayio ssd1305 oled", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "adafruit-circuitpython-displayio-ssd1305", "package_url": "https://pypi.org/project/adafruit-circuitpython-displayio-ssd1305/", "platform": "", "project_url": "https://pypi.org/project/adafruit-circuitpython-displayio-ssd1305/", "project_urls": {"Homepage": "https://github.com/adafruit/Adafruit_CircuitPython_DisplayIO_SSD1305"}, "release_url": "https://pypi.org/project/adafruit-circuitpython-displayio-ssd1305/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "DisplayIO driver for SSD1305 monochrome displays", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<a href=\"https://circuitpython.readthedocs.io/projects/displayio_ssd1305/en/latest/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47be569d31545d8652236f39f6af2f55e2411ceb/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61646166727569742d63697263756974707974686f6e2d646973706c6179696f5f737364313330352f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://discord.gg/nBQh6qu\" rel=\"nofollow\"><img alt=\"Discord\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2973e7de9caf359680953316fa3b541f702086c/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3332373235343730383533343131363335322e737667\"></a>\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_DisplayIO_SSD1305/actions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/687cf559e773328c6863cd3542e6e06cfbe824ed/68747470733a2f2f6769746875622e636f6d2f61646166727569742f41646166727569745f43697263756974507974686f6e5f446973706c6179494f5f535344313330352f776f726b666c6f77732f4275696c6425323043492f62616467652e737667\"></a>\n<p>DisplayIO driver for SSD1305 monochrome displays</p>\n<p>For the framebuf based driver see <a href=\"https://github.com/adafruit/Adafruit_CircuitPython_SSD1305/\" rel=\"nofollow\">Adafruit CircuitPython SSD1305</a>.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>This driver depends on:</p>\n<ul>\n<li><a href=\"https://github.com/adafruit/circuitpython\" rel=\"nofollow\">Adafruit CircuitPython Version 5+</a></li>\n</ul>\n<p>Please ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n<a href=\"https://circuitpython.org/libraries\" rel=\"nofollow\">the Adafruit library and driver bundle</a>.</p>\n</div>\n<div id=\"installing-from-pypi\">\n<h2>Installing from PyPI</h2>\n<div>\n<p>Note</p>\n<p>This library is not available on PyPI yet. Install documentation is included\nas a standard element. Stay tuned for PyPI availability!</p>\n</div>\n<p>On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally <a href=\"https://pypi.org/project/adafruit-circuitpython-displayio_ssd1305/\" rel=\"nofollow\">from\nPyPI</a>. To install for current user:</p>\n<pre>pip3 install adafruit-circuitpython-displayio-ssd1305\n</pre>\n<p>To install system-wide (this may be required in some cases):</p>\n<pre>sudo pip3 install adafruit-circuitpython-displayio-ssd1305\n</pre>\n<p>To install in a virtual environment in your current project:</p>\n<pre>mkdir project-name <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> project-name\npython3 -m venv .env\n<span class=\"nb\">source</span> .env/bin/activate\npip3 install adafruit-circuitpython-displayio-ssd1305\n</pre>\n</div>\n<div id=\"usage-example\">\n<h2>Usage Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">board</span>\n<span class=\"kn\">import</span> <span class=\"nn\">displayio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">terminalio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_display_text</span> <span class=\"kn\">import</span> <span class=\"n\">label</span>\n<span class=\"kn\">import</span> <span class=\"nn\">adafruit_displayio_ssd1305</span>\n\n<span class=\"n\">displayio</span><span class=\"o\">.</span><span class=\"n\">release_displays</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Use for SPI</span>\n<span class=\"n\">spi</span> <span class=\"o\">=</span> <span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">SPI</span><span class=\"p\">()</span>\n<span class=\"n\">oled_cs</span> <span class=\"o\">=</span> <span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">D5</span>\n<span class=\"n\">oled_dc</span> <span class=\"o\">=</span> <span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">D6</span>\n<span class=\"n\">display_bus</span> <span class=\"o\">=</span> <span class=\"n\">displayio</span><span class=\"o\">.</span><span class=\"n\">FourWire</span><span class=\"p\">(</span><span class=\"n\">spi</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">oled_dc</span><span class=\"p\">,</span> <span class=\"n\">chip_select</span><span class=\"o\">=</span><span class=\"n\">oled_cs</span><span class=\"p\">,</span>\n                                 <span class=\"n\">baudrate</span><span class=\"o\">=</span><span class=\"mi\">1000000</span><span class=\"p\">,</span> <span class=\"n\">reset</span><span class=\"o\">=</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">D9</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Use for I2C</span>\n<span class=\"c1\"># i2c = board.I2C()</span>\n<span class=\"c1\"># display_bus = displayio.I2CDisplay(i2c, device_address=0x3c)</span>\n\n<span class=\"n\">WIDTH</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>\n<span class=\"n\">HEIGHT</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>     <span class=\"c1\"># Change to 32 if needed</span>\n<span class=\"n\">BORDER</span> <span class=\"o\">=</span> <span class=\"mi\">8</span>\n<span class=\"n\">FONTSCALE</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">display</span> <span class=\"o\">=</span> <span class=\"n\">adafruit_displayio_ssd1305</span><span class=\"o\">.</span><span class=\"n\">SSD1305</span><span class=\"p\">(</span><span class=\"n\">display_bus</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">WIDTH</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">HEIGHT</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Make the display context</span>\n<span class=\"n\">splash</span> <span class=\"o\">=</span> <span class=\"n\">displayio</span><span class=\"o\">.</span><span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"n\">max_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">splash</span><span class=\"p\">)</span>\n\n<span class=\"n\">color_bitmap</span> <span class=\"o\">=</span> <span class=\"n\">displayio</span><span class=\"o\">.</span><span class=\"n\">Bitmap</span><span class=\"p\">(</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">color_palette</span> <span class=\"o\">=</span> <span class=\"n\">displayio</span><span class=\"o\">.</span><span class=\"n\">Palette</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">color_palette</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mh\">0xFFFFFF</span> <span class=\"c1\"># White</span>\n\n<span class=\"n\">bg_sprite</span> <span class=\"o\">=</span> <span class=\"n\">displayio</span><span class=\"o\">.</span><span class=\"n\">TileGrid</span><span class=\"p\">(</span><span class=\"n\">color_bitmap</span><span class=\"p\">,</span>\n                               <span class=\"n\">pixel_shader</span><span class=\"o\">=</span><span class=\"n\">color_palette</span><span class=\"p\">,</span>\n                               <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">splash</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bg_sprite</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Draw a smaller inner rectangle</span>\n<span class=\"n\">inner_bitmap</span> <span class=\"o\">=</span> <span class=\"n\">displayio</span><span class=\"o\">.</span><span class=\"n\">Bitmap</span><span class=\"p\">(</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">width</span> <span class=\"o\">-</span> <span class=\"n\">BORDER</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">height</span> <span class=\"o\">-</span> <span class=\"n\">BORDER</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">inner_palette</span> <span class=\"o\">=</span> <span class=\"n\">displayio</span><span class=\"o\">.</span><span class=\"n\">Palette</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">inner_palette</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mh\">0x000000</span> <span class=\"c1\"># Black</span>\n<span class=\"n\">inner_sprite</span> <span class=\"o\">=</span> <span class=\"n\">displayio</span><span class=\"o\">.</span><span class=\"n\">TileGrid</span><span class=\"p\">(</span><span class=\"n\">inner_bitmap</span><span class=\"p\">,</span>\n                                  <span class=\"n\">pixel_shader</span><span class=\"o\">=</span><span class=\"n\">inner_palette</span><span class=\"p\">,</span>\n                                  <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">BORDER</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">BORDER</span><span class=\"p\">)</span>\n<span class=\"n\">splash</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">inner_sprite</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Draw a label</span>\n<span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s2\">\"Hello World!\"</span>\n<span class=\"n\">text_area</span> <span class=\"o\">=</span> <span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">Label</span><span class=\"p\">(</span><span class=\"n\">terminalio</span><span class=\"o\">.</span><span class=\"n\">FONT</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"mh\">0xFFFFFF</span><span class=\"p\">)</span>\n<span class=\"n\">text_width</span> <span class=\"o\">=</span> <span class=\"n\">text_area</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">FONTSCALE</span>\n<span class=\"n\">text_group</span> <span class=\"o\">=</span> <span class=\"n\">displayio</span><span class=\"o\">.</span><span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"n\">max_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"n\">FONTSCALE</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">width</span> <span class=\"o\">//</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"n\">text_width</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                             <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">height</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">text_group</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">text_area</span><span class=\"p\">)</span> <span class=\"c1\"># Subgroup for text scaling</span>\n<span class=\"n\">splash</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">text_group</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are welcome! Please read our <a href=\"https://github.com/adafruit/Adafruit_CircuitPython_DisplayIO_SSD1305/blob/master/CODE_OF_CONDUCT.md\" rel=\"nofollow\">Code of Conduct</a>\nbefore contributing to help this project stay welcoming.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>For information on building library documentation, please check out <a href=\"https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1\" rel=\"nofollow\">this guide</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6850191, "releases": {"1.0.4": [{"comment_text": "", "digests": {"md5": "dd1978ae0a3bbab0f50bdefef55a4927", "sha256": "c3cc8e4f48b2127e3dbce1c7d1a83c546fd806c1ad39baa53acfac36818292c2"}, "downloads": -1, "filename": "adafruit-circuitpython-displayio-ssd1305-1.0.4.tar.gz", "has_sig": false, "md5_digest": "dd1978ae0a3bbab0f50bdefef55a4927", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21567, "upload_time": "2020-01-23T15:53:39", "upload_time_iso_8601": "2020-01-23T15:53:39.065905Z", "url": "https://files.pythonhosted.org/packages/89/7e/d60028f50100cfacc262f6f89350c9e21a4fd239ea595be12c4b7a9f98d3/adafruit-circuitpython-displayio-ssd1305-1.0.4.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "eb6a90c3f6bd166610247f11eafad5e3", "sha256": "951356405c4b985a549cb18cbef086b17ca848d80a5f8bff97bc8e4b55a9a7cc"}, "downloads": -1, "filename": "adafruit-circuitpython-displayio-ssd1305-1.1.0.tar.gz", "has_sig": false, "md5_digest": "eb6a90c3f6bd166610247f11eafad5e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21735, "upload_time": "2020-03-20T14:51:49", "upload_time_iso_8601": "2020-03-20T14:51:49.010782Z", "url": "https://files.pythonhosted.org/packages/ff/14/fc87be4a2bbecd469b40d3fbac8df813fc8d05fc2fd9945a5e7747afaaf8/adafruit-circuitpython-displayio-ssd1305-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eb6a90c3f6bd166610247f11eafad5e3", "sha256": "951356405c4b985a549cb18cbef086b17ca848d80a5f8bff97bc8e4b55a9a7cc"}, "downloads": -1, "filename": "adafruit-circuitpython-displayio-ssd1305-1.1.0.tar.gz", "has_sig": false, "md5_digest": "eb6a90c3f6bd166610247f11eafad5e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21735, "upload_time": "2020-03-20T14:51:49", "upload_time_iso_8601": "2020-03-20T14:51:49.010782Z", "url": "https://files.pythonhosted.org/packages/ff/14/fc87be4a2bbecd469b40d3fbac8df813fc8d05fc2fd9945a5e7747afaaf8/adafruit-circuitpython-displayio-ssd1305-1.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:04 2020"}