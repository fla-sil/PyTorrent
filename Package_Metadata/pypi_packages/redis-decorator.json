{"info": {"author": "Louis Lou", "author_email": "qijia.lou@nyu.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## Quick start\n### Install\n```bash\npip install redis_decorator\n```\n\n### Initialize\n```python\nfrom redis_dec import Cache\nfrom redis import StrictRedis\nredis = StrictRedis(decode_responses=True)\ncache = Cache(redis)\n```\n## Examples\nMake sure you have redis up and running.(https://redis.io/)\n\n### Example1 : Cache string return\n\n```python\nfrom time import sleep\nfrom datetime import datetime\n@cache.ttl(300)\ndef pseudo_calc():\n    sleep(1)\n    print(\"Computation in progress\")\n    return str(datetime.now())\n\nfor i in range(10):\n    print(pseudo_calc())\n```\n#### Example 2: Cache Pandas Dataframe\n```python\n# Set cache's time to live to 300 seconds (expires in 300 seconds)\n# If left blank, e.g. @cache.df(), cache will stay forever. Don't recommended.\nimport pandas as pd\n@cache.df(300)\ndef return_a_df(*args, **kwargs):\n    sleep(1)\n    print(\"Computation in progress\")\n    return pd.DataFrame({\"time\": [str(datetime.now()) for _ in range(5)], \"foo\": list(range(5))})\n\n\nfor i in range(5):\n    print(return_a_df(1, 5))\n```\n\n#### Example 3: Cache dict\n```python\n\n@cache.dict(60)\ndef return_a_dict(*args, **kwargs):\n    sleep(1)\n    print(\"Computation in progress\")\n    return {\"now\": str(datetime.now())}\n\n\nfor i in range(5):\n    print(return_a_dict())\n```\n\n#### Example 4: Cache float number\n```python\n@cache.float(60)\ndef return_a_float(*args, **kwargs):\n    return random()\n\n\nfor i in range(5):\n    print(return_a_float())\n```\n\n#### Delete Cache\n```python\n# Delete cache by function and signature\ncache.delete_cache(return_a_float, 2, b=3) \n# Delete cache by function\ncache.delete_cache(return_a_float)\n# Delete all caches\ncache.delete_cache()\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/louisLouL/louisPy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "redis-decorator", "package_url": "https://pypi.org/project/redis-decorator/", "platform": "", "project_url": "https://pypi.org/project/redis-decorator/", "project_urls": {"Homepage": "https://github.com/louisLouL/louisPy"}, "release_url": "https://pypi.org/project/redis-decorator/0.4/", "requires_dist": ["redis (>=2.10.6)", "pandas (>=0.23.0)"], "requires_python": "", "summary": "Using redis as external redis_dec by one line of code", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Quick start</h2>\n<h3>Install</h3>\n<pre>pip install redis_decorator\n</pre>\n<h3>Initialize</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">redis_dec</span> <span class=\"kn\">import</span> <span class=\"n\">Cache</span>\n<span class=\"kn\">from</span> <span class=\"nn\">redis</span> <span class=\"kn\">import</span> <span class=\"n\">StrictRedis</span>\n<span class=\"n\">redis</span> <span class=\"o\">=</span> <span class=\"n\">StrictRedis</span><span class=\"p\">(</span><span class=\"n\">decode_responses</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">cache</span> <span class=\"o\">=</span> <span class=\"n\">Cache</span><span class=\"p\">(</span><span class=\"n\">redis</span><span class=\"p\">)</span>\n</pre>\n<h2>Examples</h2>\n<p>Make sure you have redis up and running.(<a href=\"https://redis.io/\" rel=\"nofollow\">https://redis.io/</a>)</p>\n<h3>Example1 : Cache string return</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"nd\">@cache</span><span class=\"o\">.</span><span class=\"n\">ttl</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">pseudo_calc</span><span class=\"p\">():</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Computation in progress\"</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">())</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pseudo_calc</span><span class=\"p\">())</span>\n</pre>\n<h4>Example 2: Cache Pandas Dataframe</h4>\n<pre><span class=\"c1\"># Set cache's time to live to 300 seconds (expires in 300 seconds)</span>\n<span class=\"c1\"># If left blank, e.g. @cache.df(), cache will stay forever. Don't recommended.</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"nd\">@cache</span><span class=\"o\">.</span><span class=\"n\">df</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">return_a_df</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Computation in progress\"</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span><span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">())</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)],</span> <span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">))})</span>\n\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">return_a_df</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n</pre>\n<h4>Example 3: Cache dict</h4>\n<pre><span class=\"nd\">@cache</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">return_a_dict</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Computation in progress\"</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"now\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">())}</span>\n\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">return_a_dict</span><span class=\"p\">())</span>\n</pre>\n<h4>Example 4: Cache float number</h4>\n<pre><span class=\"nd\">@cache</span><span class=\"o\">.</span><span class=\"n\">float</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">return_a_float</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">random</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">return_a_float</span><span class=\"p\">())</span>\n</pre>\n<h4>Delete Cache</h4>\n<pre><span class=\"c1\"># Delete cache by function and signature</span>\n<span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">delete_cache</span><span class=\"p\">(</span><span class=\"n\">return_a_float</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span> \n<span class=\"c1\"># Delete cache by function</span>\n<span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">delete_cache</span><span class=\"p\">(</span><span class=\"n\">return_a_float</span><span class=\"p\">)</span>\n<span class=\"c1\"># Delete all caches</span>\n<span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">delete_cache</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 4194050, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "7dc26a68408d801965a70ae1769394cd", "sha256": "92230dfbc2e676edf9fc89c86e4d555bac0bbdb7796ddee6d0928fc7c48ced6e"}, "downloads": -1, "filename": "redis_decorator-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7dc26a68408d801965a70ae1769394cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4164, "upload_time": "2018-08-13T00:36:08", "upload_time_iso_8601": "2018-08-13T00:36:08.353531Z", "url": "https://files.pythonhosted.org/packages/ab/2a/e254b7fee6c339ba41162df4daa2e32348de122d9aa60a9268d9b21106e2/redis_decorator-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1168e489dac5443f1f57c68864ad433", "sha256": "6b1a4c5ffde90e4f80bfac57cab97eca8e959219fa335ecb8e292eb38cd77c23"}, "downloads": -1, "filename": "redis_decorator-0.3.tar.gz", "has_sig": false, "md5_digest": "a1168e489dac5443f1f57c68864ad433", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3449, "upload_time": "2018-08-13T00:36:09", "upload_time_iso_8601": "2018-08-13T00:36:09.544863Z", "url": "https://files.pythonhosted.org/packages/af/f2/9fc70a7effb770cb9461008b1be99c2da09a263e12b0057fa59b14341cc5/redis_decorator-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "50f13d37000c8daa9d31c879d05f3c09", "sha256": "61c11b8cd6fb72caedd26da28830688e77667c9f5abac00c5279a76ba56777b2"}, "downloads": -1, "filename": "redis_decorator-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "50f13d37000c8daa9d31c879d05f3c09", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4194, "upload_time": "2018-08-21T21:32:43", "upload_time_iso_8601": "2018-08-21T21:32:43.428956Z", "url": "https://files.pythonhosted.org/packages/3d/69/c3b9890f032fd059a80508b2e62020c39ee01616491ee3722f1591e53fc0/redis_decorator-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d035c13fa0a9fef45f04de5c080ed67b", "sha256": "2a9dd3c131b45eb4a9e53813f8a0d2bb55420191c23dee4572b676e28f670fa5"}, "downloads": -1, "filename": "redis_decorator-0.4.tar.gz", "has_sig": false, "md5_digest": "d035c13fa0a9fef45f04de5c080ed67b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3485, "upload_time": "2018-08-21T21:32:44", "upload_time_iso_8601": "2018-08-21T21:32:44.715802Z", "url": "https://files.pythonhosted.org/packages/14/20/6c916232c4fea1aaa6a993510e724d01f552ef806ef4ed43ecc98207c503/redis_decorator-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "50f13d37000c8daa9d31c879d05f3c09", "sha256": "61c11b8cd6fb72caedd26da28830688e77667c9f5abac00c5279a76ba56777b2"}, "downloads": -1, "filename": "redis_decorator-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "50f13d37000c8daa9d31c879d05f3c09", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4194, "upload_time": "2018-08-21T21:32:43", "upload_time_iso_8601": "2018-08-21T21:32:43.428956Z", "url": "https://files.pythonhosted.org/packages/3d/69/c3b9890f032fd059a80508b2e62020c39ee01616491ee3722f1591e53fc0/redis_decorator-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d035c13fa0a9fef45f04de5c080ed67b", "sha256": "2a9dd3c131b45eb4a9e53813f8a0d2bb55420191c23dee4572b676e28f670fa5"}, "downloads": -1, "filename": "redis_decorator-0.4.tar.gz", "has_sig": false, "md5_digest": "d035c13fa0a9fef45f04de5c080ed67b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3485, "upload_time": "2018-08-21T21:32:44", "upload_time_iso_8601": "2018-08-21T21:32:44.715802Z", "url": "https://files.pythonhosted.org/packages/14/20/6c916232c4fea1aaa6a993510e724d01f552ef806ef4ed43ecc98207c503/redis_decorator-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:52 2020"}