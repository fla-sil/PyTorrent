{"info": {"author": "Leaf", "author_email": "LeafStormRush+py@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Plugins", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Topic :: Software Development"], "description": "========\r\nOmniFile\r\n========\r\n\r\nOmniFile is designed for programmers who write file manipulation functions. In\r\nPython, there are many ways a file can be passed to a function - you can read\r\nthe file and pass the read data, you can open the file object, or you can pass\r\na filename.\r\n\r\nOmniFile's job is to handle *any* of these circumstances, based on whichever is\r\nconvenient for the user of your function.\r\n\r\nFunctions\r\n=========\r\n\r\nOmniRead\r\n--------\r\n::\r\n\r\n omniread(source)\r\n\r\nUsed when you only need data, OmniRead can accept file names, pre-read file\r\ndata, and file objects. It will return pure string data.\r\n\r\nOmniRSIO\r\n--------\r\n::\r\n\r\n omnirsio(source)\r\n\r\nSimilar to OmniRead, but returns a file-like StringIO instance instead. This is\r\nhelpful when you need file-like functionality such as iterating through lines or\r\nmanipulating the file in place, but aren't so concerned about whether you have\r\na physical location on disk.\r\n\r\nOmniOpen\r\n--------\r\n::\r\n\r\n omniopen(source, mode)\r\n\r\nOmniOpen can handle a file's name or a file that's already been opened. It can\r\nbe used when you need a writable file with a physical location.\r\n\r\nAbout\r\n=====\r\nOmniFile is licensed under the terms of the GNU General Public License. Its\r\nmission is to make your life easier as a programmer. It was written by Leaf, who\r\ncan be contacted at LeafStormRush+py@gmail.com.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pac-sci.homeip.net/index.cgi/swproj", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "OmniFile", "package_url": "https://pypi.org/project/OmniFile/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/OmniFile/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pac-sci.homeip.net/index.cgi/swproj"}, "release_url": "https://pypi.org/project/OmniFile/1.0/", "requires_dist": null, "requires_python": null, "summary": "Opens files from file names, file objects, or pre-read data", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>OmniFile is designed for programmers who write file manipulation functions. In\nPython, there are many ways a file can be passed to a function - you can read\nthe file and pass the read data, you can open the file object, or you can pass\na filename.</p>\n<p>OmniFile\u2019s job is to handle <em>any</em> of these circumstances, based on whichever is\nconvenient for the user of your function.</p>\n<div id=\"functions\">\n<h2>Functions</h2>\n<div id=\"omniread\">\n<h3>OmniRead</h3>\n<pre>omniread(source)\n</pre>\n<p>Used when you only need data, OmniRead can accept file names, pre-read file\ndata, and file objects. It will return pure string data.</p>\n</div>\n<div id=\"omnirsio\">\n<h3>OmniRSIO</h3>\n<pre>omnirsio(source)\n</pre>\n<p>Similar to OmniRead, but returns a file-like StringIO instance instead. This is\nhelpful when you need file-like functionality such as iterating through lines or\nmanipulating the file in place, but aren\u2019t so concerned about whether you have\na physical location on disk.</p>\n</div>\n<div id=\"omniopen\">\n<h3>OmniOpen</h3>\n<pre>omniopen(source, mode)\n</pre>\n<p>OmniOpen can handle a file\u2019s name or a file that\u2019s already been opened. It can\nbe used when you need a writable file with a physical location.</p>\n</div>\n</div>\n<div id=\"about\">\n<h2>About</h2>\n<p>OmniFile is licensed under the terms of the GNU General Public License. Its\nmission is to make your life easier as a programmer. It was written by Leaf, who\ncan be contacted at <a href=\"mailto:LeafStormRush+py%40gmail.com\">LeafStormRush+py<span>@</span>gmail<span>.</span>com</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 784838, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "2037f46b31326cf48968ccea576dc448", "sha256": "38429ca9babecbd768907b444b116759ab6f8ae74dccab0acf910681b670c168"}, "downloads": -1, "filename": "OmniFile-1.0.tar.gz", "has_sig": false, "md5_digest": "2037f46b31326cf48968ccea576dc448", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2040, "upload_time": "2008-10-24T23:40:33", "upload_time_iso_8601": "2008-10-24T23:40:33Z", "url": "https://files.pythonhosted.org/packages/69/1e/bc81c7e719504a470e7ffbd77272978adb1f2950dea263874773344e2cfd/OmniFile-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2037f46b31326cf48968ccea576dc448", "sha256": "38429ca9babecbd768907b444b116759ab6f8ae74dccab0acf910681b670c168"}, "downloads": -1, "filename": "OmniFile-1.0.tar.gz", "has_sig": false, "md5_digest": "2037f46b31326cf48968ccea576dc448", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2040, "upload_time": "2008-10-24T23:40:33", "upload_time_iso_8601": "2008-10-24T23:40:33Z", "url": "https://files.pythonhosted.org/packages/69/1e/bc81c7e719504a470e7ffbd77272978adb1f2950dea263874773344e2cfd/OmniFile-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:28 2020"}