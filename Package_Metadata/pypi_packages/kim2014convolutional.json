{"info": {"author": "Cesar Perez", "author_email": "cperez@wnohang.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Education", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "# kim2014convolutional\n\nThis package provides a simple implementation of the models proposed in\nthe paper:\n\n> Kim, Y. (2014). Convolutional neural networks for sentence classification. arXiv preprint arXiv:1408.5882.\n\n## Installation\nThis package depends on the [Keras](https://keras.io/) library. This\nmeans you will need to install a backend library in order to use this\nmodule. Take a look to [Keras installation](https://keras.io/#installation)\nto get more information.\n\nAfter having installed the backend of yout choice, you just need to\ninstall this package using [pip](https://pypi.org/):\n\n    pip install kim2014convolutional\n\n## Usage\nThis package only provides a single model. To get detailed information\non the parameters the model accepts, take a look to the documentation\nincluded with the module class.\n\nHere is a complete example of instantiation of the `CNN-multichannel`\nmodel proposed in the original paper using two channel of randomly\ninitialized word embeddings:\n\n```python\nimport numpy as np\nimport numpy.random as rng\n\nvocabulary_size = 10000\nembedding_size = 300\n\nvalue = np.sqrt(6/embedding_size)\n\nweights_shape = (vocabulary_size+1, embedding_size)\nweights = rng.uniform(low=-value, high=value, size=weights_shape)\n\nchannels = [\n    {\n      'weights': [weights],\n      'trainable': False,\n      'input_dim': vocabulary_size + 1,\n      'output_dim': embedding_size,\n      'name': 'random-embedding-1'\n    },\n    {\n      'weights': [weights],\n      'trainable': True,\n      'input_dim': vocabulary_size + 1,\n      'output_dim': embedding_size,\n      'name': 'random-embedding-2'\n    }\n]\n\nwindows = [\n    {\n        'filters': 100,\n        'kernel_size': 3,\n        'activation': 'relu',\n        'name': '3-grams'\n    },\n    {\n        'filters': 100,\n        'kernel_size': 4,\n        'activation': 'relu',\n        'name': '4-grams'\n    },\n    {\n        'filters': 100,\n        'kernel_size': 5,\n        'activation': 'relu',\n        'name': '5-grams'\n    }\n]\n\nfrom kim2014convolutional import Model\n\nmodel = Model(channels=channels,\n              windows=windows,\n              sentence_length=37,\n              num_classes=6,\n              dropout_rate=0.5,\n              maxnorm_value=3,\n              classifier_activation='softmax',\n              include_top=True,\n              name='CNN-multichannel')\n\nmodel.summary()\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wnohang/kim2014convolutional", "keywords": "research model", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "kim2014convolutional", "package_url": "https://pypi.org/project/kim2014convolutional/", "platform": "", "project_url": "https://pypi.org/project/kim2014convolutional/", "project_urls": {"Homepage": "https://github.com/wnohang/kim2014convolutional"}, "release_url": "https://pypi.org/project/kim2014convolutional/0.2.0/", "requires_dist": ["keras"], "requires_python": "", "summary": "Implementation of kim2014convolutional", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # kim2014convolutional<br><br>This package provides a simple implementation of the models proposed in<br>the paper:<br><br>&gt; Kim, Y. (2014). Convolutional neural networks for sentence classification. arXiv preprint arXiv:1408.5882.<br><br>## Installation<br>This package depends on the [Keras](https://keras.io/) library. This<br>means you will need to install a backend library in order to use this<br>module. Take a look to [Keras installation](https://keras.io/#installation)<br>to get more information.<br><br>After having installed the backend of yout choice, you just need to<br>install this package using [pip](https://pypi.org/):<br><br>    pip install kim2014convolutional<br><br>## Usage<br>This package only provides a single model. To get detailed information<br>on the parameters the model accepts, take a look to the documentation<br>included with the module class.<br><br>Here is a complete example of instantiation of the `CNN-multichannel`<br>model proposed in the original paper using two channel of randomly<br>initialized word embeddings:<br><br>```python<br>import numpy as np<br>import numpy.random as rng<br><br>vocabulary_size = 10000<br>embedding_size = 300<br><br>value = np.sqrt(6/embedding_size)<br><br>weights_shape = (vocabulary_size+1, embedding_size)<br>weights = rng.uniform(low=-value, high=value, size=weights_shape)<br><br>channels = [<br>    {<br>      'weights': [weights],<br>      'trainable': False,<br>      'input_dim': vocabulary_size + 1,<br>      'output_dim': embedding_size,<br>      'name': 'random-embedding-1'<br>    },<br>    {<br>      'weights': [weights],<br>      'trainable': True,<br>      'input_dim': vocabulary_size + 1,<br>      'output_dim': embedding_size,<br>      'name': 'random-embedding-2'<br>    }<br>]<br><br>windows = [<br>    {<br>        'filters': 100,<br>        'kernel_size': 3,<br>        'activation': 'relu',<br>        'name': '3-grams'<br>    },<br>    {<br>        'filters': 100,<br>        'kernel_size': 4,<br>        'activation': 'relu',<br>        'name': '4-grams'<br>    },<br>    {<br>        'filters': 100,<br>        'kernel_size': 5,<br>        'activation': 'relu',<br>        'name': '5-grams'<br>    }<br>]<br><br>from kim2014convolutional import Model<br><br>model = Model(channels=channels,<br>              windows=windows,<br>              sentence_length=37,<br>              num_classes=6,<br>              dropout_rate=0.5,<br>              maxnorm_value=3,<br>              classifier_activation='softmax',<br>              include_top=True,<br>              name='CNN-multichannel')<br><br>model.summary()<br>```<br><br><br>\n          </div>"}, "last_serial": 4468863, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9d104b8286d93cecaa2148e29b527bf6", "sha256": "107a52f24c50f9e2f31b9b2065ac93e8d956971f96869e6371ae33afb51b138f"}, "downloads": -1, "filename": "kim2014convolutional-0.1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "9d104b8286d93cecaa2148e29b527bf6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5227, "upload_time": "2018-10-14T22:54:24", "upload_time_iso_8601": "2018-10-14T22:54:24.081183Z", "url": "https://files.pythonhosted.org/packages/52/19/7e4787f48905f06128b95ac1e92a0e4712c6b3b6cfd105642bdded3c4f52/kim2014convolutional-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd6fadf740b0f43861c47c77b79f1a57", "sha256": "34a56f9f6c36b36553b240eab44dec907a6ea8e7aed6c02c7266c077e37f86e1"}, "downloads": -1, "filename": "kim2014convolutional-0.1.0.tar.gz", "has_sig": true, "md5_digest": "fd6fadf740b0f43861c47c77b79f1a57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4517, "upload_time": "2018-10-14T22:54:26", "upload_time_iso_8601": "2018-10-14T22:54:26.723438Z", "url": "https://files.pythonhosted.org/packages/7f/d2/4dd8325c6cdd193e012af99dc9377aaaeaca593bc16bda272c48df0995a6/kim2014convolutional-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ace825b7aafc3cc0da7d7c6664ceb00d", "sha256": "0fa8c0e986c29226ab8d079623515b47a366da0f059b8eb3082e4e0fc17f88dc"}, "downloads": -1, "filename": "kim2014convolutional-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "ace825b7aafc3cc0da7d7c6664ceb00d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6917, "upload_time": "2018-11-09T10:16:34", "upload_time_iso_8601": "2018-11-09T10:16:34.421037Z", "url": "https://files.pythonhosted.org/packages/f9/19/f92bea9615674e651ee6f3a932d0c9136273a9a033a080838c90ce738ba3/kim2014convolutional-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6468ddfd3f5f4db30a161ba97f27001", "sha256": "e4cccd512a0206ca086d0e020d13a4b08b24850e6dc143bf22529e04d8d0120a"}, "downloads": -1, "filename": "kim2014convolutional-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b6468ddfd3f5f4db30a161ba97f27001", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5327, "upload_time": "2018-11-09T10:16:35", "upload_time_iso_8601": "2018-11-09T10:16:35.593483Z", "url": "https://files.pythonhosted.org/packages/e9/9d/127502c308ae7c72c1f4f735f91a2b447ecbf2f86f7e447b7dc421410477/kim2014convolutional-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ace825b7aafc3cc0da7d7c6664ceb00d", "sha256": "0fa8c0e986c29226ab8d079623515b47a366da0f059b8eb3082e4e0fc17f88dc"}, "downloads": -1, "filename": "kim2014convolutional-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "ace825b7aafc3cc0da7d7c6664ceb00d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6917, "upload_time": "2018-11-09T10:16:34", "upload_time_iso_8601": "2018-11-09T10:16:34.421037Z", "url": "https://files.pythonhosted.org/packages/f9/19/f92bea9615674e651ee6f3a932d0c9136273a9a033a080838c90ce738ba3/kim2014convolutional-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6468ddfd3f5f4db30a161ba97f27001", "sha256": "e4cccd512a0206ca086d0e020d13a4b08b24850e6dc143bf22529e04d8d0120a"}, "downloads": -1, "filename": "kim2014convolutional-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b6468ddfd3f5f4db30a161ba97f27001", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5327, "upload_time": "2018-11-09T10:16:35", "upload_time_iso_8601": "2018-11-09T10:16:35.593483Z", "url": "https://files.pythonhosted.org/packages/e9/9d/127502c308ae7c72c1f4f735f91a2b447ecbf2f86f7e447b7dc421410477/kim2014convolutional-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:45 2020"}