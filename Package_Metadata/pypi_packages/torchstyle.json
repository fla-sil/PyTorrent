{"info": {"author": "Zhi Zhang", "author_email": "850734033@qq.com", "bugtrack_url": null, "classifiers": [], "description": "TorchStyle\n==========\n\nTorchStyle is a Pytorch based framework for designing and developing GAN\nbased Neural Style Transfer. This framework has been designed to provide\nbuilding blocks for popular GANs and also to allow customization for\ncutting edge research.\n\nSystem requirements\n~~~~~~~~~~~~~~~~~~~\n\nTorchStyle should work on\n\n-  all Linux distributions no earlier than Ubuntu 16.04\n-  macOS X\n-  Windows 10\n\nInstallation\n~~~~~~~~~~~~\n\nUsing pip (for stable release):\n\n::\n\n    pip install torchstyle\n\nUsing pip (for latest master):\n\n::\n\n    conda install -c tczhangzhi torchstyle\n\nFrom source:\n\n::\n\n    git clone https://github.com/tczhangzhi/torchstyle.git\n    cd torchstyle\n    python setup.py install\n\nGetting Started\n~~~~~~~~~~~~~~~\n\nThe network architectures of popular GANs and cutting edge GAN based\nNeural Style Transfer methods are out of the box:\n\n::\n\n    from torchstyle.model.acgan import Generator, Discriminator\n\n    g_model = Generator()\n    d_model = Discriminator()\n\nThe diverse loss functions and complicated adversarial training methods\nare packed in different learners. It is convenient for users to\nreproduce the state-of-the-art training methods quickly without knowing\nimplementation details:\n\n::\n\n    from torchstyle.trainer.acgan import ACGANTrainer\n\n    trainer = ACGANTrainer(g_model, d_model, dataloader, device=device)\n    trainer.start(epoch=10)\n\nTest\n~~~~\n\nSetup environments:\n\n::\n\n    export PYTHONPATH=./\n\nRun the test case:\n\n::\n\n    python tests/test_acgan.py\n\nDocumentation\n~~~~~~~~~~~~~\n\nComing soon.\n\nLicense\n~~~~~~~\n\nPyTorch is `MIT <http://opensource.org/licenses/MIT>`__-style licensed,\nas found in the LICENSE file.\n\nCopyright (c) 2020-present, Zhang Zhi\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tczhangzhi/torchstyle", "keywords": "pytorch", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "torchstyle", "package_url": "https://pypi.org/project/torchstyle/", "platform": "", "project_url": "https://pypi.org/project/torchstyle/", "project_urls": {"Homepage": "https://github.com/tczhangzhi/torchstyle"}, "release_url": "https://pypi.org/project/torchstyle/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "TorchStyle is a Pytorch based framework for GAN based Neural Style Transfer.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>TorchStyle is a Pytorch based framework for designing and developing GAN\nbased Neural Style Transfer. This framework has been designed to provide\nbuilding blocks for popular GANs and also to allow customization for\ncutting edge research.</p>\n<div id=\"system-requirements\">\n<h2>System requirements</h2>\n<p>TorchStyle should work on</p>\n<ul>\n<li>all Linux distributions no earlier than Ubuntu 16.04</li>\n<li>macOS X</li>\n<li>Windows 10</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Using pip (for stable release):</p>\n<pre>pip install torchstyle\n</pre>\n<p>Using pip (for latest master):</p>\n<pre>conda install -c tczhangzhi torchstyle\n</pre>\n<p>From source:</p>\n<pre>git clone https://github.com/tczhangzhi/torchstyle.git\ncd torchstyle\npython setup.py install\n</pre>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>The network architectures of popular GANs and cutting edge GAN based\nNeural Style Transfer methods are out of the box:</p>\n<pre>from torchstyle.model.acgan import Generator, Discriminator\n\ng_model = Generator()\nd_model = Discriminator()\n</pre>\n<p>The diverse loss functions and complicated adversarial training methods\nare packed in different learners. It is convenient for users to\nreproduce the state-of-the-art training methods quickly without knowing\nimplementation details:</p>\n<pre>from torchstyle.trainer.acgan import ACGANTrainer\n\ntrainer = ACGANTrainer(g_model, d_model, dataloader, device=device)\ntrainer.start(epoch=10)\n</pre>\n</div>\n<div id=\"test\">\n<h2>Test</h2>\n<p>Setup environments:</p>\n<pre>export PYTHONPATH=./\n</pre>\n<p>Run the test case:</p>\n<pre>python tests/test_acgan.py\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Coming soon.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>PyTorch is <a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT</a>-style licensed,\nas found in the LICENSE file.</p>\n<p>Copyright (c) 2020-present, Zhang Zhi</p>\n</div>\n\n          </div>"}, "last_serial": 6380108, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "21ab45d8597323cd8a3ce5f89a7a723d", "sha256": "b4a4ccad66942f1a9280fe08a984a332f40b0695ab9f70b7a14de580aaebecd2"}, "downloads": -1, "filename": "torchstyle-0.0.1.tar.gz", "has_sig": false, "md5_digest": "21ab45d8597323cd8a3ce5f89a7a723d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2859, "upload_time": "2019-12-31T16:48:47", "upload_time_iso_8601": "2019-12-31T16:48:47.476680Z", "url": "https://files.pythonhosted.org/packages/38/69/fb8452ede8c1dd3090f37494411265385e1cab450a541529d908dede31b3/torchstyle-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "21ab45d8597323cd8a3ce5f89a7a723d", "sha256": "b4a4ccad66942f1a9280fe08a984a332f40b0695ab9f70b7a14de580aaebecd2"}, "downloads": -1, "filename": "torchstyle-0.0.1.tar.gz", "has_sig": false, "md5_digest": "21ab45d8597323cd8a3ce5f89a7a723d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2859, "upload_time": "2019-12-31T16:48:47", "upload_time_iso_8601": "2019-12-31T16:48:47.476680Z", "url": "https://files.pythonhosted.org/packages/38/69/fb8452ede8c1dd3090f37494411265385e1cab450a541529d908dede31b3/torchstyle-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:09 2020"}