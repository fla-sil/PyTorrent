{"info": {"author": "Samapriya Roy", "author_email": "samapriya.roy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: GIS"], "description": "# nsfsearch: NSF Awards API Simple CLI\nThis is an application of the google home API Blueprint reported [here](https://github.com/rithvikvibhu/GHLocalApi). While a lot of the end points maybe of interest to quite a few people, I used the ones I use most and I thought would be most useful and created a command line tool for you to search for a Google home mini device and then use this tool to interact with it and perform actions as needed.\n\n## Table of contents\n* [Installation](#installation)\n* [Getting started](#getting-started)\n* [nsfsearch: NSF Awards API Simple CLI](#nsfsearch-nsf-awards-api-simple-cli)\n    * [keysearch](#keysearch)\n    * [export](#export)\n    * [idsearch](#idsearch)\n    * [result](#result)\n\n## Installation\nThis assumes that you have native python & pip installed in your system, you can test this by going to the terminal (or windows command prompt) and trying\n\n```python``` and then ```pip list```\n\n\nTo install **nsfsearch: Simple CLI for Google Home & Mini** you can install using two methods.\n\n```pip install nsfsearch```\n\nor you can also try\n\n```\ngit clone https://github.com/samapriya/nsfsearch.git\ncd nsfsearch\npython setup.py install\n```\nFor Linux use sudo or try ```pip install nsfsearch --user```.\n\nInstallation is an optional step; the application can also be run directly by executing nsfsearch.py script. The advantage of having it installed is that nsfsearch can be executed as any command line tool. I recommend installation within a virtual environment. If you don't want to install, browse into the nsfsearch folder and try ```python nsfsearch.py``` to get to the same result.\n\n\n## Getting started\n\nAs usual, to print help:\n\n```\nNSF Awards API Simple CLI\n\npositional arguments:\n  {keysearch,export,idsearch,result}\n    keysearch           Searches for all projects with keywords\n    export              Searches for all projects with keywords & export\n    idsearch            Search using project ID\n    result              Project outcome based on ID\n\noptional arguments:\n  -h, --help            show this help message and exit\n```\n\nTo obtain help for specific functionality, simply call it with _help_ switch, e.g.: `nsfsearch result -h`. If you didn't install nsfsearch, then you can run it just by going to *nsfsearch* directory and running `python nsfsearch.py [arguments go here]`\n\n## nsfsearch NSF Awards API Simple CLI\nThe tool is based on curret NSF [award search API](https://www.research.gov/common/webapi/awardapisearch-v1.htm) and is subject to change in the future.\n\n### keysearch\nThis allows you to get all awards based on a keyword search, you can pass keywords as comman seperated value and it iterates through the list and prints the result to console. Usage is simply\n\n```\nusage: nsfsearch keysearch [-h] [--wordlist WORDLIST [WORDLIST ...]]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --wordlist WORDLIST [WORDLIST ...]\n                        Send comma seperated keywords\n```\n\n### export\nThis tool exports the keysearch results to a csv file, instead of printing it out on the console.\n\n```\nusage: nsfsearch export [-h] [--wordlist WORDLIST [WORDLIST ...]]\n                        [--file FILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --wordlist WORDLIST [WORDLIST ...]\n                        Send comma seperated keywords\n  --file FILE           Outfile CSV file with results\n```\n\n### idsearch\nLooks at specific NSF project using project id.\n\n```\nusage: nsfsearch idsearch [-h] [--ids IDS]\n\noptional arguments:\n  -h, --help  show this help message and exit\n  --ids IDS   Project ID\n```\n\n### result\nGet any project outcome results as reported by NSF using project id.\n\n```\nusage: nsfsearch result [-h] [--ids IDS]\n\noptional arguments:\n  -h, --help  show this help message and exit\n  --ids IDS   Project ID\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/samapriya/nsfsearch", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "nsfsearch", "package_url": "https://pypi.org/project/nsfsearch/", "platform": "", "project_url": "https://pypi.org/project/nsfsearch/", "project_urls": {"Homepage": "https://github.com/samapriya/nsfsearch"}, "release_url": "https://pypi.org/project/nsfsearch/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "NSF Awards API Simple CLI", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nsfsearch: NSF Awards API Simple CLI</h1>\n<p>This is an application of the google home API Blueprint reported <a href=\"https://github.com/rithvikvibhu/GHLocalApi\" rel=\"nofollow\">here</a>. While a lot of the end points maybe of interest to quite a few people, I used the ones I use most and I thought would be most useful and created a command line tool for you to search for a Google home mini device and then use this tool to interact with it and perform actions as needed.</p>\n<h2>Table of contents</h2>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#getting-started\" rel=\"nofollow\">Getting started</a></li>\n<li><a href=\"#nsfsearch-nsf-awards-api-simple-cli\" rel=\"nofollow\">nsfsearch: NSF Awards API Simple CLI</a>\n<ul>\n<li><a href=\"#keysearch\" rel=\"nofollow\">keysearch</a></li>\n<li><a href=\"#export\" rel=\"nofollow\">export</a></li>\n<li><a href=\"#idsearch\" rel=\"nofollow\">idsearch</a></li>\n<li><a href=\"#result\" rel=\"nofollow\">result</a></li>\n</ul>\n</li>\n</ul>\n<h2>Installation</h2>\n<p>This assumes that you have native python &amp; pip installed in your system, you can test this by going to the terminal (or windows command prompt) and trying</p>\n<p><code>python</code> and then <code>pip list</code></p>\n<p>To install <strong>nsfsearch: Simple CLI for Google Home &amp; Mini</strong> you can install using two methods.</p>\n<p><code>pip install nsfsearch</code></p>\n<p>or you can also try</p>\n<pre><code>git clone https://github.com/samapriya/nsfsearch.git\ncd nsfsearch\npython setup.py install\n</code></pre>\n<p>For Linux use sudo or try <code>pip install nsfsearch --user</code>.</p>\n<p>Installation is an optional step; the application can also be run directly by executing nsfsearch.py script. The advantage of having it installed is that nsfsearch can be executed as any command line tool. I recommend installation within a virtual environment. If you don't want to install, browse into the nsfsearch folder and try <code>python nsfsearch.py</code> to get to the same result.</p>\n<h2>Getting started</h2>\n<p>As usual, to print help:</p>\n<pre><code>NSF Awards API Simple CLI\n\npositional arguments:\n  {keysearch,export,idsearch,result}\n    keysearch           Searches for all projects with keywords\n    export              Searches for all projects with keywords &amp; export\n    idsearch            Search using project ID\n    result              Project outcome based on ID\n\noptional arguments:\n  -h, --help            show this help message and exit\n</code></pre>\n<p>To obtain help for specific functionality, simply call it with <em>help</em> switch, e.g.: <code>nsfsearch result -h</code>. If you didn't install nsfsearch, then you can run it just by going to <em>nsfsearch</em> directory and running <code>python nsfsearch.py [arguments go here]</code></p>\n<h2>nsfsearch NSF Awards API Simple CLI</h2>\n<p>The tool is based on curret NSF <a href=\"https://www.research.gov/common/webapi/awardapisearch-v1.htm\" rel=\"nofollow\">award search API</a> and is subject to change in the future.</p>\n<h3>keysearch</h3>\n<p>This allows you to get all awards based on a keyword search, you can pass keywords as comman seperated value and it iterates through the list and prints the result to console. Usage is simply</p>\n<pre><code>usage: nsfsearch keysearch [-h] [--wordlist WORDLIST [WORDLIST ...]]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --wordlist WORDLIST [WORDLIST ...]\n                        Send comma seperated keywords\n</code></pre>\n<h3>export</h3>\n<p>This tool exports the keysearch results to a csv file, instead of printing it out on the console.</p>\n<pre><code>usage: nsfsearch export [-h] [--wordlist WORDLIST [WORDLIST ...]]\n                        [--file FILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --wordlist WORDLIST [WORDLIST ...]\n                        Send comma seperated keywords\n  --file FILE           Outfile CSV file with results\n</code></pre>\n<h3>idsearch</h3>\n<p>Looks at specific NSF project using project id.</p>\n<pre><code>usage: nsfsearch idsearch [-h] [--ids IDS]\n\noptional arguments:\n  -h, --help  show this help message and exit\n  --ids IDS   Project ID\n</code></pre>\n<h3>result</h3>\n<p>Get any project outcome results as reported by NSF using project id.</p>\n<pre><code>usage: nsfsearch result [-h] [--ids IDS]\n\noptional arguments:\n  -h, --help  show this help message and exit\n  --ids IDS   Project ID\n</code></pre>\n\n          </div>"}, "last_serial": 5150778, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ba201fc459685508e1787dea575155e7", "sha256": "926612fce51802ad0c9019c7082de9f3b062924cc330a437bb643d5bf5a13466"}, "downloads": -1, "filename": "nsfsearch-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ba201fc459685508e1787dea575155e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4672, "upload_time": "2019-04-16T15:53:47", "upload_time_iso_8601": "2019-04-16T15:53:47.786206Z", "url": "https://files.pythonhosted.org/packages/fb/ac/1365a7349970c5c922a49bb3ed0d01af6e7edb06522d8606582414104962/nsfsearch-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba201fc459685508e1787dea575155e7", "sha256": "926612fce51802ad0c9019c7082de9f3b062924cc330a437bb643d5bf5a13466"}, "downloads": -1, "filename": "nsfsearch-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ba201fc459685508e1787dea575155e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4672, "upload_time": "2019-04-16T15:53:47", "upload_time_iso_8601": "2019-04-16T15:53:47.786206Z", "url": "https://files.pythonhosted.org/packages/fb/ac/1365a7349970c5c922a49bb3ed0d01af6e7edb06522d8606582414104962/nsfsearch-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:25 2020"}