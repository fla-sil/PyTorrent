{"info": {"author": "Brad Montgomery", "author_email": "brad@bradmontgomery.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.1", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Blargg!\n=======\n\n**yet another** Django-powered blog. The goal of this app is to provide a\nminimalistic (in both number of features and code) tool for publishing a\nmostly-text blog. Shameless plug: [bradmontgomery.net](https://bradmontgomery.net) for an example.\n\nThis app provides a fairly simple `Entry` model, and a light-weight `Tag` model.\n\nFeatures\n--------\n\n* Support for `Site`\n* Simple content tagging\n* RSS and Atom Feeds\n* Sitemap support\n* Automatic cross-posting to Blogger (see below)\n* Support authoring content in reStructured Text (requires\n  [docutils](https://pypi.python.org/pypi/docutils), markdown (requires\n  [Markdown](https://pypi.python.org/pypi/Markdown) or plain old HTML.\n\nInstallation\n------------\n\n1. Install with `pip install django-blargg`\n2. Add `blargg` to your `INSTALLED_APPS`\n3. Configure your Root URLconf: `path('blog/', include('blargg.urls', namespace='blargg'))`\n4. Customize your templates. There are some sample templates under\n   `blargg/templates/blargg`, but you'll want to override these in your project.\n5. Add a `BLARGG` setting dict that contains the title and description to be\n   used in your blog's RSS feeds (see below).\n6. (Optinally) enable Mail2Blogger (see below)\n\n\n### Sample BLARGG settings\n\n    BLARGG = {\n        'title': 'Awesome blog',\n        'description': 'Entries from an awesome blog',\n    }\n\n\nMail2Blogger Support\n--------------------\n\nThis app supports cross-posting to Blogger via email. By default, this setting\nis disabled. To enable Mail2Blogger, include the following settings::\n\n    BLARGG = {\n        'title': ...,\n        'description': ...,\n        'mail2blogger': True,\n        'mail2blogger_email': 'username.SECRET@blogger.com',\n    }\n\nTo set your Mail2Blogger email address, view your\n[Mobile and email](http://www.blogger.com) settings. Entries that are\ncross-posted to Blogger will automatically include a link back to the original\nsite (provided that you've got the `django.contrib.sites` app installed and\nconfigured correctly).\n\n**Warning**: *mail2blogger* appears to remove extra whitespace from your content\nwhich breaks things in a `<pre>` or `<code>` blocks. If you know how to\nprevent this, [please let me know](https://github.com/bradmontgomery/django-blargg/issues/3).\n\nLicense\n-------\n\nThis code is distributed under the terms of the MIT license. See the `LICENSE.txt` file.\n\n\nContributing\n------------\n\nFeel free to report any issues or (better yet) pull requests for bug fixes!\nThere's a `requirements.txt` file in this repo to help you get all the\ndependencies you'll likely need (for python3).\n\n\nWhy the name \"Blargg\"?\n----------------------\n\nFrom http://nintendo.wikia.com/wiki/Blargg:\n\n    A Blargg is a large red dragon that lives in lava and appears in Super Mario\n    World. When Mario goes across a lava pit on a pile of skulls occasionally\n    the eyes of a Blargg will appear and then itself will try to eat Mario. They\n    are found mostly in the Vanilla Dome. Strangely, they have one lazy eye.\n\nOther than that, *Blargg* is really fun to say out loud. Especially if you use\na *Pirate Voice*. Go ahead, try it!\n\n**Blargg**.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bradmontgomery/django-blargg", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-blargg", "package_url": "https://pypi.org/project/django-blargg/", "platform": "", "project_url": "https://pypi.org/project/django-blargg/", "project_urls": {"Homepage": "https://github.com/bradmontgomery/django-blargg"}, "release_url": "https://pypi.org/project/django-blargg/0.7.0/", "requires_dist": null, "requires_python": "", "summary": "A minimal, admin-powered, django blogging app with a fun name.", "version": "0.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Blargg!<br>=======<br><br>**yet another** Django-powered blog. The goal of this app is to provide a<br>minimalistic (in both number of features and code) tool for publishing a<br>mostly-text blog. Shameless plug: [bradmontgomery.net](https://bradmontgomery.net) for an example.<br><br>This app provides a fairly simple `Entry` model, and a light-weight `Tag` model.<br><br>Features<br>--------<br><br>* Support for `Site`<br>* Simple content tagging<br>* RSS and Atom Feeds<br>* Sitemap support<br>* Automatic cross-posting to Blogger (see below)<br>* Support authoring content in reStructured Text (requires<br>  [docutils](https://pypi.python.org/pypi/docutils), markdown (requires<br>  [Markdown](https://pypi.python.org/pypi/Markdown) or plain old HTML.<br><br>Installation<br>------------<br><br>1. Install with `pip install django-blargg`<br>2. Add `blargg` to your `INSTALLED_APPS`<br>3. Configure your Root URLconf: `path('blog/', include('blargg.urls', namespace='blargg'))`<br>4. Customize your templates. There are some sample templates under<br>   `blargg/templates/blargg`, but you'll want to override these in your project.<br>5. Add a `BLARGG` setting dict that contains the title and description to be<br>   used in your blog's RSS feeds (see below).<br>6. (Optinally) enable Mail2Blogger (see below)<br><br><br>### Sample BLARGG settings<br><br>    BLARGG = {<br>        'title': 'Awesome blog',<br>        'description': 'Entries from an awesome blog',<br>    }<br><br><br>Mail2Blogger Support<br>--------------------<br><br>This app supports cross-posting to Blogger via email. By default, this setting<br>is disabled. To enable Mail2Blogger, include the following settings::<br><br>    BLARGG = {<br>        'title': ...,<br>        'description': ...,<br>        'mail2blogger': True,<br>        'mail2blogger_email': 'username.SECRET@blogger.com',<br>    }<br><br>To set your Mail2Blogger email address, view your<br>[Mobile and email](http://www.blogger.com) settings. Entries that are<br>cross-posted to Blogger will automatically include a link back to the original<br>site (provided that you've got the `django.contrib.sites` app installed and<br>configured correctly).<br><br>**Warning**: *mail2blogger* appears to remove extra whitespace from your content<br>which breaks things in a `&lt;pre&gt;` or `&lt;code&gt;` blocks. If you know how to<br>prevent this, [please let me know](https://github.com/bradmontgomery/django-blargg/issues/3).<br><br>License<br>-------<br><br>This code is distributed under the terms of the MIT license. See the `LICENSE.txt` file.<br><br><br>Contributing<br>------------<br><br>Feel free to report any issues or (better yet) pull requests for bug fixes!<br>There's a `requirements.txt` file in this repo to help you get all the<br>dependencies you'll likely need (for python3).<br><br><br>Why the name \"Blargg\"?<br>----------------------<br><br>From http://nintendo.wikia.com/wiki/Blargg:<br><br>    A Blargg is a large red dragon that lives in lava and appears in Super Mario<br>    World. When Mario goes across a lava pit on a pile of skulls occasionally<br>    the eyes of a Blargg will appear and then itself will try to eat Mario. They<br>    are found mostly in the Vanilla Dome. Strangely, they have one lazy eye.<br><br>Other than that, *Blargg* is really fun to say out loud. Especially if you use<br>a *Pirate Voice*. Go ahead, try it!<br><br>**Blargg**.\n          </div>"}, "last_serial": 4656909, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "f3c45472d6d47d82ef887d066222807f", "sha256": "05f3f19588447de768cba5996df6a664dc90b2423cfa73b140cf42aa17cd270e"}, "downloads": -1, "filename": "django-blargg-0.6.0.tar.gz", "has_sig": false, "md5_digest": "f3c45472d6d47d82ef887d066222807f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15947, "upload_time": "2016-01-08T15:01:10", "upload_time_iso_8601": "2016-01-08T15:01:10.861924Z", "url": "https://files.pythonhosted.org/packages/82/a8/f1d0a0faec0a48c3e19ceab0c3c82eb225900f4b161deb05ceeb5ecb0a43/django-blargg-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "0f2059b02c3b1bcd7f7db69c2770c2f4", "sha256": "307ddb7ee5406072d05aaffcab123e564fafab921afdc162a98efe18eac874f9"}, "downloads": -1, "filename": "django-blargg-0.7.0.tar.gz", "has_sig": false, "md5_digest": "0f2059b02c3b1bcd7f7db69c2770c2f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15714, "upload_time": "2019-01-03T16:13:09", "upload_time_iso_8601": "2019-01-03T16:13:09.543085Z", "url": "https://files.pythonhosted.org/packages/ff/71/042d9b95c35ff31451b3d1d757437baeb55104159b48a124a45de2d62b4c/django-blargg-0.7.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0f2059b02c3b1bcd7f7db69c2770c2f4", "sha256": "307ddb7ee5406072d05aaffcab123e564fafab921afdc162a98efe18eac874f9"}, "downloads": -1, "filename": "django-blargg-0.7.0.tar.gz", "has_sig": false, "md5_digest": "0f2059b02c3b1bcd7f7db69c2770c2f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15714, "upload_time": "2019-01-03T16:13:09", "upload_time_iso_8601": "2019-01-03T16:13:09.543085Z", "url": "https://files.pythonhosted.org/packages/ff/71/042d9b95c35ff31451b3d1d757437baeb55104159b48a124a45de2d62b4c/django-blargg-0.7.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:25 2020"}