{"info": {"author": "Nir Aides", "author_email": "nir@winpdb.org", "bugtrack_url": null, "classifiers": [], "description": "        \r\r\n        *Jupylet* is a Python library that lets you create and run games interactively\r\r\n        in a Jupyter notebook. It is intended for two types of audiences:\r\r\n        \r\r\n        * Kids and their parents interested in learning to program,\r\r\n        * Researchers and students of deep reinforcement learning.\r\r\n        \r\r\n        \r\r\n        ## Kids Learning to Program\r\r\n        \r\r\n        A Jupyter notebook is in essence a laboratory for programming. It is the ideal\r\r\n        environment for playing around with code, experimenting, and exploring ideas.\r\r\n        It is used by professional machine learning scientists who come every day to\r\r\n        play at work, so why not by kids?\r\r\n        \r\r\n        *Jupylet* is built on top of pyglet, a powerful game programming library. It is\r\r\n        wonderfully easy to use for creating simple 2D games and since pyglet uses\r\r\n        OpenGL you can use it to create 3D games if you really want to. The sky is the\r\r\n        limit really.\r\r\n        \r\r\n        By marrying Jupyter and pyglet, *Jupylet* lets you have the best of both\r\r\n        worlds. Create games interactively and experimentally, change a variable or a\r\r\n        function and see how the game is affected immediately while it is running.\r\r\n        \r\r\n        ## Deep Reinforcement Learning with Jupylet\r\r\n        \r\r\n        *Jupylet* makes it is super easy to create and modify environments in which to\r\r\n        experiment with deep reinforcement learning algorithms and it includes the code\r\r\n        required to programmatically control multiple simultaneous games and render\r\r\n        thousands of frames per second.\r\r\n        \r\r\n        Consider for example the pong game included in this repository. With a few\r\r\n        lines of code you can modify the colors of the game or turn the background into\r\r\n        a swirling giant flower to experiment with transfer learning, or turn the game\r\r\n        into 4-way pong with agents on all four sides of the game court to experiment\r\r\n        with cooperation between multiple agents. And since you can modify the game\r\r\n        interactively in Jupyter this process is not only easy but fun.  \r\r\n        \r\r\n        Head to [examples/pong-RL.ipynb](https://github.com/nir/jupylet/blob/master/examples/pong-RL.ipynb) to see how to programmatically control and render a 2-player version of pong.\r\r\n        \r\r\n        ## Requirements\r\r\n        \r\r\n        _jupylet_ should run on Python 3.4+ on Windows, Mac, and Linux.\r\r\n        \r\r\n        ## How to Install and Run Jupylet\r\r\n        \r\r\n        If you are new to Python, I strongly recommend that you install and use the\r\r\n        [Miniconda Python](https://docs.conda.io/en/latest/miniconda.html)\r\r\n        distribution. Download and run the 64-bit installer and stick to the default\r\r\n        install options.\r\r\n        \r\r\n        Once Miniconda is installed start a Miniconda Prompt. To do this on Windows\r\r\n        click the `\u229e Winkey` then type *Miniconda* and press the\r\r\n        `Enter` key. This should open a small dark window that programmers\r\r\n        call *console* or *shell* in which you can enter commands and run programs.\r\r\n        \r\r\n        To run *jupylet* first install it by typing the following command in the\r\r\n        console:\r\r\n        \r\r\n            pip install jupylet\r\r\n        \r\r\n        Next, you need to download the *jupylet* repository since it contains the\r\r\n        example notebooks. If you have [Git](https://git-scm.com/) installed you\r\r\n        can use it to clone the *jupylet* repository with:\r\r\n        \r\r\n            git clone https://github.com/nir/jupylet.git\r\r\n        \r\r\n        Alternatively, if you don't have Git installed, you can download and unzip\r\r\n        the *jupylet* archive by typing:\r\r\n        \r\r\n            python -m wget https://github.com/nir/jupylet/archive/master.zip\r\r\n            python -m zipfile -e jupylet-master.zip .\r\r\n            move jupylet-master jupylet\r\r\n        \r\r\n        | `\u26a0\ufe0f NOTE` On Mac OS X or Linux type *mv* instead of *move* in the command above. |\r\r\n        | --- |\r\r\n        \r\r\n        Next, enter the *jupylet/examples/* directory with the change directory\r\r\n        command:\r\r\n        \r\r\n            cd ./jupylet/examples/\r\r\n        \r\r\n        And start a jupyter notebook with:\r\r\n        \r\r\n            jupyter notebook spaceship.ipynb\r\r\n        \r\r\n        Run the notebook by following the instructions in the notebook and a game\r\r\n        canvas should appear with the spaceship example:\r\r\n        \r\r\n        <img src=\"https://raw.githubusercontent.com/nir/jupylet/master/docs/images/spaceship.gif\" width=\"256\" height=\"256\" />\r\r\n        \r\r\n        You can run essentially the same code from the console with:\r\r\n        \r\r\n            python spaceship.py\r\r\n        \r\r\n        The only difference in the code is that the application object is instantiated with:\r\r\n        \r\r\n            app = App(mode='window')\r\r\n        \r\r\n        ## Documentation\r\r\n        \r\r\n        In terms of its interface _jupylet_ introduces only minor additions and modifications to the underlying pyglet library. Therefore the bulk of learning to use it is covered by the [pyglet documentation](https://pyglet.readthedocs.io/en/stable/). I have started writing a [guide](https://jupylet.readthedocs.io/en/latest/) and will add documentation in the comming days; in the mean time head to the [spaceship.ipynb](https://github.com/nir/jupylet/blob/master/examples/spaceship.ipynb) example to get started. \r\r\n        \r\r\n        ## Contact\r\r\n        \r\r\n        For questions and feedback send an email to [Nir Aides](mailto:nir@winpdb.org).\r\r\n        \r\nKeywords: python,pyglet,jupyter,kids,games,children,deep learning,reinforcement learning,RL\r\nPlatform: UNKNOWN\r\nClassifier: Development Status :: 4 - Beta\r\nClassifier: Intended Audience :: Education\r\nClassifier: Intended Audience :: Developers\r\nClassifier: Intended Audience :: Science/Research\r\nClassifier: Topic :: Education\r\nClassifier: Topic :: Scientific/Engineering :: Artificial Intelligence\r\nClassifier: License :: OSI Approved :: BSD License\r\nClassifier: Programming Language :: Python :: 3\r\nClassifier: Programming Language :: Python :: 3.4\r\nClassifier: Programming Language :: Python :: 3.5\r\nClassifier: Programming Language :: Python :: 3.6\r\nClassifier: Programming Language :: Python :: 3.7\r\nClassifier: Programming Language :: Python :: 3.8\r\nDescription-Content-Type: text/markdown\r\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/nir/jupylet/archive/v0.6.5.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nir/jupylet", "keywords": "", "license": "bsd-2-clause", "maintainer": "", "maintainer_email": "", "name": "jupylet", "package_url": "https://pypi.org/project/jupylet/", "platform": "", "project_url": "https://pypi.org/project/jupylet/", "project_urls": {"Download": "https://github.com/nir/jupylet/archive/v0.6.5.tar.gz", "Homepage": "https://github.com/nir/jupylet"}, "release_url": "https://pypi.org/project/jupylet/0.6.5/", "requires_dist": null, "requires_python": "", "summary": "A marriage of Jupyter and the pyglet game programming library", "version": "0.6.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n<p><em>Jupylet</em> is a Python library that lets you create and run games interactively</p>\n<p>in a Jupyter notebook. It is intended for two types of audiences:</p>\n<ul>\n<li>Kids and their parents interested in learning to program,</li>\n<li>Researchers and students of deep reinforcement learning.</li>\n</ul>\n<p>## Kids Learning to Program</p>\n<p>A Jupyter notebook is in essence a laboratory for programming. It is the ideal</p>\n<p>environment for playing around with code, experimenting, and exploring ideas.</p>\n<p>It is used by professional machine learning scientists who come every day to</p>\n<p>play at work, so why not by kids?</p>\n<p><em>Jupylet</em> is built on top of pyglet, a powerful game programming library. It is</p>\n<p>wonderfully easy to use for creating simple 2D games and since pyglet uses</p>\n<p>OpenGL you can use it to create 3D games if you really want to. The sky is the</p>\n<p>limit really.</p>\n<p>By marrying Jupyter and pyglet, <em>Jupylet</em> lets you have the best of both</p>\n<p>worlds. Create games interactively and experimentally, change a variable or a</p>\n<p>function and see how the game is affected immediately while it is running.</p>\n<p>## Deep Reinforcement Learning with Jupylet</p>\n<p><em>Jupylet</em> makes it is super easy to create and modify environments in which to</p>\n<p>experiment with deep reinforcement learning algorithms and it includes the code</p>\n<p>required to programmatically control multiple simultaneous games and render</p>\n<p>thousands of frames per second.</p>\n<p>Consider for example the pong game included in this repository. With a few</p>\n<p>lines of code you can modify the colors of the game or turn the background into</p>\n<p>a swirling giant flower to experiment with transfer learning, or turn the game</p>\n<p>into 4-way pong with agents on all four sides of the game court to experiment</p>\n<p>with cooperation between multiple agents. And since you can modify the game</p>\n<p>interactively in Jupyter this process is not only easy but fun.</p>\n<p>Head to [examples/pong-RL.ipynb](<a href=\"https://github.com/nir/jupylet/blob/master/examples/pong-RL.ipynb\" rel=\"nofollow\">https://github.com/nir/jupylet/blob/master/examples/pong-RL.ipynb</a>) to see how to programmatically control and render a 2-player version of pong.</p>\n<p>## Requirements</p>\n<p>_jupylet_ should run on Python 3.4+ on Windows, Mac, and Linux.</p>\n<p>## How to Install and Run Jupylet</p>\n<p>If you are new to Python, I strongly recommend that you install and use the</p>\n<p>[Miniconda Python](<a href=\"https://docs.conda.io/en/latest/miniconda.html\" rel=\"nofollow\">https://docs.conda.io/en/latest/miniconda.html</a>)</p>\n<p>distribution. Download and run the 64-bit installer and stick to the default</p>\n<p>install options.</p>\n<p>Once Miniconda is installed start a Miniconda Prompt. To do this on Windows</p>\n<p>click the <cite>\u229e Winkey</cite> then type <em>Miniconda</em> and press the</p>\n<p><cite>Enter</cite> key. This should open a small dark window that programmers</p>\n<p>call <em>console</em> or <em>shell</em> in which you can enter commands and run programs.</p>\n<p>To run <em>jupylet</em> first install it by typing the following command in the</p>\n<p>console:</p>\n<blockquote>\npip install jupylet</blockquote>\n<p>Next, you need to download the <em>jupylet</em> repository since it contains the</p>\n<p>example notebooks. If you have [Git](<a href=\"https://git-scm.com/\" rel=\"nofollow\">https://git-scm.com/</a>) installed you</p>\n<p>can use it to clone the <em>jupylet</em> repository with:</p>\n<blockquote>\ngit clone <a href=\"https://github.com/nir/jupylet.git\" rel=\"nofollow\">https://github.com/nir/jupylet.git</a></blockquote>\n<p>Alternatively, if you don\u2019t have Git installed, you can download and unzip</p>\n<p>the <em>jupylet</em> archive by typing:</p>\n<blockquote>\n<p>python -m wget <a href=\"https://github.com/nir/jupylet/archive/master.zip\" rel=\"nofollow\">https://github.com/nir/jupylet/archive/master.zip</a></p>\n<p>python -m zipfile -e jupylet-master.zip .</p>\n<p>move jupylet-master jupylet</p>\n</blockquote>\n<div>\n<div><cite>\u26a0\ufe0f NOTE</cite> On Mac OS X or Linux type <em>mv</em> instead of <em>move</em> in the command above. |</div>\n</div>\n<div>\n<div>\u2014 |</div>\n</div>\n<p>Next, enter the <em>jupylet/examples/</em> directory with the change directory</p>\n<p>command:</p>\n<blockquote>\ncd ./jupylet/examples/</blockquote>\n<p>And start a jupyter notebook with:</p>\n<blockquote>\njupyter notebook spaceship.ipynb</blockquote>\n<p>Run the notebook by following the instructions in the notebook and a game</p>\n<p>canvas should appear with the spaceship example:</p>\n<p>&lt;img src=\u201d<a href=\"https://raw.githubusercontent.com/nir/jupylet/master/docs/images/spaceship.gif\" rel=\"nofollow\">https://raw.githubusercontent.com/nir/jupylet/master/docs/images/spaceship.gif</a>\u201d width=\u201d256\u201d height=\u201d256\u201d /&gt;</p>\n<p>You can run essentially the same code from the console with:</p>\n<blockquote>\npython spaceship.py</blockquote>\n<p>The only difference in the code is that the application object is instantiated with:</p>\n<blockquote>\napp = App(mode=\u2019window\u2019)</blockquote>\n<p>## Documentation</p>\n<p>In terms of its interface _jupylet_ introduces only minor additions and modifications to the underlying pyglet library. Therefore the bulk of learning to use it is covered by the [pyglet documentation](<a href=\"https://pyglet.readthedocs.io/en/stable/\" rel=\"nofollow\">https://pyglet.readthedocs.io/en/stable/</a>). I have started writing a [guide](<a href=\"https://jupylet.readthedocs.io/en/latest/\" rel=\"nofollow\">https://jupylet.readthedocs.io/en/latest/</a>) and will add documentation in the comming days; in the mean time head to the [spaceship.ipynb](<a href=\"https://github.com/nir/jupylet/blob/master/examples/spaceship.ipynb\" rel=\"nofollow\">https://github.com/nir/jupylet/blob/master/examples/spaceship.ipynb</a>) example to get started.</p>\n<p>## Contact</p>\n<p>For questions and feedback send an email to [Nir Aides](<a href=\"mailto:nir%40winpdb.org\">mailto:nir<span>@</span>winpdb<span>.</span>org</a>).</p>\n</blockquote>\n<p>Keywords: python,pyglet,jupyter,kids,games,children,deep learning,reinforcement learning,RL\nPlatform: UNKNOWN\nClassifier: Development Status :: 4 - Beta\nClassifier: Intended Audience :: Education\nClassifier: Intended Audience :: Developers\nClassifier: Intended Audience :: Science/Research\nClassifier: Topic :: Education\nClassifier: Topic :: Scientific/Engineering :: Artificial Intelligence\nClassifier: License :: OSI Approved :: BSD License\nClassifier: Programming Language :: Python :: 3\nClassifier: Programming Language :: Python :: 3.4\nClassifier: Programming Language :: Python :: 3.5\nClassifier: Programming Language :: Python :: 3.6\nClassifier: Programming Language :: Python :: 3.7\nClassifier: Programming Language :: Python :: 3.8\nDescription-Content-Type: text/markdown</p>\n\n          </div>"}, "last_serial": 6846233, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "f05a21b80a3f5c071e300b0cc2446b55", "sha256": "6352d968da1362a0b0e7fd6ac3f2f113e24f6faae8effe3eab12d8c6f62e2383"}, "downloads": -1, "filename": "jupylet-0.6.0.tar.gz", "has_sig": false, "md5_digest": "f05a21b80a3f5c071e300b0cc2446b55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14337, "upload_time": "2020-01-25T21:31:51", "upload_time_iso_8601": "2020-01-25T21:31:51.341135Z", "url": "https://files.pythonhosted.org/packages/3b/08/b30d7dd2b0ec0909e262c37a80677cc455c243a8adf2b79d813bfe45c9f3/jupylet-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "18558c945b46ec31111c876240d12244", "sha256": "8b6508019634f627cd4448eb37a4425e12d0b7d9252e3ac17e8eb7acff056d35"}, "downloads": -1, "filename": "jupylet-0.6.1.tar.gz", "has_sig": false, "md5_digest": "18558c945b46ec31111c876240d12244", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18469, "upload_time": "2020-01-26T20:42:20", "upload_time_iso_8601": "2020-01-26T20:42:20.510265Z", "url": "https://files.pythonhosted.org/packages/09/05/d78d54491ba0ffe6239ec14d59e30e79cb8440b68c843fd987adb46e5fde/jupylet-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "ff76dd4d5e4a00bb168c95dbf76166b8", "sha256": "e83fd15d7e66475b04514784cbcc2a5cc7d09c508554cdec035ef7248a906b1d"}, "downloads": -1, "filename": "jupylet-0.6.2.tar.gz", "has_sig": false, "md5_digest": "ff76dd4d5e4a00bb168c95dbf76166b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18572, "upload_time": "2020-01-30T18:27:49", "upload_time_iso_8601": "2020-01-30T18:27:49.806357Z", "url": "https://files.pythonhosted.org/packages/41/7e/94a5307ed0a456addbac265e01977e915d273bb9b663b2260ed00158af5d/jupylet-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "26ecf6352b42911faaac00a541494e6e", "sha256": "79d6977873e04a56b31919a5d99722d6d51cf1dd45fa0baff2e4b76a8583f17a"}, "downloads": -1, "filename": "jupylet-0.6.3.tar.gz", "has_sig": false, "md5_digest": "26ecf6352b42911faaac00a541494e6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18913, "upload_time": "2020-02-03T21:23:23", "upload_time_iso_8601": "2020-02-03T21:23:23.826789Z", "url": "https://files.pythonhosted.org/packages/87/93/2b412fd6fd19aa27a78358d3265cd029f9ae1051de3f4d82725d6d40d9e9/jupylet-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "ced4e2d4964123e208079bc9ab1d9849", "sha256": "fe7103422017b75cef7ff612b26c7b15d76eebfcda7609229222efc0bbfc1f65"}, "downloads": -1, "filename": "jupylet-0.6.4.tar.gz", "has_sig": false, "md5_digest": "ced4e2d4964123e208079bc9ab1d9849", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19436, "upload_time": "2020-02-08T09:38:59", "upload_time_iso_8601": "2020-02-08T09:38:59.930277Z", "url": "https://files.pythonhosted.org/packages/71/44/a7de7e09c2074787c0e5180c77639f76f358863fab4189cedb26fe4859ff/jupylet-0.6.4.tar.gz", "yanked": false}], "0.6.5": [{"comment_text": "", "digests": {"md5": "d8bda170d7b1a7dc52c43cdaa5a77f04", "sha256": "9fc002f37376bd0852ed96912834d63d35d665523d3e6c6d69d48fd1e2e9a7b0"}, "downloads": -1, "filename": "jupylet-0.6.5.tar.gz", "has_sig": false, "md5_digest": "d8bda170d7b1a7dc52c43cdaa5a77f04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20753, "upload_time": "2020-03-19T21:17:40", "upload_time_iso_8601": "2020-03-19T21:17:40.027692Z", "url": "https://files.pythonhosted.org/packages/e5/b6/06ff94815878c83ede767f95a52208886c09da45ccddc6576c9dab846eb8/jupylet-0.6.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d8bda170d7b1a7dc52c43cdaa5a77f04", "sha256": "9fc002f37376bd0852ed96912834d63d35d665523d3e6c6d69d48fd1e2e9a7b0"}, "downloads": -1, "filename": "jupylet-0.6.5.tar.gz", "has_sig": false, "md5_digest": "d8bda170d7b1a7dc52c43cdaa5a77f04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20753, "upload_time": "2020-03-19T21:17:40", "upload_time_iso_8601": "2020-03-19T21:17:40.027692Z", "url": "https://files.pythonhosted.org/packages/e5/b6/06ff94815878c83ede767f95a52208886c09da45ccddc6576c9dab846eb8/jupylet-0.6.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:20 2020"}