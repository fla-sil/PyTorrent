{"info": {"author": "Aaron Edwards", "author_email": "cloudgenix_idname@ebob9.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# ID -> Name Translator for CloudGenix\nID -> Name translator for the CloudGenix Python SDK\n\n#### Synopsis\nCloudGenix's API uses unique ID values for all objects.\n\nThis quick module utilizes the CloudGenix Python SDK to create a dictionary object containing most\ncommon object lists, referenced by ID.\n\n##### Simple usage:\n```python\nidname_dict = cloudgenix_idname.generate_id_name_map(cgx_sess)\n# takes 30-40 seconds to generate.\n\nvpn_link_id = '15136303805980148'\nprint ('My VPN link is \"{}\".'.format(idname_dict.get(vpn_link_id, vpn_link_id)))\n```\n```\nMy VPN link is \"SJC Branch ('AT&T' via 'Circuit to AT&T') <-> ('ATT2' via 'Circuit to ATT2') Charlotte DC\".\n```\n\n##### Efficient usage:\n```python\n# create constructor to make and cache queries\nidname = cloudgenix_idname.CloudGenixIDName(cgx_sess)\n\n# get just VPN id to name maps.\nvpnpaths_id_to_name = idname.generate_anynets_map()\n# takes < 3 seconds to generate\n\n# query for VPN\nvpn_link_id = '15136303805980148'\nprint ('My VPN link is \"{}\".'.format(vpnpaths_id_to_name.get(vpn_link_id, vpn_link_id)))\n# output: My VPN link is \"SJC Branch ('AT&T' via 'Circuit to AT&T') <-> ('ATT2' via 'Circuit to ATT2') Charlotte DC\".\n\n# lets query a link that is new since last time.\nnew_vpn_link_id = '15136303805980182'\nprint ('My VPN link is \"{}\".'.format(vpnpaths_id_to_name.get(vpn_link_id, vpn_link_id)))\n# output: My VPN link is \"15136303805980182\".\nvpnpaths_id_to_name = idname.generate_anynets_map()\n# takes < 0.1 seconds\n\nprint ('My VPN link is \"{}\".'.format(vpnpaths_id_to_name.get(vpn_link_id, vpn_link_id)))\n# output: My VPN link is \"SJC Branch ('Verizon' via 'Circuit to Verizon') <-> ('ATT2' via 'Circuit to ATT2') Charlotte DC\".\n```\n\n#### Requirements\n* Active CloudGenix Account\n* Python >=3.6 (if you still need 2.7 support, `pip install cloudgenix_idname==1.2.3`)\n* Python modules:\n    * cloudgenix >=5.2.1b1 - <https://github.com/CloudGenix/sdk-python>\n\n#### Code Example\nComes with `test.py` that creates an ID -> Name map and dumps to console.\n\n#### License\nMIT\n\n#### Version\nVersion | Changes\n------- | --------\n**2.0.1**| Add support for localprefixes, globalprefixes\n**2.0.0**| Major rewrite, Deprecate Python2. Now supports a Class object and caching with delta updates (where available.)\n**1.2.3**| Fixed minor return issue\n**1.2.2**| Add support for Spoke Clusters\n**1.2.1**| Add support for SDK >= 5.1.1b1\n**1.2.0**| Add reverse lookup support (name -> ID) to all functions. Reverse lookup has limitations as names are not unique.\n**1.1.3**| Resolve Issue #6, enhance Site WAN Interface mapping, add shortcut to generate_id_name_map.\n**1.1.2**| Fix minor return issue.\n**1.1.1**| Fix issue with tenant_viewonly not being able to read operators.\n**1.1.0**| Fix various bugs, issue #1, and Python 3 support\n**1.0.0**| Initial Release.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ebob9/cloudgenix-idname", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cloudgenix-idname", "package_url": "https://pypi.org/project/cloudgenix-idname/", "platform": "", "project_url": "https://pypi.org/project/cloudgenix-idname/", "project_urls": {"Homepage": "https://github.com/ebob9/cloudgenix-idname"}, "release_url": "https://pypi.org/project/cloudgenix-idname/2.0.1/", "requires_dist": null, "requires_python": ">=3.6.1", "summary": "ID -> Name translator for the CloudGenix Python SDK", "version": "2.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ID -&gt; Name Translator for CloudGenix</h1>\n<p>ID -&gt; Name translator for the CloudGenix Python SDK</p>\n<h4>Synopsis</h4>\n<p>CloudGenix's API uses unique ID values for all objects.</p>\n<p>This quick module utilizes the CloudGenix Python SDK to create a dictionary object containing most\ncommon object lists, referenced by ID.</p>\n<h5>Simple usage:</h5>\n<pre><span class=\"n\">idname_dict</span> <span class=\"o\">=</span> <span class=\"n\">cloudgenix_idname</span><span class=\"o\">.</span><span class=\"n\">generate_id_name_map</span><span class=\"p\">(</span><span class=\"n\">cgx_sess</span><span class=\"p\">)</span>\n<span class=\"c1\"># takes 30-40 seconds to generate.</span>\n\n<span class=\"n\">vpn_link_id</span> <span class=\"o\">=</span> <span class=\"s1\">'15136303805980148'</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s1\">'My VPN link is \"</span><span class=\"si\">{}</span><span class=\"s1\">\".'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">idname_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">vpn_link_id</span><span class=\"p\">,</span> <span class=\"n\">vpn_link_id</span><span class=\"p\">)))</span>\n</pre>\n<pre><code>My VPN link is \"SJC Branch ('AT&amp;T' via 'Circuit to AT&amp;T') &lt;-&gt; ('ATT2' via 'Circuit to ATT2') Charlotte DC\".\n</code></pre>\n<h5>Efficient usage:</h5>\n<pre><span class=\"c1\"># create constructor to make and cache queries</span>\n<span class=\"n\">idname</span> <span class=\"o\">=</span> <span class=\"n\">cloudgenix_idname</span><span class=\"o\">.</span><span class=\"n\">CloudGenixIDName</span><span class=\"p\">(</span><span class=\"n\">cgx_sess</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get just VPN id to name maps.</span>\n<span class=\"n\">vpnpaths_id_to_name</span> <span class=\"o\">=</span> <span class=\"n\">idname</span><span class=\"o\">.</span><span class=\"n\">generate_anynets_map</span><span class=\"p\">()</span>\n<span class=\"c1\"># takes &lt; 3 seconds to generate</span>\n\n<span class=\"c1\"># query for VPN</span>\n<span class=\"n\">vpn_link_id</span> <span class=\"o\">=</span> <span class=\"s1\">'15136303805980148'</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s1\">'My VPN link is \"</span><span class=\"si\">{}</span><span class=\"s1\">\".'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">vpnpaths_id_to_name</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">vpn_link_id</span><span class=\"p\">,</span> <span class=\"n\">vpn_link_id</span><span class=\"p\">)))</span>\n<span class=\"c1\"># output: My VPN link is \"SJC Branch ('AT&amp;T' via 'Circuit to AT&amp;T') &lt;-&gt; ('ATT2' via 'Circuit to ATT2') Charlotte DC\".</span>\n\n<span class=\"c1\"># lets query a link that is new since last time.</span>\n<span class=\"n\">new_vpn_link_id</span> <span class=\"o\">=</span> <span class=\"s1\">'15136303805980182'</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s1\">'My VPN link is \"</span><span class=\"si\">{}</span><span class=\"s1\">\".'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">vpnpaths_id_to_name</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">vpn_link_id</span><span class=\"p\">,</span> <span class=\"n\">vpn_link_id</span><span class=\"p\">)))</span>\n<span class=\"c1\"># output: My VPN link is \"15136303805980182\".</span>\n<span class=\"n\">vpnpaths_id_to_name</span> <span class=\"o\">=</span> <span class=\"n\">idname</span><span class=\"o\">.</span><span class=\"n\">generate_anynets_map</span><span class=\"p\">()</span>\n<span class=\"c1\"># takes &lt; 0.1 seconds</span>\n\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s1\">'My VPN link is \"</span><span class=\"si\">{}</span><span class=\"s1\">\".'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">vpnpaths_id_to_name</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">vpn_link_id</span><span class=\"p\">,</span> <span class=\"n\">vpn_link_id</span><span class=\"p\">)))</span>\n<span class=\"c1\"># output: My VPN link is \"SJC Branch ('Verizon' via 'Circuit to Verizon') &lt;-&gt; ('ATT2' via 'Circuit to ATT2') Charlotte DC\".</span>\n</pre>\n<h4>Requirements</h4>\n<ul>\n<li>Active CloudGenix Account</li>\n<li>Python &gt;=3.6 (if you still need 2.7 support, <code>pip install cloudgenix_idname==1.2.3</code>)</li>\n<li>Python modules:\n<ul>\n<li>cloudgenix &gt;=5.2.1b1 - <a href=\"https://github.com/CloudGenix/sdk-python\" rel=\"nofollow\">https://github.com/CloudGenix/sdk-python</a></li>\n</ul>\n</li>\n</ul>\n<h4>Code Example</h4>\n<p>Comes with <code>test.py</code> that creates an ID -&gt; Name map and dumps to console.</p>\n<h4>License</h4>\n<p>MIT</p>\n<h4>Version</h4>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>Changes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>2.0.1</strong></td>\n<td>Add support for localprefixes, globalprefixes</td>\n</tr>\n<tr>\n<td><strong>2.0.0</strong></td>\n<td>Major rewrite, Deprecate Python2. Now supports a Class object and caching with delta updates (where available.)</td>\n</tr>\n<tr>\n<td><strong>1.2.3</strong></td>\n<td>Fixed minor return issue</td>\n</tr>\n<tr>\n<td><strong>1.2.2</strong></td>\n<td>Add support for Spoke Clusters</td>\n</tr>\n<tr>\n<td><strong>1.2.1</strong></td>\n<td>Add support for SDK &gt;= 5.1.1b1</td>\n</tr>\n<tr>\n<td><strong>1.2.0</strong></td>\n<td>Add reverse lookup support (name -&gt; ID) to all functions. Reverse lookup has limitations as names are not unique.</td>\n</tr>\n<tr>\n<td><strong>1.1.3</strong></td>\n<td>Resolve Issue #6, enhance Site WAN Interface mapping, add shortcut to generate_id_name_map.</td>\n</tr>\n<tr>\n<td><strong>1.1.2</strong></td>\n<td>Fix minor return issue.</td>\n</tr>\n<tr>\n<td><strong>1.1.1</strong></td>\n<td>Fix issue with tenant_viewonly not being able to read operators.</td>\n</tr>\n<tr>\n<td><strong>1.1.0</strong></td>\n<td>Fix various bugs, issue #1, and Python 3 support</td>\n</tr>\n<tr>\n<td><strong>1.0.0</strong></td>\n<td>Initial Release.</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6625715, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "5e453ac8c450a0f65fb06750249bcc8d", "sha256": "aa7652f4b9fc15a8eb517fe6dbf031a0be9ab65976fb1484a9e088b09b9f96c3"}, "downloads": -1, "filename": "cloudgenix_idname-1.0.0.tar.gz", "has_sig": false, "md5_digest": "5e453ac8c450a0f65fb06750249bcc8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5914, "upload_time": "2018-01-10T20:22:55", "upload_time_iso_8601": "2018-01-10T20:22:55.651501Z", "url": "https://files.pythonhosted.org/packages/61/58/c1d910d230bbef868106feb534c6f892998ce860221ac3b57335baaf2852/cloudgenix_idname-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "bbed2ce68af0adee8a3bafb795ae4f64", "sha256": "6085e4c5a9d5c630efaa74ffac3d4637843585bb0f884109f626e9973387ccaa"}, "downloads": -1, "filename": "cloudgenix_idname-1.1.0.tar.gz", "has_sig": false, "md5_digest": "bbed2ce68af0adee8a3bafb795ae4f64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5993, "upload_time": "2018-01-19T22:20:26", "upload_time_iso_8601": "2018-01-19T22:20:26.791016Z", "url": "https://files.pythonhosted.org/packages/d4/67/57b15cb54a8c577d0a352f32ecb87dabc4eb6dab721c63bfb149e586a943/cloudgenix_idname-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "a972365399c50f6c3508579c0563fd49", "sha256": "cf880401b882de1ba5f27da3c0a73f3164dd619cf46d733099a90732cf65d736"}, "downloads": -1, "filename": "cloudgenix_idname-1.1.1.tar.gz", "has_sig": false, "md5_digest": "a972365399c50f6c3508579c0563fd49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6024, "upload_time": "2018-02-01T00:47:57", "upload_time_iso_8601": "2018-02-01T00:47:57.565163Z", "url": "https://files.pythonhosted.org/packages/05/fc/c0dcdd4b92bd391374a76f7e625fd54d775b02decee864b046a3b885a85e/cloudgenix_idname-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "1954cc54a761b60c9d2028390a523412", "sha256": "cb6a4f8fc2e401dfbec0d4963ecaa22a4fb708a7c4a3ad86f425bb57e90c6e4c"}, "downloads": -1, "filename": "cloudgenix_idname-1.1.2.tar.gz", "has_sig": false, "md5_digest": "1954cc54a761b60c9d2028390a523412", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6054, "upload_time": "2018-02-01T00:59:27", "upload_time_iso_8601": "2018-02-01T00:59:27.201679Z", "url": "https://files.pythonhosted.org/packages/77/f3/2cd8719ce2bc5cd73e968b0033f16bb4704d27eb0fff699537225c8aa915/cloudgenix_idname-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "f89d0dcbcab945d68a820fbd9efafdd8", "sha256": "48f9e0786195419771746f2802ef6a92d155c429cc76fcac0b41bfaf2a48cff5"}, "downloads": -1, "filename": "cloudgenix_idname-1.1.3.tar.gz", "has_sig": false, "md5_digest": "f89d0dcbcab945d68a820fbd9efafdd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6190, "upload_time": "2018-04-09T17:13:44", "upload_time_iso_8601": "2018-04-09T17:13:44.988053Z", "url": "https://files.pythonhosted.org/packages/5a/7a/1a73527a875c44a26db8289aa8ae0048d77897006e52f7b46f7596c3d4e0/cloudgenix_idname-1.1.3.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "bfaa25aafc5a9169a57c41649f87d4ce", "sha256": "c8c2ebaf0d6c6ed152fa86a9e0ccb244e72782845d7260e73332dad3abf784ea"}, "downloads": -1, "filename": "cloudgenix_idname-1.2.0.tar.gz", "has_sig": false, "md5_digest": "bfaa25aafc5a9169a57c41649f87d4ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6792, "upload_time": "2018-05-19T02:14:26", "upload_time_iso_8601": "2018-05-19T02:14:26.246826Z", "url": "https://files.pythonhosted.org/packages/42/8b/4116bc701f68739c5ce15206c88045d74b503661c6756e6f887e136d98a1/cloudgenix_idname-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "78b685032146c640a9533f6de78fac54", "sha256": "ce26b21b440f651d810173e8ca8591e926c872f2501916bb6e9e2129e8940c7c"}, "downloads": -1, "filename": "cloudgenix_idname-1.2.1.tar.gz", "has_sig": false, "md5_digest": "78b685032146c640a9533f6de78fac54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6657, "upload_time": "2019-02-20T18:27:29", "upload_time_iso_8601": "2019-02-20T18:27:29.538375Z", "url": "https://files.pythonhosted.org/packages/10/48/f8771262588b7d91e555253c1f9d522a24aba269a7c9f62790355b05adf4/cloudgenix_idname-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "1629ff85b3b07d2efa4666d6f4342ad0", "sha256": "d14fd3a2ee3f631a354d0544274a74eb2aabee975417f47a60292337fd7bee69"}, "downloads": -1, "filename": "cloudgenix_idname-1.2.2.tar.gz", "has_sig": false, "md5_digest": "1629ff85b3b07d2efa4666d6f4342ad0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7213, "upload_time": "2019-07-15T22:26:47", "upload_time_iso_8601": "2019-07-15T22:26:47.098387Z", "url": "https://files.pythonhosted.org/packages/3f/4e/e92e0a19261f88905bf860039382cdf61c81fdc5657544215645c6b62ab4/cloudgenix_idname-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "aa28872461ee4d98a25a97c70b58d094", "sha256": "d45c00b6ef1819ab879ed18b22d9367d6087dedd1d181adaca2137ee3728d8b0"}, "downloads": -1, "filename": "cloudgenix_idname-1.2.3.tar.gz", "has_sig": false, "md5_digest": "aa28872461ee4d98a25a97c70b58d094", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7234, "upload_time": "2019-08-15T19:03:53", "upload_time_iso_8601": "2019-08-15T19:03:53.458457Z", "url": "https://files.pythonhosted.org/packages/a6/50/e9d0139e8b4f67cc4c8968b8e513e8101dd63b660bccbdb7f47e141e8445/cloudgenix_idname-1.2.3.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "b0905ba2a9ec21f34dfcd4c9cb7ea52a", "sha256": "0e0a58411a7415fd2644f2c9f33ea4c80540c3d664f9248cf4f2ab029cff8e3f"}, "downloads": -1, "filename": "cloudgenix_idname-2.0.0.tar.gz", "has_sig": false, "md5_digest": "b0905ba2a9ec21f34dfcd4c9cb7ea52a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 15817, "upload_time": "2020-02-11T00:52:42", "upload_time_iso_8601": "2020-02-11T00:52:42.875893Z", "url": "https://files.pythonhosted.org/packages/3e/ba/2f8b8ee5f6be2e1f5612817a1fd39e36586788b5375d2f8d9350182a744c/cloudgenix_idname-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "1983fe2189f79d7420b8e1f7f97c5ed7", "sha256": "13573e626b4970a25247368141a75a6888d606b067f9b82a40a6684fd62f41d2"}, "downloads": -1, "filename": "cloudgenix_idname-2.0.1.tar.gz", "has_sig": false, "md5_digest": "1983fe2189f79d7420b8e1f7f97c5ed7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 16146, "upload_time": "2020-02-13T20:08:16", "upload_time_iso_8601": "2020-02-13T20:08:16.522517Z", "url": "https://files.pythonhosted.org/packages/61/50/05111bc88bf9cdb838c064d4b6e0494072b34b5ca73992d6e2affec93e83/cloudgenix_idname-2.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1983fe2189f79d7420b8e1f7f97c5ed7", "sha256": "13573e626b4970a25247368141a75a6888d606b067f9b82a40a6684fd62f41d2"}, "downloads": -1, "filename": "cloudgenix_idname-2.0.1.tar.gz", "has_sig": false, "md5_digest": "1983fe2189f79d7420b8e1f7f97c5ed7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 16146, "upload_time": "2020-02-13T20:08:16", "upload_time_iso_8601": "2020-02-13T20:08:16.522517Z", "url": "https://files.pythonhosted.org/packages/61/50/05111bc88bf9cdb838c064d4b6e0494072b34b5ca73992d6e2affec93e83/cloudgenix_idname-2.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:50 2020"}