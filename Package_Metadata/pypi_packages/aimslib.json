{"info": {"author": "Jon Hurst", "author_email": "jon.a@hursts.org.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# aimslib #\n\nThis is a refactor from various different projects to move the functionality of\nextracting information from AIMS servers into a common library. It is built and\ntested against easyJet AIMS servers. It will likely need adapting to work with\nAIMS servers run by other airlines.\n\n## Example code ###\n```python\nimport json\nimport sys\n\nfrom aimslib.access.connect import connect, logout\nfrom  aimslib.access.cache import TripCache, CrewlistCache\nfrom aimslib.common.types import NoTripDetails\nimport aimslib.access.brief_roster as Roster\n\n#put your own values in here\nCACHE_DIR = \"/SUITABLE/LOCATION/FOR/CACHE/\"\nECREW_LOGIN_PAGE = \"https://ECREW/LOGIN/PAGE\"\nUSERNAME = \"YOUR_USERNAME\"\nPASSWORD = \"YOUR_PASSWORD\"\n\n\ndef heartbeat():\n    sys.stderr.write('.')\n    sys.stderr.flush()\n\n#connect to AIMS\npost_func = connect(ECREW_LOGIN_PAGE, USERNAME, PASSWORD, heartbeat)\n\n#build a sparse duty list from the current brief roster and the two before\nsparse_dutylist = []\nfor roster in Roster.retrieve(post_func, -2):\n    sparse_dutylist.extend(Roster.duties(Roster.parse(roster)))\n\n#build an expanded duty list using trip pages\nexpanded_dutylist = []\ntrip_cache = TripCache(CACHE_DIR + \"aimslib.tripcache\", post_func)\nlast_id = None\nfor duty in sorted(sparse_dutylist):\n    if duty.trip_id == last_id: continue #sparse_dutylist may contain duplicates\n    last_id = duty.trip_id\n    if duty.start is None:\n        try:\n            expanded_dutylist.extend(trip_cache.trip(duty.trip_id))\n        except NoTripDetails:\n            print(\"Trip details not found for: \", duty.trip_id, file=sys.stderr)\n    else:\n        expanded_dutylist.append(duty)\ntrip_cache.store()\n\n#build crewlist map\ncrew_cache = CrewlistCache(CACHE_DIR + \"aimslib.clcache\", post_func)\ncrewlist_map = {}\nfor duty in expanded_dutylist:\n    if duty.sectors:\n        for sector in duty.sectors:\n            crewlist = crew_cache.crewlist(sector.crewlist_id)\n            crewlist_map[sector.crewlist_id] = crewlist\ncrew_cache.store()\n\n#dump objects as json\nprint(json.dumps(\n    (expanded_dutylist, crewlist_map),\n    default=lambda o: str(o),\n    indent=2))\n\n#cleanup\nlogout(post_func)\n\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JonHurst/aimslib", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aimslib", "package_url": "https://pypi.org/project/aimslib/", "platform": "", "project_url": "https://pypi.org/project/aimslib/", "project_urls": {"Homepage": "https://github.com/JonHurst/aimslib"}, "release_url": "https://pypi.org/project/aimslib/0.0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A library for working with AIMS", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aimslib</h1>\n<p>This is a refactor from various different projects to move the functionality of\nextracting information from AIMS servers into a common library. It is built and\ntested against easyJet AIMS servers. It will likely need adapting to work with\nAIMS servers run by other airlines.</p>\n<h2>Example code</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aimslib.access.connect</span> <span class=\"kn\">import</span> <span class=\"n\">connect</span><span class=\"p\">,</span> <span class=\"n\">logout</span>\n<span class=\"kn\">from</span>  <span class=\"nn\">aimslib.access.cache</span> <span class=\"kn\">import</span> <span class=\"n\">TripCache</span><span class=\"p\">,</span> <span class=\"n\">CrewlistCache</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aimslib.common.types</span> <span class=\"kn\">import</span> <span class=\"n\">NoTripDetails</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aimslib.access.brief_roster</span> <span class=\"k\">as</span> <span class=\"nn\">Roster</span>\n\n<span class=\"c1\">#put your own values in here</span>\n<span class=\"n\">CACHE_DIR</span> <span class=\"o\">=</span> <span class=\"s2\">\"/SUITABLE/LOCATION/FOR/CACHE/\"</span>\n<span class=\"n\">ECREW_LOGIN_PAGE</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://ECREW/LOGIN/PAGE\"</span>\n<span class=\"n\">USERNAME</span> <span class=\"o\">=</span> <span class=\"s2\">\"YOUR_USERNAME\"</span>\n<span class=\"n\">PASSWORD</span> <span class=\"o\">=</span> <span class=\"s2\">\"YOUR_PASSWORD\"</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">heartbeat</span><span class=\"p\">():</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stderr</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'.'</span><span class=\"p\">)</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stderr</span><span class=\"o\">.</span><span class=\"n\">flush</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#connect to AIMS</span>\n<span class=\"n\">post_func</span> <span class=\"o\">=</span> <span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">ECREW_LOGIN_PAGE</span><span class=\"p\">,</span> <span class=\"n\">USERNAME</span><span class=\"p\">,</span> <span class=\"n\">PASSWORD</span><span class=\"p\">,</span> <span class=\"n\">heartbeat</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#build a sparse duty list from the current brief roster and the two before</span>\n<span class=\"n\">sparse_dutylist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">roster</span> <span class=\"ow\">in</span> <span class=\"n\">Roster</span><span class=\"o\">.</span><span class=\"n\">retrieve</span><span class=\"p\">(</span><span class=\"n\">post_func</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n    <span class=\"n\">sparse_dutylist</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">Roster</span><span class=\"o\">.</span><span class=\"n\">duties</span><span class=\"p\">(</span><span class=\"n\">Roster</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">roster</span><span class=\"p\">)))</span>\n\n<span class=\"c1\">#build an expanded duty list using trip pages</span>\n<span class=\"n\">expanded_dutylist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">trip_cache</span> <span class=\"o\">=</span> <span class=\"n\">TripCache</span><span class=\"p\">(</span><span class=\"n\">CACHE_DIR</span> <span class=\"o\">+</span> <span class=\"s2\">\"aimslib.tripcache\"</span><span class=\"p\">,</span> <span class=\"n\">post_func</span><span class=\"p\">)</span>\n<span class=\"n\">last_id</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"k\">for</span> <span class=\"n\">duty</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">sparse_dutylist</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">duty</span><span class=\"o\">.</span><span class=\"n\">trip_id</span> <span class=\"o\">==</span> <span class=\"n\">last_id</span><span class=\"p\">:</span> <span class=\"k\">continue</span> <span class=\"c1\">#sparse_dutylist may contain duplicates</span>\n    <span class=\"n\">last_id</span> <span class=\"o\">=</span> <span class=\"n\">duty</span><span class=\"o\">.</span><span class=\"n\">trip_id</span>\n    <span class=\"k\">if</span> <span class=\"n\">duty</span><span class=\"o\">.</span><span class=\"n\">start</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">expanded_dutylist</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">trip_cache</span><span class=\"o\">.</span><span class=\"n\">trip</span><span class=\"p\">(</span><span class=\"n\">duty</span><span class=\"o\">.</span><span class=\"n\">trip_id</span><span class=\"p\">))</span>\n        <span class=\"k\">except</span> <span class=\"n\">NoTripDetails</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Trip details not found for: \"</span><span class=\"p\">,</span> <span class=\"n\">duty</span><span class=\"o\">.</span><span class=\"n\">trip_id</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"o\">=</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stderr</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">expanded_dutylist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">duty</span><span class=\"p\">)</span>\n<span class=\"n\">trip_cache</span><span class=\"o\">.</span><span class=\"n\">store</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#build crewlist map</span>\n<span class=\"n\">crew_cache</span> <span class=\"o\">=</span> <span class=\"n\">CrewlistCache</span><span class=\"p\">(</span><span class=\"n\">CACHE_DIR</span> <span class=\"o\">+</span> <span class=\"s2\">\"aimslib.clcache\"</span><span class=\"p\">,</span> <span class=\"n\">post_func</span><span class=\"p\">)</span>\n<span class=\"n\">crewlist_map</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"k\">for</span> <span class=\"n\">duty</span> <span class=\"ow\">in</span> <span class=\"n\">expanded_dutylist</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">duty</span><span class=\"o\">.</span><span class=\"n\">sectors</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">sector</span> <span class=\"ow\">in</span> <span class=\"n\">duty</span><span class=\"o\">.</span><span class=\"n\">sectors</span><span class=\"p\">:</span>\n            <span class=\"n\">crewlist</span> <span class=\"o\">=</span> <span class=\"n\">crew_cache</span><span class=\"o\">.</span><span class=\"n\">crewlist</span><span class=\"p\">(</span><span class=\"n\">sector</span><span class=\"o\">.</span><span class=\"n\">crewlist_id</span><span class=\"p\">)</span>\n            <span class=\"n\">crewlist_map</span><span class=\"p\">[</span><span class=\"n\">sector</span><span class=\"o\">.</span><span class=\"n\">crewlist_id</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">crewlist</span>\n<span class=\"n\">crew_cache</span><span class=\"o\">.</span><span class=\"n\">store</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#dump objects as json</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"n\">expanded_dutylist</span><span class=\"p\">,</span> <span class=\"n\">crewlist_map</span><span class=\"p\">),</span>\n    <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">o</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"p\">),</span>\n    <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n\n<span class=\"c1\">#cleanup</span>\n<span class=\"n\">logout</span><span class=\"p\">(</span><span class=\"n\">post_func</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7162433, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "bcefd278da1213cf4f0157f861c12298", "sha256": "f716ab176c83390df560b0c24585ffb3647326b918d1b66836b98b868e980274"}, "downloads": -1, "filename": "aimslib-0.0.1.tar.gz", "has_sig": false, "md5_digest": "bcefd278da1213cf4f0157f861c12298", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11791, "upload_time": "2020-05-03T09:22:21", "upload_time_iso_8601": "2020-05-03T09:22:21.095012Z", "url": "https://files.pythonhosted.org/packages/54/70/dba92ecab65cab1cc6fcb12ebc8a09e6a80f6e1e9c98d62a01b941150093/aimslib-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "63df6f76f44d2e43f744601c03996200", "sha256": "d8a3d815c97f1efd940bc4751ef456e3eb418ff5d75e9ee22721e29071354800"}, "downloads": -1, "filename": "aimslib-0.0.2.tar.gz", "has_sig": false, "md5_digest": "63df6f76f44d2e43f744601c03996200", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12005, "upload_time": "2020-05-03T15:04:42", "upload_time_iso_8601": "2020-05-03T15:04:42.289196Z", "url": "https://files.pythonhosted.org/packages/68/7c/6e2331026f21b2cb4e87c4f3f3302883f69abd8a6920a7e5c1a9922ad5db/aimslib-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "05b1ccb5e10333307de51011988daf93", "sha256": "7230a2ec4af13e7520fb658079b093d2dc1063e6ed1314a559f3df35333a3137"}, "downloads": -1, "filename": "aimslib-0.0.3.tar.gz", "has_sig": false, "md5_digest": "05b1ccb5e10333307de51011988daf93", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12145, "upload_time": "2020-05-04T09:17:09", "upload_time_iso_8601": "2020-05-04T09:17:09.479451Z", "url": "https://files.pythonhosted.org/packages/28/18/2cf296ff0b5ff12ef2fa67aca9a7dfaa063ea9567ea725991ad86f8d381c/aimslib-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "05b1ccb5e10333307de51011988daf93", "sha256": "7230a2ec4af13e7520fb658079b093d2dc1063e6ed1314a559f3df35333a3137"}, "downloads": -1, "filename": "aimslib-0.0.3.tar.gz", "has_sig": false, "md5_digest": "05b1ccb5e10333307de51011988daf93", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12145, "upload_time": "2020-05-04T09:17:09", "upload_time_iso_8601": "2020-05-04T09:17:09.479451Z", "url": "https://files.pythonhosted.org/packages/28/18/2cf296ff0b5ff12ef2fa67aca9a7dfaa063ea9567ea725991ad86f8d381c/aimslib-0.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:52 2020"}