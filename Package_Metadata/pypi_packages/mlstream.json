{"info": {"author": "Martin Gauch", "author_email": "martin.gauch@uwaterloo.ca", "bugtrack_url": null, "classifiers": [], "description": "# mlstream\n[![Documentation Status](https://readthedocs.org/projects/mlstream/badge/?version=latest)](https://mlstream.readthedocs.io/en/latest/?badge=latest)\n\nMachine learning for streamflow prediction.\n\n**PyPI:** https://pypi.org/project/mlstream/\n\n**Documentation:** https://mlstream.readthedocs.io/\n\n## Usage\n\nThis project is work in progress.\nThe idea is to create an easy way of training machine learning streamflow models:\nJust provide your data, select a model (or provide your own), and get the predictions.\n\n### Training\n```python\nexp = Experiment(data_path, is_train=True, run_dir=run_dir,\n                 start_date='01012000', end_date='31122015',\n                 basins=train_basin_ids, \n                 forcing_attributes=['precip', 'tmax', 'tmin'],\n                 static_attributes=['area', 'regulation'])\n\nexp.set_model(model)\nexp.train()\n```\n\n### Inference\n```python\nrun_dir = Path('./experiments')\nexp = Experiment(data_path, is_train=False, \n                 run_dir=run_dir, \n                 basins=test_basin_ids,\n                 start_date='01012016', end_date='31122018')\nmodel.load(run_dir / 'model.pkl')\nexp.set_model(model)  \nresults = exp.predict()\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/gauchm/mlstream", "keywords": "ml hydrology streamflow machine learning", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "mlstream", "package_url": "https://pypi.org/project/mlstream/", "platform": "", "project_url": "https://pypi.org/project/mlstream/", "project_urls": {"Homepage": "http://github.com/gauchm/mlstream"}, "release_url": "https://pypi.org/project/mlstream/0.1.2/", "requires_dist": ["pandas", "numpy", "h5py", "tqdm", "netCDF4", "numba", "scipy", "torch"], "requires_python": "", "summary": "Machine learning for streamflow prediction", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mlstream</h1>\n<p><a href=\"https://mlstream.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1caf80870e052af161a069a242bc4065a62efd05/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6d6c73747265616d2f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>Machine learning for streamflow prediction.</p>\n<p><strong>PyPI:</strong> <a href=\"https://pypi.org/project/mlstream/\" rel=\"nofollow\">https://pypi.org/project/mlstream/</a></p>\n<p><strong>Documentation:</strong> <a href=\"https://mlstream.readthedocs.io/\" rel=\"nofollow\">https://mlstream.readthedocs.io/</a></p>\n<h2>Usage</h2>\n<p>This project is work in progress.\nThe idea is to create an easy way of training machine learning streamflow models:\nJust provide your data, select a model (or provide your own), and get the predictions.</p>\n<h3>Training</h3>\n<pre><span class=\"n\">exp</span> <span class=\"o\">=</span> <span class=\"n\">Experiment</span><span class=\"p\">(</span><span class=\"n\">data_path</span><span class=\"p\">,</span> <span class=\"n\">is_train</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">run_dir</span><span class=\"o\">=</span><span class=\"n\">run_dir</span><span class=\"p\">,</span>\n                 <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s1\">'01012000'</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"s1\">'31122015'</span><span class=\"p\">,</span>\n                 <span class=\"n\">basins</span><span class=\"o\">=</span><span class=\"n\">train_basin_ids</span><span class=\"p\">,</span> \n                 <span class=\"n\">forcing_attributes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'precip'</span><span class=\"p\">,</span> <span class=\"s1\">'tmax'</span><span class=\"p\">,</span> <span class=\"s1\">'tmin'</span><span class=\"p\">],</span>\n                 <span class=\"n\">static_attributes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'area'</span><span class=\"p\">,</span> <span class=\"s1\">'regulation'</span><span class=\"p\">])</span>\n\n<span class=\"n\">exp</span><span class=\"o\">.</span><span class=\"n\">set_model</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n<span class=\"n\">exp</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">()</span>\n</pre>\n<h3>Inference</h3>\n<pre><span class=\"n\">run_dir</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'./experiments'</span><span class=\"p\">)</span>\n<span class=\"n\">exp</span> <span class=\"o\">=</span> <span class=\"n\">Experiment</span><span class=\"p\">(</span><span class=\"n\">data_path</span><span class=\"p\">,</span> <span class=\"n\">is_train</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> \n                 <span class=\"n\">run_dir</span><span class=\"o\">=</span><span class=\"n\">run_dir</span><span class=\"p\">,</span> \n                 <span class=\"n\">basins</span><span class=\"o\">=</span><span class=\"n\">test_basin_ids</span><span class=\"p\">,</span>\n                 <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s1\">'01012016'</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"s1\">'31122018'</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">run_dir</span> <span class=\"o\">/</span> <span class=\"s1\">'model.pkl'</span><span class=\"p\">)</span>\n<span class=\"n\">exp</span><span class=\"o\">.</span><span class=\"n\">set_model</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>  \n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">exp</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6633467, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e884ca82110e69f73ae1aa9026b48ead", "sha256": "9854b49af725e0237f49088ba961fe8e9a8e791867a66ace5b2cd0e69267ddb1"}, "downloads": -1, "filename": "mlstream-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e884ca82110e69f73ae1aa9026b48ead", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27893, "upload_time": "2020-01-12T23:10:48", "upload_time_iso_8601": "2020-01-12T23:10:48.559881Z", "url": "https://files.pythonhosted.org/packages/d6/bb/8458105f2640aa35dbba48a57d81c6673f397da5d94f31820454bc2ad098/mlstream-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df1cc9dedba16b02910110d4b757dc83", "sha256": "2f7a3fc7d585e3e656d126a3bf0301d3b17ac49b70a4de00c87b10f25ccf5db6"}, "downloads": -1, "filename": "mlstream-0.1.tar.gz", "has_sig": false, "md5_digest": "df1cc9dedba16b02910110d4b757dc83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19752, "upload_time": "2020-01-12T23:10:50", "upload_time_iso_8601": "2020-01-12T23:10:50.842836Z", "url": "https://files.pythonhosted.org/packages/13/64/4aba6b6116d559e01d493df545726e1b0ccc65ec654efbcea29cf56fc651/mlstream-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "157c53ec357d87f1f52ac6ff9a682a4d", "sha256": "c33308316ccb4a04e94f1ac76682b216b2bbfd65fe04d68c82acc51596b39064"}, "downloads": -1, "filename": "mlstream-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "157c53ec357d87f1f52ac6ff9a682a4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28444, "upload_time": "2020-02-08T18:03:09", "upload_time_iso_8601": "2020-02-08T18:03:09.471757Z", "url": "https://files.pythonhosted.org/packages/ca/ae/9e9f929ea43a94702078cd494e147156b3f4a2c7ece14b75477cbb0bffa1/mlstream-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8589847f1f7190fe17a5b9c9f705bcbf", "sha256": "af4fad4346ea0f817aef63974381afcd6fe98472142389994bf57f1636f52659"}, "downloads": -1, "filename": "mlstream-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8589847f1f7190fe17a5b9c9f705bcbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20128, "upload_time": "2020-02-08T18:03:50", "upload_time_iso_8601": "2020-02-08T18:03:50.738686Z", "url": "https://files.pythonhosted.org/packages/7b/4e/7efb42de96a9050faca6a93e9b93b28ddf96431279803e0841c1e167c2b4/mlstream-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "958e3f24052109de64c739d994681c4c", "sha256": "b93517e2c4cf08512c586dcad5de021248507c31807fb6a27bcbdb7e3894d354"}, "downloads": -1, "filename": "mlstream-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "958e3f24052109de64c739d994681c4c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28451, "upload_time": "2020-02-14T20:34:08", "upload_time_iso_8601": "2020-02-14T20:34:08.097280Z", "url": "https://files.pythonhosted.org/packages/ee/4c/1ec2a126e7cf4376eeeeae902ca2469fc96775c1e60493e1493fdd0717ba/mlstream-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "502bb829a4982b50c45223e871d93848", "sha256": "e6867fd4236de880fe601d0cd949e04aaa836acf190be04e8895d260e9448b65"}, "downloads": -1, "filename": "mlstream-0.1.2.tar.gz", "has_sig": false, "md5_digest": "502bb829a4982b50c45223e871d93848", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20033, "upload_time": "2020-02-14T20:34:09", "upload_time_iso_8601": "2020-02-14T20:34:09.613359Z", "url": "https://files.pythonhosted.org/packages/0a/5c/d778315d7caeb58780676b56566f789181ffced5c84090b4f708d81c22e3/mlstream-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "958e3f24052109de64c739d994681c4c", "sha256": "b93517e2c4cf08512c586dcad5de021248507c31807fb6a27bcbdb7e3894d354"}, "downloads": -1, "filename": "mlstream-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "958e3f24052109de64c739d994681c4c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28451, "upload_time": "2020-02-14T20:34:08", "upload_time_iso_8601": "2020-02-14T20:34:08.097280Z", "url": "https://files.pythonhosted.org/packages/ee/4c/1ec2a126e7cf4376eeeeae902ca2469fc96775c1e60493e1493fdd0717ba/mlstream-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "502bb829a4982b50c45223e871d93848", "sha256": "e6867fd4236de880fe601d0cd949e04aaa836acf190be04e8895d260e9448b65"}, "downloads": -1, "filename": "mlstream-0.1.2.tar.gz", "has_sig": false, "md5_digest": "502bb829a4982b50c45223e871d93848", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20033, "upload_time": "2020-02-14T20:34:09", "upload_time_iso_8601": "2020-02-14T20:34:09.613359Z", "url": "https://files.pythonhosted.org/packages/0a/5c/d778315d7caeb58780676b56566f789181ffced5c84090b4f708d81c22e3/mlstream-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:22 2020"}