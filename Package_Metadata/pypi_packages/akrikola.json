{"info": {"author": "Tjkemp", "author_email": "tero.kemppi@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Akrikola\n===============\n\nAn early version of a light-weight NLP library for Finnish language.\n\n## Use case\n\nIn Finnish language the rules for selecting noun cases \"in\", \"from\" and \"into\" for municipality names are complicated. Even Finns have problem selecting the correct case when using a less common municipality name. In Finland there are over 300 municipalities. This library provides correct case endings.\n\n## Use case explained in Finnish / K\u00e4ytt\u00f6tarkoitus suomeksi\n\nSuomalaisten kuntien, kaupunkien ja muiden asutusten nimi\u00e4 taivutetaan siten kuin paikkakunnalla on totuttu taivuttamaan. T\u00e4m\u00e4 kirjasto taivuttaa suomalaisten kuntien nimet sis\u00e4- ja ulkopaikallissijoissa sek\u00e4 partitiivissa ja genetiiviss\u00e4. Lis\u00e4ksi kirjastolla voi tunnistaa kuntien nimi\u00e4 kaikissa mainituissa taivutusmuodoissa.\n\n## Using Akrikola\n\nTo conjugate municipalities just import Municipality class and create an instance with the name of the municipality.\n\n```python\nfrom akrikola import Municipality\n\ntown = Municipality(\"Ylivieska\")\nprint(town.departure)\nprint(town.destination)\nprint(town.at)\n```\n\nWill produce:\n\n```\nYlivieska\nYlivieskaan\nYlivieskassa\n```\n\nAlso nominative, partitive and genetive forms can be produced:\n\n```python\ncity = Municipality(\"Kauniainen\")\nprint(city.name)\nprint(city.partitive)\nprint(city.genetive)\nprint(city.in_swedish)\n```\n\nWill produce:\n\n```\nKauniainen\nKauniaista\nKauniaisten\nGrankulla\n```\n\nNote that the class will throw KeyError at instance creation if the word is not a name of a municipality.\n\nTo check if a word is a municipality name in any the six recognized noun cases (plus in swedish):\n\n```python\nfrom akrikola import Municipality\n\nMunicipality.exists(\"Hattula\")\n# return True\nMunicipality.exists(\"Hattula\")\n# return False\n```\n\n# Author\n\n- [tjkemp](https://github.com/tjkemp)\n\nThis project is licensed under the terms of the GNU Lesser General Public License v3.0 (GNU LGPLv3). See ``LICENSE.txt`` for more information.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/tjkemp/akrikola", "keywords": "", "license": "GNU LGPLv3", "maintainer": "", "maintainer_email": "", "name": "akrikola", "package_url": "https://pypi.org/project/akrikola/", "platform": "", "project_url": "https://pypi.org/project/akrikola/", "project_urls": {"Homepage": "http://github.com/tjkemp/akrikola"}, "release_url": "https://pypi.org/project/akrikola/0.1/", "requires_dist": null, "requires_python": "", "summary": "A light-weight NLP library for Finnish language", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Akrikola</h1>\n<p>An early version of a light-weight NLP library for Finnish language.</p>\n<h2>Use case</h2>\n<p>In Finnish language the rules for selecting noun cases \"in\", \"from\" and \"into\" for municipality names are complicated. Even Finns have problem selecting the correct case when using a less common municipality name. In Finland there are over 300 municipalities. This library provides correct case endings.</p>\n<h2>Use case explained in Finnish / K\u00e4ytt\u00f6tarkoitus suomeksi</h2>\n<p>Suomalaisten kuntien, kaupunkien ja muiden asutusten nimi\u00e4 taivutetaan siten kuin paikkakunnalla on totuttu taivuttamaan. T\u00e4m\u00e4 kirjasto taivuttaa suomalaisten kuntien nimet sis\u00e4- ja ulkopaikallissijoissa sek\u00e4 partitiivissa ja genetiiviss\u00e4. Lis\u00e4ksi kirjastolla voi tunnistaa kuntien nimi\u00e4 kaikissa mainituissa taivutusmuodoissa.</p>\n<h2>Using Akrikola</h2>\n<p>To conjugate municipalities just import Municipality class and create an instance with the name of the municipality.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">akrikola</span> <span class=\"kn\">import</span> <span class=\"n\">Municipality</span>\n\n<span class=\"n\">town</span> <span class=\"o\">=</span> <span class=\"n\">Municipality</span><span class=\"p\">(</span><span class=\"s2\">\"Ylivieska\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">town</span><span class=\"o\">.</span><span class=\"n\">departure</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">town</span><span class=\"o\">.</span><span class=\"n\">destination</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">town</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">)</span>\n</pre>\n<p>Will produce:</p>\n<pre><code>Ylivieska\nYlivieskaan\nYlivieskassa\n</code></pre>\n<p>Also nominative, partitive and genetive forms can be produced:</p>\n<pre><span class=\"n\">city</span> <span class=\"o\">=</span> <span class=\"n\">Municipality</span><span class=\"p\">(</span><span class=\"s2\">\"Kauniainen\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">city</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">city</span><span class=\"o\">.</span><span class=\"n\">partitive</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">city</span><span class=\"o\">.</span><span class=\"n\">genetive</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">city</span><span class=\"o\">.</span><span class=\"n\">in_swedish</span><span class=\"p\">)</span>\n</pre>\n<p>Will produce:</p>\n<pre><code>Kauniainen\nKauniaista\nKauniaisten\nGrankulla\n</code></pre>\n<p>Note that the class will throw KeyError at instance creation if the word is not a name of a municipality.</p>\n<p>To check if a word is a municipality name in any the six recognized noun cases (plus in swedish):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">akrikola</span> <span class=\"kn\">import</span> <span class=\"n\">Municipality</span>\n\n<span class=\"n\">Municipality</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"s2\">\"Hattula\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># return True</span>\n<span class=\"n\">Municipality</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"s2\">\"Hattula\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># return False</span>\n</pre>\n<h1>Author</h1>\n<ul>\n<li><a href=\"https://github.com/tjkemp\" rel=\"nofollow\">tjkemp</a></li>\n</ul>\n<p>This project is licensed under the terms of the GNU Lesser General Public License v3.0 (GNU LGPLv3). See <code>LICENSE.txt</code> for more information.</p>\n\n          </div>"}, "last_serial": 6147922, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "dd9231bcd20ddfb7ac25a18489c3d50a", "sha256": "e840844862084e3f5f4c14606db74a1438879aabf1dc684a3a07b0ec7177c65e"}, "downloads": -1, "filename": "akrikola-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dd9231bcd20ddfb7ac25a18489c3d50a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4753, "upload_time": "2019-11-16T18:58:41", "upload_time_iso_8601": "2019-11-16T18:58:41.478377Z", "url": "https://files.pythonhosted.org/packages/7f/62/e1d0f36b6c9e9f77c30650df8db9b14793f6ff737a535352d5d0066202d5/akrikola-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48c0f3328c6bb00ba152a1ee88e76b49", "sha256": "eee9c3a01dd8b50d544e06f8d1e9d8971371172432cdbb26637c774e8b422efd"}, "downloads": -1, "filename": "akrikola-0.1.tar.gz", "has_sig": false, "md5_digest": "48c0f3328c6bb00ba152a1ee88e76b49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1955, "upload_time": "2019-11-16T18:58:43", "upload_time_iso_8601": "2019-11-16T18:58:43.721599Z", "url": "https://files.pythonhosted.org/packages/52/ef/bfab729d1230755d96a283e5e17e34aa396cac04a7ab3e4d3b6736230f16/akrikola-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dd9231bcd20ddfb7ac25a18489c3d50a", "sha256": "e840844862084e3f5f4c14606db74a1438879aabf1dc684a3a07b0ec7177c65e"}, "downloads": -1, "filename": "akrikola-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dd9231bcd20ddfb7ac25a18489c3d50a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4753, "upload_time": "2019-11-16T18:58:41", "upload_time_iso_8601": "2019-11-16T18:58:41.478377Z", "url": "https://files.pythonhosted.org/packages/7f/62/e1d0f36b6c9e9f77c30650df8db9b14793f6ff737a535352d5d0066202d5/akrikola-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48c0f3328c6bb00ba152a1ee88e76b49", "sha256": "eee9c3a01dd8b50d544e06f8d1e9d8971371172432cdbb26637c774e8b422efd"}, "downloads": -1, "filename": "akrikola-0.1.tar.gz", "has_sig": false, "md5_digest": "48c0f3328c6bb00ba152a1ee88e76b49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1955, "upload_time": "2019-11-16T18:58:43", "upload_time_iso_8601": "2019-11-16T18:58:43.721599Z", "url": "https://files.pythonhosted.org/packages/52/ef/bfab729d1230755d96a283e5e17e34aa396cac04a7ab3e4d3b6736230f16/akrikola-0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:10 2020"}