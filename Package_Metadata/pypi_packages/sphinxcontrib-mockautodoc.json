{"info": {"author": "Evgeniy Tatarkin", "author_email": "tatarkin.evg@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Documentation", "Topic :: Utilities"], "description": "mockautodoc\n===========\n\nMock imports for build docs without install packages in environment.\n\nThis extension add `:mockimport:` and `:mocktype:` for standard automodule\nderictive from autodoc_.\n\nMain goal of extension is to solve task defined on question_.\n\nInstall\n-------\n\n::\n\n    pip install sphinxcontrib-mockautodoc\n\n\nUsage\n-----\n\nAdd mockautodoc to extensions list::\n\n    extenstion = ['sphinx.ext.autodoc', 'sphinxcontrib.mockautodoc', ]\n\nThe extension add two options to standard automodule:\n\n- `:mockimport:` list of name spaces to mock separated by ','.\n- `:mocktype:` list of objects which must be mock as type object \n    for right way subclass them in sources, separated by ','.\n\nIf you have module for documenting::\n    \n    from twisted.internet import protocol, defer\n    \n    @defer.inlineCallbacks\n    def my_func():\n        \"\"\"my function\"\"\"\n        pass\n\n    class MyProtocol(protocol.Protocol):\n        \"\"\"my protocol\"\"\"\n        pass\n\nAnd twisted_ not installed you can document module like that::\n    \n    .. automodule:: package\n        :mockimport: twisted\n        :mocktype: protocol.Protocol\n\n\nWhere on `:mockimport:` will be mocked all twisted.* imports\nin automodule building context. And `:mocktype:` means which instances must be \nobject types to successful subclass them without loss target documentation.\n\n\nmockatudoc settings may be defined on conf.py and all automodule directives\nwith present `:mockimport:` will be mocked. Where data on mockatodoc settings\nwill be summed with `:mockimport:` and `:mocktype:` options::\n    \n    mockautodoc = {\n        'mockimport': ['twisted',],\n        'mocktype': ['protocol.Protocol'],\n    }\n\n.. _twisted: http://twistedmatrix.com/\n.. _autodoc: http://sphinx-doc.org/ext/autodoc.html\n.. _question: http://stackoverflow.com/questions/15587305/any-ways-build-docs-by-sphinx-with-both-python2-x-and-python3-x-ecosystems", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/pypi/sphinxcontrib-mockautodoc", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/birkenfeld/sphinx-contrib", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "sphinxcontrib-mockautodoc", "package_url": "https://pypi.org/project/sphinxcontrib-mockautodoc/", "platform": "any", "project_url": "https://pypi.org/project/sphinxcontrib-mockautodoc/", "project_urls": {"Download": "http://pypi.python.org/pypi/sphinxcontrib-mockautodoc", "Homepage": "http://bitbucket.org/birkenfeld/sphinx-contrib"}, "release_url": "https://pypi.org/project/sphinxcontrib-mockautodoc/0.0.1dev-20130518/", "requires_dist": null, "requires_python": null, "summary": "Sphinx mocking autodoc extension", "version": "0.0.1dev-20130518", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Mock imports for build docs without install packages in environment.</p>\n<p>This extension add <cite>:mockimport:</cite> and <cite>:mocktype:</cite> for standard automodule\nderictive from <a href=\"http://sphinx-doc.org/ext/autodoc.html\" rel=\"nofollow\">autodoc</a>.</p>\n<p>Main goal of extension is to solve task defined on <a href=\"http://stackoverflow.com/questions/15587305/any-ways-build-docs-by-sphinx-with-both-python2-x-and-python3-x-ecosystems\" rel=\"nofollow\">question</a>.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install sphinxcontrib-mockautodoc\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Add mockautodoc to extensions list:</p>\n<pre>extenstion = ['sphinx.ext.autodoc', 'sphinxcontrib.mockautodoc', ]\n</pre>\n<p>The extension add two options to standard automodule:</p>\n<ul>\n<li><cite>:mockimport:</cite> list of name spaces to mock separated by \u2018,\u2019.</li>\n<li><dl>\n<dt><cite>:mocktype:</cite> list of objects which must be mock as type object</dt>\n<dd>for right way subclass them in sources, separated by \u2018,\u2019.</dd>\n</dl>\n</li>\n</ul>\n<p>If you have module for documenting:</p>\n<pre>from twisted.internet import protocol, defer\n\n@defer.inlineCallbacks\ndef my_func():\n    \"\"\"my function\"\"\"\n    pass\n\nclass MyProtocol(protocol.Protocol):\n    \"\"\"my protocol\"\"\"\n    pass\n</pre>\n<p>And <a href=\"http://twistedmatrix.com/\" rel=\"nofollow\">twisted</a> not installed you can document module like that:</p>\n<pre>.. automodule:: package\n    :mockimport: twisted\n    :mocktype: protocol.Protocol\n</pre>\n<p>Where on <cite>:mockimport:</cite> will be mocked all twisted.* imports\nin automodule building context. And <cite>:mocktype:</cite> means which instances must be\nobject types to successful subclass them without loss target documentation.</p>\n<p>mockatudoc settings may be defined on conf.py and all automodule directives\nwith present <cite>:mockimport:</cite> will be mocked. Where data on mockatodoc settings\nwill be summed with <cite>:mockimport:</cite> and <cite>:mocktype:</cite> options:</p>\n<pre>mockautodoc = {\n    'mockimport': ['twisted',],\n    'mocktype': ['protocol.Protocol'],\n}\n</pre>\n</div>\n\n          </div>"}, "last_serial": 799910, "releases": {"0.0.1dev-20130331": [{"comment_text": "", "digests": {"md5": "aff6a60d46b1eeb9fc2f3e6fb7476ec7", "sha256": "a138b4d8c4a45fae1be1ff25ec95f979e7f31b10c66d4ee9352acc81db25e40e"}, "downloads": -1, "filename": "sphinxcontrib-mockautodoc-0.0.1dev-20130331.tar.gz", "has_sig": false, "md5_digest": "aff6a60d46b1eeb9fc2f3e6fb7476ec7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7487, "upload_time": "2013-03-31T10:48:01", "upload_time_iso_8601": "2013-03-31T10:48:01.127389Z", "url": "https://files.pythonhosted.org/packages/3e/19/0b6d757ecfef5544a763373a76ee5e839303cbb7000c361f5451b03f3620/sphinxcontrib-mockautodoc-0.0.1dev-20130331.tar.gz", "yanked": false}], "0.0.1dev-20130518": [{"comment_text": "", "digests": {"md5": "d715dff30c74a924b26b7228e6bfe53e", "sha256": "1822573183d1c70f3b2e846094586d8c195f6fc7d52e6286bc55f5c8694b2b98"}, "downloads": -1, "filename": "sphinxcontrib-mockautodoc-0.0.1dev-20130518.tar.gz", "has_sig": false, "md5_digest": "d715dff30c74a924b26b7228e6bfe53e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7491, "upload_time": "2013-05-18T11:51:17", "upload_time_iso_8601": "2013-05-18T11:51:17.504740Z", "url": "https://files.pythonhosted.org/packages/56/a3/59c4e10ab2b73b5127b8032fe65ca614bb82bdd16ffb2db94a01674a250d/sphinxcontrib-mockautodoc-0.0.1dev-20130518.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d715dff30c74a924b26b7228e6bfe53e", "sha256": "1822573183d1c70f3b2e846094586d8c195f6fc7d52e6286bc55f5c8694b2b98"}, "downloads": -1, "filename": "sphinxcontrib-mockautodoc-0.0.1dev-20130518.tar.gz", "has_sig": false, "md5_digest": "d715dff30c74a924b26b7228e6bfe53e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7491, "upload_time": "2013-05-18T11:51:17", "upload_time_iso_8601": "2013-05-18T11:51:17.504740Z", "url": "https://files.pythonhosted.org/packages/56/a3/59c4e10ab2b73b5127b8032fe65ca614bb82bdd16ffb2db94a01674a250d/sphinxcontrib-mockautodoc-0.0.1dev-20130518.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:14 2020"}