{"info": {"author": "Michel Le Page, Cindy Gosset, Antoine Beaumont, CESBIO", "author_email": "michel.lepage@cesbio.cnes.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools"], "description": "# mET_weap\n\nTrough the ANR Amethyst project, a python package has been developed to process MODIS-NDVI and Meteo ERA5 long time series to produce the input data for WEAP 21.\n\n## Documentation\n\n- Read the documentation \"mET_weap Installation Procedure & User guide\"\n\n## Quick Installation of mET weap\n\nFor more informations, refer to the documentation \"mET_weap Installation Procedure & User guide\".\n\n### Requirements\n\n1) Download mET_weap on PyPI or on GitHub\n2) Copy/paste the test file \u201cmET_weap_test\u201d on your computer\n3) Subscription to earth data\n4) Subscription to the CDS (Climate Data Store)\n5) OSGeo4w installation\n6) Create an environment variable for GDAL (Windows)\n7) Download required files\n8) Installation of Anaconda\n\n### Installation\n\n#### a) Users installation from local file:\n\nFor example, if the source file of the setup.py = \"C:\\Users\\VI\\Documents\\mET_weap\".\nIn the anaconda prompt, execute:\n\n```shell\n- cd \"C:\\Users\\VI\\Documents\\mET_weap\"\n```\nThen, execute:\n```shell\n- python setup.py sdist bdist_wheel\n- cd .\\dist\n- pip install mET_weap-1.3.tar.gz\n```\n\nFinally, because the installation of gdal doesn't work with install_requires in the setup.py, execute:\n```shell\n- conda install gdal\n```\n\n#### b) Users installation from the PyPI\n\nIn the anaconda prompt, execute:\n```shell\n- pip install mET_weap\n- conda install gdal\n```\n\n### Test folder\n\nRecover the \u201cmET_weap_test\u201d folder in the package downloaded on Pypi or Github.\nThis folder can be also recovered in the \u201csites-packages\u201d folder (\"C:\\Users\\VI\\Anaconda3\\Lib\\site packages\\mET_weap\" for instance) if the installation is made directly from the Pypi. \nTo begin, copy/paste this test folder \u201cmET_weap_test\u201d on your desktop. The program will be executed from this \u201cwork\u201d directory.\n\n## Configuration\n\nThe configuration is made with the userconfig.py file. This is the only file that the user has to fill in to make his project works.\n\nFirst, the path root and the path to osgeo has to be defined : \n\n```python\nmET_weap.path_root = os.path.join('C:'+os.sep+'HAOUZ'+os.sep+'mET_weap') # The root directory for output files\nmET_weap.path_to_osgeo = os.path.join('C:'+os.sep+'OSGeo4W64'+os.sep+'bin') # the path for gdal binaries\n```\n\nFor instance, in the example above, path_root = 'C:\\\\HAOUZ\\\\mET_weap' and path_to_osgeo = 'C:\\\\OSGeo4W64\\\\bin'. The path root creates the directory for the outputs.\n\nThe next part of the config file is the switchs for the modules. Before to execute the usermain, fill in \"True\" to activate and \"False\" to deactivate a module.\nFor instance, on the example below, 'do_get_modis' is the only module activated.\n\n```python\n# ---- Switchs to activate or deactivate the modules ----\n\n# Each Modis tile covers an area of 5\u00b0x5\u00b0, it may not be necessary to download it again to process another area.\n\n'do_get_modis'           : True,         # download modis files\n\n# If you already downloaded ERA5 files for your area and domain, don't do it again.\n\n'do_download_ERA5_cds'   : False,        # download weather dataset from CDS ERA5\n\n# The following toggles are processing steps,\n# Toggle the steps that already went ok to False\n\n'do_project_subset'      : False,        # projection and subset of the modis files\n'do_classification'      : False,        # yearly classification\n'do_kc_fc'               : False,        # compute Kc/Fc\n'do_ET0_rain_ERA5'       : False,        # compute daily ET0 and rainfall from ERA5\n'do_interp_ndvi_ERA5'    : False,        # temporal interpolation of NDVI and KC*ET0 with ERA5 data\n'do_synthesis_ERA5'      : False,        # spatio-temporal synthesis with ERA5 data\n```\n\nAfter the login to the server CDS API. Accept the license copernicus product. \nThen, click on your name near the logout button to retrieve your API key on your user profile. Use the format \"UID:API key\" for your CDSAPI key.\n```python\n# ----- The CDSAPI key to download ERA5 data -----\n'CDSAPI':{\n\t'url':\"https://cds.climate.copernicus.eu/api/v2\",\n\t'key':\"xxxx:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n\t},\n```\n\nNext, fill in your MODIS username and password in the the userconfig.py file.\n```python\n# ---- The MODIS login to download MODIS data ----\n'MODIS':{\n\t'username':\"xxxxxxxx\",\n\t'password':\"xxxxxxxx\"\n\t},\n```\n\nThen, the spatial domain has to be defined. Fill in the geographic coordinates of your studied area in the userconfig.py.\n```python\n# ----- the spatial domain to be processed -----\n'domain' : {\n\t\"uly\":31.7,          # Upper left Y in dd (decimal degrees)\n\t\"ulx\":-8.6,          # Upper left X in dd\n\t'lry':30.85,         # Lower right Y in dd\n\t'lrx':-7             # Lower Right X in dd\n\t},\n```\n\nAfter, the scales are defined. Normally, the user doesn't need to change these values.\n```python\n'scale' : {\n\t\"echelle\" : 0.25,\n\t\"resolution_ERA5\": 0.25            \n\t},\n```\n\nChoose your temporal domain. For instance, from September 2015 to September 2016 in the example above.\n```python\n# -----  the temporal domain to be processed -----\n'period'  : {\n\t'begin': datetime(2015, 9, 1),       # the date of beginning as a datetime (yyyy,m,j)\n\t'end': datetime(2016, 8, 30)         # the date of ending as a datetime (yyyy,m,j)\n\t},\n```\n\nDefine the agronomic year:\n```python\n# -----  definition of the agronomic year with the beginning month and ending month -----\n'agroyear'  : {\n\t'begin': 9,           # generally the agronomic year begins in september (9)\n\t'end': 8              # generally the agronomic year begins in august of the next year (8)\n\t},\n```\n\nThe next part allows to choose the functions use to compute the Kc and Fc factors.\n```python\n# -----  Kc and Fc to NDVI relationships -----\n'Relation_NDVI': {\n\t'scale_factor' : 0.0001,                                            # A scale factor to apply to NDVI data, typically 0.001 for MODIS\n\t'Ndvi_KcKcb' : os.path.join('Tab_ndvi_kc_fc', 'ndvi_kckcb.xlsx'),   # the XLS file for relations NDVI->Kc (Crop Coefficient)\n\t'Ndvi_Fc' : os.path.join('Tab_ndvi_kc_fc', 'NDVI-FC.xlsx'),         # the XLS file for relations NDVI->Fc (Fraction Cover)\n\t'do_senescence' : True,                                             # Optional: To compute or not the fraction cover plateau for annual crops. The computation is time consuming\n\t'do_stack':False,                                                   # Optional: To output or not annual stacks. Those stacks may be useful for data vizualisation\n\n\t# rel OS is the table of relations between NDVI/Kcb and NDVI/Fraction covers\n\t# the syntax is: 'class_name' : [output_value, line of xls file for Kcb, line of xls file for Fc]\n\t# None if Kc is not computed for a particular class\n\n\t'rel_OS' : {\n\t\t'No_data' : [0, None, None],\n\t\t'Advent'  : [2, None, None],\n\t\t'Arb_Veg' : [3,    6,    5],\n\t\t'Arb_SN'  : [4,    0,    5],\n\t\t'C_Anu'   : [5,    6,    0],\n\t\t'Sol_Nu'  : [8, None, None]\n\t\t}\n\t},\n```\n\nThis module allows to configure the link between the shapefile of the studied area and the synthesis module.\nThis shapefile has to be in the mET_weap directory. \nFor his project, the user need to fill in the name of his shapefile in ['Synth']['shapefile'].\nIn the test file, on the example above, 'shapefile' : 'zonage\\\\Atlas_Piemont_Haouz.shp'. \nIn 'shp_attrib', fill in the column name of the attribute table. In the example 'c_zone_irr'.\nFinally, define the 'timerange' and the 'mode'.\n```python\n# -----  Synthesis -----\n'Synth': {\n\t'shapefile' : os.path.join('zonage'+os.sep+'Atlas_Piemont_Haouz.shp'),\n\t'shp_attrib' : 'c_zone_irr',    # column name of the attribute table\n\t'timerange' : \"MONTH\",\t\t# an accumulation time which is either DAY, WEEK or MONTH\n\t'mode' : \"SUM\",\t\t\t# MEAN or SUM\n},\n```\n\nNormally, the paths don't need to be changed because the directory Gtopo30 is located in the mET_weap_test directory. \n'geopotential_cdsapi.nc' is downloaded in 'C:\\\\HAOUZ'\n```python\n# -----  The path for the DEM input file -----\n'DEM': {\n\t'Description':'GTOPO30',\n\t'DEM_Filename': os.path.join('Gtopo30', 'gt30w020n40.tif'),\n\t'ERA_Filename_CDSAPI': os.path.join(''.join(os.path.split(mET_weap.path_root)[0]), 'geopotential_cdsapi.nc')\n},\n```\n\nThese paths define the outputs directory. They are all base on the path_root. Normally, the user doesn't need to change them.\n```python\n# ----- The paths of the output files -----\n'path': {\n\t'Temp_ERA5': os.path.join(''.join(mET_weap.path_root), \"fishnet_era5\"),                  # directory for temporary data\n\n\t'Data' : os.path.join(''.join(mET_weap.path_root), \"data\"),                              # the root directory to download data\n\t'MOD13Q1': os.path.join(''.join(mET_weap.path_root), \"data\"+os.sep+ \"MOD13Q1\"),          # the directory for downloading MODIS MOD13Q1\n\t'ERA5': os.path.join(''.join(mET_weap.path_root), os.path.join(\"data\", \"ERA5\")),         # the directory to download ERA5 data\n\n\t'Tif' : os.path.join(''.join(mET_weap.path_root), \"tif\"),                                # the root directory for output data\n\t'MOD13Q1_tif': os.path.join(''.join(mET_weap.path_root), \"tif\"+os.sep+\"MOD13Q1\"),        # the  directory for NDVI Subsets\n\t'ERA5_tif': os.path.join(''.join(mET_weap.path_root), \"tif\"+os.sep+\"ERA5\"),              # the  directory for ERA5 processed input files\n\n\t'outputs_ERA5': os.path.join(''.join(mET_weap.path_root), \"tif\"+os.sep+\"outputs_ERA5\"),  # The directory for results used for synthesis ERA5\n\n\t'synthesis_ERA5': os.path.join(''.join(mET_weap.path_root), \"synthesis_ERA5\")            # The directory for synthesized results based on ERA5 meteorological data\n},\n```\n\n## License\n\nmET_weap uses the GPLv3 license. Copyright (C) 2014-2018 Michel Le Page. For more information see COPYING.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mET-weap", "package_url": "https://pypi.org/project/mET-weap/", "platform": "", "project_url": "https://pypi.org/project/mET-weap/", "project_urls": null, "release_url": "https://pypi.org/project/mET-weap/1.3/", "requires_dist": ["numpy (>=\"1.11.3\")", "pillow (>=\"3.4.2\")", "xlrd (>=\"1.0.0\")", "scipy (>=\"0.19.1\")", "ecmwf-api-client (>=\"1.4.2\")", "requests (>=\"2.14.2\")", "python-dateutil (>=\"2.4\")", "cdsapi (>=\"0.1.1\")", "netCDF4 (>=\"1.4.1\")"], "requires_python": "", "summary": "ERA5/MODIS Preprocessor for WEAP 21", "version": "1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mET_weap</h1>\n<p>Trough the ANR Amethyst project, a python package has been developed to process MODIS-NDVI and Meteo ERA5 long time series to produce the input data for WEAP 21.</p>\n<h2>Documentation</h2>\n<ul>\n<li>Read the documentation \"mET_weap Installation Procedure &amp; User guide\"</li>\n</ul>\n<h2>Quick Installation of mET weap</h2>\n<p>For more informations, refer to the documentation \"mET_weap Installation Procedure &amp; User guide\".</p>\n<h3>Requirements</h3>\n<ol>\n<li>Download mET_weap on PyPI or on GitHub</li>\n<li>Copy/paste the test file \u201cmET_weap_test\u201d on your computer</li>\n<li>Subscription to earth data</li>\n<li>Subscription to the CDS (Climate Data Store)</li>\n<li>OSGeo4w installation</li>\n<li>Create an environment variable for GDAL (Windows)</li>\n<li>Download required files</li>\n<li>Installation of Anaconda</li>\n</ol>\n<h3>Installation</h3>\n<h4>a) Users installation from local file:</h4>\n<p>For example, if the source file of the setup.py = \"C:\\Users\\VI\\Documents\\mET_weap\".\nIn the anaconda prompt, execute:</p>\n<pre>- <span class=\"nb\">cd</span> <span class=\"s2\">\"C:\\Users\\VI\\Documents\\mET_weap\"</span>\n</pre>\n<p>Then, execute:</p>\n<pre>- python setup.py sdist bdist_wheel\n- <span class=\"nb\">cd</span> .<span class=\"se\">\\d</span>ist\n- pip install mET_weap-1.3.tar.gz\n</pre>\n<p>Finally, because the installation of gdal doesn't work with install_requires in the setup.py, execute:</p>\n<pre>- conda install gdal\n</pre>\n<h4>b) Users installation from the PyPI</h4>\n<p>In the anaconda prompt, execute:</p>\n<pre>- pip install mET_weap\n- conda install gdal\n</pre>\n<h3>Test folder</h3>\n<p>Recover the \u201cmET_weap_test\u201d folder in the package downloaded on Pypi or Github.\nThis folder can be also recovered in the \u201csites-packages\u201d folder (\"C:\\Users\\VI\\Anaconda3\\Lib\\site packages\\mET_weap\" for instance) if the installation is made directly from the Pypi.\nTo begin, copy/paste this test folder \u201cmET_weap_test\u201d on your desktop. The program will be executed from this \u201cwork\u201d directory.</p>\n<h2>Configuration</h2>\n<p>The configuration is made with the userconfig.py file. This is the only file that the user has to fill in to make his project works.</p>\n<p>First, the path root and the path to osgeo has to be defined :</p>\n<pre><span class=\"n\">mET_weap</span><span class=\"o\">.</span><span class=\"n\">path_root</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'C:'</span><span class=\"o\">+</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"o\">+</span><span class=\"s1\">'HAOUZ'</span><span class=\"o\">+</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"o\">+</span><span class=\"s1\">'mET_weap'</span><span class=\"p\">)</span> <span class=\"c1\"># The root directory for output files</span>\n<span class=\"n\">mET_weap</span><span class=\"o\">.</span><span class=\"n\">path_to_osgeo</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'C:'</span><span class=\"o\">+</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"o\">+</span><span class=\"s1\">'OSGeo4W64'</span><span class=\"o\">+</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"o\">+</span><span class=\"s1\">'bin'</span><span class=\"p\">)</span> <span class=\"c1\"># the path for gdal binaries</span>\n</pre>\n<p>For instance, in the example above, path_root = 'C:\\HAOUZ\\mET_weap' and path_to_osgeo = 'C:\\OSGeo4W64\\bin'. The path root creates the directory for the outputs.</p>\n<p>The next part of the config file is the switchs for the modules. Before to execute the usermain, fill in \"True\" to activate and \"False\" to deactivate a module.\nFor instance, on the example below, 'do_get_modis' is the only module activated.</p>\n<pre><span class=\"c1\"># ---- Switchs to activate or deactivate the modules ----</span>\n\n<span class=\"c1\"># Each Modis tile covers an area of 5\u00b0x5\u00b0, it may not be necessary to download it again to process another area.</span>\n\n<span class=\"s1\">'do_get_modis'</span>           <span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>         <span class=\"c1\"># download modis files</span>\n\n<span class=\"c1\"># If you already downloaded ERA5 files for your area and domain, don't do it again.</span>\n\n<span class=\"s1\">'do_download_ERA5_cds'</span>   <span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>        <span class=\"c1\"># download weather dataset from CDS ERA5</span>\n\n<span class=\"c1\"># The following toggles are processing steps,</span>\n<span class=\"c1\"># Toggle the steps that already went ok to False</span>\n\n<span class=\"s1\">'do_project_subset'</span>      <span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>        <span class=\"c1\"># projection and subset of the modis files</span>\n<span class=\"s1\">'do_classification'</span>      <span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>        <span class=\"c1\"># yearly classification</span>\n<span class=\"s1\">'do_kc_fc'</span>               <span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>        <span class=\"c1\"># compute Kc/Fc</span>\n<span class=\"s1\">'do_ET0_rain_ERA5'</span>       <span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>        <span class=\"c1\"># compute daily ET0 and rainfall from ERA5</span>\n<span class=\"s1\">'do_interp_ndvi_ERA5'</span>    <span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>        <span class=\"c1\"># temporal interpolation of NDVI and KC*ET0 with ERA5 data</span>\n<span class=\"s1\">'do_synthesis_ERA5'</span>      <span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>        <span class=\"c1\"># spatio-temporal synthesis with ERA5 data</span>\n</pre>\n<p>After the login to the server CDS API. Accept the license copernicus product.\nThen, click on your name near the logout button to retrieve your API key on your user profile. Use the format \"UID:API key\" for your CDSAPI key.</p>\n<pre><span class=\"c1\"># ----- The CDSAPI key to download ERA5 data -----</span>\n<span class=\"s1\">'CDSAPI'</span><span class=\"p\">:{</span>\n\t<span class=\"s1\">'url'</span><span class=\"p\">:</span><span class=\"s2\">\"https://cds.climate.copernicus.eu/api/v2\"</span><span class=\"p\">,</span>\n\t<span class=\"s1\">'key'</span><span class=\"p\">:</span><span class=\"s2\">\"xxxx:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"</span><span class=\"p\">,</span>\n\t<span class=\"p\">},</span>\n</pre>\n<p>Next, fill in your MODIS username and password in the the userconfig.py file.</p>\n<pre><span class=\"c1\"># ---- The MODIS login to download MODIS data ----</span>\n<span class=\"s1\">'MODIS'</span><span class=\"p\">:{</span>\n\t<span class=\"s1\">'username'</span><span class=\"p\">:</span><span class=\"s2\">\"xxxxxxxx\"</span><span class=\"p\">,</span>\n\t<span class=\"s1\">'password'</span><span class=\"p\">:</span><span class=\"s2\">\"xxxxxxxx\"</span>\n\t<span class=\"p\">},</span>\n</pre>\n<p>Then, the spatial domain has to be defined. Fill in the geographic coordinates of your studied area in the userconfig.py.</p>\n<pre><span class=\"c1\"># ----- the spatial domain to be processed -----</span>\n<span class=\"s1\">'domain'</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n\t<span class=\"s2\">\"uly\"</span><span class=\"p\">:</span><span class=\"mf\">31.7</span><span class=\"p\">,</span>          <span class=\"c1\"># Upper left Y in dd (decimal degrees)</span>\n\t<span class=\"s2\">\"ulx\"</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mf\">8.6</span><span class=\"p\">,</span>          <span class=\"c1\"># Upper left X in dd</span>\n\t<span class=\"s1\">'lry'</span><span class=\"p\">:</span><span class=\"mf\">30.85</span><span class=\"p\">,</span>         <span class=\"c1\"># Lower right Y in dd</span>\n\t<span class=\"s1\">'lrx'</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">7</span>             <span class=\"c1\"># Lower Right X in dd</span>\n\t<span class=\"p\">},</span>\n</pre>\n<p>After, the scales are defined. Normally, the user doesn't need to change these values.</p>\n<pre><span class=\"s1\">'scale'</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n\t<span class=\"s2\">\"echelle\"</span> <span class=\"p\">:</span> <span class=\"mf\">0.25</span><span class=\"p\">,</span>\n\t<span class=\"s2\">\"resolution_ERA5\"</span><span class=\"p\">:</span> <span class=\"mf\">0.25</span>            \n\t<span class=\"p\">},</span>\n</pre>\n<p>Choose your temporal domain. For instance, from September 2015 to September 2016 in the example above.</p>\n<pre><span class=\"c1\"># -----  the temporal domain to be processed -----</span>\n<span class=\"s1\">'period'</span>  <span class=\"p\">:</span> <span class=\"p\">{</span>\n\t<span class=\"s1\">'begin'</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>       <span class=\"c1\"># the date of beginning as a datetime (yyyy,m,j)</span>\n\t<span class=\"s1\">'end'</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">)</span>         <span class=\"c1\"># the date of ending as a datetime (yyyy,m,j)</span>\n\t<span class=\"p\">},</span>\n</pre>\n<p>Define the agronomic year:</p>\n<pre><span class=\"c1\"># -----  definition of the agronomic year with the beginning month and ending month -----</span>\n<span class=\"s1\">'agroyear'</span>  <span class=\"p\">:</span> <span class=\"p\">{</span>\n\t<span class=\"s1\">'begin'</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span>           <span class=\"c1\"># generally the agronomic year begins in september (9)</span>\n\t<span class=\"s1\">'end'</span><span class=\"p\">:</span> <span class=\"mi\">8</span>              <span class=\"c1\"># generally the agronomic year begins in august of the next year (8)</span>\n\t<span class=\"p\">},</span>\n</pre>\n<p>The next part allows to choose the functions use to compute the Kc and Fc factors.</p>\n<pre><span class=\"c1\"># -----  Kc and Fc to NDVI relationships -----</span>\n<span class=\"s1\">'Relation_NDVI'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\t<span class=\"s1\">'scale_factor'</span> <span class=\"p\">:</span> <span class=\"mf\">0.0001</span><span class=\"p\">,</span>                                            <span class=\"c1\"># A scale factor to apply to NDVI data, typically 0.001 for MODIS</span>\n\t<span class=\"s1\">'Ndvi_KcKcb'</span> <span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'Tab_ndvi_kc_fc'</span><span class=\"p\">,</span> <span class=\"s1\">'ndvi_kckcb.xlsx'</span><span class=\"p\">),</span>   <span class=\"c1\"># the XLS file for relations NDVI-&gt;Kc (Crop Coefficient)</span>\n\t<span class=\"s1\">'Ndvi_Fc'</span> <span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'Tab_ndvi_kc_fc'</span><span class=\"p\">,</span> <span class=\"s1\">'NDVI-FC.xlsx'</span><span class=\"p\">),</span>         <span class=\"c1\"># the XLS file for relations NDVI-&gt;Fc (Fraction Cover)</span>\n\t<span class=\"s1\">'do_senescence'</span> <span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>                                             <span class=\"c1\"># Optional: To compute or not the fraction cover plateau for annual crops. The computation is time consuming</span>\n\t<span class=\"s1\">'do_stack'</span><span class=\"p\">:</span><span class=\"kc\">False</span><span class=\"p\">,</span>                                                   <span class=\"c1\"># Optional: To output or not annual stacks. Those stacks may be useful for data vizualisation</span>\n\n\t<span class=\"c1\"># rel OS is the table of relations between NDVI/Kcb and NDVI/Fraction covers</span>\n\t<span class=\"c1\"># the syntax is: 'class_name' : [output_value, line of xls file for Kcb, line of xls file for Fc]</span>\n\t<span class=\"c1\"># None if Kc is not computed for a particular class</span>\n\n\t<span class=\"s1\">'rel_OS'</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n\t\t<span class=\"s1\">'No_data'</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">],</span>\n\t\t<span class=\"s1\">'Advent'</span>  <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">],</span>\n\t\t<span class=\"s1\">'Arb_Veg'</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span>    <span class=\"mi\">6</span><span class=\"p\">,</span>    <span class=\"mi\">5</span><span class=\"p\">],</span>\n\t\t<span class=\"s1\">'Arb_SN'</span>  <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span>    <span class=\"mi\">0</span><span class=\"p\">,</span>    <span class=\"mi\">5</span><span class=\"p\">],</span>\n\t\t<span class=\"s1\">'C_Anu'</span>   <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span>    <span class=\"mi\">6</span><span class=\"p\">,</span>    <span class=\"mi\">0</span><span class=\"p\">],</span>\n\t\t<span class=\"s1\">'Sol_Nu'</span>  <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n\t\t<span class=\"p\">}</span>\n\t<span class=\"p\">},</span>\n</pre>\n<p>This module allows to configure the link between the shapefile of the studied area and the synthesis module.\nThis shapefile has to be in the mET_weap directory.\nFor his project, the user need to fill in the name of his shapefile in ['Synth']['shapefile'].\nIn the test file, on the example above, 'shapefile' : 'zonage\\Atlas_Piemont_Haouz.shp'.\nIn 'shp_attrib', fill in the column name of the attribute table. In the example 'c_zone_irr'.\nFinally, define the 'timerange' and the 'mode'.</p>\n<pre><span class=\"c1\"># -----  Synthesis -----</span>\n<span class=\"s1\">'Synth'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\t<span class=\"s1\">'shapefile'</span> <span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'zonage'</span><span class=\"o\">+</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"o\">+</span><span class=\"s1\">'Atlas_Piemont_Haouz.shp'</span><span class=\"p\">),</span>\n\t<span class=\"s1\">'shp_attrib'</span> <span class=\"p\">:</span> <span class=\"s1\">'c_zone_irr'</span><span class=\"p\">,</span>    <span class=\"c1\"># column name of the attribute table</span>\n\t<span class=\"s1\">'timerange'</span> <span class=\"p\">:</span> <span class=\"s2\">\"MONTH\"</span><span class=\"p\">,</span>\t\t<span class=\"c1\"># an accumulation time which is either DAY, WEEK or MONTH</span>\n\t<span class=\"s1\">'mode'</span> <span class=\"p\">:</span> <span class=\"s2\">\"SUM\"</span><span class=\"p\">,</span>\t\t\t<span class=\"c1\"># MEAN or SUM</span>\n<span class=\"p\">},</span>\n</pre>\n<p>Normally, the paths don't need to be changed because the directory Gtopo30 is located in the mET_weap_test directory.\n'geopotential_cdsapi.nc' is downloaded in 'C:\\HAOUZ'</p>\n<pre><span class=\"c1\"># -----  The path for the DEM input file -----</span>\n<span class=\"s1\">'DEM'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\t<span class=\"s1\">'Description'</span><span class=\"p\">:</span><span class=\"s1\">'GTOPO30'</span><span class=\"p\">,</span>\n\t<span class=\"s1\">'DEM_Filename'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'Gtopo30'</span><span class=\"p\">,</span> <span class=\"s1\">'gt30w020n40.tif'</span><span class=\"p\">),</span>\n\t<span class=\"s1\">'ERA_Filename_CDSAPI'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">mET_weap</span><span class=\"o\">.</span><span class=\"n\">path_root</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"s1\">'geopotential_cdsapi.nc'</span><span class=\"p\">)</span>\n<span class=\"p\">},</span>\n</pre>\n<p>These paths define the outputs directory. They are all base on the path_root. Normally, the user doesn't need to change them.</p>\n<pre><span class=\"c1\"># ----- The paths of the output files -----</span>\n<span class=\"s1\">'path'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\t<span class=\"s1\">'Temp_ERA5'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">mET_weap</span><span class=\"o\">.</span><span class=\"n\">path_root</span><span class=\"p\">),</span> <span class=\"s2\">\"fishnet_era5\"</span><span class=\"p\">),</span>                  <span class=\"c1\"># directory for temporary data</span>\n\n\t<span class=\"s1\">'Data'</span> <span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">mET_weap</span><span class=\"o\">.</span><span class=\"n\">path_root</span><span class=\"p\">),</span> <span class=\"s2\">\"data\"</span><span class=\"p\">),</span>                              <span class=\"c1\"># the root directory to download data</span>\n\t<span class=\"s1\">'MOD13Q1'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">mET_weap</span><span class=\"o\">.</span><span class=\"n\">path_root</span><span class=\"p\">),</span> <span class=\"s2\">\"data\"</span><span class=\"o\">+</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"o\">+</span> <span class=\"s2\">\"MOD13Q1\"</span><span class=\"p\">),</span>          <span class=\"c1\"># the directory for downloading MODIS MOD13Q1</span>\n\t<span class=\"s1\">'ERA5'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">mET_weap</span><span class=\"o\">.</span><span class=\"n\">path_root</span><span class=\"p\">),</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s2\">\"data\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ERA5\"</span><span class=\"p\">)),</span>         <span class=\"c1\"># the directory to download ERA5 data</span>\n\n\t<span class=\"s1\">'Tif'</span> <span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">mET_weap</span><span class=\"o\">.</span><span class=\"n\">path_root</span><span class=\"p\">),</span> <span class=\"s2\">\"tif\"</span><span class=\"p\">),</span>                                <span class=\"c1\"># the root directory for output data</span>\n\t<span class=\"s1\">'MOD13Q1_tif'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">mET_weap</span><span class=\"o\">.</span><span class=\"n\">path_root</span><span class=\"p\">),</span> <span class=\"s2\">\"tif\"</span><span class=\"o\">+</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"o\">+</span><span class=\"s2\">\"MOD13Q1\"</span><span class=\"p\">),</span>        <span class=\"c1\"># the  directory for NDVI Subsets</span>\n\t<span class=\"s1\">'ERA5_tif'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">mET_weap</span><span class=\"o\">.</span><span class=\"n\">path_root</span><span class=\"p\">),</span> <span class=\"s2\">\"tif\"</span><span class=\"o\">+</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"o\">+</span><span class=\"s2\">\"ERA5\"</span><span class=\"p\">),</span>              <span class=\"c1\"># the  directory for ERA5 processed input files</span>\n\n\t<span class=\"s1\">'outputs_ERA5'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">mET_weap</span><span class=\"o\">.</span><span class=\"n\">path_root</span><span class=\"p\">),</span> <span class=\"s2\">\"tif\"</span><span class=\"o\">+</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"o\">+</span><span class=\"s2\">\"outputs_ERA5\"</span><span class=\"p\">),</span>  <span class=\"c1\"># The directory for results used for synthesis ERA5</span>\n\n\t<span class=\"s1\">'synthesis_ERA5'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">mET_weap</span><span class=\"o\">.</span><span class=\"n\">path_root</span><span class=\"p\">),</span> <span class=\"s2\">\"synthesis_ERA5\"</span><span class=\"p\">)</span>            <span class=\"c1\"># The directory for synthesized results based on ERA5 meteorological data</span>\n<span class=\"p\">},</span>\n</pre>\n<h2>License</h2>\n<p>mET_weap uses the GPLv3 license. Copyright (C) 2014-2018 Michel Le Page. For more information see COPYING.</p>\n\n          </div>"}, "last_serial": 4972378, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "2c1ad92d31cb01565aa5c79da5c3455c", "sha256": "aff0f10af46a24dd45221aa1bd38af1daf989a85944ae3c559a350822c95e26a"}, "downloads": -1, "filename": "mET_weap-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2c1ad92d31cb01565aa5c79da5c3455c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1226674, "upload_time": "2019-03-08T11:02:27", "upload_time_iso_8601": "2019-03-08T11:02:27.142230Z", "url": "https://files.pythonhosted.org/packages/4a/4a/49ade6f5f849272723c208eba8d1b9bd9e0008165af491939ec13534ce17/mET_weap-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96e338f5604be64d8ce2c37f6981ba80", "sha256": "1b12c8344e31b442e32d82883b03cc45c4623dc4d9cfe8cfb70b532f9da2ef48"}, "downloads": -1, "filename": "mET_weap-1.0.tar.gz", "has_sig": false, "md5_digest": "96e338f5604be64d8ce2c37f6981ba80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1217471, "upload_time": "2019-03-08T11:02:30", "upload_time_iso_8601": "2019-03-08T11:02:30.843879Z", "url": "https://files.pythonhosted.org/packages/1a/f8/511813c8fd41e25339d29ae9bb1196a1f00cff4ede72dc407437a807f89e/mET_weap-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "099c9a881ca4eebf1f24c97315b73613", "sha256": "57ff01784277a58bb150304f4f0293f4a86dd8e45504ba1a3de9dadabffc722f"}, "downloads": -1, "filename": "mET_weap-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "099c9a881ca4eebf1f24c97315b73613", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1226673, "upload_time": "2019-03-08T15:26:46", "upload_time_iso_8601": "2019-03-08T15:26:46.196526Z", "url": "https://files.pythonhosted.org/packages/77/41/087d48fb772a1998e480a0befb80a7928c55cd191ef8f3c2364632daa5aa/mET_weap-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e88f04b3d58867af7e85a1ff97c00ed", "sha256": "03cfbe4488d6f974ebf8255c623e567235b621aaeea0e4c3441d1848d6399100"}, "downloads": -1, "filename": "mET_weap-1.1.tar.gz", "has_sig": false, "md5_digest": "4e88f04b3d58867af7e85a1ff97c00ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1217473, "upload_time": "2019-03-08T15:26:56", "upload_time_iso_8601": "2019-03-08T15:26:56.693643Z", "url": "https://files.pythonhosted.org/packages/23/2b/50816ecb82254d6652970aceb7baca6f5b46877ec79c2a457b7a8bbc8eab/mET_weap-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "25695816b970557553a4f3164c4cebf2", "sha256": "9a5142beb16a2b2a7b411182e17d69682345ef202a97225e99214e887c7cbc22"}, "downloads": -1, "filename": "mET_weap-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "25695816b970557553a4f3164c4cebf2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1226690, "upload_time": "2019-03-12T16:56:46", "upload_time_iso_8601": "2019-03-12T16:56:46.507010Z", "url": "https://files.pythonhosted.org/packages/90/7e/f9d6728293d917143115262d72d16970fddf460a2875f85b46d1934123c6/mET_weap-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c3fbd7a7065e5f16ce40f5b99ae111c", "sha256": "df8b3695b6cdcb50a3bbb633a92f8b525c22cbe9cc264b5c83da2f055d396ea9"}, "downloads": -1, "filename": "mET_weap-1.2.tar.gz", "has_sig": false, "md5_digest": "7c3fbd7a7065e5f16ce40f5b99ae111c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1217488, "upload_time": "2019-03-12T16:56:50", "upload_time_iso_8601": "2019-03-12T16:56:50.842400Z", "url": "https://files.pythonhosted.org/packages/14/f0/c2d94f8c29ae5eb92b362e551b02640c7dec207d7e0f58fc1d7b99d2c310/mET_weap-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "9eb2a968fee43ae34169a23f77ca59ff", "sha256": "5fd0b7a3a5473bb1e3c8aa6d203e922cbe42e8f5dce59ade6eba4504a7d99f63"}, "downloads": -1, "filename": "mET_weap-1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9eb2a968fee43ae34169a23f77ca59ff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1226818, "upload_time": "2019-03-22T10:52:22", "upload_time_iso_8601": "2019-03-22T10:52:22.856095Z", "url": "https://files.pythonhosted.org/packages/89/58/52c3f9304acb6c0d7e01b9861f531c2b3fcdc63b898d46a6d972a9b692e8/mET_weap-1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efbf5a273d348e1c81de4e33e7124118", "sha256": "65c0967c497ae179c01704f6d4c4c6070197e16537c8673b9c1d94004cb8f4ed"}, "downloads": -1, "filename": "mET_weap-1.3.tar.gz", "has_sig": false, "md5_digest": "efbf5a273d348e1c81de4e33e7124118", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1217585, "upload_time": "2019-03-22T10:52:27", "upload_time_iso_8601": "2019-03-22T10:52:27.000493Z", "url": "https://files.pythonhosted.org/packages/42/2f/14295d680d486491ee5d37c7fefcb728f7b5c0419e7e047077fc85f6acfe/mET_weap-1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9eb2a968fee43ae34169a23f77ca59ff", "sha256": "5fd0b7a3a5473bb1e3c8aa6d203e922cbe42e8f5dce59ade6eba4504a7d99f63"}, "downloads": -1, "filename": "mET_weap-1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9eb2a968fee43ae34169a23f77ca59ff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1226818, "upload_time": "2019-03-22T10:52:22", "upload_time_iso_8601": "2019-03-22T10:52:22.856095Z", "url": "https://files.pythonhosted.org/packages/89/58/52c3f9304acb6c0d7e01b9861f531c2b3fcdc63b898d46a6d972a9b692e8/mET_weap-1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efbf5a273d348e1c81de4e33e7124118", "sha256": "65c0967c497ae179c01704f6d4c4c6070197e16537c8673b9c1d94004cb8f4ed"}, "downloads": -1, "filename": "mET_weap-1.3.tar.gz", "has_sig": false, "md5_digest": "efbf5a273d348e1c81de4e33e7124118", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1217585, "upload_time": "2019-03-22T10:52:27", "upload_time_iso_8601": "2019-03-22T10:52:27.000493Z", "url": "https://files.pythonhosted.org/packages/42/2f/14295d680d486491ee5d37c7fefcb728f7b5c0419e7e047077fc85f6acfe/mET_weap-1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:36 2020"}