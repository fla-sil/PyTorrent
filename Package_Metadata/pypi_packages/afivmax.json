{"info": {"author": "sunao", "author_email": "sunao_0626@hotmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "# afivmax\n\n[![Build Status](https://travis-ci.com/eggachecat/afivmax.svg?branch=master)](https://travis-ci.com/eggachecat/afivmax)\n[![PyPI version](https://badge.fury.io/py/afivmax.svg)](https://badge.fury.io/py/afivmax)\n[![Coverage Status](https://coveralls.io/repos/github/eggachecat/afivmax/badge.svg?branch=master&kill_cache=1)](https://coveralls.io/github/eggachecat/afivmax?branch=master)\n[![Documentation Status](https://readthedocs.org/projects/afivmax/badge/?version=latest)](https://afivmax.readthedocs.io/en/latest/?badge=latest)\n\n# \u5b89\u88c5\n```pip install afivmax```\n\n# \u4f7f\u7528\n```python\nfrom afivmax.afivmax import afiv_max\n# args\nassert 3 == afiv_max(1, 2, 3)\nassert 3 == afiv_max(3, 3, 3)\n\n\n# args with key\nassert 3 ==afiv_max(1, 2, 3, key=lambda x: x ** 2)\nclass TmpClass:\n    def __init__(self, x):\n        self.val = x\nassert 9 == afiv_max(*[TmpClass(x) for x in range(10)], key=lambda x: x.val).val\n\n\n# iterables\nassert 3 == afiv_max([1, 2, 3])\nassert 3 == afiv_max([3, 2, 1])\nassert 3 == afiv_max([3])\n\n# iterables with keys\nassert 3 == afiv_max([1, 2, 3], key=lambda x: x ** 2)\nassert 9 == afiv_max([TmpClass(x) for x in range(10)], key=lambda x: x.val).val\n\n# iterables with default\nassert 10 == afiv_max([], default=10), \"iterable with default only\"\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eggachecat/afivmax", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "afivmax", "package_url": "https://pypi.org/project/afivmax/", "platform": "", "project_url": "https://pypi.org/project/afivmax/", "project_urls": {"Homepage": "https://github.com/eggachecat/afivmax"}, "release_url": "https://pypi.org/project/afivmax/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "Interview problem of Ant Fin", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>afivmax</h1>\n<p><a href=\"https://travis-ci.com/eggachecat/afivmax\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35b2481bca9951692fb08e84e698407f5e81c3c5/68747470733a2f2f7472617669732d63692e636f6d2f656767616368656361742f616669766d61782e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/afivmax\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ab11e9f6e5d04eae622d5b49f9a4c48e69b947c3/68747470733a2f2f62616467652e667572792e696f2f70792f616669766d61782e737667\"></a>\n<a href=\"https://coveralls.io/github/eggachecat/afivmax?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f184928ed7a7683cdccd6e5f83ff55385fa2d40f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f656767616368656361742f616669766d61782f62616467652e7376673f6272616e63683d6d6173746572266b696c6c5f63616368653d31\"></a>\n<a href=\"https://afivmax.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a43d0ff4e71c37281de724c1ed976387f86fc267/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f616669766d61782f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<h1>\u5b89\u88c5</h1>\n<p><code>pip install afivmax</code></p>\n<h1>\u4f7f\u7528</h1>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">afivmax.afivmax</span> <span class=\"kn\">import</span> <span class=\"n\">afiv_max</span>\n<span class=\"c1\"># args</span>\n<span class=\"k\">assert</span> <span class=\"mi\">3</span> <span class=\"o\">==</span> <span class=\"n\">afiv_max</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"mi\">3</span> <span class=\"o\">==</span> <span class=\"n\">afiv_max</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># args with key</span>\n<span class=\"k\">assert</span> <span class=\"mi\">3</span> <span class=\"o\">==</span><span class=\"n\">afiv_max</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">TmpClass</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">x</span>\n<span class=\"k\">assert</span> <span class=\"mi\">9</span> <span class=\"o\">==</span> <span class=\"n\">afiv_max</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">[</span><span class=\"n\">TmpClass</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)],</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">val</span>\n\n\n<span class=\"c1\"># iterables</span>\n<span class=\"k\">assert</span> <span class=\"mi\">3</span> <span class=\"o\">==</span> <span class=\"n\">afiv_max</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"k\">assert</span> <span class=\"mi\">3</span> <span class=\"o\">==</span> <span class=\"n\">afiv_max</span><span class=\"p\">([</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"k\">assert</span> <span class=\"mi\">3</span> <span class=\"o\">==</span> <span class=\"n\">afiv_max</span><span class=\"p\">([</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># iterables with keys</span>\n<span class=\"k\">assert</span> <span class=\"mi\">3</span> <span class=\"o\">==</span> <span class=\"n\">afiv_max</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"mi\">9</span> <span class=\"o\">==</span> <span class=\"n\">afiv_max</span><span class=\"p\">([</span><span class=\"n\">TmpClass</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)],</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">val</span>\n\n<span class=\"c1\"># iterables with default</span>\n<span class=\"k\">assert</span> <span class=\"mi\">10</span> <span class=\"o\">==</span> <span class=\"n\">afiv_max</span><span class=\"p\">([],</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"s2\">\"iterable with default only\"</span>\n</pre>\n\n          </div>"}, "last_serial": 5457576, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "545d7a4349506f315b2ca056cd26be25", "sha256": "8edb593a73645fffd8260f1ce313945886f15f653bdef805f9a7cd58eb3ee345"}, "downloads": -1, "filename": "afivmax-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "545d7a4349506f315b2ca056cd26be25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2808, "upload_time": "2019-06-27T07:37:42", "upload_time_iso_8601": "2019-06-27T07:37:42.438219Z", "url": "https://files.pythonhosted.org/packages/ca/37/8bf735cb79e286103c0b0e54e48f821061170a5954272634a388c5a4bca9/afivmax-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c7fdab9b21416f7b2f4d9709c03b0f4", "sha256": "ee692fea1a3d51e22d68bed1722c3aa76d4f1da32ec5309448ef2518bf85bd9c"}, "downloads": -1, "filename": "afivmax-0.0.1.tar.gz", "has_sig": false, "md5_digest": "0c7fdab9b21416f7b2f4d9709c03b0f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2147, "upload_time": "2019-06-27T07:37:44", "upload_time_iso_8601": "2019-06-27T07:37:44.395557Z", "url": "https://files.pythonhosted.org/packages/64/4b/5fb824ae0088803c0ab494dc09696e365b38924e40debd86f5d5408c7f4b/afivmax-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "efa21d84f5331712cd572d8ff01bc95d", "sha256": "52d4f25af56cbc6c70ec211d200dd4a6d358b5d7e5025446be389d215cfb7c0e"}, "downloads": -1, "filename": "afivmax-0.1.0.tar.gz", "has_sig": false, "md5_digest": "efa21d84f5331712cd572d8ff01bc95d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2176, "upload_time": "2019-06-27T08:29:24", "upload_time_iso_8601": "2019-06-27T08:29:24.983674Z", "url": "https://files.pythonhosted.org/packages/73/8f/790eb439419e1a6e022c7d133d054a21363c320bf3f73721007679207d55/afivmax-0.1.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "334b143f22b2e5198dbd1e1a8f5eaea8", "sha256": "4a774d183d2be975800dd4ba739e48bb7cb88c545ea4b2e327fac5b9907efbc0"}, "downloads": -1, "filename": "afivmax-0.3.0.tar.gz", "has_sig": false, "md5_digest": "334b143f22b2e5198dbd1e1a8f5eaea8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2786, "upload_time": "2019-06-27T15:47:00", "upload_time_iso_8601": "2019-06-27T15:47:00.881201Z", "url": "https://files.pythonhosted.org/packages/91/06/1f4b5089ce6da3b740a19b665fc426f4a3e3701521b1acf5794d3fc15afd/afivmax-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "334b143f22b2e5198dbd1e1a8f5eaea8", "sha256": "4a774d183d2be975800dd4ba739e48bb7cb88c545ea4b2e327fac5b9907efbc0"}, "downloads": -1, "filename": "afivmax-0.3.0.tar.gz", "has_sig": false, "md5_digest": "334b143f22b2e5198dbd1e1a8f5eaea8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2786, "upload_time": "2019-06-27T15:47:00", "upload_time_iso_8601": "2019-06-27T15:47:00.881201Z", "url": "https://files.pythonhosted.org/packages/91/06/1f4b5089ce6da3b740a19b665fc426f4a3e3701521b1acf5794d3fc15afd/afivmax-0.3.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:22:44 2020"}