{"info": {"author": "LOGILAB S.A. (Paris, FRANCE)", "author_email": "contact@logilab.fr", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: CubicWeb", "Programming Language :: JavaScript", "Programming Language :: Python"], "description": "Summary\n-------\nCube for news storage and analysis\n\n\n\nThis cube provides an implementation of Semnews:\n\n - store news articles and tweets.\n\n - extract and synthetize information.\n\n - provide semantic useful and original visualisation.\n\n - analytics tools and datamining/machine learning processings.\n\n\n\nInstallation\n------------\n\nCreation of the instance:\n\n * Create an instance using: cubicweb-ctl create semnews <name-of-instance>\n\n * Create the instance's database using: cubicweb-ctl db-create <name-of-instance>\n\n\nAdd articles sources\n--------------------\n\nSource of articles could be created using:\n\n * Blogs/RSS feeds::\n\n     session.create_entity('CWSource', name=<name of the source>, type=u'datafeed',\n                           parser=u'rss-parser', lang=<lang of the source>,\n                           url=<url of the blog/rss feed>,\n                           config=u'synchronization-interval=120min')\n\n * Tweet::\n\n     session.create_entity('CWSource', name=<name of the source>, type=u'datafeed',\n                           parser=u'tweet-parser', lang=<lang of the source>,\n                           url=<url of the blog/rss feed>,\n                           config=u'synchronization-interval=120min')\n\n\nThe synchronization interval could be setted to a more specific value, or setted to \"no\" for manual synchronization\nonly.\n\n\nSemnews comes with some predifined blogs/tweets/rss feeds:\n\n\n * Some french political blogs. You can add them using::\n\n    cubicweb-ctl shell <name-of-instance> <path-to-cube-code-source>/migration/examples_blogs_fr.py\n\n\n * Some international english newspapers. You can add them using::\n\n    cubicweb-ctl shell <name-of-instance> <path-to-cube-code-source>/migration/examples_newspapers.py\n\n\n * Some french newspapers. You can add them using::\n\n    cubicweb-ctl shell <name-of-instance> <path-to-cube-code-source>/migration/examples_newspapers_fr.py\n\n\n * Some french politician tweets. You can add them using::\n\n    cubicweb-ctl shell <name-of-instance> <path-to-cube-code-source>/migration/examples_twitters_fr.py\n\n\n\nAdd Named Entities sources\n--------------------------\n\nSemnews is based on a named entities process, that you have to define::\n\n\n     session.create_entity('NerProcess', name=<name of process>, host=<appid or sparql endpoint url>,\n                           type=<rql or sparql>, lang=<optional lang of the ner source>,\n                           request=<request to be performed>)\n\nSee the document of the NER cube for more details.\nExample of source::\n\n     session.create_entity('NerProcess', name=u'dbpedia38-en', host=u'ner',\n                           type=u'rql', lang=u'en',\n                           request=u'Any U WHERE X label %(token)s, X cwuri U, '\n                                    'X ner_source NS, NS name \"dbpedia38-en\"')\n\n\n\n\nCommands\n--------\n\nSemnews provide to commands:\n\n * A command to extract named entities from articles::\n\n     cubicweb-ctl process-ner <name-of-instance>\n\n\n * A command to cleanup recognized entities according to some Dbpedia categories\n   (see entities/external_resources.py)::\n\n     cubicweb-ctl cleanup-ner <name-of-instance>", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.cubicweb.org/project/cubicweb-semnews", "keywords": null, "license": "LGPL", "maintainer": null, "maintainer_email": null, "name": "cubicweb-semnews", "package_url": "https://pypi.org/project/cubicweb-semnews/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cubicweb-semnews/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.cubicweb.org/project/cubicweb-semnews"}, "release_url": "https://pypi.org/project/cubicweb-semnews/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Cube for news storage and analysis", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"summary\">\n<h2>Summary</h2>\n<p>Cube for news storage and analysis</p>\n<p>This cube provides an implementation of Semnews:</p>\n<blockquote>\n<ul>\n<li>store news articles and tweets.</li>\n<li>extract and synthetize information.</li>\n<li>provide semantic useful and original visualisation.</li>\n<li>analytics tools and datamining/machine learning processings.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Creation of the instance:</p>\n<blockquote>\n<ul>\n<li>Create an instance using: cubicweb-ctl create semnews &lt;name-of-instance&gt;</li>\n<li>Create the instance\u2019s database using: cubicweb-ctl db-create &lt;name-of-instance&gt;</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"add-articles-sources\">\n<h2>Add articles sources</h2>\n<p>Source of articles could be created using:</p>\n<blockquote>\n<ul>\n<li><p>Blogs/RSS feeds:</p>\n<pre>session.create_entity('CWSource', name=&lt;name of the source&gt;, type=u'datafeed',\n                      parser=u'rss-parser', lang=&lt;lang of the source&gt;,\n                      url=&lt;url of the blog/rss feed&gt;,\n                      config=u'synchronization-interval=120min')\n</pre>\n</li>\n<li><p>Tweet:</p>\n<pre>session.create_entity('CWSource', name=&lt;name of the source&gt;, type=u'datafeed',\n                      parser=u'tweet-parser', lang=&lt;lang of the source&gt;,\n                      url=&lt;url of the blog/rss feed&gt;,\n                      config=u'synchronization-interval=120min')\n</pre>\n</li>\n</ul>\n</blockquote>\n<p>The synchronization interval could be setted to a more specific value, or setted to \u201cno\u201d for manual synchronization\nonly.</p>\n<p>Semnews comes with some predifined blogs/tweets/rss feeds:</p>\n<blockquote>\n<ul>\n<li><p>Some french political blogs. You can add them using:</p>\n<pre>cubicweb-ctl shell &lt;name-of-instance&gt; &lt;path-to-cube-code-source&gt;/migration/examples_blogs_fr.py\n</pre>\n</li>\n<li><p>Some international english newspapers. You can add them using:</p>\n<pre>cubicweb-ctl shell &lt;name-of-instance&gt; &lt;path-to-cube-code-source&gt;/migration/examples_newspapers.py\n</pre>\n</li>\n<li><p>Some french newspapers. You can add them using:</p>\n<pre>cubicweb-ctl shell &lt;name-of-instance&gt; &lt;path-to-cube-code-source&gt;/migration/examples_newspapers_fr.py\n</pre>\n</li>\n<li><p>Some french politician tweets. You can add them using:</p>\n<pre>cubicweb-ctl shell &lt;name-of-instance&gt; &lt;path-to-cube-code-source&gt;/migration/examples_twitters_fr.py\n</pre>\n</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"add-named-entities-sources\">\n<h2>Add Named Entities sources</h2>\n<p>Semnews is based on a named entities process, that you have to define:</p>\n<pre>session.create_entity('NerProcess', name=&lt;name of process&gt;, host=&lt;appid or sparql endpoint url&gt;,\n                      type=&lt;rql or sparql&gt;, lang=&lt;optional lang of the ner source&gt;,\n                      request=&lt;request to be performed&gt;)\n</pre>\n<p>See the document of the NER cube for more details.\nExample of source:</p>\n<pre>session.create_entity('NerProcess', name=u'dbpedia38-en', host=u'ner',\n                      type=u'rql', lang=u'en',\n                      request=u'Any U WHERE X label %(token)s, X cwuri U, '\n                               'X ner_source NS, NS name \"dbpedia38-en\"')\n</pre>\n</div>\n<div id=\"commands\">\n<h2>Commands</h2>\n<p>Semnews provide to commands:</p>\n<blockquote>\n<ul>\n<li><p>A command to extract named entities from articles:</p>\n<pre>cubicweb-ctl process-ner &lt;name-of-instance&gt;\n</pre>\n</li>\n<li><p>A command to cleanup recognized entities according to some Dbpedia categories\n(see entities/external_resources.py):</p>\n<pre>cubicweb-ctl cleanup-ner &lt;name-of-instance&gt;\n</pre>\n</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 1044234, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ba68caf6b3a8dcff1d8f829efe56b9a0", "sha256": "cf0f8966e8d84ea45f587951324b2e1d01157d1a33572e3def5e270dafa68448"}, "downloads": -1, "filename": "cubicweb-semnews-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ba68caf6b3a8dcff1d8f829efe56b9a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 148757, "upload_time": "2013-06-11T13:03:31", "upload_time_iso_8601": "2013-06-11T13:03:31.906096Z", "url": "https://files.pythonhosted.org/packages/16/c4/23eaa08f77d8fe7da370d853843c4ff0d7059501527dc80cc487afdf49c6/cubicweb-semnews-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "da4030b45f98087cd411f2de564862fe", "sha256": "6e2fc0d98cc4be03e530c1b0cb1e42b23bb1a3238610e8f073f7756f640f207c"}, "downloads": -1, "filename": "cubicweb-semnews-0.2.0.tar.gz", "has_sig": false, "md5_digest": "da4030b45f98087cd411f2de564862fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 151225, "upload_time": "2014-03-28T10:46:32", "upload_time_iso_8601": "2014-03-28T10:46:32.425295Z", "url": "https://files.pythonhosted.org/packages/a6/f2/3835295e596c255acf22754beb5d13ee32bfc8a46ac59dc1c2c7b8f36ac7/cubicweb-semnews-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "da4030b45f98087cd411f2de564862fe", "sha256": "6e2fc0d98cc4be03e530c1b0cb1e42b23bb1a3238610e8f073f7756f640f207c"}, "downloads": -1, "filename": "cubicweb-semnews-0.2.0.tar.gz", "has_sig": false, "md5_digest": "da4030b45f98087cd411f2de564862fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 151225, "upload_time": "2014-03-28T10:46:32", "upload_time_iso_8601": "2014-03-28T10:46:32.425295Z", "url": "https://files.pythonhosted.org/packages/a6/f2/3835295e596c255acf22754beb5d13ee32bfc8a46ac59dc1c2c7b8f36ac7/cubicweb-semnews-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:28 2020"}