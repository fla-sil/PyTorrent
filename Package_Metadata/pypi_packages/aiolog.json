{"info": {"author": "Imbolc", "author_email": "imbolc@imbolc.name", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: ISC License (ISCL)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3 :: Only"], "description": "aiolog\n======\nAsynchronous handlers for standard python logging library.\nCurrently telegram (requires ``aiohttp``)\nand smtp (via ``aiosmtplib``) handlers are available.\n\n\nInstallation\n------------\n::\n\n    pip install aiolog\n\nRepository: https://github.com/imbolc/aiolog\n\n\nConfiguration\n-------------\nJust use any way you prefer to configure built-in ``logging`` library, e.g.:\n\n.. code-block:: python\n\n    logging.config.dictConfig({\n        'version': 1,\n        'handlers': {\n            'telegram': {\n                # any built-in `logging.Handler` params\n                'level': 'DEBUG',\n                'class': 'aiolog.telegram.Handler',\n\n                # common `aiolog` params\n                'timeout': 10,  # 60 by default\n                'queue_size': 100,  # 1000 by default\n\n                # handler specific params\n                'token': 'your telegram bot token',\n                'chat_id': 'telegram chat id',\n            },\n            'smtp': {\n                'level': 'WARNING',\n                'class': 'aiolog.smtp.Handler',\n                'hostname': 'smtp.yandex.com',\n                'port': 465,\n                'sender': 'bot@email',\n                'recipient': 'your@email',\n                'use_tls': True,\n                'username': 'smtp username',\n                'password': 'smtp password',\n            },\n        },\n        'loggers': {\n            '': {\n                'handlers': [\n                    'telegram',\n                    'smtp',\n                ],\n                'level': 'DEBUG',\n            },\n        }\n    })\n\n\nUsage\n-----\nYou can use built-in ``logging`` library as usual,\njust add starting and stopping of ``aiolog``.\n\n.. code-block:: python\n\n    log = logging.getLogger(__name__)\n\n    async def hello():\n        log.debug('Hey')\n\n    aiolog.start()\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(hello())\n    loop.run_until_complete(aiolog.stop())\n\n\nLook at the ``example`` folder for more examples.\n\n\naiohttp\n^^^^^^^\nWith ``aiohttp``, you can use a little more sugar.\nInstead of starting and stopping ``aiolog`` directly, you can use:\n\n.. code-block:: python\n\n    aiolog.setup_aiohttp(app)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/imbolc/aiolog", "keywords": "logging,asyncio", "license": "ISC", "maintainer": "", "maintainer_email": "", "name": "aiolog", "package_url": "https://pypi.org/project/aiolog/", "platform": "", "project_url": "https://pypi.org/project/aiolog/", "project_urls": {"Homepage": "https://github.com/imbolc/aiolog"}, "release_url": "https://pypi.org/project/aiolog/0.1.0/", "requires_dist": ["async-timeout (>=1.1.0)"], "requires_python": "", "summary": "Asynchronous handlers for standard python logging library", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Asynchronous handlers for standard python logging library.\nCurrently telegram (requires <tt>aiohttp</tt>)\nand smtp (via <tt>aiosmtplib</tt>) handlers are available.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install aiolog\n</pre>\n<p>Repository: <a href=\"https://github.com/imbolc/aiolog\" rel=\"nofollow\">https://github.com/imbolc/aiolog</a></p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Just use any way you prefer to configure built-in <tt>logging</tt> library, e.g.:</p>\n<pre><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">dictConfig</span><span class=\"p\">({</span>\n    <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'telegram'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"c1\"># any built-in `logging.Handler` params</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'aiolog.telegram.Handler'</span><span class=\"p\">,</span>\n\n            <span class=\"c1\"># common `aiolog` params</span>\n            <span class=\"s1\">'timeout'</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>  <span class=\"c1\"># 60 by default</span>\n            <span class=\"s1\">'queue_size'</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">,</span>  <span class=\"c1\"># 1000 by default</span>\n\n            <span class=\"c1\"># handler specific params</span>\n            <span class=\"s1\">'token'</span><span class=\"p\">:</span> <span class=\"s1\">'your telegram bot token'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'chat_id'</span><span class=\"p\">:</span> <span class=\"s1\">'telegram chat id'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'smtp'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'WARNING'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'aiolog.smtp.Handler'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'hostname'</span><span class=\"p\">:</span> <span class=\"s1\">'smtp.yandex.com'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'port'</span><span class=\"p\">:</span> <span class=\"mi\">465</span><span class=\"p\">,</span>\n            <span class=\"s1\">'sender'</span><span class=\"p\">:</span> <span class=\"s1\">'bot@email'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'recipient'</span><span class=\"p\">:</span> <span class=\"s1\">'your@email'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'use_tls'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"s1\">'username'</span><span class=\"p\">:</span> <span class=\"s1\">'smtp username'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'password'</span><span class=\"p\">:</span> <span class=\"s1\">'smtp password'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'loggers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">''</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s1\">'telegram'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'smtp'</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You can use built-in <tt>logging</tt> library as usual,\njust add starting and stopping of <tt>aiolog</tt>.</p>\n<pre><span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">():</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'Hey'</span><span class=\"p\">)</span>\n\n<span class=\"n\">aiolog</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">hello</span><span class=\"p\">())</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">aiolog</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">())</span>\n</pre>\n<p>Look at the <tt>example</tt> folder for more examples.</p>\n<div id=\"aiohttp\">\n<h3>aiohttp</h3>\n<p>With <tt>aiohttp</tt>, you can use a little more sugar.\nInstead of starting and stopping <tt>aiolog</tt> directly, you can use:</p>\n<pre><span class=\"n\">aiolog</span><span class=\"o\">.</span><span class=\"n\">setup_aiohttp</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7120165, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3a71bae46ff873e998dc39f9c4d5418d", "sha256": "b03ba1f31b413afbae65b6ac1768e1d986a20c40981a341758428a2eba4cdde2"}, "downloads": -1, "filename": "aiolog-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3a71bae46ff873e998dc39f9c4d5418d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4105, "upload_time": "2016-12-05T05:53:35", "upload_time_iso_8601": "2016-12-05T05:53:35.179649Z", "url": "https://files.pythonhosted.org/packages/1a/ad/8c88e34be394a02edd193e031303ff2e58ef0a5a665357ab5a7db5beaa9d/aiolog-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e563fc24beb82c6007e4c4e24b81e23e", "sha256": "438fcb63ecec3a2075e15ede253d9436675a0b6ed286653a8f70ec5ba9033389"}, "downloads": -1, "filename": "aiolog-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e563fc24beb82c6007e4c4e24b81e23e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4121, "upload_time": "2016-12-08T15:07:08", "upload_time_iso_8601": "2016-12-08T15:07:08.676987Z", "url": "https://files.pythonhosted.org/packages/d4/82/2968db77976d218ad04e8b8285a37674d054f8d87ee90b85cf54b33ec90c/aiolog-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "0a73983963d562a79c6c4f0849f8a48a", "sha256": "41102ebd22a340c7f00adb106c684e241721faee320108be7c769f0d857e1641"}, "downloads": -1, "filename": "aiolog-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0a73983963d562a79c6c4f0849f8a48a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4791, "upload_time": "2020-04-28T12:49:47", "upload_time_iso_8601": "2020-04-28T12:49:47.046782Z", "url": "https://files.pythonhosted.org/packages/81/8b/58d65286ee9cc542de3234d65abe0d96fceffe175ce3b2910de8bac63df7/aiolog-0.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a73983963d562a79c6c4f0849f8a48a", "sha256": "41102ebd22a340c7f00adb106c684e241721faee320108be7c769f0d857e1641"}, "downloads": -1, "filename": "aiolog-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0a73983963d562a79c6c4f0849f8a48a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4791, "upload_time": "2020-04-28T12:49:47", "upload_time_iso_8601": "2020-04-28T12:49:47.046782Z", "url": "https://files.pythonhosted.org/packages/81/8b/58d65286ee9cc542de3234d65abe0d96fceffe175ce3b2910de8bac63df7/aiolog-0.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 16:21:07 2020"}