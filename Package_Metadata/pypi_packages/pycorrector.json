{"info": {"author": "XuMing", "author_email": "xuming624@qq.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Natural Language :: Chinese (Simplified)", "Natural Language :: Chinese (Traditional)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Text Processing", "Topic :: Text Processing :: Indexing", "Topic :: Text Processing :: Linguistic"], "description": "![alt text](docs/logo.svg)\n\n[![PyPI version](https://badge.fury.io/py/pycorrector.svg)](https://badge.fury.io/py/pycorrector)\n[![Contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg)](CONTRIBUTING.md)\n[![License Apache 2.0](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/shibing624/pycorrector/LICENSE)\n![Language](https://img.shields.io/badge/Language-Python-blue.svg)\n![Python3](https://img.shields.io/badge/Python-3.X-red.svg)\n\n\n# pycorrector\n\n\u4e2d\u6587\u6587\u672c\u7ea0\u9519\u5de5\u5177\u3002\u97f3\u4f3c\u3001\u5f62\u4f3c\u9519\u5b57\uff08\u6216\u53d8\u4f53\u5b57\uff09\u7ea0\u6b63\uff0c\u53ef\u7528\u4e8e\u4e2d\u6587\u62fc\u97f3\u3001\u7b14\u753b\u8f93\u5165\u6cd5\u7684\u9519\u8bef\u7ea0\u6b63\u3002python3.6\u5f00\u53d1\u3002\n\n**pycorrector**\u4f9d\u636e\u8bed\u8a00\u6a21\u578b\u68c0\u6d4b\u9519\u522b\u5b57\u4f4d\u7f6e\uff0c\u901a\u8fc7\u62fc\u97f3\u97f3\u4f3c\u7279\u5f81\u3001\u7b14\u753b\u4e94\u7b14\u7f16\u8f91\u8ddd\u79bb\u7279\u5f81\u53ca\u8bed\u8a00\u6a21\u578b\u56f0\u60d1\u5ea6\u7279\u5f81\u7ea0\u6b63\u9519\u522b\u5b57\u3002\n\n## Demo\n\nhttps://www.borntowin.cn/product/corrector\n\n## Question\n\n\u4e2d\u6587\u6587\u672c\u7ea0\u9519\u4efb\u52a1\uff0c\u5e38\u89c1\u9519\u8bef\u7c7b\u578b\u5305\u62ec\uff1a\n\n- \u8c10\u97f3\u5b57\u8bcd\uff0c\u5982 \u914d\u526f\u773c\u775b-\u914d\u526f\u773c\u955c\n- \u6df7\u6dc6\u97f3\u5b57\u8bcd\uff0c\u5982 \u6d41\u6d6a\u7ec7\u5973-\u725b\u90ce\u7ec7\u5973\n- \u5b57\u8bcd\u987a\u5e8f\u98a0\u5012\uff0c\u5982 \u4f0d\u8fea\u827e\u4f26-\u827e\u4f26\u4f0d\u8fea\n- \u5b57\u8bcd\u8865\u5168\uff0c\u5982 \u7231\u6709\u5929\u610f-\u5047\u5982\u7231\u6709\u5929\u610f\n- \u5f62\u4f3c\u5b57\u9519\u8bef\uff0c\u5982 \u9ad8\u6881-\u9ad8\u7cb1\n- \u4e2d\u6587\u62fc\u97f3\u5168\u62fc\uff0c\u5982 xingfu-\u5e78\u798f\n- \u4e2d\u6587\u62fc\u97f3\u7f29\u5199\uff0c\u5982 sz-\u6df1\u5733\n- \u8bed\u6cd5\u9519\u8bef\uff0c\u5982 \u60f3\u8c61\u96be\u4ee5-\u96be\u4ee5\u60f3\u8c61\n\n\u5f53\u7136\uff0c\u9488\u5bf9\u4e0d\u540c\u4e1a\u52a1\u573a\u666f\uff0c\u8fd9\u4e9b\u95ee\u9898\u5e76\u4e0d\u4e00\u5b9a\u5168\u90e8\u5b58\u5728\uff0c\u6bd4\u5982\u8f93\u5165\u6cd5\u4e2d\u9700\u8981\u5904\u7406\u524d\u56db\u79cd\uff0c\u641c\u7d22\u5f15\u64ce\u9700\u8981\u5904\u7406\u6240\u6709\u7c7b\u578b\uff0c\u8bed\u97f3\u8bc6\u522b\u540e\u6587\u672c\u7ea0\u9519\u53ea\u9700\u8981\u5904\u7406\u524d\u4e24\u79cd\uff0c\n\u5176\u4e2d'\u5f62\u4f3c\u5b57\u9519\u8bef'\u4e3b\u8981\u9488\u5bf9\u4e94\u7b14\u6216\u8005\u7b14\u753b\u624b\u5199\u8f93\u5165\u7b49\u3002\n\n\n## Solution\n### \u89c4\u5219\u7684\u89e3\u51b3\u601d\u8def\n1. \u4e2d\u6587\u7ea0\u9519\u5206\u4e3a\u4e24\u6b65\u8d70\uff0c\u7b2c\u4e00\u6b65\u662f\u9519\u8bef\u68c0\u6d4b\uff0c\u7b2c\u4e8c\u6b65\u662f\u9519\u8bef\u7ea0\u6b63\uff1b\n2. \u9519\u8bef\u68c0\u6d4b\u90e8\u5206\u5148\u901a\u8fc7\u7ed3\u5df4\u4e2d\u6587\u5206\u8bcd\u5668\u5207\u8bcd\uff0c\u7531\u4e8e\u53e5\u5b50\u4e2d\u542b\u6709\u9519\u522b\u5b57\uff0c\u6240\u4ee5\u5207\u8bcd\u7ed3\u679c\u5f80\u5f80\u4f1a\u6709\u5207\u5206\u9519\u8bef\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u4ece\u5b57\u7c92\u5ea6\u548c\u8bcd\u7c92\u5ea6\u4e24\u65b9\u9762\u68c0\u6d4b\u9519\u8bef\uff0c\n\u6574\u5408\u8fd9\u4e24\u79cd\u7c92\u5ea6\u7684\u7591\u4f3c\u9519\u8bef\u7ed3\u679c\uff0c\u5f62\u6210\u7591\u4f3c\u9519\u8bef\u4f4d\u7f6e\u5019\u9009\u96c6\uff1b\n3. \u9519\u8bef\u7ea0\u6b63\u90e8\u5206\uff0c\u662f\u904d\u5386\u6240\u6709\u7684\u7591\u4f3c\u9519\u8bef\u4f4d\u7f6e\uff0c\u5e76\u4f7f\u7528\u97f3\u4f3c\u3001\u5f62\u4f3c\u8bcd\u5178\u66ff\u6362\u9519\u8bef\u4f4d\u7f6e\u7684\u8bcd\uff0c\u7136\u540e\u901a\u8fc7\u8bed\u8a00\u6a21\u578b\u8ba1\u7b97\u53e5\u5b50\u56f0\u60d1\u5ea6\uff0c\u5bf9\u6240\u6709\u5019\u9009\u96c6\u7ed3\u679c\u6bd4\u8f83\u5e76\u6392\u5e8f\uff0c\u5f97\u5230\u6700\u4f18\u7ea0\u6b63\u8bcd\u3002\n\n### \u6df1\u5ea6\u6a21\u578b\u7684\u89e3\u51b3\u601d\u8def\n1. \u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u6a21\u578b\u53ef\u4ee5\u907f\u514d\u4eba\u5de5\u63d0\u53d6\u7279\u5f81\uff0c\u51cf\u5c11\u4eba\u5de5\u5de5\u4f5c\u91cf\uff0cRNN\u5e8f\u5217\u6a21\u578b\u5bf9\u6587\u672c\u4efb\u52a1\u62df\u5408\u80fd\u529b\u5f3a\uff0crnn_attention\u5728\u82f1\u6587\u6587\u672c\u7ea0\u9519\u6bd4\u8d5b\u4e2d\u53d6\u5f97\u7b2c\u4e00\u540d\u6210\u7ee9\uff0c\u8bc1\u660e\u5e94\u7528\u6548\u679c\u4e0d\u9519\uff1b\n2. CRF\u4f1a\u8ba1\u7b97\u5168\u5c40\u6700\u4f18\u8f93\u51fa\u8282\u70b9\u7684\u6761\u4ef6\u6982\u7387\uff0c\u5bf9\u53e5\u5b50\u4e2d\u7279\u5b9a\u9519\u8bef\u7c7b\u578b\u7684\u68c0\u6d4b\uff0c\u4f1a\u6839\u636e\u6574\u53e5\u8bdd\u5224\u5b9a\u8be5\u9519\u8bef\uff0c\u963f\u91cc\u53c2\u8d5b2016\u4e2d\u6587\u8bed\u6cd5\u7ea0\u9519\u4efb\u52a1\u5e76\u53d6\u5f97\u7b2c\u4e00\u540d\uff0c\u8bc1\u660e\u5e94\u7528\u6548\u679c\u4e0d\u9519\uff1b\n3. seq2seq\u6a21\u578b\u662f\u4f7f\u7528encoder-decoder\u7ed3\u6784\u89e3\u51b3\u5e8f\u5217\u8f6c\u6362\u95ee\u9898\uff0c\u76ee\u524d\u5728\u5e8f\u5217\u8f6c\u6362\u4efb\u52a1\u4e2d\uff08\u5982\u673a\u5668\u7ffb\u8bd1\u3001\u5bf9\u8bdd\u751f\u6210\u3001\u6587\u672c\u6458\u8981\u3001\u56fe\u50cf\u63cf\u8ff0\uff09\u4f7f\u7528\u6700\u5e7f\u6cdb\u3001\u6548\u679c\u6700\u597d\u7684\u6a21\u578b\u4e4b\u4e00\u3002\n\n\n## Feature\n### \u6a21\u578b\n* kenlm\uff1akenlm\u7edf\u8ba1\u8bed\u8a00\u6a21\u578b\u5de5\u5177\n* rnn_attention\u6a21\u578b\uff1a\u53c2\u8003Stanford University\u7684nlc\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u662f\u53c2\u52a02014\u82f1\u6587\u6587\u672c\u7ea0\u9519\u6bd4\u8d5b\u5e76\u53d6\u5f97\u7b2c\u4e00\u540d\u7684\u65b9\u6cd5\n* rnn_crf\u6a21\u578b\uff1a\u53c2\u8003\u963f\u91cc\u5df4\u5df42016\u53c2\u8d5b\u4e2d\u6587\u8bed\u6cd5\u7ea0\u9519\u6bd4\u8d5bCGED2018\u5e76\u53d6\u5f97\u7b2c\u4e00\u540d\u7684\u65b9\u6cd5(\u6574\u7406\u4e2d)\n* seq2seq_attention\u6a21\u578b\uff1a\u5728seq2seq\u6a21\u578b\u52a0\u4e0aattention\u673a\u5236\uff0c\u5bf9\u4e8e\u957f\u6587\u672c\u6548\u679c\u66f4\u597d\uff0c\u6a21\u578b\u66f4\u5bb9\u6613\u6536\u655b\uff0c\u4f46\u5bb9\u6613\u8fc7\u62df\u5408\n* transformer\u6a21\u578b\uff1a\u5168attention\u7684\u7ed3\u6784\u4ee3\u66ff\u4e86lstm\u7528\u4e8e\u89e3\u51b3sequence to sequence\u95ee\u9898\uff0c\u8bed\u4e49\u7279\u5f81\u63d0\u53d6\u6548\u679c\u66f4\u597d\n* bert\u6a21\u578b\uff1a\u4e2d\u6587fine-tuned\u6a21\u578b\uff0c\u4f7f\u7528MASK\u7279\u5f81\u7ea0\u6b63\u9519\u5b57\n* conv_seq2seq\u6a21\u578b\uff1a\u57fa\u4e8eFacebook\u51fa\u54c1\u7684fairseq\uff0c\u5317\u4eac\u8bed\u8a00\u5927\u5b66\u56e2\u961f\u6539\u8fdbConvS2S\u6a21\u578b\u7528\u4e8e\u4e2d\u6587\u7ea0\u9519\uff0c\u5728NLPCC-2018\u7684\u4e2d\u6587\u8bed\u6cd5\u7ea0\u9519\u6bd4\u8d5b\u4e2d\uff0c\u662f\u552f\u4e00\u4f7f\u7528\u5355\u6a21\u578b\u5e76\u53d6\u5f97\u7b2c\u4e09\u540d\u7684\u6210\u7ee9\n\n\n### \u9519\u8bef\u68c0\u6d4b\n* \u5b57\u7c92\u5ea6\uff1a\u8bed\u8a00\u6a21\u578b\u56f0\u60d1\u5ea6\uff08ppl\uff09\u68c0\u6d4b\u67d0\u5b57\u7684\u4f3c\u7136\u6982\u7387\u503c\u4f4e\u4e8e\u53e5\u5b50\u6587\u672c\u5e73\u5747\u503c\uff0c\u5219\u5224\u5b9a\u8be5\u5b57\u662f\u7591\u4f3c\u9519\u522b\u5b57\u7684\u6982\u7387\u5927\u3002\n* \u8bcd\u7c92\u5ea6\uff1a\u5207\u8bcd\u540e\u4e0d\u5728\u8bcd\u5178\u4e2d\u7684\u8bcd\u662f\u7591\u4f3c\u9519\u8bcd\u7684\u6982\u7387\u5927\u3002\n\n\n### \u9519\u8bef\u7ea0\u6b63\n* \u901a\u8fc7\u9519\u8bef\u68c0\u6d4b\u5b9a\u4f4d\u6240\u6709\u7591\u4f3c\u9519\u8bef\u540e\uff0c\u53d6\u6240\u6709\u7591\u4f3c\u9519\u5b57\u7684\u97f3\u4f3c\u3001\u5f62\u4f3c\u5019\u9009\u8bcd\uff0c\n* \u4f7f\u7528\u5019\u9009\u8bcd\u66ff\u6362\uff0c\u57fa\u4e8e\u8bed\u8a00\u6a21\u578b\u5f97\u5230\u7c7b\u4f3c\u7ffb\u8bd1\u6a21\u578b\u7684\u5019\u9009\u6392\u5e8f\u7ed3\u679c\uff0c\u5f97\u5230\u6700\u4f18\u7ea0\u6b63\u8bcd\u3002\n\n\n### \u601d\u8003\n1. \u73b0\u5728\u7684\u5904\u7406\u624b\u6bb5\uff0c\u5728\u8bcd\u7c92\u5ea6\u7684\u9519\u8bef\u53ec\u56de\u8fd8\u4e0d\u9519\uff0c\u4f46\u9519\u8bef\u7ea0\u6b63\u7684\u51c6\u786e\u7387\u8fd8\u6709\u5f85\u63d0\u9ad8\uff0c\u66f4\u591a\u4f18\u8d28\u7684\u7ea0\u9519\u96c6\u53ca\u7ea0\u9519\u8bcd\u5e93\u4f1a\u6709\u63d0\u5347\uff0c\u6211\u66f4\u5e0c\u671b\u7b97\u6cd5\u4e0a\u6709\u66f4\u5927\u7684\u7a81\u7834\u3002\n2. \u53e6\u5916\uff0c\u73b0\u5728\u7684\u6587\u672c\u9519\u8bef\u4e0d\u518d\u5c40\u9650\u4e8e\u5b57\u8bcd\u7c92\u5ea6\u4e0a\u7684\u62fc\u5199\u9519\u8bef\uff0c\u9700\u8981\u63d0\u9ad8\u4e2d\u6587\u8bed\u6cd5\u9519\u8bef\u68c0\u6d4b\uff08CGED, Chinese Grammar Error Diagnosis\uff09\u53ca\u7ea0\u6b63\u80fd\u529b\uff0c\u5217\u5728TODO\u4e2d\uff0c\u540e\u7eed\u8c03\u7814\u3002\n\n\n\n## Install\n* \u5168\u81ea\u52a8\u5b89\u88c5\uff1apip install pycorrector\n* \u534a\u81ea\u52a8\u5b89\u88c5\uff1a\n```\ngit clone https://github.com/shibing624/pycorrector.git\ncd pycorrector\npython setup.py install\n```\n\n\n\u901a\u8fc7\u4ee5\u4e0a\u4e24\u79cd\u65b9\u6cd5\u7684\u4efb\u4f55\u4e00\u79cd\u5b8c\u6210\u5b89\u88c5\u90fd\u53ef\u4ee5\u3002\u5982\u679c\u4e0d\u60f3\u5b89\u88c5\uff0c\u53ef\u4ee5\u4e0b\u8f7d[github\u6e90\u7801\u5305](https://github.com/shibing624/pycorrector/archive/master.zip)\uff0c\u5b89\u88c5\u4e0b\u9762\u4f9d\u8d56\u518d\u4f7f\u7528\u3002\n\n#### \u5b89\u88c5\u4f9d\u8d56\n* kenlm\u5b89\u88c5\n```\npip install https://github.com/kpu/kenlm/archive/master.zip\n```\n\n* \u5176\u4ed6\u5e93\u5305\u5b89\u88c5\n```\npip install -r requirements.txt\n```\n\n## Usage\n\n- \u6587\u672c\u7ea0\u9519\n\n```python\nimport pycorrector\n\ncorrected_sent, detail = pycorrector.correct('\u5c11\u5148\u961f\u5458\u56e0\u8be5\u4e3a\u8001\u4eba\u8ba9\u5750')\nprint(corrected_sent, detail)\n```\n\noutput:\n```\n\u5c11\u5148\u961f\u5458\u5e94\u8be5\u4e3a\u8001\u4eba\u8ba9\u5ea7 [[('\u56e0\u8be5', '\u5e94\u8be5', 4, 6)], [('\u5750', '\u5ea7', 10, 11)]]\n```\n\n> \u89c4\u5219\u65b9\u6cd5\u9ed8\u8ba4\u4f1a\u4ece\u8def\u5f84`~/.pycorrector/datasets/zh_giga.no_cna_cmn.prune01244.klm`\u52a0\u8f7dkenlm\u8bed\u8a00\u6a21\u578b\u6587\u4ef6\uff0c\u5982\u679c\u68c0\u6d4b\u6ca1\u6709\u8be5\u6587\u4ef6\uff0c\u5219\u7a0b\u5e8f\u4f1a\u81ea\u52a8\u8054\u7f51\u4e0b\u8f7d\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u624b\u52a8\u4e0b\u8f7d[\u6a21\u578b\u6587\u4ef6(2.8G)](https://deepspeech.bj.bcebos.com/zh_lm/zh_giga.no_cna_cmn.prune01244.klm)\u5e76\u653e\u7f6e\u4e8e\u8be5\u4f4d\u7f6e\u3002\n\n\n- \u9519\u8bef\u68c0\u6d4b\n```python\nimport pycorrector\n\nidx_errors = pycorrector.detect('\u5c11\u5148\u961f\u5458\u56e0\u8be5\u4e3a\u8001\u4eba\u8ba9\u5750')\nprint(idx_errors)\n```\n\noutput:\n```\n[['\u56e0\u8be5', 4, 6, 'word'], ['\u5750', 10, 11, 'char']]\n```\n> \u8fd4\u56de\u7c7b\u578b\u662f`list`, `[error_word, begin_pos, end_pos, error_type]`\uff0c`pos`\u7d22\u5f15\u4f4d\u7f6e\u4ee50\u5f00\u59cb\u3002\n\n\n- \u5173\u95ed\u5b57\u7c92\u5ea6\u7ea0\u9519\n```python\nimport pycorrector\n\nerror_sentence_1 = '\u6211\u7684\u5589\u5499\u53d1\u708e\u4e86\u8981\u4e70\u70b9\u963f\u83ab\u7ec6\u6797\u5403'\ncorrect_sent = pycorrector.correct(error_sentence_1)\nprint(correct_sent)\n\n```\n\noutput:\n```\n'\u6211\u7684\u5589\u5499\u53d1\u708e\u4e86\u8981\u4e70\u70b9\u963f\u83ab\u897f\u6797\u5409', [['\u7ec6\u6797', '\u897f\u6797', 12, 14], ['\u5403', '\u5409', 14, 15]]\n```\n\n\u4e0a\u4f8b\u4e2d`\u5403`\u53d1\u751f\u8bef\u7ea0\uff0c\u5982\u4e0b\u4ee3\u7801\u5173\u95ed\u5b57\u7c92\u5ea6\u7ea0\u9519\uff1a\n```python\nimport pycorrector\n\nerror_sentence_1 = '\u6211\u7684\u5589\u5499\u53d1\u708e\u4e86\u8981\u4e70\u70b9\u963f\u83ab\u7ec6\u6797\u5403'\npycorrector.enable_char_error(enable=False)\ncorrect_sent = pycorrector.correct(error_sentence_1)\nprint(correct_sent)\n\n```\n\noutput:\n```\n'\u6211\u7684\u5589\u5499\u53d1\u708e\u4e86\u8981\u4e70\u70b9\u963f\u83ab\u897f\u6797\u5403', [['\u7ec6\u6797', '\u897f\u6797', 12, 14]]\n```\n\n\u9ed8\u8ba4\u5b57\u7c92\u5ea6\u3001\u8bcd\u7c92\u5ea6\u7684\u7ea0\u9519\u90fd\u6253\u5f00\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u5355\u5b57\u9519\u8bef\u53d1\u751f\u8f83\u5c11\uff0c\u800c\u4e14\u5b57\u7c92\u5ea6\u7ea0\u9519\u51c6\u786e\u7387\u8f83\u4f4e\u3002\u5173\u95ed\u5b57\u7c92\u5ea6\u7ea0\u9519\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u7ea0\u9519\u51c6\u786e\u7387\uff0c\u63d0\u9ad8\u7ea0\u9519\u901f\u5ea6\u3002\n\n> \u9ed8\u8ba4`enable_char_error`\u65b9\u6cd5\u7684`enable`\u53c2\u6570\u4e3a`True`\uff0c\u5373\u6253\u5f00\u9519\u5b57\u7ea0\u6b63\uff0c\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u53ec\u56de\u5b57\u7c92\u5ea6\u9519\u8bef\uff0c\u4f46\u662f\u6574\u4f53\u51c6\u786e\u7387\u4f1a\u4f4e\uff1b\n\n> \u5982\u679c\u8ffd\u6c42\u51c6\u786e\u7387\u800c\u4e0d\u8ffd\u6c42\u53ec\u56de\u7387\u7684\u8bdd\uff0c\u5efa\u8bae\u5c06`enable`\u8bbe\u4e3a`False`\uff0c\u4ec5\u4f7f\u7528\u9519\u8bcd\u7ea0\u6b63\u3002\n\n\n- \u52a0\u8f7d\u81ea\u5b9a\u4e49\u6df7\u6dc6\u96c6\n\n\u901a\u8fc7\u52a0\u8f7d\u81ea\u5b9a\u4e49\u6df7\u6dc6\u96c6\uff0c\u652f\u6301\u7528\u6237\u7ea0\u6b63\u5df2\u77e5\u7684\u9519\u8bef\uff0c\u5305\u62ec\u4e24\u65b9\u9762\u529f\u80fd\uff1a1\uff09\u9519\u8bef\u8865\u53ec\u56de\uff1b2\uff09\u8bef\u6740\u52a0\u767d\u3002\n\n```python\nimport pycorrector\n\npycorrector.set_log_level('INFO')\nerror_sentences = [\n    '\u4e70iPhone\u5dee\uff0c\u8981\u591a\u5c11\u94b1',\n    '\u5171\u540c\u5b9e\u9645\u63a7\u5236\u4eba\u8427\u534e\u3001\u970d\u8363\u94e8\u3001\u5f20\u65d7\u5eb7',\n]\nfor line in error_sentences:\n    print(pycorrector.correct(line))\n\nprint('*' * 53)\npycorrector.set_custom_confusion_dict(path='./my_custom_confusion.txt')\nfor line in error_sentences:\n    print(pycorrector.correct(line))\n\n```\n\noutput:\n```\n('\u4e70iPhone\u5dee\uff0c\u8981\u591a\u5c11\u94b1', [])   # \"iPhone\u5dee\"\u6f0f\u53ec\uff0c\u5e94\u8be5\u662f\"iphoneX\"\n('\u5171\u540c\u5b9e\u9645\u63a7\u5236\u4eba\u8427\u534e\u3001\u970d\u8363\u94e8\u3001\u5f20\u542f\u5eb7', [['\u5f20\u65d7\u5eb7', '\u5f20\u542f\u5eb7', 14, 17]]) # \"\u5f20\u542f\u5eb7\"\u8bef\u6740\uff0c\u5e94\u8be5\u4e0d\u7528\u7ea0\n*****************************************************\n('\u4e70iphoneX\uff0c\u8981\u591a\u5c11\u94b1', [['iphone\u5dee', 'iphoneX', 1, 8]])\n('\u5171\u540c\u5b9e\u9645\u63a7\u5236\u4eba\u8427\u534e\u3001\u970d\u8363\u94e8\u3001\u5f20\u65d7\u5eb7', [])\n```\n\n\u5177\u4f53demo\u89c1[example/use_custom_confusion.py](./examples/use_custom_confusion.py)\uff0c\u5176\u4e2d`./my_custom_confusion.txt`\u7684\u5185\u5bb9\u683c\u5f0f\u5982\u4e0b\uff0c\u4ee5\u7a7a\u683c\u95f4\u9694\uff1a\n```\niphone\u5dee iphoneX 100\n\u5f20\u65d7\u5eb7 \u5f20\u65d7\u5eb7\n```\n> `set_custom_confusion_dict`\u65b9\u6cd5\u7684`path`\u53c2\u6570\u4e3a\u7528\u6237\u81ea\u5b9a\u4e49\u6df7\u6dc6\u96c6\u6587\u4ef6\u8def\u5f84\u3002\n\n\n- \u52a0\u8f7d\u81ea\u5b9a\u4e49\u8bed\u8a00\u6a21\u578b\n\n\u9ed8\u8ba4\u63d0\u4f9b\u4e0b\u8f7d\u5e76\u4f7f\u7528\u7684kenlm\u8bed\u8a00\u6a21\u578b`zh_giga.no_cna_cmn.prune01244.klm`\u6587\u4ef6\u662f2.8G\uff0c\u5185\u5b58\u8f83\u5c0f\u7684\u7535\u8111\u4f7f\u7528`pycorrector`\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u5403\u529b\u4e9b\u3002\n\n\u652f\u6301\u7528\u6237\u52a0\u8f7d\u81ea\u5df1\u8bad\u7ec3\u7684kenlm\u8bed\u8a00\u6a21\u578b\uff0c\u6216\u4f7f\u75282014\u7248\u4eba\u6c11\u65e5\u62a5\u6570\u636e\u8bad\u7ec3\u7684[\u6a21\u578b](https://www.borntowin.cn/mm/emb_models/people_chars_lm.klm)\uff0c\u6a21\u578b\u5c0f\uff0820M\uff09\uff0c\u51c6\u786e\u7387\u4f4e\u4e9b\u3002\n\n```python\nfrom pycorrector import Corrector\n\npwd_path = os.path.abspath(os.path.dirname(__file__))\nlm_path = os.path.join(pwd_path, './people_chars_lm.klm')\nmodel = Corrector(language_model_path=lm_path)\n\ncorrected_sent, detail = model.correct('\u5c11\u5148\u961f\u5458\u56e0\u8be5\u4e3a\u8001\u4eba\u8ba9\u5750')\nprint(corrected_sent, detail)\n\n```\n\noutput:\n```\n\u5c11\u5148\u961f\u5458\u5e94\u8be5\u4e3a\u8001\u4eba\u8ba9\u5ea7 [[('\u56e0\u8be5', '\u5e94\u8be5', 4, 6)], [('\u5750', '\u5ea7', 10, 11)]]\n```\n\n\u5177\u4f53demo\u89c1[example/load_custom_language_model.py](./examples/load_custom_language_model.py)\uff0c\u5176\u4e2d`./people_chars_lm.klm`\u662f\u81ea\u5b9a\u4e49\u8bed\u8a00\u6a21\u578b\u6587\u4ef6\u3002\n\n\n- \u82f1\u6587\u62fc\u5199\u7ea0\u9519\n\n\u652f\u6301\u82f1\u6587\u5355\u8bcd\u7684\u62fc\u5199\u9519\u8bef\u7ea0\u6b63\u3002\n\n```python\nimport pycorrector\n\nsent_lst = ['what', 'hapenning', 'how', 'to', 'speling', 'it', 'you', 'can', 'gorrect', 'it']\nfor i in sent_lst:\n    print(i, '=>', pycorrector.en_correct(i))\n```\n\noutput:\n```\nwhat => what\nhapenning => happening\nhow => how\nto => to\nspeling => spelling\nit => it\nyou => you\ncan => can\ngorrect => correct\nit => it\n```\n\n\n- \u4e2d\u6587\u7b80\u7e41\u4e92\u6362\n\n\u652f\u6301\u4e2d\u6587\u7e41\u4f53\u5230\u7b80\u4f53\u7684\u8f6c\u6362\uff0c\u548c\u7b80\u4f53\u5230\u7e41\u4f53\u7684\u8f6c\u6362\u3002\n\n```python\nimport pycorrector\n\ntraditional_sentence = '\u6182\u90c1\u7684\u81fa\u7063\u70cf\u9f9c'\nsimplified_sentence = pycorrector.traditional2simplified(traditional_sentence)\nprint(traditional_sentence, '=>', simplified_sentence)\n\nsimplified_sentence = '\u5fe7\u90c1\u7684\u53f0\u6e7e\u4e4c\u9f9f'\ntraditional_sentence = pycorrector.simplified2traditional(simplified_sentence)\nprint(simplified_sentence, '=>', traditional_sentence)\n```\n\noutput:\n```\n\u6182\u90c1\u7684\u81fa\u7063\u70cf\u9f9c => \u5fe7\u90c1\u7684\u53f0\u6e7e\u4e4c\u9f9f\n\u5fe7\u90c1\u7684\u53f0\u6e7e\u4e4c\u9f9f => \u6182\u90c1\u7684\u81fa\u7063\u70cf\u9f9c\n```\n\n\n### Command Line Usage\n- \u547d\u4ee4\u884c\u6a21\u5f0f\n\n\u652f\u6301\u6279\u91cf\u6587\u672c\u7ea0\u9519\u3002\n```\npython -m pycorrector -h\nusage: __main__.py [-h] -o OUTPUT [-n] [-d] input\n\n@description:\n\npositional arguments:\n  input                 the input file path, file encode need utf-8.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUTPUT, --output OUTPUT\n                        the output file path.\n  -n, --no_char         disable char detect mode.\n  -d, --detail          print detail info\n\n```\n\ncase\uff1a\n```\npython -m pycorrector input.txt -o out.txt -n -d\n```\n> \u8f93\u5165\u6587\u4ef6\uff1a`input.txt`\uff1b\u8f93\u51fa\u6587\u4ef6\uff1a`out.txt `\uff1b\u5173\u95ed\u5b57\u7c92\u5ea6\u7ea0\u9519\uff1b\u6253\u5370\u8be6\u7ec6\u7ea0\u9519\u4fe1\u606f\uff1b\u7ea0\u9519\u7ed3\u679c\u4ee5`\\t`\u95f4\u9694\n\n\n### Evaluate\n\n\u63d0\u4f9b\u8bc4\u4f30\u811a\u672c[pycorrector/utils/eval.py](./pycorrector/utils/eval.py)\uff0c\u8be5\u811a\u672c\u6709\u4e24\u4e2a\u529f\u80fd\uff1a\n- \u6784\u5efa\u8bc4\u4f30\u6837\u672c\u96c6\uff1a\u81ea\u52a8\u751f\u6210\u8bc4\u4f30\u96c6[pycorrector/data/eval_corpus.json](pycorrector/data/eval_corpus.json), \u5305\u62ec\u5b57\u7c92\u5ea6\u9519\u8bef100\u6761\u3001\u8bcd\u7c92\u5ea6\u9519\u8bef100\u6761\u3001\u8bed\u6cd5\u9519\u8bef100\u6761\uff0c\u6b63\u786e\u53e5\u5b50200\u6761\u3002\u7528\u6237\u53ef\u4ee5\u4fee\u6539\u6761\u6570\u751f\u6210\u5176\u4ed6\u8bc4\u4f30\u6837\u672c\u5206\u5e03\u3002\n- \u8ba1\u7b97\u7ea0\u9519\u51c6\u53ec\u7387\uff1a\u91c7\u7528\u4fdd\u5b88\u8ba1\u7b97\u65b9\u5f0f\uff0c\u7b80\u5355\u628a\u7ea0\u9519\u4e4b\u540e\u4e0e\u6b63\u786e\u53e5\u5b50\u5b8c\u6210\u5339\u914d\u7684\u89c6\u4e3a\u6b63\u786e\uff0c\u5426\u5219\u4e3a\u9519\u3002\n\n\u6267\u884c\u8be5\u811a\u672c\u540e\u5f97\u5230\uff0c\u89c4\u5219\u65b9\u6cd5\u7ea0\u9519\u6548\u679c\u8bc4\u4f30\u5982\u4e0b\uff1a\n- \u51c6\u786e\u7387\uff1a320/500=64%\n- \u53ec\u56de\u7387\uff1a152/300=50.67%\n\n\u770b\u6765\u8fd8\u6709\u6bd4\u8f83\u5927\u7684\u63d0\u5347\u7a7a\u95f4\uff0c\u8bef\u6740\u548c\u6f0f\u53ec\u56de\u7684\u90fd\u6709\u3002\n\n\n## \u6df1\u5ea6\u6a21\u578b\u4f7f\u7528\u8bf4\u660e\n\n### \u5b89\u88c5\u4f9d\u8d56\n```\npip install -r requirements-dev.txt\n```\n\n### \u4ecb\u7ecd\n\n\u672c\u9879\u76ee\u7684\u521d\u8877\u4e4b\u4e00\u662f\u6bd4\u5bf9\u3001\u5171\u4eab\u5404\u79cd\u6587\u672c\u7ea0\u9519\u65b9\u6cd5\uff0c\u629b\u7816\u5f15\u7389\u7684\u4f5c\u7528\uff0c\u5982\u679c\u5bf9\u5927\u5bb6\u5728\u6587\u672c\u7ea0\u9519\u4efb\u52a1\u4e0a\u6709\u4e00\u70b9\u5c0f\u5c0f\u7684\u542f\u53d1\u5c31\u662f\u6211\u83ab\u5927\u7684\u8363\u5e78\u4e86\u3002\n\n\u4e3b\u8981\u4f7f\u7528\u4e86\u591a\u79cd\u6df1\u5ea6\u6a21\u578b\u5e94\u7528\u4e8e\u6587\u672c\u7ea0\u9519\u4efb\u52a1\uff0c\u5206\u522b\u662f\u524d\u9762`\u6a21\u578b`\u5c0f\u8282\u4ecb\u7ecd\u7684`conv_seq2seq`\u3001`seq2seq_attention`\u3001\n`transformer`\u3001`bert`\uff0c\u5404\u6a21\u578b\u65b9\u6cd5\u5185\u7f6e\u4e8e`pycorrector`\u6587\u4ef6\u5939\u4e0b\uff0c\u6709`README.md`\u8be6\u7ec6\u6307\u5bfc\uff0c\u5404\u6a21\u578b\u53ef\u72ec\u7acb\u8fd0\u884c\uff0c\u76f8\u4e92\u4e4b\u95f4\u65e0\u4f9d\u8d56\u3002\n\n\n### \u4f7f\u7528\u65b9\u6cd5\n\u5404\u6a21\u578b\u5747\u53ef\u72ec\u7acb\u7684\u9884\u5904\u7406\u6570\u636e\u3001\u8bad\u7ec3\u3001\u9884\u6d4b\uff0c\u4e0b\u9762\u4ee5\u5176\u4e2d`seq2seq_attention`\u4e3a\u4f8b\uff1a\n\nseq2seq_attention \u6a21\u578b\u4f7f\u7528\u793a\u4f8b:\n\n#### \u914d\u7f6e\n\n\u901a\u8fc7\u4fee\u6539`config.py`\u3002\n\n\n#### \u6570\u636e\u9884\u5904\u7406\n```\ncd seq2seq_attention\n# \u6570\u636e\u9884\u5904\u7406\npython preprocess.py\n```\n\u81ea\u52a8\u65b0\u5efa\u6587\u4ef6\u5939output\uff0c\u5728output\u4e0b\u751f\u6210`train.txt`\u548c`test.txt`\u6587\u4ef6\uff0c\u4ee5TAB\uff08\"\\t\"\uff09\u95f4\u9694\u9519\u8bef\u6587\u672c\u548c\u7ea0\u6b63\u6587\u672c\uff0c\u6587\u672c\u4ee5\u7a7a\u683c\u5207\u5206\u8bcd\uff0c\u6587\u4ef6\u5185\u5bb9\u793a\u4f8b\uff1a\n\n```\n\u5e0c \u671b \u5c11 \u5438 \u70df \u3002\t \u5e0c \u671b \u70df \u6c11 \u4eec \u5c11 \u5438 \u70df \u3002\n\u4ee5 \u524d \uff0c \u5305 \u62ec \u4e2d \u56fd \uff0c \u6211 \u56fd \u4e5f \u662f \u3002\t\u4ee5 \u524d \uff0c \u4e0d \u4ec5 \u4e2d \u56fd \uff0c \u6211 \u56fd \u4e5f \u662f \u3002\n\u6211 \u73b0 \u5728 \u597d \u5f97 \u591a \u4e86 \u3002\t\u6211 \u73b0 \u5728 \u597d \u591a \u4e86 \u3002\n```\n\n\n#### \u8bad\u7ec3\n```\npython train.py\n```\n\u8bad\u7ec3\u8fc7\u7a0b\u622a\u56fe\uff1a\n![train image](./docs/git_image/seq2seq_train.png)\n\n\n#### \u9884\u6d4b\n```\npython infer.py\n```\n\n\u9884\u6d4b\u8f93\u51fa\u6548\u679c\u6837\u4f8b\uff1a\n```\ninput: \u5c11\u5148\u961f\u5458\u56e0\u8be5\u7ed9\u8001\u4eba\u8ba9\u5750 output: \u5c11\u5148\u961f\u5458\u56e0\u8be5\u7ed9\u8001\u4eba\u8ba9\u5ea7\ninput: \u5c11\u5148\u961f\u5458\u5e94\u8be5\u7ed9\u8001\u4eba\u8ba9\u5750 output: \u5c11\u5148\u961f\u5458\u5e94\u8be5\u7ed9\u8001\u4eba\u8ba9\u5ea7\ninput: \u6ca1\u6709\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c output: \u6ca1\u6709\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\uff0c\ninput: \u7531\u6211\u8d77\u5f00\u59cb\u505a\u3002 output: \u7531\u6211\u8d77\u5f00\u59cb\u505a\ninput: \u7531\u6211\u8d77\u5f00\u59cb\u505a output: \u7531\u6211\u5f00\u59cb\u505a\n```\n\n\n## \u81ea\u5b9a\u4e49\u8bed\u8a00\u6a21\u578b\n\n\u8bed\u8a00\u6a21\u578b\u5bf9\u4e8e\u7ea0\u9519\u6b65\u9aa4\u81f3\u5173\u91cd\u8981\uff0c\u5f53\u524d\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f\u4ece\u5343\u5146\u4e2d\u6587\u6587\u672c\u8bad\u7ec3\u7684\u4e2d\u6587\u8bed\u8a00\u6a21\u578b[zh_giga.no_cna_cmn.prune01244.klm(2.8G)](https://deepspeech.bj.bcebos.com/zh_lm/zh_giga.no_cna_cmn.prune01244.klm)\u3002\n\n\u5927\u5bb6\u53ef\u4ee5\u7528\u4e2d\u6587\u7ef4\u57fa\uff08\u7e41\u4f53\u8f6c\u7b80\u4f53\uff0cpycorrector.utils\u4e0b\u6709\u6b64\u529f\u80fd\uff09\u7b49\u8bed\u6599\u6570\u636e\u8bad\u7ec3\u901a\u7528\u7684\u8bed\u8a00\u6a21\u578b\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u7528\u4e13\u4e1a\u9886\u57df\u8bed\u6599\u8bad\u7ec3\u66f4\u4e13\u7528\u7684\u8bed\u8a00\u6a21\u578b\u3002\u66f4\u9002\u7528\u7684\u8bed\u8a00\u6a21\u578b\uff0c\u5bf9\u4e8e\u7ea0\u9519\u6548\u679c\u4f1a\u6709\u6bd4\u8f83\u597d\u7684\u63d0\u5347\u3002\n\n\n1. kenlm\u8bed\u8a00\u6a21\u578b\u8bad\u7ec3\u5de5\u5177\u7684\u4f7f\u7528\uff0c\u8bf7\u89c1\u535a\u5ba2\uff1ahttp://blog.csdn.net/mingzai624/article/details/79560063\n2. \u9644\u4e0a\u8bad\u7ec3\u8bed\u6599<\u4eba\u6c11\u65e5\u62a52014\u7248\u719f\u8bed\u6599>\uff0c\u5305\u62ec\uff1a\n    1\uff09\u6807\u51c6\u4eba\u5de5\u5207\u8bcd\u53ca\u8bcd\u6027\u6570\u636epeople2014.tar.gz\uff0c\n    2\uff09\u672a\u5207\u8bcd\u6587\u672c\u6570\u636epeople2014_words.txt\uff0c\n    3\uff09kenlm\u8bad\u7ec3\u5b57\u7c92\u5ea6\u8bed\u8a00\u6a21\u578b\u6587\u4ef6\u53ca\u5176\u4e8c\u8fdb\u5236\u6587\u4ef6people2014corpus_chars.arps/klm\uff0c\n    4\uff09kenlm\u8bcd\u7c92\u5ea6\u8bed\u8a00\u6a21\u578b\u6587\u4ef6\u53ca\u5176\u4e8c\u8fdb\u5236\u6587\u4ef6people2014corpus_words.arps/klm\u3002\n\n\u4eba\u6c11\u65e5\u62a52014\u7248\u719f\u8bed\u6599\uff0c\u7f51\u76d8\u94fe\u63a5:https://pan.baidu.com/s/1971a5XLQsIpL0zL0zxuK2A  \u5bc6\u7801:uc11\u3002\u5c0a\u91cd\u7248\u6743\uff0c\u4f20\u64ad\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\n\n\n## \u4e2d\u6587\u7ea0\u9519\u6570\u636e\u96c6\n1. NLPCC 2018 GEC\u5b98\u65b9\u6570\u636e\u96c6[NLPCC2018-GEC](http://tcci.ccf.org.cn/conference/2018/taskdata.php)\uff0c\n\u8bad\u7ec3\u96c6[trainingdata](http://tcci.ccf.org.cn/conference/2018/dldoc/trainingdata02.tar.gz)[\u89e3\u538b\u540e114.5MB]\uff0c\u8be5\u6570\u636e\u683c\u5f0f\u662f\u539f\u59cb\u6587\u672c\uff0c\u672a\u505a\u5207\u8bcd\u5904\u7406\u3002\n2. \u6c49\u8bed\u6c34\u5e73\u8003\u8bd5\uff08HSK\uff09\u548clang8\u539f\u59cb\u5e73\u884c\u8bed\u6599[HSK+Lang8](https://pan.baidu.com/s/18JXm1KGmRu3Pe45jt2sYBQ)[190MB]\uff0c\u8be5\u6570\u636e\u96c6\u5df2\u7ecf\u5207\u8bcd\uff0c\u53ef\u7528\u4f5c\u6570\u636e\u6269\u589e\n3. \u4ee5\u4e0a\u8bed\u6599\uff0c\u518d\u52a0\u4e0aCGED16\u3001CGED17\u3001CGED18\u7684\u6570\u636e\uff0c\u7ecf\u8fc7\u4ee5\u5b57\u5207\u5206\uff0c\u7e41\u4f53\u8f6c\u7b80\u4f53\uff0c\u6253\u4e71\u6570\u636e\u987a\u5e8f\u7684\u9884\u5904\u7406\u540e\uff0c\u751f\u6210\u7528\u4e8e\u7ea0\u9519\u7684\u719f\u8bed\u6599(nlpcc2018+hsk)\uff0c\u7f51\u76d8\u94fe\u63a5:https://pan.baidu.com/s/1BkDru60nQXaDVLRSr7ktfA  \u5bc6\u7801:m6fg [130\u4e07\u5bf9\u53e5\u5b50\uff0c215MB]\n\n## \u8d21\u732e\u53ca\u4f18\u5316\u70b9\n\n- [x] \u4f18\u5316\u5f62\u4f3c\u5b57\u5b57\u5178\uff0c\u63d0\u9ad8\u5f62\u4f3c\u5b57\u7ea0\u9519\u51c6\u786e\u7387\n- [x] \u6574\u7406\u4e2d\u6587\u7ea0\u9519\u8bad\u7ec3\u6570\u636e\uff0c\u4f7f\u7528seq2seq\u505a\u6df1\u5ea6\u4e2d\u6587\u7ea0\u9519\u6a21\u578b\n- [x] \u6dfb\u52a0\u4e2d\u6587\u8bed\u6cd5\u9519\u8bef\u68c0\u6d4b\u53ca\u7ea0\u6b63\u80fd\u529b\n- [x] \u89c4\u5219\u65b9\u6cd5\u6dfb\u52a0\u7528\u6237\u81ea\u5b9a\u4e49\u7ea0\u9519\u96c6\uff0c\u5e76\u5c06\u5176\u7ea0\u9519\u4f18\u5148\u5ea6\u8c03\u4e3a\u6700\u9ad8\n- [x] seq2seq_attention \u6dfb\u52a0dropout\uff0c\u51cf\u5c11\u8fc7\u62df\u5408\n- [x] \u5728seq2seq\u6a21\u578b\u6846\u67b6\u4e0a\uff0c\u65b0\u589ePointer-generator network\u3001Beam search\u3001Unknown words replacement\u3001Coverage mechanism\u7b49\u7279\u6027\n- [x] \u66f4\u65b0bert\u7684fine-tuned\u4f7f\u7528wiki\uff0c\u9002\u914dtransformers 2.2.1\u5e93\n- [x] \u5347\u7ea7\u4ee3\u7801\uff0c\u517c\u5bb9TensorFlow 2.0\u5e93\n- [x] \u5347\u7ea7bert\u7ea0\u9519\u903b\u8f91\uff0c\u63d0\u5347\u57fa\u4e8emask\u7684\u7ea0\u9519\u6548\u679c\n\n## \u8ba8\u8bba\u7fa4\n\n\u5fae\u4fe1\u4ea4\u6d41\u7fa4\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u52a0\u5165\u6c9f\u901aNLP\u6587\u672c\u7ea0\u9519\u76f8\u5173\u6280\u672f\uff0cissues\u4e0a\u56de\u590d\u4e0d\u53ca\u65f6\u4e5f\u53ef\u4ee5\u5728\u7fa4\u91cc\u9762\u63d0\u95ee\u3002\n\nPS: \u7531\u4e8e\u5fae\u4fe1\u7fa4\u6ee1100\u4eba\u4e86\uff0c\u626b\u7801\u52a0\u4e0d\u4e86\u3002\u626b\u6211\u5fae\u4fe1\u4e8c\u7ef4\u7801\uff0c\u6216\u8005\u641c\u7d22\u6211*\u5fae\u4fe1\u53f7\uff1axuming624, \u5907\u6ce8\uff1a\u4e2a\u4eba\u540d\u79f0-NLP\u7ea0\u9519* \u8fdb\u7fa4\u3002\n\n<img src=\"./docs/git_image/wechat.jpeg\" width=\"200\" />\n\n\n## \u53c2\u8003\n\n* [\u57fa\u4e8e\u6587\u6cd5\u6a21\u578b\u7684\u4e2d\u6587\u7ea0\u9519\u7cfb\u7edf](https://blog.csdn.net/mingzai624/article/details/82390382)\n* [Norvig\u2019s spelling corrector](http://norvig.com/spell-correct.html)\n* [Chinese Spelling Error Detection and Correction Based on Language Model, Pronunciation, and Shape[Yu, 2013]](http://www.aclweb.org/anthology/W/W14/W14-6835.pdf)\n* [Chinese Spelling Checker Based on Statistical Machine Translation[Chiu, 2013]](http://www.aclweb.org/anthology/O/O13/O13-1005.pdf)\n* [Chinese Word Spelling Correction Based on Rule Induction[yeh, 2014]](http://aclweb.org/anthology/W14-6822)\n* [Neural Language Correction with Character-Based Attention[Ziang Xie, 2016]](https://arxiv.org/pdf/1603.09727.pdf)\n* [Chinese Spelling Check System Based on Tri-gram Model[Qiang Huang, 2014]](http://www.anthology.aclweb.org/W/W14/W14-6827.pdf)\n* [Neural Abstractive Text Summarization with Sequence-to-Sequence Models[Tian Shi, 2018]](https://arxiv.org/abs/1812.02303)\n* [\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u4e2d\u6587\u6587\u672c\u81ea\u52a8\u6821\u5bf9\u7814\u7a76\u4e0e\u5b9e\u73b0[\u6768\u5b97\u9716, 2019]](https://github.com/shibing624/pycorrector/blob/master/docs/\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u4e2d\u6587\u6587\u672c\u81ea\u52a8\u6821\u5bf9\u7814\u7a76\u4e0e\u5b9e\u73b0.pdf)\n* [A Sequence to Sequence Learning for Chinese Grammatical Error Correction[Hongkai Ren, 2018]](https://link.springer.com/chapter/10.1007/978-3-319-99501-4_36)\n\n\n\n----\n\n# pycorrector\nChinese text error correction tool. \n\n\n**pycorrector** Use the language model to detect errors, pinyin feature and shape feature to correct chinese text \nerror, it can be used for Chinese Pinyin and stroke input method.\n\n## Features\n### language model\n* Kenlm\n* RNNLM\n\n## Usage\n\n### install\n* pip install pycorrector / pip install pycorrector \n* Or download https://github.com/shibing624/pycorrector, Unzip and run: python setup.py install\n\n### correct  \ninput:\n```\nimport pycorrector\n\ncorrected_sent, detail = pycorrector.correct('\u5c11\u5148\u961f\u5458\u56e0\u8be5\u4e3a\u8001\u4eba\u8ba9\u5750')\nprint(corrected_sent, detail)\n\n```\n\noutput:\n```\n\u5c11\u5148\u961f\u5458\u5e94\u8be5\u4e3a\u8001\u4eba\u8ba9\u5ea7 [[('\u56e0\u8be5', '\u5e94\u8be5', 4, 6)], [('\u5750', '\u5ea7', 10, 11)]]\n```\n\n\n### Future work\n1. P(c), the language model. We could create a better language model by collecting more data, and perhaps by using a \nlittle English morphology (such as adding \"ility\" or \"able\" to the end of a word).\n\n2. P(w|c), the error model. So far, the error model has been trivial: the smaller the edit distance, the smaller the \nerror.\nClearly we could use a better model of the cost of edits. get a corpus of spelling errors, and count how likely it is\nto make each insertion, deletion, or alteration, given the surrounding characters. \n\n3. It turns out that in many cases it is difficult to make a decision based only on a single word. This is most \nobvious when there is a word that appears in the dictionary, but the test set says it should be corrected to another \nword anyway:\ncorrection('where') => 'where' (123); expected 'were' (452)\nWe can't possibly know that correction('where') should be 'were' in at least one case, but should remain 'where' in \nother cases. But if the query had been correction('They where going') then it seems likely that \"where\" should be \ncorrected to \"were\".\n\n4. Finally, we could improve the implementation by making it much faster, without changing the results. We could \nre-implement in a compiled language rather than an interpreted one. We could cache the results of computations so \nthat we don't have to repeat them multiple times. \nOne word of advice: before attempting any speed optimizations, profile carefully to see where the time is actually \ngoing.\n\n\n### Further Reading\n* [Roger Mitton has a survey article on spell checking.](http://www.dcs.bbk.ac.uk/~roger/spellchecking.html)\n\n# Reference\n1. [Norvig\u2019s spelling corrector](http://norvig.com/spell-correct.html)\n2. [Norvig\u2019s spelling corrector(java version)](http://raelcunha.com/spell-correct/)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shibing624/pycorrector", "keywords": "NLP,correction,Chinese error corrector,corrector", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "pycorrector", "package_url": "https://pypi.org/project/pycorrector/", "platform": "Windows", "project_url": "https://pypi.org/project/pycorrector/", "project_urls": {"Homepage": "https://github.com/shibing624/pycorrector"}, "release_url": "https://pypi.org/project/pycorrector/0.2.7/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Chinese Text Error Corrector", "version": "0.2.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/13a8af7f4203c499265506f6c8f406bb807e3fb3/646f63732f6c6f676f2e737667\"></p>\n<p><a href=\"https://badge.fury.io/py/pycorrector\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e539dcae52a5b678e3c6c17952174a37b92cce3/68747470733a2f2f62616467652e667572792e696f2f70792f7079636f72726563746f722e737667\"></a>\n<a href=\"CONTRIBUTING.md\" rel=\"nofollow\"><img alt=\"Contributions welcome\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/220aa3f89f789ec18b3b3c9096a2a11ab994fd90/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e737667\"></a>\n<a href=\"https://github.com/shibing624/pycorrector/LICENSE\" rel=\"nofollow\"><img alt=\"License Apache 2.0\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bad0ad2a7195b40874e3a10488118122d89489fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322e302d626c75652e737667\"></a>\n<img alt=\"Language\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d4ddc9eec0c4f96d5a03c1318a6abe34dabef59/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c616e67756167652d507974686f6e2d626c75652e737667\">\n<img alt=\"Python3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/adf8fafec4715a2d0ee2a829c5c820dd9b72269d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d332e582d7265642e737667\"></p>\n<h1>pycorrector</h1>\n<p>\u4e2d\u6587\u6587\u672c\u7ea0\u9519\u5de5\u5177\u3002\u97f3\u4f3c\u3001\u5f62\u4f3c\u9519\u5b57\uff08\u6216\u53d8\u4f53\u5b57\uff09\u7ea0\u6b63\uff0c\u53ef\u7528\u4e8e\u4e2d\u6587\u62fc\u97f3\u3001\u7b14\u753b\u8f93\u5165\u6cd5\u7684\u9519\u8bef\u7ea0\u6b63\u3002python3.6\u5f00\u53d1\u3002</p>\n<p><strong>pycorrector</strong>\u4f9d\u636e\u8bed\u8a00\u6a21\u578b\u68c0\u6d4b\u9519\u522b\u5b57\u4f4d\u7f6e\uff0c\u901a\u8fc7\u62fc\u97f3\u97f3\u4f3c\u7279\u5f81\u3001\u7b14\u753b\u4e94\u7b14\u7f16\u8f91\u8ddd\u79bb\u7279\u5f81\u53ca\u8bed\u8a00\u6a21\u578b\u56f0\u60d1\u5ea6\u7279\u5f81\u7ea0\u6b63\u9519\u522b\u5b57\u3002</p>\n<h2>Demo</h2>\n<p><a href=\"https://www.borntowin.cn/product/corrector\" rel=\"nofollow\">https://www.borntowin.cn/product/corrector</a></p>\n<h2>Question</h2>\n<p>\u4e2d\u6587\u6587\u672c\u7ea0\u9519\u4efb\u52a1\uff0c\u5e38\u89c1\u9519\u8bef\u7c7b\u578b\u5305\u62ec\uff1a</p>\n<ul>\n<li>\u8c10\u97f3\u5b57\u8bcd\uff0c\u5982 \u914d\u526f\u773c\u775b-\u914d\u526f\u773c\u955c</li>\n<li>\u6df7\u6dc6\u97f3\u5b57\u8bcd\uff0c\u5982 \u6d41\u6d6a\u7ec7\u5973-\u725b\u90ce\u7ec7\u5973</li>\n<li>\u5b57\u8bcd\u987a\u5e8f\u98a0\u5012\uff0c\u5982 \u4f0d\u8fea\u827e\u4f26-\u827e\u4f26\u4f0d\u8fea</li>\n<li>\u5b57\u8bcd\u8865\u5168\uff0c\u5982 \u7231\u6709\u5929\u610f-\u5047\u5982\u7231\u6709\u5929\u610f</li>\n<li>\u5f62\u4f3c\u5b57\u9519\u8bef\uff0c\u5982 \u9ad8\u6881-\u9ad8\u7cb1</li>\n<li>\u4e2d\u6587\u62fc\u97f3\u5168\u62fc\uff0c\u5982 xingfu-\u5e78\u798f</li>\n<li>\u4e2d\u6587\u62fc\u97f3\u7f29\u5199\uff0c\u5982 sz-\u6df1\u5733</li>\n<li>\u8bed\u6cd5\u9519\u8bef\uff0c\u5982 \u60f3\u8c61\u96be\u4ee5-\u96be\u4ee5\u60f3\u8c61</li>\n</ul>\n<p>\u5f53\u7136\uff0c\u9488\u5bf9\u4e0d\u540c\u4e1a\u52a1\u573a\u666f\uff0c\u8fd9\u4e9b\u95ee\u9898\u5e76\u4e0d\u4e00\u5b9a\u5168\u90e8\u5b58\u5728\uff0c\u6bd4\u5982\u8f93\u5165\u6cd5\u4e2d\u9700\u8981\u5904\u7406\u524d\u56db\u79cd\uff0c\u641c\u7d22\u5f15\u64ce\u9700\u8981\u5904\u7406\u6240\u6709\u7c7b\u578b\uff0c\u8bed\u97f3\u8bc6\u522b\u540e\u6587\u672c\u7ea0\u9519\u53ea\u9700\u8981\u5904\u7406\u524d\u4e24\u79cd\uff0c\n\u5176\u4e2d'\u5f62\u4f3c\u5b57\u9519\u8bef'\u4e3b\u8981\u9488\u5bf9\u4e94\u7b14\u6216\u8005\u7b14\u753b\u624b\u5199\u8f93\u5165\u7b49\u3002</p>\n<h2>Solution</h2>\n<h3>\u89c4\u5219\u7684\u89e3\u51b3\u601d\u8def</h3>\n<ol>\n<li>\u4e2d\u6587\u7ea0\u9519\u5206\u4e3a\u4e24\u6b65\u8d70\uff0c\u7b2c\u4e00\u6b65\u662f\u9519\u8bef\u68c0\u6d4b\uff0c\u7b2c\u4e8c\u6b65\u662f\u9519\u8bef\u7ea0\u6b63\uff1b</li>\n<li>\u9519\u8bef\u68c0\u6d4b\u90e8\u5206\u5148\u901a\u8fc7\u7ed3\u5df4\u4e2d\u6587\u5206\u8bcd\u5668\u5207\u8bcd\uff0c\u7531\u4e8e\u53e5\u5b50\u4e2d\u542b\u6709\u9519\u522b\u5b57\uff0c\u6240\u4ee5\u5207\u8bcd\u7ed3\u679c\u5f80\u5f80\u4f1a\u6709\u5207\u5206\u9519\u8bef\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u4ece\u5b57\u7c92\u5ea6\u548c\u8bcd\u7c92\u5ea6\u4e24\u65b9\u9762\u68c0\u6d4b\u9519\u8bef\uff0c\n\u6574\u5408\u8fd9\u4e24\u79cd\u7c92\u5ea6\u7684\u7591\u4f3c\u9519\u8bef\u7ed3\u679c\uff0c\u5f62\u6210\u7591\u4f3c\u9519\u8bef\u4f4d\u7f6e\u5019\u9009\u96c6\uff1b</li>\n<li>\u9519\u8bef\u7ea0\u6b63\u90e8\u5206\uff0c\u662f\u904d\u5386\u6240\u6709\u7684\u7591\u4f3c\u9519\u8bef\u4f4d\u7f6e\uff0c\u5e76\u4f7f\u7528\u97f3\u4f3c\u3001\u5f62\u4f3c\u8bcd\u5178\u66ff\u6362\u9519\u8bef\u4f4d\u7f6e\u7684\u8bcd\uff0c\u7136\u540e\u901a\u8fc7\u8bed\u8a00\u6a21\u578b\u8ba1\u7b97\u53e5\u5b50\u56f0\u60d1\u5ea6\uff0c\u5bf9\u6240\u6709\u5019\u9009\u96c6\u7ed3\u679c\u6bd4\u8f83\u5e76\u6392\u5e8f\uff0c\u5f97\u5230\u6700\u4f18\u7ea0\u6b63\u8bcd\u3002</li>\n</ol>\n<h3>\u6df1\u5ea6\u6a21\u578b\u7684\u89e3\u51b3\u601d\u8def</h3>\n<ol>\n<li>\u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u6a21\u578b\u53ef\u4ee5\u907f\u514d\u4eba\u5de5\u63d0\u53d6\u7279\u5f81\uff0c\u51cf\u5c11\u4eba\u5de5\u5de5\u4f5c\u91cf\uff0cRNN\u5e8f\u5217\u6a21\u578b\u5bf9\u6587\u672c\u4efb\u52a1\u62df\u5408\u80fd\u529b\u5f3a\uff0crnn_attention\u5728\u82f1\u6587\u6587\u672c\u7ea0\u9519\u6bd4\u8d5b\u4e2d\u53d6\u5f97\u7b2c\u4e00\u540d\u6210\u7ee9\uff0c\u8bc1\u660e\u5e94\u7528\u6548\u679c\u4e0d\u9519\uff1b</li>\n<li>CRF\u4f1a\u8ba1\u7b97\u5168\u5c40\u6700\u4f18\u8f93\u51fa\u8282\u70b9\u7684\u6761\u4ef6\u6982\u7387\uff0c\u5bf9\u53e5\u5b50\u4e2d\u7279\u5b9a\u9519\u8bef\u7c7b\u578b\u7684\u68c0\u6d4b\uff0c\u4f1a\u6839\u636e\u6574\u53e5\u8bdd\u5224\u5b9a\u8be5\u9519\u8bef\uff0c\u963f\u91cc\u53c2\u8d5b2016\u4e2d\u6587\u8bed\u6cd5\u7ea0\u9519\u4efb\u52a1\u5e76\u53d6\u5f97\u7b2c\u4e00\u540d\uff0c\u8bc1\u660e\u5e94\u7528\u6548\u679c\u4e0d\u9519\uff1b</li>\n<li>seq2seq\u6a21\u578b\u662f\u4f7f\u7528encoder-decoder\u7ed3\u6784\u89e3\u51b3\u5e8f\u5217\u8f6c\u6362\u95ee\u9898\uff0c\u76ee\u524d\u5728\u5e8f\u5217\u8f6c\u6362\u4efb\u52a1\u4e2d\uff08\u5982\u673a\u5668\u7ffb\u8bd1\u3001\u5bf9\u8bdd\u751f\u6210\u3001\u6587\u672c\u6458\u8981\u3001\u56fe\u50cf\u63cf\u8ff0\uff09\u4f7f\u7528\u6700\u5e7f\u6cdb\u3001\u6548\u679c\u6700\u597d\u7684\u6a21\u578b\u4e4b\u4e00\u3002</li>\n</ol>\n<h2>Feature</h2>\n<h3>\u6a21\u578b</h3>\n<ul>\n<li>kenlm\uff1akenlm\u7edf\u8ba1\u8bed\u8a00\u6a21\u578b\u5de5\u5177</li>\n<li>rnn_attention\u6a21\u578b\uff1a\u53c2\u8003Stanford University\u7684nlc\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u662f\u53c2\u52a02014\u82f1\u6587\u6587\u672c\u7ea0\u9519\u6bd4\u8d5b\u5e76\u53d6\u5f97\u7b2c\u4e00\u540d\u7684\u65b9\u6cd5</li>\n<li>rnn_crf\u6a21\u578b\uff1a\u53c2\u8003\u963f\u91cc\u5df4\u5df42016\u53c2\u8d5b\u4e2d\u6587\u8bed\u6cd5\u7ea0\u9519\u6bd4\u8d5bCGED2018\u5e76\u53d6\u5f97\u7b2c\u4e00\u540d\u7684\u65b9\u6cd5(\u6574\u7406\u4e2d)</li>\n<li>seq2seq_attention\u6a21\u578b\uff1a\u5728seq2seq\u6a21\u578b\u52a0\u4e0aattention\u673a\u5236\uff0c\u5bf9\u4e8e\u957f\u6587\u672c\u6548\u679c\u66f4\u597d\uff0c\u6a21\u578b\u66f4\u5bb9\u6613\u6536\u655b\uff0c\u4f46\u5bb9\u6613\u8fc7\u62df\u5408</li>\n<li>transformer\u6a21\u578b\uff1a\u5168attention\u7684\u7ed3\u6784\u4ee3\u66ff\u4e86lstm\u7528\u4e8e\u89e3\u51b3sequence to sequence\u95ee\u9898\uff0c\u8bed\u4e49\u7279\u5f81\u63d0\u53d6\u6548\u679c\u66f4\u597d</li>\n<li>bert\u6a21\u578b\uff1a\u4e2d\u6587fine-tuned\u6a21\u578b\uff0c\u4f7f\u7528MASK\u7279\u5f81\u7ea0\u6b63\u9519\u5b57</li>\n<li>conv_seq2seq\u6a21\u578b\uff1a\u57fa\u4e8eFacebook\u51fa\u54c1\u7684fairseq\uff0c\u5317\u4eac\u8bed\u8a00\u5927\u5b66\u56e2\u961f\u6539\u8fdbConvS2S\u6a21\u578b\u7528\u4e8e\u4e2d\u6587\u7ea0\u9519\uff0c\u5728NLPCC-2018\u7684\u4e2d\u6587\u8bed\u6cd5\u7ea0\u9519\u6bd4\u8d5b\u4e2d\uff0c\u662f\u552f\u4e00\u4f7f\u7528\u5355\u6a21\u578b\u5e76\u53d6\u5f97\u7b2c\u4e09\u540d\u7684\u6210\u7ee9</li>\n</ul>\n<h3>\u9519\u8bef\u68c0\u6d4b</h3>\n<ul>\n<li>\u5b57\u7c92\u5ea6\uff1a\u8bed\u8a00\u6a21\u578b\u56f0\u60d1\u5ea6\uff08ppl\uff09\u68c0\u6d4b\u67d0\u5b57\u7684\u4f3c\u7136\u6982\u7387\u503c\u4f4e\u4e8e\u53e5\u5b50\u6587\u672c\u5e73\u5747\u503c\uff0c\u5219\u5224\u5b9a\u8be5\u5b57\u662f\u7591\u4f3c\u9519\u522b\u5b57\u7684\u6982\u7387\u5927\u3002</li>\n<li>\u8bcd\u7c92\u5ea6\uff1a\u5207\u8bcd\u540e\u4e0d\u5728\u8bcd\u5178\u4e2d\u7684\u8bcd\u662f\u7591\u4f3c\u9519\u8bcd\u7684\u6982\u7387\u5927\u3002</li>\n</ul>\n<h3>\u9519\u8bef\u7ea0\u6b63</h3>\n<ul>\n<li>\u901a\u8fc7\u9519\u8bef\u68c0\u6d4b\u5b9a\u4f4d\u6240\u6709\u7591\u4f3c\u9519\u8bef\u540e\uff0c\u53d6\u6240\u6709\u7591\u4f3c\u9519\u5b57\u7684\u97f3\u4f3c\u3001\u5f62\u4f3c\u5019\u9009\u8bcd\uff0c</li>\n<li>\u4f7f\u7528\u5019\u9009\u8bcd\u66ff\u6362\uff0c\u57fa\u4e8e\u8bed\u8a00\u6a21\u578b\u5f97\u5230\u7c7b\u4f3c\u7ffb\u8bd1\u6a21\u578b\u7684\u5019\u9009\u6392\u5e8f\u7ed3\u679c\uff0c\u5f97\u5230\u6700\u4f18\u7ea0\u6b63\u8bcd\u3002</li>\n</ul>\n<h3>\u601d\u8003</h3>\n<ol>\n<li>\u73b0\u5728\u7684\u5904\u7406\u624b\u6bb5\uff0c\u5728\u8bcd\u7c92\u5ea6\u7684\u9519\u8bef\u53ec\u56de\u8fd8\u4e0d\u9519\uff0c\u4f46\u9519\u8bef\u7ea0\u6b63\u7684\u51c6\u786e\u7387\u8fd8\u6709\u5f85\u63d0\u9ad8\uff0c\u66f4\u591a\u4f18\u8d28\u7684\u7ea0\u9519\u96c6\u53ca\u7ea0\u9519\u8bcd\u5e93\u4f1a\u6709\u63d0\u5347\uff0c\u6211\u66f4\u5e0c\u671b\u7b97\u6cd5\u4e0a\u6709\u66f4\u5927\u7684\u7a81\u7834\u3002</li>\n<li>\u53e6\u5916\uff0c\u73b0\u5728\u7684\u6587\u672c\u9519\u8bef\u4e0d\u518d\u5c40\u9650\u4e8e\u5b57\u8bcd\u7c92\u5ea6\u4e0a\u7684\u62fc\u5199\u9519\u8bef\uff0c\u9700\u8981\u63d0\u9ad8\u4e2d\u6587\u8bed\u6cd5\u9519\u8bef\u68c0\u6d4b\uff08CGED, Chinese Grammar Error Diagnosis\uff09\u53ca\u7ea0\u6b63\u80fd\u529b\uff0c\u5217\u5728TODO\u4e2d\uff0c\u540e\u7eed\u8c03\u7814\u3002</li>\n</ol>\n<h2>Install</h2>\n<ul>\n<li>\u5168\u81ea\u52a8\u5b89\u88c5\uff1apip install pycorrector</li>\n<li>\u534a\u81ea\u52a8\u5b89\u88c5\uff1a</li>\n</ul>\n<pre><code>git clone https://github.com/shibing624/pycorrector.git\ncd pycorrector\npython setup.py install\n</code></pre>\n<p>\u901a\u8fc7\u4ee5\u4e0a\u4e24\u79cd\u65b9\u6cd5\u7684\u4efb\u4f55\u4e00\u79cd\u5b8c\u6210\u5b89\u88c5\u90fd\u53ef\u4ee5\u3002\u5982\u679c\u4e0d\u60f3\u5b89\u88c5\uff0c\u53ef\u4ee5\u4e0b\u8f7d<a href=\"https://github.com/shibing624/pycorrector/archive/master.zip\" rel=\"nofollow\">github\u6e90\u7801\u5305</a>\uff0c\u5b89\u88c5\u4e0b\u9762\u4f9d\u8d56\u518d\u4f7f\u7528\u3002</p>\n<h4>\u5b89\u88c5\u4f9d\u8d56</h4>\n<ul>\n<li>kenlm\u5b89\u88c5</li>\n</ul>\n<pre><code>pip install https://github.com/kpu/kenlm/archive/master.zip\n</code></pre>\n<ul>\n<li>\u5176\u4ed6\u5e93\u5305\u5b89\u88c5</li>\n</ul>\n<pre><code>pip install -r requirements.txt\n</code></pre>\n<h2>Usage</h2>\n<ul>\n<li>\u6587\u672c\u7ea0\u9519</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pycorrector</span>\n\n<span class=\"n\">corrected_sent</span><span class=\"p\">,</span> <span class=\"n\">detail</span> <span class=\"o\">=</span> <span class=\"n\">pycorrector</span><span class=\"o\">.</span><span class=\"n\">correct</span><span class=\"p\">(</span><span class=\"s1\">'\u5c11\u5148\u961f\u5458\u56e0\u8be5\u4e3a\u8001\u4eba\u8ba9\u5750'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">corrected_sent</span><span class=\"p\">,</span> <span class=\"n\">detail</span><span class=\"p\">)</span>\n</pre>\n<p>output:</p>\n<pre><code>\u5c11\u5148\u961f\u5458\u5e94\u8be5\u4e3a\u8001\u4eba\u8ba9\u5ea7 [[('\u56e0\u8be5', '\u5e94\u8be5', 4, 6)], [('\u5750', '\u5ea7', 10, 11)]]\n</code></pre>\n<blockquote>\n<p>\u89c4\u5219\u65b9\u6cd5\u9ed8\u8ba4\u4f1a\u4ece\u8def\u5f84<code>~/.pycorrector/datasets/zh_giga.no_cna_cmn.prune01244.klm</code>\u52a0\u8f7dkenlm\u8bed\u8a00\u6a21\u578b\u6587\u4ef6\uff0c\u5982\u679c\u68c0\u6d4b\u6ca1\u6709\u8be5\u6587\u4ef6\uff0c\u5219\u7a0b\u5e8f\u4f1a\u81ea\u52a8\u8054\u7f51\u4e0b\u8f7d\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u624b\u52a8\u4e0b\u8f7d<a href=\"https://deepspeech.bj.bcebos.com/zh_lm/zh_giga.no_cna_cmn.prune01244.klm\" rel=\"nofollow\">\u6a21\u578b\u6587\u4ef6(2.8G)</a>\u5e76\u653e\u7f6e\u4e8e\u8be5\u4f4d\u7f6e\u3002</p>\n</blockquote>\n<ul>\n<li>\u9519\u8bef\u68c0\u6d4b</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pycorrector</span>\n\n<span class=\"n\">idx_errors</span> <span class=\"o\">=</span> <span class=\"n\">pycorrector</span><span class=\"o\">.</span><span class=\"n\">detect</span><span class=\"p\">(</span><span class=\"s1\">'\u5c11\u5148\u961f\u5458\u56e0\u8be5\u4e3a\u8001\u4eba\u8ba9\u5750'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">idx_errors</span><span class=\"p\">)</span>\n</pre>\n<p>output:</p>\n<pre><code>[['\u56e0\u8be5', 4, 6, 'word'], ['\u5750', 10, 11, 'char']]\n</code></pre>\n<blockquote>\n<p>\u8fd4\u56de\u7c7b\u578b\u662f<code>list</code>, <code>[error_word, begin_pos, end_pos, error_type]</code>\uff0c<code>pos</code>\u7d22\u5f15\u4f4d\u7f6e\u4ee50\u5f00\u59cb\u3002</p>\n</blockquote>\n<ul>\n<li>\u5173\u95ed\u5b57\u7c92\u5ea6\u7ea0\u9519</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pycorrector</span>\n\n<span class=\"n\">error_sentence_1</span> <span class=\"o\">=</span> <span class=\"s1\">'\u6211\u7684\u5589\u5499\u53d1\u708e\u4e86\u8981\u4e70\u70b9\u963f\u83ab\u7ec6\u6797\u5403'</span>\n<span class=\"n\">correct_sent</span> <span class=\"o\">=</span> <span class=\"n\">pycorrector</span><span class=\"o\">.</span><span class=\"n\">correct</span><span class=\"p\">(</span><span class=\"n\">error_sentence_1</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">correct_sent</span><span class=\"p\">)</span>\n</pre>\n<p>output:</p>\n<pre><code>'\u6211\u7684\u5589\u5499\u53d1\u708e\u4e86\u8981\u4e70\u70b9\u963f\u83ab\u897f\u6797\u5409', [['\u7ec6\u6797', '\u897f\u6797', 12, 14], ['\u5403', '\u5409', 14, 15]]\n</code></pre>\n<p>\u4e0a\u4f8b\u4e2d<code>\u5403</code>\u53d1\u751f\u8bef\u7ea0\uff0c\u5982\u4e0b\u4ee3\u7801\u5173\u95ed\u5b57\u7c92\u5ea6\u7ea0\u9519\uff1a</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pycorrector</span>\n\n<span class=\"n\">error_sentence_1</span> <span class=\"o\">=</span> <span class=\"s1\">'\u6211\u7684\u5589\u5499\u53d1\u708e\u4e86\u8981\u4e70\u70b9\u963f\u83ab\u7ec6\u6797\u5403'</span>\n<span class=\"n\">pycorrector</span><span class=\"o\">.</span><span class=\"n\">enable_char_error</span><span class=\"p\">(</span><span class=\"n\">enable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">correct_sent</span> <span class=\"o\">=</span> <span class=\"n\">pycorrector</span><span class=\"o\">.</span><span class=\"n\">correct</span><span class=\"p\">(</span><span class=\"n\">error_sentence_1</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">correct_sent</span><span class=\"p\">)</span>\n</pre>\n<p>output:</p>\n<pre><code>'\u6211\u7684\u5589\u5499\u53d1\u708e\u4e86\u8981\u4e70\u70b9\u963f\u83ab\u897f\u6797\u5403', [['\u7ec6\u6797', '\u897f\u6797', 12, 14]]\n</code></pre>\n<p>\u9ed8\u8ba4\u5b57\u7c92\u5ea6\u3001\u8bcd\u7c92\u5ea6\u7684\u7ea0\u9519\u90fd\u6253\u5f00\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u5355\u5b57\u9519\u8bef\u53d1\u751f\u8f83\u5c11\uff0c\u800c\u4e14\u5b57\u7c92\u5ea6\u7ea0\u9519\u51c6\u786e\u7387\u8f83\u4f4e\u3002\u5173\u95ed\u5b57\u7c92\u5ea6\u7ea0\u9519\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u7ea0\u9519\u51c6\u786e\u7387\uff0c\u63d0\u9ad8\u7ea0\u9519\u901f\u5ea6\u3002</p>\n<blockquote>\n<p>\u9ed8\u8ba4<code>enable_char_error</code>\u65b9\u6cd5\u7684<code>enable</code>\u53c2\u6570\u4e3a<code>True</code>\uff0c\u5373\u6253\u5f00\u9519\u5b57\u7ea0\u6b63\uff0c\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u53ec\u56de\u5b57\u7c92\u5ea6\u9519\u8bef\uff0c\u4f46\u662f\u6574\u4f53\u51c6\u786e\u7387\u4f1a\u4f4e\uff1b</p>\n</blockquote>\n<blockquote>\n<p>\u5982\u679c\u8ffd\u6c42\u51c6\u786e\u7387\u800c\u4e0d\u8ffd\u6c42\u53ec\u56de\u7387\u7684\u8bdd\uff0c\u5efa\u8bae\u5c06<code>enable</code>\u8bbe\u4e3a<code>False</code>\uff0c\u4ec5\u4f7f\u7528\u9519\u8bcd\u7ea0\u6b63\u3002</p>\n</blockquote>\n<ul>\n<li>\u52a0\u8f7d\u81ea\u5b9a\u4e49\u6df7\u6dc6\u96c6</li>\n</ul>\n<p>\u901a\u8fc7\u52a0\u8f7d\u81ea\u5b9a\u4e49\u6df7\u6dc6\u96c6\uff0c\u652f\u6301\u7528\u6237\u7ea0\u6b63\u5df2\u77e5\u7684\u9519\u8bef\uff0c\u5305\u62ec\u4e24\u65b9\u9762\u529f\u80fd\uff1a1\uff09\u9519\u8bef\u8865\u53ec\u56de\uff1b2\uff09\u8bef\u6740\u52a0\u767d\u3002</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pycorrector</span>\n\n<span class=\"n\">pycorrector</span><span class=\"o\">.</span><span class=\"n\">set_log_level</span><span class=\"p\">(</span><span class=\"s1\">'INFO'</span><span class=\"p\">)</span>\n<span class=\"n\">error_sentences</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'\u4e70iPhone\u5dee\uff0c\u8981\u591a\u5c11\u94b1'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'\u5171\u540c\u5b9e\u9645\u63a7\u5236\u4eba\u8427\u534e\u3001\u970d\u8363\u94e8\u3001\u5f20\u65d7\u5eb7'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n<span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">error_sentences</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pycorrector</span><span class=\"o\">.</span><span class=\"n\">correct</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">))</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'*'</span> <span class=\"o\">*</span> <span class=\"mi\">53</span><span class=\"p\">)</span>\n<span class=\"n\">pycorrector</span><span class=\"o\">.</span><span class=\"n\">set_custom_confusion_dict</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'./my_custom_confusion.txt'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">error_sentences</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pycorrector</span><span class=\"o\">.</span><span class=\"n\">correct</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">))</span>\n</pre>\n<p>output:</p>\n<pre><code>('\u4e70iPhone\u5dee\uff0c\u8981\u591a\u5c11\u94b1', [])   # \"iPhone\u5dee\"\u6f0f\u53ec\uff0c\u5e94\u8be5\u662f\"iphoneX\"\n('\u5171\u540c\u5b9e\u9645\u63a7\u5236\u4eba\u8427\u534e\u3001\u970d\u8363\u94e8\u3001\u5f20\u542f\u5eb7', [['\u5f20\u65d7\u5eb7', '\u5f20\u542f\u5eb7', 14, 17]]) # \"\u5f20\u542f\u5eb7\"\u8bef\u6740\uff0c\u5e94\u8be5\u4e0d\u7528\u7ea0\n*****************************************************\n('\u4e70iphoneX\uff0c\u8981\u591a\u5c11\u94b1', [['iphone\u5dee', 'iphoneX', 1, 8]])\n('\u5171\u540c\u5b9e\u9645\u63a7\u5236\u4eba\u8427\u534e\u3001\u970d\u8363\u94e8\u3001\u5f20\u65d7\u5eb7', [])\n</code></pre>\n<p>\u5177\u4f53demo\u89c1<a href=\"./examples/use_custom_confusion.py\" rel=\"nofollow\">example/use_custom_confusion.py</a>\uff0c\u5176\u4e2d<code>./my_custom_confusion.txt</code>\u7684\u5185\u5bb9\u683c\u5f0f\u5982\u4e0b\uff0c\u4ee5\u7a7a\u683c\u95f4\u9694\uff1a</p>\n<pre><code>iphone\u5dee iphoneX 100\n\u5f20\u65d7\u5eb7 \u5f20\u65d7\u5eb7\n</code></pre>\n<blockquote>\n<p><code>set_custom_confusion_dict</code>\u65b9\u6cd5\u7684<code>path</code>\u53c2\u6570\u4e3a\u7528\u6237\u81ea\u5b9a\u4e49\u6df7\u6dc6\u96c6\u6587\u4ef6\u8def\u5f84\u3002</p>\n</blockquote>\n<ul>\n<li>\u52a0\u8f7d\u81ea\u5b9a\u4e49\u8bed\u8a00\u6a21\u578b</li>\n</ul>\n<p>\u9ed8\u8ba4\u63d0\u4f9b\u4e0b\u8f7d\u5e76\u4f7f\u7528\u7684kenlm\u8bed\u8a00\u6a21\u578b<code>zh_giga.no_cna_cmn.prune01244.klm</code>\u6587\u4ef6\u662f2.8G\uff0c\u5185\u5b58\u8f83\u5c0f\u7684\u7535\u8111\u4f7f\u7528<code>pycorrector</code>\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u5403\u529b\u4e9b\u3002</p>\n<p>\u652f\u6301\u7528\u6237\u52a0\u8f7d\u81ea\u5df1\u8bad\u7ec3\u7684kenlm\u8bed\u8a00\u6a21\u578b\uff0c\u6216\u4f7f\u75282014\u7248\u4eba\u6c11\u65e5\u62a5\u6570\u636e\u8bad\u7ec3\u7684<a href=\"https://www.borntowin.cn/mm/emb_models/people_chars_lm.klm\" rel=\"nofollow\">\u6a21\u578b</a>\uff0c\u6a21\u578b\u5c0f\uff0820M\uff09\uff0c\u51c6\u786e\u7387\u4f4e\u4e9b\u3002</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycorrector</span> <span class=\"kn\">import</span> <span class=\"n\">Corrector</span>\n\n<span class=\"n\">pwd_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">))</span>\n<span class=\"n\">lm_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">pwd_path</span><span class=\"p\">,</span> <span class=\"s1\">'./people_chars_lm.klm'</span><span class=\"p\">)</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Corrector</span><span class=\"p\">(</span><span class=\"n\">language_model_path</span><span class=\"o\">=</span><span class=\"n\">lm_path</span><span class=\"p\">)</span>\n\n<span class=\"n\">corrected_sent</span><span class=\"p\">,</span> <span class=\"n\">detail</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">correct</span><span class=\"p\">(</span><span class=\"s1\">'\u5c11\u5148\u961f\u5458\u56e0\u8be5\u4e3a\u8001\u4eba\u8ba9\u5750'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">corrected_sent</span><span class=\"p\">,</span> <span class=\"n\">detail</span><span class=\"p\">)</span>\n</pre>\n<p>output:</p>\n<pre><code>\u5c11\u5148\u961f\u5458\u5e94\u8be5\u4e3a\u8001\u4eba\u8ba9\u5ea7 [[('\u56e0\u8be5', '\u5e94\u8be5', 4, 6)], [('\u5750', '\u5ea7', 10, 11)]]\n</code></pre>\n<p>\u5177\u4f53demo\u89c1<a href=\"./examples/load_custom_language_model.py\" rel=\"nofollow\">example/load_custom_language_model.py</a>\uff0c\u5176\u4e2d<code>./people_chars_lm.klm</code>\u662f\u81ea\u5b9a\u4e49\u8bed\u8a00\u6a21\u578b\u6587\u4ef6\u3002</p>\n<ul>\n<li>\u82f1\u6587\u62fc\u5199\u7ea0\u9519</li>\n</ul>\n<p>\u652f\u6301\u82f1\u6587\u5355\u8bcd\u7684\u62fc\u5199\u9519\u8bef\u7ea0\u6b63\u3002</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pycorrector</span>\n\n<span class=\"n\">sent_lst</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'what'</span><span class=\"p\">,</span> <span class=\"s1\">'hapenning'</span><span class=\"p\">,</span> <span class=\"s1\">'how'</span><span class=\"p\">,</span> <span class=\"s1\">'to'</span><span class=\"p\">,</span> <span class=\"s1\">'speling'</span><span class=\"p\">,</span> <span class=\"s1\">'it'</span><span class=\"p\">,</span> <span class=\"s1\">'you'</span><span class=\"p\">,</span> <span class=\"s1\">'can'</span><span class=\"p\">,</span> <span class=\"s1\">'gorrect'</span><span class=\"p\">,</span> <span class=\"s1\">'it'</span><span class=\"p\">]</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">sent_lst</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"s1\">'=&gt;'</span><span class=\"p\">,</span> <span class=\"n\">pycorrector</span><span class=\"o\">.</span><span class=\"n\">en_correct</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n</pre>\n<p>output:</p>\n<pre><code>what =&gt; what\nhapenning =&gt; happening\nhow =&gt; how\nto =&gt; to\nspeling =&gt; spelling\nit =&gt; it\nyou =&gt; you\ncan =&gt; can\ngorrect =&gt; correct\nit =&gt; it\n</code></pre>\n<ul>\n<li>\u4e2d\u6587\u7b80\u7e41\u4e92\u6362</li>\n</ul>\n<p>\u652f\u6301\u4e2d\u6587\u7e41\u4f53\u5230\u7b80\u4f53\u7684\u8f6c\u6362\uff0c\u548c\u7b80\u4f53\u5230\u7e41\u4f53\u7684\u8f6c\u6362\u3002</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pycorrector</span>\n\n<span class=\"n\">traditional_sentence</span> <span class=\"o\">=</span> <span class=\"s1\">'\u6182\u90c1\u7684\u81fa\u7063\u70cf\u9f9c'</span>\n<span class=\"n\">simplified_sentence</span> <span class=\"o\">=</span> <span class=\"n\">pycorrector</span><span class=\"o\">.</span><span class=\"n\">traditional2simplified</span><span class=\"p\">(</span><span class=\"n\">traditional_sentence</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">traditional_sentence</span><span class=\"p\">,</span> <span class=\"s1\">'=&gt;'</span><span class=\"p\">,</span> <span class=\"n\">simplified_sentence</span><span class=\"p\">)</span>\n\n<span class=\"n\">simplified_sentence</span> <span class=\"o\">=</span> <span class=\"s1\">'\u5fe7\u90c1\u7684\u53f0\u6e7e\u4e4c\u9f9f'</span>\n<span class=\"n\">traditional_sentence</span> <span class=\"o\">=</span> <span class=\"n\">pycorrector</span><span class=\"o\">.</span><span class=\"n\">simplified2traditional</span><span class=\"p\">(</span><span class=\"n\">simplified_sentence</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">simplified_sentence</span><span class=\"p\">,</span> <span class=\"s1\">'=&gt;'</span><span class=\"p\">,</span> <span class=\"n\">traditional_sentence</span><span class=\"p\">)</span>\n</pre>\n<p>output:</p>\n<pre><code>\u6182\u90c1\u7684\u81fa\u7063\u70cf\u9f9c =&gt; \u5fe7\u90c1\u7684\u53f0\u6e7e\u4e4c\u9f9f\n\u5fe7\u90c1\u7684\u53f0\u6e7e\u4e4c\u9f9f =&gt; \u6182\u90c1\u7684\u81fa\u7063\u70cf\u9f9c\n</code></pre>\n<h3>Command Line Usage</h3>\n<ul>\n<li>\u547d\u4ee4\u884c\u6a21\u5f0f</li>\n</ul>\n<p>\u652f\u6301\u6279\u91cf\u6587\u672c\u7ea0\u9519\u3002</p>\n<pre><code>python -m pycorrector -h\nusage: __main__.py [-h] -o OUTPUT [-n] [-d] input\n\n@description:\n\npositional arguments:\n  input                 the input file path, file encode need utf-8.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUTPUT, --output OUTPUT\n                        the output file path.\n  -n, --no_char         disable char detect mode.\n  -d, --detail          print detail info\n\n</code></pre>\n<p>case\uff1a</p>\n<pre><code>python -m pycorrector input.txt -o out.txt -n -d\n</code></pre>\n<blockquote>\n<p>\u8f93\u5165\u6587\u4ef6\uff1a<code>input.txt</code>\uff1b\u8f93\u51fa\u6587\u4ef6\uff1a<code>out.txt</code>\uff1b\u5173\u95ed\u5b57\u7c92\u5ea6\u7ea0\u9519\uff1b\u6253\u5370\u8be6\u7ec6\u7ea0\u9519\u4fe1\u606f\uff1b\u7ea0\u9519\u7ed3\u679c\u4ee5<code>\\t</code>\u95f4\u9694</p>\n</blockquote>\n<h3>Evaluate</h3>\n<p>\u63d0\u4f9b\u8bc4\u4f30\u811a\u672c<a href=\"./pycorrector/utils/eval.py\" rel=\"nofollow\">pycorrector/utils/eval.py</a>\uff0c\u8be5\u811a\u672c\u6709\u4e24\u4e2a\u529f\u80fd\uff1a</p>\n<ul>\n<li>\u6784\u5efa\u8bc4\u4f30\u6837\u672c\u96c6\uff1a\u81ea\u52a8\u751f\u6210\u8bc4\u4f30\u96c6<a href=\"pycorrector/data/eval_corpus.json\" rel=\"nofollow\">pycorrector/data/eval_corpus.json</a>, \u5305\u62ec\u5b57\u7c92\u5ea6\u9519\u8bef100\u6761\u3001\u8bcd\u7c92\u5ea6\u9519\u8bef100\u6761\u3001\u8bed\u6cd5\u9519\u8bef100\u6761\uff0c\u6b63\u786e\u53e5\u5b50200\u6761\u3002\u7528\u6237\u53ef\u4ee5\u4fee\u6539\u6761\u6570\u751f\u6210\u5176\u4ed6\u8bc4\u4f30\u6837\u672c\u5206\u5e03\u3002</li>\n<li>\u8ba1\u7b97\u7ea0\u9519\u51c6\u53ec\u7387\uff1a\u91c7\u7528\u4fdd\u5b88\u8ba1\u7b97\u65b9\u5f0f\uff0c\u7b80\u5355\u628a\u7ea0\u9519\u4e4b\u540e\u4e0e\u6b63\u786e\u53e5\u5b50\u5b8c\u6210\u5339\u914d\u7684\u89c6\u4e3a\u6b63\u786e\uff0c\u5426\u5219\u4e3a\u9519\u3002</li>\n</ul>\n<p>\u6267\u884c\u8be5\u811a\u672c\u540e\u5f97\u5230\uff0c\u89c4\u5219\u65b9\u6cd5\u7ea0\u9519\u6548\u679c\u8bc4\u4f30\u5982\u4e0b\uff1a</p>\n<ul>\n<li>\u51c6\u786e\u7387\uff1a320/500=64%</li>\n<li>\u53ec\u56de\u7387\uff1a152/300=50.67%</li>\n</ul>\n<p>\u770b\u6765\u8fd8\u6709\u6bd4\u8f83\u5927\u7684\u63d0\u5347\u7a7a\u95f4\uff0c\u8bef\u6740\u548c\u6f0f\u53ec\u56de\u7684\u90fd\u6709\u3002</p>\n<h2>\u6df1\u5ea6\u6a21\u578b\u4f7f\u7528\u8bf4\u660e</h2>\n<h3>\u5b89\u88c5\u4f9d\u8d56</h3>\n<pre><code>pip install -r requirements-dev.txt\n</code></pre>\n<h3>\u4ecb\u7ecd</h3>\n<p>\u672c\u9879\u76ee\u7684\u521d\u8877\u4e4b\u4e00\u662f\u6bd4\u5bf9\u3001\u5171\u4eab\u5404\u79cd\u6587\u672c\u7ea0\u9519\u65b9\u6cd5\uff0c\u629b\u7816\u5f15\u7389\u7684\u4f5c\u7528\uff0c\u5982\u679c\u5bf9\u5927\u5bb6\u5728\u6587\u672c\u7ea0\u9519\u4efb\u52a1\u4e0a\u6709\u4e00\u70b9\u5c0f\u5c0f\u7684\u542f\u53d1\u5c31\u662f\u6211\u83ab\u5927\u7684\u8363\u5e78\u4e86\u3002</p>\n<p>\u4e3b\u8981\u4f7f\u7528\u4e86\u591a\u79cd\u6df1\u5ea6\u6a21\u578b\u5e94\u7528\u4e8e\u6587\u672c\u7ea0\u9519\u4efb\u52a1\uff0c\u5206\u522b\u662f\u524d\u9762<code>\u6a21\u578b</code>\u5c0f\u8282\u4ecb\u7ecd\u7684<code>conv_seq2seq</code>\u3001<code>seq2seq_attention</code>\u3001\n<code>transformer</code>\u3001<code>bert</code>\uff0c\u5404\u6a21\u578b\u65b9\u6cd5\u5185\u7f6e\u4e8e<code>pycorrector</code>\u6587\u4ef6\u5939\u4e0b\uff0c\u6709<code>README.md</code>\u8be6\u7ec6\u6307\u5bfc\uff0c\u5404\u6a21\u578b\u53ef\u72ec\u7acb\u8fd0\u884c\uff0c\u76f8\u4e92\u4e4b\u95f4\u65e0\u4f9d\u8d56\u3002</p>\n<h3>\u4f7f\u7528\u65b9\u6cd5</h3>\n<p>\u5404\u6a21\u578b\u5747\u53ef\u72ec\u7acb\u7684\u9884\u5904\u7406\u6570\u636e\u3001\u8bad\u7ec3\u3001\u9884\u6d4b\uff0c\u4e0b\u9762\u4ee5\u5176\u4e2d<code>seq2seq_attention</code>\u4e3a\u4f8b\uff1a</p>\n<p>seq2seq_attention \u6a21\u578b\u4f7f\u7528\u793a\u4f8b:</p>\n<h4>\u914d\u7f6e</h4>\n<p>\u901a\u8fc7\u4fee\u6539<code>config.py</code>\u3002</p>\n<h4>\u6570\u636e\u9884\u5904\u7406</h4>\n<pre><code>cd seq2seq_attention\n# \u6570\u636e\u9884\u5904\u7406\npython preprocess.py\n</code></pre>\n<p>\u81ea\u52a8\u65b0\u5efa\u6587\u4ef6\u5939output\uff0c\u5728output\u4e0b\u751f\u6210<code>train.txt</code>\u548c<code>test.txt</code>\u6587\u4ef6\uff0c\u4ee5TAB\uff08\"\\t\"\uff09\u95f4\u9694\u9519\u8bef\u6587\u672c\u548c\u7ea0\u6b63\u6587\u672c\uff0c\u6587\u672c\u4ee5\u7a7a\u683c\u5207\u5206\u8bcd\uff0c\u6587\u4ef6\u5185\u5bb9\u793a\u4f8b\uff1a</p>\n<pre><code>\u5e0c \u671b \u5c11 \u5438 \u70df \u3002\t \u5e0c \u671b \u70df \u6c11 \u4eec \u5c11 \u5438 \u70df \u3002\n\u4ee5 \u524d \uff0c \u5305 \u62ec \u4e2d \u56fd \uff0c \u6211 \u56fd \u4e5f \u662f \u3002\t\u4ee5 \u524d \uff0c \u4e0d \u4ec5 \u4e2d \u56fd \uff0c \u6211 \u56fd \u4e5f \u662f \u3002\n\u6211 \u73b0 \u5728 \u597d \u5f97 \u591a \u4e86 \u3002\t\u6211 \u73b0 \u5728 \u597d \u591a \u4e86 \u3002\n</code></pre>\n<h4>\u8bad\u7ec3</h4>\n<pre><code>python train.py\n</code></pre>\n<p>\u8bad\u7ec3\u8fc7\u7a0b\u622a\u56fe\uff1a\n<img alt=\"train image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ea6d1471603a9e21cecce9f86c73969b8d3a069/2e2f646f63732f6769745f696d6167652f736571327365715f747261696e2e706e67\"></p>\n<h4>\u9884\u6d4b</h4>\n<pre><code>python infer.py\n</code></pre>\n<p>\u9884\u6d4b\u8f93\u51fa\u6548\u679c\u6837\u4f8b\uff1a</p>\n<pre><code>input: \u5c11\u5148\u961f\u5458\u56e0\u8be5\u7ed9\u8001\u4eba\u8ba9\u5750 output: \u5c11\u5148\u961f\u5458\u56e0\u8be5\u7ed9\u8001\u4eba\u8ba9\u5ea7\ninput: \u5c11\u5148\u961f\u5458\u5e94\u8be5\u7ed9\u8001\u4eba\u8ba9\u5750 output: \u5c11\u5148\u961f\u5458\u5e94\u8be5\u7ed9\u8001\u4eba\u8ba9\u5ea7\ninput: \u6ca1\u6709\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c output: \u6ca1\u6709\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\uff0c\ninput: \u7531\u6211\u8d77\u5f00\u59cb\u505a\u3002 output: \u7531\u6211\u8d77\u5f00\u59cb\u505a\ninput: \u7531\u6211\u8d77\u5f00\u59cb\u505a output: \u7531\u6211\u5f00\u59cb\u505a\n</code></pre>\n<h2>\u81ea\u5b9a\u4e49\u8bed\u8a00\u6a21\u578b</h2>\n<p>\u8bed\u8a00\u6a21\u578b\u5bf9\u4e8e\u7ea0\u9519\u6b65\u9aa4\u81f3\u5173\u91cd\u8981\uff0c\u5f53\u524d\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f\u4ece\u5343\u5146\u4e2d\u6587\u6587\u672c\u8bad\u7ec3\u7684\u4e2d\u6587\u8bed\u8a00\u6a21\u578b<a href=\"https://deepspeech.bj.bcebos.com/zh_lm/zh_giga.no_cna_cmn.prune01244.klm\" rel=\"nofollow\">zh_giga.no_cna_cmn.prune01244.klm(2.8G)</a>\u3002</p>\n<p>\u5927\u5bb6\u53ef\u4ee5\u7528\u4e2d\u6587\u7ef4\u57fa\uff08\u7e41\u4f53\u8f6c\u7b80\u4f53\uff0cpycorrector.utils\u4e0b\u6709\u6b64\u529f\u80fd\uff09\u7b49\u8bed\u6599\u6570\u636e\u8bad\u7ec3\u901a\u7528\u7684\u8bed\u8a00\u6a21\u578b\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u7528\u4e13\u4e1a\u9886\u57df\u8bed\u6599\u8bad\u7ec3\u66f4\u4e13\u7528\u7684\u8bed\u8a00\u6a21\u578b\u3002\u66f4\u9002\u7528\u7684\u8bed\u8a00\u6a21\u578b\uff0c\u5bf9\u4e8e\u7ea0\u9519\u6548\u679c\u4f1a\u6709\u6bd4\u8f83\u597d\u7684\u63d0\u5347\u3002</p>\n<ol>\n<li>kenlm\u8bed\u8a00\u6a21\u578b\u8bad\u7ec3\u5de5\u5177\u7684\u4f7f\u7528\uff0c\u8bf7\u89c1\u535a\u5ba2\uff1a<a href=\"http://blog.csdn.net/mingzai624/article/details/79560063\" rel=\"nofollow\">http://blog.csdn.net/mingzai624/article/details/79560063</a></li>\n<li>\u9644\u4e0a\u8bad\u7ec3\u8bed\u6599&lt;\u4eba\u6c11\u65e5\u62a52014\u7248\u719f\u8bed\u6599&gt;\uff0c\u5305\u62ec\uff1a\n1\uff09\u6807\u51c6\u4eba\u5de5\u5207\u8bcd\u53ca\u8bcd\u6027\u6570\u636epeople2014.tar.gz\uff0c\n2\uff09\u672a\u5207\u8bcd\u6587\u672c\u6570\u636epeople2014_words.txt\uff0c\n3\uff09kenlm\u8bad\u7ec3\u5b57\u7c92\u5ea6\u8bed\u8a00\u6a21\u578b\u6587\u4ef6\u53ca\u5176\u4e8c\u8fdb\u5236\u6587\u4ef6people2014corpus_chars.arps/klm\uff0c\n4\uff09kenlm\u8bcd\u7c92\u5ea6\u8bed\u8a00\u6a21\u578b\u6587\u4ef6\u53ca\u5176\u4e8c\u8fdb\u5236\u6587\u4ef6people2014corpus_words.arps/klm\u3002</li>\n</ol>\n<p>\u4eba\u6c11\u65e5\u62a52014\u7248\u719f\u8bed\u6599\uff0c\u7f51\u76d8\u94fe\u63a5:<a href=\"https://pan.baidu.com/s/1971a5XLQsIpL0zL0zxuK2A\" rel=\"nofollow\">https://pan.baidu.com/s/1971a5XLQsIpL0zL0zxuK2A</a>  \u5bc6\u7801:uc11\u3002\u5c0a\u91cd\u7248\u6743\uff0c\u4f20\u64ad\u8bf7\u6ce8\u660e\u51fa\u5904\u3002</p>\n<h2>\u4e2d\u6587\u7ea0\u9519\u6570\u636e\u96c6</h2>\n<ol>\n<li>NLPCC 2018 GEC\u5b98\u65b9\u6570\u636e\u96c6<a href=\"http://tcci.ccf.org.cn/conference/2018/taskdata.php\" rel=\"nofollow\">NLPCC2018-GEC</a>\uff0c\n\u8bad\u7ec3\u96c6<a href=\"http://tcci.ccf.org.cn/conference/2018/dldoc/trainingdata02.tar.gz\" rel=\"nofollow\">trainingdata</a>[\u89e3\u538b\u540e114.5MB]\uff0c\u8be5\u6570\u636e\u683c\u5f0f\u662f\u539f\u59cb\u6587\u672c\uff0c\u672a\u505a\u5207\u8bcd\u5904\u7406\u3002</li>\n<li>\u6c49\u8bed\u6c34\u5e73\u8003\u8bd5\uff08HSK\uff09\u548clang8\u539f\u59cb\u5e73\u884c\u8bed\u6599<a href=\"https://pan.baidu.com/s/18JXm1KGmRu3Pe45jt2sYBQ\" rel=\"nofollow\">HSK+Lang8</a>[190MB]\uff0c\u8be5\u6570\u636e\u96c6\u5df2\u7ecf\u5207\u8bcd\uff0c\u53ef\u7528\u4f5c\u6570\u636e\u6269\u589e</li>\n<li>\u4ee5\u4e0a\u8bed\u6599\uff0c\u518d\u52a0\u4e0aCGED16\u3001CGED17\u3001CGED18\u7684\u6570\u636e\uff0c\u7ecf\u8fc7\u4ee5\u5b57\u5207\u5206\uff0c\u7e41\u4f53\u8f6c\u7b80\u4f53\uff0c\u6253\u4e71\u6570\u636e\u987a\u5e8f\u7684\u9884\u5904\u7406\u540e\uff0c\u751f\u6210\u7528\u4e8e\u7ea0\u9519\u7684\u719f\u8bed\u6599(nlpcc2018+hsk)\uff0c\u7f51\u76d8\u94fe\u63a5:<a href=\"https://pan.baidu.com/s/1BkDru60nQXaDVLRSr7ktfA\" rel=\"nofollow\">https://pan.baidu.com/s/1BkDru60nQXaDVLRSr7ktfA</a>  \u5bc6\u7801:m6fg [130\u4e07\u5bf9\u53e5\u5b50\uff0c215MB]</li>\n</ol>\n<h2>\u8d21\u732e\u53ca\u4f18\u5316\u70b9</h2>\n<ul>\n<li>[x] \u4f18\u5316\u5f62\u4f3c\u5b57\u5b57\u5178\uff0c\u63d0\u9ad8\u5f62\u4f3c\u5b57\u7ea0\u9519\u51c6\u786e\u7387</li>\n<li>[x] \u6574\u7406\u4e2d\u6587\u7ea0\u9519\u8bad\u7ec3\u6570\u636e\uff0c\u4f7f\u7528seq2seq\u505a\u6df1\u5ea6\u4e2d\u6587\u7ea0\u9519\u6a21\u578b</li>\n<li>[x] \u6dfb\u52a0\u4e2d\u6587\u8bed\u6cd5\u9519\u8bef\u68c0\u6d4b\u53ca\u7ea0\u6b63\u80fd\u529b</li>\n<li>[x] \u89c4\u5219\u65b9\u6cd5\u6dfb\u52a0\u7528\u6237\u81ea\u5b9a\u4e49\u7ea0\u9519\u96c6\uff0c\u5e76\u5c06\u5176\u7ea0\u9519\u4f18\u5148\u5ea6\u8c03\u4e3a\u6700\u9ad8</li>\n<li>[x] seq2seq_attention \u6dfb\u52a0dropout\uff0c\u51cf\u5c11\u8fc7\u62df\u5408</li>\n<li>[x] \u5728seq2seq\u6a21\u578b\u6846\u67b6\u4e0a\uff0c\u65b0\u589ePointer-generator network\u3001Beam search\u3001Unknown words replacement\u3001Coverage mechanism\u7b49\u7279\u6027</li>\n<li>[x] \u66f4\u65b0bert\u7684fine-tuned\u4f7f\u7528wiki\uff0c\u9002\u914dtransformers 2.2.1\u5e93</li>\n<li>[x] \u5347\u7ea7\u4ee3\u7801\uff0c\u517c\u5bb9TensorFlow 2.0\u5e93</li>\n<li>[x] \u5347\u7ea7bert\u7ea0\u9519\u903b\u8f91\uff0c\u63d0\u5347\u57fa\u4e8emask\u7684\u7ea0\u9519\u6548\u679c</li>\n</ul>\n<h2>\u8ba8\u8bba\u7fa4</h2>\n<p>\u5fae\u4fe1\u4ea4\u6d41\u7fa4\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u52a0\u5165\u6c9f\u901aNLP\u6587\u672c\u7ea0\u9519\u76f8\u5173\u6280\u672f\uff0cissues\u4e0a\u56de\u590d\u4e0d\u53ca\u65f6\u4e5f\u53ef\u4ee5\u5728\u7fa4\u91cc\u9762\u63d0\u95ee\u3002</p>\n<p>PS: \u7531\u4e8e\u5fae\u4fe1\u7fa4\u6ee1100\u4eba\u4e86\uff0c\u626b\u7801\u52a0\u4e0d\u4e86\u3002\u626b\u6211\u5fae\u4fe1\u4e8c\u7ef4\u7801\uff0c\u6216\u8005\u641c\u7d22\u6211<em>\u5fae\u4fe1\u53f7\uff1axuming624, \u5907\u6ce8\uff1a\u4e2a\u4eba\u540d\u79f0-NLP\u7ea0\u9519</em> \u8fdb\u7fa4\u3002</p>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7dec7ee0614d9812fdfbd6b821981315af4f9e85/2e2f646f63732f6769745f696d6167652f7765636861742e6a706567\" width=\"200\">\n<h2>\u53c2\u8003</h2>\n<ul>\n<li><a href=\"https://blog.csdn.net/mingzai624/article/details/82390382\" rel=\"nofollow\">\u57fa\u4e8e\u6587\u6cd5\u6a21\u578b\u7684\u4e2d\u6587\u7ea0\u9519\u7cfb\u7edf</a></li>\n<li><a href=\"http://norvig.com/spell-correct.html\" rel=\"nofollow\">Norvig\u2019s spelling corrector</a></li>\n<li><a href=\"http://www.aclweb.org/anthology/W/W14/W14-6835.pdf\" rel=\"nofollow\">Chinese Spelling Error Detection and Correction Based on Language Model, Pronunciation, and Shape[Yu, 2013]</a></li>\n<li><a href=\"http://www.aclweb.org/anthology/O/O13/O13-1005.pdf\" rel=\"nofollow\">Chinese Spelling Checker Based on Statistical Machine Translation[Chiu, 2013]</a></li>\n<li><a href=\"http://aclweb.org/anthology/W14-6822\" rel=\"nofollow\">Chinese Word Spelling Correction Based on Rule Induction[yeh, 2014]</a></li>\n<li><a href=\"https://arxiv.org/pdf/1603.09727.pdf\" rel=\"nofollow\">Neural Language Correction with Character-Based Attention[Ziang Xie, 2016]</a></li>\n<li><a href=\"http://www.anthology.aclweb.org/W/W14/W14-6827.pdf\" rel=\"nofollow\">Chinese Spelling Check System Based on Tri-gram Model[Qiang Huang, 2014]</a></li>\n<li><a href=\"https://arxiv.org/abs/1812.02303\" rel=\"nofollow\">Neural Abstractive Text Summarization with Sequence-to-Sequence Models[Tian Shi, 2018]</a></li>\n<li><a href=\"https://github.com/shibing624/pycorrector/blob/master/docs/%E5%9F%BA%E4%BA%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%AD%E6%96%87%E6%96%87%E6%9C%AC%E8%87%AA%E5%8A%A8%E6%A0%A1%E5%AF%B9%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%AE%9E%E7%8E%B0.pdf\" rel=\"nofollow\">\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u4e2d\u6587\u6587\u672c\u81ea\u52a8\u6821\u5bf9\u7814\u7a76\u4e0e\u5b9e\u73b0[\u6768\u5b97\u9716, 2019]</a></li>\n<li><a href=\"https://link.springer.com/chapter/10.1007/978-3-319-99501-4_36\" rel=\"nofollow\">A Sequence to Sequence Learning for Chinese Grammatical Error Correction[Hongkai Ren, 2018]</a></li>\n</ul>\n<hr>\n<h1>pycorrector</h1>\n<p>Chinese text error correction tool.</p>\n<p><strong>pycorrector</strong> Use the language model to detect errors, pinyin feature and shape feature to correct chinese text\nerror, it can be used for Chinese Pinyin and stroke input method.</p>\n<h2>Features</h2>\n<h3>language model</h3>\n<ul>\n<li>Kenlm</li>\n<li>RNNLM</li>\n</ul>\n<h2>Usage</h2>\n<h3>install</h3>\n<ul>\n<li>pip install pycorrector / pip install pycorrector</li>\n<li>Or download <a href=\"https://github.com/shibing624/pycorrector\" rel=\"nofollow\">https://github.com/shibing624/pycorrector</a>, Unzip and run: python setup.py install</li>\n</ul>\n<h3>correct</h3>\n<p>input:</p>\n<pre><code>import pycorrector\n\ncorrected_sent, detail = pycorrector.correct('\u5c11\u5148\u961f\u5458\u56e0\u8be5\u4e3a\u8001\u4eba\u8ba9\u5750')\nprint(corrected_sent, detail)\n\n</code></pre>\n<p>output:</p>\n<pre><code>\u5c11\u5148\u961f\u5458\u5e94\u8be5\u4e3a\u8001\u4eba\u8ba9\u5ea7 [[('\u56e0\u8be5', '\u5e94\u8be5', 4, 6)], [('\u5750', '\u5ea7', 10, 11)]]\n</code></pre>\n<h3>Future work</h3>\n<ol>\n<li>\n<p>P(c), the language model. We could create a better language model by collecting more data, and perhaps by using a\nlittle English morphology (such as adding \"ility\" or \"able\" to the end of a word).</p>\n</li>\n<li>\n<p>P(w|c), the error model. So far, the error model has been trivial: the smaller the edit distance, the smaller the\nerror.\nClearly we could use a better model of the cost of edits. get a corpus of spelling errors, and count how likely it is\nto make each insertion, deletion, or alteration, given the surrounding characters.</p>\n</li>\n<li>\n<p>It turns out that in many cases it is difficult to make a decision based only on a single word. This is most\nobvious when there is a word that appears in the dictionary, but the test set says it should be corrected to another\nword anyway:\ncorrection('where') =&gt; 'where' (123); expected 'were' (452)\nWe can't possibly know that correction('where') should be 'were' in at least one case, but should remain 'where' in\nother cases. But if the query had been correction('They where going') then it seems likely that \"where\" should be\ncorrected to \"were\".</p>\n</li>\n<li>\n<p>Finally, we could improve the implementation by making it much faster, without changing the results. We could\nre-implement in a compiled language rather than an interpreted one. We could cache the results of computations so\nthat we don't have to repeat them multiple times.\nOne word of advice: before attempting any speed optimizations, profile carefully to see where the time is actually\ngoing.</p>\n</li>\n</ol>\n<h3>Further Reading</h3>\n<ul>\n<li><a href=\"http://www.dcs.bbk.ac.uk/%7Eroger/spellchecking.html\" rel=\"nofollow\">Roger Mitton has a survey article on spell checking.</a></li>\n</ul>\n<h1>Reference</h1>\n<ol>\n<li><a href=\"http://norvig.com/spell-correct.html\" rel=\"nofollow\">Norvig\u2019s spelling corrector</a></li>\n<li><a href=\"http://raelcunha.com/spell-correct/\" rel=\"nofollow\">Norvig\u2019s spelling corrector(java version)</a></li>\n</ol>\n\n          </div>"}, "last_serial": 7077370, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "30a6d22c474dd7db3c8966f8888f86d8", "sha256": "0953a7225720d1dc2c5d4830f21245b606ffde5702ea87ce11ef9bd0c72d2ffd"}, "downloads": -1, "filename": "pycorrector-0.0.1.tar.gz", "has_sig": false, "md5_digest": "30a6d22c474dd7db3c8966f8888f86d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2969, "upload_time": "2018-03-06T05:40:04", "upload_time_iso_8601": "2018-03-06T05:40:04.699219Z", "url": "https://files.pythonhosted.org/packages/c8/60/3eb10dd5f380b28cb2d0b17531567c6dfc74fd06306a5d71d5ac981e49fa/pycorrector-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "832024085b067487ee2340d7feb99fae", "sha256": "5d267cee7d1f417e43226a705c8c6a48cb7eea528d5f1dd34635a30a7f1714a0"}, "downloads": -1, "filename": "pycorrector-0.0.2.tar.gz", "has_sig": false, "md5_digest": "832024085b067487ee2340d7feb99fae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2794, "upload_time": "2018-03-06T06:33:02", "upload_time_iso_8601": "2018-03-06T06:33:02.059279Z", "url": "https://files.pythonhosted.org/packages/e4/b8/bf4496e132d4bce5213360a119040fa0e47e498ccbf04261e46fb7e7d0a5/pycorrector-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "bfe1828f5403fef3b4da3d408a206f87", "sha256": "b0e8f08f6bebe4a74cb30f6bfc105f55144bf6f637dd4dd5858f3496db2dc637"}, "downloads": -1, "filename": "pycorrector-0.0.3.tar.gz", "has_sig": false, "md5_digest": "bfe1828f5403fef3b4da3d408a206f87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1980562, "upload_time": "2018-03-06T06:57:14", "upload_time_iso_8601": "2018-03-06T06:57:14.175669Z", "url": "https://files.pythonhosted.org/packages/44/f8/99ec0cac03af189ccfb11067e5808f302541fc25c46d684e85e997fd34a9/pycorrector-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "5a7141ed5eb9f7b88fc99b4050ccf5c5", "sha256": "c0ee553cd589c4e635838e73bce855a0dde6967ada3ee36f57abf2ddd8c32e71"}, "downloads": -1, "filename": "pycorrector-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5a7141ed5eb9f7b88fc99b4050ccf5c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12076, "upload_time": "2018-03-14T06:56:53", "upload_time_iso_8601": "2018-03-14T06:56:53.059896Z", "url": "https://files.pythonhosted.org/packages/b0/ea/28140921892124bdc955b2d68c53ff7978c222332985d1068b74e4c0ebc4/pycorrector-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a4cb6987ce49e8087589d44842b5b875", "sha256": "e29c14651044ba9b3ddb6510b267c6824030c58aa8806ac2ebc15d43105c2d2d"}, "downloads": -1, "filename": "pycorrector-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a4cb6987ce49e8087589d44842b5b875", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21284455, "upload_time": "2018-03-14T07:03:02", "upload_time_iso_8601": "2018-03-14T07:03:02.230677Z", "url": "https://files.pythonhosted.org/packages/1a/06/a0e2f568bfcf0796b2ed49843f21553bf4ff73096c5f307bf695a89d6d15/pycorrector-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "69d91544576e4eceaf46b60c976a3eb2", "sha256": "21e5869bd2818ae193aff233487cfa0feab213d496ca6e406aaf829ddac0ff1b"}, "downloads": -1, "filename": "pycorrector-0.1.2.tar.gz", "has_sig": false, "md5_digest": "69d91544576e4eceaf46b60c976a3eb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21282029, "upload_time": "2018-03-14T07:13:21", "upload_time_iso_8601": "2018-03-14T07:13:21.466404Z", "url": "https://files.pythonhosted.org/packages/f1/b6/4813fd7e1e3b48d45d45658c237848cd6f08af5d13ac14bbf5afc4a957fd/pycorrector-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "8e47a6e7777155e5ffeecf6568445b3d", "sha256": "e13cc9e58d76b044bd795d345ab643b19bc8da5e9c711e45abdb1111f9d5e087"}, "downloads": -1, "filename": "pycorrector-0.1.3.tar.gz", "has_sig": false, "md5_digest": "8e47a6e7777155e5ffeecf6568445b3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20428652, "upload_time": "2018-08-29T12:23:18", "upload_time_iso_8601": "2018-08-29T12:23:18.337669Z", "url": "https://files.pythonhosted.org/packages/33/c6/a5754eee5df764d020bec144d69a7d4d778ca43ce87a4955029c1ef7d6d2/pycorrector-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "26e0726325cf7f933de9edb6a6d3d9c6", "sha256": "ef6dd1b681f3f94d9ca936bc014abf4cd4d034d5c8dbd04a1bc578ebf866d2bc"}, "downloads": -1, "filename": "pycorrector-0.1.4.tar.gz", "has_sig": false, "md5_digest": "26e0726325cf7f933de9edb6a6d3d9c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16390001, "upload_time": "2018-09-17T14:03:42", "upload_time_iso_8601": "2018-09-17T14:03:42.516158Z", "url": "https://files.pythonhosted.org/packages/19/f7/9f923dde26714be6bf164eb915f91cda2b670704d410e65ff910e5098ae7/pycorrector-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "bcdcda29d6eeb950eb3015b4c57f6aa7", "sha256": "ce7db4aa8e411cbf6144cfdeedb65272407b975bf2106bd492115766e231bdcd"}, "downloads": -1, "filename": "pycorrector-0.1.5.tar.gz", "has_sig": false, "md5_digest": "bcdcda29d6eeb950eb3015b4c57f6aa7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16310614, "upload_time": "2018-09-19T07:25:03", "upload_time_iso_8601": "2018-09-19T07:25:03.431841Z", "url": "https://files.pythonhosted.org/packages/c4/f9/7163b8d3c2f1ecc476d736d154f6cf169ef176b782a7299266c87d455371/pycorrector-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "f588b3555479dd4d53c6b2505166def2", "sha256": "c747f63ebf2ce9303fadcbd4d54e8fd579a0ea45d631252448ad61b29a2164ff"}, "downloads": -1, "filename": "pycorrector-0.1.6.tar.gz", "has_sig": false, "md5_digest": "f588b3555479dd4d53c6b2505166def2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17856564, "upload_time": "2019-06-21T06:35:58", "upload_time_iso_8601": "2019-06-21T06:35:58.871015Z", "url": "https://files.pythonhosted.org/packages/0e/cc/595c3a70191b8b6a15a263685f2ba946d3ffbeea1a31962139223c5178db/pycorrector-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "ec6f46fb168241bd461a278465f2d4f0", "sha256": "cf8576c14edb39f76e63ca9ca89884162013c75bae4651a6804d28d1e02da2ba"}, "downloads": -1, "filename": "pycorrector-0.1.7.tar.gz", "has_sig": false, "md5_digest": "ec6f46fb168241bd461a278465f2d4f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17862074, "upload_time": "2019-06-27T03:28:20", "upload_time_iso_8601": "2019-06-27T03:28:20.804512Z", "url": "https://files.pythonhosted.org/packages/3e/8f/7fdc7a932162a6dca38a0d426ce0a37c7ba06584d9f59040c99b2e84c7cc/pycorrector-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "50675ac572fd4e5ef61eb8e482b425c0", "sha256": "c970f5fc2b50587f605b536cb80d190b7864316149a728491678428cddeaa988"}, "downloads": -1, "filename": "pycorrector-0.1.8.tar.gz", "has_sig": false, "md5_digest": "50675ac572fd4e5ef61eb8e482b425c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17862024, "upload_time": "2019-06-27T03:47:49", "upload_time_iso_8601": "2019-06-27T03:47:49.484933Z", "url": "https://files.pythonhosted.org/packages/0a/34/6f21eb6afad56a311cc0773edb506b50a8b7d3352657e3427cf8d67f9308/pycorrector-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "2cb95e1eee75da6f99a9ecdce34e8a86", "sha256": "809fa8796717a3b4d7151d1689efa7471e97cae9e925c83cdbbe9d051ab280b8"}, "downloads": -1, "filename": "pycorrector-0.1.9.tar.gz", "has_sig": false, "md5_digest": "2cb95e1eee75da6f99a9ecdce34e8a86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17872393, "upload_time": "2019-08-03T13:58:30", "upload_time_iso_8601": "2019-08-03T13:58:30.055150Z", "url": "https://files.pythonhosted.org/packages/59/68/80d628ffd92f9483380ca72ea206e867451f3db30fdeba6937ed7c580ca3/pycorrector-0.1.9.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "eae7f0aea8a2214d64a4ed4934b9e5ea", "sha256": "c51677b80af452b24bd7ac45b401223461c3d5bbbdf19ea4b412cdf2198126b8"}, "downloads": -1, "filename": "pycorrector-0.2.1.tar.gz", "has_sig": false, "md5_digest": "eae7f0aea8a2214d64a4ed4934b9e5ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3658021, "upload_time": "2019-12-02T09:34:57", "upload_time_iso_8601": "2019-12-02T09:34:57.894787Z", "url": "https://files.pythonhosted.org/packages/3b/40/7c9510279a37080dc5899db8faa7844e3112be24b1c91ccc8495fed507c7/pycorrector-0.2.1.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "e452aa7c93701cc14a566bd996dc8fa3", "sha256": "cc5bb8dd688a2f6fa7b7cdb2b04c2f1db52554569aefd23d503949abf88aaf82"}, "downloads": -1, "filename": "pycorrector-0.2.4.tar.gz", "has_sig": false, "md5_digest": "e452aa7c93701cc14a566bd996dc8fa3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3728324, "upload_time": "2020-03-01T03:14:05", "upload_time_iso_8601": "2020-03-01T03:14:05.559840Z", "url": "https://files.pythonhosted.org/packages/ff/6b/638b143c25ddbf9c7e27e62a03596d42f198597aca4cd52fbe2c4821478d/pycorrector-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "665df5eb77afc0f5be201e194aeb3629", "sha256": "02d18ea6dbf49c959367977b61529e3d00b176b14bf3334126dffdf3552f114e"}, "downloads": -1, "filename": "pycorrector-0.2.5.tar.gz", "has_sig": false, "md5_digest": "665df5eb77afc0f5be201e194aeb3629", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6063621, "upload_time": "2020-03-19T02:50:47", "upload_time_iso_8601": "2020-03-19T02:50:47.529648Z", "url": "https://files.pythonhosted.org/packages/0d/93/3c113c3d2b1809430205644063930069e4ba25ea081fe6d8ff9684f6f1b1/pycorrector-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "03a379fbcdcd9c8345b8a033e962375f", "sha256": "059061fe266b55cd616aecd1d3d75ac96e480da0f92dc67bfd332c141df90c8a"}, "downloads": -1, "filename": "pycorrector-0.2.6.tar.gz", "has_sig": false, "md5_digest": "03a379fbcdcd9c8345b8a033e962375f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6063756, "upload_time": "2020-03-19T07:28:47", "upload_time_iso_8601": "2020-03-19T07:28:47.044046Z", "url": "https://files.pythonhosted.org/packages/27/12/a441fd4af799f3a59b824b7d4102df3f88a50487aa38623ffcfc73908d61/pycorrector-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "8402c565187fc89d542d768af9a0508f", "sha256": "f8ab0497aa78af73c7a9b5bf09999fdab199422572e39818ad1a9fce7e4a1dbd"}, "downloads": -1, "filename": "pycorrector-0.2.7.tar.gz", "has_sig": false, "md5_digest": "8402c565187fc89d542d768af9a0508f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6063986, "upload_time": "2020-04-22T15:23:55", "upload_time_iso_8601": "2020-04-22T15:23:55.321284Z", "url": "https://files.pythonhosted.org/packages/bf/b7/f7fd821ba4bf4631b42364e811668aac1af4c8146641d51949262a6d9fcb/pycorrector-0.2.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8402c565187fc89d542d768af9a0508f", "sha256": "f8ab0497aa78af73c7a9b5bf09999fdab199422572e39818ad1a9fce7e4a1dbd"}, "downloads": -1, "filename": "pycorrector-0.2.7.tar.gz", "has_sig": false, "md5_digest": "8402c565187fc89d542d768af9a0508f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6063986, "upload_time": "2020-04-22T15:23:55", "upload_time_iso_8601": "2020-04-22T15:23:55.321284Z", "url": "https://files.pythonhosted.org/packages/bf/b7/f7fd821ba4bf4631b42364e811668aac1af4c8146641d51949262a6d9fcb/pycorrector-0.2.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:54 2020"}