{"info": {"author": "Pixelink a Navitar company", "author_email": "support@pixelink.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Multimedia :: Graphics :: Capture :: Digital Camera", "Topic :: Multimedia :: Video :: Capture", "Topic :: Software Development"], "description": "Introduction\n------------\n\nThe Pixelink Python wrapper offers software developers a means to adapt existing programs, or develop new imaging applications \nfor Pixelink cameras using Python on Windows and Linux. Since this is a wrapper around the native Pixelink API 4.0, it also allows \nrapid development of custom applications for camera operation by simplifying the most common tasks associated with configuring \nand controlling the cameras. This wrapper supports all Pixelink cameras that use and are compatible with the Pixelink 4.0 API \n(that is, FireWire, USB, USB3 and Gigabit Ethernet cameras). The wrapper fully supports functionality of the auto-focus, gain HDR, \nand polar cameras, as well as camera operation with Navitar zoom systems.\n\n\nTested Platforms\n----------------\n\n* Windows 10 (64-bit) with Pixelink SDK v10.6\n* Linux Ubuntu 18.04 PC (x86 64-bit) with Linux SDK v2.4\n* Python 3.9.2 (64-bit)\n\n\nInstallation\n------------\n\nHow to install the Pixelink Python wrapper\n\nOn Windows:\n1. Open https://pixelink.com/products/software/\n2. Download and install Pixelink Capture or Pixelink SDK\n3. Run pip install pixelinkWrapper\n\nOn Linux:\n1. Open https://pixelink.com/products/software/sdk/\n2. Download and install Linux SDK\n3. Run pip install pixelinkWrapper\n\n\nGeneral Information\n-------------------\n\nThe Pixelink Python wrapper is a thin wrapper around the Pixelink 4.0 API. Pixelink API functions are exposed as class methods \nof the PxLApi class in the pixelink module. Applications created with this wrapper can be used with all Pixelink cameras with \nthe exception of the PL-A640/650/660 series cameras. Consult the Pixelink API documentation for specific information - most \nPixelink 4.0 API functionality is preserved with a few minor limitations, so the regular documentation should suffice for most \nusers. For more information about those limitations, please refer to the Tips and Tricks, and Gotchas section of this documentation \nbelow.\n\nThere is no Pixelink Python wrapper for the Pixelink 3.2 API since it is obsolete and hence, PL-A640/650/660 series cameras are \nexcluded.\n\nThe Pixelink API functions are exposed as class methods of the PxLApi class and the Pixelink API defines are grouped as subclasses \nwith respect to their functionality in the pixelink module. \n\nMany of the functions accept parameters with assigned arguments. However, several functions have parameter(s) set with default \nvalue(s). They are\n* getFeature\n* initialize\n* setPreviewSettings\n\nEvery function returns a tuple. The tuple consists of an API return code with parameter(s) on success, and an API error return \ncode on failure.\n\n\nTips and Tricks, and Gotchas\n----------------------------\n\n* The Callback.FORMAT_IMAGE is not supported.\n\n* The Settings.SETTINGS_FACTORY define can be used instead of the DefaultMemoryChannel.FACTORY_DEFAULTS_MEMORY_CHANNEL.\n\n* Preview window\n    - Defines of the preview window from the WindowsPreview class can only be used on Windows, but not on Linux.\n    - Architecture of the preview window on Windows is different than on Linux. The preview window will go 'Not Responding', \n      if the message pump is not polled and events are not forwarded onto its handler. In order to overcome this limitation,\n      it is proposed to use the user32.PeekMessageW function. See preview.py sample for Windows that uses this function.\n\n* Callback function return statements\n    - Note that each of the callback functions are shown to return an error code. This is shown this way to preserve a\n      likeness to the native Pixelink 4.0 API. However, Python users should not rely on this return code. Rather, all\n      error checking should be done within the callback routine itself.\n\n* This wrapper provides the following 'helper' functions that are not present in the native Pixelink API\n    - getBytesPerPixel\n    - imageSize\n\n* Use of a mutable ctypes character buffer instance in getNextFrame and formatImage functions\n    - Both getNextFrame and formatImage expect a data buffer argument being passed as a ctypes character buffer instance. \n      Such mutable character buffer instance can be created using the ctypes.create_string_buffer() function. Using this\n      buffer type allows Python wrapper to maintain similar efficiency as the Pixelink 4.0 API. Furthermore, the same\n      data buffer instance can be passed from getNextFrame to formatImage function.\n\n* setPreviewSettings excluded arguments\n    - setPreviewSettings excluded use of hParent and childId equivalent parameters found in the Pixelink 4.0 API used on Windows. \n      They conflict with setPreviewState and setPreviewStateEx functionality and thus, their use is omitted.\n\n* setPreviewState and setPreviewStateEx excluded argument\n    - setPreviewState and setPreviewStateEx excluded use of phWnd equivalent parameter found in the Pixelink 4.0 API.\n      See the comment of setPreviewSettings above for additional information.\n\n\nCode Samples\n------------\n\nPixelink Python code samples can be downloaded at https://github.com/pixelink-support/pixelinkPythonWrapper.\n\n\nGetting Help from Pixelink Support\n----------------------------------\n\nPixelink's goal is to make digital imaging simple. If you're having trouble with Pixelink Python wrapper, do not hesitate to \ncontact us!\n\nhttps://pixelink.com/support/contact-support/\n\n\nLinks\n-----\n\n* Repository: https://github.com/pixelink-support/pixelinkPythonWrapper\n* PyPi Location: https://pypi.org/project/pixelinkWrapper/\n* Pixelink Capture: https://pixelink.com/products/software/pixelink-capture-software/\n* Pixelink SDK or Linux SDK: https://pixelink.com/products/software/sdk/\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pixelink-support/pixelinkPythonWrapper", "keywords": "pixelink api wrapper camera application development", "license": "", "maintainer": "", "maintainer_email": "", "name": "pixelinkWrapper", "package_url": "https://pypi.org/project/pixelinkWrapper/", "platform": "", "project_url": "https://pypi.org/project/pixelinkWrapper/", "project_urls": {"Bug Reports": "https://pixelink.com/support/contact-support/", "Homepage": "https://github.com/pixelink-support/pixelinkPythonWrapper"}, "release_url": "https://pypi.org/project/pixelinkWrapper/1.0.0/", "requires_dist": null, "requires_python": "~=3.0", "summary": "A Pixelink API Python wrapper for Pixelink cameras", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Introduction</h2>\n<p>The Pixelink Python wrapper offers software developers a means to adapt existing programs, or develop new imaging applications\nfor Pixelink cameras using Python on Windows and Linux. Since this is a wrapper around the native Pixelink API 4.0, it also allows\nrapid development of custom applications for camera operation by simplifying the most common tasks associated with configuring\nand controlling the cameras. This wrapper supports all Pixelink cameras that use and are compatible with the Pixelink 4.0 API\n(that is, FireWire, USB, USB3 and Gigabit Ethernet cameras). The wrapper fully supports functionality of the auto-focus, gain HDR,\nand polar cameras, as well as camera operation with Navitar zoom systems.</p>\n<h2>Tested Platforms</h2>\n<ul>\n<li>Windows 10 (64-bit) with Pixelink SDK v10.6</li>\n<li>Linux Ubuntu 18.04 PC (x86 64-bit) with Linux SDK v2.4</li>\n<li>Python 3.9.2 (64-bit)</li>\n</ul>\n<h2>Installation</h2>\n<p>How to install the Pixelink Python wrapper</p>\n<p>On Windows:</p>\n<ol>\n<li>Open <a href=\"https://pixelink.com/products/software/\" rel=\"nofollow\">https://pixelink.com/products/software/</a></li>\n<li>Download and install Pixelink Capture or Pixelink SDK</li>\n<li>Run pip install pixelinkWrapper</li>\n</ol>\n<p>On Linux:</p>\n<ol>\n<li>Open <a href=\"https://pixelink.com/products/software/sdk/\" rel=\"nofollow\">https://pixelink.com/products/software/sdk/</a></li>\n<li>Download and install Linux SDK</li>\n<li>Run pip install pixelinkWrapper</li>\n</ol>\n<h2>General Information</h2>\n<p>The Pixelink Python wrapper is a thin wrapper around the Pixelink 4.0 API. Pixelink API functions are exposed as class methods\nof the PxLApi class in the pixelink module. Applications created with this wrapper can be used with all Pixelink cameras with\nthe exception of the PL-A640/650/660 series cameras. Consult the Pixelink API documentation for specific information - most\nPixelink 4.0 API functionality is preserved with a few minor limitations, so the regular documentation should suffice for most\nusers. For more information about those limitations, please refer to the Tips and Tricks, and Gotchas section of this documentation\nbelow.</p>\n<p>There is no Pixelink Python wrapper for the Pixelink 3.2 API since it is obsolete and hence, PL-A640/650/660 series cameras are\nexcluded.</p>\n<p>The Pixelink API functions are exposed as class methods of the PxLApi class and the Pixelink API defines are grouped as subclasses\nwith respect to their functionality in the pixelink module.</p>\n<p>Many of the functions accept parameters with assigned arguments. However, several functions have parameter(s) set with default\nvalue(s). They are</p>\n<ul>\n<li>getFeature</li>\n<li>initialize</li>\n<li>setPreviewSettings</li>\n</ul>\n<p>Every function returns a tuple. The tuple consists of an API return code with parameter(s) on success, and an API error return\ncode on failure.</p>\n<h2>Tips and Tricks, and Gotchas</h2>\n<ul>\n<li>\n<p>The Callback.FORMAT_IMAGE is not supported.</p>\n</li>\n<li>\n<p>The Settings.SETTINGS_FACTORY define can be used instead of the DefaultMemoryChannel.FACTORY_DEFAULTS_MEMORY_CHANNEL.</p>\n</li>\n<li>\n<p>Preview window</p>\n<ul>\n<li>Defines of the preview window from the WindowsPreview class can only be used on Windows, but not on Linux.</li>\n<li>Architecture of the preview window on Windows is different than on Linux. The preview window will go 'Not Responding',\nif the message pump is not polled and events are not forwarded onto its handler. In order to overcome this limitation,\nit is proposed to use the user32.PeekMessageW function. See preview.py sample for Windows that uses this function.</li>\n</ul>\n</li>\n<li>\n<p>Callback function return statements</p>\n<ul>\n<li>Note that each of the callback functions are shown to return an error code. This is shown this way to preserve a\nlikeness to the native Pixelink 4.0 API. However, Python users should not rely on this return code. Rather, all\nerror checking should be done within the callback routine itself.</li>\n</ul>\n</li>\n<li>\n<p>This wrapper provides the following 'helper' functions that are not present in the native Pixelink API</p>\n<ul>\n<li>getBytesPerPixel</li>\n<li>imageSize</li>\n</ul>\n</li>\n<li>\n<p>Use of a mutable ctypes character buffer instance in getNextFrame and formatImage functions</p>\n<ul>\n<li>Both getNextFrame and formatImage expect a data buffer argument being passed as a ctypes character buffer instance.\nSuch mutable character buffer instance can be created using the ctypes.create_string_buffer() function. Using this\nbuffer type allows Python wrapper to maintain similar efficiency as the Pixelink 4.0 API. Furthermore, the same\ndata buffer instance can be passed from getNextFrame to formatImage function.</li>\n</ul>\n</li>\n<li>\n<p>setPreviewSettings excluded arguments</p>\n<ul>\n<li>setPreviewSettings excluded use of hParent and childId equivalent parameters found in the Pixelink 4.0 API used on Windows.\nThey conflict with setPreviewState and setPreviewStateEx functionality and thus, their use is omitted.</li>\n</ul>\n</li>\n<li>\n<p>setPreviewState and setPreviewStateEx excluded argument</p>\n<ul>\n<li>setPreviewState and setPreviewStateEx excluded use of phWnd equivalent parameter found in the Pixelink 4.0 API.\nSee the comment of setPreviewSettings above for additional information.</li>\n</ul>\n</li>\n</ul>\n<h2>Code Samples</h2>\n<p>Pixelink Python code samples can be downloaded at <a href=\"https://github.com/pixelink-support/pixelinkPythonWrapper\" rel=\"nofollow\">https://github.com/pixelink-support/pixelinkPythonWrapper</a>.</p>\n<h2>Getting Help from Pixelink Support</h2>\n<p>Pixelink's goal is to make digital imaging simple. If you're having trouble with Pixelink Python wrapper, do not hesitate to\ncontact us!</p>\n<p><a href=\"https://pixelink.com/support/contact-support/\" rel=\"nofollow\">https://pixelink.com/support/contact-support/</a></p>\n<h2>Links</h2>\n<ul>\n<li>Repository: <a href=\"https://github.com/pixelink-support/pixelinkPythonWrapper\" rel=\"nofollow\">https://github.com/pixelink-support/pixelinkPythonWrapper</a></li>\n<li>PyPi Location: <a href=\"https://pypi.org/project/pixelinkWrapper/\" rel=\"nofollow\">https://pypi.org/project/pixelinkWrapper/</a></li>\n<li>Pixelink Capture: <a href=\"https://pixelink.com/products/software/pixelink-capture-software/\" rel=\"nofollow\">https://pixelink.com/products/software/pixelink-capture-software/</a></li>\n<li>Pixelink SDK or Linux SDK: <a href=\"https://pixelink.com/products/software/sdk/\" rel=\"nofollow\">https://pixelink.com/products/software/sdk/</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6988843, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "976ee029bedd059b03c8e1f78ce44111", "sha256": "5c387fcc265f1bbfdd64c435cdbd521be810c7703227d3fc498beef6eb84657b"}, "downloads": -1, "filename": "pixelinkWrapper-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "976ee029bedd059b03c8e1f78ce44111", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.0", "size": 15903, "upload_time": "2020-04-09T19:49:52", "upload_time_iso_8601": "2020-04-09T19:49:52.913011Z", "url": "https://files.pythonhosted.org/packages/87/d8/ecdb9735181e5980112ad6263b3646c28c8f2d3ef35eb2ae49a3798c3f37/pixelinkWrapper-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11191618ec1feb939553c30d252001f3", "sha256": "57529d316421b0b3de84dc088aa17e7b2e8becb1ec1075a1fe3ceff7be33fd74"}, "downloads": -1, "filename": "pixelinkWrapper-1.0.0.tar.gz", "has_sig": false, "md5_digest": "11191618ec1feb939553c30d252001f3", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.0", "size": 19466, "upload_time": "2020-04-09T19:49:53", "upload_time_iso_8601": "2020-04-09T19:49:53.901847Z", "url": "https://files.pythonhosted.org/packages/0e/99/894780e267265a09e91412b1d8dffaa47388b0aaa4b9f8f15c05593a4ea2/pixelinkWrapper-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "976ee029bedd059b03c8e1f78ce44111", "sha256": "5c387fcc265f1bbfdd64c435cdbd521be810c7703227d3fc498beef6eb84657b"}, "downloads": -1, "filename": "pixelinkWrapper-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "976ee029bedd059b03c8e1f78ce44111", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.0", "size": 15903, "upload_time": "2020-04-09T19:49:52", "upload_time_iso_8601": "2020-04-09T19:49:52.913011Z", "url": "https://files.pythonhosted.org/packages/87/d8/ecdb9735181e5980112ad6263b3646c28c8f2d3ef35eb2ae49a3798c3f37/pixelinkWrapper-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11191618ec1feb939553c30d252001f3", "sha256": "57529d316421b0b3de84dc088aa17e7b2e8becb1ec1075a1fe3ceff7be33fd74"}, "downloads": -1, "filename": "pixelinkWrapper-1.0.0.tar.gz", "has_sig": false, "md5_digest": "11191618ec1feb939553c30d252001f3", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.0", "size": 19466, "upload_time": "2020-04-09T19:49:53", "upload_time_iso_8601": "2020-04-09T19:49:53.901847Z", "url": "https://files.pythonhosted.org/packages/0e/99/894780e267265a09e91412b1d8dffaa47388b0aaa4b9f8f15c05593a4ea2/pixelinkWrapper-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:56 2020"}