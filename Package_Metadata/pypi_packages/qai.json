{"info": {"author": "Qordoba", "author_email": "sam.havens@qordoba.com", "bugtrack_url": null, "classifiers": [], "description": "# library.qai.utilities\n\nA REST server and helper functions and classes for interacting with the rest of the Qordoba platform.\n\nSee GitHub history for older docs.\n\n## Changes in 3.0.0\n\nRemove code for processing older pipeline formats. We now only process the new style, which has `chain`.\n\n## Changes in 2.4.0\n\n* We now enforce `if QRest.batching == True: QRest.workers = 1`\n* If you don't specify `QRest.workers` on instantiating, before setting `workers=cpu_count` we first check the configs, and use the value `\"WORKER_COUNT\"` @yakivy\n\n## Upgrading to v2.3.5\n\nDependant services *must* include `nltk==3.4.5` in `requirements.txt` (`setup.py` bug).\n\nDocker file of the dependant service *must* include the line (assure printing payload does not cause encoding exceptions):\n\n`ENV PYTHONIOENCODING=utf-8`\n\nDependant services *can* pass to `QRest` extra flags:\n\n* `debug` (default: `False`) - if `True` don't escape exceptions (don't use in prod)\n* `batching` (default: `False`) - if `True` pass array of segments to qallback instead of consecutive qallback calls\n* `verbose` (default: `False`) - if `True` print full output\n* `ignore_html` (default: `True`) - if `batching=False` ignore sentences with html tags\n* `sentence_token_limit` (default: `1024`) - if `batching=False` ignore sentences longer than 1024 words/tokens\n\n## Upgrading to v2\n\nUpgrading to v2 does require a few changes. Some noteable one:\n\n* `get_config` will break. Sorry, you have to deal with that yourself\n* `QConnect` is gone, and `QRest` is imported more explicitly\n* There is no more `qai` Docker image. You are free to use whatever base image you want. May I recommend `qsam/spacy_alpine`.\n* `qai` is now a pip dependency, so must be in your `requirements.txt`\n\nHowever! There's help. Follow these steps:\n\n```sh\ncd qai_v1_service\nvactivate  # or however you go into a virtualenv\npip uninstall -y qai\n# uninstalls old qai\npip install qai\n# installs qai from PyPi\npython -m qai.upgrade .\n# shows you how it would change your files to make the project ready for v2\n# n to reject, y to accept\n```\n\nNow all that remains is seeing if you use `get_configs`, and if so: **pass `get_configs` an absolute path (v2), instead of a relative path split into a list (v1).**\n\nNote: I went a bit fast, and long story short, versions 2.0.x and 2.1.x are not salvageable. Just use 2.2.0+.\n\n## Things to know\n\nSee [The Changelog](CHANGELOG.md) for details.\n\n### Required \"conventions\"\n\nAll projects *must* have a `config.json`, and that config *must* specify `SUPPORTED_LANGUAGES`, which is either a string or list of strings, of the form `\"en\"` or `[\"en\", \"de\", \"zh\"]` (the prefix of the ISO code). QAI will not let your service start unless it thinks you have a valid `SUPPORTED_LANGUAGES` field. By default, QAI will look for this in `conf/config.json`. This is overridable. Here is the minimal config:\n\n```json\n{\n  \"SUPPORTED_LANGUAGES\": \"en\"\n}\n```\n\nYou can specify the service name in the config file with\n\n```json\n{\n  \"SUPPORTED_LANGUAGES\": \"en\",\n  \"SERVICE_NAME\": \"hey look at me service\",\n}\n```\n\nTo change the config path to, for example, `./my_config_dir/a_sub_dir/my_wacky_config.json`:\n\n```python\nQRest(analyzer,\n         category='service name, e.g. formality',\n         white_lister=white_lister,\n         config_path=['my_config_dir', 'a_sub_dir', 'my_wacky_config.json'])\n```\nBy default, QAI sends `no-issues-response` whenever a call to dependant library fails. To turn on the `debug` mode:\n\n```python\nQRest(analyzer,\n         category='service name, e.g. formality',\n         white_lister=white_lister,\n         debug=True)\n```\nPrint out input segments:\n\n```python\nQRest(analyzer,\n         category='service name, e.g. formality',\n         white_lister=white_lister,\n         verbose = True)\n```\n\n* `verbose` (default: `False`) - print full output\n\nTo process batches instead of looping over segments (send by a mediator):\n\n```python\nQRest(analyzer,\n         category='service name, e.g. formality',\n         white_lister=white_lister,\n         batching=True)\n```\n\nImportant: QAI does not define batch size, if batching enabled, just passes the entire mediator input. In order to change mediator batch size look for `segmentDelegator.read.batchSize` in `config/application.conf` of the dependant service.\n\nTo customize input filters:\n\n```python\nQRest(analyzer,\n         category='service name, e.g. formality',\n         white_lister=white_lister,\n         batching=False,\n         sentence_token_limit=1024,\n         ignore_html=True)\n```\n\n* `ignore_html` (default: `True`) - if `batching=False` ignore sentences with html tags\n* `sentence_token_limit` (default: `1024`) - if `batching=False` ignore sentences longer than 1024 words/tokens\n\n\n## Usage\n\nYou can explicitly create a REST connection like this:\n\n```python\nfrom app import Analyzer, whitelist\n\nfrom qai.qconnect.qrest import QRest\n\n\nSERVICE_NAME = 'service_name'\nhost = '0.0.0.0'\nport = 5000\n\n\nif __name__ == '__main__':\n    analyzer = Analyzer()\n    rest_connection = QRest(analyzer,\n                            category=category,\n                            white_lister=white_lister,\n                            host=host,\n                            port=port)\n    # create a blocking connection:\n    rest_connection.connect()\n```\n\nThe above will create *as many workers as you have cores.* This is great, _unless_ you are using AutoML. There is a known bug where AutoML crashes if you are using more than one worker.\n\nSo if you're using AutoML, the above would look like:\n\n```python\nfrom app import Analyzer, whitelist\n\nfrom qai.qconnect.qrest import QRest\n\n\nSERVICE_NAME = 'service_name'\nhost = '0.0.0.0'\nport = 5000\nworkers = 1\n\n\nif __name__ == '__main__':\n    analyzer = Analyzer()\n    rest_connection = QRest(analyzer,\n                            category=category,\n                            white_lister=white_lister,\n                            host=host,\n                            port=port,\n                            workers=workers)\n    # create a blocking connection:\n    rest_connection.connect()\n```\n\nThere is also a helper class for turning spaCy `Span`s into issues the rest of the platform can process:\n\n```python\nfrom spacy.tokens import Span\nfrom app.factor import SpacyFactor\n\n\nSOV = SpacyFactor(\n    \"subject_object_verb_spacing\",\n    \"Keep the subject, verb, and object of a sentence close together to help the reader understand the sentence.\"\n)\n\nSpan.set_extension(\"score\", default=0)\nSpan.set_extension(\"suggestions\", default=[])\n\ndoc = nlp(\"Holders of the Class A and Class B-1 certificates will be entitled to receive on each Payment Date, to the extent monies are available therefor (but not more than the Class A Certificate Balance or Class B-1 Certificate Balance then outstanding), a distribution.\")\nscore = analyze(doc)\nif score is not None:\n    span = Span(doc, 0, len(doc))  # or whichever TOKENS are the issue (don't have to worry about character indexes)\n    span._.score = score\n    span._.suggestions = get_suggestions(doc)\n    issues = SOV(span)\n```\n\n## Installation\n\n`pip install qai`\n\n## Testing\n\nSee Confluence for docs on input format expectations.\n\n`scripts/test_qai.sh` has some helpful testing functions.\n\n## Development\n\nSource of truth is `VERSION` file, read by `setup.py` and `Jenkinsfile`. When you run `python setup.py sdist/bdist`, this creates `qai/version.py`, which is read in `qai/__init__.py`. This was done for reasons having to do with python's module system being frustrating. It allows one to not have to know the absolute path of a file at runtime, which is a big bonus in Python. Anyway, that means `VERSION` is the source of truth.\n\n### CI/CD\n\nJenkins will push to PyPi when you build `master` or `v2` branch. It also might automatically build v2 branch on git push, testing that now.\n\nTo get Jenkins to build this, we had to throw it in Docker... so the Jenkinsfile calls the Dockerfile which calls the release script... It's a house of cards, but seems to work.\n\n### License\n\nThis software is not licensed. If you do not work at Qordoba, you are not legally allowed to use it. Also, it's just helper functions that really won't help you. If something in it does look interesting, and you would like access, open an issue.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Qordobacode/library.qai.utilities", "keywords": "", "license": "unlicensed", "maintainer": "", "maintainer_email": "", "name": "qai", "package_url": "https://pypi.org/project/qai/", "platform": "", "project_url": "https://pypi.org/project/qai/", "project_urls": {"Homepage": "https://github.com/Qordobacode/library.qai.utilities"}, "release_url": "https://pypi.org/project/qai/4.0.3/", "requires_dist": null, "requires_python": ">=3.6.4", "summary": "", "version": "4.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>library.qai.utilities</h1>\n<p>A REST server and helper functions and classes for interacting with the rest of the Qordoba platform.</p>\n<p>See GitHub history for older docs.</p>\n<h2>Changes in 3.0.0</h2>\n<p>Remove code for processing older pipeline formats. We now only process the new style, which has <code>chain</code>.</p>\n<h2>Changes in 2.4.0</h2>\n<ul>\n<li>We now enforce <code>if QRest.batching == True: QRest.workers = 1</code></li>\n<li>If you don't specify <code>QRest.workers</code> on instantiating, before setting <code>workers=cpu_count</code> we first check the configs, and use the value <code>\"WORKER_COUNT\"</code> @yakivy</li>\n</ul>\n<h2>Upgrading to v2.3.5</h2>\n<p>Dependant services <em>must</em> include <code>nltk==3.4.5</code> in <code>requirements.txt</code> (<code>setup.py</code> bug).</p>\n<p>Docker file of the dependant service <em>must</em> include the line (assure printing payload does not cause encoding exceptions):</p>\n<p><code>ENV PYTHONIOENCODING=utf-8</code></p>\n<p>Dependant services <em>can</em> pass to <code>QRest</code> extra flags:</p>\n<ul>\n<li><code>debug</code> (default: <code>False</code>) - if <code>True</code> don't escape exceptions (don't use in prod)</li>\n<li><code>batching</code> (default: <code>False</code>) - if <code>True</code> pass array of segments to qallback instead of consecutive qallback calls</li>\n<li><code>verbose</code> (default: <code>False</code>) - if <code>True</code> print full output</li>\n<li><code>ignore_html</code> (default: <code>True</code>) - if <code>batching=False</code> ignore sentences with html tags</li>\n<li><code>sentence_token_limit</code> (default: <code>1024</code>) - if <code>batching=False</code> ignore sentences longer than 1024 words/tokens</li>\n</ul>\n<h2>Upgrading to v2</h2>\n<p>Upgrading to v2 does require a few changes. Some noteable one:</p>\n<ul>\n<li><code>get_config</code> will break. Sorry, you have to deal with that yourself</li>\n<li><code>QConnect</code> is gone, and <code>QRest</code> is imported more explicitly</li>\n<li>There is no more <code>qai</code> Docker image. You are free to use whatever base image you want. May I recommend <code>qsam/spacy_alpine</code>.</li>\n<li><code>qai</code> is now a pip dependency, so must be in your <code>requirements.txt</code></li>\n</ul>\n<p>However! There's help. Follow these steps:</p>\n<pre><span class=\"nb\">cd</span> qai_v1_service\nvactivate  <span class=\"c1\"># or however you go into a virtualenv</span>\npip uninstall -y qai\n<span class=\"c1\"># uninstalls old qai</span>\npip install qai\n<span class=\"c1\"># installs qai from PyPi</span>\npython -m qai.upgrade .\n<span class=\"c1\"># shows you how it would change your files to make the project ready for v2</span>\n<span class=\"c1\"># n to reject, y to accept</span>\n</pre>\n<p>Now all that remains is seeing if you use <code>get_configs</code>, and if so: <strong>pass <code>get_configs</code> an absolute path (v2), instead of a relative path split into a list (v1).</strong></p>\n<p>Note: I went a bit fast, and long story short, versions 2.0.x and 2.1.x are not salvageable. Just use 2.2.0+.</p>\n<h2>Things to know</h2>\n<p>See <a href=\"CHANGELOG.md\" rel=\"nofollow\">The Changelog</a> for details.</p>\n<h3>Required \"conventions\"</h3>\n<p>All projects <em>must</em> have a <code>config.json</code>, and that config <em>must</em> specify <code>SUPPORTED_LANGUAGES</code>, which is either a string or list of strings, of the form <code>\"en\"</code> or <code>[\"en\", \"de\", \"zh\"]</code> (the prefix of the ISO code). QAI will not let your service start unless it thinks you have a valid <code>SUPPORTED_LANGUAGES</code> field. By default, QAI will look for this in <code>conf/config.json</code>. This is overridable. Here is the minimal config:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"SUPPORTED_LANGUAGES\"</span><span class=\"p\">:</span> <span class=\"s2\">\"en\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>You can specify the service name in the config file with</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"SUPPORTED_LANGUAGES\"</span><span class=\"p\">:</span> <span class=\"s2\">\"en\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"SERVICE_NAME\"</span><span class=\"p\">:</span> <span class=\"s2\">\"hey look at me service\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n<p>To change the config path to, for example, <code>./my_config_dir/a_sub_dir/my_wacky_config.json</code>:</p>\n<pre><span class=\"n\">QRest</span><span class=\"p\">(</span><span class=\"n\">analyzer</span><span class=\"p\">,</span>\n         <span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s1\">'service name, e.g. formality'</span><span class=\"p\">,</span>\n         <span class=\"n\">white_lister</span><span class=\"o\">=</span><span class=\"n\">white_lister</span><span class=\"p\">,</span>\n         <span class=\"n\">config_path</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'my_config_dir'</span><span class=\"p\">,</span> <span class=\"s1\">'a_sub_dir'</span><span class=\"p\">,</span> <span class=\"s1\">'my_wacky_config.json'</span><span class=\"p\">])</span>\n</pre>\n<p>By default, QAI sends <code>no-issues-response</code> whenever a call to dependant library fails. To turn on the <code>debug</code> mode:</p>\n<pre><span class=\"n\">QRest</span><span class=\"p\">(</span><span class=\"n\">analyzer</span><span class=\"p\">,</span>\n         <span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s1\">'service name, e.g. formality'</span><span class=\"p\">,</span>\n         <span class=\"n\">white_lister</span><span class=\"o\">=</span><span class=\"n\">white_lister</span><span class=\"p\">,</span>\n         <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Print out input segments:</p>\n<pre><span class=\"n\">QRest</span><span class=\"p\">(</span><span class=\"n\">analyzer</span><span class=\"p\">,</span>\n         <span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s1\">'service name, e.g. formality'</span><span class=\"p\">,</span>\n         <span class=\"n\">white_lister</span><span class=\"o\">=</span><span class=\"n\">white_lister</span><span class=\"p\">,</span>\n         <span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><code>verbose</code> (default: <code>False</code>) - print full output</li>\n</ul>\n<p>To process batches instead of looping over segments (send by a mediator):</p>\n<pre><span class=\"n\">QRest</span><span class=\"p\">(</span><span class=\"n\">analyzer</span><span class=\"p\">,</span>\n         <span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s1\">'service name, e.g. formality'</span><span class=\"p\">,</span>\n         <span class=\"n\">white_lister</span><span class=\"o\">=</span><span class=\"n\">white_lister</span><span class=\"p\">,</span>\n         <span class=\"n\">batching</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Important: QAI does not define batch size, if batching enabled, just passes the entire mediator input. In order to change mediator batch size look for <code>segmentDelegator.read.batchSize</code> in <code>config/application.conf</code> of the dependant service.</p>\n<p>To customize input filters:</p>\n<pre><span class=\"n\">QRest</span><span class=\"p\">(</span><span class=\"n\">analyzer</span><span class=\"p\">,</span>\n         <span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s1\">'service name, e.g. formality'</span><span class=\"p\">,</span>\n         <span class=\"n\">white_lister</span><span class=\"o\">=</span><span class=\"n\">white_lister</span><span class=\"p\">,</span>\n         <span class=\"n\">batching</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n         <span class=\"n\">sentence_token_limit</span><span class=\"o\">=</span><span class=\"mi\">1024</span><span class=\"p\">,</span>\n         <span class=\"n\">ignore_html</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><code>ignore_html</code> (default: <code>True</code>) - if <code>batching=False</code> ignore sentences with html tags</li>\n<li><code>sentence_token_limit</code> (default: <code>1024</code>) - if <code>batching=False</code> ignore sentences longer than 1024 words/tokens</li>\n</ul>\n<h2>Usage</h2>\n<p>You can explicitly create a REST connection like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">app</span> <span class=\"kn\">import</span> <span class=\"n\">Analyzer</span><span class=\"p\">,</span> <span class=\"n\">whitelist</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">qai.qconnect.qrest</span> <span class=\"kn\">import</span> <span class=\"n\">QRest</span>\n\n\n<span class=\"n\">SERVICE_NAME</span> <span class=\"o\">=</span> <span class=\"s1\">'service_name'</span>\n<span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"s1\">'0.0.0.0'</span>\n<span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">5000</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">analyzer</span> <span class=\"o\">=</span> <span class=\"n\">Analyzer</span><span class=\"p\">()</span>\n    <span class=\"n\">rest_connection</span> <span class=\"o\">=</span> <span class=\"n\">QRest</span><span class=\"p\">(</span><span class=\"n\">analyzer</span><span class=\"p\">,</span>\n                            <span class=\"n\">category</span><span class=\"o\">=</span><span class=\"n\">category</span><span class=\"p\">,</span>\n                            <span class=\"n\">white_lister</span><span class=\"o\">=</span><span class=\"n\">white_lister</span><span class=\"p\">,</span>\n                            <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"n\">host</span><span class=\"p\">,</span>\n                            <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"n\">port</span><span class=\"p\">)</span>\n    <span class=\"c1\"># create a blocking connection:</span>\n    <span class=\"n\">rest_connection</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n</pre>\n<p>The above will create <em>as many workers as you have cores.</em> This is great, <em>unless</em> you are using AutoML. There is a known bug where AutoML crashes if you are using more than one worker.</p>\n<p>So if you're using AutoML, the above would look like:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">app</span> <span class=\"kn\">import</span> <span class=\"n\">Analyzer</span><span class=\"p\">,</span> <span class=\"n\">whitelist</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">qai.qconnect.qrest</span> <span class=\"kn\">import</span> <span class=\"n\">QRest</span>\n\n\n<span class=\"n\">SERVICE_NAME</span> <span class=\"o\">=</span> <span class=\"s1\">'service_name'</span>\n<span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"s1\">'0.0.0.0'</span>\n<span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">5000</span>\n<span class=\"n\">workers</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">analyzer</span> <span class=\"o\">=</span> <span class=\"n\">Analyzer</span><span class=\"p\">()</span>\n    <span class=\"n\">rest_connection</span> <span class=\"o\">=</span> <span class=\"n\">QRest</span><span class=\"p\">(</span><span class=\"n\">analyzer</span><span class=\"p\">,</span>\n                            <span class=\"n\">category</span><span class=\"o\">=</span><span class=\"n\">category</span><span class=\"p\">,</span>\n                            <span class=\"n\">white_lister</span><span class=\"o\">=</span><span class=\"n\">white_lister</span><span class=\"p\">,</span>\n                            <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"n\">host</span><span class=\"p\">,</span>\n                            <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"n\">port</span><span class=\"p\">,</span>\n                            <span class=\"n\">workers</span><span class=\"o\">=</span><span class=\"n\">workers</span><span class=\"p\">)</span>\n    <span class=\"c1\"># create a blocking connection:</span>\n    <span class=\"n\">rest_connection</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n</pre>\n<p>There is also a helper class for turning spaCy <code>Span</code>s into issues the rest of the platform can process:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">spacy.tokens</span> <span class=\"kn\">import</span> <span class=\"n\">Span</span>\n<span class=\"kn\">from</span> <span class=\"nn\">app.factor</span> <span class=\"kn\">import</span> <span class=\"n\">SpacyFactor</span>\n\n\n<span class=\"n\">SOV</span> <span class=\"o\">=</span> <span class=\"n\">SpacyFactor</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"subject_object_verb_spacing\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Keep the subject, verb, and object of a sentence close together to help the reader understand the sentence.\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">Span</span><span class=\"o\">.</span><span class=\"n\">set_extension</span><span class=\"p\">(</span><span class=\"s2\">\"score\"</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">Span</span><span class=\"o\">.</span><span class=\"n\">set_extension</span><span class=\"p\">(</span><span class=\"s2\">\"suggestions\"</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">nlp</span><span class=\"p\">(</span><span class=\"s2\">\"Holders of the Class A and Class B-1 certificates will be entitled to receive on each Payment Date, to the extent monies are available therefor (but not more than the Class A Certificate Balance or Class B-1 Certificate Balance then outstanding), a distribution.\"</span><span class=\"p\">)</span>\n<span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">analyze</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">score</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">span</span> <span class=\"o\">=</span> <span class=\"n\">Span</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">))</span>  <span class=\"c1\"># or whichever TOKENS are the issue (don't have to worry about character indexes)</span>\n    <span class=\"n\">span</span><span class=\"o\">.</span><span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">score</span>\n    <span class=\"n\">span</span><span class=\"o\">.</span><span class=\"n\">_</span><span class=\"o\">.</span><span class=\"n\">suggestions</span> <span class=\"o\">=</span> <span class=\"n\">get_suggestions</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">)</span>\n    <span class=\"n\">issues</span> <span class=\"o\">=</span> <span class=\"n\">SOV</span><span class=\"p\">(</span><span class=\"n\">span</span><span class=\"p\">)</span>\n</pre>\n<h2>Installation</h2>\n<p><code>pip install qai</code></p>\n<h2>Testing</h2>\n<p>See Confluence for docs on input format expectations.</p>\n<p><code>scripts/test_qai.sh</code> has some helpful testing functions.</p>\n<h2>Development</h2>\n<p>Source of truth is <code>VERSION</code> file, read by <code>setup.py</code> and <code>Jenkinsfile</code>. When you run <code>python setup.py sdist/bdist</code>, this creates <code>qai/version.py</code>, which is read in <code>qai/__init__.py</code>. This was done for reasons having to do with python's module system being frustrating. It allows one to not have to know the absolute path of a file at runtime, which is a big bonus in Python. Anyway, that means <code>VERSION</code> is the source of truth.</p>\n<h3>CI/CD</h3>\n<p>Jenkins will push to PyPi when you build <code>master</code> or <code>v2</code> branch. It also might automatically build v2 branch on git push, testing that now.</p>\n<p>To get Jenkins to build this, we had to throw it in Docker... so the Jenkinsfile calls the Dockerfile which calls the release script... It's a house of cards, but seems to work.</p>\n<h3>License</h3>\n<p>This software is not licensed. If you do not work at Qordoba, you are not legally allowed to use it. Also, it's just helper functions that really won't help you. If something in it does look interesting, and you would like access, open an issue.</p>\n\n          </div>"}, "last_serial": 7041865, "releases": {"2.0.0rc1": [{"comment_text": "", "digests": {"md5": "924ae10944b84c9a6875019517ae9419", "sha256": "5730f50f5c14c106872c895e01f0cce35cd5c0605a1413b9e18443e7955f342b"}, "downloads": -1, "filename": "qai-2.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "924ae10944b84c9a6875019517ae9419", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10298, "upload_time": "2019-08-23T00:10:59", "upload_time_iso_8601": "2019-08-23T00:10:59.939990Z", "url": "https://files.pythonhosted.org/packages/45/08/2e1cfa29a34c15b1d7dec9cdda30a18886af7ffaf298003bd00f9cca4f76/qai-2.0.0rc1.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "d14a77e1d8aef9312253158cc6ba9047", "sha256": "ed79fbf9d79c65f5719d35a36bc7ab18ad99efcbc4cb81ac758202c1faa1889b"}, "downloads": -1, "filename": "qai-2.0.1.tar.gz", "has_sig": false, "md5_digest": "d14a77e1d8aef9312253158cc6ba9047", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10295, "upload_time": "2019-08-23T00:31:38", "upload_time_iso_8601": "2019-08-23T00:31:38.130238Z", "url": "https://files.pythonhosted.org/packages/05/bc/25ac73c987a42ac5b964ebc3e0be9295e8eb5d8c77cbf5e9a9d96f3eccc6/qai-2.0.1.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "d915971083e45e86ded22a92457ebcbd", "sha256": "b9887e977b95d8974e208230f80d1de1f616a7a0ea1fa9d74d491bcec32225fc"}, "downloads": -1, "filename": "qai-2.1.0.tar.gz", "has_sig": false, "md5_digest": "d915971083e45e86ded22a92457ebcbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12058, "upload_time": "2019-08-23T19:43:33", "upload_time_iso_8601": "2019-08-23T19:43:33.374381Z", "url": "https://files.pythonhosted.org/packages/4d/57/f74b6c05a70a874f2e89ea79c244314311517d0bbe6f07a988e63f04d680/qai-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "dacf6949e421e5d4dea41899eb8873e9", "sha256": "0e9b9927b41a2e484d38c3072d406638510cc1166a47fc4f5d511fca6613fbab"}, "downloads": -1, "filename": "qai-2.1.1.tar.gz", "has_sig": false, "md5_digest": "dacf6949e421e5d4dea41899eb8873e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12082, "upload_time": "2019-08-23T20:04:37", "upload_time_iso_8601": "2019-08-23T20:04:37.761328Z", "url": "https://files.pythonhosted.org/packages/bb/95/37c55c7b617a7cefc774aecbadaad6cbd315e9917c132a891494ee4e8083/qai-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "0de6fb4a5f21cf4c43b4d30cc7676a0d", "sha256": "97edb84935a6d8e3e0c27e8456446ada36a56b67f9bae8e025276f4ad860d52c"}, "downloads": -1, "filename": "qai-2.1.2.tar.gz", "has_sig": false, "md5_digest": "0de6fb4a5f21cf4c43b4d30cc7676a0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11886, "upload_time": "2019-08-23T20:08:48", "upload_time_iso_8601": "2019-08-23T20:08:48.090790Z", "url": "https://files.pythonhosted.org/packages/d7/1b/4b71b0a1d02455fbdaeeeca4a0186f5b404e8a566159143655091e1fcbc6/qai-2.1.2.tar.gz", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "491c84e5ff6a872eab51d141838fc0c7", "sha256": "d33b406a6889a74f9850a5c9a77ae5b55d357053852f32a808994989654748f9"}, "downloads": -1, "filename": "qai-2.1.3.tar.gz", "has_sig": false, "md5_digest": "491c84e5ff6a872eab51d141838fc0c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12597, "upload_time": "2019-08-23T20:18:36", "upload_time_iso_8601": "2019-08-23T20:18:36.330783Z", "url": "https://files.pythonhosted.org/packages/af/05/14d5f8ab61998fb88ba721d04f6cd66974d852b0f63117c33d64a3d8279c/qai-2.1.3.tar.gz", "yanked": false}], "2.1.4": [{"comment_text": "", "digests": {"md5": "887a214a11531998f759ae450e760460", "sha256": "b814ec9a638dce2296e455af9b872efff72270ba7dd709d2c464a95013f86572"}, "downloads": -1, "filename": "qai-2.1.4.tar.gz", "has_sig": false, "md5_digest": "887a214a11531998f759ae450e760460", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12678, "upload_time": "2019-08-23T20:24:50", "upload_time_iso_8601": "2019-08-23T20:24:50.572787Z", "url": "https://files.pythonhosted.org/packages/00/b9/6f3e4fce986da284ad8f097388a0ece5e35675498f59a76a2c62565996df/qai-2.1.4.tar.gz", "yanked": false}], "2.1.5": [{"comment_text": "", "digests": {"md5": "dd36673c70cfae2599ad5d555a487ced", "sha256": "192ec77d1cae42c50a04612e1438cf39199ca4b0ffcb472aa3cc314106dbad45"}, "downloads": -1, "filename": "qai-2.1.5.tar.gz", "has_sig": false, "md5_digest": "dd36673c70cfae2599ad5d555a487ced", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13667, "upload_time": "2019-08-23T20:33:23", "upload_time_iso_8601": "2019-08-23T20:33:23.284707Z", "url": "https://files.pythonhosted.org/packages/60/a0/ed8ee93a2ec046dd0ec2aa8b2fa18ac51e4276040ec927e7c7b5dc4378d9/qai-2.1.5.tar.gz", "yanked": false}], "2.1.6": [{"comment_text": "", "digests": {"md5": "37f1de61a4343d134cfc3ed1147e571e", "sha256": "3198831bc86bdafaf494a4734260284bff21e2e32643775b0df3feb023757102"}, "downloads": -1, "filename": "qai-2.1.6.tar.gz", "has_sig": false, "md5_digest": "37f1de61a4343d134cfc3ed1147e571e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13670, "upload_time": "2019-08-23T20:41:47", "upload_time_iso_8601": "2019-08-23T20:41:47.762667Z", "url": "https://files.pythonhosted.org/packages/10/96/e34da0d65b2c163d6f60bfedc52930529ac39e1e78abd4e0d8306ae513de/qai-2.1.6.tar.gz", "yanked": false}], "2.1.8": [{"comment_text": "", "digests": {"md5": "078f4e91135f9dc5271be8722c4eeb9c", "sha256": "6e90588c51d3c940c904072018c466d9503b5885642bd51d0a41c873f4f5ac56"}, "downloads": -1, "filename": "qai-2.1.8.tar.gz", "has_sig": false, "md5_digest": "078f4e91135f9dc5271be8722c4eeb9c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 13731, "upload_time": "2019-08-23T22:46:30", "upload_time_iso_8601": "2019-08-23T22:46:30.168720Z", "url": "https://files.pythonhosted.org/packages/51/06/88952bad61789620328412d0423813f3fd84fc1da1160eb11de383cabce1/qai-2.1.8.tar.gz", "yanked": false}], "2.1.9": [{"comment_text": "", "digests": {"md5": "748ff20a06658d95d624ec79fc13e0a7", "sha256": "907e98aae96a3382ee4ba17fff5e89aab993b425cca26c6dd9d05ab657b00808"}, "downloads": -1, "filename": "qai-2.1.9.tar.gz", "has_sig": false, "md5_digest": "748ff20a06658d95d624ec79fc13e0a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 13811, "upload_time": "2019-08-23T22:53:55", "upload_time_iso_8601": "2019-08-23T22:53:55.798456Z", "url": "https://files.pythonhosted.org/packages/f8/1d/c3e43feb16f72b9d529378c76df31bbc5e131fea618fe7f0c4906837be52/qai-2.1.9.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "f629fb9187dd3ddeafbfde31d79ab302", "sha256": "38435073493cd6c7dbf64726d6938a39cb61ee354aab1f1ec1d7520945e828d6"}, "downloads": -1, "filename": "qai-2.2.0.tar.gz", "has_sig": false, "md5_digest": "f629fb9187dd3ddeafbfde31d79ab302", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 13936, "upload_time": "2019-08-23T23:12:36", "upload_time_iso_8601": "2019-08-23T23:12:36.730994Z", "url": "https://files.pythonhosted.org/packages/34/9f/86052f3da443e59ae5efde0db11aba9d3cb1206dcac9b520abc29be4e507/qai-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "2508eec9d65afd9721e22413025ba609", "sha256": "aac9f5fd7848c90d172e63bc6ed1e2e3093019434e0cd18389c3c13c9b305421"}, "downloads": -1, "filename": "qai-2.2.1.tar.gz", "has_sig": false, "md5_digest": "2508eec9d65afd9721e22413025ba609", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 13948, "upload_time": "2019-08-26T19:52:08", "upload_time_iso_8601": "2019-08-26T19:52:08.182043Z", "url": "https://files.pythonhosted.org/packages/0c/49/450aed6447e512d5f7c1eef46d5358304dbd4ee9dad44362fa8799f35f73/qai-2.2.1.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "0eefd416efe79dd06e0b1da8fa10d26c", "sha256": "039ef31a95f53bb994b824c805170e7b587115281f7f3d48d0b3387b515cfd7d"}, "downloads": -1, "filename": "qai-2.2.2.tar.gz", "has_sig": false, "md5_digest": "0eefd416efe79dd06e0b1da8fa10d26c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 14148, "upload_time": "2019-09-06T18:04:08", "upload_time_iso_8601": "2019-09-06T18:04:08.650796Z", "url": "https://files.pythonhosted.org/packages/26/db/036a8a89a3b51832e182be7553f41e52de4cfe46edf38984e7024e32c790/qai-2.2.2.tar.gz", "yanked": false}], "2.2.3": [{"comment_text": "", "digests": {"md5": "8cc24487800016f2b6f0af71bb21f097", "sha256": "0d44a3d3aafefd7350a4f80df378065b0d77e960f2b0b2418a664fb615e31f13"}, "downloads": -1, "filename": "qai-2.2.3.tar.gz", "has_sig": false, "md5_digest": "8cc24487800016f2b6f0af71bb21f097", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 14237, "upload_time": "2019-09-06T18:13:04", "upload_time_iso_8601": "2019-09-06T18:13:04.821215Z", "url": "https://files.pythonhosted.org/packages/4a/67/90104374bf7e1534eeb26b56be6926c3bc3d2ea862dbb8334611f99f648d/qai-2.2.3.tar.gz", "yanked": false}], "2.2.4": [{"comment_text": "", "digests": {"md5": "5347e0dd3ea5afec9bdbc65fed590fd1", "sha256": "759c67c3ac80ec65705de07a0f065cac296897d9bf639f730937254255d01cc8"}, "downloads": -1, "filename": "qai-2.2.4.tar.gz", "has_sig": false, "md5_digest": "5347e0dd3ea5afec9bdbc65fed590fd1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 12251, "upload_time": "2019-09-06T21:40:32", "upload_time_iso_8601": "2019-09-06T21:40:32.192356Z", "url": "https://files.pythonhosted.org/packages/f1/67/a1760138991f63366dc1f152e412c658352dd72096a61b670644b70d5eb5/qai-2.2.4.tar.gz", "yanked": false}], "2.2.5": [{"comment_text": "", "digests": {"md5": "3e78194cbefe29de5d91ee02b7bc518d", "sha256": "a2eb244c4d9cd2ce1f34e951e98502f20446ea460f237b665e42ef2eae9576f0"}, "downloads": -1, "filename": "qai-2.2.5.tar.gz", "has_sig": false, "md5_digest": "3e78194cbefe29de5d91ee02b7bc518d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 12587, "upload_time": "2019-10-21T10:57:13", "upload_time_iso_8601": "2019-10-21T10:57:13.046240Z", "url": "https://files.pythonhosted.org/packages/ee/94/78458dae964d09a19fcf6743ccae1c264afa3ebeea66d54c65858e902204/qai-2.2.5.tar.gz", "yanked": false}], "2.2.6": [{"comment_text": "", "digests": {"md5": "b21d1789f77904758735e6b1b36de778", "sha256": "0fb268ed50d982ac4ff1c7a69bb24fe99ff84d017e748c87de64b21aa8fd89a9"}, "downloads": -1, "filename": "qai-2.2.6.tar.gz", "has_sig": false, "md5_digest": "b21d1789f77904758735e6b1b36de778", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 12699, "upload_time": "2019-10-21T12:07:01", "upload_time_iso_8601": "2019-10-21T12:07:01.836713Z", "url": "https://files.pythonhosted.org/packages/6a/de/8739442012e7fd5caae46f42385b94003a45f2214ec5b54b76a295622af4/qai-2.2.6.tar.gz", "yanked": false}], "2.2.7": [{"comment_text": "", "digests": {"md5": "69aa07dece8591c290eca029a8f2d3d6", "sha256": "30fbc8c9c3aa43a13cfc6d5824d9fa32482e7367ca2f8c50a8384720f2fe6ec2"}, "downloads": -1, "filename": "qai-2.2.7.tar.gz", "has_sig": false, "md5_digest": "69aa07dece8591c290eca029a8f2d3d6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 12738, "upload_time": "2019-10-21T13:22:31", "upload_time_iso_8601": "2019-10-21T13:22:31.224170Z", "url": "https://files.pythonhosted.org/packages/45/83/a3383f0cffe1250f3b9a087c0291f700527254385d46914e2eb14182279c/qai-2.2.7.tar.gz", "yanked": false}], "2.2.8": [{"comment_text": "", "digests": {"md5": "4a6ab370023f1d4cad82ef86c2e1b5d7", "sha256": "b4eba8fb274b5de127e5273a9ca9c0a25657be1092618b249a21f76c83e944f8"}, "downloads": -1, "filename": "qai-2.2.8.tar.gz", "has_sig": false, "md5_digest": "4a6ab370023f1d4cad82ef86c2e1b5d7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 12735, "upload_time": "2019-10-21T18:52:21", "upload_time_iso_8601": "2019-10-21T18:52:21.922643Z", "url": "https://files.pythonhosted.org/packages/9b/a3/9663155a05e40e01cbe1fb08c20906e59fe37a53c26749e7fc21eb099f14/qai-2.2.8.tar.gz", "yanked": false}], "2.2.9": [{"comment_text": "", "digests": {"md5": "bcb8413f08894624d779d6e7cbc4543a", "sha256": "9d1cd5cb03849679d97edc13d48b34068b2bc8826bbecc628a9b770eae65b78d"}, "downloads": -1, "filename": "qai-2.2.9.tar.gz", "has_sig": false, "md5_digest": "bcb8413f08894624d779d6e7cbc4543a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 12800, "upload_time": "2019-10-22T13:31:18", "upload_time_iso_8601": "2019-10-22T13:31:18.202405Z", "url": "https://files.pythonhosted.org/packages/70/85/84904776a52170310e5c0ff23e1f847d88ed3a1894affe8fed3f92f423f5/qai-2.2.9.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "d3d935ed8e36808f7ac313259b4dfe65", "sha256": "f63a037b7870bb3a1b37d8e1cefdc3625e2c7b1873ba7f25f12a84522b92f0b5"}, "downloads": -1, "filename": "qai-2.3.0.tar.gz", "has_sig": false, "md5_digest": "d3d935ed8e36808f7ac313259b4dfe65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 13016, "upload_time": "2019-10-29T12:31:38", "upload_time_iso_8601": "2019-10-29T12:31:38.222430Z", "url": "https://files.pythonhosted.org/packages/7f/06/91691e08f60b16221b7009bdad5ca1472bc4db743fc82a8166898920ceb9/qai-2.3.0.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "72ecff30afc31af5353e184597a39d50", "sha256": "4fcfa879d4718be2f094aecf0b8bab274b8db3a4e2c6e9449499c0438aa212e2"}, "downloads": -1, "filename": "qai-2.3.1.tar.gz", "has_sig": false, "md5_digest": "72ecff30afc31af5353e184597a39d50", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 13021, "upload_time": "2019-10-29T16:18:56", "upload_time_iso_8601": "2019-10-29T16:18:56.719543Z", "url": "https://files.pythonhosted.org/packages/a4/f5/d338bf97bdc0191292c070dcb35251b55f8adbac879966c2667e8605a503/qai-2.3.1.tar.gz", "yanked": false}], "2.3.2": [{"comment_text": "", "digests": {"md5": "d5dc956098deb2429c26a9e4569e81cb", "sha256": "69faef6fce796ddd4cc321907ec0454272c6ddb0d839605f26ade3b4b9790a37"}, "downloads": -1, "filename": "qai-2.3.2.tar.gz", "has_sig": false, "md5_digest": "d5dc956098deb2429c26a9e4569e81cb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 12984, "upload_time": "2019-10-29T16:59:12", "upload_time_iso_8601": "2019-10-29T16:59:12.864184Z", "url": "https://files.pythonhosted.org/packages/e8/75/b95dc47cc2eeb8e5a29b07bd7eed75e932d4d9363d61c5b877c8c156d393/qai-2.3.2.tar.gz", "yanked": false}], "2.3.3": [{"comment_text": "", "digests": {"md5": "22a018e155c65d4ea20ad1e931d43364", "sha256": "ff28ea6481c2a49231d35b00212ba359c6fba7f05ea13cbfa55af251f9da07f3"}, "downloads": -1, "filename": "qai-2.3.3.tar.gz", "has_sig": false, "md5_digest": "22a018e155c65d4ea20ad1e931d43364", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 13420, "upload_time": "2019-10-30T20:25:08", "upload_time_iso_8601": "2019-10-30T20:25:08.755762Z", "url": "https://files.pythonhosted.org/packages/5f/b8/7c202caac43b9baa3d06e31fb9e4a0d6020df12b3a1d4bc4aeb74daba132/qai-2.3.3.tar.gz", "yanked": false}], "2.3.4": [{"comment_text": "", "digests": {"md5": "55a0492508f9cc1ebc8a5742fb536290", "sha256": "c9ff390c971740d4232f3b657828ba5a5744b89488c56ce020b7e8cc2284bfc4"}, "downloads": -1, "filename": "qai-2.3.4.tar.gz", "has_sig": false, "md5_digest": "55a0492508f9cc1ebc8a5742fb536290", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 13942, "upload_time": "2019-11-14T20:21:29", "upload_time_iso_8601": "2019-11-14T20:21:29.237159Z", "url": "https://files.pythonhosted.org/packages/2e/9d/6aa093372be8210e2721bf239884514e65df5412c36977082b5ea312aa83/qai-2.3.4.tar.gz", "yanked": false}], "2.3.5": [{"comment_text": "", "digests": {"md5": "dbe87b130db66eccf2973fca46d2f01b", "sha256": "75aa827bbfd7734fe402d58332f0984f4052561caef2125172f91df7ca40f8ca"}, "downloads": -1, "filename": "qai-2.3.5.tar.gz", "has_sig": false, "md5_digest": "dbe87b130db66eccf2973fca46d2f01b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 14207, "upload_time": "2019-11-14T22:11:16", "upload_time_iso_8601": "2019-11-14T22:11:16.193827Z", "url": "https://files.pythonhosted.org/packages/3e/37/9bd56e2621cf3c9834c78571e3d08dc02df9f9cafeca4132709a9b454e9f/qai-2.3.5.tar.gz", "yanked": false}], "2.3.6": [{"comment_text": "", "digests": {"md5": "b500a17c179cf36e3c2f1c6189e3883c", "sha256": "b8a9ed222dbc46b13aae84526a134fe907255fc9138eb73ce2e189b47e0244e4"}, "downloads": -1, "filename": "qai-2.3.6.tar.gz", "has_sig": false, "md5_digest": "b500a17c179cf36e3c2f1c6189e3883c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 14641, "upload_time": "2019-11-15T22:36:39", "upload_time_iso_8601": "2019-11-15T22:36:39.845111Z", "url": "https://files.pythonhosted.org/packages/e6/72/e74896f02d1384925b8da16ac2080513ed49181e03df6601a87f758bf153/qai-2.3.6.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "25a61193568e7410577ded9872f910ec", "sha256": "74fff121f14e7f211cef18cb733b986cc19533d65825bb4f0e341877489ce198"}, "downloads": -1, "filename": "qai-2.4.0.tar.gz", "has_sig": false, "md5_digest": "25a61193568e7410577ded9872f910ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 18492, "upload_time": "2019-11-22T01:35:28", "upload_time_iso_8601": "2019-11-22T01:35:28.980260Z", "url": "https://files.pythonhosted.org/packages/f1/ed/d0b55ffdae251554debf0785a267401600483a9a6b2f33f3bb6833936a9b/qai-2.4.0.tar.gz", "yanked": false}], "2.4.1": [{"comment_text": "", "digests": {"md5": "32f8e231e3b54031a873a49ade5dc6c5", "sha256": "0a5adcca899cb1401ab83c924915a0de2ace6986f995fdd00e8ad2cec2417713"}, "downloads": -1, "filename": "qai-2.4.1.tar.gz", "has_sig": false, "md5_digest": "32f8e231e3b54031a873a49ade5dc6c5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 15690, "upload_time": "2019-11-22T16:18:09", "upload_time_iso_8601": "2019-11-22T16:18:09.477918Z", "url": "https://files.pythonhosted.org/packages/79/4b/3aa8f4686195904a0b7f5c38f757cee05c34cb0a227ef83fc03a8ffe2ceb/qai-2.4.1.tar.gz", "yanked": false}], "2.4.2": [{"comment_text": "", "digests": {"md5": "ac667a03e36a8f5d40504c0c846d1014", "sha256": "98b247a3717bddeb9c05f2aa6f495db33af3568767ef3a7abb92c24f883cdc9b"}, "downloads": -1, "filename": "qai-2.4.2.tar.gz", "has_sig": false, "md5_digest": "ac667a03e36a8f5d40504c0c846d1014", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 18526, "upload_time": "2019-12-02T23:12:07", "upload_time_iso_8601": "2019-12-02T23:12:07.866007Z", "url": "https://files.pythonhosted.org/packages/9c/06/24bb26e4dbc891ad1bd9fbec4d17d91bd08055156303389d3d989dab7c30/qai-2.4.2.tar.gz", "yanked": false}], "2.5.3": [{"comment_text": "", "digests": {"md5": "097b792d2da9375ac4bad0cb14990ad7", "sha256": "2972cd2df0809064892602ecba43ecf41b5661942fbdf37e559ede606186ec1a"}, "downloads": -1, "filename": "qai-2.5.3.tar.gz", "has_sig": false, "md5_digest": "097b792d2da9375ac4bad0cb14990ad7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 19384, "upload_time": "2019-12-12T20:16:53", "upload_time_iso_8601": "2019-12-12T20:16:53.388498Z", "url": "https://files.pythonhosted.org/packages/43/ce/4458d210e6e2ae71ee47292d19969a0eb3389decff825fb00ba810ebbe0a/qai-2.5.3.tar.gz", "yanked": false}], "2.5.4": [{"comment_text": "", "digests": {"md5": "9d6d26bb72f1decab97d7466f52f5c97", "sha256": "908e7ad1eddc48973be687b5ff5f28767d3434bdd951549bf7750e042c5a40b1"}, "downloads": -1, "filename": "qai-2.5.4.tar.gz", "has_sig": false, "md5_digest": "9d6d26bb72f1decab97d7466f52f5c97", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 19530, "upload_time": "2019-12-12T22:15:23", "upload_time_iso_8601": "2019-12-12T22:15:23.827095Z", "url": "https://files.pythonhosted.org/packages/32/ed/30f25b3c92e6062c556e994653fa9cf44ae9ce226cecf3043c5fc04ec83c/qai-2.5.4.tar.gz", "yanked": false}], "2.5.5": [{"comment_text": "", "digests": {"md5": "cf11866a256b1448e9866dd52b95e548", "sha256": "c28db55947bbbff0bfc221bdb7fccf164c0a88a33a5e0e61fa12f49a3717e9cd"}, "downloads": -1, "filename": "qai-2.5.5.tar.gz", "has_sig": false, "md5_digest": "cf11866a256b1448e9866dd52b95e548", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 16549, "upload_time": "2019-12-12T23:47:58", "upload_time_iso_8601": "2019-12-12T23:47:58.072877Z", "url": "https://files.pythonhosted.org/packages/fa/3e/14f8237de2dab39eb5c8582aca634e7d10753d2ed41007002c78fbf8cdf4/qai-2.5.5.tar.gz", "yanked": false}], "2.5.6": [{"comment_text": "", "digests": {"md5": "71fcbd1868c9605a8914799453d6b2ad", "sha256": "7b36e003abf67a7be174e968ef36f2bafa0f1519bd0d8658b3697832a114f96c"}, "downloads": -1, "filename": "qai-2.5.6.tar.gz", "has_sig": false, "md5_digest": "71fcbd1868c9605a8914799453d6b2ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 16428, "upload_time": "2019-12-13T00:05:04", "upload_time_iso_8601": "2019-12-13T00:05:04.699059Z", "url": "https://files.pythonhosted.org/packages/46/53/66eb3c77d1e32b57f042e2796b0e8b5c8897e8de0c098e42edc9152c0f84/qai-2.5.6.tar.gz", "yanked": false}], "2.5.8": [{"comment_text": "", "digests": {"md5": "2deda9ccd270c9202beb85083e6c031d", "sha256": "88f36d28f9cf74a8a668d08c17103992ead8eed50e959d45bf26cb760b12efd9"}, "downloads": -1, "filename": "qai-2.5.8.tar.gz", "has_sig": false, "md5_digest": "2deda9ccd270c9202beb85083e6c031d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 19680, "upload_time": "2020-01-02T22:23:03", "upload_time_iso_8601": "2020-01-02T22:23:03.757113Z", "url": "https://files.pythonhosted.org/packages/6a/44/b190cd3e6976389716632f1b9ac2b1f9d3062c8e14d38bff1e1810bb7e5b/qai-2.5.8.tar.gz", "yanked": false}], "2.6.1": [{"comment_text": "", "digests": {"md5": "645d739edc59a4dfeab009d18fdaf9d8", "sha256": "a4572f31aecd7fd6ad1bbaf85284ffafd6e9fdacee23158352ba72f8a8cd106c"}, "downloads": -1, "filename": "qai-2.6.1.tar.gz", "has_sig": false, "md5_digest": "645d739edc59a4dfeab009d18fdaf9d8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 20068, "upload_time": "2020-01-17T17:49:29", "upload_time_iso_8601": "2020-01-17T17:49:29.403479Z", "url": "https://files.pythonhosted.org/packages/b2/24/9d961604a0b2e1910d3b6e1eac72022b5189d9f6d4a0df89d3b0739ae808/qai-2.6.1.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "3556bc2fc6f922badf66646dcab21756", "sha256": "18c499f241da04d3ca0b969b610aba1232576db9ee3b49bedae630dc260e376b"}, "downloads": -1, "filename": "qai-3.0.0.tar.gz", "has_sig": false, "md5_digest": "3556bc2fc6f922badf66646dcab21756", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 19859, "upload_time": "2020-03-26T20:54:40", "upload_time_iso_8601": "2020-03-26T20:54:40.469135Z", "url": "https://files.pythonhosted.org/packages/99/b2/5bc812acdc3d6c30865177424df6c1888fd5b14bca650da401091715a4e9/qai-3.0.0.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "1aea289cb1914201012b230e1f09aa21", "sha256": "96ea6fe04d9f5acd619215c7ad3445329c941264e9a9e23604e7aec34b265a4d"}, "downloads": -1, "filename": "qai-4.0.0.tar.gz", "has_sig": false, "md5_digest": "1aea289cb1914201012b230e1f09aa21", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 20082, "upload_time": "2020-04-07T22:21:45", "upload_time_iso_8601": "2020-04-07T22:21:45.423849Z", "url": "https://files.pythonhosted.org/packages/dc/f4/9bf841fcef385bdda3891a6d6c3392838e457e0b5fbb94af6a9fba65456a/qai-4.0.0.tar.gz", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "36501d6573f93ddede4d04386c09a9f3", "sha256": "de270da127b9ce47dc44a33c622b96701743e45700f35beb8bfb03259d1df7c2"}, "downloads": -1, "filename": "qai-4.0.1.tar.gz", "has_sig": false, "md5_digest": "36501d6573f93ddede4d04386c09a9f3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 20132, "upload_time": "2020-04-08T00:27:08", "upload_time_iso_8601": "2020-04-08T00:27:08.767033Z", "url": "https://files.pythonhosted.org/packages/d5/c9/be2262e218d3c50e93cb0d9ca80e9fbd785786a22994ad315fd79e141d03/qai-4.0.1.tar.gz", "yanked": false}], "4.0.2": [{"comment_text": "", "digests": {"md5": "5f9be04c7f7437da50b06e6c0f11db88", "sha256": "2e43efeb791dcc4fdba7838c6de5a84a4489ae6eae4deb822155b716b9ec7e70"}, "downloads": -1, "filename": "qai-4.0.2.tar.gz", "has_sig": false, "md5_digest": "5f9be04c7f7437da50b06e6c0f11db88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 20163, "upload_time": "2020-04-08T16:36:28", "upload_time_iso_8601": "2020-04-08T16:36:28.882155Z", "url": "https://files.pythonhosted.org/packages/df/1e/e77487733c04ab700347874c6b9776ce34c8bf4fa217cb29291c4c96fb4c/qai-4.0.2.tar.gz", "yanked": false}], "4.0.3": [{"comment_text": "", "digests": {"md5": "b5dd82ecdef6b94f932f618a17f99006", "sha256": "e61ea32784d91ec5facfec225326b43b3625f11e4ad2a5edee02bdac21919830"}, "downloads": -1, "filename": "qai-4.0.3.tar.gz", "has_sig": false, "md5_digest": "b5dd82ecdef6b94f932f618a17f99006", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 19956, "upload_time": "2020-04-17T17:15:57", "upload_time_iso_8601": "2020-04-17T17:15:57.054482Z", "url": "https://files.pythonhosted.org/packages/da/3e/4fb6626c4001c9d9c9cb555bdd2a336eb06df988cb3420344e04f2c7ef51/qai-4.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b5dd82ecdef6b94f932f618a17f99006", "sha256": "e61ea32784d91ec5facfec225326b43b3625f11e4ad2a5edee02bdac21919830"}, "downloads": -1, "filename": "qai-4.0.3.tar.gz", "has_sig": false, "md5_digest": "b5dd82ecdef6b94f932f618a17f99006", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.4", "size": 19956, "upload_time": "2020-04-17T17:15:57", "upload_time_iso_8601": "2020-04-17T17:15:57.054482Z", "url": "https://files.pythonhosted.org/packages/da/3e/4fb6626c4001c9d9c9cb555bdd2a336eb06df988cb3420344e04f2c7ef51/qai-4.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:19 2020"}