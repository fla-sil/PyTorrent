{"info": {"author": "UNKNOWN", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "codequality\n===========\n\nSimple code checking metatool.\n\ncodequality is glue around multiple external code checking tools. Its\ngoal is easy integration with editing environments and version control\n(scm) tools.\n\nInstallation\n------------\n\n::\n\n    sudo python setup.py install\n\nThen, run:\n\n::\n\n    codequality --list-checkers\n\nto see what checkers are available and installed on your machine. For\nnow, codequality only knows about a few checkers, and it will use any\nthat are available.\n\nUsage details\n-------------\n\nSee ``codequality --help``.\n\nSome examples:\n\n::\n\n    codequality foo.py bar.js\n    codequality --ignore \"*junk/*\"\n    codequality --scm git\n    codequality --scm git --rev HEAD~3\n\nIntegration\n-----------\n\nAll output follows a simple parseable format:\n\n::\n\n    filename:linenumber:columnnumber: message\n\nwhere the column number is optional (some external tools don't provide\nit).\n\nvim integration\n~~~~~~~~~~~~~~~\n\n::\n\n    :setlocal makeprg=codequality\\ %\n    :make\n\nsee vim's ``:help make`` for details about how this works.\n\ngit post-commit integration\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPut the following in your ``.git/hooks/post-commit`` file:\n\n::\n\n    #!/bin/sh\n    codequality --scm git -r HEAD\n\nand make sure to ``chmod +x`` the post-commit hook file. You will then\nhave a codequality report after each local commit.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jenanwise/codequality", "keywords": "codequality", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "codequality", "package_url": "https://pypi.org/project/codequality/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/codequality/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/jenanwise/codequality"}, "release_url": "https://pypi.org/project/codequality/0.2-dev/", "requires_dist": null, "requires_python": null, "summary": "Simple code checking metatool", "version": "0.2-dev", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simple code checking metatool.</p>\n<p>codequality is glue around multiple external code checking tools. Its\ngoal is easy integration with editing environments and version control\n(scm) tools.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>sudo python setup.py install\n</pre>\n<p>Then, run:</p>\n<pre>codequality --list-checkers\n</pre>\n<p>to see what checkers are available and installed on your machine. For\nnow, codequality only knows about a few checkers, and it will use any\nthat are available.</p>\n</div>\n<div id=\"usage-details\">\n<h2>Usage details</h2>\n<p>See <tt>codequality <span class=\"pre\">--help</span></tt>.</p>\n<p>Some examples:</p>\n<pre>codequality foo.py bar.js\ncodequality --ignore \"*junk/*\"\ncodequality --scm git\ncodequality --scm git --rev HEAD~3\n</pre>\n</div>\n<div id=\"integration\">\n<h2>Integration</h2>\n<p>All output follows a simple parseable format:</p>\n<pre>filename:linenumber:columnnumber: message\n</pre>\n<p>where the column number is optional (some external tools don\u2019t provide\nit).</p>\n<div id=\"vim-integration\">\n<h3>vim integration</h3>\n<pre>:setlocal makeprg=codequality\\ %\n:make\n</pre>\n<p>see vim\u2019s <tt>:help make</tt> for details about how this works.</p>\n</div>\n<div id=\"git-post-commit-integration\">\n<h3>git post-commit integration</h3>\n<p>Put the following in your <tt><span class=\"pre\">.git/hooks/post-commit</span></tt> file:</p>\n<pre>#!/bin/sh\ncodequality --scm git -r HEAD\n</pre>\n<p>and make sure to <tt>chmod +x</tt> the post-commit hook file. You will then\nhave a codequality report after each local commit.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 929265, "releases": {"0.2-dev": [{"comment_text": "", "digests": {"md5": "c4c3c1af68a9cff6553bfe02eed5c3b3", "sha256": "c7d7019047262888b9d3e470e5c5bd1231ae8dffd6a3d2d2a7af94d24c8f07e0"}, "downloads": -1, "filename": "codequality-0.2-dev.tar.gz", "has_sig": false, "md5_digest": "c4c3c1af68a9cff6553bfe02eed5c3b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7841, "upload_time": "2013-11-26T06:10:43", "upload_time_iso_8601": "2013-11-26T06:10:43.761330Z", "url": "https://files.pythonhosted.org/packages/14/44/d79e5d87f9cb95ef78fb720ea4d22b382ba028d8f7b832af428bef273d11/codequality-0.2-dev.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c4c3c1af68a9cff6553bfe02eed5c3b3", "sha256": "c7d7019047262888b9d3e470e5c5bd1231ae8dffd6a3d2d2a7af94d24c8f07e0"}, "downloads": -1, "filename": "codequality-0.2-dev.tar.gz", "has_sig": false, "md5_digest": "c4c3c1af68a9cff6553bfe02eed5c3b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7841, "upload_time": "2013-11-26T06:10:43", "upload_time_iso_8601": "2013-11-26T06:10:43.761330Z", "url": "https://files.pythonhosted.org/packages/14/44/d79e5d87f9cb95ef78fb720ea4d22b382ba028d8f7b832af428bef273d11/codequality-0.2-dev.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:14 2020"}