{"info": {"author": "Alexander Oblovatniy", "author_email": "oblovatniy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Libraries"], "description": "django-rf-candv-choices\n=======================\n\n|pypi_package| |pypi_downloads| |python_versions| |license|\n\n\nUse `django-candv-choices`_ with `django-rest-framework`_.\n\n\n**Table of contents**\n\n.. contents::\n    :local:\n    :depth: 2\n    :backlinks: none\n\n\nInstallation\n------------\n\nInstall from `PyPI <https://pypi.python.org/pypi/django-rf-candv-choices>`_:\n\n.. code-block:: bash\n\n  $ pip install django-rf-candv-choices\n\n\nUsage\n-----\n\nSerializing choices\n~~~~~~~~~~~~~~~~~~~\n\nFor example, you have some model which uses\n``candv_x.django.choices.ChoiceField`` to store one of allowed values. This\nmight be a ``User`` model, which has ``user_role`` field, where values for\n``user_role`` are defined by ``USER_ROLES`` constants container.\n\nUse ``candv_x.rest_framework.choices.ChoiceField`` for ``user_role``\nserialization:\n\n.. code-block:: python\n\n  from rest_framework import serializers\n  from candv_x.rest_framework.choices import ChoiceField\n\n  from .constants import USER_ROLES\n  from .models import User\n\n\n  class UserSerializer(serializers.ModelSerializer):\n      user_role = ChoiceField(USER_ROLES)\n\n      class Meta:\n          model = User\n          fields = ('id', 'name', 'user_role', )\n\n\n\nExposing choices to the outer world\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you need to expose list of possible choices for your field, then you can\nuse a ``ChoicesList`` base view to get a class-based view:\n\n.. code-block:: python\n\n  from candv_x.rest_framework.choices import ChoicesList\n\n  from .constants import USER_ROLES\n\n\n  class UserRoleList(ChoicesList):\n      choices = USER_ROLES\n\nThe only thing you need to do is to define ``choices`` attribute.\n\nThere is a faster way also: you can use a ``coalitions_list`` view factory to\nget a function-based view:\n\n\n.. code-block:: python\n\n  from candv_x.rest_framework.choices import simple_choices_list\n\n  from .constants import USER_ROLES\n\n\n  user_role_list = simple_choices_list(USER_ROLES)\n\n\nChangelog\n---------\n\n*You can click a version name to see a diff with the previous one.*\n\n* `1.0.0`_ (Aug 1, 2015)\n\n  Initial version\n\n\n.. |pypi_package| image:: http://img.shields.io/pypi/v/django-rf-candv-choices.svg?style=flat\n   :target: http://badge.fury.io/py/django-rf-candv-choices/\n   :alt: Version of PyPI package\n\n.. |pypi_downloads| image:: http://img.shields.io/pypi/dm/django-rf-candv-choices.svg?style=flat\n   :target: https://crate.io/packages/django-rf-candv-choices/\n   :alt: Number of downloads of PyPI package\n\n.. |python_versions| image:: https://img.shields.io/badge/Python-2.7,3.4-brightgreen.svg?style=flat\n   :alt: Supported versions of Python\n\n.. |license| image:: https://img.shields.io/badge/license-LGPLv3-blue.svg?style=flat\n   :target: https://github.com/oblalex/django-rf-candv-choices/blob/master/LICENSE\n   :alt: Package license\n\n\n.. _django-candv-choices: https://github.com/oblalex/django-candv-choices\n.. _django-rest-framework: http://www.django-rest-framework.org\n\n.. _1.0.0: https://github.com/oblalex/django-rf-candv-choices/releases/tag/v1.0.0\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/oblalex/django-rf-candv-choices", "keywords": "choices,constants,candv,values,Django,rest-framework", "license": "LGPLv3", "maintainer": null, "maintainer_email": null, "name": "django-rf-candv-choices", "package_url": "https://pypi.org/project/django-rf-candv-choices/", "platform": "any", "project_url": "https://pypi.org/project/django-rf-candv-choices/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/oblalex/django-rf-candv-choices"}, "release_url": "https://pypi.org/project/django-rf-candv-choices/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Support of django-candv-choices for django-rest-framework.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://badge.fury.io/py/django-rf-candv-choices/\" rel=\"nofollow\"><img alt=\"Version of PyPI package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4164efd104a2f1d5081722f2a5231c63f3c9359b/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d72662d63616e64762d63686f696365732e7376673f7374796c653d666c6174\"></a> <a href=\"https://crate.io/packages/django-rf-candv-choices/\" rel=\"nofollow\"><img alt=\"Number of downloads of PyPI package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fee5058d99c8e35eee9f239230148e7e9733704d/687474703a2f2f696d672e736869656c64732e696f2f707970692f646d2f646a616e676f2d72662d63616e64762d63686f696365732e7376673f7374796c653d666c6174\"></a> <img alt=\"Supported versions of Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d882b568e30fd9342c57e5ae5c80bc5bfb34a8e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d322e372c332e342d627269676874677265656e2e7376673f7374796c653d666c6174\"> <a href=\"https://github.com/oblalex/django-rf-candv-choices/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"Package license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1f4a5ff984e4af0726458ef6c6de7d71493c849c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4c47504c76332d626c75652e7376673f7374796c653d666c6174\"></a></p>\n<p>Use <a href=\"https://github.com/oblalex/django-candv-choices\" rel=\"nofollow\">django-candv-choices</a> with <a href=\"http://www.django-rest-framework.org\" rel=\"nofollow\">django-rest-framework</a>.</p>\n<p><strong>Table of contents</strong></p>\n<div id=\"contents\">\n<ul>\n<li><a href=\"#installation\" id=\"id2\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" id=\"id3\" rel=\"nofollow\">Usage</a><ul>\n<li><a href=\"#serializing-choices\" id=\"id4\" rel=\"nofollow\">Serializing choices</a></li>\n<li><a href=\"#exposing-choices-to-the-outer-world\" id=\"id5\" rel=\"nofollow\">Exposing choices to the outer world</a></li>\n</ul>\n</li>\n<li><a href=\"#changelog\" id=\"id6\" rel=\"nofollow\">Changelog</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install from <a href=\"https://pypi.python.org/pypi/django-rf-candv-choices\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>$ pip install django-rf-candv-choices\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"serializing-choices\">\n<h3>Serializing choices</h3>\n<p>For example, you have some model which uses\n<tt>candv_x.django.choices.ChoiceField</tt> to store one of allowed values. This\nmight be a <tt>User</tt> model, which has <tt>user_role</tt> field, where values for\n<tt>user_role</tt> are defined by <tt>USER_ROLES</tt> constants container.</p>\n<p>Use <tt>candv_x.rest_framework.choices.ChoiceField</tt> for <tt>user_role</tt>\nserialization:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rest_framework</span> <span class=\"kn\">import</span> <span class=\"n\">serializers</span>\n<span class=\"kn\">from</span> <span class=\"nn\">candv_x.rest_framework.choices</span> <span class=\"kn\">import</span> <span class=\"n\">ChoiceField</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.constants</span> <span class=\"kn\">import</span> <span class=\"n\">USER_ROLES</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UserSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"n\">user_role</span> <span class=\"o\">=</span> <span class=\"n\">ChoiceField</span><span class=\"p\">(</span><span class=\"n\">USER_ROLES</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">User</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'user_role'</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"exposing-choices-to-the-outer-world\">\n<h3>Exposing choices to the outer world</h3>\n<p>If you need to expose list of possible choices for your field, then you can\nuse a <tt>ChoicesList</tt> base view to get a class-based view:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">candv_x.rest_framework.choices</span> <span class=\"kn\">import</span> <span class=\"n\">ChoicesList</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.constants</span> <span class=\"kn\">import</span> <span class=\"n\">USER_ROLES</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UserRoleList</span><span class=\"p\">(</span><span class=\"n\">ChoicesList</span><span class=\"p\">):</span>\n    <span class=\"n\">choices</span> <span class=\"o\">=</span> <span class=\"n\">USER_ROLES</span>\n</pre>\n<p>The only thing you need to do is to define <tt>choices</tt> attribute.</p>\n<p>There is a faster way also: you can use a <tt>coalitions_list</tt> view factory to\nget a function-based view:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">candv_x.rest_framework.choices</span> <span class=\"kn\">import</span> <span class=\"n\">simple_choices_list</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.constants</span> <span class=\"kn\">import</span> <span class=\"n\">USER_ROLES</span>\n\n\n<span class=\"n\">user_role_list</span> <span class=\"o\">=</span> <span class=\"n\">simple_choices_list</span><span class=\"p\">(</span><span class=\"n\">USER_ROLES</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p><em>You can click a version name to see a diff with the previous one.</em></p>\n<ul>\n<li><p><a href=\"https://github.com/oblalex/django-rf-candv-choices/releases/tag/v1.0.0\" rel=\"nofollow\">1.0.0</a> (Aug 1, 2015)</p>\n<p>Initial version</p>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1660168, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "1478d3e115478cfd392642a73c47ea19", "sha256": "73a5d8ffacdd6999bcb148f2fe85f6935e9fcae33f48b72d160dcbfd343e6b0c"}, "downloads": -1, "filename": "django-rf-candv-choices-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1478d3e115478cfd392642a73c47ea19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6055, "upload_time": "2015-08-01T20:06:08", "upload_time_iso_8601": "2015-08-01T20:06:08.053419Z", "url": "https://files.pythonhosted.org/packages/4a/25/3346d41697f279607543f696cc89cab546ce9a9787d29f5ab66deda37764/django-rf-candv-choices-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1478d3e115478cfd392642a73c47ea19", "sha256": "73a5d8ffacdd6999bcb148f2fe85f6935e9fcae33f48b72d160dcbfd343e6b0c"}, "downloads": -1, "filename": "django-rf-candv-choices-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1478d3e115478cfd392642a73c47ea19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6055, "upload_time": "2015-08-01T20:06:08", "upload_time_iso_8601": "2015-08-01T20:06:08.053419Z", "url": "https://files.pythonhosted.org/packages/4a/25/3346d41697f279607543f696cc89cab546ce9a9787d29f5ab66deda37764/django-rf-candv-choices-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:57 2020"}