{"info": {"author": "Anthon van der Neut", "author_email": "a.van.der.neut@ruamel.eu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: Other/Proprietary License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "************\nrelease-info\n************\n\n.. image:: https://sourceforge.net/p/release-info/code/ci/default/tree/_doc/_static/license.svg?format=raw\n   :target: https://opensource.org/licenses/MIT\n\n.. image:: https://sourceforge.net/p/release-info/code/ci/default/tree/_doc/_static/pypi.svg?format=raw\n   :target: https://pypi.org/project/release-info/\n\n.. image:: https://sourceforge.net/p/oitnb/code/ci/default/tree/_doc/_static/oitnb.svg?format=raw\n   :target: https://pypi.org/project/oitnb/\n\n.. image:: https://sourceforge.net/p/ryd/code/ci/default/tree/_doc/_static/ryd.svg?format=raw\n   :target: https://pypi.org/project/ryd/\n\nFor various reasons you might want to know which Python versions are \"current\":\n\n- provide a list of pyXY targets to tox\n- remove a no longer supported version of Python from the .whl files you generate\n  to upload to PyPI\n- which 'Programming Language :: Python ::' classifiers to include in your\n  package information\n- check if you have the latest micro version of a Python installed on your system\n\nextracting this kind of information from various PEPs with slightly different\nformats, python.org and other web pages, is cumbersome. This package both provides a commandline\nutility ``python_release_info`` that you can use in scripts, makefiles, etc. and a programmtic\ninterface to get to release information.\n\nThe release information is retrieved from the internet and can be updated e.g.\nonly a daily basis after which build scripts can check if a new version needs to\nbe downloaded, compiled, installed. Pre-release information can be queried as well.\n\nThe following is a commandline session from March 28th, 2020 ( which you can simulate by specifying ``--dd 2020-03-28``)::\n\n  $ /opt/python/3.8.2/bin/python -m venv --copies /opt/util/pri\n  $ source /opt/util/pri/bin/activate\n  (pri) $ pip install -U -q pip\n  (pri) $ pip install -q release_info\n  (pri) $ python_release_info current\n  2.7.17\n  3.5.9\n  3.6.10\n  3.7.7\n  3.8.2\n  (pri) $ python_release_info pre\n  3.9.0.a.5\n  (pri) $ echo $?    # 0 -> updated, 1 -> not updated\n  1\n  (pri) $ mkdir /opt/util/pri/tmp\n  pri) $ ls --classify /opt/util/pri/tmp\n  Python-3.8.2/  Python-3.8.2.tar.xz\n\n\nIf md5 information is available (true for all current and future versions), the downloaded tar file is checked.\n\n\nCONFIG FILE\n===========\n\nYour config file normally is ``~/.config/python_release_info/config.ini``\n(i.e. follows XDG) except for Windows: ``%APPDATA%/python_release_info/config.ini``.\n\nThe ``[INFO]`` section in that file allows you to add or overwrite data in the official information tree::\n\n  [INFO]\n  add = xxx.pon\n  overwrite = yyy.pon\n\nYou can, but don't have to have either or both set, by default both are\ncommented out. The files must have the same hierarchical structure as the\n``release_info.pon``, so it probably best to copy that file and delete what is\nnot relevant, then update the rest.\n\nThe difference between the two is that when using ``add`` the data loaded from\nthere does not override already existing \"paths\" to leaf node data loaded from\n``release_info.pon``. You should use this for information that you expect to be\nincorporated in future automatic updates, and when it does you want to use that\ninformation. You should ``overwrite`` e.g. when you found a data error and cannot wait to\nhave it fixed in the ``release_info`` repository and automatically downloaded.\n\n\nSo if you would have the following in the automatically updated ``release_info.pon`` (in reality there is more data there)::\n\n  dict(\n    cpython={\n      (3, 8): {\n        (3, 8, 0): dict(rel=date(2019, 10, 14)),\n        (3, 8, 1): dict(rel=date(2019, 12, 18)),\n        (3, 8, 2): dict(rel=date(2020, 2, 24), md5='e9d6ebc92183a177b8e8a58cad5b8d67'),\n      },\n    }\n  )\n\nand have the following in your ``xxx.pon`` file (to be added)::\n\n  dict(\n    cpython={\n      (3, 8): {\n        (3, 8, 0): dict(md5='dbac8df9d8b9edc678d0f4cacdb7dbb0'),\n        (3, 8, 1): dict(rel=date(2019, 12, 25), md5='b3fb85fd479c0bf950c626ef80cacb57'),\n        (3, 8, 3): dict(rel=date(2020, 5, 4)),\n      },\n    }\n  )\n\nthen the result would be like::\n\n  dict(\n    cpython={\n      (3, 8): {\n        (3, 8, 0): dict(rel=date(2019, 10, 14), md5='dbac8df9d8b9edc678d0f4cacdb7dbb0'),\n        (3, 8, 1): dict(rel=date(2019, 12, 18), md5='b3fb85fd479c0bf950c626ef80cacb57'),\n        (3, 8, 2): dict(rel=date(2020, 2, 24), md5='e9d6ebc92183a177b8e8a58cad5b8d67'),\n        (3, 8, 3): dict(rel=date(2020, 5, 4)),\n      },\n    }\n  )\n\nbut if the same content would be in ``yyy.pon`` (to be overwritten), then the result would\nbe like::\n\n  dict(\n    cpython={\n      (3, 8): {\n        (3, 8, 0): dict(rel=date(2019, 10, 14), md5='dbac8df9d8b9edc678d0f4cacdb7dbb0'),\n        (3, 8, 1): dict(rel=date(2019, 12, 25), md5='b3fb85fd479c0bf950c626ef80cacb57'),\n        (3, 8, 2): dict(rel=date(2020, 2, 24), md5='e9d6ebc92183a177b8e8a58cad5b8d67'),\n        (3, 8, 3): dict(rel=date(2020, 5, 4)),\n      },\n    }\n  )\n\nwith the difference being in the date for release 3.8.1.\n\n\nAPI\n===\n\nYou can use the release information from your program::\n\n  import pathlib\n  from release_info import release_info\n\n  ri = release_info()\n  ri.download_data()\n  latest = None\n  for version in ri.current():\n      url = ri.src_url(version)\n      print(version, url)\n      latest = version\n  path = pathlib.Path('/var/tmp')\n  ri.download(latest, dir=path, extract=True)\n  print(list(path.glob('Python*')))\n\n\nwhich shows::\n\n  (2, 7, 18) https://www.python.org/ftp/python/2.7.18/Python-2.7.18.tar.xz\n  (3, 5, 9) https://www.python.org/ftp/python/3.5.9/Python-3.5.9.tar.xz\n  (3, 6, 10) https://www.python.org/ftp/python/3.6.10/Python-3.6.10.tar.xz\n  (3, 7, 7) https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tar.xz\n  (3, 8, 2) https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tar.xz\n  [PosixPath('/var/tmp/Python-3.8.2'), PosixPath('/var/tmp/Python-3.8.2.tar.xz')]", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://sourceforge.net/p/release-info/code/ci/default/tree", "keywords": "pypi statistics", "license": "Copyright Ruamel bvba 2007-2020", "maintainer": "", "maintainer_email": "", "name": "release-info", "package_url": "https://pypi.org/project/release-info/", "platform": "", "project_url": "https://pypi.org/project/release-info/", "project_urls": {"Homepage": "https://sourceforge.net/p/release-info/code/ci/default/tree"}, "release_url": "https://pypi.org/project/release-info/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "automatically updated python release information", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"https://sourceforge.net/p/release-info/code/ci/default/tree/_doc/_static/license.svg?format=raw\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/55b79db313156ca604dd82a8066ff2abec3b627a/68747470733a2f2f736f75726365666f7267652e6e65742f702f72656c656173652d696e666f2f636f64652f63692f64656661756c742f747265652f5f646f632f5f7374617469632f6c6963656e73652e7376673f666f726d61743d726177\"></a>\n<a href=\"https://pypi.org/project/release-info/\" rel=\"nofollow\"><img alt=\"https://sourceforge.net/p/release-info/code/ci/default/tree/_doc/_static/pypi.svg?format=raw\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9bf33f901d73232b0aef271e97d35fa7e4fee19c/68747470733a2f2f736f75726365666f7267652e6e65742f702f72656c656173652d696e666f2f636f64652f63692f64656661756c742f747265652f5f646f632f5f7374617469632f707970692e7376673f666f726d61743d726177\"></a>\n<a href=\"https://pypi.org/project/oitnb/\" rel=\"nofollow\"><img alt=\"https://sourceforge.net/p/oitnb/code/ci/default/tree/_doc/_static/oitnb.svg?format=raw\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dbea074abb70e3bde6030892db4c2e52bdc3e743/68747470733a2f2f736f75726365666f7267652e6e65742f702f6f69746e622f636f64652f63692f64656661756c742f747265652f5f646f632f5f7374617469632f6f69746e622e7376673f666f726d61743d726177\"></a>\n<a href=\"https://pypi.org/project/ryd/\" rel=\"nofollow\"><img alt=\"https://sourceforge.net/p/ryd/code/ci/default/tree/_doc/_static/ryd.svg?format=raw\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30bd982bd4df88a05ba4fae576f2de1eab716681/68747470733a2f2f736f75726365666f7267652e6e65742f702f7279642f636f64652f63692f64656661756c742f747265652f5f646f632f5f7374617469632f7279642e7376673f666f726d61743d726177\"></a>\n<p>For various reasons you might want to know which Python versions are \u201ccurrent\u201d:</p>\n<ul>\n<li>provide a list of pyXY targets to tox</li>\n<li>remove a no longer supported version of Python from the .whl files you generate\nto upload to PyPI</li>\n<li>which \u2018Programming Language :: Python ::\u2019 classifiers to include in your\npackage information</li>\n<li>check if you have the latest micro version of a Python installed on your system</li>\n</ul>\n<p>extracting this kind of information from various PEPs with slightly different\nformats, python.org and other web pages, is cumbersome. This package both provides a commandline\nutility <tt>python_release_info</tt> that you can use in scripts, makefiles, etc. and a programmtic\ninterface to get to release information.</p>\n<p>The release information is retrieved from the internet and can be updated e.g.\nonly a daily basis after which build scripts can check if a new version needs to\nbe downloaded, compiled, installed. Pre-release information can be queried as well.</p>\n<p>The following is a commandline session from March 28th, 2020 ( which you can simulate by specifying <tt><span class=\"pre\">--dd</span> <span class=\"pre\">2020-03-28</span></tt>):</p>\n<pre>$ /opt/python/3.8.2/bin/python -m venv --copies /opt/util/pri\n$ source /opt/util/pri/bin/activate\n(pri) $ pip install -U -q pip\n(pri) $ pip install -q release_info\n(pri) $ python_release_info current\n2.7.17\n3.5.9\n3.6.10\n3.7.7\n3.8.2\n(pri) $ python_release_info pre\n3.9.0.a.5\n(pri) $ echo $?    # 0 -&gt; updated, 1 -&gt; not updated\n1\n(pri) $ mkdir /opt/util/pri/tmp\npri) $ ls --classify /opt/util/pri/tmp\nPython-3.8.2/  Python-3.8.2.tar.xz\n</pre>\n<p>If md5 information is available (true for all current and future versions), the downloaded tar file is checked.</p>\n<div id=\"config-file\">\n<h2>CONFIG FILE</h2>\n<p>Your config file normally is <tt><span class=\"pre\">~/.config/python_release_info/config.ini</span></tt>\n(i.e. follows XDG) except for Windows: <tt><span class=\"pre\">%APPDATA%/python_release_info/config.ini</span></tt>.</p>\n<p>The <tt>[INFO]</tt> section in that file allows you to add or overwrite data in the official information tree:</p>\n<pre>[INFO]\nadd = xxx.pon\noverwrite = yyy.pon\n</pre>\n<p>You can, but don\u2019t have to have either or both set, by default both are\ncommented out. The files must have the same hierarchical structure as the\n<tt>release_info.pon</tt>, so it probably best to copy that file and delete what is\nnot relevant, then update the rest.</p>\n<p>The difference between the two is that when using <tt>add</tt> the data loaded from\nthere does not override already existing \u201cpaths\u201d to leaf node data loaded from\n<tt>release_info.pon</tt>. You should use this for information that you expect to be\nincorporated in future automatic updates, and when it does you want to use that\ninformation. You should <tt>overwrite</tt> e.g. when you found a data error and cannot wait to\nhave it fixed in the <tt>release_info</tt> repository and automatically downloaded.</p>\n<p>So if you would have the following in the automatically updated <tt>release_info.pon</tt> (in reality there is more data there):</p>\n<pre>dict(\n  cpython={\n    (3, 8): {\n      (3, 8, 0): dict(rel=date(2019, 10, 14)),\n      (3, 8, 1): dict(rel=date(2019, 12, 18)),\n      (3, 8, 2): dict(rel=date(2020, 2, 24), md5='e9d6ebc92183a177b8e8a58cad5b8d67'),\n    },\n  }\n)\n</pre>\n<p>and have the following in your <tt>xxx.pon</tt> file (to be added):</p>\n<pre>dict(\n  cpython={\n    (3, 8): {\n      (3, 8, 0): dict(md5='dbac8df9d8b9edc678d0f4cacdb7dbb0'),\n      (3, 8, 1): dict(rel=date(2019, 12, 25), md5='b3fb85fd479c0bf950c626ef80cacb57'),\n      (3, 8, 3): dict(rel=date(2020, 5, 4)),\n    },\n  }\n)\n</pre>\n<p>then the result would be like:</p>\n<pre>dict(\n  cpython={\n    (3, 8): {\n      (3, 8, 0): dict(rel=date(2019, 10, 14), md5='dbac8df9d8b9edc678d0f4cacdb7dbb0'),\n      (3, 8, 1): dict(rel=date(2019, 12, 18), md5='b3fb85fd479c0bf950c626ef80cacb57'),\n      (3, 8, 2): dict(rel=date(2020, 2, 24), md5='e9d6ebc92183a177b8e8a58cad5b8d67'),\n      (3, 8, 3): dict(rel=date(2020, 5, 4)),\n    },\n  }\n)\n</pre>\n<p>but if the same content would be in <tt>yyy.pon</tt> (to be overwritten), then the result would\nbe like:</p>\n<pre>dict(\n  cpython={\n    (3, 8): {\n      (3, 8, 0): dict(rel=date(2019, 10, 14), md5='dbac8df9d8b9edc678d0f4cacdb7dbb0'),\n      (3, 8, 1): dict(rel=date(2019, 12, 25), md5='b3fb85fd479c0bf950c626ef80cacb57'),\n      (3, 8, 2): dict(rel=date(2020, 2, 24), md5='e9d6ebc92183a177b8e8a58cad5b8d67'),\n      (3, 8, 3): dict(rel=date(2020, 5, 4)),\n    },\n  }\n)\n</pre>\n<p>with the difference being in the date for release 3.8.1.</p>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<p>You can use the release information from your program:</p>\n<pre>import pathlib\nfrom release_info import release_info\n\nri = release_info()\nri.download_data()\nlatest = None\nfor version in ri.current():\n    url = ri.src_url(version)\n    print(version, url)\n    latest = version\npath = pathlib.Path('/var/tmp')\nri.download(latest, dir=path, extract=True)\nprint(list(path.glob('Python*')))\n</pre>\n<p>which shows:</p>\n<pre>(2, 7, 18) https://www.python.org/ftp/python/2.7.18/Python-2.7.18.tar.xz\n(3, 5, 9) https://www.python.org/ftp/python/3.5.9/Python-3.5.9.tar.xz\n(3, 6, 10) https://www.python.org/ftp/python/3.6.10/Python-3.6.10.tar.xz\n(3, 7, 7) https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tar.xz\n(3, 8, 2) https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tar.xz\n[PosixPath('/var/tmp/Python-3.8.2'), PosixPath('/var/tmp/Python-3.8.2.tar.xz')]\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6962923, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5aa87c038dadd5fa897c7e9a6257996f", "sha256": "24116a4829ecf7a01979761fef712b03be40918c5241cb00256564b163f6d865"}, "downloads": -1, "filename": "release_info-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5aa87c038dadd5fa897c7e9a6257996f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10575, "upload_time": "2020-03-28T13:00:21", "upload_time_iso_8601": "2020-03-28T13:00:21.433214Z", "url": "https://files.pythonhosted.org/packages/48/f1/b63f14a8291ccde30b2f11b5006c62ec7168a9ce08338523e6ad71166f22/release_info-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "626cf07749305126ddfa0ff1e700f66f", "sha256": "29230b7de2e89bd96d87b335b3fd433f48ab06c723d7c39ee5c624dddce3cdc9"}, "downloads": -1, "filename": "release_info-0.1.0.tar.gz", "has_sig": false, "md5_digest": "626cf07749305126ddfa0ff1e700f66f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18247, "upload_time": "2020-03-28T13:00:18", "upload_time_iso_8601": "2020-03-28T13:00:18.525379Z", "url": "https://files.pythonhosted.org/packages/17/27/f475d984fb637225a248afa98301531975b1bffed56e7ee451372a572c78/release_info-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "289e37e7a6d69404fac7e9973921aaa9", "sha256": "91491211f7075c93c938c9bc2120dec7e6ccc6fd8e989af5a8895ba312955d15"}, "downloads": -1, "filename": "release_info-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "289e37e7a6d69404fac7e9973921aaa9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10554, "upload_time": "2020-03-28T13:04:03", "upload_time_iso_8601": "2020-03-28T13:04:03.227953Z", "url": "https://files.pythonhosted.org/packages/64/e4/2a3d22034f2b5e7d9d60774492d8e43a1543eb041148fa482bd3ec87c843/release_info-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2db276bc52bcd3f113c09ddf3ce75970", "sha256": "adccc962fc99fe313269a17d04e7e71caf5f6a36cbfe8f337d2a2d2a93f867a9"}, "downloads": -1, "filename": "release_info-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2db276bc52bcd3f113c09ddf3ce75970", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18197, "upload_time": "2020-03-28T13:04:00", "upload_time_iso_8601": "2020-03-28T13:04:00.840271Z", "url": "https://files.pythonhosted.org/packages/31/be/4e9f58c2458df1a8b44c657567ba6149b66a012b9c1f8bf78c30cabe03f5/release_info-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "49c0fd3e825cdab3ddfc126dc7b2ffef", "sha256": "67c1fe6e482b80d953a4027c9a8ebd30dd1bdcd6763229347aac8224db62cdfb"}, "downloads": -1, "filename": "release_info-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "49c0fd3e825cdab3ddfc126dc7b2ffef", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10679, "upload_time": "2020-04-06T16:28:42", "upload_time_iso_8601": "2020-04-06T16:28:42.236653Z", "url": "https://files.pythonhosted.org/packages/d9/ae/18af6d85e1e71bd8087d7bb0727a998ba1302b25514ebb4c58864cde4c2d/release_info-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bcbf6806875a954314ac9482a472c265", "sha256": "63ab2651007cff287193f578d2a9b3012553e32d27099e813e246336f5a8c541"}, "downloads": -1, "filename": "release_info-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bcbf6806875a954314ac9482a472c265", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18291, "upload_time": "2020-04-06T16:28:39", "upload_time_iso_8601": "2020-04-06T16:28:39.857576Z", "url": "https://files.pythonhosted.org/packages/ec/22/c65404df75209eec6a87f48817dc65c819177e5c8fbdf8dd5057751773d5/release_info-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "49c0fd3e825cdab3ddfc126dc7b2ffef", "sha256": "67c1fe6e482b80d953a4027c9a8ebd30dd1bdcd6763229347aac8224db62cdfb"}, "downloads": -1, "filename": "release_info-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "49c0fd3e825cdab3ddfc126dc7b2ffef", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10679, "upload_time": "2020-04-06T16:28:42", "upload_time_iso_8601": "2020-04-06T16:28:42.236653Z", "url": "https://files.pythonhosted.org/packages/d9/ae/18af6d85e1e71bd8087d7bb0727a998ba1302b25514ebb4c58864cde4c2d/release_info-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bcbf6806875a954314ac9482a472c265", "sha256": "63ab2651007cff287193f578d2a9b3012553e32d27099e813e246336f5a8c541"}, "downloads": -1, "filename": "release_info-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bcbf6806875a954314ac9482a472c265", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18291, "upload_time": "2020-04-06T16:28:39", "upload_time_iso_8601": "2020-04-06T16:28:39.857576Z", "url": "https://files.pythonhosted.org/packages/ec/22/c65404df75209eec6a87f48817dc65c819177e5c8fbdf8dd5057751773d5/release_info-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:02 2020"}