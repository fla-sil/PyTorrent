{"info": {"author": "Sasha Hart", "author_email": "s@sashahart.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Other Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "What is this and what is it for?\n--------------------------------\n\ncookies.py is a Python module for working with HTTP cookies: parsing and\nrendering 'Cookie:' request headers and 'Set-Cookie:' response headers,\nand exposing a convenient API for creating and modifying cookies. It can be\nused as a replacement of Python's Cookie.py (aka http.cookies). \n\nFeatures\n--------\n\n* Rendering according to the excellent new RFC 6265 \n  (rather than using a unique ad hoc format inconsistently relating to\n  unrealistic, very old RFCs which everyone ignored). Uses URL encoding to\n  represent non-ASCII by default, like many other languages' libraries\n* Liberal parsing, incorporating many complaints about Cookie.py barfing\n  on common cookie formats which can be reliably parsed (e.g. search 'cookie'\n  on the Python issue tracker)\n* Well-documented code, with chapter and verse from RFCs\n  (rather than arbitrary, undocumented decisions and huge tables of magic \n  values, as you see in Cookie.py). \n* Test coverage at 100%, with a much more comprehensive test suite\n  than Cookie.py\n* Single-source compatible with the following Python versions: \n  2.6, 2.7, 3.2, 3.3 and PyPy (2.7).\n* Cleaner, less surprising API::\n\n    # old Cookie.py - this code is all directly from its docstring\n    >>> from Cookie import SmartCookie\n    >>> C = SmartCookie()\n    >>> # n.b. it's \"smart\" because it automatically pickles Python objects,\n    >>> # which is actually quite stupid for security reasons!\n    >>> C[\"rocky\"] = \"road\"\n    >>> C[\"rocky\"][\"path\"] = \"/cookie\"\n    >>> # So C[\"rocky\"] is a string, except when it's a dict...\n    >>> # and why do I have to write [\"\"] to access a fixed set of attrs?\n    >>> # Look at the atrocious way I render out a request header:\n    >>> C.output(attrs=[], header=\"Cookie:\")\n    'Cookie: rocky=road'\n\n    # new cookies.py\n    >>> from cookies import Cookies, Cookie\n    >>> cookies = Cookies(rocky='road')\n    >>> # Can also write explicitly: cookies['rocky'] = Cookie['road']\n    >>> cookies['rocky'].path = \"/cookie\" \n    >>> cookies.render_request()\n    'rocky=road'\n* Friendly to customization, extension, and reuse of its parts. \n  Unlike Cookie.py, it doesn't lock all implementation inside its own classes\n  (forcing you to write ugly wrappers as Django, Trac, Werkzeug/Flask, web.py\n  and Tornado had to do). You can suppress minor parse exceptions with\n  parameters rather than subclass wrappers. You can plug in your own parsers,\n  renderers and validators for new or existing cookie attributes. You can\n  render the data out in a dict. You can easily use the underlying imperative\n  API or even lift the parser's regexps for your own parser or project. They\n  are very well documented and relate directly to RFCs, so you know exactly\n  what you are getting and why. It's MIT-licensed so do\n  what you want (but I'd love to know what use you are getting from it!)\n* One file, so you can just drop cookies.py into your project if you like\n* MIT license, so you can use it in whatever you want with no strings\n\nThings this is not meant to do\n------------------------------\nWhile this is intended to be a good module for handling cookies, it does not\neven try to do any of the following:\n\n* Maintain backward compatibility with Cookie.py, which would mean\n  inheriting its confusions and bugs\n* Implement RFCs 2109 or 2965, which have always been ignored by almost\n  everyone and are now obsolete as well\n* Handle every conceivable output from terrible legacy apps, which is not\n  possible to do without lots of silent data loss and corruption (the\n  parser does try to be liberal as possible otherwise, though)\n* Provide a means to store pickled Python objects in cookie values\n  (that's a big security hole)\n\nThis doesn't compete with the cookielib (http.cookiejar) module in the Python\nstandard library, which is specifically for implementing cookie storage and\nsimilar behavior in an HTTP client such as a browser. Things cookielib does\nthat this doesn't:\n\n* Write to or read from browsers' cookie stores or other proprietary\n  formats for storing cookie data in files \n* Handle the browser/client logic like deciding which cookies to send or\n  discard, etc. \n\nIf you are looking for a cookie library but neither this one nor cookielib\nwill help, you might also consider the implementations in WebOb or Bottle.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sashahart/cookies", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "cookies", "package_url": "https://pypi.org/project/cookies/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cookies/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/sashahart/cookies"}, "release_url": "https://pypi.org/project/cookies/2.2.1/", "requires_dist": null, "requires_python": null, "summary": "Friendlier RFC 6265-compliant cookie parser/renderer", "version": "2.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-is-this-and-what-is-it-for\">\n<h2>What is this and what is it for?</h2>\n<p>cookies.py is a Python module for working with HTTP cookies: parsing and\nrendering \u2018Cookie:\u2019 request headers and \u2018Set-Cookie:\u2019 response headers,\nand exposing a convenient API for creating and modifying cookies. It can be\nused as a replacement of Python\u2019s Cookie.py (aka http.cookies).</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><p>Rendering according to the excellent new RFC 6265\n(rather than using a unique ad hoc format inconsistently relating to\nunrealistic, very old RFCs which everyone ignored). Uses URL encoding to\nrepresent non-ASCII by default, like many other languages\u2019 libraries</p>\n</li>\n<li><p>Liberal parsing, incorporating many complaints about Cookie.py barfing\non common cookie formats which can be reliably parsed (e.g. search \u2018cookie\u2019\non the Python issue tracker)</p>\n</li>\n<li><p>Well-documented code, with chapter and verse from RFCs\n(rather than arbitrary, undocumented decisions and huge tables of magic\nvalues, as you see in Cookie.py).</p>\n</li>\n<li><p>Test coverage at 100%, with a much more comprehensive test suite\nthan Cookie.py</p>\n</li>\n<li><p>Single-source compatible with the following Python versions:\n2.6, 2.7, 3.2, 3.3 and PyPy (2.7).</p>\n</li>\n<li><p>Cleaner, less surprising API:</p>\n<pre># old Cookie.py - this code is all directly from its docstring\n&gt;&gt;&gt; from Cookie import SmartCookie\n&gt;&gt;&gt; C = SmartCookie()\n&gt;&gt;&gt; # n.b. it's \"smart\" because it automatically pickles Python objects,\n&gt;&gt;&gt; # which is actually quite stupid for security reasons!\n&gt;&gt;&gt; C[\"rocky\"] = \"road\"\n&gt;&gt;&gt; C[\"rocky\"][\"path\"] = \"/cookie\"\n&gt;&gt;&gt; # So C[\"rocky\"] is a string, except when it's a dict...\n&gt;&gt;&gt; # and why do I have to write [\"\"] to access a fixed set of attrs?\n&gt;&gt;&gt; # Look at the atrocious way I render out a request header:\n&gt;&gt;&gt; C.output(attrs=[], header=\"Cookie:\")\n'Cookie: rocky=road'\n\n# new cookies.py\n&gt;&gt;&gt; from cookies import Cookies, Cookie\n&gt;&gt;&gt; cookies = Cookies(rocky='road')\n&gt;&gt;&gt; # Can also write explicitly: cookies['rocky'] = Cookie['road']\n&gt;&gt;&gt; cookies['rocky'].path = \"/cookie\"\n&gt;&gt;&gt; cookies.render_request()\n'rocky=road'\n</pre>\n</li>\n<li><p>Friendly to customization, extension, and reuse of its parts.\nUnlike Cookie.py, it doesn\u2019t lock all implementation inside its own classes\n(forcing you to write ugly wrappers as Django, Trac, Werkzeug/Flask, web.py\nand Tornado had to do). You can suppress minor parse exceptions with\nparameters rather than subclass wrappers. You can plug in your own parsers,\nrenderers and validators for new or existing cookie attributes. You can\nrender the data out in a dict. You can easily use the underlying imperative\nAPI or even lift the parser\u2019s regexps for your own parser or project. They\nare very well documented and relate directly to RFCs, so you know exactly\nwhat you are getting and why. It\u2019s MIT-licensed so do\nwhat you want (but I\u2019d love to know what use you are getting from it!)</p>\n</li>\n<li><p>One file, so you can just drop cookies.py into your project if you like</p>\n</li>\n<li><p>MIT license, so you can use it in whatever you want with no strings</p>\n</li>\n</ul>\n</div>\n<div id=\"things-this-is-not-meant-to-do\">\n<h2>Things this is not meant to do</h2>\n<p>While this is intended to be a good module for handling cookies, it does not\neven try to do any of the following:</p>\n<ul>\n<li>Maintain backward compatibility with Cookie.py, which would mean\ninheriting its confusions and bugs</li>\n<li>Implement RFCs 2109 or 2965, which have always been ignored by almost\neveryone and are now obsolete as well</li>\n<li>Handle every conceivable output from terrible legacy apps, which is not\npossible to do without lots of silent data loss and corruption (the\nparser does try to be liberal as possible otherwise, though)</li>\n<li>Provide a means to store pickled Python objects in cookie values\n(that\u2019s a big security hole)</li>\n</ul>\n<p>This doesn\u2019t compete with the cookielib (http.cookiejar) module in the Python\nstandard library, which is specifically for implementing cookie storage and\nsimilar behavior in an HTTP client such as a browser. Things cookielib does\nthat this doesn\u2019t:</p>\n<ul>\n<li>Write to or read from browsers\u2019 cookie stores or other proprietary\nformats for storing cookie data in files</li>\n<li>Handle the browser/client logic like deciding which cookies to send or\ndiscard, etc.</li>\n</ul>\n<p>If you are looking for a cookie library but neither this one nor cookielib\nwill help, you might also consider the implementations in WebOb or Bottle.</p>\n</div>\n\n          </div>"}, "last_serial": 1239689, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "b28e740477b52c16b998603569afce04", "sha256": "24d1838041dbb52fb119827dea1b3d9f86d909fffe602ee837eeb1350185edd5"}, "downloads": -1, "filename": "cookies-0.9.0.tar.gz", "has_sig": false, "md5_digest": "b28e740477b52c16b998603569afce04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35238, "upload_time": "2012-03-17T23:54:41", "upload_time_iso_8601": "2012-03-17T23:54:41.307760Z", "url": "https://files.pythonhosted.org/packages/64/d4/cf2ac4554fb38e7e34d1d8aba9513b431e7d2fef01104b9008003545f71e/cookies-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "b549df1227d60ca91cde5afdaa52362a", "sha256": "c9ad13e30ebe35a32e1a7b8531b693bb1e4bbe62f114f2e13d4fde332a4bf099"}, "downloads": -1, "filename": "cookies-0.9.1.tar.gz", "has_sig": false, "md5_digest": "b549df1227d60ca91cde5afdaa52362a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37247, "upload_time": "2012-03-19T11:12:16", "upload_time_iso_8601": "2012-03-19T11:12:16.490335Z", "url": "https://files.pythonhosted.org/packages/8f/6d/b8e46253a764e5d087064edaea9fb5efbea9c45512847bd72121129b731e/cookies-0.9.1.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "cd9636408b44ed4b8dd45b254c980b02", "sha256": "f283de6d63f2e1fe34beb68faccfcc2cadb7a4a2a6f38df3bb2d05a89c2780f6"}, "downloads": -1, "filename": "cookies-1.2.1.tar.gz", "has_sig": false, "md5_digest": "cd9636408b44ed4b8dd45b254c980b02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39854, "upload_time": "2013-03-15T06:25:01", "upload_time_iso_8601": "2013-03-15T06:25:01.597232Z", "url": "https://files.pythonhosted.org/packages/4b/71/3485cfd94dbb2c39a281e35b0a605648167b57f938f98cbd87e144d6be83/cookies-1.2.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "e6d71bb1ba55ce22970871a97dfcf294", "sha256": "1df5a091e8b013cea3fba74939759c117e81ca4de00d2dd6ebced49dece8e03c"}, "downloads": -1, "filename": "cookies-2.0.0.tar.gz", "has_sig": false, "md5_digest": "e6d71bb1ba55ce22970871a97dfcf294", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40331, "upload_time": "2014-03-25T01:18:55", "upload_time_iso_8601": "2014-03-25T01:18:55.562423Z", "url": "https://files.pythonhosted.org/packages/0b/62/2e1f333bf971ee173bf24cdcb5de67fa5290e5b1b99b2ca7be20a557a10f/cookies-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "1af91fb5dc07b4cfa4d6f57fba6ea1c5", "sha256": "feb0b209291d6aaab384d9d8c91ffa247706d34175c38233a463396f406c7d55"}, "downloads": -1, "filename": "cookies-2.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1af91fb5dc07b4cfa4d6f57fba6ea1c5", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 44379, "upload_time": "2014-07-25T21:11:38", "upload_time_iso_8601": "2014-07-25T21:11:38.636837Z", "url": "https://files.pythonhosted.org/packages/78/35/6f7f2449632430abe7b1b6067c0aad880ef61ca9ece335ba75b82d896fb5/cookies-2.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5652a753727891e7b8a9f370c24ee51", "sha256": "048f54167f71c143f9335a22eb5b7133f63cc198ab1d250ae55703448aa83021"}, "downloads": -1, "filename": "cookies-2.1.0.tar.gz", "has_sig": false, "md5_digest": "a5652a753727891e7b8a9f370c24ee51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40679, "upload_time": "2014-07-25T21:11:35", "upload_time_iso_8601": "2014-07-25T21:11:35.475774Z", "url": "https://files.pythonhosted.org/packages/4c/f1/71badfef3ec2c35e41e9227508f9dc5e20529b7fcf09e8bfb90409d48a9d/cookies-2.1.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "bba945d628225f8512b89e2efabccd20", "sha256": "15bee753002dff684987b8df8c235288eb8d45f8191ae056254812dfd42c81d3"}, "downloads": -1, "filename": "cookies-2.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bba945d628225f8512b89e2efabccd20", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 44423, "upload_time": "2014-09-27T02:36:49", "upload_time_iso_8601": "2014-09-27T02:36:49.417765Z", "url": "https://files.pythonhosted.org/packages/6a/60/557f84aa2db629e5124aa05408b975b1b5d0e1cec16cde0bfa06aae097d3/cookies-2.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f4c53aba3ed03e4e7b50812c2c2579a", "sha256": "d6b698788cae4cfa4e62ef8643a9ca332b79bd96cb314294b864ae8d7eb3ee8e"}, "downloads": -1, "filename": "cookies-2.2.1.tar.gz", "has_sig": false, "md5_digest": "6f4c53aba3ed03e4e7b50812c2c2579a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40704, "upload_time": "2014-09-27T02:36:46", "upload_time_iso_8601": "2014-09-27T02:36:46.434238Z", "url": "https://files.pythonhosted.org/packages/f3/95/b66a0ca09c5ec9509d8729e0510e4b078d2451c5e33f47bd6fc33c01517c/cookies-2.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bba945d628225f8512b89e2efabccd20", "sha256": "15bee753002dff684987b8df8c235288eb8d45f8191ae056254812dfd42c81d3"}, "downloads": -1, "filename": "cookies-2.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bba945d628225f8512b89e2efabccd20", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 44423, "upload_time": "2014-09-27T02:36:49", "upload_time_iso_8601": "2014-09-27T02:36:49.417765Z", "url": "https://files.pythonhosted.org/packages/6a/60/557f84aa2db629e5124aa05408b975b1b5d0e1cec16cde0bfa06aae097d3/cookies-2.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f4c53aba3ed03e4e7b50812c2c2579a", "sha256": "d6b698788cae4cfa4e62ef8643a9ca332b79bd96cb314294b864ae8d7eb3ee8e"}, "downloads": -1, "filename": "cookies-2.2.1.tar.gz", "has_sig": false, "md5_digest": "6f4c53aba3ed03e4e7b50812c2c2579a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40704, "upload_time": "2014-09-27T02:36:46", "upload_time_iso_8601": "2014-09-27T02:36:46.434238Z", "url": "https://files.pythonhosted.org/packages/f3/95/b66a0ca09c5ec9509d8729e0510e4b078d2451c5e33f47bd6fc33c01517c/cookies-2.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:23 2020"}