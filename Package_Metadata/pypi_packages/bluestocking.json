{"info": {"author": "UNKNOWN", "author_email": "bluestocking-dev@googlegroups.com", "bugtrack_url": null, "classifiers": [], "description": "bluestocking\n============\n\nAn information extraction toolkit.\n\nTo discuss the project with use, join our maing list:\nhttp://groups.google.com/forum/?fromgroups#!forum/bluestocking-dev\n\nThis project depends on NLTK.  You will need to install it before running these scripts.\n\nTo run tests:\n\n    python tests.py\n\nTo run factchecker demo, try this:\n\n    python factchecker.py \"The sky is not blue.\"\n\nor this:\n\n    python factchecker.py \"People never eat fish. Goldfish are unpopular.\"\n\nThis test a document against the Simple English Wikipedia\narticles for each word in the string passed as argument.\n\n(Warning: documents with long sentences take longer to query)\n\nScripts included:\n\n### parse.py\n\nDefines Document class for wrapping raw text and Parser\nclass for extracting Relations from a Document.\n\nDocuments have a method to turn them into Doxaments (see below).\n\n### doxament.py\n\nDefines a Doxament class.  A Doxament contains many Relations.\nA Doxament may be queried for consistency with another Doxament.  They may also be merged to form a more complete knowledge base.\n\nRelations encapsulate a semantically significant lexical\ncooccurence.\n\n### other\n\nwikipedia.py and wiki2plain.py from \nhttp://stackoverflow.com/questions/4460921/extract-the-first-paragraph-from-a-wikipedia-article-python", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "bluestocking", "package_url": "https://pypi.org/project/bluestocking/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/bluestocking/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/bluestocking/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "An information extraction toolkit built on top of NLTK.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An information extraction toolkit.</p>\n<p>To discuss the project with use, join our maing list:\n<a href=\"http://groups.google.com/forum/?fromgroups#!forum/bluestocking-dev\" rel=\"nofollow\">http://groups.google.com/forum/?fromgroups#!forum/bluestocking-dev</a></p>\n<p>This project depends on NLTK.  You will need to install it before running these scripts.</p>\n<p>To run tests:</p>\n<blockquote>\npython tests.py</blockquote>\n<p>To run factchecker demo, try this:</p>\n<blockquote>\npython factchecker.py \u201cThe sky is not blue.\u201d</blockquote>\n<p>or this:</p>\n<blockquote>\npython factchecker.py \u201cPeople never eat fish. Goldfish are unpopular.\u201d</blockquote>\n<p>This test a document against the Simple English Wikipedia\narticles for each word in the string passed as argument.</p>\n<p>(Warning: documents with long sentences take longer to query)</p>\n<p>Scripts included:</p>\n<p>### parse.py</p>\n<p>Defines Document class for wrapping raw text and Parser\nclass for extracting Relations from a Document.</p>\n<p>Documents have a method to turn them into Doxaments (see below).</p>\n<p>### doxament.py</p>\n<p>Defines a Doxament class.  A Doxament contains many Relations.\nA Doxament may be queried for consistency with another Doxament.  They may also be merged to form a more complete knowledge base.</p>\n<p>Relations encapsulate a semantically significant lexical\ncooccurence.</p>\n<p>### other</p>\n<p>wikipedia.py and wiki2plain.py from\n<a href=\"http://stackoverflow.com/questions/4460921/extract-the-first-paragraph-from-a-wikipedia-article-python\" rel=\"nofollow\">http://stackoverflow.com/questions/4460921/extract-the-first-paragraph-from-a-wikipedia-article-python</a></p>\n\n          </div>"}, "last_serial": 786937, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "007712c9fee62fe62a8b9ae2c163e1f6", "sha256": "0991f01b0ee45ac32df32587170c7b20be3994a7ef957ced0dd418319838cf68"}, "downloads": -1, "filename": "bluestocking-0.1.0.tar.gz", "has_sig": false, "md5_digest": "007712c9fee62fe62a8b9ae2c163e1f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19776, "upload_time": "2012-08-26T03:37:02", "upload_time_iso_8601": "2012-08-26T03:37:02.966904Z", "url": "https://files.pythonhosted.org/packages/4b/4c/e7a53e76a28d9b9ee556780b5d003d925a6c1799ff26c58e968698144699/bluestocking-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4969728cd2568c0704c84aecc5a3f41d", "sha256": "6b1d823a920e1735f68af99b642ce808534bd4fd1841981318c8cde9d589786c"}, "downloads": -1, "filename": "bluestocking-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4969728cd2568c0704c84aecc5a3f41d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19947, "upload_time": "2012-08-26T03:59:46", "upload_time_iso_8601": "2012-08-26T03:59:46.998695Z", "url": "https://files.pythonhosted.org/packages/50/4d/0b697491597b9dbc07ba31ae845f14cd979fe22b6bd54a18290c11c43f2a/bluestocking-0.1.1.tar.gz", "yanked": false}], "0.1.2": []}, "urls": [], "timestamp": "Thu May  7 22:36:57 2020"}