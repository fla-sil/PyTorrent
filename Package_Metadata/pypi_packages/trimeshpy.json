{"info": {"author": "Etienne St-Onge", "author_email": "Firstname.Lastname@usherbrooke.ca", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": "###########################################################\n#   TriMeshPy\n###     Triangular Mesh Processing in Python\n###     with SciPy sparse matrix representation\n###         \n###         by Etienne St-Onge\n###########################################################\n\n# README #\nStartup of a simple and efficient triangle mesh processing library in python\nusing scipy sparse matrix and numpy math functions\n\n# Paper #\nSt-Onge, E., Daducci, A., Girard, G. and Descoteaux, M., 2017. Surface-enhanced tractography (SET). NeuroImage.\n\n\n# TODO Code #\n```\n1) Modular \"TriMesh_Class\" that contain all triangle_mesh_processing functions\n2) Python \"UnitTest\" in each module, in a standart way (not only a test file with \"print\")\n3) add comments for each functions\n4) Link graphical library (VTK and/or pyOpenGL) for visualisation (maybe in a class ex. TriMesh_VTK,  TriMesh_OGL\n5) html, javascript graphical library (WebGL or Three) for visualisationwith interaction on webpage / Ipython notebook\n6) GPU programming for sparse matrix (Theano or other)\n```\n\n# TODO Algo #\n```\n1) \"No free Lunch\" Laplacian operator\n2) Multiresolution Mesh, Fuse zero-area triangles (maybe edge collapsing method)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/StongeEtienne/trimeshpy", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "trimeshpy", "package_url": "https://pypi.org/project/trimeshpy/", "platform": "", "project_url": "https://pypi.org/project/trimeshpy/", "project_urls": {"Homepage": "https://github.com/StongeEtienne/trimeshpy"}, "release_url": "https://pypi.org/project/trimeshpy/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Triangular Mesh Processing in Python", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>###########################################################</p>\n<h1>TriMeshPy</h1>\n<h3>Triangular Mesh Processing in Python</h3>\n<h3>with SciPy sparse matrix representation</h3>\n<h3></h3>\n<h3>by Etienne St-Onge</h3>\n<p>###########################################################</p>\n<h1>README</h1>\n<p>Startup of a simple and efficient triangle mesh processing library in python\nusing scipy sparse matrix and numpy math functions</p>\n<h1>Paper</h1>\n<p>St-Onge, E., Daducci, A., Girard, G. and Descoteaux, M., 2017. Surface-enhanced tractography (SET). NeuroImage.</p>\n<h1>TODO Code</h1>\n<pre><code>1) Modular \"TriMesh_Class\" that contain all triangle_mesh_processing functions\n2) Python \"UnitTest\" in each module, in a standart way (not only a test file with \"print\")\n3) add comments for each functions\n4) Link graphical library (VTK and/or pyOpenGL) for visualisation (maybe in a class ex. TriMesh_VTK,  TriMesh_OGL\n5) html, javascript graphical library (WebGL or Three) for visualisationwith interaction on webpage / Ipython notebook\n6) GPU programming for sparse matrix (Theano or other)\n</code></pre>\n<h1>TODO Algo</h1>\n<pre><code>1) \"No free Lunch\" Laplacian operator\n2) Multiresolution Mesh, Fuse zero-area triangles (maybe edge collapsing method)\n</code></pre>\n\n          </div>"}, "last_serial": 6939346, "releases": {"0.0.1b1": [{"comment_text": "", "digests": {"md5": "b0d1e7f5859371cb82bb4fa2e1fd1032", "sha256": "b7e7b956034dad6de6295aa7bfa67036b943537ed073b3df5824fb688f335c0c"}, "downloads": -1, "filename": "trimeshpy-0.0.1b1.tar.gz", "has_sig": false, "md5_digest": "b0d1e7f5859371cb82bb4fa2e1fd1032", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25839860, "upload_time": "2020-03-09T18:31:00", "upload_time_iso_8601": "2020-03-09T18:31:00.598880Z", "url": "https://files.pythonhosted.org/packages/74/0a/31511cf012bb24295e0bceec40a4ceb636ea8930292f7fe76e8966aeebe3/trimeshpy-0.0.1b1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d6c32f773a2e66d42fc845b86d690ca4", "sha256": "4a03af6630c2dc0afcea3fef857554decda80bbbb80a5a813f60c0fc23e5749d"}, "downloads": -1, "filename": "trimeshpy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d6c32f773a2e66d42fc845b86d690ca4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25838191, "upload_time": "2020-04-02T22:08:26", "upload_time_iso_8601": "2020-04-02T22:08:26.543712Z", "url": "https://files.pythonhosted.org/packages/82/a2/99ba89ddac6854f3a74246dd0f429cfb33152455d910ce8f887e19c208af/trimeshpy-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d6c32f773a2e66d42fc845b86d690ca4", "sha256": "4a03af6630c2dc0afcea3fef857554decda80bbbb80a5a813f60c0fc23e5749d"}, "downloads": -1, "filename": "trimeshpy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d6c32f773a2e66d42fc845b86d690ca4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25838191, "upload_time": "2020-04-02T22:08:26", "upload_time_iso_8601": "2020-04-02T22:08:26.543712Z", "url": "https://files.pythonhosted.org/packages/82/a2/99ba89ddac6854f3a74246dd0f429cfb33152455d910ce8f887e19c208af/trimeshpy-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:47:07 2020"}