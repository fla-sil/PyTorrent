{"info": {"author": "Jupyter Development Team", "author_email": "jupyter@googlegroups.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "# [chartpress](https://github.com/jupyterhub/chartpress)\n\n[![PyPI](https://img.shields.io/pypi/v/chartpress.svg)](https://pypi.python.org/pypi/chartpress)\n[![Build Status](https://travis-ci.org/jupyterhub/chartpress.svg?branch=master)](https://travis-ci.org/jupyterhub/chartpress)\n\nChartpress automate basic Helm chart development work. It is tightly used in development of the [JupyterHub](https://github.com/jupyterhub/zero-to-jupyterhub-k8s) and [BinderHub](https://github.com/jupyterhub/binderhub) Helm charts.\n\n## Features\n\nChartpress can do the following with the help of some configuration.\n\n- Update Chart.yaml's version appropriately\n- Build docker images and tag them appropriately\n- Push built images to a docker image repository\n- Update values.yaml to reference the built images\n- Publish a chart to a Helm chart registry based on GitHub pages\n- Reset changes to Chart.yaml and values.yaml\n\n## How chart version and image tags are determined\n\nChartpress will infer chart versions and image tags using a few key pieces of\ninformation.\n\n1. `tag`: The latest commit that is tagged on the current branch, or 0.0.1 if no tag\n   was found.\n2. The latest commit that influenced anything on a path within the git\n   repository that matters to the chart version or image tag. The paths that\n   matters is determined using the image build contexts and additional specified\n   paths.\n   1. `n`: The latest commits commit distance count since the tag, described as 3 or\n      more numbers.\n   2. `sha`: The latest commits abbreviated SHA hash, which is typically 7\n      characters.\n3. If `--long` is specified or not, if it is, a tagged commit will be written\n   out with `n.sha` as well appended to it.\n4. If `tag` contains a `-`, `tag.n.sha` will be used, and if not, `tag-n.sha`\n   will be used. There should be exactly one `-` in the final version\n   specification to become a valid SemVer2 version.\n\n### Examples chart versions and image tags\n\nThis is a list of realistic chart versions and/or image tags in a chronological\norder that could come from using chartpress.\n\n```\n0.8.0\n0.8.0-n004.hasdf123\n0.8.0-n010.hsdfg234\n0.9.0-beta.1\n0.9.0-beta.1.n001.hdfgh345\n0.9.0-beta.1.n005.hfghj456\n0.9.0-beta.2\n0.9.0-beta.2.n001.hghjk567\n0.9.0-beta.3\n0.9.0\n```\n\n## Requirements\n\nThe following binaries must be in your `PATH`:\n- [git](https://www.git-scm.com/downloads)\n- [docker](https://docs.docker.com/install/#supported-platforms)\n- [helm](https://helm.sh/docs/using_helm/#installing-helm)\n\nIf you are publishing a chart to GitHub Pages create a `gh-pages` branch in the\ndestination repository.\n\n## Installation\n\n```\npip install chartpress\n```\n\n## Usage\n\nIn a directory containing a `chartpress.yaml`, run:\n\n    chartpress\n\nto build your chart(s) and image(s). Add `--push` to publish images to docker\nhub and `--publish-chart` to publish the chart and index to gh-pages.\n\n```\nusage: chartpress [-h] [--push] [--force-push] [--publish-chart]\n                  [--extra-message EXTRA_MESSAGE] [--tag TAG | --long]\n                  [--image-prefix IMAGE_PREFIX] [--reset]\n                  [--skip-build | --force-build] [--version]\n                  [--commit-range COMMIT_RANGE]\n\nAutomate building and publishing helm charts and associated images. This is\nused as part of the JupyterHub and Binder projects.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --push                Push built images to their image registries, but not\n                        if it would replace an existing image.\n  --force-push          Push built images to their image registries,\n                        regardless if it would replace an existing image.\n  --publish-chart       Package a Helm chart and publish it to a Helm chart\n                        repository contructed with a GitHub git repository and\n                        GitHub pages.\n  --extra-message EXTRA_MESSAGE\n                        Extra message to add to the commit message when\n                        publishing charts.\n  --tag TAG             Explicitly set the image tags and chart version.\n  --long                Use this to always get a build suffix for the\n                        generated tag and chart version, even when the\n                        specific commit has a tag.\n  --image-prefix IMAGE_PREFIX\n                        Override the configured image prefix with this value.\n  --reset               Skip image build step and reset Chart.yaml's version\n                        field and values.yaml's image tags. What it resets to\n                        can be configured in chartpress.yaml with the resetTag\n                        and resetVersion configurations.\n  --skip-build          Skip the image build step.\n  --force-build         Enforce the image build step, regardless of if the\n                        image already is available either locally or remotely.\n  --version             Print current chartpress version and exit.\n  --commit-range COMMIT_RANGE\n                        Deprecated: this flag will be ignored. The new logic\n                        to determine if an image needs to be rebuilt does not\n                        require this. It will find the time in git history\n                        where the image was last in need of a rebuild due to\n                        changes, and check if that build exists locally or\n                        remotely already.\n```\n\n## Configuration\n\nA `chartpress.yaml` file contains a specification of charts and images to build\nfor each chart. Below is an example `chartpress.yaml` file.\n\n```yaml\ncharts:\n  # list of charts by name\n  # each name should be a directory containing a helm chart\n  - name: binderhub\n    # the prefix to use for built images\n    imagePrefix: jupyterhub/k8s-\n    # tag to use when resetting the chart values\n    # with the --reset flag. It defaults to \"set-by-chartpress\".\n    resetTag: latest\n    # version to use when resetting the Chart.yaml's version field with the\n    # --reset flag. It defaults to \"0.0.1-set.by.chartpress\". This is a valid\n    # SemVer 2 version, which is required for a helm lint command to succeed.\n    resetVersion: 1.2.3\n    # The git repo whose gh-pages contains the charts. This can be a local\n    # path such as \".\" as well but if matching <organization>/<repo> will be\n    # assumed to be a separate GitHub repository.\n    repo:\n      git: jupyterhub/helm-chart\n      published: https://jupyterhub.github.io/helm-chart\n    # Additional paths that when modified should lead to an updated Chart.yaml\n    # version, other than the chart directory in <chart name> or any path that\n    # influence the images of the chart. These paths should be set relative to\n    # chartpress.yaml's directory.\n    paths:\n      - ../setup.py\n      - ../binderhub\n    # images to build for this chart (optional)\n    images:\n      binderhub:\n        # Template docker build arguments to be passed using docker's\n        # --build-arg flag as --build-arg <key>=<value>. Available dynamic\n        # values are TAG and LAST_COMMIT.\n        buildArgs:\n          MY_STATIC_BUILD_ARG: \"hello world\"\n          MY_DYNAMIC_BUILD_ARG: \"{TAG}-{LAST_COMMIT}\"\n        # contextPath is the path to the directory that is to be considered the\n        # current working directory during the build process of the Dockerfile.\n        # This is by default the folder of the Dockerfile. This path should be\n        # set relative to chartpress.yaml.\n        contextPath: ..\n        # Path to the Dockerfile, relative to chartpress.yaml. Defaults to\n        # \"images/<image name>/Dockerfile\".\n        dockerfilePath: images/binderhub/Dockerfile\n        # Path(s) in <chart name>/values.yaml to be updated with image name and\n        # tag.\n        valuesPath:\n          - singleuser.image\n          - singleuser.profileList.0.kubespawner_override.image\n        # Additional paths, relative to chartpress.yaml's directory, that should\n        # be used to indicate that a new tag of the image is required, aside\n        # from the contextPath and dockerfilePath for building the image itself.\n        paths:\n          - assets\n```\n\n## Caveats\n\n### TravisCI mirror image registry\n\nIf you run chartpress on TravisCI, its logic can be fooled by a mirror image\nregistry to rebuild something that didn't need rebuilding. A workaround for this\ncan be found in this repo's [.travis.yml](.travis.yml).\n\n### Shallow clones\n\nChartpress detects the latest commit which changed a directory or file when\ndetermining the version and tag to use for charts and images. This means that\nshallow clones should not be used because if the last commit that changed a\nrelevant file is outside the shallow commit range, the wrong tag will be\nassigned.\n\nTravisCI uses a clone depth of 50 by default, which can result in incorrect\nimage tagging. You can [disable this shallow clone\nbehavior](https://docs.travis-ci.com/user/customizing-the-build/#Git-Clone-Depth)\nin your `.travis.yml`:\n\n```yaml\ngit:\n  depth: false\n```\n\n## Development\n\nTesting of this python package can be done using\n[`pytest`](https://github.com/pytest-dev/pytest). For more details on the\ntesting, see [tests/README.md](tests/README.md).\n\n```bash\n# install chartpress locally\npip install  -e .\n\n# install dev dependencies\npip install -r dev-requirements.txt\n\n# run tests\npytest --verbose --flakes --exitfirst\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jupyterhub/chartpress", "keywords": "helm,kubernetes", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "chartpress", "package_url": "https://pypi.org/project/chartpress/", "platform": "Linux", "project_url": "https://pypi.org/project/chartpress/", "project_urls": {"Homepage": "https://github.com/jupyterhub/chartpress"}, "release_url": "https://pypi.org/project/chartpress/0.6.0/", "requires_dist": ["ruamel.yaml (>=0.15)", "docker (>=3.2.0)"], "requires_python": ">=3.6", "summary": "ChartPress: render and publish helm charts and images", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><a href=\"https://github.com/jupyterhub/chartpress\" rel=\"nofollow\">chartpress</a></h1>\n<p><a href=\"https://pypi.python.org/pypi/chartpress\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/645a5b0a2484b3869258f1f26472276ab4a54a88/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636861727470726573732e737667\"></a>\n<a href=\"https://travis-ci.org/jupyterhub/chartpress\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/479f67f4d034caff8a00f15c0f643c73f27e40b2/68747470733a2f2f7472617669732d63692e6f72672f6a7570797465726875622f636861727470726573732e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Chartpress automate basic Helm chart development work. It is tightly used in development of the <a href=\"https://github.com/jupyterhub/zero-to-jupyterhub-k8s\" rel=\"nofollow\">JupyterHub</a> and <a href=\"https://github.com/jupyterhub/binderhub\" rel=\"nofollow\">BinderHub</a> Helm charts.</p>\n<h2>Features</h2>\n<p>Chartpress can do the following with the help of some configuration.</p>\n<ul>\n<li>Update Chart.yaml's version appropriately</li>\n<li>Build docker images and tag them appropriately</li>\n<li>Push built images to a docker image repository</li>\n<li>Update values.yaml to reference the built images</li>\n<li>Publish a chart to a Helm chart registry based on GitHub pages</li>\n<li>Reset changes to Chart.yaml and values.yaml</li>\n</ul>\n<h2>How chart version and image tags are determined</h2>\n<p>Chartpress will infer chart versions and image tags using a few key pieces of\ninformation.</p>\n<ol>\n<li><code>tag</code>: The latest commit that is tagged on the current branch, or 0.0.1 if no tag\nwas found.</li>\n<li>The latest commit that influenced anything on a path within the git\nrepository that matters to the chart version or image tag. The paths that\nmatters is determined using the image build contexts and additional specified\npaths.\n<ol>\n<li><code>n</code>: The latest commits commit distance count since the tag, described as 3 or\nmore numbers.</li>\n<li><code>sha</code>: The latest commits abbreviated SHA hash, which is typically 7\ncharacters.</li>\n</ol>\n</li>\n<li>If <code>--long</code> is specified or not, if it is, a tagged commit will be written\nout with <code>n.sha</code> as well appended to it.</li>\n<li>If <code>tag</code> contains a <code>-</code>, <code>tag.n.sha</code> will be used, and if not, <code>tag-n.sha</code>\nwill be used. There should be exactly one <code>-</code> in the final version\nspecification to become a valid SemVer2 version.</li>\n</ol>\n<h3>Examples chart versions and image tags</h3>\n<p>This is a list of realistic chart versions and/or image tags in a chronological\norder that could come from using chartpress.</p>\n<pre><code>0.8.0\n0.8.0-n004.hasdf123\n0.8.0-n010.hsdfg234\n0.9.0-beta.1\n0.9.0-beta.1.n001.hdfgh345\n0.9.0-beta.1.n005.hfghj456\n0.9.0-beta.2\n0.9.0-beta.2.n001.hghjk567\n0.9.0-beta.3\n0.9.0\n</code></pre>\n<h2>Requirements</h2>\n<p>The following binaries must be in your <code>PATH</code>:</p>\n<ul>\n<li><a href=\"https://www.git-scm.com/downloads\" rel=\"nofollow\">git</a></li>\n<li><a href=\"https://docs.docker.com/install/#supported-platforms\" rel=\"nofollow\">docker</a></li>\n<li><a href=\"https://helm.sh/docs/using_helm/#installing-helm\" rel=\"nofollow\">helm</a></li>\n</ul>\n<p>If you are publishing a chart to GitHub Pages create a <code>gh-pages</code> branch in the\ndestination repository.</p>\n<h2>Installation</h2>\n<pre><code>pip install chartpress\n</code></pre>\n<h2>Usage</h2>\n<p>In a directory containing a <code>chartpress.yaml</code>, run:</p>\n<pre><code>chartpress\n</code></pre>\n<p>to build your chart(s) and image(s). Add <code>--push</code> to publish images to docker\nhub and <code>--publish-chart</code> to publish the chart and index to gh-pages.</p>\n<pre><code>usage: chartpress [-h] [--push] [--force-push] [--publish-chart]\n                  [--extra-message EXTRA_MESSAGE] [--tag TAG | --long]\n                  [--image-prefix IMAGE_PREFIX] [--reset]\n                  [--skip-build | --force-build] [--version]\n                  [--commit-range COMMIT_RANGE]\n\nAutomate building and publishing helm charts and associated images. This is\nused as part of the JupyterHub and Binder projects.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --push                Push built images to their image registries, but not\n                        if it would replace an existing image.\n  --force-push          Push built images to their image registries,\n                        regardless if it would replace an existing image.\n  --publish-chart       Package a Helm chart and publish it to a Helm chart\n                        repository contructed with a GitHub git repository and\n                        GitHub pages.\n  --extra-message EXTRA_MESSAGE\n                        Extra message to add to the commit message when\n                        publishing charts.\n  --tag TAG             Explicitly set the image tags and chart version.\n  --long                Use this to always get a build suffix for the\n                        generated tag and chart version, even when the\n                        specific commit has a tag.\n  --image-prefix IMAGE_PREFIX\n                        Override the configured image prefix with this value.\n  --reset               Skip image build step and reset Chart.yaml's version\n                        field and values.yaml's image tags. What it resets to\n                        can be configured in chartpress.yaml with the resetTag\n                        and resetVersion configurations.\n  --skip-build          Skip the image build step.\n  --force-build         Enforce the image build step, regardless of if the\n                        image already is available either locally or remotely.\n  --version             Print current chartpress version and exit.\n  --commit-range COMMIT_RANGE\n                        Deprecated: this flag will be ignored. The new logic\n                        to determine if an image needs to be rebuilt does not\n                        require this. It will find the time in git history\n                        where the image was last in need of a rebuild due to\n                        changes, and check if that build exists locally or\n                        remotely already.\n</code></pre>\n<h2>Configuration</h2>\n<p>A <code>chartpress.yaml</code> file contains a specification of charts and images to build\nfor each chart. Below is an example <code>chartpress.yaml</code> file.</p>\n<pre><span class=\"nt\">charts</span><span class=\"p\">:</span>\n  <span class=\"c1\"># list of charts by name</span>\n  <span class=\"c1\"># each name should be a directory containing a helm chart</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">binderhub</span>\n    <span class=\"c1\"># the prefix to use for built images</span>\n    <span class=\"nt\">imagePrefix</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">jupyterhub/k8s-</span>\n    <span class=\"c1\"># tag to use when resetting the chart values</span>\n    <span class=\"c1\"># with the --reset flag. It defaults to \"set-by-chartpress\".</span>\n    <span class=\"nt\">resetTag</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">latest</span>\n    <span class=\"c1\"># version to use when resetting the Chart.yaml's version field with the</span>\n    <span class=\"c1\"># --reset flag. It defaults to \"0.0.1-set.by.chartpress\". This is a valid</span>\n    <span class=\"c1\"># SemVer 2 version, which is required for a helm lint command to succeed.</span>\n    <span class=\"nt\">resetVersion</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">1.2.3</span>\n    <span class=\"c1\"># The git repo whose gh-pages contains the charts. This can be a local</span>\n    <span class=\"c1\"># path such as \".\" as well but if matching &lt;organization&gt;/&lt;repo&gt; will be</span>\n    <span class=\"c1\"># assumed to be a separate GitHub repository.</span>\n    <span class=\"nt\">repo</span><span class=\"p\">:</span>\n      <span class=\"nt\">git</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">jupyterhub/helm-chart</span>\n      <span class=\"nt\">published</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">https://jupyterhub.github.io/helm-chart</span>\n    <span class=\"c1\"># Additional paths that when modified should lead to an updated Chart.yaml</span>\n    <span class=\"c1\"># version, other than the chart directory in &lt;chart name&gt; or any path that</span>\n    <span class=\"c1\"># influence the images of the chart. These paths should be set relative to</span>\n    <span class=\"c1\"># chartpress.yaml's directory.</span>\n    <span class=\"nt\">paths</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">../setup.py</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">../binderhub</span>\n    <span class=\"c1\"># images to build for this chart (optional)</span>\n    <span class=\"nt\">images</span><span class=\"p\">:</span>\n      <span class=\"nt\">binderhub</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Template docker build arguments to be passed using docker's</span>\n        <span class=\"c1\"># --build-arg flag as --build-arg &lt;key&gt;=&lt;value&gt;. Available dynamic</span>\n        <span class=\"c1\"># values are TAG and LAST_COMMIT.</span>\n        <span class=\"nt\">buildArgs</span><span class=\"p\">:</span>\n          <span class=\"nt\">MY_STATIC_BUILD_ARG</span><span class=\"p\">:</span> <span class=\"s\">\"hello</span><span class=\"nv\"> </span><span class=\"s\">world\"</span>\n          <span class=\"nt\">MY_DYNAMIC_BUILD_ARG</span><span class=\"p\">:</span> <span class=\"s\">\"{TAG}-{LAST_COMMIT}\"</span>\n        <span class=\"c1\"># contextPath is the path to the directory that is to be considered the</span>\n        <span class=\"c1\"># current working directory during the build process of the Dockerfile.</span>\n        <span class=\"c1\"># This is by default the folder of the Dockerfile. This path should be</span>\n        <span class=\"c1\"># set relative to chartpress.yaml.</span>\n        <span class=\"nt\">contextPath</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">..</span>\n        <span class=\"c1\"># Path to the Dockerfile, relative to chartpress.yaml. Defaults to</span>\n        <span class=\"c1\"># \"images/&lt;image name&gt;/Dockerfile\".</span>\n        <span class=\"nt\">dockerfilePath</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">images/binderhub/Dockerfile</span>\n        <span class=\"c1\"># Path(s) in &lt;chart name&gt;/values.yaml to be updated with image name and</span>\n        <span class=\"c1\"># tag.</span>\n        <span class=\"nt\">valuesPath</span><span class=\"p\">:</span>\n          <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">singleuser.image</span>\n          <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">singleuser.profileList.0.kubespawner_override.image</span>\n        <span class=\"c1\"># Additional paths, relative to chartpress.yaml's directory, that should</span>\n        <span class=\"c1\"># be used to indicate that a new tag of the image is required, aside</span>\n        <span class=\"c1\"># from the contextPath and dockerfilePath for building the image itself.</span>\n        <span class=\"nt\">paths</span><span class=\"p\">:</span>\n          <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">assets</span>\n</pre>\n<h2>Caveats</h2>\n<h3>TravisCI mirror image registry</h3>\n<p>If you run chartpress on TravisCI, its logic can be fooled by a mirror image\nregistry to rebuild something that didn't need rebuilding. A workaround for this\ncan be found in this repo's <a href=\".travis.yml\" rel=\"nofollow\">.travis.yml</a>.</p>\n<h3>Shallow clones</h3>\n<p>Chartpress detects the latest commit which changed a directory or file when\ndetermining the version and tag to use for charts and images. This means that\nshallow clones should not be used because if the last commit that changed a\nrelevant file is outside the shallow commit range, the wrong tag will be\nassigned.</p>\n<p>TravisCI uses a clone depth of 50 by default, which can result in incorrect\nimage tagging. You can <a href=\"https://docs.travis-ci.com/user/customizing-the-build/#Git-Clone-Depth\" rel=\"nofollow\">disable this shallow clone\nbehavior</a>\nin your <code>.travis.yml</code>:</p>\n<pre><span class=\"nt\">git</span><span class=\"p\">:</span>\n  <span class=\"nt\">depth</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">false</span>\n</pre>\n<h2>Development</h2>\n<p>Testing of this python package can be done using\n<a href=\"https://github.com/pytest-dev/pytest\" rel=\"nofollow\"><code>pytest</code></a>. For more details on the\ntesting, see <a href=\"tests/README.md\" rel=\"nofollow\">tests/README.md</a>.</p>\n<pre><span class=\"c1\"># install chartpress locally</span>\npip install  -e .\n\n<span class=\"c1\"># install dev dependencies</span>\npip install -r dev-requirements.txt\n\n<span class=\"c1\"># run tests</span>\npytest --verbose --flakes --exitfirst\n</pre>\n\n          </div>"}, "last_serial": 6507670, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "16a044f1d2e6419d517ddd8ba9dd4c32", "sha256": "b217968d406f3ac115b061d60896b593040af6e1aa325fdff10946540710adbf"}, "downloads": -1, "filename": "chartpress-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "16a044f1d2e6419d517ddd8ba9dd4c32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 4808, "upload_time": "2018-02-23T10:49:23", "upload_time_iso_8601": "2018-02-23T10:49:23.723187Z", "url": "https://files.pythonhosted.org/packages/db/3f/75b1f44bf8c2988382cdce42a353516f86293e7132aa9b456f750a640f4b/chartpress-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e059c420a83ba4ffea6cf4c23b075a2", "sha256": "1019b2421e43b53107658b4d150e189580aecd02897d23d80d7bc46c740ecda3"}, "downloads": -1, "filename": "chartpress-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5e059c420a83ba4ffea6cf4c23b075a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 5438, "upload_time": "2018-02-23T10:49:24", "upload_time_iso_8601": "2018-02-23T10:49:24.789844Z", "url": "https://files.pythonhosted.org/packages/c9/ce/ee3a04ad1f7fd9a221023739d3913c5eba78d13633fefba285e6823d97f5/chartpress-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a575855f08a700df609fd992d19dbf10", "sha256": "9f6d525c36a2632b327fe4b26bddd6285dde23e6462465257e496d4601f36da1"}, "downloads": -1, "filename": "chartpress-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a575855f08a700df609fd992d19dbf10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 4872, "upload_time": "2018-02-23T11:03:40", "upload_time_iso_8601": "2018-02-23T11:03:40.394667Z", "url": "https://files.pythonhosted.org/packages/6b/6a/16a8904212f486df33ef1fcd76cc5fa9704f155d736db77c8e384af7a3cf/chartpress-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e10006fede06ae56a1a3dc2687de2bd", "sha256": "5ff91860f33a7f3e76e19d164231a275229b279d9959b3cfd59ff015a1a183a0"}, "downloads": -1, "filename": "chartpress-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9e10006fede06ae56a1a3dc2687de2bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 5488, "upload_time": "2018-02-23T11:03:41", "upload_time_iso_8601": "2018-02-23T11:03:41.953762Z", "url": "https://files.pythonhosted.org/packages/21/1f/6a46a207601de19d81570a82756778ff71aefae9c46e49aede9a0864ed32/chartpress-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "3a21a54fb54634420a62bba009ff48d5", "sha256": "3ab39d64bf778f140ce668525710d7baeabfd255771956f90ba98104379aae40"}, "downloads": -1, "filename": "chartpress-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3a21a54fb54634420a62bba009ff48d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 5849, "upload_time": "2018-05-29T09:46:22", "upload_time_iso_8601": "2018-05-29T09:46:22.404184Z", "url": "https://files.pythonhosted.org/packages/f7/0a/4e14a5ee95f03cf09d885afb38957ca3e32336fcadc3f66c08993926a1df/chartpress-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2b5af5217f9bfa333952e1f6eeef70a", "sha256": "6f9a005e27b97f498acfa166967b8d77ae216c527b8b96d3b314d4b835097127"}, "downloads": -1, "filename": "chartpress-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e2b5af5217f9bfa333952e1f6eeef70a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 6756, "upload_time": "2018-05-29T09:46:23", "upload_time_iso_8601": "2018-05-29T09:46:23.718168Z", "url": "https://files.pythonhosted.org/packages/c2/30/e18235bfc4bb32f2fa4524e48576d9797254a8b7f8c72cacc3cd9285b12c/chartpress-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "7f9ff4fcd776c24dfd803cf27f7737e2", "sha256": "56b37d07389cea77502e5dab8b99ed4746a7a6d9b70318d610f61ff61fa12523"}, "downloads": -1, "filename": "chartpress-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7f9ff4fcd776c24dfd803cf27f7737e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 5009, "upload_time": "2018-08-10T11:30:52", "upload_time_iso_8601": "2018-08-10T11:30:52.738181Z", "url": "https://files.pythonhosted.org/packages/4f/d3/475c6dd9dbed9712760514c0d29222eaf8927f12625f515e36fa9ee46981/chartpress-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41b5b0170f7e58671f98270559ff2cb0", "sha256": "be468d6aaf5be7766b3b9cd373392ea827ff1c5ac5ce22deb05921d4e07fe5f6"}, "downloads": -1, "filename": "chartpress-0.2.1.tar.gz", "has_sig": false, "md5_digest": "41b5b0170f7e58671f98270559ff2cb0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 6844, "upload_time": "2018-08-10T11:30:54", "upload_time_iso_8601": "2018-08-10T11:30:54.084331Z", "url": "https://files.pythonhosted.org/packages/4f/f9/f619fdbf9308009fcc9ac391a5ee6b8c945e9b9d60b3fb404599816901fe/chartpress-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "2496c24a21b18438f557550dba04d982", "sha256": "3022648a9d15fa3f40dc93d16ab5e17a88943758b9a4c4e0f9ee8a9b84501659"}, "downloads": -1, "filename": "chartpress-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2496c24a21b18438f557550dba04d982", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 5083, "upload_time": "2018-08-19T08:47:14", "upload_time_iso_8601": "2018-08-19T08:47:14.528851Z", "url": "https://files.pythonhosted.org/packages/b0/58/4056f00899ee2c54d16ed37eb714450200cd59d37b3f3c8aea7b35874bb4/chartpress-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38c23e82773e8b6b7882573bd50aa626", "sha256": "0a71a269535c5ef029fa71c37235e8ee61b07754eecf8b7ba71c50d29460b2e6"}, "downloads": -1, "filename": "chartpress-0.2.2.tar.gz", "has_sig": false, "md5_digest": "38c23e82773e8b6b7882573bd50aa626", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 6914, "upload_time": "2018-08-19T08:47:15", "upload_time_iso_8601": "2018-08-19T08:47:15.803494Z", "url": "https://files.pythonhosted.org/packages/ec/e8/e0a74aa183b00107297ab262297cd89fdf274b09b03e81717ec4a64b164b/chartpress-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "54c75929f7b714b91605c97fd9ec3b7c", "sha256": "6a79cb434af8d50a8c021f891055ca21f071f237051a97c16897b1971d4fc5a0"}, "downloads": -1, "filename": "chartpress-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "54c75929f7b714b91605c97fd9ec3b7c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7373, "upload_time": "2019-02-07T10:56:48", "upload_time_iso_8601": "2019-02-07T10:56:48.135200Z", "url": "https://files.pythonhosted.org/packages/d2/17/6d92a67a38ba4cf106eb7ed8ba8b66c5a1738022639d9dcbb5616b3804de/chartpress-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2eb0ca0cdaf213bf862819cb989b421", "sha256": "a9a4068b61ee5aa4aba5cd502ff32182b2d0e6c8262030d0b68f2fa532116144"}, "downloads": -1, "filename": "chartpress-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d2eb0ca0cdaf213bf862819cb989b421", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7806, "upload_time": "2019-02-07T10:56:49", "upload_time_iso_8601": "2019-02-07T10:56:49.659343Z", "url": "https://files.pythonhosted.org/packages/da/3b/d7f2297a1d6c5606f3b5da7a4f602c564604a52cab84df2137a68b30cee3/chartpress-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "45d2dee3f8cdd3c33d31fe850d068346", "sha256": "4c555ceda47ed38222037bd8a7b3c6840d1f3325fec7b10cfd1aa20999c5875f"}, "downloads": -1, "filename": "chartpress-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "45d2dee3f8cdd3c33d31fe850d068346", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7892, "upload_time": "2019-02-07T15:18:48", "upload_time_iso_8601": "2019-02-07T15:18:48.622603Z", "url": "https://files.pythonhosted.org/packages/41/0f/60acecd6e7a02a277b4fa2f59da4db2e77b2e4105020e0b5d5b34f4c1adb/chartpress-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3828f82296cd295c2f67f7c42a3c1c4", "sha256": "8e651281be98fb5bddb6b66e03c8d9fda9cc517806acbca93c61532addc0d287"}, "downloads": -1, "filename": "chartpress-0.3.1.tar.gz", "has_sig": false, "md5_digest": "c3828f82296cd295c2f67f7c42a3c1c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8450, "upload_time": "2019-02-07T15:18:49", "upload_time_iso_8601": "2019-02-07T15:18:49.799317Z", "url": "https://files.pythonhosted.org/packages/3b/df/6739932f2e031f8e17f1c09fd160b030730b47305a4b5fc801c7e0667377/chartpress-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "0263f5e9394a992b8603b8ea1e5a7f1d", "sha256": "e4455515dfc4dda0cd9b586b67e6a9d6a6ce7d9a4ad086c6780f9758e9b5c5f4"}, "downloads": -1, "filename": "chartpress-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0263f5e9394a992b8603b8ea1e5a7f1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8310, "upload_time": "2019-10-05T20:22:38", "upload_time_iso_8601": "2019-10-05T20:22:38.771601Z", "url": "https://files.pythonhosted.org/packages/15/cd/5c69933e66fbf252f6390be30b8a4dc46793b6422aa123a37e79fab3643a/chartpress-0.3.2-py3-none-any.whl", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "5d1dc879855c115d69d026f50bd389ad", "sha256": "3de771e2716ba4815ff991c4e73ad43a883e07972ee29a8e491f5d40066cf98a"}, "downloads": -1, "filename": "chartpress-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5d1dc879855c115d69d026f50bd389ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9007, "upload_time": "2019-10-17T16:27:22", "upload_time_iso_8601": "2019-10-17T16:27:22.114791Z", "url": "https://files.pythonhosted.org/packages/18/cc/3116b8fd14db0a579c6a08c0a73059c4e0d9b8280a79b0695831c0b2cc80/chartpress-0.4.0-py3-none-any.whl", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "56c5516b4bb583627cd59e90a0ea4f27", "sha256": "c367665980ab8d2207bbbad978372b30e8dd28e8d9ceb3e776a6674b680f153b"}, "downloads": -1, "filename": "chartpress-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "56c5516b4bb583627cd59e90a0ea4f27", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9243, "upload_time": "2019-10-17T18:51:28", "upload_time_iso_8601": "2019-10-17T18:51:28.432142Z", "url": "https://files.pythonhosted.org/packages/a4/f1/95e792570736e0115ebcd31c6576d32a37f634bdb14859bde615089c4206/chartpress-0.4.1-py3-none-any.whl", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "c5b1a35046060c432d8dfde128e1ecd7", "sha256": "e0f3fdbbcb4f1e48fd5a8c3e15a2a75f39183255385c09b57834baad9c2fe0d0"}, "downloads": -1, "filename": "chartpress-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c5b1a35046060c432d8dfde128e1ecd7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10376, "upload_time": "2019-10-19T11:04:19", "upload_time_iso_8601": "2019-10-19T11:04:19.039265Z", "url": "https://files.pythonhosted.org/packages/c7/1f/905e78b91a6cec7b286025a4566da401cf168f77dd9d830fe5f7c7dd07a8/chartpress-0.4.2-py3-none-any.whl", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "584b6f4cc7ffc90603efe7c788932349", "sha256": "ba88f88339a3102cc4183a19d234e5377ef40ff19f15f9b449092244b40d86d1"}, "downloads": -1, "filename": "chartpress-0.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "584b6f4cc7ffc90603efe7c788932349", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11822, "upload_time": "2019-10-29T20:28:01", "upload_time_iso_8601": "2019-10-29T20:28:01.265438Z", "url": "https://files.pythonhosted.org/packages/33/7e/55760708f44db6298b3c39b0c1d253a839f7657aceb490a287b71c8a43b4/chartpress-0.4.3-py3-none-any.whl", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "d566755582e26962a7a93a303dfb8a6d", "sha256": "dba9217836d58450adfff50e533cc811c7eee14fcf3b1649ba43b6712aa0f0d1"}, "downloads": -1, "filename": "chartpress-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d566755582e26962a7a93a303dfb8a6d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13852, "upload_time": "2019-12-01T21:21:09", "upload_time_iso_8601": "2019-12-01T21:21:09.976749Z", "url": "https://files.pythonhosted.org/packages/71/72/5fd287dab870483d419d73ab0eeb5247d2642ef5c22341868cb87df0c1f7/chartpress-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a775915d260ed53047beb894ced36a1", "sha256": "c0ef223a9ac1de776b40cac1350d8f98cd7f8f4be3813a9055b7f524706c4fad"}, "downloads": -1, "filename": "chartpress-0.5.0.tar.gz", "has_sig": false, "md5_digest": "6a775915d260ed53047beb894ced36a1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16336, "upload_time": "2019-12-01T21:21:11", "upload_time_iso_8601": "2019-12-01T21:21:11.147593Z", "url": "https://files.pythonhosted.org/packages/29/cf/1f620a5d0ea6e1c24fa3a222ca33154701f18191800738cae6f9d6668e9e/chartpress-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "a2d01427d7f7c62b38de373567064c2b", "sha256": "8a2c5d39dc296a7b3d7621d6911403fbd42799a30f79f57f135830aad8ce4e4f"}, "downloads": -1, "filename": "chartpress-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a2d01427d7f7c62b38de373567064c2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13917, "upload_time": "2020-01-12T18:09:05", "upload_time_iso_8601": "2020-01-12T18:09:05.894765Z", "url": "https://files.pythonhosted.org/packages/67/3a/8a20a558bfb00031c833d77dfe23b0a38d47315b172e067fc50233d4e3cd/chartpress-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7054bcb5c6386aae3f04e85169fa3b8", "sha256": "6c81b82d048fe7aa4de5c2ca0369801e4ba72420529e35d27105f0e09e97e415"}, "downloads": -1, "filename": "chartpress-0.6.0.tar.gz", "has_sig": false, "md5_digest": "c7054bcb5c6386aae3f04e85169fa3b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16703, "upload_time": "2020-01-12T18:09:07", "upload_time_iso_8601": "2020-01-12T18:09:07.369565Z", "url": "https://files.pythonhosted.org/packages/5b/2d/2c8b27a6150d1ed8ff9faa15bb426f5cc8a1ba3dd2ce90f9740df3e9353b/chartpress-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a2d01427d7f7c62b38de373567064c2b", "sha256": "8a2c5d39dc296a7b3d7621d6911403fbd42799a30f79f57f135830aad8ce4e4f"}, "downloads": -1, "filename": "chartpress-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a2d01427d7f7c62b38de373567064c2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13917, "upload_time": "2020-01-12T18:09:05", "upload_time_iso_8601": "2020-01-12T18:09:05.894765Z", "url": "https://files.pythonhosted.org/packages/67/3a/8a20a558bfb00031c833d77dfe23b0a38d47315b172e067fc50233d4e3cd/chartpress-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7054bcb5c6386aae3f04e85169fa3b8", "sha256": "6c81b82d048fe7aa4de5c2ca0369801e4ba72420529e35d27105f0e09e97e415"}, "downloads": -1, "filename": "chartpress-0.6.0.tar.gz", "has_sig": false, "md5_digest": "c7054bcb5c6386aae3f04e85169fa3b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16703, "upload_time": "2020-01-12T18:09:07", "upload_time_iso_8601": "2020-01-12T18:09:07.369565Z", "url": "https://files.pythonhosted.org/packages/5b/2d/2c8b27a6150d1ed8ff9faa15bb426f5cc8a1ba3dd2ce90f9740df3e9353b/chartpress-0.6.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:24 2020"}