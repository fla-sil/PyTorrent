{"info": {"author": "samuraitaiga", "author_email": "samuraitaiga@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Programming Language :: Python", "Programming Language :: Python :: 2", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Software Development :: Libraries"], "description": "****************************************\npy-metatrader\n****************************************\n\npy-metatrader 0.0.1\n\nReleased: 30-May-2015\n\n=============\nIntroduction\n=============\n\npy-metatrader is a python package that provides interfaces to metatrader4(mt4).\n`metatrader4`_  is a trading platform that can automate trading(fx, stock, etc...) by your own program(ExpertAdvisor in mt4).\n\nyou can automate simuration(backtest in mt4), CI  EA development , etc... by using this library.\n\ncurrently works with Python 2.7.\n\ncontributing and porting is welcome.\n\n\n=============\nFeature\n=============\n\nAt the moment, py-metatrader supports:\n\n* backtest\n* optimization\n\nThe goal of py-metatrader is to support execute all feature of metatrader4 from this library.\n\n\n============\nInstallation\n============\n\nInstall via `pip`_:\n\n.. code-block:: bash\n\n    $ pip install metatrader\n\nInstall from source:\n\n.. code-block:: bash\n\n    $ git clone https://github.com/samuraitaiga/py-metatrader.git\n    $ cd py-metatrader\n    $ python setup.py install\n\n\n============\nChangeLogs\n============\n* 0.0.1\n\n  * first release. backtest and optimization from python.\n\n\n============\nUsage\n============\n\n\nBacktest:\n\n.. code-block:: python\n\n    from metatrader.mt4 import initizalize\n    from metatrader.backtest import BackTest\n    \n    # point mt4 install folder\n    initizalize('C:\\\\Program Files\\\\FXCM MetaTrader 4')\n\n    # specify backtest period by datetime format\n    from_date = datetime(2014, 9, 1)\n    to_date = datetime(2015, 1, 1)\n\n    ea_name = 'Moving Average'\n\n    # create ea param by dict.\n    param = {\n             'Lots': {'value': 0.1},\n             'MaximumRisk': {'value': 0.02},\n             'DecreaseFactor': {'value': 3.0},\n             'MovingPeriod': {'value': 12},\n             'MovingShift': {'value': 6}\n             }\n    # create backtest object\n    backtest = BackTest(ea_name, param, 'USDJPY', 'M5', from_date, to_date)\n\n    # run backtest\n    ret = backtest.run()\n\n    # you can get result from result object\n    # for example you can print gross profit\n    print ret.gross_profit\n\n.. _metatrader4: http://www.metatrader4.com/\n.. _pip: http://www.pip-installer.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/samuraitaiga/py-metatrader", "keywords": "MetaTrader mt4 mql", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "metatrader", "package_url": "https://pypi.org/project/metatrader/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/metatrader/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/samuraitaiga/py-metatrader"}, "release_url": "https://pypi.org/project/metatrader/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "MetaTrader4 Libraries easily backtest and optimization from python", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>py-metatrader 0.0.1</p>\n<p>Released: 30-May-2015</p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>py-metatrader is a python package that provides interfaces to metatrader4(mt4).\n<a href=\"http://www.metatrader4.com/\" rel=\"nofollow\">metatrader4</a>  is a trading platform that can automate trading(fx, stock, etc\u2026) by your own program(ExpertAdvisor in mt4).</p>\n<p>you can automate simuration(backtest in mt4), CI  EA development , etc\u2026 by using this library.</p>\n<p>currently works with Python 2.7.</p>\n<p>contributing and porting is welcome.</p>\n</div>\n<div id=\"feature\">\n<h2>Feature</h2>\n<p>At the moment, py-metatrader supports:</p>\n<ul>\n<li>backtest</li>\n<li>optimization</li>\n</ul>\n<p>The goal of py-metatrader is to support execute all feature of metatrader4 from this library.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install via <a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ pip install metatrader\n</pre>\n<p>Install from source:</p>\n<pre>$ git clone https://github.com/samuraitaiga/py-metatrader.git\n$ <span class=\"nb\">cd</span> py-metatrader\n$ python setup.py install\n</pre>\n</div>\n<div id=\"changelogs\">\n<h2>ChangeLogs</h2>\n<ul>\n<li>0.0.1<ul>\n<li>first release. backtest and optimization from python.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Backtest:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">metatrader.mt4</span> <span class=\"kn\">import</span> <span class=\"n\">initizalize</span>\n<span class=\"kn\">from</span> <span class=\"nn\">metatrader.backtest</span> <span class=\"kn\">import</span> <span class=\"n\">BackTest</span>\n\n<span class=\"c1\"># point mt4 install folder</span>\n<span class=\"n\">initizalize</span><span class=\"p\">(</span><span class=\"s1\">'C:</span><span class=\"se\">\\\\</span><span class=\"s1\">Program Files</span><span class=\"se\">\\\\</span><span class=\"s1\">FXCM MetaTrader 4'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># specify backtest period by datetime format</span>\n<span class=\"n\">from_date</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">to_date</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">ea_name</span> <span class=\"o\">=</span> <span class=\"s1\">'Moving Average'</span>\n\n<span class=\"c1\"># create ea param by dict.</span>\n<span class=\"n\">param</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n         <span class=\"s1\">'Lots'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">},</span>\n         <span class=\"s1\">'MaximumRisk'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mf\">0.02</span><span class=\"p\">},</span>\n         <span class=\"s1\">'DecreaseFactor'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mf\">3.0</span><span class=\"p\">},</span>\n         <span class=\"s1\">'MovingPeriod'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">},</span>\n         <span class=\"s1\">'MovingShift'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">}</span>\n         <span class=\"p\">}</span>\n<span class=\"c1\"># create backtest object</span>\n<span class=\"n\">backtest</span> <span class=\"o\">=</span> <span class=\"n\">BackTest</span><span class=\"p\">(</span><span class=\"n\">ea_name</span><span class=\"p\">,</span> <span class=\"n\">param</span><span class=\"p\">,</span> <span class=\"s1\">'USDJPY'</span><span class=\"p\">,</span> <span class=\"s1\">'M5'</span><span class=\"p\">,</span> <span class=\"n\">from_date</span><span class=\"p\">,</span> <span class=\"n\">to_date</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># run backtest</span>\n<span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">backtest</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># you can get result from result object</span>\n<span class=\"c1\"># for example you can print gross profit</span>\n<span class=\"nb\">print</span> <span class=\"n\">ret</span><span class=\"o\">.</span><span class=\"n\">gross_profit</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1566401, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "45fee71e6990366c24f4e9979564bc57", "sha256": "859822de3daf2e3cd7ead2bed87947df5c77c1b66020210222568eca8cc4e5c2"}, "downloads": -1, "filename": "metatrader-0.0.1.zip", "has_sig": false, "md5_digest": "45fee71e6990366c24f4e9979564bc57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11203, "upload_time": "2015-05-28T14:36:05", "upload_time_iso_8601": "2015-05-28T14:36:05.812423Z", "url": "https://files.pythonhosted.org/packages/65/69/891977977dbeaa610ccc7ba12df4c808179ef0311fb563ecb73a485f9360/metatrader-0.0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "45fee71e6990366c24f4e9979564bc57", "sha256": "859822de3daf2e3cd7ead2bed87947df5c77c1b66020210222568eca8cc4e5c2"}, "downloads": -1, "filename": "metatrader-0.0.1.zip", "has_sig": false, "md5_digest": "45fee71e6990366c24f4e9979564bc57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11203, "upload_time": "2015-05-28T14:36:05", "upload_time_iso_8601": "2015-05-28T14:36:05.812423Z", "url": "https://files.pythonhosted.org/packages/65/69/891977977dbeaa610ccc7ba12df4c808179ef0311fb563ecb73a485f9360/metatrader-0.0.1.zip", "yanked": false}], "timestamp": "Fri May  8 00:55:46 2020"}