{"info": {"author": "Joseph Moorhouse", "author_email": "moorhouse@live.co.uk", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering"], "description": "## pybees: Python optimization toolkit using the bees algorithm\n\n<br/>\n<p align=\"center\">\n   <img src=\"https://media.giphy.com/media/yIXVnzpoNiE0w/source.gif\" width=\"600\" />\n</p>\n<br/>\n\n## What is it?\n\n**pybees** is a Python package for function optimization. It uses the nature inspired [**bees algorithm**](https://www.researchgate.net/publication/260985621_The_Bees_Algorithm_Technical_Note), proposed by Pham et al. and is built on top of SciPy. **pybees** is distributed under the 3-Clause BSD license.\n\nThe bees algorithm is a swarm based search algorithm, which mimics the food foraging behaviour of honey bees. The basic algorithm is suitable for both [continuous](https://en.wikipedia.org/wiki/Continuous_optimization) and [combinatorial](https://en.wikipedia.org/wiki/Combinatorial_optimization) optimization problems, which is demonstrated in the [**basic examples**](#Basic-Examples) section.\n\n\n## Main features\n\n- High-level API to optimize continuous functions (training a [**multilayer perceptron**](https://en.wikipedia.org/wiki/Multilayer_perceptron)).\n- High-level API to optimize discrete functions ([**traveling salesperson problem**](https://en.wikipedia.org/wiki/Travelling_salesman_problem)).\n- Built in single-objective cost functions.\n\n- [**plotly**](https://plot.ly/python/) plotting tools for 2D and 3D (both continuous and discrete).\n- Extensible API for developing new ideas.\n\n\n## Where to get it\n\nIf all dependencies are already installed, then the easiest way to install pybees is using `pip`.\n\n```python\npip install pybees\n```\n\n## How to use it\n\nPlease visit the examples folder to view the demonstration [examples](examples). These include.\n\n- [Continuous function](https://github.com/jbmoorhouse/pybees/blob/master/examples/continuous.ipynb) optimization ([*levy*](https://www.sfu.ca/~ssurjano/levy.html), [*drop_wave*](https://www.sfu.ca/~ssurjano/drop.html) and [*michalewicz*](https://www.sfu.ca/~ssurjano/michal.html))\n- [Combinatorial function](https://github.com/jbmoorhouse/pybees/blob/master/examples/combinatorial.ipynb) optimization (travelling salesperson problem)\n\nFuture examples will include\n\n- Multilayer perceptron\n\n## Dependencies\n\npybees requires:\n\n- numpy >= 1.17.4 <br/>\n- scipy >= 1.3.2 <br/>\n- plotly >= 4.4.1<br/>\n- tqdm >= 4.40.2<br/>\n- sklearn >= 0.22<br/>\n- pandas >= 0.25.3<br/>\n\n## License\n\n[BSD 3](LICENSE)\n\n\n## Basic Examples\n\n### Continuous function optimization \n```python\nimport pybees as pb\n\nsbc = pb.SimpleBeesContinuous(\n    n_scout_bees = 50, \n    elite_site_params = (15, 40), \n    best_site_params = (15, 30),\n    bounds = (-10,10), \n    n_dim = 2,\n    nbhd_radius = 2\n)\n```\n\nThis operation returns a `scipy.optimize.OptimizeResult`. `fun` represents the value of the objective function (lowest point). `nit` represents the number of iterations taken. `x` represents the coordinates of the value found for the objective function.\n\n```python\n>>> sbc.optimize(pb.levy)\nfun: 1.007063464503951e-06\nnit: 100\nx: array([0.99905553, 0.99967304])\n```\n\nThe results may also be visualised by using the following\n\n```python\nsbc.plot(global_min = (1, 1))\n```\n\n### Combinatorial optimization (e.g. travelling salesperson problem)\n\n```python\nimport pybees as pb\n\nsbd = pb.SimpleBeesDiscrete(\n    n_scout_bees = 50, \n    elite_site_params = (15, 40), \n    best_site_params = (15, 30), \n    coordinates = np.random.randint(10, size=[10, 2])\n)\n```\n\nThis operation returns a `scipy.optimize.OptimizeResult` result. `res.coordinates` represents `sbd.coordinates` reordered, resulting from the optimization of some objective function. In this example, `tour_distance` was minimized. As such, `coordinates` represents the sequence, corresponding to the shortest path between all coordinates (i.e. travelling salesperson problem). `fun` represents the value of the objective function (shortest distance). `nit` represents the number of iterations taken. `x` represents the permutation of the original sequence passed to `SimpleBeesDiscrete` which gives the shortest distance.\n\n```python\n>>> sbd.optimize(pb.tour_distance)\ncoordinates: array([\n       [7., 8.],\n       [4., 8.],\n       [2., 6.],\n       [0., 5.],\n       [1., 0.],\n       [3., 2.],\n       [2., 4.],\n       [3., 4.],\n       [5., 4.],\n       [7., 4.]])\nfun: 27.228009718084742\nnit: 100\nx: array([1., 9., 7., 5., 0., 3., 4., 6., 2., 8.])\n```\n\n\nThe results may also be visualised by using the following\n\n```python\nsbd.plot()\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jbmoorhouse/pybees", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pybees", "package_url": "https://pypi.org/project/pybees/", "platform": "", "project_url": "https://pypi.org/project/pybees/", "project_urls": {"Homepage": "https://github.com/jbmoorhouse/pybees"}, "release_url": "https://pypi.org/project/pybees/0.0.4/", "requires_dist": ["numpy (>=1.17.4)", "scipy (>=1.3.2)", "plotly (>=4.4.1)", "tqdm (>=4.40.2)", "scikit-learn (>=0.22)", "pandas (>=0.25.3)"], "requires_python": ">=3.6", "summary": "A research toolkit for the Bees algorithm in Python", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>pybees: Python optimization toolkit using the bees algorithm</h2>\n<br>\n<p align=\"center\">\n   <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3bc2aff9380c448ef63d24f21c2fa121fc9acf5e/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f794958566e7a706f4e694530772f736f757263652e676966\" width=\"600\">\n</p>\n<br>\n<h2>What is it?</h2>\n<p><strong>pybees</strong> is a Python package for function optimization. It uses the nature inspired <a href=\"https://www.researchgate.net/publication/260985621_The_Bees_Algorithm_Technical_Note\" rel=\"nofollow\"><strong>bees algorithm</strong></a>, proposed by Pham et al. and is built on top of SciPy. <strong>pybees</strong> is distributed under the 3-Clause BSD license.</p>\n<p>The bees algorithm is a swarm based search algorithm, which mimics the food foraging behaviour of honey bees. The basic algorithm is suitable for both <a href=\"https://en.wikipedia.org/wiki/Continuous_optimization\" rel=\"nofollow\">continuous</a> and <a href=\"https://en.wikipedia.org/wiki/Combinatorial_optimization\" rel=\"nofollow\">combinatorial</a> optimization problems, which is demonstrated in the <a href=\"#Basic-Examples\" rel=\"nofollow\"><strong>basic examples</strong></a> section.</p>\n<h2>Main features</h2>\n<ul>\n<li>\n<p>High-level API to optimize continuous functions (training a <a href=\"https://en.wikipedia.org/wiki/Multilayer_perceptron\" rel=\"nofollow\"><strong>multilayer perceptron</strong></a>).</p>\n</li>\n<li>\n<p>High-level API to optimize discrete functions (<a href=\"https://en.wikipedia.org/wiki/Travelling_salesman_problem\" rel=\"nofollow\"><strong>traveling salesperson problem</strong></a>).</p>\n</li>\n<li>\n<p>Built in single-objective cost functions.</p>\n</li>\n<li>\n<p><a href=\"https://plot.ly/python/\" rel=\"nofollow\"><strong>plotly</strong></a> plotting tools for 2D and 3D (both continuous and discrete).</p>\n</li>\n<li>\n<p>Extensible API for developing new ideas.</p>\n</li>\n</ul>\n<h2>Where to get it</h2>\n<p>If all dependencies are already installed, then the easiest way to install pybees is using <code>pip</code>.</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">pybees</span>\n</pre>\n<h2>How to use it</h2>\n<p>Please visit the examples folder to view the demonstration <a href=\"examples\" rel=\"nofollow\">examples</a>. These include.</p>\n<ul>\n<li><a href=\"https://github.com/jbmoorhouse/pybees/blob/master/examples/continuous.ipynb\" rel=\"nofollow\">Continuous function</a> optimization (<a href=\"https://www.sfu.ca/%7Essurjano/levy.html\" rel=\"nofollow\"><em>levy</em></a>, <a href=\"https://www.sfu.ca/%7Essurjano/drop.html\" rel=\"nofollow\"><em>drop_wave</em></a> and <a href=\"https://www.sfu.ca/%7Essurjano/michal.html\" rel=\"nofollow\"><em>michalewicz</em></a>)</li>\n<li><a href=\"https://github.com/jbmoorhouse/pybees/blob/master/examples/combinatorial.ipynb\" rel=\"nofollow\">Combinatorial function</a> optimization (travelling salesperson problem)</li>\n</ul>\n<p>Future examples will include</p>\n<ul>\n<li>Multilayer perceptron</li>\n</ul>\n<h2>Dependencies</h2>\n<p>pybees requires:</p>\n<ul>\n<li>numpy &gt;= 1.17.4 <br></li>\n<li>scipy &gt;= 1.3.2 <br></li>\n<li>plotly &gt;= 4.4.1<br></li>\n<li>tqdm &gt;= 4.40.2<br></li>\n<li>sklearn &gt;= 0.22<br></li>\n<li>pandas &gt;= 0.25.3<br></li>\n</ul>\n<h2>License</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">BSD 3</a></p>\n<h2>Basic Examples</h2>\n<h3>Continuous function optimization</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pybees</span> <span class=\"k\">as</span> <span class=\"nn\">pb</span>\n\n<span class=\"n\">sbc</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">SimpleBeesContinuous</span><span class=\"p\">(</span>\n    <span class=\"n\">n_scout_bees</span> <span class=\"o\">=</span> <span class=\"mi\">50</span><span class=\"p\">,</span> \n    <span class=\"n\">elite_site_params</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">),</span> \n    <span class=\"n\">best_site_params</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">),</span>\n    <span class=\"n\">bounds</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">),</span> \n    <span class=\"n\">n_dim</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"n\">nbhd_radius</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"p\">)</span>\n</pre>\n<p>This operation returns a <code>scipy.optimize.OptimizeResult</code>. <code>fun</code> represents the value of the objective function (lowest point). <code>nit</code> represents the number of iterations taken. <code>x</code> represents the coordinates of the value found for the objective function.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sbc</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">levy</span><span class=\"p\">)</span>\n<span class=\"n\">fun</span><span class=\"p\">:</span> <span class=\"mf\">1.007063464503951e-06</span>\n<span class=\"n\">nit</span><span class=\"p\">:</span> <span class=\"mi\">100</span>\n<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">0.99905553</span><span class=\"p\">,</span> <span class=\"mf\">0.99967304</span><span class=\"p\">])</span>\n</pre>\n<p>The results may also be visualised by using the following</p>\n<pre><span class=\"n\">sbc</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">global_min</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n</pre>\n<h3>Combinatorial optimization (e.g. travelling salesperson problem)</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pybees</span> <span class=\"k\">as</span> <span class=\"nn\">pb</span>\n\n<span class=\"n\">sbd</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">SimpleBeesDiscrete</span><span class=\"p\">(</span>\n    <span class=\"n\">n_scout_bees</span> <span class=\"o\">=</span> <span class=\"mi\">50</span><span class=\"p\">,</span> \n    <span class=\"n\">elite_site_params</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">),</span> \n    <span class=\"n\">best_site_params</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">),</span> \n    <span class=\"n\">coordinates</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"p\">)</span>\n</pre>\n<p>This operation returns a <code>scipy.optimize.OptimizeResult</code> result. <code>res.coordinates</code> represents <code>sbd.coordinates</code> reordered, resulting from the optimization of some objective function. In this example, <code>tour_distance</code> was minimized. As such, <code>coordinates</code> represents the sequence, corresponding to the shortest path between all coordinates (i.e. travelling salesperson problem). <code>fun</code> represents the value of the objective function (shortest distance). <code>nit</code> represents the number of iterations taken. <code>x</code> represents the permutation of the original sequence passed to <code>SimpleBeesDiscrete</code> which gives the shortest distance.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sbd</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">tour_distance</span><span class=\"p\">)</span>\n<span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">array</span><span class=\"p\">([</span>\n       <span class=\"p\">[</span><span class=\"mf\">7.</span><span class=\"p\">,</span> <span class=\"mf\">8.</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mf\">4.</span><span class=\"p\">,</span> <span class=\"mf\">8.</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">6.</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">5.</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mf\">3.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mf\">3.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mf\">5.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mf\">7.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">]])</span>\n<span class=\"n\">fun</span><span class=\"p\">:</span> <span class=\"mf\">27.228009718084742</span>\n<span class=\"n\">nit</span><span class=\"p\">:</span> <span class=\"mi\">100</span>\n<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">9.</span><span class=\"p\">,</span> <span class=\"mf\">7.</span><span class=\"p\">,</span> <span class=\"mf\">5.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">3.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">,</span> <span class=\"mf\">6.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">8.</span><span class=\"p\">])</span>\n</pre>\n<p>The results may also be visualised by using the following</p>\n<pre><span class=\"n\">sbd</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6705922, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1571082a482ecb610a30c7476010762f", "sha256": "a85e875d1a03d7b0aedd7e813522866f10ea92d0a954380cdc4fc49245ee22df"}, "downloads": -1, "filename": "pybees-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1571082a482ecb610a30c7476010762f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 35924, "upload_time": "2020-02-25T19:43:05", "upload_time_iso_8601": "2020-02-25T19:43:05.377198Z", "url": "https://files.pythonhosted.org/packages/46/94/29e6a1c7eeb5b4c6a9fba07d573641cb66302a60529fa288721379c5f0eb/pybees-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c86e8981d2f82bc2d7956322f432130", "sha256": "d07c2dfb54a80eb4ee6e5729b00e70cef94d1d082cd78154aef574d5dd214107"}, "downloads": -1, "filename": "pybees-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3c86e8981d2f82bc2d7956322f432130", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 30049, "upload_time": "2020-02-25T19:44:00", "upload_time_iso_8601": "2020-02-25T19:44:00.375852Z", "url": "https://files.pythonhosted.org/packages/0c/b6/a5399250ab1faf536a5bc8d547622286fffbb923214d5636d9cc6973554c/pybees-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "fac4653a87e3da141c87a06834363c49", "sha256": "724e4e6d640740ca0cb3f0169a7ac8b908a9e3bc1787ccca29e8b91f928428ef"}, "downloads": -1, "filename": "pybees-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fac4653a87e3da141c87a06834363c49", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37796, "upload_time": "2020-02-26T19:42:35", "upload_time_iso_8601": "2020-02-26T19:42:35.207991Z", "url": "https://files.pythonhosted.org/packages/25/91/256a0771903bf75dd9f412952e97f32ae94e74817f7e368f0462908d5683/pybees-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cdd4673c4979cae185f1d1d5c89e876", "sha256": "50eced2e9b32e57728e6b55a9fefd1a4f9b4d728e8f2780241ed5467222cd2cc"}, "downloads": -1, "filename": "pybees-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4cdd4673c4979cae185f1d1d5c89e876", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 29947, "upload_time": "2020-02-26T19:42:36", "upload_time_iso_8601": "2020-02-26T19:42:36.746286Z", "url": "https://files.pythonhosted.org/packages/1f/9b/21c30f794d60b8a578cfc9ea41b17b698abab537e811ad4bb5c15d889f13/pybees-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e52d2e05346838ec62ef8e32b5ace9c1", "sha256": "2a4338c9abf6cfbc26439c29bdbb8c008a1899fe157c608c08fdef14f3004a05"}, "downloads": -1, "filename": "pybees-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e52d2e05346838ec62ef8e32b5ace9c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37799, "upload_time": "2020-02-26T19:49:48", "upload_time_iso_8601": "2020-02-26T19:49:48.573305Z", "url": "https://files.pythonhosted.org/packages/d3/5a/ed429472a9ccdc3d9fc904575e89172fc73a89b733f159cdca6ffc38cbac/pybees-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46f4447afdb6fb27438468c0d740883a", "sha256": "979417282b04b507bb56959f34b1696d17f5380a69fab69d55a3f9fd187df433"}, "downloads": -1, "filename": "pybees-0.0.3.tar.gz", "has_sig": false, "md5_digest": "46f4447afdb6fb27438468c0d740883a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 29949, "upload_time": "2020-02-26T19:49:49", "upload_time_iso_8601": "2020-02-26T19:49:49.704578Z", "url": "https://files.pythonhosted.org/packages/56/17/e144daba7e0c308e2b40222d4694e235f8bc398a154b77a806df7e1e35d2/pybees-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "a29cd9b01a33d30ac2ad2f94d36f976c", "sha256": "2331969044cda9eca344bcadd4af88e000b11dc7b72ed44faebaf4de23414170"}, "downloads": -1, "filename": "pybees-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a29cd9b01a33d30ac2ad2f94d36f976c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37799, "upload_time": "2020-02-26T20:24:48", "upload_time_iso_8601": "2020-02-26T20:24:48.983408Z", "url": "https://files.pythonhosted.org/packages/34/82/a6de5458cf005a2747ab366d361b74076b012f1bf1bd89f79a9812a48081/pybees-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8454fcbf1a5c9d3c41c1e1fa404e0c34", "sha256": "c7c22142f9fdcde81acb1809770e71ab2de221e235ddc54aeef501412bfe0c1e"}, "downloads": -1, "filename": "pybees-0.0.4.tar.gz", "has_sig": false, "md5_digest": "8454fcbf1a5c9d3c41c1e1fa404e0c34", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 29939, "upload_time": "2020-02-26T20:24:50", "upload_time_iso_8601": "2020-02-26T20:24:50.399686Z", "url": "https://files.pythonhosted.org/packages/e5/81/3bc5b5916a0e22c4b798236c0342535be6096c6fb150bc22a6e4ce7e910b/pybees-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a29cd9b01a33d30ac2ad2f94d36f976c", "sha256": "2331969044cda9eca344bcadd4af88e000b11dc7b72ed44faebaf4de23414170"}, "downloads": -1, "filename": "pybees-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a29cd9b01a33d30ac2ad2f94d36f976c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37799, "upload_time": "2020-02-26T20:24:48", "upload_time_iso_8601": "2020-02-26T20:24:48.983408Z", "url": "https://files.pythonhosted.org/packages/34/82/a6de5458cf005a2747ab366d361b74076b012f1bf1bd89f79a9812a48081/pybees-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8454fcbf1a5c9d3c41c1e1fa404e0c34", "sha256": "c7c22142f9fdcde81acb1809770e71ab2de221e235ddc54aeef501412bfe0c1e"}, "downloads": -1, "filename": "pybees-0.0.4.tar.gz", "has_sig": false, "md5_digest": "8454fcbf1a5c9d3c41c1e1fa404e0c34", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 29939, "upload_time": "2020-02-26T20:24:50", "upload_time_iso_8601": "2020-02-26T20:24:50.399686Z", "url": "https://files.pythonhosted.org/packages/e5/81/3bc5b5916a0e22c4b798236c0342535be6096c6fb150bc22a6e4ce7e910b/pybees-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:18 2020"}