{"info": {"author": "Jaime Gil de Sagredo Luna", "author_email": "jaimegildesagredo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Finch: RESTful API consumer\n===========================\n\n.. image:: https://secure.travis-ci.org/jaimegildesagredo/finch.png?branch=master\n    :target: http://travis-ci.org/jaimegildesagredo/finch\n\nFinch is an asynchronous `RESTful API` consumer for Python. Finch is focused on remove all of the boilerplate related to consuming http based APIs and provide a high level abstraction to develop API clients. Finch is released under the `Apache 2 license <http://www.apache.org/licenses/LICENSE-2.0.html>`_, so you can `fork <https://github.com/jaimegildesagredo/finch>`_, `contribute <https://github.com/jaimegildesagredo/finch/pulls>`_ and also `report errors and suggestions <https://github.com/jaimegildesagredo/finch/issues>`_ to improve it.\n\nUsage\n=====\n\nTo start consuming a REST API you first should define the resources you are going to consume. For resources modeling we use the `booby <https://github.com/jaimegildesagredo/booby>`_ data modeling library. So, for example, to get your repos from `github.com` you should define the `Repo` model and the `Repos` collection.\n\n.. code-block:: python\n\n    from booby import Model, fields\n    from finch import Collection\n\n    class Repo(Model):\n        id = fields.Integer()\n        name = fields.String()\n        owner = fields.String()\n        is_private = fields.Boolean()\n\n        def parse(self, body, headers):\n            return parse_repo(json.loads(body))\n\n        def __repr__(self):\n            return 'Repo({}/{})'.format(self.owner, self.name)\n\n    class Repos(Collection):\n        model = Repo\n\n        def __init__(self, username, *args, **kwargs):\n            self.username = username\n\n            super(Repos, self).__init__(*args, **kwargs)\n\n        @property\n        def url(self):\n            return 'https://api.github.com/users/{}/repos'.format(self.username)\n\n        def parse(self, body, headers):\n            return [parse_repo(r) for r in json.loads(body)]\n\n\n    def parse_repo(raw):\n        return {\n            'id': raw['id'],\n            'name': raw['name'],\n            'owner': raw['owner']['login'],\n            'is_private': raw['private']\n        }\n\nNow you can fetch your public repos (and also your private repos if you're authenticated).\n\n.. code-block:: python\n\n    from tornado import httpclient, ioloop\n\n    def on_repos(repos, error):\n        ioloop.IOLoop.instance().stop()\n\n        if error:\n            raise error\n\n        for repo in repos:\n            print repo\n\n    repos = Repos('jaimegildesagredo', httpclient.AsyncHTTPClient())\n    repos.all(on_repos)\n\n    ioloop.IOLoop.instance().start()\n\nInstallation\n============\n\nYou can install the last stable release of Finch from PyPI using pip or easy_install.\n\n.. code-block:: bash\n\n    $ pip install finch\n\nAlso you can install the latest sources from Github.\n\n.. code-block:: bash\n\n    $ pip install -e git+git://github.com/jaimegildesagredo/finch.git#egg=finch\n\nTests\n=====\n\nTo run the Finch tests suite you should install the development requirements and run nosetests.\n\n.. code-block:: bash\n\n    $ pip install -r requirements-devel.txt\n    $ nosetests tests/unit\n\nStatus\n======\n\nFinch is under active development and there is not a complete documentation yet. By the moment you can read the examples in this repository and read the tests, that are the most up to date documentation. Also I'm working on create a complete API client using Finch and create a good documentation.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "finch", "package_url": "https://pypi.org/project/finch/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/finch/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/finch/0.3.3/", "requires_dist": null, "requires_python": null, "summary": "Asynchronous RESTful API consumer for Python", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"finch-restful-api-consumer\">\n<h2>Finch: RESTful API consumer</h2>\n<a href=\"http://travis-ci.org/jaimegildesagredo/finch\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/jaimegildesagredo/finch.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/42875737f981fbb1d169d4651b584e7a5d8a319a/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6a61696d6567696c64657361677265646f2f66696e63682e706e673f6272616e63683d6d6173746572\"></a>\n<p>Finch is an asynchronous <cite>RESTful API</cite> consumer for Python. Finch is focused on remove all of the boilerplate related to consuming http based APIs and provide a high level abstraction to develop API clients. Finch is released under the <a href=\"http://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"nofollow\">Apache 2 license</a>, so you can <a href=\"https://github.com/jaimegildesagredo/finch\" rel=\"nofollow\">fork</a>, <a href=\"https://github.com/jaimegildesagredo/finch/pulls\" rel=\"nofollow\">contribute</a> and also <a href=\"https://github.com/jaimegildesagredo/finch/issues\" rel=\"nofollow\">report errors and suggestions</a> to improve it.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To start consuming a REST API you first should define the resources you are going to consume. For resources modeling we use the <a href=\"https://github.com/jaimegildesagredo/booby\" rel=\"nofollow\">booby</a> data modeling library. So, for example, to get your repos from <cite>github.com</cite> you should define the <cite>Repo</cite> model and the <cite>Repos</cite> collection.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">booby</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">fields</span>\n<span class=\"kn\">from</span> <span class=\"nn\">finch</span> <span class=\"kn\">import</span> <span class=\"n\">Collection</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Repo</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">()</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n    <span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n    <span class=\"n\">is_private</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">Boolean</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">parse</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">parse_repo</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'Repo(</span><span class=\"si\">{}</span><span class=\"s1\">/</span><span class=\"si\">{}</span><span class=\"s1\">)'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">owner</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Repos</span><span class=\"p\">(</span><span class=\"n\">Collection</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Repo</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">username</span>\n\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Repos</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'https://api.github.com/users/</span><span class=\"si\">{}</span><span class=\"s1\">/repos'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">parse</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">parse_repo</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">)]</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">parse_repo</span><span class=\"p\">(</span><span class=\"n\">raw</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"n\">raw</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">],</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"n\">raw</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">],</span>\n        <span class=\"s1\">'owner'</span><span class=\"p\">:</span> <span class=\"n\">raw</span><span class=\"p\">[</span><span class=\"s1\">'owner'</span><span class=\"p\">][</span><span class=\"s1\">'login'</span><span class=\"p\">],</span>\n        <span class=\"s1\">'is_private'</span><span class=\"p\">:</span> <span class=\"n\">raw</span><span class=\"p\">[</span><span class=\"s1\">'private'</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n</pre>\n<p>Now you can fetch your public repos (and also your private repos if you\u2019re authenticated).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tornado</span> <span class=\"kn\">import</span> <span class=\"n\">httpclient</span><span class=\"p\">,</span> <span class=\"n\">ioloop</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">on_repos</span><span class=\"p\">(</span><span class=\"n\">repos</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">):</span>\n    <span class=\"n\">ioloop</span><span class=\"o\">.</span><span class=\"n\">IOLoop</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">error</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">error</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">repo</span> <span class=\"ow\">in</span> <span class=\"n\">repos</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span> <span class=\"n\">repo</span>\n\n<span class=\"n\">repos</span> <span class=\"o\">=</span> <span class=\"n\">Repos</span><span class=\"p\">(</span><span class=\"s1\">'jaimegildesagredo'</span><span class=\"p\">,</span> <span class=\"n\">httpclient</span><span class=\"o\">.</span><span class=\"n\">AsyncHTTPClient</span><span class=\"p\">())</span>\n<span class=\"n\">repos</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">on_repos</span><span class=\"p\">)</span>\n\n<span class=\"n\">ioloop</span><span class=\"o\">.</span><span class=\"n\">IOLoop</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install the last stable release of Finch from PyPI using pip or easy_install.</p>\n<pre>$ pip install finch\n</pre>\n<p>Also you can install the latest sources from Github.</p>\n<pre>$ pip install -e git+git://github.com/jaimegildesagredo/finch.git#egg<span class=\"o\">=</span>finch\n</pre>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>To run the Finch tests suite you should install the development requirements and run nosetests.</p>\n<pre>$ pip install -r requirements-devel.txt\n$ nosetests tests/unit\n</pre>\n</div>\n<div id=\"status\">\n<h2>Status</h2>\n<p>Finch is under active development and there is not a complete documentation yet. By the moment you can read the examples in this repository and read the tests, that are the most up to date documentation. Also I\u2019m working on create a complete API client using Finch and create a good documentation.</p>\n</div>\n\n          </div>"}, "last_serial": 875437, "releases": {"0.3.1": [], "0.3.2": [{"comment_text": "", "digests": {"md5": "63cb19a1ab8a96bf991dfa349261cc66", "sha256": "3423aa55eee515c1a985e552ac9c2dee11f9b5f36066b428d51102526130e819"}, "downloads": -1, "filename": "finch-0.3.2.tar.gz", "has_sig": false, "md5_digest": "63cb19a1ab8a96bf991dfa349261cc66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3511, "upload_time": "2013-03-01T18:16:44", "upload_time_iso_8601": "2013-03-01T18:16:44.064778Z", "url": "https://files.pythonhosted.org/packages/8a/b1/e5ad44e30ced5c35cb9a686440425e5f3243fc70ba16ed935723e5d86a71/finch-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "fdf6f1bbb97316481a04707476ccc414", "sha256": "97515a2302ba7c307297ac33a45f6a4a9a341ef7f3ed82db0fa5af53a2caee58"}, "downloads": -1, "filename": "finch-0.3.3.tar.gz", "has_sig": false, "md5_digest": "fdf6f1bbb97316481a04707476ccc414", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4983, "upload_time": "2013-09-27T16:00:57", "upload_time_iso_8601": "2013-09-27T16:00:57.151943Z", "url": "https://files.pythonhosted.org/packages/c0/e9/eb127214211f48aafc7945c7655c79a20c8bd7c986353b33e51821113bc4/finch-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fdf6f1bbb97316481a04707476ccc414", "sha256": "97515a2302ba7c307297ac33a45f6a4a9a341ef7f3ed82db0fa5af53a2caee58"}, "downloads": -1, "filename": "finch-0.3.3.tar.gz", "has_sig": false, "md5_digest": "fdf6f1bbb97316481a04707476ccc414", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4983, "upload_time": "2013-09-27T16:00:57", "upload_time_iso_8601": "2013-09-27T16:00:57.151943Z", "url": "https://files.pythonhosted.org/packages/c0/e9/eb127214211f48aafc7945c7655c79a20c8bd7c986353b33e51821113bc4/finch-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:25 2020"}