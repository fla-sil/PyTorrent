{"info": {"author": "Renato Fabbri", "author_email": "listamacambira@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Information Technology", "Intended Audience :: Other Audience", "Intended Audience :: Religion", "Intended Audience :: Science/Research", "License :: Public Domain", "Programming Language :: Python :: 3", "Topic :: Artistic Software", "Topic :: Communications :: Email", "Topic :: Multimedia :: Graphics :: Presentation", "Topic :: Multimedia :: Sound/Audio :: Sound Synthesis", "Topic :: Multimedia :: Video :: Display", "Topic :: Other/Nonlisted Topic", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Physics", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Text Processing", "Topic :: Text Processing :: Linguistic"], "description": "==================================================================\nPython utilities for the analysis of the GMANE email list database\n==================================================================\n\nThis project delivers helper classes for the analysis of the GMANE\nemail database. Install with:\n\n    $ pip install gmane\n\nor\n\n    $ python setup.py install\n\nFor greater control of customization (and debugging), clone the repo and install with pip with -e:\n\n    $ git clone https://github.com/ttm/gmane.git\n\n    $ pip install -e <path_to_repo>\n\nThis install method is especially useful with\nreload function from IPython.lib.deepreload and the standard importlib.\n\nFunctionalities are based on physics articles on interaction networks:\n[1] Stability in human interaction networks: primitive typology of vertex, prominence of measures and activity statistics: http://arxiv.org/abs/1310.7769\n[2] A connective differentiation of textual production in interaction networks: http://arxiv.org/abs/1412.7309\n[3] Versinus: a visualization method for graphs in evolution: http://arxiv.org/abs/1412.7311\n\nWith core concepts of 1) analysis of topological structure; 2) analysis of textual production; 3) visualization of evolving structures. Activity distribution along time and among participants are also approached through specific routines and indirectly through 1), 2) and 3).\n\nIdeally, this package should ease:\n- Downloading GMANE email list data.\n- Building elementary data structures with downloaded data.\n- Analysis of data through complex networks and NLP criteria.\n- Visualization through diverse layout methods.\n\nPS.\nImplemented measures of symmetry in network agents activity by hand (not found in network and numeric packages) according to [1].\n\nUsage example\n=================\nDownload messages from one GMANE list:\n\n.. code:: python\n\n    import gmane as g\n    dl=g.DownloadGmaneData() # saves into ~/.gmane/\n    dl.downloadListsIDS() # acquires all GMANE list_ids\n    dl.downloadListMessages(dl.list_ids[100])\n    dl.cleanDownloadedLists() # remove empty messages for coherence\n    dl.downloadedStats() # creates ~/.gmane/stats.txt\n\n    # to load message contents to Python objects:\n    # load 10 messages from list with list_id gmane.ietf.rfc822\n    lm=g.LoadMessages(\"gmane.ietf.rfc822\",10)\n\n    # or access the structures downloaded to your filesystem\n    dl=g.DownloadGmaneData()\n    dl.getDownloadedLists()\n    lms=[]\n    # and download all messages from 5 lists\n    for list_id in dl.downloaded_lists[:5]:\n        lms.append(g.LoadMessages(list_id))\n\n    # to load first three lists with the greated number\n    # of downloaded messages:\n    dl.downloadedStats() # might take a while\n    load_msgs=[]\n    for list_stat in dl.lists[:3]:\n        list_id=list_stat[0]\n        load_msgs.append(g.LoadMessages(list_id))\n\n    # to make basic datastructures of a list with\n    # greatest number of messages:\n    ds=g.MessageDataStructures(load_msgs[0])\n    mm=ds.messages\n    ids=ds.message_ids\n    print(\"first: \", mm[ids[0]][2], \"last:\", mm[ids[-1]][2])\n\n    # circular (directional) statistics for activity along time\n    # (hours of the day, days of the week, days of the month, etc):\n    # mean_vec, mean_angle, size_mean_vec, circular_mean,\n    # circular_variance, circular dispersion\n    # and histograms\n    ts=g.TimeStatistics(ds)\n    print(\"made overall circular activity statistics along time\")\n\n    # make latex tables to observe distributions within bins of interest\n    hi=100*ts.hours[\"histogram\"]/ts.hours[\"histogram\"].sum()\n    row_labels=list(range(24))\n    tstring=g.parcialSums(row_labels,data=[hi],partials=[1,2,3,4,6,12],\n                partial_labels=[\"h\",\"2h\",\"3h\",\"4h\",\"6h\",\"12h\"],datarow_labels=[\"APACHE\"])\n    g.writeTex(tstring,\"here.tex\")\n\n    ps=g.AgentStatistics(ds)\n    print(\"made overall activity statistics among participants\")\n    \n    # build the interaction network of the messages:\n    nw=g.InteractionNetwok(ds)\n\n    print(\"number of nodes: {}, number of edges: {}\".format(\n    nw.g.number_of_nodes(), nw.g.number_of_edges()))\n\n    nm=g.NetworkMeasures(nw) # take measures, including symmetry related measures\n    np=g.NetworkPartitioning(nm) # partition in primitive typology\n    sa=np.sectorialized_agents # get members of each sector\n    print(\"{} agents in periphery, {} are intermediary and {} hubs\".format(sa[0],sa[1],sa[2]))\n    sa=np.sectorialized_agents__ # smoothed histogram for classification\n    print(\"{} agents in periphery, {} are intermediary and {} hubs\".format(sa[0],sa[1],sa[2]))\n\n    # draw\n    nd=g.NetworkDrawer()\n    print(\"drawer started\")\n    nd.makeLayout(nm)\n    print(\"gave (x,y) for each author with 5-15-80\")\n    nd2=g.NetworkDrawer()\n    print(\"drawer two started\")\n    nd2.makeLayout(nm,np)\n    print(\"gave (x,y) for each author with \\\n    sectors by comparison with Erdos-Renyi\")\n    nd.drawNetwork( iN,nm ,\"test.png\")\n    nd2.drawNetwork( iN,nm,\"test2.png\")\n\n    # make basic PCA plots of network measures:\n    npca=g.NetworkPCA(nm)\n    # Plot PCA with a colored primitive sectors \n    npca=g.NetworkPCA(nm,np)\n\n    # Evolves network with measures, partitions,\n    # PCA, principal components and Versinus plots saved to disk\n    lm=lms[0] # loaded messages from list with most messages\n    ne=g.NetworkEvolution(step_size=10)\n    ne.evolveRaw(lm.messages,imagerate=4,erdos_sectors=True)\n    # ne.makeVideo() use this to avoid evolving again just to make video\n    # see testDrawer.py or g.NetworkEvolution to make movies:\n    # https://www.youtube.com/watch?v=iS8NwEy291g\n\n    # after making network evolution measurements and video,\n    # you can both make music:\n    em=g.EvolutionMusic()\n    print(\"music is done\")\n    # avconv -i mixY.wav -i evo[..<depends on the evolution done>..].avi final.avi\n    # delivers you the final.avi animation with a soundtrack relative to network measures\n    # currently it is the 'four hubs dance' by default:\n    # https://www.youtube.com/watch?v=YxDiwzAUPeU\n\n    # and further analysis of measures and Erdos sectors:\n    et=g.EvolutionTimelines()\n    print(\"Written png files with network measures along evolution timeline\")\n\n    # Enjoy!\n\nFurther documentation is in tests/ folder and object docstrings.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ttm/gmane", "keywords": "complexity networks human interaction physics data mining analysis visualization", "license": "Public Domain", "maintainer": null, "maintainer_email": null, "name": "gmane", "package_url": "https://pypi.org/project/gmane/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gmane/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ttm/gmane"}, "release_url": "https://pypi.org/project/gmane/0.1.dev25/", "requires_dist": null, "requires_python": null, "summary": "Utilities for the analysis of the GMANE email list database", "version": "0.1.dev25", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This project delivers helper classes for the analysis of the GMANE\nemail database. Install with:</p>\n<blockquote>\n$ pip install gmane</blockquote>\n<p>or</p>\n<blockquote>\n$ python setup.py install</blockquote>\n<p>For greater control of customization (and debugging), clone the repo and install with pip with -e:</p>\n<blockquote>\n<p>$ git clone <a href=\"https://github.com/ttm/gmane.git\" rel=\"nofollow\">https://github.com/ttm/gmane.git</a></p>\n<p>$ pip install -e &lt;path_to_repo&gt;</p>\n</blockquote>\n<p>This install method is especially useful with\nreload function from IPython.lib.deepreload and the standard importlib.</p>\n<p>Functionalities are based on physics articles on interaction networks:\n[1] Stability in human interaction networks: primitive typology of vertex, prominence of measures and activity statistics: <a href=\"http://arxiv.org/abs/1310.7769\" rel=\"nofollow\">http://arxiv.org/abs/1310.7769</a>\n[2] A connective differentiation of textual production in interaction networks: <a href=\"http://arxiv.org/abs/1412.7309\" rel=\"nofollow\">http://arxiv.org/abs/1412.7309</a>\n[3] Versinus: a visualization method for graphs in evolution: <a href=\"http://arxiv.org/abs/1412.7311\" rel=\"nofollow\">http://arxiv.org/abs/1412.7311</a></p>\n<p>With core concepts of 1) analysis of topological structure; 2) analysis of textual production; 3) visualization of evolving structures. Activity distribution along time and among participants are also approached through specific routines and indirectly through 1), 2) and 3).</p>\n<p>Ideally, this package should ease:\n- Downloading GMANE email list data.\n- Building elementary data structures with downloaded data.\n- Analysis of data through complex networks and NLP criteria.\n- Visualization through diverse layout methods.</p>\n<p>PS.\nImplemented measures of symmetry in network agents activity by hand (not found in network and numeric packages) according to [1].</p>\n<div id=\"usage-example\">\n<h2>Usage example</h2>\n<p>Download messages from one GMANE list:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">gmane</span> <span class=\"k\">as</span> <span class=\"nn\">g</span>\n<span class=\"n\">dl</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">DownloadGmaneData</span><span class=\"p\">()</span> <span class=\"c1\"># saves into ~/.gmane/</span>\n<span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">downloadListsIDS</span><span class=\"p\">()</span> <span class=\"c1\"># acquires all GMANE list_ids</span>\n<span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">downloadListMessages</span><span class=\"p\">(</span><span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">list_ids</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">])</span>\n<span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">cleanDownloadedLists</span><span class=\"p\">()</span> <span class=\"c1\"># remove empty messages for coherence</span>\n<span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">downloadedStats</span><span class=\"p\">()</span> <span class=\"c1\"># creates ~/.gmane/stats.txt</span>\n\n<span class=\"c1\"># to load message contents to Python objects:</span>\n<span class=\"c1\"># load 10 messages from list with list_id gmane.ietf.rfc822</span>\n<span class=\"n\">lm</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">LoadMessages</span><span class=\"p\">(</span><span class=\"s2\">\"gmane.ietf.rfc822\"</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or access the structures downloaded to your filesystem</span>\n<span class=\"n\">dl</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">DownloadGmaneData</span><span class=\"p\">()</span>\n<span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">getDownloadedLists</span><span class=\"p\">()</span>\n<span class=\"n\">lms</span><span class=\"o\">=</span><span class=\"p\">[]</span>\n<span class=\"c1\"># and download all messages from 5 lists</span>\n<span class=\"k\">for</span> <span class=\"n\">list_id</span> <span class=\"ow\">in</span> <span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">downloaded_lists</span><span class=\"p\">[:</span><span class=\"mi\">5</span><span class=\"p\">]:</span>\n    <span class=\"n\">lms</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">LoadMessages</span><span class=\"p\">(</span><span class=\"n\">list_id</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># to load first three lists with the greated number</span>\n<span class=\"c1\"># of downloaded messages:</span>\n<span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">downloadedStats</span><span class=\"p\">()</span> <span class=\"c1\"># might take a while</span>\n<span class=\"n\">load_msgs</span><span class=\"o\">=</span><span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">list_stat</span> <span class=\"ow\">in</span> <span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">lists</span><span class=\"p\">[:</span><span class=\"mi\">3</span><span class=\"p\">]:</span>\n    <span class=\"n\">list_id</span><span class=\"o\">=</span><span class=\"n\">list_stat</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">load_msgs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">LoadMessages</span><span class=\"p\">(</span><span class=\"n\">list_id</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># to make basic datastructures of a list with</span>\n<span class=\"c1\"># greatest number of messages:</span>\n<span class=\"n\">ds</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">MessageDataStructures</span><span class=\"p\">(</span><span class=\"n\">load_msgs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">mm</span><span class=\"o\">=</span><span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">messages</span>\n<span class=\"n\">ids</span><span class=\"o\">=</span><span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">message_ids</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"first: \"</span><span class=\"p\">,</span> <span class=\"n\">mm</span><span class=\"p\">[</span><span class=\"n\">ids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]][</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"s2\">\"last:\"</span><span class=\"p\">,</span> <span class=\"n\">mm</span><span class=\"p\">[</span><span class=\"n\">ids</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]][</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># circular (directional) statistics for activity along time</span>\n<span class=\"c1\"># (hours of the day, days of the week, days of the month, etc):</span>\n<span class=\"c1\"># mean_vec, mean_angle, size_mean_vec, circular_mean,</span>\n<span class=\"c1\"># circular_variance, circular dispersion</span>\n<span class=\"c1\"># and histograms</span>\n<span class=\"n\">ts</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">TimeStatistics</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"made overall circular activity statistics along time\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># make latex tables to observe distributions within bins of interest</span>\n<span class=\"n\">hi</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"o\">*</span><span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">hours</span><span class=\"p\">[</span><span class=\"s2\">\"histogram\"</span><span class=\"p\">]</span><span class=\"o\">/</span><span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">hours</span><span class=\"p\">[</span><span class=\"s2\">\"histogram\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n<span class=\"n\">row_labels</span><span class=\"o\">=</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">24</span><span class=\"p\">))</span>\n<span class=\"n\">tstring</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">parcialSums</span><span class=\"p\">(</span><span class=\"n\">row_labels</span><span class=\"p\">,</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">hi</span><span class=\"p\">],</span><span class=\"n\">partials</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">],</span>\n            <span class=\"n\">partial_labels</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"h\"</span><span class=\"p\">,</span><span class=\"s2\">\"2h\"</span><span class=\"p\">,</span><span class=\"s2\">\"3h\"</span><span class=\"p\">,</span><span class=\"s2\">\"4h\"</span><span class=\"p\">,</span><span class=\"s2\">\"6h\"</span><span class=\"p\">,</span><span class=\"s2\">\"12h\"</span><span class=\"p\">],</span><span class=\"n\">datarow_labels</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"APACHE\"</span><span class=\"p\">])</span>\n<span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">writeTex</span><span class=\"p\">(</span><span class=\"n\">tstring</span><span class=\"p\">,</span><span class=\"s2\">\"here.tex\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">ps</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">AgentStatistics</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"made overall activity statistics among participants\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># build the interaction network of the messages:</span>\n<span class=\"n\">nw</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">InteractionNetwok</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"number of nodes: </span><span class=\"si\">{}</span><span class=\"s2\">, number of edges: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n<span class=\"n\">nw</span><span class=\"o\">.</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">number_of_nodes</span><span class=\"p\">(),</span> <span class=\"n\">nw</span><span class=\"o\">.</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">number_of_edges</span><span class=\"p\">()))</span>\n\n<span class=\"n\">nm</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">NetworkMeasures</span><span class=\"p\">(</span><span class=\"n\">nw</span><span class=\"p\">)</span> <span class=\"c1\"># take measures, including symmetry related measures</span>\n<span class=\"n\">np</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">NetworkPartitioning</span><span class=\"p\">(</span><span class=\"n\">nm</span><span class=\"p\">)</span> <span class=\"c1\"># partition in primitive typology</span>\n<span class=\"n\">sa</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sectorialized_agents</span> <span class=\"c1\"># get members of each sector</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> agents in periphery, </span><span class=\"si\">{}</span><span class=\"s2\"> are intermediary and </span><span class=\"si\">{}</span><span class=\"s2\"> hubs\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">sa</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">sa</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"n\">sa</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]))</span>\n<span class=\"n\">sa</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sectorialized_agents__</span> <span class=\"c1\"># smoothed histogram for classification</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> agents in periphery, </span><span class=\"si\">{}</span><span class=\"s2\"> are intermediary and </span><span class=\"si\">{}</span><span class=\"s2\"> hubs\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">sa</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">sa</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"n\">sa</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># draw</span>\n<span class=\"n\">nd</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">NetworkDrawer</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"drawer started\"</span><span class=\"p\">)</span>\n<span class=\"n\">nd</span><span class=\"o\">.</span><span class=\"n\">makeLayout</span><span class=\"p\">(</span><span class=\"n\">nm</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"gave (x,y) for each author with 5-15-80\"</span><span class=\"p\">)</span>\n<span class=\"n\">nd2</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">NetworkDrawer</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"drawer two started\"</span><span class=\"p\">)</span>\n<span class=\"n\">nd2</span><span class=\"o\">.</span><span class=\"n\">makeLayout</span><span class=\"p\">(</span><span class=\"n\">nm</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"gave (x,y) for each author with </span><span class=\"se\">\\\n</span><span class=\"s2\">sectors by comparison with Erdos-Renyi\"</span><span class=\"p\">)</span>\n<span class=\"n\">nd</span><span class=\"o\">.</span><span class=\"n\">drawNetwork</span><span class=\"p\">(</span> <span class=\"n\">iN</span><span class=\"p\">,</span><span class=\"n\">nm</span> <span class=\"p\">,</span><span class=\"s2\">\"test.png\"</span><span class=\"p\">)</span>\n<span class=\"n\">nd2</span><span class=\"o\">.</span><span class=\"n\">drawNetwork</span><span class=\"p\">(</span> <span class=\"n\">iN</span><span class=\"p\">,</span><span class=\"n\">nm</span><span class=\"p\">,</span><span class=\"s2\">\"test2.png\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># make basic PCA plots of network measures:</span>\n<span class=\"n\">npca</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">NetworkPCA</span><span class=\"p\">(</span><span class=\"n\">nm</span><span class=\"p\">)</span>\n<span class=\"c1\"># Plot PCA with a colored primitive sectors</span>\n<span class=\"n\">npca</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">NetworkPCA</span><span class=\"p\">(</span><span class=\"n\">nm</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Evolves network with measures, partitions,</span>\n<span class=\"c1\"># PCA, principal components and Versinus plots saved to disk</span>\n<span class=\"n\">lm</span><span class=\"o\">=</span><span class=\"n\">lms</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"c1\"># loaded messages from list with most messages</span>\n<span class=\"n\">ne</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">NetworkEvolution</span><span class=\"p\">(</span><span class=\"n\">step_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">ne</span><span class=\"o\">.</span><span class=\"n\">evolveRaw</span><span class=\"p\">(</span><span class=\"n\">lm</span><span class=\"o\">.</span><span class=\"n\">messages</span><span class=\"p\">,</span><span class=\"n\">imagerate</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"n\">erdos_sectors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># ne.makeVideo() use this to avoid evolving again just to make video</span>\n<span class=\"c1\"># see testDrawer.py or g.NetworkEvolution to make movies:</span>\n<span class=\"c1\"># https://www.youtube.com/watch?v=iS8NwEy291g</span>\n\n<span class=\"c1\"># after making network evolution measurements and video,</span>\n<span class=\"c1\"># you can both make music:</span>\n<span class=\"n\">em</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">EvolutionMusic</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"music is done\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># avconv -i mixY.wav -i evo[..&lt;depends on the evolution done&gt;..].avi final.avi</span>\n<span class=\"c1\"># delivers you the final.avi animation with a soundtrack relative to network measures</span>\n<span class=\"c1\"># currently it is the 'four hubs dance' by default:</span>\n<span class=\"c1\"># https://www.youtube.com/watch?v=YxDiwzAUPeU</span>\n\n<span class=\"c1\"># and further analysis of measures and Erdos sectors:</span>\n<span class=\"n\">et</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">EvolutionTimelines</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Written png files with network measures along evolution timeline\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Enjoy!</span>\n</pre>\n<p>Further documentation is in tests/ folder and object docstrings.</p>\n</div>\n\n          </div>"}, "last_serial": 1474818, "releases": {"0.1.dev0": [], "0.1.dev1": [{"comment_text": "", "digests": {"md5": "d715c964ba66d08752eb8edf2ac9b934", "sha256": "e8d9388b9846fa1721c24a5f3db00a4f23eded692c974293a76bd02bef55b392"}, "downloads": -1, "filename": "gmane-0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "d715c964ba66d08752eb8edf2ac9b934", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3248, "upload_time": "2015-02-25T00:05:42", "upload_time_iso_8601": "2015-02-25T00:05:42.016587Z", "url": "https://files.pythonhosted.org/packages/af/da/64a01453a23a7ce60833e601321904e05917f62e5f7d9ab299ba72bbee7b/gmane-0.1.dev1.tar.gz", "yanked": false}], "0.1.dev10": [{"comment_text": "", "digests": {"md5": "5f0d075a6557a475a15fc29c4d9fc57d", "sha256": "e0a03ad5a9a35b75c0acbb3a81cec5cef15b189007834e23bab4b4ff00b5bf14"}, "downloads": -1, "filename": "gmane-0.1.dev10.tar.gz", "has_sig": false, "md5_digest": "5f0d075a6557a475a15fc29c4d9fc57d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12212, "upload_time": "2015-03-10T05:09:40", "upload_time_iso_8601": "2015-03-10T05:09:40.742679Z", "url": "https://files.pythonhosted.org/packages/80/93/ee03ce56b317dd9d9fae02ccd84feeefe2f770b8459c58ec5033fb1e8fe6/gmane-0.1.dev10.tar.gz", "yanked": false}], "0.1.dev11": [{"comment_text": "", "digests": {"md5": "6ce6831f5c454e17407e9a3e220534cd", "sha256": "8d58f6817994124c8466e6a77ee1da1af6b254ddf49ad55cc955a6b2cfe43d0d"}, "downloads": -1, "filename": "gmane-0.1.dev11.tar.gz", "has_sig": false, "md5_digest": "6ce6831f5c454e17407e9a3e220534cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13425, "upload_time": "2015-03-11T04:07:17", "upload_time_iso_8601": "2015-03-11T04:07:17.690454Z", "url": "https://files.pythonhosted.org/packages/b9/d8/bf916dc889d1e7dcf2ae1f62d6a2c0a31ccbda7fe5ed3c2172d47a9e0a2e/gmane-0.1.dev11.tar.gz", "yanked": false}], "0.1.dev12": [{"comment_text": "", "digests": {"md5": "d261deaf8525ae2048c2a5eafb6a6b2b", "sha256": "61ac35a7e4e68ebbc444f440cbfed7a437e3437abe030f118dc4274aab7676d5"}, "downloads": -1, "filename": "gmane-0.1.dev12.tar.gz", "has_sig": false, "md5_digest": "d261deaf8525ae2048c2a5eafb6a6b2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15733, "upload_time": "2015-03-12T19:40:17", "upload_time_iso_8601": "2015-03-12T19:40:17.057009Z", "url": "https://files.pythonhosted.org/packages/4b/a3/4d567fcda94a7d8ddcaae03c8e29efc963a6179a9223d19633f2423a4495/gmane-0.1.dev12.tar.gz", "yanked": false}], "0.1.dev13": [{"comment_text": "", "digests": {"md5": "49e12cdcfd7792d329faccd998f595cf", "sha256": "fae2a44460c7bcfa0005946d8c5f95d782741de23201cf241ffce85755b5db96"}, "downloads": -1, "filename": "gmane-0.1.dev13.tar.gz", "has_sig": false, "md5_digest": "49e12cdcfd7792d329faccd998f595cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15778, "upload_time": "2015-03-12T19:57:54", "upload_time_iso_8601": "2015-03-12T19:57:54.512740Z", "url": "https://files.pythonhosted.org/packages/e0/c7/254e6b1c8fb5d7ce8dfaee5a84092b8a173785c37102246fe850b1f849a1/gmane-0.1.dev13.tar.gz", "yanked": false}], "0.1.dev14": [{"comment_text": "", "digests": {"md5": "33cd2d84d24a0eded5877d665f971b12", "sha256": "351dc401a25b355e5b1b7087c91e25817f52bc6b709426950ae9721dcca84e53"}, "downloads": -1, "filename": "gmane-0.1.dev14.tar.gz", "has_sig": false, "md5_digest": "33cd2d84d24a0eded5877d665f971b12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16796, "upload_time": "2015-03-13T08:45:48", "upload_time_iso_8601": "2015-03-13T08:45:48.114190Z", "url": "https://files.pythonhosted.org/packages/c8/e1/46f0ac9e38611c4b72a4793df0666e8c464b4db0e673899fcd5b7ea5b9da/gmane-0.1.dev14.tar.gz", "yanked": false}], "0.1.dev15": [{"comment_text": "", "digests": {"md5": "49f427b64e5831ce104b37dc5e27e4ef", "sha256": "0985958a65dd1350df959c97f83dfd13c2e7dc3f1cdaa5a9844e0648a4ad6c8a"}, "downloads": -1, "filename": "gmane-0.1.dev15.tar.gz", "has_sig": false, "md5_digest": "49f427b64e5831ce104b37dc5e27e4ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17431, "upload_time": "2015-03-15T20:06:26", "upload_time_iso_8601": "2015-03-15T20:06:26.355641Z", "url": "https://files.pythonhosted.org/packages/18/7b/6be5712bccef801c9b341e1039b07c994cfe00a9788fb40bfef8d8b680a5/gmane-0.1.dev15.tar.gz", "yanked": false}], "0.1.dev16": [{"comment_text": "", "digests": {"md5": "9fb77e7497d191e7ec0d2d8abafd6d36", "sha256": "5645625bbe3a300a6225fa468d9bffc619f9dfa3adc4f4183a5c1bc7cd78f186"}, "downloads": -1, "filename": "gmane-0.1.dev16.tar.gz", "has_sig": false, "md5_digest": "9fb77e7497d191e7ec0d2d8abafd6d36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19266, "upload_time": "2015-03-16T03:58:47", "upload_time_iso_8601": "2015-03-16T03:58:47.918617Z", "url": "https://files.pythonhosted.org/packages/62/25/4c10765d82c8a3fe2fd840f754642e2df0e274d4bf234cbaac54faa87269/gmane-0.1.dev16.tar.gz", "yanked": false}], "0.1.dev17": [{"comment_text": "", "digests": {"md5": "e37a27ed0d28bbf8ffc71dfbf37b787d", "sha256": "3016d6e9efcb9615c024be7bba9c71da0e59b7621a4a5f804ba3382f90e92ed8"}, "downloads": -1, "filename": "gmane-0.1.dev17.tar.gz", "has_sig": false, "md5_digest": "e37a27ed0d28bbf8ffc71dfbf37b787d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19386, "upload_time": "2015-03-16T05:33:41", "upload_time_iso_8601": "2015-03-16T05:33:41.563878Z", "url": "https://files.pythonhosted.org/packages/d8/00/ad087c979d303eebb2249f62c314266afba7c268de0d43530cbdc01ea2e3/gmane-0.1.dev17.tar.gz", "yanked": false}], "0.1.dev18": [{"comment_text": "", "digests": {"md5": "b2db407a0ac19fc52d58da697a0b0bfe", "sha256": "fe79651c04940e3203cab4c1215e5568b7074c54f4dd38fe23cbd485624a2f12"}, "downloads": -1, "filename": "gmane-0.1.dev18.tar.gz", "has_sig": false, "md5_digest": "b2db407a0ac19fc52d58da697a0b0bfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20530, "upload_time": "2015-03-17T05:27:21", "upload_time_iso_8601": "2015-03-17T05:27:21.359436Z", "url": "https://files.pythonhosted.org/packages/1b/f4/2d88e9eac8310d23653acda904820c9f01803f7dad9bdabf6f0ec7ce944f/gmane-0.1.dev18.tar.gz", "yanked": false}], "0.1.dev19": [{"comment_text": "", "digests": {"md5": "f7acfb2d5e55ae1af40874e9ea63451f", "sha256": "effb912168dbde9bedbec070dccf88f99ea5f7965b0e896d067357d729669fe2"}, "downloads": -1, "filename": "gmane-0.1.dev19.tar.gz", "has_sig": false, "md5_digest": "f7acfb2d5e55ae1af40874e9ea63451f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20645, "upload_time": "2015-03-17T16:43:15", "upload_time_iso_8601": "2015-03-17T16:43:15.768162Z", "url": "https://files.pythonhosted.org/packages/7c/f9/6e218755086664b9dbb3b0bbbbca5eea6590207c86802c9c4f9220dffa9d/gmane-0.1.dev19.tar.gz", "yanked": false}], "0.1.dev2": [{"comment_text": "", "digests": {"md5": "94248723675a617589cd137912ff6afc", "sha256": "962a251a8847bf2ffe0400f085699080cbf4f5b60efe679080a7625313f4fbf9"}, "downloads": -1, "filename": "gmane-0.1.dev2.tar.gz", "has_sig": false, "md5_digest": "94248723675a617589cd137912ff6afc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3242, "upload_time": "2015-02-25T00:07:07", "upload_time_iso_8601": "2015-02-25T00:07:07.748287Z", "url": "https://files.pythonhosted.org/packages/b9/d5/6c62d073db8040a6baf2c9503fa98a9b71cfbe7a74c842385c2408b03d53/gmane-0.1.dev2.tar.gz", "yanked": false}], "0.1.dev20": [{"comment_text": "", "digests": {"md5": "67c8b180b1229c268ef701584ddd941a", "sha256": "462dd133746c6d3e6505eaefd65c68530ec1fed47c911d6d9cf0952b2534f3fa"}, "downloads": -1, "filename": "gmane-0.1.dev20.tar.gz", "has_sig": false, "md5_digest": "67c8b180b1229c268ef701584ddd941a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21259, "upload_time": "2015-03-17T17:23:25", "upload_time_iso_8601": "2015-03-17T17:23:25.523454Z", "url": "https://files.pythonhosted.org/packages/15/d2/f7d57e24e41a2ec4b5e8ae2bd083dbd17374986c97895a94bb1c356e9541/gmane-0.1.dev20.tar.gz", "yanked": false}], "0.1.dev21": [{"comment_text": "", "digests": {"md5": "6bec9db5a8ded8ea306fc0225cee7ee5", "sha256": "6d6a39ec13d36b5843e9eb7f3015a37d64deabc6811702cdc92c8113401588af"}, "downloads": -1, "filename": "gmane-0.1.dev21.tar.gz", "has_sig": false, "md5_digest": "6bec9db5a8ded8ea306fc0225cee7ee5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21718, "upload_time": "2015-03-17T22:35:15", "upload_time_iso_8601": "2015-03-17T22:35:15.837767Z", "url": "https://files.pythonhosted.org/packages/26/dc/324c4fc02e48788b65fa7454f79c58945a993f09a34b7b77fa5f11757d31/gmane-0.1.dev21.tar.gz", "yanked": false}], "0.1.dev22": [{"comment_text": "", "digests": {"md5": "57255c3b448796ece3dfd5dff3a7d3dd", "sha256": "94b77f9bda2d2ad087e31c30ca60a9a05b114b25b99b280889b20eb48a37664e"}, "downloads": -1, "filename": "gmane-0.1.dev22.tar.gz", "has_sig": false, "md5_digest": "57255c3b448796ece3dfd5dff3a7d3dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21771, "upload_time": "2015-03-17T23:11:58", "upload_time_iso_8601": "2015-03-17T23:11:58.235284Z", "url": "https://files.pythonhosted.org/packages/47/28/290f4e08a5e15941cb71a6a4321a0b2eaf61ee385215c6576aa5e933dbda/gmane-0.1.dev22.tar.gz", "yanked": false}], "0.1.dev23": [{"comment_text": "", "digests": {"md5": "9fe151d4f92a8d830a3c7a2397555eef", "sha256": "da58bb06ce331c0f4f1e86905a092ad2b83e60da1f02e55356c1672c693aa860"}, "downloads": -1, "filename": "gmane-0.1.dev23.tar.gz", "has_sig": false, "md5_digest": "9fe151d4f92a8d830a3c7a2397555eef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23827, "upload_time": "2015-03-19T02:24:31", "upload_time_iso_8601": "2015-03-19T02:24:31.394136Z", "url": "https://files.pythonhosted.org/packages/05/fd/c47309080b568f80b6721bea3c2dc338a53892dd13fcdff9fd7446987d16/gmane-0.1.dev23.tar.gz", "yanked": false}], "0.1.dev24": [{"comment_text": "", "digests": {"md5": "5b5d25970f79e4b1c0f7135e0d52bf1d", "sha256": "1fef1e2a48ecbc6afc5434c8875fa5676b03975a076a94997e30a62828333013"}, "downloads": -1, "filename": "gmane-0.1.dev24.tar.gz", "has_sig": false, "md5_digest": "5b5d25970f79e4b1c0f7135e0d52bf1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24942, "upload_time": "2015-03-19T09:41:17", "upload_time_iso_8601": "2015-03-19T09:41:17.532090Z", "url": "https://files.pythonhosted.org/packages/10/e5/7176466bbe1c53620fdf44a38834e53fe25c48b4cbf10b006ea1f836231e/gmane-0.1.dev24.tar.gz", "yanked": false}], "0.1.dev25": [{"comment_text": "", "digests": {"md5": "61b9e7e8d804b6808e96721bd0fec322", "sha256": "11dbfb8c02ca28349cb1843f905afaa0be7093070e1bc2bc2372a97488331be4"}, "downloads": -1, "filename": "gmane-0.1.dev25.tar.gz", "has_sig": false, "md5_digest": "61b9e7e8d804b6808e96721bd0fec322", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26727, "upload_time": "2015-03-24T08:02:29", "upload_time_iso_8601": "2015-03-24T08:02:29.373939Z", "url": "https://files.pythonhosted.org/packages/ac/4f/134d5c1525fad89c98e61104ae80708ceb625b0d8cde0ac8a3e7ccff3a34/gmane-0.1.dev25.tar.gz", "yanked": false}], "0.1.dev4": [{"comment_text": "", "digests": {"md5": "62108e9cfbc9302f07f3180b300514e8", "sha256": "a48505ec1c2c30b3d95a44a6031b39b342658d3e065241c46b519ae30c519ffa"}, "downloads": -1, "filename": "gmane-0.1.dev4.tar.gz", "has_sig": false, "md5_digest": "62108e9cfbc9302f07f3180b300514e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6202, "upload_time": "2015-03-05T14:10:45", "upload_time_iso_8601": "2015-03-05T14:10:45.655004Z", "url": "https://files.pythonhosted.org/packages/13/c0/3bade9afd995e531b59e43d19b25d97dcdb8554f62d65697442a1e5a7a1b/gmane-0.1.dev4.tar.gz", "yanked": false}], "0.1.dev5": [{"comment_text": "", "digests": {"md5": "00adde5fe32b359d1d19919bca8eab39", "sha256": "0a68d34547c01efacc45125f7154092afcae243189ca3e4c2f03f5905c4e37cd"}, "downloads": -1, "filename": "gmane-0.1.dev5.tar.gz", "has_sig": false, "md5_digest": "00adde5fe32b359d1d19919bca8eab39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6472, "upload_time": "2015-03-05T15:23:54", "upload_time_iso_8601": "2015-03-05T15:23:54.784203Z", "url": "https://files.pythonhosted.org/packages/6c/0c/4753a8ee704310d2de1ccbc8f952abf4515c7ab13bdf3bec8231d807d339/gmane-0.1.dev5.tar.gz", "yanked": false}], "0.1.dev6": [{"comment_text": "", "digests": {"md5": "e60f5e4c004737ed848bb38867e30b06", "sha256": "be3e70b5ff466c63d4eff187e9e89c9495f80a3580ee1e26d2bc150f45196691"}, "downloads": -1, "filename": "gmane-0.1.dev6.tar.gz", "has_sig": false, "md5_digest": "e60f5e4c004737ed848bb38867e30b06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7760, "upload_time": "2015-03-06T18:50:27", "upload_time_iso_8601": "2015-03-06T18:50:27.659723Z", "url": "https://files.pythonhosted.org/packages/7b/26/1eab2dc9bcedb88c37d820ea886c15ce538b11a9e8165693d7af6b04a580/gmane-0.1.dev6.tar.gz", "yanked": false}], "0.1.dev7": [{"comment_text": "", "digests": {"md5": "1b83f96bfb2e71e31546aebcb03e7c59", "sha256": "d256efd4e87dd59e8a48048e9a9557b58a72fd640d2bb35e64093dcd1f552d69"}, "downloads": -1, "filename": "gmane-0.1.dev7.tar.gz", "has_sig": false, "md5_digest": "1b83f96bfb2e71e31546aebcb03e7c59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7869, "upload_time": "2015-03-06T18:57:15", "upload_time_iso_8601": "2015-03-06T18:57:15.013950Z", "url": "https://files.pythonhosted.org/packages/68/fe/64858300cd3d48231a02a469e237a744c6a634f8a3593149efd71bc8132f/gmane-0.1.dev7.tar.gz", "yanked": false}], "0.1.dev8": [{"comment_text": "", "digests": {"md5": "475800d0146bfa9a0eb44d7bdb275255", "sha256": "5894f9548ea881b21b9f139d9f1f55d07110256bdcd50006a0019ce89f5f72b7"}, "downloads": -1, "filename": "gmane-0.1.dev8.tar.gz", "has_sig": false, "md5_digest": "475800d0146bfa9a0eb44d7bdb275255", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8288, "upload_time": "2015-03-07T16:58:58", "upload_time_iso_8601": "2015-03-07T16:58:58.934865Z", "url": "https://files.pythonhosted.org/packages/d8/66/c6756ca0805f250c76a1a911bd69ae3f42233fd79cce67ebce28a3c7efca/gmane-0.1.dev8.tar.gz", "yanked": false}], "0.1.dev9": [{"comment_text": "", "digests": {"md5": "a5ef65bff7fe7e6a2fb819435e5efba6", "sha256": "a77126392f5fde1faf4e2fc6eda2f131ddc3b433bb6d6f261407a97c8bcc644f"}, "downloads": -1, "filename": "gmane-0.1.dev9.tar.gz", "has_sig": false, "md5_digest": "a5ef65bff7fe7e6a2fb819435e5efba6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9980, "upload_time": "2015-03-09T21:38:09", "upload_time_iso_8601": "2015-03-09T21:38:09.723212Z", "url": "https://files.pythonhosted.org/packages/a2/91/e973f4afc45a18e96e594e730f2f560382c81be240799deffe51f909f34c/gmane-0.1.dev9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "61b9e7e8d804b6808e96721bd0fec322", "sha256": "11dbfb8c02ca28349cb1843f905afaa0be7093070e1bc2bc2372a97488331be4"}, "downloads": -1, "filename": "gmane-0.1.dev25.tar.gz", "has_sig": false, "md5_digest": "61b9e7e8d804b6808e96721bd0fec322", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26727, "upload_time": "2015-03-24T08:02:29", "upload_time_iso_8601": "2015-03-24T08:02:29.373939Z", "url": "https://files.pythonhosted.org/packages/ac/4f/134d5c1525fad89c98e61104ae80708ceb625b0d8cde0ac8a3e7ccff3a34/gmane-0.1.dev25.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:19 2020"}