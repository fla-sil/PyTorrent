{"info": {"author": "Nathan Henrie", "author_email": "nate@n8henrie.com", "bugtrack_url": null, "classifiers": ["Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Fauxmo README\n\nmaster: [![master branch build status](https://travis-ci.org/n8henrie/fauxmo.svg?branch=master)](https://travis-ci.org/n8henrie/fauxmo/branches)\ndev: [![dev branch build status](https://travis-ci.org/n8henrie/fauxmo.svg?branch=dev)](https://travis-ci.org/n8henrie/fauxmo/branches)\n\nPython 3 module that emulates Belkin WeMo devices for use with the Amazon Echo.\n\nOriginally forked from <https://github.com/makermusings/fauxmo>, unforked to\nenable GitHub code search (which currently doesn't work in a fork), and because\nthe libraries have diverged substantially.\n\n- Documentation: [fauxmo.readthedocs.org](https://fauxmo.readthedocs.org)\n\n## Introduction\n\nThe Amazon Echo is able to control certain types of home automation devices by\nvoice. Fauxmo provides emulated Belkin Wemo devices that the Echo can turn on\nand off by voice, locally, and with minimal lag time. Currently these Fauxmo\ndevices can be configured to make requests to an HTTP server or to a [Home\nAssistant](https://home-assistant.io) instance via [its Python\nAPI](https://home-assistant.io/developers/python_api/) and only require a JSON\nconfig file for setup.\n\nAs of version v0.4.0, Fauxmo uses several API features and f-strings that\nrequire Python 3.6+. I highly recommend looking into\n[pyenv](https://github.com/pyenv/pyenv) if you're currently on an older Python\nversion and willing to upgrade. Otherwise, check out the FAQ section at the\nbottom for tips on installing an older Fauxmo version (though note that I will\nnot be continuing development or support for older versions).\n\nFor what it's worth, if you're concerned about installing pyenv on a\nlow-resource machine like the Raspberry Pi, I encourage you to [review my\nnotes](https://n8henrie.com/2018/02/pyenv-size-and-python-36-speed-installation-time-on-raspberry-pi/)\non the size and time required to install Python 3.6 with pyenv on a Raspberry\nPi and the nontrivial improvement in speed (with a simple pystone benchmark)\nusing an optimized pyenv-installed 3.6 as compared to the default Raspbian\n3.5.3.\n\n## Terminology\n\nfaux (`\\\u02c8f\u014d\\`): imitation\n\nWeMo: Belkin home automation product with which the Amazon Echo can interface\n\nFauxmo (`\\\u02c8f\u014d-m\u014d\\`): Python 3 module that emulates Belkin WeMo devices for use\nwith the Amazon Echo.\n\nFauxmo has a server component that helps register \"devices\" with the Echo (which\nmay be referred to as the Fauxmo server or Fauxmo core). These devices are then\nexposed individually, each requiring its own port, and may be referred to as a\nFauxmo device or a Fauxmo instance. The Echo interacts with each Fauxmo device\nas if it were a separate WeMo device.\n\n## Usage\n\nInstallation into a venv is *highly recommended*, especially since it's baked\ninto the recent Python versions that Fauxmo requires.\n\nAdditionally, please ensure you're using a recent version of pip (>= 9.0.1)\nprior to installation: `pip install --upgrade pip`\n\n### Simple install: From PyPI\n\n1. `python3 -m venv .venv`\n1. `source ./.venv/bin/activate`\n1. `python3 -m pip install fauxmo`\n1. Make a `config.json` based on\n   [`config-sample.json`](https://github.com/n8henrie/fauxmo/blob/master/config-sample.json)\n1. `fauxmo -c config.json [-v]`\n\n### Simple install of dev branch from GitHub\n\nThis is a good strategy for testing features in development -- for actually\ncontributing to development, clone the repo as per below)\n\n1. `python3 -m venv .venv`\n1. `source ./.venv/bin/activate`\n1. `pip install [-e] git+https://github.com/n8henrie/fauxmo.git@dev`\n\n### Install for development from GitHub\n\n1. `git clone https://github.com/n8henrie/fauxmo.git`\n1. `cd fauxmo`\n1. `python3 -m venv .venv`\n1. `source ./.venv/bin/activate`\n1. `pip install -e .[dev]`\n1. `cp config-sample.json config.json`\n1. Edit `config.json`\n1. `fauxmo [-v]`\n\n### Set up the Echo\n\n1. Open the Amazon Alexa webapp to the [Smart\n   Home](http://alexa.amazon.com/#smart-home) page\n1. **With Fauxmo running**, click \"Discover devices\" (or tell Alexa to \"find\n   connected devices\")\n1. Ensure that your Fauxmo devices were discovered and appear with their\n   names in the web interface\n1. Test: \"Alexa, turn on [the kitchen light]\"\n\n### Set Fauxmo to run automatically in the background\n\nNB: As discussed in [#20](https://github.com/n8henrie/fauxmo/issues/20), the\nexample files in `extras/` are *not* included when you install from PyPI\\*\n(using `pip`). If you want to use them, you either need to clone the repo or\nyou can download them individually using tools like `wget` or `curl` by\nnavigating to the file in your web browser, clicking the `Raw` button, and\nusing the resulting URL in your address bar.\n\n\\* As of Fauxmo v0.4.0 `extras/` has been added to `MANIFEST.in` and may be\nincluded somewhere depending on installation from the `.tar.gz` vs `whl`\nformat -- if you can't find them, you should probably just get the files\nmanually as described above.\n\n#### systemd (e.g. Raspbian Jessie)\n\n1. Recommended: add an unprivileged user to run Fauxmo: `sudo useradd -r\n   -s /bin/false fauxmo`\n    - NB: Fauxmo may require root privileges if you're using ports below 1024\n1. `sudo cp extras/fauxmo.service /etc/systemd/system/fauxmo.service`\n1. Edit the paths in `/etc/systemd/system/fauxmo.service`\n1. `sudo systemctl enable fauxmo.service`\n1. `sudo systemctl start fauxmo.service`\n\n#### launchd (OS X)\n\n1. `cp extras/com.n8henrie.fauxmo.plist ~/Library/LaunchAgents/com.n8henrie.fauxmo.plist`\n1. Edit the paths in `~/Library/LaunchAgents/com.n8henrie.fauxmo.plist`\n    - You can remove the `StandardOutPath` and `StandardErrorPath` sections if\n      desired\n1. `launchctl load ~/Library/LaunchAgents/com.n8henrie.fauxmo.plist`\n1. `launchctl start com.n8henrie.fauxmo`\n\n## Plugins\n\nPlugins are small user-extendible classes that allow users to easily make their\nown actions for Fauxmo to run by way of Alexa commands. They were previously\ncalled Handlers and may be referred to as such in places in the code and\ndocumentation.\n\nFauxmo v0.4.0 implements a new and breaking change in the way Handlers were\nimplemented in previous versions, which requires modification of the\n`config.json` file (as described below).\n\nA few plugins and the ABC from which the plugins are required to inherit may\nbe included and installed by default in the `fauxmo.plugins` package. Any\npre-installed plugins, like the rest of the core Fauxmo code, have no third\nparty dependencies.\n\nSo far, the pre-installed plugins include:\n\n- [`fauxmo.plugins.simplehttpplugin.SimpleHTTPPlugin`](https://github.com/n8henrie/fauxmo/blob/master/src/fauxmo/plugins/simplehttpplugin.py)\n- [`fauxmo.plugins.commandlineplugin.CommandLinePlugin`](https://github.com/n8henrie/fauxmo/blob/master/src/fauxmo/plugins/commandlineplugin.py)\n- [`fauxmo.plugins.homeassistantplugin.HomeAssistantPlugin`](https://github.com/n8henrie/fauxmo/blob/master/src/fauxmo/plugins/homeassistantplugin.py)\n\n`SimpleHTTPPlugin` responds to Alexa's `on` and `off` commands by making\nrequests to URL endpoints by way of\n[`urllib`](https://docs.python.org/3/library/urllib.html). Example uses cases\nrelevant to the IOT community might be a Flask server served from localhost\nthat provides a nice web interface for toggling switches, whose endpoints could\nbe added as the `on_cmd` and `off_cmd` args to a `SimpleHTTPPlugin` instance\nto allow activation by way of Alexa -> Fauxmo.\n\nAs of Fauxmo v0.4.5, the `FauxmoPlugin` abstract base class (and therefore all\nderivate Fauxmo plugins) requires a `get_state` method, which tells Alexa a\ndevice's state. If you don't have a way to determine devices state, you can\njust have your `get_state` method return `\"unknown\"`, but please review the\nnotes on `get_state` below.\n\nAlso, see details regarding plugin configuration in each class's docstring,\nwhich I intend to continue as a convention for Fauxmo plugins. Users hoping to\nmake more complicated requests may be interested in looking at `RESTAPIPlugin`\nin the [`fauxmo-plugins\nrepository`](https://github.com/n8henrie/fauxmo-plugins), which uses Requests\nfor a much friendlier API.\n\n### User plugins\n\nUsers can easily create their own plugins, which is the motivation behind most\nof the changes in Fauxmo v0.4.0.\n\nTo get started:\n\n1. Decide on a name for your plugin class. I highly recommend something\n   descriptive, CamelCase and a `Plugin` suffix, e.g. `FooSwitcherPlugin`.\n1. I strongly recommend naming your module the same as the plugin, but in all\n   lower case, e.g. `fooswitcherplugin.py`.\n1. Note the path to your plugin, which will need to be included in your\n   `config.json` as `path` (absolute path recommended, `~` for homedir is\n   okay).\n1. Write your class, which must at minimum:\n    - inherit from `fauxmo.plugins.FauxmoPlugin`.\n    - provide the methods `on()`, `off()`, and `get_state()`.\n        - Please note that unless the Echo has a way to determine the device\n          state, it will likely respond that your \"device is not responding\"\n          after you turn a device on (or in some cases off, or both), but it\n          should still be able to switch the device.\n        - If you want to ignore the actual device's state and just return the\n          last successful action as the current state (e.g. if `device.on()`\n          succeeded then return `\"on\"`), your plugin can return\n          `super().get_state()` as its `get_state()` method. Some of the\n          included plugins can be configured to have this behavior using a\n          `use_fake_state` flag in their configuration (please look at the\n          documentation and source code of the plugins for further details).\n          Note that this means it won't update to reflect state changes that\n          occur outside of Fauxmo (e.g. manually flipping a switch, or toggling\n          with a different program), whereas a proper `get_state`\n          implementation may be able to do so.\n\n1. Any required settings will be read from your `config.json` and passed into\n   your plugin as kwargs at initialization, see below.\n\nIn addition to the above, if you intend to share your plugin with others, I\nstrongly recommend that you:\n\n- Include generous documentation as a module level docstring.\n- Note specific versions of any dependencies in that docstring.\n  - Because these user plugins are kind of \"side-loaded,\" you will need to\n    manually install their dependencies into the appropriate environment, so\n    it's important to let other users know exactly what versions you use.\n\nBe aware, when fauxmo loads a plugin, it will add the directory\ncontaining the plugin to the Python path, so any other Python modules in this\ndirectory might be loaded by unscrupulous code. This behavior was adopted in\npart to facilitate installing any plugin dependencies in a way that will be\navailable for import (e.g. `cd \"$MYPLUGINPATH\"; pip install -t $MYPLUGINDEPS`).\n\n### Notable plugin examples\n\nNB: You may need to *manually* install additional dependencies for these to\nwork -- look for the dependencies in the module level docstring.\n\n- <https://github.com/n8henrie/fauxmo-plugins>\n    - `RESTAPIPlugin`\n        - Trigger HTTP requests with your Echo.\n        - Similar to `SimpleHTTPPlugin`, but uses\n          [Requests](https://github.com/kennethreitz/requests) for a simpler\n          API and easier modification.\n    - `MQTTPlugin`\n        - Trigger MQTT events with your Echo\n    - User contributions of interesting plugins are more than welcome!\n\n## Configuration\n\nI recommend that you copy and modify\n[`config-sample.json`](https://github.com/n8henrie/fauxmo/blob/master/config-sample.json).\nFauxmo will use whatever config file you specify with `-c` or will search for\n`config.json` in the current directory, `~/.fauxmo/`, and `/etc/fauxmo/` (in\nthat order). The minimal configuration settings are:\n\n- `FAUXMO`: General Fauxmo settings\n    - `ip_address`: Optional[str] - Manually set the server's IP address.\n      Recommended value: `\"auto\"`.\n- `PLUGINS`: Top level key for your plugins, values should be a dictionary of\n  (likely CamelCase) class names, spelled identically to the plugin class, with\n  each plugin's settings as a subdictionary.\n    - `ExamplePlugin`: Your plugin class name here, case sensitive.\n        - `path`: The absolute path to the Python file in which the plugin\n          class is defined (please see the section on user plugins above).\n          Required for user plugins / plugins not pre-installed in the\n          `fauxmo.plugins` subpackage.\n        - `example_var1`: For convenience and to avoid redundancy, your plugin\n          class can *optionally* use config variables at this level that\n          will be shared for all `DEVICES` listed in the next section (e.g. an\n          api key that would be shared for all devices of this plugin type).\n          If provided, your plugin class must consume this variable in a custom\n          `__init__`.\n        - `DEVICES`: List of devices that will employ `ExamplePlugin`\n            - `name`: Optional[str] -- Name for this device. Optional in the\n              sense that you can leave it out of the config as long as you set\n              it in your plugin code as the `_name` attribute, but it does need\n              to be set somewhere. If you omit it from config you will also\n              need to override the `__init__` method, which expects a `name`\n              kwarg.\n            - `port`: Optional[int] -- Port that Echo will use connect to\n              device. Should be different for each device, Fauxmo will attempt\n              to set automatically if absent from config. NB: Like `name`, you\n              can choose to set manually in your plugin code by overriding the\n              `_port` attribute (and the `__init__` method, which expects a\n              `port` kwarg otherwise).\n            - `example_var2`: Config variables for individual Fauxmo devices\n              can go here if needed (e.g. the URL that should be triggered when\n              a device is activated). Again, your plugin class will need to\n              consume them in a custom `__init__`.\n\n\nEach user plugin should describe its required configuration in its module-level\ndocstring. The only required config variables for all plugins is `DEVICES`,\nwhich is a `List[dict]` of configuration variables for each device of that\nplugin type. Under `DEVICES` it is a good idea to set a fixed, high, free\n`port` for each device, but if you don't set one, Fauxmo will try to pick a\nreasonable port automatically (though it will change for each run).\n\nPlease see\n[`config-sample`](https://github.com/n8henrie/fauxmo/blob/master/config-sample.json)\nfor a more concrete idea of the structure of the config file, using the\nbuilt-in `SimpleHTTPPlugin` for demonstration purposes. Below is a description\nof the kwargs that `SimpleHTTPPlugin` accepts.\n\n- `name`: What you want to call the device (how to activate by\n  Echo)\n- `port`: Port the Fauxmo device will run on\n- `on_cmd`: str -- URL that should be requested to turn device on.\n- `off_cmd`: str -- URL that should be requested to turn device off.\n- `state_cmd`: str -- URL that should be requested to query device state\n- `method` / `state_method`: Optional[str] = GET -- GET, POST, PUT, etc.\n- `headers`: Optional[dict]  -- Extra headers\n- `on_data` / `off_data` / `state_data`: Optional[dict] -- POST data\n- `state_response_on` / `state_response_off`: str -- If this string is in\n  contained in the response from `state_cmd`, then the devices is `on` or\n  `off`, respectively\n- `user` / `password`: Optional[str] -- Enables HTTP authentication (basic or\n  digest only)\n- `use_fake_state`: Optional[bool] -- If `True`, override the plugin's\n  `get_state` method to return the latest successful action as the device\n  state. NB: The proper json boolean value for Python's `True` is `true`, not\n  `True` or `\"true\"`.\n\n## Security\n\nI am not a technology professional and make no promises regarding the security\nof this software. Specifically, plugins such as `CommandLinePlugin` execute\narbitrary code from your configuration without any validation. If your\nconfiguration can be tampered with, you're in for a bad time.\n\nThat said, if your configuration can be tampered with (i.e. someone already has\nwrite access on your machine), then you likely have bigger problems.\n\nRegardless, a few reasonable precautions that I recommend:\n\n- run `fauxmo` in a virtulaenv, even without any dependencies\n- run `fauxmo` as a dedicated unprivileged user with its own group\n- remove write access from the `fauxmo` user and group for your config file and\n  any plugin files (perhaps `chmod 0640 config.json; chown me:fauxmo\n  config.json`)\n- consider using a firewall like `ufw`, but don't forget that you'll need to\n  open up ports for upnp (`1900`, UDP) and ports for all your devices that\n  you've configured (in `config.json`).\n\nFor example, if I had 4 echo devices at 192.168.1.5, 192.168.1.10,\n192.168.1.15, and 192.168.1.20, and Fauxmo was configured with devices at each\nof port 12345-12350, to configure `ufw` I might run something like:\n\n```console\n$ for ip in 5 10 15 20; do\n    sudo ufw allow \\\n        from 192.168.1.\"$ip\" \\\n        to any \\\n        port 1900 \\\n        proto udp \\\n        comment \"fauxmo upnp\"\n    sudo ufw allow \\\n        from 192.168.1.\"$ip\" \\\n        to any \\\n        port 12345:12350 \\\n        proto tcp \\\n        comment \"fauxmo devices\"\ndone\n```\n\nYou use Fauxmo at your own risk, with or without user plugins.\n\n## Troubleshooting / FAQ\n\nYour first step in troubleshooting should probably be to \"forget all devices\"\n(which as been removed from the iOS app but is still available at\n[alexa.amazon.com](https://alexa.amazon.com)), re-discover devices, and make\nsure to refresh your device list (e.g. pull down on the \"devices\" tab in the\niOS app, or just close out the app completely and re-open).\n\n- How can I increase my logging verbosity?\n    - `-v[vv]`\n    - `-vv` (`logging.INFO`) is a good place to start when debugging\n- How can I ensure my config is valid JSON?\n    - `python -m json.tool < config.json`\n    - Use `jsonlint` or one of numerous online tools\n- How can I install an older / specific version of Fauxmo?\n    - Install from a tag:\n        - `pip install git+git://github.com/n8henrie/fauxmo.git@v0.1.11`\n    - Install from a specific commit:\n        - `pip install\n          git+git://github.com/n8henrie/fauxmo.git@d877c513ad45cbbbd77b1b83e7a2f03bf0004856`\n- Where can I get more information on how the Echo interacts with devices like\n  Fauxmo?\n    - Check out\n      [`protocol_notes.md`](https://github.com/n8henrie/fauxmo/blob/master/protocol_notes.md)\n- Does Fauxmo work with non-Echo emulators like Alexa AVS or Echoism.io?\n    - [Apparently not.](https://github.com/n8henrie/fauxmo/issues/22)\n- How do I find my Echo firmware version?\n    - https://alexa.amazon.com -> Settings -> [Device Name] -> Device Software Version\n\n### Installing Python 3.7 with [pyenv](https://github.com/pyenv/pyenv)\n\n```bash\nsudo install -o $(whoami) -g $(whoami) -d /opt/pyenv\ngit clone https://github.com/pyenv/pyenv /opt/pyenv\ncat <<'EOF' >> ~/.bashrc\nexport PYENV_ROOT=\"/opt/pyenv\"\nexport PATH=\"$PYENV_ROOT/bin:$PATH\"\neval \"$(pyenv init -)\"\nEOF\nsource ~/.bashrc\npyenv install 3.7.3\n```\n\nYou can then install Fauxmo into Python 3.7 in a few ways, including:\n\n```bash\n# Install with pip\n\"$(pyenv root)\"/versions/3.7.3/bin/python3.7 -m pip install fauxmo\n\n# Show full path to Fauxmo console script\npyenv which fauxmo\n\n# Run with included console script\nfauxmo -c /path/to/config.json -vvv\n\n# I recommend using the full path for use in start scripts (e.g. systemd, cron)\n\"$(pyenv root)\"/versions/3.7.3/bin/fauxmo -c /path/to/config.json -vvv\n\n# Alternatively, this also works (after `pip install`)\n\"$(pyenv root)\"/versions/3.7.3/bin/python3.7 -m fauxmo.cli -c config.json -vvv\n```\n\n## Buy Me a Coffee\n\n[\u2615\ufe0f](https://n8henrie.com/donate)\n\n## Acknowledgements / Reading List\n\n- Tremendous thanks to @makermusings for [the original version of\n  Fauxmo](https://github.com/makermusings/fauxmo)!\n    - Also thanks to @DoWhileGeek for commits towards Python 3 compatibility\n- <http://www.makermusings.com/2015/07/13/amazon-echo-and-home-automation>\n- <http://www.makermusings.com/2015/07/18/virtual-wemo-code-for-amazon-echo>\n- <http://hackaday.com/2015/07/16/how-to-make-amazon-echo-control-fake-wemo-devices>\n- <https://developer.amazon.com/appsandservices/solutions/alexa/alexa-skills-kit>\n- <https://en.wikipedia.org/wiki/Universal_Plug_and_Play>\n- <http://www.makermusings.com/2015/07/19/home-automation-with-amazon-echo-apps-part-1>\n- <http://www.makermusings.com/2015/08/22/home-automation-with-amazon-echo-apps-part-2>\n- <https://www.rilhia.com/tutorials/using-upnp-enabled-devices-talend-belkin-wemo-switch>\n\n\n# [Changelog](https://keepachangelog.com)\n\nWill not contain minor changes -- feel free to look through `git log` for\nmore detail.\n\n## v0.5.0 :: 20191212\n\n- Add py38 support\n- Add `use_fake_state` option to accommodate situations that state can't be\n  properly determined (thanks @johngo7470)\n- Bugfix: fix unexpected behavior with a switch's state logic was true for both\n  `on` and `off`\n- Migrated HomeAssistantPlugin and CommandLinePlugin from fauxmo-plugins repo\n- Update tests, pytest fixtures, and add some mocks\n\n## v0.4.9 :: 20190527\n\n- Add py37 support (including Travis workaround)\n- Fix bug in content-length calculation (thanks @tim15)\n- Replace `find_unused_port` with local function (thanks @schneideradam)\n- Use black for formatting\n- Update `config-sample.txt` for changes in [HomeAssistant\n  API](https://developers.home-assistant.io/docs/en/external_api_rest.html)\n\n## v0.4.8 :: 20180804\n\n- Add `.close()` method to `FauxmoPlugin`s, allowing for cleanup (thanks\n  [@howdypierce](https://github.com/howdypierce))\n  [discussion](https://github.com/n8henrie/fauxmo/issues/58), e907245\n- Append plugins directory to `sys.path` for more convenient loading of\n  additional modules (thanks [@howdypierce](https://github.com/howdypierce))\n  [discussion](https://github.com/n8henrie/fauxmo/issues/58), 03f2101\n- Add HTTP headers to `/eventservice.xml` and `/metainfoservice.xml` endpoints\n  5a53268\n\n## v0.4.7 :: 20180512\n\n- Minor dev-side changes\n    - Use pipenv for dev dependency management\n- Add utf-8 to readme parsing (5 days ago) (thanks\n     [@hestela](https://github.com/n8henrie/fauxmo/commits?author=hestela)!)\n     49d2c57\n- Change newline to `\\r\\n` in HTTP responses (thanks\n   [@GlennPegden2](https://github.com/GlennPegden2)) 239bc79\n- Match `MAN:` case insensitive (thanks [@wingett](https://github.com/wingett))\n  8307096\n- Add GetBinaryState and GetFriendlyName commands including test cases (thanks\n  [@howdypierce](https://github.com/howdypierce)!) 71392de\n- Make comparison of the \"SOAPACTION\" header case-insensitive, per UPnP spec\n  (thanks [@howdypierce](https://github.com/howdypierce)!) a5cdf82\n- Add fallback for determining IP address when DNS resolution is a problem\n  (thanks [@howdypierce](https://github.com/howdypierce)!) c2d7f13\n- Bugfix: ~/.fauxmo/ not being read as a location for config file (thanks\n  [@howdypierce](https://github.com/howdypierce)!) c322c9b\n\n## v0.4.6 :: 20180212\n\n- Mostly changes to try to fix compatibility with newer generation Echos / Echo\n  Plus, see #38\n\n## v0.4.5 :: 20171114\n\n- Support new GetBinaryState command (fixes n8henrie/fauxmo#31)\n\n## v0.4.3 :: 20170914\n\n- Add `--version` to cli\n- Add `python_requires` specifier to `setup.py`\n- Bind to specific address in `make_udp_sock` (`fauxmo.utils`), seems to fix\n  some intermittent failing tests on MacOS.\n\n## v0.4.2 :: 20170601\n\n- Add additional linters to tests\n- Set reuseaddr and reuseport before binding socket\n\n## v0.4.0 :: 20170402\n\n- Rename handlers to plugins\n- Add interface for user plugins\n- Add type hints\n- Require Python 3.6\n- Eliminate third party dependencies\n- Make sure to close connection when plugin commands fail / return False\n\n## v0.3.3 :: 20160722\n\n- Added compatibility for `rollershutter` to `handlers.hass`\n- Changed `handlers.hass` to send values from a dict to make addition of new\n  services easier in the future\n\n## v0.3.2 :: 20160419\n\n- Update SSDPServer to `setsockopt` to permit receiving multicast broadcasts\n- `sock` kwarg to `create_datagram_endpoint` no longer necessary, restoring\n  functionality to Python 3.4.0 - 3.4.3 (closes #6)\n- `make_udp_sock()` no longer necessary, removed from `fauxmo.utils`\n- Tox and Travis configs switched to use Python 3.4.2 instead of 3.4.4 (since\n  3.4.2 is the latest available in the default Raspbian Jessie repos)\n\n## v0.3.1 :: 20160415\n\n- Don't decode the UDP multicast broadcasts (hopefully fixes #7)\n    - They might not be from the Echo and might cause a `UnicodeDecodeError`\n    - Just search the bytes instead\n- Tests updated for this minor change\n\n## v0.3.0 :: 20160409\n\n- Fauxmo now uses asyncio and requires Python >= 3.4.4\n- *Extensive* changes to codebase\n- Handler classes renamed for PEP8 (capitalization)\n- Moved some general purpose functions to `fauxmo.utils` module\n- Both the UDP and TCP servers are now in `fauxmo.protocols`\n- Added some rudimentary [pytest](http://pytest.org/latest) tests including [tox](http://tox.readthedocs.org/en/latest) and [Travis](https://travis-ci.org/) support\n- Updated documentation on several classes\n\n## v0.2.0 :: 20160324\n\n- Add additional HTTP verbs and options to `RestApiHandler` and Indigo sample\n  to config\n    - **NB:** Breaking change: `json` config variable now needs to be either\n      `on_json` or `off_json`\n- Make `RestApiHandler` DRYer with `functools.partialmethod`\n- Add `SO_REUSEPORT` to `upnp.py` to make life easier on OS X\n\n## v0.1.11 :: 20160129\n\n- Consolidate logger to `__init__.py` and import from there in other modules\n\n## v0.1.8 :: 20160129\n\n- Add the ability to manually specify the host IP address for cases when the\n  auto detection isn't working (https://github.com/n8henrie/fauxmo/issues/1)\n- Deprecated the `DEBUG` setting in `config.json`. Just use `-vvv` from now on.\n\n## v0.1.6 :: 20160105\n\n- Fix for Linux not returning local IP\n    - restored method I had removed from Maker Musings original / pre-fork\n      version not knowing it would introduce a bug where Linux returned\n      127.0.1.1 as local IP address\n\n## v0.1.4 :: 20150104\n\n- Fix default verbosity bug introduced in 1.1.3\n\n## v0.1.0 :: 20151231\n\n- Continue to convert to python3 code\n- Pulled in a few PRs by [@DoWhileGeek](https://github.com/DoWhileGeek) working\ntowards python3 compatibility and improved devices naming with dictionary\n- Renamed a fair number of classes\n- Added kwargs to several class and function calls for clarity\n- Renamed several variables for clarity\n- Got rid of a few empty methods\n- Import devices from `config.json` and include a sample\n- Support `POST`, headers, and json data in the RestApiHandler\n- Change old debug function to use logging module\n- Got rid of some unused dependencies\n- Moved license (MIT) info to LICENSE\n- Added argparse for future console scripts entry point\n- Added Home Assistant API handler class\n- Use \"string\".format() instead of percent\n- Lots of other minor refactoring\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/n8henrie/fauxmo", "keywords": "fauxmo,alexa,amazon echo", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fauxmo", "package_url": "https://pypi.org/project/fauxmo/", "platform": "", "project_url": "https://pypi.org/project/fauxmo/", "project_urls": {"Homepage": "https://github.com/n8henrie/fauxmo"}, "release_url": "https://pypi.org/project/fauxmo/0.5.0/", "requires_dist": ["black (==19.10b0) ; extra == 'dev'", "flake8-docstrings (==1.5.0) ; extra == 'dev'", "flake8-import-order (==0.18.1) ; extra == 'dev'", "flake8 (==3.7.9) ; extra == 'dev'", "httpbin (==0.7.0) ; extra == 'dev'", "mypy (==0.750) ; extra == 'dev'", "pep8-naming (==0.9.1) ; extra == 'dev'", "pylint (==2.4.4) ; extra == 'dev'", "pytest (==5.3.2) ; extra == 'dev'", "recommonmark (==0.6.0) ; extra == 'dev'", "requests (==2.22.0) ; extra == 'dev'", "Sphinx (==2.3.0) ; extra == 'dev'", "sphinx-rtd-theme ; extra == 'dev'", "tox (==3.14.2) ; extra == 'dev'", "twine (==3.1.1) ; extra == 'dev'", "wheel (==0.33.6) ; extra == 'dev'"], "requires_python": ">=3.6", "summary": "Emulated Belkin WeMo devices that work with the Amazon Echo", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Fauxmo README</h1>\n<p>master: <a href=\"https://travis-ci.org/n8henrie/fauxmo/branches\" rel=\"nofollow\"><img alt=\"master branch build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7cee690590ad25498f3e0741cb9be8cfa9bbc6a8/68747470733a2f2f7472617669732d63692e6f72672f6e3868656e7269652f666175786d6f2e7376673f6272616e63683d6d6173746572\"></a>\ndev: <a href=\"https://travis-ci.org/n8henrie/fauxmo/branches\" rel=\"nofollow\"><img alt=\"dev branch build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5209d158037f1a3ed614b7395e6bf363c22681a7/68747470733a2f2f7472617669732d63692e6f72672f6e3868656e7269652f666175786d6f2e7376673f6272616e63683d646576\"></a></p>\n<p>Python 3 module that emulates Belkin WeMo devices for use with the Amazon Echo.</p>\n<p>Originally forked from <a href=\"https://github.com/makermusings/fauxmo\" rel=\"nofollow\">https://github.com/makermusings/fauxmo</a>, unforked to\nenable GitHub code search (which currently doesn't work in a fork), and because\nthe libraries have diverged substantially.</p>\n<ul>\n<li>Documentation: <a href=\"https://fauxmo.readthedocs.org\" rel=\"nofollow\">fauxmo.readthedocs.org</a></li>\n</ul>\n<h2>Introduction</h2>\n<p>The Amazon Echo is able to control certain types of home automation devices by\nvoice. Fauxmo provides emulated Belkin Wemo devices that the Echo can turn on\nand off by voice, locally, and with minimal lag time. Currently these Fauxmo\ndevices can be configured to make requests to an HTTP server or to a <a href=\"https://home-assistant.io\" rel=\"nofollow\">Home\nAssistant</a> instance via <a href=\"https://home-assistant.io/developers/python_api/\" rel=\"nofollow\">its Python\nAPI</a> and only require a JSON\nconfig file for setup.</p>\n<p>As of version v0.4.0, Fauxmo uses several API features and f-strings that\nrequire Python 3.6+. I highly recommend looking into\n<a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\">pyenv</a> if you're currently on an older Python\nversion and willing to upgrade. Otherwise, check out the FAQ section at the\nbottom for tips on installing an older Fauxmo version (though note that I will\nnot be continuing development or support for older versions).</p>\n<p>For what it's worth, if you're concerned about installing pyenv on a\nlow-resource machine like the Raspberry Pi, I encourage you to <a href=\"https://n8henrie.com/2018/02/pyenv-size-and-python-36-speed-installation-time-on-raspberry-pi/\" rel=\"nofollow\">review my\nnotes</a>\non the size and time required to install Python 3.6 with pyenv on a Raspberry\nPi and the nontrivial improvement in speed (with a simple pystone benchmark)\nusing an optimized pyenv-installed 3.6 as compared to the default Raspbian\n3.5.3.</p>\n<h2>Terminology</h2>\n<p>faux (<code>\\\u02c8f\u014d\\</code>): imitation</p>\n<p>WeMo: Belkin home automation product with which the Amazon Echo can interface</p>\n<p>Fauxmo (<code>\\\u02c8f\u014d-m\u014d\\</code>): Python 3 module that emulates Belkin WeMo devices for use\nwith the Amazon Echo.</p>\n<p>Fauxmo has a server component that helps register \"devices\" with the Echo (which\nmay be referred to as the Fauxmo server or Fauxmo core). These devices are then\nexposed individually, each requiring its own port, and may be referred to as a\nFauxmo device or a Fauxmo instance. The Echo interacts with each Fauxmo device\nas if it were a separate WeMo device.</p>\n<h2>Usage</h2>\n<p>Installation into a venv is <em>highly recommended</em>, especially since it's baked\ninto the recent Python versions that Fauxmo requires.</p>\n<p>Additionally, please ensure you're using a recent version of pip (&gt;= 9.0.1)\nprior to installation: <code>pip install --upgrade pip</code></p>\n<h3>Simple install: From PyPI</h3>\n<ol>\n<li><code>python3 -m venv .venv</code></li>\n<li><code>source ./.venv/bin/activate</code></li>\n<li><code>python3 -m pip install fauxmo</code></li>\n<li>Make a <code>config.json</code> based on\n<a href=\"https://github.com/n8henrie/fauxmo/blob/master/config-sample.json\" rel=\"nofollow\"><code>config-sample.json</code></a></li>\n<li><code>fauxmo -c config.json [-v]</code></li>\n</ol>\n<h3>Simple install of dev branch from GitHub</h3>\n<p>This is a good strategy for testing features in development -- for actually\ncontributing to development, clone the repo as per below)</p>\n<ol>\n<li><code>python3 -m venv .venv</code></li>\n<li><code>source ./.venv/bin/activate</code></li>\n<li><code>pip install [-e] git+https://github.com/n8henrie/fauxmo.git@dev</code></li>\n</ol>\n<h3>Install for development from GitHub</h3>\n<ol>\n<li><code>git clone https://github.com/n8henrie/fauxmo.git</code></li>\n<li><code>cd fauxmo</code></li>\n<li><code>python3 -m venv .venv</code></li>\n<li><code>source ./.venv/bin/activate</code></li>\n<li><code>pip install -e .[dev]</code></li>\n<li><code>cp config-sample.json config.json</code></li>\n<li>Edit <code>config.json</code></li>\n<li><code>fauxmo [-v]</code></li>\n</ol>\n<h3>Set up the Echo</h3>\n<ol>\n<li>Open the Amazon Alexa webapp to the <a href=\"http://alexa.amazon.com/#smart-home\" rel=\"nofollow\">Smart\nHome</a> page</li>\n<li><strong>With Fauxmo running</strong>, click \"Discover devices\" (or tell Alexa to \"find\nconnected devices\")</li>\n<li>Ensure that your Fauxmo devices were discovered and appear with their\nnames in the web interface</li>\n<li>Test: \"Alexa, turn on [the kitchen light]\"</li>\n</ol>\n<h3>Set Fauxmo to run automatically in the background</h3>\n<p>NB: As discussed in <a href=\"https://github.com/n8henrie/fauxmo/issues/20\" rel=\"nofollow\">#20</a>, the\nexample files in <code>extras/</code> are <em>not</em> included when you install from PyPI*\n(using <code>pip</code>). If you want to use them, you either need to clone the repo or\nyou can download them individually using tools like <code>wget</code> or <code>curl</code> by\nnavigating to the file in your web browser, clicking the <code>Raw</code> button, and\nusing the resulting URL in your address bar.</p>\n<p>* As of Fauxmo v0.4.0 <code>extras/</code> has been added to <code>MANIFEST.in</code> and may be\nincluded somewhere depending on installation from the <code>.tar.gz</code> vs <code>whl</code>\nformat -- if you can't find them, you should probably just get the files\nmanually as described above.</p>\n<h4>systemd (e.g. Raspbian Jessie)</h4>\n<ol>\n<li>Recommended: add an unprivileged user to run Fauxmo: <code>sudo useradd -r -s /bin/false fauxmo</code>\n<ul>\n<li>NB: Fauxmo may require root privileges if you're using ports below 1024</li>\n</ul>\n</li>\n<li><code>sudo cp extras/fauxmo.service /etc/systemd/system/fauxmo.service</code></li>\n<li>Edit the paths in <code>/etc/systemd/system/fauxmo.service</code></li>\n<li><code>sudo systemctl enable fauxmo.service</code></li>\n<li><code>sudo systemctl start fauxmo.service</code></li>\n</ol>\n<h4>launchd (OS X)</h4>\n<ol>\n<li><code>cp extras/com.n8henrie.fauxmo.plist ~/Library/LaunchAgents/com.n8henrie.fauxmo.plist</code></li>\n<li>Edit the paths in <code>~/Library/LaunchAgents/com.n8henrie.fauxmo.plist</code>\n<ul>\n<li>You can remove the <code>StandardOutPath</code> and <code>StandardErrorPath</code> sections if\ndesired</li>\n</ul>\n</li>\n<li><code>launchctl load ~/Library/LaunchAgents/com.n8henrie.fauxmo.plist</code></li>\n<li><code>launchctl start com.n8henrie.fauxmo</code></li>\n</ol>\n<h2>Plugins</h2>\n<p>Plugins are small user-extendible classes that allow users to easily make their\nown actions for Fauxmo to run by way of Alexa commands. They were previously\ncalled Handlers and may be referred to as such in places in the code and\ndocumentation.</p>\n<p>Fauxmo v0.4.0 implements a new and breaking change in the way Handlers were\nimplemented in previous versions, which requires modification of the\n<code>config.json</code> file (as described below).</p>\n<p>A few plugins and the ABC from which the plugins are required to inherit may\nbe included and installed by default in the <code>fauxmo.plugins</code> package. Any\npre-installed plugins, like the rest of the core Fauxmo code, have no third\nparty dependencies.</p>\n<p>So far, the pre-installed plugins include:</p>\n<ul>\n<li><a href=\"https://github.com/n8henrie/fauxmo/blob/master/src/fauxmo/plugins/simplehttpplugin.py\" rel=\"nofollow\"><code>fauxmo.plugins.simplehttpplugin.SimpleHTTPPlugin</code></a></li>\n<li><a href=\"https://github.com/n8henrie/fauxmo/blob/master/src/fauxmo/plugins/commandlineplugin.py\" rel=\"nofollow\"><code>fauxmo.plugins.commandlineplugin.CommandLinePlugin</code></a></li>\n<li><a href=\"https://github.com/n8henrie/fauxmo/blob/master/src/fauxmo/plugins/homeassistantplugin.py\" rel=\"nofollow\"><code>fauxmo.plugins.homeassistantplugin.HomeAssistantPlugin</code></a></li>\n</ul>\n<p><code>SimpleHTTPPlugin</code> responds to Alexa's <code>on</code> and <code>off</code> commands by making\nrequests to URL endpoints by way of\n<a href=\"https://docs.python.org/3/library/urllib.html\" rel=\"nofollow\"><code>urllib</code></a>. Example uses cases\nrelevant to the IOT community might be a Flask server served from localhost\nthat provides a nice web interface for toggling switches, whose endpoints could\nbe added as the <code>on_cmd</code> and <code>off_cmd</code> args to a <code>SimpleHTTPPlugin</code> instance\nto allow activation by way of Alexa -&gt; Fauxmo.</p>\n<p>As of Fauxmo v0.4.5, the <code>FauxmoPlugin</code> abstract base class (and therefore all\nderivate Fauxmo plugins) requires a <code>get_state</code> method, which tells Alexa a\ndevice's state. If you don't have a way to determine devices state, you can\njust have your <code>get_state</code> method return <code>\"unknown\"</code>, but please review the\nnotes on <code>get_state</code> below.</p>\n<p>Also, see details regarding plugin configuration in each class's docstring,\nwhich I intend to continue as a convention for Fauxmo plugins. Users hoping to\nmake more complicated requests may be interested in looking at <code>RESTAPIPlugin</code>\nin the <a href=\"https://github.com/n8henrie/fauxmo-plugins\" rel=\"nofollow\"><code>fauxmo-plugins repository</code></a>, which uses Requests\nfor a much friendlier API.</p>\n<h3>User plugins</h3>\n<p>Users can easily create their own plugins, which is the motivation behind most\nof the changes in Fauxmo v0.4.0.</p>\n<p>To get started:</p>\n<ol>\n<li>\n<p>Decide on a name for your plugin class. I highly recommend something\ndescriptive, CamelCase and a <code>Plugin</code> suffix, e.g. <code>FooSwitcherPlugin</code>.</p>\n</li>\n<li>\n<p>I strongly recommend naming your module the same as the plugin, but in all\nlower case, e.g. <code>fooswitcherplugin.py</code>.</p>\n</li>\n<li>\n<p>Note the path to your plugin, which will need to be included in your\n<code>config.json</code> as <code>path</code> (absolute path recommended, <code>~</code> for homedir is\nokay).</p>\n</li>\n<li>\n<p>Write your class, which must at minimum:</p>\n<ul>\n<li>inherit from <code>fauxmo.plugins.FauxmoPlugin</code>.</li>\n<li>provide the methods <code>on()</code>, <code>off()</code>, and <code>get_state()</code>.\n<ul>\n<li>Please note that unless the Echo has a way to determine the device\nstate, it will likely respond that your \"device is not responding\"\nafter you turn a device on (or in some cases off, or both), but it\nshould still be able to switch the device.</li>\n<li>If you want to ignore the actual device's state and just return the\nlast successful action as the current state (e.g. if <code>device.on()</code>\nsucceeded then return <code>\"on\"</code>), your plugin can return\n<code>super().get_state()</code> as its <code>get_state()</code> method. Some of the\nincluded plugins can be configured to have this behavior using a\n<code>use_fake_state</code> flag in their configuration (please look at the\ndocumentation and source code of the plugins for further details).\nNote that this means it won't update to reflect state changes that\noccur outside of Fauxmo (e.g. manually flipping a switch, or toggling\nwith a different program), whereas a proper <code>get_state</code>\nimplementation may be able to do so.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Any required settings will be read from your <code>config.json</code> and passed into\nyour plugin as kwargs at initialization, see below.</p>\n</li>\n</ol>\n<p>In addition to the above, if you intend to share your plugin with others, I\nstrongly recommend that you:</p>\n<ul>\n<li>Include generous documentation as a module level docstring.</li>\n<li>Note specific versions of any dependencies in that docstring.\n<ul>\n<li>Because these user plugins are kind of \"side-loaded,\" you will need to\nmanually install their dependencies into the appropriate environment, so\nit's important to let other users know exactly what versions you use.</li>\n</ul>\n</li>\n</ul>\n<p>Be aware, when fauxmo loads a plugin, it will add the directory\ncontaining the plugin to the Python path, so any other Python modules in this\ndirectory might be loaded by unscrupulous code. This behavior was adopted in\npart to facilitate installing any plugin dependencies in a way that will be\navailable for import (e.g. <code>cd \"$MYPLUGINPATH\"; pip install -t $MYPLUGINDEPS</code>).</p>\n<h3>Notable plugin examples</h3>\n<p>NB: You may need to <em>manually</em> install additional dependencies for these to\nwork -- look for the dependencies in the module level docstring.</p>\n<ul>\n<li><a href=\"https://github.com/n8henrie/fauxmo-plugins\" rel=\"nofollow\">https://github.com/n8henrie/fauxmo-plugins</a>\n<ul>\n<li><code>RESTAPIPlugin</code>\n<ul>\n<li>Trigger HTTP requests with your Echo.</li>\n<li>Similar to <code>SimpleHTTPPlugin</code>, but uses\n<a href=\"https://github.com/kennethreitz/requests\" rel=\"nofollow\">Requests</a> for a simpler\nAPI and easier modification.</li>\n</ul>\n</li>\n<li><code>MQTTPlugin</code>\n<ul>\n<li>Trigger MQTT events with your Echo</li>\n</ul>\n</li>\n<li>User contributions of interesting plugins are more than welcome!</li>\n</ul>\n</li>\n</ul>\n<h2>Configuration</h2>\n<p>I recommend that you copy and modify\n<a href=\"https://github.com/n8henrie/fauxmo/blob/master/config-sample.json\" rel=\"nofollow\"><code>config-sample.json</code></a>.\nFauxmo will use whatever config file you specify with <code>-c</code> or will search for\n<code>config.json</code> in the current directory, <code>~/.fauxmo/</code>, and <code>/etc/fauxmo/</code> (in\nthat order). The minimal configuration settings are:</p>\n<ul>\n<li><code>FAUXMO</code>: General Fauxmo settings\n<ul>\n<li><code>ip_address</code>: Optional[str] - Manually set the server's IP address.\nRecommended value: <code>\"auto\"</code>.</li>\n</ul>\n</li>\n<li><code>PLUGINS</code>: Top level key for your plugins, values should be a dictionary of\n(likely CamelCase) class names, spelled identically to the plugin class, with\neach plugin's settings as a subdictionary.\n<ul>\n<li><code>ExamplePlugin</code>: Your plugin class name here, case sensitive.\n<ul>\n<li><code>path</code>: The absolute path to the Python file in which the plugin\nclass is defined (please see the section on user plugins above).\nRequired for user plugins / plugins not pre-installed in the\n<code>fauxmo.plugins</code> subpackage.</li>\n<li><code>example_var1</code>: For convenience and to avoid redundancy, your plugin\nclass can <em>optionally</em> use config variables at this level that\nwill be shared for all <code>DEVICES</code> listed in the next section (e.g. an\napi key that would be shared for all devices of this plugin type).\nIf provided, your plugin class must consume this variable in a custom\n<code>__init__</code>.</li>\n<li><code>DEVICES</code>: List of devices that will employ <code>ExamplePlugin</code>\n<ul>\n<li><code>name</code>: Optional[str] -- Name for this device. Optional in the\nsense that you can leave it out of the config as long as you set\nit in your plugin code as the <code>_name</code> attribute, but it does need\nto be set somewhere. If you omit it from config you will also\nneed to override the <code>__init__</code> method, which expects a <code>name</code>\nkwarg.</li>\n<li><code>port</code>: Optional[int] -- Port that Echo will use connect to\ndevice. Should be different for each device, Fauxmo will attempt\nto set automatically if absent from config. NB: Like <code>name</code>, you\ncan choose to set manually in your plugin code by overriding the\n<code>_port</code> attribute (and the <code>__init__</code> method, which expects a\n<code>port</code> kwarg otherwise).</li>\n<li><code>example_var2</code>: Config variables for individual Fauxmo devices\ncan go here if needed (e.g. the URL that should be triggered when\na device is activated). Again, your plugin class will need to\nconsume them in a custom <code>__init__</code>.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Each user plugin should describe its required configuration in its module-level\ndocstring. The only required config variables for all plugins is <code>DEVICES</code>,\nwhich is a <code>List[dict]</code> of configuration variables for each device of that\nplugin type. Under <code>DEVICES</code> it is a good idea to set a fixed, high, free\n<code>port</code> for each device, but if you don't set one, Fauxmo will try to pick a\nreasonable port automatically (though it will change for each run).</p>\n<p>Please see\n<a href=\"https://github.com/n8henrie/fauxmo/blob/master/config-sample.json\" rel=\"nofollow\"><code>config-sample</code></a>\nfor a more concrete idea of the structure of the config file, using the\nbuilt-in <code>SimpleHTTPPlugin</code> for demonstration purposes. Below is a description\nof the kwargs that <code>SimpleHTTPPlugin</code> accepts.</p>\n<ul>\n<li><code>name</code>: What you want to call the device (how to activate by\nEcho)</li>\n<li><code>port</code>: Port the Fauxmo device will run on</li>\n<li><code>on_cmd</code>: str -- URL that should be requested to turn device on.</li>\n<li><code>off_cmd</code>: str -- URL that should be requested to turn device off.</li>\n<li><code>state_cmd</code>: str -- URL that should be requested to query device state</li>\n<li><code>method</code> / <code>state_method</code>: Optional[str] = GET -- GET, POST, PUT, etc.</li>\n<li><code>headers</code>: Optional[dict]  -- Extra headers</li>\n<li><code>on_data</code> / <code>off_data</code> / <code>state_data</code>: Optional[dict] -- POST data</li>\n<li><code>state_response_on</code> / <code>state_response_off</code>: str -- If this string is in\ncontained in the response from <code>state_cmd</code>, then the devices is <code>on</code> or\n<code>off</code>, respectively</li>\n<li><code>user</code> / <code>password</code>: Optional[str] -- Enables HTTP authentication (basic or\ndigest only)</li>\n<li><code>use_fake_state</code>: Optional[bool] -- If <code>True</code>, override the plugin's\n<code>get_state</code> method to return the latest successful action as the device\nstate. NB: The proper json boolean value for Python's <code>True</code> is <code>true</code>, not\n<code>True</code> or <code>\"true\"</code>.</li>\n</ul>\n<h2>Security</h2>\n<p>I am not a technology professional and make no promises regarding the security\nof this software. Specifically, plugins such as <code>CommandLinePlugin</code> execute\narbitrary code from your configuration without any validation. If your\nconfiguration can be tampered with, you're in for a bad time.</p>\n<p>That said, if your configuration can be tampered with (i.e. someone already has\nwrite access on your machine), then you likely have bigger problems.</p>\n<p>Regardless, a few reasonable precautions that I recommend:</p>\n<ul>\n<li>run <code>fauxmo</code> in a virtulaenv, even without any dependencies</li>\n<li>run <code>fauxmo</code> as a dedicated unprivileged user with its own group</li>\n<li>remove write access from the <code>fauxmo</code> user and group for your config file and\nany plugin files (perhaps <code>chmod 0640 config.json; chown me:fauxmo config.json</code>)</li>\n<li>consider using a firewall like <code>ufw</code>, but don't forget that you'll need to\nopen up ports for upnp (<code>1900</code>, UDP) and ports for all your devices that\nyou've configured (in <code>config.json</code>).</li>\n</ul>\n<p>For example, if I had 4 echo devices at 192.168.1.5, 192.168.1.10,\n192.168.1.15, and 192.168.1.20, and Fauxmo was configured with devices at each\nof port 12345-12350, to configure <code>ufw</code> I might run something like:</p>\n<pre><span class=\"gp\">$</span> <span class=\"k\">for</span> ip in <span class=\"m\">5</span> <span class=\"m\">10</span> <span class=\"m\">15</span> <span class=\"m\">20</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n<span class=\"go\">    sudo ufw allow \\</span>\n<span class=\"go\">        from 192.168.1.\"$ip\" \\</span>\n<span class=\"go\">        to any \\</span>\n<span class=\"go\">        port 1900 \\</span>\n<span class=\"go\">        proto udp \\</span>\n<span class=\"go\">        comment \"fauxmo upnp\"</span>\n<span class=\"go\">    sudo ufw allow \\</span>\n<span class=\"go\">        from 192.168.1.\"$ip\" \\</span>\n<span class=\"go\">        to any \\</span>\n<span class=\"go\">        port 12345:12350 \\</span>\n<span class=\"go\">        proto tcp \\</span>\n<span class=\"go\">        comment \"fauxmo devices\"</span>\n<span class=\"go\">done</span>\n</pre>\n<p>You use Fauxmo at your own risk, with or without user plugins.</p>\n<h2>Troubleshooting / FAQ</h2>\n<p>Your first step in troubleshooting should probably be to \"forget all devices\"\n(which as been removed from the iOS app but is still available at\n<a href=\"https://alexa.amazon.com\" rel=\"nofollow\">alexa.amazon.com</a>), re-discover devices, and make\nsure to refresh your device list (e.g. pull down on the \"devices\" tab in the\niOS app, or just close out the app completely and re-open).</p>\n<ul>\n<li>How can I increase my logging verbosity?\n<ul>\n<li><code>-v[vv]</code></li>\n<li><code>-vv</code> (<code>logging.INFO</code>) is a good place to start when debugging</li>\n</ul>\n</li>\n<li>How can I ensure my config is valid JSON?\n<ul>\n<li><code>python -m json.tool &lt; config.json</code></li>\n<li>Use <code>jsonlint</code> or one of numerous online tools</li>\n</ul>\n</li>\n<li>How can I install an older / specific version of Fauxmo?\n<ul>\n<li>Install from a tag:\n<ul>\n<li><code>pip install git+git://github.com/n8henrie/fauxmo.git@v0.1.11</code></li>\n</ul>\n</li>\n<li>Install from a specific commit:\n<ul>\n<li><code>pip install git+git://github.com/n8henrie/fauxmo.git@d877c513ad45cbbbd77b1b83e7a2f03bf0004856</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Where can I get more information on how the Echo interacts with devices like\nFauxmo?\n<ul>\n<li>Check out\n<a href=\"https://github.com/n8henrie/fauxmo/blob/master/protocol_notes.md\" rel=\"nofollow\"><code>protocol_notes.md</code></a></li>\n</ul>\n</li>\n<li>Does Fauxmo work with non-Echo emulators like Alexa AVS or Echoism.io?\n<ul>\n<li><a href=\"https://github.com/n8henrie/fauxmo/issues/22\" rel=\"nofollow\">Apparently not.</a></li>\n</ul>\n</li>\n<li>How do I find my Echo firmware version?\n<ul>\n<li><a href=\"https://alexa.amazon.com\" rel=\"nofollow\">https://alexa.amazon.com</a> -&gt; Settings -&gt; [Device Name] -&gt; Device Software Version</li>\n</ul>\n</li>\n</ul>\n<h3>Installing Python 3.7 with <a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\">pyenv</a></h3>\n<pre>sudo install -o <span class=\"k\">$(</span>whoami<span class=\"k\">)</span> -g <span class=\"k\">$(</span>whoami<span class=\"k\">)</span> -d /opt/pyenv\ngit clone https://github.com/pyenv/pyenv /opt/pyenv\ncat <span class=\"s\">&lt;&lt;'EOF' &gt;&gt; ~/.bashrc</span>\n<span class=\"s\">export PYENV_ROOT=\"/opt/pyenv\"</span>\n<span class=\"s\">export PATH=\"$PYENV_ROOT/bin:$PATH\"</span>\n<span class=\"s\">eval \"$(pyenv init -)\"</span>\n<span class=\"s\">EOF</span>\n<span class=\"nb\">source</span> ~/.bashrc\npyenv install <span class=\"m\">3</span>.7.3\n</pre>\n<p>You can then install Fauxmo into Python 3.7 in a few ways, including:</p>\n<pre><span class=\"c1\"># Install with pip</span>\n<span class=\"s2\">\"</span><span class=\"k\">$(</span>pyenv root<span class=\"k\">)</span><span class=\"s2\">\"</span>/versions/3.7.3/bin/python3.7 -m pip install fauxmo\n\n<span class=\"c1\"># Show full path to Fauxmo console script</span>\npyenv which fauxmo\n\n<span class=\"c1\"># Run with included console script</span>\nfauxmo -c /path/to/config.json -vvv\n\n<span class=\"c1\"># I recommend using the full path for use in start scripts (e.g. systemd, cron)</span>\n<span class=\"s2\">\"</span><span class=\"k\">$(</span>pyenv root<span class=\"k\">)</span><span class=\"s2\">\"</span>/versions/3.7.3/bin/fauxmo -c /path/to/config.json -vvv\n\n<span class=\"c1\"># Alternatively, this also works (after `pip install`)</span>\n<span class=\"s2\">\"</span><span class=\"k\">$(</span>pyenv root<span class=\"k\">)</span><span class=\"s2\">\"</span>/versions/3.7.3/bin/python3.7 -m fauxmo.cli -c config.json -vvv\n</pre>\n<h2>Buy Me a Coffee</h2>\n<p><a href=\"https://n8henrie.com/donate\" rel=\"nofollow\">\u2615\ufe0f</a></p>\n<h2>Acknowledgements / Reading List</h2>\n<ul>\n<li>Tremendous thanks to @makermusings for <a href=\"https://github.com/makermusings/fauxmo\" rel=\"nofollow\">the original version of\nFauxmo</a>!\n<ul>\n<li>Also thanks to @DoWhileGeek for commits towards Python 3 compatibility</li>\n</ul>\n</li>\n<li><a href=\"http://www.makermusings.com/2015/07/13/amazon-echo-and-home-automation\" rel=\"nofollow\">http://www.makermusings.com/2015/07/13/amazon-echo-and-home-automation</a></li>\n<li><a href=\"http://www.makermusings.com/2015/07/18/virtual-wemo-code-for-amazon-echo\" rel=\"nofollow\">http://www.makermusings.com/2015/07/18/virtual-wemo-code-for-amazon-echo</a></li>\n<li><a href=\"http://hackaday.com/2015/07/16/how-to-make-amazon-echo-control-fake-wemo-devices\" rel=\"nofollow\">http://hackaday.com/2015/07/16/how-to-make-amazon-echo-control-fake-wemo-devices</a></li>\n<li><a href=\"https://developer.amazon.com/appsandservices/solutions/alexa/alexa-skills-kit\" rel=\"nofollow\">https://developer.amazon.com/appsandservices/solutions/alexa/alexa-skills-kit</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Universal_Plug_and_Play\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Universal_Plug_and_Play</a></li>\n<li><a href=\"http://www.makermusings.com/2015/07/19/home-automation-with-amazon-echo-apps-part-1\" rel=\"nofollow\">http://www.makermusings.com/2015/07/19/home-automation-with-amazon-echo-apps-part-1</a></li>\n<li><a href=\"http://www.makermusings.com/2015/08/22/home-automation-with-amazon-echo-apps-part-2\" rel=\"nofollow\">http://www.makermusings.com/2015/08/22/home-automation-with-amazon-echo-apps-part-2</a></li>\n<li><a href=\"https://www.rilhia.com/tutorials/using-upnp-enabled-devices-talend-belkin-wemo-switch\" rel=\"nofollow\">https://www.rilhia.com/tutorials/using-upnp-enabled-devices-talend-belkin-wemo-switch</a></li>\n</ul>\n<h1><a href=\"https://keepachangelog.com\" rel=\"nofollow\">Changelog</a></h1>\n<p>Will not contain minor changes -- feel free to look through <code>git log</code> for\nmore detail.</p>\n<h2>v0.5.0 :: 20191212</h2>\n<ul>\n<li>Add py38 support</li>\n<li>Add <code>use_fake_state</code> option to accommodate situations that state can't be\nproperly determined (thanks @johngo7470)</li>\n<li>Bugfix: fix unexpected behavior with a switch's state logic was true for both\n<code>on</code> and <code>off</code></li>\n<li>Migrated HomeAssistantPlugin and CommandLinePlugin from fauxmo-plugins repo</li>\n<li>Update tests, pytest fixtures, and add some mocks</li>\n</ul>\n<h2>v0.4.9 :: 20190527</h2>\n<ul>\n<li>Add py37 support (including Travis workaround)</li>\n<li>Fix bug in content-length calculation (thanks @tim15)</li>\n<li>Replace <code>find_unused_port</code> with local function (thanks @schneideradam)</li>\n<li>Use black for formatting</li>\n<li>Update <code>config-sample.txt</code> for changes in <a href=\"https://developers.home-assistant.io/docs/en/external_api_rest.html\" rel=\"nofollow\">HomeAssistant\nAPI</a></li>\n</ul>\n<h2>v0.4.8 :: 20180804</h2>\n<ul>\n<li>Add <code>.close()</code> method to <code>FauxmoPlugin</code>s, allowing for cleanup (thanks\n<a href=\"https://github.com/howdypierce\" rel=\"nofollow\">@howdypierce</a>)\n<a href=\"https://github.com/n8henrie/fauxmo/issues/58\" rel=\"nofollow\">discussion</a>, e907245</li>\n<li>Append plugins directory to <code>sys.path</code> for more convenient loading of\nadditional modules (thanks <a href=\"https://github.com/howdypierce\" rel=\"nofollow\">@howdypierce</a>)\n<a href=\"https://github.com/n8henrie/fauxmo/issues/58\" rel=\"nofollow\">discussion</a>, 03f2101</li>\n<li>Add HTTP headers to <code>/eventservice.xml</code> and <code>/metainfoservice.xml</code> endpoints\n5a53268</li>\n</ul>\n<h2>v0.4.7 :: 20180512</h2>\n<ul>\n<li>Minor dev-side changes\n<ul>\n<li>Use pipenv for dev dependency management</li>\n</ul>\n</li>\n<li>Add utf-8 to readme parsing (5 days ago) (thanks\n<a href=\"https://github.com/n8henrie/fauxmo/commits?author=hestela\" rel=\"nofollow\">@hestela</a>!)\n49d2c57</li>\n<li>Change newline to <code>\\r\\n</code> in HTTP responses (thanks\n<a href=\"https://github.com/GlennPegden2\" rel=\"nofollow\">@GlennPegden2</a>) 239bc79</li>\n<li>Match <code>MAN:</code> case insensitive (thanks <a href=\"https://github.com/wingett\" rel=\"nofollow\">@wingett</a>)\n8307096</li>\n<li>Add GetBinaryState and GetFriendlyName commands including test cases (thanks\n<a href=\"https://github.com/howdypierce\" rel=\"nofollow\">@howdypierce</a>!) 71392de</li>\n<li>Make comparison of the \"SOAPACTION\" header case-insensitive, per UPnP spec\n(thanks <a href=\"https://github.com/howdypierce\" rel=\"nofollow\">@howdypierce</a>!) a5cdf82</li>\n<li>Add fallback for determining IP address when DNS resolution is a problem\n(thanks <a href=\"https://github.com/howdypierce\" rel=\"nofollow\">@howdypierce</a>!) c2d7f13</li>\n<li>Bugfix: ~/.fauxmo/ not being read as a location for config file (thanks\n<a href=\"https://github.com/howdypierce\" rel=\"nofollow\">@howdypierce</a>!) c322c9b</li>\n</ul>\n<h2>v0.4.6 :: 20180212</h2>\n<ul>\n<li>Mostly changes to try to fix compatibility with newer generation Echos / Echo\nPlus, see #38</li>\n</ul>\n<h2>v0.4.5 :: 20171114</h2>\n<ul>\n<li>Support new GetBinaryState command (fixes n8henrie/fauxmo#31)</li>\n</ul>\n<h2>v0.4.3 :: 20170914</h2>\n<ul>\n<li>Add <code>--version</code> to cli</li>\n<li>Add <code>python_requires</code> specifier to <code>setup.py</code></li>\n<li>Bind to specific address in <code>make_udp_sock</code> (<code>fauxmo.utils</code>), seems to fix\nsome intermittent failing tests on MacOS.</li>\n</ul>\n<h2>v0.4.2 :: 20170601</h2>\n<ul>\n<li>Add additional linters to tests</li>\n<li>Set reuseaddr and reuseport before binding socket</li>\n</ul>\n<h2>v0.4.0 :: 20170402</h2>\n<ul>\n<li>Rename handlers to plugins</li>\n<li>Add interface for user plugins</li>\n<li>Add type hints</li>\n<li>Require Python 3.6</li>\n<li>Eliminate third party dependencies</li>\n<li>Make sure to close connection when plugin commands fail / return False</li>\n</ul>\n<h2>v0.3.3 :: 20160722</h2>\n<ul>\n<li>Added compatibility for <code>rollershutter</code> to <code>handlers.hass</code></li>\n<li>Changed <code>handlers.hass</code> to send values from a dict to make addition of new\nservices easier in the future</li>\n</ul>\n<h2>v0.3.2 :: 20160419</h2>\n<ul>\n<li>Update SSDPServer to <code>setsockopt</code> to permit receiving multicast broadcasts</li>\n<li><code>sock</code> kwarg to <code>create_datagram_endpoint</code> no longer necessary, restoring\nfunctionality to Python 3.4.0 - 3.4.3 (closes #6)</li>\n<li><code>make_udp_sock()</code> no longer necessary, removed from <code>fauxmo.utils</code></li>\n<li>Tox and Travis configs switched to use Python 3.4.2 instead of 3.4.4 (since\n3.4.2 is the latest available in the default Raspbian Jessie repos)</li>\n</ul>\n<h2>v0.3.1 :: 20160415</h2>\n<ul>\n<li>Don't decode the UDP multicast broadcasts (hopefully fixes #7)\n<ul>\n<li>They might not be from the Echo and might cause a <code>UnicodeDecodeError</code></li>\n<li>Just search the bytes instead</li>\n</ul>\n</li>\n<li>Tests updated for this minor change</li>\n</ul>\n<h2>v0.3.0 :: 20160409</h2>\n<ul>\n<li>Fauxmo now uses asyncio and requires Python &gt;= 3.4.4</li>\n<li><em>Extensive</em> changes to codebase</li>\n<li>Handler classes renamed for PEP8 (capitalization)</li>\n<li>Moved some general purpose functions to <code>fauxmo.utils</code> module</li>\n<li>Both the UDP and TCP servers are now in <code>fauxmo.protocols</code></li>\n<li>Added some rudimentary <a href=\"http://pytest.org/latest\" rel=\"nofollow\">pytest</a> tests including <a href=\"http://tox.readthedocs.org/en/latest\" rel=\"nofollow\">tox</a> and <a href=\"https://travis-ci.org/\" rel=\"nofollow\">Travis</a> support</li>\n<li>Updated documentation on several classes</li>\n</ul>\n<h2>v0.2.0 :: 20160324</h2>\n<ul>\n<li>Add additional HTTP verbs and options to <code>RestApiHandler</code> and Indigo sample\nto config\n<ul>\n<li><strong>NB:</strong> Breaking change: <code>json</code> config variable now needs to be either\n<code>on_json</code> or <code>off_json</code></li>\n</ul>\n</li>\n<li>Make <code>RestApiHandler</code> DRYer with <code>functools.partialmethod</code></li>\n<li>Add <code>SO_REUSEPORT</code> to <code>upnp.py</code> to make life easier on OS X</li>\n</ul>\n<h2>v0.1.11 :: 20160129</h2>\n<ul>\n<li>Consolidate logger to <code>__init__.py</code> and import from there in other modules</li>\n</ul>\n<h2>v0.1.8 :: 20160129</h2>\n<ul>\n<li>Add the ability to manually specify the host IP address for cases when the\nauto detection isn't working (<a href=\"https://github.com/n8henrie/fauxmo/issues/1\" rel=\"nofollow\">https://github.com/n8henrie/fauxmo/issues/1</a>)</li>\n<li>Deprecated the <code>DEBUG</code> setting in <code>config.json</code>. Just use <code>-vvv</code> from now on.</li>\n</ul>\n<h2>v0.1.6 :: 20160105</h2>\n<ul>\n<li>Fix for Linux not returning local IP\n<ul>\n<li>restored method I had removed from Maker Musings original / pre-fork\nversion not knowing it would introduce a bug where Linux returned\n127.0.1.1 as local IP address</li>\n</ul>\n</li>\n</ul>\n<h2>v0.1.4 :: 20150104</h2>\n<ul>\n<li>Fix default verbosity bug introduced in 1.1.3</li>\n</ul>\n<h2>v0.1.0 :: 20151231</h2>\n<ul>\n<li>Continue to convert to python3 code</li>\n<li>Pulled in a few PRs by <a href=\"https://github.com/DoWhileGeek\" rel=\"nofollow\">@DoWhileGeek</a> working\ntowards python3 compatibility and improved devices naming with dictionary</li>\n<li>Renamed a fair number of classes</li>\n<li>Added kwargs to several class and function calls for clarity</li>\n<li>Renamed several variables for clarity</li>\n<li>Got rid of a few empty methods</li>\n<li>Import devices from <code>config.json</code> and include a sample</li>\n<li>Support <code>POST</code>, headers, and json data in the RestApiHandler</li>\n<li>Change old debug function to use logging module</li>\n<li>Got rid of some unused dependencies</li>\n<li>Moved license (MIT) info to LICENSE</li>\n<li>Added argparse for future console scripts entry point</li>\n<li>Added Home Assistant API handler class</li>\n<li>Use \"string\".format() instead of percent</li>\n<li>Lots of other minor refactoring</li>\n</ul>\n\n          </div>"}, "last_serial": 6319759, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2a015d257391be730ed5b061347211f9", "sha256": "bdb40b1cd6cefb7dbc7581a45a5a9646d2011b3be8c8c6ae0e682c7b7ca9e74d"}, "downloads": -1, "filename": "fauxmo-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2a015d257391be730ed5b061347211f9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11995, "upload_time": "2016-01-03T18:11:19", "upload_time_iso_8601": "2016-01-03T18:11:19.149316Z", "url": "https://files.pythonhosted.org/packages/42/e7/ba34912cdd2720b2e94418f1b2304de5365a726438c1706cd986d9595d72/fauxmo-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d27dd233dc7664da8950d1f97c4fc4e", "sha256": "70dd97feb2d70027abf548768e4c5b03840bac3a680fe4df01279d83e2051392"}, "downloads": -1, "filename": "fauxmo-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9d27dd233dc7664da8950d1f97c4fc4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15691, "upload_time": "2016-01-03T18:11:24", "upload_time_iso_8601": "2016-01-03T18:11:24.958319Z", "url": "https://files.pythonhosted.org/packages/0f/4c/045761861777585ce2b961fa91c148b49bd699b1617df7e9f5713cbf8d47/fauxmo-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "cd09461bcd4f040d936e75aed7f8253f", "sha256": "86cb0986676132a01db542ac1a9fbfd15f90fc54e70faf3279ce1cf4ff2cec52"}, "downloads": -1, "filename": "fauxmo-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cd09461bcd4f040d936e75aed7f8253f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12096, "upload_time": "2016-01-04T08:33:18", "upload_time_iso_8601": "2016-01-04T08:33:18.347443Z", "url": "https://files.pythonhosted.org/packages/ec/1c/74bb63c61faf37a4ed2f85ded6cca70703b770c12b6f793eca6c8812843c/fauxmo-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8eb3ca201cb450677fec14d252f6634", "sha256": "db5b69cd2709bbd8d848db6226ad4027999962a3f7816d797120d483e4ff29c2"}, "downloads": -1, "filename": "fauxmo-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d8eb3ca201cb450677fec14d252f6634", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15966, "upload_time": "2016-01-04T08:33:26", "upload_time_iso_8601": "2016-01-04T08:33:26.661040Z", "url": "https://files.pythonhosted.org/packages/54/3d/1f1a8f22aab15c61eb047f06b935e12e97b4f9edb30c0a13867e77750244/fauxmo-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "31ddad2571c229c5ba5403c8bd814114", "sha256": "5dbc1631bc935624f3bef83c38978ca2ac19eadba3530e9643af8136386579d9"}, "downloads": -1, "filename": "fauxmo-0.1.10-py3-none-any.whl", "has_sig": false, "md5_digest": "31ddad2571c229c5ba5403c8bd814114", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17104, "upload_time": "2016-01-29T22:59:11", "upload_time_iso_8601": "2016-01-29T22:59:11.480117Z", "url": "https://files.pythonhosted.org/packages/ff/46/71e587e8cc99358f16259637dbea178333c7eacfcc1466e1c4e79b0d34a9/fauxmo-0.1.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5a3a56ff025b7817b7425c376c36bf3", "sha256": "7deda0cee72975a42317c538303efb69b5e953b93534518c592fa39aec9174f6"}, "downloads": -1, "filename": "fauxmo-0.1.10.tar.gz", "has_sig": false, "md5_digest": "e5a3a56ff025b7817b7425c376c36bf3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22982, "upload_time": "2016-01-29T22:59:19", "upload_time_iso_8601": "2016-01-29T22:59:19.492189Z", "url": "https://files.pythonhosted.org/packages/b7/d7/cf12586d0f4a1a3f329b8ccf703700ce3639ae9920286158ac34076f2f82/fauxmo-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "39596871f9044d392178f8caf69155ee", "sha256": "4122eaa72cbd566bea6a4dfeb91cbf19788a8aead078ac5057f782ae02702a72"}, "downloads": -1, "filename": "fauxmo-0.1.11-py3-none-any.whl", "has_sig": false, "md5_digest": "39596871f9044d392178f8caf69155ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17035, "upload_time": "2016-01-29T23:24:47", "upload_time_iso_8601": "2016-01-29T23:24:47.662181Z", "url": "https://files.pythonhosted.org/packages/e2/83/f2cdbd319597802eceb0ee18a38405f9364e6681506968eea8aaec4f4bed/fauxmo-0.1.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce3bc6b3ebbfb0cb857bdafe5742fa55", "sha256": "b65e61f0202569c421d3f9109d1c79ce577d84ec588d76b4031f6d68e5a356b2"}, "downloads": -1, "filename": "fauxmo-0.1.11.tar.gz", "has_sig": false, "md5_digest": "ce3bc6b3ebbfb0cb857bdafe5742fa55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23031, "upload_time": "2016-01-29T23:24:57", "upload_time_iso_8601": "2016-01-29T23:24:57.982802Z", "url": "https://files.pythonhosted.org/packages/23/d5/613cb77d9e9a9e5f51cde4adccbaa2b97c6e23f0014080bdbcace90211ff/fauxmo-0.1.11.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "652fdcd1a9f2caa97b271853b182cd35", "sha256": "db893b9c527dcfd1b1a71c7d38bf0b613ba14cb0926e58c0f7f87aa81a3f8304"}, "downloads": -1, "filename": "fauxmo-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "652fdcd1a9f2caa97b271853b182cd35", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13974, "upload_time": "2016-01-04T16:22:59", "upload_time_iso_8601": "2016-01-04T16:22:59.415499Z", "url": "https://files.pythonhosted.org/packages/e6/23/476cab9b859500e1c1c3ac4180761796f5f8daef8dddde4a4e24b287e199/fauxmo-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3df2e144e2150bf9cdbacd7e8a51ff40", "sha256": "da31cdbd4577315fab3e1fb1ab56e9897bb7af0a08a3941ffa8936ce8a4a1bbd"}, "downloads": -1, "filename": "fauxmo-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3df2e144e2150bf9cdbacd7e8a51ff40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17302, "upload_time": "2016-01-04T16:23:04", "upload_time_iso_8601": "2016-01-04T16:23:04.661407Z", "url": "https://files.pythonhosted.org/packages/30/f2/1cff419b05a2d50a64b14c2003d1b710b56a510adf9de10997cc42b66f9d/fauxmo-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "13121e49c9dae6758b6e3ba40a5b885e", "sha256": "b56a3c0bb05ee45ce3576265af9a26264447c318beab3aa955a077c7307c9981"}, "downloads": -1, "filename": "fauxmo-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "13121e49c9dae6758b6e3ba40a5b885e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14256, "upload_time": "2016-01-04T18:11:24", "upload_time_iso_8601": "2016-01-04T18:11:24.530632Z", "url": "https://files.pythonhosted.org/packages/25/08/395481c78c3e10efeae3e654a20cf808a0ed975b4a649f8fc3d758fe0535/fauxmo-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c4488e101d93ce9b55d779267b6e530", "sha256": "651bddf946f98f2596fd505a19334bfe791c3b6235b206a713ab84970999f7df"}, "downloads": -1, "filename": "fauxmo-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6c4488e101d93ce9b55d779267b6e530", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17703, "upload_time": "2016-01-04T18:11:37", "upload_time_iso_8601": "2016-01-04T18:11:37.160074Z", "url": "https://files.pythonhosted.org/packages/4d/fc/7279f858afad37df3c8de5c91bf8752730e856b2e349e220288d1e011a6c/fauxmo-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "84a6da1ae27bae350a7971ff8e2bb14a", "sha256": "068f29d6aa7ddd0ae555d65b92f5c13768d639696dbe9aacf3ef0f9636c9c050"}, "downloads": -1, "filename": "fauxmo-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "84a6da1ae27bae350a7971ff8e2bb14a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14184, "upload_time": "2016-01-05T20:14:01", "upload_time_iso_8601": "2016-01-05T20:14:01.337140Z", "url": "https://files.pythonhosted.org/packages/c0/29/42ba9f917df9e9817edaaa32572d02e27e7b2b7ecf5a52073aaded10df0e/fauxmo-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37690a12268319360cb06c5a0e493614", "sha256": "5e23d87ba1cb1d564d2f9b44a50d3eb5fe1f3fa1549eba0fda1a9331583c0af9"}, "downloads": -1, "filename": "fauxmo-0.1.4.tar.gz", "has_sig": false, "md5_digest": "37690a12268319360cb06c5a0e493614", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17460, "upload_time": "2016-01-05T20:14:29", "upload_time_iso_8601": "2016-01-05T20:14:29.460385Z", "url": "https://files.pythonhosted.org/packages/45/08/ef806cee3bf2da6a60104b238912bf2d0b290bf4bcea58172dde2babb446/fauxmo-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "496d5f42e5e1502486455d3309b7a42d", "sha256": "a638f4c40225ec3c6f73185f3edd91b80b293d8f710c9e6ffadc6f4a62e29279"}, "downloads": -1, "filename": "fauxmo-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "496d5f42e5e1502486455d3309b7a42d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14184, "upload_time": "2016-01-05T20:24:33", "upload_time_iso_8601": "2016-01-05T20:24:33.168927Z", "url": "https://files.pythonhosted.org/packages/2a/ae/0124791b366c88353679a9cf4aca265e5ce67073df8b9f5551c2f7fc4a7f/fauxmo-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e509f86fed1dcfd391d3abd6315f14d5", "sha256": "74bc1c275cc54a8703f483670188625a1878bffd4eca164eaa967d52399a1ad5"}, "downloads": -1, "filename": "fauxmo-0.1.5.tar.gz", "has_sig": false, "md5_digest": "e509f86fed1dcfd391d3abd6315f14d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17463, "upload_time": "2016-01-05T20:24:55", "upload_time_iso_8601": "2016-01-05T20:24:55.834633Z", "url": "https://files.pythonhosted.org/packages/ad/22/67db1e6f8158f47d3cb8e65a0e9d102e4f70d3884457083ac1c612ce86e1/fauxmo-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "bd2c3e51c45123a41673746bd2375210", "sha256": "3d93e2e88df203c3e461b1c8552ee95a7e26ef43573139d195a1d26326f00040"}, "downloads": -1, "filename": "fauxmo-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd2c3e51c45123a41673746bd2375210", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14580, "upload_time": "2016-01-06T00:17:17", "upload_time_iso_8601": "2016-01-06T00:17:17.983300Z", "url": "https://files.pythonhosted.org/packages/aa/7b/cf92bd88e02fd0a490471355df345b2c2a2f5d1ff6d3505808963e15973e/fauxmo-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b15d2fd04fa958592fbc1f1b9633f6e5", "sha256": "d627696c0712ce5f16edcac6a24202c19595afe24bf006d6668fda6618675e30"}, "downloads": -1, "filename": "fauxmo-0.1.6.tar.gz", "has_sig": false, "md5_digest": "b15d2fd04fa958592fbc1f1b9633f6e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17840, "upload_time": "2016-01-06T00:17:22", "upload_time_iso_8601": "2016-01-06T00:17:22.835202Z", "url": "https://files.pythonhosted.org/packages/e0/56/d1832a3c54d1ccb4a00cd221db9fc7a9344181558bc886cb33afd3adeb4e/fauxmo-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "ba6d69f5eec28cb589b9233c842e34d7", "sha256": "90a81e22fb889551ee13637352a09b3cda216611d5270ae2063401786933ca81"}, "downloads": -1, "filename": "fauxmo-0.1.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ba6d69f5eec28cb589b9233c842e34d7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16620, "upload_time": "2016-01-13T21:25:17", "upload_time_iso_8601": "2016-01-13T21:25:17.169077Z", "url": "https://files.pythonhosted.org/packages/84/86/afece73a0725f27c3bd0099fdf3040780790677da83ae57432c7e4ad1b5e/fauxmo-0.1.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb88e1614656f669107ee5726c0a2bdd", "sha256": "88620090b7d6b6c5d235a8c1053e60cb706bd876855e8b6f25080b7ffc32312b"}, "downloads": -1, "filename": "fauxmo-0.1.7.tar.gz", "has_sig": false, "md5_digest": "fb88e1614656f669107ee5726c0a2bdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22521, "upload_time": "2016-01-13T21:25:23", "upload_time_iso_8601": "2016-01-13T21:25:23.297578Z", "url": "https://files.pythonhosted.org/packages/b0/c5/a848fd935aefad4a23418e403d8b6e88f217282ec3123c06d8e1f89bbc6f/fauxmo-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "f0469e6259aaa21b5bedbfefd4796ef3", "sha256": "eb98d24ed3fd56382b467ee6f161e21786d24ed2eae35c3a1863d67e432cfbd8"}, "downloads": -1, "filename": "fauxmo-0.1.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f0469e6259aaa21b5bedbfefd4796ef3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17017, "upload_time": "2016-01-29T20:26:35", "upload_time_iso_8601": "2016-01-29T20:26:35.426334Z", "url": "https://files.pythonhosted.org/packages/f1/bf/18710c414a23c7d387ac94a2bef74cdb3fdcf39eca9ff1d4b7528b1ac532/fauxmo-0.1.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2534eaceda5c90da0ff9822e85a9ead", "sha256": "0dabd494fbc3c71a6ce3fa816e91b84ba503ee4590a2fd48d1519d0c4fdac804"}, "downloads": -1, "filename": "fauxmo-0.1.8.tar.gz", "has_sig": false, "md5_digest": "f2534eaceda5c90da0ff9822e85a9ead", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22895, "upload_time": "2016-01-29T20:26:43", "upload_time_iso_8601": "2016-01-29T20:26:43.208334Z", "url": "https://files.pythonhosted.org/packages/fe/aa/bbf0a06e263dcfcfd2ab5c09f259a55d93dd9bcc826bdaa7ef7466b073fd/fauxmo-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "0b750a6625e1429d2f16bdf4a0c94a33", "sha256": "9c37a6caed7e62a95f0f96e19cd8fc026b99cac80e1f9959f492ea4fd1424434"}, "downloads": -1, "filename": "fauxmo-0.1.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0b750a6625e1429d2f16bdf4a0c94a33", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17090, "upload_time": "2016-01-29T22:56:07", "upload_time_iso_8601": "2016-01-29T22:56:07.786338Z", "url": "https://files.pythonhosted.org/packages/f9/f2/c49bd76d5a8518fd93e6af8552a236dfb7cff815bc3cc22decae49b5f3f7/fauxmo-0.1.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a9c869fbd691891225ff815e621cc4e", "sha256": "c003dc4c65417bcfeb903d4671ac94dc86857b80dea659131aa9fe5fa2222495"}, "downloads": -1, "filename": "fauxmo-0.1.9.tar.gz", "has_sig": false, "md5_digest": "0a9c869fbd691891225ff815e621cc4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22972, "upload_time": "2016-01-29T22:56:17", "upload_time_iso_8601": "2016-01-29T22:56:17.586174Z", "url": "https://files.pythonhosted.org/packages/18/1b/013639e14f6e401cb90d8bae45dd89fa1b474297039daed3c94b35875501/fauxmo-0.1.9.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "5e1e21c9ae38a90340decb16909cbd34", "sha256": "896844d98122a6d6563232a642728fb584a8b4726ba674bfa2c0fe981d32b935"}, "downloads": -1, "filename": "fauxmo-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5e1e21c9ae38a90340decb16909cbd34", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19418, "upload_time": "2016-04-13T19:44:41", "upload_time_iso_8601": "2016-04-13T19:44:41.606175Z", "url": "https://files.pythonhosted.org/packages/1e/cc/1ee5279f3ade66b091e0f5cc329cae6ce5f121b4693eba375a1a9827080b/fauxmo-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90cbc1ffabefdc47c39a4f8c06074aa0", "sha256": "915a9a524c42b20a8e5a77f62c68975fa0ea20a0d8c8d152f8a79711c36e2724"}, "downloads": -1, "filename": "fauxmo-0.3.0.tar.gz", "has_sig": false, "md5_digest": "90cbc1ffabefdc47c39a4f8c06074aa0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26011, "upload_time": "2016-04-13T19:44:46", "upload_time_iso_8601": "2016-04-13T19:44:46.189573Z", "url": "https://files.pythonhosted.org/packages/c2/4c/1e2b5fa136eaf77cb9344d36b2ada8264a406a95535c8c48b2e1584ddd95/fauxmo-0.3.0.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "ae0b22bbc1b9c81893693fc9f9ea9fc8", "sha256": "9f8b70b60cf11935f9efe464987a3a1c8095bf44889e4cf1f0e3a4ec10ab0a24"}, "downloads": -1, "filename": "fauxmo-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ae0b22bbc1b9c81893693fc9f9ea9fc8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20031, "upload_time": "2016-04-22T17:19:47", "upload_time_iso_8601": "2016-04-22T17:19:47.210401Z", "url": "https://files.pythonhosted.org/packages/ac/93/aced4144d70c07a31a85a9baaaf5bde8403762614983fa204a59f0d5af36/fauxmo-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebff41b159c84e4828670f8722c12be1", "sha256": "a26bdcb4ffef8c4f5458cc53da85681826e2042097abbea489325d2f82a991d3"}, "downloads": -1, "filename": "fauxmo-0.3.2.tar.gz", "has_sig": false, "md5_digest": "ebff41b159c84e4828670f8722c12be1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26595, "upload_time": "2016-04-22T17:19:56", "upload_time_iso_8601": "2016-04-22T17:19:56.692519Z", "url": "https://files.pythonhosted.org/packages/3a/8a/fa2b18a59ec7925651c6d11c319c0c3373a4b898697850bb210f9e2b85f9/fauxmo-0.3.2.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "3ef91abd3c6a38655b230508d181ad11", "sha256": "b61a463241cb0c6f105195a3e1b909b57311e38bddb949254729d7cdf6eb628e"}, "downloads": -1, "filename": "fauxmo-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3ef91abd3c6a38655b230508d181ad11", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20590, "upload_time": "2016-11-26T05:40:07", "upload_time_iso_8601": "2016-11-26T05:40:07.463336Z", "url": "https://files.pythonhosted.org/packages/31/88/976db920620b3b10fb1bd966dfb00b015476242c6002e2275a6a00563997/fauxmo-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efeb26d4b13d47dd7fae79294bb5ec05", "sha256": "291f0b3c79aaa438d7734ebe5ca4e8279b068e65479c25fcbd97b024a4907cd7"}, "downloads": -1, "filename": "fauxmo-0.3.4.tar.gz", "has_sig": false, "md5_digest": "efeb26d4b13d47dd7fae79294bb5ec05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27252, "upload_time": "2016-11-26T05:40:09", "upload_time_iso_8601": "2016-11-26T05:40:09.500962Z", "url": "https://files.pythonhosted.org/packages/47/30/3c95f44cc70982c487ec6eaf035860606e798357921e7bdf03343bcceb91/fauxmo-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "b0b4b0210d95cb1cf3bdd0d9c3974cd7", "sha256": "8e98f6d3d6db12b2054fa7a5d74eccd3ce217330afbc0ac636fe5e8b864ba11b"}, "downloads": -1, "filename": "fauxmo-0.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "b0b4b0210d95cb1cf3bdd0d9c3974cd7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20630, "upload_time": "2017-01-01T01:10:42", "upload_time_iso_8601": "2017-01-01T01:10:42.455104Z", "url": "https://files.pythonhosted.org/packages/d6/81/9d94b0fd0a6ffb5eccb45a83f66bf7dbbebc03b03f863f82bfd97e1fe011/fauxmo-0.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1dcfd539017a6613aecf091a85984e4", "sha256": "16f174c3cf5b8d72fa8d969c6cba38af6146d0c623a6fe16702c6a6b25cf9c13"}, "downloads": -1, "filename": "fauxmo-0.3.5.tar.gz", "has_sig": false, "md5_digest": "e1dcfd539017a6613aecf091a85984e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27322, "upload_time": "2017-01-01T01:10:47", "upload_time_iso_8601": "2017-01-01T01:10:47.579996Z", "url": "https://files.pythonhosted.org/packages/e9/fa/88a4be5650f59df7bd88d44b433ba17f38aa8e4a7e064157c2dc5fda80b2/fauxmo-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "1e7b354090c2b2b4b470c4a8956294ca", "sha256": "4c674c11bb6119800c218475ddf2fa09a36bc2e2edbbfe3a689260ffe7fd3e79"}, "downloads": -1, "filename": "fauxmo-0.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "1e7b354090c2b2b4b470c4a8956294ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20538, "upload_time": "2017-01-03T18:10:31", "upload_time_iso_8601": "2017-01-03T18:10:31.148817Z", "url": "https://files.pythonhosted.org/packages/71/86/c754fb097d15631d877c08c05c16f65286acc6a721fd9baca3100e898907/fauxmo-0.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72ca43f4bb1445ea0c26ad4945763b3c", "sha256": "84ee55072dc487590de31ddb643906e90a7bec5b8471a6c4c1f002e8eb82c5c7"}, "downloads": -1, "filename": "fauxmo-0.3.6.tar.gz", "has_sig": false, "md5_digest": "72ca43f4bb1445ea0c26ad4945763b3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27284, "upload_time": "2017-01-03T18:10:35", "upload_time_iso_8601": "2017-01-03T18:10:35.063793Z", "url": "https://files.pythonhosted.org/packages/1c/79/c50ea5c97c55335f822fd9caeae2634b997de472bb7e782dd48b3fea4a90/fauxmo-0.3.6.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "086f4cf7099f4f86d83a849b08993ab8", "sha256": "bec42399d4c2078bf943bc09abb1bc550f75302e4f45b33b934f221dd70486cb"}, "downloads": -1, "filename": "fauxmo-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "086f4cf7099f4f86d83a849b08993ab8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27639, "upload_time": "2017-04-08T00:23:23", "upload_time_iso_8601": "2017-04-08T00:23:23.775590Z", "url": "https://files.pythonhosted.org/packages/09/c6/6937b3bba80a11bbcf2f168167c694572c8f426e04538526392c44ed4f72/fauxmo-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50388ac7142c562f624ac03ae0e82f3c", "sha256": "f1658b2d012edb88e70be152296064f81f4346939ba951ac761212e730a38a26"}, "downloads": -1, "filename": "fauxmo-0.4.0.tar.gz", "has_sig": false, "md5_digest": "50388ac7142c562f624ac03ae0e82f3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36014, "upload_time": "2017-04-08T00:23:27", "upload_time_iso_8601": "2017-04-08T00:23:27.194847Z", "url": "https://files.pythonhosted.org/packages/de/16/9a8e12ddfb6cc6111dc3b757d62a125d8e26a84e6527bc5bb3a4269c6646/fauxmo-0.4.0.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "115f2c1bbe96f5e3caebe54bb5c06ad3", "sha256": "ac03703421881769a9a9c5638bc74c0e2d0abd670e4adf71e5835cf755538735"}, "downloads": -1, "filename": "fauxmo-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "115f2c1bbe96f5e3caebe54bb5c06ad3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28315, "upload_time": "2017-06-02T15:56:34", "upload_time_iso_8601": "2017-06-02T15:56:34.081822Z", "url": "https://files.pythonhosted.org/packages/2a/12/c8e089acee34816864660be157346e9f41c6f590d8ed05b096120af6be77/fauxmo-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "398b27876d379412eaab0bee15ea163d", "sha256": "f44a306cf74bc1f9a41661fffdaab83650d09e1102127c68cfe0216895ff7f15"}, "downloads": -1, "filename": "fauxmo-0.4.2.tar.gz", "has_sig": false, "md5_digest": "398b27876d379412eaab0bee15ea163d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36687, "upload_time": "2017-06-02T15:56:36", "upload_time_iso_8601": "2017-06-02T15:56:36.289054Z", "url": "https://files.pythonhosted.org/packages/5e/b8/5958db7b8f226fb117222ba1124e6a7938c03388ddd1b5d820933cddf2a8/fauxmo-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "f588cce6e167038ea659d414306b7d45", "sha256": "b64865b80fb4cc300ba1efe87f978a7a9ac74873fc7016dc6bbbd1b70eb2ae8a"}, "downloads": -1, "filename": "fauxmo-0.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f588cce6e167038ea659d414306b7d45", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 28661, "upload_time": "2017-09-14T16:46:47", "upload_time_iso_8601": "2017-09-14T16:46:47.953829Z", "url": "https://files.pythonhosted.org/packages/64/2d/a159438b2ba26cd6660e39057b915010538f11996482c85581bdea5f401b/fauxmo-0.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f928861b7c7cadc0cf8f85ffe34189c", "sha256": "fc58fccabd8f879843b3293a9ee6c7026eb2dd575c18d835eb3ff589d6d75a76"}, "downloads": -1, "filename": "fauxmo-0.4.3.tar.gz", "has_sig": false, "md5_digest": "6f928861b7c7cadc0cf8f85ffe34189c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 37006, "upload_time": "2017-09-14T16:46:50", "upload_time_iso_8601": "2017-09-14T16:46:50.187612Z", "url": "https://files.pythonhosted.org/packages/24/dd/caecc402c77a435b93a3be38aae298100e19fab631df23d88336bde55162/fauxmo-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "d6f4a88b3b9384faea0f7dd7dca63490", "sha256": "bde1fc4d3c2bd7771f6ccbb7bcd943c0072a5a66efb54ad5d469c0d2fbdfc787"}, "downloads": -1, "filename": "fauxmo-0.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d6f4a88b3b9384faea0f7dd7dca63490", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 28652, "upload_time": "2017-09-20T04:26:04", "upload_time_iso_8601": "2017-09-20T04:26:04.320871Z", "url": "https://files.pythonhosted.org/packages/85/39/25b2b0b59f28cc3372be9affdf38a8927558e0755da174bd0ad30174caa8/fauxmo-0.4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f382379f8cdec858f155a5cdb55f954b", "sha256": "a5e1837f9b2b73cd0ede58464736cfe59d867cea4957c1edfb1a3e95dc606b10"}, "downloads": -1, "filename": "fauxmo-0.4.4.tar.gz", "has_sig": false, "md5_digest": "f382379f8cdec858f155a5cdb55f954b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 37013, "upload_time": "2017-09-20T04:26:11", "upload_time_iso_8601": "2017-09-20T04:26:11.250018Z", "url": "https://files.pythonhosted.org/packages/c9/e1/d46b2ff3c8e2c95012f7459723c5c194a2151b36a5f361274f9d4846c498/fauxmo-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "0c6eacf4ae9a41718ee33172a4c1124f", "sha256": "1259af3dcde752cb87f1d70c9dfa60039f03ee271a92207b595b888a66164a93"}, "downloads": -1, "filename": "fauxmo-0.4.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0c6eacf4ae9a41718ee33172a4c1124f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30740, "upload_time": "2017-11-17T16:16:14", "upload_time_iso_8601": "2017-11-17T16:16:14.073056Z", "url": "https://files.pythonhosted.org/packages/19/20/ecd490fa3bf63c595d00729f315bc3cbc401c656f3bf3aff6d97468befb8/fauxmo-0.4.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cebc15e342ab45039f0539359a87f111", "sha256": "bd5d8626c6dbae36ae25c101c7792df37ae024ade3ac38afa5e6743e2e1c9d0a"}, "downloads": -1, "filename": "fauxmo-0.4.5.tar.gz", "has_sig": false, "md5_digest": "cebc15e342ab45039f0539359a87f111", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38551, "upload_time": "2017-11-17T16:16:18", "upload_time_iso_8601": "2017-11-17T16:16:18.937964Z", "url": "https://files.pythonhosted.org/packages/e0/97/087d5c0ca76e0d8c845fce35c822234052afa60e960c69fb72426c27b870/fauxmo-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "43cc28b0b969b3f55263e3fc17be02f0", "sha256": "6cff0ec3ee9eee291c173cdd9ad1a46f5d8f1ff875461f621618eb09bbf4a814"}, "downloads": -1, "filename": "fauxmo-0.4.6-py3-none-any.whl", "has_sig": false, "md5_digest": "43cc28b0b969b3f55263e3fc17be02f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32502, "upload_time": "2018-02-12T18:47:31", "upload_time_iso_8601": "2018-02-12T18:47:31.722695Z", "url": "https://files.pythonhosted.org/packages/12/1c/082425df2c25b2aee5058a7e9192a6b5bd5e19787e13514393728a198d40/fauxmo-0.4.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9689096d359dfb0d48897eb9d47a0ce", "sha256": "33a8b3269db70caf2fa3bd4e3beb5ef8f41b13c38d064dcede5be420733e10c8"}, "downloads": -1, "filename": "fauxmo-0.4.6.tar.gz", "has_sig": false, "md5_digest": "d9689096d359dfb0d48897eb9d47a0ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 40392, "upload_time": "2018-02-12T18:47:35", "upload_time_iso_8601": "2018-02-12T18:47:35.583751Z", "url": "https://files.pythonhosted.org/packages/f4/4e/306b7b884f130d8e3bce0bcb609c913e795403d6aba93811d678194485b2/fauxmo-0.4.6.tar.gz", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "f5c9f0fa4cf69674eeaa796d4445a2a9", "sha256": "f9690a5db8ce9f2d783def81fb2652d2a1c6d20c4755ae529f2da77874366602"}, "downloads": -1, "filename": "fauxmo-0.4.7-py3-none-any.whl", "has_sig": false, "md5_digest": "f5c9f0fa4cf69674eeaa796d4445a2a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 23216, "upload_time": "2018-05-12T20:33:56", "upload_time_iso_8601": "2018-05-12T20:33:56.220719Z", "url": "https://files.pythonhosted.org/packages/0d/17/440bdeb6672bb6658a620b049de1b59ec903373459872f4dcbd22a93d20b/fauxmo-0.4.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "919ae0816453403292f4acb80b2e025f", "sha256": "e67df3e917f05727afeb6de132fa46411e1870180dfe1463492a69718d248950"}, "downloads": -1, "filename": "fauxmo-0.4.7.tar.gz", "has_sig": false, "md5_digest": "919ae0816453403292f4acb80b2e025f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 41730, "upload_time": "2018-05-12T20:33:57", "upload_time_iso_8601": "2018-05-12T20:33:57.470157Z", "url": "https://files.pythonhosted.org/packages/41/bf/8a8935f3f0868143d5d87034398a988c5f86b46b0c12eda4f3c3e4b9ec4c/fauxmo-0.4.7.tar.gz", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "8c3dfe4624cfb0041ecc47bae39b2012", "sha256": "955868bd9d4b38ca412cd7e5b163683f1fce18984babd1bab7ef2f5f7d791f84"}, "downloads": -1, "filename": "fauxmo-0.4.8-py3-none-any.whl", "has_sig": false, "md5_digest": "8c3dfe4624cfb0041ecc47bae39b2012", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24676, "upload_time": "2018-10-16T22:14:20", "upload_time_iso_8601": "2018-10-16T22:14:20.832744Z", "url": "https://files.pythonhosted.org/packages/29/02/376ba0c18889e3bf277ca654716b663c4285ee80318b60a8f77275f27a85/fauxmo-0.4.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69641e61dd65a7a8b57b48921e98d0af", "sha256": "48a5d2eb2012390a5d6899ddcc39f9fb127019eaab2f0f18bc6854de3f729a12"}, "downloads": -1, "filename": "fauxmo-0.4.8.tar.gz", "has_sig": false, "md5_digest": "69641e61dd65a7a8b57b48921e98d0af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42468, "upload_time": "2018-10-16T22:14:22", "upload_time_iso_8601": "2018-10-16T22:14:22.423972Z", "url": "https://files.pythonhosted.org/packages/12/e6/fc19bb65b677478be13323c1782576460eb474de43e22ce6905b4535ff51/fauxmo-0.4.8.tar.gz", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "af5319e2a4637c069ec5411765c4e71e", "sha256": "c7d923867dffc31ee7248361973e848c2a864daeeacd459a99055aabac5d0966"}, "downloads": -1, "filename": "fauxmo-0.4.9-py3-none-any.whl", "has_sig": false, "md5_digest": "af5319e2a4637c069ec5411765c4e71e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24547, "upload_time": "2019-07-04T21:37:06", "upload_time_iso_8601": "2019-07-04T21:37:06.023040Z", "url": "https://files.pythonhosted.org/packages/9a/ac/9033cf25c07ce5ac99beceb693cb7116cb3ff2e4237cafcc158095e4dce2/fauxmo-0.4.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cb1a731126037182cde85fb9b4bc4a5", "sha256": "a48e4d728ddb653fc7fdc9b05e1a40230306e828e52cff33538d48ffd283a142"}, "downloads": -1, "filename": "fauxmo-0.4.9.tar.gz", "has_sig": false, "md5_digest": "5cb1a731126037182cde85fb9b4bc4a5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 37881, "upload_time": "2019-07-04T21:37:07", "upload_time_iso_8601": "2019-07-04T21:37:07.754385Z", "url": "https://files.pythonhosted.org/packages/c4/7e/2e1bb30f29e514758ef42162da8e4e19d347d6f5aebb616dea8f1cb94f04/fauxmo-0.4.9.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "8c537fa12c456cafaedd15e679beb8f0", "sha256": "e549a208ec002b5e9945bb51d9a5fc22e847a5e4f4f0eb1a347db8e036d8b6cb"}, "downloads": -1, "filename": "fauxmo-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8c537fa12c456cafaedd15e679beb8f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30376, "upload_time": "2019-12-17T19:16:16", "upload_time_iso_8601": "2019-12-17T19:16:16.035484Z", "url": "https://files.pythonhosted.org/packages/9b/45/1d79cdecba19695e33cc0e4f14f4f1248bf0b8b317e9ffa36b48d0ced594/fauxmo-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0bba63f3aa82ce9f1439e904c58d9ac2", "sha256": "b2460da398540974cb39566d5426903b1f4a965656f87d646fd8c1615725da33"}, "downloads": -1, "filename": "fauxmo-0.5.0.tar.gz", "has_sig": false, "md5_digest": "0bba63f3aa82ce9f1439e904c58d9ac2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 43498, "upload_time": "2019-12-17T19:16:18", "upload_time_iso_8601": "2019-12-17T19:16:18.502787Z", "url": "https://files.pythonhosted.org/packages/e7/be/3833b7203c7d6dd43a57fb81d3ce00c494618891a76081803a5538d089d7/fauxmo-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c537fa12c456cafaedd15e679beb8f0", "sha256": "e549a208ec002b5e9945bb51d9a5fc22e847a5e4f4f0eb1a347db8e036d8b6cb"}, "downloads": -1, "filename": "fauxmo-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8c537fa12c456cafaedd15e679beb8f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30376, "upload_time": "2019-12-17T19:16:16", "upload_time_iso_8601": "2019-12-17T19:16:16.035484Z", "url": "https://files.pythonhosted.org/packages/9b/45/1d79cdecba19695e33cc0e4f14f4f1248bf0b8b317e9ffa36b48d0ced594/fauxmo-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0bba63f3aa82ce9f1439e904c58d9ac2", "sha256": "b2460da398540974cb39566d5426903b1f4a965656f87d646fd8c1615725da33"}, "downloads": -1, "filename": "fauxmo-0.5.0.tar.gz", "has_sig": false, "md5_digest": "0bba63f3aa82ce9f1439e904c58d9ac2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 43498, "upload_time": "2019-12-17T19:16:18", "upload_time_iso_8601": "2019-12-17T19:16:18.502787Z", "url": "https://files.pythonhosted.org/packages/e7/be/3833b7203c7d6dd43a57fb81d3ce00c494618891a76081803a5538d089d7/fauxmo-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:19 2020"}