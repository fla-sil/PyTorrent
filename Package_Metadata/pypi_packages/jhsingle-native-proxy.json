{"info": {"author": "Dan Lester", "author_email": "dan@ideonate.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# jhsingle-native-proxy\n\nWrap an arbitrary webapp so it can be used in place of jupyter-singleuser in a JupyterHub setting.\n\nWithin JupyterHub this allows similar operation to [jupyter-server-proxy](https://github.com/jupyterhub/jupyter-server-proxy) except it also removes the Jupyter notebook itself, so is working directly with the arbitrary web service.\n\nOAuth authentication is enforced based on JUPYTERHUB_* environment variables.\n\nThis is a very basic alpha version.\n\n## Install and Run\n\nInstall using pip.\n\n```\npip install jhsingle-native-proxy\n```\n\nThe process to start is specified on the command line, for example a [streamlit](https://streamlit.io/) web app:\n\n```\njhsingle-native-proxy streamlit hello\n```\n\nBy default the jhsingle-native-proxy server will listen on port 8888, forwarding to port 8500.\n\nBut you will normally need to tell jhsingle-native-proxy which port the end process will run in, and maybe tell the \nend process which port you want it to use (which you can do with the substitution variable {port}).\n\nNote the use of -- to signal the end of command line options to jhsingle-native-proxy. Then the third party command line \nitself can contain options starting with dashes. An alternative is to use the substitution {--}\n\n```\njhsingle-native-proxy -- streamlit hello --server.port {port} --server.headless True --server.enableCORS False\n```\n\nTo run jhsingle-native-proxy itself listening on a different port use:\n\n```\njhsingle-native-proxy --port 8000 streamlit hello\n```\n\nTo run jhsingle-native-proxy on port 8000, and the end process on 8505:\n\n```\njhsingle-native-proxy --port 8000 --destport 8505 -- streamlit hello --server.port {port} --server.headless True --server.enableCORS False\n```\n\nUse the JUPYTERHUB_SERVICE_PREFIX env var to specify the first part of the URL to listen to (and then strip before forwarding). E.g. \nJUPYTERHUB_SERVICE_PREFIX=/user/dan will mean requests on http://localhost:8888/user/dan/something will forward to http://localhost:8500/something\n\nYou can also specify --ip 0.0.0.0 for the address to listen on.\n\nBelow we use the substitution {--} for the command to run, allowing us to specify --ip to jhsingle-native-proxy instead of the \ncommand being run.  \n\n```\njhsingle-native-proxy --port 8000 --destport 8505 streamlit hello {--}server.port {port} {--}server.headless True {--}server.enableCORS False --ip 0.0.0.0 \n```\n\n### Voila example:\n\nRunning voila at the subfolder URL e.g. /user/dan/:\n\n```\npython -m jhsingle_native_proxy.main --destport 0 voila ./Presentation.ipynb {--}port={port} {--}no-browser {--}Voila.server_url=/ {--}Voila.base_url={base_url}/ {--}debug\n```\n\n'destport 0' above instructs jhsingle-native-proxy to choose a random free port on which to run the sub-process (Voila), and of course substitutes that as {port} in the Voila command line so it knows which port to listen on.\n\n## Authentication\n\nThe above examples all assume OAuth will be enforced, as per the JUPYTERHUB_* env vars.\n\nAlternatives can be specified via the authtype flag:\n\nSame as default:\n\n```\njhsingle-native-proxy --authtype=oauth streamlit hello\n```\n\nNo auth required at all:\n\n```\njhsingle-native-proxy --authtype=none streamlit hello\n```\n\n### Specifying Authorized Users\n\nThe env vars JUPYTERHUB_USER and JUPYTERHUB_GROUP can be used, as typical for any JupyterHub single server, to specify user/groups of \nJupyterHub that should be allowed access via OAuth. There is an additional bespoke env var called JUPYTERHUB_ANYONE which can be set to 1 \nto allow any authenticated user access. (i.e. anyone who has an account on the JupyterHub)\n\n\n## Development install\n\n```\ngit clone https://github.com/ideonate/jhsingle-native-proxy.git\ncd jhsingle-native-proxy\n\npip install -e .\n```\n\nTo run directly in python: `python -m jhsingle_native_proxy.main <rest of command line>`", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ideonate/jhsingle-native-proxy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "jhsingle-native-proxy", "package_url": "https://pypi.org/project/jhsingle-native-proxy/", "platform": "", "project_url": "https://pypi.org/project/jhsingle-native-proxy/", "project_urls": {"Homepage": "https://github.com/ideonate/jhsingle-native-proxy"}, "release_url": "https://pypi.org/project/jhsingle-native-proxy/0.1.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Wrap an arbitrary webapp so it can be used in place of jupyter-singleuser in a JupyterHub setting", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>jhsingle-native-proxy</h1>\n<p>Wrap an arbitrary webapp so it can be used in place of jupyter-singleuser in a JupyterHub setting.</p>\n<p>Within JupyterHub this allows similar operation to <a href=\"https://github.com/jupyterhub/jupyter-server-proxy\" rel=\"nofollow\">jupyter-server-proxy</a> except it also removes the Jupyter notebook itself, so is working directly with the arbitrary web service.</p>\n<p>OAuth authentication is enforced based on JUPYTERHUB_* environment variables.</p>\n<p>This is a very basic alpha version.</p>\n<h2>Install and Run</h2>\n<p>Install using pip.</p>\n<pre><code>pip install jhsingle-native-proxy\n</code></pre>\n<p>The process to start is specified on the command line, for example a <a href=\"https://streamlit.io/\" rel=\"nofollow\">streamlit</a> web app:</p>\n<pre><code>jhsingle-native-proxy streamlit hello\n</code></pre>\n<p>By default the jhsingle-native-proxy server will listen on port 8888, forwarding to port 8500.</p>\n<p>But you will normally need to tell jhsingle-native-proxy which port the end process will run in, and maybe tell the\nend process which port you want it to use (which you can do with the substitution variable {port}).</p>\n<p>Note the use of -- to signal the end of command line options to jhsingle-native-proxy. Then the third party command line\nitself can contain options starting with dashes. An alternative is to use the substitution {--}</p>\n<pre><code>jhsingle-native-proxy -- streamlit hello --server.port {port} --server.headless True --server.enableCORS False\n</code></pre>\n<p>To run jhsingle-native-proxy itself listening on a different port use:</p>\n<pre><code>jhsingle-native-proxy --port 8000 streamlit hello\n</code></pre>\n<p>To run jhsingle-native-proxy on port 8000, and the end process on 8505:</p>\n<pre><code>jhsingle-native-proxy --port 8000 --destport 8505 -- streamlit hello --server.port {port} --server.headless True --server.enableCORS False\n</code></pre>\n<p>Use the JUPYTERHUB_SERVICE_PREFIX env var to specify the first part of the URL to listen to (and then strip before forwarding). E.g.\nJUPYTERHUB_SERVICE_PREFIX=/user/dan will mean requests on <a href=\"http://localhost:8888/user/dan/something\" rel=\"nofollow\">http://localhost:8888/user/dan/something</a> will forward to <a href=\"http://localhost:8500/something\" rel=\"nofollow\">http://localhost:8500/something</a></p>\n<p>You can also specify --ip 0.0.0.0 for the address to listen on.</p>\n<p>Below we use the substitution {--} for the command to run, allowing us to specify --ip to jhsingle-native-proxy instead of the\ncommand being run.</p>\n<pre><code>jhsingle-native-proxy --port 8000 --destport 8505 streamlit hello {--}server.port {port} {--}server.headless True {--}server.enableCORS False --ip 0.0.0.0 \n</code></pre>\n<h3>Voila example:</h3>\n<p>Running voila at the subfolder URL e.g. /user/dan/:</p>\n<pre><code>python -m jhsingle_native_proxy.main --destport 0 voila ./Presentation.ipynb {--}port={port} {--}no-browser {--}Voila.server_url=/ {--}Voila.base_url={base_url}/ {--}debug\n</code></pre>\n<p>'destport 0' above instructs jhsingle-native-proxy to choose a random free port on which to run the sub-process (Voila), and of course substitutes that as {port} in the Voila command line so it knows which port to listen on.</p>\n<h2>Authentication</h2>\n<p>The above examples all assume OAuth will be enforced, as per the JUPYTERHUB_* env vars.</p>\n<p>Alternatives can be specified via the authtype flag:</p>\n<p>Same as default:</p>\n<pre><code>jhsingle-native-proxy --authtype=oauth streamlit hello\n</code></pre>\n<p>No auth required at all:</p>\n<pre><code>jhsingle-native-proxy --authtype=none streamlit hello\n</code></pre>\n<h3>Specifying Authorized Users</h3>\n<p>The env vars JUPYTERHUB_USER and JUPYTERHUB_GROUP can be used, as typical for any JupyterHub single server, to specify user/groups of\nJupyterHub that should be allowed access via OAuth. There is an additional bespoke env var called JUPYTERHUB_ANYONE which can be set to 1\nto allow any authenticated user access. (i.e. anyone who has an account on the JupyterHub)</p>\n<h2>Development install</h2>\n<pre><code>git clone https://github.com/ideonate/jhsingle-native-proxy.git\ncd jhsingle-native-proxy\n\npip install -e .\n</code></pre>\n<p>To run directly in python: <code>python -m jhsingle_native_proxy.main &lt;rest of command line&gt;</code></p>\n\n          </div>"}, "last_serial": 7150521, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b29748d7919838f38e887e99fda3abec", "sha256": "6ed0e19d4c08ce242b277d99141aa52253f86054549ae0173232d92c49626fad"}, "downloads": -1, "filename": "jhsingle-native-proxy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b29748d7919838f38e887e99fda3abec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13801, "upload_time": "2020-02-27T16:26:10", "upload_time_iso_8601": "2020-02-27T16:26:10.944564Z", "url": "https://files.pythonhosted.org/packages/d8/f0/82a8f0300f33b541f2b30d03040b03a59b9da87c95fd1c70e4121e17e323/jhsingle-native-proxy-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "ac6560ee14601d7f02ed37e350f6a9d1", "sha256": "9cf749696074397a13c9c91668358a91003e5a7bc6592471bb69e6514add4b50"}, "downloads": -1, "filename": "jhsingle-native-proxy-0.0.10.tar.gz", "has_sig": false, "md5_digest": "ac6560ee14601d7f02ed37e350f6a9d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15811, "upload_time": "2020-03-05T11:26:34", "upload_time_iso_8601": "2020-03-05T11:26:34.626789Z", "url": "https://files.pythonhosted.org/packages/a8/94/e3ce480a071fba78b080ff8c0adfa39e3f601c4320cec4fdc45bc3a1ffc4/jhsingle-native-proxy-0.0.10.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "88d38ee5218491c0a0a3dde3d9862a89", "sha256": "8acc987510fd2d0ea2cddc8647c7b5294ab232b1809d9a598e0e8781704f2ca5"}, "downloads": -1, "filename": "jhsingle-native-proxy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "88d38ee5218491c0a0a3dde3d9862a89", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14062, "upload_time": "2020-02-27T16:45:27", "upload_time_iso_8601": "2020-02-27T16:45:27.421959Z", "url": "https://files.pythonhosted.org/packages/12/81/76e7fadd2d77b4d34b3f331647805c8c81a5f83022dad942d9db00a661ee/jhsingle-native-proxy-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0e9109f63ffcc5bcd69ba6e8d6ec7f1e", "sha256": "4c5effce5326eb729af0a5c3bca940ac4f9c0739c0070889d4e70a1bd0172d47"}, "downloads": -1, "filename": "jhsingle-native-proxy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0e9109f63ffcc5bcd69ba6e8d6ec7f1e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14341, "upload_time": "2020-02-27T17:32:55", "upload_time_iso_8601": "2020-02-27T17:32:55.785790Z", "url": "https://files.pythonhosted.org/packages/5f/90/2b8b07d3bd4f30f07e901feaf8237baaa5971401169eb0ccd24366b07b76/jhsingle-native-proxy-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "8c3c83b79b447a337eb91eddab78262c", "sha256": "5a5ec55059fe47e4d08c080f93662bf4926580e8b16dad0d5b090bd9d84fa9e1"}, "downloads": -1, "filename": "jhsingle-native-proxy-0.0.4.tar.gz", "has_sig": false, "md5_digest": "8c3c83b79b447a337eb91eddab78262c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14480, "upload_time": "2020-02-28T09:44:21", "upload_time_iso_8601": "2020-02-28T09:44:21.009065Z", "url": "https://files.pythonhosted.org/packages/ef/99/a801ee4e3e1a924bcf1063f3ae87457dbcfc2969a160e3b351833320bb0a/jhsingle-native-proxy-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "4bd60ddfdc770897c5ba0c051155f3d0", "sha256": "43226739c979b55997dfb427cefad6abfd7876ff5e70c910806956c749177058"}, "downloads": -1, "filename": "jhsingle-native-proxy-0.0.5.tar.gz", "has_sig": false, "md5_digest": "4bd60ddfdc770897c5ba0c051155f3d0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14534, "upload_time": "2020-02-28T11:01:31", "upload_time_iso_8601": "2020-02-28T11:01:31.446318Z", "url": "https://files.pythonhosted.org/packages/76/9c/887e54bf2e800817c000ddaf292b2992563f5db969e5cca5113490402a7e/jhsingle-native-proxy-0.0.5.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "6c595697b315a74d7d8ade76fe08ed1e", "sha256": "6a3c5b94ff95701f6d7a11c95b5ccea9dc78a00fa4ffdeb5b92e2006e38b797c"}, "downloads": -1, "filename": "jhsingle-native-proxy-0.0.7.tar.gz", "has_sig": false, "md5_digest": "6c595697b315a74d7d8ade76fe08ed1e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14837, "upload_time": "2020-03-02T12:42:14", "upload_time_iso_8601": "2020-03-02T12:42:14.831648Z", "url": "https://files.pythonhosted.org/packages/73/a7/e8cb025fbe3d94b6816ed3eb8d8bb47775246c15a0838b7bc1afba586411/jhsingle-native-proxy-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "6a99357e6f6940cedb8dbe410fe6e9da", "sha256": "dc6fc65767f372592346b5fbd64bfeee53f448982136a15a251290de0480115b"}, "downloads": -1, "filename": "jhsingle-native-proxy-0.0.8.tar.gz", "has_sig": false, "md5_digest": "6a99357e6f6940cedb8dbe410fe6e9da", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14994, "upload_time": "2020-03-04T10:55:36", "upload_time_iso_8601": "2020-03-04T10:55:36.012675Z", "url": "https://files.pythonhosted.org/packages/29/27/a145bd709b62c5cd111a4404207efb651a731012ee89d908012a8b808234/jhsingle-native-proxy-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "531c3d1d59e48bab04b5005c273559ec", "sha256": "83cd58ca98d4b3082447044f5722a23ae99bcc05c7c38201a9a20f02f04115be"}, "downloads": -1, "filename": "jhsingle-native-proxy-0.0.9.tar.gz", "has_sig": false, "md5_digest": "531c3d1d59e48bab04b5005c273559ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15601, "upload_time": "2020-03-04T13:04:55", "upload_time_iso_8601": "2020-03-04T13:04:55.144168Z", "url": "https://files.pythonhosted.org/packages/dd/d2/750d273dfcc295ae8c3a6efe97cf924eb44772f53c09f5dba255b478bda2/jhsingle-native-proxy-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "c66c8683d48754119963edb5fe1270c9", "sha256": "da7e2d73dff8970f5b391c8090e0cc3db7c3bed5ee4849b2a103b11b37e3af89"}, "downloads": -1, "filename": "jhsingle-native-proxy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c66c8683d48754119963edb5fe1270c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16008, "upload_time": "2020-04-06T14:15:03", "upload_time_iso_8601": "2020-04-06T14:15:03.006727Z", "url": "https://files.pythonhosted.org/packages/ae/45/2ff7c0c5f4c4de0178aad84a52bee04f4ccd2cfd16a8016b75fd123bf43b/jhsingle-native-proxy-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "90390dd253f43d6654adea64f5021e72", "sha256": "55306a40c22b50ef80734764a9374bd58c65188aa38400bd1d954e1a15b4a187"}, "downloads": -1, "filename": "jhsingle-native-proxy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "90390dd253f43d6654adea64f5021e72", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16186, "upload_time": "2020-05-02T09:34:58", "upload_time_iso_8601": "2020-05-02T09:34:58.621343Z", "url": "https://files.pythonhosted.org/packages/d2/8a/51948ffddcfe42b113a70831f85593173f9498da336389a48001c1ae8010/jhsingle-native-proxy-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "90390dd253f43d6654adea64f5021e72", "sha256": "55306a40c22b50ef80734764a9374bd58c65188aa38400bd1d954e1a15b4a187"}, "downloads": -1, "filename": "jhsingle-native-proxy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "90390dd253f43d6654adea64f5021e72", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16186, "upload_time": "2020-05-02T09:34:58", "upload_time_iso_8601": "2020-05-02T09:34:58.621343Z", "url": "https://files.pythonhosted.org/packages/d2/8a/51948ffddcfe42b113a70831f85593173f9498da336389a48001c1ae8010/jhsingle-native-proxy-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:45 2020"}