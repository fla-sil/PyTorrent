{"info": {"author": "Michael Kerrin", "author_email": "michael.kerrin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Markup :: HTML"], "description": "About\n=====\n\npwt.jinja2js is an extension to the Jinja2 template engine that compiles\nvalid Jinja2 templates containing macros to JavaScript. The JavaScript output\ncan be included via script tags or can be added to the applications JavaScript.\n\nNutshell\n--------\n\nHere a small example of a Jinja template::\n\n     {% namespace ns1 %}\n\n     {% macro printusers(users) %}\n     <ul>\n     {% for user in users %}\n         <li><a href=\"{{ user.url }}\">{{ user.username }}</a></li>\n     {% endfor %}\n     </ul>\n     {% endmacro %}\n\n\nWhich after running through the pwt.jinja2js compiler we need up the\nfollowing JavaScript::\n\n     if (typeof ns1 == 'undefined') { var ns1 = {}; }\n\n     ns1.printusers = function(opt_data, opt_sb, opt_caller) {\n        var output = '';\n        output += '\\n<ul>\\n';\n        var userList = opt_data.users;\n        var userListLen = userList.length;\n        for (var userIndex = 0; userIndex < userListLen; userIndex++) {\n            var userData = userList[userIndex];\n            output += '\\n   <li><a href=\"' + userData.url + '\">' + userData.username + '</a></li>\\n';\n        }\n        output += '\\n</ul>\\n';\n        return output;\n     }\n\nBy slipping a switch we can produce Java Script that takes advantage of\n`Closure Library`_::\n\n     goog.provide('ns1');\n\n     goog.require('soy');\n\n     ns1.printusers = function(opt_data, opt_sb) {\n        var output = opt_sb || new soy.StringBuilder();\n        output.append('\\n<ul>\\n');\n        var userList = opt_data.users;\n        var userListLen = userList.length;\n        for (var userIndex = 0; userIndex < userListLen; userIndex++) {\n            var userData = userList[userIndex];\n            output.append('\\n   <li><a href=\"', userData.url, '\">', userData.username, '</a></li>\\n');\n        }\n        output.append('\\n</ul>\\n');\n        if (!opt_sb) return output.toString();\n     }\n\nMore user documentation is available on the `pwt.jinja2js PyPI package page`_.\nThe `Jinja2`_ site is also available to learn more about the Jinja2 syntax.\n\n.. _Closure Library: http://code.google.com/closure/library/\n.. _pwt.jinja2js PyPI package page: http://packages.python.org/pwt.jinja2js/\n.. _Jinja2: http://jinja.pocoo.org/docs/\n\nDevloper information\n====================\n\nIn order to get started with this project and to see what it can do:\n\n * git clone git://github.com/mkerrin/pwt.jinja2js.git\n * cd pwt.jinja2js\n * python bootstrap\n * ./bin/buildout\n\nTesting\n=======\n\nTo run the tests run\n\n * ./bin/test -v\n\nTo run a basic server in order to run the JavaScript tests.\n\n * ./bin/serve --reload\n\nTo run the JavaScript tests open a browser and load the url::\n\n  http://localhost:8000/\n\nThere is links to two test suites from there.", "description_content_type": null, "docs_url": "https://pythonhosted.org/pwt.jinja2js/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mkerrin/pwt.jinja2js", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "pwt.jinja2js", "package_url": "https://pypi.org/project/pwt.jinja2js/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pwt.jinja2js/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mkerrin/pwt.jinja2js"}, "release_url": "https://pypi.org/project/pwt.jinja2js/0.8.1/", "requires_dist": null, "requires_python": null, "summary": "pwt.jinja2js is an extension to the Jinja2 template engine that compiles\nvalid Jinja2 templates containing macros to JavaScript. The JavaScript output\ncan be included via script tags or can be added to the applications JavaScript.", "version": "0.8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p>pwt.jinja2js is an extension to the Jinja2 template engine that compiles\nvalid Jinja2 templates containing macros to JavaScript. The JavaScript output\ncan be included via script tags or can be added to the applications JavaScript.</p>\n<div id=\"nutshell\">\n<h3>Nutshell</h3>\n<p>Here a small example of a Jinja template:</p>\n<pre>{% namespace ns1 %}\n\n{% macro printusers(users) %}\n&lt;ul&gt;\n{% for user in users %}\n    &lt;li&gt;&lt;a href=\"{{ user.url }}\"&gt;{{ user.username }}&lt;/a&gt;&lt;/li&gt;\n{% endfor %}\n&lt;/ul&gt;\n{% endmacro %}\n</pre>\n<p>Which after running through the pwt.jinja2js compiler we need up the\nfollowing JavaScript:</p>\n<pre>if (typeof ns1 == 'undefined') { var ns1 = {}; }\n\nns1.printusers = function(opt_data, opt_sb, opt_caller) {\n   var output = '';\n   output += '\\n&lt;ul&gt;\\n';\n   var userList = opt_data.users;\n   var userListLen = userList.length;\n   for (var userIndex = 0; userIndex &lt; userListLen; userIndex++) {\n       var userData = userList[userIndex];\n       output += '\\n   &lt;li&gt;&lt;a href=\"' + userData.url + '\"&gt;' + userData.username + '&lt;/a&gt;&lt;/li&gt;\\n';\n   }\n   output += '\\n&lt;/ul&gt;\\n';\n   return output;\n}\n</pre>\n<p>By slipping a switch we can produce Java Script that takes advantage of\n<a href=\"http://code.google.com/closure/library/\" rel=\"nofollow\">Closure Library</a>:</p>\n<pre>goog.provide('ns1');\n\ngoog.require('soy');\n\nns1.printusers = function(opt_data, opt_sb) {\n   var output = opt_sb || new soy.StringBuilder();\n   output.append('\\n&lt;ul&gt;\\n');\n   var userList = opt_data.users;\n   var userListLen = userList.length;\n   for (var userIndex = 0; userIndex &lt; userListLen; userIndex++) {\n       var userData = userList[userIndex];\n       output.append('\\n   &lt;li&gt;&lt;a href=\"', userData.url, '\"&gt;', userData.username, '&lt;/a&gt;&lt;/li&gt;\\n');\n   }\n   output.append('\\n&lt;/ul&gt;\\n');\n   if (!opt_sb) return output.toString();\n}\n</pre>\n<p>More user documentation is available on the <a href=\"http://packages.python.org/pwt.jinja2js/\" rel=\"nofollow\">pwt.jinja2js PyPI package page</a>.\nThe <a href=\"http://jinja.pocoo.org/docs/\" rel=\"nofollow\">Jinja2</a> site is also available to learn more about the Jinja2 syntax.</p>\n</div>\n</div>\n<div id=\"devloper-information\">\n<h2>Devloper information</h2>\n<p>In order to get started with this project and to see what it can do:</p>\n<blockquote>\n<ul>\n<li>git clone git://github.com/mkerrin/pwt.jinja2js.git</li>\n<li>cd pwt.jinja2js</li>\n<li>python bootstrap</li>\n<li>./bin/buildout</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To run the tests run</p>\n<blockquote>\n<ul>\n<li>./bin/test -v</li>\n</ul>\n</blockquote>\n<p>To run a basic server in order to run the JavaScript tests.</p>\n<blockquote>\n<ul>\n<li>./bin/serve \u2013reload</li>\n</ul>\n</blockquote>\n<p>To run the JavaScript tests open a browser and load the url:</p>\n<pre>http://localhost:8000/\n</pre>\n<p>There is links to two test suites from there.</p>\n</div>\n\n          </div>"}, "last_serial": 796824, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "c5a5d801465ce98331e9255f611b6ffd", "sha256": "2c6a713c5c73af745c1ff3670df50dd404dbf4464b3845c24e848b2d0d77ea54"}, "downloads": -1, "filename": "pwt.jinja2js-0.5.tar.gz", "has_sig": false, "md5_digest": "c5a5d801465ce98331e9255f611b6ffd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121727, "upload_time": "2011-04-01T17:17:15", "upload_time_iso_8601": "2011-04-01T17:17:15.966562Z", "url": "https://files.pythonhosted.org/packages/ac/ac/bc0b670a2810c4b62ca404dd086b718dfa122b516afe1822e471fcf8b5eb/pwt.jinja2js-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "ad278864d274ace562fa254bef3b2a5b", "sha256": "b2d43398bc4043dbabee80b997bdd7bedc03580bcd7758be6d6dc15c48893de7"}, "downloads": -1, "filename": "pwt.jinja2js-0.5.1.tar.gz", "has_sig": false, "md5_digest": "ad278864d274ace562fa254bef3b2a5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121806, "upload_time": "2011-04-01T17:24:11", "upload_time_iso_8601": "2011-04-01T17:24:11.503487Z", "url": "https://files.pythonhosted.org/packages/dc/d2/a5ab08d71b3e30efb58cad3b11d354397c3e5005c0014417a272557088bd/pwt.jinja2js-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "0c4efa0f7bb2e6be5d23e0a11b6fb854", "sha256": "cce069960f1fa186993294733497ea35f9060ec0b89c2eaae27a763818dbbaa9"}, "downloads": -1, "filename": "pwt.jinja2js-0.6.0.tar.gz", "has_sig": false, "md5_digest": "0c4efa0f7bb2e6be5d23e0a11b6fb854", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 123561, "upload_time": "2011-04-05T12:06:39", "upload_time_iso_8601": "2011-04-05T12:06:39.685877Z", "url": "https://files.pythonhosted.org/packages/55/c5/54b61fa975ec470c68cdbb78d327a28685aaacb6eb57018b87cf2c342d78/pwt.jinja2js-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "bac7c1b18dab1e1bd4253bc4e7a8f8cd", "sha256": "1c0a063909a51cbdc8e08e7ed274218ef5002791c63c5bc8ca37155c2c6b8abf"}, "downloads": -1, "filename": "pwt.jinja2js-0.7.0.tar.gz", "has_sig": false, "md5_digest": "bac7c1b18dab1e1bd4253bc4e7a8f8cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110805, "upload_time": "2011-05-20T16:48:39", "upload_time_iso_8601": "2011-05-20T16:48:39.162132Z", "url": "https://files.pythonhosted.org/packages/37/16/497a8c8a580dbb7c40f2378df7b202e0c30876b410c9fb660ecbff9bf1aa/pwt.jinja2js-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "a587203079328b4993b69742d8a71ea4", "sha256": "53b38935ee6d20dccd1fc9321bd5e3b71e26b8fc58079235ed4ec4be47398ae2"}, "downloads": -1, "filename": "pwt.jinja2js-0.7.1.tar.gz", "has_sig": false, "md5_digest": "a587203079328b4993b69742d8a71ea4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111642, "upload_time": "2011-07-11T11:01:18", "upload_time_iso_8601": "2011-07-11T11:01:18.482943Z", "url": "https://files.pythonhosted.org/packages/c5/9a/4bc6e7c123287ca403c47c13e1b9dd701c750a56b5a49764186bad4903bc/pwt.jinja2js-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "735d7c70b2e5835e437c706f3cfcf323", "sha256": "8e16372a6ce8e56f217bc622e9370d1d28973252f26b449909f0abafedef0581"}, "downloads": -1, "filename": "pwt.jinja2js-0.7.2.tar.gz", "has_sig": false, "md5_digest": "735d7c70b2e5835e437c706f3cfcf323", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111755, "upload_time": "2011-07-12T13:23:46", "upload_time_iso_8601": "2011-07-12T13:23:46.189648Z", "url": "https://files.pythonhosted.org/packages/b8/37/3b1f8ee7b348b6ec036df9cbb359252a3a95040cccb85f17189332662178/pwt.jinja2js-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "ca46f1f7d2c1d5c1f477ed3662bd544e", "sha256": "890cea9e6297564ea8868935121450d9880886fb6d64a84d3b7fab188157f5ed"}, "downloads": -1, "filename": "pwt.jinja2js-0.7.3.tar.gz", "has_sig": false, "md5_digest": "ca46f1f7d2c1d5c1f477ed3662bd544e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111810, "upload_time": "2011-10-25T17:35:09", "upload_time_iso_8601": "2011-10-25T17:35:09.629206Z", "url": "https://files.pythonhosted.org/packages/a1/31/dc3b41131892b7517046d734fff155b6a8c82c4d280a33df89eb66cd2843/pwt.jinja2js-0.7.3.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "0a1f44f6cdef97ecc8757262d04ad856", "sha256": "83a7974dcdbc2cf3a7c0c98d8ac3abcd4b5b7d10c3a6bba06197476e44cd647a"}, "downloads": -1, "filename": "pwt.jinja2js-0.8.1.tar.gz", "has_sig": false, "md5_digest": "0a1f44f6cdef97ecc8757262d04ad856", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68824, "upload_time": "2013-02-28T14:50:09", "upload_time_iso_8601": "2013-02-28T14:50:09.775480Z", "url": "https://files.pythonhosted.org/packages/40/d9/f5d6ef2c82ffff2a77fdb603f8705202b6a7cd68d939a9be986cd17bd437/pwt.jinja2js-0.8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a1f44f6cdef97ecc8757262d04ad856", "sha256": "83a7974dcdbc2cf3a7c0c98d8ac3abcd4b5b7d10c3a6bba06197476e44cd647a"}, "downloads": -1, "filename": "pwt.jinja2js-0.8.1.tar.gz", "has_sig": false, "md5_digest": "0a1f44f6cdef97ecc8757262d04ad856", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68824, "upload_time": "2013-02-28T14:50:09", "upload_time_iso_8601": "2013-02-28T14:50:09.775480Z", "url": "https://files.pythonhosted.org/packages/40/d9/f5d6ef2c82ffff2a77fdb603f8705202b6a7cd68d939a9be986cd17bd437/pwt.jinja2js-0.8.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:40 2020"}