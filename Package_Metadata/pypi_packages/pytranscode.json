{"info": {"author": "Martin P. Buhr", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "PyTranscode Readme\n==================\n\nCopyright (C) 2009  Martin P. Buhr (http://lonelycode.com / twitter: @lonelycode)\n\nPyTranscode is a set of scripts to make handling ffmpeg easier in python,\nit enables video information extraction, transcoding, presets, splash image\nextraction (multiple) and state reporting (percentage complete)\n\nContents:\n=========\n\n1. What is this?\n2. Hopeful Roadmap\n3. How to use the scripts\n4. License\n\n\n1. What is this?\n================\n\nA while back I wrote a proof-of-concept webapp that basically replicated what\nBrightcove and other online video management tools did, and at its heart was a\ntool to control FFMPEG - one of the best command-line transcoders out there.\n\nNow the webapp never took off (it was never launched, pending a rewrite), but\nI had started on rewriting the engine that would control the transcoder software.\n\nI've since moved my limited attention span to other, shineir things, but thought\nI would release this piece of rather nifty and handy code to the public to help\nothers who want to do something with video and don;t want to fork out a fortune.\n\n2. Hopeful Roadmap\n==================\n\nPyTranscode is hopefully going to be part of something bigger - the vision is to\nproduce a set of django applications which can do the following:\n\n- A storage engine for local or cloud-based storage\n- A queue manager for scaling, this again would have vairous back-ends for local\n  queue management or something like Amazon Queue Service\n- A transcode server that can be run on multpile machines and be managed via an\n  API OR be run in a mode to interact with the queue service\n- An API wrapper to control the transcode-server for common tasks\n\n3. How to use the scripts\n=========================\n\nThere are five files with PyTranscode, these have the following basic functionsality:\n\n- ffmpeg.py:    Can be used to build a command line to run ffmpeg for various\n                settings with input/output\n\n- presets.py:   Some presets to use with ffmpeg if you can;t be bothered to\n                write out the long dictionaries some transcodes require\n\n- runner.py:    Runner basically allows you to run ffmpeg in a managed way and\n                trap the output as well as the percentage complete\n\n- splash.py:    This will let you pull thumbnails at equal intervals from the\n                inpout file and return the filenames\n\n- video_info:   Need to know everything about a video file? This basically parses\n                the -i output from ffmpeg to get all the details and present\n                them as a class\n\nDepending on what you need, the documentation on how to use each one is in the\nheader of the file.\n\nIf you want to see a test run, there's the file test.py which should show an easy\nway to get started with these classes.\n\n4. License\n==========\n\nCopyright (C) 2009  Martin P. Buhr (http://lonelycode.com / twitter: @lonelycode)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nIF YOU USE THIS SOFTWARE DO US A FAVOR AND LET ME KNOW :-)\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "pytranscode", "package_url": "https://pypi.org/project/pytranscode/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pytranscode/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/pytranscode/0.0.0/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pytranscode-readme\">\n<h2>PyTranscode Readme</h2>\n<p>Copyright (C) 2009  Martin P. Buhr (<a href=\"http://lonelycode.com\" rel=\"nofollow\">http://lonelycode.com</a> / twitter: @lonelycode)</p>\n<p>PyTranscode is a set of scripts to make handling ffmpeg easier in python,\nit enables video information extraction, transcoding, presets, splash image\nextraction (multiple) and state reporting (percentage complete)</p>\n</div>\n<div id=\"contents\">\n<h2>Contents:</h2>\n<ol>\n<li>What is this?</li>\n<li>Hopeful Roadmap</li>\n<li>How to use the scripts</li>\n<li>License</li>\n</ol>\n</div>\n<div id=\"what-is-this\">\n<h2>1. What is this?</h2>\n<p>A while back I wrote a proof-of-concept webapp that basically replicated what\nBrightcove and other online video management tools did, and at its heart was a\ntool to control FFMPEG - one of the best command-line transcoders out there.</p>\n<p>Now the webapp never took off (it was never launched, pending a rewrite), but\nI had started on rewriting the engine that would control the transcoder software.</p>\n<p>I\u2019ve since moved my limited attention span to other, shineir things, but thought\nI would release this piece of rather nifty and handy code to the public to help\nothers who want to do something with video and don;t want to fork out a fortune.</p>\n</div>\n<div id=\"hopeful-roadmap\">\n<h2>2. Hopeful Roadmap</h2>\n<p>PyTranscode is hopefully going to be part of something bigger - the vision is to\nproduce a set of django applications which can do the following:</p>\n<ul>\n<li>A storage engine for local or cloud-based storage</li>\n<li>A queue manager for scaling, this again would have vairous back-ends for local\nqueue management or something like Amazon Queue Service</li>\n<li>A transcode server that can be run on multpile machines and be managed via an\nAPI OR be run in a mode to interact with the queue service</li>\n<li>An API wrapper to control the transcode-server for common tasks</li>\n</ul>\n</div>\n<div id=\"how-to-use-the-scripts\">\n<h2>3. How to use the scripts</h2>\n<p>There are five files with PyTranscode, these have the following basic functionsality:</p>\n<ul>\n<li><dl>\n<dt>ffmpeg.py:    Can be used to build a command line to run ffmpeg for various</dt>\n<dd>settings with input/output</dd>\n</dl>\n</li>\n<li><dl>\n<dt>presets.py:   Some presets to use with ffmpeg if you can;t be bothered to</dt>\n<dd>write out the long dictionaries some transcodes require</dd>\n</dl>\n</li>\n<li><dl>\n<dt>runner.py:    Runner basically allows you to run ffmpeg in a managed way and</dt>\n<dd>trap the output as well as the percentage complete</dd>\n</dl>\n</li>\n<li><dl>\n<dt>splash.py:    This will let you pull thumbnails at equal intervals from the</dt>\n<dd>inpout file and return the filenames</dd>\n</dl>\n</li>\n<li><dl>\n<dt>video_info:   Need to know everything about a video file? This basically parses</dt>\n<dd>the -i output from ffmpeg to get all the details and present\nthem as a class</dd>\n</dl>\n</li>\n</ul>\n<p>Depending on what you need, the documentation on how to use each one is in the\nheader of the file.</p>\n<p>If you want to see a test run, there\u2019s the file test.py which should show an easy\nway to get started with these classes.</p>\n</div>\n<div id=\"license\">\n<h2>4. License</h2>\n<p>Copyright (C) 2009  Martin P. Buhr (<a href=\"http://lonelycode.com\" rel=\"nofollow\">http://lonelycode.com</a> / twitter: @lonelycode)</p>\n<p>This program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.</p>\n<p>This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.</p>\n<p>You should have received a copy of the GNU General Public License\nalong with this program.  If not, see &lt;<a href=\"http://www.gnu.org/licenses/\" rel=\"nofollow\">http://www.gnu.org/licenses/</a>&gt;.</p>\n<p>IF YOU USE THIS SOFTWARE DO US A FAVOR AND LET ME KNOW :-)</p>\n</div>\n\n          </div>"}, "last_serial": 798181, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "026b62aea435a7a3cd7567f9a539a6f2", "sha256": "f1619d853c0edb27345dfad907073fcd1b690b72a6da206eb49117ec9ffc6699"}, "downloads": -1, "filename": "pytranscode-0.0.0.tar.gz", "has_sig": false, "md5_digest": "026b62aea435a7a3cd7567f9a539a6f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7481, "upload_time": "2013-03-09T11:56:19", "upload_time_iso_8601": "2013-03-09T11:56:19.664534Z", "url": "https://files.pythonhosted.org/packages/f9/54/73d26f043eb6bf6563366bd102b5459adf72daec3133e778745b06239944/pytranscode-0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "026b62aea435a7a3cd7567f9a539a6f2", "sha256": "f1619d853c0edb27345dfad907073fcd1b690b72a6da206eb49117ec9ffc6699"}, "downloads": -1, "filename": "pytranscode-0.0.0.tar.gz", "has_sig": false, "md5_digest": "026b62aea435a7a3cd7567f9a539a6f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7481, "upload_time": "2013-03-09T11:56:19", "upload_time_iso_8601": "2013-03-09T11:56:19.664534Z", "url": "https://files.pythonhosted.org/packages/f9/54/73d26f043eb6bf6563366bd102b5459adf72daec3133e778745b06239944/pytranscode-0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:22 2020"}