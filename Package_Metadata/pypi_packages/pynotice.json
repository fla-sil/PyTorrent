{"info": {"author": "shaoeric", "author_email": "shaoeric@foxmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## Introduction\n##### README: [English](https://github.com/shaoeric/pynotice/blob/master/README.md)|[&#x4E2D;&#x6587;](https://github.com/shaoeric/pynotice/blob/master/README-cn.md)\npynotice is a python3 module that can play a sound or send an email to inform you when your function finishes or goes wrong. \n\n#### Features\n___\n- Use default or custom wav file\n- Send email with an attachment of pictures or txt files\n- python decorator\n- No need specifying smtp server address, of course you can do it\n\n#### Installation\n___\nonly for python3 \n```\npip install pynotice\n```\n\n#### Usage\n___\n##### -Sound- [duplicated]\n##### inform you by playing sound when your function finishes\n```python\nfrom pynotice.sound.notice import noticeOnFinish\n\n@noticeOnFinish()\ndef foo(name=\"foooo\"):  # your function\n    return name\n\nret = foo()\nprint(ret)\n```\n##### inform you by playing sound when your function goes wrong\n```python\nfrom pynotice.sound.notice import noticeOnException, noticeOnFinish\n\n@noticeOnFinish()\n@noticeOnException()\ndef foo(name=\"aaa\"):\n    return name\n```\n\n##### -Email-\n\nFirstly, please confirm you have opened SMTP functions in your email. And the method depends on your email server (For @163.com and @gmail.com you need to set your app private password) [gmail SMTP authorization](https://www.digitalocean.com/community/tutorials/how-to-use-google-s-smtp-server) | [qq email SMTP authorization](https://jingyan.baidu.com/article/6079ad0eb14aaa28fe86db5a.html)\n\n##### inform you of your function result by sending an email when your function finishes\n```python\nfrom pynotice.mail import noticeOnFinish\nimport numpy as np\n\nsender = \"xxx@gmail.com\"\ncode = \"xxxxxxxxxxxxxxxx\"  # SMTP authorization code \nreceiver = \"xxx@foxmail.com\"  # list or str\n\n# you can also send an attachments\n@noticeOnFinish(sender, code, receiver, attachments=['demo.txt']) \ndef foo(name=\"aaa\"):\n    x = np.array([[1, 2, 3], [2, 3, 4]])\n    for i in range(100):\n        if i%20==0:\n            print(i)\n    np.savetxt(\"demo.txt\", x)\n    return x, [1,23,5,4], name\n\nret = foo()\nprint(ret)\n```\n\n#### inform you of the Exception by an email when the function throws exceptions\n```python\nfrom pynotice.mail import noticeOnException, noticeOnFinish\n\nsender = \"xxx@qq.com\"\ncode = \"xxxxxxxxxxxxxxxx\"  # SMTP authorization code \nreceiver = \"xxx@foxmail.com\"  # list or str\n\n@noticeOnFinish(sender, code, receiver,attachments=[])\n@noticeOnException(sender, code, receiver)\ndef foo(name=\"aaa\"):\n    return \"ccc\"\n\nre = foo()\n```\n\n#### Include\n| module | description |\n| -----  | ----------- |\n| [filetype](https://pypi.org/project/filetype/) | get the file format |\n| [simpleaudio](https://pypi.org/project/simpleaudio/1.0.2/) | play the wav audio | \n| [zmail](https://pypi.org/project/zmail/) | send emails simply |\n\n\n#### Resource\nTwo wav sounds in module are downloaded from [here](http://www.aigei.com/sound/class/). I have thought I can diy with my ipad, but I'm a green hand in that so ...\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shaoeric/pynotice", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pynotice", "package_url": "https://pypi.org/project/pynotice/", "platform": "", "project_url": "https://pypi.org/project/pynotice/", "project_urls": {"Homepage": "https://github.com/shaoeric/pynotice"}, "release_url": "https://pypi.org/project/pynotice/0.0.2/", "requires_dist": ["zmail (==0.2.5)"], "requires_python": "", "summary": "notice by sound or email", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Introduction</h2>\n<h5>README: <a href=\"https://github.com/shaoeric/pynotice/blob/master/README.md\" rel=\"nofollow\">English</a>|<a href=\"https://github.com/shaoeric/pynotice/blob/master/README-cn.md\" rel=\"nofollow\">\u4e2d\u6587</a></h5>\n<p>pynotice is a python3 module that can play a sound or send an email to inform you when your function finishes or goes wrong.</p>\n<h4>Features</h4>\n<hr>\n<ul>\n<li>Use default or custom wav file</li>\n<li>Send email with an attachment of pictures or txt files</li>\n<li>python decorator</li>\n<li>No need specifying smtp server address, of course you can do it</li>\n</ul>\n<h4>Installation</h4>\n<hr>\n<p>only for python3</p>\n<pre><code>pip install pynotice\n</code></pre>\n<h4>Usage</h4>\n<hr>\n<h5>-Sound- [duplicated]</h5>\n<h5>inform you by playing sound when your function finishes</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pynotice.sound.notice</span> <span class=\"kn\">import</span> <span class=\"n\">noticeOnFinish</span>\n\n<span class=\"nd\">@noticeOnFinish</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"foooo\"</span><span class=\"p\">):</span>  <span class=\"c1\"># your function</span>\n    <span class=\"k\">return</span> <span class=\"n\">name</span>\n\n<span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">foo</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n</pre>\n<h5>inform you by playing sound when your function goes wrong</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pynotice.sound.notice</span> <span class=\"kn\">import</span> <span class=\"n\">noticeOnException</span><span class=\"p\">,</span> <span class=\"n\">noticeOnFinish</span>\n\n<span class=\"nd\">@noticeOnFinish</span><span class=\"p\">()</span>\n<span class=\"nd\">@noticeOnException</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"aaa\"</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">name</span>\n</pre>\n<h5>-Email-</h5>\n<p>Firstly, please confirm you have opened SMTP functions in your email. And the method depends on your email server (For @163.com and @gmail.com you need to set your app private password) <a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-google-s-smtp-server\" rel=\"nofollow\">gmail SMTP authorization</a> | <a href=\"https://jingyan.baidu.com/article/6079ad0eb14aaa28fe86db5a.html\" rel=\"nofollow\">qq email SMTP authorization</a></p>\n<h5>inform you of your function result by sending an email when your function finishes</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pynotice.mail</span> <span class=\"kn\">import</span> <span class=\"n\">noticeOnFinish</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">sender</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxx@gmail.com\"</span>\n<span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxxxxxxxxxxxxx\"</span>  <span class=\"c1\"># SMTP authorization code </span>\n<span class=\"n\">receiver</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxx@foxmail.com\"</span>  <span class=\"c1\"># list or str</span>\n\n<span class=\"c1\"># you can also send an attachments</span>\n<span class=\"nd\">@noticeOnFinish</span><span class=\"p\">(</span><span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">receiver</span><span class=\"p\">,</span> <span class=\"n\">attachments</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'demo.txt'</span><span class=\"p\">])</span> \n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"aaa\"</span><span class=\"p\">):</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"o\">%</span><span class=\"mi\">20</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">savetxt</span><span class=\"p\">(</span><span class=\"s2\">\"demo.txt\"</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">23</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">name</span>\n\n<span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">foo</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n</pre>\n<h4>inform you of the Exception by an email when the function throws exceptions</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pynotice.mail</span> <span class=\"kn\">import</span> <span class=\"n\">noticeOnException</span><span class=\"p\">,</span> <span class=\"n\">noticeOnFinish</span>\n\n<span class=\"n\">sender</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxx@qq.com\"</span>\n<span class=\"n\">code</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxxxxxxxxxxxxx\"</span>  <span class=\"c1\"># SMTP authorization code </span>\n<span class=\"n\">receiver</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxx@foxmail.com\"</span>  <span class=\"c1\"># list or str</span>\n\n<span class=\"nd\">@noticeOnFinish</span><span class=\"p\">(</span><span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">receiver</span><span class=\"p\">,</span><span class=\"n\">attachments</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n<span class=\"nd\">@noticeOnException</span><span class=\"p\">(</span><span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">receiver</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"aaa\"</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s2\">\"ccc\"</span>\n\n<span class=\"n\">re</span> <span class=\"o\">=</span> <span class=\"n\">foo</span><span class=\"p\">()</span>\n</pre>\n<h4>Include</h4>\n<table>\n<thead>\n<tr>\n<th>module</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://pypi.org/project/filetype/\" rel=\"nofollow\">filetype</a></td>\n<td>get the file format</td>\n</tr>\n<tr>\n<td><a href=\"https://pypi.org/project/simpleaudio/1.0.2/\" rel=\"nofollow\">simpleaudio</a></td>\n<td>play the wav audio</td>\n</tr>\n<tr>\n<td><a href=\"https://pypi.org/project/zmail/\" rel=\"nofollow\">zmail</a></td>\n<td>send emails simply</td>\n</tr></tbody></table>\n<h4>Resource</h4>\n<p>Two wav sounds in module are downloaded from <a href=\"http://www.aigei.com/sound/class/\" rel=\"nofollow\">here</a>. I have thought I can diy with my ipad, but I'm a green hand in that so ...</p>\n\n          </div>"}, "last_serial": 6848765, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ce43f4b948ace317b02d24d5fe7e3c6f", "sha256": "26fadd6539d59b02521f1aacba642e86f4762b17b929180d3344fa6c71fd65d9"}, "downloads": -1, "filename": "pynotice-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ce43f4b948ace317b02d24d5fe7e3c6f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 160477, "upload_time": "2019-08-09T10:35:43", "upload_time_iso_8601": "2019-08-09T10:35:43.054558Z", "url": "https://files.pythonhosted.org/packages/37/03/1c66207142580ad11e7fa3f960bbf09d5018dd0a9b673b87614c1548c736/pynotice-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5369e88296b220f5b0a7c4b9a55d2099", "sha256": "6138de5eb09f844ff4d67eb63b0f330750b09b00b5492bb4d74f4bf565f26461"}, "downloads": -1, "filename": "pynotice-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5369e88296b220f5b0a7c4b9a55d2099", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4621, "upload_time": "2019-08-09T10:35:45", "upload_time_iso_8601": "2019-08-09T10:35:45.935066Z", "url": "https://files.pythonhosted.org/packages/bf/fb/ab64047563db80ba958394ebbb58472206f412d49e46c0efcbfae2212ce8/pynotice-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "564dc42ef13f6b0551a8d6270a7c31f1", "sha256": "95d42722a9d92fc7a7c3b19a017300e7fbf323e3a087e20c4976380251fff554"}, "downloads": -1, "filename": "pynotice-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "564dc42ef13f6b0551a8d6270a7c31f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 160607, "upload_time": "2020-03-20T09:58:01", "upload_time_iso_8601": "2020-03-20T09:58:01.473914Z", "url": "https://files.pythonhosted.org/packages/e8/13/a04ab8e0946ed49ef626b6f5819b5684234213fd504bd28882a94f12557d/pynotice-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f4ea0b7f8d15555872695f31265cc6e", "sha256": "a78cad5528683b88d6be3ba0b4bcd0fd2a0af2946a06ee6b2624fb29b9b273ae"}, "downloads": -1, "filename": "pynotice-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9f4ea0b7f8d15555872695f31265cc6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4699, "upload_time": "2020-03-20T09:58:04", "upload_time_iso_8601": "2020-03-20T09:58:04.845205Z", "url": "https://files.pythonhosted.org/packages/32/fc/98da3fe2bf55b0ffdc59b004c9654c38b0420290e2eb785b9babc970818a/pynotice-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "564dc42ef13f6b0551a8d6270a7c31f1", "sha256": "95d42722a9d92fc7a7c3b19a017300e7fbf323e3a087e20c4976380251fff554"}, "downloads": -1, "filename": "pynotice-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "564dc42ef13f6b0551a8d6270a7c31f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 160607, "upload_time": "2020-03-20T09:58:01", "upload_time_iso_8601": "2020-03-20T09:58:01.473914Z", "url": "https://files.pythonhosted.org/packages/e8/13/a04ab8e0946ed49ef626b6f5819b5684234213fd504bd28882a94f12557d/pynotice-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f4ea0b7f8d15555872695f31265cc6e", "sha256": "a78cad5528683b88d6be3ba0b4bcd0fd2a0af2946a06ee6b2624fb29b9b273ae"}, "downloads": -1, "filename": "pynotice-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9f4ea0b7f8d15555872695f31265cc6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4699, "upload_time": "2020-03-20T09:58:04", "upload_time_iso_8601": "2020-03-20T09:58:04.845205Z", "url": "https://files.pythonhosted.org/packages/32/fc/98da3fe2bf55b0ffdc59b004c9654c38b0420290e2eb785b9babc970818a/pynotice-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:04 2020"}