{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "What is this\r\n============\r\n\r\nThis (simple) script aimed to manage JIRA issues. It designed to be\r\nused from scripts and accept all details via CLI.\r\n\r\nTo reduce typing one may use configuration file(s) to specify reusable\r\nparameters. A sample config file provided in `/etc/jira-bot/`.\r\nFor initial system-wide setup rename `jira-bot.conf.sample` to `jira-bot.conf`\r\nor copy it to user home directory as `.jira-botrc`. Then edit values according\r\nyour needs. Here is a sample configuration file. You need to replace values in\r\nangle brackets to your data:\r\n\r\n\r\n    [default]\r\n    server=https://<JIRA-server>\r\n    verbose=1\r\n\r\n    [https://<JIRA-server>]\r\n    username=<login>\r\n    password=<pass>\r\n    project=<DEFAULT-PROJECT-NAME>\r\n\r\n    [http://<another-JIRA-server>]\r\n    \u2026\r\n\r\nNote, that system-wide and per user config files are **additive** -- that means\r\nyou can specify _default server_ in system-wide config, and particular credentials\r\nat `.jira-botrc` **at same section**.\r\n\r\nDefault server (i.e. when `--server` CLI option is omitted) would be taken from\r\n`default` section of config file. **Per user configuration will take precedence\r\nover the system-wide, but CLI options always win**.\r\n\r\nUsage examples:\r\n\r\n    # Create a new issue using pipe\r\n    $ echo 'Bug description...' | jira-bot -v create -s 'Bug summary' -t Bug -f attach.file.1 attach.file.2\r\n\r\n    # Create a new issue using file w/ description\r\n    $ jira-bot create -s 'Proposal summary' -t 'New Feature' -f attach.file.1 attach.file.2 -- description.txt\r\n\r\n    # Change summary and priority of existed issue\r\n    $ jira-bot update -i EXISTED-123 -s 'New summary' -p Trivial\r\n\r\n    # Add comment visible to developers\r\n    $ jira-bot comment -i ISSUE-456 add -v Developers < comment-content.txt\r\n\r\n    # Brief list of comments\r\n    $ jira-bot comment -i ISSUE-456 ls", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "jira-bot", "package_url": "https://pypi.org/project/jira-bot/", "platform": "", "project_url": "https://pypi.org/project/jira-bot/", "project_urls": null, "release_url": "https://pypi.org/project/jira-bot/2.0.1/", "requires_dist": null, "requires_python": null, "summary": "", "version": "2.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            What is this\n<br>============\n<br>\n<br>This (simple) script aimed to manage JIRA issues. It designed to be\n<br>used from scripts and accept all details via CLI.\n<br>\n<br>To reduce typing one may use configuration file(s) to specify reusable\n<br>parameters. A sample config file provided in `/etc/jira-bot/`.\n<br>For initial system-wide setup rename `jira-bot.conf.sample` to `jira-bot.conf`\n<br>or copy it to user home directory as `.jira-botrc`. Then edit values according\n<br>your needs. Here is a sample configuration file. You need to replace values in\n<br>angle brackets to your data:\n<br>\n<br>\n<br>    [default]\n<br>    server=https://&lt;JIRA-server&gt;\n<br>    verbose=1\n<br>\n<br>    [https://&lt;JIRA-server&gt;]\n<br>    username=&lt;login&gt;\n<br>    password=&lt;pass&gt;\n<br>    project=&lt;DEFAULT-PROJECT-NAME&gt;\n<br>\n<br>    [http://&lt;another-JIRA-server&gt;]\n<br>    \u2026\n<br>\n<br>Note, that system-wide and per user config files are **additive** -- that means\n<br>you can specify _default server_ in system-wide config, and particular credentials\n<br>at `.jira-botrc` **at same section**.\n<br>\n<br>Default server (i.e. when `--server` CLI option is omitted) would be taken from\n<br>`default` section of config file. **Per user configuration will take precedence\n<br>over the system-wide, but CLI options always win**.\n<br>\n<br>Usage examples:\n<br>\n<br>    # Create a new issue using pipe\n<br>    $ echo 'Bug description...' | jira-bot -v create -s 'Bug summary' -t Bug -f attach.file.1 attach.file.2\n<br>\n<br>    # Create a new issue using file w/ description\n<br>    $ jira-bot create -s 'Proposal summary' -t 'New Feature' -f attach.file.1 attach.file.2 -- description.txt\n<br>\n<br>    # Change summary and priority of existed issue\n<br>    $ jira-bot update -i EXISTED-123 -s 'New summary' -p Trivial\n<br>\n<br>    # Add comment visible to developers\n<br>    $ jira-bot comment -i ISSUE-456 add -v Developers &lt; comment-content.txt\n<br>\n<br>    # Brief list of comments\n<br>    $ jira-bot comment -i ISSUE-456 ls\n          </div>"}, "last_serial": 1681155, "releases": {"2.0": [{"comment_text": "", "digests": {"md5": "76d58e91c59dc978236f0e1a1b7647b8", "sha256": "b1508f816a83c272b24d01cc67d0ccc4e08d463527f56bdb0e8b5b8997ccb496"}, "downloads": -1, "filename": "jira-bot-2.0.1.tar.gz", "has_sig": false, "md5_digest": "76d58e91c59dc978236f0e1a1b7647b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12718, "upload_time": "2015-08-17T21:25:14", "upload_time_iso_8601": "2015-08-17T21:25:14.379780Z", "url": "https://files.pythonhosted.org/packages/08/74/138627bf2a5040a06bf6617f2be5297245d147da24a0657ac1da48d748ab/jira-bot-2.0.1.tar.gz", "yanked": false}], "2.0.1": []}, "urls": [], "timestamp": "Fri May  8 00:52:34 2020"}