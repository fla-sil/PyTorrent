{"info": {"author": "Patilla Code", "author_email": "patillacode@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: Public Domain", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7", "Topic :: Utilities"], "description": "# YiPy\nA Python wrapper for [Yify API](https://yts.am/api)\n\n_Only public methods are implemented, no authorization required._\n\n## Examples\n\n```python\nfrom yipy.api import Yipy\n\napi = Yipy()\n\n# Get movies list\nmovie_list = api.list()\n\n# Get movie details\nmovie_details = api.movie_details(movie_id=5496)\n\n# Get movie suggestions\nmovie_suggestions = api.movie_suggestions(movie_id=5496)\n\n# Get movie comments\nmovie_comments = api.movie_comments(movie_id=5496)\n\n# Get movie reviews\nmovie_reviews = api.movie_reviews(movie_id=5496)\n\n# Get movie parental guides\nmovie_parental_guides = api.movie_parental_guides(movie_id=5496)\n\n# Get list upcoming movies\nlist_upcoming_movies = api.list_upcoming_movies()\n\n# Get user details\nuser_details = api.user_details(user_id=16)\n```\n\n\n## Available methods\n---------------------------\n#### list ####\n\n>Used to list and search through out all the available movies.\n>Can sort, filter, search and order the results.\n\n\nParameters:\n\n\n  - `limit` _(int, optional)_: between 1 - 50 (inclusive)\n\t    - The limit of results per page that has been set\n\n  - `page` _(int, optional)_: Used to see the next page of movies\n\t    - eg: limit=15 and page=2 will show you movies 15-30\n\n  - `quality` _(str, optional)_: Used to filter by quality.\n\t  - `720p`\n\t  - `1080p`\n\t  - `3D`\n\n  - `minimum_rating` _(int, optional)_: between 0 - 9 (inclusive)\n\t  - Used to filter movie by a given minimum IMDb rating\n\n  - `query_term` _(str, optional)_: Used for movie search, matching on:\n\t  - Movie Title/IMDb Code\n\t  - Actor Name/IMDb Code\n\t  - Director Name/IMDb Code\n\n  - `genre` _(str, optional)_: Used to filter by a given genre\n\t  - See [here](http://www.imdb.com/genre/) for full list\n\n  - `sort_by` _(str, optional)_: Sorts the results by choosen value:\n\t  - `title`\n\t  - `year`\n\t  - `rating`\n\t  - `peers`\n\t  - `seeds`\n\t  - `download_count`\n\t  - `like_count`\n\t  - `date_added`\n\n  - `order_by` _(str, optional)_: `asc` or `desc`\n\t    Orders the results by either Ascending or Descending order\n\n  - `with_rt_ratings` _(bool, optional)_:\n\t\t- Returns the list with the Rotten Tomatoes rating included\n\n---------------------------\n#### movie_details ####\n\n>Returns the information about a specific movie.\n\n\nParameters:\n\n  - `movie_id` _(int)_: The ID of the movie\n\n  - `with_images` _(bool, optional)_: When set the data returned will\n\t    include the added image URLs\n\n  - `with_cast` _(bool, optional)_: When set the data returned will\n\t    include the added information about the cast\n\n\n---------------------------\n#### movie_suggestions ####\n\n>Returns 4 related movies as suggestions for the user.\n\nParameters:\n\n  - `movie_id` _(int)_: The ID of the movie\n\n---------------------------\n#### movie_comments ####\n\n>Returns all the comments for the specified movie.\n\nParameters:\n\n  - `movie_id` _(int)_: The ID of the movie\n\n---------------------------\n#### movie_reviews ####\n\n>Returns all the IMDb movie reviews for the specified movie.\n\nParameters:\n\n  - `movie_id` _(int)_: The ID of the movie\n\n---------------------------\n#### movie_parental_guides ####\n\n>Returns all the parental guide ratings for the specified movie.\n\nParameters:\n\n  - `movie_id` _(int)_: The ID of the movie\n\n---------------------------\n#### list_upcoming_movies ####\n\n>Returns the 4 latest upcoming movies.\n\n---------------------------\n#### user_details ####\n\n>Get a user's details.\n\nParameters:\n\n  - `user_id` _(int)_: The ID of the user\n\n  - `with_recently_downloaded` _(bool, optional)_:\n\t        If set it will add the most recent downloads by the given user\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/patillacode/yipy", "keywords": "yify,api,python", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "yipy", "package_url": "https://pypi.org/project/yipy/", "platform": "", "project_url": "https://pypi.org/project/yipy/", "project_urls": {"Homepage": "https://github.com/patillacode/yipy"}, "release_url": "https://pypi.org/project/yipy/1.0.0/", "requires_dist": ["requests"], "requires_python": "", "summary": "A python wraper for Yify's API.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>YiPy</h1>\n<p>A Python wrapper for <a href=\"https://yts.am/api\" rel=\"nofollow\">Yify API</a></p>\n<p><em>Only public methods are implemented, no authorization required.</em></p>\n<h2>Examples</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">yipy.api</span> <span class=\"kn\">import</span> <span class=\"n\">Yipy</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Yipy</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Get movies list</span>\n<span class=\"n\">movie_list</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Get movie details</span>\n<span class=\"n\">movie_details</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">movie_details</span><span class=\"p\">(</span><span class=\"n\">movie_id</span><span class=\"o\">=</span><span class=\"mi\">5496</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get movie suggestions</span>\n<span class=\"n\">movie_suggestions</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">movie_suggestions</span><span class=\"p\">(</span><span class=\"n\">movie_id</span><span class=\"o\">=</span><span class=\"mi\">5496</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get movie comments</span>\n<span class=\"n\">movie_comments</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">movie_comments</span><span class=\"p\">(</span><span class=\"n\">movie_id</span><span class=\"o\">=</span><span class=\"mi\">5496</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get movie reviews</span>\n<span class=\"n\">movie_reviews</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">movie_reviews</span><span class=\"p\">(</span><span class=\"n\">movie_id</span><span class=\"o\">=</span><span class=\"mi\">5496</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get movie parental guides</span>\n<span class=\"n\">movie_parental_guides</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">movie_parental_guides</span><span class=\"p\">(</span><span class=\"n\">movie_id</span><span class=\"o\">=</span><span class=\"mi\">5496</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get list upcoming movies</span>\n<span class=\"n\">list_upcoming_movies</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">list_upcoming_movies</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Get user details</span>\n<span class=\"n\">user_details</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">user_details</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">)</span>\n</pre>\n<h2>Available methods</h2>\n<hr>\n<h4>list</h4>\n<blockquote>\n<p>Used to list and search through out all the available movies.\nCan sort, filter, search and order the results.</p>\n</blockquote>\n<p>Parameters:</p>\n<ul>\n<li>\n<p><code>limit</code> <em>(int, optional)</em>: between 1 - 50 (inclusive)\n- The limit of results per page that has been set</p>\n</li>\n<li>\n<p><code>page</code> <em>(int, optional)</em>: Used to see the next page of movies\n- eg: limit=15 and page=2 will show you movies 15-30</p>\n</li>\n<li>\n<p><code>quality</code> <em>(str, optional)</em>: Used to filter by quality.</p>\n<ul>\n<li><code>720p</code></li>\n<li><code>1080p</code></li>\n<li><code>3D</code></li>\n</ul>\n</li>\n<li>\n<p><code>minimum_rating</code> <em>(int, optional)</em>: between 0 - 9 (inclusive)</p>\n<ul>\n<li>Used to filter movie by a given minimum IMDb rating</li>\n</ul>\n</li>\n<li>\n<p><code>query_term</code> <em>(str, optional)</em>: Used for movie search, matching on:</p>\n<ul>\n<li>Movie Title/IMDb Code</li>\n<li>Actor Name/IMDb Code</li>\n<li>Director Name/IMDb Code</li>\n</ul>\n</li>\n<li>\n<p><code>genre</code> <em>(str, optional)</em>: Used to filter by a given genre</p>\n<ul>\n<li>See <a href=\"http://www.imdb.com/genre/\" rel=\"nofollow\">here</a> for full list</li>\n</ul>\n</li>\n<li>\n<p><code>sort_by</code> <em>(str, optional)</em>: Sorts the results by choosen value:</p>\n<ul>\n<li><code>title</code></li>\n<li><code>year</code></li>\n<li><code>rating</code></li>\n<li><code>peers</code></li>\n<li><code>seeds</code></li>\n<li><code>download_count</code></li>\n<li><code>like_count</code></li>\n<li><code>date_added</code></li>\n</ul>\n</li>\n<li>\n<p><code>order_by</code> <em>(str, optional)</em>: <code>asc</code> or <code>desc</code>\nOrders the results by either Ascending or Descending order</p>\n</li>\n<li>\n<p><code>with_rt_ratings</code> <em>(bool, optional)</em>:\n- Returns the list with the Rotten Tomatoes rating included</p>\n</li>\n</ul>\n<hr>\n<h4>movie_details</h4>\n<blockquote>\n<p>Returns the information about a specific movie.</p>\n</blockquote>\n<p>Parameters:</p>\n<ul>\n<li>\n<p><code>movie_id</code> <em>(int)</em>: The ID of the movie</p>\n</li>\n<li>\n<p><code>with_images</code> <em>(bool, optional)</em>: When set the data returned will\ninclude the added image URLs</p>\n</li>\n<li>\n<p><code>with_cast</code> <em>(bool, optional)</em>: When set the data returned will\ninclude the added information about the cast</p>\n</li>\n</ul>\n<hr>\n<h4>movie_suggestions</h4>\n<blockquote>\n<p>Returns 4 related movies as suggestions for the user.</p>\n</blockquote>\n<p>Parameters:</p>\n<ul>\n<li><code>movie_id</code> <em>(int)</em>: The ID of the movie</li>\n</ul>\n<hr>\n<h4>movie_comments</h4>\n<blockquote>\n<p>Returns all the comments for the specified movie.</p>\n</blockquote>\n<p>Parameters:</p>\n<ul>\n<li><code>movie_id</code> <em>(int)</em>: The ID of the movie</li>\n</ul>\n<hr>\n<h4>movie_reviews</h4>\n<blockquote>\n<p>Returns all the IMDb movie reviews for the specified movie.</p>\n</blockquote>\n<p>Parameters:</p>\n<ul>\n<li><code>movie_id</code> <em>(int)</em>: The ID of the movie</li>\n</ul>\n<hr>\n<h4>movie_parental_guides</h4>\n<blockquote>\n<p>Returns all the parental guide ratings for the specified movie.</p>\n</blockquote>\n<p>Parameters:</p>\n<ul>\n<li><code>movie_id</code> <em>(int)</em>: The ID of the movie</li>\n</ul>\n<hr>\n<h4>list_upcoming_movies</h4>\n<blockquote>\n<p>Returns the 4 latest upcoming movies.</p>\n</blockquote>\n<hr>\n<h4>user_details</h4>\n<blockquote>\n<p>Get a user's details.</p>\n</blockquote>\n<p>Parameters:</p>\n<ul>\n<li>\n<p><code>user_id</code> <em>(int)</em>: The ID of the user</p>\n</li>\n<li>\n<p><code>with_recently_downloaded</code> <em>(bool, optional)</em>:\nIf set it will add the most recent downloads by the given user</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 5225746, "releases": {"0.0.7": [{"comment_text": "", "digests": {"md5": "bb732f098e07afdf81bc5e9b72f1cdbc", "sha256": "a07082b6f5a7b589f0bda18e8c6229cbe28866a6b9948076442e46a0c0038e55"}, "downloads": -1, "filename": "yipy-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bb732f098e07afdf81bc5e9b72f1cdbc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6921, "upload_time": "2019-05-04T14:20:02", "upload_time_iso_8601": "2019-05-04T14:20:02.028317Z", "url": "https://files.pythonhosted.org/packages/4b/4d/5a7ab6a7c78743056ebf260dc79e91db89e964b338a6ec369ff6da522791/yipy-0.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80f2a57c414c7b8f9dfedb55b4fce3da", "sha256": "dfd1dcfba3d1cdc00752729d676dd4c941d4bc4cf9d87add37c71314ad0ed7f4"}, "downloads": -1, "filename": "yipy-0.0.7.tar.gz", "has_sig": false, "md5_digest": "80f2a57c414c7b8f9dfedb55b4fce3da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3694, "upload_time": "2019-05-04T14:20:04", "upload_time_iso_8601": "2019-05-04T14:20:04.506925Z", "url": "https://files.pythonhosted.org/packages/a0/0d/f8b8acbd0bfa5ded96782e96c5f25e3dabe3ac856852f8da8ac27daa4108/yipy-0.0.7.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "326482aec9ba01e6f50cfe099d406cc7", "sha256": "a2966ae79ce26ca28ccf3ecf3441e464414d6d60092ed146be969db2c298c404"}, "downloads": -1, "filename": "yipy-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "326482aec9ba01e6f50cfe099d406cc7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6925, "upload_time": "2019-05-04T14:45:46", "upload_time_iso_8601": "2019-05-04T14:45:46.928174Z", "url": "https://files.pythonhosted.org/packages/49/0a/0ffbbb9d620ae2c47b8aa25fb6700881b6b4fa75113a897b8d37fae733c0/yipy-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2b3dad02fc6e82b6d043c576c19af34", "sha256": "6cd018eaa1d79b38780150c72cc43bf07bc507bb09e19ea62c934b23525efdf1"}, "downloads": -1, "filename": "yipy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e2b3dad02fc6e82b6d043c576c19af34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3942, "upload_time": "2019-05-04T14:45:48", "upload_time_iso_8601": "2019-05-04T14:45:48.833040Z", "url": "https://files.pythonhosted.org/packages/4a/dc/d4a8cec965773e4b87fa23a7388e978fc36a8783de40206c7de1977e8bdb/yipy-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "326482aec9ba01e6f50cfe099d406cc7", "sha256": "a2966ae79ce26ca28ccf3ecf3441e464414d6d60092ed146be969db2c298c404"}, "downloads": -1, "filename": "yipy-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "326482aec9ba01e6f50cfe099d406cc7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6925, "upload_time": "2019-05-04T14:45:46", "upload_time_iso_8601": "2019-05-04T14:45:46.928174Z", "url": "https://files.pythonhosted.org/packages/49/0a/0ffbbb9d620ae2c47b8aa25fb6700881b6b4fa75113a897b8d37fae733c0/yipy-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2b3dad02fc6e82b6d043c576c19af34", "sha256": "6cd018eaa1d79b38780150c72cc43bf07bc507bb09e19ea62c934b23525efdf1"}, "downloads": -1, "filename": "yipy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e2b3dad02fc6e82b6d043c576c19af34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3942, "upload_time": "2019-05-04T14:45:48", "upload_time_iso_8601": "2019-05-04T14:45:48.833040Z", "url": "https://files.pythonhosted.org/packages/4a/dc/d4a8cec965773e4b87fa23a7388e978fc36a8783de40206c7de1977e8bdb/yipy-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:22:13 2020"}