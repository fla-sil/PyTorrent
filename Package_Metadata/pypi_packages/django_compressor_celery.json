{"info": {"author": "Christoph Heer", "author_email": "christoph@thelabmill.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP"], "description": "django-compressor-celery\n========================\n\nA extension of django_compressor which compress the files by celery workers.\nThe system behind the scene is very simple. The first request on a page with a\n``{% compress %}`` block will create a celery task which compress this specific block.\nInstead to wait for the compressed version the first request gets the uncompressed\nversion. After the compress task is finished compressor will deliver the compressed\ncode from the cache directory.\n\nBenefits:\n - Support all features of template inheritance\n - No offline compression by deployment\n\nInstall\n-------\n\n* Install as usual `django-compressor <http://django-compressor.readthedocs.org/en/latest/quickstart/#installation>`_ and `celery for django <http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html>`_\n* Install django-compressor-celery\n* Add ``compressor_celery`` to your installed apps\n* Replace in your template ``{% load compress %}`` with ``{% load compress_celery %}``\n\nConfiguration\n-------------\n\nIf you want to change some `task options <http://docs.celeryproject.org/en/latest/userguide/tasks.html#task-options>`_ you should use the settings key ``COMPRESS_CELERY_TASK_CONFIG`` which contains a dict with the options. (Inspired by `django-celery-email <https://pypi.python.org/pypi/django-celery-email>`_)\n\nExample::\n\n    COMPRESS_CELERY_TASK_CONFIG = {\n        'name': 'compressor.lets_compress',\n        'queue': 'compressor',\n        'ignore_result': False\n        ...\n    }\n\nThe default config should work well for the most use cases.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jarus/django_compressor_celery/", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django_compressor_celery", "package_url": "https://pypi.org/project/django_compressor_celery/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django_compressor_celery/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/jarus/django_compressor_celery/"}, "release_url": "https://pypi.org/project/django_compressor_celery/0.2/", "requires_dist": null, "requires_python": null, "summary": "Integrate django_compressor with celery", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A extension of django_compressor which compress the files by celery workers.\nThe system behind the scene is very simple. The first request on a page with a\n<tt>{% compress %}</tt> block will create a celery task which compress this specific block.\nInstead to wait for the compressed version the first request gets the uncompressed\nversion. After the compress task is finished compressor will deliver the compressed\ncode from the cache directory.</p>\n<dl>\n<dt>Benefits:</dt>\n<dd><ul>\n<li>Support all features of template inheritance</li>\n<li>No offline compression by deployment</li>\n</ul>\n</dd>\n</dl>\n<div id=\"install\">\n<h2>Install</h2>\n<ul>\n<li>Install as usual <a href=\"http://django-compressor.readthedocs.org/en/latest/quickstart/#installation\" rel=\"nofollow\">django-compressor</a> and <a href=\"http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html\" rel=\"nofollow\">celery for django</a></li>\n<li>Install django-compressor-celery</li>\n<li>Add <tt>compressor_celery</tt> to your installed apps</li>\n<li>Replace in your template <tt>{% load compress %}</tt> with <tt>{% load compress_celery %}</tt></li>\n</ul>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>If you want to change some <a href=\"http://docs.celeryproject.org/en/latest/userguide/tasks.html#task-options\" rel=\"nofollow\">task options</a> you should use the settings key <tt>COMPRESS_CELERY_TASK_CONFIG</tt> which contains a dict with the options. (Inspired by <a href=\"https://pypi.python.org/pypi/django-celery-email\" rel=\"nofollow\">django-celery-email</a>)</p>\n<p>Example:</p>\n<pre>COMPRESS_CELERY_TASK_CONFIG = {\n    'name': 'compressor.lets_compress',\n    'queue': 'compressor',\n    'ignore_result': False\n    ...\n}\n</pre>\n<p>The default config should work well for the most use cases.</p>\n</div>\n\n          </div>"}, "last_serial": 844965, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "35975e7a7d5441e4545fe7626a1eb99b", "sha256": "61e445b42f40d4708b82fe500feecd520cdd800b5fd02ee70230bdb4c9f48e31"}, "downloads": -1, "filename": "django_compressor_celery-0.2.tar.gz", "has_sig": false, "md5_digest": "35975e7a7d5441e4545fe7626a1eb99b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3013, "upload_time": "2013-08-21T11:49:50", "upload_time_iso_8601": "2013-08-21T11:49:50.458949Z", "url": "https://files.pythonhosted.org/packages/28/60/491d75adac777970859df54a656e424966c8a65ceac7e784c211f85cc08b/django_compressor_celery-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "35975e7a7d5441e4545fe7626a1eb99b", "sha256": "61e445b42f40d4708b82fe500feecd520cdd800b5fd02ee70230bdb4c9f48e31"}, "downloads": -1, "filename": "django_compressor_celery-0.2.tar.gz", "has_sig": false, "md5_digest": "35975e7a7d5441e4545fe7626a1eb99b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3013, "upload_time": "2013-08-21T11:49:50", "upload_time_iso_8601": "2013-08-21T11:49:50.458949Z", "url": "https://files.pythonhosted.org/packages/28/60/491d75adac777970859df54a656e424966c8a65ceac7e784c211f85cc08b/django_compressor_celery-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:54 2020"}