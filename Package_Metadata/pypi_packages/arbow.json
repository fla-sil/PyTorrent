{"info": {"author": "Microbiological Diagnostic Unit Public Health Laboratory", "author_email": "andersgs@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# Arbow: cultivate your multiple sequence aligment to get better trees\n\n![PyPI](https://img.shields.io/pypi/v/arbow?style=flat-square) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/arbow?style=flat-square) ![PyPI - License](https://img.shields.io/pypi/l/arbow?style=flat-square)\n\n## Name\n\nWe named this tool `arbow` as that would be the phonetic pronounciation of the short, endearing, \nterm for an [arborist](https://en.wikipedia.org/wiki/Arborist) in Australia.\n\n## What it does\n\nThe goal of `arbow` is to automate and simplify the production of trees from multiple sequence alignments. The tool \nhas been developed in the context of viral phylogenomics.\n\nIn the current version (`0.5.*`) it:\n\n1. Reads an alignment in `multiFASTA` format\n2. Calculates stats for each sequence in the alignment\n3. Trims 5/3 prime UTR regions --- defaults set to SARS-COV-2 (Genbank accession: `NC_045512.2`)\n4. Calculates stats per column in the alignment\n5. Allows the user to set a threshold of tolerable missing data in a column, and removes all non-conforming columns from the alignment\n6. From the remaining columns, `arbow` finds all the `constant` columns according to two `user` defined criteria: `allow missing data` (i.e., a column with missing data can still count to towards `constant` sites if it meets other criteria), and the frequency of the major allow is equal to or larger than a trheshold (i.e., if the threshold is set to 0.99 and there are 100 samples, 99 of which are `A` and one is `G`, that column would be counted as a constant `A`). Filtering by frequency allows one to remove potential sequencing error.\n7. It then filters out all the `variable` columns, and outputs the variable alignment as a `multiFASTA` alignment.\n8. It runs `IQTree` with a few sensible `presets`\n\nCurrently, in step `4` above, columns that have a single observed `nucleotide` (e.g., `C`) but still have missing data that were not filtered out in step `3` are counted towards the overall frequency of that `base` in the alignment. In other words, if a `user` specifies a maximum number of 20 missing bases, and a column with 5 missing bases but with `A` in all other samples, that column will count towards the overall frequency of `A` in the alignment (i.e., majority consensus imputation). This assumptions is less risky the larger the number of samples in the alignment.\n\nFor step `5`, missing data (i.e., `-` and `N`) are all codes as `N`.\n\nTests are underway to figure out how these assumptions might affect the output.\n\n## Dependencies\n\n1. Python >=3.6\n2. IQTree 1.6+ (not tested on IQTree 2 as it is not production ready yet)\n3. BioPython\n4. Pandas\n5. NumPy\n\n## Installation\n\n### Brew\n\n```\nbrew install iqtree\npip<3> install arbow\n```\n\n### Conda\n\n```\nconda install -c bioconda iqtree\npip<3> install arbow\n```\n\n## Running\n\n1. Generate a mulitple sequence alignment with your favourite aligner (e.g., MAFTT). Output a `multiFASTA` file.\n2. Run `arbow <aln.fa>`\n3. Open `tree-YYYY-MM-DD_HHMMSS.treefile` in your favourite tree viewer (e.g, FigTree)\n4. Open `tree-YYYY-MM-DD_HHMMSS_bb.treefile` or `tree-YYYY-MM-DD_HHMMSS_alrt.treefile` for branches with `ultra-fast bootstrap` support or `SH-aLRT` support only, respectively.\n\n## Data stream\n\nWhen running `arbow`, by default a stream is output to the console (`stdout`). \n\nData about the each sequence in the alignment is prefixed with `[SEQ]`, and is followed by:\n\n1. Count of each base (`A`, `C`, `G`, `T`, and `N` \u2013 `N` is any character other than `ACGT`)\n2. Percent missing data\n3. A status column that has 0, 1, 2, or 3 `*` depending on whether the percent missing data is `<0.5`, `>=0.5 and <1.0`, `>=1.0 and <5.0`, or `>=5`, respectively.\n\nData about each column in the alignment is prefixed with `[ALN]`, and is followed by:\n\n1. Position in the alignment\n2. Count of each base (bases counted will depend on whether all IUPAC codes are allowed or not - see below in usage)\n\n\n## Command line\n\n## Usage\n\n```\nUsage: arbow [OPTIONS] ALN\n\nOptions:\n  --version\n  -i, --all-iupac               Print count of all IUPAC code for column\n                                stats?\n\n  -s, --no-stream               Stop streaming stats to console\n  -mm, --max-missing INTEGER    Remove sites with 'mm' missing sites or more\n                                [default: 20]\n\n  -x, --major-allele-freq FLOAT  If major allele frequency is equal or larger\n                                 than consider the site constant.  [default:\n                                 0.99]\n\n  -o, --out-var-aln TEXT        Filename for alignment of variable sites.\n                                [default: aln-2020-04-07-150443.aln]\n\n  -p, --prefix TEXT             Prefix to append to IQTree output files.\n                                [default: tree-2020-04-07-150443]\n\n  -t, --iqtree-threads INTEGER  Number of cores to run IQtree  [default: 4]\n  -m, --iqtree-models TEXT      Substitution models to test.  [default:\n                                HKY,TIM2,GTR]\n\n  -f, --iqtree-freq TEXT        Base frequency models to test.  [default: F]\n  -r, --iqtree-rates TEXT       Rate category models to test.  [default: G,R]\n  -b, --iqtree-bb INTEGER       Maximum number of UltraFast Bootstrap\n                                iterations to attempt.  [default: 1000]\n\n  -a, --iqtree-alrt INTEGER     Number of replicates to perform SH-aLRT.\n                                [default: 1000]\n\n  -c, --iqtree-cmax INTEGER     Maximum number of rate categories to test.\n                                [default: 5]\n\n  -r, --ref-id TEXT              Sequence ID of the reference  [default:\n                                 MN908947.3]\n\n  --five-prime-end INTEGER       Last base of the 5' UTR region in 1-index in\n                                 the ref sequence  [default: 265]\n\n  --three-prime-start INTEGER    First base of the 3' UTR region in 1-index in\n                                 the ref sequence  [default: 29675]\n\n  --include-const                When outputting the clean alignment, leave\n                                 constant sites in the alignment. [default is\n                                 to remove]\n\n  -l, --log FILENAME             Log file to store output. Use '-' to log to\n                                 stdout  [default: arbow_stats.log]\n\n  --help                        Show this message and exit.\n```\n\n## Default behaviour explained\n\nBy default, `arbow` will remove any site in the alignment that has `20` missing data points or more, will trim the 5' and 3' UTR regions, and will consider as constant any site that has a major allele frequency larger or equal to 0.997.\n\n### Remove sites with any gaps in the alignment \n\nLet us say that you wish to remove all sites in the alignment that have **any** missing data, and retain all complete columns:\n\n```\narbow -x 1.0 -mm 0 <in.aln>\n```\n\n### Keep all sites in an alignment (i.e., skip any filtering)\n\nLet us say that you wish to keep all sites in the alignment, and you have an alignment with 200 sequences:\n\n```\narbow -x 1.0 -m 200 <in.aln>\n```\n\n### Keep constant sites in the clean alignment\n\n```\narbow --include-const <in.aln>\n```\n\n### Get help\n\n```\narbow <-h|--help>\n```\n\n### Get version\n```\narbow --version\n```\n\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MDPHL/arbow", "keywords": "bioinformatics phylogenetics multiple sequence alignment msa", "license": "", "maintainer": "", "maintainer_email": "", "name": "arbow", "package_url": "https://pypi.org/project/arbow/", "platform": "", "project_url": "https://pypi.org/project/arbow/", "project_urls": {"Bug Reports": "https://github.com/MDUPHL/arbow/issues", "Homepage": "https://github.com/MDPHL/arbow", "Source": "https://github.com/MDUPHL/arbow/"}, "release_url": "https://pypi.org/project/arbow/0.5.3/", "requires_dist": ["pandas", "click", "numpy", "biopython", "scipy"], "requires_python": ">=3.6, <4", "summary": "Cultivate your MSA to get better trees", "version": "0.5.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Arbow: cultivate your multiple sequence aligment to get better trees</h1>\n<p><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81744f4fa6fa5b4697db695e2dd3be79df4877ef/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6172626f773f7374796c653d666c61742d737175617265\"> <img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be65096c386787f68cc33e986b6562e5d1c329f8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6172626f773f7374796c653d666c61742d737175617265\"> <img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/605e5b2e60d8f63e2923bd8cbd2fdfc3328be4a4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6172626f773f7374796c653d666c61742d737175617265\"></p>\n<h2>Name</h2>\n<p>We named this tool <code>arbow</code> as that would be the phonetic pronounciation of the short, endearing,\nterm for an <a href=\"https://en.wikipedia.org/wiki/Arborist\" rel=\"nofollow\">arborist</a> in Australia.</p>\n<h2>What it does</h2>\n<p>The goal of <code>arbow</code> is to automate and simplify the production of trees from multiple sequence alignments. The tool\nhas been developed in the context of viral phylogenomics.</p>\n<p>In the current version (<code>0.5.*</code>) it:</p>\n<ol>\n<li>Reads an alignment in <code>multiFASTA</code> format</li>\n<li>Calculates stats for each sequence in the alignment</li>\n<li>Trims 5/3 prime UTR regions --- defaults set to SARS-COV-2 (Genbank accession: <code>NC_045512.2</code>)</li>\n<li>Calculates stats per column in the alignment</li>\n<li>Allows the user to set a threshold of tolerable missing data in a column, and removes all non-conforming columns from the alignment</li>\n<li>From the remaining columns, <code>arbow</code> finds all the <code>constant</code> columns according to two <code>user</code> defined criteria: <code>allow missing data</code> (i.e., a column with missing data can still count to towards <code>constant</code> sites if it meets other criteria), and the frequency of the major allow is equal to or larger than a trheshold (i.e., if the threshold is set to 0.99 and there are 100 samples, 99 of which are <code>A</code> and one is <code>G</code>, that column would be counted as a constant <code>A</code>). Filtering by frequency allows one to remove potential sequencing error.</li>\n<li>It then filters out all the <code>variable</code> columns, and outputs the variable alignment as a <code>multiFASTA</code> alignment.</li>\n<li>It runs <code>IQTree</code> with a few sensible <code>presets</code></li>\n</ol>\n<p>Currently, in step <code>4</code> above, columns that have a single observed <code>nucleotide</code> (e.g., <code>C</code>) but still have missing data that were not filtered out in step <code>3</code> are counted towards the overall frequency of that <code>base</code> in the alignment. In other words, if a <code>user</code> specifies a maximum number of 20 missing bases, and a column with 5 missing bases but with <code>A</code> in all other samples, that column will count towards the overall frequency of <code>A</code> in the alignment (i.e., majority consensus imputation). This assumptions is less risky the larger the number of samples in the alignment.</p>\n<p>For step <code>5</code>, missing data (i.e., <code>-</code> and <code>N</code>) are all codes as <code>N</code>.</p>\n<p>Tests are underway to figure out how these assumptions might affect the output.</p>\n<h2>Dependencies</h2>\n<ol>\n<li>Python &gt;=3.6</li>\n<li>IQTree 1.6+ (not tested on IQTree 2 as it is not production ready yet)</li>\n<li>BioPython</li>\n<li>Pandas</li>\n<li>NumPy</li>\n</ol>\n<h2>Installation</h2>\n<h3>Brew</h3>\n<pre><code>brew install iqtree\npip&lt;3&gt; install arbow\n</code></pre>\n<h3>Conda</h3>\n<pre><code>conda install -c bioconda iqtree\npip&lt;3&gt; install arbow\n</code></pre>\n<h2>Running</h2>\n<ol>\n<li>Generate a mulitple sequence alignment with your favourite aligner (e.g., MAFTT). Output a <code>multiFASTA</code> file.</li>\n<li>Run <code>arbow &lt;aln.fa&gt;</code></li>\n<li>Open <code>tree-YYYY-MM-DD_HHMMSS.treefile</code> in your favourite tree viewer (e.g, FigTree)</li>\n<li>Open <code>tree-YYYY-MM-DD_HHMMSS_bb.treefile</code> or <code>tree-YYYY-MM-DD_HHMMSS_alrt.treefile</code> for branches with <code>ultra-fast bootstrap</code> support or <code>SH-aLRT</code> support only, respectively.</li>\n</ol>\n<h2>Data stream</h2>\n<p>When running <code>arbow</code>, by default a stream is output to the console (<code>stdout</code>).</p>\n<p>Data about the each sequence in the alignment is prefixed with <code>[SEQ]</code>, and is followed by:</p>\n<ol>\n<li>Count of each base (<code>A</code>, <code>C</code>, <code>G</code>, <code>T</code>, and <code>N</code> \u2013 <code>N</code> is any character other than <code>ACGT</code>)</li>\n<li>Percent missing data</li>\n<li>A status column that has 0, 1, 2, or 3 <code>*</code> depending on whether the percent missing data is <code>&lt;0.5</code>, <code>&gt;=0.5 and &lt;1.0</code>, <code>&gt;=1.0 and &lt;5.0</code>, or <code>&gt;=5</code>, respectively.</li>\n</ol>\n<p>Data about each column in the alignment is prefixed with <code>[ALN]</code>, and is followed by:</p>\n<ol>\n<li>Position in the alignment</li>\n<li>Count of each base (bases counted will depend on whether all IUPAC codes are allowed or not - see below in usage)</li>\n</ol>\n<h2>Command line</h2>\n<h2>Usage</h2>\n<pre><code>Usage: arbow [OPTIONS] ALN\n\nOptions:\n  --version\n  -i, --all-iupac               Print count of all IUPAC code for column\n                                stats?\n\n  -s, --no-stream               Stop streaming stats to console\n  -mm, --max-missing INTEGER    Remove sites with 'mm' missing sites or more\n                                [default: 20]\n\n  -x, --major-allele-freq FLOAT  If major allele frequency is equal or larger\n                                 than consider the site constant.  [default:\n                                 0.99]\n\n  -o, --out-var-aln TEXT        Filename for alignment of variable sites.\n                                [default: aln-2020-04-07-150443.aln]\n\n  -p, --prefix TEXT             Prefix to append to IQTree output files.\n                                [default: tree-2020-04-07-150443]\n\n  -t, --iqtree-threads INTEGER  Number of cores to run IQtree  [default: 4]\n  -m, --iqtree-models TEXT      Substitution models to test.  [default:\n                                HKY,TIM2,GTR]\n\n  -f, --iqtree-freq TEXT        Base frequency models to test.  [default: F]\n  -r, --iqtree-rates TEXT       Rate category models to test.  [default: G,R]\n  -b, --iqtree-bb INTEGER       Maximum number of UltraFast Bootstrap\n                                iterations to attempt.  [default: 1000]\n\n  -a, --iqtree-alrt INTEGER     Number of replicates to perform SH-aLRT.\n                                [default: 1000]\n\n  -c, --iqtree-cmax INTEGER     Maximum number of rate categories to test.\n                                [default: 5]\n\n  -r, --ref-id TEXT              Sequence ID of the reference  [default:\n                                 MN908947.3]\n\n  --five-prime-end INTEGER       Last base of the 5' UTR region in 1-index in\n                                 the ref sequence  [default: 265]\n\n  --three-prime-start INTEGER    First base of the 3' UTR region in 1-index in\n                                 the ref sequence  [default: 29675]\n\n  --include-const                When outputting the clean alignment, leave\n                                 constant sites in the alignment. [default is\n                                 to remove]\n\n  -l, --log FILENAME             Log file to store output. Use '-' to log to\n                                 stdout  [default: arbow_stats.log]\n\n  --help                        Show this message and exit.\n</code></pre>\n<h2>Default behaviour explained</h2>\n<p>By default, <code>arbow</code> will remove any site in the alignment that has <code>20</code> missing data points or more, will trim the 5' and 3' UTR regions, and will consider as constant any site that has a major allele frequency larger or equal to 0.997.</p>\n<h3>Remove sites with any gaps in the alignment</h3>\n<p>Let us say that you wish to remove all sites in the alignment that have <strong>any</strong> missing data, and retain all complete columns:</p>\n<pre><code>arbow -x 1.0 -mm 0 &lt;in.aln&gt;\n</code></pre>\n<h3>Keep all sites in an alignment (i.e., skip any filtering)</h3>\n<p>Let us say that you wish to keep all sites in the alignment, and you have an alignment with 200 sequences:</p>\n<pre><code>arbow -x 1.0 -m 200 &lt;in.aln&gt;\n</code></pre>\n<h3>Keep constant sites in the clean alignment</h3>\n<pre><code>arbow --include-const &lt;in.aln&gt;\n</code></pre>\n<h3>Get help</h3>\n<pre><code>arbow &lt;-h|--help&gt;\n</code></pre>\n<h3>Get version</h3>\n<pre><code>arbow --version\n</code></pre>\n\n          </div>"}, "last_serial": 7176303, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7490e534271871fd4d7e89d442b66ebb", "sha256": "b0c9c814a842de860a9c29a0363f80c80eb219c891c0ed453202fad1779f6581"}, "downloads": -1, "filename": "arbow-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7490e534271871fd4d7e89d442b66ebb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 6569, "upload_time": "2020-04-07T22:42:02", "upload_time_iso_8601": "2020-04-07T22:42:02.261063Z", "url": "https://files.pythonhosted.org/packages/33/0e/26bf2c5926e7e04a0aef5443e441ea8c2a31f465abd66df55ec48d99c5b8/arbow-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "617a4aa3bbe9507e130d8520aabf8a55", "sha256": "81e382260cadc89dd0f6754e8a491db820d6ec44643005027377cac692976be3"}, "downloads": -1, "filename": "arbow-0.1.0.tar.gz", "has_sig": false, "md5_digest": "617a4aa3bbe9507e130d8520aabf8a55", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 6626, "upload_time": "2020-04-07T22:42:04", "upload_time_iso_8601": "2020-04-07T22:42:04.067391Z", "url": "https://files.pythonhosted.org/packages/4f/82/524b508b48713266b10313c9f55f2c039c849770a59f6aa940256aaf652c/arbow-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "358c695df4b596b881f37ad1b10db515", "sha256": "15341e2cdb4ec60797c8041a0c17e5ac931a7ae12ed8c9ce0256df053ffa7b76"}, "downloads": -1, "filename": "arbow-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "358c695df4b596b881f37ad1b10db515", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 6743, "upload_time": "2020-04-07T23:04:07", "upload_time_iso_8601": "2020-04-07T23:04:07.023845Z", "url": "https://files.pythonhosted.org/packages/84/52/3f7135fc64ab2aaf17216e402f25099df72250c1eb6e1ac0816f8a2b5c14/arbow-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7326bbe7cf6aecbe5bf3d1885c513568", "sha256": "54bbf5c81715c576168b93c0c541d3cf0d86ee66609aa70405e863454cbbbd8e"}, "downloads": -1, "filename": "arbow-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7326bbe7cf6aecbe5bf3d1885c513568", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 6862, "upload_time": "2020-04-07T23:04:07", "upload_time_iso_8601": "2020-04-07T23:04:07.967796Z", "url": "https://files.pythonhosted.org/packages/5e/2f/304a23067c5779e263562276c13956cebc8c60e9148b43baf03243f20b2a/arbow-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "6b512b84fb5ff2b59b877cf3779f9466", "sha256": "47739eda1f0701fdf28afdfcc5c2661a681af6be032eaa187c2b2ecf26a965ec"}, "downloads": -1, "filename": "arbow-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6b512b84fb5ff2b59b877cf3779f9466", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 6765, "upload_time": "2020-04-07T23:14:04", "upload_time_iso_8601": "2020-04-07T23:14:04.791335Z", "url": "https://files.pythonhosted.org/packages/2f/d2/2a590f303fe27914c4de55990bf395345382a2473e68a9ed8d4b45269eb6/arbow-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a366fe28387648d446cada0a2d3e3eb2", "sha256": "5aa6303767e20b5f493d707c07c9a2d65f73c2a6ae7c08af5e182be3600e21d6"}, "downloads": -1, "filename": "arbow-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a366fe28387648d446cada0a2d3e3eb2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 6881, "upload_time": "2020-04-07T23:14:06", "upload_time_iso_8601": "2020-04-07T23:14:06.268266Z", "url": "https://files.pythonhosted.org/packages/a5/c2/c1823dc24de68cad1cb5c122f6962d4bc6232644da35681b338a1e34700a/arbow-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "7909600b79f1c0219ee7e4874b177425", "sha256": "43b7bb505acb3c6703b9d595b8a76fea0212d71f23efaba0bfcb948a6d41c564"}, "downloads": -1, "filename": "arbow-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7909600b79f1c0219ee7e4874b177425", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 6863, "upload_time": "2020-04-08T03:05:37", "upload_time_iso_8601": "2020-04-08T03:05:37.212138Z", "url": "https://files.pythonhosted.org/packages/43/fd/b4a903802450f713c1412582df776ebab97f9c339b4f8263c5ac17d8479f/arbow-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5758dd5a9e0f4cda35d8e87f9b2be84e", "sha256": "d47e31f6372971a3c331c315070c526b645ba01c42c8584ac6839bd8bd75668f"}, "downloads": -1, "filename": "arbow-0.1.3.tar.gz", "has_sig": false, "md5_digest": "5758dd5a9e0f4cda35d8e87f9b2be84e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 6968, "upload_time": "2020-04-08T03:05:38", "upload_time_iso_8601": "2020-04-08T03:05:38.530881Z", "url": "https://files.pythonhosted.org/packages/7e/06/521692394db9c9fd77e4cbd4caac77e4644555e03a8b73091c007b124f01/arbow-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "089098ca81b0045000b1fb65e64822d5", "sha256": "31318eb0e3adf80a6972a46bfc1a96b25a5a8b86844be71fcc0aa9e7c9e2a65f"}, "downloads": -1, "filename": "arbow-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "089098ca81b0045000b1fb65e64822d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 7261, "upload_time": "2020-04-19T05:58:21", "upload_time_iso_8601": "2020-04-19T05:58:21.182037Z", "url": "https://files.pythonhosted.org/packages/97/36/e7e03152fe69daa9c39f38108486baff68cce77a2f6c59a1dbaeb24a749d/arbow-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5b6111f51810475938b0db22d8d766e", "sha256": "f97299e44828f9e8d137a2262f5d1f817550db14ce326a77cf018eacd54133d9"}, "downloads": -1, "filename": "arbow-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d5b6111f51810475938b0db22d8d766e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 7349, "upload_time": "2020-04-19T05:58:22", "upload_time_iso_8601": "2020-04-19T05:58:22.054053Z", "url": "https://files.pythonhosted.org/packages/b9/8f/2ad1a7369a8e86ba62682c19abb48a369e2003a2d35fd2657720af1b945c/arbow-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "665c825dbf1fb8dd911eb8add3bada55", "sha256": "cf1c34350ed56cad4a05989d0c7c8d35ca5d5b494904957f1d25d21902ebc05b"}, "downloads": -1, "filename": "arbow-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "665c825dbf1fb8dd911eb8add3bada55", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 7532, "upload_time": "2020-04-20T03:46:51", "upload_time_iso_8601": "2020-04-20T03:46:51.185591Z", "url": "https://files.pythonhosted.org/packages/0d/d6/a7132747036f38c9c291f930ba91f5a8ce113237f9aaa0163c612990d828/arbow-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2f7e7617d0139d2b668071b5648bc6e", "sha256": "c086f3c89c8b5c8e9da12d631c45c6d146375f18c78ae6c55a4e8583c241fade"}, "downloads": -1, "filename": "arbow-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a2f7e7617d0139d2b668071b5648bc6e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 7626, "upload_time": "2020-04-20T03:46:52", "upload_time_iso_8601": "2020-04-20T03:46:52.656264Z", "url": "https://files.pythonhosted.org/packages/fb/b4/3054f2933eee2445e25a755ea96980fff9e495ead6d6fe92c1adad323050/arbow-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "de6a1ebbbbf7cfe1112192b92159c4f9", "sha256": "65682953e500aaae7486e6e0b3059a6c974e6160322b85dfd2058c4f1638b8d3"}, "downloads": -1, "filename": "arbow-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "de6a1ebbbbf7cfe1112192b92159c4f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 7521, "upload_time": "2020-04-20T03:49:16", "upload_time_iso_8601": "2020-04-20T03:49:16.097468Z", "url": "https://files.pythonhosted.org/packages/fe/59/f7b36f6db20cfde4b0b08c18fdaeba74247e8bb48e0f72edd8f363ac7304/arbow-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e8237cecd62d2c9460c491d4cbc62b3", "sha256": "d0725b7123d8cdfc60354be5d9c529350c7ecf8dbbd5700eed04ac583f6db9a6"}, "downloads": -1, "filename": "arbow-0.3.1.tar.gz", "has_sig": false, "md5_digest": "6e8237cecd62d2c9460c491d4cbc62b3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 7600, "upload_time": "2020-04-20T03:49:17", "upload_time_iso_8601": "2020-04-20T03:49:17.251379Z", "url": "https://files.pythonhosted.org/packages/93/e2/26914ed08a1d2f4f2a8d03bc8396bff19c714eb77e5f3f68384197fa0db8/arbow-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "f09c158456756a717241c44e43d833a4", "sha256": "a09518bf30661fd3db4ef30799b43cfa994069937982f29dd0f010a37d426096"}, "downloads": -1, "filename": "arbow-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f09c158456756a717241c44e43d833a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 8956, "upload_time": "2020-04-26T21:33:13", "upload_time_iso_8601": "2020-04-26T21:33:13.369943Z", "url": "https://files.pythonhosted.org/packages/61/00/fcec1dc432888f733712e2a6518114f974049c6387633f31a7105335698a/arbow-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e502398768fdf251842c9a65d07edcbf", "sha256": "7b555d0fd59d749cd6a05e156c702c21c644bb82a1c54251272328fd0b6c0f74"}, "downloads": -1, "filename": "arbow-0.4.0.tar.gz", "has_sig": false, "md5_digest": "e502398768fdf251842c9a65d07edcbf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 9013, "upload_time": "2020-04-26T21:33:14", "upload_time_iso_8601": "2020-04-26T21:33:14.896413Z", "url": "https://files.pythonhosted.org/packages/8a/03/ac2002008e7450e5428afe9a407e5b7f5c6048990be17e48d3496b4c4d46/arbow-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "128dffe149ea77bcfeba8e97648db599", "sha256": "104dd751e2f0cec88095914dd9e3ea0dde3377bb831d107c32b1a3bd54f9d9b8"}, "downloads": -1, "filename": "arbow-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "128dffe149ea77bcfeba8e97648db599", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 8958, "upload_time": "2020-04-26T22:25:59", "upload_time_iso_8601": "2020-04-26T22:25:59.229358Z", "url": "https://files.pythonhosted.org/packages/71/25/3f69ea4f698e5d24d7dc5a2882b3fba50ac84bc28c2884dd731b6d39bf3a/arbow-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42d0f63cf029c763fe2ae5ea08e8eae0", "sha256": "32c6a541bfb67d947870d6f939b0f2b9604e55033d951d6c61384d5700385bda"}, "downloads": -1, "filename": "arbow-0.4.1.tar.gz", "has_sig": false, "md5_digest": "42d0f63cf029c763fe2ae5ea08e8eae0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 9017, "upload_time": "2020-04-26T22:26:00", "upload_time_iso_8601": "2020-04-26T22:26:00.098539Z", "url": "https://files.pythonhosted.org/packages/c6/2c/ac149123f0589d578e35ce65c3b0afde136241734fd01538a23b5f631f03/arbow-0.4.1.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "d13b600f65b1d67d62314ddc66074069", "sha256": "3d364e9afbf75f955aadd402dde0b4bad7f26312e264a742ba36d99ee4fb07b6"}, "downloads": -1, "filename": "arbow-0.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d13b600f65b1d67d62314ddc66074069", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 8962, "upload_time": "2020-04-27T03:02:28", "upload_time_iso_8601": "2020-04-27T03:02:28.127504Z", "url": "https://files.pythonhosted.org/packages/90/9f/2264615b380d34155a2219e9bd83b9a0192077979bf7f6ba3bc32d94285f/arbow-0.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29768d930b2b637f0fe7f1138583fe54", "sha256": "87fc78b3bd1c4f3acb07f2fd0525162a3ef0dc98247e3c4f7549606f74e1f71b"}, "downloads": -1, "filename": "arbow-0.4.3.tar.gz", "has_sig": false, "md5_digest": "29768d930b2b637f0fe7f1138583fe54", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 9017, "upload_time": "2020-04-27T03:02:29", "upload_time_iso_8601": "2020-04-27T03:02:29.306772Z", "url": "https://files.pythonhosted.org/packages/50/1f/7bed7684f6f200482a622061cb74ce4c0204b9972178b498cfa8d5431f4b/arbow-0.4.3.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "a4d1312d503908df861b3fb7a0f9ef58", "sha256": "267542a94639af874bfdfd2ec11d29ddf68156ef60f7c29cbd73f577e0cee163"}, "downloads": -1, "filename": "arbow-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a4d1312d503908df861b3fb7a0f9ef58", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 9355, "upload_time": "2020-04-27T03:47:57", "upload_time_iso_8601": "2020-04-27T03:47:57.729675Z", "url": "https://files.pythonhosted.org/packages/2b/16/dbd93ab55aaa068358d1ee08cc3110252e842f524b025ecb61be83243fce/arbow-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6ff203445683420136f759c00b6e938", "sha256": "89d003d44eff7acb08e0b38985c58a2f592ad823c29e19684e9e6209623bd26c"}, "downloads": -1, "filename": "arbow-0.5.0.tar.gz", "has_sig": false, "md5_digest": "c6ff203445683420136f759c00b6e938", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 10301, "upload_time": "2020-04-27T03:47:59", "upload_time_iso_8601": "2020-04-27T03:47:59.605178Z", "url": "https://files.pythonhosted.org/packages/7b/26/9293ab540d0f66fbee500f296c71d57f6f045af4c62ef25da8998b7b6da7/arbow-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "a506c06c76ee3ac5a3b9a76a8c497c8d", "sha256": "de775c90967daa32f94c38ebf55b47f8d0c1d1c21bf6512ef955e5eb138f3798"}, "downloads": -1, "filename": "arbow-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a506c06c76ee3ac5a3b9a76a8c497c8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 9565, "upload_time": "2020-05-05T17:43:54", "upload_time_iso_8601": "2020-05-05T17:43:54.460483Z", "url": "https://files.pythonhosted.org/packages/48/68/0b302e8149271dfe1b1f7d0fc1a52c9fb7329705887816a2c2e886f8580a/arbow-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e08c26f695b87fc2cd7c460244d0d66", "sha256": "dbc1762a16c021ad0b2dec2d7797a0ec92942ac48da2d0e25fa3b6033e94bef8"}, "downloads": -1, "filename": "arbow-0.5.1.tar.gz", "has_sig": false, "md5_digest": "0e08c26f695b87fc2cd7c460244d0d66", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 10509, "upload_time": "2020-05-05T17:43:55", "upload_time_iso_8601": "2020-05-05T17:43:55.405973Z", "url": "https://files.pythonhosted.org/packages/ce/eb/43b02294c077f055cac64e2995bdaf08825b2815ac9aec96d4201d5e2a9a/arbow-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "8384b5d83fbc01dc043408875ac79f4d", "sha256": "421a4b1d8e2489d8450066450dcdea3fe3cd7f0dea1e3ae841d2655ce5d3e790"}, "downloads": -1, "filename": "arbow-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8384b5d83fbc01dc043408875ac79f4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 9567, "upload_time": "2020-05-05T18:17:18", "upload_time_iso_8601": "2020-05-05T18:17:18.233774Z", "url": "https://files.pythonhosted.org/packages/2a/98/366722b569f0173daf8bf8f7d17da292ac18cb8fae28c31176a6088407e9/arbow-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9c575fab5e5e012b5656df3dd796ce4", "sha256": "a4f331271a721a1fa3a76498afd59a4dffb31ba912620c568bb58eb96a532193"}, "downloads": -1, "filename": "arbow-0.5.2.tar.gz", "has_sig": false, "md5_digest": "e9c575fab5e5e012b5656df3dd796ce4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 10506, "upload_time": "2020-05-05T18:17:19", "upload_time_iso_8601": "2020-05-05T18:17:19.426080Z", "url": "https://files.pythonhosted.org/packages/d7/da/c6f2934c85aa5741f8b3f3959d08b6e21363cd7298fc09bac86340e87b65/arbow-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "c4dd0ad69c87c5ef317ded933649adf8", "sha256": "aedb241b744bda60ba816d663839dd687c3b65d804ce04a049436ae430d7b3e2"}, "downloads": -1, "filename": "arbow-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c4dd0ad69c87c5ef317ded933649adf8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 9820, "upload_time": "2020-05-05T22:35:07", "upload_time_iso_8601": "2020-05-05T22:35:07.488718Z", "url": "https://files.pythonhosted.org/packages/32/89/e2f486d1cd7b4f932efc6779467bce04fcc62ce4ec993244239ec890f4ca/arbow-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ac1d4edc7726aca598ecf77a1075389", "sha256": "0429ad0a134bed69cc7c2bd2d4aa86c818d9814865fb77047647fc2c303b168e"}, "downloads": -1, "filename": "arbow-0.5.3.tar.gz", "has_sig": false, "md5_digest": "4ac1d4edc7726aca598ecf77a1075389", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 10751, "upload_time": "2020-05-05T22:35:08", "upload_time_iso_8601": "2020-05-05T22:35:08.406220Z", "url": "https://files.pythonhosted.org/packages/fd/46/7bcd7694ec098a6fd524b4fb30aff1fa22319bf709e2363ae5004f5fe521/arbow-0.5.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c4dd0ad69c87c5ef317ded933649adf8", "sha256": "aedb241b744bda60ba816d663839dd687c3b65d804ce04a049436ae430d7b3e2"}, "downloads": -1, "filename": "arbow-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c4dd0ad69c87c5ef317ded933649adf8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 9820, "upload_time": "2020-05-05T22:35:07", "upload_time_iso_8601": "2020-05-05T22:35:07.488718Z", "url": "https://files.pythonhosted.org/packages/32/89/e2f486d1cd7b4f932efc6779467bce04fcc62ce4ec993244239ec890f4ca/arbow-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ac1d4edc7726aca598ecf77a1075389", "sha256": "0429ad0a134bed69cc7c2bd2d4aa86c818d9814865fb77047647fc2c303b168e"}, "downloads": -1, "filename": "arbow-0.5.3.tar.gz", "has_sig": false, "md5_digest": "4ac1d4edc7726aca598ecf77a1075389", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 10751, "upload_time": "2020-05-05T22:35:08", "upload_time_iso_8601": "2020-05-05T22:35:08.406220Z", "url": "https://files.pythonhosted.org/packages/fd/46/7bcd7694ec098a6fd524b4fb30aff1fa22319bf709e2363ae5004f5fe521/arbow-0.5.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:26 2020"}