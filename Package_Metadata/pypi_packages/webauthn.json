{"info": {"author": "Duo Labs", "author_email": "labs@duo.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python"], "description": "\nPyWebAuthn\n==========\n\n\n.. image:: https://img.shields.io/pypi/v/webauthn.svg\n   :target: https://pypi.python.org/pypi/webauthn\n   :alt: PyPI\n\n\n.. image:: https://img.shields.io/badge/license-BSD-blue.svg\n   :target: https://raw.githubusercontent.com/duo-labs/py_webauthn/master/LICENSE\n   :alt: GitHub license\n\n\nPyWebAuthn is a Python module which can be used to handle `WebAuthn <https://www.w3.org/TR/webauthn/>`_ registration and assertion. Currently, WebAuthn is supported in `Firefox <https://www.mozilla.org/en-US/firefox/new/>`_\\ , `Chrome <https://www.google.com/chrome/>`_\\ , and `Edge <https://www.microsoft.com/en-us/windows/microsoft-edge>`_.\n\nInstallation\n============\n\n``pip install webauthn``\n\nUsage\n=====\n\nGenerating credential options, (to be passed to ``navigator.credentials.create``\\ ):\n\n.. code-block:: python\n\n   make_credential_options = webauthn.WebAuthnMakeCredentialOptions(\n       challenge,\n       rp_name,\n       rp_id,\n       user_id,\n       username,\n       display_name,\n       icon_url)\n\nCreating a ``WebAuthnUser`` object. Used during the assertion (login) process:\n\n.. code-block:: python\n\n   webauthn_user = webauthn.WebAuthnUser(\n       user.id,\n       user.username,\n       user.display_name,\n       user.icon_url,\n       user.credential_id,\n       user.pub_key,\n       user.sign_count,\n       user.rp_id)\n\nGenerating assertion options, (to be passed to ``navigator.credentials.get``\\ ):\n\n.. code-block:: python\n\n   webauthn_assertion_options = webauthn.WebAuthnAssertionOptions(\n       webauthn_user,\n       challenge)\n\nVerifying a registration response, (result of ``navigator.credentials.create``\\ ):\n\n.. code-block:: python\n\n   webauthn_registration_response = webauthn.WebAuthnRegistrationResponse(\n       RP_ID,\n       ORIGIN,\n       registration_response,\n       challenge,\n       trust_anchor_dir,\n       trusted_attestation_cert_required,\n       self_attestation_permitted,\n       none_attestation_permitted,\n       uv_required=False)  # User Verification\n\n   try:\n       webauthn_credential = webauthn_registration_response.verify()\n   except Exception as e:\n       return jsonify({'fail': 'Registration failed. Error: {}'.format(e)})\n\n   # Create User\n\nVerifying an assertion response, (result of ``navigator.credentials.get``\\ ):\n\n.. code-block:: python\n\n   webauthn_user = webauthn.WebAuthnUser(\n       user.ukey,\n       user.username,\n       user.display_name,\n       user.icon_url,\n       user.credential_id,\n       user.pub_key,\n       user.sign_count,\n       user.rp_id)\n\n   webauthn_assertion_response = webauthn.WebAuthnAssertionResponse(\n       webauthn_user,\n       assertion_response,\n       challenge,\n       origin,\n       uv_required=False)  # User Verification\n\n   try:\n       sign_count = webauthn_assertion_response.verify()\n   except Exception as e:\n       return jsonify({'fail': 'Assertion failed. Error: {}'.format(e)})\n\n   # Update counter.\n   user.sign_count = sign_count\n\nFlask Demo\n==========\n\nThere is a `Flask <http://flask.pocoo.org/>`_ demo available in the ``flask_demo`` directory. Follow these steps to run the Flask web app:\n\n\n#. ``cd flask_demo``\n#. ``pip install -r requirements.txt``\n#. ``python create_db.py``\n#. ``python app.py``\n#. Go to `https://localhost:5000 <https://localhost:5000>`_ in your web browser. Try registering and logging in with a compatible U2F or WebAuthn authenticator.\n#. Profit?\n\nFlask Demo (Docker)\n===================\n\nTo run the `Flask <http://flask.pocoo.org/>`_ demo with `Docker <https://www.docker.com/>`_\\ :\n\n\n#. Install Docker.\n#. ``docker-compose up -d``\n#. Go to `https://localhost:5000 <https://localhost:5000>`_ in your web browser. Try registering and logging in with a compatible U2F or WebAuthn authenticator.\n\nDemo Troubleshooting\n====================\nBy default, both the local and Docker demos try to run the web app using HTTPS. This may cause issues such as\n``NET::ERR_CERT_AUTHORITY_INVALID`` on Chrome. To get around this issue on Chrome, you can do the following:\n\n#. Generate a self-signed certificate through tools like mkcert_\n#. Enable requests to localhost over HTTPS through the following flag: ``chrome://flags/#allow-insecure-localhost``.\n\nFor Firefox, you should be able to proceed to the page being served by the Flask app by doing the following:\n\n#. Clicking 'Advanced'\n#. Clicking 'Accept the Risk and Continue'.\n\n.. _mkcert: https://github.com/FiloSottile/mkcert\n\nUnit Tests\n==========\n\nTo run the unit tests, use the following command from the top directory:\n\n``python3 -m unittest``\n\nThis will run both the `py_webauthn` library tests and the Flask demo tests.\n\nNote\n====\n\nCurrently, PyWebAuthn does not support performing the following verifications.\n\n\n* `Token Binding ID <https://www.w3.org/TR/webauthn/#dom-collectedclientdata-tokenbindingid>`_\n* `Authenticator Extensions <https://www.w3.org/TR/webauthn/#dom-collectedclientdata-authenticatorextensions>`_\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://github.com/duo-labs/py_webauthn/archive/0.4.7.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/duo-labs/py_webauthn", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "webauthn", "package_url": "https://pypi.org/project/webauthn/", "platform": "", "project_url": "https://pypi.org/project/webauthn/", "project_urls": {"Download": "https://github.com/duo-labs/py_webauthn/archive/0.4.7.tar.gz", "Homepage": "https://github.com/duo-labs/py_webauthn"}, "release_url": "https://pypi.org/project/webauthn/0.4.7/", "requires_dist": ["cbor2 (>=4.0.1)", "cryptography (>=2.3.1)", "pyOpenSSL (>=16.0.0)", "six (>=1.11.0)", "future (>=0.17.1)"], "requires_python": "", "summary": "A WebAuthn Python module.", "version": "0.4.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pywebauthn\">\n<h2>PyWebAuthn</h2>\n<a href=\"https://pypi.python.org/pypi/webauthn\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/402fd571df235f6d9f059ee4a323c4c65e50a7c8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f776562617574686e2e737667\"></a>\n<a href=\"https://raw.githubusercontent.com/duo-labs/py_webauthn/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9171fec0f2756a39e1306c6dc870bf846e0b4f1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4253442d626c75652e737667\"></a>\n<p>PyWebAuthn is a Python module which can be used to handle <a href=\"https://www.w3.org/TR/webauthn/\" rel=\"nofollow\">WebAuthn</a> registration and assertion. Currently, WebAuthn is supported in <a href=\"https://www.mozilla.org/en-US/firefox/new/\" rel=\"nofollow\">Firefox</a>, <a href=\"https://www.google.com/chrome/\" rel=\"nofollow\">Chrome</a>, and <a href=\"https://www.microsoft.com/en-us/windows/microsoft-edge\" rel=\"nofollow\">Edge</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install webauthn</tt></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Generating credential options, (to be passed to <tt>navigator.credentials.create</tt>):</p>\n<pre><span class=\"n\">make_credential_options</span> <span class=\"o\">=</span> <span class=\"n\">webauthn</span><span class=\"o\">.</span><span class=\"n\">WebAuthnMakeCredentialOptions</span><span class=\"p\">(</span>\n    <span class=\"n\">challenge</span><span class=\"p\">,</span>\n    <span class=\"n\">rp_name</span><span class=\"p\">,</span>\n    <span class=\"n\">rp_id</span><span class=\"p\">,</span>\n    <span class=\"n\">user_id</span><span class=\"p\">,</span>\n    <span class=\"n\">username</span><span class=\"p\">,</span>\n    <span class=\"n\">display_name</span><span class=\"p\">,</span>\n    <span class=\"n\">icon_url</span><span class=\"p\">)</span>\n</pre>\n<p>Creating a <tt>WebAuthnUser</tt> object. Used during the assertion (login) process:</p>\n<pre><span class=\"n\">webauthn_user</span> <span class=\"o\">=</span> <span class=\"n\">webauthn</span><span class=\"o\">.</span><span class=\"n\">WebAuthnUser</span><span class=\"p\">(</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">display_name</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">icon_url</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">credential_id</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">pub_key</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">sign_count</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">rp_id</span><span class=\"p\">)</span>\n</pre>\n<p>Generating assertion options, (to be passed to <tt>navigator.credentials.get</tt>):</p>\n<pre><span class=\"n\">webauthn_assertion_options</span> <span class=\"o\">=</span> <span class=\"n\">webauthn</span><span class=\"o\">.</span><span class=\"n\">WebAuthnAssertionOptions</span><span class=\"p\">(</span>\n    <span class=\"n\">webauthn_user</span><span class=\"p\">,</span>\n    <span class=\"n\">challenge</span><span class=\"p\">)</span>\n</pre>\n<p>Verifying a registration response, (result of <tt>navigator.credentials.create</tt>):</p>\n<pre><span class=\"n\">webauthn_registration_response</span> <span class=\"o\">=</span> <span class=\"n\">webauthn</span><span class=\"o\">.</span><span class=\"n\">WebAuthnRegistrationResponse</span><span class=\"p\">(</span>\n    <span class=\"n\">RP_ID</span><span class=\"p\">,</span>\n    <span class=\"n\">ORIGIN</span><span class=\"p\">,</span>\n    <span class=\"n\">registration_response</span><span class=\"p\">,</span>\n    <span class=\"n\">challenge</span><span class=\"p\">,</span>\n    <span class=\"n\">trust_anchor_dir</span><span class=\"p\">,</span>\n    <span class=\"n\">trusted_attestation_cert_required</span><span class=\"p\">,</span>\n    <span class=\"n\">self_attestation_permitted</span><span class=\"p\">,</span>\n    <span class=\"n\">none_attestation_permitted</span><span class=\"p\">,</span>\n    <span class=\"n\">uv_required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>  <span class=\"c1\"># User Verification</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">webauthn_credential</span> <span class=\"o\">=</span> <span class=\"n\">webauthn_registration_response</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">({</span><span class=\"s1\">'fail'</span><span class=\"p\">:</span> <span class=\"s1\">'Registration failed. Error: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)})</span>\n\n<span class=\"c1\"># Create User</span>\n</pre>\n<p>Verifying an assertion response, (result of <tt>navigator.credentials.get</tt>):</p>\n<pre><span class=\"n\">webauthn_user</span> <span class=\"o\">=</span> <span class=\"n\">webauthn</span><span class=\"o\">.</span><span class=\"n\">WebAuthnUser</span><span class=\"p\">(</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">ukey</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">display_name</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">icon_url</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">credential_id</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">pub_key</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">sign_count</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">rp_id</span><span class=\"p\">)</span>\n\n<span class=\"n\">webauthn_assertion_response</span> <span class=\"o\">=</span> <span class=\"n\">webauthn</span><span class=\"o\">.</span><span class=\"n\">WebAuthnAssertionResponse</span><span class=\"p\">(</span>\n    <span class=\"n\">webauthn_user</span><span class=\"p\">,</span>\n    <span class=\"n\">assertion_response</span><span class=\"p\">,</span>\n    <span class=\"n\">challenge</span><span class=\"p\">,</span>\n    <span class=\"n\">origin</span><span class=\"p\">,</span>\n    <span class=\"n\">uv_required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>  <span class=\"c1\"># User Verification</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">sign_count</span> <span class=\"o\">=</span> <span class=\"n\">webauthn_assertion_response</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">({</span><span class=\"s1\">'fail'</span><span class=\"p\">:</span> <span class=\"s1\">'Assertion failed. Error: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)})</span>\n\n<span class=\"c1\"># Update counter.</span>\n<span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">sign_count</span> <span class=\"o\">=</span> <span class=\"n\">sign_count</span>\n</pre>\n</div>\n<div id=\"flask-demo\">\n<h2>Flask Demo</h2>\n<p>There is a <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a> demo available in the <tt>flask_demo</tt> directory. Follow these steps to run the Flask web app:</p>\n<ol>\n<li><tt>cd flask_demo</tt></li>\n<li><tt>pip install <span class=\"pre\">-r</span> requirements.txt</tt></li>\n<li><tt>python create_db.py</tt></li>\n<li><tt>python app.py</tt></li>\n<li>Go to <a href=\"https://localhost:5000\" rel=\"nofollow\">https://localhost:5000</a> in your web browser. Try registering and logging in with a compatible U2F or WebAuthn authenticator.</li>\n<li>Profit?</li>\n</ol>\n</div>\n<div id=\"flask-demo-docker\">\n<h2>Flask Demo (Docker)</h2>\n<p>To run the <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a> demo with <a href=\"https://www.docker.com/\" rel=\"nofollow\">Docker</a>:</p>\n<ol>\n<li>Install Docker.</li>\n<li><tt><span class=\"pre\">docker-compose</span> up <span class=\"pre\">-d</span></tt></li>\n<li>Go to <a href=\"https://localhost:5000\" rel=\"nofollow\">https://localhost:5000</a> in your web browser. Try registering and logging in with a compatible U2F or WebAuthn authenticator.</li>\n</ol>\n</div>\n<div id=\"demo-troubleshooting\">\n<h2>Demo Troubleshooting</h2>\n<p>By default, both the local and Docker demos try to run the web app using HTTPS. This may cause issues such as\n<tt><span class=\"pre\">NET::ERR_CERT_AUTHORITY_INVALID</span></tt> on Chrome. To get around this issue on Chrome, you can do the following:</p>\n<ol>\n<li>Generate a self-signed certificate through tools like <a href=\"https://github.com/FiloSottile/mkcert\" rel=\"nofollow\">mkcert</a></li>\n<li>Enable requests to localhost over HTTPS through the following flag: <tt><span class=\"pre\">chrome://flags/#allow-insecure-localhost</span></tt>.</li>\n</ol>\n<p>For Firefox, you should be able to proceed to the page being served by the Flask app by doing the following:</p>\n<ol>\n<li>Clicking \u2018Advanced\u2019</li>\n<li>Clicking \u2018Accept the Risk and Continue\u2019.</li>\n</ol>\n</div>\n<div id=\"unit-tests\">\n<h2>Unit Tests</h2>\n<p>To run the unit tests, use the following command from the top directory:</p>\n<p><tt>python3 <span class=\"pre\">-m</span> unittest</tt></p>\n<p>This will run both the <cite>py_webauthn</cite> library tests and the Flask demo tests.</p>\n</div>\n<div id=\"note\">\n<h2>Note</h2>\n<p>Currently, PyWebAuthn does not support performing the following verifications.</p>\n<ul>\n<li><a href=\"https://www.w3.org/TR/webauthn/#dom-collectedclientdata-tokenbindingid\" rel=\"nofollow\">Token Binding ID</a></li>\n<li><a href=\"https://www.w3.org/TR/webauthn/#dom-collectedclientdata-authenticatorextensions\" rel=\"nofollow\">Authenticator Extensions</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6829037, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d320a6633b491c35a04fe4472cdd00ad", "sha256": "44fd5616d50733a4089c3cbc2fd55f04c98e32880526550958509a52d61b601b"}, "downloads": -1, "filename": "webauthn-0.1.tar.gz", "has_sig": false, "md5_digest": "d320a6633b491c35a04fe4472cdd00ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57353, "upload_time": "2018-03-05T20:14:16", "upload_time_iso_8601": "2018-03-05T20:14:16.281102Z", "url": "https://files.pythonhosted.org/packages/cd/e6/7b8815f88686f39bab9b53696122d130b96ca9972b0e1733acd038030adb/webauthn-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "631aa413c33c4da6dab64b572deadf14", "sha256": "cd0db6ea6fe6fb20b64d0006bc098e2e26c8f7c9b08f713577a3e252d918010f"}, "downloads": -1, "filename": "webauthn-0.2.tar.gz", "has_sig": false, "md5_digest": "631aa413c33c4da6dab64b572deadf14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50293, "upload_time": "2018-03-05T20:46:30", "upload_time_iso_8601": "2018-03-05T20:46:30.618605Z", "url": "https://files.pythonhosted.org/packages/1b/74/245cbc85781ac4c1fd6a29967763cbdbaaf55c5a8f2a16e0e89629734224/webauthn-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "22ba112e2437ff8ad0bf29c92603be6b", "sha256": "1653a3ff732daa591d38e25d90fa2f90fa43224dd79b7b8aad57f22e1d163a2b"}, "downloads": -1, "filename": "webauthn-0.3.tar.gz", "has_sig": false, "md5_digest": "22ba112e2437ff8ad0bf29c92603be6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50482, "upload_time": "2018-03-06T21:44:12", "upload_time_iso_8601": "2018-03-06T21:44:12.341073Z", "url": "https://files.pythonhosted.org/packages/22/39/381a33ed5d28019e002e85118942b570b0e0b71377005cf1871e9037382f/webauthn-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "9132d0765a6236c938f94893caceb5f7", "sha256": "0e61ab1e537a0f9be491e352009b3453e535d0875d1717c3c5cad721e3b95ab6"}, "downloads": -1, "filename": "webauthn-0.3.1.tar.gz", "has_sig": false, "md5_digest": "9132d0765a6236c938f94893caceb5f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53406, "upload_time": "2018-11-02T03:27:52", "upload_time_iso_8601": "2018-11-02T03:27:52.286877Z", "url": "https://files.pythonhosted.org/packages/a7/93/613d8f52e65dc528243277be453f577dab9c427ce027f0bf3f44e9f39e7b/webauthn-0.3.1.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "41c67fe2bc0c5a7783514540f3a1c379", "sha256": "4e256c83f17e82d32309b46f00bcf4add58fe88bc4bb2abc08059ef111671f30"}, "downloads": -1, "filename": "webauthn-0.4.tar.gz", "has_sig": false, "md5_digest": "41c67fe2bc0c5a7783514540f3a1c379", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54798, "upload_time": "2018-11-30T23:43:14", "upload_time_iso_8601": "2018-11-30T23:43:14.435782Z", "url": "https://files.pythonhosted.org/packages/e3/8c/8242dd44661a59e7fdc183d54bf761aa39eb0f09bf82661320ecd75cb7fb/webauthn-0.4.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "c24636398de7f9ca26facc961034c475", "sha256": "b862c3b4ea52362ba9b57656ccf30e8e7c38a5f3351da3c60a9b80778b89eeb5"}, "downloads": -1, "filename": "webauthn-0.4.2.tar.gz", "has_sig": false, "md5_digest": "c24636398de7f9ca26facc961034c475", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54775, "upload_time": "2019-02-08T17:54:19", "upload_time_iso_8601": "2019-02-08T17:54:19.335557Z", "url": "https://files.pythonhosted.org/packages/3f/32/fac0fa02e59cda6ff9350b778f2c5d3b272c56ac1b78059a895c82dd91ec/webauthn-0.4.2.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "6126f9e3da8ae077c839e1ee9dba6b57", "sha256": "db0bfc8b74896e209bfb290815c0a563f785ec5be321e1db17e9ac627ec3562f"}, "downloads": -1, "filename": "webauthn-0.4.5.tar.gz", "has_sig": false, "md5_digest": "6126f9e3da8ae077c839e1ee9dba6b57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59824, "upload_time": "2019-06-05T02:13:25", "upload_time_iso_8601": "2019-06-05T02:13:25.883770Z", "url": "https://files.pythonhosted.org/packages/86/30/8522e16b96445d4ab517f67f507dca17e123ff543e99f42aa98315b9bc0a/webauthn-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "1c74b4500a34aaae25c3113dbb9e7e19", "sha256": "2cbdd77d1ac15e4e473ed2c96e8bea5032070f720b5c52afb32dab97d1a4c8f0"}, "downloads": -1, "filename": "webauthn-0.4.6.tar.gz", "has_sig": false, "md5_digest": "1c74b4500a34aaae25c3113dbb9e7e19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59872, "upload_time": "2020-01-31T21:31:06", "upload_time_iso_8601": "2020-01-31T21:31:06.874940Z", "url": "https://files.pythonhosted.org/packages/ff/8b/71963cc752b838dd32b822ea2a347f70415d96744d9e02a48f5a4a1b193e/webauthn-0.4.6.tar.gz", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "856074a857e4c071f68abec5e1c43a51", "sha256": "238391b2e2cc60fb51a2cd2d2d6be149920b9af6184651353d9f95856617a9e7"}, "downloads": -1, "filename": "webauthn-0.4.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "856074a857e4c071f68abec5e1c43a51", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18621, "upload_time": "2020-03-13T23:02:50", "upload_time_iso_8601": "2020-03-13T23:02:50.486923Z", "url": "https://files.pythonhosted.org/packages/c7/ed/86e4437ed4c15a8c73b791c0500e9c80be5567aaa26356af21d02516b0e3/webauthn-0.4.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b12173bc2b565fc2f6ca0603e4ace41", "sha256": "8ad9072ff1d6169f3be30d4dc8733ea563dd266962397bc58b40f674a6af74ac"}, "downloads": -1, "filename": "webauthn-0.4.7.tar.gz", "has_sig": false, "md5_digest": "2b12173bc2b565fc2f6ca0603e4ace41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65784, "upload_time": "2020-03-13T23:02:51", "upload_time_iso_8601": "2020-03-13T23:02:51.633958Z", "url": "https://files.pythonhosted.org/packages/c1/a3/552f18e0d8a257219840f2a536f8c678dcaf95ef652f670f34b62619502a/webauthn-0.4.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "856074a857e4c071f68abec5e1c43a51", "sha256": "238391b2e2cc60fb51a2cd2d2d6be149920b9af6184651353d9f95856617a9e7"}, "downloads": -1, "filename": "webauthn-0.4.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "856074a857e4c071f68abec5e1c43a51", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18621, "upload_time": "2020-03-13T23:02:50", "upload_time_iso_8601": "2020-03-13T23:02:50.486923Z", "url": "https://files.pythonhosted.org/packages/c7/ed/86e4437ed4c15a8c73b791c0500e9c80be5567aaa26356af21d02516b0e3/webauthn-0.4.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b12173bc2b565fc2f6ca0603e4ace41", "sha256": "8ad9072ff1d6169f3be30d4dc8733ea563dd266962397bc58b40f674a6af74ac"}, "downloads": -1, "filename": "webauthn-0.4.7.tar.gz", "has_sig": false, "md5_digest": "2b12173bc2b565fc2f6ca0603e4ace41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65784, "upload_time": "2020-03-13T23:02:51", "upload_time_iso_8601": "2020-03-13T23:02:51.633958Z", "url": "https://files.pythonhosted.org/packages/c1/a3/552f18e0d8a257219840f2a536f8c678dcaf95ef652f670f34b62619502a/webauthn-0.4.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:31:25 2020"}