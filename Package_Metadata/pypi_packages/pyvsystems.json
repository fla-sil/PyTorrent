{"info": {"author": "V SYSTEMS", "author_email": "info@v.systems", "bugtrack_url": null, "classifiers": [], "description": "# pyvsystems\nA python wrapper for vsys api.\n\nFor more detail, please refer:\n\n[PYVSYSTEMS User Guide Specification (English)](https://github.com/virtualeconomy/pyvsystems/wiki/PYVSYSTEMS-User-Guide-Specification-%28English%29)\n\n[PYVSYSTEMS \u4f7f\u7528\u8be6\u7ec6\u6307\u5357(\u4e2d\u6587)](https://github.com/virtualeconomy/pyvsystems/wiki/PYVSYSTEMS-\u4f7f\u7528\u8be6\u7ec6\u6307\u5357%28\u4e2d\u6587%29)\n\n## Install\n\nLibrary can be pulled via pip directly:\n\n```git+https://github.com/virtualeconomy/pyvsystems.git```\n\nOr:\n\n1. clone the repo under you workspace\n```git clone https://github.com/virtualeconomy/pyvsystems.git```\n2. install the package \n```pip3 install pyvsystems/.```\n3. Then you can  ```import pyvsystems```  in your workspace\n\n## Usage\n\n### chain object\n1. For testnet:\n    ```python\n    import pyvsystems as pv\n    ts_chain = pv.testnet_chain()\n    ```\n2. For default chain:\n    ```python\n    import pyvsystems as pv\n    main_chain = pv.default_chain()\n    ```\n\n3. For custom api node:\n    ```python\n    import pyvsystems as pv\n    custom_wrapper = pv.create_api_wrapper('http://<full node ip>:9922', api_key='')\n    ts_chain = pv.testnet_chain(custom_wrapper)\n    ```\n\n4. For completely custom chain:\n    ```python\n    import pyvsystems as pv\n    custom_wrapper = pv.create_api_wrapper('http://<full node ip>:9922', api_key='')\n    t_chain = pv.Chain(chain_name='testnet', chain_id='T', address_version=5, api_wrapper=custom_wrapper)\n    custom_wrapper2 = pv.create_api_wrapper('http://<full node ip>:9922', api_key='')\n    m_chain = pv.Chain(chain_name='mainnet', chain_id='M', address_version=5, api_wrapper=custom_wrapper2)\n    custom_wrapper3 = pv.create_api_wrapper('http://<full node ip>:9922', api_key='')\n    c_chain = pv.Chain(chain_name='mychain', chain_id='C', address_version=1, api_wrapper=custom_wrapper3)\n    ```\n\n### chain api list\n1. look up current block height of the chain:\n    ```python\n    ts_chain.height()\n    ```\n\n2. look up the last block info of the chain:\n    ```python\n    ts_chain.lastblock()\n    ```\n\n\n3. look up a block info at n in the chain:\n    ```python\n    ts_chain.block(n)\n    ```\n\n4. Get a transaction info by transacion id in the chain:\n    ```python\n    ts_chain.tx(tx_id)\n    ```\n\n5. Validate an address of the chain:\n    ```python\n    ts_chain.validate_address(addr)\n    ```\n\n### address object\n1. constructed by seed\n    ```python\n    from pyvsystems import Account\n    my_address = Account(chain=ts_chain, seed='<your seed>', nonce=0)\n    ```\n2. constructed by private key\n    ```python\n    from pyvsystems import Account\n    my_address = Account(chain=ts_chain, private_key='<your base58 private key>')\n    ```\n3. constructed by public key\n    ```python\n    from pyvsystems import Account\n    recipient = Account(chain=ts_chain, public_key='<base58 public key>')\n    ```\n4. constructed by wallet address\n    ```python\n    from pyvsystems import Account\n    recipient = Account(chain=ts_chain, address='<base58 wallet address>')\n    ```\n\n### address api list\n1. Get balance\n    ```python\n    # get balance\n    balance = my_address.balance()\n    print(\"The balance is {}\".format(balance))\n    # get balance after 16 confirmations \n    balance = my_address.balance(confirmations = 16)\n    print(\"The balance is {}\".format(balance))\n    ```\n2. Send payment transaction\n    ```python\n    # send payment (100000000 = 1 VSYS)\n    my_address.send_payment(recipient, amount=100000000)\n    ```\n3. Send and cancel lease transaction\n    ```python\n    # send lease (100000000 = 1 VSYS)\n    response = my_address.lease(recipient, amount=100000000)\n    tx_id = response[\"id\"]\n    # cancel lease\n    my_address.lease_cancel(tx_id)\n    ```\n\n[Sample code for Send Transaction](https://github.com/virtualeconomy/pyvsystems/wiki/PYVSYSTEMS-User-Guide-Specification-%28English%29#sample-code) for reference\n\n[Sample Code for Smart Contract](https://github.com/virtualeconomy/pyvsystems/wiki/Sample-Code-for-Smart-Contract) for reference\n\n[Sample Code for Exchange](https://github.com/virtualeconomy/pyvsystems/wiki/Sample-Code-for-Exchange) for reference\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/virtualeconomy/pyvsystems", "keywords": "api wrapper,blockchain,vsystems,smart contract,supernode,defi", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyvsystems", "package_url": "https://pypi.org/project/pyvsystems/", "platform": "", "project_url": "https://pypi.org/project/pyvsystems/", "project_urls": {"Homepage": "https://github.com/virtualeconomy/pyvsystems"}, "release_url": "https://pypi.org/project/pyvsystems/0.1.0/", "requires_dist": ["requests", "python-axolotl-curve25519", "pyblake2", "base58"], "requires_python": ">=3.4", "summary": "A python wrapper for vsys api.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyvsystems</h1>\n<p>A python wrapper for vsys api.</p>\n<p>For more detail, please refer:</p>\n<p><a href=\"https://github.com/virtualeconomy/pyvsystems/wiki/PYVSYSTEMS-User-Guide-Specification-%28English%29\" rel=\"nofollow\">PYVSYSTEMS User Guide Specification (English)</a></p>\n<p><a href=\"https://github.com/virtualeconomy/pyvsystems/wiki/PYVSYSTEMS-%E4%BD%BF%E7%94%A8%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97%28%E4%B8%AD%E6%96%87%29\" rel=\"nofollow\">PYVSYSTEMS \u4f7f\u7528\u8be6\u7ec6\u6307\u5357(\u4e2d\u6587)</a></p>\n<h2>Install</h2>\n<p>Library can be pulled via pip directly:</p>\n<p><code>git+https://github.com/virtualeconomy/pyvsystems.git</code></p>\n<p>Or:</p>\n<ol>\n<li>clone the repo under you workspace\n<code>git clone https://github.com/virtualeconomy/pyvsystems.git</code></li>\n<li>install the package\n<code>pip3 install pyvsystems/.</code></li>\n<li>Then you can  <code>import pyvsystems</code>  in your workspace</li>\n</ol>\n<h2>Usage</h2>\n<h3>chain object</h3>\n<ol>\n<li>\n<p>For testnet:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvsystems</span> <span class=\"k\">as</span> <span class=\"nn\">pv</span>\n<span class=\"n\">ts_chain</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">testnet_chain</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>For default chain:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvsystems</span> <span class=\"k\">as</span> <span class=\"nn\">pv</span>\n<span class=\"n\">main_chain</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">default_chain</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>For custom api node:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvsystems</span> <span class=\"k\">as</span> <span class=\"nn\">pv</span>\n<span class=\"n\">custom_wrapper</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">create_api_wrapper</span><span class=\"p\">(</span><span class=\"s1\">'http://&lt;full node ip&gt;:9922'</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n<span class=\"n\">ts_chain</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">testnet_chain</span><span class=\"p\">(</span><span class=\"n\">custom_wrapper</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>For completely custom chain:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvsystems</span> <span class=\"k\">as</span> <span class=\"nn\">pv</span>\n<span class=\"n\">custom_wrapper</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">create_api_wrapper</span><span class=\"p\">(</span><span class=\"s1\">'http://&lt;full node ip&gt;:9922'</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n<span class=\"n\">t_chain</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">Chain</span><span class=\"p\">(</span><span class=\"n\">chain_name</span><span class=\"o\">=</span><span class=\"s1\">'testnet'</span><span class=\"p\">,</span> <span class=\"n\">chain_id</span><span class=\"o\">=</span><span class=\"s1\">'T'</span><span class=\"p\">,</span> <span class=\"n\">address_version</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">api_wrapper</span><span class=\"o\">=</span><span class=\"n\">custom_wrapper</span><span class=\"p\">)</span>\n<span class=\"n\">custom_wrapper2</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">create_api_wrapper</span><span class=\"p\">(</span><span class=\"s1\">'http://&lt;full node ip&gt;:9922'</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n<span class=\"n\">m_chain</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">Chain</span><span class=\"p\">(</span><span class=\"n\">chain_name</span><span class=\"o\">=</span><span class=\"s1\">'mainnet'</span><span class=\"p\">,</span> <span class=\"n\">chain_id</span><span class=\"o\">=</span><span class=\"s1\">'M'</span><span class=\"p\">,</span> <span class=\"n\">address_version</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">api_wrapper</span><span class=\"o\">=</span><span class=\"n\">custom_wrapper2</span><span class=\"p\">)</span>\n<span class=\"n\">custom_wrapper3</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">create_api_wrapper</span><span class=\"p\">(</span><span class=\"s1\">'http://&lt;full node ip&gt;:9922'</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n<span class=\"n\">c_chain</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">Chain</span><span class=\"p\">(</span><span class=\"n\">chain_name</span><span class=\"o\">=</span><span class=\"s1\">'mychain'</span><span class=\"p\">,</span> <span class=\"n\">chain_id</span><span class=\"o\">=</span><span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"n\">address_version</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">api_wrapper</span><span class=\"o\">=</span><span class=\"n\">custom_wrapper3</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ol>\n<h3>chain api list</h3>\n<ol>\n<li>\n<p>look up current block height of the chain:</p>\n<pre><span class=\"n\">ts_chain</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>look up the last block info of the chain:</p>\n<pre><span class=\"n\">ts_chain</span><span class=\"o\">.</span><span class=\"n\">lastblock</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>look up a block info at n in the chain:</p>\n<pre><span class=\"n\">ts_chain</span><span class=\"o\">.</span><span class=\"n\">block</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>Get a transaction info by transacion id in the chain:</p>\n<pre><span class=\"n\">ts_chain</span><span class=\"o\">.</span><span class=\"n\">tx</span><span class=\"p\">(</span><span class=\"n\">tx_id</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>Validate an address of the chain:</p>\n<pre><span class=\"n\">ts_chain</span><span class=\"o\">.</span><span class=\"n\">validate_address</span><span class=\"p\">(</span><span class=\"n\">addr</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ol>\n<h3>address object</h3>\n<ol>\n<li>constructed by seed\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyvsystems</span> <span class=\"kn\">import</span> <span class=\"n\">Account</span>\n<span class=\"n\">my_address</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">chain</span><span class=\"o\">=</span><span class=\"n\">ts_chain</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"s1\">'&lt;your seed&gt;'</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>constructed by private key\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyvsystems</span> <span class=\"kn\">import</span> <span class=\"n\">Account</span>\n<span class=\"n\">my_address</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">chain</span><span class=\"o\">=</span><span class=\"n\">ts_chain</span><span class=\"p\">,</span> <span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;your base58 private key&gt;'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>constructed by public key\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyvsystems</span> <span class=\"kn\">import</span> <span class=\"n\">Account</span>\n<span class=\"n\">recipient</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">chain</span><span class=\"o\">=</span><span class=\"n\">ts_chain</span><span class=\"p\">,</span> <span class=\"n\">public_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;base58 public key&gt;'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>constructed by wallet address\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyvsystems</span> <span class=\"kn\">import</span> <span class=\"n\">Account</span>\n<span class=\"n\">recipient</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">chain</span><span class=\"o\">=</span><span class=\"n\">ts_chain</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s1\">'&lt;base58 wallet address&gt;'</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ol>\n<h3>address api list</h3>\n<ol>\n<li>Get balance\n<pre><span class=\"c1\"># get balance</span>\n<span class=\"n\">balance</span> <span class=\"o\">=</span> <span class=\"n\">my_address</span><span class=\"o\">.</span><span class=\"n\">balance</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"The balance is </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">balance</span><span class=\"p\">))</span>\n<span class=\"c1\"># get balance after 16 confirmations </span>\n<span class=\"n\">balance</span> <span class=\"o\">=</span> <span class=\"n\">my_address</span><span class=\"o\">.</span><span class=\"n\">balance</span><span class=\"p\">(</span><span class=\"n\">confirmations</span> <span class=\"o\">=</span> <span class=\"mi\">16</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"The balance is </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">balance</span><span class=\"p\">))</span>\n</pre>\n</li>\n<li>Send payment transaction\n<pre><span class=\"c1\"># send payment (100000000 = 1 VSYS)</span>\n<span class=\"n\">my_address</span><span class=\"o\">.</span><span class=\"n\">send_payment</span><span class=\"p\">(</span><span class=\"n\">recipient</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"mi\">100000000</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>Send and cancel lease transaction\n<pre><span class=\"c1\"># send lease (100000000 = 1 VSYS)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">my_address</span><span class=\"o\">.</span><span class=\"n\">lease</span><span class=\"p\">(</span><span class=\"n\">recipient</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"mi\">100000000</span><span class=\"p\">)</span>\n<span class=\"n\">tx_id</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"p\">[</span><span class=\"s2\">\"id\"</span><span class=\"p\">]</span>\n<span class=\"c1\"># cancel lease</span>\n<span class=\"n\">my_address</span><span class=\"o\">.</span><span class=\"n\">lease_cancel</span><span class=\"p\">(</span><span class=\"n\">tx_id</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ol>\n<p><a href=\"https://github.com/virtualeconomy/pyvsystems/wiki/PYVSYSTEMS-User-Guide-Specification-%28English%29#sample-code\" rel=\"nofollow\">Sample code for Send Transaction</a> for reference</p>\n<p><a href=\"https://github.com/virtualeconomy/pyvsystems/wiki/Sample-Code-for-Smart-Contract\" rel=\"nofollow\">Sample Code for Smart Contract</a> for reference</p>\n<p><a href=\"https://github.com/virtualeconomy/pyvsystems/wiki/Sample-Code-for-Exchange\" rel=\"nofollow\">Sample Code for Exchange</a> for reference</p>\n\n          </div>"}, "last_serial": 6336943, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "25de657f4b271c03befd51217878b75b", "sha256": "4de278e71f19ca4976bb1b5b01dfb6098969c6cf4371fba85339d1380a967255"}, "downloads": -1, "filename": "pyvsystems-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "25de657f4b271c03befd51217878b75b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 33207, "upload_time": "2019-12-20T04:11:06", "upload_time_iso_8601": "2019-12-20T04:11:06.609091Z", "url": "https://files.pythonhosted.org/packages/73/8a/456ae682f2c1e0126104a960f6850dbfe82146ef6c6c2ab4d55ce590620e/pyvsystems-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2f50bef9b286f63c6a70a423a899cb6", "sha256": "f5ac1d32e4092b235b0cae276fd3e308d87ede6e7dc35455787a00ef68c72be1"}, "downloads": -1, "filename": "pyvsystems-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f2f50bef9b286f63c6a70a423a899cb6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 30099, "upload_time": "2019-12-20T04:11:09", "upload_time_iso_8601": "2019-12-20T04:11:09.772443Z", "url": "https://files.pythonhosted.org/packages/bb/ff/bbbe19c9d78a84b62c0f471be5ae39ffc7af235e7c1bf3adf72a4555873c/pyvsystems-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "25de657f4b271c03befd51217878b75b", "sha256": "4de278e71f19ca4976bb1b5b01dfb6098969c6cf4371fba85339d1380a967255"}, "downloads": -1, "filename": "pyvsystems-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "25de657f4b271c03befd51217878b75b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 33207, "upload_time": "2019-12-20T04:11:06", "upload_time_iso_8601": "2019-12-20T04:11:06.609091Z", "url": "https://files.pythonhosted.org/packages/73/8a/456ae682f2c1e0126104a960f6850dbfe82146ef6c6c2ab4d55ce590620e/pyvsystems-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2f50bef9b286f63c6a70a423a899cb6", "sha256": "f5ac1d32e4092b235b0cae276fd3e308d87ede6e7dc35455787a00ef68c72be1"}, "downloads": -1, "filename": "pyvsystems-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f2f50bef9b286f63c6a70a423a899cb6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 30099, "upload_time": "2019-12-20T04:11:09", "upload_time_iso_8601": "2019-12-20T04:11:09.772443Z", "url": "https://files.pythonhosted.org/packages/bb/ff/bbbe19c9d78a84b62c0f471be5ae39ffc7af235e7c1bf3adf72a4555873c/pyvsystems-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:47 2020"}