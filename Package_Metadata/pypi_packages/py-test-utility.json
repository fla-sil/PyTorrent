{"info": {"author": "Simone Fiorentini", "author_email": "simone.fiorentini@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# py-test-utility \n\nContains a collection of class and functions which aim to help developers implement and test data pipelines against the new generation data warehouses and storing system i.e. BigQuery and GCS\n\n## Installation\npy-test-utility can be installed via pip\n\n```python \npip install py-test-utility\n```\n## mockdata - class csv_mock(csv,schema) \nExtract the equivalent json from csv with nested and repeated records structures\n\n### Args\n\n- csv\n    - path and file name of the csv\n    - mandatory\n    - nested fields shall be separated by a dot \".\"  (i.e. item.id, item.quantity)\n\n|order | item.id | item.quantity | delivery.address | delivey.postcode |\n|---|---|---|---|---|\n| A0001 | item1 | 5 | address1 | e13bp |\n| | item2 | 1 | | |\n| | item3 | 3 | | |\n| A0002 | item4 | 4  | address4 | e13bp |\n| | item1 | 4 | | |\n| | item3 | 2 | | |\n\n- schema \n    - path and schema file name of the table schema\n    - required if the CSV contain nested and repeated records\n    - json format i.e. \n```json\n[  \n    {\n      \"mode\": \"NULLABLE\", \n      \"name\": \"order\", \n      \"type\": \"STRING\"\n    },  \n    {\n      \"fields\": [\n        {\n          \"mode\": \"NULLABLE\", \n          \"name\": \"id\", \n          \"type\": \"STRING\"\n        },\n        {\n          \"mode\": \"NULLABLE\", \n          \"name\": \"quantity\", \n          \"type\": \"STRING\"\n        }\n      ], \n      \"mode\": \"REPEATED\", \n      \"name\": \"item\", \n      \"type\": \"RECORD\"\n    }, \n    {\n      \"fields\": [\n        {\n          \"mode\": \"NULLABLE\", \n          \"name\": \"address\", \n          \"type\": \"STRING\"\n        }, \n        {\n          \"mode\": \"NULLABLE\", \n          \"name\": \"postcode\", \n          \"type\": \"STRING\"\n        }\n      ], \n      \"mode\": \"NULLABLE\", \n      \"name\": \"delivery\", \n      \"type\": \"RECORD\"\n    }\n  ]\n```\n\n### Methods\n- to_json()\n    - if successfuls return the json extracted from the csv\n\n\n### Usage\n\n```python \n>>> from mockdata import mockdata as md\n>>> mockdata_csv = md.csv_mock(\n...     csv=\"mockdata/test/data/csv/repeated_records.csv\", \n...     schema=\"mockdata/test/schema/repeated_records_schema.json\") # initialise the object\n>>> mockdata_json = mockdata_csv.to_json() # return the equivalent json\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bluefloyd00/py-test-utility", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "py-test-utility", "package_url": "https://pypi.org/project/py-test-utility/", "platform": "", "project_url": "https://pypi.org/project/py-test-utility/", "project_urls": {"Homepage": "https://github.com/bluefloyd00/py-test-utility"}, "release_url": "https://pypi.org/project/py-test-utility/0.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "useful package for pipelines testing and data mocking for new generation data warehouse", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>py-test-utility</h1>\n<p>Contains a collection of class and functions which aim to help developers implement and test data pipelines against the new generation data warehouses and storing system i.e. BigQuery and GCS</p>\n<h2>Installation</h2>\n<p>py-test-utility can be installed via pip</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">py</span><span class=\"o\">-</span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">utility</span>\n</pre>\n<h2>mockdata - class csv_mock(csv,schema)</h2>\n<p>Extract the equivalent json from csv with nested and repeated records structures</p>\n<h3>Args</h3>\n<ul>\n<li>csv\n<ul>\n<li>path and file name of the csv</li>\n<li>mandatory</li>\n<li>nested fields shall be separated by a dot \".\"  (i.e. item.id, item.quantity)</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>order</th>\n<th>item.id</th>\n<th>item.quantity</th>\n<th>delivery.address</th>\n<th>delivey.postcode</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A0001</td>\n<td>item1</td>\n<td>5</td>\n<td>address1</td>\n<td>e13bp</td>\n</tr>\n<tr>\n<td></td>\n<td>item2</td>\n<td>1</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>item3</td>\n<td>3</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>A0002</td>\n<td>item4</td>\n<td>4</td>\n<td>address4</td>\n<td>e13bp</td>\n</tr>\n<tr>\n<td></td>\n<td>item1</td>\n<td>4</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>item3</td>\n<td>2</td>\n<td></td>\n<td></td>\n</tr></tbody></table>\n<ul>\n<li>schema\n<ul>\n<li>path and schema file name of the table schema</li>\n<li>required if the CSV contain nested and repeated records</li>\n<li>json format i.e.</li>\n</ul>\n</li>\n</ul>\n<pre><span class=\"p\">[</span>  \n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NULLABLE\"</span><span class=\"p\">,</span> \n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"order\"</span><span class=\"p\">,</span> \n      <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STRING\"</span>\n    <span class=\"p\">},</span>  \n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"fields\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NULLABLE\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"id\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STRING\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NULLABLE\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"quantity\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STRING\"</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">],</span> \n      <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"REPEATED\"</span><span class=\"p\">,</span> \n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"item\"</span><span class=\"p\">,</span> \n      <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span>\n    <span class=\"p\">},</span> \n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"fields\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NULLABLE\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"address\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STRING\"</span>\n        <span class=\"p\">},</span> \n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NULLABLE\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"postcode\"</span><span class=\"p\">,</span> \n          <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"STRING\"</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">],</span> \n      <span class=\"nt\">\"mode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NULLABLE\"</span><span class=\"p\">,</span> \n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"delivery\"</span><span class=\"p\">,</span> \n      <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RECORD\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n</pre>\n<h3>Methods</h3>\n<ul>\n<li>to_json()\n<ul>\n<li>if successfuls return the json extracted from the csv</li>\n</ul>\n</li>\n</ul>\n<h3>Usage</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">mockdata</span> <span class=\"kn\">import</span> <span class=\"n\">mockdata</span> <span class=\"k\">as</span> <span class=\"n\">md</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mockdata_csv</span> <span class=\"o\">=</span> <span class=\"n\">md</span><span class=\"o\">.</span><span class=\"n\">csv_mock</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">csv</span><span class=\"o\">=</span><span class=\"s2\">\"mockdata/test/data/csv/repeated_records.csv\"</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>     <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"s2\">\"mockdata/test/schema/repeated_records_schema.json\"</span><span class=\"p\">)</span> <span class=\"c1\"># initialise the object</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mockdata_json</span> <span class=\"o\">=</span> <span class=\"n\">mockdata_csv</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">()</span> <span class=\"c1\"># return the equivalent json</span>\n</pre>\n\n          </div>"}, "last_serial": 6209949, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4df218712087c5a2a83575055a855be3", "sha256": "924321fde012526ae8fc9d77caedf5fb316431f8f501377bb7f26207d42a7710"}, "downloads": -1, "filename": "py_test_utility-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4df218712087c5a2a83575055a855be3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4915, "upload_time": "2019-11-27T00:22:39", "upload_time_iso_8601": "2019-11-27T00:22:39.922893Z", "url": "https://files.pythonhosted.org/packages/51/0d/9b95adc19c0bb977f402d8771e419c874fd7db593674373485eb4556aec2/py_test_utility-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6cc3a302a42690bb472a6cf5d390a3dc", "sha256": "cafe467a3f30424c7c8734cf00f0af08313bf5bbbf0304a94ac32a810525ea01"}, "downloads": -1, "filename": "py-test-utility-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6cc3a302a42690bb472a6cf5d390a3dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3713, "upload_time": "2019-11-27T00:22:42", "upload_time_iso_8601": "2019-11-27T00:22:42.435412Z", "url": "https://files.pythonhosted.org/packages/ec/ba/f144e63187176c67c6e0dff591d843285608e78528d7a230e2c60fba07fc/py-test-utility-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d448cd689d35248d0037d416330506bb", "sha256": "ba654f64c3f279e39dd4c587975b72182bc34b6c49da57c03d96019366a5a924"}, "downloads": -1, "filename": "py_test_utility-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d448cd689d35248d0037d416330506bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4971, "upload_time": "2019-11-27T18:07:29", "upload_time_iso_8601": "2019-11-27T18:07:29.018605Z", "url": "https://files.pythonhosted.org/packages/fc/fe/f94eb1c03c40794ea5a9df80e7c2f5d6c81e195ae0d282cab49ddd408879/py_test_utility-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f31e3e82501348641d808f46d9040432", "sha256": "df37c8f429418e217661e9b5515ca91a9d9944f4a418f4be46e7c4de59f52ca9"}, "downloads": -1, "filename": "py-test-utility-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f31e3e82501348641d808f46d9040432", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3789, "upload_time": "2019-11-27T18:07:31", "upload_time_iso_8601": "2019-11-27T18:07:31.167259Z", "url": "https://files.pythonhosted.org/packages/02/ad/a70bb1371619579ff3777e8c09e7f9143a0067781e6972e6da3b9950e5ad/py-test-utility-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d448cd689d35248d0037d416330506bb", "sha256": "ba654f64c3f279e39dd4c587975b72182bc34b6c49da57c03d96019366a5a924"}, "downloads": -1, "filename": "py_test_utility-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d448cd689d35248d0037d416330506bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4971, "upload_time": "2019-11-27T18:07:29", "upload_time_iso_8601": "2019-11-27T18:07:29.018605Z", "url": "https://files.pythonhosted.org/packages/fc/fe/f94eb1c03c40794ea5a9df80e7c2f5d6c81e195ae0d282cab49ddd408879/py_test_utility-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f31e3e82501348641d808f46d9040432", "sha256": "df37c8f429418e217661e9b5515ca91a9d9944f4a418f4be46e7c4de59f52ca9"}, "downloads": -1, "filename": "py-test-utility-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f31e3e82501348641d808f46d9040432", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3789, "upload_time": "2019-11-27T18:07:31", "upload_time_iso_8601": "2019-11-27T18:07:31.167259Z", "url": "https://files.pythonhosted.org/packages/02/ad/a70bb1371619579ff3777e8c09e7f9143a0067781e6972e6da3b9950e5ad/py-test-utility-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:36 2020"}