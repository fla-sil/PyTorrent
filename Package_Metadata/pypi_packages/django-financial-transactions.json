{"info": {"author": "Michael Nelson", "author_email": "absoludity@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "======================\nFinancial Transactions\n======================\n\nFinancial Transactions is a Django app to import and categorise transactions from financial institutions, where categories are assigned based on hints.\n\nIt's intended for hackers who want to build other interesting stuff with their categorised financial transactions.\n\n\nQuick Start\n-----------\n\n1. Add \"financial_transactions\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = (\n        ...\n        'financial_transactions',\n    )\n\n2. Run `python manage.py syncdb` to create the Financial Transaction models.\n\n3. Start the development server and visit http://127.0.0.1:8000/admin/\nto create an account (you'll need the Admin app enabled), choosing a transaction format for the account (currently only CommerzBank Giro and Commerzbank Mastercard csvs are supported, but I'll add forms as people need them.)\n\n4. Import your transactions::\n\n    ./manage.py import_transactions ~/mydata/2013-01-commerzbank.csv\n\nYou can then browse your transactions in the /admin/, add transaction category hints, and reimport your csvs to automatically update the categories based on your hints.\n\n\nTesting\n-------\n\nTo run the tests, you'll need to install a few additional test packages: mock, django_factory.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/absoludity/django-financial-transactions", "keywords": null, "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "django-financial-transactions", "package_url": "https://pypi.org/project/django-financial-transactions/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-financial-transactions/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/absoludity/django-financial-transactions"}, "release_url": "https://pypi.org/project/django-financial-transactions/0.2/", "requires_dist": null, "requires_python": null, "summary": "A Django app to import and categorise financial transactions.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Financial Transactions is a Django app to import and categorise transactions from financial institutions, where categories are assigned based on hints.</p>\n<p>It\u2019s intended for hackers who want to build other interesting stuff with their categorised financial transactions.</p>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<ol>\n<li><p>Add \u201cfinancial_transactions\u201d to your INSTALLED_APPS setting like this:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'financial_transactions',\n)\n</pre>\n</li>\n<li><p>Run <cite>python manage.py syncdb</cite> to create the Financial Transaction models.</p>\n</li>\n</ol>\n<p>3. Start the development server and visit <a href=\"http://127.0.0.1:8000/admin/\" rel=\"nofollow\">http://127.0.0.1:8000/admin/</a>\nto create an account (you\u2019ll need the Admin app enabled), choosing a transaction format for the account (currently only CommerzBank Giro and Commerzbank Mastercard csvs are supported, but I\u2019ll add forms as people need them.)</p>\n<ol>\n<li><p>Import your transactions:</p>\n<pre>./manage.py import_transactions ~/mydata/2013-01-commerzbank.csv\n</pre>\n</li>\n</ol>\n<p>You can then browse your transactions in the /admin/, add transaction category hints, and reimport your csvs to automatically update the categories based on your hints.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To run the tests, you\u2019ll need to install a few additional test packages: mock, django_factory.</p>\n</div>\n\n          </div>"}, "last_serial": 789652, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a95d9a16ff7a1dcf4f546eafff361fb6", "sha256": "1ede0a88b66efef138a5c9801d5b21c31619199ebdae7b064fcd8cad0ffcea31"}, "downloads": -1, "filename": "django-financial-transactions-0.1.tar.gz", "has_sig": false, "md5_digest": "a95d9a16ff7a1dcf4f546eafff361fb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9109, "upload_time": "2013-03-05T21:17:32", "upload_time_iso_8601": "2013-03-05T21:17:32.375215Z", "url": "https://files.pythonhosted.org/packages/10/ec/ea2b16c3b9ab1493948e20004d602f11fca8d4c3426c3cc216944818eec9/django-financial-transactions-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "2cb18609e475f3f6b1833774e84838eb", "sha256": "f2c5d1cb1652a606f1bacb344cf019742aec518bd0056b6e478feb8e895aecd5"}, "downloads": -1, "filename": "django-financial-transactions-0.2.tar.gz", "has_sig": false, "md5_digest": "2cb18609e475f3f6b1833774e84838eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9693, "upload_time": "2013-03-07T20:45:20", "upload_time_iso_8601": "2013-03-07T20:45:20.349413Z", "url": "https://files.pythonhosted.org/packages/6f/fb/44cd5859edb1b8f42e28554758580725f3cd8c1fd9e054e2f71aa558a255/django-financial-transactions-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2cb18609e475f3f6b1833774e84838eb", "sha256": "f2c5d1cb1652a606f1bacb344cf019742aec518bd0056b6e478feb8e895aecd5"}, "downloads": -1, "filename": "django-financial-transactions-0.2.tar.gz", "has_sig": false, "md5_digest": "2cb18609e475f3f6b1833774e84838eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9693, "upload_time": "2013-03-07T20:45:20", "upload_time_iso_8601": "2013-03-07T20:45:20.349413Z", "url": "https://files.pythonhosted.org/packages/6f/fb/44cd5859edb1b8f42e28554758580725f3cd8c1fd9e054e2f71aa558a255/django-financial-transactions-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:08 2020"}