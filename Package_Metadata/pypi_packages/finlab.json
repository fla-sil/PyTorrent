{"info": {"author": "Cheng-Yu Han", "author_email": "finlabstaff@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# FinLab\nA Financial backtesting framework for stock portfolio selection\n\n## Installation\n\nFinLab is a easy to install python package aims to help developing stock portfolio strategies.\n```bash\npip install finlab\n```\n\n\n\n## Getting Start\n\nThere are two main functionality of finlab in the alpha development.\nFirst, taiwan stock market historical data can be obtain by online.Data interface:\n\n```python\nimport finlab\n\nclose = finlab.data.get('close')\nclose.head()\n```\n\n| date     | 1101  | 1203 | ...  | 1726 | 2330  |\n| -------- | ----- | ---- | ---- | ---- | ----- |\n| 2015-1-6 | 43.0  | 23.7 |      | 82.0 | 139.5 |\n| ...      | ...   | ...  | ...  | ...  | ...   |\n| 2015-1-8 | 42.25 | 23.8 |      | 82.0 | 133.5 |\n\n\n\n### Stock technical indicator calculation\n\nWith the integration of TA-Lib package, it is easily to calculate technical indicator using wrapper function `finlab.data.talib`:\n```python\nrsi = finlab.data.talib('RSI', timeperiod=14)\nrsi.head()\n````\n\nWith the simple code above, `finlab.data.talib` calculates RSI indicator for all stocks in the pool.\n\n\n\n### Perform dataFrame methods\n\nIt is easy to perform stock selection using methods provided by pandas dataframe\n\n```python\n# plot stock price\nclose['1101'].plot()\n\n# caculate monthly average price\nsma20 = close.rolling(20).mean()\n\n# select stocks with the price above sma20\nsignal = close > sma20\n\n# print the stocks statisfy the condition above\nlast_signal = signal.iloc[-1]\nlast_signal[last_signal == True] # simplied: last_signal[last_signal]\n```\n\n\n\n### Stock Backtesting\nIt is easy to write a condition using the similar calculation as above to create a backtest strategy:\nFor example, let's select 10 stock that have the smallest price.\n\n```python\ndef strategy(data):\n    close = data.get('close')\n    buy = close.smallest(10)\n    sell = None\n    resample_frequency = '60d'\n    return buy, sell, resample_frequency\n\nreport = finlab.backtest(strategy)\nreport\n```\n\nFinLab will **NEVER** record your strategy in the cloud without your permission.\n\n**We value your privacy!**  For every single backtest, an private container is created (using AWS Lambda). After each backtesting, all local variables during simlation is destroyed.\n\n## Authors\n\n* Cheng-Yu Han - Ph.D. [FinLab](www.finlab.tw)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/koreal6803/finlab", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "finlab", "package_url": "https://pypi.org/project/finlab/", "platform": "", "project_url": "https://pypi.org/project/finlab/", "project_urls": {"Homepage": "https://github.com/koreal6803/finlab"}, "release_url": "https://pypi.org/project/finlab/0.1.2.dev1/", "requires_dist": ["pandas (>=0.23.0)", "ffn", "pyecharts (>=1.7.1)", "plotly", "ipywidgets (>=7.5.0)"], "requires_python": ">=3", "summary": "A Financial backtesting framework for stock portfolio selection", "version": "0.1.2.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>FinLab</h1>\n<p>A Financial backtesting framework for stock portfolio selection</p>\n<h2>Installation</h2>\n<p>FinLab is a easy to install python package aims to help developing stock portfolio strategies.</p>\n<pre>pip install finlab\n</pre>\n<h2>Getting Start</h2>\n<p>There are two main functionality of finlab in the alpha development.\nFirst, taiwan stock market historical data can be obtain by online.Data interface:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">finlab</span>\n\n<span class=\"n\">close</span> <span class=\"o\">=</span> <span class=\"n\">finlab</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'close'</span><span class=\"p\">)</span>\n<span class=\"n\">close</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>date</th>\n<th>1101</th>\n<th>1203</th>\n<th>...</th>\n<th>1726</th>\n<th>2330</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2015-1-6</td>\n<td>43.0</td>\n<td>23.7</td>\n<td></td>\n<td>82.0</td>\n<td>139.5</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n</tr>\n<tr>\n<td>2015-1-8</td>\n<td>42.25</td>\n<td>23.8</td>\n<td></td>\n<td>82.0</td>\n<td>133.5</td>\n</tr></tbody></table>\n<h3>Stock technical indicator calculation</h3>\n<p>With the integration of TA-Lib package, it is easily to calculate technical indicator using wrapper function <code>finlab.data.talib</code>:</p>\n<pre><span class=\"n\">rsi</span> <span class=\"o\">=</span> <span class=\"n\">finlab</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">talib</span><span class=\"p\">(</span><span class=\"s1\">'RSI'</span><span class=\"p\">,</span> <span class=\"n\">timeperiod</span><span class=\"o\">=</span><span class=\"mi\">14</span><span class=\"p\">)</span>\n<span class=\"n\">rsi</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n</pre>\n<p>With the simple code above, <code>finlab.data.talib</code> calculates RSI indicator for all stocks in the pool.</p>\n<h3>Perform dataFrame methods</h3>\n<p>It is easy to perform stock selection using methods provided by pandas dataframe</p>\n<pre><span class=\"c1\"># plot stock price</span>\n<span class=\"n\">close</span><span class=\"p\">[</span><span class=\"s1\">'1101'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># caculate monthly average price</span>\n<span class=\"n\">sma20</span> <span class=\"o\">=</span> <span class=\"n\">close</span><span class=\"o\">.</span><span class=\"n\">rolling</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># select stocks with the price above sma20</span>\n<span class=\"n\">signal</span> <span class=\"o\">=</span> <span class=\"n\">close</span> <span class=\"o\">&gt;</span> <span class=\"n\">sma20</span>\n\n<span class=\"c1\"># print the stocks statisfy the condition above</span>\n<span class=\"n\">last_signal</span> <span class=\"o\">=</span> <span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">iloc</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">last_signal</span><span class=\"p\">[</span><span class=\"n\">last_signal</span> <span class=\"o\">==</span> <span class=\"kc\">True</span><span class=\"p\">]</span> <span class=\"c1\"># simplied: last_signal[last_signal]</span>\n</pre>\n<h3>Stock Backtesting</h3>\n<p>It is easy to write a condition using the similar calculation as above to create a backtest strategy:\nFor example, let's select 10 stock that have the smallest price.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">strategy</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n    <span class=\"n\">close</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'close'</span><span class=\"p\">)</span>\n    <span class=\"n\">buy</span> <span class=\"o\">=</span> <span class=\"n\">close</span><span class=\"o\">.</span><span class=\"n\">smallest</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"n\">sell</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">resample_frequency</span> <span class=\"o\">=</span> <span class=\"s1\">'60d'</span>\n    <span class=\"k\">return</span> <span class=\"n\">buy</span><span class=\"p\">,</span> <span class=\"n\">sell</span><span class=\"p\">,</span> <span class=\"n\">resample_frequency</span>\n\n<span class=\"n\">report</span> <span class=\"o\">=</span> <span class=\"n\">finlab</span><span class=\"o\">.</span><span class=\"n\">backtest</span><span class=\"p\">(</span><span class=\"n\">strategy</span><span class=\"p\">)</span>\n<span class=\"n\">report</span>\n</pre>\n<p>FinLab will <strong>NEVER</strong> record your strategy in the cloud without your permission.</p>\n<p><strong>We value your privacy!</strong>  For every single backtest, an private container is created (using AWS Lambda). After each backtesting, all local variables during simlation is destroyed.</p>\n<h2>Authors</h2>\n<ul>\n<li>Cheng-Yu Han - Ph.D. <a href=\"www.finlab.tw\" rel=\"nofollow\">FinLab</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7045911, "releases": {"0.1.0.dev1": [{"comment_text": "", "digests": {"md5": "d5f85b57c983e77b263dd3901f0c5631", "sha256": "b7cada5ff66ace0a297dce5d7f8b859cdd9f742a1d82928675a929fd55fd762b"}, "downloads": -1, "filename": "finlab-0.1.0.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "d5f85b57c983e77b263dd3901f0c5631", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 12497, "upload_time": "2020-04-17T16:40:09", "upload_time_iso_8601": "2020-04-17T16:40:09.802773Z", "url": "https://files.pythonhosted.org/packages/0d/64/0c98580eb53e44b1feb1325ff72bd0ce6d3d73caf7d2ebf125ec6ebdfa20/finlab-0.1.0.dev1-py3-none-any.whl", "yanked": false}], "0.1.1.dev1": [{"comment_text": "", "digests": {"md5": "9744431b5d5448a3b1cca3d51dd30763", "sha256": "fd6c602f5405e73fd78520025e393f80aa52cb79ff21998196b1aec57c05332d"}, "downloads": -1, "filename": "finlab-0.1.1.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "9744431b5d5448a3b1cca3d51dd30763", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 12780, "upload_time": "2020-04-18T03:13:56", "upload_time_iso_8601": "2020-04-18T03:13:56.234969Z", "url": "https://files.pythonhosted.org/packages/69/07/d71330a6223d1ac31cdcc6d4913409e00ae3d7914f8b2399582d41a3ae0f/finlab-0.1.1.dev1-py3-none-any.whl", "yanked": false}], "0.1.2.dev1": [{"comment_text": "", "digests": {"md5": "b2ad64fa5f17b7a7ef6bf17ea5d466f5", "sha256": "b31f9b82a53e2cf2d84edecd80dfe5d4ee6c511e5bf2f9c6cf24893e5607665e"}, "downloads": -1, "filename": "finlab-0.1.2.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "b2ad64fa5f17b7a7ef6bf17ea5d466f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 12808, "upload_time": "2020-04-18T04:54:58", "upload_time_iso_8601": "2020-04-18T04:54:58.746652Z", "url": "https://files.pythonhosted.org/packages/27/8c/c7c825ff13fecaeebdf6b8c707bcbcff06c29c860b50395510131566800e/finlab-0.1.2.dev1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b2ad64fa5f17b7a7ef6bf17ea5d466f5", "sha256": "b31f9b82a53e2cf2d84edecd80dfe5d4ee6c511e5bf2f9c6cf24893e5607665e"}, "downloads": -1, "filename": "finlab-0.1.2.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "b2ad64fa5f17b7a7ef6bf17ea5d466f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 12808, "upload_time": "2020-04-18T04:54:58", "upload_time_iso_8601": "2020-04-18T04:54:58.746652Z", "url": "https://files.pythonhosted.org/packages/27/8c/c7c825ff13fecaeebdf6b8c707bcbcff06c29c860b50395510131566800e/finlab-0.1.2.dev1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:42:21 2020"}