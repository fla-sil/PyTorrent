{"info": {"author": "CpHarding", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# py_logging_extensions\na wrapper to provide advanced logging capability with a simple call\n\nProvides:\n* coloured logging (If colorama installed)\n* Log to file\n* configuration file is generated for log formats and colours\n* different log format for levels of logging.DEBUG and below\n* TRACE logging level added as a level below logging.DEBUG (set to 5)\n\n\n## Basic Usage\n\n```python\n    import logging\n    \n    # Import and setup the logger\n    from log_ext import setup_logger\n    setup_logger()\n\n    # Create a normal logging instance, and use as per normal docs\n    logger = logging.getLogger('ExampleLogger')\n    logger.setLevel(logging.DEBUG)\n    logger.debug('MyDebugMessage')\n```\n\n# setup_logger\n```python\nsetup_logger(\n    name='log',\n    base_logger=None,\n    log_dir='logs',\n    cfg_file='log.yaml',\n    config={\n        'date_fmt': '%Y-%m-%d_%H:%M:%S',\n        'format_str': '%(asctime)17s-%(name)-12s-%(levelname)-8s-%(message)s',\n        'detailed_format_str': '(%(module)s-%(funcName)s #%(lineno)d)',\n        'colors': {\n            'TRACE': 'Back.WHITE,Fore.BLACK',\n            'DEBUG': 'Fore.CYAN',\n            'INFO': 'Fore.GREEN', \n            'WARNING': 'Fore.YELLOW', \n            'ERROR': 'Fore.RED', \n            'CRITICAL': 'Back.RED,Fore.WHITE'\n        }\n    },\n    trace_logging=True,\n    clear_others=False,\n    handles=None)\n```\nSetup a logger (call instead of logging.basicConfig)\n\n    :param name: (String) log file name\n    :param base_logger: (logging.Logger) logger to base off - uses root if not set\n    :param log_dir: (string | False) directory to store log files in - doesn't log to file if set to False\n    :param cfg_file: (string | False) configuration file to use, or false to skip creating a file\n    :param config: (Dict) configuration dictionary see CONFIG variable for example\n    :param trace_logging: (Bool) use trace logging\n    :param clear_others: (Bool) clear existing handlers on the base logger\n    :param handles: (List) also add these handlers to the base logger\n    :returns None", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CpHarding/py_logging_extensions", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "log-ext", "package_url": "https://pypi.org/project/log-ext/", "platform": "", "project_url": "https://pypi.org/project/log-ext/", "project_urls": {"Homepage": "https://github.com/CpHarding/py_logging_extensions"}, "release_url": "https://pypi.org/project/log-ext/1.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "An extension for standard python logging", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>py_logging_extensions</h1>\n<p>a wrapper to provide advanced logging capability with a simple call</p>\n<p>Provides:</p>\n<ul>\n<li>coloured logging (If colorama installed)</li>\n<li>Log to file</li>\n<li>configuration file is generated for log formats and colours</li>\n<li>different log format for levels of logging.DEBUG and below</li>\n<li>TRACE logging level added as a level below logging.DEBUG (set to 5)</li>\n</ul>\n<h2>Basic Usage</h2>\n<pre>    <span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n    \n    <span class=\"c1\"># Import and setup the logger</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">log_ext</span> <span class=\"kn\">import</span> <span class=\"n\">setup_logger</span>\n    <span class=\"n\">setup_logger</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Create a normal logging instance, and use as per normal docs</span>\n    <span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'ExampleLogger'</span><span class=\"p\">)</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'MyDebugMessage'</span><span class=\"p\">)</span>\n</pre>\n<h1>setup_logger</h1>\n<pre><span class=\"n\">setup_logger</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'log'</span><span class=\"p\">,</span>\n    <span class=\"n\">base_logger</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">log_dir</span><span class=\"o\">=</span><span class=\"s1\">'logs'</span><span class=\"p\">,</span>\n    <span class=\"n\">cfg_file</span><span class=\"o\">=</span><span class=\"s1\">'log.yaml'</span><span class=\"p\">,</span>\n    <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'date_fmt'</span><span class=\"p\">:</span> <span class=\"s1\">'%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\">_%H:%M:%S'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'format_str'</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%(asctime)17s</span><span class=\"s1\">-</span><span class=\"si\">%(name)-12s</span><span class=\"s1\">-</span><span class=\"si\">%(levelname)-8s</span><span class=\"s1\">-</span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'detailed_format_str'</span><span class=\"p\">:</span> <span class=\"s1\">'(</span><span class=\"si\">%(module)s</span><span class=\"s1\">-</span><span class=\"si\">%(funcName)s</span><span class=\"s1\"> #</span><span class=\"si\">%(lineno)d</span><span class=\"s1\">)'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'colors'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'TRACE'</span><span class=\"p\">:</span> <span class=\"s1\">'Back.WHITE,Fore.BLACK'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'DEBUG'</span><span class=\"p\">:</span> <span class=\"s1\">'Fore.CYAN'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'INFO'</span><span class=\"p\">:</span> <span class=\"s1\">'Fore.GREEN'</span><span class=\"p\">,</span> \n            <span class=\"s1\">'WARNING'</span><span class=\"p\">:</span> <span class=\"s1\">'Fore.YELLOW'</span><span class=\"p\">,</span> \n            <span class=\"s1\">'ERROR'</span><span class=\"p\">:</span> <span class=\"s1\">'Fore.RED'</span><span class=\"p\">,</span> \n            <span class=\"s1\">'CRITICAL'</span><span class=\"p\">:</span> <span class=\"s1\">'Back.RED,Fore.WHITE'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">trace_logging</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">clear_others</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">handles</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Setup a logger (call instead of logging.basicConfig)</p>\n<pre><code>:param name: (String) log file name\n:param base_logger: (logging.Logger) logger to base off - uses root if not set\n:param log_dir: (string | False) directory to store log files in - doesn't log to file if set to False\n:param cfg_file: (string | False) configuration file to use, or false to skip creating a file\n:param config: (Dict) configuration dictionary see CONFIG variable for example\n:param trace_logging: (Bool) use trace logging\n:param clear_others: (Bool) clear existing handlers on the base logger\n:param handles: (List) also add these handlers to the base logger\n:returns None\n</code></pre>\n\n          </div>"}, "last_serial": 6801870, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "d69bff91942555819a1216a4e458f4bb", "sha256": "b08b6b77f94b8bb277408136eca4b601a4f897a45503aa75228da654861fd95a"}, "downloads": -1, "filename": "log_ext-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d69bff91942555819a1216a4e458f4bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4391, "upload_time": "2020-03-11T00:54:37", "upload_time_iso_8601": "2020-03-11T00:54:37.031433Z", "url": "https://files.pythonhosted.org/packages/86/94/22f3167c46187ae90ebacf856b2686e86118d13a52821cccaaade921e7d2/log_ext-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d00f7838c7e09d43786cd88ae65303a4", "sha256": "b164e0b9c1bb91bc761587622caf3986e16861878c47f350d6f35e60747f22ae"}, "downloads": -1, "filename": "log_ext-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d00f7838c7e09d43786cd88ae65303a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3657, "upload_time": "2020-03-11T00:54:38", "upload_time_iso_8601": "2020-03-11T00:54:38.985547Z", "url": "https://files.pythonhosted.org/packages/51/9a/037f4676c6f372f24646056537f51d2557a575a9d57809f46a22461ef43a/log_ext-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "72044340b38879cdd9037ebc3c7655d7", "sha256": "dc6ab4d4cde61651e79de81630b5a4dc5b48ce3aceaa8e97578addeb831976e6"}, "downloads": -1, "filename": "log_ext-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "72044340b38879cdd9037ebc3c7655d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4388, "upload_time": "2020-03-11T00:57:47", "upload_time_iso_8601": "2020-03-11T00:57:47.579271Z", "url": "https://files.pythonhosted.org/packages/4d/89/3b1d5e2d0876bf1f159dbae5b3b838140f8fb2c75a05e1bfe36cdfa78391/log_ext-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1229095ea4728cf41007a25ccaa04f7", "sha256": "5cdc8f6562965530216c7f54885d6992c9f9f1d72b9f1c933c12dc64dff7c0b6"}, "downloads": -1, "filename": "log_ext-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a1229095ea4728cf41007a25ccaa04f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3669, "upload_time": "2020-03-11T00:57:49", "upload_time_iso_8601": "2020-03-11T00:57:49.278842Z", "url": "https://files.pythonhosted.org/packages/8a/e2/be8a060977de6aaddd8e2ca0a6a01080860c0141ef09969357f4140a14ba/log_ext-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "44b5e1eb0536e2388113504f519a762a", "sha256": "1b9533bc9ea4944f495c1b93dd0e688a4077af0e4e8d7aa7ff9977bcfb5ef22a"}, "downloads": -1, "filename": "log_ext-1.0.2.tar.gz", "has_sig": false, "md5_digest": "44b5e1eb0536e2388113504f519a762a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3974, "upload_time": "2020-03-12T21:32:14", "upload_time_iso_8601": "2020-03-12T21:32:14.468272Z", "url": "https://files.pythonhosted.org/packages/0b/33/11bf9708f54535b9a1e43219dc271007a000f76513daeffced1c47a1f232/log_ext-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "44b5e1eb0536e2388113504f519a762a", "sha256": "1b9533bc9ea4944f495c1b93dd0e688a4077af0e4e8d7aa7ff9977bcfb5ef22a"}, "downloads": -1, "filename": "log_ext-1.0.2.tar.gz", "has_sig": false, "md5_digest": "44b5e1eb0536e2388113504f519a762a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3974, "upload_time": "2020-03-12T21:32:14", "upload_time_iso_8601": "2020-03-12T21:32:14.468272Z", "url": "https://files.pythonhosted.org/packages/0b/33/11bf9708f54535b9a1e43219dc271007a000f76513daeffced1c47a1f232/log_ext-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:21 2020"}