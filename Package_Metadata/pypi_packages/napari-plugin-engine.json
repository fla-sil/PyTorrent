{"info": {"author": "napari team", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Testing", "Topic :: Utilities"], "description": "# napari plugin engine\n\n[![License](https://img.shields.io/pypi/l/napari-plugin-engine.svg?color=green)](https://github.com/napari/napari-plugin-engine/raw/master/LICENSE)\n[![Build Status](https://travis-ci.com/napari/napari-plugin-engine.svg?branch=master)](https://travis-ci.com/napari/napari-plugin-engine)\n[![Docs Status](https://readthedocs.org/projects/napari-plugin-engine/badge/?version=latest)](https://readthedocs.org/projects/napari_plugin_engine/)\n[![codecov](https://codecov.io/gh/napari/napari/branch/master/graph/badge.svg)](https://codecov.io/gh/napari/napari)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-plugin-engine.svg?color=green)](https://python.org)\n[![PyPI](https://img.shields.io/pypi/v/napari-plugin-engine.svg?color=green)](https://pypi.org/project/napari-plugin-engine)\n\n`napari-plugin-engine` is a fork of [pluggy](https://github.com/pytest-dev/pluggy),\nmodified by the [napari](https://github.com/napari/napari) team.\n\nThere are some API and feature changes, including:\n\n- discovery via [naming\n  convention](https://packaging.python.org/guides/creating-and-discovering-plugins/#using-naming-convention)\n  as well as\n  [entry_points](https://packaging.python.org/guides/creating-and-discovering-plugins/#using-package-metadata)\n- support for reordering of hook calls after registration.\n- enhanced API for retrieving plugin package metadata.\n- modified plugin call and registration exception handling\n- modified `HookResult` object and hook call loop, with ability to retrieve the\n  `HookImplementation` responsible for the result.\n- lazy plugin discovery\n- some changes to variable and attribute naming\n- removed all deprecated code\n- type annotations on everything\n- pytest fixtures for testing\n- a couple napari-specific convenience imports\n\nFor usage overview and a reference for the `napari-plugin-engine` API, see our\n[Documentation](https://napari-plugin-engine.readthedocs.io/en/latest/)\n\n(see also: the [pluggy documentation](https://pluggy.readthedocs.io/en/latest/))\n\n## install\n\n```shell\npip install napari-plugin-engine\n```\n\n## Usage\n\nsee [documentation](https://napari-plugin-engine.readthedocs.io/en/latest/usage.html)\n\n\n=========\nChangelog\n=========\n\nforked into napari-plugin-engine (2020-04-20)\n===============================-\n\n\n.. towncrier release notes start\n\npluggy 0.13.1 (2019-11-21)\n==========================\n\nTrivial/Internal Changes\n------------------------\n\n- `#236 <https://github.com/pytest-dev/pluggy/pull/236>`_: Improved documentation, especially with regard to references.\n\n\npluggy 0.13.0 (2019-09-10)\n==========================\n\nTrivial/Internal Changes\n------------------------\n\n- `#222 <https://github.com/pytest-dev/pluggy/issues/222>`_: Replace ``importlib_metadata`` backport with ``importlib.metadata`` from the\n  standard library on Python 3.8+.\n\n\npluggy 0.12.0 (2019-05-27)\n==========================\n\nFeatures\n--------\n\n- `#215 <https://github.com/pytest-dev/pluggy/issues/215>`_: Switch from ``pkg_resources`` to ``importlib-metadata`` for entrypoint detection for improved performance and import time.  This time with ``.egg`` support.\n\n\npluggy 0.11.0 (2019-05-07)\n==========================\n\nBug Fixes\n---------\n\n- `#205 <https://github.com/pytest-dev/pluggy/issues/205>`_: Revert changes made in 0.10.0 release breaking ``.egg`` installs.\n\n\npluggy 0.10.0 (2019-05-07)\n==========================\n\nFeatures\n--------\n\n- `#199 <https://github.com/pytest-dev/pluggy/issues/199>`_: Switch from ``pkg_resources`` to ``importlib-metadata`` for entrypoint detection for improved performance and import time.\n\n\npluggy 0.9.0 (2019-02-21)\n=========================\n\nFeatures\n--------\n\n- `#189 <https://github.com/pytest-dev/pluggy/issues/189>`_: ``PluginManager.load_setuptools_entrypoints`` now accepts a ``name`` parameter that when given will\n  load only entry points with that name.\n\n  ``PluginManager.load_setuptools_entrypoints`` also now returns the number of plugins loaded by the\n  call, as opposed to the number of all plugins loaded by all calls to this method.\n\n\n\nBug Fixes\n---------\n\n- `#187 <https://github.com/pytest-dev/pluggy/issues/187>`_: Fix internal ``varnames`` function for PyPy3.\n\n\npluggy 0.8.1 (2018-11-09)\n=========================\n\nTrivial/Internal Changes\n------------------------\n\n- `#166 <https://github.com/pytest-dev/pluggy/issues/166>`_: Add ``stacklevel=2`` to implprefix warning so that the reported location of warning is the caller of PluginManager.\n\n\npluggy 0.8.0 (2018-10-15)\n=========================\n\nFeatures\n--------\n\n- `#177 <https://github.com/pytest-dev/pluggy/issues/177>`_: Add ``get_hookimpls()`` method to hook callers.\n\n\n\nTrivial/Internal Changes\n------------------------\n\n- `#165 <https://github.com/pytest-dev/pluggy/issues/165>`_: Add changelog in long package description and documentation.\n\n\n- `#172 <https://github.com/pytest-dev/pluggy/issues/172>`_: Add a test exemplifying the opt-in nature of spec defined args.\n\n\n- `#57 <https://github.com/pytest-dev/pluggy/issues/57>`_: Encapsulate hook specifications in a type for easier introspection.\n\n\npluggy 0.7.1 (2018-07-28)\n=========================\n\nDeprecations and Removals\n-------------------------\n\n- `#116 <https://github.com/pytest-dev/pluggy/issues/116>`_: Deprecate the ``implprefix`` kwarg to ``PluginManager`` and instead\n  expect users to start using explicit ``HookimplMarker`` everywhere.\n\n\n\nFeatures\n--------\n\n- `#122 <https://github.com/pytest-dev/pluggy/issues/122>`_: Add ``.plugin`` member to ``PluginValidationError`` to access failing plugin during post-mortem.\n\n\n- `#138 <https://github.com/pytest-dev/pluggy/issues/138>`_: Add per implementation warnings support for hookspecs allowing for both\n  deprecation and future warnings of legacy and (future) experimental hooks\n  respectively.\n\n\n\nBug Fixes\n---------\n\n- `#110 <https://github.com/pytest-dev/pluggy/issues/110>`_: Fix a bug where ``_HookCaller.call_historic()`` would call the ``proc``\n  arg even when the default is ``None`` resulting in a ``TypeError``.\n\n- `#160 <https://github.com/pytest-dev/pluggy/issues/160>`_: Fix problem when handling ``VersionConflict`` errors when loading setuptools plugins.\n\n\n\nImproved Documentation\n----------------------\n\n- `#123 <https://github.com/pytest-dev/pluggy/issues/123>`_: Document how exceptions are handled and how the hook call loop\n  terminates immediately on the first error which is then delivered\n  to any surrounding wrappers.\n\n\n- `#136 <https://github.com/pytest-dev/pluggy/issues/136>`_: Docs rework including a much better introduction and comprehensive example\n  set for new users. A big thanks goes out to @obestwalter for the great work!\n\n\n\nTrivial/Internal Changes\n------------------------\n\n- `#117 <https://github.com/pytest-dev/pluggy/issues/117>`_: Break up the main monolithic package modules into separate modules by concern\n\n\n- `#131 <https://github.com/pytest-dev/pluggy/issues/131>`_: Automate ``setuptools`` wheels building and PyPi upload using TravisCI.\n\n\n- `#153 <https://github.com/pytest-dev/pluggy/issues/153>`_: Reorganize tests more appropriately by modules relating to each\n  internal component/feature. This is in an effort to avoid (future)\n  duplication and better separation of concerns in the test set.\n\n\n- `#156 <https://github.com/pytest-dev/pluggy/issues/156>`_: Add ``HookImpl.__repr__()`` for better debugging.\n\n\n- `#66 <https://github.com/pytest-dev/pluggy/issues/66>`_: Start using ``towncrier`` and a custom ``tox`` environment to prepare releases!\n\n\npluggy 0.7.0 (Unreleased)\n=========================\n\n* `#160 <https://github.com/pytest-dev/pluggy/issues/160>`_: We discovered a deployment issue so this version was never released to PyPI, only the tag exists.\n\npluggy 0.6.0 (2017-11-24)\n=========================\n\n- Add CI testing for the features, release, and master\n  branches of ``pytest`` (PR `#79`_).\n- Document public API for ``_Result`` objects passed to wrappers\n  (PR `#85`_).\n- Document and test hook LIFO ordering (PR `#85`_).\n- Turn warnings into errors in test suite (PR `#89`_).\n- Deprecate ``_Result.result`` (PR `#88`_).\n- Convert ``_Multicall`` to a simple function distinguishing it from\n  the legacy version (PR `#90`_).\n- Resolve E741 errors (PR `#96`_).\n- Test and bug fix for unmarked hook collection (PRs `#97`_ and\n  `#102`_).\n- Drop support for EOL Python 2.6 and 3.3 (PR `#103`_).\n- Fix ``inspect`` based arg introspection on py3.6 (PR `#94`_).\n\n.. _#79: https://github.com/pytest-dev/pluggy/pull/79\n.. _#85: https://github.com/pytest-dev/pluggy/pull/85\n.. _#88: https://github.com/pytest-dev/pluggy/pull/88\n.. _#89: https://github.com/pytest-dev/pluggy/pull/89\n.. _#90: https://github.com/pytest-dev/pluggy/pull/90\n.. _#94: https://github.com/pytest-dev/pluggy/pull/94\n.. _#96: https://github.com/pytest-dev/pluggy/pull/96\n.. _#97: https://github.com/pytest-dev/pluggy/pull/97\n.. _#102: https://github.com/pytest-dev/pluggy/pull/102\n.. _#103: https://github.com/pytest-dev/pluggy/pull/103\n\n\npluggy 0.5.2 (2017-09-06)\n=========================\n\n- fix bug where ``firstresult`` wrappers were being sent an incorrectly configured\n  ``_Result`` (a list was set instead of a single value). Add tests to check for\n  this as well as ``_Result.force_result()`` behaviour. Thanks to `@tgoodlet`_\n  for the PR `#72`_.\n\n- fix incorrect ``getattr``  of ``DeprecationWarning`` from the ``warnings``\n  module. Thanks to `@nicoddemus`_ for the PR `#77`_.\n\n- hide ``pytest`` tracebacks in certain core routines. Thanks to\n  `@nicoddemus`_ for the PR `#80`_.\n\n.. _#72: https://github.com/pytest-dev/pluggy/pull/72\n.. _#77: https://github.com/pytest-dev/pluggy/pull/77\n.. _#80: https://github.com/pytest-dev/pluggy/pull/80\n\n\npluggy 0.5.1 (2017-08-29)\n=========================\n\n- fix a bug and add tests for case where ``firstresult`` hooks return\n  ``None`` results. Thanks to `@RonnyPfannschmidt`_ and `@tgoodlet`_\n  for the issue (`#68`_) and PR (`#69`_) respectively.\n\n.. _#69: https://github.com/pytest-dev/pluggy/pull/69\n.. _#68: https://github.com/pytest-dev/pluggy/issues/68\n\n\npluggy 0.5.0 (2017-08-28)\n=========================\n\n- fix bug where callbacks for historic hooks would not be called for\n  already registered plugins.  Thanks `@vodik`_ for the PR\n  and `@hpk42`_ for further fixes.\n\n- fix `#17`_ by considering only actual functions for hooks\n  this removes the ability to register arbitrary callable objects\n  which at first glance is a reasonable simplification,\n  thanks `@RonnyPfannschmidt`_ for report and pr.\n\n- fix `#19`_: allow registering hookspecs from instances.  The PR from\n  `@tgoodlet`_ also modernized the varnames implementation.\n\n- resolve `#32`_: split up the test set into multiple modules.\n  Thanks to `@RonnyPfannschmidt`_ for the PR and `@tgoodlet`_ for\n  the initial request.\n\n- resolve `#14`_: add full sphinx docs. Thanks to `@tgoodlet`_ for\n  PR `#39`_.\n\n- add hook call mismatch warnings. Thanks to `@tgoodlet`_ for the\n  PR `#42`_.\n\n- resolve `#44`_: move to new-style classes. Thanks to `@MichalTHEDUDE`_\n  for PR `#46`_.\n\n- add baseline benchmarking/speed tests using ``pytest-benchmark``\n  in PR `#54`_.  Thanks to `@tgoodlet`_.\n\n- update the README to showcase the API. Thanks to `@tgoodlet`_ for the\n  issue and PR `#55`_.\n\n- deprecate ``__multicall__`` and add a faster call loop implementation.\n  Thanks to `@tgoodlet`_ for PR `#58`_.\n\n- raise a comprehensible error when a ``hookimpl`` is called with positional\n  args. Thanks to `@RonnyPfannschmidt`_ for the issue and `@tgoodlet`_ for\n  PR `#60`_.\n\n- fix the ``firstresult`` test making it more complete\n  and remove a duplicate of that test. Thanks to `@tgoodlet`_\n  for PR `#62`_.\n\n.. _#62: https://github.com/pytest-dev/pluggy/pull/62\n.. _#60: https://github.com/pytest-dev/pluggy/pull/60\n.. _#58: https://github.com/pytest-dev/pluggy/pull/58\n.. _#55: https://github.com/pytest-dev/pluggy/pull/55\n.. _#54: https://github.com/pytest-dev/pluggy/pull/54\n.. _#46: https://github.com/pytest-dev/pluggy/pull/46\n.. _#44: https://github.com/pytest-dev/pluggy/issues/44\n.. _#42: https://github.com/pytest-dev/pluggy/pull/42\n.. _#39: https://github.com/pytest-dev/pluggy/pull/39\n.. _#32: https://github.com/pytest-dev/pluggy/pull/32\n.. _#19: https://github.com/pytest-dev/pluggy/issues/19\n.. _#17: https://github.com/pytest-dev/pluggy/issues/17\n.. _#14: https://github.com/pytest-dev/pluggy/issues/14\n\n\npluggy 0.4.0 (2016-09-25)\n=========================\n\n- add ``has_plugin(name)`` method to pluginmanager.  thanks `@nicoddemus`_.\n\n- fix `#11`_: make plugin parsing more resilient against exceptions\n  from ``__getattr__`` functions. Thanks `@nicoddemus`_.\n\n- fix issue `#4`_: specific ``HookCallError`` exception for when a hook call\n  provides not enough arguments.\n\n- better error message when loading setuptools entrypoints fails\n  due to a ``VersionConflict``.  Thanks `@blueyed`_.\n\n.. _#11: https://github.com/pytest-dev/pluggy/issues/11\n.. _#4: https://github.com/pytest-dev/pluggy/issues/4\n\n\npluggy 0.3.1 (2015-09-17)\n=========================\n\n- avoid using deprecated-in-python3.5 getargspec method. Thanks\n  `@mdboom`_.\n\n\npluggy 0.3.0 (2015-05-07)\n=========================\n\ninitial release\n\n.. contributors\n.. _@hpk42: https://github.com/hpk42\n.. _@tgoodlet: https://github.com/goodboy\n.. _@MichalTHEDUDE: https://github.com/MichalTHEDUDE\n.. _@vodik: https://github.com/vodik\n.. _@RonnyPfannschmidt: https://github.com/RonnyPfannschmidt\n.. _@blueyed: https://github.com/blueyed\n.. _@nicoddemus: https://github.com/nicoddemus\n.. _@mdboom: https://github.com/mdboom\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/napari/napari-plugin-engine", "keywords": "", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "napari-plugin-engine", "package_url": "https://pypi.org/project/napari-plugin-engine/", "platform": "", "project_url": "https://pypi.org/project/napari-plugin-engine/", "project_urls": {"Homepage": "https://github.com/napari/napari-plugin-engine"}, "release_url": "https://pypi.org/project/napari-plugin-engine/0.1.5/", "requires_dist": ["importlib-metadata (>=0.12) ; python_version < \"3.8\"", "pre-commit ; extra == 'dev'", "tox ; extra == 'dev'", "pytest ; extra == 'testing'"], "requires_python": ">=3.6.*", "summary": "napari plugin engine, fork of pluggy", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>napari plugin engine</h1>\n<p><a href=\"https://github.com/napari/napari-plugin-engine/raw/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96a4217079a30fe756813680649781de7f48aae8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6e61706172692d706c7567696e2d656e67696e652e7376673f636f6c6f723d677265656e\"></a>\n<a href=\"https://travis-ci.com/napari/napari-plugin-engine\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a620056f9b66598bbf02970ce40f6b709925143/68747470733a2f2f7472617669732d63692e636f6d2f6e61706172692f6e61706172692d706c7567696e2d656e67696e652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://readthedocs.org/projects/napari_plugin_engine/\" rel=\"nofollow\"><img alt=\"Docs Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c179f2a6fbf969954be5b37c733c101dcd7c1d2/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6e61706172692d706c7567696e2d656e67696e652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/napari/napari\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae5b73654db46cd4a41935e358f4a9677ec15713/68747470733a2f2f636f6465636f762e696f2f67682f6e61706172692f6e61706172692f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://python.org\" rel=\"nofollow\"><img alt=\"Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f79dc58beb39f0ffc15e40b18f976ecf60a347e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6e61706172692d706c7567696e2d656e67696e652e7376673f636f6c6f723d677265656e\"></a>\n<a href=\"https://pypi.org/project/napari-plugin-engine\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8660511f54d97ec415b3e503c3111ff84ea6be9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6e61706172692d706c7567696e2d656e67696e652e7376673f636f6c6f723d677265656e\"></a></p>\n<p><code>napari-plugin-engine</code> is a fork of <a href=\"https://github.com/pytest-dev/pluggy\" rel=\"nofollow\">pluggy</a>,\nmodified by the <a href=\"https://github.com/napari/napari\" rel=\"nofollow\">napari</a> team.</p>\n<p>There are some API and feature changes, including:</p>\n<ul>\n<li>discovery via <a href=\"https://packaging.python.org/guides/creating-and-discovering-plugins/#using-naming-convention\" rel=\"nofollow\">naming\nconvention</a>\nas well as\n<a href=\"https://packaging.python.org/guides/creating-and-discovering-plugins/#using-package-metadata\" rel=\"nofollow\">entry_points</a></li>\n<li>support for reordering of hook calls after registration.</li>\n<li>enhanced API for retrieving plugin package metadata.</li>\n<li>modified plugin call and registration exception handling</li>\n<li>modified <code>HookResult</code> object and hook call loop, with ability to retrieve the\n<code>HookImplementation</code> responsible for the result.</li>\n<li>lazy plugin discovery</li>\n<li>some changes to variable and attribute naming</li>\n<li>removed all deprecated code</li>\n<li>type annotations on everything</li>\n<li>pytest fixtures for testing</li>\n<li>a couple napari-specific convenience imports</li>\n</ul>\n<p>For usage overview and a reference for the <code>napari-plugin-engine</code> API, see our\n<a href=\"https://napari-plugin-engine.readthedocs.io/en/latest/\" rel=\"nofollow\">Documentation</a></p>\n<p>(see also: the <a href=\"https://pluggy.readthedocs.io/en/latest/\" rel=\"nofollow\">pluggy documentation</a>)</p>\n<h2>install</h2>\n<pre>pip install napari-plugin-engine\n</pre>\n<h2>Usage</h2>\n<p>see <a href=\"https://napari-plugin-engine.readthedocs.io/en/latest/usage.html\" rel=\"nofollow\">documentation</a></p>\n<h1>=========\nChangelog</h1>\n<p>forked into napari-plugin-engine (2020-04-20)\n===============================-</p>\n<p>.. towncrier release notes start</p>\n<h1>pluggy 0.13.1 (2019-11-21)</h1>\n<h2>Trivial/Internal Changes</h2>\n<ul>\n<li><code>#236 &lt;https://github.com/pytest-dev/pluggy/pull/236&gt;</code>_: Improved documentation, especially with regard to references.</li>\n</ul>\n<h1>pluggy 0.13.0 (2019-09-10)</h1>\n<h2>Trivial/Internal Changes</h2>\n<ul>\n<li><code>#222 &lt;https://github.com/pytest-dev/pluggy/issues/222&gt;</code>_: Replace <code>importlib_metadata</code> backport with <code>importlib.metadata</code> from the\nstandard library on Python 3.8+.</li>\n</ul>\n<h1>pluggy 0.12.0 (2019-05-27)</h1>\n<h2>Features</h2>\n<ul>\n<li><code>#215 &lt;https://github.com/pytest-dev/pluggy/issues/215&gt;</code>_: Switch from <code>pkg_resources</code> to <code>importlib-metadata</code> for entrypoint detection for improved performance and import time.  This time with <code>.egg</code> support.</li>\n</ul>\n<h1>pluggy 0.11.0 (2019-05-07)</h1>\n<h2>Bug Fixes</h2>\n<ul>\n<li><code>#205 &lt;https://github.com/pytest-dev/pluggy/issues/205&gt;</code>_: Revert changes made in 0.10.0 release breaking <code>.egg</code> installs.</li>\n</ul>\n<h1>pluggy 0.10.0 (2019-05-07)</h1>\n<h2>Features</h2>\n<ul>\n<li><code>#199 &lt;https://github.com/pytest-dev/pluggy/issues/199&gt;</code>_: Switch from <code>pkg_resources</code> to <code>importlib-metadata</code> for entrypoint detection for improved performance and import time.</li>\n</ul>\n<h1>pluggy 0.9.0 (2019-02-21)</h1>\n<h2>Features</h2>\n<ul>\n<li>\n<p><code>#189 &lt;https://github.com/pytest-dev/pluggy/issues/189&gt;</code>_: <code>PluginManager.load_setuptools_entrypoints</code> now accepts a <code>name</code> parameter that when given will\nload only entry points with that name.</p>\n<p><code>PluginManager.load_setuptools_entrypoints</code> also now returns the number of plugins loaded by the\ncall, as opposed to the number of all plugins loaded by all calls to this method.</p>\n</li>\n</ul>\n<h2>Bug Fixes</h2>\n<ul>\n<li><code>#187 &lt;https://github.com/pytest-dev/pluggy/issues/187&gt;</code>_: Fix internal <code>varnames</code> function for PyPy3.</li>\n</ul>\n<h1>pluggy 0.8.1 (2018-11-09)</h1>\n<h2>Trivial/Internal Changes</h2>\n<ul>\n<li><code>#166 &lt;https://github.com/pytest-dev/pluggy/issues/166&gt;</code>_: Add <code>stacklevel=2</code> to implprefix warning so that the reported location of warning is the caller of PluginManager.</li>\n</ul>\n<h1>pluggy 0.8.0 (2018-10-15)</h1>\n<h2>Features</h2>\n<ul>\n<li><code>#177 &lt;https://github.com/pytest-dev/pluggy/issues/177&gt;</code>_: Add <code>get_hookimpls()</code> method to hook callers.</li>\n</ul>\n<h2>Trivial/Internal Changes</h2>\n<ul>\n<li>\n<p><code>#165 &lt;https://github.com/pytest-dev/pluggy/issues/165&gt;</code>_: Add changelog in long package description and documentation.</p>\n</li>\n<li>\n<p><code>#172 &lt;https://github.com/pytest-dev/pluggy/issues/172&gt;</code>_: Add a test exemplifying the opt-in nature of spec defined args.</p>\n</li>\n<li>\n<p><code>#57 &lt;https://github.com/pytest-dev/pluggy/issues/57&gt;</code>_: Encapsulate hook specifications in a type for easier introspection.</p>\n</li>\n</ul>\n<h1>pluggy 0.7.1 (2018-07-28)</h1>\n<h2>Deprecations and Removals</h2>\n<ul>\n<li><code>#116 &lt;https://github.com/pytest-dev/pluggy/issues/116&gt;</code>_: Deprecate the <code>implprefix</code> kwarg to <code>PluginManager</code> and instead\nexpect users to start using explicit <code>HookimplMarker</code> everywhere.</li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>\n<p><code>#122 &lt;https://github.com/pytest-dev/pluggy/issues/122&gt;</code>_: Add <code>.plugin</code> member to <code>PluginValidationError</code> to access failing plugin during post-mortem.</p>\n</li>\n<li>\n<p><code>#138 &lt;https://github.com/pytest-dev/pluggy/issues/138&gt;</code>_: Add per implementation warnings support for hookspecs allowing for both\ndeprecation and future warnings of legacy and (future) experimental hooks\nrespectively.</p>\n</li>\n</ul>\n<h2>Bug Fixes</h2>\n<ul>\n<li>\n<p><code>#110 &lt;https://github.com/pytest-dev/pluggy/issues/110&gt;</code>_: Fix a bug where <code>_HookCaller.call_historic()</code> would call the <code>proc</code>\narg even when the default is <code>None</code> resulting in a <code>TypeError</code>.</p>\n</li>\n<li>\n<p><code>#160 &lt;https://github.com/pytest-dev/pluggy/issues/160&gt;</code>_: Fix problem when handling <code>VersionConflict</code> errors when loading setuptools plugins.</p>\n</li>\n</ul>\n<h2>Improved Documentation</h2>\n<ul>\n<li>\n<p><code>#123 &lt;https://github.com/pytest-dev/pluggy/issues/123&gt;</code>_: Document how exceptions are handled and how the hook call loop\nterminates immediately on the first error which is then delivered\nto any surrounding wrappers.</p>\n</li>\n<li>\n<p><code>#136 &lt;https://github.com/pytest-dev/pluggy/issues/136&gt;</code>_: Docs rework including a much better introduction and comprehensive example\nset for new users. A big thanks goes out to @obestwalter for the great work!</p>\n</li>\n</ul>\n<h2>Trivial/Internal Changes</h2>\n<ul>\n<li>\n<p><code>#117 &lt;https://github.com/pytest-dev/pluggy/issues/117&gt;</code>_: Break up the main monolithic package modules into separate modules by concern</p>\n</li>\n<li>\n<p><code>#131 &lt;https://github.com/pytest-dev/pluggy/issues/131&gt;</code>_: Automate <code>setuptools</code> wheels building and PyPi upload using TravisCI.</p>\n</li>\n<li>\n<p><code>#153 &lt;https://github.com/pytest-dev/pluggy/issues/153&gt;</code>_: Reorganize tests more appropriately by modules relating to each\ninternal component/feature. This is in an effort to avoid (future)\nduplication and better separation of concerns in the test set.</p>\n</li>\n<li>\n<p><code>#156 &lt;https://github.com/pytest-dev/pluggy/issues/156&gt;</code>_: Add <code>HookImpl.__repr__()</code> for better debugging.</p>\n</li>\n<li>\n<p><code>#66 &lt;https://github.com/pytest-dev/pluggy/issues/66&gt;</code>_: Start using <code>towncrier</code> and a custom <code>tox</code> environment to prepare releases!</p>\n</li>\n</ul>\n<h1>pluggy 0.7.0 (Unreleased)</h1>\n<ul>\n<li><code>#160 &lt;https://github.com/pytest-dev/pluggy/issues/160&gt;</code>_: We discovered a deployment issue so this version was never released to PyPI, only the tag exists.</li>\n</ul>\n<h1>pluggy 0.6.0 (2017-11-24)</h1>\n<ul>\n<li>Add CI testing for the features, release, and master\nbranches of <code>pytest</code> (PR <code>#79</code>_).</li>\n<li>Document public API for <code>_Result</code> objects passed to wrappers\n(PR <code>#85</code>_).</li>\n<li>Document and test hook LIFO ordering (PR <code>#85</code>_).</li>\n<li>Turn warnings into errors in test suite (PR <code>#89</code>_).</li>\n<li>Deprecate <code>_Result.result</code> (PR <code>#88</code>_).</li>\n<li>Convert <code>_Multicall</code> to a simple function distinguishing it from\nthe legacy version (PR <code>#90</code>_).</li>\n<li>Resolve E741 errors (PR <code>#96</code>_).</li>\n<li>Test and bug fix for unmarked hook collection (PRs <code>#97</code>_ and\n<code>#102</code>_).</li>\n<li>Drop support for EOL Python 2.6 and 3.3 (PR <code>#103</code>_).</li>\n<li>Fix <code>inspect</code> based arg introspection on py3.6 (PR <code>#94</code>_).</li>\n</ul>\n<p>.. _#79: <a href=\"https://github.com/pytest-dev/pluggy/pull/79\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/79</a>\n.. _#85: <a href=\"https://github.com/pytest-dev/pluggy/pull/85\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/85</a>\n.. _#88: <a href=\"https://github.com/pytest-dev/pluggy/pull/88\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/88</a>\n.. _#89: <a href=\"https://github.com/pytest-dev/pluggy/pull/89\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/89</a>\n.. _#90: <a href=\"https://github.com/pytest-dev/pluggy/pull/90\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/90</a>\n.. _#94: <a href=\"https://github.com/pytest-dev/pluggy/pull/94\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/94</a>\n.. _#96: <a href=\"https://github.com/pytest-dev/pluggy/pull/96\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/96</a>\n.. _#97: <a href=\"https://github.com/pytest-dev/pluggy/pull/97\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/97</a>\n.. _#102: <a href=\"https://github.com/pytest-dev/pluggy/pull/102\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/102</a>\n.. _#103: <a href=\"https://github.com/pytest-dev/pluggy/pull/103\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/103</a></p>\n<h1>pluggy 0.5.2 (2017-09-06)</h1>\n<ul>\n<li>\n<p>fix bug where <code>firstresult</code> wrappers were being sent an incorrectly configured\n<code>_Result</code> (a list was set instead of a single value). Add tests to check for\nthis as well as <code>_Result.force_result()</code> behaviour. Thanks to <code>@tgoodlet</code>_\nfor the PR <code>#72</code>_.</p>\n</li>\n<li>\n<p>fix incorrect <code>getattr</code>  of <code>DeprecationWarning</code> from the <code>warnings</code>\nmodule. Thanks to <code>@nicoddemus</code>_ for the PR <code>#77</code>_.</p>\n</li>\n<li>\n<p>hide <code>pytest</code> tracebacks in certain core routines. Thanks to\n<code>@nicoddemus</code>_ for the PR <code>#80</code>_.</p>\n</li>\n</ul>\n<p>.. _#72: <a href=\"https://github.com/pytest-dev/pluggy/pull/72\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/72</a>\n.. _#77: <a href=\"https://github.com/pytest-dev/pluggy/pull/77\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/77</a>\n.. _#80: <a href=\"https://github.com/pytest-dev/pluggy/pull/80\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/80</a></p>\n<h1>pluggy 0.5.1 (2017-08-29)</h1>\n<ul>\n<li>fix a bug and add tests for case where <code>firstresult</code> hooks return\n<code>None</code> results. Thanks to <code>@RonnyPfannschmidt</code>_ and <code>@tgoodlet</code>_\nfor the issue (<code>#68</code><em>) and PR (<code>#69</code></em>) respectively.</li>\n</ul>\n<p>.. _#69: <a href=\"https://github.com/pytest-dev/pluggy/pull/69\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/69</a>\n.. _#68: <a href=\"https://github.com/pytest-dev/pluggy/issues/68\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/issues/68</a></p>\n<h1>pluggy 0.5.0 (2017-08-28)</h1>\n<ul>\n<li>\n<p>fix bug where callbacks for historic hooks would not be called for\nalready registered plugins.  Thanks <code>@vodik</code>_ for the PR\nand <code>@hpk42</code>_ for further fixes.</p>\n</li>\n<li>\n<p>fix <code>#17</code>_ by considering only actual functions for hooks\nthis removes the ability to register arbitrary callable objects\nwhich at first glance is a reasonable simplification,\nthanks <code>@RonnyPfannschmidt</code>_ for report and pr.</p>\n</li>\n<li>\n<p>fix <code>#19</code><em>: allow registering hookspecs from instances.  The PR from\n<code>@tgoodlet</code></em> also modernized the varnames implementation.</p>\n</li>\n<li>\n<p>resolve <code>#32</code><em>: split up the test set into multiple modules.\nThanks to <code>@RonnyPfannschmidt</code></em> for the PR and <code>@tgoodlet</code>_ for\nthe initial request.</p>\n</li>\n<li>\n<p>resolve <code>#14</code><em>: add full sphinx docs. Thanks to <code>@tgoodlet</code></em> for\nPR <code>#39</code>_.</p>\n</li>\n<li>\n<p>add hook call mismatch warnings. Thanks to <code>@tgoodlet</code>_ for the\nPR <code>#42</code>_.</p>\n</li>\n<li>\n<p>resolve <code>#44</code><em>: move to new-style classes. Thanks to <code>@MichalTHEDUDE</code></em>\nfor PR <code>#46</code>_.</p>\n</li>\n<li>\n<p>add baseline benchmarking/speed tests using <code>pytest-benchmark</code>\nin PR <code>#54</code><em>.  Thanks to <code>@tgoodlet</code></em>.</p>\n</li>\n<li>\n<p>update the README to showcase the API. Thanks to <code>@tgoodlet</code>_ for the\nissue and PR <code>#55</code>_.</p>\n</li>\n<li>\n<p>deprecate <code>__multicall__</code> and add a faster call loop implementation.\nThanks to <code>@tgoodlet</code>_ for PR <code>#58</code>_.</p>\n</li>\n<li>\n<p>raise a comprehensible error when a <code>hookimpl</code> is called with positional\nargs. Thanks to <code>@RonnyPfannschmidt</code>_ for the issue and <code>@tgoodlet</code>_ for\nPR <code>#60</code>_.</p>\n</li>\n<li>\n<p>fix the <code>firstresult</code> test making it more complete\nand remove a duplicate of that test. Thanks to <code>@tgoodlet</code>_\nfor PR <code>#62</code>_.</p>\n</li>\n</ul>\n<p>.. _#62: <a href=\"https://github.com/pytest-dev/pluggy/pull/62\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/62</a>\n.. _#60: <a href=\"https://github.com/pytest-dev/pluggy/pull/60\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/60</a>\n.. _#58: <a href=\"https://github.com/pytest-dev/pluggy/pull/58\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/58</a>\n.. _#55: <a href=\"https://github.com/pytest-dev/pluggy/pull/55\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/55</a>\n.. _#54: <a href=\"https://github.com/pytest-dev/pluggy/pull/54\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/54</a>\n.. _#46: <a href=\"https://github.com/pytest-dev/pluggy/pull/46\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/46</a>\n.. _#44: <a href=\"https://github.com/pytest-dev/pluggy/issues/44\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/issues/44</a>\n.. _#42: <a href=\"https://github.com/pytest-dev/pluggy/pull/42\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/42</a>\n.. _#39: <a href=\"https://github.com/pytest-dev/pluggy/pull/39\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/39</a>\n.. _#32: <a href=\"https://github.com/pytest-dev/pluggy/pull/32\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/pull/32</a>\n.. _#19: <a href=\"https://github.com/pytest-dev/pluggy/issues/19\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/issues/19</a>\n.. _#17: <a href=\"https://github.com/pytest-dev/pluggy/issues/17\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/issues/17</a>\n.. _#14: <a href=\"https://github.com/pytest-dev/pluggy/issues/14\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/issues/14</a></p>\n<h1>pluggy 0.4.0 (2016-09-25)</h1>\n<ul>\n<li>\n<p>add <code>has_plugin(name)</code> method to pluginmanager.  thanks <code>@nicoddemus</code>_.</p>\n</li>\n<li>\n<p>fix <code>#11</code><em>: make plugin parsing more resilient against exceptions\nfrom <code>__getattr__</code> functions. Thanks <code>@nicoddemus</code></em>.</p>\n</li>\n<li>\n<p>fix issue <code>#4</code>_: specific <code>HookCallError</code> exception for when a hook call\nprovides not enough arguments.</p>\n</li>\n<li>\n<p>better error message when loading setuptools entrypoints fails\ndue to a <code>VersionConflict</code>.  Thanks <code>@blueyed</code>_.</p>\n</li>\n</ul>\n<p>.. _#11: <a href=\"https://github.com/pytest-dev/pluggy/issues/11\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/issues/11</a>\n.. _#4: <a href=\"https://github.com/pytest-dev/pluggy/issues/4\" rel=\"nofollow\">https://github.com/pytest-dev/pluggy/issues/4</a></p>\n<h1>pluggy 0.3.1 (2015-09-17)</h1>\n<ul>\n<li>avoid using deprecated-in-python3.5 getargspec method. Thanks\n<code>@mdboom</code>_.</li>\n</ul>\n<h1>pluggy 0.3.0 (2015-05-07)</h1>\n<p>initial release</p>\n<p>.. contributors\n.. _@hpk42: <a href=\"https://github.com/hpk42\" rel=\"nofollow\">https://github.com/hpk42</a>\n.. _@tgoodlet: <a href=\"https://github.com/goodboy\" rel=\"nofollow\">https://github.com/goodboy</a>\n.. _@MichalTHEDUDE: <a href=\"https://github.com/MichalTHEDUDE\" rel=\"nofollow\">https://github.com/MichalTHEDUDE</a>\n.. _@vodik: <a href=\"https://github.com/vodik\" rel=\"nofollow\">https://github.com/vodik</a>\n.. _@RonnyPfannschmidt: <a href=\"https://github.com/RonnyPfannschmidt\" rel=\"nofollow\">https://github.com/RonnyPfannschmidt</a>\n.. _@blueyed: <a href=\"https://github.com/blueyed\" rel=\"nofollow\">https://github.com/blueyed</a>\n.. _@nicoddemus: <a href=\"https://github.com/nicoddemus\" rel=\"nofollow\">https://github.com/nicoddemus</a>\n.. _@mdboom: <a href=\"https://github.com/mdboom\" rel=\"nofollow\">https://github.com/mdboom</a></p>\n\n          </div>"}, "last_serial": 7189681, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bd8ebe9f0928fba27c63414aba9765d2", "sha256": "6a24f8ef8fa03fa6af573d5c16a2808910e59898cdf65d5b4a5dda38a3f358ae"}, "downloads": -1, "filename": "napari_plugin_engine-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd8ebe9f0928fba27c63414aba9765d2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.*", "size": 32575, "upload_time": "2020-04-26T22:46:36", "upload_time_iso_8601": "2020-04-26T22:46:36.379302Z", "url": "https://files.pythonhosted.org/packages/5d/a4/91c8d9a3b86af1ec05cedf5ae6a19b78e1110eb5021a4b363ebd79a2c541/napari_plugin_engine-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d5106f7d2a47bbd096e2daa92271ae5", "sha256": "f4fac4892ca8a26d11c3fafdbbb9b2edc87e329834c1d6a8105173543a15e446"}, "downloads": -1, "filename": "napari-plugin-engine-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5d5106f7d2a47bbd096e2daa92271ae5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.*", "size": 56042, "upload_time": "2020-04-26T22:46:37", "upload_time_iso_8601": "2020-04-26T22:46:37.259661Z", "url": "https://files.pythonhosted.org/packages/83/6d/4c40160a9f01a6bc78b0e81b16c9dab95eb3a49e94aa96af1d17ecd96753/napari-plugin-engine-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7d38403128633b6b9cf3619f2470831b", "sha256": "a7c27a9f69e7a587f4e56bb0b7cbdcf1d62343346b90fb5186b1e3df3f72aae2"}, "downloads": -1, "filename": "napari_plugin_engine-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d38403128633b6b9cf3619f2470831b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.*", "size": 33514, "upload_time": "2020-04-27T01:13:24", "upload_time_iso_8601": "2020-04-27T01:13:24.631508Z", "url": "https://files.pythonhosted.org/packages/5d/06/7c3383fe18612fd787ab5e3f5fe0cdfdbccb74b4d29ac98ebe10279b653e/napari_plugin_engine-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "caa013bc49d872125dbac765efe30bb1", "sha256": "a1124b895b136ca979d800cf79c673af2ca5889b9d62a47dcc5bd712cf5b447d"}, "downloads": -1, "filename": "napari-plugin-engine-0.1.2.tar.gz", "has_sig": false, "md5_digest": "caa013bc49d872125dbac765efe30bb1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.*", "size": 57427, "upload_time": "2020-04-27T01:13:25", "upload_time_iso_8601": "2020-04-27T01:13:25.569800Z", "url": "https://files.pythonhosted.org/packages/28/64/8fae409b75f1771395abad95ba77873530981146c0c3970510284e8c17a5/napari-plugin-engine-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "3068b126b0300d059a7d7712c9c048ea", "sha256": "4ce7a4bc420e5c71fe3c30d6d8b20877c60ab343a55662674993b89921a461ea"}, "downloads": -1, "filename": "napari_plugin_engine-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3068b126b0300d059a7d7712c9c048ea", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.*", "size": 33862, "upload_time": "2020-04-27T03:32:09", "upload_time_iso_8601": "2020-04-27T03:32:09.237112Z", "url": "https://files.pythonhosted.org/packages/c7/99/0e646790ffcc043b9483aee89f508b8eb2e3c51b694de8e532aa23c67acf/napari_plugin_engine-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84eebcac54e06ff8d13261729a9acee6", "sha256": "2e2dc488a22b86fe034b30ce64cb4735aabad73f596e1bfdf4b49573827ff7a1"}, "downloads": -1, "filename": "napari-plugin-engine-0.1.3.tar.gz", "has_sig": false, "md5_digest": "84eebcac54e06ff8d13261729a9acee6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.*", "size": 57756, "upload_time": "2020-04-27T03:32:10", "upload_time_iso_8601": "2020-04-27T03:32:10.287919Z", "url": "https://files.pythonhosted.org/packages/ab/ae/aaec877551aae1a44e34b07f5c6af097e0c46896b99889f4691beb8181a1/napari-plugin-engine-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "8cbe7d751d3354284b6985f9ea7b360c", "sha256": "5c5b0460d7043072cad3c79910d2054a0a916245b4fb2d641d1c391a9cd88040"}, "downloads": -1, "filename": "napari_plugin_engine-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8cbe7d751d3354284b6985f9ea7b360c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.*", "size": 34214, "upload_time": "2020-04-27T17:21:23", "upload_time_iso_8601": "2020-04-27T17:21:23.662818Z", "url": "https://files.pythonhosted.org/packages/fa/ec/347f7b2d4307b1513f76c10ea20665cb677f02ddec88c39d8da21a80b337/napari_plugin_engine-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a798083d30d86e0b38b6decf284b8dff", "sha256": "60da74d55be0c115c689d37f2ac4143bc1529e0810362e0f22149f3aeb39dba2"}, "downloads": -1, "filename": "napari-plugin-engine-0.1.4.tar.gz", "has_sig": false, "md5_digest": "a798083d30d86e0b38b6decf284b8dff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.*", "size": 58265, "upload_time": "2020-04-27T17:21:24", "upload_time_iso_8601": "2020-04-27T17:21:24.815573Z", "url": "https://files.pythonhosted.org/packages/33/0d/8befd3e0704b02156666a96ec780a8eaf60378370bd28f28d0143799e4fb/napari-plugin-engine-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "feed356a0919e43e66fd0d0acd1cf653", "sha256": "a9b4f5558e4ea4cf6d3d6eb7f6afacb7a6cbbc8a7bc69b7b97d8bb0ca3fea14d"}, "downloads": -1, "filename": "napari_plugin_engine-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "feed356a0919e43e66fd0d0acd1cf653", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.*", "size": 35450, "upload_time": "2020-05-07T15:51:12", "upload_time_iso_8601": "2020-05-07T15:51:12.170059Z", "url": "https://files.pythonhosted.org/packages/ac/6c/948edeeeeec62971d68a11c7fd68ab6fa9d9fc6d7bf74089328a25c35761/napari_plugin_engine-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4342dc79a850f4cd9df9662a4e03aadb", "sha256": "7f53434753fb0726981c818af11fc2f71907371d348b8a87ce8fc0feeda68f76"}, "downloads": -1, "filename": "napari-plugin-engine-0.1.5.tar.gz", "has_sig": false, "md5_digest": "4342dc79a850f4cd9df9662a4e03aadb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.*", "size": 59639, "upload_time": "2020-05-07T15:51:13", "upload_time_iso_8601": "2020-05-07T15:51:13.068681Z", "url": "https://files.pythonhosted.org/packages/8e/b9/da43fcce7db6d5a998b6a9c9dd455d18748903c3c50f51846a778b380415/napari-plugin-engine-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "feed356a0919e43e66fd0d0acd1cf653", "sha256": "a9b4f5558e4ea4cf6d3d6eb7f6afacb7a6cbbc8a7bc69b7b97d8bb0ca3fea14d"}, "downloads": -1, "filename": "napari_plugin_engine-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "feed356a0919e43e66fd0d0acd1cf653", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.*", "size": 35450, "upload_time": "2020-05-07T15:51:12", "upload_time_iso_8601": "2020-05-07T15:51:12.170059Z", "url": "https://files.pythonhosted.org/packages/ac/6c/948edeeeeec62971d68a11c7fd68ab6fa9d9fc6d7bf74089328a25c35761/napari_plugin_engine-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4342dc79a850f4cd9df9662a4e03aadb", "sha256": "7f53434753fb0726981c818af11fc2f71907371d348b8a87ce8fc0feeda68f76"}, "downloads": -1, "filename": "napari-plugin-engine-0.1.5.tar.gz", "has_sig": false, "md5_digest": "4342dc79a850f4cd9df9662a4e03aadb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.*", "size": 59639, "upload_time": "2020-05-07T15:51:13", "upload_time_iso_8601": "2020-05-07T15:51:13.068681Z", "url": "https://files.pythonhosted.org/packages/8e/b9/da43fcce7db6d5a998b6a9c9dd455d18748903c3c50f51846a778b380415/napari-plugin-engine-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:31 2020"}