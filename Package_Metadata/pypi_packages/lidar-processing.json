{"info": {"author": "Ioannis Binietoglou", "author_email": "ioannis@inoe.ro", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Topic :: Scientific/Engineering :: Atmospheric Science"], "description": ".. image:: https://readthedocs.org/projects/lidar-processing/badge/?version=latest\n   :target: http://lidar-processing.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n.. image:: https://codeship.com/projects/2e21b760-6eaf-0134-9495-3e75f4fffff1/status?branch=default\n   :target: https://codeship.com/projects/177870\n   :alt: Build Status\n\nDescription\n===========\n\nThis module collects basic processing routines for aerosol lidar systems.\n\nThe module should include only the pre-processing and optical processing functions. Reading data, visualization, etc.\nshould be handled by different modules.\n\n\n\nInstallation\n------------\n\nThe module is tested for Python 2.7.* and slightly for Python 3.6\n\nThe suggested method to install is to clone the repository and install it using the -e command.\n\n.. sourcecode:: console\n\n   pip install -e ./lidar_processing\n\nassuming that the module is cloned in the lidar_processing directory.\n\nThe installation procedure is not yet fully automatic. You may need to install numpy, scipy manually. Probably\nthe best way to install numpy and scipy is through a distribution like `anaconda <https://www.continuum.io/downloads>`_.\n\nYou will also need to install the `lidar_molecular <https://bitbucket.org/iannis_b/lidar_molecular>`_ module. You\ncan do this by\n\n.. sourcecode:: console\n\n   pip install -r requirements.txt\n\nWhen this and the *molecular* modules mature, we should optimize the installation procedure.\n\n\nDocumentation\n-------------\n\nEach function should be documented following the Numpy doc style.\n\nFor details see the `numpy documentation <https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt>`_.\n\n\nAll docstrings are collected to a single documentation file using the `Sphinx <http://www.sphinx-doc.org/>`_ module.\nThe documentation is located in the docs/ folder. The documentation is written in\n`restructured text <http://www.sphinx-doc.org/en/stable/rest.html>`_ format.\n\nYou can rebuild the docs by running the following command from the docs folder.\n\n.. sourcecode:: console\n\n   make html\n\nThe documentation is also built automatically every time you push your changes to the repository. You can find it online\nin `Read the docs <https://readthedocs.org/projects/lidar-processing/>`_.\n\n\nTesting\n-------\nSome tests, based on unittest2 library, are located in the lidar_processing/tests/ folder.\n\nYou can run all the test using the commands from the project directory.\n\n.. sourcecode:: console\n\n   python -m unittest discover\n\n\nNotebooks and data\n------------------\nThe project includes some test data in the /data/ folder. It also includes some ipython notebooks with some\nexample processing of the data. You can run the notebook with the command:\n\n.. sourcecode:: console\n\n   ipython notebook\n\n\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/iannis_b/lidar_processing/", "keywords": "lidar aerosol processing", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lidar-processing", "package_url": "https://pypi.org/project/lidar-processing/", "platform": "", "project_url": "https://pypi.org/project/lidar-processing/", "project_urls": {"Homepage": "https://bitbucket.org/iannis_b/lidar_processing/"}, "release_url": "https://pypi.org/project/lidar-processing/0.2.2/", "requires_dist": ["netCDF4", "numpy", "matplotlib", "scipy", "sphinx", "numpydoc", "pyyaml"], "requires_python": "", "summary": "Routines for atmospheric lidar processing.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://lidar-processing.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ece4cc7816fd22f8eb0ed23f0deba4dd412fa24/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6c696461722d70726f63657373696e672f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codeship.com/projects/177870\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb7789d2668ab05aa124988843afed150cc816c6/68747470733a2f2f636f6465736869702e636f6d2f70726f6a656374732f32653231623736302d366561662d303133342d393439352d3365373566346666666666312f7374617475733f6272616e63683d64656661756c74\"></a>\n<div id=\"description\">\n<h2>Description</h2>\n<p>This module collects basic processing routines for aerosol lidar systems.</p>\n<p>The module should include only the pre-processing and optical processing functions. Reading data, visualization, etc.\nshould be handled by different modules.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>The module is tested for Python 2.7.* and slightly for Python 3.6</p>\n<p>The suggested method to install is to clone the repository and install it using the -e command.</p>\n<pre><span class=\"go\">pip install -e ./lidar_processing</span>\n</pre>\n<p>assuming that the module is cloned in the lidar_processing directory.</p>\n<p>The installation procedure is not yet fully automatic. You may need to install numpy, scipy manually. Probably\nthe best way to install numpy and scipy is through a distribution like <a href=\"https://www.continuum.io/downloads\" rel=\"nofollow\">anaconda</a>.</p>\n<p>You will also need to install the <a href=\"https://bitbucket.org/iannis_b/lidar_molecular\" rel=\"nofollow\">lidar_molecular</a> module. You\ncan do this by</p>\n<pre><span class=\"go\">pip install -r requirements.txt</span>\n</pre>\n<p>When this and the <em>molecular</em> modules mature, we should optimize the installation procedure.</p>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>Each function should be documented following the Numpy doc style.</p>\n<p>For details see the <a href=\"https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\" rel=\"nofollow\">numpy documentation</a>.</p>\n<p>All docstrings are collected to a single documentation file using the <a href=\"http://www.sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a> module.\nThe documentation is located in the docs/ folder. The documentation is written in\n<a href=\"http://www.sphinx-doc.org/en/stable/rest.html\" rel=\"nofollow\">restructured text</a> format.</p>\n<p>You can rebuild the docs by running the following command from the docs folder.</p>\n<pre><span class=\"go\">make html</span>\n</pre>\n<p>The documentation is also built automatically every time you push your changes to the repository. You can find it online\nin <a href=\"https://readthedocs.org/projects/lidar-processing/\" rel=\"nofollow\">Read the docs</a>.</p>\n</div>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p>Some tests, based on unittest2 library, are located in the lidar_processing/tests/ folder.</p>\n<p>You can run all the test using the commands from the project directory.</p>\n<pre><span class=\"go\">python -m unittest discover</span>\n</pre>\n</div>\n<div id=\"notebooks-and-data\">\n<h3>Notebooks and data</h3>\n<p>The project includes some test data in the /data/ folder. It also includes some ipython notebooks with some\nexample processing of the data. You can run the notebook with the command:</p>\n<pre><span class=\"go\">ipython notebook</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5540060, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "1629d3e7f3d9b1be4f3feea8b547c788", "sha256": "fb2d52547ecbe67bead56bcd122175b9247b1088556a3125bc14a6f2d9859570"}, "downloads": -1, "filename": "lidar_processing-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "1629d3e7f3d9b1be4f3feea8b547c788", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 31104, "upload_time": "2019-07-05T12:30:41", "upload_time_iso_8601": "2019-07-05T12:30:41.437497Z", "url": "https://files.pythonhosted.org/packages/c9/4e/4a6ed599ec8023ce83e8d53c9ebc6d3fa7ebca295cde3c81d277133877b2/lidar_processing-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bc5c41e441d5e5b1426a4ac4840d6d4", "sha256": "3a33b711ac634b87933c6a4f4b816795df04479740edd6b7069470a5eda98619"}, "downloads": -1, "filename": "lidar_processing-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9bc5c41e441d5e5b1426a4ac4840d6d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23990, "upload_time": "2019-07-05T12:30:44", "upload_time_iso_8601": "2019-07-05T12:30:44.045080Z", "url": "https://files.pythonhosted.org/packages/d3/37/01d292e9e82da7e9462f3acb2862c59f1451de0639396d056076547ed86d/lidar_processing-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "72089a44fe85d1813ad324b3b8e82af7", "sha256": "c74eb91c7036b5696b963613898b0f0ad441dfc2d8eaca4b56338f7bbf876d52"}, "downloads": -1, "filename": "lidar_processing-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "72089a44fe85d1813ad324b3b8e82af7", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 31061, "upload_time": "2019-07-05T13:34:26", "upload_time_iso_8601": "2019-07-05T13:34:26.009244Z", "url": "https://files.pythonhosted.org/packages/c3/6e/48267563d55335fbd376ef15b30506bcd93b0c838843658d5effd7aa531d/lidar_processing-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90e26680950381a85ada0825000e99b9", "sha256": "0142c14ffe22e91a8cc6fa98e3a95cb337df125edf86785c94f89459fdc47431"}, "downloads": -1, "filename": "lidar_processing-0.2.1.tar.gz", "has_sig": false, "md5_digest": "90e26680950381a85ada0825000e99b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23940, "upload_time": "2019-07-05T13:34:27", "upload_time_iso_8601": "2019-07-05T13:34:27.935029Z", "url": "https://files.pythonhosted.org/packages/68/13/293df809707f3a6082fe1e28ed15cdea96d7e0e90729f575337bbecb6977/lidar_processing-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "d98f5c3c8593cf2ac2dc4546376d3892", "sha256": "f0ed68a67407099bea711c12783686a61c656d509e377bc5ce548e7b71770c06"}, "downloads": -1, "filename": "lidar_processing-0.2.2-py2-none-any.whl", "has_sig": false, "md5_digest": "d98f5c3c8593cf2ac2dc4546376d3892", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 31863, "upload_time": "2019-07-16T11:40:07", "upload_time_iso_8601": "2019-07-16T11:40:07.846881Z", "url": "https://files.pythonhosted.org/packages/e3/8d/e13ee83e594a50db0479b8a9ec26a2e813a6b0a2193382593a1a6d554617/lidar_processing-0.2.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "042c900a026d834b30d60b133657754c", "sha256": "e0a1897bd0e26e0b826566acde9311aab1b2fa610292397da312d5c70d3de773"}, "downloads": -1, "filename": "lidar_processing-0.2.2.tar.gz", "has_sig": false, "md5_digest": "042c900a026d834b30d60b133657754c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24755, "upload_time": "2019-07-16T11:40:09", "upload_time_iso_8601": "2019-07-16T11:40:09.233096Z", "url": "https://files.pythonhosted.org/packages/2f/ab/3e2a940ed763033af95a3220b045ddfd92703d437fc46def437e89cf0b66/lidar_processing-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d98f5c3c8593cf2ac2dc4546376d3892", "sha256": "f0ed68a67407099bea711c12783686a61c656d509e377bc5ce548e7b71770c06"}, "downloads": -1, "filename": "lidar_processing-0.2.2-py2-none-any.whl", "has_sig": false, "md5_digest": "d98f5c3c8593cf2ac2dc4546376d3892", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 31863, "upload_time": "2019-07-16T11:40:07", "upload_time_iso_8601": "2019-07-16T11:40:07.846881Z", "url": "https://files.pythonhosted.org/packages/e3/8d/e13ee83e594a50db0479b8a9ec26a2e813a6b0a2193382593a1a6d554617/lidar_processing-0.2.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "042c900a026d834b30d60b133657754c", "sha256": "e0a1897bd0e26e0b826566acde9311aab1b2fa610292397da312d5c70d3de773"}, "downloads": -1, "filename": "lidar_processing-0.2.2.tar.gz", "has_sig": false, "md5_digest": "042c900a026d834b30d60b133657754c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24755, "upload_time": "2019-07-16T11:40:09", "upload_time_iso_8601": "2019-07-16T11:40:09.233096Z", "url": "https://files.pythonhosted.org/packages/2f/ab/3e2a940ed763033af95a3220b045ddfd92703d437fc46def437e89cf0b66/lidar_processing-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:09 2020"}