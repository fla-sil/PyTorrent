{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "To quote Richard Stallman, lo these many years ago, \"What you see is what you get\" == \"\"What you see is all there is!\".\nThis plugin does not replace the standard CMS text plugin, it is a new plugin class, Markdown.\n\nHome-page: https://github.com/bobhy/cmsplugin-markdownx\nAuthor: Bob Hyman\nAuthor-email: bob.hyman@bobssoftwareworks.com\nLicense: MIT License\nDescription: Shims the estimable [django-markdownx](https://github.com/adi-/django-markdownx) into the venerable [django-cms](https://github.com/divio/django-cms).\n        Provides a `Markdown` plugin for Django-cms which stores content in markdown but displays as HTML.\n        We consider it an advantage that the rendering is all done server-side, \n        that ensures the editing preview looks\n        just like the final result in case we do preprocessing enhancements for the markdown dialect.\n        \n        \n        * [Quick Start](#quick-start)\n        * [Usage](#usage)\n        * [Customization](#customization)\n        * [Dependencies](#dependencies)\n        * [License](#license)\n        * [Changelog](#changelog)\n        \n        \n        # Quick Start\n        \n        1. Install prerequisites, then `cmsmarkdown-markdownx` package.\n        \n            ```bash\n            pip install django-markdownx\n            pip install cmsmarkdown-markdownx\n        \n        1. Add `cmsplugin_markdownx` to your `INSTALLED_APPS`.\n        \n            ```python\n            #settings.py\n            INSTALLED_APPS = (\n                ...\n                'markdownx',\n                'cmsplugin_markdownx',\n            )\n            ```\n        \n        1. Refer to [#customization] for additional settings you probably want to use.\n        \n        1. Add django-markdownx`s urls: (*not* in `il8n_patterns()`)\n        \n           ```python\n           #urls.py\n           urlpatterns = [\n           [...]\n           url(r'^markdownx/', include('markdownx.urls')),\n           ]```\n        \n        1. Collect included templates and statics to your `STATIC_ROOT` folder.\n        \n            ```bash\n            python manage.py collectstatic\n            ```\n        \n        # Usage\n        \n        1. in CMS, edit a page with a placeholder.\n        1. Add a `Markdown` plugin\n        1. As you type, the preview window is updated (thank you @django-markdownx)\n        \n        From the 'frontend' view, you can update the plugin content.\n        \n        1. Be sure you're logged into CMS, with adequate privilees.\n        1. Browse to a page containing Markdown\n        1. Double-click on the section of the page containing the Markdown plugin.\n        \n        \n        # Customization\n        \n        ## Settings\n        \n        Place settings in your `settings.py` to override default values:\n        \n        ```python\n        #settings.py\n        \n        ## for django-markdownx (see https://github.com/adi-/django-markdownx#customization)\n        \n        # Markdownify\n        MARKDOWNX_MARKDOWNIFY_FUNCTION = 'markdownx.utils.markdownify'\n        \n        # Markdown extensions\n        MARKDOWNX_MARKDOWN_EXTENSIONS = [\n            'markdown.extensions.extra',\n            'markdown.extensions.codehilite',       ## wants Pygments\n        ]\n        \n        # specify the code highlighting stylesheet used by `markdown.extensions.codehilite`\n        CMSPLUGIN_MARKDOWNX_CODEHILITE_CSS = 'cmsplugin_markdownx/codehilite_colorful.css'\n        ```\n        \n        ## Template Tags\n        \n        If you want to design your own template to display rendered HTML from Markdown text, you need to do 2 things:\n        \n        1. Include the CMSPLUGIN_MARKDOWNX_CODEHILITE_CSS stylesheet in the CSS section of the page header.\n        1. Run the markdown text from some instance of the Markdown plugin through the MARKDOWNX_MARKDOWNIFY_FUNCTION you configured for `django-markdownx'\n        \n        In order to do any or all of the above, you must load the template tags first.\n        \n        ```html+django\n        {% load cmsplugin_markdownx %}\n        ```\n        \n        ### Custom tag `{% get_settings _settingsVariable_ default=None %}`\n        This tag extracts the value of _settingsVariable_ from your site `settings.py`.  You can specify the default value to use if it is not defined.\n        \n        This tag is not dependent on markdown processing, it can be used in other apps and projects.\n        \n        ### Filter `{{ ... |markdownify }}`\n        Converts the markdown text provided by its left-hand argument into HTML using `django-markdownx`'s `MARKDOWNX_MARKDOWNIFY_FUNCTION`\n        \n        The HTML blob itself does not have a `<div`> wrapper, leaving you free to style one in the template.\n        \n        ### Example\n        \n        ```html_django\n        {% load static sekizai_tags cmsplugin_markdownx %}\n        {% get_setting \"CMSPLUGIN_MARKDOWNX_CODEHILITE_CSS\" as codehilite_css  %}\n        {% if codehilite_css %}\n        {% addtoblock \"css\" %}\n        <link rel=\"stylesheet\" href=\"{% static codehilite_css %}\"/>\n        {% endaddtoblock %}\n        {% endif %}\n        \n        <div>{{ instance.markdown_text|markdownify }}</div>\n        ```\n        \n        # Dependencies\n        \n        * Markdown\n        * Pillow\n        * Django\n        * jQuery\n        \n        \n        # License\n        \n        cmsplugin-markdown is licensed under the MIT open source license. Read `LICENSE` file for details.\n        \n        # Changelog\n        \n        | version | date | notes |\n        | :---------: | :-------: | -------------------------- |\n        | 0.1 | Jan 29, 2017 | Initial release |\n        \n        \n        \n        \nKeywords: django,django-cms,plugin,markdown,editor\nPlatform: OS Independent\nClassifier: Development Status :: 4 - Beta\nClassifier: Environment :: Web Environment \nClassifier: Framework :: Django \nClassifier: Framework :: Django :: 1.10 \nClassifier: Framework :: Django :: 1.9 \nClassifier: Intended Audience :: Developers \nClassifier: License :: OSI Approved :: MIT License\nClassifier: Operating System :: OS Independent \nClassifier: Programming Language :: Python \nClassifier: Programming Language :: Python :: 3.3 \nClassifier: Programming Language :: Python :: 3.4 \nClassifier: Programming Language :: Python :: 3.5 \nClassifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content \nClassifier: Topic :: Software Development \nClassifier: Topic :: Software Development :: Libraries :: Application Frameworks \nClassifier: Topic :: Text Processing :: Markup\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cmsplugin-markdownx", "package_url": "https://pypi.org/project/cmsplugin-markdownx/", "platform": "", "project_url": "https://pypi.org/project/cmsplugin-markdownx/", "project_urls": null, "release_url": "https://pypi.org/project/cmsplugin-markdownx/0.1.3/", "requires_dist": ["Django (>1.8,<1.11)", "Markdown (<2.6.8)", "Pygments (>2.0)", "django-cms (<=3.4.2)", "django-markdownx (<1.7.2)"], "requires_python": "", "summary": "A plugin for django-cms that wraps django-markdownx, enabling WYSIWYG editing of markdown fields.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            To quote Richard Stallman, lo these many years ago, \"What you see is what you get\" == \"\"What you see is all there is!\".<br>This plugin does not replace the standard CMS text plugin, it is a new plugin class, Markdown.<br><br>Home-page: https://github.com/bobhy/cmsplugin-markdownx<br>Author: Bob Hyman<br>Author-email: bob.hyman@bobssoftwareworks.com<br>License: MIT License<br>Description: Shims the estimable [django-markdownx](https://github.com/adi-/django-markdownx) into the venerable [django-cms](https://github.com/divio/django-cms).<br>        Provides a `Markdown` plugin for Django-cms which stores content in markdown but displays as HTML.<br>        We consider it an advantage that the rendering is all done server-side, <br>        that ensures the editing preview looks<br>        just like the final result in case we do preprocessing enhancements for the markdown dialect.<br>        <br>        <br>        * [Quick Start](#quick-start)<br>        * [Usage](#usage)<br>        * [Customization](#customization)<br>        * [Dependencies](#dependencies)<br>        * [License](#license)<br>        * [Changelog](#changelog)<br>        <br>        <br>        # Quick Start<br>        <br>        1. Install prerequisites, then `cmsmarkdown-markdownx` package.<br>        <br>            ```bash<br>            pip install django-markdownx<br>            pip install cmsmarkdown-markdownx<br>        <br>        1. Add `cmsplugin_markdownx` to your `INSTALLED_APPS`.<br>        <br>            ```python<br>            #settings.py<br>            INSTALLED_APPS = (<br>                ...<br>                'markdownx',<br>                'cmsplugin_markdownx',<br>            )<br>            ```<br>        <br>        1. Refer to [#customization] for additional settings you probably want to use.<br>        <br>        1. Add django-markdownx`s urls: (*not* in `il8n_patterns()`)<br>        <br>           ```python<br>           #urls.py<br>           urlpatterns = [<br>           [...]<br>           url(r'^markdownx/', include('markdownx.urls')),<br>           ]```<br>        <br>        1. Collect included templates and statics to your `STATIC_ROOT` folder.<br>        <br>            ```bash<br>            python manage.py collectstatic<br>            ```<br>        <br>        # Usage<br>        <br>        1. in CMS, edit a page with a placeholder.<br>        1. Add a `Markdown` plugin<br>        1. As you type, the preview window is updated (thank you @django-markdownx)<br>        <br>        From the 'frontend' view, you can update the plugin content.<br>        <br>        1. Be sure you're logged into CMS, with adequate privilees.<br>        1. Browse to a page containing Markdown<br>        1. Double-click on the section of the page containing the Markdown plugin.<br>        <br>        <br>        # Customization<br>        <br>        ## Settings<br>        <br>        Place settings in your `settings.py` to override default values:<br>        <br>        ```python<br>        #settings.py<br>        <br>        ## for django-markdownx (see https://github.com/adi-/django-markdownx#customization)<br>        <br>        # Markdownify<br>        MARKDOWNX_MARKDOWNIFY_FUNCTION = 'markdownx.utils.markdownify'<br>        <br>        # Markdown extensions<br>        MARKDOWNX_MARKDOWN_EXTENSIONS = [<br>            'markdown.extensions.extra',<br>            'markdown.extensions.codehilite',       ## wants Pygments<br>        ]<br>        <br>        # specify the code highlighting stylesheet used by `markdown.extensions.codehilite`<br>        CMSPLUGIN_MARKDOWNX_CODEHILITE_CSS = 'cmsplugin_markdownx/codehilite_colorful.css'<br>        ```<br>        <br>        ## Template Tags<br>        <br>        If you want to design your own template to display rendered HTML from Markdown text, you need to do 2 things:<br>        <br>        1. Include the CMSPLUGIN_MARKDOWNX_CODEHILITE_CSS stylesheet in the CSS section of the page header.<br>        1. Run the markdown text from some instance of the Markdown plugin through the MARKDOWNX_MARKDOWNIFY_FUNCTION you configured for `django-markdownx'<br>        <br>        In order to do any or all of the above, you must load the template tags first.<br>        <br>        ```html+django<br>        {% load cmsplugin_markdownx %}<br>        ```<br>        <br>        ### Custom tag `{% get_settings _settingsVariable_ default=None %}`<br>        This tag extracts the value of _settingsVariable_ from your site `settings.py`.  You can specify the default value to use if it is not defined.<br>        <br>        This tag is not dependent on markdown processing, it can be used in other apps and projects.<br>        <br>        ### Filter `{{ ... |markdownify }}`<br>        Converts the markdown text provided by its left-hand argument into HTML using `django-markdownx`'s `MARKDOWNX_MARKDOWNIFY_FUNCTION`<br>        <br>        The HTML blob itself does not have a `&lt;div`&gt; wrapper, leaving you free to style one in the template.<br>        <br>        ### Example<br>        <br>        ```html_django<br>        {% load static sekizai_tags cmsplugin_markdownx %}<br>        {% get_setting \"CMSPLUGIN_MARKDOWNX_CODEHILITE_CSS\" as codehilite_css  %}<br>        {% if codehilite_css %}<br>        {% addtoblock \"css\" %}<br>        &lt;link rel=\"stylesheet\" href=\"{% static codehilite_css %}\"/&gt;<br>        {% endaddtoblock %}<br>        {% endif %}<br>        <br>        &lt;div&gt;{{ instance.markdown_text|markdownify }}&lt;/div&gt;<br>        ```<br>        <br>        # Dependencies<br>        <br>        * Markdown<br>        * Pillow<br>        * Django<br>        * jQuery<br>        <br>        <br>        # License<br>        <br>        cmsplugin-markdown is licensed under the MIT open source license. Read `LICENSE` file for details.<br>        <br>        # Changelog<br>        <br>        | version | date | notes |<br>        | :---------: | :-------: | -------------------------- |<br>        | 0.1 | Jan 29, 2017 | Initial release |<br>        <br>        <br>        <br>        <br>Keywords: django,django-cms,plugin,markdown,editor<br>Platform: OS Independent<br>Classifier: Development Status :: 4 - Beta<br>Classifier: Environment :: Web Environment <br>Classifier: Framework :: Django <br>Classifier: Framework :: Django :: 1.10 <br>Classifier: Framework :: Django :: 1.9 <br>Classifier: Intended Audience :: Developers <br>Classifier: License :: OSI Approved :: MIT License<br>Classifier: Operating System :: OS Independent <br>Classifier: Programming Language :: Python <br>Classifier: Programming Language :: Python :: 3.3 <br>Classifier: Programming Language :: Python :: 3.4 <br>Classifier: Programming Language :: Python :: 3.5 <br>Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content <br>Classifier: Topic :: Software Development <br>Classifier: Topic :: Software Development :: Libraries :: Application Frameworks <br>Classifier: Topic :: Text Processing :: Markup<br>\n          </div>"}, "last_serial": 2618510, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "51157be7e91ce16f0bddb33bc46f7aa5", "sha256": "666950ea386aa0d48ba3710d396cd14391b498eecd5ef250c40b9787779b1bbd"}, "downloads": -1, "filename": "cmsplugin_markdownx-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "51157be7e91ce16f0bddb33bc46f7aa5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12665, "upload_time": "2017-01-30T02:23:17", "upload_time_iso_8601": "2017-01-30T02:23:17.165488Z", "url": "https://files.pythonhosted.org/packages/dd/66/a34a3cf067973561fc52a5706799a787695e3d3676d15ddb8526f59ba81c/cmsplugin_markdownx-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8f1097c108fd79ccb3368bc2da5e840", "sha256": "e7832a7db8cf8e9b498137d4d71bd81c51b0929988c14bcff19ef5f2189e49e5"}, "downloads": -1, "filename": "cmsplugin-markdownx-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a8f1097c108fd79ccb3368bc2da5e840", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8085, "upload_time": "2017-01-30T02:23:19", "upload_time_iso_8601": "2017-01-30T02:23:19.131964Z", "url": "https://files.pythonhosted.org/packages/79/f5/2fe4ee1c37e54b6ccb9d87c1c2b00bb524ad5563ca35d31c957d3a89da37/cmsplugin-markdownx-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "cbde1d887bbea8a1263eceb909821044", "sha256": "4a34f6aba4569982a1f00a91dbd74b890fa84d2c5355dd7fd6827238282faa13"}, "downloads": -1, "filename": "cmsplugin-markdownx-0.1.3.tar.gz", "has_sig": false, "md5_digest": "cbde1d887bbea8a1263eceb909821044", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8208, "upload_time": "2017-02-04T03:21:06", "upload_time_iso_8601": "2017-02-04T03:21:06.271676Z", "url": "https://files.pythonhosted.org/packages/d8/7e/4079c0e24e4f91587d361805e9b8f534ced25e6fcd1e22dc682e0e474dcc/cmsplugin-markdownx-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cbde1d887bbea8a1263eceb909821044", "sha256": "4a34f6aba4569982a1f00a91dbd74b890fa84d2c5355dd7fd6827238282faa13"}, "downloads": -1, "filename": "cmsplugin-markdownx-0.1.3.tar.gz", "has_sig": false, "md5_digest": "cbde1d887bbea8a1263eceb909821044", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8208, "upload_time": "2017-02-04T03:21:06", "upload_time_iso_8601": "2017-02-04T03:21:06.271676Z", "url": "https://files.pythonhosted.org/packages/d8/7e/4079c0e24e4f91587d361805e9b8f534ced25e6fcd1e22dc682e0e474dcc/cmsplugin-markdownx-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:31 2020"}