{"info": {"author": "brentp", "author_email": "bpederse@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "Skid Marks: Check for runs in sequences\n---------------------------------------\n\n  Q: how do you check for runs?\n\n  A: look for skidmarks.\n\nThis module implements some functions to check a sequence for randomness.\nin some cases, it is assumed to be a binary sequence (not only 1's and 0's\nbut containing only 2 distinct values).\nAny feedback, improvements, additions are welcomed.\n\n    >>> from skidmarks import gap_test, wald_wolfowitz, auto_correlation, serial_test\n\n\nWald-Wolfowitz\n--------------\n\nhttp://en.wikipedia.org/wiki/Wald-Wolfowitz\\_runs\\_test\n\nhttp://support.sas.com/kb/33/092.html\n\n    >>> r = wald_wolfowitz('1000001')\n    >>> r['n_runs'] # should be 3, because 1, 0, 1\n    3\n\n    >>> r['p'] < 0.05 # not < 0.05 evidence to reject Ho of random sequence\n    False\n\nthis should show significance for non-randomness\n\n    >>> li = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]\n    >>> wald_wolfowitz(li)['p'] < 0.05\n    True\n\n\n\nAutocorrelation\n---------------\n\n    >>> result = auto_correlation('00000001111111111100000000')\n    >>> result['p'] < 0.05\n    True\n\n    >>> result['auto_correlation']\n    0.83766233766233755\n\n\nSerial Test\n-----------\n\nhttp://books.google.com/books?id=EIbxfCGfzgcC&lpg=PA141&ots=o-8ymmqbs9&pg=PA142#v=onepage&q=&f=false\n\n    >>> serial_test('101010101111000')\n    {'chi': 1.4285714285714286, 'p': 0.69885130769248427}\n\n    >>> serial_test('110000000000000111111111111')\n    {'chi': 18.615384615384617, 'p': 0.00032831021826061683}\n\n\nGap Test\n--------\n\nhttp://books.google.com/books?id=EIbxfCGfzgcC&lpg=PA141&ots=o-8ymmqbs9&pg=PA142#v=onepage&q=&f=false\n\n    >>> gap_test('100020001200000')\n    {'chi': 756406.99909855379, 'item': '1', 'p': 0.0}\n\n    >>> gap_test('101010111101000')\n    {'chi': 11.684911193438811, 'item': '1', 'p': 0.23166089118674466}\n\ngap\\_test() will default to looking for gaps between the first value in\nthe sequence (in this case '1') and each later occurrence. use the `item`\nkwarg to specify another value.\n\n    >>> gap_test('101010111101000', item='0')\n    {'chi': 11.028667632612191, 'item': '0', 'p': 0.27374903509732523}", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/brentp/skidmarks/", "keywords": "bioinformatics sequence randomness test", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "skidmarks", "package_url": "https://pypi.org/project/skidmarks/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/skidmarks/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/brentp/skidmarks/"}, "release_url": "https://pypi.org/project/skidmarks/0.0.6/", "requires_dist": null, "requires_python": null, "summary": "find runs (non-randomness) in sequences", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"skid-marks-check-for-runs-in-sequences\">\n<h2>Skid Marks: Check for runs in sequences</h2>\n<blockquote>\n<p>Q: how do you check for runs?</p>\n<p>A: look for skidmarks.</p>\n</blockquote>\n<p>This module implements some functions to check a sequence for randomness.\nin some cases, it is assumed to be a binary sequence (not only 1\u2019s and 0\u2019s\nbut containing only 2 distinct values).\nAny feedback, improvements, additions are welcomed.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from skidmarks import gap_test, wald_wolfowitz, auto_correlation, serial_test\n</pre>\n</blockquote>\n</div>\n<div id=\"wald-wolfowitz\">\n<h2>Wald-Wolfowitz</h2>\n<p><a href=\"http://en.wikipedia.org/wiki/Wald-Wolfowitz_runs_test\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Wald-Wolfowitz_runs_test</a></p>\n<p><a href=\"http://support.sas.com/kb/33/092.html\" rel=\"nofollow\">http://support.sas.com/kb/33/092.html</a></p>\n<blockquote>\n<pre>&gt;&gt;&gt; r = wald_wolfowitz('1000001')\n&gt;&gt;&gt; r['n_runs'] # should be 3, because 1, 0, 1\n3\n</pre>\n<pre>&gt;&gt;&gt; r['p'] &lt; 0.05 # not &lt; 0.05 evidence to reject Ho of random sequence\nFalse\n</pre>\n</blockquote>\n<p>this should show significance for non-randomness</p>\n<blockquote>\n<pre>&gt;&gt;&gt; li = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]\n&gt;&gt;&gt; wald_wolfowitz(li)['p'] &lt; 0.05\nTrue\n</pre>\n</blockquote>\n</div>\n<div id=\"autocorrelation\">\n<h2>Autocorrelation</h2>\n<blockquote>\n<pre>&gt;&gt;&gt; result = auto_correlation('00000001111111111100000000')\n&gt;&gt;&gt; result['p'] &lt; 0.05\nTrue\n</pre>\n<pre>&gt;&gt;&gt; result['auto_correlation']\n0.83766233766233755\n</pre>\n</blockquote>\n</div>\n<div id=\"serial-test\">\n<h2>Serial Test</h2>\n<p><a href=\"http://books.google.com/books?id=EIbxfCGfzgcC&amp;lpg=PA141&amp;ots=o-8ymmqbs9&amp;pg=PA142#v=onepage&amp;q=&amp;f=false\" rel=\"nofollow\">http://books.google.com/books?id=EIbxfCGfzgcC&amp;lpg=PA141&amp;ots=o-8ymmqbs9&amp;pg=PA142#v=onepage&amp;q=&amp;f=false</a></p>\n<blockquote>\n<pre>&gt;&gt;&gt; serial_test('101010101111000')\n{'chi': 1.4285714285714286, 'p': 0.69885130769248427}\n</pre>\n<pre>&gt;&gt;&gt; serial_test('110000000000000111111111111')\n{'chi': 18.615384615384617, 'p': 0.00032831021826061683}\n</pre>\n</blockquote>\n</div>\n<div id=\"gap-test\">\n<h2>Gap Test</h2>\n<p><a href=\"http://books.google.com/books?id=EIbxfCGfzgcC&amp;lpg=PA141&amp;ots=o-8ymmqbs9&amp;pg=PA142#v=onepage&amp;q=&amp;f=false\" rel=\"nofollow\">http://books.google.com/books?id=EIbxfCGfzgcC&amp;lpg=PA141&amp;ots=o-8ymmqbs9&amp;pg=PA142#v=onepage&amp;q=&amp;f=false</a></p>\n<blockquote>\n<pre>&gt;&gt;&gt; gap_test('100020001200000')\n{'chi': 756406.99909855379, 'item': '1', 'p': 0.0}\n</pre>\n<pre>&gt;&gt;&gt; gap_test('101010111101000')\n{'chi': 11.684911193438811, 'item': '1', 'p': 0.23166089118674466}\n</pre>\n</blockquote>\n<p>gap_test() will default to looking for gaps between the first value in\nthe sequence (in this case \u20181\u2019) and each later occurrence. use the <cite>item</cite>\nkwarg to specify another value.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; gap_test('101010111101000', item='0')\n{'chi': 11.028667632612191, 'item': '0', 'p': 0.27374903509732523}\n</pre>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 1725009, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b0d0064836d6a55d5715cb9ef0792bdd", "sha256": "49268c4fa016857e1fbc9b9fcf2b36fbe2c9a87f780c4f72515773e5271ade91"}, "downloads": -1, "filename": "skidmarks-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b0d0064836d6a55d5715cb9ef0792bdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3966, "upload_time": "2009-09-29T01:29:33", "upload_time_iso_8601": "2009-09-29T01:29:33.572315Z", "url": "https://files.pythonhosted.org/packages/a1/22/b61ddc83a888dcd33bbe332ba2157a36dd95b947be35b689e4ae32a7d8d0/skidmarks-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "9e7ae237a1ea0863feb00d1c6316b35e", "sha256": "5dfa22b4e054208707f983e7b4cbcba4848df625dbad246f35b872d953ededbf"}, "downloads": -1, "filename": "skidmarks-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9e7ae237a1ea0863feb00d1c6316b35e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3999, "upload_time": "2009-09-30T01:52:26", "upload_time_iso_8601": "2009-09-30T01:52:26.381553Z", "url": "https://files.pythonhosted.org/packages/a6/49/eb76735431db7a42309a42d89ccddd9c487bd313618b104296dfc94cfc9a/skidmarks-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "6aa20b525355e95766c3a4db9711a8a1", "sha256": "5cde348bda677fc97997436ba51fc18f6ead1b7d3a741375714530718bdc19ec"}, "downloads": -1, "filename": "skidmarks-0.0.3.tar.gz", "has_sig": false, "md5_digest": "6aa20b525355e95766c3a4db9711a8a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3927, "upload_time": "2009-10-14T00:32:34", "upload_time_iso_8601": "2009-10-14T00:32:34.653095Z", "url": "https://files.pythonhosted.org/packages/14/36/aba89f08fd5843b8cbcc2f56f471b2963292de78cc838dfe34ee4f639999/skidmarks-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "f7ebfda16998e9689d09e444ac38f6ad", "sha256": "e86c8b1b378418abb9b52edadc1f63946baabadea022fd52752da85fc195b8dd"}, "downloads": -1, "filename": "skidmarks-0.0.4.tar.gz", "has_sig": false, "md5_digest": "f7ebfda16998e9689d09e444ac38f6ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3948, "upload_time": "2014-12-09T16:11:45", "upload_time_iso_8601": "2014-12-09T16:11:45.825855Z", "url": "https://files.pythonhosted.org/packages/d2/86/d82e901b5b78c944d34202b14f48755192e0ff82283c869323818f6fee52/skidmarks-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "d26d2fa167a4c781d3710f88967ea9ca", "sha256": "5d48e11f63a901380ae2ed18c90584097506cbf132d7dffb6de50844520fb3b3"}, "downloads": -1, "filename": "skidmarks-0.0.5.tar.gz", "has_sig": false, "md5_digest": "d26d2fa167a4c781d3710f88967ea9ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4357, "upload_time": "2015-06-14T13:48:32", "upload_time_iso_8601": "2015-06-14T13:48:32.983563Z", "url": "https://files.pythonhosted.org/packages/3f/45/b4b24244d49821cc2547434e6994140c043d9a2a1f283dba5703906a800f/skidmarks-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "9c28bebf5dfbb98333ffbb7bf92ec448", "sha256": "cd52dbf4ba0a0a49b8ab3b693f123d42b8bf1380a5927bf4ebe650a389c68efd"}, "downloads": -1, "filename": "skidmarks-0.0.6.tar.gz", "has_sig": false, "md5_digest": "9c28bebf5dfbb98333ffbb7bf92ec448", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4390, "upload_time": "2015-09-16T12:25:47", "upload_time_iso_8601": "2015-09-16T12:25:47.737235Z", "url": "https://files.pythonhosted.org/packages/80/95/dbe4ab1a6c729428f6e015d9cef25586644b7ea96a9886fc43bd6caf038c/skidmarks-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c28bebf5dfbb98333ffbb7bf92ec448", "sha256": "cd52dbf4ba0a0a49b8ab3b693f123d42b8bf1380a5927bf4ebe650a389c68efd"}, "downloads": -1, "filename": "skidmarks-0.0.6.tar.gz", "has_sig": false, "md5_digest": "9c28bebf5dfbb98333ffbb7bf92ec448", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4390, "upload_time": "2015-09-16T12:25:47", "upload_time_iso_8601": "2015-09-16T12:25:47.737235Z", "url": "https://files.pythonhosted.org/packages/80/95/dbe4ab1a6c729428f6e015d9cef25586644b7ea96a9886fc43bd6caf038c/skidmarks-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:04 2020"}