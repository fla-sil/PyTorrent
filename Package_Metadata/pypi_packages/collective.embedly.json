{"info": {"author": "Quintagroup", "author_email": "support@quintagroup.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Plugins", "Framework :: Plone", "Framework :: Plone :: 4.1", "Framework :: Plone :: 4.2", "Framework :: Plone :: 4.3", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Multimedia", "Topic :: Multimedia :: Graphics", "Topic :: Multimedia :: Sound/Audio", "Topic :: Multimedia :: Video", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\n============\n\nThis package provides TinyMCE visual editor support for embed.ly service:\nvideos, images and other rich media can be inserted to Plone from different\nservices through one API.\n\nThe approach here is to use the Transform machinery to replace the URL with\nembed code by calling the embed.ly API.\n\nThere are more than 200 services that support embed.ly service. These are such\nvideo sharing sites as Youtube, Blip.tv, Vimeo; such audio streaming services\nas Grooveshark, SoundCloud, last.fm; such image/photo stocks as Flickr, and\nmany other: GoogleMaps, Facebook, Twitter, etc.\n\nThis product was developed by http://quintagroup.com for Plone collective,\nsponsored by Headnet ApS http://headnet.dk.\n\nUsage\n-----\n\nTo embed media from the embedly-supported external resource to Plone:\n\n* Go to the object's edit form, select some text and click\n  'Insert/Edit Embedly link' button.\n\n* In the panel add link and configure extra parameters in 'Advanced' tab.\n  Check http://embed.ly/docs/arguments for params description.\n\n* The text should now look like linked. TinyMCE makes the whole passage linked,\n  so keep in mind that the whole passage will later be substituted with\n  embedded media.\n\n* Save this page. Now when rendered, there will be \"preview\" from embed.ly\n  service inserted instead of the linked text.\n\nMore about usage at http://projects.quintagroup.com/products/wiki/collective.embedly\n\nNote\n----\n\n* collective.embedly does not fix errors in provided URLs\n\n* you can check if your URL will be transformed calling embed.ly manualy, for example:\n\n   o video URL http://www.youtube.com/watch?v=L1NPLlhFTVk\n   o you should call http://api.embed.ly/1/oembed setting 'url' parameter with your value\n   o http://api.embed.ly/1/oembed?url=http://www.youtube.com/watch?v=L1NPLlhFTVk\n   o http://api.embed.ly/1/oembed?url=http://www.youtube.com/watch?v=L1NPLlhFTVk&fromat=xml format result as xml\n\n* You can set parameters by going to the Plone control panel / Embedly settings:\n\n   o cache usage and timeout\n   o service URL verification\n   o API key\n\n* You can update the regular expression for supported services by calling\n  http://yourhost/plonesite/@@update_embedly_services\n\n* The default is to not pass along an API key, your requests to embedly will be\n  anonymous and based solely on IP address.\n\nSupported Plone Version\n-----------------------\n\n* Plone 4.x\n\nContributors\n------------\n\n* Volodymyr Cherepanyak\n* Roman Kozlovskyi\n* Serhiy Valchuk\n* Clayton Parker\n* Laurent Lasudry\n* Harald Friessnegger\n\nChangelog\n=========\n\n2.4 - May 6, 2015\n-----------------\n\n- Internationalization added\n  [lepri]\n\n- add url of document that caused embedly error in the error log\n  (this fixes #12) [fRiSi]\n\n- Add rel=0 setting to not show related videos in\n  youtube embeds.\n  [fRiSi]\n\n- Add German translations. [fRiSi]\n\n2.3 - Jan 29, 2014\n------------------\n\n- Add control panel to manage settings\n  [laulaz]\n\n2.2 - Aug 29, 2013\n------------------\n\n- Don't cache errors in persistent cache\n  [kroman0]\n\n- Added persistent cache and cache timeout\n  [kroman0]\n\n2.1 - May 13, 2013\n------------------\n\n- Updated embed.ly api url\n  [kroman0]\n\n- support urls containing non-asci characters such as\n  http://maps.google.com/maps?q=%C3%96sterreich\n  (fixes #5)\n  [fRiSi]\n\n- added 'Use services regexp' bool field to registry.\n  (fixes #4)\n  [kroman0]\n\n2.0 - Feb 25, 2013\n------------------\n\n- change tests structure\n  [kroman0]\n\n- added acceptance tests\n  [kroman0]\n\n- added TinyMCE plugin\n  [kroman0]\n\n- cleanup genericsetup profiles\n  [kroman0]\n\n1.7 - Nov 23, 2011\n------------------\n\n- added view for updating embedly services manually\n\n- handling of empty api_key added\n\n- local cache of available services updated\n\n1.6 - Sep 14, 2011\n------------------\n\n- Only run the uninstall profile when the product is being uninstalled.\n  This allows for the api key to survive through a reinstall.\n  [claytron]\n\n- Add support for passing the embedly API key\n  [claytron]\n\n1.5 - Sep 2, 2011\n-----------------\n\n- href distinguishing regular expression improved\n- logging added\n\n1.4.1 - Aug 8, 2011\n-------------------\n\n- typpos in CSS fixed\n\n1.4 - Apr 26, 2011\n------------------\n\n- URL parameters parsing algorithm updated\n\n1.3 - Apr 05, 2011\n------------------\n\n- maxwidth, maxheight, callback, wmode params support added\n\n- updated list of embedly services\n\n1.2 - Mar 29, 2011\n------------------\n\n- the embedly link now marked with icon and background in TinyMCE\n\n1.1 - Mar 4, 2011\n-----------------\n\n- proper registration of embedly transformation done; does not clash with\n  safe HTML transform from now on\n\n1.0 - Mar 3, 2011\n-----------------\n\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.embedly", "keywords": "web zope plone embedly TinyMCE plugin multimedia", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.embedly", "package_url": "https://pypi.org/project/collective.embedly/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.embedly/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/collective/collective.embedly"}, "release_url": "https://pypi.org/project/collective.embedly/2.4/", "requires_dist": null, "requires_python": null, "summary": "TinyMCE visual editor support for embed.ly service", "version": "2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This package provides TinyMCE visual editor support for embed.ly service:\nvideos, images and other rich media can be inserted to Plone from different\nservices through one API.</p>\n<p>The approach here is to use the Transform machinery to replace the URL with\nembed code by calling the embed.ly API.</p>\n<p>There are more than 200 services that support embed.ly service. These are such\nvideo sharing sites as Youtube, Blip.tv, Vimeo; such audio streaming services\nas Grooveshark, SoundCloud, last.fm; such image/photo stocks as Flickr, and\nmany other: GoogleMaps, Facebook, Twitter, etc.</p>\n<p>This product was developed by <a href=\"http://quintagroup.com\" rel=\"nofollow\">http://quintagroup.com</a> for Plone collective,\nsponsored by Headnet ApS <a href=\"http://headnet.dk\" rel=\"nofollow\">http://headnet.dk</a>.</p>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>To embed media from the embedly-supported external resource to Plone:</p>\n<ul>\n<li>Go to the object\u2019s edit form, select some text and click\n\u2018Insert/Edit Embedly link\u2019 button.</li>\n<li>In the panel add link and configure extra parameters in \u2018Advanced\u2019 tab.\nCheck <a href=\"http://embed.ly/docs/arguments\" rel=\"nofollow\">http://embed.ly/docs/arguments</a> for params description.</li>\n<li>The text should now look like linked. TinyMCE makes the whole passage linked,\nso keep in mind that the whole passage will later be substituted with\nembedded media.</li>\n<li>Save this page. Now when rendered, there will be \u201cpreview\u201d from embed.ly\nservice inserted instead of the linked text.</li>\n</ul>\n<p>More about usage at <a href=\"http://projects.quintagroup.com/products/wiki/collective.embedly\" rel=\"nofollow\">http://projects.quintagroup.com/products/wiki/collective.embedly</a></p>\n</div>\n<div id=\"note\">\n<h3>Note</h3>\n<ul>\n<li><p>collective.embedly does not fix errors in provided URLs</p>\n</li>\n<li><p>you can check if your URL will be transformed calling embed.ly manualy, for example:</p>\n<blockquote>\n<p>o video URL <a href=\"http://www.youtube.com/watch?v=L1NPLlhFTVk\" rel=\"nofollow\">http://www.youtube.com/watch?v=L1NPLlhFTVk</a>\no you should call <a href=\"http://api.embed.ly/1/oembed\" rel=\"nofollow\">http://api.embed.ly/1/oembed</a> setting \u2018url\u2019 parameter with your value\no <a href=\"http://api.embed.ly/1/oembed?url=http://www.youtube.com/watch\" rel=\"nofollow\">http://api.embed.ly/1/oembed?url=http://www.youtube.com/watch</a>?v=L1NPLlhFTVk\no <a href=\"http://api.embed.ly/1/oembed?url=http://www.youtube.com/watch\" rel=\"nofollow\">http://api.embed.ly/1/oembed?url=http://www.youtube.com/watch</a>?v=L1NPLlhFTVk&amp;fromat=xml format result as xml</p>\n</blockquote>\n</li>\n<li><p>You can set parameters by going to the Plone control panel / Embedly settings:</p>\n<blockquote>\n<p>o cache usage and timeout\no service URL verification\no API key</p>\n</blockquote>\n</li>\n<li><p>You can update the regular expression for supported services by calling\n<a href=\"http://yourhost/plonesite/@@update_embedly_services\" rel=\"nofollow\">http://yourhost/plonesite/@@update_embedly_services</a></p>\n</li>\n<li><p>The default is to not pass along an API key, your requests to embedly will be\nanonymous and based solely on IP address.</p>\n</li>\n</ul>\n</div>\n<div id=\"supported-plone-version\">\n<h3>Supported Plone Version</h3>\n<ul>\n<li>Plone 4.x</li>\n</ul>\n</div>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<ul>\n<li>Volodymyr Cherepanyak</li>\n<li>Roman Kozlovskyi</li>\n<li>Serhiy Valchuk</li>\n<li>Clayton Parker</li>\n<li>Laurent Lasudry</li>\n<li>Harald Friessnegger</li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"may-6-2015\">\n<h3>2.4 - May 6, 2015</h3>\n<ul>\n<li>Internationalization added\n[lepri]</li>\n<li>add url of document that caused embedly error in the error log\n(this fixes #12) [fRiSi]</li>\n<li>Add rel=0 setting to not show related videos in\nyoutube embeds.\n[fRiSi]</li>\n<li>Add German translations. [fRiSi]</li>\n</ul>\n</div>\n<div id=\"jan-29-2014\">\n<h3>2.3 - Jan 29, 2014</h3>\n<ul>\n<li>Add control panel to manage settings\n[laulaz]</li>\n</ul>\n</div>\n<div id=\"aug-29-2013\">\n<h3>2.2 - Aug 29, 2013</h3>\n<ul>\n<li>Don\u2019t cache errors in persistent cache\n[kroman0]</li>\n<li>Added persistent cache and cache timeout\n[kroman0]</li>\n</ul>\n</div>\n<div id=\"may-13-2013\">\n<h3>2.1 - May 13, 2013</h3>\n<ul>\n<li>Updated embed.ly api url\n[kroman0]</li>\n<li>support urls containing non-asci characters such as\n<a href=\"http://maps.google.com/maps?q=%C3%96sterreich\" rel=\"nofollow\">http://maps.google.com/maps?q=%C3%96sterreich</a>\n(fixes #5)\n[fRiSi]</li>\n<li>added \u2018Use services regexp\u2019 bool field to registry.\n(fixes #4)\n[kroman0]</li>\n</ul>\n</div>\n<div id=\"feb-25-2013\">\n<h3>2.0 - Feb 25, 2013</h3>\n<ul>\n<li>change tests structure\n[kroman0]</li>\n<li>added acceptance tests\n[kroman0]</li>\n<li>added TinyMCE plugin\n[kroman0]</li>\n<li>cleanup genericsetup profiles\n[kroman0]</li>\n</ul>\n</div>\n<div id=\"nov-23-2011\">\n<h3>1.7 - Nov 23, 2011</h3>\n<ul>\n<li>added view for updating embedly services manually</li>\n<li>handling of empty api_key added</li>\n<li>local cache of available services updated</li>\n</ul>\n</div>\n<div id=\"sep-14-2011\">\n<h3>1.6 - Sep 14, 2011</h3>\n<ul>\n<li>Only run the uninstall profile when the product is being uninstalled.\nThis allows for the api key to survive through a reinstall.\n[claytron]</li>\n<li>Add support for passing the embedly API key\n[claytron]</li>\n</ul>\n</div>\n<div id=\"sep-2-2011\">\n<h3>1.5 - Sep 2, 2011</h3>\n<ul>\n<li>href distinguishing regular expression improved</li>\n<li>logging added</li>\n</ul>\n</div>\n<div id=\"aug-8-2011\">\n<h3>1.4.1 - Aug 8, 2011</h3>\n<ul>\n<li>typpos in CSS fixed</li>\n</ul>\n</div>\n<div id=\"apr-26-2011\">\n<h3>1.4 - Apr 26, 2011</h3>\n<ul>\n<li>URL parameters parsing algorithm updated</li>\n</ul>\n</div>\n<div id=\"apr-05-2011\">\n<h3>1.3 - Apr 05, 2011</h3>\n<ul>\n<li>maxwidth, maxheight, callback, wmode params support added</li>\n<li>updated list of embedly services</li>\n</ul>\n</div>\n<div id=\"mar-29-2011\">\n<h3>1.2 - Mar 29, 2011</h3>\n<ul>\n<li>the embedly link now marked with icon and background in TinyMCE</li>\n</ul>\n</div>\n<div id=\"mar-4-2011\">\n<h3>1.1 - Mar 4, 2011</h3>\n<ul>\n<li>proper registration of embedly transformation done; does not clash with\nsafe HTML transform from now on</li>\n</ul>\n</div>\n<div id=\"mar-3-2011\">\n<h3>1.0 - Mar 3, 2011</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1548350, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "5bfae50c9b22ca947fb5e1aceddd24a0", "sha256": "a2b17d04a0f27082a7d23b5536a2eede06cb28fc9cbeef810c8973d604ec4ff9"}, "downloads": -1, "filename": "collective.embedly-1.0.zip", "has_sig": false, "md5_digest": "5bfae50c9b22ca947fb5e1aceddd24a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25021, "upload_time": "2011-03-03T15:34:56", "upload_time_iso_8601": "2011-03-03T15:34:56.934619Z", "url": "https://files.pythonhosted.org/packages/13/12/2fe184e0e1ee8e753e253f63a652abac25dfcbb42c3d73f803ce90c88b65/collective.embedly-1.0.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "488ae032596fee27acb1d0ba7ac85c42", "sha256": "feb9119c61e544bd47a1e4ee4cf42c5394aea38835ebfe83f1199323e2224e32"}, "downloads": -1, "filename": "collective.embedly-1.1.zip", "has_sig": false, "md5_digest": "488ae032596fee27acb1d0ba7ac85c42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24890, "upload_time": "2011-03-04T14:22:52", "upload_time_iso_8601": "2011-03-04T14:22:52.775173Z", "url": "https://files.pythonhosted.org/packages/40/31/195c2cdbf8a262fb5338e74ee21c3321bac05f036ec2b4046e3d33d672a3/collective.embedly-1.1.zip", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "233b30e290f13d8c08632449b0ab9757", "sha256": "c8fadc65173deea81fb0570b7d0f9ec799c8db66e27cebababaa4d9dbc5b0db9"}, "downloads": -1, "filename": "collective.embedly-1.2.zip", "has_sig": false, "md5_digest": "233b30e290f13d8c08632449b0ab9757", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27512, "upload_time": "2011-03-29T15:15:57", "upload_time_iso_8601": "2011-03-29T15:15:57.180410Z", "url": "https://files.pythonhosted.org/packages/f1/70/93008090de9b3d281d24a15c48dbb3ca36d0a5bd8c02b53dfc4b2eed5d60/collective.embedly-1.2.zip", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "df1da42478ad46ca83b68a109e87925c", "sha256": "9ff95df7be3a81d6ec48b402af2b2d91e1ceffae84fd9728b4e03cdd42e94224"}, "downloads": -1, "filename": "collective.embedly-1.3.zip", "has_sig": false, "md5_digest": "df1da42478ad46ca83b68a109e87925c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28266, "upload_time": "2011-04-05T17:06:06", "upload_time_iso_8601": "2011-04-05T17:06:06.388692Z", "url": "https://files.pythonhosted.org/packages/bd/50/5bc5cdee95fb1ad2f92d834b90d8fc774748c4aecad446f5bd65f4ef2c70/collective.embedly-1.3.zip", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "174831476757dd915211a739b9bc3df2", "sha256": "1211e5a1e3fad1f5451f0c033ec0e2520d28557c1cbf0dc0ade3cb2017a94156"}, "downloads": -1, "filename": "collective.embedly-1.4.zip", "has_sig": false, "md5_digest": "174831476757dd915211a739b9bc3df2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29330, "upload_time": "2011-04-26T17:03:40", "upload_time_iso_8601": "2011-04-26T17:03:40.786091Z", "url": "https://files.pythonhosted.org/packages/ac/fd/cb37e8e26f70238a866357899245ffd654d1160ea734077dda9f7f99e411/collective.embedly-1.4.zip", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "d834f619ebe2a3b38f77771903d532df", "sha256": "773ea2b567bce8f7b011e0c0dc57a181932aeb6eb8ba70bfe3b13e111a3ff72e"}, "downloads": -1, "filename": "collective.embedly-1.4.1.zip", "has_sig": false, "md5_digest": "d834f619ebe2a3b38f77771903d532df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29543, "upload_time": "2011-08-08T16:05:23", "upload_time_iso_8601": "2011-08-08T16:05:23.207036Z", "url": "https://files.pythonhosted.org/packages/39/95/b744c06be3b2aa8bfddd4be3355931bef0282bcfe8de5137e325dfeccf2f/collective.embedly-1.4.1.zip", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "7151b75dcfdb324b77cbf281e28f39f1", "sha256": "c70ae42b7e70e58fc9f392bf6eb81ebf4cc5cb46de46b1a01438142c89ff8e9f"}, "downloads": -1, "filename": "collective.embedly-1.5.zip", "has_sig": false, "md5_digest": "7151b75dcfdb324b77cbf281e28f39f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29705, "upload_time": "2011-09-02T11:59:49", "upload_time_iso_8601": "2011-09-02T11:59:49.457448Z", "url": "https://files.pythonhosted.org/packages/9f/fb/04550a74540e975bd5ce56c9015475eb453656b098fa3c146539b3f5e651/collective.embedly-1.5.zip", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "bffd44821a89252ece840f9f144c850f", "sha256": "aa45a78c6af05a888c977083f73dea21afe534c5ec5394856e81d553c3aaa718"}, "downloads": -1, "filename": "collective.embedly-1.6.zip", "has_sig": false, "md5_digest": "bffd44821a89252ece840f9f144c850f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31868, "upload_time": "2011-09-14T13:14:55", "upload_time_iso_8601": "2011-09-14T13:14:55.190349Z", "url": "https://files.pythonhosted.org/packages/fb/93/9567be0b495821b38bbf4719176023fa63911fad61268d12389627ef1349/collective.embedly-1.6.zip", "yanked": false}], "1.7": [{"comment_text": "", "digests": {"md5": "e94d4898b7a2d6c86be9dd898e745f4d", "sha256": "01117f9854292087e472319c195f3000212ad16aef0b8b3b05b9737650456ab1"}, "downloads": -1, "filename": "collective.embedly-1.7.zip", "has_sig": false, "md5_digest": "e94d4898b7a2d6c86be9dd898e745f4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36051, "upload_time": "2011-11-23T16:04:28", "upload_time_iso_8601": "2011-11-23T16:04:28.850366Z", "url": "https://files.pythonhosted.org/packages/9d/eb/26f9043d158a9061b03b90dbbed3d7ac24e5de9cb300607646ffae2d3049/collective.embedly-1.7.zip", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "29b7ea821696b26b1464a9a5089d0708", "sha256": "ca074f9bcdebbd547daf83312ebd35274c2c8dd447b0289dd9601636c10b78e5"}, "downloads": -1, "filename": "collective.embedly-2.0.zip", "has_sig": false, "md5_digest": "29b7ea821696b26b1464a9a5089d0708", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53912, "upload_time": "2013-02-25T12:22:38", "upload_time_iso_8601": "2013-02-25T12:22:38.718284Z", "url": "https://files.pythonhosted.org/packages/82/4e/a4cbfd1745d2be625acc30f392a2be5fc85303b8c0b98b11e8071c4ba1bb/collective.embedly-2.0.zip", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "c2a91adc5ed00be37e34a3016ef8dc74", "sha256": "6c59a94bad1f80126b735dc9cb3e110ddb441f25f86c8ff5ec6d04e0bbb2ad96"}, "downloads": -1, "filename": "collective.embedly-2.1.zip", "has_sig": false, "md5_digest": "c2a91adc5ed00be37e34a3016ef8dc74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54659, "upload_time": "2013-05-13T13:57:03", "upload_time_iso_8601": "2013-05-13T13:57:03.031951Z", "url": "https://files.pythonhosted.org/packages/2f/fe/948471389fc58d5f6cd5ac16989f61df950541a2f4fc92414c2556af4d0a/collective.embedly-2.1.zip", "yanked": false}], "2.2": [{"comment_text": "", "digests": {"md5": "9277bcf75c74825b5b6bbf40e2a54254", "sha256": "cc3e6b205cec0d28d3bfb0756580d15fa6858f63d697c8b713c8ba62acff0a62"}, "downloads": -1, "filename": "collective.embedly-2.2.zip", "has_sig": false, "md5_digest": "9277bcf75c74825b5b6bbf40e2a54254", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55596, "upload_time": "2013-09-18T12:52:52", "upload_time_iso_8601": "2013-09-18T12:52:52.038376Z", "url": "https://files.pythonhosted.org/packages/15/8f/0cfefa6b035eab67f1b5e537db8486c8fa3f49e5f76f4626856fb4120b3d/collective.embedly-2.2.zip", "yanked": false}], "2.3": [{"comment_text": "", "digests": {"md5": "ca8f7295f79749bb6daa3394e9dd0ab3", "sha256": "c2881acfd8a503f154ecffbc1e603d6824a8db3168ab52ef3f8cd2f8f19f577a"}, "downloads": -1, "filename": "collective.embedly-2.3.zip", "has_sig": false, "md5_digest": "ca8f7295f79749bb6daa3394e9dd0ab3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59314, "upload_time": "2014-01-30T11:32:50", "upload_time_iso_8601": "2014-01-30T11:32:50.621850Z", "url": "https://files.pythonhosted.org/packages/aa/98/0a66f92d691b907b3b34e5df6af681a9957f128887b055425697ad88cb75/collective.embedly-2.3.zip", "yanked": false}], "2.4": [{"comment_text": "", "digests": {"md5": "7c0735b92b0cc57f5adf40056f7b6c0f", "sha256": "46b184f2cb6571ab95273de0c45e6717277a4cc57fd20ebd935208f9cfb05b72"}, "downloads": -1, "filename": "collective.embedly-2.4.zip", "has_sig": false, "md5_digest": "7c0735b92b0cc57f5adf40056f7b6c0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68670, "upload_time": "2015-05-15T13:17:35", "upload_time_iso_8601": "2015-05-15T13:17:35.318984Z", "url": "https://files.pythonhosted.org/packages/85/d5/5a80641181b114ed86fcd6ceaa888f514a3c1b18c8f5b0fc27186a08cac4/collective.embedly-2.4.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7c0735b92b0cc57f5adf40056f7b6c0f", "sha256": "46b184f2cb6571ab95273de0c45e6717277a4cc57fd20ebd935208f9cfb05b72"}, "downloads": -1, "filename": "collective.embedly-2.4.zip", "has_sig": false, "md5_digest": "7c0735b92b0cc57f5adf40056f7b6c0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68670, "upload_time": "2015-05-15T13:17:35", "upload_time_iso_8601": "2015-05-15T13:17:35.318984Z", "url": "https://files.pythonhosted.org/packages/85/d5/5a80641181b114ed86fcd6ceaa888f514a3c1b18c8f5b0fc27186a08cac4/collective.embedly-2.4.zip", "yanked": false}], "timestamp": "Thu May  7 22:17:55 2020"}