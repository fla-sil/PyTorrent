{"info": {"author": "Carson", "author_email": "jackparadise520a@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: Chinese (Traditional)", "Natural Language :: English", "Operating System :: Microsoft", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP :: Indexing/Search", "Topic :: Scientific/Engineering :: Astronomy", "Topic :: Scientific/Engineering :: Hydrology"], "description": ".. sectnum::\n\nHistoricalWeatherTW \u53f0\u7063\u6b77\u53f2\u5929\u6c23\u722c\u87f2\n==============================================\n\nThis script is to crawl the information of `\u89c0\u6e2c\u8cc7\u6599\u67e5\u8a62 <https://e-service.cwb.gov.tw/HistoryDataQuery/index.jsp>`_ website\n\nData from `\u89c0\u6e2c\u8cc7\u6599\u67e5\u8a62\u7cfb\u7d71 <http://e-service.cwb.gov.tw/HistoryDataQuery/>`_\n\nUsage\n============\n\n#. Prepare `station.csv`_.\n\n    .. note:: station.csv (you can find it from the https://e-service.cwb.gov.tw/wdps/obs/state.htm)\n\n#. run the function of ``collect_weather_tw`` you will see the result!\n\n    .. code-block:: python\n\n        def collect_weather_tw(station_csv_path: Path, output_path,\n                               end_date: datetime.date, begin_date: datetime.date,\n                               query_format,\n                               convert2num):\n\n**You can refer to** `__init__.py`_ **for more help**\n\n    1. Prepare `config.yaml`_ and use this path as input parameter\n    #. run `__init__.py`_\n\nQUICKLY START\n---------------\n\n.. code-block:: python\n\n    from Carson.Tool.HistoricalWeatherTW import collect_weather_tw, QueryFormat\n    from pathlib import Path\n    import datetime\n    import os\n\n    if __name__ == '__main__':\n        STATION_CSV = '../config/CSV/station_test.csv'\n        OUTPUT_PATH = Path(f'../temp/year_result.csv')\n        BEGIN_DATE = datetime.date(2019, 10, 1)\n        END_DATE = datetime.date(2019, 10, 2)\n        QUERY_FORMAT = QueryFormat.DAY\n        CONVERT2NUM = True\n        collect_weather_tw(Path(STATION_CSV), OUTPUT_PATH,\n                           BEGIN_DATE, END_DATE,\n                           QUERY_FORMAT,\n                           CONVERT2NUM)\n        os.startfile(OUTPUT_PATH)\n\nData\n=============\n\n\u8cc7\u6599\u6703\u4ee5\u89c0\u6e2c\u7ad9ID+\u7ad9\u540d\u5132\u5b58\n\n.. note:: There have some non-numeric forms of the original data.\n    Such as indefinite wind direction V, rain track T, etc. the variable of ``CONVERT2NUM`` will replace them with numbers.\n\n\u8cc7\u6599\u6b04\u4f4d\u5982\u4e0b\n--------------------\n\n`ObsTime` \u89c0\u6e2c\u6642\u9593(LST) \n\n`StnPres` \u6e2c\u7ad9\u6c23\u58d3(hPa) \n\n`SeaPres`\t\u6d77\u5e73\u9762\u6c23\u58d3(hPa)\n\n`Temperature` \u6c23\u6eab(\u2103)\n\n`Tddewpoint` \u9732\u9ede\u6eab\u5ea6(\u2103)\n\n`RH` \u76f8\u5c0d\u6ebc\u5ea6(%)\n\n`WS` \u98a8\u901f(m/s)\n\n`WD` \u98a8\u5411(360degree)\n\n`WSGust` \u6700\u5927\u9663\u98a8(m/s)\n\n`WDGust` \u6700\u5927\u9663\u98a8\u98a8\u5411(360degree)\n\n`Precp` \u964d\u6c34\u91cf(mm)\n\n`PrecpHour` \u964d\u6c34\u6642\u6578(hr)\n\n`SunShine` \u65e5\u7167\u6642\u6578(hr)\n\n`GloblRad` \u5168\u5929\u7a7a\u65e5\u5c04\u91cf(MJ/\u33a1)\n\n`Visb` \u80fd\u898b\u5ea6(km)\n\nRelease note\n======================\n\nv4.0\n---------\n    Encapsulated as API\n\nv3.0\n---------\nFeatures:\n\n    - All outputs into a single file. (making it easier to use for SQL)\n    - The output header field will automatically grab the content on the web page (not use hard coding)\n    - You can choose the type of query (year, month, day) according to your needs.\n\nOther:\n\n    - Make the code easier to read.\n\nV2.0\n-------\n\n\u52a0\u5165\u5168\u53f0\u89c0\u6e2c\u7ad9\n\nV1.0\n---------\n\u7b2c\u4e00\u7248\n\n.. _`__init__.py`: https://github.com/CarsonSlovoka/HistoricalWeatherTW/blob/temp/Carson/Tool/HistoricalWeatherTW/__init__.py\n.. _`config.yaml`: https://github.com/CarsonSlovoka/HistoricalWeatherTW/blob/master/Carson/Tool/HistoricalWeatherTW/config/config.yaml\n.. _`station.csv`: https://github.com/CarsonSlovoka/HistoricalWeatherTW/blob/master/Carson/Tool/HistoricalWeatherTW/config/CSV/station.csv\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/CarsonSlovoka/HistoricalWeatherTW/tree/master/tarball/v4.1.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CarsonSlovoka/HistoricalWeatherTW/tree/master", "keywords": "templates", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "carson-tool.HistoricalWeatherTW", "package_url": "https://pypi.org/project/carson-tool.HistoricalWeatherTW/", "platform": "", "project_url": "https://pypi.org/project/carson-tool.HistoricalWeatherTW/", "project_urls": {"Download": "https://github.com/CarsonSlovoka/HistoricalWeatherTW/tree/master/tarball/v4.1.0", "Homepage": "https://github.com/CarsonSlovoka/HistoricalWeatherTW/tree/master"}, "release_url": "https://pypi.org/project/carson-tool.HistoricalWeatherTW/4.1.0/", "requires_dist": null, "requires_python": "", "summary": "Bezier curve simulation (including reductions the dimension from 3 to 2)", "version": "4.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"historicalweathertw\">\n<h2>1\u00a0\u00a0\u00a0HistoricalWeatherTW \u53f0\u7063\u6b77\u53f2\u5929\u6c23\u722c\u87f2</h2>\n<p>This script is to crawl the information of <a href=\"https://e-service.cwb.gov.tw/HistoryDataQuery/index.jsp\" rel=\"nofollow\">\u89c0\u6e2c\u8cc7\u6599\u67e5\u8a62</a> website</p>\n<p>Data from <a href=\"http://e-service.cwb.gov.tw/HistoryDataQuery/\" rel=\"nofollow\">\u89c0\u6e2c\u8cc7\u6599\u67e5\u8a62\u7cfb\u7d71</a></p>\n</div>\n<div id=\"usage\">\n<h2>2\u00a0\u00a0\u00a0Usage</h2>\n<ol>\n<li><p>Prepare <a href=\"https://github.com/CarsonSlovoka/HistoricalWeatherTW/blob/master/Carson/Tool/HistoricalWeatherTW/config/CSV/station.csv\" rel=\"nofollow\">station.csv</a>.</p>\n<blockquote>\n<div>\n<p>Note</p>\n<p>station.csv (you can find it from the <a href=\"https://e-service.cwb.gov.tw/wdps/obs/state.htm\" rel=\"nofollow\">https://e-service.cwb.gov.tw/wdps/obs/state.htm</a>)</p>\n</div>\n</blockquote>\n</li>\n<li><p>run the function of <tt>collect_weather_tw</tt> you will see the result!</p>\n<blockquote>\n<pre><span class=\"k\">def</span> <span class=\"nf\">collect_weather_tw</span><span class=\"p\">(</span><span class=\"n\">station_csv_path</span><span class=\"p\">:</span> <span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">output_path</span><span class=\"p\">,</span>\n                       <span class=\"n\">end_date</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">,</span> <span class=\"n\">begin_date</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">,</span>\n                       <span class=\"n\">query_format</span><span class=\"p\">,</span>\n                       <span class=\"n\">convert2num</span><span class=\"p\">):</span>\n</pre>\n</blockquote>\n</li>\n</ol>\n<p><strong>You can refer to</strong> <a href=\"https://github.com/CarsonSlovoka/HistoricalWeatherTW/blob/temp/Carson/Tool/HistoricalWeatherTW/__init__.py\" rel=\"nofollow\">__init__.py</a> <strong>for more help</strong></p>\n<blockquote>\n<ol>\n<li>Prepare <a href=\"https://github.com/CarsonSlovoka/HistoricalWeatherTW/blob/master/Carson/Tool/HistoricalWeatherTW/config/config.yaml\" rel=\"nofollow\">config.yaml</a> and use this path as input parameter</li>\n<li>run <a href=\"https://github.com/CarsonSlovoka/HistoricalWeatherTW/blob/temp/Carson/Tool/HistoricalWeatherTW/__init__.py\" rel=\"nofollow\">__init__.py</a></li>\n</ol>\n</blockquote>\n<div id=\"quickly-start\">\n<h3>2.1\u00a0\u00a0\u00a0QUICKLY START</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">Carson.Tool.HistoricalWeatherTW</span> <span class=\"kn\">import</span> <span class=\"n\">collect_weather_tw</span><span class=\"p\">,</span> <span class=\"n\">QueryFormat</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">STATION_CSV</span> <span class=\"o\">=</span> <span class=\"s1\">'../config/CSV/station_test.csv'</span>\n    <span class=\"n\">OUTPUT_PATH</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'../temp/year_result.csv'</span><span class=\"p\">)</span>\n    <span class=\"n\">BEGIN_DATE</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">END_DATE</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">QUERY_FORMAT</span> <span class=\"o\">=</span> <span class=\"n\">QueryFormat</span><span class=\"o\">.</span><span class=\"n\">DAY</span>\n    <span class=\"n\">CONVERT2NUM</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"n\">collect_weather_tw</span><span class=\"p\">(</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">STATION_CSV</span><span class=\"p\">),</span> <span class=\"n\">OUTPUT_PATH</span><span class=\"p\">,</span>\n                       <span class=\"n\">BEGIN_DATE</span><span class=\"p\">,</span> <span class=\"n\">END_DATE</span><span class=\"p\">,</span>\n                       <span class=\"n\">QUERY_FORMAT</span><span class=\"p\">,</span>\n                       <span class=\"n\">CONVERT2NUM</span><span class=\"p\">)</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">startfile</span><span class=\"p\">(</span><span class=\"n\">OUTPUT_PATH</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"data\">\n<h2>3\u00a0\u00a0\u00a0Data</h2>\n<p>\u8cc7\u6599\u6703\u4ee5\u89c0\u6e2c\u7ad9ID+\u7ad9\u540d\u5132\u5b58</p>\n<div>\n<p>Note</p>\n<p>There have some non-numeric forms of the original data.\nSuch as indefinite wind direction V, rain track T, etc. the variable of <tt>CONVERT2NUM</tt> will replace them with numbers.</p>\n</div>\n<div id=\"id3\">\n<h3>3.1\u00a0\u00a0\u00a0\u8cc7\u6599\u6b04\u4f4d\u5982\u4e0b</h3>\n<p><cite>ObsTime</cite> \u89c0\u6e2c\u6642\u9593(LST)</p>\n<p><cite>StnPres</cite> \u6e2c\u7ad9\u6c23\u58d3(hPa)</p>\n<p><cite>SeaPres</cite>       \u6d77\u5e73\u9762\u6c23\u58d3(hPa)</p>\n<p><cite>Temperature</cite> \u6c23\u6eab(\u2103)</p>\n<p><cite>Tddewpoint</cite> \u9732\u9ede\u6eab\u5ea6(\u2103)</p>\n<p><cite>RH</cite> \u76f8\u5c0d\u6ebc\u5ea6(%)</p>\n<p><cite>WS</cite> \u98a8\u901f(m/s)</p>\n<p><cite>WD</cite> \u98a8\u5411(360degree)</p>\n<p><cite>WSGust</cite> \u6700\u5927\u9663\u98a8(m/s)</p>\n<p><cite>WDGust</cite> \u6700\u5927\u9663\u98a8\u98a8\u5411(360degree)</p>\n<p><cite>Precp</cite> \u964d\u6c34\u91cf(mm)</p>\n<p><cite>PrecpHour</cite> \u964d\u6c34\u6642\u6578(hr)</p>\n<p><cite>SunShine</cite> \u65e5\u7167\u6642\u6578(hr)</p>\n<p><cite>GloblRad</cite> \u5168\u5929\u7a7a\u65e5\u5c04\u91cf(MJ/\u33a1)</p>\n<p><cite>Visb</cite> \u80fd\u898b\u5ea6(km)</p>\n</div>\n</div>\n<div id=\"release-note\">\n<h2>4\u00a0\u00a0\u00a0Release note</h2>\n<div id=\"v4-0\">\n<h3>4.1\u00a0\u00a0\u00a0v4.0</h3>\n<blockquote>\nEncapsulated as API</blockquote>\n</div>\n<div id=\"v3-0\">\n<h3>4.2\u00a0\u00a0\u00a0v3.0</h3>\n<p>Features:</p>\n<blockquote>\n<ul>\n<li>All outputs into a single file. (making it easier to use for SQL)</li>\n<li>The output header field will automatically grab the content on the web page (not use hard coding)</li>\n<li>You can choose the type of query (year, month, day) according to your needs.</li>\n</ul>\n</blockquote>\n<p>Other:</p>\n<blockquote>\n<ul>\n<li>Make the code easier to read.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"v2-0\">\n<h3>4.3\u00a0\u00a0\u00a0V2.0</h3>\n<p>\u52a0\u5165\u5168\u53f0\u89c0\u6e2c\u7ad9</p>\n</div>\n<div id=\"v1-0\">\n<h3>4.4\u00a0\u00a0\u00a0V1.0</h3>\n<p>\u7b2c\u4e00\u7248</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6587547, "releases": {"4.1.0": [{"comment_text": "", "digests": {"md5": "4793c54c0819de855b9fa1df2f4247b4", "sha256": "014a9591196ee7481a9958812742d4a01bc74ddb91fe00ced2b356263e07e536"}, "downloads": -1, "filename": "carson-tool.HistoricalWeatherTW-4.1.0.tar.gz", "has_sig": false, "md5_digest": "4793c54c0819de855b9fa1df2f4247b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6776, "upload_time": "2020-02-07T09:30:32", "upload_time_iso_8601": "2020-02-07T09:30:32.681037Z", "url": "https://files.pythonhosted.org/packages/e2/4d/fa7433a8cb20840f67fc068d968fffa4406c43a93af47a1b8fa06c2c7d34/carson-tool.HistoricalWeatherTW-4.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4793c54c0819de855b9fa1df2f4247b4", "sha256": "014a9591196ee7481a9958812742d4a01bc74ddb91fe00ced2b356263e07e536"}, "downloads": -1, "filename": "carson-tool.HistoricalWeatherTW-4.1.0.tar.gz", "has_sig": false, "md5_digest": "4793c54c0819de855b9fa1df2f4247b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6776, "upload_time": "2020-02-07T09:30:32", "upload_time_iso_8601": "2020-02-07T09:30:32.681037Z", "url": "https://files.pythonhosted.org/packages/e2/4d/fa7433a8cb20840f67fc068d968fffa4406c43a93af47a1b8fa06c2c7d34/carson-tool.HistoricalWeatherTW-4.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:23 2020"}