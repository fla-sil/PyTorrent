{"info": {"author": "Shinneider Libanio da Silva", "author_email": "shinneider-libanio@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Django Admin Search\n===================\n[![Downloads](https://pepy.tech/badge/django-admin-search)](https://pepy.tech/project/django-admin-search)\n[![Downloads](https://pepy.tech/badge/django-admin-search/month)](https://pepy.tech/project/django-admin-search/month)\n[![Downloads](https://pepy.tech/badge/django-admin-search/week)](https://pepy.tech/project/django-admin-search/week)\n\n[![Coverage](https://sonarcloud.io/api/project_badges/measure?project=shinneider_django-admin-search&metric=coverage)](https://sonarcloud.io/dashboard?id=shinneider_django-admin-search)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=shinneider_django-admin-search&metric=alert_status)](https://sonarcloud.io/dashboard?id=shinneider_django-admin-search)\n[![PyPI version](https://badge.fury.io/py/django-admin-search.svg)](https://badge.fury.io/py/django-admin-search)  \nThe \"Django Admin Search\" is a advanced search modal for django admin.\n\nIf you use or like the project, click `Star` and `Watch` to generate metrics and i evaluate project continuity.\n\n# Install:\n    pip install django-admin-search\n\n# Usage:\n\n1. Add to your INSTALLED_APPS, in settings.py:\n    ```\n    INSTALLED_APPS = [  \n        ...\n        'django_admin_search',\n        ...\n    ]\n    ```\n\n2. Create a search form for model:\n    ```\n    from .models import Area\n    from django.forms import ModelForm, Form\n    from django.forms import DateField, CharField, ChoiceField, TextInput\n\n\n    class YourFormSearch(Form):\n        name = CharField(required=False)\n        date = DateField(required=False, widget=TextInput(\n            attrs={ \n                'filter_method': '__gte',\n            }\n        ))\n    ```\n\n3. In your admin:\n    ```\n    from django_admin_search.admin import AdvancedSearchAdmin\n    from .models import YourModel\n    from .form import YourForm, YourFormSearch\n\n    @register(YourModel)\n    class YourAdmin(AdvancedSearchAdmin):\n        form = YourForm\n        search_form = YourFormSearch\n    ```\n\n# Advanced:\n1. to multiple filters in same field:\n    ```\n    class YourFormSearch(Form):\n        ...\n        name = CharField(required=False)\n        begin = DateField(required=False, widget=TextInput(\n            attrs={\n                'filter_field': 'date', \n                'filter_method': '__gte',\n            }\n        ))\n        end = DateField(required=False, widget=TextInput(\n            attrs={\n                'filter_field': 'date', \n                'filter_method': '__lte',\n            }\n        ))\n    ```\n\n2. add placeholder and mask\n    ```\n    class YourFormSearch(Form):\n        ...\n        date = DateField(required=False, widget=TextInput(\n            attrs={\n                'data-mask': \"00/00/0000\", \n                'placeholder': 'MM/DD/YYYY'\n            }\n        ))\n    ```\n\n3. Custom filter query for a field\n    ```\n    from django_admin_search.admin import AdvancedSearchAdmin\n    from .models import YourModel\n    from .form import YourForm, YourFormSearch\n\n    @register(YourModel)\n    class YourAdmin(AdvancedSearchAdmin):\n        def search_FieldNameHere(request, field_value, param_values):\n            \"\"\"\n                intercept query filter for description field\n            \"\"\"\n            query = Q()\n            # your Q logic here\n            return query\n    ```\n\n# Images:\n\nButton in admin list:\n    ![input](https://user-images.githubusercontent.com/30196992/59556917-19182f00-8fa2-11e9-9d9a-955d73d79d11.png)\n\nModal opened:\n    ![modal](https://user-images.githubusercontent.com/30196992/59556920-29c8a500-8fa2-11e9-8677-0f340762e64a.png)\n\n\n# Development and Running the Tests\nTo do development work for Django Admin Search, clone it locally, make and activate a virtualenv for it, then from within the project directory:\n```\npip install -e .[dev]\n```\n\nTo run the tests:\n```\npytest\n```\n\nIf your work in high difficult test, and need to re run the test every time, use `pytest-watch`:\n```\nptw  # this see file change and re run a test\n```\n\nwhen you need to see passed lines by test, run \n```\npytest --cov-report html\n```\nafter this, will be created a `htmlcov` folder in the root \n\nTo run sonar \n```\npytest --cov-report xml\npylint ./django_admin_search/ --msg-template=\"{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}\" | tee pylint.txt\nsonar-scanner\n```\n\nSee your code quality in Sonar (in testing, no metrics to approve yet)\n```\nhttps://sonarcloud.io/dashboard?id=shinneider_django-admin-search\n```\n\nFor future i want to run test's in Travis CI, to check if PR is Ok, but to be effective, i need to cover 80% or more of the code, help-me creating a test case, see this issue [PR - 20](https://github.com/shinneider/django-admin-search/issues/20)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shinneider/django_admin_search", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-admin-search", "package_url": "https://pypi.org/project/django-admin-search/", "platform": "", "project_url": "https://pypi.org/project/django-admin-search/", "project_urls": {"Homepage": "https://github.com/shinneider/django_admin_search"}, "release_url": "https://pypi.org/project/django-admin-search/0.3.5/", "requires_dist": null, "requires_python": ">=3.3", "summary": "The \"Django Admin Search\" is a advanced search modal for django admin", "version": "0.3.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django Admin Search</h1>\n<p><a href=\"https://pepy.tech/project/django-admin-search\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b5ad97efe69205d16c2b7cc39c641b2f1529f32/68747470733a2f2f706570792e746563682f62616467652f646a616e676f2d61646d696e2d736561726368\"></a>\n<a href=\"https://pepy.tech/project/django-admin-search/month\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04b19c5ed77bae33157003bf21f7a02ad2f89770/68747470733a2f2f706570792e746563682f62616467652f646a616e676f2d61646d696e2d7365617263682f6d6f6e7468\"></a>\n<a href=\"https://pepy.tech/project/django-admin-search/week\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c55d7233e365aa4db4491b1f5734207ef2463260/68747470733a2f2f706570792e746563682f62616467652f646a616e676f2d61646d696e2d7365617263682f7765656b\"></a></p>\n<p><a href=\"https://sonarcloud.io/dashboard?id=shinneider_django-admin-search\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/572e9f19bd68f58a97398120aaaa442e530db59a/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d7368696e6e65696465725f646a616e676f2d61646d696e2d736561726368266d65747269633d636f766572616765\"></a>\n<a href=\"https://sonarcloud.io/dashboard?id=shinneider_django-admin-search\" rel=\"nofollow\"><img alt=\"Quality Gate Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a437abb5511783a75d0061e24db85ea13ccfcb45/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d7368696e6e65696465725f646a616e676f2d61646d696e2d736561726368266d65747269633d616c6572745f737461747573\"></a>\n<a href=\"https://badge.fury.io/py/django-admin-search\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c44bcac0db55775ba755fd76687487b00c23dd9/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d61646d696e2d7365617263682e737667\"></a><br>\nThe \"Django Admin Search\" is a advanced search modal for django admin.</p>\n<p>If you use or like the project, click <code>Star</code> and <code>Watch</code> to generate metrics and i evaluate project continuity.</p>\n<h1>Install:</h1>\n<pre><code>pip install django-admin-search\n</code></pre>\n<h1>Usage:</h1>\n<ol>\n<li>\n<p>Add to your INSTALLED_APPS, in settings.py:</p>\n<pre><code>INSTALLED_APPS = [  \n    ...\n    'django_admin_search',\n    ...\n]\n</code></pre>\n</li>\n<li>\n<p>Create a search form for model:</p>\n<pre><code>from .models import Area\nfrom django.forms import ModelForm, Form\nfrom django.forms import DateField, CharField, ChoiceField, TextInput\n\n\nclass YourFormSearch(Form):\n    name = CharField(required=False)\n    date = DateField(required=False, widget=TextInput(\n        attrs={ \n            'filter_method': '__gte',\n        }\n    ))\n</code></pre>\n</li>\n<li>\n<p>In your admin:</p>\n<pre><code>from django_admin_search.admin import AdvancedSearchAdmin\nfrom .models import YourModel\nfrom .form import YourForm, YourFormSearch\n\n@register(YourModel)\nclass YourAdmin(AdvancedSearchAdmin):\n    form = YourForm\n    search_form = YourFormSearch\n</code></pre>\n</li>\n</ol>\n<h1>Advanced:</h1>\n<ol>\n<li>\n<p>to multiple filters in same field:</p>\n<pre><code>class YourFormSearch(Form):\n    ...\n    name = CharField(required=False)\n    begin = DateField(required=False, widget=TextInput(\n        attrs={\n            'filter_field': 'date', \n            'filter_method': '__gte',\n        }\n    ))\n    end = DateField(required=False, widget=TextInput(\n        attrs={\n            'filter_field': 'date', \n            'filter_method': '__lte',\n        }\n    ))\n</code></pre>\n</li>\n<li>\n<p>add placeholder and mask</p>\n<pre><code>class YourFormSearch(Form):\n    ...\n    date = DateField(required=False, widget=TextInput(\n        attrs={\n            'data-mask': \"00/00/0000\", \n            'placeholder': 'MM/DD/YYYY'\n        }\n    ))\n</code></pre>\n</li>\n<li>\n<p>Custom filter query for a field</p>\n<pre><code>from django_admin_search.admin import AdvancedSearchAdmin\nfrom .models import YourModel\nfrom .form import YourForm, YourFormSearch\n\n@register(YourModel)\nclass YourAdmin(AdvancedSearchAdmin):\n    def search_FieldNameHere(request, field_value, param_values):\n        \"\"\"\n            intercept query filter for description field\n        \"\"\"\n        query = Q()\n        # your Q logic here\n        return query\n</code></pre>\n</li>\n</ol>\n<h1>Images:</h1>\n<p>Button in admin list:\n<img alt=\"input\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/940230c99c85d403de9828d2c1bbab58f1608714/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f33303139363939322f35393535363931372d31393138326630302d386661322d313165392d396439612d3935356437336437396431312e706e67\"></p>\n<p>Modal opened:\n<img alt=\"modal\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05c3bae6423fbde2897f19d53061eb3365465adf/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f33303139363939322f35393535363932302d32396338613530302d386661322d313165392d383637372d3066333430373632653634612e706e67\"></p>\n<h1>Development and Running the Tests</h1>\n<p>To do development work for Django Admin Search, clone it locally, make and activate a virtualenv for it, then from within the project directory:</p>\n<pre><code>pip install -e .[dev]\n</code></pre>\n<p>To run the tests:</p>\n<pre><code>pytest\n</code></pre>\n<p>If your work in high difficult test, and need to re run the test every time, use <code>pytest-watch</code>:</p>\n<pre><code>ptw  # this see file change and re run a test\n</code></pre>\n<p>when you need to see passed lines by test, run</p>\n<pre><code>pytest --cov-report html\n</code></pre>\n<p>after this, will be created a <code>htmlcov</code> folder in the root</p>\n<p>To run sonar</p>\n<pre><code>pytest --cov-report xml\npylint ./django_admin_search/ --msg-template=\"{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}\" | tee pylint.txt\nsonar-scanner\n</code></pre>\n<p>See your code quality in Sonar (in testing, no metrics to approve yet)</p>\n<pre><code>https://sonarcloud.io/dashboard?id=shinneider_django-admin-search\n</code></pre>\n<p>For future i want to run test's in Travis CI, to check if PR is Ok, but to be effective, i need to cover 80% or more of the code, help-me creating a test case, see this issue <a href=\"https://github.com/shinneider/django-admin-search/issues/20\" rel=\"nofollow\">PR - 20</a></p>\n\n          </div>"}, "last_serial": 6947389, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "07ebdb7d5a17260c27bd8b1437c88fe7", "sha256": "68a78f3a9c236020d69d7c20b756b8d15800530018d40ab22a79cbefcdc2f0ec"}, "downloads": -1, "filename": "django-admin-search-0.1.1.tar.gz", "has_sig": false, "md5_digest": "07ebdb7d5a17260c27bd8b1437c88fe7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 124169, "upload_time": "2018-08-29T15:01:57", "upload_time_iso_8601": "2018-08-29T15:01:57.628403Z", "url": "https://files.pythonhosted.org/packages/58/8e/ca202e3ce65ea4782f627d9650c025bb6bfcee6dcc777f5ddfd0b0693864/django-admin-search-0.1.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "5547667cb5c7f34d1af4dc4e3edb7695", "sha256": "7c915bda8dea78a3011919aa4625f92ddb0a96063796c9a683ad7cd758206537"}, "downloads": -1, "filename": "django-admin-search-0.2.2.tar.gz", "has_sig": false, "md5_digest": "5547667cb5c7f34d1af4dc4e3edb7695", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 125809, "upload_time": "2019-06-16T00:07:11", "upload_time_iso_8601": "2019-06-16T00:07:11.031122Z", "url": "https://files.pythonhosted.org/packages/85/54/7ed7fc7a8f8d452ab9c49ee2a8160048c2915a551f324ef2120ec3ea5b5f/django-admin-search-0.2.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "e0f9c3cf881ae1c49a493dbdb3058fc8", "sha256": "8b20e1348a1e8872a1f03cc3e9370bcaa3711f8b6dbabc48935c82a48d82a9a6"}, "downloads": -1, "filename": "django-admin-search-0.3.tar.gz", "has_sig": false, "md5_digest": "e0f9c3cf881ae1c49a493dbdb3058fc8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 126422, "upload_time": "2019-11-29T18:14:28", "upload_time_iso_8601": "2019-11-29T18:14:28.427698Z", "url": "https://files.pythonhosted.org/packages/4d/c2/17f2a0d2bc2dbb8769b8055fc4c63c42d027b644a2ae6e1b7964b12e1307/django-admin-search-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "c2c3d7b3144562037e3b75520f72a808", "sha256": "ea1bdb25723e9c3364bb4a16e1fbb4998647f8ab3269369f4c8dc6094b540b3b"}, "downloads": -1, "filename": "django-admin-search-0.3.1.tar.gz", "has_sig": false, "md5_digest": "c2c3d7b3144562037e3b75520f72a808", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 126424, "upload_time": "2019-11-30T04:24:13", "upload_time_iso_8601": "2019-11-30T04:24:13.689334Z", "url": "https://files.pythonhosted.org/packages/a9/e6/9d16fb1038b4eb37504f27c447d333d9ff0ddaa0c645045d57b6151e91f9/django-admin-search-0.3.1.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "d8a702963894c6f1b1be652e6ae5d123", "sha256": "6ca2e124e8110457ad85f0e3c17ebfd6ada99617906a8729c7ef822714dc89de"}, "downloads": -1, "filename": "django-admin-search-0.3.3.tar.gz", "has_sig": false, "md5_digest": "d8a702963894c6f1b1be652e6ae5d123", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 129154, "upload_time": "2020-01-22T04:57:04", "upload_time_iso_8601": "2020-01-22T04:57:04.081241Z", "url": "https://files.pythonhosted.org/packages/18/c5/c89482f09598ff135ad956b79bf4defb057fe1d362779d2ce0e40ed66753/django-admin-search-0.3.3.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "eeb50e014234fe2d92085ea8b04637a7", "sha256": "e40e0378fb53d0b532962529f2e286fa5d5a5b92c3d897ee15fc2efc6a2e2122"}, "downloads": -1, "filename": "django-admin-search-0.3.5.tar.gz", "has_sig": false, "md5_digest": "eeb50e014234fe2d92085ea8b04637a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 130896, "upload_time": "2020-04-04T00:23:56", "upload_time_iso_8601": "2020-04-04T00:23:56.465389Z", "url": "https://files.pythonhosted.org/packages/79/dd/8a111eed425c7e54f59fa415b1936b5dbcfff1b1392fb45939bf23860cff/django-admin-search-0.3.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eeb50e014234fe2d92085ea8b04637a7", "sha256": "e40e0378fb53d0b532962529f2e286fa5d5a5b92c3d897ee15fc2efc6a2e2122"}, "downloads": -1, "filename": "django-admin-search-0.3.5.tar.gz", "has_sig": false, "md5_digest": "eeb50e014234fe2d92085ea8b04637a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 130896, "upload_time": "2020-04-04T00:23:56", "upload_time_iso_8601": "2020-04-04T00:23:56.465389Z", "url": "https://files.pythonhosted.org/packages/79/dd/8a111eed425c7e54f59fa415b1936b5dbcfff1b1392fb45939bf23860cff/django-admin-search-0.3.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:47 2020"}