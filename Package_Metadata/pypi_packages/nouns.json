{"info": {"author": "Robert Lechte", "author_email": "robert.lechte@dpc.vic.gov.au", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8"], "description": "# `nouns`: Data-deterministic, structure-driven (very experimental) templating\n\n`nouns` does templating a bit differently - the templating itself is quite primitive, with most of the gruntwork taking place in the preprocessing layer.\n\nThis layer converts all the templating data into a very general form that ensures the data is renderable by the templates no matter the structure of the data.\n\n## Hello world\n\nDo traditional template-and-data templating as follows:\n\n    >>> from nouns import template\n    >>> template(dict(name='World'), 'Hello $name!')\n    Hello World!\n\nBut the more interesting/intended use is to not explicitly pass in a template. Instead, just pass in the data - let the templating engine itself figure out which templates to use.\n\nThe in-built templates are designed to give you something close to what you probably want.\n\nPass in a table of data, you'll get a table back. Pass in a dictionary/mapping, you'll get the key/value pairs templated in a table. Pass in a list, you'll get each list item templated out.\n\n## Experimental status\n\nThis templating system is an experiment in how to craft the most data-driven templating system, where the output is dependent on the things (\"nouns\") you pass in.\n\nWe will initially use if for rendering data in notebooks, but it's definitely not production-ready for web applications or otherwise rendering untrusted data, without a lot of extra customization and filters set up.\n\nHopefully it will continue to evolve toward production-ready status.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nouns", "package_url": "https://pypi.org/project/nouns/", "platform": "", "project_url": "https://pypi.org/project/nouns/", "project_urls": null, "release_url": "https://pypi.org/project/nouns/0.1.1/", "requires_dist": ["results"], "requires_python": ">=3.8", "summary": "Data-driven templating", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><code>nouns</code>: Data-deterministic, structure-driven (very experimental) templating</h1>\n<p><code>nouns</code> does templating a bit differently - the templating itself is quite primitive, with most of the gruntwork taking place in the preprocessing layer.</p>\n<p>This layer converts all the templating data into a very general form that ensures the data is renderable by the templates no matter the structure of the data.</p>\n<h2>Hello world</h2>\n<p>Do traditional template-and-data templating as follows:</p>\n<pre><code>&gt;&gt;&gt; from nouns import template\n&gt;&gt;&gt; template(dict(name='World'), 'Hello $name!')\nHello World!\n</code></pre>\n<p>But the more interesting/intended use is to not explicitly pass in a template. Instead, just pass in the data - let the templating engine itself figure out which templates to use.</p>\n<p>The in-built templates are designed to give you something close to what you probably want.</p>\n<p>Pass in a table of data, you'll get a table back. Pass in a dictionary/mapping, you'll get the key/value pairs templated in a table. Pass in a list, you'll get each list item templated out.</p>\n<h2>Experimental status</h2>\n<p>This templating system is an experiment in how to craft the most data-driven templating system, where the output is dependent on the things (\"nouns\") you pass in.</p>\n<p>We will initially use if for rendering data in notebooks, but it's definitely not production-ready for web applications or otherwise rendering untrusted data, without a lot of extra customization and filters set up.</p>\n<p>Hopefully it will continue to evolve toward production-ready status.</p>\n\n          </div>"}, "last_serial": 6567056, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e7cde39db3276a8023adc921cd446381", "sha256": "8611a1621f0620bee37211a3511df291d89ab1eadd78319198a86b3b8ea90fc7"}, "downloads": -1, "filename": "nouns-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e7cde39db3276a8023adc921cd446381", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 10875, "upload_time": "2020-02-03T04:52:09", "upload_time_iso_8601": "2020-02-03T04:52:09.911642Z", "url": "https://files.pythonhosted.org/packages/e8/9a/fa2ebefb214def8c8ea8ef17845d65b6553149a1a1b575ddd0794faf15dc/nouns-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efa5c4cfad080818af1cfbe0c9afa641", "sha256": "a43d5114cc6fafcb7f313d0c1ae89992385395f4ba3e22251e92d66266f509a4"}, "downloads": -1, "filename": "nouns-0.1.0.tar.gz", "has_sig": false, "md5_digest": "efa5c4cfad080818af1cfbe0c9afa641", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 8700, "upload_time": "2020-02-03T04:52:12", "upload_time_iso_8601": "2020-02-03T04:52:12.434119Z", "url": "https://files.pythonhosted.org/packages/e4/e2/b168eb03234e196607d2aaa3628560a728dcf722969dc07371676177ff5d/nouns-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "37d26e58b23c283b72bb67419b06b728", "sha256": "3b6426b5f7a590fc6971d1664f623916cf448102e250ccfc25dbd85fe90b7295"}, "downloads": -1, "filename": "nouns-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "37d26e58b23c283b72bb67419b06b728", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 10906, "upload_time": "2020-02-04T07:32:21", "upload_time_iso_8601": "2020-02-04T07:32:21.147955Z", "url": "https://files.pythonhosted.org/packages/d8/af/5991744837306e8553dba375d49b8059d11f14ff31eb7f80c97d80f6c908/nouns-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf0b109b23ebdaec648c5de528035899", "sha256": "055f5ca0ced5984f07f91fc265dc62fae3fda9dc4c640a7f6110dfdb99542a51"}, "downloads": -1, "filename": "nouns-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bf0b109b23ebdaec648c5de528035899", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 8725, "upload_time": "2020-02-04T07:32:22", "upload_time_iso_8601": "2020-02-04T07:32:22.757251Z", "url": "https://files.pythonhosted.org/packages/20/7a/d3449d1ebbc6bb8e307f9f89772bacf5167d36374a6708d8136b951dd77e/nouns-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "37d26e58b23c283b72bb67419b06b728", "sha256": "3b6426b5f7a590fc6971d1664f623916cf448102e250ccfc25dbd85fe90b7295"}, "downloads": -1, "filename": "nouns-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "37d26e58b23c283b72bb67419b06b728", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 10906, "upload_time": "2020-02-04T07:32:21", "upload_time_iso_8601": "2020-02-04T07:32:21.147955Z", "url": "https://files.pythonhosted.org/packages/d8/af/5991744837306e8553dba375d49b8059d11f14ff31eb7f80c97d80f6c908/nouns-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf0b109b23ebdaec648c5de528035899", "sha256": "055f5ca0ced5984f07f91fc265dc62fae3fda9dc4c640a7f6110dfdb99542a51"}, "downloads": -1, "filename": "nouns-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bf0b109b23ebdaec648c5de528035899", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 8725, "upload_time": "2020-02-04T07:32:22", "upload_time_iso_8601": "2020-02-04T07:32:22.757251Z", "url": "https://files.pythonhosted.org/packages/20/7a/d3449d1ebbc6bb8e307f9f89772bacf5167d36374a6708d8136b951dd77e/nouns-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:36 2020"}