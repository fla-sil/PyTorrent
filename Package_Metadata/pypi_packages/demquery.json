{"info": {"author": "Kyle Barron", "author_email": "kylebarron2@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# demquery\n\n\n[![Pypi](https://img.shields.io/pypi/v/demquery.svg)](https://pypi.python.org/pypi/demquery) [![Downloads](https://img.shields.io/travis/kylebarron/demquery.svg)](https://travis-ci.org/kylebarron/demquery) [![Supported Python Versions](https://img.shields.io/pypi/pyversions/demquery.svg)](https://pypi.org/project/demquery/#supported-versions)\n\nWrapper around rasterio to query points on a Digital Elevation Model.\n\n## Features\n\n- Use multiple raster files without having to merge them into a new file\n- Query many points at once\n- Optional 2D interpolation (linear, cubic, or quintic)\n- Reasonably performant by reading the minimal data required from raster\n\n## Install\n\nI recommend first installing dependencies with Conda, then installing demquery\nitself with pip.\n\n```\nconda install gdal rasterio numpy scipy -c conda-forge\n```\n\n```\npip install demquery\n```\n\n## CLI Script\n\n```\n> demquery --help\nUsage: demquery [OPTIONS] FEATURES...\n\n  Assign elevations to GeoJSON\n\nOptions:\n  -d, --dem PATH          Paths to DEM files.  [required]\n  -g, --dem-glob TEXT     Glob expression for DEM paths if folder is provided.\n  -b, --band INTEGER      Band of rasters to use  [default: 1]\n  -i, --interp-kind TEXT  either None, \"linear\", \"cubic\", or \"quintic\". None\n                          will do no interpolation and choose the value in the\n                          DEM closest to the provided point. linear creates a\n                          3x3 grid and runs linear interpolation; cubic\n                          creates a 5x5 grid and runs cubic interpolation;\n                          quintic creates a 7x7 grid and runs quintic\n                          interpolation.\n  --help                  Show this message and exit.\n```\n\n```bash\necho \\\n    '{\"type\":\"Feature\",\"properties\":{\"name\": \"Glacier Peak\"},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.2436843,48.0163834]}}' \\\n    | demquery -d /path/to/dem/files\n```\nOutputs:\n```json\n{\"type\": \"FeatureCollection\", \"features\": [{\"type\": \"Feature\", \"geometry\": {\"type\": \"Point\", \"coordinates\": [-121.243684, 48.016383, 1431.5755615234375]}, \"properties\": {\"name\": \"Glacier Peak\"}}]}\n```\n\n## Documentation\n\n```py\nfrom demquery import Query\n\ndem_paths = ['dem1.tif', 'dem2.tif']\nquery = Query(dem_paths)\n\n# Points must be in longitude, latitude order!\n# These points are in Manhattan, not Antarctica\npoints = [(-73.985564, 40.757965), (-73.968520, 40.778912)]\nelevations = query.query_points(points, interp_kind='linear')\n```\n\n## Data Download\n\nFor a great visual tool to download worldwide SRTM data, check out these sites:\n\n- 30m resolution: http://dwtkns.com/srtm30m/\n- 90m resolution: http://dwtkns.com/srtm/\n\n\n# Changelog\n\n## [0.3.0] - 2020-01-28\n\n- Add CLI script\n\n## [0.2.1] - 2019-12-04\n\n- Include requirements.txt and requirements_dev.txt in manifest bundle\n\n## [0.2.0] - 2019-12-02\n\n- Fix virtual raster issues.\n\n## [0.1.0] - 2019-11-27\n\n- Initial release on PyPI", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kylebarron/demquery", "keywords": "demquery", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "demquery", "package_url": "https://pypi.org/project/demquery/", "platform": "", "project_url": "https://pypi.org/project/demquery/", "project_urls": {"Homepage": "https://github.com/kylebarron/demquery"}, "release_url": "https://pypi.org/project/demquery/0.3.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Wrapper around rasterio to query points on a Digital Elevation Model", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>demquery</h1>\n<p><a href=\"https://pypi.python.org/pypi/demquery\" rel=\"nofollow\"><img alt=\"Pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e99b8e915989ec8fb5e1963fecccb78c33d85d1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f64656d71756572792e737667\"></a> <a href=\"https://travis-ci.org/kylebarron/demquery\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/31bd49babf2f0606e8f07b2d706aff23cedc006f/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6b796c65626172726f6e2f64656d71756572792e737667\"></a> <a href=\"https://pypi.org/project/demquery/#supported-versions\" rel=\"nofollow\"><img alt=\"Supported Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cbcd8c3e04423fc475a10406a31aa2096d60ede4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f64656d71756572792e737667\"></a></p>\n<p>Wrapper around rasterio to query points on a Digital Elevation Model.</p>\n<h2>Features</h2>\n<ul>\n<li>Use multiple raster files without having to merge them into a new file</li>\n<li>Query many points at once</li>\n<li>Optional 2D interpolation (linear, cubic, or quintic)</li>\n<li>Reasonably performant by reading the minimal data required from raster</li>\n</ul>\n<h2>Install</h2>\n<p>I recommend first installing dependencies with Conda, then installing demquery\nitself with pip.</p>\n<pre><code>conda install gdal rasterio numpy scipy -c conda-forge\n</code></pre>\n<pre><code>pip install demquery\n</code></pre>\n<h2>CLI Script</h2>\n<pre><code>&gt; demquery --help\nUsage: demquery [OPTIONS] FEATURES...\n\n  Assign elevations to GeoJSON\n\nOptions:\n  -d, --dem PATH          Paths to DEM files.  [required]\n  -g, --dem-glob TEXT     Glob expression for DEM paths if folder is provided.\n  -b, --band INTEGER      Band of rasters to use  [default: 1]\n  -i, --interp-kind TEXT  either None, \"linear\", \"cubic\", or \"quintic\". None\n                          will do no interpolation and choose the value in the\n                          DEM closest to the provided point. linear creates a\n                          3x3 grid and runs linear interpolation; cubic\n                          creates a 5x5 grid and runs cubic interpolation;\n                          quintic creates a 7x7 grid and runs quintic\n                          interpolation.\n  --help                  Show this message and exit.\n</code></pre>\n<pre><span class=\"nb\">echo</span> <span class=\"se\">\\</span>\n    <span class=\"s1\">'{\"type\":\"Feature\",\"properties\":{\"name\": \"Glacier Peak\"},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.2436843,48.0163834]}}'</span> <span class=\"se\">\\</span>\n    <span class=\"p\">|</span> demquery -d /path/to/dem/files\n</pre>\n<p>Outputs:</p>\n<pre><span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"FeatureCollection\"</span><span class=\"p\">,</span> <span class=\"nt\">\"features\"</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Feature\"</span><span class=\"p\">,</span> <span class=\"nt\">\"geometry\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Point\"</span><span class=\"p\">,</span> <span class=\"nt\">\"coordinates\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">-121.243684</span><span class=\"p\">,</span> <span class=\"mf\">48.016383</span><span class=\"p\">,</span> <span class=\"mf\">1431.5755615234375</span><span class=\"p\">]},</span> <span class=\"nt\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Glacier Peak\"</span><span class=\"p\">}}]}</span>\n</pre>\n<h2>Documentation</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">demquery</span> <span class=\"kn\">import</span> <span class=\"n\">Query</span>\n\n<span class=\"n\">dem_paths</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'dem1.tif'</span><span class=\"p\">,</span> <span class=\"s1\">'dem2.tif'</span><span class=\"p\">]</span>\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">dem_paths</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Points must be in longitude, latitude order!</span>\n<span class=\"c1\"># These points are in Manhattan, not Antarctica</span>\n<span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"o\">-</span><span class=\"mf\">73.985564</span><span class=\"p\">,</span> <span class=\"mf\">40.757965</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">73.968520</span><span class=\"p\">,</span> <span class=\"mf\">40.778912</span><span class=\"p\">)]</span>\n<span class=\"n\">elevations</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">query_points</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">interp_kind</span><span class=\"o\">=</span><span class=\"s1\">'linear'</span><span class=\"p\">)</span>\n</pre>\n<h2>Data Download</h2>\n<p>For a great visual tool to download worldwide SRTM data, check out these sites:</p>\n<ul>\n<li>30m resolution: <a href=\"http://dwtkns.com/srtm30m/\" rel=\"nofollow\">http://dwtkns.com/srtm30m/</a></li>\n<li>90m resolution: <a href=\"http://dwtkns.com/srtm/\" rel=\"nofollow\">http://dwtkns.com/srtm/</a></li>\n</ul>\n<h1>Changelog</h1>\n<h2>[0.3.0] - 2020-01-28</h2>\n<ul>\n<li>Add CLI script</li>\n</ul>\n<h2>[0.2.1] - 2019-12-04</h2>\n<ul>\n<li>Include requirements.txt and requirements_dev.txt in manifest bundle</li>\n</ul>\n<h2>[0.2.0] - 2019-12-02</h2>\n<ul>\n<li>Fix virtual raster issues.</li>\n</ul>\n<h2>[0.1.0] - 2019-11-27</h2>\n<ul>\n<li>Initial release on PyPI</li>\n</ul>\n\n          </div>"}, "last_serial": 6533832, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7761fa094a576498cce9d0ac86816ae9", "sha256": "c1dab5b62ad587ffc17471e94faa7b69e338dd5de4ce6dc00ef302a4f8f86bce"}, "downloads": -1, "filename": "demquery-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7761fa094a576498cce9d0ac86816ae9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 6327, "upload_time": "2019-11-28T01:50:03", "upload_time_iso_8601": "2019-11-28T01:50:03.771042Z", "url": "https://files.pythonhosted.org/packages/66/51/0d8a5b922b4a87042e04551ab95ed39ff8427efd2a18657e22f0c640af08/demquery-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e823410689519c001eb54bd460e990c", "sha256": "7264b581b748060456916c5811e9e72600149b42defb32fde4e7c331641fea1e"}, "downloads": -1, "filename": "demquery-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4e823410689519c001eb54bd460e990c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9884, "upload_time": "2019-11-28T01:50:06", "upload_time_iso_8601": "2019-11-28T01:50:06.103520Z", "url": "https://files.pythonhosted.org/packages/16/69/268622eb0846c7d4b186424ebb6aed5c5d5a8651558dbceec7698e9a2808/demquery-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e9792a03509ae3a3eec852f842e90090", "sha256": "19650a37a5da271af5697d429db8f6cf6d43804dc46113fa622b80acd982d1f8"}, "downloads": -1, "filename": "demquery-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e9792a03509ae3a3eec852f842e90090", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9619, "upload_time": "2019-12-03T00:25:21", "upload_time_iso_8601": "2019-12-03T00:25:21.889725Z", "url": "https://files.pythonhosted.org/packages/28/dc/119312bc384c4a6526fdc0e4d655552516d812147c890539f92ad8924445/demquery-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8bd10f3f873a531fed04db69bd26920c", "sha256": "91c9ccaf8726c3b435e135151916dd1d87678e5ab8409c717fdf6fbece273914"}, "downloads": -1, "filename": "demquery-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8bd10f3f873a531fed04db69bd26920c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9804, "upload_time": "2019-12-04T09:15:23", "upload_time_iso_8601": "2019-12-04T09:15:23.497270Z", "url": "https://files.pythonhosted.org/packages/e5/a0/b3871751341b199450767a55386e4e0d2c3da12c7d2d5706012e8a75f7db/demquery-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b25b2fa38968ee9a8941740d907bb7e4", "sha256": "3a43012d35688d3673c00d182ca13c3a4988b8a2607bd522dab5f121acc5b240"}, "downloads": -1, "filename": "demquery-0.3.0.tar.gz", "has_sig": false, "md5_digest": "b25b2fa38968ee9a8941740d907bb7e4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11253, "upload_time": "2020-01-28T18:16:09", "upload_time_iso_8601": "2020-01-28T18:16:09.300526Z", "url": "https://files.pythonhosted.org/packages/2d/48/f30fb5c8d98380180d57a93260327dede454ad100204c7ebff3f179eb287/demquery-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b25b2fa38968ee9a8941740d907bb7e4", "sha256": "3a43012d35688d3673c00d182ca13c3a4988b8a2607bd522dab5f121acc5b240"}, "downloads": -1, "filename": "demquery-0.3.0.tar.gz", "has_sig": false, "md5_digest": "b25b2fa38968ee9a8941740d907bb7e4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11253, "upload_time": "2020-01-28T18:16:09", "upload_time_iso_8601": "2020-01-28T18:16:09.300526Z", "url": "https://files.pythonhosted.org/packages/2d/48/f30fb5c8d98380180d57a93260327dede454ad100204c7ebff3f179eb287/demquery-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:08 2020"}