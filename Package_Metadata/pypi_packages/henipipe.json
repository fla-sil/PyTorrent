{"info": {"author": "Scott Furlan", "author_email": "scottfurlan@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "[![PyPI](https://img.shields.io/pypi/v/simplesam.svg?)](https://pypi.org/project/henipipe/)\n<!-- [![Build Status](https://travis-ci.org/mdshw5/simplesam.svg?branch=master)](https://travis-ci.org/mdshw5/simplesam) -->\n[![Documentation Status](https://readthedocs.org/projects/henipipe/badge/?version=latest)](https://henipipe.readthedocs.io/en/latest/?badge=latest)\n\n# henipipe\n==========\n\nVersion 1.0\n\nA python wrapper for processing of sequencing data generated using CutnRun or CutnTag (developed by the Henikoff lab FHCRC)\n\n## Requirements\n\n1. Python > 3.5 (henipipe uses the 'six' package but will attempt to install if not already installed)\n2. Computing cluster with PBS or SLURM\n3. Modules installed for python, bowtie2, samtools, bedtools, R\n4. MACS2 is required for MACS2 function\n5. htslib (containing the tabix executable) is required for AUC function\n\n## Installation\n\nInstallation can probably be done correctly many different ways.  Here are the methods that have worked for us.  We recommend that henipipe be installed with pipx.\n\n**At SCRI do the following**\n```bash\nmodule load python\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install --include-deps --pip-args '--trusted-host pypi.org --trusted-host files.pythonhosted.org' henipipe\n```\n\n\n**At the FHCRC do the following...**\n```bash\nmodule load Python/3.6.7-foss-2016b-fh1\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install --include-deps henipipe\n```\n\nYou should then be able to test installation by calling henipipe.  After running the folllowing, you should see the help screen displayed.\n\n```bash\nhenipipe\n```\n\n## Usage\n\n```bash\nhenipipe usage: A wrapper for running henipipe [-h] [--sample_flag SAMPLE_FLAG]\n                                      [--fastq_folder FASTQ_FOLDER]\n                                      [--genome_key GENOME_KEY]\n                                      [--filter_high FILTER_HIGH]\n                                      [--filter_low FILTER_LOW]\n                                      [--output OUTPUT] [--runsheet RUNSHEET]\n                                      [--log_prefix LOG_PREFIX]\n                                      [--select SELECT] [--debug]\n                                      [--bowtie_flags BOWTIE_FLAGS]\n                                      [--cluster {PBS,SLURM}]\n                                      [--threads THREADS] [--gb_ram GB_RAM]\n                                      [--norm_method {coverage,read_count,spike_in}]\n                                      [--user USER] [--SEACR_norm {non,norm}]\n                                      [--SEACR_stringency {stringent,relaxed}]\n                                      [--keep_files] [--verbose]\n                                      {MAKERUNSHEET,ALIGN,NORM,MERGE,SEACR,MACS2,AUC,GENOMESFILE}\n\npositional arguments:\n  {MAKERUNSHEET,ALIGN,NORM,MERGE,SEACR,MACS2,AUC,GENOMESFILE}\n                        a required string denoting segment of pipeline to run.\n                        1) \"MAKERUNSHEET\" - to parse a folder of fastqs; 2)\n                        \"ALIGN\" - to perform alignment using bowtie and output\n                        bed files; 3) \"NORM\" - to normalize data to reference\n                        (spike in); 4) \"MERGE\" - to merge bedgraphs 5) \"SEACR\"\n                        - to perform SEACR; 6) \"MACS\" - to perform MACS2; 7)\n                        \"AUC\" - to calculate AUC between normalized bedgraph\n                        using a peak file; 8) \"GENOMESFILE\" - print location\n                        of genomes.json file.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --sample_flag SAMPLE_FLAG, -sf SAMPLE_FLAG\n                        FOR MAKERUNSHEET only string to identify samples of\n                        interest in a fastq folder\n  --fastq_folder FASTQ_FOLDER, -fq FASTQ_FOLDER\n                        For MAKERUNSHEET only: Pathname of fastq folder (files\n                        must be organized in folders named by sample)\n  --genome_key GENOME_KEY, -gk GENOME_KEY\n                        For MAKERUNSHEET only: abbreviation to use \"installed\"\n                        genomes in the runsheet (See README.md for more\n                        details\n  --filter_high FILTER_HIGH, -fh FILTER_HIGH\n                        For ALIGN only: upper limit of fragment size to\n                        exclude, defaults is no upper limit. OPTIONAL\n  --filter_low FILTER_LOW, -fl FILTER_LOW\n                        For ALIGN only: lower limit of fragment size to\n                        exclude, defaults is no lower limit. OPTIONAL\n  --output OUTPUT, -o OUTPUT\n                        For MAKERUNSHEET only: Pathname to write runsheet.csv\n                        file (folder must exist already!!), Defaults to\n                        current directory\n  --runsheet RUNSHEET, -r RUNSHEET\n                        tab-delim file with sample fields as defined in the\n                        script. - REQUIRED for all jobs except MAKERUNSHEET\n  --log_prefix LOG_PREFIX, -l LOG_PREFIX\n                        Prefix specifying log files for henipipe output from\n                        henipipe calls. OPTIONAL\n  --select SELECT, -s SELECT\n                        To only run the selected row in the runsheet, OPTIONAL\n  --debug, -d           To print commands (For testing flow). OPTIONAL\n  --bowtie_flags BOWTIE_FLAGS, -b BOWTIE_FLAGS\n                        For ALIGN: bowtie flags, OPTIONAL\n  --cluster {PBS,SLURM}, -c {PBS,SLURM}\n                        Cluster software. OPTIONAL Currently supported: PBS\n                        and SLURM\n  --threads THREADS, -t THREADS\n                        FOR ALIGN: number of threads\n  --gb_ram GB_RAM, -gb GB_RAM\n                        FOR ALIGN: gigabytes of RAM\n  --norm_method {coverage,read_count,spike_in}, -n {coverage,read_count,spike_in}\n                        For ALIGN and NORM: Normalization method, by\n                        \"read_count\", \"coverage\", or \"spike_in\". If method is\n                        \"spike_in\", HeniPipe will align to the spike_in\n                        reference genome provided in runsheet. OPTIONAL\n  --user USER, -u USER  user for submitting jobs - defaults to username.\n                        OPTIONAL\n  --SEACR_norm {non,norm}, -Sn {non,norm}\n                        For SEACR: Normalization method; default is\n                        \"non\"-normalized, select \"norm\" to normalize using\n                        SEACR. OPTIONAL\n  --SEACR_stringency {stringent,relaxed}, -Ss {stringent,relaxed}\n                        FOR SEACR: Default will run as \"stringent\", other\n                        option is \"relaxed\". OPTIONAL\n  --keep_files, -k      FOR ALIGN: use this flag to turn off piping (Will\n                        generate all files).\n  --verbose, -v         Run with some additional ouput - not much though...\n                        OPTIONAL\n```\n\n\n## Runsheet\n\nThe runsheet is the brains of the henipipe workflow.  You can make a runsheet using the MAKERUNSHEET command.  This command will parse a directory of fastq folder (specified using the -fq flag; fastq files should be organized in subfolders named by sample) and will find fastq mates (R1 and R2 - Currently only PE sequencing is supported).  Running henipipe MAKERUNSHEET will find and pair these fastqs for you and populate the runsheet with genome index locations (see below) and output filenames with locations as specified using the -o flag.  Note that thenipie output will default to the current working directory if no location is otherwise specified.  There is an option for selecting only folders that contain a specific string (using the -sf flag).  *After generation of a runsheet (csv file), you should take a look at it in Excel or Numbers to make sure things look okay...*  Here are the columns that you can include.  Order is irrelevant.  Column names (headers) exactly as written below are required.\n\n### Example Runsheet \n\n**absolute pathnames are required for runsheets**\n\n| sample | fasta | spikein_fasta | fastq1 | fastq2 | bed_out | spikein_bed_out | genome_sizes | bedgraph |  SEACR_key  | SEACR_out |\n|--------|-------|---------------|--------|--------|---------|-----------------|--------------|----------|-------------|-----------|\n|  mys1  |  path |      path     |  path  |  path  |   path  |       path      |     path     |   path   |     4JS     |   path    |\n|  mys2  |  path |      path     |  path  |  path  |   path  |       path      |     path     |   path   | 4JS_CONTROL |   path    |\n\n\n* 'sample' name of the sample REQUIRED.  \n* 'fasta' location of the Bowtie2 indexed fasta file REQUIRED.  \n* 'spikein_fasta' location of the Bowtie2 indexed fasta file for spike_in normalization OPTIONAL.  \n* 'fastq1' a tab seperated string of filenames denoting location of all R1 files for a sample REQUIRED.  \n* 'fastq2' a tab seperated string of filenames denoting location of all R2 files for a sample REQUIRED.  \n* 'bed_out' name of the location for the aligned and sorted bam file REQUIRED.  \n* 'spikein_bed_out' name of the location for the aligned and sorted bam file OPTIONAL.  \n* 'genome_sizes' REQUIRED.  \n* 'bedgraph' file name of normalized bedgraph REQUIRED.  \n* 'SEACR_key' sample key corresponding to sample groups to be run against an IgG (or other) contol.  all samples to be run against a control are given the same name and the control is labeleled with the an additional string underscore + 'CONTROL' (i.e. 4JS_CONTROL) OPTIONAL.  \n* 'SEACR_out' file name of SEACR output OPTIONAL.  \n\n## Genomes and adding genome locations\n\nHenipipe uses Bowtie2 for alignment.  As such, you should have a previously indexed location of your genome accessible to henipipe.  This location is referred to in henipipe as the 'fasta'.  Similarly, one should provide the location of the spike_in indexed reference genome in the 'spikein_fasta' field.  For bedgraph conversion, a text file of genome sizes text file is also needed.  See the following for a discussion on how to make a 'genome_sizes' file https://www.biostars.org/p/173963/.\n\nHenipipe provides an easy way to add these locations to your system for repeated use using the --genome_key (-gk) option during MAKERUNSHEET commands.  A file called genomes.json can be found in the 'data' directory of the henipipe install folder.  This file can be edited to include those locations you want to regularly put in the runsheet.  The following shows an example of a genomes.json file.  The files \"top level\" is a name that can be used in the --genome_key field (-gk) during runsheet generation to populate the columns of the runsheet with fasta, spikein_fasta, and genome_sizes locations associated with that genome_key.  The 'default' key will be used when no genome_key is specified.\n\n```json\n{\n    \"default\": {\n        \"fasta\": \"/path/path/hg38/bowtie2_index\",\n        \"genome_sizes\": \"/path/path/hg38/genome_sizes.txt\",\n        \"spikein_fasta\": \"/path/path/Ecoli/bowtie2_index\"},\n    \"my_hg38\": {\n        \"fasta\": \"/shared/biodata/ngs/Reference/iGenomes/Homo_sapiens/UCSC/hg38/Sequence/Bowtie2Index/genome\",\n        \"genome_sizes\": \"/shared/ngs/illumina/henikoff/solexa/databases/human/hg38/chr_lens.txt\",\n        \"spikein_fasta\": \"/shared/ngs/illumina/henikoff/Bowtie2/Ecoli\"\n    }\n```\n\n## Doing a henipipe run\n\nSay your fastqs live within within subfolders of a folder 'fastq' in the folder 'data'.  So if you were to...\n```bash\ncd /data/fastq\nls\n```\n... you'd get a bunch of folders, each of which would be filled with fastqs.  Each folder name should correspond to a sample name.\n\n\n**To run henipipe, do the following...**\n1. Make a new output directory 'henipipe'.\n2. Go into that directory and make a runsheet pointing to the fastq folder i.e. the folder level above.  (at the command line, henipipe is cool with either relative or absolute pathnames; but as stated earlier, absolute pathnames are required for the runsheet.)\n3.  Optionally you can only select directories of fastq files that contain in their name the string denoted using the -sf flag.\n4. After inspecting and completing the runsheet, run ALIGN, NORM, SEACR, and AUC.  \n5. Sit back have a cocktail.\n\n```bash\ncd ..\nmkdir henipipe\ncd henipipe\nhenipipe MAKERUNSHEET -fq ../fastq -sf MySampleDirectoriesStartWithThisString -o .\nhenipipe ALIGN -r runsheet.csv\nhenipipe NORM -r runsheet.csv\nhenipipe SEACR -r runsheet.csv\nmkdir auc\nhenipipe AUC -r runsheet.csv -o auc\n```\n\n\n## Acknowledgements\n\nWritten by Scott Furlan with code inspiration from Andrew Hill's cellwrapper; Henipipe includes a python script samTobed.py which takes code from a fantastic sam reader \"simplesam\" - https://github.com/mdshw5/simplesam.  samTobed.py uses specific sam-sorting parameters similar to those written in Jorja Henikoff's PERL script.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scfurl/henipipe.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "henipipe", "package_url": "https://pypi.org/project/henipipe/", "platform": "", "project_url": "https://pypi.org/project/henipipe/", "project_urls": {"Homepage": "https://github.com/scfurl/henipipe.git"}, "release_url": "https://pypi.org/project/henipipe/1.41/", "requires_dist": ["six (>=1)"], "requires_python": ">=2.5", "summary": "A python wrapper for fast and parallel processing of sequencing data using CutnRun or CutnTag", "version": "1.41", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/henipipe/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/baa1978ec3829db2413de2d70dfec2fdb3be8464/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73696d706c6573616d2e7376673f\"></a></p>\n\n<p><a href=\"https://henipipe.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70dc3637970e52aec9a9a54346442ceafd2bd84e/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f68656e69706970652f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<h1>henipipe</h1>\n<p>==========</p>\n<p>Version 1.0</p>\n<p>A python wrapper for processing of sequencing data generated using CutnRun or CutnTag (developed by the Henikoff lab FHCRC)</p>\n<h2>Requirements</h2>\n<ol>\n<li>Python &gt; 3.5 (henipipe uses the 'six' package but will attempt to install if not already installed)</li>\n<li>Computing cluster with PBS or SLURM</li>\n<li>Modules installed for python, bowtie2, samtools, bedtools, R</li>\n<li>MACS2 is required for MACS2 function</li>\n<li>htslib (containing the tabix executable) is required for AUC function</li>\n</ol>\n<h2>Installation</h2>\n<p>Installation can probably be done correctly many different ways.  Here are the methods that have worked for us.  We recommend that henipipe be installed with pipx.</p>\n<p><strong>At SCRI do the following</strong></p>\n<pre>module load python\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install --include-deps --pip-args <span class=\"s1\">'--trusted-host pypi.org --trusted-host files.pythonhosted.org'</span> henipipe\n</pre>\n<p><strong>At the FHCRC do the following...</strong></p>\n<pre>module load Python/3.6.7-foss-2016b-fh1\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install --include-deps henipipe\n</pre>\n<p>You should then be able to test installation by calling henipipe.  After running the folllowing, you should see the help screen displayed.</p>\n<pre>henipipe\n</pre>\n<h2>Usage</h2>\n<pre>henipipe usage: A wrapper <span class=\"k\">for</span> running henipipe <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--sample_flag SAMPLE_FLAG<span class=\"o\">]</span>\n                                      <span class=\"o\">[</span>--fastq_folder FASTQ_FOLDER<span class=\"o\">]</span>\n                                      <span class=\"o\">[</span>--genome_key GENOME_KEY<span class=\"o\">]</span>\n                                      <span class=\"o\">[</span>--filter_high FILTER_HIGH<span class=\"o\">]</span>\n                                      <span class=\"o\">[</span>--filter_low FILTER_LOW<span class=\"o\">]</span>\n                                      <span class=\"o\">[</span>--output OUTPUT<span class=\"o\">]</span> <span class=\"o\">[</span>--runsheet RUNSHEET<span class=\"o\">]</span>\n                                      <span class=\"o\">[</span>--log_prefix LOG_PREFIX<span class=\"o\">]</span>\n                                      <span class=\"o\">[</span>--select SELECT<span class=\"o\">]</span> <span class=\"o\">[</span>--debug<span class=\"o\">]</span>\n                                      <span class=\"o\">[</span>--bowtie_flags BOWTIE_FLAGS<span class=\"o\">]</span>\n                                      <span class=\"o\">[</span>--cluster <span class=\"o\">{</span>PBS,SLURM<span class=\"o\">}]</span>\n                                      <span class=\"o\">[</span>--threads THREADS<span class=\"o\">]</span> <span class=\"o\">[</span>--gb_ram GB_RAM<span class=\"o\">]</span>\n                                      <span class=\"o\">[</span>--norm_method <span class=\"o\">{</span>coverage,read_count,spike_in<span class=\"o\">}]</span>\n                                      <span class=\"o\">[</span>--user USER<span class=\"o\">]</span> <span class=\"o\">[</span>--SEACR_norm <span class=\"o\">{</span>non,norm<span class=\"o\">}]</span>\n                                      <span class=\"o\">[</span>--SEACR_stringency <span class=\"o\">{</span>stringent,relaxed<span class=\"o\">}]</span>\n                                      <span class=\"o\">[</span>--keep_files<span class=\"o\">]</span> <span class=\"o\">[</span>--verbose<span class=\"o\">]</span>\n                                      <span class=\"o\">{</span>MAKERUNSHEET,ALIGN,NORM,MERGE,SEACR,MACS2,AUC,GENOMESFILE<span class=\"o\">}</span>\n\npositional arguments:\n  <span class=\"o\">{</span>MAKERUNSHEET,ALIGN,NORM,MERGE,SEACR,MACS2,AUC,GENOMESFILE<span class=\"o\">}</span>\n                        a required string denoting segment of pipeline to run.\n                        <span class=\"m\">1</span><span class=\"o\">)</span> <span class=\"s2\">\"MAKERUNSHEET\"</span> - to parse a folder of fastqs<span class=\"p\">;</span> <span class=\"m\">2</span><span class=\"o\">)</span>\n                        <span class=\"s2\">\"ALIGN\"</span> - to perform alignment using bowtie and output\n                        bed files<span class=\"p\">;</span> <span class=\"m\">3</span><span class=\"o\">)</span> <span class=\"s2\">\"NORM\"</span> - to normalize data to reference\n                        <span class=\"o\">(</span>spike in<span class=\"o\">)</span><span class=\"p\">;</span> <span class=\"m\">4</span><span class=\"o\">)</span> <span class=\"s2\">\"MERGE\"</span> - to merge bedgraphs <span class=\"m\">5</span><span class=\"o\">)</span> <span class=\"s2\">\"SEACR\"</span>\n                        - to perform SEACR<span class=\"p\">;</span> <span class=\"m\">6</span><span class=\"o\">)</span> <span class=\"s2\">\"MACS\"</span> - to perform MACS2<span class=\"p\">;</span> <span class=\"m\">7</span><span class=\"o\">)</span>\n                        <span class=\"s2\">\"AUC\"</span> - to calculate AUC between normalized bedgraph\n                        using a peak file<span class=\"p\">;</span> <span class=\"m\">8</span><span class=\"o\">)</span> <span class=\"s2\">\"GENOMESFILE\"</span> - print location\n                        of genomes.json file.\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --sample_flag SAMPLE_FLAG, -sf SAMPLE_FLAG\n                        FOR MAKERUNSHEET only string to identify samples of\n                        interest in a fastq folder\n  --fastq_folder FASTQ_FOLDER, -fq FASTQ_FOLDER\n                        For MAKERUNSHEET only: Pathname of fastq folder <span class=\"o\">(</span>files\n                        must be organized in folders named by sample<span class=\"o\">)</span>\n  --genome_key GENOME_KEY, -gk GENOME_KEY\n                        For MAKERUNSHEET only: abbreviation to use <span class=\"s2\">\"installed\"</span>\n                        genomes in the runsheet <span class=\"o\">(</span>See README.md <span class=\"k\">for</span> more\n                        details\n  --filter_high FILTER_HIGH, -fh FILTER_HIGH\n                        For ALIGN only: upper limit of fragment size to\n                        exclude, defaults is no upper limit. OPTIONAL\n  --filter_low FILTER_LOW, -fl FILTER_LOW\n                        For ALIGN only: lower limit of fragment size to\n                        exclude, defaults is no lower limit. OPTIONAL\n  --output OUTPUT, -o OUTPUT\n                        For MAKERUNSHEET only: Pathname to write runsheet.csv\n                        file <span class=\"o\">(</span>folder must exist already!!<span class=\"o\">)</span>, Defaults to\n                        current directory\n  --runsheet RUNSHEET, -r RUNSHEET\n                        tab-delim file with sample fields as defined in the\n                        script. - REQUIRED <span class=\"k\">for</span> all <span class=\"nb\">jobs</span> except MAKERUNSHEET\n  --log_prefix LOG_PREFIX, -l LOG_PREFIX\n                        Prefix specifying log files <span class=\"k\">for</span> henipipe output from\n                        henipipe calls. OPTIONAL\n  --select SELECT, -s SELECT\n                        To only run the selected row in the runsheet, OPTIONAL\n  --debug, -d           To print commands <span class=\"o\">(</span>For testing flow<span class=\"o\">)</span>. OPTIONAL\n  --bowtie_flags BOWTIE_FLAGS, -b BOWTIE_FLAGS\n                        For ALIGN: bowtie flags, OPTIONAL\n  --cluster <span class=\"o\">{</span>PBS,SLURM<span class=\"o\">}</span>, -c <span class=\"o\">{</span>PBS,SLURM<span class=\"o\">}</span>\n                        Cluster software. OPTIONAL Currently supported: PBS\n                        and SLURM\n  --threads THREADS, -t THREADS\n                        FOR ALIGN: number of threads\n  --gb_ram GB_RAM, -gb GB_RAM\n                        FOR ALIGN: gigabytes of RAM\n  --norm_method <span class=\"o\">{</span>coverage,read_count,spike_in<span class=\"o\">}</span>, -n <span class=\"o\">{</span>coverage,read_count,spike_in<span class=\"o\">}</span>\n                        For ALIGN and NORM: Normalization method, by\n                        <span class=\"s2\">\"read_count\"</span>, <span class=\"s2\">\"coverage\"</span>, or <span class=\"s2\">\"spike_in\"</span>. If method is\n                        <span class=\"s2\">\"spike_in\"</span>, HeniPipe will align to the spike_in\n                        reference genome provided in runsheet. OPTIONAL\n  --user USER, -u USER  user <span class=\"k\">for</span> submitting <span class=\"nb\">jobs</span> - defaults to username.\n                        OPTIONAL\n  --SEACR_norm <span class=\"o\">{</span>non,norm<span class=\"o\">}</span>, -Sn <span class=\"o\">{</span>non,norm<span class=\"o\">}</span>\n                        For SEACR: Normalization method<span class=\"p\">;</span> default is\n                        <span class=\"s2\">\"non\"</span>-normalized, <span class=\"k\">select</span> <span class=\"s2\">\"norm\"</span> to normalize using\n                        SEACR. OPTIONAL\n  --SEACR_stringency <span class=\"o\">{</span>stringent,relaxed<span class=\"o\">}</span>, -Ss <span class=\"o\">{</span>stringent,relaxed<span class=\"o\">}</span>\n                        FOR SEACR: Default will run as <span class=\"s2\">\"stringent\"</span>, other\n                        option is <span class=\"s2\">\"relaxed\"</span>. OPTIONAL\n  --keep_files, -k      FOR ALIGN: use this flag to turn off piping <span class=\"o\">(</span>Will\n                        generate all files<span class=\"o\">)</span>.\n  --verbose, -v         Run with some additional ouput - not much though...\n                        OPTIONAL\n</pre>\n<h2>Runsheet</h2>\n<p>The runsheet is the brains of the henipipe workflow.  You can make a runsheet using the MAKERUNSHEET command.  This command will parse a directory of fastq folder (specified using the -fq flag; fastq files should be organized in subfolders named by sample) and will find fastq mates (R1 and R2 - Currently only PE sequencing is supported).  Running henipipe MAKERUNSHEET will find and pair these fastqs for you and populate the runsheet with genome index locations (see below) and output filenames with locations as specified using the -o flag.  Note that thenipie output will default to the current working directory if no location is otherwise specified.  There is an option for selecting only folders that contain a specific string (using the -sf flag).  <em>After generation of a runsheet (csv file), you should take a look at it in Excel or Numbers to make sure things look okay...</em>  Here are the columns that you can include.  Order is irrelevant.  Column names (headers) exactly as written below are required.</p>\n<h3>Example Runsheet</h3>\n<p><strong>absolute pathnames are required for runsheets</strong></p>\n<table>\n<thead>\n<tr>\n<th>sample</th>\n<th>fasta</th>\n<th>spikein_fasta</th>\n<th>fastq1</th>\n<th>fastq2</th>\n<th>bed_out</th>\n<th>spikein_bed_out</th>\n<th>genome_sizes</th>\n<th>bedgraph</th>\n<th>SEACR_key</th>\n<th>SEACR_out</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mys1</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>4JS</td>\n<td>path</td>\n</tr>\n<tr>\n<td>mys2</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>path</td>\n<td>4JS_CONTROL</td>\n<td>path</td>\n</tr></tbody></table>\n<ul>\n<li>'sample' name of the sample REQUIRED.</li>\n<li>'fasta' location of the Bowtie2 indexed fasta file REQUIRED.</li>\n<li>'spikein_fasta' location of the Bowtie2 indexed fasta file for spike_in normalization OPTIONAL.</li>\n<li>'fastq1' a tab seperated string of filenames denoting location of all R1 files for a sample REQUIRED.</li>\n<li>'fastq2' a tab seperated string of filenames denoting location of all R2 files for a sample REQUIRED.</li>\n<li>'bed_out' name of the location for the aligned and sorted bam file REQUIRED.</li>\n<li>'spikein_bed_out' name of the location for the aligned and sorted bam file OPTIONAL.</li>\n<li>'genome_sizes' REQUIRED.</li>\n<li>'bedgraph' file name of normalized bedgraph REQUIRED.</li>\n<li>'SEACR_key' sample key corresponding to sample groups to be run against an IgG (or other) contol.  all samples to be run against a control are given the same name and the control is labeleled with the an additional string underscore + 'CONTROL' (i.e. 4JS_CONTROL) OPTIONAL.</li>\n<li>'SEACR_out' file name of SEACR output OPTIONAL.</li>\n</ul>\n<h2>Genomes and adding genome locations</h2>\n<p>Henipipe uses Bowtie2 for alignment.  As such, you should have a previously indexed location of your genome accessible to henipipe.  This location is referred to in henipipe as the 'fasta'.  Similarly, one should provide the location of the spike_in indexed reference genome in the 'spikein_fasta' field.  For bedgraph conversion, a text file of genome sizes text file is also needed.  See the following for a discussion on how to make a 'genome_sizes' file <a href=\"https://www.biostars.org/p/173963/\" rel=\"nofollow\">https://www.biostars.org/p/173963/</a>.</p>\n<p>Henipipe provides an easy way to add these locations to your system for repeated use using the --genome_key (-gk) option during MAKERUNSHEET commands.  A file called genomes.json can be found in the 'data' directory of the henipipe install folder.  This file can be edited to include those locations you want to regularly put in the runsheet.  The following shows an example of a genomes.json file.  The files \"top level\" is a name that can be used in the --genome_key field (-gk) during runsheet generation to populate the columns of the runsheet with fasta, spikein_fasta, and genome_sizes locations associated with that genome_key.  The 'default' key will be used when no genome_key is specified.</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"default\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"fasta\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/path/path/hg38/bowtie2_index\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"genome_sizes\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/path/path/hg38/genome_sizes.txt\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"spikein_fasta\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/path/path/Ecoli/bowtie2_index\"</span><span class=\"p\">},</span>\n    <span class=\"nt\">\"my_hg38\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"fasta\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/shared/biodata/ngs/Reference/iGenomes/Homo_sapiens/UCSC/hg38/Sequence/Bowtie2Index/genome\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"genome_sizes\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/shared/ngs/illumina/henikoff/solexa/databases/human/hg38/chr_lens.txt\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"spikein_fasta\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/shared/ngs/illumina/henikoff/Bowtie2/Ecoli\"</span>\n    <span class=\"p\">}</span>\n</pre>\n<h2>Doing a henipipe run</h2>\n<p>Say your fastqs live within within subfolders of a folder 'fastq' in the folder 'data'.  So if you were to...</p>\n<pre><span class=\"nb\">cd</span> /data/fastq\nls\n</pre>\n<p>... you'd get a bunch of folders, each of which would be filled with fastqs.  Each folder name should correspond to a sample name.</p>\n<p><strong>To run henipipe, do the following...</strong></p>\n<ol>\n<li>Make a new output directory 'henipipe'.</li>\n<li>Go into that directory and make a runsheet pointing to the fastq folder i.e. the folder level above.  (at the command line, henipipe is cool with either relative or absolute pathnames; but as stated earlier, absolute pathnames are required for the runsheet.)</li>\n<li>Optionally you can only select directories of fastq files that contain in their name the string denoted using the -sf flag.</li>\n<li>After inspecting and completing the runsheet, run ALIGN, NORM, SEACR, and AUC.</li>\n<li>Sit back have a cocktail.</li>\n</ol>\n<pre><span class=\"nb\">cd</span> ..\nmkdir henipipe\n<span class=\"nb\">cd</span> henipipe\nhenipipe MAKERUNSHEET -fq ../fastq -sf MySampleDirectoriesStartWithThisString -o .\nhenipipe ALIGN -r runsheet.csv\nhenipipe NORM -r runsheet.csv\nhenipipe SEACR -r runsheet.csv\nmkdir auc\nhenipipe AUC -r runsheet.csv -o auc\n</pre>\n<h2>Acknowledgements</h2>\n<p>Written by Scott Furlan with code inspiration from Andrew Hill's cellwrapper; Henipipe includes a python script samTobed.py which takes code from a fantastic sam reader \"simplesam\" - <a href=\"https://github.com/mdshw5/simplesam\" rel=\"nofollow\">https://github.com/mdshw5/simplesam</a>.  samTobed.py uses specific sam-sorting parameters similar to those written in Jorja Henikoff's PERL script.</p>\n\n          </div>"}, "last_serial": 7185472, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "d3243fb751647b63f06a199e41bb5d3d", "sha256": "d2f7e90b0ae2b5854087ef6808662f3884208b5ff3ec1f1cbd5a4ddfbcf9f63a"}, "downloads": -1, "filename": "henipipe-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d3243fb751647b63f06a199e41bb5d3d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 35694, "upload_time": "2019-09-17T15:51:26", "upload_time_iso_8601": "2019-09-17T15:51:26.601198Z", "url": "https://files.pythonhosted.org/packages/54/68/5a7ebd488f417a524bbe64fca6abc3396086b92c89f21ad85bfb0399b83e/henipipe-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48d68795c26b2ab0e4a8f91c9b451c89", "sha256": "0dd9e899bd1b2bf3e29580d1b5550ca64298acaa2789888fa265737e358f8ec5"}, "downloads": -1, "filename": "henipipe-0.4.tar.gz", "has_sig": false, "md5_digest": "48d68795c26b2ab0e4a8f91c9b451c89", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 29126, "upload_time": "2019-09-17T15:51:28", "upload_time_iso_8601": "2019-09-17T15:51:28.517764Z", "url": "https://files.pythonhosted.org/packages/43/a8/e0e6a6765843b8b6333cc511ba0f2d67ed971f440a910321297756c669c8/henipipe-0.4.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "0e8ed5a5246bb55b6dffe2857a5c4168", "sha256": "e46acd24dc24aaf64f46d80f0df796d8b7e0f2913f4b639b38d70c3c328b122c"}, "downloads": -1, "filename": "henipipe-0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "0e8ed5a5246bb55b6dffe2857a5c4168", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 30573, "upload_time": "2019-09-25T18:16:11", "upload_time_iso_8601": "2019-09-25T18:16:11.185047Z", "url": "https://files.pythonhosted.org/packages/85/c9/3a95e10097daa3502d75def19a0bbd2490a2e9db6a2f0410bcd0ca8a6f7b/henipipe-0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0783ee31f657a44084b729a4ca25885", "sha256": "15236251a9cfa217df432e470fba4f34462d6e29f9f8b14c3f1fa2b535810f77"}, "downloads": -1, "filename": "henipipe-0.7.tar.gz", "has_sig": false, "md5_digest": "d0783ee31f657a44084b729a4ca25885", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 31552, "upload_time": "2019-09-25T18:16:13", "upload_time_iso_8601": "2019-09-25T18:16:13.257534Z", "url": "https://files.pythonhosted.org/packages/3f/64/b3c90a909893c5593eff1018cf74fdb6def90dd08a81b008e5f26b6eef1a/henipipe-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "dd87ce3bfdc49fcd32e3919f0ddbf24c", "sha256": "b79a0d113f8698dbd9fe389c3507839a385d67c76a715b1cdf4513dbbc475325"}, "downloads": -1, "filename": "henipipe-0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "dd87ce3bfdc49fcd32e3919f0ddbf24c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 30685, "upload_time": "2019-09-25T22:31:39", "upload_time_iso_8601": "2019-09-25T22:31:39.949834Z", "url": "https://files.pythonhosted.org/packages/4e/70/f1befba1b8456922a3742a278b8b1fa71f940c8821905708ad3b58c5125d/henipipe-0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad603ff3da3db44ee76d19e119cb31c2", "sha256": "fc2d1efb4fd66f63c9e238f0f10245efe1e7e154cbe2b8a316f8ef530c273c4a"}, "downloads": -1, "filename": "henipipe-0.8.tar.gz", "has_sig": false, "md5_digest": "ad603ff3da3db44ee76d19e119cb31c2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 31667, "upload_time": "2019-09-25T22:31:42", "upload_time_iso_8601": "2019-09-25T22:31:42.268148Z", "url": "https://files.pythonhosted.org/packages/02/52/9ef73ed5fd84822cf0e4ec7b3b7b4c140938ebf5d4e1f4ebe5c2b7b720a8/henipipe-0.8.tar.gz", "yanked": false}], "0.81": [{"comment_text": "", "digests": {"md5": "eec19d51cd5e66ce6188709005074d13", "sha256": "ede4bc50487462482c1164d490ccbe1731f673a208e75afc4c1e8c266b2a49fb"}, "downloads": -1, "filename": "henipipe-0.81-py3-none-any.whl", "has_sig": false, "md5_digest": "eec19d51cd5e66ce6188709005074d13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 30895, "upload_time": "2019-09-26T19:42:57", "upload_time_iso_8601": "2019-09-26T19:42:57.022068Z", "url": "https://files.pythonhosted.org/packages/d0/d6/51440714c859b079b011f875b252e922aaa0155bac9024be7dc1f3bb76ca/henipipe-0.81-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42796f3987b3ba53192c4756f4c55ec8", "sha256": "cb05a24a71e3cc259ae9b2ca10e58ba3e57818a7bfdc75b61e34c494953d0622"}, "downloads": -1, "filename": "henipipe-0.81.tar.gz", "has_sig": false, "md5_digest": "42796f3987b3ba53192c4756f4c55ec8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 31917, "upload_time": "2019-09-26T19:42:58", "upload_time_iso_8601": "2019-09-26T19:42:58.486542Z", "url": "https://files.pythonhosted.org/packages/bd/fb/43a583bd00ae10e9b7748a34f93d220c2cba9131344c53de82e1f321a0de/henipipe-0.81.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "fef0b8c071bcf6ba0232ebe6efe28bd8", "sha256": "6dca2b166b02ab357f2f67050e39758555dacbf0c9415221e74d005736ec70bd"}, "downloads": -1, "filename": "henipipe-0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "fef0b8c071bcf6ba0232ebe6efe28bd8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 30710, "upload_time": "2019-09-29T05:38:32", "upload_time_iso_8601": "2019-09-29T05:38:32.751865Z", "url": "https://files.pythonhosted.org/packages/7c/be/3e53fa7fbb715ebd3a08c0b23f22adc6c2a342cb66ff181b84c6d8158096/henipipe-0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8471e5bcbadecb61f61d15846e6af48", "sha256": "86cfee8fcf805b448997486fa615b36354dfebaa97ec783a60ee424280431bdd"}, "downloads": -1, "filename": "henipipe-0.9.tar.gz", "has_sig": false, "md5_digest": "a8471e5bcbadecb61f61d15846e6af48", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 31797, "upload_time": "2019-09-29T05:38:34", "upload_time_iso_8601": "2019-09-29T05:38:34.494240Z", "url": "https://files.pythonhosted.org/packages/ea/a7/83639a7d765ae65afb7b833c760568ea29f06b8cb26b5224a646ebae9696/henipipe-0.9.tar.gz", "yanked": false}], "0.92": [{"comment_text": "", "digests": {"md5": "902fc2391e2bc66bc34b7a3817363a35", "sha256": "34c4e720dea15baae4a127a6af9a9edc0e4c8e5b4576ca27d209a40ee48270e4"}, "downloads": -1, "filename": "henipipe-0.92-py3-none-any.whl", "has_sig": false, "md5_digest": "902fc2391e2bc66bc34b7a3817363a35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 30726, "upload_time": "2019-09-29T05:41:05", "upload_time_iso_8601": "2019-09-29T05:41:05.699427Z", "url": "https://files.pythonhosted.org/packages/ed/00/210ea25907e892436ab9ebc020adda5f915e89dc10c78cbae1d7b48ac7b7/henipipe-0.92-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e920039cbe0b037fe28853b24eb4ac30", "sha256": "f63197d5869d1e1dfd932c601ffaa66c278018dd65626e09096e31a32d4f0795"}, "downloads": -1, "filename": "henipipe-0.92.tar.gz", "has_sig": false, "md5_digest": "e920039cbe0b037fe28853b24eb4ac30", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 31793, "upload_time": "2019-09-29T05:41:07", "upload_time_iso_8601": "2019-09-29T05:41:07.468381Z", "url": "https://files.pythonhosted.org/packages/ca/3e/ef8175f8128c1cfcb3cebe4cc08d2bbd02393f078e9d528cacdcae00cfa0/henipipe-0.92.tar.gz", "yanked": false}], "0.93": [{"comment_text": "", "digests": {"md5": "4677aa0069e2bfed3cea38696ef8620f", "sha256": "9c0cd908a50ba7ecc14e84e8d2ae256f0d0303fec31e07586c07771f0e002166"}, "downloads": -1, "filename": "henipipe-0.93-py3-none-any.whl", "has_sig": false, "md5_digest": "4677aa0069e2bfed3cea38696ef8620f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 30739, "upload_time": "2019-10-03T18:14:37", "upload_time_iso_8601": "2019-10-03T18:14:37.096023Z", "url": "https://files.pythonhosted.org/packages/ea/82/ab2f30439aae1559169d2cc6e090f20206008919d3de7761ec040f09ec3d/henipipe-0.93-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6daa6be3b7e044dda2923a4374bae49", "sha256": "2e752581424a70e155915436ae9ec59e158f936eb6df973898126a0fe759cd67"}, "downloads": -1, "filename": "henipipe-0.93.tar.gz", "has_sig": false, "md5_digest": "b6daa6be3b7e044dda2923a4374bae49", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 31806, "upload_time": "2019-10-03T18:14:39", "upload_time_iso_8601": "2019-10-03T18:14:39.645513Z", "url": "https://files.pythonhosted.org/packages/08/0d/7e143747b755b56027b6fd05e83f75d1ab1af92a516e7c6512580113e3ff/henipipe-0.93.tar.gz", "yanked": false}], "0.94": [{"comment_text": "", "digests": {"md5": "b640037a5eca0b4d400c4bb17993b17e", "sha256": "198abec7025d89e7342d7cb1132a69fa2d6c62895999bcf427bc0b6e4b2aa959"}, "downloads": -1, "filename": "henipipe-0.94-py3-none-any.whl", "has_sig": false, "md5_digest": "b640037a5eca0b4d400c4bb17993b17e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 34230, "upload_time": "2020-01-30T07:02:33", "upload_time_iso_8601": "2020-01-30T07:02:33.703469Z", "url": "https://files.pythonhosted.org/packages/9c/67/5a8918ecdb733794965e9b37b44c47e776aa22efabad06b0f1ea55dc6f2c/henipipe-0.94-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2287a3f8b87933074c5cf0231c38a4c", "sha256": "86530a579a0198c2fa081b66a59175904422edd02e904c735b5663444ccf9eee"}, "downloads": -1, "filename": "henipipe-0.94.tar.gz", "has_sig": false, "md5_digest": "a2287a3f8b87933074c5cf0231c38a4c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 32946, "upload_time": "2020-01-30T07:02:35", "upload_time_iso_8601": "2020-01-30T07:02:35.081618Z", "url": "https://files.pythonhosted.org/packages/4d/12/42750d00063845ca8a13529bf0ec66ea46b0a0a0a29b8f5b986a57cf998e/henipipe-0.94.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "77ebc6f9ea95192f4aee640f1616caae", "sha256": "5ea0ac7671817eef501c3a45bead1009d54b060f933345ccd5da59526fbbea02"}, "downloads": -1, "filename": "henipipe-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "77ebc6f9ea95192f4aee640f1616caae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 33494, "upload_time": "2019-10-05T02:08:14", "upload_time_iso_8601": "2019-10-05T02:08:14.232034Z", "url": "https://files.pythonhosted.org/packages/e8/76/be5a2c98e2d91823b991a48755d0d855be72ff1919d838fdba9d3f8188aa/henipipe-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a045a41475721e2861f2191379c74c9", "sha256": "0d07eddee9619e2aa183f1bd0b649482873e87a970cdedf456b63d1cbe82ef96"}, "downloads": -1, "filename": "henipipe-1.0.1.tar.gz", "has_sig": false, "md5_digest": "8a045a41475721e2861f2191379c74c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 34256, "upload_time": "2019-10-05T02:08:16", "upload_time_iso_8601": "2019-10-05T02:08:16.184211Z", "url": "https://files.pythonhosted.org/packages/c1/9d/a6e8aa893dece2ffb5c97d857a9d1e06eb4b6887e3941bfd994f356eb4da/henipipe-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "5d179426354a18f02da7c1a505914c42", "sha256": "875301611934f08d111b5e4112389be8fee03b40beab616bc2750903e8a4ebad"}, "downloads": -1, "filename": "henipipe-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5d179426354a18f02da7c1a505914c42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 33495, "upload_time": "2019-10-10T21:43:36", "upload_time_iso_8601": "2019-10-10T21:43:36.963521Z", "url": "https://files.pythonhosted.org/packages/bc/54/0be9ac090f602e9cc41a886e97ace6e2d0dddd90763caac1976ebc631852/henipipe-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce36eafa47768b1f8337350b05cbbcab", "sha256": "785f9d0c92e83e7e60c3af3012f466a5de40b97aff4f0bb9b2d772f06b31628a"}, "downloads": -1, "filename": "henipipe-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ce36eafa47768b1f8337350b05cbbcab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 34262, "upload_time": "2019-10-10T21:43:38", "upload_time_iso_8601": "2019-10-10T21:43:38.979140Z", "url": "https://files.pythonhosted.org/packages/53/d3/a3ebfc6e70083acf94c1304e47e772c9cfd6e8a12e6e33955d3db0a6eeda/henipipe-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "2d7cc83fe4d0d51fee4a4c36918cacb2", "sha256": "626a215d8ac2e2a7ba011d8612cf3577e75686f90aa23a54ebd5ddfaca08d9ba"}, "downloads": -1, "filename": "henipipe-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2d7cc83fe4d0d51fee4a4c36918cacb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 33591, "upload_time": "2019-10-11T18:25:39", "upload_time_iso_8601": "2019-10-11T18:25:39.399634Z", "url": "https://files.pythonhosted.org/packages/ce/7c/4cb84451977521fa629b1f4dbc592c8b5b8275c15e81bba5e983fc96c972/henipipe-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bcb42816d67b8867570e4bda4fb2021", "sha256": "c0c62dc8a73864d50db77bf8fa3af8392f25eb67802a2b7490fe8c86d31c0ff2"}, "downloads": -1, "filename": "henipipe-1.0.3.tar.gz", "has_sig": false, "md5_digest": "4bcb42816d67b8867570e4bda4fb2021", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 34396, "upload_time": "2019-10-11T18:25:41", "upload_time_iso_8601": "2019-10-11T18:25:41.197491Z", "url": "https://files.pythonhosted.org/packages/3b/3c/9af139c13bb85f84e1cbdefe60344023c36fe1a67d2b8ecc56d0c11df6ca/henipipe-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "8bc66b4c117e5c2a661d34822d0e94fb", "sha256": "d08c92052e282a8c59d35cbe2b03742a0c6d87aa4e59c2f7d3f19c23725250cd"}, "downloads": -1, "filename": "henipipe-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8bc66b4c117e5c2a661d34822d0e94fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 35263, "upload_time": "2020-01-30T07:05:29", "upload_time_iso_8601": "2020-01-30T07:05:29.839847Z", "url": "https://files.pythonhosted.org/packages/e9/03/a031e794413b34a9fb74a271c6b02c873f5b1171b2138a3a604a4cdcfa8b/henipipe-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7e5c0c297295cce70f640e5c1a0df2b", "sha256": "01ec5746fa6cf1f1daa22995e4c5fd897b195b4324501f8a3dcb359eb2b895f3"}, "downloads": -1, "filename": "henipipe-1.0.4.tar.gz", "has_sig": false, "md5_digest": "e7e5c0c297295cce70f640e5c1a0df2b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 35541, "upload_time": "2020-01-30T07:05:31", "upload_time_iso_8601": "2020-01-30T07:05:31.350785Z", "url": "https://files.pythonhosted.org/packages/b1/e7/c4859e6319020c4389aba32fd84e70bcd60b02b5c689edb51c09117e0133/henipipe-1.0.4.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "0690d4889d49d27adec534d43a369f9d", "sha256": "353f535f141e828a35beec8c8ea1efa328346bbe3bfa8a3aee777b2eac35cab5"}, "downloads": -1, "filename": "henipipe-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0690d4889d49d27adec534d43a369f9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 36099, "upload_time": "2020-02-10T23:38:58", "upload_time_iso_8601": "2020-02-10T23:38:58.809950Z", "url": "https://files.pythonhosted.org/packages/ca/d9/4b84d86aef5a7c155153fb923bcb38c387d7d6133f9cb5d4806b81c2f7c9/henipipe-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6b0ac40ac5ad2ad54bf62a6c107dc4a", "sha256": "01000b7fb5126440e30d3fa37b79e45e02341c8364b55509963928bef14016a7"}, "downloads": -1, "filename": "henipipe-1.1.1.tar.gz", "has_sig": false, "md5_digest": "a6b0ac40ac5ad2ad54bf62a6c107dc4a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 36498, "upload_time": "2020-02-10T23:39:00", "upload_time_iso_8601": "2020-02-10T23:39:00.444044Z", "url": "https://files.pythonhosted.org/packages/e2/78/876b07cfb81b582e567eb58e056ec92d2357ac30772555095745a81b8172/henipipe-1.1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "0d33313337070acee0577e47ad3c60dc", "sha256": "a73831846a35f73d7e5fe049e3afdbc5f2ce4311327434d96cebf3d90c3b6ad1"}, "downloads": -1, "filename": "henipipe-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0d33313337070acee0577e47ad3c60dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 41114, "upload_time": "2020-02-13T05:45:52", "upload_time_iso_8601": "2020-02-13T05:45:52.584847Z", "url": "https://files.pythonhosted.org/packages/86/d5/12955eb72f495402df24738e9f5c853f72af9ac52f07109a6e79b8a14c0d/henipipe-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3508034bd71ddf453e86e3c37d04f275", "sha256": "78d775901095b64d1c1d40d64d3caa9f813570a0308c1bc98754e1deaa57cc3d"}, "downloads": -1, "filename": "henipipe-1.2.tar.gz", "has_sig": false, "md5_digest": "3508034bd71ddf453e86e3c37d04f275", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 37445, "upload_time": "2020-02-13T05:45:54", "upload_time_iso_8601": "2020-02-13T05:45:54.325882Z", "url": "https://files.pythonhosted.org/packages/99/11/fb14f622b6eaa0dc27712800c35edb93d21e64434a895d31c807f1b53eb6/henipipe-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "0bdb72e346bb5acad36f3b2c85ca333e", "sha256": "54a510053db26bd4a74a142c7799a6dc8c00fff2f271ff407f0754fff1dd7879"}, "downloads": -1, "filename": "henipipe-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0bdb72e346bb5acad36f3b2c85ca333e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 41145, "upload_time": "2020-02-13T05:52:43", "upload_time_iso_8601": "2020-02-13T05:52:43.025217Z", "url": "https://files.pythonhosted.org/packages/8b/8f/e26df55e9f9b11e1c34343cdc45e8a642109659542d7ff10180c07db9ce9/henipipe-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c19241276c93bf3a2bc02ab3bda6513", "sha256": "eb8caa1c91ed9e6975385819cf6e46a56bbd9f9bf11b3bcbc443e9490088e8e5"}, "downloads": -1, "filename": "henipipe-1.2.1.tar.gz", "has_sig": false, "md5_digest": "6c19241276c93bf3a2bc02ab3bda6513", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 37451, "upload_time": "2020-02-13T05:52:44", "upload_time_iso_8601": "2020-02-13T05:52:44.751708Z", "url": "https://files.pythonhosted.org/packages/1c/21/03487fb4038600bb0065d5ce2fc79847d4f141d8fdc4d5cea607e80dd921/henipipe-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "654436f1da22b020f2a587d60c0c5f53", "sha256": "5fe896561d548463a04ed49b51e2c0f3927b6f6d63ebce3b1d77988a3c3c827a"}, "downloads": -1, "filename": "henipipe-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "654436f1da22b020f2a587d60c0c5f53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 41157, "upload_time": "2020-02-13T15:06:13", "upload_time_iso_8601": "2020-02-13T15:06:13.472496Z", "url": "https://files.pythonhosted.org/packages/87/7c/85d28b1214dde1d9bac423289565b7797addca359fea32491b2c77f038d8/henipipe-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdd6942df43b6e992aeb67cfc45fd0ef", "sha256": "1d0668d6a00133f680d6f90b1946805043153f7620565abd5a020208191ed271"}, "downloads": -1, "filename": "henipipe-1.2.2.tar.gz", "has_sig": false, "md5_digest": "fdd6942df43b6e992aeb67cfc45fd0ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 37475, "upload_time": "2020-02-13T15:06:15", "upload_time_iso_8601": "2020-02-13T15:06:15.482895Z", "url": "https://files.pythonhosted.org/packages/56/05/17d4dc53dda6f14fda97a0435010943bab769dd71870a5140cc8dd488e0a/henipipe-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "b2e358b62a93e0b5cf6b991183621814", "sha256": "886b284270b7fd096635411e49ae025eef8872f1d8b75eb06f6c5e65d363e180"}, "downloads": -1, "filename": "henipipe-1.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b2e358b62a93e0b5cf6b991183621814", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 41330, "upload_time": "2020-02-14T06:32:40", "upload_time_iso_8601": "2020-02-14T06:32:40.876723Z", "url": "https://files.pythonhosted.org/packages/77/53/b89b56ac5047246753bebbed31577b29d9956cc83f324783c2c3bfde2b56/henipipe-1.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3cea9f8dcda455240f4737e5b0f3a8ce", "sha256": "01c65bd1499c1fafb6af7c9ee18a95a843653acadc80fc97421a14c3e6f0dd28"}, "downloads": -1, "filename": "henipipe-1.2.3.tar.gz", "has_sig": false, "md5_digest": "3cea9f8dcda455240f4737e5b0f3a8ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 37632, "upload_time": "2020-02-14T06:32:42", "upload_time_iso_8601": "2020-02-14T06:32:42.534900Z", "url": "https://files.pythonhosted.org/packages/4f/48/f9b579439593ef50281b66983916eb4487c1d0bba2292b2a25f8fc7ec768/henipipe-1.2.3.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "6b118be6cf59ae1dbc2d563d367d4357", "sha256": "935409185859a70b9597e152b09c236ca5f4042018f826d80c7d9faf22765f14"}, "downloads": -1, "filename": "henipipe-1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6b118be6cf59ae1dbc2d563d367d4357", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 41300, "upload_time": "2020-04-28T00:55:15", "upload_time_iso_8601": "2020-04-28T00:55:15.964550Z", "url": "https://files.pythonhosted.org/packages/22/7b/e529e224e39959b289b3fe963fa6a2030c913efac19891d31fe19c5a4b84/henipipe-1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1158b3b28447955cc9ebcf21df0f299c", "sha256": "e6d2649b5dc744961c65905888e5dd3d84013b90e375a3ca80f326fc6aec182b"}, "downloads": -1, "filename": "henipipe-1.3.tar.gz", "has_sig": false, "md5_digest": "1158b3b28447955cc9ebcf21df0f299c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 37162, "upload_time": "2020-04-28T00:55:17", "upload_time_iso_8601": "2020-04-28T00:55:17.449533Z", "url": "https://files.pythonhosted.org/packages/3b/a9/6c3e5069f58f52ae64b10ceedd76e63ae2253a854beca6398a82d4b9abcd/henipipe-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "febc1ee37a275cb4d5693aeb54d4950f", "sha256": "fac8dbe0ae54442f2d957372e00cb390b26c3ddd84f4ab25ab69d79f84cb5093"}, "downloads": -1, "filename": "henipipe-1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "febc1ee37a275cb4d5693aeb54d4950f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 41314, "upload_time": "2020-05-07T05:30:49", "upload_time_iso_8601": "2020-05-07T05:30:49.425306Z", "url": "https://files.pythonhosted.org/packages/a9/c6/2c9cacccbda906ee18110f0e4e35051906ac4bda5fd041a09ff27e669a01/henipipe-1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "053300273143229e86086a8d511270d3", "sha256": "ebd473ccdb892298a9c9b5c12690afec6cad4a70d651c786f5e06813cbc4606e"}, "downloads": -1, "filename": "henipipe-1.4.tar.gz", "has_sig": false, "md5_digest": "053300273143229e86086a8d511270d3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 37176, "upload_time": "2020-05-07T05:30:50", "upload_time_iso_8601": "2020-05-07T05:30:50.852678Z", "url": "https://files.pythonhosted.org/packages/0b/42/b4eb8efe750d8ed1943dc4d561e77499c063913c48a97254300bcbc80591/henipipe-1.4.tar.gz", "yanked": false}], "1.41": [{"comment_text": "", "digests": {"md5": "41714f9c24f65d658e61d37071a05132", "sha256": "75f46152e4c9efb20a7785db42943165e5095ff3850733255cb3affd4faa6c05"}, "downloads": -1, "filename": "henipipe-1.41-py3-none-any.whl", "has_sig": false, "md5_digest": "41714f9c24f65d658e61d37071a05132", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 41329, "upload_time": "2020-05-07T05:31:34", "upload_time_iso_8601": "2020-05-07T05:31:34.129638Z", "url": "https://files.pythonhosted.org/packages/fb/e3/2b2447952c2e452e71219bffc8fe78a06f369cabb5ae9f1cd923d527c811/henipipe-1.41-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abd10c227dbe953ff16fb63767f69e65", "sha256": "32ffe8c834c3213c8f60d60d1d63f69d7e9ffeba8ba2dd3e55a36fef69158c69"}, "downloads": -1, "filename": "henipipe-1.41.tar.gz", "has_sig": false, "md5_digest": "abd10c227dbe953ff16fb63767f69e65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 37188, "upload_time": "2020-05-07T05:31:35", "upload_time_iso_8601": "2020-05-07T05:31:35.602771Z", "url": "https://files.pythonhosted.org/packages/e2/36/f929f24b4384dcdcef616a71b3bec836906c28edefd4fe35a1aedf6a73c7/henipipe-1.41.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "41714f9c24f65d658e61d37071a05132", "sha256": "75f46152e4c9efb20a7785db42943165e5095ff3850733255cb3affd4faa6c05"}, "downloads": -1, "filename": "henipipe-1.41-py3-none-any.whl", "has_sig": false, "md5_digest": "41714f9c24f65d658e61d37071a05132", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.5", "size": 41329, "upload_time": "2020-05-07T05:31:34", "upload_time_iso_8601": "2020-05-07T05:31:34.129638Z", "url": "https://files.pythonhosted.org/packages/fb/e3/2b2447952c2e452e71219bffc8fe78a06f369cabb5ae9f1cd923d527c811/henipipe-1.41-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abd10c227dbe953ff16fb63767f69e65", "sha256": "32ffe8c834c3213c8f60d60d1d63f69d7e9ffeba8ba2dd3e55a36fef69158c69"}, "downloads": -1, "filename": "henipipe-1.41.tar.gz", "has_sig": false, "md5_digest": "abd10c227dbe953ff16fb63767f69e65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.5", "size": 37188, "upload_time": "2020-05-07T05:31:35", "upload_time_iso_8601": "2020-05-07T05:31:35.602771Z", "url": "https://files.pythonhosted.org/packages/e2/36/f929f24b4384dcdcef616a71b3bec836906c28edefd4fe35a1aedf6a73c7/henipipe-1.41.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:37 2020"}