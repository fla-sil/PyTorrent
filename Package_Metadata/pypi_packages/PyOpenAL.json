{"info": {"author": "Zuzu_Typ", "author_email": "zuzu.typ@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: Public Domain", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Games/Entertainment", "Topic :: Multimedia :: Sound/Audio"], "description": "# PyOpenAL\n\nPyOpenAL provides OpenAL bindings for python as well as an interface to them.\n\nIt also provides a simple way to play WAVE and - if [PyOgg](https://github.com/Zuzu-Typ/PyOgg) is installed - even OGG Vorbis, OGG Opus and FLAC files.\n\nYou can install it using the PyPI:\n\n\tpip install PyOpenAL\n\n\nPyOpenAL requires a shared OpenAL library (e.g. OpenAL32.dll), one of which the Windows distributions already come with ([OpenAL Soft](http://kcat.strangesoft.net/openal.html) by kcat). \nYou can use the [official OpenAL library](http://www.openal.org/) (deprecated) or any other compatible library, like the aforementioned [OpenAL Soft library](http://kcat.strangesoft.net/openal.html), which is still actively developed.\n\nPyOpenAL provides OpenAL bindings, as you would find them in C++, meaning you can follow any [OpenAL C++ tutorial](http://www.openal.org/documentation/) with Python.\nOpenAL's methods expect C types as arguments, which means you will have to convert Python's types to C types using [ctypes](https://docs.python.org/3/library/ctypes.html) if you want to use them directly.\nDon't worry though, PyOpenAL can be used without the need to do that.\n\nI removed the support for ALUT, because it is basically impossible to build nowadays. If you want ALUT support, please use the original [python-openal from forrestv](https://github.com/forrestv/python-openal)\n\n### Examples\n##### Playing a wave file\n```python\n# import PyOpenAL (will require an OpenAL shared library)\nfrom openal import * \n\n# import the time module, for sleeping during playback\nimport time\n\n# open our wave file\nsource = oalOpen(\"test.wav\")\n\n# and start playback\nsource.play()\n\n# check if the file is still playing\nwhile source.get_state() == AL_PLAYING:\n\t# wait until the file is done playing\n\ttime.sleep(1)\n\n# release resources (don't forget this)\noalQuit()\n```\n##### Playing an OGG Opus file (with PyOgg)\n```python\n# This requires PyOgg to be installed ( pip install pyogg )\nfrom openal import * \n\nimport time\n\nsource = oalOpen(\"test.opus\")\n\nsource.play()\n\nwhile source.get_state() == AL_PLAYING:\n\ttime.sleep(1)\n\n# remember, don't forget to quit\n\toalQuit()\n```\n##### Streaming a file\n```python\nfrom openal import *\n\n# The following two lines are optional. You can use them, if you can't update the stream frequently enough\n# This one specifies how much data is supposed to be stored in each buffer (only applies for OGG Vorbis and Opus files)\npyoggSetStreamBufferSize(4096*4)\n# This one sets the maximum amount of buffers to be created at a time\noalSetStreamBufferCount(4)\n\nsourceStream = oalStream(\"test.ogg\")\n\nsourceStream.play()\n\nwhile sourceStream.get_state() == AL_PLAYING:\n\t# do stuff\n\t[...]\n\n\t# update the stream (load new data)\n\t# if you don't do this repeatedly, the stream will suffocate\n\tsourceStream.update()\n\noalQuit()\n```\n### Using OpenAL functions\n```python\n# Here we only import OpenAL's functions \n# (in case you don't need or want PyOpenAL's functions and classes)\nfrom openal.al import *\nfrom openal.alc import *\n\n[...]\n\n# It's as simple as that:\nalDistanceModel(AL_INVERSE_DISTANCE_CLAMPED)\n\n# Or a little more complicated, it really depends:\nalSourceUnqueueBuffers(source_id, 1, ctypes.pointer(ctypes.c_uint(buffer_ids[id])))\n\n[...]\n```\n### Reference (for PyOpenAL's own classes and functions)\n```\n<method> oalInit(device_specifier = None, context_attr_list = None) -> None\n\t# initializes PyOpenAL\n\t# this is called automatically, unless you set OAL_DONT_AUTO_INIT\n\t\t<c_char_p> device_specifier # you can set a custom device with this\n\t\t<c_int_p> context_attr_list # you can pass additional arguments to context creation\n\n<method> oalGetInit() -> <bool> initialized\n\t# finds out wether or not PyOpenAL is initialized\n\n<method> oalQuit() -> None\n\t# exits out of OpenAL and destroys all existing Sources and Buffers\n\n<method> oalOpen(path, ext_hint = None) -> Source\n\t# loads a WAVE / Ogg Vorbis / Ogg Opus / FLAC file to a Source object\n\t\t<str> path # path to the file (relative or absolute)\n\t\t<str> ext_hint # if the filetype is not wav, wave, ogg, vorbis or opus, you should supply a hint to the extension\n\n<method> oalStream(path, ext_hint = None) -> SourceStream\n\t# loads a WAVE /  Ogg Vorbis / Ogg Opus / FLAC file to a SourceStream object, that streams the data\n\t# you should use this instead of Source for Soundtracks or other long tracks (as it uses less memory)\n\t# you will have to update it frequently to avoid suffocation of the stream\n\t# you can neither rewind nor loop a SourceStream (currently)\n\t\t<str> path # path to the file (relative or absolute)\n\t\t<str> ext_hint # if the filetype is not ogg, vorbis or opus, you should supply a hint to the extension\n\n<class> openal.Listener()\n\t# class for hadling the listener (you)\n\t# an instance of this class is created when you import PyOpenAL.\n\t# it can be retrieved using oalGetListener()\n\t# you do NOT have to create an instance yourself\n\n\t<method> Listener.move(v)\n\t\t# move the listener by v\n\t\t\t<tuple or list> v # a translation vector represented as (x, y, z)\n\n\t<method> Listener.move_to(v)\n\t\t# set the listener's position to v\n\t\t\t<tuple or list> v # a position vector represented as (x, y, z)\n\n\t<method> Listener.set_position(v)\n\t\t# see Listener.move_to\n\n\t<method> Listener.set_orientation(v)\n\t\t# sets the listener's orientation to v\n\t\t\t<tuple or list> v # orientation represented as (frontX, frontY, frontZ, upX, upY, upZ)\n\n\t<method> Listener.set_velocity(v)\n\t\t# sets the listener's velocity to v\n\t\t\t<tuple or list> v # velocity represented as (vX, vY, vZ)\n\n\t<method> Listener.set_gain(value)\n\t\t# sets the listener's gain (volume) to value\n\t\t\t<float> value\n\n<method> openal.oalGetListener() -> Listener\n\t# returns PyOpenAL's Listener\n\n<class> openal.Source(buffer_ = None)\n\t# class for managing a source\n\t\t<Buffer> buffer_ # where this source finds it's data\n\n\t<method> Source.play() -> None\n\t\t# starts playing\n\n\t<method> Source.stop() -> None\n\t\t# stops playback\n\n\t<method> Source.pause() -> None\n\t\t# pauses playback (use play to resume)\n\n\t<method> Source.rewind() -> None\n\t\t# goes back to the start of the track\n\n\t<float> Source.pitch\n\t\t# the source's current pitch\n\n\t<float> Source.gain\n\t\t# the source's current gain\n\n\t<float> Source.max_distance\n\t\t# the source's current max_distance\n\n\t<float> Source.rolloff_factor\n\t\t# the source's current rolloff_factor\n\n\t<float> Source.reference_distance\n\t\t# the source's current reference_distance\n\n\t<float> Source.min_gain\n\t\t# the source's current min_gain\n\n\t<float> Source.max_gain\n\t\t# the source's current max_gain\n\n\t<float> Source.cone_outer_angle\n\t\t# the source's current cone_outer_angle\n\n\t<float> Source.cone_inner_angle\n\t\t# the source's current cone_inner_angle\n\n\t<float> Source.cone_outer_gain\n\t\t# the source's current cone_outer_gain\n\n\t<vec3> Source.position\n\t\t# the source's current position (use .x, .y, and .z to access it's items or .toTuple())\n\n\t<vec3> Source.velocity\n\t\t# the source's current velocity (use .x, .y, and .z to access it's items or .toTuple())\n\n\t<vec3> Source.direction\n\t\t# the source's current velocity (use .x, .y, and .z to access it's items or .toTuple())\n\n\t<bool> Source.relative\n\t\t# wether or not the source is relative to the listener\n\n\t<int> Source.source_type\n\t\t# the source's current source_type (either AL_UNDETERMINED, AL_STATIC or AL_STREAMING)\n\n\t<method> Source.set_pitch(value) -> None\n\t\t# set the pitch for this source\n\t\t\t<float> value # pitch\n\n\t<method> Source.set_gain(value) -> None\n\t\t# set the gain for this source\n\t\t\t<float> value # gain\n\n\t<method> Source.set_max_distance(value) -> None\n\t\t# set the max_distance for this source\n\t\t\t<float> value # max_distance\n\n\t<method> Source.set_rolloff_factor(value) -> None\n\t\t# set the rolloff_factor for this source\n\t\t\t<float> value # rolloff_factor\n\n\t<method> Source.set_reference_distance(value) -> None\n\t\t# set the reference_distance for this source\n\t\t\t<float> value # reference_distance\n\n\t<method> Source.set_min_gain(value) -> None\n\t\t# set the min_gain for this source\n\t\t\t<float> value # min_gain\n\n\t<method> Source.set_max_gain(value) -> None\n\t\t# set the max_gain for this source\n\t\t\t<float> value # max_gain\n\n\t<method> Source.set_cone_outer_gain(value) -> None\n\t\t# set the cone_outer_gain for this source\n\t\t\t<float> value # cone_outer_gain\n\n\t<method> Source.set_cone_inner_angle(value) -> None\n\t\t# set the cone_inner_angle for this source\n\t\t\t<float> value # cone_inner_angle\n\n\t<method> Source.set_cone_outer_angle(value) -> None\n\t\t# set the cone_outer_angle for this source\n\t\t\t<float> value # cone_outer_angle\n\n\t<method> Source.set_position(value) -> None\n\t\t# set the position for this source\n\t\t\t<tuple or list> value # position\n\n\t<method> Source.set_velocity(value) -> None\n\t\t# set the velocity for this source\n\t\t\t<tuple or list> value # velocity\n\n\t<method> Source.set_looping(value) -> None\n\t\t# set the looping for this source\n\t\t\t<bool> value # looping\n\n\t<method> Source.set_direction(value) -> None\n\t\t# set the direction for this source\n\t\t\t<tuple or list> value # direction\n\n\t<method> Source.set_source_relative(value) -> None\n\t\t# set the source_relative for this source\n\t\t\t<bool> value # source_relative\n\n\t<method> Source.set_source_type(value) -> None\n\t\t# set the source_type for this source\n\t\t\t<int> value # source_type\n\n\t<method> Source.set_buffer(buffer_) -> None\n\t\t# set the buffer for this source\n\t\t\t<Buffer> value # buffer\n\n\t<method> Source.get_state() -> <int> state of the Source (e.g. AL_PLAYING, AL_STOPPED,etc.)\n\t\t# get the current state of the source\n\n<class> openal.SourceStream(stream)\n\t# class for managing a source in streaming mode\n\t\t<PYOGG-Stream> stream # where the buffer gets it's data from\n\n\t<method> update() -> <bool> playing\n\t\t# load more data to play (if necessary). \n\t\t# if you don't call this frequently, the source will stop playing after it reaches the last buffer\n\t\t# in that case you should consider increasing the buffer size or amount using oalSetStreamBufferCount or pyoggSetStreamBufferSize\n\n<class> openal.Buffer(*args)\n\t# class for managing OpenAL buffers\n\t\t<File or tuple or list> args # what to fill the buffer with (either y PyOgg file or a tuple / list with [format, data, length, frequency])\n\n\t<method> Buffer.fill(*args) -> None\n\t\t# fill the buffer\n\t\t\t<File or tuple or list> args # what to fill the buffer with (either y PyOgg file or a tuple / list with [format, data, length, frequency])\n\n\t<method> Buffer.destroy() -> None\n\t\t# destroy this buffer\n\n<class> openal.StreamBuffer(stream, count)\n\t# class for managing OpenAL buffers for audio streaming\n\t\t<PYOGG-Stream> stream # from where to get the data\n\t\t<int> count # how many buffers to create (usually OAL_STREAM_BUFFER_COUNT, which is 2 initially)\n\n\t<method> Buffer.fill_buffer(id_) -> None\n\t\t# fill the buffer\n\t\t\t<int> id_ # load some data into this buffer\n\n\t<method> Buffer.destroy() -> None\n\t\t# destroy this streambuffer\n\n<method> oalGetEnum(enum) -> <str> ENUM\n\t# returns a literal representation of enum \n\t\t<int> enum # AL_ or ALC_ enumerator\n\n<method> oalGetALEnum(enum) -> <str> ENUM\n\t# returns a literal representation of an AL_ enum \n\t\t<int> enum # AL_ enumerator\n\n<method> oalGetALCEnum(enum) -> <str> ENUM\n\t# returns a literal representation of an ALC_ enum \n\t\t<int> enum # ALC_ enumerator\n\n<method> oalGetContext() -> <int> context\n\t# returns the context used by PyOpenAL\n\n<method> oalGetDevice() -> <int> device\n\t# returns the device used by PyOpenAL\n\n<method> oalSetAutoInit(val) -> None\n\t# changes wether or not PyOpenAL initializes automatically\n\t\t<bool> val # wether or not to auto-init\n\n\t# The other methods and variables are the same as in Source \n\t# (note that you can't loop, because the file can be read only once (by now))\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Zuzu-Typ/PyOpenAL", "keywords": "OpenAL 3D game Xiph ogg vorbis opus sound playback audio", "license": "Unilicense", "maintainer": "", "maintainer_email": "", "name": "PyOpenAL", "package_url": "https://pypi.org/project/PyOpenAL/", "platform": "", "project_url": "https://pypi.org/project/PyOpenAL/", "project_urls": {"Homepage": "https://github.com/Zuzu-Typ/PyOpenAL"}, "release_url": "https://pypi.org/project/PyOpenAL/0.7.11a1/", "requires_dist": null, "requires_python": "", "summary": "OpenAL integration for Python", "version": "0.7.11a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyOpenAL</h1>\n<p>PyOpenAL provides OpenAL bindings for python as well as an interface to them.</p>\n<p>It also provides a simple way to play WAVE and - if <a href=\"https://github.com/Zuzu-Typ/PyOgg\" rel=\"nofollow\">PyOgg</a> is installed - even OGG Vorbis, OGG Opus and FLAC files.</p>\n<p>You can install it using the PyPI:</p>\n<pre><code>pip install PyOpenAL\n</code></pre>\n<p>PyOpenAL requires a shared OpenAL library (e.g. OpenAL32.dll), one of which the Windows distributions already come with (<a href=\"http://kcat.strangesoft.net/openal.html\" rel=\"nofollow\">OpenAL Soft</a> by kcat).\nYou can use the <a href=\"http://www.openal.org/\" rel=\"nofollow\">official OpenAL library</a> (deprecated) or any other compatible library, like the aforementioned <a href=\"http://kcat.strangesoft.net/openal.html\" rel=\"nofollow\">OpenAL Soft library</a>, which is still actively developed.</p>\n<p>PyOpenAL provides OpenAL bindings, as you would find them in C++, meaning you can follow any <a href=\"http://www.openal.org/documentation/\" rel=\"nofollow\">OpenAL C++ tutorial</a> with Python.\nOpenAL's methods expect C types as arguments, which means you will have to convert Python's types to C types using <a href=\"https://docs.python.org/3/library/ctypes.html\" rel=\"nofollow\">ctypes</a> if you want to use them directly.\nDon't worry though, PyOpenAL can be used without the need to do that.</p>\n<p>I removed the support for ALUT, because it is basically impossible to build nowadays. If you want ALUT support, please use the original <a href=\"https://github.com/forrestv/python-openal\" rel=\"nofollow\">python-openal from forrestv</a></p>\n<h3>Examples</h3>\n<h5>Playing a wave file</h5>\n<pre><span class=\"c1\"># import PyOpenAL (will require an OpenAL shared library)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">openal</span> <span class=\"kn\">import</span> <span class=\"o\">*</span> \n\n<span class=\"c1\"># import the time module, for sleeping during playback</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"c1\"># open our wave file</span>\n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">oalOpen</span><span class=\"p\">(</span><span class=\"s2\">\"test.wav\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># and start playback</span>\n<span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">play</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># check if the file is still playing</span>\n<span class=\"k\">while</span> <span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">get_state</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">AL_PLAYING</span><span class=\"p\">:</span>\n\t<span class=\"c1\"># wait until the file is done playing</span>\n\t<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># release resources (don't forget this)</span>\n<span class=\"n\">oalQuit</span><span class=\"p\">()</span>\n</pre>\n<h5>Playing an OGG Opus file (with PyOgg)</h5>\n<pre><span class=\"c1\"># This requires PyOgg to be installed ( pip install pyogg )</span>\n<span class=\"kn\">from</span> <span class=\"nn\">openal</span> <span class=\"kn\">import</span> <span class=\"o\">*</span> \n\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">oalOpen</span><span class=\"p\">(</span><span class=\"s2\">\"test.opus\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">play</span><span class=\"p\">()</span>\n\n<span class=\"k\">while</span> <span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">get_state</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">AL_PLAYING</span><span class=\"p\">:</span>\n\t<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># remember, don't forget to quit</span>\n\t<span class=\"n\">oalQuit</span><span class=\"p\">()</span>\n</pre>\n<h5>Streaming a file</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openal</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"c1\"># The following two lines are optional. You can use them, if you can't update the stream frequently enough</span>\n<span class=\"c1\"># This one specifies how much data is supposed to be stored in each buffer (only applies for OGG Vorbis and Opus files)</span>\n<span class=\"n\">pyoggSetStreamBufferSize</span><span class=\"p\">(</span><span class=\"mi\">4096</span><span class=\"o\">*</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"c1\"># This one sets the maximum amount of buffers to be created at a time</span>\n<span class=\"n\">oalSetStreamBufferCount</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n\n<span class=\"n\">sourceStream</span> <span class=\"o\">=</span> <span class=\"n\">oalStream</span><span class=\"p\">(</span><span class=\"s2\">\"test.ogg\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">sourceStream</span><span class=\"o\">.</span><span class=\"n\">play</span><span class=\"p\">()</span>\n\n<span class=\"k\">while</span> <span class=\"n\">sourceStream</span><span class=\"o\">.</span><span class=\"n\">get_state</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">AL_PLAYING</span><span class=\"p\">:</span>\n\t<span class=\"c1\"># do stuff</span>\n\t<span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n\n\t<span class=\"c1\"># update the stream (load new data)</span>\n\t<span class=\"c1\"># if you don't do this repeatedly, the stream will suffocate</span>\n\t<span class=\"n\">sourceStream</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n\n<span class=\"n\">oalQuit</span><span class=\"p\">()</span>\n</pre>\n<h3>Using OpenAL functions</h3>\n<pre><span class=\"c1\"># Here we only import OpenAL's functions </span>\n<span class=\"c1\"># (in case you don't need or want PyOpenAL's functions and classes)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">openal.al</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">openal.alc</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># It's as simple as that:</span>\n<span class=\"n\">alDistanceModel</span><span class=\"p\">(</span><span class=\"n\">AL_INVERSE_DISTANCE_CLAMPED</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or a little more complicated, it really depends:</span>\n<span class=\"n\">alSourceUnqueueBuffers</span><span class=\"p\">(</span><span class=\"n\">source_id</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">pointer</span><span class=\"p\">(</span><span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">c_uint</span><span class=\"p\">(</span><span class=\"n\">buffer_ids</span><span class=\"p\">[</span><span class=\"nb\">id</span><span class=\"p\">])))</span>\n\n<span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n</pre>\n<h3>Reference (for PyOpenAL's own classes and functions)</h3>\n<pre><code>&lt;method&gt; oalInit(device_specifier = None, context_attr_list = None) -&gt; None\n\t# initializes PyOpenAL\n\t# this is called automatically, unless you set OAL_DONT_AUTO_INIT\n\t\t&lt;c_char_p&gt; device_specifier # you can set a custom device with this\n\t\t&lt;c_int_p&gt; context_attr_list # you can pass additional arguments to context creation\n\n&lt;method&gt; oalGetInit() -&gt; &lt;bool&gt; initialized\n\t# finds out wether or not PyOpenAL is initialized\n\n&lt;method&gt; oalQuit() -&gt; None\n\t# exits out of OpenAL and destroys all existing Sources and Buffers\n\n&lt;method&gt; oalOpen(path, ext_hint = None) -&gt; Source\n\t# loads a WAVE / Ogg Vorbis / Ogg Opus / FLAC file to a Source object\n\t\t&lt;str&gt; path # path to the file (relative or absolute)\n\t\t&lt;str&gt; ext_hint # if the filetype is not wav, wave, ogg, vorbis or opus, you should supply a hint to the extension\n\n&lt;method&gt; oalStream(path, ext_hint = None) -&gt; SourceStream\n\t# loads a WAVE /  Ogg Vorbis / Ogg Opus / FLAC file to a SourceStream object, that streams the data\n\t# you should use this instead of Source for Soundtracks or other long tracks (as it uses less memory)\n\t# you will have to update it frequently to avoid suffocation of the stream\n\t# you can neither rewind nor loop a SourceStream (currently)\n\t\t&lt;str&gt; path # path to the file (relative or absolute)\n\t\t&lt;str&gt; ext_hint # if the filetype is not ogg, vorbis or opus, you should supply a hint to the extension\n\n&lt;class&gt; openal.Listener()\n\t# class for hadling the listener (you)\n\t# an instance of this class is created when you import PyOpenAL.\n\t# it can be retrieved using oalGetListener()\n\t# you do NOT have to create an instance yourself\n\n\t&lt;method&gt; Listener.move(v)\n\t\t# move the listener by v\n\t\t\t&lt;tuple or list&gt; v # a translation vector represented as (x, y, z)\n\n\t&lt;method&gt; Listener.move_to(v)\n\t\t# set the listener's position to v\n\t\t\t&lt;tuple or list&gt; v # a position vector represented as (x, y, z)\n\n\t&lt;method&gt; Listener.set_position(v)\n\t\t# see Listener.move_to\n\n\t&lt;method&gt; Listener.set_orientation(v)\n\t\t# sets the listener's orientation to v\n\t\t\t&lt;tuple or list&gt; v # orientation represented as (frontX, frontY, frontZ, upX, upY, upZ)\n\n\t&lt;method&gt; Listener.set_velocity(v)\n\t\t# sets the listener's velocity to v\n\t\t\t&lt;tuple or list&gt; v # velocity represented as (vX, vY, vZ)\n\n\t&lt;method&gt; Listener.set_gain(value)\n\t\t# sets the listener's gain (volume) to value\n\t\t\t&lt;float&gt; value\n\n&lt;method&gt; openal.oalGetListener() -&gt; Listener\n\t# returns PyOpenAL's Listener\n\n&lt;class&gt; openal.Source(buffer_ = None)\n\t# class for managing a source\n\t\t&lt;Buffer&gt; buffer_ # where this source finds it's data\n\n\t&lt;method&gt; Source.play() -&gt; None\n\t\t# starts playing\n\n\t&lt;method&gt; Source.stop() -&gt; None\n\t\t# stops playback\n\n\t&lt;method&gt; Source.pause() -&gt; None\n\t\t# pauses playback (use play to resume)\n\n\t&lt;method&gt; Source.rewind() -&gt; None\n\t\t# goes back to the start of the track\n\n\t&lt;float&gt; Source.pitch\n\t\t# the source's current pitch\n\n\t&lt;float&gt; Source.gain\n\t\t# the source's current gain\n\n\t&lt;float&gt; Source.max_distance\n\t\t# the source's current max_distance\n\n\t&lt;float&gt; Source.rolloff_factor\n\t\t# the source's current rolloff_factor\n\n\t&lt;float&gt; Source.reference_distance\n\t\t# the source's current reference_distance\n\n\t&lt;float&gt; Source.min_gain\n\t\t# the source's current min_gain\n\n\t&lt;float&gt; Source.max_gain\n\t\t# the source's current max_gain\n\n\t&lt;float&gt; Source.cone_outer_angle\n\t\t# the source's current cone_outer_angle\n\n\t&lt;float&gt; Source.cone_inner_angle\n\t\t# the source's current cone_inner_angle\n\n\t&lt;float&gt; Source.cone_outer_gain\n\t\t# the source's current cone_outer_gain\n\n\t&lt;vec3&gt; Source.position\n\t\t# the source's current position (use .x, .y, and .z to access it's items or .toTuple())\n\n\t&lt;vec3&gt; Source.velocity\n\t\t# the source's current velocity (use .x, .y, and .z to access it's items or .toTuple())\n\n\t&lt;vec3&gt; Source.direction\n\t\t# the source's current velocity (use .x, .y, and .z to access it's items or .toTuple())\n\n\t&lt;bool&gt; Source.relative\n\t\t# wether or not the source is relative to the listener\n\n\t&lt;int&gt; Source.source_type\n\t\t# the source's current source_type (either AL_UNDETERMINED, AL_STATIC or AL_STREAMING)\n\n\t&lt;method&gt; Source.set_pitch(value) -&gt; None\n\t\t# set the pitch for this source\n\t\t\t&lt;float&gt; value # pitch\n\n\t&lt;method&gt; Source.set_gain(value) -&gt; None\n\t\t# set the gain for this source\n\t\t\t&lt;float&gt; value # gain\n\n\t&lt;method&gt; Source.set_max_distance(value) -&gt; None\n\t\t# set the max_distance for this source\n\t\t\t&lt;float&gt; value # max_distance\n\n\t&lt;method&gt; Source.set_rolloff_factor(value) -&gt; None\n\t\t# set the rolloff_factor for this source\n\t\t\t&lt;float&gt; value # rolloff_factor\n\n\t&lt;method&gt; Source.set_reference_distance(value) -&gt; None\n\t\t# set the reference_distance for this source\n\t\t\t&lt;float&gt; value # reference_distance\n\n\t&lt;method&gt; Source.set_min_gain(value) -&gt; None\n\t\t# set the min_gain for this source\n\t\t\t&lt;float&gt; value # min_gain\n\n\t&lt;method&gt; Source.set_max_gain(value) -&gt; None\n\t\t# set the max_gain for this source\n\t\t\t&lt;float&gt; value # max_gain\n\n\t&lt;method&gt; Source.set_cone_outer_gain(value) -&gt; None\n\t\t# set the cone_outer_gain for this source\n\t\t\t&lt;float&gt; value # cone_outer_gain\n\n\t&lt;method&gt; Source.set_cone_inner_angle(value) -&gt; None\n\t\t# set the cone_inner_angle for this source\n\t\t\t&lt;float&gt; value # cone_inner_angle\n\n\t&lt;method&gt; Source.set_cone_outer_angle(value) -&gt; None\n\t\t# set the cone_outer_angle for this source\n\t\t\t&lt;float&gt; value # cone_outer_angle\n\n\t&lt;method&gt; Source.set_position(value) -&gt; None\n\t\t# set the position for this source\n\t\t\t&lt;tuple or list&gt; value # position\n\n\t&lt;method&gt; Source.set_velocity(value) -&gt; None\n\t\t# set the velocity for this source\n\t\t\t&lt;tuple or list&gt; value # velocity\n\n\t&lt;method&gt; Source.set_looping(value) -&gt; None\n\t\t# set the looping for this source\n\t\t\t&lt;bool&gt; value # looping\n\n\t&lt;method&gt; Source.set_direction(value) -&gt; None\n\t\t# set the direction for this source\n\t\t\t&lt;tuple or list&gt; value # direction\n\n\t&lt;method&gt; Source.set_source_relative(value) -&gt; None\n\t\t# set the source_relative for this source\n\t\t\t&lt;bool&gt; value # source_relative\n\n\t&lt;method&gt; Source.set_source_type(value) -&gt; None\n\t\t# set the source_type for this source\n\t\t\t&lt;int&gt; value # source_type\n\n\t&lt;method&gt; Source.set_buffer(buffer_) -&gt; None\n\t\t# set the buffer for this source\n\t\t\t&lt;Buffer&gt; value # buffer\n\n\t&lt;method&gt; Source.get_state() -&gt; &lt;int&gt; state of the Source (e.g. AL_PLAYING, AL_STOPPED,etc.)\n\t\t# get the current state of the source\n\n&lt;class&gt; openal.SourceStream(stream)\n\t# class for managing a source in streaming mode\n\t\t&lt;PYOGG-Stream&gt; stream # where the buffer gets it's data from\n\n\t&lt;method&gt; update() -&gt; &lt;bool&gt; playing\n\t\t# load more data to play (if necessary). \n\t\t# if you don't call this frequently, the source will stop playing after it reaches the last buffer\n\t\t# in that case you should consider increasing the buffer size or amount using oalSetStreamBufferCount or pyoggSetStreamBufferSize\n\n&lt;class&gt; openal.Buffer(*args)\n\t# class for managing OpenAL buffers\n\t\t&lt;File or tuple or list&gt; args # what to fill the buffer with (either y PyOgg file or a tuple / list with [format, data, length, frequency])\n\n\t&lt;method&gt; Buffer.fill(*args) -&gt; None\n\t\t# fill the buffer\n\t\t\t&lt;File or tuple or list&gt; args # what to fill the buffer with (either y PyOgg file or a tuple / list with [format, data, length, frequency])\n\n\t&lt;method&gt; Buffer.destroy() -&gt; None\n\t\t# destroy this buffer\n\n&lt;class&gt; openal.StreamBuffer(stream, count)\n\t# class for managing OpenAL buffers for audio streaming\n\t\t&lt;PYOGG-Stream&gt; stream # from where to get the data\n\t\t&lt;int&gt; count # how many buffers to create (usually OAL_STREAM_BUFFER_COUNT, which is 2 initially)\n\n\t&lt;method&gt; Buffer.fill_buffer(id_) -&gt; None\n\t\t# fill the buffer\n\t\t\t&lt;int&gt; id_ # load some data into this buffer\n\n\t&lt;method&gt; Buffer.destroy() -&gt; None\n\t\t# destroy this streambuffer\n\n&lt;method&gt; oalGetEnum(enum) -&gt; &lt;str&gt; ENUM\n\t# returns a literal representation of enum \n\t\t&lt;int&gt; enum # AL_ or ALC_ enumerator\n\n&lt;method&gt; oalGetALEnum(enum) -&gt; &lt;str&gt; ENUM\n\t# returns a literal representation of an AL_ enum \n\t\t&lt;int&gt; enum # AL_ enumerator\n\n&lt;method&gt; oalGetALCEnum(enum) -&gt; &lt;str&gt; ENUM\n\t# returns a literal representation of an ALC_ enum \n\t\t&lt;int&gt; enum # ALC_ enumerator\n\n&lt;method&gt; oalGetContext() -&gt; &lt;int&gt; context\n\t# returns the context used by PyOpenAL\n\n&lt;method&gt; oalGetDevice() -&gt; &lt;int&gt; device\n\t# returns the device used by PyOpenAL\n\n&lt;method&gt; oalSetAutoInit(val) -&gt; None\n\t# changes wether or not PyOpenAL initializes automatically\n\t\t&lt;bool&gt; val # wether or not to auto-init\n\n\t# The other methods and variables are the same as in Source \n\t# (note that you can't loop, because the file can be read only once (by now))\n</code></pre>\n\n          </div>"}, "last_serial": 6318854, "releases": {"0.6.1a1": [{"comment_text": "", "digests": {"md5": "da14464c0aa185f61fc67fac9b5e5ce5", "sha256": "93ca661856f46a1a8d56c9540ee9b72a16c8b753b566d3b242c3001f10474c74"}, "downloads": -1, "filename": "PyOpenAL-0.6.1a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "da14464c0aa185f61fc67fac9b5e5ce5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26256, "upload_time": "2017-07-27T21:00:14", "upload_time_iso_8601": "2017-07-27T21:00:14.784046Z", "url": "https://files.pythonhosted.org/packages/66/d3/621fe7129d42a7d82e15cc69ec3300d428dfed962b8c5d6dc80fac7ff39f/PyOpenAL-0.6.1a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab8535adf96f85740d004bd087b514fd", "sha256": "aad30c2ad40b376ff4a8d74ac02a656a149dde8d5cbe9cde7407f11853676880"}, "downloads": -1, "filename": "PyOpenAL-0.6.1a1.tar.gz", "has_sig": false, "md5_digest": "ab8535adf96f85740d004bd087b514fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11816, "upload_time": "2017-07-27T21:00:16", "upload_time_iso_8601": "2017-07-27T21:00:16.393608Z", "url": "https://files.pythonhosted.org/packages/d3/6d/e08f8093adc8fd323fad1f0aefd31a2adb787d4be9e7369ae1d6a0b8fca6/PyOpenAL-0.6.1a1.tar.gz", "yanked": false}], "0.6.2a1": [{"comment_text": "", "digests": {"md5": "e454d94950788f76e783ecdd498010e6", "sha256": "a332c1184136656903086133d3ae73af9bdfd0aa89f3ecc99e15104890ba4555"}, "downloads": -1, "filename": "PyOpenAL-0.6.2a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e454d94950788f76e783ecdd498010e6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27999, "upload_time": "2017-07-29T19:43:22", "upload_time_iso_8601": "2017-07-29T19:43:22.108284Z", "url": "https://files.pythonhosted.org/packages/41/f0/6a9a7c8a8da5b3b67fbf05511e2f20fadf16d436985102e44cff6beb44b3/PyOpenAL-0.6.2a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26ee19add8306297b7271ef92addec06", "sha256": "e11b4091fd00d9eeef8069c46fbb5f7d78bbc5efa8ab23367d65d742d68f1fcc"}, "downloads": -1, "filename": "PyOpenAL-0.6.2a1.tar.gz", "has_sig": false, "md5_digest": "26ee19add8306297b7271ef92addec06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13571, "upload_time": "2017-07-29T19:43:23", "upload_time_iso_8601": "2017-07-29T19:43:23.232500Z", "url": "https://files.pythonhosted.org/packages/3d/63/68b949c8e1bc9f388cc0f915da1713753237c211b2ad60f5f3c73e149201/PyOpenAL-0.6.2a1.tar.gz", "yanked": false}], "0.6.3a1": [{"comment_text": "", "digests": {"md5": "cbfdfdf360326ea1f9cf3726d4e4641c", "sha256": "0ebe000d770919dda6bbc7036af1fbc5e5bca9f7c87c246548f8b534a847c6b5"}, "downloads": -1, "filename": "PyOpenAL-0.6.3a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbfdfdf360326ea1f9cf3726d4e4641c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27992, "upload_time": "2017-07-29T19:47:05", "upload_time_iso_8601": "2017-07-29T19:47:05.549011Z", "url": "https://files.pythonhosted.org/packages/9f/f2/08a6280d7d16fc22428fb31e4f1a5f76789138a743736aeba37138c92b64/PyOpenAL-0.6.3a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3095b06b38d7b10ae41981191b8ea1d8", "sha256": "70f74e3b65dab91c821350bf22d4b7481219852d2995a33b7bb63498278674c0"}, "downloads": -1, "filename": "PyOpenAL-0.6.3a1.tar.gz", "has_sig": false, "md5_digest": "3095b06b38d7b10ae41981191b8ea1d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13562, "upload_time": "2017-07-29T19:47:07", "upload_time_iso_8601": "2017-07-29T19:47:07.305982Z", "url": "https://files.pythonhosted.org/packages/7f/fe/cbc32e7e4e0dff5bddbdad87f5232520d6d757d55b5d3f8e1f72e71b5e82/PyOpenAL-0.6.3a1.tar.gz", "yanked": false}], "0.6.4a1": [{"comment_text": "", "digests": {"md5": "ec213813b146228ab1721673e29e00ec", "sha256": "2b44706ea2a0d9eb6826f8148d004eb546328e0fc89d3fed0e6944fd7a2e9917"}, "downloads": -1, "filename": "PyOpenAL-0.6.4a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ec213813b146228ab1721673e29e00ec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27980, "upload_time": "2017-07-29T19:48:31", "upload_time_iso_8601": "2017-07-29T19:48:31.855530Z", "url": "https://files.pythonhosted.org/packages/28/08/918859b33ada0f0a7faf0a890c167d2c131194aad4525bb17f2661cec7a2/PyOpenAL-0.6.4a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55ec181084b1dc22bb9a22a4abb031ea", "sha256": "3015b458b2ce9142f96493404c6803507f775a70196a1bbc1fc963ba76f43e3f"}, "downloads": -1, "filename": "PyOpenAL-0.6.4a1.tar.gz", "has_sig": false, "md5_digest": "55ec181084b1dc22bb9a22a4abb031ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13553, "upload_time": "2017-07-29T19:48:57", "upload_time_iso_8601": "2017-07-29T19:48:57.705983Z", "url": "https://files.pythonhosted.org/packages/cb/cf/fb73c89028fe9a5413f9ff0738a1107cc22b7b1f1b9e12f5d6a6b98e3fa9/PyOpenAL-0.6.4a1.tar.gz", "yanked": false}], "0.6.5a0": [{"comment_text": "", "digests": {"md5": "8919808c1b6090d885d0f33856ee0d9d", "sha256": "4070b4b6ec787e32dd0ffa9de5bdca9d1135626a0d659991ffc5b40b2ac8c1db"}, "downloads": -1, "filename": "PyOpenAL-0.6.5a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8919808c1b6090d885d0f33856ee0d9d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28466, "upload_time": "2017-07-30T15:01:20", "upload_time_iso_8601": "2017-07-30T15:01:20.086625Z", "url": "https://files.pythonhosted.org/packages/64/63/b7f5699e6389f29f90d89092ee51bf23a76fa7028bba8f9e8f0dd2377219/PyOpenAL-0.6.5a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "307065e290c43221c87379c9281a42f3", "sha256": "3f536f72e0f1e9f99474e3f3b9634321fbacb1da097f231cdf077f4749d30fb3"}, "downloads": -1, "filename": "PyOpenAL-0.6.5a0.tar.gz", "has_sig": false, "md5_digest": "307065e290c43221c87379c9281a42f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13782, "upload_time": "2017-07-30T15:01:21", "upload_time_iso_8601": "2017-07-30T15:01:21.397985Z", "url": "https://files.pythonhosted.org/packages/d6/fd/100fe2503736ad5c255af41cdee82d912ad4376686e1d235430f29cc68ec/PyOpenAL-0.6.5a0.tar.gz", "yanked": false}], "0.6.6a1": [{"comment_text": "", "digests": {"md5": "c1378d3f33de3ba3371aee7822cde342", "sha256": "f11c94f5e02c12e2566dfd80d55b460fa88419d375bcc71edf5f02160dcd2483"}, "downloads": -1, "filename": "PyOpenAL-0.6.6a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c1378d3f33de3ba3371aee7822cde342", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28515, "upload_time": "2017-08-01T17:14:00", "upload_time_iso_8601": "2017-08-01T17:14:00.841100Z", "url": "https://files.pythonhosted.org/packages/1e/2c/ff84189ec20ab3334f5ae150989f7960b30561f346e1ace2c042766c4b2e/PyOpenAL-0.6.6a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93929229b1184388ba7fe0d9473eb20b", "sha256": "20a1357d7549d4ca9e5896c4eec694b8acabb179a0dcb65aa2f4db028e9e4c97"}, "downloads": -1, "filename": "PyOpenAL-0.6.6a1.tar.gz", "has_sig": false, "md5_digest": "93929229b1184388ba7fe0d9473eb20b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13839, "upload_time": "2017-08-01T17:14:02", "upload_time_iso_8601": "2017-08-01T17:14:02.513548Z", "url": "https://files.pythonhosted.org/packages/28/27/de3e4abdec5ab72df0f3d879deafc10ae099331bfbf4c7cf265bf972e2f1/PyOpenAL-0.6.6a1.tar.gz", "yanked": false}], "0.6.7a1": [{"comment_text": "", "digests": {"md5": "373852ff1ad280708e274eda746eafea", "sha256": "c9c7403c01840c95216388e71aeaf0a5fadda5a4e1f99ad799bce17ec257d5ea"}, "downloads": -1, "filename": "PyOpenAL-0.6.7a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "373852ff1ad280708e274eda746eafea", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28644, "upload_time": "2017-08-11T21:40:05", "upload_time_iso_8601": "2017-08-11T21:40:05.023457Z", "url": "https://files.pythonhosted.org/packages/b3/e8/12e0591c00757adf60ce0734125a2319a3fed7b515d00a7cc8fb339da04e/PyOpenAL-0.6.7a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17258c2553849fcb0aada181c20008ce", "sha256": "cc1cf0f353f5a8cedb893a7bb9b4f99368f642487c27173a828c841147f5141c"}, "downloads": -1, "filename": "PyOpenAL-0.6.7a1.tar.gz", "has_sig": false, "md5_digest": "17258c2553849fcb0aada181c20008ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13951, "upload_time": "2017-08-11T21:40:07", "upload_time_iso_8601": "2017-08-11T21:40:07.219080Z", "url": "https://files.pythonhosted.org/packages/26/43/b6438411e8e297eb2eb52ba49c6504083042fd12c709431daae53e674581/PyOpenAL-0.6.7a1.tar.gz", "yanked": false}], "0.6.8a1": [{"comment_text": "", "digests": {"md5": "822f5c90625da7963edc6c28a72086ee", "sha256": "732675ab91daa4e859eb8fd3cf9425428414bc08a53fb746777d95aef55aaebe"}, "downloads": -1, "filename": "PyOpenAL-0.6.8a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "822f5c90625da7963edc6c28a72086ee", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28656, "upload_time": "2017-08-11T21:56:05", "upload_time_iso_8601": "2017-08-11T21:56:05.437946Z", "url": "https://files.pythonhosted.org/packages/e1/2a/105810156d055c5408a16614614796a3ee2a90d67b2eaddef9cdf25d3696/PyOpenAL-0.6.8a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bbf4f072f6e8f5d0a10ccbdf62de1adc", "sha256": "8d3d7198a15c45691f66dc099b630e5617179d78486a2fbb9722c392f2c7c0ba"}, "downloads": -1, "filename": "PyOpenAL-0.6.8a1.tar.gz", "has_sig": false, "md5_digest": "bbf4f072f6e8f5d0a10ccbdf62de1adc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13952, "upload_time": "2017-08-11T21:56:06", "upload_time_iso_8601": "2017-08-11T21:56:06.815175Z", "url": "https://files.pythonhosted.org/packages/9d/50/a588b955e0abaad2e1435da3550d95023b0d5e33aa0fba50f1dc02feda37/PyOpenAL-0.6.8a1.tar.gz", "yanked": false}], "0.6a1": [{"comment_text": "", "digests": {"md5": "6b5a386f49f1661be216967a1b163155", "sha256": "a9a89dee20a7c7caa087252465e71118f5932964eff88b83f4cc8ae685d6af1d"}, "downloads": -1, "filename": "PyOpenAL-0.6a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6b5a386f49f1661be216967a1b163155", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25207, "upload_time": "2017-07-27T02:43:51", "upload_time_iso_8601": "2017-07-27T02:43:51.769360Z", "url": "https://files.pythonhosted.org/packages/93/01/cbe0329e3867c8777d4b08e42a6e1b6e9c221790af794a947bc3b15715d7/PyOpenAL-0.6a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae1f27919f5a630b560b1a74fa1aed5a", "sha256": "c1c682583a8460599c8c71068eaa41818dd78325087011cc3a2796dc6b63cc16"}, "downloads": -1, "filename": "PyOpenAL-0.6a1.tar.gz", "has_sig": false, "md5_digest": "ae1f27919f5a630b560b1a74fa1aed5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10994, "upload_time": "2017-07-27T02:43:54", "upload_time_iso_8601": "2017-07-27T02:43:54.226850Z", "url": "https://files.pythonhosted.org/packages/01/34/568c7226301c66f7b9de55ccc39ebefc414987133ce099edca2d1a9f0eb8/PyOpenAL-0.6a1.tar.gz", "yanked": false}], "0.7.0a1": [{"comment_text": "", "digests": {"md5": "a0fa08b8f80c4353186079ee22b98c75", "sha256": "d7623133305338697ae970211b6b6b311f0338ff4231c7b31ea9427c12c6b4c1"}, "downloads": -1, "filename": "PyOpenAL-0.7.0a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a0fa08b8f80c4353186079ee22b98c75", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27644, "upload_time": "2017-10-10T10:50:43", "upload_time_iso_8601": "2017-10-10T10:50:43.641484Z", "url": "https://files.pythonhosted.org/packages/a5/ed/8d48954acc62c54ce7d0b3e86d702b49fbe62c725869c8391cffc4101f1d/PyOpenAL-0.7.0a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d247b9e9f23a8e70dae019648f7b9b4b", "sha256": "6f4ed7502f29e5a7ac37dd74a8e9e61af54887106ba7db9289c2bfc58a54a1c1"}, "downloads": -1, "filename": "PyOpenAL-0.7.0a1.tar.gz", "has_sig": false, "md5_digest": "d247b9e9f23a8e70dae019648f7b9b4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25298, "upload_time": "2017-10-10T10:50:45", "upload_time_iso_8601": "2017-10-10T10:50:45.281591Z", "url": "https://files.pythonhosted.org/packages/ca/ca/a6ddfbefa3cd745e680f9ce64f01c9d5ab07f49e626665173e28de801085/PyOpenAL-0.7.0a1.tar.gz", "yanked": false}], "0.7.10a1": [{"comment_text": "", "digests": {"md5": "1137c05245207de1912b164fdc83afce", "sha256": "5dc9b51cb3a9728ed890d87a56e437c379f86328704568b5a460ea429d3c6dd2"}, "downloads": -1, "filename": "PyOpenAL-0.7.10a1-py2.py3-none-win32.whl", "has_sig": false, "md5_digest": "1137c05245207de1912b164fdc83afce", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 461382, "upload_time": "2019-11-23T10:20:10", "upload_time_iso_8601": "2019-11-23T10:20:10.706242Z", "url": "https://files.pythonhosted.org/packages/c5/c4/dc94eb69314836fffd254d74e01a8abaaa08e25cc140fe73a7c82d99b7dc/PyOpenAL-0.7.10a1-py2.py3-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9d65df75e985edff5a2d1a67c534505", "sha256": "e65898c784e723f4c026fd422e28fea8c00e95cd14ec52943fb35e5012425571"}, "downloads": -1, "filename": "PyOpenAL-0.7.10a1-py2.py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "c9d65df75e985edff5a2d1a67c534505", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 513414, "upload_time": "2019-11-23T10:20:14", "upload_time_iso_8601": "2019-11-23T10:20:14.904386Z", "url": "https://files.pythonhosted.org/packages/c5/c6/9cae32350ee3680888e94736f96febe8738639fa67111fa3a74d3dff150b/PyOpenAL-0.7.10a1-py2.py3-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2e687facea6fcbc3a634bbe8e0d61ad", "sha256": "16e87432b8df42a2dde18e2d6685a9ee96bcdc9509ee68694e3c15f28a0ebcad"}, "downloads": -1, "filename": "PyOpenAL-0.7.10a1.tar.gz", "has_sig": false, "md5_digest": "b2e687facea6fcbc3a634bbe8e0d61ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26695, "upload_time": "2019-11-23T10:20:16", "upload_time_iso_8601": "2019-11-23T10:20:16.508745Z", "url": "https://files.pythonhosted.org/packages/e2/25/18dc2f29993ec315c4286857b8848cfed08789787e35f954f0ae3f172c56/PyOpenAL-0.7.10a1.tar.gz", "yanked": false}], "0.7.11a1": [{"comment_text": "", "digests": {"md5": "1891a5be0cf4480b77f383fa45c63517", "sha256": "6df4ccf1fcb03e5b385a0e68e461ef00c62a1fa3557ac6c669bb50aec45a6cbb"}, "downloads": -1, "filename": "PyOpenAL-0.7.11a1-py2.py3-none-win32.whl", "has_sig": false, "md5_digest": "1891a5be0cf4480b77f383fa45c63517", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 461386, "upload_time": "2019-12-17T16:02:14", "upload_time_iso_8601": "2019-12-17T16:02:14.698548Z", "url": "https://files.pythonhosted.org/packages/4c/d0/e7ebff59051503e5eac7aabd1305dc244c77eaf55f21cd002197b01abba9/PyOpenAL-0.7.11a1-py2.py3-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6c0cd7f179a86026200e9090c6f3e44", "sha256": "da5bfdbe8fb3d2987d60430bec66ec8e51ef52ae8f792c0aa8a370413e712b45"}, "downloads": -1, "filename": "PyOpenAL-0.7.11a1-py2.py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "f6c0cd7f179a86026200e9090c6f3e44", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 513418, "upload_time": "2019-12-17T16:02:18", "upload_time_iso_8601": "2019-12-17T16:02:18.352647Z", "url": "https://files.pythonhosted.org/packages/60/54/e3d9fff1b60d101685e1f658792825c1012f0c02aa7c8f591796cdc4ed65/PyOpenAL-0.7.11a1-py2.py3-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f931c04f37c9c387ac03efbd92bdcdc", "sha256": "33ffd00bac6208755d36c744ffe8b5866d10b3c8aac05dfc173d5166df5d76c1"}, "downloads": -1, "filename": "PyOpenAL-0.7.11a1.tar.gz", "has_sig": false, "md5_digest": "7f931c04f37c9c387ac03efbd92bdcdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26714, "upload_time": "2019-12-17T16:02:19", "upload_time_iso_8601": "2019-12-17T16:02:19.933758Z", "url": "https://files.pythonhosted.org/packages/04/a8/8c09f20724e99790952014dd70f8c1fa6ca9cbf3bef4a43e188e09b959a4/PyOpenAL-0.7.11a1.tar.gz", "yanked": false}], "0.7.1a1": [{"comment_text": "", "digests": {"md5": "162a0fbe895ddedce3f81e7f8c190994", "sha256": "8beaa2bced1d9aca67bb380de5fd26028687b8ea805e8a15546a272df9b1bea5"}, "downloads": -1, "filename": "PyOpenAL-0.7.1a1-py2.py3-none-win32.whl", "has_sig": false, "md5_digest": "162a0fbe895ddedce3f81e7f8c190994", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502687, "upload_time": "2018-04-19T16:26:19", "upload_time_iso_8601": "2018-04-19T16:26:19.046426Z", "url": "https://files.pythonhosted.org/packages/37/3c/9fa3feaf2da83e94fcb8b8b935dd31a9a18936b909de5084bc4b57d1f921/PyOpenAL-0.7.1a1-py2.py3-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5223264ba55fc3970f43d21e8d171aa", "sha256": "a96a93fd23c263e117f444a35136f4618e99921fe8c946fb2c4d95fed5bd2d3b"}, "downloads": -1, "filename": "PyOpenAL-0.7.1a1-py2.py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "b5223264ba55fc3970f43d21e8d171aa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502690, "upload_time": "2018-04-19T16:26:21", "upload_time_iso_8601": "2018-04-19T16:26:21.928915Z", "url": "https://files.pythonhosted.org/packages/86/4f/7966be39e27493fcc9d23580772aabe804c156d5ff28c62070c11000f145/PyOpenAL-0.7.1a1-py2.py3-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a517265599d5437b31519a306f30ff40", "sha256": "9b39f0b82c1a487a0897f2e2c3b339dc3f453b67409e83d46bc11ed3eaef1e4b"}, "downloads": -1, "filename": "PyOpenAL-0.7.1a1.tar.gz", "has_sig": false, "md5_digest": "a517265599d5437b31519a306f30ff40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26289, "upload_time": "2018-04-19T16:26:23", "upload_time_iso_8601": "2018-04-19T16:26:23.393992Z", "url": "https://files.pythonhosted.org/packages/cf/0f/ae0355afcb7e8abb8f1d51abb6ec21731df96c6ffaa3325307b42dde1c40/PyOpenAL-0.7.1a1.tar.gz", "yanked": false}], "0.7.2a1": [{"comment_text": "", "digests": {"md5": "4369e99ba0e29d5ffc549e224e4a25e5", "sha256": "c3c6db11c2852220f39a024e76f38eebffe4fc25851aa198283d35c18d3db663"}, "downloads": -1, "filename": "PyOpenAL-0.7.2a1-py2.py3-none-win32.whl", "has_sig": false, "md5_digest": "4369e99ba0e29d5ffc549e224e4a25e5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502686, "upload_time": "2018-04-24T15:13:54", "upload_time_iso_8601": "2018-04-24T15:13:54.405253Z", "url": "https://files.pythonhosted.org/packages/39/69/c6fea9cb01631006309df22aa3d138d914315bf60c4ebf36bfad7f6dbadf/PyOpenAL-0.7.2a1-py2.py3-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "513e6315e651504dd69853a951397253", "sha256": "417ec0190478993c7b3bcf5fe25449df0ce12d3469ddd88ad0c6e212c017b6ae"}, "downloads": -1, "filename": "PyOpenAL-0.7.2a1-py2.py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "513e6315e651504dd69853a951397253", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502690, "upload_time": "2018-04-24T15:13:57", "upload_time_iso_8601": "2018-04-24T15:13:57.290977Z", "url": "https://files.pythonhosted.org/packages/45/da/191ecf2191cc847d6dade4026652aa9b37ac1a4ec1190573299e491e0761/PyOpenAL-0.7.2a1-py2.py3-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a5e92ebe02cf2eaf514d0734e5a2c5d", "sha256": "fc03edd0af791dc178b91d410c4b1da41297d768c15a4af30c434e0ea8f256c6"}, "downloads": -1, "filename": "PyOpenAL-0.7.2a1.tar.gz", "has_sig": false, "md5_digest": "6a5e92ebe02cf2eaf514d0734e5a2c5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26296, "upload_time": "2018-04-24T15:13:58", "upload_time_iso_8601": "2018-04-24T15:13:58.840426Z", "url": "https://files.pythonhosted.org/packages/8b/ad/066897f51fd90ded09a9ef70f1a4232aa9e38a18c555de21fd78fb9e5ecc/PyOpenAL-0.7.2a1.tar.gz", "yanked": false}], "0.7.3a1": [{"comment_text": "", "digests": {"md5": "26ff0be383d460a4115ca15962d05ad3", "sha256": "d4d1ac51fc6496265a0a3fdaf8089b70859df6726211a77f4af2383cd1a5ad61"}, "downloads": -1, "filename": "PyOpenAL-0.7.3a1-py2.py3-none-win32.whl", "has_sig": false, "md5_digest": "26ff0be383d460a4115ca15962d05ad3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502804, "upload_time": "2018-05-02T19:35:44", "upload_time_iso_8601": "2018-05-02T19:35:44.943516Z", "url": "https://files.pythonhosted.org/packages/3c/24/540353f2fff97db652c3262f75ac474e9bab4a2095025adfd7940e019879/PyOpenAL-0.7.3a1-py2.py3-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a3711095d88c7e77e8e0093baa9511b", "sha256": "6ffee40caf7a1a9abff7e7e412fed6760a7ee1c0e1ef54fe7dbca95e7c1ec3b2"}, "downloads": -1, "filename": "PyOpenAL-0.7.3a1-py2.py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "9a3711095d88c7e77e8e0093baa9511b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502808, "upload_time": "2018-05-02T19:35:47", "upload_time_iso_8601": "2018-05-02T19:35:47.938085Z", "url": "https://files.pythonhosted.org/packages/fc/8b/322f5656e3ad287d6338774637f14282669a80534ba8161726eddf46b191/PyOpenAL-0.7.3a1-py2.py3-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4621a239ef8ed5670ee62ba3953dc3d", "sha256": "f9507f9729a3babc4b39a488954e7046e018f69dddd80c33aff8d4734a31e564"}, "downloads": -1, "filename": "PyOpenAL-0.7.3a1.tar.gz", "has_sig": false, "md5_digest": "a4621a239ef8ed5670ee62ba3953dc3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26408, "upload_time": "2018-05-02T19:35:49", "upload_time_iso_8601": "2018-05-02T19:35:49.578466Z", "url": "https://files.pythonhosted.org/packages/9f/c5/738c76f0f5fad3c4662a1a08108232fcb510f29c367f06029a6c6a2792cf/PyOpenAL-0.7.3a1.tar.gz", "yanked": false}], "0.7.4a1": [{"comment_text": "", "digests": {"md5": "e8b496ef30add355dad4467445a4c8af", "sha256": "759c9378539f71f5476deeb318f4fa266e937eb6830c1b12855c0a28ea309825"}, "downloads": -1, "filename": "PyOpenAL-0.7.4a1-py2.py3-none-win32.whl", "has_sig": false, "md5_digest": "e8b496ef30add355dad4467445a4c8af", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502880, "upload_time": "2018-11-09T19:25:58", "upload_time_iso_8601": "2018-11-09T19:25:58.527214Z", "url": "https://files.pythonhosted.org/packages/69/9e/10f5521108b4be430382ae3a6fbe059ffd1074d89541face61803f905695/PyOpenAL-0.7.4a1-py2.py3-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bad995aa1c0a15fe47ce59ac335e184e", "sha256": "569674f0d798f93438c171b04a02a055fe03bcbf88823f115c32d76f27345443"}, "downloads": -1, "filename": "PyOpenAL-0.7.4a1-py2.py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "bad995aa1c0a15fe47ce59ac335e184e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502886, "upload_time": "2018-11-09T19:26:02", "upload_time_iso_8601": "2018-11-09T19:26:02.037895Z", "url": "https://files.pythonhosted.org/packages/22/30/7b5e3d367208ef82965b3c3b2f92430c3bc14b3dabb3eac1959faea621f7/PyOpenAL-0.7.4a1-py2.py3-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dafacab62433c20f2b62a19468776851", "sha256": "5e23a334ab23970cf700afbc97aec9d9a052b1d29e30213d25387e43a129de4c"}, "downloads": -1, "filename": "PyOpenAL-0.7.4a1.tar.gz", "has_sig": false, "md5_digest": "dafacab62433c20f2b62a19468776851", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26434, "upload_time": "2018-11-09T19:26:03", "upload_time_iso_8601": "2018-11-09T19:26:03.834274Z", "url": "https://files.pythonhosted.org/packages/15/b1/b7332afbf8111ef3c3ce5e41f7c985c43f92e93878d393099514884ff3e9/PyOpenAL-0.7.4a1.tar.gz", "yanked": false}], "0.7.5a1": [{"comment_text": "", "digests": {"md5": "d6352a12eeaa236fb6b93af45e23cb59", "sha256": "477953c14601abafeb26583dd27ea325ee0e5bb61011db46b2d0c4f544d663d3"}, "downloads": -1, "filename": "PyOpenAL-0.7.5a1-py2.py3-none-win32.whl", "has_sig": false, "md5_digest": "d6352a12eeaa236fb6b93af45e23cb59", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502774, "upload_time": "2018-12-03T14:34:26", "upload_time_iso_8601": "2018-12-03T14:34:26.724330Z", "url": "https://files.pythonhosted.org/packages/09/67/88bb9d2fc59e0fe942e8d976869b995a1a4513f9d20c0fd0bb443a5868f3/PyOpenAL-0.7.5a1-py2.py3-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b40c7f8cc6afa6899876c07df9aeb54c", "sha256": "99cfb526944209ea09fc873284ca7c7d8c7e6933241d2e6cfb722fb34dbe8b6b"}, "downloads": -1, "filename": "PyOpenAL-0.7.5a1-py2.py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "b40c7f8cc6afa6899876c07df9aeb54c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502778, "upload_time": "2018-12-03T14:34:30", "upload_time_iso_8601": "2018-12-03T14:34:30.984653Z", "url": "https://files.pythonhosted.org/packages/59/a8/820b6fb887010fce5a5115fff5720ceba896e87e239d41553d73003c098b/PyOpenAL-0.7.5a1-py2.py3-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94296172ab78f91f61c4e4c3e3354a17", "sha256": "8383095b9b9fe64191f88a1906e3653369bad4e6d41989921eba407aa831beda"}, "downloads": -1, "filename": "PyOpenAL-0.7.5a1.tar.gz", "has_sig": false, "md5_digest": "94296172ab78f91f61c4e4c3e3354a17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26357, "upload_time": "2018-12-03T14:34:33", "upload_time_iso_8601": "2018-12-03T14:34:33.048047Z", "url": "https://files.pythonhosted.org/packages/1f/76/866fd5863ca86fe718d06eaa949599514678039c5b046246ffc93ec74dee/PyOpenAL-0.7.5a1.tar.gz", "yanked": false}], "0.7.6a1": [{"comment_text": "", "digests": {"md5": "9ca9fc05d1dada8ccdda5071296e7665", "sha256": "7831d36331ff8f90b8e66462956b44d5d88da1e56308218a9cec6c4a52b839ad"}, "downloads": -1, "filename": "PyOpenAL-0.7.6a1-py2.py3-none-win32.whl", "has_sig": false, "md5_digest": "9ca9fc05d1dada8ccdda5071296e7665", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502773, "upload_time": "2018-12-22T09:37:04", "upload_time_iso_8601": "2018-12-22T09:37:04.831007Z", "url": "https://files.pythonhosted.org/packages/d6/a1/c51db40ca93c200e57b61bb18fb0cb01360504c65a19ca5f8d25d70a0ece/PyOpenAL-0.7.6a1-py2.py3-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cce0e67ecc2b50b7b1e1bc54bc9a601", "sha256": "4af31b2b87d2068a57b2b1723727f233bea54e53a0b56dc9baeb7735a552f9a2"}, "downloads": -1, "filename": "PyOpenAL-0.7.6a1-py2.py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "4cce0e67ecc2b50b7b1e1bc54bc9a601", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502778, "upload_time": "2018-12-22T09:37:08", "upload_time_iso_8601": "2018-12-22T09:37:08.250228Z", "url": "https://files.pythonhosted.org/packages/47/52/714cfa42870fc7fbbb771a0836956940f716f6b7a24f70e01c717777006c/PyOpenAL-0.7.6a1-py2.py3-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "186b725c8121495fc420fd2406c0040f", "sha256": "c16bf243232a434c58e03c94068404b2cda22bbaa93f6f1c71a3596a01fa9ac4"}, "downloads": -1, "filename": "PyOpenAL-0.7.6a1.tar.gz", "has_sig": false, "md5_digest": "186b725c8121495fc420fd2406c0040f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26347, "upload_time": "2018-12-22T09:37:09", "upload_time_iso_8601": "2018-12-22T09:37:09.589467Z", "url": "https://files.pythonhosted.org/packages/82/c7/d7c2f08d200d7ff25d016e4851ecc5542ec1bf6bd2d0083b6299776de830/PyOpenAL-0.7.6a1.tar.gz", "yanked": false}], "0.7.7a1": [{"comment_text": "", "digests": {"md5": "af110bf2e721cb7614221ced0795ec4b", "sha256": "1c6c26a2114d4b61a4630b8c2b97a9e2b31902ec83fac78461935f79e6a41458"}, "downloads": -1, "filename": "PyOpenAL-0.7.7a1-py2.py3-none-win32.whl", "has_sig": false, "md5_digest": "af110bf2e721cb7614221ced0795ec4b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502799, "upload_time": "2019-03-12T06:26:14", "upload_time_iso_8601": "2019-03-12T06:26:14.331606Z", "url": "https://files.pythonhosted.org/packages/b5/8b/e9385c5e2c5b0c76d8d994a319aa4a3c079b311f92b3d8dd43b971115cb9/PyOpenAL-0.7.7a1-py2.py3-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "176a28cbcce3e1cac4284ccdd0bf65d5", "sha256": "9ce35285e50aab0aacc7564debfc9c113c2c71cd2399178f48efdb1186e926fa"}, "downloads": -1, "filename": "PyOpenAL-0.7.7a1-py2.py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "176a28cbcce3e1cac4284ccdd0bf65d5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 502803, "upload_time": "2019-03-12T06:26:17", "upload_time_iso_8601": "2019-03-12T06:26:17.726613Z", "url": "https://files.pythonhosted.org/packages/e2/37/3a4cfdbfb4eb4653e7614d4d81281fa402bfb23186b424265e9b58a9407e/PyOpenAL-0.7.7a1-py2.py3-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e31b8f020113b77b335397427535d0c", "sha256": "e83493ecf0afbfb76c453a0cc6f75294474076d8e7f2a5496db22f938481c925"}, "downloads": -1, "filename": "PyOpenAL-0.7.7a1.tar.gz", "has_sig": false, "md5_digest": "4e31b8f020113b77b335397427535d0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25991, "upload_time": "2019-03-12T06:26:19", "upload_time_iso_8601": "2019-03-12T06:26:19.401725Z", "url": "https://files.pythonhosted.org/packages/d7/06/4df36c518a88fbc87751c06515ede95b3a58864197f61e7506230a116b40/PyOpenAL-0.7.7a1.tar.gz", "yanked": false}], "0.7.9a1": [{"comment_text": "", "digests": {"md5": "105f699fbc54f7494b22f7a6b2f26c75", "sha256": "e12cdf85825e8a27b9dbfa561de54cc9f83de9e5d88228f88e78022985845025"}, "downloads": -1, "filename": "PyOpenAL-0.7.9a1-py2.py3-none-win32.whl", "has_sig": false, "md5_digest": "105f699fbc54f7494b22f7a6b2f26c75", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 513386, "upload_time": "2019-10-22T18:51:09", "upload_time_iso_8601": "2019-10-22T18:51:09.497561Z", "url": "https://files.pythonhosted.org/packages/92/31/4ebe1411aa50e0a8d6f71bce9f5c58228ab6c2400f9ecc61b4c334d53cec/PyOpenAL-0.7.9a1-py2.py3-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e145565f9e4bdd56a5cb391ce37a925", "sha256": "70d2af2c79411c98d23b2964fd0c8bdbebd7bf77a5b976e774d01a17ab45a30f"}, "downloads": -1, "filename": "PyOpenAL-0.7.9a1-py2.py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "1e145565f9e4bdd56a5cb391ce37a925", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 513390, "upload_time": "2019-10-22T18:51:13", "upload_time_iso_8601": "2019-10-22T18:51:13.439608Z", "url": "https://files.pythonhosted.org/packages/01/42/64ea6b5ee662e3e9eaf6c0edebec6c5ef2ac283aed1e97dd7f60c8a829fd/PyOpenAL-0.7.9a1-py2.py3-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77131e0e9149e78e3b5807ee6c244bac", "sha256": "115ed4f71aa4184bda9e9f9c3f7a4a17f392110f133a381c2a375f77fff3cf52"}, "downloads": -1, "filename": "PyOpenAL-0.7.9a1.tar.gz", "has_sig": false, "md5_digest": "77131e0e9149e78e3b5807ee6c244bac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26622, "upload_time": "2019-10-22T18:51:15", "upload_time_iso_8601": "2019-10-22T18:51:15.463397Z", "url": "https://files.pythonhosted.org/packages/ff/bc/7176f33c9bfcb81fd6d4c784532809e93cc1c339b423cfcc62f21441411f/PyOpenAL-0.7.9a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1891a5be0cf4480b77f383fa45c63517", "sha256": "6df4ccf1fcb03e5b385a0e68e461ef00c62a1fa3557ac6c669bb50aec45a6cbb"}, "downloads": -1, "filename": "PyOpenAL-0.7.11a1-py2.py3-none-win32.whl", "has_sig": false, "md5_digest": "1891a5be0cf4480b77f383fa45c63517", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 461386, "upload_time": "2019-12-17T16:02:14", "upload_time_iso_8601": "2019-12-17T16:02:14.698548Z", "url": "https://files.pythonhosted.org/packages/4c/d0/e7ebff59051503e5eac7aabd1305dc244c77eaf55f21cd002197b01abba9/PyOpenAL-0.7.11a1-py2.py3-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6c0cd7f179a86026200e9090c6f3e44", "sha256": "da5bfdbe8fb3d2987d60430bec66ec8e51ef52ae8f792c0aa8a370413e712b45"}, "downloads": -1, "filename": "PyOpenAL-0.7.11a1-py2.py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "f6c0cd7f179a86026200e9090c6f3e44", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 513418, "upload_time": "2019-12-17T16:02:18", "upload_time_iso_8601": "2019-12-17T16:02:18.352647Z", "url": "https://files.pythonhosted.org/packages/60/54/e3d9fff1b60d101685e1f658792825c1012f0c02aa7c8f591796cdc4ed65/PyOpenAL-0.7.11a1-py2.py3-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f931c04f37c9c387ac03efbd92bdcdc", "sha256": "33ffd00bac6208755d36c744ffe8b5866d10b3c8aac05dfc173d5166df5d76c1"}, "downloads": -1, "filename": "PyOpenAL-0.7.11a1.tar.gz", "has_sig": false, "md5_digest": "7f931c04f37c9c387ac03efbd92bdcdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26714, "upload_time": "2019-12-17T16:02:19", "upload_time_iso_8601": "2019-12-17T16:02:19.933758Z", "url": "https://files.pythonhosted.org/packages/04/a8/8c09f20724e99790952014dd70f8c1fa6ca9cbf3bef4a43e188e09b959a4/PyOpenAL-0.7.11a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:13 2020"}