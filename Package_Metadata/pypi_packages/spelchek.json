{"info": {"author": "Steve Theodore", "author_email": "steve@theodox.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation", "Topic :: Text Processing"], "description": "spelchek\n--------\n\nA cheap-ass, pure-python spellchecker based on `Peter Norvig's Python\nBayes demo <http://norvig.com/spell-correct.html>`__ All the interesting\nwork is his.\n\nThe interesting external methods are\n\n-  ``known()`` filters a list of words and returns only those in the\n   dictionary,\n-  ``correct()`` returns the best guess for the supplied word\n-  ``guesses()`` returns all guesses for the supplied word\n-  ``add()`` adds a word to the dictionary, with an optional priority\n   value\n\nSo simple uses would be something like\n\n::\n\n    import spelchek\n    print spelchek.correct('eaxmple')\n    # 'example'\n\nThe current corpus of words includes about 75,000 entries. It does not\ninclude punction such as hyphens, apostrophes or spaces. The module also\nsupports optional user-supplied dictionaries, see the documentation of\n``spelchek.py`` for details.\n\nImportant Caveat\n=================\n\nThe heart of a spell checker is the dictionary, and the dictionary here\nis cadged together out of a bunch of free online sources. No real effort\nhas been made to check it for accuracy, and although it's trivially\ncorrect with several tens of thousands of words involved errors are\npretty much inevitable (if you find one, feel free to submit a pull\nrequest and I'll update ``corpus.txt`` as needed).\n\nThe algorithm is language agnostic so it should be easy to create \ndictionaries for languages other than English.  If you come up with a \nnon-English dictionary submit a pull request and we can extend the module\nto support language choice.\n\nInstallation\n============\n\nthe module is a simple python module with no binary dependencies.\nThe default dictionary is the file `corpus.txt` which lives inside \nthe spelchek package.\n\nYou can extend the built in dictionary in two ways.\n\n1. You can add words to the corpus.txt file; its's a plain text file\n   with words and frequency scores separated by a comma. High frequency\n   scores make a word more likely to be suggested as a correction, where\n   low frequencies are 'rarer' and so less likely to be suggested.  This\n   method is easiest if you are working with a source distributions from\n   the github repository\n2. You can add a custom dictionary of your own using the same , format\n   and point to it be setting an envrionment variable called SPELCHEK. These \n   entries will be added to the default dictionary at import time (note that\n   they will replace the assigned priorities of existing words).  This is a\n   low-friction way to try adding non-English language support.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/theodox/spelchek", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "spelchek", "package_url": "https://pypi.org/project/spelchek/", "platform": "", "project_url": "https://pypi.org/project/spelchek/", "project_urls": {"Homepage": "https://github.com/theodox/spelchek"}, "release_url": "https://pypi.org/project/spelchek/0.54/", "requires_dist": null, "requires_python": "", "summary": "A pure-python Bayesian spellchecker", "version": "0.54", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A cheap-ass, pure-python spellchecker based on <a href=\"http://norvig.com/spell-correct.html\" rel=\"nofollow\">Peter Norvig\u2019s Python\nBayes demo</a> All the interesting\nwork is his.</p>\n<p>The interesting external methods are</p>\n<ul>\n<li><tt>known()</tt> filters a list of words and returns only those in the\ndictionary,</li>\n<li><tt>correct()</tt> returns the best guess for the supplied word</li>\n<li><tt>guesses()</tt> returns all guesses for the supplied word</li>\n<li><tt>add()</tt> adds a word to the dictionary, with an optional priority\nvalue</li>\n</ul>\n<p>So simple uses would be something like</p>\n<pre>import spelchek\nprint spelchek.correct('eaxmple')\n# 'example'\n</pre>\n<p>The current corpus of words includes about 75,000 entries. It does not\ninclude punction such as hyphens, apostrophes or spaces. The module also\nsupports optional user-supplied dictionaries, see the documentation of\n<tt>spelchek.py</tt> for details.</p>\n<div id=\"important-caveat\">\n<h2>Important Caveat</h2>\n<p>The heart of a spell checker is the dictionary, and the dictionary here\nis cadged together out of a bunch of free online sources. No real effort\nhas been made to check it for accuracy, and although it\u2019s trivially\ncorrect with several tens of thousands of words involved errors are\npretty much inevitable (if you find one, feel free to submit a pull\nrequest and I\u2019ll update <tt>corpus.txt</tt> as needed).</p>\n<p>The algorithm is language agnostic so it should be easy to create\ndictionaries for languages other than English.  If you come up with a\nnon-English dictionary submit a pull request and we can extend the module\nto support language choice.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>the module is a simple python module with no binary dependencies.\nThe default dictionary is the file <cite>corpus.txt</cite> which lives inside\nthe spelchek package.</p>\n<p>You can extend the built in dictionary in two ways.</p>\n<ol>\n<li>You can add words to the corpus.txt file; its\u2019s a plain text file\nwith words and frequency scores separated by a comma. High frequency\nscores make a word more likely to be suggested as a correction, where\nlow frequencies are \u2018rarer\u2019 and so less likely to be suggested.  This\nmethod is easiest if you are working with a source distributions from\nthe github repository</li>\n<li>You can add a custom dictionary of your own using the same , format\nand point to it be setting an envrionment variable called SPELCHEK. These\nentries will be added to the default dictionary at import time (note that\nthey will replace the assigned priorities of existing words).  This is a\nlow-friction way to try adding non-English language support.</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 4623835, "releases": {"0.52": [{"comment_text": "", "digests": {"md5": "714f582443484d24380442702219643a", "sha256": "528207d6836b94f0f06aa2a54e1a6317689035943f28b2eb547c4163e554c49f"}, "downloads": -1, "filename": "spelchek-0.52.tar.gz", "has_sig": false, "md5_digest": "714f582443484d24380442702219643a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 234459, "upload_time": "2018-12-21T07:06:25", "upload_time_iso_8601": "2018-12-21T07:06:25.577860Z", "url": "https://files.pythonhosted.org/packages/7e/6f/a78b1f0425f253eb48affd8f676a8a6ab942067834900cc55d02a9f28b0b/spelchek-0.52.tar.gz", "yanked": false}], "0.54": [{"comment_text": "", "digests": {"md5": "f6c0dbe4aabd0b30179cc0490bdfa224", "sha256": "2a3b1e5cdc447585aa09a446f5c253140f2f95e7d34cd3afdcf254a6c61f9ed1"}, "downloads": -1, "filename": "spelchek-0.54.tar.gz", "has_sig": false, "md5_digest": "f6c0dbe4aabd0b30179cc0490bdfa224", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 234462, "upload_time": "2018-12-21T07:48:27", "upload_time_iso_8601": "2018-12-21T07:48:27.821621Z", "url": "https://files.pythonhosted.org/packages/59/18/d977458016aa9cc7065369aef1f22701c13c3c60d6bc708b0ac7bd37aa62/spelchek-0.54.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f6c0dbe4aabd0b30179cc0490bdfa224", "sha256": "2a3b1e5cdc447585aa09a446f5c253140f2f95e7d34cd3afdcf254a6c61f9ed1"}, "downloads": -1, "filename": "spelchek-0.54.tar.gz", "has_sig": false, "md5_digest": "f6c0dbe4aabd0b30179cc0490bdfa224", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 234462, "upload_time": "2018-12-21T07:48:27", "upload_time_iso_8601": "2018-12-21T07:48:27.821621Z", "url": "https://files.pythonhosted.org/packages/59/18/d977458016aa9cc7065369aef1f22701c13c3c60d6bc708b0ac7bd37aa62/spelchek-0.54.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:32 2020"}