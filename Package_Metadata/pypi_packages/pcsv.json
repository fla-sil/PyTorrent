{"info": {"author": "Pablo Acosta-Serafini", "author_email": "pmasdev@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. README.rst\n.. Copyright (c) 2013-2019 Pablo Acosta-Serafini\n.. See LICENSE for details\n\n.. image:: https://badge.fury.io/py/pcsv.svg\n    :target: https://pypi.org/project/pcsv\n    :alt: PyPI version\n\n.. image:: https://img.shields.io/pypi/l/pcsv.svg\n    :target: https://pypi.org/project/pcsv\n    :alt: License\n\n.. image:: https://img.shields.io/pypi/pyversions/pcsv.svg\n    :target: https://pypi.org/project/pcsv\n    :alt: Python versions supported\n\n.. image:: https://img.shields.io/pypi/format/pcsv.svg\n    :target: https://pypi.org/project/pcsv\n    :alt: Format\n\n|\n\n.. image::\n    https://dev.azure.com/pmasdev/pcsv/_apis/build/status/pmacosta.pcsv?branchName=master\n    :target: https://dev.azure.com/pmasdev/pcsv/_build?definitionId=7&_a=summary\n    :alt: Continuous integration test status\n\n.. image::\n    https://img.shields.io/azure-devops/coverage/pmasdev/pcsv/7.svg\n    :target: https://dev.azure.com/pmasdev/pcsv/_build?definitionId=7&_a=summary\n    :alt: Continuous integration test coverage\n\n.. image::\n    https://readthedocs.org/projects/pip/badge/?version=stable\n    :target: https://pip.readthedocs.io/en/stable/?badge=stable\n    :alt: Documentation status\n\n|\n\nDescription\n===========\n\n.. role:: bash(code)\n\t:language: bash\n\n.. _Cog: https://nedbatchelder.com/code/cog\n.. _Coverage: https://coverage.readthedocs.io\n.. _Docutils: http://docutils.sourceforge.net/docs\n.. _Mock: https://docs.python.org/3/library/unittest.mock.html\n.. _Pexdoc: https://pexdoc.readthedocs.org\n.. _Pmisc: https://pmisc.readthedocs.org\n.. _PyContracts: https://andreacensi.github.io/contracts\n.. _Pydocstyle: http://www.pydocstyle.org\n.. _Pylint: https://www.pylint.org\n.. _Py.test: http://pytest.org\n.. _Pytest-coverage: https://pypi.org/project/pytest-cov\n.. _Pytest-pmisc: https://pytest-pmisc.readthedocs.org\n.. _Pytest-xdist: https://pypi.org/project/pytest-xdist\n.. _Sphinx: http://sphinx-doc.org\n.. _ReadTheDocs Sphinx theme: https://github.com/rtfd/sphinx_rtd_theme\n.. _Inline Syntax Highlight Sphinx Extension:\n   https://bitbucket.org/klorenz/sphinxcontrib-inlinesyntaxhighlight\n.. _Shellcheck Linter Sphinx Extension:\n   https://pypi.org/project/sphinxcontrib-shellcheck\n.. _Tox: https://testrun.org/tox\n.. _Virtualenv: https://docs.python-guide.org/dev/virtualenvs\n\nThis module can be used to handle comma-separated values (CSV) files and do\nlightweight processing of their data with support for row and column\nfiltering. In addition to basic read, write and data replacement, files can be\nconcatenated, merged, and sorted\n\nExamples\n--------\n\nRead/write\n^^^^^^^^^^\n\n.. code-block:: python\n\n    # pcsv_example_1.py\n    import pmisc, pcsv\n\n    def main():\n        with pmisc.TmpFile() as fname:\n            ref_data = [[\"Item\", \"Cost\"], [1, 9.99], [2, 10000], [3, 0.10]]\n            # Write reference data to a file\n            pcsv.write(fname, ref_data, append=False)\n            # Read the data back\n            obj = pcsv.CsvFile(fname)\n        # After the object creation the I/O is done,\n        # can safely remove file (exit context manager)\n        # Check that data read is correct\n        assert obj.header() == ref_data[0]\n        assert obj.data() == ref_data[1:]\n        # Add a simple row filter, only look at rows that have\n        # values 1 and 3 in the \"Items\" column\n        obj.rfilter = {\"Item\": [1, 3]}\n        assert obj.data(filtered=True) == [ref_data[1], ref_data[3]]\n\n    if __name__ == \"__main__\":\n        main()\n\nReplace data\n^^^^^^^^^^^^\n\n.. code-block:: python\n\n    # pcsv_example_2.py\n    import pmisc, pcsv\n\n    def main():\n        ctx = pmisc.TmpFile\n        with ctx() as fname1:\n            with ctx() as fname2:\n                with ctx() as ofname:\n                    # Create first (input) data file\n                    input_data = [[\"Item\", \"Cost\"], [1, 9.99], [2, 10000], [3, 0.10]]\n                    pcsv.write(fname1, input_data, append=False)\n                    # Create second (replacement) data file\n                    replacement_data = [\n                        [\"Staff\", \"Rate\", \"Days\"],\n                        [\"Joe\", 10, \"Sunday\"],\n                        [\"Sue\", 20, \"Thursday\"],\n                        [\"Pat\", 15, \"Tuesday\"],\n                    ]\n                    pcsv.write(fname2, replacement_data, append=False)\n                    # Replace \"Cost\" column of input file with \"Rate\" column\n                    # of replacement file for \"Items\" 2 and 3 with \"Staff\" data\n                    # from Joe and Pat. Save resulting data to another file\n                    pcsv.replace(\n                        fname1=fname1,\n                        dfilter1=(\"Cost\", {\"Item\": [1, 3]}),\n                        fname2=fname2,\n                        dfilter2=(\"Rate\", {\"Staff\": [\"Joe\", \"Pat\"]}),\n                        ofname=ofname,\n                    )\n                    # Verify that resulting file is correct\n                    ref_data = [[\"Item\", \"Cost\"], [1, 10], [2, 10000], [3, 15]]\n                    obj = pcsv.CsvFile(ofname)\n                    assert obj.header() == ref_data[0]\n                    assert obj.data() == ref_data[1:]\n\n    if __name__ == \"__main__\":\n        main()\n\nConcatenate two files\n^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    # pcsv_example_3.py\n    import pmisc, pcsv\n\n    def main():\n        ctx = pmisc.TmpFile\n        with ctx() as fname1:\n            with ctx() as fname2:\n                with ctx() as ofname:\n                    # Create first data file\n                    data1 = [[1, 9.99], [2, 10000], [3, 0.10]]\n                    pcsv.write(fname1, data1, append=False)\n                    # Create second data file\n                    data2 = [\n                        [\"Joe\", 10, \"Sunday\"],\n                        [\"Sue\", 20, \"Thursday\"],\n                        [\"Pat\", 15, \"Tuesday\"],\n                    ]\n                    pcsv.write(fname2, data2, append=False)\n                    # Concatenate file1 and file2. Filter out\n                    # second column of file2\n                    pcsv.concatenate(\n                        fname1=fname1,\n                        fname2=fname2,\n                        has_header1=False,\n                        has_header2=False,\n                        dfilter2=[0, 2],\n                        ofname=ofname,\n                        ocols=[\"D1\", \"D2\"],\n                    )\n                    # Verify that resulting file is correct\n                    ref_data = [\n                        [\"D1\", \"D2\"],\n                        [1, 9.99],\n                        [2, 10000],\n                        [3, 0.10],\n                        [\"Joe\", \"Sunday\"],\n                        [\"Sue\", \"Thursday\"],\n                        [\"Pat\", \"Tuesday\"],\n                    ]\n                    obj = pcsv.CsvFile(ofname)\n                    assert obj.header() == ref_data[0]\n                    assert obj.data() == ref_data[1:]\n\n    if __name__ == \"__main__\":\n        main()\n\nMerge two files\n^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    # pcsv_example_4.py\n    import pmisc, pcsv\n\n    def main():\n        ctx = pmisc.TmpFile\n        with ctx() as fname1:\n            with ctx() as fname2:\n                with ctx() as ofname:\n                    # Create first data file\n                    data1 = [[1, 9.99], [2, 10000], [3, 0.10]]\n                    pcsv.write(fname1, data1, append=False)\n                    # Create second data file\n                    data2 = [\n                        [\"Joe\", 10, \"Sunday\"],\n                        [\"Sue\", 20, \"Thursday\"],\n                        [\"Pat\", 15, \"Tuesday\"],\n                    ]\n                    pcsv.write(fname2, data2, append=False)\n                    # Merge file1 and file2\n                    pcsv.merge(\n                        fname1=fname1,\n                        has_header1=False,\n                        fname2=fname2,\n                        has_header2=False,\n                        ofname=ofname,\n                    )\n                    # Verify that resulting file is correct\n                    ref_data = [\n                        [1, 9.99, \"Joe\", 10, \"Sunday\"],\n                        [2, 10000, \"Sue\", 20, \"Thursday\"],\n                        [3, 0.10, \"Pat\", 15, \"Tuesday\"],\n                    ]\n                    obj = pcsv.CsvFile(ofname, has_header=False)\n                    assert obj.header() == list(range(0, 5))\n                    assert obj.data() == ref_data\n\n    if __name__ == \"__main__\":\n        main()\n\nSort a file\n^^^^^^^^^^^\n\n.. code-block:: python\n\n    # pcsv_example_5.py\n    import pmisc, pcsv\n\n    def main():\n        ctx = pmisc.TmpFile\n        with ctx() as ifname:\n            with ctx() as ofname:\n                # Create first data file\n                data = [\n                    [\"Ctrl\", \"Ref\", \"Result\"],\n                    [1, 3, 10],\n                    [1, 4, 20],\n                    [2, 4, 30],\n                    [2, 5, 40],\n                    [3, 5, 50],\n                ]\n                pcsv.write(ifname, data, append=False)\n                # Sort\n                pcsv.dsort(\n                    fname=ifname,\n                    order=[{\"Ctrl\": \"D\"}, {\"Ref\": \"A\"}],\n                    has_header=True,\n                    ofname=ofname,\n                )\n                # Verify that resulting file is correct\n                ref_data = [[3, 5, 50], [2, 4, 30], [2, 5, 40], [1, 3, 10], [1, 4, 20]]\n                obj = pcsv.CsvFile(ofname, has_header=True)\n                assert obj.header() == [\"Ctrl\", \"Ref\", \"Result\"]\n                assert obj.data() == ref_data\n\n    if __name__ == \"__main__\":\n        main()\n\nInterpreter\n===========\n\nThe package has been developed and tested with Python 2.7, 3.5, 3.6 and 3.7\nunder Linux (Debian, Ubuntu), Apple macOS and Microsoft Windows\n\nInstalling\n==========\n\n.. code-block:: console\n\n\t$ pip install pcsv\n\nDocumentation\n=============\n\nAvailable at `Read the Docs <https://pcsv.readthedocs.io>`_\n\nContributing\n============\n\n1. Abide by the adopted `code of conduct\n   <https://www.contributor-covenant.org/version/1/4/code-of-conduct>`_\n\n2. Fork the `repository <https://github.com/pmacosta/pcsv>`_ from GitHub and\n   then clone personal copy [#f1]_:\n\n    .. code-block:: console\n\n        $ github_user=myname\n        $ git clone --recurse-submodules \\\n              https://github.com/\"${github_user}\"/pcsv.git\n        Cloning into 'pcsv'...\n        ...\n        $ cd pcsv || exit 1\n        $ export PCSV_DIR=${PWD}\n        $\n\n3. The package uses two sub-modules: a set of custom Pylint plugins to help with\n   some areas of code quality and consistency (under the ``pylint_plugins``\n   directory), and a lightweight package management framework (under the\n   ``pypkg`` directory). Additionally, the `pre-commit framework\n   <https://pre-commit.com/>`_ is used to perform various pre-commit code\n   quality and consistency checks. To enable the pre-commit hooks:\n\n    .. code-block:: console\n\n        $ cd \"${PCSV_DIR}\" || exit 1\n        $ pre-commit install\n        pre-commit installed at .../pcsv/.git/hooks/pre-commit\n        $\n\n4. Ensure that the Python interpreter can find the package modules\n   (update the :bash:`$PYTHONPATH` environment variable, or use\n   `sys.paths() <https://docs.python.org/3/library/sys.html#sys.path>`_,\n   etc.)\n\n   .. code-block:: console\n\n       $ export PYTHONPATH=${PYTHONPATH}:${PCSV_DIR}\n       $\n\n5. Install the dependencies (if needed, done automatically by pip):\n\n    * `Cog`_ (2.5.1 or newer)\n\n    * `Coverage`_ (4.5.3 or newer)\n\n    * `Docutils`_ (0.14 or newer)\n\n    * `Inline Syntax Highlight Sphinx Extension`_ (0.2 or newer)\n\n    * `Mock`_ (Python 2.x only, 2.0.0 or newer)\n\n    * `Pexdoc`_ (1.1.4 or newer)\n\n    * `Pmisc`_ (1.5.8 or newer)\n\n    * `Py.test`_ (4.3.1 or newer)\n\n    * `PyContracts`_ (1.8.2 or newer)\n\n    * `Pydocstyle`_ (3.0.0 or newer)\n\n    * `Pylint`_ (Python 2.x: 1.9.4 or newer, Python 3.x: 2.3.1 or newer)\n\n    * `Pytest-coverage`_ (2.6.1 or newer)\n\n    * `Pytest-pmisc`_ (1.0.7 or newer)\n\n    * `Pytest-xdist`_ (optional, 1.26.1 or newer)\n\n    * `ReadTheDocs Sphinx theme`_ (0.4.3 or newer)\n\n    * `Shellcheck Linter Sphinx Extension`_ (1.0.8 or newer)\n\n    * `Sphinx`_ (1.8.5 or newer)\n\n    * `Tox`_ (3.7.0 or newer)\n\n    * `Virtualenv`_ (16.4.3 or newer)\n\n6. Implement a new feature or fix a bug\n\n7. Write a unit test which shows that the contributed code works as expected.\n   Run the package tests to ensure that the bug fix or new feature does not\n   have adverse side effects. If possible achieve 100\\% code and branch\n   coverage of the contribution. Thorough package validation\n   can be done via Tox and Pytest:\n\n   .. code-block:: console\n\n       $ PKG_NAME=pcsv tox\n       GLOB sdist-make: .../pcsv/setup.py\n       py27-pkg create: .../pcsv/.tox/py27\n       py27-pkg installdeps: -r.../pcsv/requirements/tests_py27.pip, -r.../pcsv/requirements/docs_py27.pip\n       ...\n         py27-pkg: commands succeeded\n         py35-pkg: commands succeeded\n         py36-pkg: commands succeeded\n         py37-pkg: commands succeeded\n         congratulations :)\n       $\n\n   `Setuptools <https://bitbucket.org/pypa/setuptools>`_ can also be used\n   (Tox is configured as its virtual environment manager):\n\n   .. code-block:: console\n\n       $ PKG_NAME=pcsv python setup.py tests\n       running tests\n       running egg_info\n       writing pcsv.egg-info/PKG-INFO\n       writing dependency_links to pcsv.egg-info/dependency_links.txt\n       writing requirements to pcsv.egg-info/requires.txt\n       ...\n         py27-pkg: commands succeeded\n         py35-pkg: commands succeeded\n         py36-pkg: commands succeeded\n         py37-pkg: commands succeeded\n         congratulations :)\n       $\n\n   Tox (or Setuptools via Tox) runs with the following default environments:\n   ``py27-pkg``, ``py35-pkg``, ``py36-pkg`` and ``py37-pkg`` [#f3]_. These use\n   the 2.7, 3.5, 3.6 and 3.7 interpreters, respectively, to test all code in\n   the documentation (both in Sphinx ``*.rst`` source files and in\n   docstrings), run all unit tests, measure test coverage and re-build the\n   exceptions documentation. To pass arguments to Pytest (the test runner) use\n   a double dash (``--``) after all the Tox arguments, for example:\n\n   .. code-block:: console\n\n       $ PKG_NAME=pcsv tox -e py27-pkg -- -n 4\n       GLOB sdist-make: .../pcsv/setup.py\n       py27-pkg inst-nodeps: .../pcsv/.tox/.tmp/package/1/pcsv-1.0.8.zip\n       ...\n         py27-pkg: commands succeeded\n         congratulations :)\n       $\n\n   Or use the :code:`-a` Setuptools optional argument followed by a quoted\n   string with the arguments for Pytest. For example:\n\n   .. code-block:: console\n\n       $ PKG_NAME=pcsv python setup.py tests -a \"-e py27-pkg -- -n 4\"\n       running tests\n       ...\n         py27-pkg: commands succeeded\n         congratulations :)\n       $\n\n   There are other convenience environments defined for Tox [#f3]_:\n\n    * ``py27-repl``, ``py35-repl``, ``py36-repl`` and ``py37-repl`` run the\n      Python 2.7, 3.5, 3.6 and 3.7 REPL, respectively, in the appropriate\n      virtual environment. The ``pcsv`` package is pip-installed by Tox when\n      the environments are created.  Arguments to the interpreter can be\n      passed in the command line after a double dash (``--``).\n\n    * ``py27-test``, ``py35-test``, ``py36-test`` and ``py37-test`` run Pytest\n      using the Python 2.7, 3.5, 3.6 and 3.7 interpreter, respectively, in the\n      appropriate virtual environment. Arguments to pytest can be passed in\n      the command line after a double dash (``--``) , for example:\n\n      .. code-block:: console\n\n       $ PKG_NAME=pcsv tox -e py27-test -- -x test_pcsv.py\n       GLOB sdist-make: .../pcsv/setup.py\n       py27-pkg inst-nodeps: .../pcsv/.tox/.tmp/package/1/pcsv-1.0.8.zip\n       ...\n         py27-pkg: commands succeeded\n         congratulations :)\n       $\n    * ``py27-test``, ``py35-test``, ``py36-test`` and ``py37-test`` test code\n      and branch coverage using the 2.7, 3.5, 3.6 and 3.7 interpreter,\n      respectively, in the appropriate virtual environment. Arguments to\n      pytest can be passed in the command line after a double dash (``--``).\n      The report can be found in\n      :bash:`${PCSV_DIR}/.tox/py[PV]/usr/share/pcsv/tests/htmlcov/index.html`\n      where ``[PV]`` stands for ``2.7``, ``3.5``, ``3.6`` or ``3.7`` depending\n      on the interpreter used.\n\n8. Verify that continuous integration tests pass. The package has continuous\n   integration configured for Linux, Apple macOS and Microsoft Windows (all via\n   `Azure DevOps <https://dev.azure.com/pmasdev>`_).\n\n9. Document the new feature or bug fix (if needed). The script\n   :bash:`${PCSV_DIR}/pypkg/build_docs.py` re-builds the whole package\n   documentation (re-generates images, cogs source files, etc.):\n\n   .. code-block:: console\n\n       $ \"${PCSV_DIR}\"/pypkg/build_docs.py -h\n       usage: build_docs.py [-h] [-d DIRECTORY] [-r]\n                            [-n NUM_CPUS] [-t]\n\n       Build pcsv package documentation\n\n       optional arguments:\n         -h, --help            show this help message and exit\n         -d DIRECTORY, --directory DIRECTORY\n                               specify source file directory\n                               (default ../pcsv)\n         -r, --rebuild         rebuild exceptions documentation.\n                               If no module name is given all\n                               modules with auto-generated\n                               exceptions documentation are\n                               rebuilt\n         -n NUM_CPUS, --num-cpus NUM_CPUS\n                               number of CPUs to use (default: 1)\n         -t, --test            diff original and rebuilt file(s)\n                               (exit code 0 indicates file(s) are\n                               identical, exit code 1 indicates\n                               file(s) are different)\n\n.. rubric:: Footnotes\n\n.. [#f1] All examples are for the `bash <https://www.gnu.org/software/bash/>`_\n   shell\n\n.. [#f2] It is assumed that all the Python interpreters are in the executables\n   path. Source code for the interpreters can be downloaded from Python's main\n   `site <https://www.python.org/downloads/>`_\n\n.. [#f3] Tox configuration largely inspired by\n   `Ionel's codelog <https://blog.ionelmc.ro/2015/04/14/\n   tox-tricks-and-patterns/>`_\n\nLicense\n=======\n\nThe MIT License (MIT)\n\nCopyright (c) 2013-2019 Pablo Acosta-Serafini\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n.. CHANGELOG.rst\n.. Copyright (c) 2013-2019 Pablo Acosta-Serafini\n.. See LICENSE for details\n\nChangelog\n=========\n\n* 1.0.8 [2019-03-22]: Documentation and dependency update\n\n* 1.0.7 [2019-03-09]: Dropped support for Python 2.6, 3.3 and 3.4. Updates to\n  support newest versions of dependencies. Adopted lightweight package\n  management framework\n\n* 1.0.6 [2017-09-10]: Fixed bug while filtering rows that have empty column\n  specified in filter. Fixed broken multi-line links in documentation\n\n* 1.0.5 [2017-02-10]: Package build enhancements and fixes\n\n* 1.0.4 [2017-02-07]: Python 3.6 support\n\n* 1.0.3 [2016-06-10]: Minor documentation build bug fix\n\n* 1.0.2 [2016-05-12]: Minor documentation updates\n\n* 1.0.1 [2016-05-12]: Minor documentation updates\n\n* 1.0.0 [2016-05-12]: Final release of 1.0.0 branch\n\n* 1.0.0rc1 [2016-05-11]: Initial commit, forked a subset from putil PyPI\n  package\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/pmacosta/pcsv/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pcsv", "package_url": "https://pypi.org/project/pcsv/", "platform": "any", "project_url": "https://pypi.org/project/pcsv/", "project_urls": {"Homepage": "http://github.com/pmacosta/pcsv/"}, "release_url": "https://pypi.org/project/pcsv/1.0.8/", "requires_dist": ["pycontracts (>=1.8.2)", "pmisc (>=1.5.8)", "pexdoc (>=1.1.4)"], "requires_python": "", "summary": "", "version": "1.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/pcsv\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/978f8a3da00828054e53a26550198a860d3a56cb/68747470733a2f2f62616467652e667572792e696f2f70792f706373762e737667\"></a>\n<a href=\"https://pypi.org/project/pcsv\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c1ca00871a19bc93c9bbe07204130d3f45b6785a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f706373762e737667\"></a>\n<a href=\"https://pypi.org/project/pcsv\" rel=\"nofollow\"><img alt=\"Python versions supported\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52cadd4256d2bc90ba6b156e5444cc6b475ffb89/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f706373762e737667\"></a>\n<a href=\"https://pypi.org/project/pcsv\" rel=\"nofollow\"><img alt=\"Format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/63ebd3a7d8b4ab645230b98c10ab0b0ee69f2161/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f706373762e737667\"></a>\n<div>\n<div><br></div>\n</div>\n<a href=\"https://dev.azure.com/pmasdev/pcsv/_build?definitionId=7&amp;_a=summary\" rel=\"nofollow\"><img alt=\"Continuous integration test status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/59eeef44185a05bd834f3bc7b4d3402173df8a26/68747470733a2f2f6465762e617a7572652e636f6d2f706d61736465762f706373762f5f617069732f6275696c642f7374617475732f706d61636f7374612e706373763f6272616e63684e616d653d6d6173746572\"></a>\n<a href=\"https://dev.azure.com/pmasdev/pcsv/_build?definitionId=7&amp;_a=summary\" rel=\"nofollow\"><img alt=\"Continuous integration test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a83cf26d096a74b64dab6caa72f751c212f9a03/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f636f7665726167652f706d61736465762f706373762f372e737667\"></a>\n<a href=\"https://pip.readthedocs.io/en/stable/?badge=stable\" rel=\"nofollow\"><img alt=\"Documentation status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b6e56728f4c4392a1b7cbb316b136108646d4a0f/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7069702f62616467652f3f76657273696f6e3d737461626c65\"></a>\n<div>\n<div><br></div>\n</div>\n<div id=\"description\">\n<h2>Description</h2>\n<p>This module can be used to handle comma-separated values (CSV) files and do\nlightweight processing of their data with support for row and column\nfiltering. In addition to basic read, write and data replacement, files can be\nconcatenated, merged, and sorted</p>\n<div id=\"examples\">\n<h3>Examples</h3>\n<div id=\"read-write\">\n<h4>Read/write</h4>\n<pre><span class=\"c1\"># pcsv_example_1.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pmisc</span><span class=\"o\">,</span> <span class=\"nn\">pcsv</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"k\">with</span> <span class=\"n\">pmisc</span><span class=\"o\">.</span><span class=\"n\">TmpFile</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">fname</span><span class=\"p\">:</span>\n        <span class=\"n\">ref_data</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"s2\">\"Item\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Cost\"</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">9.99</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mf\">0.10</span><span class=\"p\">]]</span>\n        <span class=\"c1\"># Write reference data to a file</span>\n        <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">ref_data</span><span class=\"p\">,</span> <span class=\"n\">append</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Read the data back</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">CsvFile</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">)</span>\n    <span class=\"c1\"># After the object creation the I/O is done,</span>\n    <span class=\"c1\"># can safely remove file (exit context manager)</span>\n    <span class=\"c1\"># Check that data read is correct</span>\n    <span class=\"k\">assert</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">header</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">ref_data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"k\">assert</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">ref_data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n    <span class=\"c1\"># Add a simple row filter, only look at rows that have</span>\n    <span class=\"c1\"># values 1 and 3 in the \"Items\" column</span>\n    <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">rfilter</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"Item\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]}</span>\n    <span class=\"k\">assert</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">(</span><span class=\"n\">filtered</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">ref_data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">ref_data</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]]</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"replace-data\">\n<h4>Replace data</h4>\n<pre><span class=\"c1\"># pcsv_example_2.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pmisc</span><span class=\"o\">,</span> <span class=\"nn\">pcsv</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"n\">pmisc</span><span class=\"o\">.</span><span class=\"n\">TmpFile</span>\n    <span class=\"k\">with</span> <span class=\"n\">ctx</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">fname1</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"n\">ctx</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">fname2</span><span class=\"p\">:</span>\n            <span class=\"k\">with</span> <span class=\"n\">ctx</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">ofname</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Create first (input) data file</span>\n                <span class=\"n\">input_data</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"s2\">\"Item\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Cost\"</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">9.99</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mf\">0.10</span><span class=\"p\">]]</span>\n                <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fname1</span><span class=\"p\">,</span> <span class=\"n\">input_data</span><span class=\"p\">,</span> <span class=\"n\">append</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n                <span class=\"c1\"># Create second (replacement) data file</span>\n                <span class=\"n\">replacement_data</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"Staff\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Rate\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Days\"</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"Joe\"</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s2\">\"Sunday\"</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"Sue\"</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"s2\">\"Thursday\"</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"Pat\"</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"s2\">\"Tuesday\"</span><span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n                <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fname2</span><span class=\"p\">,</span> <span class=\"n\">replacement_data</span><span class=\"p\">,</span> <span class=\"n\">append</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n                <span class=\"c1\"># Replace \"Cost\" column of input file with \"Rate\" column</span>\n                <span class=\"c1\"># of replacement file for \"Items\" 2 and 3 with \"Staff\" data</span>\n                <span class=\"c1\"># from Joe and Pat. Save resulting data to another file</span>\n                <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span>\n                    <span class=\"n\">fname1</span><span class=\"o\">=</span><span class=\"n\">fname1</span><span class=\"p\">,</span>\n                    <span class=\"n\">dfilter1</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s2\">\"Cost\"</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"Item\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]}),</span>\n                    <span class=\"n\">fname2</span><span class=\"o\">=</span><span class=\"n\">fname2</span><span class=\"p\">,</span>\n                    <span class=\"n\">dfilter2</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s2\">\"Rate\"</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"Staff\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Joe\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Pat\"</span><span class=\"p\">]}),</span>\n                    <span class=\"n\">ofname</span><span class=\"o\">=</span><span class=\"n\">ofname</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n                <span class=\"c1\"># Verify that resulting file is correct</span>\n                <span class=\"n\">ref_data</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"s2\">\"Item\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Cost\"</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">]]</span>\n                <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">CsvFile</span><span class=\"p\">(</span><span class=\"n\">ofname</span><span class=\"p\">)</span>\n                <span class=\"k\">assert</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">header</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">ref_data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"k\">assert</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">ref_data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"concatenate-two-files\">\n<h4>Concatenate two files</h4>\n<pre><span class=\"c1\"># pcsv_example_3.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pmisc</span><span class=\"o\">,</span> <span class=\"nn\">pcsv</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"n\">pmisc</span><span class=\"o\">.</span><span class=\"n\">TmpFile</span>\n    <span class=\"k\">with</span> <span class=\"n\">ctx</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">fname1</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"n\">ctx</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">fname2</span><span class=\"p\">:</span>\n            <span class=\"k\">with</span> <span class=\"n\">ctx</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">ofname</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Create first data file</span>\n                <span class=\"n\">data1</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">9.99</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mf\">0.10</span><span class=\"p\">]]</span>\n                <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fname1</span><span class=\"p\">,</span> <span class=\"n\">data1</span><span class=\"p\">,</span> <span class=\"n\">append</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n                <span class=\"c1\"># Create second data file</span>\n                <span class=\"n\">data2</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"Joe\"</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s2\">\"Sunday\"</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"Sue\"</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"s2\">\"Thursday\"</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"Pat\"</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"s2\">\"Tuesday\"</span><span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n                <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fname2</span><span class=\"p\">,</span> <span class=\"n\">data2</span><span class=\"p\">,</span> <span class=\"n\">append</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n                <span class=\"c1\"># Concatenate file1 and file2. Filter out</span>\n                <span class=\"c1\"># second column of file2</span>\n                <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">(</span>\n                    <span class=\"n\">fname1</span><span class=\"o\">=</span><span class=\"n\">fname1</span><span class=\"p\">,</span>\n                    <span class=\"n\">fname2</span><span class=\"o\">=</span><span class=\"n\">fname2</span><span class=\"p\">,</span>\n                    <span class=\"n\">has_header1</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"n\">has_header2</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"n\">dfilter2</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n                    <span class=\"n\">ofname</span><span class=\"o\">=</span><span class=\"n\">ofname</span><span class=\"p\">,</span>\n                    <span class=\"n\">ocols</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"D1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"D2\"</span><span class=\"p\">],</span>\n                <span class=\"p\">)</span>\n                <span class=\"c1\"># Verify that resulting file is correct</span>\n                <span class=\"n\">ref_data</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"D1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"D2\"</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">9.99</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mf\">0.10</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"Joe\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Sunday\"</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"Sue\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Thursday\"</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"Pat\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Tuesday\"</span><span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n                <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">CsvFile</span><span class=\"p\">(</span><span class=\"n\">ofname</span><span class=\"p\">)</span>\n                <span class=\"k\">assert</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">header</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">ref_data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"k\">assert</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">ref_data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"merge-two-files\">\n<h4>Merge two files</h4>\n<pre><span class=\"c1\"># pcsv_example_4.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pmisc</span><span class=\"o\">,</span> <span class=\"nn\">pcsv</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"n\">pmisc</span><span class=\"o\">.</span><span class=\"n\">TmpFile</span>\n    <span class=\"k\">with</span> <span class=\"n\">ctx</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">fname1</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"n\">ctx</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">fname2</span><span class=\"p\">:</span>\n            <span class=\"k\">with</span> <span class=\"n\">ctx</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">ofname</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Create first data file</span>\n                <span class=\"n\">data1</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">9.99</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mf\">0.10</span><span class=\"p\">]]</span>\n                <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fname1</span><span class=\"p\">,</span> <span class=\"n\">data1</span><span class=\"p\">,</span> <span class=\"n\">append</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n                <span class=\"c1\"># Create second data file</span>\n                <span class=\"n\">data2</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"Joe\"</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s2\">\"Sunday\"</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"Sue\"</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"s2\">\"Thursday\"</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"s2\">\"Pat\"</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"s2\">\"Tuesday\"</span><span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n                <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fname2</span><span class=\"p\">,</span> <span class=\"n\">data2</span><span class=\"p\">,</span> <span class=\"n\">append</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n                <span class=\"c1\"># Merge file1 and file2</span>\n                <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">merge</span><span class=\"p\">(</span>\n                    <span class=\"n\">fname1</span><span class=\"o\">=</span><span class=\"n\">fname1</span><span class=\"p\">,</span>\n                    <span class=\"n\">has_header1</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"n\">fname2</span><span class=\"o\">=</span><span class=\"n\">fname2</span><span class=\"p\">,</span>\n                    <span class=\"n\">has_header2</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"n\">ofname</span><span class=\"o\">=</span><span class=\"n\">ofname</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n                <span class=\"c1\"># Verify that resulting file is correct</span>\n                <span class=\"n\">ref_data</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                    <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">9.99</span><span class=\"p\">,</span> <span class=\"s2\">\"Joe\"</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s2\">\"Sunday\"</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">,</span> <span class=\"s2\">\"Sue\"</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"s2\">\"Thursday\"</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mf\">0.10</span><span class=\"p\">,</span> <span class=\"s2\">\"Pat\"</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"s2\">\"Tuesday\"</span><span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n                <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">CsvFile</span><span class=\"p\">(</span><span class=\"n\">ofname</span><span class=\"p\">,</span> <span class=\"n\">has_header</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n                <span class=\"k\">assert</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">header</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n                <span class=\"k\">assert</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">ref_data</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"sort-a-file\">\n<h4>Sort a file</h4>\n<pre><span class=\"c1\"># pcsv_example_5.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pmisc</span><span class=\"o\">,</span> <span class=\"nn\">pcsv</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"n\">pmisc</span><span class=\"o\">.</span><span class=\"n\">TmpFile</span>\n    <span class=\"k\">with</span> <span class=\"n\">ctx</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">ifname</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"n\">ctx</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">ofname</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Create first data file</span>\n            <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"p\">[</span><span class=\"s2\">\"Ctrl\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Ref\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Result\"</span><span class=\"p\">],</span>\n                <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span>\n                <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">],</span>\n                <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">],</span>\n                <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">],</span>\n                <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">],</span>\n            <span class=\"p\">]</span>\n            <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">ifname</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">append</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n            <span class=\"c1\"># Sort</span>\n            <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">dsort</span><span class=\"p\">(</span>\n                <span class=\"n\">fname</span><span class=\"o\">=</span><span class=\"n\">ifname</span><span class=\"p\">,</span>\n                <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"p\">[{</span><span class=\"s2\">\"Ctrl\"</span><span class=\"p\">:</span> <span class=\"s2\">\"D\"</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s2\">\"Ref\"</span><span class=\"p\">:</span> <span class=\"s2\">\"A\"</span><span class=\"p\">}],</span>\n                <span class=\"n\">has_header</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">ofname</span><span class=\"o\">=</span><span class=\"n\">ofname</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"c1\"># Verify that resulting file is correct</span>\n            <span class=\"n\">ref_data</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">]]</span>\n            <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">pcsv</span><span class=\"o\">.</span><span class=\"n\">CsvFile</span><span class=\"p\">(</span><span class=\"n\">ofname</span><span class=\"p\">,</span> <span class=\"n\">has_header</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"k\">assert</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">header</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"s2\">\"Ctrl\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Ref\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Result\"</span><span class=\"p\">]</span>\n            <span class=\"k\">assert</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">ref_data</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n</div>\n<div id=\"interpreter\">\n<h2>Interpreter</h2>\n<p>The package has been developed and tested with Python 2.7, 3.5, 3.6 and 3.7\nunder Linux (Debian, Ubuntu), Apple macOS and Microsoft Windows</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<pre><span class=\"gp\">$</span> pip install pcsv\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Available at <a href=\"https://pcsv.readthedocs.io\" rel=\"nofollow\">Read the Docs</a></p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<ol>\n<li><p>Abide by the adopted <a href=\"https://www.contributor-covenant.org/version/1/4/code-of-conduct\" rel=\"nofollow\">code of conduct</a></p>\n</li>\n<li><p>Fork the <a href=\"https://github.com/pmacosta/pcsv\" rel=\"nofollow\">repository</a> from GitHub and\nthen clone personal copy <a href=\"#f1\" id=\"id1\" rel=\"nofollow\">[1]</a>:</p>\n<blockquote>\n<pre><span class=\"gp\">$</span> <span class=\"nv\">github_user</span><span class=\"o\">=</span>myname\n<span class=\"gp\">$</span> git clone --recurse-submodules <span class=\"se\">\\\n</span>      https://github.com/<span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">github_user</span><span class=\"si\">}</span><span class=\"s2\">\"</span>/pcsv.git\n<span class=\"go\">Cloning into 'pcsv'...\n...\n</span><span class=\"gp\">$</span> <span class=\"nb\">cd</span> pcsv <span class=\"o\">||</span> <span class=\"nb\">exit</span> <span class=\"m\">1</span>\n<span class=\"gp\">$</span> <span class=\"nb\">export</span> <span class=\"nv\">PCSV_DIR</span><span class=\"o\">=</span><span class=\"si\">${</span><span class=\"nv\">PWD</span><span class=\"si\">}</span>\n<span class=\"gp\">$</span>\n</pre>\n</blockquote>\n</li>\n<li><p>The package uses two sub-modules: a set of custom Pylint plugins to help with\nsome areas of code quality and consistency (under the <tt>pylint_plugins</tt>\ndirectory), and a lightweight package management framework (under the\n<tt>pypkg</tt> directory). Additionally, the <a href=\"https://pre-commit.com/\" rel=\"nofollow\">pre-commit framework</a> is used to perform various pre-commit code\nquality and consistency checks. To enable the pre-commit hooks:</p>\n<blockquote>\n<pre><span class=\"gp\">$</span> <span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">PCSV_DIR</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"o\">||</span> <span class=\"nb\">exit</span> <span class=\"m\">1</span>\n<span class=\"gp\">$</span> pre-commit install\n<span class=\"go\">pre-commit installed at .../pcsv/.git/hooks/pre-commit\n</span><span class=\"gp\">$</span>\n</pre>\n</blockquote>\n</li>\n<li><p>Ensure that the Python interpreter can find the package modules\n(update the <code class=\"bash\"><span class=\"nv\">$PYTHONPATH</span></code> environment variable, or use\n<a href=\"https://docs.python.org/3/library/sys.html#sys.path\" rel=\"nofollow\">sys.paths()</a>,\netc.)</p>\n<pre><span class=\"gp\">$</span> <span class=\"nb\">export</span> <span class=\"nv\">PYTHONPATH</span><span class=\"o\">=</span><span class=\"si\">${</span><span class=\"nv\">PYTHONPATH</span><span class=\"si\">}</span>:<span class=\"si\">${</span><span class=\"nv\">PCSV_DIR</span><span class=\"si\">}</span>\n<span class=\"gp\">$</span>\n</pre>\n</li>\n<li><p>Install the dependencies (if needed, done automatically by pip):</p>\n<blockquote>\n<ul>\n<li><a href=\"https://nedbatchelder.com/code/cog\" rel=\"nofollow\">Cog</a> (2.5.1 or newer)</li>\n<li><a href=\"https://coverage.readthedocs.io\" rel=\"nofollow\">Coverage</a> (4.5.3 or newer)</li>\n<li><a href=\"http://docutils.sourceforge.net/docs\" rel=\"nofollow\">Docutils</a> (0.14 or newer)</li>\n<li><a href=\"https://bitbucket.org/klorenz/sphinxcontrib-inlinesyntaxhighlight\" rel=\"nofollow\">Inline Syntax Highlight Sphinx Extension</a> (0.2 or newer)</li>\n<li><a href=\"https://docs.python.org/3/library/unittest.mock.html\" rel=\"nofollow\">Mock</a> (Python 2.x only, 2.0.0 or newer)</li>\n<li><a href=\"https://pexdoc.readthedocs.org\" rel=\"nofollow\">Pexdoc</a> (1.1.4 or newer)</li>\n<li><a href=\"https://pmisc.readthedocs.org\" rel=\"nofollow\">Pmisc</a> (1.5.8 or newer)</li>\n<li><a href=\"http://pytest.org\" rel=\"nofollow\">Py.test</a> (4.3.1 or newer)</li>\n<li><a href=\"https://andreacensi.github.io/contracts\" rel=\"nofollow\">PyContracts</a> (1.8.2 or newer)</li>\n<li><a href=\"http://www.pydocstyle.org\" rel=\"nofollow\">Pydocstyle</a> (3.0.0 or newer)</li>\n<li><a href=\"https://www.pylint.org\" rel=\"nofollow\">Pylint</a> (Python 2.x: 1.9.4 or newer, Python 3.x: 2.3.1 or newer)</li>\n<li><a href=\"https://pypi.org/project/pytest-cov\" rel=\"nofollow\">Pytest-coverage</a> (2.6.1 or newer)</li>\n<li><a href=\"https://pytest-pmisc.readthedocs.org\" rel=\"nofollow\">Pytest-pmisc</a> (1.0.7 or newer)</li>\n<li><a href=\"https://pypi.org/project/pytest-xdist\" rel=\"nofollow\">Pytest-xdist</a> (optional, 1.26.1 or newer)</li>\n<li><a href=\"https://github.com/rtfd/sphinx_rtd_theme\" rel=\"nofollow\">ReadTheDocs Sphinx theme</a> (0.4.3 or newer)</li>\n<li><a href=\"https://pypi.org/project/sphinxcontrib-shellcheck\" rel=\"nofollow\">Shellcheck Linter Sphinx Extension</a> (1.0.8 or newer)</li>\n<li><a href=\"http://sphinx-doc.org\" rel=\"nofollow\">Sphinx</a> (1.8.5 or newer)</li>\n<li><a href=\"https://testrun.org/tox\" rel=\"nofollow\">Tox</a> (3.7.0 or newer)</li>\n<li><a href=\"https://docs.python-guide.org/dev/virtualenvs\" rel=\"nofollow\">Virtualenv</a> (16.4.3 or newer)</li>\n</ul>\n</blockquote>\n</li>\n<li><p>Implement a new feature or fix a bug</p>\n</li>\n<li><p>Write a unit test which shows that the contributed code works as expected.\nRun the package tests to ensure that the bug fix or new feature does not\nhave adverse side effects. If possible achieve 100% code and branch\ncoverage of the contribution. Thorough package validation\ncan be done via Tox and Pytest:</p>\n<pre><span class=\"gp\">$</span> <span class=\"nv\">PKG_NAME</span><span class=\"o\">=</span>pcsv tox\n<span class=\"go\">GLOB sdist-make: .../pcsv/setup.py\npy27-pkg create: .../pcsv/.tox/py27\npy27-pkg installdeps: -r.../pcsv/requirements/tests_py27.pip, -r.../pcsv/requirements/docs_py27.pip\n...\n  py27-pkg: commands succeeded\n  py35-pkg: commands succeeded\n  py36-pkg: commands succeeded\n  py37-pkg: commands succeeded\n  congratulations :)\n</span><span class=\"gp\">$</span>\n</pre>\n<p><a href=\"https://bitbucket.org/pypa/setuptools\" rel=\"nofollow\">Setuptools</a> can also be used\n(Tox is configured as its virtual environment manager):</p>\n<pre><span class=\"gp\">$</span> <span class=\"nv\">PKG_NAME</span><span class=\"o\">=</span>pcsv python setup.py tests\n<span class=\"go\">running tests\nrunning egg_info\nwriting pcsv.egg-info/PKG-INFO\nwriting dependency_links to pcsv.egg-info/dependency_links.txt\nwriting requirements to pcsv.egg-info/requires.txt\n...\n  py27-pkg: commands succeeded\n  py35-pkg: commands succeeded\n  py36-pkg: commands succeeded\n  py37-pkg: commands succeeded\n  congratulations :)\n</span><span class=\"gp\">$</span>\n</pre>\n<p>Tox (or Setuptools via Tox) runs with the following default environments:\n<tt><span class=\"pre\">py27-pkg</span></tt>, <tt><span class=\"pre\">py35-pkg</span></tt>, <tt><span class=\"pre\">py36-pkg</span></tt> and <tt><span class=\"pre\">py37-pkg</span></tt> <a href=\"#f3\" id=\"id2\" rel=\"nofollow\">[3]</a>. These use\nthe 2.7, 3.5, 3.6 and 3.7 interpreters, respectively, to test all code in\nthe documentation (both in Sphinx <tt>*.rst</tt> source files and in\ndocstrings), run all unit tests, measure test coverage and re-build the\nexceptions documentation. To pass arguments to Pytest (the test runner) use\na double dash (<tt><span class=\"pre\">--</span></tt>) after all the Tox arguments, for example:</p>\n<pre><span class=\"gp\">$</span> <span class=\"nv\">PKG_NAME</span><span class=\"o\">=</span>pcsv tox -e py27-pkg -- -n <span class=\"m\">4</span>\n<span class=\"go\">GLOB sdist-make: .../pcsv/setup.py\npy27-pkg inst-nodeps: .../pcsv/.tox/.tmp/package/1/pcsv-1.0.8.zip\n...\n  py27-pkg: commands succeeded\n  congratulations :)\n</span><span class=\"gp\">$</span>\n</pre>\n<p>Or use the <code>-a</code> Setuptools optional argument followed by a quoted\nstring with the arguments for Pytest. For example:</p>\n<pre><span class=\"gp\">$</span> <span class=\"nv\">PKG_NAME</span><span class=\"o\">=</span>pcsv python setup.py tests -a <span class=\"s2\">\"-e py27-pkg -- -n 4\"</span>\n<span class=\"go\">running tests\n...\n  py27-pkg: commands succeeded\n  congratulations :)\n</span><span class=\"gp\">$</span>\n</pre>\n<p>There are other convenience environments defined for Tox <a href=\"#f3\" id=\"id3\" rel=\"nofollow\">[3]</a>:</p>\n<blockquote>\n<ul>\n<li><p><tt><span class=\"pre\">py27-repl</span></tt>, <tt><span class=\"pre\">py35-repl</span></tt>, <tt><span class=\"pre\">py36-repl</span></tt> and <tt><span class=\"pre\">py37-repl</span></tt> run the\nPython 2.7, 3.5, 3.6 and 3.7 REPL, respectively, in the appropriate\nvirtual environment. The <tt>pcsv</tt> package is pip-installed by Tox when\nthe environments are created.  Arguments to the interpreter can be\npassed in the command line after a double dash (<tt><span class=\"pre\">--</span></tt>).</p>\n</li>\n<li><p><tt><span class=\"pre\">py27-test</span></tt>, <tt><span class=\"pre\">py35-test</span></tt>, <tt><span class=\"pre\">py36-test</span></tt> and <tt><span class=\"pre\">py37-test</span></tt> run Pytest\nusing the Python 2.7, 3.5, 3.6 and 3.7 interpreter, respectively, in the\nappropriate virtual environment. Arguments to pytest can be passed in\nthe command line after a double dash (<tt><span class=\"pre\">--</span></tt>) , for example:</p>\n<pre><span class=\"gp\">$</span> <span class=\"nv\">PKG_NAME</span><span class=\"o\">=</span>pcsv tox -e py27-test -- -x test_pcsv.py\n<span class=\"go\">GLOB sdist-make: .../pcsv/setup.py\npy27-pkg inst-nodeps: .../pcsv/.tox/.tmp/package/1/pcsv-1.0.8.zip\n...\n  py27-pkg: commands succeeded\n  congratulations :)\n</span><span class=\"gp\">$</span>\n</pre>\n</li>\n<li><p><tt><span class=\"pre\">py27-test</span></tt>, <tt><span class=\"pre\">py35-test</span></tt>, <tt><span class=\"pre\">py36-test</span></tt> and <tt><span class=\"pre\">py37-test</span></tt> test code\nand branch coverage using the 2.7, 3.5, 3.6 and 3.7 interpreter,\nrespectively, in the appropriate virtual environment. Arguments to\npytest can be passed in the command line after a double dash (<tt><span class=\"pre\">--</span></tt>).\nThe report can be found in\n<code class=\"bash\"><span class=\"si\">${</span><span class=\"nv\">PCSV_DIR</span><span class=\"si\">}</span>/.tox/py<span class=\"o\">[</span>PV<span class=\"o\">]</span>/usr/share/pcsv/tests/htmlcov/index.html</code>\nwhere <tt>[PV]</tt> stands for <tt>2.7</tt>, <tt>3.5</tt>, <tt>3.6</tt> or <tt>3.7</tt> depending\non the interpreter used.</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>Verify that continuous integration tests pass. The package has continuous\nintegration configured for Linux, Apple macOS and Microsoft Windows (all via\n<a href=\"https://dev.azure.com/pmasdev\" rel=\"nofollow\">Azure DevOps</a>).</p>\n</li>\n<li><p>Document the new feature or bug fix (if needed). The script\n<code class=\"bash\"><span class=\"si\">${</span><span class=\"nv\">PCSV_DIR</span><span class=\"si\">}</span>/pypkg/build_docs.py</code> re-builds the whole package\ndocumentation (re-generates images, cogs source files, etc.):</p>\n<pre><span class=\"gp\">$</span> <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">PCSV_DIR</span><span class=\"si\">}</span><span class=\"s2\">\"</span>/pypkg/build_docs.py -h\n<span class=\"go\">usage: build_docs.py [-h] [-d DIRECTORY] [-r]\n                     [-n NUM_CPUS] [-t]\n\nBuild pcsv package documentation\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d DIRECTORY, --directory DIRECTORY\n                        specify source file directory\n                        (default ../pcsv)\n  -r, --rebuild         rebuild exceptions documentation.\n                        If no module name is given all\n                        modules with auto-generated\n                        exceptions documentation are\n                        rebuilt\n  -n NUM_CPUS, --num-cpus NUM_CPUS\n                        number of CPUs to use (default: 1)\n  -t, --test            diff original and rebuilt file(s)\n                        (exit code 0 indicates file(s) are\n                        identical, exit code 1 indicates\n                        file(s) are different)</span>\n</pre>\n</li>\n</ol>\n<p>Footnotes</p>\n<table id=\"f1\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td>All examples are for the <a href=\"https://www.gnu.org/software/bash/\" rel=\"nofollow\">bash</a>\nshell</td></tr>\n</tbody>\n</table>\n<table id=\"f2\">\n<col><col>\n<tbody>\n<tr><td>[2]</td><td>It is assumed that all the Python interpreters are in the executables\npath. Source code for the interpreters can be downloaded from Python\u2019s main\n<a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">site</a></td></tr>\n</tbody>\n</table>\n<table id=\"f3\">\n<col><col>\n<tbody>\n<tr><td>[3]</td><td><em>(<a href=\"#id2\" rel=\"nofollow\">1</a>, <a href=\"#id3\" rel=\"nofollow\">2</a>)</em> Tox configuration largely inspired by\n<a href=\"https://blog.ionelmc.ro/2015/04/14/tox-tricks-and-patterns/\" rel=\"nofollow\">Ionel\u2019s codelog</a></td></tr>\n</tbody>\n</table>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The MIT License (MIT)</p>\n<p>Copyright (c) 2013-2019 Pablo Acosta-Serafini</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \u201cSoftware\u201d), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n.. CHANGELOG.rst\n.. Copyright (c) 2013-2019 Pablo Acosta-Serafini\n.. See LICENSE for details</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<ul>\n<li>1.0.8 [2019-03-22]: Documentation and dependency update</li>\n<li>1.0.7 [2019-03-09]: Dropped support for Python 2.6, 3.3 and 3.4. Updates to\nsupport newest versions of dependencies. Adopted lightweight package\nmanagement framework</li>\n<li>1.0.6 [2017-09-10]: Fixed bug while filtering rows that have empty column\nspecified in filter. Fixed broken multi-line links in documentation</li>\n<li>1.0.5 [2017-02-10]: Package build enhancements and fixes</li>\n<li>1.0.4 [2017-02-07]: Python 3.6 support</li>\n<li>1.0.3 [2016-06-10]: Minor documentation build bug fix</li>\n<li>1.0.2 [2016-05-12]: Minor documentation updates</li>\n<li>1.0.1 [2016-05-12]: Minor documentation updates</li>\n<li>1.0.0 [2016-05-12]: Final release of 1.0.0 branch</li>\n<li>1.0.0rc1 [2016-05-11]: Initial commit, forked a subset from putil PyPI\npackage</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4973787, "releases": {"1.0.5": [{"comment_text": "", "digests": {"md5": "408b26bd02d799977303802a4673fd08", "sha256": "141e2061ac90a31d55dc2420be1b2948696d82526ec826a53e68bb593bf64e8c"}, "downloads": -1, "filename": "pcsv-1.0.5-py26-none-any.whl", "has_sig": false, "md5_digest": "408b26bd02d799977303802a4673fd08", "packagetype": "bdist_wheel", "python_version": "py26", "requires_python": null, "size": 36216, "upload_time": "2017-02-10T16:51:03", "upload_time_iso_8601": "2017-02-10T16:51:03.420254Z", "url": "https://files.pythonhosted.org/packages/e7/a6/089789c6b743bc07ae29d2e2a23b8d26da91ee6d846f356b2716fba2e14c/pcsv-1.0.5-py26-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d25e274f411d23561cbe7fc7f3c5d1d3", "sha256": "b62a71fc202975ef35a9b124b0fe288931c2f10003857de89caa154cc5c34ed5"}, "downloads": -1, "filename": "pcsv-1.0.5-py27-none-any.whl", "has_sig": false, "md5_digest": "d25e274f411d23561cbe7fc7f3c5d1d3", "packagetype": "bdist_wheel", "python_version": "py27", "requires_python": null, "size": 36207, "upload_time": "2017-02-10T16:51:06", "upload_time_iso_8601": "2017-02-10T16:51:06.090369Z", "url": "https://files.pythonhosted.org/packages/27/7c/a43efd5db83ebcd817d59879097f5a8b225077794cfd19494799b8c93393/pcsv-1.0.5-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43b578dbe33be1051f9f13aebc43a5b3", "sha256": "eec3427d10da3c72e71fa84c301100a3070cb4d5047191680f3a9dd643dd8900"}, "downloads": -1, "filename": "pcsv-1.0.5-py33-none-any.whl", "has_sig": false, "md5_digest": "43b578dbe33be1051f9f13aebc43a5b3", "packagetype": "bdist_wheel", "python_version": "py33", "requires_python": null, "size": 36208, "upload_time": "2017-02-10T16:51:08", "upload_time_iso_8601": "2017-02-10T16:51:08.144032Z", "url": "https://files.pythonhosted.org/packages/2f/76/0889c440e6d517452fff52168e1bd8b8ae5e49e09ff6dbbbf23cb044011c/pcsv-1.0.5-py33-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8760d157979406f5e442f029bf110a07", "sha256": "edc2ae4bd6ba5f175959c959e9f74cf9b040c90704e7adf655f71f3ff1254eb9"}, "downloads": -1, "filename": "pcsv-1.0.5-py34-none-any.whl", "has_sig": false, "md5_digest": "8760d157979406f5e442f029bf110a07", "packagetype": "bdist_wheel", "python_version": "py34", "requires_python": null, "size": 36197, "upload_time": "2017-02-10T16:51:10", "upload_time_iso_8601": "2017-02-10T16:51:10.025650Z", "url": "https://files.pythonhosted.org/packages/e4/9a/527e9833fefee5723dbde8b7dfce28e077fca79ff8cd64832a17001bf816/pcsv-1.0.5-py34-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73f84c9c2fb9c1472043a9e2871bffff", "sha256": "bfdc397061032d019bb997aa092a333183d68568a3c7f50f65868e8763d1afda"}, "downloads": -1, "filename": "pcsv-1.0.5-py35-none-any.whl", "has_sig": false, "md5_digest": "73f84c9c2fb9c1472043a9e2871bffff", "packagetype": "bdist_wheel", "python_version": "py35", "requires_python": null, "size": 36197, "upload_time": "2017-02-10T16:51:11", "upload_time_iso_8601": "2017-02-10T16:51:11.725280Z", "url": "https://files.pythonhosted.org/packages/bc/b4/592defd6b12c91bc2b6b9df163147ac8f24342eb79398245bd9ea0b3be0c/pcsv-1.0.5-py35-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4321c406644e38450094a525f08e5e5", "sha256": "61c9c9eae04399a6cbce22bb4613c9c7020ec60092b108aa21f174647156adcb"}, "downloads": -1, "filename": "pcsv-1.0.5-py36-none-any.whl", "has_sig": false, "md5_digest": "a4321c406644e38450094a525f08e5e5", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 36203, "upload_time": "2017-02-10T16:51:13", "upload_time_iso_8601": "2017-02-10T16:51:13.405480Z", "url": "https://files.pythonhosted.org/packages/98/fd/9eda06d142e67e8766089d5629b9fb0a6177670a367e03092d480a8ab15b/pcsv-1.0.5-py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b6ce62f0593659696a026fbc02c2f76", "sha256": "186638b393affe0cc1fd97dc4181721073b9107de2b64c19c2cd432c08ae2fc7"}, "downloads": -1, "filename": "pcsv-1.0.5.tar.gz", "has_sig": false, "md5_digest": "9b6ce62f0593659696a026fbc02c2f76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101649, "upload_time": "2017-02-10T16:51:15", "upload_time_iso_8601": "2017-02-10T16:51:15.374597Z", "url": "https://files.pythonhosted.org/packages/56/de/71f425a6d5ddbbbf24c3f10adc745ef38b5e5f792469877edf507ec4bbd7/pcsv-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "03694c4e5e52283ad3c84e597103378b", "sha256": "a86a111ccd5566548642d2c2770c834aa4c7325da700d8576019d840f53556d3"}, "downloads": -1, "filename": "pcsv-1.0.6-py26-none-any.whl", "has_sig": false, "md5_digest": "03694c4e5e52283ad3c84e597103378b", "packagetype": "bdist_wheel", "python_version": "py26", "requires_python": null, "size": 35966, "upload_time": "2017-09-10T21:20:47", "upload_time_iso_8601": "2017-09-10T21:20:47.149394Z", "url": "https://files.pythonhosted.org/packages/21/d9/6306f4f11f91560ee9b9d571a469e525929b28f22843e709f4354d166a22/pcsv-1.0.6-py26-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e53ef4eeb921b5bbeb0911a9133b6181", "sha256": "1e88445db5f0879412255a33dbb67fb1a21230605524a68b4f2a7cd61e89d2cc"}, "downloads": -1, "filename": "pcsv-1.0.6-py27-none-any.whl", "has_sig": false, "md5_digest": "e53ef4eeb921b5bbeb0911a9133b6181", "packagetype": "bdist_wheel", "python_version": "py27", "requires_python": null, "size": 35939, "upload_time": "2017-09-10T21:20:48", "upload_time_iso_8601": "2017-09-10T21:20:48.844926Z", "url": "https://files.pythonhosted.org/packages/7a/ab/4fb9678575b8ce1d5c4931d77d500b9debeca919691d08a014e98fb48a39/pcsv-1.0.6-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f85bdb78e15f03135905884776c64e80", "sha256": "50f665f712caf43103029d402a870177420c54893874d4f1b6850baeae25f9b5"}, "downloads": -1, "filename": "pcsv-1.0.6-py33-none-any.whl", "has_sig": false, "md5_digest": "f85bdb78e15f03135905884776c64e80", "packagetype": "bdist_wheel", "python_version": "py33", "requires_python": null, "size": 35953, "upload_time": "2017-09-10T21:20:50", "upload_time_iso_8601": "2017-09-10T21:20:50.327620Z", "url": "https://files.pythonhosted.org/packages/21/75/0f034772d34ee4c91dbbfa769c10eca3878d7540ff58d7cff0113a190d63/pcsv-1.0.6-py33-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b78e175291ef3efdd5e38f5075ee68d", "sha256": "b51d900dc85ed79322b78f0e9606d77dcf0fb623fd243dcc1a90344247c42739"}, "downloads": -1, "filename": "pcsv-1.0.6-py34-none-any.whl", "has_sig": false, "md5_digest": "0b78e175291ef3efdd5e38f5075ee68d", "packagetype": "bdist_wheel", "python_version": "py34", "requires_python": null, "size": 35931, "upload_time": "2017-09-10T21:20:51", "upload_time_iso_8601": "2017-09-10T21:20:51.714706Z", "url": "https://files.pythonhosted.org/packages/68/2d/376730045c97918a4c4ec083e1f87cd107fd5b75151ea90ea34a8aa37d67/pcsv-1.0.6-py34-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75efd9581972baa0bc040b125203f27e", "sha256": "88066c828caabe876a2879d763bc29073fcce4e0be05272114eabbad1bac39ec"}, "downloads": -1, "filename": "pcsv-1.0.6-py35-none-any.whl", "has_sig": false, "md5_digest": "75efd9581972baa0bc040b125203f27e", "packagetype": "bdist_wheel", "python_version": "py35", "requires_python": null, "size": 35935, "upload_time": "2017-09-10T21:20:52", "upload_time_iso_8601": "2017-09-10T21:20:52.831373Z", "url": "https://files.pythonhosted.org/packages/bd/18/c0c53780b0b1691c66c16b8e2d134c40e313e07f8dc7b6b995dd62ea6263/pcsv-1.0.6-py35-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c483bbb4aa87240ec04fc8bd4b970105", "sha256": "fdc964b0f30b52453dbe7fc80921e2ec3c8ff64f7dd00cdafb8e5198a22038ad"}, "downloads": -1, "filename": "pcsv-1.0.6-py36-none-any.whl", "has_sig": false, "md5_digest": "c483bbb4aa87240ec04fc8bd4b970105", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 35936, "upload_time": "2017-09-10T21:20:53", "upload_time_iso_8601": "2017-09-10T21:20:53.817087Z", "url": "https://files.pythonhosted.org/packages/fe/fc/e2f9b7757cd0c630ff213c1f9ac4c6ecc8af8a92a56997c2c590bb6e5116/pcsv-1.0.6-py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c60dee337b41e36fa1f85f964fb1170", "sha256": "17dc11cfbf64f24625984ad320a610aabba260f4ce5f7db14a2785fb609887da"}, "downloads": -1, "filename": "pcsv-1.0.6.tar.gz", "has_sig": false, "md5_digest": "6c60dee337b41e36fa1f85f964fb1170", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101891, "upload_time": "2017-09-10T21:20:55", "upload_time_iso_8601": "2017-09-10T21:20:55.231840Z", "url": "https://files.pythonhosted.org/packages/af/50/2fcd0d0b3c4997ee695f337212a49ad2d33f949b24a59fd4bc5cb517cb3a/pcsv-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "4fb421548f9b0b976eeb69795c10018d", "sha256": "deaddf98948a812edc574ed11e0e0ad80dbada809706d73f35e39b2ac5519d2c"}, "downloads": -1, "filename": "pcsv-1.0.7-py27-none-any.whl", "has_sig": false, "md5_digest": "4fb421548f9b0b976eeb69795c10018d", "packagetype": "bdist_wheel", "python_version": "py27", "requires_python": null, "size": 35218, "upload_time": "2019-03-10T02:47:22", "upload_time_iso_8601": "2019-03-10T02:47:22.213642Z", "url": "https://files.pythonhosted.org/packages/b2/59/3189825ba153f3c83cbd2ca4b6e0bdbb9401b29a89ed478f36420b02c0ef/pcsv-1.0.7-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe0c5279b0415583786ff664135e831a", "sha256": "79fa9f62f428b0388690aed41a156c83d82d858d2d5fe934f5caad4a90868da0"}, "downloads": -1, "filename": "pcsv-1.0.7-py35-none-any.whl", "has_sig": false, "md5_digest": "fe0c5279b0415583786ff664135e831a", "packagetype": "bdist_wheel", "python_version": "py35", "requires_python": null, "size": 35213, "upload_time": "2019-03-10T02:47:23", "upload_time_iso_8601": "2019-03-10T02:47:23.731036Z", "url": "https://files.pythonhosted.org/packages/aa/2e/d5f822b70f7f1b8bc7320fa1d977392f140af37005cce411b11ed979b1f4/pcsv-1.0.7-py35-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a554e811944c0dcfc082411c7eae91a6", "sha256": "4bd4ea6a4d3de09946ea0155544e0cafd3d2fc93a76546115092e3c4d4c2ecc1"}, "downloads": -1, "filename": "pcsv-1.0.7-py36-none-any.whl", "has_sig": false, "md5_digest": "a554e811944c0dcfc082411c7eae91a6", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 35212, "upload_time": "2019-03-10T02:47:25", "upload_time_iso_8601": "2019-03-10T02:47:25.013638Z", "url": "https://files.pythonhosted.org/packages/8c/6c/b0cc6e03364fad27eb19c29ae93d1da710c302f7576f608a3ec5beb0b792/pcsv-1.0.7-py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a3dbb75a8362ce06b3aea0f7662f150", "sha256": "d54c9352bbfd9c59f390a1fa3d2eb686055f51a45925eb335484b656d10f8b9b"}, "downloads": -1, "filename": "pcsv-1.0.7-py37-none-any.whl", "has_sig": false, "md5_digest": "0a3dbb75a8362ce06b3aea0f7662f150", "packagetype": "bdist_wheel", "python_version": "py37", "requires_python": null, "size": 27614, "upload_time": "2019-03-10T02:47:26", "upload_time_iso_8601": "2019-03-10T02:47:26.030270Z", "url": "https://files.pythonhosted.org/packages/eb/fd/c40cbd08b889315de9f27c6b64a76928298881c70d945a430b01df4415f4/pcsv-1.0.7-py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "201a734bb20d19b4876c4a3af94caf7a", "sha256": "b90e5524fcad135419d455b25d369ebb20217fcd6fa2252b07ea9f9c8b483ecf"}, "downloads": -1, "filename": "pcsv-1.0.7.zip", "has_sig": false, "md5_digest": "201a734bb20d19b4876c4a3af94caf7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 428055, "upload_time": "2019-03-10T02:47:27", "upload_time_iso_8601": "2019-03-10T02:47:27.584375Z", "url": "https://files.pythonhosted.org/packages/5a/69/b40f0a5d8b11ee7dd62129aaa00d3165e0a8f7d56d689d70f60699d9e629/pcsv-1.0.7.zip", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "fdaece949a1afa4b700e62b65ba148a8", "sha256": "0ec9dd7f9c4f985f91c0c41c94e323592a17c3441c7e744c9572f3de8784e96d"}, "downloads": -1, "filename": "pcsv-1.0.8-py27-none-any.whl", "has_sig": false, "md5_digest": "fdaece949a1afa4b700e62b65ba148a8", "packagetype": "bdist_wheel", "python_version": "py27", "requires_python": null, "size": 34372, "upload_time": "2019-03-22T17:31:48", "upload_time_iso_8601": "2019-03-22T17:31:48.302247Z", "url": "https://files.pythonhosted.org/packages/58/b1/c48ce02af12ace44030998f265091a6e82a80be0cbb91bcade66e69eb1ad/pcsv-1.0.8-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f038e717f200c115dd3a90ef6ccf71d", "sha256": "2abde93ff4eea0caeea79223659a6a701d9addd943e4936efc2438a714b8004f"}, "downloads": -1, "filename": "pcsv-1.0.8-py35-none-any.whl", "has_sig": false, "md5_digest": "8f038e717f200c115dd3a90ef6ccf71d", "packagetype": "bdist_wheel", "python_version": "py35", "requires_python": null, "size": 34365, "upload_time": "2019-03-22T17:31:49", "upload_time_iso_8601": "2019-03-22T17:31:49.556966Z", "url": "https://files.pythonhosted.org/packages/9b/1b/f25ea9636ec6d0a4442d6cc973d84f8966fce3b36ffa4f361a1f4c9b0fe4/pcsv-1.0.8-py35-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "067bf94ee48280c792ec9d55cefe7e6b", "sha256": "9f28e445cbd8ba3e19f8c99a15848846793bac9a80480c38b92de3f08bccbfae"}, "downloads": -1, "filename": "pcsv-1.0.8-py36-none-any.whl", "has_sig": false, "md5_digest": "067bf94ee48280c792ec9d55cefe7e6b", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 34365, "upload_time": "2019-03-22T17:31:50", "upload_time_iso_8601": "2019-03-22T17:31:50.666278Z", "url": "https://files.pythonhosted.org/packages/de/5b/cc3142d34d85cc0b803ec3845de03cadc705c818b6a190d557ede4c65316/pcsv-1.0.8-py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c346350a9307db2d553aa4c14e6bbaf0", "sha256": "dab59e727531da6b43671e183f82e7aaa3ed79d47a3d82d4474fe555d10d624a"}, "downloads": -1, "filename": "pcsv-1.0.8-py37-none-any.whl", "has_sig": false, "md5_digest": "c346350a9307db2d553aa4c14e6bbaf0", "packagetype": "bdist_wheel", "python_version": "py37", "requires_python": null, "size": 27370, "upload_time": "2019-03-22T17:31:51", "upload_time_iso_8601": "2019-03-22T17:31:51.666703Z", "url": "https://files.pythonhosted.org/packages/4f/29/b1e736bf3cd3f527009ad06d3a6f86e1850724410318ecca66f20899969f/pcsv-1.0.8-py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2b51d6891bcae389bb7a237582229f2", "sha256": "b152fa0cc3cb4f62610ec57ea1e71f483f1ab47af060b1e0c990956aa81914cf"}, "downloads": -1, "filename": "pcsv-1.0.8.zip", "has_sig": false, "md5_digest": "c2b51d6891bcae389bb7a237582229f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 428797, "upload_time": "2019-03-22T17:31:53", "upload_time_iso_8601": "2019-03-22T17:31:53.247842Z", "url": "https://files.pythonhosted.org/packages/e6/e1/bb1837dd2d000b9a1211341c16d50bc0ea9391b2176112af061c2e13f7af/pcsv-1.0.8.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fdaece949a1afa4b700e62b65ba148a8", "sha256": "0ec9dd7f9c4f985f91c0c41c94e323592a17c3441c7e744c9572f3de8784e96d"}, "downloads": -1, "filename": "pcsv-1.0.8-py27-none-any.whl", "has_sig": false, "md5_digest": "fdaece949a1afa4b700e62b65ba148a8", "packagetype": "bdist_wheel", "python_version": "py27", "requires_python": null, "size": 34372, "upload_time": "2019-03-22T17:31:48", "upload_time_iso_8601": "2019-03-22T17:31:48.302247Z", "url": "https://files.pythonhosted.org/packages/58/b1/c48ce02af12ace44030998f265091a6e82a80be0cbb91bcade66e69eb1ad/pcsv-1.0.8-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f038e717f200c115dd3a90ef6ccf71d", "sha256": "2abde93ff4eea0caeea79223659a6a701d9addd943e4936efc2438a714b8004f"}, "downloads": -1, "filename": "pcsv-1.0.8-py35-none-any.whl", "has_sig": false, "md5_digest": "8f038e717f200c115dd3a90ef6ccf71d", "packagetype": "bdist_wheel", "python_version": "py35", "requires_python": null, "size": 34365, "upload_time": "2019-03-22T17:31:49", "upload_time_iso_8601": "2019-03-22T17:31:49.556966Z", "url": "https://files.pythonhosted.org/packages/9b/1b/f25ea9636ec6d0a4442d6cc973d84f8966fce3b36ffa4f361a1f4c9b0fe4/pcsv-1.0.8-py35-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "067bf94ee48280c792ec9d55cefe7e6b", "sha256": "9f28e445cbd8ba3e19f8c99a15848846793bac9a80480c38b92de3f08bccbfae"}, "downloads": -1, "filename": "pcsv-1.0.8-py36-none-any.whl", "has_sig": false, "md5_digest": "067bf94ee48280c792ec9d55cefe7e6b", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 34365, "upload_time": "2019-03-22T17:31:50", "upload_time_iso_8601": "2019-03-22T17:31:50.666278Z", "url": "https://files.pythonhosted.org/packages/de/5b/cc3142d34d85cc0b803ec3845de03cadc705c818b6a190d557ede4c65316/pcsv-1.0.8-py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c346350a9307db2d553aa4c14e6bbaf0", "sha256": "dab59e727531da6b43671e183f82e7aaa3ed79d47a3d82d4474fe555d10d624a"}, "downloads": -1, "filename": "pcsv-1.0.8-py37-none-any.whl", "has_sig": false, "md5_digest": "c346350a9307db2d553aa4c14e6bbaf0", "packagetype": "bdist_wheel", "python_version": "py37", "requires_python": null, "size": 27370, "upload_time": "2019-03-22T17:31:51", "upload_time_iso_8601": "2019-03-22T17:31:51.666703Z", "url": "https://files.pythonhosted.org/packages/4f/29/b1e736bf3cd3f527009ad06d3a6f86e1850724410318ecca66f20899969f/pcsv-1.0.8-py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2b51d6891bcae389bb7a237582229f2", "sha256": "b152fa0cc3cb4f62610ec57ea1e71f483f1ab47af060b1e0c990956aa81914cf"}, "downloads": -1, "filename": "pcsv-1.0.8.zip", "has_sig": false, "md5_digest": "c2b51d6891bcae389bb7a237582229f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 428797, "upload_time": "2019-03-22T17:31:53", "upload_time_iso_8601": "2019-03-22T17:31:53.247842Z", "url": "https://files.pythonhosted.org/packages/e6/e1/bb1837dd2d000b9a1211341c16d50bc0ea9391b2176112af061c2e13f7af/pcsv-1.0.8.zip", "yanked": false}], "timestamp": "Fri May  8 02:57:22 2020"}