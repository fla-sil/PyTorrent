{"info": {"author": "Max Zhao", "author_email": "alcasa.mz@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# json-coder: Quickly serialize and deserialize python to json objects\n\nThe default library python `json` module supports custom decoders and encoders\nallowing for saving and restoring custom objects into json. In comparison to\npickling objects, this is more portable and easier to manually edit.\n\nThis library supports the following use-cases:\n\n- Class with json loading and dumping functions\n  (define `.json` property or `.to_json()` method for dumping, define\n  `.from_json()` constructor or proper init for reading)\n\n- python `dataclass` classes\n\n- custom loading and dumping functions for classes defined elsewhere\n\nFundamentally classes are assigned an identifier and json objects of the\nfollowing structure are created:\n\n```\n{\n    '__<identifier>__': <object data>\n}\n```\n\n## Usage examples\n\nCustom class using predefined schema:\n\n```\nimport json\nimport json_coder\n\n@json.jsonify(\"testclass\")\nclass TestClass:\n    def __init__(self, a: int):\n        self.a = a\n\n    def to_json(self):\n        return {\"a\": self.a}\n\n\n# Usage\na = json.loads('{\"__testclass__\": {\"a\": 10}}')\n\nprint(a)\n# <__main__.TestClass object at 0x10eb26810>\n\nprint(json.dumps(a))\n# {\"__testclass__\": {\"a\": 10}}\n```\n\nDataclasses do not require any additional methods to work properly.\n\n```\nfrom dataclasses import dataclass\nimport json\nimport json_coder\n\n@json_coder.jsonify(\"testdataclass\")\n@dataclass\nclass TestDataClass:\n    a: int\n\n\na = json.loads('{\"__testdataclass__\": {\"a\": 10}}')\nprint(type(a))  # should now be an object of testdataclass\nprint(json.dumps(a))\n```\n\nCustom dumper and reading functions can also be added to existing classes by\nregistering manually:\n\n```\nimport datetime\nimport json\nimport json_coder\n\njson_coder.register(\"datetime\", datetime.datetime, datetime.datetime.fromisoformat, datetime.datetime.isoformat)\nd = json.loads('{\"__datetime__\": \"2018-10-10\"}')\nprint(d)\nprint(json.dumps(d))\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/xiamaz/jsonify", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "json-coder", "package_url": "https://pypi.org/project/json-coder/", "platform": "", "project_url": "https://pypi.org/project/json-coder/", "project_urls": {"Homepage": "https://github.com/xiamaz/jsonify"}, "release_url": "https://pypi.org/project/json-coder/0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Easily deserialize and serialize complex objects to json.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>json-coder: Quickly serialize and deserialize python to json objects</h1>\n<p>The default library python <code>json</code> module supports custom decoders and encoders\nallowing for saving and restoring custom objects into json. In comparison to\npickling objects, this is more portable and easier to manually edit.</p>\n<p>This library supports the following use-cases:</p>\n<ul>\n<li>\n<p>Class with json loading and dumping functions\n(define <code>.json</code> property or <code>.to_json()</code> method for dumping, define\n<code>.from_json()</code> constructor or proper init for reading)</p>\n</li>\n<li>\n<p>python <code>dataclass</code> classes</p>\n</li>\n<li>\n<p>custom loading and dumping functions for classes defined elsewhere</p>\n</li>\n</ul>\n<p>Fundamentally classes are assigned an identifier and json objects of the\nfollowing structure are created:</p>\n<pre><code>{\n    '__&lt;identifier&gt;__': &lt;object data&gt;\n}\n</code></pre>\n<h2>Usage examples</h2>\n<p>Custom class using predefined schema:</p>\n<pre><code>import json\nimport json_coder\n\n@json.jsonify(\"testclass\")\nclass TestClass:\n    def __init__(self, a: int):\n        self.a = a\n\n    def to_json(self):\n        return {\"a\": self.a}\n\n\n# Usage\na = json.loads('{\"__testclass__\": {\"a\": 10}}')\n\nprint(a)\n# &lt;__main__.TestClass object at 0x10eb26810&gt;\n\nprint(json.dumps(a))\n# {\"__testclass__\": {\"a\": 10}}\n</code></pre>\n<p>Dataclasses do not require any additional methods to work properly.</p>\n<pre><code>from dataclasses import dataclass\nimport json\nimport json_coder\n\n@json_coder.jsonify(\"testdataclass\")\n@dataclass\nclass TestDataClass:\n    a: int\n\n\na = json.loads('{\"__testdataclass__\": {\"a\": 10}}')\nprint(type(a))  # should now be an object of testdataclass\nprint(json.dumps(a))\n</code></pre>\n<p>Custom dumper and reading functions can also be added to existing classes by\nregistering manually:</p>\n<pre><code>import datetime\nimport json\nimport json_coder\n\njson_coder.register(\"datetime\", datetime.datetime, datetime.datetime.fromisoformat, datetime.datetime.isoformat)\nd = json.loads('{\"__datetime__\": \"2018-10-10\"}')\nprint(d)\nprint(json.dumps(d))\n</code></pre>\n\n          </div>"}, "last_serial": 7099025, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6bda227787eaeb1a559cd9aba5ca4b2b", "sha256": "261b0432d9c1c4e074733b0a1fa9ab67eb229be66e58756fc675e8fde9a0bd92"}, "downloads": -1, "filename": "json_coder-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6bda227787eaeb1a559cd9aba5ca4b2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4369, "upload_time": "2020-04-24T20:49:45", "upload_time_iso_8601": "2020-04-24T20:49:45.149506Z", "url": "https://files.pythonhosted.org/packages/81/0c/9573726a92e3b9cdfe3f300673a689ef1eac74a64f294ec5abdf91569606/json_coder-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "098cb773fe9a9c9a510e8ed8709ce0a3", "sha256": "7812395191cdf469fa421cee1ebff9fbe0abeb5c5d3c6207c4a967ca98f69931"}, "downloads": -1, "filename": "json-coder-0.1.tar.gz", "has_sig": false, "md5_digest": "098cb773fe9a9c9a510e8ed8709ce0a3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2086, "upload_time": "2020-04-24T20:50:22", "upload_time_iso_8601": "2020-04-24T20:50:22.979978Z", "url": "https://files.pythonhosted.org/packages/c1/4a/a0123d7b2d37ded034aaae3fbb542016b1e655fb0307a705ccd1eb1b2243/json-coder-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "ae96ef68ffd07835ed20645042d5127c", "sha256": "13a99057294f3532c00136fa898edbb79e46c078a62644f2553ecc47a7b8b1af"}, "downloads": -1, "filename": "json_coder-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ae96ef68ffd07835ed20645042d5127c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6297, "upload_time": "2020-04-24T21:11:05", "upload_time_iso_8601": "2020-04-24T21:11:05.699333Z", "url": "https://files.pythonhosted.org/packages/70/79/b98600dee6122baffd87916c56f7e5fbf90477910b0201969a5625b396e1/json_coder-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5151581d3228f4990ed1a9390ccaf9b9", "sha256": "dfc1699d6156d3ccf6e76cccb7c0f054eaf1fcd95825d8f60cc294f4d7502799"}, "downloads": -1, "filename": "json-coder-0.2.tar.gz", "has_sig": false, "md5_digest": "5151581d3228f4990ed1a9390ccaf9b9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3034, "upload_time": "2020-04-24T21:11:06", "upload_time_iso_8601": "2020-04-24T21:11:06.749970Z", "url": "https://files.pythonhosted.org/packages/14/78/587be9cb48c44bee22276600aff9bf4e6f94c01116814741f2e31f81152b/json-coder-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "2c16f0342a35d722717cfcde2c27de56", "sha256": "afe855e6f888797c3f4e30d7d42829e5cf2f30886c6c6668f9e3cd2e3d89c9a1"}, "downloads": -1, "filename": "json_coder-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2c16f0342a35d722717cfcde2c27de56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4010, "upload_time": "2020-04-25T11:02:58", "upload_time_iso_8601": "2020-04-25T11:02:58.541849Z", "url": "https://files.pythonhosted.org/packages/cf/6c/4da8403e69d14d7fcc78af6e9f0ad177b46268bf9f37a7818c83c1e0c9db/json_coder-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ec85e1ccf72f378bf8fd64547167532", "sha256": "c1ad97c9ec8b9b0643ce3c83e605700aeb54e74bce9af42ca082880d9a288fbb"}, "downloads": -1, "filename": "json-coder-0.3.tar.gz", "has_sig": false, "md5_digest": "4ec85e1ccf72f378bf8fd64547167532", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3066, "upload_time": "2020-04-25T11:02:59", "upload_time_iso_8601": "2020-04-25T11:02:59.622591Z", "url": "https://files.pythonhosted.org/packages/84/53/bf8ffd19b569b190a405a38b866a1014799c912c71222c286df8657ac8a0/json-coder-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2c16f0342a35d722717cfcde2c27de56", "sha256": "afe855e6f888797c3f4e30d7d42829e5cf2f30886c6c6668f9e3cd2e3d89c9a1"}, "downloads": -1, "filename": "json_coder-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2c16f0342a35d722717cfcde2c27de56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4010, "upload_time": "2020-04-25T11:02:58", "upload_time_iso_8601": "2020-04-25T11:02:58.541849Z", "url": "https://files.pythonhosted.org/packages/cf/6c/4da8403e69d14d7fcc78af6e9f0ad177b46268bf9f37a7818c83c1e0c9db/json_coder-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ec85e1ccf72f378bf8fd64547167532", "sha256": "c1ad97c9ec8b9b0643ce3c83e605700aeb54e74bce9af42ca082880d9a288fbb"}, "downloads": -1, "filename": "json-coder-0.3.tar.gz", "has_sig": false, "md5_digest": "4ec85e1ccf72f378bf8fd64547167532", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3066, "upload_time": "2020-04-25T11:02:59", "upload_time_iso_8601": "2020-04-25T11:02:59.622591Z", "url": "https://files.pythonhosted.org/packages/84/53/bf8ffd19b569b190a405a38b866a1014799c912c71222c286df8657ac8a0/json-coder-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:52 2020"}