{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License"], "description": "\ufeff# Aspose.Email Cloud SDK for Python [![PYPI](https://img.shields.io/pypi/v/aspose-email-cloud)](https://pypi.org/project/aspose-email-cloud/) [![License](https://img.shields.io/github/license/aspose-email-cloud/aspose-email-cloud-python)](https://pypi.org/project/aspose-email-cloud/) ![tests](https://github.com/aspose-email-cloud/aspose-email-cloud-python/workflows/tests/badge.svg)\nThis repository contains Aspose.Email Cloud SDK for Python source code. This SDK allows you to work with Aspose.Email Cloud REST APIs in your Python applications quickly and easily, with zero initial cost.\n\n[Aspose.Email Cloud home](https://products.aspose.cloud/email/family \"Aspose.Email Cloud\")  \n[API Reference](https://apireference.aspose.cloud/email/)\n\n# Key features\n\nAspose.Email Cloud is a REST API for creating email applications that work with standard email file formats. This SDK:\n- Lets developers manipulate different emails\u2019 formats such as Outlook MSG, EML, VCard, and iCalendar files\n- Has a built-in email client\n- Supports AI functionalities:\n    - The Business card recognition\n    - The Name API for parsing and handling personal names\n\n## How to use the SDK?\nThe complete source code is available in the GIT repository. \nUse [reference documentation](https://github.com/aspose-email-cloud/aspose-email-cloud-python/blob/master/sdk/docs/README.md), [examples from this document](#usage-examples) and [wiki](https://github.com/aspose-email-cloud/aspose-email-cloud-python/wiki)\n\n### Prerequisites\n\nTo use this SDK, you need an App SID and an App Key; they can be looked up at [Aspose Cloud Dashboard](https://dashboard.aspose.cloud/#/apps) (it requires free registration in Aspose Cloud for this).\n\n### Installation\n\nYou can use it directly in your project via the source code or get a [PYPI Package](https://pypi.org/project/aspose-email-cloud/):\n\n    pip install aspose-email-cloud\n\n\n### Usage examples\n\nTo use the API, you should create an EmailApi object:\n```python\nfrom AsposeEmailCloudSdk import api #EmailApi class is here\nfrom AsposeEmailCloudSdk import models #REST API models are here\nfrom AsposeEmailCloudSdk.models import requests #Request models are here (all API calls use corresponding request model class)\n\n#...\napp_sid = 'Your App SID'\napp_key = 'Your App Key'\nemail_api = api.EmailApi(app_key, app_sid)\n```\n\nAPI calls can be synchronous or asynchronous (using ThreadPool from multiprocessing.pool):\n```python\nresult = email_api.get_calendar(\n    requests.GetCalendarRequest(\n        calendar_file,\n        folder,\n        storage))\n# or\nasync_result = email_api.get_calendar_async( #returns multiprocessing.pool.AsyncResult\n    requests.GetCalendarRequest(\n        calendar_file,\n        folder,\n        storage))\nresult = async_result.get()\n```\n\n#### Business cards recognition API\nSee examples below:\n\n<details open>\n    <summary>Parse business card images to VCard contact files</summary>\n\n```python\nstorage = 'First Storage' # Your storage name\nfile_name = 'some_file_name.png' #Supports different image formats: PNG, JPEG, BMP, TIFF, GIF, etc.\nimage_file = 'some/business/card/image/file/on/disk.png'\nfolder = 'some/folder/path/on/storage'\n# Upload business card image to storage\nstorage_location = folder + '/' + file_name\nemail_api.upload_file(\n    requests.UploadFileRequest(storage_location, image_file, storage))\n\nout_folder_path = 'some/other/folder/path/on/storage' # Business card recognition results will be saved here\nemail_api.create_folder(requests.CreateFolderRequest(out_folder_path, storage))\n# Call business card recognition action\nresult = email_api.ai_bcr_parse_storage(requests.AiBcrParseStorageRequest(\n    models.AiBcrParseStorageRq(\n        images=[\n            models.AiBcrImageStorageFile(\n                True, #Flag isSingle determines that image contains single VCard or more.\n                      #Only single VCard on image variant is supported in current version.\n                models.StorageFileLocation(storage, folder, file_name))],\n        out_folder=models.StorageFolderLocation(storage, out_folder_path))))\n# Get file name from recognition result\ncontact_file = result.value[0] # result.value can contain multiple files, if we sent multicard images or multiple images\n# You can download the VCard file, which produced by the recognition method ...\ndownloaded = email_api.download_file(requests.DownloadFileRequest(\n    contact_file.folder_path + '/' + contact_file.file_name,\n    storage))\n# ... and print it to console\nwith open(downloaded, 'r') as f:\n    file_data = f.read()\n    print(file_data)\n# Also, you can get VCard object properties\u2019 list using Contact API\ncontact_properties = email_api.get_contact_properties(\n    requests.GetContactPropertiesRequest(\n        'VCard',\n        contact_file.file_name,\n        contact_file.folder_path,\n        contact_file.storage))\n# All VCard\u2019s properties are available as a list. Complex properties are represented as hierarchical structures.\n# Let's print all primitive properties\u2019 values:\nprimitives = (prop for prop in contact_properties.internal_properties\n    if  prop.type == 'PrimitiveObject')\nfor prop in primitives:\n    print('Property name: ' + prop.name + ' value: ' + prop.value)\n```\n</details>\n\n<details>\n    <summary>Parse images directly, without the using of a storage</summary>\n\n```python\n# Read image from file and convert it to Base64 string\nimage_file = 'some/business/card/image/file/on/disk.png'\nimage_data = None\nwith open(image_file, 'rb') as f:\n    file_data = f.read()\n    image_data = str(base64.b64encode(file_data), 'utf-8')\nresult = email_api.ai_bcr_parse(requests.AiBcrParseRequest(\n    models.AiBcrBase64Rq(images=[\n        models.AiBcrBase64Image(True, image_data)])))\n# Result contains all recognized VCard objects (only the one in our case)\ncontact_properties = result.value[0]\n# VCard object is available as a list of properties, without any external calls:\nprimitives = (prop for prop in contact_properties.internal_properties\n    if  prop.type == 'PrimitiveObject')\nfor prop in primitives:\n    print('Property name: ' + prop.name + ' value: ' + prop.value)\n```\n</details>\n\n#### Name API\nSee examples below:\n<details open>\n    <summary>Detect a person's gender by name</summary>\n\n```python\nresult = email_api.ai_name_genderize(\n    requests.AiNameGenderizeRequest('John Cane'))\n# the result contains a list of hypothesis about a person's gender.\n# all hypothesis include score, so you can use the most scored version,\n# which will be the first in a list:\nprint(result.value[0].gender) # prints 'Male'\n```\n</details>\n\n<details>\n    <summary>Format person's name using defined format</summary>\n\n```python\nresult = email_api.ai_name_format(\n    requests.AiNameFormatRequest(\n        'Mr. John Michael Cane',\n        format='%t%L%f%m'))\nprint(result.name) # prints 'Mr. Cane J. M.'\n```\n</details>\n\n<details>\n    <summary>Compare the names to find out if they belong to the same person or not</summary>\n\n```python\nfirst = 'John Michael Cane'\nsecond = 'Cane J.'\nresult = email_api.ai_name_match(\n    requests.AiNameMatchRequest(first, second))\nprint(result.similarity >= 0.5) # prints 'True', names look similar\n```\n</details>\n\n<details>\n    <summary>Expand a person's name into a list of possible alternatives</summary>\n\n```python\nname = 'Smith Bobby'\nresult = email_api.ai_name_expand(\n    requests.AiNameExpandRequest(name))\nexpanded_names = list(weighted.name for weighted in result.names)\nfor (expanded_name in expanded_names):\n    print expanded_name # prints 'Mr. Smith', 'B. Smith', etc.\n```\n</details>\n\n<details>\n    <summary>Get k most probable names for given starting characters</summary>\n\n```python\nprefix = 'Dav'\nresult = email_api.ai_name_complete(\n    requests.AiNameCompleteRequest(prefix))\nnames = list(prefix + weighted.name for weighted in result.names)\nfor (name in names):\n    print(name) # prints 'David', 'Dave', 'Davis', etc.\n```\n</details>\n\n<details>\n    <summary>Parse out a person's name from an email address.</summary>\n\n```python\naddress = 'john-cane@gmail.com'\nresult = email_api.ai_name_parse_email_address(\n    requests.AiNameParseEmailAddressRequest(address))\nnames = (extracted.name for extracted in result.value)\nextracted_values = list(functools.reduce(lambda a,b: a+b, names))\ngiven_name = next((x for x in extracted_values if x.category == 'GivenName'))\nsurname = next((x for x in extracted_values if x.category == 'Surname'))\nprint(given_name.value) # prints 'John'\nprint(surname.value) # prints 'Cane'\n```\n</details>\n\n# Licensing\nAll Aspose.Email Cloud SDKs, helper scripts and templates are licensed under [MIT License](LICENSE).\n\n# Resources\n+ [**SDK Reference documentation**](sdk/docs/README.md)\n+ [**Website**](https://www.aspose.cloud)\n+ [**Product Home**](https://products.aspose.cloud/Email/cloud)\n+ [**Documentation**](https://docs.aspose.cloud/display/Emailcloud/Home)\n+ [**API Reference**](https://apireference.aspose.cloud/email/)\n+ [**Free Support Forum**](https://forum.aspose.cloud/c/email)\n+ [**Paid Support Helpdesk**](https://helpdesk.aspose.cloud/)\n+ [**Blog**](https://blog.aspose.cloud/category/aspose-products/aspose-email-cloud/)\n+ [**Git repository: Aspose.Email Cloud SDK for .Net**](https://github.com/aspose-email-cloud/aspose-email-cloud-dotnet)\n+ [**Git repository: Aspose.Email Cloud SDK for Ruby**](https://github.com/aspose-email-cloud/aspose-email-cloud-ruby)\n+ [**Git repository: Aspose.Email Cloud SDK for Python**](https://github.com/aspose-email-cloud/aspose-email-cloud-python)\n+ [**Git repository: Aspose.Email Cloud SDK for PHP**](https://github.com/aspose-email-cloud/aspose-email-cloud-php)\n+ [**Git repository: Aspose.Email Cloud SDK for Typescript**](https://github.com/aspose-email-cloud/aspose-email-cloud-node)\n+ [**Git repository: Aspose.Email Cloud SDK for Java**](https://github.com/aspose-email-cloud/aspose-email-cloud-java)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://products.aspose.cloud/email/family", "keywords": "Swagger,Aspose.Email Cloud API", "license": "License :: OSI Approved :: MIT License", "maintainer": "", "maintainer_email": "", "name": "aspose-email-cloud", "package_url": "https://pypi.org/project/aspose-email-cloud/", "platform": "", "project_url": "https://pypi.org/project/aspose-email-cloud/", "project_urls": {"Homepage": "https://products.aspose.cloud/email/family"}, "release_url": "https://pypi.org/project/aspose-email-cloud/20.3.0/", "requires_dist": ["certifi (>=2017.4.17)", "python-dateutil (>=2.1)", "six (>=1.10)", "urllib3 (>=1.23)"], "requires_python": "", "summary": "Aspose.Email Cloud API", "version": "20.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Aspose.Email Cloud SDK for Python <a href=\"https://pypi.org/project/aspose-email-cloud/\" rel=\"nofollow\"><img alt=\"PYPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/203100a9f0ec04aa17476d64899829c4d5823d05/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6173706f73652d656d61696c2d636c6f7564\"></a> <a href=\"https://pypi.org/project/aspose-email-cloud/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/acd60cebf82f80d8525ce0487033ffe49114bf68/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6173706f73652d656d61696c2d636c6f75642f6173706f73652d656d61696c2d636c6f75642d707974686f6e\"></a> <img alt=\"tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43b8e6ca58a885a351eaf8e6d7fcf479981aa7aa/68747470733a2f2f6769746875622e636f6d2f6173706f73652d656d61696c2d636c6f75642f6173706f73652d656d61696c2d636c6f75642d707974686f6e2f776f726b666c6f77732f74657374732f62616467652e737667\"></h1>\n<p>This repository contains Aspose.Email Cloud SDK for Python source code. This SDK allows you to work with Aspose.Email Cloud REST APIs in your Python applications quickly and easily, with zero initial cost.</p>\n<p><a href=\"https://products.aspose.cloud/email/family\" rel=\"nofollow\" title=\"Aspose.Email Cloud\">Aspose.Email Cloud home</a><br>\n<a href=\"https://apireference.aspose.cloud/email/\" rel=\"nofollow\">API Reference</a></p>\n<h1>Key features</h1>\n<p>Aspose.Email Cloud is a REST API for creating email applications that work with standard email file formats. This SDK:</p>\n<ul>\n<li>Lets developers manipulate different emails\u2019 formats such as Outlook MSG, EML, VCard, and iCalendar files</li>\n<li>Has a built-in email client</li>\n<li>Supports AI functionalities:\n<ul>\n<li>The Business card recognition</li>\n<li>The Name API for parsing and handling personal names</li>\n</ul>\n</li>\n</ul>\n<h2>How to use the SDK?</h2>\n<p>The complete source code is available in the GIT repository.\nUse <a href=\"https://github.com/aspose-email-cloud/aspose-email-cloud-python/blob/master/sdk/docs/README.md\" rel=\"nofollow\">reference documentation</a>, <a href=\"#usage-examples\" rel=\"nofollow\">examples from this document</a> and <a href=\"https://github.com/aspose-email-cloud/aspose-email-cloud-python/wiki\" rel=\"nofollow\">wiki</a></p>\n<h3>Prerequisites</h3>\n<p>To use this SDK, you need an App SID and an App Key; they can be looked up at <a href=\"https://dashboard.aspose.cloud/#/apps\" rel=\"nofollow\">Aspose Cloud Dashboard</a> (it requires free registration in Aspose Cloud for this).</p>\n<h3>Installation</h3>\n<p>You can use it directly in your project via the source code or get a <a href=\"https://pypi.org/project/aspose-email-cloud/\" rel=\"nofollow\">PYPI Package</a>:</p>\n<pre><code>pip install aspose-email-cloud\n</code></pre>\n<h3>Usage examples</h3>\n<p>To use the API, you should create an EmailApi object:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">AsposeEmailCloudSdk</span> <span class=\"kn\">import</span> <span class=\"n\">api</span> <span class=\"c1\">#EmailApi class is here</span>\n<span class=\"kn\">from</span> <span class=\"nn\">AsposeEmailCloudSdk</span> <span class=\"kn\">import</span> <span class=\"n\">models</span> <span class=\"c1\">#REST API models are here</span>\n<span class=\"kn\">from</span> <span class=\"nn\">AsposeEmailCloudSdk.models</span> <span class=\"kn\">import</span> <span class=\"n\">requests</span> <span class=\"c1\">#Request models are here (all API calls use corresponding request model class)</span>\n\n<span class=\"c1\">#...</span>\n<span class=\"n\">app_sid</span> <span class=\"o\">=</span> <span class=\"s1\">'Your App SID'</span>\n<span class=\"n\">app_key</span> <span class=\"o\">=</span> <span class=\"s1\">'Your App Key'</span>\n<span class=\"n\">email_api</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">EmailApi</span><span class=\"p\">(</span><span class=\"n\">app_key</span><span class=\"p\">,</span> <span class=\"n\">app_sid</span><span class=\"p\">)</span>\n</pre>\n<p>API calls can be synchronous or asynchronous (using ThreadPool from multiprocessing.pool):</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">get_calendar</span><span class=\"p\">(</span>\n    <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">GetCalendarRequest</span><span class=\"p\">(</span>\n        <span class=\"n\">calendar_file</span><span class=\"p\">,</span>\n        <span class=\"n\">folder</span><span class=\"p\">,</span>\n        <span class=\"n\">storage</span><span class=\"p\">))</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">async_result</span> <span class=\"o\">=</span> <span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">get_calendar_async</span><span class=\"p\">(</span> <span class=\"c1\">#returns multiprocessing.pool.AsyncResult</span>\n    <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">GetCalendarRequest</span><span class=\"p\">(</span>\n        <span class=\"n\">calendar_file</span><span class=\"p\">,</span>\n        <span class=\"n\">folder</span><span class=\"p\">,</span>\n        <span class=\"n\">storage</span><span class=\"p\">))</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">async_result</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n</pre>\n<h4>Business cards recognition API</h4>\n<p>See examples below:</p>\n<details>\n    <summary>Parse business card images to VCard contact files</summary>\n<pre><span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"s1\">'First Storage'</span> <span class=\"c1\"># Your storage name</span>\n<span class=\"n\">file_name</span> <span class=\"o\">=</span> <span class=\"s1\">'some_file_name.png'</span> <span class=\"c1\">#Supports different image formats: PNG, JPEG, BMP, TIFF, GIF, etc.</span>\n<span class=\"n\">image_file</span> <span class=\"o\">=</span> <span class=\"s1\">'some/business/card/image/file/on/disk.png'</span>\n<span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"s1\">'some/folder/path/on/storage'</span>\n<span class=\"c1\"># Upload business card image to storage</span>\n<span class=\"n\">storage_location</span> <span class=\"o\">=</span> <span class=\"n\">folder</span> <span class=\"o\">+</span> <span class=\"s1\">'/'</span> <span class=\"o\">+</span> <span class=\"n\">file_name</span>\n<span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">upload_file</span><span class=\"p\">(</span>\n    <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">UploadFileRequest</span><span class=\"p\">(</span><span class=\"n\">storage_location</span><span class=\"p\">,</span> <span class=\"n\">image_file</span><span class=\"p\">,</span> <span class=\"n\">storage</span><span class=\"p\">))</span>\n\n<span class=\"n\">out_folder_path</span> <span class=\"o\">=</span> <span class=\"s1\">'some/other/folder/path/on/storage'</span> <span class=\"c1\"># Business card recognition results will be saved here</span>\n<span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">create_folder</span><span class=\"p\">(</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">CreateFolderRequest</span><span class=\"p\">(</span><span class=\"n\">out_folder_path</span><span class=\"p\">,</span> <span class=\"n\">storage</span><span class=\"p\">))</span>\n<span class=\"c1\"># Call business card recognition action</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">ai_bcr_parse_storage</span><span class=\"p\">(</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">AiBcrParseStorageRequest</span><span class=\"p\">(</span>\n    <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">AiBcrParseStorageRq</span><span class=\"p\">(</span>\n        <span class=\"n\">images</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">AiBcrImageStorageFile</span><span class=\"p\">(</span>\n                <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"c1\">#Flag isSingle determines that image contains single VCard or more.</span>\n                      <span class=\"c1\">#Only single VCard on image variant is supported in current version.</span>\n                <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">StorageFileLocation</span><span class=\"p\">(</span><span class=\"n\">storage</span><span class=\"p\">,</span> <span class=\"n\">folder</span><span class=\"p\">,</span> <span class=\"n\">file_name</span><span class=\"p\">))],</span>\n        <span class=\"n\">out_folder</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">StorageFolderLocation</span><span class=\"p\">(</span><span class=\"n\">storage</span><span class=\"p\">,</span> <span class=\"n\">out_folder_path</span><span class=\"p\">))))</span>\n<span class=\"c1\"># Get file name from recognition result</span>\n<span class=\"n\">contact_file</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"c1\"># result.value can contain multiple files, if we sent multicard images or multiple images</span>\n<span class=\"c1\"># You can download the VCard file, which produced by the recognition method ...</span>\n<span class=\"n\">downloaded</span> <span class=\"o\">=</span> <span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">download_file</span><span class=\"p\">(</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">DownloadFileRequest</span><span class=\"p\">(</span>\n    <span class=\"n\">contact_file</span><span class=\"o\">.</span><span class=\"n\">folder_path</span> <span class=\"o\">+</span> <span class=\"s1\">'/'</span> <span class=\"o\">+</span> <span class=\"n\">contact_file</span><span class=\"o\">.</span><span class=\"n\">file_name</span><span class=\"p\">,</span>\n    <span class=\"n\">storage</span><span class=\"p\">))</span>\n<span class=\"c1\"># ... and print it to console</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">downloaded</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">file_data</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">file_data</span><span class=\"p\">)</span>\n<span class=\"c1\"># Also, you can get VCard object properties\u2019 list using Contact API</span>\n<span class=\"n\">contact_properties</span> <span class=\"o\">=</span> <span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">get_contact_properties</span><span class=\"p\">(</span>\n    <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">GetContactPropertiesRequest</span><span class=\"p\">(</span>\n        <span class=\"s1\">'VCard'</span><span class=\"p\">,</span>\n        <span class=\"n\">contact_file</span><span class=\"o\">.</span><span class=\"n\">file_name</span><span class=\"p\">,</span>\n        <span class=\"n\">contact_file</span><span class=\"o\">.</span><span class=\"n\">folder_path</span><span class=\"p\">,</span>\n        <span class=\"n\">contact_file</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"p\">))</span>\n<span class=\"c1\"># All VCard\u2019s properties are available as a list. Complex properties are represented as hierarchical structures.</span>\n<span class=\"c1\"># Let's print all primitive properties\u2019 values:</span>\n<span class=\"n\">primitives</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">prop</span> <span class=\"k\">for</span> <span class=\"n\">prop</span> <span class=\"ow\">in</span> <span class=\"n\">contact_properties</span><span class=\"o\">.</span><span class=\"n\">internal_properties</span>\n    <span class=\"k\">if</span>  <span class=\"n\">prop</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'PrimitiveObject'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">prop</span> <span class=\"ow\">in</span> <span class=\"n\">primitives</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Property name: '</span> <span class=\"o\">+</span> <span class=\"n\">prop</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s1\">' value: '</span> <span class=\"o\">+</span> <span class=\"n\">prop</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n</pre>\n</details>\n<details>\n    <summary>Parse images directly, without the using of a storage</summary>\n<pre><span class=\"c1\"># Read image from file and convert it to Base64 string</span>\n<span class=\"n\">image_file</span> <span class=\"o\">=</span> <span class=\"s1\">'some/business/card/image/file/on/disk.png'</span>\n<span class=\"n\">image_data</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">image_file</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">file_data</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n    <span class=\"n\">image_data</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">b64encode</span><span class=\"p\">(</span><span class=\"n\">file_data</span><span class=\"p\">),</span> <span class=\"s1\">'utf-8'</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">ai_bcr_parse</span><span class=\"p\">(</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">AiBcrParseRequest</span><span class=\"p\">(</span>\n    <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">AiBcrBase64Rq</span><span class=\"p\">(</span><span class=\"n\">images</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">AiBcrBase64Image</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">image_data</span><span class=\"p\">)])))</span>\n<span class=\"c1\"># Result contains all recognized VCard objects (only the one in our case)</span>\n<span class=\"n\">contact_properties</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"c1\"># VCard object is available as a list of properties, without any external calls:</span>\n<span class=\"n\">primitives</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">prop</span> <span class=\"k\">for</span> <span class=\"n\">prop</span> <span class=\"ow\">in</span> <span class=\"n\">contact_properties</span><span class=\"o\">.</span><span class=\"n\">internal_properties</span>\n    <span class=\"k\">if</span>  <span class=\"n\">prop</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'PrimitiveObject'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">prop</span> <span class=\"ow\">in</span> <span class=\"n\">primitives</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Property name: '</span> <span class=\"o\">+</span> <span class=\"n\">prop</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s1\">' value: '</span> <span class=\"o\">+</span> <span class=\"n\">prop</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n</pre>\n</details>\n<h4>Name API</h4>\n<p>See examples below:</p>\n<details>\n    <summary>Detect a person's gender by name</summary>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">ai_name_genderize</span><span class=\"p\">(</span>\n    <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">AiNameGenderizeRequest</span><span class=\"p\">(</span><span class=\"s1\">'John Cane'</span><span class=\"p\">))</span>\n<span class=\"c1\"># the result contains a list of hypothesis about a person's gender.</span>\n<span class=\"c1\"># all hypothesis include score, so you can use the most scored version,</span>\n<span class=\"c1\"># which will be the first in a list:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">gender</span><span class=\"p\">)</span> <span class=\"c1\"># prints 'Male'</span>\n</pre>\n</details>\n<details>\n    <summary>Format person's name using defined format</summary>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">ai_name_format</span><span class=\"p\">(</span>\n    <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">AiNameFormatRequest</span><span class=\"p\">(</span>\n        <span class=\"s1\">'Mr. John Michael Cane'</span><span class=\"p\">,</span>\n        <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">'%t</span><span class=\"si\">%L%</span><span class=\"s1\">f%m'</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"c1\"># prints 'Mr. Cane J. M.'</span>\n</pre>\n</details>\n<details>\n    <summary>Compare the names to find out if they belong to the same person or not</summary>\n<pre><span class=\"n\">first</span> <span class=\"o\">=</span> <span class=\"s1\">'John Michael Cane'</span>\n<span class=\"n\">second</span> <span class=\"o\">=</span> <span class=\"s1\">'Cane J.'</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">ai_name_match</span><span class=\"p\">(</span>\n    <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">AiNameMatchRequest</span><span class=\"p\">(</span><span class=\"n\">first</span><span class=\"p\">,</span> <span class=\"n\">second</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">similarity</span> <span class=\"o\">&gt;=</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span> <span class=\"c1\"># prints 'True', names look similar</span>\n</pre>\n</details>\n<details>\n    <summary>Expand a person's name into a list of possible alternatives</summary>\n<pre><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'Smith Bobby'</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">ai_name_expand</span><span class=\"p\">(</span>\n    <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">AiNameExpandRequest</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">))</span>\n<span class=\"n\">expanded_names</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">weighted</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">weighted</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">names</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">expanded_name</span> <span class=\"ow\">in</span> <span class=\"n\">expanded_names</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"n\">expanded_name</span> <span class=\"c1\"># prints 'Mr. Smith', 'B. Smith', etc.</span>\n</pre>\n</details>\n<details>\n    <summary>Get k most probable names for given starting characters</summary>\n<pre><span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"s1\">'Dav'</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">ai_name_complete</span><span class=\"p\">(</span>\n    <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">AiNameCompleteRequest</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"p\">))</span>\n<span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">prefix</span> <span class=\"o\">+</span> <span class=\"n\">weighted</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">weighted</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">names</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">names</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"c1\"># prints 'David', 'Dave', 'Davis', etc.</span>\n</pre>\n</details>\n<details>\n    <summary>Parse out a person's name from an email address.</summary>\n<pre><span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"s1\">'john-cane@gmail.com'</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">email_api</span><span class=\"o\">.</span><span class=\"n\">ai_name_parse_email_address</span><span class=\"p\">(</span>\n    <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">AiNameParseEmailAddressRequest</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"p\">))</span>\n<span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">extracted</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">extracted</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"n\">extracted_values</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">functools</span><span class=\"o\">.</span><span class=\"n\">reduce</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">))</span>\n<span class=\"n\">given_name</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">((</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">extracted_values</span> <span class=\"k\">if</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">category</span> <span class=\"o\">==</span> <span class=\"s1\">'GivenName'</span><span class=\"p\">))</span>\n<span class=\"n\">surname</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">((</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">extracted_values</span> <span class=\"k\">if</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">category</span> <span class=\"o\">==</span> <span class=\"s1\">'Surname'</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">given_name</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"c1\"># prints 'John'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">surname</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"c1\"># prints 'Cane'</span>\n</pre>\n</details>\n<h1>Licensing</h1>\n<p>All Aspose.Email Cloud SDKs, helper scripts and templates are licensed under <a href=\"LICENSE\" rel=\"nofollow\">MIT License</a>.</p>\n<h1>Resources</h1>\n<ul>\n<li><a href=\"sdk/docs/README.md\" rel=\"nofollow\"><strong>SDK Reference documentation</strong></a></li>\n<li><a href=\"https://www.aspose.cloud\" rel=\"nofollow\"><strong>Website</strong></a></li>\n<li><a href=\"https://products.aspose.cloud/Email/cloud\" rel=\"nofollow\"><strong>Product Home</strong></a></li>\n<li><a href=\"https://docs.aspose.cloud/display/Emailcloud/Home\" rel=\"nofollow\"><strong>Documentation</strong></a></li>\n<li><a href=\"https://apireference.aspose.cloud/email/\" rel=\"nofollow\"><strong>API Reference</strong></a></li>\n<li><a href=\"https://forum.aspose.cloud/c/email\" rel=\"nofollow\"><strong>Free Support Forum</strong></a></li>\n<li><a href=\"https://helpdesk.aspose.cloud/\" rel=\"nofollow\"><strong>Paid Support Helpdesk</strong></a></li>\n<li><a href=\"https://blog.aspose.cloud/category/aspose-products/aspose-email-cloud/\" rel=\"nofollow\"><strong>Blog</strong></a></li>\n<li><a href=\"https://github.com/aspose-email-cloud/aspose-email-cloud-dotnet\" rel=\"nofollow\"><strong>Git repository: Aspose.Email Cloud SDK for .Net</strong></a></li>\n<li><a href=\"https://github.com/aspose-email-cloud/aspose-email-cloud-ruby\" rel=\"nofollow\"><strong>Git repository: Aspose.Email Cloud SDK for Ruby</strong></a></li>\n<li><a href=\"https://github.com/aspose-email-cloud/aspose-email-cloud-python\" rel=\"nofollow\"><strong>Git repository: Aspose.Email Cloud SDK for Python</strong></a></li>\n<li><a href=\"https://github.com/aspose-email-cloud/aspose-email-cloud-php\" rel=\"nofollow\"><strong>Git repository: Aspose.Email Cloud SDK for PHP</strong></a></li>\n<li><a href=\"https://github.com/aspose-email-cloud/aspose-email-cloud-node\" rel=\"nofollow\"><strong>Git repository: Aspose.Email Cloud SDK for Typescript</strong></a></li>\n<li><a href=\"https://github.com/aspose-email-cloud/aspose-email-cloud-java\" rel=\"nofollow\"><strong>Git repository: Aspose.Email Cloud SDK for Java</strong></a></li>\n</ul>\n\n          </div>"}, "last_serial": 6820962, "releases": {"19.11.0": [{"comment_text": "", "digests": {"md5": "4f005d1d56dcd285d9000649ea41d1d1", "sha256": "e9c35badf0ab7f415a365e9c126817d8529ff586bca8e1a1f4e1ced2114bc7ca"}, "downloads": -1, "filename": "aspose_email_cloud-19.11.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4f005d1d56dcd285d9000649ea41d1d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 227732, "upload_time": "2019-11-27T12:43:43", "upload_time_iso_8601": "2019-11-27T12:43:43.239532Z", "url": "https://files.pythonhosted.org/packages/7d/0b/2cabeed39f7b741a9ef875402c857d3da0b893d97fbb919418821d8646cf/aspose_email_cloud-19.11.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b04803b703636db3d35aa00ff361211", "sha256": "31a3bcfb72d1d7e501f2d241f503b1ee588ce7841c7a88e44812e7925f12de17"}, "downloads": -1, "filename": "aspose-email-cloud-19.11.0.tar.gz", "has_sig": false, "md5_digest": "1b04803b703636db3d35aa00ff361211", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52079, "upload_time": "2019-11-27T12:43:46", "upload_time_iso_8601": "2019-11-27T12:43:46.006792Z", "url": "https://files.pythonhosted.org/packages/d2/a5/ca0a3a2939c2fe342e34eb5e11df60d0b6e8d9c48c97829da556a177ac9d/aspose-email-cloud-19.11.0.tar.gz", "yanked": false}], "19.12.0": [{"comment_text": "", "digests": {"md5": "7ee486718cafe7058f45e01cacc45b2d", "sha256": "09b99c49451b3fdb3f0992c813ff7c55b4cbfdb20f71f4bf24740822b854d6f2"}, "downloads": -1, "filename": "aspose_email_cloud-19.12.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7ee486718cafe7058f45e01cacc45b2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 322195, "upload_time": "2019-12-31T11:44:32", "upload_time_iso_8601": "2019-12-31T11:44:32.015670Z", "url": "https://files.pythonhosted.org/packages/e8/81/398a093b1a6f4d623c487a3db892044f9bf760dae611c5cbf7851df486d5/aspose_email_cloud-19.12.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "597d288ca6629bde038983008a39eddf", "sha256": "6e8becae2bf5e0e1aaba799a563f822142bbcd9576c5fab6d3ac65cb70628408"}, "downloads": -1, "filename": "aspose-email-cloud-19.12.0.tar.gz", "has_sig": false, "md5_digest": "597d288ca6629bde038983008a39eddf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71825, "upload_time": "2019-12-31T11:44:34", "upload_time_iso_8601": "2019-12-31T11:44:34.365485Z", "url": "https://files.pythonhosted.org/packages/6f/ae/892c11882696cc85e331cda24d36ce15587f3a92100f8ca07dbee4db72c3/aspose-email-cloud-19.12.0.tar.gz", "yanked": false}], "20.1.0": [{"comment_text": "", "digests": {"md5": "fad4fc5e1f62d76a8162dc43d17bd41a", "sha256": "f75e3932e0b845bfd84b1bc59920339908e41075fe1627209a1e9b15c297f643"}, "downloads": -1, "filename": "aspose_email_cloud-20.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fad4fc5e1f62d76a8162dc43d17bd41a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 463487, "upload_time": "2020-01-28T10:41:33", "upload_time_iso_8601": "2020-01-28T10:41:33.889489Z", "url": "https://files.pythonhosted.org/packages/b9/a7/83a18b1d57385e35aaae5f4348dbfbc9e6a7e9c46b4bba3a598c2039bcf2/aspose_email_cloud-20.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd3e1d02c6f4df8466906561e2a3e202", "sha256": "fbeb58d2f9ba74d6e8a33d8d7c6c14ecc76e03f4816581230f6c8f61eea3855d"}, "downloads": -1, "filename": "aspose-email-cloud-20.1.0.tar.gz", "has_sig": false, "md5_digest": "cd3e1d02c6f4df8466906561e2a3e202", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105596, "upload_time": "2020-01-28T10:41:36", "upload_time_iso_8601": "2020-01-28T10:41:36.125129Z", "url": "https://files.pythonhosted.org/packages/4e/ba/333342d4869aef6c24f3e80a02b0aa57a125bccbdc791d89939c56ad26b7/aspose-email-cloud-20.1.0.tar.gz", "yanked": false}], "20.2.0": [{"comment_text": "", "digests": {"md5": "55ef924ef4db2187bc344a32e4c58f9f", "sha256": "1078fac75b43f5398ad27037c22b9670a351c110f79bfd4ea2c9dfd477df1502"}, "downloads": -1, "filename": "aspose_email_cloud-20.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "55ef924ef4db2187bc344a32e4c58f9f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 490983, "upload_time": "2020-02-26T13:00:54", "upload_time_iso_8601": "2020-02-26T13:00:54.854405Z", "url": "https://files.pythonhosted.org/packages/19/3f/1e4a31df64cfff390a5f5f1ef7b62023bad3732c25c137a9c4725777ae94/aspose_email_cloud-20.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d58fbca31e545c8d2a22d334e9f0365", "sha256": "51faf716a75cbf18d440b89160b2ef38afb1c8a98f737ec440c0680706c5fda7"}, "downloads": -1, "filename": "aspose-email-cloud-20.2.0.tar.gz", "has_sig": false, "md5_digest": "9d58fbca31e545c8d2a22d334e9f0365", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115031, "upload_time": "2020-02-26T13:00:56", "upload_time_iso_8601": "2020-02-26T13:00:56.593453Z", "url": "https://files.pythonhosted.org/packages/67/ac/3ae469923b5a7eb17feb552562ae87749748681da7ec7c8d28143ee9688a/aspose-email-cloud-20.2.0.tar.gz", "yanked": false}], "20.3.0": [{"comment_text": "", "digests": {"md5": "6a7e7029b93263311c46a371163914ee", "sha256": "bee8fbd8818a7fa9a7940b2eb16db929417c1f734907490b694d9484b9e3dc6c"}, "downloads": -1, "filename": "aspose_email_cloud-20.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6a7e7029b93263311c46a371163914ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5277, "upload_time": "2020-03-16T12:25:03", "upload_time_iso_8601": "2020-03-16T12:25:03.522863Z", "url": "https://files.pythonhosted.org/packages/42/9f/bfc9544ef00178992739ea891d3312167ae7407696fd3e355a2eba3a5ea4/aspose_email_cloud-20.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb63332646eea7039220c88c60263db1", "sha256": "653f119c909422238141de785c1ff8beb155edeb5b70e46b4bf9a1b802ec9a6c"}, "downloads": -1, "filename": "aspose-email-cloud-20.3.0.tar.gz", "has_sig": false, "md5_digest": "eb63332646eea7039220c88c60263db1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4973, "upload_time": "2020-03-16T12:25:05", "upload_time_iso_8601": "2020-03-16T12:25:05.169441Z", "url": "https://files.pythonhosted.org/packages/8a/4f/5d99182dd2d06ac322cd8c7b1a09f108c67502136dd719c0f5db25e708db/aspose-email-cloud-20.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6a7e7029b93263311c46a371163914ee", "sha256": "bee8fbd8818a7fa9a7940b2eb16db929417c1f734907490b694d9484b9e3dc6c"}, "downloads": -1, "filename": "aspose_email_cloud-20.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6a7e7029b93263311c46a371163914ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5277, "upload_time": "2020-03-16T12:25:03", "upload_time_iso_8601": "2020-03-16T12:25:03.522863Z", "url": "https://files.pythonhosted.org/packages/42/9f/bfc9544ef00178992739ea891d3312167ae7407696fd3e355a2eba3a5ea4/aspose_email_cloud-20.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb63332646eea7039220c88c60263db1", "sha256": "653f119c909422238141de785c1ff8beb155edeb5b70e46b4bf9a1b802ec9a6c"}, "downloads": -1, "filename": "aspose-email-cloud-20.3.0.tar.gz", "has_sig": false, "md5_digest": "eb63332646eea7039220c88c60263db1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4973, "upload_time": "2020-03-16T12:25:05", "upload_time_iso_8601": "2020-03-16T12:25:05.169441Z", "url": "https://files.pythonhosted.org/packages/8a/4f/5d99182dd2d06ac322cd8c7b1a09f108c67502136dd719c0f5db25e708db/aspose-email-cloud-20.3.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:55 2020"}