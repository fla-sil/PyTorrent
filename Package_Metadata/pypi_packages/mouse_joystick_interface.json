{"info": {"author": "Peter Polidoro", "author_email": "polidorop@janelia.hhmi.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools"], "description": "mouse_joystick_interface_python\n===============================\n\nThis Python package creates a class named MouseJoystickInterface.\n\nAuthors::\n\n    Peter Polidoro <polidorop@janelia.hhmi.org>\n\nLicense::\n\n    BSD\n\nExample Usage::\n\n    dev = MouseJoystickInterface() # Might automatically find devices if available\n    # if devices not found automatically, specify ports directly\n    dev = MouseJoystickInterface(use_ports=['/dev/ttyACM0','/dev/ttyACM0']) # Linux specific ports\n    dev = MouseJoystickInterface(use_ports=['/dev/tty.usbmodem262471','/dev/tty.usbmodem262472']) # Mac OS X specific ports\n    dev = MouseJoystickInterface(use_ports=['COM3','COM4']) # Windows specific ports\n    # abort_assay prematurely stops a running assay and leaves the rig ready to start a new assay\n    dev.abort_assay()\n    # start_assay is the main method that starts the assay, collects assay data, and saves data files\n    dev.start_assay()\n\n    # optional mouse_joystick_controller methods\n    dev.mouse_joystick_controller.set_properties_to_defaults(['ALL'])\n    dev.mouse_joystick_controller.get_property_values(['ALL'])\n    dev.mouse_joystick_controller.reach_position1_means('getValue')\n    dev.mouse_joystick_controller.reach_position1_means('setValue',[100,160,200])\n    dev.mouse_joystick_controller.reach_position1_means('setArrayLength',2)\n    dev.mouse_joystick_controller.reach_position1_means('setValue',[100,200])\n    dev.mouse_joystick_controller.trial_count('setValue',3)\n    dev.mouse_joystick_controller.repeat_aborted_trial('setValue',False)\n    dev.mouse_joystick_controller.get_assay_status()\n    dev.mouse_joystick_controller.move_joystick_to_base_position()\n    dev.mouse_joystick_controller.move_joystick_to_reach_position()\n    count = 1\n    dev.mouse_joystick_controller.activate_lickport(count)\n    dev.mouse_joystick_controller.get_trial_timing_data()\n    dev.mouse_joystick_controller.abort_trial()\n\n    # optional encoder_interface methods\n    dev.encoder_interface.set_properties_to_defaults(['ALL'])\n    dev.encoder_interface.get_property_values(['ALL'])\n    dev.encoder_interface.sample_period('setValue',15)\n    dev.encoder_interface.get_positions()\n    dev.encoder_interface.get_sample_count()\n    dev.encoder_interface.get_samples()\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/janelia-pypi/mouse_joystick_interface_python", "keywords": "modular serial arduino device client modulardevice modular-device modular_device modularclient modular-client mouse_joystick_interface json json-rpc", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "mouse_joystick_interface", "package_url": "https://pypi.org/project/mouse_joystick_interface/", "platform": "", "project_url": "https://pypi.org/project/mouse_joystick_interface/", "project_urls": {"Homepage": "https://github.com/janelia-pypi/mouse_joystick_interface_python"}, "release_url": "https://pypi.org/project/mouse_joystick_interface/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Mouse joystick interface for communicating with mouse joystick controller.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This Python package creates a class named MouseJoystickInterface.</p>\n<p>Authors:</p>\n<pre>Peter Polidoro &lt;polidorop@janelia.hhmi.org&gt;\n</pre>\n<p>License:</p>\n<pre>BSD\n</pre>\n<p>Example Usage:</p>\n<pre>dev = MouseJoystickInterface() # Might automatically find devices if available\n# if devices not found automatically, specify ports directly\ndev = MouseJoystickInterface(use_ports=['/dev/ttyACM0','/dev/ttyACM0']) # Linux specific ports\ndev = MouseJoystickInterface(use_ports=['/dev/tty.usbmodem262471','/dev/tty.usbmodem262472']) # Mac OS X specific ports\ndev = MouseJoystickInterface(use_ports=['COM3','COM4']) # Windows specific ports\n# abort_assay prematurely stops a running assay and leaves the rig ready to start a new assay\ndev.abort_assay()\n# start_assay is the main method that starts the assay, collects assay data, and saves data files\ndev.start_assay()\n\n# optional mouse_joystick_controller methods\ndev.mouse_joystick_controller.set_properties_to_defaults(['ALL'])\ndev.mouse_joystick_controller.get_property_values(['ALL'])\ndev.mouse_joystick_controller.reach_position1_means('getValue')\ndev.mouse_joystick_controller.reach_position1_means('setValue',[100,160,200])\ndev.mouse_joystick_controller.reach_position1_means('setArrayLength',2)\ndev.mouse_joystick_controller.reach_position1_means('setValue',[100,200])\ndev.mouse_joystick_controller.trial_count('setValue',3)\ndev.mouse_joystick_controller.repeat_aborted_trial('setValue',False)\ndev.mouse_joystick_controller.get_assay_status()\ndev.mouse_joystick_controller.move_joystick_to_base_position()\ndev.mouse_joystick_controller.move_joystick_to_reach_position()\ncount = 1\ndev.mouse_joystick_controller.activate_lickport(count)\ndev.mouse_joystick_controller.get_trial_timing_data()\ndev.mouse_joystick_controller.abort_trial()\n\n# optional encoder_interface methods\ndev.encoder_interface.set_properties_to_defaults(['ALL'])\ndev.encoder_interface.get_property_values(['ALL'])\ndev.encoder_interface.sample_period('setValue',15)\ndev.encoder_interface.get_positions()\ndev.encoder_interface.get_sample_count()\ndev.encoder_interface.get_samples()\n</pre>\n\n          </div>"}, "last_serial": 4048103, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "cd7d363d2caa9f05c6daaeb65e608e4c", "sha256": "7ea7dc12225ec6dfdae50e806481277f921f3ba3c5889a92586b46503ee0ed99"}, "downloads": -1, "filename": "mouse_joystick_interface-1.0.0.tar.gz", "has_sig": false, "md5_digest": "cd7d363d2caa9f05c6daaeb65e608e4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5883, "upload_time": "2018-06-25T17:05:17", "upload_time_iso_8601": "2018-06-25T17:05:17.258193Z", "url": "https://files.pythonhosted.org/packages/6c/9b/4208bb0fce50e82a30bdaa7d734f5d39e323ad3298079e0eafeb5f75be5f/mouse_joystick_interface-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "109a08b093b5b8d8c8266553ede29b34", "sha256": "c1ef01dd12eab85de7ed67b88dfcc88fbfdbe1db2b6a5698d5cb786f4c3c50a9"}, "downloads": -1, "filename": "mouse_joystick_interface-1.1.0.tar.gz", "has_sig": false, "md5_digest": "109a08b093b5b8d8c8266553ede29b34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6420, "upload_time": "2018-07-10T18:17:20", "upload_time_iso_8601": "2018-07-10T18:17:20.684412Z", "url": "https://files.pythonhosted.org/packages/0b/0f/88804c9634c08b15cd41b680851c9d3029e28789996edc21acd9e3122199/mouse_joystick_interface-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "109a08b093b5b8d8c8266553ede29b34", "sha256": "c1ef01dd12eab85de7ed67b88dfcc88fbfdbe1db2b6a5698d5cb786f4c3c50a9"}, "downloads": -1, "filename": "mouse_joystick_interface-1.1.0.tar.gz", "has_sig": false, "md5_digest": "109a08b093b5b8d8c8266553ede29b34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6420, "upload_time": "2018-07-10T18:17:20", "upload_time_iso_8601": "2018-07-10T18:17:20.684412Z", "url": "https://files.pythonhosted.org/packages/0b/0f/88804c9634c08b15cd41b680851c9d3029e28789996edc21acd9e3122199/mouse_joystick_interface-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:30 2020"}