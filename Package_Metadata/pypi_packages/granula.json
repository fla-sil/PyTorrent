{"info": {"author": "Vladislav Blinov", "author_email": "cunningplan@yandex.ru", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython"], "description": "\nGranula: Multi-file Configurations for Python Applications\n==========================================================\n\n.. image:: https://img.shields.io/pypi/v/granula.svg\n    :target: https://pypi.python.org/pypi/granula\n    :alt: Package version\n\n.. image:: https://img.shields.io/pypi/l/granula.svg\n    :target: https://pypi.python.org/pypi/granula\n    :alt: Package license\n\n.. image:: https://img.shields.io/pypi/pyversions/granula.svg\n    :target: https://pypi.python.org/pypi/granula\n    :alt: Python versions\n\n.. image:: https://travis-ci.org/chomechome/granula.svg?branch=master\n    :target: https://travis-ci.org/chomechome/granula\n    :alt: TravisCI status\n\n.. image:: https://codecov.io/github/chomechome/granula/coverage.svg?branch=master\n    :target: https://codecov.io/github/chomechome/granula\n    :alt: Code coverage\n\n---------------\n\n**Granula** is a tool that aims to help maintain multi-file configurations for\nPython applications (with environments and more).\n\nInstallation\n------------\n\n::\n\n    $ pipenv install granula\n\nor just use pip (though you should definitely take a look at `pipenv <https://pipenv.readthedocs.io/en/latest/>`_)\n\n\ud83c\udf08\ud83c\udf08\ud83c\udf08\n\nFeatures\n----------\n\n- Gathers configurations from multiple files or directories.\n- Supports widely used file formats (YAML, JSON).\n- Offers a small DSL that allows to load environment variables into config files.\n- Manages different configuration environments (e.g. testing, production).\n\nUsage\n-------\n\nCreate a config object from a directory with multiple configuration files:\n\n.. code-block:: python\n\n    >> import granula\n    >> config = granula.Config.from_directory('examples/multi-file/settings')\n    >> config\n    Config({'name': 'Darth Vader', ...})\n    >> config.name\n    'Darth Vader'\n    >> config.family\n    Config({'fiancee': 'Padme Amidala', 'children': ['Luke Skywalker', 'Leia Organa']})\n\nFiles are parsed in lexicographic order. The values specified in the preceding files can be overwritten in the succeeding files.\n\nDo the same in a recursive manner:\n\n.. code-block:: python\n\n    >> config = granula.Config.from_directory(..., recursive=True)\n\nMatch YAML files using filename pattern:\n\n.. code-block:: python\n\n    >> config = granula.Config.from_directory(..., pattern=granula.Extension('yaml'))\n\nDo the same with a shell-style wildcard pattern:\n\n.. code-block:: python\n\n    >> config = granula.Config.from_directory(..., pattern=granula.Wildcard('*.yaml'))\n\nMatch configuration files for different environments:\n\n.. code-block:: python\n\n    >> directory = 'examples/environments/settings'\n    >> testing = granula.Config.from_directory(directory, pattern=granula.Environment('testing'))\n    >> production = granula.Config.from_directory(directory, pattern=granula.Environment('production'))\n\nCombine patterns in arbitrary ways:\n\n.. code-block:: python\n\n    >> pattern = granula.All(granula.Environment('testing'), granula.Extension('yaml'))\n    >> config = granula.Config.from_directory(..., pattern=pattern)\n\nLoad environment variables into config files using a DSL, for example, in YAML:\n\n.. code-block::\n\n    variable: ${env VARIABLE}\n\nDo the same with a default value:\n\n.. code-block::\n\n    variable: ${env VARIABLE | val 10}\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chomechome/granula", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "granula", "package_url": "https://pypi.org/project/granula/", "platform": "", "project_url": "https://pypi.org/project/granula/", "project_urls": {"Homepage": "https://github.com/chomechome/granula"}, "release_url": "https://pypi.org/project/granula/2018.2.8/", "requires_dist": ["attrdict", "pyyaml", "enum34; python_version < \"3.4\""], "requires_python": "", "summary": "Multi-file Configurations for Python Applications", "version": "2018.2.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/granula\" rel=\"nofollow\"><img alt=\"Package version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec678237816fabc234d98ebaa19ab16add5c139f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6772616e756c612e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/granula\" rel=\"nofollow\"><img alt=\"Package license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64a41991556e20eb024ca88e55ba6227b1ce1163/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6772616e756c612e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/granula\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9cc40baa5ad7fb5b7feb77987bbbe81fd6feda4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6772616e756c612e737667\"></a>\n<a href=\"https://travis-ci.org/chomechome/granula\" rel=\"nofollow\"><img alt=\"TravisCI status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8a2a68b3213721c68bd46b64d4d0d074fed89c7/68747470733a2f2f7472617669732d63692e6f72672f63686f6d6563686f6d652f6772616e756c612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/github/chomechome/granula\" rel=\"nofollow\"><img alt=\"Code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a09b7457d3c28f888e5165cc34d225d8ac518a8/68747470733a2f2f636f6465636f762e696f2f6769746875622f63686f6d6563686f6d652f6772616e756c612f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a>\n<hr class=\"docutils\">\n<p><strong>Granula</strong> is a tool that aims to help maintain multi-file configurations for\nPython applications (with environments and more).</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pipenv install granula\n</pre>\n<p>or just use pip (though you should definitely take a look at <a href=\"https://pipenv.readthedocs.io/en/latest/\" rel=\"nofollow\">pipenv</a>)</p>\n<p>\ud83c\udf08\ud83c\udf08\ud83c\udf08</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Gathers configurations from multiple files or directories.</li>\n<li>Supports widely used file formats (YAML, JSON).</li>\n<li>Offers a small DSL that allows to load environment variables into config files.</li>\n<li>Manages different configuration environments (e.g. testing, production).</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create a config object from a directory with multiple configuration files:</p>\n<pre><span class=\"o\">&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">granula</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">from_directory</span><span class=\"p\">(</span><span class=\"s1\">'examples/multi-file/settings'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">config</span>\n<span class=\"n\">Config</span><span class=\"p\">({</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Darth Vader'</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"s1\">'Darth Vader'</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">family</span>\n<span class=\"n\">Config</span><span class=\"p\">({</span><span class=\"s1\">'fiancee'</span><span class=\"p\">:</span> <span class=\"s1\">'Padme Amidala'</span><span class=\"p\">,</span> <span class=\"s1\">'children'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'Luke Skywalker'</span><span class=\"p\">,</span> <span class=\"s1\">'Leia Organa'</span><span class=\"p\">]})</span>\n</pre>\n<p>Files are parsed in lexicographic order. The values specified in the preceding files can be overwritten in the succeeding files.</p>\n<p>Do the same in a recursive manner:</p>\n<pre><span class=\"o\">&gt;&gt;</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">from_directory</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Match YAML files using filename pattern:</p>\n<pre><span class=\"o\">&gt;&gt;</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">from_directory</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">Extension</span><span class=\"p\">(</span><span class=\"s1\">'yaml'</span><span class=\"p\">))</span>\n</pre>\n<p>Do the same with a shell-style wildcard pattern:</p>\n<pre><span class=\"o\">&gt;&gt;</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">from_directory</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">Wildcard</span><span class=\"p\">(</span><span class=\"s1\">'*.yaml'</span><span class=\"p\">))</span>\n</pre>\n<p>Match configuration files for different environments:</p>\n<pre><span class=\"o\">&gt;&gt;</span> <span class=\"n\">directory</span> <span class=\"o\">=</span> <span class=\"s1\">'examples/environments/settings'</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">testing</span> <span class=\"o\">=</span> <span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">from_directory</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">,</span> <span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">Environment</span><span class=\"p\">(</span><span class=\"s1\">'testing'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">production</span> <span class=\"o\">=</span> <span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">from_directory</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">,</span> <span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">Environment</span><span class=\"p\">(</span><span class=\"s1\">'production'</span><span class=\"p\">))</span>\n</pre>\n<p>Combine patterns in arbitrary ways:</p>\n<pre><span class=\"o\">&gt;&gt;</span> <span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">All</span><span class=\"p\">(</span><span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">Environment</span><span class=\"p\">(</span><span class=\"s1\">'testing'</span><span class=\"p\">),</span> <span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">Extension</span><span class=\"p\">(</span><span class=\"s1\">'yaml'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">granula</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">from_directory</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"n\">pattern</span><span class=\"p\">)</span>\n</pre>\n<p>Load environment variables into config files using a DSL, for example, in YAML:</p>\n<pre>variable: ${env VARIABLE}\n</pre>\n<p>Do the same with a default value:</p>\n<pre>variable: ${env VARIABLE | val 10}\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3622823, "releases": {"2018.2.8": [{"comment_text": "", "digests": {"md5": "5f430c3a1c32f3e33768f6eaf339506a", "sha256": "0414111c511ddb30fecb1cdc458862f73075dda3591821a32d62c5ae0c928ac4"}, "downloads": -1, "filename": "granula-2018.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "5f430c3a1c32f3e33768f6eaf339506a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26530, "upload_time": "2018-02-27T19:37:39", "upload_time_iso_8601": "2018-02-27T19:37:39.429815Z", "url": "https://files.pythonhosted.org/packages/ed/b6/98a44a2c6bcde90d4255e2b7881b92b21c2a3adc2ee9902dc1d3bed33e44/granula-2018.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd8b9055dd9e5511a6d218fbfdea8dfd", "sha256": "195e49368934710b1ac9b62df0d72504d90ff0915eb32e35171e70ff67aeacc1"}, "downloads": -1, "filename": "granula-2018.2.8.tar.gz", "has_sig": false, "md5_digest": "bd8b9055dd9e5511a6d218fbfdea8dfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16656, "upload_time": "2018-02-27T19:37:41", "upload_time_iso_8601": "2018-02-27T19:37:41.221200Z", "url": "https://files.pythonhosted.org/packages/9f/11/2216c2e4062e907d009d5316a524d5a3d5f1c2ead2d490fb6e02d66a3ed9/granula-2018.2.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f430c3a1c32f3e33768f6eaf339506a", "sha256": "0414111c511ddb30fecb1cdc458862f73075dda3591821a32d62c5ae0c928ac4"}, "downloads": -1, "filename": "granula-2018.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "5f430c3a1c32f3e33768f6eaf339506a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26530, "upload_time": "2018-02-27T19:37:39", "upload_time_iso_8601": "2018-02-27T19:37:39.429815Z", "url": "https://files.pythonhosted.org/packages/ed/b6/98a44a2c6bcde90d4255e2b7881b92b21c2a3adc2ee9902dc1d3bed33e44/granula-2018.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd8b9055dd9e5511a6d218fbfdea8dfd", "sha256": "195e49368934710b1ac9b62df0d72504d90ff0915eb32e35171e70ff67aeacc1"}, "downloads": -1, "filename": "granula-2018.2.8.tar.gz", "has_sig": false, "md5_digest": "bd8b9055dd9e5511a6d218fbfdea8dfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16656, "upload_time": "2018-02-27T19:37:41", "upload_time_iso_8601": "2018-02-27T19:37:41.221200Z", "url": "https://files.pythonhosted.org/packages/9f/11/2216c2e4062e907d009d5316a524d5a3d5f1c2ead2d490fb6e02d66a3ed9/granula-2018.2.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:49 2020"}