{"info": {"author": "Martin B\u00fchrer, Felix Eichenberger", "author_email": "info@gyrotools.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# gtagora-connector [![Build Status](https://travis-ci.org/gyrofx/gtagora-connector-py.svg?branch=master)](https://travis-ci.org/gyrofx/gtagora-connector-py)\n\ngtagora-connector is a python library to access GyroTools' Agora system.\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install gtagora-connector.\n\n```bash\npip install gtagora-connector\n```\n\nCurrently gtagora-connector supports python 3.6 and 3.7.\n\n## Basic usage\n\n```python\nfrom gtagora import Agora\nfrom gtagora.models.dataset import DatasetType\n\nserver = '<AGORA SERVER>'\napi_key = '<YOUR_API_KEY>'\n\nagora = Agora.create(server, api_key)\n\nroot_folder = agora.get_root_folder()\nsubfolders = root_folder.get_folders()\nfor s in subfolders:\n    print(f' - {s.name}')\n\nnew_folder = root_folder.get_or_create('New Folder')\n\nexams = agora.get_exam_list(filters={'name': 'Wrist'})\nif exams:\n    exam = exams[0]\n    for s in exam.get_series():\n        print(f'Series: {s.name}')\n\n        for dataset in s.get_datasets(filters={'type': DatasetType.PHILIPS_RAW}):\n            for datafile in dataset.get_datafiles():\n                print(f'{datafile.original_filename}')\n\nagora.import_data('/path/to/directroy', new_folder)\n```\n\n## Examples\n\n### Create an Agora instance\n\n\n```python\nfrom gtagora import Agora\n\nagora = Agora.create('https://your.agora.domain.com', user='test', password='test')\n```\n\nSince, it is not recommended to ever write down your password in plain text, Agora offers the possibility to connect with an API key. \nThe API key can be activated in your Agora profile, and is a random UUID which can be withdrawn or recreated easily.\n\n\n```python\nfrom gtagora import Agora\n\nagora = Agora.create('https://your.agora.domain.com', api_key='<YOUR_API_KEY>')\n```\n\n### Working with folders\n\nGet the root folder of the current user:\n\n```python\nroot_folder = agora.get_root_folder()\nprint(f\"Root folder ID: {root_folder.id}\")\n```\n\nGet a folder by its ID\n\n```python\nfolder = agora.get_folder(45)\nprint(f\"Folder with ID {folder.name}\")\n```\n\nGet sub folders\n\n```python\nsubfolders = folder.get_folders()\nfor f in subfolders:\n    print(f\" - {f.name}\")\n```\n\nGet a subfolder folder by name. None will be returned if the folder does not exist\n\n```python\nmy_folder = folder.get_folder('my_folder')\n```\n\n\nThe get_folder function also takes a relative path.\n\n```python\nmy_folder = folder.get_folder('../../data/my_folder')\n```\n\nCreate a new folder in the root folder (the new folder object is returned). An exception is thrown if a folder with the same name already exists.\n\n```python\nnew_folder = root_folder.create_folder('TestFolder')\nprint(f\"New folder ID: {new_folder.id}\")\n```\n\nGet a folder or create a new one if it does not exist\n\n```python\nnew_or_existing_folder = root_folder.get_or_create('TestFolder')\n```\n\nDelete a folder. Delete a folder is recursive. It deletes all items. The delete operation does not follow links.\n\n```python\nfolder.delete()\n```\n\n\nGet all items of a folder. An item could for example be an exam, series or dataset\n\n```python\nitems = folder.get_items()\nfor item in items:\n    print(f\" - {item}\")\n```\n\nGet all exams of a folder. Use the recursive parameter to also get the exams in all subfolders \n\n```python\nexams = folder.get_exams(recursive=False)\nfor exam in exams:\n    print(f\" - {exam}\")\n```\n\nGet all datasets of a folder. Use the recursive parameter to also get the exams in all subfolders \n\n```python\ndatasets = folder.get_datasets(recursive=False)\n```\n\nGet a dataset by name. None is returned if the dataset does not exist\n\n```python\ndataset = folder.get_dataset('my_dataset')\n```\n\nGet the path of a folder within Agora (breadcrumb) \n\n```python\nfolder = agora.get_folder(45)\nbreadcrumb = folder.get_breadcrumb()\n```\n\n### Working with Agora objects\n\nGet the list of exams\n\n```python\nexams = agora.get_exam_list()\n```\n\nGet an exam by ID\n\n```python\nexam = agora.get_exam(12)\n```\n\nLink the first Exam to the a folder\n\n```python\nexam_item = exam.link_to_folder(folder.id)\n```\n\nDelete the link of an exam (doesn't delete the Exam itself)\n\n```python\nexam_item.delete()\n```\n\nGet all series of an exam and then all datasets of the first series\n\n```python\nseries = exam.get_series()\ndatasets = series[0].get_datasets()\n```\n\nGet all datasets of an exam \n\n```python\nseries = exam.get_datasets()\n```\n\nGet a list of all patients\n\n```python\npatients = agora.get_patients()\n```\n\nGet a patient by ID\n\n```python\npatient = agora.get_patient(15)\n```\n\nGet a series or dataset by ID\n\n```python\nseries = agora.get_series(76)\ndataset = agora.get_dataset(158)\n```\n\n### Download data\n\nDownload all data from a folder \n\n```python\nfrom pathlib import Path\n\ntarget = Path(\"c:/temp\")\ndownloaded_files = folder.download(target, recursive=False)\nfor f in downloaded_files:\n    print(str(f))\n```\n\nExams, series and datasets also have a download function\n\n```python\ndownloaded_files = exam.download(target)\ndownloaded_files = series.download(target)\ndownloaded_files = dataset.download(target)\n```\n\n### Import data\n\nUpload files into a folder\n\n```python\nfrom pathlib import Path\n\nfolder = agora.get_folder(45)\nfile1 = Path('C:/images/test1.jpg')\nfile2 = Path('C:/images/test2.jpg')\nfolder.upload([file1, file2])\n```\n\nUpload a whole folder structure\n\n```python\nfrom pathlib import Path\n\nfolder = agora.get_folder(45)\ndata = Path('C:/data/my_folder')\nfolder.upload([data])\n```\n\n### Working with tasks\n\nGet all tasks visible to the current user:\n\n```python\ntasks = agora.get_tasks()\n```\n\nGet a task by ID\n\n```python\ntask = agora.get_task(13)\n```\n\nRun a task. <br/>\nIn this example the task has 2 inputs:\n\n- A dataset with key \"ds\"\n- An integer number with key \"size\"\n\nThe last line in the code sample waits for the task to finish\n```python\ntask = agora.get_task(13)\ntarget_folder = agora.get_folder(24)\ndataset = agora.get_dataset(57)\ntaskinfo = task.run(target=target_folder, ds=dataset, size=1024)\ntaskinfo.join()\n```\n\nalternatively only the ID's of the Agora objects can be given as argument:\n```python\ntaskinfo = task.run(target=target_folder, ds=23, size=1024)\n```\n\nthe syntax to run the task can be printed to the console with the syntax function:\n```python\ntask.syntax()\n```\n\n\nSave a task after it has been modified\n\n```python\ntask = agora.get_task(13)\ntask.name = 'new_name'\ntask.save()\n```\n\nDelete a task\n\n```python\ntask.delete()\n```\n\nExport all tasks into a json file\n\n```python\nagora.export_tasks('<output file>.json')\n```\n\nImport tasks from file (Experimental!)\n\n```python\nagora.import_tasks('<input file>.json')\n```\n\n### Working with parameters\n\nGet a parameter by name\n\n```python\ndataset = agora.get_dataset(13)\nparameter = dataset.get_parameter('EX_ACQ_echoes')\nif not parameter.is_array:\n    value = parameter.values[0]\nelse:\n    value = parameter.values\n```\n\nSearch for parameters\n\n```python\ndataset = agora.get_dataset(13)\nparameters = dataset.search_parameter('EX_ACQ_')\nprint(f'{len(parameters)} parameters found')\n```\n\n\n### Users and sharing\n\nGet the current user\n\n```python\ncurrent_user = agora.get_current_user()\n```\n\nGet all users\n\n```python\nusers = agora.get_users()\n```\n\nGet all user groups\n\n```python\nusers = agora.get_groups()\n```\n\nShare a folder with a user\n\n```python\nfrom gtagora.models.share import ShareLevel\n\nusers = agora.get_users()\nfolder = agora.get_folder(2417)\nresponse = folder.share(users[0].id, None, ShareLevel.ORGANIZE)\n```\n\n### Various\n\nEmpty the trash\n\n```python\nagora.empty_trash()\n```\n\nThe members of any Agora object can be printed to the console with the display function\n```python\nexam = agora.get_exam(22)\nexam.display()\n\nfolder = agora.get_folder(15)\nfolder.display()\n```\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gyrotools/gtagora", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gtagora-connector", "package_url": "https://pypi.org/project/gtagora-connector/", "platform": "", "project_url": "https://pypi.org/project/gtagora-connector/", "project_urls": {"Homepage": "https://github.com/gyrotools/gtagora"}, "release_url": "https://pypi.org/project/gtagora-connector/0.1.7/", "requires_dist": ["requests (>=2.0)"], "requires_python": ">=3.6.0", "summary": "The Agora Connector for Python", "version": "0.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>gtagora-connector <a href=\"https://travis-ci.org/gyrofx/gtagora-connector-py\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e101d58fa60a41f5a6da5a35edd14eb9e45f005f/68747470733a2f2f7472617669732d63692e6f72672f6779726f66782f677461676f72612d636f6e6e6563746f722d70792e7376673f6272616e63683d6d6173746572\"></a></h1>\n<p>gtagora-connector is a python library to access GyroTools' Agora system.</p>\n<h2>Installation</h2>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install gtagora-connector.</p>\n<pre>pip install gtagora-connector\n</pre>\n<p>Currently gtagora-connector supports python 3.6 and 3.7.</p>\n<h2>Basic usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gtagora</span> <span class=\"kn\">import</span> <span class=\"n\">Agora</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gtagora.models.dataset</span> <span class=\"kn\">import</span> <span class=\"n\">DatasetType</span>\n\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;AGORA SERVER&gt;'</span>\n<span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;YOUR_API_KEY&gt;'</span>\n\n<span class=\"n\">agora</span> <span class=\"o\">=</span> <span class=\"n\">Agora</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"p\">)</span>\n\n<span class=\"n\">root_folder</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_root_folder</span><span class=\"p\">()</span>\n<span class=\"n\">subfolders</span> <span class=\"o\">=</span> <span class=\"n\">root_folder</span><span class=\"o\">.</span><span class=\"n\">get_folders</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">subfolders</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">' - </span><span class=\"si\">{</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"n\">new_folder</span> <span class=\"o\">=</span> <span class=\"n\">root_folder</span><span class=\"o\">.</span><span class=\"n\">get_or_create</span><span class=\"p\">(</span><span class=\"s1\">'New Folder'</span><span class=\"p\">)</span>\n\n<span class=\"n\">exams</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_exam_list</span><span class=\"p\">(</span><span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Wrist'</span><span class=\"p\">})</span>\n<span class=\"k\">if</span> <span class=\"n\">exams</span><span class=\"p\">:</span>\n    <span class=\"n\">exam</span> <span class=\"o\">=</span> <span class=\"n\">exams</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">exam</span><span class=\"o\">.</span><span class=\"n\">get_series</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Series: </span><span class=\"si\">{</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">dataset</span> <span class=\"ow\">in</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get_datasets</span><span class=\"p\">(</span><span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"n\">DatasetType</span><span class=\"o\">.</span><span class=\"n\">PHILIPS_RAW</span><span class=\"p\">}):</span>\n            <span class=\"k\">for</span> <span class=\"n\">datafile</span> <span class=\"ow\">in</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">get_datafiles</span><span class=\"p\">():</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">datafile</span><span class=\"o\">.</span><span class=\"n\">original_filename</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">import_data</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/directroy'</span><span class=\"p\">,</span> <span class=\"n\">new_folder</span><span class=\"p\">)</span>\n</pre>\n<h2>Examples</h2>\n<h3>Create an Agora instance</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gtagora</span> <span class=\"kn\">import</span> <span class=\"n\">Agora</span>\n\n<span class=\"n\">agora</span> <span class=\"o\">=</span> <span class=\"n\">Agora</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s1\">'https://your.agora.domain.com'</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n<p>Since, it is not recommended to ever write down your password in plain text, Agora offers the possibility to connect with an API key.\nThe API key can be activated in your Agora profile, and is a random UUID which can be withdrawn or recreated easily.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gtagora</span> <span class=\"kn\">import</span> <span class=\"n\">Agora</span>\n\n<span class=\"n\">agora</span> <span class=\"o\">=</span> <span class=\"n\">Agora</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s1\">'https://your.agora.domain.com'</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;YOUR_API_KEY&gt;'</span><span class=\"p\">)</span>\n</pre>\n<h3>Working with folders</h3>\n<p>Get the root folder of the current user:</p>\n<pre><span class=\"n\">root_folder</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_root_folder</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Root folder ID: </span><span class=\"si\">{</span><span class=\"n\">root_folder</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p>Get a folder by its ID</p>\n<pre><span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_folder</span><span class=\"p\">(</span><span class=\"mi\">45</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Folder with ID </span><span class=\"si\">{</span><span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p>Get sub folders</p>\n<pre><span class=\"n\">subfolders</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">get_folders</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">subfolders</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\" - </span><span class=\"si\">{</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p>Get a subfolder folder by name. None will be returned if the folder does not exist</p>\n<pre><span class=\"n\">my_folder</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">get_folder</span><span class=\"p\">(</span><span class=\"s1\">'my_folder'</span><span class=\"p\">)</span>\n</pre>\n<p>The get_folder function also takes a relative path.</p>\n<pre><span class=\"n\">my_folder</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">get_folder</span><span class=\"p\">(</span><span class=\"s1\">'../../data/my_folder'</span><span class=\"p\">)</span>\n</pre>\n<p>Create a new folder in the root folder (the new folder object is returned). An exception is thrown if a folder with the same name already exists.</p>\n<pre><span class=\"n\">new_folder</span> <span class=\"o\">=</span> <span class=\"n\">root_folder</span><span class=\"o\">.</span><span class=\"n\">create_folder</span><span class=\"p\">(</span><span class=\"s1\">'TestFolder'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"New folder ID: </span><span class=\"si\">{</span><span class=\"n\">new_folder</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p>Get a folder or create a new one if it does not exist</p>\n<pre><span class=\"n\">new_or_existing_folder</span> <span class=\"o\">=</span> <span class=\"n\">root_folder</span><span class=\"o\">.</span><span class=\"n\">get_or_create</span><span class=\"p\">(</span><span class=\"s1\">'TestFolder'</span><span class=\"p\">)</span>\n</pre>\n<p>Delete a folder. Delete a folder is recursive. It deletes all items. The delete operation does not follow links.</p>\n<pre><span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n</pre>\n<p>Get all items of a folder. An item could for example be an exam, series or dataset</p>\n<pre><span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">get_items</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">items</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\" - </span><span class=\"si\">{</span><span class=\"n\">item</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p>Get all exams of a folder. Use the recursive parameter to also get the exams in all subfolders</p>\n<pre><span class=\"n\">exams</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">get_exams</span><span class=\"p\">(</span><span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">exam</span> <span class=\"ow\">in</span> <span class=\"n\">exams</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\" - </span><span class=\"si\">{</span><span class=\"n\">exam</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p>Get all datasets of a folder. Use the recursive parameter to also get the exams in all subfolders</p>\n<pre><span class=\"n\">datasets</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">get_datasets</span><span class=\"p\">(</span><span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Get a dataset by name. None is returned if the dataset does not exist</p>\n<pre><span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">get_dataset</span><span class=\"p\">(</span><span class=\"s1\">'my_dataset'</span><span class=\"p\">)</span>\n</pre>\n<p>Get the path of a folder within Agora (breadcrumb)</p>\n<pre><span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_folder</span><span class=\"p\">(</span><span class=\"mi\">45</span><span class=\"p\">)</span>\n<span class=\"n\">breadcrumb</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">get_breadcrumb</span><span class=\"p\">()</span>\n</pre>\n<h3>Working with Agora objects</h3>\n<p>Get the list of exams</p>\n<pre><span class=\"n\">exams</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_exam_list</span><span class=\"p\">()</span>\n</pre>\n<p>Get an exam by ID</p>\n<pre><span class=\"n\">exam</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_exam</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n</pre>\n<p>Link the first Exam to the a folder</p>\n<pre><span class=\"n\">exam_item</span> <span class=\"o\">=</span> <span class=\"n\">exam</span><span class=\"o\">.</span><span class=\"n\">link_to_folder</span><span class=\"p\">(</span><span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n</pre>\n<p>Delete the link of an exam (doesn't delete the Exam itself)</p>\n<pre><span class=\"n\">exam_item</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n</pre>\n<p>Get all series of an exam and then all datasets of the first series</p>\n<pre><span class=\"n\">series</span> <span class=\"o\">=</span> <span class=\"n\">exam</span><span class=\"o\">.</span><span class=\"n\">get_series</span><span class=\"p\">()</span>\n<span class=\"n\">datasets</span> <span class=\"o\">=</span> <span class=\"n\">series</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get_datasets</span><span class=\"p\">()</span>\n</pre>\n<p>Get all datasets of an exam</p>\n<pre><span class=\"n\">series</span> <span class=\"o\">=</span> <span class=\"n\">exam</span><span class=\"o\">.</span><span class=\"n\">get_datasets</span><span class=\"p\">()</span>\n</pre>\n<p>Get a list of all patients</p>\n<pre><span class=\"n\">patients</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_patients</span><span class=\"p\">()</span>\n</pre>\n<p>Get a patient by ID</p>\n<pre><span class=\"n\">patient</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_patient</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">)</span>\n</pre>\n<p>Get a series or dataset by ID</p>\n<pre><span class=\"n\">series</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_series</span><span class=\"p\">(</span><span class=\"mi\">76</span><span class=\"p\">)</span>\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_dataset</span><span class=\"p\">(</span><span class=\"mi\">158</span><span class=\"p\">)</span>\n</pre>\n<h3>Download data</h3>\n<p>Download all data from a folder</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s2\">\"c:/temp\"</span><span class=\"p\">)</span>\n<span class=\"n\">downloaded_files</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">downloaded_files</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">))</span>\n</pre>\n<p>Exams, series and datasets also have a download function</p>\n<pre><span class=\"n\">downloaded_files</span> <span class=\"o\">=</span> <span class=\"n\">exam</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">)</span>\n<span class=\"n\">downloaded_files</span> <span class=\"o\">=</span> <span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">)</span>\n<span class=\"n\">downloaded_files</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">)</span>\n</pre>\n<h3>Import data</h3>\n<p>Upload files into a folder</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_folder</span><span class=\"p\">(</span><span class=\"mi\">45</span><span class=\"p\">)</span>\n<span class=\"n\">file1</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'C:/images/test1.jpg'</span><span class=\"p\">)</span>\n<span class=\"n\">file2</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'C:/images/test2.jpg'</span><span class=\"p\">)</span>\n<span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">upload</span><span class=\"p\">([</span><span class=\"n\">file1</span><span class=\"p\">,</span> <span class=\"n\">file2</span><span class=\"p\">])</span>\n</pre>\n<p>Upload a whole folder structure</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_folder</span><span class=\"p\">(</span><span class=\"mi\">45</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'C:/data/my_folder'</span><span class=\"p\">)</span>\n<span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">upload</span><span class=\"p\">([</span><span class=\"n\">data</span><span class=\"p\">])</span>\n</pre>\n<h3>Working with tasks</h3>\n<p>Get all tasks visible to the current user:</p>\n<pre><span class=\"n\">tasks</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_tasks</span><span class=\"p\">()</span>\n</pre>\n<p>Get a task by ID</p>\n<pre><span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_task</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"p\">)</span>\n</pre>\n<p>Run a task. <br>\nIn this example the task has 2 inputs:</p>\n<ul>\n<li>A dataset with key \"ds\"</li>\n<li>An integer number with key \"size\"</li>\n</ul>\n<p>The last line in the code sample waits for the task to finish</p>\n<pre><span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_task</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"p\">)</span>\n<span class=\"n\">target_folder</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_folder</span><span class=\"p\">(</span><span class=\"mi\">24</span><span class=\"p\">)</span>\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_dataset</span><span class=\"p\">(</span><span class=\"mi\">57</span><span class=\"p\">)</span>\n<span class=\"n\">taskinfo</span> <span class=\"o\">=</span> <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">target_folder</span><span class=\"p\">,</span> <span class=\"n\">ds</span><span class=\"o\">=</span><span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">1024</span><span class=\"p\">)</span>\n<span class=\"n\">taskinfo</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span>\n</pre>\n<p>alternatively only the ID's of the Agora objects can be given as argument:</p>\n<pre><span class=\"n\">taskinfo</span> <span class=\"o\">=</span> <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">target_folder</span><span class=\"p\">,</span> <span class=\"n\">ds</span><span class=\"o\">=</span><span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">1024</span><span class=\"p\">)</span>\n</pre>\n<p>the syntax to run the task can be printed to the console with the syntax function:</p>\n<pre><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">syntax</span><span class=\"p\">()</span>\n</pre>\n<p>Save a task after it has been modified</p>\n<pre><span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_task</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"p\">)</span>\n<span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'new_name'</span>\n<span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<p>Delete a task</p>\n<pre><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n</pre>\n<p>Export all tasks into a json file</p>\n<pre><span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">export_tasks</span><span class=\"p\">(</span><span class=\"s1\">'&lt;output file&gt;.json'</span><span class=\"p\">)</span>\n</pre>\n<p>Import tasks from file (Experimental!)</p>\n<pre><span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">import_tasks</span><span class=\"p\">(</span><span class=\"s1\">'&lt;input file&gt;.json'</span><span class=\"p\">)</span>\n</pre>\n<h3>Working with parameters</h3>\n<p>Get a parameter by name</p>\n<pre><span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_dataset</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"p\">)</span>\n<span class=\"n\">parameter</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">get_parameter</span><span class=\"p\">(</span><span class=\"s1\">'EX_ACQ_echoes'</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">parameter</span><span class=\"o\">.</span><span class=\"n\">is_array</span><span class=\"p\">:</span>\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">parameter</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">parameter</span><span class=\"o\">.</span><span class=\"n\">values</span>\n</pre>\n<p>Search for parameters</p>\n<pre><span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_dataset</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"p\">)</span>\n<span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">search_parameter</span><span class=\"p\">(</span><span class=\"s1\">'EX_ACQ_'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s1\"> parameters found'</span><span class=\"p\">)</span>\n</pre>\n<h3>Users and sharing</h3>\n<p>Get the current user</p>\n<pre><span class=\"n\">current_user</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_current_user</span><span class=\"p\">()</span>\n</pre>\n<p>Get all users</p>\n<pre><span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_users</span><span class=\"p\">()</span>\n</pre>\n<p>Get all user groups</p>\n<pre><span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_groups</span><span class=\"p\">()</span>\n</pre>\n<p>Share a folder with a user</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gtagora.models.share</span> <span class=\"kn\">import</span> <span class=\"n\">ShareLevel</span>\n\n<span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_users</span><span class=\"p\">()</span>\n<span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_folder</span><span class=\"p\">(</span><span class=\"mi\">2417</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">share</span><span class=\"p\">(</span><span class=\"n\">users</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">ShareLevel</span><span class=\"o\">.</span><span class=\"n\">ORGANIZE</span><span class=\"p\">)</span>\n</pre>\n<h3>Various</h3>\n<p>Empty the trash</p>\n<pre><span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">empty_trash</span><span class=\"p\">()</span>\n</pre>\n<p>The members of any Agora object can be printed to the console with the display function</p>\n<pre><span class=\"n\">exam</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_exam</span><span class=\"p\">(</span><span class=\"mi\">22</span><span class=\"p\">)</span>\n<span class=\"n\">exam</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">()</span>\n\n<span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"n\">agora</span><span class=\"o\">.</span><span class=\"n\">get_folder</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">()</span>\n</pre>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<p>Please make sure to update tests as appropriate.</p>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6652119, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "52894be4c3a51e155e542e58698ffd62", "sha256": "8bf5bbf77e1ab386369856151f91327ffc84d43546e1f6b0cb09cc3dac40f6bc"}, "downloads": -1, "filename": "gtagora_connector-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "52894be4c3a51e155e542e58698ffd62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 26450, "upload_time": "2019-11-21T10:12:40", "upload_time_iso_8601": "2019-11-21T10:12:40.801330Z", "url": "https://files.pythonhosted.org/packages/09/85/28a717ee2d563be027b8f08c71b1f78b6c4eef8daf249be635cc1b7df13d/gtagora_connector-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4eb21cf5beb2399f7429d0f71aea85ea", "sha256": "72b71a4befe9a280dfbf35f9dc7af3c035381cfbd0c5e5b6e663db64a7474f89"}, "downloads": -1, "filename": "gtagora-connector-0.0.10.tar.gz", "has_sig": false, "md5_digest": "4eb21cf5beb2399f7429d0f71aea85ea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 19216, "upload_time": "2019-11-21T10:12:42", "upload_time_iso_8601": "2019-11-21T10:12:42.658777Z", "url": "https://files.pythonhosted.org/packages/f5/81/f642cf45d989b36847d402372717a9c1b6993f95d04732873b0d7223a56f/gtagora-connector-0.0.10.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "452e803ba3c288b62865dc3f96e4db58", "sha256": "145acf22c5a5401ffdd36b11b02af27a2a7c21e7937b9d1ec59b1a40348bf827"}, "downloads": -1, "filename": "gtagora_connector-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "452e803ba3c288b62865dc3f96e4db58", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 18757, "upload_time": "2019-02-27T15:34:51", "upload_time_iso_8601": "2019-02-27T15:34:51.194196Z", "url": "https://files.pythonhosted.org/packages/ad/96/ccbd8269aa604d2044c08ab98f24c9ccee5aee66e63b255832be8d146af3/gtagora_connector-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8ca6e98993e64d1c14a927f117e266c", "sha256": "9abcfc4e716386310af8ba912c1542c9078b6547d20e53765f416d9884aeb2f5"}, "downloads": -1, "filename": "gtagora-connector-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f8ca6e98993e64d1c14a927f117e266c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 9300, "upload_time": "2019-02-27T15:34:53", "upload_time_iso_8601": "2019-02-27T15:34:53.403978Z", "url": "https://files.pythonhosted.org/packages/6b/73/842fec86e7eb7657c409cee2e248c30dee70fc98ff35a32016da105645aa/gtagora-connector-0.0.2.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "2d2603a929eeb7b289dfc061dc20f2ed", "sha256": "bbc2d3b6f4bbc21f8dc6752043c99ebaa76127837bc6e4276c5ac1520304b2fe"}, "downloads": -1, "filename": "gtagora_connector-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2d2603a929eeb7b289dfc061dc20f2ed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 22602, "upload_time": "2019-05-09T07:44:05", "upload_time_iso_8601": "2019-05-09T07:44:05.017471Z", "url": "https://files.pythonhosted.org/packages/ec/96/56d39d83c18e4a11b29e884802614940b711405d380142858b51c4ab3750/gtagora_connector-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8a28ba4e2243a23b1c804efe3b7a1b8", "sha256": "def70268fb12dbfd0227083396ad6187e6c92b37541597127b503f6d1b38b1c2"}, "downloads": -1, "filename": "gtagora-connector-0.0.4.tar.gz", "has_sig": false, "md5_digest": "c8a28ba4e2243a23b1c804efe3b7a1b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 13271, "upload_time": "2019-05-09T07:44:06", "upload_time_iso_8601": "2019-05-09T07:44:06.533047Z", "url": "https://files.pythonhosted.org/packages/9f/c8/943026855c877be1e17445d8badb788161cc8245906aa4703e2d5096c0e8/gtagora-connector-0.0.4.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "bedbb057a1ba0b569a81334309097602", "sha256": "97780f28046e873d5aa00ca0c637bd9b42adafc1f3584b913d567161404bbaea"}, "downloads": -1, "filename": "gtagora_connector-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "bedbb057a1ba0b569a81334309097602", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 24696, "upload_time": "2019-06-07T10:04:33", "upload_time_iso_8601": "2019-06-07T10:04:33.474022Z", "url": "https://files.pythonhosted.org/packages/3a/99/fe54350911631adb0d04026482ba43f75ea10014be8291458995fa5a8151/gtagora_connector-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "384a4efe67f155153e6b8c82d62c4419", "sha256": "10a824aad71fae77db861c07f02ca610d0ef7af708787ac90e70acb996dd6be3"}, "downloads": -1, "filename": "gtagora-connector-0.0.6.tar.gz", "has_sig": false, "md5_digest": "384a4efe67f155153e6b8c82d62c4419", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 16320, "upload_time": "2019-06-07T10:04:34", "upload_time_iso_8601": "2019-06-07T10:04:34.859526Z", "url": "https://files.pythonhosted.org/packages/d4/43/b4338e6818b9a3cab9189fbbeaf59f0e2369ac225d6722162367d2d39814/gtagora-connector-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "5bcf6a193c9cab0e7b982586df9bf7ed", "sha256": "c11d4488135a7ebf10ff419de676f42b63123f9b8e481493bc25ae6fbcf1e198"}, "downloads": -1, "filename": "gtagora_connector-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "5bcf6a193c9cab0e7b982586df9bf7ed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 24769, "upload_time": "2019-07-16T07:32:59", "upload_time_iso_8601": "2019-07-16T07:32:59.392036Z", "url": "https://files.pythonhosted.org/packages/46/4c/3102c03ffc1d702b5f85b411893cd9d91dc83783c2ebfbca57671cec2b36/gtagora_connector-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7f842bd6c103dc267580c547200ba34", "sha256": "2b3d44b33de4b9c08dc819609c86d98551f2cfb5963057bfa59fca3930ba693d"}, "downloads": -1, "filename": "gtagora-connector-0.0.7.tar.gz", "has_sig": false, "md5_digest": "c7f842bd6c103dc267580c547200ba34", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 16287, "upload_time": "2019-07-16T07:33:00", "upload_time_iso_8601": "2019-07-16T07:33:00.864798Z", "url": "https://files.pythonhosted.org/packages/b9/55/a2e5e6dc971d7d9f3706b5c8fc14785ad9f381eb6b608c1fa169f329a2ea/gtagora-connector-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "5b672793dd90b7fb6d37d38dbcc94de4", "sha256": "170d6b5ece40195ffe6d64c655406755776014fba23c456c196bbdf2863b5af6"}, "downloads": -1, "filename": "gtagora_connector-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "5b672793dd90b7fb6d37d38dbcc94de4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 25064, "upload_time": "2019-10-14T10:11:17", "upload_time_iso_8601": "2019-10-14T10:11:17.698778Z", "url": "https://files.pythonhosted.org/packages/e3/c5/fb8d434375e44855ab485a09182df706cf32f555273294c328822e9a3c09/gtagora_connector-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61d81940d14a6f357d9989d2dd76ab60", "sha256": "9c231a634d4e9fa56207332df18aa2737d4717ac982f1f8dbb269527ef243cec"}, "downloads": -1, "filename": "gtagora-connector-0.0.8.tar.gz", "has_sig": false, "md5_digest": "61d81940d14a6f357d9989d2dd76ab60", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 16504, "upload_time": "2019-10-14T10:11:19", "upload_time_iso_8601": "2019-10-14T10:11:19.446973Z", "url": "https://files.pythonhosted.org/packages/f3/cb/a09189ac89e5e6bab44e0c8420d5ae04b6dfbed7ed095c22f21b042f23e2/gtagora-connector-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "65f4789cb0913059d032fafdcaa8fa3e", "sha256": "ee706eb0c06d0781caa008e3c4bdf39a88c3c2eb4628f6a61ef3180638059529"}, "downloads": -1, "filename": "gtagora_connector-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "65f4789cb0913059d032fafdcaa8fa3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 25428, "upload_time": "2019-11-20T14:03:27", "upload_time_iso_8601": "2019-11-20T14:03:27.733721Z", "url": "https://files.pythonhosted.org/packages/10/4b/1159cc75467640670ec597c49438eba6484db0d7e4c2ae38ce5dd220ce10/gtagora_connector-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cfdc75337bdbcc5d41e538d074cea78", "sha256": "c8cc2b90053f8e6bed21cac75f0fc998be4d8eae24436634cbabd79eb3ea0d8f"}, "downloads": -1, "filename": "gtagora-connector-0.0.9.tar.gz", "has_sig": false, "md5_digest": "5cfdc75337bdbcc5d41e538d074cea78", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 16832, "upload_time": "2019-11-20T14:03:29", "upload_time_iso_8601": "2019-11-20T14:03:29.020225Z", "url": "https://files.pythonhosted.org/packages/47/42/beca36f8fe8e6c3530ae29326cb54f84a13fb7a757d2afe396a808a6b46d/gtagora-connector-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "1592a991f5837c687eef2e87821c5c23", "sha256": "00f0283357a6beca905de72fbfdfc0400caff3a5d3be8b5b989c53bf52661925"}, "downloads": -1, "filename": "gtagora_connector-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1592a991f5837c687eef2e87821c5c23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 26471, "upload_time": "2019-11-26T08:22:32", "upload_time_iso_8601": "2019-11-26T08:22:32.238790Z", "url": "https://files.pythonhosted.org/packages/a2/75/a41984cf5ccab95247d742037583d02f7731f9d13564da03f72854fba56a/gtagora_connector-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "617deb45341703b58278cb5dc9640e8f", "sha256": "573d37c07ef155d260c816fe92a6dbe902bdde86f3becedcd1de8e7dfb08791f"}, "downloads": -1, "filename": "gtagora-connector-0.1.0.tar.gz", "has_sig": false, "md5_digest": "617deb45341703b58278cb5dc9640e8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 19266, "upload_time": "2019-11-26T08:22:34", "upload_time_iso_8601": "2019-11-26T08:22:34.088794Z", "url": "https://files.pythonhosted.org/packages/05/5e/a68e3c3d80ad01f739667fcf691277b92333cd60667aca7c414cbbdc162f/gtagora-connector-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "904624f207be30a7da87cbc3efa28d22", "sha256": "4e0733bfeae98d8cf3f515a380bcfe9d109c471a2092a49e572c55ff1d8365c6"}, "downloads": -1, "filename": "gtagora_connector-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "904624f207be30a7da87cbc3efa28d22", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 26523, "upload_time": "2019-11-26T09:24:12", "upload_time_iso_8601": "2019-11-26T09:24:12.902065Z", "url": "https://files.pythonhosted.org/packages/9e/c0/f6fd640926d61c746aa71bc8ac592603bd204458720cd82f782659a34860/gtagora_connector-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b460e6822260f28bdd823bb3e2a04974", "sha256": "0e6ef005be656279a5e402eef867fb6eb2de03ad156d73f4cf9d80f724f35da5"}, "downloads": -1, "filename": "gtagora-connector-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b460e6822260f28bdd823bb3e2a04974", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 19327, "upload_time": "2019-11-26T09:24:14", "upload_time_iso_8601": "2019-11-26T09:24:14.464127Z", "url": "https://files.pythonhosted.org/packages/0b/19/4225f533dcd959d51a8c4c3d26a1866793b5142676cafabc2c10df16f7cb/gtagora-connector-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "22aaa2bee4f6ad547a3742ab4d9f70ed", "sha256": "1e8c8541535ea8ab921ec0bcfe96461cca780004d5b3bb656b9bbd358bcd8893"}, "downloads": -1, "filename": "gtagora_connector-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "22aaa2bee4f6ad547a3742ab4d9f70ed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 27508, "upload_time": "2019-11-28T10:01:10", "upload_time_iso_8601": "2019-11-28T10:01:10.033527Z", "url": "https://files.pythonhosted.org/packages/fe/1f/3909e901bdb384fe7463376d5add5cc926ff6cd5a85cb1fa369bbfa3ad01/gtagora_connector-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec6a1d32a7b274f5c34c2ee3fef71399", "sha256": "7531ce4f999f2b085f51319df4d8c6bf5504a6313a84b4c002e95ef73a46445d"}, "downloads": -1, "filename": "gtagora-connector-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ec6a1d32a7b274f5c34c2ee3fef71399", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 20520, "upload_time": "2019-11-28T10:01:11", "upload_time_iso_8601": "2019-11-28T10:01:11.760575Z", "url": "https://files.pythonhosted.org/packages/24/fc/a3eda136ee308be38d66bdb57edba94e8bd8ae2e44fbaa08b19e853611f8/gtagora-connector-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "589f65ff2b6411abd97ad94ed0c7412b", "sha256": "72c945488627732137dd88d5ed66ce95246a614dae69aa4e58de9d55349d104d"}, "downloads": -1, "filename": "gtagora_connector-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "589f65ff2b6411abd97ad94ed0c7412b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 27641, "upload_time": "2019-11-28T10:34:04", "upload_time_iso_8601": "2019-11-28T10:34:04.889722Z", "url": "https://files.pythonhosted.org/packages/f1/88/ef4e73d83fba3df7dfff826d8e1bcd5e375c610531c0e84b688928dffcfb/gtagora_connector-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "91c938e54f691782c6c0b071a6bb23fb", "sha256": "0b5acc906fbcb242395d26da3528a0ce37f001904ccf3d67d305859d30168324"}, "downloads": -1, "filename": "gtagora-connector-0.1.3.tar.gz", "has_sig": false, "md5_digest": "91c938e54f691782c6c0b071a6bb23fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 20681, "upload_time": "2019-11-28T10:34:07", "upload_time_iso_8601": "2019-11-28T10:34:07.617260Z", "url": "https://files.pythonhosted.org/packages/fc/ba/cdee5ff9f8c724044889ebfacf46b033c66e038ca11002707d898cdb9c58/gtagora-connector-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "f6cefb8a5f207fba4b3891a1c7db51bd", "sha256": "07a76c83957018ab8e357fb7a4ac493e31807923a9ebb2239fae93bd6f4165ff"}, "downloads": -1, "filename": "gtagora_connector-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f6cefb8a5f207fba4b3891a1c7db51bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 27770, "upload_time": "2019-11-28T12:29:18", "upload_time_iso_8601": "2019-11-28T12:29:18.336920Z", "url": "https://files.pythonhosted.org/packages/e4/12/d3d711bb24f9c8f09bc2ce5ee28d3025b61bcbfd0c665fa1f18e3e91c6d9/gtagora_connector-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24f4a5a8125150902a915602587187f6", "sha256": "e061f1c547bb88ba9d142ff5f4182bd77de7d093f005a751caf08458d676bb6f"}, "downloads": -1, "filename": "gtagora-connector-0.1.4.tar.gz", "has_sig": false, "md5_digest": "24f4a5a8125150902a915602587187f6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 20938, "upload_time": "2019-11-28T12:29:20", "upload_time_iso_8601": "2019-11-28T12:29:20.544170Z", "url": "https://files.pythonhosted.org/packages/94/59/5b53aff7997047daf46599f0fa63163111019288e8018f93cf6690df56f6/gtagora-connector-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "c4e8bababf7b4b1225191973c1881e88", "sha256": "7c15712b004927778a2556c659db6946e8918d031a3e1ed03c1d7892259bfb89"}, "downloads": -1, "filename": "gtagora_connector-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "c4e8bababf7b4b1225191973c1881e88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 28089, "upload_time": "2019-12-02T09:55:59", "upload_time_iso_8601": "2019-12-02T09:55:59.610225Z", "url": "https://files.pythonhosted.org/packages/d5/3c/0ef97ffe0020f0a0b5e7a1dbe3f8f97a52b546726d37373bc8f631867971/gtagora_connector-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7785326781377c6ea4c76e7e0005937b", "sha256": "f154e3bba929eedbee1b52d9245feb1f5c089e28d1774d0df405fe766c226ebc"}, "downloads": -1, "filename": "gtagora-connector-0.1.5.tar.gz", "has_sig": false, "md5_digest": "7785326781377c6ea4c76e7e0005937b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 21202, "upload_time": "2019-12-02T09:56:01", "upload_time_iso_8601": "2019-12-02T09:56:01.631780Z", "url": "https://files.pythonhosted.org/packages/c8/c4/bb43839fc072d8b6cf084fe172c67ddefa6e2d15245081fc147707ec55c2/gtagora-connector-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "e5f8f691656803ad4229489564d763dc", "sha256": "f896aa4ee0fca835b54205865e87779004fa4b7fcf6819fcd5f9e3adf1764040"}, "downloads": -1, "filename": "gtagora_connector-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "e5f8f691656803ad4229489564d763dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 28144, "upload_time": "2019-12-03T16:36:10", "upload_time_iso_8601": "2019-12-03T16:36:10.185677Z", "url": "https://files.pythonhosted.org/packages/01/d5/55d19bc9aaf4997bc9873f2fb545431556bfb17f1733585ad07d3d351adc/gtagora_connector-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa08283f769ddcde5a2b4b5999f2f097", "sha256": "2f1e4d17e37d490408f2af8c067b4a59fcd4dc4aa9cf98e26c1faace5ec724dc"}, "downloads": -1, "filename": "gtagora-connector-0.1.6.tar.gz", "has_sig": false, "md5_digest": "aa08283f769ddcde5a2b4b5999f2f097", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 21245, "upload_time": "2019-12-03T16:36:12", "upload_time_iso_8601": "2019-12-03T16:36:12.113818Z", "url": "https://files.pythonhosted.org/packages/d7/df/44ba72e4cc75aa6433cd63311c139f155235c9067f93c319784de73af74e/gtagora-connector-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "e76cec8cb97d2dbf77584102d44afaad", "sha256": "4622add0f2195de60e2a0becd8097fde1775b44e6abbde7dfe0d1f4415558da7"}, "downloads": -1, "filename": "gtagora_connector-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "e76cec8cb97d2dbf77584102d44afaad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 28166, "upload_time": "2020-02-18T09:53:46", "upload_time_iso_8601": "2020-02-18T09:53:46.379029Z", "url": "https://files.pythonhosted.org/packages/78/e8/571ad6592e658995b87628a86e93408fdc642e557354c34ee1153dfe1c8e/gtagora_connector-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0bacb1abdaf9825b3bd501cf5ccd5f1", "sha256": "5edce16eb8242265658b698362f403c80c6d293b9cc8e883e1bb8f96ab29c362"}, "downloads": -1, "filename": "gtagora-connector-0.1.7.tar.gz", "has_sig": false, "md5_digest": "d0bacb1abdaf9825b3bd501cf5ccd5f1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 21288, "upload_time": "2020-02-18T09:53:47", "upload_time_iso_8601": "2020-02-18T09:53:47.924073Z", "url": "https://files.pythonhosted.org/packages/59/7a/8f95ed7c2746a35092202349c05b3c2a490798c598ed72b63a20909314a5/gtagora-connector-0.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e76cec8cb97d2dbf77584102d44afaad", "sha256": "4622add0f2195de60e2a0becd8097fde1775b44e6abbde7dfe0d1f4415558da7"}, "downloads": -1, "filename": "gtagora_connector-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "e76cec8cb97d2dbf77584102d44afaad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 28166, "upload_time": "2020-02-18T09:53:46", "upload_time_iso_8601": "2020-02-18T09:53:46.379029Z", "url": "https://files.pythonhosted.org/packages/78/e8/571ad6592e658995b87628a86e93408fdc642e557354c34ee1153dfe1c8e/gtagora_connector-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0bacb1abdaf9825b3bd501cf5ccd5f1", "sha256": "5edce16eb8242265658b698362f403c80c6d293b9cc8e883e1bb8f96ab29c362"}, "downloads": -1, "filename": "gtagora-connector-0.1.7.tar.gz", "has_sig": false, "md5_digest": "d0bacb1abdaf9825b3bd501cf5ccd5f1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 21288, "upload_time": "2020-02-18T09:53:47", "upload_time_iso_8601": "2020-02-18T09:53:47.924073Z", "url": "https://files.pythonhosted.org/packages/59/7a/8f95ed7c2746a35092202349c05b3c2a490798c598ed72b63a20909314a5/gtagora-connector-0.1.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:34 2020"}