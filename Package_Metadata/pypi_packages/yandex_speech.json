{"info": {"author": "Artem Fedotov", "author_email": "art1415926535@ya.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Natural Language :: Russian", "Natural Language :: Turkish", "Natural Language :: Ukranian", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Multimedia :: Sound/Audio :: Speech"], "description": "============================\nyandex_speech\n============================\n\n.. image:: https://img.shields.io/pypi/v/yandex_speech.svg\n    :target: https://pypi.python.org/pypi/yandex_speech\n\n.. image:: https://img.shields.io/travis/art1415926535/yandex_speech.svg\n    :target: https://travis-ci.org/art1415926535/yandex_speech\n\n.. image:: https://landscape.io/github/art1415926535/Yandex_speech/master/landscape.svg?style=flat\n    :target: https://landscape.io/github/art1415926535/Yandex_speech/master\n\nInstallation\n------------\nUse ``Pip``, Luke\n\n.. code-block:: bash\n\n    $ pip install yandex_speech\n\nUsage\n-----\n`Text to speech <https://github.com/art1415926535/yandex_speech#text-to-speech>`_\n\nSpeech to text (not ready)\n\n`Natural language understanding <https://github.com/art1415926535/yandex_speech#natural-language-understanding>`_\n\n****\n\nText to speech\n--------------\nGeneration of speech using `Yandex SpeechKit <https://tech.yandex.ru/speechkit/>`_.\nSpeechKit Cloud allows you to voice any text in Russian, English, Turkish, or Ukrainian.\nYou can choose the voice (male or female), tempo and intonation (e.g., joy).\n\n.. code-block:: python\n\n    >>> from yandex_speech import TTS\n    >>> tts = TTS(\"jane\", \"mp3\", \"60589d42-0e42-b742-8942-thekeyisalie\")\n    >>> tts.generate(\"\u0420\u045f\u0421\u0402\u0420\u0451\u0420\u0406\u0420\u00b5\u0421\u201a \u0420\u0458\u0420\u0451\u0421\u0402\")\n    >>> tss.save()\n    speech.mp3\n\nTTS(speaker, audio_format, key, lang=\"ru\u0432\u0402\u2018RU\", emotion=\"neutral\", speed=1)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n- ``speaker`` - Speaker. Female: \"jane\", \"oksana\", \"alyss\", \"omazh\". Male: \"zahar\", \"ermil\";\n- ``audio_format`` - Audio file format: \"mp3\", \"wav\", \"opus\";\n- ``key`` - `API\u0432\u0402\u2018key for Yandex speech kit <https://developer.tech.yandex.ru>`_.\n- ``lang`` (optional) - Language: \"ru\u0432\u0402\u2018RU\" (by default), \"en-US\", \"tr-TR\", \"uk-UK\";\n- ``emotion`` (optional) - The color of the voice: \"neutral\" (by default), \"evil\", \"good\";\n- ``speed`` (optional) - Speech tempo: a value between 0.1 (slowest) to 3.0 (fastest).\n\n\ntts.generate(text)\n~~~~~~~~~~~~~~~~~~\n- ``text`` - Text to speech: \"\u0420\u00b7+\u0420\u00b0\u0420\u0458\u0420\u0455\u0420\u0454\" (before the stressed vowel can be put \"+\"; the restriction on line length: 2000 bytes);\n\ntts.save(path=\"speech\")\n~~~~~~~~~~~~~~~~~~~~~~~\n- ``path`` (optional) - A path to save file: \"test\", \"dirname/test.mp3\", ...;\nReturns the path.\n\nReferences\n----------\n`Overview tts technology\n<https://tech.yandex.ru/speechkit/cloud/doc/dg/concepts/speechkit-dg-overview-technology-tts-docpage/>`_\n\n`The format of request and response\n<https://tech.yandex.ru/speechkit/cloud/doc/dg/concepts/speechkit-dg-tts-docpage/>`_\n\n****\n\nNatural language understanding\n------------------------------\nNatural language understanding is a technology that allows you to find certain objects in arbitrary text and mark them.\n\n.. code-block:: python\n\n    >>> from yandex_speech import NLU\n    >>> nlu = NLU(\"60589d42-0e42-b742-8942-thekeyisalie\")\n    >>> nlu.parse(\"31 \u0420\u00b0\u0420\u0457\u0421\u0402\u0420\u00b5\u0420\u00bb\u0421\u040f \u0421\u0402\u0420\u0455\u0420\u0491\u0420\u0451\u0420\u00bb\u0421\u0403\u0421\u040f \u0420\u0490\u0420\u00bb\u0421\u0453\u0421\u0403\u0420\u0455\u0420\u0406 \u0420\u201c\u0420\u00b5\u0420\u0405\u0420\u0405\u0420\u00b0\u0420\u0491\u0420\u0451\u0420\u2116 \u0420\u2019\u0420\u0451\u0420\u0454\u0421\u201a\u0420\u0455\u0421\u0402\u0420\u0455\u0420\u0406\u0420\u0451\u0421\u2021\", (\"Date\", \"Fio\"))\n    {'Date': [{'Tokens': {'Begin': 0, 'End': 2}, 'Month': 4, 'Day': 31}], 'Fio': [{'Patronymic': '\u0420\u0406\u0420\u0451\u0420\u0454\u0421\u201a\u0420\u0455\u0421\u0402\u0420\u0455\u0420\u0406\u0420\u0451\u0421\u2021', 'Type': 'fioname', 'Tokens': {'Begin': 3, 'End': 6}, 'FirstName': '\u0420\u0456\u0420\u00b5\u0420\u0405\u0420\u00b0\u0420\u0491\u0420\u0451\u0420\u2116', 'LastName': '\u0421\u2026\u0420\u00bb\u0421\u0453\u0421\u0403\u0420\u0455\u0420\u0406'}]}\n\nNLU(key)\n~~~~~~~~\n- ``key`` - `API\u0432\u0402\u2018key for Yandex speech kit <https://developer.tech.yandex.ru>`_.\n\nNLU.parse(text, layers=None)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n- ``text`` - Text to parse.\n- ``layers`` (optional) - Special fields. Only one string or iterable object (e.g \"Data\", (\"Data\", \"Fio\")). Only these fields will be returned.\n\nReturns the parsed text into a json object.\n\nReferences\n----------\n\n`Overview nlu technology\n<https://tech.yandex.ru/speechkit/cloud/doc/dg/concepts/speechkit-dg-overview-technology-nlu-docpage/>`_\n\nThe format of `request <https://tech.yandex.ru/speechkit/cloud/doc/dg/concepts/speechkit-dg-nlu-params-docpage/>`_ and `response <https://tech.yandex.ru/speechkit/cloud/doc/dg/concepts/speechkit-dg-nlu-response-docpage/>`_\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/art1415926535/Yandex_speech", "keywords": "yandex speech kit text-to-speech tts", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "yandex_speech", "package_url": "https://pypi.org/project/yandex_speech/", "platform": "", "project_url": "https://pypi.org/project/yandex_speech/", "project_urls": {"Homepage": "https://github.com/art1415926535/Yandex_speech"}, "release_url": "https://pypi.org/project/yandex_speech/0.4/", "requires_dist": null, "requires_python": "", "summary": "A library for Yandex speech kit", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            ============================<br>yandex_speech<br>============================<br><br>.. image:: https://img.shields.io/pypi/v/yandex_speech.svg<br>    :target: https://pypi.python.org/pypi/yandex_speech<br><br>.. image:: https://img.shields.io/travis/art1415926535/yandex_speech.svg<br>    :target: https://travis-ci.org/art1415926535/yandex_speech<br><br>.. image:: https://landscape.io/github/art1415926535/Yandex_speech/master/landscape.svg?style=flat<br>    :target: https://landscape.io/github/art1415926535/Yandex_speech/master<br><br>Installation<br>------------<br>Use ``Pip``, Luke<br><br>.. code-block:: bash<br><br>    $ pip install yandex_speech<br><br>Usage<br>-----<br>`Text to speech &lt;https://github.com/art1415926535/yandex_speech#text-to-speech&gt;`_<br><br>Speech to text (not ready)<br><br>`Natural language understanding &lt;https://github.com/art1415926535/yandex_speech#natural-language-understanding&gt;`_<br><br>****<br><br>Text to speech<br>--------------<br>Generation of speech using `Yandex SpeechKit &lt;https://tech.yandex.ru/speechkit/&gt;`_.<br>SpeechKit Cloud allows you to voice any text in Russian, English, Turkish, or Ukrainian.<br>You can choose the voice (male or female), tempo and intonation (e.g., joy).<br><br>.. code-block:: python<br><br>    &gt;&gt;&gt; from yandex_speech import TTS<br>    &gt;&gt;&gt; tts = TTS(\"jane\", \"mp3\", \"60589d42-0e42-b742-8942-thekeyisalie\")<br>    &gt;&gt;&gt; tts.generate(\"\u0420\u045f\u0421\u0402\u0420\u0451\u0420\u0406\u0420\u00b5\u0421\u201a \u0420\u0458\u0420\u0451\u0421\u0402\")<br>    &gt;&gt;&gt; tss.save()<br>    speech.mp3<br><br>TTS(speaker, audio_format, key, lang=\"ru\u0432\u0402\u2018RU\", emotion=\"neutral\", speed=1)<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>- ``speaker`` - Speaker. Female: \"jane\", \"oksana\", \"alyss\", \"omazh\". Male: \"zahar\", \"ermil\";<br>- ``audio_format`` - Audio file format: \"mp3\", \"wav\", \"opus\";<br>- ``key`` - `API\u0432\u0402\u2018key for Yandex speech kit &lt;https://developer.tech.yandex.ru&gt;`_.<br>- ``lang`` (optional) - Language: \"ru\u0432\u0402\u2018RU\" (by default), \"en-US\", \"tr-TR\", \"uk-UK\";<br>- ``emotion`` (optional) - The color of the voice: \"neutral\" (by default), \"evil\", \"good\";<br>- ``speed`` (optional) - Speech tempo: a value between 0.1 (slowest) to 3.0 (fastest).<br><br><br>tts.generate(text)<br>~~~~~~~~~~~~~~~~~~<br>- ``text`` - Text to speech: \"\u0420\u00b7+\u0420\u00b0\u0420\u0458\u0420\u0455\u0420\u0454\" (before the stressed vowel can be put \"+\"; the restriction on line length: 2000 bytes);<br><br>tts.save(path=\"speech\")<br>~~~~~~~~~~~~~~~~~~~~~~~<br>- ``path`` (optional) - A path to save file: \"test\", \"dirname/test.mp3\", ...;<br>Returns the path.<br><br>References<br>----------<br>`Overview tts technology<br>&lt;https://tech.yandex.ru/speechkit/cloud/doc/dg/concepts/speechkit-dg-overview-technology-tts-docpage/&gt;`_<br><br>`The format of request and response<br>&lt;https://tech.yandex.ru/speechkit/cloud/doc/dg/concepts/speechkit-dg-tts-docpage/&gt;`_<br><br>****<br><br>Natural language understanding<br>------------------------------<br>Natural language understanding is a technology that allows you to find certain objects in arbitrary text and mark them.<br><br>.. code-block:: python<br><br>    &gt;&gt;&gt; from yandex_speech import NLU<br>    &gt;&gt;&gt; nlu = NLU(\"60589d42-0e42-b742-8942-thekeyisalie\")<br>    &gt;&gt;&gt; nlu.parse(\"31 \u0420\u00b0\u0420\u0457\u0421\u0402\u0420\u00b5\u0420\u00bb\u0421\u040f \u0421\u0402\u0420\u0455\u0420\u0491\u0420\u0451\u0420\u00bb\u0421\u0403\u0421\u040f \u0420\u0490\u0420\u00bb\u0421\u0453\u0421\u0403\u0420\u0455\u0420\u0406 \u0420\u201c\u0420\u00b5\u0420\u0405\u0420\u0405\u0420\u00b0\u0420\u0491\u0420\u0451\u0420\u2116 \u0420\u2019\u0420\u0451\u0420\u0454\u0421\u201a\u0420\u0455\u0421\u0402\u0420\u0455\u0420\u0406\u0420\u0451\u0421\u2021\", (\"Date\", \"Fio\"))<br>    {'Date': [{'Tokens': {'Begin': 0, 'End': 2}, 'Month': 4, 'Day': 31}], 'Fio': [{'Patronymic': '\u0420\u0406\u0420\u0451\u0420\u0454\u0421\u201a\u0420\u0455\u0421\u0402\u0420\u0455\u0420\u0406\u0420\u0451\u0421\u2021', 'Type': 'fioname', 'Tokens': {'Begin': 3, 'End': 6}, 'FirstName': '\u0420\u0456\u0420\u00b5\u0420\u0405\u0420\u00b0\u0420\u0491\u0420\u0451\u0420\u2116', 'LastName': '\u0421\u2026\u0420\u00bb\u0421\u0453\u0421\u0403\u0420\u0455\u0420\u0406'}]}<br><br>NLU(key)<br>~~~~~~~~<br>- ``key`` - `API\u0432\u0402\u2018key for Yandex speech kit &lt;https://developer.tech.yandex.ru&gt;`_.<br><br>NLU.parse(text, layers=None)<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>- ``text`` - Text to parse.<br>- ``layers`` (optional) - Special fields. Only one string or iterable object (e.g \"Data\", (\"Data\", \"Fio\")). Only these fields will be returned.<br><br>Returns the parsed text into a json object.<br><br>References<br>----------<br><br>`Overview nlu technology<br>&lt;https://tech.yandex.ru/speechkit/cloud/doc/dg/concepts/speechkit-dg-overview-technology-nlu-docpage/&gt;`_<br><br>The format of `request &lt;https://tech.yandex.ru/speechkit/cloud/doc/dg/concepts/speechkit-dg-nlu-params-docpage/&gt;`_ and `response &lt;https://tech.yandex.ru/speechkit/cloud/doc/dg/concepts/speechkit-dg-nlu-response-docpage/&gt;`_<br>\n          </div>"}, "last_serial": 2575920, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "483f95151d52953cdaabf043bc6ac873", "sha256": "f8dc173435db0b93b3ffff05ffc8642bf9b1127962b000d5093b07e6dec75ccf"}, "downloads": -1, "filename": "yandex_speech-0.2.tar.gz", "has_sig": false, "md5_digest": "483f95151d52953cdaabf043bc6ac873", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2706, "upload_time": "2017-01-10T08:53:30", "upload_time_iso_8601": "2017-01-10T08:53:30.697553Z", "url": "https://files.pythonhosted.org/packages/bc/cf/118c98941fe733dc32065ad0dbbbcef59d75b4bbacded50fc216bccd4aa0/yandex_speech-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "acc106d883a8204adc2d108822a72967", "sha256": "55ef0b7f14a17b520cae40076ff876c4ec0d7519c0e5b0add32a7b0221d197e1"}, "downloads": -1, "filename": "yandex_speech-0.3.tar.gz", "has_sig": false, "md5_digest": "acc106d883a8204adc2d108822a72967", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3366, "upload_time": "2017-01-12T18:33:58", "upload_time_iso_8601": "2017-01-12T18:33:58.618198Z", "url": "https://files.pythonhosted.org/packages/7b/85/c60c0606cedcce1396fc750d70ab0adee302182510bee24f1b56660f8f60/yandex_speech-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "0d651e9f22d2511392cb26f4b26fa54b", "sha256": "b3f9ebf3bdcd64fd06a68db7ca4ec0825fd81e4f8a96ed43542b02d3a601e42e"}, "downloads": -1, "filename": "yandex_speech-0.3.1.tar.gz", "has_sig": false, "md5_digest": "0d651e9f22d2511392cb26f4b26fa54b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3416, "upload_time": "2017-01-12T20:31:30", "upload_time_iso_8601": "2017-01-12T20:31:30.065715Z", "url": "https://files.pythonhosted.org/packages/6a/2d/f642e6653c46ef4b88a03c9d773bb417d65b5e605045e1b8e673205fcf63/yandex_speech-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "eeabdda361080f5ce2fcb670adb616cc", "sha256": "464f829bcd9038e43e72d66807d0239357de016eb4c8a0b2825eed95f0a432eb"}, "downloads": -1, "filename": "yandex_speech-0.3.2.tar.gz", "has_sig": false, "md5_digest": "eeabdda361080f5ce2fcb670adb616cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3436, "upload_time": "2017-01-12T20:46:37", "upload_time_iso_8601": "2017-01-12T20:46:37.770341Z", "url": "https://files.pythonhosted.org/packages/8b/17/9b99a53a928098736c22ce5d0461cf6bc89438d17961206cf1b2d9b3c050/yandex_speech-0.3.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "687c5cb285d15b4ef62a027c61aba492", "sha256": "b5e4a7e76f4cf674cab83b5f782bfb815cdffc7f5a29bafb1972e8435e70b2d1"}, "downloads": -1, "filename": "yandex_speech-0.4.tar.gz", "has_sig": false, "md5_digest": "687c5cb285d15b4ef62a027c61aba492", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4564, "upload_time": "2017-01-15T19:38:04", "upload_time_iso_8601": "2017-01-15T19:38:04.070696Z", "url": "https://files.pythonhosted.org/packages/7c/c2/9741e0848bd6cb13a2f266050e65b244bbd265067817019a7806068a3681/yandex_speech-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "687c5cb285d15b4ef62a027c61aba492", "sha256": "b5e4a7e76f4cf674cab83b5f782bfb815cdffc7f5a29bafb1972e8435e70b2d1"}, "downloads": -1, "filename": "yandex_speech-0.4.tar.gz", "has_sig": false, "md5_digest": "687c5cb285d15b4ef62a027c61aba492", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4564, "upload_time": "2017-01-15T19:38:04", "upload_time_iso_8601": "2017-01-15T19:38:04.070696Z", "url": "https://files.pythonhosted.org/packages/7c/c2/9741e0848bd6cb13a2f266050e65b244bbd265067817019a7806068a3681/yandex_speech-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:23:10 2020"}