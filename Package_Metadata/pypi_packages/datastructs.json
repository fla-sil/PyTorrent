{"info": {"author": "Junior Barth", "author_email": "juniior.barth@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.7"], "description": "# datastructs\n\nModule created to facilitate the creation and use of data structures\n\n[![Build Status](https://travis-ci.com/BarthJr/datastructs.svg?branch=master)](https://travis-ci.com/BarthJr/datastructs)\n[![Updates](https://pyup.io/repos/github/BarthJr/datastructs/shield.svg)](https://pyup.io/repos/github/BarthJr/datastructs/)\n[![Python 3](https://pyup.io/repos/github/BarthJr/datastructs/python-3-shield.svg)](https://pyup.io/repos/github/BarthJr/datastructs/)\n\n\n# Installation\n\n```Python3\npip install datastructs\n```\n\n# How to Use\n## Binary Tree\n\n```Python3\n>>> from datastructs import BinaryTree\n>>> binary_tree = BinaryTree([1, 2, 3, 4])\n>>> binary_tree.print()\n1 2 3 4 \n>>> binary_tree.add([5, 6, 7, 8])\n>>> binary_tree.print()\n1 2 3 4 5 6 7 8 \n>>> binary_tree.print(node=binary_tree.root, order='lvl')\n1 2 3 4 5 6 7 8 \n>>> binary_tree.print('pre')\n1 2 4 8 5 3 6 7 \n>>> binary_tree.print('in')\n8 4 2 5 1 6 3 7 \n>>> binary_tree.print('pos')\n8 4 5 2 6 7 3 1 \n>>> BinaryTree().print(node=binary_tree.root.left)\n2 4 5 8 \n>>> BinaryTree().print(node=binary_tree.root.left, order='in')\n8 4 2 5 \n\n\n```\n## Linked List\n```Python3\n>>> from datastructs import LinkedList\n>>> linked_list = LinkedList([1, 2, 3, 4])\n>>> linked_list.print()\n1->2->3->4\n>>> linked_list.add([5, 6, 7, 8])\n>>> linked_list.print()\n1->2->3->4->5->6->7->8\n>>> LinkedList().print(linked_list.head.next)\n2->3->4->5->6->7->8\n\n```\n\n# How to contribute\n\nAll code follows [PEP8](https://www.python.org/dev/peps/pep-0008/), except for the line length, which accepts 120 characters.\n\n1. Make the project fork and clone the project: `git clone git@github.com:<your_user>/datastructs.git`\n2. Install pipenv: `pip install pipenv`\n3. Install the dependencies for dev: `pipenv install -d`\n4. Develop the feature with tests\n5. Run the tests locally: `pipenv run pytest`\n6. Send the pull request with tests in a single commit\n7. Submit the PR for review\n8. After reviewed and corrected, the PR will be accepted and the lib post in PyPi", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/barthjr/datastructs", "keywords": "", "license": "AGPLv3+", "maintainer": "", "maintainer_email": "", "name": "datastructs", "package_url": "https://pypi.org/project/datastructs/", "platform": "", "project_url": "https://pypi.org/project/datastructs/", "project_urls": {"Homepage": "https://github.com/barthjr/datastructs"}, "release_url": "https://pypi.org/project/datastructs/0.2.2/", "requires_dist": null, "requires_python": "", "summary": "Module created to facilitate the creation and use of data structures", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>datastructs</h1>\n<p>Module created to facilitate the creation and use of data structures</p>\n<p><a href=\"https://travis-ci.com/BarthJr/datastructs\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aab2be006506cb175b2a17292eb623d61b03dd13/68747470733a2f2f7472617669732d63692e636f6d2f42617274684a722f64617461737472756374732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pyup.io/repos/github/BarthJr/datastructs/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f824cb3b73aafb54f4133260a3dc517b90b0249/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f42617274684a722f64617461737472756374732f736869656c642e737667\"></a>\n<a href=\"https://pyup.io/repos/github/BarthJr/datastructs/\" rel=\"nofollow\"><img alt=\"Python 3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1cde5a3172b95d0ab9fda8b723afd88155b44995/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f42617274684a722f64617461737472756374732f707974686f6e2d332d736869656c642e737667\"></a></p>\n<h1>Installation</h1>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">datastructs</span>\n</pre>\n<h1>How to Use</h1>\n<h2>Binary Tree</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">datastructs</span> <span class=\"kn\">import</span> <span class=\"n\">BinaryTree</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_tree</span> <span class=\"o\">=</span> <span class=\"n\">BinaryTree</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_tree</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">()</span>\n<span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_tree</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">([</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_tree</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">()</span>\n<span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span> <span class=\"mi\">5</span> <span class=\"mi\">6</span> <span class=\"mi\">7</span> <span class=\"mi\">8</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_tree</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">=</span><span class=\"n\">binary_tree</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">'lvl'</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span> <span class=\"mi\">5</span> <span class=\"mi\">6</span> <span class=\"mi\">7</span> <span class=\"mi\">8</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_tree</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s1\">'pre'</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">4</span> <span class=\"mi\">8</span> <span class=\"mi\">5</span> <span class=\"mi\">3</span> <span class=\"mi\">6</span> <span class=\"mi\">7</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_tree</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s1\">'in'</span><span class=\"p\">)</span>\n<span class=\"mi\">8</span> <span class=\"mi\">4</span> <span class=\"mi\">2</span> <span class=\"mi\">5</span> <span class=\"mi\">1</span> <span class=\"mi\">6</span> <span class=\"mi\">3</span> <span class=\"mi\">7</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binary_tree</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s1\">'pos'</span><span class=\"p\">)</span>\n<span class=\"mi\">8</span> <span class=\"mi\">4</span> <span class=\"mi\">5</span> <span class=\"mi\">2</span> <span class=\"mi\">6</span> <span class=\"mi\">7</span> <span class=\"mi\">3</span> <span class=\"mi\">1</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">BinaryTree</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">=</span><span class=\"n\">binary_tree</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">)</span>\n<span class=\"mi\">2</span> <span class=\"mi\">4</span> <span class=\"mi\">5</span> <span class=\"mi\">8</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">BinaryTree</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">=</span><span class=\"n\">binary_tree</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">'in'</span><span class=\"p\">)</span>\n<span class=\"mi\">8</span> <span class=\"mi\">4</span> <span class=\"mi\">2</span> <span class=\"mi\">5</span> \n</pre>\n<h2>Linked List</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">datastructs</span> <span class=\"kn\">import</span> <span class=\"n\">LinkedList</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">linked_list</span> <span class=\"o\">=</span> <span class=\"n\">LinkedList</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">linked_list</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">()</span>\n<span class=\"mi\">1</span><span class=\"o\">-&gt;</span><span class=\"mi\">2</span><span class=\"o\">-&gt;</span><span class=\"mi\">3</span><span class=\"o\">-&gt;</span><span class=\"mi\">4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">linked_list</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">([</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">linked_list</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">()</span>\n<span class=\"mi\">1</span><span class=\"o\">-&gt;</span><span class=\"mi\">2</span><span class=\"o\">-&gt;</span><span class=\"mi\">3</span><span class=\"o\">-&gt;</span><span class=\"mi\">4</span><span class=\"o\">-&gt;</span><span class=\"mi\">5</span><span class=\"o\">-&gt;</span><span class=\"mi\">6</span><span class=\"o\">-&gt;</span><span class=\"mi\">7</span><span class=\"o\">-&gt;</span><span class=\"mi\">8</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">LinkedList</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">linked_list</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">)</span>\n<span class=\"mi\">2</span><span class=\"o\">-&gt;</span><span class=\"mi\">3</span><span class=\"o\">-&gt;</span><span class=\"mi\">4</span><span class=\"o\">-&gt;</span><span class=\"mi\">5</span><span class=\"o\">-&gt;</span><span class=\"mi\">6</span><span class=\"o\">-&gt;</span><span class=\"mi\">7</span><span class=\"o\">-&gt;</span><span class=\"mi\">8</span>\n</pre>\n<h1>How to contribute</h1>\n<p>All code follows <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP8</a>, except for the line length, which accepts 120 characters.</p>\n<ol>\n<li>Make the project fork and clone the project: <code>git clone git@github.com:&lt;your_user&gt;/datastructs.git</code></li>\n<li>Install pipenv: <code>pip install pipenv</code></li>\n<li>Install the dependencies for dev: <code>pipenv install -d</code></li>\n<li>Develop the feature with tests</li>\n<li>Run the tests locally: <code>pipenv run pytest</code></li>\n<li>Send the pull request with tests in a single commit</li>\n<li>Submit the PR for review</li>\n<li>After reviewed and corrected, the PR will be accepted and the lib post in PyPi</li>\n</ol>\n\n          </div>"}, "last_serial": 5229087, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c27199460b57ecb56370ea91f894f2c4", "sha256": "a8ac429932cec62d313f87a5c5e32424ceed43615c0da7f204fe969221b4d559"}, "downloads": -1, "filename": "datastructs-0.1.tar.gz", "has_sig": false, "md5_digest": "c27199460b57ecb56370ea91f894f2c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27723, "upload_time": "2019-04-28T18:52:55", "upload_time_iso_8601": "2019-04-28T18:52:55.770978Z", "url": "https://files.pythonhosted.org/packages/93/8f/ecb9243be61ae7b726bc7e7caa4073b962709ef0b2ac59d5ecf0fbef5234/datastructs-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "2c03381b626c1e3f3be9eddbfd13c870", "sha256": "f80f28b380ddee83f138e32c9963a84ee3c4d186dc26f9469dd3ec460ddccc1d"}, "downloads": -1, "filename": "datastructs-0.2.tar.gz", "has_sig": false, "md5_digest": "2c03381b626c1e3f3be9eddbfd13c870", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5536, "upload_time": "2019-05-02T02:51:05", "upload_time_iso_8601": "2019-05-02T02:51:05.473814Z", "url": "https://files.pythonhosted.org/packages/fd/f3/fee85ea397518f9bd4599cb4abb130530751c1d283c5d90b36fe55f84bdd/datastructs-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "b0ac63d27bd4c5ad634ee93674e9bcc9", "sha256": "6ce7517a9308f89d93f80ddad8f051b1fdd082b3bac44c8a54a8ccc60a1a1110"}, "downloads": -1, "filename": "datastructs-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b0ac63d27bd4c5ad634ee93674e9bcc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5383, "upload_time": "2019-05-04T11:15:12", "upload_time_iso_8601": "2019-05-04T11:15:12.520555Z", "url": "https://files.pythonhosted.org/packages/62/74/8c17a310b2d32f3383dd77f0ce0e1c908b070fd04d3ee3cb21723bd68dd5/datastructs-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "16dd97925d5d3297b99227b5d1aed114", "sha256": "d376a857be1358218f225b4f9baa84ea3da309bebcff680ac584fd3a81119208"}, "downloads": -1, "filename": "datastructs-0.2.2.tar.gz", "has_sig": false, "md5_digest": "16dd97925d5d3297b99227b5d1aed114", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5438, "upload_time": "2019-05-05T17:47:04", "upload_time_iso_8601": "2019-05-05T17:47:04.525952Z", "url": "https://files.pythonhosted.org/packages/95/01/e76773c2900a5aebf56a87847f92d7885bf7fe4f31220b11a4c2bad76056/datastructs-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "16dd97925d5d3297b99227b5d1aed114", "sha256": "d376a857be1358218f225b4f9baa84ea3da309bebcff680ac584fd3a81119208"}, "downloads": -1, "filename": "datastructs-0.2.2.tar.gz", "has_sig": false, "md5_digest": "16dd97925d5d3297b99227b5d1aed114", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5438, "upload_time": "2019-05-05T17:47:04", "upload_time_iso_8601": "2019-05-05T17:47:04.525952Z", "url": "https://files.pythonhosted.org/packages/95/01/e76773c2900a5aebf56a87847f92d7885bf7fe4f31220b11a4c2bad76056/datastructs-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:09 2020"}