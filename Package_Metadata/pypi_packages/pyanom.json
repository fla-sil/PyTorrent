{"info": {"author": "Masafumi Abeta", "author_email": "ground0state@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "pyanom\n======\n\n|image0| |image1|\n\nThis library is Python projects for anomaly detection. This contains\nthese techniques.\n\n-  Kullback-Leibler desity estimation\n-  Singular spectrum analysis\n-  Graphical lasso\n-  CUMSUM anomaly detection\n-  Hoteling T2\n-  Directional data anomaly detection\n\nREQUIREMENTS\n------------\n\n-  numpy\n-  pandas\n\nINSTALLATION\n------------\n\n.. code:: bash\n\n   pip install pyanom\n\nUSAGE\n-----\n\nKullback-Leibler desity estimation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n   import numpy as np\n   from pyanom.density_ratio_estimation import KLDensityRatioEstimation\n\n   X_normal = np.loadtxt(\"../input/normal_data.csv\", delimiter=\",\")\n   X_error = np.loadtxt(\"../input/error_data.csv\", delimiter=\",\")\n\n   model = KLDensityRatioEstimation(\n       band_width=0.1, learning_rate=0.1, num_iterations=100)\n   model.fit(X_normal, X_error)\n   anomaly_score = model.predict(X_normal, X_error)\n\nSingular spectrum analysis\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n   import numpy as np\n   from pyanom.subspace_methods import SSA\n\n   y_error = np.loadtxt(\"../input/timeseries_error2.csv\", delimiter=\",\")\n\n   model = SSA()\n   model.fit(y_error, window_size=50, trajectory_n=25, trajectory_pattern=3, test_n=25, test_pattern=2, lag=25)\n   anomaly_score = model.score()\n\nGraphical lasso\n~~~~~~~~~~~~~~~\n\n.. code:: python\n\n   import numpy as np\n   from pyanom.structure_learning import GraphicalLasso\n\n   X_normal = np.loadtxt(\"../input/normal_data.csv\", delimiter=\",\")\n   X_error = np.loadtxt(\"../input/error_data.csv\", delimiter=\",\")\n\n   model = GraphicalLasso()\n   model.fit(X_normal, rho=0.01, normalize=True)\n   anomaly_score = model.outlier_analysis_score(X_error)\n\nCUSUM anomaly detection\n~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n   import numpy as np\n   from pyanom.outlier_detection import CAD\n\n   y_normal = np.loadtxt(\n       \"../input/timeseries_normal.csv\", delimiter=\",\").reshape(-1, 1)\n   y_error = np.loadtxt(\n       \"../input/timeseries_error.csv\", delimiter=\",\").reshape(-1, 1)\n\n   model = CAD()\n   model.fit(y_normal, threshold=1)\n   anomaly_score = model.score(y_error)\n\nHoteling T2\n~~~~~~~~~~~\n\n.. code:: python\n\n   import numpy as np\n   from pyanom.outlier_detection import HotelingT2\n\n   X_normal = np.loadtxt(\"../input/normal_data.csv\", delimiter=\",\")\n   X_error = np.loadtxt(\"../input/error_data.csv\", delimiter=\",\")\n\n   model = HotelingT2()\n   model.fit(X_normal)\n   anomaly_score = model.score(X_error)\n\nDirectional data anomaly DirectionalDataAnomalyDetection\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n   import numpy as np\n   from pyanom.outlier_detection import DirectionalDataAnomalyDetection\n\n   X_normal = np.loadtxt(\n       \"../input/normal_direction_data.csv\", delimiter=\",\")\n   X_error = np.loadtxt(\"../input/error_direction_data.csv\", delimiter=\",\")\n\n   model = DirectionalDataAnomalyDetection()\n   model.fit(X_normal, normalize=True))\n   anomaly_score = model.score(X_error)\n\n.. |image0| image:: https://img.shields.io/badge/python-3.6%7C3.7%7C3.8-green?style=plastic\n.. |image1| image:: https://img.shields.io/badge/dynamic/json.svg?label=version&colorB=5f9ea0&query=$.version&uri=https://raw.githubusercontent.com/ground0state/pyanom/master/package.json&style=plastic\n\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ground0state/pyanom", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyanom", "package_url": "https://pypi.org/project/pyanom/", "platform": "", "project_url": "https://pypi.org/project/pyanom/", "project_urls": {"Homepage": "https://github.com/ground0state/pyanom"}, "release_url": "https://pypi.org/project/pyanom/0.0.1b1/", "requires_dist": ["numpy", "pandas"], "requires_python": "", "summary": "Anomaly detection package", "version": "0.0.1b1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"image0\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b6ed9d8eb19a8d08587432db38f0ae8407b37d30/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e36253743332e37253743332e382d677265656e3f7374796c653d706c6173746963\"> <img alt=\"image1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1f3e7c5f395282c5cd7206db1827f73ed939d2a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e2e7376673f6c6162656c3d76657273696f6e26636f6c6f72423d3566396561302671756572793d242e76657273696f6e267572693d68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f67726f756e643073746174652f7079616e6f6d2f6d61737465722f7061636b6167652e6a736f6e267374796c653d706c6173746963\"></p>\n<p>This library is Python projects for anomaly detection. This contains\nthese techniques.</p>\n<ul>\n<li>Kullback-Leibler desity estimation</li>\n<li>Singular spectrum analysis</li>\n<li>Graphical lasso</li>\n<li>CUMSUM anomaly detection</li>\n<li>Hoteling T2</li>\n<li>Directional data anomaly detection</li>\n</ul>\n<div id=\"requirements\">\n<h2>REQUIREMENTS</h2>\n<ul>\n<li>numpy</li>\n<li>pandas</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>INSTALLATION</h2>\n<pre>pip install pyanom\n</pre>\n</div>\n<div id=\"usage\">\n<h2>USAGE</h2>\n<div id=\"kullback-leibler-desity-estimation\">\n<h3>Kullback-Leibler desity estimation</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyanom.density_ratio_estimation</span> <span class=\"kn\">import</span> <span class=\"n\">KLDensityRatioEstimation</span>\n\n<span class=\"n\">X_normal</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"s2\">\"../input/normal_data.csv\"</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s2\">\",\"</span><span class=\"p\">)</span>\n<span class=\"n\">X_error</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"s2\">\"../input/error_data.csv\"</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s2\">\",\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">KLDensityRatioEstimation</span><span class=\"p\">(</span>\n    <span class=\"n\">band_width</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">learning_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">num_iterations</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_normal</span><span class=\"p\">,</span> <span class=\"n\">X_error</span><span class=\"p\">)</span>\n<span class=\"n\">anomaly_score</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X_normal</span><span class=\"p\">,</span> <span class=\"n\">X_error</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"singular-spectrum-analysis\">\n<h3>Singular spectrum analysis</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyanom.subspace_methods</span> <span class=\"kn\">import</span> <span class=\"n\">SSA</span>\n\n<span class=\"n\">y_error</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"s2\">\"../input/timeseries_error2.csv\"</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s2\">\",\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">SSA</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">y_error</span><span class=\"p\">,</span> <span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">trajectory_n</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"n\">trajectory_pattern</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">test_n</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"n\">test_pattern</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">lag</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n<span class=\"n\">anomaly_score</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"graphical-lasso\">\n<h3>Graphical lasso</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyanom.structure_learning</span> <span class=\"kn\">import</span> <span class=\"n\">GraphicalLasso</span>\n\n<span class=\"n\">X_normal</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"s2\">\"../input/normal_data.csv\"</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s2\">\",\"</span><span class=\"p\">)</span>\n<span class=\"n\">X_error</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"s2\">\"../input/error_data.csv\"</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s2\">\",\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">GraphicalLasso</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_normal</span><span class=\"p\">,</span> <span class=\"n\">rho</span><span class=\"o\">=</span><span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">anomaly_score</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">outlier_analysis_score</span><span class=\"p\">(</span><span class=\"n\">X_error</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"cusum-anomaly-detection\">\n<h3>CUSUM anomaly detection</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyanom.outlier_detection</span> <span class=\"kn\">import</span> <span class=\"n\">CAD</span>\n\n<span class=\"n\">y_normal</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"../input/timeseries_normal.csv\"</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s2\">\",\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">y_error</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"../input/timeseries_error.csv\"</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s2\">\",\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">CAD</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">y_normal</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">anomaly_score</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">y_error</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"hoteling-t2\">\n<h3>Hoteling T2</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyanom.outlier_detection</span> <span class=\"kn\">import</span> <span class=\"n\">HotelingT2</span>\n\n<span class=\"n\">X_normal</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"s2\">\"../input/normal_data.csv\"</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s2\">\",\"</span><span class=\"p\">)</span>\n<span class=\"n\">X_error</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"s2\">\"../input/error_data.csv\"</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s2\">\",\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">HotelingT2</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_normal</span><span class=\"p\">)</span>\n<span class=\"n\">anomaly_score</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_error</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"directional-data-anomaly-directionaldataanomalydetection\">\n<h3>Directional data anomaly DirectionalDataAnomalyDetection</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyanom.outlier_detection</span> <span class=\"kn\">import</span> <span class=\"n\">DirectionalDataAnomalyDetection</span>\n\n<span class=\"n\">X_normal</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"../input/normal_direction_data.csv\"</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s2\">\",\"</span><span class=\"p\">)</span>\n<span class=\"n\">X_error</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"s2\">\"../input/error_direction_data.csv\"</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s2\">\",\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">DirectionalDataAnomalyDetection</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_normal</span><span class=\"p\">,</span> <span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"n\">anomaly_score</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_error</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6042556, "releases": {"0.0.1b1": [{"comment_text": "", "digests": {"md5": "e1cc4a47e200bd16d1a69779298c2795", "sha256": "e58fd2f247db79e4b923ce41cfe5f5ef83b485c1cdda1d2c23a08a16ee44182e"}, "downloads": -1, "filename": "pyanom-0.0.1b1-py3-none-any.whl", "has_sig": false, "md5_digest": "e1cc4a47e200bd16d1a69779298c2795", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8666, "upload_time": "2019-10-28T15:43:57", "upload_time_iso_8601": "2019-10-28T15:43:57.014974Z", "url": "https://files.pythonhosted.org/packages/23/c7/76885c816be8d65ca08a111eafcbfe7f322fb36eaa54413bad6cc5e64d26/pyanom-0.0.1b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bed354cf5433fe66d9ed20fba868ef8f", "sha256": "8c4393a205e44e576db203317d53404816b9307cc273947fd20937fc99dd8ac0"}, "downloads": -1, "filename": "pyanom-0.0.1b1.tar.gz", "has_sig": false, "md5_digest": "bed354cf5433fe66d9ed20fba868ef8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8087, "upload_time": "2019-10-28T15:43:59", "upload_time_iso_8601": "2019-10-28T15:43:59.677480Z", "url": "https://files.pythonhosted.org/packages/c3/64/94c86f1f38f3a532c57d85878a199ef5ab2f854a962d0eb9cc9e892fffcf/pyanom-0.0.1b1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1cc4a47e200bd16d1a69779298c2795", "sha256": "e58fd2f247db79e4b923ce41cfe5f5ef83b485c1cdda1d2c23a08a16ee44182e"}, "downloads": -1, "filename": "pyanom-0.0.1b1-py3-none-any.whl", "has_sig": false, "md5_digest": "e1cc4a47e200bd16d1a69779298c2795", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8666, "upload_time": "2019-10-28T15:43:57", "upload_time_iso_8601": "2019-10-28T15:43:57.014974Z", "url": "https://files.pythonhosted.org/packages/23/c7/76885c816be8d65ca08a111eafcbfe7f322fb36eaa54413bad6cc5e64d26/pyanom-0.0.1b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bed354cf5433fe66d9ed20fba868ef8f", "sha256": "8c4393a205e44e576db203317d53404816b9307cc273947fd20937fc99dd8ac0"}, "downloads": -1, "filename": "pyanom-0.0.1b1.tar.gz", "has_sig": false, "md5_digest": "bed354cf5433fe66d9ed20fba868ef8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8087, "upload_time": "2019-10-28T15:43:59", "upload_time_iso_8601": "2019-10-28T15:43:59.677480Z", "url": "https://files.pythonhosted.org/packages/c3/64/94c86f1f38f3a532c57d85878a199ef5ab2f854a962d0eb9cc9e892fffcf/pyanom-0.0.1b1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:33 2020"}