{"info": {"author": "Center for Open Science", "author_email": "contact@centerforopenscience.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "***********\nmodular-odm\n***********\n\n.. image:: https://badge.fury.io/py/modular-odm.png\n    :target: http://badge.fury.io/py/modular-odm\n\n.. image:: https://travis-ci.org/CenterForOpenScience/modular-odm.png?branch=develop\n    :target: https://travis-ci.org/CenterForOpenScience/modular-odm\n\nA database-agnostic Document-Object Mapper for Python.\n\n\nInstall\n=======\n\n.. code-block:: bash\n\n    $ pip install modular-odm\n\n\nExample Usage with MongoDB\n==========================\n\nDefining Models\n---------------\n\n.. code-block:: python\n\n    from modularodm import StoredObject, fields\n    from modularodm.validators import MinLengthValidator, MaxLengthValidator\n\n    class User(StoredObject):\n        _meta = {\"optimistic\": True}\n        _id = fields.StringField(primary=True, index=True)\n        username = fields.StringField(required=True)\n        password = fields.StringField(required=True, validate=[MinLengthValidator(8)])\n\n        def __repr__(self):\n            return \"<User: {0}>\".format(self.username)\n\n    class Comment(StoredObject):\n        _meta = {\"optimistic\": True}\n        _id = fields.StringField(primary=True, index=True)\n        text = fields.StringField(validate=MaxLengthValidator(500))\n        user = fields.ForeignField(\"User\", backref=\"comments\")\n\n        def __repr__(self):\n            return \"<Comment: {0}>\".format(self.text)\n\n\nSetting the Storage Backend\n---------------------------\n\n.. code-block:: python\n\n    from pymongo import MongoClient\n    from modularodm import storage\n\n    client = MongoClient()\n    db = client['testdb']\n    User.set_storage(storage.MongoStorage(db, collection=\"user\"))\n    Comment.set_storage(storage.MongoStorage(db, collection=\"comment\"))\n\nCreating and Querying\n---------------------\n\n.. code-block:: python\n\n    >>> from modularodm.query.querydialect import DefaultQueryDialect as Q\n    >>> u = User(username=\"unladenswallow\", password=\"h0lygrai1\")\n    >>> u.save()\n    >>> comment = Comment(text=\"And now for something completely different.\", user=u)\n    >>> comment2 = Comment(text=\"It's just a flesh wound.\", user=u)\n    >>> comment.save()\n    True\n    >>> comment2.save()\n    True\n    >>> u = User.find_one(Q(\"username\", \"eq\", \"unladenswallow\"))\n    >>> u.comment__comments\n    [<Comment: And now for something completely different.>, <Comment: It's just a flesh wound.>]\n    >>> c = Comment.find(Q(\"text\", \"startswith\", \"And now\"))[0]\n    >>> c.text\n    'And now for something completely different.'\n    \nFor more information regarding querying syntax, please visit the related readthedocs page at <http://modular-odm.readthedocs.org/en/latest/query_syntax.html>.\n\nMigrations\n----------\n\nTODO\n\n\n*Full documentation coming soon.*\n\nDevelopment\n===========\n\nTests require `nose <http://nose.readthedocs.org/en/latest/>`_, `invoke <http://docs.pyinvoke.org/en/latest/>`_, and MongoDB.\n\nInstalling MongoDB\n------------------\n\nIf you are on MacOSX with `homebrew <http://brew.sh/>`_, run\n\n.. code-block:: bash\n\n    $ brew update\n    $ brew install mongodb\n\nRunning Tests\n-------------\n\nTo start mongodb, run\n\n.. code-block:: bash\n\n    $ invoke mongo\n\nRun all tests with\n\n.. code-block:: bash\n\n    $ invoke test", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CenterForOpenScience/modular-odm", "keywords": "odm,nosql,mongo,mongodb", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "modular-odm", "package_url": "https://pypi.org/project/modular-odm/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/modular-odm/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/CenterForOpenScience/modular-odm"}, "release_url": "https://pypi.org/project/modular-odm/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "A Pythonic Object Data Manager", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/modular-odm\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/modular-odm.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/46dc00895a51e49265cdaef1b1d022167f722047/68747470733a2f2f62616467652e667572792e696f2f70792f6d6f64756c61722d6f646d2e706e67\"></a>\n<a href=\"https://travis-ci.org/CenterForOpenScience/modular-odm\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/CenterForOpenScience/modular-odm.png?branch=develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24e5c56212423e2ad007ba230223d5eb5b935b73/68747470733a2f2f7472617669732d63692e6f72672f43656e746572466f724f70656e536369656e63652f6d6f64756c61722d6f646d2e706e673f6272616e63683d646576656c6f70\"></a>\n<p>A database-agnostic Document-Object Mapper for Python.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install modular-odm\n</pre>\n</div>\n<div id=\"example-usage-with-mongodb\">\n<h2>Example Usage with MongoDB</h2>\n<div id=\"defining-models\">\n<h3>Defining Models</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">modularodm</span> <span class=\"kn\">import</span> <span class=\"n\">StoredObject</span><span class=\"p\">,</span> <span class=\"n\">fields</span>\n<span class=\"kn\">from</span> <span class=\"nn\">modularodm.validators</span> <span class=\"kn\">import</span> <span class=\"n\">MinLengthValidator</span><span class=\"p\">,</span> <span class=\"n\">MaxLengthValidator</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">StoredObject</span><span class=\"p\">):</span>\n    <span class=\"n\">_meta</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"optimistic\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n    <span class=\"n\">_id</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">StringField</span><span class=\"p\">(</span><span class=\"n\">primary</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">StringField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">StringField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">validate</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">MinLengthValidator</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)])</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"&lt;User: </span><span class=\"si\">{0}</span><span class=\"s2\">&gt;\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Comment</span><span class=\"p\">(</span><span class=\"n\">StoredObject</span><span class=\"p\">):</span>\n    <span class=\"n\">_meta</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"optimistic\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n    <span class=\"n\">_id</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">StringField</span><span class=\"p\">(</span><span class=\"n\">primary</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">StringField</span><span class=\"p\">(</span><span class=\"n\">validate</span><span class=\"o\">=</span><span class=\"n\">MaxLengthValidator</span><span class=\"p\">(</span><span class=\"mi\">500</span><span class=\"p\">))</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">ForeignField</span><span class=\"p\">(</span><span class=\"s2\">\"User\"</span><span class=\"p\">,</span> <span class=\"n\">backref</span><span class=\"o\">=</span><span class=\"s2\">\"comments\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"&lt;Comment: </span><span class=\"si\">{0}</span><span class=\"s2\">&gt;\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"setting-the-storage-backend\">\n<h3>Setting the Storage Backend</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymongo</span> <span class=\"kn\">import</span> <span class=\"n\">MongoClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">modularodm</span> <span class=\"kn\">import</span> <span class=\"n\">storage</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">MongoClient</span><span class=\"p\">()</span>\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"p\">[</span><span class=\"s1\">'testdb'</span><span class=\"p\">]</span>\n<span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">set_storage</span><span class=\"p\">(</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">MongoStorage</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">collection</span><span class=\"o\">=</span><span class=\"s2\">\"user\"</span><span class=\"p\">))</span>\n<span class=\"n\">Comment</span><span class=\"o\">.</span><span class=\"n\">set_storage</span><span class=\"p\">(</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">MongoStorage</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">collection</span><span class=\"o\">=</span><span class=\"s2\">\"comment\"</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"creating-and-querying\">\n<h3>Creating and Querying</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">modularodm.query.querydialect</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultQueryDialect</span> <span class=\"k\">as</span> <span class=\"n\">Q</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"unladenswallow\"</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"h0lygrai1\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">comment</span> <span class=\"o\">=</span> <span class=\"n\">Comment</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"And now for something completely different.\"</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">u</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">comment2</span> <span class=\"o\">=</span> <span class=\"n\">Comment</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"It's just a flesh wound.\"</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">u</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">comment</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">comment2</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">find_one</span><span class=\"p\">(</span><span class=\"n\">Q</span><span class=\"p\">(</span><span class=\"s2\">\"username\"</span><span class=\"p\">,</span> <span class=\"s2\">\"eq\"</span><span class=\"p\">,</span> <span class=\"s2\">\"unladenswallow\"</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">comment__comments</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Comment</span><span class=\"p\">:</span> <span class=\"n\">And</span> <span class=\"n\">now</span> <span class=\"k\">for</span> <span class=\"n\">something</span> <span class=\"n\">completely</span> <span class=\"n\">different</span><span class=\"o\">.&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Comment</span><span class=\"p\">:</span> <span class=\"n\">It</span><span class=\"s1\">'s just a flesh wound.&gt;]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Comment</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">Q</span><span class=\"p\">(</span><span class=\"s2\">\"text\"</span><span class=\"p\">,</span> <span class=\"s2\">\"startswith\"</span><span class=\"p\">,</span> <span class=\"s2\">\"And now\"</span><span class=\"p\">))[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"s1\">'And now for something completely different.'</span>\n</pre>\n<p>For more information regarding querying syntax, please visit the related readthedocs page at &lt;<a href=\"http://modular-odm.readthedocs.org/en/latest/query_syntax.html\" rel=\"nofollow\">http://modular-odm.readthedocs.org/en/latest/query_syntax.html</a>&gt;.</p>\n</div>\n<div id=\"migrations\">\n<h3>Migrations</h3>\n<p>TODO</p>\n<p><em>Full documentation coming soon.</em></p>\n</div>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Tests require <a href=\"http://nose.readthedocs.org/en/latest/\" rel=\"nofollow\">nose</a>, <a href=\"http://docs.pyinvoke.org/en/latest/\" rel=\"nofollow\">invoke</a>, and MongoDB.</p>\n<div id=\"installing-mongodb\">\n<h3>Installing MongoDB</h3>\n<p>If you are on MacOSX with <a href=\"http://brew.sh/\" rel=\"nofollow\">homebrew</a>, run</p>\n<pre>$ brew update\n$ brew install mongodb\n</pre>\n</div>\n<div id=\"running-tests\">\n<h3>Running Tests</h3>\n<p>To start mongodb, run</p>\n<pre>$ invoke mongo\n</pre>\n<p>Run all tests with</p>\n<pre>$ invoke <span class=\"nb\">test</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2231156, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "04f055d065f46e6f9eb633b06e306c38", "sha256": "9c9abd567d5147349c926433bd98bc2bda2f4786cb2a1e5c880b0ebbf902a633"}, "downloads": -1, "filename": "modular_odm-0.2-py2.7.egg", "has_sig": false, "md5_digest": "04f055d065f46e6f9eb633b06e306c38", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 83238, "upload_time": "2013-10-01T13:56:44", "upload_time_iso_8601": "2013-10-01T13:56:44.040187Z", "url": "https://files.pythonhosted.org/packages/1a/8a/bc09cc274d4613a44387cd501a8271427d358b114e466ff120bbac0f2aa2/modular_odm-0.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b42af5adcb5b403426423dfd9fc2ec7", "sha256": "b4f6160689fa436971a3af1b9ded4e617f53866f7ab6c823742fce4b71ee90a5"}, "downloads": -1, "filename": "modular-odm-0.2.tar.gz", "has_sig": false, "md5_digest": "8b42af5adcb5b403426423dfd9fc2ec7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22723, "upload_time": "2013-10-01T13:56:47", "upload_time_iso_8601": "2013-10-01T13:56:47.510667Z", "url": "https://files.pythonhosted.org/packages/aa/4a/71242df141627d863c827cfff9f2e82d0ada70dfc5aefde5066394e536b2/modular-odm-0.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4f7b7eca543a6016b72950ce94d85fe7", "sha256": "624db71ff7056934d7028239b62e858ff20f9b90d2ae08d6da363c86054dc80e"}, "downloads": -1, "filename": "modular_odm-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f7b7eca543a6016b72950ce94d85fe7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 41951, "upload_time": "2016-07-19T19:20:30", "upload_time_iso_8601": "2016-07-19T19:20:30.373392Z", "url": "https://files.pythonhosted.org/packages/73/d3/f7a5946600a0923fea6a0a8251ba77efb8dcca5a69fb46a757f937b121dc/modular_odm-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2691e495f331b5a8181636928a3b8020", "sha256": "2c0dc303c638ea7bd78e6eaf329a727d0f9a53d4587d32b0930f32abce50fb7a"}, "downloads": -1, "filename": "modular-odm-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2691e495f331b5a8181636928a3b8020", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30669, "upload_time": "2016-07-19T19:20:28", "upload_time_iso_8601": "2016-07-19T19:20:28.020875Z", "url": "https://files.pythonhosted.org/packages/19/45/28fae0332525dccdca49edfc45bb6506020ee94a242cf34bcfa88d580943/modular-odm-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4f7b7eca543a6016b72950ce94d85fe7", "sha256": "624db71ff7056934d7028239b62e858ff20f9b90d2ae08d6da363c86054dc80e"}, "downloads": -1, "filename": "modular_odm-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f7b7eca543a6016b72950ce94d85fe7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 41951, "upload_time": "2016-07-19T19:20:30", "upload_time_iso_8601": "2016-07-19T19:20:30.373392Z", "url": "https://files.pythonhosted.org/packages/73/d3/f7a5946600a0923fea6a0a8251ba77efb8dcca5a69fb46a757f937b121dc/modular_odm-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2691e495f331b5a8181636928a3b8020", "sha256": "2c0dc303c638ea7bd78e6eaf329a727d0f9a53d4587d32b0930f32abce50fb7a"}, "downloads": -1, "filename": "modular-odm-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2691e495f331b5a8181636928a3b8020", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30669, "upload_time": "2016-07-19T19:20:28", "upload_time_iso_8601": "2016-07-19T19:20:28.020875Z", "url": "https://files.pythonhosted.org/packages/19/45/28fae0332525dccdca49edfc45bb6506020ee94a242cf34bcfa88d580943/modular-odm-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:44 2020"}