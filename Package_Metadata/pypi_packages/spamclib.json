{"info": {"author": "wevsty", "author_email": "ty@wevs.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Communications :: Email :: Filters", "Topic :: Software Development :: Libraries"], "description": "# spamclib\n\n------\n\nA SPAMC protocol library.Help you use SpamAssassin's SPAMD service.\n\n# Feature support\n> * Support sync client.\n> * Support async client.\n> * Support TLS.\n\n# Install\npip install spamclib\n\n# Example\n---\n## Sync client\n```Python\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\nfrom spamclib.spamc_sync_client import SyncSpamcClient\n\nGTUBE = '''\nSubject: Test spam mail (GTUBE)\nMessage-ID: <GTUBE1.1010101@example.net>\nDate: Wed, 23 Jul 2003 23:30:00 +0200\nFrom: Sender <sender@example.net>\nTo: Recipient <recipient@example.net>\nPrecedence: junk\nMIME-Version: 1.0\nContent-Type: text/plain; charset=us-ascii\nContent-Transfer-Encoding: 7bit\n\nThis is the GTUBE, the\n\tGeneric\n\tTest for\n\tUnsolicited\n\tBulk\n\tEmail\n\nIf your spam filter supports it, the GTUBE provides a test by which you\ncan verify that the filter is installed correctly and is detecting incoming\nspam. You can send yourself a test mail containing the following string of\ncharacters (in upper case and with no white spaces and line breaks):\n\nXJS*C4JDBQADN1.NSBN3*2IDNEN*GTUBE-STANDARD-ANTI-UBE-TEST-EMAIL*C.34X\n\nYou should send this test mail from an account outside of your network.\n\n'''\n\nif __name__ == '__main__':\n    sc = SyncSpamcClient()\n    # ping cannot support SpamAssassinForWindows\n    sc.command_ping()\n    sc.command_skip()\n    res = sc.command_check(GTUBE.encode('utf-8'))\n    print(res)\n    print('Status code : %d' % res.status_code)\n    print('Status message : %s' % res.status_message.decode('utf-8'))\n    print('Header item Spam : %s' % res.get_header(b'Spam').decode('utf-8'))\n    print('Response body : %s' % res.body.decode('utf-8'))\n    sc.command_headers(GTUBE.encode('utf-8'))\n    sc.command_process(GTUBE.encode('utf-8'))\n    sc.command_report(GTUBE.encode('utf-8'))\n    sc.command_report_ifspam(GTUBE.encode('utf-8'))\n    sc.command_symbols(GTUBE.encode('utf-8'))\n    pass\n\n```\n---\n## Async client\n```Python\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\nimport asyncio\nfrom spamclib.spamc_async_client import AsyncSpamcClient\n\nGTUBE = '''\nSubject: Test spam mail (GTUBE)\nMessage-ID: <GTUBE1.1010101@example.net>\nDate: Wed, 23 Jul 2003 23:30:00 +0200\nFrom: Sender <sender@example.net>\nTo: Recipient <recipient@example.net>\nPrecedence: junk\nMIME-Version: 1.0\nContent-Type: text/plain; charset=us-ascii\nContent-Transfer-Encoding: 7bit\n\nThis is the GTUBE, the\n\tGeneric\n\tTest for\n\tUnsolicited\n\tBulk\n\tEmail\n\nIf your spam filter supports it, the GTUBE provides a test by which you\ncan verify that the filter is installed correctly and is detecting incoming\nspam. You can send yourself a test mail containing the following string of\ncharacters (in upper case and with no white spaces and line breaks):\n\nXJS*C4JDBQADN1.NSBN3*2IDNEN*GTUBE-STANDARD-ANTI-UBE-TEST-EMAIL*C.34X\n\nYou should send this test mail from an account outside of your network.\n\n'''\nbytes_GTUBE = GTUBE.encode('utf-8')\nif __name__ == '__main__':\n    loop = asyncio.get_event_loop()\n    sc = AsyncSpamcClient(loop=loop)\n    # ping cannot support SpamAssassinForWindows\n    loop.run_until_complete(sc.command_ping())\n    loop.run_until_complete(sc.command_skip())\n    res = loop.run_until_complete(sc.command_check(bytes_GTUBE))\n    print(res)\n    print('Status code : %d' % res.status_code)\n    print('Status message : %s' % res.status_message.decode('utf-8'))\n    print('Header item Spam : %s' % res.get_header(b'Spam').decode('utf-8'))\n    print('Response body : %s' % res.body.decode('utf-8'))\n    loop.run_until_complete(sc.command_headers(bytes_GTUBE))\n    loop.run_until_complete(sc.command_process(bytes_GTUBE))\n    loop.run_until_complete(sc.command_report(bytes_GTUBE))\n    loop.run_until_complete(sc.command_report_ifspam(bytes_GTUBE))\n    loop.run_until_complete(sc.command_symbols(bytes_GTUBE))\n    pass\n\n\n\n```\n---\n# License\nMIT License\n\n# Thanks\nPart of the project reference [aiospamc](https://github.com/mjcaley/aiospamc)\nThanks mjcaley\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wevsty/spamclib", "keywords": "spam spamc spamd spamassassin", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "spamclib", "package_url": "https://pypi.org/project/spamclib/", "platform": "", "project_url": "https://pypi.org/project/spamclib/", "project_urls": {"Homepage": "https://github.com/wevsty/spamclib"}, "release_url": "https://pypi.org/project/spamclib/0.0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A SPAMC protocol library.Help you use SpamAssassin's SPAMD service.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>spamclib</h1>\n<hr>\n<p>A SPAMC protocol library.Help you use SpamAssassin's SPAMD service.</p>\n<h1>Feature support</h1>\n<blockquote>\n<ul>\n<li>Support sync client.</li>\n<li>Support async client.</li>\n<li>Support TLS.</li>\n</ul>\n</blockquote>\n<h1>Install</h1>\n<p>pip install spamclib</p>\n<h1>Example</h1>\n<hr>\n<h2>Sync client</h2>\n<pre><span class=\"ch\">#!/usr/bin/python3</span>\n<span class=\"c1\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">spamclib.spamc_sync_client</span> <span class=\"kn\">import</span> <span class=\"n\">SyncSpamcClient</span>\n\n<span class=\"n\">GTUBE</span> <span class=\"o\">=</span> <span class=\"s1\">'''</span>\n<span class=\"s1\">Subject: Test spam mail (GTUBE)</span>\n<span class=\"s1\">Message-ID: &lt;GTUBE1.1010101@example.net&gt;</span>\n<span class=\"s1\">Date: Wed, 23 Jul 2003 23:30:00 +0200</span>\n<span class=\"s1\">From: Sender &lt;sender@example.net&gt;</span>\n<span class=\"s1\">To: Recipient &lt;recipient@example.net&gt;</span>\n<span class=\"s1\">Precedence: junk</span>\n<span class=\"s1\">MIME-Version: 1.0</span>\n<span class=\"s1\">Content-Type: text/plain; charset=us-ascii</span>\n<span class=\"s1\">Content-Transfer-Encoding: 7bit</span>\n\n<span class=\"s1\">This is the GTUBE, the</span>\n<span class=\"s1\">\tGeneric</span>\n<span class=\"s1\">\tTest for</span>\n<span class=\"s1\">\tUnsolicited</span>\n<span class=\"s1\">\tBulk</span>\n<span class=\"s1\">\tEmail</span>\n\n<span class=\"s1\">If your spam filter supports it, the GTUBE provides a test by which you</span>\n<span class=\"s1\">can verify that the filter is installed correctly and is detecting incoming</span>\n<span class=\"s1\">spam. You can send yourself a test mail containing the following string of</span>\n<span class=\"s1\">characters (in upper case and with no white spaces and line breaks):</span>\n\n<span class=\"s1\">XJS*C4JDBQADN1.NSBN3*2IDNEN*GTUBE-STANDARD-ANTI-UBE-TEST-EMAIL*C.34X</span>\n\n<span class=\"s1\">You should send this test mail from an account outside of your network.</span>\n\n<span class=\"s1\">'''</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">sc</span> <span class=\"o\">=</span> <span class=\"n\">SyncSpamcClient</span><span class=\"p\">()</span>\n    <span class=\"c1\"># ping cannot support SpamAssassinForWindows</span>\n    <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_ping</span><span class=\"p\">()</span>\n    <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_skip</span><span class=\"p\">()</span>\n    <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_check</span><span class=\"p\">(</span><span class=\"n\">GTUBE</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Status code : </span><span class=\"si\">%d</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">status_code</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Status message : </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">status_message</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Header item Spam : </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">get_header</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'Spam'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Response body : </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n    <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_headers</span><span class=\"p\">(</span><span class=\"n\">GTUBE</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n    <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_process</span><span class=\"p\">(</span><span class=\"n\">GTUBE</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n    <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_report</span><span class=\"p\">(</span><span class=\"n\">GTUBE</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n    <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_report_ifspam</span><span class=\"p\">(</span><span class=\"n\">GTUBE</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n    <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_symbols</span><span class=\"p\">(</span><span class=\"n\">GTUBE</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n    <span class=\"k\">pass</span>\n</pre>\n<hr>\n<h2>Async client</h2>\n<pre><span class=\"ch\">#!/usr/bin/python3</span>\n<span class=\"c1\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spamclib.spamc_async_client</span> <span class=\"kn\">import</span> <span class=\"n\">AsyncSpamcClient</span>\n\n<span class=\"n\">GTUBE</span> <span class=\"o\">=</span> <span class=\"s1\">'''</span>\n<span class=\"s1\">Subject: Test spam mail (GTUBE)</span>\n<span class=\"s1\">Message-ID: &lt;GTUBE1.1010101@example.net&gt;</span>\n<span class=\"s1\">Date: Wed, 23 Jul 2003 23:30:00 +0200</span>\n<span class=\"s1\">From: Sender &lt;sender@example.net&gt;</span>\n<span class=\"s1\">To: Recipient &lt;recipient@example.net&gt;</span>\n<span class=\"s1\">Precedence: junk</span>\n<span class=\"s1\">MIME-Version: 1.0</span>\n<span class=\"s1\">Content-Type: text/plain; charset=us-ascii</span>\n<span class=\"s1\">Content-Transfer-Encoding: 7bit</span>\n\n<span class=\"s1\">This is the GTUBE, the</span>\n<span class=\"s1\">\tGeneric</span>\n<span class=\"s1\">\tTest for</span>\n<span class=\"s1\">\tUnsolicited</span>\n<span class=\"s1\">\tBulk</span>\n<span class=\"s1\">\tEmail</span>\n\n<span class=\"s1\">If your spam filter supports it, the GTUBE provides a test by which you</span>\n<span class=\"s1\">can verify that the filter is installed correctly and is detecting incoming</span>\n<span class=\"s1\">spam. You can send yourself a test mail containing the following string of</span>\n<span class=\"s1\">characters (in upper case and with no white spaces and line breaks):</span>\n\n<span class=\"s1\">XJS*C4JDBQADN1.NSBN3*2IDNEN*GTUBE-STANDARD-ANTI-UBE-TEST-EMAIL*C.34X</span>\n\n<span class=\"s1\">You should send this test mail from an account outside of your network.</span>\n\n<span class=\"s1\">'''</span>\n<span class=\"n\">bytes_GTUBE</span> <span class=\"o\">=</span> <span class=\"n\">GTUBE</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">sc</span> <span class=\"o\">=</span> <span class=\"n\">AsyncSpamcClient</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n    <span class=\"c1\"># ping cannot support SpamAssassinForWindows</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_ping</span><span class=\"p\">())</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_skip</span><span class=\"p\">())</span>\n    <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_check</span><span class=\"p\">(</span><span class=\"n\">bytes_GTUBE</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Status code : </span><span class=\"si\">%d</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">status_code</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Status message : </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">status_message</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Header item Spam : </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">get_header</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'Spam'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Response body : </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_headers</span><span class=\"p\">(</span><span class=\"n\">bytes_GTUBE</span><span class=\"p\">))</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_process</span><span class=\"p\">(</span><span class=\"n\">bytes_GTUBE</span><span class=\"p\">))</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_report</span><span class=\"p\">(</span><span class=\"n\">bytes_GTUBE</span><span class=\"p\">))</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_report_ifspam</span><span class=\"p\">(</span><span class=\"n\">bytes_GTUBE</span><span class=\"p\">))</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">command_symbols</span><span class=\"p\">(</span><span class=\"n\">bytes_GTUBE</span><span class=\"p\">))</span>\n    <span class=\"k\">pass</span>\n</pre>\n<hr>\n<h1>License</h1>\n<p>MIT License</p>\n<h1>Thanks</h1>\n<p>Part of the project reference <a href=\"https://github.com/mjcaley/aiospamc\" rel=\"nofollow\">aiospamc</a>\nThanks mjcaley</p>\n\n          </div>"}, "last_serial": 4711337, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "acdfcefb333ad00c978775213eda69bb", "sha256": "5ba86be8343611fb9076bb73c23da08b2a404e401554ec90f814c8cd7bf4443b"}, "downloads": -1, "filename": "spamclib-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "acdfcefb333ad00c978775213eda69bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10523, "upload_time": "2019-01-18T08:50:00", "upload_time_iso_8601": "2019-01-18T08:50:00.690672Z", "url": "https://files.pythonhosted.org/packages/78/b5/d07187a7913989e6147b2cfdd7d58d03fe209954bd091ca895facb2a7642/spamclib-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c29a6740ac5fb488a76426e7094423ef", "sha256": "9387014856139767b88d8228dad12ecf1bbf23cd4d867a6f500defc3c27111f4"}, "downloads": -1, "filename": "spamclib-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c29a6740ac5fb488a76426e7094423ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8015, "upload_time": "2019-01-18T08:50:02", "upload_time_iso_8601": "2019-01-18T08:50:02.508658Z", "url": "https://files.pythonhosted.org/packages/5d/3b/6d69f659cdb5e66db2fa79a52bbfa388557f45f99e9027b994de28ed51aa/spamclib-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "acdfcefb333ad00c978775213eda69bb", "sha256": "5ba86be8343611fb9076bb73c23da08b2a404e401554ec90f814c8cd7bf4443b"}, "downloads": -1, "filename": "spamclib-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "acdfcefb333ad00c978775213eda69bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10523, "upload_time": "2019-01-18T08:50:00", "upload_time_iso_8601": "2019-01-18T08:50:00.690672Z", "url": "https://files.pythonhosted.org/packages/78/b5/d07187a7913989e6147b2cfdd7d58d03fe209954bd091ca895facb2a7642/spamclib-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c29a6740ac5fb488a76426e7094423ef", "sha256": "9387014856139767b88d8228dad12ecf1bbf23cd4d867a6f500defc3c27111f4"}, "downloads": -1, "filename": "spamclib-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c29a6740ac5fb488a76426e7094423ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8015, "upload_time": "2019-01-18T08:50:02", "upload_time_iso_8601": "2019-01-18T08:50:02.508658Z", "url": "https://files.pythonhosted.org/packages/5d/3b/6d69f659cdb5e66db2fa79a52bbfa388557f45f99e9027b994de28ed51aa/spamclib-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:00 2020"}