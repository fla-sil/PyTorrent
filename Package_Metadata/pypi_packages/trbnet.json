{"info": {"author": "Philipp Klaus", "author_email": "klaus@physik.uni-frankfurt.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator", "Topic :: Scientific/Engineering :: Physics", "Topic :: System :: Hardware :: Hardware Drivers"], "description": "PyTrbNet\n========\n\nThis is a Python package wrapping libtrbnet.so. It allows accessing\ntrbnet registers from Python.\n\nThe package comes with two additional features:\n\n-  XmlDb support. Allows to query registers by their name as specified\n   in the corresponding xml file.\n-  PCASpy-based EPICS IOC providing TrbNet register status information\n   to the EPICS detector control system.\n\nInstallation\n~~~~~~~~~~~~\n\nThis package can be installed from the Python Package Index via:\n\n::\n\n   pip install trbnet\n\nConfiguration / Setup\n~~~~~~~~~~~~~~~~~~~~~\n\nAs this Python package depends on the shared library libtrbnet.so for\nthe communication with TrbNet, its location needs to be provided. This\ncan be done by setting the environment variable ``LIBTRBNET``.\n\nlibtrbnet.so in turn requires the environment variables ``DAQOPSERVER``\n(if talking to TrbNet via a trbnetd daemon) or the IP of a TRB Board:\n``TRB3_SERVER`` (if talking to TrbNet directly).\n\nA fourth environment variable ``XMLDB`` comes into play, if the xmldb\ncapabilities of this Python package are to be used. It should point to\nthe location of the xml-db for your system.\n\nThose environment variables can also be set from within Python with\ntheir lowercase variants ``libtrbnet``, ``daqopserver``, and\n``trb3_server`` upon instantiating the TrbNet() class.\n\nHere\u2019s an example using environment variables in the shell:\n\n.. code:: sh\n\n   # Setting the relevant environment variables\n   export LIBTRBNET=/local/gitrepos/trbnettools/trbnetd/libtrbnet.so\n   export DAQOPSERVER=jspc55.x-matter.uni-frankfurt.de:1\n   export XMLDB=~/phd/workrepos/daqtools/xml-db/database\n\n   # example call to get the value in the compile time\n   # register for all reachable TRBs:\n   trbcmd.py xmlget 0xffff TrbNet CompileTime\n\n   # With the environment variables set, you could also\n   # run Python and nstantiate TrbNet(). It would\n   # pick up the settings from the exported variables.\n\nor by setting the variables from within Python:\n\n.. code:: python\n\n   import os\n   from trbnet import TrbNet\n\n   lib = '/local/gitrepos/trbnettools/trbnetd/libtrbnet.so'\n   host = 'trbnetd_host:8888'\n   t = TrbNet(libtrbnet=lib, daqopserver=host)\n   # 0x40 is the register address of CompileTime\n   t.register_read(0xffff, 0x40)\n\nUsage with Python\n~~~~~~~~~~~~~~~~~\n\nTo read the content of the register address 0x0 for all connected TrbNet\nboards (broadcast address 0xffff), do:\n\n.. code:: python\n\n   import os\n   from trbnet import TrbNet\n\n   t = TrbNet()\n\n   response = t.register_read(0xffff, 0x0)\n   for endpoint in response:\n       print(\"endpoint 0x{:08X} responded with: 0x{:08X}\".format(endpoint, response[endpoint]))\n\nThe TrbNet() class has the following methods:\n\n-  ``register_read(trb_address, reg_address)``\n-  ``register_write(trb_address, reg_address, value)``\n-  ``register_read_mem(trb_address, reg_address, option, size)``\n-  ``read_uid(trb_address)``\n-  ``trb_set_address(uid, endpoint, trb_address)``\n-  and some more less frequently used methods (found in the source code\n   of `trbnet/core/lowlevel.py <trbnet/core/lowlevel.py>`__).\n\nUsage of the Terminal Utility trbcmd.py\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe package comes with a simple command line utility called\n``trbcmd.py``. It is a Python counterpart for the trbcmd utility\nprovided by trbnettools.\n\nWhat it can do:\n\n**read register values**\n\n::\n\n   trbcmd.py r 0xffff 0x0\n\n**read memory (subsequent register addresses)**\n\nRead three registers starting at 0x8005 from all boards:\n\n::\n\n   trbcmd.py rm 0xffff 0x8005 0x3 0x0\n\n**xml-db queries**\n\nAsk all TrbNet nodes (broadcast 0xffff) for the register value of\nCompileTime as set in TrbNet.xml:\n\n::\n\n   trbcmd.py xmlget 0xffff TrbNet       CompileTime\n\nResources\n~~~~~~~~~\n\n-  `The TRB Website <http://trb.gsi.de>`__\n-  `TrbNet\n   Manual <http://jspc29.x-matter.uni-frankfurt.de/docu/trbnetdocu.pdf>`__\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pklaus/pytrbnet", "keywords": "TrbNet PyTrbNet FPGA Low-latency network wrapper", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "trbnet", "package_url": "https://pypi.org/project/trbnet/", "platform": "Linux", "project_url": "https://pypi.org/project/trbnet/", "project_urls": {"Homepage": "https://github.com/pklaus/pytrbnet"}, "release_url": "https://pypi.org/project/trbnet/1.0.4/", "requires_dist": ["lxml", "click", "enum34 ; python_version < \"3.4\""], "requires_python": "", "summary": "Interface to TrbNet (wrapping libtrbnet.so with ctypes)", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a Python package wrapping libtrbnet.so. It allows accessing\ntrbnet registers from Python.</p>\n<p>The package comes with two additional features:</p>\n<ul>\n<li>XmlDb support. Allows to query registers by their name as specified\nin the corresponding xml file.</li>\n<li>PCASpy-based EPICS IOC providing TrbNet register status information\nto the EPICS detector control system.</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This package can be installed from the Python Package Index via:</p>\n<pre>pip install trbnet\n</pre>\n</div>\n<div id=\"configuration-setup\">\n<h2>Configuration / Setup</h2>\n<p>As this Python package depends on the shared library libtrbnet.so for\nthe communication with TrbNet, its location needs to be provided. This\ncan be done by setting the environment variable <tt>LIBTRBNET</tt>.</p>\n<p>libtrbnet.so in turn requires the environment variables <tt>DAQOPSERVER</tt>\n(if talking to TrbNet via a trbnetd daemon) or the IP of a TRB Board:\n<tt>TRB3_SERVER</tt> (if talking to TrbNet directly).</p>\n<p>A fourth environment variable <tt>XMLDB</tt> comes into play, if the xmldb\ncapabilities of this Python package are to be used. It should point to\nthe location of the xml-db for your system.</p>\n<p>Those environment variables can also be set from within Python with\ntheir lowercase variants <tt>libtrbnet</tt>, <tt>daqopserver</tt>, and\n<tt>trb3_server</tt> upon instantiating the TrbNet() class.</p>\n<p>Here\u2019s an example using environment variables in the shell:</p>\n<pre><span class=\"c1\"># Setting the relevant environment variables\n</span><span class=\"nb\">export</span> <span class=\"nv\">LIBTRBNET</span><span class=\"o\">=</span>/local/gitrepos/trbnettools/trbnetd/libtrbnet.so\n<span class=\"nb\">export</span> <span class=\"nv\">DAQOPSERVER</span><span class=\"o\">=</span>jspc55.x-matter.uni-frankfurt.de:1\n<span class=\"nb\">export</span> <span class=\"nv\">XMLDB</span><span class=\"o\">=</span>~/phd/workrepos/daqtools/xml-db/database\n\n<span class=\"c1\"># example call to get the value in the compile time\n# register for all reachable TRBs:\n</span>trbcmd.py xmlget 0xffff TrbNet CompileTime\n\n<span class=\"c1\"># With the environment variables set, you could also\n# run Python and nstantiate TrbNet(). It would\n# pick up the settings from the exported variables.</span>\n</pre>\n<p>or by setting the variables from within Python:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">trbnet</span> <span class=\"kn\">import</span> <span class=\"n\">TrbNet</span>\n\n<span class=\"n\">lib</span> <span class=\"o\">=</span> <span class=\"s1\">'/local/gitrepos/trbnettools/trbnetd/libtrbnet.so'</span>\n<span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"s1\">'trbnetd_host:8888'</span>\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">TrbNet</span><span class=\"p\">(</span><span class=\"n\">libtrbnet</span><span class=\"o\">=</span><span class=\"n\">lib</span><span class=\"p\">,</span> <span class=\"n\">daqopserver</span><span class=\"o\">=</span><span class=\"n\">host</span><span class=\"p\">)</span>\n<span class=\"c1\"># 0x40 is the register address of CompileTime</span>\n<span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">register_read</span><span class=\"p\">(</span><span class=\"mh\">0xffff</span><span class=\"p\">,</span> <span class=\"mh\">0x40</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"usage-with-python\">\n<h2>Usage with Python</h2>\n<p>To read the content of the register address 0x0 for all connected TrbNet\nboards (broadcast address 0xffff), do:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">trbnet</span> <span class=\"kn\">import</span> <span class=\"n\">TrbNet</span>\n\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">TrbNet</span><span class=\"p\">()</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">register_read</span><span class=\"p\">(</span><span class=\"mh\">0xffff</span><span class=\"p\">,</span> <span class=\"mh\">0x0</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">endpoint</span> <span class=\"ow\">in</span> <span class=\"n\">response</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"endpoint 0x</span><span class=\"si\">{:08X}</span><span class=\"s2\"> responded with: 0x</span><span class=\"si\">{:08X}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">[</span><span class=\"n\">endpoint</span><span class=\"p\">]))</span>\n</pre>\n<p>The TrbNet() class has the following methods:</p>\n<ul>\n<li><tt>register_read(trb_address, reg_address)</tt></li>\n<li><tt>register_write(trb_address, reg_address, value)</tt></li>\n<li><tt>register_read_mem(trb_address, reg_address, option, size)</tt></li>\n<li><tt>read_uid(trb_address)</tt></li>\n<li><tt>trb_set_address(uid, endpoint, trb_address)</tt></li>\n<li>and some more less frequently used methods (found in the source code\nof <a href=\"trbnet/core/lowlevel.py\" rel=\"nofollow\">trbnet/core/lowlevel.py</a>).</li>\n</ul>\n</div>\n<div id=\"usage-of-the-terminal-utility-trbcmd-py\">\n<h2>Usage of the Terminal Utility trbcmd.py</h2>\n<p>The package comes with a simple command line utility called\n<tt>trbcmd.py</tt>. It is a Python counterpart for the trbcmd utility\nprovided by trbnettools.</p>\n<p>What it can do:</p>\n<p><strong>read register values</strong></p>\n<pre>trbcmd.py r 0xffff 0x0\n</pre>\n<p><strong>read memory (subsequent register addresses)</strong></p>\n<p>Read three registers starting at 0x8005 from all boards:</p>\n<pre>trbcmd.py rm 0xffff 0x8005 0x3 0x0\n</pre>\n<p><strong>xml-db queries</strong></p>\n<p>Ask all TrbNet nodes (broadcast 0xffff) for the register value of\nCompileTime as set in TrbNet.xml:</p>\n<pre>trbcmd.py xmlget 0xffff TrbNet       CompileTime\n</pre>\n</div>\n<div id=\"resources\">\n<h2>Resources</h2>\n<ul>\n<li><a href=\"http://trb.gsi.de\" rel=\"nofollow\">The TRB Website</a></li>\n<li><a href=\"http://jspc29.x-matter.uni-frankfurt.de/docu/trbnetdocu.pdf\" rel=\"nofollow\">TrbNet\nManual</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6247662, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c35a2df3aadd023b9dc970aed7c4b372", "sha256": "77176057d9c3191a1a9cc2a49c3a89aad97060f679603018c3f3a18ac779dc61"}, "downloads": -1, "filename": "trbnet-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c35a2df3aadd023b9dc970aed7c4b372", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16616, "upload_time": "2018-12-17T10:06:03", "upload_time_iso_8601": "2018-12-17T10:06:03.517026Z", "url": "https://files.pythonhosted.org/packages/5b/80/674d617233b326717fa36cc88dd64e34c9d4666c832bee7d25d6405de695/trbnet-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec9b397ca1c9d8349aed1b32511793aa", "sha256": "869c425e487b7575af3f319e1b6d00633ec6365a8e9f5f44106e02be4acae2e9"}, "downloads": -1, "filename": "trbnet-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ec9b397ca1c9d8349aed1b32511793aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14254, "upload_time": "2018-12-17T10:06:04", "upload_time_iso_8601": "2018-12-17T10:06:04.897830Z", "url": "https://files.pythonhosted.org/packages/94/18/87584995fc6ae0cdfd1c2c0f522d941c7e343d67fc42c5234873689dc6ab/trbnet-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f1c327ee3ace64f842c9cbec0c3475ed", "sha256": "9b2dc9cfc9daca6845d5e4ea467eeb471a97067741ba1ea70fa0e2e954f074c1"}, "downloads": -1, "filename": "trbnet-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f1c327ee3ace64f842c9cbec0c3475ed", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16635, "upload_time": "2018-12-18T10:12:28", "upload_time_iso_8601": "2018-12-18T10:12:28.880401Z", "url": "https://files.pythonhosted.org/packages/50/39/c4296b7b59fc8895830293204a1ba06a4d6d64abe1ae0f05233db83f844d/trbnet-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e340717a23e5508214d96ede408c8ccd", "sha256": "263ffc736cfb3cabe61cc14289f2d7d254edc668ef5a10780664790e1d0501ed"}, "downloads": -1, "filename": "trbnet-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e340717a23e5508214d96ede408c8ccd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14270, "upload_time": "2018-12-18T10:12:30", "upload_time_iso_8601": "2018-12-18T10:12:30.853810Z", "url": "https://files.pythonhosted.org/packages/df/c0/6f59b249253f413ae69f0097fd36e1250a9e4c3918f1c3768166df4858ba/trbnet-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "c9ecf8d9b3a575efec3765b7fa514230", "sha256": "5201838cc3a603652621cd4d4558356dc9a15ba70f251637750afaed9f7c987d"}, "downloads": -1, "filename": "trbnet-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c9ecf8d9b3a575efec3765b7fa514230", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16636, "upload_time": "2018-12-18T10:29:31", "upload_time_iso_8601": "2018-12-18T10:29:31.752124Z", "url": "https://files.pythonhosted.org/packages/a0/9c/061847936425f2f8ab15ed78c26f357cf1cc964335c2c016a62e92300826/trbnet-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "286fbb925e5183a93aaba22210dcd182", "sha256": "b317f978a7b5c076f4b4245df1db45dff25092577595b003dc3225929c28b018"}, "downloads": -1, "filename": "trbnet-1.0.2.tar.gz", "has_sig": false, "md5_digest": "286fbb925e5183a93aaba22210dcd182", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14273, "upload_time": "2018-12-18T10:29:33", "upload_time_iso_8601": "2018-12-18T10:29:33.244142Z", "url": "https://files.pythonhosted.org/packages/f1/c3/95bcfc19e7706210eaba7173b5ef71cb8815edd82458dafa0edd2d7c1fa9/trbnet-1.0.2.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "737f429139a02a1d7ac5ee27572c05c3", "sha256": "20c453c1621f8a966c3c35fb21683830b9a39dd3b307c8675a1a4e70691569e5"}, "downloads": -1, "filename": "trbnet-1.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "737f429139a02a1d7ac5ee27572c05c3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18040, "upload_time": "2019-12-05T14:32:05", "upload_time_iso_8601": "2019-12-05T14:32:05.738168Z", "url": "https://files.pythonhosted.org/packages/92/2c/f0c8d13a5b0f25103af627d58041f2074e627cff4d64f81efe6899225bc3/trbnet-1.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c92494931866a8f8068cbfd45840c540", "sha256": "9776bb84a21b34be8aa901bbdfd38a28e3033cfc9fd81687795afc925186808a"}, "downloads": -1, "filename": "trbnet-1.0.4.tar.gz", "has_sig": false, "md5_digest": "c92494931866a8f8068cbfd45840c540", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17146, "upload_time": "2019-12-05T14:32:08", "upload_time_iso_8601": "2019-12-05T14:32:08.084270Z", "url": "https://files.pythonhosted.org/packages/e6/8d/d23b3542e2eec62e646e8330285571a028cd2ad26de414ced13737b24dff/trbnet-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "737f429139a02a1d7ac5ee27572c05c3", "sha256": "20c453c1621f8a966c3c35fb21683830b9a39dd3b307c8675a1a4e70691569e5"}, "downloads": -1, "filename": "trbnet-1.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "737f429139a02a1d7ac5ee27572c05c3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18040, "upload_time": "2019-12-05T14:32:05", "upload_time_iso_8601": "2019-12-05T14:32:05.738168Z", "url": "https://files.pythonhosted.org/packages/92/2c/f0c8d13a5b0f25103af627d58041f2074e627cff4d64f81efe6899225bc3/trbnet-1.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c92494931866a8f8068cbfd45840c540", "sha256": "9776bb84a21b34be8aa901bbdfd38a28e3033cfc9fd81687795afc925186808a"}, "downloads": -1, "filename": "trbnet-1.0.4.tar.gz", "has_sig": false, "md5_digest": "c92494931866a8f8068cbfd45840c540", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17146, "upload_time": "2019-12-05T14:32:08", "upload_time_iso_8601": "2019-12-05T14:32:08.084270Z", "url": "https://files.pythonhosted.org/packages/e6/8d/d23b3542e2eec62e646e8330285571a028cd2ad26de414ced13737b24dff/trbnet-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:47:46 2020"}