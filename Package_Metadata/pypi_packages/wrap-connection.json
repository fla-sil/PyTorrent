{"info": {"author": "Victor Williams Stafusa da Silva", "author_email": "victorwssilva@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# wrap-connection\nEasily wrap connections and cursors by using decorators.\n\n## Usage example:\n\nA simple usage is this:\n\n```python\ndef make_connection():\n    import sqlite3\n    return sqlite3.connect(\"test.db\")\n\n@transact(make_connection, \"cur\", \"con\")\ndef some_operation(person):\n    insert_sql = \"INSERT INTO persons (id, name) VALUES (?, ?)\"\n    cur.execute(insert_sql, (person.id, person.name))\n    con.commit()\n\n@transact(make_connection)\ndef some_other_operation():\n    select_sql = \"SELECT id, name FROM persons\"\n    result = []\n    cursor.execute(select_sql)\n    for r in cursor.fetchall():\n        result.append(Person(r[0], r[1]))\n    return result\n```\n\nThose will delimite a transaction in the `some_operation` and `some_other_operation` functions. The `make_connection` function is used to get the connection for each transaction.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/victorwss/wrap-connection", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "wrap-connection", "package_url": "https://pypi.org/project/wrap-connection/", "platform": "", "project_url": "https://pypi.org/project/wrap-connection/", "project_urls": {"Homepage": "https://github.com/victorwss/wrap-connection"}, "release_url": "https://pypi.org/project/wrap-connection/2.0.0.0/", "requires_dist": null, "requires_python": "", "summary": "Easily wrap connections and cursors by using decorators.", "version": "2.0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>wrap-connection</h1>\n<p>Easily wrap connections and cursors by using decorators.</p>\n<h2>Usage example:</h2>\n<p>A simple usage is this:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">make_connection</span><span class=\"p\">():</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">sqlite3</span>\n    <span class=\"k\">return</span> <span class=\"n\">sqlite3</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s2\">\"test.db\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@transact</span><span class=\"p\">(</span><span class=\"n\">make_connection</span><span class=\"p\">,</span> <span class=\"s2\">\"cur\"</span><span class=\"p\">,</span> <span class=\"s2\">\"con\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_operation</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">):</span>\n    <span class=\"n\">insert_sql</span> <span class=\"o\">=</span> <span class=\"s2\">\"INSERT INTO persons (id, name) VALUES (?, ?)\"</span>\n    <span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">insert_sql</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n    <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@transact</span><span class=\"p\">(</span><span class=\"n\">make_connection</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_other_operation</span><span class=\"p\">():</span>\n    <span class=\"n\">select_sql</span> <span class=\"o\">=</span> <span class=\"s2\">\"SELECT id, name FROM persons\"</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">select_sql</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">fetchall</span><span class=\"p\">():</span>\n        <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">r</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n</pre>\n<p>Those will delimite a transaction in the <code>some_operation</code> and <code>some_other_operation</code> functions. The <code>make_connection</code> function is used to get the connection for each transaction.</p>\n\n          </div>"}, "last_serial": 5610309, "releases": {"1.0.0.1": [{"comment_text": "", "digests": {"md5": "5226a603a3a8c72ac759c3c22f9deefb", "sha256": "e233fba6a9c35e8c6cadc483311f9e66383b0506b9487ab37cefdaf4cb6ac25e"}, "downloads": -1, "filename": "wrap-connection-1.0.0.1.tar.gz", "has_sig": false, "md5_digest": "5226a603a3a8c72ac759c3c22f9deefb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2020, "upload_time": "2019-04-18T19:33:40", "upload_time_iso_8601": "2019-04-18T19:33:40.901576Z", "url": "https://files.pythonhosted.org/packages/93/cd/705d24d1802dfc48e1c658ca7c8a9101026d9b79ff8345671636884f1907/wrap-connection-1.0.0.1.tar.gz", "yanked": false}], "1.0.0.2": [{"comment_text": "", "digests": {"md5": "8f4dc1b62fd39ecde987d132bf7afcba", "sha256": "3c3245839089e3746791d4ae9639a2309d24704a821f281035337cf92fd70460"}, "downloads": -1, "filename": "wrap-connection-1.0.0.2.tar.gz", "has_sig": false, "md5_digest": "8f4dc1b62fd39ecde987d132bf7afcba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2152, "upload_time": "2019-04-22T17:53:50", "upload_time_iso_8601": "2019-04-22T17:53:50.919293Z", "url": "https://files.pythonhosted.org/packages/38/8e/5fd52925af14fdf769d95ed41add960d288b921f580a3ce6786363f22276/wrap-connection-1.0.0.2.tar.gz", "yanked": false}], "2.0.0.0": [{"comment_text": "", "digests": {"md5": "19d517a585409cf00230e4f5eefe9f9e", "sha256": "50b4ad939dc7ff1caecce0c735ca93d15784e86326762fc0242066abe16d54b5"}, "downloads": -1, "filename": "wrap-connection-2.0.0.0.tar.gz", "has_sig": false, "md5_digest": "19d517a585409cf00230e4f5eefe9f9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2793, "upload_time": "2019-07-30T21:55:35", "upload_time_iso_8601": "2019-07-30T21:55:35.864833Z", "url": "https://files.pythonhosted.org/packages/65/dc/fe4358d481e154086ec4fadaaffae6fbe3cb175697d901ac23c5c23f9c13/wrap-connection-2.0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "19d517a585409cf00230e4f5eefe9f9e", "sha256": "50b4ad939dc7ff1caecce0c735ca93d15784e86326762fc0242066abe16d54b5"}, "downloads": -1, "filename": "wrap-connection-2.0.0.0.tar.gz", "has_sig": false, "md5_digest": "19d517a585409cf00230e4f5eefe9f9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2793, "upload_time": "2019-07-30T21:55:35", "upload_time_iso_8601": "2019-07-30T21:55:35.864833Z", "url": "https://files.pythonhosted.org/packages/65/dc/fe4358d481e154086ec4fadaaffae6fbe3cb175697d901ac23c5c23f9c13/wrap-connection-2.0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:22 2020"}