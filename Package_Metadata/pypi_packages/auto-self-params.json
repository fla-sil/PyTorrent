{"info": {"author": "Steve Barmes", "author_email": "gadgetsteve@hotmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "auto_self_params\n----------------\n\nA python package to automatically assign parameters to self. This enables\nreplacing code such as:\n\n```python\nclass A:\n    \"\"\" Typical Code. \"\"\"\n    def __init__(self, param1, param2, kwparam1=0, kwparam2=0):\n        \"\"\" Create Example Class.\"\"\"\n        self.param1 = param1\n        self.param2 = param2\n        self.kwparam1 = kwparam1\n        self.kwparam2 = kwparam2\n        # etc.\n```\n\nWith code more like:\n\n```python\nfrom auto_self_params import auto_self_params\n\nclass A:\n    \"\"\" Revised Code. \"\"\"\n    def __init__(self, param1, param2, kwparam1=0, kwparam2=0):\n        \"\"\" Create Example Class.\"\"\"\n        auto_self_params.auto_self_params(locals())  # Assign all parameters to self\n        # etc.\n```\n\n**Only** use this package if you need the paramters passed to `__init__` to\nproduce matching names in self when called.\n\nYou can, _however_, create a dictionary with locals and remove unwanted\nparamters before passing it to `auto_self_params` so as to exclude unwanted\nparameters.\n\nIf you would like to use the:\n `def __init__(self, *args, **kwargs):`\nformat then you may wish to use a pattern such as:\n\n```python\nfrom auto_self_params import auto_self_params\n\nclass A:\n    \"\"\" Revised Code. \"\"\"\n    def __init__(self,  *args, **kwargs):\n        \"\"\" Create Example Class.\"\"\"\n        param_dict = {'self': self, 'args': args, **kwargs}\n        auto_self_params.auto_self_params(param_dict)  # Assign parameters to self\n        # etc.\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/GadgetSteve/auto_self_params", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "auto-self-params", "package_url": "https://pypi.org/project/auto-self-params/", "platform": "", "project_url": "https://pypi.org/project/auto-self-params/", "project_urls": {"Homepage": "https://github.com/GadgetSteve/auto_self_params"}, "release_url": "https://pypi.org/project/auto-self-params/0.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Automatic creation of self properties from parameters.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>auto_self_params</h2>\n<p>A python package to automatically assign parameters to self. This enables\nreplacing code such as:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\" Typical Code. \"\"\"</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">param1</span><span class=\"p\">,</span> <span class=\"n\">param2</span><span class=\"p\">,</span> <span class=\"n\">kwparam1</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">kwparam2</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" Create Example Class.\"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">param1</span> <span class=\"o\">=</span> <span class=\"n\">param1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">param2</span> <span class=\"o\">=</span> <span class=\"n\">param2</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kwparam1</span> <span class=\"o\">=</span> <span class=\"n\">kwparam1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kwparam2</span> <span class=\"o\">=</span> <span class=\"n\">kwparam2</span>\n        <span class=\"c1\"># etc.</span>\n</pre>\n<p>With code more like:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">auto_self_params</span> <span class=\"kn\">import</span> <span class=\"n\">auto_self_params</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\" Revised Code. \"\"\"</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">param1</span><span class=\"p\">,</span> <span class=\"n\">param2</span><span class=\"p\">,</span> <span class=\"n\">kwparam1</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">kwparam2</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" Create Example Class.\"\"\"</span>\n        <span class=\"n\">auto_self_params</span><span class=\"o\">.</span><span class=\"n\">auto_self_params</span><span class=\"p\">(</span><span class=\"nb\">locals</span><span class=\"p\">())</span>  <span class=\"c1\"># Assign all parameters to self</span>\n        <span class=\"c1\"># etc.</span>\n</pre>\n<p><strong>Only</strong> use this package if you need the paramters passed to <code>__init__</code> to\nproduce matching names in self when called.</p>\n<p>You can, <em>however</em>, create a dictionary with locals and remove unwanted\nparamters before passing it to <code>auto_self_params</code> so as to exclude unwanted\nparameters.</p>\n<p>If you would like to use the:\n<code>def __init__(self, *args, **kwargs):</code>\nformat then you may wish to use a pattern such as:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">auto_self_params</span> <span class=\"kn\">import</span> <span class=\"n\">auto_self_params</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\" Revised Code. \"\"\"</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>  <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" Create Example Class.\"\"\"</span>\n        <span class=\"n\">param_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'self'</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s1\">'args'</span><span class=\"p\">:</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">}</span>\n        <span class=\"n\">auto_self_params</span><span class=\"o\">.</span><span class=\"n\">auto_self_params</span><span class=\"p\">(</span><span class=\"n\">param_dict</span><span class=\"p\">)</span>  <span class=\"c1\"># Assign parameters to self</span>\n        <span class=\"c1\"># etc.</span>\n</pre>\n\n          </div>"}, "last_serial": 7178326, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "47b913601a7c103ff55e219475151533", "sha256": "6bc70bdbad77cda2368121339798fecedfa988bab8fb40d16e4701c1070b6ba6"}, "downloads": -1, "filename": "auto_self_params-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "47b913601a7c103ff55e219475151533", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3588, "upload_time": "2020-05-05T15:24:01", "upload_time_iso_8601": "2020-05-05T15:24:01.149263Z", "url": "https://files.pythonhosted.org/packages/da/93/c631cd906174f52901555678c10136c9002a99f495953f401f6b73ff88e9/auto_self_params-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0509c5bc608cc1d6a946cdfe420051c", "sha256": "737a251b63513e4fb5f45c39920bcd6ed09b2cfce263384db9c34e09bb2ace48"}, "downloads": -1, "filename": "auto_self_params-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a0509c5bc608cc1d6a946cdfe420051c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2516, "upload_time": "2020-05-05T15:24:03", "upload_time_iso_8601": "2020-05-05T15:24:03.424171Z", "url": "https://files.pythonhosted.org/packages/76/2c/a5faa882b1f209608f76e76f1a6f16d13dc139670cd38e7292855dfef53e/auto_self_params-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "1be1c415e99eea85b40f178cc3453e71", "sha256": "28f77a1cb5b505123dcd45bb4a429921646a27b1358e581bbe9bdbe01e0fbfb2"}, "downloads": -1, "filename": "auto_self_params-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1be1c415e99eea85b40f178cc3453e71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3648, "upload_time": "2020-05-06T07:41:19", "upload_time_iso_8601": "2020-05-06T07:41:19.994424Z", "url": "https://files.pythonhosted.org/packages/d5/57/dfc61eb1167b2e1d4f513715652263e6ebf0650b29fa09c0af34d9e9775e/auto_self_params-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d872247b4beb5e30520994a073c970c4", "sha256": "c6a52f68dddea4261b019f7f7b3599381baa8d1cb1a82f164b3ffcdf0be0a306"}, "downloads": -1, "filename": "auto_self_params-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d872247b4beb5e30520994a073c970c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2594, "upload_time": "2020-05-06T07:41:21", "upload_time_iso_8601": "2020-05-06T07:41:21.868458Z", "url": "https://files.pythonhosted.org/packages/e0/de/b73f3cbe7936fd4eb9c041c84c9e1add72e132d5abb4bfb9dd8b8c2ba7bd/auto_self_params-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1be1c415e99eea85b40f178cc3453e71", "sha256": "28f77a1cb5b505123dcd45bb4a429921646a27b1358e581bbe9bdbe01e0fbfb2"}, "downloads": -1, "filename": "auto_self_params-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1be1c415e99eea85b40f178cc3453e71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3648, "upload_time": "2020-05-06T07:41:19", "upload_time_iso_8601": "2020-05-06T07:41:19.994424Z", "url": "https://files.pythonhosted.org/packages/d5/57/dfc61eb1167b2e1d4f513715652263e6ebf0650b29fa09c0af34d9e9775e/auto_self_params-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d872247b4beb5e30520994a073c970c4", "sha256": "c6a52f68dddea4261b019f7f7b3599381baa8d1cb1a82f164b3ffcdf0be0a306"}, "downloads": -1, "filename": "auto_self_params-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d872247b4beb5e30520994a073c970c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2594, "upload_time": "2020-05-06T07:41:21", "upload_time_iso_8601": "2020-05-06T07:41:21.868458Z", "url": "https://files.pythonhosted.org/packages/e0/de/b73f3cbe7936fd4eb9c041c84c9e1add72e132d5abb4bfb9dd8b8c2ba7bd/auto_self_params-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:09 2020"}