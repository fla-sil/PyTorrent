{"info": {"author": "Standard Ebooks", "author_email": "admin@standardebooks.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": "# About\n\nA collection of tools Standard Ebooks uses to produce its ebooks, including basic setup of ebooks, text processing, and build tools.\n\nInstalling this toolset using `pipx` makes the `se` command line executable available. Its various commands are described below, or you can use `se help` to list them.\n\n# Installation\n\nThe toolset requires Python >= 3.6.\n\nTo install the toolset locally for development and debugging, see [Installation for Developers](#installation-for-developers).\n\n## Ubuntu 18.04 (Bionic) users\n\n```shell\n# Install some pre-flight dependencies.\nsudo apt install -y calibre default-jre git python3-dev python3-pip python3-venv\n\n# Install pipx.\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\n\n# Install the toolset.\npipx install standardebooks\n```\n\n### Optional: Install shell completions\n\n```shell\n# Install ZSH completions.\nsudo ln -s $HOME/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/zsh/_se /usr/share/zsh/vendor-completions/_se && hash -rf && compinit\n\n# Install Bash completions.\nsudo ln -s $HOME/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/bash/se /usr/share/bash-completion/completions/se\n\n# Install Fish completions.\nsudo ln -s $HOME/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/fish/se $HOME/.config/fish/completions/se.fish\n```\n\n## Fedora users\n\n```shell\n# Install some pre-flight dependencies.\nsudo dnf install calibre git java-1.8.0-openjdk python3-devel vim\n\n# Install pipx.\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\n\n# Install the toolset.\npipx install standardebooks\n```\n\n### Optional: Install shell completions\n\n```shell\n# Install ZSH completions.\nsudo ln -s $HOME/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/zsh/_se /usr/share/zsh/vendor-completions/_se && hash -rf && compinit\n\n# Install Bash completions.\nsudo ln -s $HOME/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/bash/se /usr/share/bash-completion/completions/se\n\n# Install Fish completions.\nsudo ln -s $HOME/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/fish/se $HOME/.config/fish/completions/se.fish\n```\n\n## macOS users (up to macOS 10.15)\n\nThese instructions were tested on macOS 10.12 to 10.15.\n\n1. Install the [Homebrew package manager](https://brew.sh). Or, if you already have it installed, make sure it\u2019s up to date:\n\n\t```shell\n\tbrew update\n\t```\n\n2. Install dependencies:\n\n\t```shell\n\t# Install some pre-flight dependencies.\n\tbrew install cairo git pipx python\n\tpipx ensurepath\n\n\t# Install required applications.\n\tbrew cask install java calibre\n\n\t# Install the toolset.\n\tpipx install standardebooks\n\n\t# Optional: Fish users can install tab completion.\n\tln -s $HOME/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/fish/se $HOME/.config/fish/completions/se.fish\n\t```\n## OpenBSD 6.6 Users\n\nThese instructions were tested on OpenBSD 6.6, but may also work on the 6.5 release as well.\n\n1. Create a text file to feed into ```pkg_add``` called `~/standard-ebooks-packages`. It should contain the following:\n\n\t```shell\n\tpy3-pip--\n\tpy3-virtualenv--\n\tpy3-gitdb--\n\tjdk--%11\n\tcalibre--\n\tgit--\n\tvim--\n\t```\nOptionally, replace `vim--` with `vim--gtk3` to include gvim for its Unicode editing features.\n\n2. Install dependencies using ```doas pkg_add -ivl ~/standard-ebooks-packages```. Follow linking instructions provided by ```pkg_add``` to save keystrokes, unless you want to have multiple python versions and pip versions. In my case, I ran ```doas ln -sf /usr/local/bin/pip3.7 /usr/local/bin/pip```.\n\n3. Add ```~/.local/bin``` to your path.\n\n4. Run ```pip install --user pipx```\n\n5. If you\u2019re using ```ksh``` from base and have already added ```~/.local/bin```, you can skip ```pipx ensurepath``` because this step is for ```bash``` users.\n\n6. The rest of the process is similar to that used on other platforms:\n\n\t```shell\n\t# Install the toolset.\n\tpipx install standardebooks\n\t```\n\n## Installation for developers\n\nIf you want to work on the toolset source, it\u2019s helpful to tell `pipx` to install the package in \u201ceditable\u201d mode. This will allow you to edit the source of the package live and see changes immediately, without having to uninstall and re-install the package.\n\nTo do that, follow the general installation instructions above; but instead of doing `pipx install standardebooks`, do the following:\n\n```shell\ngit clone https://github.com/standardebooks/tools.git\npipx install --editable tools\n```\n\nNow the `se` binary is in your path, and any edits you make to source files in the `tools/` directory are immediately reflected when executing the binary.\n\n### Running commands on the entire corpus\n\nAs a developer, it\u2019s often useful to run an `se` command like `se lint` or `se build` on the entire corpus for testing purposes. This can be very time-consuming in a regular command invocation, so it\u2019s suggested to use [GNU Parallel](https://www.gnu.org/software/parallel/) to speed up these commands significantly on machines with multiple cores. For example:\n\n```shell\nparallel -k se lint ::: /path/to/ebook/repos/*\n```\n\nThe toolset tries to detect when it\u2019s being invoked from `parallel`, and it adjusts its output to accomodate.\n\n`parallel` limits the output to 75 columns, even if your terminal emulator is wider. `se lint` can override this by setting a fixed width with the `--wrap` option.\n\n### Linting with `pylint`\n\nBefore we can use `pylint` on the toolset source, we have to inject `pylint` into the venv `pipx` created for the `standardebooks` package:\n\n```shell\npipx inject standardebooks pylint\n```\n\nThen make sure to call the `pylint` binary that `pipx` installed in the `standardebooks` venv, *not* any other globally-installed `pylint` binary:\n\n```shell\ncd /path/to/tools/repo\n$HOME/.local/pipx/venvs/standardebooks/bin/pylint se\n```\n\n### Testing with `pytest`\n\nSimilar to `pylint`, the `pytest` command can be injected into the venv `pipx` created for the `standardebooks` package:\n\n```shell\npipx inject standardebooks pytest\n```\n\nThe tests are executed by calling `pytest` from the top level or your tools repo:\n\n```shell\ncd /path/to/tools/repo\n$HOME/.local/pipx/venvs/standardebooks/bin/pytest\n```\n\n#### Adding tests\n\nTests are added under the `tests` directory. Most of the tests are based around the idea of having \u201cgolden\u201d output files. Each command is run against a set of input files and then the resulting output files are compared against the resulting golden files. The test fails if the output files do not match the golden files. The data files can be found in the `tests/data` directory.\n\nA custom test flag `--save-golden-files` has been added to automatically update the the golden files for the tests (in an `out` directory for the command).\n\nThe usual test development process is:\n\n1. Update `in` files with new test data and/or change the command implementation.\n2. Run `pytest` and see some tests fail.\n3. Run `pytest --save-golden-files` and then diff the data directory to ensure that the `out` files are as expected.\n4. Commit changes (including new `out` contents).\n\nAnother custom test flag `--save-new-draft` is also available. This flag is used to update the book skeleton, generated by the `se create-draft` command, that is used as input for the other tests. Whenever the draft contents change (e.g. edits to the `core.css` file) the `tests/data/draft` files should be updated by calling `pytest --save-new-draft`.\n\n### Code style\n\n- In general we follow a relaxed version of [PEP 8](https://www.python.org/dev/peps/pep-0008/). In particular, we use tabs instead of spaces, and there is no line length limit.\n\n- Always use the `regex` module instead of the `re` module.\n\n# Help wanted\n\nWe need volunteers to take the lead on the following goals:\n\n- Add more test cases to the test framework.\n\n- Figure out if it\u2019s possible to install Bash/ZSH completions using setup.py, *without* root; this may not be possible?\n\n- Writing installation instructions for Bash and ZSH completions for MacOS.\n\n# Tool descriptions\n\n-\t### `se british2american`\n\n\tTry to convert British quote style to American quote style in DIRECTORY/src/epub/text/.\n\n\tQuotes must already be typogrified using the `se typogrify` tool.\n\n\tThis script isn\u2019t perfect; proofreading is required, especially near closing quotes near to em-dashes.\n\n-\t### `se build`\n\n\tBuild an ebook from a Standard Ebook source directory.\n\n-\t### `se build-images`\n\n\tBuild ebook cover and titlepage images in a Standard Ebook source directory and place the output in DIRECTORY/src/epub/images/.\n\n-\t### `se clean`\n\n\tPrettify and canonicalize individual XHTML, SVG, or CSS files, or all XHTML, SVG, or CSS files in a source directory. Note that this only prettifies the source code; it doesn\u2019t perform typography changes.\n\n-\t### `se compare-versions`\n\n\tUse Firefox to render and compare XHTML files in an ebook repository. Run on a dirty repository to visually compare the repository\u2019s dirty state with its clean state. If a file renders differently, place screenshots of the new, original, and diff (if available) renderings in the current working directory. A file called diff.html is created to allow for side-by-side comparisons of original and new files.\n\n-\t### `se create-draft`\n\n\tCreate a skeleton of a new Standard Ebook.\n\n-\t### `se dec2roman`\n\n\tConvert a decimal number to a Roman numeral.\n\n-\t### `se extract-ebook`\n\n\tExtract an EPUB, MOBI, or AZW3 ebook into ./FILENAME.extracted/ or a target directory.\n\n-\t### `se find-mismatched-diacritics`\n\n\tFind words with mismatched diacritics in Standard Ebook source directories. For example, `cafe` in one file and `caf\u00e9` in another.\n\n-\t### `se help`\n\n\tList available SE commands.\n\n-\t### `se hyphenate`\n\n\tInsert soft hyphens at syllable breaks in an XHTML file.\n\n-\t### `se interactive-sr`\n\n\tUse Vim to perform an interactive search and replace on a list of files. Use y/n/a to confirm (y) or reject (n) a replacement, or to replace (a)ll.\n\n-\t### `se lint`\n\n\tCheck for various Standard Ebooks style errors.\n\n-\t### `se make-url-safe`\n\n\tMake a string URL-safe.\n\n-\t### `se modernize-spelling`\n\n\tModernize spelling of some archaic words, and replace words that may be archaically compounded with a dash to a more modern spelling. For example, replace `ash-tray` with `ashtray`.\n\n-\t### `se prepare-release`\n\n\tCalculate work word count, insert release date if not yet set, and update modified date and revision number.\n\n-\t### `se print-manifest`\n\n\tPrint the <manifest> element for the given Standard Ebooks source directory to standard output, for use in that directory\u2019s content.opf.\n\n-\t### `se print-spine`\n\n\tPrint the <spine> element for the given Standard Ebooks source directory to standard output, for use in that directory\u2019s content.opf.\n\n-\t### `se print-title`\n\n\tPrint the expected value for an XHTML file\u2019s `<title>` element.\n\n-\t### `se print-toc`\n\n\tBuild a table of contents for an SE source directory and print to stdout.\n\n-\t### `se recompose-epub`\n\n\tRecompose a Standard Ebooks source directory into a single HTML5 file, and print to standard output.\n\n-\t### `se renumber-endnotes`\n\n\tRenumber all endnotes and noterefs sequentially from the beginning.\n\n-\t### `se reorder-endnotes`\n\n\tIncrement the specified endnote and all following endnotes by 1.\n\n-\t### `se roman2dec`\n\n\tConvert a Roman numeral to a decimal number.\n\n-\t### `se semanticate`\n\n\tApply some scriptable semantics rules from the Standard Ebooks semantics manual to a Standard Ebook source directory.\n\n-\t### `se split-file`\n\n\tSplit an XHTML file into many files at all instances of `<!--se:split-->`, and include a header template for each file.\n\n-\t### `se titlecase`\n\n\tConvert a string to titlecase.\n\n-\t### `se typogrify`\n\n\tApply some scriptable typography rules from the Standard Ebooks typography manual to a Standard Ebook source directory.\n\n-\t### `se unicode-names`\n\n\tDisplay Unicode code points, descriptions, and links to more details for each character in a string. Useful for differentiating between different flavors of spaces, dashes, and invisible characters like word joiners.\n\n-\t### `se version`\n\n\tPrint the version number and exit.\n\n-\t### `se word-count`\n\n\tCount the number of words in an HTML file and optionally categorize by length.\n\n\n# What a Standard Ebooks source directory looks like\n\nMany of these tools act on Standard Ebooks source directories. Such directories have a consistent minimal structure:\n\n\t.\n\t|-images/\n\t|--cover.jpg\n\t|--cover.source.jpg\n\t|--cover.svg\n\t|--titlepage.svg\n\t|-src/\n\t|--epub/\n\t|---css/\n\t|----core.css\n\t|----local.css\n\t|---images/\n\t|----cover.svg\n\t|----titlepage.svg\n\t|---text/\n\t|----colophon.xhtml\n\t|----imprint.xhtml\n\t|----titlepage.xhtml\n\t|----uncopyright.xhtml\n\t|---content.opf\n\t|---onix.xml\n\t|---toc.xhtml\n\t|--META-INF/\n\t|---container.xml\n\t|--mimetype\n\t|-LICENSE.md\n\n`./images/` contains source images for the cover and titlepages, as well as ebook-specific source images. Source images should be in their maximum available resolution, then compressed and placed in `./src/epub/images/` for distribution.\n\n`./src/epub/` contains the actual epub files.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://standardebooks.org", "keywords": "ebooks epub", "license": "", "maintainer": "", "maintainer_email": "", "name": "standardebooks", "package_url": "https://pypi.org/project/standardebooks/", "platform": "", "project_url": "https://pypi.org/project/standardebooks/", "project_urls": {"Homepage": "https://standardebooks.org", "Source": "https://github.com/standardebooks/tools/"}, "release_url": "https://pypi.org/project/standardebooks/1.4.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "The toolset used to produce Standard Ebooks epub ebooks.", "version": "1.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>About</h1>\n<p>A collection of tools Standard Ebooks uses to produce its ebooks, including basic setup of ebooks, text processing, and build tools.</p>\n<p>Installing this toolset using <code>pipx</code> makes the <code>se</code> command line executable available. Its various commands are described below, or you can use <code>se help</code> to list them.</p>\n<h1>Installation</h1>\n<p>The toolset requires Python &gt;= 3.6.</p>\n<p>To install the toolset locally for development and debugging, see <a href=\"#installation-for-developers\" rel=\"nofollow\">Installation for Developers</a>.</p>\n<h2>Ubuntu 18.04 (Bionic) users</h2>\n<pre><span class=\"c1\"># Install some pre-flight dependencies.</span>\nsudo apt install -y calibre default-jre git python3-dev python3-pip python3-venv\n\n<span class=\"c1\"># Install pipx.</span>\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\n\n<span class=\"c1\"># Install the toolset.</span>\npipx install standardebooks\n</pre>\n<h3>Optional: Install shell completions</h3>\n<pre><span class=\"c1\"># Install ZSH completions.</span>\nsudo ln -s <span class=\"nv\">$HOME</span>/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/zsh/_se /usr/share/zsh/vendor-completions/_se <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">hash</span> -rf <span class=\"o\">&amp;&amp;</span> compinit\n\n<span class=\"c1\"># Install Bash completions.</span>\nsudo ln -s <span class=\"nv\">$HOME</span>/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/bash/se /usr/share/bash-completion/completions/se\n\n<span class=\"c1\"># Install Fish completions.</span>\nsudo ln -s <span class=\"nv\">$HOME</span>/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/fish/se <span class=\"nv\">$HOME</span>/.config/fish/completions/se.fish\n</pre>\n<h2>Fedora users</h2>\n<pre><span class=\"c1\"># Install some pre-flight dependencies.</span>\nsudo dnf install calibre git java-1.8.0-openjdk python3-devel vim\n\n<span class=\"c1\"># Install pipx.</span>\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\n\n<span class=\"c1\"># Install the toolset.</span>\npipx install standardebooks\n</pre>\n<h3>Optional: Install shell completions</h3>\n<pre><span class=\"c1\"># Install ZSH completions.</span>\nsudo ln -s <span class=\"nv\">$HOME</span>/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/zsh/_se /usr/share/zsh/vendor-completions/_se <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">hash</span> -rf <span class=\"o\">&amp;&amp;</span> compinit\n\n<span class=\"c1\"># Install Bash completions.</span>\nsudo ln -s <span class=\"nv\">$HOME</span>/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/bash/se /usr/share/bash-completion/completions/se\n\n<span class=\"c1\"># Install Fish completions.</span>\nsudo ln -s <span class=\"nv\">$HOME</span>/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/fish/se <span class=\"nv\">$HOME</span>/.config/fish/completions/se.fish\n</pre>\n<h2>macOS users (up to macOS 10.15)</h2>\n<p>These instructions were tested on macOS 10.12 to 10.15.</p>\n<ol>\n<li>\n<p>Install the <a href=\"https://brew.sh\" rel=\"nofollow\">Homebrew package manager</a>. Or, if you already have it installed, make sure it\u2019s up to date:</p>\n<pre>brew update\n</pre>\n</li>\n<li>\n<p>Install dependencies:</p>\n<pre><span class=\"c1\"># Install some pre-flight dependencies.</span>\nbrew install cairo git pipx python\npipx ensurepath\n\n<span class=\"c1\"># Install required applications.</span>\nbrew cask install java calibre\n\n<span class=\"c1\"># Install the toolset.</span>\npipx install standardebooks\n\n<span class=\"c1\"># Optional: Fish users can install tab completion.</span>\nln -s <span class=\"nv\">$HOME</span>/.local/pipx/venvs/standardebooks/lib/python3.*/site-packages/se/completions/fish/se <span class=\"nv\">$HOME</span>/.config/fish/completions/se.fish\n</pre>\n</li>\n</ol>\n<h2>OpenBSD 6.6 Users</h2>\n<p>These instructions were tested on OpenBSD 6.6, but may also work on the 6.5 release as well.</p>\n<ol>\n<li>\n<p>Create a text file to feed into <code>pkg_add</code> called <code>~/standard-ebooks-packages</code>. It should contain the following:</p>\n<pre>py3-pip--\npy3-virtualenv--\npy3-gitdb--\njdk--%11\ncalibre--\ngit--\nvim--\n</pre>\n</li>\n</ol>\n<p>Optionally, replace <code>vim--</code> with <code>vim--gtk3</code> to include gvim for its Unicode editing features.</p>\n<ol>\n<li>\n<p>Install dependencies using <code>doas pkg_add -ivl ~/standard-ebooks-packages</code>. Follow linking instructions provided by <code>pkg_add</code> to save keystrokes, unless you want to have multiple python versions and pip versions. In my case, I ran <code>doas ln -sf /usr/local/bin/pip3.7 /usr/local/bin/pip</code>.</p>\n</li>\n<li>\n<p>Add <code>~/.local/bin</code> to your path.</p>\n</li>\n<li>\n<p>Run <code>pip install --user pipx</code></p>\n</li>\n<li>\n<p>If you\u2019re using <code>ksh</code> from base and have already added <code>~/.local/bin</code>, you can skip <code>pipx ensurepath</code> because this step is for <code>bash</code> users.</p>\n</li>\n<li>\n<p>The rest of the process is similar to that used on other platforms:</p>\n<pre><span class=\"c1\"># Install the toolset.</span>\npipx install standardebooks\n</pre>\n</li>\n</ol>\n<h2>Installation for developers</h2>\n<p>If you want to work on the toolset source, it\u2019s helpful to tell <code>pipx</code> to install the package in \u201ceditable\u201d mode. This will allow you to edit the source of the package live and see changes immediately, without having to uninstall and re-install the package.</p>\n<p>To do that, follow the general installation instructions above; but instead of doing <code>pipx install standardebooks</code>, do the following:</p>\n<pre>git clone https://github.com/standardebooks/tools.git\npipx install --editable tools\n</pre>\n<p>Now the <code>se</code> binary is in your path, and any edits you make to source files in the <code>tools/</code> directory are immediately reflected when executing the binary.</p>\n<h3>Running commands on the entire corpus</h3>\n<p>As a developer, it\u2019s often useful to run an <code>se</code> command like <code>se lint</code> or <code>se build</code> on the entire corpus for testing purposes. This can be very time-consuming in a regular command invocation, so it\u2019s suggested to use <a href=\"https://www.gnu.org/software/parallel/\" rel=\"nofollow\">GNU Parallel</a> to speed up these commands significantly on machines with multiple cores. For example:</p>\n<pre>parallel -k se lint ::: /path/to/ebook/repos/*\n</pre>\n<p>The toolset tries to detect when it\u2019s being invoked from <code>parallel</code>, and it adjusts its output to accomodate.</p>\n<p><code>parallel</code> limits the output to 75 columns, even if your terminal emulator is wider. <code>se lint</code> can override this by setting a fixed width with the <code>--wrap</code> option.</p>\n<h3>Linting with <code>pylint</code></h3>\n<p>Before we can use <code>pylint</code> on the toolset source, we have to inject <code>pylint</code> into the venv <code>pipx</code> created for the <code>standardebooks</code> package:</p>\n<pre>pipx inject standardebooks pylint\n</pre>\n<p>Then make sure to call the <code>pylint</code> binary that <code>pipx</code> installed in the <code>standardebooks</code> venv, <em>not</em> any other globally-installed <code>pylint</code> binary:</p>\n<pre><span class=\"nb\">cd</span> /path/to/tools/repo\n<span class=\"nv\">$HOME</span>/.local/pipx/venvs/standardebooks/bin/pylint se\n</pre>\n<h3>Testing with <code>pytest</code></h3>\n<p>Similar to <code>pylint</code>, the <code>pytest</code> command can be injected into the venv <code>pipx</code> created for the <code>standardebooks</code> package:</p>\n<pre>pipx inject standardebooks pytest\n</pre>\n<p>The tests are executed by calling <code>pytest</code> from the top level or your tools repo:</p>\n<pre><span class=\"nb\">cd</span> /path/to/tools/repo\n<span class=\"nv\">$HOME</span>/.local/pipx/venvs/standardebooks/bin/pytest\n</pre>\n<h4>Adding tests</h4>\n<p>Tests are added under the <code>tests</code> directory. Most of the tests are based around the idea of having \u201cgolden\u201d output files. Each command is run against a set of input files and then the resulting output files are compared against the resulting golden files. The test fails if the output files do not match the golden files. The data files can be found in the <code>tests/data</code> directory.</p>\n<p>A custom test flag <code>--save-golden-files</code> has been added to automatically update the the golden files for the tests (in an <code>out</code> directory for the command).</p>\n<p>The usual test development process is:</p>\n<ol>\n<li>Update <code>in</code> files with new test data and/or change the command implementation.</li>\n<li>Run <code>pytest</code> and see some tests fail.</li>\n<li>Run <code>pytest --save-golden-files</code> and then diff the data directory to ensure that the <code>out</code> files are as expected.</li>\n<li>Commit changes (including new <code>out</code> contents).</li>\n</ol>\n<p>Another custom test flag <code>--save-new-draft</code> is also available. This flag is used to update the book skeleton, generated by the <code>se create-draft</code> command, that is used as input for the other tests. Whenever the draft contents change (e.g. edits to the <code>core.css</code> file) the <code>tests/data/draft</code> files should be updated by calling <code>pytest --save-new-draft</code>.</p>\n<h3>Code style</h3>\n<ul>\n<li>\n<p>In general we follow a relaxed version of <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP 8</a>. In particular, we use tabs instead of spaces, and there is no line length limit.</p>\n</li>\n<li>\n<p>Always use the <code>regex</code> module instead of the <code>re</code> module.</p>\n</li>\n</ul>\n<h1>Help wanted</h1>\n<p>We need volunteers to take the lead on the following goals:</p>\n<ul>\n<li>\n<p>Add more test cases to the test framework.</p>\n</li>\n<li>\n<p>Figure out if it\u2019s possible to install Bash/ZSH completions using setup.py, <em>without</em> root; this may not be possible?</p>\n</li>\n<li>\n<p>Writing installation instructions for Bash and ZSH completions for MacOS.</p>\n</li>\n</ul>\n<h1>Tool descriptions</h1>\n<ul>\n<li>\n<h3><code>se british2american</code></h3>\n<p>Try to convert British quote style to American quote style in DIRECTORY/src/epub/text/.</p>\n<p>Quotes must already be typogrified using the <code>se typogrify</code> tool.</p>\n<p>This script isn\u2019t perfect; proofreading is required, especially near closing quotes near to em-dashes.</p>\n</li>\n<li>\n<h3><code>se build</code></h3>\n<p>Build an ebook from a Standard Ebook source directory.</p>\n</li>\n<li>\n<h3><code>se build-images</code></h3>\n<p>Build ebook cover and titlepage images in a Standard Ebook source directory and place the output in DIRECTORY/src/epub/images/.</p>\n</li>\n<li>\n<h3><code>se clean</code></h3>\n<p>Prettify and canonicalize individual XHTML, SVG, or CSS files, or all XHTML, SVG, or CSS files in a source directory. Note that this only prettifies the source code; it doesn\u2019t perform typography changes.</p>\n</li>\n<li>\n<h3><code>se compare-versions</code></h3>\n<p>Use Firefox to render and compare XHTML files in an ebook repository. Run on a dirty repository to visually compare the repository\u2019s dirty state with its clean state. If a file renders differently, place screenshots of the new, original, and diff (if available) renderings in the current working directory. A file called diff.html is created to allow for side-by-side comparisons of original and new files.</p>\n</li>\n<li>\n<h3><code>se create-draft</code></h3>\n<p>Create a skeleton of a new Standard Ebook.</p>\n</li>\n<li>\n<h3><code>se dec2roman</code></h3>\n<p>Convert a decimal number to a Roman numeral.</p>\n</li>\n<li>\n<h3><code>se extract-ebook</code></h3>\n<p>Extract an EPUB, MOBI, or AZW3 ebook into ./FILENAME.extracted/ or a target directory.</p>\n</li>\n<li>\n<h3><code>se find-mismatched-diacritics</code></h3>\n<p>Find words with mismatched diacritics in Standard Ebook source directories. For example, <code>cafe</code> in one file and <code>caf\u00e9</code> in another.</p>\n</li>\n<li>\n<h3><code>se help</code></h3>\n<p>List available SE commands.</p>\n</li>\n<li>\n<h3><code>se hyphenate</code></h3>\n<p>Insert soft hyphens at syllable breaks in an XHTML file.</p>\n</li>\n<li>\n<h3><code>se interactive-sr</code></h3>\n<p>Use Vim to perform an interactive search and replace on a list of files. Use y/n/a to confirm (y) or reject (n) a replacement, or to replace (a)ll.</p>\n</li>\n<li>\n<h3><code>se lint</code></h3>\n<p>Check for various Standard Ebooks style errors.</p>\n</li>\n<li>\n<h3><code>se make-url-safe</code></h3>\n<p>Make a string URL-safe.</p>\n</li>\n<li>\n<h3><code>se modernize-spelling</code></h3>\n<p>Modernize spelling of some archaic words, and replace words that may be archaically compounded with a dash to a more modern spelling. For example, replace <code>ash-tray</code> with <code>ashtray</code>.</p>\n</li>\n<li>\n<h3><code>se prepare-release</code></h3>\n<p>Calculate work word count, insert release date if not yet set, and update modified date and revision number.</p>\n</li>\n<li>\n<h3><code>se print-manifest</code></h3>\n<p>Print the &lt;manifest&gt; element for the given Standard Ebooks source directory to standard output, for use in that directory\u2019s content.opf.</p>\n</li>\n<li>\n<h3><code>se print-spine</code></h3>\n<p>Print the &lt;spine&gt; element for the given Standard Ebooks source directory to standard output, for use in that directory\u2019s content.opf.</p>\n</li>\n<li>\n<h3><code>se print-title</code></h3>\n<p>Print the expected value for an XHTML file\u2019s <code>&lt;title&gt;</code> element.</p>\n</li>\n<li>\n<h3><code>se print-toc</code></h3>\n<p>Build a table of contents for an SE source directory and print to stdout.</p>\n</li>\n<li>\n<h3><code>se recompose-epub</code></h3>\n<p>Recompose a Standard Ebooks source directory into a single HTML5 file, and print to standard output.</p>\n</li>\n<li>\n<h3><code>se renumber-endnotes</code></h3>\n<p>Renumber all endnotes and noterefs sequentially from the beginning.</p>\n</li>\n<li>\n<h3><code>se reorder-endnotes</code></h3>\n<p>Increment the specified endnote and all following endnotes by 1.</p>\n</li>\n<li>\n<h3><code>se roman2dec</code></h3>\n<p>Convert a Roman numeral to a decimal number.</p>\n</li>\n<li>\n<h3><code>se semanticate</code></h3>\n<p>Apply some scriptable semantics rules from the Standard Ebooks semantics manual to a Standard Ebook source directory.</p>\n</li>\n<li>\n<h3><code>se split-file</code></h3>\n<p>Split an XHTML file into many files at all instances of <code>&lt;!--se:split--&gt;</code>, and include a header template for each file.</p>\n</li>\n<li>\n<h3><code>se titlecase</code></h3>\n<p>Convert a string to titlecase.</p>\n</li>\n<li>\n<h3><code>se typogrify</code></h3>\n<p>Apply some scriptable typography rules from the Standard Ebooks typography manual to a Standard Ebook source directory.</p>\n</li>\n<li>\n<h3><code>se unicode-names</code></h3>\n<p>Display Unicode code points, descriptions, and links to more details for each character in a string. Useful for differentiating between different flavors of spaces, dashes, and invisible characters like word joiners.</p>\n</li>\n<li>\n<h3><code>se version</code></h3>\n<p>Print the version number and exit.</p>\n</li>\n<li>\n<h3><code>se word-count</code></h3>\n<p>Count the number of words in an HTML file and optionally categorize by length.</p>\n</li>\n</ul>\n<h1>What a Standard Ebooks source directory looks like</h1>\n<p>Many of these tools act on Standard Ebooks source directories. Such directories have a consistent minimal structure:</p>\n<pre><code>.\n|-images/\n|--cover.jpg\n|--cover.source.jpg\n|--cover.svg\n|--titlepage.svg\n|-src/\n|--epub/\n|---css/\n|----core.css\n|----local.css\n|---images/\n|----cover.svg\n|----titlepage.svg\n|---text/\n|----colophon.xhtml\n|----imprint.xhtml\n|----titlepage.xhtml\n|----uncopyright.xhtml\n|---content.opf\n|---onix.xml\n|---toc.xhtml\n|--META-INF/\n|---container.xml\n|--mimetype\n|-LICENSE.md\n</code></pre>\n<p><code>./images/</code> contains source images for the cover and titlepages, as well as ebook-specific source images. Source images should be in their maximum available resolution, then compressed and placed in <code>./src/epub/images/</code> for distribution.</p>\n<p><code>./src/epub/</code> contains the actual epub files.</p>\n\n          </div>"}, "last_serial": 7121878, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "cce9de13d6e417804fff0cbc3bef940a", "sha256": "acf5c86f676ad63dd0ea86a4828e4342d5ede682d6b49113a1fa0eee524e7cb4"}, "downloads": -1, "filename": "standardebooks-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cce9de13d6e417804fff0cbc3bef940a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.7", "size": 481543, "upload_time": "2019-02-21T21:26:59", "upload_time_iso_8601": "2019-02-21T21:26:59.248252Z", "url": "https://files.pythonhosted.org/packages/24/eb/24c533a9120421b6d0b05c97ffede49a158ea15f72e25b88efdf335b8de5/standardebooks-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ddc8fef0250bd4850d114040fdd99518", "sha256": "f6998cda35c137b2f07654818993ab0dcdfe110fdcf924d97acddcc7ad3fc12a"}, "downloads": -1, "filename": "standardebooks-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ddc8fef0250bd4850d114040fdd99518", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.7", "size": 481587, "upload_time": "2019-02-21T21:39:42", "upload_time_iso_8601": "2019-02-21T21:39:42.588062Z", "url": "https://files.pythonhosted.org/packages/fd/77/d1ed9578d6bbb53a68345c0fb42cd6eaf98583356f983b64ac9e3c04c750/standardebooks-1.0.1-py3-none-any.whl", "yanked": false}], "1.0.10": [{"comment_text": "", "digests": {"md5": "ce4405da28ee239c2793f41ce284aa6c", "sha256": "c7045eb04a49e57a662a4c36dcfb7e7cfdaf070fddf42754c6874679d9a3828e"}, "downloads": -1, "filename": "standardebooks-1.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "ce4405da28ee239c2793f41ce284aa6c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 490432, "upload_time": "2019-04-03T17:15:50", "upload_time_iso_8601": "2019-04-03T17:15:50.994321Z", "url": "https://files.pythonhosted.org/packages/d6/07/512f6a845d2f42e9486c3dba05945d87b8a5d50d520f4afac17aa60351ec/standardebooks-1.0.10-py3-none-any.whl", "yanked": false}], "1.0.11": [{"comment_text": "", "digests": {"md5": "651d072b9d95b8ced6e08f897c095b32", "sha256": "efe813805b6cfc56433cbb927eaf99f9cae448762ace4b18f1dd48d752f3f2e7"}, "downloads": -1, "filename": "standardebooks-1.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "651d072b9d95b8ced6e08f897c095b32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 490591, "upload_time": "2019-05-08T00:04:56", "upload_time_iso_8601": "2019-05-08T00:04:56.300773Z", "url": "https://files.pythonhosted.org/packages/60/10/d03a263a090b80ba9be66ac4e0b26dc74fa5850e5553bddf4f551d0c0ab7/standardebooks-1.0.11-py3-none-any.whl", "yanked": false}], "1.0.12": [{"comment_text": "", "digests": {"md5": "f0c3455baee971235103ec61b68c5b02", "sha256": "4a88c155dad4409a2a339974b110980f1aa9a11c44b1a31de400d809258c4350"}, "downloads": -1, "filename": "standardebooks-1.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "f0c3455baee971235103ec61b68c5b02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 490591, "upload_time": "2019-05-13T17:08:54", "upload_time_iso_8601": "2019-05-13T17:08:54.091779Z", "url": "https://files.pythonhosted.org/packages/c0/91/703b2cc5029f6c1ab05c8cef36bbd41c5625b89621df7832e42a8d3c27d6/standardebooks-1.0.12-py3-none-any.whl", "yanked": false}], "1.0.13": [{"comment_text": "", "digests": {"md5": "915d8229a769361ab588778406bed14f", "sha256": "518b2de39ba96b8e85595ccf34118dd40539d0e17e5be52525b1ebb5876b0fe2"}, "downloads": -1, "filename": "standardebooks-1.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "915d8229a769361ab588778406bed14f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 491098, "upload_time": "2019-05-16T21:55:59", "upload_time_iso_8601": "2019-05-16T21:55:59.209917Z", "url": "https://files.pythonhosted.org/packages/d5/70/f60abec2ac6719fc20bf75001150f7af6276dfcdc222de5f00c0ff3de070/standardebooks-1.0.13-py3-none-any.whl", "yanked": false}], "1.0.14": [{"comment_text": "", "digests": {"md5": "8234dbd817d5096c2b3789630f3ba3b2", "sha256": "6628bed429acae902bf1b7d5b6c0b331192481b74eccca4f2cf3f08b924753c5"}, "downloads": -1, "filename": "standardebooks-1.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "8234dbd817d5096c2b3789630f3ba3b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 491719, "upload_time": "2019-06-13T23:48:01", "upload_time_iso_8601": "2019-06-13T23:48:01.989162Z", "url": "https://files.pythonhosted.org/packages/13/9a/fa15d32a54875d20755984a5d4168ddf3f243301d0432e147f86b8294d8b/standardebooks-1.0.14-py3-none-any.whl", "yanked": false}], "1.0.15": [{"comment_text": "", "digests": {"md5": "476d94e583574d99aa5f6fcd1c55bb37", "sha256": "ac07645b1a8400f4e1ba50140def8b999481f687994af41f787679129807b0c5"}, "downloads": -1, "filename": "standardebooks-1.0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "476d94e583574d99aa5f6fcd1c55bb37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 491959, "upload_time": "2019-06-14T16:54:07", "upload_time_iso_8601": "2019-06-14T16:54:07.297748Z", "url": "https://files.pythonhosted.org/packages/1d/a5/6dcc35cb4824d4851cb6d1b552bddf0def7bc8885a9682f5f3e23e93c40f/standardebooks-1.0.15-py3-none-any.whl", "yanked": false}], "1.0.16": [{"comment_text": "", "digests": {"md5": "b9da8e83ae27b711b9aa454df79ee31a", "sha256": "e752e3fd944a10262dc97488cd896de5454614255ab7d49367de3aedd560a23f"}, "downloads": -1, "filename": "standardebooks-1.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "b9da8e83ae27b711b9aa454df79ee31a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 491894, "upload_time": "2019-06-14T19:08:47", "upload_time_iso_8601": "2019-06-14T19:08:47.185446Z", "url": "https://files.pythonhosted.org/packages/de/94/76800aaaf33a77dc5dae8c93f8aa18a048fa6c87cb7b2b56e691487a738a/standardebooks-1.0.16-py3-none-any.whl", "yanked": false}], "1.0.17": [{"comment_text": "", "digests": {"md5": "a2a1c58441ce51385555eb4e062d3e78", "sha256": "5689e40c2b80789efcfbf5d935718481736369806b75cb8dc9b0a4daeeeccda2"}, "downloads": -1, "filename": "standardebooks-1.0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "a2a1c58441ce51385555eb4e062d3e78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 492338, "upload_time": "2019-07-07T23:21:09", "upload_time_iso_8601": "2019-07-07T23:21:09.093871Z", "url": "https://files.pythonhosted.org/packages/b2/b9/a5a273ca174b51776d6443420a5f79f5e1b98c45250da661f445d4c2b0c5/standardebooks-1.0.17-py3-none-any.whl", "yanked": false}], "1.0.18": [{"comment_text": "", "digests": {"md5": "e8a06fe57a7c5f2683ed7b31b47f2d49", "sha256": "22da8820b668cb1cce42278c4ad15e14acb6011f95c069a4240b637c46c2fd43"}, "downloads": -1, "filename": "standardebooks-1.0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "e8a06fe57a7c5f2683ed7b31b47f2d49", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 492563, "upload_time": "2019-07-16T21:51:14", "upload_time_iso_8601": "2019-07-16T21:51:14.601945Z", "url": "https://files.pythonhosted.org/packages/59/8d/069d9051c48b3204ce37b9b59e14e29996f2e42af1f1ef87dc04f5fa135f/standardebooks-1.0.18-py3-none-any.whl", "yanked": false}], "1.0.19": [{"comment_text": "", "digests": {"md5": "e006d97cbf1706512a619e53fb26fadc", "sha256": "d94cad89f006ecaaecb297f797a7a48b8412ddd5cc39b3986d16ad1ceee445c6"}, "downloads": -1, "filename": "standardebooks-1.0.19.tar.gz", "has_sig": false, "md5_digest": "e006d97cbf1706512a619e53fb26fadc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 467292, "upload_time": "2019-08-13T16:11:22", "upload_time_iso_8601": "2019-08-13T16:11:22.193252Z", "url": "https://files.pythonhosted.org/packages/a2/2b/165899722fafa1787e8f06bf67b8182b41ecababb519f2127ffdae0a4b1b/standardebooks-1.0.19.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "d78b576e4ca3f64b163f66687add5282", "sha256": "0929a37f5aef101f2eb3d2b0343da65ecf9064b2379db4e7d0e0d31dcc14f7f6"}, "downloads": -1, "filename": "standardebooks-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d78b576e4ca3f64b163f66687add5282", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 482764, "upload_time": "2019-02-22T22:10:38", "upload_time_iso_8601": "2019-02-22T22:10:38.282462Z", "url": "https://files.pythonhosted.org/packages/7e/ef/24fa27aa80fb26ec2f5591d4a76ffd36adfbcd73e561cc16dd305821f000/standardebooks-1.0.2-py3-none-any.whl", "yanked": false}], "1.0.20": [{"comment_text": "", "digests": {"md5": "9b7a76e143c71a45f432e9bfe249c218", "sha256": "9d65a4b73e70892d77618b941abed463c91e887cb29a6d272e404fdb30d47c4c"}, "downloads": -1, "filename": "standardebooks-1.0.20.tar.gz", "has_sig": false, "md5_digest": "9b7a76e143c71a45f432e9bfe249c218", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 463947, "upload_time": "2019-08-28T00:18:33", "upload_time_iso_8601": "2019-08-28T00:18:33.719730Z", "url": "https://files.pythonhosted.org/packages/fe/89/4f4da565ded3b44f19d72a805f4c33fc6c0ab1d31cd6f3dc47a5dd502e76/standardebooks-1.0.20.tar.gz", "yanked": false}], "1.0.21": [{"comment_text": "", "digests": {"md5": "3cbb12af0cf3676a4661b4f86e2b4d33", "sha256": "a010033313368279746aa56665954af2882c85a4ec1873cdfacc2d08c59e59a3"}, "downloads": -1, "filename": "standardebooks-1.0.21.tar.gz", "has_sig": false, "md5_digest": "3cbb12af0cf3676a4661b4f86e2b4d33", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12587118, "upload_time": "2019-08-30T00:01:22", "upload_time_iso_8601": "2019-08-30T00:01:22.776733Z", "url": "https://files.pythonhosted.org/packages/c5/c6/840145052d056cf836ba9bf3149177dd00c2de99969d897df26c11e3f09e/standardebooks-1.0.21.tar.gz", "yanked": false}], "1.0.22": [{"comment_text": "", "digests": {"md5": "2043cbd469b23795ba619d1291e7f247", "sha256": "2af926724c6210b7f18117090089d27fd7afd1b5d2d8138fdc7c3bc20c38912d"}, "downloads": -1, "filename": "standardebooks-1.0.22.tar.gz", "has_sig": false, "md5_digest": "2043cbd469b23795ba619d1291e7f247", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12587140, "upload_time": "2019-08-30T21:55:51", "upload_time_iso_8601": "2019-08-30T21:55:51.115328Z", "url": "https://files.pythonhosted.org/packages/9f/b6/e6245fae976bb13446a3ec21556f4c59e5ad0afeea55dfd7d2cc909fd315/standardebooks-1.0.22.tar.gz", "yanked": false}], "1.0.23": [{"comment_text": "", "digests": {"md5": "16942c3f5c224b12b1305b778f01ab71", "sha256": "1f923e83ae40e6dab068afe571f4870928f43d4ed907d22a042bd31d894d5c76"}, "downloads": -1, "filename": "standardebooks-1.0.23.tar.gz", "has_sig": false, "md5_digest": "16942c3f5c224b12b1305b778f01ab71", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12587272, "upload_time": "2019-09-16T01:29:58", "upload_time_iso_8601": "2019-09-16T01:29:58.443152Z", "url": "https://files.pythonhosted.org/packages/a8/29/91e42f356f576aeb64255b3bb1648b756c335763546581b426906416a95a/standardebooks-1.0.23.tar.gz", "yanked": false}], "1.0.24": [{"comment_text": "", "digests": {"md5": "1f7752f8caf1198b5b88c608b7616992", "sha256": "ddbd34f154114ec351fe6056d746e90586f5aa1187bc20044f1078868b103d00"}, "downloads": -1, "filename": "standardebooks-1.0.24.tar.gz", "has_sig": false, "md5_digest": "1f7752f8caf1198b5b88c608b7616992", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12587623, "upload_time": "2019-09-18T20:59:53", "upload_time_iso_8601": "2019-09-18T20:59:53.923336Z", "url": "https://files.pythonhosted.org/packages/88/5d/97be2e509edbcc1cf3c5a784f8033200037fa74880d485909228a68b7dc5/standardebooks-1.0.24.tar.gz", "yanked": false}], "1.0.25": [{"comment_text": "", "digests": {"md5": "26a70640777d139daa140831f2b0d159", "sha256": "9b9ea7f2c775157a843ac01c47bac71d24d6b9e97cac78aa5cecc2fb4ce85891"}, "downloads": -1, "filename": "standardebooks-1.0.25.tar.gz", "has_sig": false, "md5_digest": "26a70640777d139daa140831f2b0d159", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12587671, "upload_time": "2019-09-18T21:29:03", "upload_time_iso_8601": "2019-09-18T21:29:03.682776Z", "url": "https://files.pythonhosted.org/packages/3f/cd/e9ef9391529b6712b5edf875494f7403fe5a60cbdf33969020f72a16575d/standardebooks-1.0.25.tar.gz", "yanked": false}], "1.0.26": [{"comment_text": "", "digests": {"md5": "fc2fbc3aff15bae647336987a6244b8a", "sha256": "f2a44c34336e4391fb2081e5d304291e21ee7d11264f36f5731703627c8840b5"}, "downloads": -1, "filename": "standardebooks-1.0.26.tar.gz", "has_sig": false, "md5_digest": "fc2fbc3aff15bae647336987a6244b8a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12590509, "upload_time": "2019-10-26T22:56:39", "upload_time_iso_8601": "2019-10-26T22:56:39.955960Z", "url": "https://files.pythonhosted.org/packages/91/53/fbb4b0844c3eab0dc12c43ec80bade0fccb0a3bcc838eef1c4e4e5b4b2b4/standardebooks-1.0.26.tar.gz", "yanked": false}], "1.0.27": [{"comment_text": "", "digests": {"md5": "9d9ad5533f30ad6906c349e18d98e3ad", "sha256": "e2bdc3fb1b3cb628ebe646da82d2257f173cc93c05cb39c766020ead0c2456a2"}, "downloads": -1, "filename": "standardebooks-1.0.27.tar.gz", "has_sig": false, "md5_digest": "9d9ad5533f30ad6906c349e18d98e3ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12595130, "upload_time": "2019-11-23T19:17:34", "upload_time_iso_8601": "2019-11-23T19:17:34.674205Z", "url": "https://files.pythonhosted.org/packages/e6/4a/5833361010843c91a585a6c97a5ee8d4f253578059d46d2dd16c4cda0499/standardebooks-1.0.27.tar.gz", "yanked": false}], "1.0.28": [{"comment_text": "", "digests": {"md5": "0ee2b0a4d46f253a4c093a9907a46b95", "sha256": "a2a93ab59113398e5db0fee9f3cb05088982db62fc6189580bd54b2d255e8e9d"}, "downloads": -1, "filename": "standardebooks-1.0.28.tar.gz", "has_sig": false, "md5_digest": "0ee2b0a4d46f253a4c093a9907a46b95", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12595621, "upload_time": "2020-01-20T23:01:30", "upload_time_iso_8601": "2020-01-20T23:01:30.474637Z", "url": "https://files.pythonhosted.org/packages/87/aa/32af0cefc342530b4010684484bc725601051d4dd8cd2b2ca6d003470f47/standardebooks-1.0.28.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "608d6d925b720b31de7897a3ee7b363d", "sha256": "a597af61edb9b28f148638928b66e27dac210b3d718be9e8bf454dfba800b681"}, "downloads": -1, "filename": "standardebooks-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "608d6d925b720b31de7897a3ee7b363d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 482830, "upload_time": "2019-02-24T21:50:08", "upload_time_iso_8601": "2019-02-24T21:50:08.982497Z", "url": "https://files.pythonhosted.org/packages/94/d3/bcfb48f3274bd403b46b8ec8334582d2242ac8e0a7ab332646c91c69cdc1/standardebooks-1.0.3-py3-none-any.whl", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "2a1e82360ece4e29ed1947d0a8214d07", "sha256": "684270e386455594151e18570a81edbf0de3cdc9dfecc60c97f9324f6200fd88"}, "downloads": -1, "filename": "standardebooks-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2a1e82360ece4e29ed1947d0a8214d07", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 482886, "upload_time": "2019-02-24T22:42:34", "upload_time_iso_8601": "2019-02-24T22:42:34.453634Z", "url": "https://files.pythonhosted.org/packages/48/d9/3fcb289739ff206697bb04a8482fce7d784403f48cc03e808b690a780886/standardebooks-1.0.4-py3-none-any.whl", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "993714dd45f26817ad0f9d3863aadab1", "sha256": "16e5d85f6f1bff41985c3be9fafc97d6faef952cb9db4fd939a6270b289a69fa"}, "downloads": -1, "filename": "standardebooks-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "993714dd45f26817ad0f9d3863aadab1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 483056, "upload_time": "2019-02-26T18:20:59", "upload_time_iso_8601": "2019-02-26T18:20:59.432227Z", "url": "https://files.pythonhosted.org/packages/63/d4/0509700fc093932ab1a0e80f26a66406b4f673d41f5c8f9e26e8ecac9aa2/standardebooks-1.0.5-py3-none-any.whl", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "498122f823a71fce4fab53b160313387", "sha256": "853a9d48834e05ff1a8d954b4c503b7e759999bcd3c8a5d303b43c839d983ecf"}, "downloads": -1, "filename": "standardebooks-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "498122f823a71fce4fab53b160313387", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 483139, "upload_time": "2019-03-01T04:03:14", "upload_time_iso_8601": "2019-03-01T04:03:14.434909Z", "url": "https://files.pythonhosted.org/packages/cc/fe/177847c70c0e4b822a7cdc99b9574079b7f6f6824266182c6d48f34417e4/standardebooks-1.0.6-py3-none-any.whl", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "3585953bcc0321b4795832b691fb8de9", "sha256": "3bffae8af993c87962e015413a75a56a3241bbaab16160632053eaae01702bfc"}, "downloads": -1, "filename": "standardebooks-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "3585953bcc0321b4795832b691fb8de9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 483938, "upload_time": "2019-03-12T23:36:55", "upload_time_iso_8601": "2019-03-12T23:36:55.130681Z", "url": "https://files.pythonhosted.org/packages/e5/26/c182970c628c4d60c0038cbe2c7816fe4acda431f24a4db6fd75c57add06/standardebooks-1.0.7-py3-none-any.whl", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "b14aa439b826982e5d7379ae44011b5e", "sha256": "ef67f38331abe04f53ac11c0b5be1eebcb2b7e25c6d5ed4204ff9b3d03bf4135"}, "downloads": -1, "filename": "standardebooks-1.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "b14aa439b826982e5d7379ae44011b5e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 484137, "upload_time": "2019-03-13T23:02:20", "upload_time_iso_8601": "2019-03-13T23:02:20.831794Z", "url": "https://files.pythonhosted.org/packages/2c/02/c0270a5d5073579d15c09016d731c107c0132021aeac659d40d197d6da53/standardebooks-1.0.8-py3-none-any.whl", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "862eb58f3a171ee905596720587994eb", "sha256": "98b87dc82e4211e1baa8ff93aa42b3950856a41d5ecc2c0a4cde910528004935"}, "downloads": -1, "filename": "standardebooks-1.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "862eb58f3a171ee905596720587994eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 488788, "upload_time": "2019-03-23T17:14:04", "upload_time_iso_8601": "2019-03-23T17:14:04.721818Z", "url": "https://files.pythonhosted.org/packages/e6/78/3da18d5b83aac1f9895cd8a7c9b3c077156270b679a6f70ddc44090feb70/standardebooks-1.0.9-py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "e40935d00e283f57a69bcc83a09286bb", "sha256": "343f6b2d32bedf195c09ad59a595a653235ec5f9449bb3a0f058f33678915e1d"}, "downloads": -1, "filename": "standardebooks-1.1.0.tar.gz", "has_sig": false, "md5_digest": "e40935d00e283f57a69bcc83a09286bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12597216, "upload_time": "2020-02-05T22:30:03", "upload_time_iso_8601": "2020-02-05T22:30:03.585810Z", "url": "https://files.pythonhosted.org/packages/9d/2b/d32d90b4c6dd817119ec5ca9953555d161fa8b4cefea2f2f8db27acc24d5/standardebooks-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "5a3ff97489ac8c3e4a87987813d06393", "sha256": "18819fbc7cb433182ebdb44652188a92cf765b080847d63c7586ce0cd903c28f"}, "downloads": -1, "filename": "standardebooks-1.2.0.tar.gz", "has_sig": false, "md5_digest": "5a3ff97489ac8c3e4a87987813d06393", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12597680, "upload_time": "2020-02-13T18:12:54", "upload_time_iso_8601": "2020-02-13T18:12:54.803073Z", "url": "https://files.pythonhosted.org/packages/94/16/42825ada54e377c97a65768625da741a2d4146ede95ce428602b0884f851/standardebooks-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "9aa903b69f412eacb2a37377e0e91923", "sha256": "4c1b0952eec06e8c068a2f39fb39fc5498ccca05aae7e2d4d4d60f1b8c5e47d4"}, "downloads": -1, "filename": "standardebooks-1.2.1.tar.gz", "has_sig": false, "md5_digest": "9aa903b69f412eacb2a37377e0e91923", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12599800, "upload_time": "2020-02-17T18:45:35", "upload_time_iso_8601": "2020-02-17T18:45:35.309354Z", "url": "https://files.pythonhosted.org/packages/4c/16/937d38caba3a0eb3c09388b1cf9e8ce17ebee7cfc6c64fd3987e5403c1a8/standardebooks-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "0e595faae4754708dc4f6b5c26193b34", "sha256": "f9d9866a9563b2f990f2aaded43ffc55857d778fe22039eaa26de4843d7ae7a5"}, "downloads": -1, "filename": "standardebooks-1.2.2.tar.gz", "has_sig": false, "md5_digest": "0e595faae4754708dc4f6b5c26193b34", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12603796, "upload_time": "2020-02-27T04:23:35", "upload_time_iso_8601": "2020-02-27T04:23:35.354244Z", "url": "https://files.pythonhosted.org/packages/fa/17/368552eae61a461ac02dee3dba491d8458dfc29b25fbbe79c1a7f3569b5b/standardebooks-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "f92ee7fe242a977fbca87fdb4c9320bf", "sha256": "a1a8671e6e0e5e86ce0c66057affe702cc1dc244dbce73cb79011fbad87a4bf9"}, "downloads": -1, "filename": "standardebooks-1.2.3.tar.gz", "has_sig": false, "md5_digest": "f92ee7fe242a977fbca87fdb4c9320bf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12603046, "upload_time": "2020-02-27T18:24:46", "upload_time_iso_8601": "2020-02-27T18:24:46.580176Z", "url": "https://files.pythonhosted.org/packages/70/0d/66301a8da39168d1bde5d973c41a3e8ee89a60e924f5c5ec9e341d076cb4/standardebooks-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "44441bc6fe69d5549b6eebfdc1640524", "sha256": "75bd7f77b3e17b57c4fb55a61adcfeff4de138062d92a1d2219010679f1ae6fd"}, "downloads": -1, "filename": "standardebooks-1.2.4.tar.gz", "has_sig": false, "md5_digest": "44441bc6fe69d5549b6eebfdc1640524", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12779034, "upload_time": "2020-03-18T19:13:39", "upload_time_iso_8601": "2020-03-18T19:13:39.066935Z", "url": "https://files.pythonhosted.org/packages/10/b6/845ff2df7fd3a2cb744d0bac322bb9309aa8ce1cd6838022dd2ed035621c/standardebooks-1.2.4.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "5fdf6724eeae900d4a53e2c3790021a3", "sha256": "85d18fb13d4d7825e2b60523e541e23d46186e5391ae3a086fa7963863ec060a"}, "downloads": -1, "filename": "standardebooks-1.3.0.tar.gz", "has_sig": false, "md5_digest": "5fdf6724eeae900d4a53e2c3790021a3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12780780, "upload_time": "2020-03-24T02:45:41", "upload_time_iso_8601": "2020-03-24T02:45:41.062767Z", "url": "https://files.pythonhosted.org/packages/3b/aa/fe4c0235e30c25105406b54589fbc0793d9715bd91a90cf17366e51415b5/standardebooks-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "62cf319db62e987f1e0a7bf85798ae49", "sha256": "fafc6ad09921cf84c45c81a9eddbac6f13512df92eb7fc5a0784c85e58c280e0"}, "downloads": -1, "filename": "standardebooks-1.4.0.tar.gz", "has_sig": false, "md5_digest": "62cf319db62e987f1e0a7bf85798ae49", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12755491, "upload_time": "2020-04-28T17:37:20", "upload_time_iso_8601": "2020-04-28T17:37:20.294388Z", "url": "https://files.pythonhosted.org/packages/e7/51/2dabcc0efe816f4fd78420fa7ddcd7052cb6006480ec58c4b6750c2bd90d/standardebooks-1.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "62cf319db62e987f1e0a7bf85798ae49", "sha256": "fafc6ad09921cf84c45c81a9eddbac6f13512df92eb7fc5a0784c85e58c280e0"}, "downloads": -1, "filename": "standardebooks-1.4.0.tar.gz", "has_sig": false, "md5_digest": "62cf319db62e987f1e0a7bf85798ae49", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12755491, "upload_time": "2020-04-28T17:37:20", "upload_time_iso_8601": "2020-04-28T17:37:20.294388Z", "url": "https://files.pythonhosted.org/packages/e7/51/2dabcc0efe816f4fd78420fa7ddcd7052cb6006480ec58c4b6750c2bd90d/standardebooks-1.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:44 2020"}