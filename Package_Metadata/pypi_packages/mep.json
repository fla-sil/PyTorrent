{"info": {"author": "Chi Chen", "author_email": "chc273@eng.ucsd.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Physics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Minimum Energy Path Tools\n[![CircleCI](https://circleci.com/gh/chc273/mep.svg?style=svg)](https://circleci.com/gh/chc273/mep)\n[![Coverage Status](https://coveralls.io/repos/github/chc273/mep/badge.svg?branch=master)](https://coveralls.io/github/chc273/mep?branch=master)\n\n## Introduction \nThis package contains various methods for finding the minimal energy path in atom simulations.\n\nCurrently the following methods are implemented:\n\n> Nudged elastic band method [1]\n\n> Climbing image nudged elastic band method [2]\n\n## How to use\n\n### Regular NEB\n```python\n\nfrom mep.optimize import ScipyOptimizer\nfrom mep.path import Path\nfrom mep.neb import NEB\nfrom mep.models import LEPS\n\nleps = LEPS() # Test model \nop = ScipyOptimizer(leps) # local optimizer for finding local minima\nx0 = op.minimize([1, 4], bounds=[[0, 4], [-2, 4]]).x # minima one\nx1 = op.minimize([3, 1], bounds=[[0, 4], [-2, 4]]).x # minima two\n\n\npath = Path.from_linear_end_points(x0, x1, 101, 1)  # set 101 images, and k=1\nneb =NEB(leps, path) # initialize NEB\nhistory = neb.run(verbose=True) # run\n\n```\n\nThe results will be like the following\n\n![LEPS example](./assets/leps.gif) ![LEPS_NEB](./assets/leps_ea.png) \n\n\nSimilar results can be obtained using the LEPS model with harmonics `LEPSHarm`\n\n![LEPSHarm_example](./assets/lepsharm.gif) ![LEPS_NEB](./assets/lepsharm_ea.png) \n\n### CI-NEB\nEvery thing is the same except that \n```python\nneb =NEB(leps, path, climbing=True, n_climbs=1) # set one image for climbing\nhistory = neb.run(verbose=True, n_steps=10, n_climb_steps=100) # run normal NEB for 10 steps and then switch to CINEB\n```\n\nFor comparison, normal NEB using `LEPSHarm` potential with 5 images gives the following\n\n![LEPS example](./assets/lepsharm_nocineb.png) ![LEPS_NEB](./assets/lepsharm_ea_nocineb.png) \n\nWith CI-NEB \n\n![LEPS example](./assets/lepsharm_cineb.png) ![LEPS_NEB](./assets/lepsharm_ea_cineb.png) \n\nWe can see that using only 5 images, the CINEB gets `Ea = 3.63 eV`, the same as the one we ran with 101 images!\nWith only normal NEB, however, this `Ea` value is substantially smaller (`3.25 eV`). \n## References\n\n> [1] Henkelman, G., & J\u00f3nsson, H. (2000). Improved tangent estimate in the nudged elastic band method for finding minimum energy paths and saddle points. The Journal of chemical physics, 113(22), 9978-9985.\n\n> [2] Henkelman, G., Uberuaga, B. P., & J\u00f3nsson, H. (2000). A climbing image nudged elastic band method for finding saddle points and minimum energy paths. The Journal of chemical physics, 113(22), 9901-9904.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/chc273/mep", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chc273/mep", "keywords": "materials,science,nudged elastic band", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "mep", "package_url": "https://pypi.org/project/mep/", "platform": "", "project_url": "https://pypi.org/project/mep/", "project_urls": {"Download": "https://github.com/chc273/mep", "Homepage": "https://github.com/chc273/mep"}, "release_url": "https://pypi.org/project/mep/0.0.1/", "requires_dist": ["numpy", "pymatgen", "scipy"], "requires_python": "", "summary": "Minimal energy path tools for atomistic systems", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Minimum Energy Path Tools</h1>\n<p><a href=\"https://circleci.com/gh/chc273/mep\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd523c14fdf24bc8ba7e90550f8bfa49017a4f49/68747470733a2f2f636972636c6563692e636f6d2f67682f6368633237332f6d65702e7376673f7374796c653d737667\"></a>\n<a href=\"https://coveralls.io/github/chc273/mep?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12644b33e8665c852d66d0331b2e6c98bcc3f89a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6368633237332f6d65702f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<h2>Introduction</h2>\n<p>This package contains various methods for finding the minimal energy path in atom simulations.</p>\n<p>Currently the following methods are implemented:</p>\n<blockquote>\n<p>Nudged elastic band method [1]</p>\n</blockquote>\n<blockquote>\n<p>Climbing image nudged elastic band method [2]</p>\n</blockquote>\n<h2>How to use</h2>\n<h3>Regular NEB</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mep.optimize</span> <span class=\"kn\">import</span> <span class=\"n\">ScipyOptimizer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mep.path</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mep.neb</span> <span class=\"kn\">import</span> <span class=\"n\">NEB</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mep.models</span> <span class=\"kn\">import</span> <span class=\"n\">LEPS</span>\n\n<span class=\"n\">leps</span> <span class=\"o\">=</span> <span class=\"n\">LEPS</span><span class=\"p\">()</span> <span class=\"c1\"># Test model </span>\n<span class=\"n\">op</span> <span class=\"o\">=</span> <span class=\"n\">ScipyOptimizer</span><span class=\"p\">(</span><span class=\"n\">leps</span><span class=\"p\">)</span> <span class=\"c1\"># local optimizer for finding local minima</span>\n<span class=\"n\">x0</span> <span class=\"o\">=</span> <span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">minimize</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">bounds</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"c1\"># minima one</span>\n<span class=\"n\">x1</span> <span class=\"o\">=</span> <span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">minimize</span><span class=\"p\">([</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">bounds</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"c1\"># minima two</span>\n\n\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"o\">.</span><span class=\"n\">from_linear_end_points</span><span class=\"p\">(</span><span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"mi\">101</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># set 101 images, and k=1</span>\n<span class=\"n\">neb</span> <span class=\"o\">=</span><span class=\"n\">NEB</span><span class=\"p\">(</span><span class=\"n\">leps</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">)</span> <span class=\"c1\"># initialize NEB</span>\n<span class=\"n\">history</span> <span class=\"o\">=</span> <span class=\"n\">neb</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"c1\"># run</span>\n</pre>\n<p>The results will be like the following</p>\n<p><img alt=\"LEPS example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b946d29ba1151fafa7c6fd68e47a2531d864890c/2e2f6173736574732f6c6570732e676966\"> <img alt=\"LEPS_NEB\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ab2370d058ac4e5deadddfdf814ee71977599fa/2e2f6173736574732f6c6570735f65612e706e67\"></p>\n<p>Similar results can be obtained using the LEPS model with harmonics <code>LEPSHarm</code></p>\n<p><img alt=\"LEPSHarm_example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea94da2635ab860d174043e9f92aefb677f6f68c/2e2f6173736574732f6c6570736861726d2e676966\"> <img alt=\"LEPS_NEB\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61fa94980b4a835a3c8c54e43b2b1ead13f67178/2e2f6173736574732f6c6570736861726d5f65612e706e67\"></p>\n<h3>CI-NEB</h3>\n<p>Every thing is the same except that</p>\n<pre><span class=\"n\">neb</span> <span class=\"o\">=</span><span class=\"n\">NEB</span><span class=\"p\">(</span><span class=\"n\">leps</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">climbing</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">n_climbs</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\"># set one image for climbing</span>\n<span class=\"n\">history</span> <span class=\"o\">=</span> <span class=\"n\">neb</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">n_steps</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">n_climb_steps</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"c1\"># run normal NEB for 10 steps and then switch to CINEB</span>\n</pre>\n<p>For comparison, normal NEB using <code>LEPSHarm</code> potential with 5 images gives the following</p>\n<p><img alt=\"LEPS example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c4daee623447abb45858d9863163fc508d2fee00/2e2f6173736574732f6c6570736861726d5f6e6f63696e65622e706e67\"> <img alt=\"LEPS_NEB\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c5c83fc069883f59076a55223f21e1eac0a1436/2e2f6173736574732f6c6570736861726d5f65615f6e6f63696e65622e706e67\"></p>\n<p>With CI-NEB</p>\n<p><img alt=\"LEPS example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66eb034c89be9335b0e1245a65a5a41a47417cec/2e2f6173736574732f6c6570736861726d5f63696e65622e706e67\"> <img alt=\"LEPS_NEB\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29b1e75eac56c676730579e52dac5176f25ed8c1/2e2f6173736574732f6c6570736861726d5f65615f63696e65622e706e67\"></p>\n<p>We can see that using only 5 images, the CINEB gets <code>Ea = 3.63 eV</code>, the same as the one we ran with 101 images!\nWith only normal NEB, however, this <code>Ea</code> value is substantially smaller (<code>3.25 eV</code>).</p>\n<h2>References</h2>\n<blockquote>\n<p>[1] Henkelman, G., &amp; J\u00f3nsson, H. (2000). Improved tangent estimate in the nudged elastic band method for finding minimum energy paths and saddle points. The Journal of chemical physics, 113(22), 9978-9985.</p>\n</blockquote>\n<blockquote>\n<p>[2] Henkelman, G., Uberuaga, B. P., &amp; J\u00f3nsson, H. (2000). A climbing image nudged elastic band method for finding saddle points and minimum energy paths. The Journal of chemical physics, 113(22), 9901-9904.</p>\n</blockquote>\n\n          </div>"}, "last_serial": 5657611, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "da50b3e6d73778ca00dc12326d40b69f", "sha256": "f7e73bf1700d85bcd326a7587697a03f9da109d51ee65c95d4726dc14b95afc1"}, "downloads": -1, "filename": "mep-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "da50b3e6d73778ca00dc12326d40b69f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11281, "upload_time": "2019-08-09T20:14:43", "upload_time_iso_8601": "2019-08-09T20:14:43.191412Z", "url": "https://files.pythonhosted.org/packages/b3/02/da70f715c521c4136f9f4fcc5590a455f9bd1a2e98c87718ebef92560c29/mep-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1465a676727d3120ff23f6f0a8fc770d", "sha256": "a9e75b5992ab94351b4947d76fef765a3157ef92104cb2c6125de1df5c2160ab"}, "downloads": -1, "filename": "mep-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1465a676727d3120ff23f6f0a8fc770d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12899, "upload_time": "2019-08-09T20:14:53", "upload_time_iso_8601": "2019-08-09T20:14:53.689793Z", "url": "https://files.pythonhosted.org/packages/3e/43/c1df179a3a4699529fab5f611b64a9fca19d41eb6600911de06eac278502/mep-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "da50b3e6d73778ca00dc12326d40b69f", "sha256": "f7e73bf1700d85bcd326a7587697a03f9da109d51ee65c95d4726dc14b95afc1"}, "downloads": -1, "filename": "mep-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "da50b3e6d73778ca00dc12326d40b69f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11281, "upload_time": "2019-08-09T20:14:43", "upload_time_iso_8601": "2019-08-09T20:14:43.191412Z", "url": "https://files.pythonhosted.org/packages/b3/02/da70f715c521c4136f9f4fcc5590a455f9bd1a2e98c87718ebef92560c29/mep-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1465a676727d3120ff23f6f0a8fc770d", "sha256": "a9e75b5992ab94351b4947d76fef765a3157ef92104cb2c6125de1df5c2160ab"}, "downloads": -1, "filename": "mep-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1465a676727d3120ff23f6f0a8fc770d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12899, "upload_time": "2019-08-09T20:14:53", "upload_time_iso_8601": "2019-08-09T20:14:53.689793Z", "url": "https://files.pythonhosted.org/packages/3e/43/c1df179a3a4699529fab5f611b64a9fca19d41eb6600911de06eac278502/mep-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:15 2020"}