{"info": {"author": "Ikaros kun", "author_email": "merle.liukun@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython"], "description": "\nPython Facebook\n\nA Python wrapper around for Facebook Common API.\n\n.. image:: https://travis-ci.org/sns-sdks/python-facebook.svg?branch=master\n    :target: https://travis-ci.org/sns-sdks/python-facebook\n    :alt: Build Status\n\n.. image:: https://readthedocs.org/projects/python-facebook-api/badge/?version=latest\n    :target: https://python-facebook-api.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://codecov.io/gh/sns-sdks/python-facebook/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/sns-sdks/python-facebook\n    :alt: Codecov\n\n.. image:: https://img.shields.io/pypi/v/python-facebook-api.svg\n    :target: https://pypi.org/project/python-facebook-api\n    :alt: PyPI\n\n\nREADME: `English <README.rst>`_ | `\u4e2d\u6587 <README-zh.rst>`_\n\n======\nTHANKS\n======\n\nInspired by `Python-Twitter <https://github.com/bear/python-twitter>`_.\n\n============\nIntroduction\n============\n\nLibrary provides a service to easy use Facebook Graph API.\n\nIt currently includes the use of ``Facebook`` and ``Instagram Business``, ``Instagram Basic Display`` product data.\n\n==========\nInstalling\n==========\n\nYou can install this library from ``pypi``::\n\n    $pip install --upgrade python-facebook-api\n    \u2728\ud83c\udf70\u2728\n\n\n=============\nDocumentation\n=============\n\nYou can view the latest ``python-facebook`` documentation at: https://python-facebook-api.readthedocs.io/en/latest/\n\nAlso view the full ``Facebook Graph API`` docs at: https://developers.facebook.com/docs/graph-api/\n\nAnd full ``Instagram Graph API`` docs at: https://developers.facebook.com/docs/instagram-api/\n\nAnd full ``Instagram Basic Display API`` docs at: https://developers.facebook.com/docs/instagram-basic-display-api/\n\n=============================\nBase-Usage-Facebook Graph API\n=============================\n\nThe API is exposed via the ``pyfacebook.Api`` class.\n\nTo get data, you need have a facebook app first.\nYou can get more information about create, apply permissions for app at `App docs <https://developers.facebook.com/docs/apps>`_.\n\n-----------\nInitial Api\n-----------\n\nFacebook has different type access tokens. You can use different access token to get different data.\n\n1. User Access Token\n#. App Access Token\n#. Page Access Token\n#. Client Token (library not support)\n\nYou can see the docs `access-token`_ to get more information.\n\nIf you want to get user access token by authorize. You can follows the docs `authorization-manually`_ to initial the api.\n\nIf you just want to use app access token to get some public data. You can initial an api as follows::\n\n    In [2]: api = Api(app_id=\"your app id\", app_secret=\"your app secret\", application_only_auth=True)\n    In [3]: api.get_token_info()\n    Out[3]: AccessToken(app_id='id', application='app name', user_id=None)\n\nIf you have a short-lived token you can initial an api as follows::\n\n    In [4]: api = Api(app_id=\"your app id\", app_secret=\"your app secret\", short_token=\"short-lived token\")\n    In [5]: api.get_token_info()\n    Out[5]: AccessToken(app_id='id', application='app name', user_id='token user id')\n\nIf you have a long term token you can initial an api as follows(Just provide only ``long_term_token`` parameter enough. but for security need provide with app credentials)::\n\n    In [6]: api = Api(app_id=\"your app id\", app_secret=\"your app secret\", long_term_token=\"long-term token\")\n    In [7]: api.get_token_info()\n    Out[7]: AccessToken(app_id='id', application='app name', user_id='token user id')\n\n    # this need token have additional manage_pages permission.\n    In [8]: api = Api(long_term_token=\"long-term token\")\n\nthe different initial with parameter ``short_token`` or ``long_term_token`` is short token will auto exchange a long term token inside.\n\nFacebook rate limit is very vague, it related to the number of users of your app. So library provide the custom sleep times in requests.\nYou can only set parameter ``sleep_on_rate_limit`` with ``True`` to let api sleep two seconds between two requests.\nOr you can set parameter ``sleep_seconds_mapping`` with a dict contains your custom data. ex::\n\n    In [9]: mapping = {10: 2, 20: 5, 50: 20, 70: 30}  # key is api limit reached percent and value is seconds to sleep.\n    In [10]: api = Api(\n        ...:     app_id=\"your app id\", app_secret=\"your app secret\", long_term_token=\"long-term token\",\n        ...:     sleep_on_rate_limit=True, sleep_seconds_mapping=mapping\n        ...:)\n\n\n--------\nGet Data\n--------\n\nYou can get a facebook page information by follows methods.\n\nTo fetch one facebook page's public data::\n\n    In [3]: api.get_page_info(username='facebookapp')\n    Out[3]: Page(id='20531316728', name='Facebook', username='facebookapp')\n\n\nTo fetch multi page by one request, you can pass the page username list or page id list with the ``ids`` parameter as follows::\n\n    In [4]: api.get_pages_info(ids=[\"20531316728\", \"nba\"])\n    Out[4]:\n    {'20531316728': Page(id='20531316728', name='Facebook', username='facebookapp'),\n     'nba': Page(id='8245623462', name='NBA', username='nba')}\n\nThere have multi methods to retrieve one page's posts data.\n\n>>> api.get_page_feeds()\n>>> api.get_page_posts()\n>>> api.get_page_published_posts()\n>>> api.get_page_tagged_posts()\n\nPage feeds can get feed of posts (including status updates) and links published by this page, or by others on this page. You can call with follows::\n\n    In [5]: api.get_page_feeds(page_id=\"20531316728\",count=2)\n    Out[5]:\n    [Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/'),\n     Post(id='20531316728_10159023836696729', permalink_url='https://www.facebook.com/20531316728/posts/10159023836696729/')]\n\nPage posts can only get the posts that were published by this page::\n\n    In [6]: api.get_page_posts(page_id=\"20531316728\",count=2)\n    Out[6]:\n    [Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/'),\n     Post(id='20531316728_10159023836696729', permalink_url='https://www.facebook.com/20531316728/posts/10159023836696729/')]\n\n\nBecause facebook graph api limit `Page Feed <https://developers.facebook.com/docs/graph-api/reference/v5.0/page/feed>`_.\nUse public token only can get approximately 600 ranked, published posts per year.\n\nSo if you want to get page's all posts or posts which tagged the page. you need use method ``get_page_published_posts``, and this need a page access token with permission ``manage_pages``.\n\nYou can use authorization to get that page access token. Just follows docs `authorization-manually`_.\nThen can get all published posts::\n\n    In [7]: api.get_published_posts(username='facebookapp', access_token='page access token')\n    Out[7]: [Post...]\n\nYou can get tagged posts::\n\n    In [8]: api.get_tagged_posts(username='facebookapp', access_token='page access token')\n    Out[8]: [Post...]\n\n\nIf you also have the post id, you can get post detail info by follows methods.\n\nTo fetch a post info::\n\n    In [9]: api.get_post_info(post_id=\"20531316728_587455038708591\")\n    Out[9]: Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/')\n\nTo fetch multi posts by one requests::\n\n    In [10]: api.get_posts_info(ids=[\"20531316728_587455038708591\", \"20531316728_10159023836696729\"])\n    Out[10]:\n    {'20531316728_587455038708591': Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/'),\n     '20531316728_10159023836696729': Post(id='20531316728_10159023836696729', permalink_url='https://www.facebook.com/20531316728/posts/10159023836696729/')}\n\nYou can get comments data by the object(post,page and so on) id::\n\n    In [11]: api.get_comments_by_object(object_id=\"20531316728_587455038708591\", count=2)\n    Out[11]:\n    ([Comment(id='587455038708591_587460942041334', can_like=True, can_comment=True, comment_count=2, like_count=1),\n      Comment(id='587455038708591_587464298707665', can_like=True, can_comment=True, comment_count=2, like_count=14)],\n     CommentSummary(total_count=392, can_comment=True))\n\nIf you already have the comment id, you can get comment details info with follows methods.\n\nTo fetch one comment info::\n\n    In [12]: api.get_comment_info(comment_id=\"587455038708591_587460942041334\")\n    Out[12]: Comment(id='587455038708591_587460942041334', comment_count=2, like_count=1)\n\nTo fetch multi comment info by one request::\n\n    In [13]: api.get_comments_info(ids=[\"587455038708591_587460942041334\", \"587455038708591_587464298707665\"])\n    Out[13]:\n    {'587455038708591_587460942041334': Comment(id='587455038708591_587460942041334', comment_count=2, like_count=1),\n     '587455038708591_587464298707665': Comment(id='587455038708591_587464298707665', comment_count=2, like_count=14)}\n\n\n\nYou can get the page's profile picture by follow methods.\n\nTo fetch one page picture::\n\n    In [14]: api.get_picture(page_id=\"20531316728\")\n    Out[14]: ProfilePictureSource(url='https://scontent.xx.fbcdn.net/v/t1.0-1/p100x100/58978526_10158354585751729_7411073224387067904_o.png?_nc_cat=1&_nc_oc=AQmaFO7eND-DVRoArrQLUZVDpmemw8nMPmHJWvoCyXId_MKLLHQdsS8UbTOX4oaEfeQ&_nc_ht=scontent.xx&oh=128f57c4dc65608993af62b562d92d84&oe=5E942420', height=100, width=100)\n\n\nTo fetch multi page picture::\n\n    In [15]: api.get_pictures(ids=[\"20531316728\", \"nba\"])\n    Out[15]:\n    {'20531316728': ProfilePictureSource(url='https://scontent.xx.fbcdn.net/v/t1.0-1/p100x100/58978526_10158354585751729_7411073224387067904_o.png?_nc_cat=1&_nc_oc=AQmaFO7eND-DVRoArrQLUZVDpmemw8nMPmHJWvoCyXId_MKLLHQdsS8UbTOX4oaEfeQ&_nc_ht=scontent.xx&oh=128f57c4dc65608993af62b562d92d84&oe=5E942420', height=100, width=100),\n     'nba': ProfilePictureSource(url='https://scontent.xx.fbcdn.net/v/t1.0-1/p100x100/81204460_10158199356848463_5727214464013434880_n.jpg?_nc_cat=1&_nc_oc=AQmcent57E-a-923C_VVpiX26nGqKDodImY1gsiu7h1czDmcpLHXR8D5hIh9g9Ao3wY&_nc_ht=scontent.xx&oh=1656771e6c11bd03147b69ee643238ba&oe=5E66450C', height=100, width=100)}\n\n\n\n==============================\nBase-Usage-Instagram Graph API\n==============================\n\nInstagram Graph API allows to get `instagram Professional accounts <https://help.instagram.com/502981923235522>`_ data.\n\n-----------\nInitial Api\n-----------\n\nAs similar to facebook graph api. This api can initial by multi methods. But only can use user access token, and need your instagram business id.\n\nIf you want to get user access token by authorize. You can follows the docs `authorization-manually`_ to initial the api.\n\nIf you have a short-lived token you can initial an api as follows::\n\n    In [2]: api = IgProApi(app_id=\"your app id\", app_secret=\"your app secret\", short_token=\"short-lived token\", instagram_business_id=\"17841406338772941\")\n    In [3]: api.get_token_info()\n    Out[3]: AccessToken(app_id='id', application='app name', user_id=\"token user id\")\n\nIf you have a long term token you can initial an api as follows(Just provide only ``long_term_token`` parameter enough. but for security need provide with app credentials)::\n\n    In [4]: api = IgProApi(app_id=\"your app id\", app_secret=\"your app secret\", long_term_token=\"long-lived token\")\n    In [5]: api.get_token_info()\n    Out[5]: AccessToken(app_id='id', application='app name', user_id='token user id')\n\n--------\nGet Data\n--------\n\nIf you want to search other's business account basic info and medias.\nYou can use methods as follows::\n\n    - discovery_user: retrieve user basic data\n    - discovery_user_medias: retrieve user medias data\n\n.. note::\n   Use discovery only support search by instagram user name.\n\nRetrieve other user info by username::\n\n    In [6]: api.discovery_user(username=\"facebook\")\n    Out[6]: IgProUser(id='17841400455970028', name='Facebook', username='facebook')\n\nRetrieve other user medias by username::\n\n    In [7]: api.discovery_user_medias(username=\"facebook\", count=2)\n    Out[7]:\n    [IgProMedia(comments=None, id='17859633232647524', permalink='https://www.instagram.com/p/B6jje2UnoH8/'),\n     IgProMedia(comments=None, id='18076151185161297', permalink='https://www.instagram.com/p/B6ji-PZH2V1/')]\n\n\nGet your account info::\n\n    In [10]: api.get_user_info(user_id=\"your instagram business id\")\n    Out[10]: IgProUser(id='17841406338772941', name='LiuKun', username='ikroskun')\n\n\nGet your medias::\n\n    In [11]: api.get_user_medias(user_id=api.instagram_business_id, count=2)\n    Out[11]:\n    [IgProMedia(comments=None, id='18075344632131157', permalink='https://www.instagram.com/p/B38X8BzHsDi/'),\n     IgProMedia(comments=None, id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')]\n\n\nIf you already have some medias id, you can get media info as follows methods.\n\nTo fetch a post info::\n\n    In [12]: api.get_media_info(media_id=\"18075344632131157\")\n    Out[12]: IgProMedia(comments=None, id='18075344632131157', permalink='https://www.instagram.com/p/B38X8BzHsDi/')\n\n\nTo fetch multi medias by one requests::\n\n    In [13]: api.get_medias_info(media_ids=[\"18075344632131157\", \"18027939643230671\"])\n    Out[13]:\n    {'18075344632131157': IgProMedia(comments=None, id='18075344632131157', permalink='https://www.instagram.com/p/B38X8BzHsDi/'),\n     '18027939643230671': IgProMedia(comments=None, id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')}\n\nGet comments for media::\n\n    In [16]: api.get_comments_by_media(media_id=\"17955956875141196\", count=2)\n    Out[16]:\n    [IgProComment(id='17862949873623188', timestamp='2020-01-05T05:58:47+0000'),\n     IgProComment(id='17844360649889631', timestamp='2020-01-05T05:58:42+0000')]\n\n\nIf you already have some comments id, you can get comment details info as follows methods.\n\nTo fetch a comment info::\n\n    In [17]: api.get_comment_info(comment_id=\"17862949873623188\")\n    Out[17]: IgProComment(id='17862949873623188', timestamp='2020-01-05T05:58:47+0000')\n\nTo fetch multi comments by one requests::\n\n    In [18]: api.get_comments_info(comment_ids=[\"17862949873623188\", \"17844360649889631\"\n    ...: ])\n    Out[18]:\n    {'17862949873623188': IgProComment(id='17862949873623188', timestamp='2020-01-05T05:58:47+0000'),\n     '17844360649889631': IgProComment(id='17844360649889631', timestamp='2020-01-05T05:58:42+0000')}\n\nGet replies for a comments::\n\n    In [19]: api.get_replies_by_comment(\"17984127178281340\", count=2)\n    Out[19]:\n    [IgProReply(id='18107567341036926', timestamp='2019-10-15T07:06:09+0000'),\n     IgProReply(id='17846106427692294', timestamp='2019-10-15T07:05:17+0000')]\n\nIf you already have some replies id, you can get replies details info as follows methods.\n\nTo fetch a reply info::\n\n    In [20]: api.get_reply_info(reply_id=\"18107567341036926\")\n    Out[20]: IgProReply(id='18107567341036926', timestamp='2019-10-15T07:06:09+0000')\n\nTo fetch multi replies info by one requests::\n\n    In [21]: api.get_replies_info(reply_ids=[\"18107567341036926\", \"17846106427692294\"])\n    Out[21]:\n    {'18107567341036926': IgProReply(id='18107567341036926', timestamp='2019-10-15T07:06:09+0000'),\n     '17846106427692294': IgProReply(id='17846106427692294', timestamp='2019-10-15T07:05:17+0000')}\n\n\nUse ``get_user_insights`` method, you can get account insights data.\n\nIf you want get your account insights, just provide ``user_id`` with your id.\n\nIf you have other account's access token, you can provide with ``user_id`` and ``access_token``::\n\n    In [4]: api.get_user_insights(user_id=api.instagram_business_id, period=\"day\", metrics=[\"impressions\", \"reach\"])\n    Out[4]:\n    [IgProInsight(name='impressions', period='day', values=[IgProInsightValue(value=1038, end_time='2020-01-08T08:00:00+0000'), IgProInsightValue(value=136, end_time='2020-01-09T08:00:00+0000')]),\n     IgProInsight(name='reach', period='day', values=[IgProInsightValue(value=751, end_time='2020-01-08T08:00:00+0000'), IgProInsightValue(value=54, end_time='2020-01-09T08:00:00+0000')])]\n\n\nThe same as ``get_user_insights``, you can custom provide ``media_id`` and ``access_token``.\n\nGet your media insights data::\n\n    In [6]: api.get_media_insights(media_id=\"media_id\", metrics=[\"engagement\",\"impressions\"])\n    Out[6]:\n    [IgProInsight(name='engagement', period='lifetime', values=[IgProInsightValue(value=90, end_time=None)]),\n     IgProInsight(name='impressions', period='lifetime', values=[IgProInsightValue(value=997, end_time=None)])]\n\nGet hashtag id::\n\n    In [3]: api.search_hashtag(q=\"love\")\n    Out[3]: [IgProHashtag(id='17843826142012701', name=None)]\n\nGet hashtag info::\n\n    In [4]: api.get_hashtag_info(hashtag_id=\"17843826142012701\")\n    Out[4]: IgProHashtag(id='17843826142012701', name='love')\n\nGet hashtag's top medias::\n\n    In [5]: r = api.get_hashtag_top_medias(hashtag_id=\"17843826142012701\", count=5)\n\n    In [6]: r\n    Out[6]:\n    [IgProMedia(comments=None, id='18086291068155608', permalink='https://www.instagram.com/p/B8ielBPpHaw/'),\n     IgProMedia(comments=None, id='17935250359346228', permalink='https://www.instagram.com/p/B8icUmwoF0Y/'),\n     IgProMedia(comments=None, id='17847031435934181', permalink='https://www.instagram.com/p/B8icycxKEn-/'),\n     IgProMedia(comments=None, id='18000940699302502', permalink='https://www.instagram.com/p/B8ieNN7Cv6S/'),\n     IgProMedia(comments=None, id='18025516372248793', permalink='https://www.instagram.com/p/B8iduQJgSyO/')]\n\nGet hashtag's recent medias::\n\n    In [7]: r1 = api.get_hashtag_recent_medias(hashtag_id=\"17843826142012701\", count=5)\n\n    In [8]: r1\n    Out[8]:\n    [IgProMedia(comments=None, id='18128248021002097', permalink='https://www.instagram.com/p/B8ifnoWA5Ru/'),\n     IgProMedia(comments=None, id='18104579776105272', permalink='https://www.instagram.com/p/B8ifwfsgBw2/'),\n     IgProMedia(comments=None, id='17898846532442427', permalink='https://www.instagram.com/p/B8ifwZ4ltqP/'),\n     IgProMedia(comments=None, id='17891698510462453', permalink='https://www.instagram.com/p/B8ifwepgf_E/'),\n     IgProMedia(comments=None, id='17883544606492965', permalink='https://www.instagram.com/p/B8ifwabgiPf/')]\n\nIf you have other account's access token, you can provide with ``user_id`` and ``access_token`` to get his search hashtags.\nOr just get your account recent searched hashtags::\n\n    In [9]: api.get_user_recently_searched_hashtags(user_id=\"17841406338772941\")\n    Out[9]:\n    [IgProHashtag(id='17843826142012701', name='love'),\n     IgProHashtag(id='17843421130029320', name='liukun'),\n     IgProHashtag(id='17841562447105233', name='loveyou'),\n     IgProHashtag(id='17843761288040806', name='a')]\n\n\nGet the media objects in which a Business or Creator Account has been tagged.\nIf you have another account authorized access token, you can provide with ``user_id`` and ``access_token`` to get his data.\nOr only get your account's data::\n\n    In [10]: medias = api.get_tagged_user_medias(user_id=api.instagram_business_id, count=5, limit=5)\n    Out[10]:\n    [IgProMedia(id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/'),\n     IgProMedia(id='17846368219941692', permalink='https://www.instagram.com/p/B8gQCApHMT-/'),\n     IgProMedia(id='17913531439230186', permalink='https://www.instagram.com/p/Bop3AGOASfY/'),\n     IgProMedia(id='17978630677077508', permalink='https://www.instagram.com/p/BotSABoAn8E/'),\n     IgProMedia(id='17955956875141196', permalink='https://www.instagram.com/p/Bn-35GGl7YM/')]\n\nGet data about a comment that an Business or Creator Account has been @mentioned in comment text::\n\n    In [11]: api.get_mentioned_comment_info(user_id=api.instagram_business_id, comment_id=\"17892250648466172\")\n    Out[11]: IgProComment(id='17892250648466172', timestamp='2020-02-24T09:15:16+0000')\n\n\nGet data about a media object on which a Business or Creator Account has been @mentioned in a caption::\n\n    In [12]: api.get_mentioned_media_info(user_id=api.instagram_business_id, media_id=\"18027939643230671\")\n    Out[12]: IgProMedia(id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')\n\n==============================\nBase-Usage-Instagram Basic API\n==============================\n\nInstagram Basic Display API can be used to access any type of Instagram account but only provides read-access to basic data.\n\nYou need do authorize first, and get access token which have permission to retrieve data.\n\nAll docs on `Basic Display APi <https://developers.facebook.com/docs/instagram-basic-display-api>`_.\n\n-----------\nInitial Api\n-----------\n\nNow provide three methods to init api.\n\nIf you have long-lived access token, can just initial by token::\n\n    In[1]: from pyfacebook import IgBasicApi\n    In[2]: api = IgBasicApi(long_term_token=\"token\")\n\nIf you have short-lived access token, can provide with app credentials::\n\n    In[3]: api = IgBasicApi(app_id=\"app id\", app_secret=\"app secret\", short_token=\"token\")\n\nIf you want to authorized by user on hand. You can use authorize flow::\n\n    In[4]: api = IgBasicApi(app_id=\"app id\", app_secret=\"app secret\", initial_access_token=False)\n    In[5]: api.get_authorization_url()\n    Out[5]:\n    ('https://api.instagram.com/oauth/authorize?response_type=code&client_id=app+id&redirect_uri=https%3A%2F%2Flocalhost%2F&scope=user_profile+user_media&state=PyFacebook',\n     'PyFacebook')\n    # give permission and copy the redirect full url.\n    In[6]: api.exchange_access_token(response=\"the full url\")\n\n--------\nGet Data\n--------\n\nYou can get user basic info::\n\n    In[7]: api.get_user_info()\n    Out[7]: IgBasicUser(id='17841406338772941', username='ikroskun')\n\nYou can get user medias::\n\n    In[7]: r = api.get_user_medias()\n    In[8]: r\n    Out[8]:\n    [IgBasicMedia(id='17846368219941692', media_type='IMAGE', permalink='https://www.instagram.com/p/B8gQCApHMT-/'),\n     IgBasicMedia(id='18091893643133286', media_type='IMAGE', permalink='https://www.instagram.com/p/B8gPx-UnsjA/'),\n     IgBasicMedia(id='18075344632131157', media_type='VIDEO', permalink='https://www.instagram.com/p/B38X8BzHsDi/'),\n     IgBasicMedia(id='18027939643230671', media_type='CAROUSEL_ALBUM', permalink='https://www.instagram.com/p/B38Xyp6nqsS/'),\n     IgBasicMedia(id='17861821972334188', media_type='IMAGE', permalink='https://www.instagram.com/p/BuGD8NmF4KI/'),\n     IgBasicMedia(id='17864312515295083', media_type='IMAGE', permalink='https://www.instagram.com/p/BporjsCF6mt/'),\n     IgBasicMedia(id='17924095942208544', media_type='IMAGE', permalink='https://www.instagram.com/p/BoqBgsNl5qT/'),\n     IgBasicMedia(id='17896189813249754', media_type='IMAGE', permalink='https://www.instagram.com/p/Bop_Hz5FzyL/'),\n     IgBasicMedia(id='17955956875141196', media_type='CAROUSEL_ALBUM', permalink='https://www.instagram.com/p/Bn-35GGl7YM/'),\n     IgBasicMedia(id='17970645226046242', media_type='IMAGE', permalink='https://www.instagram.com/p/Bme0cU1giOH/')]\n\nYou can just get one media info::\n\n    In[9]: r = basic_api.get_media_info(media_id=\"18027939643230671\")\n    In[9]: r\n    Out[10]: IgBasicMedia(id='18027939643230671', media_type='CAROUSEL_ALBUM', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')\n\n====\nTODO\n====\n\n------------\nNow features\n------------\n\nFacebook Api:\n\n- Page Info.\n- Page Picture Info.\n- Feed Info (public posts, published posts, tagged posts).\n- Comment Info.\n\nInstagram Professional Api:\n\n- Other business account info and media.\n- Authorized business account info\n- Authorized account medias\n- Authorized account comments\n- Authorized account replies\n- Authorized account insights and media insights\n- Search hashtag id\n- Get hashtag info\n- Get top medias with hashtag\n- Get recent medias with hashtag\n- Get Authorized account recent searched hashtags\n- Get medias which tagged account\n- Get comment info mentioned user.\n- Get media info mentioned user.\n\nInstagram Basic display api:\n\n- Get user info\n- Get user medias\n- Get media info\n\n----\nTODO\n----\n\n- publish\n\n\n.. _access-token: https://developers.facebook.com/docs/facebook-login/access-tokens\n.. _authorization-manually: https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://github.com/sns-sdks/python-facebook", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sns-sdks/python-facebook", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "python-facebook-api", "package_url": "https://pypi.org/project/python-facebook-api/", "platform": "", "project_url": "https://pypi.org/project/python-facebook-api/", "project_urls": {"Download": "https://github.com/sns-sdks/python-facebook", "Homepage": "https://github.com/sns-sdks/python-facebook"}, "release_url": "https://pypi.org/project/python-facebook-api/0.6.1/", "requires_dist": ["attrs", "cattrs", "future", "requests", "requests-oauthlib", "typing", "six"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "A Python wrapper around the Facebook API", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python Facebook</p>\n<p>A Python wrapper around for Facebook Common API.</p>\n<a href=\"https://travis-ci.org/sns-sdks/python-facebook\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/754bf89d87576292be2fa2abbce5bf51def0f1e1/68747470733a2f2f7472617669732d63692e6f72672f736e732d73646b732f707974686f6e2d66616365626f6f6b2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://python-facebook-api.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e72a8cbfa6a5f30ab449883a82aa5f722c3c7410/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707974686f6e2d66616365626f6f6b2d6170692f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/sns-sdks/python-facebook\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0db8c797305b83af2c8488e5ff56852d411ae6f1/68747470733a2f2f636f6465636f762e696f2f67682f736e732d73646b732f707974686f6e2d66616365626f6f6b2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/python-facebook-api\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb621f69571ea4b82f98917807a957fa73101a78/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707974686f6e2d66616365626f6f6b2d6170692e737667\"></a>\n<p>README: <a href=\"README.rst\" rel=\"nofollow\">English</a> | <a href=\"README-zh.rst\" rel=\"nofollow\">\u4e2d\u6587</a></p>\n<div id=\"thanks\">\n<h2>THANKS</h2>\n<p>Inspired by <a href=\"https://github.com/bear/python-twitter\" rel=\"nofollow\">Python-Twitter</a>.</p>\n</div>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Library provides a service to easy use Facebook Graph API.</p>\n<p>It currently includes the use of <tt>Facebook</tt> and <tt>Instagram Business</tt>, <tt>Instagram Basic Display</tt> product data.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>You can install this library from <tt>pypi</tt>:</p>\n<pre>$pip install --upgrade python-facebook-api\n\u2728\ud83c\udf70\u2728\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>You can view the latest <tt><span class=\"pre\">python-facebook</span></tt> documentation at: <a href=\"https://python-facebook-api.readthedocs.io/en/latest/\" rel=\"nofollow\">https://python-facebook-api.readthedocs.io/en/latest/</a></p>\n<p>Also view the full <tt>Facebook Graph API</tt> docs at: <a href=\"https://developers.facebook.com/docs/graph-api/\" rel=\"nofollow\">https://developers.facebook.com/docs/graph-api/</a></p>\n<p>And full <tt>Instagram Graph API</tt> docs at: <a href=\"https://developers.facebook.com/docs/instagram-api/\" rel=\"nofollow\">https://developers.facebook.com/docs/instagram-api/</a></p>\n<p>And full <tt>Instagram Basic Display API</tt> docs at: <a href=\"https://developers.facebook.com/docs/instagram-basic-display-api/\" rel=\"nofollow\">https://developers.facebook.com/docs/instagram-basic-display-api/</a></p>\n</div>\n<div id=\"base-usage-facebook-graph-api\">\n<h2>Base-Usage-Facebook Graph API</h2>\n<p>The API is exposed via the <tt>pyfacebook.Api</tt> class.</p>\n<p>To get data, you need have a facebook app first.\nYou can get more information about create, apply permissions for app at <a href=\"https://developers.facebook.com/docs/apps\" rel=\"nofollow\">App docs</a>.</p>\n<div id=\"initial-api\">\n<h3>Initial Api</h3>\n<p>Facebook has different type access tokens. You can use different access token to get different data.</p>\n<ol>\n<li>User Access Token</li>\n<li>App Access Token</li>\n<li>Page Access Token</li>\n<li>Client Token (library not support)</li>\n</ol>\n<p>You can see the docs <a href=\"https://developers.facebook.com/docs/facebook-login/access-tokens\" rel=\"nofollow\">access-token</a> to get more information.</p>\n<p>If you want to get user access token by authorize. You can follows the docs <a href=\"https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow\" rel=\"nofollow\">authorization-manually</a> to initial the api.</p>\n<p>If you just want to use app access token to get some public data. You can initial an api as follows:</p>\n<pre>In [2]: api = Api(app_id=\"your app id\", app_secret=\"your app secret\", application_only_auth=True)\nIn [3]: api.get_token_info()\nOut[3]: AccessToken(app_id='id', application='app name', user_id=None)\n</pre>\n<p>If you have a short-lived token you can initial an api as follows:</p>\n<pre>In [4]: api = Api(app_id=\"your app id\", app_secret=\"your app secret\", short_token=\"short-lived token\")\nIn [5]: api.get_token_info()\nOut[5]: AccessToken(app_id='id', application='app name', user_id='token user id')\n</pre>\n<p>If you have a long term token you can initial an api as follows(Just provide only <tt>long_term_token</tt> parameter enough. but for security need provide with app credentials):</p>\n<pre>In [6]: api = Api(app_id=\"your app id\", app_secret=\"your app secret\", long_term_token=\"long-term token\")\nIn [7]: api.get_token_info()\nOut[7]: AccessToken(app_id='id', application='app name', user_id='token user id')\n\n# this need token have additional manage_pages permission.\nIn [8]: api = Api(long_term_token=\"long-term token\")\n</pre>\n<p>the different initial with parameter <tt>short_token</tt> or <tt>long_term_token</tt> is short token will auto exchange a long term token inside.</p>\n<p>Facebook rate limit is very vague, it related to the number of users of your app. So library provide the custom sleep times in requests.\nYou can only set parameter <tt>sleep_on_rate_limit</tt> with <tt>True</tt> to let api sleep two seconds between two requests.\nOr you can set parameter <tt>sleep_seconds_mapping</tt> with a dict contains your custom data. ex:</p>\n<pre>In [9]: mapping = {10: 2, 20: 5, 50: 20, 70: 30}  # key is api limit reached percent and value is seconds to sleep.\nIn [10]: api = Api(\n    ...:     app_id=\"your app id\", app_secret=\"your app secret\", long_term_token=\"long-term token\",\n    ...:     sleep_on_rate_limit=True, sleep_seconds_mapping=mapping\n    ...:)\n</pre>\n</div>\n<div id=\"get-data\">\n<h3>Get Data</h3>\n<p>You can get a facebook page information by follows methods.</p>\n<p>To fetch one facebook page\u2019s public data:</p>\n<pre>In [3]: api.get_page_info(username='facebookapp')\nOut[3]: Page(id='20531316728', name='Facebook', username='facebookapp')\n</pre>\n<p>To fetch multi page by one request, you can pass the page username list or page id list with the <tt>ids</tt> parameter as follows:</p>\n<pre>In [4]: api.get_pages_info(ids=[\"20531316728\", \"nba\"])\nOut[4]:\n{'20531316728': Page(id='20531316728', name='Facebook', username='facebookapp'),\n 'nba': Page(id='8245623462', name='NBA', username='nba')}\n</pre>\n<p>There have multi methods to retrieve one page\u2019s posts data.</p>\n<pre>&gt;&gt;&gt; api.get_page_feeds()\n&gt;&gt;&gt; api.get_page_posts()\n&gt;&gt;&gt; api.get_page_published_posts()\n&gt;&gt;&gt; api.get_page_tagged_posts()\n</pre>\n<p>Page feeds can get feed of posts (including status updates) and links published by this page, or by others on this page. You can call with follows:</p>\n<pre>In [5]: api.get_page_feeds(page_id=\"20531316728\",count=2)\nOut[5]:\n[Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/'),\n Post(id='20531316728_10159023836696729', permalink_url='https://www.facebook.com/20531316728/posts/10159023836696729/')]\n</pre>\n<p>Page posts can only get the posts that were published by this page:</p>\n<pre>In [6]: api.get_page_posts(page_id=\"20531316728\",count=2)\nOut[6]:\n[Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/'),\n Post(id='20531316728_10159023836696729', permalink_url='https://www.facebook.com/20531316728/posts/10159023836696729/')]\n</pre>\n<p>Because facebook graph api limit <a href=\"https://developers.facebook.com/docs/graph-api/reference/v5.0/page/feed\" rel=\"nofollow\">Page Feed</a>.\nUse public token only can get approximately 600 ranked, published posts per year.</p>\n<p>So if you want to get page\u2019s all posts or posts which tagged the page. you need use method <tt>get_page_published_posts</tt>, and this need a page access token with permission <tt>manage_pages</tt>.</p>\n<p>You can use authorization to get that page access token. Just follows docs <a href=\"https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow\" rel=\"nofollow\">authorization-manually</a>.\nThen can get all published posts:</p>\n<pre>In [7]: api.get_published_posts(username='facebookapp', access_token='page access token')\nOut[7]: [Post...]\n</pre>\n<p>You can get tagged posts:</p>\n<pre>In [8]: api.get_tagged_posts(username='facebookapp', access_token='page access token')\nOut[8]: [Post...]\n</pre>\n<p>If you also have the post id, you can get post detail info by follows methods.</p>\n<p>To fetch a post info:</p>\n<pre>In [9]: api.get_post_info(post_id=\"20531316728_587455038708591\")\nOut[9]: Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/')\n</pre>\n<p>To fetch multi posts by one requests:</p>\n<pre>In [10]: api.get_posts_info(ids=[\"20531316728_587455038708591\", \"20531316728_10159023836696729\"])\nOut[10]:\n{'20531316728_587455038708591': Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/'),\n '20531316728_10159023836696729': Post(id='20531316728_10159023836696729', permalink_url='https://www.facebook.com/20531316728/posts/10159023836696729/')}\n</pre>\n<p>You can get comments data by the object(post,page and so on) id:</p>\n<pre>In [11]: api.get_comments_by_object(object_id=\"20531316728_587455038708591\", count=2)\nOut[11]:\n([Comment(id='587455038708591_587460942041334', can_like=True, can_comment=True, comment_count=2, like_count=1),\n  Comment(id='587455038708591_587464298707665', can_like=True, can_comment=True, comment_count=2, like_count=14)],\n CommentSummary(total_count=392, can_comment=True))\n</pre>\n<p>If you already have the comment id, you can get comment details info with follows methods.</p>\n<p>To fetch one comment info:</p>\n<pre>In [12]: api.get_comment_info(comment_id=\"587455038708591_587460942041334\")\nOut[12]: Comment(id='587455038708591_587460942041334', comment_count=2, like_count=1)\n</pre>\n<p>To fetch multi comment info by one request:</p>\n<pre>In [13]: api.get_comments_info(ids=[\"587455038708591_587460942041334\", \"587455038708591_587464298707665\"])\nOut[13]:\n{'587455038708591_587460942041334': Comment(id='587455038708591_587460942041334', comment_count=2, like_count=1),\n '587455038708591_587464298707665': Comment(id='587455038708591_587464298707665', comment_count=2, like_count=14)}\n</pre>\n<p>You can get the page\u2019s profile picture by follow methods.</p>\n<p>To fetch one page picture:</p>\n<pre>In [14]: api.get_picture(page_id=\"20531316728\")\nOut[14]: ProfilePictureSource(url='https://scontent.xx.fbcdn.net/v/t1.0-1/p100x100/58978526_10158354585751729_7411073224387067904_o.png?_nc_cat=1&amp;_nc_oc=AQmaFO7eND-DVRoArrQLUZVDpmemw8nMPmHJWvoCyXId_MKLLHQdsS8UbTOX4oaEfeQ&amp;_nc_ht=scontent.xx&amp;oh=128f57c4dc65608993af62b562d92d84&amp;oe=5E942420', height=100, width=100)\n</pre>\n<p>To fetch multi page picture:</p>\n<pre>In [15]: api.get_pictures(ids=[\"20531316728\", \"nba\"])\nOut[15]:\n{'20531316728': ProfilePictureSource(url='https://scontent.xx.fbcdn.net/v/t1.0-1/p100x100/58978526_10158354585751729_7411073224387067904_o.png?_nc_cat=1&amp;_nc_oc=AQmaFO7eND-DVRoArrQLUZVDpmemw8nMPmHJWvoCyXId_MKLLHQdsS8UbTOX4oaEfeQ&amp;_nc_ht=scontent.xx&amp;oh=128f57c4dc65608993af62b562d92d84&amp;oe=5E942420', height=100, width=100),\n 'nba': ProfilePictureSource(url='https://scontent.xx.fbcdn.net/v/t1.0-1/p100x100/81204460_10158199356848463_5727214464013434880_n.jpg?_nc_cat=1&amp;_nc_oc=AQmcent57E-a-923C_VVpiX26nGqKDodImY1gsiu7h1czDmcpLHXR8D5hIh9g9Ao3wY&amp;_nc_ht=scontent.xx&amp;oh=1656771e6c11bd03147b69ee643238ba&amp;oe=5E66450C', height=100, width=100)}\n</pre>\n</div>\n</div>\n<div id=\"base-usage-instagram-graph-api\">\n<h2>Base-Usage-Instagram Graph API</h2>\n<p>Instagram Graph API allows to get <a href=\"https://help.instagram.com/502981923235522\" rel=\"nofollow\">instagram Professional accounts</a> data.</p>\n<div id=\"id2\">\n<h3>Initial Api</h3>\n<p>As similar to facebook graph api. This api can initial by multi methods. But only can use user access token, and need your instagram business id.</p>\n<p>If you want to get user access token by authorize. You can follows the docs <a href=\"https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow\" rel=\"nofollow\">authorization-manually</a> to initial the api.</p>\n<p>If you have a short-lived token you can initial an api as follows:</p>\n<pre>In [2]: api = IgProApi(app_id=\"your app id\", app_secret=\"your app secret\", short_token=\"short-lived token\", instagram_business_id=\"17841406338772941\")\nIn [3]: api.get_token_info()\nOut[3]: AccessToken(app_id='id', application='app name', user_id=\"token user id\")\n</pre>\n<p>If you have a long term token you can initial an api as follows(Just provide only <tt>long_term_token</tt> parameter enough. but for security need provide with app credentials):</p>\n<pre>In [4]: api = IgProApi(app_id=\"your app id\", app_secret=\"your app secret\", long_term_token=\"long-lived token\")\nIn [5]: api.get_token_info()\nOut[5]: AccessToken(app_id='id', application='app name', user_id='token user id')\n</pre>\n</div>\n<div id=\"id3\">\n<h3>Get Data</h3>\n<p>If you want to search other\u2019s business account basic info and medias.\nYou can use methods as follows:</p>\n<pre>- discovery_user: retrieve user basic data\n- discovery_user_medias: retrieve user medias data\n</pre>\n<div>\n<p>Note</p>\n<p>Use discovery only support search by instagram user name.</p>\n</div>\n<p>Retrieve other user info by username:</p>\n<pre>In [6]: api.discovery_user(username=\"facebook\")\nOut[6]: IgProUser(id='17841400455970028', name='Facebook', username='facebook')\n</pre>\n<p>Retrieve other user medias by username:</p>\n<pre>In [7]: api.discovery_user_medias(username=\"facebook\", count=2)\nOut[7]:\n[IgProMedia(comments=None, id='17859633232647524', permalink='https://www.instagram.com/p/B6jje2UnoH8/'),\n IgProMedia(comments=None, id='18076151185161297', permalink='https://www.instagram.com/p/B6ji-PZH2V1/')]\n</pre>\n<p>Get your account info:</p>\n<pre>In [10]: api.get_user_info(user_id=\"your instagram business id\")\nOut[10]: IgProUser(id='17841406338772941', name='LiuKun', username='ikroskun')\n</pre>\n<p>Get your medias:</p>\n<pre>In [11]: api.get_user_medias(user_id=api.instagram_business_id, count=2)\nOut[11]:\n[IgProMedia(comments=None, id='18075344632131157', permalink='https://www.instagram.com/p/B38X8BzHsDi/'),\n IgProMedia(comments=None, id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')]\n</pre>\n<p>If you already have some medias id, you can get media info as follows methods.</p>\n<p>To fetch a post info:</p>\n<pre>In [12]: api.get_media_info(media_id=\"18075344632131157\")\nOut[12]: IgProMedia(comments=None, id='18075344632131157', permalink='https://www.instagram.com/p/B38X8BzHsDi/')\n</pre>\n<p>To fetch multi medias by one requests:</p>\n<pre>In [13]: api.get_medias_info(media_ids=[\"18075344632131157\", \"18027939643230671\"])\nOut[13]:\n{'18075344632131157': IgProMedia(comments=None, id='18075344632131157', permalink='https://www.instagram.com/p/B38X8BzHsDi/'),\n '18027939643230671': IgProMedia(comments=None, id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')}\n</pre>\n<p>Get comments for media:</p>\n<pre>In [16]: api.get_comments_by_media(media_id=\"17955956875141196\", count=2)\nOut[16]:\n[IgProComment(id='17862949873623188', timestamp='2020-01-05T05:58:47+0000'),\n IgProComment(id='17844360649889631', timestamp='2020-01-05T05:58:42+0000')]\n</pre>\n<p>If you already have some comments id, you can get comment details info as follows methods.</p>\n<p>To fetch a comment info:</p>\n<pre>In [17]: api.get_comment_info(comment_id=\"17862949873623188\")\nOut[17]: IgProComment(id='17862949873623188', timestamp='2020-01-05T05:58:47+0000')\n</pre>\n<p>To fetch multi comments by one requests:</p>\n<pre>In [18]: api.get_comments_info(comment_ids=[\"17862949873623188\", \"17844360649889631\"\n...: ])\nOut[18]:\n{'17862949873623188': IgProComment(id='17862949873623188', timestamp='2020-01-05T05:58:47+0000'),\n '17844360649889631': IgProComment(id='17844360649889631', timestamp='2020-01-05T05:58:42+0000')}\n</pre>\n<p>Get replies for a comments:</p>\n<pre>In [19]: api.get_replies_by_comment(\"17984127178281340\", count=2)\nOut[19]:\n[IgProReply(id='18107567341036926', timestamp='2019-10-15T07:06:09+0000'),\n IgProReply(id='17846106427692294', timestamp='2019-10-15T07:05:17+0000')]\n</pre>\n<p>If you already have some replies id, you can get replies details info as follows methods.</p>\n<p>To fetch a reply info:</p>\n<pre>In [20]: api.get_reply_info(reply_id=\"18107567341036926\")\nOut[20]: IgProReply(id='18107567341036926', timestamp='2019-10-15T07:06:09+0000')\n</pre>\n<p>To fetch multi replies info by one requests:</p>\n<pre>In [21]: api.get_replies_info(reply_ids=[\"18107567341036926\", \"17846106427692294\"])\nOut[21]:\n{'18107567341036926': IgProReply(id='18107567341036926', timestamp='2019-10-15T07:06:09+0000'),\n '17846106427692294': IgProReply(id='17846106427692294', timestamp='2019-10-15T07:05:17+0000')}\n</pre>\n<p>Use <tt>get_user_insights</tt> method, you can get account insights data.</p>\n<p>If you want get your account insights, just provide <tt>user_id</tt> with your id.</p>\n<p>If you have other account\u2019s access token, you can provide with <tt>user_id</tt> and <tt>access_token</tt>:</p>\n<pre>In [4]: api.get_user_insights(user_id=api.instagram_business_id, period=\"day\", metrics=[\"impressions\", \"reach\"])\nOut[4]:\n[IgProInsight(name='impressions', period='day', values=[IgProInsightValue(value=1038, end_time='2020-01-08T08:00:00+0000'), IgProInsightValue(value=136, end_time='2020-01-09T08:00:00+0000')]),\n IgProInsight(name='reach', period='day', values=[IgProInsightValue(value=751, end_time='2020-01-08T08:00:00+0000'), IgProInsightValue(value=54, end_time='2020-01-09T08:00:00+0000')])]\n</pre>\n<p>The same as <tt>get_user_insights</tt>, you can custom provide <tt>media_id</tt> and <tt>access_token</tt>.</p>\n<p>Get your media insights data:</p>\n<pre>In [6]: api.get_media_insights(media_id=\"media_id\", metrics=[\"engagement\",\"impressions\"])\nOut[6]:\n[IgProInsight(name='engagement', period='lifetime', values=[IgProInsightValue(value=90, end_time=None)]),\n IgProInsight(name='impressions', period='lifetime', values=[IgProInsightValue(value=997, end_time=None)])]\n</pre>\n<p>Get hashtag id:</p>\n<pre>In [3]: api.search_hashtag(q=\"love\")\nOut[3]: [IgProHashtag(id='17843826142012701', name=None)]\n</pre>\n<p>Get hashtag info:</p>\n<pre>In [4]: api.get_hashtag_info(hashtag_id=\"17843826142012701\")\nOut[4]: IgProHashtag(id='17843826142012701', name='love')\n</pre>\n<p>Get hashtag\u2019s top medias:</p>\n<pre>In [5]: r = api.get_hashtag_top_medias(hashtag_id=\"17843826142012701\", count=5)\n\nIn [6]: r\nOut[6]:\n[IgProMedia(comments=None, id='18086291068155608', permalink='https://www.instagram.com/p/B8ielBPpHaw/'),\n IgProMedia(comments=None, id='17935250359346228', permalink='https://www.instagram.com/p/B8icUmwoF0Y/'),\n IgProMedia(comments=None, id='17847031435934181', permalink='https://www.instagram.com/p/B8icycxKEn-/'),\n IgProMedia(comments=None, id='18000940699302502', permalink='https://www.instagram.com/p/B8ieNN7Cv6S/'),\n IgProMedia(comments=None, id='18025516372248793', permalink='https://www.instagram.com/p/B8iduQJgSyO/')]\n</pre>\n<p>Get hashtag\u2019s recent medias:</p>\n<pre>In [7]: r1 = api.get_hashtag_recent_medias(hashtag_id=\"17843826142012701\", count=5)\n\nIn [8]: r1\nOut[8]:\n[IgProMedia(comments=None, id='18128248021002097', permalink='https://www.instagram.com/p/B8ifnoWA5Ru/'),\n IgProMedia(comments=None, id='18104579776105272', permalink='https://www.instagram.com/p/B8ifwfsgBw2/'),\n IgProMedia(comments=None, id='17898846532442427', permalink='https://www.instagram.com/p/B8ifwZ4ltqP/'),\n IgProMedia(comments=None, id='17891698510462453', permalink='https://www.instagram.com/p/B8ifwepgf_E/'),\n IgProMedia(comments=None, id='17883544606492965', permalink='https://www.instagram.com/p/B8ifwabgiPf/')]\n</pre>\n<p>If you have other account\u2019s access token, you can provide with <tt>user_id</tt> and <tt>access_token</tt> to get his search hashtags.\nOr just get your account recent searched hashtags:</p>\n<pre>In [9]: api.get_user_recently_searched_hashtags(user_id=\"17841406338772941\")\nOut[9]:\n[IgProHashtag(id='17843826142012701', name='love'),\n IgProHashtag(id='17843421130029320', name='liukun'),\n IgProHashtag(id='17841562447105233', name='loveyou'),\n IgProHashtag(id='17843761288040806', name='a')]\n</pre>\n<p>Get the media objects in which a Business or Creator Account has been tagged.\nIf you have another account authorized access token, you can provide with <tt>user_id</tt> and <tt>access_token</tt> to get his data.\nOr only get your account\u2019s data:</p>\n<pre>In [10]: medias = api.get_tagged_user_medias(user_id=api.instagram_business_id, count=5, limit=5)\nOut[10]:\n[IgProMedia(id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/'),\n IgProMedia(id='17846368219941692', permalink='https://www.instagram.com/p/B8gQCApHMT-/'),\n IgProMedia(id='17913531439230186', permalink='https://www.instagram.com/p/Bop3AGOASfY/'),\n IgProMedia(id='17978630677077508', permalink='https://www.instagram.com/p/BotSABoAn8E/'),\n IgProMedia(id='17955956875141196', permalink='https://www.instagram.com/p/Bn-35GGl7YM/')]\n</pre>\n<p>Get data about a comment that an Business or Creator Account has been @mentioned in comment text:</p>\n<pre>In [11]: api.get_mentioned_comment_info(user_id=api.instagram_business_id, comment_id=\"17892250648466172\")\nOut[11]: IgProComment(id='17892250648466172', timestamp='2020-02-24T09:15:16+0000')\n</pre>\n<p>Get data about a media object on which a Business or Creator Account has been @mentioned in a caption:</p>\n<pre>In [12]: api.get_mentioned_media_info(user_id=api.instagram_business_id, media_id=\"18027939643230671\")\nOut[12]: IgProMedia(id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')\n</pre>\n</div>\n</div>\n<div id=\"base-usage-instagram-basic-api\">\n<h2>Base-Usage-Instagram Basic API</h2>\n<p>Instagram Basic Display API can be used to access any type of Instagram account but only provides read-access to basic data.</p>\n<p>You need do authorize first, and get access token which have permission to retrieve data.</p>\n<p>All docs on <a href=\"https://developers.facebook.com/docs/instagram-basic-display-api\" rel=\"nofollow\">Basic Display APi</a>.</p>\n<div id=\"id4\">\n<h3>Initial Api</h3>\n<p>Now provide three methods to init api.</p>\n<p>If you have long-lived access token, can just initial by token:</p>\n<pre>In[1]: from pyfacebook import IgBasicApi\nIn[2]: api = IgBasicApi(long_term_token=\"token\")\n</pre>\n<p>If you have short-lived access token, can provide with app credentials:</p>\n<pre>In[3]: api = IgBasicApi(app_id=\"app id\", app_secret=\"app secret\", short_token=\"token\")\n</pre>\n<p>If you want to authorized by user on hand. You can use authorize flow:</p>\n<pre>In[4]: api = IgBasicApi(app_id=\"app id\", app_secret=\"app secret\", initial_access_token=False)\nIn[5]: api.get_authorization_url()\nOut[5]:\n('https://api.instagram.com/oauth/authorize?response_type=code&amp;client_id=app+id&amp;redirect_uri=https%3A%2F%2Flocalhost%2F&amp;scope=user_profile+user_media&amp;state=PyFacebook',\n 'PyFacebook')\n# give permission and copy the redirect full url.\nIn[6]: api.exchange_access_token(response=\"the full url\")\n</pre>\n</div>\n<div id=\"id5\">\n<h3>Get Data</h3>\n<p>You can get user basic info:</p>\n<pre>In[7]: api.get_user_info()\nOut[7]: IgBasicUser(id='17841406338772941', username='ikroskun')\n</pre>\n<p>You can get user medias:</p>\n<pre>In[7]: r = api.get_user_medias()\nIn[8]: r\nOut[8]:\n[IgBasicMedia(id='17846368219941692', media_type='IMAGE', permalink='https://www.instagram.com/p/B8gQCApHMT-/'),\n IgBasicMedia(id='18091893643133286', media_type='IMAGE', permalink='https://www.instagram.com/p/B8gPx-UnsjA/'),\n IgBasicMedia(id='18075344632131157', media_type='VIDEO', permalink='https://www.instagram.com/p/B38X8BzHsDi/'),\n IgBasicMedia(id='18027939643230671', media_type='CAROUSEL_ALBUM', permalink='https://www.instagram.com/p/B38Xyp6nqsS/'),\n IgBasicMedia(id='17861821972334188', media_type='IMAGE', permalink='https://www.instagram.com/p/BuGD8NmF4KI/'),\n IgBasicMedia(id='17864312515295083', media_type='IMAGE', permalink='https://www.instagram.com/p/BporjsCF6mt/'),\n IgBasicMedia(id='17924095942208544', media_type='IMAGE', permalink='https://www.instagram.com/p/BoqBgsNl5qT/'),\n IgBasicMedia(id='17896189813249754', media_type='IMAGE', permalink='https://www.instagram.com/p/Bop_Hz5FzyL/'),\n IgBasicMedia(id='17955956875141196', media_type='CAROUSEL_ALBUM', permalink='https://www.instagram.com/p/Bn-35GGl7YM/'),\n IgBasicMedia(id='17970645226046242', media_type='IMAGE', permalink='https://www.instagram.com/p/Bme0cU1giOH/')]\n</pre>\n<p>You can just get one media info:</p>\n<pre>In[9]: r = basic_api.get_media_info(media_id=\"18027939643230671\")\nIn[9]: r\nOut[10]: IgBasicMedia(id='18027939643230671', media_type='CAROUSEL_ALBUM', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')\n</pre>\n</div>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<div id=\"now-features\">\n<h3>Now features</h3>\n<p>Facebook Api:</p>\n<ul>\n<li>Page Info.</li>\n<li>Page Picture Info.</li>\n<li>Feed Info (public posts, published posts, tagged posts).</li>\n<li>Comment Info.</li>\n</ul>\n<p>Instagram Professional Api:</p>\n<ul>\n<li>Other business account info and media.</li>\n<li>Authorized business account info</li>\n<li>Authorized account medias</li>\n<li>Authorized account comments</li>\n<li>Authorized account replies</li>\n<li>Authorized account insights and media insights</li>\n<li>Search hashtag id</li>\n<li>Get hashtag info</li>\n<li>Get top medias with hashtag</li>\n<li>Get recent medias with hashtag</li>\n<li>Get Authorized account recent searched hashtags</li>\n<li>Get medias which tagged account</li>\n<li>Get comment info mentioned user.</li>\n<li>Get media info mentioned user.</li>\n</ul>\n<p>Instagram Basic display api:</p>\n<ul>\n<li>Get user info</li>\n<li>Get user medias</li>\n<li>Get media info</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>TODO</h3>\n<ul>\n<li>publish</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6936575, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "4cbba14e4e5dc10808875271553ceb11", "sha256": "13dfed93fddb4fcb577f547305d7b1f89d7dd3e4c106ae95a4825dfae58391d9"}, "downloads": -1, "filename": "python_facebook_api-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4cbba14e4e5dc10808875271553ceb11", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20160, "upload_time": "2019-04-19T08:44:17", "upload_time_iso_8601": "2019-04-19T08:44:17.399244Z", "url": "https://files.pythonhosted.org/packages/44/11/484ca3059abccf5622cdf14c111aa962f46e94a1f5e184133abe704caaf3/python_facebook_api-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08796ed0d9cd151ce920d13951d9ecd0", "sha256": "e3ba5892d0a8b902e8b9f30cc2a8a5c52e9736fee70a1acf6d03fbd61b234dd9"}, "downloads": -1, "filename": "python-facebook-api-0.2.tar.gz", "has_sig": false, "md5_digest": "08796ed0d9cd151ce920d13951d9ecd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17319, "upload_time": "2019-04-19T08:44:19", "upload_time_iso_8601": "2019-04-19T08:44:19.592462Z", "url": "https://files.pythonhosted.org/packages/62/8c/8ae6ac5b0d2bcf54203d3d337921c8aeef7bccf288d2d8996d1c76f020c1/python-facebook-api-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "9381f33a7fc1b63c570bf24a602806c0", "sha256": "d30e478252f672a8e758435b3c7a022a50de518ba0ebb7fcd76f95169a0561cb"}, "downloads": -1, "filename": "python_facebook_api-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9381f33a7fc1b63c570bf24a602806c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20625, "upload_time": "2019-04-24T15:00:11", "upload_time_iso_8601": "2019-04-24T15:00:11.005986Z", "url": "https://files.pythonhosted.org/packages/ce/28/7a7e9f6a5b14af762d562d3dc0884cbd1de96d91068e8ee87bd202d554f3/python_facebook_api-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5051ca80dc77853cd0b0c4586f3f71f1", "sha256": "7e65d3ab03ae004385d92537087a86816f7a184d978e86b6399b206057c9055a"}, "downloads": -1, "filename": "python-facebook-api-0.3.tar.gz", "has_sig": false, "md5_digest": "5051ca80dc77853cd0b0c4586f3f71f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17896, "upload_time": "2019-04-24T15:00:14", "upload_time_iso_8601": "2019-04-24T15:00:14.406373Z", "url": "https://files.pythonhosted.org/packages/85/4d/41c6130979c1d797d30c933b61c5cca3275a274af9a7f337f491b73fa826/python-facebook-api-0.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "ea6e05daeb1e57ca8fbe42949fa08e1a", "sha256": "d4ade744082aa27033789910d43c0d1eecacca666fc1e236cd2f459950e02418"}, "downloads": -1, "filename": "python_facebook_api-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ea6e05daeb1e57ca8fbe42949fa08e1a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 21412, "upload_time": "2019-08-21T11:55:40", "upload_time_iso_8601": "2019-08-21T11:55:40.056240Z", "url": "https://files.pythonhosted.org/packages/41/6d/0fb5a9f4d1e91ab8d8159f72cab5c020592502daa6385548739ab0c025d1/python_facebook_api-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a530c8f9d3b4e9b4771cb61a6ec5632", "sha256": "4d59bbc983ec2900bdf7861ef107f50fbadace522a27a768f11c694c902d017e"}, "downloads": -1, "filename": "python-facebook-api-0.4.0.tar.gz", "has_sig": false, "md5_digest": "9a530c8f9d3b4e9b4771cb61a6ec5632", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 19894, "upload_time": "2019-08-21T11:55:42", "upload_time_iso_8601": "2019-08-21T11:55:42.266895Z", "url": "https://files.pythonhosted.org/packages/0e/a0/a01755872e671888320c9877d0d59f1605560f247438bc8a9288d0afe3ce/python-facebook-api-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "25b3efc0cd62d83598455ffd4659b4e5", "sha256": "81672174aefab28693f14e78f1fc945f310e86e26f07e73b70867173a0c39314"}, "downloads": -1, "filename": "python_facebook_api-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "25b3efc0cd62d83598455ffd4659b4e5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 21915, "upload_time": "2019-08-21T16:13:07", "upload_time_iso_8601": "2019-08-21T16:13:07.638146Z", "url": "https://files.pythonhosted.org/packages/fc/ee/0372f72f9cbb00ab9ab312256daa3badaefae2593917f729198ba4b3c52f/python_facebook_api-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d8bb5edc8595c55888a5b3672110bb4", "sha256": "6170fc7e933a20ad71eef03a72272110bf78647d1c9e6c173109663da7d83c27"}, "downloads": -1, "filename": "python-facebook-api-0.4.1.tar.gz", "has_sig": false, "md5_digest": "9d8bb5edc8595c55888a5b3672110bb4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 20720, "upload_time": "2019-08-21T16:13:09", "upload_time_iso_8601": "2019-08-21T16:13:09.301733Z", "url": "https://files.pythonhosted.org/packages/40/df/eeec3842d1141359ac6d310289b1a6cf778cc289c9c4ec41e0eb746b5d04/python-facebook-api-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "9ac3fdfecb529c62497bc6790e02c602", "sha256": "3ff469b9d4c3a5523cd5fc4f3d2b351ec25b49b5f379c97af72ab35bc52dc634"}, "downloads": -1, "filename": "python_facebook_api-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9ac3fdfecb529c62497bc6790e02c602", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 22056, "upload_time": "2019-09-04T07:55:29", "upload_time_iso_8601": "2019-09-04T07:55:29.329240Z", "url": "https://files.pythonhosted.org/packages/ef/e8/a2f23699855c243e01d181cd784b488493d30b3e8f0204defbc83451dc7b/python_facebook_api-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74f13d63e8eacf9e8e36c4689048827e", "sha256": "94bb6ed39f0263f809b54f0a32d81878164cee179613d379ad960ab73102fe8c"}, "downloads": -1, "filename": "python-facebook-api-0.4.2.tar.gz", "has_sig": false, "md5_digest": "74f13d63e8eacf9e8e36c4689048827e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 21060, "upload_time": "2019-09-04T07:55:32", "upload_time_iso_8601": "2019-09-04T07:55:32.361587Z", "url": "https://files.pythonhosted.org/packages/0f/d7/979442792ddfd65ce58d261701d437d4cab62b9126f8ad630eac39aecff7/python-facebook-api-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "dccf63be40ddd00ea8fbf6a80a02a805", "sha256": "47ee345941675e6a4bc13daaf497cfed96fe9ef0ff4ad63ee51789d571185605"}, "downloads": -1, "filename": "python_facebook_api-0.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dccf63be40ddd00ea8fbf6a80a02a805", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 22873, "upload_time": "2019-09-29T06:30:09", "upload_time_iso_8601": "2019-09-29T06:30:09.406800Z", "url": "https://files.pythonhosted.org/packages/59/c9/e12729d0ff2f8878114570d8028a0d33f47e1211412235fb7ae46a0d9516/python_facebook_api-0.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb9d3a41e87fdfb7c36e227c0086bca1", "sha256": "9ebb94e184c757e426580bee226e2a03fd3b7a93e9fbbca4504341b1893ca99b"}, "downloads": -1, "filename": "python-facebook-api-0.4.3.tar.gz", "has_sig": false, "md5_digest": "bb9d3a41e87fdfb7c36e227c0086bca1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 21870, "upload_time": "2019-09-29T06:30:11", "upload_time_iso_8601": "2019-09-29T06:30:11.507050Z", "url": "https://files.pythonhosted.org/packages/f2/0f/6c3d381cf264ed2e3661805cdf78bfaf5f66095ea41c0509c7df56222075/python-facebook-api-0.4.3.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "4a03914941a858c441998763cfc25f17", "sha256": "e4790f7a4955eb4e2933240009b43dc8938fb5b967f9a1899c706e973f1230bf"}, "downloads": -1, "filename": "python_facebook_api-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4a03914941a858c441998763cfc25f17", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 26961, "upload_time": "2019-10-23T11:01:20", "upload_time_iso_8601": "2019-10-23T11:01:20.489191Z", "url": "https://files.pythonhosted.org/packages/c9/2b/9a09c29cbf4a325a9007cfceea2c9ec17329b811c9c110fef8516af37857/python_facebook_api-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d023904c7f8a9e9acc3a68e32e4d9a68", "sha256": "7aed486b05ef985fa39e9a1fbe3c9061ce4befa8192b6894a93e199eefa9b06c"}, "downloads": -1, "filename": "python-facebook-api-0.5.1.tar.gz", "has_sig": false, "md5_digest": "d023904c7f8a9e9acc3a68e32e4d9a68", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 24542, "upload_time": "2019-10-23T11:01:23", "upload_time_iso_8601": "2019-10-23T11:01:23.397942Z", "url": "https://files.pythonhosted.org/packages/67/9a/2df45ea693e51432fb509603b42cd36dc3c1c3c30ca289ad84186954752d/python-facebook-api-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "e7cb663c13d00c2fda1718dfb065e762", "sha256": "093a37b216a6ceea3ba011ff8ef54a67fc7053c0fda1f8a5f76d39bf8590c521"}, "downloads": -1, "filename": "python_facebook_api-0.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e7cb663c13d00c2fda1718dfb065e762", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 27019, "upload_time": "2019-11-13T09:42:45", "upload_time_iso_8601": "2019-11-13T09:42:45.809708Z", "url": "https://files.pythonhosted.org/packages/18/d7/245bc809b225eeacc057b6baa651e08b312dcd5bfe90e438dfab236969a1/python_facebook_api-0.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47b7efebc3fc37576b1ef5854b38a2e3", "sha256": "d87b0d227be61b7970a499905919b1ea5da23da23883129ce246bf59ec6c7eef"}, "downloads": -1, "filename": "python-facebook-api-0.5.2.tar.gz", "has_sig": false, "md5_digest": "47b7efebc3fc37576b1ef5854b38a2e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 24611, "upload_time": "2019-11-13T09:42:48", "upload_time_iso_8601": "2019-11-13T09:42:48.309451Z", "url": "https://files.pythonhosted.org/packages/c0/af/79a056ad8890ffc47f3fad34859cef565ead10a1868e403aba539435337d/python-facebook-api-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "e2da2e75e2ad4ef05c6347f60c742ca5", "sha256": "4e4421d34575be3f0edb6d0e63d557c1e2bbee83733e2f052cfdb949af9a7aed"}, "downloads": -1, "filename": "python_facebook_api-0.5.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e2da2e75e2ad4ef05c6347f60c742ca5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 33897, "upload_time": "2020-01-05T15:03:32", "upload_time_iso_8601": "2020-01-05T15:03:32.117989Z", "url": "https://files.pythonhosted.org/packages/fd/b4/34cda4b1b8091e89ace17cd2c28249ca9da125428887f58969c09c0b95e9/python_facebook_api-0.5.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a75ad6f379cd6b3c5757d245e9ff498", "sha256": "a8113a50c3a66b41d174c34d0a9a59dd03920ace7030a8c62dd6583a9b640f59"}, "downloads": -1, "filename": "python-facebook-api-0.5.3.tar.gz", "has_sig": false, "md5_digest": "3a75ad6f379cd6b3c5757d245e9ff498", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 27716, "upload_time": "2020-01-05T15:03:34", "upload_time_iso_8601": "2020-01-05T15:03:34.722986Z", "url": "https://files.pythonhosted.org/packages/ad/f2/6ba812f594203058fddaa7ec6b2080449e28f17bd1620202836c6c697932/python-facebook-api-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "1da828ca9b50372006eb95fa99743afa", "sha256": "8456465702ce77a2089b363d193f144819c29b5077ef43c07d3dca3a6d0e1da4"}, "downloads": -1, "filename": "python_facebook_api-0.5.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1da828ca9b50372006eb95fa99743afa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 36232, "upload_time": "2020-02-14T08:49:04", "upload_time_iso_8601": "2020-02-14T08:49:04.838466Z", "url": "https://files.pythonhosted.org/packages/7b/f7/a14c412d6c87cebbb618605d74962d6ae0cc68a3ba9d837b1d6234c78e85/python_facebook_api-0.5.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23b3a0034d89f03b6ca44d0b543ba30c", "sha256": "57a480e154024cebae98de29268ba25e3af23bab5461a16e475bd5ab40fa6ba4"}, "downloads": -1, "filename": "python-facebook-api-0.5.4.tar.gz", "has_sig": false, "md5_digest": "23b3a0034d89f03b6ca44d0b543ba30c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 31105, "upload_time": "2020-02-14T08:49:06", "upload_time_iso_8601": "2020-02-14T08:49:06.902784Z", "url": "https://files.pythonhosted.org/packages/f4/82/5f567f6efb843a7ec7a22abcb6c90136fcb765fe210e143a6e0d7a69435e/python-facebook-api-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "74b27632d7f7ebdaf19d12756d4c92f2", "sha256": "4db9b6afb9a6204e5bfc82e6594fa77e1db1e8ee883b49d56ff8f07ccd71354f"}, "downloads": -1, "filename": "python_facebook_api-0.5.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "74b27632d7f7ebdaf19d12756d4c92f2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 37260, "upload_time": "2020-02-24T16:53:12", "upload_time_iso_8601": "2020-02-24T16:53:12.850906Z", "url": "https://files.pythonhosted.org/packages/60/66/9876ed91a39329207210e539afb5165cb3a17f42bf9a1072b8dde96e8713/python_facebook_api-0.5.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef53fb06e11a19097550418e55f69d04", "sha256": "d6a06d288d221304070f57657ecf7cad546f72d4952ce6514ebca56ea365709c"}, "downloads": -1, "filename": "python-facebook-api-0.5.5.tar.gz", "has_sig": false, "md5_digest": "ef53fb06e11a19097550418e55f69d04", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 32527, "upload_time": "2020-02-24T16:53:15", "upload_time_iso_8601": "2020-02-24T16:53:15.314779Z", "url": "https://files.pythonhosted.org/packages/18/bd/1e4545bcce7ee411db1d746e565a83fa64a7d185d2a0c0771c88b2542eab/python-facebook-api-0.5.5.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "19f4a4683238e19dfb2e0a5baf5198f6", "sha256": "9eae3b773f74d57f4f698779b62edc112586e52a13e898066439bdc2cfc7684d"}, "downloads": -1, "filename": "python_facebook_api-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "19f4a4683238e19dfb2e0a5baf5198f6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 41531, "upload_time": "2020-03-12T14:29:00", "upload_time_iso_8601": "2020-03-12T14:29:00.983939Z", "url": "https://files.pythonhosted.org/packages/d2/88/b52eed9a67bfe793f26175cf332712c13c1c05cb83623cdc8da029e19aae/python_facebook_api-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f186078d7c36220702464b49f9b79c4d", "sha256": "59c1536d766916961036f61544702518db5fbed4c7c93f273d28933f416e46b3"}, "downloads": -1, "filename": "python-facebook-api-0.6.0.tar.gz", "has_sig": false, "md5_digest": "f186078d7c36220702464b49f9b79c4d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 36070, "upload_time": "2020-03-12T14:29:03", "upload_time_iso_8601": "2020-03-12T14:29:03.126778Z", "url": "https://files.pythonhosted.org/packages/85/09/e75a394b9dfbcbaa4d8e870b7988f6899fb4105cb19024edc9de12797715/python-facebook-api-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "6988f1f48a7f5822ea5afccff7ed8437", "sha256": "5abad0aa589c4af0a84f38cbbcc91e95f8dcc7812ff94fb0ccf8494a7f3286ff"}, "downloads": -1, "filename": "python_facebook_api-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6988f1f48a7f5822ea5afccff7ed8437", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 42417, "upload_time": "2020-04-02T15:42:56", "upload_time_iso_8601": "2020-04-02T15:42:56.391869Z", "url": "https://files.pythonhosted.org/packages/27/df/613021eccc91c32f75bb5ec5689698c299e1bbabfb6e3e9bf9e6c0d36232/python_facebook_api-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50dc6480c087d71c4dda5c7f7f29f9bb", "sha256": "e069f1ef2b59b69e457f64afb2cf3e7c1b5debb0606e54a3e44e7d8f20938870"}, "downloads": -1, "filename": "python-facebook-api-0.6.1.tar.gz", "has_sig": false, "md5_digest": "50dc6480c087d71c4dda5c7f7f29f9bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 38099, "upload_time": "2020-04-02T15:42:58", "upload_time_iso_8601": "2020-04-02T15:42:58.329268Z", "url": "https://files.pythonhosted.org/packages/dd/f7/0584bb204c725a6b4db656b9ed864723313d3467139751896f99af2acfda/python-facebook-api-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6988f1f48a7f5822ea5afccff7ed8437", "sha256": "5abad0aa589c4af0a84f38cbbcc91e95f8dcc7812ff94fb0ccf8494a7f3286ff"}, "downloads": -1, "filename": "python_facebook_api-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6988f1f48a7f5822ea5afccff7ed8437", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 42417, "upload_time": "2020-04-02T15:42:56", "upload_time_iso_8601": "2020-04-02T15:42:56.391869Z", "url": "https://files.pythonhosted.org/packages/27/df/613021eccc91c32f75bb5ec5689698c299e1bbabfb6e3e9bf9e6c0d36232/python_facebook_api-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50dc6480c087d71c4dda5c7f7f29f9bb", "sha256": "e069f1ef2b59b69e457f64afb2cf3e7c1b5debb0606e54a3e44e7d8f20938870"}, "downloads": -1, "filename": "python-facebook-api-0.6.1.tar.gz", "has_sig": false, "md5_digest": "50dc6480c087d71c4dda5c7f7f29f9bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 38099, "upload_time": "2020-04-02T15:42:58", "upload_time_iso_8601": "2020-04-02T15:42:58.329268Z", "url": "https://files.pythonhosted.org/packages/dd/f7/0584bb204c725a6b4db656b9ed864723313d3467139751896f99af2acfda/python-facebook-api-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:42 2020"}