{"info": {"author": "Barbaros YILDIRIM", "author_email": "barbarosaliyildirim@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7"], "description": "RomanNumbers\r\n============\r\n\r\n.. image:: https://travis-ci.org/RedXBeard/RomanNumbers.svg?branch=master\r\n    :target: https://travis-ci.org/RedXBeard/RomanNumbers \r\n    :alt: Build\r\n.. image:: https://pypip.in/download/RomanAlphabet/badge.svg\r\n    :target: https://pypi.python.org/pypi//RomanAlphabet/\r\n    :alt: Downloads\r\n.. image:: https://pypip.in/version/RomanAlphabet/badge.svg\r\n    :target: https://pypi.python.org/pypi/RomanAlphabet/\r\n    :alt: Latest Version\r\n.. image:: https://pypip.in/py_versions/RomanAlphabet/badge.svg\r\n    :target: https://pypi.python.org/pypi/RomanAlphabet/\r\n    :alt: Supported Python versions\r\n.. image:: https://pypip.in/license/RomanAlphabet/badge.svg\r\n    :target: https://pypi.python.org/pypi/RomanAlphabet/\r\n    :alt: License\r\n\r\nRoman or Integer numbers can be converted into eachother an additionally representation of each one of them into binary\r\nformat.\r\n\r\nInstallation\r\n------------\r\n\r\n.. code-block:: bash\r\n    \r\n    $ pip install RomanAlphabet\r\n\r\n\r\nUsage\r\n-----\r\n\r\nTo represent an integer value into roman numeral system;\r\n\r\n.. code-block:: python\r\n    \r\n    : from romanalphabet.romanalphabet import RomanAlphabet\r\n    : rr = RomanAlphabet(\"4785\")\r\n    : rr.convert_to_roman()\r\n    : 'MMMMDCCLXXXV'\r\n\r\nor into binary;\r\n\r\n.. code-block:: python\r\n    \r\n    ...\r\n    : rr.convert_to_binary()\r\n    : '1001010110001'\r\n\r\n\r\nnumbers can also be added or mutiplied into one another, as following; result could be three type of numeric format; \"decimal\", \"binary\" or in \"roman\";\r\n\r\n.. code-block:: python\r\n    \r\n    : RomanAlphabet.addition(\"roman\",1)\r\n    : 'I'\r\n    : RomanAlphabet.multiply(\"roman\",1,2,3)\r\n    : 'VI'\r\n    : RomanAlphabet.multiply(\"decimal\",1,2,3)\r\n    : 6\r\n    : RomanAlphabet.addition(\"binary\",1,2,3)\r\n    : '110'\r\n    : RomanAlphabet.multiply(\"decimal\",7,4,2,4,2,3)\r\n    : '10101000000'\r\n\r\n\r\nIf first argument not one of <code>decimal</code> <code>roman</code> <code>binary</code> then the following error will be displayed\r\n\r\n.. code-block:: python\r\n    \r\n    : RomanAlphabet.multiply(\"deciaml\",7,4,2,4,2,3)\r\n    ---------------------------------------------------------------------------\r\n    InvalidInputError                         Traceback (most recent call last)\r\n    <ipython-input-6-bbd7bcac2f3a> in <module>()\r\n    ----> 1 RomanAlphabet.multiply(\"deciaml\",7,4,2,4,2,3)\r\n\r\n    /Users/denizci/.virtualenvs/RomanAlphabet/project/RomanNumbers/romanalphabet/romanalphabet.py in multiply(returned_base, *args)\r\n        172         except TypeError:\r\n        173             raise InvalidInputError, \\\r\n    --> 174                 u\"first input must be one of 'decimal', 'binary' or 'roman'\"\r\n        175         # Decimal multiplication is used for multipling one into another\r\n        176         mutiplied = reduce(lambda x,y: int(RomanAlphabet(x).convert_to_int()) *\\\r\n\r\n    InvalidInputError: first input must be one of 'decimal', 'binary' or 'roman'\r\n\r\n\r\nAlso roman numbers can be an input and represented with integer and binary format. If anything will goes wrong then for input as an example, none roman numerics if given then an understandable error will displayed.\r\n\r\n.. code-block:: python\r\n    \r\n    : rr = RomanAlphabet(\"CVII\")\r\n    : rr.convert_to_int()\r\n    : 107\r\n    : rr.convert_to_binary()\r\n    : 1101011\r\n    : rr = RomanAlphabet(\"MXXCVII\")\r\n    ---------------------------------------------------------------------------\r\n    InvalidInputError                         Traceback (most recent call last)\r\n    <ipython-input-4-928ae041fe2c> in <module>()\r\n    ----> 1 rr = RomanAlphabet(\"MXXCVII\")\r\n\r\n    /Users/barbaros/.virtualenvs/RomanAlphabet/project/RomanNumbers/romanalphabet/romanalphabet.py in __init__(self, input)\r\n         21             if not result:\r\n         22                 raise InvalidInputError, \\\r\n    ---> 23                         \"Input has unqualified chars; '%s'\" % message\r\n         24\r\n         25     @staticmethod\r\n\r\n    InvalidInputError: Input has unqualified chars; 'MXXCVII'\r\n    : rr = RomanAlphabet(\"CTII\")\r\n    ---------------------------------------------------------------------------\r\n    InvalidInputError                         Traceback (most recent call last)\r\n    <ipython-input-5-9cb900ee7522> in <module>()\r\n    ----> 1 rr = RomanAlphabet(\"TVII\")\r\n\r\n    /Users/barbaros/.virtualenvs/RomanAlphabet/project/RomanNumbers/romanalphabet/romanalphabet.py in __init__(self, input)\r\n         21             if not result:\r\n         22                 raise InvalidInputError, \\\r\n    ---> 23                         \"Input has unqualified chars; '%s'\" % message\r\n         24\r\n         25     @staticmethod\r\n\r\n    InvalidInputError: Input has unqualified chars; 'T'", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/RedXBeard/RomanNumbers/tarball/1.4", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RedXBeard/RomanNumbers", "keywords": "roman,romanalphabet,integer converter,integer to roman,roman to integer,binary,binary convertion", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "RomanAlphabet", "package_url": "https://pypi.org/project/RomanAlphabet/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/RomanAlphabet/", "project_urls": {"Download": "https://github.com/RedXBeard/RomanNumbers/tarball/1.4", "Homepage": "https://github.com/RedXBeard/RomanNumbers"}, "release_url": "https://pypi.org/project/RomanAlphabet/1.4/", "requires_dist": null, "requires_python": null, "summary": "Numeral systems, binary, roman, integer", "version": "1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/RedXBeard/RomanNumbers\" rel=\"nofollow\"><img alt=\"Build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0cf7fb56e347e13aacbc33fac87a8d174a75f45/68747470733a2f2f7472617669732d63692e6f72672f5265645842656172642f526f6d616e4e756d626572732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi//RomanAlphabet/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c0dbdbe6fd651d703267f622ad014f8ade86040/68747470733a2f2f70797069702e696e2f646f776e6c6f61642f526f6d616e416c7068616265742f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/RomanAlphabet/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/860e7c1d693e98d4e008ecf5f9dc82d020df7237/68747470733a2f2f70797069702e696e2f76657273696f6e2f526f6d616e416c7068616265742f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/RomanAlphabet/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/897c09ba36f9323a009038b2d86e9d247cdb8d07/68747470733a2f2f70797069702e696e2f70795f76657273696f6e732f526f6d616e416c7068616265742f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/RomanAlphabet/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0435e54b332855dc8a137c4ceb578a04f9600a64/68747470733a2f2f70797069702e696e2f6c6963656e73652f526f6d616e416c7068616265742f62616467652e737667\"></a>\n<p>Roman or Integer numbers can be converted into eachother an additionally representation of each one of them into binary\nformat.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install RomanAlphabet\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To represent an integer value into roman numeral system;</p>\n<pre><span class=\"p\">:</span> <span class=\"kn\">from</span> <span class=\"nn\">romanalphabet.romanalphabet</span> <span class=\"kn\">import</span> <span class=\"n\">RomanAlphabet</span>\n<span class=\"p\">:</span> <span class=\"n\">rr</span> <span class=\"o\">=</span> <span class=\"n\">RomanAlphabet</span><span class=\"p\">(</span><span class=\"s2\">\"4785\"</span><span class=\"p\">)</span>\n<span class=\"p\">:</span> <span class=\"n\">rr</span><span class=\"o\">.</span><span class=\"n\">convert_to_roman</span><span class=\"p\">()</span>\n<span class=\"p\">:</span> <span class=\"s1\">'MMMMDCCLXXXV'</span>\n</pre>\n<p>or into binary;</p>\n<pre><span class=\"o\">...</span>\n<span class=\"p\">:</span> <span class=\"n\">rr</span><span class=\"o\">.</span><span class=\"n\">convert_to_binary</span><span class=\"p\">()</span>\n<span class=\"p\">:</span> <span class=\"s1\">'1001010110001'</span>\n</pre>\n<p>numbers can also be added or mutiplied into one another, as following; result could be three type of numeric format; \u201cdecimal\u201d, \u201cbinary\u201d or in \u201croman\u201d;</p>\n<pre><span class=\"p\">:</span> <span class=\"n\">RomanAlphabet</span><span class=\"o\">.</span><span class=\"n\">addition</span><span class=\"p\">(</span><span class=\"s2\">\"roman\"</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">:</span> <span class=\"s1\">'I'</span>\n<span class=\"p\">:</span> <span class=\"n\">RomanAlphabet</span><span class=\"o\">.</span><span class=\"n\">multiply</span><span class=\"p\">(</span><span class=\"s2\">\"roman\"</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"p\">:</span> <span class=\"s1\">'VI'</span>\n<span class=\"p\">:</span> <span class=\"n\">RomanAlphabet</span><span class=\"o\">.</span><span class=\"n\">multiply</span><span class=\"p\">(</span><span class=\"s2\">\"decimal\"</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"p\">:</span> <span class=\"mi\">6</span>\n<span class=\"p\">:</span> <span class=\"n\">RomanAlphabet</span><span class=\"o\">.</span><span class=\"n\">addition</span><span class=\"p\">(</span><span class=\"s2\">\"binary\"</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"p\">:</span> <span class=\"s1\">'110'</span>\n<span class=\"p\">:</span> <span class=\"n\">RomanAlphabet</span><span class=\"o\">.</span><span class=\"n\">multiply</span><span class=\"p\">(</span><span class=\"s2\">\"decimal\"</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"p\">:</span> <span class=\"s1\">'10101000000'</span>\n</pre>\n<p>If first argument not one of &lt;code&gt;decimal&lt;/code&gt; &lt;code&gt;roman&lt;/code&gt; &lt;code&gt;binary&lt;/code&gt; then the following error will be displayed</p>\n<pre><span class=\"p\">:</span> <span class=\"n\">RomanAlphabet</span><span class=\"o\">.</span><span class=\"n\">multiply</span><span class=\"p\">(</span><span class=\"s2\">\"deciaml\"</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"o\">---------------------------------------------------------------------------</span>\n<span class=\"n\">InvalidInputError</span>                         <span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ipython</span><span class=\"o\">-</span><span class=\"nb\">input</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"o\">-</span><span class=\"n\">bbd7bcac2f3a</span><span class=\"o\">&gt;</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n<span class=\"o\">----&gt;</span> <span class=\"mi\">1</span> <span class=\"n\">RomanAlphabet</span><span class=\"o\">.</span><span class=\"n\">multiply</span><span class=\"p\">(</span><span class=\"s2\">\"deciaml\"</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">denizci</span><span class=\"o\">/.</span><span class=\"n\">virtualenvs</span><span class=\"o\">/</span><span class=\"n\">RomanAlphabet</span><span class=\"o\">/</span><span class=\"n\">project</span><span class=\"o\">/</span><span class=\"n\">RomanNumbers</span><span class=\"o\">/</span><span class=\"n\">romanalphabet</span><span class=\"o\">/</span><span class=\"n\">romanalphabet</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"ow\">in</span> <span class=\"n\">multiply</span><span class=\"p\">(</span><span class=\"n\">returned_base</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"mi\">172</span>         <span class=\"k\">except</span> <span class=\"ne\">TypeError</span><span class=\"p\">:</span>\n    <span class=\"mi\">173</span>             <span class=\"k\">raise</span> <span class=\"n\">InvalidInputError</span><span class=\"p\">,</span> \\\n<span class=\"o\">--&gt;</span> <span class=\"mi\">174</span>                 <span class=\"sa\">u</span><span class=\"s2\">\"first input must be one of 'decimal', 'binary' or 'roman'\"</span>\n    <span class=\"mi\">175</span>         <span class=\"c1\"># Decimal multiplication is used for multipling one into another</span>\n    <span class=\"mi\">176</span>         <span class=\"n\">mutiplied</span> <span class=\"o\">=</span> <span class=\"n\">reduce</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">RomanAlphabet</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">convert_to_int</span><span class=\"p\">())</span> <span class=\"o\">*</span>\\\n\n<span class=\"n\">InvalidInputError</span><span class=\"p\">:</span> <span class=\"n\">first</span> <span class=\"nb\">input</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">one</span> <span class=\"n\">of</span> <span class=\"s1\">'decimal'</span><span class=\"p\">,</span> <span class=\"s1\">'binary'</span> <span class=\"ow\">or</span> <span class=\"s1\">'roman'</span>\n</pre>\n<p>Also roman numbers can be an input and represented with integer and binary format. If anything will goes wrong then for input as an example, none roman numerics if given then an understandable error will displayed.</p>\n<pre><span class=\"p\">:</span> <span class=\"n\">rr</span> <span class=\"o\">=</span> <span class=\"n\">RomanAlphabet</span><span class=\"p\">(</span><span class=\"s2\">\"CVII\"</span><span class=\"p\">)</span>\n<span class=\"p\">:</span> <span class=\"n\">rr</span><span class=\"o\">.</span><span class=\"n\">convert_to_int</span><span class=\"p\">()</span>\n<span class=\"p\">:</span> <span class=\"mi\">107</span>\n<span class=\"p\">:</span> <span class=\"n\">rr</span><span class=\"o\">.</span><span class=\"n\">convert_to_binary</span><span class=\"p\">()</span>\n<span class=\"p\">:</span> <span class=\"mi\">1101011</span>\n<span class=\"p\">:</span> <span class=\"n\">rr</span> <span class=\"o\">=</span> <span class=\"n\">RomanAlphabet</span><span class=\"p\">(</span><span class=\"s2\">\"MXXCVII\"</span><span class=\"p\">)</span>\n<span class=\"o\">---------------------------------------------------------------------------</span>\n<span class=\"n\">InvalidInputError</span>                         <span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ipython</span><span class=\"o\">-</span><span class=\"nb\">input</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"o\">-</span><span class=\"mi\">928</span><span class=\"n\">ae041fe2c</span><span class=\"o\">&gt;</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n<span class=\"o\">----&gt;</span> <span class=\"mi\">1</span> <span class=\"n\">rr</span> <span class=\"o\">=</span> <span class=\"n\">RomanAlphabet</span><span class=\"p\">(</span><span class=\"s2\">\"MXXCVII\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">barbaros</span><span class=\"o\">/.</span><span class=\"n\">virtualenvs</span><span class=\"o\">/</span><span class=\"n\">RomanAlphabet</span><span class=\"o\">/</span><span class=\"n\">project</span><span class=\"o\">/</span><span class=\"n\">RomanNumbers</span><span class=\"o\">/</span><span class=\"n\">romanalphabet</span><span class=\"o\">/</span><span class=\"n\">romanalphabet</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">input</span><span class=\"p\">)</span>\n     <span class=\"mi\">21</span>             <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n     <span class=\"mi\">22</span>                 <span class=\"k\">raise</span> <span class=\"n\">InvalidInputError</span><span class=\"p\">,</span> \\\n<span class=\"o\">---&gt;</span> <span class=\"mi\">23</span>                         <span class=\"s2\">\"Input has unqualified chars; '</span><span class=\"si\">%s</span><span class=\"s2\">'\"</span> <span class=\"o\">%</span> <span class=\"n\">message</span>\n     <span class=\"mi\">24</span>\n     <span class=\"mi\">25</span>     <span class=\"nd\">@staticmethod</span>\n\n<span class=\"n\">InvalidInputError</span><span class=\"p\">:</span> <span class=\"n\">Input</span> <span class=\"n\">has</span> <span class=\"n\">unqualified</span> <span class=\"n\">chars</span><span class=\"p\">;</span> <span class=\"s1\">'MXXCVII'</span>\n<span class=\"p\">:</span> <span class=\"n\">rr</span> <span class=\"o\">=</span> <span class=\"n\">RomanAlphabet</span><span class=\"p\">(</span><span class=\"s2\">\"CTII\"</span><span class=\"p\">)</span>\n<span class=\"o\">---------------------------------------------------------------------------</span>\n<span class=\"n\">InvalidInputError</span>                         <span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ipython</span><span class=\"o\">-</span><span class=\"nb\">input</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"o\">-</span><span class=\"mi\">9</span><span class=\"n\">cb900ee7522</span><span class=\"o\">&gt;</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n<span class=\"o\">----&gt;</span> <span class=\"mi\">1</span> <span class=\"n\">rr</span> <span class=\"o\">=</span> <span class=\"n\">RomanAlphabet</span><span class=\"p\">(</span><span class=\"s2\">\"TVII\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">barbaros</span><span class=\"o\">/.</span><span class=\"n\">virtualenvs</span><span class=\"o\">/</span><span class=\"n\">RomanAlphabet</span><span class=\"o\">/</span><span class=\"n\">project</span><span class=\"o\">/</span><span class=\"n\">RomanNumbers</span><span class=\"o\">/</span><span class=\"n\">romanalphabet</span><span class=\"o\">/</span><span class=\"n\">romanalphabet</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">input</span><span class=\"p\">)</span>\n     <span class=\"mi\">21</span>             <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n     <span class=\"mi\">22</span>                 <span class=\"k\">raise</span> <span class=\"n\">InvalidInputError</span><span class=\"p\">,</span> \\\n<span class=\"o\">---&gt;</span> <span class=\"mi\">23</span>                         <span class=\"s2\">\"Input has unqualified chars; '</span><span class=\"si\">%s</span><span class=\"s2\">'\"</span> <span class=\"o\">%</span> <span class=\"n\">message</span>\n     <span class=\"mi\">24</span>\n     <span class=\"mi\">25</span>     <span class=\"nd\">@staticmethod</span>\n\n<span class=\"n\">InvalidInputError</span><span class=\"p\">:</span> <span class=\"n\">Input</span> <span class=\"n\">has</span> <span class=\"n\">unqualified</span> <span class=\"n\">chars</span><span class=\"p\">;</span> <span class=\"s1\">'T'</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1251958, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "2051860165f6736e84c59298246cb662", "sha256": "5c19af607a88abc0285859101e0e9fe5c76caab2299b937b1797a5b6b25912a6"}, "downloads": -1, "filename": "RomanAlphabet-0.3.tar.gz", "has_sig": false, "md5_digest": "2051860165f6736e84c59298246cb662", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2879, "upload_time": "2014-09-04T06:57:47", "upload_time_iso_8601": "2014-09-04T06:57:47.626215Z", "url": "https://files.pythonhosted.org/packages/fd/a1/fe29f8e0eb641ab110f5b657a812d0846ee4d0ad96fce6cbfa83146eb904/RomanAlphabet-0.3.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "d6784cc8dd8fa20735298cf376854356", "sha256": "f3aad8dc28b1083b2d033f9ed9263ab043bf4c1b4ca2d953241928d2eb628282"}, "downloads": -1, "filename": "RomanAlphabet-1.0.tar.gz", "has_sig": false, "md5_digest": "d6784cc8dd8fa20735298cf376854356", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3552, "upload_time": "2014-09-04T07:43:50", "upload_time_iso_8601": "2014-09-04T07:43:50.323925Z", "url": "https://files.pythonhosted.org/packages/3c/fa/d6141baa590bc7019bd8dd535f182e1244abdcc5685708cf7c048ef6f3af/RomanAlphabet-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "10d3d55338c406f0d14a598f4d8876bd", "sha256": "26438dfeddf46ee4e90a1f7bf1cb2ab7551671ea9acf7e2968001ae0d20189dd"}, "downloads": -1, "filename": "RomanAlphabet-1.1.tar.gz", "has_sig": false, "md5_digest": "10d3d55338c406f0d14a598f4d8876bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4433, "upload_time": "2014-09-07T15:23:38", "upload_time_iso_8601": "2014-09-07T15:23:38.887387Z", "url": "https://files.pythonhosted.org/packages/9b/34/0b9dd5cf5d58d37cc96a00a308eac68ee8abc729e013b14de0b21702ea7f/RomanAlphabet-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "0888517dc0eb935850256fd5db3fd241", "sha256": "b9be5649080e80e64192b2deb773bb8016a457b36baeda1ee1bcab6ce7d21f0f"}, "downloads": -1, "filename": "RomanAlphabet-1.2.tar.gz", "has_sig": false, "md5_digest": "0888517dc0eb935850256fd5db3fd241", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4519, "upload_time": "2014-09-08T11:29:04", "upload_time_iso_8601": "2014-09-08T11:29:04.221242Z", "url": "https://files.pythonhosted.org/packages/8b/bf/f19066b24df508dd71eb951b64a826dac87875d87859014ac7e06267de75/RomanAlphabet-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "2ad15828279039fdbf5931063dc9e207", "sha256": "11e237f9dead7c825f62bc1a304a3b88cc3e03b321799ca77c8363c207974bfb"}, "downloads": -1, "filename": "RomanAlphabet-1.3.tar.gz", "has_sig": false, "md5_digest": "2ad15828279039fdbf5931063dc9e207", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4532, "upload_time": "2014-09-09T10:06:15", "upload_time_iso_8601": "2014-09-09T10:06:15.391394Z", "url": "https://files.pythonhosted.org/packages/a0/d4/5b1f541aaeed33533f2b5b961817797e020dd0bd56226712a4ffe5479df9/RomanAlphabet-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "7054f5935b0bd3feb49c76fb729ca0ee", "sha256": "e5379befa8679fddefc7d709fcfb2a1e2621a49ee4416565f8af4c1372977177"}, "downloads": -1, "filename": "RomanAlphabet-1.4.tar.gz", "has_sig": false, "md5_digest": "7054f5935b0bd3feb49c76fb729ca0ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4525, "upload_time": "2014-09-09T13:17:54", "upload_time_iso_8601": "2014-09-09T13:17:54.171291Z", "url": "https://files.pythonhosted.org/packages/2c/87/8b4823b5ff281c796e1f30ef67f0e8ea3017fd9cf8b9b397df84a47a02a7/RomanAlphabet-1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7054f5935b0bd3feb49c76fb729ca0ee", "sha256": "e5379befa8679fddefc7d709fcfb2a1e2621a49ee4416565f8af4c1372977177"}, "downloads": -1, "filename": "RomanAlphabet-1.4.tar.gz", "has_sig": false, "md5_digest": "7054f5935b0bd3feb49c76fb729ca0ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4525, "upload_time": "2014-09-09T13:17:54", "upload_time_iso_8601": "2014-09-09T13:17:54.171291Z", "url": "https://files.pythonhosted.org/packages/2c/87/8b4823b5ff281c796e1f30ef67f0e8ea3017fd9cf8b9b397df84a47a02a7/RomanAlphabet-1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:24 2020"}