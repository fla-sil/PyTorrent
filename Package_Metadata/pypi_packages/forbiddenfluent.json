{"info": {"author": "Nicholas A. Del Grosso", "author_email": "delgrosso.nick@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "# forbiddenfluent\n\nThis module adds the built-in functions that work on iterables and make them\ninto methods in order to support a fluent programming style.  It uses the\npackage [forbiddenfruit](https://pypi.org/project/forbiddenfruit/) to do so, thus\nthe name.  The package is intended as a classroom teaching tool and talk tool,\nso likely won't be expanded much.  If you like this, see [fluentpy](https://pypi.org/project/fluentpy/)\nand [assertpy](https://pypi.org/project/assertpy/) for more support of this\nprogramming style in Python.\n\n\n## Installation\nThe package is installable via the Python Package Repository:\n\n```\npip install forbiddenfluent\n```\n\n\n## Examples\n\n```python\n>>> import forbiddenfluent\n>>> forbiddenfluent.curse()  # Adds methods to built-in objects in-place\n\n>>> [1, 2, 3].map(lambda x: x * 2)\n[2, 4, 6]\n\n>>> [\"Algeria\", \"Belgium\", \"Canada\"].map(str.lower).filter(lambda x: len(x) > 6)\n[\"algeria\", \"belgium\"]\n\n>>> [1, 2, 3].sum()\n6\n\n>>> ([\"Algeria\", \"Belgium\", \"Canada\"]\n>>>  .map(str.lower)\n>>>  .filter(lambda x: len(x) > 6)\n>>> )\n[\"algeria\", \"belgium\"]\n\n>>> forbiddenfluent.reverse()\n>>> [1, 2, 3].map(lambda x: x * 2)  ## AttributeError!\n\n```\n\n\n## Limitations\nTo keep use of this module simple, each method follows the convention of returning\na same-type copy of itself; That is, list.map() returns a list, set.filter() returns a\nset, and so on.  This means a loss of performance benefits that relate to the lazy\niteration of normal map(list) and map(set) operations.  The author of this package\nis open to adding this feature in the future, although likely other packages\nfor fluent programming will be a better option.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nickdelgrosso/forbiddenfluent", "keywords": "", "license": "GNU General Public License, Version 3", "maintainer": "", "maintainer_email": "", "name": "forbiddenfluent", "package_url": "https://pypi.org/project/forbiddenfluent/", "platform": "", "project_url": "https://pypi.org/project/forbiddenfluent/", "project_urls": {"Homepage": "https://github.com/nickdelgrosso/forbiddenfluent"}, "release_url": "https://pypi.org/project/forbiddenfluent/0.1.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Adds iteration methods like zip, filter, apply to built-in Python collections in a fluent programming style.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>forbiddenfluent</h1>\n<p>This module adds the built-in functions that work on iterables and make them\ninto methods in order to support a fluent programming style.  It uses the\npackage <a href=\"https://pypi.org/project/forbiddenfruit/\" rel=\"nofollow\">forbiddenfruit</a> to do so, thus\nthe name.  The package is intended as a classroom teaching tool and talk tool,\nso likely won't be expanded much.  If you like this, see <a href=\"https://pypi.org/project/fluentpy/\" rel=\"nofollow\">fluentpy</a>\nand <a href=\"https://pypi.org/project/assertpy/\" rel=\"nofollow\">assertpy</a> for more support of this\nprogramming style in Python.</p>\n<h2>Installation</h2>\n<p>The package is installable via the Python Package Repository:</p>\n<pre><code>pip install forbiddenfluent\n</code></pre>\n<h2>Examples</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">forbiddenfluent</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">forbiddenfluent</span><span class=\"o\">.</span><span class=\"n\">curse</span><span class=\"p\">()</span>  <span class=\"c1\"># Adds methods to built-in objects in-place</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s2\">\"Algeria\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Belgium\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Canada\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s2\">\"algeria\"</span><span class=\"p\">,</span> <span class=\"s2\">\"belgium\"</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n<span class=\"mi\">6</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">([</span><span class=\"s2\">\"Algeria\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Belgium\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Canada\"</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>  <span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>  <span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s2\">\"algeria\"</span><span class=\"p\">,</span> <span class=\"s2\">\"belgium\"</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">forbiddenfluent</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\">## AttributeError!</span>\n</pre>\n<h2>Limitations</h2>\n<p>To keep use of this module simple, each method follows the convention of returning\na same-type copy of itself; That is, list.map() returns a list, set.filter() returns a\nset, and so on.  This means a loss of performance benefits that relate to the lazy\niteration of normal map(list) and map(set) operations.  The author of this package\nis open to adding this feature in the future, although likely other packages\nfor fluent programming will be a better option.</p>\n\n          </div>"}, "last_serial": 6385755, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "0c9695a80b3f173d3df43e7288c764af", "sha256": "efc3b10124fe7b3d9a0867e7e54d331f54e2250df431d2b7e29bd338a9f3208b"}, "downloads": -1, "filename": "forbiddenfluent-0.1.tar.gz", "has_sig": false, "md5_digest": "0c9695a80b3f173d3df43e7288c764af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2385, "upload_time": "2020-01-02T12:05:01", "upload_time_iso_8601": "2020-01-02T12:05:01.758409Z", "url": "https://files.pythonhosted.org/packages/9d/9a/6bc57b8d095a698f8829a39cd35cec73d3ed6649bdd8ca3a3113319a98e4/forbiddenfluent-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "19a721ea8a479cbf15746909288c5514", "sha256": "2d4722342c3bd7b6cb9773c41b66f3dcd770240944342a5b8348a4d1c6ac6e70"}, "downloads": -1, "filename": "forbiddenfluent-0.1.1.tar.gz", "has_sig": false, "md5_digest": "19a721ea8a479cbf15746909288c5514", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2428, "upload_time": "2020-01-02T12:07:48", "upload_time_iso_8601": "2020-01-02T12:07:48.700658Z", "url": "https://files.pythonhosted.org/packages/d6/8e/eb549be96a1cad10025f490550b32264f3d1afd87fc1bfc1519254f8b0cf/forbiddenfluent-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "19a721ea8a479cbf15746909288c5514", "sha256": "2d4722342c3bd7b6cb9773c41b66f3dcd770240944342a5b8348a4d1c6ac6e70"}, "downloads": -1, "filename": "forbiddenfluent-0.1.1.tar.gz", "has_sig": false, "md5_digest": "19a721ea8a479cbf15746909288c5514", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2428, "upload_time": "2020-01-02T12:07:48", "upload_time_iso_8601": "2020-01-02T12:07:48.700658Z", "url": "https://files.pythonhosted.org/packages/d6/8e/eb549be96a1cad10025f490550b32264f3d1afd87fc1bfc1519254f8b0cf/forbiddenfluent-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:57 2020"}