{"info": {"author": "France T\u00e9l\u00e9visions innovations et d\u00e9veloppement", "author_email": "pierre-andre.long@francetv.fr", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Description\n\nftvstt is a France T\u00e9l\u00e9visions python library which encapsulates multiple online speech-to-text APIs, in order to call them as easily as possible.\n\nIt currently supports :\n- [x] Amazon Transcribe\n- [x] Google Cloud speech-to-text\n- [x] Vocapia Voxsigma\n- [x] Bertin Mediaspeech\n\n# Quickstart\n\nftvstt is not currently available through pip, you have to download the package and import it directly :\nftvstt is currently available through pip by running : **pip install ftvstt**.\nYou should then be able to import the package :\n\n```python\nimport ftvstt\n```\n\n# Usage\n\nExample of transcription through the services:\n\nVocapia Voxsigma:\n```python\nvocapiaTranscriber = ftvstt.Vocapia(\"https://rest1.vocapia.com:8093/voxsigma\")\nvocapiaTranscriber.authenticate(\"EXAMPLE_ID\",\"EXAMPLE_PASS\")\ntranscript = vocapiaTranscriber.transcribe(\"/path/to/file.wav\")\nvocapiaTranscriber.deauthenticate()\n```\n\nBertin Mediaspeech:\n```python\nbertinTranscriber = ftvstt.Bertin(\"https://demo02.mediaspeech.com:4433/api\")\nbertinTranscriber.authenticate(\"EXAMPLE_ID\",\"EXAMPLE_PASS\")\ntranscript = bertinTranscriber.transcribe(\"/path/to/file.wav\")\nbertinTranscriber.deauthenticate()\n```\n\nAmazon transcribe:\n```python\namazonTranscriber = ftvstt.Amazon(\"AMAZON_S3_BUCKET_NAME\")\namazonTranscriber.authenticate(\"AMAZON_AWS_ID_KEY\", \"AMAZON_AWS_SECRET_KEY\")\ntranscript = amazonTranscriber.transcribe(\"/path/to/file.wav\")\namazonTranscriber.deauthenticate()\n```\nYou can also authenticate directly with path to the credentials csv file:\n```python\namazonTranscriber.authenticate_with_file(\"/path/to/amazon/credentials.csv\")\n```\n\nYou need an amazon AWS S3 bucket besides Amazon AWS Transcribe in order to make transcriptions.\n\nIf your file is already on a S3 bucket, use instead:\n```python\ntranscript = amazonTranscriber.transcribe(\"https://url/to/s3/file.wav\", s3file=True)\n```\n\nGoogle cloud speech-to-text:\n```python\ngoogleTranscriber = ftvstt.Google()\ngoogleTranscriber.authenticate(\"GOOGLE_CLIENT_EMAIL\", \"GOOGLE_PIVATE_KEY\")\ntranscript = googleTranscriber.transcribe(\"/path/to/file.wav\")\ngoogleTranscriber.deauthenticate()\n```\nYou can also authenticate directly with path to client service credentials json file with google.\n```python\ngoogleTranscriber.authenticate_with_file(\"/path/to/google/credentials.json\")\n```\n\n\n# Custom vocabulary file\n\nFor every provider except Bertin, you can add a custom vocabulary file of probable words as shown :\n```python\ngoogleTranscriber = ftvstt.Google()\ngoogleTranscriber.authenticate_with_file(\"/path/to/google/credentials.json\")\ngoogleTranscriber.set_vocabulary_file(\"/path/to/vocabulary/file.txt\")\ntranscript = googleTranscriber.transcribe(\"/path/to/file.wav\")\ngoogleTranscriber.deauthenticate()\n```\n\nThe vocabulary file should be of the form:\n```\nword1\nword2\nword3\n...\n```\n\n# Results handling\n\nOnce a transcription is done, the transcribe function of a Transcriber returns a Transcript instance from ftvstt.transcripts sub-module.\n\nA Transcript instance, as transcript in previous codes, has several useful attributes :\n\n**transcript.text**: a string containing the textual transcript of the audio file.  \n**transcript.words**: a list of Word instances from ftvstt.transcripts sub-module, each one has a content (str), a startTime (float), an endTime (float), a speaker (Speaker instance from ftvstt.transcripts sub-module) (and can have a confidence (float) depending on the provider used) attribute.  \n**transcript.speakers**: a list of Speaker instances from ftvstt.transcripts sub-module, each one has an id (int), (and can have a gender (str : \"M\" or \"F\") depending on the provider used).  \n**transcript.raw**: a string containing the raw result of the transcription received from the provider, which type is transcript.rawType (str : \"json\" or \"xml\").\n\nYou can also dump the results in a normalised (the same format for any provider) json file:\n```python\ntranscript.dump_normalised_result(\"/output/path/to/normalized/result.json\")\n```\n\nYou can also load a transcript from a raw result file:\n```python\nwith open(\"/path/to/bertin/raw/result.xml\") as file:\n    raw = file.read()\n\ntranscript = ftvstt.Transcript(raw=raw, provider=ftvstt.Bertin)\n```\n# Error handling\n\nIf an error has occured during transcription, a custom python Exception from the ftvstt.exceptions sub-module will be raised. The error will also be accessbile in the exception attribute of the transcript result, as you can see in this example:\n\n```python\ngoogleTranscriber = ftvstt.Google()\ngoogleTranscriber.authenticate(\"/path/to/google/credentials.json\")\ntry:\n    transcript = googleTranscriber.transcribe(\"/path/to/file.wav\")\nexcept:\n    pass\nraise transcript.exception\ngoogleTranscriber.deauthenticate()\n```\n\n# Testing\n\nComing soon...\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ftvstt", "package_url": "https://pypi.org/project/ftvstt/", "platform": "", "project_url": "https://pypi.org/project/ftvstt/", "project_urls": null, "release_url": "https://pypi.org/project/ftvstt/2.0.0/", "requires_dist": ["boto3 (==1.10.4)", "google-cloud-speech (==1.2.0)", "requests (==2.22.0)"], "requires_python": "", "summary": "Transcription APIs encapsulation", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Description</h1>\n<p>ftvstt is a France T\u00e9l\u00e9visions python library which encapsulates multiple online speech-to-text APIs, in order to call them as easily as possible.</p>\n<p>It currently supports :</p>\n<ul>\n<li>[x] Amazon Transcribe</li>\n<li>[x] Google Cloud speech-to-text</li>\n<li>[x] Vocapia Voxsigma</li>\n<li>[x] Bertin Mediaspeech</li>\n</ul>\n<h1>Quickstart</h1>\n<p>ftvstt is not currently available through pip, you have to download the package and import it directly :\nftvstt is currently available through pip by running : <strong>pip install ftvstt</strong>.\nYou should then be able to import the package :</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ftvstt</span>\n</pre>\n<h1>Usage</h1>\n<p>Example of transcription through the services:</p>\n<p>Vocapia Voxsigma:</p>\n<pre><span class=\"n\">vocapiaTranscriber</span> <span class=\"o\">=</span> <span class=\"n\">ftvstt</span><span class=\"o\">.</span><span class=\"n\">Vocapia</span><span class=\"p\">(</span><span class=\"s2\">\"https://rest1.vocapia.com:8093/voxsigma\"</span><span class=\"p\">)</span>\n<span class=\"n\">vocapiaTranscriber</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"s2\">\"EXAMPLE_ID\"</span><span class=\"p\">,</span><span class=\"s2\">\"EXAMPLE_PASS\"</span><span class=\"p\">)</span>\n<span class=\"n\">transcript</span> <span class=\"o\">=</span> <span class=\"n\">vocapiaTranscriber</span><span class=\"o\">.</span><span class=\"n\">transcribe</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/file.wav\"</span><span class=\"p\">)</span>\n<span class=\"n\">vocapiaTranscriber</span><span class=\"o\">.</span><span class=\"n\">deauthenticate</span><span class=\"p\">()</span>\n</pre>\n<p>Bertin Mediaspeech:</p>\n<pre><span class=\"n\">bertinTranscriber</span> <span class=\"o\">=</span> <span class=\"n\">ftvstt</span><span class=\"o\">.</span><span class=\"n\">Bertin</span><span class=\"p\">(</span><span class=\"s2\">\"https://demo02.mediaspeech.com:4433/api\"</span><span class=\"p\">)</span>\n<span class=\"n\">bertinTranscriber</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"s2\">\"EXAMPLE_ID\"</span><span class=\"p\">,</span><span class=\"s2\">\"EXAMPLE_PASS\"</span><span class=\"p\">)</span>\n<span class=\"n\">transcript</span> <span class=\"o\">=</span> <span class=\"n\">bertinTranscriber</span><span class=\"o\">.</span><span class=\"n\">transcribe</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/file.wav\"</span><span class=\"p\">)</span>\n<span class=\"n\">bertinTranscriber</span><span class=\"o\">.</span><span class=\"n\">deauthenticate</span><span class=\"p\">()</span>\n</pre>\n<p>Amazon transcribe:</p>\n<pre><span class=\"n\">amazonTranscriber</span> <span class=\"o\">=</span> <span class=\"n\">ftvstt</span><span class=\"o\">.</span><span class=\"n\">Amazon</span><span class=\"p\">(</span><span class=\"s2\">\"AMAZON_S3_BUCKET_NAME\"</span><span class=\"p\">)</span>\n<span class=\"n\">amazonTranscriber</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"s2\">\"AMAZON_AWS_ID_KEY\"</span><span class=\"p\">,</span> <span class=\"s2\">\"AMAZON_AWS_SECRET_KEY\"</span><span class=\"p\">)</span>\n<span class=\"n\">transcript</span> <span class=\"o\">=</span> <span class=\"n\">amazonTranscriber</span><span class=\"o\">.</span><span class=\"n\">transcribe</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/file.wav\"</span><span class=\"p\">)</span>\n<span class=\"n\">amazonTranscriber</span><span class=\"o\">.</span><span class=\"n\">deauthenticate</span><span class=\"p\">()</span>\n</pre>\n<p>You can also authenticate directly with path to the credentials csv file:</p>\n<pre><span class=\"n\">amazonTranscriber</span><span class=\"o\">.</span><span class=\"n\">authenticate_with_file</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/amazon/credentials.csv\"</span><span class=\"p\">)</span>\n</pre>\n<p>You need an amazon AWS S3 bucket besides Amazon AWS Transcribe in order to make transcriptions.</p>\n<p>If your file is already on a S3 bucket, use instead:</p>\n<pre><span class=\"n\">transcript</span> <span class=\"o\">=</span> <span class=\"n\">amazonTranscriber</span><span class=\"o\">.</span><span class=\"n\">transcribe</span><span class=\"p\">(</span><span class=\"s2\">\"https://url/to/s3/file.wav\"</span><span class=\"p\">,</span> <span class=\"n\">s3file</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Google cloud speech-to-text:</p>\n<pre><span class=\"n\">googleTranscriber</span> <span class=\"o\">=</span> <span class=\"n\">ftvstt</span><span class=\"o\">.</span><span class=\"n\">Google</span><span class=\"p\">()</span>\n<span class=\"n\">googleTranscriber</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"s2\">\"GOOGLE_CLIENT_EMAIL\"</span><span class=\"p\">,</span> <span class=\"s2\">\"GOOGLE_PIVATE_KEY\"</span><span class=\"p\">)</span>\n<span class=\"n\">transcript</span> <span class=\"o\">=</span> <span class=\"n\">googleTranscriber</span><span class=\"o\">.</span><span class=\"n\">transcribe</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/file.wav\"</span><span class=\"p\">)</span>\n<span class=\"n\">googleTranscriber</span><span class=\"o\">.</span><span class=\"n\">deauthenticate</span><span class=\"p\">()</span>\n</pre>\n<p>You can also authenticate directly with path to client service credentials json file with google.</p>\n<pre><span class=\"n\">googleTranscriber</span><span class=\"o\">.</span><span class=\"n\">authenticate_with_file</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/google/credentials.json\"</span><span class=\"p\">)</span>\n</pre>\n<h1>Custom vocabulary file</h1>\n<p>For every provider except Bertin, you can add a custom vocabulary file of probable words as shown :</p>\n<pre><span class=\"n\">googleTranscriber</span> <span class=\"o\">=</span> <span class=\"n\">ftvstt</span><span class=\"o\">.</span><span class=\"n\">Google</span><span class=\"p\">()</span>\n<span class=\"n\">googleTranscriber</span><span class=\"o\">.</span><span class=\"n\">authenticate_with_file</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/google/credentials.json\"</span><span class=\"p\">)</span>\n<span class=\"n\">googleTranscriber</span><span class=\"o\">.</span><span class=\"n\">set_vocabulary_file</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/vocabulary/file.txt\"</span><span class=\"p\">)</span>\n<span class=\"n\">transcript</span> <span class=\"o\">=</span> <span class=\"n\">googleTranscriber</span><span class=\"o\">.</span><span class=\"n\">transcribe</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/file.wav\"</span><span class=\"p\">)</span>\n<span class=\"n\">googleTranscriber</span><span class=\"o\">.</span><span class=\"n\">deauthenticate</span><span class=\"p\">()</span>\n</pre>\n<p>The vocabulary file should be of the form:</p>\n<pre><code>word1\nword2\nword3\n...\n</code></pre>\n<h1>Results handling</h1>\n<p>Once a transcription is done, the transcribe function of a Transcriber returns a Transcript instance from ftvstt.transcripts sub-module.</p>\n<p>A Transcript instance, as transcript in previous codes, has several useful attributes :</p>\n<p><strong>transcript.text</strong>: a string containing the textual transcript of the audio file.<br>\n<strong>transcript.words</strong>: a list of Word instances from ftvstt.transcripts sub-module, each one has a content (str), a startTime (float), an endTime (float), a speaker (Speaker instance from ftvstt.transcripts sub-module) (and can have a confidence (float) depending on the provider used) attribute.<br>\n<strong>transcript.speakers</strong>: a list of Speaker instances from ftvstt.transcripts sub-module, each one has an id (int), (and can have a gender (str : \"M\" or \"F\") depending on the provider used).<br>\n<strong>transcript.raw</strong>: a string containing the raw result of the transcription received from the provider, which type is transcript.rawType (str : \"json\" or \"xml\").</p>\n<p>You can also dump the results in a normalised (the same format for any provider) json file:</p>\n<pre><span class=\"n\">transcript</span><span class=\"o\">.</span><span class=\"n\">dump_normalised_result</span><span class=\"p\">(</span><span class=\"s2\">\"/output/path/to/normalized/result.json\"</span><span class=\"p\">)</span>\n</pre>\n<p>You can also load a transcript from a raw result file:</p>\n<pre><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/bertin/raw/result.xml\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file</span><span class=\"p\">:</span>\n    <span class=\"n\">raw</span> <span class=\"o\">=</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"n\">transcript</span> <span class=\"o\">=</span> <span class=\"n\">ftvstt</span><span class=\"o\">.</span><span class=\"n\">Transcript</span><span class=\"p\">(</span><span class=\"n\">raw</span><span class=\"o\">=</span><span class=\"n\">raw</span><span class=\"p\">,</span> <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"n\">ftvstt</span><span class=\"o\">.</span><span class=\"n\">Bertin</span><span class=\"p\">)</span>\n</pre>\n<h1>Error handling</h1>\n<p>If an error has occured during transcription, a custom python Exception from the ftvstt.exceptions sub-module will be raised. The error will also be accessbile in the exception attribute of the transcript result, as you can see in this example:</p>\n<pre><span class=\"n\">googleTranscriber</span> <span class=\"o\">=</span> <span class=\"n\">ftvstt</span><span class=\"o\">.</span><span class=\"n\">Google</span><span class=\"p\">()</span>\n<span class=\"n\">googleTranscriber</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/google/credentials.json\"</span><span class=\"p\">)</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">transcript</span> <span class=\"o\">=</span> <span class=\"n\">googleTranscriber</span><span class=\"o\">.</span><span class=\"n\">transcribe</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/file.wav\"</span><span class=\"p\">)</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n<span class=\"k\">raise</span> <span class=\"n\">transcript</span><span class=\"o\">.</span><span class=\"n\">exception</span>\n<span class=\"n\">googleTranscriber</span><span class=\"o\">.</span><span class=\"n\">deauthenticate</span><span class=\"p\">()</span>\n</pre>\n<h1>Testing</h1>\n<p>Coming soon...</p>\n\n          </div>"}, "last_serial": 6485923, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "c73de72d74c293965a22ee2a42af2c12", "sha256": "2e4e0d4e9e091b21ab899da34f5858f24ca04c67c0dde7beab24878a85983396"}, "downloads": -1, "filename": "ftvstt-1.0.57-py3-none-any.whl", "has_sig": false, "md5_digest": "c73de72d74c293965a22ee2a42af2c12", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11392, "upload_time": "2019-11-14T11:09:41", "upload_time_iso_8601": "2019-11-14T11:09:41.352054Z", "url": "https://files.pythonhosted.org/packages/ac/fd/7b0e5f431d0e7c192ec26a980f52c34b8e5ce02c92d0965573526a2a18eb/ftvstt-1.0.57-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0533a096b4989248affe21e83eb38d2", "sha256": "06ec9ee3dc9cc2e4bceb2d255b7045add2bd826ebe8271f4defc5c354dc2649c"}, "downloads": -1, "filename": "ftvstt-1.0.57.tar.gz", "has_sig": false, "md5_digest": "f0533a096b4989248affe21e83eb38d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9137, "upload_time": "2019-11-14T11:09:43", "upload_time_iso_8601": "2019-11-14T11:09:43.726288Z", "url": "https://files.pythonhosted.org/packages/9c/49/bdee5b98be705cf9ad0dfee9c7a771cdded7f3b297d0d037edc7e6655d7c/ftvstt-1.0.57.tar.gz", "yanked": false}], "1.1.10": [{"comment_text": "", "digests": {"md5": "c76d664745c05bb3d93f0f39216de4c1", "sha256": "204cad3713e4ed9420aaa10a8d3d1b934194790bb85aa79ed589b923bb411672"}, "downloads": -1, "filename": "ftvstt-1.1.10-py3-none-any.whl", "has_sig": false, "md5_digest": "c76d664745c05bb3d93f0f39216de4c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11638, "upload_time": "2019-11-15T14:35:31", "upload_time_iso_8601": "2019-11-15T14:35:31.069012Z", "url": "https://files.pythonhosted.org/packages/3a/f3/66aa04d0d93a32d72acd85875cb963501e9c229384671b1fc424c3449c15/ftvstt-1.1.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c8d30c759cc808e4d62c624cdae8dda", "sha256": "32e168e46f51b4541128d2a0c97a4225da1a672712aacdffe39a104229b6830a"}, "downloads": -1, "filename": "ftvstt-1.1.10.tar.gz", "has_sig": false, "md5_digest": "4c8d30c759cc808e4d62c624cdae8dda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9349, "upload_time": "2019-11-15T14:35:40", "upload_time_iso_8601": "2019-11-15T14:35:40.992177Z", "url": "https://files.pythonhosted.org/packages/22/1c/9eaeab045ab75c109044a3ca72bd58c76e47834b78e432f875c7023925b6/ftvstt-1.1.10.tar.gz", "yanked": false}], "1.1.8": [{"comment_text": "", "digests": {"md5": "13883898622434c11497a1d0c04ec111", "sha256": "53b010ae69da348ad3660744b2383a15006125f10bea1603bff9e7827a9688b5"}, "downloads": -1, "filename": "ftvstt-1.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "13883898622434c11497a1d0c04ec111", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11630, "upload_time": "2019-11-14T14:58:50", "upload_time_iso_8601": "2019-11-14T14:58:50.586164Z", "url": "https://files.pythonhosted.org/packages/54/a7/d1c0fd8ca5d57bf4f1239a2babca81eaf5bd8d8908263ce3c26d723daaf1/ftvstt-1.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "970584facaeecd1e27f0cda13a66d611", "sha256": "12c15de14fa0d84f122b163f78f87a05e1211afce66afebb8b1be653367326dd"}, "downloads": -1, "filename": "ftvstt-1.1.8.tar.gz", "has_sig": false, "md5_digest": "970584facaeecd1e27f0cda13a66d611", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9353, "upload_time": "2019-11-14T14:58:52", "upload_time_iso_8601": "2019-11-14T14:58:52.293974Z", "url": "https://files.pythonhosted.org/packages/45/55/3545dcb63bfebd8db8ca9837933b36ed7945e0a1678dbee7b232172fff68/ftvstt-1.1.8.tar.gz", "yanked": false}], "1.1.9": [{"comment_text": "", "digests": {"md5": "432ed6bb10ed846cb719759d5a81c35b", "sha256": "f05fd23f4424dcf8b78861ebb9cb936ee72806cd193e26660d15945c847602c2"}, "downloads": -1, "filename": "ftvstt-1.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "432ed6bb10ed846cb719759d5a81c35b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11630, "upload_time": "2019-11-14T15:45:55", "upload_time_iso_8601": "2019-11-14T15:45:55.666556Z", "url": "https://files.pythonhosted.org/packages/a6/ff/cfda74afc0892215f7a350328d2474961de0e48b29d8040afb61de24f2de/ftvstt-1.1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d75fd65ee9cbcc4be95dcd230ad6019", "sha256": "45fbedb2442a8e16f5911fe8752092078bdb38a93709a820084778d2ca837d5a"}, "downloads": -1, "filename": "ftvstt-1.1.9.tar.gz", "has_sig": false, "md5_digest": "4d75fd65ee9cbcc4be95dcd230ad6019", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9355, "upload_time": "2019-11-14T15:45:57", "upload_time_iso_8601": "2019-11-14T15:45:57.237417Z", "url": "https://files.pythonhosted.org/packages/7b/5d/272f984c10c10b3ebd4f203038d699b590d13520e21aa05a15824fb3a068/ftvstt-1.1.9.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "5a39ad6b059adee97b445f0800844d34", "sha256": "87c56be85e029215a83378ebbf237a2cde00c2ddc6f3e321db4f713f5dbfc6dc"}, "downloads": -1, "filename": "ftvstt-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5a39ad6b059adee97b445f0800844d34", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11988, "upload_time": "2019-11-21T08:21:02", "upload_time_iso_8601": "2019-11-21T08:21:02.796032Z", "url": "https://files.pythonhosted.org/packages/ce/bf/923cfc29f60f88fe99986b98fae0c106284c3e9feca9f28e8df939647086/ftvstt-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a7f8b842c5f6105b4c9bb38759eebac", "sha256": "4a0f32d4a62379fc98adb4b258a0ccf32543a27dd930cd50dea29540ea432d60"}, "downloads": -1, "filename": "ftvstt-1.2.0.tar.gz", "has_sig": false, "md5_digest": "6a7f8b842c5f6105b4c9bb38759eebac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10089, "upload_time": "2019-11-21T08:21:04", "upload_time_iso_8601": "2019-11-21T08:21:04.178257Z", "url": "https://files.pythonhosted.org/packages/b0/a4/32f74e4009f58dbfae316f885d306ad8050c14e2af425d48c422d0124c66/ftvstt-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "e6ddc21068eaab4a14cc55915f2f4290", "sha256": "1c6482eb72a5f7b2fd469c39822f6c24c121f90e97f56da8c66ba3edde5ea1a1"}, "downloads": -1, "filename": "ftvstt-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e6ddc21068eaab4a14cc55915f2f4290", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11977, "upload_time": "2019-11-21T08:34:40", "upload_time_iso_8601": "2019-11-21T08:34:40.327277Z", "url": "https://files.pythonhosted.org/packages/37/d0/2c9fdefc8b8695431308a45bbfabe27cff90c3e427d3f6dbc210b61be01c/ftvstt-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6cb579f2d4f0a73853331741820cb70", "sha256": "49c8b20d580dd41b65df648849fe8ccf95a5fd6214e028b7f35dc97c9cd440ce"}, "downloads": -1, "filename": "ftvstt-1.2.1.tar.gz", "has_sig": false, "md5_digest": "d6cb579f2d4f0a73853331741820cb70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10067, "upload_time": "2019-11-21T08:34:41", "upload_time_iso_8601": "2019-11-21T08:34:41.937297Z", "url": "https://files.pythonhosted.org/packages/57/fc/7782e1c4a5d711ed2d9557f3a148a25dbccd4c3f0d0b5dced941003f4b34/ftvstt-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "75400d9299f003e8d4236dbb07619bbe", "sha256": "fbb4df955e1df7b8a4fe5ac4525be8e41335a41656096c136c75dd4abb980e0a"}, "downloads": -1, "filename": "ftvstt-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "75400d9299f003e8d4236dbb07619bbe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11968, "upload_time": "2019-12-02T13:09:45", "upload_time_iso_8601": "2019-12-02T13:09:45.875287Z", "url": "https://files.pythonhosted.org/packages/01/b1/13edb04ebce18ddd380a3dac0ff293893de133d8b1a4c4b5474e6384b65b/ftvstt-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4bab387b7a4e87af2b0a72d7b0e947e", "sha256": "049776cb94fbc82aa7df8e73fdb025b0b3bbdeb941525d46fa6048fc4df4abf0"}, "downloads": -1, "filename": "ftvstt-1.2.2.tar.gz", "has_sig": false, "md5_digest": "c4bab387b7a4e87af2b0a72d7b0e947e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10051, "upload_time": "2019-12-02T13:09:47", "upload_time_iso_8601": "2019-12-02T13:09:47.149222Z", "url": "https://files.pythonhosted.org/packages/75/89/37f3769a2c6a4244c4d0b74527e7c275ad326c0002446cabd96e36bb6701/ftvstt-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "7a40e207965cc349de68273281603681", "sha256": "e47e642427e28c5e419cb3316dc82d7e8efaba06adf081f6e8d96d69bca34055"}, "downloads": -1, "filename": "ftvstt-1.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7a40e207965cc349de68273281603681", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11966, "upload_time": "2019-12-02T13:11:25", "upload_time_iso_8601": "2019-12-02T13:11:25.040750Z", "url": "https://files.pythonhosted.org/packages/92/5e/2a12076e0a47343c4bae2048619dec516ef45b2e31a2e1fedac9cfa46202/ftvstt-1.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6d6c39e5492d4f814adb897ceff34fb", "sha256": "238a0f2d9e6f6b9ae2c9e90fbdeff9daea3b8c0b0e2dcc0b6f54d438547ddc8a"}, "downloads": -1, "filename": "ftvstt-1.2.3.tar.gz", "has_sig": false, "md5_digest": "e6d6c39e5492d4f814adb897ceff34fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10056, "upload_time": "2019-12-02T13:11:26", "upload_time_iso_8601": "2019-12-02T13:11:26.706785Z", "url": "https://files.pythonhosted.org/packages/01/a1/daee47edf5191f83f9c82749b43800b85e623af8e1b8d7235c3f365fe915/ftvstt-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "92eea604aa71327c9fb006e9b9cf9dae", "sha256": "70a47edd58d1961b0e913679953061f57cd17fee64213ae9fd73f555ef7991f6"}, "downloads": -1, "filename": "ftvstt-1.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "92eea604aa71327c9fb006e9b9cf9dae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12203, "upload_time": "2019-12-09T13:01:29", "upload_time_iso_8601": "2019-12-09T13:01:29.184768Z", "url": "https://files.pythonhosted.org/packages/db/01/074e73914e892b7527a9dfa6492e26a2668287d9e8c12bd0f60e4f7ebde3/ftvstt-1.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b90be4ad54dd483e6af7bb3f1eba2828", "sha256": "ce062dc682be3eabd6021987675673baec39abfe284e3b7fbc5130b1f3baff78"}, "downloads": -1, "filename": "ftvstt-1.2.4.tar.gz", "has_sig": false, "md5_digest": "b90be4ad54dd483e6af7bb3f1eba2828", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10309, "upload_time": "2019-12-09T13:01:30", "upload_time_iso_8601": "2019-12-09T13:01:30.758780Z", "url": "https://files.pythonhosted.org/packages/57/ae/6a5f356a4a7a5844f0870f7c969f65188ee76f77618123afc3eac57f8216/ftvstt-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "c7d27ead6a457eafa7f44e4e4412eda5", "sha256": "9bf2f1284e2606bea3c1c6e2652e8de96edde0fcceaa4c0b31515c7c38084943"}, "downloads": -1, "filename": "ftvstt-1.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "c7d27ead6a457eafa7f44e4e4412eda5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12206, "upload_time": "2019-12-12T09:06:32", "upload_time_iso_8601": "2019-12-12T09:06:32.429740Z", "url": "https://files.pythonhosted.org/packages/41/1c/4cdaafa795dabdb0072bfcba0e4b53027d387c840f8d6534984db9b9fe52/ftvstt-1.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a39754c94eabb8e039e0b4f40ac8137e", "sha256": "691f64abd29d9dc3070d8ad78e5808863221f5a0d9ce8658f5c552834d595640"}, "downloads": -1, "filename": "ftvstt-1.2.5.tar.gz", "has_sig": false, "md5_digest": "a39754c94eabb8e039e0b4f40ac8137e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10308, "upload_time": "2019-12-12T09:06:33", "upload_time_iso_8601": "2019-12-12T09:06:33.863889Z", "url": "https://files.pythonhosted.org/packages/d0/2f/0d10e2eb531dcb18ec3087996241776c0267239a9a6080536ac845212a3e/ftvstt-1.2.5.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "ebb9aa8f38007f18bbe8ca9aef461102", "sha256": "3cdae82b9cc2a633d7dd82e6349546baf68561f2750d175488818b3285846a68"}, "downloads": -1, "filename": "ftvstt-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ebb9aa8f38007f18bbe8ca9aef461102", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12611, "upload_time": "2020-01-20T10:15:10", "upload_time_iso_8601": "2020-01-20T10:15:10.168213Z", "url": "https://files.pythonhosted.org/packages/4e/54/9c13bfeae999fcf49fabd98fb89cec37dabff0e37b7d7f093c7219ca7350/ftvstt-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a787af59e6879b268cd6144c248f3f0c", "sha256": "15299252f91a157c99b166f326d25f86d9cad1c71a76d86afe1f5f5657e7dd28"}, "downloads": -1, "filename": "ftvstt-2.0.0.tar.gz", "has_sig": false, "md5_digest": "a787af59e6879b268cd6144c248f3f0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10657, "upload_time": "2020-01-20T10:15:11", "upload_time_iso_8601": "2020-01-20T10:15:11.858907Z", "url": "https://files.pythonhosted.org/packages/7e/8e/d7b032770013589498d198b21f6a8febaa0e864bd41a3265042787a8dd79/ftvstt-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ebb9aa8f38007f18bbe8ca9aef461102", "sha256": "3cdae82b9cc2a633d7dd82e6349546baf68561f2750d175488818b3285846a68"}, "downloads": -1, "filename": "ftvstt-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ebb9aa8f38007f18bbe8ca9aef461102", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12611, "upload_time": "2020-01-20T10:15:10", "upload_time_iso_8601": "2020-01-20T10:15:10.168213Z", "url": "https://files.pythonhosted.org/packages/4e/54/9c13bfeae999fcf49fabd98fb89cec37dabff0e37b7d7f093c7219ca7350/ftvstt-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a787af59e6879b268cd6144c248f3f0c", "sha256": "15299252f91a157c99b166f326d25f86d9cad1c71a76d86afe1f5f5657e7dd28"}, "downloads": -1, "filename": "ftvstt-2.0.0.tar.gz", "has_sig": false, "md5_digest": "a787af59e6879b268cd6144c248f3f0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10657, "upload_time": "2020-01-20T10:15:11", "upload_time_iso_8601": "2020-01-20T10:15:11.858907Z", "url": "https://files.pythonhosted.org/packages/7e/8e/d7b032770013589498d198b21f6a8febaa0e864bd41a3265042787a8dd79/ftvstt-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:57 2020"}