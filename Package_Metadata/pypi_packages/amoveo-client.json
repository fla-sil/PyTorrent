{"info": {"author": "Dmitry Zhidkih", "author_email": "zhidkih.dmitry@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Python Amoveo Client\n====================\n\nIntroduction\n------------\n\nAmoveo is a pretty new blockchain, the mainnet was launched on March,\n2nd.\n\nit's not a fork of any existing coin, but it implements number of\ninteresting concepts: on-chain governance, oracles working on top of the\ncoin itself, lightning channels, turing-complete smart-contracts on top\nof channels, and last but not least -- prediction markets, they're one\nof main purposes of the project.\n\nAmoveo shows steady growth of userbase and has number of services,\nimplemented by 3rd parties, working with this coin: there're mobile\nwallets, desktop app, mining pools etc.\n\nRight now it's trading on two small exchanges not listed on CMC, and\ntrade volume including OTC deals is like tens of BTCs per day.\n\nThe project itself is open source and community-driven, its main\ndeveloper is Zack Hess, former CTO of Augur and Aeternity.\n\nTo find more information you can look through https://amoveo.io -- it's\ncommunity site, recently launched. Also, join the community at\nhttps://t.me/amoveo\n\nInfrastructure\n--------------\n\nTo work with API you need a running full node. Full node is written in\nErlang and available from project repository at\nhttps://github.com/zack-bitcoin/amoveo\n\nThe full node can be set up using instructions from official repo:\nhttps://github.com/zack-bitcoin/amoveo/blob/master/docs/getting-started/build\\_intro.md\n\nOnce node\u2019s up you need to sync it according to\nhttps://github.com/zack-bitcoin/amoveo/blob/master/docs/getting-started/sync.md\n\nNB: it\u2019s vital to switch ``sync_mode`` to ``normal`` after the first\nsync (and after every restart).\n\nAlso, take care of security, \u2018cause ``epmd`` opens the maintenance port:\nhttps://github.com/zack-bitcoin/amoveo/blob/master/docs/getting-started/firewall.md\n\nThe full node opens two ports: 8080 for external api, it should be\nvisible from internet too to sync, and 8081 on ``lo`` listening for\ninternal api (which is effectively erlang methods calls via HTTP).\n\nIn case of troubles with sync, etc. you can use our own full node at\n88.99.245.31:8080\n\nList of open full nodes is available on https://veoscan.io\n\nNice public block explorer (supporting tx hashes) is\nhttps://explorer.veopool.pw\n\nGood reference of deposit/withdraw UI is on https://qtrade.io\n\nInstall and use\n---------------\n\nInstall\n~~~~~~~\n\n::\n\n    pip install amoveo-client\n\nExamples\n~~~~~~~~\n\nInit\n\n::\n\n    AMOVEO_CONF = {\n      'EXPLORER': ...,\n      'NODE': ...\n    }\n    amoveo_client = AmoveoClient(AMOVEO_CONF)\n\nCreate address and private key\n\n::\n\n    address, private_key, passphrase = amoveo_client.generate_wallet()\n\nGet current balance It can return 0 if account has never been funded\n\n::\n\n    balance = amoveo_client.balance(address)\n    balance_in_satoshi = amoveo_client.balance(address, in_satoshi=True)\n\nGet transaction by tx hash\n\n::\n\n    amoveo.get_tx(tx_hash)\n\nGet account transactions\n\n::\n\n    amoveo.account_txs(address)\n\nSend transaction. Call ``Amoveo.send``. It determines tx type needed,\nforms the transaction payload, serializes it and sends to full node.\nPlease note, there should be at least 1 satoshi left on the account to\nmake spending transaction correct (i.e. you can\u2019t transfer the whole\namount, just amount - 1 satoshi, excluding fee).\n\n::\n\n    acc = amoveo.account(_to)\n    tx_typ = \"create_account_tx\" if acc == \"empty\" else \"spend_tx\"\n    fee = 152168 if acc == \"empty\" else 61657\n    tx = amoveo_client.prepare_tx(tx_typ, amount, fee, _from, _to)\n    sign = amoveo.sign(tx, private_key)\n    transaction_id = amoveo_client.send_tx(tx, sign)\n\nGet current blockchain height\n\n::\n\n    height = amoveo_client.last_block()\n\nGet block and its tx\u2019s. Response contains several nested arrays, first\nwith transactions and theirs signatures (MQ\u2026) and the second with theirs\nhashes in the corresponding order.\n\n::\n\n    block_data = amoveo_client.last_block(block_height)\n\nPending transactions. Response contains current pending transactions.\nUnfortunately, they have no hashes included in response but one can map\nthem using theirs signatures.\n\n::\n\n    amoveo_client.pending_tx()\n\n::\n\n    curl --request GET \\\n            --url http://amoveo.node/ \\\n            --header 'content-type: application/json' \\\n            --data '[\"mempool\"]'\n\nOther methods\n\n::\n\n    amoveo_client.account(address)\n\naccount not funded\n\n::\n\n    curl --request GET \\\n        --url http://amoveo.node/ \\\n        --header 'content-type: application/json' \\\n        --data '[\"account\", \"BIkj6yP84pYqRP8LDjKnO6Ae4cQSP5NiX6x5jRpWUcYWyR87uM6pf90ZhAH/J0g3Fm35O+Kf6a0mAqzsuvTPmyU=\"]'\n    > [\"ok\",0]  # account not funded yet.\n\naccount funded\n\n::\n\n    curl --request GET \\\n        --url http://amoveo.node/ \\\n        --header 'content-type: application/json' \\\n        --data '[\"account\", \"BH8sPvGR4DqpnasL3zVJ9C068bPHbtBEOLV4rhEQvqt1Y8NH9ceXFozaFctuSaAtgb0SZ5kiuPxZZY6jGM+BDHw=\"]'\n    > [\"ok\",[\"acc\",74679577,25,\"BH8sPvGR4DqpnasL3zVJ9C068bPHbtBEOLV4rhEQvqt1Y8NH9ceXFozaFctuSaAtgb0SZ5kiuPxZZY6jGM+BDHw=\",0,\"B2onx55azio9R/ndLoPk/26ohys8Ihj2bJK4m1XzZWA=\"]]\n    [result, [request type, balance, ...]]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dmitry1981/amoveo-client", "keywords": "amoveo veo", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "amoveo-client", "package_url": "https://pypi.org/project/amoveo-client/", "platform": "", "project_url": "https://pypi.org/project/amoveo-client/", "project_urls": {"Homepage": "https://github.com/dmitry1981/amoveo-client"}, "release_url": "https://pypi.org/project/amoveo-client/0.2.0/", "requires_dist": null, "requires_python": ">=3.6,<4", "summary": "amoveo python client", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Amoveo is a pretty new blockchain, the mainnet was launched on March,\n2nd.</p>\n<p>it\u2019s not a fork of any existing coin, but it implements number of\ninteresting concepts: on-chain governance, oracles working on top of the\ncoin itself, lightning channels, turing-complete smart-contracts on top\nof channels, and last but not least \u2013 prediction markets, they\u2019re one\nof main purposes of the project.</p>\n<p>Amoveo shows steady growth of userbase and has number of services,\nimplemented by 3rd parties, working with this coin: there\u2019re mobile\nwallets, desktop app, mining pools etc.</p>\n<p>Right now it\u2019s trading on two small exchanges not listed on CMC, and\ntrade volume including OTC deals is like tens of BTCs per day.</p>\n<p>The project itself is open source and community-driven, its main\ndeveloper is Zack Hess, former CTO of Augur and Aeternity.</p>\n<p>To find more information you can look through <a href=\"https://amoveo.io\" rel=\"nofollow\">https://amoveo.io</a> \u2013 it\u2019s\ncommunity site, recently launched. Also, join the community at\n<a href=\"https://t.me/amoveo\" rel=\"nofollow\">https://t.me/amoveo</a></p>\n</div>\n<div id=\"infrastructure\">\n<h2>Infrastructure</h2>\n<p>To work with API you need a running full node. Full node is written in\nErlang and available from project repository at\n<a href=\"https://github.com/zack-bitcoin/amoveo\" rel=\"nofollow\">https://github.com/zack-bitcoin/amoveo</a></p>\n<p>The full node can be set up using instructions from official repo:\n<a href=\"https://github.com/zack-bitcoin/amoveo/blob/master/docs/getting-started/build_intro.md\" rel=\"nofollow\">https://github.com/zack-bitcoin/amoveo/blob/master/docs/getting-started/build_intro.md</a></p>\n<p>Once node\u2019s up you need to sync it according to\n<a href=\"https://github.com/zack-bitcoin/amoveo/blob/master/docs/getting-started/sync.md\" rel=\"nofollow\">https://github.com/zack-bitcoin/amoveo/blob/master/docs/getting-started/sync.md</a></p>\n<p>NB: it\u2019s vital to switch <tt>sync_mode</tt> to <tt>normal</tt> after the first\nsync (and after every restart).</p>\n<p>Also, take care of security, \u2018cause <tt>epmd</tt> opens the maintenance port:\n<a href=\"https://github.com/zack-bitcoin/amoveo/blob/master/docs/getting-started/firewall.md\" rel=\"nofollow\">https://github.com/zack-bitcoin/amoveo/blob/master/docs/getting-started/firewall.md</a></p>\n<p>The full node opens two ports: 8080 for external api, it should be\nvisible from internet too to sync, and 8081 on <tt>lo</tt> listening for\ninternal api (which is effectively erlang methods calls via HTTP).</p>\n<p>In case of troubles with sync, etc. you can use our own full node at\n88.99.245.31:8080</p>\n<p>List of open full nodes is available on <a href=\"https://veoscan.io\" rel=\"nofollow\">https://veoscan.io</a></p>\n<p>Nice public block explorer (supporting tx hashes) is\n<a href=\"https://explorer.veopool.pw\" rel=\"nofollow\">https://explorer.veopool.pw</a></p>\n<p>Good reference of deposit/withdraw UI is on <a href=\"https://qtrade.io\" rel=\"nofollow\">https://qtrade.io</a></p>\n</div>\n<div id=\"install-and-use\">\n<h2>Install and use</h2>\n<div id=\"install\">\n<h3>Install</h3>\n<pre>pip install amoveo-client\n</pre>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Init</p>\n<pre>AMOVEO_CONF = {\n  'EXPLORER': ...,\n  'NODE': ...\n}\namoveo_client = AmoveoClient(AMOVEO_CONF)\n</pre>\n<p>Create address and private key</p>\n<pre>address, private_key, passphrase = amoveo_client.generate_wallet()\n</pre>\n<p>Get current balance It can return 0 if account has never been funded</p>\n<pre>balance = amoveo_client.balance(address)\nbalance_in_satoshi = amoveo_client.balance(address, in_satoshi=True)\n</pre>\n<p>Get transaction by tx hash</p>\n<pre>amoveo.get_tx(tx_hash)\n</pre>\n<p>Get account transactions</p>\n<pre>amoveo.account_txs(address)\n</pre>\n<p>Send transaction. Call <tt>Amoveo.send</tt>. It determines tx type needed,\nforms the transaction payload, serializes it and sends to full node.\nPlease note, there should be at least 1 satoshi left on the account to\nmake spending transaction correct (i.e. you can\u2019t transfer the whole\namount, just amount - 1 satoshi, excluding fee).</p>\n<pre>acc = amoveo.account(_to)\ntx_typ = \"create_account_tx\" if acc == \"empty\" else \"spend_tx\"\nfee = 152168 if acc == \"empty\" else 61657\ntx = amoveo_client.prepare_tx(tx_typ, amount, fee, _from, _to)\nsign = amoveo.sign(tx, private_key)\ntransaction_id = amoveo_client.send_tx(tx, sign)\n</pre>\n<p>Get current blockchain height</p>\n<pre>height = amoveo_client.last_block()\n</pre>\n<p>Get block and its tx\u2019s. Response contains several nested arrays, first\nwith transactions and theirs signatures (MQ\u2026) and the second with theirs\nhashes in the corresponding order.</p>\n<pre>block_data = amoveo_client.last_block(block_height)\n</pre>\n<p>Pending transactions. Response contains current pending transactions.\nUnfortunately, they have no hashes included in response but one can map\nthem using theirs signatures.</p>\n<pre>amoveo_client.pending_tx()\n</pre>\n<pre>curl --request GET \\\n        --url http://amoveo.node/ \\\n        --header 'content-type: application/json' \\\n        --data '[\"mempool\"]'\n</pre>\n<p>Other methods</p>\n<pre>amoveo_client.account(address)\n</pre>\n<p>account not funded</p>\n<pre>curl --request GET \\\n    --url http://amoveo.node/ \\\n    --header 'content-type: application/json' \\\n    --data '[\"account\", \"BIkj6yP84pYqRP8LDjKnO6Ae4cQSP5NiX6x5jRpWUcYWyR87uM6pf90ZhAH/J0g3Fm35O+Kf6a0mAqzsuvTPmyU=\"]'\n&gt; [\"ok\",0]  # account not funded yet.\n</pre>\n<p>account funded</p>\n<pre>curl --request GET \\\n    --url http://amoveo.node/ \\\n    --header 'content-type: application/json' \\\n    --data '[\"account\", \"BH8sPvGR4DqpnasL3zVJ9C068bPHbtBEOLV4rhEQvqt1Y8NH9ceXFozaFctuSaAtgb0SZ5kiuPxZZY6jGM+BDHw=\"]'\n&gt; [\"ok\",[\"acc\",74679577,25,\"BH8sPvGR4DqpnasL3zVJ9C068bPHbtBEOLV4rhEQvqt1Y8NH9ceXFozaFctuSaAtgb0SZ5kiuPxZZY6jGM+BDHw=\",0,\"B2onx55azio9R/ndLoPk/26ohys8Ihj2bJK4m1XzZWA=\"]]\n[result, [request type, balance, ...]]\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6533237, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "bcf88803846d5831e8ae0579baaf6b18", "sha256": "967f6c08f2775657580eb82a300047d9aae0abcf609fa4960e35310d41151330"}, "downloads": -1, "filename": "amoveo-client-0.1.4.tar.gz", "has_sig": false, "md5_digest": "bcf88803846d5831e8ae0579baaf6b18", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 4159, "upload_time": "2019-04-03T11:43:15", "upload_time_iso_8601": "2019-04-03T11:43:15.434966Z", "url": "https://files.pythonhosted.org/packages/4c/b6/fd807da006096a1d748c6d9d89ae191c060882e4bfb45c84ab8943a578b6/amoveo-client-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "2bb47998513f5a22e241e18a0324f7f9", "sha256": "f40d6d27010ff663220d22b96483117db6080afce4bdd18464083468e6d2e6c9"}, "downloads": -1, "filename": "amoveo-client-0.1.5.tar.gz", "has_sig": false, "md5_digest": "2bb47998513f5a22e241e18a0324f7f9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 6375, "upload_time": "2019-04-03T13:19:39", "upload_time_iso_8601": "2019-04-03T13:19:39.772038Z", "url": "https://files.pythonhosted.org/packages/71/4a/add33d447b3a58721a1bec0ae5a7ddf22ae6c732c63ddad44652bfb7fa75/amoveo-client-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "ef04784936807b76e051424030e31bdd", "sha256": "79e55461224694079b16e995890f810cef6c4ffc47d5c1f6d260a31073f6c2f3"}, "downloads": -1, "filename": "amoveo-client-0.1.6.tar.gz", "has_sig": false, "md5_digest": "ef04784936807b76e051424030e31bdd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 6503, "upload_time": "2019-04-03T13:48:33", "upload_time_iso_8601": "2019-04-03T13:48:33.752140Z", "url": "https://files.pythonhosted.org/packages/2c/3a/0ba5a31063be86acd8a12cd6b4fa508d65e3e4091adff176e29f7834a399/amoveo-client-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "2dbd51aeeb339dbf3b70fc7dae70485a", "sha256": "652f41d91c5c8fa9dbffa2a74f056a514cac2e5f2099e8fad873c4d5e8ee49b2"}, "downloads": -1, "filename": "amoveo-client-0.1.7.tar.gz", "has_sig": false, "md5_digest": "2dbd51aeeb339dbf3b70fc7dae70485a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 6935, "upload_time": "2019-08-27T12:38:13", "upload_time_iso_8601": "2019-08-27T12:38:13.868239Z", "url": "https://files.pythonhosted.org/packages/e8/89/0f439ccc2ea1b5dbab4c9b3d385cf331e7381458056e68c5f7c9555c4748/amoveo-client-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "18e96d53c3d833311970b17ed7dafb13", "sha256": "66f5934f1c366a18c6af89d794d2288e3a92d88841b666314b58b6b47abae8f8"}, "downloads": -1, "filename": "amoveo-client-0.1.8.tar.gz", "has_sig": false, "md5_digest": "18e96d53c3d833311970b17ed7dafb13", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 6997, "upload_time": "2019-09-18T13:58:58", "upload_time_iso_8601": "2019-09-18T13:58:58.910794Z", "url": "https://files.pythonhosted.org/packages/15/23/ac9e24b3f80f888391597c502376a868b52d7a86d4525ca709d73f16510e/amoveo-client-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "d56f5a1c6de83b501f9244bdb15b931c", "sha256": "f1eb05bf91e5bdb2df5b8e279878e1f6052cda8e554e783ad3058d3574deaa95"}, "downloads": -1, "filename": "amoveo-client-0.1.9.tar.gz", "has_sig": false, "md5_digest": "d56f5a1c6de83b501f9244bdb15b931c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 7591, "upload_time": "2019-11-06T14:45:43", "upload_time_iso_8601": "2019-11-06T14:45:43.418556Z", "url": "https://files.pythonhosted.org/packages/ce/96/226a65738dda6b37af0cac678c23d3c5b86033e95d82c3156c2d31d86fc2/amoveo-client-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "cf9ebfa71707eb7abf19c7e44631657d", "sha256": "298e185760475507a5351f08256702d4454bd1ff47c8346badf072449da169f2"}, "downloads": -1, "filename": "amoveo-client-0.2.0.tar.gz", "has_sig": false, "md5_digest": "cf9ebfa71707eb7abf19c7e44631657d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 8023, "upload_time": "2020-01-28T16:26:24", "upload_time_iso_8601": "2020-01-28T16:26:24.804576Z", "url": "https://files.pythonhosted.org/packages/65/44/786662f61a888617adfb79c3dc82f8f2e1b1f47cf0902b2f7eff8c12f40e/amoveo-client-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cf9ebfa71707eb7abf19c7e44631657d", "sha256": "298e185760475507a5351f08256702d4454bd1ff47c8346badf072449da169f2"}, "downloads": -1, "filename": "amoveo-client-0.2.0.tar.gz", "has_sig": false, "md5_digest": "cf9ebfa71707eb7abf19c7e44631657d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 8023, "upload_time": "2020-01-28T16:26:24", "upload_time_iso_8601": "2020-01-28T16:26:24.804576Z", "url": "https://files.pythonhosted.org/packages/65/44/786662f61a888617adfb79c3dc82f8f2e1b1f47cf0902b2f7eff8c12f40e/amoveo-client-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:20 2020"}