{"info": {"author": "Ritiek Malhotra", "author_email": "ritiekmalhotra123@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# rust-without-rust\n\n[![Pypi Version](https://img.shields.io/pypi/v/rust-playground.svg)](hhttps://pypi.org/project/rust-without-rust)\n[![Build Status](https://travis-ci.org/ritiek/rust-without-rust.svg?branch=master)](https://travis-ci.org/ritiek/rust-without-rust)\n\nThis is a small tool written in Python which allows you to compile simple\nRust code through http://play.rust-lang.org.\n\n## Installation\n\nYou can install this package from PyPi.\n```\npip install rust-playground\n```\n\nYou can also clone this repository locally and run setup.py.\n```\npython setup.py install\n```\n\n## Usage\n\n```\nusage: playground [-h] [--release] [--channel {stable,nightly,beta}]\n                  [--target {llvm-ir,wasm,asm,mir,ast}] [--disable-color]\n                  FILE\n\nUse Python to execute simple Rust code by running it on https://play.rust-\nlang.org/\n\npositional arguments:\n  FILE                  path to file containing Rust code\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --release             build artifacts in release mode, with optimizations\n                        (default: False)\n  --channel {stable,nightly,beta}\n                        set Rust channel (default: stable)\n  --target {llvm-ir,wasm,asm,mir,ast}\n                        build for the target triple (default: ast)\n  --disable-color       disable colors and styles for stderr (default: False)\n```\n\n## Example\n\nSay you want to quick test some Rust code but your current machine doesn't have\nthe Rust compiler installed.\n\n```rust\n// test.rs\nfn main() {\n    for x in 1..5 {\n        println!(\"{}\", x);\n    }\n}\n```\n\n```bash\n$ playground test.rs\n   Compiling playground v0.0.1 (file:///playground)\n    Finished dev [unoptimized + debuginfo] target(s) in 2.36s\n     Running `target/debug/playground`\n1\n2\n3\n4\n```\n\nIt reads your `test.rs` and passes it to http://play.rust-lang.org for compilation\nand then returns stdout/stderr output on your terminal, which looks very alike to\n`$ cargo run`.\n\n## License\n\n[![License](https://img.shields.io/github/license/ritiek/rust-without-rust.svg)](https://github.com/ritiek/rust-without-rust/blob/master/LICENSE)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/ritiek/rust-without-rust/archive/v0.1.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.github.com/ritiek/rust-without-rust", "keywords": "rust,python,playground", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rust-playground", "package_url": "https://pypi.org/project/rust-playground/", "platform": "", "project_url": "https://pypi.org/project/rust-playground/", "project_urls": {"Download": "https://github.com/ritiek/rust-without-rust/archive/v0.1.1.tar.gz", "Homepage": "https://www.github.com/ritiek/rust-without-rust"}, "release_url": "https://pypi.org/project/rust-playground/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Use Python to execute simple Rust code by running it on https://play.rust-lang.org/", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>rust-without-rust</h1>\n<p><a><img alt=\"Pypi Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dffc9d9c6568ecbcf992204ca6d4805a9539f7cd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f727573742d706c617967726f756e642e737667\"></a>\n<a href=\"https://travis-ci.org/ritiek/rust-without-rust\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd29f816f1f07bf7a6aa405cb0916af11d4fdf6e/68747470733a2f2f7472617669732d63692e6f72672f72697469656b2f727573742d776974686f75742d727573742e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>This is a small tool written in Python which allows you to compile simple\nRust code through <a href=\"http://play.rust-lang.org\" rel=\"nofollow\">http://play.rust-lang.org</a>.</p>\n<h2>Installation</h2>\n<p>You can install this package from PyPi.</p>\n<pre><code>pip install rust-playground\n</code></pre>\n<p>You can also clone this repository locally and run setup.py.</p>\n<pre><code>python setup.py install\n</code></pre>\n<h2>Usage</h2>\n<pre><code>usage: playground [-h] [--release] [--channel {stable,nightly,beta}]\n                  [--target {llvm-ir,wasm,asm,mir,ast}] [--disable-color]\n                  FILE\n\nUse Python to execute simple Rust code by running it on https://play.rust-\nlang.org/\n\npositional arguments:\n  FILE                  path to file containing Rust code\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --release             build artifacts in release mode, with optimizations\n                        (default: False)\n  --channel {stable,nightly,beta}\n                        set Rust channel (default: stable)\n  --target {llvm-ir,wasm,asm,mir,ast}\n                        build for the target triple (default: ast)\n  --disable-color       disable colors and styles for stderr (default: False)\n</code></pre>\n<h2>Example</h2>\n<p>Say you want to quick test some Rust code but your current machine doesn't have\nthe Rust compiler installed.</p>\n<pre><span class=\"c1\">// test.rs</span>\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">..</span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"{}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre>\n<pre>$ playground test.rs\n   Compiling playground v0.0.1 <span class=\"o\">(</span>file:///playground<span class=\"o\">)</span>\n    Finished dev <span class=\"o\">[</span>unoptimized + debuginfo<span class=\"o\">]</span> target<span class=\"o\">(</span>s<span class=\"o\">)</span> in <span class=\"m\">2</span>.36s\n     Running <span class=\"sb\">`</span>target/debug/playground<span class=\"sb\">`</span>\n<span class=\"m\">1</span>\n<span class=\"m\">2</span>\n<span class=\"m\">3</span>\n<span class=\"m\">4</span>\n</pre>\n<p>It reads your <code>test.rs</code> and passes it to <a href=\"http://play.rust-lang.org\" rel=\"nofollow\">http://play.rust-lang.org</a> for compilation\nand then returns stdout/stderr output on your terminal, which looks very alike to\n<code>$ cargo run</code>.</p>\n<h2>License</h2>\n<p><a href=\"https://github.com/ritiek/rust-without-rust/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f9c64e8877d91424e7f42ff234383c55c20f33f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f72697469656b2f727573742d776974686f75742d727573742e737667\"></a></p>\n\n          </div>"}, "last_serial": 4033641, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5df29152de40ebe86ecc96a371552b16", "sha256": "8916233bcb910c1584c18b5e3ec1ad435f648719bae7d68031378026d5dcb16a"}, "downloads": -1, "filename": "rust_playground-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5df29152de40ebe86ecc96a371552b16", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4039, "upload_time": "2018-07-05T10:55:38", "upload_time_iso_8601": "2018-07-05T10:55:38.982333Z", "url": "https://files.pythonhosted.org/packages/0f/f6/552523309005136d65d710c16a64f7cfaed60907a3410384bdbec6c16cac/rust_playground-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "cc86813bd48f0c2778ea42f55bddce7e", "sha256": "6779f026aeb0369bfbc9793cbb68427a130b000517db5552b5a36cbd3bb719ca"}, "downloads": -1, "filename": "rust_playground-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cc86813bd48f0c2778ea42f55bddce7e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4096, "upload_time": "2018-07-05T15:26:04", "upload_time_iso_8601": "2018-07-05T15:26:04.131697Z", "url": "https://files.pythonhosted.org/packages/c3/0b/0046db21dca1743a10a4294ddd798468da862fdd6640f492dd5719040127/rust_playground-0.1.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cc86813bd48f0c2778ea42f55bddce7e", "sha256": "6779f026aeb0369bfbc9793cbb68427a130b000517db5552b5a36cbd3bb719ca"}, "downloads": -1, "filename": "rust_playground-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cc86813bd48f0c2778ea42f55bddce7e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4096, "upload_time": "2018-07-05T15:26:04", "upload_time_iso_8601": "2018-07-05T15:26:04.131697Z", "url": "https://files.pythonhosted.org/packages/c3/0b/0046db21dca1743a10a4294ddd798468da862fdd6640f492dd5719040127/rust_playground-0.1.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:51 2020"}