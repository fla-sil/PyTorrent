{"info": {"author": "Bennyoak", "author_email": "benny@twosensedesign.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Django-CSP-Nonce (beta)\n=======================\n\n|Build Status|\n\nDCN is a Content-Security-Policy nonce injection support system for\nDjango and CSP.\n\n| It provides for on-the-fly nonce creation and deployment. Once\n  installed, DCN will generate a unique nonce\n| for each request (one for ``script-src`` and a separate one for\n  ``style-src`` directives) append the nonce to the\n| CSP header, then make the nonce(s) accessible to the templates via the\n  Django Context Processors.\n\n| DCN stays out of the way of `Django-CSP`_ and can operate\n| independently with any method of CSP insertion that passes through\n  Django Middleware.\n\nDisclosure\n----------\n\n-  This code has not been through a third party security audit.\n-  I\u2019ve successfully tested this locally with ``pypy-5.4.1``. TravisCI\n   has confirmed this doesn\u2019t work with their version.\n\nInstallation\n------------\n\n``pip install django-csp-nonce``\n\nAdd DCN to ``MIDDLEWARE_CLASSES``:\n\n.. code:: python\n\n    MIDDLEWARE_CLASSES = (\n        [ ... ]\n        'csp_nonce.middleware.CSPNonceMiddleware',\n        # Make sure you put it *above* django-csp if you're using it\n        [ ... ]\n    )\n\nAdd DCN to ``context_processors``:\n\n.. code:: python\n\n    TEMPLATES = [\n        {\n            'BACKEND': 'django.template.backends.django.DjangoTemplates',\n            'DIRS': [...],\n            'APP_DIRS': True,\n            'OPTIONS': {\n                'context_processors': [\n                    'csp_nonce.context_processors.nonce',\n                    [ ... ]\n                ],\n            },\n        },\n    ]\n\nFinally, add DCN directives to settings:\n\n.. code:: python\n\n    CSP_NONCE_SCRIPT = False  # True if you want to use it\n    CSP_NONCE_STYLE = False  # True if you want to use it\n    CSP_FLAG_STRICT = False  # True to include strict-dynamic in CSP\n\nUsage\n-----\n\nDCN takes care of nonce generation for you. As you work\non your templates, pull in your specific nonce from the context:\n\n.. code:: django\n\n    <script type=\"text/javascript\" {{ script_nonce }}>\n    ...\n    </script>\n\n    <style {{ style_nonce }}>\n    ...\n    </style>\n\nDependencies\n------------\n\n-  Django\n\nKnown issues\n------------\n\n-  Nonce sync breaks on ``settings.DEBUG=True``\n\n.. _Django-CSP: http://django-csp.readthedocs.io/en/latest/\n\n.. |Build Status| image:: https://travis-ci.org/Bennyoak/django-csp-nonce.svg?branch=master\n   :target: https://travis-ci.org/Bennyoak/django-csp-nonce\n\n\nImportant Changes\n-----------------\n\n- 1.0\n\n  - Out of beta!\n  - PyNacl is no longer a dependency.  (Moving forward the aim is to\n    stay compatible with environments such as Google App Engine which\n    don't support non-python extensions.)\n\n\nRunning Tests\n-------------\n\nUse ``tox`` to run the tests against multiple versions of Python that\nyou have installed and multiple versions of Django.  Please make sure\nthat you run your tests against at least Python 2.7 and Python 3.5.\n\n.. code:: bash\n\n    virtualenv venv\n    . ./venv/bin/activate\n\n    pip install tox\n\n    tox\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/Bennyoak/django-csp-nonce", "keywords": "CSP Content Security Policy Nonce Django", "license": "MPL 2.0", "maintainer": "", "maintainer_email": "", "name": "django-csp-nonce", "package_url": "https://pypi.org/project/django-csp-nonce/", "platform": "", "project_url": "https://pypi.org/project/django-csp-nonce/", "project_urls": {"Homepage": "http://github.com/Bennyoak/django-csp-nonce"}, "release_url": "https://pypi.org/project/django-csp-nonce/1.0.0/", "requires_dist": ["Django (>=1.6)", "django-csp; extra == 'tests'", "mock (==1.0.1); extra == 'tests'", "pep8 (==1.4.6); extra == 'tests'", "pytest (==2.9.1); extra == 'tests'", "pytest-django (==2.9.1); extra == 'tests'", "pytest-flakes (==1.0.1); extra == 'tests'", "pytest-pep8 (==1.0.6); extra == 'tests'"], "requires_python": "", "summary": "Nonce support for Content Security Policy in Django.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/Bennyoak/django-csp-nonce\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7ab38c831bef3e6f3719c71c059d36f38a64143/68747470733a2f2f7472617669732d63692e6f72672f42656e6e796f616b2f646a616e676f2d6373702d6e6f6e63652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>DCN is a Content-Security-Policy nonce injection support system for\nDjango and CSP.</p>\n<div>\n<div>It provides for on-the-fly nonce creation and deployment. Once\ninstalled, DCN will generate a unique nonce</div>\n<div>for each request (one for <tt><span class=\"pre\">script-src</span></tt> and a separate one for\n<tt><span class=\"pre\">style-src</span></tt> directives) append the nonce to the</div>\n<div>CSP header, then make the nonce(s) accessible to the templates via the\nDjango Context Processors.</div>\n</div>\n<div>\n<div>DCN stays out of the way of <a href=\"http://django-csp.readthedocs.io/en/latest/\" rel=\"nofollow\">Django-CSP</a> and can operate</div>\n<div>independently with any method of CSP insertion that passes through\nDjango Middleware.</div>\n</div>\n<div id=\"disclosure\">\n<h2>Disclosure</h2>\n<ul>\n<li>This code has not been through a third party security audit.</li>\n<li>I\u2019ve successfully tested this locally with <tt><span class=\"pre\">pypy-5.4.1</span></tt>. TravisCI\nhas confirmed this doesn\u2019t work with their version.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install <span class=\"pre\">django-csp-nonce</span></tt></p>\n<p>Add DCN to <tt>MIDDLEWARE_CLASSES</tt>:</p>\n<pre><span class=\"n\">MIDDLEWARE_CLASSES</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"p\">[</span> <span class=\"o\">...</span> <span class=\"p\">]</span>\n    <span class=\"s1\">'csp_nonce.middleware.CSPNonceMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Make sure you put it *above* django-csp if you're using it</span>\n    <span class=\"p\">[</span> <span class=\"o\">...</span> <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Add DCN to <tt>context_processors</tt>:</p>\n<pre><span class=\"n\">TEMPLATES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'BACKEND'</span><span class=\"p\">:</span> <span class=\"s1\">'django.template.backends.django.DjangoTemplates'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'DIRS'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">],</span>\n        <span class=\"s1\">'APP_DIRS'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s1\">'OPTIONS'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'context_processors'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s1\">'csp_nonce.context_processors.nonce'</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span> <span class=\"o\">...</span> <span class=\"p\">]</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Finally, add DCN directives to settings:</p>\n<pre><span class=\"n\">CSP_NONCE_SCRIPT</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>  <span class=\"c1\"># True if you want to use it</span>\n<span class=\"n\">CSP_NONCE_STYLE</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>  <span class=\"c1\"># True if you want to use it</span>\n<span class=\"n\">CSP_FLAG_STRICT</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>  <span class=\"c1\"># True to include strict-dynamic in CSP</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>DCN takes care of nonce generation for you. As you work\non your templates, pull in your specific nonce from the context:</p>\n<pre><span class=\"x\">&lt;script type=\"text/javascript\" </span><span class=\"cp\">{{</span> <span class=\"nv\">script_nonce</span> <span class=\"cp\">}}</span><span class=\"x\">&gt;\n...\n&lt;/script&gt;\n\n&lt;style </span><span class=\"cp\">{{</span> <span class=\"nv\">style_nonce</span> <span class=\"cp\">}}</span><span class=\"x\">&gt;\n...\n&lt;/style&gt;</span>\n</pre>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>Django</li>\n</ul>\n</div>\n<div id=\"known-issues\">\n<h2>Known issues</h2>\n<ul>\n<li>Nonce sync breaks on <tt>settings.DEBUG=True</tt></li>\n</ul>\n</div>\n<div id=\"important-changes\">\n<h2>Important Changes</h2>\n<ul>\n<li>1.0<ul>\n<li>Out of beta!</li>\n<li>PyNacl is no longer a dependency.  (Moving forward the aim is to\nstay compatible with environments such as Google App Engine which\ndon\u2019t support non-python extensions.)</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>Use <tt>tox</tt> to run the tests against multiple versions of Python that\nyou have installed and multiple versions of Django.  Please make sure\nthat you run your tests against at least Python 2.7 and Python 3.5.</p>\n<pre>virtualenv venv\n. ./venv/bin/activate\n\npip install tox\n\ntox\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3046152, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c65ae67af4cb736c308385410a2caa90", "sha256": "dcd5d53f9df86cbd4ef2d8f79effb3eb88ff5293bdb6554a9831a0999fab1d25"}, "downloads": -1, "filename": "django_csp_nonce-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c65ae67af4cb736c308385410a2caa90", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11486, "upload_time": "2017-07-09T19:59:18", "upload_time_iso_8601": "2017-07-09T19:59:18.506023Z", "url": "https://files.pythonhosted.org/packages/98/82/cea6456dfd9b923f48bd493d720521f709a23b482526e1861c24f179c440/django_csp_nonce-1.0.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c65ae67af4cb736c308385410a2caa90", "sha256": "dcd5d53f9df86cbd4ef2d8f79effb3eb88ff5293bdb6554a9831a0999fab1d25"}, "downloads": -1, "filename": "django_csp_nonce-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c65ae67af4cb736c308385410a2caa90", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11486, "upload_time": "2017-07-09T19:59:18", "upload_time_iso_8601": "2017-07-09T19:59:18.506023Z", "url": "https://files.pythonhosted.org/packages/98/82/cea6456dfd9b923f48bd493d720521f709a23b482526e1861c24f179c440/django_csp_nonce-1.0.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:36:46 2020"}