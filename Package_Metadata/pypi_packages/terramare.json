{"info": {"author": "Tom W", "author_email": "796618-tomwatson1024@users.noreply.gitlab.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "![dragon](docs/emoji.png)\n\n# terramare\n\n[![python: 3.6 | 3.7 | 3.8](https://img.shields.io/badge/python-3.6%20|%203.7%20|%203.8-blue)](https://www.python.org/)\n[![license: MIT](https://img.shields.io/badge/license-MIT-blueviolet.svg)](https://opensource.org/licenses/MIT)\n[![PyPI](https://img.shields.io/pypi/v/terramare)](https://pypi.org/project/terramare/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/terramare)](https://pypistats.org/packages/terramare)\n[![docs: pages](https://img.shields.io/badge/docs-pages-blue)](https://tomwatson1024.gitlab.io/terramare/)\n\n[![ci status](https://gitlab.com/tomwatson1024/terramare/badges/master/pipeline.svg)](https://gitlab.com/tomwatson1024/terramare/commits/master)\n[![coverage](https://gitlab.com/tomwatson1024/terramare/badges/master/coverage.svg)](https://gitlab.com/tomwatson1024/terramare/commits/master)\n[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg)](https://conventionalcommits.org)\n\nAutomatically construct complex objects from simple Python types.\n\nHighlights:\n\n- **No boilerplate:** `terramare` uses Python's standard type hints to determine how to construct instances of a class;\n- **Format-agnostic:** `terramare` takes simple Python types as input - pass it the output from `json.load`, `toml.load`, or `yaml.load`;\n- **Non-invasive:** `terramare` requires no modifications to your existing classes and functions beyond standard type hints;\n\nFull documentation available at <https://tomwatson1024.gitlab.io/terramare/>.\n\n## Example\n\n### Deserializing a Simple Class\n\nConsider the following simple class, defined using [`attrs`](https://github.com/python-attrs/attrs) for brevity:\n\n```python\n>>> from typing import List\n>>> import attr\n>>> import terramare\n\n>>> @attr.s(auto_attribs=True)\n... class Example:\n...     words: List[str]\n...\n...     def __str__(self):\n...         return \" \".join(self.words)\n\n```\n\nDeserializing an instance of the class from a dictionary is as simple as:\n\n```python\n>>> print(terramare.deserialize_into(Example, {\"words\": [\"hello\", \"world!\"]}))\nhello world!\n\n```\n\n### Deserializing a More Complex Class\n\nConsider the `Person` class defined below:\n\n```python\n>>> from typing import NamedTuple, NewType, Sequence\n>>> import attr\n>>> import terramare\n\n    # `terramare` handles NamedTuples\n>>> class Location(NamedTuple):\n...     longitude: float\n...     latitude: float\n\n\n    # `terramare` handles NewType aliases\n>>> JobTitle = NewType(\"JobTitle\", str)\n\n\n    # `terramare` handles custom classes\n>>> class Occupation:\n...     def __init__(self, title: JobTitle, field: str):\n...         self.title = title\n...         self.field = field\n...\n...     def __eq__(self, other):\n...         if isinstance(other, self.__class__):\n...             return vars(self) == vars(other)\n...         return False\n...\n...     def __repr__(self):\n...         return \"Occupation('{0.title}', '{0.field}')\".format(self)\n\n\n>>> @attr.s(auto_attribs=True)\n... class Person:\n...     name: str\n...     age: int\n...     friends: Sequence[str]\n...\n...     # `terramare` handles complex member variable types\n...     location: Location\n...     occupation: Occupation\n\n```\n\nAgain, deserialization is a single function call:\n\n```python\n>>> terramare.deserialize_into(\n...     Person,\n...     {\n...         \"name\": \"Alice\",\n...         \"age\": 20,\n...         \"friends\": [\"Bob\", \"Charlie\"],\n...         \"location\": [51.5074, 0.1278],\n...         \"occupation\": {\"title\": \"programmer\", \"field\": \"technology\"}\n...     }\n... )\nPerson(name='Alice', age=20, friends=['Bob', 'Charlie'], location=Location(longitude=51.5074, latitude=0.1278), occupation=Occupation('programmer', 'technology'))\n\n```\n\n## Installation\n\nInstall using [pip](https://pip.pypa.io/en/stable/):\n\n```bash\npip install terramare\n```\n\n## Alternatives\n\nCheck out:\n\n- [`pydantic`](https://pydantic-docs.helpmanual.io/) - _\"Data validation and settings management using python type annotations\"_. A much more mature library also using Python's standard type hints for deserialization that requires a little more integration with your code;\n- [`schematics`](https://schematics.readthedocs.io/en/latest/) - _\"...combine types into structures, validate them, and transform the shapes of your data based on simple descriptions\"_. Uses custom types instead of Python's standard type hints;\n- [`cerberus`](https://docs.python-cerberus.org/en/stable/) - _\"...provides powerful yet simple and lightweight data validation functionality out of the box and is designed to be easily extensible, allowing for custom validation\"_. Schema validation that doesn't change the type of the primitive value.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/tomwatson1024/terramare", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "terramare", "package_url": "https://pypi.org/project/terramare/", "platform": "", "project_url": "https://pypi.org/project/terramare/", "project_urls": {"Documentation": "https://tomwatson1024.gitlab.io/terramare", "Homepage": "https://gitlab.com/tomwatson1024/terramare", "Repository": "https://gitlab.com/tomwatson1024/terramare"}, "release_url": "https://pypi.org/project/terramare/0.3.4/", "requires_dist": ["attrs (>=19.1,<20.0)", "typing-extensions (>=3.7,<4.0)", "coverage (>=4.5,<5.0); extra == \"test\"", "pytest (>=4.0,<5.0); extra == \"test\"", "ruamel.yaml (>=0.16.5,<0.17.0); extra == \"test\"", "toml (>=0.10.0,<0.11.0); extra == \"test\""], "requires_python": ">=3.6,<4.0", "summary": "Automatically deserialize complex objects from simple Python types", "version": "0.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"dragon\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f44e66f9fa4d6fab27e1f92ea4fe4375dbcba83/646f63732f656d6f6a692e706e67\"></p>\n<h1>terramare</h1>\n<p><a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"python: 3.6 | 3.7 | 3.8\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8fbdc39b5b1557575d3fdb5b48e7e40e84984ee9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e36253230253743253230332e37253230253743253230332e382d626c7565\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"license: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c51b3defd98a652f926893db5f38ba3949dd93c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c756576696f6c65742e737667\"></a>\n<a href=\"https://pypi.org/project/terramare/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d27ac0ee8cc0e396f3f9b887358020680f582ec8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f74657272616d617265\"></a>\n<a href=\"https://pypistats.org/packages/terramare\" rel=\"nofollow\"><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a123474969a512d77ba4d051e7af5c808482de3b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f74657272616d617265\"></a>\n<a href=\"https://tomwatson1024.gitlab.io/terramare/\" rel=\"nofollow\"><img alt=\"docs: pages\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4039f21e2935f1ef40be97d4807e68f099dd5717/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d70616765732d626c7565\"></a></p>\n<p><a href=\"https://gitlab.com/tomwatson1024/terramare/commits/master\" rel=\"nofollow\"><img alt=\"ci status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3cc4aadeec987421a2e2e5b7646f66e7097c8ed/68747470733a2f2f6769746c61622e636f6d2f746f6d776174736f6e313032342f74657272616d6172652f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"https://gitlab.com/tomwatson1024/terramare/commits/master\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2c8e5bd0b5bb1bbb72f61efed110e40697671c23/68747470733a2f2f6769746c61622e636f6d2f746f6d776174736f6e313032342f74657272616d6172652f6261646765732f6d61737465722f636f7665726167652e737667\"></a>\n<a href=\"http://mypy-lang.org/\" rel=\"nofollow\"><img alt=\"Checked with mypy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0db8f5dcbf5f340f278004d5db3d16b4cdf33ba/687474703a2f2f7777772e6d7970792d6c616e672e6f72672f7374617469632f6d7970795f62616467652e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://conventionalcommits.org\" rel=\"nofollow\"><img alt=\"Conventional Commits\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c56cb99c6fb01fa6c680929fe04e2e8152f5315/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6e76656e74696f6e616c253230436f6d6d6974732d312e302e302d79656c6c6f772e737667\"></a></p>\n<p>Automatically construct complex objects from simple Python types.</p>\n<p>Highlights:</p>\n<ul>\n<li><strong>No boilerplate:</strong> <code>terramare</code> uses Python's standard type hints to determine how to construct instances of a class;</li>\n<li><strong>Format-agnostic:</strong> <code>terramare</code> takes simple Python types as input - pass it the output from <code>json.load</code>, <code>toml.load</code>, or <code>yaml.load</code>;</li>\n<li><strong>Non-invasive:</strong> <code>terramare</code> requires no modifications to your existing classes and functions beyond standard type hints;</li>\n</ul>\n<p>Full documentation available at <a href=\"https://tomwatson1024.gitlab.io/terramare/\" rel=\"nofollow\">https://tomwatson1024.gitlab.io/terramare/</a>.</p>\n<h2>Example</h2>\n<h3>Deserializing a Simple Class</h3>\n<p>Consider the following simple class, defined using <a href=\"https://github.com/python-attrs/attrs\" rel=\"nofollow\"><code>attrs</code></a> for brevity:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">List</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">attr</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">terramare</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@attr</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"p\">(</span><span class=\"n\">auto_attribs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">...</span> <span class=\"k\">class</span> <span class=\"nc\">Example</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">words</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"o\">...</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"s2\">\" \"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"p\">)</span>\n</pre>\n<p>Deserializing an instance of the class from a dictionary is as simple as:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">terramare</span><span class=\"o\">.</span><span class=\"n\">deserialize_into</span><span class=\"p\">(</span><span class=\"n\">Example</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"words\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"hello\"</span><span class=\"p\">,</span> <span class=\"s2\">\"world!\"</span><span class=\"p\">]}))</span>\n<span class=\"n\">hello</span> <span class=\"n\">world</span><span class=\"err\">!</span>\n</pre>\n<h3>Deserializing a More Complex Class</h3>\n<p>Consider the <code>Person</code> class defined below:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">NamedTuple</span><span class=\"p\">,</span> <span class=\"n\">NewType</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">attr</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">terramare</span>\n\n    <span class=\"c1\"># `terramare` handles NamedTuples</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">Location</span><span class=\"p\">(</span><span class=\"n\">NamedTuple</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"n\">longitude</span><span class=\"p\">:</span> <span class=\"nb\">float</span>\n<span class=\"o\">...</span>     <span class=\"n\">latitude</span><span class=\"p\">:</span> <span class=\"nb\">float</span>\n\n\n    <span class=\"c1\"># `terramare` handles NewType aliases</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">JobTitle</span> <span class=\"o\">=</span> <span class=\"n\">NewType</span><span class=\"p\">(</span><span class=\"s2\">\"JobTitle\"</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span>\n\n\n    <span class=\"c1\"># `terramare` handles custom classes</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">Occupation</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"n\">JobTitle</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">title</span>\n<span class=\"o\">...</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"n\">field</span>\n<span class=\"o\">...</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"fm\">__eq__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>             <span class=\"k\">return</span> <span class=\"nb\">vars</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">vars</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"kc\">False</span>\n<span class=\"o\">...</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"s2\">\"Occupation('</span><span class=\"si\">{0.title}</span><span class=\"s2\">', '</span><span class=\"si\">{0.field}</span><span class=\"s2\">')\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@attr</span><span class=\"o\">.</span><span class=\"n\">s</span><span class=\"p\">(</span><span class=\"n\">auto_attribs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">...</span> <span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n<span class=\"o\">...</span>     <span class=\"n\">age</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n<span class=\"o\">...</span>     <span class=\"n\">friends</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"o\">...</span>\n<span class=\"o\">...</span>     <span class=\"c1\"># `terramare` handles complex member variable types</span>\n<span class=\"o\">...</span>     <span class=\"n\">location</span><span class=\"p\">:</span> <span class=\"n\">Location</span>\n<span class=\"o\">...</span>     <span class=\"n\">occupation</span><span class=\"p\">:</span> <span class=\"n\">Occupation</span>\n</pre>\n<p>Again, deserialization is a single function call:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">terramare</span><span class=\"o\">.</span><span class=\"n\">deserialize_into</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">Person</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"p\">{</span>\n<span class=\"o\">...</span>         <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Alice\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s2\">\"age\"</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s2\">\"friends\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Bob\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Charlie\"</span><span class=\"p\">],</span>\n<span class=\"o\">...</span>         <span class=\"s2\">\"location\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">51.5074</span><span class=\"p\">,</span> <span class=\"mf\">0.1278</span><span class=\"p\">],</span>\n<span class=\"o\">...</span>         <span class=\"s2\">\"occupation\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"programmer\"</span><span class=\"p\">,</span> <span class=\"s2\">\"field\"</span><span class=\"p\">:</span> <span class=\"s2\">\"technology\"</span><span class=\"p\">}</span>\n<span class=\"o\">...</span>     <span class=\"p\">}</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span>\n<span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Alice'</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">friends</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Bob'</span><span class=\"p\">,</span> <span class=\"s1\">'Charlie'</span><span class=\"p\">],</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">Location</span><span class=\"p\">(</span><span class=\"n\">longitude</span><span class=\"o\">=</span><span class=\"mf\">51.5074</span><span class=\"p\">,</span> <span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"mf\">0.1278</span><span class=\"p\">),</span> <span class=\"n\">occupation</span><span class=\"o\">=</span><span class=\"n\">Occupation</span><span class=\"p\">(</span><span class=\"s1\">'programmer'</span><span class=\"p\">,</span> <span class=\"s1\">'technology'</span><span class=\"p\">))</span>\n</pre>\n<h2>Installation</h2>\n<p>Install using <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install terramare\n</pre>\n<h2>Alternatives</h2>\n<p>Check out:</p>\n<ul>\n<li><a href=\"https://pydantic-docs.helpmanual.io/\" rel=\"nofollow\"><code>pydantic</code></a> - <em>\"Data validation and settings management using python type annotations\"</em>. A much more mature library also using Python's standard type hints for deserialization that requires a little more integration with your code;</li>\n<li><a href=\"https://schematics.readthedocs.io/en/latest/\" rel=\"nofollow\"><code>schematics</code></a> - <em>\"...combine types into structures, validate them, and transform the shapes of your data based on simple descriptions\"</em>. Uses custom types instead of Python's standard type hints;</li>\n<li><a href=\"https://docs.python-cerberus.org/en/stable/\" rel=\"nofollow\"><code>cerberus</code></a> - <em>\"...provides powerful yet simple and lightweight data validation functionality out of the box and is designed to be easily extensible, allowing for custom validation\"</em>. Schema validation that doesn't change the type of the primitive value.</li>\n</ul>\n\n          </div>"}, "last_serial": 6883203, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "3125773c5dcdf6ead169357f0c4011a1", "sha256": "75acc62e3eff2cda3e179070a6b7ac1f06b8c21586ca76660712c3f17009ecb8"}, "downloads": -1, "filename": "terramare-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3125773c5dcdf6ead169357f0c4011a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<3.9", "size": 25782, "upload_time": "2020-03-15T17:36:46", "upload_time_iso_8601": "2020-03-15T17:36:46.423254Z", "url": "https://files.pythonhosted.org/packages/b0/e7/75fef4a378b5440588c76c086d20d778f0e1612ee0a1c43a56f5f2a56ec2/terramare-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "154623b014bf96377389566efbabe7c7", "sha256": "e08e68dc95623699b2b9b35b661423488ba7d35ab896f2f03de882e07c9eb221"}, "downloads": -1, "filename": "terramare-0.2.0.tar.gz", "has_sig": false, "md5_digest": "154623b014bf96377389566efbabe7c7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<3.9", "size": 18999, "upload_time": "2020-03-15T17:36:48", "upload_time_iso_8601": "2020-03-15T17:36:48.637014Z", "url": "https://files.pythonhosted.org/packages/58/e2/4ff40827d853119f1a4ef55ee4fadaef3773978dccc6528724d04666bed1/terramare-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "5c719ff142cf33a1dabcdfaf1a88353a", "sha256": "d3eaaf8dd96730c3e62cddffcec726dc216fb67a47f36f130c5ef55f18bff212"}, "downloads": -1, "filename": "terramare-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5c719ff142cf33a1dabcdfaf1a88353a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<3.9", "size": 27385, "upload_time": "2020-03-15T17:50:58", "upload_time_iso_8601": "2020-03-15T17:50:58.199016Z", "url": "https://files.pythonhosted.org/packages/eb/b4/cd8a10bb33cbdb6fdd1d07356f964f41eac5a7d5fa44067a4852438af863/terramare-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c526f0826571b1e0d1c25c44b5bcc3d4", "sha256": "40e16928de300c366ca587a8ece483a4f2057a8b8c0b78f0167e73bddca3b0a7"}, "downloads": -1, "filename": "terramare-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c526f0826571b1e0d1c25c44b5bcc3d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<3.9", "size": 20722, "upload_time": "2020-03-15T17:50:59", "upload_time_iso_8601": "2020-03-15T17:50:59.473396Z", "url": "https://files.pythonhosted.org/packages/a3/9e/7c6b3c6b8171af6c8f40e1e1b7a218e0e1fdc6a625cf08a5353be80107a4/terramare-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "f3f43cde2827a135316471fa10f614f2", "sha256": "8af82f5c9c1a2af402ff4e061caa6434c50fa3e01ebab20b33cfb4850d495cb1"}, "downloads": -1, "filename": "terramare-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f3f43cde2827a135316471fa10f614f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<3.9", "size": 38265, "upload_time": "2020-03-16T12:45:17", "upload_time_iso_8601": "2020-03-16T12:45:17.608860Z", "url": "https://files.pythonhosted.org/packages/f0/a9/efbb8a15e7db4a6f71837e8ddb5e89dad5558f06f29597af0f4e03157fbb/terramare-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea8e21db2ccbcd18c8e826bb6ab47d86", "sha256": "253f6fae294e80951665a7aeb162abba8fb2da9b0dd9fab2e45fe97be2c4c9e9"}, "downloads": -1, "filename": "terramare-0.3.1.tar.gz", "has_sig": false, "md5_digest": "ea8e21db2ccbcd18c8e826bb6ab47d86", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<3.9", "size": 32501, "upload_time": "2020-03-16T12:45:18", "upload_time_iso_8601": "2020-03-16T12:45:18.873684Z", "url": "https://files.pythonhosted.org/packages/16/ad/07d8d31a1314b6f5197bc389200a72f1a68202412afccbce6ad8d0976a64/terramare-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "1221c1193444f68481893b584c7d6bce", "sha256": "2314ec75ec0d95cc141cf8fdc38f347f3105e1173ceefac9f41e1347b97f9477"}, "downloads": -1, "filename": "terramare-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1221c1193444f68481893b584c7d6bce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 38305, "upload_time": "2020-03-16T15:10:59", "upload_time_iso_8601": "2020-03-16T15:10:59.685412Z", "url": "https://files.pythonhosted.org/packages/f4/06/f57f8ddb16fd87a0ac4c1b7a558bdd77e2a7932fce48f3743f2b535bd422/terramare-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8c1aaea52704e1acabf54b3a69d7dcb", "sha256": "bc030818a35eb9421cba95a569a6d7c7deb57e07e71e5abd117ceb82cb5fe23c"}, "downloads": -1, "filename": "terramare-0.3.2.tar.gz", "has_sig": false, "md5_digest": "a8c1aaea52704e1acabf54b3a69d7dcb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 32511, "upload_time": "2020-03-16T15:11:00", "upload_time_iso_8601": "2020-03-16T15:11:00.995415Z", "url": "https://files.pythonhosted.org/packages/04/6b/99ff2fb7730d99d5092685b3717db585eb68f4bd8ecb3966a7df1825814f/terramare-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "afda0394430ecb7cab699e332a91165a", "sha256": "0ea9130a28a796af11365a518a09172f13fb4bdfb7d213c1ac54c16831e30d5b"}, "downloads": -1, "filename": "terramare-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "afda0394430ecb7cab699e332a91165a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 38812, "upload_time": "2020-03-23T18:31:14", "upload_time_iso_8601": "2020-03-23T18:31:14.929851Z", "url": "https://files.pythonhosted.org/packages/5b/b2/7145fdc220f48b6f3153c6b14a080cd598e498c0124c87169c409ab0373e/terramare-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29d06af164259fb17ec4707dc4b3298b", "sha256": "a2214609d3e75ffdce55b3e038bb6b9d5fc09f480902ee87d46afd7779c1acc9"}, "downloads": -1, "filename": "terramare-0.3.3.tar.gz", "has_sig": false, "md5_digest": "29d06af164259fb17ec4707dc4b3298b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 33173, "upload_time": "2020-03-23T18:31:16", "upload_time_iso_8601": "2020-03-23T18:31:16.162768Z", "url": "https://files.pythonhosted.org/packages/8a/0e/67fb0c573297ccb5b7aa6bee72fd82df388c53dbb7aeb131bab4122f6945/terramare-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "8e699aa25251eaeb0766581d397687f5", "sha256": "6ccacb3f43e70720be1ef4b6bf908f0197428edb1bb8cf5f9ea9294f74e19819"}, "downloads": -1, "filename": "terramare-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8e699aa25251eaeb0766581d397687f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 39007, "upload_time": "2020-03-25T18:22:39", "upload_time_iso_8601": "2020-03-25T18:22:39.042037Z", "url": "https://files.pythonhosted.org/packages/6f/50/aa166ae22ea803e1fa3c1f3cc562dfcc2f205d3b75f5712f1f244afae65e/terramare-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c90ddfd81f67425e24932d967dc2e45", "sha256": "8317ec5d31148455c05b8fd8cc4350139b0ff3d75161a20239ea90b03aff8e07"}, "downloads": -1, "filename": "terramare-0.3.4.tar.gz", "has_sig": false, "md5_digest": "5c90ddfd81f67425e24932d967dc2e45", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 33460, "upload_time": "2020-03-25T18:22:40", "upload_time_iso_8601": "2020-03-25T18:22:40.018720Z", "url": "https://files.pythonhosted.org/packages/ba/0c/ed25fe094106983d2e355eda0e801a7dbade5942f725b4d9055110657466/terramare-0.3.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8e699aa25251eaeb0766581d397687f5", "sha256": "6ccacb3f43e70720be1ef4b6bf908f0197428edb1bb8cf5f9ea9294f74e19819"}, "downloads": -1, "filename": "terramare-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8e699aa25251eaeb0766581d397687f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 39007, "upload_time": "2020-03-25T18:22:39", "upload_time_iso_8601": "2020-03-25T18:22:39.042037Z", "url": "https://files.pythonhosted.org/packages/6f/50/aa166ae22ea803e1fa3c1f3cc562dfcc2f205d3b75f5712f1f244afae65e/terramare-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c90ddfd81f67425e24932d967dc2e45", "sha256": "8317ec5d31148455c05b8fd8cc4350139b0ff3d75161a20239ea90b03aff8e07"}, "downloads": -1, "filename": "terramare-0.3.4.tar.gz", "has_sig": false, "md5_digest": "5c90ddfd81f67425e24932d967dc2e45", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 33460, "upload_time": "2020-03-25T18:22:40", "upload_time_iso_8601": "2020-03-25T18:22:40.018720Z", "url": "https://files.pythonhosted.org/packages/ba/0c/ed25fe094106983d2e355eda0e801a7dbade5942f725b4d9055110657466/terramare-0.3.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:48 2020"}