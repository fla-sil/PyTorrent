{"info": {"author": "Hugo Costa", "author_email": "costhug@orange.fr", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# The Kor Project\nAn easy-to-use module to store data in files\n\n## Presentation \n#### Project goals \n\n- Being able to store small amount data in a new way\n- Being easy to use\n- Being intuitive\n- Being expendable\n\n#### Why use kor ?\n\n- The kor module allows for easy file manipulation with great expandability\n- You can create you own encoding method and share them to whoever you want\n- Easy to understand line-by-line concept\n\n#### Line-by-line ? Tell me more !\n\nWhen working with kor (and .kor files) your data will be stored as a line, for instance, if I would like to encode `\"My_String\"` the result in the file will be `var : name -> str -> My_String` following this pattern : `line_type : line_name -> value_type -> value` \n\n > Remember that the first line starts at 0 and not one ! The first two lines (0 & 1) are usually used to store information such as the author and the description of the file !\n\n## Installation\n\nWith pip :\n\n    pip install kor-project\n\nRun this command in your CMD \n\nIf you don't have `pip` installed check out this website by MakeUsOf\n\nhttps://www.makeuseof.com/tag/install-pip-for-python/\n\n## Quick exemple\n\nYour project directory should look like this template\n```\nproject_dir\n    |\n    |_ <your_file>.py\n    |_ <your_file>.kor\n```\n> If you decide to put the .kor file in another directory/subdir you will have to give the full path\n\n#### Opening your file\n```python\nimport kor\n\nmy_file = kor.Kor(file_path=\"./<your_file>.kor\")\n``` \n\n#### Writing comments\n\n```python\nimport kor\n\nmy_file = kor.Kor(file_path=\"./<your_file>.kor\")\n\nmy_file.encode_comment(line=4, value=\"This is a comment\")\n```\n\n#### First line type : `var`\n\nThe 'var' type is probably the one I (and maybe you) use the most, it is the short for `variable` and can store numbers, bool and string\n\n```python\nimport kor\n\nmy_file = kor.Kor(file_path=\"./<your_file>.kor\")\n\n# To make you first var you'll need to create a instance of the Var class\nmy_var = kor.Var(name=\"Var_Name\", value=\"Var_Value\", value_type=\"str\") #possible value type : 'num', 'str' & 'bool'\n\n#The add it to you file\nmy_var.encode(line=5, file=my_file, override=False) # See the documentation for more info\n\n```\n\n#### Reading the file\n```python\nimport kor\n\nmy_file = kor.Kor(file_path=\"./<your_file>.kor\")\n\n*** Do some stuff with the file... ***\n\n#Decode every lines of your file\nmy_file.decode()\n```\n\n##Documentation\n\n### Classes\n> *class* kor.Kor(file_path)\n\nRepresent your file in the code\n\n**Parameter**\n\n- `file_path` : The path to you file\n\n------------------------------------------------------------\n> *class* kor.Var(name, value, value_type)\n\nRepresent you Var-type lines in the code\n\n**Parameters**\n\n- `name` : The name of the line\n- `value` : The content of the line\n- `value_type` : Type of the value *(num, str or bool)*\n\n------------------------------------------------------------\n> *class* kor.List(name, value, value_type)\n\nRepresent you List-type lines in the code\n\n**Parameters**\n\n- `name` : The name of the line\n- `value` : The content of the line\n- `value_type` : Type of the value *(num, str or bool)*\n\n------------------------------------------------------------\n> *class* kor.CustomLines(name, value, custom_encoding, custom_value_type, custom_separator, custom_line_type)\n\nRepresent you custom line types\n\n**Parameters**\n\n- `name` : The name of the line\n- `value` : The content of the line\n- `custom_encoding` : Your custom encoding function for this custom line type\n- `custom_value_type` : Your custom value_type for this custom line type\n- `custom_separator` : Your custom separator for this custom line type *(e.g : `custom : name -> custom -> value<separator>value2`)*\n- `custom_line_type` : Your custom line type name for this custom line type\n\n### `kor.Kor()` methods\n\n> *kor.Kor.* add_author(author)\n\nAllows you to set an author for you file\n\n**Parameter**\n\n- `author` : The author of the file\n\n------------------------------------------------------------\n> *kor.Kor.* add_desc(desc)\n\nAllows you to add a description to your file\n\n**Parameter**\n\n- `desc` : The description of your file\n\n------------------------------------------------------------\n> *kor.Kor.* get_author()\n\n**Returns**\n\n- `author` ***str*** : The author of the file\n\n------------------------------------------------------------\n> *kor.Kor.* get_desc()\n\n**Returns**\n\n- `desc` ***str*** : The description of the file\n\n------------------------------------------------------------\n> *kor.Kor.* encode_comment(line, value)\n\nAllows you to add comments to your file\n\n**Parameters**\n\n- `line` : Line where your comment should be encoded\n- `value` : Content of your comment\n\n------------------------------------------------------------\n> *kor.Kor.* decode(custom_line_type:list=None, custom_decoding:list=None, custom_separator:list=None)\n\nUsed to decode your entire file\n\n**Parameters**\n*Only use when using custom line type (`kor.CustomLines`)*\n\n- `custom_line_type:list` : A list of all your custom line type\n- `custom_decoding:list` : A list of all your custom decoding functions\n- `custom_separator:list` : A list of all your custom separators\n\n------------------------------------------------------------\n> *kor.Kor.* write(content:list)\n\nAllows you to write content directly to the file (it does not process lines to encode them properly !)\n\n**Parameter**\n\n- `content:list` : A list of all the lines to write to the file\n\n------------------------------------------------------------\n> *kor.Kor.* read()\n\n**Returns**\n\n- The no-decoded lines, mainly used to see what inside the file without decoding\n\n------------------------------------------------------------\n> *kor.Kor.* delete(line, replace_blank = True)\n\nDelete a line of the file\n\n**Parameters**\n\n- `line` : The line to delete\n- `replace_blank:bool` : `True` = replace with a blank line (`\\n`), `False` = Does not replace\n\n------------------------------------------------------------\n> *kor.Kor.* reset()\n\nResets you file *(erase all data stored in it including information such as author and description)*\n\n### `kor.Var()` & `kor.List()` methods\n\n> *kor.Var.* & *kor.List.* encode(line, file, override=False)\n\nUsed to encode your line to a specific file\n\n**Parameters**\n\n- `line` : The line in the file where it should be encoded\n- `file` : The file where you line should be encoded\n- `override:bool=True` : `True` = If there is already a line existing at this line number, it deletes it and replace with the new one, `False` = It does not\n\n### `kor.CustomLines()` method\n\n> *kor.CustomLines.* encode(line, file, override=False)\n\nUsed to encode your custom line type\n\n**Parameters**\n\n- `line` : The line in the file where it should be encoded\n- `file` : The file where you line should be encoded\n- `override:bool=True` : `True` = If there is already a line existing at this line number, it deletes it and replace with the new one, `False` = It does not`\n\n## More Exemples\n\n### Custom encoding and decoding *(in a few easy steps !)*\n\n#### Step 1\n*Assuming you have already imported kor and created your instance of the Kor class...*\n\nCreate variables to store your custom assets\n\n```python\nc_line_type = []\nc_value_type = []\nc_separators = []\nc_decoding = []\n```\n\n#### Step 2 \n\nCreate function to encode and decode your object... \n\n*We're encoding `obj` in this example but this apply to every object)*\n\n```python\nclass obj:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def __repr__(self):\n        return f\"obj(name='{self.name}', age='{self.age}')\"\n\n# Custom encoding an decoding fuctions\ndef custom_encode(line_type, name, value, value_type, separator):#Those parameters will be passed when you will encode your custom line type\n\n    return f\"{line_type} : {name} -> {value_type} -> {value.name}{separator}{value.age}\"\n\ndef custom_decode(args):#This argument will be passed when you will decode your custom line type\n\n    return obj(name=args[0], age=args[1])\n```\n... and add `custom_decode()` in `c_decoding`. Don't forget the other variables too\n\n```python\nc_line_type.append(\"My_Custom_Line_Type\")\nc_value_type.append(\"My_Custom_Value_Type\")\nc_separators.append(\";\")\nc_decoding.append(custom_decode)\n```\n\n#### Step 3\nYou're done ! \n\nNow try to encode and decode with your custom line types !\n\n```python\nmy_custom_line = kor.CustomLines(name=\"My_line\",\n                                value=obj(name=\"KoraKu\", age=\"16\"),\n                                custom_encoding=custom_encode,\n                                custom_line_type=c_line_type[0],\n                                custom_separator=c_separators[0],\n                                custom_value_type=c_value_type[0])\n\nmy_custom_line.encode(line=10, file=my_file, override=True)\n\nmy_file.decode(custom_line_type=c_line_type, custom_decoding=c_decoding, custom_separator=c_separators)\n```\n\n## Links\n- PyPi page : https://pypi.org/project/kor-project/\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/KoraKu/Kor_Project", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "kor-project", "package_url": "https://pypi.org/project/kor-project/", "platform": "", "project_url": "https://pypi.org/project/kor-project/", "project_urls": {"Homepage": "https://github.com/KoraKu/Kor_Project"}, "release_url": "https://pypi.org/project/kor-project/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Use this package to work with kor files", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>The Kor Project</h1>\n<p>An easy-to-use module to store data in files</p>\n<h2>Presentation</h2>\n<h4>Project goals</h4>\n<ul>\n<li>Being able to store small amount data in a new way</li>\n<li>Being easy to use</li>\n<li>Being intuitive</li>\n<li>Being expendable</li>\n</ul>\n<h4>Why use kor ?</h4>\n<ul>\n<li>The kor module allows for easy file manipulation with great expandability</li>\n<li>You can create you own encoding method and share them to whoever you want</li>\n<li>Easy to understand line-by-line concept</li>\n</ul>\n<h4>Line-by-line ? Tell me more !</h4>\n<p>When working with kor (and .kor files) your data will be stored as a line, for instance, if I would like to encode <code>\"My_String\"</code> the result in the file will be <code>var : name -&gt; str -&gt; My_String</code> following this pattern : <code>line_type : line_name -&gt; value_type -&gt; value</code></p>\n<blockquote>\n<p>Remember that the first line starts at 0 and not one ! The first two lines (0 &amp; 1) are usually used to store information such as the author and the description of the file !</p>\n</blockquote>\n<h2>Installation</h2>\n<p>With pip :</p>\n<pre><code>pip install kor-project\n</code></pre>\n<p>Run this command in your CMD</p>\n<p>If you don't have <code>pip</code> installed check out this website by MakeUsOf</p>\n<p><a href=\"https://www.makeuseof.com/tag/install-pip-for-python/\" rel=\"nofollow\">https://www.makeuseof.com/tag/install-pip-for-python/</a></p>\n<h2>Quick exemple</h2>\n<p>Your project directory should look like this template</p>\n<pre><code>project_dir\n    |\n    |_ &lt;your_file&gt;.py\n    |_ &lt;your_file&gt;.kor\n</code></pre>\n<blockquote>\n<p>If you decide to put the .kor file in another directory/subdir you will have to give the full path</p>\n</blockquote>\n<h4>Opening your file</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">kor</span>\n\n<span class=\"n\">my_file</span> <span class=\"o\">=</span> <span class=\"n\">kor</span><span class=\"o\">.</span><span class=\"n\">Kor</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"o\">=</span><span class=\"s2\">\"./&lt;your_file&gt;.kor\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Writing comments</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">kor</span>\n\n<span class=\"n\">my_file</span> <span class=\"o\">=</span> <span class=\"n\">kor</span><span class=\"o\">.</span><span class=\"n\">Kor</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"o\">=</span><span class=\"s2\">\"./&lt;your_file&gt;.kor\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">my_file</span><span class=\"o\">.</span><span class=\"n\">encode_comment</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">\"This is a comment\"</span><span class=\"p\">)</span>\n</pre>\n<h4>First line type : <code>var</code></h4>\n<p>The 'var' type is probably the one I (and maybe you) use the most, it is the short for <code>variable</code> and can store numbers, bool and string</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">kor</span>\n\n<span class=\"n\">my_file</span> <span class=\"o\">=</span> <span class=\"n\">kor</span><span class=\"o\">.</span><span class=\"n\">Kor</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"o\">=</span><span class=\"s2\">\"./&lt;your_file&gt;.kor\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># To make you first var you'll need to create a instance of the Var class</span>\n<span class=\"n\">my_var</span> <span class=\"o\">=</span> <span class=\"n\">kor</span><span class=\"o\">.</span><span class=\"n\">Var</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Var_Name\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">\"Var_Value\"</span><span class=\"p\">,</span> <span class=\"n\">value_type</span><span class=\"o\">=</span><span class=\"s2\">\"str\"</span><span class=\"p\">)</span> <span class=\"c1\">#possible value type : 'num', 'str' &amp; 'bool'</span>\n\n<span class=\"c1\">#The add it to you file</span>\n<span class=\"n\">my_var</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"o\">=</span><span class=\"n\">my_file</span><span class=\"p\">,</span> <span class=\"n\">override</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"c1\"># See the documentation for more info</span>\n</pre>\n<h4>Reading the file</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">kor</span>\n\n<span class=\"n\">my_file</span> <span class=\"o\">=</span> <span class=\"n\">kor</span><span class=\"o\">.</span><span class=\"n\">Kor</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"o\">=</span><span class=\"s2\">\"./&lt;your_file&gt;.kor\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">***</span> <span class=\"n\">Do</span> <span class=\"n\">some</span> <span class=\"n\">stuff</span> <span class=\"k\">with</span> <span class=\"n\">the</span> <span class=\"n\">file</span><span class=\"o\">...</span> <span class=\"o\">***</span>\n\n<span class=\"c1\">#Decode every lines of your file</span>\n<span class=\"n\">my_file</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">()</span>\n</pre>\n<p>##Documentation</p>\n<h3>Classes</h3>\n<blockquote>\n<p><em>class</em> kor.Kor(file_path)</p>\n</blockquote>\n<p>Represent your file in the code</p>\n<p><strong>Parameter</strong></p>\n<ul>\n<li><code>file_path</code> : The path to you file</li>\n</ul>\n<hr>\n<blockquote>\n<p><em>class</em> kor.Var(name, value, value_type)</p>\n</blockquote>\n<p>Represent you Var-type lines in the code</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><code>name</code> : The name of the line</li>\n<li><code>value</code> : The content of the line</li>\n<li><code>value_type</code> : Type of the value <em>(num, str or bool)</em></li>\n</ul>\n<hr>\n<blockquote>\n<p><em>class</em> kor.List(name, value, value_type)</p>\n</blockquote>\n<p>Represent you List-type lines in the code</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><code>name</code> : The name of the line</li>\n<li><code>value</code> : The content of the line</li>\n<li><code>value_type</code> : Type of the value <em>(num, str or bool)</em></li>\n</ul>\n<hr>\n<blockquote>\n<p><em>class</em> kor.CustomLines(name, value, custom_encoding, custom_value_type, custom_separator, custom_line_type)</p>\n</blockquote>\n<p>Represent you custom line types</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><code>name</code> : The name of the line</li>\n<li><code>value</code> : The content of the line</li>\n<li><code>custom_encoding</code> : Your custom encoding function for this custom line type</li>\n<li><code>custom_value_type</code> : Your custom value_type for this custom line type</li>\n<li><code>custom_separator</code> : Your custom separator for this custom line type <em>(e.g : <code>custom : name -&gt; custom -&gt; value&lt;separator&gt;value2</code>)</em></li>\n<li><code>custom_line_type</code> : Your custom line type name for this custom line type</li>\n</ul>\n<h3><code>kor.Kor()</code> methods</h3>\n<blockquote>\n<p><em>kor.Kor.</em> add_author(author)</p>\n</blockquote>\n<p>Allows you to set an author for you file</p>\n<p><strong>Parameter</strong></p>\n<ul>\n<li><code>author</code> : The author of the file</li>\n</ul>\n<hr>\n<blockquote>\n<p><em>kor.Kor.</em> add_desc(desc)</p>\n</blockquote>\n<p>Allows you to add a description to your file</p>\n<p><strong>Parameter</strong></p>\n<ul>\n<li><code>desc</code> : The description of your file</li>\n</ul>\n<hr>\n<blockquote>\n<p><em>kor.Kor.</em> get_author()</p>\n</blockquote>\n<p><strong>Returns</strong></p>\n<ul>\n<li><code>author</code> <em><strong>str</strong></em> : The author of the file</li>\n</ul>\n<hr>\n<blockquote>\n<p><em>kor.Kor.</em> get_desc()</p>\n</blockquote>\n<p><strong>Returns</strong></p>\n<ul>\n<li><code>desc</code> <em><strong>str</strong></em> : The description of the file</li>\n</ul>\n<hr>\n<blockquote>\n<p><em>kor.Kor.</em> encode_comment(line, value)</p>\n</blockquote>\n<p>Allows you to add comments to your file</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><code>line</code> : Line where your comment should be encoded</li>\n<li><code>value</code> : Content of your comment</li>\n</ul>\n<hr>\n<blockquote>\n<p><em>kor.Kor.</em> decode(custom_line_type:list=None, custom_decoding:list=None, custom_separator:list=None)</p>\n</blockquote>\n<p>Used to decode your entire file</p>\n<p><strong>Parameters</strong>\n<em>Only use when using custom line type (<code>kor.CustomLines</code>)</em></p>\n<ul>\n<li><code>custom_line_type:list</code> : A list of all your custom line type</li>\n<li><code>custom_decoding:list</code> : A list of all your custom decoding functions</li>\n<li><code>custom_separator:list</code> : A list of all your custom separators</li>\n</ul>\n<hr>\n<blockquote>\n<p><em>kor.Kor.</em> write(content:list)</p>\n</blockquote>\n<p>Allows you to write content directly to the file (it does not process lines to encode them properly !)</p>\n<p><strong>Parameter</strong></p>\n<ul>\n<li><code>content:list</code> : A list of all the lines to write to the file</li>\n</ul>\n<hr>\n<blockquote>\n<p><em>kor.Kor.</em> read()</p>\n</blockquote>\n<p><strong>Returns</strong></p>\n<ul>\n<li>The no-decoded lines, mainly used to see what inside the file without decoding</li>\n</ul>\n<hr>\n<blockquote>\n<p><em>kor.Kor.</em> delete(line, replace_blank = True)</p>\n</blockquote>\n<p>Delete a line of the file</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><code>line</code> : The line to delete</li>\n<li><code>replace_blank:bool</code> : <code>True</code> = replace with a blank line (<code>\\n</code>), <code>False</code> = Does not replace</li>\n</ul>\n<hr>\n<blockquote>\n<p><em>kor.Kor.</em> reset()</p>\n</blockquote>\n<p>Resets you file <em>(erase all data stored in it including information such as author and description)</em></p>\n<h3><code>kor.Var()</code> &amp; <code>kor.List()</code> methods</h3>\n<blockquote>\n<p><em>kor.Var.</em> &amp; <em>kor.List.</em> encode(line, file, override=False)</p>\n</blockquote>\n<p>Used to encode your line to a specific file</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><code>line</code> : The line in the file where it should be encoded</li>\n<li><code>file</code> : The file where you line should be encoded</li>\n<li><code>override:bool=True</code> : <code>True</code> = If there is already a line existing at this line number, it deletes it and replace with the new one, <code>False</code> = It does not</li>\n</ul>\n<h3><code>kor.CustomLines()</code> method</h3>\n<blockquote>\n<p><em>kor.CustomLines.</em> encode(line, file, override=False)</p>\n</blockquote>\n<p>Used to encode your custom line type</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><code>line</code> : The line in the file where it should be encoded</li>\n<li><code>file</code> : The file where you line should be encoded</li>\n<li><code>override:bool=True</code> : <code>True</code> = If there is already a line existing at this line number, it deletes it and replace with the new one, <code>False</code> = It does not`</li>\n</ul>\n<h2>More Exemples</h2>\n<h3>Custom encoding and decoding <em>(in a few easy steps !)</em></h3>\n<h4>Step 1</h4>\n<p><em>Assuming you have already imported kor and created your instance of the Kor class...</em></p>\n<p>Create variables to store your custom assets</p>\n<pre><span class=\"n\">c_line_type</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">c_value_type</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">c_separators</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">c_decoding</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n</pre>\n<h4>Step 2</h4>\n<p>Create function to encode and decode your object...</p>\n<p><em>We're encoding <code>obj</code> in this example but this apply to every object)</em></p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">obj</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">age</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">\"obj(name='</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">', age='</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"si\">}</span><span class=\"s2\">')\"</span>\n\n<span class=\"c1\"># Custom encoding an decoding fuctions</span>\n<span class=\"k\">def</span> <span class=\"nf\">custom_encode</span><span class=\"p\">(</span><span class=\"n\">line_type</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">value_type</span><span class=\"p\">,</span> <span class=\"n\">separator</span><span class=\"p\">):</span><span class=\"c1\">#Those parameters will be passed when you will encode your custom line type</span>\n\n    <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">line_type</span><span class=\"si\">}</span><span class=\"s2\"> : </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> -&gt; </span><span class=\"si\">{</span><span class=\"n\">value_type</span><span class=\"si\">}</span><span class=\"s2\"> -&gt; </span><span class=\"si\">{</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}{</span><span class=\"n\">separator</span><span class=\"si\">}{</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">custom_decode</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span><span class=\"c1\">#This argument will be passed when you will decode your custom line type</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">obj</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n</pre>\n<p>... and add <code>custom_decode()</code> in <code>c_decoding</code>. Don't forget the other variables too</p>\n<pre><span class=\"n\">c_line_type</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">\"My_Custom_Line_Type\"</span><span class=\"p\">)</span>\n<span class=\"n\">c_value_type</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">\"My_Custom_Value_Type\"</span><span class=\"p\">)</span>\n<span class=\"n\">c_separators</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">\";\"</span><span class=\"p\">)</span>\n<span class=\"n\">c_decoding</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">custom_decode</span><span class=\"p\">)</span>\n</pre>\n<h4>Step 3</h4>\n<p>You're done !</p>\n<p>Now try to encode and decode with your custom line types !</p>\n<pre><span class=\"n\">my_custom_line</span> <span class=\"o\">=</span> <span class=\"n\">kor</span><span class=\"o\">.</span><span class=\"n\">CustomLines</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"My_line\"</span><span class=\"p\">,</span>\n                                <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">obj</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"KoraKu\"</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"s2\">\"16\"</span><span class=\"p\">),</span>\n                                <span class=\"n\">custom_encoding</span><span class=\"o\">=</span><span class=\"n\">custom_encode</span><span class=\"p\">,</span>\n                                <span class=\"n\">custom_line_type</span><span class=\"o\">=</span><span class=\"n\">c_line_type</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n                                <span class=\"n\">custom_separator</span><span class=\"o\">=</span><span class=\"n\">c_separators</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n                                <span class=\"n\">custom_value_type</span><span class=\"o\">=</span><span class=\"n\">c_value_type</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"n\">my_custom_line</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"o\">=</span><span class=\"n\">my_file</span><span class=\"p\">,</span> <span class=\"n\">override</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">my_file</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">custom_line_type</span><span class=\"o\">=</span><span class=\"n\">c_line_type</span><span class=\"p\">,</span> <span class=\"n\">custom_decoding</span><span class=\"o\">=</span><span class=\"n\">c_decoding</span><span class=\"p\">,</span> <span class=\"n\">custom_separator</span><span class=\"o\">=</span><span class=\"n\">c_separators</span><span class=\"p\">)</span>\n</pre>\n<h2>Links</h2>\n<ul>\n<li>PyPi page : <a href=\"https://pypi.org/project/kor-project/\" rel=\"nofollow\">https://pypi.org/project/kor-project/</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6095919, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "237b5480871b1c2fc811a82ea37f4c5e", "sha256": "5ceb902b1a02baff64c9a8d96d9f8c3a2733c99a3a0624ef2fd6ccb9cb034fb7"}, "downloads": -1, "filename": "kor_project-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "237b5480871b1c2fc811a82ea37f4c5e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6711, "upload_time": "2019-11-03T09:51:16", "upload_time_iso_8601": "2019-11-03T09:51:16.155408Z", "url": "https://files.pythonhosted.org/packages/90/3c/69f0010af6b7955ab58eebcf7c3a04acd0afef289178c5240fae46e88e37/kor_project-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31c7f72d886f02464bcce6590e6f9f7f", "sha256": "65c2f0befb09327e91df937f26fe4241d7fd592259273d1dd708b1e17ad1e8f3"}, "downloads": -1, "filename": "kor_project-0.0.1.tar.gz", "has_sig": false, "md5_digest": "31c7f72d886f02464bcce6590e6f9f7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5993, "upload_time": "2019-11-03T09:51:19", "upload_time_iso_8601": "2019-11-03T09:51:19.293355Z", "url": "https://files.pythonhosted.org/packages/e6/41/e7d49eda119b9f1061ede2769aa7da040fdc7a85d32c649a05ac43b5b8f3/kor_project-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a045b0197f725d20a266b8cd8646023b", "sha256": "58f8b2cb76771c0797052a9c2dbdbeafd02c417c9ca391f6c3b0325302ef8574"}, "downloads": -1, "filename": "kor_project-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a045b0197f725d20a266b8cd8646023b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6732, "upload_time": "2019-11-03T10:17:43", "upload_time_iso_8601": "2019-11-03T10:17:43.687380Z", "url": "https://files.pythonhosted.org/packages/41/82/0784a99614779da4f24876db3d4f67c6361d0bcf774bad69fb33b656a421/kor_project-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ea550b2fb068f44f5314bf5febe397b", "sha256": "a9662447e986046d2573d5404138f1d0dbe06cd0f2e64b6fecae40802cb4b7f6"}, "downloads": -1, "filename": "kor_project-0.0.2.tar.gz", "has_sig": false, "md5_digest": "7ea550b2fb068f44f5314bf5febe397b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6675, "upload_time": "2019-11-03T10:17:46", "upload_time_iso_8601": "2019-11-03T10:17:46.729414Z", "url": "https://files.pythonhosted.org/packages/83/44/af5ffd7a1d4d6f34744cecf070c6b291100389f4593e8f31d02efa7a27b9/kor_project-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "ddcc58b00a3110535e46cdbbeeae3039", "sha256": "084aae9110386b6e6694fd93879e77b9d65d05f29d528658e00be7823e14aee8"}, "downloads": -1, "filename": "kor_project-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ddcc58b00a3110535e46cdbbeeae3039", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6891, "upload_time": "2019-11-03T21:15:34", "upload_time_iso_8601": "2019-11-03T21:15:34.455732Z", "url": "https://files.pythonhosted.org/packages/e5/7a/f6739380d84ef902ac12f03838ff82b5ccbafba0ed03e598f6ffab161971/kor_project-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70af622d9c6532081af09d929411e936", "sha256": "d79b835fc91fc85ddf3623b8330ca25c9fd71a9321987cd04724ac63b1ff188c"}, "downloads": -1, "filename": "kor_project-0.1.0.tar.gz", "has_sig": false, "md5_digest": "70af622d9c6532081af09d929411e936", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6870, "upload_time": "2019-11-03T21:15:37", "upload_time_iso_8601": "2019-11-03T21:15:37.322091Z", "url": "https://files.pythonhosted.org/packages/47/35/2def5a7f6107a10af6c684f4f4a88aa057d30bb3eb5528096ae6af656f44/kor_project-0.1.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ee4a3abd6f5568e7e5fa8249660f1bdd", "sha256": "98186f33ac2d5427b2195542b8e78773c8e1223a5ddd7cd50a0772b88a7c9ed4"}, "downloads": -1, "filename": "kor_project-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ee4a3abd6f5568e7e5fa8249660f1bdd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9489, "upload_time": "2019-11-07T21:31:21", "upload_time_iso_8601": "2019-11-07T21:31:21.284610Z", "url": "https://files.pythonhosted.org/packages/6a/59/8087269b39e962329db0b901ca860c969371bb760991ea6d9442730f1926/kor_project-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b99d7f3faafd1e6f1f9b27dec046528b", "sha256": "9dd9e82814cf50e49579681e2421dbb07b1f2736d12ca2d45be26b7076b444fb"}, "downloads": -1, "filename": "kor_project-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b99d7f3faafd1e6f1f9b27dec046528b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10001, "upload_time": "2019-11-07T21:31:23", "upload_time_iso_8601": "2019-11-07T21:31:23.461630Z", "url": "https://files.pythonhosted.org/packages/27/de/4c357824fc9afe187cee63f069c8b87ed75e6f74549483f20dd327824686/kor_project-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ee4a3abd6f5568e7e5fa8249660f1bdd", "sha256": "98186f33ac2d5427b2195542b8e78773c8e1223a5ddd7cd50a0772b88a7c9ed4"}, "downloads": -1, "filename": "kor_project-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ee4a3abd6f5568e7e5fa8249660f1bdd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9489, "upload_time": "2019-11-07T21:31:21", "upload_time_iso_8601": "2019-11-07T21:31:21.284610Z", "url": "https://files.pythonhosted.org/packages/6a/59/8087269b39e962329db0b901ca860c969371bb760991ea6d9442730f1926/kor_project-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b99d7f3faafd1e6f1f9b27dec046528b", "sha256": "9dd9e82814cf50e49579681e2421dbb07b1f2736d12ca2d45be26b7076b444fb"}, "downloads": -1, "filename": "kor_project-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b99d7f3faafd1e6f1f9b27dec046528b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10001, "upload_time": "2019-11-07T21:31:23", "upload_time_iso_8601": "2019-11-07T21:31:23.461630Z", "url": "https://files.pythonhosted.org/packages/27/de/4c357824fc9afe187cee63f069c8b87ed75e6f74549483f20dd327824686/kor_project-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:57 2020"}