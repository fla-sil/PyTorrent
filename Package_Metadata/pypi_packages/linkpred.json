{"info": {"author": "Raf Guns", "author_email": "raf.guns@uantwerpen.be", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "linkpred\n========\n\n**linkpred** is a Python package for link prediction: given a network, **linkpred** provides a number of heuristics (known as *predictors*) that assess the likelihood of potential links in a future snapshot of the network.\n\nWhile some predictors are fairly straightforward (e.g., if two people have a large number of mutual friends, it seems likely that eventually they will meet and become friends), others are more involved.\n\n\n.. image:: https://travis-ci.org/rafguns/linkpred.svg?branch=master\n    :target: https://travis-ci.org/rafguns/linkpred\n\n.. image:: https://coveralls.io/repos/rafguns/linkpred/badge.svg?branch=master\n    :target: https://coveralls.io/r/rafguns/linkpred?branch=master\n\n\n**linkpred** can both be used as a command-line tool and as a Python library in your own code.\n\n\nInstallation\n------------\n\n**linkpred** (v0.5 and later) works under Python 3.6, 3.7, and 3.8. Version 0.4.1 was the last to support versions 3.4 and 3.5.\nIt depends on:\n\n- matplotlib\n- networkx\n- numpy\n- pyyaml\n- scipy\n- smokesignal\n\nYou should be able to install linkpred and its dependencies using pip (``pip install linkpred`` or ``python -m pip install linkpred``). If you do not yet have Python installed, I recommend starting with `Anaconda <https://www.continuum.io/downloads>`_, which includes optimized versions of packages like numpy. If you want to use the Community predictor, which relies on community structure of the network, make sure you also have the `python-louvain <https://github.com/taynaud/python-louvain>`_ package by installing with ``pip install linkpred[all]``.\n\n\nExample usage as command-line tool\n----------------------------------\n\nA good starting point is ``linkpred --help``, which lists all the available options. To save the predictions of the ``CommonNeighbours`` predictor, for instance, run::\n\n    $ linkpred examples/inf1990-2004.net -p CommonNeighbours --output cache-predictions\n\nwhere ``examples/inf1990-2004.net`` is a network file in Pajek format. Other supported formats include GML and GraphML. The full output looks like this:\n\n.. code:: console\n\n    $ linkpred examples/inf1990-2004.net -p CommonNeighbours --output cache-predictions\n    16:43:13 - INFO - Reading file 'examples/inf1990-2004.net'...\n    16:43:13 - INFO - Successfully read file.\n    16:43:13 - INFO - Starting preprocessing...\n    16:43:13 - INFO - Removed 35 nodes (degree < 1)\n    16:43:13 - INFO - Finished preprocessing.\n    16:43:13 - INFO - Executing CommonNeighbours...\n    16:43:14 - INFO - Finished executing CommonNeighbours.\n    16:43:14 - INFO - Prediction run finished\n\n    $ head examples/inf1990-2004-CommonNeighbours-predictions_2016-04-22_16.43.txt\n    \"Ikogami, K\"    \"Ikegami, K\"    5.0\n    \"Durand, T\"     \"Abd El Kader, M\"       5.0\n    \"Sharma, L\"     \"Kumar, S\"      4.0\n    \"Paul, A\"       \"Durand, T\"     4.0\n    \"Paul, A\"       \"Dudognon, G\"   4.0\n    \"Paul, A\"       \"Abd El Kader, M\"       4.0\n    \"Karisiddippa, CR\"      \"Garg, KC\"      4.0\n    \"Wu, YS\"        \"Kretschmer, H\" 3.0\n    \"Veugelers, R\"  \"Deleus, F\"     3.0\n    \"Veugelers, R\"  \"Andries, P\"    3.0\n\n\nExample usage within Python\n---------------------------\n\n.. code:: pycon\n\n    >>> import linkpred\n    >>> G = linkpred.read_network(\"examples/training.net\")\n    11:49:00 - INFO - Reading file 'examples/training.net'...\n    11:49:00 - INFO - Successfully read file.\n    >>> len(G)   # number of nodes\n    632\n    >>> # We exclude edges already present, to predict only new links\n    >>> simrank = linkpred.predictors.SimRank(G, excluded=G.edges())\n    >>> simrank_results = simrank.predict(c=0.5)\n    >>> top = simrank_results.top(5)\n    >>> for authors, score in top.items():\n    ...    print(authors, score)\n    ...\n    Tomizawa, H - Fujigaki, Y 0.188686630053\n    Shirabe, M - Hayashi, T 0.143866427916\n    Garfield, E - Fuseler, EA 0.148097050146\n    Persson, O - Larsen, IM 0.138516589957\n    Vanleeuwen, TN - Noyons, ECM 0.185040358711", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/rafguns/linkpred/", "keywords": "", "license": "New BSD License", "maintainer": "", "maintainer_email": "", "name": "linkpred", "package_url": "https://pypi.org/project/linkpred/", "platform": "any", "project_url": "https://pypi.org/project/linkpred/", "project_urls": {"Homepage": "http://github.com/rafguns/linkpred/"}, "release_url": "https://pypi.org/project/linkpred/0.5.1/", "requires_dist": null, "requires_python": "", "summary": "Python package for link prediction", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>linkpred</strong> is a Python package for link prediction: given a network, <strong>linkpred</strong> provides a number of heuristics (known as <em>predictors</em>) that assess the likelihood of potential links in a future snapshot of the network.</p>\n<p>While some predictors are fairly straightforward (e.g., if two people have a large number of mutual friends, it seems likely that eventually they will meet and become friends), others are more involved.</p>\n<a href=\"https://travis-ci.org/rafguns/linkpred\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/rafguns/linkpred.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43d8586f2305d59d2982b81d18f3a267cdfa2fd6/68747470733a2f2f7472617669732d63692e6f72672f72616667756e732f6c696e6b707265642e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/rafguns/linkpred?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/rafguns/linkpred/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72cf461af23da540d54355a0f122651bc6e41525/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f72616667756e732f6c696e6b707265642f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p><strong>linkpred</strong> can both be used as a command-line tool and as a Python library in your own code.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><strong>linkpred</strong> (v0.5 and later) works under Python 3.6, 3.7, and 3.8. Version 0.4.1 was the last to support versions 3.4 and 3.5.\nIt depends on:</p>\n<ul>\n<li>matplotlib</li>\n<li>networkx</li>\n<li>numpy</li>\n<li>pyyaml</li>\n<li>scipy</li>\n<li>smokesignal</li>\n</ul>\n<p>You should be able to install linkpred and its dependencies using pip (<tt>pip install linkpred</tt> or <tt>python <span class=\"pre\">-m</span> pip install linkpred</tt>). If you do not yet have Python installed, I recommend starting with <a href=\"https://www.continuum.io/downloads\" rel=\"nofollow\">Anaconda</a>, which includes optimized versions of packages like numpy. If you want to use the Community predictor, which relies on community structure of the network, make sure you also have the <a href=\"https://github.com/taynaud/python-louvain\" rel=\"nofollow\">python-louvain</a> package by installing with <tt>pip install linkpred[all]</tt>.</p>\n</div>\n<div id=\"example-usage-as-command-line-tool\">\n<h2>Example usage as command-line tool</h2>\n<p>A good starting point is <tt>linkpred <span class=\"pre\">--help</span></tt>, which lists all the available options. To save the predictions of the <tt>CommonNeighbours</tt> predictor, for instance, run:</p>\n<pre>$ linkpred examples/inf1990-2004.net -p CommonNeighbours --output cache-predictions\n</pre>\n<p>where <tt><span class=\"pre\">examples/inf1990-2004.net</span></tt> is a network file in Pajek format. Other supported formats include GML and GraphML. The full output looks like this:</p>\n<pre><span class=\"gp\">$</span> linkpred examples/inf1990-2004.net -p CommonNeighbours --output cache-predictions\n<span class=\"go\">16:43:13 - INFO - Reading file 'examples/inf1990-2004.net'...\n16:43:13 - INFO - Successfully read file.\n16:43:13 - INFO - Starting preprocessing...\n16:43:13 - INFO - Removed 35 nodes (degree &lt; 1)\n16:43:13 - INFO - Finished preprocessing.\n16:43:13 - INFO - Executing CommonNeighbours...\n16:43:14 - INFO - Finished executing CommonNeighbours.\n16:43:14 - INFO - Prediction run finished\n\n</span><span class=\"gp\">$</span> head examples/inf1990-2004-CommonNeighbours-predictions_2016-04-22_16.43.txt\n<span class=\"go\">\"Ikogami, K\"    \"Ikegami, K\"    5.0\n\"Durand, T\"     \"Abd El Kader, M\"       5.0\n\"Sharma, L\"     \"Kumar, S\"      4.0\n\"Paul, A\"       \"Durand, T\"     4.0\n\"Paul, A\"       \"Dudognon, G\"   4.0\n\"Paul, A\"       \"Abd El Kader, M\"       4.0\n\"Karisiddippa, CR\"      \"Garg, KC\"      4.0\n\"Wu, YS\"        \"Kretschmer, H\" 3.0\n\"Veugelers, R\"  \"Deleus, F\"     3.0\n\"Veugelers, R\"  \"Andries, P\"    3.0</span>\n</pre>\n</div>\n<div id=\"example-usage-within-python\">\n<h2>Example usage within Python</h2>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">linkpred</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">linkpred</span><span class=\"o\">.</span><span class=\"n\">read_network</span><span class=\"p\">(</span><span class=\"s2\">\"examples/training.net\"</span><span class=\"p\">)</span>\n<span class=\"go\">11:49:00 - INFO - Reading file 'examples/training.net'...\n11:49:00 - INFO - Successfully read file.\n</span><span class=\"nb\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">)</span>   <span class=\"c1\"># number of nodes</span>\n<span class=\"go\">632\n</span><span class=\"c1\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># We exclude edges already present, to predict only new links</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">simrank</span> <span class=\"o\">=</span> <span class=\"n\">linkpred</span><span class=\"o\">.</span><span class=\"n\">predictors</span><span class=\"o\">.</span><span class=\"n\">SimRank</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"n\">excluded</span><span class=\"o\">=</span><span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">simrank_results</span> <span class=\"o\">=</span> <span class=\"n\">simrank</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">top</span> <span class=\"o\">=</span> <span class=\"n\">simrank_results</span><span class=\"o\">.</span><span class=\"n\">top</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">authors</span><span class=\"p\">,</span> <span class=\"n\">score</span> <span class=\"ow\">in</span> <span class=\"n\">top</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n<span class=\"gp\">... </span>   <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">authors</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">Tomizawa, H - Fujigaki, Y 0.188686630053\nShirabe, M - Hayashi, T 0.143866427916\nGarfield, E - Fuseler, EA 0.148097050146\nPersson, O - Larsen, IM 0.138516589957\nVanleeuwen, TN - Noyons, ECM 0.185040358711</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7062591, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "eb8c439521773287a21ac5e29dabc376", "sha256": "83e25bfa5d851a801a33a77ceaf2fe5cad67bd8d65f07483ff4a3fd49607652d"}, "downloads": -1, "filename": "linkpred-0.1.zip", "has_sig": false, "md5_digest": "eb8c439521773287a21ac5e29dabc376", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31710, "upload_time": "2016-04-22T14:26:49", "upload_time_iso_8601": "2016-04-22T14:26:49.710836Z", "url": "https://files.pythonhosted.org/packages/49/a1/ffaf0edaae8b7c2d474e44a37f7c1b69cf462d6eef33199bb8e8f0bbff4f/linkpred-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "4d7f0660117b295b383f3b544e53bc90", "sha256": "a2cf9fdc3e7cb888a43ec69b2fda1578934e1aaa739af29befd0b866ae1bbbae"}, "downloads": -1, "filename": "linkpred-0.2.tar.gz", "has_sig": false, "md5_digest": "4d7f0660117b295b383f3b544e53bc90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22564, "upload_time": "2018-02-06T10:44:56", "upload_time_iso_8601": "2018-02-06T10:44:56.880078Z", "url": "https://files.pythonhosted.org/packages/36/4b/9cd8ca63592ac4c8a917a6044f57c6073a0303b794aebcecca360ef24cb7/linkpred-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "6fe9ea9fed0bb283fd4e8cd2d3dcd76f", "sha256": "823f2ae49104f4d5710d630775b74dc5913439f392a8d4f21bad7093e57bbe8d"}, "downloads": -1, "filename": "linkpred-0.3.tar.gz", "has_sig": false, "md5_digest": "6fe9ea9fed0bb283fd4e8cd2d3dcd76f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22660, "upload_time": "2018-05-17T07:37:00", "upload_time_iso_8601": "2018-05-17T07:37:00.894831Z", "url": "https://files.pythonhosted.org/packages/e3/11/524b75a236ee15df5b51e7604ee05ee7f40a8316f55e2013f8d16d951bdf/linkpred-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "8464ccbc59176d5e968c454ceb5292c0", "sha256": "f31aec6bf8b659cc5acd5a3f1577c0c884b7d9ba15bbaf75d01b451d9ab5a646"}, "downloads": -1, "filename": "linkpred-0.4.tar.gz", "has_sig": false, "md5_digest": "8464ccbc59176d5e968c454ceb5292c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22090, "upload_time": "2019-02-05T15:35:46", "upload_time_iso_8601": "2019-02-05T15:35:46.891882Z", "url": "https://files.pythonhosted.org/packages/4c/d1/9252ce8c0df7354e835aacf905e1f86a42c9ec6cfee3570e92cfd38a5484/linkpred-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "b120b683b235dadc0fbd808840a52166", "sha256": "4e31edd7f16b0dc634f8fc0d42f542c41cb896b504cc731cc6fccdb7d1bf4650"}, "downloads": -1, "filename": "linkpred-0.4.1.tar.gz", "has_sig": false, "md5_digest": "b120b683b235dadc0fbd808840a52166", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23365, "upload_time": "2019-02-05T19:27:40", "upload_time_iso_8601": "2019-02-05T19:27:40.792539Z", "url": "https://files.pythonhosted.org/packages/7b/94/512e63ae78432e5e24eed8095eb9009978666da36754e0f48cd1533414ce/linkpred-0.4.1.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "8d638d0a505b36797618b539035f5139", "sha256": "4a1910eb781c03ecaaf94ecc46b937ae2f5ff99a6a26b49fad4caa2428602ded"}, "downloads": -1, "filename": "linkpred-0.5.1.tar.gz", "has_sig": false, "md5_digest": "8d638d0a505b36797618b539035f5139", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23619, "upload_time": "2020-04-20T20:05:20", "upload_time_iso_8601": "2020-04-20T20:05:20.518721Z", "url": "https://files.pythonhosted.org/packages/a6/6b/bcf5e197b7b0750b41159e06b364b5f4b302f4f16479811e01fdb2c658f8/linkpred-0.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8d638d0a505b36797618b539035f5139", "sha256": "4a1910eb781c03ecaaf94ecc46b937ae2f5ff99a6a26b49fad4caa2428602ded"}, "downloads": -1, "filename": "linkpred-0.5.1.tar.gz", "has_sig": false, "md5_digest": "8d638d0a505b36797618b539035f5139", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23619, "upload_time": "2020-04-20T20:05:20", "upload_time_iso_8601": "2020-04-20T20:05:20.518721Z", "url": "https://files.pythonhosted.org/packages/a6/6b/bcf5e197b7b0750b41159e06b364b5f4b302f4f16479811e01fdb2c658f8/linkpred-0.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:36 2020"}