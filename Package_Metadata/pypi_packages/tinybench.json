{"info": {"author": "AD Ventures", "author_email": "abir.dahlin.ventures@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Tinybench [![Build Status](https://travis-ci.com/mickyabir/tinybench.svg?token=WNzddxisBbCMp5mPWrna&branch=master)](https://travis-ci.com/mickyabir/tinybench)\n\nTinybench is a lightweight package to time, compare, and visualize various functions.  This package was inspired by the R package [microbenchmark](https://cran.r-project.org/web/packages/microbenchmark/index.html)\n\n## Installation\n\n```bash\npip install tinybench\n```\n\n## Usage\n\n```python\nfrom tinybench import benchmark, benchmark_env\n\n# create two functions example functions to test\ndef foo(a):\n\ttest = []\n\tfor i in range(a):\n\t\ttest.append(i)\n\treturn test\n\ndef bar(a, b):\n\treturn a + b\n\n# example input variable\nc = 10000\n\niterations = 100\nwarmup = 10\n\n# env should be globals(), or use benchmark_env(functions_list)\n# functions_list should at least contain all the functions to benchmark\nenv = benchmark_env([foo, bar])\n\n# instead, using globals() is recommended\nenv = globals()\n\nb = benchmark(['Foo_Label:foo(c)', 'bar(10, 15)'], iterations, warmup, env)\nprint(b)\nb.plot()\n\n# alternatively, we can benchmark using the process time instead of real time:\nb_process = benchmark(['Foo_Label:foo(c)', 'bar(10, 15)'], iterations, warmup, env, process_time = True)\n\n```\n\n## Support\n\nFor any help or questions, please open an issue on GitHub.\n\n## License\n\n[MIT](https://github.com/mickyabir/tinybench/blob/master/LICENSE)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AD-Ventures/tinybench", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tinybench", "package_url": "https://pypi.org/project/tinybench/", "platform": "", "project_url": "https://pypi.org/project/tinybench/", "project_urls": {"Homepage": "https://github.com/AD-Ventures/tinybench"}, "release_url": "https://pypi.org/project/tinybench/1.0.2/", "requires_dist": ["matplotlib"], "requires_python": ">=3.3", "summary": "A microbenchmark for Python", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Tinybench <a href=\"https://travis-ci.com/mickyabir/tinybench\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69d56864904613aec648ba069450499accaa85a8/68747470733a2f2f7472617669732d63692e636f6d2f6d69636b79616269722f74696e7962656e63682e7376673f746f6b656e3d574e7a64647869734262434d70356d5057726e61266272616e63683d6d6173746572\"></a></h1>\n<p>Tinybench is a lightweight package to time, compare, and visualize various functions.  This package was inspired by the R package <a href=\"https://cran.r-project.org/web/packages/microbenchmark/index.html\" rel=\"nofollow\">microbenchmark</a></p>\n<h2>Installation</h2>\n<pre>pip install tinybench\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tinybench</span> <span class=\"kn\">import</span> <span class=\"n\">benchmark</span><span class=\"p\">,</span> <span class=\"n\">benchmark_env</span>\n\n<span class=\"c1\"># create two functions example functions to test</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span>\n\t<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\t<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span>\n\t\t<span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n\t<span class=\"k\">return</span> <span class=\"n\">test</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n\t<span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n<span class=\"c1\"># example input variable</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"mi\">10000</span>\n\n<span class=\"n\">iterations</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n<span class=\"n\">warmup</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n\n<span class=\"c1\"># env should be globals(), or use benchmark_env(functions_list)</span>\n<span class=\"c1\"># functions_list should at least contain all the functions to benchmark</span>\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">benchmark_env</span><span class=\"p\">([</span><span class=\"n\">foo</span><span class=\"p\">,</span> <span class=\"n\">bar</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># instead, using globals() is recommended</span>\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"nb\">globals</span><span class=\"p\">()</span>\n\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">benchmark</span><span class=\"p\">([</span><span class=\"s1\">'Foo_Label:foo(c)'</span><span class=\"p\">,</span> <span class=\"s1\">'bar(10, 15)'</span><span class=\"p\">],</span> <span class=\"n\">iterations</span><span class=\"p\">,</span> <span class=\"n\">warmup</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># alternatively, we can benchmark using the process time instead of real time:</span>\n<span class=\"n\">b_process</span> <span class=\"o\">=</span> <span class=\"n\">benchmark</span><span class=\"p\">([</span><span class=\"s1\">'Foo_Label:foo(c)'</span><span class=\"p\">,</span> <span class=\"s1\">'bar(10, 15)'</span><span class=\"p\">],</span> <span class=\"n\">iterations</span><span class=\"p\">,</span> <span class=\"n\">warmup</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">process_time</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h2>Support</h2>\n<p>For any help or questions, please open an issue on GitHub.</p>\n<h2>License</h2>\n<p><a href=\"https://github.com/mickyabir/tinybench/blob/master/LICENSE\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 7154641, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "ef252023d83c3cba3f766ed40c96e4e2", "sha256": "e0dce508d5c7c783982a9a80bcb97a98fc05add1bf15862dfc935a74ede83ac8"}, "downloads": -1, "filename": "tinybench-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ef252023d83c3cba3f766ed40c96e4e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 5747, "upload_time": "2020-05-02T22:49:59", "upload_time_iso_8601": "2020-05-02T22:49:59.383011Z", "url": "https://files.pythonhosted.org/packages/00/a5/3116aafe00daccf345759a0f44cf84914e200409dd09de1180252867dabb/tinybench-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40aa0a1e0f52f46a9b27648eae2fce3c", "sha256": "f9325968bf6be85948396ace4e8b153369ab852502db84fe2c0d824c929ca4b0"}, "downloads": -1, "filename": "tinybench-1.0.tar.gz", "has_sig": false, "md5_digest": "40aa0a1e0f52f46a9b27648eae2fce3c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 4149, "upload_time": "2020-05-02T22:50:01", "upload_time_iso_8601": "2020-05-02T22:50:01.466302Z", "url": "https://files.pythonhosted.org/packages/b4/56/50d3dffef3e8f34928c1631a0c72380cfe62d45f5f5e14b52975976341f1/tinybench-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "dde2bee3d7195a73892ae90493e0ee65", "sha256": "ca7582e87f7ae9950b1cc340b4b6a050d808e5d7c04aea1343c8bc3cdff214e7"}, "downloads": -1, "filename": "tinybench-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dde2bee3d7195a73892ae90493e0ee65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 6047, "upload_time": "2020-05-03T03:00:35", "upload_time_iso_8601": "2020-05-03T03:00:35.945074Z", "url": "https://files.pythonhosted.org/packages/f1/98/c6971cb214f2c7a9a12b231861575f38baa7897923e8751c6f1767890ea4/tinybench-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6533aee117fcbb25b2240bc4234f63a9", "sha256": "7e67e9998b9913c57b9a75151b57b96e466acc2b078f12222de04b6add00db7a"}, "downloads": -1, "filename": "tinybench-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6533aee117fcbb25b2240bc4234f63a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 4243, "upload_time": "2020-05-03T03:00:36", "upload_time_iso_8601": "2020-05-03T03:00:36.854323Z", "url": "https://files.pythonhosted.org/packages/78/14/8f46f51138f62408d2fbd88ccff28505deab7b5ae4b142625b91da04d083/tinybench-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "419fb3de0241cb74226cacde626d9de7", "sha256": "bf91379c00947a8086e2ec2c120bbff254d9213fc295c36bf236dc985bc7487e"}, "downloads": -1, "filename": "tinybench-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "419fb3de0241cb74226cacde626d9de7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 6062, "upload_time": "2020-05-03T03:29:46", "upload_time_iso_8601": "2020-05-03T03:29:46.556727Z", "url": "https://files.pythonhosted.org/packages/7b/bc/42298690afcb66eed70ed0d07024c8dc55c7ef2100c1a43035adf0033d52/tinybench-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0a6ed25f87a12f943425c124e70e287", "sha256": "571dda3a0379fc4cfad78c332ad5cb88404cdf6af4089d3f49620dfcfc33b5e4"}, "downloads": -1, "filename": "tinybench-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b0a6ed25f87a12f943425c124e70e287", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 4277, "upload_time": "2020-05-03T03:29:47", "upload_time_iso_8601": "2020-05-03T03:29:47.372295Z", "url": "https://files.pythonhosted.org/packages/1c/18/952991d71218b207457f77c51760fd6a9370011d08565ab92ae9ef50fa66/tinybench-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "419fb3de0241cb74226cacde626d9de7", "sha256": "bf91379c00947a8086e2ec2c120bbff254d9213fc295c36bf236dc985bc7487e"}, "downloads": -1, "filename": "tinybench-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "419fb3de0241cb74226cacde626d9de7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 6062, "upload_time": "2020-05-03T03:29:46", "upload_time_iso_8601": "2020-05-03T03:29:46.556727Z", "url": "https://files.pythonhosted.org/packages/7b/bc/42298690afcb66eed70ed0d07024c8dc55c7ef2100c1a43035adf0033d52/tinybench-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0a6ed25f87a12f943425c124e70e287", "sha256": "571dda3a0379fc4cfad78c332ad5cb88404cdf6af4089d3f49620dfcfc33b5e4"}, "downloads": -1, "filename": "tinybench-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b0a6ed25f87a12f943425c124e70e287", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 4277, "upload_time": "2020-05-03T03:29:47", "upload_time_iso_8601": "2020-05-03T03:29:47.372295Z", "url": "https://files.pythonhosted.org/packages/1c/18/952991d71218b207457f77c51760fd6a9370011d08565ab92ae9ef50fa66/tinybench-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:08 2020"}