{"info": {"author": "Ahmet Kotan", "author_email": "ahmtkotan@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=====================================================================\n Celeryman\n=====================================================================\nCeleryman is a management application for celery async tasks on django.\nIt can manage created async tasks or you can create async task with ManagedTask or CeleryTask models.\n\n  Task cannot be created with the same arguments at the same time.\n\nInstallation\n============\non Pypi\n::\n  pip install celeryman\non Github\n::\n  git clone git@github.com:ahmetkotan/celeryman.git\n  cd celeryman\n  python setup.py install\n\nSettings\n============\nAfter celery integration is completed, just add the celeryman app to `INSTALLED_APPS`.\n::\n\n  INSTALLED_APPS = [\n      ...\n      'celeryman',\n      ...\n  ]\n\nAbout\n=====\nWhen celery service is run, Celeryman will discover tasks and save to database as CeleryTask object.\nIf you create async task with `apply_async()`, `delay()` etc. methods, Celeryman will create ManagedTask object when task is start.\n::\n  timer_task.apply_async((10,))\n\n\nUsage\n=====\nAsync task with ManagedTask and CeleryTask model.\n::\n  m = ManagedTask.objects.create(task_name='timer_task', celery_task_args=[10])\n  m.set_task_args([10]) # if you don't use celery_task_args when created object, you can set with this method.\n  m.start()\n  m.stop()\n\nOr use\n::\n  c = CeleryTask.objects.get(task_name='timer_task')\n  c.set_task_args([10])\n  managed_task = c.start()\n  managed_task.stop()\n\n\nAdmin Panel\n===========\nTo usable the async tasks:\nhttp://localhost:8000/admin/celeryman/celerytask/\n\nTo view the created async tasks and to create new async task:\nhttp://localhost:8000/admin/celeryman/managedtask/", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ahmetkotan/celeryman", "keywords": "", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "celeryman", "package_url": "https://pypi.org/project/celeryman/", "platform": "", "project_url": "https://pypi.org/project/celeryman/", "project_urls": {"Homepage": "https://github.com/ahmetkotan/celeryman"}, "release_url": "https://pypi.org/project/celeryman/0.9.1.3/", "requires_dist": null, "requires_python": "", "summary": "Celery Management App for Django", "version": "0.9.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            =====================================================================<br> Celeryman<br>=====================================================================<br>Celeryman is a management application for celery async tasks on django.<br>It can manage created async tasks or you can create async task with ManagedTask or CeleryTask models.<br><br>  Task cannot be created with the same arguments at the same time.<br><br>Installation<br>============<br>on Pypi<br>::<br>  pip install celeryman<br>on Github<br>::<br>  git clone git@github.com:ahmetkotan/celeryman.git<br>  cd celeryman<br>  python setup.py install<br><br>Settings<br>============<br>After celery integration is completed, just add the celeryman app to `INSTALLED_APPS`.<br>::<br><br>  INSTALLED_APPS = [<br>      ...<br>      'celeryman',<br>      ...<br>  ]<br><br>About<br>=====<br>When celery service is run, Celeryman will discover tasks and save to database as CeleryTask object.<br>If you create async task with `apply_async()`, `delay()` etc. methods, Celeryman will create ManagedTask object when task is start.<br>::<br>  timer_task.apply_async((10,))<br><br><br>Usage<br>=====<br>Async task with ManagedTask and CeleryTask model.<br>::<br>  m = ManagedTask.objects.create(task_name='timer_task', celery_task_args=[10])<br>  m.set_task_args([10]) # if you don't use celery_task_args when created object, you can set with this method.<br>  m.start()<br>  m.stop()<br><br>Or use<br>::<br>  c = CeleryTask.objects.get(task_name='timer_task')<br>  c.set_task_args([10])<br>  managed_task = c.start()<br>  managed_task.stop()<br><br><br>Admin Panel<br>===========<br>To usable the async tasks:<br>http://localhost:8000/admin/celeryman/celerytask/<br><br>To view the created async tasks and to create new async task:<br>http://localhost:8000/admin/celeryman/managedtask/\n          </div>"}, "last_serial": 4395579, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "817c366fc7d7c17652e91d1b6ef5e949", "sha256": "47d221e624caa9b4f41982c02d97158ac26e5a4104ed186d42c1cbdc267c38a8"}, "downloads": -1, "filename": "celeryman-0.9-py3.6.egg", "has_sig": false, "md5_digest": "817c366fc7d7c17652e91d1b6ef5e949", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 17238, "upload_time": "2018-10-18T10:57:05", "upload_time_iso_8601": "2018-10-18T10:57:05.885895Z", "url": "https://files.pythonhosted.org/packages/9a/54/a0e7e58aedd41433906d537a1f0daf328600911ddb697a4a7593f66ec8df/celeryman-0.9-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "430955d2aa6ad12f454f40df9d00b62c", "sha256": "cfa89d95fe9a509000eb1f5009205b469a2544034301c62a53cf75008ef1163c"}, "downloads": -1, "filename": "celeryman-0.9.tar.gz", "has_sig": false, "md5_digest": "430955d2aa6ad12f454f40df9d00b62c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6074, "upload_time": "2018-10-18T10:57:09", "upload_time_iso_8601": "2018-10-18T10:57:09.443389Z", "url": "https://files.pythonhosted.org/packages/f0/25/8d28e108f018b7d4816b2adc66c50ca9325dac807329c1b2e956dd2cad96/celeryman-0.9.tar.gz", "yanked": false}], "0.9.1.3": [{"comment_text": "", "digests": {"md5": "99fe63fa037f4edf5891f485820ac745", "sha256": "3402ef0e497b5b3b8ffb64eb9c0ad827bbaee561820514a87918fc97032b8d95"}, "downloads": -1, "filename": "celeryman-0.9.1.3.tar.gz", "has_sig": false, "md5_digest": "99fe63fa037f4edf5891f485820ac745", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6343, "upload_time": "2018-10-19T19:42:51", "upload_time_iso_8601": "2018-10-19T19:42:51.986777Z", "url": "https://files.pythonhosted.org/packages/7a/a0/d5ed2689fb0a64de529f01cc1101fd5d5c8eb8ecd250211a27b1d6cad800/celeryman-0.9.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "99fe63fa037f4edf5891f485820ac745", "sha256": "3402ef0e497b5b3b8ffb64eb9c0ad827bbaee561820514a87918fc97032b8d95"}, "downloads": -1, "filename": "celeryman-0.9.1.3.tar.gz", "has_sig": false, "md5_digest": "99fe63fa037f4edf5891f485820ac745", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6343, "upload_time": "2018-10-19T19:42:51", "upload_time_iso_8601": "2018-10-19T19:42:51.986777Z", "url": "https://files.pythonhosted.org/packages/7a/a0/d5ed2689fb0a64de529f01cc1101fd5d5c8eb8ecd250211a27b1d6cad800/celeryman-0.9.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:52 2020"}