{"info": {"author": "Andre Morais", "author_email": "andremomorais@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Communications :: Chat", "Topic :: Internet", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "\n# beves\n\nbeves is a simple wrapper to send messages with Telegram Bot. Useful to alert on something or to notify when scripts are finished!\n\nTable of contents\n=================\n\n- Introduction\n\n- Installing\n\n- Getting started\n\n- Usage\n\n- References\n\n- License\n\nIntroduction\n------\n\n\nThis module provides a simple way to send messages with Telegram Bot. Is useful to notify you when scripts are finished.\nYou can import it into your code or using the command-line utility. In the command-line utility, beves\nreads the message data as a parameter or from stdin.\n\n\nInstalling\n------\n\nYou can install or upgrade beves with:\n\n```bash\n$ pip install beves --upgrade\n```\nOr you can install from source with:\n\n```bash\n$ git clone https://github.com/andremmorais/beves --recursive\n$ cd beves\n$ python setup.py install\n```\n\nGetting started\n------\n\nTo use Beves you will need the bot token and the chat_id of the sender.\n\nThe token can be generated talking with @BotFather on telegram and the chat_id can checked at `https://api.telegram.org/bot<YourBOTToken>/getUpdates`\n\nInitialize beves config\n\n```bash\n$ beves\nToken: xxxxx\nChat ID: xxxxx\n```\nRun from command-line with message data as argv\n\n```bash\n$ sleep 5 && beves \"sleep finished\";\n```\nRun from command-line with message data from stdin\n\n```bash\n$ echo \"this is a test message\" | beves\n```\nRun from command-line passing token and chat_id as args\n\n```bash\n$ beves -t xxxxx -i xxx \"this is a test message\"\n```\nImporting into your code\n\n```python\nfrom beves import Beves\nbot = Beves()\nbot.push('test')\n```\nIf you dont have the configuration you will need to pass them as arguments:\n\n```python\nfrom beves import Beves\nbot = Beves('token', 'chat_id')\nbot.push('test')\n```\n\nUsage\n------\n\n```bash\nusage: beves [-h] [-t TOKEN] [-i CHAT_ID] [-c CONFIG] [-v] [--version]\n             [message [message ...]]\n\nSimple wrapper to send notifications with Telegram Bot\n\npositional arguments:\n  message               Message to send\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t TOKEN, --token TOKEN\n                        telegram bot token\n  -i CHAT_ID, --chat_id CHAT_ID\n                        sender chat id\n  -c CONFIG, --config CONFIG\n                        configuration file instead of\n                        /Users/andre.morais/.beves\n  -v, --verbosity       increase output verbosity\n  --version             show program's version number and exit\n```\n\nReferences\n------\n\n- Telegram Bots <https://core.telegram.org/bots>\n- Telegram API documentation <https://core.telegram.org/bots/api>\n- python-telegram-bot documentation <https://python-telegram-bot.readthedocs.io/>\n\nLicense\n------\n\nYou may copy, distribute and modify the software provided that modifications are described and licensed for free under [LGPL-3](https://www.gnu.org/licenses/lgpl-3.0.html). Derivatives works (including modifications or anything statically linked to the library) can only be redistributed under LGPL-3, but applications that use the library don't have to be.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andremmorais/beves", "keywords": "python telegram bot notification", "license": "LGPLv3", "maintainer": "", "maintainer_email": "", "name": "beves", "package_url": "https://pypi.org/project/beves/", "platform": "", "project_url": "https://pypi.org/project/beves/", "project_urls": {"Homepage": "https://github.com/andremmorais/beves"}, "release_url": "https://pypi.org/project/beves/0.1/", "requires_dist": ["requests (==2.21.0)"], "requires_python": "", "summary": "Simple wrapper to send notifications with Telegram Bot", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>beves</h1>\n<p>beves is a simple wrapper to send messages with Telegram Bot. Useful to alert on something or to notify when scripts are finished!</p>\n<h1>Table of contents</h1>\n<ul>\n<li>\n<p>Introduction</p>\n</li>\n<li>\n<p>Installing</p>\n</li>\n<li>\n<p>Getting started</p>\n</li>\n<li>\n<p>Usage</p>\n</li>\n<li>\n<p>References</p>\n</li>\n<li>\n<p>License</p>\n</li>\n</ul>\n<h2>Introduction</h2>\n<p>This module provides a simple way to send messages with Telegram Bot. Is useful to notify you when scripts are finished.\nYou can import it into your code or using the command-line utility. In the command-line utility, beves\nreads the message data as a parameter or from stdin.</p>\n<h2>Installing</h2>\n<p>You can install or upgrade beves with:</p>\n<pre>$ pip install beves --upgrade\n</pre>\n<p>Or you can install from source with:</p>\n<pre>$ git clone https://github.com/andremmorais/beves --recursive\n$ <span class=\"nb\">cd</span> beves\n$ python setup.py install\n</pre>\n<h2>Getting started</h2>\n<p>To use Beves you will need the bot token and the chat_id of the sender.</p>\n<p>The token can be generated talking with @BotFather on telegram and the chat_id can checked at <code>https://api.telegram.org/bot&lt;YourBOTToken&gt;/getUpdates</code></p>\n<p>Initialize beves config</p>\n<pre>$ beves\nToken: xxxxx\nChat ID: xxxxx\n</pre>\n<p>Run from command-line with message data as argv</p>\n<pre>$ sleep <span class=\"m\">5</span> <span class=\"o\">&amp;&amp;</span> beves <span class=\"s2\">\"sleep finished\"</span><span class=\"p\">;</span>\n</pre>\n<p>Run from command-line with message data from stdin</p>\n<pre>$ <span class=\"nb\">echo</span> <span class=\"s2\">\"this is a test message\"</span> <span class=\"p\">|</span> beves\n</pre>\n<p>Run from command-line passing token and chat_id as args</p>\n<pre>$ beves -t xxxxx -i xxx <span class=\"s2\">\"this is a test message\"</span>\n</pre>\n<p>Importing into your code</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">beves</span> <span class=\"kn\">import</span> <span class=\"n\">Beves</span>\n<span class=\"n\">bot</span> <span class=\"o\">=</span> <span class=\"n\">Beves</span><span class=\"p\">()</span>\n<span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n<p>If you dont have the configuration you will need to pass them as arguments:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">beves</span> <span class=\"kn\">import</span> <span class=\"n\">Beves</span>\n<span class=\"n\">bot</span> <span class=\"o\">=</span> <span class=\"n\">Beves</span><span class=\"p\">(</span><span class=\"s1\">'token'</span><span class=\"p\">,</span> <span class=\"s1\">'chat_id'</span><span class=\"p\">)</span>\n<span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n<h2>Usage</h2>\n<pre>usage: beves <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-t TOKEN<span class=\"o\">]</span> <span class=\"o\">[</span>-i CHAT_ID<span class=\"o\">]</span> <span class=\"o\">[</span>-c CONFIG<span class=\"o\">]</span> <span class=\"o\">[</span>-v<span class=\"o\">]</span> <span class=\"o\">[</span>--version<span class=\"o\">]</span>\n             <span class=\"o\">[</span>message <span class=\"o\">[</span>message ...<span class=\"o\">]]</span>\n\nSimple wrapper to send notifications with Telegram Bot\n\npositional arguments:\n  message               Message to send\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -t TOKEN, --token TOKEN\n                        telegram bot token\n  -i CHAT_ID, --chat_id CHAT_ID\n                        sender chat id\n  -c CONFIG, --config CONFIG\n                        configuration file instead of\n                        /Users/andre.morais/.beves\n  -v, --verbosity       increase output verbosity\n  --version             show program<span class=\"err\">'</span>s version number and <span class=\"nb\">exit</span>\n</pre>\n<h2>References</h2>\n<ul>\n<li>Telegram Bots <a href=\"https://core.telegram.org/bots\" rel=\"nofollow\">https://core.telegram.org/bots</a></li>\n<li>Telegram API documentation <a href=\"https://core.telegram.org/bots/api\" rel=\"nofollow\">https://core.telegram.org/bots/api</a></li>\n<li>python-telegram-bot documentation <a href=\"https://python-telegram-bot.readthedocs.io/\" rel=\"nofollow\">https://python-telegram-bot.readthedocs.io/</a></li>\n</ul>\n<h2>License</h2>\n<p>You may copy, distribute and modify the software provided that modifications are described and licensed for free under <a href=\"https://www.gnu.org/licenses/lgpl-3.0.html\" rel=\"nofollow\">LGPL-3</a>. Derivatives works (including modifications or anything statically linked to the library) can only be redistributed under LGPL-3, but applications that use the library don't have to be.</p>\n\n          </div>"}, "last_serial": 5527348, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7952108a650040db28bfc1515c9a84e9", "sha256": "0006fb0c49b4d6d704c7de68b595c2051cc999a584642ef9e8f509ba41a7539f"}, "downloads": -1, "filename": "beves-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7952108a650040db28bfc1515c9a84e9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17491, "upload_time": "2019-07-02T10:18:46", "upload_time_iso_8601": "2019-07-02T10:18:46.661465Z", "url": "https://files.pythonhosted.org/packages/3e/18/9720b84be9ac81d2465b14a5441ecf7f41773cc6e9d78b0d58db94f2f267/beves-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b740f4b3b0a021aa0928a31542267d0d", "sha256": "500723483981a9cb6c5fd57786deb2c8e5be910bbd85b183e310d4488f6f36d5"}, "downloads": -1, "filename": "beves-0.1.tar.gz", "has_sig": false, "md5_digest": "b740f4b3b0a021aa0928a31542267d0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5383, "upload_time": "2019-07-02T10:18:48", "upload_time_iso_8601": "2019-07-02T10:18:48.928593Z", "url": "https://files.pythonhosted.org/packages/f6/cf/844c930bf343cbe90e2a585ad29c58004f77a0dbde51545998cc141781ea/beves-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7952108a650040db28bfc1515c9a84e9", "sha256": "0006fb0c49b4d6d704c7de68b595c2051cc999a584642ef9e8f509ba41a7539f"}, "downloads": -1, "filename": "beves-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7952108a650040db28bfc1515c9a84e9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17491, "upload_time": "2019-07-02T10:18:46", "upload_time_iso_8601": "2019-07-02T10:18:46.661465Z", "url": "https://files.pythonhosted.org/packages/3e/18/9720b84be9ac81d2465b14a5441ecf7f41773cc6e9d78b0d58db94f2f267/beves-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b740f4b3b0a021aa0928a31542267d0d", "sha256": "500723483981a9cb6c5fd57786deb2c8e5be910bbd85b183e310d4488f6f36d5"}, "downloads": -1, "filename": "beves-0.1.tar.gz", "has_sig": false, "md5_digest": "b740f4b3b0a021aa0928a31542267d0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5383, "upload_time": "2019-07-02T10:18:48", "upload_time_iso_8601": "2019-07-02T10:18:48.928593Z", "url": "https://files.pythonhosted.org/packages/f6/cf/844c930bf343cbe90e2a585ad29c58004f77a0dbde51545998cc141781ea/beves-0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:41 2020"}