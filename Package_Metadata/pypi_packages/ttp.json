{"info": {"author": "Denis Mulyalin", "author_email": "d.mulyalin@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Utilities"], "description": "[![Downloads](https://pepy.tech/badge/ttp)](https://pepy.tech/project/ttp)\n[![PyPI versions](https://img.shields.io/pypi/pyversions/ttp.svg)](https://pypi.python.org/pypi/ttp/)\n[![Documentation status](https://readthedocs.org/projects/ttp/badge/?version=latest)](http://ttp.readthedocs.io/?badge=latest)\n\n# Template Text Parser\n\nTTP is a Python library for parsing semi-structured text data using templates.\n\n## Why?\n\nEvery time questions arise on how many devices has blob X configured or how many interface has QoS policy applied or to find IP overlaps in the network etc., etc., for those who write custom scripts to answer these questions, spending hours putting fancy regexes together and learning how to use specialized libraries to prepare, parse and process text data to transform it in a format that they can make use of - have a look at TTP, it can help with most of it.\n\n## How?\n\nRegexes, regexes everywhere... but dynamically formed out of TTP templates with added capabilities to streamline process of getting desired outcome from raw text data.\n\n## What?\n\nIn essence TTP can help to:\n  - Prepare, sort and load text data for parsing\n  - Parse text using regexes dynamically derived from templates\n  - Process matches on the fly using broad set of built-in or custom convenience functions\n  - Combine match results in a structure with arbitrary hierarchy\n  - Transform results in desired format to ease consumption by humans or machines\n  - Return results to various destinations for storage or further processing\n\nReference [documentation](https://ttp.readthedocs.io) for more information.\n\n## Example\n\n```python\nfrom ttp import ttp\n\ndata_to_parse = \"\"\"\ninterface Loopback0\n description Router-id-loopback\n ip address 192.168.0.113/24\n!\ninterface Vlan778\n description CPE_Acces_Vlan\n ip address 2002::fd37/124\n ip vrf CPE1\n!\n\"\"\"\n\nttp_template = \"\"\"\ninterface {{ interface }}\n ip address {{ ip }}/{{ mask }}\n description {{ description }}\n ip vrf {{ vrf }}\n\"\"\"\n\nparser = ttp(data=data_to_parse, template=ttp_template)\nparser.parse()\nprint(parser.result(format='json')[0])\n\n[\n    [\n        {\n            \"description\": \"Router-id-loopback\",\n            \"interface\": \"Loopback0\",\n            \"ip\": \"192.168.0.113\",\n            \"mask\": \"24\"\n        },\n        {\n            \"description\": \"CPE_Acces_Vlan\",\n            \"interface\": \"Vlan778\",\n            \"ip\": \"2002::fd37\",\n            \"mask\": \"124\",\n            \"vrf\": \"CPE1\"\n        }\n    ]\n]\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dmulyalin/ttp", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ttp", "package_url": "https://pypi.org/project/ttp/", "platform": "", "project_url": "https://pypi.org/project/ttp/", "project_urls": {"Homepage": "https://github.com/dmulyalin/ttp"}, "release_url": "https://pypi.org/project/ttp/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "Template Text Parser", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pepy.tech/project/ttp\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99952e71d9983c5f9a0fdd602da18fd22a1d9248/68747470733a2f2f706570792e746563682f62616467652f747470\"></a>\n<a href=\"https://pypi.python.org/pypi/ttp/\" rel=\"nofollow\"><img alt=\"PyPI versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b8b0fc6b6ed21124fa7cab29f3b43776680d9370/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7474702e737667\"></a>\n<a href=\"http://ttp.readthedocs.io/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/438778b19f3a86dc609b3923ae7cf6db3c4dbd56/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7474702f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<h1>Template Text Parser</h1>\n<p>TTP is a Python library for parsing semi-structured text data using templates.</p>\n<h2>Why?</h2>\n<p>Every time questions arise on how many devices has blob X configured or how many interface has QoS policy applied or to find IP overlaps in the network etc., etc., for those who write custom scripts to answer these questions, spending hours putting fancy regexes together and learning how to use specialized libraries to prepare, parse and process text data to transform it in a format that they can make use of - have a look at TTP, it can help with most of it.</p>\n<h2>How?</h2>\n<p>Regexes, regexes everywhere... but dynamically formed out of TTP templates with added capabilities to streamline process of getting desired outcome from raw text data.</p>\n<h2>What?</h2>\n<p>In essence TTP can help to:</p>\n<ul>\n<li>Prepare, sort and load text data for parsing</li>\n<li>Parse text using regexes dynamically derived from templates</li>\n<li>Process matches on the fly using broad set of built-in or custom convenience functions</li>\n<li>Combine match results in a structure with arbitrary hierarchy</li>\n<li>Transform results in desired format to ease consumption by humans or machines</li>\n<li>Return results to various destinations for storage or further processing</li>\n</ul>\n<p>Reference <a href=\"https://ttp.readthedocs.io\" rel=\"nofollow\">documentation</a> for more information.</p>\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ttp</span> <span class=\"kn\">import</span> <span class=\"n\">ttp</span>\n\n<span class=\"n\">data_to_parse</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">interface Loopback0</span>\n<span class=\"s2\"> description Router-id-loopback</span>\n<span class=\"s2\"> ip address 192.168.0.113/24</span>\n<span class=\"s2\">!</span>\n<span class=\"s2\">interface Vlan778</span>\n<span class=\"s2\"> description CPE_Acces_Vlan</span>\n<span class=\"s2\"> ip address 2002::fd37/124</span>\n<span class=\"s2\"> ip vrf CPE1</span>\n<span class=\"s2\">!</span>\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"n\">ttp_template</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">interface {{ interface }}</span>\n<span class=\"s2\"> ip address {{ ip }}/{{ mask }}</span>\n<span class=\"s2\"> description {{ description }}</span>\n<span class=\"s2\"> ip vrf {{ vrf }}</span>\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">ttp</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data_to_parse</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">ttp_template</span><span class=\"p\">)</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">(</span><span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">'json'</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"p\">[</span>\n    <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Router-id-loopback\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"interface\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Loopback0\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ip\"</span><span class=\"p\">:</span> <span class=\"s2\">\"192.168.0.113\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"mask\"</span><span class=\"p\">:</span> <span class=\"s2\">\"24\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CPE_Acces_Vlan\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"interface\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Vlan778\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ip\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2002::fd37\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"mask\"</span><span class=\"p\">:</span> <span class=\"s2\">\"124\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"vrf\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CPE1\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">]</span>\n</pre>\n\n          </div>"}, "last_serial": 6346805, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "d84395f9e72cb0b4f43156cabeca89ac", "sha256": "eb18ce545d413e5b238e5462c18acfdd38992055fab76d661d53c4bc43ee32a5"}, "downloads": -1, "filename": "ttp-0.2.0-py2.7.egg", "has_sig": false, "md5_digest": "d84395f9e72cb0b4f43156cabeca89ac", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 117147, "upload_time": "2019-10-18T10:26:53", "upload_time_iso_8601": "2019-10-18T10:26:53.641497Z", "url": "https://files.pythonhosted.org/packages/ec/3b/ac85ecd4f7cf49202fff887760e61542b2e581809d163e77e2432df60e8c/ttp-0.2.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a77c86d12058bd3ce2149812a7d7db8", "sha256": "daa654046d3148de1bb0f6bad760eda0ca72ec2576f455dd105565e5cea40c22"}, "downloads": -1, "filename": "ttp-0.2.0-py3.7.egg", "has_sig": false, "md5_digest": "4a77c86d12058bd3ce2149812a7d7db8", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 119122, "upload_time": "2019-10-18T10:26:55", "upload_time_iso_8601": "2019-10-18T10:26:55.821268Z", "url": "https://files.pythonhosted.org/packages/b3/80/d7cf22b1bbadb3ae76e17950c316ec25f9eec309d52ef25fb6e06f8e4b78/ttp-0.2.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4194c928503fa892866cd106b8a87b41", "sha256": "b71b6e4405b53439419cfe33d3e398c5e4aeff8aae32525711fcf12cfb969112"}, "downloads": -1, "filename": "ttp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4194c928503fa892866cd106b8a87b41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40352, "upload_time": "2019-10-18T10:26:57", "upload_time_iso_8601": "2019-10-18T10:26:57.838327Z", "url": "https://files.pythonhosted.org/packages/30/13/77302d7147edef491e9d7b28fd5036f7de200ab1bf2644edda5e3c14a478/ttp-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "ea4f4eb91a5615fedae57d0851fd89d6", "sha256": "b85d3071984764ec9d9aac283cca7e332e95d842f46e251ce43bb8d80abb6f98"}, "downloads": -1, "filename": "ttp-0.3.0.tar.gz", "has_sig": false, "md5_digest": "ea4f4eb91a5615fedae57d0851fd89d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46836, "upload_time": "2019-12-22T07:46:10", "upload_time_iso_8601": "2019-12-22T07:46:10.351147Z", "url": "https://files.pythonhosted.org/packages/e5/cc/093042a5e912f44d57e7e8a552bf7762e541c8ece9447ffe78924d10a81c/ttp-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ea4f4eb91a5615fedae57d0851fd89d6", "sha256": "b85d3071984764ec9d9aac283cca7e332e95d842f46e251ce43bb8d80abb6f98"}, "downloads": -1, "filename": "ttp-0.3.0.tar.gz", "has_sig": false, "md5_digest": "ea4f4eb91a5615fedae57d0851fd89d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46836, "upload_time": "2019-12-22T07:46:10", "upload_time_iso_8601": "2019-12-22T07:46:10.351147Z", "url": "https://files.pythonhosted.org/packages/e5/cc/093042a5e912f44d57e7e8a552bf7762e541c8ece9447ffe78924d10a81c/ttp-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:44:59 2020"}