{"info": {"author": "Mark Brenig-Jones", "author_email": "markbrenigjones@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7"], "description": "SheetSync2\n==========\n\n|Build Status|\n\nA `python 2.7 <https://www.python.org/download/releases/2.7/>`_ library to create, update and delete rows of data in a google spreadsheet. `Click here to read the full documentation <http://sheetsync.readthedocs.org/>`_.\n\nInstallation\n------------\nInstall from PyPi using `pip <http://www.pip-installer.org/en/latest/>`_::\n\n  pip install sheetsync2\n\nOr you can clone the git repo and install from the code::\n\n  git clone -b master27 git@github.com:mbrenig/sheetsync.git LocalSheetSync\n  pip install LocalSheetSync\n\nNote, you may need to run the commands above with ``sudo``.\n\nSetting up OAuth 2.0 access\n---------------------------\nThe Google Drive API now requires the use of OAuth2.0. This means you will need\nto go through a bit of configuration to get an API Client ID and Client Secret\nbefore using sheetsync.\n\nRead the step-by-step `getting started guide <http://sheetsync.readthedocs.org/en/latest/getting_started.html>`_ for instructions.\n\nInjecting data to a Google sheet\n--------------------------------\nSheetSync works with data in a dictionary of dictionaries. Each row is\nrepresented by a dictionary, and these are themselves stored in a dictionary\nindexed by a row-specific key. For example this dictionary represents two rows\nof data each with columns \"Color\" and \"Performer\":\n\n.. code-block:: python\n\n   data = { \"Kermit\": {\"Color\" : \"Green\", \"Performer\" : \"Jim Henson\"},\n            \"Miss Piggy\" : {\"Color\" : \"Pink\", \"Performer\" : \"Frank Oz\"}\n           }\n\nTo insert this data (add or update rows) into a target\nworksheet in a google spreadsheet doc use this code:\n\n.. code-block:: python\n\n   import logging\n   from sheetsync import Sheet, ia_credentials_helper\n   # Turn on logging so you can see what sheetsync is doing.\n   logging.getLogger('sheetsync').setLevel(logging.DEBUG)\n   logging.basicConfig()\n\n   # Create OAuth2 credentials, or reload them from a local cache file.\n   CLIENT_ID = '171566521677-3ppd15g5u4lv93van0eri4tbk4fmaq2c.apps.googleusercontent.com'\n   CLIENT_SECRET = 'QJN*****************hk-i'\n   creds = ia_credentials_helper(CLIENT_ID, CLIENT_SECRET, \n                                 credentials_cache_file='cred_cache.json')\n\n   data = { \"Kermit\": {\"Color\" : \"Green\", \"Performer\" : \"Jim Henson\"},\n            \"Miss Piggy\" : {\"Color\" : \"Pink\", \"Performer\" : \"Frank Oz\"} }\n\n   # Find or create a spreadsheet, then inject data.\n   target = Sheet(credentials=creds, document_name=\"sheetsync Getting Started\")\n   target.inject(data)\n   print \"Spreadsheet created here: %s\" % target.document_href\n\nThe first part of this script imports the ``Sheet`` object and\n``ia_credentials_helper`` function. This function is included to help you quickly\ngenerate an `OAuth2Credentials <https://google-api-python-client.googlecode.com/hg/docs/epy/oauth2client.client.OAuth2Credentials-class.html>`_ object using your Client ID and Secret.\n\nThe second part creates a new spreadsheet document in your google drive and then inserts the data like so:\n\n.. image:: https://raw.githubusercontent.com/mbrenig/SheetSync/master/docs/Sheet1.png\n\nLater on you'll probably want to access this data, to do that note the\nspreadsheet's document key from the URL:\n\n.. image:: https://raw.githubusercontent.com/mbrenig/SheetSync/master/docs/URL.png\n\nand access the data as follows:\n\n.. code-block:: python\n\n    source = Sheet(credentials=creds,\n                   document_key=\"1bnieREGAyXZ2TnhXgYrIacCIY09Q2lfGXNZbjsvJ82M\",\n                   worksheet_name='Sheet1')\n    print source.data()\n\nThe 'inject' method only adds or updates rows. If you want to delete rows from the spreadsheet to keep it in sync with the input data then use the 'sync' method.\n\nFull documentation\n------------------\nIs available `here <http://sheetsync.readthedocs.org/>`_.\n\nTesting and development\n-----------------------\nSheetSync comes with tox tests. To run them, you'll need to copy the .secret\nfile to .mysecrets and fill in your own Client ID, Secret and Testdoc folder\nkey. Then run with the following two commands::\n\n    . .mysecrets\n    tox\n\nThe license is MIT so feel free to edit, improve. Cheers.\n\n.. |Build Status| image:: https://travis-ci.org/mbrenig/SheetSync.svg?branch=master\n   :target: https://travis-ci.org/mbrenig/SheetSync", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mbrenig/SheetSync/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sheetsync2", "package_url": "https://pypi.org/project/sheetsync2/", "platform": "any", "project_url": "https://pypi.org/project/sheetsync2/", "project_urls": {"Homepage": "https://github.com/mbrenig/SheetSync/"}, "release_url": "https://pypi.org/project/sheetsync2/0.2.5/", "requires_dist": null, "requires_python": "", "summary": "Synchronize rows of data with a google spreadsheet (Python2.7 version)", "version": "0.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/mbrenig/SheetSync\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bbd7bfab1de05161cd2b4b7b28c6368f0871b008/68747470733a2f2f7472617669732d63692e6f72672f6d6272656e69672f536865657453796e632e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>A <a href=\"https://www.python.org/download/releases/2.7/\" rel=\"nofollow\">python 2.7</a> library to create, update and delete rows of data in a google spreadsheet. <a href=\"http://sheetsync.readthedocs.org/\" rel=\"nofollow\">Click here to read the full documentation</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install from PyPi using <a href=\"http://www.pip-installer.org/en/latest/\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install sheetsync2\n</pre>\n<p>Or you can clone the git repo and install from the code:</p>\n<pre>git clone -b master27 git@github.com:mbrenig/sheetsync.git LocalSheetSync\npip install LocalSheetSync\n</pre>\n<p>Note, you may need to run the commands above with <tt>sudo</tt>.</p>\n</div>\n<div id=\"setting-up-oauth-2-0-access\">\n<h2>Setting up OAuth 2.0 access</h2>\n<p>The Google Drive API now requires the use of OAuth2.0. This means you will need\nto go through a bit of configuration to get an API Client ID and Client Secret\nbefore using sheetsync.</p>\n<p>Read the step-by-step <a href=\"http://sheetsync.readthedocs.org/en/latest/getting_started.html\" rel=\"nofollow\">getting started guide</a> for instructions.</p>\n</div>\n<div id=\"injecting-data-to-a-google-sheet\">\n<h2>Injecting data to a Google sheet</h2>\n<p>SheetSync works with data in a dictionary of dictionaries. Each row is\nrepresented by a dictionary, and these are themselves stored in a dictionary\nindexed by a row-specific key. For example this dictionary represents two rows\nof data each with columns \u201cColor\u201d and \u201cPerformer\u201d:</p>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s2\">\"Kermit\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"Color\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Green\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Performer\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Jim Henson\"</span><span class=\"p\">},</span>\n         <span class=\"s2\">\"Miss Piggy\"</span> <span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"Color\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Pink\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Performer\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Frank Oz\"</span><span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n</pre>\n<p>To insert this data (add or update rows) into a target\nworksheet in a google spreadsheet doc use this code:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sheetsync</span> <span class=\"kn\">import</span> <span class=\"n\">Sheet</span><span class=\"p\">,</span> <span class=\"n\">ia_credentials_helper</span>\n<span class=\"c1\"># Turn on logging so you can see what sheetsync is doing.</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'sheetsync'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">basicConfig</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create OAuth2 credentials, or reload them from a local cache file.</span>\n<span class=\"n\">CLIENT_ID</span> <span class=\"o\">=</span> <span class=\"s1\">'171566521677-3ppd15g5u4lv93van0eri4tbk4fmaq2c.apps.googleusercontent.com'</span>\n<span class=\"n\">CLIENT_SECRET</span> <span class=\"o\">=</span> <span class=\"s1\">'QJN*****************hk-i'</span>\n<span class=\"n\">creds</span> <span class=\"o\">=</span> <span class=\"n\">ia_credentials_helper</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">,</span>\n                              <span class=\"n\">credentials_cache_file</span><span class=\"o\">=</span><span class=\"s1\">'cred_cache.json'</span><span class=\"p\">)</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s2\">\"Kermit\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"Color\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Green\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Performer\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Jim Henson\"</span><span class=\"p\">},</span>\n         <span class=\"s2\">\"Miss Piggy\"</span> <span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"Color\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Pink\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Performer\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Frank Oz\"</span><span class=\"p\">}</span> <span class=\"p\">}</span>\n\n<span class=\"c1\"># Find or create a spreadsheet, then inject data.</span>\n<span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"n\">Sheet</span><span class=\"p\">(</span><span class=\"n\">credentials</span><span class=\"o\">=</span><span class=\"n\">creds</span><span class=\"p\">,</span> <span class=\"n\">document_name</span><span class=\"o\">=</span><span class=\"s2\">\"sheetsync Getting Started\"</span><span class=\"p\">)</span>\n<span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">inject</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"Spreadsheet created here: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">document_href</span>\n</pre>\n<p>The first part of this script imports the <tt>Sheet</tt> object and\n<tt>ia_credentials_helper</tt> function. This function is included to help you quickly\ngenerate an <a href=\"https://google-api-python-client.googlecode.com/hg/docs/epy/oauth2client.client.OAuth2Credentials-class.html\" rel=\"nofollow\">OAuth2Credentials</a> object using your Client ID and Secret.</p>\n<p>The second part creates a new spreadsheet document in your google drive and then inserts the data like so:</p>\n<img alt=\"https://raw.githubusercontent.com/mbrenig/SheetSync/master/docs/Sheet1.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f876ea8f1bf953ae4252050cc83ae3cb3a74070f/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d6272656e69672f536865657453796e632f6d61737465722f646f63732f5368656574312e706e67\">\n<p>Later on you\u2019ll probably want to access this data, to do that note the\nspreadsheet\u2019s document key from the URL:</p>\n<img alt=\"https://raw.githubusercontent.com/mbrenig/SheetSync/master/docs/URL.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e3d08b074f408acda18fdcb20b826f02c283f23/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d6272656e69672f536865657453796e632f6d61737465722f646f63732f55524c2e706e67\">\n<p>and access the data as follows:</p>\n<pre><span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">Sheet</span><span class=\"p\">(</span><span class=\"n\">credentials</span><span class=\"o\">=</span><span class=\"n\">creds</span><span class=\"p\">,</span>\n               <span class=\"n\">document_key</span><span class=\"o\">=</span><span class=\"s2\">\"1bnieREGAyXZ2TnhXgYrIacCIY09Q2lfGXNZbjsvJ82M\"</span><span class=\"p\">,</span>\n               <span class=\"n\">worksheet_name</span><span class=\"o\">=</span><span class=\"s1\">'Sheet1'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">()</span>\n</pre>\n<p>The \u2018inject\u2019 method only adds or updates rows. If you want to delete rows from the spreadsheet to keep it in sync with the input data then use the \u2018sync\u2019 method.</p>\n</div>\n<div id=\"full-documentation\">\n<h2>Full documentation</h2>\n<p>Is available <a href=\"http://sheetsync.readthedocs.org/\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div id=\"testing-and-development\">\n<h2>Testing and development</h2>\n<p>SheetSync comes with tox tests. To run them, you\u2019ll need to copy the .secret\nfile to .mysecrets and fill in your own Client ID, Secret and Testdoc folder\nkey. Then run with the following two commands:</p>\n<pre>. .mysecrets\ntox\n</pre>\n<p>The license is MIT so feel free to edit, improve. Cheers.</p>\n</div>\n\n          </div>"}, "last_serial": 3222835, "releases": {"0.2.5": [{"comment_text": "", "digests": {"md5": "2cbf1a6ddbffc50fc6e8d0eccdd12834", "sha256": "6904716be4f46a21c09555ddab4305e3d06e60101aa1334e2e94f51c5a0af228"}, "downloads": -1, "filename": "sheetsync2-0.2.5.tar.gz", "has_sig": false, "md5_digest": "2cbf1a6ddbffc50fc6e8d0eccdd12834", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20569, "upload_time": "2017-10-03T17:25:24", "upload_time_iso_8601": "2017-10-03T17:25:24.080001Z", "url": "https://files.pythonhosted.org/packages/7c/19/23f8dc2cc97ab210ff4686c544d1eae7a722c8154ad1093609b67bacbdc4/sheetsync2-0.2.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2cbf1a6ddbffc50fc6e8d0eccdd12834", "sha256": "6904716be4f46a21c09555ddab4305e3d06e60101aa1334e2e94f51c5a0af228"}, "downloads": -1, "filename": "sheetsync2-0.2.5.tar.gz", "has_sig": false, "md5_digest": "2cbf1a6ddbffc50fc6e8d0eccdd12834", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20569, "upload_time": "2017-10-03T17:25:24", "upload_time_iso_8601": "2017-10-03T17:25:24.080001Z", "url": "https://files.pythonhosted.org/packages/7c/19/23f8dc2cc97ab210ff4686c544d1eae7a722c8154ad1093609b67bacbdc4/sheetsync2-0.2.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:28 2020"}