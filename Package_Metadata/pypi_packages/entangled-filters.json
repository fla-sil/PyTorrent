{"info": {"author": "Johan Hidding", "author_email": "j.hidding@esciencecenter.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Documentation", "Topic :: Education", "Topic :: Scientific/Engineering", "Topic :: Software Development", "Topic :: Software Development :: Documentation", "Topic :: Software Development :: Testing", "Topic :: Text Processing :: Markup"], "description": "[![Test Badge](https://github.com/entangled/filters/workflows/Tests/badge.svg)](https://github.com/entangled/filters/actions?query=workflow%3ATests)\n[![codecov](https://codecov.io/gh/entangled/filters/branch/master/graph/badge.svg)](https://codecov.io/gh/entangled/filters)\n\n# Entangled - Pandoc filters\n\nThis contains several Pandoc filters and scripts for literate programming in Markdown. These filters are enough to get you going with literate programming using Pandoc.\n\n| Filter                     | Function                                         |\n|----------------------------|--------------------------------------------------|\n|`pandoc-annotate-codeblocks`| Adds annotation to code blocks in the woven output. |\n|`pandoc-doctest`            | Runs doc-tests by passing the content of code blocks through Jupyter. |\n|`pandoc-tangle`             | Generate source files from the content of code blocks. |\n|`pandoc-bootstrap`          | Expand some elements specifically targeting a Bootstrap page. |\n\n## Install\n\n### Prerequisites\n\n- **Python >=3.7**: All of these filters are written in Python. This is mainly to encourage as many users (**I mean YOU**) to start developing Pandoc filters.\n- **Dhall**: the `pandoc-bootstrap` filter requires `dhall-to-json` to be installed: see [Dhall language](https://dhall-lang.org/).\n  TLDR: download `dhall-json-*-[windows|macos|linux].[zip|tar.bz2]` from the [Dhall release page](https://github.com/dhall-lang/dhall-haskell/releases), and extract it to a location in your `$PATH`. Dhall is awesome, it *will* make your life better.\n\n```shell\npip install entangled-filters\n```\n\n### For development\n\nTo run tests, after doing a normal install (to get the executables installed), run\n\n```shell\npip install --upgrade -e .[test]\npytest\n```\n\nThe executables are auto-generated by the `setup.py` script and call some `python -m` command.\n\n## Supported syntax\n\nSee the [project homepage](https://entangled.github.io) for more info.\n\n### Named code blocks\n\n~~~markdown\n``` {.python #hello}\nprint(\"Hello, World!\")\n```\n~~~\n\n### Reference code blocks\n\n~~~markdown\n``` {.python #main}\ndef main():\n    <<hello>>\n```\n~~~\n\n### Define files\n\n~~~markdown\n``` {.python file=hello.py}\n<<main>>\n\nif __name__ == \"__main__\":\n    main()\n```\n~~~\n\n### Documentation tests\n\n~~~markdown\n``` {.python .doctest #the-question}\n6*7\n---\n42\n```\n~~~\n\n## `pandoc-tangle`\n\nExtracts code blocks and writes them to files.\n\n```shell\npandoc -t plain --filter pandoc-tangle hello.md\n```\n\n## `pandoc-annotate-codeblocks`\n\nAnnotates code blocks in generated HTML or PDF output with name tags.\n\n```shell\npandoc -t html5 -s --filter pandoc-anotate-codeblocks hello.md\n```\n\n## `pandoc-doctest`\n\nRuns doctests, and include results into output. Also annotates the code blocks (so no need\nto run `pandoc-annotate-codeblocks`).\n\n```shell\npandoc -t html5 -s --filter pandoc-doctest hello.md\n```\n\n## `pandoc-bootstrap`\n\nAlso annotates code blocks, and has two features:\n\n- Expand a Dhall specification into a card deck for Bootstrap, that is a flex-box with a single row and several columns of cards. This is nice to have at the top of a page to draw attention to some key points. \n\n- Collapsible/foldable code blocks. Add a `.bootstrap-fold` class to a code block to have the code block hidden behind a button. This is nice for some larger uninteresting code.\n\nThis filter should be used together with a Bootstrap template for Pandoc. An example of its use can be seen here: [Chaotic Pendulum](https://jhidding.github.io/chaotic-pendulum), with the source code at [gh:jhidding/chaotic-pendulum](https://github.com/jhidding/chaotic-pendulum).\n\n## Docker\n\nThe Entangled pandoc filters is available as a [Docker image](https://hub.docker.com/repository/docker/nlesc/pandoc-tangle).\n\n### Run\n\nIn your current working directory with a README.md file run \n\n```\ndocker run --rm -ti --user $UID -v $PWD:/data nlesc/pandoc-tangle README.md\n```\n\nThis will extracts code blocks and writes them to files.\n\n### Build\n\n```shell\ndocker build -t nlesc/pandoc-tangle .\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://entangled.github.io/", "keywords": "literate programming", "license": "", "maintainer": "", "maintainer_email": "", "name": "entangled-filters", "package_url": "https://pypi.org/project/entangled-filters/", "platform": "", "project_url": "https://pypi.org/project/entangled-filters/", "project_urls": {"Bug Tracker": "https://github.com/entangled/filters/issues/", "Documentation": "https://entangled.github.io/filters/", "Homepage": "https://entangled.github.io/", "Source Code": "https://github.com/entangled/filters/"}, "release_url": "https://pypi.org/project/entangled-filters/0.5/", "requires_dist": null, "requires_python": "", "summary": "Set of Pandoc filters to aid in literate programming", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/entangled/filters/actions?query=workflow%3ATests\" rel=\"nofollow\"><img alt=\"Test Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e14d6ced167a5b3b6b7c506ec20ef89a9fa0e55/68747470733a2f2f6769746875622e636f6d2f656e74616e676c65642f66696c746572732f776f726b666c6f77732f54657374732f62616467652e737667\"></a>\n<a href=\"https://codecov.io/gh/entangled/filters\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b089018188487dca7758abc185c03b5d05263ee8/68747470733a2f2f636f6465636f762e696f2f67682f656e74616e676c65642f66696c746572732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<h1>Entangled - Pandoc filters</h1>\n<p>This contains several Pandoc filters and scripts for literate programming in Markdown. These filters are enough to get you going with literate programming using Pandoc.</p>\n<table>\n<thead>\n<tr>\n<th>Filter</th>\n<th>Function</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>pandoc-annotate-codeblocks</code></td>\n<td>Adds annotation to code blocks in the woven output.</td>\n</tr>\n<tr>\n<td><code>pandoc-doctest</code></td>\n<td>Runs doc-tests by passing the content of code blocks through Jupyter.</td>\n</tr>\n<tr>\n<td><code>pandoc-tangle</code></td>\n<td>Generate source files from the content of code blocks.</td>\n</tr>\n<tr>\n<td><code>pandoc-bootstrap</code></td>\n<td>Expand some elements specifically targeting a Bootstrap page.</td>\n</tr></tbody></table>\n<h2>Install</h2>\n<h3>Prerequisites</h3>\n<ul>\n<li><strong>Python &gt;=3.7</strong>: All of these filters are written in Python. This is mainly to encourage as many users (<strong>I mean YOU</strong>) to start developing Pandoc filters.</li>\n<li><strong>Dhall</strong>: the <code>pandoc-bootstrap</code> filter requires <code>dhall-to-json</code> to be installed: see <a href=\"https://dhall-lang.org/\" rel=\"nofollow\">Dhall language</a>.\nTLDR: download <code>dhall-json-*-[windows|macos|linux].[zip|tar.bz2]</code> from the <a href=\"https://github.com/dhall-lang/dhall-haskell/releases\" rel=\"nofollow\">Dhall release page</a>, and extract it to a location in your <code>$PATH</code>. Dhall is awesome, it <em>will</em> make your life better.</li>\n</ul>\n<pre>pip install entangled-filters\n</pre>\n<h3>For development</h3>\n<p>To run tests, after doing a normal install (to get the executables installed), run</p>\n<pre>pip install --upgrade -e .<span class=\"o\">[</span>test<span class=\"o\">]</span>\npytest\n</pre>\n<p>The executables are auto-generated by the <code>setup.py</code> script and call some <code>python -m</code> command.</p>\n<h2>Supported syntax</h2>\n<p>See the <a href=\"https://entangled.github.io\" rel=\"nofollow\">project homepage</a> for more info.</p>\n<h3>Named code blocks</h3>\n<pre>``` {.python #hello}\nprint(\"Hello, World!\")\n```\n</pre>\n<h3>Reference code blocks</h3>\n<pre>``` {.python #main}\ndef main():\n    &lt;&lt;hello&gt;&gt;\n```\n</pre>\n<h3>Define files</h3>\n<pre>``` {.python file=hello.py}\n&lt;&lt;main&gt;&gt;\n\nif __name__ == \"__main__\":\n    main()\n```\n</pre>\n<h3>Documentation tests</h3>\n<pre>``` {.python .doctest #the-question}\n6*7\n---\n42\n```\n</pre>\n<h2><code>pandoc-tangle</code></h2>\n<p>Extracts code blocks and writes them to files.</p>\n<pre>pandoc -t plain --filter pandoc-tangle hello.md\n</pre>\n<h2><code>pandoc-annotate-codeblocks</code></h2>\n<p>Annotates code blocks in generated HTML or PDF output with name tags.</p>\n<pre>pandoc -t html5 -s --filter pandoc-anotate-codeblocks hello.md\n</pre>\n<h2><code>pandoc-doctest</code></h2>\n<p>Runs doctests, and include results into output. Also annotates the code blocks (so no need\nto run <code>pandoc-annotate-codeblocks</code>).</p>\n<pre>pandoc -t html5 -s --filter pandoc-doctest hello.md\n</pre>\n<h2><code>pandoc-bootstrap</code></h2>\n<p>Also annotates code blocks, and has two features:</p>\n<ul>\n<li>\n<p>Expand a Dhall specification into a card deck for Bootstrap, that is a flex-box with a single row and several columns of cards. This is nice to have at the top of a page to draw attention to some key points.</p>\n</li>\n<li>\n<p>Collapsible/foldable code blocks. Add a <code>.bootstrap-fold</code> class to a code block to have the code block hidden behind a button. This is nice for some larger uninteresting code.</p>\n</li>\n</ul>\n<p>This filter should be used together with a Bootstrap template for Pandoc. An example of its use can be seen here: <a href=\"https://jhidding.github.io/chaotic-pendulum\" rel=\"nofollow\">Chaotic Pendulum</a>, with the source code at <a href=\"https://github.com/jhidding/chaotic-pendulum\" rel=\"nofollow\">gh:jhidding/chaotic-pendulum</a>.</p>\n<h2>Docker</h2>\n<p>The Entangled pandoc filters is available as a <a href=\"https://hub.docker.com/repository/docker/nlesc/pandoc-tangle\" rel=\"nofollow\">Docker image</a>.</p>\n<h3>Run</h3>\n<p>In your current working directory with a README.md file run</p>\n<pre><code>docker run --rm -ti --user $UID -v $PWD:/data nlesc/pandoc-tangle README.md\n</code></pre>\n<p>This will extracts code blocks and writes them to files.</p>\n<h3>Build</h3>\n<pre>docker build -t nlesc/pandoc-tangle .\n</pre>\n\n          </div>"}, "last_serial": 7049334, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "0eb0054b22a78ef19ae4f17fb14279d9", "sha256": "c5b5590eabf2ad7feb0ad80cb19e9faa8af4937674ffd564ce56539b86bbc824"}, "downloads": -1, "filename": "entangled-filters-0.4.tar.gz", "has_sig": false, "md5_digest": "0eb0054b22a78ef19ae4f17fb14279d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6720, "upload_time": "2019-12-02T10:51:09", "upload_time_iso_8601": "2019-12-02T10:51:09.653520Z", "url": "https://files.pythonhosted.org/packages/fd/76/6f6eca149f5d786a0db4955bcb3d906aff176ab086e956c3f9dd1413cbfa/entangled-filters-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "15a167b1022605979bef671d80639be1", "sha256": "0f17b95132b90778b7d8d769dd2d2be466f4535f598e33891cf3cf96c26b154e"}, "downloads": -1, "filename": "entangled-filters-0.5.tar.gz", "has_sig": false, "md5_digest": "15a167b1022605979bef671d80639be1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11588, "upload_time": "2020-04-18T18:00:02", "upload_time_iso_8601": "2020-04-18T18:00:02.346047Z", "url": "https://files.pythonhosted.org/packages/4f/7d/2b7aa0a5c518fdd45beaa80f7c1657a499ff8b58f86dfb42a4125785a438/entangled-filters-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "15a167b1022605979bef671d80639be1", "sha256": "0f17b95132b90778b7d8d769dd2d2be466f4535f598e33891cf3cf96c26b154e"}, "downloads": -1, "filename": "entangled-filters-0.5.tar.gz", "has_sig": false, "md5_digest": "15a167b1022605979bef671d80639be1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11588, "upload_time": "2020-04-18T18:00:02", "upload_time_iso_8601": "2020-04-18T18:00:02.346047Z", "url": "https://files.pythonhosted.org/packages/4f/7d/2b7aa0a5c518fdd45beaa80f7c1657a499ff8b58f86dfb42a4125785a438/entangled-filters-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:14 2020"}