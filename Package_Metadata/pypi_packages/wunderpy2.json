{"info": {"author": "mieubrisse", "author_email": "mieubrisse@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "Overview\n========\nWunderpy2 is a thin Python library for accessing `the official Wunderlist 2 API <https://developer.wunderlist.com/documentation>`_. What does a thin library mean here?\n\n1. Only the bare minimum of error-checking to pass `the Wunderlist API specifications <https://developer.wunderlist.com/documentation>`_ is performed (e.g. there's no checking whether a task's title is empty, even though the Wunderlist web client enforces nonempty titles).\n2. There aren't any 'convenience' functions, like getting a list by name instead of ID (that being said, I'll likely get tired of repeating the same things myself, write a few, and bundle them in a separate helper module).\n\nInstallation\n============\n::\n\n    pip install wunderpy2\n\nUsage & Examples\n================\nGetting a client\n----------------\nWunderlist uses OAuth2 to allow applications to access users' data, so you'll need to `create an application <https://developer.wunderlist.com/apps>`_ before doing anything. If you only want to access your own Wunderlist, generate an access token after creating your application and use it and the client ID as follows::\n\n    import wunderpy2\n    api = wunderpy2.WunderApi()\n    client = api.get_client(access_token, client_id)    # Fill in your values\n\nIf you want other Wunderlisters to use your application, you'll need to see the \"Redirect users to request Wunderlist access\" section of `the authorization docs <https://developer.wunderlist.com/documentation/concepts/authorization>`_ in order to get a temporary code when a user has authorized your app. Once you have the code, you only need one more step::\n\n    api = wunderpy2.WunderApi()\n    access_token = api.get_access_token(temporary_code, client_id, client_secret)   # Fill in your values here\n    client = api.get_client(access_token, client_id)    # Fill in your client ID\n\nWunderlist Objects\n------------------\nAll Wunderlist objects are merely Python objects with special keys. For convenience, these keys are laid out in a class format in :code:`model.py`. Note that not every object will have every key (e.g. List objects with type 'inbox' do not have creation metadata).\n\nExamples\n--------\nCreating a task with a due date, note, 'starred' flag, and subtask::\n\n    lists = client.get_lists()\n    list = lists[0]\n    task = client.create_task(1234, \"My new task\", due_date=\"2015-08-02\", starred=True)\n    client.create_note(task[wunderpy2.Task.ID], \"My note\")   \n    client.create_subtask(task[wunderpy2.Task.ID], \"My subtask\")\n\nShuffling the order of tasks within a list (see `the Positions endpoint documentation <https://developer.wunderlist.com/documentation/endpoints/positions>`_)::\n\n    import random\n    task_positions_obj = client.get_task_positions_obj(list[wunderpy2.List.ID])\n    ordering = task_positions_obj[wunderpy2.Task.VALUES]\n    random.shuffle(ordering)\n    client.update_task_positions_obj(task_positions_obj[wunderpy2.TaskPositionsObj.ID], task_positions_obj[wunderpy2.TaskPositionsObj.REVISION], ordering)\n\nTODO \n====\n* Endpoint implementation:\n    * Avatar\n    * File\n    * File preview\n    * Folder\n    * Reminder\n    * Task comment\n    * Upload\n    * User\n    * Webhooks?\n\n\nRelease History\n===============\n\n0.1.6 (2018-07-27)\n---\n* Fix typo in RecurrenceTypes class name\n\n0.1.5 (2018-07-27)\n---\n* Switch from `dict.iteritems()` to `dict.items()` for Python 2 & 3 compatibility\n* Expose a few more classes in the public-facing API\n\n0.1.4 (2016-03-14)\n------------------\n* Bugfix in task endpoint code\n\n0.1.3 (2016-03-12)\n------------------\n* Fix imports for Python 3\n\n0.1.2 (2015-10-31)\n------------------\n* Added 'position' endpoint\n* Added 'subtask' endpoint\n\n0.1.1 (2015-08-16)\n------------------\n* Fixed setup.py requiring 'argparse' module for Python >2.6\n\n0.1.0 (2015-08-15)\n------------------\n* Initial release\n\n\nwunderpy2 is written and maintained by `mieubrisse <https://github.com/mieubrisse>`_\n\nContributors\n============\nNobody yet!\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mieubrisse/wunderpy2", "keywords": "wunderpy wunderpy2 wunderlist api cli", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "wunderpy2", "package_url": "https://pypi.org/project/wunderpy2/", "platform": "", "project_url": "https://pypi.org/project/wunderpy2/", "project_urls": {"Homepage": "https://github.com/mieubrisse/wunderpy2"}, "release_url": "https://pypi.org/project/wunderpy2/0.1.6/", "requires_dist": ["requests"], "requires_python": "", "summary": "A Python library for the Wunderlist 2 REST API", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>Wunderpy2 is a thin Python library for accessing <a href=\"https://developer.wunderlist.com/documentation\" rel=\"nofollow\">the official Wunderlist 2 API</a>. What does a thin library mean here?</p>\n<ol>\n<li>Only the bare minimum of error-checking to pass <a href=\"https://developer.wunderlist.com/documentation\" rel=\"nofollow\">the Wunderlist API specifications</a> is performed (e.g. there\u2019s no checking whether a task\u2019s title is empty, even though the Wunderlist web client enforces nonempty titles).</li>\n<li>There aren\u2019t any \u2018convenience\u2019 functions, like getting a list by name instead of ID (that being said, I\u2019ll likely get tired of repeating the same things myself, write a few, and bundle them in a separate helper module).</li>\n</ol>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install wunderpy2\n</pre>\n</div>\n<div id=\"usage-examples\">\n<h2>Usage &amp; Examples</h2>\n<div id=\"getting-a-client\">\n<h3>Getting a client</h3>\n<p>Wunderlist uses OAuth2 to allow applications to access users\u2019 data, so you\u2019ll need to <a href=\"https://developer.wunderlist.com/apps\" rel=\"nofollow\">create an application</a> before doing anything. If you only want to access your own Wunderlist, generate an access token after creating your application and use it and the client ID as follows:</p>\n<pre>import wunderpy2\napi = wunderpy2.WunderApi()\nclient = api.get_client(access_token, client_id)    # Fill in your values\n</pre>\n<p>If you want other Wunderlisters to use your application, you\u2019ll need to see the \u201cRedirect users to request Wunderlist access\u201d section of <a href=\"https://developer.wunderlist.com/documentation/concepts/authorization\" rel=\"nofollow\">the authorization docs</a> in order to get a temporary code when a user has authorized your app. Once you have the code, you only need one more step:</p>\n<pre>api = wunderpy2.WunderApi()\naccess_token = api.get_access_token(temporary_code, client_id, client_secret)   # Fill in your values here\nclient = api.get_client(access_token, client_id)    # Fill in your client ID\n</pre>\n</div>\n<div id=\"wunderlist-objects\">\n<h3>Wunderlist Objects</h3>\n<p>All Wunderlist objects are merely Python objects with special keys. For convenience, these keys are laid out in a class format in <code>model.py</code>. Note that not every object will have every key (e.g. List objects with type \u2018inbox\u2019 do not have creation metadata).</p>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Creating a task with a due date, note, \u2018starred\u2019 flag, and subtask:</p>\n<pre>lists = client.get_lists()\nlist = lists[0]\ntask = client.create_task(1234, \"My new task\", due_date=\"2015-08-02\", starred=True)\nclient.create_note(task[wunderpy2.Task.ID], \"My note\")\nclient.create_subtask(task[wunderpy2.Task.ID], \"My subtask\")\n</pre>\n<p>Shuffling the order of tasks within a list (see <a href=\"https://developer.wunderlist.com/documentation/endpoints/positions\" rel=\"nofollow\">the Positions endpoint documentation</a>):</p>\n<pre>import random\ntask_positions_obj = client.get_task_positions_obj(list[wunderpy2.List.ID])\nordering = task_positions_obj[wunderpy2.Task.VALUES]\nrandom.shuffle(ordering)\nclient.update_task_positions_obj(task_positions_obj[wunderpy2.TaskPositionsObj.ID], task_positions_obj[wunderpy2.TaskPositionsObj.REVISION], ordering)\n</pre>\n</div>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li><dl>\n<dt>Endpoint implementation:</dt>\n<dd><ul>\n<li>Avatar</li>\n<li>File</li>\n<li>File preview</li>\n<li>Folder</li>\n<li>Reminder</li>\n<li>Task comment</li>\n<li>Upload</li>\n<li>User</li>\n<li>Webhooks?</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"release-history\">\n<h2>Release History</h2>\n<p>0.1.6 (2018-07-27)\n\u2014\n* Fix typo in RecurrenceTypes class name</p>\n<p>0.1.5 (2018-07-27)\n\u2014\n* Switch from <cite>dict.iteritems()</cite> to <cite>dict.items()</cite> for Python 2 &amp; 3 compatibility\n* Expose a few more classes in the public-facing API</p>\n<div id=\"id1\">\n<h3>0.1.4 (2016-03-14)</h3>\n<ul>\n<li>Bugfix in task endpoint code</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.3 (2016-03-12)</h3>\n<ul>\n<li>Fix imports for Python 3</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.2 (2015-10-31)</h3>\n<ul>\n<li>Added \u2018position\u2019 endpoint</li>\n<li>Added \u2018subtask\u2019 endpoint</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.1 (2015-08-16)</h3>\n<ul>\n<li>Fixed setup.py requiring \u2018argparse\u2019 module for Python &gt;2.6</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1.0 (2015-08-15)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n<p>wunderpy2 is written and maintained by <a href=\"https://github.com/mieubrisse\" rel=\"nofollow\">mieubrisse</a></p>\n</div>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<p>Nobody yet!</p>\n</div>\n\n          </div>"}, "last_serial": 4108334, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "f80027faaab7bffd3bddbb6eaea0aada", "sha256": "e92315452b9ac99421afee0fd0c9ceea7f9fb83305d9c011a9b902eb47ca5711"}, "downloads": -1, "filename": "wunderpy2-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f80027faaab7bffd3bddbb6eaea0aada", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11014, "upload_time": "2015-08-16T18:32:10", "upload_time_iso_8601": "2015-08-16T18:32:10.531997Z", "url": "https://files.pythonhosted.org/packages/24/d0/5b259317bfc91f81c6b1668845184d1b0b07bf4d4db37aa8396482e2bdf7/wunderpy2-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7f9c0d05aa32b8f65bb5a1546f498eb", "sha256": "d5e14a3b3c4c829b295a05d53749ced643fff28ba610903731092af5295cbb42"}, "downloads": -1, "filename": "wunderpy2-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a7f9c0d05aa32b8f65bb5a1546f498eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8690, "upload_time": "2015-08-16T18:31:58", "upload_time_iso_8601": "2015-08-16T18:31:58.899378Z", "url": "https://files.pythonhosted.org/packages/2a/3f/62aa6fb6e2448c1be0afbcc8cef396efe736496e444231901b16b61ed339/wunderpy2-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "2380dfb6cd6aa7a86544705294a3f30d", "sha256": "c46b888c4f4c8a10ad9c2030efe4a329b8cad2d0e42b61b466dfc4aaa43710cc"}, "downloads": -1, "filename": "wunderpy2-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2380dfb6cd6aa7a86544705294a3f30d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16543, "upload_time": "2015-10-31T23:02:30", "upload_time_iso_8601": "2015-10-31T23:02:30.660759Z", "url": "https://files.pythonhosted.org/packages/b6/a3/b079f2cc4802d8d3d619cba8adc32c146082d340943a89c1543e137b6d44/wunderpy2-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb8b5c984329de16af5aee7c18fd10a8", "sha256": "c5fca5df3a182eb1a92353db8aab44dfee3d3f16e5e9308a49354d54d3894eeb"}, "downloads": -1, "filename": "wunderpy2-0.1.2.tar.gz", "has_sig": false, "md5_digest": "eb8b5c984329de16af5aee7c18fd10a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12499, "upload_time": "2015-10-31T23:02:36", "upload_time_iso_8601": "2015-10-31T23:02:36.886892Z", "url": "https://files.pythonhosted.org/packages/04/da/81db51e1dffc8cb41c6efa9fbaf4201eadb467584d4bf507b8acd4b9c4e6/wunderpy2-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "313275c972685e11ede7df6f1529a271", "sha256": "ac8a8dba5214f9dca05b44493a4821c3e249ce89ebcf961e032a4235d62b2d74"}, "downloads": -1, "filename": "wunderpy2-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "313275c972685e11ede7df6f1529a271", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16580, "upload_time": "2016-03-12T19:14:28", "upload_time_iso_8601": "2016-03-12T19:14:28.091073Z", "url": "https://files.pythonhosted.org/packages/0a/a4/238ee1c01d83ca5215804b23b7122c1c18c21681779152c2b53850e09042/wunderpy2-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e7781a7a53793494c108ce0bf426de2", "sha256": "783d597059a9e934bf5f4712e340bc90d946b59db0ffd42445c2ceb1d53d17f7"}, "downloads": -1, "filename": "wunderpy2-0.1.3.tar.gz", "has_sig": false, "md5_digest": "0e7781a7a53793494c108ce0bf426de2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12494, "upload_time": "2016-03-12T19:14:34", "upload_time_iso_8601": "2016-03-12T19:14:34.280693Z", "url": "https://files.pythonhosted.org/packages/6f/cf/2a98e9ae2c2b4586921f284a686a09391ee9116bc3168c9cd9f324d89f66/wunderpy2-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "b4621fb0b6696b4b255f985d6835c3d6", "sha256": "ee3cb0bb7fa6f64ee1b2e55ab3b4075c81bb8f0208c949a215fa348518e79190"}, "downloads": -1, "filename": "wunderpy2-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b4621fb0b6696b4b255f985d6835c3d6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16593, "upload_time": "2016-03-14T17:32:05", "upload_time_iso_8601": "2016-03-14T17:32:05.719568Z", "url": "https://files.pythonhosted.org/packages/b7/ea/0a2f9a28ab3ede3ebed7229a5eea1ef24af9c15bd594e7266c47daa7b493/wunderpy2-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a9a6a299923a1cad11bbbddfa847bab", "sha256": "c4f35b2eef18d529e68adce50481f9903ad8793c9a29dbb291b185357ecfd02d"}, "downloads": -1, "filename": "wunderpy2-0.1.4.tar.gz", "has_sig": false, "md5_digest": "0a9a6a299923a1cad11bbbddfa847bab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12487, "upload_time": "2016-03-14T17:32:20", "upload_time_iso_8601": "2016-03-14T17:32:20.334309Z", "url": "https://files.pythonhosted.org/packages/24/85/bec05630998e2e5a104873d1b723219bc2cff325e58b75c33d4ab0641ef6/wunderpy2-0.1.4.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "3f9fc7522df1528824c6061a52ee1e20", "sha256": "ffefc0c099e4876aa98a486bed5442cd0d18d9a469b750ed195c5ad4b3ea4567"}, "downloads": -1, "filename": "wunderpy2-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3f9fc7522df1528824c6061a52ee1e20", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17000, "upload_time": "2018-07-27T11:32:10", "upload_time_iso_8601": "2018-07-27T11:32:10.423186Z", "url": "https://files.pythonhosted.org/packages/f1/51/8585e5e11dcd9f292420022de390f8ddfcb6e8be8bb821a60df65f78b8b5/wunderpy2-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b194f4b4664d9612fbfbd6e262accf0", "sha256": "8845c5d2f9794de3c42f206bc3387b364e8f01817728ac7e3be6980bdbb9dd43"}, "downloads": -1, "filename": "wunderpy2-0.1.6.tar.gz", "has_sig": false, "md5_digest": "1b194f4b4664d9612fbfbd6e262accf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12649, "upload_time": "2018-07-27T11:32:11", "upload_time_iso_8601": "2018-07-27T11:32:11.932815Z", "url": "https://files.pythonhosted.org/packages/70/69/21a3150434f585d3400c2a694dd4410b50fe22a1ccca8cf262c4e7084677/wunderpy2-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3f9fc7522df1528824c6061a52ee1e20", "sha256": "ffefc0c099e4876aa98a486bed5442cd0d18d9a469b750ed195c5ad4b3ea4567"}, "downloads": -1, "filename": "wunderpy2-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3f9fc7522df1528824c6061a52ee1e20", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17000, "upload_time": "2018-07-27T11:32:10", "upload_time_iso_8601": "2018-07-27T11:32:10.423186Z", "url": "https://files.pythonhosted.org/packages/f1/51/8585e5e11dcd9f292420022de390f8ddfcb6e8be8bb821a60df65f78b8b5/wunderpy2-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b194f4b4664d9612fbfbd6e262accf0", "sha256": "8845c5d2f9794de3c42f206bc3387b364e8f01817728ac7e3be6980bdbb9dd43"}, "downloads": -1, "filename": "wunderpy2-0.1.6.tar.gz", "has_sig": false, "md5_digest": "1b194f4b4664d9612fbfbd6e262accf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12649, "upload_time": "2018-07-27T11:32:11", "upload_time_iso_8601": "2018-07-27T11:32:11.932815Z", "url": "https://files.pythonhosted.org/packages/70/69/21a3150434f585d3400c2a694dd4410b50fe22a1ccca8cf262c4e7084677/wunderpy2-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:26:46 2020"}