{"info": {"author": "cupcakearmy", "author_email": "hi@nicco.io", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# tumbo\n\nDocker matrix build generator\n\n```yaml\nvariables:\n    my_var:\n        - a\n        - b\n        - c\n    some_other:\n        - 0.1.0\n        - 0.1.2\n\ncontext: ./build\nrecipe: './Dockerfile.j2'\ntag: \"my-tag:{{ my_var }}-{{ some_other }}\"\n\nparallel: no\n# no\n# yes : uses all threads available\n# n : number of threads to use\n# default: yes\n\npush: yes\nrun: yes\nregistry:\n    username: my_user\n    password: my_pass\n    host: my_host\n```\n\n## \ud83d\udcd8 Config Reference\n\n### Variables\n\nThe variables to build the matrix. Simply specify an array for each variable. They will be available in the template.\n\n```yaml\nvariables:\n    my_var:\n        - a\n        - b\n        - c\n    some_other:\n        - 0.1.0\n        - 0.1.2\n```\n\n### Recipe\n\nThe template to compile the dockerfile. Can be a template itself if you don't want to write everything in the same file.\n\n###### Simple\n\n```yaml\nrecipe: './Dockerfile.j2'\n```\n\n###### Template\n\n```yaml\nvariables:\n    my_var:\n        - a\n        - b\n\nrecipe: './{{ my_var }}.j2'\n```\n\nAssuming `my_var` hast the values `a` and `b` it will render to `./a.j2` and `./b.j2` accordingly.\n\n### Context (Optional)\n\n**Default:** directory of the config file.\n\nSpecify the directory where the templates and the dockerfiles will be built.\nSupports both absolute and relative paths.\n\n```yaml\ncontext: ./build\n```\n\n### Tag (Optional)\n\n**Default:** Creates a tag that includes all variables.\nIn most cases it will not be necessary to specify, but can be usefull if your are pushing images. Supports templating of course.\n\n**Important:** The tag should be unique across the matrix, otherwise you will overwrite other tags. So always include all the variables you specified inside the image name\n\n```yaml\nvariables:\n    var1:\n        - a\n        - b\n    var2:\n        - a\n        - b\n    var3:\n        - a\n        - b\n\ntag: 'my-image-name:{{ var3 }}-{{ var1 }}-{{ var2 }}'\n```\n\n### Parallel (Optional)\n\n**Default:** yes\n\nWhether the builds/push/runs should run in parallel or after each other.\n\n###### no\n\nParallel off.\n\n```yaml\nparallel: no\n```\n\n\n###### yes\n\nUses all the threads available on the machine.\n\n```yaml\nparallel: yes\n```\n\n\n###### number\n\nUses how many thread you specify\n\n```yaml\nparallel: 2\n```\n\n### run (Optional)\n\n**Default:** no\n\nWether to run the docker image after building. Can be usefull if running automated tests.\n\n```yaml\nrun: yes\n```\n\n### push (Optional)\n\n**Default:** no\n\nWether to push the docker image after building.\nCan be used to push images to the docker registry (or your own).\nSee below on how to login.\n\n```yaml\nrun: yes\n```\n\n### registry (Optional)\n\n**Default:** Empty\n\nCredentials for `docker login`. Used to push images and to specify a custom registry if necessary.\n\n```yaml\nregistry:\n    username: my_user\n    password: my_pass\n    host: my_host\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cupcakearmy/tumbo", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "tumbo", "package_url": "https://pypi.org/project/tumbo/", "platform": "", "project_url": "https://pypi.org/project/tumbo/", "project_urls": {"Homepage": "https://github.com/cupcakearmy/tumbo"}, "release_url": "https://pypi.org/project/tumbo/0.7/", "requires_dist": ["Jinja2 (==2.10.3)", "PyYAML (==5.2)", "termcolor (==1.1.0)"], "requires_python": ">=3.6", "summary": "Matrix builder for docker", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>tumbo</h1>\n<p>Docker matrix build generator</p>\n<pre><span class=\"nt\">variables</span><span class=\"p\">:</span>\n    <span class=\"nt\">my_var</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">a</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">b</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">c</span>\n    <span class=\"nt\">some_other</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">0.1.0</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">0.1.2</span>\n\n<span class=\"nt\">context</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">./build</span>\n<span class=\"nt\">recipe</span><span class=\"p\">:</span> <span class=\"s\">'./Dockerfile.j2'</span>\n<span class=\"nt\">tag</span><span class=\"p\">:</span> <span class=\"s\">\"my-tag:{{</span><span class=\"nv\"> </span><span class=\"s\">my_var</span><span class=\"nv\"> </span><span class=\"s\">}}-{{</span><span class=\"nv\"> </span><span class=\"s\">some_other</span><span class=\"nv\"> </span><span class=\"s\">}}\"</span>\n\n<span class=\"nt\">parallel</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">no</span>\n<span class=\"c1\"># no</span>\n<span class=\"c1\"># yes : uses all threads available</span>\n<span class=\"c1\"># n : number of threads to use</span>\n<span class=\"c1\"># default: yes</span>\n\n<span class=\"nt\">push</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">yes</span>\n<span class=\"nt\">run</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">yes</span>\n<span class=\"nt\">registry</span><span class=\"p\">:</span>\n    <span class=\"nt\">username</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my_user</span>\n    <span class=\"nt\">password</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my_pass</span>\n    <span class=\"nt\">host</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my_host</span>\n</pre>\n<h2>\ud83d\udcd8 Config Reference</h2>\n<h3>Variables</h3>\n<p>The variables to build the matrix. Simply specify an array for each variable. They will be available in the template.</p>\n<pre><span class=\"nt\">variables</span><span class=\"p\">:</span>\n    <span class=\"nt\">my_var</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">a</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">b</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">c</span>\n    <span class=\"nt\">some_other</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">0.1.0</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">0.1.2</span>\n</pre>\n<h3>Recipe</h3>\n<p>The template to compile the dockerfile. Can be a template itself if you don't want to write everything in the same file.</p>\n<h6>Simple</h6>\n<pre><span class=\"nt\">recipe</span><span class=\"p\">:</span> <span class=\"s\">'./Dockerfile.j2'</span>\n</pre>\n<h6>Template</h6>\n<pre><span class=\"nt\">variables</span><span class=\"p\">:</span>\n    <span class=\"nt\">my_var</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">a</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">b</span>\n\n<span class=\"nt\">recipe</span><span class=\"p\">:</span> <span class=\"s\">'./{{</span><span class=\"nv\"> </span><span class=\"s\">my_var</span><span class=\"nv\"> </span><span class=\"s\">}}.j2'</span>\n</pre>\n<p>Assuming <code>my_var</code> hast the values <code>a</code> and <code>b</code> it will render to <code>./a.j2</code> and <code>./b.j2</code> accordingly.</p>\n<h3>Context (Optional)</h3>\n<p><strong>Default:</strong> directory of the config file.</p>\n<p>Specify the directory where the templates and the dockerfiles will be built.\nSupports both absolute and relative paths.</p>\n<pre><span class=\"nt\">context</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">./build</span>\n</pre>\n<h3>Tag (Optional)</h3>\n<p><strong>Default:</strong> Creates a tag that includes all variables.\nIn most cases it will not be necessary to specify, but can be usefull if your are pushing images. Supports templating of course.</p>\n<p><strong>Important:</strong> The tag should be unique across the matrix, otherwise you will overwrite other tags. So always include all the variables you specified inside the image name</p>\n<pre><span class=\"nt\">variables</span><span class=\"p\">:</span>\n    <span class=\"nt\">var1</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">a</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">b</span>\n    <span class=\"nt\">var2</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">a</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">b</span>\n    <span class=\"nt\">var3</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">a</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">b</span>\n\n<span class=\"nt\">tag</span><span class=\"p\">:</span> <span class=\"s\">'my-image-name:{{</span><span class=\"nv\"> </span><span class=\"s\">var3</span><span class=\"nv\"> </span><span class=\"s\">}}-{{</span><span class=\"nv\"> </span><span class=\"s\">var1</span><span class=\"nv\"> </span><span class=\"s\">}}-{{</span><span class=\"nv\"> </span><span class=\"s\">var2</span><span class=\"nv\"> </span><span class=\"s\">}}'</span>\n</pre>\n<h3>Parallel (Optional)</h3>\n<p><strong>Default:</strong> yes</p>\n<p>Whether the builds/push/runs should run in parallel or after each other.</p>\n<h6>no</h6>\n<p>Parallel off.</p>\n<pre><span class=\"nt\">parallel</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">no</span>\n</pre>\n<h6>yes</h6>\n<p>Uses all the threads available on the machine.</p>\n<pre><span class=\"nt\">parallel</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">yes</span>\n</pre>\n<h6>number</h6>\n<p>Uses how many thread you specify</p>\n<pre><span class=\"nt\">parallel</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">2</span>\n</pre>\n<h3>run (Optional)</h3>\n<p><strong>Default:</strong> no</p>\n<p>Wether to run the docker image after building. Can be usefull if running automated tests.</p>\n<pre><span class=\"nt\">run</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">yes</span>\n</pre>\n<h3>push (Optional)</h3>\n<p><strong>Default:</strong> no</p>\n<p>Wether to push the docker image after building.\nCan be used to push images to the docker registry (or your own).\nSee below on how to login.</p>\n<pre><span class=\"nt\">run</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">yes</span>\n</pre>\n<h3>registry (Optional)</h3>\n<p><strong>Default:</strong> Empty</p>\n<p>Credentials for <code>docker login</code>. Used to push images and to specify a custom registry if necessary.</p>\n<pre><span class=\"nt\">registry</span><span class=\"p\">:</span>\n    <span class=\"nt\">username</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my_user</span>\n    <span class=\"nt\">password</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my_pass</span>\n    <span class=\"nt\">host</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">my_host</span>\n</pre>\n\n          </div>"}, "last_serial": 6348736, "releases": {"0.7": [{"comment_text": "", "digests": {"md5": "8ad0612d8881977ff21d83d0c29f25a6", "sha256": "c562f5818dc449a8e787935d10a1c68727ed5e53a7ab4de053e46c726e0f07bb"}, "downloads": -1, "filename": "tumbo-0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "8ad0612d8881977ff21d83d0c29f25a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17963, "upload_time": "2019-12-22T22:39:04", "upload_time_iso_8601": "2019-12-22T22:39:04.333740Z", "url": "https://files.pythonhosted.org/packages/13/79/573ef55dfd23448ea73b7c792387f3fbbefc906a9c17b9a5289b0afecbc8/tumbo-0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9d386ac3a38baf6e89592eb30f0e5c2", "sha256": "19b926904f3941e28595c0bc699d62884d68b99fffa70359a7b43a3184877192"}, "downloads": -1, "filename": "tumbo-0.7.tar.gz", "has_sig": false, "md5_digest": "e9d386ac3a38baf6e89592eb30f0e5c2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4861, "upload_time": "2019-12-22T22:39:05", "upload_time_iso_8601": "2019-12-22T22:39:05.731250Z", "url": "https://files.pythonhosted.org/packages/ff/b8/fcf0f1dbc1d15e9ef21a4c19d2a0c1fc362b55ef9d179450f57346b02e94/tumbo-0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8ad0612d8881977ff21d83d0c29f25a6", "sha256": "c562f5818dc449a8e787935d10a1c68727ed5e53a7ab4de053e46c726e0f07bb"}, "downloads": -1, "filename": "tumbo-0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "8ad0612d8881977ff21d83d0c29f25a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17963, "upload_time": "2019-12-22T22:39:04", "upload_time_iso_8601": "2019-12-22T22:39:04.333740Z", "url": "https://files.pythonhosted.org/packages/13/79/573ef55dfd23448ea73b7c792387f3fbbefc906a9c17b9a5289b0afecbc8/tumbo-0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9d386ac3a38baf6e89592eb30f0e5c2", "sha256": "19b926904f3941e28595c0bc699d62884d68b99fffa70359a7b43a3184877192"}, "downloads": -1, "filename": "tumbo-0.7.tar.gz", "has_sig": false, "md5_digest": "e9d386ac3a38baf6e89592eb30f0e5c2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4861, "upload_time": "2019-12-22T22:39:05", "upload_time_iso_8601": "2019-12-22T22:39:05.731250Z", "url": "https://files.pythonhosted.org/packages/ff/b8/fcf0f1dbc1d15e9ef21a4c19d2a0c1fc362b55ef9d179450f57346b02e94/tumbo-0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:44:47 2020"}