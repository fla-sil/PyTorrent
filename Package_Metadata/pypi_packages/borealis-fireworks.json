{"info": {"author": "Jerry Morrison", "author_email": "j.erry.morrison@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Borealis\n\nRuns [FireWorks workflows](https://materialsproject.github.io/fireworks/) on\n[Google Compute Engine](https://cloud.google.com/compute/) (GCE).\n\nSee the repo [Borealis](https://github.com/CovertLab/borealis) and the\nPyPI page [borealis-fireworks](https://pypi.org/project/borealis-fireworks/).\n\n* _Borealis_ is the git repo name.\n* _borealis-fireworks_ is the PyPI package name.\n* _borealis-fireworker.service_ is the name of the systemd service.\n* _fireworker_ is the recommended process username and home directory name.\n\n\n## What is it?\n\n**[FireWorks](https://materialsproject.github.io/fireworks/)** is open-source\nsoftware for defining, managing, and executing workflows. Among the many\nworkflow systems, FireWorks is exceptionally straightforward, lightweight, and\nadaptable. It's well tested and supported. The only shared services it needs are\na MongoDB server (acting as the workflow \"LaunchPad\") and a file store.\n\n**Borealis** lets you spin up as many temporary worker machines as you want in\nthe [Google Cloud Platform](https://cloud.google.com/docs/) to run your\nworkflow. That means pay-per-use and no contention between workflows.\n\n\n## How does Borealis support workflows on Google Cloud Platform?\n\n**TL;DR:** Spin up worker machines when you need them, deploy your task code to\nthe workers in Docker Images, and store the data in Google Cloud Storage instead\nof NFS.\n\n\n**Worker VMs:** As a _cloud computing_ platform, [Google Compute\nEngine](https://cloud.google.com/compute/) (GCE) has a vast number of machines\navailable. You can spin up lots of GCE \"instances\" (also called Virtual Machines\nor VMs) to run your workflow, change your code, re-run some tasks, then let the\nworkers time out and shut down. Google will charge you based on usage and\nthere's no resource contention with your teammates.\n\nBorealis provides the `ComputeEngine` class and its command line wrapper `gce`\nto create, tweak, and delete groups of worker VMs.\n\nBorealis provides the `fireworker` Python script to run as the top level program\nof each worker. It calls FireWorks' `rlaunch` feature.\n\nYou can run these Fireworkers on and off GCE as long as they can connect to\nyour MongoDB server and to the data store for their input and output files.\n\n\n**Docker:** You need to deploy your payload task code to those GCE VMs. It\nmight be Python source code and its runtime environment, e.g. Python 3.8,\nPython pip packages, Linux apt packages, compiled\nCython code, data files, and environment variable settings. A GCE VM starts up\nfrom a **GCE Disk Image** which _could_ have all that preinstalled (with or\nwithout the Python source code) but it'd be hard to keep it up to date and\nhard to keep track of how to reproduce it.\n\nThis is what Docker Images are designed for. You maintain a `Dockerfile` containing\ninstructions to build the Docker Image, then use the **Google Cloud Build**\nservice to build the Image and store it in the **Google Container Registry**.\n\nBorealis provides the `DockerTask` Firetask to run a task in Docker. It\npulls a named Docker Image, starts up a Docker Container, runs a given shell\ncommand in that Container, and shuts down the Container. Running in a Container\nalso isolates the task's runtime environment and side effects from the\nFireworker and other tasks.\n\n\n\n**Google Cloud Storage:** Although you _can_ set up an NFS shared file service\nfor the workers' files, **Google Cloud Storage** (GCS) is the native storage\nservice. GCS costs literally 1/10th as much as NFS service and it scales up\nbetter. GCS lets you archive your files in yet lower cost tiers intended for\ninfrequent access. Pretty much all of Google's cloud services revolve around GCS,\ne.g., Pub/Sub can trigger an action on a particular upload to GCS.\n\nBut Cloud Storage is not a file system. It's an _object store_ with a light\nweight protocol to fetch/store/list whole files, called \"blobs.\" It does not\nsupport simultaneous writers. Instead, the last \"store\" of a blob wins. Blob\npathnames can contain `/` characters but GCS doesn't have actual directory objects,\nso e.g. there's no way to atomically rename a directory.\n\n`DockerTask` supports Cloud Storage by fetching the task's input files from GCS\nand storing its output files to GCS.\n\nYou can access your GCS files via the\n[gsutil](https://cloud.google.com/storage/docs/gsutil) command line tool, the\n[gcsfuse](https://github.com/GoogleCloudPlatform/gcsfuse) mounting tool, and the\n[Storage Browser](https://console.cloud.google.com/storage/browser) in the\n[Google Cloud Platform web console](https://console.cloud.google.com/home/dashboard).\n\n\n**Logging:** `DockerTask` logs the Container's stdout and stderr, and\n`fireworker` sets up Python logging to write to Google's\n**StackDriver** logging service so you can watch all your workers running in real\ntime.\n\n\n**Projects:** With Google Cloud Platform, you set up a _project_ for your team\nto use. All services, VMs, data, and access controls are scoped by the project.\n\n\n## How to run a workflow\n\nAfter doing one-time setup, the steps to run a workflow are:\n\n1. Build a Docker container Image containing your payload task code to run in\nthe workflow. The `gcloud builds submit` command will upload your code and a\n`Dockerfile`, then trigger a Google Cloud Build server server to build the\nDocker Image and store it in the Google Container Registry.\n\n1. Build your workflow and upload it to MongoDB.\nYou can do this manually by writing a `.yaml` file and running the `lpad`\ncommand line tool, or automate it as a workflow builder that calls FireWorks\nAPIs to construct a `Workflow` object and upload it.\n\n   The workflow will run instances of the `DockerTask` Firetask.\n\n   If you need to open a secure ssh tunnel to the MongoDB server running in\na Google Compute Engine VM, use the `borealis/setup/example_mongo_ssh.sh`\nshell script.\n\n1. Start one or more `fireworker` processes to do the work.\nYou can run the `fireworker` Python script locally (which is handy for\ndebugging) or launch Compute Engine VMs that run `fireworker` (handy for\nrunning lots of tasks in parallel).\n\n   You can run the Python script `gce` to launch a batch of workers, or\nautomate it by calling its `ComputeEngine` class from your workflow builder.\n\n\n## More detail on the Borealis components\n\n**gce:**\nThe `ComputeEngine` class and its command line wrapper `gce` will\ncreate, tweak, and delete a group of worker VMs.\n\nAfter you generate a workflow, call FireWorks' `LaunchPad.add_wf()`\n(or run FireWorks' `lpad add` command line tool) to upload it to the\nLaunchPad. Then call `ComputeEngine.create()` (or the `gce` command line)\nto spin up a batch of worker VMs to run the workflow.\nThis passes in parameters including the LaunchPad `host` and `name`.\n\n`ComputeEngine` and `gce` can also immediately delete a batch of worker\nVMs or ask them to quit cleanly between Firetasks, although the workers will\nshut down on their own after an idle timeout.\n\n`ComputeEngine` and `gce` can also set GCE metadata fields on a batch of\nworkers. This is used to implement the `--quit-soon` feature.\n\n\n**fireworker:**\nBorealis provides the `fireworker` Python script to run as as the top level\nprogram of each worker.\n`fireworker` reads the worker launch parameters and calls the FireWorks library\nto \"rapidfire\" launch your FireWorks \"rockets.\" It also handles server shutdown.\n\n`fireworker` connects Python logging to Google Cloud's\nStackDriver logging so you can watch all your worker machines in real time.\n\nTo run `fireworker` on GCE VMs, you'll need to create a GCE Disk Image that\ncontains Python, the borealis-fireworks pip, and such. See the instructions in\n[how-to-install-gce-server.txt](borealis/setup/how-to-install-gce-server.txt).\n\nThe `fireworker` command can also run on your local computer for easier\ndebugging. For that, you'll need to install the `borealis-fireworks` pip and set\nup your computer to access the right Google Cloud Project.\n\n\n**DockerTask:**\nThe `DockerTask` Firetask pulls a named Docker Image, starts up a Docker\nContainer, runs a given shell command in that Container, and stops the container.\n\nDocker always runs a shell command in the Container. If you want to run a\n`Firetask` in the Container, include a little Python script to bridge the gap:\nTake a Firetask name and a JSON dictionary as command line arguments,\ninstantiate the Firetask with those arguments, and call the Firetask's\n`run_task()` method.\n\n`DockerTask` supports Google Cloud Storage (GCS) by fetching the task's input\nfiles from GCS, mapping it into the Docker Container, running the task, and\nstoring its\noutput files to GCS. This requires you to declare the input and output paths.\n(A workflow builder can use these declarations to compute the task\ninterdependencies that FireWorks needs.)\n\nFor each path you specify in DockerTask's `inputs` and `outputs`,\nit denotes a directory tree of files iff it ends with a `/`.\n\nWhen storing task output files, `DockerTask` creates blobs with names ending in\n`/` to act as \"directory placeholders\" to speed up tree-oriented traversal.\nThis means you can run\n[gcsfuse](https://github.com/GoogleCloudPlatform/gcsfuse) without using the\n`--implicit-dirs` flag, resulting in mounted directories that run 10x faster.\n\n`DockerTask` imposes a given timeout on the task running in the Docker\ncontainer.\n\n`DockerTask` logs the Container's stdout and stderr to a file and to Python\nlogging (which `fireworker` connects to **StackDriver**).\n\n\n## Team Setup\n\nTODO:\nInstall & configure dev tools,\ncreate a GCP project,\nauth stuff,\ninstall MongoDB on a GCE VM or set up Google-managed MongoDB,\ncreate a Fireworker disk image & image family,\n...\n\nSee [borealis/setup/how-to-install-gce-server.txt\n](borealis/setup/how-to-install-gce-server.txt) for detail instructions to set\nup your Compute Engine Disk Image and its \"Service Account\" for authorization.\n\nxxxxx to connect to the LaunchPad MongoDB server. Metadata parameters and the\nworker's `my_launchpad.yaml` file configure the Fireworker's\nMongoDB host, port, DB name, and idle timeout durations. Users can have their own DB names on a shared\nMongoDB server, and each user can have multiple DB names -- each an independent\nlaunchpad space for workflows and their Fireworker nodes.\n\n\n## Individual Developer Setup\n\nTODO:\nInstall & configure dev tools,\nmake a storage bucket with a globally-unique name,\nbuild a Docker image to run,\n...\n\n\n## Run\n\nTODO\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CovertLab/borealis", "keywords": "fireworks workflow", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "borealis-fireworks", "package_url": "https://pypi.org/project/borealis-fireworks/", "platform": "", "project_url": "https://pypi.org/project/borealis-fireworks/", "project_urls": {"Changelog": "https://github.com/CovertLab/borealis/blob/master/docs/changes.md", "Documentation": "https://github.com/CovertLab/borealis#borealis", "Homepage": "https://github.com/CovertLab/borealis", "Source": "https://github.com/CovertLab/borealis"}, "release_url": "https://pypi.org/project/borealis-fireworks/0.6.1/", "requires_dist": ["google-cloud-logging (>=1.14.0)", "google-cloud-storage (>=1.28.0)", "docker (>=4.1.0)", "FireWorks (>=1.9.5)", "requests (>=2.22.0)", "ruamel.yaml (>=0.16.9)", "subprocess32 (>=3.5.4)"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "summary": "Run FireWorks workflows in Google Cloud", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Borealis</h1>\n<p>Runs <a href=\"https://materialsproject.github.io/fireworks/\" rel=\"nofollow\">FireWorks workflows</a> on\n<a href=\"https://cloud.google.com/compute/\" rel=\"nofollow\">Google Compute Engine</a> (GCE).</p>\n<p>See the repo <a href=\"https://github.com/CovertLab/borealis\" rel=\"nofollow\">Borealis</a> and the\nPyPI page <a href=\"https://pypi.org/project/borealis-fireworks/\" rel=\"nofollow\">borealis-fireworks</a>.</p>\n<ul>\n<li><em>Borealis</em> is the git repo name.</li>\n<li><em>borealis-fireworks</em> is the PyPI package name.</li>\n<li><em>borealis-fireworker.service</em> is the name of the systemd service.</li>\n<li><em>fireworker</em> is the recommended process username and home directory name.</li>\n</ul>\n<h2>What is it?</h2>\n<p><strong><a href=\"https://materialsproject.github.io/fireworks/\" rel=\"nofollow\">FireWorks</a></strong> is open-source\nsoftware for defining, managing, and executing workflows. Among the many\nworkflow systems, FireWorks is exceptionally straightforward, lightweight, and\nadaptable. It's well tested and supported. The only shared services it needs are\na MongoDB server (acting as the workflow \"LaunchPad\") and a file store.</p>\n<p><strong>Borealis</strong> lets you spin up as many temporary worker machines as you want in\nthe <a href=\"https://cloud.google.com/docs/\" rel=\"nofollow\">Google Cloud Platform</a> to run your\nworkflow. That means pay-per-use and no contention between workflows.</p>\n<h2>How does Borealis support workflows on Google Cloud Platform?</h2>\n<p><strong>TL;DR:</strong> Spin up worker machines when you need them, deploy your task code to\nthe workers in Docker Images, and store the data in Google Cloud Storage instead\nof NFS.</p>\n<p><strong>Worker VMs:</strong> As a <em>cloud computing</em> platform, <a href=\"https://cloud.google.com/compute/\" rel=\"nofollow\">Google Compute\nEngine</a> (GCE) has a vast number of machines\navailable. You can spin up lots of GCE \"instances\" (also called Virtual Machines\nor VMs) to run your workflow, change your code, re-run some tasks, then let the\nworkers time out and shut down. Google will charge you based on usage and\nthere's no resource contention with your teammates.</p>\n<p>Borealis provides the <code>ComputeEngine</code> class and its command line wrapper <code>gce</code>\nto create, tweak, and delete groups of worker VMs.</p>\n<p>Borealis provides the <code>fireworker</code> Python script to run as the top level program\nof each worker. It calls FireWorks' <code>rlaunch</code> feature.</p>\n<p>You can run these Fireworkers on and off GCE as long as they can connect to\nyour MongoDB server and to the data store for their input and output files.</p>\n<p><strong>Docker:</strong> You need to deploy your payload task code to those GCE VMs. It\nmight be Python source code and its runtime environment, e.g. Python 3.8,\nPython pip packages, Linux apt packages, compiled\nCython code, data files, and environment variable settings. A GCE VM starts up\nfrom a <strong>GCE Disk Image</strong> which <em>could</em> have all that preinstalled (with or\nwithout the Python source code) but it'd be hard to keep it up to date and\nhard to keep track of how to reproduce it.</p>\n<p>This is what Docker Images are designed for. You maintain a <code>Dockerfile</code> containing\ninstructions to build the Docker Image, then use the <strong>Google Cloud Build</strong>\nservice to build the Image and store it in the <strong>Google Container Registry</strong>.</p>\n<p>Borealis provides the <code>DockerTask</code> Firetask to run a task in Docker. It\npulls a named Docker Image, starts up a Docker Container, runs a given shell\ncommand in that Container, and shuts down the Container. Running in a Container\nalso isolates the task's runtime environment and side effects from the\nFireworker and other tasks.</p>\n<p><strong>Google Cloud Storage:</strong> Although you <em>can</em> set up an NFS shared file service\nfor the workers' files, <strong>Google Cloud Storage</strong> (GCS) is the native storage\nservice. GCS costs literally 1/10th as much as NFS service and it scales up\nbetter. GCS lets you archive your files in yet lower cost tiers intended for\ninfrequent access. Pretty much all of Google's cloud services revolve around GCS,\ne.g., Pub/Sub can trigger an action on a particular upload to GCS.</p>\n<p>But Cloud Storage is not a file system. It's an <em>object store</em> with a light\nweight protocol to fetch/store/list whole files, called \"blobs.\" It does not\nsupport simultaneous writers. Instead, the last \"store\" of a blob wins. Blob\npathnames can contain <code>/</code> characters but GCS doesn't have actual directory objects,\nso e.g. there's no way to atomically rename a directory.</p>\n<p><code>DockerTask</code> supports Cloud Storage by fetching the task's input files from GCS\nand storing its output files to GCS.</p>\n<p>You can access your GCS files via the\n<a href=\"https://cloud.google.com/storage/docs/gsutil\" rel=\"nofollow\">gsutil</a> command line tool, the\n<a href=\"https://github.com/GoogleCloudPlatform/gcsfuse\" rel=\"nofollow\">gcsfuse</a> mounting tool, and the\n<a href=\"https://console.cloud.google.com/storage/browser\" rel=\"nofollow\">Storage Browser</a> in the\n<a href=\"https://console.cloud.google.com/home/dashboard\" rel=\"nofollow\">Google Cloud Platform web console</a>.</p>\n<p><strong>Logging:</strong> <code>DockerTask</code> logs the Container's stdout and stderr, and\n<code>fireworker</code> sets up Python logging to write to Google's\n<strong>StackDriver</strong> logging service so you can watch all your workers running in real\ntime.</p>\n<p><strong>Projects:</strong> With Google Cloud Platform, you set up a <em>project</em> for your team\nto use. All services, VMs, data, and access controls are scoped by the project.</p>\n<h2>How to run a workflow</h2>\n<p>After doing one-time setup, the steps to run a workflow are:</p>\n<ol>\n<li>\n<p>Build a Docker container Image containing your payload task code to run in\nthe workflow. The <code>gcloud builds submit</code> command will upload your code and a\n<code>Dockerfile</code>, then trigger a Google Cloud Build server server to build the\nDocker Image and store it in the Google Container Registry.</p>\n</li>\n<li>\n<p>Build your workflow and upload it to MongoDB.\nYou can do this manually by writing a <code>.yaml</code> file and running the <code>lpad</code>\ncommand line tool, or automate it as a workflow builder that calls FireWorks\nAPIs to construct a <code>Workflow</code> object and upload it.</p>\n<p>The workflow will run instances of the <code>DockerTask</code> Firetask.</p>\n<p>If you need to open a secure ssh tunnel to the MongoDB server running in\na Google Compute Engine VM, use the <code>borealis/setup/example_mongo_ssh.sh</code>\nshell script.</p>\n</li>\n<li>\n<p>Start one or more <code>fireworker</code> processes to do the work.\nYou can run the <code>fireworker</code> Python script locally (which is handy for\ndebugging) or launch Compute Engine VMs that run <code>fireworker</code> (handy for\nrunning lots of tasks in parallel).</p>\n<p>You can run the Python script <code>gce</code> to launch a batch of workers, or\nautomate it by calling its <code>ComputeEngine</code> class from your workflow builder.</p>\n</li>\n</ol>\n<h2>More detail on the Borealis components</h2>\n<p><strong>gce:</strong>\nThe <code>ComputeEngine</code> class and its command line wrapper <code>gce</code> will\ncreate, tweak, and delete a group of worker VMs.</p>\n<p>After you generate a workflow, call FireWorks' <code>LaunchPad.add_wf()</code>\n(or run FireWorks' <code>lpad add</code> command line tool) to upload it to the\nLaunchPad. Then call <code>ComputeEngine.create()</code> (or the <code>gce</code> command line)\nto spin up a batch of worker VMs to run the workflow.\nThis passes in parameters including the LaunchPad <code>host</code> and <code>name</code>.</p>\n<p><code>ComputeEngine</code> and <code>gce</code> can also immediately delete a batch of worker\nVMs or ask them to quit cleanly between Firetasks, although the workers will\nshut down on their own after an idle timeout.</p>\n<p><code>ComputeEngine</code> and <code>gce</code> can also set GCE metadata fields on a batch of\nworkers. This is used to implement the <code>--quit-soon</code> feature.</p>\n<p><strong>fireworker:</strong>\nBorealis provides the <code>fireworker</code> Python script to run as as the top level\nprogram of each worker.\n<code>fireworker</code> reads the worker launch parameters and calls the FireWorks library\nto \"rapidfire\" launch your FireWorks \"rockets.\" It also handles server shutdown.</p>\n<p><code>fireworker</code> connects Python logging to Google Cloud's\nStackDriver logging so you can watch all your worker machines in real time.</p>\n<p>To run <code>fireworker</code> on GCE VMs, you'll need to create a GCE Disk Image that\ncontains Python, the borealis-fireworks pip, and such. See the instructions in\n<a href=\"borealis/setup/how-to-install-gce-server.txt\" rel=\"nofollow\">how-to-install-gce-server.txt</a>.</p>\n<p>The <code>fireworker</code> command can also run on your local computer for easier\ndebugging. For that, you'll need to install the <code>borealis-fireworks</code> pip and set\nup your computer to access the right Google Cloud Project.</p>\n<p><strong>DockerTask:</strong>\nThe <code>DockerTask</code> Firetask pulls a named Docker Image, starts up a Docker\nContainer, runs a given shell command in that Container, and stops the container.</p>\n<p>Docker always runs a shell command in the Container. If you want to run a\n<code>Firetask</code> in the Container, include a little Python script to bridge the gap:\nTake a Firetask name and a JSON dictionary as command line arguments,\ninstantiate the Firetask with those arguments, and call the Firetask's\n<code>run_task()</code> method.</p>\n<p><code>DockerTask</code> supports Google Cloud Storage (GCS) by fetching the task's input\nfiles from GCS, mapping it into the Docker Container, running the task, and\nstoring its\noutput files to GCS. This requires you to declare the input and output paths.\n(A workflow builder can use these declarations to compute the task\ninterdependencies that FireWorks needs.)</p>\n<p>For each path you specify in DockerTask's <code>inputs</code> and <code>outputs</code>,\nit denotes a directory tree of files iff it ends with a <code>/</code>.</p>\n<p>When storing task output files, <code>DockerTask</code> creates blobs with names ending in\n<code>/</code> to act as \"directory placeholders\" to speed up tree-oriented traversal.\nThis means you can run\n<a href=\"https://github.com/GoogleCloudPlatform/gcsfuse\" rel=\"nofollow\">gcsfuse</a> without using the\n<code>--implicit-dirs</code> flag, resulting in mounted directories that run 10x faster.</p>\n<p><code>DockerTask</code> imposes a given timeout on the task running in the Docker\ncontainer.</p>\n<p><code>DockerTask</code> logs the Container's stdout and stderr to a file and to Python\nlogging (which <code>fireworker</code> connects to <strong>StackDriver</strong>).</p>\n<h2>Team Setup</h2>\n<p>TODO:\nInstall &amp; configure dev tools,\ncreate a GCP project,\nauth stuff,\ninstall MongoDB on a GCE VM or set up Google-managed MongoDB,\ncreate a Fireworker disk image &amp; image family,\n...</p>\n<p>See <a href=\"borealis/setup/how-to-install-gce-server.txt\" rel=\"nofollow\">borealis/setup/how-to-install-gce-server.txt\n</a> for detail instructions to set\nup your Compute Engine Disk Image and its \"Service Account\" for authorization.</p>\n<p>xxxxx to connect to the LaunchPad MongoDB server. Metadata parameters and the\nworker's <code>my_launchpad.yaml</code> file configure the Fireworker's\nMongoDB host, port, DB name, and idle timeout durations. Users can have their own DB names on a shared\nMongoDB server, and each user can have multiple DB names -- each an independent\nlaunchpad space for workflows and their Fireworker nodes.</p>\n<h2>Individual Developer Setup</h2>\n<p>TODO:\nInstall &amp; configure dev tools,\nmake a storage bucket with a globally-unique name,\nbuild a Docker image to run,\n...</p>\n<h2>Run</h2>\n<p>TODO</p>\n\n          </div>"}, "last_serial": 7186442, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2b261505194e39a33dfeb984f94b9c64", "sha256": "264a9727320fd4b713c18072eeee1d136b219117bb5c29df142fc435fd08bef0"}, "downloads": -1, "filename": "borealis_fireworks-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2b261505194e39a33dfeb984f94b9c64", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 28636, "upload_time": "2020-02-12T07:10:54", "upload_time_iso_8601": "2020-02-12T07:10:54.748507Z", "url": "https://files.pythonhosted.org/packages/ac/7b/890457ce17545d6737d5791f5953c53930141ab530403cf5fa467dbae8aa/borealis_fireworks-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2eb575a83a70f52e2ed4988756bce7e", "sha256": "7d005e9674d124e7116eac4be0f45fa7773d023cfac2feb95278b53a3d892269"}, "downloads": -1, "filename": "borealis-fireworks-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d2eb575a83a70f52e2ed4988756bce7e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 25102, "upload_time": "2020-02-12T07:10:57", "upload_time_iso_8601": "2020-02-12T07:10:57.005240Z", "url": "https://files.pythonhosted.org/packages/b0/fd/77d33dec9f78c9774bca34e98545f26ace53cf5ed49b31e69ed0d937a0c1/borealis-fireworks-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e6dfad64125fbd26ef61b3bac2f1eb25", "sha256": "c1ab862a5b945d32c34a72b8d270c2bf7e508e7513956c1dac33237dbd4b8a03"}, "downloads": -1, "filename": "borealis_fireworks-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e6dfad64125fbd26ef61b3bac2f1eb25", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 29131, "upload_time": "2020-02-13T22:57:11", "upload_time_iso_8601": "2020-02-13T22:57:11.545336Z", "url": "https://files.pythonhosted.org/packages/65/92/d4990005d3f1c4a33bf5054318d286d95a1fd44d5662f43b3e3c2afad892/borealis_fireworks-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21568618803087185c8869a0e69548b9", "sha256": "e2f7472123326386ca688eea9393428ced6402b287bdbe32a0d9139a4eb6d7e5"}, "downloads": -1, "filename": "borealis-fireworks-0.1.1.tar.gz", "has_sig": false, "md5_digest": "21568618803087185c8869a0e69548b9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 25488, "upload_time": "2020-02-13T22:57:12", "upload_time_iso_8601": "2020-02-13T22:57:12.655050Z", "url": "https://files.pythonhosted.org/packages/a3/b1/248e91ed60be88d6313a874a1507715a34ffedafb0d0759e8d027edb28cb/borealis-fireworks-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "11f42ee316abf56582fe1c72c767f01d", "sha256": "a7711acc843c613a8715a9e0356b0b9e145c5b2409c105ceafcb98438e7729c5"}, "downloads": -1, "filename": "borealis_fireworks-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "11f42ee316abf56582fe1c72c767f01d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 29538, "upload_time": "2020-02-14T07:20:00", "upload_time_iso_8601": "2020-02-14T07:20:00.306392Z", "url": "https://files.pythonhosted.org/packages/0b/01/68302a5a286009b73d81d11c8782709a5d6d41dec2fbcc86557227cc1566/borealis_fireworks-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85b0d6cf0b5931e9ae960391213aa652", "sha256": "226727f76cf2b5efc403e3f0ff9c2214a7d9e0621e231dad56531afda26864af"}, "downloads": -1, "filename": "borealis-fireworks-0.2.0.tar.gz", "has_sig": false, "md5_digest": "85b0d6cf0b5931e9ae960391213aa652", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 26094, "upload_time": "2020-02-14T07:20:01", "upload_time_iso_8601": "2020-02-14T07:20:01.778888Z", "url": "https://files.pythonhosted.org/packages/bd/fa/95bd09702d89da64465ee222d1f8bc8275cfad05a355f47e4d2856311dec/borealis-fireworks-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "69658a1540ab8145660915165103cb71", "sha256": "dc6803eae0e608f1a18517b1827dcb803532d5ff90864587bd1b8ead0dbd3763"}, "downloads": -1, "filename": "borealis_fireworks-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "69658a1540ab8145660915165103cb71", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 29559, "upload_time": "2020-02-14T07:52:12", "upload_time_iso_8601": "2020-02-14T07:52:12.164850Z", "url": "https://files.pythonhosted.org/packages/71/d2/65c8b186183f9341e18243705ec4bbd09b817f4c9588f760407198a7af6a/borealis_fireworks-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db411a1de1cbd4162bd954ae745a227a", "sha256": "30581a1f815106dda8941841f07106b316ea2a5d976e710f8d5d0b59ac021012"}, "downloads": -1, "filename": "borealis-fireworks-0.2.1.tar.gz", "has_sig": false, "md5_digest": "db411a1de1cbd4162bd954ae745a227a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 26195, "upload_time": "2020-02-14T07:52:13", "upload_time_iso_8601": "2020-02-14T07:52:13.677344Z", "url": "https://files.pythonhosted.org/packages/37/e3/7e3475db0929c0bb72690a330b661fd7b1d2b53122f2a9a90f5c8d0c3ef3/borealis-fireworks-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "ed883fbd78b1a3481ed34fb5baf3a83d", "sha256": "35ee44ec3b4dce0aef37e380af71da1de5abbaf9c399ae8542ed5827246b6bcf"}, "downloads": -1, "filename": "borealis_fireworks-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ed883fbd78b1a3481ed34fb5baf3a83d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 30504, "upload_time": "2020-02-15T05:45:36", "upload_time_iso_8601": "2020-02-15T05:45:36.572769Z", "url": "https://files.pythonhosted.org/packages/6d/39/e07ec44fe4d4ef1924a5fb562840eafb77a6cc94b9caa9fe9ac677dbea3b/borealis_fireworks-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "770e844b88b5187191433abfa9d849ef", "sha256": "cdc05a2ead2f4b4ada9fd47160ba00cc3d88dbd3b28bfa5466ab76eebd8b3be2"}, "downloads": -1, "filename": "borealis-fireworks-0.3.0.tar.gz", "has_sig": false, "md5_digest": "770e844b88b5187191433abfa9d849ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 27046, "upload_time": "2020-02-15T05:45:37", "upload_time_iso_8601": "2020-02-15T05:45:37.546603Z", "url": "https://files.pythonhosted.org/packages/27/16/6cb923f3ce084618e05b520e60e6505eca90272848401c08c9ed618938ae/borealis-fireworks-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "3f67213b6f012dc3ad60c3ebc0c3cb24", "sha256": "d644175e751f9e476f7da6a14055be1a2388779e5a41c293dd748e31b0c72ce9"}, "downloads": -1, "filename": "borealis_fireworks-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3f67213b6f012dc3ad60c3ebc0c3cb24", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 30684, "upload_time": "2020-02-18T01:12:26", "upload_time_iso_8601": "2020-02-18T01:12:26.388021Z", "url": "https://files.pythonhosted.org/packages/f8/b9/134a2711f4d424549b168f04d83bca3024e7954f5b702679d807b8904f5f/borealis_fireworks-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d76b36379583a0f2aa275f41bf042938", "sha256": "e05399f7accd7707f7551612646011587fae2134750c180206b1973e728275ce"}, "downloads": -1, "filename": "borealis-fireworks-0.3.1.tar.gz", "has_sig": false, "md5_digest": "d76b36379583a0f2aa275f41bf042938", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 27311, "upload_time": "2020-02-18T01:12:27", "upload_time_iso_8601": "2020-02-18T01:12:27.916690Z", "url": "https://files.pythonhosted.org/packages/49/83/e4b60372527f00047227c74744894b0b924d5200609efa74a71a67c64cbd/borealis-fireworks-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "4b963b0060df8105135900bcae4dadb3", "sha256": "a87fd71ea6c22a0eaf9348980350d6750cd60d27d6ec6069b948999cdcb115f1"}, "downloads": -1, "filename": "borealis_fireworks-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4b963b0060df8105135900bcae4dadb3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 30972, "upload_time": "2020-02-18T06:31:41", "upload_time_iso_8601": "2020-02-18T06:31:41.656740Z", "url": "https://files.pythonhosted.org/packages/dd/7e/0641fbea4821c0dee2a1b7df1318e345327a4f713e0bf2bf4b220093a4f4/borealis_fireworks-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad714f22edab169de83cce9b8212afe9", "sha256": "d8b29ee835a6aa0a368abc438fc0f97a5bd6a1e6e15f67d7f8012e0bec2c2d33"}, "downloads": -1, "filename": "borealis-fireworks-0.3.2.tar.gz", "has_sig": false, "md5_digest": "ad714f22edab169de83cce9b8212afe9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 27583, "upload_time": "2020-02-18T06:31:43", "upload_time_iso_8601": "2020-02-18T06:31:43.047974Z", "url": "https://files.pythonhosted.org/packages/53/04/aab104e26413111fc7f663d62b5bfb35a8220eed9dbe9bf46d0628f25e17/borealis-fireworks-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "f87da9d7d3f20f4ca725391cf16a293b", "sha256": "b81f1acf525c8b0c6e5a19c49e34bc48316bc7f88b0a5426126d0a818f2e84d0"}, "downloads": -1, "filename": "borealis_fireworks-0.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f87da9d7d3f20f4ca725391cf16a293b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 31069, "upload_time": "2020-02-19T06:46:56", "upload_time_iso_8601": "2020-02-19T06:46:56.734257Z", "url": "https://files.pythonhosted.org/packages/83/6b/117f141250dcdf6077ff4e3b9b10b3190ab8df19f1da8ef82f498ddc3a8a/borealis_fireworks-0.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "990b51b4b49003964c6e760e269dec26", "sha256": "cf20a698b9ebb6508a13c2cc4cb22c8d0ac95137d4910d240f572a6d7e628c27"}, "downloads": -1, "filename": "borealis-fireworks-0.3.3.tar.gz", "has_sig": false, "md5_digest": "990b51b4b49003964c6e760e269dec26", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 27758, "upload_time": "2020-02-19T06:46:58", "upload_time_iso_8601": "2020-02-19T06:46:58.483132Z", "url": "https://files.pythonhosted.org/packages/4d/cd/05a5d03107fc31c5dda1877bc6fe6789e3bc8218a9483800f16c46ff7094/borealis-fireworks-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "39e722a9f6481738c68b7fadedf08903", "sha256": "6db318b5898936b73a5005fc33b17b5e42ce4dc44aa9ea06bff7c552dff2eefe"}, "downloads": -1, "filename": "borealis_fireworks-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "39e722a9f6481738c68b7fadedf08903", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 32943, "upload_time": "2020-02-24T04:57:27", "upload_time_iso_8601": "2020-02-24T04:57:27.031542Z", "url": "https://files.pythonhosted.org/packages/cb/a0/b6ac845293a3fd27c995b83624f5957b9ad51ad6591783faf1f5a0168e84/borealis_fireworks-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0ce45a995cc5299dbaedccc8c3934ae", "sha256": "fd5927f158b6927eaaf20fbe1dcaebe64e563a1ffb0a5cdec1006250287e17bd"}, "downloads": -1, "filename": "borealis-fireworks-0.4.0.tar.gz", "has_sig": false, "md5_digest": "c0ce45a995cc5299dbaedccc8c3934ae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 30021, "upload_time": "2020-02-24T04:57:28", "upload_time_iso_8601": "2020-02-24T04:57:28.791707Z", "url": "https://files.pythonhosted.org/packages/0c/6a/9997397e04d899475faf14eda7ad996b39d212a66835c68b5e8140db2b6a/borealis-fireworks-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "09cbc5e3008c8b9a89a0c21a7f276507", "sha256": "17b778fbda4d160e0b0f5b51775d3d9210c1067b37f7fca1c78bdb54caad7eba"}, "downloads": -1, "filename": "borealis_fireworks-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "09cbc5e3008c8b9a89a0c21a7f276507", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 34906, "upload_time": "2020-04-27T00:45:46", "upload_time_iso_8601": "2020-04-27T00:45:46.647744Z", "url": "https://files.pythonhosted.org/packages/30/b5/914e06dfb140731ef0ea6d81bc4fe6d29e448d9cc42e8f63f253e660d1e6/borealis_fireworks-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12e8596afb6dba2d01b67c9309ee761d", "sha256": "8e3c7b24e3b628427c52d61650f270262f9d92c5056e9660606996207ae4fc99"}, "downloads": -1, "filename": "borealis-fireworks-0.5.0.tar.gz", "has_sig": false, "md5_digest": "12e8596afb6dba2d01b67c9309ee761d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 35028, "upload_time": "2020-04-27T00:45:47", "upload_time_iso_8601": "2020-04-27T00:45:47.757151Z", "url": "https://files.pythonhosted.org/packages/bd/ab/d0cb58eb23cdd69241d0ddf7f4e2ac8f8ca9dabb45206b691e263c3c7a17/borealis-fireworks-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "a8227b72c66889ea14195cbd9759f26a", "sha256": "be44bf1cfd335c03159d25247e65281514abe318f59ddd3860f099bffdec4fb8"}, "downloads": -1, "filename": "borealis_fireworks-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a8227b72c66889ea14195cbd9759f26a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 35001, "upload_time": "2020-04-28T06:37:11", "upload_time_iso_8601": "2020-04-28T06:37:11.699613Z", "url": "https://files.pythonhosted.org/packages/f2/94/345d241284b31246ff3b25dab9f3dbbd2de3a395891e2ab07f848204f0ed/borealis_fireworks-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8ddf601a131465e1b01da908bf7aa22", "sha256": "968dc06cae3d8338708ee18c141321b815d7329b5f6864a73bdeb422bc24c3c3"}, "downloads": -1, "filename": "borealis-fireworks-0.5.1.tar.gz", "has_sig": false, "md5_digest": "a8ddf601a131465e1b01da908bf7aa22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 35361, "upload_time": "2020-04-28T06:37:13", "upload_time_iso_8601": "2020-04-28T06:37:13.412761Z", "url": "https://files.pythonhosted.org/packages/13/6b/7ab02e540625b91d083bc8954f747bea6900c181d1d2fb8d0f083db160c4/borealis-fireworks-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "cb9d3a0ff8d427a0fb768b64e64c200d", "sha256": "9c489da1463b470ffdec217ae5df5a1ecc97dfd02919fb755db4c8703a2017f5"}, "downloads": -1, "filename": "borealis_fireworks-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cb9d3a0ff8d427a0fb768b64e64c200d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 35086, "upload_time": "2020-05-06T00:09:11", "upload_time_iso_8601": "2020-05-06T00:09:11.469788Z", "url": "https://files.pythonhosted.org/packages/05/19/9246690898f43fa005ed4907f6d5ea17b739ab6aa247fc0ec31184a6efdb/borealis_fireworks-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c01c2fd84c5731d4a6b2f2de26c4ee62", "sha256": "d37937a63f1afd10a8c87eef18eb0f0cb4e1da73b2ca6dbc492e0aa95afdbfa8"}, "downloads": -1, "filename": "borealis-fireworks-0.6.0.tar.gz", "has_sig": false, "md5_digest": "c01c2fd84c5731d4a6b2f2de26c4ee62", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 35426, "upload_time": "2020-05-06T00:09:12", "upload_time_iso_8601": "2020-05-06T00:09:12.609143Z", "url": "https://files.pythonhosted.org/packages/02/f4/5b4cc49928e823b17c27243b5736615f8991bf9111ca18eb27a0d7225865/borealis-fireworks-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "d1ae86284c96ea1324eaaa7a59a0efe4", "sha256": "bc633667cbaa7ea7eb49552da92212f0f0fa2e2fc9bb6d0143bc58f46eadd9f1"}, "downloads": -1, "filename": "borealis_fireworks-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d1ae86284c96ea1324eaaa7a59a0efe4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 36410, "upload_time": "2020-05-07T08:27:59", "upload_time_iso_8601": "2020-05-07T08:27:59.887778Z", "url": "https://files.pythonhosted.org/packages/ad/5d/8479922b399a18cdb599af3c2a0a9e907942b3b16167725362c284cb6963/borealis_fireworks-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "015a89fa49023b2185a5a7342f7e2d38", "sha256": "2878e1ab4e091cd0fe8d282dddf0642f245996c4dfe31e940ba2c98ec85dad22"}, "downloads": -1, "filename": "borealis-fireworks-0.6.1.tar.gz", "has_sig": false, "md5_digest": "015a89fa49023b2185a5a7342f7e2d38", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 36652, "upload_time": "2020-05-07T08:28:01", "upload_time_iso_8601": "2020-05-07T08:28:01.398141Z", "url": "https://files.pythonhosted.org/packages/b2/be/8e4b8d7babbdc51625843de92f73df21e16cdbd7f1feea480d4fabdc18c6/borealis-fireworks-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d1ae86284c96ea1324eaaa7a59a0efe4", "sha256": "bc633667cbaa7ea7eb49552da92212f0f0fa2e2fc9bb6d0143bc58f46eadd9f1"}, "downloads": -1, "filename": "borealis_fireworks-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d1ae86284c96ea1324eaaa7a59a0efe4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 36410, "upload_time": "2020-05-07T08:27:59", "upload_time_iso_8601": "2020-05-07T08:27:59.887778Z", "url": "https://files.pythonhosted.org/packages/ad/5d/8479922b399a18cdb599af3c2a0a9e907942b3b16167725362c284cb6963/borealis_fireworks-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "015a89fa49023b2185a5a7342f7e2d38", "sha256": "2878e1ab4e091cd0fe8d282dddf0642f245996c4dfe31e940ba2c98ec85dad22"}, "downloads": -1, "filename": "borealis-fireworks-0.6.1.tar.gz", "has_sig": false, "md5_digest": "015a89fa49023b2185a5a7342f7e2d38", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 36652, "upload_time": "2020-05-07T08:28:01", "upload_time_iso_8601": "2020-05-07T08:28:01.398141Z", "url": "https://files.pythonhosted.org/packages/b2/be/8e4b8d7babbdc51625843de92f73df21e16cdbd7f1feea480d4fabdc18c6/borealis-fireworks-0.6.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:41 2020"}