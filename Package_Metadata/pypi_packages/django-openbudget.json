{"info": {"author": "Evan Davey", "author_email": "evan.davey@cochranedavey.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "[GNUCash]: http://www.gnucash.org\n\n#Open Budget\n\nSimple django-based personal budgeting app that uses [GNUCash][] sqlite data files.\n\n#Motivation\nThis project serves two main purposes:\n\n1. get data out of gnucash and into the django framework to allow for more flexible analysis eg: using the numpy maths library\n\n2. implement basic budget functionality to allow a flexible budgeted vs actual report\n\nGNUCash works as a good tool for data entry and standard accounting reports like balance sheets and profit & loss. However, report customisation is overly complicated and the budget functionality poor.  This project aims to address these issues.\n\n\n#Status\n\n*  basic structure implemented - a gnucash file can be used to import accounts, transactions and splits\n\n\n#Installation\n\n\t$  git clone git://github.com/evandavey/OpenBudget.git openbudget\n\t$  cd openbudget\n \t$  pip install -r requirements/development.txt\n\nIf fabric is installed:\n\n\t$  fab development syncdb\n\t$  fab development migratedb\n\nOtherwise:\n\n\t$  ./manage.py syncdb --settings=openbudget.settings_local\n\t$  ./manage.py schemamigration openbudgetapp --settings=openbudget.settings_local\n\n\n#Usage\n\n##Running the server\n\nIf fabric is installed:\n\n\t$  fab development runserver\n\t\nOtherwise:\n\n\t$  ./manage.py runserver 0.0.0.0:8080 --settings=openbudget.settings_local\n\n\nAccess the admin interface at: http://127.0.0.0.1:8080/admin/\n\n##Importing a gnucash file\n\nSave your GNUCash file as a sqlite3 file.\n\n\t$ ./manage.py gnucash-import <gnucash sql file> --settings=openbudget.settings_local\n\t\n\n##Creating budgets\n\n*  Access the admin interface at: http://127.0.0.0.1:8080/admin/ and create or edit AccountBudget objects.\n\n*  Budgets are specified as a total value over a given period.\n\n*  Total amounts will be spread daily over a given analysis period for reporting eg: a yearly budget value will be converted to 365 daily values which will then be multiplied by the number of days in a given month for a monthly report\n\n##The Budget Report\n\n* Access at http://127.0.0.0.1:8080/openbudget/budget/<startdate>/<enddate>/<depth>/<freq>\n\t\n* <startdate> and <enddate> specify the analysis period and should be in YYYYMMDD format\n\n* Depth specifies the depth of the account tree to report on.  \n\n* Freq will define the analysis grouping.  Use 'm' or monthly groups, 'q' for quarterly groups and 'y' for annual groups\n\t\n* For best results, the report should be produced over 6 periods eg: 6 years or 6 quarters or 6 months\n\n\n\n# Dependencies\n\n*  pip:\n\n\t$  easy_install pip\n\t\n*  To use the fabfile and fab commands:\n\n\t$  pip install fabric", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/evandavey/django-openbudget", "keywords": null, "license": "CC-SA-NC", "maintainer": null, "maintainer_email": null, "name": "django-openbudget", "package_url": "https://pypi.org/project/django-openbudget/", "platform": "any", "project_url": "https://pypi.org/project/django-openbudget/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/evandavey/django-openbudget"}, "release_url": "https://pypi.org/project/django-openbudget/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "A django app to import gnucash data for budgeting and reporting", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>[GNUCash]: <a href=\"http://www.gnucash.org\" rel=\"nofollow\">http://www.gnucash.org</a></p>\n<p>#Open Budget</p>\n<p>Simple django-based personal budgeting app that uses [GNUCash][] sqlite data files.</p>\n<p>#Motivation\nThis project serves two main purposes:</p>\n<ol>\n<li>get data out of gnucash and into the django framework to allow for more flexible analysis eg: using the numpy maths library</li>\n<li>implement basic budget functionality to allow a flexible budgeted vs actual report</li>\n</ol>\n<p>GNUCash works as a good tool for data entry and standard accounting reports like balance sheets and profit &amp; loss. However, report customisation is overly complicated and the budget functionality poor.  This project aims to address these issues.</p>\n<p>#Status</p>\n<ul>\n<li>basic structure implemented - a gnucash file can be used to import accounts, transactions and splits</li>\n</ul>\n<p>#Installation</p>\n<blockquote>\n$  git clone git://github.com/evandavey/OpenBudget.git openbudget\n$  cd openbudget\n$  pip install -r requirements/development.txt</blockquote>\n<p>If fabric is installed:</p>\n<blockquote>\n$  fab development syncdb\n$  fab development migratedb</blockquote>\n<p>Otherwise:</p>\n<blockquote>\n$  ./manage.py syncdb \u2013settings=openbudget.settings_local\n$  ./manage.py schemamigration openbudgetapp \u2013settings=openbudget.settings_local</blockquote>\n<p>#Usage</p>\n<p>##Running the server</p>\n<p>If fabric is installed:</p>\n<blockquote>\n$  fab development runserver</blockquote>\n<p>Otherwise:</p>\n<blockquote>\n$  ./manage.py runserver 0.0.0.0:8080 \u2013settings=openbudget.settings_local</blockquote>\n<p>Access the admin interface at: <a href=\"http://127.0.0.0.1:8080/admin/\" rel=\"nofollow\">http://127.0.0.0.1:8080/admin/</a></p>\n<p>##Importing a gnucash file</p>\n<p>Save your GNUCash file as a sqlite3 file.</p>\n<blockquote>\n$ ./manage.py gnucash-import &lt;gnucash sql file&gt; \u2013settings=openbudget.settings_local</blockquote>\n<p>##Creating budgets</p>\n<ul>\n<li>Access the admin interface at: <a href=\"http://127.0.0.0.1:8080/admin/\" rel=\"nofollow\">http://127.0.0.0.1:8080/admin/</a> and create or edit AccountBudget objects.</li>\n<li>Budgets are specified as a total value over a given period.</li>\n<li>Total amounts will be spread daily over a given analysis period for reporting eg: a yearly budget value will be converted to 365 daily values which will then be multiplied by the number of days in a given month for a monthly report</li>\n</ul>\n<p>##The Budget Report</p>\n<ul>\n<li>Access at <a href=\"http://127.0.0.0.1:8080/openbudget/budget\" rel=\"nofollow\">http://127.0.0.0.1:8080/openbudget/budget</a>/&lt;startdate&gt;/&lt;enddate&gt;/&lt;depth&gt;/&lt;freq&gt;</li>\n<li>&lt;startdate&gt; and &lt;enddate&gt; specify the analysis period and should be in YYYYMMDD format</li>\n<li>Depth specifies the depth of the account tree to report on.</li>\n<li>Freq will define the analysis grouping.  Use \u2018m\u2019 or monthly groups, \u2018q\u2019 for quarterly groups and \u2018y\u2019 for annual groups</li>\n<li>For best results, the report should be produced over 6 periods eg: 6 years or 6 quarters or 6 months</li>\n</ul>\n<p># Dependencies</p>\n<ul>\n<li><p>pip:</p>\n<blockquote>\n<p>$  easy_install pip</p>\n</blockquote>\n</li>\n<li><p>To use the fabfile and fab commands:</p>\n<blockquote>\n<p>$  pip install fabric</p>\n</blockquote>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 790213, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9e582eda172c3f748055d461426b61f1", "sha256": "9381086f993902ce26be3d1e83f046d08d678bf4f47ca8eb3dc428571b470e06"}, "downloads": -1, "filename": "django-openbudget-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9e582eda172c3f748055d461426b61f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24446, "upload_time": "2012-03-30T18:15:48", "upload_time_iso_8601": "2012-03-30T18:15:48.965256Z", "url": "https://files.pythonhosted.org/packages/ca/1f/75251bcebb508848350f975023413e31dac676b68e44164037e89a2a713e/django-openbudget-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9e582eda172c3f748055d461426b61f1", "sha256": "9381086f993902ce26be3d1e83f046d08d678bf4f47ca8eb3dc428571b470e06"}, "downloads": -1, "filename": "django-openbudget-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9e582eda172c3f748055d461426b61f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24446, "upload_time": "2012-03-30T18:15:48", "upload_time_iso_8601": "2012-03-30T18:15:48.965256Z", "url": "https://files.pythonhosted.org/packages/ca/1f/75251bcebb508848350f975023413e31dac676b68e44164037e89a2a713e/django-openbudget-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:30 2020"}