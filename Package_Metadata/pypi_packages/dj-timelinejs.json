{"info": {"author": "Ben Best", "author_email": "ben.best@gmail.com,", "bugtrack_url": null, "classifiers": [], "description": "dj-timelinejs\n=============\n\nSupport for [TimelineJS](http://timeline.verite.co/) served through Django.\n\n##Features\n\n* Support for TimelineJS title, era and normal slides\n* Support for markdown in slide content\n* Media upload and storage on Django site\n* Import existing TimelineJS Google Spreadsheets\n* Private/Public and Published/Unpublished timeline states\n\n##Basic Usage\n\nThis package supplies Django models and Class-Based-Views which make it easy to\nsave and serve up TimelineJS content from a Django site\n\n###Brief Installation Instructions\n\n1. pip install dj-timelinejs\n2. add `timelinejs` to your list of `INSTALLED_APPS` in `settings.py`\n3. `manage.py syncdb`\n4. Override urls and templates as noted below.\n\n###Adding Timelines\n\nThis package supports two storage methods for Timelines.\n\nThe preferred method is to store the timeline data directly in your Django\nsite. You may do this through the admin interface by creating a Timeline object\nin the Timelinejs admin panel. Timeline items are added through this same\ninterface. Item content can use markdown syntax for formatting. Media can added\nand it will be uploaded and serverd through your site, meaning users do not\nneed to find a way to host and link their media.\n\nThe second method is to use the Google Spreadsheet template as documented at\n[http://timeline.verite.co/#make](http://timeline.verite.co/#make) and simply\nset the `data_source` attribute on your Timeline instance to the url for the\nspreadsheet as indicated in the TimelineJS documentation. This is not preferred\nas markdown syntax is not implemented and loading a timeline will require an\nadditional request to fetch data from the Google Spreadsheet.\n\n\nIf you have existing timelines in Google Spreadsheets you may import them using\nthe `ImportTimelineFromSpreadsheet` view. Input the url of the Google\nSpreadsheet and valid items will be imported into the database and a new\ntimeline created.\n\n###Overriding URLS and Templates\n\nYou probably want to do your own url and template configuration. Class-Based-Views makes this easy.\n\n```python\n# your urls.py\nfrom timelinejs.views import TimelineListView, \\\n    TimelineDeTailView, ImportTimelineFromSpreadsheetView\n\nurls = patterns(''\n    (\n        r'^/$',\n        TimelineListView.as_view(template_name='list_template_name.html'),\n        name='timelines',\n    ),\n    (\n        r'^import/$',\n        ImportTimelineFromSpreadsheetView.as_view(template_name='import_template_name.html'),\n        name='import_timeline',\n    ),\n    (\n        r'^(?P<slug>[a-zA-Z0-9-_]+)/$',\n        TimelineView.as_view(template_name='detail_template_name.html'),\n        name='timeline',\n    ),\n)\n```\n\nUse the included templates as a sample and adjust based on your template setup.\nThere is no templatetag support since the configuration of TimelineJS is\ncomplicated and you may want to use tools such as django_compressor for static\nassets. A `Timeline` instance does have a `source` property which prints the\nGoogle Spreadsheet URL if your timeline is linked to a Google Spreadsheet, or\noutputs the appropriate JSON generated from the corresponding Django models.\nUse `timeline.html` as a reference, but many more config options are available,\nsee the TimelineJS documentation.\n\n\n###Permissions\n\nOn top of the default permissions (add, change, remove which apply through the\nDjango admin) dj-timelinejs includes a `view_private_timelines` permission that\ntoggles whether or not a user sees private timelines.\n\nUsers with the `add_timeline` permission will also be allowed to use the import\nfunction, and a `user_can_add_timelines` context variable is passed to the\n`TimlineListView` if you wish to include a link to the admin page for adding\ntimelines. See the timelines.html template as an example.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/azundo/dj-timelinejs/", "keywords": null, "license": "BSD license and MPL 2.0, see LICENSE", "maintainer": null, "maintainer_email": null, "name": "dj-timelinejs", "package_url": "https://pypi.org/project/dj-timelinejs/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dj-timelinejs/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/azundo/dj-timelinejs/"}, "release_url": "https://pypi.org/project/dj-timelinejs/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Support for serving TimelineJS from Django sites.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            dj-timelinejs<br>=============<br><br>Support for [TimelineJS](http://timeline.verite.co/) served through Django.<br><br>##Features<br><br>* Support for TimelineJS title, era and normal slides<br>* Support for markdown in slide content<br>* Media upload and storage on Django site<br>* Import existing TimelineJS Google Spreadsheets<br>* Private/Public and Published/Unpublished timeline states<br><br>##Basic Usage<br><br>This package supplies Django models and Class-Based-Views which make it easy to<br>save and serve up TimelineJS content from a Django site<br><br>###Brief Installation Instructions<br><br>1. pip install dj-timelinejs<br>2. add `timelinejs` to your list of `INSTALLED_APPS` in `settings.py`<br>3. `manage.py syncdb`<br>4. Override urls and templates as noted below.<br><br>###Adding Timelines<br><br>This package supports two storage methods for Timelines.<br><br>The preferred method is to store the timeline data directly in your Django<br>site. You may do this through the admin interface by creating a Timeline object<br>in the Timelinejs admin panel. Timeline items are added through this same<br>interface. Item content can use markdown syntax for formatting. Media can added<br>and it will be uploaded and serverd through your site, meaning users do not<br>need to find a way to host and link their media.<br><br>The second method is to use the Google Spreadsheet template as documented at<br>[http://timeline.verite.co/#make](http://timeline.verite.co/#make) and simply<br>set the `data_source` attribute on your Timeline instance to the url for the<br>spreadsheet as indicated in the TimelineJS documentation. This is not preferred<br>as markdown syntax is not implemented and loading a timeline will require an<br>additional request to fetch data from the Google Spreadsheet.<br><br><br>If you have existing timelines in Google Spreadsheets you may import them using<br>the `ImportTimelineFromSpreadsheet` view. Input the url of the Google<br>Spreadsheet and valid items will be imported into the database and a new<br>timeline created.<br><br>###Overriding URLS and Templates<br><br>You probably want to do your own url and template configuration. Class-Based-Views makes this easy.<br><br>```python<br># your urls.py<br>from timelinejs.views import TimelineListView, \\<br>    TimelineDeTailView, ImportTimelineFromSpreadsheetView<br><br>urls = patterns(''<br>    (<br>        r'^/$',<br>        TimelineListView.as_view(template_name='list_template_name.html'),<br>        name='timelines',<br>    ),<br>    (<br>        r'^import/$',<br>        ImportTimelineFromSpreadsheetView.as_view(template_name='import_template_name.html'),<br>        name='import_timeline',<br>    ),<br>    (<br>        r'^(?P&lt;slug&gt;[a-zA-Z0-9-_]+)/$',<br>        TimelineView.as_view(template_name='detail_template_name.html'),<br>        name='timeline',<br>    ),<br>)<br>```<br><br>Use the included templates as a sample and adjust based on your template setup.<br>There is no templatetag support since the configuration of TimelineJS is<br>complicated and you may want to use tools such as django_compressor for static<br>assets. A `Timeline` instance does have a `source` property which prints the<br>Google Spreadsheet URL if your timeline is linked to a Google Spreadsheet, or<br>outputs the appropriate JSON generated from the corresponding Django models.<br>Use `timeline.html` as a reference, but many more config options are available,<br>see the TimelineJS documentation.<br><br><br>###Permissions<br><br>On top of the default permissions (add, change, remove which apply through the<br>Django admin) dj-timelinejs includes a `view_private_timelines` permission that<br>toggles whether or not a user sees private timelines.<br><br>Users with the `add_timeline` permission will also be allowed to use the import<br>function, and a `user_can_add_timelines` context variable is passed to the<br>`TimlineListView` if you wish to include a link to the admin page for adding<br>timelines. See the timelines.html template as an example.\n          </div>"}, "last_serial": 844565, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2dbe73005fe5a6cc99081ec98fef3316", "sha256": "832873559410133eeadd797085014664c8167171e8d51062d16e68f23dc9ed88"}, "downloads": -1, "filename": "dj-timelinejs-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2dbe73005fe5a6cc99081ec98fef3316", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 377895, "upload_time": "2013-08-20T22:12:59", "upload_time_iso_8601": "2013-08-20T22:12:59.893108Z", "url": "https://files.pythonhosted.org/packages/0b/55/5fba51212702705791d5bbb9d431bffb2eb3dc46b6ee6af9b7bf458c1a6e/dj-timelinejs-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "29b3488f638c26051fc78e8bbf20aaaa", "sha256": "5cb60d9700c2a97cb4e105becc31eae52df05a62eecfd97568c5c4d3f2b35b6a"}, "downloads": -1, "filename": "dj-timelinejs-0.1.1.tar.gz", "has_sig": false, "md5_digest": "29b3488f638c26051fc78e8bbf20aaaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 377921, "upload_time": "2013-08-20T22:28:21", "upload_time_iso_8601": "2013-08-20T22:28:21.913802Z", "url": "https://files.pythonhosted.org/packages/2a/a7/710ba6badb46994b528cce28cfcf037da84fc2b8b5ad6d654108662f3861/dj-timelinejs-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "0a1a0f9f68da8b9c6790981234774223", "sha256": "11a0a7ac655c6e5714246043cb765f9a9ae9d4072b0c1340902f114607100b48"}, "downloads": -1, "filename": "dj-timelinejs-0.1.2.tar.gz", "has_sig": false, "md5_digest": "0a1a0f9f68da8b9c6790981234774223", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 378875, "upload_time": "2013-08-20T22:33:37", "upload_time_iso_8601": "2013-08-20T22:33:37.470721Z", "url": "https://files.pythonhosted.org/packages/e8/12/ebdaa0e9ba4dea55726798e0bc17abda16b04597b1b83a70277fef1c6acb/dj-timelinejs-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a1a0f9f68da8b9c6790981234774223", "sha256": "11a0a7ac655c6e5714246043cb765f9a9ae9d4072b0c1340902f114607100b48"}, "downloads": -1, "filename": "dj-timelinejs-0.1.2.tar.gz", "has_sig": false, "md5_digest": "0a1a0f9f68da8b9c6790981234774223", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 378875, "upload_time": "2013-08-20T22:33:37", "upload_time_iso_8601": "2013-08-20T22:33:37.470721Z", "url": "https://files.pythonhosted.org/packages/e8/12/ebdaa0e9ba4dea55726798e0bc17abda16b04597b1b83a70277fef1c6acb/dj-timelinejs-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:25 2020"}