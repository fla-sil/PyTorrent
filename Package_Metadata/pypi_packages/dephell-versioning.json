{"info": {"author": "Gram", "author_email": "master_fess@mail.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Framework :: Setuptools Plugin", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "\ndephell_versioning\n------------------\n\n\n.. image:: https://travis-ci.org/dephell/dephell_versioning.svg?branch=master\n   :target: https://travis-ci.org/dephell/dephell_versioning\n   :alt: travis\n\n\n.. image:: https://ci.appveyor.com/api/projects/status/github/dephell/dephell_versioning?svg=true\n   :target: https://ci.appveyor.com/project/orsinium/dephell-versioning\n   :alt: appveyor\n\n\n.. image:: https://img.shields.io/pypi/l/dephell-versioning.svg\n   :target: https://github.com/dephell/dephell_versioning/blob/master/LICENSE\n   :alt: MIT License\n\n\nLibrary for bumping project version.\n\nAvailable schemes:\n\n\n* ``calver``\n* ``comver``\n* ``pep``\n* ``roman``\n* ``romver``\n* ``semver``\n* ``serial``\n* ``zerover``\n\nAvailable rules (and aliases):\n\n\n* ``init`` -- initialize versioning\n* Main parts:\n\n  * ``major`` (\\ ``breaking``\\ )\n  * ``minor`` (\\ ``feature``\\ )\n  * ``patch`` (\\ ``fix``\\ , ``micro``\\ )\n\n* Additional parts:\n\n  * ``dev``\n  * ``local``\n  * ``post``\n\n* Pre-release management:\n\n  * ``pre`` (\\ ``rc``\\ , ``alpha``\\ , ``beta``\\ )\n  * ``premajor`` (\\ ``prebreaking``\\ )\n  * ``preminor`` (\\ ``prefeature``\\ )\n  * ``prepatch`` (\\ ``prefix``\\ , ``premicro``\\ )\n  * ``release``\n\nRead more about schemes and rules in the documentation for `dephell project bump <https://dephell.readthedocs.io/en/latest/cmd-project-bump.html>`_.\n\nInstallation\n------------\n\ninstall from `PyPI <https://pypi.org/project/dephell-versioning/>`_\\ :\n\n.. code-block:: bash\n\n   python3 -m pip install --user dephell_versioning\n\nUsage\n-----\n\nGet available schemes, rules, and aliases:\n\n.. code-block:: python\n\n   from dephell_versioning import get_aliases, get_rules, get_schemes\n   get_schemes()\n   # frozenset({'roman', 'pep', ..., 'comver'})\n\n   get_rules()\n   # frozenset({'local', 'minor', ..., 'dev', 'preminor'})\n\n   get_aliases()\n   # frozenset({'alpha', 'rc', ..., 'micro', 'breaking'})\n\n   # get rules for some scheme:\n   get_rules(scheme='calver')\n   # frozenset({'major', 'patch', 'init'})\n\n   # get aliases for specific rules:\n   get_aliases(rules={'major', 'minor'})\n   # frozenset({'feature', 'breaking'})\n\nBump version:\n\n.. code-block:: python\n\n   from dephell_versioning import bump_version\n\n   bump_version(version='1.2.3', rule='minor', scheme='semver')\n   # '1.3.0'\n\n   # pass aliase instead of rule:\n   bump_version(version='1.2.3', rule='feature', scheme='semver')\n   # '1.3.0'\n\n   # start rule from `+` to attach local version number:\n   bump_version(version='1.2.3', rule='+456', scheme='semver')\n   # '1.2.3+456'\n\n   # for `init` version is optional\n   bump_version(version='', rule='init', scheme='semver')\n   # '0.1.0'\n\nBump version in a python file:\n\n.. code-block:: python\n\n   from dephell_versioning import bump_file\n   from pathlib import Path\n\n   # returns `True` if version was bumped\n   bump_file(path=Path('dephell_versioning', '__init__.py'), old='0.1.0', new='0.1.1')\n   # True\n\n   # old version is optional: any version will be bumped if old isn't found\n   bump_file(path=Path('dephell_versioning', '__init__.py'), old='', new='0.1.2')\n   # True\n\nUse `dephell_discover <https://github.com/dephell/dephell_discover>`_ to find out the current version in a python project:\n\n.. code-block:: python\n\n   from dephell_discover import Root\n   from pathlib import Path\n   root = Root(path=Path(), name='dephell_discover')\n\n   # root.metainfo can be None if project isn't found in the given directory\n   if root.metainfo:\n       print(root.metainfo.version)\n   # '0.1.2'\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "dephell,packaging,version,versions,versioning,bump,bumping", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dephell-versioning", "package_url": "https://pypi.org/project/dephell-versioning/", "platform": "", "project_url": "https://pypi.org/project/dephell-versioning/", "project_urls": {"Repository": "https://github.com/dephell/dephell_versioning"}, "release_url": "https://pypi.org/project/dephell-versioning/0.1.1/", "requires_dist": ["packaging"], "requires_python": ">=3.5", "summary": "Library for bumping project version like a pro", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"dephell-versioning\">\n<h2>dephell_versioning</h2>\n<a href=\"https://travis-ci.org/dephell/dephell_versioning\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/281f490b740d468c2b06c1b3b6368a2fb0671040/68747470733a2f2f7472617669732d63692e6f72672f64657068656c6c2f64657068656c6c5f76657273696f6e696e672e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/orsinium/dephell-versioning\" rel=\"nofollow\"><img alt=\"appveyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/56aa0bbacbd9427d2af9f8d09e7ba2b3b37f1ad7/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f64657068656c6c2f64657068656c6c5f76657273696f6e696e673f7376673d74727565\"></a>\n<a href=\"https://github.com/dephell/dephell_versioning/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"MIT License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4cc41f00dcec4492bd316659c50bb099d90a4622/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f64657068656c6c2d76657273696f6e696e672e737667\"></a>\n<p>Library for bumping project version.</p>\n<p>Available schemes:</p>\n<ul>\n<li><tt>calver</tt></li>\n<li><tt>comver</tt></li>\n<li><tt>pep</tt></li>\n<li><tt>roman</tt></li>\n<li><tt>romver</tt></li>\n<li><tt>semver</tt></li>\n<li><tt>serial</tt></li>\n<li><tt>zerover</tt></li>\n</ul>\n<p>Available rules (and aliases):</p>\n<ul>\n<li><tt>init</tt> \u2013 initialize versioning</li>\n<li>Main parts:<ul>\n<li><tt>major</tt> (<tt>breaking</tt>)</li>\n<li><tt>minor</tt> (<tt>feature</tt>)</li>\n<li><tt>patch</tt> (<tt>fix</tt>, <tt>micro</tt>)</li>\n</ul>\n</li>\n<li>Additional parts:<ul>\n<li><tt>dev</tt></li>\n<li><tt>local</tt></li>\n<li><tt>post</tt></li>\n</ul>\n</li>\n<li>Pre-release management:<ul>\n<li><tt>pre</tt> (<tt>rc</tt>, <tt>alpha</tt>, <tt>beta</tt>)</li>\n<li><tt>premajor</tt> (<tt>prebreaking</tt>)</li>\n<li><tt>preminor</tt> (<tt>prefeature</tt>)</li>\n<li><tt>prepatch</tt> (<tt>prefix</tt>, <tt>premicro</tt>)</li>\n<li><tt>release</tt></li>\n</ul>\n</li>\n</ul>\n<p>Read more about schemes and rules in the documentation for <a href=\"https://dephell.readthedocs.io/en/latest/cmd-project-bump.html\" rel=\"nofollow\">dephell project bump</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>install from <a href=\"https://pypi.org/project/dephell-versioning/\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>python3 -m pip install --user dephell_versioning\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Get available schemes, rules, and aliases:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dephell_versioning</span> <span class=\"kn\">import</span> <span class=\"n\">get_aliases</span><span class=\"p\">,</span> <span class=\"n\">get_rules</span><span class=\"p\">,</span> <span class=\"n\">get_schemes</span>\n<span class=\"n\">get_schemes</span><span class=\"p\">()</span>\n<span class=\"c1\"># frozenset({'roman', 'pep', ..., 'comver'})</span>\n\n<span class=\"n\">get_rules</span><span class=\"p\">()</span>\n<span class=\"c1\"># frozenset({'local', 'minor', ..., 'dev', 'preminor'})</span>\n\n<span class=\"n\">get_aliases</span><span class=\"p\">()</span>\n<span class=\"c1\"># frozenset({'alpha', 'rc', ..., 'micro', 'breaking'})</span>\n\n<span class=\"c1\"># get rules for some scheme:</span>\n<span class=\"n\">get_rules</span><span class=\"p\">(</span><span class=\"n\">scheme</span><span class=\"o\">=</span><span class=\"s1\">'calver'</span><span class=\"p\">)</span>\n<span class=\"c1\"># frozenset({'major', 'patch', 'init'})</span>\n\n<span class=\"c1\"># get aliases for specific rules:</span>\n<span class=\"n\">get_aliases</span><span class=\"p\">(</span><span class=\"n\">rules</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'major'</span><span class=\"p\">,</span> <span class=\"s1\">'minor'</span><span class=\"p\">})</span>\n<span class=\"c1\"># frozenset({'feature', 'breaking'})</span>\n</pre>\n<p>Bump version:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dephell_versioning</span> <span class=\"kn\">import</span> <span class=\"n\">bump_version</span>\n\n<span class=\"n\">bump_version</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s1\">'1.2.3'</span><span class=\"p\">,</span> <span class=\"n\">rule</span><span class=\"o\">=</span><span class=\"s1\">'minor'</span><span class=\"p\">,</span> <span class=\"n\">scheme</span><span class=\"o\">=</span><span class=\"s1\">'semver'</span><span class=\"p\">)</span>\n<span class=\"c1\"># '1.3.0'</span>\n\n<span class=\"c1\"># pass aliase instead of rule:</span>\n<span class=\"n\">bump_version</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s1\">'1.2.3'</span><span class=\"p\">,</span> <span class=\"n\">rule</span><span class=\"o\">=</span><span class=\"s1\">'feature'</span><span class=\"p\">,</span> <span class=\"n\">scheme</span><span class=\"o\">=</span><span class=\"s1\">'semver'</span><span class=\"p\">)</span>\n<span class=\"c1\"># '1.3.0'</span>\n\n<span class=\"c1\"># start rule from `+` to attach local version number:</span>\n<span class=\"n\">bump_version</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s1\">'1.2.3'</span><span class=\"p\">,</span> <span class=\"n\">rule</span><span class=\"o\">=</span><span class=\"s1\">'+456'</span><span class=\"p\">,</span> <span class=\"n\">scheme</span><span class=\"o\">=</span><span class=\"s1\">'semver'</span><span class=\"p\">)</span>\n<span class=\"c1\"># '1.2.3+456'</span>\n\n<span class=\"c1\"># for `init` version is optional</span>\n<span class=\"n\">bump_version</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">rule</span><span class=\"o\">=</span><span class=\"s1\">'init'</span><span class=\"p\">,</span> <span class=\"n\">scheme</span><span class=\"o\">=</span><span class=\"s1\">'semver'</span><span class=\"p\">)</span>\n<span class=\"c1\"># '0.1.0'</span>\n</pre>\n<p>Bump version in a python file:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dephell_versioning</span> <span class=\"kn\">import</span> <span class=\"n\">bump_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"c1\"># returns `True` if version was bumped</span>\n<span class=\"n\">bump_file</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'dephell_versioning'</span><span class=\"p\">,</span> <span class=\"s1\">'__init__.py'</span><span class=\"p\">),</span> <span class=\"n\">old</span><span class=\"o\">=</span><span class=\"s1\">'0.1.0'</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"s1\">'0.1.1'</span><span class=\"p\">)</span>\n<span class=\"c1\"># True</span>\n\n<span class=\"c1\"># old version is optional: any version will be bumped if old isn't found</span>\n<span class=\"n\">bump_file</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'dephell_versioning'</span><span class=\"p\">,</span> <span class=\"s1\">'__init__.py'</span><span class=\"p\">),</span> <span class=\"n\">old</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"s1\">'0.1.2'</span><span class=\"p\">)</span>\n<span class=\"c1\"># True</span>\n</pre>\n<p>Use <a href=\"https://github.com/dephell/dephell_discover\" rel=\"nofollow\">dephell_discover</a> to find out the current version in a python project:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dephell_discover</span> <span class=\"kn\">import</span> <span class=\"n\">Root</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">Root</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">Path</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'dephell_discover'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># root.metainfo can be None if project isn't found in the given directory</span>\n<span class=\"k\">if</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">metainfo</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">metainfo</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">)</span>\n<span class=\"c1\"># '0.1.2'</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5638616, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7db6777d3bd7534418dc1e13f394d7e8", "sha256": "b771376fff5096568dfe49776b033ef46bd3ead16a31db7da7c6618d6c1d2dfb"}, "downloads": -1, "filename": "dephell_versioning-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7db6777d3bd7534418dc1e13f394d7e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 10672, "upload_time": "2019-06-24T15:37:37", "upload_time_iso_8601": "2019-06-24T15:37:37.327941Z", "url": "https://files.pythonhosted.org/packages/7e/e3/f150c4eb40f8d157e9e8544e8858654be320411f95a8d3a852349b394319/dephell_versioning-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1561fac871769960055b77f90d9f6c0c", "sha256": "ea0d97e7ecdbce503afb90fd14430b4c88924047e004f6060eeb5699d1746330"}, "downloads": -1, "filename": "dephell_versioning-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1561fac871769960055b77f90d9f6c0c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12413, "upload_time": "2019-06-24T15:37:40", "upload_time_iso_8601": "2019-06-24T15:37:40.014025Z", "url": "https://files.pythonhosted.org/packages/fe/31/68627152a66a7a03ca30314938661c5951a301154e7544802bb47572454d/dephell_versioning-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b1d33eebc2a15e2bb820ce8e2a8f286a", "sha256": "dd22263a273abcf792304093447400f230e69d930ba3a800191173c4b3b3ecd3"}, "downloads": -1, "filename": "dephell_versioning-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b1d33eebc2a15e2bb820ce8e2a8f286a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11531, "upload_time": "2019-08-06T09:22:47", "upload_time_iso_8601": "2019-08-06T09:22:47.585974Z", "url": "https://files.pythonhosted.org/packages/ec/d3/bb53406efcb32984ad9f088cc8c825ce1d19a3587d9488a21cf2cd8095fa/dephell_versioning-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e4eaa94c1cefdadd332cc3f0eedde0f", "sha256": "c438a39662fdf88b00196b56ece4e542db8fa9b16ee5c164a834451240026848"}, "downloads": -1, "filename": "dephell_versioning-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8e4eaa94c1cefdadd332cc3f0eedde0f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13179, "upload_time": "2019-08-06T09:22:49", "upload_time_iso_8601": "2019-08-06T09:22:49.338063Z", "url": "https://files.pythonhosted.org/packages/d5/87/71be36572487671ddf8a38920a08371c24e2cae64771d33b9bdcfcff8e33/dephell_versioning-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b1d33eebc2a15e2bb820ce8e2a8f286a", "sha256": "dd22263a273abcf792304093447400f230e69d930ba3a800191173c4b3b3ecd3"}, "downloads": -1, "filename": "dephell_versioning-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b1d33eebc2a15e2bb820ce8e2a8f286a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11531, "upload_time": "2019-08-06T09:22:47", "upload_time_iso_8601": "2019-08-06T09:22:47.585974Z", "url": "https://files.pythonhosted.org/packages/ec/d3/bb53406efcb32984ad9f088cc8c825ce1d19a3587d9488a21cf2cd8095fa/dephell_versioning-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e4eaa94c1cefdadd332cc3f0eedde0f", "sha256": "c438a39662fdf88b00196b56ece4e542db8fa9b16ee5c164a834451240026848"}, "downloads": -1, "filename": "dephell_versioning-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8e4eaa94c1cefdadd332cc3f0eedde0f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13179, "upload_time": "2019-08-06T09:22:49", "upload_time_iso_8601": "2019-08-06T09:22:49.338063Z", "url": "https://files.pythonhosted.org/packages/d5/87/71be36572487671ddf8a38920a08371c24e2cae64771d33b9bdcfcff8e33/dephell_versioning-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:04 2020"}