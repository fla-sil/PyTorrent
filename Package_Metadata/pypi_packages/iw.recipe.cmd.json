{"info": {"author": "Ingeniweb", "author_email": "support@ingeniweb.com", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "WARNING: This package is deprecated. You should use `collective.recipe.cmd <http://pypi.python.org/pypi/collective.recipe.cmd/>`_\r\n\r\n.. contents::\r\n\r\n.. Note to recipe author!\r\n   ---------------------\r\n   Update the following URLs to point to your:\r\n   \r\n   - code repository\r\n   - bug tracker \r\n   - questions/comments feedback mail \r\n   (do not set a real mail, to avoid spams)\r\n\r\n   Or remove it if not used.\r\n\r\n- Code repository: https://ingeniweb.svn.sourceforge.net/svnroot/ingeniweb/iw.recipe.cmd/trunk\r\n- Questions and comments to support@ingeniweb.com\r\n- Report bugs at http://trac.ingeniweb.com/\r\n\r\n\r\nChange history\r\n**************\r\n\r\ntrunk (2008-04-22)\r\n==================\r\n\r\n  - xxx [Ingeniweb]\r\n\r\n0.3 (2008-04-22)\r\n================\r\n\r\n  - apply last version of the recipe template\r\n    [gawel]\r\n\r\n0.2 (2008-04-22)\r\n================\r\n\r\n  - run commands in one process\r\n    [gawel]\r\n\r\n  - win32 tests compat\r\n    [gawel]\r\n\r\n\r\nDetailed Documentation\r\n**********************\r\n\r\nSupported options\r\n=================\r\n\r\nThe recipe supports the following options:\r\n\r\n.. Note to recipe author!\r\n   ----------------------\r\n   For each option the recipe uses you shoud include a description\r\n   about the purpose of the option, the format and semantics of the\r\n   values it accepts, whether it is mandatory or optional and what the\r\n   default value is if it is omitted.\r\n\r\non_install\r\n\r\n    true if the commands must run on install\r\n\r\non_update\r\n\r\n    true if the commands must run on update\r\n\r\ncmds\r\n\r\n    a set of command lines\r\n\r\nshell\r\n\r\n    a valid interpreter (POSIX only)\r\n\r\nExample usage\r\n=============\r\n\r\n.. Note to recipe author!\r\n   ----------------------\r\n   zc.buildout provides a nice testing environment which makes it\r\n   relatively easy to write doctests that both demonstrate the use of\r\n   the recipe and test it.\r\n   You can find examples of recipe doctests from the PyPI, e.g.\r\n   \r\n     http://pypi.python.org/pypi/zc.recipe.egg\r\n\r\n   The PyPI page for zc.buildout contains documentation about the test\r\n   environment.\r\n\r\n     http://pypi.python.org/pypi/zc.buildout#testing-support\r\n\r\n   Below is a skeleton doctest that you can start with when building\r\n   your own tests.\r\n\r\nWe need a config file::\r\n\r\n  >>> cfg = \"\"\"\r\n  ... [buildout]\r\n  ... parts = cmds\r\n  ...\r\n  ... [cmds]\r\n  ... recipe = iw.recipe.cmd\r\n  ... on_install=true\r\n  ... cmds= %s\r\n  ... \"\"\"\r\n\r\n  >>> test_file = join(sample_buildout, 'test.txt')\r\n  >>> cmds = 'echo \"bouh\" > %s' % test_file\r\n  >>> write(sample_buildout, 'buildout.cfg', cfg % cmds)\r\n\r\nOk, so now we can touch a file for testing::\r\n\r\n  >>> print system(buildout)\r\n  Installing cmds.\r\n\r\n  >>> 'test.txt' in os.listdir(sample_buildout)\r\n  True\r\n\r\nAnd remove it::\r\n\r\n  >>> test_file = join(sample_buildout, 'test.txt')\r\n  >>> if sys.platform == 'win32':\r\n  ...    cmds = 'del %s' % test_file\r\n  ... else:\r\n  ...    cmds = 'rm -f %s' % test_file\r\n  >>> write(sample_buildout, 'buildout.cfg', cfg % cmds)\r\n\r\n  >>> print system(buildout)\r\n  Uninstalling cmds.\r\n  Installing cmds.\r\n\r\n  >>> 'test.txt' in os.listdir(sample_buildout)\r\n  False\r\n\r\nWe can run more than one commands::\r\n\r\n  >>> if sys.platform == 'win32':\r\n  ...     cmds = '''\r\n  ... echo \"bouh\" > %s\r\n  ... del %s\r\n  ... ''' % (test_file, test_file)\r\n  ... else:\r\n  ...     cmds = '''\r\n  ... echo \"bouh\" > %s\r\n  ... rm -f %s\r\n  ... ''' % (test_file, test_file)\r\n\r\n  >>> test_file = join(sample_buildout, 'test.txt')\r\n  >>> if sys.platform == 'win32':\r\n  ...     cmds = 'del %s' % test_file\r\n  ... else:\r\n  ...     cmds = 'rm -f %s' % test_file\r\n  >>> write(sample_buildout, 'buildout.cfg', cfg % cmds)\r\n\r\n  >>> print system(buildout)\r\n  Updating cmds.\r\n\r\n  >>> 'test.txt' in os.listdir(sample_buildout)\r\n  False\r\n\r\nWe can also run some python code::\r\n\r\n  >>> cfg = \"\"\"\r\n  ... [buildout]\r\n  ... parts = py py2\r\n  ...\r\n  ... [py]\r\n  ... recipe = iw.recipe.cmd:py\r\n  ... on_install=true\r\n  ... cmds= \r\n  ...   >>> sample_buildout = buildout.get('directory', '.')\r\n  ...   >>> print sorted(os.listdir(sample_buildout))\r\n  ...   >>> os.remove(os.path.join(sample_buildout, \".installed.cfg\"))\r\n  ...   >>> print sorted(os.listdir(sample_buildout))\r\n  ... [py2]\r\n  ... recipe = iw.recipe.cmd:py\r\n  ... on_install=true\r\n  ... cmds=\r\n  ...   >>> def myfunc(value):\r\n  ...   ...     return value and True or False\r\n  ...   >>> v = 20\r\n  ...   >>> print myfunc(v)\r\n  ... \"\"\"\r\n\r\n  >>> write(sample_buildout, 'buildout.cfg', cfg)\r\n\r\nOk, so now we run it::\r\n\r\n  >>> print system(buildout)\r\n  Uninstalling cmds.\r\n  Installing py.\r\n  ['.installed.cfg', 'bin', 'buildout.cfg', 'develop-eggs', 'eggs', 'parts']\r\n  ['bin', 'buildout.cfg', 'develop-eggs', 'eggs', 'parts']\r\n  Installing py2.\r\n  True\r\n\r\n\r\n\r\n\r\nContributors\r\n************\r\n\r\nGael Pasgrimaud\r\n\r\n\r\nDownload\r\n********", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://plone.org/products/iw-recipes", "keywords": "buildout recipe", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "iw.recipe.cmd", "package_url": "https://pypi.org/project/iw.recipe.cmd/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/iw.recipe.cmd/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://plone.org/products/iw-recipes"}, "release_url": "https://pypi.org/project/iw.recipe.cmd/0.3/", "requires_dist": null, "requires_python": null, "summary": "ZC Buildout recipe to execute a commande line", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>WARNING: This package is deprecated. You should use <a href=\"http://pypi.python.org/pypi/collective.recipe.cmd/\" rel=\"nofollow\">collective.recipe.cmd</a></p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#change-history\" id=\"id3\" rel=\"nofollow\">Change history</a><ul>\n<li><a href=\"#trunk-2008-04-22\" id=\"id4\" rel=\"nofollow\">trunk (2008-04-22)</a></li>\n<li><a href=\"#id1\" id=\"id5\" rel=\"nofollow\">0.3 (2008-04-22)</a></li>\n<li><a href=\"#id2\" id=\"id6\" rel=\"nofollow\">0.2 (2008-04-22)</a></li>\n</ul>\n</li>\n<li><a href=\"#detailed-documentation\" id=\"id7\" rel=\"nofollow\">Detailed Documentation</a><ul>\n<li><a href=\"#supported-options\" id=\"id8\" rel=\"nofollow\">Supported options</a></li>\n<li><a href=\"#example-usage\" id=\"id9\" rel=\"nofollow\">Example usage</a></li>\n</ul>\n</li>\n<li><a href=\"#contributors\" id=\"id10\" rel=\"nofollow\">Contributors</a></li>\n<li><a href=\"#download\" id=\"id11\" rel=\"nofollow\">Download</a></li>\n</ul>\n</div>\n<ul>\n<li>Code repository: <a href=\"https://ingeniweb.svn.sourceforge.net/svnroot/ingeniweb/iw.recipe.cmd/trunk\" rel=\"nofollow\">https://ingeniweb.svn.sourceforge.net/svnroot/ingeniweb/iw.recipe.cmd/trunk</a></li>\n<li>Questions and comments to <a href=\"mailto:support%40ingeniweb.com\">support<span>@</span>ingeniweb<span>.</span>com</a></li>\n<li>Report bugs at <a href=\"http://trac.ingeniweb.com/\" rel=\"nofollow\">http://trac.ingeniweb.com/</a></li>\n</ul>\n<div id=\"change-history\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Change history</a></h2>\n<div id=\"trunk-2008-04-22\">\n<h3><a href=\"#id4\" rel=\"nofollow\">trunk (2008-04-22)</a></h3>\n<blockquote>\n<ul>\n<li>xxx [Ingeniweb]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id1\">\n<h3><a href=\"#id5\" rel=\"nofollow\">0.3 (2008-04-22)</a></h3>\n<blockquote>\n<ul>\n<li>apply last version of the recipe template\n[gawel]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id6\" rel=\"nofollow\">0.2 (2008-04-22)</a></h3>\n<blockquote>\n<ul>\n<li>run commands in one process\n[gawel]</li>\n<li>win32 tests compat\n[gawel]</li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div id=\"detailed-documentation\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Detailed Documentation</a></h2>\n<div id=\"supported-options\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Supported options</a></h3>\n<p>The recipe supports the following options:</p>\n<p>on_install</p>\n<blockquote>\ntrue if the commands must run on install</blockquote>\n<p>on_update</p>\n<blockquote>\ntrue if the commands must run on update</blockquote>\n<p>cmds</p>\n<blockquote>\na set of command lines</blockquote>\n<p>shell</p>\n<blockquote>\na valid interpreter (POSIX only)</blockquote>\n</div>\n<div id=\"example-usage\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Example usage</a></h3>\n<p>We need a config file:</p>\n<pre>&gt;&gt;&gt; cfg = \"\"\"\n... [buildout]\n... parts = cmds\n...\n... [cmds]\n... recipe = iw.recipe.cmd\n... on_install=true\n... cmds= %s\n... \"\"\"\n\n&gt;&gt;&gt; test_file = join(sample_buildout, 'test.txt')\n&gt;&gt;&gt; cmds = 'echo \"bouh\" &gt; %s' % test_file\n&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg', cfg % cmds)\n</pre>\n<p>Ok, so now we can touch a file for testing:</p>\n<pre>&gt;&gt;&gt; print system(buildout)\nInstalling cmds.\n\n&gt;&gt;&gt; 'test.txt' in os.listdir(sample_buildout)\nTrue\n</pre>\n<p>And remove it:</p>\n<pre>&gt;&gt;&gt; test_file = join(sample_buildout, 'test.txt')\n&gt;&gt;&gt; if sys.platform == 'win32':\n...    cmds = 'del %s' % test_file\n... else:\n...    cmds = 'rm -f %s' % test_file\n&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg', cfg % cmds)\n\n&gt;&gt;&gt; print system(buildout)\nUninstalling cmds.\nInstalling cmds.\n\n&gt;&gt;&gt; 'test.txt' in os.listdir(sample_buildout)\nFalse\n</pre>\n<p>We can run more than one commands:</p>\n<pre>&gt;&gt;&gt; if sys.platform == 'win32':\n...     cmds = '''\n... echo \"bouh\" &gt; %s\n... del %s\n... ''' % (test_file, test_file)\n... else:\n...     cmds = '''\n... echo \"bouh\" &gt; %s\n... rm -f %s\n... ''' % (test_file, test_file)\n\n&gt;&gt;&gt; test_file = join(sample_buildout, 'test.txt')\n&gt;&gt;&gt; if sys.platform == 'win32':\n...     cmds = 'del %s' % test_file\n... else:\n...     cmds = 'rm -f %s' % test_file\n&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg', cfg % cmds)\n\n&gt;&gt;&gt; print system(buildout)\nUpdating cmds.\n\n&gt;&gt;&gt; 'test.txt' in os.listdir(sample_buildout)\nFalse\n</pre>\n<p>We can also run some python code:</p>\n<pre>&gt;&gt;&gt; cfg = \"\"\"\n... [buildout]\n... parts = py py2\n...\n... [py]\n... recipe = iw.recipe.cmd:py\n... on_install=true\n... cmds=\n...   &gt;&gt;&gt; sample_buildout = buildout.get('directory', '.')\n...   &gt;&gt;&gt; print sorted(os.listdir(sample_buildout))\n...   &gt;&gt;&gt; os.remove(os.path.join(sample_buildout, \".installed.cfg\"))\n...   &gt;&gt;&gt; print sorted(os.listdir(sample_buildout))\n... [py2]\n... recipe = iw.recipe.cmd:py\n... on_install=true\n... cmds=\n...   &gt;&gt;&gt; def myfunc(value):\n...   ...     return value and True or False\n...   &gt;&gt;&gt; v = 20\n...   &gt;&gt;&gt; print myfunc(v)\n... \"\"\"\n\n&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg', cfg)\n</pre>\n<p>Ok, so now we run it:</p>\n<pre>&gt;&gt;&gt; print system(buildout)\nUninstalling cmds.\nInstalling py.\n['.installed.cfg', 'bin', 'buildout.cfg', 'develop-eggs', 'eggs', 'parts']\n['bin', 'buildout.cfg', 'develop-eggs', 'eggs', 'parts']\nInstalling py2.\nTrue\n</pre>\n</div>\n</div>\n<div id=\"contributors\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Contributors</a></h2>\n<p>Gael Pasgrimaud</p>\n</div>\n<div id=\"download\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Download</a></h2>\n</div>\n\n          </div>"}, "last_serial": 793522, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4f70d2c0071b359897daa5efaf01a6a7", "sha256": "04d1c0b5ea345f045c495152ae567eca79a35eabadd9b2c15aaa6cf2267c788e"}, "downloads": -1, "filename": "iw.recipe.cmd-0.1-py2.4.egg", "has_sig": false, "md5_digest": "4f70d2c0071b359897daa5efaf01a6a7", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 10039, "upload_time": "2007-12-05T10:11:37", "upload_time_iso_8601": "2007-12-05T10:11:37Z", "url": "https://files.pythonhosted.org/packages/ca/dd/4edea1ffc8d4f194bf019ffb87e2dfc57763cfa5df8646771e7bde4d0b74/iw.recipe.cmd-0.1-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9266342f674a3a427e951e4e532ed67", "sha256": "3489b059f29a58e1bc67bddd3089004482dccdc6a91235b4c7fc655ec25403e9"}, "downloads": -1, "filename": "iw.recipe.cmd-0.1.tar.gz", "has_sig": false, "md5_digest": "f9266342f674a3a427e951e4e532ed67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4213, "upload_time": "2008-01-28T04:32:56", "upload_time_iso_8601": "2008-01-28T04:32:56Z", "url": "https://files.pythonhosted.org/packages/ba/19/d4aea00c0b245819d561b936e17953c64209e5dfbb2ce1bfc980c3791563/iw.recipe.cmd-0.1.tar.gz", "yanked": false}], "0.1dev-r6491": [{"comment_text": "", "digests": {"md5": "acec964eb8d8ea33ba455bfdb030e866", "sha256": "912bcaa8898f7924194e2fda0643e2824329f6c7aafa58b510e9ae6866249478"}, "downloads": -1, "filename": "iw.recipe.cmd-0.1dev_r6491-py2.4.egg", "has_sig": false, "md5_digest": "acec964eb8d8ea33ba455bfdb030e866", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 8241, "upload_time": "2007-10-25T13:34:41", "upload_time_iso_8601": "2007-10-25T13:34:41Z", "url": "https://files.pythonhosted.org/packages/11/e2/78dc8d87f7809648a4428c33eeac65d543ee018f74225e0928808a936871/iw.recipe.cmd-0.1dev_r6491-py2.4.egg", "yanked": false}], "0.1dev-r6515": [{"comment_text": "", "digests": {"md5": "95ea3379062c48cffe73a965a5375d35", "sha256": "4a69875e2f06beb30ef25b0dd88a165f93b91f36a0719186d0dddba9a8e1eb7d"}, "downloads": -1, "filename": "iw.recipe.cmd-0.1dev_r6515-py2.4.egg", "has_sig": false, "md5_digest": "95ea3379062c48cffe73a965a5375d35", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 8244, "upload_time": "2007-10-29T15:09:06", "upload_time_iso_8601": "2007-10-29T15:09:06Z", "url": "https://files.pythonhosted.org/packages/ce/24/f80ab052be8f0114c2b5316d8a5b623dd774dd582aafdb88507c2d74159b/iw.recipe.cmd-0.1dev_r6515-py2.4.egg", "yanked": false}], "0.1dev-r6528": [{"comment_text": "", "digests": {"md5": "27df205686da4f9a1879ef3e2af0f813", "sha256": "c7403ade3e1c11718abbcc6c35cd278a11bfe107dfbbc799cb080ba3ea0844de"}, "downloads": -1, "filename": "iw.recipe.cmd-0.1dev_r6528-py2.4.egg", "has_sig": false, "md5_digest": "27df205686da4f9a1879ef3e2af0f813", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 8511, "upload_time": "2007-11-09T13:57:50", "upload_time_iso_8601": "2007-11-09T13:57:50Z", "url": "https://files.pythonhosted.org/packages/3b/0d/465e8e03796438cf7dbd9b6fb24ad9f178a475c84e7c082bedadf13b3cf0/iw.recipe.cmd-0.1dev_r6528-py2.4.egg", "yanked": false}], "0.1dev-r6594": [{"comment_text": "", "digests": {"md5": "3e4d2c669e4c995bb1fb52d96b3eb399", "sha256": "bfe152f513e7fa40be9c03831f50e4a6f82e62c36c9c2504b3a72e45e688d24b"}, "downloads": -1, "filename": "iw.recipe.cmd-0.1dev_r6594-py2.4.egg", "has_sig": false, "md5_digest": "3e4d2c669e4c995bb1fb52d96b3eb399", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 10036, "upload_time": "2007-12-03T22:18:31", "upload_time_iso_8601": "2007-12-03T22:18:31Z", "url": "https://files.pythonhosted.org/packages/b4/87/185ff8beb0a129a0644efed54e6aea669b17085f35886b7aade4a6da9297/iw.recipe.cmd-0.1dev_r6594-py2.4.egg", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "477bfab99430bb1be36e05702ee17c12", "sha256": "93980f535cde6bf587ab0d00ab1495f84212f3e95d723ed73b04e9399c3dcd71"}, "downloads": -1, "filename": "iw.recipe.cmd-0.2-py2.4.egg", "has_sig": false, "md5_digest": "477bfab99430bb1be36e05702ee17c12", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 10518, "upload_time": "2008-04-22T12:37:28", "upload_time_iso_8601": "2008-04-22T12:37:28Z", "url": "https://files.pythonhosted.org/packages/e4/8f/501bd88801f367d7e29a8c2c72046d2058c15937af5041adc1a822d04db4/iw.recipe.cmd-0.2-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d13b953bbfd9dbd4b3648fda29b36e59", "sha256": "aea18acc5912ea4fc2f2e0d6b2d9d87b7050876cfb10c32867711e9bea7cac3a"}, "downloads": -1, "filename": "iw.recipe.cmd-0.2.tar.gz", "has_sig": false, "md5_digest": "d13b953bbfd9dbd4b3648fda29b36e59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5523, "upload_time": "2008-04-22T12:37:27", "upload_time_iso_8601": "2008-04-22T12:37:27Z", "url": "https://files.pythonhosted.org/packages/40/49/a7c51fdfbf3282ff4c3e31edc544a9259c10c52b1f404c7261f68a19a760/iw.recipe.cmd-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "078a5ad4d63d6a23e6418712f34e96fa", "sha256": "e789fc6266d750666a012039023251607815117d54943228d9e264f6f63dc564"}, "downloads": -1, "filename": "iw.recipe.cmd-0.3-py2.4.egg", "has_sig": false, "md5_digest": "078a5ad4d63d6a23e6418712f34e96fa", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 10678, "upload_time": "2008-04-22T15:47:07", "upload_time_iso_8601": "2008-04-22T15:47:07Z", "url": "https://files.pythonhosted.org/packages/54/ad/83801085fdc10783187dc74e5308946d152f391c10a150cb7d410bca8e06/iw.recipe.cmd-0.3-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c15c0b9cd9486531cf6d1a3d521cb3a8", "sha256": "2664738a4f6c62124e1c412de0a4e6e6b3c493dfd82625394b1d063e9b221720"}, "downloads": -1, "filename": "iw.recipe.cmd-0.3.tar.gz", "has_sig": false, "md5_digest": "c15c0b9cd9486531cf6d1a3d521cb3a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6538, "upload_time": "2008-04-22T15:47:07", "upload_time_iso_8601": "2008-04-22T15:47:07Z", "url": "https://files.pythonhosted.org/packages/c6/94/9cebf7ecf811d72a8a2c51a652df088afbdba27a25fb21f4129c8366ddb6/iw.recipe.cmd-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "078a5ad4d63d6a23e6418712f34e96fa", "sha256": "e789fc6266d750666a012039023251607815117d54943228d9e264f6f63dc564"}, "downloads": -1, "filename": "iw.recipe.cmd-0.3-py2.4.egg", "has_sig": false, "md5_digest": "078a5ad4d63d6a23e6418712f34e96fa", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 10678, "upload_time": "2008-04-22T15:47:07", "upload_time_iso_8601": "2008-04-22T15:47:07Z", "url": "https://files.pythonhosted.org/packages/54/ad/83801085fdc10783187dc74e5308946d152f391c10a150cb7d410bca8e06/iw.recipe.cmd-0.3-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c15c0b9cd9486531cf6d1a3d521cb3a8", "sha256": "2664738a4f6c62124e1c412de0a4e6e6b3c493dfd82625394b1d063e9b221720"}, "downloads": -1, "filename": "iw.recipe.cmd-0.3.tar.gz", "has_sig": false, "md5_digest": "c15c0b9cd9486531cf6d1a3d521cb3a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6538, "upload_time": "2008-04-22T15:47:07", "upload_time_iso_8601": "2008-04-22T15:47:07Z", "url": "https://files.pythonhosted.org/packages/c6/94/9cebf7ecf811d72a8a2c51a652df088afbdba27a25fb21f4129c8366ddb6/iw.recipe.cmd-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:30 2020"}