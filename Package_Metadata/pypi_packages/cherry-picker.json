{"info": {"author": "Mariatta Wijaya", "author_email": "mariatta.wijaya@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.6"], "description": "Usage (from a cloned CPython directory) ::\n\n   cherry_picker [--pr-remote REMOTE] [--dry-run] [--config-path CONFIG-PATH] [--status] [--abort/--continue] [--push/--no-push] <commit_sha1> <branches>\n\n|pyversion status|\n|pypi status|\n|travis status|\n\n.. contents::\n\nAbout\n=====\n\nThis tool is used to backport CPython changes from ``master`` into one or more\nof the maintenance branches (``3.6``, ``3.5``, ``2.7``).\n\n``cherry_picker`` can be configured to backport other projects with similar\nworkflow as CPython. See the configuration file options below for more details.\n\nThe maintenance branch names should contain some sort of version number (X.Y).\nFor example: ``3.6``, ``3.5``, ``2.7``, ``stable-2.6``, ``2.5-lts``, are all \nsupported branch names.\n\nIt will prefix the commit message with the branch, e.g. ``[3.6]``, and then\nopens up the pull request page.\n\nTests are to be written using `pytest <https://docs.pytest.org/en/latest/>`_.\n\n\nSetup Info\n==========\n\nRequires Python 3.6.\n\n::\n\n    $ python3 -m venv venv\n    $ source venv/bin/activate\n    (venv) $ python -m pip install cherry_picker\n\nThe cherry picking script assumes that if an ``upstream`` remote is defined, then\nit should be used as the source of upstream changes and as the base for\ncherry-pick branches. Otherwise, ``origin`` is used for that purpose.\n\nVerify that an ``upstream`` remote is set to the CPython repository::\n\n    $ git remote -v\n    ...\n    upstream\thttps://github.com/python/cpython (fetch)\n    upstream\thttps://github.com/python/cpython (push)\n\nIf needed, create the ``upstream`` remote::\n\n    $ git remote add upstream https://github.com/python/cpython.git\n\n\nBy default, the PR branches used to submit pull requests back to the main\nrepository are pushed to ``origin``. If this is incorrect, then the correct\nremote will need be specified using the ``--pr-remote`` option (e.g.\n``--pr-remote pr`` to use a remote named ``pr``).\n\n\nCherry-picking \ud83d\udc0d\ud83c\udf52\u26cf\ufe0f\n=====================\n\n(Setup first! See prev section)\n\nFrom the cloned CPython directory:\n\n::\n\n    (venv) $ cherry_picker [--pr-remote REMOTE] [--dry-run] [--config-path CONFIG-PATH] [--abort/--continue] [--status] [--push/--no-push] <commit_sha1> <branches>\n\n\nCommit sha1\n-----------\n\nThe commit sha1 for cherry-picking is the squashed commit that was merged to\nthe ``master`` branch.  On the merged pull request, scroll to the bottom of the\npage.  Find the event that says something like::\n\n   <coredeveloper> merged commit <commit_sha1> into python:master <sometime> ago.\n\nBy following the link to ``<commit_sha1>``, you will get the full commit hash.\nUse the full commit hash for ``cherry_picker.py``.\n\n\nOptions\n-------\n\n::\n\n    -- dry-run           Dry Run Mode.  Prints out the commands, but not executed.\n    -- pr-remote REMOTE  Specify the git remote to push into.  Default is 'origin'.\n    -- status            Do `git status` in cpython directory.\n\n\nAdditional options::\n\n    -- abort        Abort current cherry-pick and clean up branch\n    -- continue     Continue cherry-pick, push, and clean up branch\n    -- no-push      Changes won't be pushed to remote\n    -- config-path  Path to config file\n                    (`.cherry_picker.toml` from project root by default)\n\n\nConfiguration file example::\n\n   team = \"aio-libs\"\n   repo = \"aiohttp\"\n   check_sha = \"f382b5ffc445e45a110734f5396728da7914aeb6\"\n   fix_commit_msg = false\n   default_branch = \"devel\"\n\n\nAvailable config options::\n\n   team            github organization or individual nick,\n                   e.g \"aio-libs\" for https://github.com/aio-libs/aiohttp\n                   (\"python\" by default)\n\n   repo            github project name,\n                   e.g \"aiohttp\" for https://github.com/aio-libs/aiohttp\n                   (\"cpython\" by default)\n\n   check_sha       A long hash for any commit from the repo,\n                   e.g. a sha1 hash from the very first initial commit\n                   (\"7f777ed95a19224294949e1b4ce56bbffcb1fe9f\" by default)\n\n   fix_commit_msg  Replace # with GH- in cherry-picked commit message.\n                   It is the default behavior for CPython because of external\n                   Roundup bug tracker (https://bugs.python.org) behavior:\n                   #xxxx should point on issue xxxx but GH-xxxx points\n                   on pull-request xxxx.\n                   For projects using GitHub Issues, this option can be disabled.\n\n   repo            Project's default branch name,\n                   e.g \"devel\" for https://github.com/ansible/ansible\n                   (\"master\" by default)\n\n\nTo customize the tool for used by other project:\n\n1. Create a file called ``.cherry_picker.toml`` in the project's root\n   folder (alongside with ``.git`` folder).\n\n2. Add ``team``, ``repo``, ``fix_commit_msg``, ``check_sha`` and\n   ``default_branch`` config values as described above.\n\n3. Use ``git add .cherry_picker.toml`` / ``git commit`` to add the config\n   into ``git``.\n\n4. Add ``cherry_picker`` to development dependencies or install it\n   by ``pip install cherry_picker``\n\n5. Now everything is ready, use ``cherry_picker <commit_sha> <branch1>\n   <branch2>`` for cherry-picking changes from ``<commit_sha>`` into\n   maintenance branches.\n   Branch name should contain at least major and minor version numbers\n   and may have some prefix or suffix.\n   Only the first version-like substring is matched when the version\n   is extracted from branch name.\n\nDemo\n----\n\n- Installation: https://asciinema.org/a/125254\n\n- Backport: https://asciinema.org/a/125256\n\n\nExample\n-------\n\nFor example, to cherry-pick ``6de2b7817f-some-commit-sha1-d064`` into\n``3.5`` and ``3.6``, run the following command from the cloned CPython\ndirectory:\n\n::\n\n    (venv) $ cherry_picker 6de2b7817f-some-commit-sha1-d064 3.5 3.6\n\n\nWhat this will do:\n\n::\n\n    (venv) $ git fetch upstream\n\n    (venv) $ git checkout -b backport-6de2b78-3.5 upstream/3.5\n    (venv) $ git cherry-pick -x 6de2b7817f-some-commit-sha1-d064\n    (venv) $ git push origin backport-6de2b78-3.5\n    (venv) $ git checkout master\n    (venv) $ git branch -D backport-6de2b78-3.5\n\n    (venv) $ git checkout -b backport-6de2b78-3.6 upstream/3.6\n    (venv) $ git cherry-pick -x 6de2b7817f-some-commit-sha1-d064\n    (venv) $ git push origin backport-6de2b78-3.6\n    (venv) $ git checkout master\n    (venv) $ git branch -D backport-6de2b78-3.6\n\nIn case of merge conflicts or errors, the following message will be displayed::\n\n    Failed to cherry-pick 554626ada769abf82a5dabe6966afa4265acb6a6 into 2.7 :frowning_face:\n    ... Stopping here.\n\n    To continue and resolve the conflict:\n        $ cherry_picker --status  # to find out which files need attention\n        # Fix the conflict\n        $ cherry_picker --status  # should now say 'all conflict fixed'\n        $ cherry_picker --continue\n\n    To abort the cherry-pick and cleanup:\n        $ cherry_picker --abort\n\n\nPassing the ``--dry-run`` option will cause the script to print out all the\nsteps it would execute without actually executing any of them. For example::\n\n    $ cherry_picker --dry-run --pr-remote pr 1e32a1be4a1705e34011770026cb64ada2d340b5 3.6 3.5\n    Dry run requested, listing expected command sequence\n    fetching upstream ...\n    dry_run: git fetch origin\n    Now backporting '1e32a1be4a1705e34011770026cb64ada2d340b5' into '3.6'\n    dry_run: git checkout -b backport-1e32a1b-3.6 origin/3.6\n    dry_run: git cherry-pick -x 1e32a1be4a1705e34011770026cb64ada2d340b5\n    dry_run: git push pr backport-1e32a1b-3.6\n    dry_run: Create new PR: https://github.com/python/cpython/compare/3.6...ncoghlan:backport-1e32a1b-3.6?expand=1\n    dry_run: git checkout master\n    dry_run: git branch -D backport-1e32a1b-3.6\n    Now backporting '1e32a1be4a1705e34011770026cb64ada2d340b5' into '3.5'\n    dry_run: git checkout -b backport-1e32a1b-3.5 origin/3.5\n    dry_run: git cherry-pick -x 1e32a1be4a1705e34011770026cb64ada2d340b5\n    dry_run: git push pr backport-1e32a1b-3.5\n    dry_run: Create new PR: https://github.com/python/cpython/compare/3.5...ncoghlan:backport-1e32a1b-3.5?expand=1\n    dry_run: git checkout master\n    dry_run: git branch -D backport-1e32a1b-3.5\n\n`--pr-remote` option\n--------------------\n\nThis will generate pull requests through a remote other than ``origin``\n(e.g. ``pr``)\n\n\n`--status` option\n-----------------\n\nThis will do ``git status`` for the CPython directory.\n\n`--abort` option\n----------------\n\nCancels the current cherry-pick and cleans up the cherry-pick branch.\n\n`--continue` option\n-------------------\n\nContinues the current cherry-pick, commits, pushes the current branch to\n``origin``, opens the PR page, and cleans up the branch.\n\n`--no-push` option\n------------------\n\nChanges won't be pushed to remote.  This allows you to test and make additional\nchanges.  Once you're satisfied with local changes, use ``--continue`` to complete\nthe backport, or ``--abort`` to cancel and clean up the branch.  You can also\ncherry-pick additional commits, by::\n\n   $ git cherry-pick -x <commit_sha1>\n\n`--config-path` option\n----------------------\n\nAllows to override default config file path\n(``<PROJ-ROOT>/.cherry_picker.toml``) with a custom one. This allows cherry_picker\nto backport projects other than CPython.\n\n\nCreating Pull Requests\n======================\n\nWhen a cherry-pick was applied successfully, this script will open up a browser\ntab that points to the pull request creation page.\n\nThe url of the pull request page looks similar to the following::\n\n   https://github.com/python/cpython/compare/3.5...<username>:backport-6de2b78-3.5?expand=1\n\n\nPress the ``Create Pull Request`` button.\n\nBedevere will then remove the ``needs backport to ...`` label from the original\npull request against ``master``.\n\n\nRunning Tests\n=============\n\nInstall pytest: ``pip install -U pytest``\n\n::\n\n    $ pytest test.py\n\n\nPublishing to PyPI\n==================\n\n- Create a new release branch.\n\n- Update the version info in ``__init__.py`` and ``readme.rst``, dropping the ``.dev``.\n\n- Tag the branch as ``cherry-picker-vX.Y.Z``.\n\n\nLocal installation\n==================\n\nWith `flit <https://flit.readthedocs.io/en/latest/>`_ installed,\nin the directory where ``pyproject.toml`` exists::\n\n    flit install\n\n\n.. |pyversion status| image:: https://img.shields.io/pypi/pyversions/cherry-picker.svg\n   :target: https://pypi.org/project/cherry-picker/\n\n.. |pypi status| image:: https://img.shields.io/pypi/v/cherry-picker.svg\n   :target: https://pypi.org/project/cherry-picker/\n\n.. |travis status| image:: https://travis-ci.org/python/core-workflow.svg?branch=master\n   :target: https://travis-ci.org/python/core-workflow\n\nChangelog\n=========\n\n1.3.2\n-----\n\n- Use ``--no-tags`` option when fetching upstream. (`PR 319 <https://github.com/python/core-workflow/pull/319>`_)\n\n1.3.1\n-----\n\n- Modernize cherry_picker's pyproject.toml file. (`PR #316 <https://github.com/python/core-workflow/pull/316>`_)\n\n- Remove the ``BACKPORT_COMPLETE`` state. Unset the states when backport is completed.\n  (`PR #315 <https://github.com/python/core-workflow/pull/315>`_)\n\n- Run Travis CI test on Windows (`PR #311 <https://github.com/python/core-workflow/pull/311>`_).\n\n1.3.0\n-----\n\n- Implement state machine and storing reference to the config\n  used at the beginning of the backport process using commit sha\n  and a repo-local Git config.\n  (`PR #295 <https://github.com/python/core-workflow/pull/295>`_).\n\n1.2.2\n-----\n\n- Relaxed click dependency (`PR #302 <https://github.com/python/core-workflow/pull/302>`_).\n\n1.2.1\n-----\n\n- Validate the branch name to operate on with ``--continue`` and fail early if the branch could not\n  have been created by cherry_picker. (`PR #266 <https://github.com/python/core-workflow/pull/266>`_).\n\n- Bugfix: Allow ``--continue`` to support version branches that have dashes in them.  This is\n  a bugfix of the additional branch versioning schemes introduced in 1.2.0.\n  (`PR #265 <https://github.com/python/core-workflow/pull/265>`_).\n\n- Bugfix: Be explicit about the branch name on the remote to push the cherry pick to.  This allows\n  cherry_picker to work correctly when the user has a git push strategy other than the default\n  configured. (`PR #264 <https://github.com/python/core-workflow/pull/264>`_).\n\n1.2.0\n-----\n\n- Add ``default_branch`` configuration item. The default is ``master``, which\n  is the default branch for CPython. It can be configured to other branches like,\n  ``devel``, or ``develop``.  The default branch is the branch cherry_picker\n  will return to after backporting. (`PR #254 <https://github.com/python/core-workflow/pull/254>`_\n  and `Issue #250 <https://github.com/python/core-workflow/issues/250>`_).\n\n- Support additional branch versioning schemes, such as ``something-X.Y``,\n  or ``X.Y-somethingelse``. (`PR #253 <https://github.com/python/core-workflow/pull/253>`_\n  and `Issue #251 <https://github.com/python/core-workflow/issues/251>`_).\n\n1.1.1\n-----\n\n- Change the calls to ``subprocess`` to use lists instead of strings. This fixes\n  the bug that affects users in Windows. (`PR #238 <https://github.com/python/core-workflow/pull/238>`_).\n\n1.1.0\n-----\n\n- Add ``fix_commit_msg`` configuration item. Setting fix_commit_msg to ``true``\n  will replace the issue number in the commit message, from ``#`` to ``GH-``.\n  This is the default behavior for CPython. Other projects can opt out by\n  setting it to ``false``. (`PR #233 <https://github.com/python/core-workflow/pull/233>`_\n  and `aiohttp Issue #2853 <https://github.com/aio-libs/aiohttp/issues/2853>`_).\n\n1.0.0\n-----\n\n- Support configuration file by using ``--config-path`` option, or by adding\n  ``.cherry-picker.toml`` file to the root of the project. (`Issue #225\n  <https://github.com/python/core-workflow/issues/225>`_).\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/python/core-workflow/tree/master/cherry_picker", "keywords": "", "license": "", "maintainer": "Python Core Developers", "maintainer_email": "core-workflow@python.org", "name": "cherry-picker", "package_url": "https://pypi.org/project/cherry-picker/", "platform": "", "project_url": "https://pypi.org/project/cherry-picker/", "project_urls": {"Homepage": "https://github.com/python/core-workflow/tree/master/cherry_picker"}, "release_url": "https://pypi.org/project/cherry-picker/1.3.2/", "requires_dist": ["click>=6.0", "gidgethub", "requests", "toml", "pytest; extra == \"dev\""], "requires_python": ">=3.6", "summary": "Backport CPython changes from master to maintenance branches.", "version": "1.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Usage (from a cloned CPython directory)</p>\n<pre>cherry_picker [--pr-remote REMOTE] [--dry-run] [--config-path CONFIG-PATH] [--status] [--abort/--continue] [--push/--no-push] &lt;commit_sha1&gt; &lt;branches&gt;\n</pre>\n<p><a href=\"https://pypi.org/project/cherry-picker/\" rel=\"nofollow\"><img alt=\"pyversion status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f86349d34c081c62c89b4fb1592a2e4ac6ca4214/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6368657272792d7069636b65722e737667\"></a>\n<a href=\"https://pypi.org/project/cherry-picker/\" rel=\"nofollow\"><img alt=\"pypi status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bd50387d27bd76656451f66eab65aed5a2fdb681/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6368657272792d7069636b65722e737667\"></a>\n<a href=\"https://travis-ci.org/python/core-workflow\" rel=\"nofollow\"><img alt=\"travis status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04cf61e29b1a6137b107bae43f413d6e44342f68/68747470733a2f2f7472617669732d63692e6f72672f707974686f6e2f636f72652d776f726b666c6f772e7376673f6272616e63683d6d6173746572\"></a></p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#about\" id=\"id10\" rel=\"nofollow\">About</a></li>\n<li><a href=\"#setup-info\" id=\"id11\" rel=\"nofollow\">Setup Info</a></li>\n<li><a href=\"#cherry-picking\" id=\"id12\" rel=\"nofollow\">Cherry-picking \ud83d\udc0d\ud83c\udf52\u26cf\ufe0f</a><ul>\n<li><a href=\"#commit-sha1\" id=\"id13\" rel=\"nofollow\">Commit sha1</a></li>\n<li><a href=\"#options\" id=\"id14\" rel=\"nofollow\">Options</a></li>\n<li><a href=\"#demo\" id=\"id15\" rel=\"nofollow\">Demo</a></li>\n<li><a href=\"#example\" id=\"id16\" rel=\"nofollow\">Example</a></li>\n<li><a href=\"#pr-remote-option\" id=\"id17\" rel=\"nofollow\"><cite>\u2013pr-remote</cite> option</a></li>\n<li><a href=\"#status-option\" id=\"id18\" rel=\"nofollow\"><cite>\u2013status</cite> option</a></li>\n<li><a href=\"#abort-option\" id=\"id19\" rel=\"nofollow\"><cite>\u2013abort</cite> option</a></li>\n<li><a href=\"#continue-option\" id=\"id20\" rel=\"nofollow\"><cite>\u2013continue</cite> option</a></li>\n<li><a href=\"#no-push-option\" id=\"id21\" rel=\"nofollow\"><cite>\u2013no-push</cite> option</a></li>\n<li><a href=\"#config-path-option\" id=\"id22\" rel=\"nofollow\"><cite>\u2013config-path</cite> option</a></li>\n</ul>\n</li>\n<li><a href=\"#creating-pull-requests\" id=\"id23\" rel=\"nofollow\">Creating Pull Requests</a></li>\n<li><a href=\"#running-tests\" id=\"id24\" rel=\"nofollow\">Running Tests</a></li>\n<li><a href=\"#publishing-to-pypi\" id=\"id25\" rel=\"nofollow\">Publishing to PyPI</a></li>\n<li><a href=\"#local-installation\" id=\"id26\" rel=\"nofollow\">Local installation</a></li>\n<li><a href=\"#changelog\" id=\"id27\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id28\" rel=\"nofollow\">1.3.2</a></li>\n<li><a href=\"#id2\" id=\"id29\" rel=\"nofollow\">1.3.1</a></li>\n<li><a href=\"#id3\" id=\"id30\" rel=\"nofollow\">1.3.0</a></li>\n<li><a href=\"#id4\" id=\"id31\" rel=\"nofollow\">1.2.2</a></li>\n<li><a href=\"#id5\" id=\"id32\" rel=\"nofollow\">1.2.1</a></li>\n<li><a href=\"#id6\" id=\"id33\" rel=\"nofollow\">1.2.0</a></li>\n<li><a href=\"#id7\" id=\"id34\" rel=\"nofollow\">1.1.1</a></li>\n<li><a href=\"#id8\" id=\"id35\" rel=\"nofollow\">1.1.0</a></li>\n<li><a href=\"#id9\" id=\"id36\" rel=\"nofollow\">1.0.0</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"about\">\n<h2><a href=\"#id10\" rel=\"nofollow\">About</a></h2>\n<p>This tool is used to backport CPython changes from <tt>master</tt> into one or more\nof the maintenance branches (<tt>3.6</tt>, <tt>3.5</tt>, <tt>2.7</tt>).</p>\n<p><tt>cherry_picker</tt> can be configured to backport other projects with similar\nworkflow as CPython. See the configuration file options below for more details.</p>\n<p>The maintenance branch names should contain some sort of version number (X.Y).\nFor example: <tt>3.6</tt>, <tt>3.5</tt>, <tt>2.7</tt>, <tt><span class=\"pre\">stable-2.6</span></tt>, <tt><span class=\"pre\">2.5-lts</span></tt>, are all\nsupported branch names.</p>\n<p>It will prefix the commit message with the branch, e.g. <tt>[3.6]</tt>, and then\nopens up the pull request page.</p>\n<p>Tests are to be written using <a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">pytest</a>.</p>\n</div>\n<div id=\"setup-info\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Setup Info</a></h2>\n<p>Requires Python 3.6.</p>\n<pre>$ python3 -m venv venv\n$ source venv/bin/activate\n(venv) $ python -m pip install cherry_picker\n</pre>\n<p>The cherry picking script assumes that if an <tt>upstream</tt> remote is defined, then\nit should be used as the source of upstream changes and as the base for\ncherry-pick branches. Otherwise, <tt>origin</tt> is used for that purpose.</p>\n<p>Verify that an <tt>upstream</tt> remote is set to the CPython repository:</p>\n<pre>$ git remote -v\n...\nupstream    https://github.com/python/cpython (fetch)\nupstream    https://github.com/python/cpython (push)\n</pre>\n<p>If needed, create the <tt>upstream</tt> remote:</p>\n<pre>$ git remote add upstream https://github.com/python/cpython.git\n</pre>\n<p>By default, the PR branches used to submit pull requests back to the main\nrepository are pushed to <tt>origin</tt>. If this is incorrect, then the correct\nremote will need be specified using the <tt><span class=\"pre\">--pr-remote</span></tt> option (e.g.\n<tt><span class=\"pre\">--pr-remote</span> pr</tt> to use a remote named <tt>pr</tt>).</p>\n</div>\n<div id=\"cherry-picking\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Cherry-picking \ud83d\udc0d\ud83c\udf52\u26cf\ufe0f</a></h2>\n<p>(Setup first! See prev section)</p>\n<p>From the cloned CPython directory:</p>\n<pre>(venv) $ cherry_picker [--pr-remote REMOTE] [--dry-run] [--config-path CONFIG-PATH] [--abort/--continue] [--status] [--push/--no-push] &lt;commit_sha1&gt; &lt;branches&gt;\n</pre>\n<div id=\"commit-sha1\">\n<h3><a href=\"#id13\" rel=\"nofollow\">Commit sha1</a></h3>\n<p>The commit sha1 for cherry-picking is the squashed commit that was merged to\nthe <tt>master</tt> branch.  On the merged pull request, scroll to the bottom of the\npage.  Find the event that says something like:</p>\n<pre>&lt;coredeveloper&gt; merged commit &lt;commit_sha1&gt; into python:master &lt;sometime&gt; ago.\n</pre>\n<p>By following the link to <tt>&lt;commit_sha1&gt;</tt>, you will get the full commit hash.\nUse the full commit hash for <tt>cherry_picker.py</tt>.</p>\n</div>\n<div id=\"options\">\n<h3><a href=\"#id14\" rel=\"nofollow\">Options</a></h3>\n<pre>-- dry-run           Dry Run Mode.  Prints out the commands, but not executed.\n-- pr-remote REMOTE  Specify the git remote to push into.  Default is 'origin'.\n-- status            Do `git status` in cpython directory.\n</pre>\n<p>Additional options:</p>\n<pre>-- abort        Abort current cherry-pick and clean up branch\n-- continue     Continue cherry-pick, push, and clean up branch\n-- no-push      Changes won't be pushed to remote\n-- config-path  Path to config file\n                (`.cherry_picker.toml` from project root by default)\n</pre>\n<p>Configuration file example:</p>\n<pre>team = \"aio-libs\"\nrepo = \"aiohttp\"\ncheck_sha = \"f382b5ffc445e45a110734f5396728da7914aeb6\"\nfix_commit_msg = false\ndefault_branch = \"devel\"\n</pre>\n<p>Available config options:</p>\n<pre>team            github organization or individual nick,\n                e.g \"aio-libs\" for https://github.com/aio-libs/aiohttp\n                (\"python\" by default)\n\nrepo            github project name,\n                e.g \"aiohttp\" for https://github.com/aio-libs/aiohttp\n                (\"cpython\" by default)\n\ncheck_sha       A long hash for any commit from the repo,\n                e.g. a sha1 hash from the very first initial commit\n                (\"7f777ed95a19224294949e1b4ce56bbffcb1fe9f\" by default)\n\nfix_commit_msg  Replace # with GH- in cherry-picked commit message.\n                It is the default behavior for CPython because of external\n                Roundup bug tracker (https://bugs.python.org) behavior:\n                #xxxx should point on issue xxxx but GH-xxxx points\n                on pull-request xxxx.\n                For projects using GitHub Issues, this option can be disabled.\n\nrepo            Project's default branch name,\n                e.g \"devel\" for https://github.com/ansible/ansible\n                (\"master\" by default)\n</pre>\n<p>To customize the tool for used by other project:</p>\n<ol>\n<li>Create a file called <tt>.cherry_picker.toml</tt> in the project\u2019s root\nfolder (alongside with <tt>.git</tt> folder).</li>\n<li>Add <tt>team</tt>, <tt>repo</tt>, <tt>fix_commit_msg</tt>, <tt>check_sha</tt> and\n<tt>default_branch</tt> config values as described above.</li>\n<li>Use <tt>git add .cherry_picker.toml</tt> / <tt>git commit</tt> to add the config\ninto <tt>git</tt>.</li>\n<li>Add <tt>cherry_picker</tt> to development dependencies or install it\nby <tt>pip install cherry_picker</tt></li>\n<li>Now everything is ready, use <tt>cherry_picker &lt;commit_sha&gt; &lt;branch1&gt;\n&lt;branch2&gt;</tt> for cherry-picking changes from <tt>&lt;commit_sha&gt;</tt> into\nmaintenance branches.\nBranch name should contain at least major and minor version numbers\nand may have some prefix or suffix.\nOnly the first version-like substring is matched when the version\nis extracted from branch name.</li>\n</ol>\n</div>\n<div id=\"demo\">\n<h3><a href=\"#id15\" rel=\"nofollow\">Demo</a></h3>\n<ul>\n<li>Installation: <a href=\"https://asciinema.org/a/125254\" rel=\"nofollow\">https://asciinema.org/a/125254</a></li>\n<li>Backport: <a href=\"https://asciinema.org/a/125256\" rel=\"nofollow\">https://asciinema.org/a/125256</a></li>\n</ul>\n</div>\n<div id=\"example\">\n<h3><a href=\"#id16\" rel=\"nofollow\">Example</a></h3>\n<p>For example, to cherry-pick <tt><span class=\"pre\">6de2b7817f-some-commit-sha1-d064</span></tt> into\n<tt>3.5</tt> and <tt>3.6</tt>, run the following command from the cloned CPython\ndirectory:</p>\n<pre>(venv) $ cherry_picker 6de2b7817f-some-commit-sha1-d064 3.5 3.6\n</pre>\n<p>What this will do:</p>\n<pre>(venv) $ git fetch upstream\n\n(venv) $ git checkout -b backport-6de2b78-3.5 upstream/3.5\n(venv) $ git cherry-pick -x 6de2b7817f-some-commit-sha1-d064\n(venv) $ git push origin backport-6de2b78-3.5\n(venv) $ git checkout master\n(venv) $ git branch -D backport-6de2b78-3.5\n\n(venv) $ git checkout -b backport-6de2b78-3.6 upstream/3.6\n(venv) $ git cherry-pick -x 6de2b7817f-some-commit-sha1-d064\n(venv) $ git push origin backport-6de2b78-3.6\n(venv) $ git checkout master\n(venv) $ git branch -D backport-6de2b78-3.6\n</pre>\n<p>In case of merge conflicts or errors, the following message will be displayed:</p>\n<pre>Failed to cherry-pick 554626ada769abf82a5dabe6966afa4265acb6a6 into 2.7 :frowning_face:\n... Stopping here.\n\nTo continue and resolve the conflict:\n    $ cherry_picker --status  # to find out which files need attention\n    # Fix the conflict\n    $ cherry_picker --status  # should now say 'all conflict fixed'\n    $ cherry_picker --continue\n\nTo abort the cherry-pick and cleanup:\n    $ cherry_picker --abort\n</pre>\n<p>Passing the <tt><span class=\"pre\">--dry-run</span></tt> option will cause the script to print out all the\nsteps it would execute without actually executing any of them. For example:</p>\n<pre>$ cherry_picker --dry-run --pr-remote pr 1e32a1be4a1705e34011770026cb64ada2d340b5 3.6 3.5\nDry run requested, listing expected command sequence\nfetching upstream ...\ndry_run: git fetch origin\nNow backporting '1e32a1be4a1705e34011770026cb64ada2d340b5' into '3.6'\ndry_run: git checkout -b backport-1e32a1b-3.6 origin/3.6\ndry_run: git cherry-pick -x 1e32a1be4a1705e34011770026cb64ada2d340b5\ndry_run: git push pr backport-1e32a1b-3.6\ndry_run: Create new PR: https://github.com/python/cpython/compare/3.6...ncoghlan:backport-1e32a1b-3.6?expand=1\ndry_run: git checkout master\ndry_run: git branch -D backport-1e32a1b-3.6\nNow backporting '1e32a1be4a1705e34011770026cb64ada2d340b5' into '3.5'\ndry_run: git checkout -b backport-1e32a1b-3.5 origin/3.5\ndry_run: git cherry-pick -x 1e32a1be4a1705e34011770026cb64ada2d340b5\ndry_run: git push pr backport-1e32a1b-3.5\ndry_run: Create new PR: https://github.com/python/cpython/compare/3.5...ncoghlan:backport-1e32a1b-3.5?expand=1\ndry_run: git checkout master\ndry_run: git branch -D backport-1e32a1b-3.5\n</pre>\n</div>\n<div id=\"pr-remote-option\">\n<h3><a href=\"#id17\" rel=\"nofollow\"><cite>\u2013pr-remote</cite> option</a></h3>\n<p>This will generate pull requests through a remote other than <tt>origin</tt>\n(e.g. <tt>pr</tt>)</p>\n</div>\n<div id=\"status-option\">\n<h3><a href=\"#id18\" rel=\"nofollow\"><cite>\u2013status</cite> option</a></h3>\n<p>This will do <tt>git status</tt> for the CPython directory.</p>\n</div>\n<div id=\"abort-option\">\n<h3><a href=\"#id19\" rel=\"nofollow\"><cite>\u2013abort</cite> option</a></h3>\n<p>Cancels the current cherry-pick and cleans up the cherry-pick branch.</p>\n</div>\n<div id=\"continue-option\">\n<h3><a href=\"#id20\" rel=\"nofollow\"><cite>\u2013continue</cite> option</a></h3>\n<p>Continues the current cherry-pick, commits, pushes the current branch to\n<tt>origin</tt>, opens the PR page, and cleans up the branch.</p>\n</div>\n<div id=\"no-push-option\">\n<h3><a href=\"#id21\" rel=\"nofollow\"><cite>\u2013no-push</cite> option</a></h3>\n<p>Changes won\u2019t be pushed to remote.  This allows you to test and make additional\nchanges.  Once you\u2019re satisfied with local changes, use <tt><span class=\"pre\">--continue</span></tt> to complete\nthe backport, or <tt><span class=\"pre\">--abort</span></tt> to cancel and clean up the branch.  You can also\ncherry-pick additional commits, by:</p>\n<pre>$ git cherry-pick -x &lt;commit_sha1&gt;\n</pre>\n</div>\n<div id=\"config-path-option\">\n<h3><a href=\"#id22\" rel=\"nofollow\"><cite>\u2013config-path</cite> option</a></h3>\n<p>Allows to override default config file path\n(<tt><span class=\"pre\">&lt;PROJ-ROOT&gt;/.cherry_picker.toml</span></tt>) with a custom one. This allows cherry_picker\nto backport projects other than CPython.</p>\n</div>\n</div>\n<div id=\"creating-pull-requests\">\n<h2><a href=\"#id23\" rel=\"nofollow\">Creating Pull Requests</a></h2>\n<p>When a cherry-pick was applied successfully, this script will open up a browser\ntab that points to the pull request creation page.</p>\n<p>The url of the pull request page looks similar to the following:</p>\n<pre>https://github.com/python/cpython/compare/3.5...&lt;username&gt;:backport-6de2b78-3.5?expand=1\n</pre>\n<p>Press the <tt>Create Pull Request</tt> button.</p>\n<p>Bedevere will then remove the <tt>needs backport to ...</tt> label from the original\npull request against <tt>master</tt>.</p>\n</div>\n<div id=\"running-tests\">\n<h2><a href=\"#id24\" rel=\"nofollow\">Running Tests</a></h2>\n<p>Install pytest: <tt>pip install <span class=\"pre\">-U</span> pytest</tt></p>\n<pre>$ pytest test.py\n</pre>\n</div>\n<div id=\"publishing-to-pypi\">\n<h2><a href=\"#id25\" rel=\"nofollow\">Publishing to PyPI</a></h2>\n<ul>\n<li>Create a new release branch.</li>\n<li>Update the version info in <tt>__init__.py</tt> and <tt>readme.rst</tt>, dropping the <tt>.dev</tt>.</li>\n<li>Tag the branch as <tt><span class=\"pre\">cherry-picker-vX.Y.Z</span></tt>.</li>\n</ul>\n</div>\n<div id=\"local-installation\">\n<h2><a href=\"#id26\" rel=\"nofollow\">Local installation</a></h2>\n<p>With <a href=\"https://flit.readthedocs.io/en/latest/\" rel=\"nofollow\">flit</a> installed,\nin the directory where <tt>pyproject.toml</tt> exists:</p>\n<pre>flit install\n</pre>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id27\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id28\" rel=\"nofollow\">1.3.2</a></h3>\n<ul>\n<li>Use <tt><span class=\"pre\">--no-tags</span></tt> option when fetching upstream. (<a href=\"https://github.com/python/core-workflow/pull/319\" rel=\"nofollow\">PR 319</a>)</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id29\" rel=\"nofollow\">1.3.1</a></h3>\n<ul>\n<li>Modernize cherry_picker\u2019s pyproject.toml file. (<a href=\"https://github.com/python/core-workflow/pull/316\" rel=\"nofollow\">PR #316</a>)</li>\n<li>Remove the <tt>BACKPORT_COMPLETE</tt> state. Unset the states when backport is completed.\n(<a href=\"https://github.com/python/core-workflow/pull/315\" rel=\"nofollow\">PR #315</a>)</li>\n<li>Run Travis CI test on Windows (<a href=\"https://github.com/python/core-workflow/pull/311\" rel=\"nofollow\">PR #311</a>).</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id30\" rel=\"nofollow\">1.3.0</a></h3>\n<ul>\n<li>Implement state machine and storing reference to the config\nused at the beginning of the backport process using commit sha\nand a repo-local Git config.\n(<a href=\"https://github.com/python/core-workflow/pull/295\" rel=\"nofollow\">PR #295</a>).</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id31\" rel=\"nofollow\">1.2.2</a></h3>\n<ul>\n<li>Relaxed click dependency (<a href=\"https://github.com/python/core-workflow/pull/302\" rel=\"nofollow\">PR #302</a>).</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id32\" rel=\"nofollow\">1.2.1</a></h3>\n<ul>\n<li>Validate the branch name to operate on with <tt><span class=\"pre\">--continue</span></tt> and fail early if the branch could not\nhave been created by cherry_picker. (<a href=\"https://github.com/python/core-workflow/pull/266\" rel=\"nofollow\">PR #266</a>).</li>\n<li>Bugfix: Allow <tt><span class=\"pre\">--continue</span></tt> to support version branches that have dashes in them.  This is\na bugfix of the additional branch versioning schemes introduced in 1.2.0.\n(<a href=\"https://github.com/python/core-workflow/pull/265\" rel=\"nofollow\">PR #265</a>).</li>\n<li>Bugfix: Be explicit about the branch name on the remote to push the cherry pick to.  This allows\ncherry_picker to work correctly when the user has a git push strategy other than the default\nconfigured. (<a href=\"https://github.com/python/core-workflow/pull/264\" rel=\"nofollow\">PR #264</a>).</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id33\" rel=\"nofollow\">1.2.0</a></h3>\n<ul>\n<li>Add <tt>default_branch</tt> configuration item. The default is <tt>master</tt>, which\nis the default branch for CPython. It can be configured to other branches like,\n<tt>devel</tt>, or <tt>develop</tt>.  The default branch is the branch cherry_picker\nwill return to after backporting. (<a href=\"https://github.com/python/core-workflow/pull/254\" rel=\"nofollow\">PR #254</a>\nand <a href=\"https://github.com/python/core-workflow/issues/250\" rel=\"nofollow\">Issue #250</a>).</li>\n<li>Support additional branch versioning schemes, such as <tt><span class=\"pre\">something-X.Y</span></tt>,\nor <tt><span class=\"pre\">X.Y-somethingelse</span></tt>. (<a href=\"https://github.com/python/core-workflow/pull/253\" rel=\"nofollow\">PR #253</a>\nand <a href=\"https://github.com/python/core-workflow/issues/251\" rel=\"nofollow\">Issue #251</a>).</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id34\" rel=\"nofollow\">1.1.1</a></h3>\n<ul>\n<li>Change the calls to <tt>subprocess</tt> to use lists instead of strings. This fixes\nthe bug that affects users in Windows. (<a href=\"https://github.com/python/core-workflow/pull/238\" rel=\"nofollow\">PR #238</a>).</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id35\" rel=\"nofollow\">1.1.0</a></h3>\n<ul>\n<li>Add <tt>fix_commit_msg</tt> configuration item. Setting fix_commit_msg to <tt>true</tt>\nwill replace the issue number in the commit message, from <tt>#</tt> to <tt>GH-</tt>.\nThis is the default behavior for CPython. Other projects can opt out by\nsetting it to <tt>false</tt>. (<a href=\"https://github.com/python/core-workflow/pull/233\" rel=\"nofollow\">PR #233</a>\nand <a href=\"https://github.com/aio-libs/aiohttp/issues/2853\" rel=\"nofollow\">aiohttp Issue #2853</a>).</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3><a href=\"#id36\" rel=\"nofollow\">1.0.0</a></h3>\n<ul>\n<li>Support configuration file by using <tt><span class=\"pre\">--config-path</span></tt> option, or by adding\n<tt><span class=\"pre\">.cherry-picker.toml</span></tt> file to the root of the project. (<a href=\"https://github.com/python/core-workflow/issues/225\" rel=\"nofollow\">Issue #225</a>).</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5324321, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "952aa601d10018a6e2efa101b9ededb9", "sha256": "c8a80d300f7acc5f9723b7de2492594953305afde91f4cded93ffd78527398e1"}, "downloads": -1, "filename": "cherry_picker-0.0.2.tar.gz", "has_sig": false, "md5_digest": "952aa601d10018a6e2efa101b9ededb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7326, "upload_time": "2017-06-17T18:23:24", "upload_time_iso_8601": "2017-06-17T18:23:24.987078Z", "url": "https://files.pythonhosted.org/packages/a9/b8/f9b7793d832fbd0caa1ca5d014fe4b9cf5f1fff26d2bcfaae1357816a9af/cherry_picker-0.0.2.tar.gz", "yanked": false}], "0.0.2.post1": [{"comment_text": "", "digests": {"md5": "d5cf810155149854613be221b1889e90", "sha256": "b80c944466fee98d75567f88623f3c0f9d3b9e4772c6db3d89a9614a5d76317d"}, "downloads": -1, "filename": "cherry_picker-0.0.2.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "d5cf810155149854613be221b1889e90", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12092, "upload_time": "2017-06-17T22:20:24", "upload_time_iso_8601": "2017-06-17T22:20:24.648925Z", "url": "https://files.pythonhosted.org/packages/ef/3e/2a2681834605cdac65153ff0b6f25c449e70ade7175d94a4325290b46b8f/cherry_picker-0.0.2.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45801eac5390d87d6e19572bd4efe0df", "sha256": "8c9eb6b5a2796bd1641e3210da48642a9f5b68a4d21ab8758188494e8e264fb5"}, "downloads": -1, "filename": "cherry_picker-0.0.2.post1.tar.gz", "has_sig": false, "md5_digest": "45801eac5390d87d6e19572bd4efe0df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8087, "upload_time": "2017-06-17T22:20:26", "upload_time_iso_8601": "2017-06-17T22:20:26.299608Z", "url": "https://files.pythonhosted.org/packages/0f/91/cf2b1ccfb88c3854554622845ee5117632751782cbf00f7e256f88a15762/cherry_picker-0.0.2.post1.tar.gz", "yanked": false}], "0.0.2.post2": [{"comment_text": "", "digests": {"md5": "a24f4f7ae5a0774a9e54aa13de071903", "sha256": "04b16cfa069a2645d5ddc7d2f44b2a260c8e8d85c5f2b153ae5b7af7484eb220"}, "downloads": -1, "filename": "cherry_picker-0.0.2.post2-py3-none-any.whl", "has_sig": false, "md5_digest": "a24f4f7ae5a0774a9e54aa13de071903", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12453, "upload_time": "2017-06-23T01:58:39", "upload_time_iso_8601": "2017-06-23T01:58:39.293632Z", "url": "https://files.pythonhosted.org/packages/5c/54/eeee8c0669af618e9506a94edea1ee0a698999f5ae1f23f9c79cc0e3ca06/cherry_picker-0.0.2.post2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "239b2eca15ae1456e5499a8b040a0e33", "sha256": "ca3eff01dd2c5784198d7e467d00689f9446ef0b2add1a2e87bcf4578355d3de"}, "downloads": -1, "filename": "cherry_picker-0.0.2.post2.tar.gz", "has_sig": false, "md5_digest": "239b2eca15ae1456e5499a8b040a0e33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8181, "upload_time": "2017-06-23T01:58:41", "upload_time_iso_8601": "2017-06-23T01:58:41.043005Z", "url": "https://files.pythonhosted.org/packages/ff/99/244c91c903ecf70a0c9dc40a0ab210d03a758372ed215a35c9557a0e6e3e/cherry_picker-0.0.2.post2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "5a899d4910aa2cc5ad391491b87ff6e2", "sha256": "7cba216bd53b2cfe8b1dfb83ae2bb88aca094e9cdafe2eb8f4c8f98c805c6da9"}, "downloads": -1, "filename": "cherry_picker-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5a899d4910aa2cc5ad391491b87ff6e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20743, "upload_time": "2017-06-28T23:43:01", "upload_time_iso_8601": "2017-06-28T23:43:01.314569Z", "url": "https://files.pythonhosted.org/packages/90/de/7d199b6218c2c76ccfa84b872e24db886c46325c28ffa60f5512dd18024d/cherry_picker-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a4c9a435256a1d8b9699d4edbe9f1d2", "sha256": "a082002d7d43a1d3282241f88f213ae6e4338c945fd471978f8be708cfda3a7e"}, "downloads": -1, "filename": "cherry_picker-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7a4c9a435256a1d8b9699d4edbe9f1d2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7259, "upload_time": "2017-06-28T23:43:03", "upload_time_iso_8601": "2017-06-28T23:43:03.152308Z", "url": "https://files.pythonhosted.org/packages/ec/52/a21c91eddf76d00a969c403cb7481dddb2c108d4256ea8305a3e0a47523a/cherry_picker-0.1.0.tar.gz", "yanked": false}], "0.1.0.dev1": [{"comment_text": "", "digests": {"md5": "618539d04fa82f4e8445f75d9c7d799d", "sha256": "65c882cd831e12c405dafce402c071932d253109a4edc89d2d6e4febdd63c8e1"}, "downloads": -1, "filename": "cherry_picker-0.1.0.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "618539d04fa82f4e8445f75d9c7d799d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20793, "upload_time": "2017-06-28T22:44:27", "upload_time_iso_8601": "2017-06-28T22:44:27.525463Z", "url": "https://files.pythonhosted.org/packages/45/61/4f11dfaffc9f94e73433e012bdf7ff1ba110d2b8bfe609e42cbf1891bb36/cherry_picker-0.1.0.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cab34465f856c70ab616025e11f5a73", "sha256": "0ab3707180c9e3b764e331bd49c7eab318e67e039c8d0912326a17e3ebe3cff5"}, "downloads": -1, "filename": "cherry_picker-0.1.0.dev1.tar.gz", "has_sig": false, "md5_digest": "0cab34465f856c70ab616025e11f5a73", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7267, "upload_time": "2017-06-28T22:44:31", "upload_time_iso_8601": "2017-06-28T22:44:31.137563Z", "url": "https://files.pythonhosted.org/packages/20/84/e3662f9c2f786a102572c61dda31e81fbc4b264debddc5fea6a27a358c27/cherry_picker-0.1.0.dev1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b28f6fa6aa0ee0aedf198fae3fb4e0d7", "sha256": "d822e61634d06a12de5a8d57c13776098efe0e15c287a753a0ee9bc88f1bb644"}, "downloads": -1, "filename": "cherry_picker-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b28f6fa6aa0ee0aedf198fae3fb4e0d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24064, "upload_time": "2017-09-01T03:17:21", "upload_time_iso_8601": "2017-09-01T03:17:21.340788Z", "url": "https://files.pythonhosted.org/packages/d8/2e/16e86ff4bdb20de75544931660d9bb54e7e2eb00ad55e5bd0e42da96f51f/cherry_picker-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b784d02880c2771dd9938efebdabd88", "sha256": "8c8fe446aa927626584a4905f4d13a73990df31c3b791e1b2e64c8c721922f48"}, "downloads": -1, "filename": "cherry_picker-0.2.0.tar.gz", "has_sig": false, "md5_digest": "7b784d02880c2771dd9938efebdabd88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7999, "upload_time": "2017-09-01T03:17:26", "upload_time_iso_8601": "2017-09-01T03:17:26.839478Z", "url": "https://files.pythonhosted.org/packages/55/c2/c7369bde7e74a392f0fad23c5d9f3d7099600287789c88fcb6bd333bd2f2/cherry_picker-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "23b933d0f43487677167e8e8020a0d62", "sha256": "3ea7a988bbe5c817170ca45e4eeb2a443b586fd1f3702228d2d1731f720269e9"}, "downloads": -1, "filename": "cherry_picker-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "23b933d0f43487677167e8e8020a0d62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 23729, "upload_time": "2017-09-04T23:50:29", "upload_time_iso_8601": "2017-09-04T23:50:29.854308Z", "url": "https://files.pythonhosted.org/packages/3f/fe/a60419ce0bf8d6f6fde614ce9056b567c5437b8ee1839b4559fac6f56f3c/cherry_picker-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24fab5e921b5060e80d296b839422883", "sha256": "d5eced1611f20a4276946b7ed2da4e330e55e7ab40aa711d8f30f93ebedbcb53"}, "downloads": -1, "filename": "cherry_picker-0.2.1.tar.gz", "has_sig": false, "md5_digest": "24fab5e921b5060e80d296b839422883", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7993, "upload_time": "2017-09-04T23:50:31", "upload_time_iso_8601": "2017-09-04T23:50:31.478851Z", "url": "https://files.pythonhosted.org/packages/84/75/75b13d1f4fa1aa3badf89f681e0c1c6c1f9bfe494eabe5b87fc01433957d/cherry_picker-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "8a67c0e83c00aa6e1fb8956bc814e400", "sha256": "f5459553d3fc939b8f2dbc02da055df3c0fd92e7b998c154d878803583aacab7"}, "downloads": -1, "filename": "cherry_picker-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8a67c0e83c00aa6e1fb8956bc814e400", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24816, "upload_time": "2017-09-05T18:32:58", "upload_time_iso_8601": "2017-09-05T18:32:58.670310Z", "url": "https://files.pythonhosted.org/packages/a7/ab/857cecc1783d324542979b910b53a7b26c365128daf68a91588dc457feb2/cherry_picker-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7cb2c2757fedf8285d7018c9747a5428", "sha256": "08284cb968d3f94c3834a312d035a8130ebf64596d31f4db932105be65a0b30e"}, "downloads": -1, "filename": "cherry_picker-0.2.2.tar.gz", "has_sig": false, "md5_digest": "7cb2c2757fedf8285d7018c9747a5428", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8080, "upload_time": "2017-09-05T18:33:00", "upload_time_iso_8601": "2017-09-05T18:33:00.588829Z", "url": "https://files.pythonhosted.org/packages/08/75/c495cf69aee4ed4a029b5d3241e40696b55687a18be02a7fa9dfdd846489/cherry_picker-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "2dd11b285387fdb1e045fd672dc4050d", "sha256": "3dad9916560e271d6930d33bbae3a50da57c490a3340ae152842fdc096fe0740"}, "downloads": -1, "filename": "cherry_picker-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2dd11b285387fdb1e045fd672dc4050d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24576, "upload_time": "2017-10-19T02:26:01", "upload_time_iso_8601": "2017-10-19T02:26:01.233334Z", "url": "https://files.pythonhosted.org/packages/cd/3e/af7d2994de6c26e9b972a624068c0994ef0c2d36e1469ea7b90b10667c4d/cherry_picker-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a787e19eceb26d564f36b42cebe2f92", "sha256": "1e5617dbcd7790fe4366e3245282ea276b1eab4f2b28ff69c9ecc1500df779ea"}, "downloads": -1, "filename": "cherry_picker-0.2.3.tar.gz", "has_sig": false, "md5_digest": "9a787e19eceb26d564f36b42cebe2f92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8096, "upload_time": "2017-10-19T02:26:02", "upload_time_iso_8601": "2017-10-19T02:26:02.994873Z", "url": "https://files.pythonhosted.org/packages/65/66/d138ad8c6d50e9cf9cba7ce10ba0e715565381b96d9a3ac99c6048cb4b3c/cherry_picker-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "ffcb2e1142bdbe24c272edb7cb39395c", "sha256": "8df84a0f6ea142ae019feb2a0aea15303aed9ea96079f0ceb7cecd7592d0de6b"}, "downloads": -1, "filename": "cherry_picker-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ffcb2e1142bdbe24c272edb7cb39395c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24656, "upload_time": "2017-10-19T03:35:22", "upload_time_iso_8601": "2017-10-19T03:35:22.982795Z", "url": "https://files.pythonhosted.org/packages/90/3f/99d08390837242b401faf518c018da314113e9b1a495b5af066955c660ad/cherry_picker-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1b058168d9714e367e9083efcb087a2", "sha256": "5c968ce112bb5b8989353924a080e7bc1dec2f85e9f0b449ee7f174a3d0ea899"}, "downloads": -1, "filename": "cherry_picker-0.2.4.tar.gz", "has_sig": false, "md5_digest": "a1b058168d9714e367e9083efcb087a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8108, "upload_time": "2017-10-19T03:35:25", "upload_time_iso_8601": "2017-10-19T03:35:25.628569Z", "url": "https://files.pythonhosted.org/packages/cb/bd/9da2ec8965f1b8a2c602a1915796fea9ec632a86f2d89e7e7d72dff0701a/cherry_picker-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "4b42c5e9eddebbc6f8b0548a81f1e567", "sha256": "a36d09d15753120f07dab6bcf6042064920efed083921e93fa2822b2b9807389"}, "downloads": -1, "filename": "cherry_picker-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "4b42c5e9eddebbc6f8b0548a81f1e567", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24658, "upload_time": "2017-10-19T17:39:15", "upload_time_iso_8601": "2017-10-19T17:39:15.211701Z", "url": "https://files.pythonhosted.org/packages/5a/31/ed548fcc3ea520829de8c71628778397e878e2735d222d30b55d11cedfdd/cherry_picker-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81b4220bbc9b8ed930ad344fd0aee2a8", "sha256": "5bbb6ef26e144e53175e35e7e828f98bedab24f711b2259214ba350a69023c1c"}, "downloads": -1, "filename": "cherry_picker-0.2.5.tar.gz", "has_sig": false, "md5_digest": "81b4220bbc9b8ed930ad344fd0aee2a8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8111, "upload_time": "2017-10-19T17:39:17", "upload_time_iso_8601": "2017-10-19T17:39:17.209047Z", "url": "https://files.pythonhosted.org/packages/b6/a0/773a7cf17982dac2196e0a0ef4b658455c8815cdf0f41f7788773c5f0b41/cherry_picker-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "a1a2b1a326ee3839a392418e04109ee9", "sha256": "d82a63c91709b22963105adf632caed5ca738debd9326de31639f60f22dd6c9d"}, "downloads": -1, "filename": "cherry_picker-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a1a2b1a326ee3839a392418e04109ee9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24657, "upload_time": "2017-12-01T03:58:06", "upload_time_iso_8601": "2017-12-01T03:58:06.900581Z", "url": "https://files.pythonhosted.org/packages/c6/ee/c6672c11c0d60f46a7779d7c6366bfc64d95f59de644552fa23bfa9daaf3/cherry_picker-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db2409c7ecd3b240657aa31ac2d3f768", "sha256": "d774b3950174f00116d4b756a847621539795991f5f18c9335846149ed3ad8d5"}, "downloads": -1, "filename": "cherry_picker-0.2.6.tar.gz", "has_sig": false, "md5_digest": "db2409c7ecd3b240657aa31ac2d3f768", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8315, "upload_time": "2017-12-01T03:58:09", "upload_time_iso_8601": "2017-12-01T03:58:09.058382Z", "url": "https://files.pythonhosted.org/packages/e8/10/ec5efffae9c54ddb656d9310d96049fcbf435c22b54f355c665d25df79c0/cherry_picker-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "298887fea25347322822eda10324339a", "sha256": "bbc94c0ffcf3b0f479a6bdf8d517ea6de08d2c4954802937ba672e2d620dc70f"}, "downloads": -1, "filename": "cherry_picker-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "298887fea25347322822eda10324339a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 25713, "upload_time": "2018-01-30T01:20:21", "upload_time_iso_8601": "2018-01-30T01:20:21.577383Z", "url": "https://files.pythonhosted.org/packages/33/44/835a4fad389d4d6ce6f40afc95483e97b8e1bf2fbb110093b0028e40a938/cherry_picker-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfa23ca5b1a85b299914333689928c45", "sha256": "efdf024881240aed17309b22a7e23fe1007c25854fd55c537dc2cc740c382f35"}, "downloads": -1, "filename": "cherry_picker-0.2.7.tar.gz", "has_sig": false, "md5_digest": "bfa23ca5b1a85b299914333689928c45", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8457, "upload_time": "2018-01-30T01:20:35", "upload_time_iso_8601": "2018-01-30T01:20:35.238566Z", "url": "https://files.pythonhosted.org/packages/da/23/30873b99fb50a841f46edb4e1b9259e0b549f344d2c9495a267bcf994f4b/cherry_picker-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "37765e0a48007c11205192b4ed64cd35", "sha256": "e07f98e895f57cb0f73786b082928a8f1513bd24b48d526cc48f1e6516c1d3dd"}, "downloads": -1, "filename": "cherry_picker-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "37765e0a48007c11205192b4ed64cd35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 25371, "upload_time": "2018-02-12T16:43:34", "upload_time_iso_8601": "2018-02-12T16:43:34.564738Z", "url": "https://files.pythonhosted.org/packages/56/b5/89bb1ee84faa3c4e398d7c88203d7bd8d28e09dd830e0cf87314141fb3d5/cherry_picker-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "036d0241cf35a335172d95ed06f03859", "sha256": "925175ea89520dd9aebb58b483aa7f8171814a9f4060255d3bbf8d7804f28673"}, "downloads": -1, "filename": "cherry_picker-0.2.8.tar.gz", "has_sig": false, "md5_digest": "036d0241cf35a335172d95ed06f03859", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8324, "upload_time": "2018-02-12T16:43:40", "upload_time_iso_8601": "2018-02-12T16:43:40.375247Z", "url": "https://files.pythonhosted.org/packages/b7/21/277e995083f9f47e281f94acbef06527051a27cc12ba34ff2502c9c72061/cherry_picker-0.2.8.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "7caef862b9b7e1575dab2f5d5e3c3578", "sha256": "0751241ca7e381fb7ee96c5b06ecd7e553dedcd8079753f37899e0e407a636cb"}, "downloads": -1, "filename": "cherry_picker-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7caef862b9b7e1575dab2f5d5e3c3578", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 29992, "upload_time": "2018-04-01T03:54:12", "upload_time_iso_8601": "2018-04-01T03:54:12.928929Z", "url": "https://files.pythonhosted.org/packages/f1/39/66bbcc7f4787603935ddbf454c7a601b5bedccc5c909d7bb1496ea916db5/cherry_picker-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "793f08fae3df8e5a26d6980470fa1985", "sha256": "14f5e70d118300bbeb5afe925160bc5bf8bba8a6285058bbf76a3a330f3aaf93"}, "downloads": -1, "filename": "cherry_picker-1.0.0.tar.gz", "has_sig": false, "md5_digest": "793f08fae3df8e5a26d6980470fa1985", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9944, "upload_time": "2018-04-01T03:54:14", "upload_time_iso_8601": "2018-04-01T03:54:14.774423Z", "url": "https://files.pythonhosted.org/packages/1c/6d/fb580b05d9d17ef889f8257f6c18cfef9d3ac8c6737bbbb82758ce332341/cherry_picker-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "68cec9e631d1fe0fdb7129bddf6e26b6", "sha256": "1253c520d61c9a425f63d7bef120083b9b171e5a55b1b369cd682520fd3e8b0d"}, "downloads": -1, "filename": "cherry_picker-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "68cec9e631d1fe0fdb7129bddf6e26b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 31004, "upload_time": "2018-04-08T01:38:11", "upload_time_iso_8601": "2018-04-08T01:38:11.219292Z", "url": "https://files.pythonhosted.org/packages/26/43/dcb16c5f8a720e6daf6cc1fdb4a697a1e9f71357d0f82ca0675ca449e126/cherry_picker-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "337da2291b1b909684ee7cbdd92a9e2c", "sha256": "d71bcc5048d7b4c97166daef6fc8bb265c36304e65a23840d18bced8fdec5a87"}, "downloads": -1, "filename": "cherry_picker-1.1.0.tar.gz", "has_sig": false, "md5_digest": "337da2291b1b909684ee7cbdd92a9e2c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10311, "upload_time": "2018-04-08T01:38:12", "upload_time_iso_8601": "2018-04-08T01:38:12.788554Z", "url": "https://files.pythonhosted.org/packages/fd/6a/1041abc77169ed857938e377439505501a5ca60c4a6075b9cba67b7a4379/cherry_picker-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "37d71b3514f8dafe49d1a05f6da3789a", "sha256": "154f5bd5e82a127bb8fa07a229c3433e0aa452856af62dca16fe2a09011e4ff2"}, "downloads": -1, "filename": "cherry_picker-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "37d71b3514f8dafe49d1a05f6da3789a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30943, "upload_time": "2018-05-14T14:04:40", "upload_time_iso_8601": "2018-05-14T14:04:40.662144Z", "url": "https://files.pythonhosted.org/packages/23/3b/f13fe51a1e191762c0c45067fd53a506cb354d4a00a1292e034bf1291706/cherry_picker-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd3e236ed465d05c9ffdfbe7b83b0b2c", "sha256": "c2aad1dbfe08671014e30d8ec9f800012a858ebb88c83e92172682a73f63b775"}, "downloads": -1, "filename": "cherry_picker-1.1.1.tar.gz", "has_sig": false, "md5_digest": "dd3e236ed465d05c9ffdfbe7b83b0b2c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10463, "upload_time": "2018-05-14T14:04:42", "upload_time_iso_8601": "2018-05-14T14:04:42.201450Z", "url": "https://files.pythonhosted.org/packages/31/20/edaadf5ef6f407f999e877697e29062d7d5bd7eca7d11971d6ec7a3395eb/cherry_picker-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "6d5bafa822e8135973247d138c11e8a2", "sha256": "4a4ea88cd1f1803598d95f528f1e86f7ceeb06ab543b672492f458868e3d6ab1"}, "downloads": -1, "filename": "cherry_picker-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6d5bafa822e8135973247d138c11e8a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32720, "upload_time": "2018-06-10T01:28:18", "upload_time_iso_8601": "2018-06-10T01:28:18.764417Z", "url": "https://files.pythonhosted.org/packages/55/85/7e223c0e717da57565dadda8c251a5bc2d1b4e78592f700bc0ed4fabd42e/cherry_picker-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c978f8583a144254013ce7d0fbca5099", "sha256": "9558ae62735c5f2f4c4446e093ea5c9df2fd99b845557a6ad5ca0168dcb86f01"}, "downloads": -1, "filename": "cherry_picker-1.2.0.tar.gz", "has_sig": false, "md5_digest": "c978f8583a144254013ce7d0fbca5099", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11227, "upload_time": "2018-06-10T01:28:20", "upload_time_iso_8601": "2018-06-10T01:28:20.760095Z", "url": "https://files.pythonhosted.org/packages/66/a0/39c0335088630c673a243c3baebe2635fd9777eb1082793577aeae534d8c/cherry_picker-1.2.0.tar.gz", "yanked": false}], "1.2.0.dev1": [{"comment_text": "", "digests": {"md5": "aeaae8d13f96e7ad03bb2e4b5ce1e663", "sha256": "451a63be3bea776e416454083df762cfcfa70df8acb2252daa8fd49624137db9"}, "downloads": -1, "filename": "cherry_picker-1.2.0.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "aeaae8d13f96e7ad03bb2e4b5ce1e663", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32776, "upload_time": "2018-06-10T01:27:38", "upload_time_iso_8601": "2018-06-10T01:27:38.217415Z", "url": "https://files.pythonhosted.org/packages/b8/4e/6d318a8deb80236de1097da39e0feb559ce7223af4964c2197de147fa7a8/cherry_picker-1.2.0.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26179240bd37fd4350467717c0b2f237", "sha256": "41bcc17ebf5c2e4c0b2176df4b5c996b5131f9c88e5229808a73d071eca116cf"}, "downloads": -1, "filename": "cherry_picker-1.2.0.dev1.tar.gz", "has_sig": false, "md5_digest": "26179240bd37fd4350467717c0b2f237", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11237, "upload_time": "2018-06-10T01:27:40", "upload_time_iso_8601": "2018-06-10T01:27:40.364524Z", "url": "https://files.pythonhosted.org/packages/0f/cb/b1be792a31eecb4cfbdd442a4c761971795d98e84fa91fcd887ef9255eec/cherry_picker-1.2.0.dev1.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "c69cea1b05d24b88097799e244c9fac5", "sha256": "b3d56220cc8649239b8604fc2ae66f2de331ad703a10d587aaed7fb73cde6a7b"}, "downloads": -1, "filename": "cherry_picker-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c69cea1b05d24b88097799e244c9fac5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 35386, "upload_time": "2018-08-21T17:15:30", "upload_time_iso_8601": "2018-08-21T17:15:30.121840Z", "url": "https://files.pythonhosted.org/packages/2b/ea/cf6ffea6db677abcf30eda9ba2ba0cad548f8c78d2edd697678f8a5569fc/cherry_picker-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe92d72635f6fc4bee936d4dda52d161", "sha256": "577cda8a48ba911e4fdad903e4959d88fba1e97b4faea4bc611bf92177ebb993"}, "downloads": -1, "filename": "cherry_picker-1.2.1.tar.gz", "has_sig": false, "md5_digest": "fe92d72635f6fc4bee936d4dda52d161", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11919, "upload_time": "2018-08-21T17:15:31", "upload_time_iso_8601": "2018-08-21T17:15:31.667497Z", "url": "https://files.pythonhosted.org/packages/4e/8f/24bd98beb6a715f36e1338b0054c01d40d687486c5928142aed861153e9f/cherry_picker-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "597a5398e664b7ed10b7fbf968191ca3", "sha256": "0683f818f8b7d57b7c8c9240feeebb9a2f4fd880c470aff02b69098e7a5b6680"}, "downloads": -1, "filename": "cherry_picker-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "597a5398e664b7ed10b7fbf968191ca3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 35448, "upload_time": "2019-01-24T02:01:53", "upload_time_iso_8601": "2019-01-24T02:01:53.157460Z", "url": "https://files.pythonhosted.org/packages/36/f8/c1b4ebe68d029df450fa825c72d8e265d24b03a59de949a0acb6cf9b9d12/cherry_picker-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c86a8786d7083f92b6f221b4665e0db", "sha256": "99c62873619f9c72213aa7a61b5f8fa9973147f979432f7f02e80654106cfb40"}, "downloads": -1, "filename": "cherry_picker-1.2.2.tar.gz", "has_sig": false, "md5_digest": "9c86a8786d7083f92b6f221b4665e0db", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11989, "upload_time": "2019-01-24T02:01:55", "upload_time_iso_8601": "2019-01-24T02:01:55.009388Z", "url": "https://files.pythonhosted.org/packages/b1/2a/889f84bb994250332f37966aebd4d497c7da3f246cc29c4fe952dbd5320f/cherry_picker-1.2.2.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "81b70e479ffce389f2b13d56c14ad2f3", "sha256": "fba0e5bc7a46ca0cb3ae3a99469ea96d557d0d6810788d631bad201b8467a0d2"}, "downloads": -1, "filename": "cherry_picker-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "81b70e479ffce389f2b13d56c14ad2f3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 65176, "upload_time": "2019-02-21T20:44:57", "upload_time_iso_8601": "2019-02-21T20:44:57.998194Z", "url": "https://files.pythonhosted.org/packages/ca/e3/5e9632c4c3edd25fc39359e9def773d96c104283adeebfd5ca192a5f86f7/cherry_picker-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3dd307c266507b600bf4fcd78b7dc1d5", "sha256": "ed8b438d038ca2c3f5267e60fc97466bdc2fa833cdb907f5011263554d88a21d"}, "downloads": -1, "filename": "cherry_picker-1.3.0.tar.gz", "has_sig": false, "md5_digest": "3dd307c266507b600bf4fcd78b7dc1d5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16647, "upload_time": "2019-02-21T20:44:59", "upload_time_iso_8601": "2019-02-21T20:44:59.966403Z", "url": "https://files.pythonhosted.org/packages/e7/e1/808acb999c2794a78c1bf5b6be51752c48cf9953bd432be95779f0be66e4/cherry_picker-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "487c7e65dc29c8f1993e87acad24b891", "sha256": "86c30dae5d12acf4f8903abb143c73aad77ac8f4b6367839d1ac0a3b45dba182"}, "downloads": -1, "filename": "cherry_picker-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "487c7e65dc29c8f1993e87acad24b891", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 65208, "upload_time": "2019-03-17T23:28:25", "upload_time_iso_8601": "2019-03-17T23:28:25.732981Z", "url": "https://files.pythonhosted.org/packages/03/d2/bfab761749cf30ad5fd951e36daaaab8b85fb4a5f987487e6564cb5f1717/cherry_picker-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "28532a8d4e9a0e77bce92f60ff15e67c", "sha256": "c100a14be90c10af34a06089ae8911293488de24d55b259457747cf3fe91a9f6"}, "downloads": -1, "filename": "cherry_picker-1.3.1.tar.gz", "has_sig": false, "md5_digest": "28532a8d4e9a0e77bce92f60ff15e67c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16773, "upload_time": "2019-03-17T23:28:27", "upload_time_iso_8601": "2019-03-17T23:28:27.294537Z", "url": "https://files.pythonhosted.org/packages/e8/c3/f59ff2750b8b80bd1e54610cce53b2cb1a2d764d77af2ace4d7689c4b6de/cherry_picker-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "1b52b68023ee21ac0a2009f38b85d398", "sha256": "0638e5ebccf9d1429b8e1bc8618d421ff4697327920870d31dbde7e21c0420b4"}, "downloads": -1, "filename": "cherry_picker-1.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1b52b68023ee21ac0a2009f38b85d398", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 64184, "upload_time": "2019-05-27T23:57:01", "upload_time_iso_8601": "2019-05-27T23:57:01.349409Z", "url": "https://files.pythonhosted.org/packages/2c/bf/79b99bc83ae153341c552536ecec8888dc272597f83a4318fea5a7d422f3/cherry_picker-1.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3d58b13eac163fd07e8a20c63cee824", "sha256": "0205a5f3325e4073f603b5acb4f50949b06077d78f63f5052792f719a0aeffa6"}, "downloads": -1, "filename": "cherry_picker-1.3.2.tar.gz", "has_sig": false, "md5_digest": "c3d58b13eac163fd07e8a20c63cee824", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16778, "upload_time": "2019-05-27T23:57:03", "upload_time_iso_8601": "2019-05-27T23:57:03.330837Z", "url": "https://files.pythonhosted.org/packages/cf/4f/6191aaca3944e34cad9b27913363fa45ef2d2b09db442d0087b54f4b6c6e/cherry_picker-1.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1b52b68023ee21ac0a2009f38b85d398", "sha256": "0638e5ebccf9d1429b8e1bc8618d421ff4697327920870d31dbde7e21c0420b4"}, "downloads": -1, "filename": "cherry_picker-1.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1b52b68023ee21ac0a2009f38b85d398", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 64184, "upload_time": "2019-05-27T23:57:01", "upload_time_iso_8601": "2019-05-27T23:57:01.349409Z", "url": "https://files.pythonhosted.org/packages/2c/bf/79b99bc83ae153341c552536ecec8888dc272597f83a4318fea5a7d422f3/cherry_picker-1.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3d58b13eac163fd07e8a20c63cee824", "sha256": "0205a5f3325e4073f603b5acb4f50949b06077d78f63f5052792f719a0aeffa6"}, "downloads": -1, "filename": "cherry_picker-1.3.2.tar.gz", "has_sig": false, "md5_digest": "c3d58b13eac163fd07e8a20c63cee824", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16778, "upload_time": "2019-05-27T23:57:03", "upload_time_iso_8601": "2019-05-27T23:57:03.330837Z", "url": "https://files.pythonhosted.org/packages/cf/4f/6191aaca3944e34cad9b27913363fa45ef2d2b09db442d0087b54f4b6c6e/cherry_picker-1.3.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:38 2020"}