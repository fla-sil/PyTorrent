{"info": {"author": "Junzi Sun", "author_email": "junzisun@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Build Tools"], "description": "Open Aircraft Performance Model (OpenAP) Toolkit\n========================================================================\n\nThis repository contains all OpenAP databases and a Python implementation which facilitates the data access and aircraft performance computation.\n\n[Download the related research paper](https://www.researchgate.net/publication/332013573_OpenAP_The_open-source_aircraft_performance_model_and_associated_toolkit)\n\nDatabases:\n---------\n\n  - Aircraft\n  - Engines\n  - Drag polar\n  - Kinematic ([WRAP](https://github.com/junzis/wrap))\n  - Navigation\n\nLibraries\n---------\n\n  - `prop`: aircraft and engine properties\n  - `thrust`: model to compute aircraft thrust\n  - `drag`: model to compute aircraft drag\n  - `fuel`: model to compute fuel consumption\n  - `kinematic`: a utility library to access WRAP data\n  - `aero`: common aeronautical conversions\n  - `nav`: model to access navigation information\n  - `segment`: a utility library to determine climb, cruise, descent, level flight\n  - `phase`: a wrapper around `segment`, providing identification of all flight phases\n  - `traj`: package contains a set of tools related with trajectory generation\n\nExamples\n--------\n\nGet the aircraft and engine data:\n\n```python\nfrom openap import prop\n\naircraft = prop.aircraft('A320')\nengine = prop.engine('CFM56-5B4')\n```\n\nCompute maximum aircraft engine thrust:\n\n```python\nfrom openap import Thrust\n\nthrust = Thrust(ac='A320', eng='CFM56-5B4')\n\nT = thrust.takeoff(tas=100, alt=0)\nT = thrust.climb(tas=200, alt=20000, roc=1000)\nT = thrust.cruise(tas=230, alt=32000)\n```\n\nCompute the aircraft drag:\n\n```python\nfrom openap import Drag\n\ndrag = Drag(ac='A320')\n\nD = drag.clean(mass=60000, tas=200, alt=20000, path_angle=5)\nD = drag.initclimb(mass=60000, tas=150, alt=1000, path_angle=10)\nD = drag.approach(mass=50000, tas=150, alt=1000, path_angle=-10)\n```\n\nCompute the fuel flow:\n\n```python\nfrom openap import FuelFlow\n\nff = FuelFlow(ac='A320', eng='CFM56-5B4')\n\nFF = ff.at_thrust(thr=50000)\nFF = ff.takeoff(tas=100, alt=0, throttle=1)\nFF = ff.enroute(mass=60000, tas=200, alt=20000, path_angle=3)\nFF = ff.enroute(mass=60000, tas=230, alt=32000, path_angle=0)\n```\n\nAccessing the WRAP parameters:\n\n```python\nfrom openap import WRAP\n\nwrap = WRAP(ac='A320')\n\nparam = wrap.takeoff_speed()\nparam = wrap.takeoff_distance()\nparam = wrap.takeoff_acceleration()\nparam = wrap.initclimb_vcas()\nparam = wrap.initclimb_vs()\nparam = wrap.climb_range()\nparam = wrap.climb_const_vcas()\nparam = wrap.climb_const_mach()\nparam = wrap.climb_cross_alt_concas()\nparam = wrap.climb_cross_alt_conmach()\nparam = wrap.climb_vs_pre_concas()\nparam = wrap.climb_vs_concas()\nparam = wrap.climb_vs_conmach()\nparam = wrap.cruise_range()\nparam = wrap.cruise_alt()\nparam = wrap.cruise_init_alt()\nparam = wrap.cruise_mach()\nparam = wrap.descent_range()\nparam = wrap.descent_const_mach()\nparam = wrap.descent_const_vcas()\nparam = wrap.descent_cross_alt_conmach()\nparam = wrap.descent_cross_alt_concas()\nparam = wrap.descent_vs_conmach()\nparam = wrap.descent_vs_concas()\nparam = wrap.descent_vs_post_concas()\nparam = wrap.finalapp_vcas()\nparam = wrap.finalapp_vs()\nparam = wrap.landing_speed()\nparam = wrap.landing_distance()\nparam = wrap.landing_acceleration()\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "OpenAP,Open Aircraft Performance,Open Data", "license": "GNU GPL v3", "maintainer": "", "maintainer_email": "", "name": "openap", "package_url": "https://pypi.org/project/openap/", "platform": "", "project_url": "https://pypi.org/project/openap/", "project_urls": null, "release_url": "https://pypi.org/project/openap/1.0.dev1/", "requires_dist": ["numpy", "scipy", "scikit-fuzzy", "pandas", "pyyaml"], "requires_python": "", "summary": "Open Aircraft Performance Model (OpenAP) in Python", "version": "1.0.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Open Aircraft Performance Model (OpenAP) Toolkit<br>========================================================================<br><br>This repository contains all OpenAP databases and a Python implementation which facilitates the data access and aircraft performance computation.<br><br>[Download the related research paper](https://www.researchgate.net/publication/332013573_OpenAP_The_open-source_aircraft_performance_model_and_associated_toolkit)<br><br>Databases:<br>---------<br><br>  - Aircraft<br>  - Engines<br>  - Drag polar<br>  - Kinematic ([WRAP](https://github.com/junzis/wrap))<br>  - Navigation<br><br>Libraries<br>---------<br><br>  - `prop`: aircraft and engine properties<br>  - `thrust`: model to compute aircraft thrust<br>  - `drag`: model to compute aircraft drag<br>  - `fuel`: model to compute fuel consumption<br>  - `kinematic`: a utility library to access WRAP data<br>  - `aero`: common aeronautical conversions<br>  - `nav`: model to access navigation information<br>  - `segment`: a utility library to determine climb, cruise, descent, level flight<br>  - `phase`: a wrapper around `segment`, providing identification of all flight phases<br>  - `traj`: package contains a set of tools related with trajectory generation<br><br>Examples<br>--------<br><br>Get the aircraft and engine data:<br><br>```python<br>from openap import prop<br><br>aircraft = prop.aircraft('A320')<br>engine = prop.engine('CFM56-5B4')<br>```<br><br>Compute maximum aircraft engine thrust:<br><br>```python<br>from openap import Thrust<br><br>thrust = Thrust(ac='A320', eng='CFM56-5B4')<br><br>T = thrust.takeoff(tas=100, alt=0)<br>T = thrust.climb(tas=200, alt=20000, roc=1000)<br>T = thrust.cruise(tas=230, alt=32000)<br>```<br><br>Compute the aircraft drag:<br><br>```python<br>from openap import Drag<br><br>drag = Drag(ac='A320')<br><br>D = drag.clean(mass=60000, tas=200, alt=20000, path_angle=5)<br>D = drag.initclimb(mass=60000, tas=150, alt=1000, path_angle=10)<br>D = drag.approach(mass=50000, tas=150, alt=1000, path_angle=-10)<br>```<br><br>Compute the fuel flow:<br><br>```python<br>from openap import FuelFlow<br><br>ff = FuelFlow(ac='A320', eng='CFM56-5B4')<br><br>FF = ff.at_thrust(thr=50000)<br>FF = ff.takeoff(tas=100, alt=0, throttle=1)<br>FF = ff.enroute(mass=60000, tas=200, alt=20000, path_angle=3)<br>FF = ff.enroute(mass=60000, tas=230, alt=32000, path_angle=0)<br>```<br><br>Accessing the WRAP parameters:<br><br>```python<br>from openap import WRAP<br><br>wrap = WRAP(ac='A320')<br><br>param = wrap.takeoff_speed()<br>param = wrap.takeoff_distance()<br>param = wrap.takeoff_acceleration()<br>param = wrap.initclimb_vcas()<br>param = wrap.initclimb_vs()<br>param = wrap.climb_range()<br>param = wrap.climb_const_vcas()<br>param = wrap.climb_const_mach()<br>param = wrap.climb_cross_alt_concas()<br>param = wrap.climb_cross_alt_conmach()<br>param = wrap.climb_vs_pre_concas()<br>param = wrap.climb_vs_concas()<br>param = wrap.climb_vs_conmach()<br>param = wrap.cruise_range()<br>param = wrap.cruise_alt()<br>param = wrap.cruise_init_alt()<br>param = wrap.cruise_mach()<br>param = wrap.descent_range()<br>param = wrap.descent_const_mach()<br>param = wrap.descent_const_vcas()<br>param = wrap.descent_cross_alt_conmach()<br>param = wrap.descent_cross_alt_concas()<br>param = wrap.descent_vs_conmach()<br>param = wrap.descent_vs_concas()<br>param = wrap.descent_vs_post_concas()<br>param = wrap.finalapp_vcas()<br>param = wrap.finalapp_vs()<br>param = wrap.landing_speed()<br>param = wrap.landing_distance()<br>param = wrap.landing_acceleration()<br>```<br><br><br>\n          </div>"}, "last_serial": 5096595, "releases": {"1.0.dev1": [{"comment_text": "", "digests": {"md5": "b4ce5745b0b36580a5ce22e98fda1c7a", "sha256": "44db43611b31caee738275fcdeff9c14a2582646e44b51381c916fcf5e93c9db"}, "downloads": -1, "filename": "openap-1.0.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b4ce5745b0b36580a5ce22e98fda1c7a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2656251, "upload_time": "2019-04-04T11:11:00", "upload_time_iso_8601": "2019-04-04T11:11:00.165269Z", "url": "https://files.pythonhosted.org/packages/b2/10/8af97751139b68219826687a052586e05b4976f83e1d32ce2991befad87f/openap-1.0.dev1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6aefc655a725252179fa89ade1fb9efa", "sha256": "b775ca26bf98d4dced0ed0d83705c410ecf1f0d3e48ee0457f18adc4dce4d1b2"}, "downloads": -1, "filename": "openap-1.0.dev1.tar.gz", "has_sig": false, "md5_digest": "6aefc655a725252179fa89ade1fb9efa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2600053, "upload_time": "2019-04-04T11:11:03", "upload_time_iso_8601": "2019-04-04T11:11:03.447901Z", "url": "https://files.pythonhosted.org/packages/bf/26/2b416dfada65f11c5bd6104a864f031906f63d4ae7a91b259b2a3233eb9f/openap-1.0.dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b4ce5745b0b36580a5ce22e98fda1c7a", "sha256": "44db43611b31caee738275fcdeff9c14a2582646e44b51381c916fcf5e93c9db"}, "downloads": -1, "filename": "openap-1.0.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b4ce5745b0b36580a5ce22e98fda1c7a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2656251, "upload_time": "2019-04-04T11:11:00", "upload_time_iso_8601": "2019-04-04T11:11:00.165269Z", "url": "https://files.pythonhosted.org/packages/b2/10/8af97751139b68219826687a052586e05b4976f83e1d32ce2991befad87f/openap-1.0.dev1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6aefc655a725252179fa89ade1fb9efa", "sha256": "b775ca26bf98d4dced0ed0d83705c410ecf1f0d3e48ee0457f18adc4dce4d1b2"}, "downloads": -1, "filename": "openap-1.0.dev1.tar.gz", "has_sig": false, "md5_digest": "6aefc655a725252179fa89ade1fb9efa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2600053, "upload_time": "2019-04-04T11:11:03", "upload_time_iso_8601": "2019-04-04T11:11:03.447901Z", "url": "https://files.pythonhosted.org/packages/bf/26/2b416dfada65f11c5bd6104a864f031906f63d4ae7a91b259b2a3233eb9f/openap-1.0.dev1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:30 2020"}