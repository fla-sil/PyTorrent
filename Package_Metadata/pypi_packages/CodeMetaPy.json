{"info": {"author": "Maarten van Gompel", "author_email": "proycon@anaproy.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: POSIX", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development"], "description": ".. image:: https://travis-ci.com/proycon/codemetapy.svg?branch=master\n    :target: https://travis-ci.com/proycon/codemetapy\n\n.. image:: http://applejack.science.ru.nl/lamabadge.php/codemetapy\n   :target: http://applejack.science.ru.nl/languagemachines/\n\n.. image:: https://www.repostatus.org/badges/latest/active.svg\n   :alt: Project Status: Active \u2013 The project has reached a stable, usable state and is being actively developed.\n   :target: https://www.repostatus.org/#active\n\n.. image:: https://img.shields.io/pypi/v/codemetapy\n   :alt: Latest release in the Python Package Index\n   :target: https://pypi.org/project/codemetapy/\n\nCodeMetaPy\n=================\n\nThe goal of CodeMetaPy is to generate the JSON-LD file, codemeta.json containing software metadata describing a Python\npackage. For more general information about the CodeMeta Project for defining software metadata, see\nhttps://codemeta.github.io. In particular, new users might want to start with the User Guide, while those looking to\nlearn more about JSON-LD and consuming existing codemeta files should see the Developer Guide.\n\nFor Python packages, codemetapy uses ``importlib.metadata`` (Python 3.8+) or its backported variant (for older Python\nversions) to read the metadata of installed packages. It should therefore be compatible irregardless of whether you\nspecified in your metadata in ``setup.py``, ``setup.cfg``, ``pyproject.toml`` or using any other backend.\n\nMoreover, CodeMetaPy also supports conversions from other package types, such as debian packages (APT) (but this is\nlimited). For R, see `codemetar <https://github.com/ropensci/codemetar>`_ instead.\n\nOne of the most notable features of this tool is that it allows chaining to successively update metadata based on\nmultiple sources.\n\nInstallation\n----------------\n\n``pip install codemetapy``\n\nUsage\n---------------\n\nQuery and convert any installed python package:\n\n``$ codemetapy somepackage``\n\nOutput will be to standard output by default, to write it to an output file instead, do either:\n\n``$ codemetapy somepackage > codemeta.json``\n\nor use the ``-O`` parameter:\n\n``$ codemetapy -O codemeta.json somepackage``\n\nThe tool also supports adding properties through parameters:\n\n``$ codemetapy --developmentStatus active somepackage > codemeta.json``\n\nTo read an existing codemeta.json and extend it:\n\n``$ codemetapy -i json,python codemeta.json somepackage > codemeta.json``\n\nThis tool can also deal with debian packages  by parsing the output of ``apt show`` (albeit limited):\n\n``$ apt show somepackage | codemetapy -i apt -``\n\nHere ``-`` represents standard input, which enables you to use piping solutions on a unix shell, ``-i`` denotes the\ninput types, you can chain as many as you want. The number of input types specifies must correspond exactly to the\nnumber of input sources (the positional arguments).\n\nEntrypoint Extension\n----------------------\n\nThough this is not part of the codemeta specification, the tool currently supports an extra ``entryPoints`` property\nwith type ``EntryPoint``. This can be used to describe the entry points specified in a python package (entry points will\nhave use a ``file://`` url to refer to the actual entrypoints, this is a bit of a liberal use...). Because this is a\nnon-standard extension it has to be explicitly enabled using ``--with-entrypoints``.\n\nIntegration in setup.py\n-------------------------\n\nYou can integrate ``codemeta.json`` generation in your project's ``setup.py``, this will add an extra ``python setup.py\ncodemeta`` command that will generate a new metadata file or update an already existing metadata file. Note that this\nmust be run *after* ``python setup.py install`` (or ``python setup.py develop``).\n\nTo integrate this, add the following to your project's ``setup.py``:\n\n.. code:: python\n\n    try:\n        from codemeta.codemeta import CodeMetaCommand\n        cmdclass={\n            'codemeta': CodeMetaCommand,\n        }\n    except ImportError:\n        cmdclass={}\n\nAnd in your ``setup()`` call add the parameter:\n\n.. code:: python\n\n    cmdclass=cmdclass\n\nThis will ensure your ``setup.py`` works in all cases, even if codemetapy is not installed, and that the command will be\navailable if codemetapy is available.\n\nTo make use of the entrypoint extension, you need to explicitly specify ``python setup.py codemeta --with-entrypoints``.\n\nIf you want to ship your package with the generated ``codemeta.json``, then simply add a line saying ``codemeta.json`` to\nthe file ``MANIFEST.in`` in the root of your project.\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/proycon/codemeta", "keywords": "software metadata codemeta doap pip pypi distutils admssw", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "CodeMetaPy", "package_url": "https://pypi.org/project/CodeMetaPy/", "platform": "", "project_url": "https://pypi.org/project/CodeMetaPy/", "project_urls": {"Homepage": "https://github.com/proycon/codemeta"}, "release_url": "https://pypi.org/project/CodeMetaPy/0.3.2/", "requires_dist": null, "requires_python": "", "summary": "Generate CodeMeta metadata for Python packages", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.com/proycon/codemetapy\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/proycon/codemetapy.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/820ee0ea4250522ef8e5bfb344cdc3192ce1aa28/68747470733a2f2f7472617669732d63692e636f6d2f70726f79636f6e2f636f64656d65746170792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://applejack.science.ru.nl/languagemachines/\" rel=\"nofollow\"><img alt=\"http://applejack.science.ru.nl/lamabadge.php/codemetapy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90aa581bfe3cab3045a9c4fd28db21948a8d0a33/687474703a2f2f6170706c656a61636b2e736369656e63652e72752e6e6c2f6c616d6162616467652e7068702f636f64656d6574617079\"></a>\n<a href=\"https://www.repostatus.org/#active\" rel=\"nofollow\"><img alt=\"Project Status: Active \u2013 The project has reached a stable, usable state and is being actively developed.\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cbb8ab8ca3109b443de9728eb9fc0fa6113fe21f/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667\"></a>\n<a href=\"https://pypi.org/project/codemetapy/\" rel=\"nofollow\"><img alt=\"Latest release in the Python Package Index\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/22edb72eedecd2ee23da8c9e280b2f945d8d938d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f64656d6574617079\"></a>\n<div id=\"codemetapy\">\n<h2>CodeMetaPy</h2>\n<p>The goal of CodeMetaPy is to generate the JSON-LD file, codemeta.json containing software metadata describing a Python\npackage. For more general information about the CodeMeta Project for defining software metadata, see\n<a href=\"https://codemeta.github.io\" rel=\"nofollow\">https://codemeta.github.io</a>. In particular, new users might want to start with the User Guide, while those looking to\nlearn more about JSON-LD and consuming existing codemeta files should see the Developer Guide.</p>\n<p>For Python packages, codemetapy uses <tt>importlib.metadata</tt> (Python 3.8+) or its backported variant (for older Python\nversions) to read the metadata of installed packages. It should therefore be compatible irregardless of whether you\nspecified in your metadata in <tt>setup.py</tt>, <tt>setup.cfg</tt>, <tt>pyproject.toml</tt> or using any other backend.</p>\n<p>Moreover, CodeMetaPy also supports conversions from other package types, such as debian packages (APT) (but this is\nlimited). For R, see <a href=\"https://github.com/ropensci/codemetar\" rel=\"nofollow\">codemetar</a> instead.</p>\n<p>One of the most notable features of this tool is that it allows chaining to successively update metadata based on\nmultiple sources.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p><tt>pip install codemetapy</tt></p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Query and convert any installed python package:</p>\n<p><tt>$ codemetapy somepackage</tt></p>\n<p>Output will be to standard output by default, to write it to an output file instead, do either:</p>\n<p><tt>$ codemetapy somepackage &gt; codemeta.json</tt></p>\n<p>or use the <tt><span class=\"pre\">-O</span></tt> parameter:</p>\n<p><tt>$ codemetapy <span class=\"pre\">-O</span> codemeta.json somepackage</tt></p>\n<p>The tool also supports adding properties through parameters:</p>\n<p><tt>$ codemetapy <span class=\"pre\">--developmentStatus</span> active somepackage &gt; codemeta.json</tt></p>\n<p>To read an existing codemeta.json and extend it:</p>\n<p><tt>$ codemetapy <span class=\"pre\">-i</span> json,python codemeta.json somepackage &gt; codemeta.json</tt></p>\n<p>This tool can also deal with debian packages  by parsing the output of <tt>apt show</tt> (albeit limited):</p>\n<p><tt>$ apt show somepackage | codemetapy <span class=\"pre\">-i</span> apt -</tt></p>\n<p>Here <tt>-</tt> represents standard input, which enables you to use piping solutions on a unix shell, <tt><span class=\"pre\">-i</span></tt> denotes the\ninput types, you can chain as many as you want. The number of input types specifies must correspond exactly to the\nnumber of input sources (the positional arguments).</p>\n</div>\n<div id=\"entrypoint-extension\">\n<h3>Entrypoint Extension</h3>\n<p>Though this is not part of the codemeta specification, the tool currently supports an extra <tt>entryPoints</tt> property\nwith type <tt>EntryPoint</tt>. This can be used to describe the entry points specified in a python package (entry points will\nhave use a <tt><span class=\"pre\">file://</span></tt> url to refer to the actual entrypoints, this is a bit of a liberal use\u2026). Because this is a\nnon-standard extension it has to be explicitly enabled using <tt><span class=\"pre\">--with-entrypoints</span></tt>.</p>\n</div>\n<div id=\"integration-in-setup-py\">\n<h3>Integration in setup.py</h3>\n<p>You can integrate <tt>codemeta.json</tt> generation in your project\u2019s <tt>setup.py</tt>, this will add an extra <tt>python setup.py\ncodemeta</tt> command that will generate a new metadata file or update an already existing metadata file. Note that this\nmust be run <em>after</em> <tt>python setup.py install</tt> (or <tt>python setup.py develop</tt>).</p>\n<p>To integrate this, add the following to your project\u2019s <tt>setup.py</tt>:</p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">codemeta.codemeta</span> <span class=\"kn\">import</span> <span class=\"n\">CodeMetaCommand</span>\n    <span class=\"n\">cmdclass</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'codemeta'</span><span class=\"p\">:</span> <span class=\"n\">CodeMetaCommand</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n<span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n    <span class=\"n\">cmdclass</span><span class=\"o\">=</span><span class=\"p\">{}</span>\n</pre>\n<p>And in your <tt>setup()</tt> call add the parameter:</p>\n<pre><span class=\"n\">cmdclass</span><span class=\"o\">=</span><span class=\"n\">cmdclass</span>\n</pre>\n<p>This will ensure your <tt>setup.py</tt> works in all cases, even if codemetapy is not installed, and that the command will be\navailable if codemetapy is available.</p>\n<p>To make use of the entrypoint extension, you need to explicitly specify <tt>python setup.py codemeta <span class=\"pre\">--with-entrypoints</span></tt>.</p>\n<p>If you want to ship your package with the generated <tt>codemeta.json</tt>, then simply add a line saying <tt>codemeta.json</tt> to\nthe file <tt>MANIFEST.in</tt> in the root of your project.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6564957, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "150bfdd5e740969d855ed64c1e3bbae5", "sha256": "2ad8f4ff67aef8b3f498febee65b01639f72b480b7c10f69f86647b01d1fca94"}, "downloads": -1, "filename": "CodeMetaPy-0.1.tar.gz", "has_sig": false, "md5_digest": "150bfdd5e740969d855ed64c1e3bbae5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31074, "upload_time": "2018-04-17T21:31:37", "upload_time_iso_8601": "2018-04-17T21:31:37.408023Z", "url": "https://files.pythonhosted.org/packages/69/64/f5ded993d9e3bc79abd5854f20c957724500aa5dab5e8e8e20abe0332e75/CodeMetaPy-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "cef35c3eaa56a22ba0be532165cb8ba0", "sha256": "f7484f767af0c11a6da343eeaecfd104deb043fcaba0de8f8765d8d6a1ff1612"}, "downloads": -1, "filename": "CodeMetaPy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cef35c3eaa56a22ba0be532165cb8ba0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30580, "upload_time": "2018-04-23T14:34:34", "upload_time_iso_8601": "2018-04-23T14:34:34.078958Z", "url": "https://files.pythonhosted.org/packages/9a/46/fe8a823bccdb6ebbf84243c05239c257129502a556b501e9efed71bfc2a0/CodeMetaPy-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d106295d3f0b0b3eaf9b24377a3437ef", "sha256": "277c7daada73016c5d79e3313c1720720865323575332a9d74b5ed29afa21c29"}, "downloads": -1, "filename": "CodeMetaPy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d106295d3f0b0b3eaf9b24377a3437ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31528, "upload_time": "2018-05-02T09:47:26", "upload_time_iso_8601": "2018-05-02T09:47:26.659385Z", "url": "https://files.pythonhosted.org/packages/93/ba/f62f086ce1678167f20662bd14e4ae9c1ba5e6cea38c062deb7eac4ae46c/CodeMetaPy-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "bf536f3e2c67e09478bb8fd327544824", "sha256": "54428988f9c4a20b186c613a76bfa108238961eaee134772e660bd19c09e6ec5"}, "downloads": -1, "filename": "CodeMetaPy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "bf536f3e2c67e09478bb8fd327544824", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31718, "upload_time": "2018-05-10T15:56:30", "upload_time_iso_8601": "2018-05-10T15:56:30.682316Z", "url": "https://files.pythonhosted.org/packages/4f/9f/78557e3f19d062089c74287dbaf29c5015f6c21289f452b9e5a90f2a8251/CodeMetaPy-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "2538768b7bf41acffe3d93a5b1d59597", "sha256": "f285620e48e008a1e2974408ace3b60f1df5cd32483a92519391d10bc1424c08"}, "downloads": -1, "filename": "CodeMetaPy-0.1.4.tar.gz", "has_sig": false, "md5_digest": "2538768b7bf41acffe3d93a5b1d59597", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31745, "upload_time": "2018-05-19T21:54:57", "upload_time_iso_8601": "2018-05-19T21:54:57.581284Z", "url": "https://files.pythonhosted.org/packages/8f/db/e939f2706586116a2876e3efd532782eebefbcdb00c4983dceae5529b017/CodeMetaPy-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "29927b1205e398bec0055c524b780447", "sha256": "276968c875c840f4f8443f2f790fa02d74fc5ead1bbe4e43d718c1064212b3f7"}, "downloads": -1, "filename": "CodeMetaPy-0.1.5.tar.gz", "has_sig": false, "md5_digest": "29927b1205e398bec0055c524b780447", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31760, "upload_time": "2018-05-19T22:39:30", "upload_time_iso_8601": "2018-05-19T22:39:30.942211Z", "url": "https://files.pythonhosted.org/packages/3b/a9/e9279b342a9a8406308eb5438356ee1eb53967ff462c2886126f45fa49b1/CodeMetaPy-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "8d937a00805e3c024292feb2cbe1722a", "sha256": "54a00f1f742a29df374062426b9b1f7bff3328bf7255bf80a5c09a62d87dca75"}, "downloads": -1, "filename": "CodeMetaPy-0.1.6.tar.gz", "has_sig": false, "md5_digest": "8d937a00805e3c024292feb2cbe1722a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32077, "upload_time": "2018-08-31T16:28:17", "upload_time_iso_8601": "2018-08-31T16:28:17.750446Z", "url": "https://files.pythonhosted.org/packages/b7/de/0c8030586fa6740c50df23e0847d96b693296131b9f5f58453e1110a4512/CodeMetaPy-0.1.6.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "75c5008707d14f1b3b40c771486f8b71", "sha256": "99c7597587993a048bc838173288f04d20575f10580aaca550e984610c2d8971"}, "downloads": -1, "filename": "CodeMetaPy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "75c5008707d14f1b3b40c771486f8b71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32532, "upload_time": "2018-09-17T11:02:28", "upload_time_iso_8601": "2018-09-17T11:02:28.752618Z", "url": "https://files.pythonhosted.org/packages/ad/7f/5b1c63961441b77cb0a1b266a2bed616697c89af785281371e8be072793c/CodeMetaPy-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0f3a34a5afcb2baea88f2e1b6e522d28", "sha256": "34d7c59db00b3eeadb72493d238ca637ac9b5bf32e2db6dcf61e3f06699a7b99"}, "downloads": -1, "filename": "CodeMetaPy-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0f3a34a5afcb2baea88f2e1b6e522d28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32644, "upload_time": "2018-10-08T13:48:27", "upload_time_iso_8601": "2018-10-08T13:48:27.172056Z", "url": "https://files.pythonhosted.org/packages/ca/72/073048540ca3e87d699728e9ec8fdb8c4446271f943bb7b7954001d61f79/CodeMetaPy-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "f53c1f1efc42508d56dc5e8b646c7d92", "sha256": "059315bdba4f88eb625dadb20b08f6fa4b369a32d1eebca0f45da6ceb04cdd26"}, "downloads": -1, "filename": "CodeMetaPy-0.2.2.tar.gz", "has_sig": false, "md5_digest": "f53c1f1efc42508d56dc5e8b646c7d92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32746, "upload_time": "2019-09-09T18:36:12", "upload_time_iso_8601": "2019-09-09T18:36:12.747298Z", "url": "https://files.pythonhosted.org/packages/04/51/c5cbde7b61f91b8e1918bd96cca420f38c33ddafe82731409cec93614b04/CodeMetaPy-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "598220d82cfbdc60dffa7142288a15d5", "sha256": "a14b2e788be2e3f613b5dbc94d318ee821a1a45c938f0333bfd8e5928b264de0"}, "downloads": -1, "filename": "CodeMetaPy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "598220d82cfbdc60dffa7142288a15d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36739, "upload_time": "2019-11-15T19:23:18", "upload_time_iso_8601": "2019-11-15T19:23:18.753140Z", "url": "https://files.pythonhosted.org/packages/d1/02/237154e60781b7da71a4a0261cf8e9ef0831308b7632a20ed156406744a3/CodeMetaPy-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "e973f4131eaa6295ef19b47cdb7f0bcb", "sha256": "f42e283677b42cba86bf83bc7c87387123101b5e2cf382284c9a57fa04d2c2c2"}, "downloads": -1, "filename": "CodeMetaPy-0.3.1.tar.gz", "has_sig": false, "md5_digest": "e973f4131eaa6295ef19b47cdb7f0bcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37455, "upload_time": "2019-11-20T15:04:50", "upload_time_iso_8601": "2019-11-20T15:04:50.772053Z", "url": "https://files.pythonhosted.org/packages/e1/99/8ba4b1e798a72b5c8017530ea2782076c375c5ca262955057330576d36cb/CodeMetaPy-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "8316cdf30b7d8dd612eade66667b70c1", "sha256": "79677245333616a82b8a2387dab5d09626466606ced7669cc5c4af966a4e2209"}, "downloads": -1, "filename": "CodeMetaPy-0.3.2.tar.gz", "has_sig": false, "md5_digest": "8316cdf30b7d8dd612eade66667b70c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37474, "upload_time": "2020-02-03T21:40:01", "upload_time_iso_8601": "2020-02-03T21:40:01.148571Z", "url": "https://files.pythonhosted.org/packages/83/30/e2761830b9262bdfb09d937a76f4b014dd1fe912d68af071f946991d3ff5/CodeMetaPy-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8316cdf30b7d8dd612eade66667b70c1", "sha256": "79677245333616a82b8a2387dab5d09626466606ced7669cc5c4af966a4e2209"}, "downloads": -1, "filename": "CodeMetaPy-0.3.2.tar.gz", "has_sig": false, "md5_digest": "8316cdf30b7d8dd612eade66667b70c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37474, "upload_time": "2020-02-03T21:40:01", "upload_time_iso_8601": "2020-02-03T21:40:01.148571Z", "url": "https://files.pythonhosted.org/packages/83/30/e2761830b9262bdfb09d937a76f4b014dd1fe912d68af071f946991d3ff5/CodeMetaPy-0.3.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:15 2020"}