{"info": {"author": "Canadian Astronomy Data Centre", "author_email": "cadc@nrc-cnrc.gc.ca", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Affero General Public License v3", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "cadcetrans\n==========\n\n.. image:: https://img.shields.io/pypi/v/cadcetrans.svg   \n    :target: https://pypi.python.org/pypi/cadcetrans\n\nCanadian Astronomy Data Centre - electronic transfer\n----------------------------------------------------\n\n``cadc-etrans`` is an application for electronic transfer of data and\nmetadata to the Canadian Astronomy Data Centre (CADC). Files to be\nprocessed by ``cadc-etrans`` are to be placed in one of the following\nsubdirectories of a source directory specified by the user:\n\n- new - for files expected to be new to the CADC archive. ``cadc-etrans``\n  flags as errors when this is not the case.\n- replaced - for files expected to be in the CADC archive already.\n  ``cadc-etrans`` flags it as an error if the files are missing.\n- any - for files whose presence in the CADC archive is not important\n\n``cadc-etrans`` can be configured to perform checks on the names of the files\naccording to provided rules and checks on the type of the file. Files that\nfail these checks are moved to a rejected subdirectory and grouped according\nto the type of the encountered error. Users are expected to fix the problems\nand placed the files back in the source directory for reprocessing.\n\nFiles that pass all the verifications are sent to the CADC archive.\n\nNOTE: To ensure that a file is fully received before attempting to transfer\nit, it must spend a minimum amount of time (5min) in the input directory\nwithout being modified/updated prior to its processing.\n\nFunctionality of ``cadc-etrans`` is configured by modifying the\n``~/.config/cadc-etrans`` file.\n\nUsage\n-----\n\n``cadc-etrans`` is usually used with a crontab. Example below processes files\nevery 15 min.\n\n::\n\n    */15 * * * * cadc-etrans data --cert /home/auser/.ssl/cadcproxy.pem\n    -c /home/auser/.config/cadc/dao-namecheck.xml sourcedir\n\n``cadc-etrans`` can backup the transfer logs to a vospace:\n\n::\n\n    0 11 * * * cadc-etrans status -b --cert /home/auser/.ssl/cadcproxy.pem\n    sourcedir\n\n\nDocker Usage\n------------\n\nTo avoid deploying the application environment (e.g. installing fitsverify on\nthe host), the application can be run from a docker container.\nTo build the container, download the content of the\n`https://github.com/opencadc/cadctools/tree/master/cadcetrans/docker` directory\ncustomize the config files ``cadc-etrans-config`` and ``namecheck.xml`` and\nbuild the container:\n\n::\n\n    cd docker\n    docker build -t cadcetrans .\n\nTo invoke it:\n\n::\n\n    docker run --rm --mount type=bind,source=/tmp/logs,target=/logging\n    --mount type=bind,source=/tmp/input/,target=/input cadcetrans status\n\nor:\n\n::\n\n    docker run --rm --mount type=bind,source=/tmp/logs,target=/logging\n    --mount type=bind,source=/tmp/input/,target=/input cadcetrans data\n\nNote the two mounts that are required: one where the transfer logs will be\nrecorded so that they are available outside the container and the other\none for the source directory (``source=<>`` part is what needs to be customized\nto point to directories on the local host.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.cadc-ccda.hia-iha.nrc-cnrc.gc.ca", "keywords": "", "license": "AGPLv3", "maintainer": "", "maintainer_email": "", "name": "cadcetrans", "package_url": "https://pypi.org/project/cadcetrans/", "platform": "", "project_url": "https://pypi.org/project/cadcetrans/", "project_urls": {"Homepage": "http://www.cadc-ccda.hia-iha.nrc-cnrc.gc.ca"}, "release_url": "https://pypi.org/project/cadcetrans/0.9.2/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "summary": "Client for transferring data Canadian Astronomy Data Centre", "version": "0.9.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/cadcetrans\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/cadcetrans.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a35194f57e948dc1deff723b52496ad36aba48a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f63616463657472616e732e737667\"></a>\n<div id=\"canadian-astronomy-data-centre-electronic-transfer\">\n<h2>Canadian Astronomy Data Centre - electronic transfer</h2>\n<p><tt><span class=\"pre\">cadc-etrans</span></tt> is an application for electronic transfer of data and\nmetadata to the Canadian Astronomy Data Centre (CADC). Files to be\nprocessed by <tt><span class=\"pre\">cadc-etrans</span></tt> are to be placed in one of the following\nsubdirectories of a source directory specified by the user:</p>\n<ul>\n<li>new - for files expected to be new to the CADC archive. <tt><span class=\"pre\">cadc-etrans</span></tt>\nflags as errors when this is not the case.</li>\n<li>replaced - for files expected to be in the CADC archive already.\n<tt><span class=\"pre\">cadc-etrans</span></tt> flags it as an error if the files are missing.</li>\n<li>any - for files whose presence in the CADC archive is not important</li>\n</ul>\n<p><tt><span class=\"pre\">cadc-etrans</span></tt> can be configured to perform checks on the names of the files\naccording to provided rules and checks on the type of the file. Files that\nfail these checks are moved to a rejected subdirectory and grouped according\nto the type of the encountered error. Users are expected to fix the problems\nand placed the files back in the source directory for reprocessing.</p>\n<p>Files that pass all the verifications are sent to the CADC archive.</p>\n<p>NOTE: To ensure that a file is fully received before attempting to transfer\nit, it must spend a minimum amount of time (5min) in the input directory\nwithout being modified/updated prior to its processing.</p>\n<p>Functionality of <tt><span class=\"pre\">cadc-etrans</span></tt> is configured by modifying the\n<tt><span class=\"pre\">~/.config/cadc-etrans</span></tt> file.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><tt><span class=\"pre\">cadc-etrans</span></tt> is usually used with a crontab. Example below processes files\nevery 15 min.</p>\n<pre>*/15 * * * * cadc-etrans data --cert /home/auser/.ssl/cadcproxy.pem\n-c /home/auser/.config/cadc/dao-namecheck.xml sourcedir\n</pre>\n<p><tt><span class=\"pre\">cadc-etrans</span></tt> can backup the transfer logs to a vospace:</p>\n<pre>0 11 * * * cadc-etrans status -b --cert /home/auser/.ssl/cadcproxy.pem\nsourcedir\n</pre>\n</div>\n<div id=\"docker-usage\">\n<h2>Docker Usage</h2>\n<p>To avoid deploying the application environment (e.g. installing fitsverify on\nthe host), the application can be run from a docker container.\nTo build the container, download the content of the\n<cite>https://github.com/opencadc/cadctools/tree/master/cadcetrans/docker</cite> directory\ncustomize the config files <tt><span class=\"pre\">cadc-etrans-config</span></tt> and <tt>namecheck.xml</tt> and\nbuild the container:</p>\n<pre>cd docker\ndocker build -t cadcetrans .\n</pre>\n<p>To invoke it:</p>\n<pre>docker run --rm --mount type=bind,source=/tmp/logs,target=/logging\n--mount type=bind,source=/tmp/input/,target=/input cadcetrans status\n</pre>\n<p>or:</p>\n<pre>docker run --rm --mount type=bind,source=/tmp/logs,target=/logging\n--mount type=bind,source=/tmp/input/,target=/input cadcetrans data\n</pre>\n<p>Note the two mounts that are required: one where the transfer logs will be\nrecorded so that they are available outside the container and the other\none for the source directory (<tt><span class=\"pre\">source=&lt;&gt;</span></tt> part is what needs to be customized\nto point to directories on the local host.</p>\n</div>\n\n          </div>"}, "last_serial": 4657146, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "85246e2e96eac31d372d87c16b502ebd", "sha256": "7af62ce0ed0841020128cbd2e4024ea2fb94f749c4bd2d8a23ce4adc2060c208"}, "downloads": -1, "filename": "cadcetrans-0.1.tar.gz", "has_sig": false, "md5_digest": "85246e2e96eac31d372d87c16b502ebd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 18199, "upload_time": "2018-11-13T23:55:04", "upload_time_iso_8601": "2018-11-13T23:55:04.046312Z", "url": "https://files.pythonhosted.org/packages/1d/72/535645df8559bba5e7c9692e66bac512f21a2dd4387fcfab155c1349d243/cadcetrans-0.1.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "d1bf5b67313d18683a91b4d565156156", "sha256": "b06131c51aed8c1169d31431d14554a9c97aef226a111210f56d466a38cd67d9"}, "downloads": -1, "filename": "cadcetrans-0.9.tar.gz", "has_sig": false, "md5_digest": "d1bf5b67313d18683a91b4d565156156", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 18600, "upload_time": "2018-11-23T00:42:36", "upload_time_iso_8601": "2018-11-23T00:42:36.299824Z", "url": "https://files.pythonhosted.org/packages/87/ec/e7a2b21e9e4b6dcfd031cea7df1304926d6cf47479a8ce14310a50501245/cadcetrans-0.9.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "6c76ce6883a976b268965b9d458e38d9", "sha256": "ef50711718c5fa347ffee062e7b5443180bb9c5f9b4a97073d56c7b88b33cd94"}, "downloads": -1, "filename": "cadcetrans-0.9.1.tar.gz", "has_sig": false, "md5_digest": "6c76ce6883a976b268965b9d458e38d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 19148, "upload_time": "2018-11-27T18:08:44", "upload_time_iso_8601": "2018-11-27T18:08:44.692071Z", "url": "https://files.pythonhosted.org/packages/ca/07/c809dd86b4d9eb227c07d59c026479f20084996b038a7221dd8a9205f5c2/cadcetrans-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "3257dec502b262913228b1e5a0fd1ed1", "sha256": "c153ade8f62e3adc7797a9c4ce148c9c375ba2c52a7809138ec019e36f5faba7"}, "downloads": -1, "filename": "cadcetrans-0.9.2.tar.gz", "has_sig": false, "md5_digest": "3257dec502b262913228b1e5a0fd1ed1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 19134, "upload_time": "2019-01-03T17:26:22", "upload_time_iso_8601": "2019-01-03T17:26:22.066151Z", "url": "https://files.pythonhosted.org/packages/c4/fe/750c8d1875c841a7eb1ec20a1ee9a4dfadbd5aa66930c936db3590fb622f/cadcetrans-0.9.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3257dec502b262913228b1e5a0fd1ed1", "sha256": "c153ade8f62e3adc7797a9c4ce148c9c375ba2c52a7809138ec019e36f5faba7"}, "downloads": -1, "filename": "cadcetrans-0.9.2.tar.gz", "has_sig": false, "md5_digest": "3257dec502b262913228b1e5a0fd1ed1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 19134, "upload_time": "2019-01-03T17:26:22", "upload_time_iso_8601": "2019-01-03T17:26:22.066151Z", "url": "https://files.pythonhosted.org/packages/c4/fe/750c8d1875c841a7eb1ec20a1ee9a4dfadbd5aa66930c936db3590fb622f/cadcetrans-0.9.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:42 2020"}