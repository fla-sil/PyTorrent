{"info": {"author": "Cristian Di Pietrantonio", "author_email": "cristiandipietrantonio@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pdf4py\n\n[![Build Status](https://travis-ci.org/Halolegend94/pdf4py.svg?branch=master)](https://travis-ci.org/Halolegend94/pdf4py) [![Documentation Status](https://readthedocs.org/projects/pdf4py/badge/?version=latest)](https://pdf4py.readthedocs.io/en/latest/?badge=latest) [![PyPI version](https://badge.fury.io/py/pdf4py.svg)](https://badge.fury.io/py/pdf4py) ![PyPI - Downloads](https://img.shields.io/pypi/dm/pdf4py?color=brightgreen)\n\nA PDF parser written in Python 3 with no external dependencies.\n\nThe package `pdf4py` allows the user to analyze a PDF file at a very low level and in a very\nflexible way by giving access to its atomic components, the PDF objects. All through a very\nsimple API that can be used to build higher level functionalities (e.g. text and/or image\nextraction). In particular, it defines the class `Parser` that reads the *Cross Reference Table*\nof a PDF document and uses its entries to give the user the ability to locate PDF objects within\nthe file and parse them into suitable Python objects.\n\n**DISCLAIMER**: this package hasn't reached a stable version (>= 1.0.0) yet. Although the parser\nAPI is quite simple it may change suddenly from one release to the next one. All breaking changes\nwill be properly notified in the release notes.\n\n\n## Quick example\n\nHere is a quick demonstration on how to use pdf4py. You can find more at the [tutorials page](https://pdf4py.readthedocs.io/en/latest/tutorials.html).\n\n```python\n>>> from pdf4py.parser import Parser\n>>> fp = open('tests/pdfs/0000.pdf', 'rb')\n>>> parser = Parser(fp)\n>>> info_ref = parser.trailer['Info']\n>>> print(info_ref)\nPDFReference(object_number=114, generation_number=0)\n>>> info = parser.parse_reference(info_ref)\n>>> print(info)\n{'Creator': PDFLiteralString(value=b'PaperCept Conference Management System'),\n    ... , 'Producer': PDFLiteralString(value=b'PDFlib+PDI 7.0.3 (Perl 5.8.0/Linux)')}\n>>> creator = info['Creator'].value.decode('utf8')\n>>> print(creator)\nPaperCept Conference Management System\n```\n\n## Installation and updates\n\nYou can install `pdf4py` using pip:\n\n```\npython3 -m pip install pdf4py\n```\n\nor download one of the releases and use the `setup.py` script.\n\nThe `master` branch is used for development and it is not advised to use it in production.\n\nFor this package the semantic versioning (specification 2.0.0) is adopted.\n\n## Extracting text or images\n\nExtracting text from a PDF and other higher level analysis tasks are not natively supported as of now \nbecause of two reasons:\n\n- their complexity is not trivial and would require a not indifferent amount of work which now I prefer\ninvesting into developing a complete and reliable parser;\n- they are conceptually different tasks from PDF parsing, since the PDF does not define the concept of\ndocument as a sequence of paragraphs, images, and other objects that can be normally considered *content*.\n\nTherefore, they require a separate implementation built on top of `pdf4py`. In don't exclude that in\nfuture these functionalities will be made available as modules in this package, but I am not planning\nto do it anytime soon.\n\n\n## Why this package\n\nOne day at work I was asked to analyze some PDF files. To my surprise I had discovered that\nthere was not an established Python module to easily parse a PDF document. In order to understand\nwhy I delved into the PDF 1.7 specification: since that moment I've got interested more and more\nin the inner workings of one of the most important and ubiquitous file format. And what's\na better way to understand the PDF than writing a parser for it?\n\n\n## Documentation\n\nYou can read the documentation on [readthedocs.io](https://pdf4py.readthedocs.io/en/latest/).\n\n\n## Contributing\n\nContributions are more than welcome! Please, when writing code or documentation for this package remind:\n\n- to use the [numpy docstring conventions](https://numpydoc.readthedocs.io/en/latest/format.html) for documenting code.\n- to follow the [Python guideline (PEP 8)](https://www.python.org/dev/peps/pep-0008/) when writing code.\n- `pdf4py` is designed to be readable and easy to work with. I prefer readability over (not so significant)\n  performance improvements.\n- `pdf4py` is designed to be modular, flexible but also easy to use. It shouldn't be complicated for the user\n  to perform one particular task.\n- to adopt as much as possible a test-driven development process. Each contribution must be accompanied by a \n  test addition/modification.\n\nIf you are wondering in which way you can help, check the [TODO list](https://github.com/Halolegend94/pdf4py/blob/master/TODO.md). For now it will do as a simple \"road map\".  \n\nIf you have found a bug, please file a new issue here on GitHub. Proposing fixes, changes and additions can\nbe done through a pull request.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Halolegend94/pdf4py", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pdf4py", "package_url": "https://pypi.org/project/pdf4py/", "platform": "", "project_url": "https://pypi.org/project/pdf4py/", "project_urls": {"Homepage": "https://github.com/Halolegend94/pdf4py"}, "release_url": "https://pypi.org/project/pdf4py/0.1.0/", "requires_dist": null, "requires_python": ">=3.4", "summary": "A PDF parser written in Python3 with no external dependencies.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pdf4py</h1>\n<p><a href=\"https://travis-ci.org/Halolegend94/pdf4py\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/57bf0d911157be62e2f32b81989447ab05f37eb3/68747470733a2f2f7472617669732d63692e6f72672f48616c6f6c6567656e6439342f7064663470792e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pdf4py.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/92b2b11df282da18c11d5277cfa0363e5a0605a5/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7064663470792f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://badge.fury.io/py/pdf4py\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed18469230c543a0c6f1b9496336a6ecb63ed1ac/68747470733a2f2f62616467652e667572792e696f2f70792f7064663470792e737667\"></a> <img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47dbe37db4872ef14da9480ff4b09d6908a6c5c3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7064663470793f636f6c6f723d627269676874677265656e\"></p>\n<p>A PDF parser written in Python 3 with no external dependencies.</p>\n<p>The package <code>pdf4py</code> allows the user to analyze a PDF file at a very low level and in a very\nflexible way by giving access to its atomic components, the PDF objects. All through a very\nsimple API that can be used to build higher level functionalities (e.g. text and/or image\nextraction). In particular, it defines the class <code>Parser</code> that reads the <em>Cross Reference Table</em>\nof a PDF document and uses its entries to give the user the ability to locate PDF objects within\nthe file and parse them into suitable Python objects.</p>\n<p><strong>DISCLAIMER</strong>: this package hasn't reached a stable version (&gt;= 1.0.0) yet. Although the parser\nAPI is quite simple it may change suddenly from one release to the next one. All breaking changes\nwill be properly notified in the release notes.</p>\n<h2>Quick example</h2>\n<p>Here is a quick demonstration on how to use pdf4py. You can find more at the <a href=\"https://pdf4py.readthedocs.io/en/latest/tutorials.html\" rel=\"nofollow\">tutorials page</a>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pdf4py.parser</span> <span class=\"kn\">import</span> <span class=\"n\">Parser</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fp</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'tests/pdfs/0000.pdf'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">Parser</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">info_ref</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">trailer</span><span class=\"p\">[</span><span class=\"s1\">'Info'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">info_ref</span><span class=\"p\">)</span>\n<span class=\"n\">PDFReference</span><span class=\"p\">(</span><span class=\"n\">object_number</span><span class=\"o\">=</span><span class=\"mi\">114</span><span class=\"p\">,</span> <span class=\"n\">generation_number</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_reference</span><span class=\"p\">(</span><span class=\"n\">info_ref</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'Creator'</span><span class=\"p\">:</span> <span class=\"n\">PDFLiteralString</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'PaperCept Conference Management System'</span><span class=\"p\">),</span>\n    <span class=\"o\">...</span> <span class=\"p\">,</span> <span class=\"s1\">'Producer'</span><span class=\"p\">:</span> <span class=\"n\">PDFLiteralString</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'PDFlib+PDI 7.0.3 (Perl 5.8.0/Linux)'</span><span class=\"p\">)}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">creator</span> <span class=\"o\">=</span> <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">'Creator'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'utf8'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">creator</span><span class=\"p\">)</span>\n<span class=\"n\">PaperCept</span> <span class=\"n\">Conference</span> <span class=\"n\">Management</span> <span class=\"n\">System</span>\n</pre>\n<h2>Installation and updates</h2>\n<p>You can install <code>pdf4py</code> using pip:</p>\n<pre><code>python3 -m pip install pdf4py\n</code></pre>\n<p>or download one of the releases and use the <code>setup.py</code> script.</p>\n<p>The <code>master</code> branch is used for development and it is not advised to use it in production.</p>\n<p>For this package the semantic versioning (specification 2.0.0) is adopted.</p>\n<h2>Extracting text or images</h2>\n<p>Extracting text from a PDF and other higher level analysis tasks are not natively supported as of now\nbecause of two reasons:</p>\n<ul>\n<li>their complexity is not trivial and would require a not indifferent amount of work which now I prefer\ninvesting into developing a complete and reliable parser;</li>\n<li>they are conceptually different tasks from PDF parsing, since the PDF does not define the concept of\ndocument as a sequence of paragraphs, images, and other objects that can be normally considered <em>content</em>.</li>\n</ul>\n<p>Therefore, they require a separate implementation built on top of <code>pdf4py</code>. In don't exclude that in\nfuture these functionalities will be made available as modules in this package, but I am not planning\nto do it anytime soon.</p>\n<h2>Why this package</h2>\n<p>One day at work I was asked to analyze some PDF files. To my surprise I had discovered that\nthere was not an established Python module to easily parse a PDF document. In order to understand\nwhy I delved into the PDF 1.7 specification: since that moment I've got interested more and more\nin the inner workings of one of the most important and ubiquitous file format. And what's\na better way to understand the PDF than writing a parser for it?</p>\n<h2>Documentation</h2>\n<p>You can read the documentation on <a href=\"https://pdf4py.readthedocs.io/en/latest/\" rel=\"nofollow\">readthedocs.io</a>.</p>\n<h2>Contributing</h2>\n<p>Contributions are more than welcome! Please, when writing code or documentation for this package remind:</p>\n<ul>\n<li>to use the <a href=\"https://numpydoc.readthedocs.io/en/latest/format.html\" rel=\"nofollow\">numpy docstring conventions</a> for documenting code.</li>\n<li>to follow the <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">Python guideline (PEP 8)</a> when writing code.</li>\n<li><code>pdf4py</code> is designed to be readable and easy to work with. I prefer readability over (not so significant)\nperformance improvements.</li>\n<li><code>pdf4py</code> is designed to be modular, flexible but also easy to use. It shouldn't be complicated for the user\nto perform one particular task.</li>\n<li>to adopt as much as possible a test-driven development process. Each contribution must be accompanied by a\ntest addition/modification.</li>\n</ul>\n<p>If you are wondering in which way you can help, check the <a href=\"https://github.com/Halolegend94/pdf4py/blob/master/TODO.md\" rel=\"nofollow\">TODO list</a>. For now it will do as a simple \"road map\".</p>\n<p>If you have found a bug, please file a new issue here on GitHub. Proposing fixes, changes and additions can\nbe done through a pull request.</p>\n\n          </div>"}, "last_serial": 7051519, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b07143f7262c1939bc9310debf85d47c", "sha256": "1eb9de0adb79823e21760455e411a285cd24e60c6daf5f17035f1ec373a296fa"}, "downloads": -1, "filename": "pdf4py-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b07143f7262c1939bc9310debf85d47c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 43312, "upload_time": "2020-04-13T14:09:14", "upload_time_iso_8601": "2020-04-13T14:09:14.929788Z", "url": "https://files.pythonhosted.org/packages/be/20/efe209d40d7772634b8991db117952b82ed3f5a6d334b1eb657eabb7bec7/pdf4py-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "351f8776ae81cc98fee3bfcc00206616", "sha256": "db1d3ecb41e2185387613ae6da92fa312390953fe94173898de9fd7fad37d306"}, "downloads": -1, "filename": "pdf4py-0.0.1.tar.gz", "has_sig": false, "md5_digest": "351f8776ae81cc98fee3bfcc00206616", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31763, "upload_time": "2020-04-13T14:09:21", "upload_time_iso_8601": "2020-04-13T14:09:21.336275Z", "url": "https://files.pythonhosted.org/packages/d2/90/215af0f5223202f5c0bb6ed493117847e88ca60f2730ce6df08a0b001f46/pdf4py-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "875caa1c430f4b1e10e0654941e16e9d", "sha256": "34bc47ee31186d42bcce121c60b58d30c241da97a7ebb3395e85fd4c45767402"}, "downloads": -1, "filename": "pdf4py-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "875caa1c430f4b1e10e0654941e16e9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 44111, "upload_time": "2020-04-13T16:47:55", "upload_time_iso_8601": "2020-04-13T16:47:55.250451Z", "url": "https://files.pythonhosted.org/packages/da/9f/8544ad5966e4e51b08c19657a2468ff4be26da84ee6986d205c3bf210103/pdf4py-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "614563d0b7d6430bdfedf6bd43fd536d", "sha256": "6f2be25708667e97b1bbbe209ac2f8c8426f2aa959dc64853a137fcc0d6a908d"}, "downloads": -1, "filename": "pdf4py-0.0.2.tar.gz", "has_sig": false, "md5_digest": "614563d0b7d6430bdfedf6bd43fd536d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 32677, "upload_time": "2020-04-13T16:47:56", "upload_time_iso_8601": "2020-04-13T16:47:56.617380Z", "url": "https://files.pythonhosted.org/packages/7f/aa/abe88b3cb188b2c12f57b5920ab3bce5a3e775b5af1832a952927d3009dc/pdf4py-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "9f72ab4da3f41cc5ab0754b17cf34128", "sha256": "81d47a9e55a218ff42f3c98c1fd9885379a7bced42fa603eeaee39240d89a142"}, "downloads": -1, "filename": "pdf4py-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9f72ab4da3f41cc5ab0754b17cf34128", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 39771, "upload_time": "2020-04-19T05:17:59", "upload_time_iso_8601": "2020-04-19T05:17:59.493769Z", "url": "https://files.pythonhosted.org/packages/c8/f3/d1e0cd4f439ad3f97cb6e219ecb4037eb3c32b25bd1c2da6a0c7b063110c/pdf4py-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6d7d8491993ecb000eb3751cfbadbee", "sha256": "0152e0b2192090615347e533e0412eaaec0d71f990b907763424cccce06b23d3"}, "downloads": -1, "filename": "pdf4py-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c6d7d8491993ecb000eb3751cfbadbee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 33975, "upload_time": "2020-04-19T05:18:01", "upload_time_iso_8601": "2020-04-19T05:18:01.202804Z", "url": "https://files.pythonhosted.org/packages/c3/90/e94d9cdcc9a99c8fe7ff50856124ab6d53e5b86b9632feeb4142f7921805/pdf4py-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9f72ab4da3f41cc5ab0754b17cf34128", "sha256": "81d47a9e55a218ff42f3c98c1fd9885379a7bced42fa603eeaee39240d89a142"}, "downloads": -1, "filename": "pdf4py-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9f72ab4da3f41cc5ab0754b17cf34128", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 39771, "upload_time": "2020-04-19T05:17:59", "upload_time_iso_8601": "2020-04-19T05:17:59.493769Z", "url": "https://files.pythonhosted.org/packages/c8/f3/d1e0cd4f439ad3f97cb6e219ecb4037eb3c32b25bd1c2da6a0c7b063110c/pdf4py-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6d7d8491993ecb000eb3751cfbadbee", "sha256": "0152e0b2192090615347e533e0412eaaec0d71f990b907763424cccce06b23d3"}, "downloads": -1, "filename": "pdf4py-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c6d7d8491993ecb000eb3751cfbadbee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 33975, "upload_time": "2020-04-19T05:18:01", "upload_time_iso_8601": "2020-04-19T05:18:01.202804Z", "url": "https://files.pythonhosted.org/packages/c3/90/e94d9cdcc9a99c8fe7ff50856124ab6d53e5b86b9632feeb4142f7921805/pdf4py-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:16 2020"}