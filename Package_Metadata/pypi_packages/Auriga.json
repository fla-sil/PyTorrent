{"info": {"author": "Marina Kounkel", "author_email": "marina.kounkel@wwu.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Auriga\n\nAuriga neural net predicts age, extinction, and distance to stellar populations\n\n```\npositional arguments:\n  tableIn               Input table with Gaia DR2 source ids and cluster ids\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --tutorial            Use included test.fits or test.csv files as inputs\n  --tableOut TABLEOUT   Prefix of the csv file into which the cluster\n                        properties should be written, default tableIn-out\n  --iters ITERS         Number of iterations of each cluster is passed through\n                        Auriga to generate the errors, default 10\n  --localFlux           Download necessary flux from Gaia archive for all\n                        source ids, default True\n  --saveFlux SAVEFLUX   If downloading flux, prefix of file where to save it,\n                        default empty\n  --silent SILENT       Suppress print statements, default False\n  --cluster CLUSTER     Column with cluster membership\n  --source_id SOURCE_ID\n                        Column with Gaia DR2 source id,\n  --gaiaFluxErrors GAIAFLUXERRORS\n                        If loading flux, whether uncertainties in Gaia bands\n                        have been converted from flux to magnitude, default\n                        True\n  --g G                 If loading flux, column for G magnitude\n  --bp BP               If loading flux, column for BP magnitude\n  --rp RP               If loading flux, column for RP magnitude\n  --j J                 If loading flux, column for J magnitude\n  --h H                 If loading flux, column for H magnitude\n  --k K                 If loading flux, column for K magnitude\n  --parallax PARALLAX   If loading flux, column for parallax\n  --eg EG               If loading flux, column for uncertainty in G magnitude\n  --ebp EBP             If loading flux, column for uncertainty in BP\n                        magnitude\n  --erp ERP             If loading flux, column for uncertainty in RP\n                        magnitude\n  --ej EJ               If loading flux, column for uncertainty in J magnitude\n  --eh EH               If loading flux, column for uncertainty in H magnitude\n  --ek EK               If loading flux, column for uncertainty in K magnitude\n  --eparallax EPARALLAX\n                        If loading flux, column for uncertainty in parallax\n  --gf GF               If uncertainties have not been converted to\n                        magnitudes, column for G flux\n  --bpf BPF             If uncertainties have not been converted to\n                        magnitudes, column for BP flux\n  --rpf RPF             If uncertainties have not been converted to\n                        magnitudes, column for RP flux\n  --egf EGF             If uncertainties have not been converted to\n                        magnitudes, column for uncertainty in G flux\n  --ebpf EBPF           If uncertainties have not been converted to\n                        magnitudes, column for uncertainty in BP flux\n  --erpf ERPF           If uncertainties have not been converted to\n                        magnitudes, column for uncertainty in RP flux\n```\n\n## Examples:\nDownloading photometry from the Gaia Archive for the sources defined in the fits table, saving the fluxes, and generating the outputs\n```\nauriga test.fits --tableOut test-out --saveFlux test --tutorial \n```\n\nUsing previously downloaded fluxes to generate predictions. 20 implementations of each cluster are generated instead of 10, to estimate the uncertainties in the cluster parameters\n```\nauriga test.csv --localFlux --iters=20 --tutorial\n```\n\nUsing previously downloaded fluxes, defining all the necessary columns\n```\nauriga test.fits --localFlux --gaiaFluxErrors --g phot_g_mean_mag --bp phot_bp_mean_mag \\\n           --rp phot_rp_mean_mag --j j_m --h h_m --k ks_m --ej j_msigcom --eh h_msigcom \\\n           --ek ks_msigcom --eparallax parallax_error --tutorial --silent\n\n```\n\n## Required packages:\n* Astropy\n* Astroquery\n* Pytorch\n* Pandas\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mkounkel/Auriga", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Auriga", "package_url": "https://pypi.org/project/Auriga/", "platform": "", "project_url": "https://pypi.org/project/Auriga/", "project_urls": {"Homepage": "https://github.com/mkounkel/Auriga"}, "release_url": "https://pypi.org/project/Auriga/0.1/", "requires_dist": ["torch", "torchvision", "astropy", "astroquery", "pandas"], "requires_python": ">=3.6", "summary": "A neural network for structure parameter determination", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Auriga</h1>\n<p>Auriga neural net predicts age, extinction, and distance to stellar populations</p>\n<pre><code>positional arguments:\n  tableIn               Input table with Gaia DR2 source ids and cluster ids\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --tutorial            Use included test.fits or test.csv files as inputs\n  --tableOut TABLEOUT   Prefix of the csv file into which the cluster\n                        properties should be written, default tableIn-out\n  --iters ITERS         Number of iterations of each cluster is passed through\n                        Auriga to generate the errors, default 10\n  --localFlux           Download necessary flux from Gaia archive for all\n                        source ids, default True\n  --saveFlux SAVEFLUX   If downloading flux, prefix of file where to save it,\n                        default empty\n  --silent SILENT       Suppress print statements, default False\n  --cluster CLUSTER     Column with cluster membership\n  --source_id SOURCE_ID\n                        Column with Gaia DR2 source id,\n  --gaiaFluxErrors GAIAFLUXERRORS\n                        If loading flux, whether uncertainties in Gaia bands\n                        have been converted from flux to magnitude, default\n                        True\n  --g G                 If loading flux, column for G magnitude\n  --bp BP               If loading flux, column for BP magnitude\n  --rp RP               If loading flux, column for RP magnitude\n  --j J                 If loading flux, column for J magnitude\n  --h H                 If loading flux, column for H magnitude\n  --k K                 If loading flux, column for K magnitude\n  --parallax PARALLAX   If loading flux, column for parallax\n  --eg EG               If loading flux, column for uncertainty in G magnitude\n  --ebp EBP             If loading flux, column for uncertainty in BP\n                        magnitude\n  --erp ERP             If loading flux, column for uncertainty in RP\n                        magnitude\n  --ej EJ               If loading flux, column for uncertainty in J magnitude\n  --eh EH               If loading flux, column for uncertainty in H magnitude\n  --ek EK               If loading flux, column for uncertainty in K magnitude\n  --eparallax EPARALLAX\n                        If loading flux, column for uncertainty in parallax\n  --gf GF               If uncertainties have not been converted to\n                        magnitudes, column for G flux\n  --bpf BPF             If uncertainties have not been converted to\n                        magnitudes, column for BP flux\n  --rpf RPF             If uncertainties have not been converted to\n                        magnitudes, column for RP flux\n  --egf EGF             If uncertainties have not been converted to\n                        magnitudes, column for uncertainty in G flux\n  --ebpf EBPF           If uncertainties have not been converted to\n                        magnitudes, column for uncertainty in BP flux\n  --erpf ERPF           If uncertainties have not been converted to\n                        magnitudes, column for uncertainty in RP flux\n</code></pre>\n<h2>Examples:</h2>\n<p>Downloading photometry from the Gaia Archive for the sources defined in the fits table, saving the fluxes, and generating the outputs</p>\n<pre><code>auriga test.fits --tableOut test-out --saveFlux test --tutorial \n</code></pre>\n<p>Using previously downloaded fluxes to generate predictions. 20 implementations of each cluster are generated instead of 10, to estimate the uncertainties in the cluster parameters</p>\n<pre><code>auriga test.csv --localFlux --iters=20 --tutorial\n</code></pre>\n<p>Using previously downloaded fluxes, defining all the necessary columns</p>\n<pre><code>auriga test.fits --localFlux --gaiaFluxErrors --g phot_g_mean_mag --bp phot_bp_mean_mag \\\n           --rp phot_rp_mean_mag --j j_m --h h_m --k ks_m --ej j_msigcom --eh h_msigcom \\\n           --ek ks_msigcom --eparallax parallax_error --tutorial --silent\n\n</code></pre>\n<h2>Required packages:</h2>\n<ul>\n<li>Astropy</li>\n<li>Astroquery</li>\n<li>Pytorch</li>\n<li>Pandas</li>\n</ul>\n\n          </div>"}, "last_serial": 6714092, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "325c4b94afeb6d8e83808d1c3c6a284e", "sha256": "a1b0466c4ffbc3e03a32b8aea87b6b786eb8bd6aa4ac15cef4fd79dfb5b989c5"}, "downloads": -1, "filename": "Auriga-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "325c4b94afeb6d8e83808d1c3c6a284e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2676524, "upload_time": "2020-02-27T22:15:20", "upload_time_iso_8601": "2020-02-27T22:15:20.505797Z", "url": "https://files.pythonhosted.org/packages/e5/23/6fc6d95b197a24700ed821788826e69425e7844024da4b087f5d82dd2c40/Auriga-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acc1ef1a656f78ca3c86bca98768bae5", "sha256": "640bc79d324f573a5f76f48cb6cbae257b79c6ad8cb9d1f0c4e2af4a831621c1"}, "downloads": -1, "filename": "Auriga-0.1.tar.gz", "has_sig": false, "md5_digest": "acc1ef1a656f78ca3c86bca98768bae5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2677748, "upload_time": "2020-02-27T22:15:27", "upload_time_iso_8601": "2020-02-27T22:15:27.791215Z", "url": "https://files.pythonhosted.org/packages/e0/d5/74e23b97b1e3251c5af8e1ff8e2255aa2fd667b024fd9affdc66c1846b70/Auriga-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "325c4b94afeb6d8e83808d1c3c6a284e", "sha256": "a1b0466c4ffbc3e03a32b8aea87b6b786eb8bd6aa4ac15cef4fd79dfb5b989c5"}, "downloads": -1, "filename": "Auriga-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "325c4b94afeb6d8e83808d1c3c6a284e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2676524, "upload_time": "2020-02-27T22:15:20", "upload_time_iso_8601": "2020-02-27T22:15:20.505797Z", "url": "https://files.pythonhosted.org/packages/e5/23/6fc6d95b197a24700ed821788826e69425e7844024da4b087f5d82dd2c40/Auriga-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acc1ef1a656f78ca3c86bca98768bae5", "sha256": "640bc79d324f573a5f76f48cb6cbae257b79c6ad8cb9d1f0c4e2af4a831621c1"}, "downloads": -1, "filename": "Auriga-0.1.tar.gz", "has_sig": false, "md5_digest": "acc1ef1a656f78ca3c86bca98768bae5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2677748, "upload_time": "2020-02-27T22:15:27", "upload_time_iso_8601": "2020-02-27T22:15:27.791215Z", "url": "https://files.pythonhosted.org/packages/e0/d5/74e23b97b1e3251c5af8e1ff8e2255aa2fd667b024fd9affdc66c1846b70/Auriga-0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:25 2020"}