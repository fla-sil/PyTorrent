{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Framework :: Pyramid", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "enDI OpenID Provider\n=================================\n\nThis is still a work in progress.\n\nOpen Id connect provider based on enDI (http://endi.coop).\n\nOnly *Authorization Code Flow* is supported\n\nGetting Started\n---------------\n\n- cd <directory containing this file>\n\n- $VENV/bin/pip install -e .\n\n- $VENV/bin/initialize_endi_oidc_provider_db development.ini\n\n- $VENV/bin/pserve development.ini\n\n\nAuthorization handling\n-----------------------\n\nGenerate a new client's key :\n\n.. code-block:: console\n\n    oidc-manage <config_uri> clientadd --client=<client> --uri=<redirect_uri> --scopes=<scopes> --cert_salt=<cert_salt>\n\nconfig_uri : Your ini file\n\nclient: A label for your client\n\nredirect_uri : The redirect uri has described in the openid connect specifications (The one passed in the Authorize step)\n\nscopes : The scope the application is requesting (at least the openid scope should be provided) e.g: \"openid profile\"\n\ncert_salt : A salt random key that will be used to encrypt the client secret in the database\n\nAfter generating both client_id and client_secret. The client app is able to request authentication.\n\n\nAuthorize Endpoint\n~~~~~~~~~~~~~~~~~~~\n\nThe client app can call the Authorization url :\n\nhttps://myoidc_provider.com/oidc/authorize\n\nIt allows :\n\n    - Authenticate a user\n    - Get an Authorization code in the response\n\nToken url\n~~~~~~~~~~~~~~\n\nCalled in the background, the Token endpoint is accessible at the following url :\n\nhttps://myoidc_provider.com/oidc/token\n\nThe RFC : https://tools.ietf.org/html/rfc6749#section-2.3.1\n\nDescribes Client Password transmission methods.\n\nSupported client auth method :\n\n* Through request headers : Basic auth tokens are supported\n* Through request POST params : client_id and client_secret keys are then expected\n\nIn the response you get :\n\n    - An access token with mandatory informations\n    - An id_token JWS encrypted as described in the spec\n    - Since we use code flow, the id_token also returns the at_hash access_token identification key\n\n\nenDI integration\n-----------------------\n\nIn your enDI's ini file add the following :\n\n.. code-block:: console\n\n    pyramid.includes =\n                        ...\n                        endi_oidc_provider\n                        ...\n\n\n(That's for model registration so that the db startup initialize the tables)\n\nAnd add the following :\n\n.. code-block:: console\n\n    endi.includes =\n                        ...\n                        endi_oidc_provider.plugin\n                        ...\n\nThat register OIDC client application configuration UI :\n\n* routes\n* views\n* traversal tree branch\n* template api stuff\n* templates\n* menu entries\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "web wsgi bfg pylons pyramid", "license": "", "maintainer": "", "maintainer_email": "", "name": "endi-oidc-provider", "package_url": "https://pypi.org/project/endi-oidc-provider/", "platform": "", "project_url": "https://pypi.org/project/endi-oidc-provider/", "project_urls": null, "release_url": "https://pypi.org/project/endi-oidc-provider/5.0.1/", "requires_dist": ["pyramid", "pyramid-chameleon", "pyramid-debugtoolbar", "pyramid-tm", "SQLAlchemy", "transaction", "zope.sqlalchemy", "waitress", "libsass ; extra == 'dev'", "WebTest (>=1.3.1) ; extra == 'testing'", "pytest ; extra == 'testing'", "pytest-cov ; extra == 'testing'"], "requires_python": "", "summary": "endi_oidc_provider", "version": "5.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is still a work in progress.</p>\n<p>Open Id connect provider based on enDI (<a href=\"http://endi.coop\" rel=\"nofollow\">http://endi.coop</a>).</p>\n<p>Only <em>Authorization Code Flow</em> is supported</p>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<ul>\n<li>cd &lt;directory containing this file&gt;</li>\n<li>$VENV/bin/pip install -e .</li>\n<li>$VENV/bin/initialize_endi_oidc_provider_db development.ini</li>\n<li>$VENV/bin/pserve development.ini</li>\n</ul>\n</div>\n<div id=\"authorization-handling\">\n<h2>Authorization handling</h2>\n<p>Generate a new client\u2019s key :</p>\n<pre><span class=\"go\">oidc-manage &lt;config_uri&gt; clientadd --client=&lt;client&gt; --uri=&lt;redirect_uri&gt; --scopes=&lt;scopes&gt; --cert_salt=&lt;cert_salt&gt;</span>\n</pre>\n<p>config_uri : Your ini file</p>\n<p>client: A label for your client</p>\n<p>redirect_uri : The redirect uri has described in the openid connect specifications (The one passed in the Authorize step)</p>\n<p>scopes : The scope the application is requesting (at least the openid scope should be provided) e.g: \u201copenid profile\u201d</p>\n<p>cert_salt : A salt random key that will be used to encrypt the client secret in the database</p>\n<p>After generating both client_id and client_secret. The client app is able to request authentication.</p>\n<div id=\"authorize-endpoint\">\n<h3>Authorize Endpoint</h3>\n<p>The client app can call the Authorization url :</p>\n<p><a href=\"https://myoidc_provider.com/oidc/authorize\" rel=\"nofollow\">https://myoidc_provider.com/oidc/authorize</a></p>\n<p>It allows :</p>\n<blockquote>\n<ul>\n<li>Authenticate a user</li>\n<li>Get an Authorization code in the response</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"token-url\">\n<h3>Token url</h3>\n<p>Called in the background, the Token endpoint is accessible at the following url :</p>\n<p><a href=\"https://myoidc_provider.com/oidc/token\" rel=\"nofollow\">https://myoidc_provider.com/oidc/token</a></p>\n<p>The RFC : <a href=\"https://tools.ietf.org/html/rfc6749#section-2.3.1\" rel=\"nofollow\">https://tools.ietf.org/html/rfc6749#section-2.3.1</a></p>\n<p>Describes Client Password transmission methods.</p>\n<p>Supported client auth method :</p>\n<ul>\n<li>Through request headers : Basic auth tokens are supported</li>\n<li>Through request POST params : client_id and client_secret keys are then expected</li>\n</ul>\n<p>In the response you get :</p>\n<blockquote>\n<ul>\n<li>An access token with mandatory informations</li>\n<li>An id_token JWS encrypted as described in the spec</li>\n<li>Since we use code flow, the id_token also returns the at_hash access_token identification key</li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div id=\"endi-integration\">\n<h2>enDI integration</h2>\n<p>In your enDI\u2019s ini file add the following :</p>\n<pre><span class=\"go\">pyramid.includes =\n                    ...\n                    endi_oidc_provider\n                    ...</span>\n</pre>\n<p>(That\u2019s for model registration so that the db startup initialize the tables)</p>\n<p>And add the following :</p>\n<pre><span class=\"go\">endi.includes =\n                    ...\n                    endi_oidc_provider.plugin\n                    ...</span>\n</pre>\n<p>That register OIDC client application configuration UI :</p>\n<ul>\n<li>routes</li>\n<li>views</li>\n<li>traversal tree branch</li>\n<li>template api stuff</li>\n<li>templates</li>\n<li>menu entries</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5578042, "releases": {"5.0.0": [{"comment_text": "", "digests": {"md5": "f468c11c1c3d7049af0634a28df1cb9b", "sha256": "3eaa34f3e9426e3d328e33a65b8d1b6b9265a10a361f469f3ab58e20b6a815d8"}, "downloads": -1, "filename": "endi_oidc_provider-5.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "f468c11c1c3d7049af0634a28df1cb9b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 40743, "upload_time": "2019-03-19T14:20:12", "upload_time_iso_8601": "2019-03-19T14:20:12.495534Z", "url": "https://files.pythonhosted.org/packages/1d/e6/190314f00ee737b82fa73af1303c21c051d7a04ce1c747742755515928df/endi_oidc_provider-5.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdafd64ba1e35e76db3dd7b0c3a526f8", "sha256": "d7c146e66b4fac5217192c2568f729836906f8ce8a99b3d54f99cdc24bc431fd"}, "downloads": -1, "filename": "endi_oidc_provider-5.0.0.tar.gz", "has_sig": false, "md5_digest": "fdafd64ba1e35e76db3dd7b0c3a526f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30186, "upload_time": "2019-03-19T14:20:14", "upload_time_iso_8601": "2019-03-19T14:20:14.810192Z", "url": "https://files.pythonhosted.org/packages/94/52/691a9f1fedda2f9dcd5e86026ca3bbf7175f31fc8f05c67bca31585873a7/endi_oidc_provider-5.0.0.tar.gz", "yanked": false}], "5.0.1": [{"comment_text": "", "digests": {"md5": "2c08efc673d51c59421eafb59cd0736f", "sha256": "cd51f0bde44db0b2b9553decd6df634b58e3ccf151cd4ce18348a88a9f6c5908"}, "downloads": -1, "filename": "endi_oidc_provider-5.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "2c08efc673d51c59421eafb59cd0736f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 40859, "upload_time": "2019-07-24T14:58:34", "upload_time_iso_8601": "2019-07-24T14:58:34.971695Z", "url": "https://files.pythonhosted.org/packages/ee/f8/823485ca1e65310acae4abe0561db142a01210e74a309a734767c6d53aed/endi_oidc_provider-5.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2db0216ec3e657e48ac44511a825c0ba", "sha256": "0eb7be1b427c9db914cdd7a07ba23cbbaa377c54153a3076b5ea48f401046814"}, "downloads": -1, "filename": "endi_oidc_provider-5.0.1.tar.gz", "has_sig": false, "md5_digest": "2db0216ec3e657e48ac44511a825c0ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29529, "upload_time": "2019-07-24T14:58:36", "upload_time_iso_8601": "2019-07-24T14:58:36.610378Z", "url": "https://files.pythonhosted.org/packages/76/af/c6ba454a9b37c3bc10baa14806851d51e809f570c8fce5317a3b1985602f/endi_oidc_provider-5.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2c08efc673d51c59421eafb59cd0736f", "sha256": "cd51f0bde44db0b2b9553decd6df634b58e3ccf151cd4ce18348a88a9f6c5908"}, "downloads": -1, "filename": "endi_oidc_provider-5.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "2c08efc673d51c59421eafb59cd0736f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 40859, "upload_time": "2019-07-24T14:58:34", "upload_time_iso_8601": "2019-07-24T14:58:34.971695Z", "url": "https://files.pythonhosted.org/packages/ee/f8/823485ca1e65310acae4abe0561db142a01210e74a309a734767c6d53aed/endi_oidc_provider-5.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2db0216ec3e657e48ac44511a825c0ba", "sha256": "0eb7be1b427c9db914cdd7a07ba23cbbaa377c54153a3076b5ea48f401046814"}, "downloads": -1, "filename": "endi_oidc_provider-5.0.1.tar.gz", "has_sig": false, "md5_digest": "2db0216ec3e657e48ac44511a825c0ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29529, "upload_time": "2019-07-24T14:58:36", "upload_time_iso_8601": "2019-07-24T14:58:36.610378Z", "url": "https://files.pythonhosted.org/packages/76/af/c6ba454a9b37c3bc10baa14806851d51e809f570c8fce5317a3b1985602f/endi_oidc_provider-5.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:25 2020"}