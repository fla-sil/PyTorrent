{"info": {"author": "Lauri Niskanen", "author_email": "ape@ape3000.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Home Automation"], "description": "==========\nsamsungctl\n==========\n\nsamsungctl is a library and a command line tool for remote controlling Samsung\ntelevisions via a TCP/IP connection. It currently supports both pre-2016 TVs as\nwell most of the modern Tizen-OS TVs with Ethernet or Wi-Fi connectivity.\n\nDependencies\n============\n\n- Python 3\n- ``websocket-client`` (optional, for 2016+ TVs)\n- ``curses`` (optional, for the interactive mode)\n\nInstallation\n============\n\nsamsungctl can be installed using `pip <(https://pip.pypa.io/>`_:\n\n::\n\n    # pip install samsungctl\n\nAlternatively you can clone the Git repository and run:\n\n::\n\n    # python setup.py install\n\nIt's possible to use the command line tool without installation:\n\n::\n\n    $ python -m samsungctl\n\nCommand line usage\n==================\n\nYou can use ``samsungctl`` command to send keys to a TV:\n\n::\n\n    $ samsungctl --host <host> [options] <key> [key ...]\n\n``host`` is the hostname or IP address of the TV. ``key`` is a key code, e.g.\n``KEY_VOLDOWN``. See `Key codes`_.\n\nThere is also an interactive mode (ncurses) for sending the key presses:\n\n::\n\n    $ samsungctl --host <host> [options] --interactive\n\nUse ``samsungctl --help`` for more information about the command line\narguments:\n\n::\n\n    usage: samsungctl [-h] [--version] [-v] [-q] [-i] [--host HOST] [--port PORT]\n                      [--method METHOD] [--name NAME] [--description DESC]\n                      [--id ID] [--timeout TIMEOUT]\n                      [key [key ...]]\n\n    Remote control Samsung televisions via TCP/IP connection\n\n    positional arguments:\n      key                 keys to be sent (e.g. KEY_VOLDOWN)\n\n    optional arguments:\n      -h, --help          show this help message and exit\n      --version           show program's version number and exit\n      -v, --verbose       increase output verbosity\n      -q, --quiet         suppress non-fatal output\n      -i, --interactive   interactive control\n      --host HOST         TV hostname or IP address\n      --port PORT         TV port number (TCP)\n      --method METHOD     Connection method (legacy or websocket)\n      --name NAME         remote control name\n      --description DESC  remote control description\n      --id ID             remote control id\n      --timeout TIMEOUT   socket timeout in seconds (0 = no timeout)\n\n    E.g. samsungctl --host 192.168.0.10 --name myremote KEY_VOLDOWN\n\nThe settings can be loaded from a configuration file. The file is searched from\n``$XDG_CONFIG_HOME/samsungctl.conf``, ``~/.config/samsungctl.conf``, and\n``/etc/samsungctl.conf`` in this order. A simple default configuration is\nbundled with the source as `samsungctl.conf <samsungctl.conf>`_.\n\nLibrary usage\n=============\n\nsamsungctl can be imported as a Python 3 library:\n\n.. code-block:: python\n\n    import samsungctl\n\nA context managed remote controller object of class ``Remote`` can be\nconstructed using the ``with`` statement:\n\n.. code-block:: python\n\n    with samsungctl.Remote(config) as remote:\n        # Use the remote object\n\nThe constructor takes a configuration dictionary as a parameter. All\nconfiguration items must be specified.\n\n===========  ======  ===========================================\nKey          Type    Description\n===========  ======  ===========================================\nhost         string  Hostname or IP address of the TV.\nport         int     TCP port number. (Default: ``55000``)\nmethod       string  Connection method (``legacy`` or ``websocket``)\nname         string  Name of the remote controller.\ndescription  string  Remote controller description.\nid           string  Additional remote controller ID.\ntimeout      int     Timeout in seconds. ``0`` means no timeout.\n===========  ======  ===========================================\n\nThe ``Remote`` object is very simple and you only need the ``control(key)``\nmethod. The only parameter is a string naming the key to be sent (e.g.\n``KEY_VOLDOWN``). See `Key codes`_. You can call ``control`` multiple times\nusing the same ``Remote`` object. The connection is automatically closed when\nexiting the ``with`` statement.\n\nWhen something goes wrong you will receive an exception:\n\n=================  =======================================\nException          Description\n=================  =======================================\nAccessDenied       The TV does not allow you to send keys.\nConnectionClosed   The connection was closed.\nUnhandledResponse  An unexpected response was received.\nsocket.timeout     The connection timed out.\n=================  =======================================\n\nExample program\n---------------\n\nThis simple program opens and closes the menu a few times.\n\n.. code-block:: python\n\n    #!/usr/bin/env python3\n\n    import samsungctl\n    import time\n\n    config = {\n        \"name\": \"samsungctl\",\n        \"description\": \"PC\",\n        \"id\": \"\",\n        \"host\": \"192.168.0.10\",\n        \"port\": 55000,\n        \"method\": \"legacy\",\n        \"timeout\": 0,\n    }\n\n    with samsungctl.Remote(config) as remote:\n        for i in range(10):\n            remote.control(\"KEY_MENU\")\n            time.sleep(0.5)\n\nKey codes\n=========\n\nThe list of accepted keys may vary depending on the TV model, but the following\nlist has some common key codes and their descriptions.\n\n=================  ============\nKey code           Description\n=================  ============\nKEY_POWEROFF       Power off\nKEY_UP             Up\nKEY_DOWN           Down\nKEY_LEFT           Left\nKEY_RIGHT          Right\nKEY_CHUP           P Up\nKEY_CHDOWN         P Down\nKEY_ENTER          Enter\nKEY_RETURN         Return\nKEY_CH_LIST        Channel List\nKEY_MENU           Menu\nKEY_SOURCE         Source\nKEY_GUIDE          Guide\nKEY_TOOLS          Tools\nKEY_INFO           Info\nKEY_RED            A / Red\nKEY_GREEN          B / Green\nKEY_YELLOW         C / Yellow\nKEY_BLUE           D / Blue\nKEY_PANNEL_CHDOWN  3D\nKEY_VOLUP          Volume Up\nKEY_VOLDOWN        Volume Down\nKEY_MUTE           Mute\nKEY_0              0\nKEY_1              1\nKEY_2              2\nKEY_3              3\nKEY_4              4\nKEY_5              5\nKEY_6              6\nKEY_7              7\nKEY_8              8\nKEY_9              9\nKEY_DTV            TV Source\nKEY_HDMI           HDMI Source\nKEY_CONTENTS       SmartHub\n=================  ============\n\nPlease note that some codes are different on the 2016+ TVs. For example,\n``KEY_POWEROFF`` is ``KEY_POWER`` on the newer TVs.\n\nReferences\n==========\n\nI did not reverse engineer the control protocol myself and samsungctl is not\nthe only implementation. Here is the list of things that inspired samsungctl.\n\n- http://sc0ty.pl/2012/02/samsung-tv-network-remote-control-protocol/\n- https://gist.github.com/danielfaust/998441\n- https://github.com/Bntdumas/SamsungIPRemote\n- https://github.com/kyleaa/homebridge-samsungtv2016\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Ape/samsungctl", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "samsungctl", "package_url": "https://pypi.org/project/samsungctl/", "platform": "", "project_url": "https://pypi.org/project/samsungctl/", "project_urls": {"Homepage": "https://github.com/Ape/samsungctl"}, "release_url": "https://pypi.org/project/samsungctl/0.7.1/", "requires_dist": null, "requires_python": "", "summary": "Remote control Samsung televisions via TCP/IP connection", "version": "0.7.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>samsungctl is a library and a command line tool for remote controlling Samsung\ntelevisions via a TCP/IP connection. It currently supports both pre-2016 TVs as\nwell most of the modern Tizen-OS TVs with Ethernet or Wi-Fi connectivity.</p>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>Python 3</li>\n<li><tt><span class=\"pre\">websocket-client</span></tt> (optional, for 2016+ TVs)</li>\n<li><tt>curses</tt> (optional, for the interactive mode)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>samsungctl can be installed using <a href=\"(https://pip.pypa.io/\" rel=\"nofollow\">pip</a>:</p>\n<pre># pip install samsungctl\n</pre>\n<p>Alternatively you can clone the Git repository and run:</p>\n<pre># python setup.py install\n</pre>\n<p>It\u2019s possible to use the command line tool without installation:</p>\n<pre>$ python -m samsungctl\n</pre>\n</div>\n<div id=\"command-line-usage\">\n<h2>Command line usage</h2>\n<p>You can use <tt>samsungctl</tt> command to send keys to a TV:</p>\n<pre>$ samsungctl --host &lt;host&gt; [options] &lt;key&gt; [key ...]\n</pre>\n<p><tt>host</tt> is the hostname or IP address of the TV. <tt>key</tt> is a key code, e.g.\n<tt>KEY_VOLDOWN</tt>. See <a href=\"#key-codes\" rel=\"nofollow\">Key codes</a>.</p>\n<p>There is also an interactive mode (ncurses) for sending the key presses:</p>\n<pre>$ samsungctl --host &lt;host&gt; [options] --interactive\n</pre>\n<p>Use <tt>samsungctl <span class=\"pre\">--help</span></tt> for more information about the command line\narguments:</p>\n<pre>usage: samsungctl [-h] [--version] [-v] [-q] [-i] [--host HOST] [--port PORT]\n                  [--method METHOD] [--name NAME] [--description DESC]\n                  [--id ID] [--timeout TIMEOUT]\n                  [key [key ...]]\n\nRemote control Samsung televisions via TCP/IP connection\n\npositional arguments:\n  key                 keys to be sent (e.g. KEY_VOLDOWN)\n\noptional arguments:\n  -h, --help          show this help message and exit\n  --version           show program's version number and exit\n  -v, --verbose       increase output verbosity\n  -q, --quiet         suppress non-fatal output\n  -i, --interactive   interactive control\n  --host HOST         TV hostname or IP address\n  --port PORT         TV port number (TCP)\n  --method METHOD     Connection method (legacy or websocket)\n  --name NAME         remote control name\n  --description DESC  remote control description\n  --id ID             remote control id\n  --timeout TIMEOUT   socket timeout in seconds (0 = no timeout)\n\nE.g. samsungctl --host 192.168.0.10 --name myremote KEY_VOLDOWN\n</pre>\n<p>The settings can be loaded from a configuration file. The file is searched from\n<tt>$XDG_CONFIG_HOME/samsungctl.conf</tt>, <tt><span class=\"pre\">~/.config/samsungctl.conf</span></tt>, and\n<tt>/etc/samsungctl.conf</tt> in this order. A simple default configuration is\nbundled with the source as <a href=\"samsungctl.conf\" rel=\"nofollow\">samsungctl.conf</a>.</p>\n</div>\n<div id=\"library-usage\">\n<h2>Library usage</h2>\n<p>samsungctl can be imported as a Python 3 library:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">samsungctl</span>\n</pre>\n<p>A context managed remote controller object of class <tt>Remote</tt> can be\nconstructed using the <tt>with</tt> statement:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">samsungctl</span><span class=\"o\">.</span><span class=\"n\">Remote</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">remote</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Use the remote object</span>\n</pre>\n<p>The constructor takes a configuration dictionary as a parameter. All\nconfiguration items must be specified.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Key</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>host</td>\n<td>string</td>\n<td>Hostname or IP address of the TV.</td>\n</tr>\n<tr><td>port</td>\n<td>int</td>\n<td>TCP port number. (Default: <tt>55000</tt>)</td>\n</tr>\n<tr><td>method</td>\n<td>string</td>\n<td>Connection method (<tt>legacy</tt> or <tt>websocket</tt>)</td>\n</tr>\n<tr><td>name</td>\n<td>string</td>\n<td>Name of the remote controller.</td>\n</tr>\n<tr><td>description</td>\n<td>string</td>\n<td>Remote controller description.</td>\n</tr>\n<tr><td>id</td>\n<td>string</td>\n<td>Additional remote controller ID.</td>\n</tr>\n<tr><td>timeout</td>\n<td>int</td>\n<td>Timeout in seconds. <tt>0</tt> means no timeout.</td>\n</tr>\n</tbody>\n</table>\n<p>The <tt>Remote</tt> object is very simple and you only need the <tt>control(key)</tt>\nmethod. The only parameter is a string naming the key to be sent (e.g.\n<tt>KEY_VOLDOWN</tt>). See <a href=\"#key-codes\" rel=\"nofollow\">Key codes</a>. You can call <tt>control</tt> multiple times\nusing the same <tt>Remote</tt> object. The connection is automatically closed when\nexiting the <tt>with</tt> statement.</p>\n<p>When something goes wrong you will receive an exception:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Exception</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>AccessDenied</td>\n<td>The TV does not allow you to send keys.</td>\n</tr>\n<tr><td>ConnectionClosed</td>\n<td>The connection was closed.</td>\n</tr>\n<tr><td>UnhandledResponse</td>\n<td>An unexpected response was received.</td>\n</tr>\n<tr><td>socket.timeout</td>\n<td>The connection timed out.</td>\n</tr>\n</tbody>\n</table>\n<div id=\"example-program\">\n<h3>Example program</h3>\n<p>This simple program opens and closes the menu a few times.</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">samsungctl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"samsungctl\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"PC\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"host\"</span><span class=\"p\">:</span> <span class=\"s2\">\"192.168.0.10\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"port\"</span><span class=\"p\">:</span> <span class=\"mi\">55000</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"method\"</span><span class=\"p\">:</span> <span class=\"s2\">\"legacy\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"timeout\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">with</span> <span class=\"n\">samsungctl</span><span class=\"o\">.</span><span class=\"n\">Remote</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">remote</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">control</span><span class=\"p\">(</span><span class=\"s2\">\"KEY_MENU\"</span><span class=\"p\">)</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"key-codes\">\n<h2>Key codes</h2>\n<p>The list of accepted keys may vary depending on the TV model, but the following\nlist has some common key codes and their descriptions.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Key code</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>KEY_POWEROFF</td>\n<td>Power off</td>\n</tr>\n<tr><td>KEY_UP</td>\n<td>Up</td>\n</tr>\n<tr><td>KEY_DOWN</td>\n<td>Down</td>\n</tr>\n<tr><td>KEY_LEFT</td>\n<td>Left</td>\n</tr>\n<tr><td>KEY_RIGHT</td>\n<td>Right</td>\n</tr>\n<tr><td>KEY_CHUP</td>\n<td>P Up</td>\n</tr>\n<tr><td>KEY_CHDOWN</td>\n<td>P Down</td>\n</tr>\n<tr><td>KEY_ENTER</td>\n<td>Enter</td>\n</tr>\n<tr><td>KEY_RETURN</td>\n<td>Return</td>\n</tr>\n<tr><td>KEY_CH_LIST</td>\n<td>Channel List</td>\n</tr>\n<tr><td>KEY_MENU</td>\n<td>Menu</td>\n</tr>\n<tr><td>KEY_SOURCE</td>\n<td>Source</td>\n</tr>\n<tr><td>KEY_GUIDE</td>\n<td>Guide</td>\n</tr>\n<tr><td>KEY_TOOLS</td>\n<td>Tools</td>\n</tr>\n<tr><td>KEY_INFO</td>\n<td>Info</td>\n</tr>\n<tr><td>KEY_RED</td>\n<td>A / Red</td>\n</tr>\n<tr><td>KEY_GREEN</td>\n<td>B / Green</td>\n</tr>\n<tr><td>KEY_YELLOW</td>\n<td>C / Yellow</td>\n</tr>\n<tr><td>KEY_BLUE</td>\n<td>D / Blue</td>\n</tr>\n<tr><td>KEY_PANNEL_CHDOWN</td>\n<td>3D</td>\n</tr>\n<tr><td>KEY_VOLUP</td>\n<td>Volume Up</td>\n</tr>\n<tr><td>KEY_VOLDOWN</td>\n<td>Volume Down</td>\n</tr>\n<tr><td>KEY_MUTE</td>\n<td>Mute</td>\n</tr>\n<tr><td>KEY_0</td>\n<td>0</td>\n</tr>\n<tr><td>KEY_1</td>\n<td>1</td>\n</tr>\n<tr><td>KEY_2</td>\n<td>2</td>\n</tr>\n<tr><td>KEY_3</td>\n<td>3</td>\n</tr>\n<tr><td>KEY_4</td>\n<td>4</td>\n</tr>\n<tr><td>KEY_5</td>\n<td>5</td>\n</tr>\n<tr><td>KEY_6</td>\n<td>6</td>\n</tr>\n<tr><td>KEY_7</td>\n<td>7</td>\n</tr>\n<tr><td>KEY_8</td>\n<td>8</td>\n</tr>\n<tr><td>KEY_9</td>\n<td>9</td>\n</tr>\n<tr><td>KEY_DTV</td>\n<td>TV Source</td>\n</tr>\n<tr><td>KEY_HDMI</td>\n<td>HDMI Source</td>\n</tr>\n<tr><td>KEY_CONTENTS</td>\n<td>SmartHub</td>\n</tr>\n</tbody>\n</table>\n<p>Please note that some codes are different on the 2016+ TVs. For example,\n<tt>KEY_POWEROFF</tt> is <tt>KEY_POWER</tt> on the newer TVs.</p>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<p>I did not reverse engineer the control protocol myself and samsungctl is not\nthe only implementation. Here is the list of things that inspired samsungctl.</p>\n<ul>\n<li><a href=\"http://sc0ty.pl/2012/02/samsung-tv-network-remote-control-protocol/\" rel=\"nofollow\">http://sc0ty.pl/2012/02/samsung-tv-network-remote-control-protocol/</a></li>\n<li><a href=\"https://gist.github.com/danielfaust/998441\" rel=\"nofollow\">https://gist.github.com/danielfaust/998441</a></li>\n<li><a href=\"https://github.com/Bntdumas/SamsungIPRemote\" rel=\"nofollow\">https://github.com/Bntdumas/SamsungIPRemote</a></li>\n<li><a href=\"https://github.com/kyleaa/homebridge-samsungtv2016\" rel=\"nofollow\">https://github.com/kyleaa/homebridge-samsungtv2016</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3491957, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "acbffbfe73407428c985a62aecf2587c", "sha256": "59c78d9ace6ac9495d02f10121177cafd2b4ea76036616e1820f6f331ad5f3d1"}, "downloads": -1, "filename": "samsungctl-0.1.0.tar.gz", "has_sig": false, "md5_digest": "acbffbfe73407428c985a62aecf2587c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2947, "upload_time": "2014-03-14T09:56:58", "upload_time_iso_8601": "2014-03-14T09:56:58.498681Z", "url": "https://files.pythonhosted.org/packages/50/78/3cd11b7f7b748b9b2827e30c79ffdc81f928ea734a802d497cef80eb5050/samsungctl-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "cf6ceddff8a990883529455ad84eef26", "sha256": "8bf6c1918c874eda401c57aee25bef1a3d4f440bbafc894992495479a1162eda"}, "downloads": -1, "filename": "samsungctl-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cf6ceddff8a990883529455ad84eef26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2975, "upload_time": "2014-03-14T21:52:00", "upload_time_iso_8601": "2014-03-14T21:52:00.521938Z", "url": "https://files.pythonhosted.org/packages/34/39/ad94af0f1be381be4c18659b85286699e52645faa3be932cfd915092b762/samsungctl-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a46b8fb1be648f5867898af65be53e46", "sha256": "a6c253d4f228f2efe5e2bb7dae76e02aad2644cdc020ac4688d2e59d4e42d7eb"}, "downloads": -1, "filename": "samsungctl-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a46b8fb1be648f5867898af65be53e46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3414, "upload_time": "2014-03-19T18:37:11", "upload_time_iso_8601": "2014-03-19T18:37:11.410277Z", "url": "https://files.pythonhosted.org/packages/c0/90/a019b6bdf03adb84c312158466a5b60de71a76281ab31885283155d1ef63/samsungctl-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "19311d9c3f0dcd12308fff35197e8965", "sha256": "6fe7de40c029afa215ceddf5cd13d74e3de0a9902101bf9958629bc752ca4af8"}, "downloads": -1, "filename": "samsungctl-0.3.0.tar.gz", "has_sig": false, "md5_digest": "19311d9c3f0dcd12308fff35197e8965", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4055, "upload_time": "2014-03-21T17:12:13", "upload_time_iso_8601": "2014-03-21T17:12:13.484237Z", "url": "https://files.pythonhosted.org/packages/60/95/30a4b5e1edea7654ba6b083be78cab64aff190914eb2a355b7e5bcef0c75/samsungctl-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "bfb2817d138d223d125b1f13c622a046", "sha256": "76606e24468cbcd10a364344c1ad79c753196c551552f96e654bde6d817866bb"}, "downloads": -1, "filename": "samsungctl-0.4.0.tar.gz", "has_sig": false, "md5_digest": "bfb2817d138d223d125b1f13c622a046", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4570, "upload_time": "2016-01-06T10:35:43", "upload_time_iso_8601": "2016-01-06T10:35:43.976447Z", "url": "https://files.pythonhosted.org/packages/1a/f2/25fe71bc0ca096bd3362d939e3b771470df320305733d0c674e5e8c3e4ef/samsungctl-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "addd6426712c32baf2f3beb6f03a984c", "sha256": "b560384434d8990dae97227884bf97b44b43e4238e66c8ae9f7e24c8740772d2"}, "downloads": -1, "filename": "samsungctl-0.5.0.tar.gz", "has_sig": false, "md5_digest": "addd6426712c32baf2f3beb6f03a984c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4933, "upload_time": "2016-01-07T12:05:57", "upload_time_iso_8601": "2016-01-07T12:05:57.497816Z", "url": "https://files.pythonhosted.org/packages/2d/f2/31348c017a322322ddaef11b8079451db86f60941c7936e0e4566670f4c7/samsungctl-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "8e644739ff9c9968bfd4124eb2602df0", "sha256": "1448cb203ed037e624b5bc31942d9b449670d9f88c849c08d866f76d52f4117f"}, "downloads": -1, "filename": "samsungctl-0.5.1.tar.gz", "has_sig": false, "md5_digest": "8e644739ff9c9968bfd4124eb2602df0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5870, "upload_time": "2016-01-20T13:43:30", "upload_time_iso_8601": "2016-01-20T13:43:30.303643Z", "url": "https://files.pythonhosted.org/packages/88/ad/7e0e701cc46b0caef4d361a4d9524d2268b4bccc0ea71967a2473c2ade89/samsungctl-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "fea2e755b3c307d7a8edecc1b2822d22", "sha256": "59d4666baab4446879710779604b6c01620a3c107f719f6bcaa5c46455456fd7"}, "downloads": -1, "filename": "samsungctl-0.6.0.tar.gz", "has_sig": false, "md5_digest": "fea2e755b3c307d7a8edecc1b2822d22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8628, "upload_time": "2016-12-31T08:29:29", "upload_time_iso_8601": "2016-12-31T08:29:29.901621Z", "url": "https://files.pythonhosted.org/packages/09/13/9d6bcf85cd142dd35ca11de6fa32b773e825b2a1b7ab056e9259af40d426/samsungctl-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "c722997d44b50d00a1261d054122b09e", "sha256": "023b19c0f9cbd1ad0f359bbe005f6d1d730b94ebeebdbb90830c4f2984dedb37"}, "downloads": -1, "filename": "samsungctl-0.7.0.tar.gz", "has_sig": false, "md5_digest": "c722997d44b50d00a1261d054122b09e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8806, "upload_time": "2017-11-01T10:06:24", "upload_time_iso_8601": "2017-11-01T10:06:24.125760Z", "url": "https://files.pythonhosted.org/packages/a2/18/d299268c9094df031887c4a50de416878a2b89b01f6b44f500a895f424b7/samsungctl-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "ee02d16491f65be09ae21787885dfeb0", "sha256": "2fc175fb730b39ebaed5d95db178a6daeec1b802146b0116ed13e7629a1bff46"}, "downloads": -1, "filename": "samsungctl-0.7.1.tar.gz", "has_sig": false, "md5_digest": "ee02d16491f65be09ae21787885dfeb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8933, "upload_time": "2018-01-15T20:01:01", "upload_time_iso_8601": "2018-01-15T20:01:01.634560Z", "url": "https://files.pythonhosted.org/packages/33/13/d97749371984ebacc53e66106cd3d224650aa2e33b21f3a4fcb4375435b3/samsungctl-0.7.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ee02d16491f65be09ae21787885dfeb0", "sha256": "2fc175fb730b39ebaed5d95db178a6daeec1b802146b0116ed13e7629a1bff46"}, "downloads": -1, "filename": "samsungctl-0.7.1.tar.gz", "has_sig": false, "md5_digest": "ee02d16491f65be09ae21787885dfeb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8933, "upload_time": "2018-01-15T20:01:01", "upload_time_iso_8601": "2018-01-15T20:01:01.634560Z", "url": "https://files.pythonhosted.org/packages/33/13/d97749371984ebacc53e66106cd3d224650aa2e33b21f3a4fcb4375435b3/samsungctl-0.7.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:52 2020"}