{"info": {"author": "Dale Myers", "author_email": "dale@myers.io", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Topic :: Office/Business :: Financial", "Topic :: Software Development :: Libraries"], "description": "# libmonzo \n\nA Python library for interacting with Monzo bank accounts that can handle OAuth authentication.\n\n### Installation\n\n    pip install libmonzo\n\n### Setup\n\nTo use this library, you'll need to create your own client on the Monzo developer site: https://developers.monzo.com/apps/home\n\nThe name, logo, and description can be whatever you want it to be. Set the \"Confidentiality\" to \"Not Confidential\" and set the redirect URL to \"http://localhost:36453/monzo_callback\" (or whatever you like if you will be providing the access token).\n\nYou'll need to store the client ID, the owner ID and the client secret for use in setup of the client later.\n\n### Example:\n\n    import libmonzo\n\n    client = libmonzo.MonzoClient(client_id, owner_id, client_secret)\n\n    # Via OAuth (it will open a browser window)\n    client.authenticate()\n\n    # Or providing the access token directly\n    client.access_token = \"...\"\n\n    # Getting accounts\n    for account in client.accounts():\n        print(account.owners[0].preferred_name)\n\n    # Get the balance of an account\n    account = client.accounts()[0]\n    balance_info = client.balance(account_id=account.identifier)\n    print(balance_info.balance)\n\n### Supported APIs\n\n* Listing accounts\n* Reading balance\n* Listing pots\n* Depositing into pots\n* Withdrawing from pots\n* Retrieving a transaction\n* Listing transactions\n* Creating feed items\n* Uploading and setting attachments\n* Removing attachments\n* Registering webooks\n* Listing webhooks\n* Removing webhooks\n\nAnnotating transactions will be coming soon. There appears to be a minor bug causing problems at this point, so it's not quite ready.\n\n\n### Known issues\n\nThis was written because I needed it for a small personal project. Because of that, there are some issues. I'm open to PRs to fix these though.\n\n* The OAuth setup isn't 100% reliable and could be better\n* Limited error checking\n* Limited bounds/variable checking\n* Lack of useful error messages\n* Design could be cleaner\n* The tests require a local configuration file to even run\n* Plus so many more", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dalemyers/libmonzo", "keywords": "bank,banks,monzo,mondo", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "libmonzo", "package_url": "https://pypi.org/project/libmonzo/", "platform": "", "project_url": "https://pypi.org/project/libmonzo/", "project_urls": {"Homepage": "https://github.com/dalemyers/libmonzo"}, "release_url": "https://pypi.org/project/libmonzo/0.1/", "requires_dist": null, "requires_python": "", "summary": "An API wrapper around Monzo bank accounts.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>libmonzo</h1>\n<p>A Python library for interacting with Monzo bank accounts that can handle OAuth authentication.</p>\n<h3>Installation</h3>\n<pre><code>pip install libmonzo\n</code></pre>\n<h3>Setup</h3>\n<p>To use this library, you'll need to create your own client on the Monzo developer site: <a href=\"https://developers.monzo.com/apps/home\" rel=\"nofollow\">https://developers.monzo.com/apps/home</a></p>\n<p>The name, logo, and description can be whatever you want it to be. Set the \"Confidentiality\" to \"Not Confidential\" and set the redirect URL to \"<a href=\"http://localhost:36453/monzo_callback\" rel=\"nofollow\">http://localhost:36453/monzo_callback</a>\" (or whatever you like if you will be providing the access token).</p>\n<p>You'll need to store the client ID, the owner ID and the client secret for use in setup of the client later.</p>\n<h3>Example:</h3>\n<pre><code>import libmonzo\n\nclient = libmonzo.MonzoClient(client_id, owner_id, client_secret)\n\n# Via OAuth (it will open a browser window)\nclient.authenticate()\n\n# Or providing the access token directly\nclient.access_token = \"...\"\n\n# Getting accounts\nfor account in client.accounts():\n    print(account.owners[0].preferred_name)\n\n# Get the balance of an account\naccount = client.accounts()[0]\nbalance_info = client.balance(account_id=account.identifier)\nprint(balance_info.balance)\n</code></pre>\n<h3>Supported APIs</h3>\n<ul>\n<li>Listing accounts</li>\n<li>Reading balance</li>\n<li>Listing pots</li>\n<li>Depositing into pots</li>\n<li>Withdrawing from pots</li>\n<li>Retrieving a transaction</li>\n<li>Listing transactions</li>\n<li>Creating feed items</li>\n<li>Uploading and setting attachments</li>\n<li>Removing attachments</li>\n<li>Registering webooks</li>\n<li>Listing webhooks</li>\n<li>Removing webhooks</li>\n</ul>\n<p>Annotating transactions will be coming soon. There appears to be a minor bug causing problems at this point, so it's not quite ready.</p>\n<h3>Known issues</h3>\n<p>This was written because I needed it for a small personal project. Because of that, there are some issues. I'm open to PRs to fix these though.</p>\n<ul>\n<li>The OAuth setup isn't 100% reliable and could be better</li>\n<li>Limited error checking</li>\n<li>Limited bounds/variable checking</li>\n<li>Lack of useful error messages</li>\n<li>Design could be cleaner</li>\n<li>The tests require a local configuration file to even run</li>\n<li>Plus so many more</li>\n</ul>\n\n          </div>"}, "last_serial": 4162112, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1299f685aea0a31e3867d611148aa8ef", "sha256": "8d194f8e32e4f929c1f931253e872774428d059b6ba4c30a426df234e992a6d4"}, "downloads": -1, "filename": "libmonzo-0.1.tar.gz", "has_sig": false, "md5_digest": "1299f685aea0a31e3867d611148aa8ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10663, "upload_time": "2018-08-12T17:32:50", "upload_time_iso_8601": "2018-08-12T17:32:50.377948Z", "url": "https://files.pythonhosted.org/packages/e8/0d/0f8666e7b8cb1cefd5bf868ed20c6f22734535cd18621c4307f71c80c602/libmonzo-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1299f685aea0a31e3867d611148aa8ef", "sha256": "8d194f8e32e4f929c1f931253e872774428d059b6ba4c30a426df234e992a6d4"}, "downloads": -1, "filename": "libmonzo-0.1.tar.gz", "has_sig": false, "md5_digest": "1299f685aea0a31e3867d611148aa8ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10663, "upload_time": "2018-08-12T17:32:50", "upload_time_iso_8601": "2018-08-12T17:32:50.377948Z", "url": "https://files.pythonhosted.org/packages/e8/0d/0f8666e7b8cb1cefd5bf868ed20c6f22734535cd18621c4307f71c80c602/libmonzo-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:32 2020"}