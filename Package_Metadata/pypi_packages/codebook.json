{"info": {"author": "Edward Banner", "author_email": "edward.banner@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: MacOS X", "Framework :: IPython", "Framework :: Jupyter", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Programming Language :: Python :: 3.6", "Topic :: Education", "Topic :: Software Development", "Topic :: Software Development :: Code Generators", "Topic :: Software Development :: Debuggers", "Topic :: Software Development :: Documentation", "Topic :: Text Editors", "Topic :: Text Editors :: Emacs", "Topic :: Text Editors :: Integrated Development Environments (IDE)"], "description": "PYNT (PYthon iNTeractive)\n=========================\n\nGet your code into a jupyter notebook. Anytime. Anywhere.\n\nCheck out my `SciPy 2018 talk <https://youtu.be/MfM_TijHNYE>`__ for the\nmotivation and a feature tour of pynt.\n\n|MELPA| |PyPI version| |Built with Spacemacs|\n\nFeatures\n--------\n\nGenerate jupyter notebooks on the fly\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNo more copy and pasting code into jupyter notebooks. Each line of code\ngets its own cell.\n\n.. figure:: https://github.com/ebanner/pynt-assets/blob/master/gif/generate-notebook.gif\n   :alt: Alt Text\n\n   Alt Text\n\nAttach a jupyter notebook to a running process\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nRun a command which hits the code in the notebook. Restart the notebook\nkernel to attach to that process.\n\n.. figure:: https://github.com/ebanner/pynt-assets/blob/master/gif/attach%20notebook.gif\n   :alt: Alt Text\n\n   Alt Text\n\nSyntax transformations\n~~~~~~~~~~~~~~~~~~~~~~\n\nUnroll the first pass of loops for increased interactivity.\n\n.. figure:: https://github.com/ebanner/pynt-assets/blob/master/gif/loop%20unrolling.gif\n   :alt: Alt Text\n\n   Alt Text\n\nScroll the resulting jupyter notebook with the code buffer\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNever forget which cell a code line corresponds to.\n\n.. figure:: https://github.com/ebanner/pynt-assets/blob/master/gif/scroll-notebook.gif\n   :alt: Alt Text\n\n   Alt Text\n\nQuick Start\n-----------\n\n*Disclaimer: pynt is in beta. Make sure to back-up your code before\nusing it!*\n\nInstall the codebook module `from\nPyPI <https://pypi.python.org/pypi/codebook>`__ with\n`pip <https://pip.pypa.io/en/stable/>`__.\n\n::\n\n    $ pip install codebook \n\nThen install pynt in emacs through `MELPA <https://melpa.org/#/pynt>`__.\n\n::\n\n    M-x package-install RET pynt\n\nThe next time you visit a python file pynt mode will be active.\n\nWhat is pynt?\n-------------\n\npynt is an emacs minor mode for getting source code into jupyter\nnotebooks so you can hack on it there. If you have access to source code\nand a command to call it with then you can get your code into a jupyter\nnotebook.\n\nHowever, just pasting your code into one big jupyter notebook cell is\nnot particularly useful. pynt also\n\n-  splits up code into cells so it\u2019s easy to evaluate small bits\n-  sets up the state required to run code (by allowing you to attach\n   notebooks to external processes)\n-  takes code previously buried in various namespaces (e.g.\u00a0functions\n   and loops) and exposes them to the global namespace so you can\n   interact with them\n\nUsing pynt\n----------\n\nIt is highly recommended that you familiarize yourself with `Emacs\nIPython Notebook\n(EIN) <http://millejoh.github.io/emacs-ipython-notebook/>`__ first as\npynt, at its core, is a tool to make working with EIN easier.\n\nOnce you have opened a python file and pynt mode is active, cursor over\nto the region of code you would like to dump into a notebook and hit\n``C-c C-s``. If you need to \u201cre-dump\u201d the code into the notebook then\nhit ``C-c C-e``.\n\nIf you want to attach a jupyter notebook to a running process, then run\na command which hits the jupyter notebook code. Restart the jupyter\nnotebook kernel with ``C-c C-r``\n(``ein:notebook-restart-kernel-command``). When you see the message\n``ein: [info] Starting channels WS: ...`` your notebook is attached!\n\nHow pynt works\n--------------\n\npynt uses a `custom kernel\nmanager <https://github.com/ebanner/extipy>`__ for attaching to jupyter\nnotebook kernels started via third-party processes. When pynt generates\na jupyter notebook from a code region that code region is replaced with\na IPython kernel breakpoint so that subsequent commands that hit it will\nstart a jupyter kernel for the notebook to attach to. See\n`here <https://github.com/ebanner/pynt/wiki/Using-the-standalone-kernel-manager>`__\nfor more information.\n\npynt also makes heavy use of the\n```ast`` <https://docs.python.org/3/library/ast.html>`__ module to parse\nyour code into chunks which are then dumped into notebook cells.\n\nRelated Projects\n----------------\n\npynt is a tool that truly `stands on the shoulders of\ngiants <https://en.wikipedia.org/wiki/Standing_on_the_shoulders_of_giants>`__.\nHere are some projects where if they had not existed, then pynt would\nnot have been possible.\n\n-  `Jupyter <http://jupyter.org/>`__\n\n   -  `Emacs IPython\n      Notebook <http://millejoh.github.io/emacs-ipython-notebook/>`__\n\n-  `Emacs <https://www.gnu.org/software/emacs/>`__\n\n   -  `Spacemacs <http://spacemacs.org/>`__\n\n-  `Python <https://www.python.org/>`__\n-  `SLIME <https://common-lisp.net/project/slime/>`__\n\n   -  `vim-slime <https://github.com/jpalardy/vim-slime>`__\n\n.. |MELPA| image:: https://melpa.org/packages/pynt-badge.svg\n   :target: https://melpa.org/#/pynt\n.. |PyPI version| image:: https://badge.fury.io/py/codebook.svg\n   :target: https://badge.fury.io/py/codebook\n.. |Built with Spacemacs| image:: https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg\n   :target: http://spacemacs.org\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/ebanner/pynt", "keywords": "interactive programming jupyter ipython emacs", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "codebook", "package_url": "https://pypi.org/project/codebook/", "platform": "", "project_url": "https://pypi.org/project/codebook/", "project_urls": {"Homepage": "http://github.com/ebanner/pynt"}, "release_url": "https://pypi.org/project/codebook/1.2.2/", "requires_dist": null, "requires_python": "", "summary": "Emacs minor mode for generating and interacting with jupyter notebooks", "version": "1.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Get your code into a jupyter notebook. Anytime. Anywhere.</p>\n<p>Check out my <a href=\"https://youtu.be/MfM_TijHNYE\" rel=\"nofollow\">SciPy 2018 talk</a> for the\nmotivation and a feature tour of pynt.</p>\n<p><a href=\"https://melpa.org/#/pynt\" rel=\"nofollow\"><img alt=\"MELPA\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/16e564f13b3bc2de5dc4995b46db66cc11c6b803/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f70796e742d62616467652e737667\"></a> <a href=\"https://badge.fury.io/py/codebook\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/56b1343ca6906403f6cc52bd2b08438a8530c8c6/68747470733a2f2f62616467652e667572792e696f2f70792f636f6465626f6f6b2e737667\"></a> <a href=\"http://spacemacs.org\" rel=\"nofollow\"><img alt=\"Built with Spacemacs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a5fe1f701d412915205c8915e5fa0550f4dd76e/68747470733a2f2f63646e2e7261776769742e636f6d2f73796c3230626e722f73706163656d6163732f343432643032353737396461326636326663383663323038323730333639373731346462363531342f6173736574732f73706163656d6163732d62616467652e737667\"></a></p>\n<div id=\"features\">\n<h2>Features</h2>\n<div id=\"generate-jupyter-notebooks-on-the-fly\">\n<h3>Generate jupyter notebooks on the fly</h3>\n<p>No more copy and pasting code into jupyter notebooks. Each line of code\ngets its own cell.</p>\n<div>\n<img alt=\"Alt Text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/256d3f09064d6d5aba3c0702f7ed04e89442a8ff/68747470733a2f2f6769746875622e636f6d2f6562616e6e65722f70796e742d6173736574732f626c6f622f6d61737465722f6769662f67656e65726174652d6e6f7465626f6f6b2e676966\">\n<p>Alt Text</p>\n</div>\n</div>\n<div id=\"attach-a-jupyter-notebook-to-a-running-process\">\n<h3>Attach a jupyter notebook to a running process</h3>\n<p>Run a command which hits the code in the notebook. Restart the notebook\nkernel to attach to that process.</p>\n<div>\n<img alt=\"Alt Text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4039b5954ede3564cbcbcaa7da16d152e25fff67/68747470733a2f2f6769746875622e636f6d2f6562616e6e65722f70796e742d6173736574732f626c6f622f6d61737465722f6769662f6174746163682532306e6f7465626f6f6b2e676966\">\n<p>Alt Text</p>\n</div>\n</div>\n<div id=\"syntax-transformations\">\n<h3>Syntax transformations</h3>\n<p>Unroll the first pass of loops for increased interactivity.</p>\n<div>\n<img alt=\"Alt Text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8e5c63d682333506bdcda36ec2cf80b0ed0d489/68747470733a2f2f6769746875622e636f6d2f6562616e6e65722f70796e742d6173736574732f626c6f622f6d61737465722f6769662f6c6f6f70253230756e726f6c6c696e672e676966\">\n<p>Alt Text</p>\n</div>\n</div>\n<div id=\"scroll-the-resulting-jupyter-notebook-with-the-code-buffer\">\n<h3>Scroll the resulting jupyter notebook with the code buffer</h3>\n<p>Never forget which cell a code line corresponds to.</p>\n<div>\n<img alt=\"Alt Text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/993c0d636b718ffa5373c35145a4ca458bbfc09d/68747470733a2f2f6769746875622e636f6d2f6562616e6e65722f70796e742d6173736574732f626c6f622f6d61737465722f6769662f7363726f6c6c2d6e6f7465626f6f6b2e676966\">\n<p>Alt Text</p>\n</div>\n</div>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p><em>Disclaimer: pynt is in beta. Make sure to back-up your code before\nusing it!</em></p>\n<p>Install the codebook module <a href=\"https://pypi.python.org/pypi/codebook\" rel=\"nofollow\">from\nPyPI</a> with\n<a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a>.</p>\n<pre>$ pip install codebook\n</pre>\n<p>Then install pynt in emacs through <a href=\"https://melpa.org/#/pynt\" rel=\"nofollow\">MELPA</a>.</p>\n<pre>M-x package-install RET pynt\n</pre>\n<p>The next time you visit a python file pynt mode will be active.</p>\n</div>\n<div id=\"what-is-pynt\">\n<h2>What is pynt?</h2>\n<p>pynt is an emacs minor mode for getting source code into jupyter\nnotebooks so you can hack on it there. If you have access to source code\nand a command to call it with then you can get your code into a jupyter\nnotebook.</p>\n<p>However, just pasting your code into one big jupyter notebook cell is\nnot particularly useful. pynt also</p>\n<ul>\n<li>splits up code into cells so it\u2019s easy to evaluate small bits</li>\n<li>sets up the state required to run code (by allowing you to attach\nnotebooks to external processes)</li>\n<li>takes code previously buried in various namespaces (e.g.\u00a0functions\nand loops) and exposes them to the global namespace so you can\ninteract with them</li>\n</ul>\n</div>\n<div id=\"using-pynt\">\n<h2>Using pynt</h2>\n<p>It is highly recommended that you familiarize yourself with <a href=\"http://millejoh.github.io/emacs-ipython-notebook/\" rel=\"nofollow\">Emacs\nIPython Notebook\n(EIN)</a> first as\npynt, at its core, is a tool to make working with EIN easier.</p>\n<p>Once you have opened a python file and pynt mode is active, cursor over\nto the region of code you would like to dump into a notebook and hit\n<tt><span class=\"pre\">C-c</span> <span class=\"pre\">C-s</span></tt>. If you need to \u201cre-dump\u201d the code into the notebook then\nhit <tt><span class=\"pre\">C-c</span> <span class=\"pre\">C-e</span></tt>.</p>\n<p>If you want to attach a jupyter notebook to a running process, then run\na command which hits the jupyter notebook code. Restart the jupyter\nnotebook kernel with <tt><span class=\"pre\">C-c</span> <span class=\"pre\">C-r</span></tt>\n(<tt><span class=\"pre\">ein:notebook-restart-kernel-command</span></tt>). When you see the message\n<tt>ein: [info] Starting channels WS: ...</tt> your notebook is attached!</p>\n</div>\n<div id=\"how-pynt-works\">\n<h2>How pynt works</h2>\n<p>pynt uses a <a href=\"https://github.com/ebanner/extipy\" rel=\"nofollow\">custom kernel\nmanager</a> for attaching to jupyter\nnotebook kernels started via third-party processes. When pynt generates\na jupyter notebook from a code region that code region is replaced with\na IPython kernel breakpoint so that subsequent commands that hit it will\nstart a jupyter kernel for the notebook to attach to. See\n<a href=\"https://github.com/ebanner/pynt/wiki/Using-the-standalone-kernel-manager\" rel=\"nofollow\">here</a>\nfor more information.</p>\n<p>pynt also makes heavy use of the\n<tt>`ast</tt> &lt;<a href=\"https://docs.python.org/3/library/ast.html\" rel=\"nofollow\">https://docs.python.org/3/library/ast.html</a>&gt;`__ module to parse\nyour code into chunks which are then dumped into notebook cells.</p>\n</div>\n<div id=\"related-projects\">\n<h2>Related Projects</h2>\n<p>pynt is a tool that truly <a href=\"https://en.wikipedia.org/wiki/Standing_on_the_shoulders_of_giants\" rel=\"nofollow\">stands on the shoulders of\ngiants</a>.\nHere are some projects where if they had not existed, then pynt would\nnot have been possible.</p>\n<ul>\n<li><a href=\"http://jupyter.org/\" rel=\"nofollow\">Jupyter</a><ul>\n<li><a href=\"http://millejoh.github.io/emacs-ipython-notebook/\" rel=\"nofollow\">Emacs IPython\nNotebook</a></li>\n</ul>\n</li>\n<li><a href=\"https://www.gnu.org/software/emacs/\" rel=\"nofollow\">Emacs</a><ul>\n<li><a href=\"http://spacemacs.org/\" rel=\"nofollow\">Spacemacs</a></li>\n</ul>\n</li>\n<li><a href=\"https://www.python.org/\" rel=\"nofollow\">Python</a></li>\n<li><a href=\"https://common-lisp.net/project/slime/\" rel=\"nofollow\">SLIME</a><ul>\n<li><a href=\"https://github.com/jpalardy/vim-slime\" rel=\"nofollow\">vim-slime</a></li>\n</ul>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4097403, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "422c454aad414a5f581bc63f3ddc7f13", "sha256": "c4d52262e9b37ac5dd85ec54879f8971878b45cb8b08f9a38b920277d6f8e35c"}, "downloads": -1, "filename": "codebook-1.0.0.tar.gz", "has_sig": false, "md5_digest": "422c454aad414a5f581bc63f3ddc7f13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10150, "upload_time": "2018-02-28T01:57:09", "upload_time_iso_8601": "2018-02-28T01:57:09.413708Z", "url": "https://files.pythonhosted.org/packages/fe/19/26854bf05cc24ada300eb71059c77fdb07733099a5b95dee5c7c9587cf69/codebook-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "f6db55b987c437b54cf20b0e1a2b60c7", "sha256": "1102c4ba41d924781778e10fffa223ae678c74d7f4516761af2d85bb407c4a11"}, "downloads": -1, "filename": "codebook-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f6db55b987c437b54cf20b0e1a2b60c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13286, "upload_time": "2018-03-01T01:20:57", "upload_time_iso_8601": "2018-03-01T01:20:57.914702Z", "url": "https://files.pythonhosted.org/packages/6f/28/4cd8ada9cc9c76c827eb748920f8b44a61dde8013d80b96aa35d073e0825/codebook-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "bf38e4b1165dfe4b931ac672e80165c9", "sha256": "071822e3832220f70857b9c2b8ba53c719706df71781b4cb74d51835f665d1aa"}, "downloads": -1, "filename": "codebook-1.2.0.tar.gz", "has_sig": false, "md5_digest": "bf38e4b1165dfe4b931ac672e80165c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14860, "upload_time": "2018-04-01T04:15:12", "upload_time_iso_8601": "2018-04-01T04:15:12.323562Z", "url": "https://files.pythonhosted.org/packages/7a/44/d137250de95428d059a8562fd952fb10f4a2f49a14856e1346a07ea4760d/codebook-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "02c87a27db0db0e6ecb0fc9a0f842cd0", "sha256": "05d779a8c1422d05cc79f70b27309f3c45b3fc1596772c8dc76b81389aaeda2f"}, "downloads": -1, "filename": "codebook-1.2.1.tar.gz", "has_sig": false, "md5_digest": "02c87a27db0db0e6ecb0fc9a0f842cd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14708, "upload_time": "2018-04-01T04:16:20", "upload_time_iso_8601": "2018-04-01T04:16:20.208029Z", "url": "https://files.pythonhosted.org/packages/71/91/e8b16e0898a6532ff7eea9cafd16948deae162212b2e181a11b51393e50e/codebook-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "3598d700d49d17aea13a9efa11e139b0", "sha256": "7330bfc27a525ad11e0acfc6ff2335791912c9d2f899b00f2500fb6df6376c9b"}, "downloads": -1, "filename": "codebook-1.2.2.tar.gz", "has_sig": false, "md5_digest": "3598d700d49d17aea13a9efa11e139b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15105, "upload_time": "2018-07-24T15:20:54", "upload_time_iso_8601": "2018-07-24T15:20:54.288663Z", "url": "https://files.pythonhosted.org/packages/58/e1/cb47797f23769bc26a78f5d990ead1d5e431a47bf3803240900b6d79efe7/codebook-1.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3598d700d49d17aea13a9efa11e139b0", "sha256": "7330bfc27a525ad11e0acfc6ff2335791912c9d2f899b00f2500fb6df6376c9b"}, "downloads": -1, "filename": "codebook-1.2.2.tar.gz", "has_sig": false, "md5_digest": "3598d700d49d17aea13a9efa11e139b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15105, "upload_time": "2018-07-24T15:20:54", "upload_time_iso_8601": "2018-07-24T15:20:54.288663Z", "url": "https://files.pythonhosted.org/packages/58/e1/cb47797f23769bc26a78f5d990ead1d5e431a47bf3803240900b6d79efe7/codebook-1.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:18 2020"}