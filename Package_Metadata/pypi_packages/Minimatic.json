{"info": {"author": "Linas Ju\u00c5\u00a1kevi\u00c4\u008dius", "author_email": "linas@idiles.com", "bugtrack_url": null, "classifiers": [], "description": "Minimatic\n=========\n\nAn extension to WebHelpers_ that enables a real time JS/CSS combination and\nminification in production mode.\n\nInstallation\n------------\n\nUsing easy_install::\n\n    $ easy_install minimatic\n\nUsing pip::\n    \n    $ pip install minimatic\n\nSource code\n-----------\n\nGit repository is located at GitHub.com_.\n\nUsage\n-----\n\nIt extends the WebHelpers_ functions javascript_link_ and stylesheet_link_ to\ntake a modified set of parameters:\n\n* **sources** (list): JS/CSS items to process. Each item is one of the following:\n    * (dict) with keys:\n        * file: a path to the source file relative to the static file root\n        * minify: minification method. Possible values (default *False*):\n            * False (bool): use the source unmodified\n            * strip (str): only strip extra whitespace and comments (applicable\n              to CSS only)\n            * minify (str): strip whitespace and apply other possible JS/CSS\n              minifications. Note that this involves source parsing and will err\n              on syntax errors (CSS hacks will be removed!). In effect the\n              resulting file may be logically different\n        * dest: if the source list is not combined then each item must provide a\n          destination filename relative to the static file root\n    * (str): it will be treated as (see above)::\n\n        {'file': (str), 'minify': False}\n\n* **combined** (str): the combined filename relative to the static file root.\n  Implies that the files need to be combined. If **combined** is None then every\n  Item must have a dest key provided.\n* **beaker_kwargs** (dict): override default arguments that will be passed to\n  `beaker_cache`. `beaker_kwargs.update()` is issued on default arguments.\n* **timestamp** append `time.time` timestamp to links to force browsers reload\n  the JS/CSS assets, eg. test.js?t=123012343\n\nThe files will be combined in production mode; in development mode\n(*debug=True*) they will be served unmodified separately.\n\nExample\n-------\n\nMix and match the sources into one big JS file::\n\n    >>> javascript_link(\n    ...     # These files are already minified; combine them only\n    ...     '/js/jquery.js',\n    ...     '/js/jquery-ui-custom.js',\n    ...     # These are custom files which need to be minified first\n    ...     dict(file='/js/base.js', minify='minify'),\n    ...     dict(file='/js/page-script.js', minify='minify'),\n    ...     combined='/combined/js/scripts.js',\n    ...     timestamp=True)\n\nServe CSS files separately (uncombined)::\n\n    >>> stylesheet_link(\n    ...     # This stylesheet is valid CSS and safe to parse and minify\n    ...     dict(file='/css/base.css', minify='minify',\n    ...         dest='/combined/css/base.css'),\n    ...     # This stylesheet is full of CSS hacks and only the extra whitespace\n    ...     # and comments should be stripped\n    ...     dict(file='/css/styles.ie6.css', minify='strip',\n    ...         dest='/combined/css/styles.ie6.css'),\n    ...     timestamp=True)\n\n.. _WebHelpers: http://pylonshq.com/docs/en/0.9.7/thirdparty/webhelpers/\n.. _javascript_link: http://pylonshq.com/docs/en/0.9.7/thirdparty/webhelpers/html/html/#webhelpers.html.tags.javascript_link\n.. _stylesheet_link: http://pylonshq.com/docs/en/0.9.7/thirdparty/webhelpers/html/html/#webhelpers.html.tags.stylesheet_link\n.. _GitHub.com: http://github.com/kaukas/Minimatic", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "Minimatic", "package_url": "https://pypi.org/project/Minimatic/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Minimatic/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/Minimatic/1.0/", "requires_dist": null, "requires_python": null, "summary": "CSS and Javascript Minification/Combination Upgrade to WebHelpers", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An extension to <a href=\"http://pylonshq.com/docs/en/0.9.7/thirdparty/webhelpers/\" rel=\"nofollow\">WebHelpers</a> that enables a real time JS/CSS combination and\nminification in production mode.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Using easy_install:</p>\n<pre>$ easy_install minimatic\n</pre>\n<p>Using pip:</p>\n<pre>$ pip install minimatic\n</pre>\n</div>\n<div id=\"source-code\">\n<h2>Source code</h2>\n<p>Git repository is located at <a href=\"http://github.com/kaukas/Minimatic\" rel=\"nofollow\">GitHub.com</a>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>It extends the <a href=\"http://pylonshq.com/docs/en/0.9.7/thirdparty/webhelpers/\" rel=\"nofollow\">WebHelpers</a> functions <a href=\"http://pylonshq.com/docs/en/0.9.7/thirdparty/webhelpers/html/html/#webhelpers.html.tags.javascript_link\" rel=\"nofollow\">javascript_link</a> and <a href=\"http://pylonshq.com/docs/en/0.9.7/thirdparty/webhelpers/html/html/#webhelpers.html.tags.stylesheet_link\" rel=\"nofollow\">stylesheet_link</a> to\ntake a modified set of parameters:</p>\n<ul>\n<li><dl>\n<dt><strong>sources</strong> (list): JS/CSS items to process. Each item is one of the following:</dt>\n<dd><ul>\n<li><dl>\n<dt>(dict) with keys:</dt>\n<dd><ul>\n<li>file: a path to the source file relative to the static file root</li>\n<li><dl>\n<dt>minify: minification method. Possible values (default <em>False</em>):</dt>\n<dd><ul>\n<li>False (bool): use the source unmodified</li>\n<li>strip (str): only strip extra whitespace and comments (applicable\nto CSS only)</li>\n<li>minify (str): strip whitespace and apply other possible JS/CSS\nminifications. Note that this involves source parsing and will err\non syntax errors (CSS hacks will be removed!). In effect the\nresulting file may be logically different</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>dest: if the source list is not combined then each item must provide a\ndestination filename relative to the static file root</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><p>(str): it will be treated as (see above):</p>\n<pre>{'file': (str), 'minify': False}\n</pre>\n</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><p><strong>combined</strong> (str): the combined filename relative to the static file root.\nImplies that the files need to be combined. If <strong>combined</strong> is None then every\nItem must have a dest key provided.</p>\n</li>\n<li><p><strong>beaker_kwargs</strong> (dict): override default arguments that will be passed to\n<cite>beaker_cache</cite>. <cite>beaker_kwargs.update()</cite> is issued on default arguments.</p>\n</li>\n<li><p><strong>timestamp</strong> append <cite>time.time</cite> timestamp to links to force browsers reload\nthe JS/CSS assets, eg. test.js?t=123012343</p>\n</li>\n</ul>\n<p>The files will be combined in production mode; in development mode\n(<em>debug=True</em>) they will be served unmodified separately.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>Mix and match the sources into one big JS file:</p>\n<pre>&gt;&gt;&gt; javascript_link(\n...     # These files are already minified; combine them only\n...     '/js/jquery.js',\n...     '/js/jquery-ui-custom.js',\n...     # These are custom files which need to be minified first\n...     dict(file='/js/base.js', minify='minify'),\n...     dict(file='/js/page-script.js', minify='minify'),\n...     combined='/combined/js/scripts.js',\n...     timestamp=True)\n</pre>\n<p>Serve CSS files separately (uncombined):</p>\n<pre>&gt;&gt;&gt; stylesheet_link(\n...     # This stylesheet is valid CSS and safe to parse and minify\n...     dict(file='/css/base.css', minify='minify',\n...         dest='/combined/css/base.css'),\n...     # This stylesheet is full of CSS hacks and only the extra whitespace\n...     # and comments should be stripped\n...     dict(file='/css/styles.ie6.css', minify='strip',\n...         dest='/combined/css/styles.ie6.css'),\n...     timestamp=True)\n</pre>\n</div>\n\n          </div>"}, "last_serial": 784714, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "5613d341aa836c609ace6d920cb7c0aa", "sha256": "54327a27dbff190e4b59c4553f801ca8ee1ce700dac4128a84fd27c9730c4ce5"}, "downloads": -1, "filename": "Minimatic-1.0-py2.5.egg", "has_sig": false, "md5_digest": "5613d341aa836c609ace6d920cb7c0aa", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 15342, "upload_time": "2010-01-19T14:30:43", "upload_time_iso_8601": "2010-01-19T14:30:43.788163Z", "url": "https://files.pythonhosted.org/packages/5a/fc/8045c19c1e191e854e88d47c8ab939d76332fccd7cf07fb004c447faa336/Minimatic-1.0-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0fbf3c53a3a0bab11f282ab0488d68b0", "sha256": "c8f1f9a72c07e7df6120edd49864b454a7203ed24ec1725bc1c5b2ab9ddbf948"}, "downloads": -1, "filename": "Minimatic-1.0-py2.6.egg", "has_sig": false, "md5_digest": "0fbf3c53a3a0bab11f282ab0488d68b0", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 15324, "upload_time": "2010-01-19T14:34:19", "upload_time_iso_8601": "2010-01-19T14:34:19.096635Z", "url": "https://files.pythonhosted.org/packages/f0/38/608cd8240156f13c8c7e02c0b674efcb4ee947e334a3fed821db239de2cc/Minimatic-1.0-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e3d4e6d2683d16d8bf35dde5f33a2e1", "sha256": "e2d8a037f797ac3ba5aa81aae8ab6a84322c174ef3709a72a787d94c31a12d06"}, "downloads": -1, "filename": "Minimatic-1.0.tar.gz", "has_sig": false, "md5_digest": "5e3d4e6d2683d16d8bf35dde5f33a2e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8122, "upload_time": "2010-01-19T14:30:42", "upload_time_iso_8601": "2010-01-19T14:30:42.975152Z", "url": "https://files.pythonhosted.org/packages/4d/41/9ba4bf266296e177a6d3b6af547a9b6b7a4780308afeb2249d9b5a1e541e/Minimatic-1.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "d03092a06b1751665bf9d31231a76e85", "sha256": "be3a7046026a0cc03792085c169bfb52bbcdf115b411d3d1e40254a7eaaa619e"}, "downloads": -1, "filename": "Minimatic-1.0.zip", "has_sig": false, "md5_digest": "d03092a06b1751665bf9d31231a76e85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12500, "upload_time": "2010-01-19T14:30:43", "upload_time_iso_8601": "2010-01-19T14:30:43.346992Z", "url": "https://files.pythonhosted.org/packages/2f/eb/c936a1ad4ef5be2989f8c31aa0a1fdc9a0d160018cd8ac93de99ba9f497e/Minimatic-1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5613d341aa836c609ace6d920cb7c0aa", "sha256": "54327a27dbff190e4b59c4553f801ca8ee1ce700dac4128a84fd27c9730c4ce5"}, "downloads": -1, "filename": "Minimatic-1.0-py2.5.egg", "has_sig": false, "md5_digest": "5613d341aa836c609ace6d920cb7c0aa", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 15342, "upload_time": "2010-01-19T14:30:43", "upload_time_iso_8601": "2010-01-19T14:30:43.788163Z", "url": "https://files.pythonhosted.org/packages/5a/fc/8045c19c1e191e854e88d47c8ab939d76332fccd7cf07fb004c447faa336/Minimatic-1.0-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0fbf3c53a3a0bab11f282ab0488d68b0", "sha256": "c8f1f9a72c07e7df6120edd49864b454a7203ed24ec1725bc1c5b2ab9ddbf948"}, "downloads": -1, "filename": "Minimatic-1.0-py2.6.egg", "has_sig": false, "md5_digest": "0fbf3c53a3a0bab11f282ab0488d68b0", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 15324, "upload_time": "2010-01-19T14:34:19", "upload_time_iso_8601": "2010-01-19T14:34:19.096635Z", "url": "https://files.pythonhosted.org/packages/f0/38/608cd8240156f13c8c7e02c0b674efcb4ee947e334a3fed821db239de2cc/Minimatic-1.0-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e3d4e6d2683d16d8bf35dde5f33a2e1", "sha256": "e2d8a037f797ac3ba5aa81aae8ab6a84322c174ef3709a72a787d94c31a12d06"}, "downloads": -1, "filename": "Minimatic-1.0.tar.gz", "has_sig": false, "md5_digest": "5e3d4e6d2683d16d8bf35dde5f33a2e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8122, "upload_time": "2010-01-19T14:30:42", "upload_time_iso_8601": "2010-01-19T14:30:42.975152Z", "url": "https://files.pythonhosted.org/packages/4d/41/9ba4bf266296e177a6d3b6af547a9b6b7a4780308afeb2249d9b5a1e541e/Minimatic-1.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "d03092a06b1751665bf9d31231a76e85", "sha256": "be3a7046026a0cc03792085c169bfb52bbcdf115b411d3d1e40254a7eaaa619e"}, "downloads": -1, "filename": "Minimatic-1.0.zip", "has_sig": false, "md5_digest": "d03092a06b1751665bf9d31231a76e85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12500, "upload_time": "2010-01-19T14:30:43", "upload_time_iso_8601": "2010-01-19T14:30:43.346992Z", "url": "https://files.pythonhosted.org/packages/2f/eb/c936a1ad4ef5be2989f8c31aa0a1fdc9a0d160018cd8ac93de99ba9f497e/Minimatic-1.0.zip", "yanked": false}], "timestamp": "Fri May  8 00:54:22 2020"}