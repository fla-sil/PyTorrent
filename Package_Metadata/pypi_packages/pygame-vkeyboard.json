{"info": {"author": "Felix Voituret, Antoine Rousseaux", "author_email": "felix@voituret.fr, anxuae-prog@yahoo.fr", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: pygame"], "description": "# pygame-vkeyboard\n\n[![Python package](https://github.com/Faylixe/pygame_vkeyboard/workflows/Python%20package/badge.svg?branch=master)](https://github.com/Faylixe/pygame_vkeyboard/actions) [![PyPI version](https://badge.fury.io/py/pygame-vkeyboard.svg)](https://badge.fury.io/py/pygame-vkeyboard) [![PyPI downloads](https://img.shields.io/pypi/dm/pygame-vkeyboard?color=purple)](https://pypi.org/project/pibooth)\n\nVisual keyboard for Pygame engine. Aims to be easy to use as highly customizable as well.\n\n<div align=\"center\">\n    <table>\n    <tr>\n        <td><img src=\"https://raw.githubusercontent.com/Faylixe/pygame_vkeyboard/master/screenshot/vkeyboard_azerty.png\">\n        </td>\n        <td><img src=\"https://github.com/Faylixe/pygame-vkeyboard/blob/master/screenshot/vkeyboard_numeric.gif?raw=true\">\n        </td>\n        <td><img src=\"https://github.com/Faylixe/pygame-vkeyboard/blob/master/screenshot/vkeyboard_textinput.gif?raw=true\">\n        </td>\n    </tr>\n    </table>\n</div>\n\n## Install\n\n```bash\npip install pygame-vkeyboard\n```\n\n## Basic usage\n\n``VKeyboard`` only require a pygame surface to be displayed on and a text consumer function, as in the following example :\n\n```python\nfrom pygame_vkeyboard import *\n\n# Initializes your window object or surface your want\n# vkeyboard to be displayed on top of.\nsurface = ...\n\ndef consumer(text):\n    print('Current text : %s' % text)\n\n# Initializes and activates vkeyboard\nlayout = VKeyboardLayout(VKeyboardLayout.AZERTY)\nkeyboard = VKeyboard(surface, consumer, layout)\n```\n\nThe keyboard has the following optional parameters:\n\n- **show_text**: display a text bar with the current text\n- **renderer** : define a custom renderer (see chapter below)\n- **special_char_layout**: define a custom layout for special characters\n- **joystick_navigation**: enable navigation using a joystick\n\n## Event management\n\nA ``VKeyboard`` object handles the following pygame event :\n\n- **MOUSEBUTTONDOWN**\n- **MOUSEBUTTONUP**\n- **KEYDOWN**\n- **KEYUP**\n- **JOYHATMOTION**\n- **JOYBUTTONDOWN**\n- **JOYBUTTONUP**\n\nIn order to process those events, keyboard instance event handling method should be called like in the following example:\n\n```python\nwhile True:\n\n    events = pygame.event.get()\n\n    # Update internal variables\n    keyboard.update(events)\n\n    # Draw the keyboard\n    keyboard.draw(surface)\n\n    #\n    # Perform other tasks here\n    #\n\n    # Update the display\n    pygame.display.flip()\n```\n\nIt will update key state accordingly as the keyboard buffer as well.\nThe buffer modification will be notified through the keyboard text consumer function.\n\nThe global performances can be improved avoiding to flip the entire display\nat each loop by using the ``pygame.display.update()`` function.\n\n```python\nwhile True:\n\n    # Draw the keyboard\n    rects = keyboard.draw(surface)\n\n    # Update only the dirty rectangles of the display\n    pygame.display.update(rects)\n```\n\n**Note:** the ``surface`` parameter of the ``draw()`` method is optional, it is used to clear/hide the keyboard when it is necessary and may be mandatory if the surface has changed.\n\n## Customize layout\n\nThe keyboard layout is the model that indicates keys are displayed and how they are dispatched\nacross the keyboard space. It consists in a ``VKeyboardLayout`` object which is built using list of string,\neach string corresponding to a keyboard key row. ``VkeyboardLayout`` constructor signature is defined as following :\n\n```python\ndef __init__(self, model, key_size=None, padding=5, allow_uppercase=True, allow_special_chars=True, allow_space=True)\n```\n\nIf the **key_size** parameter is not provided, it will be computed dynamically regarding of the target\nsurface the keyboard will be rendered into.\n\nIn order to only display a numerical ``Vkeyboard`` for example, you can use a custom layout like this :\n\n```python\nmodel = ['123', '456', '789', '0']\nlayout = VKeyboardLayout(model)\n```\n\n## Custom rendering using VKeyboardRenderer\n\nIf you want to customize keyboard rendering you could provide a ``VKeyboardRenderer`` instance at ``VKeyboard``construction.\n\n```python\nkeyboard = VKeyboard(surface, consumer, layout, renderer=VKeyboardRenderer.DARK)\n```\n\nHere is the list of default renderers provided with ``pygame-vkeyboard``:\n\n- VKeyboardRenderer.DEFAULT\n- VKeyboardRenderer.DARK\n\nA custom ``VKeyboardRenderer`` can be built using following constructor :\n\n```python\nrenderer = VKeyboardRenderer(\n    # Key font name/path.\n    'arial',\n    # Text color for key and text box (one per state: released, pressed).\n    ((0, 0, 0), (255, 255, 255)),\n    # Text box cursor color.\n    (0, 0, 0),\n    # Color to highlight the selected key.\n    (20, 200, 98),\n    # Keyboard background color.\n    (50, 50, 50),\n    # Key background color (one per state, as for the text color).\n    ((255, 255, 255), (0, 0, 0)),\n    # Text input background color.\n    (220, 220, 220),\n    # Optional special key text color (one per state, as for the text color).\n    ((0, 250, 0), (255, 255, 255)),\n    # Optional special key background color (one per state, as for the text color).\n    ((255, 255, 255), (0, 0, 0)),\n)\n```\n\nPlease note that the default renderer implementation require a unicode font.\n\nYou can also create your own renderer. Just override ``VKeyboardRenderer``class and override any of the following methods :\n\n- **draw_background(surface)**: Draws the background of the keyboard.\n- **draw_text(surface, text)**: Draws the text of the text input box.\n- **draw_cursor(surface, cursor)**: Draws the cursor of the text input box.\n- **draw_character_key(surface, key, special=False)**: Draws a key based on character value.\n- **draw_space_key(surface, key)**: Draws space bar.\n- **draw_back_key(surface, key)**: Draws back key.\n- **draw_uppercase_key(surface, key)**: Draw uppercase switch key.\n- **draw_special_char_key(surface, key)**: Draw special character switch key.\n\n\n## Getting/Setting data\n\nSeveral information can be retrieved from the keyboard:\n\n```python\nkeyboard = VKeyboard(...)\n\n# Get a pygame.Rect object in which the keyboard is included.\nkeyboard.get_rect()\n\n# Get the current text.\nkeyboard.get_text()\n\n# Set the current text (clear the existing one).\nkeyboard.set_text(\"Hello world!\")\n\n# Return True if the keyboard is enabled (thus displayed at screen).\nkeyboard.is_enabled()\n\n# Disable and hide the keyboard (keyboard.update() and keyboard.draw() have no effect).\nkeyboard.disable()\n```\n\n## Run examples\n\nSeveral examples are provided with the **pygame_vkeyboard** library.\nTo run the examples, simply execute these commands in a terminal:\n\n```bash\npython -m pygame_vkeyboard.examples.azerty\npython -m pygame_vkeyboard.examples.numeric\npython -m pygame_vkeyboard.examples.textinput\n```\n\n## Contributing\n\nIf you develop you own renderer please share it ! I will keep a collection of rendering class in this repository.\nDon't hesitate to report bug, feedback, suggestion into the repository issues section.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://pypi.org/project/pygame-vkeyboard/#files", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Faylixe/pygame-vkeyboard", "keywords": "pygame,keyboard", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "pygame-vkeyboard", "package_url": "https://pypi.org/project/pygame-vkeyboard/", "platform": "", "project_url": "https://pypi.org/project/pygame-vkeyboard/", "project_urls": {"Download": "https://pypi.org/project/pygame-vkeyboard/#files", "Homepage": "https://github.com/Faylixe/pygame-vkeyboard"}, "release_url": "https://pypi.org/project/pygame-vkeyboard/2.0.5/", "requires_dist": ["pygame"], "requires_python": ">=2.7", "summary": "Visual", "version": "2.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pygame-vkeyboard</h1>\n<p><a href=\"https://github.com/Faylixe/pygame_vkeyboard/actions\" rel=\"nofollow\"><img alt=\"Python package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2575059892818cb6cb16db3b9772320e8e5b5c4b/68747470733a2f2f6769746875622e636f6d2f4661796c6978652f707967616d655f766b6579626f6172642f776f726b666c6f77732f507974686f6e2532307061636b6167652f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://badge.fury.io/py/pygame-vkeyboard\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3551155a7948eb38575a7e8a093f365cbc6ebf64/68747470733a2f2f62616467652e667572792e696f2f70792f707967616d652d766b6579626f6172642e737667\"></a> <a href=\"https://pypi.org/project/pibooth\" rel=\"nofollow\"><img alt=\"PyPI downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e8f22fc2f4bd84199c10dc933c1053d35561c8f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707967616d652d766b6579626f6172643f636f6c6f723d707572706c65\"></a></p>\n<p>Visual keyboard for Pygame engine. Aims to be easy to use as highly customizable as well.</p>\n<div>\n    <table>\n    <tr>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/33a82907e54291e7ba4692372af96208c95aa2c7/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4661796c6978652f707967616d655f766b6579626f6172642f6d61737465722f73637265656e73686f742f766b6579626f6172645f617a657274792e706e67\">\n        </td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6dc721ebce0528b6c6074e7ea139354d9c6da57f/68747470733a2f2f6769746875622e636f6d2f4661796c6978652f707967616d652d766b6579626f6172642f626c6f622f6d61737465722f73637265656e73686f742f766b6579626f6172645f6e756d657269632e6769663f7261773d74727565\">\n        </td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7f98345ecfb3938cbc94bdc70d32724eac40593/68747470733a2f2f6769746875622e636f6d2f4661796c6978652f707967616d652d766b6579626f6172642f626c6f622f6d61737465722f73637265656e73686f742f766b6579626f6172645f74657874696e7075742e6769663f7261773d74727565\">\n        </td>\n    </tr>\n    </table>\n</div>\n<h2>Install</h2>\n<pre>pip install pygame-vkeyboard\n</pre>\n<h2>Basic usage</h2>\n<p><code>VKeyboard</code> only require a pygame surface to be displayed on and a text consumer function, as in the following example :</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pygame_vkeyboard</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"c1\"># Initializes your window object or surface your want</span>\n<span class=\"c1\"># vkeyboard to be displayed on top of.</span>\n<span class=\"n\">surface</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">consumer</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Current text : </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">text</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Initializes and activates vkeyboard</span>\n<span class=\"n\">layout</span> <span class=\"o\">=</span> <span class=\"n\">VKeyboardLayout</span><span class=\"p\">(</span><span class=\"n\">VKeyboardLayout</span><span class=\"o\">.</span><span class=\"n\">AZERTY</span><span class=\"p\">)</span>\n<span class=\"n\">keyboard</span> <span class=\"o\">=</span> <span class=\"n\">VKeyboard</span><span class=\"p\">(</span><span class=\"n\">surface</span><span class=\"p\">,</span> <span class=\"n\">consumer</span><span class=\"p\">,</span> <span class=\"n\">layout</span><span class=\"p\">)</span>\n</pre>\n<p>The keyboard has the following optional parameters:</p>\n<ul>\n<li><strong>show_text</strong>: display a text bar with the current text</li>\n<li><strong>renderer</strong> : define a custom renderer (see chapter below)</li>\n<li><strong>special_char_layout</strong>: define a custom layout for special characters</li>\n<li><strong>joystick_navigation</strong>: enable navigation using a joystick</li>\n</ul>\n<h2>Event management</h2>\n<p>A <code>VKeyboard</code> object handles the following pygame event :</p>\n<ul>\n<li><strong>MOUSEBUTTONDOWN</strong></li>\n<li><strong>MOUSEBUTTONUP</strong></li>\n<li><strong>KEYDOWN</strong></li>\n<li><strong>KEYUP</strong></li>\n<li><strong>JOYHATMOTION</strong></li>\n<li><strong>JOYBUTTONDOWN</strong></li>\n<li><strong>JOYBUTTONUP</strong></li>\n</ul>\n<p>In order to process those events, keyboard instance event handling method should be called like in the following example:</p>\n<pre><span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n    <span class=\"n\">events</span> <span class=\"o\">=</span> <span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Update internal variables</span>\n    <span class=\"n\">keyboard</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">events</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Draw the keyboard</span>\n    <span class=\"n\">keyboard</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"n\">surface</span><span class=\"p\">)</span>\n\n    <span class=\"c1\">#</span>\n    <span class=\"c1\"># Perform other tasks here</span>\n    <span class=\"c1\">#</span>\n\n    <span class=\"c1\"># Update the display</span>\n    <span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">flip</span><span class=\"p\">()</span>\n</pre>\n<p>It will update key state accordingly as the keyboard buffer as well.\nThe buffer modification will be notified through the keyboard text consumer function.</p>\n<p>The global performances can be improved avoiding to flip the entire display\nat each loop by using the <code>pygame.display.update()</code> function.</p>\n<pre><span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># Draw the keyboard</span>\n    <span class=\"n\">rects</span> <span class=\"o\">=</span> <span class=\"n\">keyboard</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"n\">surface</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Update only the dirty rectangles of the display</span>\n    <span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">rects</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Note:</strong> the <code>surface</code> parameter of the <code>draw()</code> method is optional, it is used to clear/hide the keyboard when it is necessary and may be mandatory if the surface has changed.</p>\n<h2>Customize layout</h2>\n<p>The keyboard layout is the model that indicates keys are displayed and how they are dispatched\nacross the keyboard space. It consists in a <code>VKeyboardLayout</code> object which is built using list of string,\neach string corresponding to a keyboard key row. <code>VkeyboardLayout</code> constructor signature is defined as following :</p>\n<pre><span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">key_size</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">allow_uppercase</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">allow_special_chars</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">allow_space</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>If the <strong>key_size</strong> parameter is not provided, it will be computed dynamically regarding of the target\nsurface the keyboard will be rendered into.</p>\n<p>In order to only display a numerical <code>Vkeyboard</code> for example, you can use a custom layout like this :</p>\n<pre><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'123'</span><span class=\"p\">,</span> <span class=\"s1\">'456'</span><span class=\"p\">,</span> <span class=\"s1\">'789'</span><span class=\"p\">,</span> <span class=\"s1\">'0'</span><span class=\"p\">]</span>\n<span class=\"n\">layout</span> <span class=\"o\">=</span> <span class=\"n\">VKeyboardLayout</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n</pre>\n<h2>Custom rendering using VKeyboardRenderer</h2>\n<p>If you want to customize keyboard rendering you could provide a <code>VKeyboardRenderer</code> instance at <code>VKeyboard</code>construction.</p>\n<pre><span class=\"n\">keyboard</span> <span class=\"o\">=</span> <span class=\"n\">VKeyboard</span><span class=\"p\">(</span><span class=\"n\">surface</span><span class=\"p\">,</span> <span class=\"n\">consumer</span><span class=\"p\">,</span> <span class=\"n\">layout</span><span class=\"p\">,</span> <span class=\"n\">renderer</span><span class=\"o\">=</span><span class=\"n\">VKeyboardRenderer</span><span class=\"o\">.</span><span class=\"n\">DARK</span><span class=\"p\">)</span>\n</pre>\n<p>Here is the list of default renderers provided with <code>pygame-vkeyboard</code>:</p>\n<ul>\n<li>VKeyboardRenderer.DEFAULT</li>\n<li>VKeyboardRenderer.DARK</li>\n</ul>\n<p>A custom <code>VKeyboardRenderer</code> can be built using following constructor :</p>\n<pre><span class=\"n\">renderer</span> <span class=\"o\">=</span> <span class=\"n\">VKeyboardRenderer</span><span class=\"p\">(</span>\n    <span class=\"c1\"># Key font name/path.</span>\n    <span class=\"s1\">'arial'</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Text color for key and text box (one per state: released, pressed).</span>\n    <span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)),</span>\n    <span class=\"c1\"># Text box cursor color.</span>\n    <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n    <span class=\"c1\"># Color to highlight the selected key.</span>\n    <span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">98</span><span class=\"p\">),</span>\n    <span class=\"c1\"># Keyboard background color.</span>\n    <span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">),</span>\n    <span class=\"c1\"># Key background color (one per state, as for the text color).</span>\n    <span class=\"p\">((</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)),</span>\n    <span class=\"c1\"># Text input background color.</span>\n    <span class=\"p\">(</span><span class=\"mi\">220</span><span class=\"p\">,</span> <span class=\"mi\">220</span><span class=\"p\">,</span> <span class=\"mi\">220</span><span class=\"p\">),</span>\n    <span class=\"c1\"># Optional special key text color (one per state, as for the text color).</span>\n    <span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">250</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)),</span>\n    <span class=\"c1\"># Optional special key background color (one per state, as for the text color).</span>\n    <span class=\"p\">((</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)),</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Please note that the default renderer implementation require a unicode font.</p>\n<p>You can also create your own renderer. Just override <code>VKeyboardRenderer</code>class and override any of the following methods :</p>\n<ul>\n<li><strong>draw_background(surface)</strong>: Draws the background of the keyboard.</li>\n<li><strong>draw_text(surface, text)</strong>: Draws the text of the text input box.</li>\n<li><strong>draw_cursor(surface, cursor)</strong>: Draws the cursor of the text input box.</li>\n<li><strong>draw_character_key(surface, key, special=False)</strong>: Draws a key based on character value.</li>\n<li><strong>draw_space_key(surface, key)</strong>: Draws space bar.</li>\n<li><strong>draw_back_key(surface, key)</strong>: Draws back key.</li>\n<li><strong>draw_uppercase_key(surface, key)</strong>: Draw uppercase switch key.</li>\n<li><strong>draw_special_char_key(surface, key)</strong>: Draw special character switch key.</li>\n</ul>\n<h2>Getting/Setting data</h2>\n<p>Several information can be retrieved from the keyboard:</p>\n<pre><span class=\"n\">keyboard</span> <span class=\"o\">=</span> <span class=\"n\">VKeyboard</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get a pygame.Rect object in which the keyboard is included.</span>\n<span class=\"n\">keyboard</span><span class=\"o\">.</span><span class=\"n\">get_rect</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Get the current text.</span>\n<span class=\"n\">keyboard</span><span class=\"o\">.</span><span class=\"n\">get_text</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Set the current text (clear the existing one).</span>\n<span class=\"n\">keyboard</span><span class=\"o\">.</span><span class=\"n\">set_text</span><span class=\"p\">(</span><span class=\"s2\">\"Hello world!\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Return True if the keyboard is enabled (thus displayed at screen).</span>\n<span class=\"n\">keyboard</span><span class=\"o\">.</span><span class=\"n\">is_enabled</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Disable and hide the keyboard (keyboard.update() and keyboard.draw() have no effect).</span>\n<span class=\"n\">keyboard</span><span class=\"o\">.</span><span class=\"n\">disable</span><span class=\"p\">()</span>\n</pre>\n<h2>Run examples</h2>\n<p>Several examples are provided with the <strong>pygame_vkeyboard</strong> library.\nTo run the examples, simply execute these commands in a terminal:</p>\n<pre>python -m pygame_vkeyboard.examples.azerty\npython -m pygame_vkeyboard.examples.numeric\npython -m pygame_vkeyboard.examples.textinput\n</pre>\n<h2>Contributing</h2>\n<p>If you develop you own renderer please share it ! I will keep a collection of rendering class in this repository.\nDon't hesitate to report bug, feedback, suggestion into the repository issues section.</p>\n\n          </div>"}, "last_serial": 7152861, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9e041c7e2da888885835491f926a20dc", "sha256": "7a5dda27b9182c52c6e25437ff76cbb5439b0a9348579b545184e2fb90864fe6"}, "downloads": -1, "filename": "pygame_vkeyboard-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9e041c7e2da888885835491f926a20dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 368355, "upload_time": "2017-02-12T17:27:11", "upload_time_iso_8601": "2017-02-12T17:27:11.995345Z", "url": "https://files.pythonhosted.org/packages/a8/7a/2fc0c82026faed093c4ea922b88503a83262d9fe93ac7209c72b2eb7092c/pygame_vkeyboard-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "a8e16a849cf4232698e68540a409d253", "sha256": "88b7b670409aa795297ff419bfec0d3458902d45c95d8dc48cb4ffc3ad626776"}, "downloads": -1, "filename": "pygame_vkeyboard-2.0.0.tar.gz", "has_sig": false, "md5_digest": "a8e16a849cf4232698e68540a409d253", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 368551, "upload_time": "2020-04-15T10:05:13", "upload_time_iso_8601": "2020-04-15T10:05:13.149286Z", "url": "https://files.pythonhosted.org/packages/d0/1d/365d0dcbe507693596e0b672d5dbefe0d5283d0f84c7cc4377c6958613f3/pygame_vkeyboard-2.0.0.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "16dd552cca96f5cd97c2e481d18043b0", "sha256": "b26098cfa7f0914fb0a4bf020b54ae6773fb082384158b81b3ea3623b6e9e71e"}, "downloads": -1, "filename": "pygame-vkeyboard-2.0.2.tar.gz", "has_sig": false, "md5_digest": "16dd552cca96f5cd97c2e481d18043b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 15051, "upload_time": "2020-04-25T14:45:06", "upload_time_iso_8601": "2020-04-25T14:45:06.748152Z", "url": "https://files.pythonhosted.org/packages/ef/01/ccd25684f754031acc6e3073f05284bdbc31ef2f73a730cca969428eb31e/pygame-vkeyboard-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "9b6503e023561f61ec6e0b81ea9bbd7c", "sha256": "bf17282f839eb1606b65996869ac5e2d9af26dcfbc552b32c75bfdb3ace30a53"}, "downloads": -1, "filename": "pygame_vkeyboard-2.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9b6503e023561f61ec6e0b81ea9bbd7c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 384569, "upload_time": "2020-04-26T13:12:36", "upload_time_iso_8601": "2020-04-26T13:12:36.149586Z", "url": "https://files.pythonhosted.org/packages/fe/c2/dc6aa89022b578717dc5d29a8b86d28546dbb7a37d2a16c614c69efea312/pygame_vkeyboard-2.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89a1087840275bc1a1b1621232633d75", "sha256": "e3601de6855a70347ad7c232fa98d1998ef30f66f832e00894d81a1fbc86fbb5"}, "downloads": -1, "filename": "pygame-vkeyboard-2.0.3.tar.gz", "has_sig": false, "md5_digest": "89a1087840275bc1a1b1621232633d75", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 16973, "upload_time": "2020-04-26T13:12:37", "upload_time_iso_8601": "2020-04-26T13:12:37.133304Z", "url": "https://files.pythonhosted.org/packages/0c/f2/8cee703f5d5b958b50d98c140904b1b060bb7010d0e819cee879216961b7/pygame-vkeyboard-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "c3f802d1d7053da9eb185892a3ea7250", "sha256": "687b12963ff7c5159ac44f473fe07f0c912021dd63ec9ecc13ab6a0810dfcd43"}, "downloads": -1, "filename": "pygame_vkeyboard-2.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c3f802d1d7053da9eb185892a3ea7250", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 388141, "upload_time": "2020-05-01T15:14:14", "upload_time_iso_8601": "2020-05-01T15:14:14.340301Z", "url": "https://files.pythonhosted.org/packages/91/8a/4709baaaa7d4c00c11cbf6b6e39f301a56cd76d1c8a630dff4717e655a39/pygame_vkeyboard-2.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c40c265c2fe09d734d2070fe7f9ec3d", "sha256": "18bb89465ab43517ed50d188d90e83266c60425f4f7ab65ae727416d4f8ab221"}, "downloads": -1, "filename": "pygame-vkeyboard-2.0.4.tar.gz", "has_sig": false, "md5_digest": "5c40c265c2fe09d734d2070fe7f9ec3d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 387970, "upload_time": "2020-05-01T15:14:15", "upload_time_iso_8601": "2020-05-01T15:14:15.543713Z", "url": "https://files.pythonhosted.org/packages/65/58/a5cbe96bccdc1ed4ecb08646843119b99b13568cbbb56d2f7135a755d880/pygame-vkeyboard-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "9272c323a63051bb2009509910b6d2f1", "sha256": "a21b938cd194d342a345dfae6624946349f631b6b6c75a86ae825ce9018ec247"}, "downloads": -1, "filename": "pygame_vkeyboard-2.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9272c323a63051bb2009509910b6d2f1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 388302, "upload_time": "2020-05-02T18:36:50", "upload_time_iso_8601": "2020-05-02T18:36:50.075237Z", "url": "https://files.pythonhosted.org/packages/92/ad/7450a8eee480688d54c1e44d7f7639aa357fd08b7dba68a268a4a1e5cb98/pygame_vkeyboard-2.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d95d028712b56bf3463d50f2c41d0eb0", "sha256": "141c0d0d408276ecc0c6f4865d5440e242a38c269620ed916483d2d3aa74d31b"}, "downloads": -1, "filename": "pygame-vkeyboard-2.0.5.tar.gz", "has_sig": false, "md5_digest": "d95d028712b56bf3463d50f2c41d0eb0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 388243, "upload_time": "2020-05-02T18:36:51", "upload_time_iso_8601": "2020-05-02T18:36:51.360368Z", "url": "https://files.pythonhosted.org/packages/42/cf/5997b4dad47b8197facb18356fbd35708871020449e06f4ac6beb438364d/pygame-vkeyboard-2.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9272c323a63051bb2009509910b6d2f1", "sha256": "a21b938cd194d342a345dfae6624946349f631b6b6c75a86ae825ce9018ec247"}, "downloads": -1, "filename": "pygame_vkeyboard-2.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9272c323a63051bb2009509910b6d2f1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 388302, "upload_time": "2020-05-02T18:36:50", "upload_time_iso_8601": "2020-05-02T18:36:50.075237Z", "url": "https://files.pythonhosted.org/packages/92/ad/7450a8eee480688d54c1e44d7f7639aa357fd08b7dba68a268a4a1e5cb98/pygame_vkeyboard-2.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d95d028712b56bf3463d50f2c41d0eb0", "sha256": "141c0d0d408276ecc0c6f4865d5440e242a38c269620ed916483d2d3aa74d31b"}, "downloads": -1, "filename": "pygame-vkeyboard-2.0.5.tar.gz", "has_sig": false, "md5_digest": "d95d028712b56bf3463d50f2c41d0eb0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 388243, "upload_time": "2020-05-02T18:36:51", "upload_time_iso_8601": "2020-05-02T18:36:51.360368Z", "url": "https://files.pythonhosted.org/packages/42/cf/5997b4dad47b8197facb18356fbd35708871020449e06f4ac6beb438364d/pygame-vkeyboard-2.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:18 2020"}