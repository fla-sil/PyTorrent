{"info": {"author": "upgradehq", "author_email": "noreply@example.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# osuplaylist\nExtract all osu songs, collection,run a regex search in .osu tag line , apply daterange .    \nExport audio to directory/to ingame collection or create m3u8 playlist.     \nImport your songs in .mp3 format to osu  \nCreate loops for each song in collection/regex results\n# Installation \nPython version >= 3.6  \nDownload latest release [here](https://github.com/HQupgradeHQ/osu-playlist/releases)  \n`pip install osuplaylist`\n# Limitations\n- creation of ingame collection requires to restart client\n- importing your mp3 requires restart & refresh `F5` & ascii name\n- daterange will not work properly  on linux\n## Commands\n### export all songs as .m3u8 playlist, may take a while\n  `osuplaylist`\n### apply daterange (optional)\n  `osuplaylist --date_range \"daterange\"`,daterange format:Year.month.day example: >2020.1.1 older than, 2020.1.1:2020.1.24 in this range \n### export collection. Name might be case insensitive or with typos \n `osuplaylist --collection \"name of collection\"`\n### export to ingame collection. Name will be with current timestamp. (optional)\n `osuplaylist --update_db \"name of collection\"` \n### run a regex search on tags provided from .osu file \n`osuplaylist --regtag \"regex\"`\n### run an inversed regex search on tags (optional)\n  `osuplaylist -r \"regex\" -i ` \n###  provide path to export audio.(optional) if used without arg - all songs\n  `osuplaylist --to_dir \"path\"`\n### import mp3s \n   `osuplaylist -m \"E:Installation\\music\" -n \"in_game_collection_name\"`, name _ascii only_  and you need manually click all mp3s, search mp3 in osu,and click, it(collections) will not work\n### create loops , ONLY regtag and collections\n   `osuplaylist --collection \"name of collection\" --loopify`\n### info\n `osuplaylist --help` \n\n## Examples \n### Example  with [mpv](https://mpv.io/):\n  `mpv --playlist=playlist.m3u8 --shuffle --volume 35` \n### Example regex search + inverse + to directory:\n `osuplaylist -r \"(azer|step)\" -i -d \"E:/music/osuplaylist\"`\n\n`-r \"(azer|step)\"` will match all songs which contain azer or step\n\n`-i` (optional) return an inverted result , all songs which NOT contain azer or step\n\n`-d` (optional) export .mp3 to directory E:/music/osuplaylist\n\n# Using osuplaylist.py as a library\n```python\nimport osuplaylist\nfrom osuplaylist import osudict, names, namedict\n\nprint(len(names))\n# this will filter taglines matching azer or step \nfirst_search = osuplaylist.filter_tags(osudict, regtag=\"(azer|step\") \nprint(first_search)\n# this will filter taglines from first_search matching drumstep \nsecond_search = osuplaylist.filter_tags(\n    osudict, regtag=\"drumstep\", list_of_song_names=first_search\n)\nprint(second_search)\n# export to dir\nosuplaylist.export_to_dir(second_search)\n```\n# Contribute\nCreate issue with bug or feature requests .\nPull requests regarding things which aren't directly related to the program will not be merged.\nFor example, pull requests related to README.md will not be merged, you can open an issue instead.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hqupgradehq/osuplaylist", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "osuplaylist", "package_url": "https://pypi.org/project/osuplaylist/", "platform": "", "project_url": "https://pypi.org/project/osuplaylist/", "project_urls": {"Homepage": "https://github.com/hqupgradehq/osuplaylist"}, "release_url": "https://pypi.org/project/osuplaylist/0.2.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Export audio to directory/to ingame collection or create m3u8 playlist", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>osuplaylist</h1>\n<p>Extract all osu songs, collection,run a regex search in .osu tag line , apply daterange .<br>\nExport audio to directory/to ingame collection or create m3u8 playlist.<br>\nImport your songs in .mp3 format to osu<br>\nCreate loops for each song in collection/regex results</p>\n<h1>Installation</h1>\n<p>Python version &gt;= 3.6<br>\nDownload latest release <a href=\"https://github.com/HQupgradeHQ/osu-playlist/releases\" rel=\"nofollow\">here</a><br>\n<code>pip install osuplaylist</code></p>\n<h1>Limitations</h1>\n<ul>\n<li>creation of ingame collection requires to restart client</li>\n<li>importing your mp3 requires restart &amp; refresh <code>F5</code> &amp; ascii name</li>\n<li>daterange will not work properly  on linux</li>\n</ul>\n<h2>Commands</h2>\n<h3>export all songs as .m3u8 playlist, may take a while</h3>\n<p><code>osuplaylist</code></p>\n<h3>apply daterange (optional)</h3>\n<p><code>osuplaylist --date_range \"daterange\"</code>,daterange format:Year.month.day example: &gt;2020.1.1 older than, 2020.1.1:2020.1.24 in this range</p>\n<h3>export collection. Name might be case insensitive or with typos</h3>\n<p><code>osuplaylist --collection \"name of collection\"</code></p>\n<h3>export to ingame collection. Name will be with current timestamp. (optional)</h3>\n<p><code>osuplaylist --update_db \"name of collection\"</code></p>\n<h3>run a regex search on tags provided from .osu file</h3>\n<p><code>osuplaylist --regtag \"regex\"</code></p>\n<h3>run an inversed regex search on tags (optional)</h3>\n<p><code>osuplaylist -r \"regex\" -i</code></p>\n<h3>provide path to export audio.(optional) if used without arg - all songs</h3>\n<p><code>osuplaylist --to_dir \"path\"</code></p>\n<h3>import mp3s</h3>\n<p><code>osuplaylist -m \"E:Installation\\music\" -n \"in_game_collection_name\"</code>, name <em>ascii only</em>  and you need manually click all mp3s, search mp3 in osu,and click, it(collections) will not work</p>\n<h3>create loops , ONLY regtag and collections</h3>\n<p><code>osuplaylist --collection \"name of collection\" --loopify</code></p>\n<h3>info</h3>\n<p><code>osuplaylist --help</code></p>\n<h2>Examples</h2>\n<h3>Example  with <a href=\"https://mpv.io/\" rel=\"nofollow\">mpv</a>:</h3>\n<p><code>mpv --playlist=playlist.m3u8 --shuffle --volume 35</code></p>\n<h3>Example regex search + inverse + to directory:</h3>\n<p><code>osuplaylist -r \"(azer|step)\" -i -d \"E:/music/osuplaylist\"</code></p>\n<p><code>-r \"(azer|step)\"</code> will match all songs which contain azer or step</p>\n<p><code>-i</code> (optional) return an inverted result , all songs which NOT contain azer or step</p>\n<p><code>-d</code> (optional) export .mp3 to directory E:/music/osuplaylist</p>\n<h1>Using osuplaylist.py as a library</h1>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">osuplaylist</span>\n<span class=\"kn\">from</span> <span class=\"nn\">osuplaylist</span> <span class=\"kn\">import</span> <span class=\"n\">osudict</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">namedict</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">))</span>\n<span class=\"c1\"># this will filter taglines matching azer or step </span>\n<span class=\"n\">first_search</span> <span class=\"o\">=</span> <span class=\"n\">osuplaylist</span><span class=\"o\">.</span><span class=\"n\">filter_tags</span><span class=\"p\">(</span><span class=\"n\">osudict</span><span class=\"p\">,</span> <span class=\"n\">regtag</span><span class=\"o\">=</span><span class=\"s2\">\"(azer|step\"</span><span class=\"p\">)</span> \n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">first_search</span><span class=\"p\">)</span>\n<span class=\"c1\"># this will filter taglines from first_search matching drumstep </span>\n<span class=\"n\">second_search</span> <span class=\"o\">=</span> <span class=\"n\">osuplaylist</span><span class=\"o\">.</span><span class=\"n\">filter_tags</span><span class=\"p\">(</span>\n    <span class=\"n\">osudict</span><span class=\"p\">,</span> <span class=\"n\">regtag</span><span class=\"o\">=</span><span class=\"s2\">\"drumstep\"</span><span class=\"p\">,</span> <span class=\"n\">list_of_song_names</span><span class=\"o\">=</span><span class=\"n\">first_search</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">second_search</span><span class=\"p\">)</span>\n<span class=\"c1\"># export to dir</span>\n<span class=\"n\">osuplaylist</span><span class=\"o\">.</span><span class=\"n\">export_to_dir</span><span class=\"p\">(</span><span class=\"n\">second_search</span><span class=\"p\">)</span>\n</pre>\n<h1>Contribute</h1>\n<p>Create issue with bug or feature requests .\nPull requests regarding things which aren't directly related to the program will not be merged.\nFor example, pull requests related to README.md will not be merged, you can open an issue instead.</p>\n\n          </div>"}, "last_serial": 7066071, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "6ac78d8f2c48657a0d3f87cc37d38f2f", "sha256": "ec4d4f18cafa4afbc3f1feea50357bca09cacd93d39c41eb73e519be855defe6"}, "downloads": -1, "filename": "osuplaylist-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6ac78d8f2c48657a0d3f87cc37d38f2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8782, "upload_time": "2020-04-16T07:18:56", "upload_time_iso_8601": "2020-04-16T07:18:56.736573Z", "url": "https://files.pythonhosted.org/packages/63/4f/467db6eae121551cef6793dd43218182297f64845a3e5e35996022e45b34/osuplaylist-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "972a6e2c1ca28d6dbdceaf38a03fbea7", "sha256": "d770eacd38b7a3ff828f77e620e85287ad409db87c3ccbc5f98f1eae37d8889d"}, "downloads": -1, "filename": "osuplaylist-0.2.0.tar.gz", "has_sig": false, "md5_digest": "972a6e2c1ca28d6dbdceaf38a03fbea7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8780, "upload_time": "2020-04-16T07:18:58", "upload_time_iso_8601": "2020-04-16T07:18:58.499868Z", "url": "https://files.pythonhosted.org/packages/5f/d7/74dd7768e1d11595502d7e1065359ba90e08aca1b05f2982d16ced3437dd/osuplaylist-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "bb64adfe0113217583ede8096269fd85", "sha256": "052b3128e82c74fda9638e9ee1e5cf59640764f957f85de4b1b2cd6c22436480"}, "downloads": -1, "filename": "osuplaylist-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bb64adfe0113217583ede8096269fd85", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9788, "upload_time": "2020-04-21T07:30:28", "upload_time_iso_8601": "2020-04-21T07:30:28.866236Z", "url": "https://files.pythonhosted.org/packages/9d/9f/c2a4df30e36d997988a7a27065918aedeba404341cfc49a04605944d79d1/osuplaylist-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "985a7b1a8e03df32c112f5b7f4991f65", "sha256": "f191a4e1bacd4e5b631e48318cec427c3acf196b798e3ed23ce6b5c39c085038"}, "downloads": -1, "filename": "osuplaylist-0.2.1.tar.gz", "has_sig": false, "md5_digest": "985a7b1a8e03df32c112f5b7f4991f65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8940, "upload_time": "2020-04-21T07:30:29", "upload_time_iso_8601": "2020-04-21T07:30:29.832930Z", "url": "https://files.pythonhosted.org/packages/11/03/33fdbf70453d760a6ec24d867823bd156ec99926b5c950da9ca020738a2e/osuplaylist-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bb64adfe0113217583ede8096269fd85", "sha256": "052b3128e82c74fda9638e9ee1e5cf59640764f957f85de4b1b2cd6c22436480"}, "downloads": -1, "filename": "osuplaylist-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bb64adfe0113217583ede8096269fd85", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9788, "upload_time": "2020-04-21T07:30:28", "upload_time_iso_8601": "2020-04-21T07:30:28.866236Z", "url": "https://files.pythonhosted.org/packages/9d/9f/c2a4df30e36d997988a7a27065918aedeba404341cfc49a04605944d79d1/osuplaylist-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "985a7b1a8e03df32c112f5b7f4991f65", "sha256": "f191a4e1bacd4e5b631e48318cec427c3acf196b798e3ed23ce6b5c39c085038"}, "downloads": -1, "filename": "osuplaylist-0.2.1.tar.gz", "has_sig": false, "md5_digest": "985a7b1a8e03df32c112f5b7f4991f65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8940, "upload_time": "2020-04-21T07:30:29", "upload_time_iso_8601": "2020-04-21T07:30:29.832930Z", "url": "https://files.pythonhosted.org/packages/11/03/33fdbf70453d760a6ec24d867823bd156ec99926b5c950da9ca020738a2e/osuplaylist-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:55 2020"}