{"info": {"author": "Sergey Kolesnikov", "author_email": "scitator@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Image Recognition", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "\n<div align=\"center\">\n\n[![Catalyst logo](https://raw.githubusercontent.com/catalyst-team/catalyst-pics/master/pics/catalyst_logo.png)](https://github.com/catalyst-team/catalyst)\n\n**Accelerated DL R&D**\n\n[![CodeFactor](https://www.codefactor.io/repository/github/catalyst-team/catalyst/badge)](https://www.codefactor.io/repository/github/catalyst-team/catalyst)\n[![Pipi version](https://img.shields.io/pypi/v/catalyst.svg)](https://pypi.org/project/catalyst/)\n[![Docs](https://img.shields.io/badge/dynamic/json.svg?label=docs&url=https%3A%2F%2Fpypi.org%2Fpypi%2Fcatalyst%2Fjson&query=%24.info.version&colorB=brightgreen&prefix=v)](https://catalyst-team.github.io/catalyst/index.html)\n[![PyPI Status](https://pepy.tech/badge/catalyst)](https://pepy.tech/project/catalyst)\n\n[![Twitter](https://img.shields.io/badge/news-twitter-499feb)](https://twitter.com/catalyst_core)\n[![Telegram](https://img.shields.io/badge/channel-telegram-blue)](https://t.me/catalyst_team)\n[![Slack](https://img.shields.io/badge/Catalyst-slack-success)](https://join.slack.com/t/catalyst-team-core/shared_invite/zt-d9miirnn-z86oKDzFMKlMG4fgFdZafw)\n[![Github contributors](https://img.shields.io/github/contributors/catalyst-team/catalyst.svg?logo=github&logoColor=white)](https://github.com/catalyst-team/catalyst/graphs/contributors)\n\n![codestyle](https://github.com/catalyst-team/catalyst/workflows/codestyle/badge.svg?branch=master&event=push)\n![catalyst](https://github.com/catalyst-team/catalyst/workflows/catalyst/badge.svg?branch=master&event=push)\n![catalyst-cv](https://github.com/catalyst-team/catalyst/workflows/catalyst-cv/badge.svg?branch=master&event=push)\n![catalyst-nlp](https://github.com/catalyst-team/catalyst/workflows/catalyst-nlp/badge.svg?branch=master&event=push)\n[![Build Status](http://66.248.205.49:8111/app/rest/builds/buildType:id:Catalyst_Deploy/statusIcon.svg)](http://66.248.205.49:8111/project.html?projectId=Catalyst&tab=projectOverview&guest=1)\n</div>\n\nPyTorch framework for Deep Learning research and development.\nIt was developed with a focus on reproducibility,\nfast experimentation and code/ideas reusing.\nBeing able to research/develop something new,\nrather than write another regular train loop. <br/>\nBreak the cycle - use the Catalyst!\n\nProject [manifest](https://github.com/catalyst-team/catalyst/blob/master/MANIFEST.md). Part of [PyTorch Ecosystem](https://pytorch.org/ecosystem/). Part of [Catalyst Ecosystem](https://docs.google.com/presentation/d/1D-yhVOg6OXzjo9K_-IS5vSHLPIUxp1PEkFGnpRcNCNU/edit?usp=sharing):\n- [Alchemy](https://github.com/catalyst-team/alchemy) - Experiments logging & visualization\n- [Catalyst](https://github.com/catalyst-team/catalyst) - Accelerated Deep Learning Research and Development\n- [Reaction](https://github.com/catalyst-team/reaction) - Convenient Deep Learning models serving\n\n[Catalyst at AI Landscape](https://landscape.lfai.foundation/selected=catalyst).\n\n----\n\n## Getting started\n\n```bash\npip install -U catalyst\n```\n\n```python\nimport os\nimport torch\nfrom torch.nn import functional as F\nfrom torch.utils.data import DataLoader\nfrom torchvision.datasets import MNIST\nfrom torchvision.transforms import ToTensor\nfrom catalyst import dl\nfrom catalyst.utils import metrics\n\nmodel = torch.nn.Linear(28 * 28, 10)\noptimizer = torch.optim.Adam(model.parameters(), lr=0.02)\n\nloaders = {\n    \"train\": DataLoader(MNIST(os.getcwd(), train=True, download=True, transform=ToTensor()), batch_size=32),\n    \"valid\": DataLoader(MNIST(os.getcwd(), train=False, download=True, transform=ToTensor()), batch_size=32),\n}\n\nclass CustomRunner(dl.Runner):\n\n    def predict_batch(self, batch):\n        # model inference step\n        return self.model(batch[0].to(self.device).view(batch[0].size(0), -1))\n\n    def _handle_batch(self, batch):\n        # model train/valid step\n        x, y = batch\n        y_hat = self.model(x.view(x.size(0), -1))\n\n        loss = F.cross_entropy(y_hat, y)\n        accuracy01, accuracy03 = metrics.accuracy(y_hat, y, topk=(1, 3))\n        self.state.batch_metrics.update(\n            {\"loss\": loss, \"accuracy01\": accuracy01, \"accuracy03\": accuracy03}\n        )\n\n        if self.state.is_train_loader:\n            loss.backward()\n            self.state.optimizer.step()\n            self.state.optimizer.zero_grad()\n\nrunner = CustomRunner()\n# model training\nrunner.train(\n    model=model,\n    optimizer=optimizer,\n    loaders=loaders,\n    logdir=\"./logs\",\n    num_epochs=5,\n    verbose=True,\n    load_best_on_end=True,\n)\n# model inference\nfor prediction in runner.predict_loader(loader=loaders[\"valid\"]):\n    assert prediction.detach().cpu().numpy().shape[-1] == 10\n# model tracing\ntraced_model = runner.trace(loader=loaders[\"valid\"])\n```\n\n- [Customizing what happens in `train`](https://colab.research.google.com/drive/1T5G_OVLYHq483l80ikabXRsx_WB3rwPf?usp=sharing)\n- [Colab with ML, CV, NLP, GANs and RecSys demos](https://colab.research.google.com/github/catalyst-team/catalyst/blob/master/examples/notebooks/demo.ipynb)\n- [Minimal examples](#minimal-examples)\n- For Catalyst.RL introduction, please follow [Catalyst.RL repo](https://github.com/catalyst-team/catalyst-rl).\n\n\n## Table of Contents\n- [Overview](#overview)\n  * [Installation](#installation)\n  * [Minimal examples](#minimal-examples)\n  * [Features](#features)\n  * [Structure](#structure)\n  * [Tests](#tests)\n- [Catalyst](#catalyst)\n  * [Tutorials](#tutorials)\n  * [Guides](#guides)\n  * [Projects](#projects)\n  * [Tools and pipelines](#tools-and-pipelines)\n  * [Talks and videos](#talks-and-videos)\n- [Community](#community)\n  * [Contribution guide](#contribution-guide)\n  * [User feedback](#user-feedback)\n  * [Acknowledgments](#acknowledgments)\n  * [Trusted by](#trusted-by)\n  * [Supported by](#supported-by)\n  * [Citation](#citation)\n\n\n## Overview\nCatalyst helps you write compact\nbut full-featured Deep Learning pipelines in a few lines of code.\nYou get a training loop with metrics, early-stopping, model checkpointing\nand other features without the boilerplate.\n\n\n### Installation\n\nCommon installation:\n```bash\npip install -U catalyst\n```\n\n<details>\n<summary>Specific versions with additional requirements</summary>\n<p>\n\n```bash\npip install catalyst[ml]         # installs DL+ML based catalyst\npip install catalyst[cv]         # installs DL+CV based catalyst\npip install catalyst[nlp]        # installs DL+NLP based catalyst\npip install catalyst[ecosystem]  # installs Catalyst.Ecosystem\npip install catalyst[contrib]    # installs DL+contrib based catalyst\npip install catalyst[all]        # installs everything\n# and master version installation\npip install git+https://github.com/catalyst-team/catalyst@master --upgrade\n```\n</p>\n</details>\n\nCatalyst is compatible with: Python 3.6+. PyTorch 1.0.0+.\n\n\n### Minimal Examples\n\n<details>\n<summary>ML - Linear Regression is my profession</summary>\n<p>\n\n```python\nimport torch\nfrom torch.utils.data import DataLoader, TensorDataset\nfrom catalyst.dl import SupervisedRunner\n\n# data\nnum_samples, num_features = int(1e4), int(1e1)\nX, y = torch.rand(num_samples, num_features), torch.rand(num_samples)\ndataset = TensorDataset(X, y)\nloader = DataLoader(dataset, batch_size=32, num_workers=1)\nloaders = {\"train\": loader, \"valid\": loader}\n\n# model, criterion, optimizer, scheduler\nmodel = torch.nn.Linear(num_features, 1)\ncriterion = torch.nn.MSELoss()\noptimizer = torch.optim.Adam(model.parameters())\nscheduler = torch.optim.lr_scheduler.MultiStepLR(optimizer, [3, 6])\n\n# model training\nrunner = SupervisedRunner()\nrunner.train(\n    model=model,\n    criterion=criterion,\n    optimizer=optimizer,\n    scheduler=scheduler,\n    loaders=loaders,\n    logdir=\"./logdir\",\n    num_epochs=8,\n    verbose=True,\n)\n```\n</p>\n</details>\n\n<details>\n<summary>CV - MNIST classification one more time</summary>\n<p>\n\n```python\nimport os\nimport torch\nfrom torch.nn import functional as F\nfrom torch.utils.data import DataLoader\nfrom torchvision.datasets import MNIST\nfrom torchvision import transforms\nfrom catalyst import dl\nfrom catalyst.utils import metrics\n\nmodel = torch.nn.Linear(28 * 28, 10)\noptimizer = torch.optim.Adam(model.parameters(), lr=0.02)\n\nloaders = {\n    \"train\": DataLoader(MNIST(os.getcwd(), train=False, download=True, transform=transforms.ToTensor()), batch_size=32),\n    \"valid\": DataLoader(MNIST(os.getcwd(), train=False, download=True, transform=transforms.ToTensor()), batch_size=32),\n}\n\nclass CustomRunner(dl.Runner):\n\n    def _handle_batch(self, batch):\n        x, y = batch\n        y_hat = self.model(x.view(x.size(0), -1))\n\n        loss = F.cross_entropy(y_hat, y)\n        accuracy01, accuracy03, accuracy05 = metrics.accuracy(y_hat, y, topk=(1, 3, 5))\n        self.state.batch_metrics = {\n            \"loss\": loss,\n            \"accuracy01\": accuracy01,\n            \"accuracy03\": accuracy03,\n            \"accuracy05\": accuracy05,\n        }\n\n        if self.state.is_train_loader:\n            loss.backward()\n            self.state.optimizer.step()\n            self.state.optimizer.zero_grad()\n\nrunner = CustomRunner()\nrunner.train(\n    model=model, \n    optimizer=optimizer, \n    loaders=loaders, \n    verbose=True,\n)\n```\n</p>\n</details>\n\n<details>\n<summary>CV - classification with AutoEncoder</summary>\n<p>\n\n```python\nimport os\nimport torch\nfrom torch import nn\nfrom torch.nn import functional as F\nfrom torch.utils.data import DataLoader\nfrom torchvision.datasets import MNIST\nfrom torchvision import transforms\nfrom catalyst import dl\nfrom catalyst.utils import metrics\n\nclass ClassifyAE(nn.Module):\n\n    def __init__(self, in_features, hid_features, out_features):\n        super().__init__()\n        self.encoder = nn.Sequential(nn.Linear(in_features, hid_features), nn.Tanh())\n        self.decoder = nn.Sequential(nn.Linear(hid_features, in_features), nn.Sigmoid())\n        self.clf = nn.Linear(hid_features, out_features)\n\n    def forward(self, x):\n        z = self.encoder(x)\n        y_hat = self.clf(z)\n        x_ = self.decoder(z)\n        return y_hat, x_\n\nmodel = ClassifyAE(28 * 28, 128, 10)\noptimizer = torch.optim.Adam(model.parameters(), lr=0.02)\n\nloaders = {\n    \"train\": DataLoader(MNIST(os.getcwd(), train=False, download=True, transform=transforms.ToTensor()), batch_size=32),\n    \"valid\": DataLoader(MNIST(os.getcwd(), train=False, download=True, transform=transforms.ToTensor()), batch_size=32),\n}\n\nclass CustomRunner(dl.Runner):\n\n    def _handle_batch(self, batch):\n        x, y = batch\n        x = x.view(x.size(0), -1)\n        y_hat, x_ = self.model(x)\n\n        loss_clf = F.cross_entropy(y_hat, y)\n        loss_ae = F.mse_loss(x_, x)\n        loss = loss_clf + loss_ae\n        accuracy01, accuracy03, accuracy05 = metrics.accuracy(y_hat, y, topk=(1, 3, 5))\n        self.state.batch_metrics = {\n            \"loss_clf\": loss_clf,\n            \"loss_ae\": loss_ae,\n            \"loss\": loss,\n            \"accuracy01\": accuracy01,\n            \"accuracy03\": accuracy03,\n            \"accuracy05\": accuracy05,\n        }\n\n        if self.state.is_train_loader:\n            loss.backward()\n            self.state.optimizer.step()\n            self.state.optimizer.zero_grad()\n\nrunner = CustomRunner()\nrunner.train(\n    model=model,\n    optimizer=optimizer,\n    loaders=loaders,\n    verbose=True,\n)\n```\n</p>\n</details>\n\n<details>\n<summary>CV - classification with Variational AutoEncoder</summary>\n<p>\n\n```python\nimport os\nimport numpy as np\nimport torch\nfrom torch import nn\nfrom torch.nn import functional as F\nfrom torch.utils.data import DataLoader\nfrom torchvision.datasets import MNIST\nfrom torchvision import transforms\nfrom catalyst import dl\nfrom catalyst.utils import metrics\n\nLOG_SCALE_MAX = 2\nLOG_SCALE_MIN = -10\n\ndef normal_sample(mu, sigma):\n    return mu + sigma * torch.randn_like(sigma)\n\ndef normal_logprob(mu, sigma, z):\n    normalization_constant = (-sigma.log() - 0.5 * np.log(2 * np.pi))\n    square_term = -0.5 * ((z - mu) / sigma)**2\n    logprob_vec = normalization_constant + square_term\n    logprob = logprob_vec.sum(1)\n    return logprob\n\nclass ClassifyVAE(torch.nn.Module):\n\n    def __init__(self, in_features, hid_features, out_features):\n        super().__init__()\n        self.encoder = torch.nn.Linear(in_features, hid_features * 2)\n        self.decoder = nn.Sequential(nn.Linear(hid_features, in_features), nn.Sigmoid())\n        self.clf = torch.nn.Linear(hid_features, out_features)\n\n    def forward(self, x, deterministic=False):\n        z = self.encoder(x)\n        bs, z_dim = z.shape\n\n        loc, log_scale = z[:, :z_dim // 2], z[:, z_dim // 2:]\n        log_scale = torch.clamp(log_scale, LOG_SCALE_MIN, LOG_SCALE_MAX)\n        scale = torch.exp(log_scale)\n        z_ = loc if deterministic else normal_sample(loc, scale)\n        z_logprob = normal_logprob(loc, scale, z_)\n        z_ = z_.view(bs, -1)\n        x_ = self.decoder(z_)\n        y_hat = self.clf(z_)\n\n        return y_hat, x_, z_logprob, loc, log_scale\n\nmodel = ClassifyVAE(28 * 28, 64, 10)\noptimizer = torch.optim.Adam(model.parameters(), lr=0.02)\n\nloaders = {\n    \"train\": DataLoader(MNIST(os.getcwd(), train=False, download=True, transform=transforms.ToTensor()), batch_size=32),\n    \"valid\": DataLoader(MNIST(os.getcwd(), train=False, download=True, transform=transforms.ToTensor()), batch_size=32),\n}\n\nclass CustomRunner(dl.Runner):\n\n    def _handle_batch(self, batch):\n        x, y = batch\n        x = x.view(x.size(0), -1)\n        y_hat, x_, z_logprob, loc, log_scale = self.model(x)\n\n        loss_clf = F.cross_entropy(y_hat, y)\n        loss_ae = F.mse_loss(x_, x)\n        loss_kld = -0.5 * torch.mean(1 + log_scale - loc.pow(2) - log_scale.exp()) * 0.1\n        loss_logprob = torch.mean(z_logprob) * 0.01\n        loss = loss_clf + loss_ae + loss_kld + loss_logprob\n        accuracy01, accuracy03, accuracy05 = metrics.accuracy(y_hat, y, topk=(1, 3, 5))\n        self.state.batch_metrics = {\n            \"loss_clf\": loss_clf,\n            \"loss_ae\": loss_ae,\n            \"loss_kld\": loss_kld,\n            \"loss_logprob\": loss_logprob,\n            \"loss\": loss,\n            \"accuracy01\": accuracy01,\n            \"accuracy03\": accuracy03,\n            \"accuracy05\": accuracy05,\n        }\n\n        if self.state.is_train_loader:\n            loss.backward()\n            self.state.optimizer.step()\n            self.state.optimizer.zero_grad()\n\nrunner = CustomRunner()\nrunner.train(\n    model=model,\n    optimizer=optimizer,\n    loaders=loaders,\n    verbose=True,\n)\n```\n</p>\n</details>\n\n<details>\n<summary>CV - segmentation with classification auxiliary task</summary>\n<p>\n\n```python\nimport os\nimport torch\nfrom torch import nn\nfrom torch.nn import functional as F\nfrom torch.utils.data import DataLoader\nfrom torchvision.datasets import MNIST\nfrom torchvision import transforms\nfrom catalyst import dl\nfrom catalyst.utils import metrics\n\nclass ClassifyUnet(nn.Module):\n\n    def __init__(self, in_channels, in_hw, out_features):\n        super().__init__()\n        self.encoder = nn.Sequential(nn.Conv2d(in_channels, in_channels, 3, 1, 1), nn.Tanh())\n        self.decoder = nn.Conv2d(in_channels, in_channels, 3, 1, 1)\n        self.clf = nn.Linear(in_channels * in_hw * in_hw, out_features)\n\n    def forward(self, x):\n        z = self.encoder(x)\n        z_ = z.view(z.size(0), -1)\n        y_hat = self.clf(z_)\n        x_ = self.decoder(z)\n        return y_hat, x_\n\nmodel = ClassifyUnet(1, 28, 10)\noptimizer = torch.optim.Adam(model.parameters(), lr=0.02)\n\nloaders = {\n    \"train\": DataLoader(MNIST(os.getcwd(), train=False, download=True, transform=transforms.ToTensor()), batch_size=32),\n    \"valid\": DataLoader(MNIST(os.getcwd(), train=False, download=True, transform=transforms.ToTensor()), batch_size=32),\n}\n\nclass CustomRunner(dl.Runner):\n\n    def _handle_batch(self, batch):\n        x, y = batch\n        x_noise = (x + torch.rand_like(x)).clamp_(0, 1)\n        y_hat, x_ = self.model(x_noise)\n\n        loss_clf = F.cross_entropy(y_hat, y)\n        iou = metrics.iou(x_, x)\n        loss_iou = 1 - iou\n        loss = loss_clf + loss_iou\n        accuracy01, accuracy03, accuracy05 = metrics.accuracy(y_hat, y, topk=(1, 3, 5))\n        self.state.batch_metrics = {\n            \"loss_clf\": loss_clf,\n            \"loss_iou\": loss_iou,\n            \"loss\": loss,\n            \"iou\": iou,\n            \"accuracy01\": accuracy01,\n            \"accuracy03\": accuracy03,\n            \"accuracy05\": accuracy05,\n        }\n\n        if self.state.is_train_loader:\n            loss.backward()\n            self.state.optimizer.step()\n            self.state.optimizer.zero_grad()\n\nrunner = CustomRunner()\nrunner.train(\n    model=model, \n    optimizer=optimizer, \n    loaders=loaders, \n    verbose=True,\n)\n```\n</p>\n</details>\n\n<details>\n<summary>GAN - MNIST, flatten version</summary>\n<p>\n\n```python\nimport os\nimport torch\nfrom torch import nn\nfrom torch.nn import functional as F\nfrom torch.utils.data import DataLoader\nfrom torchvision.datasets import MNIST\nfrom torchvision import transforms\nfrom catalyst import dl\nfrom catalyst.contrib.nn.modules import GlobalMaxPool2d, Flatten, Lambda\n\nlatent_dim = 128\ngenerator = nn.Sequential(\n    # We want to generate 128 coefficients to reshape into a 7x7x128 map\n    nn.Linear(128, 128 * 7 * 7),\n    nn.LeakyReLU(0.2, inplace=True),\n    Lambda(lambda x: x.view(x.size(0), 128, 7, 7)),\n    nn.ConvTranspose2d(128, 128, (4, 4), stride=(2, 2), padding=1),\n    nn.LeakyReLU(0.2, inplace=True),\n    nn.ConvTranspose2d(128, 128, (4, 4), stride=(2, 2), padding=1),\n    nn.LeakyReLU(0.2, inplace=True),\n    nn.Conv2d(128, 1, (7, 7), padding=3),\n    nn.Sigmoid(),\n)\ndiscriminator = nn.Sequential(\n    nn.Conv2d(1, 64, (3, 3), stride=(2, 2), padding=1),\n    nn.LeakyReLU(0.2, inplace=True),\n    nn.Conv2d(64, 128, (3, 3), stride=(2, 2), padding=1),\n    nn.LeakyReLU(0.2, inplace=True),\n    GlobalMaxPool2d(),\n    Flatten(),\n    nn.Linear(128, 1)\n)\n\nmodel = {\"generator\": generator, \"discriminator\": discriminator}\noptimizer = {\n    \"generator\": torch.optim.Adam(generator.parameters(), lr=0.0003, betas=(0.5, 0.999)),\n    \"discriminator\": torch.optim.Adam(discriminator.parameters(), lr=0.0003, betas=(0.5, 0.999)),\n}\nloaders = {\n    \"train\": DataLoader(MNIST(os.getcwd(), train=True, download=True, transform=transforms.ToTensor()), batch_size=32),\n}\n\nclass CustomRunner(dl.Runner):\n\n    def _handle_batch(self, batch):\n        real_images, _ = batch\n        batch_metrics = {}\n\n        # Sample random points in the latent space\n        batch_size = real_images.shape[0]\n        random_latent_vectors = torch.randn(batch_size, latent_dim).to(self.device)\n\n        # Decode them to fake images\n        generated_images = self.model[\"generator\"](random_latent_vectors).detach()\n        # Combine them with real images\n        combined_images = torch.cat([generated_images, real_images])\n\n        # Assemble labels discriminating real from fake images\n        labels = torch.cat([\n            torch.ones((batch_size, 1)), torch.zeros((batch_size, 1))\n        ]).to(self.device)\n        # Add random noise to the labels - important trick!\n        labels += 0.05 * torch.rand(labels.shape).to(self.device)\n\n        # Train the discriminator\n        predictions = self.model[\"discriminator\"](combined_images)\n        batch_metrics[\"loss_discriminator\"] = \\\n          F.binary_cross_entropy_with_logits(predictions, labels)\n\n        # Sample random points in the latent space\n        random_latent_vectors = torch.randn(batch_size, latent_dim).to(self.device)\n        # Assemble labels that say \"all real images\"\n        misleading_labels = torch.zeros((batch_size, 1)).to(self.device)\n\n        # Train the generator\n        generated_images = self.model[\"generator\"](random_latent_vectors)\n        predictions = self.model[\"discriminator\"](generated_images)\n        batch_metrics[\"loss_generator\"] = \\\n          F.binary_cross_entropy_with_logits(predictions, misleading_labels)\n\n        self.state.batch_metrics.update(**batch_metrics)\n\nrunner = CustomRunner()\nrunner.train(\n    model=model, \n    optimizer=optimizer,\n    loaders=loaders,\n    callbacks=[\n        dl.OptimizerCallback(\n            optimizer_key=\"generator\", \n            metric_key=\"loss_generator\"\n        ),\n        dl.OptimizerCallback(\n            optimizer_key=\"discriminator\", \n            metric_key=\"loss_discriminator\"\n        ),\n    ],\n    main_metric=\"loss_generator\",\n    num_epochs=20,\n    verbose=True,\n    logdir=\"./logs_gan\",\n)\n```\n</p>\n</details>\n\n<details>\n<summary>ML - Linear Regression is my profession (distributed version)</summary>\n<p>\n\n```python\n#!/usr/bin/env python\nimport torch\nfrom torch.utils.data import TensorDataset\nfrom catalyst.dl import SupervisedRunner, utils\n\ndef datasets_fn(num_features: int):\n    X = torch.rand(int(1e4), num_features)\n    y = torch.rand(X.shape[0])\n    dataset = TensorDataset(X, y)\n    return {\"train\": dataset, \"valid\": dataset}\n\ndef train():\n    num_features = int(1e1)\n    # model, criterion, optimizer, scheduler\n    model = torch.nn.Linear(num_features, 1)\n    criterion = torch.nn.MSELoss()\n    optimizer = torch.optim.Adam(model.parameters())\n    scheduler = torch.optim.lr_scheduler.MultiStepLR(optimizer, [3, 6])\n\n    runner = SupervisedRunner()\n    runner.train(\n        model=model,\n        datasets={\n            \"batch_size\": 32,\n            \"num_workers\": 1,\n            \"get_datasets_fn\": datasets_fn,\n            \"num_features\": num_features,  # will be passed to datasets_fn\n        },\n        criterion=criterion,\n        optimizer=optimizer,\n        scheduler=scheduler,\n        logdir=\"./logs/example_distributed_ml\",\n        num_epochs=8,\n        verbose=True,\n        distributed=False,\n    )\n\nutils.distributed_cmd_run(train)\n```\n</p>\n</details>\n\n<details>\n<summary>CV - classification with AutoEncoder (distributed version)</summary>\n<p>\n\n```python\n#!/usr/bin/env python\nimport os\nimport torch\nfrom torch import nn\nfrom torch.nn import functional as F\nfrom torchvision.datasets import MNIST\nfrom torchvision import transforms\nfrom catalyst import dl, utils\nfrom catalyst.utils import metrics\n\nclass ClassifyAE(nn.Module):\n\n    def __init__(self, in_features, hid_features, out_features):\n        super().__init__()\n        self.encoder = nn.Sequential(nn.Linear(in_features, hid_features), nn.Tanh())\n        self.decoder = nn.Linear(hid_features, in_features)\n        self.clf = nn.Linear(hid_features, out_features)\n\n    def forward(self, x):\n        z = self.encoder(x)\n        y_hat = self.clf(z)\n        x_ = self.decoder(z)\n        return y_hat, x_\n\nclass CustomRunner(dl.Runner):\n\n    def _handle_batch(self, batch):\n        x, y = batch\n        x = x.view(x.size(0), -1)\n        y_hat, x_ = self.model(x)\n\n        loss_clf = F.cross_entropy(y_hat, y)\n        loss_ae = F.mse_loss(x_, x)\n        loss = loss_clf + loss_ae\n        accuracy01, accuracy03, accuracy05 = metrics.accuracy(y_hat, y, topk=(1, 3, 5))\n        self.state.batch_metrics = {\n            \"loss_clf\": loss_clf,\n            \"loss_ae\": loss_ae,\n            \"loss\": loss,\n            \"accuracy01\": accuracy01,\n            \"accuracy03\": accuracy03,\n            \"accuracy05\": accuracy05,\n        }\n\n        if self.state.is_train_loader:\n            loss.backward()\n            self.state.optimizer.step()\n            self.state.optimizer.zero_grad()\n\ndef datasets_fn():\n    dataset = MNIST(os.getcwd(), train=False, download=True, transform=transforms.ToTensor())\n    return {\"train\": dataset, \"valid\": dataset}\n\ndef train():\n    model = ClassifyAE(28 * 28, 128, 10)\n    optimizer = torch.optim.Adam(model.parameters(), lr=0.02)\n\n    runner = CustomRunner()\n    runner.train(\n        model=model,\n        optimizer=optimizer,\n        datasets={\n            \"batch_size\": 32,\n            \"num_workers\": 1,\n            \"get_datasets_fn\": datasets_fn,\n        },\n        logdir=\"./logs/distributed_ae\",\n        num_epochs=8,\n        verbose=True,\n    )\n\nutils.distributed_cmd_run(train)\n```\n</p>\n</details>\n\n\n### Features\n- Universal train/inference loop.\n- Configuration files for model/data hyperparameters.\n- Reproducibility \u2013 all source code and environment variables will be saved.\n- Callbacks \u2013 reusable train/inference pipeline parts with easy customization.\n- Training stages support.\n- Deep Learning best practices - SWA, AdamW, Ranger optimizer, OneCycle, and more.\n- Developments best practices - fp16 support, distributed training, slurm.\n\n\n### Structure\n- **contrib** - additional modules contributed by Catalyst users.\n- **core** - framework core with main abstractions - \n    Experiment, Runner, Callback and State.\n- **data** - useful tools and scripts for data processing.\n- **dl** \u2013 runner for training and inference,\n   all of the classic ML and CV/NLP/RecSys metrics\n   and a variety of callbacks for training, validation\n   and inference of neural networks.\n- **utils** - typical utils for Deep Learning research.\n\n\n### Tests\nAll the Catalyst code is [tested rigorously with every new PR](./tests).\n\nIn fact, we train a number of different models for various of tasks - \nimage classification, image segmentation, text classification, GAN training.\nDuring the tests, we compare their convergence metrics in order to verify \nthe correctness of the training procedure and its reproducibility.\n\nOverall, Catalyst guarantees fully tested, correct and reproducible \nbest practices for the automated parts.\n\n\n\n## Catalyst\n\n### Tutorials\n- [Customizing what happens in `train`](./examples/notebooks/customizing_what_happens_in_train.ipynb) [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/catalyst-team/catalyst/blob/master/examples/notebooks/customizing_what_happens_in_train.ipynb)\n- [Demo with minimal examples](./examples/notebooks/demo.ipynb) for ML, CV, NLP, GANs and RecSys [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/catalyst-team/catalyst/blob/master/examples/notebooks/demo.ipynb)\n- Detailed [classification tutorial](./examples/notebooks/classification-tutorial.ipynb) [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/catalyst-team/catalyst/blob/master/examples/notebooks/classification-tutorial.ipynb)\n- Advanced [segmentation tutorial](./examples/notebooks/segmentation-tutorial.ipynb) [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/catalyst-team/catalyst/blob/master/examples/notebooks/segmentation-tutorial.ipynb)\n- Comprehensive [classification pipeline](https://github.com/catalyst-team/classification)\n- Binary and semantic [segmentation pipeline](https://github.com/catalyst-team/segmentation)\n- [Beyond fashion: Deep Learning with Catalyst (Config API)](https://evilmartians.com/chronicles/beyond-fashion-deep-learning-with-catalyst)\n- [Tutorial from Notebook API to Config API (RU)](https://github.com/Bekovmi/Segmentation_tutorial)\n\nAPI documentation and an overview of the library can be found here\n[![Docs](https://img.shields.io/badge/dynamic/json.svg?label=docs&url=https%3A%2F%2Fpypi.org%2Fpypi%2Fcatalyst%2Fjson&query=%24.info.version&colorB=brightgreen&prefix=v)](https://catalyst-team.github.io/catalyst/index.html). <br/>\nIn the **[examples folder](examples)**\nof the repository, you can find advanced tutorials and Catalyst best practices.\n\n\n### Guides\n\n- [Distributed training best practices](https://catalyst-team.github.io/catalyst/info/distributed.html)\n\n\n### Projects\n- [Kaggle Quick, Draw! Doodle Recognition Challenge](https://github.com/ngxbac/Kaggle-QuickDraw) - 11th place solution\n- [Catalyst.RL - NeurIPS 2018: AI for Prosthetics Challenge](https://github.com/Scitator/neurips-18-prosthetics-challenge) \u2013 3rd place solution\n- [CamVid Segmentation Example](https://github.com/BloodAxe/Catalyst-CamVid-Segmentation-Example) - Example of semantic segmentation for CamVid dataset\n- [Notebook API tutorial for segmentation in Understanding Clouds from Satellite Images Competition](https://www.kaggle.com/artgor/segmentation-in-pytorch-using-convenient-tools/)\n- [Kaggle Google Landmark 2019](https://github.com/ngxbac/Kaggle-Google-Landmark-2019) - 30th place solution\n- [Hierarchical attention for sentiment classification with visualization](https://github.com/neuromation/ml-recipe-hier-attention)\n- [Pediatric bone age assessment](https://github.com/neuromation/ml-recipe-bone-age)\n- [iMet Collection 2019 - FGVC6](https://github.com/ngxbac/Kaggle-iMet) - 24th place solution\n- [ID R&D Anti-spoofing Challenge](https://github.com/bagxi/idrnd-anti-spoofing-challenge-solution) - 14th place solution\n- [Implementation of paper \"Tell Me Where to Look: Guided Attention Inference Network\"](https://github.com/ngxbac/GAIN)\n- [Catalyst.RL - NeurIPS 2019: Learn to Move - Walk Around](https://github.com/Scitator/learning-to-move-starter-kit) \u2013 starter kit\n- [Catalyst.RL - NeurIPS 2019: Animal-AI Olympics](https://github.com/Scitator/animal-olympics-starter-kit) - starter kit\n- [NeurIPS 2019: Recursion Cellular Image Classification](https://github.com/ngxbac/Kaggle-Recursion-Cellular) - 4th place solution\n- [MICCAI 2019: Automatic Structure Segmentation for Radiotherapy Planning Challenge 2019](https://github.com/ngxbac/StructSeg2019) \n  * 3rd place solution for `Task 3: Organ-at-risk segmentation from chest CT scans`\n  * and 4th place solution for `Task 4: Gross Target Volume segmentation of lung cancer`\n- [Kaggle Seversteal steel detection](https://github.com/bamps53/kaggle-severstal) - 5th place solution\n- [Implementation of paper \"Filter Response Normalization Layer: Eliminating Batch Dependence in the Training of Deep Neural Networks\"](https://github.com/yukkyo/PyTorch-FilterResponseNormalizationLayer)\n- [RSNA Intracranial Hemorrhage Detection](https://github.com/ngxbac/Kaggle-RSNA) - 5th place solution\n- [Implementation of paper \"Utterance-level Aggregation For Speaker Recognition In The Wild\"](https://github.com/ptJexio/Speaker-Recognition)\n- [APTOS 2019 Blindness Detection](https://github.com/BloodAxe/Kaggle-2019-Blindness-Detection) \u2013 7th place solution\n- [Catalyst.RL - NeurIPS 2019: Learn to Move - Walk Around](https://github.com/Scitator/run-skeleton-run-in-3d) \u2013 2nd place solution\n- [xView2 Damage Assessment Challenge](https://github.com/BloodAxe/xView2-Solution) - 3rd place solution\n- [Inria Segmentation Example](https://github.com/BloodAxe/Catalyst-Inria-Segmentation-Example) - An example of training segmentation model for Inria Sattelite Segmentation Challenge\n- [iglovikov_segmentation](https://github.com/ternaus/iglovikov_segmentation) - Semantic segmentation pipeline using Catalyst\n\n\n### Tools and pipelines\n- [Catalyst.RL](https://github.com/Scitator/catalyst-rl-framework) \u2013 A Distributed Framework for Reproducible RL Research by [Scitator](https://github.com/Scitator)\n- [Catalyst.Classification](https://github.com/catalyst-team/classification) - Comprehensive classification pipeline with Pseudo-Labeling by [Bagxi](https://github.com/bagxi) and [Pdanilov](https://github.com/pdanilov)\n- [Catalyst.Segmentation](https://github.com/catalyst-team/segmentation) - Segmentation pipelines - binary, semantic and instance, by [Bagxi](https://github.com/bagxi)\n- [Catalyst.Detection](https://github.com/catalyst-team/detection) - Anchor-free detection pipeline by [Avi2011class](https://github.com/Avi2011class) and [TezRomacH](https://github.com/TezRomacH)\n- [Catalyst.GAN](https://github.com/catalyst-team/gan) - Reproducible GANs pipelines by [Asmekal](https://github.com/asmekal)\n- [Catalyst.Neuro](https://github.com/catalyst-team/neuro) - Brain image analysis project, in collaboration with [TReNDS Center](https://trendscenter.org)\n- [MLComp](https://github.com/catalyst-team/mlcomp) \u2013 distributed DAG framework for machine learning with UI by [Lightforever](https://github.com/lightforever)\n- [Pytorch toolbelt](https://github.com/BloodAxe/pytorch-toolbelt) - PyTorch extensions for fast R&D prototyping and Kaggle farming by [BloodAxe](https://github.com/BloodAxe)\n- [Helper functions](https://github.com/ternaus/iglovikov_helper_functions) - An unstructured set of helper functions by [Ternaus](https://github.com/ternaus)\n\n\n### Talks and videos\n- [Catalyst-team YouTube channel](https://www.youtube.com/channel/UC39Z1Cwr9n8DVpuXcsyi9FQ)\n- [Catalyst.RL \u2013 reproducible RL research framework](https://docs.google.com/presentation/d/1U6VWIwQnQDGtu6a1x61tt3AlxCJ1-A1EYKd8lR9tKos/edit?usp=sharing) at [Stachka](https://nastachku.ru/archive/2019_innopolis/index.php?dispatch=products.view&product_id=3650)\n- [Catalyst.DL \u2013 reproducible DL research framework (rus)](https://youtu.be/EfG8iwFNdWg) and [slides (eng)](https://docs.google.com/presentation/d/1TL7N_H31zDFShVbKzLfMC3DYw4e1psj6ScDN8spKQlk/edit?usp=sharing) at [RIF](http://rifvrn.ru/program/catalyst-dl-fast-reproducible-dl-4-html)\n- [Catalyst.DL \u2013 reproducible DL research framework (rus)](https://youtu.be/7xyMP_5eA8c?t=8964) and [slides (eng)](https://docs.google.com/presentation/d/1XGubfTWvpiJrMyKNx2G6GtAq68y2__sDmx30eSdSRZs/edit?usp=sharing) at [AI-Journey](https://ai-journey.ru/conference-moscow/broadcast?page=2&per-page=12)\n- [Catalyst.DL \u2013 fast & reproducible DL](https://docs.google.com/presentation/d/1fbF4PMl092kIdjJTw3olR3wI2cl_P2ttN3c9-WTh1gA/edit?usp=sharing) at [Datastart](https://datastart.ru/msk-autumn-2019/)\n- [Catalyst.RL - NeurIPS 2019: Learn to Move - Walk Around](https://www.youtube.com/watch?v=PprDcJHrFdg&feature=youtu.be&t=4020) and [slides (eng)](https://docs.google.com/presentation/d/1g4g_Rxp9M3xAHwpp_hNzC87L9Gvum3H09g2DIQn1Taw/edit?usp=sharing) at RL reading group Meetup\n- [Catalyst \u2013 accelerated DL & RL (rus)](https://youtu.be/Rmo2rx5V3v8?t=77) and [slides (eng)](https://docs.google.com/presentation/d/1xMZMjSwJfM5mZMK7pHp6hVI0FxPyZOpRtBZ0J2l1AaY/edit?fbclid=IwAR1q4XJVqYdD-a5oO2n68Y4xHvChIeOSjCSmlUYqrjIzneYpehzF8PiNdMc#slide=id.g75815b5293_0_202) at [Facebook Developer Circle: Moscow | ML & AI Meetup](https://www.facebook.com/groups/475428499888062/)\n- [Catalyst.RL - Learn to Move - Walk Around 2nd place solution](https://docs.google.com/presentation/d/14UzYAURBulLjuCbQRnNeROhZ74h51-o460DPTkKMrwo/edit?usp=sharing) at NeurIPS competition track\n- [Open Source ML 2019 edition](https://docs.google.com/presentation/d/1A-kwek7USA-j2Nn4n8PmLUQ1PdeUzkkViwXST7RyL-w/edit?usp=sharing) at [Datafest.elka](https://datafest.ru/elka/)\n\n\n\n## Community\n\n### Contribution guide\n\nWe appreciate all contributions.\nIf you are planning to contribute back bug-fixes,\nplease do so without any further discussion.\nIf you plan to contribute new features, utility functions or extensions,\nplease first open an issue and discuss the feature with us.\n\n- Please see the [contribution guide](CONTRIBUTING.md) for more information.\n- By participating in this project, you agree to abide by its [Code of Conduct](CODE_OF_CONDUCT.md).\n\n\n### User feedback\n\nWe have created `catalyst.team.core@gmail.com` for \"user feedback\".\n- If you like the project and want to say thanks, this the right place.\n- If you would like to start a collaboration between your team and Catalyst team to do better Deep Learning R&D - you are always welcome.\n- If you just don't like Github issues and this ways suits you better - feel free to email us.\n- Finally, if you do not like something, please, share it with us and we can see how to improve it.\n\nWe appreciate any type of feedback. Thank you!\n\n\n### Acknowledgments\n\nSince the beginning of the development of the \u0421atalyst, \na lot of people have influenced it in a lot of different ways. <br/>\nHUGE THANK YOU to:\n\n- [Eugene Kachan](https://www.linkedin.com/in/yauheni-kachan/) ([bagxi](https://github.com/bagxi)) for many Config API improvements and CV pipelines\n- [Artem Zolkin](https://www.linkedin.com/in/artem-zolkin-b5155571/) ([arquestro](https://github.com/Arquestro)) for best ever documentation\n- [David Kuryakin](https://www.linkedin.com/in/dkuryakin/) ([dkuryakin](https://github.com/dkuryakin)) for ReAction design\n- [Evgeny Semyonov](https://www.linkedin.com/in/ewan-semyonov/) ([lightforever](https://github.com/lightforever)) for MLComp creation\n- [Andrey Zharkov](https://www.linkedin.com/in/andrey-zharkov-8554a1153/) ([asmekal](https://github.com/asmekal)) for Catalyst.GAN initiative\n- [Roman Tezikov](https://www.linkedin.com/in/roman-tezikov/) ([tezromach](https://github.com/TezRomacH)) for great Catalyst tutorials\n- [Aleksey Grinchuk](https://www.facebook.com/grinchuk.alexey) ([alexgrinch](https://github.com/AlexGrinch)) and [Valentin Khrulkov](https://www.linkedin.com/in/vkhrulkov/) ([khrulkovv](https://github.com/KhrulkovV)) for many RL algorithms implemented together\n- [Alex Gaziev](https://www.linkedin.com/in/alexgaziev/) ([gazay](https://github.com/gazay)) for a bunch of Config API improvements\n- [Yury Kashnitsky](https://www.linkedin.com/in/kashnitskiy/) ([yorko](https://github.com/Yorko)) for Catalyst.NLP movement\n- [Eugene Khvedchenya](https://www.linkedin.com/in/cvtalks/) ([bloodaxe](https://github.com/BloodAxe)) for Pytorch-toolbelt library\n- [Nguyen Xuan Bac](https://www.linkedin.com/in/bac-nguyen-xuan-70340b66/) ([ngxbac](https://github.com/ngxbac)) and [Andrey Lukyanenko](https://www.linkedin.com/in/andlukyane/) ([erlemar](https://github.com/erlemar)) for many Kaggle Catalyst-based solutions\n- [Vsevolod Poletaev](https://www.linkedin.com/in/vsevolod-poletaev-468071165/) ([hexfaker](https://github.com/hexfaker)) for Experiment idea and PoC\n- [Aleksandr Belskikh](https://www.linkedin.com/in/belskikh/) ([belskikh](https://github.com/belskikh)) for Callbacks-based system inspiration\n- [Artur Kuzin](https://www.linkedin.com/in/n01z3/) ([n01z3](https://github.com/n01z3)) for multi-stage pipelines proposal\n- [Vladimir Iglovikov](https://www.linkedin.com/in/iglovikov/) ([ternaus](https://github.com/ternaus)) for countless pieces of useful advices\n- and [Ivan Stepanenko](https://www.facebook.com/istepanenko) for awesome Catalyst.Ecosystem design\n\n\n### Trusted by\n- [Awecom](https://www.awecom.com)\n- Researchers@[Center for Translational Research in Neuroimaging and Data Science (TReNDS)](https://trendscenter.org)\n- [Deep Learning School](https://en.dlschool.org)\n- Researchers@[Emory University](https://www.emory.edu)\n- [Evil Martians](https://evilmartians.com)\n- Researchers@[Georgia Institute of Technology](https://www.gatech.edu)\n- Researchers@[Georgia State University](https://www.gsu.edu)\n- [Helios](http://helios.to)\n- [HPCD Lab](https://www.hpcdlab.com)\n- [iFarm](https://ifarmproject.com)\n- [Kinoplan](http://kinoplan.io/)\n- Researchers@[Moscow Institute of Physics and Technology](https://mipt.ru/english/)\n- [Neuromation](https://neuromation.io)\n- [Poteha Labs](https://potehalabs.com/en/)\n- [Provectus](https://provectus.com)\n- Researchers@[Skolkovo Institute of Science and Technology](https://www.skoltech.ru/en)\n- [SoftConstruct](https://www.softconstruct.io/)\n- Researchers@[Tinkoff](https://www.tinkoff.ru/eng/)\n- Researchers@[Yandex.Research](https://research.yandex.com)\n\n\n### Supported by\n- [HostKey](https://www.hostkey.com)\n- [Moscow Institute of Physics and Technology](https://mipt.ru/english/)\n\n\n### Citation\n\nPlease use this bibtex if you want to cite this repository in your publications:\n\n    @misc{catalyst,\n        author = {Kolesnikov, Sergey},\n        title = {Accelerated DL R&D},\n        year = {2018},\n        publisher = {GitHub},\n        journal = {GitHub repository},\n        howpublished = {\\url{https://github.com/catalyst-team/catalyst}},\n    }\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/catalyst-team/catalyst", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/catalyst-team/catalyst", "keywords": "Machine Learning,Distributed Computing,Deep Learning,Computer Vision,Natural Language Processing,Recommendation Systems,Information Retrieval,PyTorch", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "catalyst", "package_url": "https://pypi.org/project/catalyst/", "platform": "", "project_url": "https://pypi.org/project/catalyst/", "project_urls": {"Bug Tracker": "https://github.com/catalyst-team/catalyst/issues", "Documentation": "https://catalyst-team.github.io/catalyst", "Download": "https://github.com/catalyst-team/catalyst", "Homepage": "https://github.com/catalyst-team/catalyst", "Source Code": "https://github.com/catalyst-team/catalyst"}, "release_url": "https://pypi.org/project/catalyst/20.5/", "requires_dist": ["numpy (>=1.16.4)", "torch (>=1.1.0)", "tqdm (>=4.33.0)", "PyYAML", "packaging", "deprecation", "ipython", "tensorboard (>=1.14.0)", "tensorboardX", "crc32c (>=1.7)", "plotly (>=4.1.0)", "matplotlib", "pandas (>=0.22)", "scikit-learn (>=0.20)", "GitPython (>=3.1.1)", "neptune-client ; extra == 'all'", "visdom ; extra == 'all'", "wandb ; extra == 'all'", "alchemy (>=20.04) ; extra == 'all'", "reaction ; extra == 'all'", "albumentations (==0.4.3) ; extra == 'all'", "imageio ; extra == 'all'", "opencv-python-headless ; extra == 'all'", "scikit-image (>=0.14.2) ; extra == 'all'", "segmentation-models-pytorch (==0.1.0) ; extra == 'all'", "torchvision (>=0.3.0) ; extra == 'all'", "transformers (<=2.4.0>=2.0.0) ; extra == 'all'", "nmslib ; extra == 'all'", "neptune-client ; extra == 'contrib'", "visdom ; extra == 'contrib'", "wandb ; extra == 'contrib'", "alchemy (>=20.04) ; extra == 'contrib'", "reaction ; extra == 'contrib'", "albumentations (==0.4.3) ; extra == 'contrib'", "imageio ; extra == 'contrib'", "opencv-python-headless ; extra == 'contrib'", "scikit-image (>=0.14.2) ; extra == 'contrib'", "segmentation-models-pytorch (==0.1.0) ; extra == 'contrib'", "torchvision (>=0.3.0) ; extra == 'contrib'", "transformers (<=2.4.0>=2.0.0) ; extra == 'contrib'", "albumentations (==0.4.3) ; extra == 'cv'", "imageio ; extra == 'cv'", "opencv-python-headless ; extra == 'cv'", "scikit-image (>=0.14.2) ; extra == 'cv'", "segmentation-models-pytorch (==0.1.0) ; extra == 'cv'", "torchvision (>=0.3.0) ; extra == 'cv'", "alchemy (>=20.04) ; extra == 'ecosystem'", "reaction ; extra == 'ecosystem'", "nmslib ; extra == 'ml'", "transformers (<=2.4.0>=2.0.0) ; extra == 'nlp'"], "requires_python": ">=3.6.0", "summary": "Catalyst. PyTorch framework for DL research and development.", "version": "20.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<p><a href=\"https://github.com/catalyst-team/catalyst\" rel=\"nofollow\"><img alt=\"Catalyst logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/87d75da0e38203eefa09c97986f43676ea5afa41/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f636174616c7973742d7465616d2f636174616c7973742d706963732f6d61737465722f706963732f636174616c7973745f6c6f676f2e706e67\"></a></p>\n<p><strong>Accelerated DL R&amp;D</strong></p>\n<p><a href=\"https://www.codefactor.io/repository/github/catalyst-team/catalyst\" rel=\"nofollow\"><img alt=\"CodeFactor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c9defce03d3b3f3f6825bfec374d327e4107931/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f636174616c7973742d7465616d2f636174616c7973742f6261646765\"></a>\n<a href=\"https://pypi.org/project/catalyst/\" rel=\"nofollow\"><img alt=\"Pipi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d7f3ca18e04433d93840b2578ace7141232a81d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636174616c7973742e737667\"></a>\n<a href=\"https://catalyst-team.github.io/catalyst/index.html\" rel=\"nofollow\"><img alt=\"Docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f712f518cff83ecc4642c9ab50f8e76d21316e5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e2e7376673f6c6162656c3d646f63732675726c3d6874747073253341253246253246707970692e6f726725324670797069253246636174616c7973742532466a736f6e2671756572793d2532342e696e666f2e76657273696f6e26636f6c6f72423d627269676874677265656e267072656669783d76\"></a>\n<a href=\"https://pepy.tech/project/catalyst\" rel=\"nofollow\"><img alt=\"PyPI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c4379899075e164138008f2655eb35e54353a36b/68747470733a2f2f706570792e746563682f62616467652f636174616c797374\"></a></p>\n<p><a href=\"https://twitter.com/catalyst_core\" rel=\"nofollow\"><img alt=\"Twitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9fc6b1a20cc13edd17b812490cbdda23d0175071/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e6577732d747769747465722d343939666562\"></a>\n<a href=\"https://t.me/catalyst_team\" rel=\"nofollow\"><img alt=\"Telegram\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58f9b7757199693e228fe11f290e8a8db82205bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6368616e6e656c2d74656c656772616d2d626c7565\"></a>\n<a href=\"https://join.slack.com/t/catalyst-team-core/shared_invite/zt-d9miirnn-z86oKDzFMKlMG4fgFdZafw\" rel=\"nofollow\"><img alt=\"Slack\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3149fe10f4eafa65ac82d35fa9901915bd7e9d95/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436174616c7973742d736c61636b2d73756363657373\"></a>\n<a href=\"https://github.com/catalyst-team/catalyst/graphs/contributors\" rel=\"nofollow\"><img alt=\"Github contributors\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8d038b37003c2f330490b09b2b73845c040ed8ab/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f636174616c7973742d7465616d2f636174616c7973742e7376673f6c6f676f3d676974687562266c6f676f436f6c6f723d7768697465\"></a></p>\n<p><img alt=\"codestyle\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62abe7240f72b08d035abd8309e1c86611617492/68747470733a2f2f6769746875622e636f6d2f636174616c7973742d7465616d2f636174616c7973742f776f726b666c6f77732f636f64657374796c652f62616467652e7376673f6272616e63683d6d6173746572266576656e743d70757368\">\n<img alt=\"catalyst\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34a3a5972ff675152861c8719007850c049014ac/68747470733a2f2f6769746875622e636f6d2f636174616c7973742d7465616d2f636174616c7973742f776f726b666c6f77732f636174616c7973742f62616467652e7376673f6272616e63683d6d6173746572266576656e743d70757368\">\n<img alt=\"catalyst-cv\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ad5f9ca45ba6f959d14a98a99c888a6d97a109c/68747470733a2f2f6769746875622e636f6d2f636174616c7973742d7465616d2f636174616c7973742f776f726b666c6f77732f636174616c7973742d63762f62616467652e7376673f6272616e63683d6d6173746572266576656e743d70757368\">\n<img alt=\"catalyst-nlp\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe61ff5bb6305f7a1af65e01260c8220a5eab844/68747470733a2f2f6769746875622e636f6d2f636174616c7973742d7465616d2f636174616c7973742f776f726b666c6f77732f636174616c7973742d6e6c702f62616467652e7376673f6272616e63683d6d6173746572266576656e743d70757368\">\n<a href=\"http://66.248.205.49:8111/project.html?projectId=Catalyst&amp;tab=projectOverview&amp;guest=1\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3969f107e9906b58d7f3ceaafc77422f36d50e86/687474703a2f2f36362e3234382e3230352e34393a383131312f6170702f726573742f6275696c64732f6275696c64547970653a69643a436174616c7973745f4465706c6f792f73746174757349636f6e2e737667\"></a></p>\n</div>\n<p>PyTorch framework for Deep Learning research and development.\nIt was developed with a focus on reproducibility,\nfast experimentation and code/ideas reusing.\nBeing able to research/develop something new,\nrather than write another regular train loop. <br>\nBreak the cycle - use the Catalyst!</p>\n<p>Project <a href=\"https://github.com/catalyst-team/catalyst/blob/master/MANIFEST.md\" rel=\"nofollow\">manifest</a>. Part of <a href=\"https://pytorch.org/ecosystem/\" rel=\"nofollow\">PyTorch Ecosystem</a>. Part of <a href=\"https://docs.google.com/presentation/d/1D-yhVOg6OXzjo9K_-IS5vSHLPIUxp1PEkFGnpRcNCNU/edit?usp=sharing\" rel=\"nofollow\">Catalyst Ecosystem</a>:</p>\n<ul>\n<li><a href=\"https://github.com/catalyst-team/alchemy\" rel=\"nofollow\">Alchemy</a> - Experiments logging &amp; visualization</li>\n<li><a href=\"https://github.com/catalyst-team/catalyst\" rel=\"nofollow\">Catalyst</a> - Accelerated Deep Learning Research and Development</li>\n<li><a href=\"https://github.com/catalyst-team/reaction\" rel=\"nofollow\">Reaction</a> - Convenient Deep Learning models serving</li>\n</ul>\n<p><a href=\"https://landscape.lfai.foundation/selected=catalyst\" rel=\"nofollow\">Catalyst at AI Landscape</a>.</p>\n<hr>\n<h2>Getting started</h2>\n<pre>pip install -U catalyst\n</pre>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.nn</span> <span class=\"kn\">import</span> <span class=\"n\">functional</span> <span class=\"k\">as</span> <span class=\"n\">F</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.utils.data</span> <span class=\"kn\">import</span> <span class=\"n\">DataLoader</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">MNIST</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision.transforms</span> <span class=\"kn\">import</span> <span class=\"n\">ToTensor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst</span> <span class=\"kn\">import</span> <span class=\"n\">dl</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst.utils</span> <span class=\"kn\">import</span> <span class=\"n\">metrics</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">28</span> <span class=\"o\">*</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.02</span><span class=\"p\">)</span>\n\n<span class=\"n\">loaders</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"train\"</span><span class=\"p\">:</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">ToTensor</span><span class=\"p\">()),</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">),</span>\n    <span class=\"s2\">\"valid\"</span><span class=\"p\">:</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">ToTensor</span><span class=\"p\">()),</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">),</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomRunner</span><span class=\"p\">(</span><span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">Runner</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">predict_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">):</span>\n        <span class=\"c1\"># model inference step</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_handle_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">):</span>\n        <span class=\"c1\"># model train/valid step</span>\n        <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">batch</span>\n        <span class=\"n\">y_hat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">cross_entropy</span><span class=\"p\">(</span><span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n        <span class=\"n\">accuracy01</span><span class=\"p\">,</span> <span class=\"n\">accuracy03</span> <span class=\"o\">=</span> <span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">accuracy</span><span class=\"p\">(</span><span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">topk</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">batch_metrics</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span><span class=\"s2\">\"loss\"</span><span class=\"p\">:</span> <span class=\"n\">loss</span><span class=\"p\">,</span> <span class=\"s2\">\"accuracy01\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy01</span><span class=\"p\">,</span> <span class=\"s2\">\"accuracy03\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy03</span><span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">is_train_loader</span><span class=\"p\">:</span>\n            <span class=\"n\">loss</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">zero_grad</span><span class=\"p\">()</span>\n\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">CustomRunner</span><span class=\"p\">()</span>\n<span class=\"c1\"># model training</span>\n<span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span>\n    <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>\n    <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"n\">optimizer</span><span class=\"p\">,</span>\n    <span class=\"n\">loaders</span><span class=\"o\">=</span><span class=\"n\">loaders</span><span class=\"p\">,</span>\n    <span class=\"n\">logdir</span><span class=\"o\">=</span><span class=\"s2\">\"./logs\"</span><span class=\"p\">,</span>\n    <span class=\"n\">num_epochs</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">load_best_on_end</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># model inference</span>\n<span class=\"k\">for</span> <span class=\"n\">prediction</span> <span class=\"ow\">in</span> <span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">predict_loader</span><span class=\"p\">(</span><span class=\"n\">loader</span><span class=\"o\">=</span><span class=\"n\">loaders</span><span class=\"p\">[</span><span class=\"s2\">\"valid\"</span><span class=\"p\">]):</span>\n    <span class=\"k\">assert</span> <span class=\"n\">prediction</span><span class=\"o\">.</span><span class=\"n\">detach</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">cpu</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">numpy</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">10</span>\n<span class=\"c1\"># model tracing</span>\n<span class=\"n\">traced_model</span> <span class=\"o\">=</span> <span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">trace</span><span class=\"p\">(</span><span class=\"n\">loader</span><span class=\"o\">=</span><span class=\"n\">loaders</span><span class=\"p\">[</span><span class=\"s2\">\"valid\"</span><span class=\"p\">])</span>\n</pre>\n<ul>\n<li><a href=\"https://colab.research.google.com/drive/1T5G_OVLYHq483l80ikabXRsx_WB3rwPf?usp=sharing\" rel=\"nofollow\">Customizing what happens in <code>train</code></a></li>\n<li><a href=\"https://colab.research.google.com/github/catalyst-team/catalyst/blob/master/examples/notebooks/demo.ipynb\" rel=\"nofollow\">Colab with ML, CV, NLP, GANs and RecSys demos</a></li>\n<li><a href=\"#minimal-examples\" rel=\"nofollow\">Minimal examples</a></li>\n<li>For Catalyst.RL introduction, please follow <a href=\"https://github.com/catalyst-team/catalyst-rl\" rel=\"nofollow\">Catalyst.RL repo</a>.</li>\n</ul>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#overview\" rel=\"nofollow\">Overview</a>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#minimal-examples\" rel=\"nofollow\">Minimal examples</a></li>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#structure\" rel=\"nofollow\">Structure</a></li>\n<li><a href=\"#tests\" rel=\"nofollow\">Tests</a></li>\n</ul>\n</li>\n<li><a href=\"#catalyst\" rel=\"nofollow\">Catalyst</a>\n<ul>\n<li><a href=\"#tutorials\" rel=\"nofollow\">Tutorials</a></li>\n<li><a href=\"#guides\" rel=\"nofollow\">Guides</a></li>\n<li><a href=\"#projects\" rel=\"nofollow\">Projects</a></li>\n<li><a href=\"#tools-and-pipelines\" rel=\"nofollow\">Tools and pipelines</a></li>\n<li><a href=\"#talks-and-videos\" rel=\"nofollow\">Talks and videos</a></li>\n</ul>\n</li>\n<li><a href=\"#community\" rel=\"nofollow\">Community</a>\n<ul>\n<li><a href=\"#contribution-guide\" rel=\"nofollow\">Contribution guide</a></li>\n<li><a href=\"#user-feedback\" rel=\"nofollow\">User feedback</a></li>\n<li><a href=\"#acknowledgments\" rel=\"nofollow\">Acknowledgments</a></li>\n<li><a href=\"#trusted-by\" rel=\"nofollow\">Trusted by</a></li>\n<li><a href=\"#supported-by\" rel=\"nofollow\">Supported by</a></li>\n<li><a href=\"#citation\" rel=\"nofollow\">Citation</a></li>\n</ul>\n</li>\n</ul>\n<h2>Overview</h2>\n<p>Catalyst helps you write compact\nbut full-featured Deep Learning pipelines in a few lines of code.\nYou get a training loop with metrics, early-stopping, model checkpointing\nand other features without the boilerplate.</p>\n<h3>Installation</h3>\n<p>Common installation:</p>\n<pre>pip install -U catalyst\n</pre>\n<details>\n<summary>Specific versions with additional requirements</summary>\n<p>\n</p><pre>pip install catalyst<span class=\"o\">[</span>ml<span class=\"o\">]</span>         <span class=\"c1\"># installs DL+ML based catalyst</span>\npip install catalyst<span class=\"o\">[</span>cv<span class=\"o\">]</span>         <span class=\"c1\"># installs DL+CV based catalyst</span>\npip install catalyst<span class=\"o\">[</span>nlp<span class=\"o\">]</span>        <span class=\"c1\"># installs DL+NLP based catalyst</span>\npip install catalyst<span class=\"o\">[</span>ecosystem<span class=\"o\">]</span>  <span class=\"c1\"># installs Catalyst.Ecosystem</span>\npip install catalyst<span class=\"o\">[</span>contrib<span class=\"o\">]</span>    <span class=\"c1\"># installs DL+contrib based catalyst</span>\npip install catalyst<span class=\"o\">[</span>all<span class=\"o\">]</span>        <span class=\"c1\"># installs everything</span>\n<span class=\"c1\"># and master version installation</span>\npip install git+https://github.com/catalyst-team/catalyst@master --upgrade\n</pre>\n<p></p>\n</details>\n<p>Catalyst is compatible with: Python 3.6+. PyTorch 1.0.0+.</p>\n<h3>Minimal Examples</h3>\n<details>\n<summary>ML - Linear Regression is my profession</summary>\n<p>\n</p><pre><span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.utils.data</span> <span class=\"kn\">import</span> <span class=\"n\">DataLoader</span><span class=\"p\">,</span> <span class=\"n\">TensorDataset</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst.dl</span> <span class=\"kn\">import</span> <span class=\"n\">SupervisedRunner</span>\n\n<span class=\"c1\"># data</span>\n<span class=\"n\">num_samples</span><span class=\"p\">,</span> <span class=\"n\">num_features</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mf\">1e4</span><span class=\"p\">),</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mf\">1e1</span><span class=\"p\">)</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">num_samples</span><span class=\"p\">,</span> <span class=\"n\">num_features</span><span class=\"p\">),</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">num_samples</span><span class=\"p\">)</span>\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">TensorDataset</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"n\">num_workers</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">loaders</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"train\"</span><span class=\"p\">:</span> <span class=\"n\">loader</span><span class=\"p\">,</span> <span class=\"s2\">\"valid\"</span><span class=\"p\">:</span> <span class=\"n\">loader</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># model, criterion, optimizer, scheduler</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">num_features</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">criterion</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MSELoss</span><span class=\"p\">()</span>\n<span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">())</span>\n<span class=\"n\">scheduler</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">lr_scheduler</span><span class=\"o\">.</span><span class=\"n\">MultiStepLR</span><span class=\"p\">(</span><span class=\"n\">optimizer</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># model training</span>\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">SupervisedRunner</span><span class=\"p\">()</span>\n<span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span>\n    <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>\n    <span class=\"n\">criterion</span><span class=\"o\">=</span><span class=\"n\">criterion</span><span class=\"p\">,</span>\n    <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"n\">optimizer</span><span class=\"p\">,</span>\n    <span class=\"n\">scheduler</span><span class=\"o\">=</span><span class=\"n\">scheduler</span><span class=\"p\">,</span>\n    <span class=\"n\">loaders</span><span class=\"o\">=</span><span class=\"n\">loaders</span><span class=\"p\">,</span>\n    <span class=\"n\">logdir</span><span class=\"o\">=</span><span class=\"s2\">\"./logdir\"</span><span class=\"p\">,</span>\n    <span class=\"n\">num_epochs</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span>\n    <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p></p>\n</details>\n<details>\n<summary>CV - MNIST classification one more time</summary>\n<p>\n</p><pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.nn</span> <span class=\"kn\">import</span> <span class=\"n\">functional</span> <span class=\"k\">as</span> <span class=\"n\">F</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.utils.data</span> <span class=\"kn\">import</span> <span class=\"n\">DataLoader</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">MNIST</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision</span> <span class=\"kn\">import</span> <span class=\"n\">transforms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst</span> <span class=\"kn\">import</span> <span class=\"n\">dl</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst.utils</span> <span class=\"kn\">import</span> <span class=\"n\">metrics</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">28</span> <span class=\"o\">*</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.02</span><span class=\"p\">)</span>\n\n<span class=\"n\">loaders</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"train\"</span><span class=\"p\">:</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">()),</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">),</span>\n    <span class=\"s2\">\"valid\"</span><span class=\"p\">:</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">()),</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">),</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomRunner</span><span class=\"p\">(</span><span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">Runner</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_handle_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">batch</span>\n        <span class=\"n\">y_hat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">cross_entropy</span><span class=\"p\">(</span><span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n        <span class=\"n\">accuracy01</span><span class=\"p\">,</span> <span class=\"n\">accuracy03</span><span class=\"p\">,</span> <span class=\"n\">accuracy05</span> <span class=\"o\">=</span> <span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">accuracy</span><span class=\"p\">(</span><span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">topk</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">batch_metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"loss\"</span><span class=\"p\">:</span> <span class=\"n\">loss</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy01\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy01</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy03\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy03</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy05\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy05</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">is_train_loader</span><span class=\"p\">:</span>\n            <span class=\"n\">loss</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">zero_grad</span><span class=\"p\">()</span>\n\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">CustomRunner</span><span class=\"p\">()</span>\n<span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span>\n    <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span> \n    <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"n\">optimizer</span><span class=\"p\">,</span> \n    <span class=\"n\">loaders</span><span class=\"o\">=</span><span class=\"n\">loaders</span><span class=\"p\">,</span> \n    <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p></p>\n</details>\n<details>\n<summary>CV - classification with AutoEncoder</summary>\n<p>\n</p><pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch</span> <span class=\"kn\">import</span> <span class=\"n\">nn</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.nn</span> <span class=\"kn\">import</span> <span class=\"n\">functional</span> <span class=\"k\">as</span> <span class=\"n\">F</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.utils.data</span> <span class=\"kn\">import</span> <span class=\"n\">DataLoader</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">MNIST</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision</span> <span class=\"kn\">import</span> <span class=\"n\">transforms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst</span> <span class=\"kn\">import</span> <span class=\"n\">dl</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst.utils</span> <span class=\"kn\">import</span> <span class=\"n\">metrics</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ClassifyAE</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">in_features</span><span class=\"p\">,</span> <span class=\"n\">hid_features</span><span class=\"p\">,</span> <span class=\"n\">out_features</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">in_features</span><span class=\"p\">,</span> <span class=\"n\">hid_features</span><span class=\"p\">),</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Tanh</span><span class=\"p\">())</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">hid_features</span><span class=\"p\">,</span> <span class=\"n\">in_features</span><span class=\"p\">),</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sigmoid</span><span class=\"p\">())</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">hid_features</span><span class=\"p\">,</span> <span class=\"n\">out_features</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">y_hat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clf</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span>\n        <span class=\"n\">x_</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">x_</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">ClassifyAE</span><span class=\"p\">(</span><span class=\"mi\">28</span> <span class=\"o\">*</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.02</span><span class=\"p\">)</span>\n\n<span class=\"n\">loaders</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"train\"</span><span class=\"p\">:</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">()),</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">),</span>\n    <span class=\"s2\">\"valid\"</span><span class=\"p\">:</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">()),</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">),</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomRunner</span><span class=\"p\">(</span><span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">Runner</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_handle_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">batch</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">x_</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n        <span class=\"n\">loss_clf</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">cross_entropy</span><span class=\"p\">(</span><span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n        <span class=\"n\">loss_ae</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">mse_loss</span><span class=\"p\">(</span><span class=\"n\">x_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">loss_clf</span> <span class=\"o\">+</span> <span class=\"n\">loss_ae</span>\n        <span class=\"n\">accuracy01</span><span class=\"p\">,</span> <span class=\"n\">accuracy03</span><span class=\"p\">,</span> <span class=\"n\">accuracy05</span> <span class=\"o\">=</span> <span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">accuracy</span><span class=\"p\">(</span><span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">topk</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">batch_metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"loss_clf\"</span><span class=\"p\">:</span> <span class=\"n\">loss_clf</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"loss_ae\"</span><span class=\"p\">:</span> <span class=\"n\">loss_ae</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"loss\"</span><span class=\"p\">:</span> <span class=\"n\">loss</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy01\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy01</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy03\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy03</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy05\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy05</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">is_train_loader</span><span class=\"p\">:</span>\n            <span class=\"n\">loss</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">zero_grad</span><span class=\"p\">()</span>\n\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">CustomRunner</span><span class=\"p\">()</span>\n<span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span>\n    <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>\n    <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"n\">optimizer</span><span class=\"p\">,</span>\n    <span class=\"n\">loaders</span><span class=\"o\">=</span><span class=\"n\">loaders</span><span class=\"p\">,</span>\n    <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p></p>\n</details>\n<details>\n<summary>CV - classification with Variational AutoEncoder</summary>\n<p>\n</p><pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch</span> <span class=\"kn\">import</span> <span class=\"n\">nn</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.nn</span> <span class=\"kn\">import</span> <span class=\"n\">functional</span> <span class=\"k\">as</span> <span class=\"n\">F</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.utils.data</span> <span class=\"kn\">import</span> <span class=\"n\">DataLoader</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">MNIST</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision</span> <span class=\"kn\">import</span> <span class=\"n\">transforms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst</span> <span class=\"kn\">import</span> <span class=\"n\">dl</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst.utils</span> <span class=\"kn\">import</span> <span class=\"n\">metrics</span>\n\n<span class=\"n\">LOG_SCALE_MAX</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">LOG_SCALE_MIN</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">10</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">normal_sample</span><span class=\"p\">(</span><span class=\"n\">mu</span><span class=\"p\">,</span> <span class=\"n\">sigma</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">mu</span> <span class=\"o\">+</span> <span class=\"n\">sigma</span> <span class=\"o\">*</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn_like</span><span class=\"p\">(</span><span class=\"n\">sigma</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">normal_logprob</span><span class=\"p\">(</span><span class=\"n\">mu</span><span class=\"p\">,</span> <span class=\"n\">sigma</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">):</span>\n    <span class=\"n\">normalization_constant</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">sigma</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">))</span>\n    <span class=\"n\">square_term</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"p\">((</span><span class=\"n\">z</span> <span class=\"o\">-</span> <span class=\"n\">mu</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">sigma</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span>\n    <span class=\"n\">logprob_vec</span> <span class=\"o\">=</span> <span class=\"n\">normalization_constant</span> <span class=\"o\">+</span> <span class=\"n\">square_term</span>\n    <span class=\"n\">logprob</span> <span class=\"o\">=</span> <span class=\"n\">logprob_vec</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">logprob</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ClassifyVAE</span><span class=\"p\">(</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">in_features</span><span class=\"p\">,</span> <span class=\"n\">hid_features</span><span class=\"p\">,</span> <span class=\"n\">out_features</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">in_features</span><span class=\"p\">,</span> <span class=\"n\">hid_features</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">hid_features</span><span class=\"p\">,</span> <span class=\"n\">in_features</span><span class=\"p\">),</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sigmoid</span><span class=\"p\">())</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">hid_features</span><span class=\"p\">,</span> <span class=\"n\">out_features</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">deterministic</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">bs</span><span class=\"p\">,</span> <span class=\"n\">z_dim</span> <span class=\"o\">=</span> <span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n\n        <span class=\"n\">loc</span><span class=\"p\">,</span> <span class=\"n\">log_scale</span> <span class=\"o\">=</span> <span class=\"n\">z</span><span class=\"p\">[:,</span> <span class=\"p\">:</span><span class=\"n\">z_dim</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">z</span><span class=\"p\">[:,</span> <span class=\"n\">z_dim</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">:]</span>\n        <span class=\"n\">log_scale</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">clamp</span><span class=\"p\">(</span><span class=\"n\">log_scale</span><span class=\"p\">,</span> <span class=\"n\">LOG_SCALE_MIN</span><span class=\"p\">,</span> <span class=\"n\">LOG_SCALE_MAX</span><span class=\"p\">)</span>\n        <span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">log_scale</span><span class=\"p\">)</span>\n        <span class=\"n\">z_</span> <span class=\"o\">=</span> <span class=\"n\">loc</span> <span class=\"k\">if</span> <span class=\"n\">deterministic</span> <span class=\"k\">else</span> <span class=\"n\">normal_sample</span><span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"p\">)</span>\n        <span class=\"n\">z_logprob</span> <span class=\"o\">=</span> <span class=\"n\">normal_logprob</span><span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"n\">z_</span><span class=\"p\">)</span>\n        <span class=\"n\">z_</span> <span class=\"o\">=</span> <span class=\"n\">z_</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">bs</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">x_</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span><span class=\"p\">(</span><span class=\"n\">z_</span><span class=\"p\">)</span>\n        <span class=\"n\">y_hat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clf</span><span class=\"p\">(</span><span class=\"n\">z_</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">x_</span><span class=\"p\">,</span> <span class=\"n\">z_logprob</span><span class=\"p\">,</span> <span class=\"n\">loc</span><span class=\"p\">,</span> <span class=\"n\">log_scale</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">ClassifyVAE</span><span class=\"p\">(</span><span class=\"mi\">28</span> <span class=\"o\">*</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.02</span><span class=\"p\">)</span>\n\n<span class=\"n\">loaders</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"train\"</span><span class=\"p\">:</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">()),</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">),</span>\n    <span class=\"s2\">\"valid\"</span><span class=\"p\">:</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">()),</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">),</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomRunner</span><span class=\"p\">(</span><span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">Runner</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_handle_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">batch</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">x_</span><span class=\"p\">,</span> <span class=\"n\">z_logprob</span><span class=\"p\">,</span> <span class=\"n\">loc</span><span class=\"p\">,</span> <span class=\"n\">log_scale</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n        <span class=\"n\">loss_clf</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">cross_entropy</span><span class=\"p\">(</span><span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n        <span class=\"n\">loss_ae</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">mse_loss</span><span class=\"p\">(</span><span class=\"n\">x_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">loss_kld</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"n\">log_scale</span> <span class=\"o\">-</span> <span class=\"n\">loc</span><span class=\"o\">.</span><span class=\"n\">pow</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">log_scale</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">())</span> <span class=\"o\">*</span> <span class=\"mf\">0.1</span>\n        <span class=\"n\">loss_logprob</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">z_logprob</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">0.01</span>\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">loss_clf</span> <span class=\"o\">+</span> <span class=\"n\">loss_ae</span> <span class=\"o\">+</span> <span class=\"n\">loss_kld</span> <span class=\"o\">+</span> <span class=\"n\">loss_logprob</span>\n        <span class=\"n\">accuracy01</span><span class=\"p\">,</span> <span class=\"n\">accuracy03</span><span class=\"p\">,</span> <span class=\"n\">accuracy05</span> <span class=\"o\">=</span> <span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">accuracy</span><span class=\"p\">(</span><span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">topk</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">batch_metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"loss_clf\"</span><span class=\"p\">:</span> <span class=\"n\">loss_clf</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"loss_ae\"</span><span class=\"p\">:</span> <span class=\"n\">loss_ae</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"loss_kld\"</span><span class=\"p\">:</span> <span class=\"n\">loss_kld</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"loss_logprob\"</span><span class=\"p\">:</span> <span class=\"n\">loss_logprob</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"loss\"</span><span class=\"p\">:</span> <span class=\"n\">loss</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy01\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy01</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy03\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy03</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy05\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy05</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">is_train_loader</span><span class=\"p\">:</span>\n            <span class=\"n\">loss</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">zero_grad</span><span class=\"p\">()</span>\n\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">CustomRunner</span><span class=\"p\">()</span>\n<span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span>\n    <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>\n    <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"n\">optimizer</span><span class=\"p\">,</span>\n    <span class=\"n\">loaders</span><span class=\"o\">=</span><span class=\"n\">loaders</span><span class=\"p\">,</span>\n    <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p></p>\n</details>\n<details>\n<summary>CV - segmentation with classification auxiliary task</summary>\n<p>\n</p><pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch</span> <span class=\"kn\">import</span> <span class=\"n\">nn</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.nn</span> <span class=\"kn\">import</span> <span class=\"n\">functional</span> <span class=\"k\">as</span> <span class=\"n\">F</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.utils.data</span> <span class=\"kn\">import</span> <span class=\"n\">DataLoader</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">MNIST</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision</span> <span class=\"kn\">import</span> <span class=\"n\">transforms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst</span> <span class=\"kn\">import</span> <span class=\"n\">dl</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst.utils</span> <span class=\"kn\">import</span> <span class=\"n\">metrics</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ClassifyUnet</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">in_channels</span><span class=\"p\">,</span> <span class=\"n\">in_hw</span><span class=\"p\">,</span> <span class=\"n\">out_features</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Conv2d</span><span class=\"p\">(</span><span class=\"n\">in_channels</span><span class=\"p\">,</span> <span class=\"n\">in_channels</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Tanh</span><span class=\"p\">())</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Conv2d</span><span class=\"p\">(</span><span class=\"n\">in_channels</span><span class=\"p\">,</span> <span class=\"n\">in_channels</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">in_channels</span> <span class=\"o\">*</span> <span class=\"n\">in_hw</span> <span class=\"o\">*</span> <span class=\"n\">in_hw</span><span class=\"p\">,</span> <span class=\"n\">out_features</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">z_</span> <span class=\"o\">=</span> <span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">y_hat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clf</span><span class=\"p\">(</span><span class=\"n\">z_</span><span class=\"p\">)</span>\n        <span class=\"n\">x_</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">x_</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">ClassifyUnet</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.02</span><span class=\"p\">)</span>\n\n<span class=\"n\">loaders</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"train\"</span><span class=\"p\">:</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">()),</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">),</span>\n    <span class=\"s2\">\"valid\"</span><span class=\"p\">:</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">()),</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">),</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomRunner</span><span class=\"p\">(</span><span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">Runner</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_handle_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">batch</span>\n        <span class=\"n\">x_noise</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">rand_like</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">clamp_</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">x_</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">x_noise</span><span class=\"p\">)</span>\n\n        <span class=\"n\">loss_clf</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">cross_entropy</span><span class=\"p\">(</span><span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n        <span class=\"n\">iou</span> <span class=\"o\">=</span> <span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">iou</span><span class=\"p\">(</span><span class=\"n\">x_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">loss_iou</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">iou</span>\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">loss_clf</span> <span class=\"o\">+</span> <span class=\"n\">loss_iou</span>\n        <span class=\"n\">accuracy01</span><span class=\"p\">,</span> <span class=\"n\">accuracy03</span><span class=\"p\">,</span> <span class=\"n\">accuracy05</span> <span class=\"o\">=</span> <span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">accuracy</span><span class=\"p\">(</span><span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">topk</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">batch_metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"loss_clf\"</span><span class=\"p\">:</span> <span class=\"n\">loss_clf</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"loss_iou\"</span><span class=\"p\">:</span> <span class=\"n\">loss_iou</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"loss\"</span><span class=\"p\">:</span> <span class=\"n\">loss</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"iou\"</span><span class=\"p\">:</span> <span class=\"n\">iou</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy01\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy01</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy03\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy03</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy05\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy05</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">is_train_loader</span><span class=\"p\">:</span>\n            <span class=\"n\">loss</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">zero_grad</span><span class=\"p\">()</span>\n\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">CustomRunner</span><span class=\"p\">()</span>\n<span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span>\n    <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span> \n    <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"n\">optimizer</span><span class=\"p\">,</span> \n    <span class=\"n\">loaders</span><span class=\"o\">=</span><span class=\"n\">loaders</span><span class=\"p\">,</span> \n    <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p></p>\n</details>\n<details>\n<summary>GAN - MNIST, flatten version</summary>\n<p>\n</p><pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch</span> <span class=\"kn\">import</span> <span class=\"n\">nn</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.nn</span> <span class=\"kn\">import</span> <span class=\"n\">functional</span> <span class=\"k\">as</span> <span class=\"n\">F</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.utils.data</span> <span class=\"kn\">import</span> <span class=\"n\">DataLoader</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">MNIST</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision</span> <span class=\"kn\">import</span> <span class=\"n\">transforms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst</span> <span class=\"kn\">import</span> <span class=\"n\">dl</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst.contrib.nn.modules</span> <span class=\"kn\">import</span> <span class=\"n\">GlobalMaxPool2d</span><span class=\"p\">,</span> <span class=\"n\">Flatten</span><span class=\"p\">,</span> <span class=\"n\">Lambda</span>\n\n<span class=\"n\">latent_dim</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>\n<span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span>\n    <span class=\"c1\"># We want to generate 128 coefficients to reshape into a 7x7x128 map</span>\n    <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">128</span> <span class=\"o\">*</span> <span class=\"mi\">7</span> <span class=\"o\">*</span> <span class=\"mi\">7</span><span class=\"p\">),</span>\n    <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">LeakyReLU</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n    <span class=\"n\">Lambda</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)),</span>\n    <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ConvTranspose2d</span><span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n    <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">LeakyReLU</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n    <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ConvTranspose2d</span><span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n    <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">LeakyReLU</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n    <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Conv2d</span><span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">),</span>\n    <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sigmoid</span><span class=\"p\">(),</span>\n<span class=\"p\">)</span>\n<span class=\"n\">discriminator</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span>\n    <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Conv2d</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n    <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">LeakyReLU</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n    <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Conv2d</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n    <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">LeakyReLU</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n    <span class=\"n\">GlobalMaxPool2d</span><span class=\"p\">(),</span>\n    <span class=\"n\">Flatten</span><span class=\"p\">(),</span>\n    <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"generator\"</span><span class=\"p\">:</span> <span class=\"n\">generator</span><span class=\"p\">,</span> <span class=\"s2\">\"discriminator\"</span><span class=\"p\">:</span> <span class=\"n\">discriminator</span><span class=\"p\">}</span>\n<span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"generator\"</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"n\">betas</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.999</span><span class=\"p\">)),</span>\n    <span class=\"s2\">\"discriminator\"</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">discriminator</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"n\">betas</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.999</span><span class=\"p\">)),</span>\n<span class=\"p\">}</span>\n<span class=\"n\">loaders</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"train\"</span><span class=\"p\">:</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">()),</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">),</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomRunner</span><span class=\"p\">(</span><span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">Runner</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_handle_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">):</span>\n        <span class=\"n\">real_images</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">batch</span>\n        <span class=\"n\">batch_metrics</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"c1\"># Sample random points in the latent space</span>\n        <span class=\"n\">batch_size</span> <span class=\"o\">=</span> <span class=\"n\">real_images</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">random_latent_vectors</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"n\">latent_dim</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Decode them to fake images</span>\n        <span class=\"n\">generated_images</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">[</span><span class=\"s2\">\"generator\"</span><span class=\"p\">](</span><span class=\"n\">random_latent_vectors</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">detach</span><span class=\"p\">()</span>\n        <span class=\"c1\"># Combine them with real images</span>\n        <span class=\"n\">combined_images</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"p\">([</span><span class=\"n\">generated_images</span><span class=\"p\">,</span> <span class=\"n\">real_images</span><span class=\"p\">])</span>\n\n        <span class=\"c1\"># Assemble labels discriminating real from fake images</span>\n        <span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"p\">([</span>\n            <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">((</span><span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)),</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n        <span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Add random noise to the labels - important trick!</span>\n        <span class=\"n\">labels</span> <span class=\"o\">+=</span> <span class=\"mf\">0.05</span> <span class=\"o\">*</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Train the discriminator</span>\n        <span class=\"n\">predictions</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">[</span><span class=\"s2\">\"discriminator\"</span><span class=\"p\">](</span><span class=\"n\">combined_images</span><span class=\"p\">)</span>\n        <span class=\"n\">batch_metrics</span><span class=\"p\">[</span><span class=\"s2\">\"loss_discriminator\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> \\\n          <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">binary_cross_entropy_with_logits</span><span class=\"p\">(</span><span class=\"n\">predictions</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Sample random points in the latent space</span>\n        <span class=\"n\">random_latent_vectors</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"n\">latent_dim</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Assemble labels that say \"all real images\"</span>\n        <span class=\"n\">misleading_labels</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Train the generator</span>\n        <span class=\"n\">generated_images</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">[</span><span class=\"s2\">\"generator\"</span><span class=\"p\">](</span><span class=\"n\">random_latent_vectors</span><span class=\"p\">)</span>\n        <span class=\"n\">predictions</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">[</span><span class=\"s2\">\"discriminator\"</span><span class=\"p\">](</span><span class=\"n\">generated_images</span><span class=\"p\">)</span>\n        <span class=\"n\">batch_metrics</span><span class=\"p\">[</span><span class=\"s2\">\"loss_generator\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> \\\n          <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">binary_cross_entropy_with_logits</span><span class=\"p\">(</span><span class=\"n\">predictions</span><span class=\"p\">,</span> <span class=\"n\">misleading_labels</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">batch_metrics</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">batch_metrics</span><span class=\"p\">)</span>\n\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">CustomRunner</span><span class=\"p\">()</span>\n<span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span>\n    <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span> \n    <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"n\">optimizer</span><span class=\"p\">,</span>\n    <span class=\"n\">loaders</span><span class=\"o\">=</span><span class=\"n\">loaders</span><span class=\"p\">,</span>\n    <span class=\"n\">callbacks</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">OptimizerCallback</span><span class=\"p\">(</span>\n            <span class=\"n\">optimizer_key</span><span class=\"o\">=</span><span class=\"s2\">\"generator\"</span><span class=\"p\">,</span> \n            <span class=\"n\">metric_key</span><span class=\"o\">=</span><span class=\"s2\">\"loss_generator\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">OptimizerCallback</span><span class=\"p\">(</span>\n            <span class=\"n\">optimizer_key</span><span class=\"o\">=</span><span class=\"s2\">\"discriminator\"</span><span class=\"p\">,</span> \n            <span class=\"n\">metric_key</span><span class=\"o\">=</span><span class=\"s2\">\"loss_discriminator\"</span>\n        <span class=\"p\">),</span>\n    <span class=\"p\">],</span>\n    <span class=\"n\">main_metric</span><span class=\"o\">=</span><span class=\"s2\">\"loss_generator\"</span><span class=\"p\">,</span>\n    <span class=\"n\">num_epochs</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span>\n    <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">logdir</span><span class=\"o\">=</span><span class=\"s2\">\"./logs_gan\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p></p>\n</details>\n<details>\n<summary>ML - Linear Regression is my profession (distributed version)</summary>\n<p>\n</p><pre><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.utils.data</span> <span class=\"kn\">import</span> <span class=\"n\">TensorDataset</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst.dl</span> <span class=\"kn\">import</span> <span class=\"n\">SupervisedRunner</span><span class=\"p\">,</span> <span class=\"n\">utils</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">datasets_fn</span><span class=\"p\">(</span><span class=\"n\">num_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mf\">1e4</span><span class=\"p\">),</span> <span class=\"n\">num_features</span><span class=\"p\">)</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n    <span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">TensorDataset</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"train\"</span><span class=\"p\">:</span> <span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"s2\">\"valid\"</span><span class=\"p\">:</span> <span class=\"n\">dataset</span><span class=\"p\">}</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">train</span><span class=\"p\">():</span>\n    <span class=\"n\">num_features</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mf\">1e1</span><span class=\"p\">)</span>\n    <span class=\"c1\"># model, criterion, optimizer, scheduler</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">num_features</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">criterion</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MSELoss</span><span class=\"p\">()</span>\n    <span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">())</span>\n    <span class=\"n\">scheduler</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">lr_scheduler</span><span class=\"o\">.</span><span class=\"n\">MultiStepLR</span><span class=\"p\">(</span><span class=\"n\">optimizer</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>\n\n    <span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">SupervisedRunner</span><span class=\"p\">()</span>\n    <span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span>\n        <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>\n        <span class=\"n\">datasets</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">\"batch_size\"</span><span class=\"p\">:</span> <span class=\"mi\">32</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"num_workers\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"get_datasets_fn\"</span><span class=\"p\">:</span> <span class=\"n\">datasets_fn</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"num_features\"</span><span class=\"p\">:</span> <span class=\"n\">num_features</span><span class=\"p\">,</span>  <span class=\"c1\"># will be passed to datasets_fn</span>\n        <span class=\"p\">},</span>\n        <span class=\"n\">criterion</span><span class=\"o\">=</span><span class=\"n\">criterion</span><span class=\"p\">,</span>\n        <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"n\">optimizer</span><span class=\"p\">,</span>\n        <span class=\"n\">scheduler</span><span class=\"o\">=</span><span class=\"n\">scheduler</span><span class=\"p\">,</span>\n        <span class=\"n\">logdir</span><span class=\"o\">=</span><span class=\"s2\">\"./logs/example_distributed_ml\"</span><span class=\"p\">,</span>\n        <span class=\"n\">num_epochs</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span>\n        <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">distributed</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">distributed_cmd_run</span><span class=\"p\">(</span><span class=\"n\">train</span><span class=\"p\">)</span>\n</pre>\n<p></p>\n</details>\n<details>\n<summary>CV - classification with AutoEncoder (distributed version)</summary>\n<p>\n</p><pre><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch</span> <span class=\"kn\">import</span> <span class=\"n\">nn</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch.nn</span> <span class=\"kn\">import</span> <span class=\"n\">functional</span> <span class=\"k\">as</span> <span class=\"n\">F</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">MNIST</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision</span> <span class=\"kn\">import</span> <span class=\"n\">transforms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst</span> <span class=\"kn\">import</span> <span class=\"n\">dl</span><span class=\"p\">,</span> <span class=\"n\">utils</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catalyst.utils</span> <span class=\"kn\">import</span> <span class=\"n\">metrics</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ClassifyAE</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">in_features</span><span class=\"p\">,</span> <span class=\"n\">hid_features</span><span class=\"p\">,</span> <span class=\"n\">out_features</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">in_features</span><span class=\"p\">,</span> <span class=\"n\">hid_features</span><span class=\"p\">),</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Tanh</span><span class=\"p\">())</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">hid_features</span><span class=\"p\">,</span> <span class=\"n\">in_features</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">hid_features</span><span class=\"p\">,</span> <span class=\"n\">out_features</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">y_hat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clf</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span>\n        <span class=\"n\">x_</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">x_</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomRunner</span><span class=\"p\">(</span><span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">Runner</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_handle_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">batch</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">x_</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n        <span class=\"n\">loss_clf</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">cross_entropy</span><span class=\"p\">(</span><span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n        <span class=\"n\">loss_ae</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">mse_loss</span><span class=\"p\">(</span><span class=\"n\">x_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">loss_clf</span> <span class=\"o\">+</span> <span class=\"n\">loss_ae</span>\n        <span class=\"n\">accuracy01</span><span class=\"p\">,</span> <span class=\"n\">accuracy03</span><span class=\"p\">,</span> <span class=\"n\">accuracy05</span> <span class=\"o\">=</span> <span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">accuracy</span><span class=\"p\">(</span><span class=\"n\">y_hat</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">topk</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">batch_metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"loss_clf\"</span><span class=\"p\">:</span> <span class=\"n\">loss_clf</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"loss_ae\"</span><span class=\"p\">:</span> <span class=\"n\">loss_ae</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"loss\"</span><span class=\"p\">:</span> <span class=\"n\">loss</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy01\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy01</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy03\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy03</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"accuracy05\"</span><span class=\"p\">:</span> <span class=\"n\">accuracy05</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">is_train_loader</span><span class=\"p\">:</span>\n            <span class=\"n\">loss</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">zero_grad</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">datasets_fn</span><span class=\"p\">():</span>\n    <span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"train\"</span><span class=\"p\">:</span> <span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"s2\">\"valid\"</span><span class=\"p\">:</span> <span class=\"n\">dataset</span><span class=\"p\">}</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">train</span><span class=\"p\">():</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">ClassifyAE</span><span class=\"p\">(</span><span class=\"mi\">28</span> <span class=\"o\">*</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.02</span><span class=\"p\">)</span>\n\n    <span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">CustomRunner</span><span class=\"p\">()</span>\n    <span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span>\n        <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>\n        <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"n\">optimizer</span><span class=\"p\">,</span>\n        <span class=\"n\">datasets</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">\"batch_size\"</span><span class=\"p\">:</span> <span class=\"mi\">32</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"num_workers\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"get_datasets_fn\"</span><span class=\"p\">:</span> <span class=\"n\">datasets_fn</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"n\">logdir</span><span class=\"o\">=</span><span class=\"s2\">\"./logs/distributed_ae\"</span><span class=\"p\">,</span>\n        <span class=\"n\">num_epochs</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span>\n        <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">distributed_cmd_run</span><span class=\"p\">(</span><span class=\"n\">train</span><span class=\"p\">)</span>\n</pre>\n<p></p>\n</details>\n<h3>Features</h3>\n<ul>\n<li>Universal train/inference loop.</li>\n<li>Configuration files for model/data hyperparameters.</li>\n<li>Reproducibility \u2013 all source code and environment variables will be saved.</li>\n<li>Callbacks \u2013 reusable train/inference pipeline parts with easy customization.</li>\n<li>Training stages support.</li>\n<li>Deep Learning best practices - SWA, AdamW, Ranger optimizer, OneCycle, and more.</li>\n<li>Developments best practices - fp16 support, distributed training, slurm.</li>\n</ul>\n<h3>Structure</h3>\n<ul>\n<li><strong>contrib</strong> - additional modules contributed by Catalyst users.</li>\n<li><strong>core</strong> - framework core with main abstractions -\nExperiment, Runner, Callback and State.</li>\n<li><strong>data</strong> - useful tools and scripts for data processing.</li>\n<li><strong>dl</strong> \u2013 runner for training and inference,\nall of the classic ML and CV/NLP/RecSys metrics\nand a variety of callbacks for training, validation\nand inference of neural networks.</li>\n<li><strong>utils</strong> - typical utils for Deep Learning research.</li>\n</ul>\n<h3>Tests</h3>\n<p>All the Catalyst code is <a href=\"./tests\" rel=\"nofollow\">tested rigorously with every new PR</a>.</p>\n<p>In fact, we train a number of different models for various of tasks -\nimage classification, image segmentation, text classification, GAN training.\nDuring the tests, we compare their convergence metrics in order to verify\nthe correctness of the training procedure and its reproducibility.</p>\n<p>Overall, Catalyst guarantees fully tested, correct and reproducible\nbest practices for the automated parts.</p>\n<h2>Catalyst</h2>\n<h3>Tutorials</h3>\n<ul>\n<li><a href=\"./examples/notebooks/customizing_what_happens_in_train.ipynb\" rel=\"nofollow\">Customizing what happens in <code>train</code></a> <a href=\"https://colab.research.google.com/github/catalyst-team/catalyst/blob/master/examples/notebooks/customizing_what_happens_in_train.ipynb\" rel=\"nofollow\"><img alt=\"Open In Colab\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/74d996556a82b2f1dd5252d2fd8bead60f9e9d21/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667\"></a></li>\n<li><a href=\"./examples/notebooks/demo.ipynb\" rel=\"nofollow\">Demo with minimal examples</a> for ML, CV, NLP, GANs and RecSys <a href=\"https://colab.research.google.com/github/catalyst-team/catalyst/blob/master/examples/notebooks/demo.ipynb\" rel=\"nofollow\"><img alt=\"Open In Colab\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/74d996556a82b2f1dd5252d2fd8bead60f9e9d21/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667\"></a></li>\n<li>Detailed <a href=\"./examples/notebooks/classification-tutorial.ipynb\" rel=\"nofollow\">classification tutorial</a> <a href=\"https://colab.research.google.com/github/catalyst-team/catalyst/blob/master/examples/notebooks/classification-tutorial.ipynb\" rel=\"nofollow\"><img alt=\"Open In Colab\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/74d996556a82b2f1dd5252d2fd8bead60f9e9d21/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667\"></a></li>\n<li>Advanced <a href=\"./examples/notebooks/segmentation-tutorial.ipynb\" rel=\"nofollow\">segmentation tutorial</a> <a href=\"https://colab.research.google.com/github/catalyst-team/catalyst/blob/master/examples/notebooks/segmentation-tutorial.ipynb\" rel=\"nofollow\"><img alt=\"Open In Colab\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/74d996556a82b2f1dd5252d2fd8bead60f9e9d21/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667\"></a></li>\n<li>Comprehensive <a href=\"https://github.com/catalyst-team/classification\" rel=\"nofollow\">classification pipeline</a></li>\n<li>Binary and semantic <a href=\"https://github.com/catalyst-team/segmentation\" rel=\"nofollow\">segmentation pipeline</a></li>\n<li><a href=\"https://evilmartians.com/chronicles/beyond-fashion-deep-learning-with-catalyst\" rel=\"nofollow\">Beyond fashion: Deep Learning with Catalyst (Config API)</a></li>\n<li><a href=\"https://github.com/Bekovmi/Segmentation_tutorial\" rel=\"nofollow\">Tutorial from Notebook API to Config API (RU)</a></li>\n</ul>\n<p>API documentation and an overview of the library can be found here\n<a href=\"https://catalyst-team.github.io/catalyst/index.html\" rel=\"nofollow\"><img alt=\"Docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f712f518cff83ecc4642c9ab50f8e76d21316e5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e2e7376673f6c6162656c3d646f63732675726c3d6874747073253341253246253246707970692e6f726725324670797069253246636174616c7973742532466a736f6e2671756572793d2532342e696e666f2e76657273696f6e26636f6c6f72423d627269676874677265656e267072656669783d76\"></a>. <br>\nIn the <strong><a href=\"examples\" rel=\"nofollow\">examples folder</a></strong>\nof the repository, you can find advanced tutorials and Catalyst best practices.</p>\n<h3>Guides</h3>\n<ul>\n<li><a href=\"https://catalyst-team.github.io/catalyst/info/distributed.html\" rel=\"nofollow\">Distributed training best practices</a></li>\n</ul>\n<h3>Projects</h3>\n<ul>\n<li><a href=\"https://github.com/ngxbac/Kaggle-QuickDraw\" rel=\"nofollow\">Kaggle Quick, Draw! Doodle Recognition Challenge</a> - 11th place solution</li>\n<li><a href=\"https://github.com/Scitator/neurips-18-prosthetics-challenge\" rel=\"nofollow\">Catalyst.RL - NeurIPS 2018: AI for Prosthetics Challenge</a> \u2013 3rd place solution</li>\n<li><a href=\"https://github.com/BloodAxe/Catalyst-CamVid-Segmentation-Example\" rel=\"nofollow\">CamVid Segmentation Example</a> - Example of semantic segmentation for CamVid dataset</li>\n<li><a href=\"https://www.kaggle.com/artgor/segmentation-in-pytorch-using-convenient-tools/\" rel=\"nofollow\">Notebook API tutorial for segmentation in Understanding Clouds from Satellite Images Competition</a></li>\n<li><a href=\"https://github.com/ngxbac/Kaggle-Google-Landmark-2019\" rel=\"nofollow\">Kaggle Google Landmark 2019</a> - 30th place solution</li>\n<li><a href=\"https://github.com/neuromation/ml-recipe-hier-attention\" rel=\"nofollow\">Hierarchical attention for sentiment classification with visualization</a></li>\n<li><a href=\"https://github.com/neuromation/ml-recipe-bone-age\" rel=\"nofollow\">Pediatric bone age assessment</a></li>\n<li><a href=\"https://github.com/ngxbac/Kaggle-iMet\" rel=\"nofollow\">iMet Collection 2019 - FGVC6</a> - 24th place solution</li>\n<li><a href=\"https://github.com/bagxi/idrnd-anti-spoofing-challenge-solution\" rel=\"nofollow\">ID R&amp;D Anti-spoofing Challenge</a> - 14th place solution</li>\n<li><a href=\"https://github.com/ngxbac/GAIN\" rel=\"nofollow\">Implementation of paper \"Tell Me Where to Look: Guided Attention Inference Network\"</a></li>\n<li><a href=\"https://github.com/Scitator/learning-to-move-starter-kit\" rel=\"nofollow\">Catalyst.RL - NeurIPS 2019: Learn to Move - Walk Around</a> \u2013 starter kit</li>\n<li><a href=\"https://github.com/Scitator/animal-olympics-starter-kit\" rel=\"nofollow\">Catalyst.RL - NeurIPS 2019: Animal-AI Olympics</a> - starter kit</li>\n<li><a href=\"https://github.com/ngxbac/Kaggle-Recursion-Cellular\" rel=\"nofollow\">NeurIPS 2019: Recursion Cellular Image Classification</a> - 4th place solution</li>\n<li><a href=\"https://github.com/ngxbac/StructSeg2019\" rel=\"nofollow\">MICCAI 2019: Automatic Structure Segmentation for Radiotherapy Planning Challenge 2019</a>\n<ul>\n<li>3rd place solution for <code>Task 3: Organ-at-risk segmentation from chest CT scans</code></li>\n<li>and 4th place solution for <code>Task 4: Gross Target Volume segmentation of lung cancer</code></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/bamps53/kaggle-severstal\" rel=\"nofollow\">Kaggle Seversteal steel detection</a> - 5th place solution</li>\n<li><a href=\"https://github.com/yukkyo/PyTorch-FilterResponseNormalizationLayer\" rel=\"nofollow\">Implementation of paper \"Filter Response Normalization Layer: Eliminating Batch Dependence in the Training of Deep Neural Networks\"</a></li>\n<li><a href=\"https://github.com/ngxbac/Kaggle-RSNA\" rel=\"nofollow\">RSNA Intracranial Hemorrhage Detection</a> - 5th place solution</li>\n<li><a href=\"https://github.com/ptJexio/Speaker-Recognition\" rel=\"nofollow\">Implementation of paper \"Utterance-level Aggregation For Speaker Recognition In The Wild\"</a></li>\n<li><a href=\"https://github.com/BloodAxe/Kaggle-2019-Blindness-Detection\" rel=\"nofollow\">APTOS 2019 Blindness Detection</a> \u2013 7th place solution</li>\n<li><a href=\"https://github.com/Scitator/run-skeleton-run-in-3d\" rel=\"nofollow\">Catalyst.RL - NeurIPS 2019: Learn to Move - Walk Around</a> \u2013 2nd place solution</li>\n<li><a href=\"https://github.com/BloodAxe/xView2-Solution\" rel=\"nofollow\">xView2 Damage Assessment Challenge</a> - 3rd place solution</li>\n<li><a href=\"https://github.com/BloodAxe/Catalyst-Inria-Segmentation-Example\" rel=\"nofollow\">Inria Segmentation Example</a> - An example of training segmentation model for Inria Sattelite Segmentation Challenge</li>\n<li><a href=\"https://github.com/ternaus/iglovikov_segmentation\" rel=\"nofollow\">iglovikov_segmentation</a> - Semantic segmentation pipeline using Catalyst</li>\n</ul>\n<h3>Tools and pipelines</h3>\n<ul>\n<li><a href=\"https://github.com/Scitator/catalyst-rl-framework\" rel=\"nofollow\">Catalyst.RL</a> \u2013 A Distributed Framework for Reproducible RL Research by <a href=\"https://github.com/Scitator\" rel=\"nofollow\">Scitator</a></li>\n<li><a href=\"https://github.com/catalyst-team/classification\" rel=\"nofollow\">Catalyst.Classification</a> - Comprehensive classification pipeline with Pseudo-Labeling by <a href=\"https://github.com/bagxi\" rel=\"nofollow\">Bagxi</a> and <a href=\"https://github.com/pdanilov\" rel=\"nofollow\">Pdanilov</a></li>\n<li><a href=\"https://github.com/catalyst-team/segmentation\" rel=\"nofollow\">Catalyst.Segmentation</a> - Segmentation pipelines - binary, semantic and instance, by <a href=\"https://github.com/bagxi\" rel=\"nofollow\">Bagxi</a></li>\n<li><a href=\"https://github.com/catalyst-team/detection\" rel=\"nofollow\">Catalyst.Detection</a> - Anchor-free detection pipeline by <a href=\"https://github.com/Avi2011class\" rel=\"nofollow\">Avi2011class</a> and <a href=\"https://github.com/TezRomacH\" rel=\"nofollow\">TezRomacH</a></li>\n<li><a href=\"https://github.com/catalyst-team/gan\" rel=\"nofollow\">Catalyst.GAN</a> - Reproducible GANs pipelines by <a href=\"https://github.com/asmekal\" rel=\"nofollow\">Asmekal</a></li>\n<li><a href=\"https://github.com/catalyst-team/neuro\" rel=\"nofollow\">Catalyst.Neuro</a> - Brain image analysis project, in collaboration with <a href=\"https://trendscenter.org\" rel=\"nofollow\">TReNDS Center</a></li>\n<li><a href=\"https://github.com/catalyst-team/mlcomp\" rel=\"nofollow\">MLComp</a> \u2013 distributed DAG framework for machine learning with UI by <a href=\"https://github.com/lightforever\" rel=\"nofollow\">Lightforever</a></li>\n<li><a href=\"https://github.com/BloodAxe/pytorch-toolbelt\" rel=\"nofollow\">Pytorch toolbelt</a> - PyTorch extensions for fast R&amp;D prototyping and Kaggle farming by <a href=\"https://github.com/BloodAxe\" rel=\"nofollow\">BloodAxe</a></li>\n<li><a href=\"https://github.com/ternaus/iglovikov_helper_functions\" rel=\"nofollow\">Helper functions</a> - An unstructured set of helper functions by <a href=\"https://github.com/ternaus\" rel=\"nofollow\">Ternaus</a></li>\n</ul>\n<h3>Talks and videos</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/channel/UC39Z1Cwr9n8DVpuXcsyi9FQ\" rel=\"nofollow\">Catalyst-team YouTube channel</a></li>\n<li><a href=\"https://docs.google.com/presentation/d/1U6VWIwQnQDGtu6a1x61tt3AlxCJ1-A1EYKd8lR9tKos/edit?usp=sharing\" rel=\"nofollow\">Catalyst.RL \u2013 reproducible RL research framework</a> at <a href=\"https://nastachku.ru/archive/2019_innopolis/index.php?dispatch=products.view&amp;product_id=3650\" rel=\"nofollow\">Stachka</a></li>\n<li><a href=\"https://youtu.be/EfG8iwFNdWg\" rel=\"nofollow\">Catalyst.DL \u2013 reproducible DL research framework (rus)</a> and <a href=\"https://docs.google.com/presentation/d/1TL7N_H31zDFShVbKzLfMC3DYw4e1psj6ScDN8spKQlk/edit?usp=sharing\" rel=\"nofollow\">slides (eng)</a> at <a href=\"http://rifvrn.ru/program/catalyst-dl-fast-reproducible-dl-4-html\" rel=\"nofollow\">RIF</a></li>\n<li><a href=\"https://youtu.be/7xyMP_5eA8c?t=8964\" rel=\"nofollow\">Catalyst.DL \u2013 reproducible DL research framework (rus)</a> and <a href=\"https://docs.google.com/presentation/d/1XGubfTWvpiJrMyKNx2G6GtAq68y2__sDmx30eSdSRZs/edit?usp=sharing\" rel=\"nofollow\">slides (eng)</a> at <a href=\"https://ai-journey.ru/conference-moscow/broadcast?page=2&amp;per-page=12\" rel=\"nofollow\">AI-Journey</a></li>\n<li><a href=\"https://docs.google.com/presentation/d/1fbF4PMl092kIdjJTw3olR3wI2cl_P2ttN3c9-WTh1gA/edit?usp=sharing\" rel=\"nofollow\">Catalyst.DL \u2013 fast &amp; reproducible DL</a> at <a href=\"https://datastart.ru/msk-autumn-2019/\" rel=\"nofollow\">Datastart</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=PprDcJHrFdg&amp;feature=youtu.be&amp;t=4020\" rel=\"nofollow\">Catalyst.RL - NeurIPS 2019: Learn to Move - Walk Around</a> and <a href=\"https://docs.google.com/presentation/d/1g4g_Rxp9M3xAHwpp_hNzC87L9Gvum3H09g2DIQn1Taw/edit?usp=sharing\" rel=\"nofollow\">slides (eng)</a> at RL reading group Meetup</li>\n<li><a href=\"https://youtu.be/Rmo2rx5V3v8?t=77\" rel=\"nofollow\">Catalyst \u2013 accelerated DL &amp; RL (rus)</a> and <a href=\"https://docs.google.com/presentation/d/1xMZMjSwJfM5mZMK7pHp6hVI0FxPyZOpRtBZ0J2l1AaY/edit?fbclid=IwAR1q4XJVqYdD-a5oO2n68Y4xHvChIeOSjCSmlUYqrjIzneYpehzF8PiNdMc#slide=id.g75815b5293_0_202\" rel=\"nofollow\">slides (eng)</a> at <a href=\"https://www.facebook.com/groups/475428499888062/\" rel=\"nofollow\">Facebook Developer Circle: Moscow | ML &amp; AI Meetup</a></li>\n<li><a href=\"https://docs.google.com/presentation/d/14UzYAURBulLjuCbQRnNeROhZ74h51-o460DPTkKMrwo/edit?usp=sharing\" rel=\"nofollow\">Catalyst.RL - Learn to Move - Walk Around 2nd place solution</a> at NeurIPS competition track</li>\n<li><a href=\"https://docs.google.com/presentation/d/1A-kwek7USA-j2Nn4n8PmLUQ1PdeUzkkViwXST7RyL-w/edit?usp=sharing\" rel=\"nofollow\">Open Source ML 2019 edition</a> at <a href=\"https://datafest.ru/elka/\" rel=\"nofollow\">Datafest.elka</a></li>\n</ul>\n<h2>Community</h2>\n<h3>Contribution guide</h3>\n<p>We appreciate all contributions.\nIf you are planning to contribute back bug-fixes,\nplease do so without any further discussion.\nIf you plan to contribute new features, utility functions or extensions,\nplease first open an issue and discuss the feature with us.</p>\n<ul>\n<li>Please see the <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">contribution guide</a> for more information.</li>\n<li>By participating in this project, you agree to abide by its <a href=\"CODE_OF_CONDUCT.md\" rel=\"nofollow\">Code of Conduct</a>.</li>\n</ul>\n<h3>User feedback</h3>\n<p>We have created <code>catalyst.team.core@gmail.com</code> for \"user feedback\".</p>\n<ul>\n<li>If you like the project and want to say thanks, this the right place.</li>\n<li>If you would like to start a collaboration between your team and Catalyst team to do better Deep Learning R&amp;D - you are always welcome.</li>\n<li>If you just don't like Github issues and this ways suits you better - feel free to email us.</li>\n<li>Finally, if you do not like something, please, share it with us and we can see how to improve it.</li>\n</ul>\n<p>We appreciate any type of feedback. Thank you!</p>\n<h3>Acknowledgments</h3>\n<p>Since the beginning of the development of the \u0421atalyst,\na lot of people have influenced it in a lot of different ways. <br>\nHUGE THANK YOU to:</p>\n<ul>\n<li><a href=\"https://www.linkedin.com/in/yauheni-kachan/\" rel=\"nofollow\">Eugene Kachan</a> (<a href=\"https://github.com/bagxi\" rel=\"nofollow\">bagxi</a>) for many Config API improvements and CV pipelines</li>\n<li><a href=\"https://www.linkedin.com/in/artem-zolkin-b5155571/\" rel=\"nofollow\">Artem Zolkin</a> (<a href=\"https://github.com/Arquestro\" rel=\"nofollow\">arquestro</a>) for best ever documentation</li>\n<li><a href=\"https://www.linkedin.com/in/dkuryakin/\" rel=\"nofollow\">David Kuryakin</a> (<a href=\"https://github.com/dkuryakin\" rel=\"nofollow\">dkuryakin</a>) for ReAction design</li>\n<li><a href=\"https://www.linkedin.com/in/ewan-semyonov/\" rel=\"nofollow\">Evgeny Semyonov</a> (<a href=\"https://github.com/lightforever\" rel=\"nofollow\">lightforever</a>) for MLComp creation</li>\n<li><a href=\"https://www.linkedin.com/in/andrey-zharkov-8554a1153/\" rel=\"nofollow\">Andrey Zharkov</a> (<a href=\"https://github.com/asmekal\" rel=\"nofollow\">asmekal</a>) for Catalyst.GAN initiative</li>\n<li><a href=\"https://www.linkedin.com/in/roman-tezikov/\" rel=\"nofollow\">Roman Tezikov</a> (<a href=\"https://github.com/TezRomacH\" rel=\"nofollow\">tezromach</a>) for great Catalyst tutorials</li>\n<li><a href=\"https://www.facebook.com/grinchuk.alexey\" rel=\"nofollow\">Aleksey Grinchuk</a> (<a href=\"https://github.com/AlexGrinch\" rel=\"nofollow\">alexgrinch</a>) and <a href=\"https://www.linkedin.com/in/vkhrulkov/\" rel=\"nofollow\">Valentin Khrulkov</a> (<a href=\"https://github.com/KhrulkovV\" rel=\"nofollow\">khrulkovv</a>) for many RL algorithms implemented together</li>\n<li><a href=\"https://www.linkedin.com/in/alexgaziev/\" rel=\"nofollow\">Alex Gaziev</a> (<a href=\"https://github.com/gazay\" rel=\"nofollow\">gazay</a>) for a bunch of Config API improvements</li>\n<li><a href=\"https://www.linkedin.com/in/kashnitskiy/\" rel=\"nofollow\">Yury Kashnitsky</a> (<a href=\"https://github.com/Yorko\" rel=\"nofollow\">yorko</a>) for Catalyst.NLP movement</li>\n<li><a href=\"https://www.linkedin.com/in/cvtalks/\" rel=\"nofollow\">Eugene Khvedchenya</a> (<a href=\"https://github.com/BloodAxe\" rel=\"nofollow\">bloodaxe</a>) for Pytorch-toolbelt library</li>\n<li><a href=\"https://www.linkedin.com/in/bac-nguyen-xuan-70340b66/\" rel=\"nofollow\">Nguyen Xuan Bac</a> (<a href=\"https://github.com/ngxbac\" rel=\"nofollow\">ngxbac</a>) and <a href=\"https://www.linkedin.com/in/andlukyane/\" rel=\"nofollow\">Andrey Lukyanenko</a> (<a href=\"https://github.com/erlemar\" rel=\"nofollow\">erlemar</a>) for many Kaggle Catalyst-based solutions</li>\n<li><a href=\"https://www.linkedin.com/in/vsevolod-poletaev-468071165/\" rel=\"nofollow\">Vsevolod Poletaev</a> (<a href=\"https://github.com/hexfaker\" rel=\"nofollow\">hexfaker</a>) for Experiment idea and PoC</li>\n<li><a href=\"https://www.linkedin.com/in/belskikh/\" rel=\"nofollow\">Aleksandr Belskikh</a> (<a href=\"https://github.com/belskikh\" rel=\"nofollow\">belskikh</a>) for Callbacks-based system inspiration</li>\n<li><a href=\"https://www.linkedin.com/in/n01z3/\" rel=\"nofollow\">Artur Kuzin</a> (<a href=\"https://github.com/n01z3\" rel=\"nofollow\">n01z3</a>) for multi-stage pipelines proposal</li>\n<li><a href=\"https://www.linkedin.com/in/iglovikov/\" rel=\"nofollow\">Vladimir Iglovikov</a> (<a href=\"https://github.com/ternaus\" rel=\"nofollow\">ternaus</a>) for countless pieces of useful advices</li>\n<li>and <a href=\"https://www.facebook.com/istepanenko\" rel=\"nofollow\">Ivan Stepanenko</a> for awesome Catalyst.Ecosystem design</li>\n</ul>\n<h3>Trusted by</h3>\n<ul>\n<li><a href=\"https://www.awecom.com\" rel=\"nofollow\">Awecom</a></li>\n<li>Researchers@<a href=\"https://trendscenter.org\" rel=\"nofollow\">Center for Translational Research in Neuroimaging and Data Science (TReNDS)</a></li>\n<li><a href=\"https://en.dlschool.org\" rel=\"nofollow\">Deep Learning School</a></li>\n<li>Researchers@<a href=\"https://www.emory.edu\" rel=\"nofollow\">Emory University</a></li>\n<li><a href=\"https://evilmartians.com\" rel=\"nofollow\">Evil Martians</a></li>\n<li>Researchers@<a href=\"https://www.gatech.edu\" rel=\"nofollow\">Georgia Institute of Technology</a></li>\n<li>Researchers@<a href=\"https://www.gsu.edu\" rel=\"nofollow\">Georgia State University</a></li>\n<li><a href=\"http://helios.to\" rel=\"nofollow\">Helios</a></li>\n<li><a href=\"https://www.hpcdlab.com\" rel=\"nofollow\">HPCD Lab</a></li>\n<li><a href=\"https://ifarmproject.com\" rel=\"nofollow\">iFarm</a></li>\n<li><a href=\"http://kinoplan.io/\" rel=\"nofollow\">Kinoplan</a></li>\n<li>Researchers@<a href=\"https://mipt.ru/english/\" rel=\"nofollow\">Moscow Institute of Physics and Technology</a></li>\n<li><a href=\"https://neuromation.io\" rel=\"nofollow\">Neuromation</a></li>\n<li><a href=\"https://potehalabs.com/en/\" rel=\"nofollow\">Poteha Labs</a></li>\n<li><a href=\"https://provectus.com\" rel=\"nofollow\">Provectus</a></li>\n<li>Researchers@<a href=\"https://www.skoltech.ru/en\" rel=\"nofollow\">Skolkovo Institute of Science and Technology</a></li>\n<li><a href=\"https://www.softconstruct.io/\" rel=\"nofollow\">SoftConstruct</a></li>\n<li>Researchers@<a href=\"https://www.tinkoff.ru/eng/\" rel=\"nofollow\">Tinkoff</a></li>\n<li>Researchers@<a href=\"https://research.yandex.com\" rel=\"nofollow\">Yandex.Research</a></li>\n</ul>\n<h3>Supported by</h3>\n<ul>\n<li><a href=\"https://www.hostkey.com\" rel=\"nofollow\">HostKey</a></li>\n<li><a href=\"https://mipt.ru/english/\" rel=\"nofollow\">Moscow Institute of Physics and Technology</a></li>\n</ul>\n<h3>Citation</h3>\n<p>Please use this bibtex if you want to cite this repository in your publications:</p>\n<pre><code>@misc{catalyst,\n    author = {Kolesnikov, Sergey},\n    title = {Accelerated DL R&amp;D},\n    year = {2018},\n    publisher = {GitHub},\n    journal = {GitHub repository},\n    howpublished = {\\url{https://github.com/catalyst-team/catalyst}},\n}\n</code></pre>\n\n          </div>"}, "last_serial": 7186629, "releases": {"19.10": [{"comment_text": "", "digests": {"md5": "290b0d47c22803d880696f850bcf04e1", "sha256": "b94117f8a65d06cbae19651313e96c9ab93b9672bfff74cf1f110adec9416491"}, "downloads": -1, "filename": "catalyst-19.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "290b0d47c22803d880696f850bcf04e1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 261436, "upload_time": "2019-10-03T08:51:13", "upload_time_iso_8601": "2019-10-03T08:51:13.734857Z", "url": "https://files.pythonhosted.org/packages/50/27/c9649d275be9db445df6740fe5566c14a32068110d3690113fc49fca15db/catalyst-19.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a26d0c773dcd8fb70ccf3db3371850d", "sha256": "b1bfba9c88a5779dc7aa18ab664d7d1a3d54fe8d7b5810b182e6cfe2a0cc656b"}, "downloads": -1, "filename": "catalyst-19.10.tar.gz", "has_sig": false, "md5_digest": "1a26d0c773dcd8fb70ccf3db3371850d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 164133, "upload_time": "2019-10-03T08:51:16", "upload_time_iso_8601": "2019-10-03T08:51:16.239609Z", "url": "https://files.pythonhosted.org/packages/2a/68/4d20e11d27f196673ffb20fd1a31777ccd95e690f9050edf12b1410a6310/catalyst-19.10.tar.gz", "yanked": false}], "19.10.1": [{"comment_text": "", "digests": {"md5": "6eef69e2874a0205f9ae3e2af890e3e0", "sha256": "9954e92f3788242bb309349942d21784153d1dcaa15ec6192c242c7836f9b029"}, "downloads": -1, "filename": "catalyst-19.10.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6eef69e2874a0205f9ae3e2af890e3e0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 268976, "upload_time": "2019-10-08T06:35:56", "upload_time_iso_8601": "2019-10-08T06:35:56.616304Z", "url": "https://files.pythonhosted.org/packages/60/9c/a478566192c3d4ea446894ad5a17a371fd53c20cd151414640a9a5bd170a/catalyst-19.10.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23ce47f6b9dad9246dfe6d7bd364c345", "sha256": "8512b4649622327be26aec234a57c8bf710467e281a91ffec1eb993bc3423b3f"}, "downloads": -1, "filename": "catalyst-19.10.1.tar.gz", "has_sig": false, "md5_digest": "23ce47f6b9dad9246dfe6d7bd364c345", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 169229, "upload_time": "2019-10-08T06:35:59", "upload_time_iso_8601": "2019-10-08T06:35:59.140998Z", "url": "https://files.pythonhosted.org/packages/b1/bd/723443e58683229b8d86c009d49d0db92fe49664156ee2a12a4d05b49199/catalyst-19.10.1.tar.gz", "yanked": false}], "19.10.2": [{"comment_text": "", "digests": {"md5": "396c8d890d90359fec067098ca65c0f2", "sha256": "fe16b3aeffaef9d0bc1006889e1a37308db5ec90521f7b72a1bc28a8c12130c6"}, "downloads": -1, "filename": "catalyst-19.10.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "396c8d890d90359fec067098ca65c0f2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 270102, "upload_time": "2019-10-14T10:51:07", "upload_time_iso_8601": "2019-10-14T10:51:07.860352Z", "url": "https://files.pythonhosted.org/packages/7f/85/4b63fc8c6aad65829424d734b1f0714eb3d723c1bb9caf6ef832c9ad4a7f/catalyst-19.10.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f761c745a59441ae0ab5ec679ff4834", "sha256": "b2a92fa8796f3fa69b1c2ecc08cd2aa26d007464de8f63d5dc9d0dd2ea1bbad4"}, "downloads": -1, "filename": "catalyst-19.10.2.tar.gz", "has_sig": false, "md5_digest": "3f761c745a59441ae0ab5ec679ff4834", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 170547, "upload_time": "2019-10-14T10:51:10", "upload_time_iso_8601": "2019-10-14T10:51:10.634645Z", "url": "https://files.pythonhosted.org/packages/13/5a/a0e1cb44a1e0a0770cad3529016343635a247ab369ac565b186628ff16b7/catalyst-19.10.2.tar.gz", "yanked": false}], "19.11": [{"comment_text": "", "digests": {"md5": "c88cee20b60268921b19ed5bb36497c6", "sha256": "595ca673b2f19ea8485d992aeb1b600cfcd9d0f08f7a9246be370d18bb4b48d5"}, "downloads": -1, "filename": "catalyst-19.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c88cee20b60268921b19ed5bb36497c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 279112, "upload_time": "2019-11-02T16:25:21", "upload_time_iso_8601": "2019-11-02T16:25:21.596498Z", "url": "https://files.pythonhosted.org/packages/2e/61/eb38fe27ba18a0852562f2ab2c2a41ab7fcacf2ab6fd0e6e287287d91a70/catalyst-19.11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d006db4d8d89ade8c679268e81ac78ee", "sha256": "3ede0135a51a8f618b14539914ebebc02a5affcd8edffe9a174c0acc7e9ca33b"}, "downloads": -1, "filename": "catalyst-19.11.tar.gz", "has_sig": false, "md5_digest": "d006db4d8d89ade8c679268e81ac78ee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 177610, "upload_time": "2019-11-02T16:25:24", "upload_time_iso_8601": "2019-11-02T16:25:24.181462Z", "url": "https://files.pythonhosted.org/packages/b6/ba/54c9fe822200ee29d4002b2d9128d9fff9310ccc63da9ecb9380a9dae8e0/catalyst-19.11.tar.gz", "yanked": false}], "19.11.1": [{"comment_text": "", "digests": {"md5": "b175c52b59352f9f787754f6f4f0aa90", "sha256": "daef94a0e45d775bd06246200ccb11428d3353e3b2a45a4409cd58f404159c10"}, "downloads": -1, "filename": "catalyst-19.11.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b175c52b59352f9f787754f6f4f0aa90", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 282608, "upload_time": "2019-11-06T17:54:28", "upload_time_iso_8601": "2019-11-06T17:54:28.227350Z", "url": "https://files.pythonhosted.org/packages/b1/63/30ed7e847c6a25e74e9618411fedccaeda137600b1580234829669d989e3/catalyst-19.11.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3678842a8c7a0ae0b77c30f6fb7743cd", "sha256": "f3ec8a9a86443477581af01b954537a2661afd3db14f2201bfb55b18b0904ecf"}, "downloads": -1, "filename": "catalyst-19.11.1.tar.gz", "has_sig": false, "md5_digest": "3678842a8c7a0ae0b77c30f6fb7743cd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 179555, "upload_time": "2019-11-06T17:54:30", "upload_time_iso_8601": "2019-11-06T17:54:30.882815Z", "url": "https://files.pythonhosted.org/packages/52/5b/f04de16d290a639acdc3f673173166427aca76437eab553d62e5aa775361/catalyst-19.11.1.tar.gz", "yanked": false}], "19.11.2": [{"comment_text": "", "digests": {"md5": "cbfb4fb57d0c846fdb749f62214514f3", "sha256": "3da310e9be1aab4469bf93daeee4ada9f2dd78065bebbbbcd48c9f1661b7ff2d"}, "downloads": -1, "filename": "catalyst-19.11.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbfb4fb57d0c846fdb749f62214514f3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 290381, "upload_time": "2019-11-11T07:58:44", "upload_time_iso_8601": "2019-11-11T07:58:44.711809Z", "url": "https://files.pythonhosted.org/packages/34/c2/1bba0179006810210b256e2201e002507e36eae121c171ea31533a87a5d3/catalyst-19.11.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98fec5775fd342f64d4a859b6ff6cca0", "sha256": "7fd22027db8c636cfbab4fef348a6d6a786aaa613c676e85987d9bafae8b5776"}, "downloads": -1, "filename": "catalyst-19.11.2.tar.gz", "has_sig": false, "md5_digest": "98fec5775fd342f64d4a859b6ff6cca0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 186076, "upload_time": "2019-11-11T07:58:46", "upload_time_iso_8601": "2019-11-11T07:58:46.981446Z", "url": "https://files.pythonhosted.org/packages/32/ed/48828f758eae46486bea6876bf9c5cd17817ddcfd89efa2446bb4dcaafc9/catalyst-19.11.2.tar.gz", "yanked": false}], "19.11.3": [{"comment_text": "", "digests": {"md5": "8c159e678ff1f821587089eb4c91ade2", "sha256": "9a3ed9f7f657fe1834e7d79b3d872370363c379c0368381bb648135295b0f150"}, "downloads": -1, "filename": "catalyst-19.11.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8c159e678ff1f821587089eb4c91ade2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 292055, "upload_time": "2019-11-15T10:32:50", "upload_time_iso_8601": "2019-11-15T10:32:50.798673Z", "url": "https://files.pythonhosted.org/packages/17/84/ae2d1d58f2c5eae168d400b9d5d51d1359a268ba213f4dfe583bb2fe2a19/catalyst-19.11.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe8ef649de2da6078700ed19ddb4946d", "sha256": "bd1e87c3f7c6c7c6d50393a29d7b354f69c1f0500deb0c9d45d197d7c00b00f7"}, "downloads": -1, "filename": "catalyst-19.11.3.tar.gz", "has_sig": false, "md5_digest": "fe8ef649de2da6078700ed19ddb4946d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 187723, "upload_time": "2019-11-15T10:32:52", "upload_time_iso_8601": "2019-11-15T10:32:52.898780Z", "url": "https://files.pythonhosted.org/packages/4a/c0/6377a005682bc428a3ac3b6141cb67d8b9ec481875f93c21dcf80fe6bff2/catalyst-19.11.3.tar.gz", "yanked": false}], "19.11.4": [{"comment_text": "", "digests": {"md5": "4ef10c99ca05f3ee9ece41e3eebee415", "sha256": "6b7d1791bb39cbf7ab0ee770e82a3fa772d7a33efddf36a194fb6db265e1b2d1"}, "downloads": -1, "filename": "catalyst-19.11.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4ef10c99ca05f3ee9ece41e3eebee415", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 297604, "upload_time": "2019-11-18T07:31:19", "upload_time_iso_8601": "2019-11-18T07:31:19.331555Z", "url": "https://files.pythonhosted.org/packages/6c/bc/7f83f34b0e035446e671ae6e44eeb435c84e559e551982f418c704f3dbc0/catalyst-19.11.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "508ef63fb68ec6741d1fad6d3b0d20f7", "sha256": "0e5923ba960a5f4424dc275b941fa77e2d9dda51aa397d42cb90b5bd47e4c4c4"}, "downloads": -1, "filename": "catalyst-19.11.4.tar.gz", "has_sig": false, "md5_digest": "508ef63fb68ec6741d1fad6d3b0d20f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 192063, "upload_time": "2019-11-18T07:31:21", "upload_time_iso_8601": "2019-11-18T07:31:21.925214Z", "url": "https://files.pythonhosted.org/packages/36/32/886beb7155c96def2cbefbff207a38f5727c8995feb9da995ac5f08837fa/catalyst-19.11.4.tar.gz", "yanked": false}], "19.11.5": [{"comment_text": "", "digests": {"md5": "5a06024a2ba726d60d3aa24c2d9dda76", "sha256": "ac85c462680f536ffb42d8fe60c3d16c6b3cd80a3e619f5e0ac508ff464d4983"}, "downloads": -1, "filename": "catalyst-19.11.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5a06024a2ba726d60d3aa24c2d9dda76", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 297304, "upload_time": "2019-11-18T20:46:05", "upload_time_iso_8601": "2019-11-18T20:46:05.714762Z", "url": "https://files.pythonhosted.org/packages/cd/41/f071c1467984df71b6105f4dd2fd2ba944984c239c5dc90d138c98aeecde/catalyst-19.11.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "facb1a6688232426842dcb84134e2b68", "sha256": "6dbe92a6ad3e6a22a1b2085a7506d829977897f7a7807b8c1f8f6cd5dddc79e5"}, "downloads": -1, "filename": "catalyst-19.11.5.tar.gz", "has_sig": false, "md5_digest": "facb1a6688232426842dcb84134e2b68", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 191831, "upload_time": "2019-11-18T20:46:07", "upload_time_iso_8601": "2019-11-18T20:46:07.805462Z", "url": "https://files.pythonhosted.org/packages/78/f7/a2365ad0cd7a39a2b8c7cd10ad311c965cd27a58e9283dd6974caaed187c/catalyst-19.11.5.tar.gz", "yanked": false}], "19.11.6": [{"comment_text": "", "digests": {"md5": "2ceaca11c3d9d4cdf20e90f03f5d2c5c", "sha256": "a9a9b86db6af81bdd32f8db95a6b4860f6a6be53c7d9842ff20847fd93b1c2c0"}, "downloads": -1, "filename": "catalyst-19.11.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2ceaca11c3d9d4cdf20e90f03f5d2c5c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 297328, "upload_time": "2019-11-23T07:10:53", "upload_time_iso_8601": "2019-11-23T07:10:53.731820Z", "url": "https://files.pythonhosted.org/packages/0c/64/9e7e14abe4afa07cfb07592e630b0e8ab86a4b7c0dc66aeece140fecd2fa/catalyst-19.11.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f7cfd5b5116a1a36645fd55c3ca36c3", "sha256": "f4d0d80f39dfa6d214cba8e6242cb8b742f42c2778251f4d2111a1828816b04c"}, "downloads": -1, "filename": "catalyst-19.11.6.tar.gz", "has_sig": false, "md5_digest": "7f7cfd5b5116a1a36645fd55c3ca36c3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 191790, "upload_time": "2019-11-23T07:10:56", "upload_time_iso_8601": "2019-11-23T07:10:56.195015Z", "url": "https://files.pythonhosted.org/packages/79/a6/4b3bcaaba33c376a347833b1423f5495f86aad38c71f907c8e399670d70e/catalyst-19.11.6.tar.gz", "yanked": false}], "19.12": [{"comment_text": "", "digests": {"md5": "b2f362b9d4cebbbb24cb248c9314bcb5", "sha256": "d0fb30c57ab45185b30b69e097d6de8951e67fc0f5eddf86f0c4c319fbf6621b"}, "downloads": -1, "filename": "catalyst-19.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b2f362b9d4cebbbb24cb248c9314bcb5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 302775, "upload_time": "2019-12-05T15:57:26", "upload_time_iso_8601": "2019-12-05T15:57:26.774036Z", "url": "https://files.pythonhosted.org/packages/bb/4d/d6684b0ab99d51b280514c90ff7e86fd85ad26008642a8bf8454eaa5a643/catalyst-19.12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81aa5cfe7d765f6b44d41ee6796cdf2c", "sha256": "0a2335bd616654d013dca113535082aa63612cdcd54b2d7449eba331d50536ab"}, "downloads": -1, "filename": "catalyst-19.12.tar.gz", "has_sig": false, "md5_digest": "81aa5cfe7d765f6b44d41ee6796cdf2c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 196339, "upload_time": "2019-12-05T15:57:31", "upload_time_iso_8601": "2019-12-05T15:57:31.502303Z", "url": "https://files.pythonhosted.org/packages/f4/a6/9666a6e37d5c8924f69dacfc77b1070aa8901e0c42769e3c82cd50445dbd/catalyst-19.12.tar.gz", "yanked": false}], "19.12.1": [{"comment_text": "", "digests": {"md5": "b012a73bc573cc7b53c1b8753b6f3367", "sha256": "201779ec6d6b282b17ff06d1d2e5dee6d97d6b20a573ed07700cdacb7fbfe980"}, "downloads": -1, "filename": "catalyst-19.12.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b012a73bc573cc7b53c1b8753b6f3367", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 304710, "upload_time": "2019-12-13T20:40:06", "upload_time_iso_8601": "2019-12-13T20:40:06.640151Z", "url": "https://files.pythonhosted.org/packages/a7/4c/550d7f60b80b396ca786d8ea10e56361451593aee099473e198e25763c9e/catalyst-19.12.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fca7e1a84f916833f84c9155fe7ea3d", "sha256": "30e0701849e3fe1525a36e9776a10034874dcdd0290e632452374172cb04f7d5"}, "downloads": -1, "filename": "catalyst-19.12.1.tar.gz", "has_sig": false, "md5_digest": "1fca7e1a84f916833f84c9155fe7ea3d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 197085, "upload_time": "2019-12-13T20:40:08", "upload_time_iso_8601": "2019-12-13T20:40:08.678920Z", "url": "https://files.pythonhosted.org/packages/63/1a/8eb1b8bfc5f93707977ea6ba0f45c78696b31259fa4060076dcdf9e08eef/catalyst-19.12.1.tar.gz", "yanked": false}], "19.12.2": [{"comment_text": "", "digests": {"md5": "ec27b3ffd7097d0dcc7eebdc0f4a5a47", "sha256": "f48a67d049969e3a1df73ead96bab95386df96c1713456beb3ca4128f2901ecb"}, "downloads": -1, "filename": "catalyst-19.12.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ec27b3ffd7097d0dcc7eebdc0f4a5a47", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 305982, "upload_time": "2019-12-21T10:17:10", "upload_time_iso_8601": "2019-12-21T10:17:10.084933Z", "url": "https://files.pythonhosted.org/packages/b7/35/19eb7ad57cdaea714dbe265c56b4006db3264c4046542262ca47850b3c59/catalyst-19.12.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d59449aad6c77dad4ccc013fdd9f52f4", "sha256": "4d7837357f5a314ce578f8e82e742136b03295801a15f949644fd2ecaaea8a85"}, "downloads": -1, "filename": "catalyst-19.12.2.tar.gz", "has_sig": false, "md5_digest": "d59449aad6c77dad4ccc013fdd9f52f4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 197641, "upload_time": "2019-12-21T10:17:13", "upload_time_iso_8601": "2019-12-21T10:17:13.467775Z", "url": "https://files.pythonhosted.org/packages/21/39/10f75dac93349c19a769a266196e13dc1a92ff9bd22ba1ad526e6f962c57/catalyst-19.12.2.tar.gz", "yanked": false}], "19.12.3": [{"comment_text": "", "digests": {"md5": "4f686b7f6c31728e8b236fd25756db35", "sha256": "1caa75524bdb1519675e4dfedb197587a7c191f931edc36073887f3eda6053d8"}, "downloads": -1, "filename": "catalyst-19.12.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f686b7f6c31728e8b236fd25756db35", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 311796, "upload_time": "2019-12-31T10:47:49", "upload_time_iso_8601": "2019-12-31T10:47:49.499814Z", "url": "https://files.pythonhosted.org/packages/57/32/16f4b3bbcb885670da43f07d7eba4da7f40bf28c253a5ca4e5d5c6c8a574/catalyst-19.12.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "987ad34fabfbf556f996bb928309bcf1", "sha256": "f8fb0c0e32d8e89301014ba0f3b190d9df0f7d2cca3f15b91ec706e92cb76693"}, "downloads": -1, "filename": "catalyst-19.12.3.tar.gz", "has_sig": false, "md5_digest": "987ad34fabfbf556f996bb928309bcf1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 202058, "upload_time": "2019-12-31T10:47:52", "upload_time_iso_8601": "2019-12-31T10:47:52.092266Z", "url": "https://files.pythonhosted.org/packages/d0/4b/b609951515df1948e99767f0b68256cc80a9fed9a057a8b598add9c7f825/catalyst-19.12.3.tar.gz", "yanked": false}], "19.1rc0": [{"comment_text": "", "digests": {"md5": "70005654d48f0cea966746844e7d8d0f", "sha256": "81fc416686943a3c2795c8b2526a1e9c1eee5bdf58294c6cc0a2a2c6dfcd3863"}, "downloads": -1, "filename": "catalyst-19.1rc0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "70005654d48f0cea966746844e7d8d0f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 117578, "upload_time": "2019-01-24T20:12:29", "upload_time_iso_8601": "2019-01-24T20:12:29.478785Z", "url": "https://files.pythonhosted.org/packages/6b/2a/ed23e250e597994a4afe3de61e1b19c960eb22e1d6da4d5da72b4d193f52/catalyst-19.1rc0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "367e7564d64d2ca3da92fc417c99942f", "sha256": "bf1195ef5425b3bc904754a90cce41ba663fad88ba21639c92963ffcf39101e0"}, "downloads": -1, "filename": "catalyst-19.1rc0.tar.gz", "has_sig": false, "md5_digest": "367e7564d64d2ca3da92fc417c99942f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 78422, "upload_time": "2019-01-24T20:12:31", "upload_time_iso_8601": "2019-01-24T20:12:31.359681Z", "url": "https://files.pythonhosted.org/packages/1f/d8/5bf944ad5bd1fb3418d9b56a6fedb0cf3aa307306410a9ca1289e8b85369/catalyst-19.1rc0.tar.gz", "yanked": false}], "19.1rc1": [{"comment_text": "", "digests": {"md5": "9651622608a0799fd5536a580a03662e", "sha256": "f517352071b2253b64e2aa28b92b6f71ec396e1dffb0676b600b743e08607e51"}, "downloads": -1, "filename": "catalyst-19.1rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9651622608a0799fd5536a580a03662e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 118222, "upload_time": "2019-01-26T09:40:28", "upload_time_iso_8601": "2019-01-26T09:40:28.031158Z", "url": "https://files.pythonhosted.org/packages/1a/94/5973f6992e73c3f9c9be4cd1524a81cddd60997a23dbe8c9f675781eaf52/catalyst-19.1rc1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9014cba420e85e50515655b9e9c40f7", "sha256": "aadf51e21193b844b7b1037df37cf6facffc345081571adbcb2736b3702df70f"}, "downloads": -1, "filename": "catalyst-19.1rc1.tar.gz", "has_sig": false, "md5_digest": "f9014cba420e85e50515655b9e9c40f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 78567, "upload_time": "2019-01-26T09:40:29", "upload_time_iso_8601": "2019-01-26T09:40:29.993636Z", "url": "https://files.pythonhosted.org/packages/da/a6/ed4c8671e6b7398357a02cbc3752cac35a269cb92854acb8652b00ab5954/catalyst-19.1rc1.tar.gz", "yanked": false}], "19.1rc2": [{"comment_text": "", "digests": {"md5": "41ee2c308f8c83fb6fd16284599e2202", "sha256": "e944a7b519be13e97b65ff834aa34a87bed3dbc1095fbc1cb09c6646c8696660"}, "downloads": -1, "filename": "catalyst-19.1rc2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "41ee2c308f8c83fb6fd16284599e2202", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 123462, "upload_time": "2019-02-03T10:45:52", "upload_time_iso_8601": "2019-02-03T10:45:52.607710Z", "url": "https://files.pythonhosted.org/packages/82/a6/2b31f44f89cecdfee011f45f868a4f5087e6ad6346817fcd349232fa099b/catalyst-19.1rc2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aba41a3b0b504b53e820eec585ee21ff", "sha256": "4bf9a2582262a5009f54ac44eb15302e3172e48567bcb2be084d9552543e797d"}, "downloads": -1, "filename": "catalyst-19.1rc2.tar.gz", "has_sig": false, "md5_digest": "aba41a3b0b504b53e820eec585ee21ff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 83675, "upload_time": "2019-02-03T10:45:54", "upload_time_iso_8601": "2019-02-03T10:45:54.747090Z", "url": "https://files.pythonhosted.org/packages/1a/54/46f631f4f6e726745cc74d6cbf6d8090cfc6b453202765fe104143708072/catalyst-19.1rc2.tar.gz", "yanked": false}], "19.2rc0": [{"comment_text": "", "digests": {"md5": "7154aba193e78cf5c823f37e9e514365", "sha256": "20b002bfbbdc343a5d01630bf96a6ea6351788542cd344a93494a0b6c21610e2"}, "downloads": -1, "filename": "catalyst-19.2rc0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7154aba193e78cf5c823f37e9e514365", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 123702, "upload_time": "2019-02-05T08:46:18", "upload_time_iso_8601": "2019-02-05T08:46:18.179995Z", "url": "https://files.pythonhosted.org/packages/56/f8/f7e977412b775d414702f890617227365b341ef3df88926eb5e1b0e0dd23/catalyst-19.2rc0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "faaab04c3541a7a48fd85e3c76b0da7c", "sha256": "c4f992a14974c59ef2d8aeb7b806c223a7a4b46c531f134cf314faadfa1ab498"}, "downloads": -1, "filename": "catalyst-19.2rc0.tar.gz", "has_sig": false, "md5_digest": "faaab04c3541a7a48fd85e3c76b0da7c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 83729, "upload_time": "2019-02-05T08:46:20", "upload_time_iso_8601": "2019-02-05T08:46:20.080334Z", "url": "https://files.pythonhosted.org/packages/f5/cd/7f078424427b3011d580e7696b653fba1f885f6dda8facfab18e091d05fa/catalyst-19.2rc0.tar.gz", "yanked": false}], "19.3": [{"comment_text": "", "digests": {"md5": "5e1d90b0c25bcb5c89af3044f0d632ec", "sha256": "7a0f7b095ded5293196383bb2fb4af74f786368eaf56468b9ccade4cb9df94c8"}, "downloads": -1, "filename": "catalyst-19.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5e1d90b0c25bcb5c89af3044f0d632ec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 121584, "upload_time": "2019-03-28T15:12:11", "upload_time_iso_8601": "2019-03-28T15:12:11.533199Z", "url": "https://files.pythonhosted.org/packages/55/89/309b714d048f6cc112884e7bc60991f8c087fe43dd3c4e763a5ec03cede3/catalyst-19.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ad6fb159a9a90bd5584185bff7377e0", "sha256": "d1088796c860361c5a3cf18ea82302a394a0219e7b65dedc6d52db582822f57a"}, "downloads": -1, "filename": "catalyst-19.3.tar.gz", "has_sig": false, "md5_digest": "0ad6fb159a9a90bd5584185bff7377e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 81655, "upload_time": "2019-03-28T15:12:14", "upload_time_iso_8601": "2019-03-28T15:12:14.022813Z", "url": "https://files.pythonhosted.org/packages/7f/45/41167b850f20971efe13bf25fc34212bac54e60f9501088d4b3da34d59cb/catalyst-19.3.tar.gz", "yanked": false}], "19.3rc0": [{"comment_text": "", "digests": {"md5": "4d4e6a29aff628bacdb54b0026d0a4f6", "sha256": "69126683ec81b36ae1f20b61913fc2f88f527a4ac4640ba6985cf656728964f6"}, "downloads": -1, "filename": "catalyst-19.3rc0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4d4e6a29aff628bacdb54b0026d0a4f6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 113076, "upload_time": "2019-03-07T08:11:46", "upload_time_iso_8601": "2019-03-07T08:11:46.597060Z", "url": "https://files.pythonhosted.org/packages/f6/98/0155940918a7d54c48fbe0368ad045465a3b23ac8fc4932b5988795af9d8/catalyst-19.3rc0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "647ae67f822b550ab2af1df6e5938b99", "sha256": "31c9062002505fe7551bcd3de9ab0d8e0d801e096cbc13f240b6f48a1c6e83e2"}, "downloads": -1, "filename": "catalyst-19.3rc0.tar.gz", "has_sig": false, "md5_digest": "647ae67f822b550ab2af1df6e5938b99", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 75746, "upload_time": "2019-03-07T08:11:48", "upload_time_iso_8601": "2019-03-07T08:11:48.634630Z", "url": "https://files.pythonhosted.org/packages/90/95/9ea42cde14ba70a6447eb6f23ce744641a0c17c0a2f6eda168dfd6f2fcbc/catalyst-19.3rc0.tar.gz", "yanked": false}], "19.4rc0": [{"comment_text": "", "digests": {"md5": "8e7058e2552dcefbe6d31956354e3125", "sha256": "c3a345730ecbe5b678e46288ce94a7970100cdc23cb5b4c7681f2f104f9dae5f"}, "downloads": -1, "filename": "catalyst-19.4rc0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8e7058e2552dcefbe6d31956354e3125", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 122610, "upload_time": "2019-04-17T16:32:11", "upload_time_iso_8601": "2019-04-17T16:32:11.053889Z", "url": "https://files.pythonhosted.org/packages/bf/c9/f1637d4a05b3536a517c9d6269e130d6afa5215fc7a514df23945a0bec0d/catalyst-19.4rc0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd0f1ff4f72b1f148251730ebc3dcc6c", "sha256": "3a26ec2f3de03d989ae0d28f56115af98e85ae2992136bcf1b9723fb8b246d13"}, "downloads": -1, "filename": "catalyst-19.4rc0.tar.gz", "has_sig": false, "md5_digest": "bd0f1ff4f72b1f148251730ebc3dcc6c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 82233, "upload_time": "2019-04-17T16:32:13", "upload_time_iso_8601": "2019-04-17T16:32:13.195467Z", "url": "https://files.pythonhosted.org/packages/e1/32/423438c8b4b1874b4ceb23b230217437a4eb26c5c6894503079e8055a91e/catalyst-19.4rc0.tar.gz", "yanked": false}], "19.4rc1": [{"comment_text": "", "digests": {"md5": "9019b9070811995773908472f5608c77", "sha256": "1817d3248e5d720f74d3592a05e439c9b41a35dd153b436c8c115a910d81f9f5"}, "downloads": -1, "filename": "catalyst-19.4rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9019b9070811995773908472f5608c77", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 126628, "upload_time": "2019-04-20T11:10:19", "upload_time_iso_8601": "2019-04-20T11:10:19.741852Z", "url": "https://files.pythonhosted.org/packages/12/60/29921c11680073adeafa5a9e80b6fa0ab883204a9f66a5cadedcbfa4aee3/catalyst-19.4rc1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7994a0dddba34989f3b3a94ab15dadcb", "sha256": "d280b477a0c8ec974a4d0e2ae0c82d4a6f399c1f562c8f76fa11934d629a8119"}, "downloads": -1, "filename": "catalyst-19.4rc1.tar.gz", "has_sig": false, "md5_digest": "7994a0dddba34989f3b3a94ab15dadcb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 85785, "upload_time": "2019-04-20T11:10:21", "upload_time_iso_8601": "2019-04-20T11:10:21.687258Z", "url": "https://files.pythonhosted.org/packages/cc/28/6418e9165817e3e7967e6b000a30f9fcb8853f040a9cd74eff904e0d8573/catalyst-19.4rc1.tar.gz", "yanked": false}], "19.4rc2": [{"comment_text": "", "digests": {"md5": "472a7173af76226e83d520e0f7dcd7b5", "sha256": "0728ca992a2efd8cadb19022b4d0a578d681312d04443be7df05bff9f5d78669"}, "downloads": -1, "filename": "catalyst-19.4rc2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "472a7173af76226e83d520e0f7dcd7b5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 135239, "upload_time": "2019-04-23T07:03:14", "upload_time_iso_8601": "2019-04-23T07:03:14.576137Z", "url": "https://files.pythonhosted.org/packages/8b/f8/d4e896295aa2b32dc24b284537eed7438442e12cd79c8184223fc8f59ba1/catalyst-19.4rc2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1439ac996c034d6f86ab309ef63f191", "sha256": "b8c17e001d54fe4ed6a8206b26072608441b929348a0d59783b602eeda16bc2b"}, "downloads": -1, "filename": "catalyst-19.4rc2.tar.gz", "has_sig": false, "md5_digest": "a1439ac996c034d6f86ab309ef63f191", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 89435, "upload_time": "2019-04-23T07:03:16", "upload_time_iso_8601": "2019-04-23T07:03:16.580535Z", "url": "https://files.pythonhosted.org/packages/d8/f3/7466c9a17b3c943a8042468ee8569ecf4e152ba103e90cf09fc2f1c22127/catalyst-19.4rc2.tar.gz", "yanked": false}], "19.4rc3": [{"comment_text": "", "digests": {"md5": "923c6b506aaca067b06868fe4025c452", "sha256": "89a7c967f355804f87d85007484d48e84e6f144e8b7fdfa28446e49ac7b61254"}, "downloads": -1, "filename": "catalyst-19.4rc3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "923c6b506aaca067b06868fe4025c452", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 137110, "upload_time": "2019-04-25T17:59:43", "upload_time_iso_8601": "2019-04-25T17:59:43.003155Z", "url": "https://files.pythonhosted.org/packages/ed/c6/d0c11c6703fd546bc7e9a8f7de6d89efc3cd6feafd9ad41d8426c433d02c/catalyst-19.4rc3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fef763cf7a8f9d67b4fdcc7690b3dfc", "sha256": "63e70b481419393b2fef3bbe1192f2932849e4a052c9ae8615a26b39ef27940c"}, "downloads": -1, "filename": "catalyst-19.4rc3.tar.gz", "has_sig": false, "md5_digest": "6fef763cf7a8f9d67b4fdcc7690b3dfc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 90921, "upload_time": "2019-04-25T17:59:45", "upload_time_iso_8601": "2019-04-25T17:59:45.826780Z", "url": "https://files.pythonhosted.org/packages/11/75/5aa87d014b205d26c94cccd150d76e545a4623835b0f00eaba7510e7902e/catalyst-19.4rc3.tar.gz", "yanked": false}], "19.5": [{"comment_text": "", "digests": {"md5": "1f76c0b1b666a1f2c159ac7708a496f0", "sha256": "940072a0d467ace412133425576b3a302ecfe60076ac5083f15a4be91c236f3a"}, "downloads": -1, "filename": "catalyst-19.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1f76c0b1b666a1f2c159ac7708a496f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 143369, "upload_time": "2019-05-06T05:32:09", "upload_time_iso_8601": "2019-05-06T05:32:09.976806Z", "url": "https://files.pythonhosted.org/packages/64/29/79f6b422d69266f503ec29a5efdb75c9253c471735e70ed8e3d669d3831e/catalyst-19.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bab9d5750d0ee80d18948b3a1bb372b", "sha256": "921ffbfb0070c7201d7d6878c70ead2c8050fd53f7e262e1c02bf1733ec619c3"}, "downloads": -1, "filename": "catalyst-19.5.tar.gz", "has_sig": false, "md5_digest": "2bab9d5750d0ee80d18948b3a1bb372b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 94339, "upload_time": "2019-05-06T05:32:12", "upload_time_iso_8601": "2019-05-06T05:32:12.290115Z", "url": "https://files.pythonhosted.org/packages/18/cd/df4b626a7be4f2140932b2d71c1cd64e8828df9eb2d8378a9b958dc43435/catalyst-19.5.tar.gz", "yanked": false}], "19.6": [{"comment_text": "", "digests": {"md5": "1d1247a324cba58a84d76a5ddaab4944", "sha256": "2d777171a6327503c6f3523202cf86056979e47d79d5675215868c452208c86b"}, "downloads": -1, "filename": "catalyst-19.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1d1247a324cba58a84d76a5ddaab4944", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 187619, "upload_time": "2019-06-01T08:13:52", "upload_time_iso_8601": "2019-06-01T08:13:52.450760Z", "url": "https://files.pythonhosted.org/packages/31/6c/93973be17bc809f7837d41e4219d71b9f829a239be488e2195e223aafd32/catalyst-19.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84178ba8f296dffba3db950fa8ca4e86", "sha256": "b99c097d2650d3c0b447c6503a2a3277340fbdeb44b66f47b691ff3b92d26c7e"}, "downloads": -1, "filename": "catalyst-19.6.tar.gz", "has_sig": false, "md5_digest": "84178ba8f296dffba3db950fa8ca4e86", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 117527, "upload_time": "2019-06-01T08:13:54", "upload_time_iso_8601": "2019-06-01T08:13:54.534905Z", "url": "https://files.pythonhosted.org/packages/92/4a/c93b9ae22a1d159bf2e4c6e84b2e28135544c08a2ae6ac82fe9bf84ff3f5/catalyst-19.6.tar.gz", "yanked": false}], "19.6.1": [{"comment_text": "", "digests": {"md5": "9a21f0da2f08b92c42da4189f540b208", "sha256": "bcf05739743f0c665a9d27cb2140861622df163fd9f30300f51d3d311b455a8f"}, "downloads": -1, "filename": "catalyst-19.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9a21f0da2f08b92c42da4189f540b208", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 187807, "upload_time": "2019-06-04T05:03:53", "upload_time_iso_8601": "2019-06-04T05:03:53.757139Z", "url": "https://files.pythonhosted.org/packages/46/4e/19c440a0ce78cf7990342f9ea684250d48c301ae608a57e5c7f93f1cea46/catalyst-19.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc42e93bceaec18d8abdea5c00ef2888", "sha256": "99beee565ab969def0867cb49fcac06b4bae05a7dbaf8ae4d03692641568a490"}, "downloads": -1, "filename": "catalyst-19.6.1.tar.gz", "has_sig": false, "md5_digest": "bc42e93bceaec18d8abdea5c00ef2888", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 117837, "upload_time": "2019-06-04T05:03:55", "upload_time_iso_8601": "2019-06-04T05:03:55.605973Z", "url": "https://files.pythonhosted.org/packages/52/6c/5fcddd146d158a98194d51f23a375afd8c6d39f6c43acebe05c6df7de372/catalyst-19.6.1.tar.gz", "yanked": false}], "19.6.2": [{"comment_text": "", "digests": {"md5": "daf07ae789bbef2193b7001748c88665", "sha256": "d80452bbb2d7d8e3a0118abb5fb72a4bfc69d34d1eac27c46e3b1e1479d16918"}, "downloads": -1, "filename": "catalyst-19.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "daf07ae789bbef2193b7001748c88665", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 217856, "upload_time": "2019-06-11T06:36:49", "upload_time_iso_8601": "2019-06-11T06:36:49.070267Z", "url": "https://files.pythonhosted.org/packages/76/57/61ca033264f3a9b05b35f3a63bdba5013a793ee60e571f2af461039f5e38/catalyst-19.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a942a846966be7a02bfa6c9da5a39bed", "sha256": "ab7b8530de0c055c25dccecbb8505e011ab8d5522546d1f53219591a3a29e0b6"}, "downloads": -1, "filename": "catalyst-19.6.2.tar.gz", "has_sig": false, "md5_digest": "a942a846966be7a02bfa6c9da5a39bed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 119201, "upload_time": "2019-06-11T06:36:51", "upload_time_iso_8601": "2019-06-11T06:36:51.319799Z", "url": "https://files.pythonhosted.org/packages/ae/31/4637d4a220bc7070b01c1c8a89d2d85a240976b4e0766e9875e7921b04f4/catalyst-19.6.2.tar.gz", "yanked": false}], "19.6.3": [{"comment_text": "", "digests": {"md5": "7a129b114b80be89e0cfc1a77c83e012", "sha256": "d273e2afeb9d3993b2629fe85e78709c170e4d1895a3081a321d6a24d9372423"}, "downloads": -1, "filename": "catalyst-19.6.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7a129b114b80be89e0cfc1a77c83e012", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 299435, "upload_time": "2019-06-17T09:17:30", "upload_time_iso_8601": "2019-06-17T09:17:30.608352Z", "url": "https://files.pythonhosted.org/packages/1b/f9/22a4235fd109a2e28119a1f3ea6e1d44b740694a64371c90b66d31099990/catalyst-19.6.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "864709935406906d909b1fe903ac825d", "sha256": "4018288f83c2b371e19656a012483b09ef5b428d46c143b3fe89af506b66e6d1"}, "downloads": -1, "filename": "catalyst-19.6.3.tar.gz", "has_sig": false, "md5_digest": "864709935406906d909b1fe903ac825d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 119202, "upload_time": "2019-06-17T09:17:32", "upload_time_iso_8601": "2019-06-17T09:17:32.828254Z", "url": "https://files.pythonhosted.org/packages/b0/fa/a03596c4d1d18de375219fd6babfa95cd0ab28dfaed4926c771de9d9fd07/catalyst-19.6.3.tar.gz", "yanked": false}], "19.6.4": [{"comment_text": "", "digests": {"md5": "b65b6b5c04eaa38311b39325fcee503e", "sha256": "a92dfe781fbba42282956d7e4bcea058819915b4038d2afcea68a480d60694a2"}, "downloads": -1, "filename": "catalyst-19.6.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b65b6b5c04eaa38311b39325fcee503e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 201289, "upload_time": "2019-06-21T16:38:20", "upload_time_iso_8601": "2019-06-21T16:38:20.175107Z", "url": "https://files.pythonhosted.org/packages/2b/b6/3d9d9d0b57c1d912b1b8fb345ab7a08d1d73dbe93534096335f0ae1a11c2/catalyst-19.6.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2bedc77f428ee5a731e0f0e2a95ac13", "sha256": "7a1dae86d17ff4954222c4cae7fac27aae5e2039d4b06a44c7e8a12bbcc0960f"}, "downloads": -1, "filename": "catalyst-19.6.4.tar.gz", "has_sig": false, "md5_digest": "e2bedc77f428ee5a731e0f0e2a95ac13", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 120074, "upload_time": "2019-06-21T16:38:22", "upload_time_iso_8601": "2019-06-21T16:38:22.435182Z", "url": "https://files.pythonhosted.org/packages/2b/cc/d874963db43f975d451109bd7a049e96658e728bb212d8fd34db821fed1d/catalyst-19.6.4.tar.gz", "yanked": false}], "19.6.5": [{"comment_text": "", "digests": {"md5": "e78cf25566be3c18747eac24e854d2bf", "sha256": "1d45719d0f24c2ea59421fbe52374253a9136f2b707d7df4d5a56579eb422087"}, "downloads": -1, "filename": "catalyst-19.6.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e78cf25566be3c18747eac24e854d2bf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 208977, "upload_time": "2019-06-25T19:11:39", "upload_time_iso_8601": "2019-06-25T19:11:39.067708Z", "url": "https://files.pythonhosted.org/packages/9b/39/e0e3a2c5e7f1d17b0942d077b2046d7c3de58d167f767133848eaf5b3982/catalyst-19.6.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2ccb34184b302d7d5a2a67534375749", "sha256": "498b27a6d9d33070d515c58bdc7f176ea9b8f3e0da78d15f9e0a2b95b5925244"}, "downloads": -1, "filename": "catalyst-19.6.5.tar.gz", "has_sig": false, "md5_digest": "e2ccb34184b302d7d5a2a67534375749", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 123732, "upload_time": "2019-06-25T19:11:41", "upload_time_iso_8601": "2019-06-25T19:11:41.662471Z", "url": "https://files.pythonhosted.org/packages/7f/94/2d5ec56aba2143a0d3a4ef176a2774339cf109c7659ce37c821695d9494d/catalyst-19.6.5.tar.gz", "yanked": false}], "19.6rc1": [{"comment_text": "", "digests": {"md5": "bdbbc8b3ad7f95880b8ab4b636798558", "sha256": "caf1cf1e2dc70dcdbe74ad14b86cf97413cb65d9f381d86662f6370390df37c3"}, "downloads": -1, "filename": "catalyst-19.6rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bdbbc8b3ad7f95880b8ab4b636798558", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 155807, "upload_time": "2019-05-12T20:05:40", "upload_time_iso_8601": "2019-05-12T20:05:40.029417Z", "url": "https://files.pythonhosted.org/packages/61/51/ca7b9f605fc61f76a9fb565beddc39e9b67817b9a2105ffbc2bb7374d651/catalyst-19.6rc1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d74a8724719d38518d0e7be34b357fa", "sha256": "02c97d3a3b719b4b56e8d7620aabae8b2ac74f33058c4e9ccfb5985eaeacdf04"}, "downloads": -1, "filename": "catalyst-19.6rc1.tar.gz", "has_sig": false, "md5_digest": "4d74a8724719d38518d0e7be34b357fa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 101671, "upload_time": "2019-05-12T20:05:41", "upload_time_iso_8601": "2019-05-12T20:05:41.881468Z", "url": "https://files.pythonhosted.org/packages/fa/c4/24bd08e844d9a256dbb0514538a04b5f4dedd368463426db9a5a6758fd09/catalyst-19.6rc1.tar.gz", "yanked": false}], "19.6rc2": [{"comment_text": "", "digests": {"md5": "1e745e782f5448db272fe321e7c21b08", "sha256": "cccf7b09573fba5db2c5667f2653f842777a87d0c5899083e68fc6659b5cad65"}, "downloads": -1, "filename": "catalyst-19.6rc2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1e745e782f5448db272fe321e7c21b08", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 174008, "upload_time": "2019-05-17T07:04:05", "upload_time_iso_8601": "2019-05-17T07:04:05.887514Z", "url": "https://files.pythonhosted.org/packages/35/e7/90dd9482b4fe7365837186608e2d06f527dfb5018701f52e0f76ffe9cf01/catalyst-19.6rc2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f77faaf1c5abf78336fd042d53cd35e", "sha256": "5896fadeab3baedbfa52957c833f3cab937d7a849661b5644e1755d5cbbdcef3"}, "downloads": -1, "filename": "catalyst-19.6rc2.tar.gz", "has_sig": false, "md5_digest": "6f77faaf1c5abf78336fd042d53cd35e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 105618, "upload_time": "2019-05-17T07:04:08", "upload_time_iso_8601": "2019-05-17T07:04:08.092689Z", "url": "https://files.pythonhosted.org/packages/93/4c/00fa48d5b1ad164e33a3ce76e91eb0780db3889135157108a60a0f4cfe10/catalyst-19.6rc2.tar.gz", "yanked": false}], "19.6rc3": [{"comment_text": "", "digests": {"md5": "9b60b53ef6a82b34ace0bf0532126ed7", "sha256": "c170b0da0220a635878e31e5d6d0fc89fd931fd091b42d0dbefd0ae2bac01b7f"}, "downloads": -1, "filename": "catalyst-19.6rc3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9b60b53ef6a82b34ace0bf0532126ed7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 186668, "upload_time": "2019-05-28T17:57:18", "upload_time_iso_8601": "2019-05-28T17:57:18.330147Z", "url": "https://files.pythonhosted.org/packages/ce/e0/908d58c64a3511ea4995254f7ff3a5fdc4bc2929c6462a8abb41111575e4/catalyst-19.6rc3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2624bede034579b7a2b494c0464d7d53", "sha256": "7c46496b2917b8433b6185ca76be065e21202a2c1d848128abae261e98d6cb6c"}, "downloads": -1, "filename": "catalyst-19.6rc3.tar.gz", "has_sig": false, "md5_digest": "2624bede034579b7a2b494c0464d7d53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 109888, "upload_time": "2019-05-28T17:57:20", "upload_time_iso_8601": "2019-05-28T17:57:20.005043Z", "url": "https://files.pythonhosted.org/packages/6e/79/44f60895e7023e1111fa958f846c61d73bbb210ea2f048b3fda3478aab4f/catalyst-19.6rc3.tar.gz", "yanked": false}], "19.6rc4": [{"comment_text": "", "digests": {"md5": "463823b9a6a28dd2f43d968971f3655e", "sha256": "2c9dd4d2e14e5f6c66bec057d2b3cce5ea877817a801681ea741d392414cbcbb"}, "downloads": -1, "filename": "catalyst-19.6rc4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "463823b9a6a28dd2f43d968971f3655e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 212354, "upload_time": "2019-05-29T08:27:58", "upload_time_iso_8601": "2019-05-29T08:27:58.198795Z", "url": "https://files.pythonhosted.org/packages/ac/92/9157636faa71fd39c3ff7d5fe28d96f99395758dc501a0499ea769b21449/catalyst-19.6rc4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b4468b38d8db9ab8f3af1b9788446db", "sha256": "d7912edabad80d673b88fbeff2ccbc02da283386dcb5e26f24cfef7441dd9f77"}, "downloads": -1, "filename": "catalyst-19.6rc4.tar.gz", "has_sig": false, "md5_digest": "2b4468b38d8db9ab8f3af1b9788446db", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 117920, "upload_time": "2019-05-29T08:28:00", "upload_time_iso_8601": "2019-05-29T08:28:00.620794Z", "url": "https://files.pythonhosted.org/packages/8a/e2/d081ab371ba4b51ef8c82fa2544e726bb17cfc4c422b6d1410919c47fdc6/catalyst-19.6rc4.tar.gz", "yanked": false}], "19.7": [{"comment_text": "", "digests": {"md5": "6311a9be6d545bb1c20a96b29c5cc823", "sha256": "c22a8757539ec799156190f5d202e4be11e7a1afaf33476e3c4b21c7f2c6f643"}, "downloads": -1, "filename": "catalyst-19.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6311a9be6d545bb1c20a96b29c5cc823", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 207068, "upload_time": "2019-07-02T07:49:48", "upload_time_iso_8601": "2019-07-02T07:49:48.232323Z", "url": "https://files.pythonhosted.org/packages/de/ca/77f8181d63e6191dfe7428f3f738643482eb8423cd0baa44b15bd522ea64/catalyst-19.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99e70dfcaef7e228e95f1dc4a274733a", "sha256": "db82de7af046658bc3b0f0d0114326c90b6452ed285ce5a766047ecbb3cee0d3"}, "downloads": -1, "filename": "catalyst-19.7.tar.gz", "has_sig": false, "md5_digest": "99e70dfcaef7e228e95f1dc4a274733a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 124796, "upload_time": "2019-07-02T07:49:50", "upload_time_iso_8601": "2019-07-02T07:49:50.275455Z", "url": "https://files.pythonhosted.org/packages/eb/4f/c7e6665498f033651a7fe8d74a445fcbd6a47d44a95a77646797bad89965/catalyst-19.7.tar.gz", "yanked": false}], "19.7.1": [{"comment_text": "", "digests": {"md5": "2b7d398f118223a9749c20e5dee33557", "sha256": "b5b199995326a0ca135ae67be72125b1548baada52a1ada34559ce1139409c20"}, "downloads": -1, "filename": "catalyst-19.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2b7d398f118223a9749c20e5dee33557", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 209187, "upload_time": "2019-07-04T17:26:30", "upload_time_iso_8601": "2019-07-04T17:26:30.652126Z", "url": "https://files.pythonhosted.org/packages/05/10/8ae99e91a6891352b950cc8670dadaa6ca0dafbd906b581fc2f9b3f79b4f/catalyst-19.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13ff849ca38efcb15ad4fdc8dc21d695", "sha256": "23d45ffabb791b407c7fac701d983b5eb827c41283f4e40978999f2f3805e601"}, "downloads": -1, "filename": "catalyst-19.7.1.tar.gz", "has_sig": false, "md5_digest": "13ff849ca38efcb15ad4fdc8dc21d695", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 126393, "upload_time": "2019-07-04T17:26:33", "upload_time_iso_8601": "2019-07-04T17:26:33.217592Z", "url": "https://files.pythonhosted.org/packages/fc/30/2cdf10c31a7e4ece1f33095f22691d9cd0359abe046070735d13e7bc3d53/catalyst-19.7.1.tar.gz", "yanked": false}], "19.7.2": [{"comment_text": "", "digests": {"md5": "6b934fe2b1c19b03c61b20cfb45ef91b", "sha256": "54712a0e1e04f0846b7dea9d69f117d8b42d30f8c03b21a2cb3d1ec7add8d310"}, "downloads": -1, "filename": "catalyst-19.7.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6b934fe2b1c19b03c61b20cfb45ef91b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 210232, "upload_time": "2019-07-14T14:02:48", "upload_time_iso_8601": "2019-07-14T14:02:48.754575Z", "url": "https://files.pythonhosted.org/packages/e5/89/9a30450f3bce457205a050b60b265f429af74ed0c53e43107b9eb16e15fb/catalyst-19.7.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af3a36cf3f1aec3f8f39e66001f83151", "sha256": "4f4b433a602c73ec544807c6f2e216e98216abaa71fca0a30a20f06068c77a99"}, "downloads": -1, "filename": "catalyst-19.7.2.tar.gz", "has_sig": false, "md5_digest": "af3a36cf3f1aec3f8f39e66001f83151", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 127361, "upload_time": "2019-07-14T14:02:51", "upload_time_iso_8601": "2019-07-14T14:02:51.042451Z", "url": "https://files.pythonhosted.org/packages/bf/97/4d5cb134f4adfdcb61c7d2971274618b3000342404c3041245dd27c0f661/catalyst-19.7.2.tar.gz", "yanked": false}], "19.7.3": [{"comment_text": "", "digests": {"md5": "00c88bd610506208541a4d839707f8c8", "sha256": "0b1c756092a43f8a17d0a9f9ff8c822ef5843fe7bf57f28d8dac345c85d591fb"}, "downloads": -1, "filename": "catalyst-19.7.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "00c88bd610506208541a4d839707f8c8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 211566, "upload_time": "2019-07-21T14:27:20", "upload_time_iso_8601": "2019-07-21T14:27:20.956056Z", "url": "https://files.pythonhosted.org/packages/00/71/352f42d3e70c6e02e2dc95f9030190767738eccd86b5c5472e206765060e/catalyst-19.7.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d59099cb8c466a49bf78b40daafccb9d", "sha256": "de61f40a89850143fd90207fedc55125b1e90dc602dff1d357e601aeba98ff14"}, "downloads": -1, "filename": "catalyst-19.7.3.tar.gz", "has_sig": false, "md5_digest": "d59099cb8c466a49bf78b40daafccb9d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 128335, "upload_time": "2019-07-21T14:27:23", "upload_time_iso_8601": "2019-07-21T14:27:23.348852Z", "url": "https://files.pythonhosted.org/packages/00/fb/3597d962da28884ecddcf959d73141bd4d23a1cde19f5b0ce6b7bc46ac6c/catalyst-19.7.3.tar.gz", "yanked": false}], "19.7.4": [{"comment_text": "", "digests": {"md5": "0927a03566c0f58b4216c606336701fd", "sha256": "d74235258ba592f6de98a175ed96807795998fc4a65aaf3051a7aa3d00fd1af4"}, "downloads": -1, "filename": "catalyst-19.7.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0927a03566c0f58b4216c606336701fd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 212436, "upload_time": "2019-07-25T17:22:40", "upload_time_iso_8601": "2019-07-25T17:22:40.287873Z", "url": "https://files.pythonhosted.org/packages/6a/8a/b21a6d569f9770a813913d4e8cee8952a05f5b9a38724ffede8410d4b853/catalyst-19.7.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8155d630b2af889a77f91818c1286ac6", "sha256": "27a4d5619362146a2751030c25f03d0b4bde49a6bee5f445a0176a5bc36531d6"}, "downloads": -1, "filename": "catalyst-19.7.4.tar.gz", "has_sig": false, "md5_digest": "8155d630b2af889a77f91818c1286ac6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 128850, "upload_time": "2019-07-25T17:22:42", "upload_time_iso_8601": "2019-07-25T17:22:42.598291Z", "url": "https://files.pythonhosted.org/packages/1b/7e/916686b10741fd826664a0c88c434089a0395495dc2a76f01fe270b6f6ef/catalyst-19.7.4.tar.gz", "yanked": false}], "19.8": [{"comment_text": "", "digests": {"md5": "d40ad0c73bde4b75e5e34444c0472485", "sha256": "3db0dbe00ff03eb5e0179a950cb49f8aacae3db21099c57a101aef3ff14b2ef5"}, "downloads": -1, "filename": "catalyst-19.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d40ad0c73bde4b75e5e34444c0472485", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 213846, "upload_time": "2019-08-01T12:21:05", "upload_time_iso_8601": "2019-08-01T12:21:05.724196Z", "url": "https://files.pythonhosted.org/packages/7e/fa/ff966ae44a52162ce932c04faa9eac90ee5cee9688cf7ffedd362c8e6778/catalyst-19.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fcf47308ebfef92d0c007f6330ed3e3", "sha256": "f8ec463aeb2f75473f9070e42279345aa065e6b370b0bbb3afce8ffec57db123"}, "downloads": -1, "filename": "catalyst-19.8.tar.gz", "has_sig": false, "md5_digest": "1fcf47308ebfef92d0c007f6330ed3e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 130241, "upload_time": "2019-08-01T12:21:07", "upload_time_iso_8601": "2019-08-01T12:21:07.856711Z", "url": "https://files.pythonhosted.org/packages/72/2f/dd21e5791d6889ab3721b0f69a16bc10213e961d19606595391d68db258a/catalyst-19.8.tar.gz", "yanked": false}], "19.8.1": [{"comment_text": "", "digests": {"md5": "8d937c49995e9fc792e4629fdd6ed17f", "sha256": "5ddad5f135e0bcf7a00f3c6af067a2e782d7f4a5a1f8f543e0995084174052fc"}, "downloads": -1, "filename": "catalyst-19.8.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8d937c49995e9fc792e4629fdd6ed17f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 217346, "upload_time": "2019-08-11T05:44:26", "upload_time_iso_8601": "2019-08-11T05:44:26.181577Z", "url": "https://files.pythonhosted.org/packages/8c/ec/536961e84cdf858dcc15a45d637e7854e9662b1ad9cb90a3d1f26c0d9ca7/catalyst-19.8.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "466e28e0b3273b2a7949093fc554fe26", "sha256": "c785428b2bc99c5c7f647c4ea39c914cb38eace779268ddcc9e417df5cdf6c2f"}, "downloads": -1, "filename": "catalyst-19.8.1.tar.gz", "has_sig": false, "md5_digest": "466e28e0b3273b2a7949093fc554fe26", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 133107, "upload_time": "2019-08-11T05:44:28", "upload_time_iso_8601": "2019-08-11T05:44:28.439067Z", "url": "https://files.pythonhosted.org/packages/44/b4/7720c48de310d068e2ed1a3dd6e77e5597c389abfe19a0f9cb84b6f821e2/catalyst-19.8.1.tar.gz", "yanked": false}], "19.8.3": [{"comment_text": "", "digests": {"md5": "a4dcdc6071fa6a0156c35e00da9e11e2", "sha256": "d12e8775e782638d5c8aed6cf0ad309bb6ea2c9fade834a69c1b44310c570fa5"}, "downloads": -1, "filename": "catalyst-19.8.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a4dcdc6071fa6a0156c35e00da9e11e2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 218970, "upload_time": "2019-08-12T17:59:19", "upload_time_iso_8601": "2019-08-12T17:59:19.443974Z", "url": "https://files.pythonhosted.org/packages/9e/4e/c75232641fc33bd3af6f4db1d118ecec65b32fb4838b27e6352d0f616194/catalyst-19.8.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "581461b11dad5298067daa7cd7aec6d1", "sha256": "9c1373377dfd438a69334951a575f50b17de0363212ab82a2fae3763cfdc5ac3"}, "downloads": -1, "filename": "catalyst-19.8.3.tar.gz", "has_sig": false, "md5_digest": "581461b11dad5298067daa7cd7aec6d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 134560, "upload_time": "2019-08-12T17:59:21", "upload_time_iso_8601": "2019-08-12T17:59:21.366030Z", "url": "https://files.pythonhosted.org/packages/9c/db/dede7b00782ad16369a9c1f64277d967cd47f0a77320d93588601a41b656/catalyst-19.8.3.tar.gz", "yanked": false}], "19.8.4": [{"comment_text": "", "digests": {"md5": "364c54a325caaa9334a914a97b2f3450", "sha256": "0dc63e846f22af3a46056e02e3acfc497687ddc432f1f9dfba23e91db17f686f"}, "downloads": -1, "filename": "catalyst-19.8.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "364c54a325caaa9334a914a97b2f3450", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 219954, "upload_time": "2019-08-15T12:35:03", "upload_time_iso_8601": "2019-08-15T12:35:03.612969Z", "url": "https://files.pythonhosted.org/packages/1f/b5/5457a16964877890226f037cd6cb77d7f17d6ae63b131b5a28b97dd924af/catalyst-19.8.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a03323e482b0b5af24a9c3f19ae74003", "sha256": "20b1b953819956fc95a18610083c6a98b2e64dcd82e92d7959e03fa692985f66"}, "downloads": -1, "filename": "catalyst-19.8.4.tar.gz", "has_sig": false, "md5_digest": "a03323e482b0b5af24a9c3f19ae74003", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 135682, "upload_time": "2019-08-15T12:35:06", "upload_time_iso_8601": "2019-08-15T12:35:06.196175Z", "url": "https://files.pythonhosted.org/packages/65/5b/e5651fa15338e45b71358a23bde5d90154d0cc7178b855a33e2917d434ea/catalyst-19.8.4.tar.gz", "yanked": false}], "19.8.5": [{"comment_text": "", "digests": {"md5": "9e128ca1834335b25f696abaf17aa63a", "sha256": "0af1d492bea63020e4b664ba2028c5a2bf8fa4c7892d894d435b3a2a0a30869e"}, "downloads": -1, "filename": "catalyst-19.8.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9e128ca1834335b25f696abaf17aa63a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 231987, "upload_time": "2019-08-18T10:45:10", "upload_time_iso_8601": "2019-08-18T10:45:10.481246Z", "url": "https://files.pythonhosted.org/packages/79/cc/1ab9601fa2324585c82e83c3b77b6e14d51231205e382afa4dda59bd6c41/catalyst-19.8.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b133ed3488768e487f5956b915f89fe0", "sha256": "cdc1032462e79733d6034449e27ccf66ce8ea8120b509939a209b87db8e05038"}, "downloads": -1, "filename": "catalyst-19.8.5.tar.gz", "has_sig": false, "md5_digest": "b133ed3488768e487f5956b915f89fe0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 141228, "upload_time": "2019-08-18T10:45:13", "upload_time_iso_8601": "2019-08-18T10:45:13.653483Z", "url": "https://files.pythonhosted.org/packages/84/34/e43f93ef6298b7a573f35f97b34a3533497daea38f7dbabb48aa1466aba4/catalyst-19.8.5.tar.gz", "yanked": false}], "19.8.6": [{"comment_text": "", "digests": {"md5": "acc4a41c5c28e22f48c96494ea2e0b8c", "sha256": "36fe212bec4987693f9c74a597fae03bf8e4c0007193f10c25a7c728bce60a5c"}, "downloads": -1, "filename": "catalyst-19.8.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "acc4a41c5c28e22f48c96494ea2e0b8c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 234337, "upload_time": "2019-08-22T06:53:51", "upload_time_iso_8601": "2019-08-22T06:53:51.195166Z", "url": "https://files.pythonhosted.org/packages/2f/1b/be31243159f7006b42c1854a92a654132f59cebd48b8e710e3b49a3dcd94/catalyst-19.8.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b50f52733e5a9596837c6585bb0f34e6", "sha256": "a84eca94a171f4c1e6d608fb8d14a253a9b65e86c29f0d2100c2fe4a06d0da12"}, "downloads": -1, "filename": "catalyst-19.8.6.tar.gz", "has_sig": false, "md5_digest": "b50f52733e5a9596837c6585bb0f34e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 144399, "upload_time": "2019-08-22T06:53:55", "upload_time_iso_8601": "2019-08-22T06:53:55.252167Z", "url": "https://files.pythonhosted.org/packages/93/9f/c446f3257a7c56b51605c5e6abd678e1337e94a0db6bf46fd46a43c2abd0/catalyst-19.8.6.tar.gz", "yanked": false}], "19.8.7": [{"comment_text": "", "digests": {"md5": "726236af6700974207f31019d19f0e18", "sha256": "fc47c199aa8a3ea6e98a91af71126e2b1ca1e86221e7846bdc2fccd46659df23"}, "downloads": -1, "filename": "catalyst-19.8.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "726236af6700974207f31019d19f0e18", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 240906, "upload_time": "2019-08-29T16:14:53", "upload_time_iso_8601": "2019-08-29T16:14:53.216301Z", "url": "https://files.pythonhosted.org/packages/58/70/b0aa8f053f0ba8b73676f3a90aa889a70c95283e3d43cacde41bd76182dc/catalyst-19.8.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebe2e2c0a8b5019dbdab7872e55defb1", "sha256": "a5792aa6ced0809f9ba07940ebdcf615cf9aeacf0f0cf7fb4a12267239dc6c34"}, "downloads": -1, "filename": "catalyst-19.8.7.tar.gz", "has_sig": false, "md5_digest": "ebe2e2c0a8b5019dbdab7872e55defb1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 149085, "upload_time": "2019-08-29T16:14:55", "upload_time_iso_8601": "2019-08-29T16:14:55.732480Z", "url": "https://files.pythonhosted.org/packages/60/89/f26b85f01728477eb641e2e8b5652e569f213aa5853b2d2ea33c35cb115a/catalyst-19.8.7.tar.gz", "yanked": false}], "19.8.8": [{"comment_text": "", "digests": {"md5": "59b016c0f964b5a04ba6943dc1f7b6cd", "sha256": "2041f1b17fea8070c608ce15f3ef288d23ef9de8a2664bc314bb56406cec8e2d"}, "downloads": -1, "filename": "catalyst-19.8.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "59b016c0f964b5a04ba6943dc1f7b6cd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 243422, "upload_time": "2019-08-30T19:57:41", "upload_time_iso_8601": "2019-08-30T19:57:41.330974Z", "url": "https://files.pythonhosted.org/packages/0e/02/ca1e4a4cdedfe6c85e0b1b152a992a061ba1f79fc5e991ede012053e21db/catalyst-19.8.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bcbcd588ac44df201f65774d6eb14e65", "sha256": "34d884ac2a5faa950e68c2cbd1b2088a655047369fdbf0aab21107168b5d490e"}, "downloads": -1, "filename": "catalyst-19.8.8.tar.gz", "has_sig": false, "md5_digest": "bcbcd588ac44df201f65774d6eb14e65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 150809, "upload_time": "2019-08-30T19:57:43", "upload_time_iso_8601": "2019-08-30T19:57:43.439247Z", "url": "https://files.pythonhosted.org/packages/7e/d3/0d702ef953cedd2af67c503238ce8994a450c2d7207507eb703b27c9c8ae/catalyst-19.8.8.tar.gz", "yanked": false}], "19.9": [{"comment_text": "", "digests": {"md5": "22166ad0018bef6026bf444d2a9bf52f", "sha256": "72a32a860e160c4e2d903c9b69868d905d5f583df68494ae4c7cee6e60a7833c"}, "downloads": -1, "filename": "catalyst-19.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "22166ad0018bef6026bf444d2a9bf52f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 244376, "upload_time": "2019-09-02T17:05:34", "upload_time_iso_8601": "2019-09-02T17:05:34.389891Z", "url": "https://files.pythonhosted.org/packages/7e/9b/6b36cccf8b6247ef19324ab2140f34e7918e3947ae73d2a8aff14e4611e6/catalyst-19.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b7572646da24e476ce96a3a70a74c3e", "sha256": "74ca9f58f7216df144ce43cc80f07a5abf41468d127f0897a98b39076b2dff68"}, "downloads": -1, "filename": "catalyst-19.9.tar.gz", "has_sig": false, "md5_digest": "3b7572646da24e476ce96a3a70a74c3e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 151550, "upload_time": "2019-09-02T17:05:38", "upload_time_iso_8601": "2019-09-02T17:05:38.310065Z", "url": "https://files.pythonhosted.org/packages/3e/5a/e7c032555a3ab1564520c6a7db51de8655133e9abaafc4e32a9cbe735a8a/catalyst-19.9.tar.gz", "yanked": false}], "19.9.1": [{"comment_text": "", "digests": {"md5": "81448c33734aff8eb44779286922f250", "sha256": "61c8a7bfe95b570f5f0f61c88d64b4a1a53853a6097dc2bc36ea242c7fa6beef"}, "downloads": -1, "filename": "catalyst-19.9.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "81448c33734aff8eb44779286922f250", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 244432, "upload_time": "2019-09-03T11:53:46", "upload_time_iso_8601": "2019-09-03T11:53:46.085422Z", "url": "https://files.pythonhosted.org/packages/d5/b9/09b0d10e5dbc52f09b9b3c0fbf719a18b8dee9d10f709feee74e6dc30c4e/catalyst-19.9.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ada25a5693c91160616e17a14a87fbb", "sha256": "777906dfb346e5fa808bb887ee27764ef3c0d7516d937df8f821224f1487d4f7"}, "downloads": -1, "filename": "catalyst-19.9.1.tar.gz", "has_sig": false, "md5_digest": "0ada25a5693c91160616e17a14a87fbb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 151561, "upload_time": "2019-09-03T11:53:48", "upload_time_iso_8601": "2019-09-03T11:53:48.200973Z", "url": "https://files.pythonhosted.org/packages/a3/4b/92799b3bbc0005e595f9036110afd632f9312127ca493a984ab39c185b92/catalyst-19.9.1.tar.gz", "yanked": false}], "19.9.2": [{"comment_text": "", "digests": {"md5": "7e445e11874cf7df9c842e45f82795ba", "sha256": "78961aebda9e3a5fd38b4fdc5001ba4fb1e1f21d45bcdd58d34a7b392415c131"}, "downloads": -1, "filename": "catalyst-19.9.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7e445e11874cf7df9c842e45f82795ba", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 247016, "upload_time": "2019-09-06T07:23:01", "upload_time_iso_8601": "2019-09-06T07:23:01.101329Z", "url": "https://files.pythonhosted.org/packages/af/41/c6180253c55d7b30ec3a2741029ceb1e559b6b800113070b586e4d71f26a/catalyst-19.9.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19bcda5025b7d3d36f14a3f62d99516c", "sha256": "38b809d0d49f258ffaff0f1555cc813a3e94cf6774a8d9517b4eee54c7463bb6"}, "downloads": -1, "filename": "catalyst-19.9.2.tar.gz", "has_sig": false, "md5_digest": "19bcda5025b7d3d36f14a3f62d99516c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 153482, "upload_time": "2019-09-06T07:23:04", "upload_time_iso_8601": "2019-09-06T07:23:04.752382Z", "url": "https://files.pythonhosted.org/packages/28/1f/d2cf9e3dd58555ce95ab134c55b7a95606544d5ecd81a00d8711b14de8a4/catalyst-19.9.2.tar.gz", "yanked": false}], "19.9.3": [{"comment_text": "", "digests": {"md5": "f2b08e11e64fabd247863d9e6d95aca3", "sha256": "afe983acdb9f7f73b58df99c898f6976118b0bec4dae991402918f1b7c7b5e3b"}, "downloads": -1, "filename": "catalyst-19.9.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f2b08e11e64fabd247863d9e6d95aca3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 250839, "upload_time": "2019-09-12T11:32:11", "upload_time_iso_8601": "2019-09-12T11:32:11.796984Z", "url": "https://files.pythonhosted.org/packages/81/2d/a4074ca2863f68a9fb9c0a32a08a9678c3671bcee08c99417f4ccdef324f/catalyst-19.9.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "befff96d374e8eb75ec2365036145a11", "sha256": "2337af64dd12b73ee977f05e8a207a361010c4a4985c4428f400ce58b926d6e8"}, "downloads": -1, "filename": "catalyst-19.9.3.tar.gz", "has_sig": false, "md5_digest": "befff96d374e8eb75ec2365036145a11", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 156287, "upload_time": "2019-09-12T11:32:14", "upload_time_iso_8601": "2019-09-12T11:32:14.091207Z", "url": "https://files.pythonhosted.org/packages/64/55/3fdff9b9fd6fa3c5c4f3e2736b4af0a24ab8d7033f02447e5181aa427f19/catalyst-19.9.3.tar.gz", "yanked": false}], "19.9.4": [{"comment_text": "", "digests": {"md5": "cd2b86800342d86d19d6b1989440fcf9", "sha256": "dbb34d5e7e44aff563486c75c17814a482848db11beb93b8c69e32f816b67e7f"}, "downloads": -1, "filename": "catalyst-19.9.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cd2b86800342d86d19d6b1989440fcf9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 253315, "upload_time": "2019-09-16T09:01:49", "upload_time_iso_8601": "2019-09-16T09:01:49.856735Z", "url": "https://files.pythonhosted.org/packages/e3/a1/0cfa4c13449c4dbf70f74f08f32d66f366e9dbf7dc1e81892ca633eca4b4/catalyst-19.9.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "215f68b29fbd6274a0163841a1947e21", "sha256": "36a9853764e8ad9149b0db9f7534e9306904a13e1464e04dae7e735b23bdb5d6"}, "downloads": -1, "filename": "catalyst-19.9.4.tar.gz", "has_sig": false, "md5_digest": "215f68b29fbd6274a0163841a1947e21", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 158564, "upload_time": "2019-09-16T09:01:52", "upload_time_iso_8601": "2019-09-16T09:01:52.134710Z", "url": "https://files.pythonhosted.org/packages/1d/60/b843dc5e3f0980778a2cad4e081dc4a20593314d9a20497a945f9b804ad4/catalyst-19.9.4.tar.gz", "yanked": false}], "19.9.5": [{"comment_text": "", "digests": {"md5": "28080ef7311588c4aaec492154cf8e3d", "sha256": "f6a7e80067c4d36dbc430f63302751bee327ff150d43556c88d95089a3dbb0c9"}, "downloads": -1, "filename": "catalyst-19.9.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "28080ef7311588c4aaec492154cf8e3d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 257999, "upload_time": "2019-09-25T06:01:40", "upload_time_iso_8601": "2019-09-25T06:01:40.649774Z", "url": "https://files.pythonhosted.org/packages/0a/3d/256e6f44d60675d90b7cfd317cddfcfd0c11fcb1100d9bb9adfab379286d/catalyst-19.9.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1c849cd9771876d1016f661121f751f", "sha256": "9237da653286610e440fe651cc813b7523e2640195c2f686a2b6e0894fc84ba1"}, "downloads": -1, "filename": "catalyst-19.9.5.tar.gz", "has_sig": false, "md5_digest": "c1c849cd9771876d1016f661121f751f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 161529, "upload_time": "2019-09-25T06:01:43", "upload_time_iso_8601": "2019-09-25T06:01:43.198691Z", "url": "https://files.pythonhosted.org/packages/e0/a5/52384190b0738cfef5ea2644f2316d71353bb91d29b368a4120b028c87fd/catalyst-19.9.5.tar.gz", "yanked": false}], "20.1": [{"comment_text": "", "digests": {"md5": "da62a2e3b6127f4a5115af4b75f85173", "sha256": "d8a5d87c3dad0ee0aac270fd5deaaed0c47ea43e8ff4e66dcf0a9a06b059e94c"}, "downloads": -1, "filename": "catalyst-20.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "da62a2e3b6127f4a5115af4b75f85173", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 311921, "upload_time": "2020-01-02T07:44:50", "upload_time_iso_8601": "2020-01-02T07:44:50.208136Z", "url": "https://files.pythonhosted.org/packages/0c/5e/782cc083723798e7e68450f76d96e46cb6528a60e10cf4d67829e7732ede/catalyst-20.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c842ff4ebd21418b72e7920c855b3232", "sha256": "65e0ce9a97f176b8c98d94b69fecf5c064d1fe316ac3123eb642b94c2b5097b8"}, "downloads": -1, "filename": "catalyst-20.1.tar.gz", "has_sig": false, "md5_digest": "c842ff4ebd21418b72e7920c855b3232", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 202421, "upload_time": "2020-01-02T07:44:52", "upload_time_iso_8601": "2020-01-02T07:44:52.349353Z", "url": "https://files.pythonhosted.org/packages/8a/3c/2ca7948b3a3764e69cbc99e3c4da7dbf195b1b8079a01893234ca6b16bf5/catalyst-20.1.tar.gz", "yanked": false}], "20.1.1": [{"comment_text": "", "digests": {"md5": "410326327b3bc1784cf376fd825e1b8a", "sha256": "70ff763c631015510903896eb3c28c256bbde25d5a6a79766f7a0130b2a70678"}, "downloads": -1, "filename": "catalyst-20.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "410326327b3bc1784cf376fd825e1b8a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 317895, "upload_time": "2020-01-18T18:45:14", "upload_time_iso_8601": "2020-01-18T18:45:14.646498Z", "url": "https://files.pythonhosted.org/packages/5a/90/62d4bc5ce46eecde97866366aedf6a82b514723fbfe73fc4bc74040bbc2b/catalyst-20.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c4e3401875b315e111b91923cc7b17a", "sha256": "a61c65fa85dbb0aca193333728081f634e796766bb650898447ef7fe574a037a"}, "downloads": -1, "filename": "catalyst-20.1.1.tar.gz", "has_sig": false, "md5_digest": "4c4e3401875b315e111b91923cc7b17a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 206415, "upload_time": "2020-01-18T18:45:16", "upload_time_iso_8601": "2020-01-18T18:45:16.864900Z", "url": "https://files.pythonhosted.org/packages/f4/dd/3cd9b6be78ec6bffcc9612ac97d22c5f48b93ed1ffec30ff3b9f3b803cee/catalyst-20.1.1.tar.gz", "yanked": false}], "20.1.3": [{"comment_text": "", "digests": {"md5": "f4bd583003dadbb09b802744c5564084", "sha256": "d6a587e7498a21217d52f1aeb86a2bc89a33619e12bd189035849144957607da"}, "downloads": -1, "filename": "catalyst-20.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f4bd583003dadbb09b802744c5564084", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 341132, "upload_time": "2020-01-28T12:02:17", "upload_time_iso_8601": "2020-01-28T12:02:17.097624Z", "url": "https://files.pythonhosted.org/packages/f1/ff/dec6a5f9cb1472dc0db8c73516445675cdc58660c8e8940037fc3e65b25d/catalyst-20.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d533802d152f2dafdb95ea886f879989", "sha256": "db9dfb84f5f581a5a58727af4ecc93b99b958d07e609a8a3af3c378a9c8cfac3"}, "downloads": -1, "filename": "catalyst-20.1.3.tar.gz", "has_sig": false, "md5_digest": "d533802d152f2dafdb95ea886f879989", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 216390, "upload_time": "2020-01-28T12:02:19", "upload_time_iso_8601": "2020-01-28T12:02:19.247247Z", "url": "https://files.pythonhosted.org/packages/3a/95/5593439382aa2e11d2dbac0b9790fd84c52cc4d6f659e7bb4fd8ebbd2b31/catalyst-20.1.3.tar.gz", "yanked": false}], "20.2": [{"comment_text": "", "digests": {"md5": "bd2b33aaed8f5b33e39364381c163fac", "sha256": "92f30e976c113bd5c5af247ca38a0aae57e498775f181523ec14a0b741d0e582"}, "downloads": -1, "filename": "catalyst-20.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd2b33aaed8f5b33e39364381c163fac", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 347756, "upload_time": "2020-02-06T08:31:40", "upload_time_iso_8601": "2020-02-06T08:31:40.734927Z", "url": "https://files.pythonhosted.org/packages/db/c1/e2c0f5780403d5e904ce56ca1c09eae078444db34c27dac9ae79dd5de160/catalyst-20.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48ad72bf70f216cc8b6432cfa111314c", "sha256": "996e7500550a959145a24fb47c07b842ac52d76737401225f2e4c6884cc7b551"}, "downloads": -1, "filename": "catalyst-20.2.tar.gz", "has_sig": false, "md5_digest": "48ad72bf70f216cc8b6432cfa111314c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 219893, "upload_time": "2020-02-06T08:31:43", "upload_time_iso_8601": "2020-02-06T08:31:43.409653Z", "url": "https://files.pythonhosted.org/packages/7e/27/a2d8c149c59d47584556d48c8c79cfb8f1f770f16b062d16e7892b453375/catalyst-20.2.tar.gz", "yanked": false}], "20.2.1": [{"comment_text": "", "digests": {"md5": "56b840e3f0558b16db4264b456331ab1", "sha256": "231e53000f6e9d56048d1ddc1b9b5aa618005d937526062d277240aea1a5b41c"}, "downloads": -1, "filename": "catalyst-20.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "56b840e3f0558b16db4264b456331ab1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 352459, "upload_time": "2020-02-10T21:24:58", "upload_time_iso_8601": "2020-02-10T21:24:58.733212Z", "url": "https://files.pythonhosted.org/packages/e3/ea/3c87fd2a74eb2c21dbc15204d707b9f345beef82b0197ae383d26c1767bf/catalyst-20.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7beef238c4de5c4fd61de2e4f8a3fbe3", "sha256": "1fcdf1b5f19de0c4f554de4c638cc81a59152a21536f1e07c3c8fa6cee655060"}, "downloads": -1, "filename": "catalyst-20.2.1.tar.gz", "has_sig": false, "md5_digest": "7beef238c4de5c4fd61de2e4f8a3fbe3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 223597, "upload_time": "2020-02-10T21:25:01", "upload_time_iso_8601": "2020-02-10T21:25:01.215950Z", "url": "https://files.pythonhosted.org/packages/a2/a6/d901a7c793acffbe906899daa305d4726b0f6196476c82583a484f59a947/catalyst-20.2.1.tar.gz", "yanked": false}], "20.2.2": [{"comment_text": "", "digests": {"md5": "45702abad27b93e9897229df6ecdd3fe", "sha256": "2cd5adbb7bdf5ec7f1bb9f611ea78ac37c998b652c5a3795352dd8f94e654ca2"}, "downloads": -1, "filename": "catalyst-20.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "45702abad27b93e9897229df6ecdd3fe", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 353927, "upload_time": "2020-02-15T13:21:22", "upload_time_iso_8601": "2020-02-15T13:21:22.657506Z", "url": "https://files.pythonhosted.org/packages/0e/83/04b0733272a064032c1b8462585d7b20af138a5b184eae854bf909e2afe5/catalyst-20.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68c5b2fb8b6112959074bad42c7228ab", "sha256": "06eb153e98a6f190fdae54d7a575faf5b8943f4f30cd9966a6f17bd1438f8c63"}, "downloads": -1, "filename": "catalyst-20.2.2.tar.gz", "has_sig": false, "md5_digest": "68c5b2fb8b6112959074bad42c7228ab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 224680, "upload_time": "2020-02-15T13:21:24", "upload_time_iso_8601": "2020-02-15T13:21:24.960160Z", "url": "https://files.pythonhosted.org/packages/81/f0/580065c69aea6f544d92de313577b2d53913cdd2fa4e5e72e4997dbda2a9/catalyst-20.2.2.tar.gz", "yanked": false}], "20.2.3": [{"comment_text": "", "digests": {"md5": "8a1ff029346aaa01dbe7a25e46dfaf14", "sha256": "2bc55e19d4963720df90c38542d4e928f5d35de5f45456567418d31cfb9a7420"}, "downloads": -1, "filename": "catalyst-20.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8a1ff029346aaa01dbe7a25e46dfaf14", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 354994, "upload_time": "2020-02-20T10:30:41", "upload_time_iso_8601": "2020-02-20T10:30:41.051235Z", "url": "https://files.pythonhosted.org/packages/fe/b4/cf94cd4f064527be8a55f90bde9f7558722bce2206bc2abc9eb085ce9563/catalyst-20.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d2a09715d0438db72cd9504ece331da", "sha256": "89fa633e2b0f549e1bc04968c0bd9e0a6e2bca07862adcc5a0940db58aaf5eda"}, "downloads": -1, "filename": "catalyst-20.2.3.tar.gz", "has_sig": false, "md5_digest": "2d2a09715d0438db72cd9504ece331da", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 225747, "upload_time": "2020-02-20T10:30:43", "upload_time_iso_8601": "2020-02-20T10:30:43.874959Z", "url": "https://files.pythonhosted.org/packages/a9/05/a9cc1471e01b88d6a23a063b2c1cff37ace432e1eeae01da707e8856571b/catalyst-20.2.3.tar.gz", "yanked": false}], "20.2.4": [{"comment_text": "", "digests": {"md5": "6fbd8341716f58603d7e7d0f3f46f9dd", "sha256": "aec9a1c013b09c5466469cd9eddeaa6f37dad833a6935b5922523ff8902c6e3f"}, "downloads": -1, "filename": "catalyst-20.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6fbd8341716f58603d7e7d0f3f46f9dd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 355469, "upload_time": "2020-02-23T16:53:21", "upload_time_iso_8601": "2020-02-23T16:53:21.497956Z", "url": "https://files.pythonhosted.org/packages/63/88/82ddb7cc19e8af8e4ec4023f43611a9627fe67c419981756f9339d0753b5/catalyst-20.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ccd2062cb19a26dcae9d7b20b486c73", "sha256": "f3b51df169140242611b75fb4e1a83aa782223ce30c66042591d1daa0cafecfe"}, "downloads": -1, "filename": "catalyst-20.2.4.tar.gz", "has_sig": false, "md5_digest": "4ccd2062cb19a26dcae9d7b20b486c73", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 226111, "upload_time": "2020-02-23T16:53:23", "upload_time_iso_8601": "2020-02-23T16:53:23.678781Z", "url": "https://files.pythonhosted.org/packages/88/46/8088b81acccbac4aba332af868e2eb68fabc0dfde693d22c6beb77d2a619/catalyst-20.2.4.tar.gz", "yanked": false}], "20.3": [{"comment_text": "", "digests": {"md5": "b211cc4bf639bc487fe236fda90f5a88", "sha256": "33624c272561b470c205e19a09936e7cd76c40c64730a89111eb49835a59322f"}, "downloads": -1, "filename": "catalyst-20.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b211cc4bf639bc487fe236fda90f5a88", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 362278, "upload_time": "2020-03-07T04:36:43", "upload_time_iso_8601": "2020-03-07T04:36:43.750203Z", "url": "https://files.pythonhosted.org/packages/1c/7d/3ba6e33182ef43e80f859947b9505dc4e47f4a512842f881ddfe6a17de78/catalyst-20.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aede5d8353326a8e86739ef027143f70", "sha256": "e3727323f1d27a8ee0d56f2383a49c9989791c0b4c4cbaaf233fec7f8907f21b"}, "downloads": -1, "filename": "catalyst-20.3.tar.gz", "has_sig": false, "md5_digest": "aede5d8353326a8e86739ef027143f70", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 228657, "upload_time": "2020-03-07T04:36:46", "upload_time_iso_8601": "2020-03-07T04:36:46.317508Z", "url": "https://files.pythonhosted.org/packages/96/88/51d6b17193c76df4d95482c9a17e154d344275224565a0c06f8db2cbcbdf/catalyst-20.3.tar.gz", "yanked": false}], "20.3.1": [{"comment_text": "", "digests": {"md5": "43f0b7efb5c97588f7ebf7678bb98f7b", "sha256": "4b7f4e65df36d87b67dbce8cbfe7c6b84b125ec4fee2d94a8b0fdc07a24abb4a"}, "downloads": -1, "filename": "catalyst-20.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "43f0b7efb5c97588f7ebf7678bb98f7b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 364878, "upload_time": "2020-03-14T16:17:08", "upload_time_iso_8601": "2020-03-14T16:17:08.852023Z", "url": "https://files.pythonhosted.org/packages/60/e8/ebd480fc6be02a6c8c8e072ef83c3bb7914e287a01b20a1a60a7d3f83752/catalyst-20.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11f9128ef05e30ab003faa643e049b8d", "sha256": "623560edc245eabb3452d7bec8c2d0ad601de274e9e0b81436735624d449736e"}, "downloads": -1, "filename": "catalyst-20.3.1.tar.gz", "has_sig": false, "md5_digest": "11f9128ef05e30ab003faa643e049b8d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 229535, "upload_time": "2020-03-14T16:17:15", "upload_time_iso_8601": "2020-03-14T16:17:15.391270Z", "url": "https://files.pythonhosted.org/packages/72/8d/69f5a4bce535d3fe7d5cb86bd16a1b2e4733d8691f9d5ceb1cf9cb00a238/catalyst-20.3.1.tar.gz", "yanked": false}], "20.3.2": [{"comment_text": "", "digests": {"md5": "9d0c0a9f585fcac26e876a394180789c", "sha256": "274cb559ad38b538957bbf0682db86b83fe2b5abd7a6cdfb25903c4ec38dbd8c"}, "downloads": -1, "filename": "catalyst-20.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9d0c0a9f585fcac26e876a394180789c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 388679, "upload_time": "2020-03-19T18:07:10", "upload_time_iso_8601": "2020-03-19T18:07:10.893716Z", "url": "https://files.pythonhosted.org/packages/c9/02/8328fb3b01b7c128a4f8abfe2df9508bcae64866a8c41c44ea9f7981f44f/catalyst-20.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab466482d0289b39d13f7f523d59d274", "sha256": "85ada2201430b020d66883aa02071f42a588d28e353188d298da24ca2f172921"}, "downloads": -1, "filename": "catalyst-20.3.2.tar.gz", "has_sig": false, "md5_digest": "ab466482d0289b39d13f7f523d59d274", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 169726, "upload_time": "2020-03-19T18:07:13", "upload_time_iso_8601": "2020-03-19T18:07:13.089454Z", "url": "https://files.pythonhosted.org/packages/20/31/5256343c0aa3c4b6dfea762a940fd187109b283522b0d9d8524431bd7b1a/catalyst-20.3.2.tar.gz", "yanked": false}], "20.3.3": [{"comment_text": "", "digests": {"md5": "04fac918e13d61cf09e1ab6f4d18630b", "sha256": "8d3372e5fecdc62d869d89152e1ee78b533c496699f7131695817d871ffd7392"}, "downloads": -1, "filename": "catalyst-20.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "04fac918e13d61cf09e1ab6f4d18630b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 264866, "upload_time": "2020-03-22T07:42:17", "upload_time_iso_8601": "2020-03-22T07:42:17.005603Z", "url": "https://files.pythonhosted.org/packages/6e/08/87cfca9e1f283719161438efc48dfcbbd4eda4b473d92dd1264dcbed27eb/catalyst-20.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bca5e074e098d5b13bade09f0824f560", "sha256": "e2b0f8e31c413b23dc8fe927a52b15acd6a455438ae322e4181a0ecf75852b8d"}, "downloads": -1, "filename": "catalyst-20.3.3.tar.gz", "has_sig": false, "md5_digest": "bca5e074e098d5b13bade09f0824f560", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 169864, "upload_time": "2020-03-22T07:42:19", "upload_time_iso_8601": "2020-03-22T07:42:19.106639Z", "url": "https://files.pythonhosted.org/packages/d0/40/9ec57a9f76e8f2d530e8ff50389b17baa6fbf527ba91587f4aa4dcd83146/catalyst-20.3.3.tar.gz", "yanked": false}], "20.4": [{"comment_text": "", "digests": {"md5": "e1c6ab49a4e05a5735b6f0286629a534", "sha256": "6be4d69762e32d6126fc99f7d1d2ba2f87f1593886fe55f69a97577189382644"}, "downloads": -1, "filename": "catalyst-20.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e1c6ab49a4e05a5735b6f0286629a534", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 321674, "upload_time": "2020-04-06T19:39:13", "upload_time_iso_8601": "2020-04-06T19:39:13.604971Z", "url": "https://files.pythonhosted.org/packages/8b/ff/c58e111bb9b6bc0d64337009e37d6db7be08e777e33b6de62c3f0c28e928/catalyst-20.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dfc2fb7e1521154d408f004f7b144ec", "sha256": "2a65b77db8031a2315a0ace9752d647181523cbec12dd057319f7ffcece6d426"}, "downloads": -1, "filename": "catalyst-20.4.tar.gz", "has_sig": false, "md5_digest": "2dfc2fb7e1521154d408f004f7b144ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 201704, "upload_time": "2020-04-06T19:39:22", "upload_time_iso_8601": "2020-04-06T19:39:22.646998Z", "url": "https://files.pythonhosted.org/packages/19/95/32021c7fbd1534a1411bda7dd0c874e421fbe562900e18df53e5fe584d30/catalyst-20.4.tar.gz", "yanked": false}], "20.4.1": [{"comment_text": "", "digests": {"md5": "6a9f247df802dca2a28178694f4a4f0f", "sha256": "fe918f08d7073fdcb895524fdc60d4b23451a3c50813be24e682f73a91bbe2f9"}, "downloads": -1, "filename": "catalyst-20.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6a9f247df802dca2a28178694f4a4f0f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 326031, "upload_time": "2020-04-07T08:21:43", "upload_time_iso_8601": "2020-04-07T08:21:43.419378Z", "url": "https://files.pythonhosted.org/packages/32/cb/10860c15a9226728f14a5243e99e8399c6a5735b29f465bc91f3a2a29d34/catalyst-20.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a736cb3bc5cef44dd7dcd180a849bad", "sha256": "c56f23f3d7e075eaf6260933a2a7c45ebe5ef29ae7b6b80dbb562609c8080387"}, "downloads": -1, "filename": "catalyst-20.4.1.tar.gz", "has_sig": false, "md5_digest": "5a736cb3bc5cef44dd7dcd180a849bad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 204407, "upload_time": "2020-04-07T08:21:45", "upload_time_iso_8601": "2020-04-07T08:21:45.807217Z", "url": "https://files.pythonhosted.org/packages/36/20/dae1da22f4e2383853156a8b156272018d1466e14cdec9d2722e98119ae5/catalyst-20.4.1.tar.gz", "yanked": false}], "20.4.2": [{"comment_text": "", "digests": {"md5": "548fc0970e4f10c0638b6d6feda0a8c5", "sha256": "8e517fbdbd729b1c6db15a8ae5b3860eae79808aceee0f3534f93cefac7bb10c"}, "downloads": -1, "filename": "catalyst-20.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "548fc0970e4f10c0638b6d6feda0a8c5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 323783, "upload_time": "2020-04-21T20:14:31", "upload_time_iso_8601": "2020-04-21T20:14:31.415878Z", "url": "https://files.pythonhosted.org/packages/a2/96/87158d74688d7d2e3c233f1fd931d86b3ca4663e2d8869e0786463fb79bf/catalyst-20.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb153bc5cee3e3337800bbd585ba77d7", "sha256": "b5fdc426046710a379fe57adf2c23d3479fdd3bbb59755357491761e1dbc4e8b"}, "downloads": -1, "filename": "catalyst-20.4.2.tar.gz", "has_sig": false, "md5_digest": "fb153bc5cee3e3337800bbd585ba77d7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 210247, "upload_time": "2020-04-21T20:14:34", "upload_time_iso_8601": "2020-04-21T20:14:34.172946Z", "url": "https://files.pythonhosted.org/packages/88/ed/140f941a58c9a3e9747f668c34d1f912d54f4a9f58343a245c0511485271/catalyst-20.4.2.tar.gz", "yanked": false}], "20.5": [{"comment_text": "", "digests": {"md5": "442ad8f699aa447f44de80343b1c2d80", "sha256": "ca92f1b98447b78c3a06516f29d6b513f177f0077cde9369dcfa48b3d14a1854"}, "downloads": -1, "filename": "catalyst-20.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "442ad8f699aa447f44de80343b1c2d80", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 347738, "upload_time": "2020-05-07T08:56:30", "upload_time_iso_8601": "2020-05-07T08:56:30.927287Z", "url": "https://files.pythonhosted.org/packages/64/05/ac1e89cd9533c66e10e286d23dc2c4d042abee177bba9d1be738f55fa10d/catalyst-20.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec446f82a9b1fb9d80b7655015d67c17", "sha256": "d4daf35bb21839be6593a095d567ef646565e9857877361212cd0f2e7f1f7c67"}, "downloads": -1, "filename": "catalyst-20.5.tar.gz", "has_sig": false, "md5_digest": "ec446f82a9b1fb9d80b7655015d67c17", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 229396, "upload_time": "2020-05-07T08:56:33", "upload_time_iso_8601": "2020-05-07T08:56:33.558052Z", "url": "https://files.pythonhosted.org/packages/62/de/3166285f729093057683e442b531f9f95196ecdd844efe0deee1721351c7/catalyst-20.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "442ad8f699aa447f44de80343b1c2d80", "sha256": "ca92f1b98447b78c3a06516f29d6b513f177f0077cde9369dcfa48b3d14a1854"}, "downloads": -1, "filename": "catalyst-20.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "442ad8f699aa447f44de80343b1c2d80", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 347738, "upload_time": "2020-05-07T08:56:30", "upload_time_iso_8601": "2020-05-07T08:56:30.927287Z", "url": "https://files.pythonhosted.org/packages/64/05/ac1e89cd9533c66e10e286d23dc2c4d042abee177bba9d1be738f55fa10d/catalyst-20.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec446f82a9b1fb9d80b7655015d67c17", "sha256": "d4daf35bb21839be6593a095d567ef646565e9857877361212cd0f2e7f1f7c67"}, "downloads": -1, "filename": "catalyst-20.5.tar.gz", "has_sig": false, "md5_digest": "ec446f82a9b1fb9d80b7655015d67c17", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 229396, "upload_time": "2020-05-07T08:56:33", "upload_time_iso_8601": "2020-05-07T08:56:33.558052Z", "url": "https://files.pythonhosted.org/packages/62/de/3166285f729093057683e442b531f9f95196ecdd844efe0deee1721351c7/catalyst-20.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:17 2020"}