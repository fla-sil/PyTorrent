{"info": {"author": "Mikhail Burshteyn", "author_email": "mdburshteyn@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Environment :: Plugins", "Framework :: Flake8", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing", "Topic :: Software Development :: Testing :: Unit"], "description": "# flake8-pytest-style\n\n[![pypi](https://badge.fury.io/py/flake8-pytest-style.svg)](https://pypi.org/project/flake8-pytest-style)\n[![Python: 3.6+](https://img.shields.io/badge/Python-3.6+-blue.svg)](https://pypi.org/project/flake8-pytest-style)\n[![Downloads](https://img.shields.io/pypi/dm/flake8-pytest-style.svg)](https://pypistats.org/packages/flake8-pytest-style)\n[![Build Status](https://travis-ci.com/m-burst/flake8-pytest-style.svg?branch=master)](https://travis-ci.com/m-burst/flake8-pytest-style)\n[![Code coverage](https://codecov.io/gh/m-burst/flake8-pytest-style/branch/master/graph/badge.svg)](https://codecov.io/gh/m-burst/flake8-pytest-style)\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://en.wikipedia.org/wiki/MIT_License)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n## Description\n\nA `flake8` plugin checking common style issues or inconsistencies with `pytest`-based tests.\n\nCurrently the following errors are reported:\n\n* `PT001 use @pytest.fixture() over @pytest.fixture`  \nThe preferred style is controlled by the configuration option\n`pytest-fixture-no-parentheses`\n\n* `PT002 configuration for fixture '{name}' specified via positional args, use kwargs`  \ne.g. `@pytest.fixture(scope='module')` is OK, and `@pytest.fixture('module')` is an error\n\n* `PT003 scope='function' is implied in @pytest.fixture()`  \ne.g. `@pytest.fixture(scope='function')` should be replaced with `@pytest.fixture()`\n\n* `PT004 fixture '{name}' does not return anything, add leading underscore`\n\n* `PT005 fixture '{name}' returns a value, remove leading underscore`\n\n* `PT006 wrong name(s) type in @pytest.mark.parametrize, expected {expected_type}`  \nFor a single name the expected type is always a plain string.\nFor multiple names the expected type is controlled by the configuration\nvariable `pytest-parametrize-names-type`.\n\n* `PT007 wrong values type in @pytest.mark.parametrize, expected {expected_type}`\nThe expected type of the list of rows is controlled by the configuration\nvariable `pytest-parametrize-values-type`.\nThe expected type of each row in case of multiple arguments is controlled by\nthe configuration variable `pytest-parametrize-values-row-type`.\n\n* `PT008 use return_value= instead of patching with lambda`  \ne.g. `mocker.patch('target', return_value=7)` is OK,\nand `mocker.patch('target', lambda *args: 7)` is an error\n\n* `PT009 use a regular assert instead of unittest-style '{assertion}'`\n\n* `PT010 set the expected exception in pytest.raises()`\n\n* `PT011 set the match parameter in pytest.raises({exception})`  \ne.g. `pytest.raises(ValueError, match='exception text')` is OK,\nand `pytest.raises(ValueError)` is an error.  \nThe exception list is controlled by the configuration option \n`pytest-raises-require-match-for`.\n\n* `PT012 pytest.raises() block should contain a single simple statement`  \nthis forbids multiple statements and control flow structures within\n`pytest.raises()` blocks.\n\n* `PT013 found incorrect import of pytest, use simple 'import pytest' instead`\n\n* `PT014 found duplicate test cases {indexes} in @pytest.mark.parametrize`\n\n* `PT015 assertion always fails, replace with pytest.fail()`  \ne.g. `pytest.fail()` should be preferred to `assert False` or `assert 0`\n\n* `PT016 no message passed to pytest.fail()`\n\n* `PT017 found assertion on exception {name} in except block, use pytest.raises() instead`  \ne.g.:\n  ```python\n  try:\n      1 / 0\n  except ZeroDivisionError as e:\n      assert e.args\n  ```\n  is an error and should be replaced with\n  ```python\n  with pytest.raises(ZeroDivisionError) as e:\n      1 / 0\n  assert e.value.args\n  ```\n  \n* `PT018 assertion should be broken down into multiple parts`  \ne.g. `assert something and something_else` should be rewritten as separate\n`assert something` and `assert something_else`,\nand `assert not (something or something_else)` should be rewritten as\n`assert not something` and `assert not something_else`\n\n* `PT019 fixture {name} without value is injected as parameter, use @pytest.mark.usefixtures instead`\n\n## Installation\n\n    pip install flake8-pytest-style\n    \n## Configuration\n\nThe plugin has the following configuration options:\n\n* `pytest-fixture-no-parentheses`  \nBoolean flag specifying whether `@pytest.fixture()` without parameters\nshould have parentheses, as checked by `PT001`.  \nIf the option is set to false (the default), `@pytest.fixture()` is valid\nand `@pytest.fixture` is an error.  \nIf set to true, `@pytest.fixture` is valid and `@pytest.fixture()` is\nan error.\n\n* `pytest-parametrize-names-type`  \nExpected type for multiple argument names in `@pytest.mark.parametrize`,\nas checked by `PT006`. The following values are supported:\n  * `csv` &mdash; a comma-separated list, e.g. `@pytest.mark.parametrize('name1,name2', ...)`\n  * `tuple` (default) &mdash; e.g. `@pytest.mark.parametrize(('name1', 'name2'), ...)`\n  * `list` &mdash; e.g. `@pytest.mark.parametrize(['name1', 'name2'], ...)`\n  \n* `pytest-parametrize-values-type`  \nExpected type for the list of values rows in `@pytest.mark.parametrize`,\nas checked by `PT007`. The following values are supported:\n  * `tuple` &mdash; e.g. `@pytest.mark.parametrize('name', (1, 2, 3))`\n  * `list` (default) &mdash; e.g. `@pytest.mark.parametrize('name', [1, 2, 3])`\n\n* `pytest-parametrize-values-row-type`  \nExpected type for each row of values in `@pytest.mark.parametrize` in case of\nmultiple parameters, as checked by `PT007`. The following values are supported:\n  * `tuple` (default) &mdash; e.g. `@pytest.mark.parametrize(('name1', 'name2'), [(1, 2), (3, 4)])`\n  * `list` &mdash; e.g. `@pytest.mark.parametrize(('name1', 'name2'), [[1, 2], [3, 4]])`\n\n* `pytest-raises-require-match-for`  \nComma-separated list of exception names that require a `match=` parameter\nin a `pytest.raises()` call, as checked by `PT011`. By default the list\ncontains the following exceptions:\n  * `BaseException`, `Exception`\n  * `ValueError`\n  * `OSError`, `IOError`, `EnvironmentError`, `socket.error`\n\n## For developers\n\n### Install deps and setup pre-commit hook\n\n    make init\n\n### Run linters, autoformat, tests etc.\n\n    make format lint test\n\n### Bump new version\n\n    make bump_major\n    make bump_minor\n    make bump_patch\n\n## License\n\nMIT\n\n## Change Log\n\n**Unreleased**\n\n...\n\n**1.1.1 - 2020-04-17**\n\n* fix `PT011` not reporting `match=''` as a violation\n\n**1.1.0 - 2020-04-14**\n\n* add `PT015` (checks for `assert False`)\n* add `PT016` (checks for `pytest.fail()` without message)\n* add `PT017` (checks for assertions on exceptions in `except` blocks)\n* add `PT018` (checks for composite assertions)\n* add `PT019` (checks for fixtures without value injected as parameters)\n\n**1.0.0 - 2020-03-26**\n\n* add `PT014` (checks for duplicate test cases in `@pytest.mark.parametrize`)\n\n**0.6.0 - 2020-03-21**\n\n* add configuration option `pytest-parametrize-names-type` for `PT006`\n* add configuration options `pytest-parametrize-values-type` and\n`pytest-parametrize-values-row-type` for `PT007`\n\n**0.5.0 - 2020-03-09**\n\n* add configuration option `pytest-fixture-no-parentheses` for `PT001`\n* add `PT013` (checks for `from`-imports from `pytest`)\n\n**0.4.0 - 2020-03-09**\n\n* add `PT012` (checks for multiple statements in `with pytest.raises()`)\n\n**0.3.1 - 2020-03-09**\n\n* fix default value of `pytest-raises-require-match-for` config option\n\n**0.3.0 - 2020-03-09**\n\n* add `PT010` and `PT011` (checks for `pytest.raises` parameters)\n\n**0.2.0 - 2020-03-01**\n\n* add `PT009` (ported from [flake8-pytest](https://github.com/vikingco/flake8-pytest))\n\n**0.1.3 - 2019-05-24**\n\n* add `yield` fixtures support\n* fix changelog entry for 0.1.2\n\n**0.1.2 - 2019-05-23**\n\n* fix parametrize checkers not working in decorators\n\n**0.1.1 - 2019-05-23**\n\n* update PyPI description\n\n**0.1.0 - 2019-05-23**\n\n* initial\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.org/project/flake8-pytest-style", "keywords": "flake8,pytest", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flake8-pytest-style", "package_url": "https://pypi.org/project/flake8-pytest-style/", "platform": "", "project_url": "https://pypi.org/project/flake8-pytest-style/", "project_urls": {"Homepage": "https://pypi.org/project/flake8-pytest-style", "Repository": "https://github.com/m-burst/flake8-pytest-style"}, "release_url": "https://pypi.org/project/flake8-pytest-style/1.1.1/", "requires_dist": ["flake8-plugin-utils (>=1.3.0,<2.0.0)"], "requires_python": ">=3.6,<4.0", "summary": "A flake8 plugin checking common style issues or inconsistencies with pytest-based tests.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>flake8-pytest-style</h1>\n<p><a href=\"https://pypi.org/project/flake8-pytest-style\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9cce8cf9a22550053da758303a331178ec41012f/68747470733a2f2f62616467652e667572792e696f2f70792f666c616b65382d7079746573742d7374796c652e737667\"></a>\n<a href=\"https://pypi.org/project/flake8-pytest-style\" rel=\"nofollow\"><img alt=\"Python: 3.6+\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27b9ffa6a30c02fbf99c079c370e052fa9190e49/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d332e362b2d626c75652e737667\"></a>\n<a href=\"https://pypistats.org/packages/flake8-pytest-style\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99eb399a17d8dab0625ce47d8dc80e0c71a17951/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f666c616b65382d7079746573742d7374796c652e737667\"></a>\n<a href=\"https://travis-ci.com/m-burst/flake8-pytest-style\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ce356da21ce19a1c5ef971c46be896b63fdc613/68747470733a2f2f7472617669732d63692e636f6d2f6d2d62757273742f666c616b65382d7079746573742d7374796c652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/m-burst/flake8-pytest-style\" rel=\"nofollow\"><img alt=\"Code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2239c42f87974aa590cd7124d272063ed54e2ec/68747470733a2f2f636f6465636f762e696f2f67682f6d2d62757273742f666c616b65382d7079746573742d7374796c652f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://en.wikipedia.org/wiki/MIT_License\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5aab1d039acf22567ba072834df6bce204ac48ad/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d677265656e2e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<h2>Description</h2>\n<p>A <code>flake8</code> plugin checking common style issues or inconsistencies with <code>pytest</code>-based tests.</p>\n<p>Currently the following errors are reported:</p>\n<ul>\n<li>\n<p><code>PT001 use @pytest.fixture() over @pytest.fixture</code><br>\nThe preferred style is controlled by the configuration option\n<code>pytest-fixture-no-parentheses</code></p>\n</li>\n<li>\n<p><code>PT002 configuration for fixture '{name}' specified via positional args, use kwargs</code><br>\ne.g. <code>@pytest.fixture(scope='module')</code> is OK, and <code>@pytest.fixture('module')</code> is an error</p>\n</li>\n<li>\n<p><code>PT003 scope='function' is implied in @pytest.fixture()</code><br>\ne.g. <code>@pytest.fixture(scope='function')</code> should be replaced with <code>@pytest.fixture()</code></p>\n</li>\n<li>\n<p><code>PT004 fixture '{name}' does not return anything, add leading underscore</code></p>\n</li>\n<li>\n<p><code>PT005 fixture '{name}' returns a value, remove leading underscore</code></p>\n</li>\n<li>\n<p><code>PT006 wrong name(s) type in @pytest.mark.parametrize, expected {expected_type}</code><br>\nFor a single name the expected type is always a plain string.\nFor multiple names the expected type is controlled by the configuration\nvariable <code>pytest-parametrize-names-type</code>.</p>\n</li>\n<li>\n<p><code>PT007 wrong values type in @pytest.mark.parametrize, expected {expected_type}</code>\nThe expected type of the list of rows is controlled by the configuration\nvariable <code>pytest-parametrize-values-type</code>.\nThe expected type of each row in case of multiple arguments is controlled by\nthe configuration variable <code>pytest-parametrize-values-row-type</code>.</p>\n</li>\n<li>\n<p><code>PT008 use return_value= instead of patching with lambda</code><br>\ne.g. <code>mocker.patch('target', return_value=7)</code> is OK,\nand <code>mocker.patch('target', lambda *args: 7)</code> is an error</p>\n</li>\n<li>\n<p><code>PT009 use a regular assert instead of unittest-style '{assertion}'</code></p>\n</li>\n<li>\n<p><code>PT010 set the expected exception in pytest.raises()</code></p>\n</li>\n<li>\n<p><code>PT011 set the match parameter in pytest.raises({exception})</code><br>\ne.g. <code>pytest.raises(ValueError, match='exception text')</code> is OK,\nand <code>pytest.raises(ValueError)</code> is an error.<br>\nThe exception list is controlled by the configuration option\n<code>pytest-raises-require-match-for</code>.</p>\n</li>\n<li>\n<p><code>PT012 pytest.raises() block should contain a single simple statement</code><br>\nthis forbids multiple statements and control flow structures within\n<code>pytest.raises()</code> blocks.</p>\n</li>\n<li>\n<p><code>PT013 found incorrect import of pytest, use simple 'import pytest' instead</code></p>\n</li>\n<li>\n<p><code>PT014 found duplicate test cases {indexes} in @pytest.mark.parametrize</code></p>\n</li>\n<li>\n<p><code>PT015 assertion always fails, replace with pytest.fail()</code><br>\ne.g. <code>pytest.fail()</code> should be preferred to <code>assert False</code> or <code>assert 0</code></p>\n</li>\n<li>\n<p><code>PT016 no message passed to pytest.fail()</code></p>\n</li>\n<li>\n<p><code>PT017 found assertion on exception {name} in except block, use pytest.raises() instead</code><br>\ne.g.:</p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"mi\">0</span>\n<span class=\"k\">except</span> <span class=\"ne\">ZeroDivisionError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"k\">assert</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">args</span>\n</pre>\n<p>is an error and should be replaced with</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">pytest</span><span class=\"o\">.</span><span class=\"n\">raises</span><span class=\"p\">(</span><span class=\"ne\">ZeroDivisionError</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"mi\">0</span>\n<span class=\"k\">assert</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">args</span>\n</pre>\n</li>\n<li>\n<p><code>PT018 assertion should be broken down into multiple parts</code><br>\ne.g. <code>assert something and something_else</code> should be rewritten as separate\n<code>assert something</code> and <code>assert something_else</code>,\nand <code>assert not (something or something_else)</code> should be rewritten as\n<code>assert not something</code> and <code>assert not something_else</code></p>\n</li>\n<li>\n<p><code>PT019 fixture {name} without value is injected as parameter, use @pytest.mark.usefixtures instead</code></p>\n</li>\n</ul>\n<h2>Installation</h2>\n<pre><code>pip install flake8-pytest-style\n</code></pre>\n<h2>Configuration</h2>\n<p>The plugin has the following configuration options:</p>\n<ul>\n<li>\n<p><code>pytest-fixture-no-parentheses</code><br>\nBoolean flag specifying whether <code>@pytest.fixture()</code> without parameters\nshould have parentheses, as checked by <code>PT001</code>.<br>\nIf the option is set to false (the default), <code>@pytest.fixture()</code> is valid\nand <code>@pytest.fixture</code> is an error.<br>\nIf set to true, <code>@pytest.fixture</code> is valid and <code>@pytest.fixture()</code> is\nan error.</p>\n</li>\n<li>\n<p><code>pytest-parametrize-names-type</code><br>\nExpected type for multiple argument names in <code>@pytest.mark.parametrize</code>,\nas checked by <code>PT006</code>. The following values are supported:</p>\n<ul>\n<li><code>csv</code> \u2014 a comma-separated list, e.g. <code>@pytest.mark.parametrize('name1,name2', ...)</code></li>\n<li><code>tuple</code> (default) \u2014 e.g. <code>@pytest.mark.parametrize(('name1', 'name2'), ...)</code></li>\n<li><code>list</code> \u2014 e.g. <code>@pytest.mark.parametrize(['name1', 'name2'], ...)</code></li>\n</ul>\n</li>\n<li>\n<p><code>pytest-parametrize-values-type</code><br>\nExpected type for the list of values rows in <code>@pytest.mark.parametrize</code>,\nas checked by <code>PT007</code>. The following values are supported:</p>\n<ul>\n<li><code>tuple</code> \u2014 e.g. <code>@pytest.mark.parametrize('name', (1, 2, 3))</code></li>\n<li><code>list</code> (default) \u2014 e.g. <code>@pytest.mark.parametrize('name', [1, 2, 3])</code></li>\n</ul>\n</li>\n<li>\n<p><code>pytest-parametrize-values-row-type</code><br>\nExpected type for each row of values in <code>@pytest.mark.parametrize</code> in case of\nmultiple parameters, as checked by <code>PT007</code>. The following values are supported:</p>\n<ul>\n<li><code>tuple</code> (default) \u2014 e.g. <code>@pytest.mark.parametrize(('name1', 'name2'), [(1, 2), (3, 4)])</code></li>\n<li><code>list</code> \u2014 e.g. <code>@pytest.mark.parametrize(('name1', 'name2'), [[1, 2], [3, 4]])</code></li>\n</ul>\n</li>\n<li>\n<p><code>pytest-raises-require-match-for</code><br>\nComma-separated list of exception names that require a <code>match=</code> parameter\nin a <code>pytest.raises()</code> call, as checked by <code>PT011</code>. By default the list\ncontains the following exceptions:</p>\n<ul>\n<li><code>BaseException</code>, <code>Exception</code></li>\n<li><code>ValueError</code></li>\n<li><code>OSError</code>, <code>IOError</code>, <code>EnvironmentError</code>, <code>socket.error</code></li>\n</ul>\n</li>\n</ul>\n<h2>For developers</h2>\n<h3>Install deps and setup pre-commit hook</h3>\n<pre><code>make init\n</code></pre>\n<h3>Run linters, autoformat, tests etc.</h3>\n<pre><code>make format lint test\n</code></pre>\n<h3>Bump new version</h3>\n<pre><code>make bump_major\nmake bump_minor\nmake bump_patch\n</code></pre>\n<h2>License</h2>\n<p>MIT</p>\n<h2>Change Log</h2>\n<p><strong>Unreleased</strong></p>\n<p>...</p>\n<p><strong>1.1.1 - 2020-04-17</strong></p>\n<ul>\n<li>fix <code>PT011</code> not reporting <code>match=''</code> as a violation</li>\n</ul>\n<p><strong>1.1.0 - 2020-04-14</strong></p>\n<ul>\n<li>add <code>PT015</code> (checks for <code>assert False</code>)</li>\n<li>add <code>PT016</code> (checks for <code>pytest.fail()</code> without message)</li>\n<li>add <code>PT017</code> (checks for assertions on exceptions in <code>except</code> blocks)</li>\n<li>add <code>PT018</code> (checks for composite assertions)</li>\n<li>add <code>PT019</code> (checks for fixtures without value injected as parameters)</li>\n</ul>\n<p><strong>1.0.0 - 2020-03-26</strong></p>\n<ul>\n<li>add <code>PT014</code> (checks for duplicate test cases in <code>@pytest.mark.parametrize</code>)</li>\n</ul>\n<p><strong>0.6.0 - 2020-03-21</strong></p>\n<ul>\n<li>add configuration option <code>pytest-parametrize-names-type</code> for <code>PT006</code></li>\n<li>add configuration options <code>pytest-parametrize-values-type</code> and\n<code>pytest-parametrize-values-row-type</code> for <code>PT007</code></li>\n</ul>\n<p><strong>0.5.0 - 2020-03-09</strong></p>\n<ul>\n<li>add configuration option <code>pytest-fixture-no-parentheses</code> for <code>PT001</code></li>\n<li>add <code>PT013</code> (checks for <code>from</code>-imports from <code>pytest</code>)</li>\n</ul>\n<p><strong>0.4.0 - 2020-03-09</strong></p>\n<ul>\n<li>add <code>PT012</code> (checks for multiple statements in <code>with pytest.raises()</code>)</li>\n</ul>\n<p><strong>0.3.1 - 2020-03-09</strong></p>\n<ul>\n<li>fix default value of <code>pytest-raises-require-match-for</code> config option</li>\n</ul>\n<p><strong>0.3.0 - 2020-03-09</strong></p>\n<ul>\n<li>add <code>PT010</code> and <code>PT011</code> (checks for <code>pytest.raises</code> parameters)</li>\n</ul>\n<p><strong>0.2.0 - 2020-03-01</strong></p>\n<ul>\n<li>add <code>PT009</code> (ported from <a href=\"https://github.com/vikingco/flake8-pytest\" rel=\"nofollow\">flake8-pytest</a>)</li>\n</ul>\n<p><strong>0.1.3 - 2019-05-24</strong></p>\n<ul>\n<li>add <code>yield</code> fixtures support</li>\n<li>fix changelog entry for 0.1.2</li>\n</ul>\n<p><strong>0.1.2 - 2019-05-23</strong></p>\n<ul>\n<li>fix parametrize checkers not working in decorators</li>\n</ul>\n<p><strong>0.1.1 - 2019-05-23</strong></p>\n<ul>\n<li>update PyPI description</li>\n</ul>\n<p><strong>0.1.0 - 2019-05-23</strong></p>\n<ul>\n<li>initial</li>\n</ul>\n\n          </div>"}, "last_serial": 7042170, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "eb7aeaa07cf595bdca8b6cbb7876f35e", "sha256": "d8717a566217b59d8c5373b485e1a3d30ffa7c8900fb3464cdfc787e783ecb61"}, "downloads": -1, "filename": "flake8_pytest_style-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eb7aeaa07cf595bdca8b6cbb7876f35e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 7357, "upload_time": "2019-05-23T13:04:54", "upload_time_iso_8601": "2019-05-23T13:04:54.938777Z", "url": "https://files.pythonhosted.org/packages/a9/6b/32963c2f6d1b6388ffb410942aaaf885006075d73e61f354f048a866248f/flake8_pytest_style-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df7a93dbef02d3a537110d7e4f5b9a13", "sha256": "8e3fb366db8e6be68d5cbdb1817b0d33952820ead5d18394da9f77db2400de8c"}, "downloads": -1, "filename": "flake8-pytest-style-0.1.0.tar.gz", "has_sig": false, "md5_digest": "df7a93dbef02d3a537110d7e4f5b9a13", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5950, "upload_time": "2019-05-23T13:04:52", "upload_time_iso_8601": "2019-05-23T13:04:52.864044Z", "url": "https://files.pythonhosted.org/packages/95/b4/e3d4bb4cf2a1a1bfbd9a93e8436659c448643721e6b178237d7ef1fec592/flake8-pytest-style-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b52d3a63607cf6cbb57c6fa458879c9d", "sha256": "70d183d493f0419cb861b605e62981c639d1e45b19d51941bec83cb5df6c7cea"}, "downloads": -1, "filename": "flake8_pytest_style-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b52d3a63607cf6cbb57c6fa458879c9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 7387, "upload_time": "2019-05-23T13:10:36", "upload_time_iso_8601": "2019-05-23T13:10:36.501111Z", "url": "https://files.pythonhosted.org/packages/9a/48/333ac4a5760026daf241cbe3622d01154af3aa6dbaecceb6a6f49d6d2384/flake8_pytest_style-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b91c356b1107c603503731cb53a90822", "sha256": "b57b8ca81426d34cd1396010c4e3fdb3eafaa7b261d2ab745d88484fb8ae4bf1"}, "downloads": -1, "filename": "flake8-pytest-style-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b91c356b1107c603503731cb53a90822", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5997, "upload_time": "2019-05-23T13:10:35", "upload_time_iso_8601": "2019-05-23T13:10:35.399788Z", "url": "https://files.pythonhosted.org/packages/56/3a/5ce75e239ab5bed6931140eb9d8471ae8dd1c5933acd4ad4ca0879aae36f/flake8-pytest-style-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "0e3ddfd6b8a5d8323e0a44843e125535", "sha256": "cb4cdb514c201ef6e1ce033394d99e285ba659842c0a4c5d93c4b80b81a05935"}, "downloads": -1, "filename": "flake8_pytest_style-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0e3ddfd6b8a5d8323e0a44843e125535", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 7406, "upload_time": "2019-05-23T13:49:48", "upload_time_iso_8601": "2019-05-23T13:49:48.692992Z", "url": "https://files.pythonhosted.org/packages/ee/9c/d7c007659523ed759e2bbb0384644643bcc194dee2cd4d7d941fb9ac7a99/flake8_pytest_style-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "961af67eed707f7c0c59e1357fe40e72", "sha256": "5fce591ed562b0e72897e491a63913a6df6179ae4dc902314a8eae376c88ee65"}, "downloads": -1, "filename": "flake8-pytest-style-0.1.2.tar.gz", "has_sig": false, "md5_digest": "961af67eed707f7c0c59e1357fe40e72", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 6015, "upload_time": "2019-05-23T13:49:47", "upload_time_iso_8601": "2019-05-23T13:49:47.534310Z", "url": "https://files.pythonhosted.org/packages/85/db/e8f6e5a5da43031d25d61d27da1a42bf67ea289cd57be808ef3f2ca60a95/flake8-pytest-style-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "d56644f49ca14eb588d3835a19a5518f", "sha256": "1c2303998c509cd65c3fb047cd536787ddf953e8113bc7f086c0cd7468db4b1f"}, "downloads": -1, "filename": "flake8_pytest_style-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d56644f49ca14eb588d3835a19a5518f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 7472, "upload_time": "2019-05-24T19:11:23", "upload_time_iso_8601": "2019-05-24T19:11:23.537101Z", "url": "https://files.pythonhosted.org/packages/a5/cc/6c4c3f26c12ab02c0a37c781026f89b75bcb7cb9673d153e2284f3457cf2/flake8_pytest_style-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8cd3131f1c72b5d307b4b99183d4717", "sha256": "820503cb50b7f6aa13a9889f4c47ba35bbd666877a72ed138ae5682a9bccaf9d"}, "downloads": -1, "filename": "flake8-pytest-style-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e8cd3131f1c72b5d307b4b99183d4717", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 6108, "upload_time": "2019-05-24T19:11:22", "upload_time_iso_8601": "2019-05-24T19:11:22.217506Z", "url": "https://files.pythonhosted.org/packages/ce/c4/3a27f739ea596140d4858f86ab5a214a9101f81c45d21997e959c933b426/flake8-pytest-style-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e947e5a7efd6523b1905d48ffb8a5d1d", "sha256": "79537f9e4bfa2ad4a3b7528a30215c396c6cf179ae68610ffcd2de50763198c5"}, "downloads": -1, "filename": "flake8_pytest_style-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e947e5a7efd6523b1905d48ffb8a5d1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 7800, "upload_time": "2020-03-01T14:16:51", "upload_time_iso_8601": "2020-03-01T14:16:51.672604Z", "url": "https://files.pythonhosted.org/packages/90/df/21436a83ef5c1b99f16589ba5b59782768b0039dc981934f32e24cebee15/flake8_pytest_style-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba650b6d39acca5bc68b381d3b312007", "sha256": "f0a0ab6f4ff121ebd402049a93d04fb9ea149476bcd2867879f0f5b391cb7c26"}, "downloads": -1, "filename": "flake8-pytest-style-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ba650b6d39acca5bc68b381d3b312007", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 6688, "upload_time": "2020-03-01T14:16:50", "upload_time_iso_8601": "2020-03-01T14:16:50.692131Z", "url": "https://files.pythonhosted.org/packages/74/ee/e3ac34b34cfd473e61bd7bd8d6a56b0e196929db632aaa06e7d4d66d6402/flake8-pytest-style-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "9d5999e4adee283381ef7e21e241b2e4", "sha256": "fe77eb875102a3e7c844ea952f2cf7d6e7df4474bff685126e2bf5351bf48f02"}, "downloads": -1, "filename": "flake8_pytest_style-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9d5999e4adee283381ef7e21e241b2e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8975, "upload_time": "2020-03-08T21:54:21", "upload_time_iso_8601": "2020-03-08T21:54:21.564013Z", "url": "https://files.pythonhosted.org/packages/e8/19/3e099e00c6785e898eef81b1e5042fb880e53a9bb225d86511c663b0a936/flake8_pytest_style-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50c0a90d5145533ddccf2aa41848f4bd", "sha256": "94e0b7489320f149deff5d4ee7a852f98819575070e4c4e029c4ddecf3f9c87a"}, "downloads": -1, "filename": "flake8-pytest-style-0.3.0.tar.gz", "has_sig": false, "md5_digest": "50c0a90d5145533ddccf2aa41848f4bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 8346, "upload_time": "2020-03-08T21:54:20", "upload_time_iso_8601": "2020-03-08T21:54:20.553481Z", "url": "https://files.pythonhosted.org/packages/42/20/30f48d84a77d482617b9e6f4b572e2757402b837f640f7fceab792d4260e/flake8-pytest-style-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "46d4e3c63eebd1a9226bcb38fc089322", "sha256": "3a84f82dc48fdebe28747db26746e2e9afcc9a6df3948b573273dac1c474bbac"}, "downloads": -1, "filename": "flake8_pytest_style-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "46d4e3c63eebd1a9226bcb38fc089322", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9068, "upload_time": "2020-03-08T23:11:01", "upload_time_iso_8601": "2020-03-08T23:11:01.852994Z", "url": "https://files.pythonhosted.org/packages/50/eb/c7441b93e4859b019c73a933e02bba76e23e85f0c12d3b13b0490747e40e/flake8_pytest_style-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9fa075c46b7f66213e0f3e5f5a19d894", "sha256": "addb4682375d8a479f5ffe01bb74d78689ea353f1170c3f97ae25f6ba01c4834"}, "downloads": -1, "filename": "flake8-pytest-style-0.3.1.tar.gz", "has_sig": false, "md5_digest": "9fa075c46b7f66213e0f3e5f5a19d894", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 8452, "upload_time": "2020-03-08T23:11:00", "upload_time_iso_8601": "2020-03-08T23:11:00.522781Z", "url": "https://files.pythonhosted.org/packages/0c/3d/9cb200ce43f164cf7e6993884c32a76ef3d9caa2b2460f40909fcaeff32b/flake8-pytest-style-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "8e000810dc4c1d4de8c38ebfc57b545b", "sha256": "0f79371b4849ab9dcdb8f3a2e38dce96de0d0b6aae56130557e18c481278f9fc"}, "downloads": -1, "filename": "flake8_pytest_style-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8e000810dc4c1d4de8c38ebfc57b545b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9407, "upload_time": "2020-03-09T08:01:48", "upload_time_iso_8601": "2020-03-09T08:01:48.512054Z", "url": "https://files.pythonhosted.org/packages/4b/dc/21b29be608bfee9a5595dcdd41bc9a710385b2279d10c99b4cb7e984b5b7/flake8_pytest_style-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2c54ad72893b5251716da8c37e7d66b", "sha256": "309a4cd59b6f30e7155a4190967d5c3522001faec7d74537ee09af52ec57aa9d"}, "downloads": -1, "filename": "flake8-pytest-style-0.4.0.tar.gz", "has_sig": false, "md5_digest": "e2c54ad72893b5251716da8c37e7d66b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 8873, "upload_time": "2020-03-09T08:01:47", "upload_time_iso_8601": "2020-03-09T08:01:47.061856Z", "url": "https://files.pythonhosted.org/packages/a1/3a/f67281c6d40c00646b0603697e3ffd32dc42dc87dc765259103c7edb3f48/flake8-pytest-style-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "5858ae287098f1c64636765150d4af6d", "sha256": "c775f7286ac4727da0ae900fa800294e7500bbc220794e2b0043d9ef352f3145"}, "downloads": -1, "filename": "flake8_pytest_style-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5858ae287098f1c64636765150d4af6d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 12580, "upload_time": "2020-03-09T11:44:04", "upload_time_iso_8601": "2020-03-09T11:44:04.054571Z", "url": "https://files.pythonhosted.org/packages/49/53/451b073efe8cfdeaa1f8ce00c4131637331710ebaeed7d225dfbb32f02aa/flake8_pytest_style-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b16a75c5aa288e5e52002d28c9053da", "sha256": "37ff18c8146c36050d1505f6f879c8a8baad8a39f6fe6a71267e5a0e148ba6ee"}, "downloads": -1, "filename": "flake8-pytest-style-0.5.0.tar.gz", "has_sig": false, "md5_digest": "1b16a75c5aa288e5e52002d28c9053da", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 10400, "upload_time": "2020-03-09T11:44:02", "upload_time_iso_8601": "2020-03-09T11:44:02.803656Z", "url": "https://files.pythonhosted.org/packages/d7/eb/3f5011525d1e2bfcda21c89c1f090570d41d3e6940e396404edc9e231bd0/flake8-pytest-style-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "f9c1f7f303d7cf68a617ef2b15cd5213", "sha256": "1314b3995d9aff89038a8860f487671fb835269f9486368478dbb1267f05868a"}, "downloads": -1, "filename": "flake8_pytest_style-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f9c1f7f303d7cf68a617ef2b15cd5213", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 13567, "upload_time": "2020-03-21T15:47:53", "upload_time_iso_8601": "2020-03-21T15:47:53.192246Z", "url": "https://files.pythonhosted.org/packages/e5/d0/99dffc8af14fc0c1d89c7423a62a13c5ccbec3ed34c08e3703e161de1d35/flake8_pytest_style-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21898c05b284c8fcc480fb2b847c65c4", "sha256": "381c5791507db8e5be47b9117529a3157a339f2dd27f0728d60e6f14e629d327"}, "downloads": -1, "filename": "flake8-pytest-style-0.6.0.tar.gz", "has_sig": false, "md5_digest": "21898c05b284c8fcc480fb2b847c65c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 11744, "upload_time": "2020-03-21T15:47:52", "upload_time_iso_8601": "2020-03-21T15:47:52.211628Z", "url": "https://files.pythonhosted.org/packages/3d/fe/64400c3b41f68045666f58ce9cf83dfbe3c9dae01a567eb03f926afefe27/flake8-pytest-style-0.6.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "833c4edb843b9070731610dbb9dbd02a", "sha256": "d04fcd9a6237a897c46fd1548a85aa84258fb45bfde6ae8d497ceaade722543c"}, "downloads": -1, "filename": "flake8_pytest_style-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "833c4edb843b9070731610dbb9dbd02a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 13872, "upload_time": "2020-03-26T21:02:53", "upload_time_iso_8601": "2020-03-26T21:02:53.919179Z", "url": "https://files.pythonhosted.org/packages/2a/fb/9233bd1163c2ab9b353c3128d2dc38fb3d76bc7c77bd598dc2039e0420f9/flake8_pytest_style-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd3e3c58a7901c375c3edb0e75a98991", "sha256": "82b7c6e509d759fb91d6e0023dbba2e471dac3adf2c4367f54a1b8ea02e65531"}, "downloads": -1, "filename": "flake8-pytest-style-1.0.0.tar.gz", "has_sig": false, "md5_digest": "dd3e3c58a7901c375c3edb0e75a98991", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 12093, "upload_time": "2020-03-26T21:02:52", "upload_time_iso_8601": "2020-03-26T21:02:52.663991Z", "url": "https://files.pythonhosted.org/packages/a7/c4/b5f8f85ec8141598e9e5ee10ee26867ccb5ffa7c048590e9404f1372f019/flake8-pytest-style-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "cff88c86aad0cbdc2946f28c2f07d7f3", "sha256": "381d7e6b05313a82dbb90df4660c2414a0d13c20642ea436690a6defd6ea4070"}, "downloads": -1, "filename": "flake8_pytest_style-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cff88c86aad0cbdc2946f28c2f07d7f3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 16019, "upload_time": "2020-04-14T20:43:45", "upload_time_iso_8601": "2020-04-14T20:43:45.610329Z", "url": "https://files.pythonhosted.org/packages/68/5e/1d00540fa758f8068c66c2eb9983f03a58466b7c3e21f4f4c22fcb15c080/flake8_pytest_style-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa53ce3915bc5686a40adadc0c00e0d8", "sha256": "5fdd7a984a8ef5d07406a66fe3edbfd936f0aa8ff96da9c3241cf2e59f9330af"}, "downloads": -1, "filename": "flake8-pytest-style-1.1.0.tar.gz", "has_sig": false, "md5_digest": "aa53ce3915bc5686a40adadc0c00e0d8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 14113, "upload_time": "2020-04-14T20:43:44", "upload_time_iso_8601": "2020-04-14T20:43:44.303842Z", "url": "https://files.pythonhosted.org/packages/4b/f4/ea5e0c805928599fdc5ce65f60901d7376c74c8e939527d692fc50d9db89/flake8-pytest-style-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "0b1ff8dcfbdad0d8372ba7ce9432cae6", "sha256": "690ef9aece18561b0e674e4e4ee7e80a0d38f27bfb268806fac5e55801396ee4"}, "downloads": -1, "filename": "flake8_pytest_style-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0b1ff8dcfbdad0d8372ba7ce9432cae6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 16066, "upload_time": "2020-04-17T18:01:22", "upload_time_iso_8601": "2020-04-17T18:01:22.691020Z", "url": "https://files.pythonhosted.org/packages/43/fc/c5522c02fa534b36993228ac31baca60c641fd5bbca01b077a7508cd1574/flake8_pytest_style-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2229fa261492ca53b1b57f80da969b2", "sha256": "d91ffba047964e5bb4491dc71771008fa0438988870d59d4162bdba3674fb7a8"}, "downloads": -1, "filename": "flake8-pytest-style-1.1.1.tar.gz", "has_sig": false, "md5_digest": "f2229fa261492ca53b1b57f80da969b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 14184, "upload_time": "2020-04-17T18:01:21", "upload_time_iso_8601": "2020-04-17T18:01:21.596257Z", "url": "https://files.pythonhosted.org/packages/72/37/9e1d87f4801668e256efb08d5fb98d7e404f19669d5dad84988f015a3816/flake8-pytest-style-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b1ff8dcfbdad0d8372ba7ce9432cae6", "sha256": "690ef9aece18561b0e674e4e4ee7e80a0d38f27bfb268806fac5e55801396ee4"}, "downloads": -1, "filename": "flake8_pytest_style-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0b1ff8dcfbdad0d8372ba7ce9432cae6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 16066, "upload_time": "2020-04-17T18:01:22", "upload_time_iso_8601": "2020-04-17T18:01:22.691020Z", "url": "https://files.pythonhosted.org/packages/43/fc/c5522c02fa534b36993228ac31baca60c641fd5bbca01b077a7508cd1574/flake8_pytest_style-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2229fa261492ca53b1b57f80da969b2", "sha256": "d91ffba047964e5bb4491dc71771008fa0438988870d59d4162bdba3674fb7a8"}, "downloads": -1, "filename": "flake8-pytest-style-1.1.1.tar.gz", "has_sig": false, "md5_digest": "f2229fa261492ca53b1b57f80da969b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 14184, "upload_time": "2020-04-17T18:01:21", "upload_time_iso_8601": "2020-04-17T18:01:21.596257Z", "url": "https://files.pythonhosted.org/packages/72/37/9e1d87f4801668e256efb08d5fb98d7e404f19669d5dad84988f015a3816/flake8-pytest-style-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:03:21 2020"}