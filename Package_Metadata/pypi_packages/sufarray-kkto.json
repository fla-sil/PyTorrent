{"info": {"author": "Isaac To", "author_email": "isaac.to@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries"], "description": "# sufarray: implementation of suffix array\n\nIt uses prefix doubling for calculating the suffix array, which is O(n\nlog n) time.  When searching for all occurrences of a string, it takes\nO(log n) time.  Further occurrences takes constant time.\n\nAt present the implementation is Python only.  This has the drawback\nthat the speed is not comparable with those of other languages.\n\n## Usage\n\nTo construct a suffix array of string `s`:\n\n    import sufarray\n    sarray = sufarray.SufArray(s)\n\nAfter that, you can get the actual array with:\n\n    sarray.get_array()\n\nThis produces a permutation `a` of `range(len(s))`, where the values\n`a[0]`, `a[1]`, etc. are such that the suffixes `s[a[i]:]` is sorted.\n\nOther than that, you can find the positions where a string `n` appears\nwithin `s` using:\n\n    sarray.find_all(n)\n\nThis is a generator function, yielding all the possible positions.\n\n## Implementations\n\nTwo implementations are provided.  The simple version is called\n`SufArrayBruteForce`, and a version `SufArrayPD` is provided which\ncalculates the suffix array using prefix doubling, and augment the\nresult with a LCP (Longest common prefix) array for use with\nsearching.  The latter has better bounded performance guarantees, but\nwith arrays of small text it is slower.  The default is `SufArrayPD`.\nYou can use the brute force version using\n`sufarray.SufArrayBruteForce`.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/isaacto/sufarray", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sufarray-kkto", "package_url": "https://pypi.org/project/sufarray-kkto/", "platform": "", "project_url": "https://pypi.org/project/sufarray-kkto/", "project_urls": {"Homepage": "https://github.com/isaacto/sufarray"}, "release_url": "https://pypi.org/project/sufarray-kkto/0.1.1/", "requires_dist": null, "requires_python": "~=3.5", "summary": "Suffix Array for all-substring search", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sufarray: implementation of suffix array</h1>\n<p>It uses prefix doubling for calculating the suffix array, which is O(n\nlog n) time.  When searching for all occurrences of a string, it takes\nO(log n) time.  Further occurrences takes constant time.</p>\n<p>At present the implementation is Python only.  This has the drawback\nthat the speed is not comparable with those of other languages.</p>\n<h2>Usage</h2>\n<p>To construct a suffix array of string <code>s</code>:</p>\n<pre><code>import sufarray\nsarray = sufarray.SufArray(s)\n</code></pre>\n<p>After that, you can get the actual array with:</p>\n<pre><code>sarray.get_array()\n</code></pre>\n<p>This produces a permutation <code>a</code> of <code>range(len(s))</code>, where the values\n<code>a[0]</code>, <code>a[1]</code>, etc. are such that the suffixes <code>s[a[i]:]</code> is sorted.</p>\n<p>Other than that, you can find the positions where a string <code>n</code> appears\nwithin <code>s</code> using:</p>\n<pre><code>sarray.find_all(n)\n</code></pre>\n<p>This is a generator function, yielding all the possible positions.</p>\n<h2>Implementations</h2>\n<p>Two implementations are provided.  The simple version is called\n<code>SufArrayBruteForce</code>, and a version <code>SufArrayPD</code> is provided which\ncalculates the suffix array using prefix doubling, and augment the\nresult with a LCP (Longest common prefix) array for use with\nsearching.  The latter has better bounded performance guarantees, but\nwith arrays of small text it is slower.  The default is <code>SufArrayPD</code>.\nYou can use the brute force version using\n<code>sufarray.SufArrayBruteForce</code>.</p>\n\n          </div>"}, "last_serial": 6532241, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fec961fb8981f5ba54ab880a6ca7bfc4", "sha256": "472239a97951f1964fb1582a75e5516fd9a7e14261f5225319177d79d8080730"}, "downloads": -1, "filename": "sufarray_kkto-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fec961fb8981f5ba54ab880a6ca7bfc4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 5362, "upload_time": "2020-01-28T12:30:19", "upload_time_iso_8601": "2020-01-28T12:30:19.571225Z", "url": "https://files.pythonhosted.org/packages/72/f2/57f5ad7a694f4f22be3f768b56d69b856c03f392e2787065f8a1b6368121/sufarray_kkto-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f61e8508058a1200ab86118734aec167", "sha256": "9b70bcf8da5f8a4749d91553c1da5c1c0cd91baa9538f89abad93c8bef573bfb"}, "downloads": -1, "filename": "sufarray_kkto-0.1.tar.gz", "has_sig": false, "md5_digest": "f61e8508058a1200ab86118734aec167", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 4072, "upload_time": "2020-01-28T12:30:21", "upload_time_iso_8601": "2020-01-28T12:30:21.771311Z", "url": "https://files.pythonhosted.org/packages/c7/52/e3a2fd1ff9381bb0598416a14781de04e1dd0d195bf54af5e8900f554577/sufarray_kkto-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9dd9b285ca7a91323cb371a6d3b6bfcf", "sha256": "07b689566ce3e0448318d21b27a97340aa2decf1a254bbae3805613283a7422f"}, "downloads": -1, "filename": "sufarray_kkto-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9dd9b285ca7a91323cb371a6d3b6bfcf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 5838, "upload_time": "2020-01-28T13:48:54", "upload_time_iso_8601": "2020-01-28T13:48:54.911094Z", "url": "https://files.pythonhosted.org/packages/da/b7/2dfdbf65d52ce6ee0186df5ab358743321903d1b99c95d151e074f6f215f/sufarray_kkto-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ead1f834230e0f90760ec9ad443acf0", "sha256": "7705aa9b6ee6fc36bad4f8a725fa77d1468e85e5688f74574a447cee14ca80c0"}, "downloads": -1, "filename": "sufarray_kkto-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1ead1f834230e0f90760ec9ad443acf0", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 5333, "upload_time": "2020-01-28T13:48:56", "upload_time_iso_8601": "2020-01-28T13:48:56.534235Z", "url": "https://files.pythonhosted.org/packages/a7/03/f4393512c543a46d56b2c9e76f5ca177e82f68d8d05497fdd9533ef3efea/sufarray_kkto-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9dd9b285ca7a91323cb371a6d3b6bfcf", "sha256": "07b689566ce3e0448318d21b27a97340aa2decf1a254bbae3805613283a7422f"}, "downloads": -1, "filename": "sufarray_kkto-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9dd9b285ca7a91323cb371a6d3b6bfcf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 5838, "upload_time": "2020-01-28T13:48:54", "upload_time_iso_8601": "2020-01-28T13:48:54.911094Z", "url": "https://files.pythonhosted.org/packages/da/b7/2dfdbf65d52ce6ee0186df5ab358743321903d1b99c95d151e074f6f215f/sufarray_kkto-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ead1f834230e0f90760ec9ad443acf0", "sha256": "7705aa9b6ee6fc36bad4f8a725fa77d1468e85e5688f74574a447cee14ca80c0"}, "downloads": -1, "filename": "sufarray_kkto-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1ead1f834230e0f90760ec9ad443acf0", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 5333, "upload_time": "2020-01-28T13:48:56", "upload_time_iso_8601": "2020-01-28T13:48:56.534235Z", "url": "https://files.pythonhosted.org/packages/a7/03/f4393512c543a46d56b2c9e76f5ca177e82f68d8d05497fdd9533ef3efea/sufarray_kkto-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:31 2020"}