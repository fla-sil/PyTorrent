{"info": {"author": "The PlanetaryPy Developers", "author_email": "trevor@heytrevor.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "===============================\npvl\n===============================\n\n.. image:: https://img.shields.io/pypi/v/pvl.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/pvl\n\n.. image:: https://img.shields.io/travis/planetarypy/pvl.svg?style=flat-square\n        :target: https://travis-ci.org/planetarypy/pvl\n\n.. image:: https://img.shields.io/pypi/dm/pvl.svg?style=flat-square\n        :target: https://pypi.python.org/pypi/pvl\n\nPython implementation of PVL (Parameter Value Language)\n\n* Free software: BSD license\n* Documentation: http://pvl.readthedocs.org.\n* Support for Python 2, 3 and pypi.\n* Proudly part of the `PlanetaryPy Toolkit`_\n\nPVL is a markup language, similar to xml, commonly employed for entries in the\nPlanetary Database System used by NASA to store mission data, among other uses.\nThis package supports both encoding a decoding a superset of PVL, including the\n`USGS Isis Cube Label`_ and `NASA PDS 3 Label`_ dialects.\n\n\nInstallation\n------------\n\nCan either install with pip or with conda.\n\nTo install with pip, at the command line::\n\n    $ pip install pvl\n\nDirections for installing with conda-forge:\n\nInstalling pvl from the conda-forge channel can be achieved by adding\nconda-forge to your channels with::\n\n    conda config --add channels conda-forge\n\n\nOnce the conda-forge channel has been enabled, pvl can be installed with::\n\n    conda install pvl\n\nIt is possible to list all of the versions of pvl available on your platform\nwith::\n\n    conda search pvl --channel conda-forge\n\n\nBasic Usage\n-----------\n\npvl exposes an API familiar to users of the standard library json module.\n\nDecoding is primarily done through ``pvl.load`` for file like objects and\n``pvl.loads`` for strings::\n\n    >>> import pvl\n    >>> module = pvl.loads(\"\"\"\n    ...     foo = bar\n    ...     items = (1, 2, 3)\n    ...     END\n    ... \"\"\")\n    >>> print module\n    PVLModule([\n      (u'foo', u'bar')\n      (u'items', [1, 2, 3])\n    ])\n    >>> print module['foo']\n    bar\n\nYou may also use ``pvl.load`` to read a label directly from an image_::\n\n    >>> import pvl\n    >>> label = pvl.load('pattern.cub')\n    >>> print label\n    PVLModule([\n      (u'IsisCube',\n       PVLObject([\n        (u'Core',\n         PVLObject([\n          (u'StartByte', 65537)\n          (u'Format', u'Tile')\n    # output truncated...\n    >>> print label['IsisCube']['Core']['StartByte']\n    65537\n\n\nSimilarly, encoding pvl modules is done through ``pvl.dump`` and ``pvl.dumps``::\n\n    >>> import pvl\n    >>> print pvl.dumps({\n    ...     'foo': 'bar',\n    ...     'items': [1, 2, 3]\n    ... })\n    items = (1, 2, 3)\n    foo = bar\n    END\n\n``PVLModule`` objects may also be pragmatically built up to control the order\nof parameters as well as duplicate keys::\n\n    >>> import pvl\n    >>> module = pvl.PVLModule({'foo': 'bar'})\n    >>> module.append('items', [1, 2, 3])\n    >>> print pvl.dumps(module)\n    foo = bar\n    items = (1, 2, 3)\n    END\n\nA ``PVLModule`` is a ``dict`` like container that preserves ordering as well as\nallows multiple values for the same key. It provides a similar similar semantics\nto a ``list`` of key/value ``tuples`` but with ``dict`` style access::\n\n    >>> import pvl\n    >>> module = pvl.PVLModule([\n    ...     ('foo', 'bar'),\n    ...     ('items', [1, 2, 3]),\n    ...     ('foo', 'remember me?'),\n    ... ])\n    >>> print module['foo']\n    bar\n    >>> print module.getlist('foo')\n    ['bar', 'remember me?']\n    >>> print module.items()\n    [('foo', 'bar'), ('items', [1, 2, 3]), ('foo', u'remember me?')]\n    >>> print pvl.dumps(module)\n    foo = bar\n    items = (1, 2, 3)\n    foo = \"remember me?\"\n    END\n\nFor more information on custom serilization and deseralization see the\n`full documentation`_.\n\n\nContributing\n------------\n\nFeedback, issues, and contributions are always gratefully welcomed. See the\n`contributing guide`_ for details on how to help and setup a development\nenvironment.\n\n\n.. _PlanetaryPy Toolkit: https://github.com/planetarypy\n.. _USGS Isis Cube Label: http://isis.astrogeology.usgs.gov/\n.. _NASA PDS 3 Label: https://pds.nasa.gov\n.. _image: https://github.com/planetarypy/pvl/raw/master/tests/data/pattern.cub\n.. _full documentation: http://pvl.readthedocs.org\n.. _contributing guide: https://github.com/planetarypy/pvl/blob/master/CONTRIBUTING.rst\n\n\n\n\nHistory\n-------\n\n0.3.0 (2017-06-28)\n~~~~~~~~~~~~~~~~~~\n\n* Create methods to add items to the label\n* Give user option to allow the parser to succeed in parsing broken labels\n\n0.2.0 (2015-08-13)\n~~~~~~~~~~~~~~~~~~\n\n* Drastically increase test coverage.\n* Lots of bug fixes.\n* Add Cube and PDS encoders.\n* Cleanup README.\n* Use pvl specification terminology.\n* Added element access by index and slice.\n\n0.1.1 (2015-06-01)\n~~~~~~~~~~~~~~~~~~\n\n* Fixed issue with reading Pancam PDS Products.\n\n0.1.0 (2015-05-30)\n~~~~~~~~~~~~~~~~~~\n\n* First release on PyPI.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/planetarypy/pvl", "keywords": "pvl", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "pvl", "package_url": "https://pypi.org/project/pvl/", "platform": "", "project_url": "https://pypi.org/project/pvl/", "project_urls": {"Homepage": "https://github.com/planetarypy/pvl"}, "release_url": "https://pypi.org/project/pvl/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "Python implementation of PVL (Parameter Value Language)", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/pvl\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pvl.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ca53146465db539afc089e5cdb629b84a8e2a97/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70766c2e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://travis-ci.org/planetarypy/pvl\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/planetarypy/pvl.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ba508655023d967d3a010bf4ba531908990b72a/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f706c616e657461727970792f70766c2e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.python.org/pypi/pvl\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/dm/pvl.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e58dc5cd712c471535b1b03b1e17cae1df1a9f59/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f70766c2e7376673f7374796c653d666c61742d737175617265\"></a>\n<p>Python implementation of PVL (Parameter Value Language)</p>\n<ul>\n<li>Free software: BSD license</li>\n<li>Documentation: <a href=\"http://pvl.readthedocs.org\" rel=\"nofollow\">http://pvl.readthedocs.org</a>.</li>\n<li>Support for Python 2, 3 and pypi.</li>\n<li>Proudly part of the <a href=\"https://github.com/planetarypy\" rel=\"nofollow\">PlanetaryPy Toolkit</a></li>\n</ul>\n<p>PVL is a markup language, similar to xml, commonly employed for entries in the\nPlanetary Database System used by NASA to store mission data, among other uses.\nThis package supports both encoding a decoding a superset of PVL, including the\n<a href=\"http://isis.astrogeology.usgs.gov/\" rel=\"nofollow\">USGS Isis Cube Label</a> and <a href=\"https://pds.nasa.gov\" rel=\"nofollow\">NASA PDS 3 Label</a> dialects.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Can either install with pip or with conda.</p>\n<p>To install with pip, at the command line:</p>\n<pre>$ pip install pvl\n</pre>\n<p>Directions for installing with conda-forge:</p>\n<p>Installing pvl from the conda-forge channel can be achieved by adding\nconda-forge to your channels with:</p>\n<pre>conda config --add channels conda-forge\n</pre>\n<p>Once the conda-forge channel has been enabled, pvl can be installed with:</p>\n<pre>conda install pvl\n</pre>\n<p>It is possible to list all of the versions of pvl available on your platform\nwith:</p>\n<pre>conda search pvl --channel conda-forge\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>pvl exposes an API familiar to users of the standard library json module.</p>\n<p>Decoding is primarily done through <tt>pvl.load</tt> for file like objects and\n<tt>pvl.loads</tt> for strings:</p>\n<pre>&gt;&gt;&gt; import pvl\n&gt;&gt;&gt; module = pvl.loads(\"\"\"\n...     foo = bar\n...     items = (1, 2, 3)\n...     END\n... \"\"\")\n&gt;&gt;&gt; print module\nPVLModule([\n  (u'foo', u'bar')\n  (u'items', [1, 2, 3])\n])\n&gt;&gt;&gt; print module['foo']\nbar\n</pre>\n<p>You may also use <tt>pvl.load</tt> to read a label directly from an <a href=\"https://github.com/planetarypy/pvl/raw/master/tests/data/pattern.cub\" rel=\"nofollow\">image</a>:</p>\n<pre>&gt;&gt;&gt; import pvl\n&gt;&gt;&gt; label = pvl.load('pattern.cub')\n&gt;&gt;&gt; print label\nPVLModule([\n  (u'IsisCube',\n   PVLObject([\n    (u'Core',\n     PVLObject([\n      (u'StartByte', 65537)\n      (u'Format', u'Tile')\n# output truncated...\n&gt;&gt;&gt; print label['IsisCube']['Core']['StartByte']\n65537\n</pre>\n<p>Similarly, encoding pvl modules is done through <tt>pvl.dump</tt> and <tt>pvl.dumps</tt>:</p>\n<pre>&gt;&gt;&gt; import pvl\n&gt;&gt;&gt; print pvl.dumps({\n...     'foo': 'bar',\n...     'items': [1, 2, 3]\n... })\nitems = (1, 2, 3)\nfoo = bar\nEND\n</pre>\n<p><tt>PVLModule</tt> objects may also be pragmatically built up to control the order\nof parameters as well as duplicate keys:</p>\n<pre>&gt;&gt;&gt; import pvl\n&gt;&gt;&gt; module = pvl.PVLModule({'foo': 'bar'})\n&gt;&gt;&gt; module.append('items', [1, 2, 3])\n&gt;&gt;&gt; print pvl.dumps(module)\nfoo = bar\nitems = (1, 2, 3)\nEND\n</pre>\n<p>A <tt>PVLModule</tt> is a <tt>dict</tt> like container that preserves ordering as well as\nallows multiple values for the same key. It provides a similar similar semantics\nto a <tt>list</tt> of key/value <tt>tuples</tt> but with <tt>dict</tt> style access:</p>\n<pre>&gt;&gt;&gt; import pvl\n&gt;&gt;&gt; module = pvl.PVLModule([\n...     ('foo', 'bar'),\n...     ('items', [1, 2, 3]),\n...     ('foo', 'remember me?'),\n... ])\n&gt;&gt;&gt; print module['foo']\nbar\n&gt;&gt;&gt; print module.getlist('foo')\n['bar', 'remember me?']\n&gt;&gt;&gt; print module.items()\n[('foo', 'bar'), ('items', [1, 2, 3]), ('foo', u'remember me?')]\n&gt;&gt;&gt; print pvl.dumps(module)\nfoo = bar\nitems = (1, 2, 3)\nfoo = \"remember me?\"\nEND\n</pre>\n<p>For more information on custom serilization and deseralization see the\n<a href=\"http://pvl.readthedocs.org\" rel=\"nofollow\">full documentation</a>.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Feedback, issues, and contributions are always gratefully welcomed. See the\n<a href=\"https://github.com/planetarypy/pvl/blob/master/CONTRIBUTING.rst\" rel=\"nofollow\">contributing guide</a> for details on how to help and setup a development\nenvironment.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.3.0 (2017-06-28)</h3>\n<ul>\n<li>Create methods to add items to the label</li>\n<li>Give user option to allow the parser to succeed in parsing broken labels</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2.0 (2015-08-13)</h3>\n<ul>\n<li>Drastically increase test coverage.</li>\n<li>Lots of bug fixes.</li>\n<li>Add Cube and PDS encoders.</li>\n<li>Cleanup README.</li>\n<li>Use pvl specification terminology.</li>\n<li>Added element access by index and slice.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.1 (2015-06-01)</h3>\n<ul>\n<li>Fixed issue with reading Pancam PDS Products.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.0 (2015-05-30)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6748473, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5a585a97fdabd2631e78d7bec6bd49f2", "sha256": "205f8f1fdd059c057f37a78addd958128e80ff4d2fe5049dd2b6df47537dd3e4"}, "downloads": -1, "filename": "pvl-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5a585a97fdabd2631e78d7bec6bd49f2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 12153, "upload_time": "2015-05-30T21:28:58", "upload_time_iso_8601": "2015-05-30T21:28:58.758829Z", "url": "https://files.pythonhosted.org/packages/72/2c/6a31522af2bae1349f14f839a2e99f6b4e6862c945a567fde9de1879b283/pvl-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd84494239fcdad6f6a3bc7803ab7c88", "sha256": "32449aee821a9ea29319546ea0f44650f48cf266ec0c99abe8eae1427bf574f2"}, "downloads": -1, "filename": "pvl-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bd84494239fcdad6f6a3bc7803ab7c88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51118, "upload_time": "2015-05-30T21:28:54", "upload_time_iso_8601": "2015-05-30T21:28:54.051321Z", "url": "https://files.pythonhosted.org/packages/73/c4/ae18be58242dc4bdad8427b599b2d3dc7298ed575d94e669705568cc4773/pvl-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "45c41019de7f55f504d35337454f0024", "sha256": "761666a62ffce07425b54376fc97626ec24d7f8732787a8cd101bb28dca3b83f"}, "downloads": -1, "filename": "pvl-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "45c41019de7f55f504d35337454f0024", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 13477, "upload_time": "2015-06-02T11:42:00", "upload_time_iso_8601": "2015-06-02T11:42:00.237154Z", "url": "https://files.pythonhosted.org/packages/d7/47/e6003df1bf7649d6e5318150b9b20646d482e987b96a1b51de605724b800/pvl-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aea2c117b5ec14b40eef1397c4434490", "sha256": "f659d96f168942a34c20ea088ef2fc36ca915e7eb5c9a597b1961fd3c456aa43"}, "downloads": -1, "filename": "pvl-0.1.1.tar.gz", "has_sig": false, "md5_digest": "aea2c117b5ec14b40eef1397c4434490", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58832, "upload_time": "2015-06-02T11:41:54", "upload_time_iso_8601": "2015-06-02T11:41:54.087942Z", "url": "https://files.pythonhosted.org/packages/33/64/e5e0ec39f5fa7716bca5cc964bdf5cf99e731ca1d9f7f818c0e669012f28/pvl-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4a7b1c94fb425b22de87ba2e1e020dd8", "sha256": "374e0c82bf53520066abc3f4b99b7cdd45f635519d28064add6f6b781279d491"}, "downloads": -1, "filename": "pvl-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4a7b1c94fb425b22de87ba2e1e020dd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1409683, "upload_time": "2015-08-13T13:40:00", "upload_time_iso_8601": "2015-08-13T13:40:00.304935Z", "url": "https://files.pythonhosted.org/packages/96/ba/2b08ad600313a9829fa969bd3c41b560c531d0e745bbb5acac85f0f2b40b/pvl-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "0dd806d3d4a8e242247d59f3ce65af55", "sha256": "8074789627a1aecf57b677456d9922483c903d3da4ccc265e918ad21e2bac87f"}, "downloads": -1, "filename": "pvl-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0dd806d3d4a8e242247d59f3ce65af55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68080, "upload_time": "2017-05-29T22:32:50", "upload_time_iso_8601": "2017-05-29T22:32:50.309444Z", "url": "https://files.pythonhosted.org/packages/0d/f2/bfbcebb4e50482aea4a184bb760b80d0b3fcc7cdfeeb357912fa715148ea/pvl-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0dd806d3d4a8e242247d59f3ce65af55", "sha256": "8074789627a1aecf57b677456d9922483c903d3da4ccc265e918ad21e2bac87f"}, "downloads": -1, "filename": "pvl-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0dd806d3d4a8e242247d59f3ce65af55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68080, "upload_time": "2017-05-29T22:32:50", "upload_time_iso_8601": "2017-05-29T22:32:50.309444Z", "url": "https://files.pythonhosted.org/packages/0d/f2/bfbcebb4e50482aea4a184bb760b80d0b3fcc7cdfeeb357912fa715148ea/pvl-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:59 2020"}