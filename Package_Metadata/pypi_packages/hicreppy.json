{"info": {"author": "cmdoret", "author_email": "cyril.matthey-doret@pasteur.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# hicreppy\n**cmdoret**\n\n\n[![PyPI version](https://badge.fury.io/py/hicreppy.svg)](https://badge.fury.io/py/hicreppy)\n[![Build Status](https://travis-ci.com/cmdoret/hicreppy.svg)](https://travis-ci.com/cmdoret/hicreppy)\n[![codecov](https://codecov.io/gh/cmdoret/hicreppy/branch/master/graph/badge.svg)](https://codecov.io/gh/cmdoret/hicreppy)\n[![License: GPLv3](https://img.shields.io/badge/License-GPL%203-0298c3.svg)](https://opensource.org/licenses/GPL-3.0)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\nThis is a python reimplementation of hicrep's algorithm with added support for sparse matrices (in .cool format). \n\nhicrep measures similarity between Hi-C samples by computing a stratum-adjusted correlation coefficient (SCC). In this implementation, the SCC is computed separately for each chromosome and the chromosome length-weighted average of SCCs is computed.\n\nhicrep is published at:\n> HiCRep: assessing the reproducibility of Hi-C data using a stratum-adjusted correlation coefficient. Tao Yang, Feipeng Zhang, Galip Gurkan Yardimci, Ross C Hardison, William Stafford Noble, Feng Yue, Qunhua Li, 2017, Genome Research, doi: 10.1101/gr.220640.117\n\nThe original implementation, in R can be found at https://github.com/MonkeyLB/hicrep\n\n### Installation\n\nYou can install the package using pip:\n\n```bash\npip install --user hicreppy\n```\n\n### Usage\n\nTo find the optimal value for smoothing parameter h, you can use the htrain subcommand:\n\n```\n\nUsage: hicreppy htrain [OPTIONS] COOL1 COOL2\n\n  Find the optimal value for smoothing parameter h. The optimal h-value is\n  printed to stdout. Run informations are printed to stderr.\n\nOptions:\n  -r, --h-max INTEGER     Maximum value of the smoothing parameter h to\n                          explore. All consecutive integer values from 0 to\n                          this value will be tested.  [default: 10]\n  -m, --max-dist INTEGER  Maximum distance at which to compute the SCC, in\n                          basepairs.  [default: 100000]\n  -b, --blacklist TEXT    Exclude those chromosomes in the analysis. List of\n                          comma-separated chromosome names.\n  -w, --whitelist TEXT    Only include those chromosomes in the analysis. List\n                          of comma-separated chromosome names.\n  --help                  Show this message and exit.\n\n```\n\nTo compute the SCC between two matrices, use the scc subcommand. The optimal h value obtained with htrain should be provided to the flag `-v`:\n\n```\n\nUsage: hicreppy scc [OPTIONS] COOL1 COOL2\n\n  Compute the stratum-adjusted correlation coefficient for input matrices\n\nOptions:\n  -v, --h-value INTEGER    Value of the smoothing parameter h to use. Should\n                           be an integer value >= 0.  [default: 10]\n  -m, --max-dist INTEGER   Maximum distance at which to compute the SCC, in\n                           basepairs.  [default: 100000]\n  -s, --subsample INTEGER  Subsample contacts from both matrices to target\n                           value. Leave to 0 to disable subsampling.\n                           [default: 0]\n  -b, --blacklist TEXT     Exclude those chromosomes in the analysis. List of\n                           comma-separated chromosome names.\n  -w, --whitelist TEXT     Only include those chromosomes in the analysis.\n                           List of comma-separated chromosome names.\n  --help                   Show this message and exit.\n```\n\nWhen running multiple pairwise comparisons, compute the optimal h value once between two highly similar samples and reuse the h value for all `scc` commands\n\n### Contributing\n\nAll contributions are welcome. We use the [numpy standard](https://numpydoc.readthedocs.io/en/latest/format.html) for docstrings when documenting functions.\n\nThe code formatting standard we use is [black](https://github.com/psf/black), with --line-length=79 to follow PEP8 recommendations. We use `pytest` with the `pytest-doctest` and `pytest-pylint` plugins as our testing framework. Ideally, new functions should have associated unit tests, placed in the `tests` folder.\n\nTo test the code, you can run:\n\n```bash\npytest --doctest-modules --pylint --pylint-error-types=EF --pylint-rcfile=.pylintrc hicreppy tests\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cmdoret/hicreppy", "keywords": "", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "hicreppy", "package_url": "https://pypi.org/project/hicreppy/", "platform": "", "project_url": "https://pypi.org/project/hicreppy/", "project_urls": {"Homepage": "https://github.com/cmdoret/hicreppy"}, "release_url": "https://pypi.org/project/hicreppy/0.0.5/", "requires_dist": ["click", "cooler", "numpy", "pandas", "scipy"], "requires_python": ">=3.6", "summary": "Reimplementation of the hicrep with added support for sparse matrix and multiple chromosomes.", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>hicreppy</h1>\n<p><strong>cmdoret</strong></p>\n<p><a href=\"https://badge.fury.io/py/hicreppy\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81abed7e30f03312285a645b5e2075a9d8e7f58c/68747470733a2f2f62616467652e667572792e696f2f70792f68696372657070792e737667\"></a>\n<a href=\"https://travis-ci.com/cmdoret/hicreppy\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a998543f94383804d3aaed9e563c1f4371f92452/68747470733a2f2f7472617669732d63692e636f6d2f636d646f7265742f68696372657070792e737667\"></a>\n<a href=\"https://codecov.io/gh/cmdoret/hicreppy\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9b4cb3157edf289283057a9234cf6c745bcf0e7/68747470733a2f2f636f6465636f762e696f2f67682f636d646f7265742f68696372657070792f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://opensource.org/licenses/GPL-3.0\" rel=\"nofollow\"><img alt=\"License: GPLv3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b8eda87277575ac97f406a6472b7f5ff3bea5cd6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c253230332d3032393863332e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>This is a python reimplementation of hicrep's algorithm with added support for sparse matrices (in .cool format).</p>\n<p>hicrep measures similarity between Hi-C samples by computing a stratum-adjusted correlation coefficient (SCC). In this implementation, the SCC is computed separately for each chromosome and the chromosome length-weighted average of SCCs is computed.</p>\n<p>hicrep is published at:</p>\n<blockquote>\n<p>HiCRep: assessing the reproducibility of Hi-C data using a stratum-adjusted correlation coefficient. Tao Yang, Feipeng Zhang, Galip Gurkan Yardimci, Ross C Hardison, William Stafford Noble, Feng Yue, Qunhua Li, 2017, Genome Research, doi: 10.1101/gr.220640.117</p>\n</blockquote>\n<p>The original implementation, in R can be found at <a href=\"https://github.com/MonkeyLB/hicrep\" rel=\"nofollow\">https://github.com/MonkeyLB/hicrep</a></p>\n<h3>Installation</h3>\n<p>You can install the package using pip:</p>\n<pre>pip install --user hicreppy\n</pre>\n<h3>Usage</h3>\n<p>To find the optimal value for smoothing parameter h, you can use the htrain subcommand:</p>\n<pre><code>\nUsage: hicreppy htrain [OPTIONS] COOL1 COOL2\n\n  Find the optimal value for smoothing parameter h. The optimal h-value is\n  printed to stdout. Run informations are printed to stderr.\n\nOptions:\n  -r, --h-max INTEGER     Maximum value of the smoothing parameter h to\n                          explore. All consecutive integer values from 0 to\n                          this value will be tested.  [default: 10]\n  -m, --max-dist INTEGER  Maximum distance at which to compute the SCC, in\n                          basepairs.  [default: 100000]\n  -b, --blacklist TEXT    Exclude those chromosomes in the analysis. List of\n                          comma-separated chromosome names.\n  -w, --whitelist TEXT    Only include those chromosomes in the analysis. List\n                          of comma-separated chromosome names.\n  --help                  Show this message and exit.\n\n</code></pre>\n<p>To compute the SCC between two matrices, use the scc subcommand. The optimal h value obtained with htrain should be provided to the flag <code>-v</code>:</p>\n<pre><code>\nUsage: hicreppy scc [OPTIONS] COOL1 COOL2\n\n  Compute the stratum-adjusted correlation coefficient for input matrices\n\nOptions:\n  -v, --h-value INTEGER    Value of the smoothing parameter h to use. Should\n                           be an integer value &gt;= 0.  [default: 10]\n  -m, --max-dist INTEGER   Maximum distance at which to compute the SCC, in\n                           basepairs.  [default: 100000]\n  -s, --subsample INTEGER  Subsample contacts from both matrices to target\n                           value. Leave to 0 to disable subsampling.\n                           [default: 0]\n  -b, --blacklist TEXT     Exclude those chromosomes in the analysis. List of\n                           comma-separated chromosome names.\n  -w, --whitelist TEXT     Only include those chromosomes in the analysis.\n                           List of comma-separated chromosome names.\n  --help                   Show this message and exit.\n</code></pre>\n<p>When running multiple pairwise comparisons, compute the optimal h value once between two highly similar samples and reuse the h value for all <code>scc</code> commands</p>\n<h3>Contributing</h3>\n<p>All contributions are welcome. We use the <a href=\"https://numpydoc.readthedocs.io/en/latest/format.html\" rel=\"nofollow\">numpy standard</a> for docstrings when documenting functions.</p>\n<p>The code formatting standard we use is <a href=\"https://github.com/psf/black\" rel=\"nofollow\">black</a>, with --line-length=79 to follow PEP8 recommendations. We use <code>pytest</code> with the <code>pytest-doctest</code> and <code>pytest-pylint</code> plugins as our testing framework. Ideally, new functions should have associated unit tests, placed in the <code>tests</code> folder.</p>\n<p>To test the code, you can run:</p>\n<pre>pytest --doctest-modules --pylint --pylint-error-types<span class=\"o\">=</span>EF --pylint-rcfile<span class=\"o\">=</span>.pylintrc hicreppy tests\n</pre>\n\n          </div>"}, "last_serial": 6286285, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9a11236c700169fc77f4acd280ff0dfb", "sha256": "fe01a4f0683639531966b0c3014ca98582d50ef8bc734885618b222bfeee723f"}, "downloads": -1, "filename": "hicreppy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9a11236c700169fc77f4acd280ff0dfb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21977, "upload_time": "2019-12-03T15:19:13", "upload_time_iso_8601": "2019-12-03T15:19:13.512970Z", "url": "https://files.pythonhosted.org/packages/67/3b/ae02581535b30ec08faaa7da875117d14d95e69f2a07d254d824e1dd5e0c/hicreppy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8ce0f97711e564cf4302e9d0dd5616e", "sha256": "ef8be282076a3c7c2f5c869f4c100770ff52deaf473eb9b45e0d298f357cde81"}, "downloads": -1, "filename": "hicreppy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f8ce0f97711e564cf4302e9d0dd5616e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8072, "upload_time": "2019-12-03T15:19:15", "upload_time_iso_8601": "2019-12-03T15:19:15.940484Z", "url": "https://files.pythonhosted.org/packages/a7/0a/80d5f818fca2cdfbe7d89da59fc905180c267738a79ab14fb297d47d2bfb/hicreppy-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d85cf9621dfa06d9069167e1f57700fe", "sha256": "870fe51ee0106527fa7b1a7f9e122ec3be106b2f478b3b68e2175b939a84ad94"}, "downloads": -1, "filename": "hicreppy-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d85cf9621dfa06d9069167e1f57700fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24364, "upload_time": "2019-12-03T15:49:08", "upload_time_iso_8601": "2019-12-03T15:49:08.767977Z", "url": "https://files.pythonhosted.org/packages/27/9e/13d40962dd8ce03d251355bb2a01be0c3092c1b2a502ef6c349c7b48d9b7/hicreppy-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2ade09e51df8e3a637ba623e531bc29", "sha256": "f918fb8e37844d1649041d289bf3feb9ae419d9db7bced5ba9da0db75754559e"}, "downloads": -1, "filename": "hicreppy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "a2ade09e51df8e3a637ba623e531bc29", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10493, "upload_time": "2019-12-03T15:49:10", "upload_time_iso_8601": "2019-12-03T15:49:10.512409Z", "url": "https://files.pythonhosted.org/packages/11/06/3e231f179c1fe94056981f8ad0121cc893c74cf113a223746307b7a12549/hicreppy-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "c6ab542bb3f74febeed3bce30a22fccb", "sha256": "e47800f8d2f67d9e2ea53c8f666f7dd67beb0b3f229fd28907a527e7c1ee7aad"}, "downloads": -1, "filename": "hicreppy-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c6ab542bb3f74febeed3bce30a22fccb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24400, "upload_time": "2019-12-03T19:46:53", "upload_time_iso_8601": "2019-12-03T19:46:53.955951Z", "url": "https://files.pythonhosted.org/packages/a9/dd/2953e63ad22483031e6d3f0db184b8ea947a12bcb790dffff79f1ec9ff76/hicreppy-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00fcecba3f99bd2040994c1815a81a7a", "sha256": "9b89f9ce15b4abef84bc00596da26772ac4fa79302df708751d2f4656f2e151c"}, "downloads": -1, "filename": "hicreppy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "00fcecba3f99bd2040994c1815a81a7a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10534, "upload_time": "2019-12-03T19:46:55", "upload_time_iso_8601": "2019-12-03T19:46:55.230897Z", "url": "https://files.pythonhosted.org/packages/df/36/8c3ed075e916dd95b0e2184daf1de088725386768f24eb1e5f5b94beb566/hicreppy-0.0.3.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "3329e671a23aed6d1e1454ef6e043c10", "sha256": "040216de4c7398293bc033b8a56339431053a84da40206e3b5766dcc892fce24"}, "downloads": -1, "filename": "hicreppy-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "3329e671a23aed6d1e1454ef6e043c10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24939, "upload_time": "2019-12-12T13:43:31", "upload_time_iso_8601": "2019-12-12T13:43:31.936564Z", "url": "https://files.pythonhosted.org/packages/9d/b3/a3fad30c24ad4992621b6455a953cec88c81d3e67ef1cf6a3811829e1573/hicreppy-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f56eed41d8d1f65f2fa7575c7394c19", "sha256": "1f648b25b1ffe8c2931b594a09bf1e435288f5942a0275e949081d77fd3ac40c"}, "downloads": -1, "filename": "hicreppy-0.0.5.tar.gz", "has_sig": false, "md5_digest": "9f56eed41d8d1f65f2fa7575c7394c19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12070, "upload_time": "2019-12-12T13:43:34", "upload_time_iso_8601": "2019-12-12T13:43:34.039250Z", "url": "https://files.pythonhosted.org/packages/92/4b/ffd58139789c042382422fee2b9b7c622c7e07e34995ca191fa731e802f2/hicreppy-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3329e671a23aed6d1e1454ef6e043c10", "sha256": "040216de4c7398293bc033b8a56339431053a84da40206e3b5766dcc892fce24"}, "downloads": -1, "filename": "hicreppy-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "3329e671a23aed6d1e1454ef6e043c10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24939, "upload_time": "2019-12-12T13:43:31", "upload_time_iso_8601": "2019-12-12T13:43:31.936564Z", "url": "https://files.pythonhosted.org/packages/9d/b3/a3fad30c24ad4992621b6455a953cec88c81d3e67ef1cf6a3811829e1573/hicreppy-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f56eed41d8d1f65f2fa7575c7394c19", "sha256": "1f648b25b1ffe8c2931b594a09bf1e435288f5942a0275e949081d77fd3ac40c"}, "downloads": -1, "filename": "hicreppy-0.0.5.tar.gz", "has_sig": false, "md5_digest": "9f56eed41d8d1f65f2fa7575c7394c19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12070, "upload_time": "2019-12-12T13:43:34", "upload_time_iso_8601": "2019-12-12T13:43:34.039250Z", "url": "https://files.pythonhosted.org/packages/92/4b/ffd58139789c042382422fee2b9b7c622c7e07e34995ca191fa731e802f2/hicreppy-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:17 2020"}