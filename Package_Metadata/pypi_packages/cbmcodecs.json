{"info": {"author": "Dan Johnson", "author_email": "dj51d@warbirdsurvivors.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==========================================================================\ncbmcodecs - Python encodings for handling PETSCII and C64 Screencode text.\n==========================================================================\n\nIntroduction\n============\n\nThe cbmcodecs package provides a number of encodings for handling text from\nCommodore 8-bit systems. Much of the credit for this package must go to\nLinus Walleij of Triad, as these codecs were built from his PETSCII to Unicode\nmappings which can be found at http://www.df.lth.se/~triad/krad/recode/petscii.html\nThe screencodes codec was created by hand later and borrows from them.\n\n\nUsage\n=====\n\nCurrently there are four codecs defined for variations of the PETSCII encoding:\n\npetscii-c64en-lc\n    The English version of the Commodore 64 mixed-case character set\n\npetscii-c64en-uc\n    The English version of the Commodore 64 upper-case/graphics character set\n\npetscii-vic20en-lc\n    The English version of the VIC-20 mixed-case character set\n\npetscii-vic20en-uc\n    The English version of the VIC-20 upper-case/graphics character set\n\n\nThere are two codecs defined to handle the Screencode (POKE) encoding:\n\nscreencode-c64-lc\n    Mixed-case mapping to screencodes (POKE) used by the Commodore 64 and Vic20\n\nscreencode-c64-uc\n    Upper-case/graphics mapping to screencodes (POKE) used by the Commodore 64 and Vic20\n\n\nSimply import the cbmcodecs package and you will then be able to use them as\nwith any of the encodings from the standard library::\n\n    import cbmcodecs\n\n\n    with open('file.seq', encoding='petscii-c64en-lc') as f:\n        for line in f:\n            print(line)\n\n\nPython Version Note\n===================\n\nCurrently only Python 3 is supported (tested on 3.5+). May or may not work on older versions.\n\n\nLicense\n=======\n\nAs with the original PETSCII to Unicode mapping files, the cbmcodecs package\nis Licensed under the GNU GPL Version 2, see the ``LICENSE.txt`` file for the\nfull text.\n\n\nUnicode symbols used\n====================\nAside from the regular alphanumerics and symbols, the unicode mapping uses the\nfollowing unicode block drawing and other symbols to mimic a bunch of PETSCII characters:\n\n\u00a3 \u03c0 \u2713 \u2190 \u2191 \u2500 \u2502 \u250c \u2510 \u2514 \u2518 \u251c \u2524 \u252c \u2534 \u253c \u256d \u256e \u256f \u2570\n\u2571 \u2572 \u2573 \u2581 \u2582 \u2583 \u2584 \u258c \u258d \u258e \u258f \u2592 \u2594 \u2595 \u2596 \u2597 \u2598 \u259a \u259d\n\u25cb \u25cf \u25e4 \u25e5 \u2660 \u2663 \u2665 \u2666\n\n\nCredits\n=======\n\nLinus Walleij - Original C64 and VIC-20 mappings\nDan Johnson - Translation of C64 & VIC-20 mappings to python codecs\nIrmen de Jong - Screencode mappings, bug fixes and unit tests.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dj51d/cbmcodecs", "keywords": "", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "cbmcodecs", "package_url": "https://pypi.org/project/cbmcodecs/", "platform": "", "project_url": "https://pypi.org/project/cbmcodecs/", "project_urls": {"Homepage": "https://github.com/dj51d/cbmcodecs"}, "release_url": "https://pypi.org/project/cbmcodecs/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Python codecs for PETSCII encodings", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>The cbmcodecs package provides a number of encodings for handling text from\nCommodore 8-bit systems. Much of the credit for this package must go to\nLinus Walleij of Triad, as these codecs were built from his PETSCII to Unicode\nmappings which can be found at <a href=\"http://www.df.lth.se/~triad/krad/recode/petscii.html\" rel=\"nofollow\">http://www.df.lth.se/~triad/krad/recode/petscii.html</a>\nThe screencodes codec was created by hand later and borrows from them.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Currently there are four codecs defined for variations of the PETSCII encoding:</p>\n<dl>\n<dt>petscii-c64en-lc</dt>\n<dd>The English version of the Commodore 64 mixed-case character set</dd>\n<dt>petscii-c64en-uc</dt>\n<dd>The English version of the Commodore 64 upper-case/graphics character set</dd>\n<dt>petscii-vic20en-lc</dt>\n<dd>The English version of the VIC-20 mixed-case character set</dd>\n<dt>petscii-vic20en-uc</dt>\n<dd>The English version of the VIC-20 upper-case/graphics character set</dd>\n</dl>\n<p>There are two codecs defined to handle the Screencode (POKE) encoding:</p>\n<dl>\n<dt>screencode-c64-lc</dt>\n<dd>Mixed-case mapping to screencodes (POKE) used by the Commodore 64 and Vic20</dd>\n<dt>screencode-c64-uc</dt>\n<dd>Upper-case/graphics mapping to screencodes (POKE) used by the Commodore 64 and Vic20</dd>\n</dl>\n<p>Simply import the cbmcodecs package and you will then be able to use them as\nwith any of the encodings from the standard library:</p>\n<pre>import cbmcodecs\n\n\nwith open('file.seq', encoding='petscii-c64en-lc') as f:\n    for line in f:\n        print(line)\n</pre>\n</div>\n<div id=\"python-version-note\">\n<h2>Python Version Note</h2>\n<p>Currently only Python 3 is supported (tested on 3.5+). May or may not work on older versions.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>As with the original PETSCII to Unicode mapping files, the cbmcodecs package\nis Licensed under the GNU GPL Version 2, see the <tt>LICENSE.txt</tt> file for the\nfull text.</p>\n</div>\n<div id=\"unicode-symbols-used\">\n<h2>Unicode symbols used</h2>\n<p>Aside from the regular alphanumerics and symbols, the unicode mapping uses the\nfollowing unicode block drawing and other symbols to mimic a bunch of PETSCII characters:</p>\n<p>\u00a3 \u03c0 \u2713 \u2190 \u2191 \u2500 \u2502 \u250c \u2510 \u2514 \u2518 \u251c \u2524 \u252c \u2534 \u253c \u256d \u256e \u256f \u2570\n\u2571 \u2572 \u2573 \u2581 \u2582 \u2583 \u2584 \u258c \u258d \u258e \u258f \u2592 \u2594 \u2595 \u2596 \u2597 \u2598 \u259a \u259d\n\u25cb \u25cf \u25e4 \u25e5 \u2660 \u2663 \u2665 \u2666</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Linus Walleij - Original C64 and VIC-20 mappings\nDan Johnson - Translation of C64 &amp; VIC-20 mappings to python codecs\nIrmen de Jong - Screencode mappings, bug fixes and unit tests.</p>\n</div>\n\n          </div>"}, "last_serial": 3941576, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "53bce57888dc857a40d64d3ba763c276", "sha256": "99013242acc4d1921e610ef35765a835f5b70a8458f25adc36572e81cd4c6afb"}, "downloads": -1, "filename": "cbmcodecs-0.1.0.zip", "has_sig": false, "md5_digest": "53bce57888dc857a40d64d3ba763c276", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23873, "upload_time": "2013-12-01T03:41:58", "upload_time_iso_8601": "2013-12-01T03:41:58.583680Z", "url": "https://files.pythonhosted.org/packages/72/8d/de0365995cc5ca95801665c6cd3218b801191064d4d245d124d1f760b6c5/cbmcodecs-0.1.0.zip", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "56882ef8854377e235aaf11d74797c09", "sha256": "3844961c3a446e3bc81105c8690f0f91ec04eacb41be90b473096b83199d3f84"}, "downloads": -1, "filename": "cbmcodecs-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "56882ef8854377e235aaf11d74797c09", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15485, "upload_time": "2018-02-27T01:45:19", "upload_time_iso_8601": "2018-02-27T01:45:19.516861Z", "url": "https://files.pythonhosted.org/packages/63/26/625b70408a421a722f8dbce351bcfc5893d80c9214e5929e4d545bc81f13/cbmcodecs-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f07c744aeed5f22faf97a8e5cd5faf5f", "sha256": "62fdb3ddc10fd64ff7c8a6fc5ad70870319c2cbed4fff963aa77689c365f4f32"}, "downloads": -1, "filename": "cbmcodecs-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f07c744aeed5f22faf97a8e5cd5faf5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13187, "upload_time": "2018-02-27T01:45:21", "upload_time_iso_8601": "2018-02-27T01:45:21.065545Z", "url": "https://files.pythonhosted.org/packages/11/04/738e39a56d764304238189b2132f8ee8b1e082f91142a5b8352fafeb90b5/cbmcodecs-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c9c1e5abff3fd993bdbe8840c538fcee", "sha256": "a3d72f147b580712b671f8e4fe81d2df38e91a3c2bccef0fd6297226a9a0db5a"}, "downloads": -1, "filename": "cbmcodecs-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c9c1e5abff3fd993bdbe8840c538fcee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21324, "upload_time": "2018-06-08T01:12:46", "upload_time_iso_8601": "2018-06-08T01:12:46.809131Z", "url": "https://files.pythonhosted.org/packages/30/38/336b26aa75744357bff0711d68b1638d0315c9231e53191f9baee8006e99/cbmcodecs-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38b04ba0db87e3d37907d1afb5d43d51", "sha256": "7a0e33dcfcc24d7b21bd43bafe848057757ffe853375df7bae4d8bb1c9559ac7"}, "downloads": -1, "filename": "cbmcodecs-0.2.0.tar.gz", "has_sig": false, "md5_digest": "38b04ba0db87e3d37907d1afb5d43d51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15060, "upload_time": "2018-06-08T01:12:48", "upload_time_iso_8601": "2018-06-08T01:12:48.112480Z", "url": "https://files.pythonhosted.org/packages/cd/d9/44c058899527feff7f25e95975146d583165b37cb455f1bebac4f3d97ea9/cbmcodecs-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c9c1e5abff3fd993bdbe8840c538fcee", "sha256": "a3d72f147b580712b671f8e4fe81d2df38e91a3c2bccef0fd6297226a9a0db5a"}, "downloads": -1, "filename": "cbmcodecs-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c9c1e5abff3fd993bdbe8840c538fcee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21324, "upload_time": "2018-06-08T01:12:46", "upload_time_iso_8601": "2018-06-08T01:12:46.809131Z", "url": "https://files.pythonhosted.org/packages/30/38/336b26aa75744357bff0711d68b1638d0315c9231e53191f9baee8006e99/cbmcodecs-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38b04ba0db87e3d37907d1afb5d43d51", "sha256": "7a0e33dcfcc24d7b21bd43bafe848057757ffe853375df7bae4d8bb1c9559ac7"}, "downloads": -1, "filename": "cbmcodecs-0.2.0.tar.gz", "has_sig": false, "md5_digest": "38b04ba0db87e3d37907d1afb5d43d51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15060, "upload_time": "2018-06-08T01:12:48", "upload_time_iso_8601": "2018-06-08T01:12:48.112480Z", "url": "https://files.pythonhosted.org/packages/cd/d9/44c058899527feff7f25e95975146d583165b37cb455f1bebac4f3d97ea9/cbmcodecs-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:09 2020"}