{"info": {"author": "zwzw911", "author_email": "zwzw911110@163.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Programming Language :: Python :: 3"], "description": "# gen_browser_header\ngen_browser_header create header for http(s) request, return a **list** like    \n[{\n\t'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',\n\t'Accept-Encoding': '*',\n\t'Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2',\n\t'Connection': 'keep-alive',\n\t'User-Agent': 'Mozilla/5.0 (Windows NT 6.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0'\n},     \n{\n\t'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\n\t'Accept-Encoding': '*',\n\t'Accept-Language': 'zh-CN,zh;q=0.9',\n\t'Connection': 'keep-alive',\n\t'User-Agent': 'Mozilla/5.0 (Windows NT 6.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36'\n}       \n### install\n`pip install gen-browser-header`\n### usage\n`import gen_browser_header.main.GenHeader as gen_header`  \n`import gen_browser_header.setting.Setting as setting`    \n`import gen_browser_header.self.SelfEnum as self_enum`  \n\n`cur_setting = setting.GbhSetting()`  \n`cur_setting.proxy_ip = ['10.11.12.13:8090']`   \n`cur_setting.browser_type = {self_enum.BrowserType.Chrome}`  \n`cur_setting.firefox_ver = {'min': 74, 'max': 75}`  \n`cur_setting.os_type = {self_enum.OsType.Win64}`  \n`cur_setting.chrome_type = {self_enum.ChromeType.Stable}`  \n`cur_setting.chrome_max_release_year = 1`  \n\n`print(gen_header(setting=cur_setting, num=10))`\n\n### gen_browser_header use gen_header to generate headers, which include 3 parameters: setting, url and num.  \n### setting\ngen_browser_header use setting to pass related parameters into function\n, setting has below keys:  \n1. **proxy_ip**  \ntype:***list***. For example, [\\'10.18.20.71:8080\\']  \ndefault: **None**.   \ndescription: When gen_browser_header try to generate\n chrome\n header, it\n need to\n connect to\n https://www.chromedownloads.net/ to get valid chrome version, sometime, can\n 't directly connect to it, so need to set proxy ip to connect this url. get\n -browser-header will try each element in **proxy_ip**, until find an valid\n  one to use, or can't find any valid, then raise an Exception and exit  \n2. **browser_type**  \n  type:***set***.  \n  default: **self_enum.BrowserType.Firefox**.   \n  description: what kind of browser's header to be generated. Currently, only\n   support\n   firefox\n   and chrome. 3 enum value can be choose: self_enum.BrowserType.Chrome\n   /self_enum.BrowserType.Firefox/self_enum.BrowserType.All. Notice, if All is\n    set\n   , Chrome and Firefox will be auto replace All. which means: {self_enum.BrowserType.All} will be convert to\n      {self_enum.BrowserType.Chrome\n   , self_enum.BrowserType.Firefox} internally  \n3. **firefox_ver**  \n  type:***dict***.   \n  default: **{'min':64, 'max':75}**  \n  description: the firefox version range, in which range, a firefox header\n   will be\n   generate. This parameter is a dict, include 2 keys: min and max, the\n    related version info can be found in http://ftp.mozilla.org/pub/firefox\n    /releases/. An exampleL {'min': 64, 'max': 75}  \n4. **os_type**    \n   type:***set***.  \n   default: **self_enum.OsType.Win64**.    \n   description: In which kind of operation system, the header generated\n   . Currently\n   , only 3\n    enum value can be choose:  self_enum.OsType.Win32/self_enum.OsType.Win64\n    /self_enum.OsType.All. Notice, if All is set, Win32 and Win64 will be\n     auto replace All. which means: {self_enum.OsType.All} will be convert to\n      {self_enum.OsType.Win32, self_enum.OsType.Win64} internally  \n5. **chrome_type**    \ntype:***set***.   \ndefault: **self_enum.ChromeType.Stable**.  \ndescription: chrome has 4 different type: stable/beta/dev/canary, related\n enum value are\n self_enum.ChromeType.Stable\n/self_enum.ChromeType.Beta/self_enum.ChromeType.Dev/self_enum.ChromeType\n.Canary. An addition enum value self_enum.ChromeType.All also valid, it All\n is set, chrome_type will be replace to include all 4 chrome type internally. which means: {self_enum.ChromeType.All} will be convert to\n      {self_enum.ChromeType.Win32, self_enum.OsType.Win64} internally  \n6. **chrome_max_release_year**    \ntype: ***int***.   \ndefault: **1**.  \ndescription: how long ago, chrome version should be choose, the max value is\n `current year - 2008`, 2008 is the year that chrome released\n ### url  \n type: **str**  \n default: ***None***   \n description: In request header, there is a item Host. gen_browser_header generate this item base on this parameter. \n For example, url 'https://packaging.python.org/tutorials/packaging-projects/' generate 'packaging.python.org'  \n\n ### num\n type: ***int***.  \n default: **None**.   \n description: how many header will be generate. if not set(default value is None), all\n  generate header will be return, otherwise, the ***num*** headers will be\n   return\n\n\n### change\n0.1.0  use requests-html replace requests\n0.1.3  add function extract_host_from_url; add item host in header\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zwzw911/gen-browser-header", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gen-browser-header", "package_url": "https://pypi.org/project/gen-browser-header/", "platform": "", "project_url": "https://pypi.org/project/gen-browser-header/", "project_urls": {"Homepage": "https://github.com/zwzw911/gen-browser-header"}, "release_url": "https://pypi.org/project/gen-browser-header/0.1.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A package to generate http(s) request header", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>gen_browser_header</h1>\n<p>gen_browser_header create header for http(s) request, return a <strong>list</strong> like<br>\n[{\n'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,<em>/</em>;q=0.8',\n'Accept-Encoding': '<em>',\n'Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2',\n'Connection': 'keep-alive',\n'User-Agent': 'Mozilla/5.0 (Windows NT 6.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0'\n},<br>\n{\n'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,</em>/<em>;q=0.8,application/signed-exchange;v=b3;q=0.9',\n'Accept-Encoding': '</em>',\n'Accept-Language': 'zh-CN,zh;q=0.9',\n'Connection': 'keep-alive',\n'User-Agent': 'Mozilla/5.0 (Windows NT 6.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36'\n}</p>\n<h3>install</h3>\n<p><code>pip install gen-browser-header</code></p>\n<h3>usage</h3>\n<p><code>import gen_browser_header.main.GenHeader as gen_header</code><br>\n<code>import gen_browser_header.setting.Setting as setting</code><br>\n<code>import gen_browser_header.self.SelfEnum as self_enum</code></p>\n<p><code>cur_setting = setting.GbhSetting()</code><br>\n<code>cur_setting.proxy_ip = ['10.11.12.13:8090']</code><br>\n<code>cur_setting.browser_type = {self_enum.BrowserType.Chrome}</code><br>\n<code>cur_setting.firefox_ver = {'min': 74, 'max': 75}</code><br>\n<code>cur_setting.os_type = {self_enum.OsType.Win64}</code><br>\n<code>cur_setting.chrome_type = {self_enum.ChromeType.Stable}</code><br>\n<code>cur_setting.chrome_max_release_year = 1</code></p>\n<p><code>print(gen_header(setting=cur_setting, num=10))</code></p>\n<h3>gen_browser_header use gen_header to generate headers, which include 3 parameters: setting, url and num.</h3>\n<h3>setting</h3>\n<p>gen_browser_header use setting to pass related parameters into function\n, setting has below keys:</p>\n<ol>\n<li><strong>proxy_ip</strong><br>\ntype:<em><strong>list</strong></em>. For example, ['10.18.20.71:8080']<br>\ndefault: <strong>None</strong>.<br>\ndescription: When gen_browser_header try to generate\nchrome\nheader, it\nneed to\nconnect to\n<a href=\"https://www.chromedownloads.net/\" rel=\"nofollow\">https://www.chromedownloads.net/</a> to get valid chrome version, sometime, can\n't directly connect to it, so need to set proxy ip to connect this url. get\n-browser-header will try each element in <strong>proxy_ip</strong>, until find an valid\none to use, or can't find any valid, then raise an Exception and exit</li>\n<li><strong>browser_type</strong><br>\ntype:<em><strong>set</strong></em>.<br>\ndefault: <strong>self_enum.BrowserType.Firefox</strong>.<br>\ndescription: what kind of browser's header to be generated. Currently, only\nsupport\nfirefox\nand chrome. 3 enum value can be choose: self_enum.BrowserType.Chrome\n/self_enum.BrowserType.Firefox/self_enum.BrowserType.All. Notice, if All is\nset\n, Chrome and Firefox will be auto replace All. which means: {self_enum.BrowserType.All} will be convert to\n{self_enum.BrowserType.Chrome\n, self_enum.BrowserType.Firefox} internally</li>\n<li><strong>firefox_ver</strong><br>\ntype:<em><strong>dict</strong></em>.<br>\ndefault: <strong>{'min':64, 'max':75}</strong><br>\ndescription: the firefox version range, in which range, a firefox header\nwill be\ngenerate. This parameter is a dict, include 2 keys: min and max, the\nrelated version info can be found in <a href=\"http://ftp.mozilla.org/pub/firefox\" rel=\"nofollow\">http://ftp.mozilla.org/pub/firefox</a>\n/releases/. An exampleL {'min': 64, 'max': 75}</li>\n<li><strong>os_type</strong><br>\ntype:<em><strong>set</strong></em>.<br>\ndefault: <strong>self_enum.OsType.Win64</strong>.<br>\ndescription: In which kind of operation system, the header generated\n. Currently\n, only 3\nenum value can be choose:  self_enum.OsType.Win32/self_enum.OsType.Win64\n/self_enum.OsType.All. Notice, if All is set, Win32 and Win64 will be\nauto replace All. which means: {self_enum.OsType.All} will be convert to\n{self_enum.OsType.Win32, self_enum.OsType.Win64} internally</li>\n<li><strong>chrome_type</strong><br>\ntype:<em><strong>set</strong></em>.<br>\ndefault: <strong>self_enum.ChromeType.Stable</strong>.<br>\ndescription: chrome has 4 different type: stable/beta/dev/canary, related\nenum value are\nself_enum.ChromeType.Stable\n/self_enum.ChromeType.Beta/self_enum.ChromeType.Dev/self_enum.ChromeType\n.Canary. An addition enum value self_enum.ChromeType.All also valid, it All\nis set, chrome_type will be replace to include all 4 chrome type internally. which means: {self_enum.ChromeType.All} will be convert to\n{self_enum.ChromeType.Win32, self_enum.OsType.Win64} internally</li>\n<li><strong>chrome_max_release_year</strong><br>\ntype: <em><strong>int</strong></em>.<br>\ndefault: <strong>1</strong>.<br>\ndescription: how long ago, chrome version should be choose, the max value is\n<code>current year - 2008</code>, 2008 is the year that chrome released</li>\n</ol>\n<h3>url</h3>\n<p>type: <strong>str</strong><br>\ndefault: <em><strong>None</strong></em><br>\ndescription: In request header, there is a item Host. gen_browser_header generate this item base on this parameter.\nFor example, url '<a href=\"https://packaging.python.org/tutorials/packaging-projects/\" rel=\"nofollow\">https://packaging.python.org/tutorials/packaging-projects/</a>' generate 'packaging.python.org'</p>\n<h3>num</h3>\n<p>type: <em><strong>int</strong></em>.<br>\ndefault: <strong>None</strong>.<br>\ndescription: how many header will be generate. if not set(default value is None), all\ngenerate header will be return, otherwise, the <em><strong>num</strong></em> headers will be\nreturn</p>\n<h3>change</h3>\n<p>0.1.0  use requests-html replace requests\n0.1.3  add function extract_host_from_url; add item host in header</p>\n\n          </div>"}, "last_serial": 7117385, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "44cff4bf49605dafff0522097316e334", "sha256": "5734011dd74a5e925813af65f5fdd59b50d0b6d239917a66de195c83caf70f96"}, "downloads": -1, "filename": "gen_browser_header-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "44cff4bf49605dafff0522097316e334", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15279, "upload_time": "2020-04-18T15:21:11", "upload_time_iso_8601": "2020-04-18T15:21:11.881351Z", "url": "https://files.pythonhosted.org/packages/a9/fd/967358c5b904dfa840f27a9d685def4d6d8abf0c5ab7158dc4437301d021/gen_browser_header-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "767583d224f8c548721081b05cbfc693", "sha256": "572798f75ab7ccdcedea02f5380cee4e13247e9225f4e4a84fd30ff1d5558667"}, "downloads": -1, "filename": "gen_browser_header-0.0.10.tar.gz", "has_sig": false, "md5_digest": "767583d224f8c548721081b05cbfc693", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12812, "upload_time": "2020-04-18T15:21:13", "upload_time_iso_8601": "2020-04-18T15:21:13.920274Z", "url": "https://files.pythonhosted.org/packages/48/38/5cb9af4d26ce86484836a1dcd775f7cba4e24c69230c5131f502879a1bf7/gen_browser_header-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "a7c805aa737599acf7ebda74a3ee3724", "sha256": "256cd59f54626b17e00e1161425755437fcf9474cb63ca3895cc4f0a02cd3608"}, "downloads": -1, "filename": "gen_browser_header-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "a7c805aa737599acf7ebda74a3ee3724", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14956, "upload_time": "2020-04-19T15:24:33", "upload_time_iso_8601": "2020-04-19T15:24:33.318034Z", "url": "https://files.pythonhosted.org/packages/69/b3/4990464975f96ed7c028a0e01ef59d7f11125ee4b8dbf9834d36e06e4070/gen_browser_header-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd09b3d030e926de44e208fad5a57d36", "sha256": "d29cfd98d464d9577000bb3b7ec59cd512b846e693f94b71c9bce2c03593ec50"}, "downloads": -1, "filename": "gen_browser_header-0.0.11.tar.gz", "has_sig": false, "md5_digest": "bd09b3d030e926de44e208fad5a57d36", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12500, "upload_time": "2020-04-19T15:24:34", "upload_time_iso_8601": "2020-04-19T15:24:34.600904Z", "url": "https://files.pythonhosted.org/packages/14/0a/30d62eb2e159407acdce2ff2afec85bf42c1abaffd2d8d7c2d91a7f450e6/gen_browser_header-0.0.11.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "1b3cfc9adef82387c0528884797c5564", "sha256": "364705527135eb5554e131d097abb709dde13c9197b86ee48935bfa6513a58be"}, "downloads": -1, "filename": "gen_browser_header-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "1b3cfc9adef82387c0528884797c5564", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13784, "upload_time": "2020-04-17T02:47:23", "upload_time_iso_8601": "2020-04-17T02:47:23.003214Z", "url": "https://files.pythonhosted.org/packages/dc/cd/0bebeae2878dbd0023da93016df6b9212c2b3d43ad9da7f46a67275bde27/gen_browser_header-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95571143a696295153e7dc5482d9e51e", "sha256": "377483e1a7d479f5d362f877fe972cd60940d349e41527b635b6cb2aa64fedbe"}, "downloads": -1, "filename": "gen_browser_header-0.0.5.tar.gz", "has_sig": false, "md5_digest": "95571143a696295153e7dc5482d9e51e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11063, "upload_time": "2020-04-17T02:47:25", "upload_time_iso_8601": "2020-04-17T02:47:25.293332Z", "url": "https://files.pythonhosted.org/packages/dd/10/1817bf77eeeb44433e167b45a88db9b2d3d4d9e5957b317b3fbfec0eaa2c/gen_browser_header-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "12e24d47415b34082dbd1b93a278528a", "sha256": "93272ae0b69c2b2ba43120b53f68ba45d025d17f705ce450d8a5662cf0e1b072"}, "downloads": -1, "filename": "gen_browser_header-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "12e24d47415b34082dbd1b93a278528a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13783, "upload_time": "2020-04-17T02:52:46", "upload_time_iso_8601": "2020-04-17T02:52:46.000661Z", "url": "https://files.pythonhosted.org/packages/61/9d/6c95497bebb75edc15ab3aebdf4d0d6924e6b44121819fdb01a6dd6779bb/gen_browser_header-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6df02c709038baf9498671c2ee131960", "sha256": "3e77e57f1a70abecbcbdd8a3ba99326ee63de2d1ba3bc7cdef53e2e5a283f202"}, "downloads": -1, "filename": "gen_browser_header-0.0.6.tar.gz", "has_sig": false, "md5_digest": "6df02c709038baf9498671c2ee131960", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11050, "upload_time": "2020-04-17T02:52:47", "upload_time_iso_8601": "2020-04-17T02:52:47.254596Z", "url": "https://files.pythonhosted.org/packages/a9/98/1cc8987ce6e5f551c54c31893b26fee2884d1be0a344582a83d5f99d2863/gen_browser_header-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "6780d231597f36de5b3cd47fa8a16543", "sha256": "003ba60f6f2f17031cb8f0bd9db6f9380c53adf531336a6b34274b8e6f5b011b"}, "downloads": -1, "filename": "gen_browser_header-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "6780d231597f36de5b3cd47fa8a16543", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14303, "upload_time": "2020-04-17T07:07:05", "upload_time_iso_8601": "2020-04-17T07:07:05.276755Z", "url": "https://files.pythonhosted.org/packages/fb/15/b32633d320823f3a96fd74d91b30392520a90b19b2e2a3429e171f63ae88/gen_browser_header-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be16e2d1e0cbf68ce9a8985b819e2731", "sha256": "e8d0435fdba2f07a5e2512b36a4aaf25d1a4b141be4bc8c60ba5505047b841bf"}, "downloads": -1, "filename": "gen_browser_header-0.0.7.tar.gz", "has_sig": false, "md5_digest": "be16e2d1e0cbf68ce9a8985b819e2731", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12333, "upload_time": "2020-04-17T07:07:06", "upload_time_iso_8601": "2020-04-17T07:07:06.489875Z", "url": "https://files.pythonhosted.org/packages/35/4a/cea41c46af31e66e8ffa7cb024a958bfd942a4711b24653ebc0975c38c11/gen_browser_header-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "e3b63f4baa5ec5208c5d4235c0c4f471", "sha256": "7ff3ead15c25d779e23c72ef296563b274f06b64d9450424e428490f209393e4"}, "downloads": -1, "filename": "gen_browser_header-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "e3b63f4baa5ec5208c5d4235c0c4f471", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15108, "upload_time": "2020-04-17T07:21:36", "upload_time_iso_8601": "2020-04-17T07:21:36.679295Z", "url": "https://files.pythonhosted.org/packages/c9/30/202ea0ac74534e64bc67947da98ed08df4933567a76916bc063292c12846/gen_browser_header-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ca978659bcc131cdf14147623af97c9", "sha256": "5286cb4b4f4f7ca9827129016f7bdeb437f76ea88a6cae9895f2298f093effb7"}, "downloads": -1, "filename": "gen_browser_header-0.0.8.tar.gz", "has_sig": false, "md5_digest": "4ca978659bcc131cdf14147623af97c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12677, "upload_time": "2020-04-17T07:21:38", "upload_time_iso_8601": "2020-04-17T07:21:38.783170Z", "url": "https://files.pythonhosted.org/packages/83/e8/80f6421e8f78820c80d9dc4881ddf7733bf2a1d69fabe49ab38d7a92b01a/gen_browser_header-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "4d8053cb8323b63c4104c77375c4b7a9", "sha256": "22a66ac4f4e524c9f68fe8d261fa00ab3056d99f8f878f1e7d7865c96e6e3ddb"}, "downloads": -1, "filename": "gen_browser_header-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "4d8053cb8323b63c4104c77375c4b7a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15118, "upload_time": "2020-04-17T07:41:10", "upload_time_iso_8601": "2020-04-17T07:41:10.909659Z", "url": "https://files.pythonhosted.org/packages/a8/8f/e46c8226ccff2c93109f82629467e57fc68a702da49f4c645716aaf2d286/gen_browser_header-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2530c087bcc29657341cc337830042f", "sha256": "32e48ef8d4396d862bd184cfcb5442f8942006c14274653521713fea6f5810da"}, "downloads": -1, "filename": "gen_browser_header-0.0.9.tar.gz", "has_sig": false, "md5_digest": "b2530c087bcc29657341cc337830042f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12658, "upload_time": "2020-04-17T07:41:13", "upload_time_iso_8601": "2020-04-17T07:41:13.653758Z", "url": "https://files.pythonhosted.org/packages/d4/ef/8e490d86f5519aafd04eb30eb7c35624ccf2e6ed0ff01bf2b62c28e4c033/gen_browser_header-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "df9af7d37cd455e477a6af03d18acdbf", "sha256": "7b1adb9fcdcc3cc84a94df5e776ff73d904a9a4c046fd8e6ce0578d368370e6d"}, "downloads": -1, "filename": "gen_browser_header-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "df9af7d37cd455e477a6af03d18acdbf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16483, "upload_time": "2020-04-25T14:25:20", "upload_time_iso_8601": "2020-04-25T14:25:20.257718Z", "url": "https://files.pythonhosted.org/packages/3e/27/da8c774462322350bfb763505fecd640e2466dfae8f6a9f496fe883914aa/gen_browser_header-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f60b9ad23ed802ca8d9e9f669c11fbf2", "sha256": "5a8603880e658c5092de326b334aab0b92dc5383438323727ae04bf58e2ab70c"}, "downloads": -1, "filename": "gen_browser_header-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f60b9ad23ed802ca8d9e9f669c11fbf2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13676, "upload_time": "2020-04-25T14:25:23", "upload_time_iso_8601": "2020-04-25T14:25:23.418692Z", "url": "https://files.pythonhosted.org/packages/8b/e8/469f8df6b81f00d3da5204ec86e816c970d4420971485d7328eb43618ec3/gen_browser_header-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "bcb05e30a2f08ebc1683a81b0d185baf", "sha256": "e2491cca7a5c8e00f830b5cb6371d55d4718db39d22106e945b301f6a224dba6"}, "downloads": -1, "filename": "gen_browser_header-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bcb05e30a2f08ebc1683a81b0d185baf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16157, "upload_time": "2020-04-27T07:36:45", "upload_time_iso_8601": "2020-04-27T07:36:45.623347Z", "url": "https://files.pythonhosted.org/packages/e1/ae/588b7c9f0738fa571064ec8641e4cf578d38a125e31d7e92c5741b4c52f8/gen_browser_header-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cda85a9e59801d882a770d090823bba", "sha256": "2f90c7b2aaabd959bc892ca23bb3697d7dafba6017c71aeb2b33603a5513bed4"}, "downloads": -1, "filename": "gen_browser_header-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0cda85a9e59801d882a770d090823bba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13283, "upload_time": "2020-04-27T07:36:47", "upload_time_iso_8601": "2020-04-27T07:36:47.060736Z", "url": "https://files.pythonhosted.org/packages/46/07/cb96267599b469832d7fac2da12586b0afead262cd225be61f141a41736f/gen_browser_header-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c103ab966cc5b2a959b23a315de4dc3f", "sha256": "0b9239b03c4cc0076eae5ee9a0e4d6ce757a49d4f234ecfd32001ceb127e2b3e"}, "downloads": -1, "filename": "gen_browser_header-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c103ab966cc5b2a959b23a315de4dc3f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16183, "upload_time": "2020-04-27T08:53:14", "upload_time_iso_8601": "2020-04-27T08:53:14.165409Z", "url": "https://files.pythonhosted.org/packages/e5/8c/7ac5f8529f64578411e5d99a977963938ea38560032dcf7d39c662bdeed1/gen_browser_header-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43f3792e6c17c18e82d037186ec2e719", "sha256": "28a0a7d6016396bd2b223ab8e577c81dbc9a0802d96be362df122bd5a4172167"}, "downloads": -1, "filename": "gen_browser_header-0.1.2.tar.gz", "has_sig": false, "md5_digest": "43f3792e6c17c18e82d037186ec2e719", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13294, "upload_time": "2020-04-27T08:53:15", "upload_time_iso_8601": "2020-04-27T08:53:15.418533Z", "url": "https://files.pythonhosted.org/packages/1a/2b/2a5881f20ffc03fabb32d03f0c0c092ee7927e902fb0215d4e87f9388f82/gen_browser_header-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "6655b3cada8eee80a3f52d2755c4c190", "sha256": "58f9d07a4f1f10e0c49742274c7bb52fbb8e1372ee97567f7aa11e487a98a3de"}, "downloads": -1, "filename": "gen_browser_header-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6655b3cada8eee80a3f52d2755c4c190", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16508, "upload_time": "2020-04-28T05:41:48", "upload_time_iso_8601": "2020-04-28T05:41:48.200776Z", "url": "https://files.pythonhosted.org/packages/97/09/1c816587657d3a268f715cd0bf836094f7cbd17cf58774afab3860e5774f/gen_browser_header-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ddb3792b0094b8e2b934d243e7778567", "sha256": "1756d09dde1b838ed9b32893f319f0c20943872318efd6c236de01b510d55228"}, "downloads": -1, "filename": "gen_browser_header-0.1.3.tar.gz", "has_sig": false, "md5_digest": "ddb3792b0094b8e2b934d243e7778567", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13698, "upload_time": "2020-04-28T05:41:49", "upload_time_iso_8601": "2020-04-28T05:41:49.363295Z", "url": "https://files.pythonhosted.org/packages/d6/84/64725baebfb587e90c5819b77ff52d218db9107c093fe4a428be8c879843/gen_browser_header-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6655b3cada8eee80a3f52d2755c4c190", "sha256": "58f9d07a4f1f10e0c49742274c7bb52fbb8e1372ee97567f7aa11e487a98a3de"}, "downloads": -1, "filename": "gen_browser_header-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6655b3cada8eee80a3f52d2755c4c190", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16508, "upload_time": "2020-04-28T05:41:48", "upload_time_iso_8601": "2020-04-28T05:41:48.200776Z", "url": "https://files.pythonhosted.org/packages/97/09/1c816587657d3a268f715cd0bf836094f7cbd17cf58774afab3860e5774f/gen_browser_header-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ddb3792b0094b8e2b934d243e7778567", "sha256": "1756d09dde1b838ed9b32893f319f0c20943872318efd6c236de01b510d55228"}, "downloads": -1, "filename": "gen_browser_header-0.1.3.tar.gz", "has_sig": false, "md5_digest": "ddb3792b0094b8e2b934d243e7778567", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13698, "upload_time": "2020-04-28T05:41:49", "upload_time_iso_8601": "2020-04-28T05:41:49.363295Z", "url": "https://files.pythonhosted.org/packages/d6/84/64725baebfb587e90c5819b77ff52d218db9107c093fe4a428be8c879843/gen_browser_header-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:29 2020"}