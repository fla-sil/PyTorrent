{"info": {"author": "manan", "author_email": "manan.yadav02@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Operating System :: Unix", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Utilities"], "description": "# wordpy ![License](https://img.shields.io/pypi/l/wordpy.svg?style=flat) ![Version](https://img.shields.io/pypi/v/wordpy.svg?style=flat)\nA dictionary program for nix* terminals\n\n## Installation\n\nSimply use pip to install the latest stable version - \n\n```sh\n$ pip install wordpy\n```\n\nTo get the bleeding edge version - \n\n```sh\npip install git+https://github.com/mentix02/wordpy.git\n```\n\n### Requirements\n\nwordpy is available for all Unix and Unix-like operating systems. It supports Python 3.6 and above.\n\n## Usage\n\n### Getting API keys\n\nThis package wouldn't be possible without the existence of [Oxford Dictionaries](https://developer.oxforddictionaries.com). However, service hosting is costly and they must make some money themselves so they only let a simple, developer option for their prolix API. Register for it [here](https://developer.oxforddictionaries.com/signup?plan_ids[]=2357355869422). \n\nWhen you first use wordpy, you'll recieve a prompt to enter your recently acquired credentials and store it for future usage. Don't worry, everything remains on your local system.\n\nThe program is extremely simple - you literally just get the definition of a word in your terminal. Or the synonyms, antonyms or even the origin i.e. etymology of the word if you're feeling adventurous.\n\n### Flags\n\n|       Flag      |       Usage       |\n|:---------------:|:-----------------:|\n|  -s, --synonyms |  display synonyms |\n|  -a, --antonyms |  display antonyms |\n| -e, --etymology |   show etymology  |\n|  -v, --version  |  display version  |\n|    -h, --help   | show help message |\n\n### Commands\n\n```sh\n$ wordpy <word>\n```\n\nTo get synonyms - \n\n```sh\n$ wordpy -s <word>\n```\n\nAntonyms can be derived by - \n\n```sh\n$ wordpy -a <word>\n```\n\nAnd finally, etymology - \n\n```sh\n$ wordpy -e <word>\n```\n\nThese flags can be combined to get whatever the user asks for. For example to get the definition, antonyms and the etymology, you can use - \n\n```sh\n$ wordpy -ae <word>\n```\n\n### Examples\n\n```sh\n$ wordpy apple\n[s] Apple (noun)\nThe round fruit of a tree of the rose family, which typically has thin green or red skin and crisp flesh.\n```\n\n```sh\n$ wordpy -s car # synonyms\n[s] Car (noun)\nA road vehicle, typically with four wheels, powered by an internal combustion engine and able to carry a small number of people\n[s] Synonyms\nauto, automobile, bus, convertible, jeep, limousine, machine, motor, pickup, ride, station wagon, truck, van, wagon, bucket, buggy, compact, conveyance, coupe, hardtop, hatchback, heap, jalopy, junker, motorcar, roadster, sedan, subcompact, wheels, wreck, clunker, gas guzzler, touring car\n```\n\n```sh\n$ wordpy -as happy # antonyms and synonyms\n[s] Happy (adjective)\nFeeling or showing pleasure or contentment\n[s] Synonyms\ncheerful, contented, delighted, ecstatic, elated, glad, joyful, joyous, jubilant, lively, merry, overjoyed, peaceful, pleasant, pleased, thrilled, upbeat, blessed, blest, blissful, blithe, can't complain, captivated, chipper, chirpy, content, convivial, exultant, flying high, gay, gleeful, gratified, intoxicated, jolly, laughing, light, looking good, mirthful, on cloud nine, peppy, perky, playful, sparkling, sunny, tickled, tickled pink, up, walking on air\n[s] Antonyms\ndepressed, disappointed, disturbed, down, grave, melancholy, miserable, sad, serious, sorrowful, troubled, unfriendly, unhappy, upset, discouraged, dissatisfied, forsaken, hopeless, morose, pained, unfortunate, unlucky\n```\n\n```sh\n$ wordpy -e computer\n[s] Computer (noun)\nAn electronic device for storing and processing data, typically in binary form, according to instructions given to it in a variable program.\n[s] Etymology\n1640s, \"one who calculates,\" agent noun from compute (v.). Meaning \"calculating machine\" (of any type) is from 1897; in modern use, \"programmable digital electronic computer\" (1945 under this name; theoretical from 1937, as Turing machine). ENIAC (1946) usually is considered the first. Computer literacy is recorded from 1970; an attempt to establish computerate (adjective, on model of literate) in this sense in the early 1980s didn't catch on. Computerese \"the jargon of programmers\" is from 1960, as are computerize and computerization.\n```\n\n## Development\n\n### Contributing\n\nMake an issue if you stumble upon a bug. Any ideas or features you'd like to be added, once again, make an issue out of. \n\nTo do something more simulating like writing code, just clone this repo, get it on your local system, make a branch, push it back to your master and finally, make a pull request.\n\nI follow PEP-8 so you have to follow it too. Don't see why that's not already baked into the syntax.\n\n### Testing\n\nTo run tests, simply install nose - \n\n```sh\n$ pip install nose\n$ python setup.py test\n```\n\nor run `nosetests` for a cleaner output - \n\n```sh\n$ nosetests\n```\n\nI've never been a big fan of testing... let me rephrase, I've never been a big fan of writing tests myself but there's a handful of them in `tests/` that should succeed before you even think about committing. \n\nAny new feature should come with its own `test_<name_of_feature>.py` file in the said `tests/` directory and should be verbose with at least two cases.\n\n### Features To Add\n\n- [x] Basic usage\n- [x] Testing\n- [ ] Optimization\n- [ ] Documentation (?)\n- [ ] Even more features\n- - [x] antonyms\n- - [x] etymologies\n- - [ ] different definitions\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mentix02/wordpy", "keywords": "wordpy dictionary api termdict", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "wordpy", "package_url": "https://pypi.org/project/wordpy/", "platform": "", "project_url": "https://pypi.org/project/wordpy/", "project_urls": {"Homepage": "https://github.com/mentix02/wordpy"}, "release_url": "https://pypi.org/project/wordpy/1.1.4/", "requires_dist": ["requests (==2.21.0)", "thesaurus (==0.2.3)", "termcolor (==1.1.0)"], "requires_python": "", "summary": "A dictionary program for nix* terminals", "version": "1.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>wordpy <img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/316827cb74f7b312b3ccf58e6b15fcc1351f881f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f776f726470792e7376673f7374796c653d666c6174\"> <img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f544f69a6db2df0e90d26c2eb01885ef0e530c6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f776f726470792e7376673f7374796c653d666c6174\"></h1>\n<p>A dictionary program for nix* terminals</p>\n<h2>Installation</h2>\n<p>Simply use pip to install the latest stable version -</p>\n<pre>$ pip install wordpy\n</pre>\n<p>To get the bleeding edge version -</p>\n<pre>pip install git+https://github.com/mentix02/wordpy.git\n</pre>\n<h3>Requirements</h3>\n<p>wordpy is available for all Unix and Unix-like operating systems. It supports Python 3.6 and above.</p>\n<h2>Usage</h2>\n<h3>Getting API keys</h3>\n<p>This package wouldn't be possible without the existence of <a href=\"https://developer.oxforddictionaries.com\" rel=\"nofollow\">Oxford Dictionaries</a>. However, service hosting is costly and they must make some money themselves so they only let a simple, developer option for their prolix API. Register for it <a href=\"https://developer.oxforddictionaries.com/signup?plan_ids%5B%5D=2357355869422\" rel=\"nofollow\">here</a>.</p>\n<p>When you first use wordpy, you'll recieve a prompt to enter your recently acquired credentials and store it for future usage. Don't worry, everything remains on your local system.</p>\n<p>The program is extremely simple - you literally just get the definition of a word in your terminal. Or the synonyms, antonyms or even the origin i.e. etymology of the word if you're feeling adventurous.</p>\n<h3>Flags</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Flag</th>\n<th align=\"center\">Usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">-s, --synonyms</td>\n<td align=\"center\">display synonyms</td>\n</tr>\n<tr>\n<td align=\"center\">-a, --antonyms</td>\n<td align=\"center\">display antonyms</td>\n</tr>\n<tr>\n<td align=\"center\">-e, --etymology</td>\n<td align=\"center\">show etymology</td>\n</tr>\n<tr>\n<td align=\"center\">-v, --version</td>\n<td align=\"center\">display version</td>\n</tr>\n<tr>\n<td align=\"center\">-h, --help</td>\n<td align=\"center\">show help message</td>\n</tr></tbody></table>\n<h3>Commands</h3>\n<pre>$ wordpy &lt;word&gt;\n</pre>\n<p>To get synonyms -</p>\n<pre>$ wordpy -s &lt;word&gt;\n</pre>\n<p>Antonyms can be derived by -</p>\n<pre>$ wordpy -a &lt;word&gt;\n</pre>\n<p>And finally, etymology -</p>\n<pre>$ wordpy -e &lt;word&gt;\n</pre>\n<p>These flags can be combined to get whatever the user asks for. For example to get the definition, antonyms and the etymology, you can use -</p>\n<pre>$ wordpy -ae &lt;word&gt;\n</pre>\n<h3>Examples</h3>\n<pre>$ wordpy apple\n<span class=\"o\">[</span>s<span class=\"o\">]</span> Apple <span class=\"o\">(</span>noun<span class=\"o\">)</span>\nThe round fruit of a tree of the rose family, which typically has thin green or red skin and crisp flesh.\n</pre>\n<pre>$ wordpy -s car <span class=\"c1\"># synonyms</span>\n<span class=\"o\">[</span>s<span class=\"o\">]</span> Car <span class=\"o\">(</span>noun<span class=\"o\">)</span>\nA road vehicle, typically with four wheels, powered by an internal combustion engine and able to carry a small number of people\n<span class=\"o\">[</span>s<span class=\"o\">]</span> Synonyms\nauto, automobile, bus, convertible, jeep, limousine, machine, motor, pickup, ride, station wagon, truck, van, wagon, bucket, buggy, compact, conveyance, coupe, hardtop, hatchback, heap, jalopy, junker, motorcar, roadster, sedan, subcompact, wheels, wreck, clunker, gas guzzler, touring car\n</pre>\n<pre>$ wordpy -as happy <span class=\"c1\"># antonyms and synonyms</span>\n<span class=\"o\">[</span>s<span class=\"o\">]</span> Happy <span class=\"o\">(</span>adjective<span class=\"o\">)</span>\nFeeling or showing pleasure or contentment\n<span class=\"o\">[</span>s<span class=\"o\">]</span> Synonyms\ncheerful, contented, delighted, ecstatic, elated, glad, joyful, joyous, jubilant, lively, merry, overjoyed, peaceful, pleasant, pleased, thrilled, upbeat, blessed, blest, blissful, blithe, can<span class=\"err\">'</span>t complain, captivated, chipper, chirpy, content, convivial, exultant, flying high, gay, gleeful, gratified, intoxicated, jolly, laughing, light, looking good, mirthful, on cloud nine, peppy, perky, playful, sparkling, sunny, tickled, tickled pink, up, walking on air\n<span class=\"o\">[</span>s<span class=\"o\">]</span> Antonyms\ndepressed, disappointed, disturbed, down, grave, melancholy, miserable, sad, serious, sorrowful, troubled, unfriendly, unhappy, upset, discouraged, dissatisfied, forsaken, hopeless, morose, pained, unfortunate, unlucky\n</pre>\n<pre>$ wordpy -e computer\n<span class=\"o\">[</span>s<span class=\"o\">]</span> Computer <span class=\"o\">(</span>noun<span class=\"o\">)</span>\nAn electronic device <span class=\"k\">for</span> storing and processing data, typically in binary form, according to instructions given to it in a variable program.\n<span class=\"o\">[</span>s<span class=\"o\">]</span> Etymology\n1640s, <span class=\"s2\">\"one who calculates,\"</span> agent noun from compute <span class=\"o\">(</span>v.<span class=\"o\">)</span>. Meaning <span class=\"s2\">\"calculating machine\"</span> <span class=\"o\">(</span>of any <span class=\"nb\">type</span><span class=\"o\">)</span> is from <span class=\"m\">1897</span><span class=\"p\">;</span> in modern use, <span class=\"s2\">\"programmable digital electronic computer\"</span> <span class=\"o\">(</span><span class=\"m\">1945</span> under this name<span class=\"p\">;</span> theoretical from <span class=\"m\">1937</span>, as Turing machine<span class=\"o\">)</span>. ENIAC <span class=\"o\">(</span><span class=\"m\">1946</span><span class=\"o\">)</span> usually is considered the first. Computer literacy is recorded from <span class=\"m\">1970</span><span class=\"p\">;</span> an attempt to establish computerate <span class=\"o\">(</span>adjective, on model of literate<span class=\"o\">)</span> in this sense in the early 1980s didn<span class=\"err\">'</span>t catch on. Computerese <span class=\"s2\">\"the jargon of programmers\"</span> is from <span class=\"m\">1960</span>, as are computerize and computerization.\n</pre>\n<h2>Development</h2>\n<h3>Contributing</h3>\n<p>Make an issue if you stumble upon a bug. Any ideas or features you'd like to be added, once again, make an issue out of.</p>\n<p>To do something more simulating like writing code, just clone this repo, get it on your local system, make a branch, push it back to your master and finally, make a pull request.</p>\n<p>I follow PEP-8 so you have to follow it too. Don't see why that's not already baked into the syntax.</p>\n<h3>Testing</h3>\n<p>To run tests, simply install nose -</p>\n<pre>$ pip install nose\n$ python setup.py <span class=\"nb\">test</span>\n</pre>\n<p>or run <code>nosetests</code> for a cleaner output -</p>\n<pre>$ nosetests\n</pre>\n<p>I've never been a big fan of testing... let me rephrase, I've never been a big fan of writing tests myself but there's a handful of them in <code>tests/</code> that should succeed before you even think about committing.</p>\n<p>Any new feature should come with its own <code>test_&lt;name_of_feature&gt;.py</code> file in the said <code>tests/</code> directory and should be verbose with at least two cases.</p>\n<h3>Features To Add</h3>\n<ul>\n<li>[x] Basic usage</li>\n<li>[x] Testing</li>\n<li>[ ] Optimization</li>\n<li>[ ] Documentation (?)</li>\n<li>[ ] Even more features</li>\n<li>\n<ul>\n<li>[x] antonyms</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>[x] etymologies</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>[ ] different definitions</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 4819206, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "357b58687a8abe3601462da6a908d3e2", "sha256": "66bdb65a8f9168ea494dabfbcb00c439ccae39c985df25ffba32fc2f061e0d32"}, "downloads": -1, "filename": "wordpy-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "357b58687a8abe3601462da6a908d3e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6285, "upload_time": "2019-02-03T14:15:13", "upload_time_iso_8601": "2019-02-03T14:15:13.336023Z", "url": "https://files.pythonhosted.org/packages/ef/5d/5a0d4b021c81de1da4644d6839cffe2d9642521ee24caa9af424c04b7826/wordpy-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "adaf4775c84142553a815565c84bf9ad", "sha256": "573dd690e7780f51fbb8978cca23a07bd9894db6d8cb060c3c73d719b3efecdc"}, "downloads": -1, "filename": "wordpy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "adaf4775c84142553a815565c84bf9ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4257, "upload_time": "2019-02-03T14:15:16", "upload_time_iso_8601": "2019-02-03T14:15:16.318563Z", "url": "https://files.pythonhosted.org/packages/6a/76/958d2345386bb1660cd046a9dd96970d844b7938ad5d759bf62a0840af81/wordpy-1.0.0.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "5b7ba039ac150469195a9bca4852b900", "sha256": "013c1e494259b5c8d09336aa06d83dc761e65a9d42e7fbb1a9f78b15c5242bde"}, "downloads": -1, "filename": "wordpy-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5b7ba039ac150469195a9bca4852b900", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6328, "upload_time": "2019-02-03T14:25:07", "upload_time_iso_8601": "2019-02-03T14:25:07.781349Z", "url": "https://files.pythonhosted.org/packages/0d/9f/64feec724b09bbb999a27a2b12e172a4ee2d6f604884cf84c21a07ed48cd/wordpy-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc1c548596aa79f9f43b2f3fe2125ff2", "sha256": "5e5d1eef8eda3de8d23187b980daf66be91d45eb14b58dd0bc341826469f967b"}, "downloads": -1, "filename": "wordpy-1.0.2.tar.gz", "has_sig": false, "md5_digest": "fc1c548596aa79f9f43b2f3fe2125ff2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4320, "upload_time": "2019-02-03T14:25:08", "upload_time_iso_8601": "2019-02-03T14:25:08.943374Z", "url": "https://files.pythonhosted.org/packages/d6/11/54e66f477af9332f27be27bb5be9758a2fc3112d5960b1e17a9ab66f8aac/wordpy-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "e296d10b3aece25c32bdde1eeab9751f", "sha256": "81784550895903e4dbfa37e302c3b84e265d69f6d719c61e06210f3984ed32b1"}, "downloads": -1, "filename": "wordpy-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e296d10b3aece25c32bdde1eeab9751f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7182, "upload_time": "2019-02-04T01:42:07", "upload_time_iso_8601": "2019-02-04T01:42:07.047638Z", "url": "https://files.pythonhosted.org/packages/0b/9d/6a10e67c7496f8845a263755751508648dfd44ea8a8bb9234bf41e1433bf/wordpy-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "011555b342fcd2401692acaf13412c31", "sha256": "0c4542aaf6c294b1305ce922fc976168826e3a0db231e62d69247dcd896a0a79"}, "downloads": -1, "filename": "wordpy-1.1.0.tar.gz", "has_sig": false, "md5_digest": "011555b342fcd2401692acaf13412c31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5325, "upload_time": "2019-02-04T01:42:08", "upload_time_iso_8601": "2019-02-04T01:42:08.343438Z", "url": "https://files.pythonhosted.org/packages/4f/51/a028c2a1fcaf89f16b73473aec025872f9cad3346eb8535eef23cb31a0c2/wordpy-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "8ca4cb7c5656c7bdadf9adbdad4e1453", "sha256": "9098c95bf00e57a97efac92c43fbbf3740c0de4d7812482ae15831f0202ad383"}, "downloads": -1, "filename": "wordpy-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8ca4cb7c5656c7bdadf9adbdad4e1453", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9199, "upload_time": "2019-02-05T16:12:13", "upload_time_iso_8601": "2019-02-05T16:12:13.371181Z", "url": "https://files.pythonhosted.org/packages/97/3f/ba80c72d7aebea8e399d5b086440981940c98328508a128759be5991b639/wordpy-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9936e11be5286e02c218fe5bb62d851d", "sha256": "a8603a270565901864d6081bc474777e2911b3fe22b597e26d81af971653ef51"}, "downloads": -1, "filename": "wordpy-1.1.1.tar.gz", "has_sig": false, "md5_digest": "9936e11be5286e02c218fe5bb62d851d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6251, "upload_time": "2019-02-05T16:12:17", "upload_time_iso_8601": "2019-02-05T16:12:17.052223Z", "url": "https://files.pythonhosted.org/packages/22/55/b69fdde12ad8ef94a9dd1b9a0c9724952dabfa4df369b6895b9d5e00dca7/wordpy-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "e6565f622ced61dee73ba942e8aff99d", "sha256": "ffbbb0b6288b4902c536f466bd63e77fd6fca5e10044aabb851ff37b225ec56d"}, "downloads": -1, "filename": "wordpy-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e6565f622ced61dee73ba942e8aff99d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10294, "upload_time": "2019-02-07T16:08:38", "upload_time_iso_8601": "2019-02-07T16:08:38.488067Z", "url": "https://files.pythonhosted.org/packages/fb/d4/e217cb98eb8686d1d3ba145342cc9231bb680fdd27d74e30a58aa2e0f979/wordpy-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "431ad705ecb5408f4b7fc36ae058f80d", "sha256": "4d7b769e7128cba23a672324d45416483bb15250e35799713a9012e81a955785"}, "downloads": -1, "filename": "wordpy-1.1.2.tar.gz", "has_sig": false, "md5_digest": "431ad705ecb5408f4b7fc36ae058f80d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7493, "upload_time": "2019-02-07T16:08:39", "upload_time_iso_8601": "2019-02-07T16:08:39.972956Z", "url": "https://files.pythonhosted.org/packages/1a/bf/c2fabb891865755bbd6c2bb9726e4c5b4768f2cd613c9cf8e1373a9132d6/wordpy-1.1.2.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "f3dbb768cb990a653ca054ec83a93ae1", "sha256": "e4181300197399315201c3296308178fffc60fc1211eba52680311c3af05ffd1"}, "downloads": -1, "filename": "wordpy-1.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f3dbb768cb990a653ca054ec83a93ae1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11176, "upload_time": "2019-02-14T07:27:30", "upload_time_iso_8601": "2019-02-14T07:27:30.029782Z", "url": "https://files.pythonhosted.org/packages/9d/71/4137e534aa18bc52eff46cba41b7d34c71a05ab87b18342725f6028e378e/wordpy-1.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3155f26df45e11af2211a77d26d6a01a", "sha256": "f627998274d593d796c3a02cc0044244d0ebafad4ed1727dce4676f0485e4f4c"}, "downloads": -1, "filename": "wordpy-1.1.4.tar.gz", "has_sig": false, "md5_digest": "3155f26df45e11af2211a77d26d6a01a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8205, "upload_time": "2019-02-14T07:27:32", "upload_time_iso_8601": "2019-02-14T07:27:32.172129Z", "url": "https://files.pythonhosted.org/packages/87/6f/a88523e63f25be062b7f4f0981b40ad3a11c1b6bd26bf3ad117f449b7d59/wordpy-1.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f3dbb768cb990a653ca054ec83a93ae1", "sha256": "e4181300197399315201c3296308178fffc60fc1211eba52680311c3af05ffd1"}, "downloads": -1, "filename": "wordpy-1.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f3dbb768cb990a653ca054ec83a93ae1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11176, "upload_time": "2019-02-14T07:27:30", "upload_time_iso_8601": "2019-02-14T07:27:30.029782Z", "url": "https://files.pythonhosted.org/packages/9d/71/4137e534aa18bc52eff46cba41b7d34c71a05ab87b18342725f6028e378e/wordpy-1.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3155f26df45e11af2211a77d26d6a01a", "sha256": "f627998274d593d796c3a02cc0044244d0ebafad4ed1727dce4676f0485e4f4c"}, "downloads": -1, "filename": "wordpy-1.1.4.tar.gz", "has_sig": false, "md5_digest": "3155f26df45e11af2211a77d26d6a01a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8205, "upload_time": "2019-02-14T07:27:32", "upload_time_iso_8601": "2019-02-14T07:27:32.172129Z", "url": "https://files.pythonhosted.org/packages/87/6f/a88523e63f25be062b7f4f0981b40ad3a11c1b6bd26bf3ad117f449b7d59/wordpy-1.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:59 2020"}