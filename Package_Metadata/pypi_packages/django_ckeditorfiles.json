{"info": {"author": "Espen Angell Kristiansen", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "CKEditor bundled as a Django app.\n\n\nInstall\n=======\n\n::\n\n    $ pip install django_ckeditorfiles\n\n\nSetup\n=====\n\nAdd ``'ckeditorfiles'`` and ``'django.contrib.staticfiles'`` to\n``INSTALLED_APPS``.\n\n\nVerify install\n==============\nStart the Django development server (runserver), and open\nhttp://localhost:8000/static/ckeditorfiles/samples/index.html. You should get\nthe CKEditor examples page.\n\n\nCKEditor version\n================\nSee ``static/ckeditorfiles/CHANGES.md``.\n\n\n.. _ckeditorjs:\n\nckeditor.js\n===========\n\nThe entire source code of CKEditor is in ``static/ckeditorfiles/``. This means\nthat you can include the sources in your templates using::\n\n    {% load staticfiles %}\n\n    <script type=\"text/javascript\"\n        src=\"{% static \"ckeditorfiles/ckeditor.js\" %}\"></script>\n\n(you do not need to do this if you use the CKEditorWidget)\n\n\nckeditorfiles.widgets.CKEditorWidget\n====================================\n\nCKEditorWidget is a subclass of ``django.forms.widgets.Textarea``. It\nautomatically includes ``ckeditor.js``, and adds::\n\n    <script type=\"text/javascript\">\n        CKEDITOR.replace(id, config);\n    </script>\n\nafter the textarea. ``id`` is the id of the textarea, and ``config`` is\nthe ``config`` parameter to the constructor of the widget, encoded as JSON.\n\n\nExample\n-------\n\nIn your ``forms.py`` or wherever you define your forms:: \n\n    from django import forms\n    from ckeditorfiles.widgets import CKEditorWidget\n\n    class PageForm(forms.Form):\n        body = forms.CharField(widget=CKEditorWidget())\n\n\nIn the template rendering the form (we assume you name your form ``form`` in the template context)::\n\n    {{ form.media }}\n    {{ form.as_p }}\n\nNOTE: ``form.as_p`` is just an example. The widget also works with\ndjango-crispy-forms, and ``form.as_ul``. The important part is ``form.media``,\nbecause the ckeditor javascript will not be loaded without it. Alternatively, you can\nadd ckeditor.js manually (see: ckeditorjs_).\n\n\nThe config parameter to ``CKEditorWidget`` is the config parameter for\n``CKEDITOR.replace(...)``. See:\nhttp://docs.ckeditor.com/#!/api/CKEDITOR-method-replace.\n\n\n\nConfiguration examples\n----------------------\n\nSimple toolbar with bold, italic and show source (with show source in its own box)::\n\n    from django import forms\n    from ckeditorfiles.widgets import CKEditorWidget\n\n    class PageForm(forms.Form):\n        body = forms.CharField(\n            widget=CKEditorWidget(config={\n                'toolbar': [{\n                    'name': 'basic',\n                    'items': [ 'Bold', 'Italic']\n                }, {\n                    'name': 'source',\n                    'items': [ 'Source']\n                }]\n            })\n        )\n\n\nA more complex toolbar, suitable to simple editors, like comments::\n\n    from django import forms\n    from ckeditorfiles.widgets import CKEditorWidget\n\n    class PageForm(forms.Form):\n        body = forms.CharField(\n            widget=CKEditorWidget(config={\n                #'contentsCss': settings.STATIC_URL + 'my_theme/ckeditor.css', # CSS for the body (see static/ckeditorfiles/contents.css for the default)\n                'format_tags': 'p;h4', # Only \"normal\" and \"h4\" to avoid large headings in the comments\n                'toolbar': [{\n                    'name': 'format',\n                    'items': ['Format']\n                }, {\n                    'name': 'basic',\n                    'items': ['Bold', 'Italic', '-', 'RemoveFormat']\n                }, {\n                    'name': 'links',\n                    'items': ['Link', 'Unlink']\n                }, {\n                    'name': 'listandindent',\n                    'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote']\n                }, {\n                    'name': 'paste',\n                    'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']\n                }, {\n                    'name': 'tools',\n                    'items': ['Maximize']\n                }]\n            })\n        )\n\n\nThe full default toolbar (good as a source of button-names for your own config)::\n\n    class PageForm(forms.Form):\n        body = forms.CharField(\n            widget=CKEditorWidget(config={\n                'toolbar': [\n                    {\n                        'name': 'document',\n                        'groups': [ 'mode', 'document', 'doctools' ],\n                        'items': [ 'Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates' ]\n                    },\n                    {\n                        'name': 'clipboard',\n                        'groups': [ 'clipboard', 'undo' ],\n                        'items': [ 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo' ]\n                    },\n                    {\n                        'name': 'editing',\n                        'groups': [ 'find', 'selection', 'spellchecker' ],\n                        'items': [ 'Find', 'Replace', '-', 'SelectAll' ]\n                    },\n                    {\n                        'name': 'forms',\n                        'items': [ 'Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton', 'HiddenField' ]\n                    },\n                    '/', # Linebreak\n                    {\n                        'name': 'basicstyles',\n                        'groups': [ 'basicstyles', 'cleanup' ],\n                        'items': [ 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat' ]\n                    },\n                    {\n                        'name': 'paragraph',\n                        'groups': [ 'list', 'indent', 'blocks', 'align', 'bidi' ],\n                        'items': [ 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl' ]\n                    },\n                    {\n                        'name': 'links',\n                        'items': [ 'Link', 'Unlink', 'Anchor' ]\n                    },\n                    {\n                        'name': 'insert',\n                        'items': [ 'Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe' ]\n                    },\n                    '/', # Linebreak\n                    {\n                        'name': 'styles',\n                        'items': [ 'Styles', 'Format', 'Font', 'FontSize' ]\n                    },\n                    {\n                        'name': 'colors',\n                        'items': [ 'TextColor', 'BGColor' ]\n                    },\n                    {\n                        'name': 'tools',\n                        'items': [ 'Maximize', 'ShowBlocks' ]\n                    },\n                    {\n                        'name': 'others',\n                        'items': [ '-' ]\n                    },\n                    {\n                        'name': 'about',\n                        'items': [ 'About' ]\n                    }\n                ],\n                'toolbarGroups': [\n                        {'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ]},\n                        {'name': 'clipboard', 'groups': [ 'clipboard', 'undo' ]},\n                        {'name': 'editing', 'groups': [ 'find', 'selection', 'spellchecker' ]},\n                        {'name': 'forms'},\n                        '/',\n                        {'name': 'basicstyles', 'groups': [ 'basicstyles', 'cleanup' ]},\n                        {'name': 'paragraph', 'groups': [ 'list', 'indent', 'blocks', 'align', 'bidi' ]},\n                        {'name': 'links'},\n                        {'name': 'insert'},\n                        '/',\n                        {'name': 'styles'},\n                        {'name': 'colors'},\n                        {'name': 'tools'},\n                        {'name': 'others'},\n                        {'name': 'about'}\n                ]\n            })\n        )\n\n\n\nSubclass CKEditorWidget\n-----------------------\n\nYou can create your own CKEditor configurations as re-usable classes by\nsubclassing CKEditorWidget and provide defaults in the ``default_config`` class\nattribute::\n\n    from ckeditorfiles.widgets import CKEditorWidget\n\n    class MyCKEditorWidget(CKEditorWidget):\n        default_config = {'toolbar': 'Basic',\n                          'height': '300px'}\n\nThe ``default_config`` class attribute provides defaults that can be overridden\nwith ``config`` parameter for __init__, so you could\noverride the height-config of ``MyCKEditorWidget`` like this::\n\n    widget = MyCKEditorWidget(config={'height': '100px'})\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/espenak/django_ckeditorfiles", "keywords": null, "license": "LGPL", "maintainer": null, "maintainer_email": null, "name": "django_ckeditorfiles", "package_url": "https://pypi.org/project/django_ckeditorfiles/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django_ckeditorfiles/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/espenak/django_ckeditorfiles"}, "release_url": "https://pypi.org/project/django_ckeditorfiles/1.3/", "requires_dist": null, "requires_python": null, "summary": "CKEditor bundled as a django staticfiles app.", "version": "1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>CKEditor bundled as a Django app.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install django_ckeditorfiles\n</pre>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Add <tt>'ckeditorfiles'</tt> and <tt>'django.contrib.staticfiles'</tt> to\n<tt>INSTALLED_APPS</tt>.</p>\n</div>\n<div id=\"verify-install\">\n<h2>Verify install</h2>\n<p>Start the Django development server (runserver), and open\n<a href=\"http://localhost:8000/static/ckeditorfiles/samples/index.html\" rel=\"nofollow\">http://localhost:8000/static/ckeditorfiles/samples/index.html</a>. You should get\nthe CKEditor examples page.</p>\n</div>\n<div id=\"ckeditor-version\">\n<h2>CKEditor version</h2>\n<p>See <tt>static/ckeditorfiles/CHANGES.md</tt>.</p>\n</div>\n<div id=\"ckeditor-js\">\n<span id=\"ckeditorjs\"></span><h2>ckeditor.js</h2>\n<p>The entire source code of CKEditor is in <tt>static/ckeditorfiles/</tt>. This means\nthat you can include the sources in your templates using:</p>\n<pre>{% load staticfiles %}\n\n&lt;script type=\"text/javascript\"\n    src=\"{% static \"ckeditorfiles/ckeditor.js\" %}\"&gt;&lt;/script&gt;\n</pre>\n<p>(you do not need to do this if you use the CKEditorWidget)</p>\n</div>\n<div id=\"ckeditorfiles-widgets-ckeditorwidget\">\n<h2>ckeditorfiles.widgets.CKEditorWidget</h2>\n<p>CKEditorWidget is a subclass of <tt>django.forms.widgets.Textarea</tt>. It\nautomatically includes <tt>ckeditor.js</tt>, and adds:</p>\n<pre>&lt;script type=\"text/javascript\"&gt;\n    CKEDITOR.replace(id, config);\n&lt;/script&gt;\n</pre>\n<p>after the textarea. <tt>id</tt> is the id of the textarea, and <tt>config</tt> is\nthe <tt>config</tt> parameter to the constructor of the widget, encoded as JSON.</p>\n<div id=\"example\">\n<h3>Example</h3>\n<p>In your <tt>forms.py</tt> or wherever you define your forms:</p>\n<pre>from django import forms\nfrom ckeditorfiles.widgets import CKEditorWidget\n\nclass PageForm(forms.Form):\n    body = forms.CharField(widget=CKEditorWidget())\n</pre>\n<p>In the template rendering the form (we assume you name your form <tt>form</tt> in the template context):</p>\n<pre>{{ form.media }}\n{{ form.as_p }}\n</pre>\n<p>NOTE: <tt>form.as_p</tt> is just an example. The widget also works with\ndjango-crispy-forms, and <tt>form.as_ul</tt>. The important part is <tt>form.media</tt>,\nbecause the ckeditor javascript will not be loaded without it. Alternatively, you can\nadd ckeditor.js manually (see: <a href=\"#ckeditorjs\" rel=\"nofollow\">ckeditorjs</a>).</p>\n<p>The config parameter to <tt>CKEditorWidget</tt> is the config parameter for\n<tt><span class=\"pre\">CKEDITOR.replace(...)</span></tt>. See:\n<a href=\"http://docs.ckeditor.com/#!/api/CKEDITOR-method-replace\" rel=\"nofollow\">http://docs.ckeditor.com/#!/api/CKEDITOR-method-replace</a>.</p>\n</div>\n<div id=\"configuration-examples\">\n<h3>Configuration examples</h3>\n<p>Simple toolbar with bold, italic and show source (with show source in its own box):</p>\n<pre>from django import forms\nfrom ckeditorfiles.widgets import CKEditorWidget\n\nclass PageForm(forms.Form):\n    body = forms.CharField(\n        widget=CKEditorWidget(config={\n            'toolbar': [{\n                'name': 'basic',\n                'items': [ 'Bold', 'Italic']\n            }, {\n                'name': 'source',\n                'items': [ 'Source']\n            }]\n        })\n    )\n</pre>\n<p>A more complex toolbar, suitable to simple editors, like comments:</p>\n<pre>from django import forms\nfrom ckeditorfiles.widgets import CKEditorWidget\n\nclass PageForm(forms.Form):\n    body = forms.CharField(\n        widget=CKEditorWidget(config={\n            #'contentsCss': settings.STATIC_URL + 'my_theme/ckeditor.css', # CSS for the body (see static/ckeditorfiles/contents.css for the default)\n            'format_tags': 'p;h4', # Only \"normal\" and \"h4\" to avoid large headings in the comments\n            'toolbar': [{\n                'name': 'format',\n                'items': ['Format']\n            }, {\n                'name': 'basic',\n                'items': ['Bold', 'Italic', '-', 'RemoveFormat']\n            }, {\n                'name': 'links',\n                'items': ['Link', 'Unlink']\n            }, {\n                'name': 'listandindent',\n                'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote']\n            }, {\n                'name': 'paste',\n                'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']\n            }, {\n                'name': 'tools',\n                'items': ['Maximize']\n            }]\n        })\n    )\n</pre>\n<p>The full default toolbar (good as a source of button-names for your own config):</p>\n<pre>class PageForm(forms.Form):\n    body = forms.CharField(\n        widget=CKEditorWidget(config={\n            'toolbar': [\n                {\n                    'name': 'document',\n                    'groups': [ 'mode', 'document', 'doctools' ],\n                    'items': [ 'Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates' ]\n                },\n                {\n                    'name': 'clipboard',\n                    'groups': [ 'clipboard', 'undo' ],\n                    'items': [ 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo' ]\n                },\n                {\n                    'name': 'editing',\n                    'groups': [ 'find', 'selection', 'spellchecker' ],\n                    'items': [ 'Find', 'Replace', '-', 'SelectAll' ]\n                },\n                {\n                    'name': 'forms',\n                    'items': [ 'Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton', 'HiddenField' ]\n                },\n                '/', # Linebreak\n                {\n                    'name': 'basicstyles',\n                    'groups': [ 'basicstyles', 'cleanup' ],\n                    'items': [ 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat' ]\n                },\n                {\n                    'name': 'paragraph',\n                    'groups': [ 'list', 'indent', 'blocks', 'align', 'bidi' ],\n                    'items': [ 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl' ]\n                },\n                {\n                    'name': 'links',\n                    'items': [ 'Link', 'Unlink', 'Anchor' ]\n                },\n                {\n                    'name': 'insert',\n                    'items': [ 'Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe' ]\n                },\n                '/', # Linebreak\n                {\n                    'name': 'styles',\n                    'items': [ 'Styles', 'Format', 'Font', 'FontSize' ]\n                },\n                {\n                    'name': 'colors',\n                    'items': [ 'TextColor', 'BGColor' ]\n                },\n                {\n                    'name': 'tools',\n                    'items': [ 'Maximize', 'ShowBlocks' ]\n                },\n                {\n                    'name': 'others',\n                    'items': [ '-' ]\n                },\n                {\n                    'name': 'about',\n                    'items': [ 'About' ]\n                }\n            ],\n            'toolbarGroups': [\n                    {'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ]},\n                    {'name': 'clipboard', 'groups': [ 'clipboard', 'undo' ]},\n                    {'name': 'editing', 'groups': [ 'find', 'selection', 'spellchecker' ]},\n                    {'name': 'forms'},\n                    '/',\n                    {'name': 'basicstyles', 'groups': [ 'basicstyles', 'cleanup' ]},\n                    {'name': 'paragraph', 'groups': [ 'list', 'indent', 'blocks', 'align', 'bidi' ]},\n                    {'name': 'links'},\n                    {'name': 'insert'},\n                    '/',\n                    {'name': 'styles'},\n                    {'name': 'colors'},\n                    {'name': 'tools'},\n                    {'name': 'others'},\n                    {'name': 'about'}\n            ]\n        })\n    )\n</pre>\n</div>\n<div id=\"subclass-ckeditorwidget\">\n<h3>Subclass CKEditorWidget</h3>\n<p>You can create your own CKEditor configurations as re-usable classes by\nsubclassing CKEditorWidget and provide defaults in the <tt>default_config</tt> class\nattribute:</p>\n<pre>from ckeditorfiles.widgets import CKEditorWidget\n\nclass MyCKEditorWidget(CKEditorWidget):\n    default_config = {'toolbar': 'Basic',\n                      'height': '300px'}\n</pre>\n<p>The <tt>default_config</tt> class attribute provides defaults that can be overridden\nwith <tt>config</tt> parameter for __init__, so you could\noverride the height-config of <tt>MyCKEditorWidget</tt> like this:</p>\n<pre>widget = MyCKEditorWidget(config={'height': '100px'})\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2905801, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "4feba20ccec1de426fcf66d8f7b55c7f", "sha256": "48d6b1f54b8f4d8aaa214a276eb7eb3b8c5c739d7bd9f1ed8b2770565cf72932"}, "downloads": -1, "filename": "django_ckeditorfiles-1.0.tar.gz", "has_sig": false, "md5_digest": "4feba20ccec1de426fcf66d8f7b55c7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1695927, "upload_time": "2012-04-09T23:35:38", "upload_time_iso_8601": "2012-04-09T23:35:38.915574Z", "url": "https://files.pythonhosted.org/packages/e5/07/914e6bafd0eaba899626809d684b14d494e0681c796b239a666171035369/django_ckeditorfiles-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "92fa382cd2d993d0b6b66930661f7ce9", "sha256": "c8208bfe56ae32ddf4c53264937dff94e3a1cdb453ece9e6ab789053f3fe85b1"}, "downloads": -1, "filename": "django_ckeditorfiles-1.0.1.tar.gz", "has_sig": false, "md5_digest": "92fa382cd2d993d0b6b66930661f7ce9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1696904, "upload_time": "2012-08-09T14:30:27", "upload_time_iso_8601": "2012-08-09T14:30:27.532043Z", "url": "https://files.pythonhosted.org/packages/39/28/4f4f57a88411e222430fc97c6022580dd0dbb1c1ddb0a2724182d3ae1186/django_ckeditorfiles-1.0.1.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "9a50bf408548f714c9ab9e00a48574f8", "sha256": "dd308e4976fb438c33de272f677e21e34c36b36412f88442385d4cd15a908f0d"}, "downloads": -1, "filename": "django_ckeditorfiles-1.1.tar.gz", "has_sig": false, "md5_digest": "9a50bf408548f714c9ab9e00a48574f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 673678, "upload_time": "2012-12-28T17:01:23", "upload_time_iso_8601": "2012-12-28T17:01:23.808632Z", "url": "https://files.pythonhosted.org/packages/78/1b/5b779512c7cee7bad2208e370178b39050aa32c27e1af4813cb5aafe7e48/django_ckeditorfiles-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "8612ed916ca64605b62ea319dea8cb89", "sha256": "66435cf50cd11a4baabb6ee44bc8cd65254d3f98c81b31541892e21f73b4e558"}, "downloads": -1, "filename": "django_ckeditorfiles-1.2.tar.gz", "has_sig": false, "md5_digest": "8612ed916ca64605b62ea319dea8cb89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 673617, "upload_time": "2016-06-14T15:11:39", "upload_time_iso_8601": "2016-06-14T15:11:39.349666Z", "url": "https://files.pythonhosted.org/packages/17/bf/97dfbbb26b5c1928f65ece5fcf2fa207072f257840a757a36dba36b6cd3b/django_ckeditorfiles-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "bf9b82165940f867e5bb38b2e3978167", "sha256": "2c283f4e3973e4b3275a98238059a9cf2acd042ebb8faf422c3dd46722380052"}, "downloads": -1, "filename": "django_ckeditorfiles-1.3.tar.gz", "has_sig": false, "md5_digest": "bf9b82165940f867e5bb38b2e3978167", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 942935, "upload_time": "2017-05-29T05:34:02", "upload_time_iso_8601": "2017-05-29T05:34:02.797541Z", "url": "https://files.pythonhosted.org/packages/e7/c9/0930b90870b79aa3dfaaf61c6494bdf89cac8b66893994266df12a2d0928/django_ckeditorfiles-1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bf9b82165940f867e5bb38b2e3978167", "sha256": "2c283f4e3973e4b3275a98238059a9cf2acd042ebb8faf422c3dd46722380052"}, "downloads": -1, "filename": "django_ckeditorfiles-1.3.tar.gz", "has_sig": false, "md5_digest": "bf9b82165940f867e5bb38b2e3978167", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 942935, "upload_time": "2017-05-29T05:34:02", "upload_time_iso_8601": "2017-05-29T05:34:02.797541Z", "url": "https://files.pythonhosted.org/packages/e7/c9/0930b90870b79aa3dfaaf61c6494bdf89cac8b66893994266df12a2d0928/django_ckeditorfiles-1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:08 2020"}