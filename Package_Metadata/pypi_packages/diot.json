{"info": {"author": "pwwang", "author_email": "pwwang@pwwang.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "![Logo](https://raw.githubusercontent.com/pwwang/diot/master/logo.png)\n\n[![pypi][1]][2] [![tag][3]][4] [![travis][5]][6] [![codacy quality][7]][8] [![codacy quality][9]][8] ![pyver][10]\n\nPython dictionary with dot notation\n\n- Partially compartible with `python-box`\n- Issue #87 of `python-box` fixed\n- Customization of key conversion\n\n```python\nfrom diot import Diot\n\nmovie_data = {\n  \"movies\": {\n    \"Spaceballs\": {\n      \"imdb stars\": 7.1,\n      \"rating\": \"PG\",\n      \"length\": 96,\n      \"director\": \"Mel Brooks\",\n      \"stars\": [{\"name\": \"Mel Brooks\", \"imdb\": \"nm0000316\", \"role\": \"President Skroob\"},\n                {\"name\": \"John Candy\",\"imdb\": \"nm0001006\", \"role\": \"Barf\"},\n                {\"name\": \"Rick Moranis\", \"imdb\": \"nm0001548\", \"role\": \"Dark Helmet\"}\n      ]\n    },\n    \"Robin Hood: Men in Tights\": {\n      \"imdb stars\": 6.7,\n      \"rating\": \"PG-13\",\n      \"length\": 104,\n      \"director\": \"Mel Brooks\",\n      \"stars\": [\n                {\"name\": \"Cary Elwes\", \"imdb\": \"nm0000144\", \"role\": \"Robin Hood\"},\n                {\"name\": \"Richard Lewis\", \"imdb\": \"nm0507659\", \"role\": \"Prince John\"},\n                {\"name\": \"Roger Rees\", \"imdb\": \"nm0715953\", \"role\": \"Sheriff of Rottingham\"},\n                {\"name\": \"Amy Yasbeck\", \"imdb\": \"nm0001865\", \"role\": \"Marian\"}\n      ]\n    }\n  }\n}\n\n# Box is a conversion_box by default, pass in `conversion_box=False` to disable that behavior\n# Explicitly tell Diot to convert dict/list inside\nmovie_diot = Diot(movie_data)\n\nmovie_diot.movies.Robin_Hood_Men_in_Tights.imdb_stars\n# 6.7\n\nmovie_diot.movies.Spaceballs.stars[0].name\n# 'Mel Brooks'\n\n# Different as box, you have to use Diot for new data in a list\nmovie_diot.movies.Spaceballs.stars.append(\n\tDiot({\"name\": \"Bill Pullman\", \"imdb\": \"nm0000597\", \"role\": \"Lone Starr\"}))\nmovie_diot.movies.Spaceballs.stars[-1].role\n# 'Lone Starr'\n```\n\n## Install\n```shell\npip install diot\n```\n\n## Diot\n\nInstantiated the same ways as `dict`\n```python\nDiot({'data': 2, 'count': 5})\nDiot(data=2, count=5)\nDiot({'data': 2, 'count': 1}, count=5)\nDiot([('data', 2), ('count', 5)])\n\n# All will create\n# Diot([('data', 2), ('count', 5)], diot_nest = True, diot_transform = 'safe')\n```\n\nSame as `python-box`, `Diot` is a subclass of dict which overrides some base functionality to make sure everything stored in the dict can be accessed as an attribute or key value.\n\n```python\ndiot = Diot({'data': 2, 'count': 5})\ndiot.data == diot['data'] == getattr(diot, 'data')\n```\n\nBy default, diot uses a safe transformation to transform keys into safe names that can be accessed by `diot.xxx`\n```python\ndt = Diot({\"321 Is a terrible Key!\": \"yes, really\"})\ndt._321_Is_a_terrible_Key_\n# 'yes, really'\n```\n\nDifferent as `python-box`, duplicate attributes are not allowed.\n```python\ndt = Diot({\"!bad!key!\": \"yes, really\", \".bad.key.\": \"no doubt\"})\n# KeyError\n```\n\nUse different transform functions:\n\n```python\ndt = Diot(oneTwo = 12, diot_transform = 'snake_case')\n# or use alias:\n# dt = SnakeDiot(oneTwo = 12)\ndt.one_two == dt['one_two'] == dt['oneTwo'] == 12\n\ndt = Diot(one_two = 12, diot_transform = 'camel_case')\n# or use alias:\n# dt = CamelDiot(one_two = 12)\ndt.oneTwo == dt['one_two'] == dt['oneTwo'] == 12\n\ndt = Diot(one_two = 12, diot_transform = 'upper')\ndt.ONE_TWO == dt['one_two'] == dt['ONETWO'] == 12\n\ndt = Diot(ONE_TWO = 12, diot_transform = 'lower')\ndt.one_two == dt['ONE_TWO'] == dt['one_two'] == 12\n```\n\nUse your own transform function:\n\n```python\nimport inflection\n\ndt = Diot(post = 10, diot_transform = inflection.pluralize)\ndt.posts == dt['posts'] == dt['post'] == 10\n```\n\n## OrderedDiot\n```python\ndiot_of_order = OrderedDiot()\ndiot_of_order.c = 1\ndiot_of_order.a = 2\ndiot_of_order.d = 3\n\nlist(diot_of_order.keys()) == ['c', 'a', 'd']\n\n# insertion allowed for OrderedDiot\nod = OrderedDiot()\nod.insert(0, \"c\", \"d\")\nod.insert(None, \"x\", \"y\")\nod.insert_before('c', \"e\", \"f\")\nod.insert_after(\"a\", (\"g\", \"h\"))\n\nod2 = OrderedDiot()\nod2.a1 = 'b1'\nod2.c1 = 'd1'\nod.insert(-1, od2)\n\nod3 = OrderedDiot()\nod3.a2 = 'b2'\nod3.c2 = 'd2'\nod.insert_before('c', od3)\n```\n\n[1]: https://img.shields.io/pypi/v/diot?style=flat-square\n[2]: https://pypi.org/project/diot/\n[3]: https://img.shields.io/github/tag/pwwang/diot?style=flat-square\n[4]: https://github.com/pwwang/diot\n[5]: https://img.shields.io/travis/pwwang/diot?style=flat-square\n[6]: https://travis-ci.org/pwwang/diot\n[7]: https://img.shields.io/codacy/grade/f19cfbaa23d442d6ae20af66a4cf6796?style=flat-square\n[8]: https://app.codacy.com/project/pwwang/diot/dashboard\n[9]: https://img.shields.io/codacy/coverage/f19cfbaa23d442d6ae20af66a4cf6796?style=flat-square\n[10]: https://img.shields.io/pypi/pyversions/diot?style=flat-square\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pwwang/diot", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "diot", "package_url": "https://pypi.org/project/diot/", "platform": "", "project_url": "https://pypi.org/project/diot/", "project_urls": {"Homepage": "https://github.com/pwwang/diot", "Repository": "https://github.com/pwwang/diot"}, "release_url": "https://pypi.org/project/diot/0.0.8/", "requires_dist": ["inflection (<1.0.0)"], "requires_python": ">=3.6,<4.0", "summary": "Python dictionary with dot notation.", "version": "0.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2194ed739a9917a58445a2ea652a68169739cdf6/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f707777616e672f64696f742f6d61737465722f6c6f676f2e706e67\"></p>\n<p><a href=\"https://pypi.org/project/diot/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/266e423559cb133b50bc4e350dadaadb5d8e427b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f64696f743f7374796c653d666c61742d737175617265\"></a> <a href=\"https://github.com/pwwang/diot\" rel=\"nofollow\"><img alt=\"tag\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df53368e096408c70eeacfef6a6885e3a9c96499/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f707777616e672f64696f743f7374796c653d666c61742d737175617265\"></a> <a href=\"https://travis-ci.org/pwwang/diot\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2cd8e46252bcd105c164d13d1b63bdddfec8974/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f707777616e672f64696f743f7374796c653d666c61742d737175617265\"></a> <a href=\"https://app.codacy.com/project/pwwang/diot/dashboard\" rel=\"nofollow\"><img alt=\"codacy quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8bfb23f1b8b6c487d2cea4a337d3fd49a72a2680/68747470733a2f2f696d672e736869656c64732e696f2f636f646163792f67726164652f66313963666261613233643434326436616532306166363661346366363739363f7374796c653d666c61742d737175617265\"></a> <a href=\"https://app.codacy.com/project/pwwang/diot/dashboard\" rel=\"nofollow\"><img alt=\"codacy quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d81c63b2b9d13146014b207df27ce59cb782afc7/68747470733a2f2f696d672e736869656c64732e696f2f636f646163792f636f7665726167652f66313963666261613233643434326436616532306166363661346366363739363f7374796c653d666c61742d737175617265\"></a> <img alt=\"pyver\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d29e61259dfb336a1929aa19d41fc499784ca456/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f64696f743f7374796c653d666c61742d737175617265\"></p>\n<p>Python dictionary with dot notation</p>\n<ul>\n<li>Partially compartible with <code>python-box</code></li>\n<li>Issue #87 of <code>python-box</code> fixed</li>\n<li>Customization of key conversion</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">diot</span> <span class=\"kn\">import</span> <span class=\"n\">Diot</span>\n\n<span class=\"n\">movie_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"movies\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"Spaceballs\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s2\">\"imdb stars\"</span><span class=\"p\">:</span> <span class=\"mf\">7.1</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"rating\"</span><span class=\"p\">:</span> <span class=\"s2\">\"PG\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"length\"</span><span class=\"p\">:</span> <span class=\"mi\">96</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"director\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Mel Brooks\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"stars\"</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Mel Brooks\"</span><span class=\"p\">,</span> <span class=\"s2\">\"imdb\"</span><span class=\"p\">:</span> <span class=\"s2\">\"nm0000316\"</span><span class=\"p\">,</span> <span class=\"s2\">\"role\"</span><span class=\"p\">:</span> <span class=\"s2\">\"President Skroob\"</span><span class=\"p\">},</span>\n                <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"John Candy\"</span><span class=\"p\">,</span><span class=\"s2\">\"imdb\"</span><span class=\"p\">:</span> <span class=\"s2\">\"nm0001006\"</span><span class=\"p\">,</span> <span class=\"s2\">\"role\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Barf\"</span><span class=\"p\">},</span>\n                <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Rick Moranis\"</span><span class=\"p\">,</span> <span class=\"s2\">\"imdb\"</span><span class=\"p\">:</span> <span class=\"s2\">\"nm0001548\"</span><span class=\"p\">,</span> <span class=\"s2\">\"role\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Dark Helmet\"</span><span class=\"p\">}</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"Robin Hood: Men in Tights\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s2\">\"imdb stars\"</span><span class=\"p\">:</span> <span class=\"mf\">6.7</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"rating\"</span><span class=\"p\">:</span> <span class=\"s2\">\"PG-13\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"length\"</span><span class=\"p\">:</span> <span class=\"mi\">104</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"director\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Mel Brooks\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"stars\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Cary Elwes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"imdb\"</span><span class=\"p\">:</span> <span class=\"s2\">\"nm0000144\"</span><span class=\"p\">,</span> <span class=\"s2\">\"role\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Robin Hood\"</span><span class=\"p\">},</span>\n                <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Richard Lewis\"</span><span class=\"p\">,</span> <span class=\"s2\">\"imdb\"</span><span class=\"p\">:</span> <span class=\"s2\">\"nm0507659\"</span><span class=\"p\">,</span> <span class=\"s2\">\"role\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Prince John\"</span><span class=\"p\">},</span>\n                <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Roger Rees\"</span><span class=\"p\">,</span> <span class=\"s2\">\"imdb\"</span><span class=\"p\">:</span> <span class=\"s2\">\"nm0715953\"</span><span class=\"p\">,</span> <span class=\"s2\">\"role\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Sheriff of Rottingham\"</span><span class=\"p\">},</span>\n                <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Amy Yasbeck\"</span><span class=\"p\">,</span> <span class=\"s2\">\"imdb\"</span><span class=\"p\">:</span> <span class=\"s2\">\"nm0001865\"</span><span class=\"p\">,</span> <span class=\"s2\">\"role\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Marian\"</span><span class=\"p\">}</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># Box is a conversion_box by default, pass in `conversion_box=False` to disable that behavior</span>\n<span class=\"c1\"># Explicitly tell Diot to convert dict/list inside</span>\n<span class=\"n\">movie_diot</span> <span class=\"o\">=</span> <span class=\"n\">Diot</span><span class=\"p\">(</span><span class=\"n\">movie_data</span><span class=\"p\">)</span>\n\n<span class=\"n\">movie_diot</span><span class=\"o\">.</span><span class=\"n\">movies</span><span class=\"o\">.</span><span class=\"n\">Robin_Hood_Men_in_Tights</span><span class=\"o\">.</span><span class=\"n\">imdb_stars</span>\n<span class=\"c1\"># 6.7</span>\n\n<span class=\"n\">movie_diot</span><span class=\"o\">.</span><span class=\"n\">movies</span><span class=\"o\">.</span><span class=\"n\">Spaceballs</span><span class=\"o\">.</span><span class=\"n\">stars</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"c1\"># 'Mel Brooks'</span>\n\n<span class=\"c1\"># Different as box, you have to use Diot for new data in a list</span>\n<span class=\"n\">movie_diot</span><span class=\"o\">.</span><span class=\"n\">movies</span><span class=\"o\">.</span><span class=\"n\">Spaceballs</span><span class=\"o\">.</span><span class=\"n\">stars</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n\t<span class=\"n\">Diot</span><span class=\"p\">({</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Bill Pullman\"</span><span class=\"p\">,</span> <span class=\"s2\">\"imdb\"</span><span class=\"p\">:</span> <span class=\"s2\">\"nm0000597\"</span><span class=\"p\">,</span> <span class=\"s2\">\"role\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Lone Starr\"</span><span class=\"p\">}))</span>\n<span class=\"n\">movie_diot</span><span class=\"o\">.</span><span class=\"n\">movies</span><span class=\"o\">.</span><span class=\"n\">Spaceballs</span><span class=\"o\">.</span><span class=\"n\">stars</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">role</span>\n<span class=\"c1\"># 'Lone Starr'</span>\n</pre>\n<h2>Install</h2>\n<pre>pip install diot\n</pre>\n<h2>Diot</h2>\n<p>Instantiated the same ways as <code>dict</code></p>\n<pre><span class=\"n\">Diot</span><span class=\"p\">({</span><span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'count'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">})</span>\n<span class=\"n\">Diot</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">Diot</span><span class=\"p\">({</span><span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'count'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">Diot</span><span class=\"p\">([(</span><span class=\"s1\">'data'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'count'</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)])</span>\n\n<span class=\"c1\"># All will create</span>\n<span class=\"c1\"># Diot([('data', 2), ('count', 5)], diot_nest = True, diot_transform = 'safe')</span>\n</pre>\n<p>Same as <code>python-box</code>, <code>Diot</code> is a subclass of dict which overrides some base functionality to make sure everything stored in the dict can be accessed as an attribute or key value.</p>\n<pre><span class=\"n\">diot</span> <span class=\"o\">=</span> <span class=\"n\">Diot</span><span class=\"p\">({</span><span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'count'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">})</span>\n<span class=\"n\">diot</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">==</span> <span class=\"n\">diot</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">diot</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">)</span>\n</pre>\n<p>By default, diot uses a safe transformation to transform keys into safe names that can be accessed by <code>diot.xxx</code></p>\n<pre><span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">Diot</span><span class=\"p\">({</span><span class=\"s2\">\"321 Is a terrible Key!\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yes, really\"</span><span class=\"p\">})</span>\n<span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">_321_Is_a_terrible_Key_</span>\n<span class=\"c1\"># 'yes, really'</span>\n</pre>\n<p>Different as <code>python-box</code>, duplicate attributes are not allowed.</p>\n<pre><span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">Diot</span><span class=\"p\">({</span><span class=\"s2\">\"!bad!key!\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yes, really\"</span><span class=\"p\">,</span> <span class=\"s2\">\".bad.key.\"</span><span class=\"p\">:</span> <span class=\"s2\">\"no doubt\"</span><span class=\"p\">})</span>\n<span class=\"c1\"># KeyError</span>\n</pre>\n<p>Use different transform functions:</p>\n<pre><span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">Diot</span><span class=\"p\">(</span><span class=\"n\">oneTwo</span> <span class=\"o\">=</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">diot_transform</span> <span class=\"o\">=</span> <span class=\"s1\">'snake_case'</span><span class=\"p\">)</span>\n<span class=\"c1\"># or use alias:</span>\n<span class=\"c1\"># dt = SnakeDiot(oneTwo = 12)</span>\n<span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">one_two</span> <span class=\"o\">==</span> <span class=\"n\">dt</span><span class=\"p\">[</span><span class=\"s1\">'one_two'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">dt</span><span class=\"p\">[</span><span class=\"s1\">'oneTwo'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">12</span>\n\n<span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">Diot</span><span class=\"p\">(</span><span class=\"n\">one_two</span> <span class=\"o\">=</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">diot_transform</span> <span class=\"o\">=</span> <span class=\"s1\">'camel_case'</span><span class=\"p\">)</span>\n<span class=\"c1\"># or use alias:</span>\n<span class=\"c1\"># dt = CamelDiot(one_two = 12)</span>\n<span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">oneTwo</span> <span class=\"o\">==</span> <span class=\"n\">dt</span><span class=\"p\">[</span><span class=\"s1\">'one_two'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">dt</span><span class=\"p\">[</span><span class=\"s1\">'oneTwo'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">12</span>\n\n<span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">Diot</span><span class=\"p\">(</span><span class=\"n\">one_two</span> <span class=\"o\">=</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">diot_transform</span> <span class=\"o\">=</span> <span class=\"s1\">'upper'</span><span class=\"p\">)</span>\n<span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">ONE_TWO</span> <span class=\"o\">==</span> <span class=\"n\">dt</span><span class=\"p\">[</span><span class=\"s1\">'one_two'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">dt</span><span class=\"p\">[</span><span class=\"s1\">'ONETWO'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">12</span>\n\n<span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">Diot</span><span class=\"p\">(</span><span class=\"n\">ONE_TWO</span> <span class=\"o\">=</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">diot_transform</span> <span class=\"o\">=</span> <span class=\"s1\">'lower'</span><span class=\"p\">)</span>\n<span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">one_two</span> <span class=\"o\">==</span> <span class=\"n\">dt</span><span class=\"p\">[</span><span class=\"s1\">'ONE_TWO'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">dt</span><span class=\"p\">[</span><span class=\"s1\">'one_two'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">12</span>\n</pre>\n<p>Use your own transform function:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">inflection</span>\n\n<span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">Diot</span><span class=\"p\">(</span><span class=\"n\">post</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">diot_transform</span> <span class=\"o\">=</span> <span class=\"n\">inflection</span><span class=\"o\">.</span><span class=\"n\">pluralize</span><span class=\"p\">)</span>\n<span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">posts</span> <span class=\"o\">==</span> <span class=\"n\">dt</span><span class=\"p\">[</span><span class=\"s1\">'posts'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">dt</span><span class=\"p\">[</span><span class=\"s1\">'post'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">10</span>\n</pre>\n<h2>OrderedDiot</h2>\n<pre><span class=\"n\">diot_of_order</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDiot</span><span class=\"p\">()</span>\n<span class=\"n\">diot_of_order</span><span class=\"o\">.</span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">diot_of_order</span><span class=\"o\">.</span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">diot_of_order</span><span class=\"o\">.</span><span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n\n<span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">diot_of_order</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'d'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># insertion allowed for OrderedDiot</span>\n<span class=\"n\">od</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDiot</span><span class=\"p\">()</span>\n<span class=\"n\">od</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"c\"</span><span class=\"p\">,</span> <span class=\"s2\">\"d\"</span><span class=\"p\">)</span>\n<span class=\"n\">od</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s2\">\"x\"</span><span class=\"p\">,</span> <span class=\"s2\">\"y\"</span><span class=\"p\">)</span>\n<span class=\"n\">od</span><span class=\"o\">.</span><span class=\"n\">insert_before</span><span class=\"p\">(</span><span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"s2\">\"e\"</span><span class=\"p\">,</span> <span class=\"s2\">\"f\"</span><span class=\"p\">)</span>\n<span class=\"n\">od</span><span class=\"o\">.</span><span class=\"n\">insert_after</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">\"g\"</span><span class=\"p\">,</span> <span class=\"s2\">\"h\"</span><span class=\"p\">))</span>\n\n<span class=\"n\">od2</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDiot</span><span class=\"p\">()</span>\n<span class=\"n\">od2</span><span class=\"o\">.</span><span class=\"n\">a1</span> <span class=\"o\">=</span> <span class=\"s1\">'b1'</span>\n<span class=\"n\">od2</span><span class=\"o\">.</span><span class=\"n\">c1</span> <span class=\"o\">=</span> <span class=\"s1\">'d1'</span>\n<span class=\"n\">od</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">od2</span><span class=\"p\">)</span>\n\n<span class=\"n\">od3</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDiot</span><span class=\"p\">()</span>\n<span class=\"n\">od3</span><span class=\"o\">.</span><span class=\"n\">a2</span> <span class=\"o\">=</span> <span class=\"s1\">'b2'</span>\n<span class=\"n\">od3</span><span class=\"o\">.</span><span class=\"n\">c2</span> <span class=\"o\">=</span> <span class=\"s1\">'d2'</span>\n<span class=\"n\">od</span><span class=\"o\">.</span><span class=\"n\">insert_before</span><span class=\"p\">(</span><span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"n\">od3</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7168173, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a448af56267cc6657f856e7ac35db870", "sha256": "f68280cd500fbe6df8a5aecc4e71c2604abcfcecb6776f43f4e1030211244f84"}, "downloads": -1, "filename": "diot-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a448af56267cc6657f856e7ac35db870", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4240, "upload_time": "2019-12-05T00:56:05", "upload_time_iso_8601": "2019-12-05T00:56:05.838921Z", "url": "https://files.pythonhosted.org/packages/ca/23/c118f542d1eb068df36add8b560f4e33df0b0138808241ffb21bc6037e37/diot-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c70a85b7585f066fc8edbec27bb29678", "sha256": "caaa0561865d30fddccfb3398671aba69ffe57ffa3bb1dcc675e8f160fbd7177"}, "downloads": -1, "filename": "diot-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c70a85b7585f066fc8edbec27bb29678", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4582, "upload_time": "2019-12-05T00:56:17", "upload_time_iso_8601": "2019-12-05T00:56:17.278787Z", "url": "https://files.pythonhosted.org/packages/03/ff/3f1460f834cad922bcb8910becdc6522da32576deaae5e04ae512291f85f/diot-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "62da825378fa0ce7b87ba9cbf937e155", "sha256": "193b589cf84749662b6e9bc99d9f27f22fa5be5be1c6d7ae29484adfa3616c40"}, "downloads": -1, "filename": "diot-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "62da825378fa0ce7b87ba9cbf937e155", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4433, "upload_time": "2019-12-05T15:56:15", "upload_time_iso_8601": "2019-12-05T15:56:15.598277Z", "url": "https://files.pythonhosted.org/packages/e8/9e/b1291335735936a3c11a910f7676a02e62a189f8a7454c4e6b46c5867bf0/diot-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "556507b32b4a805f0ea7eb39b4efaa05", "sha256": "f7ee0debf5883493b99b097fe30009c9efc4cdc0907540a5253fd26b6a5c95ed"}, "downloads": -1, "filename": "diot-0.0.2.tar.gz", "has_sig": false, "md5_digest": "556507b32b4a805f0ea7eb39b4efaa05", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4848, "upload_time": "2019-12-05T15:56:16", "upload_time_iso_8601": "2019-12-05T15:56:16.717781Z", "url": "https://files.pythonhosted.org/packages/36/6a/007b7160f4205a90132c98d262f0c3f6a2a4f8baf2a9e43fa79eb0309aa7/diot-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "98f5a8255e0e05f2d3057d642d405e27", "sha256": "c0e2c6c9b5720626bef52c205cd53dcf6e9dd4a05b75d260b6a7d89a2956df01"}, "downloads": -1, "filename": "diot-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "98f5a8255e0e05f2d3057d642d405e27", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4519, "upload_time": "2019-12-05T16:26:58", "upload_time_iso_8601": "2019-12-05T16:26:58.517875Z", "url": "https://files.pythonhosted.org/packages/1a/b1/a910a6891ea24c8575b34d571609e7129db32bae8057d0f064ad3aa0fa98/diot-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71f4fb5dce1fdc3ab0f1cba59e01f3c4", "sha256": "b9b9110f785e66056d913fc819232e14640af89721ab02b24df8bbadc18523d4"}, "downloads": -1, "filename": "diot-0.0.3.tar.gz", "has_sig": false, "md5_digest": "71f4fb5dce1fdc3ab0f1cba59e01f3c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4920, "upload_time": "2019-12-05T16:27:00", "upload_time_iso_8601": "2019-12-05T16:27:00.115202Z", "url": "https://files.pythonhosted.org/packages/03/f3/f288dfe905b0e454f3247f374836b7637ab7c86ca79d60c5ff76870fffbb/diot-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b10d23ad0b98769670ad649747285894", "sha256": "836c1e198493fbe75f90dd6a4fec0f701a58c88fda8c1281920c11b7e52f4966"}, "downloads": -1, "filename": "diot-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b10d23ad0b98769670ad649747285894", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 5064, "upload_time": "2019-12-05T17:51:34", "upload_time_iso_8601": "2019-12-05T17:51:34.523725Z", "url": "https://files.pythonhosted.org/packages/8d/c7/bcf3324083d448f9376e0ecb80bed819d84fbf53fb8784fb8c0aefac2c6f/diot-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "652a9ba2c61df49be568532d7f1cd296", "sha256": "5e886c96faf400068720486bd44699009749a880aa407249047cbf71251ada47"}, "downloads": -1, "filename": "diot-0.0.4.tar.gz", "has_sig": false, "md5_digest": "652a9ba2c61df49be568532d7f1cd296", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5442, "upload_time": "2019-12-05T17:51:36", "upload_time_iso_8601": "2019-12-05T17:51:36.054073Z", "url": "https://files.pythonhosted.org/packages/79/96/2522a89d47c53145d3452dad3b6112eb3ea5aca22996365b7dbd8e1be26f/diot-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "d8b8eddd94e2146b12ea9f80d1d2d8f5", "sha256": "46daab60eada1457e74b108f5575160430a686b9e889932ea72a3e0a1773dfb3"}, "downloads": -1, "filename": "diot-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "d8b8eddd94e2146b12ea9f80d1d2d8f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 5184, "upload_time": "2019-12-05T19:30:28", "upload_time_iso_8601": "2019-12-05T19:30:28.462817Z", "url": "https://files.pythonhosted.org/packages/b8/e7/76f2f3c1750013b313dccc6739ade27ab5d5c6241349366db5593f2191a0/diot-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe4f0b8a8335cd1b291465dc4c1934a4", "sha256": "de98a0afcc435718b09dfef1350b8c0cf7d65f64b28855874661356cccc79902"}, "downloads": -1, "filename": "diot-0.0.5.tar.gz", "has_sig": false, "md5_digest": "fe4f0b8a8335cd1b291465dc4c1934a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5625, "upload_time": "2019-12-05T19:30:30", "upload_time_iso_8601": "2019-12-05T19:30:30.010319Z", "url": "https://files.pythonhosted.org/packages/21/6f/7ba77c101828558dbd6944ccd7d1ce7139d81b2ed3bfb2ad9c1e71f9a2a0/diot-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "a6be7708fe2ba5fecfabcab205f6ebfa", "sha256": "64e926f39f81fda9f1a77f87b9f7c35baa401db47ac1577f36e0dc4017675e11"}, "downloads": -1, "filename": "diot-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a6be7708fe2ba5fecfabcab205f6ebfa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 5345, "upload_time": "2019-12-06T15:48:30", "upload_time_iso_8601": "2019-12-06T15:48:30.637845Z", "url": "https://files.pythonhosted.org/packages/b2/06/1a5c7bc0f2766f67e8c6649e359be7b7bde388334492aa9f9ae3611db1d7/diot-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "912bbcb4fc84f94497520ea193a3db4b", "sha256": "9c96c0985810d2b7df6b18bd130fae5c52b51ef3d041facf3acdd3b9b7dadeb2"}, "downloads": -1, "filename": "diot-0.0.6.tar.gz", "has_sig": false, "md5_digest": "912bbcb4fc84f94497520ea193a3db4b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5838, "upload_time": "2019-12-06T15:48:31", "upload_time_iso_8601": "2019-12-06T15:48:31.944572Z", "url": "https://files.pythonhosted.org/packages/7a/25/5f9255ac39060361f40c0e2c496cba7ff254a6247f1827a07b297d4dd844/diot-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "60e757ee8b2db7e0850a32b56058b2d9", "sha256": "8e7c03d820dc5035750c0fe2907dcaa81d55afe9ef4ef38f7a328b1baac6c112"}, "downloads": -1, "filename": "diot-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "60e757ee8b2db7e0850a32b56058b2d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 5999, "upload_time": "2020-01-13T16:47:31", "upload_time_iso_8601": "2020-01-13T16:47:31.309813Z", "url": "https://files.pythonhosted.org/packages/c9/8c/6c462463b8aef1ff1a2d4487d759870e31be15e9ebed07f966570c64430d/diot-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f395e3861d3af11c12174b6b3dc6f011", "sha256": "c8519e8a00297f139f0889294ca09a4b275fb26eeb7d431f7a32a227c3ba51eb"}, "downloads": -1, "filename": "diot-0.0.7.tar.gz", "has_sig": false, "md5_digest": "f395e3861d3af11c12174b6b3dc6f011", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 7060, "upload_time": "2020-01-13T16:47:32", "upload_time_iso_8601": "2020-01-13T16:47:32.701256Z", "url": "https://files.pythonhosted.org/packages/7e/2b/662b57d2f03f4d2333ce90a268c59df870211e454afda984ae0f78df614b/diot-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "d929e7368f7bda4a9718dcfb2a8fec7f", "sha256": "417ab6b615fe5afe7cfd050709c4cafef313c3b446e6d57a9cd7e6eb8541c85a"}, "downloads": -1, "filename": "diot-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "d929e7368f7bda4a9718dcfb2a8fec7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6017, "upload_time": "2020-05-04T22:23:49", "upload_time_iso_8601": "2020-05-04T22:23:49.489853Z", "url": "https://files.pythonhosted.org/packages/6b/a8/8327efc9a8082b11624acd757f8d1c0df13edfb93817a6adc3f39e81f600/diot-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bce8d177243cab0b3f02216722f4b29", "sha256": "c70875ad6378fb4e466562b10db21dff55551e755059d18afa63b63db0bc9c64"}, "downloads": -1, "filename": "diot-0.0.8.tar.gz", "has_sig": false, "md5_digest": "2bce8d177243cab0b3f02216722f4b29", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 7084, "upload_time": "2020-05-04T22:23:50", "upload_time_iso_8601": "2020-05-04T22:23:50.796345Z", "url": "https://files.pythonhosted.org/packages/89/f5/6f0cc804628338b9568ed09d5fdf5bab5858196c82e68054f12a23771589/diot-0.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d929e7368f7bda4a9718dcfb2a8fec7f", "sha256": "417ab6b615fe5afe7cfd050709c4cafef313c3b446e6d57a9cd7e6eb8541c85a"}, "downloads": -1, "filename": "diot-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "d929e7368f7bda4a9718dcfb2a8fec7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6017, "upload_time": "2020-05-04T22:23:49", "upload_time_iso_8601": "2020-05-04T22:23:49.489853Z", "url": "https://files.pythonhosted.org/packages/6b/a8/8327efc9a8082b11624acd757f8d1c0df13edfb93817a6adc3f39e81f600/diot-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bce8d177243cab0b3f02216722f4b29", "sha256": "c70875ad6378fb4e466562b10db21dff55551e755059d18afa63b63db0bc9c64"}, "downloads": -1, "filename": "diot-0.0.8.tar.gz", "has_sig": false, "md5_digest": "2bce8d177243cab0b3f02216722f4b29", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 7084, "upload_time": "2020-05-04T22:23:50", "upload_time_iso_8601": "2020-05-04T22:23:50.796345Z", "url": "https://files.pythonhosted.org/packages/89/f5/6f0cc804628338b9568ed09d5fdf5bab5858196c82e68054f12a23771589/diot-0.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:19 2020"}