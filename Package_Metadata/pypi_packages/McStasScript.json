{"info": {"author": "Mads Bertelsen", "author_email": "Mads.Bertelsen@ess.eu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# McStasScript\nMcStas API for creating and running McStas instruments from python scripting\n\nPrototype for an API that allow interaction with McStas through an interface like Jupyter Notebooks created under WP5 of PaNOSC.\n\n## Installation\nMcStasScript does not include the McStas installation, so McStas should be installed separately.\nMcStasScript can be installed using pip,\n\n    python3 -m pip install McStasScript --upgrade\n\nAfter installation it is necessary to configure the package so the McStas installation can be found, here we show how the appropriate code for an Ubuntu system. The configuration is saved permanently, and only needs to be updated when McStas or McStasScript is updated. This has to be done from within python.\n\n    from mcstasscript.interface import functions\n    my_configurator = functions.Configurator()\n    my_configurator.set_mcrun_path(\"/usr/bin/\")\n    my_configurator.set_mcstas_path(\"/usr/share/mcstas/2.5/\")\n    \n### Notes on windows installation\nMcStasScript was tested on Windows 10 installed using this [guide](https://github.com/McStasMcXtrace/McCode/blob/master/INSTALL-McStas/Windows/README.md), it is necessary to include MPI using MSMpiSetup.exe and msmpisdk.msi located in the extras folder.\n\nOpen the McStas-shell cmd (shortcut should be available on desktop) and install McStasScript / jupyter notebook with these commands:\n\n    python -m pip install notebook \n    python -m pip install McStasScript --upgrade\n    \nUsing the McStas-shell one can start a jupyter notebook server with this command:\n\n    jupyter notebook\n\nFor a standard McStas installation on Windows, the appropriate configuration can be set with these commands in a notebook:\n\n    from mcstasscript.interface import functions\n    my_configurator = functions.Configurator()\n    my_configurator.set_mcrun_path(\"\\\\mcstas-2.6\\\\bin\\\\\")\n    my_configurator.set_mcstas_path(\"\\\\mcstas-2.6\\\\lib\\\\\")\n\n## Instructions for basic use\nImport the interface \n\n    from mcstasscript.interface import instr, plotter, functions, reader\n\nNow the package can be used. Start with creating a new instrument, just needs a name\n\n    my_instrument = instr.McStas_instr(\"my_instrument_file\")\n\nThen McStas components can be added, here we add a source\n\n    my_source = my_instrument.add_component(\"source\", \"Source_simple\")\n    my_source.show_parameters() # Can be used to show available parameters for Source simple\n\nThe parameters of the source can be adjusted directly as attributes of the python object\n\n    my_source.xwidth = 0.12\n    my_source.yheight = 0.12\n    my_source.lambda0 = 3\n    my_source.dlambda = 2.2\n    my_source.focus_xw = 0.05\n    my_source.focus_yh = 0.05\n    \nA monitor is added as well to get data out of the simulation\n\n    PSD = my_instrument.add_component(\"PSD\", \"PSD_monitor\", AT=[0,0,1], RELATIVE=\"source\") \n    PSD.xwidth = 0.1\n    PSD.yheight = 0.1\n    PSD.nx = 200\n    PSD.ny = 200\n    PSD.filename = \"\\\"PSD.dat\\\"\"\n\nThis simple simulation can be executed from the \n\n    data = my_instrument.run_full_instrument(foldername=\"first_run\", increment_folder_name=True)\n\nResults from the monitors would be stored as a list of McStasData objects in the returned data. The counts are stored as numpy arrays. We can read and change the intensity directly and manipulate the data before plotting.\n\n    data[0].Intensity\n    \nPlotting is usually done in a subplot of all monitors recorded.    \n\n    plot = plotter.make_sub_plot(data)\n\n## Use in existing project\nIf one wish to work on existing projects using McStasScript, there is a reader included that will read a McStas Instrument file and write the corresponding McStasScript python instrument to disk. Here is an example where the PSI_DMC.instr example is converted:\n\n    Reader = reader.McStas_file(\"PSI_DMC.instr\")\n    Reader.write_python_file(\"PSI_DMC_generated.py\")\n\nIt is highly advised to run a check between the output of the generated file and the original to ensure the process was sucessful.\n\n## Method overview\nHere is a quick overview of the available methods of the main classes in the project. Most have more options from keyword arguments that are explained in the manual, but also in python help, for example help(instr.McStas_instr.show_components).\n\n    instr\n    \u2514\u2500\u2500 McStas_instr(str instr_name) # Returns McStas instrument object on initialize\n        \u251c\u2500\u2500 show_components(str category_name) # Show available components in given category\n        \u251c\u2500\u2500 component_help(str component_name) # Prints component parameters for given component name   \n        \u251c\u2500\u2500 add_component(str name, str component_name) # Adds component to instrument and returns object\n        \u251c\u2500\u2500 add_parameter(str name) # Adds instrument parameter with name\n        \u251c\u2500\u2500 add_declare_var(str type, str name) # Adds declared variable with type and name\n        \u251c\u2500\u2500 append_initialize(str string) # Appends a line to initialize (c syntax)\n        \u251c\u2500\u2500 print_components() # Prints list of components and their location\n        \u251c\u2500\u2500 write_full_instrument() # Writes instrument to disk with given name + \".instr\"\n        \u2514\u2500\u2500 run_full_instrument() # Runs simulation. Options in keyword arguments. Returns list of McStasData\n        \n    component # returned by add_component\n    \u251c\u2500\u2500 set_AT(list at_list) # Sets component position (list of x,y,z positions in [m])\n    \u251c\u2500\u2500 set_ROTATED(list rotated_list) # Sets component rotation (list of x,y,z rotations in [deg])\n    \u251c\u2500\u2500 set_RELATIVE(str component_name) # Sets relative to other component name\n    \u251c\u2500\u2500 set_parameters(dict input) # Set parameters using dict input\n    \u251c\u2500\u2500 set_comment(str string) # Set comment explaining something about the component\n    \u2514\u2500\u2500 print_long() # Prints currently contained information on component\n    \n    functions\n    \u251c\u2500\u2500 name_search(str name, list McStasData) # Returns data set with given name from McStasData list\n    \u251c\u2500\u2500 name_plot_options(str name, list McStasData, kwargs) # Sends kwargs to dataset with given name\n    \u251c\u2500\u2500 load_data(str foldername) # Loads data from folder with McStas data as McStasData list\n    \u2514\u2500\u2500 Configurator()\n        \u251c\u2500\u2500 set_mcrun_path(str path) # sets mcrun path\n        \u251c\u2500\u2500 set_mcstas_path(str path) # sets mcstas path\n        \u2514\u2500\u2500 set_line_length(int length) # sets maximum line length\n    \n    plotter\n    \u251c\u2500\u2500 make_plot(list McStasData) # Plots each data set individually\n    \u2514\u2500\u2500 make_sub_plot(list McStasData) # Plots data as subplot\n    \n    reader\n    \u2514\u2500\u2500  McStas_file(str filename) # Returns a reader that can extract information from given instr file\n\n    InstrumentReader # returned by McStas_file\n    \u251c\u2500\u2500 generate_python_file(str filename) # Writes python file with information contaiend in isntrument\n    \u2514\u2500\u2500 add_to_instr(McStas_instr Instr) # Adds information from instrument to McStasScirpt instrument", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PaNOSC-ViNYL/McStasScript", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "McStasScript", "package_url": "https://pypi.org/project/McStasScript/", "platform": "", "project_url": "https://pypi.org/project/McStasScript/", "project_urls": {"Homepage": "https://github.com/PaNOSC-ViNYL/McStasScript"}, "release_url": "https://pypi.org/project/McStasScript/0.0.16/", "requires_dist": null, "requires_python": "", "summary": "A python scripting interface for McStas", "version": "0.0.16", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>McStasScript</h1>\n<p>McStas API for creating and running McStas instruments from python scripting</p>\n<p>Prototype for an API that allow interaction with McStas through an interface like Jupyter Notebooks created under WP5 of PaNOSC.</p>\n<h2>Installation</h2>\n<p>McStasScript does not include the McStas installation, so McStas should be installed separately.\nMcStasScript can be installed using pip,</p>\n<pre><code>python3 -m pip install McStasScript --upgrade\n</code></pre>\n<p>After installation it is necessary to configure the package so the McStas installation can be found, here we show how the appropriate code for an Ubuntu system. The configuration is saved permanently, and only needs to be updated when McStas or McStasScript is updated. This has to be done from within python.</p>\n<pre><code>from mcstasscript.interface import functions\nmy_configurator = functions.Configurator()\nmy_configurator.set_mcrun_path(\"/usr/bin/\")\nmy_configurator.set_mcstas_path(\"/usr/share/mcstas/2.5/\")\n</code></pre>\n<h3>Notes on windows installation</h3>\n<p>McStasScript was tested on Windows 10 installed using this <a href=\"https://github.com/McStasMcXtrace/McCode/blob/master/INSTALL-McStas/Windows/README.md\" rel=\"nofollow\">guide</a>, it is necessary to include MPI using MSMpiSetup.exe and msmpisdk.msi located in the extras folder.</p>\n<p>Open the McStas-shell cmd (shortcut should be available on desktop) and install McStasScript / jupyter notebook with these commands:</p>\n<pre><code>python -m pip install notebook \npython -m pip install McStasScript --upgrade\n</code></pre>\n<p>Using the McStas-shell one can start a jupyter notebook server with this command:</p>\n<pre><code>jupyter notebook\n</code></pre>\n<p>For a standard McStas installation on Windows, the appropriate configuration can be set with these commands in a notebook:</p>\n<pre><code>from mcstasscript.interface import functions\nmy_configurator = functions.Configurator()\nmy_configurator.set_mcrun_path(\"\\\\mcstas-2.6\\\\bin\\\\\")\nmy_configurator.set_mcstas_path(\"\\\\mcstas-2.6\\\\lib\\\\\")\n</code></pre>\n<h2>Instructions for basic use</h2>\n<p>Import the interface</p>\n<pre><code>from mcstasscript.interface import instr, plotter, functions, reader\n</code></pre>\n<p>Now the package can be used. Start with creating a new instrument, just needs a name</p>\n<pre><code>my_instrument = instr.McStas_instr(\"my_instrument_file\")\n</code></pre>\n<p>Then McStas components can be added, here we add a source</p>\n<pre><code>my_source = my_instrument.add_component(\"source\", \"Source_simple\")\nmy_source.show_parameters() # Can be used to show available parameters for Source simple\n</code></pre>\n<p>The parameters of the source can be adjusted directly as attributes of the python object</p>\n<pre><code>my_source.xwidth = 0.12\nmy_source.yheight = 0.12\nmy_source.lambda0 = 3\nmy_source.dlambda = 2.2\nmy_source.focus_xw = 0.05\nmy_source.focus_yh = 0.05\n</code></pre>\n<p>A monitor is added as well to get data out of the simulation</p>\n<pre><code>PSD = my_instrument.add_component(\"PSD\", \"PSD_monitor\", AT=[0,0,1], RELATIVE=\"source\") \nPSD.xwidth = 0.1\nPSD.yheight = 0.1\nPSD.nx = 200\nPSD.ny = 200\nPSD.filename = \"\\\"PSD.dat\\\"\"\n</code></pre>\n<p>This simple simulation can be executed from the</p>\n<pre><code>data = my_instrument.run_full_instrument(foldername=\"first_run\", increment_folder_name=True)\n</code></pre>\n<p>Results from the monitors would be stored as a list of McStasData objects in the returned data. The counts are stored as numpy arrays. We can read and change the intensity directly and manipulate the data before plotting.</p>\n<pre><code>data[0].Intensity\n</code></pre>\n<p>Plotting is usually done in a subplot of all monitors recorded.</p>\n<pre><code>plot = plotter.make_sub_plot(data)\n</code></pre>\n<h2>Use in existing project</h2>\n<p>If one wish to work on existing projects using McStasScript, there is a reader included that will read a McStas Instrument file and write the corresponding McStasScript python instrument to disk. Here is an example where the PSI_DMC.instr example is converted:</p>\n<pre><code>Reader = reader.McStas_file(\"PSI_DMC.instr\")\nReader.write_python_file(\"PSI_DMC_generated.py\")\n</code></pre>\n<p>It is highly advised to run a check between the output of the generated file and the original to ensure the process was sucessful.</p>\n<h2>Method overview</h2>\n<p>Here is a quick overview of the available methods of the main classes in the project. Most have more options from keyword arguments that are explained in the manual, but also in python help, for example help(instr.McStas_instr.show_components).</p>\n<pre><code>instr\n\u2514\u2500\u2500 McStas_instr(str instr_name) # Returns McStas instrument object on initialize\n    \u251c\u2500\u2500 show_components(str category_name) # Show available components in given category\n    \u251c\u2500\u2500 component_help(str component_name) # Prints component parameters for given component name   \n    \u251c\u2500\u2500 add_component(str name, str component_name) # Adds component to instrument and returns object\n    \u251c\u2500\u2500 add_parameter(str name) # Adds instrument parameter with name\n    \u251c\u2500\u2500 add_declare_var(str type, str name) # Adds declared variable with type and name\n    \u251c\u2500\u2500 append_initialize(str string) # Appends a line to initialize (c syntax)\n    \u251c\u2500\u2500 print_components() # Prints list of components and their location\n    \u251c\u2500\u2500 write_full_instrument() # Writes instrument to disk with given name + \".instr\"\n    \u2514\u2500\u2500 run_full_instrument() # Runs simulation. Options in keyword arguments. Returns list of McStasData\n    \ncomponent # returned by add_component\n\u251c\u2500\u2500 set_AT(list at_list) # Sets component position (list of x,y,z positions in [m])\n\u251c\u2500\u2500 set_ROTATED(list rotated_list) # Sets component rotation (list of x,y,z rotations in [deg])\n\u251c\u2500\u2500 set_RELATIVE(str component_name) # Sets relative to other component name\n\u251c\u2500\u2500 set_parameters(dict input) # Set parameters using dict input\n\u251c\u2500\u2500 set_comment(str string) # Set comment explaining something about the component\n\u2514\u2500\u2500 print_long() # Prints currently contained information on component\n\nfunctions\n\u251c\u2500\u2500 name_search(str name, list McStasData) # Returns data set with given name from McStasData list\n\u251c\u2500\u2500 name_plot_options(str name, list McStasData, kwargs) # Sends kwargs to dataset with given name\n\u251c\u2500\u2500 load_data(str foldername) # Loads data from folder with McStas data as McStasData list\n\u2514\u2500\u2500 Configurator()\n    \u251c\u2500\u2500 set_mcrun_path(str path) # sets mcrun path\n    \u251c\u2500\u2500 set_mcstas_path(str path) # sets mcstas path\n    \u2514\u2500\u2500 set_line_length(int length) # sets maximum line length\n\nplotter\n\u251c\u2500\u2500 make_plot(list McStasData) # Plots each data set individually\n\u2514\u2500\u2500 make_sub_plot(list McStasData) # Plots data as subplot\n\nreader\n\u2514\u2500\u2500  McStas_file(str filename) # Returns a reader that can extract information from given instr file\n\nInstrumentReader # returned by McStas_file\n\u251c\u2500\u2500 generate_python_file(str filename) # Writes python file with information contaiend in isntrument\n\u2514\u2500\u2500 add_to_instr(McStas_instr Instr) # Adds information from instrument to McStasScirpt instrument\n</code></pre>\n\n          </div>"}, "last_serial": 7137591, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7fb49bcabf853c67f6f9d191ecdc23e2", "sha256": "eed747eb019516bea4983fec6b3fe4e6851387445336c5699d2d7310d54ba40a"}, "downloads": -1, "filename": "mcstasscript-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7fb49bcabf853c67f6f9d191ecdc23e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 68122, "upload_time": "2019-07-25T11:51:48", "upload_time_iso_8601": "2019-07-25T11:51:48.443821Z", "url": "https://files.pythonhosted.org/packages/3d/5d/c5001c646ff7915cbe349e5a0fec8ac14defa2129b68105e707911b47db7/mcstasscript-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a538067e7e202421630615555565ffaf", "sha256": "1fe70110517b780d101d3c921275f8bfd0cdaf204239f86a80b08840ab788474"}, "downloads": -1, "filename": "McStasScript-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a538067e7e202421630615555565ffaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 208915, "upload_time": "2019-07-25T11:51:51", "upload_time_iso_8601": "2019-07-25T11:51:51.606424Z", "url": "https://files.pythonhosted.org/packages/4b/f9/6e1dc06d1b5e99ecdd5e1da24709cbd3921db6a9d568788c7e6c153808db/McStasScript-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "4ac0cd101a80486f2df2618e816bedf3", "sha256": "f2659a3549b4c65e7aa01c9c7582f6d51f8f745efc5ce4f7db0a03a542bda681"}, "downloads": -1, "filename": "McStasScript-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "4ac0cd101a80486f2df2618e816bedf3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1652752, "upload_time": "2019-08-13T06:50:28", "upload_time_iso_8601": "2019-08-13T06:50:28.364497Z", "url": "https://files.pythonhosted.org/packages/17/24/f8471ba622358604fd5014d8cb97fa5f98c03762e542841eb87279af46ac/McStasScript-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c0f34e292987999356f9292fbd366b5", "sha256": "f9cdf62f963d5f0c2e6ad88bbac60c468fc07a960c4cd757066c4d2cbb572498"}, "downloads": -1, "filename": "McStasScript-0.0.10.tar.gz", "has_sig": false, "md5_digest": "4c0f34e292987999356f9292fbd366b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1776545, "upload_time": "2019-08-13T06:50:30", "upload_time_iso_8601": "2019-08-13T06:50:30.271296Z", "url": "https://files.pythonhosted.org/packages/c9/a4/44ab220c394e2de8c0cb85f13b39b612cc24d67242f9e0db23aca7d4f3a7/McStasScript-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "ef08d71fcd2b41b75ee1bba41f1bd754", "sha256": "7802969ca511d52e48bab0f695537c88417bae40c5bc58ff7801d27565a22fdd"}, "downloads": -1, "filename": "McStasScript-0.0.11.tar.gz", "has_sig": false, "md5_digest": "ef08d71fcd2b41b75ee1bba41f1bd754", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1776625, "upload_time": "2020-02-13T12:55:59", "upload_time_iso_8601": "2020-02-13T12:55:59.578706Z", "url": "https://files.pythonhosted.org/packages/d0/16/f65d792f609aa00c16cd309cbcd728ad24b543bdfb9a493617596b66ca87/McStasScript-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "aa88de2558cdc92e6dba3344107a703d", "sha256": "1b44d0c81c7d1c263ef29827890837f349394fb74432fd0ab2f263e45e2628c1"}, "downloads": -1, "filename": "McStasScript-0.0.12.tar.gz", "has_sig": false, "md5_digest": "aa88de2558cdc92e6dba3344107a703d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1779408, "upload_time": "2020-02-13T13:38:20", "upload_time_iso_8601": "2020-02-13T13:38:20.182417Z", "url": "https://files.pythonhosted.org/packages/49/60/7e26160966114a17d676156ba1c1e63607a30ac749ae4cdda4cb7707eb63/McStasScript-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "d38089acd2be5adc2e5f9e2d309c8c61", "sha256": "771aa098fd5e49e977aa5aa1a89d7143902cbada53cfdf91b080b758636a34bc"}, "downloads": -1, "filename": "McStasScript-0.0.13.tar.gz", "has_sig": false, "md5_digest": "d38089acd2be5adc2e5f9e2d309c8c61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1780160, "upload_time": "2020-02-14T12:59:58", "upload_time_iso_8601": "2020-02-14T12:59:58.824198Z", "url": "https://files.pythonhosted.org/packages/02/b2/96e279794cc14a097d7661a40986bb1f24dbcd634fa0a3c17796cf233e33/McStasScript-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "d6c2b7934708084e26b7c8750b45cdda", "sha256": "e30682c9c0bc28ba42ce114282e6ac628974fa2e7ccc768811c0632d7d307c44"}, "downloads": -1, "filename": "McStasScript-0.0.14.tar.gz", "has_sig": false, "md5_digest": "d6c2b7934708084e26b7c8750b45cdda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1780165, "upload_time": "2020-02-20T10:59:17", "upload_time_iso_8601": "2020-02-20T10:59:17.655941Z", "url": "https://files.pythonhosted.org/packages/3b/ef/35305599c5f2bcd24d3aeac990fd7484f337e6be4adf96cdfbc222601e98/McStasScript-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "940cdd7471382a3691f96a8e4a63fb79", "sha256": "83336ccf637f98be6e7bd769c3b8a40a7cf507005b228f2c193032875d479e12"}, "downloads": -1, "filename": "McStasScript-0.0.15.tar.gz", "has_sig": false, "md5_digest": "940cdd7471382a3691f96a8e4a63fb79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1831027, "upload_time": "2020-03-31T08:15:57", "upload_time_iso_8601": "2020-03-31T08:15:57.270941Z", "url": "https://files.pythonhosted.org/packages/26/f7/9db428a38b50ef0c922dd1963e765a7f149e799005a1fb3219aa2c36ce82/McStasScript-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "c8cea00960a43b20b188b138f9e0c628", "sha256": "932c7cefda6fb9e44577a600a939ea1e0ce2395fc570e68a441596e7bd59ff47"}, "downloads": -1, "filename": "McStasScript-0.0.16.tar.gz", "has_sig": false, "md5_digest": "c8cea00960a43b20b188b138f9e0c628", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1843648, "upload_time": "2020-04-30T13:55:30", "upload_time_iso_8601": "2020-04-30T13:55:30.436591Z", "url": "https://files.pythonhosted.org/packages/66/5b/7e264ca0f136cffd7b43876aa7f867f8f548a731db90abb53a49bc86b32c/McStasScript-0.0.16.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2b6d162ed4c3390a4de06de9065001af", "sha256": "cc571db38aeb21f84ea5db002b204b04c3bfc9899a5250cc19bc70edf0a32e97"}, "downloads": -1, "filename": "McStasScript-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2b6d162ed4c3390a4de06de9065001af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 71643, "upload_time": "2019-07-25T12:14:50", "upload_time_iso_8601": "2019-07-25T12:14:50.157264Z", "url": "https://files.pythonhosted.org/packages/54/82/1588ff75c3662d2987e03eb96eeb67b94905f64f5cf8eb22cfd152ddd654/McStasScript-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b1bbbbaafd30e0a49144a0268e365c6", "sha256": "cc5047dfe36fae36478346d63d36132e9627c7683c4d2bd1f9d1e48edbd7f5f7"}, "downloads": -1, "filename": "McStasScript-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2b1bbbbaafd30e0a49144a0268e365c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 225058, "upload_time": "2020-02-13T12:56:01", "upload_time_iso_8601": "2020-02-13T12:56:01.289760Z", "url": "https://files.pythonhosted.org/packages/6b/b4/9ff6cc80ef48dca36a05c5da42c5823ba51f8fa09196f1150f14ce283d90/McStasScript-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "7d4980f673e3f9f0ddd6909455cff669", "sha256": "b9d20f23d760584b35c2e53838442f11c22cab6b2a3e109b1565b813a9f2c8b1"}, "downloads": -1, "filename": "McStasScript-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7d4980f673e3f9f0ddd6909455cff669", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1626824, "upload_time": "2019-07-25T13:53:07", "upload_time_iso_8601": "2019-07-25T13:53:07.124162Z", "url": "https://files.pythonhosted.org/packages/45/97/b0e5185f212a204b679e5b9edb8280025ad1700ef85468c3f19a59494ae4/McStasScript-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87760f7202fcd6d7167494bf09c9ce90", "sha256": "84bac12f5293a9bbd4d68bc2709a69abe6faca813314f1a6b3df591507b48180"}, "downloads": -1, "filename": "McStasScript-0.0.3.tar.gz", "has_sig": false, "md5_digest": "87760f7202fcd6d7167494bf09c9ce90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1752312, "upload_time": "2020-02-13T12:56:03", "upload_time_iso_8601": "2020-02-13T12:56:03.008049Z", "url": "https://files.pythonhosted.org/packages/ec/2f/1dfd0fe8c59b3034182254a0da57cca32f291996c3d23bcc621d0c4a5ce2/McStasScript-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "588c216133445bfa93b27647639291ee", "sha256": "ccd52ab7d808d4c83923c5efaa07f9d9f8cab8fe6dbd6648e2082ae9723e6b53"}, "downloads": -1, "filename": "McStasScript-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "588c216133445bfa93b27647639291ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1630418, "upload_time": "2019-07-25T14:16:33", "upload_time_iso_8601": "2019-07-25T14:16:33.548968Z", "url": "https://files.pythonhosted.org/packages/d3/70/7602b2c9652935c0bea2b99242b8df505d4eda1a2e70003db48f8a209428/McStasScript-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ffb3092ed631b20713f78887b92f532e", "sha256": "0960f6948da740b1d295d18f6021d19123610be7a915ec8c90002965a2a13d62"}, "downloads": -1, "filename": "McStasScript-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ffb3092ed631b20713f78887b92f532e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1755051, "upload_time": "2020-02-13T12:56:05", "upload_time_iso_8601": "2020-02-13T12:56:05.284363Z", "url": "https://files.pythonhosted.org/packages/f7/1d/43ee8790417fdde51df7d151003fab483276ad29ae8fd9b2cc4540715f0e/McStasScript-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "4753b6e0ac87d4d4d6f55caa1c14c881", "sha256": "9b4df3bd7380d5b399b3d9501c85b601f3eb47614818cdd323b5b45e553d47db"}, "downloads": -1, "filename": "McStasScript-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "4753b6e0ac87d4d4d6f55caa1c14c881", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1633635, "upload_time": "2019-07-26T08:59:55", "upload_time_iso_8601": "2019-07-26T08:59:55.127179Z", "url": "https://files.pythonhosted.org/packages/b8/3a/f65a2970ecc28f0adaa65362a9207e7e59ffedbd85d930687ea4e19329c0/McStasScript-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5bf1cebc8b080c8e96f1261e687e6565", "sha256": "681f2e0979ddefa1fd8e29b103344b61d4ce2eb5279c3324432ebc05cef850a9"}, "downloads": -1, "filename": "McStasScript-0.0.5.tar.gz", "has_sig": false, "md5_digest": "5bf1cebc8b080c8e96f1261e687e6565", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1756689, "upload_time": "2020-02-13T12:56:07", "upload_time_iso_8601": "2020-02-13T12:56:07.500461Z", "url": "https://files.pythonhosted.org/packages/6e/03/32f5f60cdbd3cf780286cd9c6188de6dbc6b70acce94d1dd4f2e81c50796/McStasScript-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "70965b909bc19e877b44bd40349e5f55", "sha256": "4ea2fe1503b898418cbdd8912f77ec369a17dd0f051562975fa8f0e2e91cd7c8"}, "downloads": -1, "filename": "McStasScript-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "70965b909bc19e877b44bd40349e5f55", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1633636, "upload_time": "2019-07-26T10:32:02", "upload_time_iso_8601": "2019-07-26T10:32:02.575112Z", "url": "https://files.pythonhosted.org/packages/44/ff/5efea7664b49597aa257285f179e92ca2592ec2e56f3f109b0f1289bf807/McStasScript-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0769d1034fd5b21697de185d2ea3c35f", "sha256": "9e1e70c2c45d76a7744fb3756a0c239977ab7e23f867ab764e72994b25e464b8"}, "downloads": -1, "filename": "McStasScript-0.0.6.tar.gz", "has_sig": false, "md5_digest": "0769d1034fd5b21697de185d2ea3c35f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1757836, "upload_time": "2020-02-13T12:56:09", "upload_time_iso_8601": "2020-02-13T12:56:09.785249Z", "url": "https://files.pythonhosted.org/packages/b8/ae/c483e43a4bcc1101724996b52655717025f31d4b98554f0cc4abc894baac/McStasScript-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "58bc2ee34be60c47c295784a1a1ffa02", "sha256": "ccc30ea22c7195853c9d86026ea893c6a736f70eec83aee3db915c574ba5fa34"}, "downloads": -1, "filename": "McStasScript-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "58bc2ee34be60c47c295784a1a1ffa02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1633807, "upload_time": "2019-07-26T10:35:40", "upload_time_iso_8601": "2019-07-26T10:35:40.629802Z", "url": "https://files.pythonhosted.org/packages/11/7e/dc55f08d8f19cf86419a1759af1b89c83abd2f825fcf37b1b81c856f5674/McStasScript-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc20d7ad5150bedfe79d4698fbf6f877", "sha256": "cbc73e2e16480b95afbb81a5bcf436d9e471550ee4196d917c95e8c5eca06c4b"}, "downloads": -1, "filename": "McStasScript-0.0.7.tar.gz", "has_sig": false, "md5_digest": "bc20d7ad5150bedfe79d4698fbf6f877", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1757840, "upload_time": "2019-07-26T10:35:42", "upload_time_iso_8601": "2019-07-26T10:35:42.774383Z", "url": "https://files.pythonhosted.org/packages/bb/2f/ce996681568b3dd516a8731f97a445000935bf9e8b4b1a9c7e838df17802/McStasScript-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "904a90e0c451f8898f26653c00aae373", "sha256": "ddeb955e12351623573db953bf7407bbfe3567e3f2da54d70fc85f2d11643533"}, "downloads": -1, "filename": "McStasScript-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "904a90e0c451f8898f26653c00aae373", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1633811, "upload_time": "2019-07-29T08:41:41", "upload_time_iso_8601": "2019-07-29T08:41:41.064322Z", "url": "https://files.pythonhosted.org/packages/0e/e2/c5a26804be30f6a0814abdbf46ef728292bcdad852bd6f91bb7c40a3e2f8/McStasScript-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "553042604d037f175810446648fffb35", "sha256": "20503b261d0755d99168313f321d06912d04a54800a83b61e878c80c45f8f26f"}, "downloads": -1, "filename": "McStasScript-0.0.8.tar.gz", "has_sig": false, "md5_digest": "553042604d037f175810446648fffb35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1757847, "upload_time": "2019-07-29T08:41:43", "upload_time_iso_8601": "2019-07-29T08:41:43.470464Z", "url": "https://files.pythonhosted.org/packages/56/0a/c24af13421dd6c3e121bb2cfdd52ac0b3d5c702b8580a34167c4053d832b/McStasScript-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "4c35b4ae3387d3c6c30862aff19ab7fa", "sha256": "ed95e968137942d733a68c2bff23be3f7ef9acf004f7f5f1f10b56b92381d6a8"}, "downloads": -1, "filename": "McStasScript-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "4c35b4ae3387d3c6c30862aff19ab7fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1652740, "upload_time": "2019-08-12T12:42:38", "upload_time_iso_8601": "2019-08-12T12:42:38.754956Z", "url": "https://files.pythonhosted.org/packages/d2/a8/d5d6ceb7f94caa5f13da87383a7bc33b90c044501ab69b330f5d9915c5b0/McStasScript-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5cbe39c5ef752fc187a3990d26ea429", "sha256": "6d8b9da4d56bd91a5a8ed9e92b158a8dc66a4d8c8665957bcf79a24f47c99121"}, "downloads": -1, "filename": "McStasScript-0.0.9.tar.gz", "has_sig": false, "md5_digest": "c5cbe39c5ef752fc187a3990d26ea429", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1776533, "upload_time": "2019-08-12T12:42:40", "upload_time_iso_8601": "2019-08-12T12:42:40.627352Z", "url": "https://files.pythonhosted.org/packages/98/b6/1a25793f77b2d91c1e78b0626694765539da27789bed1c385949e76786f1/McStasScript-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c8cea00960a43b20b188b138f9e0c628", "sha256": "932c7cefda6fb9e44577a600a939ea1e0ce2395fc570e68a441596e7bd59ff47"}, "downloads": -1, "filename": "McStasScript-0.0.16.tar.gz", "has_sig": false, "md5_digest": "c8cea00960a43b20b188b138f9e0c628", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1843648, "upload_time": "2020-04-30T13:55:30", "upload_time_iso_8601": "2020-04-30T13:55:30.436591Z", "url": "https://files.pythonhosted.org/packages/66/5b/7e264ca0f136cffd7b43876aa7f867f8f548a731db90abb53a49bc86b32c/McStasScript-0.0.16.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:54 2020"}