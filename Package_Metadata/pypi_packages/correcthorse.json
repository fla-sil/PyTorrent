{"info": {"author": "Nicko van Someren", "author_email": "nicko@nicko.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Correct Horse: A memorable passphrase generator\n\nCorrect Horse is a tool for generating resonably secure but reasonably\nmemorable passphrases. It does this by picking a set of words from a\ndictionary and then sorting them into an order that plausibly makes\nsense as a phrase. It can be used either as a command line tool to\ngenerate and print a passphrase that one might enter into another\napplication or through an API to pick new passphrases for something\nlike a rotating code on a WiFi network.\n\n## Usage\n\n### Command line\n\n```\ncorrecthorse [-h] [-n MAX_WORDS] [-N MAX_LETTERS] [-l] [-c] [-u] [-s] [-j] [-H]\n                   [-S SEPARATOR] [-f FILENAME] [-L LOCALE]\n```\n\nUse the `-n  WORD_COUNT` or `--max_words WORD_COUNT` option to set the maximum number of words in the passphrase. Use the `-N  LETTER_COUNT` or `--max_letters LETTER_COUNT` option to set the maximum number of letters in the passphrase. You may set both\n\n\nThe `-l` or `--lower-case` will cause all of the words in the passphrase to be printed in lower case while the `-c` or `--capitalise` flag will cause the first letter of each word to be capitalised. The default is to capitalise the first letter.\n\nWhen the words of the passphrase are printed a seperator string will be placed between then. This can be set using the `-S SEPARATOR` or `--separator SEPARATOR` option. For convenience you can use `-u` or `--underscore` to join the words with an underscore, `-s` or `--space` to join the words with a space, `-H` or `--hyphen` to join the words with a hyphen or `-j` or `--join` to simply run the words together without a separator.\n\nBy default `correcthorse` will detect your locale and pick a word set that matches your local language. You can override the detected locale using the `-L LOCALE` or `--locale LOCALE` options. While great in theory, unless your language is English the chances are that currently there is no built in word file for your language. You can however specify a custom word file using the `-f FILENAME`or `--word-file FILENAME` options. \n\n### Use as a python module\n\nTo use the `correcthorse` module through the API create an instance of the `WordSet` using `WordSet(filename=None, locale=None, encoding='UTF-8')` and then call `random_phrase(max_words=4)`.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nickovs/correcthorse", "keywords": "password,passphrase", "license": "", "maintainer": "", "maintainer_email": "", "name": "correcthorse", "package_url": "https://pypi.org/project/correcthorse/", "platform": "", "project_url": "https://pypi.org/project/correcthorse/", "project_urls": {"Homepage": "https://github.com/nickovs/correcthorse"}, "release_url": "https://pypi.org/project/correcthorse/0.2.0/", "requires_dist": null, "requires_python": ">=3.4", "summary": "Secure but memorable passphrase generator", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Correct Horse: A memorable passphrase generator</h1>\n<p>Correct Horse is a tool for generating resonably secure but reasonably\nmemorable passphrases. It does this by picking a set of words from a\ndictionary and then sorting them into an order that plausibly makes\nsense as a phrase. It can be used either as a command line tool to\ngenerate and print a passphrase that one might enter into another\napplication or through an API to pick new passphrases for something\nlike a rotating code on a WiFi network.</p>\n<h2>Usage</h2>\n<h3>Command line</h3>\n<pre><code>correcthorse [-h] [-n MAX_WORDS] [-N MAX_LETTERS] [-l] [-c] [-u] [-s] [-j] [-H]\n                   [-S SEPARATOR] [-f FILENAME] [-L LOCALE]\n</code></pre>\n<p>Use the <code>-n WORD_COUNT</code> or <code>--max_words WORD_COUNT</code> option to set the maximum number of words in the passphrase. Use the <code>-N LETTER_COUNT</code> or <code>--max_letters LETTER_COUNT</code> option to set the maximum number of letters in the passphrase. You may set both</p>\n<p>The <code>-l</code> or <code>--lower-case</code> will cause all of the words in the passphrase to be printed in lower case while the <code>-c</code> or <code>--capitalise</code> flag will cause the first letter of each word to be capitalised. The default is to capitalise the first letter.</p>\n<p>When the words of the passphrase are printed a seperator string will be placed between then. This can be set using the <code>-S SEPARATOR</code> or <code>--separator SEPARATOR</code> option. For convenience you can use <code>-u</code> or <code>--underscore</code> to join the words with an underscore, <code>-s</code> or <code>--space</code> to join the words with a space, <code>-H</code> or <code>--hyphen</code> to join the words with a hyphen or <code>-j</code> or <code>--join</code> to simply run the words together without a separator.</p>\n<p>By default <code>correcthorse</code> will detect your locale and pick a word set that matches your local language. You can override the detected locale using the <code>-L LOCALE</code> or <code>--locale LOCALE</code> options. While great in theory, unless your language is English the chances are that currently there is no built in word file for your language. You can however specify a custom word file using the <code>-f FILENAME</code>or <code>--word-file FILENAME</code> options.</p>\n<h3>Use as a python module</h3>\n<p>To use the <code>correcthorse</code> module through the API create an instance of the <code>WordSet</code> using <code>WordSet(filename=None, locale=None, encoding='UTF-8')</code> and then call <code>random_phrase(max_words=4)</code>.</p>\n\n          </div>"}, "last_serial": 4808060, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "b75c9e0c40a4ff9e7c0bb8ca6945d89b", "sha256": "9429a2c8833471484dd1f31477ceac1786deac85ec9aed6298b1209a450b0afa"}, "downloads": -1, "filename": "correcthorse-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b75c9e0c40a4ff9e7c0bb8ca6945d89b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 14361, "upload_time": "2018-10-17T16:05:05", "upload_time_iso_8601": "2018-10-17T16:05:05.020208Z", "url": "https://files.pythonhosted.org/packages/95/3e/6bb246608584a9916515ae0458d0873dec402de1437ca4bba44e13cff87b/correcthorse-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ee0ab6c2310e4b1a3f30a25505e7f65", "sha256": "0ae61f71fe015fa9843d8b40cfcb77a092b172c150c6c4f5f6d588f18a1fcd4c"}, "downloads": -1, "filename": "correcthorse-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2ee0ab6c2310e4b1a3f30a25505e7f65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 18618, "upload_time": "2018-10-17T16:05:06", "upload_time_iso_8601": "2018-10-17T16:05:06.379344Z", "url": "https://files.pythonhosted.org/packages/2f/30/112954aa2fd3ac14c1f393ca919780c42172a81d698d544c405758d5ecdf/correcthorse-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b81b1c9009d5ea3e8758a4f1ab2d9906", "sha256": "171fd4f5909a738e1e42a8c4af30b0ce1f4c4a9fbaf56c3ecdefb3cfa7366ccf"}, "downloads": -1, "filename": "correcthorse-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b81b1c9009d5ea3e8758a4f1ab2d9906", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 14797, "upload_time": "2019-02-11T21:42:39", "upload_time_iso_8601": "2019-02-11T21:42:39.267217Z", "url": "https://files.pythonhosted.org/packages/8e/f5/5e4a761cf977933c1b370e648ddc2c80341ac88ceda7c0cd55459cc842e3/correcthorse-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d72e0629741f5637b668302bd7b5845", "sha256": "a91e9779237111e99ffab88ebe3d9cb6125bb17eb4144e7d072154bf7a39c494"}, "downloads": -1, "filename": "correcthorse-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8d72e0629741f5637b668302bd7b5845", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 19089, "upload_time": "2019-02-11T21:42:41", "upload_time_iso_8601": "2019-02-11T21:42:41.433309Z", "url": "https://files.pythonhosted.org/packages/ed/9a/848eaafbc653d053701020f31371261e2f78b92a4648e1496e4dd87665cf/correcthorse-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b81b1c9009d5ea3e8758a4f1ab2d9906", "sha256": "171fd4f5909a738e1e42a8c4af30b0ce1f4c4a9fbaf56c3ecdefb3cfa7366ccf"}, "downloads": -1, "filename": "correcthorse-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b81b1c9009d5ea3e8758a4f1ab2d9906", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 14797, "upload_time": "2019-02-11T21:42:39", "upload_time_iso_8601": "2019-02-11T21:42:39.267217Z", "url": "https://files.pythonhosted.org/packages/8e/f5/5e4a761cf977933c1b370e648ddc2c80341ac88ceda7c0cd55459cc842e3/correcthorse-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d72e0629741f5637b668302bd7b5845", "sha256": "a91e9779237111e99ffab88ebe3d9cb6125bb17eb4144e7d072154bf7a39c494"}, "downloads": -1, "filename": "correcthorse-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8d72e0629741f5637b668302bd7b5845", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 19089, "upload_time": "2019-02-11T21:42:41", "upload_time_iso_8601": "2019-02-11T21:42:41.433309Z", "url": "https://files.pythonhosted.org/packages/ed/9a/848eaafbc653d053701020f31371261e2f78b92a4648e1496e4dd87665cf/correcthorse-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:06 2020"}