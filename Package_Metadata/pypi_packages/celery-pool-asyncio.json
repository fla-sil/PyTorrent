{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "Celery Pool AsyncIO\n===============\n\n![Logo](https://repository-images.githubusercontent.com/198568368/35298e00-c1e8-11e9-8bcf-76c57ee28db8)\n\n* Free software: Apache Software License 2.0\n\nFeatures\n--------\n\n\n```\nimport asyncio\nfrom celery import Celery\n\n# celery_pool_asyncio importing is optional\n# It imports when you run worker or beat if you define pool or scheduler\n# but it does not imports when you open REPL or when you run web application.\n# If you want to apply monkey patches anyway to make identical environment\n# when you use REPL or run web application app it's good idea to import\n# celery_pool_asyncio module\nimport celery_pool_asyncio  # noqa\n# Sometimes noqa does not disable linter (Spyder IDE)\ncelery_pool_asyncio.__package__\n\n\napp = Celery()\n\n\n@app.task(\n    bind=True,\n    soft_time_limit=42,  # raises celery.exceptions.SoftTimeLimitExceeded inside the coroutine\n    time_limit=300,  # breaks coroutine execution with futures.TimeoutError\n)\nasync def my_task(self, *args, **kwargs):\n    await asyncio.sleep(5)\n\n\n@app.task\nasync def my_simple_task(*args, **kwargs):\n    await asyncio.sleep(5)\n```\n\nThen run celery:\n\n```\n$ celery worker -A hello_async_celery.app -P celery_pool_asyncio:TaskPool\n```\n\nMonkey patching: wtf and why\n--------\n\nThere are many monkey patches should be applied to make application working, and\nsome of them should be applied as early as possible. You are able to switch off\nany of them by setting environment variable `CPA_MONKEY_DENY`. Remember you\nshould have a great reason to do it.\n\nExcept critical for work features it allows:\n```\n# await data sending to broker\nasync_result = await my_simple_task.delay()\n\n# await wainting for AsyncResult\nresult = await async_result.get()\n```\n\nYou can manually disable any of them by enumerating it comma separated:\n```\n$ env CPA_MONKEY_DENY=CELERY.SEND_TASK,ALL_BACKENDS celery worker -A hello_async_celery.app -P celery_pool_asyncio:TaskPool\n```\n\nDisabling is available for:\n- `CELERY.SEND_TASK`\n- `WORKCONTROLLER.USE_EVENTLOOP`\n- `BASERESULTCONSUMER.WAIT_FOR_PENDING`\n- `BASERESULTCONSUMER.DRAIN_EVENTS_UNTIL`\n- `ASYNCBACKENDMIXIN.WAIT_FOR_PENDING`\n- `ALL_BACKENDS`\n- `BEAT.SERVICE.START`\n- `BEAT.SERVICE.STOP`\n- `BUILD_TRACER`\n- `KOMBU.UTILS.COMPAT`\n- `RPC.RESULTCONSUMER.DRAIN_EVENTS`\n- `AMQPBACKEND.DRAIN_EVENTS`\n- `AMQPBACKEND.GET_MANY`\n- `AMQP_BACKEND`\n- `RPC_BACKEND`\n\n\nScheduling\n--------\n\nDefault scheduler doesn't work. `PersistentScheduler` is subclass of default\ncelery scheduler.\n\nRunning celery with scheduler:\n```\n$ celery worker -A hello_async_celery.app -P celery_pool_asyncio:TaskPool --scheduler celery_pool_asyncio:PersistentScheduler\n$ celery beat -A hello_async_celery.app --scheduler celery_pool_asyncio:PersistentScheduler\n```\n\nEmbeding also supported:\n```\n$ celery worker -A hello_async_celery.app -P celery_pool_asyncio:TaskPool --scheduler celery_pool_asyncio:PersistentScheduler -B\n```\n\nWARNING: embeded scheduler startup is not stable. It starts correctly in ~50%\nof cases. It looks like race condition. But after correct startup it works well.\nThat's why it's good idea to run scheduler in separated process.\n\nMore examples\n--------\nThere is an example project uses `celery-pool-asyncio`:\nhttps://github.com/kai3341/celery-decorator-taskcls-example\n\n\n# Changelog\n\n## [0.1.12]\n- Finalize monkey patcher refactoring. Now you able to switch off applying of\nany monkey patch. Remember with great power comes great responsibility\n- Implement `soft_time_limit`\n- Implement `revoke`\n- Fix keywords\n\n## [0.1.11]\n- Total monkey patching refactor. Now it is enabled by default, but you can\nmanually disable some of features using environment variable `CPA_MONKEY_DENY`\n\n## [0.1.10]\n- Make Celery Beat working\n    - Add async Celery Scheduler\n    - More monkey patching\n- Move loop and loop_runner to own module\n    - Avoid creating multiple loops and loop_runners per application\n\n## [0.1.9]\n- Large rework of `await AsyncResult.get()`\n    - Works much better than earlier, but it's crap still\n    - Added outnumber of monkey-patches\n- Fixed race condition on first microseconds of pool shutdown\n\n## [0.1.8]\n- Cleanup tracer, use celery.app.trace namespase where it possible\n\n## [0.1.7]\n- Refactor monkey, split it\n- Move `patch_send_task` to own function\n- Add `patch_result_get` to `await AsyncResult.get`\n\n## [0.1.6]\n- Avoid building trace twice\n- Also this small performance optimization fixed `AsyncResult.get`\n\n## [0.1.5]\n- Fix graceful shutdown\n\n## [0.1.4]\n- Fix monkey: another function must be patched\n\n## [0.1.3]\n- Add changelog\n- Append documentation\n\n## [0.1.2]\n- Add monkey patcher to make brocker IO operations nonblocking\n\n## [0.1.1]\n- Refactor code\n- Fix found errors\n\n## [0.1.0]\n- Initial commit\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kai3341/celery-pool-asyncio", "keywords": "celery asyncio pool python3 background-jobs concurrency", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "celery-pool-asyncio", "package_url": "https://pypi.org/project/celery-pool-asyncio/", "platform": "", "project_url": "https://pypi.org/project/celery-pool-asyncio/", "project_urls": {"Homepage": "https://github.com/kai3341/celery-pool-asyncio"}, "release_url": "https://pypi.org/project/celery-pool-asyncio/0.1.12/", "requires_dist": ["asgiref", "celery"], "requires_python": "", "summary": "Celery pool to run coroutine tasks", "version": "0.1.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Celery Pool AsyncIO</h1>\n<p><img alt=\"Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/19ddbc5cfa40f847358a581476100df47010d75f/68747470733a2f2f7265706f7369746f72792d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3139383536383336382f33353239386530302d633165382d313165392d386263662d373663353765653238646238\"></p>\n<ul>\n<li>Free software: Apache Software License 2.0</li>\n</ul>\n<h2>Features</h2>\n<pre><code>import asyncio\nfrom celery import Celery\n\n# celery_pool_asyncio importing is optional\n# It imports when you run worker or beat if you define pool or scheduler\n# but it does not imports when you open REPL or when you run web application.\n# If you want to apply monkey patches anyway to make identical environment\n# when you use REPL or run web application app it's good idea to import\n# celery_pool_asyncio module\nimport celery_pool_asyncio  # noqa\n# Sometimes noqa does not disable linter (Spyder IDE)\ncelery_pool_asyncio.__package__\n\n\napp = Celery()\n\n\n@app.task(\n    bind=True,\n    soft_time_limit=42,  # raises celery.exceptions.SoftTimeLimitExceeded inside the coroutine\n    time_limit=300,  # breaks coroutine execution with futures.TimeoutError\n)\nasync def my_task(self, *args, **kwargs):\n    await asyncio.sleep(5)\n\n\n@app.task\nasync def my_simple_task(*args, **kwargs):\n    await asyncio.sleep(5)\n</code></pre>\n<p>Then run celery:</p>\n<pre><code>$ celery worker -A hello_async_celery.app -P celery_pool_asyncio:TaskPool\n</code></pre>\n<h2>Monkey patching: wtf and why</h2>\n<p>There are many monkey patches should be applied to make application working, and\nsome of them should be applied as early as possible. You are able to switch off\nany of them by setting environment variable <code>CPA_MONKEY_DENY</code>. Remember you\nshould have a great reason to do it.</p>\n<p>Except critical for work features it allows:</p>\n<pre><code># await data sending to broker\nasync_result = await my_simple_task.delay()\n\n# await wainting for AsyncResult\nresult = await async_result.get()\n</code></pre>\n<p>You can manually disable any of them by enumerating it comma separated:</p>\n<pre><code>$ env CPA_MONKEY_DENY=CELERY.SEND_TASK,ALL_BACKENDS celery worker -A hello_async_celery.app -P celery_pool_asyncio:TaskPool\n</code></pre>\n<p>Disabling is available for:</p>\n<ul>\n<li><code>CELERY.SEND_TASK</code></li>\n<li><code>WORKCONTROLLER.USE_EVENTLOOP</code></li>\n<li><code>BASERESULTCONSUMER.WAIT_FOR_PENDING</code></li>\n<li><code>BASERESULTCONSUMER.DRAIN_EVENTS_UNTIL</code></li>\n<li><code>ASYNCBACKENDMIXIN.WAIT_FOR_PENDING</code></li>\n<li><code>ALL_BACKENDS</code></li>\n<li><code>BEAT.SERVICE.START</code></li>\n<li><code>BEAT.SERVICE.STOP</code></li>\n<li><code>BUILD_TRACER</code></li>\n<li><code>KOMBU.UTILS.COMPAT</code></li>\n<li><code>RPC.RESULTCONSUMER.DRAIN_EVENTS</code></li>\n<li><code>AMQPBACKEND.DRAIN_EVENTS</code></li>\n<li><code>AMQPBACKEND.GET_MANY</code></li>\n<li><code>AMQP_BACKEND</code></li>\n<li><code>RPC_BACKEND</code></li>\n</ul>\n<h2>Scheduling</h2>\n<p>Default scheduler doesn't work. <code>PersistentScheduler</code> is subclass of default\ncelery scheduler.</p>\n<p>Running celery with scheduler:</p>\n<pre><code>$ celery worker -A hello_async_celery.app -P celery_pool_asyncio:TaskPool --scheduler celery_pool_asyncio:PersistentScheduler\n$ celery beat -A hello_async_celery.app --scheduler celery_pool_asyncio:PersistentScheduler\n</code></pre>\n<p>Embeding also supported:</p>\n<pre><code>$ celery worker -A hello_async_celery.app -P celery_pool_asyncio:TaskPool --scheduler celery_pool_asyncio:PersistentScheduler -B\n</code></pre>\n<p>WARNING: embeded scheduler startup is not stable. It starts correctly in ~50%\nof cases. It looks like race condition. But after correct startup it works well.\nThat's why it's good idea to run scheduler in separated process.</p>\n<h2>More examples</h2>\n<p>There is an example project uses <code>celery-pool-asyncio</code>:\n<a href=\"https://github.com/kai3341/celery-decorator-taskcls-example\" rel=\"nofollow\">https://github.com/kai3341/celery-decorator-taskcls-example</a></p>\n<h1>Changelog</h1>\n<h2>[0.1.12]</h2>\n<ul>\n<li>Finalize monkey patcher refactoring. Now you able to switch off applying of\nany monkey patch. Remember with great power comes great responsibility</li>\n<li>Implement <code>soft_time_limit</code></li>\n<li>Implement <code>revoke</code></li>\n<li>Fix keywords</li>\n</ul>\n<h2>[0.1.11]</h2>\n<ul>\n<li>Total monkey patching refactor. Now it is enabled by default, but you can\nmanually disable some of features using environment variable <code>CPA_MONKEY_DENY</code></li>\n</ul>\n<h2>[0.1.10]</h2>\n<ul>\n<li>Make Celery Beat working\n<ul>\n<li>Add async Celery Scheduler</li>\n<li>More monkey patching</li>\n</ul>\n</li>\n<li>Move loop and loop_runner to own module\n<ul>\n<li>Avoid creating multiple loops and loop_runners per application</li>\n</ul>\n</li>\n</ul>\n<h2>[0.1.9]</h2>\n<ul>\n<li>Large rework of <code>await AsyncResult.get()</code>\n<ul>\n<li>Works much better than earlier, but it's crap still</li>\n<li>Added outnumber of monkey-patches</li>\n</ul>\n</li>\n<li>Fixed race condition on first microseconds of pool shutdown</li>\n</ul>\n<h2>[0.1.8]</h2>\n<ul>\n<li>Cleanup tracer, use celery.app.trace namespase where it possible</li>\n</ul>\n<h2>[0.1.7]</h2>\n<ul>\n<li>Refactor monkey, split it</li>\n<li>Move <code>patch_send_task</code> to own function</li>\n<li>Add <code>patch_result_get</code> to <code>await AsyncResult.get</code></li>\n</ul>\n<h2>[0.1.6]</h2>\n<ul>\n<li>Avoid building trace twice</li>\n<li>Also this small performance optimization fixed <code>AsyncResult.get</code></li>\n</ul>\n<h2>[0.1.5]</h2>\n<ul>\n<li>Fix graceful shutdown</li>\n</ul>\n<h2>[0.1.4]</h2>\n<ul>\n<li>Fix monkey: another function must be patched</li>\n</ul>\n<h2>[0.1.3]</h2>\n<ul>\n<li>Add changelog</li>\n<li>Append documentation</li>\n</ul>\n<h2>[0.1.2]</h2>\n<ul>\n<li>Add monkey patcher to make brocker IO operations nonblocking</li>\n</ul>\n<h2>[0.1.1]</h2>\n<ul>\n<li>Refactor code</li>\n<li>Fix found errors</li>\n</ul>\n<h2>[0.1.0]</h2>\n<ul>\n<li>Initial commit</li>\n</ul>\n\n          </div>"}, "last_serial": 7059159, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "b3c88b1b073ce59b00b126f8d00c9e06", "sha256": "e714d2dde542571a20be90a2f2e711faaac0b40918df50d6a90627707b338d25"}, "downloads": -1, "filename": "celery_pool_asyncio-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b3c88b1b073ce59b00b126f8d00c9e06", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7365, "upload_time": "2019-08-18T07:54:51", "upload_time_iso_8601": "2019-08-18T07:54:51.844452Z", "url": "https://files.pythonhosted.org/packages/3c/6e/7ae237d787be55b06aefcc070689e0272994c872b51eb6fe7ec9a2580e23/celery_pool_asyncio-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f040831f90ae3a1b0742d7a9aa7b2887", "sha256": "67774e832701d52c5d8454d120ba8ead32c6d37328dadb3da0a4b81ae90b4173"}, "downloads": -1, "filename": "celery-pool-asyncio-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f040831f90ae3a1b0742d7a9aa7b2887", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10560, "upload_time": "2019-08-18T07:54:53", "upload_time_iso_8601": "2019-08-18T07:54:53.930681Z", "url": "https://files.pythonhosted.org/packages/87/3a/48ced3133254b80b7c14fb98b06d23e2ceae6b990b055b708c725020bb87/celery-pool-asyncio-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "5e4e4e67de5f0c0186b8bc807c441f67", "sha256": "4389546757c5b760bbab46dc1a92ee74c47859684882edd074ffdce9caacbd40"}, "downloads": -1, "filename": "celery_pool_asyncio-0.1.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5e4e4e67de5f0c0186b8bc807c441f67", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15171, "upload_time": "2019-12-06T15:01:25", "upload_time_iso_8601": "2019-12-06T15:01:25.870793Z", "url": "https://files.pythonhosted.org/packages/78/6f/7ee8e64051d7dc7ca4b91605f37b63390e870551a811059129d22597d06a/celery_pool_asyncio-0.1.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "127513eeea6bc518cb9b05631ec1a565", "sha256": "39f6b81627a1965071ce561b9bf4bfa39ffb338cb04e291bcde9192a3017d171"}, "downloads": -1, "filename": "celery-pool-asyncio-0.1.10.tar.gz", "has_sig": false, "md5_digest": "127513eeea6bc518cb9b05631ec1a565", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17304, "upload_time": "2019-12-06T15:01:27", "upload_time_iso_8601": "2019-12-06T15:01:27.710972Z", "url": "https://files.pythonhosted.org/packages/78/82/4707e93ba02717e81695c496043b57d0c89e628c5853dbaf1a6b467d1e1e/celery-pool-asyncio-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "00835058cbfb7fff1ebef9288c0681c2", "sha256": "ec1baf61e2cd610d83fa436eab053af1307adbf84eaa2a76ae56a60e3496740c"}, "downloads": -1, "filename": "celery_pool_asyncio-0.1.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "00835058cbfb7fff1ebef9288c0681c2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16147, "upload_time": "2019-12-09T13:11:01", "upload_time_iso_8601": "2019-12-09T13:11:01.723906Z", "url": "https://files.pythonhosted.org/packages/2e/32/eaa629b7420129206aabbce641752740199d7b276b6a05c040ff5327cfac/celery_pool_asyncio-0.1.11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2482b4fcdadcf6ea23dd6b9a78be6525", "sha256": "a263cf9bd03b151f1b24604fffb152c94bd35badef6f94ef196cc17323a34041"}, "downloads": -1, "filename": "celery-pool-asyncio-0.1.11.tar.gz", "has_sig": false, "md5_digest": "2482b4fcdadcf6ea23dd6b9a78be6525", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18169, "upload_time": "2019-12-09T13:11:03", "upload_time_iso_8601": "2019-12-09T13:11:03.717652Z", "url": "https://files.pythonhosted.org/packages/e1/18/c6963660001dc8777c9f5e28fde4d1a007f468cbd40ef37347db1855e874/celery-pool-asyncio-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "1c29f2cd1d4de6d2db532254aae15307", "sha256": "d5fce3b6c406435afa080d089becf12f956b907520411282a293c18f45bd224f"}, "downloads": -1, "filename": "celery_pool_asyncio-0.1.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1c29f2cd1d4de6d2db532254aae15307", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17876, "upload_time": "2020-04-20T10:37:23", "upload_time_iso_8601": "2020-04-20T10:37:23.495061Z", "url": "https://files.pythonhosted.org/packages/0e/ab/3302d4b2df6e188c4425a4cde0e04dce09e249fd4bdfc0c912870051174e/celery_pool_asyncio-0.1.12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88ce824373a7c3016dc3a6fe92d6aedb", "sha256": "9709469a7f289c77e337a75d67e52c2a2d0b6a32b808f3fef4d61ccc227d12f2"}, "downloads": -1, "filename": "celery-pool-asyncio-0.1.12.tar.gz", "has_sig": false, "md5_digest": "88ce824373a7c3016dc3a6fe92d6aedb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19654, "upload_time": "2020-04-20T10:37:25", "upload_time_iso_8601": "2020-04-20T10:37:25.616812Z", "url": "https://files.pythonhosted.org/packages/c2/4b/5c821646cda9039af68838e127124327c2a1435a0f018c6115638ab7c6ab/celery-pool-asyncio-0.1.12.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "35d8869713b92393c0bcd5113f5490b7", "sha256": "ef7b918ddf3e206cb5beb09fbc37a8b69889104657c75ad0c01e9984c841b1bf"}, "downloads": -1, "filename": "celery_pool_asyncio-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "35d8869713b92393c0bcd5113f5490b7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7858, "upload_time": "2019-08-19T11:48:14", "upload_time_iso_8601": "2019-08-19T11:48:14.970414Z", "url": "https://files.pythonhosted.org/packages/0f/b9/ca7389be715f04bd1c4a75cce35642661645816ae3dc3741b9a7078e2143/celery_pool_asyncio-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "deef12e512fffa73d6ab60e163abd082", "sha256": "3fc73008ccf0aadb6b1e3031826831cb1407eaedcf8361791736768757d62c05"}, "downloads": -1, "filename": "celery-pool-asyncio-0.1.3.tar.gz", "has_sig": false, "md5_digest": "deef12e512fffa73d6ab60e163abd082", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10929, "upload_time": "2019-08-19T11:48:16", "upload_time_iso_8601": "2019-08-19T11:48:16.802052Z", "url": "https://files.pythonhosted.org/packages/98/64/fc9cf4170f571647b9610a69ca8f564886c05598d858e9723f5355ff5fe9/celery-pool-asyncio-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "a1b35a67e50aa97f0796c86e1dabecd3", "sha256": "cfe7ba455f0131afef24a3fda3aedf9eabdb9df6229dd40bd63055e6930f5866"}, "downloads": -1, "filename": "celery_pool_asyncio-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a1b35a67e50aa97f0796c86e1dabecd3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7971, "upload_time": "2019-08-30T12:42:33", "upload_time_iso_8601": "2019-08-30T12:42:33.315998Z", "url": "https://files.pythonhosted.org/packages/06/8a/247b59db21e5a1be8818057b82718ef0ace0324fc11645f411ec59722294/celery_pool_asyncio-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07397a27e80b867add0444e254292530", "sha256": "8d5337a42c8ef184d9693aecfd2386e700b71b382e30fc8cdc1d8fa7e0cb6f07"}, "downloads": -1, "filename": "celery-pool-asyncio-0.1.4.tar.gz", "has_sig": false, "md5_digest": "07397a27e80b867add0444e254292530", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11098, "upload_time": "2019-08-30T12:42:34", "upload_time_iso_8601": "2019-08-30T12:42:34.670320Z", "url": "https://files.pythonhosted.org/packages/bd/e2/3034f72f58d21f51bcb4ca257eb3582d70c742e0bbf222cfd657becb7121/celery-pool-asyncio-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "6e691eb97e0bb3441c1ff7329dfb5f7e", "sha256": "52d4ef4dcaf36ef4f581e75b87788e46b2bfb3ccb867e833ffdfbed16d719016"}, "downloads": -1, "filename": "celery_pool_asyncio-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6e691eb97e0bb3441c1ff7329dfb5f7e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8237, "upload_time": "2019-10-01T09:15:58", "upload_time_iso_8601": "2019-10-01T09:15:58.529063Z", "url": "https://files.pythonhosted.org/packages/dc/b8/6b8e092f9b262625369c47a9894edf83945ac52da36fd811c22cb51d1f73/celery_pool_asyncio-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "feeb5e30bf042e5fa2e162e48d1b729e", "sha256": "de7ca033798053e06ceeb3d9a66457a1adbb5e569431b08e0d66e0f8f336ebc3"}, "downloads": -1, "filename": "celery-pool-asyncio-0.1.5.tar.gz", "has_sig": false, "md5_digest": "feeb5e30bf042e5fa2e162e48d1b729e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11346, "upload_time": "2019-10-01T09:16:00", "upload_time_iso_8601": "2019-10-01T09:16:00.323715Z", "url": "https://files.pythonhosted.org/packages/b0/1b/7d4901f756d8335d201fc47b9ebfc4249562474bd8d54c90e537ca9140ed/celery-pool-asyncio-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "bec8ac3d3cadf3b3abe29df02a42d89f", "sha256": "c0f0ba264337afdc93e1bdfc7a6a3720b930e33d4e6a46351e366006155c8fc2"}, "downloads": -1, "filename": "celery_pool_asyncio-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bec8ac3d3cadf3b3abe29df02a42d89f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8234, "upload_time": "2019-10-02T17:26:32", "upload_time_iso_8601": "2019-10-02T17:26:32.488099Z", "url": "https://files.pythonhosted.org/packages/88/68/cc3e3bc3b22c2507f1297cd157a4f876836807650fcb194b6bac586743a3/celery_pool_asyncio-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e84254f893ef04e1fd4fb2f1aa6e3d2d", "sha256": "8e8b1d1f0148926a0ae814fe8381944cd0016501f831f27584949815e8be719e"}, "downloads": -1, "filename": "celery-pool-asyncio-0.1.6.tar.gz", "has_sig": false, "md5_digest": "e84254f893ef04e1fd4fb2f1aa6e3d2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11350, "upload_time": "2019-10-02T17:26:34", "upload_time_iso_8601": "2019-10-02T17:26:34.374623Z", "url": "https://files.pythonhosted.org/packages/90/b3/091b384e292e40cbda2167d402f14e4bd7b4bd0181d4c5929d4f2f9f707e/celery-pool-asyncio-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "6dd18085a5bc16767e31c975fdf47dd9", "sha256": "2165f8ef1fee14494523b9035bf3a4b438e254f13eda2b4f912cc458abae352d"}, "downloads": -1, "filename": "celery_pool_asyncio-0.1.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6dd18085a5bc16767e31c975fdf47dd9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8430, "upload_time": "2019-10-03T10:56:42", "upload_time_iso_8601": "2019-10-03T10:56:42.991292Z", "url": "https://files.pythonhosted.org/packages/46/0e/c4d3042baa974c230cbc170c763ebba40fb13ada8eb10306a81ba4229584/celery_pool_asyncio-0.1.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbc31f146c97a274a61dbfccd5d7ddaa", "sha256": "20867ed5a0807bef24106b21ea26103420925da7f407732000058503c3c4ee01"}, "downloads": -1, "filename": "celery-pool-asyncio-0.1.7.tar.gz", "has_sig": false, "md5_digest": "dbc31f146c97a274a61dbfccd5d7ddaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11516, "upload_time": "2019-10-03T10:56:44", "upload_time_iso_8601": "2019-10-03T10:56:44.858787Z", "url": "https://files.pythonhosted.org/packages/88/92/310754eabbd8eb48bb1debb269f6d5ad64194d85d4a7785e552a51717515/celery-pool-asyncio-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "7ff0c326fe26b2618276273923664ecd", "sha256": "640951d0b2bc8a4b17b88d089dcddbea927213f2037d3a9de2aaeaf5a6bbb038"}, "downloads": -1, "filename": "celery_pool_asyncio-0.1.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7ff0c326fe26b2618276273923664ecd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8123, "upload_time": "2019-10-04T11:35:16", "upload_time_iso_8601": "2019-10-04T11:35:16.219174Z", "url": "https://files.pythonhosted.org/packages/ff/40/9d7066ba4010370fd60b44a45e658dccb6970d1e9ba87d719b379470c9ad/celery_pool_asyncio-0.1.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "856a5f29cf25492e3ba1731a9dc4c267", "sha256": "16b768e56524894614f52ac56914adda50caf8f995dff9ebc7c36565f51ca354"}, "downloads": -1, "filename": "celery-pool-asyncio-0.1.8.tar.gz", "has_sig": false, "md5_digest": "856a5f29cf25492e3ba1731a9dc4c267", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11249, "upload_time": "2019-10-04T11:35:17", "upload_time_iso_8601": "2019-10-04T11:35:17.634782Z", "url": "https://files.pythonhosted.org/packages/be/a8/3023b44911f3dbbceb57a8038aaabc1d32e31c1feb967f05efed4bd55b13/celery-pool-asyncio-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "f8fe65d14e74c85d67ab341dc6219666", "sha256": "fabac6f566b54f3dc7c0b79fa1ef90af0a6a43d0401927ecaca225bb862faee8"}, "downloads": -1, "filename": "celery_pool_asyncio-0.1.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f8fe65d14e74c85d67ab341dc6219666", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11720, "upload_time": "2019-10-18T09:18:55", "upload_time_iso_8601": "2019-10-18T09:18:55.900558Z", "url": "https://files.pythonhosted.org/packages/a6/b0/1c46122a403ac0b057f7de5620d7da7006fcea6f3b99d91dca3022d4ee25/celery_pool_asyncio-0.1.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ce0485134c5dc5030927a43859eca9d", "sha256": "775d86d1b108308edeb08b0c7663fddcc9e532f749210935c43a480157fa84bd"}, "downloads": -1, "filename": "celery-pool-asyncio-0.1.9.tar.gz", "has_sig": false, "md5_digest": "5ce0485134c5dc5030927a43859eca9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14055, "upload_time": "2019-10-18T09:18:57", "upload_time_iso_8601": "2019-10-18T09:18:57.452500Z", "url": "https://files.pythonhosted.org/packages/0d/14/060ae69e124b4b9912d2be9124f5c23ed2a64f78c169cefc1950c366d79d/celery-pool-asyncio-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1c29f2cd1d4de6d2db532254aae15307", "sha256": "d5fce3b6c406435afa080d089becf12f956b907520411282a293c18f45bd224f"}, "downloads": -1, "filename": "celery_pool_asyncio-0.1.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1c29f2cd1d4de6d2db532254aae15307", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17876, "upload_time": "2020-04-20T10:37:23", "upload_time_iso_8601": "2020-04-20T10:37:23.495061Z", "url": "https://files.pythonhosted.org/packages/0e/ab/3302d4b2df6e188c4425a4cde0e04dce09e249fd4bdfc0c912870051174e/celery_pool_asyncio-0.1.12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88ce824373a7c3016dc3a6fe92d6aedb", "sha256": "9709469a7f289c77e337a75d67e52c2a2d0b6a32b808f3fef4d61ccc227d12f2"}, "downloads": -1, "filename": "celery-pool-asyncio-0.1.12.tar.gz", "has_sig": false, "md5_digest": "88ce824373a7c3016dc3a6fe92d6aedb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19654, "upload_time": "2020-04-20T10:37:25", "upload_time_iso_8601": "2020-04-20T10:37:25.616812Z", "url": "https://files.pythonhosted.org/packages/c2/4b/5c821646cda9039af68838e127124327c2a1435a0f018c6115638ab7c6ab/celery-pool-asyncio-0.1.12.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:51 2020"}