{"info": {"author": "\u0141ukasz Langa", "author_email": "lukasz@langa.pl", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "--\ndj\n--\n\nThis is just a namespace package for Django-related projects. Feel free to use it.\n\nDoes Django even support namespace packages?\n============================================\n\nIt currently doesn't but you can patch it like so::\n\n \n  import django.core.management\n\n  def django_core_management__find_management_module(app_name):\n      \"\"\"\n      Determines the path to the management module for the given app_name,\n      without actually importing the application or the management module.\n\n      Raises ImportError if the management module cannot be found for any reason.\n\n      Supports namespace packages.\n      \"\"\"\n      import sys\n      import os.path\n\n      parts = app_name.split('.')\n      parts.append('management')\n\n      management_module = __import__(app_name + '.management', fromlist=parts)\n      path = management_module.__file__\n\n      if path.endswith(('__init__.py', '__init__.pyc')):\n          path = os.path.split(path)[0]\n\n      return path\n\n  # PATCH: a more generic find_management_module that supports namespace\n  # packages.\n  # COMPATIBILITY: Django 1.1.0 - 1.3.0\n  django.core.management.find_management_module = \\\n      django_core_management__find_management_module\n\nAuthors\n=======\n\nGlued together by `\u0141ukasz Langa <mailto:lukasz@langa.pl>`_.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ambv/dj/", "keywords": "django dj extra contrib", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "dj", "package_url": "https://pypi.org/project/dj/", "platform": "any", "project_url": "https://pypi.org/project/dj/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ambv/dj/"}, "release_url": "https://pypi.org/project/dj/0.1/", "requires_dist": null, "requires_python": null, "summary": "This is a namespace package for extra Django packages. Feel free to use it.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is just a namespace package for Django-related projects. Feel free to use it.</p>\n<div id=\"does-django-even-support-namespace-packages\">\n<h2>Does Django even support namespace packages?</h2>\n<p>It currently doesn\u2019t but you can patch it like so:</p>\n<pre>import django.core.management\n\ndef django_core_management__find_management_module(app_name):\n    \"\"\"\n    Determines the path to the management module for the given app_name,\n    without actually importing the application or the management module.\n\n    Raises ImportError if the management module cannot be found for any reason.\n\n    Supports namespace packages.\n    \"\"\"\n    import sys\n    import os.path\n\n    parts = app_name.split('.')\n    parts.append('management')\n\n    management_module = __import__(app_name + '.management', fromlist=parts)\n    path = management_module.__file__\n\n    if path.endswith(('__init__.py', '__init__.pyc')):\n        path = os.path.split(path)[0]\n\n    return path\n\n# PATCH: a more generic find_management_module that supports namespace\n# packages.\n# COMPATIBILITY: Django 1.1.0 - 1.3.0\ndjango.core.management.find_management_module = \\\n    django_core_management__find_management_module\n</pre>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>Glued together by <a href=\"mailto:lukasz%40langa.pl\">\u0141ukasz Langa</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 789003, "releases": {"0.0": [{"comment_text": "", "digests": {"md5": "415fd8b31c894112463915e3625db93d", "sha256": "81f26bf8c98fcc178cdf0e93fee9cf614745c5a823e1891aea82551db267c9d7"}, "downloads": -1, "filename": "dj-0.0.tar.gz", "has_sig": false, "md5_digest": "415fd8b31c894112463915e3625db93d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2456, "upload_time": "2012-03-11T07:11:17", "upload_time_iso_8601": "2012-03-11T07:11:17.340255Z", "url": "https://files.pythonhosted.org/packages/cf/bc/672967395404e6857dbbe99ded622b3aedbee48a946063440e149d69b1aa/dj-0.0.tar.gz", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "9795f8bea892290a426e20147336e8a2", "sha256": "515398094e8a1dfd309cbebfa760cf8608e58cb4dff10579fdad85b10b729385"}, "downloads": -1, "filename": "dj-0.1.tar.gz", "has_sig": false, "md5_digest": "9795f8bea892290a426e20147336e8a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3054, "upload_time": "2013-03-04T21:53:47", "upload_time_iso_8601": "2013-03-04T21:53:47.507833Z", "url": "https://files.pythonhosted.org/packages/a4/02/13f392e3dc08a07417f7f9e9cb2bb3d736089042f1a55e0b33d4edd433ed/dj-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9795f8bea892290a426e20147336e8a2", "sha256": "515398094e8a1dfd309cbebfa760cf8608e58cb4dff10579fdad85b10b729385"}, "downloads": -1, "filename": "dj-0.1.tar.gz", "has_sig": false, "md5_digest": "9795f8bea892290a426e20147336e8a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3054, "upload_time": "2013-03-04T21:53:47", "upload_time_iso_8601": "2013-03-04T21:53:47.507833Z", "url": "https://files.pythonhosted.org/packages/a4/02/13f392e3dc08a07417f7f9e9cb2bb3d736089042f1a55e0b33d4edd433ed/dj-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:57 2020"}