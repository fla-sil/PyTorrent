{"info": {"author": "Sixty North AS", "author_email": "austin@sixty-north.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Pytest", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3 :: Only"], "description": "========\ngodkjenn\n========\n\n godkjenn\n    /go:kjen/\n    Approve (Norwegian)\n\nApproval testing for Python3.\n\nQuickstart\n==========\n\nInstall the package::\n\n    pip install .\n\nand the pytest plugin dependencies::\n\n    pip install .[pytest-plugin]\n\n(This is probably not strictly necessary since the only plugin dependency is ``pytest``).\n\nThen you can use it in your pytest tests with the ``godkjenn`` fixture:\n\n.. code-block:: python\n\n    def test_my_test(godkjenn):\n        new_output = my_function()\n        godkjenn.verify(new_output)  # new_output must be a bytes object\n\n``godkjenn`` will look for an existing *accepted* value for that test function. If accepted data is found and it matches\nthe new data, then the test passes. Otherwise the test fails.\n\nIf your test fails, this could mean either a) your code is actually broken or b) you want to accept the new output in\nplace of the previous accepted value (if any). godkjenn will instruct you on how to proceed in that case.\n\nPrinciple\n=========\n\nThe principle of approval testing simple. Given a function or program that you consider correct, you store its output\nfor a given input. This is the *accepted* or *golden* version of its output. Then, as you change your code, you\nreproduce the output (we call this *received* output) and compare it to the accepted version. If they match, then the\ntest passes. Otherwise, it fails.\n\nA test failure can mean one of two things. First, it could mean that you actually broke you program and need to fix it\nso that the received output matches the accepted. Second, it could mean the received output is now correct, the accepted\noutput is now out of date, and you need to update the accepted output with the received.\n\nAs an approval testing tool, ``godkjenn`` aims to streamline and simplify this kind of testing.\n\nCore elements\n=============\n\nThere are a few core elements to ``godkjenn``. These are the parts of the approval testing system that are independent\nof any particular testing framework. Generally speaking, you won't need to work with these directly; the integration\nwith your testing framework with hide most of the low-level details.\n\nVaults\n------\n\nVaults are where the accepted outputs are stored. (The term vault is a bit of a play on words: the accepted output is\n\"golden\", and you keep gold in vaults.)\n\nThe vault abstraction defines an API for storing and retrieving accepted (and received) output.\n\n``godkjenn`` provides a simple vault, ``FSVault``, that stores its data on the filesystem. Other vaults can be provided\nvia a plugin system.\n\nVerification\n------------\n\nThe core verification algorithm compares new received data with the accepted data for a given test. If there's a\nmismatch or if not accepted output exists, this triggers test failure and instructs the user on what to do next.\n\nDiffing\n-------\n\nWhen an approval test fails, ``godkjenn`` tries to provide a diff showing the user how the received outputs differs from\nthe accepted. The user can provide a diffing algorithm for producing this diff.\n\nConfiguration\n=============\n\nInternally godkjenn uses a simple ``dict`` for holding its configuration information. Top-level values\nare stored as keys in the ``dict``. Each plugin type has a top-level entry pointing to a ``dict`` mapping\nplugin names to plugin-specific configurations. So for example, the configuration might look like this::\n\n    {\n        'vault': {\n            'fs-vault': {\n                ... configuration for fs-vault plugin\n            }\n        }\n    }\n\nSince testing frameworks provide different configuration methods, godkjenn leaves it up to each test framework\nintegration to figure out how to load the configuration. Ideally, godkjenn will have sane-enough defaults to work\nwithout explicit configuration; this is an aspiration, and may not be practical in all cases.\n\nFor examples of hwo to configure godkjenn, see the \"examples\" directory.\n\nConfiguration with pytest\n-------------------------\n\nThe pytest integration looks for a \"godkjenn_config\" entry in the pytest INI configuration. `Pytest configuration is\nfairly complex <https://docs.pytest.org/en/latest/customize.html>`_, so we'll let its documentation tell you how to\nspecify an INI file. In the end, though, the \"godkjenn_config\" entry should contain the filename of a TOML file\ncontaining the godkjenn configuration. This path is interpreted relative to the pytest root directory; if it's not\nspecified, godkjenn looks for \"godkjenn.toml\" (again in the pytest root directory). A missing config file is OK and is\nnot treated as an error.\n\nFor example, your ``pytest.ini`` might look like this::\n\n    [pytest]\n    godkjenn_config = godkjenn.toml\n\nThen your ``godkjenn.toml`` file might look like this::\n\n    [godkjenn]\n    vault_type = 'fs-vault'\n\nThis would specify that you want to use the 'fs-vault' plugin for storing results. If there were configuration options\nfor the 'fs-vault' plugin, the TOML file might also include something like this::\n\n    [godkjenn.vault.fs-vault]\n    option_a = 42\n    option_b = \"so long and thanks for all the fish\"\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/sixty-north/godkjenn", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "godkjenn", "package_url": "https://pypi.org/project/godkjenn/", "platform": "any", "project_url": "https://pypi.org/project/godkjenn/", "project_urls": {"Homepage": "http://bitbucket.org/sixty-north/godkjenn"}, "release_url": "https://pypi.org/project/godkjenn/1.1.0/", "requires_dist": ["click", "fitb (<4.0.0,>=3.0.0)", "exit-codes", "toml", "bumpversion ; extra == 'dev'", "twine ; extra == 'dev'", "pytest ; extra == 'pytest-plugin'", "hypothesis ; extra == 'test'", "pytest ; extra == 'test'"], "requires_python": "", "summary": "Approval testing for Python3", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n<dl>\n<dt>godkjenn</dt>\n<dd>/<a>go:kjen/</a>\nApprove (Norwegian)</dd>\n</dl>\n</blockquote>\n<p>Approval testing for Python3.</p>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Install the package:</p>\n<pre>pip install .\n</pre>\n<p>and the pytest plugin dependencies:</p>\n<pre>pip install .[pytest-plugin]\n</pre>\n<p>(This is probably not strictly necessary since the only plugin dependency is <tt>pytest</tt>).</p>\n<p>Then you can use it in your pytest tests with the <tt>godkjenn</tt> fixture:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_my_test</span><span class=\"p\">(</span><span class=\"n\">godkjenn</span><span class=\"p\">):</span>\n    <span class=\"n\">new_output</span> <span class=\"o\">=</span> <span class=\"n\">my_function</span><span class=\"p\">()</span>\n    <span class=\"n\">godkjenn</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"n\">new_output</span><span class=\"p\">)</span>  <span class=\"c1\"># new_output must be a bytes object</span>\n</pre>\n<p><tt>godkjenn</tt> will look for an existing <em>accepted</em> value for that test function. If accepted data is found and it matches\nthe new data, then the test passes. Otherwise the test fails.</p>\n<p>If your test fails, this could mean either a) your code is actually broken or b) you want to accept the new output in\nplace of the previous accepted value (if any). godkjenn will instruct you on how to proceed in that case.</p>\n</div>\n<div id=\"principle\">\n<h2>Principle</h2>\n<p>The principle of approval testing simple. Given a function or program that you consider correct, you store its output\nfor a given input. This is the <em>accepted</em> or <em>golden</em> version of its output. Then, as you change your code, you\nreproduce the output (we call this <em>received</em> output) and compare it to the accepted version. If they match, then the\ntest passes. Otherwise, it fails.</p>\n<p>A test failure can mean one of two things. First, it could mean that you actually broke you program and need to fix it\nso that the received output matches the accepted. Second, it could mean the received output is now correct, the accepted\noutput is now out of date, and you need to update the accepted output with the received.</p>\n<p>As an approval testing tool, <tt>godkjenn</tt> aims to streamline and simplify this kind of testing.</p>\n</div>\n<div id=\"core-elements\">\n<h2>Core elements</h2>\n<p>There are a few core elements to <tt>godkjenn</tt>. These are the parts of the approval testing system that are independent\nof any particular testing framework. Generally speaking, you won\u2019t need to work with these directly; the integration\nwith your testing framework with hide most of the low-level details.</p>\n<div id=\"vaults\">\n<h3>Vaults</h3>\n<p>Vaults are where the accepted outputs are stored. (The term vault is a bit of a play on words: the accepted output is\n\u201cgolden\u201d, and you keep gold in vaults.)</p>\n<p>The vault abstraction defines an API for storing and retrieving accepted (and received) output.</p>\n<p><tt>godkjenn</tt> provides a simple vault, <tt>FSVault</tt>, that stores its data on the filesystem. Other vaults can be provided\nvia a plugin system.</p>\n</div>\n<div id=\"verification\">\n<h3>Verification</h3>\n<p>The core verification algorithm compares new received data with the accepted data for a given test. If there\u2019s a\nmismatch or if not accepted output exists, this triggers test failure and instructs the user on what to do next.</p>\n</div>\n<div id=\"diffing\">\n<h3>Diffing</h3>\n<p>When an approval test fails, <tt>godkjenn</tt> tries to provide a diff showing the user how the received outputs differs from\nthe accepted. The user can provide a diffing algorithm for producing this diff.</p>\n</div>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Internally godkjenn uses a simple <tt>dict</tt> for holding its configuration information. Top-level values\nare stored as keys in the <tt>dict</tt>. Each plugin type has a top-level entry pointing to a <tt>dict</tt> mapping\nplugin names to plugin-specific configurations. So for example, the configuration might look like this:</p>\n<pre>{\n    'vault': {\n        'fs-vault': {\n            ... configuration for fs-vault plugin\n        }\n    }\n}\n</pre>\n<p>Since testing frameworks provide different configuration methods, godkjenn leaves it up to each test framework\nintegration to figure out how to load the configuration. Ideally, godkjenn will have sane-enough defaults to work\nwithout explicit configuration; this is an aspiration, and may not be practical in all cases.</p>\n<p>For examples of hwo to configure godkjenn, see the \u201cexamples\u201d directory.</p>\n<div id=\"configuration-with-pytest\">\n<h3>Configuration with pytest</h3>\n<p>The pytest integration looks for a \u201cgodkjenn_config\u201d entry in the pytest INI configuration. <a href=\"https://docs.pytest.org/en/latest/customize.html\" rel=\"nofollow\">Pytest configuration is\nfairly complex</a>, so we\u2019ll let its documentation tell you how to\nspecify an INI file. In the end, though, the \u201cgodkjenn_config\u201d entry should contain the filename of a TOML file\ncontaining the godkjenn configuration. This path is interpreted relative to the pytest root directory; if it\u2019s not\nspecified, godkjenn looks for \u201cgodkjenn.toml\u201d (again in the pytest root directory). A missing config file is OK and is\nnot treated as an error.</p>\n<p>For example, your <tt>pytest.ini</tt> might look like this:</p>\n<pre>[pytest]\ngodkjenn_config = godkjenn.toml\n</pre>\n<p>Then your <tt>godkjenn.toml</tt> file might look like this:</p>\n<pre>[godkjenn]\nvault_type = 'fs-vault'\n</pre>\n<p>This would specify that you want to use the \u2018fs-vault\u2019 plugin for storing results. If there were configuration options\nfor the \u2018fs-vault\u2019 plugin, the TOML file might also include something like this:</p>\n<pre>[godkjenn.vault.fs-vault]\noption_a = 42\noption_b = \"so long and thanks for all the fish\"\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6471962, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "8b1711eb0a74307a66f935c6d21b43da", "sha256": "6544d6bdabfa94ca9db44f17cb1d9c7fb6c29bc30069769cc35c301daa6e1183"}, "downloads": -1, "filename": "godkjenn-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8b1711eb0a74307a66f935c6d21b43da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10375, "upload_time": "2019-12-12T07:32:20", "upload_time_iso_8601": "2019-12-12T07:32:20.179590Z", "url": "https://files.pythonhosted.org/packages/6e/96/664a3cdea2ae0898506c127465fe0dbc9ae7f00672b59dec9eae7f65b6a4/godkjenn-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08fffb262f508a348b05cdc0b4cebeff", "sha256": "151c01390070caf76d7a8f0ba93709662b3da031414eba5a323cc4bf4e11393c"}, "downloads": -1, "filename": "godkjenn-0.1.3.tar.gz", "has_sig": false, "md5_digest": "08fffb262f508a348b05cdc0b4cebeff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8216, "upload_time": "2019-12-12T07:32:22", "upload_time_iso_8601": "2019-12-12T07:32:22.404374Z", "url": "https://files.pythonhosted.org/packages/8f/bd/63c0f86db4d05c0256cd37f144e7c1f9b066a80eb90819e315954eb44fee/godkjenn-0.1.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c12f31c4d280e8a467309eb297aa8f10", "sha256": "c771301059397f4e72c8908e8d5b2aa5678aa3b7adb33f98a0bad81dec6abff3"}, "downloads": -1, "filename": "godkjenn-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c12f31c4d280e8a467309eb297aa8f10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10821, "upload_time": "2019-12-12T09:53:23", "upload_time_iso_8601": "2019-12-12T09:53:23.500198Z", "url": "https://files.pythonhosted.org/packages/79/56/61d448dec47d0a72e78dbd3618a1850d1efb58987f18fb236870751de08a/godkjenn-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b876923530178629a0b82ec1b9bc970", "sha256": "acdcdf1a35fd7fca809bebeb899a84badecfd12630a237493ad12e6fabba5162"}, "downloads": -1, "filename": "godkjenn-0.3.0.tar.gz", "has_sig": false, "md5_digest": "3b876923530178629a0b82ec1b9bc970", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8681, "upload_time": "2019-12-12T09:53:24", "upload_time_iso_8601": "2019-12-12T09:53:24.792775Z", "url": "https://files.pythonhosted.org/packages/df/3c/4430bb4ab64edb9768c59c010220cbc205d0bab8f271d5375a7cbeaa296b/godkjenn-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "a33b1e3cf3442bcb78af78651066ee0f", "sha256": "44bed24be926c9ee3ebefb117eaccf464c46bd3a5f5fddcd892567412e77e602"}, "downloads": -1, "filename": "godkjenn-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a33b1e3cf3442bcb78af78651066ee0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10968, "upload_time": "2019-12-12T10:42:44", "upload_time_iso_8601": "2019-12-12T10:42:44.453885Z", "url": "https://files.pythonhosted.org/packages/c6/41/d1f27c3ce5a9fa50bc407c93db5af1032a190303591e63eaf3dc7fbd7a42/godkjenn-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01188a758c9152787235f11af1cdfa45", "sha256": "9f172da6e31e1c57f5eb6a5db419b6d12b60db1bfb58c63612c6e7424c5dd9fe"}, "downloads": -1, "filename": "godkjenn-0.3.1.tar.gz", "has_sig": false, "md5_digest": "01188a758c9152787235f11af1cdfa45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8823, "upload_time": "2019-12-12T10:42:46", "upload_time_iso_8601": "2019-12-12T10:42:46.066781Z", "url": "https://files.pythonhosted.org/packages/30/da/f3b805c1297c1aa3a30f628b97cc85a8c17228eeaa0361252f051d42b241/godkjenn-0.3.1.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "5043aa795f7440c14c4781cda5aea9f3", "sha256": "a9f6a6d950ba94d404a3f6df46e8f6464ac416c1bdd8abf4017833018871f407"}, "downloads": -1, "filename": "godkjenn-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5043aa795f7440c14c4781cda5aea9f3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10939, "upload_time": "2019-12-21T14:35:20", "upload_time_iso_8601": "2019-12-21T14:35:20.985697Z", "url": "https://files.pythonhosted.org/packages/f4/3d/fcc7c769d843437dcec1d7141ec3233c537f1c1fdaeb7aae2ad05d60f425/godkjenn-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2977008d3b14317a149f5f27f8a976a3", "sha256": "503b0c0c222ad8b0cf3d889359e6052cf55354d6d4eda9d052d940147b4a2630"}, "downloads": -1, "filename": "godkjenn-0.4.1.tar.gz", "has_sig": false, "md5_digest": "2977008d3b14317a149f5f27f8a976a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8800, "upload_time": "2019-12-21T14:35:22", "upload_time_iso_8601": "2019-12-21T14:35:22.313537Z", "url": "https://files.pythonhosted.org/packages/2b/87/99a8d711c429bed5e0a4141006b76383480b323f50438ae09ae8e00c0c9f/godkjenn-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "3a8adc817100fff4091f1b59c6cfef02", "sha256": "7e23ec2ec589973174597d49cd008a72c79968247af3f3a5288e69640e96c0b7"}, "downloads": -1, "filename": "godkjenn-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3a8adc817100fff4091f1b59c6cfef02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16201, "upload_time": "2020-01-12T16:39:22", "upload_time_iso_8601": "2020-01-12T16:39:22.329381Z", "url": "https://files.pythonhosted.org/packages/88/18/a51e9112716460fe7ca643c8f3cd3d82395098c64657f69be1e627924a1c/godkjenn-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5fc56a2abf3a164faaab97f60b80e1d3", "sha256": "7db0d01aa98c393e458f733a85505c70c609db15341d32ef20505620596aa8c0"}, "downloads": -1, "filename": "godkjenn-0.5.0.tar.gz", "has_sig": false, "md5_digest": "5fc56a2abf3a164faaab97f60b80e1d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11927, "upload_time": "2020-01-12T16:39:23", "upload_time_iso_8601": "2020-01-12T16:39:23.983272Z", "url": "https://files.pythonhosted.org/packages/0d/ec/2f70609a42353c4fbfb83d9e7383d92b964be60d435cc5894ebd513b44cb/godkjenn-0.5.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "a0bd19286af9ff303a110a06b087e574", "sha256": "e90b09aa1e6d026b74a8161335fc6c763be8c1d3e4fc3df44b4cf7942a51f3f1"}, "downloads": -1, "filename": "godkjenn-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a0bd19286af9ff303a110a06b087e574", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13254, "upload_time": "2020-01-17T09:12:38", "upload_time_iso_8601": "2020-01-17T09:12:38.527749Z", "url": "https://files.pythonhosted.org/packages/e7/e3/3c0676c9082eda6941fe963e40877bb93f0ea23bfa153314889c0ab51d52/godkjenn-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b60ff9b48082b0132a5e8ccde912d9e0", "sha256": "fc4f800344eb7a0efe22f96aab69a336e690b7c4802a254b283c60ff25e5fc39"}, "downloads": -1, "filename": "godkjenn-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b60ff9b48082b0132a5e8ccde912d9e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12348, "upload_time": "2020-01-17T09:12:40", "upload_time_iso_8601": "2020-01-17T09:12:40.533022Z", "url": "https://files.pythonhosted.org/packages/88/4c/d9da76f39356810bc48f37c25676b3f21cdb7da7b053fb5a4c17b9067aa6/godkjenn-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c6029dfa55d39de788f2e1b2c4a3e24d", "sha256": "27de71a0b7557eeefcd6bff84ef3106b4af0133757596aac36136fe3420dbf17"}, "downloads": -1, "filename": "godkjenn-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c6029dfa55d39de788f2e1b2c4a3e24d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13259, "upload_time": "2020-01-17T09:23:38", "upload_time_iso_8601": "2020-01-17T09:23:38.094045Z", "url": "https://files.pythonhosted.org/packages/53/55/e312a8959dec562b7c1d47599b0331e4dd8c1e15148665a4d6ce50af029a/godkjenn-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79e79f96fc3b03d92f9e94f2310a4746", "sha256": "68755fe4eb068c874b05b7aff0a75433dae8cc4f4cd199411be4fe084fd40616"}, "downloads": -1, "filename": "godkjenn-1.1.0.tar.gz", "has_sig": false, "md5_digest": "79e79f96fc3b03d92f9e94f2310a4746", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12382, "upload_time": "2020-01-17T09:23:40", "upload_time_iso_8601": "2020-01-17T09:23:40.095405Z", "url": "https://files.pythonhosted.org/packages/8c/ce/b53fcaa6acb5ad37cd41fca4cd6215d1eb0547142ebdc36041d3cc983dbb/godkjenn-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c6029dfa55d39de788f2e1b2c4a3e24d", "sha256": "27de71a0b7557eeefcd6bff84ef3106b4af0133757596aac36136fe3420dbf17"}, "downloads": -1, "filename": "godkjenn-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c6029dfa55d39de788f2e1b2c4a3e24d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13259, "upload_time": "2020-01-17T09:23:38", "upload_time_iso_8601": "2020-01-17T09:23:38.094045Z", "url": "https://files.pythonhosted.org/packages/53/55/e312a8959dec562b7c1d47599b0331e4dd8c1e15148665a4d6ce50af029a/godkjenn-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79e79f96fc3b03d92f9e94f2310a4746", "sha256": "68755fe4eb068c874b05b7aff0a75433dae8cc4f4cd199411be4fe084fd40616"}, "downloads": -1, "filename": "godkjenn-1.1.0.tar.gz", "has_sig": false, "md5_digest": "79e79f96fc3b03d92f9e94f2310a4746", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12382, "upload_time": "2020-01-17T09:23:40", "upload_time_iso_8601": "2020-01-17T09:23:40.095405Z", "url": "https://files.pythonhosted.org/packages/8c/ce/b53fcaa6acb5ad37cd41fca4cd6215d1eb0547142ebdc36041d3cc983dbb/godkjenn-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:59 2020"}