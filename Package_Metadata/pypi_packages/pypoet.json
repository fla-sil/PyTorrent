{"info": {"author": "S\u00e9bastien Eustace", "author_email": "sebastien@eustace.io", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "Poet: Dependency Management for Python\n======================================\n\n.. figure:: https://travis-ci.org/sdispater/poet.svg\n   :alt: Poet build status\n\n   Poet build status\n\nPoet helps you declare, manage and install dependencies of Python\nprojects, ensuring you have the right stack everywhere.\n\nThe package is **highly experimental** at the moment so expect things to\nchange and break. However, if you feel adventurous I'd gladly appreciate\nfeedback and pull requests.\n\n.. figure:: https://raw.githubusercontent.com/sdispater/poet/develop/assets/poet-install.gif\n   :alt: Poet Install\n\n   Poet Install\n\nInstallation\n------------\n\n.. code:: bash\n\n    pip install pypoet\n\nEnable tab completion for Bash, Fish, or Zsh\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``poet`` supports generating completion scripts for Bash, Fish, and Zsh.\nSee ``poet help completions`` for full details, but the gist is as\nsimple as using one of the following:\n\n.. code:: bash\n\n    # Bash\n    $ poet completions bash > /etc/bash_completion.d/poet.bash-completion\n\n    # Bash (macOS/Homebrew)\n    $ poet completions bash > $(brew --prefix)/etc/bash_completion.d/poet.bash-completion\n\n    # Fish\n    $ poet completions fish > ~/.config/fish/completions/poet.fish\n\n    # Zsh\n    $ poet completions zsh > ~/.zfunc/_poet\n\n*Note:* you may need to restart your shell in order for the changes to\ntake effect.\n\nFor ``zsh``, you must then add the following line in your ``~/.zshrc``\nbefore ``compinit``:\n\n.. code:: zsh\n\n    fpath+=~/.zfunc\n\nIntroduction\n------------\n\n``poet`` is a tool to handle dependencies installation, building and\npackaging of Python packages. It only needs one file to do all of that:\n``poetry.toml``.\n\n.. code:: toml\n\n    [package]\n    name = \"pypoet\"\n    version = \"0.1.0\"\n    description = \"Poet helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere.\"\n\n    license = \"MIT\"\n\n    authors = [\n        \"S\u00e9bastien Eustace <sebastien@eustace.io>\"\n    ]\n\n    readme = 'README.md'\n\n    repository = \"https://github.com/sdispater/poet\"\n    homepage = \"https://github.com/sdispater/poet\"\n\n    keywords = ['packaging', 'poet']\n\n    include = ['poet/**/*', 'LICENSE']\n\n    python = [\"~2.7\", \"^3.2\"]\n\n\n    [dependencies]\n    toml = \"^0.9\"\n    requests = \"^2.13\"\n    semantic_version = \"^2.6\"\n    pygments = \"^2.2\"\n    twine = \"^1.8\"\n    wheel = \"^0.29\"\n    pip-tools = \"^1.8.2\"\n    cleo = { git = \"https://github.com/sdispater/cleo.git\", branch = \"master\" }\n\n    [dev-dependencies]\n    pytest = \"^3.0\"\n    pytest-cov = \"^2.4\"\n    coverage = \"<4.0\"\n    httpretty = \"^0.8.14\"\n\n    [scripts]\n    poet = 'poet:app.run'\n\nThere are some things we can notice here:\n\n-  It will try to enforce `semantic versioning <http://semver.org>`__ as\n   the best practice in version naming.\n-  You can specify the readme, included and excluded files: no more\n   ``MANIFEST.in``. ``poet`` will also use VCS ignore files (like\n   ``.gitignore``) to populate the ``exclude`` section.\n-  Keywords (up to 5) can be specified and will act as tags on the\n   packaging site.\n-  The dependencies sections support caret, tilde, wildcard, inequality\n   and multiple requirements.\n-  You must specify the python versions for which your package is\n   compatible.\n\n``poet`` will also detect if you are inside a virtualenv and install the\npackages accordingly. So, ``poet`` can be installed globally and used\neverywhere.\n\nWhy?\n----\n\nPackaging system and dependency management in Python is rather\nconvoluted and hard to understand for newcomers. Even for seasoned\ndevelopers it might be cumbersome at times to create all files needed in\na Python project: ``setup.py``, ``requirements.txt``, ``setup.cfg``,\n``MANIFEST.in``.\n\nSo I wanted a tool that would limit everything to a single configuration\nfile to do everything: dependency management, packaging and publishing.\n\nIt takes inspiration in tools that exist in other languages, like\n``composer`` (PHP) or ``cargo`` (Rust).\n\nNote that there is no magic here, ``poet`` uses existing tools (``pip``,\n``twine``, ``setuptools``, ``distutils``, ``pip-tools``) under the hood\nto achieve that in a more intuitive way.\n\nCommands\n--------\n\ninit\n~~~~\n\nThis command will help you create a ``poetry.toml`` file interactively\nby prompting you to provide basic information about your package.\n\nIt will interactively ask you to fill in the fields, while using some\nsmart defaults.\n\n.. code:: bash\n\n    poet init\n\nHowever, if you just want a basic template and fill the information\ndirectly, you can just do:\n\n.. code:: bash\n\n    poet init default\n\nOptions\n^^^^^^^\n\n-  ``--name``: Name of the package.\n-  ``--description``: Description of the package.\n-  ``--author``: Author of the package.\n-  ``--require``: Package to require with a version constraint. Should\n   be in format ``foo:1.0.0``.\n-  ``--require-dev``: Development requirements, see ``--require``.\n-  ``--index``: Index to use when searching for packages.\n\ninstall\n~~~~~~~\n\nThe ``install`` command reads the ``poetry.toml`` file from the current\ndirectory, resolves the dependencies, and installs them.\n\n.. code:: bash\n\n    poet install\n\nIf there is a ``poetry.lock`` file in the current directory, it will use\nthe exact versions from there instead of resolving them. This ensures\nthat everyone using the library will get the same versions of the\ndependencies.\n\nIf there is no ``poetry.lock`` file, Poet will create one after\ndependency resolution.\n\nYou can specify to the command that yo do not want the development\ndependencies installed by passing the ``--no-dev`` option.\n\n.. code:: bash\n\n    poet install --no-dev\n\nYou can also specify the features you want installed by passing the\n``--f|--features`` option (See `Features <#features>`__ for more info)\n\n.. code:: bash\n\n    poet install --features \"mysql pgsql\"\n    poet install -f mysql -f pgsql\n\nOptions\n^^^^^^^\n\n-  ``--no-dev``: Do not install dev dependencies.\n-  ``-f|--features``: Features to install (multiple values allowed).\n-  ``--no-progress``: Removes the progress display that can mess with\n   some terminals or scripts which don't handle backspace characters.\n-  ``--index``: The index to use when installing packages.\n\nupdate\n~~~~~~\n\nIn order to get the latest versions of the dependencies and to update\nthe ``poetry.lock`` file, you should use the ``update`` command.\n\n.. code:: bash\n\n    poet update\n\nThis will resolve all dependencies of the project and write the exact\nversions into ``poetry.lock``.\n\nIf you just want to update a few packages and not all, you can list them\nas such:\n\n.. code:: bash\n\n    poet update requests toml\n\nOptions\n^^^^^^^\n\n-  ``--no-progress``: Removes the progress display that can mess with\n   some terminals or scripts which don't handle backspace characters.\n-  ``--index``: The index to use when installing packages.\n\npackage\n~~~~~~~\n\nThe ``package`` command builds the source and wheels archives.\n\nOptions\n^^^^^^^\n\n-  ``--no-universal``: Do not build a universal wheel.\n-  ``--no-wheels``: Build only the source package.\n-  ``-c|--clean``: Make a clean package.\n\npublish\n~~~~~~~\n\nThis command builds (if not already built) and publishes the package to\nthe remote repository.\n\nIt will automatically register the package before uploading if this is\nthe first time it is submitted.\n\nOptions\n^^^^^^^\n\n-  ``-r|--repository``: The repository to register the package to\n   (default: ``pypi``). Should match a section of your ``~/.pypirc``\n   file.\n\nsearch\n~~~~~~\n\nThis command searches for packages on a remote index.\n\n.. code:: bash\n\n    poet search requests pendulum\n\nOptions\n^^^^^^^\n\n-  ``-i|--index``: The index to use.\n-  ``-N|--only-name``: Search only in name.\n\nlock\n~~~~\n\nThis command locks (without installing) the dependencies specified in\n``poetry.toml``.\n\n.. code:: bash\n\n    poet lock\n\nOptions\n^^^^^^^\n\n-  ``--no-progress``: Removes the progress display that can mess with\n   some terminals or scripts which don't handle backspace characters.\n-  ``-i|--index``: The index to use.\n-  ``-f|--force``: Force locking.\n\ncheck\n~~~~~\n\nThe ``check`` command will check if the ``poetry.toml`` file is valid.\n\n.. code:: bash\n\n    poet check\n\nThe ``poetry.toml`` file\n------------------------\n\nA ``poetry.toml`` file is composed of multiple sections.\n\npackage\n~~~~~~~\n\nThis section describes the specifics of the package\n\nname\n^^^^\n\nThe name of the package. **Required**\n\nversion\n^^^^^^^\n\nThe version of the package. **Required**\n\nThis should follow `semantic versioning <http://semver.org/>`__. However\nit will not be enforced and you remain free to follow another\nspecification.\n\ndescription\n^^^^^^^^^^^\n\nA short description of the package. **Required**\n\nlicense\n^^^^^^^\n\nThe license of the package.\n\nThe recommended notation for the most common licenses is (alphabetical):\n\n-  Apache-2.0\n-  BSD-2-Clause\n-  BSD-3-Clause\n-  BSD-4-Clause\n-  GPL-2.0\n-  GPL-2.0+\n-  GPL-3.0\n-  GPL-3.0+\n-  LGPL-2.1\n-  LGPL-2.1+\n-  LGPL-3.0\n-  LGPL-3.0+\n-  MIT\n\nOptional, but it is highly recommended to supply this. More identifiers\nare listed at the `SPDX Open Source License\nRegistry <https://www.spdx.org/licenses/>`__.\n\nauthors\n^^^^^^^\n\nThe authors of the package. This is a list of authors and should contain\nat least one author.\n\nAuthors must be in the form ``name <email>``.\n\nreadme\n^^^^^^\n\nThe readme file of the package. **Required**\n\nThe file can be either ``README.rst`` or ``README.md``. If it's a\nmarkdown file you have to install the\n`pandoc <https://github.com/jgm/pandoc>`__ utility so that it can be\nautomatically converted to a RestructuredText file.\n\nYou also need to have the\n`pypandoc <https://pypi.python.org/pypi/pypandoc/>`__ package installed.\nIf you install ``poet`` via ``pip`` you can use the ``markdown-readme``\nextra to do so.\n\n.. code:: bash\n\n    pip install pypoet[markdown-readme]\n\nhomepage\n^^^^^^^^\n\nAn URL to the website of the project. **Optional**\n\nrepository\n^^^^^^^^^^\n\nAn URL to the repository of the project. **Optional**\n\ndocumentation\n^^^^^^^^^^^^^\n\nAn URL to the documentation of the project. **Optional**\n\nkeywords\n^^^^^^^^\n\nA list of keywords (max: 5) that the package is related to. **Optional**\n\npython\n^^^^^^\n\nA list of Python versions for which the package is compatible.\n**Required**\n\ninclude and exclude\n^^^^^^^^^^^^^^^^^^^\n\nA list of patterns that will be included in the final package.\n\nYou can explicitly specify to Poet that a set of globs should be ignored\nor included for the purposes of packaging. The globs specified in the\nexclude field identify a set of files that are not included when a\npackage is built.\n\nIf a VCS is being used for a package, the exclude field will be seeded\nwith the VCS\u2019 ignore settings (``.gitignore`` for git for example).\n\n.. code:: toml\n\n    [package]\n    # ...\n    include = [\"package/**/*.py\", \"package/**/.c\"]\n\n.. code:: toml\n\n    exclude = [\"package/excluded.py\"]\n\nIf you packages lies elsewhere (say in a ``src`` directory), you can\ntell ``poet`` to find them from there:\n\n.. code:: toml\n\n    include = { from = 'src', include = '**/*' }\n\nSimilarly, you can tell that the ``src`` directory represent the ``foo``\npackage:\n\n.. code:: toml\n\n    include = { from = 'src', include = '**/*', as = 'foo' }\n\n``dependencies`` and ``dev-dependencies``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPoet is configured to look for dependencies on\n`PyPi <https://pypi.python.org/pypi>`__ by default. Only the name and a\nversion string are required in this case.\n\n.. code:: toml\n\n    [dependencies]\n    requests = \"^2.13.0\"\n\nCaret requirement\n^^^^^^^^^^^^^^^^^\n\n**Caret requirements** allow SemVer compatible updates to a specified\nversion. An update is allowed if the new version number does not modify\nthe left-most non-zero digit in the major, minor, patch grouping. In\nthis case, if we ran ``poet update requests``, poet would update us to\nversion ``2.14.0`` if it was available, but would not update us to\n``3.0.0``. If instead we had specified the version string as\n``^0.1.13``, poet would update to ``0.1.14`` but not ``0.2.0``.\n``0.0.x`` is not considered compatible with any other version.\n\nHere are some more examples of caret requirements and the versions that\nwould be allowed with them:\n\n.. code:: text\n\n    ^1.2.3 := >=1.2.3 <2.0.0\n    ^1.2 := >=1.2.0 <2.0.0\n    ^1 := >=1.0.0 <2.0.0\n    ^0.2.3 := >=0.2.3 <0.3.0\n    ^0.0.3 := >=0.0.3 <0.0.4\n    ^0.0 := >=0.0.0 <0.1.0\n    ^0 := >=0.0.0 <1.0.0\n\nTilde requirements\n^^^^^^^^^^^^^^^^^^\n\n**Tilde requirements** specify a minimal version with some ability to\nupdate. If you specify a major, minor, and patch version or only a major\nand minor version, only patch-level changes are allowed. If you only\nspecify a major version, then minor- and patch-level changes are\nallowed.\n\n``~1.2.3`` is an example of a tilde requirement.\n\n.. code:: text\n\n    ~1.2.3 := >=1.2.3 <1.3.0\n    ~1.2 := >=1.2.0 <1.3.0\n    ~1 := >=1.0.0 <2.0.0\n\nWildcard requirements\n^^^^^^^^^^^^^^^^^^^^^\n\n**Wildcard requirements** allow for any version where the wildcard is\npositioned.\n\n``*``, ``1.*`` and ``1.2.*`` are examples of wildcard requirements.\n\n.. code:: text\n\n    * := >=0.0.0\n    1.* := >=1.0.0 <2.0.0\n    1.2.* := >=1.2.0 <1.3.0\n\nInequality requirements\n^^^^^^^^^^^^^^^^^^^^^^^\n\n**Inequality requirements** allow manually specifying a version range or\nan exact version to depend on.\n\nHere are some examples of inequality requirements:\n\n.. code:: text\n\n    >= 1.2.0\n    > 1\n    < 2\n    != 1.2.3\n\nMultiple requirements\n^^^^^^^^^^^^^^^^^^^^^\n\nMultiple version requirements can also be separated with a comma, e.g.\n``>= 1.2, < 1.5``.\n\n``git`` dependencies\n^^^^^^^^^^^^^^^^^^^^\n\nTo depend on a library located in a ``git`` repository, the minimum\ninformation you need to specify is the location of the repository with\nthe git key:\n\n.. code:: toml\n\n    [dependencies]\n    requests = { git = \"https://github.com/kennethreitz/requests.git\" }\n\nSince we haven\u2019t specified any other information, Poet assumes that we\nintend to use the latest commit on the ``master`` branch to build our\nproject. You can combine the ``git`` key with the ``rev``, ``tag``, or\n``branch`` keys to specify something else. Here's an example of\nspecifying that you want to use the latest commit on a branch named\n``next``:\n\n.. code:: toml\n\n    [dependencies]\n    requests = { git = \"https://github.com/kennethreitz/requests.git\", branch = \"next\" }\n\nPython restricted dependencies\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nYou can also specify that a dependency should be installed only for\nspecific Python versions:\n\n.. code:: toml\n\n    [dependencies]\n    pathlib2 = { version = \"^2.2\", python = \"~2.7\" }\n\n.. code:: toml\n\n    [dependencies]\n    pathlib2 = { version = \"^2.2\", python = [\"~2.7\", \"^3.2\"] }\n\n``scripts``\n~~~~~~~~~~~\n\nThis section describe the scripts or executable that will be installed\nwhen installing the package\n\n.. code:: toml\n\n    [scripts]\n    poet = 'poet:app.run'\n\nHere, we will have the ``poet`` script installed which will execute\n``app.run`` in the ``poet`` package.\n\n``features``\n~~~~~~~~~~~~\n\nPoet supports features to allow expression of:\n\n-  optional dependencies, which enhance a package, but are not required;\n   and\n-  clusters of optional dependencies.\n\n.. code:: toml\n\n    [package]\n    name = \"awesome\"\n\n    [features]\n    mysql = [\"mysqlclient\"]\n    pgsql = [\"psycopg2\"]\n\n    [dependencies]\n    # These packages are mandatory and form the core of this package\u2019s distribution.\n    mandatory = \"^1.0\"\n\n    # A list of all of the optional dependencies, some of which are included in the\n    # above `features`. They can be opted into by apps.\n    psycopg2 = { version = \"^2.7\", optional = true }\n    mysqlclient = { version = \"^1.3\", optional = true }\n\nWhen installing packages, you can specify features by using the\n``-f|--features`` option:\n\n.. code:: bash\n\n    poet install --features \"mysql pgsql\"\n    poet install -f mysql -f pgsql\n\nResources\n---------\n\n-  `Official Website <https://github.com/sdispater/poet>`__\n-  `Issue Tracker <https://github.com/sdispater/poet/issues>`__", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sdispater/poet", "keywords": "packaging poet", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pypoet", "package_url": "https://pypi.org/project/pypoet/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pypoet/", "project_urls": {"Homepage": "https://github.com/sdispater/poet"}, "release_url": "https://pypi.org/project/pypoet/0.4.1/", "requires_dist": ["cleo (<0.7.0,>=0.6.0)", "jinja2 (>=2.9.6,<3.0.0)", "packaging (<17.0.0,>=16.8.0)", "pathlib2 (<3.0.0,>=2.2.0)", "pip-tools (<2.0.0,>=1.9.0)", "pygments (<3.0.0,>=2.2.0)", "requests (<3.0.0,>=2.13.0)", "requests-toolbelt (>=0.7.0,<0.8.0)", "semantic-version (<3.0.0,>=2.6.0)", "toml (<0.10.0,>=0.9.0)", "twine (<2.0.0,>=1.8.0)", "wheel (<0.30.0,>=0.29.0)", "pypandoc (<2.0.0,>=1.3.3); extra == 'markdown-readme'"], "requires_python": "", "summary": "Poet helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere.", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<img alt=\"Poet build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/877b24c9917cc37c0581854eaf13c2ab228cd9e8/68747470733a2f2f7472617669732d63692e6f72672f7364697370617465722f706f65742e737667\">\n<p>Poet build status</p>\n</div>\n<p>Poet helps you declare, manage and install dependencies of Python\nprojects, ensuring you have the right stack everywhere.</p>\n<p>The package is <strong>highly experimental</strong> at the moment so expect things to\nchange and break. However, if you feel adventurous I\u2019d gladly appreciate\nfeedback and pull requests.</p>\n<div>\n<img alt=\"Poet Install\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bdd2cb03a22e9dacf866250027656c818f19dc05/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7364697370617465722f706f65742f646576656c6f702f6173736574732f706f65742d696e7374616c6c2e676966\">\n<p>Poet Install</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install pypoet\n</pre>\n<div id=\"enable-tab-completion-for-bash-fish-or-zsh\">\n<h3>Enable tab completion for Bash, Fish, or Zsh</h3>\n<p><tt>poet</tt> supports generating completion scripts for Bash, Fish, and Zsh.\nSee <tt>poet help completions</tt> for full details, but the gist is as\nsimple as using one of the following:</p>\n<pre><span class=\"c1\"># Bash\n</span>$ poet completions bash &gt; /etc/bash_completion.d/poet.bash-completion\n\n<span class=\"c1\"># Bash (macOS/Homebrew)\n</span>$ poet completions bash &gt; <span class=\"k\">$(</span>brew --prefix<span class=\"k\">)</span>/etc/bash_completion.d/poet.bash-completion\n\n<span class=\"c1\"># Fish\n</span>$ poet completions fish &gt; ~/.config/fish/completions/poet.fish\n\n<span class=\"c1\"># Zsh\n</span>$ poet completions zsh &gt; ~/.zfunc/_poet\n</pre>\n<p><em>Note:</em> you may need to restart your shell in order for the changes to\ntake effect.</p>\n<p>For <tt>zsh</tt>, you must then add the following line in your <tt><span class=\"pre\">~/.zshrc</span></tt>\nbefore <tt>compinit</tt>:</p>\n<pre><span class=\"nv\">fpath</span><span class=\"o\">+=</span>~/.zfunc\n</pre>\n</div>\n</div>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p><tt>poet</tt> is a tool to handle dependencies installation, building and\npackaging of Python packages. It only needs one file to do all of that:\n<tt>poetry.toml</tt>.</p>\n<pre><span class=\"k\">[package]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"pypoet\"</span>\n<span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"0.1.0\"</span>\n<span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"s\">\"Poet helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere.\"</span>\n\n<span class=\"n\">license</span> <span class=\"o\">=</span> <span class=\"s\">\"MIT\"</span>\n\n<span class=\"n\">authors</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s\">\"S\u00e9bastien Eustace &lt;sebastien@eustace.io&gt;\"</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">readme</span> <span class=\"o\">=</span> <span class=\"s\">'README.md'</span>\n\n<span class=\"n\">repository</span> <span class=\"o\">=</span> <span class=\"s\">\"https://github.com/sdispater/poet\"</span>\n<span class=\"n\">homepage</span> <span class=\"o\">=</span> <span class=\"s\">\"https://github.com/sdispater/poet\"</span>\n\n<span class=\"n\">keywords</span> <span class=\"o\">=</span> <span class=\"k\">['packaging', 'poet']</span>\n\n<span class=\"n\">include</span> <span class=\"o\">=</span> <span class=\"k\">['poet/**/*', 'LICENSE']</span>\n\n<span class=\"n\">python</span> <span class=\"o\">=</span> <span class=\"k\">[\"~2.7\", \"^3.2\"]</span>\n\n\n<span class=\"k\">[dependencies]</span>\n<span class=\"n\">toml</span> <span class=\"o\">=</span> <span class=\"s\">\"^0.9\"</span>\n<span class=\"n\">requests</span> <span class=\"o\">=</span> <span class=\"s\">\"^2.13\"</span>\n<span class=\"n\">semantic_version</span> <span class=\"o\">=</span> <span class=\"s\">\"^2.6\"</span>\n<span class=\"n\">pygments</span> <span class=\"o\">=</span> <span class=\"s\">\"^2.2\"</span>\n<span class=\"n\">twine</span> <span class=\"o\">=</span> <span class=\"s\">\"^1.8\"</span>\n<span class=\"n\">wheel</span> <span class=\"o\">=</span> <span class=\"s\">\"^0.29\"</span>\n<span class=\"n\">pip-tools</span> <span class=\"o\">=</span> <span class=\"s\">\"^1.8.2\"</span>\n<span class=\"n\">cleo</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">git</span> <span class=\"o\">=</span> <span class=\"s\">\"https://github.com/sdispater/cleo.git\"</span><span class=\"p\">,</span> <span class=\"n\">branch</span> <span class=\"o\">=</span> <span class=\"s\">\"master\"</span> <span class=\"p\">}</span>\n\n<span class=\"k\">[dev-dependencies]</span>\n<span class=\"n\">pytest</span> <span class=\"o\">=</span> <span class=\"s\">\"^3.0\"</span>\n<span class=\"n\">pytest-cov</span> <span class=\"o\">=</span> <span class=\"s\">\"^2.4\"</span>\n<span class=\"n\">coverage</span> <span class=\"o\">=</span> <span class=\"s\">\"&lt;4.0\"</span>\n<span class=\"n\">httpretty</span> <span class=\"o\">=</span> <span class=\"s\">\"^0.8.14\"</span>\n\n<span class=\"k\">[scripts]</span>\n<span class=\"n\">poet</span> <span class=\"o\">=</span> <span class=\"s\">'poet:app.run'</span>\n</pre>\n<p>There are some things we can notice here:</p>\n<ul>\n<li>It will try to enforce <a href=\"http://semver.org\" rel=\"nofollow\">semantic versioning</a> as\nthe best practice in version naming.</li>\n<li>You can specify the readme, included and excluded files: no more\n<tt>MANIFEST.in</tt>. <tt>poet</tt> will also use VCS ignore files (like\n<tt>.gitignore</tt>) to populate the <tt>exclude</tt> section.</li>\n<li>Keywords (up to 5) can be specified and will act as tags on the\npackaging site.</li>\n<li>The dependencies sections support caret, tilde, wildcard, inequality\nand multiple requirements.</li>\n<li>You must specify the python versions for which your package is\ncompatible.</li>\n</ul>\n<p><tt>poet</tt> will also detect if you are inside a virtualenv and install the\npackages accordingly. So, <tt>poet</tt> can be installed globally and used\neverywhere.</p>\n</div>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>Packaging system and dependency management in Python is rather\nconvoluted and hard to understand for newcomers. Even for seasoned\ndevelopers it might be cumbersome at times to create all files needed in\na Python project: <tt>setup.py</tt>, <tt>requirements.txt</tt>, <tt>setup.cfg</tt>,\n<tt>MANIFEST.in</tt>.</p>\n<p>So I wanted a tool that would limit everything to a single configuration\nfile to do everything: dependency management, packaging and publishing.</p>\n<p>It takes inspiration in tools that exist in other languages, like\n<tt>composer</tt> (PHP) or <tt>cargo</tt> (Rust).</p>\n<p>Note that there is no magic here, <tt>poet</tt> uses existing tools (<tt>pip</tt>,\n<tt>twine</tt>, <tt>setuptools</tt>, <tt>distutils</tt>, <tt><span class=\"pre\">pip-tools</span></tt>) under the hood\nto achieve that in a more intuitive way.</p>\n</div>\n<div id=\"commands\">\n<h2>Commands</h2>\n<div id=\"init\">\n<h3>init</h3>\n<p>This command will help you create a <tt>poetry.toml</tt> file interactively\nby prompting you to provide basic information about your package.</p>\n<p>It will interactively ask you to fill in the fields, while using some\nsmart defaults.</p>\n<pre>poet init\n</pre>\n<p>However, if you just want a basic template and fill the information\ndirectly, you can just do:</p>\n<pre>poet init default\n</pre>\n<div id=\"options\">\n<h4>Options</h4>\n<ul>\n<li><tt><span class=\"pre\">--name</span></tt>: Name of the package.</li>\n<li><tt><span class=\"pre\">--description</span></tt>: Description of the package.</li>\n<li><tt><span class=\"pre\">--author</span></tt>: Author of the package.</li>\n<li><tt><span class=\"pre\">--require</span></tt>: Package to require with a version constraint. Should\nbe in format <tt>foo:1.0.0</tt>.</li>\n<li><tt><span class=\"pre\">--require-dev</span></tt>: Development requirements, see <tt><span class=\"pre\">--require</span></tt>.</li>\n<li><tt><span class=\"pre\">--index</span></tt>: Index to use when searching for packages.</li>\n</ul>\n</div>\n</div>\n<div id=\"install\">\n<h3>install</h3>\n<p>The <tt>install</tt> command reads the <tt>poetry.toml</tt> file from the current\ndirectory, resolves the dependencies, and installs them.</p>\n<pre>poet install\n</pre>\n<p>If there is a <tt>poetry.lock</tt> file in the current directory, it will use\nthe exact versions from there instead of resolving them. This ensures\nthat everyone using the library will get the same versions of the\ndependencies.</p>\n<p>If there is no <tt>poetry.lock</tt> file, Poet will create one after\ndependency resolution.</p>\n<p>You can specify to the command that yo do not want the development\ndependencies installed by passing the <tt><span class=\"pre\">--no-dev</span></tt> option.</p>\n<pre>poet install --no-dev\n</pre>\n<p>You can also specify the features you want installed by passing the\n<tt><span class=\"pre\">--f|--features</span></tt> option (See <a href=\"#features\" rel=\"nofollow\">Features</a> for more info)</p>\n<pre>poet install --features <span class=\"s2\">\"mysql pgsql\"</span>\npoet install -f mysql -f pgsql\n</pre>\n<div id=\"id1\">\n<h4>Options</h4>\n<ul>\n<li><tt><span class=\"pre\">--no-dev</span></tt>: Do not install dev dependencies.</li>\n<li><tt><span class=\"pre\">-f|--features</span></tt>: Features to install (multiple values allowed).</li>\n<li><tt><span class=\"pre\">--no-progress</span></tt>: Removes the progress display that can mess with\nsome terminals or scripts which don\u2019t handle backspace characters.</li>\n<li><tt><span class=\"pre\">--index</span></tt>: The index to use when installing packages.</li>\n</ul>\n</div>\n</div>\n<div id=\"update\">\n<h3>update</h3>\n<p>In order to get the latest versions of the dependencies and to update\nthe <tt>poetry.lock</tt> file, you should use the <tt>update</tt> command.</p>\n<pre>poet update\n</pre>\n<p>This will resolve all dependencies of the project and write the exact\nversions into <tt>poetry.lock</tt>.</p>\n<p>If you just want to update a few packages and not all, you can list them\nas such:</p>\n<pre>poet update requests toml\n</pre>\n<div id=\"id2\">\n<h4>Options</h4>\n<ul>\n<li><tt><span class=\"pre\">--no-progress</span></tt>: Removes the progress display that can mess with\nsome terminals or scripts which don\u2019t handle backspace characters.</li>\n<li><tt><span class=\"pre\">--index</span></tt>: The index to use when installing packages.</li>\n</ul>\n</div>\n</div>\n<div id=\"package\">\n<h3>package</h3>\n<p>The <tt>package</tt> command builds the source and wheels archives.</p>\n<div id=\"id3\">\n<h4>Options</h4>\n<ul>\n<li><tt><span class=\"pre\">--no-universal</span></tt>: Do not build a universal wheel.</li>\n<li><tt><span class=\"pre\">--no-wheels</span></tt>: Build only the source package.</li>\n<li><tt><span class=\"pre\">-c|--clean</span></tt>: Make a clean package.</li>\n</ul>\n</div>\n</div>\n<div id=\"publish\">\n<h3>publish</h3>\n<p>This command builds (if not already built) and publishes the package to\nthe remote repository.</p>\n<p>It will automatically register the package before uploading if this is\nthe first time it is submitted.</p>\n<div id=\"id4\">\n<h4>Options</h4>\n<ul>\n<li><tt><span class=\"pre\">-r|--repository</span></tt>: The repository to register the package to\n(default: <tt>pypi</tt>). Should match a section of your <tt><span class=\"pre\">~/.pypirc</span></tt>\nfile.</li>\n</ul>\n</div>\n</div>\n<div id=\"search\">\n<h3>search</h3>\n<p>This command searches for packages on a remote index.</p>\n<pre>poet search requests pendulum\n</pre>\n<div id=\"id5\">\n<h4>Options</h4>\n<ul>\n<li><tt><span class=\"pre\">-i|--index</span></tt>: The index to use.</li>\n<li><tt><span class=\"pre\">-N|--only-name</span></tt>: Search only in name.</li>\n</ul>\n</div>\n</div>\n<div id=\"lock\">\n<h3>lock</h3>\n<p>This command locks (without installing) the dependencies specified in\n<tt>poetry.toml</tt>.</p>\n<pre>poet lock\n</pre>\n<div id=\"id6\">\n<h4>Options</h4>\n<ul>\n<li><tt><span class=\"pre\">--no-progress</span></tt>: Removes the progress display that can mess with\nsome terminals or scripts which don\u2019t handle backspace characters.</li>\n<li><tt><span class=\"pre\">-i|--index</span></tt>: The index to use.</li>\n<li><tt><span class=\"pre\">-f|--force</span></tt>: Force locking.</li>\n</ul>\n</div>\n</div>\n<div id=\"check\">\n<h3>check</h3>\n<p>The <tt>check</tt> command will check if the <tt>poetry.toml</tt> file is valid.</p>\n<pre>poet check\n</pre>\n</div>\n</div>\n<div id=\"the-poetry-toml-file\">\n<h2>The <tt>poetry.toml</tt> file</h2>\n<p>A <tt>poetry.toml</tt> file is composed of multiple sections.</p>\n<div id=\"id7\">\n<h3>package</h3>\n<p>This section describes the specifics of the package</p>\n<div id=\"name\">\n<h4>name</h4>\n<p>The name of the package. <strong>Required</strong></p>\n</div>\n<div id=\"version\">\n<h4>version</h4>\n<p>The version of the package. <strong>Required</strong></p>\n<p>This should follow <a href=\"http://semver.org/\" rel=\"nofollow\">semantic versioning</a>. However\nit will not be enforced and you remain free to follow another\nspecification.</p>\n</div>\n<div id=\"description\">\n<h4>description</h4>\n<p>A short description of the package. <strong>Required</strong></p>\n</div>\n<div id=\"license\">\n<h4>license</h4>\n<p>The license of the package.</p>\n<p>The recommended notation for the most common licenses is (alphabetical):</p>\n<ul>\n<li>Apache-2.0</li>\n<li>BSD-2-Clause</li>\n<li>BSD-3-Clause</li>\n<li>BSD-4-Clause</li>\n<li>GPL-2.0</li>\n<li>GPL-2.0+</li>\n<li>GPL-3.0</li>\n<li>GPL-3.0+</li>\n<li>LGPL-2.1</li>\n<li>LGPL-2.1+</li>\n<li>LGPL-3.0</li>\n<li>LGPL-3.0+</li>\n<li>MIT</li>\n</ul>\n<p>Optional, but it is highly recommended to supply this. More identifiers\nare listed at the <a href=\"https://www.spdx.org/licenses/\" rel=\"nofollow\">SPDX Open Source License\nRegistry</a>.</p>\n</div>\n<div id=\"authors\">\n<h4>authors</h4>\n<p>The authors of the package. This is a list of authors and should contain\nat least one author.</p>\n<p>Authors must be in the form <tt>name &lt;email&gt;</tt>.</p>\n</div>\n<div id=\"readme\">\n<h4>readme</h4>\n<p>The readme file of the package. <strong>Required</strong></p>\n<p>The file can be either <tt>README.rst</tt> or <tt>README.md</tt>. If it\u2019s a\nmarkdown file you have to install the\n<a href=\"https://github.com/jgm/pandoc\" rel=\"nofollow\">pandoc</a> utility so that it can be\nautomatically converted to a RestructuredText file.</p>\n<p>You also need to have the\n<a href=\"https://pypi.python.org/pypi/pypandoc/\" rel=\"nofollow\">pypandoc</a> package installed.\nIf you install <tt>poet</tt> via <tt>pip</tt> you can use the <tt><span class=\"pre\">markdown-readme</span></tt>\nextra to do so.</p>\n<pre>pip install pypoet<span class=\"o\">[</span>markdown-readme<span class=\"o\">]</span>\n</pre>\n</div>\n<div id=\"homepage\">\n<h4>homepage</h4>\n<p>An URL to the website of the project. <strong>Optional</strong></p>\n</div>\n<div id=\"repository\">\n<h4>repository</h4>\n<p>An URL to the repository of the project. <strong>Optional</strong></p>\n</div>\n<div id=\"documentation\">\n<h4>documentation</h4>\n<p>An URL to the documentation of the project. <strong>Optional</strong></p>\n</div>\n<div id=\"keywords\">\n<h4>keywords</h4>\n<p>A list of keywords (max: 5) that the package is related to. <strong>Optional</strong></p>\n</div>\n<div id=\"python\">\n<h4>python</h4>\n<p>A list of Python versions for which the package is compatible.\n<strong>Required</strong></p>\n</div>\n<div id=\"include-and-exclude\">\n<h4>include and exclude</h4>\n<p>A list of patterns that will be included in the final package.</p>\n<p>You can explicitly specify to Poet that a set of globs should be ignored\nor included for the purposes of packaging. The globs specified in the\nexclude field identify a set of files that are not included when a\npackage is built.</p>\n<p>If a VCS is being used for a package, the exclude field will be seeded\nwith the VCS\u2019 ignore settings (<tt>.gitignore</tt> for git for example).</p>\n<pre><span class=\"k\">[package]</span>\n<span class=\"c1\"># ...</span>\n<span class=\"n\">include</span> <span class=\"o\">=</span> <span class=\"k\">[\"package/**/*.py\", \"package/**/.c\"]</span>\n</pre>\n<pre><span class=\"n\">exclude</span> <span class=\"o\">=</span> <span class=\"k\">[\"package/excluded.py\"]</span>\n</pre>\n<p>If you packages lies elsewhere (say in a <tt>src</tt> directory), you can\ntell <tt>poet</tt> to find them from there:</p>\n<pre><span class=\"n\">include</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">from</span> <span class=\"o\">=</span> <span class=\"s\">'src'</span><span class=\"p\">,</span> <span class=\"n\">include</span> <span class=\"o\">=</span> <span class=\"s\">'**/*'</span> <span class=\"p\">}</span>\n</pre>\n<p>Similarly, you can tell that the <tt>src</tt> directory represent the <tt>foo</tt>\npackage:</p>\n<pre><span class=\"n\">include</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">from</span> <span class=\"o\">=</span> <span class=\"s\">'src'</span><span class=\"p\">,</span> <span class=\"n\">include</span> <span class=\"o\">=</span> <span class=\"s\">'**/*'</span><span class=\"p\">,</span> <span class=\"n\">as</span> <span class=\"o\">=</span> <span class=\"s\">'foo'</span> <span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n<div id=\"dependencies-and-dev-dependencies\">\n<h3><tt>dependencies</tt> and <tt><span class=\"pre\">dev-dependencies</span></tt></h3>\n<p>Poet is configured to look for dependencies on\n<a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">PyPi</a> by default. Only the name and a\nversion string are required in this case.</p>\n<pre><span class=\"k\">[dependencies]</span>\n<span class=\"n\">requests</span> <span class=\"o\">=</span> <span class=\"s\">\"^2.13.0\"</span>\n</pre>\n<div id=\"caret-requirement\">\n<h4>Caret requirement</h4>\n<p><strong>Caret requirements</strong> allow SemVer compatible updates to a specified\nversion. An update is allowed if the new version number does not modify\nthe left-most non-zero digit in the major, minor, patch grouping. In\nthis case, if we ran <tt>poet update requests</tt>, poet would update us to\nversion <tt>2.14.0</tt> if it was available, but would not update us to\n<tt>3.0.0</tt>. If instead we had specified the version string as\n<tt>^0.1.13</tt>, poet would update to <tt>0.1.14</tt> but not <tt>0.2.0</tt>.\n<tt>0.0.x</tt> is not considered compatible with any other version.</p>\n<p>Here are some more examples of caret requirements and the versions that\nwould be allowed with them:</p>\n<pre>^1.2.3 := &gt;=1.2.3 &lt;2.0.0\n^1.2 := &gt;=1.2.0 &lt;2.0.0\n^1 := &gt;=1.0.0 &lt;2.0.0\n^0.2.3 := &gt;=0.2.3 &lt;0.3.0\n^0.0.3 := &gt;=0.0.3 &lt;0.0.4\n^0.0 := &gt;=0.0.0 &lt;0.1.0\n^0 := &gt;=0.0.0 &lt;1.0.0\n</pre>\n</div>\n<div id=\"tilde-requirements\">\n<h4>Tilde requirements</h4>\n<p><strong>Tilde requirements</strong> specify a minimal version with some ability to\nupdate. If you specify a major, minor, and patch version or only a major\nand minor version, only patch-level changes are allowed. If you only\nspecify a major version, then minor- and patch-level changes are\nallowed.</p>\n<p><tt>~1.2.3</tt> is an example of a tilde requirement.</p>\n<pre>~1.2.3 := &gt;=1.2.3 &lt;1.3.0\n~1.2 := &gt;=1.2.0 &lt;1.3.0\n~1 := &gt;=1.0.0 &lt;2.0.0\n</pre>\n</div>\n<div id=\"wildcard-requirements\">\n<h4>Wildcard requirements</h4>\n<p><strong>Wildcard requirements</strong> allow for any version where the wildcard is\npositioned.</p>\n<p><tt>*</tt>, <tt>1.*</tt> and <tt>1.2.*</tt> are examples of wildcard requirements.</p>\n<pre>* := &gt;=0.0.0\n1.* := &gt;=1.0.0 &lt;2.0.0\n1.2.* := &gt;=1.2.0 &lt;1.3.0\n</pre>\n</div>\n<div id=\"inequality-requirements\">\n<h4>Inequality requirements</h4>\n<p><strong>Inequality requirements</strong> allow manually specifying a version range or\nan exact version to depend on.</p>\n<p>Here are some examples of inequality requirements:</p>\n<pre>&gt;= 1.2.0\n&gt; 1\n&lt; 2\n!= 1.2.3\n</pre>\n</div>\n<div id=\"multiple-requirements\">\n<h4>Multiple requirements</h4>\n<p>Multiple version requirements can also be separated with a comma, e.g.\n<tt>&gt;= 1.2, &lt; 1.5</tt>.</p>\n</div>\n<div id=\"git-dependencies\">\n<h4><tt>git</tt> dependencies</h4>\n<p>To depend on a library located in a <tt>git</tt> repository, the minimum\ninformation you need to specify is the location of the repository with\nthe git key:</p>\n<pre><span class=\"k\">[dependencies]</span>\n<span class=\"n\">requests</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">git</span> <span class=\"o\">=</span> <span class=\"s\">\"https://github.com/kennethreitz/requests.git\"</span> <span class=\"p\">}</span>\n</pre>\n<p>Since we haven\u2019t specified any other information, Poet assumes that we\nintend to use the latest commit on the <tt>master</tt> branch to build our\nproject. You can combine the <tt>git</tt> key with the <tt>rev</tt>, <tt>tag</tt>, or\n<tt>branch</tt> keys to specify something else. Here\u2019s an example of\nspecifying that you want to use the latest commit on a branch named\n<tt>next</tt>:</p>\n<pre><span class=\"k\">[dependencies]</span>\n<span class=\"n\">requests</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">git</span> <span class=\"o\">=</span> <span class=\"s\">\"https://github.com/kennethreitz/requests.git\"</span><span class=\"p\">,</span> <span class=\"n\">branch</span> <span class=\"o\">=</span> <span class=\"s\">\"next\"</span> <span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"python-restricted-dependencies\">\n<h4>Python restricted dependencies</h4>\n<p>You can also specify that a dependency should be installed only for\nspecific Python versions:</p>\n<pre><span class=\"k\">[dependencies]</span>\n<span class=\"n\">pathlib2</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"^2.2\"</span><span class=\"p\">,</span> <span class=\"n\">python</span> <span class=\"o\">=</span> <span class=\"s\">\"~2.7\"</span> <span class=\"p\">}</span>\n</pre>\n<pre><span class=\"k\">[dependencies]</span>\n<span class=\"n\">pathlib2</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"^2.2\"</span><span class=\"p\">,</span> <span class=\"n\">python</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"~2.7\"</span><span class=\"p\">,</span> <span class=\"s\">\"^3.2\"</span><span class=\"p\">]</span> <span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n<div id=\"scripts\">\n<h3><tt>scripts</tt></h3>\n<p>This section describe the scripts or executable that will be installed\nwhen installing the package</p>\n<pre><span class=\"k\">[scripts]</span>\n<span class=\"n\">poet</span> <span class=\"o\">=</span> <span class=\"s\">'poet:app.run'</span>\n</pre>\n<p>Here, we will have the <tt>poet</tt> script installed which will execute\n<tt>app.run</tt> in the <tt>poet</tt> package.</p>\n</div>\n<div id=\"features\">\n<h3><tt>features</tt></h3>\n<p>Poet supports features to allow expression of:</p>\n<ul>\n<li>optional dependencies, which enhance a package, but are not required;\nand</li>\n<li>clusters of optional dependencies.</li>\n</ul>\n<pre><span class=\"k\">[package]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"awesome\"</span>\n\n<span class=\"k\">[features]</span>\n<span class=\"n\">mysql</span> <span class=\"o\">=</span> <span class=\"k\">[\"mysqlclient\"]</span>\n<span class=\"n\">pgsql</span> <span class=\"o\">=</span> <span class=\"k\">[\"psycopg2\"]</span>\n\n<span class=\"k\">[dependencies]</span>\n<span class=\"c1\"># These packages are mandatory and form the core of this package\u2019s distribution.</span>\n<span class=\"n\">mandatory</span> <span class=\"o\">=</span> <span class=\"s\">\"^1.0\"</span>\n\n<span class=\"c1\"># A list of all of the optional dependencies, some of which are included in the</span>\n<span class=\"c1\"># above `features`. They can be opted into by apps.</span>\n<span class=\"n\">psycopg2</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"^2.7\"</span><span class=\"p\">,</span> <span class=\"n\">optional</span> <span class=\"o\">=</span> <span class=\"n\">true</span> <span class=\"p\">}</span>\n<span class=\"n\">mysqlclient</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"^1.3\"</span><span class=\"p\">,</span> <span class=\"n\">optional</span> <span class=\"o\">=</span> <span class=\"n\">true</span> <span class=\"p\">}</span>\n</pre>\n<p>When installing packages, you can specify features by using the\n<tt><span class=\"pre\">-f|--features</span></tt> option:</p>\n<pre>poet install --features <span class=\"s2\">\"mysql pgsql\"</span>\npoet install -f mysql -f pgsql\n</pre>\n</div>\n</div>\n<div id=\"resources\">\n<h2>Resources</h2>\n<ul>\n<li><a href=\"https://github.com/sdispater/poet\" rel=\"nofollow\">Official Website</a></li>\n<li><a href=\"https://github.com/sdispater/poet/issues\" rel=\"nofollow\">Issue Tracker</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2833059, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "38bf7f829a9b7c1d2802c9b53b11791a", "sha256": "a99f07915e1fe41ab8dc33684f4468082f99eeb7eda2765fb18e54bf2d76fe71"}, "downloads": -1, "filename": "pypoet-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "38bf7f829a9b7c1d2802c9b53b11791a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32244, "upload_time": "2017-03-31T21:22:02", "upload_time_iso_8601": "2017-03-31T21:22:02.721319Z", "url": "https://files.pythonhosted.org/packages/f2/0a/37250b0ede08f5ffb7350ebfd6b93bfbf44782da9f04c02dc8d374d301a2/pypoet-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22113ed56f9125bd695ed7908b18b692", "sha256": "d5affbb4bca3e3f245c4a4fb51d0b21fe4cb13c254fc80cd2f29db4ddb0d62b4"}, "downloads": -1, "filename": "pypoet-0.1.0.tar.gz", "has_sig": false, "md5_digest": "22113ed56f9125bd695ed7908b18b692", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22530, "upload_time": "2017-03-31T21:22:04", "upload_time_iso_8601": "2017-03-31T21:22:04.729368Z", "url": "https://files.pythonhosted.org/packages/2e/14/436f022c21378290a43ff361b048434c43f50ac565dcf430fe63db89ade2/pypoet-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "819205097992ec8136a1f7e1e01a18cf", "sha256": "a1b276ed40b15fe721ae8ba0465f3c68d7e58b0fdb0b431ba08b4b5428e24f93"}, "downloads": -1, "filename": "pypoet-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "819205097992ec8136a1f7e1e01a18cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32233, "upload_time": "2017-03-31T21:30:11", "upload_time_iso_8601": "2017-03-31T21:30:11.276814Z", "url": "https://files.pythonhosted.org/packages/d9/f6/c8703a856e138852fa83b8d643b8a1e07e925412942b479e25b8c8f2ed18/pypoet-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "974824b35b18fa378bd570ce06ba1900", "sha256": "06e669251eb17ff644a21143c734635a9d04624c444dd6724de6c6cfe17cd6de"}, "downloads": -1, "filename": "pypoet-0.1.1.tar.gz", "has_sig": false, "md5_digest": "974824b35b18fa378bd570ce06ba1900", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22499, "upload_time": "2017-03-31T21:30:13", "upload_time_iso_8601": "2017-03-31T21:30:13.326593Z", "url": "https://files.pythonhosted.org/packages/58/1f/077fd5b266aa8546bad89dc758756a7d62aa8d28398123360f156a13c35d/pypoet-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "aa96382d0c1314f68de903c30e9c4ec0", "sha256": "50f9c6f5c248dc91852faddf0a3c2b239d991c1061886c9cc01f964c1f7a627b"}, "downloads": -1, "filename": "pypoet-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aa96382d0c1314f68de903c30e9c4ec0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32506, "upload_time": "2017-03-31T23:57:32", "upload_time_iso_8601": "2017-03-31T23:57:32.954593Z", "url": "https://files.pythonhosted.org/packages/ae/f0/4f3e88c71a9c7a3d0c65e4921374b568469fc889adbd587df6376e4effc6/pypoet-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ae2e26e0ffedcaa6638362c202e3a95", "sha256": "70b1cfcd449b373156d7c8b829b4b5f7df23679ef4b70093fb533549f80f9d81"}, "downloads": -1, "filename": "pypoet-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7ae2e26e0ffedcaa6638362c202e3a95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22616, "upload_time": "2017-03-31T23:57:34", "upload_time_iso_8601": "2017-03-31T23:57:34.896617Z", "url": "https://files.pythonhosted.org/packages/80/c8/a111c2ebbac211a3c68a7ffc21b6727ee9c84894070da075fb867036bb22/pypoet-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b7a542bd52d88909c08d750b83fb3141", "sha256": "560644e296106a62b99b165e52ab6cb56b04841ccaa4d150bc7eaa643f8ea660"}, "downloads": -1, "filename": "pypoet-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b7a542bd52d88909c08d750b83fb3141", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 37899, "upload_time": "2017-04-04T17:35:26", "upload_time_iso_8601": "2017-04-04T17:35:26.414629Z", "url": "https://files.pythonhosted.org/packages/58/b5/1b00271509258ea896aac601af962898cf5587ebf5e1d8981086b902ade7/pypoet-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1efdeb735c78aaec972039ad1a1b06e8", "sha256": "d9dcc6ea9505528cdf1fe5699f197819d03aaef43e567aebc1550f4a940485fe"}, "downloads": -1, "filename": "pypoet-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1efdeb735c78aaec972039ad1a1b06e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29808, "upload_time": "2017-04-04T17:35:27", "upload_time_iso_8601": "2017-04-04T17:35:27.917548Z", "url": "https://files.pythonhosted.org/packages/0a/9c/72d94423233dba09f7788c6180e6bc7b0f9a7059e2c9e4cdd4062385d039/pypoet-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4e6fe13f523758b72e2e85f8dd300f3b", "sha256": "9260640d4500a01ea4f18dfeee0ee9919196875d55aaa09ddeece04436709448"}, "downloads": -1, "filename": "pypoet-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4e6fe13f523758b72e2e85f8dd300f3b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41578, "upload_time": "2017-04-11T22:50:41", "upload_time_iso_8601": "2017-04-11T22:50:41.259857Z", "url": "https://files.pythonhosted.org/packages/50/97/d574f530f6838ffb4ddbd6558195a9c8e850af7b15c721f64d4d676b0c8a/pypoet-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abe6dbdb84187ec653345946a452075e", "sha256": "8d731b7b82e0fb7f86515a3e4bfd663256005c95527863bcb2fda6d90b2874f2"}, "downloads": -1, "filename": "pypoet-0.3.0.tar.gz", "has_sig": false, "md5_digest": "abe6dbdb84187ec653345946a452075e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32510, "upload_time": "2017-04-11T22:50:43", "upload_time_iso_8601": "2017-04-11T22:50:43.048929Z", "url": "https://files.pythonhosted.org/packages/f2/80/9792e90a057f47009dfe37ed4961916473da674ef310f06e8801abd8585e/pypoet-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "0c9d787e0db93fdd5d446a70aad0083e", "sha256": "e3f9cdd037487803f84929d2b013a63675c211c81291859abe3c66616507b91f"}, "downloads": -1, "filename": "pypoet-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0c9d787e0db93fdd5d446a70aad0083e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41593, "upload_time": "2017-04-11T23:01:29", "upload_time_iso_8601": "2017-04-11T23:01:29.518986Z", "url": "https://files.pythonhosted.org/packages/9a/3d/b978d14b827a1ea97cd834c7ef9d982621a948bfd80610293747e5bfdf7f/pypoet-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "333a7e8813341d0e3ceeafe212f5e4e9", "sha256": "5f7d18ddb281cafe7b3d2bd3875fdd0028d681cf66ee6df263cf8381e671481e"}, "downloads": -1, "filename": "pypoet-0.3.1.tar.gz", "has_sig": false, "md5_digest": "333a7e8813341d0e3ceeafe212f5e4e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32532, "upload_time": "2017-04-11T23:01:31", "upload_time_iso_8601": "2017-04-11T23:01:31.603365Z", "url": "https://files.pythonhosted.org/packages/9a/21/d948dc3e54128b2d3045ad556da9dc445fe089428c4be4218ac285db4240/pypoet-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "10cc6bc55b04e8fffe8ad34e530c3677", "sha256": "9f5486f22a407ee7dc59b98bd71c67d92280df2bdbfa5df53ae03425b7c60305"}, "downloads": -1, "filename": "pypoet-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "10cc6bc55b04e8fffe8ad34e530c3677", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 42737, "upload_time": "2017-04-13T23:57:09", "upload_time_iso_8601": "2017-04-13T23:57:09.119038Z", "url": "https://files.pythonhosted.org/packages/90/74/58472b20a2b3d6acf10c5b9c662f2f7b9f8144162dfd0e2f34ef485478cb/pypoet-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d3b2a061997e8560f3a06e6d29e04a3", "sha256": "93ae5f8bd862ae10b98449bc11c809272368f47c6e10bb5e89dc4ec1830e73b7"}, "downloads": -1, "filename": "pypoet-0.3.2.tar.gz", "has_sig": false, "md5_digest": "6d3b2a061997e8560f3a06e6d29e04a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33756, "upload_time": "2017-04-13T23:57:11", "upload_time_iso_8601": "2017-04-13T23:57:11.080332Z", "url": "https://files.pythonhosted.org/packages/37/79/378cc16571d7404e09cf789a507607f837982e833b4b01c52bf3cffe08b7/pypoet-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "929d368640eb63f022eb7e7f81167adf", "sha256": "2a8a23540f48e61bf2d58b994d85a60edaf7ec6b3363336050d0795c02d19a51"}, "downloads": -1, "filename": "pypoet-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "929d368640eb63f022eb7e7f81167adf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 51795, "upload_time": "2017-04-25T16:15:03", "upload_time_iso_8601": "2017-04-25T16:15:03.783391Z", "url": "https://files.pythonhosted.org/packages/93/00/a126f8713cc9fbc5a6526d831e45ae32b96cf92119f02071cde9ba954680/pypoet-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7bc90b8e667f76b8d1049c5a2b0b5217", "sha256": "84f4e654ab7cede9e2cdfaff06c0456f4481ef2fa5c4ff5a2bf6953f1ecfa653"}, "downloads": -1, "filename": "pypoet-0.4.0.tar.gz", "has_sig": false, "md5_digest": "7bc90b8e667f76b8d1049c5a2b0b5217", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41173, "upload_time": "2017-04-25T16:15:06", "upload_time_iso_8601": "2017-04-25T16:15:06.435815Z", "url": "https://files.pythonhosted.org/packages/8e/d9/911304b86c32d82afe55aff45be2145f7a8f193e110899b7a0669bfcf041/pypoet-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "bd99d00583e176eed9acc0bf39540a65", "sha256": "8b5e49e67de7b7c692434025100f669fc0cd501a08cc5b64d6f4d819d627aace"}, "downloads": -1, "filename": "pypoet-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd99d00583e176eed9acc0bf39540a65", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 51829, "upload_time": "2017-04-26T21:50:13", "upload_time_iso_8601": "2017-04-26T21:50:13.697593Z", "url": "https://files.pythonhosted.org/packages/88/ab/6b2b7238c27c65339d4f31f63621bbcbfdbc93a65a639a2d655b7600f3e8/pypoet-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "506700732b843cd454dbc0d0c34b19cb", "sha256": "7ad7e4d19b84f706490e16e961722c53a460f86ae223df315c8fba1eeebd6cba"}, "downloads": -1, "filename": "pypoet-0.4.1.tar.gz", "has_sig": false, "md5_digest": "506700732b843cd454dbc0d0c34b19cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41295, "upload_time": "2017-04-26T21:50:15", "upload_time_iso_8601": "2017-04-26T21:50:15.393891Z", "url": "https://files.pythonhosted.org/packages/b2/ec/43f48da3ec74215a8081e3706553f80c289243052eb584f49d8b525bd34f/pypoet-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bd99d00583e176eed9acc0bf39540a65", "sha256": "8b5e49e67de7b7c692434025100f669fc0cd501a08cc5b64d6f4d819d627aace"}, "downloads": -1, "filename": "pypoet-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd99d00583e176eed9acc0bf39540a65", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 51829, "upload_time": "2017-04-26T21:50:13", "upload_time_iso_8601": "2017-04-26T21:50:13.697593Z", "url": "https://files.pythonhosted.org/packages/88/ab/6b2b7238c27c65339d4f31f63621bbcbfdbc93a65a639a2d655b7600f3e8/pypoet-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "506700732b843cd454dbc0d0c34b19cb", "sha256": "7ad7e4d19b84f706490e16e961722c53a460f86ae223df315c8fba1eeebd6cba"}, "downloads": -1, "filename": "pypoet-0.4.1.tar.gz", "has_sig": false, "md5_digest": "506700732b843cd454dbc0d0c34b19cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41295, "upload_time": "2017-04-26T21:50:15", "upload_time_iso_8601": "2017-04-26T21:50:15.393891Z", "url": "https://files.pythonhosted.org/packages/b2/ec/43f48da3ec74215a8081e3706553f80c289243052eb584f49d8b525bd34f/pypoet-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:20 2020"}