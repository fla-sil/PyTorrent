{"info": {"author": "Jelle Smet", "author_email": "development@smetj.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: PyPy"], "description": "::\n\n              __       __    __\n    .--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n    |  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n    |________|__|_____|__|__|_____|_____|__|__|_____|\n                                       version 2.1.2\n\n    Build composable event pipeline servers with minimal effort.\n\n\n    ===================\n    wishbone.output.tcp\n    ===================\n\n    Version: 1.0.0\n\n    Submit event data to a TCP socket.\n    ----------------------------------\n\n\n        Writes data to a tcp socket.\n\n        When <data> is of type list, all elements\n        will be joined using <delimiter> and submitted together.\n\n        Parameters:\n\n            - selection(str)(\"@data\")\n               |  The part of the event to submit externally.\n               |  Use an empty string to refer to the complete event.\n\n            - host(string)(\"localhost\")\n               |  The host to submit to.\n\n            - port(int)(19283)\n               |  The port to submit to.\n\n            - timeout(int)(1)\n               |  The time in seconds to timeout when connecting\n\n            - delimiter(str)(\"\\n\")*\n               |  A delimiter to add to each event.\n\n\n        Queues:\n\n            - inbox\n               |  Incoming events submitted to the outside.\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/smetj/wishbone-output-tcp/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smetj/wishbone-output-tcp", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "wishbone_output_tcp", "package_url": "https://pypi.org/project/wishbone_output_tcp/", "platform": "Linux", "project_url": "https://pypi.org/project/wishbone_output_tcp/", "project_urls": {"Download": "https://github.com/smetj/wishbone-output-tcp/tarball/master", "Homepage": "https://github.com/smetj/wishbone-output-tcp"}, "release_url": "https://pypi.org/project/wishbone_output_tcp/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "A Wishbone output module to submit event data to a TCP socket.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre>          __       __    __\n.--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n|  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n|________|__|_____|__|__|_____|_____|__|__|_____|\n                                   version 2.1.2\n\nBuild composable event pipeline servers with minimal effort.\n\n\n===================\nwishbone.output.tcp\n===================\n\nVersion: 1.0.0\n\nSubmit event data to a TCP socket.\n----------------------------------\n\n\n    Writes data to a tcp socket.\n\n    When &lt;data&gt; is of type list, all elements\n    will be joined using &lt;delimiter&gt; and submitted together.\n\n    Parameters:\n\n        - selection(str)(\"@data\")\n           |  The part of the event to submit externally.\n           |  Use an empty string to refer to the complete event.\n\n        - host(string)(\"localhost\")\n           |  The host to submit to.\n\n        - port(int)(19283)\n           |  The port to submit to.\n\n        - timeout(int)(1)\n           |  The time in seconds to timeout when connecting\n\n        - delimiter(str)(\"\\n\")*\n           |  A delimiter to add to each event.\n\n\n    Queues:\n\n        - inbox\n           |  Incoming events submitted to the outside.\n</pre>\n\n          </div>"}, "last_serial": 2043137, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ffa46c9eb12d808e2dbe72ed4e815868", "sha256": "17ae8c7450f73e54b2b8f1bdb7028a8da9f69384a412247906c4a420c337a3aa"}, "downloads": -1, "filename": "wishbone_output_tcp-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ffa46c9eb12d808e2dbe72ed4e815868", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3034, "upload_time": "2016-03-28T14:06:37", "upload_time_iso_8601": "2016-03-28T14:06:37.901693Z", "url": "https://files.pythonhosted.org/packages/ae/20/6c8279be81687f39d1db1e1667f383358a12116b017a672ca7fbe3e7818b/wishbone_output_tcp-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "cfbfa6e11d54c11f03be47b9100e26c6", "sha256": "5791e28a7598ad226d3f6c6b45a1e60eaa05f4a3e42eb58f7baa598df35bbdd4"}, "downloads": -1, "filename": "wishbone_output_tcp-1.0.1.tar.gz", "has_sig": false, "md5_digest": "cfbfa6e11d54c11f03be47b9100e26c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3037, "upload_time": "2016-04-03T12:41:14", "upload_time_iso_8601": "2016-04-03T12:41:14.937643Z", "url": "https://files.pythonhosted.org/packages/af/a4/2f627bf7c18d6d076a7e23e3a6d40e3a7bc9251e479b48c2edeebf3a6106/wishbone_output_tcp-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cfbfa6e11d54c11f03be47b9100e26c6", "sha256": "5791e28a7598ad226d3f6c6b45a1e60eaa05f4a3e42eb58f7baa598df35bbdd4"}, "downloads": -1, "filename": "wishbone_output_tcp-1.0.1.tar.gz", "has_sig": false, "md5_digest": "cfbfa6e11d54c11f03be47b9100e26c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3037, "upload_time": "2016-04-03T12:41:14", "upload_time_iso_8601": "2016-04-03T12:41:14.937643Z", "url": "https://files.pythonhosted.org/packages/af/a4/2f627bf7c18d6d076a7e23e3a6d40e3a7bc9251e479b48c2edeebf3a6106/wishbone_output_tcp-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:36 2020"}