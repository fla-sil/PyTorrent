{"info": {"author": "Forest Gregg", "author_email": "fgregg@datamade.us", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "============\nCensus Areas\n============\n\nThis Python library extends the Sunlight Foundation's `Census API Wrapper <https://github.com/sunlightlabs/census/>`_ to allow querying Census tracts, block groups, and blocks by Census place, as well as by  arbitrary geographies.\n\nSetup\n======\n\nGet the library and its dependencies using `pip <https://pypi.python.org/pypi/pip>`_:\n\n::\n\n    pip install census_area\n\nUsage\n======\n\n::\n\n    from census_area import Census\n\n    c = Census(\"MY_API_KEY\")\n    old_homes = c.acs5.state_place_tract(('NAME', 'B25034_010E'), 17, 14000)\n\nThe call above will return the name of the census tract and the number of homes that were built before 1939 for every tract in the City of Chicago. ``17`` is the FIPS code for Illinois and ``14000`` is the FIPS code for Chicago.\n\nBy default, this method will return a list of dictionaries, where each dictionary represents the data for one tract. \n\nWith the ``return_geometry`` argument, you can have the method return a geojson-like dictionary. Each tract is a feature, and the census variables about the tract appear in the feature's property attributes.\n::\n\n    old_homes_geojson = c.acs5.state_place_tract(('NAME', 'B25034_010E'), 17, 14000), return_geometry=True)\n\nThere are similar methods for block groups\n::\n\n    old_home_block_groups = c.acs5.state_place_blockgroup(('NAME', 'B25034_010E'), 17, 14000))\n\nAnd blocks. Note that block level geographies are only available for the short-form data from the Decennial Census\n::\n\n    owner_occupied = c.sf1.state_place_block(('NAME', 'H016F0002'), 17, 14000)\n\nThe tract and blockgroup methods are also available for the Decennial Census.\n::\n\n    owner_occupied_blockgroup = c.sf1.state_place_tract(('NAME', 'H016F0002'), 17, 14000)\n    owner_occupied_tract = c.sf1.state_place_blockgroup(('NAME', 'H016F0002'), 17, 14000)\n\n    old_homes = c.sf3.state_place_tract('NAME', 'H034010'), 17, 14000)\n    old_homes = c.sf3.state_place_blockgroup('NAME', 'H034010'), 17, 14000)\n\nIn addition to these convenient methods, there are three lower level ways to get census tracts, blocks, and groups for arbitrary geometries.\n\n::\n\n    import json\n\n    with open('my_shape.geojson') as infile:\n        my_shape_geojson = json.load(infile)\n    features = []\n    old_homes = c.acs5.geo_tract(('NAME', 'B25034_010E'), my_shape_geojson['geometry'])\n    for tract_geojson, tract_data, tract_proportion in old_homes:\n         tract_geojson['properties'].update(tract_data)\n         features.append(tract)\n\n    my_shape_with_new_data_geojson = {'type': \"FeatureCollection\", 'features': features}\n\n\nThe method takes in the census variables you want and a geojson geometry, and returns a **generator** of the tract shapes, as geojson features, and the variables for that tract. Additionally, the generator returns a \"tract proportion\"; this is the proportion of the area of the tract that falls within your target shape.\n\nSimilar methods are provided for block groups and blocks, for the ACS 5-year and Decennial Census.\n::\n\n    c.acs5.geo_blockgroup(('NAME', 'B25034_010E'), my_shape_geojson['geometry'])\n\n    c.sf1.geo_block(('NAME', 'H016F0002'), my_shape_geojson['geometry'])\n    c.sf1.geo_blockgroup(('NAME', 'H016F0002'), my_shape_geojson['geometry'])\n    c.sf1.geo_tract(('NAME', 'H016F0002'), my_shape_geojson['geometry'])\n\n    c.sf3.state_place_tract('NAME', 'H034010'), my_shape_geojson['geometry'])\n    c.sf3.state_place_blockgroup('NAME', 'H034010'), my_shape_geojson['geometry'])\n\nTeam\n====\n\n* Jean Cochrane, DataMade\n* Forest Gregg, DataMade\n\nErrors and bugs\n===============\n\nIf something is not behaving intuitively, it is a bug and should be reported.\nReport it here by creating an issue: https://github.com/datamade/census_area/issues\n\nHelp us fix the problem as quickly as possible by following `Mozilla's guidelines for reporting bugs. <https://developer.mozilla.org/en-US/docs/Mozilla/QA/Bug_writing_guidelines#General_Outline_of_a_Bug_Report>`_\n\nPatches and pull requests\n=========================\n\nYour patches are welcome. Here's our suggested workflow:\n\n* Fork the project.\n* Make your feature addition or bug fix.\n* Send us a pull request with a description of your work. Bonus points for topic branches!\n\nCopyright and attribution\n=========================\n\nCopyright (c) 2016 DataMade. Released under the `MIT License <https://github.com/datamade/your-repo-here/blob/master/LICENSE>`_.\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/datamade/census_area", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "census-area", "package_url": "https://pypi.org/project/census-area/", "platform": "", "project_url": "https://pypi.org/project/census-area/", "project_urls": {"Homepage": "https://github.com/datamade/census_area"}, "release_url": "https://pypi.org/project/census-area/0.3.2/", "requires_dist": ["esridump", "census", "shapely", "pyshp", "pyproj"], "requires_python": "", "summary": "Census data for arbitrary geographies", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This Python library extends the Sunlight Foundation\u2019s <a href=\"https://github.com/sunlightlabs/census/\" rel=\"nofollow\">Census API Wrapper</a> to allow querying Census tracts, block groups, and blocks by Census place, as well as by  arbitrary geographies.</p>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Get the library and its dependencies using <a href=\"https://pypi.python.org/pypi/pip\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install census_area\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>from census_area import Census\n\nc = Census(\"MY_API_KEY\")\nold_homes = c.acs5.state_place_tract(('NAME', 'B25034_010E'), 17, 14000)\n</pre>\n<p>The call above will return the name of the census tract and the number of homes that were built before 1939 for every tract in the City of Chicago. <tt>17</tt> is the FIPS code for Illinois and <tt>14000</tt> is the FIPS code for Chicago.</p>\n<p>By default, this method will return a list of dictionaries, where each dictionary represents the data for one tract.</p>\n<p>With the <tt>return_geometry</tt> argument, you can have the method return a geojson-like dictionary. Each tract is a feature, and the census variables about the tract appear in the feature\u2019s property attributes.</p>\n<pre>old_homes_geojson = c.acs5.state_place_tract(('NAME', 'B25034_010E'), 17, 14000), return_geometry=True)\n</pre>\n<p>There are similar methods for block groups</p>\n<pre>old_home_block_groups = c.acs5.state_place_blockgroup(('NAME', 'B25034_010E'), 17, 14000))\n</pre>\n<p>And blocks. Note that block level geographies are only available for the short-form data from the Decennial Census</p>\n<pre>owner_occupied = c.sf1.state_place_block(('NAME', 'H016F0002'), 17, 14000)\n</pre>\n<p>The tract and blockgroup methods are also available for the Decennial Census.</p>\n<pre>owner_occupied_blockgroup = c.sf1.state_place_tract(('NAME', 'H016F0002'), 17, 14000)\nowner_occupied_tract = c.sf1.state_place_blockgroup(('NAME', 'H016F0002'), 17, 14000)\n\nold_homes = c.sf3.state_place_tract('NAME', 'H034010'), 17, 14000)\nold_homes = c.sf3.state_place_blockgroup('NAME', 'H034010'), 17, 14000)\n</pre>\n<p>In addition to these convenient methods, there are three lower level ways to get census tracts, blocks, and groups for arbitrary geometries.</p>\n<pre>import json\n\nwith open('my_shape.geojson') as infile:\n    my_shape_geojson = json.load(infile)\nfeatures = []\nold_homes = c.acs5.geo_tract(('NAME', 'B25034_010E'), my_shape_geojson['geometry'])\nfor tract_geojson, tract_data, tract_proportion in old_homes:\n     tract_geojson['properties'].update(tract_data)\n     features.append(tract)\n\nmy_shape_with_new_data_geojson = {'type': \"FeatureCollection\", 'features': features}\n</pre>\n<p>The method takes in the census variables you want and a geojson geometry, and returns a <strong>generator</strong> of the tract shapes, as geojson features, and the variables for that tract. Additionally, the generator returns a \u201ctract proportion\u201d; this is the proportion of the area of the tract that falls within your target shape.</p>\n<p>Similar methods are provided for block groups and blocks, for the ACS 5-year and Decennial Census.</p>\n<pre>c.acs5.geo_blockgroup(('NAME', 'B25034_010E'), my_shape_geojson['geometry'])\n\nc.sf1.geo_block(('NAME', 'H016F0002'), my_shape_geojson['geometry'])\nc.sf1.geo_blockgroup(('NAME', 'H016F0002'), my_shape_geojson['geometry'])\nc.sf1.geo_tract(('NAME', 'H016F0002'), my_shape_geojson['geometry'])\n\nc.sf3.state_place_tract('NAME', 'H034010'), my_shape_geojson['geometry'])\nc.sf3.state_place_blockgroup('NAME', 'H034010'), my_shape_geojson['geometry'])\n</pre>\n</div>\n<div id=\"team\">\n<h2>Team</h2>\n<ul>\n<li>Jean Cochrane, DataMade</li>\n<li>Forest Gregg, DataMade</li>\n</ul>\n</div>\n<div id=\"errors-and-bugs\">\n<h2>Errors and bugs</h2>\n<p>If something is not behaving intuitively, it is a bug and should be reported.\nReport it here by creating an issue: <a href=\"https://github.com/datamade/census_area/issues\" rel=\"nofollow\">https://github.com/datamade/census_area/issues</a></p>\n<p>Help us fix the problem as quickly as possible by following <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/QA/Bug_writing_guidelines#General_Outline_of_a_Bug_Report\" rel=\"nofollow\">Mozilla\u2019s guidelines for reporting bugs.</a></p>\n</div>\n<div id=\"patches-and-pull-requests\">\n<h2>Patches and pull requests</h2>\n<p>Your patches are welcome. Here\u2019s our suggested workflow:</p>\n<ul>\n<li>Fork the project.</li>\n<li>Make your feature addition or bug fix.</li>\n<li>Send us a pull request with a description of your work. Bonus points for topic branches!</li>\n</ul>\n</div>\n<div id=\"copyright-and-attribution\">\n<h2>Copyright and attribution</h2>\n<p>Copyright (c) 2016 DataMade. Released under the <a href=\"https://github.com/datamade/your-repo-here/blob/master/LICENSE\" rel=\"nofollow\">MIT License</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 4682872, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a40065ae4507114e906f3e7298db0036", "sha256": "bf69f1212fa7ab7856bc7eb534ca5bb5eeca96664011c42aed796feb339d58a2"}, "downloads": -1, "filename": "census_area-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a40065ae4507114e906f3e7298db0036", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4628, "upload_time": "2016-11-21T16:49:32", "upload_time_iso_8601": "2016-11-21T16:49:32.632100Z", "url": "https://files.pythonhosted.org/packages/c5/38/8c83d604811b657a4cd2a88bda70e55c5c37ce7a6afa6f13fd80e382299c/census_area-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62d6af55f18f657e8d925d170397503b", "sha256": "64dbdb12cb0242b31b7e03f67baa2dc50f76339952865e748d19fa1770eaa7b2"}, "downloads": -1, "filename": "census_area-0.1.tar.gz", "has_sig": false, "md5_digest": "62d6af55f18f657e8d925d170397503b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4243, "upload_time": "2016-11-21T16:49:30", "upload_time_iso_8601": "2016-11-21T16:49:30.074525Z", "url": "https://files.pythonhosted.org/packages/e2/8a/17da2c9b83ca4de46dea200357018dad832468000172217fe56f8bd42e1e/census_area-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "8385339f2e3de575560ebe1899e948a4", "sha256": "d1ade3358397fcec8d846e574aff3d41fbbaa0e1dec766b169fe9d1efa434276"}, "downloads": -1, "filename": "census_area-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8385339f2e3de575560ebe1899e948a4", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4353, "upload_time": "2016-11-21T22:16:53", "upload_time_iso_8601": "2016-11-21T22:16:53.588532Z", "url": "https://files.pythonhosted.org/packages/02/e1/759fa3cdeb2d4ff3d1756b8be03014be93f93437545d00e3456ad02264ca/census_area-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f82cfa81fcb5996d30f2197f1b9d9f9", "sha256": "5c448d0ae9f989537d583cf30d48a280409ceca2ee92c7848c72465e07d933c7"}, "downloads": -1, "filename": "census_area-0.2.tar.gz", "has_sig": false, "md5_digest": "2f82cfa81fcb5996d30f2197f1b9d9f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4571, "upload_time": "2016-11-21T22:16:51", "upload_time_iso_8601": "2016-11-21T22:16:51.685070Z", "url": "https://files.pythonhosted.org/packages/3f/b6/0b9d71bae1ae8cd4396dde6a4aecfebabb58a2ba4f6707c260631619f023/census_area-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "691b622c9f64003ba996039b395e5779", "sha256": "e7aa458e67c0092a608133b002e93d40ad7df904f03ec714846da77714b96989"}, "downloads": -1, "filename": "census_area-0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "691b622c9f64003ba996039b395e5779", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8183, "upload_time": "2019-01-10T21:35:51", "upload_time_iso_8601": "2019-01-10T21:35:51.617021Z", "url": "https://files.pythonhosted.org/packages/5d/37/cbd97da803506d535b8c9f2b4af2b4f776de06fdb04d61fb048e66986d70/census_area-0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24917b31760722463a1a98184b7d738d", "sha256": "f43382d9b749ebb999c21ec38263ad58d27e6e88480dd148d2bbd2b82c841c69"}, "downloads": -1, "filename": "census_area-0.3.tar.gz", "has_sig": false, "md5_digest": "24917b31760722463a1a98184b7d738d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7801, "upload_time": "2019-01-10T21:35:52", "upload_time_iso_8601": "2019-01-10T21:35:52.792961Z", "url": "https://files.pythonhosted.org/packages/08/c9/35c381719b4e7ae6211a56db5147a4b4b0bf5b70090ef0325b7d955b9afa/census_area-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "a07ba0375c32d0996481c07a1ebbe890", "sha256": "67784bb480a3045b9a988de2fe5378a593655b236cfc35ef8ce82f874f163358"}, "downloads": -1, "filename": "census_area-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a07ba0375c32d0996481c07a1ebbe890", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9833, "upload_time": "2019-01-10T21:44:52", "upload_time_iso_8601": "2019-01-10T21:44:52.514641Z", "url": "https://files.pythonhosted.org/packages/9b/87/042ade13fa058f2183fdd94dc3c7e15edd3681a620e02592b454b7728810/census_area-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f30b16d1abd6bc24e940e61aef03390", "sha256": "9d419c1172c2e1b5c5f2a3914b38879e99743e785f927920f1e5b1bfe6803748"}, "downloads": -1, "filename": "census_area-0.3.1.tar.gz", "has_sig": false, "md5_digest": "4f30b16d1abd6bc24e940e61aef03390", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10077, "upload_time": "2019-01-10T21:44:53", "upload_time_iso_8601": "2019-01-10T21:44:53.667341Z", "url": "https://files.pythonhosted.org/packages/b3/55/7a7d8147ebf65d5ffdf3372a63486523547c49dda56fddf70c2276e0c6c4/census_area-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "234ed1115370a7973febdc676bf7680c", "sha256": "17e634d44be2d4deffeab938bbf6392bb32767f513b5a405e97ad64969a417e1"}, "downloads": -1, "filename": "census_area-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "234ed1115370a7973febdc676bf7680c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9844, "upload_time": "2019-01-10T21:54:56", "upload_time_iso_8601": "2019-01-10T21:54:56.129157Z", "url": "https://files.pythonhosted.org/packages/5a/22/36c74759a4b53066e819f6821fd8f67213e535f4b2335eb4d939620218ea/census_area-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c75539ced0b468a349d85a72bbb0b8b6", "sha256": "df4fe1c5f153c69bf92a6c7b59a5832af530bd0d4475b6e7616c9fa1740a07fa"}, "downloads": -1, "filename": "census_area-0.3.2.tar.gz", "has_sig": false, "md5_digest": "c75539ced0b468a349d85a72bbb0b8b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10080, "upload_time": "2019-01-10T21:54:57", "upload_time_iso_8601": "2019-01-10T21:54:57.231469Z", "url": "https://files.pythonhosted.org/packages/c5/0c/ab9de857cec1108b2bbb04adbf6880c1074ded8fa88ed6d7c9ad062d0676/census_area-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "234ed1115370a7973febdc676bf7680c", "sha256": "17e634d44be2d4deffeab938bbf6392bb32767f513b5a405e97ad64969a417e1"}, "downloads": -1, "filename": "census_area-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "234ed1115370a7973febdc676bf7680c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9844, "upload_time": "2019-01-10T21:54:56", "upload_time_iso_8601": "2019-01-10T21:54:56.129157Z", "url": "https://files.pythonhosted.org/packages/5a/22/36c74759a4b53066e819f6821fd8f67213e535f4b2335eb4d939620218ea/census_area-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c75539ced0b468a349d85a72bbb0b8b6", "sha256": "df4fe1c5f153c69bf92a6c7b59a5832af530bd0d4475b6e7616c9fa1740a07fa"}, "downloads": -1, "filename": "census_area-0.3.2.tar.gz", "has_sig": false, "md5_digest": "c75539ced0b468a349d85a72bbb0b8b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10080, "upload_time": "2019-01-10T21:54:57", "upload_time_iso_8601": "2019-01-10T21:54:57.231469Z", "url": "https://files.pythonhosted.org/packages/c5/0c/ab9de857cec1108b2bbb04adbf6880c1074ded8fa88ed6d7c9ad062d0676/census_area-0.3.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:49 2020"}