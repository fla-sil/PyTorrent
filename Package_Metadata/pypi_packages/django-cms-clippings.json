{"info": {"author": "Stuart MacKay", "author_email": "smackay@flagstonesoftware.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Framework :: Django", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "=========\nClippings\n=========\nClippings is a lightweight version of a Django-CMS Placeholder container (in \nother words a minimalist Page). It contains a single Placeholder named \"content\" \nand is designed to be used in external applications where you want display \nsnippets of content that are also editable from the Django admin.\n\nFeatures\n--------\n\n* Clippings are displayed using the show_clipping template tag. The name of\n  the clipping is passed as an argument.\n\n* Clippings display content from one or more plugins. Any plugin supported\n  by Django-CMS can be used in a Clipping.\n\n* If a Clipping cannot be found for a given name then an empty string is\n  returned. This makes it easy to deal with optional content.\n\n* Clippings are editable in the Django admin in the same way as Placeholders.\n  Content can be created for any language supported in the project.\n\n* Clippings are ideal for small sections of content. That keeps the number\n  of Pages in a Django-CMS site as small as possible, avoiding any scalability\n  issues.\n\n* Settings such as REPORT_MISSING_CLIPPING can be used to catch cases where\n  the content was set for one language but left empty for the others supported\n  by a site.\n\nThe advantage compared to using `external placeholders <http://docs.django-cms.org/en/2.4.2/extending_cms/placeholders.html>`_,\nis that there are no intermediate models mapping the slot in the template to\nPlaceholder objects. That means that the clippings can be used anywhere and\neverywhere outside the CMS with no management overhead. However there is a\ndownside to this flexibility - Clippings are only editable from the admin. You\ncannot edit them in-place on the page.\n\nExample\n-------\n\nClippings are displayed in Django templates using the show_clipping template\ntag and take a single argument - the identifier (unique for a given site)\nassigned to the Clipping when it was created::\n\n    {% show_clipping \"clipping\" %}\n\nUsing the 'with' tag makes it easy to display clippings using variables passed\nin the template context::\n\n    {% with date|date:\"Y-m\" as datestr %}\n        {% with \"news-\"|add:datestr|add:\"-review\" as identifier %}\n            {% show_clipping identifier %}\n        {% endwith %}\n    {% endwith %}\n\nHere we generate the reverse_id string from a date e.g. \"news-2013-09-review\".\n\nInternationalization\n--------------------\nClippings uses a Django-CMS placeholder so content can be fully\ninternationalized in all the languages supported by the project site.\n\nRequirements\n------------\nClippings source is based on the show_placeholder template tag from Django-CMS \nVersion 2.4.2 and currently has only been tested with that version.\n\nInstallation\n------------\nClippings is available on Pypy so installation is as easy as::\n\n    pip install django-cms-clippings\n\nYou can also get the latest source from Github::\n\n    git@github.com:StuartMacKay/django-cms-clippings.git\n\nThe add the app to INSTALLED_APPS in your settings file::\n\n    INSTALLED_APPS = (\n        ...\n        'clippings',\n        ...\n    )\n\nSettings\n--------\nClippings uses the following settings::\n\n    REPORT_MISSING_CLIPPING = True | False\n\nIf True and a clipping with the identifier cannot be found then an error is \nreported.\n\nError reporting varies depending on the value of settings.DEBUG. If it is True\nthen an exception is raised. If it is False an email is sent to the admins if\nthe SEND_BROKEN_LINK_EMAILS setting is also True.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/django-cms-clippings/", "keywords": "django,cms,editable,content,plugins", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "django-cms-clippings", "package_url": "https://pypi.org/project/django-cms-clippings/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-cms-clippings/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/django-cms-clippings/"}, "release_url": "https://pypi.org/project/django-cms-clippings/0.1/", "requires_dist": null, "requires_python": null, "summary": "Include editable content in applications integrated with django-cms sites.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Clippings is a lightweight version of a Django-CMS Placeholder container (in\nother words a minimalist Page). It contains a single Placeholder named \u201ccontent\u201d\nand is designed to be used in external applications where you want display\nsnippets of content that are also editable from the Django admin.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Clippings are displayed using the show_clipping template tag. The name of\nthe clipping is passed as an argument.</li>\n<li>Clippings display content from one or more plugins. Any plugin supported\nby Django-CMS can be used in a Clipping.</li>\n<li>If a Clipping cannot be found for a given name then an empty string is\nreturned. This makes it easy to deal with optional content.</li>\n<li>Clippings are editable in the Django admin in the same way as Placeholders.\nContent can be created for any language supported in the project.</li>\n<li>Clippings are ideal for small sections of content. That keeps the number\nof Pages in a Django-CMS site as small as possible, avoiding any scalability\nissues.</li>\n<li>Settings such as REPORT_MISSING_CLIPPING can be used to catch cases where\nthe content was set for one language but left empty for the others supported\nby a site.</li>\n</ul>\n<p>The advantage compared to using <a href=\"http://docs.django-cms.org/en/2.4.2/extending_cms/placeholders.html\" rel=\"nofollow\">external placeholders</a>,\nis that there are no intermediate models mapping the slot in the template to\nPlaceholder objects. That means that the clippings can be used anywhere and\neverywhere outside the CMS with no management overhead. However there is a\ndownside to this flexibility - Clippings are only editable from the admin. You\ncannot edit them in-place on the page.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>Clippings are displayed in Django templates using the show_clipping template\ntag and take a single argument - the identifier (unique for a given site)\nassigned to the Clipping when it was created:</p>\n<pre>{% show_clipping \"clipping\" %}\n</pre>\n<p>Using the \u2018with\u2019 tag makes it easy to display clippings using variables passed\nin the template context:</p>\n<pre>{% with date|date:\"Y-m\" as datestr %}\n    {% with \"news-\"|add:datestr|add:\"-review\" as identifier %}\n        {% show_clipping identifier %}\n    {% endwith %}\n{% endwith %}\n</pre>\n<p>Here we generate the reverse_id string from a date e.g. \u201cnews-2013-09-review\u201d.</p>\n</div>\n<div id=\"internationalization\">\n<h2>Internationalization</h2>\n<p>Clippings uses a Django-CMS placeholder so content can be fully\ninternationalized in all the languages supported by the project site.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Clippings source is based on the show_placeholder template tag from Django-CMS\nVersion 2.4.2 and currently has only been tested with that version.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Clippings is available on Pypy so installation is as easy as:</p>\n<pre>pip install django-cms-clippings\n</pre>\n<p>You can also get the latest source from Github:</p>\n<pre>git@github.com:StuartMacKay/django-cms-clippings.git\n</pre>\n<p>The add the app to INSTALLED_APPS in your settings file:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'clippings',\n    ...\n)\n</pre>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>Clippings uses the following settings:</p>\n<pre>REPORT_MISSING_CLIPPING = True | False\n</pre>\n<p>If True and a clipping with the identifier cannot be found then an error is\nreported.</p>\n<p>Error reporting varies depending on the value of settings.DEBUG. If it is True\nthen an exception is raised. If it is False an email is sent to the admins if\nthe SEND_BROKEN_LINK_EMAILS setting is also True.</p>\n</div>\n\n          </div>"}, "last_serial": 875435, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a8219545e3edf527715d94163094ccc6", "sha256": "98b702a586a17e7eae435ea16d4619e8354cc88bf9b7fb1b169a089d062e6307"}, "downloads": -1, "filename": "django-cms-clippings-0.1.tar.gz", "has_sig": false, "md5_digest": "a8219545e3edf527715d94163094ccc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7192, "upload_time": "2013-09-27T15:57:47", "upload_time_iso_8601": "2013-09-27T15:57:47.630129Z", "url": "https://files.pythonhosted.org/packages/ba/5a/c910afee6eda6fe63aa6246d133d4650cc5fac7fd133d6d86a5bab3355a1/django-cms-clippings-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a8219545e3edf527715d94163094ccc6", "sha256": "98b702a586a17e7eae435ea16d4619e8354cc88bf9b7fb1b169a089d062e6307"}, "downloads": -1, "filename": "django-cms-clippings-0.1.tar.gz", "has_sig": false, "md5_digest": "a8219545e3edf527715d94163094ccc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7192, "upload_time": "2013-09-27T15:57:47", "upload_time_iso_8601": "2013-09-27T15:57:47.630129Z", "url": "https://files.pythonhosted.org/packages/ba/5a/c910afee6eda6fe63aa6246d133d4650cc5fac7fd133d6d86a5bab3355a1/django-cms-clippings-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:04 2020"}