{"info": {"author": "Egor Orlov", "author_email": "oeegor@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Other Environment", "Intended Audience :: Developers", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Wallet-py3k\n\nPython library to read/write [Apple Wallet](http://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Introduction.html#//apple_ref/doc/uid/TP40012195-CH1-SW1) (.pkpass) files\n\nThis is a fork of https://github.com/devartis/passbook which doesn't support py3k.\n\n## Getting Started\n\n1. Get a Pass Type Id\n\n   Visit the iOS Provisioning Portal -> Pass Type IDs -> New Pass Type ID\n   Select pass type id -> Configure (Follow steps and download generated pass.cer file)\n   Use Keychain tool to export a Certificates.p12 file (need Apple Root Certificate installed)\n\n2. Generate the necessary certificate and key .pem files\n\n   ```sh\n   openssl pkcs12 -in \"Certificates.p12\" -clcerts -nokeys -out certificate.pem\n   openssl pkcs12 -in \"Certificates.p12\" -nocerts -out key.pem\n   ```\n\n## Typical Usage\n\n```python\n    from wallet.models import Pass, Barcode, StoreCard\n\n    cardInfo = StoreCard()\n    cardInfo.addPrimaryField('name', 'John Doe', 'Name')\n\n    organizationName = 'Your organization'\n    passTypeIdentifier = 'pass.com.your.organization'\n    teamIdentifier = 'AGK5BZEN3E'\n\n    passfile = Pass(cardInfo, \\\n        passTypeIdentifier=passTypeIdentifier, \\\n        organizationName=organizationName, \\\n        teamIdentifier=teamIdentifier)\n\n    passfile.serialNumber = '1234567'\n    passfile.barcode = Barcode(message = 'Barcode message')\n\n    # Including the icon and logo is necessary for the passbook to be valid.\n    passfile.addFile('icon.png', open('images/icon.png', 'rb'))\n    passfile.addFile('logo.png', open('images/logo.png', 'rb'))\n    passfile.create('certificate.pem', 'key.pem', 'wwdr.pem', '123456', 'test.pkpass') # Create and output the Passbook file (.pkpass)\n```\n## Note: Getting WWDR Certificate\n\nCertificate is available @ http://developer.apple.com/certificationauthority/AppleWWDRCA.cer\nIt can be exported from KeyChain into a .pem (e.g. wwdr.pem)\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/oeegor/wallet-py3k", "keywords": "", "license": "Copyright (c) 2012 devartis\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the\nSoftware, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions of\nthe Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY\nKIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\nPURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\nOR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n", "maintainer": "", "maintainer_email": "", "name": "wallet-py3k", "package_url": "https://pypi.org/project/wallet-py3k/", "platform": "", "project_url": "https://pypi.org/project/wallet-py3k/", "project_urls": {"Homepage": "https://github.com/oeegor/wallet-py3k"}, "release_url": "https://pypi.org/project/wallet-py3k/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "Passbook file generator", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Wallet-py3k<br><br>Python library to read/write [Apple Wallet](http://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/PassKit_PG/Chapters/Introduction.html#//apple_ref/doc/uid/TP40012195-CH1-SW1) (.pkpass) files<br><br>This is a fork of https://github.com/devartis/passbook which doesn't support py3k.<br><br>## Getting Started<br><br>1. Get a Pass Type Id<br><br>   Visit the iOS Provisioning Portal -&gt; Pass Type IDs -&gt; New Pass Type ID<br>   Select pass type id -&gt; Configure (Follow steps and download generated pass.cer file)<br>   Use Keychain tool to export a Certificates.p12 file (need Apple Root Certificate installed)<br><br>2. Generate the necessary certificate and key .pem files<br><br>   ```sh<br>   openssl pkcs12 -in \"Certificates.p12\" -clcerts -nokeys -out certificate.pem<br>   openssl pkcs12 -in \"Certificates.p12\" -nocerts -out key.pem<br>   ```<br><br>## Typical Usage<br><br>```python<br>    from wallet.models import Pass, Barcode, StoreCard<br><br>    cardInfo = StoreCard()<br>    cardInfo.addPrimaryField('name', 'John Doe', 'Name')<br><br>    organizationName = 'Your organization'<br>    passTypeIdentifier = 'pass.com.your.organization'<br>    teamIdentifier = 'AGK5BZEN3E'<br><br>    passfile = Pass(cardInfo, \\<br>        passTypeIdentifier=passTypeIdentifier, \\<br>        organizationName=organizationName, \\<br>        teamIdentifier=teamIdentifier)<br><br>    passfile.serialNumber = '1234567'<br>    passfile.barcode = Barcode(message = 'Barcode message')<br><br>    # Including the icon and logo is necessary for the passbook to be valid.<br>    passfile.addFile('icon.png', open('images/icon.png', 'rb'))<br>    passfile.addFile('logo.png', open('images/logo.png', 'rb'))<br>    passfile.create('certificate.pem', 'key.pem', 'wwdr.pem', '123456', 'test.pkpass') # Create and output the Passbook file (.pkpass)<br>```<br>## Note: Getting WWDR Certificate<br><br>Certificate is available @ http://developer.apple.com/certificationauthority/AppleWWDRCA.cer<br>It can be exported from KeyChain into a .pem (e.g. wwdr.pem)<br>\n          </div>"}, "last_serial": 4608826, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b57bae6446ccb5306c4e522541829c4f", "sha256": "95131208e752df2147a4bcec18424dfae90ffe93992ca4a603aef011c8893920"}, "downloads": -1, "filename": "wallet-py3k-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b57bae6446ccb5306c4e522541829c4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6221, "upload_time": "2015-10-20T10:31:27", "upload_time_iso_8601": "2015-10-20T10:31:27.804611Z", "url": "https://files.pythonhosted.org/packages/cc/80/b12e1b501d592dfc420ec4a8c4ab7280a5d5bef3796e98ea2f190eda256f/wallet-py3k-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "602fb06ee087b4d95e2dac6a9a2df354", "sha256": "530fbc0f91e0176071bd864074d8cd5f457cabbdf173902ae0d13507317334ce"}, "downloads": -1, "filename": "wallet-py3k-0.0.2.tar.gz", "has_sig": false, "md5_digest": "602fb06ee087b4d95e2dac6a9a2df354", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6229, "upload_time": "2015-12-09T11:06:35", "upload_time_iso_8601": "2015-12-09T11:06:35.418022Z", "url": "https://files.pythonhosted.org/packages/4a/e3/9471939f5038ce2a1163da597c96cf053b70c9cfbe9f5d9835ae7a9f193a/wallet-py3k-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "da5d70a6e6bc3d98a9c39c0950901247", "sha256": "84e8ea498bfa125178bd521fdd9b10e3e4afcce69213630570ffc892cf399146"}, "downloads": -1, "filename": "wallet-py3k-0.0.3.tar.gz", "has_sig": false, "md5_digest": "da5d70a6e6bc3d98a9c39c0950901247", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6233, "upload_time": "2015-12-09T12:13:27", "upload_time_iso_8601": "2015-12-09T12:13:27.845852Z", "url": "https://files.pythonhosted.org/packages/44/9b/266236e018a010a09ab61ce6eae4f036d38a7ce46efe68055ac17e43cb7b/wallet-py3k-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "e26b44dd8c14c14f7a52f12a6c2caa85", "sha256": "9321d287ca876f32ba8052c69cbe9d509fc62c91d3342f3a8e35dafc03ea2332"}, "downloads": -1, "filename": "wallet-py3k-0.0.4.tar.gz", "has_sig": false, "md5_digest": "e26b44dd8c14c14f7a52f12a6c2caa85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6151, "upload_time": "2018-12-17T17:01:57", "upload_time_iso_8601": "2018-12-17T17:01:57.696246Z", "url": "https://files.pythonhosted.org/packages/d3/bd/2495dd79d9b27c16b3a80d9e225b5d0a3e4c83e278b8d1c1a30bbbb5d577/wallet-py3k-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e26b44dd8c14c14f7a52f12a6c2caa85", "sha256": "9321d287ca876f32ba8052c69cbe9d509fc62c91d3342f3a8e35dafc03ea2332"}, "downloads": -1, "filename": "wallet-py3k-0.0.4.tar.gz", "has_sig": false, "md5_digest": "e26b44dd8c14c14f7a52f12a6c2caa85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6151, "upload_time": "2018-12-17T17:01:57", "upload_time_iso_8601": "2018-12-17T17:01:57.696246Z", "url": "https://files.pythonhosted.org/packages/d3/bd/2495dd79d9b27c16b3a80d9e225b5d0a3e4c83e278b8d1c1a30bbbb5d577/wallet-py3k-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:37 2020"}