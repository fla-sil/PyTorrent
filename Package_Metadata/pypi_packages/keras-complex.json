{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Documentation :: Sphinx", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Complex-Valued Neural Networks in Keras with Tensorflow\n[![Documentation](https://readthedocs.org/projects/keras-complex/badge/?version=latest)](https://readthedocs.org/projects/keras-complex/badge/?version=latest) [![PyPI Status](https://img.shields.io/pypi/status/keras-complex.svg)](https://pypi.python.org/pypi/keras-complex) [![PyPI Versions](https://img.shields.io/pypi/pyversions/keras-complex.svg)](https://pypi.python.org/pypi/keras-complex) [![Build Status](https://travis-ci.org/JesperDramsch/keras-complex.svg?branch=master)](https://travis-ci.org/JesperDramsch/keras-complex) [![PyPI License](https://img.shields.io/pypi/l/keras-complex.svg)](LICENSCE.md)\n\n\n\n\n\n\n\n[Complex-valued convolutions](https://en.wikipedia.org/wiki/Convolution#Domain_of_definition) could provide some interesting results in signal processing-based deep learning. A simple(-ish) idea is including explicit phase information of time series in neural networks. This code enables complex-valued convolution in convolutional neural networks in [keras](https://keras.io) with the [TensorFlow](https://tensorflow.org/) backend. This makes the network modular and interoperable with standard keras layers and operations.\n\nThis code is very much in **Alpha**. Please consider helping out improving the code to advance together. This repository is based on the code which reproduces experiments presented in the paper [Deep Complex Networks](https://arxiv.org/abs/1705.09792). It is a port to Keras with Tensorflow-backend.\n\nRequirements\n------------\n\n- numpy\n- scipy\n- scikit-learn\n- keras\n- tensorflow 1.X or tensorflow-gpu 1.X\n\nInstall requirements for computer vision experiments with pip:\n```\npip install -f requirements.txt\n```\n\nFor the non-gpu version:\n```\npip install -f requirements-nogpu.txt\n```\n\nDepending on your Python installation you might want to use anaconda or other tools.\n\n\nInstallation\n------------\n\n```\npip install keras-complex\n```\nand\n```\npip install tensorflow-gpu\n```\n\nUsage\n-----\nBuild your neural networks with the help of keras. \n\n```python\nimport complexnn\n\nimport keras\nfrom keras import models\nfrom keras import layers\nfrom keras import optimizers\n\nmodel = models.Sequential()\n\nmodel.add(complexnn.conv.ComplexConv2D(32, (3, 3), activation='modrelu', padding='same', input_shape=input_shape))\nmodel.add(complexnn.bn.ComplexBatchNormalization())\nmodel.add(layers.MaxPooling2D((2, 2), padding='same'))\n\nmodel.compile(optimizer=optimizers.Adam(), loss='mse')\n\n```\n\n\nCitation\n--------\n\nPlease cite the original work as: \n\n```\n@ARTICLE {Trabelsi2017,\n    author  = \"Chiheb Trabelsi, Olexa Bilaniuk, Ying Zhang, Dmitriy Serdyuk, Sandeep Subramanian, Jo\u00e3o Felipe Santos, Soroush Mehri, Negar Rostamzadeh, Yoshua Bengio, Christopher J Pal\",\n    title   = \"Deep Complex Networks\",\n    journal = \"arXiv preprint arXiv:1705.09792\",\n    year    = \"2017\"\n}\n```\n\nCite this software version as:\n```\n@misc{dramsch2019complex, \n    title     = {Complex-Valued Neural Networks in Keras with Tensorflow}, \n    url       = {https://figshare.com/articles/Complex-Valued_Neural_Networks_in_Keras_with_Tensorflow/9783773/1}, \n    DOI       = {10.6084/m9.figshare.9783773}, \n    publisher = {figshare}, \n    author    = author={Dramsch, Jesper S{\\\"o}ren and Contributors}, \n    year      = {2019}\n}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JesperDramsch/keras-complex", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "keras-complex", "package_url": "https://pypi.org/project/keras-complex/", "platform": "", "project_url": "https://pypi.org/project/keras-complex/", "project_urls": {"Homepage": "https://github.com/JesperDramsch/keras-complex"}, "release_url": "https://pypi.org/project/keras-complex/0.1.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Complex values in Keras - Deep learning for humans", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Complex-Valued Neural Networks in Keras with Tensorflow</h1>\n<p><a href=\"https://readthedocs.org/projects/keras-complex/badge/?version=latest\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c4988c51423fe8afcf4ded4d2003ec7213efad95/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6b657261732d636f6d706c65782f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://pypi.python.org/pypi/keras-complex\" rel=\"nofollow\"><img alt=\"PyPI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6c729c41fe36457054b1db58935692c3522e2abd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f6b657261732d636f6d706c65782e737667\"></a> <a href=\"https://pypi.python.org/pypi/keras-complex\" rel=\"nofollow\"><img alt=\"PyPI Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bbaf314bdc1b7ae8da9317780f184aaf6a9c5d55/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6b657261732d636f6d706c65782e737667\"></a> <a href=\"https://travis-ci.org/JesperDramsch/keras-complex\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac0240238c9838cb4fc6848818809f1cbf818e1f/68747470733a2f2f7472617669732d63692e6f72672f4a65737065724472616d7363682f6b657261732d636f6d706c65782e7376673f6272616e63683d6d6173746572\"></a> <a href=\"LICENSCE.md\" rel=\"nofollow\"><img alt=\"PyPI License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5555c33587fc05265cdbafd170a256c3f3e2e58/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6b657261732d636f6d706c65782e737667\"></a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Convolution#Domain_of_definition\" rel=\"nofollow\">Complex-valued convolutions</a> could provide some interesting results in signal processing-based deep learning. A simple(-ish) idea is including explicit phase information of time series in neural networks. This code enables complex-valued convolution in convolutional neural networks in <a href=\"https://keras.io\" rel=\"nofollow\">keras</a> with the <a href=\"https://tensorflow.org/\" rel=\"nofollow\">TensorFlow</a> backend. This makes the network modular and interoperable with standard keras layers and operations.</p>\n<p>This code is very much in <strong>Alpha</strong>. Please consider helping out improving the code to advance together. This repository is based on the code which reproduces experiments presented in the paper <a href=\"https://arxiv.org/abs/1705.09792\" rel=\"nofollow\">Deep Complex Networks</a>. It is a port to Keras with Tensorflow-backend.</p>\n<h2>Requirements</h2>\n<ul>\n<li>numpy</li>\n<li>scipy</li>\n<li>scikit-learn</li>\n<li>keras</li>\n<li>tensorflow 1.X or tensorflow-gpu 1.X</li>\n</ul>\n<p>Install requirements for computer vision experiments with pip:</p>\n<pre><code>pip install -f requirements.txt\n</code></pre>\n<p>For the non-gpu version:</p>\n<pre><code>pip install -f requirements-nogpu.txt\n</code></pre>\n<p>Depending on your Python installation you might want to use anaconda or other tools.</p>\n<h2>Installation</h2>\n<pre><code>pip install keras-complex\n</code></pre>\n<p>and</p>\n<pre><code>pip install tensorflow-gpu\n</code></pre>\n<h2>Usage</h2>\n<p>Build your neural networks with the help of keras.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">complexnn</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">keras</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras</span> <span class=\"kn\">import</span> <span class=\"n\">layers</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras</span> <span class=\"kn\">import</span> <span class=\"n\">optimizers</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">()</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">complexnn</span><span class=\"o\">.</span><span class=\"n\">conv</span><span class=\"o\">.</span><span class=\"n\">ComplexConv2D</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">activation</span><span class=\"o\">=</span><span class=\"s1\">'modrelu'</span><span class=\"p\">,</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"s1\">'same'</span><span class=\"p\">,</span> <span class=\"n\">input_shape</span><span class=\"o\">=</span><span class=\"n\">input_shape</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">complexnn</span><span class=\"o\">.</span><span class=\"n\">bn</span><span class=\"o\">.</span><span class=\"n\">ComplexBatchNormalization</span><span class=\"p\">())</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">MaxPooling2D</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"s1\">'same'</span><span class=\"p\">))</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"n\">optimizers</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(),</span> <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"s1\">'mse'</span><span class=\"p\">)</span>\n</pre>\n<h2>Citation</h2>\n<p>Please cite the original work as:</p>\n<pre><code>@ARTICLE {Trabelsi2017,\n    author  = \"Chiheb Trabelsi, Olexa Bilaniuk, Ying Zhang, Dmitriy Serdyuk, Sandeep Subramanian, Jo\u00e3o Felipe Santos, Soroush Mehri, Negar Rostamzadeh, Yoshua Bengio, Christopher J Pal\",\n    title   = \"Deep Complex Networks\",\n    journal = \"arXiv preprint arXiv:1705.09792\",\n    year    = \"2017\"\n}\n</code></pre>\n<p>Cite this software version as:</p>\n<pre><code>@misc{dramsch2019complex, \n    title     = {Complex-Valued Neural Networks in Keras with Tensorflow}, \n    url       = {https://figshare.com/articles/Complex-Valued_Neural_Networks_in_Keras_with_Tensorflow/9783773/1}, \n    DOI       = {10.6084/m9.figshare.9783773}, \n    publisher = {figshare}, \n    author    = author={Dramsch, Jesper S{\\\"o}ren and Contributors}, \n    year      = {2019}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 5974412, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "3d20982ae1556a9f1a9ccfd52cc1f074", "sha256": "a796a13aab2f1b25475a633491e9274f0f2a7745666ef1346e6060c2f9108f40"}, "downloads": -1, "filename": "keras-complex-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3d20982ae1556a9f1a9ccfd52cc1f074", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31475, "upload_time": "2019-10-15T02:15:32", "upload_time_iso_8601": "2019-10-15T02:15:32.456469Z", "url": "https://files.pythonhosted.org/packages/d4/29/36ba6abad5bc722ff36a4b2dacf688e5bbf2d6f2e408a380cc113a715d54/keras-complex-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d20982ae1556a9f1a9ccfd52cc1f074", "sha256": "a796a13aab2f1b25475a633491e9274f0f2a7745666ef1346e6060c2f9108f40"}, "downloads": -1, "filename": "keras-complex-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3d20982ae1556a9f1a9ccfd52cc1f074", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31475, "upload_time": "2019-10-15T02:15:32", "upload_time_iso_8601": "2019-10-15T02:15:32.456469Z", "url": "https://files.pythonhosted.org/packages/d4/29/36ba6abad5bc722ff36a4b2dacf688e5bbf2d6f2e408a380cc113a715d54/keras-complex-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:13 2020"}