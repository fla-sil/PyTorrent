{"info": {"author": "David Wallace", "author_email": "david.wallace@goodeggs.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development"], "description": "# dbt-rpc-client\n[![PyPI version](https://badge.fury.io/py/dbt-rpc-client.svg)](https://badge.fury.io/py/dbt-rpc-client)\n![PyPI - Status](https://img.shields.io/pypi/status/dbt-rpc-client)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/dbt-rpc-client)\n![PyPI - License](https://img.shields.io/pypi/l/dbt-rpc-client)\n[![Build Status](https://travis-ci.com/goodeggs/dbt-rpc-client.svg?branch=master)](https://travis-ci.com/goodeggs/dbt-rpc-client.svg?branch=master)\n\nA python SDK for interacting with a [dbt rpc server](https://docs.getdbt.com/docs/rpc).\n\n## Installation\n\n```bash\n$ pip install dbt-rpc-client\n```\n\n## Basic Usage\n\n```python\nfrom dbt_rpc_client import DbtRpcClient\nimport requests\n\nrpc = DbtRpcClient(hostname=\"0.0.0.0\", port=8580)\n\n# Getting the current status of the dbt rpc server.\nresponse = rpc.status()\nassert isinstance(response, requests.Response)\nassert response.ok\n\n# Running dbt models via CLI command.\nresponse = rpc.cli(cli_args=\"dbt run --models @model1 +model2+\")\nassert response.ok\n\n# Running dbt models via `run` method.\nresponse = rpc.run(models=[\"@model1\", \"+model2+\"])\nassert response.ok\n\n# Polling a dbt rpc operation.\nresponse = rpc.poll(request_token=response.get(\"id\"))\nassert response.ok\nprint(response.get(\"result\").get(\"status\"))\n\n# Compiling/Running a SQL query.\nsql = \"\"\"\nselect 1\nfrom {{ ref(\"my_dbt_model\") }}\n\"\"\"\n\nresponse = rpc.compile_sql(sql=sql, name=\"my_sql_query\")\nassert response.ok\n\nresponse = rpc.run_sql(sql=sql, name=\"my_sql_query\")\nassert response.ok\n```\n\n## Contributing\n\n1. The first step to contributing is getting a copy of the source code. First, [fork `dbt-rpc-client` on GitHub](https://github.com/goodeggs/dbt-rpc-client/fork). Then, `cd` into the directory where you want your copy of the source code to live and clone the source code:\n\n```bash\n$ cd repos\n$ git clone git@github.com:YourGitHubName/dbt-rpc-client.git\n```\n\n2. Now that you have a copy of the source code on your machine, create and activate a virtual envionment for `dbt-rpc-client`:\n\n```bash\n$ python3 -mvenv ~/.venvs/dbt-rpc-client\n$ source ~/.venvs/dbt-rpc-client/bin/activate\n```\n\n2. Once inside the virtual environment, run `make dev_install` at the root of the repository:\n\n```bash\n$ (dbt-rpc-client) make dev_install\n```\n\n3. Run the [tox](https://tox.readthedocs.io/en/latest/) testing suite in the appropriate python environment to ensure things are working properly:\n```bash\n$ (dbt-rpc-client) tox -e py37\n```\n\nTo format your code using [isort](https://github.com/timothycrosley/isort) and [flake8](http://flake8.pycqa.org/en/latest/index.html) before commiting changes, run the following commands:\n\n```bash\n$ (dbt-rpc-client) make isort\n$ (dbt-rpc-client) make flake8\n```\n\nOnce you've confirmed that your changes work and the testing suite passes, feel free to put out a PR!\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/goodeggs/dbt-rpc-client", "keywords": "dbt python rpc", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dbt-rpc-client", "package_url": "https://pypi.org/project/dbt-rpc-client/", "platform": "", "project_url": "https://pypi.org/project/dbt-rpc-client/", "project_urls": {"Homepage": "https://github.com/goodeggs/dbt-rpc-client"}, "release_url": "https://pypi.org/project/dbt-rpc-client/0.1.0/", "requires_dist": ["requests (>=2.22.0)", "attrs (>=19.3.0)"], "requires_python": ">=3.6", "summary": "A python SDK for the dbt RPC server.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dbt-rpc-client</h1>\n<p><a href=\"https://badge.fury.io/py/dbt-rpc-client\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70f2d2ef2e095bf50b15ea9ff1696cd693ccca3b/68747470733a2f2f62616467652e667572792e696f2f70792f6462742d7270632d636c69656e742e737667\"></a>\n<img alt=\"PyPI - Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9686f500e6e65bf0630b91dac64a319be9043f12/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f6462742d7270632d636c69656e74\">\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d6a605335bb8b5cb5cd2f96963b5d1cba6fe9a9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6462742d7270632d636c69656e74\">\n<img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b159aa275c92f117e66dd90570af572ce20fd8b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6462742d7270632d636c69656e74\">\n<a href=\"https://travis-ci.com/goodeggs/dbt-rpc-client.svg?branch=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca7830043ba39501b04e2cd5b5052238880f1c86/68747470733a2f2f7472617669732d63692e636f6d2f676f6f64656767732f6462742d7270632d636c69656e742e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>A python SDK for interacting with a <a href=\"https://docs.getdbt.com/docs/rpc\" rel=\"nofollow\">dbt rpc server</a>.</p>\n<h2>Installation</h2>\n<pre>$ pip install dbt-rpc-client\n</pre>\n<h2>Basic Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dbt_rpc_client</span> <span class=\"kn\">import</span> <span class=\"n\">DbtRpcClient</span>\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"n\">rpc</span> <span class=\"o\">=</span> <span class=\"n\">DbtRpcClient</span><span class=\"p\">(</span><span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"s2\">\"0.0.0.0\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8580</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Getting the current status of the dbt rpc server.</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">ok</span>\n\n<span class=\"c1\"># Running dbt models via CLI command.</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">cli</span><span class=\"p\">(</span><span class=\"n\">cli_args</span><span class=\"o\">=</span><span class=\"s2\">\"dbt run --models @model1 +model2+\"</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">ok</span>\n\n<span class=\"c1\"># Running dbt models via `run` method.</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"@model1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"+model2+\"</span><span class=\"p\">])</span>\n<span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">ok</span>\n\n<span class=\"c1\"># Polling a dbt rpc operation.</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">poll</span><span class=\"p\">(</span><span class=\"n\">request_token</span><span class=\"o\">=</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"id\"</span><span class=\"p\">))</span>\n<span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">ok</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"result\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"status\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Compiling/Running a SQL query.</span>\n<span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">select 1</span>\n<span class=\"s2\">from {{ ref(\"my_dbt_model\") }}</span>\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">compile_sql</span><span class=\"p\">(</span><span class=\"n\">sql</span><span class=\"o\">=</span><span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"my_sql_query\"</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">ok</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">run_sql</span><span class=\"p\">(</span><span class=\"n\">sql</span><span class=\"o\">=</span><span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"my_sql_query\"</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">ok</span>\n</pre>\n<h2>Contributing</h2>\n<ol>\n<li>The first step to contributing is getting a copy of the source code. First, <a href=\"https://github.com/goodeggs/dbt-rpc-client/fork\" rel=\"nofollow\">fork <code>dbt-rpc-client</code> on GitHub</a>. Then, <code>cd</code> into the directory where you want your copy of the source code to live and clone the source code:</li>\n</ol>\n<pre>$ <span class=\"nb\">cd</span> repos\n$ git clone git@github.com:YourGitHubName/dbt-rpc-client.git\n</pre>\n<ol>\n<li>Now that you have a copy of the source code on your machine, create and activate a virtual envionment for <code>dbt-rpc-client</code>:</li>\n</ol>\n<pre>$ python3 -mvenv ~/.venvs/dbt-rpc-client\n$ <span class=\"nb\">source</span> ~/.venvs/dbt-rpc-client/bin/activate\n</pre>\n<ol>\n<li>Once inside the virtual environment, run <code>make dev_install</code> at the root of the repository:</li>\n</ol>\n<pre>$ <span class=\"o\">(</span>dbt-rpc-client<span class=\"o\">)</span> make dev_install\n</pre>\n<ol>\n<li>Run the <a href=\"https://tox.readthedocs.io/en/latest/\" rel=\"nofollow\">tox</a> testing suite in the appropriate python environment to ensure things are working properly:</li>\n</ol>\n<pre>$ <span class=\"o\">(</span>dbt-rpc-client<span class=\"o\">)</span> tox -e py37\n</pre>\n<p>To format your code using <a href=\"https://github.com/timothycrosley/isort\" rel=\"nofollow\">isort</a> and <a href=\"http://flake8.pycqa.org/en/latest/index.html\" rel=\"nofollow\">flake8</a> before commiting changes, run the following commands:</p>\n<pre>$ <span class=\"o\">(</span>dbt-rpc-client<span class=\"o\">)</span> make isort\n$ <span class=\"o\">(</span>dbt-rpc-client<span class=\"o\">)</span> make flake8\n</pre>\n<p>Once you've confirmed that your changes work and the testing suite passes, feel free to put out a PR!</p>\n\n          </div>"}, "last_serial": 6496228, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d752d65a7931229082982c688e717c72", "sha256": "a0674ea01278c61d76af2fdaec54ce50fc1e6c2767cc7a8bc2a050c31e4bfab6"}, "downloads": -1, "filename": "dbt_rpc_client-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d752d65a7931229082982c688e717c72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5407, "upload_time": "2020-01-21T20:45:56", "upload_time_iso_8601": "2020-01-21T20:45:56.230978Z", "url": "https://files.pythonhosted.org/packages/3f/d9/b4ab8c4327cd0f8cc962296ac03dd2f3609b4625ada6160eb10c5a8b3c67/dbt_rpc_client-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc984b0da77a2a3823a2b735f77f57a2", "sha256": "7f85e85b89a33439da47046bbb7a07ec62ef832e542e77c137f83fe929bb4d02"}, "downloads": -1, "filename": "dbt_rpc_client-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bc984b0da77a2a3823a2b735f77f57a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4234, "upload_time": "2020-01-21T20:45:57", "upload_time_iso_8601": "2020-01-21T20:45:57.775595Z", "url": "https://files.pythonhosted.org/packages/33/11/0057d0f3d78c4738f7d5464aec4e415f536c438097cb861542a4196f115e/dbt_rpc_client-0.1.0.tar.gz", "yanked": false}], "0.1.0a1": [{"comment_text": "", "digests": {"md5": "04382051ec80356fb9fcfc6785c59bdd", "sha256": "2633ad2b1e04e299099d2e3ea6961206f9ea70bae0ce9f915c49ec4aecb74784"}, "downloads": -1, "filename": "dbt_rpc_client-0.1.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "04382051ec80356fb9fcfc6785c59bdd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5424, "upload_time": "2020-01-03T18:35:07", "upload_time_iso_8601": "2020-01-03T18:35:07.777160Z", "url": "https://files.pythonhosted.org/packages/c0/63/c65372f4fcddb29bf394d3c2c13fda3a96068e880d8cc6af72c4604e1afc/dbt_rpc_client-0.1.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50ba4faa4c61f626d6a97c80e834a712", "sha256": "237c985b5abd7cf9b6003790f9cfce32044569dfcbb3de5eae2edab3265c31cf"}, "downloads": -1, "filename": "dbt_rpc_client-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "50ba4faa4c61f626d6a97c80e834a712", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4225, "upload_time": "2020-01-03T18:35:10", "upload_time_iso_8601": "2020-01-03T18:35:10.119312Z", "url": "https://files.pythonhosted.org/packages/a9/3c/de7b25b32822ed764217d7e726b73f8a837a09a7dd0428bf7ebcde42a710/dbt_rpc_client-0.1.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d752d65a7931229082982c688e717c72", "sha256": "a0674ea01278c61d76af2fdaec54ce50fc1e6c2767cc7a8bc2a050c31e4bfab6"}, "downloads": -1, "filename": "dbt_rpc_client-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d752d65a7931229082982c688e717c72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5407, "upload_time": "2020-01-21T20:45:56", "upload_time_iso_8601": "2020-01-21T20:45:56.230978Z", "url": "https://files.pythonhosted.org/packages/3f/d9/b4ab8c4327cd0f8cc962296ac03dd2f3609b4625ada6160eb10c5a8b3c67/dbt_rpc_client-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc984b0da77a2a3823a2b735f77f57a2", "sha256": "7f85e85b89a33439da47046bbb7a07ec62ef832e542e77c137f83fe929bb4d02"}, "downloads": -1, "filename": "dbt_rpc_client-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bc984b0da77a2a3823a2b735f77f57a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4234, "upload_time": "2020-01-21T20:45:57", "upload_time_iso_8601": "2020-01-21T20:45:57.775595Z", "url": "https://files.pythonhosted.org/packages/33/11/0057d0f3d78c4738f7d5464aec4e415f536c438097cb861542a4196f115e/dbt_rpc_client-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:51 2020"}