{"info": {"author": "Wang Ming Rui", "author_email": "mingruimingrui@hotmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "**laser-keep-alive** is a project aimed at providing a stable run time\nenvironment for the open-source Facebook AI Research (FAIR) project,\n[Language-Agnostic SEntence Representations (LASER)](https://github.com/facebookresearch/LASER/).\n\n\n# Installation\n\nCurrently installation can only be done using the source code.\n\n```bash\ngit clone https://github.com/mingruimingrui/laser-keep-alive.git\ncd laser-keep-alive\npython setup.py install\n```\n\nTo ensure hardware compatibility, an explicit installation of\n[`pytorch>=1.0`](https://pytorch.org/) might be necessary.\n\n\n# Basic Usage\n\n## Script Example\n\nTo use this package in your python script, the easiest way is to import the\n`laser.SentenceEncoder` class.\n\n```python\nfrom laser import SentenceEncoder\n\n# Loading the model\nsent_encoder = SentenceEncoder(\n    lang='en',\n    model_path=path_to_model_file,\n    bpe_codes=path_to_bpe_codes_file,\n)\n\n# Encode texts\n# Given a List[str]\nembeddings = sent_encoder.encode_sentences(list_of_texts)\n\n# Where embeddings is a 2D np.ndarray\n# of shape [num_texts, embedding_size]\n```\n\n## Commandline Tool\n\n**laser-keep-alive** can also be ran directly from the commandline.\n\n```\n$ python -m laser\nusage: python -m laser [-h] {encode,filter} ...\n\nLanguage-Agnostic SEntence Representations\n\npositional arguments:\n  {encode,filter}\n    encode         Encode a text file line by line\n    filter         Filter a parallel corpus based on similarity\n\noptional arguments:\n  -h, --help       show this help message and exit\n```\n\nAt the moment, the following commandline routines are provided.\n\n### **`encode`**\n\nEncodes a text file line by line into sentence embeddings.\nOutput formats are `.npy` and `.csv`.\nIf you are using the pretrained-model, your embedding output will have\ndimension size of 1024. In the case of `.npy` output format, this corresponds\nto byte sizes of 4096 for `np.float32` and 2048 for `np.float16`.\n(Don't worry if you don't get that last sentence)\n\n### **`filter`**\n\nFilters a parallel corpus line by line. Keeps only sentences which has\n[euclidean distance](https://en.wikipedia.org/wiki/Euclidean_distance)\nbelow a threshold (default: 1.04).\nTo apply a stricter filter, use a smaller threshold.\n\n\n# Downloading Pretrained Model\n\nPretrained models are necessary since this repository does not provide training\ncode.\n\nPlease reference [this script](https://github.com/facebookresearch/LASER/blob/master/install_models.sh)\nto download pretrained models.\n\n\n# Credits\n\nFull credit goes to [Holger Schwenk](https://github.com/hoschwenk),\nthe author of the LASER toolkit as well as FAIR.\nFor more information regarding FAIR and LASER, please visit their webpages.\n\n- FAIR Website: https://ai.facebook.com/\n- FAIR Github: https://github.com/facebookresearch\n- LASER Github: https://github.com/facebookresearch/LASER/\n\nIf you like this project, please visit the\n[LASER project page](https://github.com/facebookresearch/LASER/)\nand give it a star \u2b50.\n\n\n# License\n\n**`laser-keep-alive`** is MIT-licensed and **`LASER`** is BSD-licensed.\nIf you wish to use **`laser-keep-alive`** please remember to include the\ncopyright notice.\n\n\n# Citation\n\nPlease cite [Holger Schwenk](https://github.com/hoschwenk) and\n[Matthijs Douze](https://github.com/mdouze)\n(also creator of [FAISS](https://github.com/facebookresearch/faiss)).\n\n```BibTeX\n@inproceedings{Schwenk2017LearningJM,\n  title={Learning Joint Multilingual Sentence Representations with Neural Machine Translation},\n  author={Holger Schwenk and Matthijs Douze},\n  booktitle={Rep4NLP@ACL},\n  year={2017},\n}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mingruimingrui/laser-keep-alive", "keywords": "laser sentence embedding", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "laser-keep-alive", "package_url": "https://pypi.org/project/laser-keep-alive/", "platform": "", "project_url": "https://pypi.org/project/laser-keep-alive/", "project_urls": {"Homepage": "https://github.com/mingruimingrui/laser-keep-alive"}, "release_url": "https://pypi.org/project/laser-keep-alive/1.0.0/", "requires_dist": ["tqdm (>=4.0)", "Cython (>=0.29.6)", "torch (>=1.0)", "fastBPE (==0.1.0)", "mosestokenizer (==1.1.0)", "jieba (==0.39)", "opencc-python-reimplemented (==0.1.5)", "transliterate (==1.10.2)", "mecab-python3 (==0.996.5)", "pandas (>=1.0)"], "requires_python": ">=3.6.1", "summary": "Keeping the original LASER project alive", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>laser-keep-alive</strong> is a project aimed at providing a stable run time\nenvironment for the open-source Facebook AI Research (FAIR) project,\n<a href=\"https://github.com/facebookresearch/LASER/\" rel=\"nofollow\">Language-Agnostic SEntence Representations (LASER)</a>.</p>\n<h1>Installation</h1>\n<p>Currently installation can only be done using the source code.</p>\n<pre>git clone https://github.com/mingruimingrui/laser-keep-alive.git\n<span class=\"nb\">cd</span> laser-keep-alive\npython setup.py install\n</pre>\n<p>To ensure hardware compatibility, an explicit installation of\n<a href=\"https://pytorch.org/\" rel=\"nofollow\"><code>pytorch&gt;=1.0</code></a> might be necessary.</p>\n<h1>Basic Usage</h1>\n<h2>Script Example</h2>\n<p>To use this package in your python script, the easiest way is to import the\n<code>laser.SentenceEncoder</code> class.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">laser</span> <span class=\"kn\">import</span> <span class=\"n\">SentenceEncoder</span>\n\n<span class=\"c1\"># Loading the model</span>\n<span class=\"n\">sent_encoder</span> <span class=\"o\">=</span> <span class=\"n\">SentenceEncoder</span><span class=\"p\">(</span>\n    <span class=\"n\">lang</span><span class=\"o\">=</span><span class=\"s1\">'en'</span><span class=\"p\">,</span>\n    <span class=\"n\">model_path</span><span class=\"o\">=</span><span class=\"n\">path_to_model_file</span><span class=\"p\">,</span>\n    <span class=\"n\">bpe_codes</span><span class=\"o\">=</span><span class=\"n\">path_to_bpe_codes_file</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Encode texts</span>\n<span class=\"c1\"># Given a List[str]</span>\n<span class=\"n\">embeddings</span> <span class=\"o\">=</span> <span class=\"n\">sent_encoder</span><span class=\"o\">.</span><span class=\"n\">encode_sentences</span><span class=\"p\">(</span><span class=\"n\">list_of_texts</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Where embeddings is a 2D np.ndarray</span>\n<span class=\"c1\"># of shape [num_texts, embedding_size]</span>\n</pre>\n<h2>Commandline Tool</h2>\n<p><strong>laser-keep-alive</strong> can also be ran directly from the commandline.</p>\n<pre><code>$ python -m laser\nusage: python -m laser [-h] {encode,filter} ...\n\nLanguage-Agnostic SEntence Representations\n\npositional arguments:\n  {encode,filter}\n    encode         Encode a text file line by line\n    filter         Filter a parallel corpus based on similarity\n\noptional arguments:\n  -h, --help       show this help message and exit\n</code></pre>\n<p>At the moment, the following commandline routines are provided.</p>\n<h3><strong><code>encode</code></strong></h3>\n<p>Encodes a text file line by line into sentence embeddings.\nOutput formats are <code>.npy</code> and <code>.csv</code>.\nIf you are using the pretrained-model, your embedding output will have\ndimension size of 1024. In the case of <code>.npy</code> output format, this corresponds\nto byte sizes of 4096 for <code>np.float32</code> and 2048 for <code>np.float16</code>.\n(Don't worry if you don't get that last sentence)</p>\n<h3><strong><code>filter</code></strong></h3>\n<p>Filters a parallel corpus line by line. Keeps only sentences which has\n<a href=\"https://en.wikipedia.org/wiki/Euclidean_distance\" rel=\"nofollow\">euclidean distance</a>\nbelow a threshold (default: 1.04).\nTo apply a stricter filter, use a smaller threshold.</p>\n<h1>Downloading Pretrained Model</h1>\n<p>Pretrained models are necessary since this repository does not provide training\ncode.</p>\n<p>Please reference <a href=\"https://github.com/facebookresearch/LASER/blob/master/install_models.sh\" rel=\"nofollow\">this script</a>\nto download pretrained models.</p>\n<h1>Credits</h1>\n<p>Full credit goes to <a href=\"https://github.com/hoschwenk\" rel=\"nofollow\">Holger Schwenk</a>,\nthe author of the LASER toolkit as well as FAIR.\nFor more information regarding FAIR and LASER, please visit their webpages.</p>\n<ul>\n<li>FAIR Website: <a href=\"https://ai.facebook.com/\" rel=\"nofollow\">https://ai.facebook.com/</a></li>\n<li>FAIR Github: <a href=\"https://github.com/facebookresearch\" rel=\"nofollow\">https://github.com/facebookresearch</a></li>\n<li>LASER Github: <a href=\"https://github.com/facebookresearch/LASER/\" rel=\"nofollow\">https://github.com/facebookresearch/LASER/</a></li>\n</ul>\n<p>If you like this project, please visit the\n<a href=\"https://github.com/facebookresearch/LASER/\" rel=\"nofollow\">LASER project page</a>\nand give it a star \u2b50.</p>\n<h1>License</h1>\n<p><strong><code>laser-keep-alive</code></strong> is MIT-licensed and <strong><code>LASER</code></strong> is BSD-licensed.\nIf you wish to use <strong><code>laser-keep-alive</code></strong> please remember to include the\ncopyright notice.</p>\n<h1>Citation</h1>\n<p>Please cite <a href=\"https://github.com/hoschwenk\" rel=\"nofollow\">Holger Schwenk</a> and\n<a href=\"https://github.com/mdouze\" rel=\"nofollow\">Matthijs Douze</a>\n(also creator of <a href=\"https://github.com/facebookresearch/faiss\" rel=\"nofollow\">FAISS</a>).</p>\n<pre><span class=\"nc\">@inproceedings</span><span class=\"p\">{</span><span class=\"nl\">Schwenk2017LearningJM</span><span class=\"p\">,</span>\n  <span class=\"na\">title</span><span class=\"p\">=</span><span class=\"s\">{Learning Joint Multilingual Sentence Representations with Neural Machine Translation}</span><span class=\"p\">,</span>\n  <span class=\"na\">author</span><span class=\"p\">=</span><span class=\"s\">{Holger Schwenk and Matthijs Douze}</span><span class=\"p\">,</span>\n  <span class=\"na\">booktitle</span><span class=\"p\">=</span><span class=\"s\">{Rep4NLP@ACL}</span><span class=\"p\">,</span>\n  <span class=\"na\">year</span><span class=\"p\">=</span><span class=\"s\">{2017}</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 7046620, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "645cc1ed9233110271f00368a38584a3", "sha256": "72b1f36e850129bc0c96fe5d6f368ab986c2b4106eee57f01932296baa5e4b7a"}, "downloads": -1, "filename": "laser_keep_alive-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "645cc1ed9233110271f00368a38584a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1", "size": 20044, "upload_time": "2020-04-18T08:58:37", "upload_time_iso_8601": "2020-04-18T08:58:37.658361Z", "url": "https://files.pythonhosted.org/packages/41/92/4a4248b946df80dc05199d46edb9a483aa2ad022b927d884495a36590313/laser_keep_alive-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c140c91ffd1c1137a7fb52db199abff5", "sha256": "297dbaeb55d6d9670d56115d3aacbd07b312138c06a33977c74df8090c0c7123"}, "downloads": -1, "filename": "laser-keep-alive-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c140c91ffd1c1137a7fb52db199abff5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 15319, "upload_time": "2020-04-18T08:58:39", "upload_time_iso_8601": "2020-04-18T08:58:39.645010Z", "url": "https://files.pythonhosted.org/packages/b0/06/1d2f9c153484f56439c88e6aea4fcc7584abca8b23935abe146283229f99/laser-keep-alive-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "645cc1ed9233110271f00368a38584a3", "sha256": "72b1f36e850129bc0c96fe5d6f368ab986c2b4106eee57f01932296baa5e4b7a"}, "downloads": -1, "filename": "laser_keep_alive-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "645cc1ed9233110271f00368a38584a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1", "size": 20044, "upload_time": "2020-04-18T08:58:37", "upload_time_iso_8601": "2020-04-18T08:58:37.658361Z", "url": "https://files.pythonhosted.org/packages/41/92/4a4248b946df80dc05199d46edb9a483aa2ad022b927d884495a36590313/laser_keep_alive-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c140c91ffd1c1137a7fb52db199abff5", "sha256": "297dbaeb55d6d9670d56115d3aacbd07b312138c06a33977c74df8090c0c7123"}, "downloads": -1, "filename": "laser-keep-alive-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c140c91ffd1c1137a7fb52db199abff5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 15319, "upload_time": "2020-04-18T08:58:39", "upload_time_iso_8601": "2020-04-18T08:58:39.645010Z", "url": "https://files.pythonhosted.org/packages/b0/06/1d2f9c153484f56439c88e6aea4fcc7584abca8b23935abe146283229f99/laser-keep-alive-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:49 2020"}