{"info": {"author": "Abdul Salam", "author_email": "abdulsalamone@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Build Tools"], "description": "pyqueues\n=================================\n\nA library for Priority-Queues containing Indexed-Priority-Queue and Simple Priority-Queue.\n\n--Installation:\n\nclone the this reporitory using,\n`https://github.com/abecus/Queue.git`\n\nor, install using pip,\n`pip install pyqueues`\n\nWorks with Python 3.x and PyPy.\n\n## Overview\nBoth, the Indexed priority queue and the queue has been implemented as a min binary heap to use it as a max heap or to uea it with custome key pass the values as a tuple in the heaps eg. (key, value). The time complexities are,\n\n- peek highest priority element: O(1) \n\n- pop highest priority element: O(log n) \n\n- push new element: O(log n) \n\nadditionally for Indexed Priority Queue,\n\n- lookup of any item by key: O(1)\n\n- remove element by key: O(log n) \n\n- update element by key: O(log n) \n\n## Usage\n\n\t\tfrom pyqueues.indexedPriorityQueue import IndexedPriorityQueue\n\t\tfrom pyqueues.heap import heapify, heapPop, heapPush\n\n- to heapify a list (does not changes the original list, but heapifies internally),\n\n\t\tarr = [10, 20, 15, 12, 40, 25, 18, 40]\n\t\tpq = IndexedPriorityQueue(arr)\n\t\tpq.heapify()\n\n- to push items into the priority queue,\t\n\n\t\tpq.push(2)\n\t\tpq.push(-1)\n    \t\n- to update a item using key (we an saperatly keep track of the key of the values using a dict by mapping values to the arrSize arrtibute of the priority queue)\n    \t\n\t\tpq.update(pq.arrSize-1, 100)    # updates -1 to 100\n\t\tpq.update(pq.arrSize-2, -1)     # updates 2 to -1\n\n\"similarly use pq.decreaseKey() and pq.increaseKey() methods (works in half of, the time required for update method), when we know that we are increseing or decresing the values while updating.\"\n\n- to remove a values from priority queue,\n\n\t\tpq.remove(pq.arrSize-1)    # removes 100\n\n- to pop highest priority element,\n\n\t\tpq.pop()        # pops -1\n\n## License\n-------\nMIT License\n\nCopyright (c) 2020 abecus\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/abecus/Queue/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/abecus/Queue", "keywords": "pyqueues,queues,queue,priority queue,priority,pq,heap", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyqueues", "package_url": "https://pypi.org/project/pyqueues/", "platform": "", "project_url": "https://pypi.org/project/pyqueues/", "project_urls": {"Download": "https://github.com/abecus/Queue/archive/master.zip", "Homepage": "https://github.com/abecus/Queue"}, "release_url": "https://pypi.org/project/pyqueues/1.2/", "requires_dist": null, "requires_python": "", "summary": "A library for Priory-Queues containing Indexed-Priority-Queue and Simple Priority-Queue", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyqueues</h1>\n<p>A library for Priority-Queues containing Indexed-Priority-Queue and Simple Priority-Queue.</p>\n<p>--Installation:</p>\n<p>clone the this reporitory using,\n<code>https://github.com/abecus/Queue.git</code></p>\n<p>or, install using pip,\n<code>pip install pyqueues</code></p>\n<p>Works with Python 3.x and PyPy.</p>\n<h2>Overview</h2>\n<p>Both, the Indexed priority queue and the queue has been implemented as a min binary heap to use it as a max heap or to uea it with custome key pass the values as a tuple in the heaps eg. (key, value). The time complexities are,</p>\n<ul>\n<li>\n<p>peek highest priority element: O(1)</p>\n</li>\n<li>\n<p>pop highest priority element: O(log n)</p>\n</li>\n<li>\n<p>push new element: O(log n)</p>\n</li>\n</ul>\n<p>additionally for Indexed Priority Queue,</p>\n<ul>\n<li>\n<p>lookup of any item by key: O(1)</p>\n</li>\n<li>\n<p>remove element by key: O(log n)</p>\n</li>\n<li>\n<p>update element by key: O(log n)</p>\n</li>\n</ul>\n<h2>Usage</h2>\n<pre><code>\tfrom pyqueues.indexedPriorityQueue import IndexedPriorityQueue\n\tfrom pyqueues.heap import heapify, heapPop, heapPush\n</code></pre>\n<ul>\n<li>\n<p>to heapify a list (does not changes the original list, but heapifies internally),</p>\n<pre><code>  arr = [10, 20, 15, 12, 40, 25, 18, 40]\n  pq = IndexedPriorityQueue(arr)\n  pq.heapify()\n</code></pre>\n</li>\n<li>\n<p>to push items into the priority queue,</p>\n<pre><code>  pq.push(2)\n  pq.push(-1)\n</code></pre>\n</li>\n<li>\n<p>to update a item using key (we an saperatly keep track of the key of the values using a dict by mapping values to the arrSize arrtibute of the priority queue)</p>\n<pre><code>  pq.update(pq.arrSize-1, 100)    # updates -1 to 100\n  pq.update(pq.arrSize-2, -1)     # updates 2 to -1\n</code></pre>\n</li>\n</ul>\n<p>\"similarly use pq.decreaseKey() and pq.increaseKey() methods (works in half of, the time required for update method), when we know that we are increseing or decresing the values while updating.\"</p>\n<ul>\n<li>\n<p>to remove a values from priority queue,</p>\n<pre><code>  pq.remove(pq.arrSize-1)    # removes 100\n</code></pre>\n</li>\n<li>\n<p>to pop highest priority element,</p>\n<pre><code>  pq.pop()        # pops -1\n</code></pre>\n</li>\n</ul>\n<h2>License</h2>\n<hr>\n<p>MIT License</p>\n<p>Copyright (c) 2020 abecus</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.</p>\n\n          </div>"}, "last_serial": 6482696, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "9af34946e41f4bb6aaa76f42479962e7", "sha256": "84d3905f369b7da1b991c45db0ef2cebec54714ca947c064c1d3edf7a5e80d8f"}, "downloads": -1, "filename": "pyqueues-1.0.tar.gz", "has_sig": false, "md5_digest": "9af34946e41f4bb6aaa76f42479962e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3262, "upload_time": "2020-01-17T17:46:06", "upload_time_iso_8601": "2020-01-17T17:46:06.040653Z", "url": "https://files.pythonhosted.org/packages/03/38/63414c11a01d39cf2fda1a840d2cc923801b16536bd7fed40b010b435038/pyqueues-1.0.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "99f28859acb6363271ad35be4dbd680f", "sha256": "b14b4d0a81134de2932e81ad57e2948e545d6cfeece0ce59be5538deaeab996b"}, "downloads": -1, "filename": "pyqueues-1.2.tar.gz", "has_sig": false, "md5_digest": "99f28859acb6363271ad35be4dbd680f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5284, "upload_time": "2020-01-19T16:40:02", "upload_time_iso_8601": "2020-01-19T16:40:02.566477Z", "url": "https://files.pythonhosted.org/packages/38/99/c8d4d5282b22ab9d4e740086a69bf95eb6e7a9332e92ec2b4a5d7b7c49cc/pyqueues-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "99f28859acb6363271ad35be4dbd680f", "sha256": "b14b4d0a81134de2932e81ad57e2948e545d6cfeece0ce59be5538deaeab996b"}, "downloads": -1, "filename": "pyqueues-1.2.tar.gz", "has_sig": false, "md5_digest": "99f28859acb6363271ad35be4dbd680f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5284, "upload_time": "2020-01-19T16:40:02", "upload_time_iso_8601": "2020-01-19T16:40:02.566477Z", "url": "https://files.pythonhosted.org/packages/38/99/c8d4d5282b22ab9d4e740086a69bf95eb6e7a9332e92ec2b4a5d7b7c49cc/pyqueues-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:39 2020"}