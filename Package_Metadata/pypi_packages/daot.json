{"info": {"author": "Cao Xingming(Simeon.Chaos)", "author_email": "simeon.chaos@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: Chinese (Simplified)", "Programming Language :: Python", "Topic :: Software Development :: Compilers", "Topic :: Text Processing :: General"], "description": "This is Dao 0.7.4\n============================\n\nWhat would happen when lisp meets prolog in python?  \n\nDinpy arises!\n\nDao is the new generation programming system implemented by a functional logic solver, \nunifying code with data, grammar with program, logic with functional, compiling with running.\n\n------------------\nHow to use Dao?\n------------------\n\n!!! This readme in ReStructureText format does not works in pypi. \n    What's wrong with this(see dao\\readme and dao\\setup.py)?\n    I don't find the reason even after reading pypi tutorial, google and trying a lot ways. \n    If any one know please show me how to fix it (simeon.chaos@gmail.com) and thanks a lot.\n\nSee the \"get start\" in the <http://code.google.com/p/daot/w/list> to get started with dao and dinpy.\nSee <http://packages.python.org/daot> for document about dao and dinpy. \nSee the tests, and you'll get some information about the interface and use cases.\n\nHave a look at running Dinpy in interactive mode in the python shell below::\n\n>>> from dao.dinpy import *\n\n>>> i<<0\n0\n>>> quote(i/i+i*1)\ni/i+i*1\n>>> let(i<<1).do[prin(i)]\n1\n>>> loop(3)[ prin(i), ++i ]\n0 1 2\n>>> loop [ prin(i), --i]. until(i==0)\n3 2 1\n>>> when(i!=0).loop[ prin(i), --i]\n3 2 1\n>>> loop [ prin(i), ++i, iff(i==3) .do[exit] ]\n0 1 2\n>>> each(i)[0:3].loop[prin(i)]\n0 1 2\n>>> i << 0\n0\n>>> loop[ println('outer loop'), loop[ prin('inner loop: '), println(i), ++i, iff(i==3).do[ exit*2 >> 'exit from inner' ] ] ]\nouter loop\ninner loop:  0\ninner loop:  1\ninner loop:  2\n'exit from inner'\n>>> fun.f1(x) == [x+x]\nf1\n>>> f1(2)\n4\n>>> letr (f2 << fun(x)[ iff(x<1).do[x].els[f2(x-1)]]) .do [f2(3)]\n0\n\n----------------------------\nWhat's new in dao 0.7.4?\n----------------------------\n\n*Release date:  2011-11-10\n\n* new in code:\n  * quasiquote, unquote, unquote_slicing is implemented.\n  * directly evaluate sexpression in solver\n  * some builtins for define, set and get global, outer and local var\n  * lisp style macro: expand and eval on UserMacro\n\nSee the file \"news.txt\" for what's new in all releases.\n\n-------------------------\nDownload and install\n-------------------------\n\n  You need python 2.6 or higher version to install and run dao. Dao is not tested with python 3.x.\n\n  You can download and install dao from pypi with these method:\n\n* find the place of daot from pypi, download the tarball of daot from <http://code.google.com/p/daot>,unextract it to a single folder, enter the folder in the shell and execute the command::\n\n  python setup.py install\n\n* install by easy_install through the internet directly, with the shell command::\n\n  easy_install dao\n\n* install by easy_install through the internet directly,  with the shell command::\n\n  pip install dao\n\n---------------\nDocumentation\n---------------\n\nSee <http://packages.python.org/daot> for document about dao and dinpy. \n\nSee <https://github.com/chaosim/dao/wiki> for wiki about dao and dinpy.\n\nSome old informations can be reached from <http://code.google.com/p/daot>.\n\n-------------\nWeb sites\n-------------\n\npypi distribution and document: http://pypi.python.org/pypi/daot\n \nthe project's repository is on github <https://github.com/chaosim/dao>. \n\ndao groups on google: Group name: daot, Group home page: http://groups.google.com/group/daot, Group email address: daot@googlegroups.com\n\nsome old information and related stuff can be reached at <http://code.google.com/p/daot>.\n\ngoogle+ pages for news on dao: https://plus.google.com/112050694070234685790\n\nCome to visit us!\n\n---------\nTesting\n---------\n\ndao use the nose test framework, the code in dao is tested with many tests.\n\n------------\nBug reports\n------------\n\nTo report or search for bugs, please goto <https://github.com/chaosim/dao>, or email to simeon.chaos@gmail.com\n\nThe source repository is on <https://github.com/chaosim/dao>.\n\n-----------------\nPlatform notes\n-----------------\n\nDao is developed and tested on Windows XP, Python 2.6.6.\n\n--------------------\nLicense information\n---------------------\n\ncopyright (c) 2011-2013 Caoxingming(Simeon Chaos, email: simeon.chaos@gmail.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nThis software is released under GNU General Public License version 3. \nsee license.txt\n\nSee the file \"license.txt\" for information on the history of this\nsoftware, terms & conditions for usage, and a DISCLAIMER OF ALL\nWARRANTIES.\n\nThis dao distribution contains GNU General Public Licensed (GPLed) code.\n\nAll trademarks referenced herein are property of their respective holders. \n\nThat's all, folks!", "description_content_type": null, "docs_url": "https://pythonhosted.org/daot/", "download_url": "http://pypi.python.org/pypi/daot", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chaosim/dao", "keywords": "dao dinpy lisp prolog dsl", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "daot", "package_url": "https://pypi.org/project/daot/", "platform": "Posix; MacOS X; Windows", "project_url": "https://pypi.org/project/daot/", "project_urls": {"Download": "http://pypi.python.org/pypi/daot", "Homepage": "https://github.com/chaosim/dao"}, "release_url": "https://pypi.org/project/daot/0.7.4/", "requires_dist": null, "requires_python": null, "summary": "the dao to programming, lisp meets prolog in python.", "version": "0.7.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            This is Dao 0.7.4<br>============================<br><br>What would happen when lisp meets prolog in python?  <br><br>Dinpy arises!<br><br>Dao is the new generation programming system implemented by a functional logic solver, <br>unifying code with data, grammar with program, logic with functional, compiling with running.<br><br>------------------<br>How to use Dao?<br>------------------<br><br>!!! This readme in ReStructureText format does not works in pypi. <br>    What's wrong with this(see dao\\readme and dao\\setup.py)?<br>    I don't find the reason even after reading pypi tutorial, google and trying a lot ways. <br>    If any one know please show me how to fix it (simeon.chaos@gmail.com) and thanks a lot.<br><br>See the \"get start\" in the &lt;http://code.google.com/p/daot/w/list&gt; to get started with dao and dinpy.<br>See &lt;http://packages.python.org/daot&gt; for document about dao and dinpy. <br>See the tests, and you'll get some information about the interface and use cases.<br><br>Have a look at running Dinpy in interactive mode in the python shell below::<br><br>&gt;&gt;&gt; from dao.dinpy import *<br><br>&gt;&gt;&gt; i&lt;&lt;0<br>0<br>&gt;&gt;&gt; quote(i/i+i*1)<br>i/i+i*1<br>&gt;&gt;&gt; let(i&lt;&lt;1).do[prin(i)]<br>1<br>&gt;&gt;&gt; loop(3)[ prin(i), ++i ]<br>0 1 2<br>&gt;&gt;&gt; loop [ prin(i), --i]. until(i==0)<br>3 2 1<br>&gt;&gt;&gt; when(i!=0).loop[ prin(i), --i]<br>3 2 1<br>&gt;&gt;&gt; loop [ prin(i), ++i, iff(i==3) .do[exit] ]<br>0 1 2<br>&gt;&gt;&gt; each(i)[0:3].loop[prin(i)]<br>0 1 2<br>&gt;&gt;&gt; i &lt;&lt; 0<br>0<br>&gt;&gt;&gt; loop[ println('outer loop'), loop[ prin('inner loop: '), println(i), ++i, iff(i==3).do[ exit*2 &gt;&gt; 'exit from inner' ] ] ]<br>outer loop<br>inner loop:  0<br>inner loop:  1<br>inner loop:  2<br>'exit from inner'<br>&gt;&gt;&gt; fun.f1(x) == [x+x]<br>f1<br>&gt;&gt;&gt; f1(2)<br>4<br>&gt;&gt;&gt; letr (f2 &lt;&lt; fun(x)[ iff(x&lt;1).do[x].els[f2(x-1)]]) .do [f2(3)]<br>0<br><br>----------------------------<br>What's new in dao 0.7.4?<br>----------------------------<br><br>*Release date:  2011-11-10<br><br>* new in code:<br>  * quasiquote, unquote, unquote_slicing is implemented.<br>  * directly evaluate sexpression in solver<br>  * some builtins for define, set and get global, outer and local var<br>  * lisp style macro: expand and eval on UserMacro<br><br>See the file \"news.txt\" for what's new in all releases.<br><br>-------------------------<br>Download and install<br>-------------------------<br><br>  You need python 2.6 or higher version to install and run dao. Dao is not tested with python 3.x.<br><br>  You can download and install dao from pypi with these method:<br><br>* find the place of daot from pypi, download the tarball of daot from &lt;http://code.google.com/p/daot&gt;,unextract it to a single folder, enter the folder in the shell and execute the command::<br><br>  python setup.py install<br><br>* install by easy_install through the internet directly, with the shell command::<br><br>  easy_install dao<br><br>* install by easy_install through the internet directly,  with the shell command::<br><br>  pip install dao<br><br>---------------<br>Documentation<br>---------------<br><br>See &lt;http://packages.python.org/daot&gt; for document about dao and dinpy. <br><br>See &lt;https://github.com/chaosim/dao/wiki&gt; for wiki about dao and dinpy.<br><br>Some old informations can be reached from &lt;http://code.google.com/p/daot&gt;.<br><br>-------------<br>Web sites<br>-------------<br><br>pypi distribution and document: http://pypi.python.org/pypi/daot<br> <br>the project's repository is on github &lt;https://github.com/chaosim/dao&gt;. <br><br>dao groups on google: Group name: daot, Group home page: http://groups.google.com/group/daot, Group email address: daot@googlegroups.com<br><br>some old information and related stuff can be reached at &lt;http://code.google.com/p/daot&gt;.<br><br>google+ pages for news on dao: https://plus.google.com/112050694070234685790<br><br>Come to visit us!<br><br>---------<br>Testing<br>---------<br><br>dao use the nose test framework, the code in dao is tested with many tests.<br><br>------------<br>Bug reports<br>------------<br><br>To report or search for bugs, please goto &lt;https://github.com/chaosim/dao&gt;, or email to simeon.chaos@gmail.com<br><br>The source repository is on &lt;https://github.com/chaosim/dao&gt;.<br><br>-----------------<br>Platform notes<br>-----------------<br><br>Dao is developed and tested on Windows XP, Python 2.6.6.<br><br>--------------------<br>License information<br>---------------------<br><br>copyright (c) 2011-2013 Caoxingming(Simeon Chaos, email: simeon.chaos@gmail.com)<br><br>This program is free software: you can redistribute it and/or modify<br>it under the terms of the GNU General Public License as<br>published by the Free Software Foundation, either version 3 of the<br>License, or (at your option) any later version.<br><br>This program is distributed in the hope that it will be useful,<br>but WITHOUT ANY WARRANTY; without even the implied warranty of<br>MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<br>GNU Affero General Public License for more details.<br><br>You should have received a copy of the GNU General Public License<br>along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.<br><br>This software is released under GNU General Public License version 3. <br>see license.txt<br><br>See the file \"license.txt\" for information on the history of this<br>software, terms &amp; conditions for usage, and a DISCLAIMER OF ALL<br>WARRANTIES.<br><br>This dao distribution contains GNU General Public Licensed (GPLed) code.<br><br>All trademarks referenced herein are property of their respective holders. <br><br>That's all, folks!\n          </div>"}, "last_serial": 788770, "releases": {"0.5": [], "0.6.1": [], "0.6.2": [], "0.7.0": [], "0.7.1": [{"comment_text": "", "digests": {"md5": "b9234da68a0e5c78f4c9bf133eb80a92", "sha256": "83b0cd7d071fc9bef6a5ef0166d0adaf433949f3620caa45421149c320bba188"}, "downloads": -1, "filename": "daot-0.7.1-py2.6.egg", "has_sig": false, "md5_digest": "b9234da68a0e5c78f4c9bf133eb80a92", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 142976, "upload_time": "2011-10-27T08:51:34", "upload_time_iso_8601": "2011-10-27T08:51:34.655544Z", "url": "https://files.pythonhosted.org/packages/d7/1d/6475a812ca0223647ced57c1ab89088202606585ea7c875b83b620e659b6/daot-0.7.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6786d4439e80a4c5b9f2180da767fe3a", "sha256": "db70043766138313ee0497ba05bf88b03fcd9a615351cba79b2da1c5f396a7ed"}, "downloads": -1, "filename": "daot-0.7.1.win32-py2.6.exe", "has_sig": false, "md5_digest": "6786d4439e80a4c5b9f2180da767fe3a", "packagetype": "bdist_wininst", "python_version": "2.6", "requires_python": null, "size": 255166, "upload_time": "2011-10-27T09:14:46", "upload_time_iso_8601": "2011-10-27T09:14:46.409143Z", "url": "https://files.pythonhosted.org/packages/54/b9/121db803235d35bf895b05ceda59ccf2f6b2b3ebb848d1525e5ccf7422bd/daot-0.7.1.win32-py2.6.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "2157ca784f505e57baac0a98b893e975", "sha256": "9757ac7ee9db898826bf2aeadeba4ba3b5a20834a4178cb09ef06fa299eb33dd"}, "downloads": -1, "filename": "daot-0.7.1.zip", "has_sig": false, "md5_digest": "2157ca784f505e57baac0a98b893e975", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55286, "upload_time": "2011-10-27T08:49:39", "upload_time_iso_8601": "2011-10-27T08:49:39.534482Z", "url": "https://files.pythonhosted.org/packages/06/54/9db84b865212d1eacdfb5bb32be9ec973f0766984e239cc186c3469099bd/daot-0.7.1.zip", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "22a29e2b63078fd3461047096f5886fe", "sha256": "2b90a76fcd622816529bf6d3eafbca51d576d80cf370f38fba53a4b3d9532728"}, "downloads": -1, "filename": "daot-0.7.2-py2.6.egg", "has_sig": false, "md5_digest": "22a29e2b63078fd3461047096f5886fe", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 145796, "upload_time": "2011-10-29T03:17:52", "upload_time_iso_8601": "2011-10-29T03:17:52.400888Z", "url": "https://files.pythonhosted.org/packages/90/14/4c2b8534f0fdd16aaccd6ce7f6e2b60ab5dddffa838a2fb43f571f9ad9dc/daot-0.7.2-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "03b204d70d65456e8a58f9bcf560425a", "sha256": "761fa374e9e44dedabba7c416705bbb477bb649284b1bb14d21ee03d54b2bff4"}, "downloads": -1, "filename": "daot-0.7.2.win32-py2.6.exe", "has_sig": false, "md5_digest": "03b204d70d65456e8a58f9bcf560425a", "packagetype": "bdist_wininst", "python_version": "2.6", "requires_python": null, "size": 255981, "upload_time": "2011-10-29T03:18:13", "upload_time_iso_8601": "2011-10-29T03:18:13.191793Z", "url": "https://files.pythonhosted.org/packages/31/e8/a150b8b5e50045131fac6045b587cf19675a6754d12fe3cb57c30449ce2d/daot-0.7.2.win32-py2.6.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d4777fd5687e025327152d24ea4c03f", "sha256": "fbdc38b842893b69bec7c6043e278782f8a1bf186a293cf3c6f399ea28a7cd5b"}, "downloads": -1, "filename": "daot-0.7.2.zip", "has_sig": false, "md5_digest": "6d4777fd5687e025327152d24ea4c03f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60205, "upload_time": "2011-10-29T03:18:21", "upload_time_iso_8601": "2011-10-29T03:18:21.326724Z", "url": "https://files.pythonhosted.org/packages/ee/41/ce687f7204a8b70757f3dc8946abf7389777d6816b52a81de59c80be0bd7/daot-0.7.2.zip", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "e069a6a0c7fc8b6bd1e8e3d474994a26", "sha256": "203e2208df7bbbf440f0edaf0002b9b54e24da01243bc9a9e4fdac5bfb11051e"}, "downloads": -1, "filename": "daot-0.7.3-py2.6.egg", "has_sig": false, "md5_digest": "e069a6a0c7fc8b6bd1e8e3d474994a26", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 166552, "upload_time": "2011-11-05T09:35:07", "upload_time_iso_8601": "2011-11-05T09:35:07.583747Z", "url": "https://files.pythonhosted.org/packages/c9/2a/dd8dd31add9afec64a768dce3e0aa0e7a146aaf337c9e273298d5c891d2e/daot-0.7.3-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f85560c1904b339de22ab514638bea2e", "sha256": "4fa8cdabb8d4a34512fbb03774e0aeeb76e62fcdfd779dcf8b3a6316de6bfa51"}, "downloads": -1, "filename": "daot-0.7.3.win32-py2.6.exe", "has_sig": false, "md5_digest": "f85560c1904b339de22ab514638bea2e", "packagetype": "bdist_wininst", "python_version": "2.6", "requires_python": null, "size": 264080, "upload_time": "2011-11-05T09:35:25", "upload_time_iso_8601": "2011-11-05T09:35:25.010757Z", "url": "https://files.pythonhosted.org/packages/43/de/75adb6d58265287ee39a2f127b7af8a3c4b05901a1c7a240c1de8ceb9a58/daot-0.7.3.win32-py2.6.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6d1c85b5d7a213c03115221d5f5a942", "sha256": "8fd4c664d05a697f299110284edbab022d974b69057e1994d492166f965f278c"}, "downloads": -1, "filename": "daot-0.7.3.zip", "has_sig": false, "md5_digest": "d6d1c85b5d7a213c03115221d5f5a942", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67981, "upload_time": "2011-11-05T09:35:32", "upload_time_iso_8601": "2011-11-05T09:35:32.663194Z", "url": "https://files.pythonhosted.org/packages/18/16/5627076c20331ebf58738d1866c71cef7d81fc83135181b3831c84945efc/daot-0.7.3.zip", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "e2837bfb1f8ea457ad065c7d3e2c0e8a", "sha256": "5ec9c6f959a81eb63bcd9d14452972af8e6482613ebd36e2aca42a925a48a57b"}, "downloads": -1, "filename": "daot-0.7.4-py2.6.egg", "has_sig": false, "md5_digest": "e2837bfb1f8ea457ad065c7d3e2c0e8a", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 188907, "upload_time": "2011-11-10T08:31:09", "upload_time_iso_8601": "2011-11-10T08:31:09.908249Z", "url": "https://files.pythonhosted.org/packages/5e/ad/dfd17638c8075c1f222d6cdf70391a9c020f6dd21257880d67a97ac53110/daot-0.7.4-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "04d62efd2bdbb4bcc517fab0fe97cfbe", "sha256": "38be4ae5ea453c7b7400a0a4386fee59b161499d69d72be832188d31ec0bab66"}, "downloads": -1, "filename": "daot-0.7.4.win32-py2.6.exe", "has_sig": false, "md5_digest": "04d62efd2bdbb4bcc517fab0fe97cfbe", "packagetype": "bdist_wininst", "python_version": "2.6", "requires_python": null, "size": 271849, "upload_time": "2011-11-10T08:31:26", "upload_time_iso_8601": "2011-11-10T08:31:26.578603Z", "url": "https://files.pythonhosted.org/packages/1e/13/849f4200037d280392435dd217cb6b4a03451b095b5039b7a623d724d40f/daot-0.7.4.win32-py2.6.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7476e5eacb258b3e693df318d91845e", "sha256": "40a92644f5b9007a7f6cb532ae7fd4542200bf02d920ff68b933f46fbb66808c"}, "downloads": -1, "filename": "daot-0.7.4.zip", "has_sig": false, "md5_digest": "b7476e5eacb258b3e693df318d91845e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73591, "upload_time": "2011-11-10T08:31:34", "upload_time_iso_8601": "2011-11-10T08:31:34.014204Z", "url": "https://files.pythonhosted.org/packages/86/2f/3e6ac3b62b704c4486deec598b6a8ce93717e573dd7089144b391a4bd7e2/daot-0.7.4.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e2837bfb1f8ea457ad065c7d3e2c0e8a", "sha256": "5ec9c6f959a81eb63bcd9d14452972af8e6482613ebd36e2aca42a925a48a57b"}, "downloads": -1, "filename": "daot-0.7.4-py2.6.egg", "has_sig": false, "md5_digest": "e2837bfb1f8ea457ad065c7d3e2c0e8a", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 188907, "upload_time": "2011-11-10T08:31:09", "upload_time_iso_8601": "2011-11-10T08:31:09.908249Z", "url": "https://files.pythonhosted.org/packages/5e/ad/dfd17638c8075c1f222d6cdf70391a9c020f6dd21257880d67a97ac53110/daot-0.7.4-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "04d62efd2bdbb4bcc517fab0fe97cfbe", "sha256": "38be4ae5ea453c7b7400a0a4386fee59b161499d69d72be832188d31ec0bab66"}, "downloads": -1, "filename": "daot-0.7.4.win32-py2.6.exe", "has_sig": false, "md5_digest": "04d62efd2bdbb4bcc517fab0fe97cfbe", "packagetype": "bdist_wininst", "python_version": "2.6", "requires_python": null, "size": 271849, "upload_time": "2011-11-10T08:31:26", "upload_time_iso_8601": "2011-11-10T08:31:26.578603Z", "url": "https://files.pythonhosted.org/packages/1e/13/849f4200037d280392435dd217cb6b4a03451b095b5039b7a623d724d40f/daot-0.7.4.win32-py2.6.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7476e5eacb258b3e693df318d91845e", "sha256": "40a92644f5b9007a7f6cb532ae7fd4542200bf02d920ff68b933f46fbb66808c"}, "downloads": -1, "filename": "daot-0.7.4.zip", "has_sig": false, "md5_digest": "b7476e5eacb258b3e693df318d91845e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73591, "upload_time": "2011-11-10T08:31:34", "upload_time_iso_8601": "2011-11-10T08:31:34.014204Z", "url": "https://files.pythonhosted.org/packages/86/2f/3e6ac3b62b704c4486deec598b6a8ce93717e573dd7089144b391a4bd7e2/daot-0.7.4.zip", "yanked": false}], "timestamp": "Fri May  8 00:40:42 2020"}