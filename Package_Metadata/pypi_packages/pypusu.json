{"info": {"author": "Janne Enberg", "author_email": "janne.enberg@lietu.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Communications :: Chat", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "PuSu Engine client for Python\n=============================\n\nClient for using the PuSu Engine server from Python. Probably much\nbetter suitable for sending than receiving, but both should work.\n\nThreaded example\n----------------\n\nIf you want immediate delivery and are ok with your callbacks getting\ncalled from another thread, you can use the threaded client.\n\n.. code:: python\n\n   from pypusu.threaded import PuSuClient\n   from time import sleep\n\n\n   if __name__ == \"__main__\":\n       c = PuSuClient(\"ws://127.0.0.1:55000\")\n\n       count = 0\n\n\n       def listener(msg):\n           global count\n           count += 1\n\n\n       c.authorize(\"foo\")\n       c.subscribe(\"channel.1\", listener)\n       c.publish(\"channel.1\", {\"foo\": \"bar\"})\n\n       sleep(30)\n\n       print(count)\n\nPolling example\n---------------\n\nIf your callbacks getting called from another thread is an issue, you\ncan use the polling client. Internally it still uses threads, but it\nwill not deliver the messages to your callbacks until you call\n``poll()``.\n\n.. code:: python\n\n   from pypusu.polling import PuSuClient\n   from time import sleep\n\n\n   if __name__ == \"__main__\":\n       c = PuSuClient(\"ws://127.0.0.1:55000\")\n\n       count = 0\n\n       def listener(msg):\n           global count\n           count += 1\n\n       c.authorize(\"foo\")\n       c.subscribe(\"channel.1\", listener)\n       c.publish(\"channel.1\", {\"foo\": \"bar\"})\n\n       for i in range(0, 30):\n           sleep(1)\n           c.poll()\n\n       print(count)\n\nDependencies\n------------\n\nNot quite sure how to deal with dependencies yet, so for now you\u2019ll have\nto install them separately.\n\nBoth threaded and polling client need the following in your\n``requirements.txt``:\n\n::\n\n   ws4py==0.3.5\n   wsaccel==0.6.2\n\nOr you can try:\n\n::\n\n   pip install ws4py wsaccel\n\nLicense\n-------\n\nShort version: MIT + New BSD.\n\nLong version: Read the LICENSE.md -file.\n\nUploading to PyPi\n-----------------\n\nYou can\u2019t really do that without the appropriate username + password\ninformation, but I\u2019m saving this here because I\u2019ll just forget.\n\n::\n\n   python setup.py sdist upload -r pypitest\n   python setup.py sdist upload -r pypi\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://github.com/PuSuEngine/pypusu/tarball/v1.0.6", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PuSuEngine/pypusu", "keywords": "pubsub,publisher,subscriber,messaging", "license": "", "maintainer": "", "maintainer_email": "", "name": "pypusu", "package_url": "https://pypi.org/project/pypusu/", "platform": "", "project_url": "https://pypi.org/project/pypusu/", "project_urls": {"Download": "https://github.com/PuSuEngine/pypusu/tarball/v1.0.6", "Homepage": "https://github.com/PuSuEngine/pypusu"}, "release_url": "https://pypi.org/project/pypusu/1.0.6/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*,<4", "summary": "Python client for PuSuEngine", "version": "1.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Client for using the PuSu Engine server from Python. Probably much\nbetter suitable for sending than receiving, but both should work.</p>\n<div id=\"threaded-example\">\n<h2>Threaded example</h2>\n<p>If you want immediate delivery and are ok with your callbacks getting\ncalled from another thread, you can use the threaded client.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pypusu.threaded</span> <span class=\"kn\">import</span> <span class=\"n\">PuSuClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">PuSuClient</span><span class=\"p\">(</span><span class=\"s2\">\"ws://127.0.0.1:55000\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">listener</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">):</span>\n        <span class=\"k\">global</span> <span class=\"n\">count</span>\n        <span class=\"n\">count</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">authorize</span><span class=\"p\">(</span><span class=\"s2\">\"foo\"</span><span class=\"p\">)</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"s2\">\"channel.1\"</span><span class=\"p\">,</span> <span class=\"n\">listener</span><span class=\"p\">)</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span><span class=\"s2\">\"channel.1\"</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">})</span>\n\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"polling-example\">\n<h2>Polling example</h2>\n<p>If your callbacks getting called from another thread is an issue, you\ncan use the polling client. Internally it still uses threads, but it\nwill not deliver the messages to your callbacks until you call\n<tt>poll()</tt>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pypusu.polling</span> <span class=\"kn\">import</span> <span class=\"n\">PuSuClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">PuSuClient</span><span class=\"p\">(</span><span class=\"s2\">\"ws://127.0.0.1:55000\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">listener</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">):</span>\n        <span class=\"k\">global</span> <span class=\"n\">count</span>\n        <span class=\"n\">count</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">authorize</span><span class=\"p\">(</span><span class=\"s2\">\"foo\"</span><span class=\"p\">)</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"s2\">\"channel.1\"</span><span class=\"p\">,</span> <span class=\"n\">listener</span><span class=\"p\">)</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span><span class=\"s2\">\"channel.1\"</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">})</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">):</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">poll</span><span class=\"p\">()</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>Not quite sure how to deal with dependencies yet, so for now you\u2019ll have\nto install them separately.</p>\n<p>Both threaded and polling client need the following in your\n<tt>requirements.txt</tt>:</p>\n<pre>ws4py==0.3.5\nwsaccel==0.6.2\n</pre>\n<p>Or you can try:</p>\n<pre>pip install ws4py wsaccel\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Short version: MIT + New BSD.</p>\n<p>Long version: Read the LICENSE.md -file.</p>\n</div>\n<div id=\"uploading-to-pypi\">\n<h2>Uploading to PyPi</h2>\n<p>You can\u2019t really do that without the appropriate username + password\ninformation, but I\u2019m saving this here because I\u2019ll just forget.</p>\n<pre>python setup.py sdist upload -r pypitest\npython setup.py sdist upload -r pypi\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6755775, "releases": {"1.0.0": [], "1.0.0b": [{"comment_text": "", "digests": {"md5": "655645d2d3b7540f32e7559d2f5ae040", "sha256": "12324891eeef05a564d63506c309d5bb2adfe736587346e825bf45684b632601"}, "downloads": -1, "filename": "pypusu-1.0.0b.zip", "has_sig": false, "md5_digest": "655645d2d3b7540f32e7559d2f5ae040", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3735, "upload_time": "2016-07-04T19:42:21", "upload_time_iso_8601": "2016-07-04T19:42:21.646216Z", "url": "https://files.pythonhosted.org/packages/ca/ae/119286275eb6d12b4cc3060354448886d51718fe573fde0414d670d40e70/pypusu-1.0.0b.zip", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "efa7fa924cbfb5b0a9d202a5475b30a3", "sha256": "41806857492dcd85a2f42b443f00849f05188729e8706f206609811499cc85a6"}, "downloads": -1, "filename": "pypusu-1.0.1.zip", "has_sig": false, "md5_digest": "efa7fa924cbfb5b0a9d202a5475b30a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4239, "upload_time": "2016-07-05T08:07:20", "upload_time_iso_8601": "2016-07-05T08:07:20.249617Z", "url": "https://files.pythonhosted.org/packages/9f/77/ff1b2dfd605d816cfb7a1773021a8a3ff43ce7c99a69431d68d6e3bd986f/pypusu-1.0.1.zip", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "c5dbd71f91e4bddb11a92a79ea8a4102", "sha256": "31faae4c7a646ae15b374f9a14b05712aa7ab2327318364fa2000b0357c8adea"}, "downloads": -1, "filename": "pypusu-1.0.2.zip", "has_sig": false, "md5_digest": "c5dbd71f91e4bddb11a92a79ea8a4102", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5150, "upload_time": "2016-07-09T16:28:35", "upload_time_iso_8601": "2016-07-09T16:28:35.731716Z", "url": "https://files.pythonhosted.org/packages/cc/ae/137e3bfb4e9506d998059a512431810ac2c2f5b71eee70282b5ceec3ec99/pypusu-1.0.2.zip", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "47048994356767dedeebc5f76096a5f9", "sha256": "cc154c86af72eb39c3c173f27e6a8fdf0969adef43c97182070be855a2afb047"}, "downloads": -1, "filename": "pypusu-1.0.3.zip", "has_sig": false, "md5_digest": "47048994356767dedeebc5f76096a5f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6234, "upload_time": "2016-07-12T05:36:17", "upload_time_iso_8601": "2016-07-12T05:36:17.931867Z", "url": "https://files.pythonhosted.org/packages/45/a6/74564c9d0c733c8e031357c2f7b5bb7d122e7a4882aa3215b16184d6c97e/pypusu-1.0.3.zip", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "8acd7a4e80a278eb29671f672b821e5a", "sha256": "4f93b411f9c7dae13d3025d314e44288e117e1aad293fbb3b2d04ee67cc84a5f"}, "downloads": -1, "filename": "pypusu-1.0.4.zip", "has_sig": false, "md5_digest": "8acd7a4e80a278eb29671f672b821e5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6240, "upload_time": "2016-07-12T05:53:07", "upload_time_iso_8601": "2016-07-12T05:53:07.933890Z", "url": "https://files.pythonhosted.org/packages/c1/62/d8bfbdac60013223eb49241de7e2b138099edf1f7129bc9218e71b3dc120/pypusu-1.0.4.zip", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "45367b60292fff9ed9c47f9cf33007c2", "sha256": "4ee53de500209bbe29d7c0b2e775ab1cc175674be898fbdfff468d411ac19cbd"}, "downloads": -1, "filename": "pypusu-1.0.5.zip", "has_sig": false, "md5_digest": "45367b60292fff9ed9c47f9cf33007c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5354, "upload_time": "2016-07-12T05:59:52", "upload_time_iso_8601": "2016-07-12T05:59:52.480652Z", "url": "https://files.pythonhosted.org/packages/2d/d7/a9a8dbebccc5e2527388d57b3d08232d83a8c2b1c69fe8d994a8531f9c6a/pypusu-1.0.5.zip", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "014e1f2be1b0ec5647d089901a3a5898", "sha256": "25cb36b4131ba1aa9979f2b7abdb8d46256aefa661db49648bc3b39dff1fba1e"}, "downloads": -1, "filename": "pypusu-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "014e1f2be1b0ec5647d089901a3a5898", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*,<4", "size": 7739, "upload_time": "2020-03-05T15:34:03", "upload_time_iso_8601": "2020-03-05T15:34:03.317822Z", "url": "https://files.pythonhosted.org/packages/12/4b/42d4057643d6b40418163c51ef3d9b3a6c0f1e228278619d8ba58b24ff89/pypusu-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a1258882522e6b880e4ba5a665190af", "sha256": "bf649012cf4830f2fe981ff07e40fdbdb1f66b92e29ac9ede9415ce3860303d5"}, "downloads": -1, "filename": "pypusu-1.0.6.tar.gz", "has_sig": false, "md5_digest": "3a1258882522e6b880e4ba5a665190af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*,<4", "size": 6373, "upload_time": "2020-03-05T15:34:04", "upload_time_iso_8601": "2020-03-05T15:34:04.895293Z", "url": "https://files.pythonhosted.org/packages/95/a3/2dc2ef22b406a943fbecee78ed295fa0ec4405ba9e647ec16043b594ab7a/pypusu-1.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "014e1f2be1b0ec5647d089901a3a5898", "sha256": "25cb36b4131ba1aa9979f2b7abdb8d46256aefa661db49648bc3b39dff1fba1e"}, "downloads": -1, "filename": "pypusu-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "014e1f2be1b0ec5647d089901a3a5898", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*,<4", "size": 7739, "upload_time": "2020-03-05T15:34:03", "upload_time_iso_8601": "2020-03-05T15:34:03.317822Z", "url": "https://files.pythonhosted.org/packages/12/4b/42d4057643d6b40418163c51ef3d9b3a6c0f1e228278619d8ba58b24ff89/pypusu-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a1258882522e6b880e4ba5a665190af", "sha256": "bf649012cf4830f2fe981ff07e40fdbdb1f66b92e29ac9ede9415ce3860303d5"}, "downloads": -1, "filename": "pypusu-1.0.6.tar.gz", "has_sig": false, "md5_digest": "3a1258882522e6b880e4ba5a665190af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*,<4", "size": 6373, "upload_time": "2020-03-05T15:34:04", "upload_time_iso_8601": "2020-03-05T15:34:04.895293Z", "url": "https://files.pythonhosted.org/packages/95/a3/2dc2ef22b406a943fbecee78ed295fa0ec4405ba9e647ec16043b594ab7a/pypusu-1.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:57 2020"}