{"info": {"author": "Fitz ZP", "author_email": "zhanp.cn@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP"], "description": "Django REST framework naming style\n==================================\n\n**This is a toolkit supporting camel case and snake case APIs' naming\nstyles and easily switch.**\n\nI wrote this with Django 2.0 and Django REST framework 3.7.3, but I\nthink it can easily work with other versions of Django and DRF.\n\nRequirements\n------------\n\n-  Python (2.7+)\n-  Django\n-  Django REST framework\n\nInstallation\n------------\n\nInstall using ``pip``\n\n.. code:: python\n\n    pip install django-rest-framework-naming-style\n\nReplace renderer and parser classes for JSON in your ``REST_FRAMEWORK``\nsetting\n\n.. code:: python\n\n    REST_FRAMEWORK = {\n        ...\n        'DEFAULT_RENDERER_CLASSES': (\n            'django_rest_framework_naming_style.renderer.StylesJSONRenderer',\n            # 'rest_framework.renderers.JSONRenderer',\n            'rest_framework.renderers.BrowsableAPIRenderer',\n        ),\n        'DEFAULT_PARSER_CLASSES': (\n            'django_rest_framework_naming_style.parser.StylesJSONParser',\n            # 'rest_framework.parsers.JSONParser',\n            'rest_framework.parsers.FormParser',\n            'rest_framework.parsers.MultiPartParser',\n        ),\n        ...\n    }\n\nMake a monkey patch in django's ``manage.py``\n\n.. code:: python\n\n    # Make patching before `execute_from_command_line(sys.argv)`\n    from django_rest_framework_naming_style.monkey import monkey_patch\n        monkey_patch()\n\n    execute_from_command_line(sys.argv)\n\nOptional Settings\n-----------------\n\nThere are settings of this package with default value, options.\n\n.. code:: python\n\n    REST_FRAMEWORK_NAMING_STYLE = {\n        'STYLE_KEY': 'STYLE',  # set a header key\n        'STYLE_DEFAULT': 'underscore',  # underscore/camelcase\n    }\n\n``STYLE_KEY`` that you set accept a value in request headers between\n``underscore`` and ``camelcase`` to specify one naming style of APIs\nunless you set ``style`` in view object to specify it.\n\nIf you set ``STYLE_KEY`` ``None``, the style only depends on ``style``\nin view object or ``STYLE_DEFAULT`` as you like.\n\nThank you for using ``django-rest-framework-naming-style``.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zhanp/django-rest-framework-naming-style", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-rest-framework-naming-style", "package_url": "https://pypi.org/project/django-rest-framework-naming-style/", "platform": "", "project_url": "https://pypi.org/project/django-rest-framework-naming-style/", "project_urls": {"Homepage": "https://github.com/zhanp/django-rest-framework-naming-style"}, "release_url": "https://pypi.org/project/django-rest-framework-naming-style/0.2/", "requires_dist": null, "requires_python": ">=2.7", "summary": "A toolkit for Django REST framework to easily switch APIs' naming styles.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>This is a toolkit supporting camel case and snake case APIs\u2019 naming\nstyles and easily switch.</strong></p>\n<p>I wrote this with Django 2.0 and Django REST framework 3.7.3, but I\nthink it can easily work with other versions of Django and DRF.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python (2.7+)</li>\n<li>Django</li>\n<li>Django REST framework</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using <tt>pip</tt></p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">django</span><span class=\"o\">-</span><span class=\"n\">rest</span><span class=\"o\">-</span><span class=\"n\">framework</span><span class=\"o\">-</span><span class=\"n\">naming</span><span class=\"o\">-</span><span class=\"n\">style</span>\n</pre>\n<p>Replace renderer and parser classes for JSON in your <tt>REST_FRAMEWORK</tt>\nsetting</p>\n<pre><span class=\"n\">REST_FRAMEWORK</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'DEFAULT_RENDERER_CLASSES'</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n        <span class=\"s1\">'django_rest_framework_naming_style.renderer.StylesJSONRenderer'</span><span class=\"p\">,</span>\n        <span class=\"c1\"># 'rest_framework.renderers.JSONRenderer',</span>\n        <span class=\"s1\">'rest_framework.renderers.BrowsableAPIRenderer'</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n    <span class=\"s1\">'DEFAULT_PARSER_CLASSES'</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n        <span class=\"s1\">'django_rest_framework_naming_style.parser.StylesJSONParser'</span><span class=\"p\">,</span>\n        <span class=\"c1\"># 'rest_framework.parsers.JSONParser',</span>\n        <span class=\"s1\">'rest_framework.parsers.FormParser'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'rest_framework.parsers.MultiPartParser'</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Make a monkey patch in django\u2019s <tt>manage.py</tt></p>\n<pre><span class=\"c1\"># Make patching before `execute_from_command_line(sys.argv)`</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_rest_framework_naming_style.monkey</span> <span class=\"kn\">import</span> <span class=\"n\">monkey_patch</span>\n    <span class=\"n\">monkey_patch</span><span class=\"p\">()</span>\n\n<span class=\"n\">execute_from_command_line</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"optional-settings\">\n<h2>Optional Settings</h2>\n<p>There are settings of this package with default value, options.</p>\n<pre><span class=\"n\">REST_FRAMEWORK_NAMING_STYLE</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'STYLE_KEY'</span><span class=\"p\">:</span> <span class=\"s1\">'STYLE'</span><span class=\"p\">,</span>  <span class=\"c1\"># set a header key</span>\n    <span class=\"s1\">'STYLE_DEFAULT'</span><span class=\"p\">:</span> <span class=\"s1\">'underscore'</span><span class=\"p\">,</span>  <span class=\"c1\"># underscore/camelcase</span>\n<span class=\"p\">}</span>\n</pre>\n<p><tt>STYLE_KEY</tt> that you set accept a value in request headers between\n<tt>underscore</tt> and <tt>camelcase</tt> to specify one naming style of APIs\nunless you set <tt>style</tt> in view object to specify it.</p>\n<p>If you set <tt>STYLE_KEY</tt> <tt>None</tt>, the style only depends on <tt>style</tt>\nin view object or <tt>STYLE_DEFAULT</tt> as you like.</p>\n<p>Thank you for using <tt><span class=\"pre\">django-rest-framework-naming-style</span></tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 3488280, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1d4f320b9669ae5054536dd3ff6e9a73", "sha256": "334bfcab0f5a1cbe52d5443a6ed3d74592938e9451445c04052c004ecf5358f0"}, "downloads": -1, "filename": "django-rest-framework-naming-style-0.1.tar.gz", "has_sig": false, "md5_digest": "1d4f320b9669ae5054536dd3ff6e9a73", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3646, "upload_time": "2017-12-24T14:10:51", "upload_time_iso_8601": "2017-12-24T14:10:51.831140Z", "url": "https://files.pythonhosted.org/packages/d9/f8/bcfd5c129b8905ee7198174b75df5d35a6a04155b23e466e3a657de112b3/django-rest-framework-naming-style-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "26600a2746929a69d5b400ee2f8820e7", "sha256": "8ec9a0701f7cfbfa26e8e4db9db0a511b1bdc8b873464b97f5e50e413463631f"}, "downloads": -1, "filename": "django-rest-framework-naming-style-0.2.tar.gz", "has_sig": false, "md5_digest": "26600a2746929a69d5b400ee2f8820e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 3786, "upload_time": "2018-01-14T10:12:42", "upload_time_iso_8601": "2018-01-14T10:12:42.387885Z", "url": "https://files.pythonhosted.org/packages/db/e9/1d70fbd340b9245f8f20dfa046fd648863fbfb1c5e78385529819a8e4f17/django-rest-framework-naming-style-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "26600a2746929a69d5b400ee2f8820e7", "sha256": "8ec9a0701f7cfbfa26e8e4db9db0a511b1bdc8b873464b97f5e50e413463631f"}, "downloads": -1, "filename": "django-rest-framework-naming-style-0.2.tar.gz", "has_sig": false, "md5_digest": "26600a2746929a69d5b400ee2f8820e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 3786, "upload_time": "2018-01-14T10:12:42", "upload_time_iso_8601": "2018-01-14T10:12:42.387885Z", "url": "https://files.pythonhosted.org/packages/db/e9/1d70fbd340b9245f8f20dfa046fd648863fbfb1c5e78385529819a8e4f17/django-rest-framework-naming-style-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:05 2020"}