{"info": {"author": "Maxim Moroz", "author_email": "m.moroz@iva-tech.ru", "bugtrack_url": null, "classifiers": [], "description": "# IVA TPU Python API\n## Example\n```python\nimport numpy as np\nfrom iva_tpu import TPUDevice, TPUProgram\n\nfrom iva_applications.resnet50 import image_to_tensor\nfrom iva_applications.imagenet import tpu_tensor_to_classes\nfrom PIL import Image\n\nimage = Image.open('ILSVRC2012_val_00000045.JPEG')\ntensor = image_to_tensor(image)\n\ndevice = TPUDevice()\nprogram = TPUProgram(\"resnet50.tpu\")\ndevice.load(program)  # now device is ready to make inference\n\noutput = device.run([tensor], dtype=np.float32)\ntpu_tensor_to_classes(output[0], top=1)\n\nfrom timeit import timeit\ntimeit(lambda: device.run([tensor]), number=100)\n\n```\n\n## \u041f\u0440\u0438\u043c\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0443\u0444\u0435\u0440\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445\n```\nfrom iva_tpu import TPUDevice, TPUProgram\nprogram = TPUProgram(\"omega_program_dnn_quant_3.0.0.tpu\")\ndevice = TPUDevice()\ndevice.load(program)\n\nwith open(\"f.bin\", \"rb\") as f:\n    buf=f.read()\n\ndevice.set_input_buffer(buf, 0)\ndevice.run_inference()\n\nfor i in range(3):\n  o = device.get_output_buffer(i)\n  with open(f\"o{i}.bin\", \"wb\") as f:\n    f.write(o)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://git.mmp.iva-tech.ru/tpu_sw/pytpu", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "iva-tpu", "package_url": "https://pypi.org/project/iva-tpu/", "platform": "", "project_url": "https://pypi.org/project/iva-tpu/", "project_urls": {"Homepage": "http://git.mmp.iva-tech.ru/tpu_sw/pytpu"}, "release_url": "https://pypi.org/project/iva-tpu/7.0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "IVA TPU Python API", "version": "7.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>IVA TPU Python API</h1>\n<h2>Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">iva_tpu</span> <span class=\"kn\">import</span> <span class=\"n\">TPUDevice</span><span class=\"p\">,</span> <span class=\"n\">TPUProgram</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">iva_applications.resnet50</span> <span class=\"kn\">import</span> <span class=\"n\">image_to_tensor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">iva_applications.imagenet</span> <span class=\"kn\">import</span> <span class=\"n\">tpu_tensor_to_classes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span>\n\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'ILSVRC2012_val_00000045.JPEG'</span><span class=\"p\">)</span>\n<span class=\"n\">tensor</span> <span class=\"o\">=</span> <span class=\"n\">image_to_tensor</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n\n<span class=\"n\">device</span> <span class=\"o\">=</span> <span class=\"n\">TPUDevice</span><span class=\"p\">()</span>\n<span class=\"n\">program</span> <span class=\"o\">=</span> <span class=\"n\">TPUProgram</span><span class=\"p\">(</span><span class=\"s2\">\"resnet50.tpu\"</span><span class=\"p\">)</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">program</span><span class=\"p\">)</span>  <span class=\"c1\"># now device is ready to make inference</span>\n\n<span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"n\">tensor</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n<span class=\"n\">tpu_tensor_to_classes</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">top</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">timeit</span> <span class=\"kn\">import</span> <span class=\"n\">timeit</span>\n<span class=\"n\">timeit</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"n\">tensor</span><span class=\"p\">]),</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</pre>\n<h2>\u041f\u0440\u0438\u043c\u0435\u0440 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0443\u0444\u0435\u0440\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445</h2>\n<pre><code>from iva_tpu import TPUDevice, TPUProgram\nprogram = TPUProgram(\"omega_program_dnn_quant_3.0.0.tpu\")\ndevice = TPUDevice()\ndevice.load(program)\n\nwith open(\"f.bin\", \"rb\") as f:\n    buf=f.read()\n\ndevice.set_input_buffer(buf, 0)\ndevice.run_inference()\n\nfor i in range(3):\n  o = device.get_output_buffer(i)\n  with open(f\"o{i}.bin\", \"wb\") as f:\n    f.write(o)\n</code></pre>\n\n          </div>"}, "last_serial": 7187438, "releases": {"7.0.2": [{"comment_text": "", "digests": {"md5": "3d6afc79a522a126919636c87c49b3d7", "sha256": "876b139b674f9ddb5545aaf08499d0ab4d07350728d3fc31f3f7196be5498a98"}, "downloads": -1, "filename": "iva-tpu-7.0.2.tar.gz", "has_sig": false, "md5_digest": "3d6afc79a522a126919636c87c49b3d7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 283946, "upload_time": "2020-05-06T13:51:29", "upload_time_iso_8601": "2020-05-06T13:51:29.079120Z", "url": "https://files.pythonhosted.org/packages/81/c2/2cc75e95d9ec57e0ed0caaa9c82aa13f172b82d9cec69932d35e567db249/iva-tpu-7.0.2.tar.gz", "yanked": false}], "7.0.3": [{"comment_text": "", "digests": {"md5": "aa621a1168eb64e12ad02cdc7c4cebff", "sha256": "cb8ce1ba612465cc9b509b3e5284fb180e574de0ae708af87df1eb192bec1e7f"}, "downloads": -1, "filename": "iva-tpu-7.0.3.tar.gz", "has_sig": false, "md5_digest": "aa621a1168eb64e12ad02cdc7c4cebff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 294677, "upload_time": "2020-05-07T10:54:48", "upload_time_iso_8601": "2020-05-07T10:54:48.993166Z", "url": "https://files.pythonhosted.org/packages/1b/f5/b68753cb4cd167429c56b43ce75bce6e2137ec026a0ba30e31234d64cb28/iva-tpu-7.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa621a1168eb64e12ad02cdc7c4cebff", "sha256": "cb8ce1ba612465cc9b509b3e5284fb180e574de0ae708af87df1eb192bec1e7f"}, "downloads": -1, "filename": "iva-tpu-7.0.3.tar.gz", "has_sig": false, "md5_digest": "aa621a1168eb64e12ad02cdc7c4cebff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 294677, "upload_time": "2020-05-07T10:54:48", "upload_time_iso_8601": "2020-05-07T10:54:48.993166Z", "url": "https://files.pythonhosted.org/packages/1b/f5/b68753cb4cd167429c56b43ce75bce6e2137ec026a0ba30e31234d64cb28/iva-tpu-7.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:33 2020"}