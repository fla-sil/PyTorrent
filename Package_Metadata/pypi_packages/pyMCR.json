{"info": {"author": "Charles H. Camp Jr.", "author_email": "charles.camp@nist.gov", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "Operating System :: OS Independent", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Scientific/Engineering :: Physics"], "description": ".. -*- mode: rst -*-\n\n.. image:: https://travis-ci.com/CCampJr/pyMCR.svg?branch=master\n    :alt: Travis CI Status\n    :target: https://travis-ci.com/CCampJr/pyMCR\n\n.. image:: https://ci.appveyor.com/api/projects/status/ajld1bj7jo4oweio/branch/master?svg=true\n    :alt: AppVeyor CI Status\n    :target: https://ci.appveyor.com/project/CCampJr/pyMCR\n\n.. image:: https://codecov.io/gh/CCampJr/pyMCR/branch/master/graph/badge.svg\n    :alt: Codecov\n    :target: https://codecov.io/gh/CCampJr/pyMCR\n\n.. image:: https://img.shields.io/pypi/pyversions/pyMCR.svg\n    :alt: PyPI - Python Version\n    :target: https://pypi.org/project/pyMCR/\n\n.. image:: https://img.shields.io/pypi/v/pyMCR.svg\n    :alt: PyPI Project Page\n    :target: https://pypi.org/project/pyMCR/\n\n.. image:: https://anaconda.org/conda-forge/pymcr/badges/version.svg\n    :alt: Anaconda Cloud\n    :target: https://anaconda.org/conda-forge/pymcr\n\n.. image:: https://img.shields.io/badge/License-NIST%20Public%20Domain-green.svg\n    :alt: NIST Public Domain\n    :target: https://github.com/usnistgov/pyMCR/blob/master/LICENSE.md\n\npyMCR: Multivariate Curve Resolution in Python\n===============================================================\n\nDocumentation available online at https://pages.nist.gov/pyMCR\n\nSoftware DOI: https://doi.org/10.18434/M32064\n\nManuscript DOI: https://doi.org/10.6028/jres.124.018\n\npyMCR is a small package for performing multivariate curve resolution.\nCurrently, it implements a simple alternating regression scheme (MCR-AR). The most common\nimplementation is with ordinary least-squares regression, MCR-ALS.\n\nMCR with non-negativity constraints on both matrices is the same as non-negative matrix factorization (NMF). Historically,\nother names were used for MCR as well:\n\n-   Self modeling mixture analysis (SMMA)\n-   Self modeling curve resolution (SMCR)\n\nAvailable methods:\n\n-   Regressors:\n\n    -   `Ordinary least squares <https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.lstsq.html>`_ (default)\n    -   `Non-negatively constrained least squares \n        <https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.nnls.html>`_\n    -   Native support for `scikit-learn linear model regressors \n        <http://scikit-learn.org/stable/modules/linear_model.html>`_\n        (e.g., `LinearRegression <http://scikit-learn.org/stable/modules/linear_model.html#ordinary-least-squares>`_, \n        `RidgeRegression <http://scikit-learn.org/stable/modules/linear_model.html#ridge-regression>`_, \n        `Lasso <http://scikit-learn.org/stable/modules/linear_model.html#lasso>`_)\n\n-   Constraints\n\n    -   Non-negativity\n    -   Normalization\n    -   Zero end-points\n    -   Zero (approx) end-points of cumulative summation (can specify nodes as well)\n    -   Non-negativity of cumulative summation\n    -   Compress or cut values above or below a threshold value\n    -   Replace sum-across-features samples (e.g., 0 concentration) with prescribed target\n    -   Enforce a plane (\"planarize\"). E.g., a concentration image is a plane.\n\n-   Error metrics / Loss function\n\n    -   Mean-squared error\n\n-   Other options\n\n    -   Fix known targets (C and/or ST, and let others vary)\n\nWhat it **does** do:\n\n-   Approximate the concentration and spectral matrices via minimization routines. \n    This is the core the MCR methods.\n-   Enable the application of certain constraints in a user-defined order.\n\nWhat it **does not** do:\n\n-   Estimate the number of components in the sample. This is a bonus feature in \n    some more-advanced MCR-ALS packages.\n\n    - In MATLAB: https://mcrals.wordpress.com/\n    - In R: https://cran.r-project.org/web/packages/ALS/index.html\n\nDependencies\n------------\n\n**Note**: These are the developmental system specs. Older versions of certain\npackages may work.\n\n-   python >= 3.4\n    \n    - Tested with 3.4.6, 3.5.4, 3.6.3, 3.6.5, 3.7.1\n\n-   numpy (1.9.3)\n    \n    - Tested with 1.12.1, 1.13.1, 1.13.3, 1.14.3, 1.14.6\n\n-   scipy (1.0.0)\n\n    - Tested with 1.0.0, 1.0.1, 1.1.0\n\n-   scikit-learn, optional (0.2.0)\n\nKnown Issues\n------------\n\n\nInstallation\n------------\n\nUsing pip (hard install)\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code::\n\n    # Only Python 3.* installed\n    pip install pyMCR\n\n    # If you have both Python 2.* and 3.* you may need\n    pip3 install pyMCR\n\nUsing pip (soft install [can update with git])\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code::\n    \n    # Make new directory for pyMCR and enter it\n    # Clone from github\n    git clone https://github.com/usnistgov/pyMCR\n\n    # Only Python 3.* installed\n    pip install -e .\n\n    # If you have both Python 2.* and 3.* you may need instead\n    pip3 install -e .\n\n    # To update in the future\n    git pull\n\nUsing setuptools\n~~~~~~~~~~~~~~~~\n\nYou will need to `download the repository <https://github.com/usnistgov/pyMCR>`_\nor clone the repository with git:\n\n.. code::\n    \n    # Make new directory for pyMCR and enter it\n    # Clone from github\n    git clone https://github.com/usnistgov/pyMCR\n\nPerform the install:\n\n.. code::\n\n    python setup.py install\n\nLogging\n--------\n\n**New in pyMCR 0.3.1**, Python's native logging module is now used to capture messages. Though this is not as \nconvenient as print() statements, it has many advantages.\n\n- Logging module docs: https://docs.python.org/3.7/library/logging.html\n- Logging tutorial: https://docs.python.org/3.7/howto/logging.html#logging-basic-tutorial\n- Logging cookbook: https://docs.python.org/3.7/howto/logging-cookbook.html#logging-cookbook\n\nA simple example that prints simplified logging messages to the stdout (command line):\n\n.. code:: python\n\n    import sys\n    import logging\n    \n    # Need to import pymcr or mcr prior to setting up the logger\n    from pymcr.mcr import McrAR\n\n    logger = logging.getLogger('pymcr')\n    logger.setLevel(logging.DEBUG)\n\n    # StdOut is a \"stream\"; thus, StreamHandler\n    stdout_handler = logging.StreamHandler(stream=sys.stdout)\n\n    # Set the message format. Simple and removing log level or date info\n    stdout_format = logging.Formatter('%(message)s')  # Just a basic message akin to print statements\n    stdout_handler.setFormatter(stdout_format)\n\n    logger.addHandler(stdout_handler)\n\n    # Begin your code for pyMCR below\n    \n\nUsage\n-----\n\n.. code:: python\n\n    from pymcr.mcr import McrAR\n    mcrar = McrAR()\n    \n    # MCR assumes a system of the form: D = CS^T\n    #\n    # Data that you will provide (hyperspectral context):\n    # D [n_pixels, n_frequencies]  # Hyperspectral image unraveled in space (2D)\n    #\n    # initial_spectra [n_components, n_frequencies]  ## S^T in the literature\n    # OR\n    # initial_conc [n_pixels, n_components]   ## C in the literature\n\n    # If you have an initial estimate of the spectra\n    mcrar.fit(D, ST=initial_spectra)\n\n    # Otherwise, if you have an initial estimate of the concentrations\n    mcrar.fit(D, C=initial_conc)\n\nExample Results\n---------------\n\nCommand line and Jupyter notebook examples are provided in the ``Examples/`` folder. Examples of instantiating\nthe McrAR class with different regressors available in the `documentation <https://pages.nist.gov/pyMCR>`_ .\n\nFrom ``Examples/Demo.ipynb``:\n\n.. image:: ./Examples/mcr_spectra_retr.png\n\n.. image:: ./Examples/mcr_conc_retr.png\n\n\nCiting this Software\n--------------------\n\nIf you use *pyMCR*, citing the following article is much appreciated:\n\n-   `C. H. Camp Jr., \"pyMCR: A Python Library for MultivariateCurve Resolution Analysis with Alternating Regression (MCR-AR)\", 124, 1-10 (2019).\n    <https://doi.org/10.6028/jres.124.018>`_.\n\n\nReferences\n----------\n\n-   `W. H. Lawton and E. A. Sylvestre, \"Self Modeling Curve Resolution\", \n    Technometrics 13, 617\u2013633 (1971). <https://www.jstor.org/stable/1267173>`_\n-   https://mcrals.wordpress.com/theory/\n-   `J. Jaumot, R. Gargallo, A. de Juan, and R. Tauler, \"A graphical user-friendly \n    interface for MCR-ALS: a new tool for multivariate curve resolution in\n    MATLAB\", Chemometrics and Intelligent Laboratory Systems 76, 101-110 \n    (2005). <http://www.sciencedirect.com/science/article/pii/S0169743904002874>`_\n-   `J. Felten, H. Hall, J. Jaumot, R. Tauler, A. de Juan, and A. Gorzs\u00e1s, \n    \"Vibrational spectroscopic image analysis of biological material using \n    multivariate curve resolution\u2013alternating least squares (MCR-ALS)\", Nature Protocols \n    10, 217-240 (2015). <https://www.nature.com/articles/nprot.2015.008>`_\n    \n\nLICENSE\n----------\nThis software was developed by employees of the National Institute of Standards \nand Technology (NIST), an agency of the Federal Government. Pursuant to \n`title 17 United States Code Section 105 <http://www.copyright.gov/title17/92chap1.html#105>`_, \nworks of NIST employees are not subject to copyright protection in the United States and are \nconsidered to be in the public domain. Permission to freely use, copy, modify, \nand distribute this software and its documentation without fee is hereby granted, \nprovided that this notice and disclaimer of warranty appears in all copies.\n\nTHE SOFTWARE IS PROVIDED 'AS IS' WITHOUT ANY WARRANTY OF ANY KIND, EITHER \nEXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY \nTHAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF \nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND FREEDOM FROM INFRINGEMENT, \nAND ANY WARRANTY THAT THE DOCUMENTATION WILL CONFORM TO THE SOFTWARE, OR ANY \nWARRANTY THAT THE SOFTWARE WILL BE ERROR FREE. IN NO EVENT SHALL NIST BE LIABLE \nFOR ANY DAMAGES, INCLUDING, BUT NOT LIMITED TO, DIRECT, INDIRECT, SPECIAL OR \nCONSEQUENTIAL DAMAGES, ARISING OUT OF, RESULTING FROM, OR IN ANY WAY CONNECTED \nWITH THIS SOFTWARE, WHETHER OR NOT BASED UPON WARRANTY, CONTRACT, TORT, OR \nOTHERWISE, WHETHER OR NOT INJURY WAS SUSTAINED BY PERSONS OR PROPERTY OR \nOTHERWISE, AND WHETHER OR NOT LOSS WAS SUSTAINED FROM, OR AROSE OUT OF THE \nRESULTS OF, OR USE OF, THE SOFTWARE OR SERVICES PROVIDED HEREUNDER.\n\nContact\n-------\nCharles H Camp Jr: `charles.camp@nist.gov <mailto:charles.camp@nist.gov>`_\n\nContributors\n-------------\n\n-   Charles H Camp Jr\n-   Charles Le Losq (charles.lelosq@anu.edu.au)\n-   Robert Kern (rkern@enthought.com)\n-   Joshua Taillon (joshua.taillon@nist.gov)", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/usnistgov/pyMCR", "keywords": "", "license": "Public Domain", "maintainer": "", "maintainer_email": "", "name": "pyMCR", "package_url": "https://pypi.org/project/pyMCR/", "platform": "", "project_url": "https://pypi.org/project/pyMCR/", "project_urls": {"Homepage": "https://github.com/usnistgov/pyMCR"}, "release_url": "https://pypi.org/project/pyMCR/0.3.2/", "requires_dist": null, "requires_python": "", "summary": "Multivariate Curve Resolution in Python", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.com/CCampJr/pyMCR\" rel=\"nofollow\"><img alt=\"Travis CI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d06ad871f8fa8b38fcc73d93b4936e5565349ab/68747470733a2f2f7472617669732d63692e636f6d2f4343616d704a722f70794d43522e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/CCampJr/pyMCR\" rel=\"nofollow\"><img alt=\"AppVeyor CI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/735cf47978dfa6b3b2a2d482f36887e1346f305e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f616a6c6431626a376a6f346f7765696f2f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<a href=\"https://codecov.io/gh/CCampJr/pyMCR\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e86854327b578a080ec383b3d0fee68cdd4f22a9/68747470733a2f2f636f6465636f762e696f2f67682f4343616d704a722f70794d43522f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/pyMCR/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dce02458d18bd4a2e9a55c9fb8402869a97925a3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70794d43522e737667\"></a>\n<a href=\"https://pypi.org/project/pyMCR/\" rel=\"nofollow\"><img alt=\"PyPI Project Page\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a37e4577f61957f21a90f12fbd4a07d196017d7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70794d43522e737667\"></a>\n<a href=\"https://anaconda.org/conda-forge/pymcr\" rel=\"nofollow\"><img alt=\"Anaconda Cloud\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/762a0802c385052276a19398e3b975ac07c01b32/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f70796d63722f6261646765732f76657273696f6e2e737667\"></a>\n<a href=\"https://github.com/usnistgov/pyMCR/blob/master/LICENSE.md\" rel=\"nofollow\"><img alt=\"NIST Public Domain\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/008f6afe7091a504326add8f5caa9f8c95f5348b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4e4953542532305075626c6963253230446f6d61696e2d677265656e2e737667\"></a>\n<div id=\"pymcr-multivariate-curve-resolution-in-python\">\n<h2>pyMCR: Multivariate Curve Resolution in Python</h2>\n<p>Documentation available online at <a href=\"https://pages.nist.gov/pyMCR\" rel=\"nofollow\">https://pages.nist.gov/pyMCR</a></p>\n<p>Software DOI: <a href=\"https://doi.org/10.18434/M32064\" rel=\"nofollow\">https://doi.org/10.18434/M32064</a></p>\n<p>Manuscript DOI: <a href=\"https://doi.org/10.6028/jres.124.018\" rel=\"nofollow\">https://doi.org/10.6028/jres.124.018</a></p>\n<p>pyMCR is a small package for performing multivariate curve resolution.\nCurrently, it implements a simple alternating regression scheme (MCR-AR). The most common\nimplementation is with ordinary least-squares regression, MCR-ALS.</p>\n<p>MCR with non-negativity constraints on both matrices is the same as non-negative matrix factorization (NMF). Historically,\nother names were used for MCR as well:</p>\n<ul>\n<li>Self modeling mixture analysis (SMMA)</li>\n<li>Self modeling curve resolution (SMCR)</li>\n</ul>\n<p>Available methods:</p>\n<ul>\n<li>Regressors:<ul>\n<li><a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.lstsq.html\" rel=\"nofollow\">Ordinary least squares</a> (default)</li>\n<li><a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.nnls.html\" rel=\"nofollow\">Non-negatively constrained least squares</a></li>\n<li>Native support for <a href=\"http://scikit-learn.org/stable/modules/linear_model.html\" rel=\"nofollow\">scikit-learn linear model regressors</a>\n(e.g., <a href=\"http://scikit-learn.org/stable/modules/linear_model.html#ordinary-least-squares\" rel=\"nofollow\">LinearRegression</a>,\n<a href=\"http://scikit-learn.org/stable/modules/linear_model.html#ridge-regression\" rel=\"nofollow\">RidgeRegression</a>,\n<a href=\"http://scikit-learn.org/stable/modules/linear_model.html#lasso\" rel=\"nofollow\">Lasso</a>)</li>\n</ul>\n</li>\n<li>Constraints<ul>\n<li>Non-negativity</li>\n<li>Normalization</li>\n<li>Zero end-points</li>\n<li>Zero (approx) end-points of cumulative summation (can specify nodes as well)</li>\n<li>Non-negativity of cumulative summation</li>\n<li>Compress or cut values above or below a threshold value</li>\n<li>Replace sum-across-features samples (e.g., 0 concentration) with prescribed target</li>\n<li>Enforce a plane (\u201cplanarize\u201d). E.g., a concentration image is a plane.</li>\n</ul>\n</li>\n<li>Error metrics / Loss function<ul>\n<li>Mean-squared error</li>\n</ul>\n</li>\n<li>Other options<ul>\n<li>Fix known targets (C and/or ST, and let others vary)</li>\n</ul>\n</li>\n</ul>\n<p>What it <strong>does</strong> do:</p>\n<ul>\n<li>Approximate the concentration and spectral matrices via minimization routines.\nThis is the core the MCR methods.</li>\n<li>Enable the application of certain constraints in a user-defined order.</li>\n</ul>\n<p>What it <strong>does not</strong> do:</p>\n<ul>\n<li>Estimate the number of components in the sample. This is a bonus feature in\nsome more-advanced MCR-ALS packages.<ul>\n<li>In MATLAB: <a href=\"https://mcrals.wordpress.com/\" rel=\"nofollow\">https://mcrals.wordpress.com/</a></li>\n<li>In R: <a href=\"https://cran.r-project.org/web/packages/ALS/index.html\" rel=\"nofollow\">https://cran.r-project.org/web/packages/ALS/index.html</a></li>\n</ul>\n</li>\n</ul>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<p><strong>Note</strong>: These are the developmental system specs. Older versions of certain\npackages may work.</p>\n<ul>\n<li>python &gt;= 3.4<ul>\n<li>Tested with 3.4.6, 3.5.4, 3.6.3, 3.6.5, 3.7.1</li>\n</ul>\n</li>\n<li>numpy (1.9.3)<ul>\n<li>Tested with 1.12.1, 1.13.1, 1.13.3, 1.14.3, 1.14.6</li>\n</ul>\n</li>\n<li>scipy (1.0.0)<ul>\n<li>Tested with 1.0.0, 1.0.1, 1.1.0</li>\n</ul>\n</li>\n<li>scikit-learn, optional (0.2.0)</li>\n</ul>\n</div>\n<div id=\"known-issues\">\n<h3>Known Issues</h3>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<div id=\"using-pip-hard-install\">\n<h4>Using pip (hard install)</h4>\n<pre># Only Python 3.* installed\npip install pyMCR\n\n# If you have both Python 2.* and 3.* you may need\npip3 install pyMCR\n</pre>\n</div>\n<div id=\"using-pip-soft-install-can-update-with-git\">\n<h4>Using pip (soft install [can update with git])</h4>\n<pre># Make new directory for pyMCR and enter it\n# Clone from github\ngit clone https://github.com/usnistgov/pyMCR\n\n# Only Python 3.* installed\npip install -e .\n\n# If you have both Python 2.* and 3.* you may need instead\npip3 install -e .\n\n# To update in the future\ngit pull\n</pre>\n</div>\n<div id=\"using-setuptools\">\n<h4>Using setuptools</h4>\n<p>You will need to <a href=\"https://github.com/usnistgov/pyMCR\" rel=\"nofollow\">download the repository</a>\nor clone the repository with git:</p>\n<pre># Make new directory for pyMCR and enter it\n# Clone from github\ngit clone https://github.com/usnistgov/pyMCR\n</pre>\n<p>Perform the install:</p>\n<pre>python setup.py install\n</pre>\n</div>\n</div>\n<div id=\"logging\">\n<h3>Logging</h3>\n<p><strong>New in pyMCR 0.3.1</strong>, Python\u2019s native logging module is now used to capture messages. Though this is not as\nconvenient as print() statements, it has many advantages.</p>\n<ul>\n<li>Logging module docs: <a href=\"https://docs.python.org/3.7/library/logging.html\" rel=\"nofollow\">https://docs.python.org/3.7/library/logging.html</a></li>\n<li>Logging tutorial: <a href=\"https://docs.python.org/3.7/howto/logging.html#logging-basic-tutorial\" rel=\"nofollow\">https://docs.python.org/3.7/howto/logging.html#logging-basic-tutorial</a></li>\n<li>Logging cookbook: <a href=\"https://docs.python.org/3.7/howto/logging-cookbook.html#logging-cookbook\" rel=\"nofollow\">https://docs.python.org/3.7/howto/logging-cookbook.html#logging-cookbook</a></li>\n</ul>\n<p>A simple example that prints simplified logging messages to the stdout (command line):</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"c1\"># Need to import pymcr or mcr prior to setting up the logger</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pymcr.mcr</span> <span class=\"kn\">import</span> <span class=\"n\">McrAR</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'pymcr'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># StdOut is a \"stream\"; thus, StreamHandler</span>\n<span class=\"n\">stdout_handler</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">StreamHandler</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"o\">=</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Set the message format. Simple and removing log level or date info</span>\n<span class=\"n\">stdout_format</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Formatter</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span><span class=\"p\">)</span>  <span class=\"c1\"># Just a basic message akin to print statements</span>\n<span class=\"n\">stdout_handler</span><span class=\"o\">.</span><span class=\"n\">setFormatter</span><span class=\"p\">(</span><span class=\"n\">stdout_format</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">stdout_handler</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Begin your code for pyMCR below</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymcr.mcr</span> <span class=\"kn\">import</span> <span class=\"n\">McrAR</span>\n<span class=\"n\">mcrar</span> <span class=\"o\">=</span> <span class=\"n\">McrAR</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># MCR assumes a system of the form: D = CS^T</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Data that you will provide (hyperspectral context):</span>\n<span class=\"c1\"># D [n_pixels, n_frequencies]  # Hyperspectral image unraveled in space (2D)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># initial_spectra [n_components, n_frequencies]  ## S^T in the literature</span>\n<span class=\"c1\"># OR</span>\n<span class=\"c1\"># initial_conc [n_pixels, n_components]   ## C in the literature</span>\n\n<span class=\"c1\"># If you have an initial estimate of the spectra</span>\n<span class=\"n\">mcrar</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">ST</span><span class=\"o\">=</span><span class=\"n\">initial_spectra</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Otherwise, if you have an initial estimate of the concentrations</span>\n<span class=\"n\">mcrar</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">C</span><span class=\"o\">=</span><span class=\"n\">initial_conc</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"example-results\">\n<h3>Example Results</h3>\n<p>Command line and Jupyter notebook examples are provided in the <tt>Examples/</tt> folder. Examples of instantiating\nthe McrAR class with different regressors available in the <a href=\"https://pages.nist.gov/pyMCR\" rel=\"nofollow\">documentation</a> .</p>\n<p>From <tt>Examples/Demo.ipynb</tt>:</p>\n<img alt=\"./Examples/mcr_spectra_retr.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b0f11e778dde6f5a9e10148d93e27fef9d8ec4f/2e2f4578616d706c65732f6d63725f737065637472615f726574722e706e67\">\n<img alt=\"./Examples/mcr_conc_retr.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/508422d502e246073e47d1a93e7dd53b4810aaef/2e2f4578616d706c65732f6d63725f636f6e635f726574722e706e67\">\n</div>\n<div id=\"citing-this-software\">\n<h3>Citing this Software</h3>\n<p>If you use <em>pyMCR</em>, citing the following article is much appreciated:</p>\n<ul>\n<li><a href=\"https://doi.org/10.6028/jres.124.018\" rel=\"nofollow\">C. H. Camp Jr., \u201cpyMCR: A Python Library for MultivariateCurve Resolution Analysis with Alternating Regression (MCR-AR)\u201d, 124, 1-10 (2019).</a>.</li>\n</ul>\n</div>\n<div id=\"references\">\n<h3>References</h3>\n<ul>\n<li><a href=\"https://www.jstor.org/stable/1267173\" rel=\"nofollow\">W. H. Lawton and E. A. Sylvestre, \u201cSelf Modeling Curve Resolution\u201d,\nTechnometrics 13, 617\u2013633 (1971).</a></li>\n<li><a href=\"https://mcrals.wordpress.com/theory/\" rel=\"nofollow\">https://mcrals.wordpress.com/theory/</a></li>\n<li><a href=\"http://www.sciencedirect.com/science/article/pii/S0169743904002874\" rel=\"nofollow\">J. Jaumot, R. Gargallo, A. de Juan, and R. Tauler, \u201cA graphical user-friendly\ninterface for MCR-ALS: a new tool for multivariate curve resolution in\nMATLAB\u201d, Chemometrics and Intelligent Laboratory Systems 76, 101-110\n(2005).</a></li>\n<li><a href=\"https://www.nature.com/articles/nprot.2015.008\" rel=\"nofollow\">J. Felten, H. Hall, J. Jaumot, R. Tauler, A. de Juan, and A. Gorzs\u00e1s,\n\u201cVibrational spectroscopic image analysis of biological material using\nmultivariate curve resolution\u2013alternating least squares (MCR-ALS)\u201d, Nature Protocols\n10, 217-240 (2015).</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h3>LICENSE</h3>\n<p>This software was developed by employees of the National Institute of Standards\nand Technology (NIST), an agency of the Federal Government. Pursuant to\n<a href=\"http://www.copyright.gov/title17/92chap1.html#105\" rel=\"nofollow\">title 17 United States Code Section 105</a>,\nworks of NIST employees are not subject to copyright protection in the United States and are\nconsidered to be in the public domain. Permission to freely use, copy, modify,\nand distribute this software and its documentation without fee is hereby granted,\nprovided that this notice and disclaimer of warranty appears in all copies.</p>\n<p>THE SOFTWARE IS PROVIDED \u2018AS IS\u2019 WITHOUT ANY WARRANTY OF ANY KIND, EITHER\nEXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY\nTHAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND FREEDOM FROM INFRINGEMENT,\nAND ANY WARRANTY THAT THE DOCUMENTATION WILL CONFORM TO THE SOFTWARE, OR ANY\nWARRANTY THAT THE SOFTWARE WILL BE ERROR FREE. IN NO EVENT SHALL NIST BE LIABLE\nFOR ANY DAMAGES, INCLUDING, BUT NOT LIMITED TO, DIRECT, INDIRECT, SPECIAL OR\nCONSEQUENTIAL DAMAGES, ARISING OUT OF, RESULTING FROM, OR IN ANY WAY CONNECTED\nWITH THIS SOFTWARE, WHETHER OR NOT BASED UPON WARRANTY, CONTRACT, TORT, OR\nOTHERWISE, WHETHER OR NOT INJURY WAS SUSTAINED BY PERSONS OR PROPERTY OR\nOTHERWISE, AND WHETHER OR NOT LOSS WAS SUSTAINED FROM, OR AROSE OUT OF THE\nRESULTS OF, OR USE OF, THE SOFTWARE OR SERVICES PROVIDED HEREUNDER.</p>\n</div>\n<div id=\"contact\">\n<h3>Contact</h3>\n<p>Charles H Camp Jr: <a href=\"mailto:charles.camp%40nist.gov\">charles<span>.</span>camp<span>@</span>nist<span>.</span>gov</a></p>\n</div>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<ul>\n<li>Charles H Camp Jr</li>\n<li>Charles Le Losq (<a href=\"mailto:charles.lelosq%40anu.edu.au\">charles<span>.</span>lelosq<span>@</span>anu<span>.</span>edu<span>.</span>au</a>)</li>\n<li>Robert Kern (<a href=\"mailto:rkern%40enthought.com\">rkern<span>@</span>enthought<span>.</span>com</a>)</li>\n<li>Joshua Taillon (<a href=\"mailto:joshua.taillon%40nist.gov\">joshua<span>.</span>taillon<span>@</span>nist<span>.</span>gov</a>)</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5446837, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "457009a047a2b1d43a5cab3d66cc804d", "sha256": "59490595196756920ebec287e7e29142f5b6b69697e17b53ee69326b23360da8"}, "downloads": -1, "filename": "pyMCR-0.1.0.tar.gz", "has_sig": false, "md5_digest": "457009a047a2b1d43a5cab3d66cc804d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12039, "upload_time": "2017-12-15T22:43:32", "upload_time_iso_8601": "2017-12-15T22:43:32.270213Z", "url": "https://files.pythonhosted.org/packages/fb/26/7247557e74fc6410c2202c0ee9c9abd2fb5f5dd7b6f68b8d3a63ebbf8473/pyMCR-0.1.0.tar.gz", "yanked": false}], "0.1.0rc0": [{"comment_text": "", "digests": {"md5": "4662be371ebf472ecc12bc00a8380cf7", "sha256": "7c1d9bbffe3add8975eadd98840ddb205d0958eea2417fa1763ced7230a2bc0d"}, "downloads": -1, "filename": "pyMCR-0.1.0rc0.tar.gz", "has_sig": false, "md5_digest": "4662be371ebf472ecc12bc00a8380cf7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12047, "upload_time": "2017-12-15T22:05:30", "upload_time_iso_8601": "2017-12-15T22:05:30.574993Z", "url": "https://files.pythonhosted.org/packages/74/52/505d461bbcfdbbaa027b686eb964c43d79ba4cfa567e77cba61de54ec4fa/pyMCR-0.1.0rc0.tar.gz", "yanked": false}], "0.1.0rc1": [{"comment_text": "", "digests": {"md5": "374b233dc9d59004bd0bbe999ae668c1", "sha256": "b1c01053047a0c20ce0a4692a36473fd32d3d3fff67839e81ab61373c3f66ca5"}, "downloads": -1, "filename": "pyMCR-0.1.0rc1.tar.gz", "has_sig": false, "md5_digest": "374b233dc9d59004bd0bbe999ae668c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12035, "upload_time": "2017-12-15T22:24:47", "upload_time_iso_8601": "2017-12-15T22:24:47.236279Z", "url": "https://files.pythonhosted.org/packages/25/43/cb272b27186e2b59d15a955668abb7a541e96ab6d62fe8ddafc88ffc00b8/pyMCR-0.1.0rc1.tar.gz", "yanked": false}], "0.1.1a0": [{"comment_text": "", "digests": {"md5": "18b8ee2b5ed936679cbb985df0cf7bd5", "sha256": "5983005042cafc55f0e334c42f693f3d2b6e398e0e598b45ed23d04114e4eb5e"}, "downloads": -1, "filename": "pyMCR-0.1.1a0.tar.gz", "has_sig": false, "md5_digest": "18b8ee2b5ed936679cbb985df0cf7bd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12091, "upload_time": "2017-12-19T04:34:07", "upload_time_iso_8601": "2017-12-19T04:34:07.338657Z", "url": "https://files.pythonhosted.org/packages/81/59/965f3df036b1c0d52ff52ffa402559d20930bae9fcafe2fe4cdca53e89b9/pyMCR-0.1.1a0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ce2a80d6391b3ae7c3eba3bc9c80f5e1", "sha256": "28fb807a932d30a150f9a6a51e191757ab7efdf6e440d9502a1aac97cb102319"}, "downloads": -1, "filename": "pyMCR-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ce2a80d6391b3ae7c3eba3bc9c80f5e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 551578, "upload_time": "2018-05-03T03:01:27", "upload_time_iso_8601": "2018-05-03T03:01:27.943057Z", "url": "https://files.pythonhosted.org/packages/49/24/5b73902b67d1a8331faa79ad816e24ca8848cb995cfd3c99a6b4feecd62a/pyMCR-0.2.0.tar.gz", "yanked": false}], "0.2.0rc0": [{"comment_text": "", "digests": {"md5": "44591fc971491b6ad34313136ec7cd08", "sha256": "3c4ceece28f21d7b1760dd814bd5d8d9675bdef695533b67a2e874f3836f666a"}, "downloads": -1, "filename": "pyMCR-0.2.0rc0.tar.gz", "has_sig": false, "md5_digest": "44591fc971491b6ad34313136ec7cd08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 961221, "upload_time": "2018-05-02T22:38:24", "upload_time_iso_8601": "2018-05-02T22:38:24.712417Z", "url": "https://files.pythonhosted.org/packages/72/bd/193e247a5a313514d21f9e60f0146382f11ab58dd4317e88ab1a7af550c8/pyMCR-0.2.0rc0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0a24211e41b5a087545fa5aefc07c04d", "sha256": "dfe66bbad218276ed229813d9f769a55643333cc81ad9882ad00e259bc021e5e"}, "downloads": -1, "filename": "pyMCR-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0a24211e41b5a087545fa5aefc07c04d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 513153, "upload_time": "2018-05-16T16:38:11", "upload_time_iso_8601": "2018-05-16T16:38:11.612569Z", "url": "https://files.pythonhosted.org/packages/fb/b1/bc7c5f71a908be9ecd53d4a737a1904ab870dfe3b045491fb8cd6fbec6e4/pyMCR-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "404fd5e45751f906c7b55443a2d290b8", "sha256": "3f6ca1de122bb9763fb33aa7bb302133b62252d853a7adb4a25ad1357a307d89"}, "downloads": -1, "filename": "pyMCR-0.3.0.tar.gz", "has_sig": false, "md5_digest": "404fd5e45751f906c7b55443a2d290b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 927335, "upload_time": "2019-04-22T16:37:14", "upload_time_iso_8601": "2019-04-22T16:37:14.847313Z", "url": "https://files.pythonhosted.org/packages/d8/37/2c866bc322fe14a45478dabf7aacba2fe5be98f5c787b638a596a286c22d/pyMCR-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "0a45ebb653192dedec51151b0639ec40", "sha256": "d9a2b7c9e1e002d1b2b6f952b1c3cb176e6e9cdb3c685b31431536c817127008"}, "downloads": -1, "filename": "pyMCR-0.3.1.tar.gz", "has_sig": false, "md5_digest": "0a45ebb653192dedec51151b0639ec40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 629170, "upload_time": "2019-05-17T06:01:35", "upload_time_iso_8601": "2019-05-17T06:01:35.340918Z", "url": "https://files.pythonhosted.org/packages/c7/46/4ec863fdba050aeaa14ea6755eddabb2cbb532fe61c05f897e720f0dd1be/pyMCR-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "0e026b93f41b0c1c0dc482978514c9ce", "sha256": "2192520584d25ee74c9d466e9d9f3f806ca76ff00c0d85cbf6f1fc6932ebe0f8"}, "downloads": -1, "filename": "pyMCR-0.3.2.tar.gz", "has_sig": false, "md5_digest": "0e026b93f41b0c1c0dc482978514c9ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 914844, "upload_time": "2019-06-25T15:33:48", "upload_time_iso_8601": "2019-06-25T15:33:48.350899Z", "url": "https://files.pythonhosted.org/packages/bc/84/7b89a98d77727779de19847a02f0954552e36d6e70803e9b27ee2858392a/pyMCR-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e026b93f41b0c1c0dc482978514c9ce", "sha256": "2192520584d25ee74c9d466e9d9f3f806ca76ff00c0d85cbf6f1fc6932ebe0f8"}, "downloads": -1, "filename": "pyMCR-0.3.2.tar.gz", "has_sig": false, "md5_digest": "0e026b93f41b0c1c0dc482978514c9ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 914844, "upload_time": "2019-06-25T15:33:48", "upload_time_iso_8601": "2019-06-25T15:33:48.350899Z", "url": "https://files.pythonhosted.org/packages/bc/84/7b89a98d77727779de19847a02f0954552e36d6e70803e9b27ee2858392a/pyMCR-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:21 2020"}