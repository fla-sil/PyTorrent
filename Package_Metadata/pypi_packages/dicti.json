{"info": {"author": "Thomas Levine", "author_email": "occurrence@thomaslevine.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Programming Language :: Python :: 2.7"], "description": "dicti\n=======\n`dicti` is a dictionary with case-insensitive keys.\n\nIt works like the normal `dict` except that key matching\nis case-insensitive.\n\nInstantiate like you would instantiate a normal dict;\nfor example, these work.\n\n    dict(foo = 'bar', answer = 42)\n    dicti(foo = 'bar', answer = 42)\n    \n    dict({'foo': 'bar', 'answer': 42})\n    dicti({'foo': 'bar', 'answer': 42})\n\nMethods that accept keys and have side-effects record\nthe original case, just as a normal dictionary does.\n\n    di = dicti()\n    di['cAsE'] = 1\n    di.keys() == ['cAsE']\n    di['Case'] = 1\n    di.keys() == ['Case']\n    di['caSE'] == 1\n\nMethods that accept keys do the same thing regardless\nof what case you pass the key in.\n\nKeys are still stored in their original case, however;\nthe original keys are presented when you request them\nwith methods like `dicti.keys`.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tlevine/dicti", "keywords": null, "license": "AGPL", "maintainer": null, "maintainer_email": null, "name": "dicti", "package_url": "https://pypi.org/project/dicti/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dicti/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/tlevine/dicti"}, "release_url": "https://pypi.org/project/dicti/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Dictionary with case-insensitive keys", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><cite>dicti</cite> is a dictionary with case-insensitive keys.</p>\n<p>It works like the normal <cite>dict</cite> except that key matching\nis case-insensitive.</p>\n<p>Instantiate like you would instantiate a normal dict;\nfor example, these work.</p>\n<blockquote>\n<p>dict(foo = \u2018bar\u2019, answer = 42)\ndicti(foo = \u2018bar\u2019, answer = 42)</p>\n<p>dict({\u2018foo\u2019: \u2018bar\u2019, \u2018answer\u2019: 42})\ndicti({\u2018foo\u2019: \u2018bar\u2019, \u2018answer\u2019: 42})</p>\n</blockquote>\n<p>Methods that accept keys and have side-effects record\nthe original case, just as a normal dictionary does.</p>\n<blockquote>\ndi = dicti()\ndi[\u2018cAsE\u2019] = 1\ndi.keys() == [\u2018cAsE\u2019]\ndi[\u2018Case\u2019] = 1\ndi.keys() == [\u2018Case\u2019]\ndi[\u2018caSE\u2019] == 1</blockquote>\n<p>Methods that accept keys do the same thing regardless\nof what case you pass the key in.</p>\n<p>Keys are still stored in their original case, however;\nthe original keys are presented when you request them\nwith methods like <cite>dicti.keys</cite>.</p>\n\n          </div>"}, "last_serial": 788945, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "682ae3379a387b916abff5032787d973", "sha256": "e9e821019d293586cab522d7cf0d1e85c11e6f0e4c5085e0890241f9b96b7b28"}, "downloads": -1, "filename": "dicti-0.0.1.tar.gz", "has_sig": false, "md5_digest": "682ae3379a387b916abff5032787d973", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15585, "upload_time": "2012-05-03T04:52:20", "upload_time_iso_8601": "2012-05-03T04:52:20.115012Z", "url": "https://files.pythonhosted.org/packages/7d/01/44ccb0bd4a711c12576771b478f5dada512906ffa58f93e22d5191259d3e/dicti-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "682ae3379a387b916abff5032787d973", "sha256": "e9e821019d293586cab522d7cf0d1e85c11e6f0e4c5085e0890241f9b96b7b28"}, "downloads": -1, "filename": "dicti-0.0.1.tar.gz", "has_sig": false, "md5_digest": "682ae3379a387b916abff5032787d973", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15585, "upload_time": "2012-05-03T04:52:20", "upload_time_iso_8601": "2012-05-03T04:52:20.115012Z", "url": "https://files.pythonhosted.org/packages/7d/01/44ccb0bd4a711c12576771b478f5dada512906ffa58f93e22d5191259d3e/dicti-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:33 2020"}