{"info": {"author": "Eugene Naydenov", "author_email": "t.34.oxygen+github+signit@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Security", "Topic :: Security :: Cryptography", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "SignIt\n======\n\n|Build Status| |Coverage Status| |PyPI version|\n\nAbout\n^^^^^\n\n**SignIt** is a helper-library to create and verify HMAC (HMAC-SHA256 by\ndefault) signatures that could be used to sign requests to the APIs.\n\n--------------\n\nUse cases\n^^^^^^^^^\n\nOn the **client** side you could\n\n-  sign your requests using ``signit.signature.create()``\n\nOn the **server** side you could\n\n-  parse a signature retrieved from request header or query string using\n   ``signit.signature.parse()``\n-  verify retrieved signature using ``signit.signature.verify()``\n-  generate access and secret keys for client using\n   ``signit.key.generate()``\n\n--------------\n\nExample of usage (client)\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: py\n\n    import datetime\n    import requests\n    import signit\n\n    ACCESS_KEY = 'MY_ACCESS_KEY'\n    SECRET_KEY = 'MY_SECRET_KEY'\n\n    def create_user(user: dict) -> bool:\n        msg = str(datetime.datetime.utcnow().timestamp())\n        auth = signit.signature.create(MY_ACCESS_KEY, MY_SECRET_KEY, msg)\n        headers = {\n            'Unix-Timestamp': msg,\n            'Authorization': auth,\n        }\n        r = requests.post('http://example.com/users', json=user, headers=headers)\n        return r.status_code == 201\n\nThe Authorization header will look like\n\n.. code:: http\n\n    Authorization: HMAC-SHA256 MY_ACCESS_KEY:0947c88ce16d078dde4a2aded1fe4627643a378757dccc3428c19569fea99542\n\n--------------\n\nExample of usage (server)\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe server has issued an access key and a secret key for you. And only\nyou and the server know the secret key.\n\nSo that the server could identify you by your public access key and\nensure that you used the secret key to produce a hash of the message in\nthis way:\n\n.. code:: python\n\n    # ...somewhere in my_api/resources/user.py\n    import signit\n    from aiohttp import web\n    from psycopg2 import IntegrityError\n\n    async def post(request):\n        message = request.headers['Unix-Timestamp']\n        signature = request.headers['Authorization']\n        prefix, access_key, hmac_digest = signit.signature.parse(signature)\n        secret_key = await get_secret_key_from_db(access_key)\n        if not signit.signature.verify(hmac_digest, secret_key, message):\n            raise web.HTTPUnauthorized('Invalid signature')\n        try:\n            await create_user(request)\n        except IntegrityError:\n            raise web.HTTPConflict()\n        return web.HTTPCreated()\n\nAdditionally if you use a ``Unix-Timestamp`` as a message message the\nserver could check if the request is too old and deny with ``401`` to\nprotect against \"replay attacks\".\n\n.. |Build Status| image:: https://travis-ci.org/f0t0n/signit.svg?branch=master\n   :target: https://travis-ci.org/f0t0n/signit\n.. |Coverage Status| image:: https://coveralls.io/repos/github/f0t0n/signit/badge.svg?branch=master\n   :target: https://coveralls.io/github/f0t0n/signit?branch=master\n.. |PyPI version| image:: https://badge.fury.io/py/signit.svg\n   :target: https://badge.fury.io/py/signit", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/f0t0n/signit/", "keywords": null, "license": "Apache 2", "maintainer": null, "maintainer_email": null, "name": "signit", "package_url": "https://pypi.org/project/signit/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/signit/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/f0t0n/signit/"}, "release_url": "https://pypi.org/project/signit/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "HMAC signature library for http requests signing", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/f0t0n/signit\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/889ddd5630df86f53964ed9d863cbc7905a917bb/68747470733a2f2f7472617669732d63692e6f72672f663074306e2f7369676e69742e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/f0t0n/signit?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e79265a4dc76f382621149813b93d9fc42605ae/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f663074306e2f7369676e69742f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://badge.fury.io/py/signit\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/957eb28b341e67d81158555469e47e5b10489376/68747470733a2f2f62616467652e667572792e696f2f70792f7369676e69742e737667\"></a></p>\n<div id=\"about\">\n<h2>About</h2>\n<p><strong>SignIt</strong> is a helper-library to create and verify HMAC (HMAC-SHA256 by\ndefault) signatures that could be used to sign requests to the APIs.</p>\n</div>\n<hr class=\"docutils\">\n<div id=\"use-cases\">\n<h2>Use cases</h2>\n<p>On the <strong>client</strong> side you could</p>\n<ul>\n<li>sign your requests using <tt>signit.signature.create()</tt></li>\n</ul>\n<p>On the <strong>server</strong> side you could</p>\n<ul>\n<li>parse a signature retrieved from request header or query string using\n<tt>signit.signature.parse()</tt></li>\n<li>verify retrieved signature using <tt>signit.signature.verify()</tt></li>\n<li>generate access and secret keys for client using\n<tt>signit.key.generate()</tt></li>\n</ul>\n</div>\n<hr class=\"docutils\">\n<div id=\"example-of-usage-client\">\n<h2>Example of usage (client)</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">import</span> <span class=\"nn\">signit</span>\n\n<span class=\"n\">ACCESS_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">'MY_ACCESS_KEY'</span>\n<span class=\"n\">SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">'MY_SECRET_KEY'</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_user</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n    <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">utcnow</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">())</span>\n    <span class=\"n\">auth</span> <span class=\"o\">=</span> <span class=\"n\">signit</span><span class=\"o\">.</span><span class=\"n\">signature</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">MY_ACCESS_KEY</span><span class=\"p\">,</span> <span class=\"n\">MY_SECRET_KEY</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">)</span>\n    <span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'Unix-Timestamp'</span><span class=\"p\">:</span> <span class=\"n\">msg</span><span class=\"p\">,</span>\n        <span class=\"s1\">'Authorization'</span><span class=\"p\">:</span> <span class=\"n\">auth</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'http://example.com/users'</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">201</span>\n</pre>\n<p>The Authorization header will look like</p>\n<pre><span class=\"err\">Authorization: HMAC-SHA256 MY_ACCESS_KEY:0947c88ce16d078dde4a2aded1fe4627643a378757dccc3428c19569fea99542</span>\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"example-of-usage-server\">\n<h2>Example of usage (server)</h2>\n<p>The server has issued an access key and a secret key for you. And only\nyou and the server know the secret key.</p>\n<p>So that the server could identify you by your public access key and\nensure that you used the secret key to produce a hash of the message in\nthis way:</p>\n<pre><span class=\"c1\"># ...somewhere in my_api/resources/user.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">signit</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">web</span>\n<span class=\"kn\">from</span> <span class=\"nn\">psycopg2</span> <span class=\"kn\">import</span> <span class=\"n\">IntegrityError</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'Unix-Timestamp'</span><span class=\"p\">]</span>\n    <span class=\"n\">signature</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'Authorization'</span><span class=\"p\">]</span>\n    <span class=\"n\">prefix</span><span class=\"p\">,</span> <span class=\"n\">access_key</span><span class=\"p\">,</span> <span class=\"n\">hmac_digest</span> <span class=\"o\">=</span> <span class=\"n\">signit</span><span class=\"o\">.</span><span class=\"n\">signature</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">signature</span><span class=\"p\">)</span>\n    <span class=\"n\">secret_key</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">get_secret_key_from_db</span><span class=\"p\">(</span><span class=\"n\">access_key</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">signit</span><span class=\"o\">.</span><span class=\"n\">signature</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"n\">hmac_digest</span><span class=\"p\">,</span> <span class=\"n\">secret_key</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">HTTPUnauthorized</span><span class=\"p\">(</span><span class=\"s1\">'Invalid signature'</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">create_user</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"n\">IntegrityError</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">HTTPConflict</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">HTTPCreated</span><span class=\"p\">()</span>\n</pre>\n<p>Additionally if you use a <tt><span class=\"pre\">Unix-Timestamp</span></tt> as a message message the\nserver could check if the request is too old and deny with <tt>401</tt> to\nprotect against \u201creplay attacks\u201d.</p>\n</div>\n\n          </div>"}, "last_serial": 2012189, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "23ac5a42bb7a9dcc6c142d0a404c0e3f", "sha256": "0e657b7b6615d6e91bd8685cc63e70aa8fff28fb7eb2437bac4b503139d325ab"}, "downloads": -1, "filename": "signit-0.1.1.tar.gz", "has_sig": false, "md5_digest": "23ac5a42bb7a9dcc6c142d0a404c0e3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3875, "upload_time": "2016-03-11T18:45:08", "upload_time_iso_8601": "2016-03-11T18:45:08.120347Z", "url": "https://files.pythonhosted.org/packages/68/d9/b02bcda6cf4412e7a0535ce469dd28bd419906b3fb6ef89db56a9d51facc/signit-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d7a790ad4fcea66c7b53c5ef956f1c8a", "sha256": "9b7103b484aee464043b857dddc288cd298441a8aa147c45e78e86fc942750df"}, "downloads": -1, "filename": "signit-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d7a790ad4fcea66c7b53c5ef956f1c8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3836, "upload_time": "2016-03-11T19:19:28", "upload_time_iso_8601": "2016-03-11T19:19:28.400859Z", "url": "https://files.pythonhosted.org/packages/e1/b1/a46e2e93d167b52d92888d1e53367f50099fe340d50a13705206b57db45f/signit-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "048a8b812c72fe293b6313c027eff2b1", "sha256": "e6838ada9db184a5441d90e674a8bf8cc3d4b27f6aef0ec369e2e6e47cf0a2ae"}, "downloads": -1, "filename": "signit-0.1.3.tar.gz", "has_sig": false, "md5_digest": "048a8b812c72fe293b6313c027eff2b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3841, "upload_time": "2016-03-11T19:59:43", "upload_time_iso_8601": "2016-03-11T19:59:43.951075Z", "url": "https://files.pythonhosted.org/packages/eb/5f/14263ca3657e63ff096f02a931b755030ff0462efc045331087af6432037/signit-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "6355ab7c6bae7b67ef819a5cd9d2032b", "sha256": "a3665c30dda2738f8c302bfc892dbb4e9e009cb828374ad2f670c554cb71be36"}, "downloads": -1, "filename": "signit-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6355ab7c6bae7b67ef819a5cd9d2032b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6261, "upload_time": "2016-03-13T02:00:22", "upload_time_iso_8601": "2016-03-13T02:00:22.311345Z", "url": "https://files.pythonhosted.org/packages/66/85/81ac406fee683d7b00729b990c13aedef9945e2a5166cc8310a28235267d/signit-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f525cc033d29fa69319e385ba887bbf", "sha256": "5d11c2de624fdb7cd836ed8a17387da5abe90914907abbdc8fbc03f35bfcec34"}, "downloads": -1, "filename": "signit-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4f525cc033d29fa69319e385ba887bbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3795, "upload_time": "2016-03-13T02:00:02", "upload_time_iso_8601": "2016-03-13T02:00:02.233490Z", "url": "https://files.pythonhosted.org/packages/45/50/fdc548e85f8c6fa4fd28e29970b812d4b08570bfb172bcc60fa6d966dc79/signit-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b4ce2981bc33b8524f2ed28c5f7f0dd5", "sha256": "61edddf9fb8d925f043b477a63ebcbcfb999c2ddb27726309a08855e6531bf4f"}, "downloads": -1, "filename": "signit-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b4ce2981bc33b8524f2ed28c5f7f0dd5", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6297, "upload_time": "2016-03-17T12:59:57", "upload_time_iso_8601": "2016-03-17T12:59:57.866334Z", "url": "https://files.pythonhosted.org/packages/73/f9/09f481e8536cbf43fb2bf90a06742bd4173847eda6108b6857dca6ecb97e/signit-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53ed563efd29f42be8dc1325302d002b", "sha256": "c97a65dd336b37391d8197b7af0a7a9da856366b62ce35608b20bcf2185ba936"}, "downloads": -1, "filename": "signit-0.3.0.tar.gz", "has_sig": false, "md5_digest": "53ed563efd29f42be8dc1325302d002b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3857, "upload_time": "2016-03-17T12:59:50", "upload_time_iso_8601": "2016-03-17T12:59:50.460911Z", "url": "https://files.pythonhosted.org/packages/17/48/a89a63fe7f5b0a7faa093e5cd3bcb95018fb836a6372987988f7c2f7fa36/signit-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b4ce2981bc33b8524f2ed28c5f7f0dd5", "sha256": "61edddf9fb8d925f043b477a63ebcbcfb999c2ddb27726309a08855e6531bf4f"}, "downloads": -1, "filename": "signit-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b4ce2981bc33b8524f2ed28c5f7f0dd5", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6297, "upload_time": "2016-03-17T12:59:57", "upload_time_iso_8601": "2016-03-17T12:59:57.866334Z", "url": "https://files.pythonhosted.org/packages/73/f9/09f481e8536cbf43fb2bf90a06742bd4173847eda6108b6857dca6ecb97e/signit-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53ed563efd29f42be8dc1325302d002b", "sha256": "c97a65dd336b37391d8197b7af0a7a9da856366b62ce35608b20bcf2185ba936"}, "downloads": -1, "filename": "signit-0.3.0.tar.gz", "has_sig": false, "md5_digest": "53ed563efd29f42be8dc1325302d002b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3857, "upload_time": "2016-03-17T12:59:50", "upload_time_iso_8601": "2016-03-17T12:59:50.460911Z", "url": "https://files.pythonhosted.org/packages/17/48/a89a63fe7f5b0a7faa093e5cd3bcb95018fb836a6372987988f7c2f7fa36/signit-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:39 2020"}