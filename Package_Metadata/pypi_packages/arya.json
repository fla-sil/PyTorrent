{"info": {"author": "Paul Lesiak", "author_email": "palesiak@cisco.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": "# APIC Rest Python Adapter (arya)\n\nOriginal Author: Paul Lesiak - [palesiak@cisco.com](palesiak@cisco.com)\n\nCo-author: Mike Timm - [mtimm@cisco.com](mtimm@cisco.com)\n\n# Description\n\narya is a tool that will convert APIC object documents from their XML or JSON\nform into the equivalent Python code leveraging the Cobra SDK.\n\narya supports  input in a number of formats, including XML, JSON, a directory containing\nmultiple xml or json documents, as well as standard input. The standard input\noption is very useful for use as a filter in most text editors, where one\ncan copy the JSON or XML extracted from APIC Visore or API inspector, and quickly\ngenerate the Python source code framework, which can then be modified, tokenized\nand rapidly turned into functional prototypes.\n\nNote that arya is a very useful tool for the heavy lifting of converting object\nmodel into source code, however it does not validate configuration, perform\nadvanced lookup logic or implement a number of best practices that should be\nfollowed, such as performing lookups to validate targets, referencing object\nattributes instead of hardcoding Dns and names, and other proper coding practices\n\nIt is strongly recommended that for advanced use cases, getting expert advice\nand validating your code, you reach out to Cisco Advanced Services for support.\nFor more information, visit http://www.cisco.com/go/aci\n\nIf you run into issues with arya, please open an issue on github\n\n\n# Installation\n\n## Environment\nRequired\n\n* Python 2.7+\n\nRecommended:\n\n* pip (to install from pypi)\n* Git (to install from github)\n\n## Downloading and installing\n\nOption A:\n\nDownload and install from pypi:\n\n    pip install arya\n\nWith this option, this is the only step.\n\nOption B:\n\nIf you have git installed clone the repository\n\n    git clone https://github.com/datacenter/arya.git\n\nInstall following the instructions below.\n\nOption C:\n\nIf you don't have git [download a zip copy of the repository](https://github.com/datacenter/arya/archive/master.zip) and extract.  \n\n### Install if using options B or C\n\n    cd arya\n\nRun the setup script\n\n    python setup.py install\n\nCheck that arya can be run from the command line\n\n    $ arya.py\n\n\n# Usage\n\nOnce installed arya will place the file `arya.py` in your path, so you should be able to call `arya.py` from any prompt.\n\nUsage is as such:\n\n    $ arya.py\n\n    usage: Code generator for APIC cobra SDK [-h] [-f FILEIN] [-s] [-d SOURCEDIR]\n                                             [-t TARGETDIR] [-i IP] [-u USERNAME]\n                                             [-p PASSWORD] [-nc] [-b]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -f FILEIN, --filein FILEIN\n                            Document containing post to be sent to REST API\n      -s, --stdin           Parse input from stdin, for use as a filter, e.g., cat\n                            doc.xml | arya.py -s\n      -d SOURCEDIR, --sourcedir SOURCEDIR\n                            Specify a source directory containing ACI object files\n                            you want to convert to python.\n      -t TARGETDIR, --targetdir TARGETDIR\n                            Where to write the .py files that come from the -d\n                            directory. If none is specified, it will default to\n                            SOURCEDIR\n      -i IP, --ip IP        IP address of APIC to be pre-populated\n      -u USERNAME, --username USERNAME\n                            Username for APIC account to be pre-populated in\n                            generated code\n      -p PASSWORD, --password PASSWORD\n                            Password for APIC account to be pre-populated in\n                            generated code\n      -nc, --nocommit       Generate code without final commit to changes\n      -b, --brief           Generate brief code (without headers, comments, etc)\n                              Password for admin account on APIC\n\n\n# License\n\nCopyright (C) 2014 Cisco Systems Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/datacenter/arya/releases/tag/1.1.5", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/datacenter/arya", "keywords": null, "license": "APIC Rest Python Adapter (arya)\n\nPaul Lesiak - palesiak@cisco.com\n\nCopyright (C) 2014 Cisco Systems Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.", "maintainer": null, "maintainer_email": null, "name": "arya", "package_url": "https://pypi.org/project/arya/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/arya/", "project_urls": {"Download": "https://github.com/datacenter/arya/releases/tag/1.1.5", "Homepage": "https://github.com/datacenter/arya"}, "release_url": "https://pypi.org/project/arya/1.1.5/", "requires_dist": null, "requires_python": null, "summary": "APIC Rest to pYthon Adapter", "version": "1.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># APIC Rest Python Adapter (arya)</p>\n<p>Original Author: Paul Lesiak - [<a href=\"mailto:palesiak%40cisco.com\">palesiak<span>@</span>cisco<span>.</span>com</a>](<a href=\"mailto:palesiak%40cisco.com\">palesiak<span>@</span>cisco<span>.</span>com</a>)</p>\n<p>Co-author: Mike Timm - [<a href=\"mailto:mtimm%40cisco.com\">mtimm<span>@</span>cisco<span>.</span>com</a>](<a href=\"mailto:mtimm%40cisco.com\">mtimm<span>@</span>cisco<span>.</span>com</a>)</p>\n<p># Description</p>\n<p>arya is a tool that will convert APIC object documents from their XML or JSON\nform into the equivalent Python code leveraging the Cobra SDK.</p>\n<p>arya supports  input in a number of formats, including XML, JSON, a directory containing\nmultiple xml or json documents, as well as standard input. The standard input\noption is very useful for use as a filter in most text editors, where one\ncan copy the JSON or XML extracted from APIC Visore or API inspector, and quickly\ngenerate the Python source code framework, which can then be modified, tokenized\nand rapidly turned into functional prototypes.</p>\n<p>Note that arya is a very useful tool for the heavy lifting of converting object\nmodel into source code, however it does not validate configuration, perform\nadvanced lookup logic or implement a number of best practices that should be\nfollowed, such as performing lookups to validate targets, referencing object\nattributes instead of hardcoding Dns and names, and other proper coding practices</p>\n<p>It is strongly recommended that for advanced use cases, getting expert advice\nand validating your code, you reach out to Cisco Advanced Services for support.\nFor more information, visit <a href=\"http://www.cisco.com/go/aci\" rel=\"nofollow\">http://www.cisco.com/go/aci</a></p>\n<p>If you run into issues with arya, please open an issue on github</p>\n<p># Installation</p>\n<p>## Environment\nRequired</p>\n<ul>\n<li>Python 2.7+</li>\n</ul>\n<p>Recommended:</p>\n<ul>\n<li>pip (to install from pypi)</li>\n<li>Git (to install from github)</li>\n</ul>\n<p>## Downloading and installing</p>\n<p>Option A:</p>\n<p>Download and install from pypi:</p>\n<blockquote>\npip install arya</blockquote>\n<p>With this option, this is the only step.</p>\n<p>Option B:</p>\n<p>If you have git installed clone the repository</p>\n<blockquote>\ngit clone <a href=\"https://github.com/datacenter/arya.git\" rel=\"nofollow\">https://github.com/datacenter/arya.git</a></blockquote>\n<p>Install following the instructions below.</p>\n<p>Option C:</p>\n<p>If you don\u2019t have git [download a zip copy of the repository](<a href=\"https://github.com/datacenter/arya/archive/master.zip\" rel=\"nofollow\">https://github.com/datacenter/arya/archive/master.zip</a>) and extract.</p>\n<p>### Install if using options B or C</p>\n<blockquote>\ncd arya</blockquote>\n<p>Run the setup script</p>\n<blockquote>\npython setup.py install</blockquote>\n<p>Check that arya can be run from the command line</p>\n<blockquote>\n$ arya.py</blockquote>\n<p># Usage</p>\n<p>Once installed arya will place the file <cite>arya.py</cite> in your path, so you should be able to call <cite>arya.py</cite> from any prompt.</p>\n<p>Usage is as such:</p>\n<blockquote>\n<p>$ arya.py</p>\n<dl>\n<dt>usage: Code generator for APIC cobra SDK [-h] [-f FILEIN] [-s] [-d SOURCEDIR]</dt>\n<dd>[-t TARGETDIR] [-i IP] [-u USERNAME]\n[-p PASSWORD] [-nc] [-b]</dd>\n<dt>optional arguments:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-f <var>FILEIN</var></span>, <span class=\"option\">--filein <var>FILEIN</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Document containing post to be sent to REST API</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-s</span>, <span class=\"option\">--stdin</span></kbd></td>\n<td>Parse input from stdin, for use as a filter, e.g., cat\ndoc.xml | arya.py -s</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-d <var>SOURCEDIR</var></span>, <span class=\"option\">--sourcedir <var>SOURCEDIR</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Specify a source directory containing ACI object files\nyou want to convert to python.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-t <var>TARGETDIR</var></span>, <span class=\"option\">--targetdir <var>TARGETDIR</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Where to write the .py files that come from the -d\ndirectory. If none is specified, it will default to\nSOURCEDIR</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-i <var>IP</var></span>, <span class=\"option\">--ip <var>IP</var></span></kbd></td>\n<td>IP address of APIC to be pre-populated</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-u <var>USERNAME</var></span>, <span class=\"option\">--username <var>USERNAME</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Username for APIC account to be pre-populated in\ngenerated code</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-p <var>PASSWORD</var></span>, <span class=\"option\">--password <var>PASSWORD</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Password for APIC account to be pre-populated in\ngenerated code</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-n<var>c</var></span>, <span class=\"option\">--nocommit</span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Generate code without final commit to changes</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-b</span>, <span class=\"option\">--brief</span></kbd></td>\n<td>Generate brief code (without headers, comments, etc)\nPassword for admin account on APIC</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</blockquote>\n<p># License</p>\n<p>Copyright (C) 2014 Cisco Systems Inc.</p>\n<p>Licensed under the Apache License, Version 2.0 (the \u201cLicense\u201d);\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n<p><a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a></p>\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \u201cAS IS\u201d BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n\n          </div>"}, "last_serial": 1780378, "releases": {"1.1.2": [{"comment_text": "", "digests": {"md5": "6bef447a8217f3a6547a3a371bf6439a", "sha256": "9df0d7de4ec24f2bfb3a0a56b6d40590cac49700228baa494989bcd1f34965d5"}, "downloads": -1, "filename": "arya-1.1.2.tar.gz", "has_sig": false, "md5_digest": "6bef447a8217f3a6547a3a371bf6439a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10579, "upload_time": "2015-03-10T00:58:14", "upload_time_iso_8601": "2015-03-10T00:58:14.145398Z", "url": "https://files.pythonhosted.org/packages/92/52/b6ee1d4574c25d747368612efb6c103c72d4c37f788bd5ec068165f7b78c/arya-1.1.2.tar.gz", "yanked": false}], "1.1.4": [], "1.1.5": [{"comment_text": "", "digests": {"md5": "066ca1db94d8b02ab6036b3665237ae9", "sha256": "b19fc946e2f1a56ce6f049c9bc97a2f903abbeff35f12a0d023787b6a5782e55"}, "downloads": -1, "filename": "arya-1.1.5-py2.7.egg", "has_sig": false, "md5_digest": "066ca1db94d8b02ab6036b3665237ae9", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 36560, "upload_time": "2015-10-21T17:54:45", "upload_time_iso_8601": "2015-10-21T17:54:45.058183Z", "url": "https://files.pythonhosted.org/packages/6b/e5/3118c2c6fe11301b857266ab21aca686a9afd5ed61e7a0d2b85dd599f2f2/arya-1.1.5-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a4cc06aa84322622fe491b2b16aafd3", "sha256": "0dcf9ee3ae7277c25bf77a701d61435464feb1f732c71db195c7637df32a28a3"}, "downloads": -1, "filename": "arya-1.1.5-py2-none-any.whl", "has_sig": false, "md5_digest": "8a4cc06aa84322622fe491b2b16aafd3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 26476, "upload_time": "2015-10-21T17:54:56", "upload_time_iso_8601": "2015-10-21T17:54:56.305341Z", "url": "https://files.pythonhosted.org/packages/0a/d8/742493604f848457f1aa37e9cf1f2e664d45dd6355a183fa2eb63dcef027/arya-1.1.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4236a10d87a844572b1b2376fbb1457", "sha256": "02fba8d0e4814a77601a6893ba4e9eedf7ec521206c7285635e930853dd345a9"}, "downloads": -1, "filename": "arya-1.1.5.tar.gz", "has_sig": false, "md5_digest": "e4236a10d87a844572b1b2376fbb1457", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11477, "upload_time": "2015-10-21T17:54:29", "upload_time_iso_8601": "2015-10-21T17:54:29.519441Z", "url": "https://files.pythonhosted.org/packages/fb/72/01c3c12667a6e59c47fc76f3b8f707239d5817b8aabdc4aeee053a98acc0/arya-1.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "066ca1db94d8b02ab6036b3665237ae9", "sha256": "b19fc946e2f1a56ce6f049c9bc97a2f903abbeff35f12a0d023787b6a5782e55"}, "downloads": -1, "filename": "arya-1.1.5-py2.7.egg", "has_sig": false, "md5_digest": "066ca1db94d8b02ab6036b3665237ae9", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 36560, "upload_time": "2015-10-21T17:54:45", "upload_time_iso_8601": "2015-10-21T17:54:45.058183Z", "url": "https://files.pythonhosted.org/packages/6b/e5/3118c2c6fe11301b857266ab21aca686a9afd5ed61e7a0d2b85dd599f2f2/arya-1.1.5-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a4cc06aa84322622fe491b2b16aafd3", "sha256": "0dcf9ee3ae7277c25bf77a701d61435464feb1f732c71db195c7637df32a28a3"}, "downloads": -1, "filename": "arya-1.1.5-py2-none-any.whl", "has_sig": false, "md5_digest": "8a4cc06aa84322622fe491b2b16aafd3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 26476, "upload_time": "2015-10-21T17:54:56", "upload_time_iso_8601": "2015-10-21T17:54:56.305341Z", "url": "https://files.pythonhosted.org/packages/0a/d8/742493604f848457f1aa37e9cf1f2e664d45dd6355a183fa2eb63dcef027/arya-1.1.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4236a10d87a844572b1b2376fbb1457", "sha256": "02fba8d0e4814a77601a6893ba4e9eedf7ec521206c7285635e930853dd345a9"}, "downloads": -1, "filename": "arya-1.1.5.tar.gz", "has_sig": false, "md5_digest": "e4236a10d87a844572b1b2376fbb1457", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11477, "upload_time": "2015-10-21T17:54:29", "upload_time_iso_8601": "2015-10-21T17:54:29.519441Z", "url": "https://files.pythonhosted.org/packages/fb/72/01c3c12667a6e59c47fc76f3b8f707239d5817b8aabdc4aeee053a98acc0/arya-1.1.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:04 2020"}