{"info": {"author": "thclark", "author_email": "withheld.find@me.at.github.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Wagtail References [![Build Status](https://travis-ci.com/thclark/wagtail_references.svg?branch=master)](https://travis-ci.com/thclark/wagtail_references)\n\nBibTeX based bibliography entries, as wagtail snippets\n\n\n## Templates\n\n**\"But, where are the templates?!\"** is a natural question. Answer: There aren't any templates or tags so far...\nI run all my wagtail installations in headless mode with a react front end, so can only justify putting in place the\ntemplates for managing the references on wagtail (for now). But see below for how to do it yourself.\n\nIf you'd like to make a PR with tmplates, I'm very open to collaboration :)\n\nI'm gradually improving wagtail admin templates, I'll do an ever-better job as the library gets more traction and users.\n**Bottom line: Star this repo on Github if you use or like it, so I know it's getting traction!** \n\n\n## Displaying references on the front end\n\n### Write your own templates/html\n\nI use [citation.js](https://citation.js.org/api/tutorial-getting_started.html) for parsing and displaying the bibtex \nin the wagtail admin, it's usable in-browser (in a template) like this:\n\n```html\n<!-- Using citation.js https://citation.js.org/api/tutorial-getting_started.html -->\n<script src=\"https://cdn.jsdelivr.net/npm/citation-js\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">\n  const Cite = require('citation-js')\n  function renderToDiv(inputBibtex, divId) {\n      const citation = new Cite(inputBibtex)\n      const outputHtml = citation.format('bibliography', {\n        format: 'html',\n        template: 'apa',\n        lang: 'en-US'\n      })\n      outputDiv = document.getElementById(divId)\n      outputDiv.innerHTML = outputHtml\n  }\n</script>\n\n<h3><strong>Slug (citation key):</strong> {{ reference.slug }}</h3>\n<h3><strong>Type:</strong> {{ reference.bibtype }}</h3>\n<div id=\"{{ reference.slug }}\"></div>\n<script type=\"text/javascript\"> renderToDiv(\"{{ reference.bibtex_string }}\", \"{{ reference.slug }}\") </script>\n```\n\n### Using react (wagtail in headless mode)\n\nOn the frontend, I use react (see aforementioned nanorant about using wagtail in a headless mode). I'm presently using \n[react-citeproc](https://github.com/robindemourat/react-citeproc) along with\n [biblatex-csl-converter](https://github.com/fiduswriter/biblatex-csl-converter) in a project and it works out pretty\n well. Your component will look like this-ish:\n \n```javascript\nimport React from 'react'\nimport { Bibliography } from 'react-citeproc'\nimport raw from 'raw.macro'\n\nimport { BibLatexParser, CSLExporter } from 'biblatex-csl-converter'\n\nconst style = raw('assets/csl/apa-style.csl')\nconst locale = raw('assets/csl/xml-locale.xml')\n\nclass Reference extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      bibtex: undefined,\n      csl: undefined,\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.bibtex !== prevState.bibtex) {\n      const parser = new BibLatexParser(nextProps.detail.bibtex, { processUnexpected: false, processUnknown: false })\n      const csl = new CSLExporter(parser.output).parse()\n      return {\n        bibtex: nextProps.detail.bibtex,\n        csl,\n      }\n    }\n    return null\n  }\n\n  render() {\n    return (\n      <div className={classes.bibliography}>\n        <Bibliography\n          style={style}\n          locale={locale}\n          items={this.state.csl}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Reference\n```\n\n\n\n## Roadmap\n\nI'd like to include:\n- A better snippet editor, possibly using a json editor component and allowing the user to switch between tex and json\n- A `ListSerializer` for serializing out multiple references as a bibjson collection\n- An HTML renderer and viewset \n\n\n## Requirements\n\nWagtail References is tested on Django 2.1 or later and Wagtail 2.3 or later.\n\n\n## Supported Versions\n\nPython: 3.6\n\nDjango: 2.1\n\nWagtail: 2.3\n\n\n## Getting started\n\nInstalling from pip:\n\n```\npip install wagtail_references\n```\n\nAdding to `INSTALLED_APPS`:\n\n```python\nINSTALLED_APPS = [\n    ...\n    'wagtail_references',\n    ...\n]\n```\n\nRunning the migrations:\n\n```\npython manage.py migrate wagtail_references\n```\n\n\n## Reference Model\n\nThere's only one database model ``Reference``, which is registered as a snippet in Wagtail, making it searchable and\nselectable. \n\n### Slugs \n\nThe model has a (required, unique) ``slug`` field which is automatically set from bibtex contents when a reference\nis added.\n\nFor example, if you have the following bibtex entry:\n```\n@article{Clark2017a,\nauthor = {Clark, Thomas H. E. and Lueck, Rolf G. and Hay, Alex E. and Davey, Thomas and Stern, Peter and Horwitz, Rachel},\njournal = {Proc. of the 12th European Wave and Tidal Energy Conference},\npages = {7},\ntitle = {{InSTREAM : Measurement , Characterisation and Simulation of Turbulence from Test Tank to Ocean .}},\nyear = {2017}\n}\n``` \nthe slug will automatically be set to ``clark-lueck-hay-davey-stern-horwitz-2017``, with an appended ``-2``, ``-3`` etc\nto maintain uniqueness.\n\nThe citation key for the bibtex entry will be updated to correspond:\n```\n@article{clark-lueck-hay-davey-stern-horwitz-2017,\nauthor = ... etc etc ...\n}\n``` \n\nUniqueness is enforced at form validation and database level. Slugs may be edited manually after creation of a reference.\n\n### bibtex and bibjson\n\nThe reference model comprises both a `bibtex` field (containing the bibtex string, raw) and a `bibjson` field. \n*Yes, I know this is duplication of data. But I'd rather do that than incur the cost of re-parsing the data every time I\nwant to serialize it out in a different form. I could've chosen to cache it, but then I don't know how much memory you \nfolks have, and don't want to screw your cache if you're managing a lot of references). It was a judgement call. \nUse-case and an alternative solution? File an issue.*\n\nThe `bibjson` is stored natively as JSON if you have POSTGRES, otherwise as a string (thanks to [`django-jsonfield`](https://github.com/adamchainz/django-jsonfield)).\n\n\n## Django Settings\n\nThe following settings can be defined in your `SETTINGS.py`:\n\n- **WAGTAILREFERENCES_CONVERT_BIBTEX** (default: `False`) Before saving new records, the record will be homogenized to\nstrict latex. This forces a conversion to unicode and, for example, adds braces to force capitalization.\n- **WAGTAILREFERENCES_ENABLE_UNICODE** (default: `True`) If enabled, items such as `\"C{\\\"o}ze\"` will be converted to\ntheir unicode equivalents. If you're using entries in a LaTeX rendering engine, this isn't necessary. If you're\nusing them to rendering HTML (which you probably are, this is a web CMS after all), you probably want this.\n- **WAGTAILREFERENCES_COLLECTION_NAME** (default: `None`) Applies a default collection name to records rendered in bibjson form. \n\n\n## Examples\n\nFor your and our testing purposes, it's useful to have some examples to hand, so I've prepared some in the ``examples.py`` file, which simply contains a series of different bibtex references.\n\nIf you encounter awkward references or ones which won't validate, please post them into a github issue so I can help diagnose and add them for test.\n\n\n## Thanks\n\nThanks are due to [**internaut**](https://github.com/internaut/bibtex2bibjson) for providing the bibtex-json converter. Their code isn't licensed so I don't know how to credit it other than saying thanks!", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thclark/wagtail_references", "keywords": "wagtail,django,references", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "wagtail-references", "package_url": "https://pypi.org/project/wagtail-references/", "platform": "", "project_url": "https://pypi.org/project/wagtail-references/", "project_urls": {"Homepage": "https://github.com/thclark/wagtail_references"}, "release_url": "https://pypi.org/project/wagtail-references/0.2.6/", "requires_dist": null, "requires_python": "", "summary": "BibTeX references for Wagtail", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Wagtail References <a href=\"https://travis-ci.com/thclark/wagtail_references\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e6e5d77558447f5e4b790b64ee62f292132cca0e/68747470733a2f2f7472617669732d63692e636f6d2f7468636c61726b2f7761677461696c5f7265666572656e6365732e7376673f6272616e63683d6d6173746572\"></a></h1>\n<p>BibTeX based bibliography entries, as wagtail snippets</p>\n<h2>Templates</h2>\n<p><strong>\"But, where are the templates?!\"</strong> is a natural question. Answer: There aren't any templates or tags so far...\nI run all my wagtail installations in headless mode with a react front end, so can only justify putting in place the\ntemplates for managing the references on wagtail (for now). But see below for how to do it yourself.</p>\n<p>If you'd like to make a PR with tmplates, I'm very open to collaboration :)</p>\n<p>I'm gradually improving wagtail admin templates, I'll do an ever-better job as the library gets more traction and users.\n<strong>Bottom line: Star this repo on Github if you use or like it, so I know it's getting traction!</strong></p>\n<h2>Displaying references on the front end</h2>\n<h3>Write your own templates/html</h3>\n<p>I use <a href=\"https://citation.js.org/api/tutorial-getting_started.html\" rel=\"nofollow\">citation.js</a> for parsing and displaying the bibtex\nin the wagtail admin, it's usable in-browser (in a template) like this:</p>\n<pre><span class=\"c\">&lt;!-- Using citation.js https://citation.js.org/api/tutorial-getting_started.html --&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"https://cdn.jsdelivr.net/npm/citation-js\"</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span><span class=\"p\">&gt;</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">Cite</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'citation-js'</span><span class=\"p\">)</span>\n  <span class=\"kd\">function</span> <span class=\"nx\">renderToDiv</span><span class=\"p\">(</span><span class=\"nx\">inputBibtex</span><span class=\"p\">,</span> <span class=\"nx\">divId</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"kr\">const</span> <span class=\"nx\">citation</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Cite</span><span class=\"p\">(</span><span class=\"nx\">inputBibtex</span><span class=\"p\">)</span>\n      <span class=\"kr\">const</span> <span class=\"nx\">outputHtml</span> <span class=\"o\">=</span> <span class=\"nx\">citation</span><span class=\"p\">.</span><span class=\"nx\">format</span><span class=\"p\">(</span><span class=\"s1\">'bibliography'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"nx\">format</span><span class=\"o\">:</span> <span class=\"s1\">'html'</span><span class=\"p\">,</span>\n        <span class=\"nx\">template</span><span class=\"o\">:</span> <span class=\"s1\">'apa'</span><span class=\"p\">,</span>\n        <span class=\"nx\">lang</span><span class=\"o\">:</span> <span class=\"s1\">'en-US'</span>\n      <span class=\"p\">})</span>\n      <span class=\"nx\">outputDiv</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"nx\">divId</span><span class=\"p\">)</span>\n      <span class=\"nx\">outputDiv</span><span class=\"p\">.</span><span class=\"nx\">innerHTML</span> <span class=\"o\">=</span> <span class=\"nx\">outputHtml</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">h3</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">strong</span><span class=\"p\">&gt;</span>Slug (citation key):<span class=\"p\">&lt;/</span><span class=\"nt\">strong</span><span class=\"p\">&gt;</span> {{ reference.slug }}<span class=\"p\">&lt;/</span><span class=\"nt\">h3</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">h3</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">strong</span><span class=\"p\">&gt;</span>Type:<span class=\"p\">&lt;/</span><span class=\"nt\">strong</span><span class=\"p\">&gt;</span> {{ reference.bibtype }}<span class=\"p\">&lt;/</span><span class=\"nt\">h3</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"{{ reference.slug }}\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span><span class=\"p\">&gt;</span> <span class=\"nx\">renderToDiv</span><span class=\"p\">(</span><span class=\"s2\">\"{{ reference.bibtex_string }}\"</span><span class=\"p\">,</span> <span class=\"s2\">\"{{ reference.slug }}\"</span><span class=\"p\">)</span> <span class=\"p\">&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n</pre>\n<h3>Using react (wagtail in headless mode)</h3>\n<p>On the frontend, I use react (see aforementioned nanorant about using wagtail in a headless mode). I'm presently using\n<a href=\"https://github.com/robindemourat/react-citeproc\" rel=\"nofollow\">react-citeproc</a> along with\n<a href=\"https://github.com/fiduswriter/biblatex-csl-converter\" rel=\"nofollow\">biblatex-csl-converter</a> in a project and it works out pretty\nwell. Your component will look like this-ish:</p>\n<pre><span class=\"kr\">import</span> <span class=\"nx\">React</span> <span class=\"nx\">from</span> <span class=\"s1\">'react'</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Bibliography</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s1\">'react-citeproc'</span>\n<span class=\"kr\">import</span> <span class=\"nx\">raw</span> <span class=\"nx\">from</span> <span class=\"s1\">'raw.macro'</span>\n\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">BibLatexParser</span><span class=\"p\">,</span> <span class=\"nx\">CSLExporter</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s1\">'biblatex-csl-converter'</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">style</span> <span class=\"o\">=</span> <span class=\"nx\">raw</span><span class=\"p\">(</span><span class=\"s1\">'assets/csl/apa-style.csl'</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">locale</span> <span class=\"o\">=</span> <span class=\"nx\">raw</span><span class=\"p\">(</span><span class=\"s1\">'assets/csl/xml-locale.xml'</span><span class=\"p\">)</span>\n\n<span class=\"kr\">class</span> <span class=\"nx\">Reference</span> <span class=\"kr\">extends</span> <span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">Component</span> <span class=\"p\">{</span>\n  <span class=\"nx\">constructor</span><span class=\"p\">(</span><span class=\"nx\">props</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kr\">super</span><span class=\"p\">(</span><span class=\"nx\">props</span><span class=\"p\">)</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n      <span class=\"nx\">bibtex</span><span class=\"o\">:</span> <span class=\"kc\">undefined</span><span class=\"p\">,</span>\n      <span class=\"nx\">csl</span><span class=\"o\">:</span> <span class=\"kc\">undefined</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kr\">static</span> <span class=\"nx\">getDerivedStateFromProps</span><span class=\"p\">(</span><span class=\"nx\">nextProps</span><span class=\"p\">,</span> <span class=\"nx\">prevState</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">nextProps</span><span class=\"p\">.</span><span class=\"nx\">bibtex</span> <span class=\"o\">!==</span> <span class=\"nx\">prevState</span><span class=\"p\">.</span><span class=\"nx\">bibtex</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"kr\">const</span> <span class=\"nx\">parser</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">BibLatexParser</span><span class=\"p\">(</span><span class=\"nx\">nextProps</span><span class=\"p\">.</span><span class=\"nx\">detail</span><span class=\"p\">.</span><span class=\"nx\">bibtex</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">processUnexpected</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span> <span class=\"nx\">processUnknown</span><span class=\"o\">:</span> <span class=\"kc\">false</span> <span class=\"p\">})</span>\n      <span class=\"kr\">const</span> <span class=\"nx\">csl</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">CSLExporter</span><span class=\"p\">(</span><span class=\"nx\">parser</span><span class=\"p\">.</span><span class=\"nx\">output</span><span class=\"p\">).</span><span class=\"nx\">parse</span><span class=\"p\">()</span>\n      <span class=\"k\">return</span> <span class=\"p\">{</span>\n        <span class=\"nx\">bibtex</span><span class=\"o\">:</span> <span class=\"nx\">nextProps</span><span class=\"p\">.</span><span class=\"nx\">detail</span><span class=\"p\">.</span><span class=\"nx\">bibtex</span><span class=\"p\">,</span>\n        <span class=\"nx\">csl</span><span class=\"p\">,</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"kc\">null</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">className</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">classes</span><span class=\"p\">.</span><span class=\"nx\">bibliography</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">Bibliography</span>\n          <span class=\"nx\">style</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">style</span><span class=\"p\">}</span>\n          <span class=\"nx\">locale</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">locale</span><span class=\"p\">}</span>\n          <span class=\"nx\">items</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">csl</span><span class=\"p\">}</span>\n        <span class=\"o\">/&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"err\">/div&gt;</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"nx\">Reference</span>\n</pre>\n<h2>Roadmap</h2>\n<p>I'd like to include:</p>\n<ul>\n<li>A better snippet editor, possibly using a json editor component and allowing the user to switch between tex and json</li>\n<li>A <code>ListSerializer</code> for serializing out multiple references as a bibjson collection</li>\n<li>An HTML renderer and viewset</li>\n</ul>\n<h2>Requirements</h2>\n<p>Wagtail References is tested on Django 2.1 or later and Wagtail 2.3 or later.</p>\n<h2>Supported Versions</h2>\n<p>Python: 3.6</p>\n<p>Django: 2.1</p>\n<p>Wagtail: 2.3</p>\n<h2>Getting started</h2>\n<p>Installing from pip:</p>\n<pre><code>pip install wagtail_references\n</code></pre>\n<p>Adding to <code>INSTALLED_APPS</code>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'wagtail_references'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Running the migrations:</p>\n<pre><code>python manage.py migrate wagtail_references\n</code></pre>\n<h2>Reference Model</h2>\n<p>There's only one database model <code>Reference</code>, which is registered as a snippet in Wagtail, making it searchable and\nselectable.</p>\n<h3>Slugs</h3>\n<p>The model has a (required, unique) <code>slug</code> field which is automatically set from bibtex contents when a reference\nis added.</p>\n<p>For example, if you have the following bibtex entry:</p>\n<pre><code>@article{Clark2017a,\nauthor = {Clark, Thomas H. E. and Lueck, Rolf G. and Hay, Alex E. and Davey, Thomas and Stern, Peter and Horwitz, Rachel},\njournal = {Proc. of the 12th European Wave and Tidal Energy Conference},\npages = {7},\ntitle = {{InSTREAM : Measurement , Characterisation and Simulation of Turbulence from Test Tank to Ocean .}},\nyear = {2017}\n}\n</code></pre>\n<p>the slug will automatically be set to <code>clark-lueck-hay-davey-stern-horwitz-2017</code>, with an appended <code>-2</code>, <code>-3</code> etc\nto maintain uniqueness.</p>\n<p>The citation key for the bibtex entry will be updated to correspond:</p>\n<pre><code>@article{clark-lueck-hay-davey-stern-horwitz-2017,\nauthor = ... etc etc ...\n}\n</code></pre>\n<p>Uniqueness is enforced at form validation and database level. Slugs may be edited manually after creation of a reference.</p>\n<h3>bibtex and bibjson</h3>\n<p>The reference model comprises both a <code>bibtex</code> field (containing the bibtex string, raw) and a <code>bibjson</code> field.\n<em>Yes, I know this is duplication of data. But I'd rather do that than incur the cost of re-parsing the data every time I\nwant to serialize it out in a different form. I could've chosen to cache it, but then I don't know how much memory you\nfolks have, and don't want to screw your cache if you're managing a lot of references). It was a judgement call.\nUse-case and an alternative solution? File an issue.</em></p>\n<p>The <code>bibjson</code> is stored natively as JSON if you have POSTGRES, otherwise as a string (thanks to <a href=\"https://github.com/adamchainz/django-jsonfield\" rel=\"nofollow\"><code>django-jsonfield</code></a>).</p>\n<h2>Django Settings</h2>\n<p>The following settings can be defined in your <code>SETTINGS.py</code>:</p>\n<ul>\n<li><strong>WAGTAILREFERENCES_CONVERT_BIBTEX</strong> (default: <code>False</code>) Before saving new records, the record will be homogenized to\nstrict latex. This forces a conversion to unicode and, for example, adds braces to force capitalization.</li>\n<li><strong>WAGTAILREFERENCES_ENABLE_UNICODE</strong> (default: <code>True</code>) If enabled, items such as <code>\"C{\\\"o}ze\"</code> will be converted to\ntheir unicode equivalents. If you're using entries in a LaTeX rendering engine, this isn't necessary. If you're\nusing them to rendering HTML (which you probably are, this is a web CMS after all), you probably want this.</li>\n<li><strong>WAGTAILREFERENCES_COLLECTION_NAME</strong> (default: <code>None</code>) Applies a default collection name to records rendered in bibjson form.</li>\n</ul>\n<h2>Examples</h2>\n<p>For your and our testing purposes, it's useful to have some examples to hand, so I've prepared some in the <code>examples.py</code> file, which simply contains a series of different bibtex references.</p>\n<p>If you encounter awkward references or ones which won't validate, please post them into a github issue so I can help diagnose and add them for test.</p>\n<h2>Thanks</h2>\n<p>Thanks are due to <a href=\"https://github.com/internaut/bibtex2bibjson\" rel=\"nofollow\"><strong>internaut</strong></a> for providing the bibtex-json converter. Their code isn't licensed so I don't know how to credit it other than saying thanks!</p>\n\n          </div>"}, "last_serial": 5785105, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "dda88c74c4340eee0af8df593f4865a4", "sha256": "2b50058a756b5989b1259c46c9afe24ad1bd8238eb1dd0b7a632ec3332da0b01"}, "downloads": -1, "filename": "wagtail_references-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dda88c74c4340eee0af8df593f4865a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17199, "upload_time": "2019-04-02T09:57:01", "upload_time_iso_8601": "2019-04-02T09:57:01.558043Z", "url": "https://files.pythonhosted.org/packages/94/88/d7ba49b1fadd6b76c73e9d9cdc2051534f509c395698dcc82d757a9eec6a/wagtail_references-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abc57bc528b7e97c546cecdcb96337fa", "sha256": "0fad0ab303ee3ffb356b55bd4cb4621e8ff14151077c41d14a96b9b29b129224"}, "downloads": -1, "filename": "wagtail_references-0.0.1.tar.gz", "has_sig": false, "md5_digest": "abc57bc528b7e97c546cecdcb96337fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11871, "upload_time": "2019-04-02T09:57:04", "upload_time_iso_8601": "2019-04-02T09:57:04.401602Z", "url": "https://files.pythonhosted.org/packages/16/28/284afd7ed79660081809943f28e5f60cb49e87bfbe08fd7c90db1096ccbc/wagtail_references-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "63d5168b2116ccb4cacc1c0af695618f", "sha256": "df63eaff004379adaeb6a0f8d2f41b6c7ae0168a9245448263bc575648fcf916"}, "downloads": -1, "filename": "wagtail_references-0.0.2.tar.gz", "has_sig": false, "md5_digest": "63d5168b2116ccb4cacc1c0af695618f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11410, "upload_time": "2019-04-02T10:22:07", "upload_time_iso_8601": "2019-04-02T10:22:07.916055Z", "url": "https://files.pythonhosted.org/packages/02/74/ab8e2f6efda9b77d9a08e87628e549fe3ce84b2124993f80f43b18f63702/wagtail_references-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "a5a7791dc1c0807c6e54b5a4b705079a", "sha256": "a9c7ebf3e0e893c3b6a313466ee3efbf2ea87882bef0e3fe7c3e8dfee9358cd7"}, "downloads": -1, "filename": "wagtail_references-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a5a7791dc1c0807c6e54b5a4b705079a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11509, "upload_time": "2019-04-03T15:09:03", "upload_time_iso_8601": "2019-04-03T15:09:03.726345Z", "url": "https://files.pythonhosted.org/packages/31/d3/152aa65becfb1981cd67afed3dc7fc9bc02b840517be56c29d6fe29382ca/wagtail_references-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "7b49e261fb1344573744458849b77293", "sha256": "2d8effdead87d6ab5a1685625752ee257d9252a5b994056bf38cf2f67a15f2c9"}, "downloads": -1, "filename": "wagtail_references-0.0.4.tar.gz", "has_sig": false, "md5_digest": "7b49e261fb1344573744458849b77293", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11509, "upload_time": "2019-04-03T17:12:30", "upload_time_iso_8601": "2019-04-03T17:12:30.538688Z", "url": "https://files.pythonhosted.org/packages/32/76/8678b74305f388d120850d520e98484a778169c5d4804897dd9c4e707635/wagtail_references-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "3f813aabd615f0200693deaa6c9476ad", "sha256": "aeacaacc346b4f89569d4de54319b5037cd096612c173b43e77841b52480d9a7"}, "downloads": -1, "filename": "wagtail_references-0.0.5.tar.gz", "has_sig": false, "md5_digest": "3f813aabd615f0200693deaa6c9476ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16293, "upload_time": "2019-04-03T18:16:08", "upload_time_iso_8601": "2019-04-03T18:16:08.931706Z", "url": "https://files.pythonhosted.org/packages/af/6a/82174617ed87665af6917d9460907c0c0ba8766c7837ec78429a19afee7a/wagtail_references-0.0.5.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "9635fa49b9769a55c99236d964606eb1", "sha256": "1c142b2647ca253b35f9aaa7130022c4118d6dc68188e0fc289419f050cfdd88"}, "downloads": -1, "filename": "wagtail_references-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9635fa49b9769a55c99236d964606eb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23492, "upload_time": "2019-04-16T14:26:43", "upload_time_iso_8601": "2019-04-16T14:26:43.430789Z", "url": "https://files.pythonhosted.org/packages/c8/db/d1db71b8134ffbefb1b56e4891b87da54e00cb1f867eb66e153f6434ce10/wagtail_references-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "47254c74b3d35b55e2f90716ed9552e5", "sha256": "b902b3dd445b8674ea4854336bcc2667078efb10514d8879fae3a623edb818a6"}, "downloads": -1, "filename": "wagtail_references-0.1.1.tar.gz", "has_sig": false, "md5_digest": "47254c74b3d35b55e2f90716ed9552e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23503, "upload_time": "2019-04-16T14:35:31", "upload_time_iso_8601": "2019-04-16T14:35:31.881124Z", "url": "https://files.pythonhosted.org/packages/bb/84/4519eb4975d047f6d7a42ac186c72056268640b4f6339f829908456d3e34/wagtail_references-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ec97b284f52cc4109884f3196ad611e0", "sha256": "6b9057eec1a3f5342df8297f2e20da8fabdb9807f7973243592dfd0530d9ce24"}, "downloads": -1, "filename": "wagtail_references-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ec97b284f52cc4109884f3196ad611e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23477, "upload_time": "2019-04-16T17:08:33", "upload_time_iso_8601": "2019-04-16T17:08:33.089166Z", "url": "https://files.pythonhosted.org/packages/b8/16/70844329e139543aea6ca642ebdb3ba87cc34298dd057416c29138a4e6fd/wagtail_references-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "bf723ebab15563be9f2d41f6d6b75fe5", "sha256": "df0ce90cbac4365b97b221df35ed79edde3ab379d841bc177e8c067831f2ace0"}, "downloads": -1, "filename": "wagtail_references-0.2.0.tar.gz", "has_sig": false, "md5_digest": "bf723ebab15563be9f2d41f6d6b75fe5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23563, "upload_time": "2019-04-18T07:12:01", "upload_time_iso_8601": "2019-04-18T07:12:01.312550Z", "url": "https://files.pythonhosted.org/packages/19/32/17aa52251b7e47e36e410013cd1db20c55e2c99f8e7cadd6f8660300a780/wagtail_references-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "dc38309258ad0283ac7d71a2a69938be", "sha256": "4d2ac1aaf7a09a57cc4581b2a62d41ebc95b636952b81c5826eb492bae138bd0"}, "downloads": -1, "filename": "wagtail_references-0.2.1.tar.gz", "has_sig": false, "md5_digest": "dc38309258ad0283ac7d71a2a69938be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24670, "upload_time": "2019-05-17T18:49:58", "upload_time_iso_8601": "2019-05-17T18:49:58.818789Z", "url": "https://files.pythonhosted.org/packages/ae/a1/e78df89ec4e51dca094a89171d4520e684d87cef9f2acbf6d61db287724f/wagtail_references-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "1f3dd65bb7fe544b3a0b700fdad49f10", "sha256": "88488955c54c0f3dd94fd6988889d51d2a54bbfa2cb2b74e1513217fc28e52e2"}, "downloads": -1, "filename": "wagtail_references-0.2.2.tar.gz", "has_sig": false, "md5_digest": "1f3dd65bb7fe544b3a0b700fdad49f10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24893, "upload_time": "2019-05-17T19:07:54", "upload_time_iso_8601": "2019-05-17T19:07:54.204365Z", "url": "https://files.pythonhosted.org/packages/15/11/721c16fa4921094496443ebbc1433827a9bfd0cc69e9f333dcc1c5ecd76c/wagtail_references-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "6841cb4155c745067d49d84468e22386", "sha256": "376fea4405735b58698b0b0bd3b56e9b0665baeb70e284bd1eb0a2e606574325"}, "downloads": -1, "filename": "wagtail_references-0.2.3.tar.gz", "has_sig": false, "md5_digest": "6841cb4155c745067d49d84468e22386", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27023, "upload_time": "2019-05-20T11:44:14", "upload_time_iso_8601": "2019-05-20T11:44:14.716072Z", "url": "https://files.pythonhosted.org/packages/83/98/6dad4036e04d8fe02f0a79491d0bcf9991032df1d43fc47519d6aa01ced7/wagtail_references-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "620afb350cf462264987506435afbaf5", "sha256": "bfca1673ff3f8413e26ed5f19ed805756707e0efba7d5f6d3c0a428503b25a10"}, "downloads": -1, "filename": "wagtail_references-0.2.4.tar.gz", "has_sig": false, "md5_digest": "620afb350cf462264987506435afbaf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27024, "upload_time": "2019-05-20T12:25:43", "upload_time_iso_8601": "2019-05-20T12:25:43.719651Z", "url": "https://files.pythonhosted.org/packages/59/52/c732034cf6bf9e303a3f1bea185c369fdc17592818585cfde61bf7efbd33/wagtail_references-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "146ccc0b6f6d78ff12df4b33c379f16e", "sha256": "cbd4814c4106e4c6aab7e4c85a1c5f1134b98f658572d68ea9a864fd5cd23241"}, "downloads": -1, "filename": "wagtail_references-0.2.5.tar.gz", "has_sig": false, "md5_digest": "146ccc0b6f6d78ff12df4b33c379f16e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26909, "upload_time": "2019-08-09T13:33:08", "upload_time_iso_8601": "2019-08-09T13:33:08.572431Z", "url": "https://files.pythonhosted.org/packages/6c/ef/a386ad146ac037d2b657d96584898ad245cc355c8badc926196d157e2cf5/wagtail_references-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "59958e05c9e7f48a77cd0dc44e54ba0d", "sha256": "ccd13b82769ac4b1a67fb89bacae5439f6ce61de37fbd291be179d3bba080820"}, "downloads": -1, "filename": "wagtail_references-0.2.6.tar.gz", "has_sig": false, "md5_digest": "59958e05c9e7f48a77cd0dc44e54ba0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26904, "upload_time": "2019-09-05T07:31:11", "upload_time_iso_8601": "2019-09-05T07:31:11.314367Z", "url": "https://files.pythonhosted.org/packages/06/00/316a46ff519bc6df9f84b8f556ec234892247906add2f1c93d9028c4c58c/wagtail_references-0.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "59958e05c9e7f48a77cd0dc44e54ba0d", "sha256": "ccd13b82769ac4b1a67fb89bacae5439f6ce61de37fbd291be179d3bba080820"}, "downloads": -1, "filename": "wagtail_references-0.2.6.tar.gz", "has_sig": false, "md5_digest": "59958e05c9e7f48a77cd0dc44e54ba0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26904, "upload_time": "2019-09-05T07:31:11", "upload_time_iso_8601": "2019-09-05T07:31:11.314367Z", "url": "https://files.pythonhosted.org/packages/06/00/316a46ff519bc6df9f84b8f556ec234892247906add2f1c93d9028c4c58c/wagtail_references-0.2.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:53 2020"}