{"info": {"author": "Pawe\u0142 A. Pierzchlewicz", "author_email": "paul@teacode.io", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools"], "description": "# ColabComponent\nA React.js inspired Component for building a simple reactive UI in Google Colaboratory.\n\n### Why?\nSometimes there is some manual work that has to be done with your data. Instead of building a custom desktop app, why not do so in Colab?\n\nI built this component inspired by the react framework, which provides in my opinion the best tools for quick prototype-like development ideal for custom data exploring and data analysis tools.\n\n### How?\nThe `google.colab` package offers an interface to run python functions in the `output`. Combine that with the fact that python notebooks can render full on HTML and you can build UIs using python, HTML, css and javascript!\n\n## Install\nIn a cell run:\n\n```bash\n!pip3 install ColabComponent\n```\n\nAll the required dependencies are installed in the enviroment provided by google.\n\n## How to use?\nThe package utilises Object-Oriented inheritance and is based around the basic class `Component`.\n\n### Component API\n| property name | type | description | overridable |\n|---|---|---|---|\n| render | method | the basic method, where the ui and effects are defined | &#x2611; |\n| component_did_mount | method | a hook that is called, when the component is mounted | &#x2611; |\n| component_did_update | method | a hook that is called, when the component is updated | &#x2611; |\n| display | method | run to display the component | &#x2612; |\n| register_effect | method | registers a python function such that it can be used within the HTML code | &#x2612; |\n| state | dict | holds the info about the state of the component | &#x2612; |\n| set_state | method | the preferred way of updating the component state | &#x2612; |\n\n## Example\n```python\nfrom ColabComponent import Component\n\nclass Counter(Component):\n  def __init__(self):\n    super().__init__()\n    self.state = {\n        'number': 1\n    }\n\n    self.use_add = self.register_effect('add', self.add)\n\n  def render(self):\n    return f'''\n      <h1>{self.state['number']}</h1>\n      <button onclick=\"{self.use_add()}\">+1</button>\n    '''\n\n  def component_did_mount(self):\n    print('mounted')\n\n  def component_did_update(self):\n    print('updated')\n\n  def add(self):\n    self.set_state({\n        'number': self.state['number'] + 1\n    })\n\nCounter().display()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PPierzc/ColabComponent", "keywords": "python,colab,react,ui,component", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ColabComponent", "package_url": "https://pypi.org/project/ColabComponent/", "platform": "", "project_url": "https://pypi.org/project/ColabComponent/", "project_urls": {"Homepage": "https://github.com/PPierzc/ColabComponent"}, "release_url": "https://pypi.org/project/ColabComponent/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "A React.js inspired Component for building a simple reactive UI in Google Colaboratory.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ColabComponent</h1>\n<p>A React.js inspired Component for building a simple reactive UI in Google Colaboratory.</p>\n<h3>Why?</h3>\n<p>Sometimes there is some manual work that has to be done with your data. Instead of building a custom desktop app, why not do so in Colab?</p>\n<p>I built this component inspired by the react framework, which provides in my opinion the best tools for quick prototype-like development ideal for custom data exploring and data analysis tools.</p>\n<h3>How?</h3>\n<p>The <code>google.colab</code> package offers an interface to run python functions in the <code>output</code>. Combine that with the fact that python notebooks can render full on HTML and you can build UIs using python, HTML, css and javascript!</p>\n<h2>Install</h2>\n<p>In a cell run:</p>\n<pre>!pip3 install ColabComponent\n</pre>\n<p>All the required dependencies are installed in the enviroment provided by google.</p>\n<h2>How to use?</h2>\n<p>The package utilises Object-Oriented inheritance and is based around the basic class <code>Component</code>.</p>\n<h3>Component API</h3>\n<table>\n<thead>\n<tr>\n<th>property name</th>\n<th>type</th>\n<th>description</th>\n<th>overridable</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>render</td>\n<td>method</td>\n<td>the basic method, where the ui and effects are defined</td>\n<td>\u2611</td>\n</tr>\n<tr>\n<td>component_did_mount</td>\n<td>method</td>\n<td>a hook that is called, when the component is mounted</td>\n<td>\u2611</td>\n</tr>\n<tr>\n<td>component_did_update</td>\n<td>method</td>\n<td>a hook that is called, when the component is updated</td>\n<td>\u2611</td>\n</tr>\n<tr>\n<td>display</td>\n<td>method</td>\n<td>run to display the component</td>\n<td>\u2612</td>\n</tr>\n<tr>\n<td>register_effect</td>\n<td>method</td>\n<td>registers a python function such that it can be used within the HTML code</td>\n<td>\u2612</td>\n</tr>\n<tr>\n<td>state</td>\n<td>dict</td>\n<td>holds the info about the state of the component</td>\n<td>\u2612</td>\n</tr>\n<tr>\n<td>set_state</td>\n<td>method</td>\n<td>the preferred way of updating the component state</td>\n<td>\u2612</td>\n</tr></tbody></table>\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ColabComponent</span> <span class=\"kn\">import</span> <span class=\"n\">Component</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Counter</span><span class=\"p\">(</span><span class=\"n\">Component</span><span class=\"p\">):</span>\n  <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'number'</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_add</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">register_effect</span><span class=\"p\">(</span><span class=\"s1\">'add'</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">)</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">render</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s1\">'''</span>\n<span class=\"s1\">      &lt;h1&gt;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">[</span><span class=\"s1\">'number'</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s1\">&lt;/h1&gt;</span>\n<span class=\"s1\">      &lt;button onclick=\"</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_add</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">\"&gt;+1&lt;/button&gt;</span>\n<span class=\"s1\">    '''</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">component_did_mount</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'mounted'</span><span class=\"p\">)</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">component_did_update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'updated'</span><span class=\"p\">)</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_state</span><span class=\"p\">({</span>\n        <span class=\"s1\">'number'</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">[</span><span class=\"s1\">'number'</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n    <span class=\"p\">})</span>\n\n<span class=\"n\">Counter</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 5647197, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "49079eafc5b23554bbf3d61e2031a644", "sha256": "013a6208fc231e5225b1faf638fa178018059acbb84cf1bfecb113f937628dc5"}, "downloads": -1, "filename": "ColabComponent-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "49079eafc5b23554bbf3d61e2031a644", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4182, "upload_time": "2019-08-07T21:56:04", "upload_time_iso_8601": "2019-08-07T21:56:04.229488Z", "url": "https://files.pythonhosted.org/packages/4b/bd/c9652cdb11f39c31d6f87e396f2adcbad8d74411aea569265f9b02498b16/ColabComponent-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "710b825ed72bc5f5bed3df05ffa54385", "sha256": "6173a938868eac422b5f88feaafb1e456a32dce881b3b5e7ada4059043bd32cc"}, "downloads": -1, "filename": "ColabComponent-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "710b825ed72bc5f5bed3df05ffa54385", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4192, "upload_time": "2019-08-07T22:03:12", "upload_time_iso_8601": "2019-08-07T22:03:12.464558Z", "url": "https://files.pythonhosted.org/packages/51/5b/ed3db53ed75a9187870df9f49f1c59153952a31c4eb9ae125290da94995a/ColabComponent-0.0.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "710b825ed72bc5f5bed3df05ffa54385", "sha256": "6173a938868eac422b5f88feaafb1e456a32dce881b3b5e7ada4059043bd32cc"}, "downloads": -1, "filename": "ColabComponent-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "710b825ed72bc5f5bed3df05ffa54385", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4192, "upload_time": "2019-08-07T22:03:12", "upload_time_iso_8601": "2019-08-07T22:03:12.464558Z", "url": "https://files.pythonhosted.org/packages/51/5b/ed3db53ed75a9187870df9f49f1c59153952a31c4eb9ae125290da94995a/ColabComponent-0.0.3-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:18:06 2020"}