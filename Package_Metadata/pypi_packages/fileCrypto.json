{"info": {"author": "Ziad Abouelfarah", "author_email": "zain.work02@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# fileCrypto\n\nEncryption and Decryption Files Was Never Easier Than Before and for EVERYONE !!!\n\n## Dependencies\n\n* pyaes\n* pycrypto\n\n## Features\n\n* Anyone Can Use It, Beginner or Profissional\n* No Hard Coding To Encrypt and Decrypt File Anymore\n* Work In Any Platform (Linux, Mac Os, Windows)\n\n## What's algorithm that is in fileCrypto ?\n\n* AES\n* XOR\n* Base64(**Without Key**)\n* Base32(**Without Key**)\n* Base16(**Without Key**)\n\n## Hmm What Is Key ?\n\n\nThis seems to be a point of confusion for many people new to using encryption. You can think of the key as the \"password\". However, these algorithms require the \"password\" to be a specific length.\n\nBut You can Use Any length You want No Problem, **Wait What You Just Say Specific LENGTH**\n\nYeah. I did But I Use MD5 Hash To Get The Specific length. However, The Input Was .\n\n## How Can I Install It\n\nfrom pip using :\n\n```pip3 install fileCrypto```\n\n\n## How I Can Use It ??\n\nLike I Say In Description It's Almost Easy For Every One To Use It.\n\nLet's Give  Exemple For Each algorithm\n\n## AES\n\n#### Encryption\n\n```python\n\nimport fileCrypto\n\n#For fileOnAES is 3 parametre\n#The First is The File Derection\n#Seconde Is for The Key(password) \n#This Last is for extension and I Make The Defaut One is '.cry'\naes = fileCrypto.fileOnAES('exemple.jpg','123456789')\n\n# encrypt() methode is to give the order to encrypt the file\n# decrypt() methode is to give the order to decrypt the file\n\naes.encrypt()\n\n#[Out]:exemple.jpg.cry\n```\nFor The Extension you can use what ever u want **Don't forget to Start The Extension with a dot '.'**\n\nExemple :\n\t**.enc**\n\t**.ree**\n\t**.yourName**\n\n\n#### Decryption\n\n```python\n\nimport fileCrypto\n\n#For fileOnAES is 3 parametre\n#The First is The Encrypt File Derection \n#Seconde Is for The Key(password) That U USe\n#This Last is for extension and I Make The Defaut One is '.cry' \n#But Use WHat You Encrypt With\n\naes = fileCrypto.fileOnAES('exemple.jpg.cry','123456789')\n\n# encrypt() methode is to give the order to encrypt the file\n# decrypt() methode is to give the order to decrypt the file\n\naes.decrypt()\n\n#[Out]:exemple.jpg\n```\n\n## XOR\n\n#### Encryption\n\n```python\n\nimport fileCrypto\n\n#For fileOnXOR is 3 parametre\n#The First is The File Derection\n#Seconde Is for The Key(password) \n#This Last is for extension and I Make The Defaut One is '.cry'\nxor = fileCrypto.fileOnXOR('exemple.jpg','123456789')\n\n# encrypt() methode is to give the order to encrypt the file\n# decrypt() methode is to give the order to decrypt the file\n\nxor.encrypt()\n\n#[Out]:exemple.jpg.cry\n```\nFor The Extension you can use what ever u want **Don't forget to Start The Extension with a dot '.'**\n\nExemple :\n\t**.enc**\n\t**.ree**\n\t**.yourName**\n\n#### Decryption \n\n```python\n\nimport fileCrypto\n\n#For fileOnXOR is 3 parametre\n#The First is The Encrypt File Derection \n#Seconde Is for The Key(password) That U USe\n#This Last is for extension and I Make The Defaut One is '.cry' \n#But Use WHat You Encrypt With\n\nxor = fileCrypto.fileOnXOR('exemple.jpg.cry','123456789')\n\n# encrypt() methode is to give the order to encrypt the file\n# decrypt() methode is to give the order to decrypt the file\n\nxor.decrypt()\n\n#[Out]:exemple.jpg\n```\n\n## Base64, Base32, Base16(**No Key For This 3 Algorithm**)\n\nHir Is Different Then Other\nIn Those Algorithm you will Use encode and decode methode because there are not for encryption but for coding data\n\n#### Encode\n\n```python\n\nimport fileCrypto\n\n#For fileOnBase64 is two parametre\n#The First is The File Derection\n#This Last is for extension and I Make The Defaut One is '.cry'\nbase64 = fileCrypto.fileOnBase64('exemple.jpg','123456789')\n\n# encode() methode is to give the order to encrypt the file\n# decode() methode is to give the order to decrypt the file\n\nbase64.encrypt()\n\n#[Out]:exemple.jpg.cry\n```\nFor The Extension you can use what ever u want **Don't forget to Start The Extension with a dot '.'**\n\nExemple :\n\t**.enc**\n\t**.ree**\n\t**.yourName**\n\n#### Decode \n\n```python\n\nimport fileCrypto\n\n#For fileOnBase64 is 2 parametre\n#The First is The Encrypt File Derection \n#This Last is for extension and I Make The Defaut One is '.cry' \n#But Use WHat You Encrypt With\n\nbase64 = fileCrypto.fileOnBase64('exemple.jpg.cry','123456789')\n\n# encode() methode is to give the order to encrypt the file\n# decode() methode is to give the order to decrypt the file\n\nbase64.decrypt()\n\n#[Out]:exemple.jpg\n```\n\nJust Change The **fileOnBase64** to **fileOnBase32** or **fileOnBase16** If you want Use an diffirent algo for base\n\nFAQ\n---\n#### What's New in fileCrypto 2.0\n\nAdding:\n\n* DES\n* DES3\n* Blowfish\n\nAnd Reduce Time complexity\n\n#### What's New in fileCrypto 3.0\n\nAdding : \n* ARC2\n* ARC4\n\n\n### What's New in fileCrypto 3.4\n\nFixing :\n* Bug in Base64, Base32 and Base16 \n\nAdding : \n* Time Printing \n\nWait what \"Time Printing\":\n\n**Yeah if you want to print the time complexity for the user or your Self**\n\n## How use Time Printing:\n\nYou need just to make the timerPrinting argv True. \n\nLike this:\n\n```python\nimport fileCrypto\n\ncipher = fileCrypto.fileOnAES(\"exemple.jpg\",\"123456789\")\ncipher.encrypt(timerPrinting=True)\ncipher.decrypt(timerPrinting=True)\n\n#[Out]: \n# Done In 0.142667865753174\n# Done In 0,132926678657531\n\n```\n\n* You can apply this for all the classes in the package\n\n\n#### How do I get a question I have added?\n\nE-mail me at zain.work02@gmail.com with any questions, suggestions and comments \n\n\n#### Can I give you my money?\n\nUmm... Ok? \ud83d\ude04\n\n_Bitcoin_  - `19MNfdTtGSxuBZpcKXJPVc3KbRnohxARMJ` \n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ziadab/fileCrypto", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "fileCrypto", "package_url": "https://pypi.org/project/fileCrypto/", "platform": "", "project_url": "https://pypi.org/project/fileCrypto/", "project_urls": {"Homepage": "https://github.com/ziadab/fileCrypto"}, "release_url": "https://pypi.org/project/fileCrypto/4.0.1/", "requires_dist": null, "requires_python": "", "summary": "Protecting File Was Never Easier Than Before", "version": "4.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>fileCrypto</h1>\n<p>Encryption and Decryption Files Was Never Easier Than Before and for EVERYONE !!!</p>\n<h2>Dependencies</h2>\n<ul>\n<li>pyaes</li>\n<li>pycrypto</li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>Anyone Can Use It, Beginner or Profissional</li>\n<li>No Hard Coding To Encrypt and Decrypt File Anymore</li>\n<li>Work In Any Platform (Linux, Mac Os, Windows)</li>\n</ul>\n<h2>What's algorithm that is in fileCrypto ?</h2>\n<ul>\n<li>AES</li>\n<li>XOR</li>\n<li>Base64(<strong>Without Key</strong>)</li>\n<li>Base32(<strong>Without Key</strong>)</li>\n<li>Base16(<strong>Without Key</strong>)</li>\n</ul>\n<h2>Hmm What Is Key ?</h2>\n<p>This seems to be a point of confusion for many people new to using encryption. You can think of the key as the \"password\". However, these algorithms require the \"password\" to be a specific length.</p>\n<p>But You can Use Any length You want No Problem, <strong>Wait What You Just Say Specific LENGTH</strong></p>\n<p>Yeah. I did But I Use MD5 Hash To Get The Specific length. However, The Input Was .</p>\n<h2>How Can I Install It</h2>\n<p>from pip using :</p>\n<p><code>pip3 install fileCrypto</code></p>\n<h2>How I Can Use It ??</h2>\n<p>Like I Say In Description It's Almost Easy For Every One To Use It.</p>\n<p>Let's Give  Exemple For Each algorithm</p>\n<h2>AES</h2>\n<h4>Encryption</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fileCrypto</span>\n\n<span class=\"c1\">#For fileOnAES is 3 parametre</span>\n<span class=\"c1\">#The First is The File Derection</span>\n<span class=\"c1\">#Seconde Is for The Key(password) </span>\n<span class=\"c1\">#This Last is for extension and I Make The Defaut One is '.cry'</span>\n<span class=\"n\">aes</span> <span class=\"o\">=</span> <span class=\"n\">fileCrypto</span><span class=\"o\">.</span><span class=\"n\">fileOnAES</span><span class=\"p\">(</span><span class=\"s1\">'exemple.jpg'</span><span class=\"p\">,</span><span class=\"s1\">'123456789'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># encrypt() methode is to give the order to encrypt the file</span>\n<span class=\"c1\"># decrypt() methode is to give the order to decrypt the file</span>\n\n<span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">encrypt</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#[Out]:exemple.jpg.cry</span>\n</pre>\n<p>For The Extension you can use what ever u want <strong>Don't forget to Start The Extension with a dot '.'</strong></p>\n<p>Exemple :\n<strong>.enc</strong>\n<strong>.ree</strong>\n<strong>.yourName</strong></p>\n<h4>Decryption</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fileCrypto</span>\n\n<span class=\"c1\">#For fileOnAES is 3 parametre</span>\n<span class=\"c1\">#The First is The Encrypt File Derection </span>\n<span class=\"c1\">#Seconde Is for The Key(password) That U USe</span>\n<span class=\"c1\">#This Last is for extension and I Make The Defaut One is '.cry' </span>\n<span class=\"c1\">#But Use WHat You Encrypt With</span>\n\n<span class=\"n\">aes</span> <span class=\"o\">=</span> <span class=\"n\">fileCrypto</span><span class=\"o\">.</span><span class=\"n\">fileOnAES</span><span class=\"p\">(</span><span class=\"s1\">'exemple.jpg.cry'</span><span class=\"p\">,</span><span class=\"s1\">'123456789'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># encrypt() methode is to give the order to encrypt the file</span>\n<span class=\"c1\"># decrypt() methode is to give the order to decrypt the file</span>\n\n<span class=\"n\">aes</span><span class=\"o\">.</span><span class=\"n\">decrypt</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#[Out]:exemple.jpg</span>\n</pre>\n<h2>XOR</h2>\n<h4>Encryption</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fileCrypto</span>\n\n<span class=\"c1\">#For fileOnXOR is 3 parametre</span>\n<span class=\"c1\">#The First is The File Derection</span>\n<span class=\"c1\">#Seconde Is for The Key(password) </span>\n<span class=\"c1\">#This Last is for extension and I Make The Defaut One is '.cry'</span>\n<span class=\"n\">xor</span> <span class=\"o\">=</span> <span class=\"n\">fileCrypto</span><span class=\"o\">.</span><span class=\"n\">fileOnXOR</span><span class=\"p\">(</span><span class=\"s1\">'exemple.jpg'</span><span class=\"p\">,</span><span class=\"s1\">'123456789'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># encrypt() methode is to give the order to encrypt the file</span>\n<span class=\"c1\"># decrypt() methode is to give the order to decrypt the file</span>\n\n<span class=\"n\">xor</span><span class=\"o\">.</span><span class=\"n\">encrypt</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#[Out]:exemple.jpg.cry</span>\n</pre>\n<p>For The Extension you can use what ever u want <strong>Don't forget to Start The Extension with a dot '.'</strong></p>\n<p>Exemple :\n<strong>.enc</strong>\n<strong>.ree</strong>\n<strong>.yourName</strong></p>\n<h4>Decryption</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fileCrypto</span>\n\n<span class=\"c1\">#For fileOnXOR is 3 parametre</span>\n<span class=\"c1\">#The First is The Encrypt File Derection </span>\n<span class=\"c1\">#Seconde Is for The Key(password) That U USe</span>\n<span class=\"c1\">#This Last is for extension and I Make The Defaut One is '.cry' </span>\n<span class=\"c1\">#But Use WHat You Encrypt With</span>\n\n<span class=\"n\">xor</span> <span class=\"o\">=</span> <span class=\"n\">fileCrypto</span><span class=\"o\">.</span><span class=\"n\">fileOnXOR</span><span class=\"p\">(</span><span class=\"s1\">'exemple.jpg.cry'</span><span class=\"p\">,</span><span class=\"s1\">'123456789'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># encrypt() methode is to give the order to encrypt the file</span>\n<span class=\"c1\"># decrypt() methode is to give the order to decrypt the file</span>\n\n<span class=\"n\">xor</span><span class=\"o\">.</span><span class=\"n\">decrypt</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#[Out]:exemple.jpg</span>\n</pre>\n<h2>Base64, Base32, Base16(<strong>No Key For This 3 Algorithm</strong>)</h2>\n<p>Hir Is Different Then Other\nIn Those Algorithm you will Use encode and decode methode because there are not for encryption but for coding data</p>\n<h4>Encode</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fileCrypto</span>\n\n<span class=\"c1\">#For fileOnBase64 is two parametre</span>\n<span class=\"c1\">#The First is The File Derection</span>\n<span class=\"c1\">#This Last is for extension and I Make The Defaut One is '.cry'</span>\n<span class=\"n\">base64</span> <span class=\"o\">=</span> <span class=\"n\">fileCrypto</span><span class=\"o\">.</span><span class=\"n\">fileOnBase64</span><span class=\"p\">(</span><span class=\"s1\">'exemple.jpg'</span><span class=\"p\">,</span><span class=\"s1\">'123456789'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># encode() methode is to give the order to encrypt the file</span>\n<span class=\"c1\"># decode() methode is to give the order to decrypt the file</span>\n\n<span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">encrypt</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#[Out]:exemple.jpg.cry</span>\n</pre>\n<p>For The Extension you can use what ever u want <strong>Don't forget to Start The Extension with a dot '.'</strong></p>\n<p>Exemple :\n<strong>.enc</strong>\n<strong>.ree</strong>\n<strong>.yourName</strong></p>\n<h4>Decode</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fileCrypto</span>\n\n<span class=\"c1\">#For fileOnBase64 is 2 parametre</span>\n<span class=\"c1\">#The First is The Encrypt File Derection </span>\n<span class=\"c1\">#This Last is for extension and I Make The Defaut One is '.cry' </span>\n<span class=\"c1\">#But Use WHat You Encrypt With</span>\n\n<span class=\"n\">base64</span> <span class=\"o\">=</span> <span class=\"n\">fileCrypto</span><span class=\"o\">.</span><span class=\"n\">fileOnBase64</span><span class=\"p\">(</span><span class=\"s1\">'exemple.jpg.cry'</span><span class=\"p\">,</span><span class=\"s1\">'123456789'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># encode() methode is to give the order to encrypt the file</span>\n<span class=\"c1\"># decode() methode is to give the order to decrypt the file</span>\n\n<span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">decrypt</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#[Out]:exemple.jpg</span>\n</pre>\n<p>Just Change The <strong>fileOnBase64</strong> to <strong>fileOnBase32</strong> or <strong>fileOnBase16</strong> If you want Use an diffirent algo for base</p>\n<h2>FAQ</h2>\n<h4>What's New in fileCrypto 2.0</h4>\n<p>Adding:</p>\n<ul>\n<li>DES</li>\n<li>DES3</li>\n<li>Blowfish</li>\n</ul>\n<p>And Reduce Time complexity</p>\n<h4>What's New in fileCrypto 3.0</h4>\n<p>Adding :</p>\n<ul>\n<li>ARC2</li>\n<li>ARC4</li>\n</ul>\n<h3>What's New in fileCrypto 3.4</h3>\n<p>Fixing :</p>\n<ul>\n<li>Bug in Base64, Base32 and Base16</li>\n</ul>\n<p>Adding :</p>\n<ul>\n<li>Time Printing</li>\n</ul>\n<p>Wait what \"Time Printing\":</p>\n<p><strong>Yeah if you want to print the time complexity for the user or your Self</strong></p>\n<h2>How use Time Printing:</h2>\n<p>You need just to make the timerPrinting argv True.</p>\n<p>Like this:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fileCrypto</span>\n\n<span class=\"n\">cipher</span> <span class=\"o\">=</span> <span class=\"n\">fileCrypto</span><span class=\"o\">.</span><span class=\"n\">fileOnAES</span><span class=\"p\">(</span><span class=\"s2\">\"exemple.jpg\"</span><span class=\"p\">,</span><span class=\"s2\">\"123456789\"</span><span class=\"p\">)</span>\n<span class=\"n\">cipher</span><span class=\"o\">.</span><span class=\"n\">encrypt</span><span class=\"p\">(</span><span class=\"n\">timerPrinting</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">cipher</span><span class=\"o\">.</span><span class=\"n\">decrypt</span><span class=\"p\">(</span><span class=\"n\">timerPrinting</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#[Out]: </span>\n<span class=\"c1\"># Done In 0.142667865753174</span>\n<span class=\"c1\"># Done In 0,132926678657531</span>\n</pre>\n<ul>\n<li>You can apply this for all the classes in the package</li>\n</ul>\n<h4>How do I get a question I have added?</h4>\n<p>E-mail me at <a href=\"mailto:zain.work02@gmail.com\">zain.work02@gmail.com</a> with any questions, suggestions and comments</p>\n<h4>Can I give you my money?</h4>\n<p>Umm... Ok? \ud83d\ude04</p>\n<p><em>Bitcoin</em>  - <code>19MNfdTtGSxuBZpcKXJPVc3KbRnohxARMJ</code></p>\n\n          </div>"}, "last_serial": 4397833, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "c5cc7b73fae897f94d3967d8dc29fe72", "sha256": "0f19b86000a82487c21dbfd5bf3e9ed0b3b5b282fe76110e9e05e019fd660735"}, "downloads": -1, "filename": "fileCrypto-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c5cc7b73fae897f94d3967d8dc29fe72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7635, "upload_time": "2018-07-24T19:39:42", "upload_time_iso_8601": "2018-07-24T19:39:42.364533Z", "url": "https://files.pythonhosted.org/packages/5e/48/676d7b5151a5b8a28affc3535dc93f5ebef224b7b2ff7bb7ff93ff95dbb0/fileCrypto-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6e1c10a8cfeb45f2553fad373413a54", "sha256": "bb6225aba883da7985ea0853f6c40f60eb6cdf775674eda50af7be00b38a5681"}, "downloads": -1, "filename": "fileCrypto-1.1.tar.gz", "has_sig": false, "md5_digest": "d6e1c10a8cfeb45f2553fad373413a54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4259, "upload_time": "2018-07-24T19:39:44", "upload_time_iso_8601": "2018-07-24T19:39:44.905237Z", "url": "https://files.pythonhosted.org/packages/8e/33/e51f52bda8122dc3b451a135dcd9b98851fbd62f26c4ab2a9e07fdae2a1d/fileCrypto-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "810ee739cf95e0f8dd1d8c633f10d054", "sha256": "0b11a3f73b6da554ee1320ae3fec62585a7598dc8d4a616a0b293ea28050fde2"}, "downloads": -1, "filename": "fileCrypto-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "810ee739cf95e0f8dd1d8c633f10d054", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7705, "upload_time": "2018-07-24T19:58:30", "upload_time_iso_8601": "2018-07-24T19:58:30.817737Z", "url": "https://files.pythonhosted.org/packages/0e/c4/09b57e773b7cf206e38477dfc99916f40b3860b0d63bee561de0ea287819/fileCrypto-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e56afb62afe04cb2c3d828113b33c62", "sha256": "1406545c48b75f4de5fa4b2591c63ee0ba8724739b9c173e249d65b4b440dbe4"}, "downloads": -1, "filename": "fileCrypto-1.2.tar.gz", "has_sig": false, "md5_digest": "5e56afb62afe04cb2c3d828113b33c62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4335, "upload_time": "2018-07-24T19:58:33", "upload_time_iso_8601": "2018-07-24T19:58:33.108104Z", "url": "https://files.pythonhosted.org/packages/94/75/7e8f1f88307663d3807b1290a113d559622c6fffd729cc8efcc9e2445b9b/fileCrypto-1.2.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "494a130cdaf5ce2001817efbca891e60", "sha256": "3305025cef2845402ef3c0f33e297d3a106bad9aa7223f0de478ab5df06374f1"}, "downloads": -1, "filename": "fileCrypto-2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "494a130cdaf5ce2001817efbca891e60", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11991, "upload_time": "2018-07-26T16:13:56", "upload_time_iso_8601": "2018-07-26T16:13:56.297302Z", "url": "https://files.pythonhosted.org/packages/66/61/9be739ef12051e8de9cf168d3590b58a5e02747baf310108403c6eab343e/fileCrypto-2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ca2da051ac48db0d9dbaed0cbb52519", "sha256": "37db5fdcf630d34683ef4952ad60aad92ee83153186db6d836912bb8e0376121"}, "downloads": -1, "filename": "fileCrypto-2.0.tar.gz", "has_sig": false, "md5_digest": "1ca2da051ac48db0d9dbaed0cbb52519", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5325, "upload_time": "2018-07-26T16:13:58", "upload_time_iso_8601": "2018-07-26T16:13:58.373140Z", "url": "https://files.pythonhosted.org/packages/7a/ff/b1d3dfb4c6dd523b38362ead097e0d430fb0e4ce36c683e2235c6b47f3d5/fileCrypto-2.0.tar.gz", "yanked": false}], "3.2": [{"comment_text": "", "digests": {"md5": "59daea6ebf62cecce5c6d7d8772f6ecd", "sha256": "c7a527f0109f0d0d8d1b0484c5d0735bb7b9096e4479d8beb14b49bcd0c1cebc"}, "downloads": -1, "filename": "fileCrypto-3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "59daea6ebf62cecce5c6d7d8772f6ecd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14555, "upload_time": "2018-07-28T12:40:37", "upload_time_iso_8601": "2018-07-28T12:40:37.959381Z", "url": "https://files.pythonhosted.org/packages/f0/8f/75caa65dadf49a298498187788e6cf65cbef01ef2342f3e6a8b6639b72f2/fileCrypto-3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ec1489d268d985595bffe3500117158", "sha256": "d52c59cb8ea9c7cf955c4a786ceab4855baf0e2adb81b5a2b657da3c8b6b7f3e"}, "downloads": -1, "filename": "fileCrypto-3.2.tar.gz", "has_sig": false, "md5_digest": "8ec1489d268d985595bffe3500117158", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5660, "upload_time": "2018-07-28T12:40:40", "upload_time_iso_8601": "2018-07-28T12:40:40.072170Z", "url": "https://files.pythonhosted.org/packages/8e/42/a8ddb00b074073eed07c5739e762f35332ca6d1b6179e168c8c934b78e61/fileCrypto-3.2.tar.gz", "yanked": false}], "3.3": [{"comment_text": "", "digests": {"md5": "b48ff2657cf4f3a1ff3f15be9057cc92", "sha256": "1670a5079edab8ad44bcc9ab66469d1b85848c702e34dd6bd4ec6d879e555197"}, "downloads": -1, "filename": "fileCrypto-3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b48ff2657cf4f3a1ff3f15be9057cc92", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14690, "upload_time": "2018-09-23T18:12:50", "upload_time_iso_8601": "2018-09-23T18:12:50.769469Z", "url": "https://files.pythonhosted.org/packages/fb/0c/6c61e04ee32bfbea42fb17fb0de9efff770ae3b2654133008c75249c35c1/fileCrypto-3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ac03d73edb4cfe6929b4305ab4b8f7b", "sha256": "507f848c7ff3561f831bb096bb19f8fd0e434c6870bb02bc89f2ee28a8ee436f"}, "downloads": -1, "filename": "fileCrypto-3.3.tar.gz", "has_sig": false, "md5_digest": "2ac03d73edb4cfe6929b4305ab4b8f7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5650, "upload_time": "2018-09-23T18:12:53", "upload_time_iso_8601": "2018-09-23T18:12:53.024841Z", "url": "https://files.pythonhosted.org/packages/60/1b/c526150de7f8c5d995d713c2433b2fa9a3b0db104483e8b1281c984c0364/fileCrypto-3.3.tar.gz", "yanked": false}], "3.4.1": [{"comment_text": "", "digests": {"md5": "124d723252516a1434b400dab5226f68", "sha256": "007baee6bcd4912394250e781bdc7408cdb143a74d89de38b726e7b63defedcf"}, "downloads": -1, "filename": "fileCrypto-3.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "124d723252516a1434b400dab5226f68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15082, "upload_time": "2018-10-03T20:41:41", "upload_time_iso_8601": "2018-10-03T20:41:41.493404Z", "url": "https://files.pythonhosted.org/packages/56/b3/0a5a9791cc9e7c7bd2ced71c2e309c72fa9103350938acb76fdd30dca35f/fileCrypto-3.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "91bd53064af8c3091a366e760274309d", "sha256": "24f3ad604b7df2121c1915b93e7546754de93341b07e9208f498ab146280aa07"}, "downloads": -1, "filename": "fileCrypto-3.4.1.tar.gz", "has_sig": false, "md5_digest": "91bd53064af8c3091a366e760274309d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5950, "upload_time": "2018-10-03T20:41:43", "upload_time_iso_8601": "2018-10-03T20:41:43.374325Z", "url": "https://files.pythonhosted.org/packages/4b/b0/25ff976d16aa0285a92037145bfac16bedcbb9978f4057a58005595ba9a9/fileCrypto-3.4.1.tar.gz", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "01454dd1ea5fd39210c0aa79dc7359ea", "sha256": "2079e23cb517272fbaa7b2a87b6a6782ec46aea97ca1a29daf45dec47640feba"}, "downloads": -1, "filename": "fileCrypto-4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "01454dd1ea5fd39210c0aa79dc7359ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15820, "upload_time": "2018-10-20T18:54:09", "upload_time_iso_8601": "2018-10-20T18:54:09.007277Z", "url": "https://files.pythonhosted.org/packages/5a/65/abc4a90540af18e675f5a0585cb48d291ff58b4e678b3a3ddc828b77fcac/fileCrypto-4.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "731d3bcfcd54ab7c03fe054c384706ff", "sha256": "ca55d072452bc7165099bb93313d0bebc16284430127293069f128533e0c9e74"}, "downloads": -1, "filename": "fileCrypto-4.0.1.tar.gz", "has_sig": false, "md5_digest": "731d3bcfcd54ab7c03fe054c384706ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6301, "upload_time": "2018-10-20T18:54:11", "upload_time_iso_8601": "2018-10-20T18:54:11.370328Z", "url": "https://files.pythonhosted.org/packages/bc/50/c6c3b4c7865381ec2e5a463da8250298708eaa56bb3ef6ea571f4978c278/fileCrypto-4.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "01454dd1ea5fd39210c0aa79dc7359ea", "sha256": "2079e23cb517272fbaa7b2a87b6a6782ec46aea97ca1a29daf45dec47640feba"}, "downloads": -1, "filename": "fileCrypto-4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "01454dd1ea5fd39210c0aa79dc7359ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15820, "upload_time": "2018-10-20T18:54:09", "upload_time_iso_8601": "2018-10-20T18:54:09.007277Z", "url": "https://files.pythonhosted.org/packages/5a/65/abc4a90540af18e675f5a0585cb48d291ff58b4e678b3a3ddc828b77fcac/fileCrypto-4.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "731d3bcfcd54ab7c03fe054c384706ff", "sha256": "ca55d072452bc7165099bb93313d0bebc16284430127293069f128533e0c9e74"}, "downloads": -1, "filename": "fileCrypto-4.0.1.tar.gz", "has_sig": false, "md5_digest": "731d3bcfcd54ab7c03fe054c384706ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6301, "upload_time": "2018-10-20T18:54:11", "upload_time_iso_8601": "2018-10-20T18:54:11.370328Z", "url": "https://files.pythonhosted.org/packages/bc/50/c6c3b4c7865381ec2e5a463da8250298708eaa56bb3ef6ea571f4978c278/fileCrypto-4.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:36 2020"}