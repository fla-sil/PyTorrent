{"info": {"author": "Konstantin Tretyakov", "author_email": "kt@ut.ee", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Visualization"], "description": "====================================================\nVenn diagram plotting routines for Python/Matplotlib\n====================================================\n\n.. image::  https://travis-ci.org/konstantint/matplotlib-venn.png?branch=master\n   :target: https://travis-ci.org/konstantint/matplotlib-venn\n\nRoutines for plotting area-weighted two- and three-circle venn diagrams.\n\nInstallation\n------------\n\nThe simplest way to install the package is via ``easy_install`` or\n``pip``::\n\n    $ easy_install matplotlib-venn\n\nDependencies\n------------\n\n- ``numpy``,\n- ``scipy``,\n- ``matplotlib``.\n\nUsage\n-----\nThe package provides four main functions: ``venn2``,\n``venn2_circles``, ``venn3`` and ``venn3_circles``.\n\nThe functions ``venn2`` and ``venn2_circles`` accept as their only\nrequired argument a 3-element list ``(Ab, aB, AB)`` of subset sizes,\ne.g.::\n\n    venn2(subsets = (3, 2, 1))\n\nand draw a two-circle venn diagram with respective region areas. In\nthe particular example, the region, corresponding to subset ``A and\nnot B`` will be three times larger in area than the region,\ncorresponding to subset ``A and B``. Alternatively, you can simply\nprovide a list of two ``set`` or ``Counter`` (i.e. multi-set) objects instead (new in version 0.7),\ne.g.::\n\n    venn2([set(['A', 'B', 'C', 'D']), set(['D', 'E', 'F'])])\n\nSimilarly, the functions ``venn3`` and ``venn3_circles`` take a\n7-element list of subset sizes ``(Abc, aBc, ABc, abC, AbC, aBC,\nABC)``, and draw a three-circle area-weighted venn\ndiagram. Alternatively, you can provide a list of three ``set`` or ``Counter`` objects\n(rather than counting sizes for all 7 subsets).\n\nThe functions ``venn2_circles`` and ``venn3_circles`` draw just the\ncircles, whereas the functions ``venn2`` and ``venn3`` draw the\ndiagrams as a collection of colored patches, annotated with text\nlabels. In addition (version 0.7+), functions ``venn2_unweighted`` and\n``venn3_unweighted`` draw the Venn diagrams without area-weighting.\n\nNote that for a three-circle venn diagram it is not in general\npossible to achieve exact correspondence between the required set\nsizes and region areas, however in most cases the picture will still\nprovide a decent indication.\n\nThe functions ``venn2_circles`` and ``venn3_circles`` return the list of ``matplotlib.patch.Circle`` objects that may be tuned further\nto your liking. The functions ``venn2`` and ``venn3`` return an object of class ``VennDiagram``,\nwhich gives access to constituent patches, text elements, and (since\nversion 0.7) the information about the centers and radii of the\ncircles.\n\nBasic Example::\n\n    from matplotlib_venn import venn2\n    venn2(subsets = (3, 2, 1))\n\nFor the three-circle case::\n\n    from matplotlib_venn import venn3\n    venn3(subsets = (1, 1, 1, 2, 1, 2, 2), set_labels = ('Set1', 'Set2', 'Set3'))\n\nA more elaborate example::\n\n    from matplotlib import pyplot as plt\n    import numpy as np\n    from matplotlib_venn import venn3, venn3_circles\n    plt.figure(figsize=(4,4))\n    v = venn3(subsets=(1, 1, 1, 1, 1, 1, 1), set_labels = ('A', 'B', 'C'))\n    v.get_patch_by_id('100').set_alpha(1.0)\n    v.get_patch_by_id('100').set_color('white')\n    v.get_label_by_id('100').set_text('Unknown')\n    v.get_label_by_id('A').set_text('Set \"A\"')\n    c = venn3_circles(subsets=(1, 1, 1, 1, 1, 1, 1), linestyle='dashed')\n    c[0].set_lw(1.0)\n    c[0].set_ls('dotted')\n    plt.title(\"Sample Venn diagram\")\n    plt.annotate('Unknown set', xy=v.get_label_by_id('100').get_position() - np.array([0, 0.05]), xytext=(-70,-70),\n                 ha='center', textcoords='offset points', bbox=dict(boxstyle='round,pad=0.5', fc='gray', alpha=0.1),\n                 arrowprops=dict(arrowstyle='->', connectionstyle='arc3,rad=0.5',color='gray'))\n    plt.show()\n\nAn example with multiple subplots (new in version 0.6)::\n\n    from matplotlib_venn import venn2, venn2_circles\n    figure, axes = plt.subplots(2, 2)\n    venn2(subsets={'10': 1, '01': 1, '11': 1}, set_labels = ('A', 'B'), ax=axes[0][0])\n    venn2_circles((1, 2, 3), ax=axes[0][1])\n    venn3(subsets=(1, 1, 1, 1, 1, 1, 1), set_labels = ('A', 'B', 'C'), ax=axes[1][0])\n    venn3_circles({'001': 10, '100': 20, '010': 21, '110': 13, '011': 14}, ax=axes[1][1])\n    plt.show()\n\nPerhaps the most common use case is generating a Venn diagram given\nthree sets of objects::\n\n    set1 = set(['A', 'B', 'C', 'D'])\n    set2 = set(['B', 'C', 'D', 'E'])\n    set3 = set(['C', 'D',' E', 'F', 'G'])\n\n    venn3([set1, set2, set3], ('Set1', 'Set2', 'Set3'))\n    plt.show()\n\n\nQuestions\n---------\n* If you ask your questions at `StackOverflow <http://stackoverflow.com/>`_ and tag them `matplotlib-venn <http://stackoverflow.com/questions/tagged/matplotlib-venn>`_, chances are high you'll get an answer from the maintainer of this package.\n\n\nSee also\n--------\n\n* Report issues and submit fixes at Github:\n  https://github.com/konstantint/matplotlib-venn\n  \n  Check out the ``DEVELOPER-README.rst`` for development-related notes.\n* Some alternative means of plotting a Venn diagram (as of\n  October 2012) are reviewed in the blog post:\n  http://fouryears.eu/2012/10/13/venn-diagrams-in-python/\n* The `matplotlib-subsets\n  <https://pypi.python.org/pypi/matplotlib-subsets>`_ package\n  visualizes a hierarchy of sets as a tree of rectangles.\n* The `matplotlib_venn_wordcloud <https://pypi.python.org/pypi/matplotlib_venn_wordcloud>`_ package\n  combines Venn diagrams with word clouds for a pretty amazing (and amusing) result.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/konstantint/matplotlib-venn", "keywords": "matplotlib plotting charts venn-diagrams", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "matplotlib-venn", "package_url": "https://pypi.org/project/matplotlib-venn/", "platform": "Platform Independent", "project_url": "https://pypi.org/project/matplotlib-venn/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/konstantint/matplotlib-venn"}, "release_url": "https://pypi.org/project/matplotlib-venn/0.11.5/", "requires_dist": null, "requires_python": null, "summary": "Functions for plotting area-proportional two- and three-way Venn diagrams in matplotlib.", "version": "0.11.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/konstantint/matplotlib-venn\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/konstantint/matplotlib-venn.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/820dd1189b12bfcfd8273b928a0ac79a2e110ea7/68747470733a2f2f7472617669732d63692e6f72672f6b6f6e7374616e74696e742f6d6174706c6f746c69622d76656e6e2e706e673f6272616e63683d6d6173746572\"></a>\n<p>Routines for plotting area-weighted two- and three-circle venn diagrams.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The simplest way to install the package is via <tt>easy_install</tt> or\n<tt>pip</tt>:</p>\n<pre>$ easy_install matplotlib-venn\n</pre>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li><tt>numpy</tt>,</li>\n<li><tt>scipy</tt>,</li>\n<li><tt>matplotlib</tt>.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The package provides four main functions: <tt>venn2</tt>,\n<tt>venn2_circles</tt>, <tt>venn3</tt> and <tt>venn3_circles</tt>.</p>\n<p>The functions <tt>venn2</tt> and <tt>venn2_circles</tt> accept as their only\nrequired argument a 3-element list <tt>(Ab, aB, AB)</tt> of subset sizes,\ne.g.:</p>\n<pre>venn2(subsets = (3, 2, 1))\n</pre>\n<p>and draw a two-circle venn diagram with respective region areas. In\nthe particular example, the region, corresponding to subset <tt>A and\nnot B</tt> will be three times larger in area than the region,\ncorresponding to subset <tt>A and B</tt>. Alternatively, you can simply\nprovide a list of two <tt>set</tt> or <tt>Counter</tt> (i.e. multi-set) objects instead (new in version 0.7),\ne.g.:</p>\n<pre>venn2([set(['A', 'B', 'C', 'D']), set(['D', 'E', 'F'])])\n</pre>\n<p>Similarly, the functions <tt>venn3</tt> and <tt>venn3_circles</tt> take a\n7-element list of subset sizes <tt>(Abc, aBc, ABc, abC, AbC, aBC,\nABC)</tt>, and draw a three-circle area-weighted venn\ndiagram. Alternatively, you can provide a list of three <tt>set</tt> or <tt>Counter</tt> objects\n(rather than counting sizes for all 7 subsets).</p>\n<p>The functions <tt>venn2_circles</tt> and <tt>venn3_circles</tt> draw just the\ncircles, whereas the functions <tt>venn2</tt> and <tt>venn3</tt> draw the\ndiagrams as a collection of colored patches, annotated with text\nlabels. In addition (version 0.7+), functions <tt>venn2_unweighted</tt> and\n<tt>venn3_unweighted</tt> draw the Venn diagrams without area-weighting.</p>\n<p>Note that for a three-circle venn diagram it is not in general\npossible to achieve exact correspondence between the required set\nsizes and region areas, however in most cases the picture will still\nprovide a decent indication.</p>\n<p>The functions <tt>venn2_circles</tt> and <tt>venn3_circles</tt> return the list of <tt>matplotlib.patch.Circle</tt> objects that may be tuned further\nto your liking. The functions <tt>venn2</tt> and <tt>venn3</tt> return an object of class <tt>VennDiagram</tt>,\nwhich gives access to constituent patches, text elements, and (since\nversion 0.7) the information about the centers and radii of the\ncircles.</p>\n<p>Basic Example:</p>\n<pre>from matplotlib_venn import venn2\nvenn2(subsets = (3, 2, 1))\n</pre>\n<p>For the three-circle case:</p>\n<pre>from matplotlib_venn import venn3\nvenn3(subsets = (1, 1, 1, 2, 1, 2, 2), set_labels = ('Set1', 'Set2', 'Set3'))\n</pre>\n<p>A more elaborate example:</p>\n<pre>from matplotlib import pyplot as plt\nimport numpy as np\nfrom matplotlib_venn import venn3, venn3_circles\nplt.figure(figsize=(4,4))\nv = venn3(subsets=(1, 1, 1, 1, 1, 1, 1), set_labels = ('A', 'B', 'C'))\nv.get_patch_by_id('100').set_alpha(1.0)\nv.get_patch_by_id('100').set_color('white')\nv.get_label_by_id('100').set_text('Unknown')\nv.get_label_by_id('A').set_text('Set \"A\"')\nc = venn3_circles(subsets=(1, 1, 1, 1, 1, 1, 1), linestyle='dashed')\nc[0].set_lw(1.0)\nc[0].set_ls('dotted')\nplt.title(\"Sample Venn diagram\")\nplt.annotate('Unknown set', xy=v.get_label_by_id('100').get_position() - np.array([0, 0.05]), xytext=(-70,-70),\n             ha='center', textcoords='offset points', bbox=dict(boxstyle='round,pad=0.5', fc='gray', alpha=0.1),\n             arrowprops=dict(arrowstyle='-&gt;', connectionstyle='arc3,rad=0.5',color='gray'))\nplt.show()\n</pre>\n<p>An example with multiple subplots (new in version 0.6):</p>\n<pre>from matplotlib_venn import venn2, venn2_circles\nfigure, axes = plt.subplots(2, 2)\nvenn2(subsets={'10': 1, '01': 1, '11': 1}, set_labels = ('A', 'B'), ax=axes[0][0])\nvenn2_circles((1, 2, 3), ax=axes[0][1])\nvenn3(subsets=(1, 1, 1, 1, 1, 1, 1), set_labels = ('A', 'B', 'C'), ax=axes[1][0])\nvenn3_circles({'001': 10, '100': 20, '010': 21, '110': 13, '011': 14}, ax=axes[1][1])\nplt.show()\n</pre>\n<p>Perhaps the most common use case is generating a Venn diagram given\nthree sets of objects:</p>\n<pre>set1 = set(['A', 'B', 'C', 'D'])\nset2 = set(['B', 'C', 'D', 'E'])\nset3 = set(['C', 'D',' E', 'F', 'G'])\n\nvenn3([set1, set2, set3], ('Set1', 'Set2', 'Set3'))\nplt.show()\n</pre>\n</div>\n<div id=\"questions\">\n<h2>Questions</h2>\n<ul>\n<li>If you ask your questions at <a href=\"http://stackoverflow.com/\" rel=\"nofollow\">StackOverflow</a> and tag them <a href=\"http://stackoverflow.com/questions/tagged/matplotlib-venn\" rel=\"nofollow\">matplotlib-venn</a>, chances are high you\u2019ll get an answer from the maintainer of this package.</li>\n</ul>\n</div>\n<div id=\"see-also\">\n<h2>See also</h2>\n<ul>\n<li><p>Report issues and submit fixes at Github:\n<a href=\"https://github.com/konstantint/matplotlib-venn\" rel=\"nofollow\">https://github.com/konstantint/matplotlib-venn</a></p>\n<p>Check out the <tt><span class=\"pre\">DEVELOPER-README.rst</span></tt> for development-related notes.</p>\n</li>\n<li><p>Some alternative means of plotting a Venn diagram (as of\nOctober 2012) are reviewed in the blog post:\n<a href=\"http://fouryears.eu/2012/10/13/venn-diagrams-in-python/\" rel=\"nofollow\">http://fouryears.eu/2012/10/13/venn-diagrams-in-python/</a></p>\n</li>\n<li><p>The <a href=\"https://pypi.python.org/pypi/matplotlib-subsets\" rel=\"nofollow\">matplotlib-subsets</a> package\nvisualizes a hierarchy of sets as a tree of rectangles.</p>\n</li>\n<li><p>The <a href=\"https://pypi.python.org/pypi/matplotlib_venn_wordcloud\" rel=\"nofollow\">matplotlib_venn_wordcloud</a> package\ncombines Venn diagrams with word clouds for a pretty amazing (and amusing) result.</p>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2754452, "releases": {"0.10": [{"comment_text": "", "digests": {"md5": "94cc52b775858eecc35de9bee111f962", "sha256": "6596cf57503791229205ca12b2562c5f39da50763ed1cceff0596da786be2a37"}, "downloads": -1, "filename": "matplotlib-venn-0.10.zip", "has_sig": false, "md5_digest": "94cc52b775858eecc35de9bee111f962", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38792, "upload_time": "2014-10-14T02:48:40", "upload_time_iso_8601": "2014-10-14T02:48:40.632377Z", "url": "https://files.pythonhosted.org/packages/02/1f/ef4fa8a257dd21df950259ae4cebb9fc414b1baacc2a02798f4c1db176ed/matplotlib-venn-0.10.zip", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "9100680061567a5bb955b5293bcadf9e", "sha256": "a318041248a5d476e16f4923edc12b1a288eddbe5f69e22f2b740f988276a042"}, "downloads": -1, "filename": "matplotlib-venn-0.11.zip", "has_sig": false, "md5_digest": "9100680061567a5bb955b5293bcadf9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38853, "upload_time": "2015-03-13T09:41:59", "upload_time_iso_8601": "2015-03-13T09:41:59.840004Z", "url": "https://files.pythonhosted.org/packages/37/0e/90e89cc66811a02ee9f95d2f35352616118df99e9a18d94ba13bccdb1754/matplotlib-venn-0.11.zip", "yanked": false}], "0.11.1": [{"comment_text": "", "digests": {"md5": "0962cbc5a9bcb91aa8bb0b2a998058c4", "sha256": "0e0ec7deabd92ae62486ba07a81ea7516ae7cc634ecbf69cd27308f006149661"}, "downloads": -1, "filename": "matplotlib-venn-0.11.1.tar.gz", "has_sig": false, "md5_digest": "0962cbc5a9bcb91aa8bb0b2a998058c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28562, "upload_time": "2015-10-23T10:05:38", "upload_time_iso_8601": "2015-10-23T10:05:38.904378Z", "url": "https://files.pythonhosted.org/packages/d2/46/3c299e9e5e1f55c482fe72b8889fac9ac3b46c761997246a914c8d80c0b6/matplotlib-venn-0.11.1.tar.gz", "yanked": false}], "0.11.2": [{"comment_text": "", "digests": {"md5": "35bdb397df8a2d51fe3d6ecc7df11d65", "sha256": "1bf5ef684882ee98e8dc9631eb8ee1e0356185b3e31fe374d94fe14ca9b5df71"}, "downloads": -1, "filename": "matplotlib-venn-0.11.2.zip", "has_sig": false, "md5_digest": "35bdb397df8a2d51fe3d6ecc7df11d65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39248, "upload_time": "2016-02-13T09:35:37", "upload_time_iso_8601": "2016-02-13T09:35:37.668934Z", "url": "https://files.pythonhosted.org/packages/4b/dd/a1dacf2fb83a31c86f6cfcc26f14ec066c7402dd6bd7c84b06ab1002bae3/matplotlib-venn-0.11.2.zip", "yanked": false}], "0.11.3": [{"comment_text": "", "digests": {"md5": "774420a8aab44496ddb0007d3f872db6", "sha256": "a8726dd93651fd771e9290e534148a6fb876f4600e28ef96c36dd64fb7e2709c"}, "downloads": -1, "filename": "matplotlib-venn-0.11.3.zip", "has_sig": false, "md5_digest": "774420a8aab44496ddb0007d3f872db6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39669, "upload_time": "2016-04-07T23:28:42", "upload_time_iso_8601": "2016-04-07T23:28:42.440167Z", "url": "https://files.pythonhosted.org/packages/30/e6/a7b3bf8001e35944a1057eaa75524e49a9d24d4a32519ad7c49267dec010/matplotlib-venn-0.11.3.zip", "yanked": false}], "0.11.4": [{"comment_text": "", "digests": {"md5": "55264984346687371e446b1f8d27a420", "sha256": "707d66f923f4c75370c78193b80cc2bd7e417ab149d0373d64d677cc4813f391"}, "downloads": -1, "filename": "matplotlib-venn-0.11.4.zip", "has_sig": false, "md5_digest": "55264984346687371e446b1f8d27a420", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40250, "upload_time": "2016-05-25T14:16:01", "upload_time_iso_8601": "2016-05-25T14:16:01.009893Z", "url": "https://files.pythonhosted.org/packages/67/f7/2c8ecd995bbdfc8c112f6a966b453a1e002327566c46e0951082e3e71262/matplotlib-venn-0.11.4.zip", "yanked": false}], "0.11.5": [{"comment_text": "", "digests": {"md5": "7c2f2baad242388147988f054023568e", "sha256": "be017a6821bce410db3314099649f1a0fcf4c0fbf7be0c1190b102187988838f"}, "downloads": -1, "filename": "matplotlib-venn-0.11.5.zip", "has_sig": false, "md5_digest": "7c2f2baad242388147988f054023568e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40403, "upload_time": "2017-01-14T13:59:34", "upload_time_iso_8601": "2017-01-14T13:59:34.286341Z", "url": "https://files.pythonhosted.org/packages/c7/05/e084c8331ff7ab8b0e01c7cdb7c18854852340bf3096193510c902ffa1f1/matplotlib-venn-0.11.5.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "65c55732e0d0c1deba9d7408aeba8bc2", "sha256": "c7fa96c264765f88c255dd34c2af0d7f5c6fb8685ea219eb2886aba4b2c3a0d9"}, "downloads": -1, "filename": "matplotlib-venn-0.2.zip", "has_sig": false, "md5_digest": "65c55732e0d0c1deba9d7408aeba8bc2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24108, "upload_time": "2012-10-12T22:15:10", "upload_time_iso_8601": "2012-10-12T22:15:10.045956Z", "url": "https://files.pythonhosted.org/packages/08/a6/c312c5df7698fa66ed480f3f4a2797b031128b5c074b6225e7fa9eaf1d7e/matplotlib-venn-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "48eab4948dd3764da1bf702fa75e323f", "sha256": "3b5822a48a105620626bf4be38ecd3d2cf726f5fc50869d9ebb64daaed7f39f6"}, "downloads": -1, "filename": "matplotlib-venn-0.3.zip", "has_sig": false, "md5_digest": "48eab4948dd3764da1bf702fa75e323f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24270, "upload_time": "2012-10-20T20:49:39", "upload_time_iso_8601": "2012-10-20T20:49:39.622093Z", "url": "https://files.pythonhosted.org/packages/dc/19/71a893aeeeb43c4b401560fd37f1467e4cfbd11c06ee740cb2699b13b541/matplotlib-venn-0.3.zip", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "5a51c5f8aa14851aeb842e895d944a3a", "sha256": "615e5df8e55315aae02a1a3a9a2b693c3720f8b7d32e30b7fe4e787cbdc8e2b5"}, "downloads": -1, "filename": "matplotlib-venn-0.4.zip", "has_sig": false, "md5_digest": "5a51c5f8aa14851aeb842e895d944a3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24664, "upload_time": "2012-11-28T13:21:49", "upload_time_iso_8601": "2012-11-28T13:21:49.889615Z", "url": "https://files.pythonhosted.org/packages/e2/dc/91a99b23368860af1e5f8a4ada57bbc61d66f6c21a8fc82c96f167e27c7b/matplotlib-venn-0.4.zip", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "c18d05f0ad7579df7c57177fc8542624", "sha256": "443f3344a9f52edddf2b9a48342497bed53fbc28d7ede4b4e35fe46d3c1ef89e"}, "downloads": -1, "filename": "matplotlib-venn-0.5.zip", "has_sig": false, "md5_digest": "c18d05f0ad7579df7c57177fc8542624", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24791, "upload_time": "2013-01-20T23:40:50", "upload_time_iso_8601": "2013-01-20T23:40:50.797378Z", "url": "https://files.pythonhosted.org/packages/a7/30/5a2b4f117edfd5308dedd5f5952d8e69795b81a735b64c72ba9612c258e1/matplotlib-venn-0.5.zip", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "475ece58f000a31d15a4fb4da682602e", "sha256": "2cf2800865bc9ccfd9c058b0c40ecc8a4eb30a39d1ffe17635f26adb999ebc61"}, "downloads": -1, "filename": "matplotlib-venn-0.6.zip", "has_sig": false, "md5_digest": "475ece58f000a31d15a4fb4da682602e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25854, "upload_time": "2013-06-17T10:35:27", "upload_time_iso_8601": "2013-06-17T10:35:27.498675Z", "url": "https://files.pythonhosted.org/packages/6d/a3/e6447d987769188833361e68339e53307fbe50a8936221a706181946f395/matplotlib-venn-0.6.zip", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "fa3e754b2e76d965664d6127dbae9c47", "sha256": "7a2d29ba50956052a19de749afbddbd341ffa13b1cfdd7afb5563b4c14538ed3"}, "downloads": -1, "filename": "matplotlib-venn-0.7.zip", "has_sig": false, "md5_digest": "fa3e754b2e76d965664d6127dbae9c47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27031, "upload_time": "2013-11-16T03:09:06", "upload_time_iso_8601": "2013-11-16T03:09:06.899403Z", "url": "https://files.pythonhosted.org/packages/78/b1/885486e850daae01203d497279798635e2614027adc34cb02de5041a1c22/matplotlib-venn-0.7.zip", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "30b095414983d28077a34b49df32297a", "sha256": "f52fb2a45b4622a7624576f324fd59afc9e7b366b18214df00b324b3ec3fcffe"}, "downloads": -1, "filename": "matplotlib-venn-0.8.zip", "has_sig": false, "md5_digest": "30b095414983d28077a34b49df32297a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27370, "upload_time": "2013-12-05T01:19:55", "upload_time_iso_8601": "2013-12-05T01:19:55.068284Z", "url": "https://files.pythonhosted.org/packages/e9/1e/6883fa8174624ef538bbbb949b654d4992581a8640f6801d19273bf5e356/matplotlib-venn-0.8.zip", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "9145f1a5cb68c592c357feb7a637d7dc", "sha256": "577d3ca2ce0b79988539cf3dad9065a3eeb8221bd1c8e366ab49d614888fc09e"}, "downloads": -1, "filename": "matplotlib-venn-0.9.zip", "has_sig": false, "md5_digest": "9145f1a5cb68c592c357feb7a637d7dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28519, "upload_time": "2014-02-18T21:42:29", "upload_time_iso_8601": "2014-02-18T21:42:29.839611Z", "url": "https://files.pythonhosted.org/packages/0a/a9/c3c77cafc8ec5676be972e5f5e09751a192156a40f779f4c35b94df07dd3/matplotlib-venn-0.9.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7c2f2baad242388147988f054023568e", "sha256": "be017a6821bce410db3314099649f1a0fcf4c0fbf7be0c1190b102187988838f"}, "downloads": -1, "filename": "matplotlib-venn-0.11.5.zip", "has_sig": false, "md5_digest": "7c2f2baad242388147988f054023568e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40403, "upload_time": "2017-01-14T13:59:34", "upload_time_iso_8601": "2017-01-14T13:59:34.286341Z", "url": "https://files.pythonhosted.org/packages/c7/05/e084c8331ff7ab8b0e01c7cdb7c18854852340bf3096193510c902ffa1f1/matplotlib-venn-0.11.5.zip", "yanked": false}], "timestamp": "Fri May  8 00:57:17 2020"}