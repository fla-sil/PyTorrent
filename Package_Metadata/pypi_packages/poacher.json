{"info": {"author": "Erik Nyquist", "author_email": "eknyquist@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "Poacher\n=======\n\nPoacher polls github.com for newly created repositories, allowing you to obtain\nthe URLs (or any other information provided by the Github API) for all new\npublic repositories as they are created.\n\nInstallation\n------------\n\nInstall using pip:\n\n::\n\n    pip install poacher\n\nDocumentation\n-------------\n\nFull documentation for poacher Python API is here `<https://poacher.readthedocs.io>`_\n\nWhy?\n----\n\nFor fun. It's not something the Github API explicitly provides, and it's a bit\nof a hack.\n\nHow does it work?\n-----------------\n\nThe Github API only allows you to fetch information about a specific repository\nby passing the repository ID, or of course the repository URL, however we're\ninterested in the ID in this case. There's nothing really special about the\nrepo ID, it's just a number that gets incremented each time a repo is created.\nSo the first ever repo has the ID \"1\", and the 4,000th repo has the ID \"4000\",\netc.\n\n|\n\nThis means we can determine the latest repo ID with a little brute force.\nRequests for a non-existent ID (or a private repo that your account cannot\naccess) will fail, so with a simple binary search we can determine the highest\nrepo ID currently in use, with a fairly small number of steps. Once we have this\nreference point, we can poll continuously for the next repo ID to be in use, and\nin this way \"watch\" the stream of new repos as they are being created.\n\nCasual command-line usage\n-------------------------\n\nAn example command-line program using poacher, ``poacher-monitor`` is provided\nwith this package. ``poacher-monitor`` will print the clone URLs of new public\nrepositories on github.com as they are created. Basic usage looks like this;\n\n::\n\n    $> poacher-monitor\n\n    Github username: eriknyquist\n    Github password:\n\n    https://github.com/chungbinkley/ch09-builderimage.git\n    https://github.com/zhonghuihuo/JavaCardAppletBasics.git\n    https://github.com/hlp2002/BaiduyunSpider.git\n    https://github.com/Alex-X-W/Misc-Projects.git\n    https://github.com/haimli/javacsv.git\n    https://github.com/NazarMykhailechko/crm_corporate.git\n    https://github.com/DEVHARAM/blockchain.git\n    https://github.com/meitesi/get-docker.git\n    https://github.com/criverso/Resumeportfolio.git\n    https://github.com/macman178/binance-api-node.git\n\nOr, pass your username and password as arguments instead:\n\n::\n\n    $> poacher-monitor -u github-username -p github-password\n\n``poacher-monitor`` has several command-line options. To see a full\ndescription of all options, run ``poacher-monitor -h``", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/eriknyquist/GithubPoacher", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "poacher", "package_url": "https://pypi.org/project/poacher/", "platform": "", "project_url": "https://pypi.org/project/poacher/", "project_urls": {"Homepage": "http://github.com/eriknyquist/GithubPoacher"}, "release_url": "https://pypi.org/project/poacher/0.2/", "requires_dist": null, "requires_python": "", "summary": "Watches github.com for new public repositories", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Poacher polls github.com for newly created repositories, allowing you to obtain\nthe URLs (or any other information provided by the Github API) for all new\npublic repositories as they are created.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using pip:</p>\n<pre>pip install poacher\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Full documentation for poacher Python API is here <a href=\"https://poacher.readthedocs.io\" rel=\"nofollow\">https://poacher.readthedocs.io</a></p>\n</div>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>For fun. It\u2019s not something the Github API explicitly provides, and it\u2019s a bit\nof a hack.</p>\n</div>\n<div id=\"how-does-it-work\">\n<h2>How does it work?</h2>\n<p>The Github API only allows you to fetch information about a specific repository\nby passing the repository ID, or of course the repository URL, however we\u2019re\ninterested in the ID in this case. There\u2019s nothing really special about the\nrepo ID, it\u2019s just a number that gets incremented each time a repo is created.\nSo the first ever repo has the ID \u201c1\u201d, and the 4,000th repo has the ID \u201c4000\u201d,\netc.</p>\n<div>\n<div><br></div>\n</div>\n<p>This means we can determine the latest repo ID with a little brute force.\nRequests for a non-existent ID (or a private repo that your account cannot\naccess) will fail, so with a simple binary search we can determine the highest\nrepo ID currently in use, with a fairly small number of steps. Once we have this\nreference point, we can poll continuously for the next repo ID to be in use, and\nin this way \u201cwatch\u201d the stream of new repos as they are being created.</p>\n</div>\n<div id=\"casual-command-line-usage\">\n<h2>Casual command-line usage</h2>\n<p>An example command-line program using poacher, <tt><span class=\"pre\">poacher-monitor</span></tt> is provided\nwith this package. <tt><span class=\"pre\">poacher-monitor</span></tt> will print the clone URLs of new public\nrepositories on github.com as they are created. Basic usage looks like this;</p>\n<pre>$&gt; poacher-monitor\n\nGithub username: eriknyquist\nGithub password:\n\nhttps://github.com/chungbinkley/ch09-builderimage.git\nhttps://github.com/zhonghuihuo/JavaCardAppletBasics.git\nhttps://github.com/hlp2002/BaiduyunSpider.git\nhttps://github.com/Alex-X-W/Misc-Projects.git\nhttps://github.com/haimli/javacsv.git\nhttps://github.com/NazarMykhailechko/crm_corporate.git\nhttps://github.com/DEVHARAM/blockchain.git\nhttps://github.com/meitesi/get-docker.git\nhttps://github.com/criverso/Resumeportfolio.git\nhttps://github.com/macman178/binance-api-node.git\n</pre>\n<p>Or, pass your username and password as arguments instead:</p>\n<pre>$&gt; poacher-monitor -u github-username -p github-password\n</pre>\n<p><tt><span class=\"pre\">poacher-monitor</span></tt> has several command-line options. To see a full\ndescription of all options, run <tt><span class=\"pre\">poacher-monitor</span> <span class=\"pre\">-h</span></tt></p>\n</div>\n\n          </div>"}, "last_serial": 4162137, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7387e277de2635600893e43e200d54bf", "sha256": "e4f003757d3053e0f2326bdd4e69140023043cfa69100d19005ce26a1d3e17dc"}, "downloads": -1, "filename": "poacher-0.1-py2.7.egg", "has_sig": false, "md5_digest": "7387e277de2635600893e43e200d54bf", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 7362, "upload_time": "2018-08-12T17:48:15", "upload_time_iso_8601": "2018-08-12T17:48:15.066274Z", "url": "https://files.pythonhosted.org/packages/93/c5/3f7e547939160c99623c049878c813ffdf6cc2f5df83075c491671abbe34/poacher-0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "02131528bab7fd6c31b21f5f335c056e", "sha256": "e74f770dfb9fa09e8b7ccdfa4c65a5745fee9b3099ce3e000a6665f95d660731"}, "downloads": -1, "filename": "poacher-0.1.tar.gz", "has_sig": false, "md5_digest": "02131528bab7fd6c31b21f5f335c056e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4552, "upload_time": "2018-08-09T06:00:33", "upload_time_iso_8601": "2018-08-09T06:00:33.065638Z", "url": "https://files.pythonhosted.org/packages/30/2e/20a4be95e2070911e1d508de74e829547a064b272d4c9103960fbeb8145b/poacher-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "371af88a5b3be95a213dd3a4fa74e393", "sha256": "5753e414e5ff6175843d4a5387c387b5feffab1398cf180bac52bb9b8d5047aa"}, "downloads": -1, "filename": "poacher-0.2.tar.gz", "has_sig": false, "md5_digest": "371af88a5b3be95a213dd3a4fa74e393", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5009, "upload_time": "2018-08-12T17:54:16", "upload_time_iso_8601": "2018-08-12T17:54:16.063811Z", "url": "https://files.pythonhosted.org/packages/1d/d9/62b02a73d12e4dcd3db52b0e9ca17b40c0a5a55071e47a7482c296b37e9c/poacher-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "371af88a5b3be95a213dd3a4fa74e393", "sha256": "5753e414e5ff6175843d4a5387c387b5feffab1398cf180bac52bb9b8d5047aa"}, "downloads": -1, "filename": "poacher-0.2.tar.gz", "has_sig": false, "md5_digest": "371af88a5b3be95a213dd3a4fa74e393", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5009, "upload_time": "2018-08-12T17:54:16", "upload_time_iso_8601": "2018-08-12T17:54:16.063811Z", "url": "https://files.pythonhosted.org/packages/1d/d9/62b02a73d12e4dcd3db52b0e9ca17b40c0a5a55071e47a7482c296b37e9c/poacher-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:12 2020"}