{"info": {"author": "Connexions", "author_email": "info@cnx.org", "bugtrack_url": null, "classifiers": [], "description": "DB Migrator\n===========\n\n.. image:: https://travis-ci.org/karenc/db-migrator.svg?branch=master\n   :target: https://travis-ci.org/karenc/db-migrator\n\n.. image:: https://coveralls.io/repos/github/karenc/db-migrator/badge.svg?branch=master\n   :target: https://coveralls.io/github/karenc/db-migrator?branch=master\n\nSettings\n--------\n\n``dbmigrator`` requires a few settings to work:\n\n - ``--migrations-directory``: the directory that contains all the migrations\n - ``--context``: name of the python package containing an entry point to the\n   migrations directory\n - ``--db-connection-string``: database host, port, name, user, password etc\n   for connecting to postgres\n - ``--config``: a config file that contains the above settings\n\nSee ``dbmigrator -h``.\n\nTo set the migrations directory using an entry point, in mymodule ``setup.py``::\n\n    setup(\n        ...\n        entry_points={\n            'dbmigrator': [\n                'migrations_directory = mymodule.main:migrations_directory',\n                ],\n            },\n        )\n\n**Important note**: For the settings from ``setup.py`` to be picked up, before\nrunning ``dbmigrator``, first run ``python setup.py develop`` or\n``python setup.py install``.\n\nThen in ``mymodule/main.py``::\n\n    import os\n\n    migrations_directory = '{}/sql/migrations'.format(\n        os.path.abspath(os.path.dirname(__file__)))\n\nor::\n\n    import os\n\n    def migrations_directory():\n        return '{}/sql/migrations'.format(\n            os.path.abspath(os.path.dirname(__file__)))\n\nor with a config file, ``development.ini``, that looks like this::\n\n    [app:main]\n    db-connection-string = postgres://dbuser@localhost/dbname\n\n\ngenerate\n--------\n\nGenerate a migration script in the migrations directory.\n\nExample usage::\n\n    dbmigrator generate add_id_to_users\n\ngenerates a file called ``migrations/20151217170514_add_id_to_users.py``\nwith content::\n\n    # Uncomment should_run if this is a repeat migration\n    # def should_run(cursor):\n    #     # TODO return True if migration should run\n\n\n    def up(cursor):\n        # TODO migration code\n        pass\n\n\n    def down(cursor):\n        # TODO rollback code\n        pass\n\n\ninit\n----\n\nInitialize schema migrations table.  By default, all the migrations are assumed\nto have been applied to the database.\n\nExample usage::\n\n    dbmigrator --db-connection-string='postgres://dbuser@localhost/dbname' init\n\nThere is an option to manually set the version of the database.  For example,\nif none of the migrations have been applied to the database, you can::\n\n    dbmigrator --config=development.ini init --version=0\n\n\nlist\n----\n\nList migration versions, names, whether it has been applied and the date\napplied.\n\nExample usage::\n\n    $ dbmigrator --config=development.ini list\n    version        | name            | is applied | date applied\n    ----------------------------------------------------------------------\n    20151217170514   add_id_to_users   True         2016-01-31 00:15:01.692570+01:00\n    20151218145832   add_karen_to_us   False*              \n    20160107200351   blah              deferred            \n\nA `*` in the \"is applied\" column means that the migration is a repeated\nmigration.\n\nTo see the full migration name, use ``--wide``::\n\n    $ dbmigrator --config=development.ini list --wide\n    version        | name               | is applied | date applied\n    ----------------------------------------------------------------------\n    20151217170514   add_id_to_users      True         2016-01-31 00:15:01.692570+01:00\n    20151218145832   add_karen_to_users   False*              \n    20160107200351   blah                 deferred            \n\n\nmigrate\n-------\n\nRun pending migrations.\n\nFor example, with two migrations in the migrations directory,\n\n``migrations/20151217170514_add_id_to_users.py``::\n\n    from dbmigrator import super_user\n\n    def up(cursor):\n        # TODO migration code\n        pass\n\n        # if a super user database connection is needed\n        with super_user() as super_cursor:\n            pass\n\n    def down(cursor):\n        # TODO rollback code\n        pass\n\nand\n\n``migrations/20151218145832_add_karen_to_users.py``::\n\n    def up(cursor):\n        cursor.execute('ALTER TABLE users ADD COLUMN karen TEXT')\n\n    def down(cursor):\n        cursor.execute('ALTER TABLE users DROP COLUMN karen')\n\nTo run the migrations::\n\n    $ dbmigrator migrate\n    Running migration 20151217170514 add_id_to_users\n\n    Running migration 20151218145832 add_karen_to_users\n    ---\n    +++\n    @@ -4005,21 +4005,22 @@\n         first_name text,\n         firstname text,\n         last_name text,\n         surname text,\n         full_name text,\n         fullname text,\n         suffix text,\n         title text,\n         email text,\n         website text,\n    -    is_moderated boolean\n    +    is_moderated boolean,\n    +    karen text\n     );\n\n     ALTER TABLE public.users OWNER TO rhaptos;\n\n     --\n     -- Name: abstractid; Type: DEFAULT; Schema: public; Owner: rhaptos\n     --\n\n     ALTER TABLE ONLY abstracts ALTER COLUMN abstractid SET DEFAULT nextval('abstracts_abstractid_seq'::regclass);\n\nor to run migrations up to a specific version::\n\n    $ dbmigrator migrate version=20151217170514\n    Running migration 20151217170514 add_id_to_users\n\nif all migrations have already been run::\n\n    $ dbmigrator migrate\n    No pending migrations.  Database is up to date.\n\nTo write a repeat migration, make sure your migration has ``should_run`` defined::\n\n    def should_run(cursor):\n        return os.path.exists('data.txt')\n\n\n    def up(cursor):\n        with open('data.txt') as f:\n            data = f.read()\n        cursor.execute('INSERT INTO table VALUES (%s)', (data,))\n\n\n    def down(cursor):\n        pass\n\nThe above migration will run **every time** ``migrate`` is called, except if it\nis marked as \"deferred\".  ``up`` is run if ``should_run`` returns True.\n\nTo write a deferred migration, add ``@deferred`` to the up function::\n\n    from dbmigrator import deferred\n\n\n    @deferred\n    def up(cursor):\n        # this migration is automatically deferred\n\nThe above migration will not run unless you use ``migrate --run-deferred``.\n\nrollback\n--------\n\nRollback a migration.\n\nFor example, with two migrations in the migrations directory,\n\n``migrations/20151217170514_add_id_to_users.py``::\n\n    def up(cursor):\n        # TODO migration code\n        pass\n\n    def down(cursor):\n        # TODO rollback code\n        pass\n\nand\n\n``migrations/20151218145832_add_karen_to_users.py``::\n\n    def up(cursor):\n        cursor.execute('ALTER TABLE users ADD COLUMN karen TEXT')\n\n    def down(cursor):\n        cursor.execute('ALTER TABLE users DROP COLUMN karen')\n\nMake sure the database is up to date::\n\n    $ dbmigrator migrate\n    No pending migrations.  Database is up to date.\n\nNow rollback the last migration::\n\n    $ dbmigrator rollback\n    Rolling back migration 20151218145832 add_karen_to_users\n    ---\n    +++\n    @@ -4005,22 +4005,21 @@\n         first_name text,\n         firstname text,\n         last_name text,\n         surname text,\n         full_name text,\n         fullname text,\n         suffix text,\n         title text,\n         email text,\n         website text,\n    -    is_moderated boolean,\n    -    karen text\n    +    is_moderated boolean\n     );\n\n     ALTER TABLE public.users OWNER TO rhaptos;\n\n     --\n     -- Name: abstractid; Type: DEFAULT; Schema: public; Owner: rhaptos\n     --\n\n     ALTER TABLE ONLY abstracts ALTER COLUMN abstractid SET DEFAULT nextval('abstracts_abstractid_seq'::regclass);\n\nTo rollback the last 2 migrations::\n\n    $ dbmigrator rollback --steps=2\n    Rolling back migration 20151218145832 add_karen_to_users\n    ---\n    +++\n    @@ -4005,22 +4005,21 @@\n         first_name text,\n         firstname text,\n         last_name text,\n         surname text,\n         full_name text,\n         fullname text,\n         suffix text,\n         title text,\n         email text,\n         website text,\n    -    is_moderated boolean,\n    -    karen text\n    +    is_moderated boolean\n     );\n\n     ALTER TABLE public.users OWNER TO rhaptos;\n\n     --\n     -- Name: abstractid; Type: DEFAULT; Schema: public; Owner: rhaptos\n     --\n\n     ALTER TABLE ONLY abstracts ALTER COLUMN abstractid SET DEFAULT nextval('abstracts_abstractid_seq'::regclass);\n\n    Rolling back migration 20151217170514 add_id_to_users\n\nmark\n----\n\nMark a migration as completed, not completed or deferred.\n\nExample usage::\n\n    $ dbmigrator --config=development.ini --migrations-directory=migrations/ list\n    name                      | is applied | date applied\n    ----------------------------------------------------------------------\n    20151217170514_add_id_to_   True         2016-01-31 00:15:01.692570+01:00\n    20151218145832_add_karen_   False               \n    20160107200351_blah         False               \n\nTo mark a migration as not completed::\n\n    $ dbmigrator --config=development.ini --migrations-directory=migrations/ mark -f 20151217170514\n    Migration 20151217170514 marked as not been run\n\n    $ dbmigrator --config=development.ini --migrations-directory=migrations/ list\n    name                      | is applied | date applied\n    ----------------------------------------------------------------------\n    20151217170514_add_id_to_   False               \n    20151218145832_add_karen_   False               \n    20160107200351_blah         False               \n\nTo mark a migration as completed::\n\n    $ dbmigrator --config=development.ini --migrations-directory=migrations/ mark -f 20151217170514\n    Migration 20151217170514 marked as completed\n\n    $ dbmigrator --config=development.ini --migrations-directory=migrations/ list\n    name                      | is applied | date applied\n    ----------------------------------------------------------------------\n    20151217170514_add_id_to_   True         2016-06-13 16:39:58.777893+01:00\n    20151218145832_add_karen_   False               \n    20160107200351_blah         False               \n\nTo mark a migration as deferred means to ignore a migration when running ``migrate`` or ``rollback``::\n\n    $ dbmigrator --config=development.ini --migrations-directory=migrations/ mark -d 20151217170514\n    Migration 20151217170514 marked as deferred\n\n    $ dbmigrator --config=development.ini --migrations-directory=migrations/ list\n    name                      | is applied | date applied\n    ----------------------------------------------------------------------\n    20151217170514_add_id_to_   deferred     None\n    20151218145832_add_karen_   False               \n    20160107200351_blah         False               \n\n\n~~~~\n\nCHANGELOG\n---------\n\n1.1.0 (2018-01-03)\n------------------\n\n- Add db-config-ini-key to CLI options\n- Add ``--sort`` (version or applied) to ``dbmigrator list``\n- Allow mark to accept multiple timestamps\n- Set dbmigrator settings before running utils tests\n- Add quiet switch\n- Add tests for no migrations to rollback\n- Convert most output to logging\n- Explicitly close all postgres db connections\n\n1.0.2 (2017-09-25)\n------------------\n\n- create a savepoint around should_run - rollback on false, to restore db state\n- Add ``__version__`` to dbmigrator\n\n1.0.1 (2017-09-14)\n------------------\n\n- Update minimum version of psycopg2 required\n\n1.0.0 (2017-08-24)\n------------------\n\n- Add \"*\" to indicate repeated migrations in ``list``\n- Raise SystemExit when ``mark`` migration not found\n- Add deferred migrations\n- Add repeat conditional migrations\n- Change print statement to logger.debug\n- Reduce noise in tests when installing test packages\n- Add CLI test for rollback\n- Add CLI test for migrate\n- Add super user database connections\n- Move logger from __init__.py to utils.py\n- Change python 3.4 to 3.5 in .travis.yml\n\n0.2.0 (2016-06-24)\n------------------\n\n- Add psycopg2 wait callback so ctrl-c stops a migration\n- Implement mark a migration as deferred: ``mark -d``\n- Add --wide option for ``list`` to display the full migration name\n- Update command usage in README\n- Add help message to dbmigrator commands\n- Warn user with ``dbmigrator init --help`` if schema migrations doesn't exist\n- Add CLI test for generating migrations\n\n0.1.4 (2016-05-12)\n------------------\n - Change ``dbmigrator list`` to list version and migration name separately\n\n0.1.3 (2016-04-19)\n------------------\n\n - Separate cli tests into different test cases\n - Change test config to use the travis database\n - Change logger.warn to logger.warning\n - Add test case for cli verbose option\n - Add tests for ``dbmigrator list``\n - Add CLI init test case for multiple contexts\n - Add travis and coveralls badges to README\n - Move cli.main import to base test case\n - Refactor code for marking a migration as completed or not\n - Add ``mark`` command for marking a migration as completed or not\n - Add tests for the ``mark`` command\n - Update README with example usage for the ``mark`` command\n\n0.1.2 (2016-03-18)\n------------------\n\n - :bug: Fix ``list`` to not explode when no migrations directories are given\n - Log warning message for ``list`` if schema_migrations table doesn't exist\n - Change ``--verbose`` to set the logger level to debug\n - Add test for utils.timestamp\n - Add test for utils.rollback_migration\n - Add test for utils.run_migration\n - Add test for utils.get_pending_migrations\n - Add test for utils.get_migrations\n - Add test for utils.import_migration\n - Make ``dbmigrator generate`` generate pep8 compliant code\n - Fix ``dbmigrator generate`` migrations directory lookup\n - Add test for utils.with_cursor\n - Add test for utils.get_settings_from_config\n - Add integration tests with test packages\n - Add pep8 to travis\n - Add a logger for dbmigrator that writes to stdout\n - Change version information option to ``-V``\n - Sort migrations by their filename, not the full path\n\n0.1.1 (2016-02-24)\n------------------\n\n - Stop changing schema_migrations data if the table already exists\n - Rewrite ``--version`` to use argparse version action\n - Add unit test for ``--version``\n - Add travis CI configuration file\n - Fix default context (working directory) being a string instead of a list\n\n0.1.0 (2016-02-12)\n------------------\n\n - Allow multiple migrations directories / context to be specified\n - Add --verbose which prints the configuration used by dbmigrator\n - Use datetime ``utcnow`` instead of ``now`` for timestamps\n - Add ``--version`` to show the version of db-migrator installed\n\n0.0.7 (2016-02-10)\n------------------\n\n - Add option ``--context`` to dbmigrator in order to load entry points\n - Raise error if config file is specified but not found\n\n0.0.6 (2016-02-08)\n------------------\n\n - Fix missing migrations directory the \"init\" command\n\n0.0.5 (2016-02-08)\n------------------\n\n - Include CHANGELOG in distribution's manifest\n\n0.0.4 (2016-02-08)\n------------------\n\n - Show warning message instead of error if migrations directory is undefined\n - Add CHANGELOG\n\n0.0.3 (2016-02-08)\n------------------\n\n - Return error if migrations directory is undefined\n\n0.0.2 (2016-02-03)\n------------------\n\n - Fix invalid rst in README\n - Update setup.py description and long_description\n - Update setup.py to include README as the description and fix url\n - Update README and cli after removing default value for config file\n - Remove default config path (development.ini)\n - Add dbmigrator list command\n - Fix dbmigrator rollback to stop if there are no migrations to rollback\n - Print message after initializing schema migrations\n - Add note to run ``python setup.py install`` if using entry points\n - Add migrations directory setting from setup.py entry point in README\n - Update command names for init and generate in README\n - Get settings from setup.py entry points\n - Remove __init__.py generation in migrations directory\n - Add option version to dbmigrator init for setting the initial version\n - Rename \"generate_migration\" command to \"generate\"\n - Rename \"init_schema_migrations\" command to \"init\"\n - Change the way migrations are imported so it works in python2\n - Add \"applied\" timestamp to schema migrations table\n - Add ``# -*- coding: utf-8 -*-`` to the top of generated migration files\n - Add README\n - Add command \"rollback\" to rollback migrations\n - Add command \"migrate\" to run pending migrations\n - Add migrations to table when running init_schema_migrations\n - Add command for creating the schema migrations table\n - Create dbmigrator cli and \"generate_migration\" command\n - Create dbmigrator python package\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/karenc/db-migrator", "keywords": "", "license": "AGPL, see also LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "db-migrator", "package_url": "https://pypi.org/project/db-migrator/", "platform": "", "project_url": "https://pypi.org/project/db-migrator/", "project_urls": {"Homepage": "https://github.com/karenc/db-migrator"}, "release_url": "https://pypi.org/project/db-migrator/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Python package to migrate postgresql database", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/karenc/db-migrator\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/karenc/db-migrator.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/614f60c9ac60fd51ae2a967ba94ce87179f71736/68747470733a2f2f7472617669732d63692e6f72672f6b6172656e632f64622d6d69677261746f722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/karenc/db-migrator?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/karenc/db-migrator/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/531cc4900c6797783141a1f0a1f8447af9f019f1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6b6172656e632f64622d6d69677261746f722f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p><tt>dbmigrator</tt> requires a few settings to work:</p>\n<blockquote>\n<ul>\n<li><tt><span class=\"pre\">--migrations-directory</span></tt>: the directory that contains all the migrations</li>\n<li><tt><span class=\"pre\">--context</span></tt>: name of the python package containing an entry point to the\nmigrations directory</li>\n<li><tt><span class=\"pre\">--db-connection-string</span></tt>: database host, port, name, user, password etc\nfor connecting to postgres</li>\n<li><tt><span class=\"pre\">--config</span></tt>: a config file that contains the above settings</li>\n</ul>\n</blockquote>\n<p>See <tt>dbmigrator <span class=\"pre\">-h</span></tt>.</p>\n<p>To set the migrations directory using an entry point, in mymodule <tt>setup.py</tt>:</p>\n<pre>setup(\n    ...\n    entry_points={\n        'dbmigrator': [\n            'migrations_directory = mymodule.main:migrations_directory',\n            ],\n        },\n    )\n</pre>\n<p><strong>Important note</strong>: For the settings from <tt>setup.py</tt> to be picked up, before\nrunning <tt>dbmigrator</tt>, first run <tt>python setup.py develop</tt> or\n<tt>python setup.py install</tt>.</p>\n<p>Then in <tt>mymodule/main.py</tt>:</p>\n<pre>import os\n\nmigrations_directory = '{}/sql/migrations'.format(\n    os.path.abspath(os.path.dirname(__file__)))\n</pre>\n<p>or:</p>\n<pre>import os\n\ndef migrations_directory():\n    return '{}/sql/migrations'.format(\n        os.path.abspath(os.path.dirname(__file__)))\n</pre>\n<p>or with a config file, <tt>development.ini</tt>, that looks like this:</p>\n<pre>[app:main]\ndb-connection-string = postgres://dbuser@localhost/dbname\n</pre>\n</div>\n<div id=\"generate\">\n<h2>generate</h2>\n<p>Generate a migration script in the migrations directory.</p>\n<p>Example usage:</p>\n<pre>dbmigrator generate add_id_to_users\n</pre>\n<p>generates a file called <tt>migrations/20151217170514_add_id_to_users.py</tt>\nwith content:</p>\n<pre># Uncomment should_run if this is a repeat migration\n# def should_run(cursor):\n#     # TODO return True if migration should run\n\n\ndef up(cursor):\n    # TODO migration code\n    pass\n\n\ndef down(cursor):\n    # TODO rollback code\n    pass\n</pre>\n</div>\n<div id=\"init\">\n<h2>init</h2>\n<p>Initialize schema migrations table.  By default, all the migrations are assumed\nto have been applied to the database.</p>\n<p>Example usage:</p>\n<pre>dbmigrator --db-connection-string='postgres://dbuser@localhost/dbname' init\n</pre>\n<p>There is an option to manually set the version of the database.  For example,\nif none of the migrations have been applied to the database, you can:</p>\n<pre>dbmigrator --config=development.ini init --version=0\n</pre>\n</div>\n<div id=\"list\">\n<h2>list</h2>\n<p>List migration versions, names, whether it has been applied and the date\napplied.</p>\n<p>Example usage:</p>\n<pre>$ dbmigrator --config=development.ini list\nversion        | name            | is applied | date applied\n----------------------------------------------------------------------\n20151217170514   add_id_to_users   True         2016-01-31 00:15:01.692570+01:00\n20151218145832   add_karen_to_us   False*\n20160107200351   blah              deferred\n</pre>\n<p>A <cite>*</cite> in the \u201cis applied\u201d column means that the migration is a repeated\nmigration.</p>\n<p>To see the full migration name, use <tt><span class=\"pre\">--wide</span></tt>:</p>\n<pre>$ dbmigrator --config=development.ini list --wide\nversion        | name               | is applied | date applied\n----------------------------------------------------------------------\n20151217170514   add_id_to_users      True         2016-01-31 00:15:01.692570+01:00\n20151218145832   add_karen_to_users   False*\n20160107200351   blah                 deferred\n</pre>\n</div>\n<div id=\"migrate\">\n<h2>migrate</h2>\n<p>Run pending migrations.</p>\n<p>For example, with two migrations in the migrations directory,</p>\n<p><tt>migrations/20151217170514_add_id_to_users.py</tt>:</p>\n<pre>from dbmigrator import super_user\n\ndef up(cursor):\n    # TODO migration code\n    pass\n\n    # if a super user database connection is needed\n    with super_user() as super_cursor:\n        pass\n\ndef down(cursor):\n    # TODO rollback code\n    pass\n</pre>\n<p>and</p>\n<p><tt>migrations/20151218145832_add_karen_to_users.py</tt>:</p>\n<pre>def up(cursor):\n    cursor.execute('ALTER TABLE users ADD COLUMN karen TEXT')\n\ndef down(cursor):\n    cursor.execute('ALTER TABLE users DROP COLUMN karen')\n</pre>\n<p>To run the migrations:</p>\n<pre>$ dbmigrator migrate\nRunning migration 20151217170514 add_id_to_users\n\nRunning migration 20151218145832 add_karen_to_users\n---\n+++\n@@ -4005,21 +4005,22 @@\n     first_name text,\n     firstname text,\n     last_name text,\n     surname text,\n     full_name text,\n     fullname text,\n     suffix text,\n     title text,\n     email text,\n     website text,\n-    is_moderated boolean\n+    is_moderated boolean,\n+    karen text\n );\n\n ALTER TABLE public.users OWNER TO rhaptos;\n\n --\n -- Name: abstractid; Type: DEFAULT; Schema: public; Owner: rhaptos\n --\n\n ALTER TABLE ONLY abstracts ALTER COLUMN abstractid SET DEFAULT nextval('abstracts_abstractid_seq'::regclass);\n</pre>\n<p>or to run migrations up to a specific version:</p>\n<pre>$ dbmigrator migrate version=20151217170514\nRunning migration 20151217170514 add_id_to_users\n</pre>\n<p>if all migrations have already been run:</p>\n<pre>$ dbmigrator migrate\nNo pending migrations.  Database is up to date.\n</pre>\n<p>To write a repeat migration, make sure your migration has <tt>should_run</tt> defined:</p>\n<pre>def should_run(cursor):\n    return os.path.exists('data.txt')\n\n\ndef up(cursor):\n    with open('data.txt') as f:\n        data = f.read()\n    cursor.execute('INSERT INTO table VALUES (%s)', (data,))\n\n\ndef down(cursor):\n    pass\n</pre>\n<p>The above migration will run <strong>every time</strong> <tt>migrate</tt> is called, except if it\nis marked as \u201cdeferred\u201d.  <tt>up</tt> is run if <tt>should_run</tt> returns True.</p>\n<p>To write a deferred migration, add <tt>@deferred</tt> to the up function:</p>\n<pre>from dbmigrator import deferred\n\n\n@deferred\ndef up(cursor):\n    # this migration is automatically deferred\n</pre>\n<p>The above migration will not run unless you use <tt>migrate <span class=\"pre\">--run-deferred</span></tt>.</p>\n</div>\n<div id=\"rollback\">\n<h2>rollback</h2>\n<p>Rollback a migration.</p>\n<p>For example, with two migrations in the migrations directory,</p>\n<p><tt>migrations/20151217170514_add_id_to_users.py</tt>:</p>\n<pre>def up(cursor):\n    # TODO migration code\n    pass\n\ndef down(cursor):\n    # TODO rollback code\n    pass\n</pre>\n<p>and</p>\n<p><tt>migrations/20151218145832_add_karen_to_users.py</tt>:</p>\n<pre>def up(cursor):\n    cursor.execute('ALTER TABLE users ADD COLUMN karen TEXT')\n\ndef down(cursor):\n    cursor.execute('ALTER TABLE users DROP COLUMN karen')\n</pre>\n<p>Make sure the database is up to date:</p>\n<pre>$ dbmigrator migrate\nNo pending migrations.  Database is up to date.\n</pre>\n<p>Now rollback the last migration:</p>\n<pre>$ dbmigrator rollback\nRolling back migration 20151218145832 add_karen_to_users\n---\n+++\n@@ -4005,22 +4005,21 @@\n     first_name text,\n     firstname text,\n     last_name text,\n     surname text,\n     full_name text,\n     fullname text,\n     suffix text,\n     title text,\n     email text,\n     website text,\n-    is_moderated boolean,\n-    karen text\n+    is_moderated boolean\n );\n\n ALTER TABLE public.users OWNER TO rhaptos;\n\n --\n -- Name: abstractid; Type: DEFAULT; Schema: public; Owner: rhaptos\n --\n\n ALTER TABLE ONLY abstracts ALTER COLUMN abstractid SET DEFAULT nextval('abstracts_abstractid_seq'::regclass);\n</pre>\n<p>To rollback the last 2 migrations:</p>\n<pre>$ dbmigrator rollback --steps=2\nRolling back migration 20151218145832 add_karen_to_users\n---\n+++\n@@ -4005,22 +4005,21 @@\n     first_name text,\n     firstname text,\n     last_name text,\n     surname text,\n     full_name text,\n     fullname text,\n     suffix text,\n     title text,\n     email text,\n     website text,\n-    is_moderated boolean,\n-    karen text\n+    is_moderated boolean\n );\n\n ALTER TABLE public.users OWNER TO rhaptos;\n\n --\n -- Name: abstractid; Type: DEFAULT; Schema: public; Owner: rhaptos\n --\n\n ALTER TABLE ONLY abstracts ALTER COLUMN abstractid SET DEFAULT nextval('abstracts_abstractid_seq'::regclass);\n\nRolling back migration 20151217170514 add_id_to_users\n</pre>\n</div>\n<div id=\"mark\">\n<h2>mark</h2>\n<p>Mark a migration as completed, not completed or deferred.</p>\n<p>Example usage:</p>\n<pre>$ dbmigrator --config=development.ini --migrations-directory=migrations/ list\nname                      | is applied | date applied\n----------------------------------------------------------------------\n20151217170514_add_id_to_   True         2016-01-31 00:15:01.692570+01:00\n20151218145832_add_karen_   False\n20160107200351_blah         False\n</pre>\n<p>To mark a migration as not completed:</p>\n<pre>$ dbmigrator --config=development.ini --migrations-directory=migrations/ mark -f 20151217170514\nMigration 20151217170514 marked as not been run\n\n$ dbmigrator --config=development.ini --migrations-directory=migrations/ list\nname                      | is applied | date applied\n----------------------------------------------------------------------\n20151217170514_add_id_to_   False\n20151218145832_add_karen_   False\n20160107200351_blah         False\n</pre>\n<p>To mark a migration as completed:</p>\n<pre>$ dbmigrator --config=development.ini --migrations-directory=migrations/ mark -f 20151217170514\nMigration 20151217170514 marked as completed\n\n$ dbmigrator --config=development.ini --migrations-directory=migrations/ list\nname                      | is applied | date applied\n----------------------------------------------------------------------\n20151217170514_add_id_to_   True         2016-06-13 16:39:58.777893+01:00\n20151218145832_add_karen_   False\n20160107200351_blah         False\n</pre>\n<p>To mark a migration as deferred means to ignore a migration when running <tt>migrate</tt> or <tt>rollback</tt>:</p>\n<pre>$ dbmigrator --config=development.ini --migrations-directory=migrations/ mark -d 20151217170514\nMigration 20151217170514 marked as deferred\n\n$ dbmigrator --config=development.ini --migrations-directory=migrations/ list\nname                      | is applied | date applied\n----------------------------------------------------------------------\n20151217170514_add_id_to_   deferred     None\n20151218145832_add_karen_   False\n20160107200351_blah         False\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"changelog\">\n<h2>CHANGELOG</h2>\n</div>\n<div id=\"id1\">\n<h2>1.1.0 (2018-01-03)</h2>\n<ul>\n<li>Add db-config-ini-key to CLI options</li>\n<li>Add <tt><span class=\"pre\">--sort</span></tt> (version or applied) to <tt>dbmigrator list</tt></li>\n<li>Allow mark to accept multiple timestamps</li>\n<li>Set dbmigrator settings before running utils tests</li>\n<li>Add quiet switch</li>\n<li>Add tests for no migrations to rollback</li>\n<li>Convert most output to logging</li>\n<li>Explicitly close all postgres db connections</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>1.0.2 (2017-09-25)</h2>\n<ul>\n<li>create a savepoint around should_run - rollback on false, to restore db state</li>\n<li>Add <tt>__version__</tt> to dbmigrator</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>1.0.1 (2017-09-14)</h2>\n<ul>\n<li>Update minimum version of psycopg2 required</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>1.0.0 (2017-08-24)</h2>\n<ul>\n<li>Add \u201c*\u201d to indicate repeated migrations in <tt>list</tt></li>\n<li>Raise SystemExit when <tt>mark</tt> migration not found</li>\n<li>Add deferred migrations</li>\n<li>Add repeat conditional migrations</li>\n<li>Change print statement to logger.debug</li>\n<li>Reduce noise in tests when installing test packages</li>\n<li>Add CLI test for rollback</li>\n<li>Add CLI test for migrate</li>\n<li>Add super user database connections</li>\n<li>Move logger from __init__.py to utils.py</li>\n<li>Change python 3.4 to 3.5 in .travis.yml</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h2>0.2.0 (2016-06-24)</h2>\n<ul>\n<li>Add psycopg2 wait callback so ctrl-c stops a migration</li>\n<li>Implement mark a migration as deferred: <tt>mark <span class=\"pre\">-d</span></tt></li>\n<li>Add \u2013wide option for <tt>list</tt> to display the full migration name</li>\n<li>Update command usage in README</li>\n<li>Add help message to dbmigrator commands</li>\n<li>Warn user with <tt>dbmigrator init <span class=\"pre\">--help</span></tt> if schema migrations doesn\u2019t exist</li>\n<li>Add CLI test for generating migrations</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h2>0.1.4 (2016-05-12)</h2>\n<blockquote>\n<ul>\n<li>Change <tt>dbmigrator list</tt> to list version and migration name separately</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id7\">\n<h2>0.1.3 (2016-04-19)</h2>\n<blockquote>\n<ul>\n<li>Separate cli tests into different test cases</li>\n<li>Change test config to use the travis database</li>\n<li>Change logger.warn to logger.warning</li>\n<li>Add test case for cli verbose option</li>\n<li>Add tests for <tt>dbmigrator list</tt></li>\n<li>Add CLI init test case for multiple contexts</li>\n<li>Add travis and coveralls badges to README</li>\n<li>Move cli.main import to base test case</li>\n<li>Refactor code for marking a migration as completed or not</li>\n<li>Add <tt>mark</tt> command for marking a migration as completed or not</li>\n<li>Add tests for the <tt>mark</tt> command</li>\n<li>Update README with example usage for the <tt>mark</tt> command</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id8\">\n<h2>0.1.2 (2016-03-18)</h2>\n<blockquote>\n<ul>\n<li><table>\n<col>\n<col>\n<tbody>\n<tr><th>bug:</th><td>Fix <tt>list</tt> to not explode when no migrations directories are given</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>Log warning message for <tt>list</tt> if schema_migrations table doesn\u2019t exist</li>\n<li>Change <tt><span class=\"pre\">--verbose</span></tt> to set the logger level to debug</li>\n<li>Add test for utils.timestamp</li>\n<li>Add test for utils.rollback_migration</li>\n<li>Add test for utils.run_migration</li>\n<li>Add test for utils.get_pending_migrations</li>\n<li>Add test for utils.get_migrations</li>\n<li>Add test for utils.import_migration</li>\n<li>Make <tt>dbmigrator generate</tt> generate pep8 compliant code</li>\n<li>Fix <tt>dbmigrator generate</tt> migrations directory lookup</li>\n<li>Add test for utils.with_cursor</li>\n<li>Add test for utils.get_settings_from_config</li>\n<li>Add integration tests with test packages</li>\n<li>Add pep8 to travis</li>\n<li>Add a logger for dbmigrator that writes to stdout</li>\n<li>Change version information option to <tt><span class=\"pre\">-V</span></tt></li>\n<li>Sort migrations by their filename, not the full path</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id9\">\n<h2>0.1.1 (2016-02-24)</h2>\n<blockquote>\n<ul>\n<li>Stop changing schema_migrations data if the table already exists</li>\n<li>Rewrite <tt><span class=\"pre\">--version</span></tt> to use argparse version action</li>\n<li>Add unit test for <tt><span class=\"pre\">--version</span></tt></li>\n<li>Add travis CI configuration file</li>\n<li>Fix default context (working directory) being a string instead of a list</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id10\">\n<h2>0.1.0 (2016-02-12)</h2>\n<blockquote>\n<ul>\n<li>Allow multiple migrations directories / context to be specified</li>\n<li>Add \u2013verbose which prints the configuration used by dbmigrator</li>\n<li>Use datetime <tt>utcnow</tt> instead of <tt>now</tt> for timestamps</li>\n<li>Add <tt><span class=\"pre\">--version</span></tt> to show the version of db-migrator installed</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id11\">\n<h2>0.0.7 (2016-02-10)</h2>\n<blockquote>\n<ul>\n<li>Add option <tt><span class=\"pre\">--context</span></tt> to dbmigrator in order to load entry points</li>\n<li>Raise error if config file is specified but not found</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id12\">\n<h2>0.0.6 (2016-02-08)</h2>\n<blockquote>\n<ul>\n<li>Fix missing migrations directory the \u201cinit\u201d command</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id13\">\n<h2>0.0.5 (2016-02-08)</h2>\n<blockquote>\n<ul>\n<li>Include CHANGELOG in distribution\u2019s manifest</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id14\">\n<h2>0.0.4 (2016-02-08)</h2>\n<blockquote>\n<ul>\n<li>Show warning message instead of error if migrations directory is undefined</li>\n<li>Add CHANGELOG</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id15\">\n<h2>0.0.3 (2016-02-08)</h2>\n<blockquote>\n<ul>\n<li>Return error if migrations directory is undefined</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id16\">\n<h2>0.0.2 (2016-02-03)</h2>\n<blockquote>\n<ul>\n<li>Fix invalid rst in README</li>\n<li>Update setup.py description and long_description</li>\n<li>Update setup.py to include README as the description and fix url</li>\n<li>Update README and cli after removing default value for config file</li>\n<li>Remove default config path (development.ini)</li>\n<li>Add dbmigrator list command</li>\n<li>Fix dbmigrator rollback to stop if there are no migrations to rollback</li>\n<li>Print message after initializing schema migrations</li>\n<li>Add note to run <tt>python setup.py install</tt> if using entry points</li>\n<li>Add migrations directory setting from setup.py entry point in README</li>\n<li>Update command names for init and generate in README</li>\n<li>Get settings from setup.py entry points</li>\n<li>Remove __init__.py generation in migrations directory</li>\n<li>Add option version to dbmigrator init for setting the initial version</li>\n<li>Rename \u201cgenerate_migration\u201d command to \u201cgenerate\u201d</li>\n<li>Rename \u201cinit_schema_migrations\u201d command to \u201cinit\u201d</li>\n<li>Change the way migrations are imported so it works in python2</li>\n<li>Add \u201capplied\u201d timestamp to schema migrations table</li>\n<li>Add <tt># <span class=\"pre\">-*-</span> coding: <span class=\"pre\">utf-8</span> <span class=\"pre\">-*-</span></tt> to the top of generated migration files</li>\n<li>Add README</li>\n<li>Add command \u201crollback\u201d to rollback migrations</li>\n<li>Add command \u201cmigrate\u201d to run pending migrations</li>\n<li>Add migrations to table when running init_schema_migrations</li>\n<li>Add command for creating the schema migrations table</li>\n<li>Create dbmigrator cli and \u201cgenerate_migration\u201d command</li>\n<li>Create dbmigrator python package</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 3459502, "releases": {"0.0.1": [], "0.0.2": [{"comment_text": "", "digests": {"md5": "c975d69a25fe1436108c9a5f693dd9e0", "sha256": "d5eed4b1c5bfe4c6ffbc186f586b4760c48b62713ef56e362eef02894c4008ae"}, "downloads": -1, "filename": "db-migrator-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c975d69a25fe1436108c9a5f693dd9e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6187, "upload_time": "2016-02-03T21:41:17", "upload_time_iso_8601": "2016-02-03T21:41:17.660247Z", "url": "https://files.pythonhosted.org/packages/6d/00/c5ffe28ab9126cc12b6979357d7050f88d49aae9835f064c2fd8babebe99/db-migrator-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "1e7650614729cb9bb5ad6f7aa38244c9", "sha256": "21e6588fba5783c4c5b1e65de00c278c61fbd04fd6f3de2e97ae541efc398771"}, "downloads": -1, "filename": "db-migrator-0.0.3.tar.gz", "has_sig": false, "md5_digest": "1e7650614729cb9bb5ad6f7aa38244c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6699, "upload_time": "2016-02-08T20:12:13", "upload_time_iso_8601": "2016-02-08T20:12:13.708109Z", "url": "https://files.pythonhosted.org/packages/a4/00/24b28a6859b5b5de48aed84c05efbeb8ede440d69dd898046a323a37ce8c/db-migrator-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "718a4c850d0372e671d7c32b9c57f305", "sha256": "d60b46f7ae48fbb95dfa64f9bc5deb3e3ae53039f5c26beae39921f4381c05fa"}, "downloads": -1, "filename": "db-migrator-0.0.4.tar.gz", "has_sig": false, "md5_digest": "718a4c850d0372e671d7c32b9c57f305", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7431, "upload_time": "2016-02-08T21:28:40", "upload_time_iso_8601": "2016-02-08T21:28:40.700230Z", "url": "https://files.pythonhosted.org/packages/0f/9c/c9f2353c7e809137722503606ef1d860992641c80345d646b3540d03d50a/db-migrator-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "96d58e0aee358435f172f4b01e531ae0", "sha256": "663db6246fc834ccd4c419900610a789ea896609e62453005e5d595c8ab9e48e"}, "downloads": -1, "filename": "db-migrator-0.0.5.tar.bz2", "has_sig": false, "md5_digest": "96d58e0aee358435f172f4b01e531ae0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17959, "upload_time": "2016-02-08T23:14:59", "upload_time_iso_8601": "2016-02-08T23:14:59.614661Z", "url": "https://files.pythonhosted.org/packages/8d/22/610f36310f9851edf29a87d36be1dd97f5f517729ba99bbd02cad6f54959/db-migrator-0.0.5.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf6715e35ec2565bad27ae7f6016c992", "sha256": "7643b0365a4e1de1e221dd88f8d9198aa5a458e5ffac16212202f75e022848e7"}, "downloads": -1, "filename": "db-migrator-0.0.5.tar.gz", "has_sig": false, "md5_digest": "cf6715e35ec2565bad27ae7f6016c992", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20954, "upload_time": "2016-02-08T23:15:07", "upload_time_iso_8601": "2016-02-08T23:15:07.782415Z", "url": "https://files.pythonhosted.org/packages/d1/9d/c8a493e20e452b9ce00fbc6d119c051178e2a65972ec77f64773cba5d06a/db-migrator-0.0.5.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ce74add67ea60ed23bbfcc77eb1c0e0", "sha256": "a599a80964b9ca5f9defc79e4ad2443b2531c9a9b2fb23b0a926d75651d08ccb"}, "downloads": -1, "filename": "db-migrator-0.0.5.zip", "has_sig": false, "md5_digest": "9ce74add67ea60ed23bbfcc77eb1c0e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28188, "upload_time": "2016-02-08T23:15:15", "upload_time_iso_8601": "2016-02-08T23:15:15.191561Z", "url": "https://files.pythonhosted.org/packages/8f/e9/8303992136389ffb0a21e1267792c78951e6dab9edef1e4c7fbaabad1798/db-migrator-0.0.5.zip", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "96645b3d9919db5450cf2d9b41b00447", "sha256": "99cb84afcc81abbfb112b4cfc38796acb05072e1bb2081a2d71f1ebee0a52994"}, "downloads": -1, "filename": "db-migrator-0.0.6.tar.bz2", "has_sig": false, "md5_digest": "96645b3d9919db5450cf2d9b41b00447", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18079, "upload_time": "2016-02-09T00:43:12", "upload_time_iso_8601": "2016-02-09T00:43:12.609721Z", "url": "https://files.pythonhosted.org/packages/a8/af/7900d94f6b48d40c7b9bb7de1ad95325cea359d78b09bddf84fccc927723/db-migrator-0.0.6.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6a1b8abcb66b83e54dbff6bb03d648f", "sha256": "7b980bd28d442f169c90d33d2c3972b41419c96132b4307da20a4883edc20e25"}, "downloads": -1, "filename": "db-migrator-0.0.6.tar.gz", "has_sig": false, "md5_digest": "b6a1b8abcb66b83e54dbff6bb03d648f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21036, "upload_time": "2016-02-09T00:43:18", "upload_time_iso_8601": "2016-02-09T00:43:18.080414Z", "url": "https://files.pythonhosted.org/packages/be/fb/783417f5c2a1daf4ccc36058b094526bea187c35383955010e94910cc3b5/db-migrator-0.0.6.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f8262d202e3cb023d6a7da20ef7e42e", "sha256": "a853636a0fbbaed76803b54110d4cd56654799282a5616a02d92dc0237d45ce8"}, "downloads": -1, "filename": "db-migrator-0.0.6.zip", "has_sig": false, "md5_digest": "2f8262d202e3cb023d6a7da20ef7e42e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28282, "upload_time": "2016-02-09T00:43:23", "upload_time_iso_8601": "2016-02-09T00:43:23.474608Z", "url": "https://files.pythonhosted.org/packages/5a/b8/d747b6ffa486178bf7d76466e2297f6e74bedb12891b05f24f08c621ddd8/db-migrator-0.0.6.zip", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "53c2e4789a0098c43688c075829a3276", "sha256": "67b6775f3c43fec7541936052d878efb5d1b2341dcfd5d26232d918313244db3"}, "downloads": -1, "filename": "db-migrator-0.0.7.tar.gz", "has_sig": false, "md5_digest": "53c2e4789a0098c43688c075829a3276", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19074, "upload_time": "2016-02-10T19:20:53", "upload_time_iso_8601": "2016-02-10T19:20:53.306237Z", "url": "https://files.pythonhosted.org/packages/98/15/d0852e0137276c45b4d4f350fc9a220d32815703b06dab3bc0c09fbe1407/db-migrator-0.0.7.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "76b5b1be009b222fee42aa12c46ddae7", "sha256": "fdd2ece725a07b6efa9469849ef36de0ce9004321fbad7ec1a8d9b93dca2b9b7"}, "downloads": -1, "filename": "db-migrator-0.1.0.tar.gz", "has_sig": false, "md5_digest": "76b5b1be009b222fee42aa12c46ddae7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19521, "upload_time": "2016-02-12T19:11:39", "upload_time_iso_8601": "2016-02-12T19:11:39.031135Z", "url": "https://files.pythonhosted.org/packages/7f/2d/1194c39dde3469a40565675ad9e099eb09cad32439f99c5a60fa0242196c/db-migrator-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "35162e6582c4d92a8d511f4505250509", "sha256": "401e33c0a41c01934ab200d1352c72e43228e8d05dc5029ec3cb3bfc05b8dd88"}, "downloads": -1, "filename": "db-migrator-0.1.1.tar.gz", "has_sig": false, "md5_digest": "35162e6582c4d92a8d511f4505250509", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20360, "upload_time": "2016-02-24T15:27:18", "upload_time_iso_8601": "2016-02-24T15:27:18.328467Z", "url": "https://files.pythonhosted.org/packages/7e/e4/70519d033ccc65c6f09b25a620fe9fb5d5cc77045bb11e916e3b564fa7e9/db-migrator-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c1cfdbeb9363e6417261aae1688f9753", "sha256": "2a22a068bef8e2ea15bcb9754c9f42cad7a23de914d2fee16fe5c8f5b313fa64"}, "downloads": -1, "filename": "db-migrator-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c1cfdbeb9363e6417261aae1688f9753", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22476, "upload_time": "2016-03-18T15:05:03", "upload_time_iso_8601": "2016-03-18T15:05:03.228568Z", "url": "https://files.pythonhosted.org/packages/6d/31/c91779947ee9c6f05157cc38d2918ed4bfa2fcb6d1d7ab45b54b8cb4ba7e/db-migrator-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "b0382959ae6358760246ea1add2b3362", "sha256": "381c15e8b987597b22a71d06da590ebb46f1bd99e888ea5dc247dfb67c4a1296"}, "downloads": -1, "filename": "db-migrator-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b0382959ae6358760246ea1add2b3362", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24746, "upload_time": "2016-04-19T21:08:38", "upload_time_iso_8601": "2016-04-19T21:08:38.626955Z", "url": "https://files.pythonhosted.org/packages/9d/d7/0bf5644a8e2009315f6020af39c6554f92c1ec80ffed1981395deae089c3/db-migrator-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "9318766c2960831c9ee665cf93df9dca", "sha256": "ce813f2f0d367a015fdf56b259bc3a0e815f967dc36082e5ae790541869c3b8b"}, "downloads": -1, "filename": "db-migrator-0.1.4.tar.bz2", "has_sig": false, "md5_digest": "9318766c2960831c9ee665cf93df9dca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22743, "upload_time": "2016-05-12T15:25:30", "upload_time_iso_8601": "2016-05-12T15:25:30.877493Z", "url": "https://files.pythonhosted.org/packages/dc/30/0db9c4cb566cfe05f89244a9ace6f187707f7b60bd16630196fe838f06df/db-migrator-0.1.4.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a81e4f03ab602843f070b96319145a5", "sha256": "3ec7128d5090b8dbcca8a323af668c76ad8b6c9ef5db3f166d4164658232ce9f"}, "downloads": -1, "filename": "db-migrator-0.1.4.tar.gz", "has_sig": false, "md5_digest": "9a81e4f03ab602843f070b96319145a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24781, "upload_time": "2016-05-12T15:25:17", "upload_time_iso_8601": "2016-05-12T15:25:17.226028Z", "url": "https://files.pythonhosted.org/packages/5d/a6/045ca9f6c91a48cbd055bbd1b02b6770035b0f703257eb15ae3772e6b0f4/db-migrator-0.1.4.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "836b00eb747f99abe2630be10dccc0e7", "sha256": "f22757262b8b34a5cdd3b0abf7f7278896df59640b15ea4934330f90d87353a7"}, "downloads": -1, "filename": "db-migrator-0.1.4.zip", "has_sig": false, "md5_digest": "836b00eb747f99abe2630be10dccc0e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37605, "upload_time": "2016-05-12T15:25:10", "upload_time_iso_8601": "2016-05-12T15:25:10.997066Z", "url": "https://files.pythonhosted.org/packages/35/62/7b9a3c5d65882facfb26d8e88180828265f0857d39e15f2fcf3811b4fca8/db-migrator-0.1.4.zip", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "89dd48cccdbcaf1e00ee93edd6aff3ac", "sha256": "70ee7ad116a77c05dde07c00889bbd1f7060d830760170b7d8e91a609548e1a4"}, "downloads": -1, "filename": "db-migrator-0.2.0.tar.bz2", "has_sig": false, "md5_digest": "89dd48cccdbcaf1e00ee93edd6aff3ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24843, "upload_time": "2016-06-24T17:01:05", "upload_time_iso_8601": "2016-06-24T17:01:05.330691Z", "url": "https://files.pythonhosted.org/packages/8a/aa/d0a5ee8c06ceb0694fab30aeefcb38d7d73b84cc01371cd70cd0d3b80850/db-migrator-0.2.0.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "923da16b5f0fa1c5b1fa9313a4882ce0", "sha256": "a0d27e33b87c751d432d7fc309f53d550850da79d6637562b15ad39dc4f81dd4"}, "downloads": -1, "filename": "db-migrator-0.2.0.tar.gz", "has_sig": false, "md5_digest": "923da16b5f0fa1c5b1fa9313a4882ce0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28367, "upload_time": "2016-06-24T17:01:33", "upload_time_iso_8601": "2016-06-24T17:01:33.691244Z", "url": "https://files.pythonhosted.org/packages/de/9d/4da5cbd4c00cf9ee31c17b2bb37e0b6727764812a38d4d0ec15927e3d840/db-migrator-0.2.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "144bdce07f4a0accc1ae4ddf455731ac", "sha256": "cc0db653ff6b459a9fc4e604b766c6ef1c76a25049eb4b4a771d9e90d8a7ea0e"}, "downloads": -1, "filename": "db-migrator-0.2.0.zip", "has_sig": false, "md5_digest": "144bdce07f4a0accc1ae4ddf455731ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41380, "upload_time": "2016-06-24T17:02:00", "upload_time_iso_8601": "2016-06-24T17:02:00.058599Z", "url": "https://files.pythonhosted.org/packages/55/97/8615813f8774d40569e65965c9efb20715208a84327d6beebb4ffca2404a/db-migrator-0.2.0.zip", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "4e04c1c4ae8055bcc43eee17543df633", "sha256": "e00ad552c39f4fa8a09d534543b641368b7f495848e442409471b2fac619a8d9"}, "downloads": -1, "filename": "db_migrator-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "4e04c1c4ae8055bcc43eee17543df633", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 27828, "upload_time": "2017-08-24T14:46:17", "upload_time_iso_8601": "2017-08-24T14:46:17.741239Z", "url": "https://files.pythonhosted.org/packages/36/2c/2ccf5c361084749cd3a2cce6923bd2bf35696a0badc20515507467bb7ed5/db_migrator-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cbcc976afe971a5c7769493da69629d", "sha256": "330c6c85fa760fc0790c26df5e9c9bbd51c5cfae0e24fe60c2f4e4c848e8ff5f"}, "downloads": -1, "filename": "db_migrator-1.0.0-py3.5.egg", "has_sig": false, "md5_digest": "5cbcc976afe971a5c7769493da69629d", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 48026, "upload_time": "2017-08-24T14:46:20", "upload_time_iso_8601": "2017-08-24T14:46:20.068060Z", "url": "https://files.pythonhosted.org/packages/a7/de/1e4881be4be5b3b4e257ec904bb600c0fe3a9e4c428adec3c37b36b1b207/db_migrator-1.0.0-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3626e0b85a825cfa05f3cedcf28312a7", "sha256": "751dd4e11e5325cbb9186b3b4ddf053db9675862612147ad6706cf9310e0b7d7"}, "downloads": -1, "filename": "db-migrator-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3626e0b85a825cfa05f3cedcf28312a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32876, "upload_time": "2017-08-24T14:46:21", "upload_time_iso_8601": "2017-08-24T14:46:21.951004Z", "url": "https://files.pythonhosted.org/packages/c8/4c/a1b47b1f8f27d31fa248804fc7227d33463801cccab7366d741464d89a1c/db-migrator-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "c7f20acbac9cd718bb38d76e69e0272a", "sha256": "f9b56dd73c713f36dbc04ea2665d9a6dfd743e651b92d7d334b3352d4764ceea"}, "downloads": -1, "filename": "db_migrator-1.0.1-py2.7.egg", "has_sig": false, "md5_digest": "c7f20acbac9cd718bb38d76e69e0272a", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 47076, "upload_time": "2017-09-14T21:18:38", "upload_time_iso_8601": "2017-09-14T21:18:38.330792Z", "url": "https://files.pythonhosted.org/packages/ff/5e/cc39f0734514bd3ad509ed6811d0a93aa2ae669a34a456bafd890808b017/db_migrator-1.0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d812a324424afe39f6d3e2bb3897f909", "sha256": "322eb70f261167146807d78c2cf52ca68c2a1f5b804746cb07caf0ab0a293e52"}, "downloads": -1, "filename": "db_migrator-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "d812a324424afe39f6d3e2bb3897f909", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 27896, "upload_time": "2017-09-14T21:18:40", "upload_time_iso_8601": "2017-09-14T21:18:40.471832Z", "url": "https://files.pythonhosted.org/packages/b2/04/28eb8287f7dcbd4bddf3f8ad8c8909a529821dc1167839210f6ebe1bad76/db_migrator-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c225df3ca5d9b5213174478815833443", "sha256": "b7ed1700b9aa51dd304f24ae6a24717464ad172939503ae07f0c64a01100f0da"}, "downloads": -1, "filename": "db-migrator-1.0.1.tar.gz", "has_sig": false, "md5_digest": "c225df3ca5d9b5213174478815833443", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30084, "upload_time": "2017-09-14T21:18:34", "upload_time_iso_8601": "2017-09-14T21:18:34.613675Z", "url": "https://files.pythonhosted.org/packages/d5/ad/6bfd6bc6f95b8aea6ebb7ea89cd479deb35d69566797a8e05a3b2a3056f8/db-migrator-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "577af63a3cfe8ed07e73a6c6aa7815e3", "sha256": "3cf917c385ef78e2bed8ada37f7c26256a38e7bc27cfe0a2cadf9346f36637f9"}, "downloads": -1, "filename": "db_migrator-1.0.2-py2.7.egg", "has_sig": false, "md5_digest": "577af63a3cfe8ed07e73a6c6aa7815e3", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 47276, "upload_time": "2017-09-25T17:20:01", "upload_time_iso_8601": "2017-09-25T17:20:01.188624Z", "url": "https://files.pythonhosted.org/packages/95/15/4cf2200282d8b843597078c742d069e11fb8a19806b729123047f0be4b88/db_migrator-1.0.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e675d26f383b80edf95b76fe2d52dce", "sha256": "cac0f4b77a2dec876f12381a1885d72eb5230e85dd12752c0fa2528d5feb7f6c"}, "downloads": -1, "filename": "db_migrator-1.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "7e675d26f383b80edf95b76fe2d52dce", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 28063, "upload_time": "2017-09-25T17:20:05", "upload_time_iso_8601": "2017-09-25T17:20:05.559781Z", "url": "https://files.pythonhosted.org/packages/78/43/4d575e2172f8fe8c39c8796bdca89685574a90cc7a8e4d591c4c39864a89/db_migrator-1.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4338740abc9caee6c10bf04472c04489", "sha256": "e1989a5230adcece65dafe019be9327e58e76e561be293ee2f87bbc649fe09b3"}, "downloads": -1, "filename": "db-migrator-1.0.2.tar.gz", "has_sig": false, "md5_digest": "4338740abc9caee6c10bf04472c04489", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30331, "upload_time": "2017-09-25T17:19:54", "upload_time_iso_8601": "2017-09-25T17:19:54.155845Z", "url": "https://files.pythonhosted.org/packages/b2/ea/e19147821aaa6bc3a4da53469c19ab3d8d2bb1184fe3e29e7220f0099c34/db-migrator-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "4603ff5c0565246e45242f4b9d8c6a99", "sha256": "b11716630c0135213717f1c9a913d14b8a3616317dd37d977fbe3ef22ea54cc2"}, "downloads": -1, "filename": "db_migrator-1.1.0-py2.7.egg", "has_sig": false, "md5_digest": "4603ff5c0565246e45242f4b9d8c6a99", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 50018, "upload_time": "2018-01-03T17:15:08", "upload_time_iso_8601": "2018-01-03T17:15:08.355265Z", "url": "https://files.pythonhosted.org/packages/f3/5e/219eea0dd06b6c40f9c281755aa2e82f7d02ff92d990e07e55230c0a195d/db_migrator-1.1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "cdf3a5c9c83e08a3bc7b5f4537bb35c7", "sha256": "ecd48593431958a50c0451196e70d846528903ee1853220d388708d40a146e12"}, "downloads": -1, "filename": "db-migrator-1.1.0.tar.gz", "has_sig": false, "md5_digest": "cdf3a5c9c83e08a3bc7b5f4537bb35c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34385, "upload_time": "2018-01-03T17:15:05", "upload_time_iso_8601": "2018-01-03T17:15:05.171348Z", "url": "https://files.pythonhosted.org/packages/f9/da/30290bda5764a057c2b52a985a8ba8c7b54fce4e91ad54ab184adc764ed0/db-migrator-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4603ff5c0565246e45242f4b9d8c6a99", "sha256": "b11716630c0135213717f1c9a913d14b8a3616317dd37d977fbe3ef22ea54cc2"}, "downloads": -1, "filename": "db_migrator-1.1.0-py2.7.egg", "has_sig": false, "md5_digest": "4603ff5c0565246e45242f4b9d8c6a99", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 50018, "upload_time": "2018-01-03T17:15:08", "upload_time_iso_8601": "2018-01-03T17:15:08.355265Z", "url": "https://files.pythonhosted.org/packages/f3/5e/219eea0dd06b6c40f9c281755aa2e82f7d02ff92d990e07e55230c0a195d/db_migrator-1.1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "cdf3a5c9c83e08a3bc7b5f4537bb35c7", "sha256": "ecd48593431958a50c0451196e70d846528903ee1853220d388708d40a146e12"}, "downloads": -1, "filename": "db-migrator-1.1.0.tar.gz", "has_sig": false, "md5_digest": "cdf3a5c9c83e08a3bc7b5f4537bb35c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34385, "upload_time": "2018-01-03T17:15:05", "upload_time_iso_8601": "2018-01-03T17:15:05.171348Z", "url": "https://files.pythonhosted.org/packages/f9/da/30290bda5764a057c2b52a985a8ba8c7b54fce4e91ad54ab184adc764ed0/db-migrator-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:55 2020"}