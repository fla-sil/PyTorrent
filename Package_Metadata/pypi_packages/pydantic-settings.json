{"info": {"author": "Daniel Daniels", "author_email": "danields761@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Pydantic settings\n> Hipster-orgazmic tool to mange application settings\n\n[![Build Status](https://travis-ci.com/danields761/pydantic-settings.svg?branch=master)](https://travis-ci.com/danields761/pydantic-settings)\n[![PyPI version](https://badge.fury.io/py/pydantic-settings.svg)](https://badge.fury.io/py/pydantic-settings)\n[![Documentation Status](https://readthedocs.org/projects/pydantic-settings/badge/?version=latest)](https://pydantic-settings.readthedocs.io/en/latest/?badge=latest)\n\nLibrary which extends [__pydantic__](https://github.com/samuelcolvin/pydantic) functionality in scope of application settings. *Pydantic* already have settings\nimplementation, e.g. `pydantic.BaseSettings`, but from my point it's missing some useful features:\n\n1. Overriding settings values by environment variables even for nested fields\n2. Providing detailed information about value location inside a loaded file or environment variable, which helps to point user mistake\n3. Documenting model fields isn't feels comfortable, but it's really essential to write comprehensive documentation for application settings\n\n> __NOTE:__ Alpha quality\n\n## Installation\n\nUsing pip:\n\n```sh\npip install pydantic-settings\n```\n\n## Usage example\n\n### Override values by env variables\n\nAllows to override values for nested fields if they are represented as *pydantic* model.\n\nHere is example:\n\n```python\nfrom pydantic import BaseModel, ValidationError\nfrom pydantic_settings import BaseSettingsModel\n\nclass Nested(BaseModel):\n    foo: int\n\nclass Settings(BaseSettingsModel):\n    nested: Nested\n\n\ntry:\n    Settings.from_env({'APP_nested_FOO': 'NOT AN INT'})\nexcept ValidationError as e:\n    assert e.raw_errors[0].env_loc == 'APP_nested_FOO'  # shows exact env variable name\n```\n\n### Point exact error location inside file\n\n```python\nfrom pydantic import BaseModel, IntegerError\nfrom pydantic_settings import BaseSettingsModel, LoadingValidationError, load_settings, FileLocation\n\nclass Nested(BaseModel):\n    foo: int\n\nclass Settings(BaseSettingsModel):\n    nested: Nested\n\nconf_text = \"\"\"\nnested:\n    foo: 'NOT AN INT'\n\"\"\"\n\ntry:\n    load_settings(Settings, conf_text, type_hint='yaml')\nexcept LoadingValidationError as e:\n    assert e.raw_errors[0].loc == ('nested', 'foo')\n    assert e.raw_errors[0].text_loc == FileLocation(line=3, col=10, end_line=3, end_col=22)\n    assert isinstance(e.raw_errors[0].exc, IntegerError)\n\n```\n\n\n### Extracts fields documentation\n\nAllows to extract *Sphinx* style attributes documentation by processing AST tree of class definition\n\n```python\nfrom pydantic_settings import BaseSettingsModel\n\nclass Foo(BaseSettingsModel):\n    class Config:\n        build_attr_docs = True\n\n    bar: str\n    \"\"\"here is docs\"\"\"\n\n    #: this style is't supported, but probably will be added in future\n    baz: int\n\nassert Foo.__fields__['bar'].schema.description == 'here is docs'\nassert Foo.__fields__['baz'].schema.description is None  # :(\n```\n\n### Online docs\n\nRead more detailed documentation on the project\n[Read The Docs](https://pydantic-settings.readthedocs.io/en/latest/) page.\n\n## Development setup\n\nProject requires [__poetry__](https://github.com/sdispater/poetry) for development setup.\n\n* If you aren't have it already\n\n```sh\npip install poetry\n``` \n\n* Install project dependencies\n\n```sh\npoetry install\n```\n\n* Run tests\n\n```sh\npoetry run pytest .\n```\n\n* Great, all works! Expect one optional step:\n\n* Install [__pre-commit__](https://github.com/pre-commit/pre-commit) for pre-commit hooks\n\n```sh\npip install pre-commit\npre-commit install\n```\n\nThat will install pre-commit hooks, which will check code with *flake8* and *black*.\n\n> *NOTE* project uses __black__ as code formatter, but i'am personally really dislike their\n> *\"double quoted strings everywhere\"* style, that's why `black -S` should be used\n> (anyway it's configured in *pyproject.toml* file)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/danields761/pydantic-settings", "keywords": "", "license": "MIT", "maintainer": "Daniel Daniels", "maintainer_email": "danields761@gmail.com", "name": "pydantic-settings", "package_url": "https://pypi.org/project/pydantic-settings/", "platform": "", "project_url": "https://pypi.org/project/pydantic-settings/", "project_urls": {"Homepage": "https://github.com/danields761/pydantic-settings", "Repository": "https://github.com/danields761/pydantic-settings"}, "release_url": "https://pypi.org/project/pydantic-settings/0.1.2b0/", "requires_dist": ["pydantic", "pyyaml (>=5.1.2,<6.0.0)", "tomlkit (>=0.5.5,<0.6.0)", "typing-extensions (>=3.7.4,<4.0.0)", "attrs (>=19.1,<20.0)"], "requires_python": ">=3.6,<4.0", "summary": "Hipster-orgazmic tool to mange application settings", "version": "0.1.2b0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pydantic settings</h1>\n<blockquote>\n<p>Hipster-orgazmic tool to mange application settings</p>\n</blockquote>\n<p><a href=\"https://travis-ci.com/danields761/pydantic-settings\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/095bc8113c382f1b91ad330567237a3c141c2898/68747470733a2f2f7472617669732d63692e636f6d2f64616e69656c64733736312f707964616e7469632d73657474696e67732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/pydantic-settings\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0dadb2b689968c89b249bfca4fe12d02b381ada8/68747470733a2f2f62616467652e667572792e696f2f70792f707964616e7469632d73657474696e67732e737667\"></a>\n<a href=\"https://pydantic-settings.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62376ee6da8081d941eeb98017533c3ea8a72eb9/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707964616e7469632d73657474696e67732f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>Library which extends <a href=\"https://github.com/samuelcolvin/pydantic\" rel=\"nofollow\"><strong>pydantic</strong></a> functionality in scope of application settings. <em>Pydantic</em> already have settings\nimplementation, e.g. <code>pydantic.BaseSettings</code>, but from my point it's missing some useful features:</p>\n<ol>\n<li>Overriding settings values by environment variables even for nested fields</li>\n<li>Providing detailed information about value location inside a loaded file or environment variable, which helps to point user mistake</li>\n<li>Documenting model fields isn't feels comfortable, but it's really essential to write comprehensive documentation for application settings</li>\n</ol>\n<blockquote>\n<p><strong>NOTE:</strong> Alpha quality</p>\n</blockquote>\n<h2>Installation</h2>\n<p>Using pip:</p>\n<pre>pip install pydantic-settings\n</pre>\n<h2>Usage example</h2>\n<h3>Override values by env variables</h3>\n<p>Allows to override values for nested fields if they are represented as <em>pydantic</em> model.</p>\n<p>Here is example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span><span class=\"p\">,</span> <span class=\"n\">ValidationError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic_settings</span> <span class=\"kn\">import</span> <span class=\"n\">BaseSettingsModel</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Nested</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n    <span class=\"n\">foo</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Settings</span><span class=\"p\">(</span><span class=\"n\">BaseSettingsModel</span><span class=\"p\">):</span>\n    <span class=\"n\">nested</span><span class=\"p\">:</span> <span class=\"n\">Nested</span>\n\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">Settings</span><span class=\"o\">.</span><span class=\"n\">from_env</span><span class=\"p\">({</span><span class=\"s1\">'APP_nested_FOO'</span><span class=\"p\">:</span> <span class=\"s1\">'NOT AN INT'</span><span class=\"p\">})</span>\n<span class=\"k\">except</span> <span class=\"n\">ValidationError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"k\">assert</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">raw_errors</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">env_loc</span> <span class=\"o\">==</span> <span class=\"s1\">'APP_nested_FOO'</span>  <span class=\"c1\"># shows exact env variable name</span>\n</pre>\n<h3>Point exact error location inside file</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span><span class=\"p\">,</span> <span class=\"n\">IntegerError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic_settings</span> <span class=\"kn\">import</span> <span class=\"n\">BaseSettingsModel</span><span class=\"p\">,</span> <span class=\"n\">LoadingValidationError</span><span class=\"p\">,</span> <span class=\"n\">load_settings</span><span class=\"p\">,</span> <span class=\"n\">FileLocation</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Nested</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n    <span class=\"n\">foo</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Settings</span><span class=\"p\">(</span><span class=\"n\">BaseSettingsModel</span><span class=\"p\">):</span>\n    <span class=\"n\">nested</span><span class=\"p\">:</span> <span class=\"n\">Nested</span>\n\n<span class=\"n\">conf_text</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">nested:</span>\n<span class=\"s2\">    foo: 'NOT AN INT'</span>\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">load_settings</span><span class=\"p\">(</span><span class=\"n\">Settings</span><span class=\"p\">,</span> <span class=\"n\">conf_text</span><span class=\"p\">,</span> <span class=\"n\">type_hint</span><span class=\"o\">=</span><span class=\"s1\">'yaml'</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">LoadingValidationError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"k\">assert</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">raw_errors</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">loc</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"s1\">'nested'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">raw_errors</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text_loc</span> <span class=\"o\">==</span> <span class=\"n\">FileLocation</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">end_line</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">end_col</span><span class=\"o\">=</span><span class=\"mi\">22</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">raw_errors</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">exc</span><span class=\"p\">,</span> <span class=\"n\">IntegerError</span><span class=\"p\">)</span>\n</pre>\n<h3>Extracts fields documentation</h3>\n<p>Allows to extract <em>Sphinx</em> style attributes documentation by processing AST tree of class definition</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pydantic_settings</span> <span class=\"kn\">import</span> <span class=\"n\">BaseSettingsModel</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">(</span><span class=\"n\">BaseSettingsModel</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Config</span><span class=\"p\">:</span>\n        <span class=\"n\">build_attr_docs</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"n\">bar</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"sd\">\"\"\"here is docs\"\"\"</span>\n\n    <span class=\"c1\">#: this style is't supported, but probably will be added in future</span>\n    <span class=\"n\">baz</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">Foo</span><span class=\"o\">.</span><span class=\"n\">__fields__</span><span class=\"p\">[</span><span class=\"s1\">'bar'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">description</span> <span class=\"o\">==</span> <span class=\"s1\">'here is docs'</span>\n<span class=\"k\">assert</span> <span class=\"n\">Foo</span><span class=\"o\">.</span><span class=\"n\">__fields__</span><span class=\"p\">[</span><span class=\"s1\">'baz'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">description</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span>  <span class=\"c1\"># :(</span>\n</pre>\n<h3>Online docs</h3>\n<p>Read more detailed documentation on the project\n<a href=\"https://pydantic-settings.readthedocs.io/en/latest/\" rel=\"nofollow\">Read The Docs</a> page.</p>\n<h2>Development setup</h2>\n<p>Project requires <a href=\"https://github.com/sdispater/poetry\" rel=\"nofollow\"><strong>poetry</strong></a> for development setup.</p>\n<ul>\n<li>If you aren't have it already</li>\n</ul>\n<pre>pip install poetry\n</pre>\n<ul>\n<li>Install project dependencies</li>\n</ul>\n<pre>poetry install\n</pre>\n<ul>\n<li>Run tests</li>\n</ul>\n<pre>poetry run pytest .\n</pre>\n<ul>\n<li>\n<p>Great, all works! Expect one optional step:</p>\n</li>\n<li>\n<p>Install <a href=\"https://github.com/pre-commit/pre-commit\" rel=\"nofollow\"><strong>pre-commit</strong></a> for pre-commit hooks</p>\n</li>\n</ul>\n<pre>pip install pre-commit\npre-commit install\n</pre>\n<p>That will install pre-commit hooks, which will check code with <em>flake8</em> and <em>black</em>.</p>\n<blockquote>\n<p><em>NOTE</em> project uses <strong>black</strong> as code formatter, but i'am personally really dislike their\n<em>\"double quoted strings everywhere\"</em> style, that's why <code>black -S</code> should be used\n(anyway it's configured in <em>pyproject.toml</em> file)</p>\n</blockquote>\n\n          </div>"}, "last_serial": 5804278, "releases": {"0.1.0a1": [{"comment_text": "", "digests": {"md5": "c6f34ed975b43fb111da1594237620ef", "sha256": "043b9c57db5d030765e914fd9eec1d80266359c88f37975d374dfd0bf4335998"}, "downloads": -1, "filename": "pydantic_settings-0.1.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "c6f34ed975b43fb111da1594237620ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 18722, "upload_time": "2019-08-19T16:44:43", "upload_time_iso_8601": "2019-08-19T16:44:43.001835Z", "url": "https://files.pythonhosted.org/packages/24/e3/61c2076f0868c6e46e48e3cc54127b207a2c18fcaaddacea5b017d17e3dd/pydantic_settings-0.1.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "032117be71904e5283aa1acf69748a4c", "sha256": "1a8a87d596732d21ad591e698e60a5ba0f0b292b1e80f33964b8271514b70fd4"}, "downloads": -1, "filename": "pydantic-settings-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "032117be71904e5283aa1acf69748a4c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 16033, "upload_time": "2019-08-19T16:44:41", "upload_time_iso_8601": "2019-08-19T16:44:41.597281Z", "url": "https://files.pythonhosted.org/packages/cc/60/0862fc0e3be14c46a1b39a1be9046ae5484ea7cdfa89897fabcb93e308f8/pydantic-settings-0.1.0a1.tar.gz", "yanked": false}], "0.1.0a2": [{"comment_text": "", "digests": {"md5": "9b679b6736834cce87ad4f0560d1a049", "sha256": "aca0c7434b147a0830cb3511cb6f126bbf2937a2344524d50bacc8840b239c09"}, "downloads": -1, "filename": "pydantic_settings-0.1.0a2-py3-none-any.whl", "has_sig": false, "md5_digest": "9b679b6736834cce87ad4f0560d1a049", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 19191, "upload_time": "2019-08-19T17:53:27", "upload_time_iso_8601": "2019-08-19T17:53:27.846793Z", "url": "https://files.pythonhosted.org/packages/fb/7e/65300cb8b8ce6d3ace8051ad8bf6c8dc8a794f53fc92155c0b23627b4b3a/pydantic_settings-0.1.0a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01715fd11d5c1106c0f27f5cf62ec051", "sha256": "be25d35b2b7a186aa602e89981b48e757fc3533873b758d9bab6fbd4822906cb"}, "downloads": -1, "filename": "pydantic-settings-0.1.0a2.tar.gz", "has_sig": false, "md5_digest": "01715fd11d5c1106c0f27f5cf62ec051", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 17057, "upload_time": "2019-08-19T17:53:26", "upload_time_iso_8601": "2019-08-19T17:53:26.424346Z", "url": "https://files.pythonhosted.org/packages/08/55/df77633388bbf4843303b0e1f2990262d1d58ddd7cc75ba85458455a57e7/pydantic-settings-0.1.0a2.tar.gz", "yanked": false}], "0.1.1b0": [{"comment_text": "", "digests": {"md5": "a6fc6ee2786c4a7d1137a803974dac2e", "sha256": "ed26a09d297f0e7d8c6aae0b0c94a446157fe43cdbfe17ca722ee1cae1f09a3d"}, "downloads": -1, "filename": "pydantic_settings-0.1.1b0-py3-none-any.whl", "has_sig": false, "md5_digest": "a6fc6ee2786c4a7d1137a803974dac2e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 21121, "upload_time": "2019-08-22T21:45:10", "upload_time_iso_8601": "2019-08-22T21:45:10.887485Z", "url": "https://files.pythonhosted.org/packages/3a/d1/cb3b20c505591d014e59db313ad99460b52ffeace5daf4a066451146e8ec/pydantic_settings-0.1.1b0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77c81de439d9617440a44a47b78d8844", "sha256": "6fa0133bb988d73d5eaae426b53e15ed116960ebb5a50c99bd7e4e2b188b75ea"}, "downloads": -1, "filename": "pydantic-settings-0.1.1b0.tar.gz", "has_sig": false, "md5_digest": "77c81de439d9617440a44a47b78d8844", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 18804, "upload_time": "2019-08-22T21:45:08", "upload_time_iso_8601": "2019-08-22T21:45:08.894603Z", "url": "https://files.pythonhosted.org/packages/f5/83/482563502c75acf7e7b2cb9662c400e6d8e5c691f8e9596c3b6136cd7917/pydantic-settings-0.1.1b0.tar.gz", "yanked": false}], "0.1.2b0": [{"comment_text": "", "digests": {"md5": "9b6ac24b360296e18ebaa8885bee1a08", "sha256": "e35385e738fa25b51a06180959344de5633d8d0d39053d8df5f9c39f3a93bef8"}, "downloads": -1, "filename": "pydantic_settings-0.1.2b0-py3-none-any.whl", "has_sig": false, "md5_digest": "9b6ac24b360296e18ebaa8885bee1a08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 21114, "upload_time": "2019-09-09T15:53:56", "upload_time_iso_8601": "2019-09-09T15:53:56.081762Z", "url": "https://files.pythonhosted.org/packages/89/3e/8db372db1bead0edb07759948e1b28473f26ee13832f260e873a60b9beb2/pydantic_settings-0.1.2b0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd6a31a4d53a0a4aaefa8be2aee8ea1f", "sha256": "a9166293fcef9baaf2859e2e83b3dfa36c91b7529868cc377b35f15091033f4c"}, "downloads": -1, "filename": "pydantic-settings-0.1.2b0.tar.gz", "has_sig": false, "md5_digest": "bd6a31a4d53a0a4aaefa8be2aee8ea1f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 18646, "upload_time": "2019-09-09T15:53:54", "upload_time_iso_8601": "2019-09-09T15:53:54.556790Z", "url": "https://files.pythonhosted.org/packages/d7/fa/d09dec80c00724cc995f442b8e2f222f570bdec731a84633a7d1f7122a41/pydantic-settings-0.1.2b0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b6ac24b360296e18ebaa8885bee1a08", "sha256": "e35385e738fa25b51a06180959344de5633d8d0d39053d8df5f9c39f3a93bef8"}, "downloads": -1, "filename": "pydantic_settings-0.1.2b0-py3-none-any.whl", "has_sig": false, "md5_digest": "9b6ac24b360296e18ebaa8885bee1a08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 21114, "upload_time": "2019-09-09T15:53:56", "upload_time_iso_8601": "2019-09-09T15:53:56.081762Z", "url": "https://files.pythonhosted.org/packages/89/3e/8db372db1bead0edb07759948e1b28473f26ee13832f260e873a60b9beb2/pydantic_settings-0.1.2b0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd6a31a4d53a0a4aaefa8be2aee8ea1f", "sha256": "a9166293fcef9baaf2859e2e83b3dfa36c91b7529868cc377b35f15091033f4c"}, "downloads": -1, "filename": "pydantic-settings-0.1.2b0.tar.gz", "has_sig": false, "md5_digest": "bd6a31a4d53a0a4aaefa8be2aee8ea1f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 18646, "upload_time": "2019-09-09T15:53:54", "upload_time_iso_8601": "2019-09-09T15:53:54.556790Z", "url": "https://files.pythonhosted.org/packages/d7/fa/d09dec80c00724cc995f442b8e2f222f570bdec731a84633a7d1f7122a41/pydantic-settings-0.1.2b0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:27 2020"}