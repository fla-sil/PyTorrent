{"info": {"author": "Luis Nell", "author_email": "cooperate@originell.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Multimedia :: Graphics"], "description": "====================\ndjango-kittenstorage\n====================\nkittenstorage is a so called *development storage engine*.\n\nMany people have the problem with gigantomanic production databases with \ngigabytes of pictures/files. It is a pain to keep the image files synchronised \nbetween development and production environments. \n\nTherefore I have written this storage engine. In case a file is not found, \nan image from placekitten.com_ will be used/displayed\ninstead.\n\nSetup\n=====\nIt's on pypi.\n\n    ``pip install django-kittenstorage``\n\nFeel free to clone from github too. Forking is welcome as well :-)\n\nIn your django settings file:\n\n    ``DEFAULT_FILE_STORAGE = 'kittenstorage.storages.GreyKitten'``\n\nStorage Engines\n===============\nkittenstorage offers two engines:\n\n1. ``kittenstorage.storages.GreyKitten``\n2. ``kittenstorage.storages.ColorKitten``\n\nChoose depending on the saturation you want. I prefer ``GreyKitten`` since it \ndoes have a pretty classy look.\n\nSettings\n========\nThere is only one setting:\n\nKITTEN_SIZE  \n    Default: ``(1024, 1024)``\n\n    A tuple of format `(width, height)`, specifiying the size of the image \n    requested from placekitten__.\n\n\n.. _placekitten.com: http://placekitten.com/\n__ placekitten.com_", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/originell/django-kittenstorage", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-kittenstorage", "package_url": "https://pypi.org/project/django-kittenstorage/", "platform": "any", "project_url": "https://pypi.org/project/django-kittenstorage/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/originell/django-kittenstorage"}, "release_url": "https://pypi.org/project/django-kittenstorage/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Django Storage Engine which returns images of kittens if files could not be found.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>kittenstorage is a so called <em>development storage engine</em>.</p>\n<p>Many people have the problem with gigantomanic production databases with\ngigabytes of pictures/files. It is a pain to keep the image files synchronised\nbetween development and production environments.</p>\n<p>Therefore I have written this storage engine. In case a file is not found,\nan image from <a href=\"http://placekitten.com/\" rel=\"nofollow\">placekitten.com</a> will be used/displayed\ninstead.</p>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>It\u2019s on pypi.</p>\n<blockquote>\n<tt>pip install <span class=\"pre\">django-kittenstorage</span></tt></blockquote>\n<p>Feel free to clone from github too. Forking is welcome as well :-)</p>\n<p>In your django settings file:</p>\n<blockquote>\n<tt>DEFAULT_FILE_STORAGE = 'kittenstorage.storages.GreyKitten'</tt></blockquote>\n</div>\n<div id=\"storage-engines\">\n<h2>Storage Engines</h2>\n<p>kittenstorage offers two engines:</p>\n<ol>\n<li><tt>kittenstorage.storages.GreyKitten</tt></li>\n<li><tt>kittenstorage.storages.ColorKitten</tt></li>\n</ol>\n<p>Choose depending on the saturation you want. I prefer <tt>GreyKitten</tt> since it\ndoes have a pretty classy look.</p>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>There is only one setting:</p>\n<dl>\n<dt>KITTEN_SIZE</dt>\n<dd><p>Default: <tt>(1024, 1024)</tt></p>\n<p>A tuple of format <cite>(width, height)</cite>, specifiying the size of the image\nrequested from <a href=\"http://placekitten.com/\" rel=\"nofollow\">placekitten</a>.</p>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 648365, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "5b463c7c376affe8fd3c0302c357253b", "sha256": "48d3b50b365869e1c6bedea343154fd638fddddc7621489ba21551ece0f7d191"}, "downloads": -1, "filename": "django-kittenstorage-1.0.0.tar.gz", "has_sig": false, "md5_digest": "5b463c7c376affe8fd3c0302c357253b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2601, "upload_time": "2011-08-13T14:06:35", "upload_time_iso_8601": "2011-08-13T14:06:35.070402Z", "url": "https://files.pythonhosted.org/packages/29/8d/a0acc68277e7e14c37706b9db135ddd60fda8fe2bcc8e48577bcd742fdda/django-kittenstorage-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b463c7c376affe8fd3c0302c357253b", "sha256": "48d3b50b365869e1c6bedea343154fd638fddddc7621489ba21551ece0f7d191"}, "downloads": -1, "filename": "django-kittenstorage-1.0.0.tar.gz", "has_sig": false, "md5_digest": "5b463c7c376affe8fd3c0302c357253b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2601, "upload_time": "2011-08-13T14:06:35", "upload_time_iso_8601": "2011-08-13T14:06:35.070402Z", "url": "https://files.pythonhosted.org/packages/29/8d/a0acc68277e7e14c37706b9db135ddd60fda8fe2bcc8e48577bcd742fdda/django-kittenstorage-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:26 2020"}