{"info": {"author": "Jan Pipek", "author_email": "jan.pipek@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Extension pandas dtype and array for physical units\n\n**Warning:** Not fully compatible with pandas yet, especially not so for 1.0. Some operations may or may not work, while common ones should.\n\n## History\n\nOriginally created for PyCon CZ 2019 (and later BI F\u00c3\u00b3rum Budapest / PyData Cambridge the same year).\n\n## Installation\n\n```bash\npip install pandas-units-extensions\n```\n\nFor development:\n\n```bash\npip install -e .\n```\n\n## Examples\n\n```python\nimport pandas as pd\nimport pandas_units_extension as _\n\ntemps = pd.DataFrame({\n    \"city\": [\"Prague\", \"Kathmandu\", \"Catania\", \"Boston\"],\n    \"temperature\": pd.Series([20, 22, 31, 16], dtype=\"unit[deg_C]\")\n})\ntemps[\"temperature\"].units.to(\"deg_F\")\n\n...\n\ndf = pd.DataFrame({\n    \"distance\": pd.Series([10, 12, 22, 18], dtype=\"unit[km]\"),\n    \"time\": pd.Series([50, 60, 120, 108], dtype=\"unit[min]\")\n})\nspeed = df[\"distance\"] / df[\"time\"]\nspeed.units.to_si()\n```\n\nSee [doc/units.ipynb](doc/units.ipynb) for more.\n\n## Links\n\n- <https://www.astropy.org/>\n- <https://pint.readthedocs.io/en/0.10.1/pint-pandas.html> - Another library supporting units inside pandas.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/janpipek/pandas-units-extension", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pandas-units-extension", "package_url": "https://pypi.org/project/pandas-units-extension/", "platform": "", "project_url": "https://pypi.org/project/pandas-units-extension/", "project_urls": {"Homepage": "https://github.com/janpipek/pandas-units-extension"}, "release_url": "https://pypi.org/project/pandas-units-extension/0.1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Extension pandas dtype and array for physical units.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Extension pandas dtype and array for physical units</h1>\n<p><strong>Warning:</strong> Not fully compatible with pandas yet, especially not so for 1.0. Some operations may or may not work, while common ones should.</p>\n<h2>History</h2>\n<p>Originally created for PyCon CZ 2019 (and later BI F\u00c3\u00b3rum Budapest / PyData Cambridge the same year).</p>\n<h2>Installation</h2>\n<pre>pip install pandas-units-extensions\n</pre>\n<p>For development:</p>\n<pre>pip install -e .\n</pre>\n<h2>Examples</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas_units_extension</span> <span class=\"k\">as</span> <span class=\"nn\">_</span>\n\n<span class=\"n\">temps</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"city\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Prague\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Kathmandu\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Catania\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Boston\"</span><span class=\"p\">],</span>\n    <span class=\"s2\">\"temperature\"</span><span class=\"p\">:</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"s2\">\"unit[deg_C]\"</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n<span class=\"n\">temps</span><span class=\"p\">[</span><span class=\"s2\">\"temperature\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"s2\">\"deg_F\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"distance\"</span><span class=\"p\">:</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"s2\">\"unit[km]\"</span><span class=\"p\">),</span>\n    <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"mi\">120</span><span class=\"p\">,</span> <span class=\"mi\">108</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"s2\">\"unit[min]\"</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n<span class=\"n\">speed</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s2\">\"distance\"</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s2\">\"time\"</span><span class=\"p\">]</span>\n<span class=\"n\">speed</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"o\">.</span><span class=\"n\">to_si</span><span class=\"p\">()</span>\n</pre>\n<p>See <a href=\"doc/units.ipynb\" rel=\"nofollow\">doc/units.ipynb</a> for more.</p>\n<h2>Links</h2>\n<ul>\n<li><a href=\"https://www.astropy.org/\" rel=\"nofollow\">https://www.astropy.org/</a></li>\n<li><a href=\"https://pint.readthedocs.io/en/0.10.1/pint-pandas.html\" rel=\"nofollow\">https://pint.readthedocs.io/en/0.10.1/pint-pandas.html</a> - Another library supporting units inside pandas.</li>\n</ul>\n\n          </div>"}, "last_serial": 6553804, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7f78c3333f768f3796ce51f738bb3891", "sha256": "32c967ab022890d7ac991b153ce840f6a309feae7c7d668a4467662605e4865f"}, "downloads": -1, "filename": "pandas-units-extension-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7f78c3333f768f3796ce51f738bb3891", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9917, "upload_time": "2020-02-01T10:16:16", "upload_time_iso_8601": "2020-02-01T10:16:16.969019Z", "url": "https://files.pythonhosted.org/packages/83/15/3518e57086d15d414c48fc39bc73979dc7a8816a8cb2f2b68d69e9dad2aa/pandas-units-extension-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7f78c3333f768f3796ce51f738bb3891", "sha256": "32c967ab022890d7ac991b153ce840f6a309feae7c7d668a4467662605e4865f"}, "downloads": -1, "filename": "pandas-units-extension-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7f78c3333f768f3796ce51f738bb3891", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9917, "upload_time": "2020-02-01T10:16:16", "upload_time_iso_8601": "2020-02-01T10:16:16.969019Z", "url": "https://files.pythonhosted.org/packages/83/15/3518e57086d15d414c48fc39bc73979dc7a8816a8cb2f2b68d69e9dad2aa/pandas-units-extension-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:26 2020"}