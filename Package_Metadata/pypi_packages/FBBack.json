{"info": {"author": "Le Goff Vincent", "author_email": "vincent.legoff.srs@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Communications :: Chat", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "======\nFBBack\n======\n\n\nFacebook Chat (`Messenger <https://www.messenger.com/>`__) for Python. This project was inspired by `facebook-chat-api <https://github.com/Schmavery/facebook-chat-api>`__.\n**FBBack** (pronunce F-B-Back) was forked from Taehoon Kim (/ `@carpedm20 <http://carpedm20.github.io/about/>`__)'s `fbchat <https://github.com/carpedm20/fbchat>`__.\n\n**No XMPP or API key is needed**. Just use your ID and PASSWORD.\n\n\nInstallation\n============\n\nSimple:\n\n.. code-block:: console\n\n    $ pip install FBBack\n\n\nExample\n=======\n\n.. code-block:: python\n\n    import FBBack\n\n    client = FBBack.Client(\"YOUR_ID\", \"YOUR_PASSWORD\")\n\n\nSending a Message\n=================\n\n.. code-block:: python\n\n    friends = client.getUsers(\"FRIEND'S NAME\")  # return a list of names\n    friend = friends[0]\n    sent = client.send(friend.uid, \"Your Message\")\n    if sent:\n        print(\"Message sent successfully!\")\n    # IMAGES\n    client.sendLocalImage(friend.uid,message='<message text>',image='<path/to/image/file>') # send local image\n    imgurl = \"http://i.imgur.com/LDQ2ITV.jpg\"\n    client.sendRemoteImage(friend.uid,message='<message text>', image=imgurl) # send image from image url\n\n\nGetting user info from user id\n==============================\n\n.. code-block:: python\n\n    friend1 = client.getUsers('<friend name 1>')[0]\n    friend2 = client.getUsers('<friend name 2>')[0]\n    friend1_info = client.getUserInfo(friend1.uid) # returns dict with details\n    both_info = client.getUserInfo(friend1.uid,friend2.uid) # query both together, returns list of dicts\n    friend1_name = friend1_info['name']\n\n\nGetting last messages sent\n==========================\n\n.. code-block:: python\n\n    last_messages = client.getThreadInfo(friend.uid,0)\n    last_messages.reverse()  # messages come in reversed order\n\n    for message in last_messages:\n        print(message.body)\n\n\nExample Echobot\n===============\n\n.. code-block:: python\n\n    import FBBack\n\n    # Subclass FBBack.Client and override required methods\n\n    class EchoBot(FBBack.Client):\n\n        def __init__(self, email, password, debug=True, user_agent=None):\n            FBBack.Client.__init__(self, email, password, debug, user_agent)\n\n        def on_message(self, mid, author_id, author_name, message, metadata):\n            self.markAsDelivered(author_id, mid) #mark delivered\n            self.markAsRead(author_id) #mark read\n\n            print(\"%s said: %s\"%(author_id, message))\n\n            #if you are not the author, echo\n            if str(author_id) != str(self.uid):\n                self.send(author_id,message)\n\n    bot = EchoBot(\"<email>\", \"<password>\")\n    bot.listen()\n\n\n\nAuthors\n=======\n\nOriginal author: Taehoon Kim / `@carpedm20 <http://carpedm20.github.io/about/>`__\nFrked by: Le Goff Vincent / `@vlegoff <https://github.com/vlegoff/>`__", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vlegoff/FBBack/", "keywords": "facebook chat fbchat FBBack", "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "FBBack", "package_url": "https://pypi.org/project/FBBack/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/FBBack/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/vlegoff/FBBack/"}, "release_url": "https://pypi.org/project/FBBack/0.1/", "requires_dist": null, "requires_python": null, "summary": "Facebook Chat (Messenger) for Python", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Facebook Chat (<a href=\"https://www.messenger.com/\" rel=\"nofollow\">Messenger</a>) for Python. This project was inspired by <a href=\"https://github.com/Schmavery/facebook-chat-api\" rel=\"nofollow\">facebook-chat-api</a>.\n<strong>FBBack</strong> (pronunce F-B-Back) was forked from Taehoon Kim (/ <a href=\"http://carpedm20.github.io/about/\" rel=\"nofollow\">@carpedm20</a>)\u2019s <a href=\"https://github.com/carpedm20/fbchat\" rel=\"nofollow\">fbchat</a>.</p>\n<p><strong>No XMPP or API key is needed</strong>. Just use your ID and PASSWORD.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Simple:</p>\n<pre><span class=\"gp\">$</span> pip install FBBack\n</pre>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">FBBack</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">FBBack</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s2\">\"YOUR_ID\"</span><span class=\"p\">,</span> <span class=\"s2\">\"YOUR_PASSWORD\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"sending-a-message\">\n<h2>Sending a Message</h2>\n<pre><span class=\"n\">friends</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">getUsers</span><span class=\"p\">(</span><span class=\"s2\">\"FRIEND'S NAME\"</span><span class=\"p\">)</span>  <span class=\"c1\"># return a list of names</span>\n<span class=\"n\">friend</span> <span class=\"o\">=</span> <span class=\"n\">friends</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">sent</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">friend</span><span class=\"o\">.</span><span class=\"n\">uid</span><span class=\"p\">,</span> <span class=\"s2\">\"Your Message\"</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">sent</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Message sent successfully!\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># IMAGES</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">sendLocalImage</span><span class=\"p\">(</span><span class=\"n\">friend</span><span class=\"o\">.</span><span class=\"n\">uid</span><span class=\"p\">,</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s1\">'&lt;message text&gt;'</span><span class=\"p\">,</span><span class=\"n\">image</span><span class=\"o\">=</span><span class=\"s1\">'&lt;path/to/image/file&gt;'</span><span class=\"p\">)</span> <span class=\"c1\"># send local image</span>\n<span class=\"n\">imgurl</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://i.imgur.com/LDQ2ITV.jpg\"</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">sendRemoteImage</span><span class=\"p\">(</span><span class=\"n\">friend</span><span class=\"o\">.</span><span class=\"n\">uid</span><span class=\"p\">,</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s1\">'&lt;message text&gt;'</span><span class=\"p\">,</span> <span class=\"n\">image</span><span class=\"o\">=</span><span class=\"n\">imgurl</span><span class=\"p\">)</span> <span class=\"c1\"># send image from image url</span>\n</pre>\n</div>\n<div id=\"getting-user-info-from-user-id\">\n<h2>Getting user info from user id</h2>\n<pre><span class=\"n\">friend1</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">getUsers</span><span class=\"p\">(</span><span class=\"s1\">'&lt;friend name 1&gt;'</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">friend2</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">getUsers</span><span class=\"p\">(</span><span class=\"s1\">'&lt;friend name 2&gt;'</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">friend1_info</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">getUserInfo</span><span class=\"p\">(</span><span class=\"n\">friend1</span><span class=\"o\">.</span><span class=\"n\">uid</span><span class=\"p\">)</span> <span class=\"c1\"># returns dict with details</span>\n<span class=\"n\">both_info</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">getUserInfo</span><span class=\"p\">(</span><span class=\"n\">friend1</span><span class=\"o\">.</span><span class=\"n\">uid</span><span class=\"p\">,</span><span class=\"n\">friend2</span><span class=\"o\">.</span><span class=\"n\">uid</span><span class=\"p\">)</span> <span class=\"c1\"># query both together, returns list of dicts</span>\n<span class=\"n\">friend1_name</span> <span class=\"o\">=</span> <span class=\"n\">friend1_info</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"getting-last-messages-sent\">\n<h2>Getting last messages sent</h2>\n<pre><span class=\"n\">last_messages</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">getThreadInfo</span><span class=\"p\">(</span><span class=\"n\">friend</span><span class=\"o\">.</span><span class=\"n\">uid</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">last_messages</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">()</span>  <span class=\"c1\"># messages come in reversed order</span>\n\n<span class=\"k\">for</span> <span class=\"n\">message</span> <span class=\"ow\">in</span> <span class=\"n\">last_messages</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"example-echobot\">\n<h2>Example Echobot</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">FBBack</span>\n\n<span class=\"c1\"># Subclass FBBack.Client and override required methods</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">EchoBot</span><span class=\"p\">(</span><span class=\"n\">FBBack</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">user_agent</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">FBBack</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"p\">,</span> <span class=\"n\">user_agent</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">on_message</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mid</span><span class=\"p\">,</span> <span class=\"n\">author_id</span><span class=\"p\">,</span> <span class=\"n\">author_name</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">markAsDelivered</span><span class=\"p\">(</span><span class=\"n\">author_id</span><span class=\"p\">,</span> <span class=\"n\">mid</span><span class=\"p\">)</span> <span class=\"c1\">#mark delivered</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">markAsRead</span><span class=\"p\">(</span><span class=\"n\">author_id</span><span class=\"p\">)</span> <span class=\"c1\">#mark read</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\"> said: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"n\">author_id</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">))</span>\n\n        <span class=\"c1\">#if you are not the author, echo</span>\n        <span class=\"k\">if</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">author_id</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">uid</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">author_id</span><span class=\"p\">,</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n<span class=\"n\">bot</span> <span class=\"o\">=</span> <span class=\"n\">EchoBot</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;email&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;password&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>Original author: Taehoon Kim / <a href=\"http://carpedm20.github.io/about/\" rel=\"nofollow\">@carpedm20</a>\nFrked by: Le Goff Vincent / <a href=\"https://github.com/vlegoff/\" rel=\"nofollow\">@vlegoff</a></p>\n</div>\n\n          </div>"}, "last_serial": 2549894, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c09e4e812112b3ed231949259c065807", "sha256": "82fccdd0cfd5ac2d176775706f97fb7de7cc6bd5c4c3f29118cc7b5951d0407c"}, "downloads": -1, "filename": "FBBack-0.1.tar.gz", "has_sig": false, "md5_digest": "c09e4e812112b3ed231949259c065807", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10759, "upload_time": "2017-01-02T14:49:34", "upload_time_iso_8601": "2017-01-02T14:49:34.487892Z", "url": "https://files.pythonhosted.org/packages/f5/a1/013822c4c4d9f41667fd47997ee3a4de945f29f81d333699d82a69c59822/FBBack-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c09e4e812112b3ed231949259c065807", "sha256": "82fccdd0cfd5ac2d176775706f97fb7de7cc6bd5c4c3f29118cc7b5951d0407c"}, "downloads": -1, "filename": "FBBack-0.1.tar.gz", "has_sig": false, "md5_digest": "c09e4e812112b3ed231949259c065807", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10759, "upload_time": "2017-01-02T14:49:34", "upload_time_iso_8601": "2017-01-02T14:49:34.487892Z", "url": "https://files.pythonhosted.org/packages/f5/a1/013822c4c4d9f41667fd47997ee3a4de945f29f81d333699d82a69c59822/FBBack-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:17 2020"}