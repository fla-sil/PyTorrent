{"info": {"author": "Marcin Kasperski", "author_email": "Marcin.Kasperski@mekk.waw.pl", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: DFSG approved", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Version Control"], "description": ".. -*- mode: rst; compile-command: \"rst2html README.txt README.html\" -*-\n\n================================================\nMercurial All Paths extension\n================================================\n\nPush or pull to many (or all) paths at once. \n\n.. contents::\n   :local:\n   :depth: 2\n\n.. sectnum::\n\nBasic usage\n================================================\n\nExecute::\n\n    hg pushall\n\nto push to all remotes which are defined for the repository. Or::\n\n    hg pullall\n\nto pull from all remotes in order.\n\nThere are also::\n\n    hg incomingall\n\n    hg outgoingall\n\nStandard push/pull options can be given, for example::\n\n    hg pushall -f -B issue-13724\n\n    hg pullall -r stable --insecure\n\nThose commands iterate over all paths returned by ``hg paths``.  This\nusually means iterating over paths defined in ``[paths]`` section of\n``.hg/hgrc``, but `Path Pattern`_ paths are also handled. You can\nimpact this behaviour by configuration, see below.\n\n\nDefining path groups\n================================================\n\nInstead of pushing/pulling everywhere, you can define and use *groups*::\n\n    hg pushall -g publish\n\npushes to all paths from the ``publish`` group (where ``publish`` is\nsymbolic name of your choosing). Or::\n\n    hg pullall -g shared\n\npulls from all paths in ``shared`` group.\n\nThere are two ways to define such a group:\n\n1. Define appropriate entry in ``[all_paths]`` section (either in ``.hg/hgrc``\n   or in your global ``~/.hgrc``). For example::\n\n     [all_paths]\n     group.publish = bitbucket github backup\n\n   (path aliases ``bitbucket``, ``github`` and ``backup`` must\n   be somehow defined).\n\n2. (Legacy method) Put the section of the same name in ``.hg/hgrc``,\n   and define all paths there. For example::\n\n    [publish]\n    bitbucket = ssh://hg@bitbucket.org/ludovicchabant/piecrust\n    github = git+ssh://git@github.com:ludovicchabant/PieCrust.git\n    backup = ssh://ludo@backup.local/piecrust\n\n   The syntax is the same as in standard ``[paths]`` section, just\n   name the section with the name of your group.\n\n   .. note::\n\n      Be careful to avoid conflicts with names which mean something\n      to Mercurial. For example ``web`` would be a bad name as ``[web]``\n      section configures ``hg serve`` behaviour, and ``ui`` would be\n      fatal as ``[ui]`` configures various basic Mercurial settings.\n\nI recommend the former method as it avoids the risk of conflicts,\nmakes it easy to define groups globally instead of defining them for\nevery repository (especially handy if you use `Path Pattern`_), and is\nmore compact.\n\nGroups are also handled for ``incomingall`` and ``outgoingall``, but\nlong ``--group`` option must be used (``-g`` is already taken by\nstandard Mercurial, means reporting in ``--git`` diff format)::\n\n     hg outgoingall --group publish\n\nConfiguration\n=======================================================\n\nThe extension can be configured using ``[all_paths]`` section of your\nglobal (``~/.hgrc``) or repository-level (``.hg/hgrc``) config file::\n\n  [all_paths]\n  prioritize = platon department\n  ignore = bitbucket production\n  group.publish = github bitbucket\n  group.backup = homebackup awsbackup\n\n``prioritize`` impacts the order, defines paths which are to be\nhandled first (if present). This is mostly useful for ``pullall``\nwhere pulling from local fast computer before pulling from BitBucket\nserver means saving some time and traffic. So::\n\n  prioritize = platon department\n\nmeans: if path named ``platon`` is present, handle it first, then\npath named ``department``, only then follow to other paths.\n\n``ignore`` lists paths which should be ignored, those remotes will\nbe skipped. So::\n\n  ignore = bitbucket production\n\nmeans that ``hg pullall`` or ``hg pushall`` should not use\n``bitbucket`` path (in my case because this is HTTP remote, and I have\nalso preferable ``bitssh``configured), and ``production`` path (as\nthere I prefer to pull and push only on specific demand).\n\nBoth those settings impact only *default* commands (those run\nwithout ``-g GROUP`` option). In case of groups items are processed\nin the order they are specified in group definition.\n\n``group.\u00abNAME\u00bb`` define group for ``-g \u00abNAME\u00bb`` as described earlier. \n\n\nInstallation\n=======================================================\n\nFrom PyPi\n--------------------\n\nIf you have working ``pip`` or ``easy_install``::\n\n    pip install --user mercurial_all_paths\n\nor maybe::\n\n    sudo pip install mercurial_all_paths\n\nThen activate by::\n\n    [extensions]\n    mercurial_all_paths =\n\nTo upgrade, repeat the same command with ``--upgrade`` option, for\nexample::\n\n    pip install --user --upgrade mercurial_all_paths\n\nFrom source\n-------------------------------------------------------\n\nIf you don't have ``pip``, or wish to follow development more closely:\n\n- clone both this repository and `mercurial_extension_utils`_ and put\n  them in the same directory, for example::\n\n    cd ~/sources\n    hg clone https://bitbucket.org/Mekk/mercurial-extension_utils/\n    hg clone https://bitbucket.org/Mekk/mercurial-all_paths/\n\n- update to newest tags,\n\n- activate by::\n\n    [extensions]\n    mercurial_all_paths = ~/sources/mercurial-all_paths/mercurial_all_paths.py\n\nTo upgrade, pull and update.\n\nNote that directory names matter. See `mercurial_extension_utils`_ for\nlonger description of this kind of installation.\n\nHistory\n=======================================================\n\nSee `HISTORY.txt`_\n\nDevelopment\n=======================================================\n\nDevelopment is tracked on BitBucket, see\n\n    http://bitbucket.org/Mekk/mercurial-all_paths/\n\nOriginal repository, maintained by Ludovic Chabant (lagging a bit at\nthe moment):\n\n    https://bitbucket.org/ludovicchabant/allpaths\n\n\nAdditional notes\n=======================================================\n\nInformation about this extension is also available\non Mercurial Wiki: http://mercurial.selenic.com/wiki/AllPathsExtension\n\n\n.. _Path Pattern: https://bitbucket.org/Mekk/mercurial-path_pattern/\n.. _HISTORY.txt: http://bitbucket.org/Mekk/mercurial-all_paths/src/tip/HISTORY.txt\n.. _mercurial_extension_utils: https://bitbucket.org/Mekk/mercurial-extension_utils/\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/Mekk/mercurial-all_paths", "keywords": "mercurial paths multi extension", "license": "GNU General Public License v2 (GPLv2)", "maintainer": "", "maintainer_email": "", "name": "mercurial_all_paths", "package_url": "https://pypi.org/project/mercurial_all_paths/", "platform": "", "project_url": "https://pypi.org/project/mercurial_all_paths/", "project_urls": {"Homepage": "http://bitbucket.org/Mekk/mercurial-all_paths"}, "release_url": "https://pypi.org/project/mercurial_all_paths/1.2.0/", "requires_dist": null, "requires_python": "", "summary": "Mercurial allpaths extension", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Push or pull to many (or all) paths at once.</p>\n<div id=\"contents\">\n<ul>\n<li><a href=\"#basic-usage\" id=\"id1\" rel=\"nofollow\">1\u00a0\u00a0\u00a0Basic usage</a></li>\n<li><a href=\"#defining-path-groups\" id=\"id2\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Defining path groups</a></li>\n<li><a href=\"#configuration\" id=\"id3\" rel=\"nofollow\">3\u00a0\u00a0\u00a0Configuration</a></li>\n<li><a href=\"#installation\" id=\"id4\" rel=\"nofollow\">4\u00a0\u00a0\u00a0Installation</a><ul>\n<li><a href=\"#from-pypi\" id=\"id5\" rel=\"nofollow\">4.1\u00a0\u00a0\u00a0From PyPi</a></li>\n<li><a href=\"#from-source\" id=\"id6\" rel=\"nofollow\">4.2\u00a0\u00a0\u00a0From source</a></li>\n</ul>\n</li>\n<li><a href=\"#history\" id=\"id7\" rel=\"nofollow\">5\u00a0\u00a0\u00a0History</a></li>\n<li><a href=\"#development\" id=\"id8\" rel=\"nofollow\">6\u00a0\u00a0\u00a0Development</a></li>\n<li><a href=\"#additional-notes\" id=\"id9\" rel=\"nofollow\">7\u00a0\u00a0\u00a0Additional notes</a></li>\n</ul>\n</div>\n<div id=\"basic-usage\">\n<h2><a href=\"#id1\" rel=\"nofollow\">1\u00a0\u00a0\u00a0Basic usage</a></h2>\n<p>Execute:</p>\n<pre>hg pushall\n</pre>\n<p>to push to all remotes which are defined for the repository. Or:</p>\n<pre>hg pullall\n</pre>\n<p>to pull from all remotes in order.</p>\n<p>There are also:</p>\n<pre>hg incomingall\n\nhg outgoingall\n</pre>\n<p>Standard push/pull options can be given, for example:</p>\n<pre>hg pushall -f -B issue-13724\n\nhg pullall -r stable --insecure\n</pre>\n<p>Those commands iterate over all paths returned by <tt>hg paths</tt>.  This\nusually means iterating over paths defined in <tt>[paths]</tt> section of\n<tt>.hg/hgrc</tt>, but <a href=\"https://bitbucket.org/Mekk/mercurial-path_pattern/\" rel=\"nofollow\">Path Pattern</a> paths are also handled. You can\nimpact this behaviour by configuration, see below.</p>\n</div>\n<div id=\"defining-path-groups\">\n<h2><a href=\"#id2\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Defining path groups</a></h2>\n<p>Instead of pushing/pulling everywhere, you can define and use <em>groups</em>:</p>\n<pre>hg pushall -g publish\n</pre>\n<p>pushes to all paths from the <tt>publish</tt> group (where <tt>publish</tt> is\nsymbolic name of your choosing). Or:</p>\n<pre>hg pullall -g shared\n</pre>\n<p>pulls from all paths in <tt>shared</tt> group.</p>\n<p>There are two ways to define such a group:</p>\n<ol>\n<li><p>Define appropriate entry in <tt>[all_paths]</tt> section (either in <tt>.hg/hgrc</tt>\nor in your global <tt><span class=\"pre\">~/.hgrc</span></tt>). For example:</p>\n<pre>[all_paths]\ngroup.publish = bitbucket github backup\n</pre>\n<p>(path aliases <tt>bitbucket</tt>, <tt>github</tt> and <tt>backup</tt> must\nbe somehow defined).</p>\n</li>\n<li><p>(Legacy method) Put the section of the same name in <tt>.hg/hgrc</tt>,\nand define all paths there. For example:</p>\n<pre>[publish]\nbitbucket = ssh://hg@bitbucket.org/ludovicchabant/piecrust\ngithub = git+ssh://git@github.com:ludovicchabant/PieCrust.git\nbackup = ssh://ludo@backup.local/piecrust\n</pre>\n<p>The syntax is the same as in standard <tt>[paths]</tt> section, just\nname the section with the name of your group.</p>\n<div>\n<p>Note</p>\n<p>Be careful to avoid conflicts with names which mean something\nto Mercurial. For example <tt>web</tt> would be a bad name as <tt>[web]</tt>\nsection configures <tt>hg serve</tt> behaviour, and <tt>ui</tt> would be\nfatal as <tt>[ui]</tt> configures various basic Mercurial settings.</p>\n</div>\n</li>\n</ol>\n<p>I recommend the former method as it avoids the risk of conflicts,\nmakes it easy to define groups globally instead of defining them for\nevery repository (especially handy if you use <a href=\"https://bitbucket.org/Mekk/mercurial-path_pattern/\" rel=\"nofollow\">Path Pattern</a>), and is\nmore compact.</p>\n<p>Groups are also handled for <tt>incomingall</tt> and <tt>outgoingall</tt>, but\nlong <tt><span class=\"pre\">--group</span></tt> option must be used (<tt><span class=\"pre\">-g</span></tt> is already taken by\nstandard Mercurial, means reporting in <tt><span class=\"pre\">--git</span></tt> diff format):</p>\n<pre>hg outgoingall --group publish\n</pre>\n</div>\n<div id=\"configuration\">\n<h2><a href=\"#id3\" rel=\"nofollow\">3\u00a0\u00a0\u00a0Configuration</a></h2>\n<p>The extension can be configured using <tt>[all_paths]</tt> section of your\nglobal (<tt><span class=\"pre\">~/.hgrc</span></tt>) or repository-level (<tt>.hg/hgrc</tt>) config file:</p>\n<pre>[all_paths]\nprioritize = platon department\nignore = bitbucket production\ngroup.publish = github bitbucket\ngroup.backup = homebackup awsbackup\n</pre>\n<p><tt>prioritize</tt> impacts the order, defines paths which are to be\nhandled first (if present). This is mostly useful for <tt>pullall</tt>\nwhere pulling from local fast computer before pulling from BitBucket\nserver means saving some time and traffic. So:</p>\n<pre>prioritize = platon department\n</pre>\n<p>means: if path named <tt>platon</tt> is present, handle it first, then\npath named <tt>department</tt>, only then follow to other paths.</p>\n<p><tt>ignore</tt> lists paths which should be ignored, those remotes will\nbe skipped. So:</p>\n<pre>ignore = bitbucket production\n</pre>\n<p>means that <tt>hg pullall</tt> or <tt>hg pushall</tt> should not use\n<tt>bitbucket</tt> path (in my case because this is HTTP remote, and I have\nalso preferable <tt><span class=\"pre\">bitssh``configured),</span> and ``production</tt> path (as\nthere I prefer to pull and push only on specific demand).</p>\n<p>Both those settings impact only <em>default</em> commands (those run\nwithout <tt><span class=\"pre\">-g</span> GROUP</tt> option). In case of groups items are processed\nin the order they are specified in group definition.</p>\n<p><tt><span class=\"pre\">group.\u00abNAME\u00bb</span></tt> define group for <tt><span class=\"pre\">-g</span> \u00abNAME\u00bb</tt> as described earlier.</p>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id4\" rel=\"nofollow\">4\u00a0\u00a0\u00a0Installation</a></h2>\n<div id=\"from-pypi\">\n<h3><a href=\"#id5\" rel=\"nofollow\">4.1\u00a0\u00a0\u00a0From PyPi</a></h3>\n<p>If you have working <tt>pip</tt> or <tt>easy_install</tt>:</p>\n<pre>pip install --user mercurial_all_paths\n</pre>\n<p>or maybe:</p>\n<pre>sudo pip install mercurial_all_paths\n</pre>\n<p>Then activate by:</p>\n<pre>[extensions]\nmercurial_all_paths =\n</pre>\n<p>To upgrade, repeat the same command with <tt><span class=\"pre\">--upgrade</span></tt> option, for\nexample:</p>\n<pre>pip install --user --upgrade mercurial_all_paths\n</pre>\n</div>\n<div id=\"from-source\">\n<h3><a href=\"#id6\" rel=\"nofollow\">4.2\u00a0\u00a0\u00a0From source</a></h3>\n<p>If you don\u2019t have <tt>pip</tt>, or wish to follow development more closely:</p>\n<ul>\n<li><p>clone both this repository and <a href=\"https://bitbucket.org/Mekk/mercurial-extension_utils/\" rel=\"nofollow\">mercurial_extension_utils</a> and put\nthem in the same directory, for example:</p>\n<pre>cd ~/sources\nhg clone https://bitbucket.org/Mekk/mercurial-extension_utils/\nhg clone https://bitbucket.org/Mekk/mercurial-all_paths/\n</pre>\n</li>\n<li><p>update to newest tags,</p>\n</li>\n<li><p>activate by:</p>\n<pre>[extensions]\nmercurial_all_paths = ~/sources/mercurial-all_paths/mercurial_all_paths.py\n</pre>\n</li>\n</ul>\n<p>To upgrade, pull and update.</p>\n<p>Note that directory names matter. See <a href=\"https://bitbucket.org/Mekk/mercurial-extension_utils/\" rel=\"nofollow\">mercurial_extension_utils</a> for\nlonger description of this kind of installation.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2><a href=\"#id7\" rel=\"nofollow\">5\u00a0\u00a0\u00a0History</a></h2>\n<p>See <a href=\"http://bitbucket.org/Mekk/mercurial-all_paths/src/tip/HISTORY.txt\" rel=\"nofollow\">HISTORY.txt</a></p>\n</div>\n<div id=\"development\">\n<h2><a href=\"#id8\" rel=\"nofollow\">6\u00a0\u00a0\u00a0Development</a></h2>\n<p>Development is tracked on BitBucket, see</p>\n<blockquote>\n<a href=\"http://bitbucket.org/Mekk/mercurial-all_paths/\" rel=\"nofollow\">http://bitbucket.org/Mekk/mercurial-all_paths/</a></blockquote>\n<p>Original repository, maintained by Ludovic Chabant (lagging a bit at\nthe moment):</p>\n<blockquote>\n<a href=\"https://bitbucket.org/ludovicchabant/allpaths\" rel=\"nofollow\">https://bitbucket.org/ludovicchabant/allpaths</a></blockquote>\n</div>\n<div id=\"additional-notes\">\n<h2><a href=\"#id9\" rel=\"nofollow\">7\u00a0\u00a0\u00a0Additional notes</a></h2>\n<p>Information about this extension is also available\non Mercurial Wiki: <a href=\"http://mercurial.selenic.com/wiki/AllPathsExtension\" rel=\"nofollow\">http://mercurial.selenic.com/wiki/AllPathsExtension</a></p>\n</div>\n\n          </div>"}, "last_serial": 6113458, "releases": {"0.6.1": [{"comment_text": "", "digests": {"md5": "255c6cb9b15695273529af61d37310ea", "sha256": "d565beb529b4eb9a86e828080a026a333e4a10ad885da11c5f831be6b8bef453"}, "downloads": -1, "filename": "mercurial_all_paths-0.6.1.tar.gz", "has_sig": false, "md5_digest": "255c6cb9b15695273529af61d37310ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3631, "upload_time": "2015-11-15T09:38:05", "upload_time_iso_8601": "2015-11-15T09:38:05.116367Z", "url": "https://files.pythonhosted.org/packages/ff/4c/c69b9a07c385840d62413e6c3494c32499d059c61c7093a4741748614805/mercurial_all_paths-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "29e2d0996802df1ead47348b96e09983", "sha256": "4fe65e92799089843bd73049fcad7fe6a4c7effc445f4c200fd6f0673df7d3f8"}, "downloads": -1, "filename": "mercurial_all_paths-0.6.2.tar.gz", "has_sig": false, "md5_digest": "29e2d0996802df1ead47348b96e09983", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3638, "upload_time": "2015-11-28T08:59:13", "upload_time_iso_8601": "2015-11-28T08:59:13.788349Z", "url": "https://files.pythonhosted.org/packages/5f/03/f961cf152947491014701d3ea49c4924f7d2f97679bbc161c4f9f4f0dd90/mercurial_all_paths-0.6.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "554aebcd56e716c7812497aafcd9a7ba", "sha256": "05a2ae9662f1c5b9c323d4aacb8d829bca07e4de2b08c0f3da2f35002a7961b8"}, "downloads": -1, "filename": "mercurial_all_paths-1.0.0.tar.gz", "has_sig": false, "md5_digest": "554aebcd56e716c7812497aafcd9a7ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5857, "upload_time": "2016-09-25T20:38:43", "upload_time_iso_8601": "2016-09-25T20:38:43.043876Z", "url": "https://files.pythonhosted.org/packages/ff/c3/bb5c3aeeced15cec44ba3abef12a2dccb655446591bd68280020a1dafc1b/mercurial_all_paths-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "060109d7bed2577ab85b0d392837ff21", "sha256": "a9196be26dfe621ff73e31035e916e19c495e9a17474f0e4661e21ad7ea51094"}, "downloads": -1, "filename": "mercurial_all_paths-1.0.1.tar.gz", "has_sig": false, "md5_digest": "060109d7bed2577ab85b0d392837ff21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5868, "upload_time": "2016-11-13T11:43:20", "upload_time_iso_8601": "2016-11-13T11:43:20.484547Z", "url": "https://files.pythonhosted.org/packages/40/2e/f27eb169313cee4d7e56d56cdb41c3812a5f3e648ac6b6d9f2f093e00520/mercurial_all_paths-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ea2c373edf31f74484e798a6992103f6", "sha256": "dc2954c35d35db04ea58417d30bce4e9d048cd6f0c0b17581cdf5a124f78d5cf"}, "downloads": -1, "filename": "mercurial_all_paths-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ea2c373edf31f74484e798a6992103f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6254, "upload_time": "2017-05-18T15:38:28", "upload_time_iso_8601": "2017-05-18T15:38:28.340803Z", "url": "https://files.pythonhosted.org/packages/2b/b7/ae9631513fb288f5ebe31fd94f9f145a1213d695a7c31975455de9587666/mercurial_all_paths-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "46564f75489680b765b63000210bca9c", "sha256": "197e2dd42a717faa7cac15157bed0370ee9e715a52938587da291726107f5f72"}, "downloads": -1, "filename": "mercurial_all_paths-1.1.1.tar.gz", "has_sig": false, "md5_digest": "46564f75489680b765b63000210bca9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6258, "upload_time": "2017-08-10T06:49:30", "upload_time_iso_8601": "2017-08-10T06:49:30.186415Z", "url": "https://files.pythonhosted.org/packages/11/a8/c2e98cbf88c806f73eb0e5e7b2f115f324b0e244203ea5dca1301ba88e73/mercurial_all_paths-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "6be7549376e59fff64f91dcf4e658654", "sha256": "fc8c432ed8e00e04809180fb73a0ebf7ccccb91bfe65da679356e0ffabdd3756"}, "downloads": -1, "filename": "mercurial_all_paths-1.1.2.tar.gz", "has_sig": false, "md5_digest": "6be7549376e59fff64f91dcf4e658654", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6206, "upload_time": "2018-05-25T23:57:24", "upload_time_iso_8601": "2018-05-25T23:57:24.244489Z", "url": "https://files.pythonhosted.org/packages/31/b2/9e119fa12018b20b492efa0105e9c12c88ec76ce322e926996a0d9416270/mercurial_all_paths-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "50c778966cae7098c51b49aac39fe73d", "sha256": "8218154aaaa786e22df54c7eca0634bbe24a949377d9bcb889c9b9ac7141f1c7"}, "downloads": -1, "filename": "mercurial_all_paths-1.1.3.tar.gz", "has_sig": false, "md5_digest": "50c778966cae7098c51b49aac39fe73d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6205, "upload_time": "2018-08-03T23:14:33", "upload_time_iso_8601": "2018-08-03T23:14:33.581374Z", "url": "https://files.pythonhosted.org/packages/25/82/003c081877c146f3cf6fc277016707abbcda28596b9fc61a7586da213ada/mercurial_all_paths-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "4eecf4c681085e2e2b8e9b55f4970e40", "sha256": "420dc7044e9222edd367826078acf0d5ad716eafbecd693e4ee3ac896f6d13ea"}, "downloads": -1, "filename": "mercurial_all_paths-1.1.4.tar.gz", "has_sig": false, "md5_digest": "4eecf4c681085e2e2b8e9b55f4970e40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6224, "upload_time": "2018-11-05T13:58:19", "upload_time_iso_8601": "2018-11-05T13:58:19.323883Z", "url": "https://files.pythonhosted.org/packages/98/d3/66586f3878e3d0c7cf0bb650adb8b2acdb7fb0d13219d22b1d02da43010c/mercurial_all_paths-1.1.4.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "15e51649a915fd64cdbe3413276928e7", "sha256": "779e77737161749e17900d1a1eecf00690cb155f91ebd5764eed54aa60168c33"}, "downloads": -1, "filename": "mercurial_all_paths-1.2.0.tar.gz", "has_sig": false, "md5_digest": "15e51649a915fd64cdbe3413276928e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21339, "upload_time": "2019-11-11T01:17:15", "upload_time_iso_8601": "2019-11-11T01:17:15.324267Z", "url": "https://files.pythonhosted.org/packages/f6/50/639fbd78e29085e1e8e9c23bf542e3cb76266cd4a0b1e684908a0299962f/mercurial_all_paths-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "15e51649a915fd64cdbe3413276928e7", "sha256": "779e77737161749e17900d1a1eecf00690cb155f91ebd5764eed54aa60168c33"}, "downloads": -1, "filename": "mercurial_all_paths-1.2.0.tar.gz", "has_sig": false, "md5_digest": "15e51649a915fd64cdbe3413276928e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21339, "upload_time": "2019-11-11T01:17:15", "upload_time_iso_8601": "2019-11-11T01:17:15.324267Z", "url": "https://files.pythonhosted.org/packages/f6/50/639fbd78e29085e1e8e9c23bf542e3cb76266cd4a0b1e684908a0299962f/mercurial_all_paths-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:11 2020"}