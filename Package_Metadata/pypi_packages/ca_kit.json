{"info": {"author": "Dustin Oprea", "author_email": "myselfasunder@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "--------\nOverview\n--------\n\nThe purpose of this project is to package the logic needed to:\n\n- Build a CA certificates\n- Build a regular certificate\n- Sign the regular certificate with the CA certificate\n- Verify that the regular certificate is signed with the CA certificate\n\nI find that I often need to do this, and/or need to do this as part of other \nprojects to prove a design. This project assumes some defaults, and makes it \nridiculously easy to establish a CA and build certificates. You can pass\nparameters to change the name of the output files, and the path that they are\nwritten to.\n\nThe scripts are comprised of Python logic. So, for those who'd like a quick \ntutorial on how to do these tasks via Python, they can use this project as a \nroadmap.\n\n\n-------\nScripts\n-------\n\nThis project encapsulates four executable scripts.\n\n============   ============================================================\nName           Description\n============   ============================================================\nck_create_ca   Create CA keys and certificate\nck_create      Create normal keys\nck_sign        Create a signed certificate using the CA certificate and key\nck_verify_ca   Verify that the signed certificate was issued by the CA\n============   ============================================================\n\nThe Python scripts use M2Crypto_ to manipulate the keys/certificates.\n\n\n------------\nInstallation\n------------\n\nThis project can not be installed. Clone it from the GitHub project, and run \nthe following to install the dependencies::\n\n   $ sudo pip install -r requirements.txt\n\n\n-----\nUsage\n-----\n\nTo specify a directory, use the \"-o\" parameter. If none is given, you will be \nprompted to confirm.\n\n1. Create the CA::\n\n      $ ck_create_ca\n      Please confirm output directory []: output\n\n   This generates:\n\n   - *ca.crt.pem*\n   - *ca.csr.pem*\n   - *ca.key.pem*\n   - *ca.public.pem*\n\n2. Create the normal keys::\n\n      $ ck_create\n      Please confirm output directory []: output\n\n   This generates:\n\n   - *normal.csr.pem*\n   - *normal.key.pem*\n   - *normal.public.pem*\n\n3. Sign the request::\n\n      $ ck_sign\n      Please confirm output directory []: output\n\n   This generates:\n\n   - *normal.crt.pem*\n\n4. Verify that the certificate was signed by our CA::\n\n      $ ck_verify_ca\n      Please confirm input directory []: output\n      Is valid? True\n\n.. _M2Crypto: https://github.com/martinpaljak/M2Crypto", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dsoprea/CaKit", "keywords": "ssl openssl ca certificate", "license": "GPL 2", "maintainer": null, "maintainer_email": null, "name": "ca_kit", "package_url": "https://pypi.org/project/ca_kit/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ca_kit/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dsoprea/CaKit"}, "release_url": "https://pypi.org/project/ca_kit/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Certificate-authority test harness.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>The purpose of this project is to package the logic needed to:</p>\n<ul>\n<li>Build a CA certificates</li>\n<li>Build a regular certificate</li>\n<li>Sign the regular certificate with the CA certificate</li>\n<li>Verify that the regular certificate is signed with the CA certificate</li>\n</ul>\n<p>I find that I often need to do this, and/or need to do this as part of other\nprojects to prove a design. This project assumes some defaults, and makes it\nridiculously easy to establish a CA and build certificates. You can pass\nparameters to change the name of the output files, and the path that they are\nwritten to.</p>\n<p>The scripts are comprised of Python logic. So, for those who\u2019d like a quick\ntutorial on how to do these tasks via Python, they can use this project as a\nroadmap.</p>\n</div>\n<div id=\"scripts\">\n<h2>Scripts</h2>\n<p>This project encapsulates four executable scripts.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>ck_create_ca</td>\n<td>Create CA keys and certificate</td>\n</tr>\n<tr><td>ck_create</td>\n<td>Create normal keys</td>\n</tr>\n<tr><td>ck_sign</td>\n<td>Create a signed certificate using the CA certificate and key</td>\n</tr>\n<tr><td>ck_verify_ca</td>\n<td>Verify that the signed certificate was issued by the CA</td>\n</tr>\n</tbody>\n</table>\n<p>The Python scripts use <a href=\"https://github.com/martinpaljak/M2Crypto\" rel=\"nofollow\">M2Crypto</a> to manipulate the keys/certificates.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This project can not be installed. Clone it from the GitHub project, and run\nthe following to install the dependencies:</p>\n<pre>$ sudo pip install -r requirements.txt\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To specify a directory, use the \u201c-o\u201d parameter. If none is given, you will be\nprompted to confirm.</p>\n<ol>\n<li><p>Create the CA:</p>\n<pre>$ ck_create_ca\nPlease confirm output directory []: output\n</pre>\n<p>This generates:</p>\n<ul>\n<li><em>ca.crt.pem</em></li>\n<li><em>ca.csr.pem</em></li>\n<li><em>ca.key.pem</em></li>\n<li><em>ca.public.pem</em></li>\n</ul>\n</li>\n<li><p>Create the normal keys:</p>\n<pre>$ ck_create\nPlease confirm output directory []: output\n</pre>\n<p>This generates:</p>\n<ul>\n<li><em>normal.csr.pem</em></li>\n<li><em>normal.key.pem</em></li>\n<li><em>normal.public.pem</em></li>\n</ul>\n</li>\n<li><p>Sign the request:</p>\n<pre>$ ck_sign\nPlease confirm output directory []: output\n</pre>\n<p>This generates:</p>\n<ul>\n<li><em>normal.crt.pem</em></li>\n</ul>\n</li>\n<li><p>Verify that the certificate was signed by our CA:</p>\n<pre>$ ck_verify_ca\nPlease confirm input directory []: output\nIs valid? True\n</pre>\n</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 1152920, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "6b1cac55af8da4716b1337b2460f5678", "sha256": "0e9f3aac9cf2bfae19ddbe18dcf9fee47bcb9d8cb397fe222ada6c543b86b53d"}, "downloads": -1, "filename": "ca_kit-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "6b1cac55af8da4716b1337b2460f5678", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 13294, "upload_time": "2014-07-10T03:07:57", "upload_time_iso_8601": "2014-07-10T03:07:57.328401Z", "url": "https://files.pythonhosted.org/packages/eb/b7/2c92e891a993a8c1fe810a80fd75c5b14f392b6f52e0faffa1a98bea6c86/ca_kit-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d30d87de5063744d9930adaab30ca03", "sha256": "54ca74b44eeeb2ce934ff0baef3711ef575c32d24bfb63f43e4460f0f3322590"}, "downloads": -1, "filename": "ca_kit-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2d30d87de5063744d9930adaab30ca03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5362, "upload_time": "2014-07-10T03:07:55", "upload_time_iso_8601": "2014-07-10T03:07:55.509553Z", "url": "https://files.pythonhosted.org/packages/3e/54/4f6e45f09639e6361d7bc187a08b9d80fc83564fd1d66b64266b44afffea/ca_kit-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "62272bcf6ebc25b310633fe1e60dde45", "sha256": "cf7ac3e83ebb0035be353c18504b85bb73bae41b5c39626effb209829e247a8d"}, "downloads": -1, "filename": "ca_kit-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "62272bcf6ebc25b310633fe1e60dde45", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 13298, "upload_time": "2014-07-10T03:50:37", "upload_time_iso_8601": "2014-07-10T03:50:37.979704Z", "url": "https://files.pythonhosted.org/packages/37/ce/bd87cbafa2360e2d21e8c1c36fb7a87123d8dbf9190a07eb8f48c1fe7452/ca_kit-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d05f19edcf575e190e802bbb000cc93", "sha256": "e534132da8c616a32704a88fac8183d509bc73590351366fda05e64b82afb075"}, "downloads": -1, "filename": "ca_kit-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9d05f19edcf575e190e802bbb000cc93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5319, "upload_time": "2014-07-10T03:50:35", "upload_time_iso_8601": "2014-07-10T03:50:35.735811Z", "url": "https://files.pythonhosted.org/packages/f5/79/5e6ff5b9c08540af5bd95b9831ebf72df7e10b68a337a641e4868ed8fc4e/ca_kit-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "62272bcf6ebc25b310633fe1e60dde45", "sha256": "cf7ac3e83ebb0035be353c18504b85bb73bae41b5c39626effb209829e247a8d"}, "downloads": -1, "filename": "ca_kit-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "62272bcf6ebc25b310633fe1e60dde45", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 13298, "upload_time": "2014-07-10T03:50:37", "upload_time_iso_8601": "2014-07-10T03:50:37.979704Z", "url": "https://files.pythonhosted.org/packages/37/ce/bd87cbafa2360e2d21e8c1c36fb7a87123d8dbf9190a07eb8f48c1fe7452/ca_kit-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d05f19edcf575e190e802bbb000cc93", "sha256": "e534132da8c616a32704a88fac8183d509bc73590351366fda05e64b82afb075"}, "downloads": -1, "filename": "ca_kit-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9d05f19edcf575e190e802bbb000cc93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5319, "upload_time": "2014-07-10T03:50:35", "upload_time_iso_8601": "2014-07-10T03:50:35.735811Z", "url": "https://files.pythonhosted.org/packages/f5/79/5e6ff5b9c08540af5bd95b9831ebf72df7e10b68a337a641e4868ed8fc4e/ca_kit-0.2.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:40 2020"}