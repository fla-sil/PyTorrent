{"info": {"author": "MEADez", "author_email": "m3adez@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "===================================================\nBTC Template Tables\n===================================================\n\nSome classes for for describing tables with an auto-generated template.\n\nDetailed documentation is in the \"docs\" directory.\n\nQuick start\n-----------\n\n1. Add \"template_tables\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = (\n          ...\n          'template_tables',\n      )\n\n2. Create table class::\n\n    class MyTable(BaseTemplateTable):\n\n        css_classes = ['template-tables', 'mdl-data-table', 'mdl-js-data-table']\n        empty_table_text = '\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445'\n\n        def get_header_rows(self) -> List[TableRowType]:\n            [TR([\n                TH(''),\n                MDLNonNumericTH('\u0423\u0447.', ordering='section'),\n                MDLNonNumericTH('\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442', ordering='invoices__unique_num'),\n                MDLNonNumericTH('\u041a\u041f\u0422\u041f', ordering='process_map__unique_number'),\n                MDLNonNumericTH('\u0410\u0440\u0442\u0438\u043a\u0443\u043b \u0414\u0421\u0415', ordering='invoices__product__vendor_code'),\n                MDLNonNumericTH('\u041d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435', ordering='invoices__product__name'),\n                TH('\u041a\u043e\u043b-\u0432\u043e (\u0448\u0442.)', ordering='invoices__product__count'),\n                TH('\u0412\u0435\u0441 (\u043a\u0433)', ordering='invoices__product__weight'),\n                MDLNonNumericTH('\u041c\u0435\u0441\u0442\u043e', ordering='invoices__product__storage__name'),\n            ])]\n\n        def get_body_row(self, index: int, data_item: Any) -> TableRowType:\n            invoice = data_item.get_invoice()\n            product = safety_get_attribute(invoice, 'product')\n            invoice_unique_number = f'{invoice.get_document_type_display()}-{invoice.unique_num}' if invoice else None\n\n            transition_btn = ARSimpleLink(\n                icon=ARMaterialIcon('chevron_right'),\n                css_classes=['table-transition-btn'],\n                html_params=dict(href=reverse('dispatcher:task_details:selected-products', kwargs=dict(pk=data_item.pk)))\n            )\n\n            return TR([\n                MDLNonNumericTD(transition_btn),\n                MDLNonNumericTD(data_item.section),\n                MDLNonNumericTD(invoice_unique_number),\n                MDLNonNumericTD(safety_get_attribute(data_item, 'process_map')),\n                MDLNonNumericTD(safety_get_attribute(product, 'vendor_code')),\n                MDLNonNumericTD(safety_get_attribute(product, 'name')),\n                TD(safety_get_attribute(product, 'count')),\n                TD(safety_get_attribute(product, 'weight')),\n                MDLNonNumericTD(safety_get_attribute(product, 'storage__name')),\n            ])\n\n3. Define view - `ListView` or `FilterView`::\n\n    class MyTableView(TemplateTableViewMixin, FilterView):\n\n        model = MyModel\n        filterset_class = MyTableFilter\n        table_class = MyTable\n        template_name = 'tables/template_table_base.html'\n\n        def get_queryset(self):\n            return super().get_queryset().get_pretty_qs()\n\n    # For ordering and searching, the django-filter package is used.\n    # Order filter:\n\n    _base_task_table_searching_fields = [\n        'section',\n        'invoices__unique_num',\n        'process_map__unique_number',\n        'invoices__product__vendor_code',\n        'invoices__product__name',\n        'invoices__product__count',\n        'invoices__product__weight',\n        'invoices__product__storage__name'\n    ]\n\n    class MyTableFilter(FilterSet):\n\n        ordering = OrderingFilter(\n            fields=tuple(\n                (field_name, field_name) for field_name in _base_task_table_searching_fields\n            )\n        )\n\n4. In template::\n\n    <!--\n    tables/template_table_base.html\n\n    That example uses btc-flex-forms for filters rendering\n    -->\n\n    <div>\n        <div>{{ filter.form.as_flex }}</div>\n        <div>{{ table.render }}</div>\n        <div>{{ pagination.render }}</div>\n    </div>\n\n    <!-- Note: To transform table to ajax-table just you simple js-handler for link click events -->\n\nExample:\n\n.. image:: https://user-images.githubusercontent.com/33987296/74619321-2cd5ef80-5146-11ea-8e7b-28ddf929541d.png", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MEADez/btc-template-tables", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "btc-template-tables", "package_url": "https://pypi.org/project/btc-template-tables/", "platform": "", "project_url": "https://pypi.org/project/btc-template-tables/", "project_urls": {"Homepage": "https://github.com/MEADez/btc-template-tables"}, "release_url": "https://pypi.org/project/btc-template-tables/0.4.2/", "requires_dist": null, "requires_python": "", "summary": "Some classes for for describing tables with an auto-generated template.", "version": "0.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Some classes for for describing tables with an auto-generated template.</p>\n<p>Detailed documentation is in the \u201cdocs\u201d directory.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li><p>Add \u201ctemplate_tables\u201d to your INSTALLED_APPS setting like this:</p>\n<pre>INSTALLED_APPS = (\n      ...\n      'template_tables',\n  )\n</pre>\n</li>\n<li><p>Create table class:</p>\n<pre>class MyTable(BaseTemplateTable):\n\n    css_classes = ['template-tables', 'mdl-data-table', 'mdl-js-data-table']\n    empty_table_text = '\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445'\n\n    def get_header_rows(self) -&gt; List[TableRowType]:\n        [TR([\n            TH(''),\n            MDLNonNumericTH('\u0423\u0447.', ordering='section'),\n            MDLNonNumericTH('\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442', ordering='invoices__unique_num'),\n            MDLNonNumericTH('\u041a\u041f\u0422\u041f', ordering='process_map__unique_number'),\n            MDLNonNumericTH('\u0410\u0440\u0442\u0438\u043a\u0443\u043b \u0414\u0421\u0415', ordering='invoices__product__vendor_code'),\n            MDLNonNumericTH('\u041d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435', ordering='invoices__product__name'),\n            TH('\u041a\u043e\u043b-\u0432\u043e (\u0448\u0442.)', ordering='invoices__product__count'),\n            TH('\u0412\u0435\u0441 (\u043a\u0433)', ordering='invoices__product__weight'),\n            MDLNonNumericTH('\u041c\u0435\u0441\u0442\u043e', ordering='invoices__product__storage__name'),\n        ])]\n\n    def get_body_row(self, index: int, data_item: Any) -&gt; TableRowType:\n        invoice = data_item.get_invoice()\n        product = safety_get_attribute(invoice, 'product')\n        invoice_unique_number = f'{invoice.get_document_type_display()}-{invoice.unique_num}' if invoice else None\n\n        transition_btn = ARSimpleLink(\n            icon=ARMaterialIcon('chevron_right'),\n            css_classes=['table-transition-btn'],\n            html_params=dict(href=reverse('dispatcher:task_details:selected-products', kwargs=dict(pk=data_item.pk)))\n        )\n\n        return TR([\n            MDLNonNumericTD(transition_btn),\n            MDLNonNumericTD(data_item.section),\n            MDLNonNumericTD(invoice_unique_number),\n            MDLNonNumericTD(safety_get_attribute(data_item, 'process_map')),\n            MDLNonNumericTD(safety_get_attribute(product, 'vendor_code')),\n            MDLNonNumericTD(safety_get_attribute(product, 'name')),\n            TD(safety_get_attribute(product, 'count')),\n            TD(safety_get_attribute(product, 'weight')),\n            MDLNonNumericTD(safety_get_attribute(product, 'storage__name')),\n        ])\n</pre>\n</li>\n<li><p>Define view - <cite>ListView</cite> or <cite>FilterView</cite>:</p>\n<pre>class MyTableView(TemplateTableViewMixin, FilterView):\n\n    model = MyModel\n    filterset_class = MyTableFilter\n    table_class = MyTable\n    template_name = 'tables/template_table_base.html'\n\n    def get_queryset(self):\n        return super().get_queryset().get_pretty_qs()\n\n# For ordering and searching, the django-filter package is used.\n# Order filter:\n\n_base_task_table_searching_fields = [\n    'section',\n    'invoices__unique_num',\n    'process_map__unique_number',\n    'invoices__product__vendor_code',\n    'invoices__product__name',\n    'invoices__product__count',\n    'invoices__product__weight',\n    'invoices__product__storage__name'\n]\n\nclass MyTableFilter(FilterSet):\n\n    ordering = OrderingFilter(\n        fields=tuple(\n            (field_name, field_name) for field_name in _base_task_table_searching_fields\n        )\n    )\n</pre>\n</li>\n<li><p>In template:</p>\n<pre>&lt;!--\ntables/template_table_base.html\n\nThat example uses btc-flex-forms for filters rendering\n--&gt;\n\n&lt;div&gt;\n    &lt;div&gt;{{ filter.form.as_flex }}&lt;/div&gt;\n    &lt;div&gt;{{ table.render }}&lt;/div&gt;\n    &lt;div&gt;{{ pagination.render }}&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;!-- Note: To transform table to ajax-table just you simple js-handler for link click events --&gt;\n</pre>\n</li>\n</ol>\n<p>Example:</p>\n<img alt=\"https://user-images.githubusercontent.com/33987296/74619321-2cd5ef80-5146-11ea-8e7b-28ddf929541d.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f7a17ad17593185ee6569c4b783bb1432f431c2/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f33333938373239362f37343631393332312d32636435656638302d353134362d313165612d386537622d3238646466393239353431642e706e67\">\n</div>\n\n          </div>"}, "last_serial": 6793933, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1b51a7f9f599f4c4d77aecb149eaaf55", "sha256": "2a5df70daa56fd81df8c23126b61636153aa4ad654746dac9800954125da6d49"}, "downloads": -1, "filename": "btc-template-tables-0.1.tar.gz", "has_sig": false, "md5_digest": "1b51a7f9f599f4c4d77aecb149eaaf55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7553, "upload_time": "2020-02-13T08:19:05", "upload_time_iso_8601": "2020-02-13T08:19:05.136298Z", "url": "https://files.pythonhosted.org/packages/23/b4/487c13d456ff585518f683dc605870cf01d0157c0354fe706fb5a449cb17/btc-template-tables-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "acb2047d3d1e1194d6b501635c2cfc86", "sha256": "cd348b76310e829ede7456887f5988a3054a522b3a0a26f7a769702d21ce6ad7"}, "downloads": -1, "filename": "btc-template-tables-0.2.tar.gz", "has_sig": false, "md5_digest": "acb2047d3d1e1194d6b501635c2cfc86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7568, "upload_time": "2020-02-14T08:04:10", "upload_time_iso_8601": "2020-02-14T08:04:10.263830Z", "url": "https://files.pythonhosted.org/packages/47/94/277d33b7b273d59da1c46f6ff94ed9e32da448d90b6a398f17cd067a8456/btc-template-tables-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "2296f5df27bd5320e063869d0a19d37a", "sha256": "963c605165e2fc30f7e535c2187c77b97abef59ba46451a8a13684315fa6bdc8"}, "downloads": -1, "filename": "btc-template-tables-0.3.tar.gz", "has_sig": false, "md5_digest": "2296f5df27bd5320e063869d0a19d37a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6597, "upload_time": "2020-02-17T01:38:21", "upload_time_iso_8601": "2020-02-17T01:38:21.717542Z", "url": "https://files.pythonhosted.org/packages/92/77/65bcbac938c4f531fdcf67deb208db2f1aa3d49cadb4734412f8714fe3b3/btc-template-tables-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "4f8f594668bb2737327fc81c0339fc32", "sha256": "7b3f498d9c3a773bf58684d123038c9fd30194885875787c14dd7a035425c7aa"}, "downloads": -1, "filename": "btc-template-tables-0.4.tar.gz", "has_sig": false, "md5_digest": "4f8f594668bb2737327fc81c0339fc32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8145, "upload_time": "2020-02-17T15:21:38", "upload_time_iso_8601": "2020-02-17T15:21:38.767205Z", "url": "https://files.pythonhosted.org/packages/36/cf/138ae6dae512ff29311bf1a8653b70837b2d75737a0a05a0da749821ca51/btc-template-tables-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "e6413812b2486ccc00e8e97ae50f5057", "sha256": "b81eb8822e1400276c94319dbaae10a93738ba25ca7aa8bd50db4b8c7fa40a02"}, "downloads": -1, "filename": "btc-template-tables-0.4.1.tar.gz", "has_sig": false, "md5_digest": "e6413812b2486ccc00e8e97ae50f5057", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8207, "upload_time": "2020-03-10T14:06:36", "upload_time_iso_8601": "2020-03-10T14:06:36.705239Z", "url": "https://files.pythonhosted.org/packages/f1/e8/4c7d54a0345b0067a1a92daf647fb85688240d684c3237c71b5901edb793/btc-template-tables-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "9a98231870277d01e1f89b60a49c2d5d", "sha256": "c995030ca704438ddfd47199b8428e6056f8972a06e2a2456e4ba991da28cbce"}, "downloads": -1, "filename": "btc-template-tables-0.4.2.tar.gz", "has_sig": false, "md5_digest": "9a98231870277d01e1f89b60a49c2d5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8691, "upload_time": "2020-03-11T17:30:46", "upload_time_iso_8601": "2020-03-11T17:30:46.706642Z", "url": "https://files.pythonhosted.org/packages/f9/13/23f47b24ad5fe8e5e62c9379d7b90eca1f24409faba854fbfcb2ae4db0e8/btc-template-tables-0.4.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9a98231870277d01e1f89b60a49c2d5d", "sha256": "c995030ca704438ddfd47199b8428e6056f8972a06e2a2456e4ba991da28cbce"}, "downloads": -1, "filename": "btc-template-tables-0.4.2.tar.gz", "has_sig": false, "md5_digest": "9a98231870277d01e1f89b60a49c2d5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8691, "upload_time": "2020-03-11T17:30:46", "upload_time_iso_8601": "2020-03-11T17:30:46.706642Z", "url": "https://files.pythonhosted.org/packages/f9/13/23f47b24ad5fe8e5e62c9379d7b90eca1f24409faba854fbfcb2ae4db0e8/btc-template-tables-0.4.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:10 2020"}