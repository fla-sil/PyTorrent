{"info": {"author": "Nikolay Kim", "author_email": "fafhrd91@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: AsyncIO", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Rust", "Topic :: Internet :: WWW/HTTP"], "description": "Asyncio event loop based on tokio-rs (WIP) |Build Status| |Join the dev chat at https://gitter.im/PyO3/Lobby|\n=============================================================================================================\n\nasync-tokio is a drop-in replacement of the built-in asyncio event loop. async-tokio is implemented in rust and uses tokio-rs under the hood and `PyO3 python binding <https://github.com/PyO3/pyo3>`_.\n\n\nUsing tokio loop\n----------------\n\nYou can create an instance of the loop manually, using:\n\n.. code:: python\n\n    import tokio\n    \n    policy = tokio.EventLoopPolicy()\n    asyncio.set_event_loop_policy(policy)\n\n\nDevelopment of tokio loop\n-------------------------\n\nTo build tokio loop, you'll need rust `nightly` and Python 3.6.  The best way\nis to create a virtual env, so that you'll have ``python`` commands pointing to the correct tools.\n\n1. ``git clone git@github.com:PyO3/tokio.git``\n\n2. ``cd tokio``\n\n3. ``make build``\n\n4. ``make test``\n\n\nStatus\n------\n\nAt the moment async-tokio works on unix like systems only.\nSupported api:\n\n* time api (call_at, call_later)\n* sockets api (sock_xxx methods)\n* tcp (client/server)\n* unix domain socket\n* dns\n* pipes\n* subprocess\n* signals\n* executors\n\nUDP support is missing.\n\n\nLicense\n-------\n\n``async-tokio`` is offered under the Apache 2.0 licenses.\n\n\n.. |Build Status| image:: https://travis-ci.org/PyO3/tokio.svg?branch=master\n                  :target: https://travis-ci.org/PyO3/tokio\n.. |Join the dev chat at https://gitter.im/PyO3/Lobby| image:: https://img.shields.io/gitter/room/nwjs/nw.js.svg\n   :target: https://gitter.im/PyO3/Lobby\n\nCHANGES\n-------\n\n\n0.2.0 (07-23-2017)\n^^^^^^^^^^^^^^^^^^\n\n* Use pyo3 python binding `PyO3` python binding.\n\n* Implement more asyncio APIs\n\n0.1.0\n^^^^^\n\nInitial release", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PyO3/tokio/", "keywords": "", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "tokio", "package_url": "https://pypi.org/project/tokio/", "platform": "", "project_url": "https://pypi.org/project/tokio/", "project_urls": {"Homepage": "https://github.com/PyO3/tokio/"}, "release_url": "https://pypi.org/project/tokio/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Asyncio event loop written in Rust language", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>async-tokio is a drop-in replacement of the built-in asyncio event loop. async-tokio is implemented in rust and uses tokio-rs under the hood and <a href=\"https://github.com/PyO3/pyo3\" rel=\"nofollow\">PyO3 python binding</a>.</p>\n<div id=\"using-tokio-loop\">\n<h2>Using tokio loop</h2>\n<p>You can create an instance of the loop manually, using:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tokio</span>\n\n<span class=\"n\">policy</span> <span class=\"o\">=</span> <span class=\"n\">tokio</span><span class=\"o\">.</span><span class=\"n\">EventLoopPolicy</span><span class=\"p\">()</span>\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">set_event_loop_policy</span><span class=\"p\">(</span><span class=\"n\">policy</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"development-of-tokio-loop\">\n<h2>Development of tokio loop</h2>\n<p>To build tokio loop, you\u2019ll need rust <cite>nightly</cite> and Python 3.6.  The best way\nis to create a virtual env, so that you\u2019ll have <tt>python</tt> commands pointing to the correct tools.</p>\n<ol>\n<li><tt>git clone git@github.com:PyO3/tokio.git</tt></li>\n<li><tt>cd tokio</tt></li>\n<li><tt>make build</tt></li>\n<li><tt>make test</tt></li>\n</ol>\n</div>\n<div id=\"status\">\n<h2>Status</h2>\n<p>At the moment async-tokio works on unix like systems only.\nSupported api:</p>\n<ul>\n<li>time api (call_at, call_later)</li>\n<li>sockets api (sock_xxx methods)</li>\n<li>tcp (client/server)</li>\n<li>unix domain socket</li>\n<li>dns</li>\n<li>pipes</li>\n<li>subprocess</li>\n<li>signals</li>\n<li>executors</li>\n</ul>\n<p>UDP support is missing.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><tt><span class=\"pre\">async-tokio</span></tt> is offered under the Apache 2.0 licenses.</p>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>0.2.0 (07-23-2017)</h3>\n<ul>\n<li>Use pyo3 python binding <cite>PyO3</cite> python binding.</li>\n<li>Implement more asyncio APIs</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.0</h3>\n<p>Initial release</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3043517, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "aea2101dd3b1aadaf46cd8812aade15f", "sha256": "f96bdcf5fb2c806077ce35e9e3a086757e3cf1eef372f32d992916071e64430d"}, "downloads": -1, "filename": "tokio-0.1.0.tar.gz", "has_sig": false, "md5_digest": "aea2101dd3b1aadaf46cd8812aade15f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94797, "upload_time": "2017-05-10T17:42:47", "upload_time_iso_8601": "2017-05-10T17:42:47.777305Z", "url": "https://files.pythonhosted.org/packages/b0/e0/6a4d494e689c670c2b39ac7b752f2b31f00df15b67fc18680528bb9b3624/tokio-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c0bdd2dd7f3ecc80ff97c8625ec2fb61", "sha256": "94bf11cbcfaefa1d5f90232fd8f1dd9a26aca64de41845c0d9d058a5fea92f50"}, "downloads": -1, "filename": "tokio-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c0bdd2dd7f3ecc80ff97c8625ec2fb61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102343, "upload_time": "2017-07-23T20:00:27", "upload_time_iso_8601": "2017-07-23T20:00:27.688374Z", "url": "https://files.pythonhosted.org/packages/38/79/7039fb417ab95d511bca9389cb459c1298e3227389a1fc27a417ab9791a8/tokio-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c0bdd2dd7f3ecc80ff97c8625ec2fb61", "sha256": "94bf11cbcfaefa1d5f90232fd8f1dd9a26aca64de41845c0d9d058a5fea92f50"}, "downloads": -1, "filename": "tokio-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c0bdd2dd7f3ecc80ff97c8625ec2fb61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102343, "upload_time": "2017-07-23T20:00:27", "upload_time_iso_8601": "2017-07-23T20:00:27.688374Z", "url": "https://files.pythonhosted.org/packages/38/79/7039fb417ab95d511bca9389cb459c1298e3227389a1fc27a417ab9791a8/tokio-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:51:23 2020"}