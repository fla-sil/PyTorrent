{"info": {"author": "Fabian-Robert Stoeter, Antoine Liutkus", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools"], "description": "# Norbert\n\n[![Build Status](https://travis-ci.com/sigsep/norbert.svg?branch=master)](https://travis-ci.com/sigsep/norbert)\n[![Latest Version](https://img.shields.io/pypi/v/norbert.svg)](https://pypi.python.org/pypi/norbert)\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/norbert.svg)](https://pypi.python.org/pypi/norbert)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3269749.svg)](https://doi.org/10.5281/zenodo.3269749)\n\n<img align=\"left\" src=\"https://user-images.githubusercontent.com/72940/45908695-15ce8900-bdfe-11e8-8420-78ad9bb32f84.jpg\">\n\nNorbert is an implementation of multichannel Wiener filter, that is a very popular way of filtering multichannel audio for several applications, notably speech enhancement and source separation.\n\nThis filtering method assumes you have some way of estimating power or magnitude spectrograms for all the audio sources (non-negative) composing a mixture. If you only have a model for some _target_ sources, and not for the rest, you may use `norbert.residual_model` to let Norbert create a residual model for you.\n\nGiven all source spectrograms and the mixture Time-Frequency representation, this repository can build and apply the filter that is appropriate for separation, by optimally exploiting multichannel information (like in stereo signals). This is done in an iterative procedure called _Expectation Maximization_, where filtering and re-estimation of the parameters are iterated.\n\nFrom a beginner's perspective, all you need to do is often to call `norbert.wiener` with the mix and your spectrogram estimates. This should handle the rest.\n\nFrom a more expert perspective, you will find the different ingredients from the EM algorithm as functions in the module as described in the [API documentation](https://sigsep.github.io/norbert/)\n\n## Installation\n\n`pip install norbert`\n\n## Usage\n\nAsssuming a complex spectrogram `X`, and a (magnitude) estimate of a target to be extracted from the spectrogram, performing the multichannel wiener filter is as simple as this:\n\n```python\nX = stft(audio)\nV = model(X)\nY = norbert.wiener(V, X)\nestimate = istft(Y)\n```\n\n## How to contribute\n\n_norbert_ is a community focused project, we therefore encourage the community to submit bug-fixes and requests for technical support through [github issues](https://github.com/sigsep/norbert/issues/new). For more details of how to contribute, please follow our [`CONTRIBUTING.md`](CONTRIBUTING.md). \n\n## Authors\n\nAntoine Liutkus, Fabian-Robert St\u00f6ter\n\n## Citation\n\nIf you want to cite the _Norbert_ software package, please use the DOI from Zenodo:\n\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3269749.svg)](https://doi.org/10.5281/zenodo.3269749)\n\n## License\n\nMIT\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sigsep/norbert", "keywords": "wiener filter", "license": "", "maintainer": "", "maintainer_email": "", "name": "norbert", "package_url": "https://pypi.org/project/norbert/", "platform": "", "project_url": "https://pypi.org/project/norbert/", "project_urls": {"Bug Reports": "https://github.com/sigsep/norbert/issues", "Homepage": "https://github.com/sigsep/norbert"}, "release_url": "https://pypi.org/project/norbert/0.2.1/", "requires_dist": ["scipy", "check-manifest ; extra == 'dev'", "sphinx ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'", "recommonmark ; extra == 'docs'", "numpydoc ; extra == 'docs'", "pytest ; extra == 'tests'", "pytest-pep8 ; extra == 'tests'"], "requires_python": "", "summary": "Painless Wiener Filters", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Norbert</h1>\n<p><a href=\"https://travis-ci.com/sigsep/norbert\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/afc058ef1c671394fe1b1d3c2c45af00945a8023/68747470733a2f2f7472617669732d63692e636f6d2f7369677365702f6e6f72626572742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/norbert\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc9aa2b9cf746801ff0194eb1d40746b999ff022/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6e6f72626572742e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/norbert\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a39d37b9b46fd3e31bfd37c9470344813f9a36ad/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6e6f72626572742e737667\"></a>\n<a href=\"https://doi.org/10.5281/zenodo.3269749\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0914fbbed16dfa79a4b9e5680a0c839d3ba8be9/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e333236393734392e737667\"></a></p>\n<img align=\"left\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bbc0bcf11c5e870ffc09196cc8223ced1c115439/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f37323934302f34353930383639352d31356365383930302d626466652d313165382d383432302d3738616439626233326638342e6a7067\">\n<p>Norbert is an implementation of multichannel Wiener filter, that is a very popular way of filtering multichannel audio for several applications, notably speech enhancement and source separation.</p>\n<p>This filtering method assumes you have some way of estimating power or magnitude spectrograms for all the audio sources (non-negative) composing a mixture. If you only have a model for some <em>target</em> sources, and not for the rest, you may use <code>norbert.residual_model</code> to let Norbert create a residual model for you.</p>\n<p>Given all source spectrograms and the mixture Time-Frequency representation, this repository can build and apply the filter that is appropriate for separation, by optimally exploiting multichannel information (like in stereo signals). This is done in an iterative procedure called <em>Expectation Maximization</em>, where filtering and re-estimation of the parameters are iterated.</p>\n<p>From a beginner's perspective, all you need to do is often to call <code>norbert.wiener</code> with the mix and your spectrogram estimates. This should handle the rest.</p>\n<p>From a more expert perspective, you will find the different ingredients from the EM algorithm as functions in the module as described in the <a href=\"https://sigsep.github.io/norbert/\" rel=\"nofollow\">API documentation</a></p>\n<h2>Installation</h2>\n<p><code>pip install norbert</code></p>\n<h2>Usage</h2>\n<p>Asssuming a complex spectrogram <code>X</code>, and a (magnitude) estimate of a target to be extracted from the spectrogram, performing the multichannel wiener filter is as simple as this:</p>\n<pre><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">stft</span><span class=\"p\">(</span><span class=\"n\">audio</span><span class=\"p\">)</span>\n<span class=\"n\">V</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span>\n<span class=\"n\">Y</span> <span class=\"o\">=</span> <span class=\"n\">norbert</span><span class=\"o\">.</span><span class=\"n\">wiener</span><span class=\"p\">(</span><span class=\"n\">V</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"p\">)</span>\n<span class=\"n\">estimate</span> <span class=\"o\">=</span> <span class=\"n\">istft</span><span class=\"p\">(</span><span class=\"n\">Y</span><span class=\"p\">)</span>\n</pre>\n<h2>How to contribute</h2>\n<p><em>norbert</em> is a community focused project, we therefore encourage the community to submit bug-fixes and requests for technical support through <a href=\"https://github.com/sigsep/norbert/issues/new\" rel=\"nofollow\">github issues</a>. For more details of how to contribute, please follow our <a href=\"CONTRIBUTING.md\" rel=\"nofollow\"><code>CONTRIBUTING.md</code></a>.</p>\n<h2>Authors</h2>\n<p>Antoine Liutkus, Fabian-Robert St\u00f6ter</p>\n<h2>Citation</h2>\n<p>If you want to cite the <em>Norbert</em> software package, please use the DOI from Zenodo:</p>\n<p><a href=\"https://doi.org/10.5281/zenodo.3269749\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0914fbbed16dfa79a4b9e5680a0c839d3ba8be9/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e333236393734392e737667\"></a></p>\n<h2>License</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 5782878, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "8cdde19915ca2bf449c2f3810f7e5746", "sha256": "f7fce1b9ad91bb7e91dd460693fdc970e789aa73de9ffae5fec87b4e6657a0ac"}, "downloads": -1, "filename": "norbert-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8cdde19915ca2bf449c2f3810f7e5746", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11354, "upload_time": "2019-07-05T14:28:58", "upload_time_iso_8601": "2019-07-05T14:28:58.391609Z", "url": "https://files.pythonhosted.org/packages/8c/1f/669b7f1ca2ab69416ba74cb22a09ef9832cd8caef1b2f0c747de9efb9722/norbert-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d362a6ca96907e1e513b51c0cbf75495", "sha256": "31ac64cc5f68e34bfa5b65815b436b0aa53756efc081c139326b80bfc5de5a1e"}, "downloads": -1, "filename": "norbert-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d362a6ca96907e1e513b51c0cbf75495", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10141, "upload_time": "2019-07-05T14:29:00", "upload_time_iso_8601": "2019-07-05T14:29:00.675257Z", "url": "https://files.pythonhosted.org/packages/31/bc/ef3b4b4866e8bfb264d4278de66cfea478102bae9f4df84402ad4e89a020/norbert-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "212d6ba983e217349b474f8207826997", "sha256": "409ac3f173cfb1fdaad21563b8f730d7cbe01af81349bcd96fb2b8b9d5f74339"}, "downloads": -1, "filename": "norbert-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "212d6ba983e217349b474f8207826997", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11593, "upload_time": "2019-09-04T18:48:25", "upload_time_iso_8601": "2019-09-04T18:48:25.781430Z", "url": "https://files.pythonhosted.org/packages/22/85/1e4f09c84d28b5541a4a8eece320902c4d2fa264dfe51f779548396f0fea/norbert-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abef455452b32851c8996e0fffe333bb", "sha256": "bd4cbc2527f0550b81bf4265c1a64b352cab7f71e4e3c823d30b71a7368de74e"}, "downloads": -1, "filename": "norbert-0.2.1.tar.gz", "has_sig": false, "md5_digest": "abef455452b32851c8996e0fffe333bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10081, "upload_time": "2019-09-04T18:48:27", "upload_time_iso_8601": "2019-09-04T18:48:27.559423Z", "url": "https://files.pythonhosted.org/packages/2c/a0/397cf82cfd0dcb73b2d6a8230ea89f8a4ff9c1c42cb97143cb867bebd6a5/norbert-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "212d6ba983e217349b474f8207826997", "sha256": "409ac3f173cfb1fdaad21563b8f730d7cbe01af81349bcd96fb2b8b9d5f74339"}, "downloads": -1, "filename": "norbert-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "212d6ba983e217349b474f8207826997", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11593, "upload_time": "2019-09-04T18:48:25", "upload_time_iso_8601": "2019-09-04T18:48:25.781430Z", "url": "https://files.pythonhosted.org/packages/22/85/1e4f09c84d28b5541a4a8eece320902c4d2fa264dfe51f779548396f0fea/norbert-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abef455452b32851c8996e0fffe333bb", "sha256": "bd4cbc2527f0550b81bf4265c1a64b352cab7f71e4e3c823d30b71a7368de74e"}, "downloads": -1, "filename": "norbert-0.2.1.tar.gz", "has_sig": false, "md5_digest": "abef455452b32851c8996e0fffe333bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10081, "upload_time": "2019-09-04T18:48:27", "upload_time_iso_8601": "2019-09-04T18:48:27.559423Z", "url": "https://files.pythonhosted.org/packages/2c/a0/397cf82cfd0dcb73b2d6a8230ea89f8a4ff9c1c42cb97143cb867bebd6a5/norbert-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:50 2020"}