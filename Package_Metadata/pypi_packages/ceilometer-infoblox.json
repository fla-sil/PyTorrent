{"info": {"author": "Infoblox, Inc.", "author_email": "openstack-maintainer@infoblox.com", "bugtrack_url": null, "classifiers": ["Environment :: OpenStack", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "===============================\nceilometer-infoblox\n===============================\n\nInfoblox Custom Meters for Ceilometer\n\nThis package provides files used by OpenStack Ceilometer to monitor various DNS\nand DHCP metrics from Infoblox NIOS instances. With this package installed\nand configured, the Ceilometer Compute Agent will poll local NIOS instances\nvia SNMP, and store the results as samples with metric names starting with\n'nios.dns' and 'nios.dhcp'.\n\n* Free software: Apache license\n\nFeatures\n--------\n\nThis module enables SNMP polling of NIOS instances to collect DNS and DHCP\nmetrics.\n\nOpenStack Configuration\n-----------------------\n\nAfter installing the package, you must configure Ceilometer with the SNMP\ncredentials, as well as tell it how to reach the NIOS machines.\n\nSince the Ceilometer agent is running within the address space of the host\nnode, the grid member IP address used must be reachable from the host. This\ncan be done by allocating the IP on an external network, or by using a floating\nIP.\n\nBy default, the first floating IP for a given instance will be used for SNMP\naccess. To override this behavior, you can set a ``infoblox-snmp-ip`` metadata\nvalue on the instance.\n\nSimilarly, you may set the default SNMP community, password, and port in a\n``[infoblox]`` stanza within the ``ceilometer.conf`` file, or you can set them\non a per-instance basis using instance metadata.\n\nThe table below summarizes the different options.\n\n.. list-table::\n   :header-rows: 1\n   :widths: 15 15 70\n\n   * - Config File Variable\n     - Instance Metadata Name\n     - Description\n   * - metadata_name\n     - N/A\n     - The name of the instance metadata item used to identify an instance as\n       an Infoblox DDI appliance. Default value is ``infoblox``.\n   * - N/A\n     - infoblox-snmp-ip\n     - By default the first floating IP found is used; set this value on the\n       instance to specify a particular IP to be used for SNMP access.\n   * - snmp_community_or_username\n     - infoblox-snmp-community\n     - The SNMP community for v2c, or the user name for SNMPv3. The default\n       value is ``public``.\n   * - snmp_password\n     - infoblox-snmp-password\n     - The SNMP password for SNMPv3.\n   * - snmp_port\n     - infoblox-snmp-port\n     - The port to use for SNMP polling. Default value is ``161``.\n\nYou must also configure the security groups to allow UDP traffic to port 161\non the NIOS instances, from the host IP network.\n\nInfoblox NIOS Configuration\n---------------------------\n\nYou must enable SNMP for the grid or for the specific members which you would\nlike to poll. This is done in the Grid > Grid Manager screen, using the Grid\nProperties button on the right-hand toolbar. This brings up an editor from\nwhich you can select SNMP, enable it, and enter a community string.\n\nCurrently only SNMPv2c is tested.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/infobloxopen/ceilometer-infoblox", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "ceilometer-infoblox", "package_url": "https://pypi.org/project/ceilometer-infoblox/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ceilometer-infoblox/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/infobloxopen/ceilometer-infoblox"}, "release_url": "https://pypi.org/project/ceilometer-infoblox/2.0.0/", "requires_dist": null, "requires_python": null, "summary": "Infoblox custom meters for Ceilometer (Liberty)", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Infoblox Custom Meters for Ceilometer</p>\n<p>This package provides files used by OpenStack Ceilometer to monitor various DNS\nand DHCP metrics from Infoblox NIOS instances. With this package installed\nand configured, the Ceilometer Compute Agent will poll local NIOS instances\nvia SNMP, and store the results as samples with metric names starting with\n\u2018nios.dns\u2019 and \u2018nios.dhcp\u2019.</p>\n<ul>\n<li>Free software: Apache license</li>\n</ul>\n<div id=\"features\">\n<h2>Features</h2>\n<p>This module enables SNMP polling of NIOS instances to collect DNS and DHCP\nmetrics.</p>\n</div>\n<div id=\"openstack-configuration\">\n<h2>OpenStack Configuration</h2>\n<p>After installing the package, you must configure Ceilometer with the SNMP\ncredentials, as well as tell it how to reach the NIOS machines.</p>\n<p>Since the Ceilometer agent is running within the address space of the host\nnode, the grid member IP address used must be reachable from the host. This\ncan be done by allocating the IP on an external network, or by using a floating\nIP.</p>\n<p>By default, the first floating IP for a given instance will be used for SNMP\naccess. To override this behavior, you can set a <tt><span class=\"pre\">infoblox-snmp-ip</span></tt> metadata\nvalue on the instance.</p>\n<p>Similarly, you may set the default SNMP community, password, and port in a\n<tt>[infoblox]</tt> stanza within the <tt>ceilometer.conf</tt> file, or you can set them\non a per-instance basis using instance metadata.</p>\n<p>The table below summarizes the different options.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Config File Variable</th>\n<th>Instance Metadata Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>metadata_name</td>\n<td>N/A</td>\n<td>The name of the instance metadata item used to identify an instance as\nan Infoblox DDI appliance. Default value is <tt>infoblox</tt>.</td>\n</tr>\n<tr><td>N/A</td>\n<td>infoblox-snmp-ip</td>\n<td>By default the first floating IP found is used; set this value on the\ninstance to specify a particular IP to be used for SNMP access.</td>\n</tr>\n<tr><td>snmp_community_or_username</td>\n<td>infoblox-snmp-community</td>\n<td>The SNMP community for v2c, or the user name for SNMPv3. The default\nvalue is <tt>public</tt>.</td>\n</tr>\n<tr><td>snmp_password</td>\n<td>infoblox-snmp-password</td>\n<td>The SNMP password for SNMPv3.</td>\n</tr>\n<tr><td>snmp_port</td>\n<td>infoblox-snmp-port</td>\n<td>The port to use for SNMP polling. Default value is <tt>161</tt>.</td>\n</tr>\n</tbody>\n</table>\n<p>You must also configure the security groups to allow UDP traffic to port 161\non the NIOS instances, from the host IP network.</p>\n</div>\n<div id=\"infoblox-nios-configuration\">\n<h2>Infoblox NIOS Configuration</h2>\n<p>You must enable SNMP for the grid or for the specific members which you would\nlike to poll. This is done in the Grid &gt; Grid Manager screen, using the Grid\nProperties button on the right-hand toolbar. This brings up an editor from\nwhich you can select SNMP, enable it, and enter a community string.</p>\n<p>Currently only SNMPv2c is tested.</p>\n</div>\n\n          </div>"}, "last_serial": 4969403, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "5d67a98749bea24ddb89d37c8ee85773", "sha256": "2a35ea100156e0fda2f63afd3cc6e6ad93a903bef25c6465ff939801d62e1861"}, "downloads": -1, "filename": "ceilometer_infoblox-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "5d67a98749bea24ddb89d37c8ee85773", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 13924, "upload_time": "2016-08-02T18:30:17", "upload_time_iso_8601": "2016-08-02T18:30:17.941299Z", "url": "https://files.pythonhosted.org/packages/32/13/c9a0d29307fc276d98f11173f70369622d87bd0df416653341cadabe4648/ceilometer_infoblox-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8682ba986f728d6991b027d3e65e5ca6", "sha256": "6d089a5f2d6dde3c5dbd66d19df8ea2d50d7219bf435a58075eeaa03d2b7ea01"}, "downloads": -1, "filename": "ceilometer-infoblox-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8682ba986f728d6991b027d3e65e5ca6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14906, "upload_time": "2016-08-02T18:30:15", "upload_time_iso_8601": "2016-08-02T18:30:15.913001Z", "url": "https://files.pythonhosted.org/packages/0e/d7/fa2d7e5450fe478fe81f4ff2b12d7f4e3c36e671501d55c719f7bbcf4915/ceilometer-infoblox-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "9dd561dbb03da741ff80d76171f09e16", "sha256": "2484952b0d6c70ade3c1b5bc7f0fa92f1715db18c89fb90531e04716ba90bef2"}, "downloads": -1, "filename": "ceilometer_infoblox-2.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "9dd561dbb03da741ff80d76171f09e16", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 14125, "upload_time": "2016-08-02T18:33:15", "upload_time_iso_8601": "2016-08-02T18:33:15.272906Z", "url": "https://files.pythonhosted.org/packages/5b/f9/248e1d659ecdff23ab2a52537c6cfe50d072a38178d8f2320ac867b81caa/ceilometer_infoblox-2.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30466c5ae3db1d10d09b859175a38ffc", "sha256": "cb66ce2a01442d6565d4778179a09594e3b0b92eb03881fed6afa9e70f952c5f"}, "downloads": -1, "filename": "ceilometer-infoblox-2.0.0.tar.gz", "has_sig": false, "md5_digest": "30466c5ae3db1d10d09b859175a38ffc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14658, "upload_time": "2016-08-02T18:33:13", "upload_time_iso_8601": "2016-08-02T18:33:13.355747Z", "url": "https://files.pythonhosted.org/packages/eb/2f/4c2abe0f24f117409e40823a24bd0fe8766fc0bc74a6cbb018fdd9431eb7/ceilometer-infoblox-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9dd561dbb03da741ff80d76171f09e16", "sha256": "2484952b0d6c70ade3c1b5bc7f0fa92f1715db18c89fb90531e04716ba90bef2"}, "downloads": -1, "filename": "ceilometer_infoblox-2.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "9dd561dbb03da741ff80d76171f09e16", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 14125, "upload_time": "2016-08-02T18:33:15", "upload_time_iso_8601": "2016-08-02T18:33:15.272906Z", "url": "https://files.pythonhosted.org/packages/5b/f9/248e1d659ecdff23ab2a52537c6cfe50d072a38178d8f2320ac867b81caa/ceilometer_infoblox-2.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30466c5ae3db1d10d09b859175a38ffc", "sha256": "cb66ce2a01442d6565d4778179a09594e3b0b92eb03881fed6afa9e70f952c5f"}, "downloads": -1, "filename": "ceilometer-infoblox-2.0.0.tar.gz", "has_sig": false, "md5_digest": "30466c5ae3db1d10d09b859175a38ffc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14658, "upload_time": "2016-08-02T18:33:13", "upload_time_iso_8601": "2016-08-02T18:33:13.355747Z", "url": "https://files.pythonhosted.org/packages/eb/2f/4c2abe0f24f117409e40823a24bd0fe8766fc0bc74a6cbb018fdd9431eb7/ceilometer-infoblox-2.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:53 2020"}