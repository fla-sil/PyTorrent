{"info": {"author": "Meng Xiangzhuo", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# python-sqlite-orm\n\nA Python object relational mapper for SQLite.\n\n## Install\n\n```sh\npip install simple-orm\n```\n\n## Usage\n\nFollowing a basic tutorial to demonstrate how to use the ORM.\n\n1. Define a `Post` model in a `post.py` file.\n\n    ```py\n    # post.py\n    from orm import Model\n\n    class Post(Model):\n\n        text = str  # other datatypes: int, float\n\n        def __init__(self, text):\n            self.text = text\n\n    ```\n\n2. Import `Database` to create a data access object.\n\n    ```py\n    >>> from orm import Database\n    >>> db = Database('db.sqlite')  # indicating a database file.\n    ```\n\n3. Import the `Post` model and link it to the database.\n\n    ```py\n    >>> from post import Post\n    >>> Post.db = db  # see another approach in tests.py\n    ```\n\n4. Create a post and save it in the staging area (without commit) of database.\n\n    ```py\n    >>> post = Post('Hello World').save()\n    >>> print(post.id)  # auto generated id\n    1\n    ```\n\n5. Change the hello world post and update it in the database.\n\n    ```py\n    >>> post = Post.manager().get(id=1)\n    >>> post.text = 'Hello Mundo'\n    >>> post.update()\n    >>> post.text\n    Hello Mundo\n    ```\n\n6. Commit all staged operations (`save` and `update`) to the database.\n\n    ```py\n    >>> db.commit()\n    ```\n\n7. Delete the object and commit.\n\n    ```py\n    >>> post.delete()\n    >>> db.commit()\n    ```\n\n8. Create a manager that can perform CRUD operations in the database.\n\n    ```py\n    >>> objects = Post.manager(db)\n    ```\n\n9. Save and get a post.\n\n    ```py\n    >>> objects.save(Post('Hello', 'World'))\n    >>> objects.get(2)  # get by id from the staging area\n    {'text': 'World', 'id': 2, 'title': 'Hello'}\n    ```\n\n10. Close the database without commit the changes\n\n    ```py\n    >>> db.close()\n    ```\n\n11. Get all posts from database.\n\n    ```py\n    >>> list(objects.all())  # return a \"empty\" generator\n    []\n    ```\n\n## Linter\n\nCheck code lint:\n\n```sh\npip install pylint\npylint orm.py\n```\n\n## Contributing\n\nSee [CONTRIBUTING](/CONTRIBUTING.md).\n\n## License\n\n[![CC0](https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png)](https://creativecommons.org/licenses/by-nc-sa/4.0/)\n\nThe MIT License.\n\n-\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/xzmeng/simple-orm", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "simple-orm", "package_url": "https://pypi.org/project/simple-orm/", "platform": "", "project_url": "https://pypi.org/project/simple-orm/", "project_urls": {"Homepage": "https://github.com/xzmeng/simple-orm"}, "release_url": "https://pypi.org/project/simple-orm/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A simple ORM for SQLite", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>python-sqlite-orm</h1>\n<p>A Python object relational mapper for SQLite.</p>\n<h2>Install</h2>\n<pre>pip install simple-orm\n</pre>\n<h2>Usage</h2>\n<p>Following a basic tutorial to demonstrate how to use the ORM.</p>\n<ol>\n<li>\n<p>Define a <code>Post</code> model in a <code>post.py</code> file.</p>\n<pre><span class=\"c1\"># post.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">orm</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Post</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n\n    <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"nb\">str</span>  <span class=\"c1\"># other datatypes: int, float</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">text</span>\n</pre>\n</li>\n<li>\n<p>Import <code>Database</code> to create a data access object.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">orm</span> <span class=\"kn\">import</span> <span class=\"n\">Database</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">'db.sqlite'</span><span class=\"p\">)</span>  <span class=\"c1\"># indicating a database file.</span>\n</pre>\n</li>\n<li>\n<p>Import the <code>Post</code> model and link it to the database.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">post</span> <span class=\"kn\">import</span> <span class=\"n\">Post</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Post</span><span class=\"o\">.</span><span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">db</span>  <span class=\"c1\"># see another approach in tests.py</span>\n</pre>\n</li>\n<li>\n<p>Create a post and save it in the staging area (without commit) of database.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">post</span> <span class=\"o\">=</span> <span class=\"n\">Post</span><span class=\"p\">(</span><span class=\"s1\">'Hello World'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>  <span class=\"c1\"># auto generated id</span>\n<span class=\"mi\">1</span>\n</pre>\n</li>\n<li>\n<p>Change the hello world post and update it in the database.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">post</span> <span class=\"o\">=</span> <span class=\"n\">Post</span><span class=\"o\">.</span><span class=\"n\">manager</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s1\">'Hello Mundo'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"n\">Hello</span> <span class=\"n\">Mundo</span>\n</pre>\n</li>\n<li>\n<p>Commit all staged operations (<code>save</code> and <code>update</code>) to the database.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Delete the object and commit.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Create a manager that can perform CRUD operations in the database.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">objects</span> <span class=\"o\">=</span> <span class=\"n\">Post</span><span class=\"o\">.</span><span class=\"n\">manager</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>Save and get a post.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">Post</span><span class=\"p\">(</span><span class=\"s1\">'Hello'</span><span class=\"p\">,</span> <span class=\"s1\">'World'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># get by id from the staging area</span>\n<span class=\"p\">{</span><span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'World'</span><span class=\"p\">,</span> <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Hello'</span><span class=\"p\">}</span>\n</pre>\n</li>\n<li>\n<p>Close the database without commit the changes</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Get all posts from database.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">())</span>  <span class=\"c1\"># return a \"empty\" generator</span>\n<span class=\"p\">[]</span>\n</pre>\n</li>\n</ol>\n<h2>Linter</h2>\n<p>Check code lint:</p>\n<pre>pip install pylint\npylint orm.py\n</pre>\n<h2>Contributing</h2>\n<p>See <a href=\"/CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING</a>.</p>\n<h2>License</h2>\n<p><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"nofollow\"><img alt=\"CC0\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd6918b86bbdc903286bfee0a85a719db892f2cb/68747470733a2f2f692e6372656174697665636f6d6d6f6e732e6f72672f6c2f62792d6e632d73612f342e302f38387833312e706e67\"></a></p>\n<p>The MIT License.</p>\n<ul>\n<li>\n</ul>\n\n          </div>"}, "last_serial": 6716205, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d276aa0dbc7c62f40491c9cf31f52728", "sha256": "c1262eafb193c0483d9d2d9462004453e0d797b17cdc42b2b3e5c83fd6edb5a3"}, "downloads": -1, "filename": "simple_orm-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d276aa0dbc7c62f40491c9cf31f52728", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4239, "upload_time": "2020-02-28T09:19:58", "upload_time_iso_8601": "2020-02-28T09:19:58.625321Z", "url": "https://files.pythonhosted.org/packages/4d/da/04eb2e20bf707658ba57da91d47ed449249e4cfd2fb2609ea41c4ce8aa89/simple_orm-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d3bd64e727fa3ebfb30c6011f3e73c5", "sha256": "742b4ecc06c46d45a02f67cf1fac8ff85ae26946df17e449b1a9068396699a00"}, "downloads": -1, "filename": "simple-orm-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6d3bd64e727fa3ebfb30c6011f3e73c5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4532, "upload_time": "2020-02-28T09:20:02", "upload_time_iso_8601": "2020-02-28T09:20:02.181774Z", "url": "https://files.pythonhosted.org/packages/34/bf/8ee9357b14f1e4b5a46cdd1c3ce11890b5e1fccabfd88cb12aa74c6febfd/simple-orm-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d276aa0dbc7c62f40491c9cf31f52728", "sha256": "c1262eafb193c0483d9d2d9462004453e0d797b17cdc42b2b3e5c83fd6edb5a3"}, "downloads": -1, "filename": "simple_orm-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d276aa0dbc7c62f40491c9cf31f52728", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4239, "upload_time": "2020-02-28T09:19:58", "upload_time_iso_8601": "2020-02-28T09:19:58.625321Z", "url": "https://files.pythonhosted.org/packages/4d/da/04eb2e20bf707658ba57da91d47ed449249e4cfd2fb2609ea41c4ce8aa89/simple_orm-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d3bd64e727fa3ebfb30c6011f3e73c5", "sha256": "742b4ecc06c46d45a02f67cf1fac8ff85ae26946df17e449b1a9068396699a00"}, "downloads": -1, "filename": "simple-orm-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6d3bd64e727fa3ebfb30c6011f3e73c5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4532, "upload_time": "2020-02-28T09:20:02", "upload_time_iso_8601": "2020-02-28T09:20:02.181774Z", "url": "https://files.pythonhosted.org/packages/34/bf/8ee9357b14f1e4b5a46cdd1c3ce11890b5e1fccabfd88cb12aa74c6febfd/simple-orm-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:25 2020"}