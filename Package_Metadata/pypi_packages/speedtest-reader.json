{"info": {"author": "Tobias Frei", "author_email": "shuntingard@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: Log Analysis", "Topic :: System :: Networking", "Topic :: System :: Networking :: Monitoring"], "description": "speedtest_reader\n================\n\nLibrary to read, buffer and time-slice output generated by\n`speedtest-cli <https://github.com/sivel/speedtest-cli>`_\n\n.. image:: https://img.shields.io/pypi/v/speedtest-reader.svg\n        :target: https://pypi.org/project/speedtest-reader/\n        :alt: Latest Version\n.. image:: https://img.shields.io/travis/shuntingyard/speedtest-reader.svg\n        :target: https://travis-ci.com/shuntingyard/speedtest_reader/\n        :alt: Travis\n.. image:: https://img.shields.io/pypi/l/speedtest-reader.svg\n        :target: https://github.com/shuntingyard/speedtest_reader/blob/master/LICENSE.txt\n        :alt: License\n\nVersions\n--------\n\nspeedtest_reader works with Python 3\n\n.. image:: https://img.shields.io/pypi/pyversions/speedtest-reader.svg\n        :target: https://pypi.org/project/speedtest-reader/\n        :alt: Versions\n\nRecent changes\n--------------\n\n- Complete API redesign (see Python API below)\n\nInstallation\n------------\n\npip / easy\\_install\n~~~~~~~~~~~~~~~~~~~\n\n::\n\n    pip install speedtest_reader\n\nor\n\n::\n\n    easy_install speedtest_reader\n\nGithub\n~~~~~~\n\n::\n\n    pip install git+https://github.com/shuntingyard/speedtest_reader.git\n\nor\n\n::\n\n    git clone https://github.com/shuntingyard/speedtest_reader.git\n    cd speedtest_reader\n    python setup.py install\n\n.. _API:\n\nPython API\n----------\n\n.. code:: python\n\n   from speedtest_reader import format_timestamps, Reader, util\n\n   sensor1 = Reader(\"~/speedtest.csv\")\n\n\n   @util.to_Mbit\n   def slice_s1(**kwargs):\n       start, end = format_timestamps(**kwargs)\n       return sensor1.copy_df(start, end)\n\n\n   # Test API setup\n   print(slice_s1(start=\"2019-06-01\"))\n   print(slice_s1(start=\"July 1\", end=\"July 3\"))\n   print(slice_s1(start=\"yesterday\"))\n\nExample section\n---------------\n\nplotly\n~~~~~~\n\n.. code:: python\n\n   import plotly\n   import plotly.graph_objs as go\n   from speedtest_reader import format_timestamps, Reader, util\n\n   sensor1 = Reader(\"~/speedtest.csv\")\n\n\n   @util.append_tslocal()\n   def slice_s1(**kwargs):\n       start, end = format_timestamps(**kwargs)\n       return sensor1.copy_df(start, end)\n\n\n   # minimal line- and scatterplot example\n   df = slice_s1()\n   graph = dict(\n       data=[\n           go.Scatter(\n               x=df[\"tslocal\"], y=df[\"Download\"], mode=\"lines\", connectgaps=False\n           ),\n           go.Scatter(x=df[\"tslocal\"], y=df[\"Upload\"], mode=\"markers\"),\n       ]\n   )\n   plotly.offline.plot(graph)\n\nseaborn\n~~~~~~~\n\n.. code:: python\n\n   import matplotlib.pyplot as plt\n   import seaborn as sns\n   from speedtest_reader import format_timestamps, Reader, util\n\n   sensor1 = Reader(\"~/speedtest.csv\")\n\n\n   @util.to_Mbit\n   @util.append_mpldate(colname=\"date2num\")\n   def slice_s1(**kwargs):\n       start, end = format_timestamps(**kwargs)\n       return sensor1.copy_df(start, end)\n\n\n   # minimal scatterplot example\n   ts = slice_s1()[\"date2num\"]\n   dl = slice_s1()[\"Download\"]\n   _, ax = plt.subplots()\n   sns.scatterplot(ts, dl)\n   ax.xaxis_date()\n   plt.show()\n\ntimezone config\n~~~~~~~~~~~~~~~\n\n.. code:: python\n\n   from speedtest_reader import format_timestamps, Reader, util\n\n   sensor1 = Reader(\"~/speedtest.csv\")\n\n\n   @util.append_tslocal(tz=\"EST\")  # zone for local timestamp to append\n   def slice_EST(**kwargs):\n       kwargs[\"tz\"] = \"EST\"  # zone to use for slicing\n       start, end = format_timestamps(**kwargs)\n       return sensor1.copy_df(start, end)\n\n\n   # use local timezone (selected by module 'tzlocal')\n   @util.append_tslocal()\n   def slice_local(**kwargs):\n       start, end = format_timestamps(**kwargs)\n       return sensor1.copy_df(start, end)\n\n\n   # test configured- and local timezone setup\n   print(slice_EST(start=\"yesterday\"))\n   print(slice_local(start=\"yesterday\"))\n\nChangelog\n---------\n\nVersion 0.0.4\n~~~~~~~~~~~~~\n\n- Complete API redesign", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shuntingyard/speedtest_reader", "keywords": "", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "speedtest-reader", "package_url": "https://pypi.org/project/speedtest-reader/", "platform": "any", "project_url": "https://pypi.org/project/speedtest-reader/", "project_urls": {"Homepage": "https://github.com/shuntingyard/speedtest_reader"}, "release_url": "https://pypi.org/project/speedtest-reader/0.0.4/", "requires_dist": null, "requires_python": ">=3.*", "summary": "Selectively read file output generated by speedtest-cli", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Library to read, buffer and time-slice output generated by\n<a href=\"https://github.com/sivel/speedtest-cli\" rel=\"nofollow\">speedtest-cli</a></p>\n<a href=\"https://pypi.org/project/speedtest-reader/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/303db543dc417b9dd8fe11c81a03f0143375662e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7370656564746573742d7265616465722e737667\"></a>\n<a href=\"https://travis-ci.com/shuntingyard/speedtest_reader/\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/474883f37b21d8bc9ab599e91131811cc22b6d21/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7368756e74696e67796172642f7370656564746573742d7265616465722e737667\"></a>\n<a href=\"https://github.com/shuntingyard/speedtest_reader/blob/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95d9c7b744d5946e62999649ea1715dfa437b85a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7370656564746573742d7265616465722e737667\"></a>\n<div id=\"versions\">\n<h2>Versions</h2>\n<p>speedtest_reader works with Python 3</p>\n<a href=\"https://pypi.org/project/speedtest-reader/\" rel=\"nofollow\"><img alt=\"Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/365d57d9fbd8d2ab75e72cc4b5c2ca1626516456/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7370656564746573742d7265616465722e737667\"></a>\n</div>\n<div id=\"recent-changes\">\n<h2>Recent changes</h2>\n<ul>\n<li>Complete API redesign (see Python API below)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"pip-easy-install\">\n<h3>pip / easy_install</h3>\n<pre>pip install speedtest_reader\n</pre>\n<p>or</p>\n<pre>easy_install speedtest_reader\n</pre>\n</div>\n<div id=\"github\">\n<h3>Github</h3>\n<pre>pip install git+https://github.com/shuntingyard/speedtest_reader.git\n</pre>\n<p>or</p>\n<pre>git clone https://github.com/shuntingyard/speedtest_reader.git\ncd speedtest_reader\npython setup.py install\n</pre>\n</div>\n</div>\n<div id=\"python-api\">\n<span id=\"api\"></span><h2>Python API</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">speedtest_reader</span> <span class=\"kn\">import</span> <span class=\"n\">format_timestamps</span><span class=\"p\">,</span> <span class=\"n\">Reader</span><span class=\"p\">,</span> <span class=\"n\">util</span>\n\n<span class=\"n\">sensor1</span> <span class=\"o\">=</span> <span class=\"n\">Reader</span><span class=\"p\">(</span><span class=\"s2\">\"~/speedtest.csv\"</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@util</span><span class=\"o\">.</span><span class=\"n\">to_Mbit</span>\n<span class=\"k\">def</span> <span class=\"nf\">slice_s1</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">format_timestamps</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">sensor1</span><span class=\"o\">.</span><span class=\"n\">copy_df</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Test API setup</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">slice_s1</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"s2\">\"2019-06-01\"</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">slice_s1</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"s2\">\"July 1\"</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"s2\">\"July 3\"</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">slice_s1</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"s2\">\"yesterday\"</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"example-section\">\n<h2>Example section</h2>\n<div id=\"plotly\">\n<h3>plotly</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">plotly</span>\n<span class=\"kn\">import</span> <span class=\"nn\">plotly.graph_objs</span> <span class=\"k\">as</span> <span class=\"nn\">go</span>\n<span class=\"kn\">from</span> <span class=\"nn\">speedtest_reader</span> <span class=\"kn\">import</span> <span class=\"n\">format_timestamps</span><span class=\"p\">,</span> <span class=\"n\">Reader</span><span class=\"p\">,</span> <span class=\"n\">util</span>\n\n<span class=\"n\">sensor1</span> <span class=\"o\">=</span> <span class=\"n\">Reader</span><span class=\"p\">(</span><span class=\"s2\">\"~/speedtest.csv\"</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@util</span><span class=\"o\">.</span><span class=\"n\">append_tslocal</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">slice_s1</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">format_timestamps</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">sensor1</span><span class=\"o\">.</span><span class=\"n\">copy_df</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># minimal line- and scatterplot example</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">slice_s1</span><span class=\"p\">()</span>\n<span class=\"n\">graph</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">go</span><span class=\"o\">.</span><span class=\"n\">Scatter</span><span class=\"p\">(</span>\n            <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s2\">\"tslocal\"</span><span class=\"p\">],</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s2\">\"Download\"</span><span class=\"p\">],</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">\"lines\"</span><span class=\"p\">,</span> <span class=\"n\">connectgaps</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">go</span><span class=\"o\">.</span><span class=\"n\">Scatter</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s2\">\"tslocal\"</span><span class=\"p\">],</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s2\">\"Upload\"</span><span class=\"p\">],</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">\"markers\"</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n<span class=\"n\">plotly</span><span class=\"o\">.</span><span class=\"n\">offline</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">graph</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"seaborn\">\n<h3>seaborn</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">seaborn</span> <span class=\"k\">as</span> <span class=\"nn\">sns</span>\n<span class=\"kn\">from</span> <span class=\"nn\">speedtest_reader</span> <span class=\"kn\">import</span> <span class=\"n\">format_timestamps</span><span class=\"p\">,</span> <span class=\"n\">Reader</span><span class=\"p\">,</span> <span class=\"n\">util</span>\n\n<span class=\"n\">sensor1</span> <span class=\"o\">=</span> <span class=\"n\">Reader</span><span class=\"p\">(</span><span class=\"s2\">\"~/speedtest.csv\"</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@util</span><span class=\"o\">.</span><span class=\"n\">to_Mbit</span>\n<span class=\"nd\">@util</span><span class=\"o\">.</span><span class=\"n\">append_mpldate</span><span class=\"p\">(</span><span class=\"n\">colname</span><span class=\"o\">=</span><span class=\"s2\">\"date2num\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">slice_s1</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">format_timestamps</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">sensor1</span><span class=\"o\">.</span><span class=\"n\">copy_df</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># minimal scatterplot example</span>\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">slice_s1</span><span class=\"p\">()[</span><span class=\"s2\">\"date2num\"</span><span class=\"p\">]</span>\n<span class=\"n\">dl</span> <span class=\"o\">=</span> <span class=\"n\">slice_s1</span><span class=\"p\">()[</span><span class=\"s2\">\"Download\"</span><span class=\"p\">]</span>\n<span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">()</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">scatterplot</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">,</span> <span class=\"n\">dl</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">xaxis_date</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"timezone-config\">\n<h3>timezone config</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">speedtest_reader</span> <span class=\"kn\">import</span> <span class=\"n\">format_timestamps</span><span class=\"p\">,</span> <span class=\"n\">Reader</span><span class=\"p\">,</span> <span class=\"n\">util</span>\n\n<span class=\"n\">sensor1</span> <span class=\"o\">=</span> <span class=\"n\">Reader</span><span class=\"p\">(</span><span class=\"s2\">\"~/speedtest.csv\"</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@util</span><span class=\"o\">.</span><span class=\"n\">append_tslocal</span><span class=\"p\">(</span><span class=\"n\">tz</span><span class=\"o\">=</span><span class=\"s2\">\"EST\"</span><span class=\"p\">)</span>  <span class=\"c1\"># zone for local timestamp to append</span>\n<span class=\"k\">def</span> <span class=\"nf\">slice_EST</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">\"tz\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"EST\"</span>  <span class=\"c1\"># zone to use for slicing</span>\n    <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">format_timestamps</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">sensor1</span><span class=\"o\">.</span><span class=\"n\">copy_df</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># use local timezone (selected by module 'tzlocal')</span>\n<span class=\"nd\">@util</span><span class=\"o\">.</span><span class=\"n\">append_tslocal</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">slice_local</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">format_timestamps</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">sensor1</span><span class=\"o\">.</span><span class=\"n\">copy_df</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># test configured- and local timezone setup</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">slice_EST</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"s2\">\"yesterday\"</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">slice_local</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"s2\">\"yesterday\"</span><span class=\"p\">))</span>\n</pre>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"version-0-0-4\"><span class=\"section-subtitle\">Version 0.0.4</span></h2>\n<ul>\n<li>Complete API redesign</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5564860, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "cc673f718e1dc8775543ca636efe5225", "sha256": "92f01ac5c445a26b993c25545326f600f5d0dee652cf5d3733b8dea5712ef127"}, "downloads": -1, "filename": "speedtest_reader-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cc673f718e1dc8775543ca636efe5225", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33028, "upload_time": "2019-06-20T22:14:54", "upload_time_iso_8601": "2019-06-20T22:14:54.015037Z", "url": "https://files.pythonhosted.org/packages/28/cb/c18bef672dce8f063c255e8791f181d84612847ac850e8a3de40d0a65ef5/speedtest_reader-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b9753013c499b3de5832d2bd21e587c8", "sha256": "2bc6a9ce6769ec250c1c1c364f41b8cfd3e3102149d829151986c8ff0d88972d"}, "downloads": -1, "filename": "speedtest_reader-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b9753013c499b3de5832d2bd21e587c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33492, "upload_time": "2019-06-22T13:15:35", "upload_time_iso_8601": "2019-06-22T13:15:35.400237Z", "url": "https://files.pythonhosted.org/packages/0d/87/1497b6a35eecffd67aa5899045001e6ec91c28a29a398ca3908fb1d02233/speedtest_reader-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "56132e06a94dc47587bcff16c960c6d0", "sha256": "b7cd8380ffec98d0b4c0593a0f60882503b532e59c0596dbd98f46013ca977f5"}, "downloads": -1, "filename": "speedtest_reader-0.0.3.tar.gz", "has_sig": false, "md5_digest": "56132e06a94dc47587bcff16c960c6d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34095, "upload_time": "2019-06-22T23:23:27", "upload_time_iso_8601": "2019-06-22T23:23:27.964611Z", "url": "https://files.pythonhosted.org/packages/94/0d/e8f37f8055141eea6347d10e415344d6fc3ed59b706a1ed251ea0a83d713/speedtest_reader-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "5e750d4b09fdfe7f830a961ef974e686", "sha256": "7aa7da742d24ef5daa400f5ce68addcdd148b6fdf40127aac5002ee12fd226c5"}, "downloads": -1, "filename": "speedtest_reader-0.0.4.tar.gz", "has_sig": false, "md5_digest": "5e750d4b09fdfe7f830a961ef974e686", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.*", "size": 37628, "upload_time": "2019-07-21T22:05:34", "upload_time_iso_8601": "2019-07-21T22:05:34.991771Z", "url": "https://files.pythonhosted.org/packages/7f/78/8b8f1928c92f8f00c1649b4427eb9b2f4f3a858049943eaa797503eaec28/speedtest_reader-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5e750d4b09fdfe7f830a961ef974e686", "sha256": "7aa7da742d24ef5daa400f5ce68addcdd148b6fdf40127aac5002ee12fd226c5"}, "downloads": -1, "filename": "speedtest_reader-0.0.4.tar.gz", "has_sig": false, "md5_digest": "5e750d4b09fdfe7f830a961ef974e686", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.*", "size": 37628, "upload_time": "2019-07-21T22:05:34", "upload_time_iso_8601": "2019-07-21T22:05:34.991771Z", "url": "https://files.pythonhosted.org/packages/7f/78/8b8f1928c92f8f00c1649b4427eb9b2f4f3a858049943eaa797503eaec28/speedtest_reader-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:33 2020"}