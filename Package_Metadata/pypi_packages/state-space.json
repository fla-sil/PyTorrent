{"info": {"author": "Michael Christoph Nowotny", "author_email": "nowotnym@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython"], "description": "\n# State Space\nState Space is a Python package that permits the symbolic specification of linear state space models with normally distributed innovations and measurement errors. \nCoefficients are defined via SymPy matrices which are then compiled into a numerical statsmodels implementation.\nThese unobserved state is inferred via Kalman filtering and model parameters are estimated via maximum likelihood using statsmodels as the numerical backend.\n\n## Stochastic Process\nA linear state space model consists of a state evolution equation and an observation equation. \nThe state is not directly observed, instead a linear transformation of the state with added Gaussian noise is observed. \nIn a linear state space model, the state evolves according to\n\n![State Transition Equation](https://raw.githubusercontent.com/michaelnowotny/state_space/master/images/state_transition_equation.png),\n\nwhere the coefficients T, c, and R may depend on exogenous variables but not on the state itself. \nThey may involve parameters that must be estimated from the data. \nThe state innovation \\eta_t has a multivariate normal distribution with zero mean and covariance matrix Q, which may depend on exogenous variables but not the state itself.\n\nThe observation equation maps the unobserved state according to\n\n![Observation Equation](https://raw.githubusercontent.com/michaelnowotny/state_space/master/images/observation_equation.png).\n\nThe observation noise \\epsilon_t has a multivariate normal distribution with zero mean and covariance matrix H. \nThe coefficients Z, d, as well as H may depend on exogeneous data and involve unknown parameters that are estimated via MLE.\n\nState Space adopts the following terminology:  \n        T: transition matrix  \n        c: state intercept vector  \n        R: selection matrix  \n        Q: state covariance matrix  \n        Z: design matrix  \n        d: observation intercept  \n        H: observation covariance matrix  \n\nThe coefficients T,c, R, Q, Z, d, H are specified as SymPy matrices and may involve unknown parameters and exogenous data.\n\n## Examples\nState Space includes two examples in Jupyter notebooks:  \n1.) A [conditional linear factor model](notebooks/Conditional%20Linear%20Factor%20Model.ipynb) for returns of the Ford motor corporation with S&P 500 returns as the factor.  \n2.) A model of [time-variation in the equity premium](notebooks/Time-Variation%20in%20the%20Equity%20Premium.ipynb) applied to S&P 500 index data.  \n\n## Installation\n<pre>\n    pip install state_space\n</pre>\nor \n<pre>\n    pip3 install state_space\n</pre>\nif not using Anaconda.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/michaelnowotny/state_space.git", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "state-space", "package_url": "https://pypi.org/project/state-space/", "platform": "", "project_url": "https://pypi.org/project/state-space/", "project_urls": {"Homepage": "https://github.com/michaelnowotny/state_space.git"}, "release_url": "https://pypi.org/project/state-space/0.0.1/", "requires_dist": ["numpy", "statsmodels", "sympy", "pytest"], "requires_python": ">=3.6.0", "summary": "State Space Models in Python", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>State Space</h1>\n<p>State Space is a Python package that permits the symbolic specification of linear state space models with normally distributed innovations and measurement errors.\nCoefficients are defined via SymPy matrices which are then compiled into a numerical statsmodels implementation.\nThese unobserved state is inferred via Kalman filtering and model parameters are estimated via maximum likelihood using statsmodels as the numerical backend.</p>\n<h2>Stochastic Process</h2>\n<p>A linear state space model consists of a state evolution equation and an observation equation.\nThe state is not directly observed, instead a linear transformation of the state with added Gaussian noise is observed.\nIn a linear state space model, the state evolves according to</p>\n<p><img alt=\"State Transition Equation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dadc78cce1c21dd0dbee2fb42d4834fe2fe60976/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d69636861656c6e6f776f746e792f73746174655f73706163652f6d61737465722f696d616765732f73746174655f7472616e736974696f6e5f6571756174696f6e2e706e67\">,</p>\n<p>where the coefficients T, c, and R may depend on exogenous variables but not on the state itself.\nThey may involve parameters that must be estimated from the data.\nThe state innovation \\eta_t has a multivariate normal distribution with zero mean and covariance matrix Q, which may depend on exogenous variables but not the state itself.</p>\n<p>The observation equation maps the unobserved state according to</p>\n<p><img alt=\"Observation Equation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97daa9a16e4b601d8a98e8ea50836561416d4c62/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d69636861656c6e6f776f746e792f73746174655f73706163652f6d61737465722f696d616765732f6f62736572766174696f6e5f6571756174696f6e2e706e67\">.</p>\n<p>The observation noise \\epsilon_t has a multivariate normal distribution with zero mean and covariance matrix H.\nThe coefficients Z, d, as well as H may depend on exogeneous data and involve unknown parameters that are estimated via MLE.</p>\n<p>State Space adopts the following terminology:<br>\nT: transition matrix<br>\nc: state intercept vector<br>\nR: selection matrix<br>\nQ: state covariance matrix<br>\nZ: design matrix<br>\nd: observation intercept<br>\nH: observation covariance matrix</p>\n<p>The coefficients T,c, R, Q, Z, d, H are specified as SymPy matrices and may involve unknown parameters and exogenous data.</p>\n<h2>Examples</h2>\n<p>State Space includes two examples in Jupyter notebooks:<br>\n1.) A <a href=\"notebooks/Conditional%20Linear%20Factor%20Model.ipynb\" rel=\"nofollow\">conditional linear factor model</a> for returns of the Ford motor corporation with S&amp;P 500 returns as the factor.<br>\n2.) A model of <a href=\"notebooks/Time-Variation%20in%20the%20Equity%20Premium.ipynb\" rel=\"nofollow\">time-variation in the equity premium</a> applied to S&amp;P 500 index data.</p>\n<h2>Installation</h2>\n<pre>    pip install state_space\n</pre>\n<p>or</p>\n<pre>    pip3 install state_space\n</pre>\n<p>if not using Anaconda.</p>\n\n          </div>"}, "last_serial": 6606057, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "31317e6200cc57b160b6fd399d7a98b9", "sha256": "7ea3b2f85a7b855a7e11afa8ef3edb214bc1d5eb4b1b4b93646aeb65a3329f49"}, "downloads": -1, "filename": "state_space-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "31317e6200cc57b160b6fd399d7a98b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 14062, "upload_time": "2020-02-10T23:48:29", "upload_time_iso_8601": "2020-02-10T23:48:29.608270Z", "url": "https://files.pythonhosted.org/packages/9d/1a/21e67244e5849bed8c3ca28cb56285a0f03a9ac81003d0411a01fcc46b0d/state_space-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6484da751cf6a06565c45c7a9ef98329", "sha256": "089e6b214fa89b50ab174f8a2cbff27a75d432797b3987640e0cb89bdceddf21"}, "downloads": -1, "filename": "state_space-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6484da751cf6a06565c45c7a9ef98329", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 12379, "upload_time": "2020-02-10T23:48:31", "upload_time_iso_8601": "2020-02-10T23:48:31.704713Z", "url": "https://files.pythonhosted.org/packages/42/5c/94953ee71aaddf59ec2ed0a35ce3c0478760ac56d3ffedd11a1542a0d8a2/state_space-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "31317e6200cc57b160b6fd399d7a98b9", "sha256": "7ea3b2f85a7b855a7e11afa8ef3edb214bc1d5eb4b1b4b93646aeb65a3329f49"}, "downloads": -1, "filename": "state_space-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "31317e6200cc57b160b6fd399d7a98b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 14062, "upload_time": "2020-02-10T23:48:29", "upload_time_iso_8601": "2020-02-10T23:48:29.608270Z", "url": "https://files.pythonhosted.org/packages/9d/1a/21e67244e5849bed8c3ca28cb56285a0f03a9ac81003d0411a01fcc46b0d/state_space-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6484da751cf6a06565c45c7a9ef98329", "sha256": "089e6b214fa89b50ab174f8a2cbff27a75d432797b3987640e0cb89bdceddf21"}, "downloads": -1, "filename": "state_space-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6484da751cf6a06565c45c7a9ef98329", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 12379, "upload_time": "2020-02-10T23:48:31", "upload_time_iso_8601": "2020-02-10T23:48:31.704713Z", "url": "https://files.pythonhosted.org/packages/42/5c/94953ee71aaddf59ec2ed0a35ce3c0478760ac56d3ffedd11a1542a0d8a2/state_space-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:29 2020"}