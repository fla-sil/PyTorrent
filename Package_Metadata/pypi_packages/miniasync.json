{"info": {"author": "Alice Heaton", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Programming Language :: Python", "Programming Language :: Python :: 3.5"], "description": "miniasync\n=========\n\n**miniasync** is a small library build on top of asyncio_ to faciliate running small portions of asynchronous code in an otherwise synchronous application.\n\nA typical use case is an application which is build as a synchronous application, but at some point needs to make an http request to two different web services and await the results before continuing. In synchronous Python you'd have to do each request in turn - **miniasync** makes it easier to run both requests in parallel without having to write asyncio_ boilerplate code.\n\nExample::\n\n    import aiofiles\n    import miniasync\n\n    async def get_file_content(filename):\n        async with aiofiles.open(filename, mode='r') as f:\n            return await f.read()\n\n    results = miniasync.run(\n        get_file_content('file1.txt'),\n        get_file_content('file2.txt'),\n    )\n\n    assert results == [\n        '<the content of file1.txt>',\n        '<the content of file2.txt>'\n    ]\n\nSee the `documentation on readthedocs`_ for more examples and API.\n\n.. _asyncio: https://docs.python.org/3/library/asyncio.html\n.. _documentation on readthedocs: https://miniasync.readthedocs.io\n\nLicense\n-------\n\nCopyright \u00a9 2018, Alice Heaton. Released under the `LGPL 3 License`_\n\n.. _LGPL 3 License: https://www.gnu.org/licenses/lgpl-3.0.html\n\n\nChanges\n=======\n\nV0.1.2\n------\n- Documentation fixes\n\nV0.1.1\n--------\n- Documentation improvements\n\nV0.1.0\n------\n- Initial implementation: miniasync.run and miniasync.loop\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/alich75/miniasync", "keywords": "asyncio", "license": "LGPLv3+", "maintainer": "", "maintainer_email": "", "name": "miniasync", "package_url": "https://pypi.org/project/miniasync/", "platform": "", "project_url": "https://pypi.org/project/miniasync/", "project_urls": {"Homepage": "https://gitlab.com/alich75/miniasync"}, "release_url": "https://pypi.org/project/miniasync/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "miniasync is a small library build on top of asyncio to faciliate running small portions of asynchronous code in an otherwise synchronous application", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"miniasync\">\n<h2>miniasync</h2>\n<p><strong>miniasync</strong> is a small library build on top of <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=\"nofollow\">asyncio</a> to faciliate running small portions of asynchronous code in an otherwise synchronous application.</p>\n<p>A typical use case is an application which is build as a synchronous application, but at some point needs to make an http request to two different web services and await the results before continuing. In synchronous Python you\u2019d have to do each request in turn - <strong>miniasync</strong> makes it easier to run both requests in parallel without having to write <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=\"nofollow\">asyncio</a> boilerplate code.</p>\n<p>Example:</p>\n<pre>import aiofiles\nimport miniasync\n\nasync def get_file_content(filename):\n    async with aiofiles.open(filename, mode='r') as f:\n        return await f.read()\n\nresults = miniasync.run(\n    get_file_content('file1.txt'),\n    get_file_content('file2.txt'),\n)\n\nassert results == [\n    '&lt;the content of file1.txt&gt;',\n    '&lt;the content of file2.txt&gt;'\n]\n</pre>\n<p>See the <a href=\"https://miniasync.readthedocs.io\" rel=\"nofollow\">documentation on readthedocs</a> for more examples and API.</p>\n<div id=\"license\">\n<h3>License</h3>\n<p>Copyright \u00a9 2018, Alice Heaton. Released under the <a href=\"https://www.gnu.org/licenses/lgpl-3.0.html\" rel=\"nofollow\">LGPL 3 License</a></p>\n</div>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"v0-1-2\">\n<h3>V0.1.2</h3>\n<ul>\n<li>Documentation fixes</li>\n</ul>\n</div>\n<div id=\"v0-1-1\">\n<h3>V0.1.1</h3>\n<ul>\n<li>Documentation improvements</li>\n</ul>\n</div>\n<div id=\"v0-1-0\">\n<h3>V0.1.0</h3>\n<ul>\n<li>Initial implementation: miniasync.run and miniasync.loop</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3831441, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "076603526f4b0a843c56124c6221815a", "sha256": "ec391ac5ca87e50bdf02f0b1db1225c831b998903b9e0087a59288ec8e6c9098"}, "downloads": -1, "filename": "miniasync-0.1.0.tar.gz", "has_sig": false, "md5_digest": "076603526f4b0a843c56124c6221815a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5853, "upload_time": "2018-05-03T11:12:50", "upload_time_iso_8601": "2018-05-03T11:12:50.967596Z", "url": "https://files.pythonhosted.org/packages/43/77/ebe4f4204bd6347850ab2da8a3a869a9d2a2de86791809660538491b982a/miniasync-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3c118056e8a452cb976fe655a39d9388", "sha256": "d4ec2633ad71b03d540c7232dcaedf41728db8006471332c78638c0cb321c110"}, "downloads": -1, "filename": "miniasync-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3c118056e8a452cb976fe655a39d9388", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6031, "upload_time": "2018-05-03T14:53:18", "upload_time_iso_8601": "2018-05-03T14:53:18.057932Z", "url": "https://files.pythonhosted.org/packages/be/69/c0211eee3692db6b43b13ff313b4b8c15b707391c9987f39ed9cfaf454c5/miniasync-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c56552a7bd7c0db90058f84a4936263a", "sha256": "a86d21800389b7c6f66a1cef1c06c752e2bb7592c9818719c8d21fe6c8f40962"}, "downloads": -1, "filename": "miniasync-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c56552a7bd7c0db90058f84a4936263a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6074, "upload_time": "2018-05-03T15:42:33", "upload_time_iso_8601": "2018-05-03T15:42:33.251489Z", "url": "https://files.pythonhosted.org/packages/bc/e2/1c782ee568ba5390e64619d3ba8a3ed970a2eb540aa11f66b9ac3ff7e286/miniasync-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c56552a7bd7c0db90058f84a4936263a", "sha256": "a86d21800389b7c6f66a1cef1c06c752e2bb7592c9818719c8d21fe6c8f40962"}, "downloads": -1, "filename": "miniasync-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c56552a7bd7c0db90058f84a4936263a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6074, "upload_time": "2018-05-03T15:42:33", "upload_time_iso_8601": "2018-05-03T15:42:33.251489Z", "url": "https://files.pythonhosted.org/packages/bc/e2/1c782ee568ba5390e64619d3ba8a3ed970a2eb540aa11f66b9ac3ff7e286/miniasync-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:27 2020"}