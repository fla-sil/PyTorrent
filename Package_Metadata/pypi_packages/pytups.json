{"info": {"author": "Franco Peschiera", "author_email": "pchtsp@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Pytups\n**************************\n.. image:: https://img.shields.io/pypi/v/pytups.svg\n    :target: https://pypi.org/project/pytups/\n.. image:: https://img.shields.io/pypi/l/pytups.svg\n    :target: https://pypi.org/project/pytups/\n.. image:: https://img.shields.io/pypi/pyversions/pytups.svg\n    :target: https://pypi.org/project/pytups/\n.. image:: https://travis-ci.org/pchtsp/pytups.svg?branch=master\n    :target: https://travis-ci.org/pchtsp/pytups\n\nWhat and why\n================\n\nI grew used to the chained operations in R's `tidyverse <https://www.tidyverse.org/>`_  packages or, although not a great fan myself, python's `pandas <https://pandas.pydata.org/>`_ . I find myself using dictionary and list comprehensions all the time to pass from one data format to the other efficiently. But after doing it for the Nth time, I thought of automaticing it.\n\nIn my case, it helps me construct optimisation models with  `PuLP <https://github.com/coin-or/pulp>`_. I see other possible uses not related to OR.\n\nI've implemented some additional methods to regular dictionaries, lists and sets to come up with interesting methods that somewhat quickly pass from one to the other and help with data wrangling.\n\nIn order for the operations to make any sense, the assumption that is done is that whatever you are using has the same 'structure'. For example, if you a have a list of tuples: every element of the list is a tuple with the same size and the Nth element of the tuple has the same type, e.g. ``[(1, 'red', 'b', '2018-01'), (10, 'ccc', 'ttt', 'ff')]``. Note that both tuples have four elements and the first one is a number, not a string. We do not check that this is consistent.\n\nThey're made to always return a new object, so no \"in-place\" editing, hopefully.\n\nRight now there are three classes to use: dictionaries, tuple lists and ordered sets.\n\nQuick example\n================\n\nWe reverse a nested dictionary to take the deepest key outside while keeping the same final values. This chain of operations uses both `superdict` and `tuplist` objects at different points.::\n\n    import pytups as pt\n    some_dict = {'a': {'b': {'c': 'A'}}, 'b': {'t': {'c' : 'B'}}}\n    pt.SuperDict.from_dict(some_dict).\\\n        to_dictup().\\\n        to_tuplist().\\\n        filter([2, 0, 1, 3]).\\\n        to_dict(result_col=3, is_list=False).\\\n        to_dictdict()\n    # {'c': {'a': {'b': 'A'}, 'b': {'t': 'B'}}}\n\nInstalling\n================\n\n::\n\n    pip install pytups\n\nor, for the development version::\n\n    pip install https://github.com/pchtsp/pytups/archive/master.zip\n\nTesting\n================\n\nRun the command::\n\n    python -m unittest discover -s tests\n\nif the output says OK, all tests were passed.\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://github.com/pchtsp/pytups/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pchtsp/pytups", "keywords": "super dict dictionary tuple list math pulp", "license": "", "maintainer": "Franco Peschiera", "maintainer_email": "pchtsp@gmail.com", "name": "pytups", "package_url": "https://pypi.org/project/pytups/", "platform": "", "project_url": "https://pypi.org/project/pytups/", "project_urls": {"Download": "https://github.com/pchtsp/pytups/archive/master.zip", "Homepage": "https://github.com/pchtsp/pytups"}, "release_url": "https://pypi.org/project/pytups/0.6/", "requires_dist": ["nose (==1.3.7)", "numpy (>=1.14.5)"], "requires_python": "", "summary": "data wrangling for lists of tuples and dictionaries", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/pytups/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pytups.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64819a40e0099f39442d39f25f4e4e7c8b962787/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079747570732e737667\"></a>\n<a href=\"https://pypi.org/project/pytups/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/pytups.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/84756c4569a7e8748df66660c5362042cb67c8d3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7079747570732e737667\"></a>\n<a href=\"https://pypi.org/project/pytups/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/pytups.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ca6aabfad7b607465a126e5586f740e5cc1d505/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079747570732e737667\"></a>\n<a href=\"https://travis-ci.org/pchtsp/pytups\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/pchtsp/pytups.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61613a813c6066f515991350fce4b7a300df88b9/68747470733a2f2f7472617669732d63692e6f72672f7063687473702f7079747570732e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"what-and-why\">\n<h2>What and why</h2>\n<p>I grew used to the chained operations in R\u2019s <a href=\"https://www.tidyverse.org/\" rel=\"nofollow\">tidyverse</a>  packages or, although not a great fan myself, python\u2019s <a href=\"https://pandas.pydata.org/\" rel=\"nofollow\">pandas</a> . I find myself using dictionary and list comprehensions all the time to pass from one data format to the other efficiently. But after doing it for the Nth time, I thought of automaticing it.</p>\n<p>In my case, it helps me construct optimisation models with  <a href=\"https://github.com/coin-or/pulp\" rel=\"nofollow\">PuLP</a>. I see other possible uses not related to OR.</p>\n<p>I\u2019ve implemented some additional methods to regular dictionaries, lists and sets to come up with interesting methods that somewhat quickly pass from one to the other and help with data wrangling.</p>\n<p>In order for the operations to make any sense, the assumption that is done is that whatever you are using has the same \u2018structure\u2019. For example, if you a have a list of tuples: every element of the list is a tuple with the same size and the Nth element of the tuple has the same type, e.g. <tt>[(1, 'red', 'b', <span class=\"pre\">'2018-01'),</span> (10, 'ccc', 'ttt', <span class=\"pre\">'ff')]</span></tt>. Note that both tuples have four elements and the first one is a number, not a string. We do not check that this is consistent.</p>\n<p>They\u2019re made to always return a new object, so no \u201cin-place\u201d editing, hopefully.</p>\n<p>Right now there are three classes to use: dictionaries, tuple lists and ordered sets.</p>\n</div>\n<div id=\"quick-example\">\n<h2>Quick example</h2>\n<p>We reverse a nested dictionary to take the deepest key outside while keeping the same final values. This chain of operations uses both <cite>superdict</cite> and <cite>tuplist</cite> objects at different points.:</p>\n<pre>import pytups as pt\nsome_dict = {'a': {'b': {'c': 'A'}}, 'b': {'t': {'c' : 'B'}}}\npt.SuperDict.from_dict(some_dict).\\\n    to_dictup().\\\n    to_tuplist().\\\n    filter([2, 0, 1, 3]).\\\n    to_dict(result_col=3, is_list=False).\\\n    to_dictdict()\n# {'c': {'a': {'b': 'A'}, 'b': {'t': 'B'}}}\n</pre>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<pre>pip install pytups\n</pre>\n<p>or, for the development version:</p>\n<pre>pip install https://github.com/pchtsp/pytups/archive/master.zip\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Run the command:</p>\n<pre>python -m unittest discover -s tests\n</pre>\n<p>if the output says OK, all tests were passed.</p>\n</div>\n\n          </div>"}, "last_serial": 6188321, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "adcb67873fb5a8f934160860a7d5c53b", "sha256": "d9359ad1cbf718415ca01d153004e51569436a15ee45bf479e2c2262bec1c3e9"}, "downloads": -1, "filename": "pytups-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "adcb67873fb5a8f934160860a7d5c53b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8498, "upload_time": "2019-05-22T07:24:50", "upload_time_iso_8601": "2019-05-22T07:24:50.838380Z", "url": "https://files.pythonhosted.org/packages/f2/6d/0dc696398a02f413e8ec4d36e9203621486cc6555ae8269fddd2d0d73e79/pytups-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ab556a00c1e4db1b267fa03853b62b3", "sha256": "378fd49369ebb4b5c02b913ad284dba9bfc90af79b749c2c64842b59b2a2d202"}, "downloads": -1, "filename": "pytups-0.1.tar.gz", "has_sig": false, "md5_digest": "4ab556a00c1e4db1b267fa03853b62b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6833, "upload_time": "2019-05-22T07:24:53", "upload_time_iso_8601": "2019-05-22T07:24:53.106190Z", "url": "https://files.pythonhosted.org/packages/43/c1/3107f8c8ecfa4df9ba33c2b2aceae401d30e928af1ca1c9f14aee88b481e/pytups-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "16f3be4e6374e8dd2eb3dfd9b4794b46", "sha256": "1e75c31e7154c8e57493fdc9cee33f38679bc9d212b0a78b58965928dd5ae395"}, "downloads": -1, "filename": "pytups-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "16f3be4e6374e8dd2eb3dfd9b4794b46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9119, "upload_time": "2019-05-29T03:36:03", "upload_time_iso_8601": "2019-05-29T03:36:03.462260Z", "url": "https://files.pythonhosted.org/packages/bc/ec/c8c33abdc941e5f5e84fb2378ee908198e2fcec9b9744ecb7fd594bc007d/pytups-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "539eaf74a5051049fbdc9539dc2aa0e0", "sha256": "c1a759f97eb5c4c9cb2bdd9d52f70a2762b3c98fe95e4ef4e2623044465a9d93"}, "downloads": -1, "filename": "pytups-0.2.tar.gz", "has_sig": false, "md5_digest": "539eaf74a5051049fbdc9539dc2aa0e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7236, "upload_time": "2019-05-29T03:36:05", "upload_time_iso_8601": "2019-05-29T03:36:05.881236Z", "url": "https://files.pythonhosted.org/packages/29/13/99e90faf75afe387a3b416f656aed3b3837698b098d982cf8031c8fa00ba/pytups-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "58b0e4b886aa6fb1f0045d1ff2bac5e6", "sha256": "20eeef48c275c661adbac6c9adc4794400591dfcb29157edc149487a724b1504"}, "downloads": -1, "filename": "pytups-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "58b0e4b886aa6fb1f0045d1ff2bac5e6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9117, "upload_time": "2019-05-29T04:00:40", "upload_time_iso_8601": "2019-05-29T04:00:40.785784Z", "url": "https://files.pythonhosted.org/packages/77/ad/7aa9c083abe1875a41a27eb88258234f703ea8f51fb4b50228e2c733e966/pytups-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db74dbcc075442af499064a740616485", "sha256": "ef8b743632207c9aec72b1c9ad5b8a25dc6eb16da3b65833960ce8ca6b5d0f64"}, "downloads": -1, "filename": "pytups-0.3.tar.gz", "has_sig": false, "md5_digest": "db74dbcc075442af499064a740616485", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7228, "upload_time": "2019-05-29T04:00:42", "upload_time_iso_8601": "2019-05-29T04:00:42.140174Z", "url": "https://files.pythonhosted.org/packages/c0/a5/989c8508799b0d0b167a6dd2fcd748bfa2b052452ce8fbe80deb1063217e/pytups-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "febd15eca4923fc1fa21f333a3a62ae5", "sha256": "9fcb270e29abd5bf169cca71103d991f9e49c066bab7a364fe694e369016c9d1"}, "downloads": -1, "filename": "pytups-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "febd15eca4923fc1fa21f333a3a62ae5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9961, "upload_time": "2019-10-08T10:53:04", "upload_time_iso_8601": "2019-10-08T10:53:04.926781Z", "url": "https://files.pythonhosted.org/packages/25/f6/570c6dc639aa5411be2046a919823f4738cfd3d1b4a086a48fb360815d79/pytups-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b35d7e5b319cc974a48dd37f16c18e7d", "sha256": "39855dec3ae74e06ed927ce9e27756f0285df325f755b4449698fab6ce19af3c"}, "downloads": -1, "filename": "pytups-0.4.tar.gz", "has_sig": false, "md5_digest": "b35d7e5b319cc974a48dd37f16c18e7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7903, "upload_time": "2019-10-08T10:53:06", "upload_time_iso_8601": "2019-10-08T10:53:06.734911Z", "url": "https://files.pythonhosted.org/packages/23/f2/c4ab6c37222d5b8fbe1dc0d7bc8b0224182183b710e1c3d81aba74da8f9b/pytups-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "c8eaf7816f2d0728242a8f81ad504855", "sha256": "7539e60671dc7f058e3fbe356bacb866b3308882bebe3523eae3ff97116b82c4"}, "downloads": -1, "filename": "pytups-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "c8eaf7816f2d0728242a8f81ad504855", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9949, "upload_time": "2019-10-08T11:30:53", "upload_time_iso_8601": "2019-10-08T11:30:53.633791Z", "url": "https://files.pythonhosted.org/packages/7e/57/e0b9869216e24019c9a10be0f9ba1d8b0366b57facba43c8618539d284a5/pytups-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b47e5c172dfdea3dc1aeafc44062d53", "sha256": "9aa36ad02496fe3770a4005f15f01331e50a71976eacd1fd4b5258bbe0c4149e"}, "downloads": -1, "filename": "pytups-0.5.tar.gz", "has_sig": false, "md5_digest": "1b47e5c172dfdea3dc1aeafc44062d53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7873, "upload_time": "2019-10-08T11:30:55", "upload_time_iso_8601": "2019-10-08T11:30:55.347126Z", "url": "https://files.pythonhosted.org/packages/a7/0f/8662aca70d74e1b21c543a9613dfc736e0bb69f63af26aeff639e92f3a24/pytups-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "0cf77a2d1b7f78796e79ec1ecac27ef1", "sha256": "b76f0f705a9a34cad6f1703dda9491229272552b1ef5dc6c683f62d4aef59ad0"}, "downloads": -1, "filename": "pytups-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "0cf77a2d1b7f78796e79ec1ecac27ef1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10320, "upload_time": "2019-11-23T23:43:54", "upload_time_iso_8601": "2019-11-23T23:43:54.500452Z", "url": "https://files.pythonhosted.org/packages/ec/94/7996dc2087d7f5b7983a748118de84a11f4a93e4365a22757f78308928bc/pytups-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ea688a32a4ecab7b55c589bd84fc9c0", "sha256": "c11ca5517f78c65c0f04830bebf2119cff81c90d871e7db85b220ee358878cd7"}, "downloads": -1, "filename": "pytups-0.6.tar.gz", "has_sig": false, "md5_digest": "2ea688a32a4ecab7b55c589bd84fc9c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8512, "upload_time": "2019-11-23T23:43:55", "upload_time_iso_8601": "2019-11-23T23:43:55.760287Z", "url": "https://files.pythonhosted.org/packages/c0/50/60136b3bbe832e7d11f26dcac00086288a09186dec2b93aa93356347e366/pytups-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0cf77a2d1b7f78796e79ec1ecac27ef1", "sha256": "b76f0f705a9a34cad6f1703dda9491229272552b1ef5dc6c683f62d4aef59ad0"}, "downloads": -1, "filename": "pytups-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "0cf77a2d1b7f78796e79ec1ecac27ef1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10320, "upload_time": "2019-11-23T23:43:54", "upload_time_iso_8601": "2019-11-23T23:43:54.500452Z", "url": "https://files.pythonhosted.org/packages/ec/94/7996dc2087d7f5b7983a748118de84a11f4a93e4365a22757f78308928bc/pytups-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ea688a32a4ecab7b55c589bd84fc9c0", "sha256": "c11ca5517f78c65c0f04830bebf2119cff81c90d871e7db85b220ee358878cd7"}, "downloads": -1, "filename": "pytups-0.6.tar.gz", "has_sig": false, "md5_digest": "2ea688a32a4ecab7b55c589bd84fc9c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8512, "upload_time": "2019-11-23T23:43:55", "upload_time_iso_8601": "2019-11-23T23:43:55.760287Z", "url": "https://files.pythonhosted.org/packages/c0/50/60136b3bbe832e7d11f26dcac00086288a09186dec2b93aa93356347e366/pytups-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:54 2020"}