{"info": {"author": "ctgk", "author_email": "r1135nj54w@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# pyautocast\nPython library to automatically cast function arguments using decorator.\n\n## Install\n\n```bash\npip install pyautocast\n```\n\n## Usage\n\n```py\n>>> from pyautocast import autocast\n>>> @autocast(x=str)\n... def func(x):\n...     assert(isinstance(x, str))\n...     return \"arg 'x' in func() is \" + x\n...\n>>> func(2)\n\"arg 'x' in func() is 2\"\n>>> func([1, 2, 3])\n\"arg 'x' in func() is [1, 2, 3]\"\n```\n\n```py\n>>> from pyautocast import CustomCast\n>>> mycast = CustomCast()\n>>> mycast.add_cast_rule(int, tuple, lambda x: (x, x))\n>>> @mycast.autocast(x=tuple)\n... def func(x):\n...     print(x)\n>>> func(2)\n(2, 2)\n>>> func(-4.5)\nTraceback (most recent call last):\n...\nTypeError: 'float' object is not iterable\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ctgk/pyautocast", "keywords": "", "license": "MIT", "maintainer": "ctgk", "maintainer_email": "r1135nj54w@gmail.com", "name": "pyautocast", "package_url": "https://pypi.org/project/pyautocast/", "platform": "", "project_url": "https://pypi.org/project/pyautocast/", "project_urls": {"Homepage": "https://github.com/ctgk/pyautocast"}, "release_url": "https://pypi.org/project/pyautocast/0.1.1/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Automatic function arguments casting", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyautocast</h1>\n<p>Python library to automatically cast function arguments using decorator.</p>\n<h2>Install</h2>\n<pre>pip install pyautocast\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyautocast</span> <span class=\"kn\">import</span> <span class=\"n\">autocast</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@autocast</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n<span class=\"o\">...</span> <span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">assert</span><span class=\"p\">(</span><span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">))</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"s2\">\"arg 'x' in func() is \"</span> <span class=\"o\">+</span> <span class=\"n\">x</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"s2\">\"arg 'x' in func() is 2\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">func</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"s2\">\"arg 'x' in func() is [1, 2, 3]\"</span>\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyautocast</span> <span class=\"kn\">import</span> <span class=\"n\">CustomCast</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mycast</span> <span class=\"o\">=</span> <span class=\"n\">CustomCast</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mycast</span><span class=\"o\">.</span><span class=\"n\">add_cast_rule</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@mycast</span><span class=\"o\">.</span><span class=\"n\">autocast</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"nb\">tuple</span><span class=\"p\">)</span>\n<span class=\"o\">...</span> <span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">4.5</span><span class=\"p\">)</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"s1\">'float'</span> <span class=\"nb\">object</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">iterable</span>\n</pre>\n\n          </div>"}, "last_serial": 6944849, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "cf2c28637f160bf3e236411289db9b94", "sha256": "332c04ac7ca54e75652e8f74cd3733d6b219e5a8d0c9142e1267b37648f5e852"}, "downloads": -1, "filename": "pyautocast-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cf2c28637f160bf3e236411289db9b94", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2731, "upload_time": "2020-04-03T17:24:46", "upload_time_iso_8601": "2020-04-03T17:24:46.086825Z", "url": "https://files.pythonhosted.org/packages/06/de/90b2986ec342b1d4f0a814f4509c771559df981be05f85c57111f793c0cd/pyautocast-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "0ec6b86806721cb44b47fbafb1e1a0bb", "sha256": "3213cf5ce29eb6baeab6f1dbbea798794083a3343b157fee5994679c386e19f6"}, "downloads": -1, "filename": "pyautocast-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0ec6b86806721cb44b47fbafb1e1a0bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2733, "upload_time": "2020-04-03T17:27:48", "upload_time_iso_8601": "2020-04-03T17:27:48.051182Z", "url": "https://files.pythonhosted.org/packages/5e/45/720a996fdcad8a295b73b86ad7eb60669dd834b418d758a793376f94239d/pyautocast-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0ec6b86806721cb44b47fbafb1e1a0bb", "sha256": "3213cf5ce29eb6baeab6f1dbbea798794083a3343b157fee5994679c386e19f6"}, "downloads": -1, "filename": "pyautocast-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0ec6b86806721cb44b47fbafb1e1a0bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2733, "upload_time": "2020-04-03T17:27:48", "upload_time_iso_8601": "2020-04-03T17:27:48.051182Z", "url": "https://files.pythonhosted.org/packages/5e/45/720a996fdcad8a295b73b86ad7eb60669dd834b418d758a793376f94239d/pyautocast-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:34 2020"}