{"info": {"author": "Matthew de Verteuil", "author_email": "mdeverteuil@gadventures.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "Barrier\n=======\n\nServe static files safely behind OpenIDConnect-compatible authentication (i.e. Okta)\n\nOpenID Connect Provider Set-up\n------------------------------\n\nOkta\n~~~~\n\nThe following steps will get you the values necessary to integrate Okta with your Barrier-protected content.\n\n#.  Go to the **Applications** section of your Okta admin app. (hint: the url of the admin app is ``https://<your organization>>-admin.okta.com/dev/console``)\n#.  Click **Add Application**\n#.  On the **Create New Application** page, choose **Web** and click **Next**\n#.  You will need to enter some details about the application:\n\n    *  Name: ``<your barrier-protected site name>``\n\n    *  Base URIs: ``https://<your barrier-protected domain>/``\n        *  or ``http://localhost:8000`` during development)\n\n    *  Login redirect URIs: ``https://<your barrier-protected domain>/oidc/callback``\n        *  or ``http://localhost:8000/oidc/callback``, & ``http://localhost:5000/oidc/callback`` during development\n\n    *  Group Assigments: **Everyone** is fine, unless you have specific requirements.\n\n    *  Grant Type Allowed:\n        *  Client acting on behalf of itself\n            *  ``[ ]`` Client Credentials\n        *  Client acting on behalf of a user\n            *  ``[x]`` Authorization Code\n            *  ``[ ]`` Refresh Token\n            *  ``[ ]`` Implicit (Hybrid)\n\n#.  Click **Next** again\n#.  You're now at the General Settings for your new Okta integration, scroll to the bottom and copy the **Client ID** and **Client secret** values.\n#.  Visit the **Dashboard** page and copy the **Org URL**.\n#.  Use the following guide to set your environment variables [1]_ :\n\n    *  ``BARRIER_CLIENT_ID`` = **Client ID**\n    *  ``BARRIER_CLIENT_SECRET`` = **Client secret**\n    *  ``BARRIER_AUTH_URI`` = ``<Org URL>/oauth2/default/v1/authorize``\n    *  ``BARRIER_TOKEN_URI`` = ``<Org URL>/oauth2/default/v1/token``\n    *  ``BARRIER_ISSUER`` = ``<Org URL>/oauth2/default``\n    *  ``BARRIER_USERINFO_URI`` = ``<Org URL>/oauth2/default/userinfo``\n\n#. Congratulations! You're ready to install or deploy!\n\nInstallation\n------------\n\n.. code::\n\n    $ pip install (--user) https://github.com/gadventures/barrier\n\nCommands\n--------\n\nThe following is a brief overview, but you can call any of these commands with ``--help`` for more information.\n\n``barrier-config``\n    Generate \"client-secrets.json\", required for running the other commands. See the help text for required options. Options passed on the command line will override any values set in the environment.\n``barrier-dev``\n    Flask development server. Useful if extending this project to add more features.\n``barrier-wsgi``\n    Gunicorn WSGI wrapper. Can be placed behind nginx, Apache, or whatever you like.\n\nEnvironment\n-----------\n\nRequired\n~~~~~~~~\n\n+-----------------------------+-----------------------------------------------------------------+-------------------------------------------------------------------------------------------+\n| Name                        | Description                                                     | Where to get it                                                                           |\n+=============================+=================================================================+===========================================================================================+\n| ``BARRIER_USERINFO_URI``    | UserInfo URI. Part of OpenIDConnect secrets configuration.      | OpenID Connect Provider                                                                   |\n+-----------------------------+-----------------------------------------------------------------+-------------------------------------------------------------------------------------------+\n| ``BARRIER_ISSUER``          | Issuer ID. Part of OpenIDConnect secrets configuration.         | OpenID Connect Provider                                                                   |\n+-----------------------------+-----------------------------------------------------------------+-------------------------------------------------------------------------------------------+\n| ``BARRIER_TOKEN_URI``       | Token URI. Part of OpenIDConnect secrets configuration.         | OpenID Connect Provider                                                                   |\n+-----------------------------+-----------------------------------------------------------------+-------------------------------------------------------------------------------------------+\n| ``BARRIER_AUTH_URI``        | Auth URI. Part of OpenIDConnect secrets configuration.          | OpenID Connect Provider                                                                   |\n+-----------------------------+-----------------------------------------------------------------+-------------------------------------------------------------------------------------------+\n| ``BARRIER_CLIENT_SECRET``   | Client Secret Key. Part of OpenIDConnect secrets configuration. | OpenID Connect Provider                                                                   |\n+-----------------------------+-----------------------------------------------------------------+-------------------------------------------------------------------------------------------+\n| ``BARRIER_CLIENT_ID``       | Client ID. Part of OpenIDConnect secrets configuration.         | OpenID Connect Provider                                                                   |\n+-----------------------------+-----------------------------------------------------------------+-------------------------------------------------------------------------------------------+\n| ``BARRIER_REDIRECT_URI``    | Redirect URI. Part of OpenIDConnect secrets configuration.      | OpenID Connect Provider, The value to set is: ``https://{your-hostname}/oidc/callback``   |\n+-----------------------------+-----------------------------------------------------------------+-------------------------------------------------------------------------------------------+\n| ``BARRIER_SECRET_KEY``      | Used for HMAC Authentication. Generate a long random string.    | Any source of random information                                                          |\n+-----------------------------+-----------------------------------------------------------------+-------------------------------------------------------------------------------------------+\n\nOptional\n~~~~~~~~\n\n+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+\n| Name                           | Description                                                                                                                                                                                                    | Where to get it                                                                                                |\n+================================+================================================================================================================================================================================================================+================================================================================================================+\n| ``BARRIER_RESOURCE_ROOT``      | Root path of static files to serve. (Default: ``./build/html``)                                                                                                                                                  | Wherever you choose to add the static files in your custom layer, or add your files to the default location. |\n+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+\n| ``BARRIER_DEFAULT_RESOURCE``   | The file/path that users will be redirected to after login. (Default: ``index.html``)                                                                                                                          | Probably not necessary to change this.                                                                         |\n+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+\n| ``BARRIER_CLIENT_SECRETS``     | OpenIDConnect secrets configuration file location. If your provider allows automatic configuration download and has a different filename, override with that filename here. (Default: ``client-secrets.json``) | OpenID Connect Provider                                                                                        |\n+--------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+\n\n\n.. [1] https://developer.okta.com/blog/2018/07/12/flask-tutorial-simple-user-registration-and-login#step-1-create-an-openid-connect-config-file\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gadventures/barrier", "keywords": "", "license": "MIT", "maintainer": "Matthew de Verteuil", "maintainer_email": "mdeverteuil@gadventures.com", "name": "barrier", "package_url": "https://pypi.org/project/barrier/", "platform": "", "project_url": "https://pypi.org/project/barrier/", "project_urls": {"Homepage": "https://github.com/gadventures/barrier", "Repository": "https://github.com/gadventures/barrier"}, "release_url": "https://pypi.org/project/barrier/0.2.2/", "requires_dist": ["Flask (>=1.1,<2.0)", "flask-oidc (>=1.4,<2.0)", "gunicorn (>=19.9,<20.0)", "poetry-version (>=0.1.3,<0.2.0)"], "requires_python": ">=3.7,<4.0", "summary": "Serve static files safely behind OpenIDConnect-compatible authentication (i.e. Okta)", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Serve static files safely behind OpenIDConnect-compatible authentication (i.e. Okta)</p>\n<div id=\"openid-connect-provider-set-up\">\n<h2>OpenID Connect Provider Set-up</h2>\n<h2 id=\"okta\"><span class=\"section-subtitle\">Okta</span></h2>\n<p>The following steps will get you the values necessary to integrate Okta with your Barrier-protected content.</p>\n<ol>\n<li>Go to the <strong>Applications</strong> section of your Okta admin app. (hint: the url of the admin app is <tt><span class=\"pre\">https://&lt;your</span> <span class=\"pre\">organization&gt;&gt;-admin.okta.com/dev/console</span></tt>)</li>\n<li>Click <strong>Add Application</strong></li>\n<li>On the <strong>Create New Application</strong> page, choose <strong>Web</strong> and click <strong>Next</strong></li>\n<li>You will need to enter some details about the application:<ul>\n<li>Name: <tt>&lt;your <span class=\"pre\">barrier-protected</span> site name&gt;</tt></li>\n<li><dl>\n<dt>Base URIs: <tt><span class=\"pre\">https://&lt;your</span> <span class=\"pre\">barrier-protected</span> domain&gt;/</tt></dt>\n<dd><ul>\n<li>or <tt><span class=\"pre\">http://localhost:8000</span></tt> during development)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Login redirect URIs: <tt><span class=\"pre\">https://&lt;your</span> <span class=\"pre\">barrier-protected</span> <span class=\"pre\">domain&gt;/oidc/callback</span></tt></dt>\n<dd><ul>\n<li>or <tt><span class=\"pre\">http://localhost:8000/oidc/callback</span></tt>, &amp; <tt><span class=\"pre\">http://localhost:5000/oidc/callback</span></tt> during development</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Group Assigments: <strong>Everyone</strong> is fine, unless you have specific requirements.</li>\n<li><dl>\n<dt>Grant Type Allowed:</dt>\n<dd><ul>\n<li><dl>\n<dt>Client acting on behalf of itself</dt>\n<dd><ul>\n<li><tt>[ ]</tt> Client Credentials</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Client acting on behalf of a user</dt>\n<dd><ul>\n<li><tt>[x]</tt> Authorization Code</li>\n<li><tt>[ ]</tt> Refresh Token</li>\n<li><tt>[ ]</tt> Implicit (Hybrid)</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</li>\n<li>Click <strong>Next</strong> again</li>\n<li>You\u2019re now at the General Settings for your new Okta integration, scroll to the bottom and copy the <strong>Client ID</strong> and <strong>Client secret</strong> values.</li>\n<li>Visit the <strong>Dashboard</strong> page and copy the <strong>Org URL</strong>.</li>\n<li>Use the following guide to set your environment variables <a href=\"#id2\" id=\"id1\" rel=\"nofollow\">[1]</a> :<ul>\n<li><tt>BARRIER_CLIENT_ID</tt> = <strong>Client ID</strong></li>\n<li><tt>BARRIER_CLIENT_SECRET</tt> = <strong>Client secret</strong></li>\n<li><tt>BARRIER_AUTH_URI</tt> = <tt>&lt;Org <span class=\"pre\">URL&gt;/oauth2/default/v1/authorize</span></tt></li>\n<li><tt>BARRIER_TOKEN_URI</tt> = <tt>&lt;Org <span class=\"pre\">URL&gt;/oauth2/default/v1/token</span></tt></li>\n<li><tt>BARRIER_ISSUER</tt> = <tt>&lt;Org <span class=\"pre\">URL&gt;/oauth2/default</span></tt></li>\n<li><tt>BARRIER_USERINFO_URI</tt> = <tt>&lt;Org <span class=\"pre\">URL&gt;/oauth2/default/userinfo</span></tt></li>\n</ul>\n</li>\n<li>Congratulations! You\u2019re ready to install or deploy!</li>\n</ol>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install (--user) https://github.com/gadventures/barrier\n</pre>\n</div>\n<div id=\"commands\">\n<h2>Commands</h2>\n<p>The following is a brief overview, but you can call any of these commands with <tt><span class=\"pre\">--help</span></tt> for more information.</p>\n<dl>\n<dt><tt><span class=\"pre\">barrier-config</span></tt></dt>\n<dd>Generate \u201cclient-secrets.json\u201d, required for running the other commands. See the help text for required options. Options passed on the command line will override any values set in the environment.</dd>\n<dt><tt><span class=\"pre\">barrier-dev</span></tt></dt>\n<dd>Flask development server. Useful if extending this project to add more features.</dd>\n<dt><tt><span class=\"pre\">barrier-wsgi</span></tt></dt>\n<dd>Gunicorn WSGI wrapper. Can be placed behind nginx, Apache, or whatever you like.</dd>\n</dl>\n</div>\n<div id=\"environment\">\n<h2>Environment</h2>\n<div id=\"required\">\n<h3>Required</h3>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Name</th>\n<th>Description</th>\n<th>Where to get it</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>BARRIER_USERINFO_URI</tt></td>\n<td>UserInfo URI. Part of OpenIDConnect secrets configuration.</td>\n<td>OpenID Connect Provider</td>\n</tr>\n<tr><td><tt>BARRIER_ISSUER</tt></td>\n<td>Issuer ID. Part of OpenIDConnect secrets configuration.</td>\n<td>OpenID Connect Provider</td>\n</tr>\n<tr><td><tt>BARRIER_TOKEN_URI</tt></td>\n<td>Token URI. Part of OpenIDConnect secrets configuration.</td>\n<td>OpenID Connect Provider</td>\n</tr>\n<tr><td><tt>BARRIER_AUTH_URI</tt></td>\n<td>Auth URI. Part of OpenIDConnect secrets configuration.</td>\n<td>OpenID Connect Provider</td>\n</tr>\n<tr><td><tt>BARRIER_CLIENT_SECRET</tt></td>\n<td>Client Secret Key. Part of OpenIDConnect secrets configuration.</td>\n<td>OpenID Connect Provider</td>\n</tr>\n<tr><td><tt>BARRIER_CLIENT_ID</tt></td>\n<td>Client ID. Part of OpenIDConnect secrets configuration.</td>\n<td>OpenID Connect Provider</td>\n</tr>\n<tr><td><tt>BARRIER_REDIRECT_URI</tt></td>\n<td>Redirect URI. Part of OpenIDConnect secrets configuration.</td>\n<td>OpenID Connect Provider, The value to set is: <tt><span class=\"pre\">https://{your-hostname}/oidc/callback</span></tt></td>\n</tr>\n<tr><td><tt>BARRIER_SECRET_KEY</tt></td>\n<td>Used for HMAC Authentication. Generate a long random string.</td>\n<td>Any source of random information</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"optional\">\n<h3>Optional</h3>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Name</th>\n<th>Description</th>\n<th>Where to get it</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>BARRIER_RESOURCE_ROOT</tt></td>\n<td>Root path of static files to serve. (Default: <tt>./build/html</tt>)                                                                                                                                                  | Wherever you choose to add the static files in your custom layer, or add your files to the default location.</td>\n</tr>\n<tr><td><tt>BARRIER_DEFAULT_RESOURCE</tt></td>\n<td>The file/path that users will be redirected to after login. (Default: <tt>index.html</tt>)</td>\n<td>Probably not necessary to change this.</td>\n</tr>\n<tr><td><tt>BARRIER_CLIENT_SECRETS</tt></td>\n<td>OpenIDConnect secrets configuration file location. If your provider allows automatic configuration download and has a different filename, override with that filename here. (Default: <tt><span class=\"pre\">client-secrets.json</span></tt>)</td>\n<td>OpenID Connect Provider</td>\n</tr>\n</tbody>\n</table>\n<table id=\"id2\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td><a href=\"https://developer.okta.com/blog/2018/07/12/flask-tutorial-simple-user-registration-and-login#step-1-create-an-openid-connect-config-file\" rel=\"nofollow\">https://developer.okta.com/blog/2018/07/12/flask-tutorial-simple-user-registration-and-login#step-1-create-an-openid-connect-config-file</a></td></tr>\n</tbody>\n</table>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5642048, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "2e11ec894ae5be010dc69715efa798d7", "sha256": "2c84caef5943444f2de824de85dd47a5c521bdf9f435401ea8aea9cd2aaaa3dd"}, "downloads": -1, "filename": "barrier-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2e11ec894ae5be010dc69715efa798d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 5648, "upload_time": "2019-08-05T19:06:40", "upload_time_iso_8601": "2019-08-05T19:06:40.990265Z", "url": "https://files.pythonhosted.org/packages/c7/17/f19fedb60995c6e5f7f46c199b34b8ba9ab064fa680669809005945efa01/barrier-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca143a0035a286117c1e4601a03fbe95", "sha256": "11cc2daea44da756c9f985bda2543a4fa77ec485751395edc86d05ed5a112e16"}, "downloads": -1, "filename": "barrier-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ca143a0035a286117c1e4601a03fbe95", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 4584, "upload_time": "2019-08-05T19:06:43", "upload_time_iso_8601": "2019-08-05T19:06:43.036293Z", "url": "https://files.pythonhosted.org/packages/a8/d5/d3cac1be71b4e41e04b68ecf9ae0593dee71c7d27eac0a4624678c00de2a/barrier-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "0999740ab49deb51516f393f26c9814a", "sha256": "903686d88f42eaf9447d5737bba7b3a1e517bbac1e2bed0ebdae469bb3ba1ce8"}, "downloads": -1, "filename": "barrier-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0999740ab49deb51516f393f26c9814a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7610, "upload_time": "2019-08-05T19:10:42", "upload_time_iso_8601": "2019-08-05T19:10:42.024037Z", "url": "https://files.pythonhosted.org/packages/11/6d/044f735ce4eae2f10ffd8ff0dde7eeee29ce5373121ceb8ea41442b14be2/barrier-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f83aecea8aa650e60f91b5c3ada9333d", "sha256": "d0114a82b8bb74272fb90dec50ab2205670aaafcc48a571f49e99fd48dfe8f13"}, "downloads": -1, "filename": "barrier-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f83aecea8aa650e60f91b5c3ada9333d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 7258, "upload_time": "2019-08-05T19:10:43", "upload_time_iso_8601": "2019-08-05T19:10:43.241969Z", "url": "https://files.pythonhosted.org/packages/44/f2/53b951c4a015bc27e95f5c7adef4110ab99dd0cde43bcb079c5e09a4d330/barrier-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f8b50ac5040be240746461e890f42efb", "sha256": "d6d36b2c3b7a84185e593c682129cec1a90f8b32a1f6b4940750e27cbd452558"}, "downloads": -1, "filename": "barrier-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f8b50ac5040be240746461e890f42efb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7623, "upload_time": "2019-08-05T19:52:59", "upload_time_iso_8601": "2019-08-05T19:52:59.468273Z", "url": "https://files.pythonhosted.org/packages/23/74/92ced7ff055f707bb208c3c7ec4261d118bf09c75c80ead9b4059cb01983/barrier-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6c9bc95fd203fedc52c8a406b1be569", "sha256": "4abda57d8471b62f52fdc2601670b597ec95a412938207b9e1129575c7374022"}, "downloads": -1, "filename": "barrier-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a6c9bc95fd203fedc52c8a406b1be569", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 7264, "upload_time": "2019-08-05T19:53:01", "upload_time_iso_8601": "2019-08-05T19:53:01.334784Z", "url": "https://files.pythonhosted.org/packages/82/7b/b01cde57678a61a6d3aa4bca7b6c7e0daa153508a4f8b6d51200dd29a8ff/barrier-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "66d24db3a746b98fb17c58c89c83d5d6", "sha256": "6190726424b6fd698fa0bdfbb3f96abb16beb4eb0fe8d55e3111463a20d30611"}, "downloads": -1, "filename": "barrier-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "66d24db3a746b98fb17c58c89c83d5d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7648, "upload_time": "2019-08-05T19:58:22", "upload_time_iso_8601": "2019-08-05T19:58:22.239434Z", "url": "https://files.pythonhosted.org/packages/18/2e/869eec7691e0004345533db1ec858caf1d1409b43572052ffbf4647da7c3/barrier-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d85ff926d613b784245d0171188f915e", "sha256": "950b96cb52b788e65f309bf420ef2d7690ee8e881ba30fb2a896a0999815e1d9"}, "downloads": -1, "filename": "barrier-0.2.1.tar.gz", "has_sig": false, "md5_digest": "d85ff926d613b784245d0171188f915e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 7289, "upload_time": "2019-08-05T19:58:23", "upload_time_iso_8601": "2019-08-05T19:58:23.571556Z", "url": "https://files.pythonhosted.org/packages/ac/f6/c0ba38dd4a0a2f736f93e054d3250138168e0c13499bbdc443e17a055f86/barrier-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "12e0c3ed17d60118f1a6cf254c63c66e", "sha256": "58f407827a81216bdcbb2ec9b8072240ce86f24f541fc2f773b1fae524bf7578"}, "downloads": -1, "filename": "barrier-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "12e0c3ed17d60118f1a6cf254c63c66e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7909, "upload_time": "2019-08-06T22:32:09", "upload_time_iso_8601": "2019-08-06T22:32:09.988307Z", "url": "https://files.pythonhosted.org/packages/9e/0d/ffdc5d2dc5d3d68415ae3868f8271aa4a71519acd4e6c8bcb0a1c1d22cd0/barrier-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ab23d3ccc96dbec551924c85a29675a", "sha256": "1f9c586a6b8c79006a4500bc2d2270a699a9ebec603ece145dec418fe55e1902"}, "downloads": -1, "filename": "barrier-0.2.2.tar.gz", "has_sig": false, "md5_digest": "6ab23d3ccc96dbec551924c85a29675a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 7537, "upload_time": "2019-08-06T22:32:11", "upload_time_iso_8601": "2019-08-06T22:32:11.721450Z", "url": "https://files.pythonhosted.org/packages/ee/ef/54c1714f8d32ba2dd8cddd3b3eaa26cec389ea0bf4ac75ccc71b69ba1a60/barrier-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "12e0c3ed17d60118f1a6cf254c63c66e", "sha256": "58f407827a81216bdcbb2ec9b8072240ce86f24f541fc2f773b1fae524bf7578"}, "downloads": -1, "filename": "barrier-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "12e0c3ed17d60118f1a6cf254c63c66e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7909, "upload_time": "2019-08-06T22:32:09", "upload_time_iso_8601": "2019-08-06T22:32:09.988307Z", "url": "https://files.pythonhosted.org/packages/9e/0d/ffdc5d2dc5d3d68415ae3868f8271aa4a71519acd4e6c8bcb0a1c1d22cd0/barrier-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ab23d3ccc96dbec551924c85a29675a", "sha256": "1f9c586a6b8c79006a4500bc2d2270a699a9ebec603ece145dec418fe55e1902"}, "downloads": -1, "filename": "barrier-0.2.2.tar.gz", "has_sig": false, "md5_digest": "6ab23d3ccc96dbec551924c85a29675a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 7537, "upload_time": "2019-08-06T22:32:11", "upload_time_iso_8601": "2019-08-06T22:32:11.721450Z", "url": "https://files.pythonhosted.org/packages/ee/ef/54c1714f8d32ba2dd8cddd3b3eaa26cec389ea0bf4ac75ccc71b69ba1a60/barrier-0.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:51 2020"}