{"info": {"author": "Varun Belur, Sapan Bhatia, Zack Williams", "author_email": "varun@opennetworking.org,sapan@opennetworking.org,zdw@opennetworking.org ", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: System :: Logging"], "description": "multistructlog\n==============\n\nThis module is a thin wrapper around Structlog that sets and provides defaults\nfor sending logs to one or more logging destinations with individual formatting\nper destination.\n\nThe API consists of a single function: ``create_logger()``.\n\nArgs:\n    logging_config (dict):    Input to logging.config.dictConfig\n\n    level(logging.loglevel):  Overrides logging level for all loggers (not handlers!)\n\nReturns:\n    log: structlog Logger object\n\nIt can be invoked as follows:\n\n    logging_config = ...\n\n    log = multistructlog.create_logger(config, level=logging.INFO)\n\n    log.info('Entered function', foo='bar')\n\nTo create a ``logging_config`` dictionary, see these docs:\n\n- https://docs.python.org/2.7/library/logging.config.html#logging.config.dictConfig\n- http://www.structlog.org/en/stable/standard-library.html#rendering-using-structlog-based-formatters-within-logging\n\nThere are no required arguments to `create_logger()` - any missing parts of the\nconfig will be filled in with defaults that print structured logs to the\nconsole.\n\nIf you don't specify a ``formatters`` section in your config, three will be\ncreated which can be used in handlers:\n\n- ``json``: renders one JSON dictionary per message\n- ``structured``: prints structured logs with the ``structlog.dev.ConsoleRenderer``\n- ``structured-color``: same as ``structured`` but with forced color output\n\nIf you don't specify a ``handlers`` section, a handler will be added that logs\nto console with ``logging.StreamHandler`` with format ``structured`` at level\n``DEBUG``.\n\nIf you don't specify a ``loggers`` section, a default logger (empty string)\nwill be created with all items in ``handlers`` added to it, with a level of\n``NOTSET`` (every level printed).\n\nWhen setting log level, the higher of ``logging_config['loggers'][*]['level']``\nand ``logging_config['handlers'][*]['level']`` is used. The ``level`` parameter\noverrides the ``loggers`` value of level, not the ``handlers`` level.\n\nIf the handler's level is set to ``DEBUG`` but the logger's level is set to\n``ERROR``, the handler will be overridden and only log ``ERROR`` level messages.\n\nMultistructlog also adds a ``TRACE`` log level (integer level 5) that is below\n\"DEBUG\" to both standard library ``Logger`` and Structlog ``BoundLogger``.\n\nList of standard logging levels:\n https://docs.python.org/2.7/library/logging.html#logging-levels\n\nChangelog\n---------\n1.x versions\n\n- legacy\n\n2.0.0\n\n- Substantial refactor/rewrite\n- Cache logger objects\n- Add trace levels\n\n2.1.0\n\n- Force color on when using structured-color formatter\n- Print timestamp and loglevel by default\n- Fix issues with reinitialziaton of logger", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "multistructlog,structlog,multiple backends", "license": "Apache v2", "maintainer": "", "maintainer_email": "", "name": "multistructlog", "package_url": "https://pypi.org/project/multistructlog/", "platform": "", "project_url": "https://pypi.org/project/multistructlog/", "project_urls": null, "release_url": "https://pypi.org/project/multistructlog/2.1.0/", "requires_dist": null, "requires_python": "", "summary": "structlog with multiple simultaneous logging backends", "version": "2.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This module is a thin wrapper around Structlog that sets and provides defaults\nfor sending logs to one or more logging destinations with individual formatting\nper destination.</p>\n<p>The API consists of a single function: <tt>create_logger()</tt>.</p>\n<dl>\n<dt>Args:</dt>\n<dd><p>logging_config (dict):    Input to logging.config.dictConfig</p>\n<p>level(logging.loglevel):  Overrides logging level for all loggers (not handlers!)</p>\n</dd>\n<dt>Returns:</dt>\n<dd>log: structlog Logger object</dd>\n</dl>\n<p>It can be invoked as follows:</p>\n<blockquote>\n<p>logging_config = \u2026</p>\n<p>log = multistructlog.create_logger(config, level=logging.INFO)</p>\n<p>log.info(\u2018Entered function\u2019, foo=\u2019bar\u2019)</p>\n</blockquote>\n<p>To create a <tt>logging_config</tt> dictionary, see these docs:</p>\n<ul>\n<li><a href=\"https://docs.python.org/2.7/library/logging.config.html#logging.config.dictConfig\" rel=\"nofollow\">https://docs.python.org/2.7/library/logging.config.html#logging.config.dictConfig</a></li>\n<li><a href=\"http://www.structlog.org/en/stable/standard-library.html#rendering-using-structlog-based-formatters-within-logging\" rel=\"nofollow\">http://www.structlog.org/en/stable/standard-library.html#rendering-using-structlog-based-formatters-within-logging</a></li>\n</ul>\n<p>There are no required arguments to <cite>create_logger()</cite> - any missing parts of the\nconfig will be filled in with defaults that print structured logs to the\nconsole.</p>\n<p>If you don\u2019t specify a <tt>formatters</tt> section in your config, three will be\ncreated which can be used in handlers:</p>\n<ul>\n<li><tt>json</tt>: renders one JSON dictionary per message</li>\n<li><tt>structured</tt>: prints structured logs with the <tt>structlog.dev.ConsoleRenderer</tt></li>\n<li><tt><span class=\"pre\">structured-color</span></tt>: same as <tt>structured</tt> but with forced color output</li>\n</ul>\n<p>If you don\u2019t specify a <tt>handlers</tt> section, a handler will be added that logs\nto console with <tt>logging.StreamHandler</tt> with format <tt>structured</tt> at level\n<tt>DEBUG</tt>.</p>\n<p>If you don\u2019t specify a <tt>loggers</tt> section, a default logger (empty string)\nwill be created with all items in <tt>handlers</tt> added to it, with a level of\n<tt>NOTSET</tt> (every level printed).</p>\n<p>When setting log level, the higher of <tt><span class=\"pre\">logging_config['loggers'][*]['level']</span></tt>\nand <tt><span class=\"pre\">logging_config['handlers'][*]['level']</span></tt> is used. The <tt>level</tt> parameter\noverrides the <tt>loggers</tt> value of level, not the <tt>handlers</tt> level.</p>\n<p>If the handler\u2019s level is set to <tt>DEBUG</tt> but the logger\u2019s level is set to\n<tt>ERROR</tt>, the handler will be overridden and only log <tt>ERROR</tt> level messages.</p>\n<p>Multistructlog also adds a <tt>TRACE</tt> log level (integer level 5) that is below\n\u201cDEBUG\u201d to both standard library <tt>Logger</tt> and Structlog <tt>BoundLogger</tt>.</p>\n<dl>\n<dt>List of standard logging levels:</dt>\n<dd><a href=\"https://docs.python.org/2.7/library/logging.html#logging-levels\" rel=\"nofollow\">https://docs.python.org/2.7/library/logging.html#logging-levels</a></dd>\n</dl>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>1.x versions</p>\n<ul>\n<li>legacy</li>\n</ul>\n<p>2.0.0</p>\n<ul>\n<li>Substantial refactor/rewrite</li>\n<li>Cache logger objects</li>\n<li>Add trace levels</li>\n</ul>\n<p>2.1.0</p>\n<ul>\n<li>Force color on when using structured-color formatter</li>\n<li>Print timestamp and loglevel by default</li>\n<li>Fix issues with reinitialziaton of logger</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4857414, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "b04e6cb101b70362e05433610d9e8aa0", "sha256": "76b338a8ace29c18afccfb882bf46d91bd5afe95b0e8c81fde2ec92304b380c4"}, "downloads": -1, "filename": "multistructlog-0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b04e6cb101b70362e05433610d9e8aa0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4404, "upload_time": "2017-08-24T12:14:09", "upload_time_iso_8601": "2017-08-24T12:14:09.293224Z", "url": "https://files.pythonhosted.org/packages/b4/51/04ea929aefdf1163141cf2df276576ec2b5b2ad3e1469256872048583f3c/multistructlog-0.9-py2.py3-none-any.whl", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "1e2013ee50f17012e8fe6018b254cf9d", "sha256": "04da5d74da3d737eddc6457b5e3a76f2492852a0040dfc9900449cc4d58cc4a5"}, "downloads": -1, "filename": "multistructlog-1.0-py2.7.egg", "has_sig": false, "md5_digest": "1e2013ee50f17012e8fe6018b254cf9d", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 5947, "upload_time": "2017-10-24T17:43:31", "upload_time_iso_8601": "2017-10-24T17:43:31.663500Z", "url": "https://files.pythonhosted.org/packages/d8/3e/6bd26a85f6525e1a6168738ffea7e5bebc84c47497322a612625abf4de75/multistructlog-1.0-py2.7.egg", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "f2afd056fd20fbe8ea5d1b2c2e006567", "sha256": "f92117c1bbd5125e7d26ca44e6d7e8b167fe4e114bfb7e876752b332abb3df55"}, "downloads": -1, "filename": "multistructlog-1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "f2afd056fd20fbe8ea5d1b2c2e006567", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4511, "upload_time": "2017-10-24T17:43:30", "upload_time_iso_8601": "2017-10-24T17:43:30.819401Z", "url": "https://files.pythonhosted.org/packages/22/32/2f5f4d73ac2ea4b86a720c2e6b7d1c94a6deca47316fefb75390faf12ac5/multistructlog-1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c11379f4549e66dfe585f8dc829af48a", "sha256": "08b6d87b798e6a9975804beacc6094acef9eb7fe973c81d56cf120447f02869d"}, "downloads": -1, "filename": "multistructlog-1.1.tar.gz", "has_sig": false, "md5_digest": "c11379f4549e66dfe585f8dc829af48a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3202, "upload_time": "2017-10-24T17:43:32", "upload_time_iso_8601": "2017-10-24T17:43:32.853966Z", "url": "https://files.pythonhosted.org/packages/62/4f/b7f9ec06cbad1dcdb3971c1b42a07176a86e38f9f1a3833c299f323a3f30/multistructlog-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "0b443a6d2cbb4fa362681d3979596b6e", "sha256": "4af644ad95ffd7c09f7bdcb971162b35b4c9fa601f9fadc8972748ef1ff46454"}, "downloads": -1, "filename": "multistructlog-1.2-py2.7.egg", "has_sig": true, "md5_digest": "0b443a6d2cbb4fa362681d3979596b6e", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 6076, "upload_time": "2017-10-31T18:38:44", "upload_time_iso_8601": "2017-10-31T18:38:44.028768Z", "url": "https://files.pythonhosted.org/packages/95/b1/3008eb5a731cc5e9fbdb81bc4f50483b269b452e5524153385f0c68a2dbd/multistructlog-1.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca6108896ca462f53519ca86f1db0c26", "sha256": "854eba7d37e13e8d122dab06e72d240afe45d1c201bbad086fd11bcda2b3e680"}, "downloads": -1, "filename": "multistructlog-1.2.tar.gz", "has_sig": true, "md5_digest": "ca6108896ca462f53519ca86f1db0c26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3232, "upload_time": "2017-10-31T18:44:55", "upload_time_iso_8601": "2017-10-31T18:44:55.830090Z", "url": "https://files.pythonhosted.org/packages/a8/05/cefa580366757120a3b78978d8c9976317b62a1141f5928b9249af90cdb3/multistructlog-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "98da4ae172a6a7daf3674af24f26e090", "sha256": "5c8e53b686f9a1100ac021e3f00412be7c9e855ce14e4f12d0b62f22fda5e032"}, "downloads": -1, "filename": "multistructlog-1.3.tar.gz", "has_sig": true, "md5_digest": "98da4ae172a6a7daf3674af24f26e090", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3226, "upload_time": "2017-10-31T18:47:38", "upload_time_iso_8601": "2017-10-31T18:47:38.611057Z", "url": "https://files.pythonhosted.org/packages/00/3d/13172dcbb5b7430d9bacc7d317aae37c3de7b8b84d819b532e141fabaaee/multistructlog-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "bcc80277d347c4e0e8e641cc7a8b7a23", "sha256": "670501fad11c124aa5625857c3827d0597cbb2ffee2d346c2afc8bf638edbf35"}, "downloads": -1, "filename": "multistructlog-1.4.tar.gz", "has_sig": true, "md5_digest": "bcc80277d347c4e0e8e641cc7a8b7a23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3212, "upload_time": "2017-11-02T13:22:55", "upload_time_iso_8601": "2017-11-02T13:22:55.529450Z", "url": "https://files.pythonhosted.org/packages/00/3a/0c3a54e6f9475812c47a9daeb61bdd9aaacf751f2ab1150f1a30b9866ec6/multistructlog-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "b685928840ac97f5124ade74b153df05", "sha256": "1ee2c55b29876b9d5aabd50745807b706870299d891f02eef37a08131d5f0f95"}, "downloads": -1, "filename": "multistructlog-1.5.tar.gz", "has_sig": true, "md5_digest": "b685928840ac97f5124ade74b153df05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3248, "upload_time": "2018-02-01T17:09:44", "upload_time_iso_8601": "2018-02-01T17:09:44.402358Z", "url": "https://files.pythonhosted.org/packages/49/24/56b28a6c8b7431ead1c34d347908c4ed8429671a08d5d61dc1c2133c7316/multistructlog-1.5.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "e26f7d6a7918d8d5c64703777bc5daaf", "sha256": "fb0c19643aa819853d015236f4c37433947360551152df541679ed0b1d6edc04"}, "downloads": -1, "filename": "multistructlog-2.0.0.tar.gz", "has_sig": false, "md5_digest": "e26f7d6a7918d8d5c64703777bc5daaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4311, "upload_time": "2018-10-31T13:54:01", "upload_time_iso_8601": "2018-10-31T13:54:01.953322Z", "url": "https://files.pythonhosted.org/packages/30/17/e1629eb9034a54ae8c6efd55eb51f630da464fa3844b0add2e4b0bdc45e6/multistructlog-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "cc6bc3a35e36cb356b080fccb03d9df8", "sha256": "e16ca424efcb90bea1c9189f0225dc2985425f5664090e22107472b31fb80b62"}, "downloads": -1, "filename": "multistructlog-2.1.0.tar.gz", "has_sig": false, "md5_digest": "cc6bc3a35e36cb356b080fccb03d9df8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4725, "upload_time": "2018-12-14T22:00:40", "upload_time_iso_8601": "2018-12-14T22:00:40.618390Z", "url": "https://files.pythonhosted.org/packages/1f/8e/e9c82d711a9fee1817e5fdf11e582795886f6e14827bf231683d4f129313/multistructlog-2.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cc6bc3a35e36cb356b080fccb03d9df8", "sha256": "e16ca424efcb90bea1c9189f0225dc2985425f5664090e22107472b31fb80b62"}, "downloads": -1, "filename": "multistructlog-2.1.0.tar.gz", "has_sig": false, "md5_digest": "cc6bc3a35e36cb356b080fccb03d9df8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4725, "upload_time": "2018-12-14T22:00:40", "upload_time_iso_8601": "2018-12-14T22:00:40.618390Z", "url": "https://files.pythonhosted.org/packages/1f/8e/e9c82d711a9fee1817e5fdf11e582795886f6e14827bf231683d4f129313/multistructlog-2.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:19 2020"}