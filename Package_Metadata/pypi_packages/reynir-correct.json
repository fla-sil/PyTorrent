{"info": {"author": "Mi\u00f0eind ehf", "author_email": "mideind@mideind.is", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: Icelandic", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Linguistic", "Topic :: Utilities"], "description": "=============================================================\nReynirCorrect: A spelling and grammar corrector for Icelandic\n=============================================================\n\n.. image:: https://travis-ci.com/mideind/ReynirCorrect.svg?branch=master\n    :target: https://travis-ci.com/mideind/ReynirCorrect\n\n********\nOverview\n********\n\n**ReynirCorrect** is a Python 3.x package for\n**checking and correcting spelling and grammar** in Icelandic text.\n\nReynirCorrect uses the `Greynir <https://pypi.org/project/reynir/>`_ package,\nby the same authors, to tokenize and parse text.\n\nToken-level correction\n----------------------\n\nReynirCorrect can tokenize text and return a corrected token list.\nThis catches token-level errors, such as spelling errors and erroneous\nphrases, but not grammatical errors.\n\nFull grammar analysis\n---------------------\n\nReynirCorrect can also analyze text grammatically by attempting to parse\nit, after token-level correction. The parsing is done according to Reynir's\ncontext-free grammar for Icelandic, augmented with additional production\nrules for common grammatical errors. The analysis returns a set of annotations\n(errors and suggestions) that apply to spans (consecutive tokens) within\nsentences in the resulting token list.\n\n******\nStatus\n******\n\nThis code is under development and has early Beta status. It will eventually\nbecome the foundation of a spelling and grammar checker that will be open\nto the public on the `Greynir.is <https://greynir.is>`_ website.\nOf course it will also be available as an open-source Python package\nthat can be installed using ``pip``.\n\n***************************\nDeep vs. shallow correction\n***************************\n\nReynirCorrect can do both deep and shallow correction.\n\n*Deep* correction shows both the proposed corrections (if they are available), \nand error messages to guide the user.\n\n*Shallow* correction corrects the input file automatically but doesn't give any error messages \nor information about the errors. Only clear errors are corrected at this stage. \nNo grammar errors are corrected.\n\n*******\nExample\n*******\n\nTo tokenize text with deep token-level correction (the text is not parsed\nin this case, so no grammar checking is done):\n\n.. code-block:: python\n\n   >>> from reynir_correct import tokenize\n   >>> g = tokenize(\"Af gefnu tilefni f\u00e9kk f\u00e9kk daninn vilja s\u00fdnum \"\n   >>>     \"framgengt vi\u00f0 hana \u00ed auknu m\u00e6li.\")\n   >>> for tok in g:\n   >>>     print(\"{0:10} {1}\".format(tok.txt or \"\", tok.error_description))\n\nOutput::\n\n   A\u00f0         Or\u00f0asambandi\u00f0 'Af gefnu tilefni' var lei\u00f0r\u00e9tt \u00ed 'a\u00f0 gefnu tilefni'\n   gefnu\n   tilefni\n   f\u00e9kk       Endurteki\u00f0 or\u00f0 ('f\u00e9kk') var fellt burt\n   Daninn     Or\u00f0 \u00e1 a\u00f0 byrja \u00e1 h\u00e1staf: 'daninn'\n   vilja      Or\u00f0asambandi\u00f0 'vilja s\u00fdnum framgengt' var lei\u00f0r\u00e9tt \u00ed 'vilja s\u00ednum framgengt'\n   s\u00ednum\n   framgengt\n   vi\u00f0\n   hana\n   \u00ed          Or\u00f0asambandi\u00f0 '\u00ed auknu m\u00e6li' var lei\u00f0r\u00e9tt \u00ed '\u00ed auknum m\u00e6li'\n   auknum\n   m\u00e6li\n   .\n\nTo get a list of spelling and grammar annotations for a sentence:\n\n.. code-block:: python\n\n   >>> from reynir_correct import check_single\n   >>> sent = check_single(\"P\u00e1li, vini m\u00ednum, langa\u00f0i a\u00f0 horfa \u00e1 sj\u00f3nvarpi\u00f0.\")\n   >>> for annotation in sent.annotations:\n   >>>     print(\"{0}\".format(annotation))\n\nOutput::\n\n   000-004: E003  Frumlag sagnarinnar 'a\u00f0 langa' \u00e1 a\u00f0 vera \u00ed \u00feolfalli en ekki \u00ed \u00fe\u00e1gufalli\n\n                  [ The subject of the verb 'a\u00f0 langa/to want' should be in the\n                     accusative case, not the dative case ]\n\nNote that the ``annotation.start`` and ``annotation.end`` properties\n(here ``start`` is 0 and ``end`` is 4) contain the indices of the first\nand last tokens to which the annotation applies. ``E003`` is an error code.\n\n*************\nPrerequisites\n*************\n\nThis package runs on CPython 3.5 or newer, and on PyPy 3.5 or newer.\n\n************\nInstallation\n************\n\nTo install this package:\n\n.. code-block:: console\n\n   $ pip3 install reynir-correct   # or pip install reynir-correct if Python3 is your default\n\nIf you want to be able to edit the source, do like so\n(assuming you have **git** installed):\n\n.. code-block:: console\n\n   $ git clone https://github.com/mideind/ReynirCorrect\n   $ cd ReynirCorrect\n   $ # [ Activate your virtualenv here if you have one ]\n   $ python setup.py develop\n\nThe package source code is now in ``ReynirCorrect/src/reynir_correct``.\n\n\n*********************\nThe command line tool\n*********************\n\nAfter installation, the corrector can be invoked directly from the command line:\n\n.. code-block:: console\n\n   $ correct input.txt output.txt\n\nInput and output files are encoded in UTF-8. If the files are not\ngiven explicitly, ``stdin`` and ``stdout`` are used for input and output,\nrespectively.\n\nEmpty lines in the input are treated as sentence boundaries.\n\nBy default, the output consists of one sentence per line, where each\nline ends with a single newline character (ASCII LF, ``chr(10)``, ``\"\\n\"``).\nWithin each line, tokens are separated by spaces.\n\nThe following (mutually exclusive) options can be specified\non the command line:\n\n+-------------------+---------------------------------------------------+\n| | ``--csv``       | Deep tokenization. Output token objects in CSV    |\n|                   | format, one per line. Sentences are separated by  |\n|                   | lines containing ``0,\"\",\"\"``                      |\n+-------------------+---------------------------------------------------+\n| | ``--json``      | Deep tokenization. Output token objects in JSON   |\n|                   | format, one per line.                             |\n+-------------------+---------------------------------------------------+\n| | ``--normalize`` | Normalize punctuation, causing e.g. quotes to be  |\n|                   | output in Icelandic form and hyphens to be        |\n|                   | regularized. This option is only applicable to    |\n|                   | shallow tokenization.                             |\n+-------------------+---------------------------------------------------+\n\nType ``correct -h`` to get a short help message.\n\n*******\nExample\n*******\n\n.. code-block:: console\n\n   $ echo \"Atvinuleysi j\u00f3kst um 3%\" | correct\n   Atvinnuleysi j\u00f3kst um 3%\n\n   $ echo \"Barni\u00f0 vil gr\u00e6nann lit\" | correct --csv\n   6,\"Barni\u00f0\",\"\"\n   6,\"vil\",\"\"\n   6,\"gr\u00e6nan\",\"\"\n   6,\"lit\",\"\"\n   0,\"\",\"\"\n\n   $ echo \"Pakkin er fyrir hestin\" | correct --json\n   {\"k\":\"BEGIN SENT\"}\n   {\"k\":\"WORD\",\"t\":\"Pakkinn\"}\n   {\"k\":\"WORD\",\"t\":\"er\"}\n   {\"k\":\"WORD\",\"t\":\"fyrir\"}\n   {\"k\":\"WORD\",\"t\":\"hestinn\"}\n   {\"k\":\"END SENT\"}\n\n\n*****\nTests\n*****\n\nTo run the built-in tests, install `pytest <https://docs.pytest.org/en/latest/>`_,\n``cd`` to your ``ReynirCorrect`` subdirectory (and optionally activate your\nvirtualenv), then run:\n\n.. code-block:: console\n\n   $ python -m pytest", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mideind/ReynirCorrect", "keywords": "nlp,parser,icelandic", "license": "GNU GPLv3", "maintainer": "", "maintainer_email": "", "name": "reynir-correct", "package_url": "https://pypi.org/project/reynir-correct/", "platform": "", "project_url": "https://pypi.org/project/reynir-correct/", "project_urls": {"Homepage": "https://github.com/mideind/ReynirCorrect"}, "release_url": "https://pypi.org/project/reynir-correct/0.8.0/", "requires_dist": null, "requires_python": "", "summary": "A spelling and grammar corrector for Icelandic", "version": "0.8.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.com/mideind/ReynirCorrect\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/mideind/ReynirCorrect.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1fce16c9d07f92d9dae8c9f6024c94157e8b0e39/68747470733a2f2f7472617669732d63692e636f6d2f6d696465696e642f5265796e6972436f72726563742e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p><strong>ReynirCorrect</strong> is a Python 3.x package for\n<strong>checking and correcting spelling and grammar</strong> in Icelandic text.</p>\n<p>ReynirCorrect uses the <a href=\"https://pypi.org/project/reynir/\" rel=\"nofollow\">Greynir</a> package,\nby the same authors, to tokenize and parse text.</p>\n<div id=\"token-level-correction\">\n<h3>Token-level correction</h3>\n<p>ReynirCorrect can tokenize text and return a corrected token list.\nThis catches token-level errors, such as spelling errors and erroneous\nphrases, but not grammatical errors.</p>\n</div>\n<div id=\"full-grammar-analysis\">\n<h3>Full grammar analysis</h3>\n<p>ReynirCorrect can also analyze text grammatically by attempting to parse\nit, after token-level correction. The parsing is done according to Reynir\u2019s\ncontext-free grammar for Icelandic, augmented with additional production\nrules for common grammatical errors. The analysis returns a set of annotations\n(errors and suggestions) that apply to spans (consecutive tokens) within\nsentences in the resulting token list.</p>\n</div>\n</div>\n<div id=\"status\">\n<h2>Status</h2>\n<p>This code is under development and has early Beta status. It will eventually\nbecome the foundation of a spelling and grammar checker that will be open\nto the public on the <a href=\"https://greynir.is\" rel=\"nofollow\">Greynir.is</a> website.\nOf course it will also be available as an open-source Python package\nthat can be installed using <tt>pip</tt>.</p>\n</div>\n<div id=\"deep-vs-shallow-correction\">\n<h2>Deep vs. shallow correction</h2>\n<p>ReynirCorrect can do both deep and shallow correction.</p>\n<p><em>Deep</em> correction shows both the proposed corrections (if they are available),\nand error messages to guide the user.</p>\n<p><em>Shallow</em> correction corrects the input file automatically but doesn\u2019t give any error messages\nor information about the errors. Only clear errors are corrected at this stage.\nNo grammar errors are corrected.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>To tokenize text with deep token-level correction (the text is not parsed\nin this case, so no grammar checking is done):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">reynir_correct</span> <span class=\"kn\">import</span> <span class=\"n\">tokenize</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">tokenize</span><span class=\"p\">(</span><span class=\"s2\">\"Af gefnu tilefni f\u00e9kk f\u00e9kk daninn vilja s\u00fdnum \"</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"s2\">\"framgengt vi\u00f0 hana \u00ed auknu m\u00e6li.\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">tok</span> <span class=\"ow\">in</span> <span class=\"n\">g</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{0:10}</span><span class=\"s2\"> </span><span class=\"si\">{1}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">tok</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"ow\">or</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"n\">tok</span><span class=\"o\">.</span><span class=\"n\">error_description</span><span class=\"p\">))</span>\n</pre>\n<p>Output:</p>\n<pre>A\u00f0         Or\u00f0asambandi\u00f0 'Af gefnu tilefni' var lei\u00f0r\u00e9tt \u00ed 'a\u00f0 gefnu tilefni'\ngefnu\ntilefni\nf\u00e9kk       Endurteki\u00f0 or\u00f0 ('f\u00e9kk') var fellt burt\nDaninn     Or\u00f0 \u00e1 a\u00f0 byrja \u00e1 h\u00e1staf: 'daninn'\nvilja      Or\u00f0asambandi\u00f0 'vilja s\u00fdnum framgengt' var lei\u00f0r\u00e9tt \u00ed 'vilja s\u00ednum framgengt'\ns\u00ednum\nframgengt\nvi\u00f0\nhana\n\u00ed          Or\u00f0asambandi\u00f0 '\u00ed auknu m\u00e6li' var lei\u00f0r\u00e9tt \u00ed '\u00ed auknum m\u00e6li'\nauknum\nm\u00e6li\n.\n</pre>\n<p>To get a list of spelling and grammar annotations for a sentence:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">reynir_correct</span> <span class=\"kn\">import</span> <span class=\"n\">check_single</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sent</span> <span class=\"o\">=</span> <span class=\"n\">check_single</span><span class=\"p\">(</span><span class=\"s2\">\"P\u00e1li, vini m\u00ednum, langa\u00f0i a\u00f0 horfa \u00e1 sj\u00f3nvarpi\u00f0.\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">annotation</span> <span class=\"ow\">in</span> <span class=\"n\">sent</span><span class=\"o\">.</span><span class=\"n\">annotations</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">annotation</span><span class=\"p\">))</span>\n</pre>\n<p>Output:</p>\n<pre>000-004: E003  Frumlag sagnarinnar 'a\u00f0 langa' \u00e1 a\u00f0 vera \u00ed \u00feolfalli en ekki \u00ed \u00fe\u00e1gufalli\n\n               [ The subject of the verb 'a\u00f0 langa/to want' should be in the\n                  accusative case, not the dative case ]\n</pre>\n<p>Note that the <tt>annotation.start</tt> and <tt>annotation.end</tt> properties\n(here <tt>start</tt> is 0 and <tt>end</tt> is 4) contain the indices of the first\nand last tokens to which the annotation applies. <tt>E003</tt> is an error code.</p>\n</div>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<p>This package runs on CPython 3.5 or newer, and on PyPy 3.5 or newer.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install this package:</p>\n<pre><span class=\"gp\">$</span> pip3 install reynir-correct   <span class=\"c1\"># or pip install reynir-correct if Python3 is your default</span>\n</pre>\n<p>If you want to be able to edit the source, do like so\n(assuming you have <strong>git</strong> installed):</p>\n<pre><span class=\"gp\">$</span> git clone https://github.com/mideind/ReynirCorrect\n<span class=\"gp\">$</span> <span class=\"nb\">cd</span> ReynirCorrect\n<span class=\"gp\">$</span> <span class=\"c1\"># [ Activate your virtualenv here if you have one ]\n</span><span class=\"gp\">$</span><span class=\"c1\"></span> python setup.py develop\n</pre>\n<p>The package source code is now in <tt>ReynirCorrect/src/reynir_correct</tt>.</p>\n</div>\n<div id=\"the-command-line-tool\">\n<h2>The command line tool</h2>\n<p>After installation, the corrector can be invoked directly from the command line:</p>\n<pre><span class=\"gp\">$</span> correct input.txt output.txt\n</pre>\n<p>Input and output files are encoded in UTF-8. If the files are not\ngiven explicitly, <tt>stdin</tt> and <tt>stdout</tt> are used for input and output,\nrespectively.</p>\n<p>Empty lines in the input are treated as sentence boundaries.</p>\n<p>By default, the output consists of one sentence per line, where each\nline ends with a single newline character (ASCII LF, <tt>chr(10)</tt>, <tt>\"\\n\"</tt>).\nWithin each line, tokens are separated by spaces.</p>\n<p>The following (mutually exclusive) options can be specified\non the command line:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td><div>\n<div><tt><span class=\"pre\">--csv</span></tt></div>\n</div>\n</td>\n<td>Deep tokenization. Output token objects in CSV\nformat, one per line. Sentences are separated by\nlines containing <tt><span class=\"pre\">0,\"\",\"\"</span></tt></td>\n</tr>\n<tr><td><div>\n<div><tt><span class=\"pre\">--json</span></tt></div>\n</div>\n</td>\n<td>Deep tokenization. Output token objects in JSON\nformat, one per line.</td>\n</tr>\n<tr><td><div>\n<div><tt><span class=\"pre\">--normalize</span></tt></div>\n</div>\n</td>\n<td>Normalize punctuation, causing e.g. quotes to be\noutput in Icelandic form and hyphens to be\nregularized. This option is only applicable to\nshallow tokenization.</td>\n</tr>\n</tbody>\n</table>\n<p>Type <tt>correct <span class=\"pre\">-h</span></tt> to get a short help message.</p>\n</div>\n<div id=\"id1\">\n<h2>Example</h2>\n<pre><span class=\"gp\">$</span> <span class=\"nb\">echo</span> <span class=\"s2\">\"Atvinuleysi j\u00f3kst um 3%\"</span> <span class=\"p\">|</span> correct\n<span class=\"go\">Atvinnuleysi j\u00f3kst um 3%\n\n</span><span class=\"gp\">$</span> <span class=\"nb\">echo</span> <span class=\"s2\">\"Barni\u00f0 vil gr\u00e6nann lit\"</span> <span class=\"p\">|</span> correct --csv\n<span class=\"go\">6,\"Barni\u00f0\",\"\"\n6,\"vil\",\"\"\n6,\"gr\u00e6nan\",\"\"\n6,\"lit\",\"\"\n0,\"\",\"\"\n\n</span><span class=\"gp\">$</span> <span class=\"nb\">echo</span> <span class=\"s2\">\"Pakkin er fyrir hestin\"</span> <span class=\"p\">|</span> correct --json\n<span class=\"go\">{\"k\":\"BEGIN SENT\"}\n{\"k\":\"WORD\",\"t\":\"Pakkinn\"}\n{\"k\":\"WORD\",\"t\":\"er\"}\n{\"k\":\"WORD\",\"t\":\"fyrir\"}\n{\"k\":\"WORD\",\"t\":\"hestinn\"}\n{\"k\":\"END SENT\"}</span>\n</pre>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>To run the built-in tests, install <a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">pytest</a>,\n<tt>cd</tt> to your <tt>ReynirCorrect</tt> subdirectory (and optionally activate your\nvirtualenv), then run:</p>\n<pre><span class=\"gp\">$</span> python -m pytest\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6974318, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "2eedbcb5a6c7ee542ba9385e73e3e246", "sha256": "0e23b75c81e0ca223810eabb5759b835ccc0f628c2a0528d3e964be5aa9b12bf"}, "downloads": -1, "filename": "reynir-correct-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2eedbcb5a6c7ee542ba9385e73e3e246", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4717520, "upload_time": "2019-01-29T13:07:15", "upload_time_iso_8601": "2019-01-29T13:07:15.755073Z", "url": "https://files.pythonhosted.org/packages/97/7a/882ba08799e4d0a5c48b741f608417daba76978f53f8fa767c36784557de/reynir-correct-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "d4bae08b4663bfae3a17e49af025b72b", "sha256": "faff0a2af86af8cf2349ad6730719be14904a8f203268f438815c8a87b61d6fc"}, "downloads": -1, "filename": "reynir-correct-0.4.0.tar.gz", "has_sig": false, "md5_digest": "d4bae08b4663bfae3a17e49af025b72b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3970344, "upload_time": "2019-03-25T16:00:10", "upload_time_iso_8601": "2019-03-25T16:00:10.800494Z", "url": "https://files.pythonhosted.org/packages/8c/56/9977b65c0b5b49340cf70eb7d75eee3de459f90b9ab22d914b5f9898f4ea/reynir-correct-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "a07d688dcb78c59eaff602301b00e32b", "sha256": "503280dc4fde778d379df44c1fd57e369494f70f782e0ac7051f11638ad4d9c0"}, "downloads": -1, "filename": "reynir-correct-0.5.0.tar.gz", "has_sig": false, "md5_digest": "a07d688dcb78c59eaff602301b00e32b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3971931, "upload_time": "2019-05-03T14:42:12", "upload_time_iso_8601": "2019-05-03T14:42:12.406964Z", "url": "https://files.pythonhosted.org/packages/ae/ed/8b9fef0f0d36c58d064ca0ea0f06e1c7f9284c2f7f0f5691be2831d736b8/reynir-correct-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "7031d7816df678e88fbc756be9ef9902", "sha256": "fc8c3b5ebb7bc6f1442a84f12171f4d9fc94c7c35f978e7a7fd75d430c105405"}, "downloads": -1, "filename": "reynir-correct-0.6.0.tar.gz", "has_sig": false, "md5_digest": "7031d7816df678e88fbc756be9ef9902", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3975492, "upload_time": "2019-06-04T17:18:06", "upload_time_iso_8601": "2019-06-04T17:18:06.173334Z", "url": "https://files.pythonhosted.org/packages/c3/4c/540ef43e71d002057daed58da2de581b577f4afc8fc65d7480a012ac2c3c/reynir-correct-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "7bca31a34a245977bdac40a6b3adb2c4", "sha256": "a814ff86fdb5f5b7e48ee52441209cbdaebf30abdbe0df10d83f237fc09bce70"}, "downloads": -1, "filename": "reynir-correct-0.7.0.tar.gz", "has_sig": false, "md5_digest": "7bca31a34a245977bdac40a6b3adb2c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3998216, "upload_time": "2019-08-13T16:23:19", "upload_time_iso_8601": "2019-08-13T16:23:19.155675Z", "url": "https://files.pythonhosted.org/packages/5a/0d/3406d36ab9686a6568177189f5a663093291ff42fb53e0abe31da3751b4f/reynir-correct-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "8a342b5ad506b46509b6a10f764f2899", "sha256": "d7970e2b73d67707f141cd080d010804eac2f342f3725355efac1c00fdd25187"}, "downloads": -1, "filename": "reynir-correct-0.8.0.tar.gz", "has_sig": false, "md5_digest": "8a342b5ad506b46509b6a10f764f2899", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3145367, "upload_time": "2020-04-08T01:03:43", "upload_time_iso_8601": "2020-04-08T01:03:43.045903Z", "url": "https://files.pythonhosted.org/packages/08/b1/e9562fac0bd33a315ee50e24158ce7997c75e2f5837cddf62f1299739cdc/reynir-correct-0.8.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8a342b5ad506b46509b6a10f764f2899", "sha256": "d7970e2b73d67707f141cd080d010804eac2f342f3725355efac1c00fdd25187"}, "downloads": -1, "filename": "reynir-correct-0.8.0.tar.gz", "has_sig": false, "md5_digest": "8a342b5ad506b46509b6a10f764f2899", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3145367, "upload_time": "2020-04-08T01:03:43", "upload_time_iso_8601": "2020-04-08T01:03:43.045903Z", "url": "https://files.pythonhosted.org/packages/08/b1/e9562fac0bd33a315ee50e24158ce7997c75e2f5837cddf62f1299739cdc/reynir-correct-0.8.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:12 2020"}