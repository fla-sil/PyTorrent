{"info": {"author": "Feth AREZKI", "author_email": "text_exe_matrix@tuttu.info", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Framework :: Pytest", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "Operating System :: Unix", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "=======================================================\nToy project to test executables defined in a yaml file\n=======================================================\n\nA wrapper around py.test to run UNIX commands and check some of their behaviour.\n\n.. |made-with-python| image:: https://img.shields.io/badge/Made%20with-Python-1f425f.svg\n   :target: https://www.python.org/\n\n.. |master-pipeline| image:: https://framagit.org/feth/test_exe_matrix/badges/master/pipeline.svg\n   :target: https://framagit.org/feth/test_exe_matrix/pipelines/\n\n.. |license-GPL-2| image::  https://img.shields.io/badge/license-GPL%202-informational\n   :target: https://framagit.org/feth/test_exe_matrix/-/blob/master/LICENSE_GPL_2.txt\n\n.. |license-CeCILL-2.1| image::  https://img.shields.io/badge/license-CeCILL--2.1-informational\n   :target: https://framagit.org/feth/test_exe_matrix/-/blob/badges/LICENSE_CeCILL_2.1.txt\n\n.. |project-url| image:: https://img.shields.io/badge/homepage-framagit-blue\n   :target: https://framagit.org/feth/test_exe_matrix\n\n.. |repository-url| image:: https://img.shields.io/badge/repository-git%2Bhttps-blue\n   :target: https://framagit.org/feth/test_exe_matrix.git\n\n|made-with-python| |master-pipeline| |license-GPL-2| |license-CeCILL-2.1| |project-url| |repository-url|\n\n.. contents::\n\n\nInstallation and running\n-------------------------\n\nMain requirements\n.................\n\n- UNIX like\n- Python 3.6, 3.7 or 3.8\n\nFrom PyPA (pip install)\n........................\n\nInstall\n:::::::::\n\nThe most recent packaged version can be installed with ``pip`` with options relevant to your usecase [#]_.\n\n.. [#] For instance ``pip{3} install --user test_exe_matrix``, or install in a virtualenv.\n\n.. code-block:: console\n\n    pip install test_exe_matrix\n\n\nRun\n::::::\n\n.. code-block:: console\n    \n    test_exe_matrix [arguments...]\n\nFrom source with poetry\n........................\n\nInstall\n:::::::::\n\nNote on poetry: you can install it from pip (``pip install --user poetry``) [#]_ or follow\n`the instructions <https://python-poetry.org/docs/>`_\non the `official Web site <https://python-poetry.org/>`_.\n\n.. [#] They say::\n    Be aware that it will also install Poetry's dependencies which might cause conflicts with other packages.\n\n.. code-block:: console\n    \n    git clone https://framagit.org/feth/test_exe_matrix.git\n    cd test_exe_matrix\n    poetry install\n\nRun\n::::::\n\n.. code-block:: console\n    \n    poetry run test_exe_matrix [arguments...]\n\nCommand line options\n.....................\n\nTypical use:\n\n.. code-block:: console\n\n    [poetry run] test_exe_matrix \n\nSynopsys:\n\n.. code-block:: console\n\n    usage: test_exe_matrix [-h] [-V] [--collect-only] [-v] [--markers]\n                           [-m PYTEST_ARGS]\n                           [testsuite [testsuite ...]]\n    \n    Test command lines listed in yaml files.\n    \n    positional arguments:\n      testsuite       testsuite yaml file -see example\n                      test_exe_matrix/matrix.yaml.\n                      Argument can be specified multiple times\n    \n    optional arguments:\n      -h, --help      show this help message and exit\n      -V, --version   show program's version number and exit\n      --collect-only  Only collect tests, without running them.\n      -v              Increase verbosity.\n      --markers       Lists registered test markers.\n      -m PYTEST_ARGS  Only run tests that match selection expression, ie. '-m \"not\n                      internet\"'\n    \n    test_exe_matrix is mainly a Py.test wrapper\n\n\n-v adds very nice colors, thanks to py.test.\n\nParametrizing tests\n-------------------\n\nPut your test suites in a yaml, like matrix.yaml (provided), or in several. Every yaml file will have a separate global config (markers declaration and general timeout).\n\nMinimum viable test\n....................\n\n.. code-block:: console\n\n    - exe: /path/to/exe\n\nThe test will succeed if default values are met: see below (optional values).\n\nOptional values\n...............\n\n*timeout*\n  Allowed running time in seconds. Program will be killed after this delay. Default to config/timeout or 1.\n*retcode*\n  Expected return code.\n*stdout*\n  Expected standard output (full match)\n*stderr*\n  Expected standard error (full match)\n*partstdout*\n  Substring expected in standard output.\n*partstderr*\n  Substring expected in standard error.\n*notinstdout*\n  Substring is not expected in standard output.\n*notinstderr*\n  Substring is not expected in standard error.\n*args*\n  List of arguments to your program.\n*name*\n  Description of the test being made.\n*expect_too_long*\n  Boolean: whether the program is expected to run over the time limit.\n*markers*\n  List of markers for the test. You can use standard py.test markers (especially 'xfail': indicating 'expected failure') or custom markers, that _must_ be declared in the config section.\n\nExample\n---------\n\nA complete (hopefully) example file is provided as \"matrix.yaml\".\n\nGiven the examples, you may run \n\n.. code-block:: console\n\n    test_exe_matrix matrix.yaml --collect-only\n\nto list the tests, and\n\n.. code-block:: console\n\n    test_exe_matrix matrix.yaml -v -m \"not internet and not slow\"\n\nto deselect all tests requiring Internet and slow tests.\n\n.. image:: doc/Screenshot_markers.png\n    :alt: screenshot of the above command and output.\n\nDev: Build the package\n-----------------------\n\nThe project uses poetry. Do\n\n.. code-block:: console\n\n    poetry build\n\nAnd a pip installable wheel package will appear under dist/. For\ninstance, you can install with:\n\n.. code-block:: console\n\n     pip3 install dist/test_exe_matrix-0.0.18-py3-none-any.whl\n\n\nOther packaging\n................\n\nDebian/Fedora/Conda packages would be a good thing, but I don't know where to start. If I have to drop Poetry, let it be. Help welcome.\n\nLicence\n-------\n\nDual licensed (at your option) to the public under CeCILL 2.1 and GPL 2, see files LICENSE_CeCILL_2.1.txt and LICENSE_GPL_2.txt.\n\nThose are compatible copyleft licenses; CeCILL 2.1 is better suited for France at least.\n\nOther needs: contact me.\n\nThank you\n----------\n\nSt\u00e9phane Bortzmeyer, who once asked if a simple tool testing the result of commands existed, and then reported bugs/wrote helpful tickets on framagit/gitlab to guide the development.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://framagit.org/feth/test_exe_matrix", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "test-exe-matrix", "package_url": "https://pypi.org/project/test-exe-matrix/", "platform": "", "project_url": "https://pypi.org/project/test-exe-matrix/", "project_urls": {"Bug Tracker": "https://framagit.org/feth/test_exe_matrix/issues", "Homepage": "https://framagit.org/feth/test_exe_matrix", "Repository": "https://framagit.org/feth/test_exe_matrix.git"}, "release_url": "https://pypi.org/project/test-exe-matrix/0.1.5/", "requires_dist": ["PyYAML (>=5.2)", "pytest (==5.3.1)"], "requires_python": ">=3.6", "summary": "Toy project to test executables defined in a yaml file", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A wrapper around py.test to run UNIX commands and check some of their behaviour.</p>\n<p><a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"made-with-python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68a99107ffdf24c5fb2cc4bca38b7b662e501b97/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d507974686f6e2d3166343235662e737667\"></a> <a href=\"https://framagit.org/feth/test_exe_matrix/pipelines/\" rel=\"nofollow\"><img alt=\"master-pipeline\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c6723188eded31eeeda5259ceeb3ad1230b14b2/68747470733a2f2f6672616d616769742e6f72672f666574682f746573745f6578655f6d61747269782f6261646765732f6d61737465722f706970656c696e652e737667\"></a> <a href=\"https://framagit.org/feth/test_exe_matrix/-/blob/master/LICENSE_GPL_2.txt\" rel=\"nofollow\"><img alt=\"license-GPL-2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f9302c5437580a67daef81335e9ee81ddd22765/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c253230322d696e666f726d6174696f6e616c\"></a> <a href=\"https://framagit.org/feth/test_exe_matrix/-/blob/badges/LICENSE_CeCILL_2.1.txt\" rel=\"nofollow\"><img alt=\"license-CeCILL-2.1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c271b3c5808c144dd56cbb8b49b5f189cea76788/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d436543494c4c2d2d322e312d696e666f726d6174696f6e616c\"></a> <a href=\"https://framagit.org/feth/test_exe_matrix\" rel=\"nofollow\"><img alt=\"project-url\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4fb0cf7f4e872c58b9788fd5cff972aea6628d26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f686f6d65706167652d6672616d616769742d626c7565\"></a> <a href=\"https://framagit.org/feth/test_exe_matrix.git\" rel=\"nofollow\"><img alt=\"repository-url\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/11c8f2d6ea39d0968381a16ee2b79098533b65ef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7265706f7369746f72792d67697425324268747470732d626c7565\"></a></p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#installation-and-running\" id=\"id7\" rel=\"nofollow\">Installation and running</a><ul>\n<li><a href=\"#main-requirements\" id=\"id8\" rel=\"nofollow\">Main requirements</a></li>\n<li><a href=\"#from-pypa-pip-install\" id=\"id9\" rel=\"nofollow\">From PyPA (pip install)</a><ul>\n<li><a href=\"#install\" id=\"id10\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#run\" id=\"id11\" rel=\"nofollow\">Run</a></li>\n</ul>\n</li>\n<li><a href=\"#from-source-with-poetry\" id=\"id12\" rel=\"nofollow\">From source with poetry</a><ul>\n<li><a href=\"#id3\" id=\"id13\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#id6\" id=\"id14\" rel=\"nofollow\">Run</a></li>\n</ul>\n</li>\n<li><a href=\"#command-line-options\" id=\"id15\" rel=\"nofollow\">Command line options</a></li>\n</ul>\n</li>\n<li><a href=\"#parametrizing-tests\" id=\"id16\" rel=\"nofollow\">Parametrizing tests</a><ul>\n<li><a href=\"#minimum-viable-test\" id=\"id17\" rel=\"nofollow\">Minimum viable test</a></li>\n<li><a href=\"#optional-values\" id=\"id18\" rel=\"nofollow\">Optional values</a></li>\n</ul>\n</li>\n<li><a href=\"#example\" id=\"id19\" rel=\"nofollow\">Example</a></li>\n<li><a href=\"#dev-build-the-package\" id=\"id20\" rel=\"nofollow\">Dev: Build the package</a><ul>\n<li><a href=\"#other-packaging\" id=\"id21\" rel=\"nofollow\">Other packaging</a></li>\n</ul>\n</li>\n<li><a href=\"#licence\" id=\"id22\" rel=\"nofollow\">Licence</a></li>\n<li><a href=\"#thank-you\" id=\"id23\" rel=\"nofollow\">Thank you</a></li>\n</ul>\n</div>\n<div id=\"installation-and-running\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Installation and running</a></h2>\n<div id=\"main-requirements\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Main requirements</a></h3>\n<ul>\n<li>UNIX like</li>\n<li>Python 3.6, 3.7 or 3.8</li>\n</ul>\n</div>\n<div id=\"from-pypa-pip-install\">\n<h3><a href=\"#id9\" rel=\"nofollow\">From PyPA (pip install)</a></h3>\n<div id=\"install\">\n<h4><a href=\"#id10\" rel=\"nofollow\">Install</a></h4>\n<p>The most recent packaged version can be installed with <tt>pip</tt> with options relevant to your usecase <a href=\"#id2\" id=\"id1\" rel=\"nofollow\">[1]</a>.</p>\n<table id=\"id2\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td>For instance <tt>pip{3} install <span class=\"pre\">--user</span> test_exe_matrix</tt>, or install in a virtualenv.</td></tr>\n</tbody>\n</table>\n<pre><span class=\"go\">pip install test_exe_matrix</span>\n</pre>\n</div>\n<div id=\"run\">\n<h4><a href=\"#id11\" rel=\"nofollow\">Run</a></h4>\n<pre><span class=\"go\">test_exe_matrix [arguments...]</span>\n</pre>\n</div>\n</div>\n<div id=\"from-source-with-poetry\">\n<h3><a href=\"#id12\" rel=\"nofollow\">From source with poetry</a></h3>\n<div id=\"id3\">\n<h4><a href=\"#id13\" rel=\"nofollow\">Install</a></h4>\n<p>Note on poetry: you can install it from pip (<tt>pip install <span class=\"pre\">--user</span> poetry</tt>) <a href=\"#id5\" id=\"id4\" rel=\"nofollow\">[2]</a> or follow\n<a href=\"https://python-poetry.org/docs/\" rel=\"nofollow\">the instructions</a>\non the <a href=\"https://python-poetry.org/\" rel=\"nofollow\">official Web site</a>.</p>\n<table id=\"id5\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id4\" rel=\"nofollow\">[2]</a></td><td>They say::\nBe aware that it will also install Poetry\u2019s dependencies which might cause conflicts with other packages.</td></tr>\n</tbody>\n</table>\n<pre><span class=\"go\">git clone https://framagit.org/feth/test_exe_matrix.git\ncd test_exe_matrix\npoetry install</span>\n</pre>\n</div>\n<div id=\"id6\">\n<h4><a href=\"#id14\" rel=\"nofollow\">Run</a></h4>\n<pre><span class=\"go\">poetry run test_exe_matrix [arguments...]</span>\n</pre>\n</div>\n</div>\n<div id=\"command-line-options\">\n<h3><a href=\"#id15\" rel=\"nofollow\">Command line options</a></h3>\n<p>Typical use:</p>\n<pre><span class=\"go\">[poetry run] test_exe_matrix</span>\n</pre>\n<p>Synopsys:</p>\n<pre><span class=\"go\">usage: test_exe_matrix [-h] [-V] [--collect-only] [-v] [--markers]\n                       [-m PYTEST_ARGS]\n                       [testsuite [testsuite ...]]\n\nTest command lines listed in yaml files.\n\npositional arguments:\n  testsuite       testsuite yaml file -see example\n                  test_exe_matrix/matrix.yaml.\n                  Argument can be specified multiple times\n\noptional arguments:\n  -h, --help      show this help message and exit\n  -V, --version   show program's version number and exit\n  --collect-only  Only collect tests, without running them.\n  -v              Increase verbosity.\n  --markers       Lists registered test markers.\n  -m PYTEST_ARGS  Only run tests that match selection expression, ie. '-m \"not\n                  internet\"'\n\ntest_exe_matrix is mainly a Py.test wrapper</span>\n</pre>\n<p>-v adds very nice colors, thanks to py.test.</p>\n</div>\n</div>\n<div id=\"parametrizing-tests\">\n<h2><a href=\"#id16\" rel=\"nofollow\">Parametrizing tests</a></h2>\n<p>Put your test suites in a yaml, like matrix.yaml (provided), or in several. Every yaml file will have a separate global config (markers declaration and general timeout).</p>\n<div id=\"minimum-viable-test\">\n<h3><a href=\"#id17\" rel=\"nofollow\">Minimum viable test</a></h3>\n<pre><span class=\"go\">- exe: /path/to/exe</span>\n</pre>\n<p>The test will succeed if default values are met: see below (optional values).</p>\n</div>\n<div id=\"optional-values\">\n<h3><a href=\"#id18\" rel=\"nofollow\">Optional values</a></h3>\n<dl>\n<dt><em>timeout</em></dt>\n<dd>Allowed running time in seconds. Program will be killed after this delay. Default to config/timeout or 1.</dd>\n<dt><em>retcode</em></dt>\n<dd>Expected return code.</dd>\n<dt><em>stdout</em></dt>\n<dd>Expected standard output (full match)</dd>\n<dt><em>stderr</em></dt>\n<dd>Expected standard error (full match)</dd>\n<dt><em>partstdout</em></dt>\n<dd>Substring expected in standard output.</dd>\n<dt><em>partstderr</em></dt>\n<dd>Substring expected in standard error.</dd>\n<dt><em>notinstdout</em></dt>\n<dd>Substring is not expected in standard output.</dd>\n<dt><em>notinstderr</em></dt>\n<dd>Substring is not expected in standard error.</dd>\n<dt><em>args</em></dt>\n<dd>List of arguments to your program.</dd>\n<dt><em>name</em></dt>\n<dd>Description of the test being made.</dd>\n<dt><em>expect_too_long</em></dt>\n<dd>Boolean: whether the program is expected to run over the time limit.</dd>\n<dt><em>markers</em></dt>\n<dd>List of markers for the test. You can use standard py.test markers (especially \u2018xfail\u2019: indicating \u2018expected failure\u2019) or custom markers, that _must_ be declared in the config section.</dd>\n</dl>\n</div>\n</div>\n<div id=\"example\">\n<h2><a href=\"#id19\" rel=\"nofollow\">Example</a></h2>\n<p>A complete (hopefully) example file is provided as \u201cmatrix.yaml\u201d.</p>\n<p>Given the examples, you may run</p>\n<pre><span class=\"go\">test_exe_matrix matrix.yaml --collect-only</span>\n</pre>\n<p>to list the tests, and</p>\n<pre><span class=\"go\">test_exe_matrix matrix.yaml -v -m \"not internet and not slow\"</span>\n</pre>\n<p>to deselect all tests requiring Internet and slow tests.</p>\n<img alt=\"screenshot of the above command and output.\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/356128c525a5db7d2a964511c6eaa251ba787195/646f632f53637265656e73686f745f6d61726b6572732e706e67\">\n</div>\n<div id=\"dev-build-the-package\">\n<h2><a href=\"#id20\" rel=\"nofollow\">Dev: Build the package</a></h2>\n<p>The project uses poetry. Do</p>\n<pre><span class=\"go\">poetry build</span>\n</pre>\n<p>And a pip installable wheel package will appear under dist/. For\ninstance, you can install with:</p>\n<pre><span class=\"go\">pip3 install dist/test_exe_matrix-0.0.18-py3-none-any.whl</span>\n</pre>\n<div id=\"other-packaging\">\n<h3><a href=\"#id21\" rel=\"nofollow\">Other packaging</a></h3>\n<p>Debian/Fedora/Conda packages would be a good thing, but I don\u2019t know where to start. If I have to drop Poetry, let it be. Help welcome.</p>\n</div>\n</div>\n<div id=\"licence\">\n<h2><a href=\"#id22\" rel=\"nofollow\">Licence</a></h2>\n<p>Dual licensed (at your option) to the public under CeCILL 2.1 and GPL 2, see files LICENSE_CeCILL_2.1.txt and LICENSE_GPL_2.txt.</p>\n<p>Those are compatible copyleft licenses; CeCILL 2.1 is better suited for France at least.</p>\n<p>Other needs: contact me.</p>\n</div>\n<div id=\"thank-you\">\n<h2><a href=\"#id23\" rel=\"nofollow\">Thank you</a></h2>\n<p>St\u00e9phane Bortzmeyer, who once asked if a simple tool testing the result of commands existed, and then reported bugs/wrote helpful tickets on framagit/gitlab to guide the development.</p>\n</div>\n\n          </div>"}, "last_serial": 6897299, "releases": {"0.0.12": [{"comment_text": "", "digests": {"md5": "2fa1a19c21877a5d29f66123c7038d06", "sha256": "d1bdddc6e8ffff01e7917425d0b4209e508e4e8b6b556641ffe590aa33dfff5d"}, "downloads": -1, "filename": "test_exe_matrix-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "2fa1a19c21877a5d29f66123c7038d06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 21825, "upload_time": "2019-12-10T23:10:33", "upload_time_iso_8601": "2019-12-10T23:10:33.147922Z", "url": "https://files.pythonhosted.org/packages/87/4e/ada486b255a872ec851277d27b13918fb2e8e39bb76f2701e816655882b6/test_exe_matrix-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81f31996902415acf399f7b5d29a163f", "sha256": "e9525745b790980bf3cbe0e2a91d5e8ac04e88eb387533b34b5176098c955d8d"}, "downloads": -1, "filename": "test_exe_matrix-0.0.12.tar.gz", "has_sig": false, "md5_digest": "81f31996902415acf399f7b5d29a163f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 20130, "upload_time": "2019-12-10T23:10:35", "upload_time_iso_8601": "2019-12-10T23:10:35.567302Z", "url": "https://files.pythonhosted.org/packages/a3/60/513c8d9eb189cbaf36595c92d365b7cf1646b5115251633312ebc07d0b44/test_exe_matrix-0.0.12.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "599f232276de266a5cbb745f0f6251e4", "sha256": "d9e0dddb54cf3be9523a02b823cb6b0d031b447be298df41f8e5cf303cb4fb2e"}, "downloads": -1, "filename": "test_exe_matrix-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "599f232276de266a5cbb745f0f6251e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 25297, "upload_time": "2020-02-26T13:52:18", "upload_time_iso_8601": "2020-02-26T13:52:18.038165Z", "url": "https://files.pythonhosted.org/packages/5d/6a/0b74dbefeb75042c92ed0103f0755861882d774f7abc5f6cba5afaf97c9b/test_exe_matrix-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51a9774bdb138a89e348a2a6f85d9789", "sha256": "b9fe28e4df4afd8c9b16242d2fc165094199a9530c79af195cf0d531cf3dcfe1"}, "downloads": -1, "filename": "test_exe_matrix-0.1.0.tar.gz", "has_sig": false, "md5_digest": "51a9774bdb138a89e348a2a6f85d9789", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23966, "upload_time": "2020-02-26T13:52:19", "upload_time_iso_8601": "2020-02-26T13:52:19.375663Z", "url": "https://files.pythonhosted.org/packages/3f/7b/422c9f9fbfb5748779c5be2e52e382714de28e5782ed2d9b6617be799356/test_exe_matrix-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9e1c8df599d1b0dc2b475de0cc76a0b5", "sha256": "9bd2cf86f0eff140bf05cdf8472b028302a8a559ccbcfcbe5f0259d35e345480"}, "downloads": -1, "filename": "test_exe_matrix-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9e1c8df599d1b0dc2b475de0cc76a0b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 25245, "upload_time": "2020-03-02T10:57:38", "upload_time_iso_8601": "2020-03-02T10:57:38.318673Z", "url": "https://files.pythonhosted.org/packages/73/07/23c3874bdd2d78f1a699bd10256648bdde1efd16d989e8f51d1d201e048f/test_exe_matrix-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e640dbb81ec378989aead0d20ccb220", "sha256": "ba12b435a66a3b3d3af554468a66af96acded17fa737f38f65021840c1a51a45"}, "downloads": -1, "filename": "test_exe_matrix-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7e640dbb81ec378989aead0d20ccb220", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23928, "upload_time": "2020-03-02T10:57:39", "upload_time_iso_8601": "2020-03-02T10:57:39.912416Z", "url": "https://files.pythonhosted.org/packages/b6/63/5ac78237a6d6214214f597089ceacb7f9076ebbfc78fb99da01abeb12349/test_exe_matrix-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "f34506b2a3bda72141ea3e515aac742a", "sha256": "5fce5a562c50aa5e737a27d52e028e832b67b192e0949d05d813d0ae34cfaa56"}, "downloads": -1, "filename": "test_exe_matrix-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f34506b2a3bda72141ea3e515aac742a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24255, "upload_time": "2020-03-03T10:58:55", "upload_time_iso_8601": "2020-03-03T10:58:55.024223Z", "url": "https://files.pythonhosted.org/packages/ec/7e/e34d925a47d27176deaea83d844ca0182869a3f47869477932220f2ac81d/test_exe_matrix-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aaf390ee0b4987d867cc7ee979aaf76c", "sha256": "a67fea85e8570140a7d66ea128976ed8b38c4ec07622748aad37d531cd509237"}, "downloads": -1, "filename": "test_exe_matrix-0.1.2.tar.gz", "has_sig": false, "md5_digest": "aaf390ee0b4987d867cc7ee979aaf76c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23309, "upload_time": "2020-03-03T10:58:56", "upload_time_iso_8601": "2020-03-03T10:58:56.858780Z", "url": "https://files.pythonhosted.org/packages/2f/23/cb8e893b1fa5f76abc9797604a521947fc057a8ef3461950a198c2d6ea40/test_exe_matrix-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "77fcaf819a243b0b219e34231ce4abf5", "sha256": "62f0bb630346ff18204431c68655bbbe825d5ebe9a9c2d6efff276a74ff775f6"}, "downloads": -1, "filename": "test_exe_matrix-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "77fcaf819a243b0b219e34231ce4abf5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 23685, "upload_time": "2020-03-03T16:22:16", "upload_time_iso_8601": "2020-03-03T16:22:16.502220Z", "url": "https://files.pythonhosted.org/packages/aa/ba/092d6af426f7abc4a09c6fb19f2158568e6d1599449f916bb29530b4df7d/test_exe_matrix-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41855edfdb76d6cf50982ccded51f29b", "sha256": "1317846e17c555dc59d9fe46f396e4d8c584598ffd2c1bb34268fffd282fd2d3"}, "downloads": -1, "filename": "test_exe_matrix-0.1.3.tar.gz", "has_sig": false, "md5_digest": "41855edfdb76d6cf50982ccded51f29b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22281, "upload_time": "2020-03-03T16:22:17", "upload_time_iso_8601": "2020-03-03T16:22:17.892336Z", "url": "https://files.pythonhosted.org/packages/1b/11/dbc3af359c0a646bec78a0d9d802173fe39d0896bac51ca34e4a89fa97b8/test_exe_matrix-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "2643f6ce9a84e7fa5de277734a2e30ce", "sha256": "b55613ae8fcf22f7d2e39b72f8aaad47dcf2b8d8d881f3d6e4190e933aedcfbd"}, "downloads": -1, "filename": "test_exe_matrix-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2643f6ce9a84e7fa5de277734a2e30ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24102, "upload_time": "2020-03-05T15:23:34", "upload_time_iso_8601": "2020-03-05T15:23:34.389382Z", "url": "https://files.pythonhosted.org/packages/5f/83/3cb78f7cc0ff30470bab7ce12220d2918eff73c6d4817873823b2baf4c07/test_exe_matrix-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "156e89e5d1cf6907903389a88a9eef9c", "sha256": "83ff1fe169c1e65b9e45efd316ebc75c527db4556d7d1ee5e256faa49698f429"}, "downloads": -1, "filename": "test_exe_matrix-0.1.4.tar.gz", "has_sig": false, "md5_digest": "156e89e5d1cf6907903389a88a9eef9c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22923, "upload_time": "2020-03-05T15:23:35", "upload_time_iso_8601": "2020-03-05T15:23:35.908917Z", "url": "https://files.pythonhosted.org/packages/68/8a/1ab7ddc8be9224d052a1e68518e38993476f4a493614b51957e3d8f6e8d3/test_exe_matrix-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "fc96ec4187f057a22735da1aa754f73e", "sha256": "f1f69d0b94c52fcc856c5f0ea96cc446c64697b5a492549b8bedfd72fd94c850"}, "downloads": -1, "filename": "test_exe_matrix-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "fc96ec4187f057a22735da1aa754f73e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24203, "upload_time": "2020-03-27T16:45:21", "upload_time_iso_8601": "2020-03-27T16:45:21.450070Z", "url": "https://files.pythonhosted.org/packages/26/cd/124c97e831e0f9c47d6cb7877595c990eea966c791836c15d07710ba5be0/test_exe_matrix-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48cbb6cdd2e69f38b5c938bdc95fee22", "sha256": "8ceb68c6f062ad9bd8e01a4d47dc7c32da2008d3c9d99fcb52169ba5c10210ba"}, "downloads": -1, "filename": "test_exe_matrix-0.1.5.tar.gz", "has_sig": false, "md5_digest": "48cbb6cdd2e69f38b5c938bdc95fee22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24327, "upload_time": "2020-03-27T16:45:23", "upload_time_iso_8601": "2020-03-27T16:45:23.830247Z", "url": "https://files.pythonhosted.org/packages/61/56/8b091c95ec90188d3f871f24ef95751fc2c43a46da9733568ea1201e4ce4/test_exe_matrix-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc96ec4187f057a22735da1aa754f73e", "sha256": "f1f69d0b94c52fcc856c5f0ea96cc446c64697b5a492549b8bedfd72fd94c850"}, "downloads": -1, "filename": "test_exe_matrix-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "fc96ec4187f057a22735da1aa754f73e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24203, "upload_time": "2020-03-27T16:45:21", "upload_time_iso_8601": "2020-03-27T16:45:21.450070Z", "url": "https://files.pythonhosted.org/packages/26/cd/124c97e831e0f9c47d6cb7877595c990eea966c791836c15d07710ba5be0/test_exe_matrix-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48cbb6cdd2e69f38b5c938bdc95fee22", "sha256": "8ceb68c6f062ad9bd8e01a4d47dc7c32da2008d3c9d99fcb52169ba5c10210ba"}, "downloads": -1, "filename": "test_exe_matrix-0.1.5.tar.gz", "has_sig": false, "md5_digest": "48cbb6cdd2e69f38b5c938bdc95fee22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24327, "upload_time": "2020-03-27T16:45:23", "upload_time_iso_8601": "2020-03-27T16:45:23.830247Z", "url": "https://files.pythonhosted.org/packages/61/56/8b091c95ec90188d3f871f24ef95751fc2c43a46da9733568ea1201e4ce4/test_exe_matrix-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:36 2020"}