{"info": {"author": "Alexis C\u00f4t\u00e9", "author_email": "alexiscote19@hotmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# orchester\n\n[![PyPI version](https://badge.fury.io/py/orchester.svg)](https://badge.fury.io/py/orchester)![PyPI downloads](https://img.shields.io/pypi/dm/orchester.svg)\n\nThis is a python set of tools to easily manage membership of users to your preferred cloud services.\n\n- [orchester](#orchester)\n  - [Getting started](#getting-started)\n  - [CLI](#cli)\n  - [Connectors](#connectors)\n    - [Trello](#trello)\n    - [Github](#github)\n    - [Slack](#slack)\n    - [Google Drive](#google-drive)\n  - [API](#api)\n  - [Contributing](#contributing)\n\n## Getting started\n\nInstall the package with `pip install orchester`\n\nIf you want on using the command line interface, you must define some configurations.\n\n## Configuration\n\nConfiguration is done through a `.orchester.json` configuration file. \nYou can see a documented template here: [.orchester-doc.json](.orchester-doc.json)\nThe values labeled by `[CLI]` are only required for the CLI.\n\n>**Note**: An empty template is available here: [.orchester.json](.orchester-empty.json)\n\n\nThe application will attempt to load from this following order:\n\n- A specific path defined in the **ORCHESTER_CONFIG_PATH** environment variable.\n- In the current working directory\n- In the user folder (home)\n\n## CLI\n\nOrchester is distributed with a command line tool. Once installed, you can call it with `orchest --help`\n\nThe following commands are available:\n\n- `orchest -c CONNECTOR_TYPE check IDENTIFIER`: Check if the user is registered to the organization\n- `orchest -c CONNECTOR_TYPE add IDENTIFIER` Add a user to the organization\n- `orchest -c CONNECTOR_TYPE rm IDENTIFIER`: Remove a user from the organization\n- `orchest generate CONNECTOR_TYPE`: Generates the OAuth credentials for connector.\n\nIf you want to omit the `CONNECTOR_TYPE` for each command, you can set a default connector in your configuration file:\n\n> \"default_connector\": \"trello\"\n\nThe connector_type must be **CONNECTOR** name of a valid connector. The connectors are described in the next section.\n\n\n## Connectors\n\n### Trello\n\n**CONNECTOR**: trello\n\n**IDENTIFIER**: Use the trello username\n\n---\n\n1. Get your API token and secret from https://trello.com/app-key (Look for the Api Key and OAuth secret)\n2. Add the Api Key and OAuth secret in the `.orchester.json` configuration file in **api_key** and **api_secret**.\n3. Run `orchest generate trello` script to get the credentials\n4. Set the OAuth token and OAuth secret in the configuration file in **token** and **token_secret**\n\n---\n\n### Github\n\n**CONNECTOR**: github\n\n**IDENTIFIER**: Use the github username\n\n---\n\nTo use the Github service, you need an Personal Token.\n\nGo on Github under `Settings > Developer settings > Personal access tokens`\n\nThen, create a new token and save it in your configuration file at **token**.\n\n\n---\n\n### Slack\n\n**CONNECTOR**: slack\n\n**IDENTIFIER**: Use the slack email\n\n---\n\nTo get started with slack, you first need to get a legacy token and a OAuth token.\n\n**Legacy token**\n\nSimply go to the following url and issue a new legacy token: https://api.slack.com/custom-integrations/legacy-tokens\n\nYou can then add the legacy token in **legacy_token**.\n\n>**Note**: You'll need to be connected to issue a token.\n\n**OAuth token**\n\nBefore you can actually generate an OAuth token, you'll need to have a Slack application. \n\n> **How to create an app?**: Go to https://api.slack.com/apps and click on *Create New App* <br />\nYou must add the following permission scopes: **users:read** and **users:read.email** <br />\nYou will also need to set the following Redirect URI: http://localhost:8888/finish_auth\n\nYou can then store the client id and client secret in **client_id** and **client_secret**\n\nYou are now all setup to generate the final OAuth token.\n\n1. Run `orchest generate slack`\n2. Go to: `http://localhost:8888/begin_auth`\n3. Click on \"Add to slack\"\n4. Click Authorize\n5. It should show a OAuth token. Save that in the configuration file at **token** \n\n\n>**Warnings**: Free Slack users can't use the api to remove a user.\n\n--- \n\n### Google Drive\n\n**IDENTIFIER**: Use the google email\n\n**CONNECTOR**: g_drive\n\n---\n\nBefore you begin, you'll need a `google_drive_credentials.json` file at the root of this folder.\n\nYou can get it by creating credentials in your Google Console API\n\n**Tutorial**: Tutorials coming from: https://developers.google.com/drive/api/v3/quickstart/python\n\nOnce you have the `credentials.json` file, you need to define the **credential_path** and **token_path**.\n\nAfter that, you can run `orchest generate g_drive` to create the `google_drive_token.json`.\n\n## API\n\nThe API is pretty straight forward.  Each connectors inherit from `orchester.connectors.AbstractBaseConnector`\n\nIf you want to use all the connectors at one time, you can use the `orchester.ConnectorManager`\n\nThe manager instantiate all the connectors and let you easily interact with the connector one at a time.\n\n\nHere's an example to use the github connector:\n```python\nfrom orchester.connectors import GithubConnector, RequestFailedError\n\nconnector = GithubConnector(access_token=\"my token...\",organization_id='myOrg')\n\ntry:\n    user_exist = connector.is_registered_to_group('popojargo')\n    print('User is registered to myOrg')\nexcept RequestFailedError:\n    print('The request failed.')\n\n\ntry:\n    connector.remove_from_group('popojargo')\n    print('User removed to myOrg')\n\nexcept RequestFailedError:\n    print('The request failed.')\n\n\ntry:\n    user_exist = connector.add_to_group('popojargo')\n    print('User added to myOrg')\n\nexcept RequestFailedError:\n    print('The request failed.')\n```\n\n## Contributing\n\nFor developer documentation, see [README-DEV.md](README-DEV.md)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/popojargo/orchester", "keywords": "orchester auth trello github drive google groups slack manage cli", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "orchester", "package_url": "https://pypi.org/project/orchester/", "platform": "", "project_url": "https://pypi.org/project/orchester/", "project_urls": {"Homepage": "https://github.com/popojargo/orchester"}, "release_url": "https://pypi.org/project/orchester/0.0.4/", "requires_dist": ["Flask (<2,>=1.0.2)", "google-api-python-client (<2,>=1.7.7)", "oauth2client (<5,>=4.1.3)", "py-trello (<1,>=0.14.0)", "PyGithub (<2,>=1.43.4)", "slackclient (<2,>=1.3.0)"], "requires_python": "~=3.5", "summary": "Orchester allows you to easily add/remove use to your favorite platforms.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>orchester</h1>\n<p><a href=\"https://badge.fury.io/py/orchester\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81aff2862cfda0f91e342ec8c982381d6f9a6bd0/68747470733a2f2f62616467652e667572792e696f2f70792f6f72636865737465722e737667\"></a><img alt=\"PyPI downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/230400246be60d8ee7c20876aa402d8f74a02f1c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6f72636865737465722e737667\"></p>\n<p>This is a python set of tools to easily manage membership of users to your preferred cloud services.</p>\n<ul>\n<li><a href=\"#orchester\" rel=\"nofollow\">orchester</a>\n<ul>\n<li><a href=\"#getting-started\" rel=\"nofollow\">Getting started</a></li>\n<li><a href=\"#cli\" rel=\"nofollow\">CLI</a></li>\n<li><a href=\"#connectors\" rel=\"nofollow\">Connectors</a>\n<ul>\n<li><a href=\"#trello\" rel=\"nofollow\">Trello</a></li>\n<li><a href=\"#github\" rel=\"nofollow\">Github</a></li>\n<li><a href=\"#slack\" rel=\"nofollow\">Slack</a></li>\n<li><a href=\"#google-drive\" rel=\"nofollow\">Google Drive</a></li>\n</ul>\n</li>\n<li><a href=\"#api\" rel=\"nofollow\">API</a></li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n</ul>\n</li>\n</ul>\n<h2>Getting started</h2>\n<p>Install the package with <code>pip install orchester</code></p>\n<p>If you want on using the command line interface, you must define some configurations.</p>\n<h2>Configuration</h2>\n<p>Configuration is done through a <code>.orchester.json</code> configuration file.\nYou can see a documented template here: <a href=\".orchester-doc.json\" rel=\"nofollow\">.orchester-doc.json</a>\nThe values labeled by <code>[CLI]</code> are only required for the CLI.</p>\n<blockquote>\n<p><strong>Note</strong>: An empty template is available here: <a href=\".orchester-empty.json\" rel=\"nofollow\">.orchester.json</a></p>\n</blockquote>\n<p>The application will attempt to load from this following order:</p>\n<ul>\n<li>A specific path defined in the <strong>ORCHESTER_CONFIG_PATH</strong> environment variable.</li>\n<li>In the current working directory</li>\n<li>In the user folder (home)</li>\n</ul>\n<h2>CLI</h2>\n<p>Orchester is distributed with a command line tool. Once installed, you can call it with <code>orchest --help</code></p>\n<p>The following commands are available:</p>\n<ul>\n<li><code>orchest -c CONNECTOR_TYPE check IDENTIFIER</code>: Check if the user is registered to the organization</li>\n<li><code>orchest -c CONNECTOR_TYPE add IDENTIFIER</code> Add a user to the organization</li>\n<li><code>orchest -c CONNECTOR_TYPE rm IDENTIFIER</code>: Remove a user from the organization</li>\n<li><code>orchest generate CONNECTOR_TYPE</code>: Generates the OAuth credentials for connector.</li>\n</ul>\n<p>If you want to omit the <code>CONNECTOR_TYPE</code> for each command, you can set a default connector in your configuration file:</p>\n<blockquote>\n<p>\"default_connector\": \"trello\"</p>\n</blockquote>\n<p>The connector_type must be <strong>CONNECTOR</strong> name of a valid connector. The connectors are described in the next section.</p>\n<h2>Connectors</h2>\n<h3>Trello</h3>\n<p><strong>CONNECTOR</strong>: trello</p>\n<p><strong>IDENTIFIER</strong>: Use the trello username</p>\n<hr>\n<ol>\n<li>Get your API token and secret from <a href=\"https://trello.com/app-key\" rel=\"nofollow\">https://trello.com/app-key</a> (Look for the Api Key and OAuth secret)</li>\n<li>Add the Api Key and OAuth secret in the <code>.orchester.json</code> configuration file in <strong>api_key</strong> and <strong>api_secret</strong>.</li>\n<li>Run <code>orchest generate trello</code> script to get the credentials</li>\n<li>Set the OAuth token and OAuth secret in the configuration file in <strong>token</strong> and <strong>token_secret</strong></li>\n</ol>\n<hr>\n<h3>Github</h3>\n<p><strong>CONNECTOR</strong>: github</p>\n<p><strong>IDENTIFIER</strong>: Use the github username</p>\n<hr>\n<p>To use the Github service, you need an Personal Token.</p>\n<p>Go on Github under <code>Settings &gt; Developer settings &gt; Personal access tokens</code></p>\n<p>Then, create a new token and save it in your configuration file at <strong>token</strong>.</p>\n<hr>\n<h3>Slack</h3>\n<p><strong>CONNECTOR</strong>: slack</p>\n<p><strong>IDENTIFIER</strong>: Use the slack email</p>\n<hr>\n<p>To get started with slack, you first need to get a legacy token and a OAuth token.</p>\n<p><strong>Legacy token</strong></p>\n<p>Simply go to the following url and issue a new legacy token: <a href=\"https://api.slack.com/custom-integrations/legacy-tokens\" rel=\"nofollow\">https://api.slack.com/custom-integrations/legacy-tokens</a></p>\n<p>You can then add the legacy token in <strong>legacy_token</strong>.</p>\n<blockquote>\n<p><strong>Note</strong>: You'll need to be connected to issue a token.</p>\n</blockquote>\n<p><strong>OAuth token</strong></p>\n<p>Before you can actually generate an OAuth token, you'll need to have a Slack application.</p>\n<blockquote>\n<p><strong>How to create an app?</strong>: Go to <a href=\"https://api.slack.com/apps\" rel=\"nofollow\">https://api.slack.com/apps</a> and click on <em>Create New App</em> <br>\nYou must add the following permission scopes: <strong>users:read</strong> and <strong>users:read.email</strong> <br>\nYou will also need to set the following Redirect URI: <a href=\"http://localhost:8888/finish_auth\" rel=\"nofollow\">http://localhost:8888/finish_auth</a></p>\n</blockquote>\n<p>You can then store the client id and client secret in <strong>client_id</strong> and <strong>client_secret</strong></p>\n<p>You are now all setup to generate the final OAuth token.</p>\n<ol>\n<li>Run <code>orchest generate slack</code></li>\n<li>Go to: <code>http://localhost:8888/begin_auth</code></li>\n<li>Click on \"Add to slack\"</li>\n<li>Click Authorize</li>\n<li>It should show a OAuth token. Save that in the configuration file at <strong>token</strong></li>\n</ol>\n<blockquote>\n<p><strong>Warnings</strong>: Free Slack users can't use the api to remove a user.</p>\n</blockquote>\n<hr>\n<h3>Google Drive</h3>\n<p><strong>IDENTIFIER</strong>: Use the google email</p>\n<p><strong>CONNECTOR</strong>: g_drive</p>\n<hr>\n<p>Before you begin, you'll need a <code>google_drive_credentials.json</code> file at the root of this folder.</p>\n<p>You can get it by creating credentials in your Google Console API</p>\n<p><strong>Tutorial</strong>: Tutorials coming from: <a href=\"https://developers.google.com/drive/api/v3/quickstart/python\" rel=\"nofollow\">https://developers.google.com/drive/api/v3/quickstart/python</a></p>\n<p>Once you have the <code>credentials.json</code> file, you need to define the <strong>credential_path</strong> and <strong>token_path</strong>.</p>\n<p>After that, you can run <code>orchest generate g_drive</code> to create the <code>google_drive_token.json</code>.</p>\n<h2>API</h2>\n<p>The API is pretty straight forward.  Each connectors inherit from <code>orchester.connectors.AbstractBaseConnector</code></p>\n<p>If you want to use all the connectors at one time, you can use the <code>orchester.ConnectorManager</code></p>\n<p>The manager instantiate all the connectors and let you easily interact with the connector one at a time.</p>\n<p>Here's an example to use the github connector:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">orchester.connectors</span> <span class=\"kn\">import</span> <span class=\"n\">GithubConnector</span><span class=\"p\">,</span> <span class=\"n\">RequestFailedError</span>\n\n<span class=\"n\">connector</span> <span class=\"o\">=</span> <span class=\"n\">GithubConnector</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"s2\">\"my token...\"</span><span class=\"p\">,</span><span class=\"n\">organization_id</span><span class=\"o\">=</span><span class=\"s1\">'myOrg'</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">user_exist</span> <span class=\"o\">=</span> <span class=\"n\">connector</span><span class=\"o\">.</span><span class=\"n\">is_registered_to_group</span><span class=\"p\">(</span><span class=\"s1\">'popojargo'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'User is registered to myOrg'</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">RequestFailedError</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'The request failed.'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">connector</span><span class=\"o\">.</span><span class=\"n\">remove_from_group</span><span class=\"p\">(</span><span class=\"s1\">'popojargo'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'User removed to myOrg'</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"n\">RequestFailedError</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'The request failed.'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">user_exist</span> <span class=\"o\">=</span> <span class=\"n\">connector</span><span class=\"o\">.</span><span class=\"n\">add_to_group</span><span class=\"p\">(</span><span class=\"s1\">'popojargo'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'User added to myOrg'</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"n\">RequestFailedError</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'The request failed.'</span><span class=\"p\">)</span>\n</pre>\n<h2>Contributing</h2>\n<p>For developer documentation, see <a href=\"README-DEV.md\" rel=\"nofollow\">README-DEV.md</a></p>\n\n          </div>"}, "last_serial": 5810999, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "732053c06ad8ffed82791bb6fdb064af", "sha256": "a3aff989639351dad1303c2091839ec94af58db607d90278b753db407aad25b7"}, "downloads": -1, "filename": "orchester-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "732053c06ad8ffed82791bb6fdb064af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 13698, "upload_time": "2019-02-07T19:23:26", "upload_time_iso_8601": "2019-02-07T19:23:26.516467Z", "url": "https://files.pythonhosted.org/packages/e2/fc/c2d9f5aaf84566fd9495efc998c52852afd59f485109cfa7cb6abec157af/orchester-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9cd28d3070dbc2d63e615422b704574f", "sha256": "bd32513e2d6345206c7fc792237b8570c7f47c6bfab84bdacbaa1ee83fac7628"}, "downloads": -1, "filename": "orchester-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9cd28d3070dbc2d63e615422b704574f", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 8573, "upload_time": "2019-02-07T19:23:28", "upload_time_iso_8601": "2019-02-07T19:23:28.408230Z", "url": "https://files.pythonhosted.org/packages/aa/5e/609afed6a528dab8ac687c290049cbd50c183c505e756c82e118b6c3d1f8/orchester-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d39db94a799516c2729c7c79744c7ccc", "sha256": "30af066c7acf3994a0fc8651ff6856217ce70e31a7ba665584349251e10d460d"}, "downloads": -1, "filename": "orchester-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d39db94a799516c2729c7c79744c7ccc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 14281, "upload_time": "2019-09-10T20:08:34", "upload_time_iso_8601": "2019-09-10T20:08:34.306604Z", "url": "https://files.pythonhosted.org/packages/03/37/11a786cdc7b8e00abef5232ec1e3bc0610ff44fa340fc0fe37d4b969a0bb/orchester-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b36bba7080f33c72b893914b2350fc42", "sha256": "fc934fd59ff4cdbb63850175e17d9b284e9209d4cb7427d7d5833ffdc2c76956"}, "downloads": -1, "filename": "orchester-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b36bba7080f33c72b893914b2350fc42", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 9158, "upload_time": "2019-09-10T20:08:39", "upload_time_iso_8601": "2019-09-10T20:08:39.035312Z", "url": "https://files.pythonhosted.org/packages/b0/82/714c1f3e25d4d1cdb052d1d870b87cdbb4f7558f8e80f6797591fc6a1d52/orchester-0.0.2.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "313749c40b0edcfbcef842778768a8bd", "sha256": "e6dcd663baf39d6e65b8714c638a8d7af6c32b4d2f63cd900ebc54bb8da5c952"}, "downloads": -1, "filename": "orchester-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "313749c40b0edcfbcef842778768a8bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 14281, "upload_time": "2019-09-10T20:08:37", "upload_time_iso_8601": "2019-09-10T20:08:37.270785Z", "url": "https://files.pythonhosted.org/packages/a8/21/fc5bf7cfab1206f4e947bc8c88f4b1db15bb8e31b986837d308f8cfb08d9/orchester-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e09a390409e1873275c4a6cc786cd9c", "sha256": "5cb140662e73c0b771d227fe6cbc7d5e3a821c5173839b50bc2748d7a080fde2"}, "downloads": -1, "filename": "orchester-0.0.4.tar.gz", "has_sig": false, "md5_digest": "8e09a390409e1873275c4a6cc786cd9c", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 9153, "upload_time": "2019-09-10T20:08:40", "upload_time_iso_8601": "2019-09-10T20:08:40.564619Z", "url": "https://files.pythonhosted.org/packages/72/61/92ecf7449625e4af154aa206c7e41fd5e5ef3ec33f07a215eeea22ae592d/orchester-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "313749c40b0edcfbcef842778768a8bd", "sha256": "e6dcd663baf39d6e65b8714c638a8d7af6c32b4d2f63cd900ebc54bb8da5c952"}, "downloads": -1, "filename": "orchester-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "313749c40b0edcfbcef842778768a8bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 14281, "upload_time": "2019-09-10T20:08:37", "upload_time_iso_8601": "2019-09-10T20:08:37.270785Z", "url": "https://files.pythonhosted.org/packages/a8/21/fc5bf7cfab1206f4e947bc8c88f4b1db15bb8e31b986837d308f8cfb08d9/orchester-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e09a390409e1873275c4a6cc786cd9c", "sha256": "5cb140662e73c0b771d227fe6cbc7d5e3a821c5173839b50bc2748d7a080fde2"}, "downloads": -1, "filename": "orchester-0.0.4.tar.gz", "has_sig": false, "md5_digest": "8e09a390409e1873275c4a6cc786cd9c", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 9153, "upload_time": "2019-09-10T20:08:40", "upload_time_iso_8601": "2019-09-10T20:08:40.564619Z", "url": "https://files.pythonhosted.org/packages/72/61/92ecf7449625e4af154aa206c7e41fd5e5ef3ec33f07a215eeea22ae592d/orchester-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:44 2020"}