{"info": {"author": "Frank van Breugel", "author_email": "f.v.breugel@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Home Automation"], "description": "# python-plugwise: An async python library to control Plugwise plugs Circle+ and Circle\n\nThis library was created to extent my [Home Assisstant](https://home-assistant.io) setup with the [Plugwise](https://plugwise.com) legacy USB-stick to control the linked Circle+ and [Circle](https://www.plugwise.com/en_US/products/circle) plugs which could be controlled by the legacy Windows [Source application](https://www.plugwise.com/en_US/source) supplied by Plugwise.\nAs the primary goal is to support Plugwise nodes in Home Assistant, it can also be used independently.\n\nBe aware this library does NOT support the new [Plug](https://www.plugwise.com/en_US/products/plug) (identified by having a local button) which complies to the [Zigbee](https://zigbeealliance.org/) standard, while this is not the case for the legacy plugwise devices.\n\nThere's no official documentation available about the protocol of the Plugwise so this library is based on partial reverse engineering by [Maarten Damen](https://maartendamen.com/category/plugwise-unleashed/)\nand several other sources [bitbucket.org/hadara/python-plugwise](https://bitbucket.org/hadara/python-plugwise/wiki/Home) and [openHAB](https://github.com/openhab/openhab-addons)\n\nThe latest version of the library is published as a python package on [pypi](https://pypi.python.org/pypi/python-plugwise) and currently supports the devices an functions listed below:\n\n| Plugwise node | Relay control | Power monitoring | Comments |\n| ----------- | ----------- | ----------- | ----------- |\n| Circle+ | Yes | Yes | Working |\n| Circle | Yes | Yes | Working |\n| Scan | No | No | Not supported yet |\n| Sense | No | No | Not supported yet |\n| Switch | No | No | Not supported yet |\n| Stealth | Yes | Yes | Experimental (not tested) |\n| Sting | No | No | Not supported yet |\n\nWhen the connection to the stick is initialized it will automatically do a discovery of all linked nodes.\n\nI would like to extend this library to support other Plugwise device types, unfortunately I do not own these devices so I'm unable to test. So feel free to submit pull requests or log issues through [github](https://github.com/brefra/python-plugwise) for functionality you like to have included.\n\nNote: This library does not support linking or removing nodes from the Plugwise network (yet). You still need the Plugwise Source software for that.\n\n## Install\n\nTo install run the following command as root:\n```\npip install python-plugwise\n```\n\n## Example usage\n\nThe library currently only supports a USB (serial) connection (socket connection is in development) to the Plugwise stick. In order to use the library, you need to first initialize the stick and trigger a scan to query the Circle+ for all linked nodes in the Plugwise Zigbee network.\n\n```python\nimport time\nimport plugwise\n\nCALLBACK_POWER_ID = \"power_1s\"\n\ndef scan_start():\n\n    def scan_finished():\n        \"\"\"\n        Callback for init finished\n        \"\"\"\n\n        def power_update(power_use):\n            \"\"\"\n            Callback for new power use value\n            \"\"\"\n            print(\"New power use value : \" + str(round(power_use, 2)))\n\n\n        print(\"== Initialization has finished ==\")\n        print(\"\")\n        for mac in plugwise.nodes():\n            print (\"- type  : \" + str(plugwise.node(mac).get_node_type()))\n            print (\"- mac   : \" + mac)\n            print (\"- state : \" + str(plugwise.node(mac).get_available()))\n            print (\"- update: \" + str(plugwise.node(mac).get_last_update()))\n            print (\"- hw ver: \" + str(plugwise.node(mac).get_hardware_version()))\n            print (\"- fw ver: \" + str(plugwise.node(mac).get_firmware_version()))\n            print (\"- relay : \" + str(plugwise.node(mac).get_relay_state()))\n            print (\"\")\n        print (\"circle+ = \" + plugwise.nodes()[0])\n        node = plugwise.node(plugwise.nodes()[0])\n        mac = node.get_mac()\n        print(\"Register callback for power use updates of node \" + mac)\n        node.subscribe_callback(power_update, CALLBACK_POWER_ID)\n\n        print(\"start auto update every 10 sec\")\n        plugwise.auto_update(10)\n\n        time.sleep(10)\n        print (\"Circle+ Poweruse last second (W)             : \" + str(node.get_power_usage()))\n        print (\"Circle+ Poweruse last 8 seconds (W)          : \" + str(node.get_power_usage_8_sec()))\n        print (\"Circle+ Power consumption current hour (kWh) : \" + str(node.get_power_consumption_current_hour()))\n        print (\"Circle+ Power consumption previous hour (kWh): \" + str(node.get_power_consumption_previous_hour()))\n        print (\"Circle+ Power consumption today (kWh)        : \" + str(node.get_power_consumption_today()))\n        print (\"Circle+ Power consumption yesterday (kWh)    : \" + str(node.get_power_consumption_yesterday()))\n        print (\"Circle+ Power production previous hour (kWh) : \" + str(node.get_power_production_current_hour()))\n        print (\"Circle+ Power production current hour (kWh)  : \" + str(node.get_power_production_previous_hour()))\n        print (\"Circle+ Ping roundtrip (ms)                  : \" + str(node.get_ping()))\n        print (\"Circle+ RSSI in                              : \" + str(node.get_rssi_in()))\n        print (\"Circle+ RSSI out                             : \" + str(node.get_rssi_out()))\n\n    # Scan for linked nodes and print all scan activities to console\n    plugwise.scan(scan_finished, True)\n\n## Main ##\nprint(\"start connecting to stick\")\nport = \"/dev/ttyUSB0\"\nplugwise = plugwise.stick(port, scan_start)\n\ntime.sleep(300)\nprint(\"stop auto update\")\nplugwise.auto_update(0)\n\ntime.sleep(5)\n\nprint(\"Exiting ...\")\nplugwise.stop()\n```\n\n## Usage\n\nYou can use example.py as an example to get power usage from the Circle+\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brefra/python-plugwise", "keywords": "home,plugwise,stick,automation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "python-plugwise", "package_url": "https://pypi.org/project/python-plugwise/", "platform": "any", "project_url": "https://pypi.org/project/python-plugwise/", "project_urls": {"Homepage": "https://github.com/brefra/python-plugwise"}, "release_url": "https://pypi.org/project/python-plugwise/0.6/", "requires_dist": ["crcmod", "pyserial"], "requires_python": ">=3.6", "summary": "Async library for Plugwise stick", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>python-plugwise: An async python library to control Plugwise plugs Circle+ and Circle</h1>\n<p>This library was created to extent my <a href=\"https://home-assistant.io\" rel=\"nofollow\">Home Assisstant</a> setup with the <a href=\"https://plugwise.com\" rel=\"nofollow\">Plugwise</a> legacy USB-stick to control the linked Circle+ and <a href=\"https://www.plugwise.com/en_US/products/circle\" rel=\"nofollow\">Circle</a> plugs which could be controlled by the legacy Windows <a href=\"https://www.plugwise.com/en_US/source\" rel=\"nofollow\">Source application</a> supplied by Plugwise.\nAs the primary goal is to support Plugwise nodes in Home Assistant, it can also be used independently.</p>\n<p>Be aware this library does NOT support the new <a href=\"https://www.plugwise.com/en_US/products/plug\" rel=\"nofollow\">Plug</a> (identified by having a local button) which complies to the <a href=\"https://zigbeealliance.org/\" rel=\"nofollow\">Zigbee</a> standard, while this is not the case for the legacy plugwise devices.</p>\n<p>There's no official documentation available about the protocol of the Plugwise so this library is based on partial reverse engineering by <a href=\"https://maartendamen.com/category/plugwise-unleashed/\" rel=\"nofollow\">Maarten Damen</a>\nand several other sources <a href=\"https://bitbucket.org/hadara/python-plugwise/wiki/Home\" rel=\"nofollow\">bitbucket.org/hadara/python-plugwise</a> and <a href=\"https://github.com/openhab/openhab-addons\" rel=\"nofollow\">openHAB</a></p>\n<p>The latest version of the library is published as a python package on <a href=\"https://pypi.python.org/pypi/python-plugwise\" rel=\"nofollow\">pypi</a> and currently supports the devices an functions listed below:</p>\n<table>\n<thead>\n<tr>\n<th>Plugwise node</th>\n<th>Relay control</th>\n<th>Power monitoring</th>\n<th>Comments</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Circle+</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Working</td>\n</tr>\n<tr>\n<td>Circle</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Working</td>\n</tr>\n<tr>\n<td>Scan</td>\n<td>No</td>\n<td>No</td>\n<td>Not supported yet</td>\n</tr>\n<tr>\n<td>Sense</td>\n<td>No</td>\n<td>No</td>\n<td>Not supported yet</td>\n</tr>\n<tr>\n<td>Switch</td>\n<td>No</td>\n<td>No</td>\n<td>Not supported yet</td>\n</tr>\n<tr>\n<td>Stealth</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Experimental (not tested)</td>\n</tr>\n<tr>\n<td>Sting</td>\n<td>No</td>\n<td>No</td>\n<td>Not supported yet</td>\n</tr></tbody></table>\n<p>When the connection to the stick is initialized it will automatically do a discovery of all linked nodes.</p>\n<p>I would like to extend this library to support other Plugwise device types, unfortunately I do not own these devices so I'm unable to test. So feel free to submit pull requests or log issues through <a href=\"https://github.com/brefra/python-plugwise\" rel=\"nofollow\">github</a> for functionality you like to have included.</p>\n<p>Note: This library does not support linking or removing nodes from the Plugwise network (yet). You still need the Plugwise Source software for that.</p>\n<h2>Install</h2>\n<p>To install run the following command as root:</p>\n<pre><code>pip install python-plugwise\n</code></pre>\n<h2>Example usage</h2>\n<p>The library currently only supports a USB (serial) connection (socket connection is in development) to the Plugwise stick. In order to use the library, you need to first initialize the stick and trigger a scan to query the Circle+ for all linked nodes in the Plugwise Zigbee network.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">plugwise</span>\n\n<span class=\"n\">CALLBACK_POWER_ID</span> <span class=\"o\">=</span> <span class=\"s2\">\"power_1s\"</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">scan_start</span><span class=\"p\">():</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">scan_finished</span><span class=\"p\">():</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Callback for init finished</span>\n<span class=\"sd\">        \"\"\"</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">power_update</span><span class=\"p\">(</span><span class=\"n\">power_use</span><span class=\"p\">):</span>\n            <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">            Callback for new power use value</span>\n<span class=\"sd\">            \"\"\"</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"New power use value : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">power_use</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"== Initialization has finished ==\"</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">mac</span> <span class=\"ow\">in</span> <span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"p\">():</span>\n            <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"- type  : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">(</span><span class=\"n\">mac</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_node_type</span><span class=\"p\">()))</span>\n            <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"- mac   : \"</span> <span class=\"o\">+</span> <span class=\"n\">mac</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"- state : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">(</span><span class=\"n\">mac</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_available</span><span class=\"p\">()))</span>\n            <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"- update: \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">(</span><span class=\"n\">mac</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_last_update</span><span class=\"p\">()))</span>\n            <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"- hw ver: \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">(</span><span class=\"n\">mac</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_hardware_version</span><span class=\"p\">()))</span>\n            <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"- fw ver: \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">(</span><span class=\"n\">mac</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_firmware_version</span><span class=\"p\">()))</span>\n            <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"- relay : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">(</span><span class=\"n\">mac</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_relay_state</span><span class=\"p\">()))</span>\n            <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"circle+ = \"</span> <span class=\"o\">+</span> <span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"n\">node</span> <span class=\"o\">=</span> <span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">(</span><span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"n\">mac</span> <span class=\"o\">=</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">get_mac</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Register callback for power use updates of node \"</span> <span class=\"o\">+</span> <span class=\"n\">mac</span><span class=\"p\">)</span>\n        <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">subscribe_callback</span><span class=\"p\">(</span><span class=\"n\">power_update</span><span class=\"p\">,</span> <span class=\"n\">CALLBACK_POWER_ID</span><span class=\"p\">)</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"start auto update every 10 sec\"</span><span class=\"p\">)</span>\n        <span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">auto_update</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Circle+ Poweruse last second (W)             : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">get_power_usage</span><span class=\"p\">()))</span>\n        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Circle+ Poweruse last 8 seconds (W)          : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">get_power_usage_8_sec</span><span class=\"p\">()))</span>\n        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Circle+ Power consumption current hour (kWh) : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">get_power_consumption_current_hour</span><span class=\"p\">()))</span>\n        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Circle+ Power consumption previous hour (kWh): \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">get_power_consumption_previous_hour</span><span class=\"p\">()))</span>\n        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Circle+ Power consumption today (kWh)        : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">get_power_consumption_today</span><span class=\"p\">()))</span>\n        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Circle+ Power consumption yesterday (kWh)    : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">get_power_consumption_yesterday</span><span class=\"p\">()))</span>\n        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Circle+ Power production previous hour (kWh) : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">get_power_production_current_hour</span><span class=\"p\">()))</span>\n        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Circle+ Power production current hour (kWh)  : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">get_power_production_previous_hour</span><span class=\"p\">()))</span>\n        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Circle+ Ping roundtrip (ms)                  : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">get_ping</span><span class=\"p\">()))</span>\n        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Circle+ RSSI in                              : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">get_rssi_in</span><span class=\"p\">()))</span>\n        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Circle+ RSSI out                             : \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">get_rssi_out</span><span class=\"p\">()))</span>\n\n    <span class=\"c1\"># Scan for linked nodes and print all scan activities to console</span>\n    <span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">scan</span><span class=\"p\">(</span><span class=\"n\">scan_finished</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## Main ##</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"start connecting to stick\"</span><span class=\"p\">)</span>\n<span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"s2\">\"/dev/ttyUSB0\"</span>\n<span class=\"n\">plugwise</span> <span class=\"o\">=</span> <span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">stick</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">scan_start</span><span class=\"p\">)</span>\n\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"stop auto update\"</span><span class=\"p\">)</span>\n<span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">auto_update</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Exiting ...\"</span><span class=\"p\">)</span>\n<span class=\"n\">plugwise</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<h2>Usage</h2>\n<p>You can use example.py as an example to get power usage from the Circle+</p>\n\n          </div>"}, "last_serial": 7034551, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "652680ade086c8499b5adf155a763766", "sha256": "d364264a7fd9e47776a869fa4e0c2b4b67845c8676597a4ed498ec556cb3a250"}, "downloads": -1, "filename": "python_plugwise-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "652680ade086c8499b5adf155a763766", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 25976, "upload_time": "2020-03-10T20:25:16", "upload_time_iso_8601": "2020-03-10T20:25:16.300651Z", "url": "https://files.pythonhosted.org/packages/69/9d/089e109592eef6bbcbb8212a77e2a9a92272f76e359db8739976f6dc0c75/python_plugwise-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "461f86ccf5648e9ebc7fa308a9f71482", "sha256": "92926f6846075081e194aaeb5b86369364a7c4efa74876a03c09f5a792f19a03"}, "downloads": -1, "filename": "python-plugwise-0.1.tar.gz", "has_sig": false, "md5_digest": "461f86ccf5648e9ebc7fa308a9f71482", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19896, "upload_time": "2020-03-10T20:25:18", "upload_time_iso_8601": "2020-03-10T20:25:18.571805Z", "url": "https://files.pythonhosted.org/packages/3b/8a/70a5493579dc8f48920014888fd88a77d4e65ebb2603bd2ac0aef186b647/python-plugwise-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "aece7a89e3a327341cac41184b82191c", "sha256": "aac60d0c7d3806b474fc8ed270a40fa232c56a7f6193e6ab5db7fb8b5a7d7dbe"}, "downloads": -1, "filename": "python_plugwise-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "aece7a89e3a327341cac41184b82191c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 26106, "upload_time": "2020-03-12T21:48:26", "upload_time_iso_8601": "2020-03-12T21:48:26.858527Z", "url": "https://files.pythonhosted.org/packages/1f/43/467feadb6fc01e1da002d8ecad76f220e29146f5417376522d20d2a6205b/python_plugwise-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e3567f01083bf37ef8f4308a9ed786a", "sha256": "ac5f78012d84ac7f0910d47e0a4d5d039be71727ffd2e64c15f7f03841db6bca"}, "downloads": -1, "filename": "python-plugwise-0.2.tar.gz", "has_sig": false, "md5_digest": "4e3567f01083bf37ef8f4308a9ed786a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20059, "upload_time": "2020-03-12T21:48:28", "upload_time_iso_8601": "2020-03-12T21:48:28.779774Z", "url": "https://files.pythonhosted.org/packages/cd/36/fdba9fa6a1eccdbd34e2b8feaaaebd47ee00e46dc369d49948d362e1bbd4/python-plugwise-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "6cb765ca23549503253bbcb50e99a12b", "sha256": "41bd3a5c34f992b22baada21911fea0b1c9360e548a2c3a60b403596922c02fc"}, "downloads": -1, "filename": "python_plugwise-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6cb765ca23549503253bbcb50e99a12b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 28864, "upload_time": "2020-03-28T13:29:45", "upload_time_iso_8601": "2020-03-28T13:29:45.486775Z", "url": "https://files.pythonhosted.org/packages/7c/b0/6e976bda51f7b56070470cede9d3b20cf48a0575a991cae12bdd5ff28d3e/python_plugwise-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16e87883f20f8e640b96a6f1c002f3ad", "sha256": "022595bc215822adb4f73dd16796feaa3001f271299e2f61c932ef6b619de0bb"}, "downloads": -1, "filename": "python-plugwise-0.3.tar.gz", "has_sig": false, "md5_digest": "16e87883f20f8e640b96a6f1c002f3ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22138, "upload_time": "2020-03-28T13:29:48", "upload_time_iso_8601": "2020-03-28T13:29:48.592489Z", "url": "https://files.pythonhosted.org/packages/9a/8c/2657c4a042adcad6d71fcff8f17bfdd0cc36201063e0edbd618f30876e6c/python-plugwise-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "dbc75704f635a3247373327be82fc7e3", "sha256": "b98c0ddc0ed5d759de01c4c4a59a32a6a7ad34fee9c2897537e9ac5416e33ddf"}, "downloads": -1, "filename": "python_plugwise-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "dbc75704f635a3247373327be82fc7e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 28867, "upload_time": "2020-03-28T17:36:46", "upload_time_iso_8601": "2020-03-28T17:36:46.907522Z", "url": "https://files.pythonhosted.org/packages/e1/c5/d283ae6633ccb5cac5ddbc356c65cb878bbc437e006a4b63b5fb21beae6f/python_plugwise-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdec3d9cbcab6eb217adad07fc0d4d9a", "sha256": "e4c87d0b537765dd4020081fcc717a849e73c2edb3c8334d6168d24b00638a2b"}, "downloads": -1, "filename": "python-plugwise-0.4.tar.gz", "has_sig": false, "md5_digest": "fdec3d9cbcab6eb217adad07fc0d4d9a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22129, "upload_time": "2020-03-28T17:36:51", "upload_time_iso_8601": "2020-03-28T17:36:51.446783Z", "url": "https://files.pythonhosted.org/packages/cf/43/e9563dd56536d3933f0b3042ab648e7a8f465423a2db0b7299bf0a8a9bd4/python-plugwise-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "4afd23b8a0eb9a7cec11a588149a582a", "sha256": "6f51b4090d98731881f6c55823978d46b580a7cfb7433982ca2891df7155e4a4"}, "downloads": -1, "filename": "python_plugwise-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "4afd23b8a0eb9a7cec11a588149a582a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 29063, "upload_time": "2020-04-03T17:54:27", "upload_time_iso_8601": "2020-04-03T17:54:27.308568Z", "url": "https://files.pythonhosted.org/packages/01/88/86c6a52becbaaab35cd9b11a5a03d32fc0e38f417df202b874080cb59ae4/python_plugwise-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27e7d442705b8bb8088014fde733e460", "sha256": "ce94e5eda960faa4f2c2d1c4d813bf9fd4997593836f1b6f35e6ed2d4304fc54"}, "downloads": -1, "filename": "python-plugwise-0.5.tar.gz", "has_sig": false, "md5_digest": "27e7d442705b8bb8088014fde733e460", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22299, "upload_time": "2020-04-03T17:54:32", "upload_time_iso_8601": "2020-04-03T17:54:32.170964Z", "url": "https://files.pythonhosted.org/packages/83/c8/a44e1714a2d8e6360d0cd3f05eef07fc8e87e2c339c9e92dd324bde8cec6/python-plugwise-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "5c2d24cdeefed5d0286329655373324e", "sha256": "9cc88010599d0239fc35675c60a9f4a593feae9878d57533fd9a465889cc2323"}, "downloads": -1, "filename": "python_plugwise-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "5c2d24cdeefed5d0286329655373324e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30154, "upload_time": "2020-04-16T19:38:06", "upload_time_iso_8601": "2020-04-16T19:38:06.090020Z", "url": "https://files.pythonhosted.org/packages/de/a6/52b1e77eb8940a9aa8a76cb3c14c77e909bd6e8da6ef4a924827f6fd75c2/python_plugwise-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "958d8bc922f4dc49545d426052655d64", "sha256": "0ae76fb200a98fe9bd2bdabe1c0f9090c61c261ea5fbd2a7183a10636fe6f724"}, "downloads": -1, "filename": "python-plugwise-0.6.tar.gz", "has_sig": false, "md5_digest": "958d8bc922f4dc49545d426052655d64", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23861, "upload_time": "2020-04-16T19:38:11", "upload_time_iso_8601": "2020-04-16T19:38:11.188032Z", "url": "https://files.pythonhosted.org/packages/a1/48/2608a2fc0fef3d4825cb8ddab67578e8f3df7b30aa57f0adc1d6da8be863/python-plugwise-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5c2d24cdeefed5d0286329655373324e", "sha256": "9cc88010599d0239fc35675c60a9f4a593feae9878d57533fd9a465889cc2323"}, "downloads": -1, "filename": "python_plugwise-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "5c2d24cdeefed5d0286329655373324e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30154, "upload_time": "2020-04-16T19:38:06", "upload_time_iso_8601": "2020-04-16T19:38:06.090020Z", "url": "https://files.pythonhosted.org/packages/de/a6/52b1e77eb8940a9aa8a76cb3c14c77e909bd6e8da6ef4a924827f6fd75c2/python_plugwise-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "958d8bc922f4dc49545d426052655d64", "sha256": "0ae76fb200a98fe9bd2bdabe1c0f9090c61c261ea5fbd2a7183a10636fe6f724"}, "downloads": -1, "filename": "python-plugwise-0.6.tar.gz", "has_sig": false, "md5_digest": "958d8bc922f4dc49545d426052655d64", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23861, "upload_time": "2020-04-16T19:38:11", "upload_time_iso_8601": "2020-04-16T19:38:11.188032Z", "url": "https://files.pythonhosted.org/packages/a1/48/2608a2fc0fef3d4825cb8ddab67578e8f3df7b30aa57f0adc1d6da8be863/python-plugwise-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:57 2020"}