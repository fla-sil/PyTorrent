{"info": {"author": "Yusuke Kumihashi", "author_email": "y_kumiha@nttpc.co.jp", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# AnyMotion CLI\n\n[![CircleCI][ci-status]][ci] [![codecov][codecov-status]][codecov]\n\nThis package provides a command line interface to [AnyMotion](https://anymotion.nttpc.co.jp/).\n\nIt works on Python versions:\n\n- Python 3.6\n- Python 3.7\n- Python 3.8\n\n## Installation\n\nInstall using [pip](https://pip.pypa.io/en/stable/quickstart/):\n\n```sh\n$ pip install anymotion-cli\n```\n\n## Getting Started\n\nBefore using anymotion-cli, you need to tell it about your credentials which issued by the [AnyMotion Portal](https://portal.anymotion.jp/).\nYou can do this in several ways:\n\n- CLI command\n- Credentials file\n- Environment variables\n\nThe quickest way to get started is to run the `amcli configure` command:\n\n```sh\n$ amcli configure\nAnyMotion API URL [https://api.customer.jp/anymotion/v1/]:\nAnyMotion Client ID: your_client_id\nAnyMotion Client Secret: your_client_secret\n```\n\nTo use environment variables, do the following:\n\n```sh\nexport ANYMOTION_CLIENT_ID=<your_client_id>\nexport ANYMOTION_CLIENT_SECRET=<your_client_secret>\n```\n\nTo use the credentials file, create an INI formatted file like this:\n\n```text\n[default]\nanymotion_client_id=<your_client_id>\nanymotion_client_secret=<your_client_secret>\n```\n\nand place it in `~/.anymotion/credentials`.\n\n**Note**: If set in both the credentials file and environment variables, the environment variables takes precedence.\n\n## Usage\n\nYou can use `amcli`.\n\n```text\namcli [OPTIONS] COMMAND [ARGS]...\n```\n\nMore information, see below tables or run with `--help` option.\n\n### Commands to process something (verb commands)\n\n| command name | description |\n| -- | -- |\n| upload | Upload the local movie or image file to the cloud storage. |\n| download | Download the drawn file. |\n| extract | Extract keypoints from uploaded images or movies. |\n| draw | Draw points and/or lines on uploaded movie or image. |\n| analyze | Analyze the extracted keypoint data. |\n\n### Commands to show something (noun commands)\n\n| command name | description |\n| -- | -- |\n| image | Show the information of the uploaded images. |\n| movie | Show the information of the uploaded movies. |\n| keypoint | Show the extracted keypoints. |\n| drawing | Show the information of the drawn images or movies. |\n| analysis | Show the analysis results. |\n\n### Other commands\n\n| command name | description |\n| -- | -- |\n| configure | Configure your AnyMotion Credentials. |\n\n### Examples\n\n#### Draw keypoints in image file\n\nFirst, upload the image file.\n\n```sh\n$ amcli upload image.jpg\nSuccess: Uploaded image.jpg to the cloud storage. (image id: 111)\n```\n\nWhen the upload is complete, you get an `image id`.\nExtract keypoints using this `image id`.\n\n```sh\n$ amcli extract --image-id 111\nKeypoint extraction started. (keypoint id: 222)\nSuccess: Keypoint extraction is complete.\n```\n\nDraw points/lines to image using `keypoint id`.\n\n```sh\n$ amcli draw 222\nDrawing is started. (drawing id: 333)\nSuccess: Drawing is complete.\nDownloaded the file to image.jpg.\n```\n\nWhen the drawing is complete, the drawing file is downloaded (by default, to the current directory).\nTo save to a specific file or directory, use the `--out` option.\n\n## Shell Complete\n\nThe anymotion-cli supports Shell completion.\n\nFor Bash, add this to `~/.bashrc`:\n\n```sh\neval \"$(_AMCLI_COMPLETE=source amcli)\"\n```\n\nFor Zsh, add this to `~/.zshrc`:\n\n```sh\neval \"$(_AMCLI_COMPLETE=source_zsh amcli)\"\n```\n\nFor Fish, add this to `~/.config/fish/completions/amcli.fish`:\n\n```sh\neval (env _AMCLI_COMPLETE=source_fish amcli)\n```\n\n## Change Log\n\nSee [CHANGELOG.md](CHANGELOG.md).\n\n## Contributing\n\n- Code must work on Python 3.6 and higher.\n- Code should follow [black](https://black.readthedocs.io/en/stable/).\n- Docstring should follow [Google Style](http://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings).\n- Install all development dependencies using:\n\n  ```sh\n  $ poetry install\n  ```\n\n- Before submitting pull requests, run tests with:\n\n  ```sh\n  $ poetry run tox\n  ```\n\n[ci]: https://circleci.com/gh/nttpc/anymotion-cli\n[ci-status]: https://circleci.com/gh/nttpc/anymotion-cli.svg?style=shield&circle-token=4f7564ae447f53ff1c6d3aadb2303b5d526c6fb8\n[codecov]: https://codecov.io/gh/nttpc/anymotion-cli\n[codecov-status]: https://codecov.io/gh/nttpc/anymotion-cli/branch/master/graph/badge.svg?token=6S0GIV4ZD9\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nttpc/anymotion-cli", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "anymotion-cli", "package_url": "https://pypi.org/project/anymotion-cli/", "platform": "", "project_url": "https://pypi.org/project/anymotion-cli/", "project_urls": {"Homepage": "https://github.com/nttpc/anymotion-cli", "Repository": "https://github.com/nttpc/anymotion-cli"}, "release_url": "https://pypi.org/project/anymotion-cli/1.0.0/", "requires_dist": ["anymotion-sdk (>=1.0,<1.1)", "click (>=7.1.1,<8.0.0)", "click_help_colors (>=0.6,<0.7)", "click_repl (>=0.1.6,<0.2.0)", "pygments (>=2.6.1,<3.0.0)", "requests (>=2.23.0,<3.0.0)", "tabulate (>=0.8.6,<0.9.0)", "yaspin (>=0.16.0,<0.17.0)"], "requires_python": ">=3.6,<4.0", "summary": "Command Line Interface for AnyMotion API", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>AnyMotion CLI</h1>\n<p><a href=\"https://circleci.com/gh/nttpc/anymotion-cli\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81ac9b276d5df36d097e78c56c3e223e6e22ac2e/68747470733a2f2f636972636c6563692e636f6d2f67682f6e747470632f616e796d6f74696f6e2d636c692e7376673f7374796c653d736869656c6426636972636c652d746f6b656e3d34663735363461653434376635336666316336643361616462323330336235643532366336666238\"></a> <a href=\"https://codecov.io/gh/nttpc/anymotion-cli\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99ecf1c907bbb59a79e87a0e8a65de02a93d265b/68747470733a2f2f636f6465636f762e696f2f67682f6e747470632f616e796d6f74696f6e2d636c692f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d365330474956345a4439\"></a></p>\n<p>This package provides a command line interface to <a href=\"https://anymotion.nttpc.co.jp/\" rel=\"nofollow\">AnyMotion</a>.</p>\n<p>It works on Python versions:</p>\n<ul>\n<li>Python 3.6</li>\n<li>Python 3.7</li>\n<li>Python 3.8</li>\n</ul>\n<h2>Installation</h2>\n<p>Install using <a href=\"https://pip.pypa.io/en/stable/quickstart/\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ pip install anymotion-cli\n</pre>\n<h2>Getting Started</h2>\n<p>Before using anymotion-cli, you need to tell it about your credentials which issued by the <a href=\"https://portal.anymotion.jp/\" rel=\"nofollow\">AnyMotion Portal</a>.\nYou can do this in several ways:</p>\n<ul>\n<li>CLI command</li>\n<li>Credentials file</li>\n<li>Environment variables</li>\n</ul>\n<p>The quickest way to get started is to run the <code>amcli configure</code> command:</p>\n<pre>$ amcli configure\nAnyMotion API URL <span class=\"o\">[</span>https://api.customer.jp/anymotion/v1/<span class=\"o\">]</span>:\nAnyMotion Client ID: your_client_id\nAnyMotion Client Secret: your_client_secret\n</pre>\n<p>To use environment variables, do the following:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">ANYMOTION_CLIENT_ID</span><span class=\"o\">=</span>&lt;your_client_id&gt;\n<span class=\"nb\">export</span> <span class=\"nv\">ANYMOTION_CLIENT_SECRET</span><span class=\"o\">=</span>&lt;your_client_secret&gt;\n</pre>\n<p>To use the credentials file, create an INI formatted file like this:</p>\n<pre>[default]\nanymotion_client_id=&lt;your_client_id&gt;\nanymotion_client_secret=&lt;your_client_secret&gt;\n</pre>\n<p>and place it in <code>~/.anymotion/credentials</code>.</p>\n<p><strong>Note</strong>: If set in both the credentials file and environment variables, the environment variables takes precedence.</p>\n<h2>Usage</h2>\n<p>You can use <code>amcli</code>.</p>\n<pre>amcli [OPTIONS] COMMAND [ARGS]...\n</pre>\n<p>More information, see below tables or run with <code>--help</code> option.</p>\n<h3>Commands to process something (verb commands)</h3>\n<table>\n<thead>\n<tr>\n<th>command name</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>upload</td>\n<td>Upload the local movie or image file to the cloud storage.</td>\n</tr>\n<tr>\n<td>download</td>\n<td>Download the drawn file.</td>\n</tr>\n<tr>\n<td>extract</td>\n<td>Extract keypoints from uploaded images or movies.</td>\n</tr>\n<tr>\n<td>draw</td>\n<td>Draw points and/or lines on uploaded movie or image.</td>\n</tr>\n<tr>\n<td>analyze</td>\n<td>Analyze the extracted keypoint data.</td>\n</tr></tbody></table>\n<h3>Commands to show something (noun commands)</h3>\n<table>\n<thead>\n<tr>\n<th>command name</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>image</td>\n<td>Show the information of the uploaded images.</td>\n</tr>\n<tr>\n<td>movie</td>\n<td>Show the information of the uploaded movies.</td>\n</tr>\n<tr>\n<td>keypoint</td>\n<td>Show the extracted keypoints.</td>\n</tr>\n<tr>\n<td>drawing</td>\n<td>Show the information of the drawn images or movies.</td>\n</tr>\n<tr>\n<td>analysis</td>\n<td>Show the analysis results.</td>\n</tr></tbody></table>\n<h3>Other commands</h3>\n<table>\n<thead>\n<tr>\n<th>command name</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>configure</td>\n<td>Configure your AnyMotion Credentials.</td>\n</tr></tbody></table>\n<h3>Examples</h3>\n<h4>Draw keypoints in image file</h4>\n<p>First, upload the image file.</p>\n<pre>$ amcli upload image.jpg\nSuccess: Uploaded image.jpg to the cloud storage. <span class=\"o\">(</span>image id: <span class=\"m\">111</span><span class=\"o\">)</span>\n</pre>\n<p>When the upload is complete, you get an <code>image id</code>.\nExtract keypoints using this <code>image id</code>.</p>\n<pre>$ amcli extract --image-id <span class=\"m\">111</span>\nKeypoint extraction started. <span class=\"o\">(</span>keypoint id: <span class=\"m\">222</span><span class=\"o\">)</span>\nSuccess: Keypoint extraction is complete.\n</pre>\n<p>Draw points/lines to image using <code>keypoint id</code>.</p>\n<pre>$ amcli draw <span class=\"m\">222</span>\nDrawing is started. <span class=\"o\">(</span>drawing id: <span class=\"m\">333</span><span class=\"o\">)</span>\nSuccess: Drawing is complete.\nDownloaded the file to image.jpg.\n</pre>\n<p>When the drawing is complete, the drawing file is downloaded (by default, to the current directory).\nTo save to a specific file or directory, use the <code>--out</code> option.</p>\n<h2>Shell Complete</h2>\n<p>The anymotion-cli supports Shell completion.</p>\n<p>For Bash, add this to <code>~/.bashrc</code>:</p>\n<pre><span class=\"nb\">eval</span> <span class=\"s2\">\"</span><span class=\"k\">$(</span><span class=\"nv\">_AMCLI_COMPLETE</span><span class=\"o\">=</span><span class=\"nb\">source</span> amcli<span class=\"k\">)</span><span class=\"s2\">\"</span>\n</pre>\n<p>For Zsh, add this to <code>~/.zshrc</code>:</p>\n<pre><span class=\"nb\">eval</span> <span class=\"s2\">\"</span><span class=\"k\">$(</span><span class=\"nv\">_AMCLI_COMPLETE</span><span class=\"o\">=</span>source_zsh amcli<span class=\"k\">)</span><span class=\"s2\">\"</span>\n</pre>\n<p>For Fish, add this to <code>~/.config/fish/completions/amcli.fish</code>:</p>\n<pre><span class=\"nb\">eval</span> <span class=\"o\">(</span>env <span class=\"nv\">_AMCLI_COMPLETE</span><span class=\"o\">=</span>source_fish amcli<span class=\"o\">)</span>\n</pre>\n<h2>Change Log</h2>\n<p>See <a href=\"CHANGELOG.md\" rel=\"nofollow\">CHANGELOG.md</a>.</p>\n<h2>Contributing</h2>\n<ul>\n<li>\n<p>Code must work on Python 3.6 and higher.</p>\n</li>\n<li>\n<p>Code should follow <a href=\"https://black.readthedocs.io/en/stable/\" rel=\"nofollow\">black</a>.</p>\n</li>\n<li>\n<p>Docstring should follow <a href=\"http://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings\" rel=\"nofollow\">Google Style</a>.</p>\n</li>\n<li>\n<p>Install all development dependencies using:</p>\n<pre>$ poetry install\n</pre>\n</li>\n<li>\n<p>Before submitting pull requests, run tests with:</p>\n<pre>$ poetry run tox\n</pre>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 7117627, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "4e193898dfe9c903de8f2ba8f817ccb6", "sha256": "b8e4ee6a76b08ceeeb4a62931c88859705990a648a0eecf978aed4ba0610f144"}, "downloads": -1, "filename": "anymotion_cli-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4e193898dfe9c903de8f2ba8f817ccb6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 23949, "upload_time": "2020-04-28T06:32:37", "upload_time_iso_8601": "2020-04-28T06:32:37.464145Z", "url": "https://files.pythonhosted.org/packages/c8/31/75d2c77f4ac4255edcfa1383a92a1530119a1617e36c9f2a169ede6d625a/anymotion_cli-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf595fe0f7797f4da56cd53bfe3332e3", "sha256": "87932211f4117a099c54288f797e18694a07cdbb8ee55e2a6d242f99853cb238"}, "downloads": -1, "filename": "anymotion-cli-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bf595fe0f7797f4da56cd53bfe3332e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 16563, "upload_time": "2020-04-28T06:32:35", "upload_time_iso_8601": "2020-04-28T06:32:35.524453Z", "url": "https://files.pythonhosted.org/packages/85/91/d43e757ab07750cdeb21d694fc8c50df2f954c67f3b166c0a01c63463929/anymotion-cli-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4e193898dfe9c903de8f2ba8f817ccb6", "sha256": "b8e4ee6a76b08ceeeb4a62931c88859705990a648a0eecf978aed4ba0610f144"}, "downloads": -1, "filename": "anymotion_cli-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4e193898dfe9c903de8f2ba8f817ccb6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 23949, "upload_time": "2020-04-28T06:32:37", "upload_time_iso_8601": "2020-04-28T06:32:37.464145Z", "url": "https://files.pythonhosted.org/packages/c8/31/75d2c77f4ac4255edcfa1383a92a1530119a1617e36c9f2a169ede6d625a/anymotion_cli-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf595fe0f7797f4da56cd53bfe3332e3", "sha256": "87932211f4117a099c54288f797e18694a07cdbb8ee55e2a6d242f99853cb238"}, "downloads": -1, "filename": "anymotion-cli-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bf595fe0f7797f4da56cd53bfe3332e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 16563, "upload_time": "2020-04-28T06:32:35", "upload_time_iso_8601": "2020-04-28T06:32:35.524453Z", "url": "https://files.pythonhosted.org/packages/85/91/d43e757ab07750cdeb21d694fc8c50df2f954c67f3b166c0a01c63463929/anymotion-cli-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:56 2020"}