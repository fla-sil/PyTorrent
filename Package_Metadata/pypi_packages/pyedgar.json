{"info": {"author": "Mac Gaulin", "author_email": "git@mgaulin.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Office/Business :: Financial :: Accounting"], "description": "# pyedgar\n\nPython package for downloading EDGAR documents and data\n\n\n## Usage\nThere are two primary interfaces to this library, namely filings and indices.\n\n\n\n### filing.py\n[filing.py](pyedgar/filing.py) is the main module for interacting with EDGAR forms.\n\nSimple example:\n\n```python\nfrom pyedgar import Filing\nf = Filing(20, '0000893220-96-000500')\n\nprint(f)\n#output: <EDGAR filing (20/0000893220-96-000500) Headers:False, Text:False, Documents:False>\n\nprint(f.type, f)\n# output: 10-K <EDGAR filing (20/0000893220-96-000500) Headers:True, Text:True, Documents:False>\n\nprint(f.documents[0]['full_text'][:800])\n# Output:\n#                         SECURITIES AND EXCHANGE COMMISSION\n#                               WASHINGTON, D.C. 20549\n#\n#                                     FORM 10-K\n#\n#  (Mark One)\n#  /X/  Annual report pursuant to section 13 or 15(d) of the Securities Exchange\n#       Act of 1934 [Fee Required] for the fiscal year ended December 30, 1995 or\n#\n#  / / Transition report pursuant to section 13 or 15(d) of the Securities\n#      Exchange Act of 1934 [No Fee Required] for the transition period from\n#      ________ to ________\n#\n#  COMMISSION FILE NUMBER 0-9576\n#\n#\n#                             K-TRON INTERNATIONAL, INC.\n#               (EXACT NAME OF REGISTRANT AS SPECIFIED IN ITS CHARTER)\n#\n#                 New Jersey                                22-1759452\n#     (State or other jurisdiction of         (I.R.S. Employer Identification No.)\n```\n\nThe forms are loaded lazily, so only when you request the data is the file read from disk or downloaded from the EDGAR website.\nFiling objects have the following properties:\n\n* ``path``: path to cached filing on disk\n* ``urls``: URLs the EDGAR website location for the full text file and the index file\n* ``full_text``: Full text of the entire .nc filing (not just the first document)\n* ``headers``: Dictionary of all the headers from the full filing (i.e. not the exhibits). E.g. CIK, ACCESSION, PERIOD, etc.\n* ``type``: The general type of the document, extracted from the TYPE header and cleaned up (so 10-K405 --> 10-K)\n* ``type_exact``: The exact text extracted from the TYPE field\n* ``documents``: Array of all the documents (between <DOCUMENT></DOCUMENT> tags). 0th is typically the main form, i.e. the 10-K filing, subsequent documents are exhibits.\n    * Each document in this array is itself a dictionary, with fields: TYPE, SEQUENCE, DESCRIPTION (typically the file name), FULL_TEXT. The latter is the text of the exhibit, i.e. just the 10-K filing in text or HTML.\n\n\n### index.py\n[index.py](pyedgar/index.py) is the main module for accessing extracted EDGAR indices.\nThe indices are created in [pyedgar.utilities.indices](pyedgar/utilities/indices.py#L34) by the IndexMaker class.\nOnce these indices are created (which you can do by setting ``force_download=True``), you can view them via the ``indices`` property:\n\n```python\nfrom pyedgar import EDGARIndex\nall_indices = EDGARIndex(force_download=False)\n\nprint(all_indices.indices)\n# Output:\n# {'form_all.tab': '/data/storage/edgar/indices/form_all.tab',\n#  'form_10-Q.tab': '/data/storage/edgar/indices/form_10-Q.tab',\n#  'form_13s.tab': '/data/storage/edgar/indices/form_13s.tab',\n#  'form_DEF14A.tab': '/data/storage/edgar/indices/form_DEF14A.tab',\n#  'form_8-K.tab': '/data/storage/edgar/indices/form_8-K.tab',\n#  'form_20-F.tab': '/data/storage/edgar/indices/form_20-F.tab',\n#  'form_10-K.tab': '/data/storage/edgar/indices/form_10-K.tab'}\n```\n\nThese indices are accessible as a pandas dataframe via [] or the ``get_index`` method, where the index is selected via the key above (with or without the form_ or .tab).\n\n```python\nform_10k = all_indices['10-K']\n\nprint(form_10k.head(1))\n# Output:\n#       cik                      name  form    filedate             accession\n#    0   20  K TRON INTERNATIONAL INC  10-K  1996-03-28  0000893220-96-000500\n```\n\nTo get a type of form that isn't automatically extracted, you can use form_all:\n\n```python\ndf_s1 = EDGARIndex().get_index('all').query(\"form.str.startswith('S-1')\")\n\nprint(df_s1.head(1))\n# Output:\n#        cik        name form    filedate             accession\n# 5600  1961  WORLDS INC  S-1  2014-02-04  0001264931-14-000033\n```\n\nAll indices are loaded and saved by pandas, so pandas is a requirement for using this functionality.\n\n\n\n## Config\n\nConfig files named ``pyedgar.conf``, ``.pyedgar``, ``pyedgar.ini`` are searched for at (in order):\n\n1. ``os.environ.get(\"PYEDGAR_CONF\", '.')`` <-- PYEDGAR_CONF environmental variable\n2. ``./``\n3. ``~/.config/pyedgar``\n4. ``~/AppData/Local/pyedgar``\n5. ``~/AppData/Roaming/pyedgar``\n6. ``~/Library/Preferences/pyedgar``\n7. ``~/.config/``\n8. ``~/``\n9. ``~/Documents/``\n10. ``os.path.abspath(os.path.dirname(__file__))`` <-- directory of the package. Default package ships with this existing.\n\n\nSee the [example config file](pyedgar.conf) for commented config settings.\n\nRunning multiple configs is quite easy, by setting ``os.environ`` manually:\n\n```python\n\nimport os\n# os.environ['PYEDGAR_CONF'] = os.path.expanduser('~/Dropbox/config/pyedgar/hades.local.pyedgar.conf')\nos.environ['PYEDGAR_CONF'] = os.path.expanduser('~/Dropbox/config/pyedgar/hades.desb.pyedgar.conf')\n\nfrom pyedgar import config\nprint(config.CONFIG_FILE)\n\n# Output:\n#     WARNING:pyedgar.config:Loaded config file from '[~]/Dropbox/config/pyedgar/hades.desb.pyedgar.conf'.\n#     ALERT!!!! FILING_PATH_FORMAT is '{accession[11:13]}/{accession}.nc'.\n#     [~]/Dropbox/config/pyedgar/hades.desb.pyedgar.conf\n```\n\n## Install\n\nPip installable:\n\n```bash\npip install pyedgar\n```\n\nOr pip installable from github:\n\n```bash\npip install git+https://github.com/gaulinmp/pyedgar#egg=pyedgar\n```\n\nor by checking out from github and installing in editable mode:\n\n```bash\ngit clone https://github.com/gaulinmp/pyedgar\ncd pyedgar\npip install -e ./\n```\n\n## Requirements\n\nw3m for converting HTML to plaintext (tested on Linux).\nA fallback method might one day be added.\n\nTested only on Python >3.4\n\nHTML parsing tested only on Linux.\nOther HTML->text conversion methodologies were tried (html2text, BeautifulSoup, lxml) but w3m was fastest even with the subprocess calling.\nConverting multiple HTML files could probably be optimized with one instance of w3m instead of spawning a subprocess for each call.\nBut that's for future Mac to work on.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gaulinmp/pyedgar", "keywords": "SEC EDGAR filings", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyedgar", "package_url": "https://pypi.org/project/pyedgar/", "platform": "", "project_url": "https://pypi.org/project/pyedgar/", "project_urls": {"Homepage": "https://github.com/gaulinmp/pyedgar"}, "release_url": "https://pypi.org/project/pyedgar/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "Python interface to EDGAR filings.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyedgar</h1>\n<p>Python package for downloading EDGAR documents and data</p>\n<h2>Usage</h2>\n<p>There are two primary interfaces to this library, namely filings and indices.</p>\n<h3>filing.py</h3>\n<p><a href=\"pyedgar/filing.py\" rel=\"nofollow\">filing.py</a> is the main module for interacting with EDGAR forms.</p>\n<p>Simple example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyedgar</span> <span class=\"kn\">import</span> <span class=\"n\">Filing</span>\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">Filing</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"s1\">'0000893220-96-000500'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"c1\">#output: &lt;EDGAR filing (20/0000893220-96-000500) Headers:False, Text:False, Documents:False&gt;</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"c1\"># output: 10-K &lt;EDGAR filing (20/0000893220-96-000500) Headers:True, Text:True, Documents:False&gt;</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">documents</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'full_text'</span><span class=\"p\">][:</span><span class=\"mi\">800</span><span class=\"p\">])</span>\n<span class=\"c1\"># Output:</span>\n<span class=\"c1\">#                         SECURITIES AND EXCHANGE COMMISSION</span>\n<span class=\"c1\">#                               WASHINGTON, D.C. 20549</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#                                     FORM 10-K</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#  (Mark One)</span>\n<span class=\"c1\">#  /X/  Annual report pursuant to section 13 or 15(d) of the Securities Exchange</span>\n<span class=\"c1\">#       Act of 1934 [Fee Required] for the fiscal year ended December 30, 1995 or</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#  / / Transition report pursuant to section 13 or 15(d) of the Securities</span>\n<span class=\"c1\">#      Exchange Act of 1934 [No Fee Required] for the transition period from</span>\n<span class=\"c1\">#      ________ to ________</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#  COMMISSION FILE NUMBER 0-9576</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#                             K-TRON INTERNATIONAL, INC.</span>\n<span class=\"c1\">#               (EXACT NAME OF REGISTRANT AS SPECIFIED IN ITS CHARTER)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#                 New Jersey                                22-1759452</span>\n<span class=\"c1\">#     (State or other jurisdiction of         (I.R.S. Employer Identification No.)</span>\n</pre>\n<p>The forms are loaded lazily, so only when you request the data is the file read from disk or downloaded from the EDGAR website.\nFiling objects have the following properties:</p>\n<ul>\n<li><code>path</code>: path to cached filing on disk</li>\n<li><code>urls</code>: URLs the EDGAR website location for the full text file and the index file</li>\n<li><code>full_text</code>: Full text of the entire .nc filing (not just the first document)</li>\n<li><code>headers</code>: Dictionary of all the headers from the full filing (i.e. not the exhibits). E.g. CIK, ACCESSION, PERIOD, etc.</li>\n<li><code>type</code>: The general type of the document, extracted from the TYPE header and cleaned up (so 10-K405 --&gt; 10-K)</li>\n<li><code>type_exact</code>: The exact text extracted from the TYPE field</li>\n<li><code>documents</code>: Array of all the documents (between &lt;DOCUMENT&gt;&lt;/DOCUMENT&gt; tags). 0th is typically the main form, i.e. the 10-K filing, subsequent documents are exhibits.\n<ul>\n<li>Each document in this array is itself a dictionary, with fields: TYPE, SEQUENCE, DESCRIPTION (typically the file name), FULL_TEXT. The latter is the text of the exhibit, i.e. just the 10-K filing in text or HTML.</li>\n</ul>\n</li>\n</ul>\n<h3>index.py</h3>\n<p><a href=\"pyedgar/index.py\" rel=\"nofollow\">index.py</a> is the main module for accessing extracted EDGAR indices.\nThe indices are created in <a href=\"pyedgar/utilities/indices.py#L34\" rel=\"nofollow\">pyedgar.utilities.indices</a> by the IndexMaker class.\nOnce these indices are created (which you can do by setting <code>force_download=True</code>), you can view them via the <code>indices</code> property:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyedgar</span> <span class=\"kn\">import</span> <span class=\"n\">EDGARIndex</span>\n<span class=\"n\">all_indices</span> <span class=\"o\">=</span> <span class=\"n\">EDGARIndex</span><span class=\"p\">(</span><span class=\"n\">force_download</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">all_indices</span><span class=\"o\">.</span><span class=\"n\">indices</span><span class=\"p\">)</span>\n<span class=\"c1\"># Output:</span>\n<span class=\"c1\"># {'form_all.tab': '/data/storage/edgar/indices/form_all.tab',</span>\n<span class=\"c1\">#  'form_10-Q.tab': '/data/storage/edgar/indices/form_10-Q.tab',</span>\n<span class=\"c1\">#  'form_13s.tab': '/data/storage/edgar/indices/form_13s.tab',</span>\n<span class=\"c1\">#  'form_DEF14A.tab': '/data/storage/edgar/indices/form_DEF14A.tab',</span>\n<span class=\"c1\">#  'form_8-K.tab': '/data/storage/edgar/indices/form_8-K.tab',</span>\n<span class=\"c1\">#  'form_20-F.tab': '/data/storage/edgar/indices/form_20-F.tab',</span>\n<span class=\"c1\">#  'form_10-K.tab': '/data/storage/edgar/indices/form_10-K.tab'}</span>\n</pre>\n<p>These indices are accessible as a pandas dataframe via [] or the <code>get_index</code> method, where the index is selected via the key above (with or without the form_ or .tab).</p>\n<pre><span class=\"n\">form_10k</span> <span class=\"o\">=</span> <span class=\"n\">all_indices</span><span class=\"p\">[</span><span class=\"s1\">'10-K'</span><span class=\"p\">]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">form_10k</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"c1\"># Output:</span>\n<span class=\"c1\">#       cik                      name  form    filedate             accession</span>\n<span class=\"c1\">#    0   20  K TRON INTERNATIONAL INC  10-K  1996-03-28  0000893220-96-000500</span>\n</pre>\n<p>To get a type of form that isn't automatically extracted, you can use form_all:</p>\n<pre><span class=\"n\">df_s1</span> <span class=\"o\">=</span> <span class=\"n\">EDGARIndex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_index</span><span class=\"p\">(</span><span class=\"s1\">'all'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">\"form.str.startswith('S-1')\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">df_s1</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"c1\"># Output:</span>\n<span class=\"c1\">#        cik        name form    filedate             accession</span>\n<span class=\"c1\"># 5600  1961  WORLDS INC  S-1  2014-02-04  0001264931-14-000033</span>\n</pre>\n<p>All indices are loaded and saved by pandas, so pandas is a requirement for using this functionality.</p>\n<h2>Config</h2>\n<p>Config files named <code>pyedgar.conf</code>, <code>.pyedgar</code>, <code>pyedgar.ini</code> are searched for at (in order):</p>\n<ol>\n<li><code>os.environ.get(\"PYEDGAR_CONF\", '.')</code> &lt;-- PYEDGAR_CONF environmental variable</li>\n<li><code>./</code></li>\n<li><code>~/.config/pyedgar</code></li>\n<li><code>~/AppData/Local/pyedgar</code></li>\n<li><code>~/AppData/Roaming/pyedgar</code></li>\n<li><code>~/Library/Preferences/pyedgar</code></li>\n<li><code>~/.config/</code></li>\n<li><code>~/</code></li>\n<li><code>~/Documents/</code></li>\n<li><code>os.path.abspath(os.path.dirname(__file__))</code> &lt;-- directory of the package. Default package ships with this existing.</li>\n</ol>\n<p>See the <a href=\"pyedgar.conf\" rel=\"nofollow\">example config file</a> for commented config settings.</p>\n<p>Running multiple configs is quite easy, by setting <code>os.environ</code> manually:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"c1\"># os.environ['PYEDGAR_CONF'] = os.path.expanduser('~/Dropbox/config/pyedgar/hades.local.pyedgar.conf')</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'PYEDGAR_CONF'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s1\">'~/Dropbox/config/pyedgar/hades.desb.pyedgar.conf'</span><span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyedgar</span> <span class=\"kn\">import</span> <span class=\"n\">config</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">CONFIG_FILE</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Output:</span>\n<span class=\"c1\">#     WARNING:pyedgar.config:Loaded config file from '[~]/Dropbox/config/pyedgar/hades.desb.pyedgar.conf'.</span>\n<span class=\"c1\">#     ALERT!!!! FILING_PATH_FORMAT is '{accession[11:13]}/{accession}.nc'.</span>\n<span class=\"c1\">#     [~]/Dropbox/config/pyedgar/hades.desb.pyedgar.conf</span>\n</pre>\n<h2>Install</h2>\n<p>Pip installable:</p>\n<pre>pip install pyedgar\n</pre>\n<p>Or pip installable from github:</p>\n<pre>pip install git+https://github.com/gaulinmp/pyedgar#egg<span class=\"o\">=</span>pyedgar\n</pre>\n<p>or by checking out from github and installing in editable mode:</p>\n<pre>git clone https://github.com/gaulinmp/pyedgar\n<span class=\"nb\">cd</span> pyedgar\npip install -e ./\n</pre>\n<h2>Requirements</h2>\n<p>w3m for converting HTML to plaintext (tested on Linux).\nA fallback method might one day be added.</p>\n<p>Tested only on Python &gt;3.4</p>\n<p>HTML parsing tested only on Linux.\nOther HTML-&gt;text conversion methodologies were tried (html2text, BeautifulSoup, lxml) but w3m was fastest even with the subprocess calling.\nConverting multiple HTML files could probably be optimized with one instance of w3m instead of spawning a subprocess for each call.\nBut that's for future Mac to work on.</p>\n\n          </div>"}, "last_serial": 6698358, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "78fc6b17141cfa6d1558419e080d56fe", "sha256": "a0dcacdf80a6c43081170cbd2157323a1a6259c316ab8738c47cd2df0446a74e"}, "downloads": -1, "filename": "pyedgar-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "78fc6b17141cfa6d1558419e080d56fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42333, "upload_time": "2019-09-26T21:45:00", "upload_time_iso_8601": "2019-09-26T21:45:00.238481Z", "url": "https://files.pythonhosted.org/packages/ed/94/200d31b4e31dbe393b062dc7bc573bcf2ed27b2df51e463f421bee672f2d/pyedgar-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08600e1b566cdb66c4038199b4362de7", "sha256": "1a029c452d0332cdfa121a37d7b0116c3dc37b955113cffa2e791a794bfdf2ab"}, "downloads": -1, "filename": "pyedgar-0.1.0.tar.gz", "has_sig": false, "md5_digest": "08600e1b566cdb66c4038199b4362de7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38301, "upload_time": "2019-09-26T21:45:03", "upload_time_iso_8601": "2019-09-26T21:45:03.313398Z", "url": "https://files.pythonhosted.org/packages/3c/e6/36f316cce4e46f9400bceed810a622cb495844d1bc255e51a3e244bbfff0/pyedgar-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "acf508213053f8ff463be17f7c07c313", "sha256": "3a2bcf9a1f99204966cebee391c8ea08a4c6668c92618dcc6cbbcf0470e93196"}, "downloads": -1, "filename": "pyedgar-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "acf508213053f8ff463be17f7c07c313", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42343, "upload_time": "2019-09-26T23:22:34", "upload_time_iso_8601": "2019-09-26T23:22:34.006714Z", "url": "https://files.pythonhosted.org/packages/33/42/741b68d50b1c999d614d0e312561967caa3bafed358ad104338202a96ae5/pyedgar-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f504b3103c738c0b24a7bf699de6257c", "sha256": "47302a33eb27bba4048e636d133de429ee066a0ccb22883767a48590d86b15a4"}, "downloads": -1, "filename": "pyedgar-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f504b3103c738c0b24a7bf699de6257c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38336, "upload_time": "2019-09-26T23:22:35", "upload_time_iso_8601": "2019-09-26T23:22:35.562544Z", "url": "https://files.pythonhosted.org/packages/84/62/00ef22e9916bf0d24fa6bfde0cbb0c83a3e5780e90299c6c920a4aff2ec9/pyedgar-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7b93bc26ebbd468d770aa0e604e5e381", "sha256": "e1b743b134e54b48848b35c0f49bafbd112c97230e0c57707d4a9de0c6c4e42c"}, "downloads": -1, "filename": "pyedgar-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7b93bc26ebbd468d770aa0e604e5e381", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42374, "upload_time": "2019-10-24T21:35:45", "upload_time_iso_8601": "2019-10-24T21:35:45.090392Z", "url": "https://files.pythonhosted.org/packages/2b/9b/2f12821a037b63e7139dd24f033cf37818556ce064b941bb157835947a4d/pyedgar-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65f9e5fe247341da6df038c3f406ca16", "sha256": "dec2d7cb4c1090066ac8e38cacb7b0975555be82b2b9b001ca0a9d8f90ca0203"}, "downloads": -1, "filename": "pyedgar-0.1.2.tar.gz", "has_sig": false, "md5_digest": "65f9e5fe247341da6df038c3f406ca16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38464, "upload_time": "2019-10-24T21:35:46", "upload_time_iso_8601": "2019-10-24T21:35:46.809116Z", "url": "https://files.pythonhosted.org/packages/b9/ef/13beef8fa3f1c1baf2250bad5c5856901a625aba7db0a509f81e8b38dab7/pyedgar-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "fc534d6661957595f6ec243cf1443975", "sha256": "fbc406f127ed06697fc166d7faf3653732f435e544f42725975f2faf4fbb8f0d"}, "downloads": -1, "filename": "pyedgar-0.1.3.tar.gz", "has_sig": false, "md5_digest": "fc534d6661957595f6ec243cf1443975", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38527, "upload_time": "2020-02-25T19:16:59", "upload_time_iso_8601": "2020-02-25T19:16:59.867384Z", "url": "https://files.pythonhosted.org/packages/8e/a6/f26e9b26cf6e986d006be6d40554dacf78e8ac96dc0ac6c19dc0450576ae/pyedgar-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc534d6661957595f6ec243cf1443975", "sha256": "fbc406f127ed06697fc166d7faf3653732f435e544f42725975f2faf4fbb8f0d"}, "downloads": -1, "filename": "pyedgar-0.1.3.tar.gz", "has_sig": false, "md5_digest": "fc534d6661957595f6ec243cf1443975", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38527, "upload_time": "2020-02-25T19:16:59", "upload_time_iso_8601": "2020-02-25T19:16:59.867384Z", "url": "https://files.pythonhosted.org/packages/8e/a6/f26e9b26cf6e986d006be6d40554dacf78e8ac96dc0ac6c19dc0450576ae/pyedgar-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:32 2020"}