{"info": {"author": "pltrdy", "author_email": "pltrdy@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "Programming Language :: Python :: 3", "Topic :: Text Processing :: Linguistic"], "description": "# Rouge\n*A full Python librarie for the ROUGE metric [(paper)](http://www.aclweb.org/anthology/W04-1013).*\n\n### Disclaimer\nThis implementation is independant from the \"official\" ROUGE script (aka. `ROUGE-155`).   \nResults may be *slighlty* different, see [discussions in #2](https://github.com/pltrdy/rouge/issues/2).\n\n## Quickstart\n#### Clone & Install\n```shell\ngit clone https://github.com/pltrdy/rouge\ncd rouge\npython setup.py install\n# or\npip install -U .\n```\nor from pip:\n```\npip install rouge\n```\n#### Use it from the shell (JSON Output)\n```\n$rouge -h\nusage: rouge [-h] [-f] [-a] hypothesis reference\n\nRouge Metric Calculator\n\npositional arguments:\n  hypothesis  Text of file path\n  reference   Text or file path\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -f, --file  File mode\n  -a, --avg   Average mode\n\n```\n\ne.g. \n\n\n```shell\n# Single Sentence\nrouge \"transcript is a written version of each day 's cnn student\" \\\n      \"this page includes the show transcript use the transcript to help students with\"\n\n# Scoring using two files (line by line)\nrouge -f ./tests/hyp.txt ./ref.txt\n\n# Avg scoring - 2 files\nrouge -f ./tests/hyp.txt ./ref.txt --avg\n```\n\n#### As a library\n\n###### Score 1 sentence\n\n```python\nfrom rouge import Rouge \n\nhypothesis = \"the #### transcript is a written version of each day 's cnn student news program use this transcript to he    lp students with reading comprehension and vocabulary use the weekly newsquiz to test your knowledge of storie s you     saw on cnn student news\"\n\nreference = \"this page includes the show transcript use the transcript to help students with reading comprehension and     vocabulary at the bottom of the page , comment for a chance to be mentioned on cnn student news . you must be a teac    her or a student age # # or older to request a mention on the cnn student news roll call . the weekly newsquiz tests     students ' knowledge of even ts in the news\"\n\nrouge = Rouge()\nscores = rouge.get_scores(hypothesis, reference)\n```\n\n*Output:*\n\n```json\n[\n  {\n    \"rouge-1\": {\n      \"f\": 0.4786324739396596,\n      \"p\": 0.6363636363636364,\n      \"r\": 0.3835616438356164\n    },\n    \"rouge-2\": {\n      \"f\": 0.2608695605353498,\n      \"p\": 0.3488372093023256,\n      \"r\": 0.20833333333333334\n    },\n    \"rouge-l\": {\n      \"f\": 0.5128205081276938,\n      \"p\": 0.6818181818181818,\n      \"r\": 0.410958904109589\n    }\n  }\n]\n```\n\n###### Score multiple sentences\n```python\nimport json\nfrom rouge import Rouge\n\n# Load some sentences\nwith open('./tests/data.json') as f:\n  data = json.load(f)\n\nhyps, refs = map(list, zip(*[[d['hyp'], d['ref']] for d in data]))\nrouge = Rouge()\nscores = rouge.get_scores(hyps, refs)\n# or\nscores = rouge.get_scores(hyps, refs, avg=True)\n```\n\n*Output (`avg=False`)*: a list of `n` dicts:\n\n```\n{\"rouge-1\": {\"f\": _, \"p\": _, \"r\": _}, \"rouge-2\" : { .. }, \"rouge-3\": { ... }}\n```\n\n\n*Output (`avg=True`)*: a single dict with average values:\n\n```\n{\"rouge-1\": {\"f\": _, \"p\": _, \"r\": _}, \"rouge-2\" : { .. \u00a0 \u00a0 }, \"rouge-3\": { ... }}\n``` \n\n###### Score two files (line by line)\nGiven two files `hyp_path`, `ref_path`, with the same number (`n`) of lines, calculate score for each of this lines, or, the average over the whole file. \n\n```python\nfrom rouge import FilesRouge\n\nfiles_rouge = FilesRouge()\nscores = files_rouge.get_scores(hyp_path, ref_path)\n# or\nscores = files_rouge.get_scores(hyp_path, ref_path, avg=True)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/pltrdy/rouge/archive/1.0.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/pltrdy/rouge", "keywords": "NL,CL,natural language processing,computational linguistics,summarization", "license": "LICENCE.txt", "maintainer": "", "maintainer_email": "", "name": "rouge", "package_url": "https://pypi.org/project/rouge/", "platform": "", "project_url": "https://pypi.org/project/rouge/", "project_urls": {"Download": "https://github.com/pltrdy/rouge/archive/1.0.0.tar.gz", "Homepage": "http://github.com/pltrdy/rouge"}, "release_url": "https://pypi.org/project/rouge/1.0.0/", "requires_dist": ["six"], "requires_python": "", "summary": "Full Python ROUGE Score Implementation (not a wrapper)", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Rouge</h1>\n<p><em>A full Python librarie for the ROUGE metric <a href=\"http://www.aclweb.org/anthology/W04-1013\" rel=\"nofollow\">(paper)</a>.</em></p>\n<h3>Disclaimer</h3>\n<p>This implementation is independant from the \"official\" ROUGE script (aka. <code>ROUGE-155</code>).<br>\nResults may be <em>slighlty</em> different, see <a href=\"https://github.com/pltrdy/rouge/issues/2\" rel=\"nofollow\">discussions in #2</a>.</p>\n<h2>Quickstart</h2>\n<h4>Clone &amp; Install</h4>\n<pre>git clone https://github.com/pltrdy/rouge\n<span class=\"nb\">cd</span> rouge\npython setup.py install\n<span class=\"c1\"># or</span>\npip install -U .\n</pre>\n<p>or from pip:</p>\n<pre><code>pip install rouge\n</code></pre>\n<h4>Use it from the shell (JSON Output)</h4>\n<pre><code>$rouge -h\nusage: rouge [-h] [-f] [-a] hypothesis reference\n\nRouge Metric Calculator\n\npositional arguments:\n  hypothesis  Text of file path\n  reference   Text or file path\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -f, --file  File mode\n  -a, --avg   Average mode\n\n</code></pre>\n<p>e.g.</p>\n<pre><span class=\"c1\"># Single Sentence</span>\nrouge <span class=\"s2\">\"transcript is a written version of each day 's cnn student\"</span> <span class=\"se\">\\</span>\n      <span class=\"s2\">\"this page includes the show transcript use the transcript to help students with\"</span>\n\n<span class=\"c1\"># Scoring using two files (line by line)</span>\nrouge -f ./tests/hyp.txt ./ref.txt\n\n<span class=\"c1\"># Avg scoring - 2 files</span>\nrouge -f ./tests/hyp.txt ./ref.txt --avg\n</pre>\n<h4>As a library</h4>\n<h6>Score 1 sentence</h6>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rouge</span> <span class=\"kn\">import</span> <span class=\"n\">Rouge</span> \n\n<span class=\"n\">hypothesis</span> <span class=\"o\">=</span> <span class=\"s2\">\"the #### transcript is a written version of each day 's cnn student news program use this transcript to he    lp students with reading comprehension and vocabulary use the weekly newsquiz to test your knowledge of storie s you     saw on cnn student news\"</span>\n\n<span class=\"n\">reference</span> <span class=\"o\">=</span> <span class=\"s2\">\"this page includes the show transcript use the transcript to help students with reading comprehension and     vocabulary at the bottom of the page , comment for a chance to be mentioned on cnn student news . you must be a teac    her or a student age # # or older to request a mention on the cnn student news roll call . the weekly newsquiz tests     students ' knowledge of even ts in the news\"</span>\n\n<span class=\"n\">rouge</span> <span class=\"o\">=</span> <span class=\"n\">Rouge</span><span class=\"p\">()</span>\n<span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">rouge</span><span class=\"o\">.</span><span class=\"n\">get_scores</span><span class=\"p\">(</span><span class=\"n\">hypothesis</span><span class=\"p\">,</span> <span class=\"n\">reference</span><span class=\"p\">)</span>\n</pre>\n<p><em>Output:</em></p>\n<pre><span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"rouge-1\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"f\"</span><span class=\"p\">:</span> <span class=\"mf\">0.4786324739396596</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"p\"</span><span class=\"p\">:</span> <span class=\"mf\">0.6363636363636364</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"r\"</span><span class=\"p\">:</span> <span class=\"mf\">0.3835616438356164</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"rouge-2\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"f\"</span><span class=\"p\">:</span> <span class=\"mf\">0.2608695605353498</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"p\"</span><span class=\"p\">:</span> <span class=\"mf\">0.3488372093023256</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"r\"</span><span class=\"p\">:</span> <span class=\"mf\">0.20833333333333334</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"rouge-l\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"f\"</span><span class=\"p\">:</span> <span class=\"mf\">0.5128205081276938</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"p\"</span><span class=\"p\">:</span> <span class=\"mf\">0.6818181818181818</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"r\"</span><span class=\"p\">:</span> <span class=\"mf\">0.410958904109589</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<h6>Score multiple sentences</h6>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rouge</span> <span class=\"kn\">import</span> <span class=\"n\">Rouge</span>\n\n<span class=\"c1\"># Load some sentences</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'./tests/data.json'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n  <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n<span class=\"n\">hyps</span><span class=\"p\">,</span> <span class=\"n\">refs</span> <span class=\"o\">=</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">[[</span><span class=\"n\">d</span><span class=\"p\">[</span><span class=\"s1\">'hyp'</span><span class=\"p\">],</span> <span class=\"n\">d</span><span class=\"p\">[</span><span class=\"s1\">'ref'</span><span class=\"p\">]]</span> <span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">]))</span>\n<span class=\"n\">rouge</span> <span class=\"o\">=</span> <span class=\"n\">Rouge</span><span class=\"p\">()</span>\n<span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">rouge</span><span class=\"o\">.</span><span class=\"n\">get_scores</span><span class=\"p\">(</span><span class=\"n\">hyps</span><span class=\"p\">,</span> <span class=\"n\">refs</span><span class=\"p\">)</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">rouge</span><span class=\"o\">.</span><span class=\"n\">get_scores</span><span class=\"p\">(</span><span class=\"n\">hyps</span><span class=\"p\">,</span> <span class=\"n\">refs</span><span class=\"p\">,</span> <span class=\"n\">avg</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p><em>Output (<code>avg=False</code>)</em>: a list of <code>n</code> dicts:</p>\n<pre><code>{\"rouge-1\": {\"f\": _, \"p\": _, \"r\": _}, \"rouge-2\" : { .. }, \"rouge-3\": { ... }}\n</code></pre>\n<p><em>Output (<code>avg=True</code>)</em>: a single dict with average values:</p>\n<pre><code>{\"rouge-1\": {\"f\": _, \"p\": _, \"r\": _}, \"rouge-2\" : { .. \u00a0 \u00a0 }, \"rouge-3\": { ... }}\n</code></pre>\n<h6>Score two files (line by line)</h6>\n<p>Given two files <code>hyp_path</code>, <code>ref_path</code>, with the same number (<code>n</code>) of lines, calculate score for each of this lines, or, the average over the whole file.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rouge</span> <span class=\"kn\">import</span> <span class=\"n\">FilesRouge</span>\n\n<span class=\"n\">files_rouge</span> <span class=\"o\">=</span> <span class=\"n\">FilesRouge</span><span class=\"p\">()</span>\n<span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">files_rouge</span><span class=\"o\">.</span><span class=\"n\">get_scores</span><span class=\"p\">(</span><span class=\"n\">hyp_path</span><span class=\"p\">,</span> <span class=\"n\">ref_path</span><span class=\"p\">)</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">files_rouge</span><span class=\"o\">.</span><span class=\"n\">get_scores</span><span class=\"p\">(</span><span class=\"n\">hyp_path</span><span class=\"p\">,</span> <span class=\"n\">ref_path</span><span class=\"p\">,</span> <span class=\"n\">avg</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6791146, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "138ab59a8aa0bf8b6a92635a856e76c7", "sha256": "dfadb9f3be4ce3da5de7558ea9db93162aa1a841bcba8c388da0e9e1b0c7fa29"}, "downloads": -1, "filename": "rouge-0.2.0.tar.gz", "has_sig": false, "md5_digest": "138ab59a8aa0bf8b6a92635a856e76c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13938, "upload_time": "2017-03-16T17:43:23", "upload_time_iso_8601": "2017-03-16T17:43:23.420525Z", "url": "https://files.pythonhosted.org/packages/5c/23/ac679777110eee15a509cc4fa6c6ef514e5d7e75d70e619a53467cbb48cd/rouge-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "82bac0ec3d678c30ba4cc603372e5cb2", "sha256": "02d8be3fde927e6eebf3b92aed8f2c2125ea46c4ca756842126d1951c41c5b97"}, "downloads": -1, "filename": "rouge-0.2.1.tar.gz", "has_sig": false, "md5_digest": "82bac0ec3d678c30ba4cc603372e5cb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11743, "upload_time": "2017-03-22T16:48:52", "upload_time_iso_8601": "2017-03-22T16:48:52.151741Z", "url": "https://files.pythonhosted.org/packages/13/d9/8ffa7928370f34a32c9374d145b10b0408a3737ff0742aca61faf1566dd9/rouge-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8e3ad7ed520f057f6ef0f9f9172f0d98", "sha256": "a06aa6d1afc2681c2115411db146c3a14d38d9eb4d9870d689ad5a94cdfa993b"}, "downloads": -1, "filename": "rouge-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8e3ad7ed520f057f6ef0f9f9172f0d98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11148, "upload_time": "2018-05-16T10:20:25", "upload_time_iso_8601": "2018-05-16T10:20:25.592909Z", "url": "https://files.pythonhosted.org/packages/7e/20/d351e85280517183b5b8460a0f47622f3b44c3eabdecd012313680576f35/rouge-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "74eb41847184a836410d47ce88e5aa94", "sha256": "96948febb4506c5a203c47d55e5f83b82baeb230ff84ae8fcf15331ee0094fc8"}, "downloads": -1, "filename": "rouge-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "74eb41847184a836410d47ce88e5aa94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7419, "upload_time": "2018-06-28T13:23:56", "upload_time_iso_8601": "2018-06-28T13:23:56.866186Z", "url": "https://files.pythonhosted.org/packages/8f/89/af359c22e1d858e0299d4cc9219f36b504817c9797acad23081247867845/rouge-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d0220fcfbecd7a2f0c3fa0639edef1a", "sha256": "f131c13661f96a048df4d372d83598a65efbbfaeafed491ee96313cc6aa7364b"}, "downloads": -1, "filename": "rouge-0.3.1.tar.gz", "has_sig": false, "md5_digest": "0d0220fcfbecd7a2f0c3fa0639edef1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10768, "upload_time": "2018-06-28T13:23:57", "upload_time_iso_8601": "2018-06-28T13:23:57.740862Z", "url": "https://files.pythonhosted.org/packages/2f/9b/0a857f3811f9095ec909cdc513db42ac5dbb983d2a86c0f65d47914cab1b/rouge-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "dfe4bda7ab4a481fcc49d23f0ce56928", "sha256": "f374ba2c297f4d3ef89189c2edeaf4ecde14e8005e817e680d99d16e92ced00b"}, "downloads": -1, "filename": "rouge-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dfe4bda7ab4a481fcc49d23f0ce56928", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12903, "upload_time": "2019-04-17T08:40:11", "upload_time_iso_8601": "2019-04-17T08:40:11.237052Z", "url": "https://files.pythonhosted.org/packages/63/ac/b93411318529980ab7f41e59ed64ec3ffed08ead32389e29eb78585dd55d/rouge-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d82f8a5a4992b18c5207aa7b10357be5", "sha256": "8738a39c38c4555860e43102108c1e2a1efe201a3f13abdb5d8fe4a7c280d213"}, "downloads": -1, "filename": "rouge-0.3.2.tar.gz", "has_sig": false, "md5_digest": "d82f8a5a4992b18c5207aa7b10357be5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11781, "upload_time": "2019-04-17T08:40:13", "upload_time_iso_8601": "2019-04-17T08:40:13.438778Z", "url": "https://files.pythonhosted.org/packages/7d/d2/439a06c6a2f1f8b2947720125ff3b9bafec0c3e2366daae19def377d33d6/rouge-0.3.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "34b67a2f6f4d0f06273b957492aea33d", "sha256": "bd0503c5bc944815273ba566c51f9763e6840dc63cf4aaadf25626e4091cd1d2"}, "downloads": -1, "filename": "rouge-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "34b67a2f6f4d0f06273b957492aea33d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14278, "upload_time": "2020-03-11T10:05:45", "upload_time_iso_8601": "2020-03-11T10:05:45.390419Z", "url": "https://files.pythonhosted.org/packages/43/cc/e18e33be20971ff73a056ebdb023476b5a545e744e3fc22acd8c758f1e0d/rouge-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78b89aa6892c6ac22cf55e10750a4c1a", "sha256": "70ba71ab4fe6be6c42bc97c1b76f21a1305a7b092bc708a275867631a6d6c61c"}, "downloads": -1, "filename": "rouge-1.0.0.tar.gz", "has_sig": false, "md5_digest": "78b89aa6892c6ac22cf55e10750a4c1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13216, "upload_time": "2020-03-11T10:05:46", "upload_time_iso_8601": "2020-03-11T10:05:46.887773Z", "url": "https://files.pythonhosted.org/packages/b9/ac/f874d555a524ec8886506ee01bbb728c31d5b6004142a25d075d56799f0e/rouge-1.0.0.tar.gz", "yanked": false}], "1.0.0rc0": [{"comment_text": "", "digests": {"md5": "eafc5827202bc7c99bfa5218fa0a3394", "sha256": "80d4d7ef4643b870b7c3409fa95cf5f3c50827634ebcba19a9961f128cd1b27a"}, "downloads": -1, "filename": "rouge-1.0.0rc0-py3-none-any.whl", "has_sig": false, "md5_digest": "eafc5827202bc7c99bfa5218fa0a3394", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14285, "upload_time": "2020-01-09T10:59:04", "upload_time_iso_8601": "2020-01-09T10:59:04.677283Z", "url": "https://files.pythonhosted.org/packages/fe/3d/de9402d157b639a21f02ef06ee1d8930779f9bb4681d5e2c5cac4d48e066/rouge-1.0.0rc0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "731488b0eb47eb1aa797932ccd057eab", "sha256": "81d48eacec819c258649078f0f42d64e5834b77e3f93f694bb455d97618b22a8"}, "downloads": -1, "filename": "rouge-1.0.0rc0.tar.gz", "has_sig": false, "md5_digest": "731488b0eb47eb1aa797932ccd057eab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13106, "upload_time": "2020-01-09T10:59:06", "upload_time_iso_8601": "2020-01-09T10:59:06.154601Z", "url": "https://files.pythonhosted.org/packages/d7/43/68854c1e89e7002dd9ba17dbcbe95d5caef88f472f5639026f9dbeff4ae0/rouge-1.0.0rc0.tar.gz", "yanked": false}], "1.0.0rc1": [{"comment_text": "", "digests": {"md5": "eef1e965d96efaed9edf4b5d7412ce65", "sha256": "93cf122b22c688774d3a30993b6351cedd63b27864cf898c3e4ef566c0f1e892"}, "downloads": -1, "filename": "rouge-1.0.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "eef1e965d96efaed9edf4b5d7412ce65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14299, "upload_time": "2020-02-17T17:24:32", "upload_time_iso_8601": "2020-02-17T17:24:32.550378Z", "url": "https://files.pythonhosted.org/packages/e4/ef/664904ace30df417446d4952037308ea890e8ebf377c75977de2fe410251/rouge-1.0.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6fc9ec324094aa041fefaeea8761e17", "sha256": "abf08994724fa7b783141643a3d773531ed8c242e0cf385426a419260ee78f49"}, "downloads": -1, "filename": "rouge-1.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "c6fc9ec324094aa041fefaeea8761e17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13135, "upload_time": "2020-02-17T17:24:34", "upload_time_iso_8601": "2020-02-17T17:24:34.032887Z", "url": "https://files.pythonhosted.org/packages/27/b6/0623c5bdee1324304b710e2e136b2ccfa136edda9ccd7e392d17e9612391/rouge-1.0.0rc1.tar.gz", "yanked": false}], "1.0.0rc2": [{"comment_text": "", "digests": {"md5": "0027b91edb8533bf7b099b1693ee402d", "sha256": "60db7cae4ec92c23d1ed49402377fb4856e7f3f587e21a5464efffb68bb1d588"}, "downloads": -1, "filename": "rouge-1.0.0rc2-py3-none-any.whl", "has_sig": false, "md5_digest": "0027b91edb8533bf7b099b1693ee402d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14322, "upload_time": "2020-03-06T15:37:39", "upload_time_iso_8601": "2020-03-06T15:37:39.481354Z", "url": "https://files.pythonhosted.org/packages/36/ed/196f6db1ce5074fb8404fe651bcdbbb4f366d09874285d93eb2312f019af/rouge-1.0.0rc2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70537628c478f4b4a8be300567860839", "sha256": "73e045834356358f9d2e7f1e581cecbbf0e80d564bd7de09c285333529093111"}, "downloads": -1, "filename": "rouge-1.0.0rc2.tar.gz", "has_sig": false, "md5_digest": "70537628c478f4b4a8be300567860839", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13219, "upload_time": "2020-03-06T15:37:40", "upload_time_iso_8601": "2020-03-06T15:37:40.716175Z", "url": "https://files.pythonhosted.org/packages/12/49/27c503e157aaa5fa46f396018404536168dc1937271a536a60caf1fb2b5f/rouge-1.0.0rc2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "34b67a2f6f4d0f06273b957492aea33d", "sha256": "bd0503c5bc944815273ba566c51f9763e6840dc63cf4aaadf25626e4091cd1d2"}, "downloads": -1, "filename": "rouge-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "34b67a2f6f4d0f06273b957492aea33d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14278, "upload_time": "2020-03-11T10:05:45", "upload_time_iso_8601": "2020-03-11T10:05:45.390419Z", "url": "https://files.pythonhosted.org/packages/43/cc/e18e33be20971ff73a056ebdb023476b5a545e744e3fc22acd8c758f1e0d/rouge-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78b89aa6892c6ac22cf55e10750a4c1a", "sha256": "70ba71ab4fe6be6c42bc97c1b76f21a1305a7b092bc708a275867631a6d6c61c"}, "downloads": -1, "filename": "rouge-1.0.0.tar.gz", "has_sig": false, "md5_digest": "78b89aa6892c6ac22cf55e10750a4c1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13216, "upload_time": "2020-03-11T10:05:46", "upload_time_iso_8601": "2020-03-11T10:05:46.887773Z", "url": "https://files.pythonhosted.org/packages/b9/ac/f874d555a524ec8886506ee01bbb728c31d5b6004142a25d075d56799f0e/rouge-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:10 2020"}