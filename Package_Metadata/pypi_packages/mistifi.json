{"info": {"author": "Primoz Marinsek", "author_email": "primoz.marinsek@ocado.com", "bugtrack_url": null, "classifiers": [], "description": "# Mistifi\n\nMistifi is a highly scalable Python module enabling full interfacing with the Mist RestAPI.\n\n## Motivation\n\nTo provide a scalable, easy to use and easy to contribute to module that will be able to interface to the fullest with the Mist Systems cloud for wired and wireless.\n\n# Installation\n\nThe module can be pip installed\n\n```\npip install mistifi\n```\nor using `pip3` if using python3.\n\nThe module is imported with\n```python\nimport mistifi\nfrom mistifi import MistiFi\n```\n\n# Usage\n\nThe usage workflow intended is:\n1. Create an instance with passing in the cloud and authentication options.\n2. Initiate communication with the `comms()` method.\n3. Interface with the API with the use of either a specific endpoint method (like `wlans()` for example) or the `resource()` method.\n\n## Create an instance \n### Selecting a cloud\n\nWhen creating an instance pass in the `cloud` option to specify a direct instance of a cloud.\n\nThere are currently two cloud options to select from. Either `EU` or `US`, with `US` being the default if not provided with the `cloud` attribute.\nThey default to\n- US = api.mist.com\n- EU = api.eu.mist.com\n\nIf not passed in, the default `US` will be used.\n\n**Ex. 1: Using the default `US` cloud**\n```python\nmist = MistiFi()\n```\nIn this case not only will the `US` cloud be used but also a username/password option for user login (Look at next section for explanation on this).\n\n**Ex. 2: Specifying the `EU` cloud**\n```python\nmist = MistiFi(cloud=\"EU\")\n```\nNote that the cloud parameter is case-insensitive. In the below example the `US` cloud will be used.\n```python\nmist = MistiFi(cloud=\"us\")\n```\n### Using a token or username/password\n\n**Ex. 1: Using a token**\n\nIn below example a token `thetoken` is used with the US cloud. You can create a user token by following [these instructions](https://www.mist.com/documentation/using-postman/)\n```python\nmist = MistiFi(token=\"thetoken\")\n```\nAn alternative with specifying the EU cloud would be.\n```python\nmist = MistiFi(cloud=\"EU\", token=\"thetoken\")\n```\nThe token always has preference before username/password or other option, so in the below example a token would be used.\n```python\nmist = MistiFi(token=\"thetoken\", username=\"theuser@mistifi.com\", password=\"thepass\")\n```\n\n**Ex. 2: Using username and password.**\n\nCurrently 2FA and OAUTH aren't supported.\n\nThe minimum required for this option is to create an instance without any attributes like below.\n```python\nmist = MistiFi()\n```\nIn this case you are asked for username and password.\n\nYou can provide one or both when creating a new instance and be asked about the other once the `comms()` method is run.\n\n```python\nmist = MistiFi(cloud='us', username=\"theuser@mistifi.com\")\n```\n\n## Communicating with the cloud\nOnce the cloud and authentication options are selected you must run the `comms()` method which correctly sets up the headers depending on the authentication method used. For example `X-CSRFTOKEN` is setup for the username/password option.\n```python\nmist = comms()\n```\n\n## Interfacing with the cloud URIs\nIf a specific resource method for a specific URI is not defined the main method that can be used is the `resource()` one. The resource methods defined start with `Resource method` in the docstring.\n\nFor example, GET-ing `/self` can be achieved by either the `resource()` method or the `whoami()` one.\n```python\n>>> whoami = mist.whoami()\n>>> rwhoami = mist.resource(\"GET\", uri=\"/self\")\n>>> print(whoami == rwhoami)\nTrue\n```\n\n## Understanding the resource() method\nThe main method all others use on is `resource()`. You can pass keyword arguments into it. Pretty much anything will work, but there are some rules.\n\nFirst thing is that those kwargs are used to build the URL to the Mist cloud endpoint, therefore passing in proper parameters is necessary. Some parameters are special and handled differently. \n\nExample of special kwargs is `params`. If passing in that kwarg, it will be handled differently so that it is passed into the `requests.Session()` as `params`.\n\nIf passing in `org_id=':org_id'`, `site_id='site_id'`, `uri='some_uri'` will create URL properly with the `org_id` first `site_id` second and then the `uri`. \n\nAll other kwargs will be added at the end to the URL, so make sure that URL exists. Error 400 is thrown otherwise.\n\nExample:\n```python\nmist.resource(\n\t\"GET\", \n\tsite_id=\":site_id123\", \n\twlan_id=\":wlan_id123\", \n\torg_id=\":org_id123\", \n\tblah=\"/blah\", \n\tparams={\"paramA\": \"valueA\", 'paramB': 'valueB'})\n```\nbuilds the URL to `https://api.mist.com/api/v1/orgs/:org_id123/sites/:site_id123/wlans/:wlan_id123/blah` and `params` are added at the end when passed in the requests as `params`.\n\n# Additional\n## Debugging \n\nThe default debug level is `ERROR`, which can be changed per method call by preempting it with `logzero.loglevel(logging.LEVEL)` where `LEVEL` is the debug level.\nEach method then resets logging to `ERROR`, so you need to set logging level before each one.\n\nYou can import the below for this\n```python\nimport logging\nimport logzero\nfrom logzero import logger\n```\n**Ex. 1: DEBUG level**\n```python\n>>> logzero.loglevel(logging.DEBUG)\n>>> mist.whoami()\n```\n```\n[I 200326 14:48:17 mistifi:547] Calling whoami()\n[I 200326 14:48:17 mistifi:548] kwargs in: {}\n[I 200326 14:48:17 mistifi:511] Calling resource()\n[D 200326 14:48:17 mistifi:512] kwargs in: {'uri': '/self'}\n[I 200326 14:48:17 mistifi:471] Calling _params()\n[I 200326 14:48:17 mistifi:472] kwargs in: {'uri': '/self'}\n[D 200326 14:48:17 mistifi:479] Returned params: {}\n[I 200326 14:48:17 mistifi:395] Calling _resource_url()\n[I 200326 14:48:17 mistifi:396] kwargs in: {'uri': '/self'}\n[D 200326 14:48:17 mistifi:450] URL to endpoint: https://api.mist.com/api/v1/self\n[I 200326 14:48:17 mistifi:333] Calling _api_call()\n[I 200326 14:48:17 mistifi:334] Method is: GET\n[I 200326 14:48:17 mistifi:335] Calling URL: https://api.mist.com/api/v1/self\n[D 200326 14:48:17 mistifi:336] With headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n[I 200326 14:48:18 mistifi:346] Response status code: 200\n[D 200326 14:48:18 mistifi:356] Response HEAD: {'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Origin': 'https://manage.mist.com', 'Access-Control-Expose-Headers': 'X-CSRFTOKEN,X-Requested-With,X-Page-Page,X-Page-Total', 'Allow': 'GET, OPTIONS, DELETE, PUT', 'Cache-Control': 'no-cache, no-store', 'Content-Type': 'application/json', 'Date': 'Thu, 26 Mar 2020 14:48:18 GMT', 'Pragma': 'no-cache', 'Server': 'gunicorn/19.10.0', 'Set-Cookie': 'sessionid=8trv1zr79sknwk0n7sz2pim8x26g84mh; Domain=.mist.com; expires=Fri, 27-Mar-2020 14:48:18 GMT; HttpOnly; Max-Age=86400; Path=/; Secure', 'Vary': 'Origin', 'Via': 'kong/0.9.3', 'X-Frame-Options': 'SAMEORIGIN', 'X-Kong-Proxy-Latency': '0', 'X-Kong-Upstream-Latency': '39', 'Content-Length': '608', 'Connection': 'keep-alive'}\n[D 200326 14:48:18 mistifi:357] The response: {'email': 'blah@mist.com'...}\n```\n\n**Ex. 2: INFO level**\n```python\n>>> logzero.loglevel(logging.INFO)\n>>> mist.whoami()\n```\n```\n[I 200326 14:58:23 mistifi:547] Calling whoami()\n[I 200326 14:58:23 mistifi:548] kwargs in: {}\n[I 200326 14:58:23 mistifi:511] Calling resource()\n[I 200326 14:58:23 mistifi:471] Calling _params()\n[I 200326 14:58:23 mistifi:472] kwargs in: {'uri': '/self'}\n[I 200326 14:58:23 mistifi:395] Calling _resource_url()\n[I 200326 14:58:23 mistifi:396] kwargs in: {'uri': '/self'}\n[I 200326 14:58:23 mistifi:333] Calling _api_call()\n[I 200326 14:58:23 mistifi:334] Method is: GET\n[I 200326 14:58:23 mistifi:335] Calling URL: https://api.mist.com/api/v1/self\n[I 200326 14:58:23 mistifi:346] Response status code: 200\n```\n\n**Ex. 3: Examples of error output**\nHere no log level was set.\n```python\n>>> mist.whoami()\n```\n```\n[E 200326 14:58:24 mistifi:351] Response Error:\n    {\"detail\":\"Method \\\"GET\\\" not allowed.\"}\n[E 200326 14:58:24 mistifi:351] Response Error:\n    {\"detail\":\"CSRF Failed: CSRF token missing or incorrect.\"}\n```\n\n# TODO\nThe general TODO list is:\n- add more/all URIs\n\n# Contributing\nThank you for helping us develop Mistifi. We're happy to accept contribution of any kind. Feel free to submit feature requests and bug reports under Issues.\n\n## Submitting a pull request guidelines\n\n- All pull requests require a code review.\n- Any merge conflicts needs to be resolved.\n- Include unit tests when you contribute new features and bugs, as they help to a) prove that your code works correctly, and b) guard against future breaking changes to lower the maintenance cost.\n- All tests needs to pass before we will review your PR.\n- When you respond to changes based on comments from a code review, please reply with \"Done.\" so that we get a notification.\n\n## Contributors\n- [Ben Cardy](https://github.com/benbacardi)\n- [Primoz Marinsek](https://github.com/pmarinsek)\n\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "mistifi", "package_url": "https://pypi.org/project/mistifi/", "platform": "", "project_url": "https://pypi.org/project/mistifi/", "project_urls": null, "release_url": "https://pypi.org/project/mistifi/0.0.9/", "requires_dist": ["requests", "logzero"], "requires_python": "", "summary": "Mist API Python module", "version": "0.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Mistifi</h1>\n<p>Mistifi is a highly scalable Python module enabling full interfacing with the Mist RestAPI.</p>\n<h2>Motivation</h2>\n<p>To provide a scalable, easy to use and easy to contribute to module that will be able to interface to the fullest with the Mist Systems cloud for wired and wireless.</p>\n<h1>Installation</h1>\n<p>The module can be pip installed</p>\n<pre><code>pip install mistifi\n</code></pre>\n<p>or using <code>pip3</code> if using python3.</p>\n<p>The module is imported with</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">mistifi</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mistifi</span> <span class=\"kn\">import</span> <span class=\"n\">MistiFi</span>\n</pre>\n<h1>Usage</h1>\n<p>The usage workflow intended is:</p>\n<ol>\n<li>Create an instance with passing in the cloud and authentication options.</li>\n<li>Initiate communication with the <code>comms()</code> method.</li>\n<li>Interface with the API with the use of either a specific endpoint method (like <code>wlans()</code> for example) or the <code>resource()</code> method.</li>\n</ol>\n<h2>Create an instance</h2>\n<h3>Selecting a cloud</h3>\n<p>When creating an instance pass in the <code>cloud</code> option to specify a direct instance of a cloud.</p>\n<p>There are currently two cloud options to select from. Either <code>EU</code> or <code>US</code>, with <code>US</code> being the default if not provided with the <code>cloud</code> attribute.\nThey default to</p>\n<ul>\n<li>US = api.mist.com</li>\n<li>EU = api.eu.mist.com</li>\n</ul>\n<p>If not passed in, the default <code>US</code> will be used.</p>\n<p><strong>Ex. 1: Using the default <code>US</code> cloud</strong></p>\n<pre><span class=\"n\">mist</span> <span class=\"o\">=</span> <span class=\"n\">MistiFi</span><span class=\"p\">()</span>\n</pre>\n<p>In this case not only will the <code>US</code> cloud be used but also a username/password option for user login (Look at next section for explanation on this).</p>\n<p><strong>Ex. 2: Specifying the <code>EU</code> cloud</strong></p>\n<pre><span class=\"n\">mist</span> <span class=\"o\">=</span> <span class=\"n\">MistiFi</span><span class=\"p\">(</span><span class=\"n\">cloud</span><span class=\"o\">=</span><span class=\"s2\">\"EU\"</span><span class=\"p\">)</span>\n</pre>\n<p>Note that the cloud parameter is case-insensitive. In the below example the <code>US</code> cloud will be used.</p>\n<pre><span class=\"n\">mist</span> <span class=\"o\">=</span> <span class=\"n\">MistiFi</span><span class=\"p\">(</span><span class=\"n\">cloud</span><span class=\"o\">=</span><span class=\"s2\">\"us\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Using a token or username/password</h3>\n<p><strong>Ex. 1: Using a token</strong></p>\n<p>In below example a token <code>thetoken</code> is used with the US cloud. You can create a user token by following <a href=\"https://www.mist.com/documentation/using-postman/\" rel=\"nofollow\">these instructions</a></p>\n<pre><span class=\"n\">mist</span> <span class=\"o\">=</span> <span class=\"n\">MistiFi</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s2\">\"thetoken\"</span><span class=\"p\">)</span>\n</pre>\n<p>An alternative with specifying the EU cloud would be.</p>\n<pre><span class=\"n\">mist</span> <span class=\"o\">=</span> <span class=\"n\">MistiFi</span><span class=\"p\">(</span><span class=\"n\">cloud</span><span class=\"o\">=</span><span class=\"s2\">\"EU\"</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s2\">\"thetoken\"</span><span class=\"p\">)</span>\n</pre>\n<p>The token always has preference before username/password or other option, so in the below example a token would be used.</p>\n<pre><span class=\"n\">mist</span> <span class=\"o\">=</span> <span class=\"n\">MistiFi</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s2\">\"thetoken\"</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"theuser@mistifi.com\"</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"thepass\"</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Ex. 2: Using username and password.</strong></p>\n<p>Currently 2FA and OAUTH aren't supported.</p>\n<p>The minimum required for this option is to create an instance without any attributes like below.</p>\n<pre><span class=\"n\">mist</span> <span class=\"o\">=</span> <span class=\"n\">MistiFi</span><span class=\"p\">()</span>\n</pre>\n<p>In this case you are asked for username and password.</p>\n<p>You can provide one or both when creating a new instance and be asked about the other once the <code>comms()</code> method is run.</p>\n<pre><span class=\"n\">mist</span> <span class=\"o\">=</span> <span class=\"n\">MistiFi</span><span class=\"p\">(</span><span class=\"n\">cloud</span><span class=\"o\">=</span><span class=\"s1\">'us'</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"theuser@mistifi.com\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Communicating with the cloud</h2>\n<p>Once the cloud and authentication options are selected you must run the <code>comms()</code> method which correctly sets up the headers depending on the authentication method used. For example <code>X-CSRFTOKEN</code> is setup for the username/password option.</p>\n<pre><span class=\"n\">mist</span> <span class=\"o\">=</span> <span class=\"n\">comms</span><span class=\"p\">()</span>\n</pre>\n<h2>Interfacing with the cloud URIs</h2>\n<p>If a specific resource method for a specific URI is not defined the main method that can be used is the <code>resource()</code> one. The resource methods defined start with <code>Resource method</code> in the docstring.</p>\n<p>For example, GET-ing <code>/self</code> can be achieved by either the <code>resource()</code> method or the <code>whoami()</code> one.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">whoami</span> <span class=\"o\">=</span> <span class=\"n\">mist</span><span class=\"o\">.</span><span class=\"n\">whoami</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rwhoami</span> <span class=\"o\">=</span> <span class=\"n\">mist</span><span class=\"o\">.</span><span class=\"n\">resource</span><span class=\"p\">(</span><span class=\"s2\">\"GET\"</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"s2\">\"/self\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">whoami</span> <span class=\"o\">==</span> <span class=\"n\">rwhoami</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n</pre>\n<h2>Understanding the resource() method</h2>\n<p>The main method all others use on is <code>resource()</code>. You can pass keyword arguments into it. Pretty much anything will work, but there are some rules.</p>\n<p>First thing is that those kwargs are used to build the URL to the Mist cloud endpoint, therefore passing in proper parameters is necessary. Some parameters are special and handled differently.</p>\n<p>Example of special kwargs is <code>params</code>. If passing in that kwarg, it will be handled differently so that it is passed into the <code>requests.Session()</code> as <code>params</code>.</p>\n<p>If passing in <code>org_id=':org_id'</code>, <code>site_id='site_id'</code>, <code>uri='some_uri'</code> will create URL properly with the <code>org_id</code> first <code>site_id</code> second and then the <code>uri</code>.</p>\n<p>All other kwargs will be added at the end to the URL, so make sure that URL exists. Error 400 is thrown otherwise.</p>\n<p>Example:</p>\n<pre><span class=\"n\">mist</span><span class=\"o\">.</span><span class=\"n\">resource</span><span class=\"p\">(</span>\n\t<span class=\"s2\">\"GET\"</span><span class=\"p\">,</span> \n\t<span class=\"n\">site_id</span><span class=\"o\">=</span><span class=\"s2\">\":site_id123\"</span><span class=\"p\">,</span> \n\t<span class=\"n\">wlan_id</span><span class=\"o\">=</span><span class=\"s2\">\":wlan_id123\"</span><span class=\"p\">,</span> \n\t<span class=\"n\">org_id</span><span class=\"o\">=</span><span class=\"s2\">\":org_id123\"</span><span class=\"p\">,</span> \n\t<span class=\"n\">blah</span><span class=\"o\">=</span><span class=\"s2\">\"/blah\"</span><span class=\"p\">,</span> \n\t<span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"paramA\"</span><span class=\"p\">:</span> <span class=\"s2\">\"valueA\"</span><span class=\"p\">,</span> <span class=\"s1\">'paramB'</span><span class=\"p\">:</span> <span class=\"s1\">'valueB'</span><span class=\"p\">})</span>\n</pre>\n<p>builds the URL to <code>https://api.mist.com/api/v1/orgs/:org_id123/sites/:site_id123/wlans/:wlan_id123/blah</code> and <code>params</code> are added at the end when passed in the requests as <code>params</code>.</p>\n<h1>Additional</h1>\n<h2>Debugging</h2>\n<p>The default debug level is <code>ERROR</code>, which can be changed per method call by preempting it with <code>logzero.loglevel(logging.LEVEL)</code> where <code>LEVEL</code> is the debug level.\nEach method then resets logging to <code>ERROR</code>, so you need to set logging level before each one.</p>\n<p>You can import the below for this</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logzero</span>\n<span class=\"kn\">from</span> <span class=\"nn\">logzero</span> <span class=\"kn\">import</span> <span class=\"n\">logger</span>\n</pre>\n<p><strong>Ex. 1: DEBUG level</strong></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">logzero</span><span class=\"o\">.</span><span class=\"n\">loglevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mist</span><span class=\"o\">.</span><span class=\"n\">whoami</span><span class=\"p\">()</span>\n</pre>\n<pre><code>[I 200326 14:48:17 mistifi:547] Calling whoami()\n[I 200326 14:48:17 mistifi:548] kwargs in: {}\n[I 200326 14:48:17 mistifi:511] Calling resource()\n[D 200326 14:48:17 mistifi:512] kwargs in: {'uri': '/self'}\n[I 200326 14:48:17 mistifi:471] Calling _params()\n[I 200326 14:48:17 mistifi:472] kwargs in: {'uri': '/self'}\n[D 200326 14:48:17 mistifi:479] Returned params: {}\n[I 200326 14:48:17 mistifi:395] Calling _resource_url()\n[I 200326 14:48:17 mistifi:396] kwargs in: {'uri': '/self'}\n[D 200326 14:48:17 mistifi:450] URL to endpoint: https://api.mist.com/api/v1/self\n[I 200326 14:48:17 mistifi:333] Calling _api_call()\n[I 200326 14:48:17 mistifi:334] Method is: GET\n[I 200326 14:48:17 mistifi:335] Calling URL: https://api.mist.com/api/v1/self\n[D 200326 14:48:17 mistifi:336] With headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\n[I 200326 14:48:18 mistifi:346] Response status code: 200\n[D 200326 14:48:18 mistifi:356] Response HEAD: {'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Origin': 'https://manage.mist.com', 'Access-Control-Expose-Headers': 'X-CSRFTOKEN,X-Requested-With,X-Page-Page,X-Page-Total', 'Allow': 'GET, OPTIONS, DELETE, PUT', 'Cache-Control': 'no-cache, no-store', 'Content-Type': 'application/json', 'Date': 'Thu, 26 Mar 2020 14:48:18 GMT', 'Pragma': 'no-cache', 'Server': 'gunicorn/19.10.0', 'Set-Cookie': 'sessionid=8trv1zr79sknwk0n7sz2pim8x26g84mh; Domain=.mist.com; expires=Fri, 27-Mar-2020 14:48:18 GMT; HttpOnly; Max-Age=86400; Path=/; Secure', 'Vary': 'Origin', 'Via': 'kong/0.9.3', 'X-Frame-Options': 'SAMEORIGIN', 'X-Kong-Proxy-Latency': '0', 'X-Kong-Upstream-Latency': '39', 'Content-Length': '608', 'Connection': 'keep-alive'}\n[D 200326 14:48:18 mistifi:357] The response: {'email': 'blah@mist.com'...}\n</code></pre>\n<p><strong>Ex. 2: INFO level</strong></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">logzero</span><span class=\"o\">.</span><span class=\"n\">loglevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mist</span><span class=\"o\">.</span><span class=\"n\">whoami</span><span class=\"p\">()</span>\n</pre>\n<pre><code>[I 200326 14:58:23 mistifi:547] Calling whoami()\n[I 200326 14:58:23 mistifi:548] kwargs in: {}\n[I 200326 14:58:23 mistifi:511] Calling resource()\n[I 200326 14:58:23 mistifi:471] Calling _params()\n[I 200326 14:58:23 mistifi:472] kwargs in: {'uri': '/self'}\n[I 200326 14:58:23 mistifi:395] Calling _resource_url()\n[I 200326 14:58:23 mistifi:396] kwargs in: {'uri': '/self'}\n[I 200326 14:58:23 mistifi:333] Calling _api_call()\n[I 200326 14:58:23 mistifi:334] Method is: GET\n[I 200326 14:58:23 mistifi:335] Calling URL: https://api.mist.com/api/v1/self\n[I 200326 14:58:23 mistifi:346] Response status code: 200\n</code></pre>\n<p><strong>Ex. 3: Examples of error output</strong>\nHere no log level was set.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mist</span><span class=\"o\">.</span><span class=\"n\">whoami</span><span class=\"p\">()</span>\n</pre>\n<pre><code>[E 200326 14:58:24 mistifi:351] Response Error:\n    {\"detail\":\"Method \\\"GET\\\" not allowed.\"}\n[E 200326 14:58:24 mistifi:351] Response Error:\n    {\"detail\":\"CSRF Failed: CSRF token missing or incorrect.\"}\n</code></pre>\n<h1>TODO</h1>\n<p>The general TODO list is:</p>\n<ul>\n<li>add more/all URIs</li>\n</ul>\n<h1>Contributing</h1>\n<p>Thank you for helping us develop Mistifi. We're happy to accept contribution of any kind. Feel free to submit feature requests and bug reports under Issues.</p>\n<h2>Submitting a pull request guidelines</h2>\n<ul>\n<li>All pull requests require a code review.</li>\n<li>Any merge conflicts needs to be resolved.</li>\n<li>Include unit tests when you contribute new features and bugs, as they help to a) prove that your code works correctly, and b) guard against future breaking changes to lower the maintenance cost.</li>\n<li>All tests needs to pass before we will review your PR.</li>\n<li>When you respond to changes based on comments from a code review, please reply with \"Done.\" so that we get a notification.</li>\n</ul>\n<h2>Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/benbacardi\" rel=\"nofollow\">Ben Cardy</a></li>\n<li><a href=\"https://github.com/pmarinsek\" rel=\"nofollow\">Primoz Marinsek</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7162012, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "2c6e253e5a6e325d11c5e3c8b50a1fe6", "sha256": "3543b630a3e34ffbda174784d888e6c4fd3e4be489c3bcafcd335ce5f3cf62e4"}, "downloads": -1, "filename": "mistifi-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2c6e253e5a6e325d11c5e3c8b50a1fe6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16620, "upload_time": "2020-04-06T11:04:37", "upload_time_iso_8601": "2020-04-06T11:04:37.254726Z", "url": "https://files.pythonhosted.org/packages/85/ec/34c530ae83c7f45201dc785111a8d44b65d162b5962610668bab086fbaad/mistifi-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6b2728a876adcd4cd2432f1685668dc", "sha256": "2f780d58d326fe589c28583bc49ff2d35cf20d76592fc12c4302d25a83a06558"}, "downloads": -1, "filename": "mistifi-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c6b2728a876adcd4cd2432f1685668dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30224, "upload_time": "2020-04-06T11:04:39", "upload_time_iso_8601": "2020-04-06T11:04:39.225083Z", "url": "https://files.pythonhosted.org/packages/44/15/d93a2a091449e73f5ff5d3ecb5faa264400c4b0dcbd5f27dd2eaf218886d/mistifi-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "8c975ea707deee69a5669d17b41ba0fe", "sha256": "337e0e140fea3bd4d7c03912f7dbc766cbfa322f6afa466a3bacc632f2a57bde"}, "downloads": -1, "filename": "mistifi-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8c975ea707deee69a5669d17b41ba0fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16682, "upload_time": "2020-04-06T15:55:30", "upload_time_iso_8601": "2020-04-06T15:55:30.753876Z", "url": "https://files.pythonhosted.org/packages/6e/c3/e1f78ab01d5de43e20e4d481186e966055235fa67d1bf1a1431d9f4148bc/mistifi-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9d576ca0b68ce418ba981cdec7fb851", "sha256": "c03ecb52f76bcc40a0ec8dd687207c7122472e3ce74ea0786e0e339b1a862d3f"}, "downloads": -1, "filename": "mistifi-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a9d576ca0b68ce418ba981cdec7fb851", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30231, "upload_time": "2020-04-06T15:55:31", "upload_time_iso_8601": "2020-04-06T15:55:31.540428Z", "url": "https://files.pythonhosted.org/packages/36/13/74a306e1947265bb64a5d3d64a2655b722eaa5a05fd50e66146005d9ebcb/mistifi-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "843ce5726eaed17f31be7c37187405de", "sha256": "1420c21149b62f6c4a294770cd73aa1015302434c60d64dfc7110277776f0430"}, "downloads": -1, "filename": "mistifi-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "843ce5726eaed17f31be7c37187405de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17243, "upload_time": "2020-04-07T11:11:03", "upload_time_iso_8601": "2020-04-07T11:11:03.388577Z", "url": "https://files.pythonhosted.org/packages/8a/9d/83a474b4fed058726fd34f1a92023b28b0a6bab3142abcab51e2258d1c0e/mistifi-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a751281259f98146d3d71de2671eba84", "sha256": "039d5a5fb86a51bafbe51da72159135951c3dd6168480326e668ca008ce081fd"}, "downloads": -1, "filename": "mistifi-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a751281259f98146d3d71de2671eba84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31241, "upload_time": "2020-04-07T11:11:04", "upload_time_iso_8601": "2020-04-07T11:11:04.728603Z", "url": "https://files.pythonhosted.org/packages/18/33/e38b2e8c484b37ea90d6c34ead49af0b79f8fae628728bde656e4e910bf3/mistifi-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "1adc9e1eddebe89ecbd6f1c35341f3f6", "sha256": "b9fe15625ee5dc0e28d52d0196bdb09ce710efea654b18a4842d0c752388de26"}, "downloads": -1, "filename": "mistifi-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "1adc9e1eddebe89ecbd6f1c35341f3f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17246, "upload_time": "2020-04-07T11:35:42", "upload_time_iso_8601": "2020-04-07T11:35:42.417672Z", "url": "https://files.pythonhosted.org/packages/73/c8/4f249c8e1fc2602992b2e7d3ad13e2ae45cfedfcd227677d21941456059c/mistifi-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "620b7a7a58d9a113c7a7cb1b17efbe9f", "sha256": "a2ce49aa59441a0d178709715b90d5c01453708ba409e74a3002ec8200c151ce"}, "downloads": -1, "filename": "mistifi-0.0.5.tar.gz", "has_sig": false, "md5_digest": "620b7a7a58d9a113c7a7cb1b17efbe9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31225, "upload_time": "2020-04-07T11:35:43", "upload_time_iso_8601": "2020-04-07T11:35:43.611889Z", "url": "https://files.pythonhosted.org/packages/0e/42/99eee70f3c8e0401d20025efe14fc91eb73ea5cebfca604592bc3d8b3596/mistifi-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "a80a08668fbabd8c5de97292f687c7fd", "sha256": "d422f3eec69c10f6e2d0d377575a403d8d33e4610b8a3827d932a4d90bc5209f"}, "downloads": -1, "filename": "mistifi-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a80a08668fbabd8c5de97292f687c7fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17019, "upload_time": "2020-04-08T09:29:35", "upload_time_iso_8601": "2020-04-08T09:29:35.852143Z", "url": "https://files.pythonhosted.org/packages/bb/b4/15f0e5693474b3024eedb4f449008602a3998909eedb066bf9d69778276b/mistifi-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3483d837242f59ce8d89105e5066d6f3", "sha256": "63a58afdfc2f44c85ae6a36f09adc707e8bab2a5782ed15d8635c34764ce4944"}, "downloads": -1, "filename": "mistifi-0.0.6.tar.gz", "has_sig": false, "md5_digest": "3483d837242f59ce8d89105e5066d6f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30996, "upload_time": "2020-04-08T09:29:36", "upload_time_iso_8601": "2020-04-08T09:29:36.702696Z", "url": "https://files.pythonhosted.org/packages/bd/3e/6494a336a6600359817f80514bfe04fc6ab3aad1077735ebcf3ee9976a41/mistifi-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "52854b35f10e200ee39b7c3d9f10b287", "sha256": "e8a1fbe84b654dc97e0ca2923acf3c28f12f72c0e0581980df858c883b8c5468"}, "downloads": -1, "filename": "mistifi-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "52854b35f10e200ee39b7c3d9f10b287", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17083, "upload_time": "2020-04-08T10:11:57", "upload_time_iso_8601": "2020-04-08T10:11:57.447011Z", "url": "https://files.pythonhosted.org/packages/e8/72/e1e2f2ab4bf045256198c43c71e74b485f3dc2d0a7e0a64c339f2e477cfd/mistifi-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a59d6a16f4edba698839f801c5d422b3", "sha256": "55ace88564b2efc960f7142364bd3b94859514a1d24236293b928ebd69f02567"}, "downloads": -1, "filename": "mistifi-0.0.7.tar.gz", "has_sig": false, "md5_digest": "a59d6a16f4edba698839f801c5d422b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31047, "upload_time": "2020-04-08T10:11:58", "upload_time_iso_8601": "2020-04-08T10:11:58.254254Z", "url": "https://files.pythonhosted.org/packages/cd/c8/eff20b5799581961a12ed43200517dd0ed2dc8466d593d2ea16f9ee14c71/mistifi-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "12d78eee2a3ebc1987fac0f0bf3881a5", "sha256": "5dfed715374de0393d823b4307c1830a0da926d76ebdf61c7a516ad206f493bf"}, "downloads": -1, "filename": "mistifi-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "12d78eee2a3ebc1987fac0f0bf3881a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17015, "upload_time": "2020-04-08T10:43:24", "upload_time_iso_8601": "2020-04-08T10:43:24.094078Z", "url": "https://files.pythonhosted.org/packages/e9/40/9bc746a8ab31f547650e9ee2df9c785806c42aaf4b10f9dd064665dcaab0/mistifi-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0340fb9554ae7d12b696f68b4cbaefd", "sha256": "4db6f1182f44fd28b830bab9a2134cc82e4eac0a4db827d0ced1eabe57c2551d"}, "downloads": -1, "filename": "mistifi-0.0.8.tar.gz", "has_sig": false, "md5_digest": "f0340fb9554ae7d12b696f68b4cbaefd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30993, "upload_time": "2020-04-08T10:43:24", "upload_time_iso_8601": "2020-04-08T10:43:24.997539Z", "url": "https://files.pythonhosted.org/packages/82/e2/1b9535f2e0b16a5164f199a4aa2b1f0875a11cdb83235d7239764bf65e17/mistifi-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "7fe99a4b0c9b9df9dde2a7a4ec0474ee", "sha256": "38d78a4e023166e0fd377c412cec4bfd29a6a06d0f624c96de767a728a33637d"}, "downloads": -1, "filename": "mistifi-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "7fe99a4b0c9b9df9dde2a7a4ec0474ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17030, "upload_time": "2020-04-08T12:31:23", "upload_time_iso_8601": "2020-04-08T12:31:23.621844Z", "url": "https://files.pythonhosted.org/packages/a5/5d/d55f26eb7cdc93b9972738aad3aefe850675385d11d2bf06818f9c53fa6e/mistifi-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3a51042b9ea1052c80226c23ffd2c8f", "sha256": "e54d27d07d6d20de7ed6702d185355f044b82deab6854f5f4e41457ff2e024ce"}, "downloads": -1, "filename": "mistifi-0.0.9.tar.gz", "has_sig": false, "md5_digest": "d3a51042b9ea1052c80226c23ffd2c8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31004, "upload_time": "2020-04-08T12:31:24", "upload_time_iso_8601": "2020-04-08T12:31:24.810976Z", "url": "https://files.pythonhosted.org/packages/ac/f5/d7626bf1204070588935718797b2af2a4bb58f1a86e6311b2457024a5a9c/mistifi-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7fe99a4b0c9b9df9dde2a7a4ec0474ee", "sha256": "38d78a4e023166e0fd377c412cec4bfd29a6a06d0f624c96de767a728a33637d"}, "downloads": -1, "filename": "mistifi-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "7fe99a4b0c9b9df9dde2a7a4ec0474ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17030, "upload_time": "2020-04-08T12:31:23", "upload_time_iso_8601": "2020-04-08T12:31:23.621844Z", "url": "https://files.pythonhosted.org/packages/a5/5d/d55f26eb7cdc93b9972738aad3aefe850675385d11d2bf06818f9c53fa6e/mistifi-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3a51042b9ea1052c80226c23ffd2c8f", "sha256": "e54d27d07d6d20de7ed6702d185355f044b82deab6854f5f4e41457ff2e024ce"}, "downloads": -1, "filename": "mistifi-0.0.9.tar.gz", "has_sig": false, "md5_digest": "d3a51042b9ea1052c80226c23ffd2c8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31004, "upload_time": "2020-04-08T12:31:24", "upload_time_iso_8601": "2020-04-08T12:31:24.810976Z", "url": "https://files.pythonhosted.org/packages/ac/f5/d7626bf1204070588935718797b2af2a4bb58f1a86e6311b2457024a5a9c/mistifi-0.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:01 2020"}