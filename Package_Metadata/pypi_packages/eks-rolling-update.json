{"info": {"author": "Craig Huber, Nicolas B\u00e9langer, Sam Weston & contributors", "author_email": "ch@hellofresh.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "<p align=\"center\">\n  <img height=\"150px\" src=\"./logo.png\"  alt=\"EKS Rolling Update\" title=\"EKS Rolling Update\">\n</p>\n\n# EKS Rolling Update\n\nEKS Rolling Update is a utility for updating the launch configuration or template of worker nodes in an EKS cluster.\n\n[![Build Status](https://travis-ci.org/hellofresh/eks-rolling-update.svg?branch=master)](https://travis-ci.org/hellofresh/eks-rolling-update)\n\n\n- [Intro](#intro)\n- [Requirements](#requirements)\n- [Installation](#installation)\n- [Usage](#usage)\n- [Configuration](#configuration)\n- [Contributing](#contributing)\n- [License](#license)\n\n\n<a name=\"intro\"></a>\n# Intro\n\nEKS Rolling Update is a utility for updating the launch configuration or template of worker nodes in an EKS cluster. It\nupdates worker nodes in a rolling fashion and performs health checks of your EKS cluster to ensure no disruption to service.\nTo achieve this, it performs the following actions:\n\n* Pauses Kubernetes Autoscaler (Optional)\n* Finds a list of worker nodes that do not have a launch config or template that matches their ASG\n* Scales up the desired capacity\n* Ensures the ASGs are healthy and that the new nodes have joined the EKS cluster\n* Cordons the outdated worker nodes\n* Suspends AWS Autoscaling actions while update is in progress\n* Drains outdated EKS outdated worker nodes one by one\n* Terminates EC2 instances of the worker nodes one by one\n* Detaches EC2 instances from the ASG one by one\n* Scales down the ASG to original count (in case of failure)\n* Resumes AWS Autoscaling actions\n* Resumes Kubernetes Autoscaler (Optional)\n\n<a name=\"requirements\"></a>\n## Requirements\n\n* [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/) installed\n* `KUBECONFIG` environment variable set, or config available in `${HOME}/.kube/config` per default\n* AWS credentials [configured](https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html#guide-configuration)\n\n<a name=\"installation\"></a>\n## Installation\n\n### From PyPi\n\n```\npip3 install eks-rolling-update\n```\n\n### From source\n\n```\nvirtualenv -p python3 venv\nsource venv/bin/activate\npip3 install -r requirements.txt\n```\n\n<a name=\"usage\"></a>\n## Usage\n\n```\nusage: eks_rolling_update.py [-h] --cluster_name CLUSTER_NAME [--plan]\n\nRolling update on cluster\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --cluster_name CLUSTER_NAME, -c CLUSTER_NAME\n                        the cluster name to perform rolling update on\n  --plan, -p            perform a dry run to see which instances are out of\n                        date\n```\n\nExample:\n\n```\neks_rolling_update.py -c my-eks-cluster\n```\n\n## Configuration\n\n| Environment Variable      | Description                                                                                                           | Default                                  |\n|---------------------------|-----------------------------------------------------------------------------------------------------------------------|------------------------------------------|\n| K8S_AUTOSCALER_ENABLED    | If True Kubernetes Autoscaler will be paused before running update                                                    | False                                    |\n| K8S_AUTOSCALER_NAMESPACE  | Namespace where Kubernetes Autoscaler is deployed                                                                     | \"default\"                                |\n| K8S_AUTOSCALER_DEPLOYMENT | Deployment name of Kubernetes Autoscaler                                                                              | \"cluster-autoscaler\"                     |\n| K8S_AUTOSCALER_REPLICAS   | Number of replicas to scale back up to after Kubernentes Autoscaler paused                                            | 2                                        |\n| ASG_DESIRED_STATE_TAG     | Temporary tag which will be saved to the ASG to store the state of the EKS cluster prior to update                    | eks-rolling-update:desired_capacity      |\n| ASG_ORIG_CAPACITY_TAG     | Temporary tag which will be saved to the ASG to store the state of the EKS cluster prior to update                    | eks-rolling-update:original_capacity     |\n| ASG_ORIG_MAX_CAPACITY_TAG | Temporary tag which will be saved to the ASG to store the state of the EKS cluster prior to update                    | eks-rolling-update:original_max_capacity |\n| ASG_WAIT_FOR_DETACHMENT   | If True, waits for detachment to fully complete (draining connections etc) after terminating instance and detaching   | True                                     |\n| ASG_USE_TERMINATION_POLICY| Use ASG termination policy (instance terminate/detach handled by ASG according to configured termination policy)      | False                                    |\n| CLUSTER_HEALTH_WAIT       | Number of seconds to wait after ASG has been scaled up before checking health of the cluster                          | 90                                       |\n| GLOBAL_MAX_RETRY          | Number of attempts of a health check                                                                                  | 12                                       |\n| GLOBAL_HEALTH_WAIT        | Number of seconds to wait before retrying a health check                                                              | 20                                       |\n| BETWEEN_NODES_WAIT        | Number of seconds to wait after removing a node before continuing on                                                  | 0                                        |\n| RUN_MODE                  | See Run Modes section below                                                                                           | 1                                        |\n| DRY_RUN                   | If True, only a query will be run to determine which worker nodes are outdated without running an update operation    | False                                    |\n| EXTRA_DRAIN_ARGS          | Additional space-delimited args to supply to the `kubectl drain` function, e.g `--force=true`. See `kubectl drain -h` | \"\"                                       |\n\n## Run Modes\nThere are a number of different values which can be set for the `RUN_MODE` environment variable.\n\n`1` is the default.\n\n| Mode Number   | Description                                                                                     |\n|---------------|-------------------------------------------------------------------------------------------------|\n| 1             | Scale up and cordon the outdated nodes of each ASG one-by-one, just before we drain them.       |\n| 2             | Scale up and cordon the outdated nodes of all ASGs all at once at the beginning of the run.     |\n| 3             | Cordon the outdated nodes of all ASGs at the beginning of the run but scale each ASG one-by-one.|\n\nEach of them have different advantages and disadvantages.\n* Scaling up all ASGs at once may cause AWS EC2 instance limits to be exceeded\n* Only cordoning the nodes on a per-ASG basis will mean that pods are likely to be moved more than once\n* Cordoning the nodes for all ASGs at once could cause issues if new pods needs to start during the process\n\n## Examples\n\n* Plan\n\n```\n$ python eks_rolling_update.py --cluster_name YOUR_EKS_CLUSTER_NAME --plan\n```\n\n* Apply Changes\n\n```\n$ python eks_rolling_update.py --cluster_name YOUR_EKS_CLUSTER_NAME\n```\n\n* Cluster Autoscaler\n\nIf using `cluster-autoscaler`, you must let `eks-rolling-update` know that cluster-autoscaler is running in your cluster by exporting the following environment variables:\n\n```\n$ export  K8S_AUTOSCALER_ENABLED=1 \\\n          K8S_AUTOSCALER_NAMESPACE=\"CA_NAMESPACE\" \\\n          K8S_AUTOSCALER_DEPLOYMENT=\"CA_DEPLOYMENT_NAME\"\n```\n\n* Disable operations on `cluster-autoscaler`\n\n```\n$ unset K8S_AUTOSCALER_ENABLED\n```\n\n* Configure tool via `.env` file\n\nRather than using environment variables, you can use a `.env` file within your working directory to load \nupdater settings. e.g:\n\n```\n$ cat .env\nDRY_RUN=1\n```\n\n<a name=\"docker\"></a>\n## Docker\n\nAlthough no public Docker image is currently published for this project, feel free to use the included [Dockerfile](Dockerfile) to build your own image.\n\n```bash\nmake docker-dist version=1.0.DEV\n```\n\nAfter building the image, run using the command\n```bash\ndocker run -ti --rm \\\n  -e AWS_DEFAULT_REGION \\\n  -v \"${HOME}/.aws:/root/.aws\" \\\n  -v \"${HOME}/.kube/config:/root/.kube/config\" \\\n  eks-rolling-update:latest \\\n  -c my-cluster\n```\n\nPass in any additional environment variables and options as described elsewhere in this file.\n\n<a name=\"contributing\"></a>\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n<a name=\"licence\"></a>\n## License\n\nThis project is licensed under the Apache 2.0 License - see the [LICENSE](LICENSE) file for details\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hellofresh/eks-rolling-update", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "Craig Huber & contributors", "maintainer_email": "ch@hellofresh.com", "name": "eks-rolling-update", "package_url": "https://pypi.org/project/eks-rolling-update/", "platform": "", "project_url": "https://pypi.org/project/eks-rolling-update/", "project_urls": {"Homepage": "https://github.com/hellofresh/eks-rolling-update"}, "release_url": "https://pypi.org/project/eks-rolling-update/1.0.96/", "requires_dist": ["boto3 (>=1.9.246)", "kubernetes (>=10.0.1)", "python-dotenv (>=0.10.2)"], "requires_python": ">=3.7", "summary": "EKS Rolling Update is a utility for updating the launch configuration or template of worker nodes in an EKS cluster.", "version": "1.0.96", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n  <img alt=\"EKS Rolling Update\" height=\"150px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7500adeaacfe7f6dd1c6e243771b765acd05fa3d/2e2f6c6f676f2e706e67\">\n</p>\n<h1>EKS Rolling Update</h1>\n<p>EKS Rolling Update is a utility for updating the launch configuration or template of worker nodes in an EKS cluster.</p>\n<p><a href=\"https://travis-ci.org/hellofresh/eks-rolling-update\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1daf3aa73827880b4b99cf40313f23434798f8ef/68747470733a2f2f7472617669732d63692e6f72672f68656c6c6f66726573682f656b732d726f6c6c696e672d7570646174652e7376673f6272616e63683d6d6173746572\"></a></p>\n<ul>\n<li><a href=\"#intro\" rel=\"nofollow\">Intro</a></li>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#configuration\" rel=\"nofollow\">Configuration</a></li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n</ul>\n<p><a></a></p>\n<h1>Intro</h1>\n<p>EKS Rolling Update is a utility for updating the launch configuration or template of worker nodes in an EKS cluster. It\nupdates worker nodes in a rolling fashion and performs health checks of your EKS cluster to ensure no disruption to service.\nTo achieve this, it performs the following actions:</p>\n<ul>\n<li>Pauses Kubernetes Autoscaler (Optional)</li>\n<li>Finds a list of worker nodes that do not have a launch config or template that matches their ASG</li>\n<li>Scales up the desired capacity</li>\n<li>Ensures the ASGs are healthy and that the new nodes have joined the EKS cluster</li>\n<li>Cordons the outdated worker nodes</li>\n<li>Suspends AWS Autoscaling actions while update is in progress</li>\n<li>Drains outdated EKS outdated worker nodes one by one</li>\n<li>Terminates EC2 instances of the worker nodes one by one</li>\n<li>Detaches EC2 instances from the ASG one by one</li>\n<li>Scales down the ASG to original count (in case of failure)</li>\n<li>Resumes AWS Autoscaling actions</li>\n<li>Resumes Kubernetes Autoscaler (Optional)</li>\n</ul>\n<p><a></a></p>\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"https://kubernetes.io/docs/tasks/tools/install-kubectl/\" rel=\"nofollow\">kubectl</a> installed</li>\n<li><code>KUBECONFIG</code> environment variable set, or config available in <code>${HOME}/.kube/config</code> per default</li>\n<li>AWS credentials <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html#guide-configuration\" rel=\"nofollow\">configured</a></li>\n</ul>\n<p><a></a></p>\n<h2>Installation</h2>\n<h3>From PyPi</h3>\n<pre><code>pip3 install eks-rolling-update\n</code></pre>\n<h3>From source</h3>\n<pre><code>virtualenv -p python3 venv\nsource venv/bin/activate\npip3 install -r requirements.txt\n</code></pre>\n<p><a></a></p>\n<h2>Usage</h2>\n<pre><code>usage: eks_rolling_update.py [-h] --cluster_name CLUSTER_NAME [--plan]\n\nRolling update on cluster\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --cluster_name CLUSTER_NAME, -c CLUSTER_NAME\n                        the cluster name to perform rolling update on\n  --plan, -p            perform a dry run to see which instances are out of\n                        date\n</code></pre>\n<p>Example:</p>\n<pre><code>eks_rolling_update.py -c my-eks-cluster\n</code></pre>\n<h2>Configuration</h2>\n<table>\n<thead>\n<tr>\n<th>Environment Variable</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>K8S_AUTOSCALER_ENABLED</td>\n<td>If True Kubernetes Autoscaler will be paused before running update</td>\n<td>False</td>\n</tr>\n<tr>\n<td>K8S_AUTOSCALER_NAMESPACE</td>\n<td>Namespace where Kubernetes Autoscaler is deployed</td>\n<td>\"default\"</td>\n</tr>\n<tr>\n<td>K8S_AUTOSCALER_DEPLOYMENT</td>\n<td>Deployment name of Kubernetes Autoscaler</td>\n<td>\"cluster-autoscaler\"</td>\n</tr>\n<tr>\n<td>K8S_AUTOSCALER_REPLICAS</td>\n<td>Number of replicas to scale back up to after Kubernentes Autoscaler paused</td>\n<td>2</td>\n</tr>\n<tr>\n<td>ASG_DESIRED_STATE_TAG</td>\n<td>Temporary tag which will be saved to the ASG to store the state of the EKS cluster prior to update</td>\n<td>eks-rolling-update:desired_capacity</td>\n</tr>\n<tr>\n<td>ASG_ORIG_CAPACITY_TAG</td>\n<td>Temporary tag which will be saved to the ASG to store the state of the EKS cluster prior to update</td>\n<td>eks-rolling-update:original_capacity</td>\n</tr>\n<tr>\n<td>ASG_ORIG_MAX_CAPACITY_TAG</td>\n<td>Temporary tag which will be saved to the ASG to store the state of the EKS cluster prior to update</td>\n<td>eks-rolling-update:original_max_capacity</td>\n</tr>\n<tr>\n<td>ASG_WAIT_FOR_DETACHMENT</td>\n<td>If True, waits for detachment to fully complete (draining connections etc) after terminating instance and detaching</td>\n<td>True</td>\n</tr>\n<tr>\n<td>ASG_USE_TERMINATION_POLICY</td>\n<td>Use ASG termination policy (instance terminate/detach handled by ASG according to configured termination policy)</td>\n<td>False</td>\n</tr>\n<tr>\n<td>CLUSTER_HEALTH_WAIT</td>\n<td>Number of seconds to wait after ASG has been scaled up before checking health of the cluster</td>\n<td>90</td>\n</tr>\n<tr>\n<td>GLOBAL_MAX_RETRY</td>\n<td>Number of attempts of a health check</td>\n<td>12</td>\n</tr>\n<tr>\n<td>GLOBAL_HEALTH_WAIT</td>\n<td>Number of seconds to wait before retrying a health check</td>\n<td>20</td>\n</tr>\n<tr>\n<td>BETWEEN_NODES_WAIT</td>\n<td>Number of seconds to wait after removing a node before continuing on</td>\n<td>0</td>\n</tr>\n<tr>\n<td>RUN_MODE</td>\n<td>See Run Modes section below</td>\n<td>1</td>\n</tr>\n<tr>\n<td>DRY_RUN</td>\n<td>If True, only a query will be run to determine which worker nodes are outdated without running an update operation</td>\n<td>False</td>\n</tr>\n<tr>\n<td>EXTRA_DRAIN_ARGS</td>\n<td>Additional space-delimited args to supply to the <code>kubectl drain</code> function, e.g <code>--force=true</code>. See <code>kubectl drain -h</code></td>\n<td>\"\"</td>\n</tr></tbody></table>\n<h2>Run Modes</h2>\n<p>There are a number of different values which can be set for the <code>RUN_MODE</code> environment variable.</p>\n<p><code>1</code> is the default.</p>\n<table>\n<thead>\n<tr>\n<th>Mode Number</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Scale up and cordon the outdated nodes of each ASG one-by-one, just before we drain them.</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Scale up and cordon the outdated nodes of all ASGs all at once at the beginning of the run.</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Cordon the outdated nodes of all ASGs at the beginning of the run but scale each ASG one-by-one.</td>\n</tr></tbody></table>\n<p>Each of them have different advantages and disadvantages.</p>\n<ul>\n<li>Scaling up all ASGs at once may cause AWS EC2 instance limits to be exceeded</li>\n<li>Only cordoning the nodes on a per-ASG basis will mean that pods are likely to be moved more than once</li>\n<li>Cordoning the nodes for all ASGs at once could cause issues if new pods needs to start during the process</li>\n</ul>\n<h2>Examples</h2>\n<ul>\n<li>Plan</li>\n</ul>\n<pre><code>$ python eks_rolling_update.py --cluster_name YOUR_EKS_CLUSTER_NAME --plan\n</code></pre>\n<ul>\n<li>Apply Changes</li>\n</ul>\n<pre><code>$ python eks_rolling_update.py --cluster_name YOUR_EKS_CLUSTER_NAME\n</code></pre>\n<ul>\n<li>Cluster Autoscaler</li>\n</ul>\n<p>If using <code>cluster-autoscaler</code>, you must let <code>eks-rolling-update</code> know that cluster-autoscaler is running in your cluster by exporting the following environment variables:</p>\n<pre><code>$ export  K8S_AUTOSCALER_ENABLED=1 \\\n          K8S_AUTOSCALER_NAMESPACE=\"CA_NAMESPACE\" \\\n          K8S_AUTOSCALER_DEPLOYMENT=\"CA_DEPLOYMENT_NAME\"\n</code></pre>\n<ul>\n<li>Disable operations on <code>cluster-autoscaler</code></li>\n</ul>\n<pre><code>$ unset K8S_AUTOSCALER_ENABLED\n</code></pre>\n<ul>\n<li>Configure tool via <code>.env</code> file</li>\n</ul>\n<p>Rather than using environment variables, you can use a <code>.env</code> file within your working directory to load\nupdater settings. e.g:</p>\n<pre><code>$ cat .env\nDRY_RUN=1\n</code></pre>\n<p><a></a></p>\n<h2>Docker</h2>\n<p>Although no public Docker image is currently published for this project, feel free to use the included <a href=\"Dockerfile\" rel=\"nofollow\">Dockerfile</a> to build your own image.</p>\n<pre>make docker-dist <span class=\"nv\">version</span><span class=\"o\">=</span><span class=\"m\">1</span>.0.DEV\n</pre>\n<p>After building the image, run using the command</p>\n<pre>docker run -ti --rm <span class=\"se\">\\</span>\n  -e AWS_DEFAULT_REGION <span class=\"se\">\\</span>\n  -v <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">HOME</span><span class=\"si\">}</span><span class=\"s2\">/.aws:/root/.aws\"</span> <span class=\"se\">\\</span>\n  -v <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">HOME</span><span class=\"si\">}</span><span class=\"s2\">/.kube/config:/root/.kube/config\"</span> <span class=\"se\">\\</span>\n  eks-rolling-update:latest <span class=\"se\">\\</span>\n  -c my-cluster\n</pre>\n<p>Pass in any additional environment variables and options as described elsewhere in this file.</p>\n<p><a></a></p>\n<h2>Contributing</h2>\n<p>Please read <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a> for details on our code of conduct, and the process for submitting pull requests to us.</p>\n<p><a></a></p>\n<h2>License</h2>\n<p>This project is licensed under the Apache 2.0 License - see the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file for details</p>\n\n          </div>"}, "last_serial": 7038356, "releases": {"1.0.80": [{"comment_text": "", "digests": {"md5": "695362ca2d74506b07c73d9b82f89608", "sha256": "f3ae7c4d1be1b1e76b291b2a61f4165bee74057bc4d4c1aa7ec2a4b57fb3a0bc"}, "downloads": -1, "filename": "eks_rolling_update-1.0.80-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "695362ca2d74506b07c73d9b82f89608", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7", "size": 19625, "upload_time": "2020-03-17T17:12:01", "upload_time_iso_8601": "2020-03-17T17:12:01.373925Z", "url": "https://files.pythonhosted.org/packages/06/e5/35bd71c7c16666489fd71ee8ddbcf02c59ba9ef40ef728778eba5b9c2c14/eks_rolling_update-1.0.80-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edc031c7532e5cc4040f4391327761f9", "sha256": "57b36ead647a35c6637c29258954a9747774ce2f436acda10d5b6b5b129a07fe"}, "downloads": -1, "filename": "eks-rolling-update-1.0.80.tar.gz", "has_sig": false, "md5_digest": "edc031c7532e5cc4040f4391327761f9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 17235, "upload_time": "2020-03-17T17:12:03", "upload_time_iso_8601": "2020-03-17T17:12:03.426288Z", "url": "https://files.pythonhosted.org/packages/4b/f3/872358f46332313ff3dcf7981f7268a63e3f0e9e3b0a23852a8df25e2cdb/eks-rolling-update-1.0.80.tar.gz", "yanked": false}], "1.0.82": [{"comment_text": "", "digests": {"md5": "5374a7aff796ecbbf15204ba4ea430f2", "sha256": "18a97b9ed6c12ad10807bdd0ecc5510e73bebd235a3bab14383ad5c74ff3fe6d"}, "downloads": -1, "filename": "eks_rolling_update-1.0.82-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5374a7aff796ecbbf15204ba4ea430f2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7", "size": 19406, "upload_time": "2020-03-30T15:02:33", "upload_time_iso_8601": "2020-03-30T15:02:33.757398Z", "url": "https://files.pythonhosted.org/packages/67/66/30390859efd993a0abe1315068cf82dee4b0b70f2fd77ed1c58b7bdafdfd/eks_rolling_update-1.0.82-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "258ec3bd752b9a280051e73fbe0e904d", "sha256": "346f983b819b20a176298d633f9029fae382b844ac2c30bd0a12dbee8b56f6f0"}, "downloads": -1, "filename": "eks-rolling-update-1.0.82.tar.gz", "has_sig": false, "md5_digest": "258ec3bd752b9a280051e73fbe0e904d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 16964, "upload_time": "2020-03-30T15:02:34", "upload_time_iso_8601": "2020-03-30T15:02:34.627271Z", "url": "https://files.pythonhosted.org/packages/9c/a0/a367bf46dfadbded900c6ba1f20643fbb50a3fc70e5641db13f6311ec10c/eks-rolling-update-1.0.82.tar.gz", "yanked": false}], "1.0.89": [{"comment_text": "", "digests": {"md5": "6fb135fc07b525ba5dab4d3936f6f17e", "sha256": "2fa483daa65758abfd39bf1c245bbf40e3c8e561817f8500eae3230b125434de"}, "downloads": -1, "filename": "eks_rolling_update-1.0.89-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6fb135fc07b525ba5dab4d3936f6f17e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7", "size": 19399, "upload_time": "2020-04-08T07:08:34", "upload_time_iso_8601": "2020-04-08T07:08:34.109504Z", "url": "https://files.pythonhosted.org/packages/a1/a7/c55084ee5ce30c72eed4f5a0434238d484267cbee5be150a0fccacc0646e/eks_rolling_update-1.0.89-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee39ab1b0c3516e0566560690f84bfc1", "sha256": "f493222b6803e4a79e4c80bcdcedbb3513bcbff9614423cdfd47fe66113ea7da"}, "downloads": -1, "filename": "eks-rolling-update-1.0.89.tar.gz", "has_sig": false, "md5_digest": "ee39ab1b0c3516e0566560690f84bfc1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 16926, "upload_time": "2020-04-08T07:08:34", "upload_time_iso_8601": "2020-04-08T07:08:34.971173Z", "url": "https://files.pythonhosted.org/packages/b7/56/2121b069d5b05fcb2407ed7f49fa91aa1f63fb8bfbf59d3f09315a3bfb63/eks-rolling-update-1.0.89.tar.gz", "yanked": false}], "1.0.92": [{"comment_text": "", "digests": {"md5": "cb7c869316c8d2975f5fb44eb1a06acc", "sha256": "ccf88b3110d3090abc992dde2d3c7c2a7afa5bc2cf0c42d86753d83eab7c5b7d"}, "downloads": -1, "filename": "eks_rolling_update-1.0.92-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cb7c869316c8d2975f5fb44eb1a06acc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7", "size": 19399, "upload_time": "2020-04-09T12:57:25", "upload_time_iso_8601": "2020-04-09T12:57:25.412405Z", "url": "https://files.pythonhosted.org/packages/3a/ec/813d12ce6d29986b6e977edebc803ff7903a8e75e648cbbe87d386d73f7f/eks_rolling_update-1.0.92-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e71648d949a1d86245477d3be9cfdbd6", "sha256": "5026b2cfa156d472ede6d0f1115418eec2ee796781c533b98497474dd1406420"}, "downloads": -1, "filename": "eks-rolling-update-1.0.92.tar.gz", "has_sig": false, "md5_digest": "e71648d949a1d86245477d3be9cfdbd6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 16927, "upload_time": "2020-04-09T12:57:26", "upload_time_iso_8601": "2020-04-09T12:57:26.456100Z", "url": "https://files.pythonhosted.org/packages/36/28/b9950454c865ae6cfc959f0a88bf0cfd0b7ef6290fd035a4da07b0d22114/eks-rolling-update-1.0.92.tar.gz", "yanked": false}], "1.0.96": [{"comment_text": "", "digests": {"md5": "8f1c1df264f048ea86ea7db30499794d", "sha256": "6cd076a38f9e5da60e305551b6ad1ae15a9f3e1739ddceb3a1a50fd433913cef"}, "downloads": -1, "filename": "eks_rolling_update-1.0.96-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8f1c1df264f048ea86ea7db30499794d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7", "size": 19443, "upload_time": "2020-04-17T07:52:20", "upload_time_iso_8601": "2020-04-17T07:52:20.463519Z", "url": "https://files.pythonhosted.org/packages/03/7f/9900913904467d9c72f52d64b4aacfd80a10a8f6fbaa3f846ecd3808ea6a/eks_rolling_update-1.0.96-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a07e1a9c904d4a960ab24d13959b6d1", "sha256": "8914a1511299a1273dddd2c969e75d5265d50c9f7c3ac7bff65bbcb736b17a8f"}, "downloads": -1, "filename": "eks-rolling-update-1.0.96.tar.gz", "has_sig": false, "md5_digest": "8a07e1a9c904d4a960ab24d13959b6d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 16970, "upload_time": "2020-04-17T07:52:21", "upload_time_iso_8601": "2020-04-17T07:52:21.421802Z", "url": "https://files.pythonhosted.org/packages/d9/7d/97a94a71d110f9cd8ddf35a1d72033cbda3ad3ec7e9e7d64e6197c47d22e/eks-rolling-update-1.0.96.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8f1c1df264f048ea86ea7db30499794d", "sha256": "6cd076a38f9e5da60e305551b6ad1ae15a9f3e1739ddceb3a1a50fd433913cef"}, "downloads": -1, "filename": "eks_rolling_update-1.0.96-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8f1c1df264f048ea86ea7db30499794d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7", "size": 19443, "upload_time": "2020-04-17T07:52:20", "upload_time_iso_8601": "2020-04-17T07:52:20.463519Z", "url": "https://files.pythonhosted.org/packages/03/7f/9900913904467d9c72f52d64b4aacfd80a10a8f6fbaa3f846ecd3808ea6a/eks_rolling_update-1.0.96-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a07e1a9c904d4a960ab24d13959b6d1", "sha256": "8914a1511299a1273dddd2c969e75d5265d50c9f7c3ac7bff65bbcb736b17a8f"}, "downloads": -1, "filename": "eks-rolling-update-1.0.96.tar.gz", "has_sig": false, "md5_digest": "8a07e1a9c904d4a960ab24d13959b6d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 16970, "upload_time": "2020-04-17T07:52:21", "upload_time_iso_8601": "2020-04-17T07:52:21.421802Z", "url": "https://files.pythonhosted.org/packages/d9/7d/97a94a71d110f9cd8ddf35a1d72033cbda3ad3ec7e9e7d64e6197c47d22e/eks-rolling-update-1.0.96.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:09 2020"}