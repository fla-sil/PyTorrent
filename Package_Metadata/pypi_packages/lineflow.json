{"info": {"author": "Yasufumi Taniguchi", "author_email": "yasufumi.taniguchi@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# LineFlow: Framework-Agnostic NLP Data Loader in Python\n[![Build Status](https://img.shields.io/travis/tofunlp/lineflow/master.svg?logo=travis)](https://travis-ci.com/tofunlp/lineflow)\n[![codecov](https://codecov.io/gh/tofunlp/lineflow/branch/master/graph/badge.svg)](https://codecov.io/gh/tofunlp/lineflow)\n\nLineFlow is a simple text dataset loader for NLP deep learning tasks.\n\n- LineFlow was designed to use in all deep learning frameworks.\n- LineFlow enables you to build pipelines via functional APIs (`.map`, `.filter`, `.flat_map`).\n- LineFlow provides common NLP datasets.\n\nLineFlow is heavily inspired by [tensorflow.data.Dataset](https://www.tensorflow.org/api_docs/python/tf/data/Dataset) and [chainer.dataset](https://docs.chainer.org/en/stable/reference/datasets.html).\n\n## Basic Usage\n\nlineflow.TextDataset expects line-oriented text files:\n\n```py\nimport lineflow as lf\n\n\n'''/path/to/text will be expected as follows:\ni 'm a line 1 .\ni 'm a line 2 .\ni 'm a line 3 .\n'''\nds = lf.TextDataset('/path/to/text')\n\nds.first()  # \"i 'm a line 1 .\"\nds.all() # [\"i 'm a line 1 .\", \"i 'm a line 2 .\", \"i 'm a line 3 .\"]\nlen(ds)  # 3\nds.map(lambda x: x.split()).first()  # [\"i\", \"'m\", \"a\", \"line\", \"1\", \".\"]\n```\n\n## Example\n\n- Please check out the [examples](https://github.com/yasufumy/lineflow/tree/master/examples) to see how to use LineFlow, especially for tokenization, building vocabulary, and indexing.\n\nLoads Penn Treebank:\n\n```py\n>>> import lineflow.datasets as lfds\n>>> train = lfds.PennTreebank('train')\n>>> train.first()\n' aer banknote berlitz calloway centrust cluett fromstein gitano guterman hydro-quebec ipo kia memotec mlx nahb punts rake regatta rubens sim snack-food ssangyong swapo wachter '\n```\n\nSplits the sentence to the words:\n\n```py\n>>> # continuing from above\n>>> train = train.map(str.split)\n>>> train.first()\n['aer', 'banknote', 'berlitz', 'calloway', 'centrust', 'cluett', 'fromstein', 'gitano', 'guterman', 'hydro-quebec', 'ipo', 'kia', 'memotec', 'mlx', 'nahb', 'punts', 'rake', 'regatta', 'rubens', 'sim', 'snack-food', 'ssangyong', 'swapo', 'wachter']\n```\n\nObtains words in dataset:\n\n```py\n>>> # continuing from above\n>>> words = train.flat_map(lambda x: x)\n>>> words.take(5) # This is useful to build vocabulary.\n['aer', 'banknote', 'berlitz', 'calloway', 'centrust']\n```\n\nFurther more:\n\n- [How to fine-tune BERT with pytorch-lightning](https://towardsdatascience.com/how-to-fine-tune-bert-with-pytorch-lightning-ba3ad2f928d2) by [@sobamchan](https://towardsdatascience.com/@sobamchan)\n\n## Requirements\n\n- Python3.6+\n\n## Installation\n\nTo install LineFlow:\n\n```sh\npip install lineflow\n```\n\n## Datasets\n\nIs the dataset you want to use not supported? [Suggest a new dataset](https://github.com/tofunlp/lineflow/issues/new?template=dataset.md&title=Add+support+for+<dataset>) :tada:\n\n- [Commonsense Reasoning](#commonsense-reasoning)\n- [Language Modeling](#language-modeling)\n- [Machine Translation](#machine-translation)\n- [Paraphrase](#paraphrase)\n- [Question Answering](#question-answering)\n- [Sentiment Analysis](#sentiment-analysis)\n- [Sequence Tagging](#sequence-tagging)\n- [Text Summarization](#text-summarization)\n\n\n### Commonsense Reasoning\n\n#### [CommonsenseQA](https://www.tau-nlp.org/commonsenseqa)\n\nLoads the CommonsenseQA dataset:\n\n```py\n>>> import lineflow.datasets as lfds\n\n>>> train = lfds.CommonsenseQA(\"train\")\n>>> dev = lfds.CommonsenseQA(\"dev\")\n>>> test = lfds.CommonsenseQA(\"test\")\n```\n\nThe items in this datset as follows:\n\n```py\n>>> import lineflow.datasets as lfds\n\n>>> train = lfds.CommonsenseQA(\"train\")\n>>> train.first()\n{\"id\": \"075e483d21c29a511267ef62bedc0461\",\n \"answer_key\": \"A\",\n \"options\": {\"A\": \"ignore\",\n \"B\": \"enforce\",\n \"C\": \"authoritarian\",\n \"D\": \"yell at\",\n \"E\": \"avoid\"},\n \"stem\": \"The sanctions against the school were a punishing blow, and they seemed to what the efforts the school had made to change?\"}\n}\n```\n\n### Language Modeling\n\n\n#### [Penn Treebank](https://catalog.ldc.upenn.edu/docs/LDC95T7/cl93.html)\n\nLoads the Penn Treebank dataset:\n\n```py\nimport lineflow.datasets as lfds\n\ntrain = lfds.PennTreebank('train')\ndev = lfds.PennTreebank('dev')\ntest = lfds.PennTreebank('test')\n```\n#### [WikiText-103](https://blog.einstein.ai/the-wikitext-long-term-dependency-language-modeling-dataset/)\n\nLoads the WikiText-103 dataset:\n\n```py\nimport lineflow.datasets as lfds\n\ntrain = lfds.WikiText103('train')\ndev = lfds.WikiText103('dev')\ntest = lfds.WikiText103('test')\n```\n\nThis dataset is preprossed, so you can tokenize each line with `str.split`:\n\n```py\n>>> import lineflow.datasets as lfds\n>>> train = lfds.WikiText103('train').flat_map(lambda x: x.split() + ['<eos>'])\n>>> train.take(5)\n['<eos>', '=', 'Valkyria', 'Chronicles', 'III']\n```\n\n#### [WikiText-2](https://blog.einstein.ai/the-wikitext-long-term-dependency-language-modeling-dataset/) (Added by [@sobamchan](https://github.com/sobamchan), thanks.)\n\nLoads the WikiText-2 dataset:\n\n```py\nimport lineflow.datasets as lfds\n\ntrain = lfds.WikiText2('train')\ndev = lfds.WikiText2('dev')\ntest = lfds.WikiText2('test')\n```\n\nThis dataset is preprossed, so you can tokenize each line with `str.split`:\n\n```py\n>>> import lineflow.datasets as lfds\n>>> train = lfds.WikiText2('train').flat_map(lambda x: x.split() + ['<eos>'])\n>>> train.take(5)\n['<eos>', '=', 'Valkyria', 'Chronicles', 'III']\n```\n\n### Machine Translation\n\n#### [small_parallel_enja](https://github.com/odashi/small_parallel_enja):\n\nLoads the small_parallel_enja dataset which is small English-Japanese parallel corpus:\n\n```py\nimport lineflow.datasets as lfds\n\ntrain = lfds.SmallParallelEnJa('train')\ndev = lfds.SmallParallelEnJa('dev')\ntest = lfd.SmallParallelEnJa('test')\n```\n\nThis dataset is preprossed, so you can tokenize each line with `str.split`:\n\n```py\n>>> import lineflow.datasets as lfds\n>>> train = lfds.SmallParallelEnJa('train').map(lambda x: (x[0].split(), x[1].split()))\n>>> train.first()\n(['i', 'can', \"'t\", 'tell', 'who', 'will', 'arrive', 'first', '.'], ['\u8ab0', '\u304c', '\u4e00\u756a', '\u306b', '\u7740', '\u304f', '\u304b', '\u79c1', '\u306b', '\u306f', '\u5206\u304b', '\u308a', '\u307e', '\u305b', '\u3093', '\u3002']\n```\n\n#### [WMT 14](http://www.statmt.org/wmt14/)\n\nLoads the WMT14 dataset:\n\n```py\nimport lineflow.datasets as lfds\n\ntrain = lfds.Wmt14('train')\ndev = lfds.Wmt14('dev')\ntest = lfd.Wmt14('test')\n```\n\n### Paraphrase\n\n#### [Microsoft Research Paraphrase Corpus](https://www.microsoft.com/en-us/download/details.aspx?id=52398):\n\nLoads the Miscrosoft Research Paraphrase Corpus:\n\n```py\nimport lineflow.datasets as lfds\n\ntrain = lfds.MsrParaphrase('train')\ntest = lfds.MsrParaphrase('test')\n```\n\nThe item in this dataset as follows:\n\n```py\n>>> import lineflow.datasets as lfds\n>>> train = lfds.MsrParaphrase('train')\n>>> train.first()\n{'quality': '1',\n 'id1': '702876',\n 'id2': '702977',\n 'string1': 'Amrozi accused his brother, whom he called \"the witness\", of deliberately distorting his evidence.',\n 'string2': 'Referring to him as only \"the witness\", Amrozi accused his brother of deliberately distorting his evidence.'\n}\n```\n\n### Question Answering\n\n[SQuAD](https://rajpurkar.github.io/SQuAD-explorer/):\n\nLoads the SQuAD dataset:\n\n```py\nimport lineflow.datasets as lfds\n\ntrain = lfds.Squad('train')\ndev = lfds.Squad('dev')\n```\n\nThe item in this dataset as follows:\n\n```py\n>>> import lineflow.datasets as lfds\n>>> train = lfds.Squad('train')\n>>> train.first()\n{'answers': [{'answer_start': 515, 'text': 'Saint Bernadette Soubirous'}],\n 'question': 'To whom did the Virgin Mary allegedly appear in 1858 in Lourdes France?',\n 'id': '5733be284776f41900661182',\n 'title': 'University_of_Notre_Dame',\n 'context': 'Architecturally, the school has a Catholic character. Atop the Main Building\\'s gold dome is a golden statue of the Virgin Mary. Immediately in front of the Main Building and facing it, is a copper statue of Christ with arms upraised with the legend \"Venite Ad Me Omnes\". Next to the Main Building is the Basilica of the Sacred Heart. Immediately behind the basilica is the Grotto, a Marian place of prayer and reflection. It is a replica of the grotto at Lourdes, France where the Virgin Mary reputedly appeared to Saint Bernadette Soubirous in 1858. At the end of the main drive (and in a direct line that connects through 3 statues and the Gold Dome), is a simple, modern stone statue of Mary.'}\n```\n\n### Sentiment Analysis\n\n#### [IMDB](http://ai.stanford.edu/~amaas/data/sentiment/):\n\nLoads the IMDB dataset:\n\n```py\nimport lineflow.datasets as lfds\n\ntrain = lfds.Imdb('train')\ntest = lfds.Imdb('test')\n```\n\nThe item in this dataset as follows:\n\n```py\n>>> import lineflow.datasets as lfds\n>>> train = lfds.Imdb('train')\n>>> train.first()\n('For a movie that gets no respect there sure are a lot of memorable quotes listed for this gem. Imagine a movie where Joe Piscopo is actually funny! Maureen Stapleton is a scene stealer. The Moroni character is an absolute scream. Watch for Alan \"The Skipper\" Hale jr. as a police Sgt.', 0)\n```\n\n### Sequence Tagging\n\n#### [CoNLL2000](https://www.clips.uantwerpen.be/conll2000/chunking/)\n\nLoads the CoNLL2000 dataset:\n\n```py\nimport lineflow.datasets as lfds\n\ntrain = lfds.Conll2000('train')\ntest = lfds.Conll2000('test')\n```\n\n### Text Summarization\n\n#### [CNN / Daily Mail](https://github.com/harvardnlp/sent-summary):\n\nLoads the CNN / Daily Mail dataset:\n\n```py\nimport lineflow.datasets as lfds\n\ntrain = lfds.CnnDailymail('train')\ndev = lfds.CnnDailymail('dev')\ntest = lfds.CnnDailymail('test')\n```\n\nThis dataset is preprossed, so you can tokenize each line with `str.split`:\n\n```py\n>>> import lineflow.datasets as lfds\n>>> train = lfds.CnnDailymail('train').map(lambda x: (x[0].split(), x[1].split()))\n>>> train.first()\n... # the output is omitted because it's too long to display here.\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yasufumy/lineflow", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lineflow", "package_url": "https://pypi.org/project/lineflow/", "platform": "", "project_url": "https://pypi.org/project/lineflow/", "project_urls": {"Homepage": "https://github.com/yasufumy/lineflow"}, "release_url": "https://pypi.org/project/lineflow/0.6.4/", "requires_dist": null, "requires_python": "", "summary": "Lightweight NLP Data Loader for All Deep Learning Frameworks in Python", "version": "0.6.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>LineFlow: Framework-Agnostic NLP Data Loader in Python</h1>\n<p><a href=\"https://travis-ci.com/tofunlp/lineflow\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed70e088ef2f07a46097fdb986acf5a5f78f019a/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f746f66756e6c702f6c696e65666c6f772f6d61737465722e7376673f6c6f676f3d747261766973\"></a>\n<a href=\"https://codecov.io/gh/tofunlp/lineflow\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d280d6b87cbe7302653e919cfeb6917015e6e826/68747470733a2f2f636f6465636f762e696f2f67682f746f66756e6c702f6c696e65666c6f772f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>LineFlow is a simple text dataset loader for NLP deep learning tasks.</p>\n<ul>\n<li>LineFlow was designed to use in all deep learning frameworks.</li>\n<li>LineFlow enables you to build pipelines via functional APIs (<code>.map</code>, <code>.filter</code>, <code>.flat_map</code>).</li>\n<li>LineFlow provides common NLP datasets.</li>\n</ul>\n<p>LineFlow is heavily inspired by <a href=\"https://www.tensorflow.org/api_docs/python/tf/data/Dataset\" rel=\"nofollow\">tensorflow.data.Dataset</a> and <a href=\"https://docs.chainer.org/en/stable/reference/datasets.html\" rel=\"nofollow\">chainer.dataset</a>.</p>\n<h2>Basic Usage</h2>\n<p>lineflow.TextDataset expects line-oriented text files:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lineflow</span> <span class=\"k\">as</span> <span class=\"nn\">lf</span>\n\n\n<span class=\"sd\">'''/path/to/text will be expected as follows:</span>\n<span class=\"sd\">i 'm a line 1 .</span>\n<span class=\"sd\">i 'm a line 2 .</span>\n<span class=\"sd\">i 'm a line 3 .</span>\n<span class=\"sd\">'''</span>\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">lf</span><span class=\"o\">.</span><span class=\"n\">TextDataset</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/text'</span><span class=\"p\">)</span>\n\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>  <span class=\"c1\"># \"i 'm a line 1 .\"</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span> <span class=\"c1\"># [\"i 'm a line 1 .\", \"i 'm a line 2 .\", \"i 'm a line 3 .\"]</span>\n<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">)</span>  <span class=\"c1\"># 3</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>  <span class=\"c1\"># [\"i\", \"'m\", \"a\", \"line\", \"1\", \".\"]</span>\n</pre>\n<h2>Example</h2>\n<ul>\n<li>Please check out the <a href=\"https://github.com/yasufumy/lineflow/tree/master/examples\" rel=\"nofollow\">examples</a> to see how to use LineFlow, especially for tokenization, building vocabulary, and indexing.</li>\n</ul>\n<p>Loads Penn Treebank:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">PennTreebank</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n<span class=\"s1\">' aer banknote berlitz calloway centrust cluett fromstein gitano guterman hydro-quebec ipo kia memotec mlx nahb punts rake regatta rubens sim snack-food ssangyong swapo wachter '</span>\n</pre>\n<p>Splits the sentence to the words:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># continuing from above</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"s1\">'aer'</span><span class=\"p\">,</span> <span class=\"s1\">'banknote'</span><span class=\"p\">,</span> <span class=\"s1\">'berlitz'</span><span class=\"p\">,</span> <span class=\"s1\">'calloway'</span><span class=\"p\">,</span> <span class=\"s1\">'centrust'</span><span class=\"p\">,</span> <span class=\"s1\">'cluett'</span><span class=\"p\">,</span> <span class=\"s1\">'fromstein'</span><span class=\"p\">,</span> <span class=\"s1\">'gitano'</span><span class=\"p\">,</span> <span class=\"s1\">'guterman'</span><span class=\"p\">,</span> <span class=\"s1\">'hydro-quebec'</span><span class=\"p\">,</span> <span class=\"s1\">'ipo'</span><span class=\"p\">,</span> <span class=\"s1\">'kia'</span><span class=\"p\">,</span> <span class=\"s1\">'memotec'</span><span class=\"p\">,</span> <span class=\"s1\">'mlx'</span><span class=\"p\">,</span> <span class=\"s1\">'nahb'</span><span class=\"p\">,</span> <span class=\"s1\">'punts'</span><span class=\"p\">,</span> <span class=\"s1\">'rake'</span><span class=\"p\">,</span> <span class=\"s1\">'regatta'</span><span class=\"p\">,</span> <span class=\"s1\">'rubens'</span><span class=\"p\">,</span> <span class=\"s1\">'sim'</span><span class=\"p\">,</span> <span class=\"s1\">'snack-food'</span><span class=\"p\">,</span> <span class=\"s1\">'ssangyong'</span><span class=\"p\">,</span> <span class=\"s1\">'swapo'</span><span class=\"p\">,</span> <span class=\"s1\">'wachter'</span><span class=\"p\">]</span>\n</pre>\n<p>Obtains words in dataset:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># continuing from above</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">words</span> <span class=\"o\">=</span> <span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">flat_map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span> <span class=\"c1\"># This is useful to build vocabulary.</span>\n<span class=\"p\">[</span><span class=\"s1\">'aer'</span><span class=\"p\">,</span> <span class=\"s1\">'banknote'</span><span class=\"p\">,</span> <span class=\"s1\">'berlitz'</span><span class=\"p\">,</span> <span class=\"s1\">'calloway'</span><span class=\"p\">,</span> <span class=\"s1\">'centrust'</span><span class=\"p\">]</span>\n</pre>\n<p>Further more:</p>\n<ul>\n<li><a href=\"https://towardsdatascience.com/how-to-fine-tune-bert-with-pytorch-lightning-ba3ad2f928d2\" rel=\"nofollow\">How to fine-tune BERT with pytorch-lightning</a> by <a href=\"https://towardsdatascience.com/@sobamchan\" rel=\"nofollow\">@sobamchan</a></li>\n</ul>\n<h2>Requirements</h2>\n<ul>\n<li>Python3.6+</li>\n</ul>\n<h2>Installation</h2>\n<p>To install LineFlow:</p>\n<pre>pip install lineflow\n</pre>\n<h2>Datasets</h2>\n<p>Is the dataset you want to use not supported? <a href=\"https://github.com/tofunlp/lineflow/issues/new?template=dataset.md&amp;title=Add+support+for+%3Cdataset%3E\" rel=\"nofollow\">Suggest a new dataset</a> :tada:</p>\n<ul>\n<li><a href=\"#commonsense-reasoning\" rel=\"nofollow\">Commonsense Reasoning</a></li>\n<li><a href=\"#language-modeling\" rel=\"nofollow\">Language Modeling</a></li>\n<li><a href=\"#machine-translation\" rel=\"nofollow\">Machine Translation</a></li>\n<li><a href=\"#paraphrase\" rel=\"nofollow\">Paraphrase</a></li>\n<li><a href=\"#question-answering\" rel=\"nofollow\">Question Answering</a></li>\n<li><a href=\"#sentiment-analysis\" rel=\"nofollow\">Sentiment Analysis</a></li>\n<li><a href=\"#sequence-tagging\" rel=\"nofollow\">Sequence Tagging</a></li>\n<li><a href=\"#text-summarization\" rel=\"nofollow\">Text Summarization</a></li>\n</ul>\n<h3>Commonsense Reasoning</h3>\n<h4><a href=\"https://www.tau-nlp.org/commonsenseqa\" rel=\"nofollow\">CommonsenseQA</a></h4>\n<p>Loads the CommonsenseQA dataset:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">CommonsenseQA</span><span class=\"p\">(</span><span class=\"s2\">\"train\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">CommonsenseQA</span><span class=\"p\">(</span><span class=\"s2\">\"dev\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">CommonsenseQA</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">)</span>\n</pre>\n<p>The items in this datset as follows:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">CommonsenseQA</span><span class=\"p\">(</span><span class=\"s2\">\"train\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"075e483d21c29a511267ef62bedc0461\"</span><span class=\"p\">,</span>\n <span class=\"s2\">\"answer_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"A\"</span><span class=\"p\">,</span>\n <span class=\"s2\">\"options\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"A\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ignore\"</span><span class=\"p\">,</span>\n <span class=\"s2\">\"B\"</span><span class=\"p\">:</span> <span class=\"s2\">\"enforce\"</span><span class=\"p\">,</span>\n <span class=\"s2\">\"C\"</span><span class=\"p\">:</span> <span class=\"s2\">\"authoritarian\"</span><span class=\"p\">,</span>\n <span class=\"s2\">\"D\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yell at\"</span><span class=\"p\">,</span>\n <span class=\"s2\">\"E\"</span><span class=\"p\">:</span> <span class=\"s2\">\"avoid\"</span><span class=\"p\">},</span>\n <span class=\"s2\">\"stem\"</span><span class=\"p\">:</span> <span class=\"s2\">\"The sanctions against the school were a punishing blow, and they seemed to what the efforts the school had made to change?\"</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Language Modeling</h3>\n<h4><a href=\"https://catalog.ldc.upenn.edu/docs/LDC95T7/cl93.html\" rel=\"nofollow\">Penn Treebank</a></h4>\n<p>Loads the Penn Treebank dataset:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n\n<span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">PennTreebank</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">PennTreebank</span><span class=\"p\">(</span><span class=\"s1\">'dev'</span><span class=\"p\">)</span>\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">PennTreebank</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n<h4><a href=\"https://blog.einstein.ai/the-wikitext-long-term-dependency-language-modeling-dataset/\" rel=\"nofollow\">WikiText-103</a></h4>\n<p>Loads the WikiText-103 dataset:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n\n<span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">WikiText103</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">WikiText103</span><span class=\"p\">(</span><span class=\"s1\">'dev'</span><span class=\"p\">)</span>\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">WikiText103</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n<p>This dataset is preprossed, so you can tokenize each line with <code>str.split</code>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">WikiText103</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">flat_map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"s1\">'&lt;eos&gt;'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">'&lt;eos&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'='</span><span class=\"p\">,</span> <span class=\"s1\">'Valkyria'</span><span class=\"p\">,</span> <span class=\"s1\">'Chronicles'</span><span class=\"p\">,</span> <span class=\"s1\">'III'</span><span class=\"p\">]</span>\n</pre>\n<h4><a href=\"https://blog.einstein.ai/the-wikitext-long-term-dependency-language-modeling-dataset/\" rel=\"nofollow\">WikiText-2</a> (Added by <a href=\"https://github.com/sobamchan\" rel=\"nofollow\">@sobamchan</a>, thanks.)</h4>\n<p>Loads the WikiText-2 dataset:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n\n<span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">WikiText2</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">WikiText2</span><span class=\"p\">(</span><span class=\"s1\">'dev'</span><span class=\"p\">)</span>\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">WikiText2</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n<p>This dataset is preprossed, so you can tokenize each line with <code>str.split</code>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">WikiText2</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">flat_map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"s1\">'&lt;eos&gt;'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">'&lt;eos&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'='</span><span class=\"p\">,</span> <span class=\"s1\">'Valkyria'</span><span class=\"p\">,</span> <span class=\"s1\">'Chronicles'</span><span class=\"p\">,</span> <span class=\"s1\">'III'</span><span class=\"p\">]</span>\n</pre>\n<h3>Machine Translation</h3>\n<h4><a href=\"https://github.com/odashi/small_parallel_enja\" rel=\"nofollow\">small_parallel_enja</a>:</h4>\n<p>Loads the small_parallel_enja dataset which is small English-Japanese parallel corpus:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n\n<span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">SmallParallelEnJa</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">SmallParallelEnJa</span><span class=\"p\">(</span><span class=\"s1\">'dev'</span><span class=\"p\">)</span>\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">lfd</span><span class=\"o\">.</span><span class=\"n\">SmallParallelEnJa</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n<p>This dataset is preprossed, so you can tokenize each line with <code>str.split</code>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">SmallParallelEnJa</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(),</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n<span class=\"p\">([</span><span class=\"s1\">'i'</span><span class=\"p\">,</span> <span class=\"s1\">'can'</span><span class=\"p\">,</span> <span class=\"s2\">\"'t\"</span><span class=\"p\">,</span> <span class=\"s1\">'tell'</span><span class=\"p\">,</span> <span class=\"s1\">'who'</span><span class=\"p\">,</span> <span class=\"s1\">'will'</span><span class=\"p\">,</span> <span class=\"s1\">'arrive'</span><span class=\"p\">,</span> <span class=\"s1\">'first'</span><span class=\"p\">,</span> <span class=\"s1\">'.'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'\u8ab0'</span><span class=\"p\">,</span> <span class=\"s1\">'\u304c'</span><span class=\"p\">,</span> <span class=\"s1\">'\u4e00\u756a'</span><span class=\"p\">,</span> <span class=\"s1\">'\u306b'</span><span class=\"p\">,</span> <span class=\"s1\">'\u7740'</span><span class=\"p\">,</span> <span class=\"s1\">'\u304f'</span><span class=\"p\">,</span> <span class=\"s1\">'\u304b'</span><span class=\"p\">,</span> <span class=\"s1\">'\u79c1'</span><span class=\"p\">,</span> <span class=\"s1\">'\u306b'</span><span class=\"p\">,</span> <span class=\"s1\">'\u306f'</span><span class=\"p\">,</span> <span class=\"s1\">'\u5206\u304b'</span><span class=\"p\">,</span> <span class=\"s1\">'\u308a'</span><span class=\"p\">,</span> <span class=\"s1\">'\u307e'</span><span class=\"p\">,</span> <span class=\"s1\">'\u305b'</span><span class=\"p\">,</span> <span class=\"s1\">'\u3093'</span><span class=\"p\">,</span> <span class=\"s1\">'\u3002'</span><span class=\"p\">]</span>\n</pre>\n<h4><a href=\"http://www.statmt.org/wmt14/\" rel=\"nofollow\">WMT 14</a></h4>\n<p>Loads the WMT14 dataset:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n\n<span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">Wmt14</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">Wmt14</span><span class=\"p\">(</span><span class=\"s1\">'dev'</span><span class=\"p\">)</span>\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">lfd</span><span class=\"o\">.</span><span class=\"n\">Wmt14</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n<h3>Paraphrase</h3>\n<h4><a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=52398\" rel=\"nofollow\">Microsoft Research Paraphrase Corpus</a>:</h4>\n<p>Loads the Miscrosoft Research Paraphrase Corpus:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n\n<span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">MsrParaphrase</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">MsrParaphrase</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n<p>The item in this dataset as follows:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">MsrParaphrase</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">'quality'</span><span class=\"p\">:</span> <span class=\"s1\">'1'</span><span class=\"p\">,</span>\n <span class=\"s1\">'id1'</span><span class=\"p\">:</span> <span class=\"s1\">'702876'</span><span class=\"p\">,</span>\n <span class=\"s1\">'id2'</span><span class=\"p\">:</span> <span class=\"s1\">'702977'</span><span class=\"p\">,</span>\n <span class=\"s1\">'string1'</span><span class=\"p\">:</span> <span class=\"s1\">'Amrozi accused his brother, whom he called \"the witness\", of deliberately distorting his evidence.'</span><span class=\"p\">,</span>\n <span class=\"s1\">'string2'</span><span class=\"p\">:</span> <span class=\"s1\">'Referring to him as only \"the witness\", Amrozi accused his brother of deliberately distorting his evidence.'</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Question Answering</h3>\n<p><a href=\"https://rajpurkar.github.io/SQuAD-explorer/\" rel=\"nofollow\">SQuAD</a>:</p>\n<p>Loads the SQuAD dataset:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n\n<span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">Squad</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">Squad</span><span class=\"p\">(</span><span class=\"s1\">'dev'</span><span class=\"p\">)</span>\n</pre>\n<p>The item in this dataset as follows:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">Squad</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">'answers'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'answer_start'</span><span class=\"p\">:</span> <span class=\"mi\">515</span><span class=\"p\">,</span> <span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'Saint Bernadette Soubirous'</span><span class=\"p\">}],</span>\n <span class=\"s1\">'question'</span><span class=\"p\">:</span> <span class=\"s1\">'To whom did the Virgin Mary allegedly appear in 1858 in Lourdes France?'</span><span class=\"p\">,</span>\n <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"s1\">'5733be284776f41900661182'</span><span class=\"p\">,</span>\n <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'University_of_Notre_Dame'</span><span class=\"p\">,</span>\n <span class=\"s1\">'context'</span><span class=\"p\">:</span> <span class=\"s1\">'Architecturally, the school has a Catholic character. Atop the Main Building</span><span class=\"se\">\\'</span><span class=\"s1\">s gold dome is a golden statue of the Virgin Mary. Immediately in front of the Main Building and facing it, is a copper statue of Christ with arms upraised with the legend \"Venite Ad Me Omnes\". Next to the Main Building is the Basilica of the Sacred Heart. Immediately behind the basilica is the Grotto, a Marian place of prayer and reflection. It is a replica of the grotto at Lourdes, France where the Virgin Mary reputedly appeared to Saint Bernadette Soubirous in 1858. At the end of the main drive (and in a direct line that connects through 3 statues and the Gold Dome), is a simple, modern stone statue of Mary.'</span><span class=\"p\">}</span>\n</pre>\n<h3>Sentiment Analysis</h3>\n<h4><a href=\"http://ai.stanford.edu/%7Eamaas/data/sentiment/\" rel=\"nofollow\">IMDB</a>:</h4>\n<p>Loads the IMDB dataset:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n\n<span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">Imdb</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">Imdb</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n<p>The item in this dataset as follows:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">Imdb</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n<span class=\"p\">(</span><span class=\"s1\">'For a movie that gets no respect there sure are a lot of memorable quotes listed for this gem. Imagine a movie where Joe Piscopo is actually funny! Maureen Stapleton is a scene stealer. The Moroni character is an absolute scream. Watch for Alan \"The Skipper\" Hale jr. as a police Sgt.'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<h3>Sequence Tagging</h3>\n<h4><a href=\"https://www.clips.uantwerpen.be/conll2000/chunking/\" rel=\"nofollow\">CoNLL2000</a></h4>\n<p>Loads the CoNLL2000 dataset:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n\n<span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">Conll2000</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">Conll2000</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n<h3>Text Summarization</h3>\n<h4><a href=\"https://github.com/harvardnlp/sent-summary\" rel=\"nofollow\">CNN / Daily Mail</a>:</h4>\n<p>Loads the CNN / Daily Mail dataset:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n\n<span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">CnnDailymail</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span>\n<span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">CnnDailymail</span><span class=\"p\">(</span><span class=\"s1\">'dev'</span><span class=\"p\">)</span>\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">CnnDailymail</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n<p>This dataset is preprossed, so you can tokenize each line with <code>str.split</code>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">lineflow.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">lfds</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">lfds</span><span class=\"o\">.</span><span class=\"n\">CnnDailymail</span><span class=\"p\">(</span><span class=\"s1\">'train'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(),</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n<span class=\"o\">...</span> <span class=\"c1\"># the output is omitted because it's too long to display here.</span>\n</pre>\n\n          </div>"}, "last_serial": 6491259, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "aaffff6fa52d19fd925db7914a8b6695", "sha256": "22a85cdd04b8862cc49a565a323fbba49930e42ecadec94e068ef72be2b203bb"}, "downloads": -1, "filename": "lineflow-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "aaffff6fa52d19fd925db7914a8b6695", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3542, "upload_time": "2019-02-25T01:13:14", "upload_time_iso_8601": "2019-02-25T01:13:14.399353Z", "url": "https://files.pythonhosted.org/packages/6d/ed/1852990284dbb66c96ee1be01738ef31186b798c47fd5df1aa442518d36e/lineflow-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2df31c498af888928c6cb5a8be310082", "sha256": "29c060890258326d5a35a1fe6ab87b36e0b5748136b8d3c6134c62a6f4dd4b2c"}, "downloads": -1, "filename": "lineflow-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2df31c498af888928c6cb5a8be310082", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2028, "upload_time": "2019-02-25T01:13:16", "upload_time_iso_8601": "2019-02-25T01:13:16.449589Z", "url": "https://files.pythonhosted.org/packages/49/39/bf86e22cb4c046ebb422bceb04dac08b243b917b21ff85bd8d5b37035eb7/lineflow-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e6c05b505b6d3a40df1b377cde476d4b", "sha256": "22475c2d1c754eac163253316114695122c753c70dec17a047b6581ac9c4993b"}, "downloads": -1, "filename": "lineflow-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e6c05b505b6d3a40df1b377cde476d4b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3566, "upload_time": "2019-02-25T08:01:05", "upload_time_iso_8601": "2019-02-25T08:01:05.123822Z", "url": "https://files.pythonhosted.org/packages/18/1b/4f3401e2950e983082e0d68a84fa933025b6be3f207ba0c77d559ef0e8f8/lineflow-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c275b3a6812b05b8e8ede14df0e6da62", "sha256": "a27fc1eb22ef89b3516d22519303bcd1a2f02a80a8f5492bcd4e38eeb623d9c1"}, "downloads": -1, "filename": "lineflow-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c275b3a6812b05b8e8ede14df0e6da62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2054, "upload_time": "2019-02-25T08:01:06", "upload_time_iso_8601": "2019-02-25T08:01:06.563983Z", "url": "https://files.pythonhosted.org/packages/55/a9/e6f0b664ec37e1bef7ee12317626ae887217f162dccca2d53416e09c981d/lineflow-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ca0c1e0a85a47216a6806891dbeab2d4", "sha256": "3966e38f02a15ab5b310975ac52863ac5ce129cc042b666cb61d1542035d41ae"}, "downloads": -1, "filename": "lineflow-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ca0c1e0a85a47216a6806891dbeab2d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4216, "upload_time": "2019-02-26T04:42:22", "upload_time_iso_8601": "2019-02-26T04:42:22.660473Z", "url": "https://files.pythonhosted.org/packages/b5/fc/a7fd0bfaa8c3f9ab88419852d914df2adf2cc8a1db11e9504422c4220337/lineflow-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b61e68485a4b724f57efe4b1bc7124d", "sha256": "5bcb2b4198ca2c3496435e9de4fc367458437c9f315b26b1aa32668b3f4868f8"}, "downloads": -1, "filename": "lineflow-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3b61e68485a4b724f57efe4b1bc7124d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2874, "upload_time": "2019-02-26T04:42:25", "upload_time_iso_8601": "2019-02-26T04:42:25.215784Z", "url": "https://files.pythonhosted.org/packages/32/ef/8294e763b3c37a436e6e2fce80561f5d479013d67d8df57eaa43ea5fe059/lineflow-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f7850616e2a69ed1778f368866cc7ece", "sha256": "2b4a3ec0941522eb3c955c6ad9c13eee8dfb5b6de5d2cb2943de21677f1a74f5"}, "downloads": -1, "filename": "lineflow-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f7850616e2a69ed1778f368866cc7ece", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4424, "upload_time": "2019-02-28T05:40:31", "upload_time_iso_8601": "2019-02-28T05:40:31.988639Z", "url": "https://files.pythonhosted.org/packages/d8/2a/ab00ac9c6637487330682f0ddb31dd7637b7c82df9e02262b16dc82a1485/lineflow-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70845716ba0e5e432a9297907dd02eb5", "sha256": "f51cd0f98e87837e40b9897ac3284c45911c13b5059f1a4cc1d9f13778d77a51"}, "downloads": -1, "filename": "lineflow-0.1.3.tar.gz", "has_sig": false, "md5_digest": "70845716ba0e5e432a9297907dd02eb5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3092, "upload_time": "2019-02-28T05:40:33", "upload_time_iso_8601": "2019-02-28T05:40:33.270702Z", "url": "https://files.pythonhosted.org/packages/df/19/fb0c514447456aa54f563877c4096a03b63d7a120f425ccd4f784b5f40f1/lineflow-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "7ed53e7b4853eae68f1280e9fd2f2a28", "sha256": "1464a8cbb233e48fd72d0215e7a458858146df65600e9aeadfcf7f0fc2f00f3e"}, "downloads": -1, "filename": "lineflow-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "7ed53e7b4853eae68f1280e9fd2f2a28", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4492, "upload_time": "2019-03-04T00:29:52", "upload_time_iso_8601": "2019-03-04T00:29:52.282051Z", "url": "https://files.pythonhosted.org/packages/4a/c3/6a382f3a3aaf030af0c0a4bfcc4f836297aac5ae6b0c3cce6e0fa0444f80/lineflow-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21cd9b2131a369cd204c7437a6928c63", "sha256": "a65a0d3969cfd8bbdc6597277bb52860efe7fbdb3f3cf2dfe31bcd7928c8e04f"}, "downloads": -1, "filename": "lineflow-0.1.4.tar.gz", "has_sig": false, "md5_digest": "21cd9b2131a369cd204c7437a6928c63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3333, "upload_time": "2019-03-04T00:29:54", "upload_time_iso_8601": "2019-03-04T00:29:54.033378Z", "url": "https://files.pythonhosted.org/packages/4f/cf/d0691616e7fc6868d3d752c81d11b29be53c9f6c2415b0dea3b1d2cdc8ec/lineflow-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "ed5938ccf4fb006da2dc3c7eb1c1ee59", "sha256": "e12bf70b77a9251d18eb9c489050e59cd1e587e8095f83be495fe4c781471bd1"}, "downloads": -1, "filename": "lineflow-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "ed5938ccf4fb006da2dc3c7eb1c1ee59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4536, "upload_time": "2019-03-07T03:38:23", "upload_time_iso_8601": "2019-03-07T03:38:23.138997Z", "url": "https://files.pythonhosted.org/packages/e2/c8/251ac667c6ba72ecc790337591a57e6334d0c7ccb4436f4818406dc916c5/lineflow-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d45669b1f97da4822fd6e773cf8d931", "sha256": "5b9a73f338b54d0e25fab6573fde1e6e638cfeec12fc045a505341d704d493af"}, "downloads": -1, "filename": "lineflow-0.1.5.tar.gz", "has_sig": false, "md5_digest": "2d45669b1f97da4822fd6e773cf8d931", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3396, "upload_time": "2019-03-07T03:38:24", "upload_time_iso_8601": "2019-03-07T03:38:24.729700Z", "url": "https://files.pythonhosted.org/packages/7d/c0/e3f5e4a96b18cb330039d79ea9aeeeb8bc2e8663206bb847b3700bc9140c/lineflow-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "52b00aa60d13095ebb58e958c2293ebf", "sha256": "7407f7d2541f441c28aacaaba161a4bea8414845aafbe7f9ecf202d2add577bf"}, "downloads": -1, "filename": "lineflow-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "52b00aa60d13095ebb58e958c2293ebf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4575, "upload_time": "2019-03-07T03:49:46", "upload_time_iso_8601": "2019-03-07T03:49:46.023411Z", "url": "https://files.pythonhosted.org/packages/be/88/9f0fdc7de6cfcf7f2eb9892ef502a385787545720022807fbca1cb42060c/lineflow-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d5564288bcafa47ec128e02717142fa", "sha256": "d54a82de308b41b43ebdc1a627d340de30eaa5e9d3f52b86ca188d13fc2e56f8"}, "downloads": -1, "filename": "lineflow-0.1.6.tar.gz", "has_sig": false, "md5_digest": "3d5564288bcafa47ec128e02717142fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3455, "upload_time": "2019-03-07T03:49:47", "upload_time_iso_8601": "2019-03-07T03:49:47.372222Z", "url": "https://files.pythonhosted.org/packages/4c/56/6f5f6200c33b89dd87bdc1ba7b2b3c0cb4530c8ef80e125fd28cc24c18c7/lineflow-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "aed24ab4a3887bafa66fbf02708d115f", "sha256": "0612de586c23cda871ec485514d393932b7d75b11dd1a4abd10030d039cf30a3"}, "downloads": -1, "filename": "lineflow-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "aed24ab4a3887bafa66fbf02708d115f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4629, "upload_time": "2019-03-07T07:44:05", "upload_time_iso_8601": "2019-03-07T07:44:05.624511Z", "url": "https://files.pythonhosted.org/packages/8e/97/2e623b6336eef344b896b8b4a64342818e2e389dccb516a76a25ae0c5d39/lineflow-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ed4d1bac647eaa483da90175e59fb0f", "sha256": "d9c9e182e129b923bed36a51be77a6e202074876342b58faa26af6485a25034d"}, "downloads": -1, "filename": "lineflow-0.1.7.tar.gz", "has_sig": false, "md5_digest": "6ed4d1bac647eaa483da90175e59fb0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3525, "upload_time": "2019-03-07T07:44:07", "upload_time_iso_8601": "2019-03-07T07:44:07.166694Z", "url": "https://files.pythonhosted.org/packages/bd/18/9acec50723e21bbd7ecd9f32e007bff34536fe4034fba8713a5a849f8ee0/lineflow-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "ba0568e737322b835cf015eb059fcd2b", "sha256": "f4a63659cc587fffbef4095c2c03913ada94374a3a3bccd46e923fdd9bbaf9fc"}, "downloads": -1, "filename": "lineflow-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "ba0568e737322b835cf015eb059fcd2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5776, "upload_time": "2019-03-07T08:03:50", "upload_time_iso_8601": "2019-03-07T08:03:50.102784Z", "url": "https://files.pythonhosted.org/packages/49/41/992a3069d07be933c1154933aeb7a3288b1dff634fd4ad14763ca3b66015/lineflow-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ceff9d18cda890f994c80f16b9e1cfd", "sha256": "22367f126f477baf0775762735161aa76a64ca5e0bbdf5c5ed8d9a1f0a4d98d6"}, "downloads": -1, "filename": "lineflow-0.1.8.tar.gz", "has_sig": false, "md5_digest": "4ceff9d18cda890f994c80f16b9e1cfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4276, "upload_time": "2019-03-07T08:03:51", "upload_time_iso_8601": "2019-03-07T08:03:51.564009Z", "url": "https://files.pythonhosted.org/packages/8e/c2/781c06cd5e65332f20b4ba4d63f3fd455ac45c2567c61ec57bce032e60cf/lineflow-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "ee5a1ee202ecc67132839e45555bd380", "sha256": "1ade1f7349942badce2a7363f0d3797b35df2e7e092f855a957337df0d4572ad"}, "downloads": -1, "filename": "lineflow-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "ee5a1ee202ecc67132839e45555bd380", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5802, "upload_time": "2019-03-07T13:28:03", "upload_time_iso_8601": "2019-03-07T13:28:03.439412Z", "url": "https://files.pythonhosted.org/packages/1f/89/a9ec6b4cd7ec96107b2ccf16b23ebccc1057ffc2d28e0a0a9e70f83ce5f7/lineflow-0.1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e62a490145eb0931aa900d5f99db64ef", "sha256": "8ecf5dff8496cd332ceeb0d4e08dfe22d2076dbe0a70a111831d2ba5e39f637c"}, "downloads": -1, "filename": "lineflow-0.1.9.tar.gz", "has_sig": false, "md5_digest": "e62a490145eb0931aa900d5f99db64ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4329, "upload_time": "2019-03-07T13:28:04", "upload_time_iso_8601": "2019-03-07T13:28:04.986161Z", "url": "https://files.pythonhosted.org/packages/08/82/4f242e0609500702a7d86b2d8cebba3df58dfdd98497028226573dd1de77/lineflow-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a3171395be2d73e815b5cda98768347a", "sha256": "75bf29a491c90dd04c4b68976f01618f73aac456903b53c43ca911e4e33f34d8"}, "downloads": -1, "filename": "lineflow-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a3171395be2d73e815b5cda98768347a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5980, "upload_time": "2019-03-08T08:25:40", "upload_time_iso_8601": "2019-03-08T08:25:40.473979Z", "url": "https://files.pythonhosted.org/packages/86/f1/d260a7a4f3f35aed800c6dbbe3494abc9305a102c8a942505bf3b736e556/lineflow-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c2c5dfb7c822472df64483b2ebac88c", "sha256": "a83f9207ffe1bc603b60d5e9c71183b179ed6fe16bedfa7a033eb6e88c9ac6e3"}, "downloads": -1, "filename": "lineflow-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9c2c5dfb7c822472df64483b2ebac88c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4537, "upload_time": "2019-03-08T08:25:41", "upload_time_iso_8601": "2019-03-08T08:25:41.928740Z", "url": "https://files.pythonhosted.org/packages/10/1c/6a20a5e453aace22639b9624a7364d16587bee190c98c14cd4468275a1fc/lineflow-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "883a7966169fbd8048f5af908f487e79", "sha256": "17e7bfe8a542d939dc202423c6b95393aff130ea00b709d67d1d0c3120bc895f"}, "downloads": -1, "filename": "lineflow-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "883a7966169fbd8048f5af908f487e79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6569, "upload_time": "2019-03-10T05:28:03", "upload_time_iso_8601": "2019-03-10T05:28:03.156001Z", "url": "https://files.pythonhosted.org/packages/97/a7/36ca50bfdc8f38d793659137127e1a9302fefe32694940078dbb45fd536c/lineflow-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af32560ff0607c67fb709af1d0a52167", "sha256": "3b9c2b7b1f529f1501e77a703451e9dd84623e77d8d16596ef4bec3fa4dad4e2"}, "downloads": -1, "filename": "lineflow-0.2.1.tar.gz", "has_sig": false, "md5_digest": "af32560ff0607c67fb709af1d0a52167", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5054, "upload_time": "2019-03-10T05:28:04", "upload_time_iso_8601": "2019-03-10T05:28:04.667213Z", "url": "https://files.pythonhosted.org/packages/e7/3a/e32d03cac0547b662dfde3fac1392dd10b98acbf22b4fd0e9dd9235b7eb4/lineflow-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "3900ee0ea35bcef52e63a04f049c5fd2", "sha256": "435f3b507a7d5dbc695035c08adf3200c180f0fe689db21617b7a67544b4de5c"}, "downloads": -1, "filename": "lineflow-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3900ee0ea35bcef52e63a04f049c5fd2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6609, "upload_time": "2019-03-15T02:01:17", "upload_time_iso_8601": "2019-03-15T02:01:17.811680Z", "url": "https://files.pythonhosted.org/packages/a6/a9/3495e3ae39ec9333e962c96e4d55ced39ad96af17270d59650d12b57c1a0/lineflow-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0129f818379856f2a2b3551ec383d7f2", "sha256": "554c211e0d3e9411e36c121683b14c49d0d0a100ba0968b4f4a0a109955a2308"}, "downloads": -1, "filename": "lineflow-0.2.2.tar.gz", "has_sig": false, "md5_digest": "0129f818379856f2a2b3551ec383d7f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5102, "upload_time": "2019-03-15T02:01:26", "upload_time_iso_8601": "2019-03-15T02:01:26.103614Z", "url": "https://files.pythonhosted.org/packages/1f/19/b3348aae85ac5a67c9e1e418ac7b89721da9ea694e139bd92a1a582c7147/lineflow-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "34763893d8adc6d66dd35967e3f7d43b", "sha256": "f9be6b06b70cb3975ef53003ab909f7fa252aa03f4517379c285c3756610b29b"}, "downloads": -1, "filename": "lineflow-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "34763893d8adc6d66dd35967e3f7d43b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6639, "upload_time": "2019-03-15T06:19:24", "upload_time_iso_8601": "2019-03-15T06:19:24.015571Z", "url": "https://files.pythonhosted.org/packages/0b/a8/4a4b2a5fd09ab94a2c5039d1954bf78670aee02d28580df733043ce750e1/lineflow-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6b139747fd665920916d0779b91b44f", "sha256": "086d5301534dcfe9c3375565a773293d80c14d0877c9c08b382100e9dad60073"}, "downloads": -1, "filename": "lineflow-0.2.3.tar.gz", "has_sig": false, "md5_digest": "d6b139747fd665920916d0779b91b44f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5118, "upload_time": "2019-03-15T06:19:25", "upload_time_iso_8601": "2019-03-15T06:19:25.854171Z", "url": "https://files.pythonhosted.org/packages/d3/36/5c4ef4271a0f92caf2c30819e7c1f16a72f3718654637dd362c41adc0ab0/lineflow-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "e7149b47172e980ddc8da48cfad34fbf", "sha256": "9f8f204f6e8249e0bbfcb9320ee1da9c7c04eb457fc081563a0b863244c48d8d"}, "downloads": -1, "filename": "lineflow-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e7149b47172e980ddc8da48cfad34fbf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6630, "upload_time": "2019-03-15T07:11:14", "upload_time_iso_8601": "2019-03-15T07:11:14.410805Z", "url": "https://files.pythonhosted.org/packages/53/27/04b47c4252957b2466d86c7b0062d8b735dbbe039cb0ce20d633c8d46dea/lineflow-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c9a88cfc8c97737337f89f36baf5679", "sha256": "6b8a90641130ac79a80d0a9c991467e4058b1e9012777cfd28ca0b3dc098d1df"}, "downloads": -1, "filename": "lineflow-0.2.4.tar.gz", "has_sig": false, "md5_digest": "2c9a88cfc8c97737337f89f36baf5679", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5115, "upload_time": "2019-03-15T07:11:15", "upload_time_iso_8601": "2019-03-15T07:11:15.887144Z", "url": "https://files.pythonhosted.org/packages/c0/e6/397901df60186d53575935d989e7129c236175f78edbf7de490cd126d251/lineflow-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "2dfc37a5db6251955e072e700af23e00", "sha256": "db6ebc39cc8cc4d6f2baa83c317a7aa15783e065dd88d25bd1ffed9f3c036164"}, "downloads": -1, "filename": "lineflow-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "2dfc37a5db6251955e072e700af23e00", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10435, "upload_time": "2019-03-25T03:29:15", "upload_time_iso_8601": "2019-03-25T03:29:15.635421Z", "url": "https://files.pythonhosted.org/packages/4a/1b/4a3147900d6582becc4ce3bda72bf718df34375401ee206fd260d4fab0cd/lineflow-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3e763a29b3b28858118f80969b7b4c4", "sha256": "1b8b97cef81a345e583c275c238b2c5ecd246645a9a0e97192e6aab49a11b2cb"}, "downloads": -1, "filename": "lineflow-0.2.5.tar.gz", "has_sig": false, "md5_digest": "f3e763a29b3b28858118f80969b7b4c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7357, "upload_time": "2019-03-25T03:29:18", "upload_time_iso_8601": "2019-03-25T03:29:18.036942Z", "url": "https://files.pythonhosted.org/packages/2d/c3/71035d2ed340a6cdb1a917e7fab0b9de9d2605d721cf4e90396ca443c003/lineflow-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "a3b997ceb93efd846a32d128d4e4ec32", "sha256": "2cbf3fa54cd02ab822e51eed95734e675c1079f0bc34043c360e30ec529ca763"}, "downloads": -1, "filename": "lineflow-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a3b997ceb93efd846a32d128d4e4ec32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11356, "upload_time": "2019-03-27T02:17:20", "upload_time_iso_8601": "2019-03-27T02:17:20.287148Z", "url": "https://files.pythonhosted.org/packages/80/4c/5d53453be6b66ba584f92a28e53b427ccf5359816c87d88a3ef7b4916ca9/lineflow-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fddffc532ac1a1637a2515ba8788be60", "sha256": "4a6387fab3a35b24b5efab7fb67467f15c919a35e9eb1e416adad8d23b2ab0ac"}, "downloads": -1, "filename": "lineflow-0.2.6.tar.gz", "has_sig": false, "md5_digest": "fddffc532ac1a1637a2515ba8788be60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9588, "upload_time": "2019-03-27T02:17:22", "upload_time_iso_8601": "2019-03-27T02:17:22.813582Z", "url": "https://files.pythonhosted.org/packages/bb/42/b7a046e5d7f8dcbdbb65c984007b3e191eb436a72a0dacaf992fde5a0ac3/lineflow-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "c4c56daf61ad27e21673f520897fc93f", "sha256": "9d67c27ad6bfeb52c0ae7e784baae026409ac3485fca8d48966664a6a03b0b93"}, "downloads": -1, "filename": "lineflow-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "c4c56daf61ad27e21673f520897fc93f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11569, "upload_time": "2019-05-07T05:21:58", "upload_time_iso_8601": "2019-05-07T05:21:58.106726Z", "url": "https://files.pythonhosted.org/packages/53/8d/b064a90beef9c9f83b6505c76a0a4c8e7139766cca9f64ce3599d096defb/lineflow-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e28a60dee1e021579590a79fea0c9bd7", "sha256": "d61de2317dfa3d52faed3363bf16c43395b91d90222faa298c0fff3c4987e3e3"}, "downloads": -1, "filename": "lineflow-0.2.7.tar.gz", "has_sig": false, "md5_digest": "e28a60dee1e021579590a79fea0c9bd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9814, "upload_time": "2019-05-07T05:22:06", "upload_time_iso_8601": "2019-05-07T05:22:06.583420Z", "url": "https://files.pythonhosted.org/packages/b8/e9/8df500d7c88fa0b43b4071d6726bdb70ac02c7a4c61d817e9dfbca850f55/lineflow-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "41c09e48bcb542239ef931913123d91c", "sha256": "c738c9c8352a891ab0a0c12769695b7bab07d86e78af74965cd0cb2037cfe35f"}, "downloads": -1, "filename": "lineflow-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "41c09e48bcb542239ef931913123d91c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11761, "upload_time": "2019-05-09T05:34:56", "upload_time_iso_8601": "2019-05-09T05:34:56.497273Z", "url": "https://files.pythonhosted.org/packages/e4/11/b5b945013f34d69ca55d197033eb73b8f15a8eca633dcbbf1144495465b2/lineflow-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "853654f91cf365a34e807b6749c9fc81", "sha256": "e09be10499a8f4031b399c9d6799f7b3b8021dab0861acb9d511f0a3ab61fcfa"}, "downloads": -1, "filename": "lineflow-0.2.8.tar.gz", "has_sig": false, "md5_digest": "853654f91cf365a34e807b6749c9fc81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9973, "upload_time": "2019-05-09T05:34:58", "upload_time_iso_8601": "2019-05-09T05:34:58.201704Z", "url": "https://files.pythonhosted.org/packages/07/45/043041a693b0290bbb1299d90ad5d9757bc481a850fd58ce3b9435859f44/lineflow-0.2.8.tar.gz", "yanked": false}], "0.3.10": [{"comment_text": "", "digests": {"md5": "607816ccc12ba56dbfc8e4c7d8d9e0bf", "sha256": "673389ed0c03ed5366d34b90e3981da0f76f829d6b3a3d6a0dc5f4ce7834d51c"}, "downloads": -1, "filename": "lineflow-0.3.10.tar.gz", "has_sig": false, "md5_digest": "607816ccc12ba56dbfc8e4c7d8d9e0bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28270, "upload_time": "2019-07-14T09:34:11", "upload_time_iso_8601": "2019-07-14T09:34:11.718966Z", "url": "https://files.pythonhosted.org/packages/2e/26/b26d1ebaa326e5098e8dfb756a87854f01f591506c134303d7e7d7a6006f/lineflow-0.3.10.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "746360ce1731777a1544dc935f1aca74", "sha256": "2027fe6c6b1af6e5e2126196897c8e0f3fba49eb60bfbbea2134a3fb8dd95f98"}, "downloads": -1, "filename": "lineflow-0.3.3.tar.gz", "has_sig": false, "md5_digest": "746360ce1731777a1544dc935f1aca74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49415, "upload_time": "2019-06-08T17:38:09", "upload_time_iso_8601": "2019-06-08T17:38:09.033961Z", "url": "https://files.pythonhosted.org/packages/15/60/61066c8cfbb110e45af8a5ae8c65d4c56d30b2ceca684d527d53ab5c7d20/lineflow-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "360b0869d7b725f81783991ce9416f56", "sha256": "71befecaa46769d73dea61473f29df123847ef9e364027d24dda8a99985f5b26"}, "downloads": -1, "filename": "lineflow-0.3.4.tar.gz", "has_sig": false, "md5_digest": "360b0869d7b725f81783991ce9416f56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47685, "upload_time": "2019-06-10T04:08:33", "upload_time_iso_8601": "2019-06-10T04:08:33.902262Z", "url": "https://files.pythonhosted.org/packages/90/5e/cfa524d928dc90e90634554b84747fe3e940d8ca0667871b83dcbaee63f4/lineflow-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "ad7d1162c9829d04b3a8efb6c2466e75", "sha256": "5e683d39ae066bb48dc737437019ed42b706171e537d74e06aa8bbdd18939c79"}, "downloads": -1, "filename": "lineflow-0.3.5.tar.gz", "has_sig": false, "md5_digest": "ad7d1162c9829d04b3a8efb6c2466e75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49910, "upload_time": "2019-06-11T07:20:39", "upload_time_iso_8601": "2019-06-11T07:20:39.275096Z", "url": "https://files.pythonhosted.org/packages/a6/3b/4e2d607d8ffa9f2140ba782cb4f8b7c07ed4661213e98f4be346833b02cf/lineflow-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "50ffaf76508ab76d3a5a7b43d627aae0", "sha256": "c9254765b373e627303dac252cee7ef9bd36b666fe42fb5585c18576b765a7a6"}, "downloads": -1, "filename": "lineflow-0.3.6.tar.gz", "has_sig": false, "md5_digest": "50ffaf76508ab76d3a5a7b43d627aae0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52720, "upload_time": "2019-06-11T13:37:50", "upload_time_iso_8601": "2019-06-11T13:37:50.703375Z", "url": "https://files.pythonhosted.org/packages/19/09/b9a18a0dfbca4adce5f77a589771ef5115194d9b7790c8ac3af51b04d7d0/lineflow-0.3.6.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "d3897ad0db792a058b78a91f22605501", "sha256": "71284c89a74bf07d54049b4306cf00e8a7bbb82129d8c9484a9878af2169ebe2"}, "downloads": -1, "filename": "lineflow-0.3.7.tar.gz", "has_sig": false, "md5_digest": "d3897ad0db792a058b78a91f22605501", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53252, "upload_time": "2019-06-13T12:27:14", "upload_time_iso_8601": "2019-06-13T12:27:14.664948Z", "url": "https://files.pythonhosted.org/packages/ca/8a/72ca1c7e6455dd43e1c18db9c98f92f9430822e561a23311aef040ee0ffe/lineflow-0.3.7.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "41c8872fe1e9966c69dd29c9c7fbba32", "sha256": "c9dad5fece3e535d52b3f03bf1f79256ab308c671a5cdaad81fcc716c17ccd56"}, "downloads": -1, "filename": "lineflow-0.3.9.tar.gz", "has_sig": false, "md5_digest": "41c8872fe1e9966c69dd29c9c7fbba32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52460, "upload_time": "2019-06-21T00:51:44", "upload_time_iso_8601": "2019-06-21T00:51:44.654365Z", "url": "https://files.pythonhosted.org/packages/8b/77/c40d6069a4b5c3e582db9302cbcb708d20b6f957c78c4c6fec52cdfdaf3b/lineflow-0.3.9.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "72136554356128f153b8977dcfcb0ca4", "sha256": "5df1b40b450261ed9b49d46937af043e5164c812988d153a7ad5f877175483a4"}, "downloads": -1, "filename": "lineflow-0.4.0.tar.gz", "has_sig": false, "md5_digest": "72136554356128f153b8977dcfcb0ca4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27114, "upload_time": "2019-07-14T10:22:41", "upload_time_iso_8601": "2019-07-14T10:22:41.922846Z", "url": "https://files.pythonhosted.org/packages/41/c5/2df6aa0bca5c8498af391655deecf41ba3bcea8b7a855d794b6bfc1da3bb/lineflow-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "6d6ea0d8ff334965f5420b04deaffd31", "sha256": "3a638979daa367d621d5e9884ad8497ca1f802034e127f1e73bc7309f300acb7"}, "downloads": -1, "filename": "lineflow-0.4.1.tar.gz", "has_sig": false, "md5_digest": "6d6ea0d8ff334965f5420b04deaffd31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27185, "upload_time": "2019-07-15T04:44:22", "upload_time_iso_8601": "2019-07-15T04:44:22.773362Z", "url": "https://files.pythonhosted.org/packages/47/46/bee810bc2f13f324933a5cf066c53a09974bdf9180f1780086495ac7e3c8/lineflow-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "ee13716657a96f70737a3ae30f73750c", "sha256": "3fe2187ce57753b4ab80fae7111b2ff084d70781ec0ecb1b9021b33c1228349f"}, "downloads": -1, "filename": "lineflow-0.4.2.tar.gz", "has_sig": false, "md5_digest": "ee13716657a96f70737a3ae30f73750c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27223, "upload_time": "2019-07-16T02:20:12", "upload_time_iso_8601": "2019-07-16T02:20:12.604213Z", "url": "https://files.pythonhosted.org/packages/13/39/910af66d468fa743e927172c645ff52f5f407dced5f1dcc686b1ed4647e0/lineflow-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "4b31e4797ea6de682fa72e5d5720f11b", "sha256": "ac53a6dcdea659ccd59e5ca0ca6a3b34be4063ff011069f6aaafde394e9f0e44"}, "downloads": -1, "filename": "lineflow-0.4.3.tar.gz", "has_sig": false, "md5_digest": "4b31e4797ea6de682fa72e5d5720f11b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28818, "upload_time": "2019-07-16T04:23:14", "upload_time_iso_8601": "2019-07-16T04:23:14.590849Z", "url": "https://files.pythonhosted.org/packages/4e/4d/dd7ee50b6b6d6cb31d4bc34fdddb1182aee942ce5121e53f0baec0ac4f73/lineflow-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "4aec22f9e08ea66f14c2c67440f6e0b8", "sha256": "71b3e019f0fca3e4f6e74f402b3febc46c7ae5e252814b61ae2b5ffa9e4ea32c"}, "downloads": -1, "filename": "lineflow-0.4.4.tar.gz", "has_sig": false, "md5_digest": "4aec22f9e08ea66f14c2c67440f6e0b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29685, "upload_time": "2019-07-18T07:45:20", "upload_time_iso_8601": "2019-07-18T07:45:20.823653Z", "url": "https://files.pythonhosted.org/packages/4a/85/6ee884090b949d1ddc7198104c9992732933320b703f745f73fb493b24eb/lineflow-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "997c5df540978fddba35a60219eaedad", "sha256": "d359872873301c25d45af39172621d65ce176596c809d128d378599da60f0897"}, "downloads": -1, "filename": "lineflow-0.4.5.tar.gz", "has_sig": false, "md5_digest": "997c5df540978fddba35a60219eaedad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30808, "upload_time": "2019-07-23T05:29:08", "upload_time_iso_8601": "2019-07-23T05:29:08.224343Z", "url": "https://files.pythonhosted.org/packages/2b/45/209406a00231d99324ef77808b47cf972b3ab26bc9e5d4816768994baf3a/lineflow-0.4.5.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "d4858a02ed2acf45bc1244989a34721c", "sha256": "f3a90fe8b92ca1c4c9ced2a6f7f853997a1170968db2e9846171e4820067dccc"}, "downloads": -1, "filename": "lineflow-0.5.0.tar.gz", "has_sig": false, "md5_digest": "d4858a02ed2acf45bc1244989a34721c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33679, "upload_time": "2019-08-09T00:47:12", "upload_time_iso_8601": "2019-08-09T00:47:12.671618Z", "url": "https://files.pythonhosted.org/packages/a6/ab/346b1c2c7938aff6b9df9144cfcb2bcd91cba913f0177099e314ba624801/lineflow-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "c8a51004c019ea1e7c1d306d691cd217", "sha256": "106ef683a1f4b9ae8eddc1684d60cf202b7b261d0563b7924671da41287de9c9"}, "downloads": -1, "filename": "lineflow-0.6.0.tar.gz", "has_sig": false, "md5_digest": "c8a51004c019ea1e7c1d306d691cd217", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36428, "upload_time": "2019-08-19T03:38:35", "upload_time_iso_8601": "2019-08-19T03:38:35.858776Z", "url": "https://files.pythonhosted.org/packages/d9/db/4b6c66fad44a7a4ab5336ab6654c51f0cc22c010a00c2bc01b9ea406d3af/lineflow-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "0416c972acb9920691fda79ff42d5c81", "sha256": "c40b63f25d3fa78dedc33130ea2897e76070ad97d18118576b801391933f86f5"}, "downloads": -1, "filename": "lineflow-0.6.1.tar.gz", "has_sig": false, "md5_digest": "0416c972acb9920691fda79ff42d5c81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36636, "upload_time": "2019-08-19T06:40:18", "upload_time_iso_8601": "2019-08-19T06:40:18.201128Z", "url": "https://files.pythonhosted.org/packages/75/ce/500c5de5d2424925d539f1165673cc17c1df3081f7bd87e227af0b8653ed/lineflow-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "492acee30fc198144dd977cd84e6fcd3", "sha256": "b1d22669ce7942adf3c2b805ecfa6148af024ee5857b46afd098ce6c2e7715d5"}, "downloads": -1, "filename": "lineflow-0.6.2.tar.gz", "has_sig": false, "md5_digest": "492acee30fc198144dd977cd84e6fcd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35243, "upload_time": "2019-10-08T00:36:05", "upload_time_iso_8601": "2019-10-08T00:36:05.266812Z", "url": "https://files.pythonhosted.org/packages/42/59/c02fa05264bc58ff495dd6ed0296a7e2227d11f1e94d261a82c936af66b4/lineflow-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "1f05bc400358a4664dd558c729943958", "sha256": "828b9daafb94d8110bfa2c1f23d5caf96a89674f26b2c69baf3711aad48b3bb1"}, "downloads": -1, "filename": "lineflow-0.6.3.tar.gz", "has_sig": false, "md5_digest": "1f05bc400358a4664dd558c729943958", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35264, "upload_time": "2019-10-21T10:30:46", "upload_time_iso_8601": "2019-10-21T10:30:46.530913Z", "url": "https://files.pythonhosted.org/packages/be/9d/64dec26f14f44b44d8d3fcfc8630069cebc9b2aa7e8c749f7cb867bb00ea/lineflow-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "4adae82d15cf47ab73a6c08d92f0704b", "sha256": "fa88c0780eef768d25c7902466fb3e9885d9760a485572d0a70057283a23729d"}, "downloads": -1, "filename": "lineflow-0.6.4.tar.gz", "has_sig": false, "md5_digest": "4adae82d15cf47ab73a6c08d92f0704b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35046, "upload_time": "2020-01-20T23:43:09", "upload_time_iso_8601": "2020-01-20T23:43:09.689734Z", "url": "https://files.pythonhosted.org/packages/fc/09/6e8842e1c8ace250d352cf59503e3939169d8a3abe0d17115d5916054930/lineflow-0.6.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4adae82d15cf47ab73a6c08d92f0704b", "sha256": "fa88c0780eef768d25c7902466fb3e9885d9760a485572d0a70057283a23729d"}, "downloads": -1, "filename": "lineflow-0.6.4.tar.gz", "has_sig": false, "md5_digest": "4adae82d15cf47ab73a6c08d92f0704b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35046, "upload_time": "2020-01-20T23:43:09", "upload_time_iso_8601": "2020-01-20T23:43:09.689734Z", "url": "https://files.pythonhosted.org/packages/fc/09/6e8842e1c8ace250d352cf59503e3939169d8a3abe0d17115d5916054930/lineflow-0.6.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:45 2020"}