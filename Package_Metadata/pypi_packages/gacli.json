{"info": {"author": "Timid Robot Zehta", "author_email": "tim@clockwork.net", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Security", "Topic :: Utilities"], "description": "gacli\n=====\n\n``gacli`` was created for used with google-authenticator_. Thankfully, TOTP_ is\nan open standard so ``gacli`` may have additional applications.\n\nThe ``ga`` command line utility provides convenient access to TOTP verification\ncodes: ::\n\n    usage: ga [-h] [-d] [-f FILE]\n\n    Copy newline terminated TOTP verification code to Mac OS X clipboard.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -d, --debug           print debug information\n      -f FILE, --file FILE  Secret file\n\n    The debug option continually prints verification codes instead of copying a\n    single code to the clipboard.\n\n.. _google-authenticator: https://code.google.com/p/google-authenticator/\n.. _TOTP: http://en.wikipedia.org/wiki/Time-based_One-time_Password_Algorithm\n\n\nSecurity\n========\n\nThis application assumes you have secured your local computer disk or filesystem\nencryption. ``gacli`` is only safe **with encryption**:\n\n- `OS X: About FileVault 2`_\n- `EncryptedFilesystems - Community Ubuntu Documentation`_\n- `GnuPG`_\n- `GPGSuite`_ (GnuPG for Mac OS X)\n\n.. _`OS X: About FileVault 2`: https://support.apple.com/kb/ht4790\n.. _`EncryptedFilesystems - Community Ubuntu Documentation`:\n   https://help.ubuntu.com/community/EncryptedFilesystems\n.. _`GnuPG`: http://www.gnupg.org/\n.. _`GPGSuite`: https://gpgtools.org/gpgsuite.html\n\n\nInstall\n=======\n\nChoose *either* of the following installation methods:\n\n1. `Simple Global`_\n2. `VirtualEnv and User Bin`_ (recommended)\n\nSimple Global\n-------------\n\n1. Please consider, again, using the `VirtualEnv and User Bin`_ method\n2. Install the pip python module, if you have not already done so.\n\n   - `Installation -- pip documentation`_\n\n3. Install the gacli python module::\n\n        sudo pip install gacli\n\nVirtualEnv and User Bin\n-----------------------\n\nThis installation method has the following requirements:\n\n- Your ``PATH`` includes ``~/bin``\n- virtualenv_ Python module is installed\n- virtualenvwrapper_ Python module is installed\n\nInstallation:\n\n1. Create a new gacli virtualenv and install the gacli python module::\n\n        mkvirtualenv -i gacli gacli\n\n2. Symlink ``ga`` to home bin::\n\n        ln -s $(which ga) ~/bin/\n\n.. _`Installation -- pip documentation`: http://www.pip-installer.org/en/latest/installing.html\n.. _virtualenv: http://www.virtualenv.org/\n.. _virtualenvwrapper: http://www.doughellmann.com/projects/virtualenvwrapper/\n\n\nConfiguration\n=============\n\n1. See `Security`_\n2. Copy the secret key from the first line of your ``.google_authenticator``\n   and put in ``~/.ga``\n3. Change permissions::\n\n    chmod 0400 ~/.ga\n\n\nGnuPG Protection\n----------------\n\n1. Encrypt secret file::\n\n    cat ~/.ga | gpg -aes -r EMAIL > .ga.gpg\n\n2. Delete unencrypted secret file::\n\n    rm ~/.ga\n\n3. Add an alias to your ``.bashrc``::\n\n    alias gad='gpg -qd ~/.ga.gpg | ga -f -'\n\n\nRelated\n=======\n\n* mac-ssh-confirm_: Protect against SSH Agent Hijacking on Mac OS X with the\n  ability to confirm agent identities prior to each use\n\n.. _mac-ssh-confirm: https://github.com/TimZehta/mac-ssh-confirm\n\n\nRequirements\n============\n\n- Linux or Mac OS X\n\n  - Linux utilizes ``xclip`` or ``xsel``.\n  - Mac OS X utilizes ``pbcopy``\n\n- onetimepass_\n\n.. _onetimepass: https://github.com/tadeck/onetimepass\n\n\nLicense\n=======\n\n- `LICENSE.txt`_ (`MIT License`_)\n\n.. _`LICENSE.txt`:\n   https://github.com/ClockworkNet/gacli/blob/master/LICENSE.txt\n.. _`MIT License`: http://www.opensource.org/licenses/MIT", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ClockworkNet/gacli/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "gacli", "package_url": "https://pypi.org/project/gacli/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gacli/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ClockworkNet/gacli/"}, "release_url": "https://pypi.org/project/gacli/1.0.3/", "requires_dist": null, "requires_python": null, "summary": "Google Authentication command line tools", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"gacli\">\n<h2>gacli</h2>\n<p><tt>gacli</tt> was created for used with <a href=\"https://code.google.com/p/google-authenticator/\" rel=\"nofollow\">google-authenticator</a>. Thankfully, <a href=\"http://en.wikipedia.org/wiki/Time-based_One-time_Password_Algorithm\" rel=\"nofollow\">TOTP</a> is\nan open standard so <tt>gacli</tt> may have additional applications.</p>\n<p>The <tt>ga</tt> command line utility provides convenient access to TOTP verification\ncodes:</p>\n<pre>usage: ga [-h] [-d] [-f FILE]\n\nCopy newline terminated TOTP verification code to Mac OS X clipboard.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d, --debug           print debug information\n  -f FILE, --file FILE  Secret file\n\nThe debug option continually prints verification codes instead of copying a\nsingle code to the clipboard.\n</pre>\n</div>\n<div id=\"security\">\n<h2>Security</h2>\n<p>This application assumes you have secured your local computer disk or filesystem\nencryption. <tt>gacli</tt> is only safe <strong>with encryption</strong>:</p>\n<ul>\n<li><a href=\"https://support.apple.com/kb/ht4790\" rel=\"nofollow\">OS X: About FileVault 2</a></li>\n<li><a href=\"https://help.ubuntu.com/community/EncryptedFilesystems\" rel=\"nofollow\">EncryptedFilesystems - Community Ubuntu Documentation</a></li>\n<li><a href=\"http://www.gnupg.org/\" rel=\"nofollow\">GnuPG</a></li>\n<li><a href=\"https://gpgtools.org/gpgsuite.html\" rel=\"nofollow\">GPGSuite</a> (GnuPG for Mac OS X)</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Choose <em>either</em> of the following installation methods:</p>\n<ol>\n<li><a href=\"#simple-global\" rel=\"nofollow\">Simple Global</a></li>\n<li><a href=\"#virtualenv-and-user-bin\" rel=\"nofollow\">VirtualEnv and User Bin</a> (recommended)</li>\n</ol>\n<div id=\"simple-global\">\n<h3>Simple Global</h3>\n<ol>\n<li><p>Please consider, again, using the <a href=\"#virtualenv-and-user-bin\" rel=\"nofollow\">VirtualEnv and User Bin</a> method</p>\n</li>\n<li><p>Install the pip python module, if you have not already done so.</p>\n<ul>\n<li><a href=\"http://www.pip-installer.org/en/latest/installing.html\" rel=\"nofollow\">Installation \u2013 pip documentation</a></li>\n</ul>\n</li>\n<li><p>Install the gacli python module:</p>\n<pre>sudo pip install gacli\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"virtualenv-and-user-bin\">\n<h3>VirtualEnv and User Bin</h3>\n<p>This installation method has the following requirements:</p>\n<ul>\n<li>Your <tt>PATH</tt> includes <tt>~/bin</tt></li>\n<li><a href=\"http://www.virtualenv.org/\" rel=\"nofollow\">virtualenv</a> Python module is installed</li>\n<li><a href=\"http://www.doughellmann.com/projects/virtualenvwrapper/\" rel=\"nofollow\">virtualenvwrapper</a> Python module is installed</li>\n</ul>\n<p>Installation:</p>\n<ol>\n<li><p>Create a new gacli virtualenv and install the gacli python module:</p>\n<pre>mkvirtualenv -i gacli gacli\n</pre>\n</li>\n<li><p>Symlink <tt>ga</tt> to home bin:</p>\n<pre>ln -s $(which ga) ~/bin/\n</pre>\n</li>\n</ol>\n</div>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<ol>\n<li><p>See <a href=\"#security\" rel=\"nofollow\">Security</a></p>\n</li>\n<li><p>Copy the secret key from the first line of your <tt>.google_authenticator</tt>\nand put in <tt><span class=\"pre\">~/.ga</span></tt></p>\n</li>\n<li><p>Change permissions:</p>\n<pre>chmod 0400 ~/.ga\n</pre>\n</li>\n</ol>\n<div id=\"gnupg-protection\">\n<h3>GnuPG Protection</h3>\n<ol>\n<li><p>Encrypt secret file:</p>\n<pre>cat ~/.ga | gpg -aes -r EMAIL &gt; .ga.gpg\n</pre>\n</li>\n<li><p>Delete unencrypted secret file:</p>\n<pre>rm ~/.ga\n</pre>\n</li>\n<li><p>Add an alias to your <tt>.bashrc</tt>:</p>\n<pre>alias gad='gpg -qd ~/.ga.gpg | ga -f -'\n</pre>\n</li>\n</ol>\n</div>\n</div>\n<div id=\"related\">\n<h2>Related</h2>\n<ul>\n<li><a href=\"https://github.com/TimZehta/mac-ssh-confirm\" rel=\"nofollow\">mac-ssh-confirm</a>: Protect against SSH Agent Hijacking on Mac OS X with the\nability to confirm agent identities prior to each use</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Linux or Mac OS X<ul>\n<li>Linux utilizes <tt>xclip</tt> or <tt>xsel</tt>.</li>\n<li>Mac OS X utilizes <tt>pbcopy</tt></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/tadeck/onetimepass\" rel=\"nofollow\">onetimepass</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<ul>\n<li><a href=\"https://github.com/ClockworkNet/gacli/blob/master/LICENSE.txt\" rel=\"nofollow\">LICENSE.txt</a> (<a href=\"http://www.opensource.org/licenses/MIT\" rel=\"nofollow\">MIT License</a>)</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1907328, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "ec4205908068a52b2fdd5b20a084567b", "sha256": "8dbd83e7ed1a27adf611e9bd05b0cddc1dc4fe40b04cc3fdba256eab6a5ebd5b"}, "downloads": -1, "filename": "gacli-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ec4205908068a52b2fdd5b20a084567b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4689, "upload_time": "2013-10-13T22:13:06", "upload_time_iso_8601": "2013-10-13T22:13:06.361641Z", "url": "https://files.pythonhosted.org/packages/6b/c1/904ba84cf769e7af87ac76dc41a46a8d870c066e3c8582c8823656bdc80b/gacli-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "d0c2e8b937403373408669ec04ded99d", "sha256": "c305f0fd4930f035798c358410a3277eeb63785998aa55ff9a477a0609b16303"}, "downloads": -1, "filename": "gacli-1.0.2.tar.gz", "has_sig": false, "md5_digest": "d0c2e8b937403373408669ec04ded99d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5031, "upload_time": "2014-02-18T20:13:28", "upload_time_iso_8601": "2014-02-18T20:13:28.408872Z", "url": "https://files.pythonhosted.org/packages/f5/b5/d9ed88ca73d80074f64578bdc2939f5f92e4f8484b2b33007e900144c80f/gacli-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "27f4c49665cf5f1f87af9bdbf34f750e", "sha256": "924a536c9a403b0d61526838f6199a0cdc7d2906ad53c5aed7f90a976aea9a7a"}, "downloads": -1, "filename": "gacli-1.0.3.tar.gz", "has_sig": false, "md5_digest": "27f4c49665cf5f1f87af9bdbf34f750e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5337, "upload_time": "2016-01-16T12:28:44", "upload_time_iso_8601": "2016-01-16T12:28:44.296444Z", "url": "https://files.pythonhosted.org/packages/70/cf/e98e68f16f4dfb92c9f2630c8f09e6054f4e2e8955cd47915a3f6f46ac2c/gacli-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "27f4c49665cf5f1f87af9bdbf34f750e", "sha256": "924a536c9a403b0d61526838f6199a0cdc7d2906ad53c5aed7f90a976aea9a7a"}, "downloads": -1, "filename": "gacli-1.0.3.tar.gz", "has_sig": false, "md5_digest": "27f4c49665cf5f1f87af9bdbf34f750e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5337, "upload_time": "2016-01-16T12:28:44", "upload_time_iso_8601": "2016-01-16T12:28:44.296444Z", "url": "https://files.pythonhosted.org/packages/70/cf/e98e68f16f4dfb92c9f2630c8f09e6054f4e2e8955cd47915a3f6f46ac2c/gacli-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:23 2020"}