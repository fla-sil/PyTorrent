{"info": {"author": "Sumudu Tennakoon", "author_email": "mltoolkitproject@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "# MLToolKit Project \nwww.mltoolkit.org\n## Current release: PyMLToolkit [v0.1.9]\n\n<img src=\"https://raw.githubusercontent.com/sptennak/MLToolkit/master/MLToolkit.png\" height=\"200\">\n\nMLToolKit (mltk) is a Python package providing a set of user-friendly functions to help building end-to-end machine learning models in data science research, teaching or production focused projects. \n\n<img src=\"https://raw.githubusercontent.com/sptennak/MLToolkit/master/MLToolkit/image/MLTKProcess.png\" height=\"200\">\n\n## Introduction\nMLToolKit supports all stages of the machine learning application development process.\n\n## Installation\n```\npip install pymltoolkit\n```\nIf the installation failed with dependancy issues, execute the above command with --no-dependencies\n\n```\npip install pymltoolkit --no-dependencies\n```\n\n## Functions\n- Data Extraction (SQL, Flatfiles, Images, etc.)\n- Exploratory Data Analysis (statistical summary, univariate analysis, visulize distributions, etc.)\n- Feature Engineering (Supports numeric, text, date/time. Image data support will integrate in later releases of v0.1)\n- Model Building (Currently supported for binary classification and regression only)\n- Hyper Parameter Tuning [in development for v0.2]\n- Cross Validation (will integrate in later releases of v0.1)\n- Model Performance Analysis, Explain Predictions (LIME and SHAP) and Performance Comparison Between Models.\n- JSON input script for executing model building and scoring tasks.\n- Model Building UI [in development for v0.2]\n- ML Model Building Project [in development for v0.2]\n- Auto ML (automated machine learning) [in development for v0.2]\n- Model Deploymet and Serving [included, will be imporved for v0.2]\n\n## Supported Machine Learning Algorithms/Packages\n- RandomForestClassifier: scikit-learn\n- LogisticRegression: statsmodels\n- Deep Feed Forward Neural Network (DFF): tensorflow\n- Convlutional Neural Network (CNN): tensorflow\n- Gradient Boost : catboost\n- Linear Regression: statsmodels\n- RandomForestRegressor: scikit-learn\n- ... More models will be added in the future releases ...\n\n## Usage\n```python\nimport mltk\n```\n\n### Warning: Python Variable, Function or Class names \nThe Python interpreter has a number of built-in functions. It is possible to overwrite thier definitions when coding without any rasing a warning from the Python interpriter. (https://docs.python.org/3/library/functions.html)\nTherfore, AVOID THESE NAMES as your variable, function or class names.\n<table border=\"1\">\n<tr><td>abs</td><td>all</td><td>any</td><td>ascii</td><td>bin</td><td>bool</td><td>bytearray</td><td>bytes</td></tr>\n<tr><td>callable</td><td>chr</td><td>classmethod</td><td>compile</td><td>complex</td><td>delattr</td><td>dict</td><td>dir</td></tr>\n<tr><td>divmod</td><td>enumerate</td><td>eval</td><td>exec</td><td>filter</td><td>float</td><td>format</td><td>frozenset</td></tr>\n<tr><td>getattr</td><td>globals</td><td>hasattr</td><td>hash</td><td>help</td><td>hex</td><td>id</td><td>input</td></tr>\n<tr><td>int</td><td>isinstance</td><td>issubclass</td><td>iter</td><td>len</td><td>list</td><td>locals</td><td>map</td></tr>\n<tr><td>max</td><td>memoryview</td><td>min</td><td>next</td><td>object</td><td>oct</td><td>open</td><td>ord</td></tr>\n<tr><td>pow</td><td>print</td><td>property</td><td>range</td><td>repr</td><td>reversed</td><td>round</td><td>set</td></tr>\n<tr><td>setattr</td><td>slice</td><td>sorted</td><td>staticmethod</td><td>str</td><td>sum</td><td>super</td><td>tuple</td></tr>\n<tr><td>type</td><td>vars</td><td>zip</td><td>__import__</td></tr>\n</table>\n\nIf you accedently overwrite any of the built-in function (e.g. list), execute the following to bring built-in defition.\n```python\ndel(list)\n```\n\nSimilarly, avoid using special charcters and spaces in the column names of the DataFrames.\nExecute the following to remove special characters from the column names.\n```python\nData = mltk.clean_column_names(Data, replace='')\n```\n\n## MLToolkit Example\n\n### Data Loading and exploration\n```python\nimport numpy as np\nimport pandas as pd\nimport mltk as mltk\n\nData = mltk.read_data_csv(file=r'C:\\Projects\\Data\\incomedata.csv')\nData = mltk.clean_column_names(Data, replace='')\nData = mltk.add_identity_column(Data, id_label='ID', start=1, increment=1)\nDataStats = mltk.data_description(Data)\n```\n### Data Pre-processing and Feature Engineering\n```python\n# Analyze Response Target\nprint(mltk.variable_frequency(DataFrame=Data, variable='income'))\n\n# Set Target Variables\ntargetVariable = 'HighIncome'\ntargetCondition = \"income=='>50K'\" #For Binary Classification\n\nData=mltk.set_binary_target(Data, target_condition=targetCondition, target_variable=targetVariable)\nprint(mltk.variable_frequency(DataFrame=Data, variable=targetVariable))\n```\n```\n        Counts  CountsFraction%\nincome                         \n<=50K    24720         75.91904\n>50K      7841         24.08096\nTOTAL    32561        100.00000\n```\n```python\n# Flag Records to Exclude\nexcludeCondition=\"age < 18\"\naction = 'flag' # 'drop' #\nexcludeLabel = 'EXCLUDE'\nData=mltk.exclude_records(Data, exclude_ondition=excludeCondition, action=action, exclude_label=excludeLabel) # )#\n\n# Get list of uniques values in categorical variables\ncategoryVariables = set({'sex', 'nativecountry', 'race', 'occupation', 'workclass', 'maritalstatus', 'relationship'})\nprint(mltk.category_lists(Data, list(categoryVariables)))\n\n# Merge unique categorical values\ncategory_merges = [{'variable':'maritalstatus', 'category_variable':'maritalstatus', 'group_value':'Married', 'values':[\"Married-civ-spouse\", \"Married-spouse-absent\", \"Married-AF-spouse\"]}]\nData = mltk.merge_categories(Data, category_merges)\n\n# Show Frequency distribution of categorical variable\nsourceVariable='maritalstatus'\ntable = mltk.variable_frequency(Data, variable=sourceVariable, show_plot=False)\ntable.style.background_gradient(cmap='Greens').set_precision(3)\n\n# Response Rate For Categorical Variables\nmltk.variable_responses(Data, variables=categoryVariables, target_variable=targetVariable, show_output=False, show_plot=True)\n```\n# Get numeric units list\n```python\nmltk.get_number_units()\n```\n\n# Variables Manipulations\n```python\n# General form\n{\n\t'type':'category'\n\t'out_type':'cat',\n\t'include':True,\n\t'operation':'bucket',\n\t'variables': {\n\t\t'source':'age',\n\t\t'destination': None  # None for mult-variable operations, variable1 (for pair operations), variable1a (for pair sequence operation)\n\t},\n        'parameters': {\n        'labels_str': ['0', '20', '30', '40', '50', '60', 'INF'],\n        'right_inclusive':True,\n        \"default\":'OTHER',\n        \"null\": 'NA'\n    }\n}\n```\n\n```\t\nList of Avaiable Transformation\n |- Date/Numeric Transformations (transform)\n | |- normalize\n | |- datepart\n | |- dateadd\n | |- log\n | |- exponent\n | |- segment (piecewise functions)\n |- String Transformation (str_transform)\n | |- normalize\n | |- strcount\n | |- extract\n |- Multi-variable Operations (operation_mult)\n | |- expression\n |- Sequence Order Check (seq_order)\n | |- seqorder\n |- Numeric/Date Comparison* (comparison)\n | |- numdiff\n | |- ratio\n | |- datediff\n | |- rowmin (pair)\n | |- rowmax (pair)\n |- String Comparison* (str_comparison)\n | |- levenshtein\n | |- jaccard\n | |- ..more to add ..\n |- Pair comparison\n\nList of Avaiable Discrete Feature Transforms\n |- Binary Variable (condition)\n |- Numeric to Catergory (buckets)\n |- Entity Grouping (dictionary)\n |- Pair Equality/Existance (pair_equality)\n |- Category Merge(category_merge)\n```\n\n```python\n# Transform numeric variable\nrule_set = {\n    \"operation\":\"normalize\", \n    'variables': {\n        'source':'age', \n        'destination':'normalizedage'\n    },\n    \"parameters\":{\"method\":\"zscore\"}\n}\nData, transformed_variable = mltk.create_transformed_variable_task(Data, rule_set, return_variable=True)\n\n# Create Categorical Variables from continious variables\nsourceVariable='age'\ntable = mltk.histogram(Data, sourceVariable, n_bins=10, orientation='vertical', density=True, show_plot=True)\nprint(table)\n\n# Divide to categories\nrule_set = {   \n    'operation':'bucket',\n    'variables': {\n        'source':'age', \n        'destination':None\n    },\n    'parameters': {\n        'labels_str': ['0', '20', '30', '40', '50', '60', 'INF'],\n        'right_inclusive':True,\n        \"default\":'OTHER',\n        \"null\": 'NA'\n    }\n}\nData, categoryVariable = mltk.create_categorical_variable_task(Data, rule_set, return_variable=True)\nmltk.variable_response(DataFrame=Data, variable=categoryVariable, target_variable=targetVariable, show_plot=True)\n```\n```\n            Counts  HighIncome  CountsFraction%  ResponseFraction%  ResponseRate%\nageGRP                                                                           \n1_(0,20]      2410           2          7.40149            0.02551        0.08299\n2_(20,30]     8162         680         25.06680            8.67236        8.33129\n3_(30,40]     8546        2406         26.24612           30.68486       28.15352\n4_(40,50]     6983        2655         21.44590           33.86048       38.02091\n5_(50,60]     4128        1547         12.67774           19.72963       37.47578\n6_(60,INF)    2332         551          7.16194            7.02716       23.62779\nTOTAL        32561        7841        100.00000          100.00000        0.24081\n```\n\n```python\n# Create One Hot Encoded Variables\nData, featureVariables, targetVariable = mltk.to_one_hot_encode(Data, category_variables=categoryVariables, binary_variables=binaryVariables, target_variable=targetVariable)\nData[identifierColumns+featureVariables+[targetVariable]].sample(5).transpose()\n```\n### Correlation\n```python\ncorrelation=mltk.correlation_matrix(Data, featureVariables+[targetVariable], target_variable=targetVariable, method='pearson', return_type='list', show_plot=False)\n```\n### Split Train, Validate Test datasets\n```python\nTrainDataset, ValidateDataset, TestDataset = mltk.train_validate_test_split(Data, ratios=(0.6,0.2,0.2))\n```\n### Model Building\n```python\nsample_attributes = {\n\t\t\t\t\t\t'SampleDescription':'Adult Census Income Dataset',\n\t\t\t\t\t\t'NumClasses':2,\n\t\t\t\t\t\t'RecordIdentifiers':identifierColumns\n                }\n\nscore_parameters = {\n\t\t\t\t\t'Edges':[0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n\t\t\t\t\t'Percentiles':[0, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 1.0],\n\t\t\t\t\t'Threshold':0.5,\n\t\t\t\t\t'Quantiles':10,\n\t\t\t\t\t'ScoreVariable':'Probability',\n\t\t\t\t\t'ScoreLabel':'Score',\n\t\t\t\t\t'QuantileLabel':'Quantile',\n\t\t\t\t\t'PredictedLabel':'Predicted'\n                }\n````\n\n# Classification Models\n\nModel Attributes\n```python\nmodel_attributes = {\n\t\t\t\t\t'ModelID': None,\n\t\t\t\t\t'ModelType':'classification',\n\t\t\t\t\t'ModelName': 'IncomeLevel',\n\t\t\t\t\t'Version':'0.1',\n                }\n```\n\nLosgistic Regression\n```python\nmodel_parameters = {\n\t\t\t\t\t'MLAlgorithm':'LGR', # 'RF', #  'NN', # 'CATBST', (# 'CNN',  # 'XGBST')\n\t\t\t\t\t'MaxIterations':50\n\t\t\t\t}  \n```\n\nRandom Forest\n```python\nmodel_parameters = {\n\t\t\t\t\t'MLAlgorithm':'RF', # 'LGR', #  'NN', # 'CATBST', (# 'CNN',  # 'XGBST')\n\t\t\t\t\t'NTrees':500,\n\t\t\t\t\t'MaxDepth':100,\n\t\t\t\t\t'MinSamplesToSplit':10,\n\t\t\t\t\t'Processors':2\n\t\t\t\t} \n```\nNeural Networks\n```python\n# Setup Architecture\n# Binary classification (L1 'units': 2), 32 variables ('input_shape':(48,))\nSimpleDFF_architecture = {\n        'L1':{'type': 'Dense', 'position':'input', 'units': 512, 'activation':'relu', 'input_shape':(48,)},\n        'L2':{'type': 'Dense', 'position':'hidden', 'units': 512, 'activation':'relu'},\n        'L3':{'type': 'Dropout', 'position':'hidden', 'rate':0.5},\n        'L4':{'type': 'Dense', 'position':'output', 'units': 2, 'activation':'softmax', 'output_shape':None},\n       }\n\n# Binary classification (L1 'units': 2), 32 variables ('input_shape':(32,))\nLogisticRegressionNN_architecture = {\n        'L1':{'type': 'Dense', 'position':'input', 'units': 2, 'activation':'softmax', 'input_shape':(32,)},\n       }\n\n# Binary classification (L8 'units': 2)\nSimpleImageClassifier_architecture = {\n        'L1':{'type': 'Conv2D', 'position':'input', 'filters': 32, 'kernel_size':(3,3), 'strides':(1,1), 'padding':'valid', 'activation':'relu', 'input_shape':(128, 128, 1)},\n        'L2':{'type': 'Conv2D', 'position':'hidden', 'filters': 64, 'kernel_size':(3,3), 'strides':(1,1), 'padding':'valid', 'activation':'relu'},\n        'L3':{'type': 'MaxPooling2D', 'position':'hidden', 'pool_size': (2,2), 'padding':'valid'},   \n        'L4':{'type': 'Dropout', 'position':'hidden', 'rate':0.25},\n        'L5':{'type': 'Flatten', 'position':'hidden'},        \n        'L6':{'type': 'Dense', 'position':'hidden', 'units': 128, 'activation':'relu'},\n        'L7':{'type': 'Dropout', 'position':'hidden', 'rate':0.5},\n        'L8':{'type': 'Dense', 'position':'output', 'units': 2, 'activation':'softmax', 'output_shape':None},\n       }\n\nmodel_parameters = {\n\t\t\t\t'MLAlgorithm':'NN',\n\t\t\t\t'BatchSize':512,\n\t\t\t\t'InputShape':InputShape,\n\t\t\t\t'num_classes':2,\n\t\t\t\t'Epochs':10,\n\t\t\t\t'metrics':['accuracy'],\n\t\t\t\t'architecture':SimpleDFF_architecture\n\t\t\t\t} \n```\nCatBoost\n```python\nmodel_parameters = {\n\t\t\t\t\t'MLAlgorithm':'CBST',\n\t\t\t\t\t'NTrees': 500,\n\t\t\t\t\t'MaxDepth':10,\n\t\t\t\t\t'LearningRate':0.7,\n\t\t\t\t\t'LossFunction':'Logloss',#crossEntropy\n\t\t\t\t\t'EvalMatrics':'Accuracy',\n\t\t\t\t\t'Imbalanced':False,\n\t\t\t\t\t'TaskType':'GPU',\n\t\t\t\t\t'Processors':2,\n\t\t\t\t\t'UseBestModel':True\n\t\t\t\t}\n```\n\n### Build Model\n```python\nXModel = mltk.build_ml_model(TrainDataset, ValidateDataset, TestDataset, \n                                  model_variables=modelVariables,\n                                  variable_setup = None,\n                                  target_variable=targetVariable,\n                                  model_attributes=model_attributes, \n                                  sample_attributes=sample_attributes, \n                                  model_parameters=model_parameters, \n                                  score_parameters=score_parameters, \n                                  return_model_object=True, \n                                  show_results=False, \n                                  show_plot=True\n                                  )\n\nprint(XModel.model_attributes['ModelID'])\nprint(XModel.model_interpretation['ModelSummary'])\nprint('ROC AUC: ', XModel.get_auc(curve='roc'))\nprint('PRC AUC: ', XModel.get_auc(curve='prc'))\nprint(XModel.model_evaluation['RobustnessTable'])\n\nXModel.plot_eval_matrics(comparison=False)\n```\n\n```\n          minProbability  maxProbability  meanProbability  BucketCount  ResponseCount  BucketFraction  ResponseFraction  BucketPrecision  CumulativeBucketFraction  CumulativeResponseFraction  CumulativePrecision\nQuantile                                                                                                                                                                                                           \n1                0.00000         0.00008      3.85729e-06          652            3         0.10011           0.00192          0.00460                   1.00000                     1.00000              0.23967\n2                0.00008         0.00432      1.52655e-03          651            9         0.09995           0.00577          0.01382                   0.89989                     0.99808              0.26582\n3                0.00435         0.02042      1.10941e-02          652           14         0.10011           0.00897          0.02147                   0.79994                     0.99231              0.29731\n4                0.02049         0.05702      3.58648e-02          650           20         0.09980           0.01281          0.03077                   0.69983                     0.98334              0.33677\n5                0.05711         0.12075      8.51409e-02          652           65         0.10011           0.04164          0.09969                   0.60003                     0.97053              0.38767\n6                0.12086         0.20457      1.63366e-01          651          109         0.09995           0.06983          0.16743                   0.49992                     0.92889              0.44533\n7                0.20469         0.31870      2.61577e-01          651          190         0.09995           0.12172          0.29186                   0.39997                     0.85906              0.51478\n8                0.31895         0.46840      4.03550e-01          666          259         0.10226           0.16592          0.38889                   0.30002                     0.73735              0.58905\n9                0.46854         0.66965      5.68083e-01          641          377         0.09842           0.24151          0.58814                   0.19776                     0.57143              0.69255\n10               0.66994         0.99967      8.06834e-01          647          515         0.09934           0.32992          0.79598                   0.09934                     0.32992              0.79598\nDataSet          0.00000         0.99967      2.33167e-01         6513         1561         1.00000           1.00000          0.23967                   1.00000                     1.00000              0.23967\n```\n\n### Evaluate Model\n\nPlot model performance curves\n```python\nRFModel.plot_eval_matrics(comparison=True)\nLGRModel.plot_eval_matrics(comparison=True)\nNNModel.plot_eval_matrics(comparison=True)\nCBSTModel.plot_eval_matrics(comparison=True)\n```\n\nArea Under Curve (AUC) Comparison\n```python\nModels = [LGRModel, RFModel, CBSTModel, NNModel]\nModelsComp = mltk.model_guages_comparison(Models)\nprint(ModelsComp)\n```\n\n```\n                           Model  PRC_AUC  ROC_AUC\n0   INCOMELEVELLGR20190728113633  0.71971  0.88926\n1    INCOMELEVELRF20190728113635  0.69348  0.88113\n2  INCOMELEVELCBST20190728113703  0.71507  0.88975\n3    INCOMELEVELNN20190728113641  0.71396  0.88890\n```\n\nTest Model\n```python\nscore_variable = RFModel.get_score_variable()\nscore_label = RFModel.get_score_label()\n\nTestDataset = mltk.score_processed_dataset(TestDataset, RFModel, edges=None, score_label=None, fill_missing=0)\n\nthreshold = 0.8\nTestDataset = mltk.set_predicted_columns(TestDataset, score_variable, threshold=threshold)\nConfusionMatrix = mltk.confusion_matrix(TestDataset, actual_variable=targetVariable, predcted_variable='Predicted', labels=[0,1], sample_weight=None, totals=True)\nprint(ConfusionMatrix)\n```\n\nComparing Models and Probability Thresholds\n```python\nModels = [LGRModel, RFModel, CBSTModel, NNModel]\nthresholds=[0.7, 0.8, 0.9]\nConfusionMatrixComparison = mltk.confusion_matrix_comparison(TestDataset, Models, thresholds, score_variable=None, show_plot=True)\nConfusionMatrixComparison.style.background_gradient(cmap='RdYlGn').set_precision(3)\n```\n\nComparing Models and Threshold Score (1-10 Scale)\n```python\nModels = [LGRModel, RFModel, CBSTModel, NNModel]\nthresholds=[7, 8, 9]\nConfusionMatrixComparison = mltk.confusion_matrix_comparison(TestDataset, Models, thresholds, score_variable=score_label, show_plot=True)\nConfusionMatrixComparison.style.background_gradient(cmap='RdYlGn').set_precision(3)\n```\n\nSet Custom Score Edges\n``` python\nRobustnessTable, ROCCurve, PrecisionRecallCurve, roc_auc, prc_auc = mltk.model_performance_matrics(ResultsSet=TestDataset, target_variable=targetVariable, score_variable=score_variable, quantile_label='Quantile',  quantiles=100, show_plot=True)\nprint('ROC AUC', roc_auc)\nprint('PRC AUC', prc_auc)\n\nprint(RobustnessTable)\n\n# Examine cutoffs\nquantiles=[0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\nedges, threshold = mltk.get_score_cutoffs(ResultsSet=TestDataset, quantiles=quantiles, target_variable=targetVariable, score_variable=scoreVariable)\nprint('Threshold', threshold)\nprint('Edges', edges)\n\n# Re-bin score buckets\nedges = [0.0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.75, 0.95, 1.0]\nLGRModel.set_score_edges(edges)\n```\n\n# Regression Models\n\nModel Attributes\n```python\nmodel_attributes = {\n\t\t\t\t\t'ModelID': None,   \n\t\t\t\t\t'ModelType':'regression',\n\t\t\t\t\t'ModelName': 'Income',\n\t\t\t\t\t'Version':'0.1',\n                   }\n```\n\n```python\nmodel_parameters = {\n\t\t\t\t\t'MLAlgorithm':'RFREG', # 'RFREG'\n\t\t\t\t\t'NTrees':200,\n\t\t\t\t\t'MaxDepth':10,\n\t\t\t\t\t'MinSamplesToSplit':6,\n\t\t\t\t\t'Processors':2\n\t\t\t\t   } \nmodel_parameters = {'MLAlgorithm':'LREG', 'MaxIterations':100}\n```\n\n```python\nREGModel = mltk.build_ml_model(TrainDataset, ValidateDataset, TestDataset, \n                                  model_variables=modelVariables,\n                                  variable_setup = None,\n                                  target_variable=targetVariable,\n                                  model_attributes=model_attributes, \n                                  sample_attributes=sample_attributes, \n                                  model_parameters=model_parameters, \n                                  score_parameters=score_parameters, \n                                  return_model_object=True, \n                                  show_results=False, \n                                  show_plot=False\n                                  )\n```\n\n```\nprint(REGModel.model_attributes['ModelID'])\nprint(REGModel.model_interpretation['ModelSummary'])\nprint('RMSE =', SelectModel.get_rmse())\nprint('R^2 =', SelectModel.get_r2())\nREGModel.plot_eval_matrics(comparison=True)\nSelectModel.plot_eval_matrics(comparison=True)\n```\n\nSave model\n```python\nsaveFilePath = '{}.pkl'.format(XModel.get_model_id())\nmltk.save_model(XModel, saveFilePath)\n```\n\n### Deployment\nSimplified MLToolkit ETL pipeline for scoring and model re-building (Need to customize based on the project).\n<img src=\"https://raw.githubusercontent.com/sptennak/MLToolkit/master/MLToolkit/image/MLTKServing.png\" height=\"300\">\n\nDefine ETL Function\n```python\ndef ETL(DataFrame, variables_setup_dict=None):\n    # Add ID column\n    DataFrame = mltk.add_identity_column(DataFrame, id_label='ID', start=1, increment=1)\n\n    # Clean column names\n    DataFrame = mltk.clean_column_names(DataFrame, replace='')\n    input_columns = list(DataFrame.columns)\n\n\tif variables_setup_dict==None:\n\t\tvariables_setup_dict = \"\"\"   \n\t\t{\n\t\t\t\"setting\":\"score\",\n\n\t\t\t\"variables\": {            \n\t\t\t\t\t\"category_variables\" : [\"sex\", \"race\", \"occupation\", \"workclass\", \"maritalstatus\", \"relationship\"],\n\t\t\t\t\t\"binary_variables\": [],\n\t\t\t\t\t\"target_variable\":\"HighIncome\"\n\t\t\t},\n\n\t\t\t\"preprocess_tasks\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"transform\",\n\t\t\t\t\t\"out_type\":\"cnt\",\n\t\t\t\t\t\"include\": false,\n\t\t\t\t\t\"operation\": \"normalize\",\n\t\t\t\t\t\"variables\": {\n\t\t\t\t\t\t\"source\": \"age\",\n\t\t\t\t\t\t\"destination\": \"normalizedage\"\n\t\t\t\t\t},\n\t\t\t\t\t\"parameters\": {\n\t\t\t\t\t\t\"method\": \"zscore\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"category_merge\",\n\t\t\t\t\t\"out_type\":\"cat\",\n\t\t\t\t\t\"include\": true,\n\t\t\t\t\t\"operation\": \"catmerge\",\n\t\t\t\t\t\"variables\": {\n\t\t\t\t\t\t\"source\": \"maritalstatus\",\n\t\t\t\t\t\t\"destination\": \"maritalstatus\"\n\t\t\t\t\t},\n\t\t\t\t\t\"parameters\": {\n\t\t\t\t\t\t\"group_value\": \"Married\",\n\t\t\t\t\t\t\"values\": [ \"Married-civ-spouse\", \"Married-spouse-absent\", \"Married-AF-spouse\" ]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"entity\",\n\t\t\t\t\t\"out_type\":\"cat\",\n\t\t\t\t\t\"include\": true,\n\t\t\t\t\t\"operation\": \"dictionary\",\n\t\t\t\t\t\"variables\": {\n\t\t\t\t\t\t\"source\": \"nativecountry\",\n\t\t\t\t\t\t\"destination\": \"nativecountryGRP\"\n\t\t\t\t\t},\n\t\t\t\t\t\"parameters\": {\n\t\t\t\t\t\t\"match_type\": null,\n\t\t\t\t\t\t\"dictionary\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"entity\": \"USA\",\n\t\t\t\t\t\t\t\t\"values\": [ \"United-States\" ],\n\t\t\t\t\t\t\t\t\"case\": true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"entity\": \"Canada\",\n\t\t\t\t\t\t\t\t\"values\": [ \"Canada\" ],\n\t\t\t\t\t\t\t\t\"case\": true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"entity\": \"OtherAmericas\",\n\t\t\t\t\t\t\t\t\"values\": [ \"South\", \"Mexico\", \"Trinadad&Tobago\", \"Jamaica\", \"Peru\", \"Nicaragua\", \"Dominican-Republic\", \"Haiti\", \"Ecuador\", \"El-Salvador\", \"Columbia\", \"Honduras\", \"Guatemala\", \"Puerto-Rico\", \"Cuba\", \"Outlying-US(Guam-USVI-etc)\"],\n\t\t\t\t\t\t\t\t\"case\": true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"entity\": \"Europe-Med\",\n\t\t\t\t\t\t\t\t\"values\": [ \"Greece\", \"Holand-Netherlands\", \"Poland\", \"Iran\", \"England\", \"Germany\", \"Italy\", \"Ireland\", \"Hungary\", \"France\", \"Yugoslavia\", \"Scotland\", \"Portugal\" ],\n\t\t\t\t\t\t\t\t\"case\": true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"entity\": \"Asia\",\n\t\t\t\t\t\t\t\t\"values\": [ \"Vietnam\", \"China\", \"Taiwan\", \"India\", \"Philippines\", \"Japan\", \"Hong\", \"Cambodia\", \"Laos\", \"Thailand\" ],\n\t\t\t\t\t\t\t\t\"case\": true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"entity\": \"Other\",\n\t\t\t\t\t\t\t\t\"values\": [ \"?\" ],\n\t\t\t\t\t\t\t\t\"case\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"null\": \"NA\",\n\t\t\t\t\t\t\"default\": \"OTHER\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"category\",\n\t\t\t\t\t\"out_type\":\"cat\",\n\t\t\t\t\t\"include\": true,\n\t\t\t\t\t\"operation\": \"bucket\",\n\t\t\t\t\t\"variables\": {\n\t\t\t\t\t\t\"source\": \"age\",\n\t\t\t\t\t\t\"destination\": null\n\t\t\t\t\t},\n\t\t\t\t\t\"parameters\": {\n\t\t\t\t\t\t\"labels_str\": [ \"0\", \"20\", \"30\", \"40\", \"50\", \"60\", \"INF\" ],\n\t\t\t\t\t\t\"right_inclusive\": true,\n\t\t\t\t\t\t\"default\": \"OTHER\",\n\t\t\t\t\t\t\"null\": \"NA\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"category\",\n\t\t\t\t\t\"out_type\":\"cat\",\n\t\t\t\t\t\"include\": true,\n\t\t\t\t\t\"operation\": \"bucket\",\n\t\t\t\t\t\"variables\": {\n\t\t\t\t\t\t\"source\": \"educationnum\",\n\t\t\t\t\t\t\"destination\": null\n\t\t\t\t\t},\n\t\t\t\t\t\"parameters\": {\n\t\t\t\t\t\t\"labels_str\": [ \"1\", \"5\", \"8\", \"9\", \"12\", \"16\" ],\n\t\t\t\t\t\t\"right_inclusive\": true,\n\t\t\t\t\t\t\"default\": \"OTHER\",\n\t\t\t\t\t\t\"null\": \"NA\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"category\",\n\t\t\t\t\t\"out_type\":\"cat\",\n\t\t\t\t\t\"include\": true,\n\t\t\t\t\t\"operation\": \"bucket\",\n\t\t\t\t\t\"variables\": {\n\t\t\t\t\t\t\"source\": \"hoursperweek\",\n\t\t\t\t\t\t\"destination\": null\n\t\t\t\t\t},\n\t\t\t\t\t\"parameters\": {\n\t\t\t\t\t\t\"labels_str\": [ \"0\", \"20\", \"35\", \"40\", \"60\", \"INF\" ],\n\t\t\t\t\t\t\"right_inclusive\": true,\n\t\t\t\t\t\t\"default\": \"OTHER\",\n\t\t\t\t\t\t\"null\": \"NA\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t\t\"\"\"\n\n    DataFrame, categoryVariables, binaryVariables, targetVariable = mltk.setup_variables_task(DataFrame, variables_setup_dict)\n\n    # Create One Hot Encoded Variables\n    DataFrame, featureVariables, targetVariable = mltk.to_one_hot_encode(DataFrame, category_variables=categoryVariables, binary_variables=binaryVariables, target_variable=targetVariable)\n\n    return DataFrame, input_columns\n```\n\nScoring/Ranking\n```python\nMLModelObject = mltk.load_model(saveFilePath)\nSampleDataset = pd.read_csv(r'test.csv')\nSampleDataset = ETL(SampleDataset)\n\nSampleDataset = mltk.score_processed_dataset(SampleDataset, MLModelObject, edges=None, score_label=None, fill_missing=0)\nRobustnesstable1 = mltk.robustness_table(ResultsSet=SampleDataset, class_variable=targetVariable, score_variable=score_variable,  score_label=score_label, show_plot=True)\n```\n\n```python\nMLModelObject = mltk.load_model(saveFilePath)\n\nTestInput = \"\"\"\n{\n      \"ID\": \"A001\",\n      \"age\": 32,\n      \"workclass\": \"Private\",\n      \"education\": \"Doctorate\",\n      \"education-num\": 16,\n      \"marital-status\": \"Married-civ-spouse\",\n      \"occupation\": \"Prof-specialty\",\n      \"relationship\": \"Husband\",\n      \"race\": \"Asian-Pac-Islander\",\n      \"sex\": \"Male\",\n      \"capital-gain\": 0,\n      \"capital-loss\": 0,\n      \"hours-per-week\": 40,\n      \"native-country\": \"?\"\n}\n\"\"\"\noutput = mltk.score_records(TestInput, MLModelObject, edges=None, ETL=ETL, return_type='dict') # Other options for return_type, {'json', 'frame'}\n```\nOutput\n```python\n[{'ID': 'A001',\n 'age': 32,\n 'capitalgain': 0,\n 'capitalloss': 0,\n 'education': 'Doctorate',\n 'educationnum': 16,\n 'hoursperweek': 40,\n 'maritalstatus': 'Married',\n 'nativecountry': '?',\n 'occupation': 'Prof-specialty',\n 'race': 'Asian-Pac-Islander',\n 'relationship': 'Husband',\n 'sex': 'Male',\n 'workclass': 'Private',\n 'Probability': 0.6790258814478549,\n 'Score': 7}]\n```\n\n### Model Output Explanation (Using SHAP and LIME Python libraries)\n```python\n# Create Explainer\nExplainer = mltk.build_explainer(MLModelObject, explainer_config={'IdColumns':['ID'], 'Method':'shap', 'ClassNumber':1, 'FillMissing':0})\n\nsave_file_path = '{}_Explainer.pkl'.format(MLModelObject.get_model_id())\nmltk.save_explainer(Explainer, save_file_path)\n\nExplainer = mltk.load_explainer(save_file_path)\n```\n```python\n# Calculate Impact Values\nImpactValues, VariableValues = mltk.get_explainer_values_task(DataFrame, Explainer=Explainer, verbose=False)\n\n# Plot Variable Impact\n# force_plot\nexplainer_visual = mltk.get_explainer_visual(ImpactValues, VariableValues, Explainer, visual_config={'figsize':[20,4], 'text_rotation':90})\n\n# Generate Explain Summary\nexplainer_summary = mltk.get_shap_impact_summary(ImpactValues, VariableValues, Explainer.get_model_variables(), iloc=0, top_n=5, show_plot=True)\n\nexplainer_report, explain_plot = mltk.get_explainer_report(DataFrame, Explainer, top_n=10, show_plot=True, return_type='frame')\n```\n\n### JSON Input for scoring\n\nRecords Format for single or fewer number of records\n```json\n[{\n\t\"ID\": \"A001\",\n\t\"age\": 32,\n\t\"workclass\": \"Private\",\n\t\"education\": \"Doctorate\",\n\t\"occupation\": \"Prof-specialty\",\n\t\"sex\": \"Female\",\n\t\"hoursperweek\": 40,\n\t\"nativecountry\": \"USA\"\n}]\n```\n\nSplit Format for mulltiple records\n```json\n{\n\t\"columns\":[\"ID\",\"age\",\"education\",\"hoursperweek\",\"nativecountry\",\"occupation\",\"sex\",\"workclass\"],\n\t\"data\":[[\"A001\",32,\"Doctorate\",40,\"USA\",\"Prof-specialty\",\"Female\",\"Private\"]]\n}\n```\n\nUsing Model Chest to Deploy Models\n```python\nMyModelChest = mltk.ModelChest()\nMyModelChest.add_model(model_key='test', model_file=None, model_object=MLModelObject, replace=False)\nMyModelChest.save_model_chest()\nMyModelChest.get_model_chest_json()\n```\n\nload Models from Model Chest\n```python\nlodedModel = MyModelChest.get_model_object('test')\nlodedModel.get_model_manifest()\n```\n\n## Working with Image Data\n```python\nsize=(96, 64)\nfile_folder_path = r'C:\\Projects\\Data\\images\\train'\nImagesDataFrame = mltk.read_image_folder(file_folder_path, size=size, show_image=False)\n```\n\n```python\nImagesDataFrame, input_shape = mltk.prepare_image_dataset_to_model(ImagesDataFrame, \n                                                             image_column='Image', \n                                                             processed_image_column='ImageToModel',\n                                                             label_column='Label',\n                                                             image_data_format='channels_last', \n                                                             size=size)\n\n```\n### Building CNN Model\n```python\nsample_attributes = {'SampleDescription':'Image CLassification Example',\n                    'NumClasses':NClasses,\n                    'RecordIdentifiers':identifierColumns,\n                    'ModelDataStats':modelDataStats\n                    }\n\nscore_parameters = {'Edges':[0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n                    'Percentiles':[0, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 1.0],\n                    'Threshold':0.5,\n                   'Quantiles':10,\n                   'ScoreVariable':'Probability',\n                   'ScoreLabel':'Score',\n                   'QuantileLabel':'Quantile',\n                   'PredictedLabel':'Predicted'\n                   }\n\nmodel_attributes = {\n                    'ModelID': None,   \n                    'ModelType':'classification',\n                    'ModelName': 'IncomeLevel',\n                    'Version':'0.1',\n                   }\n\narchitecture = {\n        'L1':{'type': 'Conv2D', 'position':'input', 'filters':32, 'kernel_size':(3,3), 'padding':'same', 'strides':(1,1), 'activation':'relu', 'input_shape':input_shape},\n        'L2':{'type': 'MaxPooling2D', 'pool_size': (2,2), 'padding':'same'},\n        'L3':{'type': 'Dropout', 'position':'hidden', 'rate':0.2},\n        'L4':{'type': 'Conv2D', 'position':'hidden', 'filters':64, 'kernel_size':(3,3), 'padding':'same', 'strides':(1,1), 'activation':'relu'},\n        'L5':{'type': 'MaxPooling2D', 'pool_size': (2,2), 'padding':'same'},\n        'L6':{'type': 'Dropout', 'position':'hidden', 'rate':0.2},\n        'L7':{'type': 'Flatten'},\n        'L8':{'type': 'Dense', 'position':'hidden', 'units': 256, 'activation':'softmax', 'output_shape':None},\n        'L9':{'type': 'Dropout', 'position':'hidden', 'rate':0.2},\n        'L10':{'type': 'Dense', 'position':'output', 'units': n_classes, 'activation':'softmax', 'output_shape':None},\n       }\t\n\nmodel_parameters = {'MLAlgorithm':'CNN',\n                    'BatchSize':128,\n                   'InputShape':inputShape,\n                   'NumClasses':NClasses,\n                   'Epochs':50,\n                   'EvalMatrics':['accuracy'],\n                   'Architecture':architecture} \n\nCNNModel = mltk.build_ml_model(TrainDataset, ValidateDataset, TestDataset, \n                                  model_variables=modelVariables,\n                                  variable_setup = None,\n                                  target_variable=targetVariable,\n                                  model_attributes=model_attributes, \n                                  sample_attributes=sample_attributes, \n                                  model_parameters=model_parameters, \n                                  score_parameters=score_parameters, \n                                  return_model_object=True, \n                                  show_results=False, \n                                  show_plot=True\n                                  )\n\nCNNModel.plot_eval_matrics()\t\t\t\t\t\t  \n```\n\n## License\n```\nCopyright 2019 Sumudu Tennakoon\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n## Cite as\n```\n@misc{mltk2019,\n  author =  \"Sumudu Tennakoon\",\n  title = \"MLToolKit(mltk): A Simplified Toolkit for End-To-End Machine Learing Projects\",\n  year = 2019,\n  publisher = \"GitHub\",\n  howpublished = {\\url{https://mltoolkit.github.io/mltk/}},\n  version = \"0.1.9\"\n}\n```\n\n## MLToolKit Project Timeline\n- 2018-07-02 [v0.0.1]: Initial set of functions for data exploration, model building and model evaluation was published to Github. (https://github.com/sptennak/MachineLearning).\n- 2018-01-03 [v0.0.2]: Created more functions for data exploration including web scraping and geo spacial data analysis for for IBM Coursera Data Science Capstone Project was published to Github. (https://github.com/sptennak/Coursera_Capstone).\n- 2019-03-20 [v0.1.0]: Developed and published initial version of model building and serving framework for IBM Coursera Advanced Data Science Professional Certificate Capstone Project. (https://github.com/sptennak/IBM-Coursera-Advanced-Data-Science-Capstone).\n- 2019-07-02 [v0.1.2]: First release of the PyMLToolkit Python package, a collection of clases and functions facilitating end-to-end machine learning model building and serving over RESTful API.\n- 2019-07-04 [v0.1.3]: Minor bug fixes.\n- 2019-07-14 [v0.1.4]: Improved documentation, Integrated TensorFlow Models, Enhancements and Minor bug fixes.\n- 2019-07-28 [v0.1.5]: Integrated CatBoost Models, Improved model building and serving frameework, text analytics functions, support JSON input/output to the ML model bulding and scoring processes, Enhancements and bug fixes.\n- 2019-08-12 [v0.1.6]: Improved Features, Bug Fixes, Enhanced JSON input/output to the ML model bulding and scoring processes (JSON-MLS) and bug fixes.\n- 2019-08-31 [v0.1.7] : Added more data processing functions, Enhanced output formats, Enhanced model deployment, Overall improvements and bug fixes.\n- 2019-09-28 [v0.1.8] : Improved Documentation, Enhancements and bug fixes.\n- 2019-12-07 [v0.1.9] : Added model explainability, Integrate image classification model Deployment, Enhancements and bug fixes.\n\n## Future Release Plan \n- TBD [v0.1.10] : Working with Imbalanced Samples, Integrate Cross-validation, Post additional tutorials and examples, Improved Documentation, Enhancements and bug fixes.\n- TBD [v0.1.11] : Building Ensamble Models, UI Preview, Improved Feature Selection, Cross-validation and Hyper parameter tuning functionality, Enhancements and bug fixes.\n- TBD [v0.1.12]: ML Model Building Projects, Enhancements and bug fixes.\n- 2019-12-31 [v0.1.13]:Comprehensive documentation, Post implementation evaluation functions, Enhanced Data Input and Output functios, Major bug-fix version of the initial release with finalized enhancements.\n- TBD [v0.2.0]: Imporved model building and serving frameework and UI, Support more machine learning algorithms, Support multi-class classification and enhanced text analytics functions.\n- TBD [v0.3.0]: Imporved scalability and performance, Automated Machine Learning.\n- TBD [v0.4.0]: Building continious learning models.\n\n## Acknowledgement and Remarks\nSome functions of MLToolKit depends on number of Open Source Python Libraries such as\n- Data Manipulation : Pandas\n- Machine Learning: Statsmodels, Scikit-learn, Catboost\n- Deep Learning: Tensorflow, \n- Model Interpretability: Shap, Lime\n- Server Framework: Flask\n- Text Processing: BeautifulSoup, TextLab\n- Database Connectivity: SQLAlchemy, PyODBC\nMLToolkit Project acknowledge the creators and contributors of the above libraries for their contribution to the Open Source Community.\n\nMLToolKit library and some novel concepts introduced with original ideas of the author implemented as an effort of putting together the lifetime learning and experience working on multiple data science projects to a good use and as a contribution back to the Open Source Community. \n\nAuthor would like to thank number of content creators in the data science and machine learning topics not limited to online learning platforms and blogs for making aviable insightful resources to explore and learn the subject. A complete reference list will be published with a future version...\n\nAs a Free and Open Source initiative and a independent R&D project, author has no conflict of interest or, financial interest to the MLToolKit library. However, proper mention of the source abiding the License Terms is highly appreciated when the library itself or any useful concepts or parts are used. \n\nMLToolKit is set to evolve with adding more features and functionality, and interoperability with more standard data science and machine learning libraries. MLToolKit will always be available as Free and Open Source Python library in the future.\n\n## References\n- https://pandas.pydata.org/\n- https://scikit-learn.org\n- https://www.tensorflow.org/\n- https://keras.io/layers/recurrent/\n- https://www.numpy.org/\n- https://docs.python.org/3.6/library/re.html\n- https://www.statsmodels.org\n- https://matplotlib.org/\n- http://flask.pocoo.org/\n- https://catboost.ai/\n- https://github.com/slundberg/shap\n- https://github.com/marcotcr/lime\n- http://json.org/\n- https://pillow.readthedocs.io/en/stable/\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://mltoolkit.github.io/MLToolKit", "keywords": "", "license": "Apache License Version 2.0", "maintainer": "", "maintainer_email": "", "name": "python-mltk", "package_url": "https://pypi.org/project/python-mltk/", "platform": "", "project_url": "https://pypi.org/project/python-mltk/", "project_urls": {"Homepage": "https://mltoolkit.github.io/MLToolKit"}, "release_url": "https://pypi.org/project/python-mltk/0.1.9/", "requires_dist": ["numpy", "scipy", "matplotlib", "pandas", "scikit-learn", "statsmodels"], "requires_python": "", "summary": "End-to-end Machine Learning Toolkit (MLToolkit/mltk) for Python", "version": "0.1.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MLToolKit Project</h1>\n<p><a href=\"http://www.mltoolkit.org\" rel=\"nofollow\">www.mltoolkit.org</a></p>\n<h2>Current release: PyMLToolkit [v0.1.9]</h2>\n<img height=\"200\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1436900f4153598c3d2c1d10da64d1364dd6c433/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f737074656e6e616b2f4d4c546f6f6c6b69742f6d61737465722f4d4c546f6f6c6b69742e706e67\">\n<p>MLToolKit (mltk) is a Python package providing a set of user-friendly functions to help building end-to-end machine learning models in data science research, teaching or production focused projects.</p>\n<img height=\"200\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5fd7a91c3e3b1dcbfea0d56120b34f9bc8d93765/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f737074656e6e616b2f4d4c546f6f6c6b69742f6d61737465722f4d4c546f6f6c6b69742f696d6167652f4d4c544b50726f636573732e706e67\">\n<h2>Introduction</h2>\n<p>MLToolKit supports all stages of the machine learning application development process.</p>\n<h2>Installation</h2>\n<pre><code>pip install pymltoolkit\n</code></pre>\n<p>If the installation failed with dependancy issues, execute the above command with --no-dependencies</p>\n<pre><code>pip install pymltoolkit --no-dependencies\n</code></pre>\n<h2>Functions</h2>\n<ul>\n<li>Data Extraction (SQL, Flatfiles, Images, etc.)</li>\n<li>Exploratory Data Analysis (statistical summary, univariate analysis, visulize distributions, etc.)</li>\n<li>Feature Engineering (Supports numeric, text, date/time. Image data support will integrate in later releases of v0.1)</li>\n<li>Model Building (Currently supported for binary classification and regression only)</li>\n<li>Hyper Parameter Tuning [in development for v0.2]</li>\n<li>Cross Validation (will integrate in later releases of v0.1)</li>\n<li>Model Performance Analysis, Explain Predictions (LIME and SHAP) and Performance Comparison Between Models.</li>\n<li>JSON input script for executing model building and scoring tasks.</li>\n<li>Model Building UI [in development for v0.2]</li>\n<li>ML Model Building Project [in development for v0.2]</li>\n<li>Auto ML (automated machine learning) [in development for v0.2]</li>\n<li>Model Deploymet and Serving [included, will be imporved for v0.2]</li>\n</ul>\n<h2>Supported Machine Learning Algorithms/Packages</h2>\n<ul>\n<li>RandomForestClassifier: scikit-learn</li>\n<li>LogisticRegression: statsmodels</li>\n<li>Deep Feed Forward Neural Network (DFF): tensorflow</li>\n<li>Convlutional Neural Network (CNN): tensorflow</li>\n<li>Gradient Boost : catboost</li>\n<li>Linear Regression: statsmodels</li>\n<li>RandomForestRegressor: scikit-learn</li>\n<li>... More models will be added in the future releases ...</li>\n</ul>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">mltk</span>\n</pre>\n<h3>Warning: Python Variable, Function or Class names</h3>\n<p>The Python interpreter has a number of built-in functions. It is possible to overwrite thier definitions when coding without any rasing a warning from the Python interpriter. (<a href=\"https://docs.python.org/3/library/functions.html\" rel=\"nofollow\">https://docs.python.org/3/library/functions.html</a>)\nTherfore, AVOID THESE NAMES as your variable, function or class names.</p>\n<table>\n<tr><td>abs</td><td>all</td><td>any</td><td>ascii</td><td>bin</td><td>bool</td><td>bytearray</td><td>bytes</td></tr>\n<tr><td>callable</td><td>chr</td><td>classmethod</td><td>compile</td><td>complex</td><td>delattr</td><td>dict</td><td>dir</td></tr>\n<tr><td>divmod</td><td>enumerate</td><td>eval</td><td>exec</td><td>filter</td><td>float</td><td>format</td><td>frozenset</td></tr>\n<tr><td>getattr</td><td>globals</td><td>hasattr</td><td>hash</td><td>help</td><td>hex</td><td>id</td><td>input</td></tr>\n<tr><td>int</td><td>isinstance</td><td>issubclass</td><td>iter</td><td>len</td><td>list</td><td>locals</td><td>map</td></tr>\n<tr><td>max</td><td>memoryview</td><td>min</td><td>next</td><td>object</td><td>oct</td><td>open</td><td>ord</td></tr>\n<tr><td>pow</td><td>print</td><td>property</td><td>range</td><td>repr</td><td>reversed</td><td>round</td><td>set</td></tr>\n<tr><td>setattr</td><td>slice</td><td>sorted</td><td>staticmethod</td><td>str</td><td>sum</td><td>super</td><td>tuple</td></tr>\n<tr><td>type</td><td>vars</td><td>zip</td><td>__import__</td></tr>\n</table>\n<p>If you accedently overwrite any of the built-in function (e.g. list), execute the following to bring built-in defition.</p>\n<pre><span class=\"k\">del</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n</pre>\n<p>Similarly, avoid using special charcters and spaces in the column names of the DataFrames.\nExecute the following to remove special characters from the column names.</p>\n<pre><span class=\"n\">Data</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">clean_column_names</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">replace</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n</pre>\n<h2>MLToolkit Example</h2>\n<h3>Data Loading and exploration</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">mltk</span> <span class=\"k\">as</span> <span class=\"nn\">mltk</span>\n\n<span class=\"n\">Data</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">read_data_csv</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"sa\">r</span><span class=\"s1\">'C:\\Projects\\Data\\incomedata.csv'</span><span class=\"p\">)</span>\n<span class=\"n\">Data</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">clean_column_names</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">replace</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n<span class=\"n\">Data</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">add_identity_column</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">id_label</span><span class=\"o\">=</span><span class=\"s1\">'ID'</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">increment</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">DataStats</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">data_description</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">)</span>\n</pre>\n<h3>Data Pre-processing and Feature Engineering</h3>\n<pre><span class=\"c1\"># Analyze Response Target</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">variable_frequency</span><span class=\"p\">(</span><span class=\"n\">DataFrame</span><span class=\"o\">=</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"s1\">'income'</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Set Target Variables</span>\n<span class=\"n\">targetVariable</span> <span class=\"o\">=</span> <span class=\"s1\">'HighIncome'</span>\n<span class=\"n\">targetCondition</span> <span class=\"o\">=</span> <span class=\"s2\">\"income=='&gt;50K'\"</span> <span class=\"c1\">#For Binary Classification</span>\n\n<span class=\"n\">Data</span><span class=\"o\">=</span><span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">set_binary_target</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">target_condition</span><span class=\"o\">=</span><span class=\"n\">targetCondition</span><span class=\"p\">,</span> <span class=\"n\">target_variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">variable_frequency</span><span class=\"p\">(</span><span class=\"n\">DataFrame</span><span class=\"o\">=</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">))</span>\n</pre>\n<pre><code>        Counts  CountsFraction%\nincome                         \n&lt;=50K    24720         75.91904\n&gt;50K      7841         24.08096\nTOTAL    32561        100.00000\n</code></pre>\n<pre><span class=\"c1\"># Flag Records to Exclude</span>\n<span class=\"n\">excludeCondition</span><span class=\"o\">=</span><span class=\"s2\">\"age &lt; 18\"</span>\n<span class=\"n\">action</span> <span class=\"o\">=</span> <span class=\"s1\">'flag'</span> <span class=\"c1\"># 'drop' #</span>\n<span class=\"n\">excludeLabel</span> <span class=\"o\">=</span> <span class=\"s1\">'EXCLUDE'</span>\n<span class=\"n\">Data</span><span class=\"o\">=</span><span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">exclude_records</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">exclude_ondition</span><span class=\"o\">=</span><span class=\"n\">excludeCondition</span><span class=\"p\">,</span> <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"n\">action</span><span class=\"p\">,</span> <span class=\"n\">exclude_label</span><span class=\"o\">=</span><span class=\"n\">excludeLabel</span><span class=\"p\">)</span> <span class=\"c1\"># )#</span>\n\n<span class=\"c1\"># Get list of uniques values in categorical variables</span>\n<span class=\"n\">categoryVariables</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">({</span><span class=\"s1\">'sex'</span><span class=\"p\">,</span> <span class=\"s1\">'nativecountry'</span><span class=\"p\">,</span> <span class=\"s1\">'race'</span><span class=\"p\">,</span> <span class=\"s1\">'occupation'</span><span class=\"p\">,</span> <span class=\"s1\">'workclass'</span><span class=\"p\">,</span> <span class=\"s1\">'maritalstatus'</span><span class=\"p\">,</span> <span class=\"s1\">'relationship'</span><span class=\"p\">})</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">category_lists</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">categoryVariables</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Merge unique categorical values</span>\n<span class=\"n\">category_merges</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s1\">'variable'</span><span class=\"p\">:</span><span class=\"s1\">'maritalstatus'</span><span class=\"p\">,</span> <span class=\"s1\">'category_variable'</span><span class=\"p\">:</span><span class=\"s1\">'maritalstatus'</span><span class=\"p\">,</span> <span class=\"s1\">'group_value'</span><span class=\"p\">:</span><span class=\"s1\">'Married'</span><span class=\"p\">,</span> <span class=\"s1\">'values'</span><span class=\"p\">:[</span><span class=\"s2\">\"Married-civ-spouse\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Married-spouse-absent\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Married-AF-spouse\"</span><span class=\"p\">]}]</span>\n<span class=\"n\">Data</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">merge_categories</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">category_merges</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Show Frequency distribution of categorical variable</span>\n<span class=\"n\">sourceVariable</span><span class=\"o\">=</span><span class=\"s1\">'maritalstatus'</span>\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">variable_frequency</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">sourceVariable</span><span class=\"p\">,</span> <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"o\">.</span><span class=\"n\">background_gradient</span><span class=\"p\">(</span><span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'Greens'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_precision</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Response Rate For Categorical Variables</span>\n<span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">variable_responses</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"n\">categoryVariables</span><span class=\"p\">,</span> <span class=\"n\">target_variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">,</span> <span class=\"n\">show_output</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h1>Get numeric units list</h1>\n<pre><span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">get_number_units</span><span class=\"p\">()</span>\n</pre>\n<h1>Variables Manipulations</h1>\n<pre><span class=\"c1\"># General form</span>\n<span class=\"p\">{</span>\n\t<span class=\"s1\">'type'</span><span class=\"p\">:</span><span class=\"s1\">'category'</span>\n\t<span class=\"s1\">'out_type'</span><span class=\"p\">:</span><span class=\"s1\">'cat'</span><span class=\"p\">,</span>\n\t<span class=\"s1\">'include'</span><span class=\"p\">:</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n\t<span class=\"s1\">'operation'</span><span class=\"p\">:</span><span class=\"s1\">'bucket'</span><span class=\"p\">,</span>\n\t<span class=\"s1\">'variables'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\t\t<span class=\"s1\">'source'</span><span class=\"p\">:</span><span class=\"s1\">'age'</span><span class=\"p\">,</span>\n\t\t<span class=\"s1\">'destination'</span><span class=\"p\">:</span> <span class=\"kc\">None</span>  <span class=\"c1\"># None for mult-variable operations, variable1 (for pair operations), variable1a (for pair sequence operation)</span>\n\t<span class=\"p\">},</span>\n        <span class=\"s1\">'parameters'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'labels_str'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'0'</span><span class=\"p\">,</span> <span class=\"s1\">'20'</span><span class=\"p\">,</span> <span class=\"s1\">'30'</span><span class=\"p\">,</span> <span class=\"s1\">'40'</span><span class=\"p\">,</span> <span class=\"s1\">'50'</span><span class=\"p\">,</span> <span class=\"s1\">'60'</span><span class=\"p\">,</span> <span class=\"s1\">'INF'</span><span class=\"p\">],</span>\n        <span class=\"s1\">'right_inclusive'</span><span class=\"p\">:</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"default\"</span><span class=\"p\">:</span><span class=\"s1\">'OTHER'</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"null\"</span><span class=\"p\">:</span> <span class=\"s1\">'NA'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<pre><code>List of Avaiable Transformation\n |- Date/Numeric Transformations (transform)\n | |- normalize\n | |- datepart\n | |- dateadd\n | |- log\n | |- exponent\n | |- segment (piecewise functions)\n |- String Transformation (str_transform)\n | |- normalize\n | |- strcount\n | |- extract\n |- Multi-variable Operations (operation_mult)\n | |- expression\n |- Sequence Order Check (seq_order)\n | |- seqorder\n |- Numeric/Date Comparison* (comparison)\n | |- numdiff\n | |- ratio\n | |- datediff\n | |- rowmin (pair)\n | |- rowmax (pair)\n |- String Comparison* (str_comparison)\n | |- levenshtein\n | |- jaccard\n | |- ..more to add ..\n |- Pair comparison\n\nList of Avaiable Discrete Feature Transforms\n |- Binary Variable (condition)\n |- Numeric to Catergory (buckets)\n |- Entity Grouping (dictionary)\n |- Pair Equality/Existance (pair_equality)\n |- Category Merge(category_merge)\n</code></pre>\n<pre><span class=\"c1\"># Transform numeric variable</span>\n<span class=\"n\">rule_set</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"operation\"</span><span class=\"p\">:</span><span class=\"s2\">\"normalize\"</span><span class=\"p\">,</span> \n    <span class=\"s1\">'variables'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'source'</span><span class=\"p\">:</span><span class=\"s1\">'age'</span><span class=\"p\">,</span> \n        <span class=\"s1\">'destination'</span><span class=\"p\">:</span><span class=\"s1\">'normalizedage'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"parameters\"</span><span class=\"p\">:{</span><span class=\"s2\">\"method\"</span><span class=\"p\">:</span><span class=\"s2\">\"zscore\"</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">transformed_variable</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">create_transformed_variable_task</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">rule_set</span><span class=\"p\">,</span> <span class=\"n\">return_variable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create Categorical Variables from continious variables</span>\n<span class=\"n\">sourceVariable</span><span class=\"o\">=</span><span class=\"s1\">'age'</span>\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">histogram</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">sourceVariable</span><span class=\"p\">,</span> <span class=\"n\">n_bins</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">orientation</span><span class=\"o\">=</span><span class=\"s1\">'vertical'</span><span class=\"p\">,</span> <span class=\"n\">density</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Divide to categories</span>\n<span class=\"n\">rule_set</span> <span class=\"o\">=</span> <span class=\"p\">{</span>   \n    <span class=\"s1\">'operation'</span><span class=\"p\">:</span><span class=\"s1\">'bucket'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'variables'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'source'</span><span class=\"p\">:</span><span class=\"s1\">'age'</span><span class=\"p\">,</span> \n        <span class=\"s1\">'destination'</span><span class=\"p\">:</span><span class=\"kc\">None</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'parameters'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'labels_str'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'0'</span><span class=\"p\">,</span> <span class=\"s1\">'20'</span><span class=\"p\">,</span> <span class=\"s1\">'30'</span><span class=\"p\">,</span> <span class=\"s1\">'40'</span><span class=\"p\">,</span> <span class=\"s1\">'50'</span><span class=\"p\">,</span> <span class=\"s1\">'60'</span><span class=\"p\">,</span> <span class=\"s1\">'INF'</span><span class=\"p\">],</span>\n        <span class=\"s1\">'right_inclusive'</span><span class=\"p\">:</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"default\"</span><span class=\"p\">:</span><span class=\"s1\">'OTHER'</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"null\"</span><span class=\"p\">:</span> <span class=\"s1\">'NA'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">categoryVariable</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">create_categorical_variable_task</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">rule_set</span><span class=\"p\">,</span> <span class=\"n\">return_variable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">variable_response</span><span class=\"p\">(</span><span class=\"n\">DataFrame</span><span class=\"o\">=</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">variable</span><span class=\"o\">=</span><span class=\"n\">categoryVariable</span><span class=\"p\">,</span> <span class=\"n\">target_variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">,</span> <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<pre><code>            Counts  HighIncome  CountsFraction%  ResponseFraction%  ResponseRate%\nageGRP                                                                           \n1_(0,20]      2410           2          7.40149            0.02551        0.08299\n2_(20,30]     8162         680         25.06680            8.67236        8.33129\n3_(30,40]     8546        2406         26.24612           30.68486       28.15352\n4_(40,50]     6983        2655         21.44590           33.86048       38.02091\n5_(50,60]     4128        1547         12.67774           19.72963       37.47578\n6_(60,INF)    2332         551          7.16194            7.02716       23.62779\nTOTAL        32561        7841        100.00000          100.00000        0.24081\n</code></pre>\n<pre><span class=\"c1\"># Create One Hot Encoded Variables</span>\n<span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">featureVariables</span><span class=\"p\">,</span> <span class=\"n\">targetVariable</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">to_one_hot_encode</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">category_variables</span><span class=\"o\">=</span><span class=\"n\">categoryVariables</span><span class=\"p\">,</span> <span class=\"n\">binary_variables</span><span class=\"o\">=</span><span class=\"n\">binaryVariables</span><span class=\"p\">,</span> <span class=\"n\">target_variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">)</span>\n<span class=\"n\">Data</span><span class=\"p\">[</span><span class=\"n\">identifierColumns</span><span class=\"o\">+</span><span class=\"n\">featureVariables</span><span class=\"o\">+</span><span class=\"p\">[</span><span class=\"n\">targetVariable</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">()</span>\n</pre>\n<h3>Correlation</h3>\n<pre><span class=\"n\">correlation</span><span class=\"o\">=</span><span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">correlation_matrix</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">featureVariables</span><span class=\"o\">+</span><span class=\"p\">[</span><span class=\"n\">targetVariable</span><span class=\"p\">],</span> <span class=\"n\">target_variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'pearson'</span><span class=\"p\">,</span> <span class=\"n\">return_type</span><span class=\"o\">=</span><span class=\"s1\">'list'</span><span class=\"p\">,</span> <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<h3>Split Train, Validate Test datasets</h3>\n<pre><span class=\"n\">TrainDataset</span><span class=\"p\">,</span> <span class=\"n\">ValidateDataset</span><span class=\"p\">,</span> <span class=\"n\">TestDataset</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">train_validate_test_split</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">,</span> <span class=\"n\">ratios</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.6</span><span class=\"p\">,</span><span class=\"mf\">0.2</span><span class=\"p\">,</span><span class=\"mf\">0.2</span><span class=\"p\">))</span>\n</pre>\n<h3>Model Building</h3>\n<pre><span class=\"n\">sample_attributes</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t\t\t\t\t\t<span class=\"s1\">'SampleDescription'</span><span class=\"p\">:</span><span class=\"s1\">'Adult Census Income Dataset'</span><span class=\"p\">,</span>\n\t\t\t\t\t\t<span class=\"s1\">'NumClasses'</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n\t\t\t\t\t\t<span class=\"s1\">'RecordIdentifiers'</span><span class=\"p\">:</span><span class=\"n\">identifierColumns</span>\n                <span class=\"p\">}</span>\n\n<span class=\"n\">score_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t\t\t\t\t<span class=\"s1\">'Edges'</span><span class=\"p\">:[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">],</span>\n\t\t\t\t\t<span class=\"s1\">'Percentiles'</span><span class=\"p\">:[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">0.95</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">],</span>\n\t\t\t\t\t<span class=\"s1\">'Threshold'</span><span class=\"p\">:</span><span class=\"mf\">0.5</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'Quantiles'</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'ScoreVariable'</span><span class=\"p\">:</span><span class=\"s1\">'Probability'</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'ScoreLabel'</span><span class=\"p\">:</span><span class=\"s1\">'Score'</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'QuantileLabel'</span><span class=\"p\">:</span><span class=\"s1\">'Quantile'</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'PredictedLabel'</span><span class=\"p\">:</span><span class=\"s1\">'Predicted'</span>\n                <span class=\"p\">}</span>\n</pre>\n<h1>Classification Models</h1>\n<p>Model Attributes</p>\n<pre><span class=\"n\">model_attributes</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t\t\t\t\t<span class=\"s1\">'ModelID'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'ModelType'</span><span class=\"p\">:</span><span class=\"s1\">'classification'</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'ModelName'</span><span class=\"p\">:</span> <span class=\"s1\">'IncomeLevel'</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'Version'</span><span class=\"p\">:</span><span class=\"s1\">'0.1'</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n</pre>\n<p>Losgistic Regression</p>\n<pre><span class=\"n\">model_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t\t\t\t\t<span class=\"s1\">'MLAlgorithm'</span><span class=\"p\">:</span><span class=\"s1\">'LGR'</span><span class=\"p\">,</span> <span class=\"c1\"># 'RF', #  'NN', # 'CATBST', (# 'CNN',  # 'XGBST')</span>\n\t\t\t\t\t<span class=\"s1\">'MaxIterations'</span><span class=\"p\">:</span><span class=\"mi\">50</span>\n\t\t\t\t<span class=\"p\">}</span>  \n</pre>\n<p>Random Forest</p>\n<pre><span class=\"n\">model_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t\t\t\t\t<span class=\"s1\">'MLAlgorithm'</span><span class=\"p\">:</span><span class=\"s1\">'RF'</span><span class=\"p\">,</span> <span class=\"c1\"># 'LGR', #  'NN', # 'CATBST', (# 'CNN',  # 'XGBST')</span>\n\t\t\t\t\t<span class=\"s1\">'NTrees'</span><span class=\"p\">:</span><span class=\"mi\">500</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'MaxDepth'</span><span class=\"p\">:</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'MinSamplesToSplit'</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'Processors'</span><span class=\"p\">:</span><span class=\"mi\">2</span>\n\t\t\t\t<span class=\"p\">}</span> \n</pre>\n<p>Neural Networks</p>\n<pre><span class=\"c1\"># Setup Architecture</span>\n<span class=\"c1\"># Binary classification (L1 'units': 2), 32 variables ('input_shape':(48,))</span>\n<span class=\"n\">SimpleDFF_architecture</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'L1'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dense'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'input'</span><span class=\"p\">,</span> <span class=\"s1\">'units'</span><span class=\"p\">:</span> <span class=\"mi\">512</span><span class=\"p\">,</span> <span class=\"s1\">'activation'</span><span class=\"p\">:</span><span class=\"s1\">'relu'</span><span class=\"p\">,</span> <span class=\"s1\">'input_shape'</span><span class=\"p\">:(</span><span class=\"mi\">48</span><span class=\"p\">,)},</span>\n        <span class=\"s1\">'L2'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dense'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'hidden'</span><span class=\"p\">,</span> <span class=\"s1\">'units'</span><span class=\"p\">:</span> <span class=\"mi\">512</span><span class=\"p\">,</span> <span class=\"s1\">'activation'</span><span class=\"p\">:</span><span class=\"s1\">'relu'</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L3'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dropout'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'hidden'</span><span class=\"p\">,</span> <span class=\"s1\">'rate'</span><span class=\"p\">:</span><span class=\"mf\">0.5</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L4'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dense'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'output'</span><span class=\"p\">,</span> <span class=\"s1\">'units'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'activation'</span><span class=\"p\">:</span><span class=\"s1\">'softmax'</span><span class=\"p\">,</span> <span class=\"s1\">'output_shape'</span><span class=\"p\">:</span><span class=\"kc\">None</span><span class=\"p\">},</span>\n       <span class=\"p\">}</span>\n\n<span class=\"c1\"># Binary classification (L1 'units': 2), 32 variables ('input_shape':(32,))</span>\n<span class=\"n\">LogisticRegressionNN_architecture</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'L1'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dense'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'input'</span><span class=\"p\">,</span> <span class=\"s1\">'units'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'activation'</span><span class=\"p\">:</span><span class=\"s1\">'softmax'</span><span class=\"p\">,</span> <span class=\"s1\">'input_shape'</span><span class=\"p\">:(</span><span class=\"mi\">32</span><span class=\"p\">,)},</span>\n       <span class=\"p\">}</span>\n\n<span class=\"c1\"># Binary classification (L8 'units': 2)</span>\n<span class=\"n\">SimpleImageClassifier_architecture</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'L1'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Conv2D'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'input'</span><span class=\"p\">,</span> <span class=\"s1\">'filters'</span><span class=\"p\">:</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"s1\">'kernel_size'</span><span class=\"p\">:(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"s1\">'strides'</span><span class=\"p\">:(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"s1\">'padding'</span><span class=\"p\">:</span><span class=\"s1\">'valid'</span><span class=\"p\">,</span> <span class=\"s1\">'activation'</span><span class=\"p\">:</span><span class=\"s1\">'relu'</span><span class=\"p\">,</span> <span class=\"s1\">'input_shape'</span><span class=\"p\">:(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)},</span>\n        <span class=\"s1\">'L2'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Conv2D'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'hidden'</span><span class=\"p\">,</span> <span class=\"s1\">'filters'</span><span class=\"p\">:</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"s1\">'kernel_size'</span><span class=\"p\">:(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"s1\">'strides'</span><span class=\"p\">:(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"s1\">'padding'</span><span class=\"p\">:</span><span class=\"s1\">'valid'</span><span class=\"p\">,</span> <span class=\"s1\">'activation'</span><span class=\"p\">:</span><span class=\"s1\">'relu'</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L3'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'MaxPooling2D'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'hidden'</span><span class=\"p\">,</span> <span class=\"s1\">'pool_size'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"s1\">'padding'</span><span class=\"p\">:</span><span class=\"s1\">'valid'</span><span class=\"p\">},</span>   \n        <span class=\"s1\">'L4'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dropout'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'hidden'</span><span class=\"p\">,</span> <span class=\"s1\">'rate'</span><span class=\"p\">:</span><span class=\"mf\">0.25</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L5'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Flatten'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'hidden'</span><span class=\"p\">},</span>        \n        <span class=\"s1\">'L6'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dense'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'hidden'</span><span class=\"p\">,</span> <span class=\"s1\">'units'</span><span class=\"p\">:</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"s1\">'activation'</span><span class=\"p\">:</span><span class=\"s1\">'relu'</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L7'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dropout'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'hidden'</span><span class=\"p\">,</span> <span class=\"s1\">'rate'</span><span class=\"p\">:</span><span class=\"mf\">0.5</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L8'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dense'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'output'</span><span class=\"p\">,</span> <span class=\"s1\">'units'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'activation'</span><span class=\"p\">:</span><span class=\"s1\">'softmax'</span><span class=\"p\">,</span> <span class=\"s1\">'output_shape'</span><span class=\"p\">:</span><span class=\"kc\">None</span><span class=\"p\">},</span>\n       <span class=\"p\">}</span>\n\n<span class=\"n\">model_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t\t\t\t<span class=\"s1\">'MLAlgorithm'</span><span class=\"p\">:</span><span class=\"s1\">'NN'</span><span class=\"p\">,</span>\n\t\t\t\t<span class=\"s1\">'BatchSize'</span><span class=\"p\">:</span><span class=\"mi\">512</span><span class=\"p\">,</span>\n\t\t\t\t<span class=\"s1\">'InputShape'</span><span class=\"p\">:</span><span class=\"n\">InputShape</span><span class=\"p\">,</span>\n\t\t\t\t<span class=\"s1\">'num_classes'</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n\t\t\t\t<span class=\"s1\">'Epochs'</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n\t\t\t\t<span class=\"s1\">'metrics'</span><span class=\"p\">:[</span><span class=\"s1\">'accuracy'</span><span class=\"p\">],</span>\n\t\t\t\t<span class=\"s1\">'architecture'</span><span class=\"p\">:</span><span class=\"n\">SimpleDFF_architecture</span>\n\t\t\t\t<span class=\"p\">}</span> \n</pre>\n<p>CatBoost</p>\n<pre><span class=\"n\">model_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t\t\t\t\t<span class=\"s1\">'MLAlgorithm'</span><span class=\"p\">:</span><span class=\"s1\">'CBST'</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'NTrees'</span><span class=\"p\">:</span> <span class=\"mi\">500</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'MaxDepth'</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'LearningRate'</span><span class=\"p\">:</span><span class=\"mf\">0.7</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'LossFunction'</span><span class=\"p\">:</span><span class=\"s1\">'Logloss'</span><span class=\"p\">,</span><span class=\"c1\">#crossEntropy</span>\n\t\t\t\t\t<span class=\"s1\">'EvalMatrics'</span><span class=\"p\">:</span><span class=\"s1\">'Accuracy'</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'Imbalanced'</span><span class=\"p\">:</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'TaskType'</span><span class=\"p\">:</span><span class=\"s1\">'GPU'</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'Processors'</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'UseBestModel'</span><span class=\"p\">:</span><span class=\"kc\">True</span>\n\t\t\t\t<span class=\"p\">}</span>\n</pre>\n<h3>Build Model</h3>\n<pre><span class=\"n\">XModel</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">build_ml_model</span><span class=\"p\">(</span><span class=\"n\">TrainDataset</span><span class=\"p\">,</span> <span class=\"n\">ValidateDataset</span><span class=\"p\">,</span> <span class=\"n\">TestDataset</span><span class=\"p\">,</span> \n                                  <span class=\"n\">model_variables</span><span class=\"o\">=</span><span class=\"n\">modelVariables</span><span class=\"p\">,</span>\n                                  <span class=\"n\">variable_setup</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n                                  <span class=\"n\">target_variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">,</span>\n                                  <span class=\"n\">model_attributes</span><span class=\"o\">=</span><span class=\"n\">model_attributes</span><span class=\"p\">,</span> \n                                  <span class=\"n\">sample_attributes</span><span class=\"o\">=</span><span class=\"n\">sample_attributes</span><span class=\"p\">,</span> \n                                  <span class=\"n\">model_parameters</span><span class=\"o\">=</span><span class=\"n\">model_parameters</span><span class=\"p\">,</span> \n                                  <span class=\"n\">score_parameters</span><span class=\"o\">=</span><span class=\"n\">score_parameters</span><span class=\"p\">,</span> \n                                  <span class=\"n\">return_model_object</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> \n                                  <span class=\"n\">show_results</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> \n                                  <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n                                  <span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">XModel</span><span class=\"o\">.</span><span class=\"n\">model_attributes</span><span class=\"p\">[</span><span class=\"s1\">'ModelID'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">XModel</span><span class=\"o\">.</span><span class=\"n\">model_interpretation</span><span class=\"p\">[</span><span class=\"s1\">'ModelSummary'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'ROC AUC: '</span><span class=\"p\">,</span> <span class=\"n\">XModel</span><span class=\"o\">.</span><span class=\"n\">get_auc</span><span class=\"p\">(</span><span class=\"n\">curve</span><span class=\"o\">=</span><span class=\"s1\">'roc'</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'PRC AUC: '</span><span class=\"p\">,</span> <span class=\"n\">XModel</span><span class=\"o\">.</span><span class=\"n\">get_auc</span><span class=\"p\">(</span><span class=\"n\">curve</span><span class=\"o\">=</span><span class=\"s1\">'prc'</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">XModel</span><span class=\"o\">.</span><span class=\"n\">model_evaluation</span><span class=\"p\">[</span><span class=\"s1\">'RobustnessTable'</span><span class=\"p\">])</span>\n\n<span class=\"n\">XModel</span><span class=\"o\">.</span><span class=\"n\">plot_eval_matrics</span><span class=\"p\">(</span><span class=\"n\">comparison</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<pre><code>          minProbability  maxProbability  meanProbability  BucketCount  ResponseCount  BucketFraction  ResponseFraction  BucketPrecision  CumulativeBucketFraction  CumulativeResponseFraction  CumulativePrecision\nQuantile                                                                                                                                                                                                           \n1                0.00000         0.00008      3.85729e-06          652            3         0.10011           0.00192          0.00460                   1.00000                     1.00000              0.23967\n2                0.00008         0.00432      1.52655e-03          651            9         0.09995           0.00577          0.01382                   0.89989                     0.99808              0.26582\n3                0.00435         0.02042      1.10941e-02          652           14         0.10011           0.00897          0.02147                   0.79994                     0.99231              0.29731\n4                0.02049         0.05702      3.58648e-02          650           20         0.09980           0.01281          0.03077                   0.69983                     0.98334              0.33677\n5                0.05711         0.12075      8.51409e-02          652           65         0.10011           0.04164          0.09969                   0.60003                     0.97053              0.38767\n6                0.12086         0.20457      1.63366e-01          651          109         0.09995           0.06983          0.16743                   0.49992                     0.92889              0.44533\n7                0.20469         0.31870      2.61577e-01          651          190         0.09995           0.12172          0.29186                   0.39997                     0.85906              0.51478\n8                0.31895         0.46840      4.03550e-01          666          259         0.10226           0.16592          0.38889                   0.30002                     0.73735              0.58905\n9                0.46854         0.66965      5.68083e-01          641          377         0.09842           0.24151          0.58814                   0.19776                     0.57143              0.69255\n10               0.66994         0.99967      8.06834e-01          647          515         0.09934           0.32992          0.79598                   0.09934                     0.32992              0.79598\nDataSet          0.00000         0.99967      2.33167e-01         6513         1561         1.00000           1.00000          0.23967                   1.00000                     1.00000              0.23967\n</code></pre>\n<h3>Evaluate Model</h3>\n<p>Plot model performance curves</p>\n<pre><span class=\"n\">RFModel</span><span class=\"o\">.</span><span class=\"n\">plot_eval_matrics</span><span class=\"p\">(</span><span class=\"n\">comparison</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">LGRModel</span><span class=\"o\">.</span><span class=\"n\">plot_eval_matrics</span><span class=\"p\">(</span><span class=\"n\">comparison</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">NNModel</span><span class=\"o\">.</span><span class=\"n\">plot_eval_matrics</span><span class=\"p\">(</span><span class=\"n\">comparison</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">CBSTModel</span><span class=\"o\">.</span><span class=\"n\">plot_eval_matrics</span><span class=\"p\">(</span><span class=\"n\">comparison</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Area Under Curve (AUC) Comparison</p>\n<pre><span class=\"n\">Models</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">LGRModel</span><span class=\"p\">,</span> <span class=\"n\">RFModel</span><span class=\"p\">,</span> <span class=\"n\">CBSTModel</span><span class=\"p\">,</span> <span class=\"n\">NNModel</span><span class=\"p\">]</span>\n<span class=\"n\">ModelsComp</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">model_guages_comparison</span><span class=\"p\">(</span><span class=\"n\">Models</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ModelsComp</span><span class=\"p\">)</span>\n</pre>\n<pre><code>                           Model  PRC_AUC  ROC_AUC\n0   INCOMELEVELLGR20190728113633  0.71971  0.88926\n1    INCOMELEVELRF20190728113635  0.69348  0.88113\n2  INCOMELEVELCBST20190728113703  0.71507  0.88975\n3    INCOMELEVELNN20190728113641  0.71396  0.88890\n</code></pre>\n<p>Test Model</p>\n<pre><span class=\"n\">score_variable</span> <span class=\"o\">=</span> <span class=\"n\">RFModel</span><span class=\"o\">.</span><span class=\"n\">get_score_variable</span><span class=\"p\">()</span>\n<span class=\"n\">score_label</span> <span class=\"o\">=</span> <span class=\"n\">RFModel</span><span class=\"o\">.</span><span class=\"n\">get_score_label</span><span class=\"p\">()</span>\n\n<span class=\"n\">TestDataset</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">score_processed_dataset</span><span class=\"p\">(</span><span class=\"n\">TestDataset</span><span class=\"p\">,</span> <span class=\"n\">RFModel</span><span class=\"p\">,</span> <span class=\"n\">edges</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">score_label</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">fill_missing</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">threshold</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>\n<span class=\"n\">TestDataset</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">set_predicted_columns</span><span class=\"p\">(</span><span class=\"n\">TestDataset</span><span class=\"p\">,</span> <span class=\"n\">score_variable</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"n\">threshold</span><span class=\"p\">)</span>\n<span class=\"n\">ConfusionMatrix</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">confusion_matrix</span><span class=\"p\">(</span><span class=\"n\">TestDataset</span><span class=\"p\">,</span> <span class=\"n\">actual_variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">,</span> <span class=\"n\">predcted_variable</span><span class=\"o\">=</span><span class=\"s1\">'Predicted'</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">sample_weight</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">totals</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ConfusionMatrix</span><span class=\"p\">)</span>\n</pre>\n<p>Comparing Models and Probability Thresholds</p>\n<pre><span class=\"n\">Models</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">LGRModel</span><span class=\"p\">,</span> <span class=\"n\">RFModel</span><span class=\"p\">,</span> <span class=\"n\">CBSTModel</span><span class=\"p\">,</span> <span class=\"n\">NNModel</span><span class=\"p\">]</span>\n<span class=\"n\">thresholds</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">]</span>\n<span class=\"n\">ConfusionMatrixComparison</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">confusion_matrix_comparison</span><span class=\"p\">(</span><span class=\"n\">TestDataset</span><span class=\"p\">,</span> <span class=\"n\">Models</span><span class=\"p\">,</span> <span class=\"n\">thresholds</span><span class=\"p\">,</span> <span class=\"n\">score_variable</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">ConfusionMatrixComparison</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"o\">.</span><span class=\"n\">background_gradient</span><span class=\"p\">(</span><span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'RdYlGn'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_precision</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>Comparing Models and Threshold Score (1-10 Scale)</p>\n<pre><span class=\"n\">Models</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">LGRModel</span><span class=\"p\">,</span> <span class=\"n\">RFModel</span><span class=\"p\">,</span> <span class=\"n\">CBSTModel</span><span class=\"p\">,</span> <span class=\"n\">NNModel</span><span class=\"p\">]</span>\n<span class=\"n\">thresholds</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]</span>\n<span class=\"n\">ConfusionMatrixComparison</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">confusion_matrix_comparison</span><span class=\"p\">(</span><span class=\"n\">TestDataset</span><span class=\"p\">,</span> <span class=\"n\">Models</span><span class=\"p\">,</span> <span class=\"n\">thresholds</span><span class=\"p\">,</span> <span class=\"n\">score_variable</span><span class=\"o\">=</span><span class=\"n\">score_label</span><span class=\"p\">,</span> <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">ConfusionMatrixComparison</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"o\">.</span><span class=\"n\">background_gradient</span><span class=\"p\">(</span><span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'RdYlGn'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_precision</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>Set Custom Score Edges</p>\n<pre><span class=\"n\">RobustnessTable</span><span class=\"p\">,</span> <span class=\"n\">ROCCurve</span><span class=\"p\">,</span> <span class=\"n\">PrecisionRecallCurve</span><span class=\"p\">,</span> <span class=\"n\">roc_auc</span><span class=\"p\">,</span> <span class=\"n\">prc_auc</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">model_performance_matrics</span><span class=\"p\">(</span><span class=\"n\">ResultsSet</span><span class=\"o\">=</span><span class=\"n\">TestDataset</span><span class=\"p\">,</span> <span class=\"n\">target_variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">,</span> <span class=\"n\">score_variable</span><span class=\"o\">=</span><span class=\"n\">score_variable</span><span class=\"p\">,</span> <span class=\"n\">quantile_label</span><span class=\"o\">=</span><span class=\"s1\">'Quantile'</span><span class=\"p\">,</span>  <span class=\"n\">quantiles</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'ROC AUC'</span><span class=\"p\">,</span> <span class=\"n\">roc_auc</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'PRC AUC'</span><span class=\"p\">,</span> <span class=\"n\">prc_auc</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">RobustnessTable</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Examine cutoffs</span>\n<span class=\"n\">quantiles</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">]</span>\n<span class=\"n\">edges</span><span class=\"p\">,</span> <span class=\"n\">threshold</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">get_score_cutoffs</span><span class=\"p\">(</span><span class=\"n\">ResultsSet</span><span class=\"o\">=</span><span class=\"n\">TestDataset</span><span class=\"p\">,</span> <span class=\"n\">quantiles</span><span class=\"o\">=</span><span class=\"n\">quantiles</span><span class=\"p\">,</span> <span class=\"n\">target_variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">,</span> <span class=\"n\">score_variable</span><span class=\"o\">=</span><span class=\"n\">scoreVariable</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Threshold'</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Edges'</span><span class=\"p\">,</span> <span class=\"n\">edges</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Re-bin score buckets</span>\n<span class=\"n\">edges</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"mf\">0.75</span><span class=\"p\">,</span> <span class=\"mf\">0.95</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">]</span>\n<span class=\"n\">LGRModel</span><span class=\"o\">.</span><span class=\"n\">set_score_edges</span><span class=\"p\">(</span><span class=\"n\">edges</span><span class=\"p\">)</span>\n</pre>\n<h1>Regression Models</h1>\n<p>Model Attributes</p>\n<pre><span class=\"n\">model_attributes</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t\t\t\t\t<span class=\"s1\">'ModelID'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>   \n\t\t\t\t\t<span class=\"s1\">'ModelType'</span><span class=\"p\">:</span><span class=\"s1\">'regression'</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'ModelName'</span><span class=\"p\">:</span> <span class=\"s1\">'Income'</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'Version'</span><span class=\"p\">:</span><span class=\"s1\">'0.1'</span><span class=\"p\">,</span>\n                   <span class=\"p\">}</span>\n</pre>\n<pre><span class=\"n\">model_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t\t\t\t\t<span class=\"s1\">'MLAlgorithm'</span><span class=\"p\">:</span><span class=\"s1\">'RFREG'</span><span class=\"p\">,</span> <span class=\"c1\"># 'RFREG'</span>\n\t\t\t\t\t<span class=\"s1\">'NTrees'</span><span class=\"p\">:</span><span class=\"mi\">200</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'MaxDepth'</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'MinSamplesToSplit'</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">,</span>\n\t\t\t\t\t<span class=\"s1\">'Processors'</span><span class=\"p\">:</span><span class=\"mi\">2</span>\n\t\t\t\t   <span class=\"p\">}</span> \n<span class=\"n\">model_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'MLAlgorithm'</span><span class=\"p\">:</span><span class=\"s1\">'LREG'</span><span class=\"p\">,</span> <span class=\"s1\">'MaxIterations'</span><span class=\"p\">:</span><span class=\"mi\">100</span><span class=\"p\">}</span>\n</pre>\n<pre><span class=\"n\">REGModel</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">build_ml_model</span><span class=\"p\">(</span><span class=\"n\">TrainDataset</span><span class=\"p\">,</span> <span class=\"n\">ValidateDataset</span><span class=\"p\">,</span> <span class=\"n\">TestDataset</span><span class=\"p\">,</span> \n                                  <span class=\"n\">model_variables</span><span class=\"o\">=</span><span class=\"n\">modelVariables</span><span class=\"p\">,</span>\n                                  <span class=\"n\">variable_setup</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n                                  <span class=\"n\">target_variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">,</span>\n                                  <span class=\"n\">model_attributes</span><span class=\"o\">=</span><span class=\"n\">model_attributes</span><span class=\"p\">,</span> \n                                  <span class=\"n\">sample_attributes</span><span class=\"o\">=</span><span class=\"n\">sample_attributes</span><span class=\"p\">,</span> \n                                  <span class=\"n\">model_parameters</span><span class=\"o\">=</span><span class=\"n\">model_parameters</span><span class=\"p\">,</span> \n                                  <span class=\"n\">score_parameters</span><span class=\"o\">=</span><span class=\"n\">score_parameters</span><span class=\"p\">,</span> \n                                  <span class=\"n\">return_model_object</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> \n                                  <span class=\"n\">show_results</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> \n                                  <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n                                  <span class=\"p\">)</span>\n</pre>\n<pre><code>print(REGModel.model_attributes['ModelID'])\nprint(REGModel.model_interpretation['ModelSummary'])\nprint('RMSE =', SelectModel.get_rmse())\nprint('R^2 =', SelectModel.get_r2())\nREGModel.plot_eval_matrics(comparison=True)\nSelectModel.plot_eval_matrics(comparison=True)\n</code></pre>\n<p>Save model</p>\n<pre><span class=\"n\">saveFilePath</span> <span class=\"o\">=</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">.pkl'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">XModel</span><span class=\"o\">.</span><span class=\"n\">get_model_id</span><span class=\"p\">())</span>\n<span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">save_model</span><span class=\"p\">(</span><span class=\"n\">XModel</span><span class=\"p\">,</span> <span class=\"n\">saveFilePath</span><span class=\"p\">)</span>\n</pre>\n<h3>Deployment</h3>\n<p>Simplified MLToolkit ETL pipeline for scoring and model re-building (Need to customize based on the project).\n<img height=\"300\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a990a18b529673a4dacd63b1cddecff303f15f19/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f737074656e6e616b2f4d4c546f6f6c6b69742f6d61737465722f4d4c546f6f6c6b69742f696d6167652f4d4c544b53657276696e672e706e67\"></p>\n<p>Define ETL Function</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">ETL</span><span class=\"p\">(</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">variables_setup_dict</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Add ID column</span>\n    <span class=\"n\">DataFrame</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">add_identity_column</span><span class=\"p\">(</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">id_label</span><span class=\"o\">=</span><span class=\"s1\">'ID'</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">increment</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Clean column names</span>\n    <span class=\"n\">DataFrame</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">clean_column_names</span><span class=\"p\">(</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">replace</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n    <span class=\"n\">input_columns</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">DataFrame</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">)</span>\n\n\t<span class=\"k\">if</span> <span class=\"n\">variables_setup_dict</span><span class=\"o\">==</span><span class=\"kc\">None</span><span class=\"p\">:</span>\n\t\t<span class=\"n\">variables_setup_dict</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"   </span>\n<span class=\"s2\">\t\t{</span>\n<span class=\"s2\">\t\t\t\"setting\":\"score\",</span>\n\n<span class=\"s2\">\t\t\t\"variables\": {            </span>\n<span class=\"s2\">\t\t\t\t\t\"category_variables\" : [\"sex\", \"race\", \"occupation\", \"workclass\", \"maritalstatus\", \"relationship\"],</span>\n<span class=\"s2\">\t\t\t\t\t\"binary_variables\": [],</span>\n<span class=\"s2\">\t\t\t\t\t\"target_variable\":\"HighIncome\"</span>\n<span class=\"s2\">\t\t\t},</span>\n\n<span class=\"s2\">\t\t\t\"preprocess_tasks\": [</span>\n<span class=\"s2\">\t\t\t\t{</span>\n<span class=\"s2\">\t\t\t\t\t\"type\": \"transform\",</span>\n<span class=\"s2\">\t\t\t\t\t\"out_type\":\"cnt\",</span>\n<span class=\"s2\">\t\t\t\t\t\"include\": false,</span>\n<span class=\"s2\">\t\t\t\t\t\"operation\": \"normalize\",</span>\n<span class=\"s2\">\t\t\t\t\t\"variables\": {</span>\n<span class=\"s2\">\t\t\t\t\t\t\"source\": \"age\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\"destination\": \"normalizedage\"</span>\n<span class=\"s2\">\t\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t\t\"parameters\": {</span>\n<span class=\"s2\">\t\t\t\t\t\t\"method\": \"zscore\"</span>\n<span class=\"s2\">\t\t\t\t\t}</span>\n<span class=\"s2\">\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t{</span>\n<span class=\"s2\">\t\t\t\t\t\"type\": \"category_merge\",</span>\n<span class=\"s2\">\t\t\t\t\t\"out_type\":\"cat\",</span>\n<span class=\"s2\">\t\t\t\t\t\"include\": true,</span>\n<span class=\"s2\">\t\t\t\t\t\"operation\": \"catmerge\",</span>\n<span class=\"s2\">\t\t\t\t\t\"variables\": {</span>\n<span class=\"s2\">\t\t\t\t\t\t\"source\": \"maritalstatus\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\"destination\": \"maritalstatus\"</span>\n<span class=\"s2\">\t\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t\t\"parameters\": {</span>\n<span class=\"s2\">\t\t\t\t\t\t\"group_value\": \"Married\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\"values\": [ \"Married-civ-spouse\", \"Married-spouse-absent\", \"Married-AF-spouse\" ]</span>\n<span class=\"s2\">\t\t\t\t\t}</span>\n<span class=\"s2\">\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t{</span>\n<span class=\"s2\">\t\t\t\t\t\"type\": \"entity\",</span>\n<span class=\"s2\">\t\t\t\t\t\"out_type\":\"cat\",</span>\n<span class=\"s2\">\t\t\t\t\t\"include\": true,</span>\n<span class=\"s2\">\t\t\t\t\t\"operation\": \"dictionary\",</span>\n<span class=\"s2\">\t\t\t\t\t\"variables\": {</span>\n<span class=\"s2\">\t\t\t\t\t\t\"source\": \"nativecountry\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\"destination\": \"nativecountryGRP\"</span>\n<span class=\"s2\">\t\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t\t\"parameters\": {</span>\n<span class=\"s2\">\t\t\t\t\t\t\"match_type\": null,</span>\n<span class=\"s2\">\t\t\t\t\t\t\"dictionary\": [</span>\n<span class=\"s2\">\t\t\t\t\t\t\t{</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"entity\": \"USA\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"values\": [ \"United-States\" ],</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"case\": true</span>\n<span class=\"s2\">\t\t\t\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t\t\t\t{</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"entity\": \"Canada\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"values\": [ \"Canada\" ],</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"case\": true</span>\n<span class=\"s2\">\t\t\t\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t\t\t\t{</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"entity\": \"OtherAmericas\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"values\": [ \"South\", \"Mexico\", \"Trinadad&amp;Tobago\", \"Jamaica\", \"Peru\", \"Nicaragua\", \"Dominican-Republic\", \"Haiti\", \"Ecuador\", \"El-Salvador\", \"Columbia\", \"Honduras\", \"Guatemala\", \"Puerto-Rico\", \"Cuba\", \"Outlying-US(Guam-USVI-etc)\"],</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"case\": true</span>\n<span class=\"s2\">\t\t\t\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t\t\t\t{</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"entity\": \"Europe-Med\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"values\": [ \"Greece\", \"Holand-Netherlands\", \"Poland\", \"Iran\", \"England\", \"Germany\", \"Italy\", \"Ireland\", \"Hungary\", \"France\", \"Yugoslavia\", \"Scotland\", \"Portugal\" ],</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"case\": true</span>\n<span class=\"s2\">\t\t\t\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t\t\t\t{</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"entity\": \"Asia\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"values\": [ \"Vietnam\", \"China\", \"Taiwan\", \"India\", \"Philippines\", \"Japan\", \"Hong\", \"Cambodia\", \"Laos\", \"Thailand\" ],</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"case\": true</span>\n<span class=\"s2\">\t\t\t\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t\t\t\t{</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"entity\": \"Other\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"values\": [ \"?\" ],</span>\n<span class=\"s2\">\t\t\t\t\t\t\t\t\"case\": true</span>\n<span class=\"s2\">\t\t\t\t\t\t\t}</span>\n<span class=\"s2\">\t\t\t\t\t\t],</span>\n<span class=\"s2\">\t\t\t\t\t\t\"null\": \"NA\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\"default\": \"OTHER\"</span>\n<span class=\"s2\">\t\t\t\t\t}</span>\n<span class=\"s2\">\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t{</span>\n<span class=\"s2\">\t\t\t\t\t\"type\": \"category\",</span>\n<span class=\"s2\">\t\t\t\t\t\"out_type\":\"cat\",</span>\n<span class=\"s2\">\t\t\t\t\t\"include\": true,</span>\n<span class=\"s2\">\t\t\t\t\t\"operation\": \"bucket\",</span>\n<span class=\"s2\">\t\t\t\t\t\"variables\": {</span>\n<span class=\"s2\">\t\t\t\t\t\t\"source\": \"age\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\"destination\": null</span>\n<span class=\"s2\">\t\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t\t\"parameters\": {</span>\n<span class=\"s2\">\t\t\t\t\t\t\"labels_str\": [ \"0\", \"20\", \"30\", \"40\", \"50\", \"60\", \"INF\" ],</span>\n<span class=\"s2\">\t\t\t\t\t\t\"right_inclusive\": true,</span>\n<span class=\"s2\">\t\t\t\t\t\t\"default\": \"OTHER\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\"null\": \"NA\"</span>\n<span class=\"s2\">\t\t\t\t\t}</span>\n<span class=\"s2\">\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t{</span>\n<span class=\"s2\">\t\t\t\t\t\"type\": \"category\",</span>\n<span class=\"s2\">\t\t\t\t\t\"out_type\":\"cat\",</span>\n<span class=\"s2\">\t\t\t\t\t\"include\": true,</span>\n<span class=\"s2\">\t\t\t\t\t\"operation\": \"bucket\",</span>\n<span class=\"s2\">\t\t\t\t\t\"variables\": {</span>\n<span class=\"s2\">\t\t\t\t\t\t\"source\": \"educationnum\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\"destination\": null</span>\n<span class=\"s2\">\t\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t\t\"parameters\": {</span>\n<span class=\"s2\">\t\t\t\t\t\t\"labels_str\": [ \"1\", \"5\", \"8\", \"9\", \"12\", \"16\" ],</span>\n<span class=\"s2\">\t\t\t\t\t\t\"right_inclusive\": true,</span>\n<span class=\"s2\">\t\t\t\t\t\t\"default\": \"OTHER\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\"null\": \"NA\"</span>\n<span class=\"s2\">\t\t\t\t\t}</span>\n<span class=\"s2\">\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t{</span>\n<span class=\"s2\">\t\t\t\t\t\"type\": \"category\",</span>\n<span class=\"s2\">\t\t\t\t\t\"out_type\":\"cat\",</span>\n<span class=\"s2\">\t\t\t\t\t\"include\": true,</span>\n<span class=\"s2\">\t\t\t\t\t\"operation\": \"bucket\",</span>\n<span class=\"s2\">\t\t\t\t\t\"variables\": {</span>\n<span class=\"s2\">\t\t\t\t\t\t\"source\": \"hoursperweek\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\"destination\": null</span>\n<span class=\"s2\">\t\t\t\t\t},</span>\n<span class=\"s2\">\t\t\t\t\t\"parameters\": {</span>\n<span class=\"s2\">\t\t\t\t\t\t\"labels_str\": [ \"0\", \"20\", \"35\", \"40\", \"60\", \"INF\" ],</span>\n<span class=\"s2\">\t\t\t\t\t\t\"right_inclusive\": true,</span>\n<span class=\"s2\">\t\t\t\t\t\t\"default\": \"OTHER\",</span>\n<span class=\"s2\">\t\t\t\t\t\t\"null\": \"NA\"</span>\n<span class=\"s2\">\t\t\t\t\t}</span>\n<span class=\"s2\">\t\t\t\t}</span>\n<span class=\"s2\">\t\t\t]</span>\n<span class=\"s2\">\t\t}</span>\n<span class=\"s2\">\t\t\"\"\"</span>\n\n    <span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">categoryVariables</span><span class=\"p\">,</span> <span class=\"n\">binaryVariables</span><span class=\"p\">,</span> <span class=\"n\">targetVariable</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">setup_variables_task</span><span class=\"p\">(</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">variables_setup_dict</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Create One Hot Encoded Variables</span>\n    <span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">featureVariables</span><span class=\"p\">,</span> <span class=\"n\">targetVariable</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">to_one_hot_encode</span><span class=\"p\">(</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">category_variables</span><span class=\"o\">=</span><span class=\"n\">categoryVariables</span><span class=\"p\">,</span> <span class=\"n\">binary_variables</span><span class=\"o\">=</span><span class=\"n\">binaryVariables</span><span class=\"p\">,</span> <span class=\"n\">target_variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">input_columns</span>\n</pre>\n<p>Scoring/Ranking</p>\n<pre><span class=\"n\">MLModelObject</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">load_model</span><span class=\"p\">(</span><span class=\"n\">saveFilePath</span><span class=\"p\">)</span>\n<span class=\"n\">SampleDataset</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'test.csv'</span><span class=\"p\">)</span>\n<span class=\"n\">SampleDataset</span> <span class=\"o\">=</span> <span class=\"n\">ETL</span><span class=\"p\">(</span><span class=\"n\">SampleDataset</span><span class=\"p\">)</span>\n\n<span class=\"n\">SampleDataset</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">score_processed_dataset</span><span class=\"p\">(</span><span class=\"n\">SampleDataset</span><span class=\"p\">,</span> <span class=\"n\">MLModelObject</span><span class=\"p\">,</span> <span class=\"n\">edges</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">score_label</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">fill_missing</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">Robustnesstable1</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">robustness_table</span><span class=\"p\">(</span><span class=\"n\">ResultsSet</span><span class=\"o\">=</span><span class=\"n\">SampleDataset</span><span class=\"p\">,</span> <span class=\"n\">class_variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">,</span> <span class=\"n\">score_variable</span><span class=\"o\">=</span><span class=\"n\">score_variable</span><span class=\"p\">,</span>  <span class=\"n\">score_label</span><span class=\"o\">=</span><span class=\"n\">score_label</span><span class=\"p\">,</span> <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"n\">MLModelObject</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">load_model</span><span class=\"p\">(</span><span class=\"n\">saveFilePath</span><span class=\"p\">)</span>\n\n<span class=\"n\">TestInput</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">{</span>\n<span class=\"s2\">      \"ID\": \"A001\",</span>\n<span class=\"s2\">      \"age\": 32,</span>\n<span class=\"s2\">      \"workclass\": \"Private\",</span>\n<span class=\"s2\">      \"education\": \"Doctorate\",</span>\n<span class=\"s2\">      \"education-num\": 16,</span>\n<span class=\"s2\">      \"marital-status\": \"Married-civ-spouse\",</span>\n<span class=\"s2\">      \"occupation\": \"Prof-specialty\",</span>\n<span class=\"s2\">      \"relationship\": \"Husband\",</span>\n<span class=\"s2\">      \"race\": \"Asian-Pac-Islander\",</span>\n<span class=\"s2\">      \"sex\": \"Male\",</span>\n<span class=\"s2\">      \"capital-gain\": 0,</span>\n<span class=\"s2\">      \"capital-loss\": 0,</span>\n<span class=\"s2\">      \"hours-per-week\": 40,</span>\n<span class=\"s2\">      \"native-country\": \"?\"</span>\n<span class=\"s2\">}</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">score_records</span><span class=\"p\">(</span><span class=\"n\">TestInput</span><span class=\"p\">,</span> <span class=\"n\">MLModelObject</span><span class=\"p\">,</span> <span class=\"n\">edges</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">ETL</span><span class=\"o\">=</span><span class=\"n\">ETL</span><span class=\"p\">,</span> <span class=\"n\">return_type</span><span class=\"o\">=</span><span class=\"s1\">'dict'</span><span class=\"p\">)</span> <span class=\"c1\"># Other options for return_type, {'json', 'frame'}</span>\n</pre>\n<p>Output</p>\n<pre><span class=\"p\">[{</span><span class=\"s1\">'ID'</span><span class=\"p\">:</span> <span class=\"s1\">'A001'</span><span class=\"p\">,</span>\n <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">32</span><span class=\"p\">,</span>\n <span class=\"s1\">'capitalgain'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n <span class=\"s1\">'capitalloss'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n <span class=\"s1\">'education'</span><span class=\"p\">:</span> <span class=\"s1\">'Doctorate'</span><span class=\"p\">,</span>\n <span class=\"s1\">'educationnum'</span><span class=\"p\">:</span> <span class=\"mi\">16</span><span class=\"p\">,</span>\n <span class=\"s1\">'hoursperweek'</span><span class=\"p\">:</span> <span class=\"mi\">40</span><span class=\"p\">,</span>\n <span class=\"s1\">'maritalstatus'</span><span class=\"p\">:</span> <span class=\"s1\">'Married'</span><span class=\"p\">,</span>\n <span class=\"s1\">'nativecountry'</span><span class=\"p\">:</span> <span class=\"s1\">'?'</span><span class=\"p\">,</span>\n <span class=\"s1\">'occupation'</span><span class=\"p\">:</span> <span class=\"s1\">'Prof-specialty'</span><span class=\"p\">,</span>\n <span class=\"s1\">'race'</span><span class=\"p\">:</span> <span class=\"s1\">'Asian-Pac-Islander'</span><span class=\"p\">,</span>\n <span class=\"s1\">'relationship'</span><span class=\"p\">:</span> <span class=\"s1\">'Husband'</span><span class=\"p\">,</span>\n <span class=\"s1\">'sex'</span><span class=\"p\">:</span> <span class=\"s1\">'Male'</span><span class=\"p\">,</span>\n <span class=\"s1\">'workclass'</span><span class=\"p\">:</span> <span class=\"s1\">'Private'</span><span class=\"p\">,</span>\n <span class=\"s1\">'Probability'</span><span class=\"p\">:</span> <span class=\"mf\">0.6790258814478549</span><span class=\"p\">,</span>\n <span class=\"s1\">'Score'</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">}]</span>\n</pre>\n<h3>Model Output Explanation (Using SHAP and LIME Python libraries)</h3>\n<pre><span class=\"c1\"># Create Explainer</span>\n<span class=\"n\">Explainer</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">build_explainer</span><span class=\"p\">(</span><span class=\"n\">MLModelObject</span><span class=\"p\">,</span> <span class=\"n\">explainer_config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'IdColumns'</span><span class=\"p\">:[</span><span class=\"s1\">'ID'</span><span class=\"p\">],</span> <span class=\"s1\">'Method'</span><span class=\"p\">:</span><span class=\"s1\">'shap'</span><span class=\"p\">,</span> <span class=\"s1\">'ClassNumber'</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'FillMissing'</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">})</span>\n\n<span class=\"n\">save_file_path</span> <span class=\"o\">=</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">_Explainer.pkl'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">MLModelObject</span><span class=\"o\">.</span><span class=\"n\">get_model_id</span><span class=\"p\">())</span>\n<span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">save_explainer</span><span class=\"p\">(</span><span class=\"n\">Explainer</span><span class=\"p\">,</span> <span class=\"n\">save_file_path</span><span class=\"p\">)</span>\n\n<span class=\"n\">Explainer</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">load_explainer</span><span class=\"p\">(</span><span class=\"n\">save_file_path</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Calculate Impact Values</span>\n<span class=\"n\">ImpactValues</span><span class=\"p\">,</span> <span class=\"n\">VariableValues</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">get_explainer_values_task</span><span class=\"p\">(</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">Explainer</span><span class=\"o\">=</span><span class=\"n\">Explainer</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Plot Variable Impact</span>\n<span class=\"c1\"># force_plot</span>\n<span class=\"n\">explainer_visual</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">get_explainer_visual</span><span class=\"p\">(</span><span class=\"n\">ImpactValues</span><span class=\"p\">,</span> <span class=\"n\">VariableValues</span><span class=\"p\">,</span> <span class=\"n\">Explainer</span><span class=\"p\">,</span> <span class=\"n\">visual_config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'figsize'</span><span class=\"p\">:[</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"s1\">'text_rotation'</span><span class=\"p\">:</span><span class=\"mi\">90</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Generate Explain Summary</span>\n<span class=\"n\">explainer_summary</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">get_shap_impact_summary</span><span class=\"p\">(</span><span class=\"n\">ImpactValues</span><span class=\"p\">,</span> <span class=\"n\">VariableValues</span><span class=\"p\">,</span> <span class=\"n\">Explainer</span><span class=\"o\">.</span><span class=\"n\">get_model_variables</span><span class=\"p\">(),</span> <span class=\"n\">iloc</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">top_n</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">explainer_report</span><span class=\"p\">,</span> <span class=\"n\">explain_plot</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">get_explainer_report</span><span class=\"p\">(</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">Explainer</span><span class=\"p\">,</span> <span class=\"n\">top_n</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">return_type</span><span class=\"o\">=</span><span class=\"s1\">'frame'</span><span class=\"p\">)</span>\n</pre>\n<h3>JSON Input for scoring</h3>\n<p>Records Format for single or fewer number of records</p>\n<pre><span class=\"p\">[{</span>\n\t<span class=\"nt\">\"ID\"</span><span class=\"p\">:</span> <span class=\"s2\">\"A001\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"age\"</span><span class=\"p\">:</span> <span class=\"mi\">32</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"workclass\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Private\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"education\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Doctorate\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"occupation\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Prof-specialty\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"sex\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Female\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"hoursperweek\"</span><span class=\"p\">:</span> <span class=\"mi\">40</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"nativecountry\"</span><span class=\"p\">:</span> <span class=\"s2\">\"USA\"</span>\n<span class=\"p\">}]</span>\n</pre>\n<p>Split Format for mulltiple records</p>\n<pre><span class=\"p\">{</span>\n\t<span class=\"nt\">\"columns\"</span><span class=\"p\">:[</span><span class=\"s2\">\"ID\"</span><span class=\"p\">,</span><span class=\"s2\">\"age\"</span><span class=\"p\">,</span><span class=\"s2\">\"education\"</span><span class=\"p\">,</span><span class=\"s2\">\"hoursperweek\"</span><span class=\"p\">,</span><span class=\"s2\">\"nativecountry\"</span><span class=\"p\">,</span><span class=\"s2\">\"occupation\"</span><span class=\"p\">,</span><span class=\"s2\">\"sex\"</span><span class=\"p\">,</span><span class=\"s2\">\"workclass\"</span><span class=\"p\">],</span>\n\t<span class=\"nt\">\"data\"</span><span class=\"p\">:[[</span><span class=\"s2\">\"A001\"</span><span class=\"p\">,</span><span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"s2\">\"Doctorate\"</span><span class=\"p\">,</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"s2\">\"USA\"</span><span class=\"p\">,</span><span class=\"s2\">\"Prof-specialty\"</span><span class=\"p\">,</span><span class=\"s2\">\"Female\"</span><span class=\"p\">,</span><span class=\"s2\">\"Private\"</span><span class=\"p\">]]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Using Model Chest to Deploy Models</p>\n<pre><span class=\"n\">MyModelChest</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">ModelChest</span><span class=\"p\">()</span>\n<span class=\"n\">MyModelChest</span><span class=\"o\">.</span><span class=\"n\">add_model</span><span class=\"p\">(</span><span class=\"n\">model_key</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">,</span> <span class=\"n\">model_file</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">model_object</span><span class=\"o\">=</span><span class=\"n\">MLModelObject</span><span class=\"p\">,</span> <span class=\"n\">replace</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">MyModelChest</span><span class=\"o\">.</span><span class=\"n\">save_model_chest</span><span class=\"p\">()</span>\n<span class=\"n\">MyModelChest</span><span class=\"o\">.</span><span class=\"n\">get_model_chest_json</span><span class=\"p\">()</span>\n</pre>\n<p>load Models from Model Chest</p>\n<pre><span class=\"n\">lodedModel</span> <span class=\"o\">=</span> <span class=\"n\">MyModelChest</span><span class=\"o\">.</span><span class=\"n\">get_model_object</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n<span class=\"n\">lodedModel</span><span class=\"o\">.</span><span class=\"n\">get_model_manifest</span><span class=\"p\">()</span>\n</pre>\n<h2>Working with Image Data</h2>\n<pre><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">96</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span>\n<span class=\"n\">file_folder_path</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s1\">'C:\\Projects\\Data\\images\\train'</span>\n<span class=\"n\">ImagesDataFrame</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">read_image_folder</span><span class=\"p\">(</span><span class=\"n\">file_folder_path</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">show_image</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"n\">ImagesDataFrame</span><span class=\"p\">,</span> <span class=\"n\">input_shape</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">prepare_image_dataset_to_model</span><span class=\"p\">(</span><span class=\"n\">ImagesDataFrame</span><span class=\"p\">,</span> \n                                                             <span class=\"n\">image_column</span><span class=\"o\">=</span><span class=\"s1\">'Image'</span><span class=\"p\">,</span> \n                                                             <span class=\"n\">processed_image_column</span><span class=\"o\">=</span><span class=\"s1\">'ImageToModel'</span><span class=\"p\">,</span>\n                                                             <span class=\"n\">label_column</span><span class=\"o\">=</span><span class=\"s1\">'Label'</span><span class=\"p\">,</span>\n                                                             <span class=\"n\">image_data_format</span><span class=\"o\">=</span><span class=\"s1\">'channels_last'</span><span class=\"p\">,</span> \n                                                             <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">size</span><span class=\"p\">)</span>\n</pre>\n<h3>Building CNN Model</h3>\n<pre><span class=\"n\">sample_attributes</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'SampleDescription'</span><span class=\"p\">:</span><span class=\"s1\">'Image CLassification Example'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'NumClasses'</span><span class=\"p\">:</span><span class=\"n\">NClasses</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'RecordIdentifiers'</span><span class=\"p\">:</span><span class=\"n\">identifierColumns</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'ModelDataStats'</span><span class=\"p\">:</span><span class=\"n\">modelDataStats</span>\n                    <span class=\"p\">}</span>\n\n<span class=\"n\">score_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'Edges'</span><span class=\"p\">:[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">],</span>\n                    <span class=\"s1\">'Percentiles'</span><span class=\"p\">:[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">0.95</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">],</span>\n                    <span class=\"s1\">'Threshold'</span><span class=\"p\">:</span><span class=\"mf\">0.5</span><span class=\"p\">,</span>\n                   <span class=\"s1\">'Quantiles'</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n                   <span class=\"s1\">'ScoreVariable'</span><span class=\"p\">:</span><span class=\"s1\">'Probability'</span><span class=\"p\">,</span>\n                   <span class=\"s1\">'ScoreLabel'</span><span class=\"p\">:</span><span class=\"s1\">'Score'</span><span class=\"p\">,</span>\n                   <span class=\"s1\">'QuantileLabel'</span><span class=\"p\">:</span><span class=\"s1\">'Quantile'</span><span class=\"p\">,</span>\n                   <span class=\"s1\">'PredictedLabel'</span><span class=\"p\">:</span><span class=\"s1\">'Predicted'</span>\n                   <span class=\"p\">}</span>\n\n<span class=\"n\">model_attributes</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">'ModelID'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>   \n                    <span class=\"s1\">'ModelType'</span><span class=\"p\">:</span><span class=\"s1\">'classification'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'ModelName'</span><span class=\"p\">:</span> <span class=\"s1\">'IncomeLevel'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'Version'</span><span class=\"p\">:</span><span class=\"s1\">'0.1'</span><span class=\"p\">,</span>\n                   <span class=\"p\">}</span>\n\n<span class=\"n\">architecture</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'L1'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Conv2D'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'input'</span><span class=\"p\">,</span> <span class=\"s1\">'filters'</span><span class=\"p\">:</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"s1\">'kernel_size'</span><span class=\"p\">:(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"s1\">'padding'</span><span class=\"p\">:</span><span class=\"s1\">'same'</span><span class=\"p\">,</span> <span class=\"s1\">'strides'</span><span class=\"p\">:(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"s1\">'activation'</span><span class=\"p\">:</span><span class=\"s1\">'relu'</span><span class=\"p\">,</span> <span class=\"s1\">'input_shape'</span><span class=\"p\">:</span><span class=\"n\">input_shape</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L2'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'MaxPooling2D'</span><span class=\"p\">,</span> <span class=\"s1\">'pool_size'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"s1\">'padding'</span><span class=\"p\">:</span><span class=\"s1\">'same'</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L3'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dropout'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'hidden'</span><span class=\"p\">,</span> <span class=\"s1\">'rate'</span><span class=\"p\">:</span><span class=\"mf\">0.2</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L4'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Conv2D'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'hidden'</span><span class=\"p\">,</span> <span class=\"s1\">'filters'</span><span class=\"p\">:</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"s1\">'kernel_size'</span><span class=\"p\">:(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"s1\">'padding'</span><span class=\"p\">:</span><span class=\"s1\">'same'</span><span class=\"p\">,</span> <span class=\"s1\">'strides'</span><span class=\"p\">:(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"s1\">'activation'</span><span class=\"p\">:</span><span class=\"s1\">'relu'</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L5'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'MaxPooling2D'</span><span class=\"p\">,</span> <span class=\"s1\">'pool_size'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"s1\">'padding'</span><span class=\"p\">:</span><span class=\"s1\">'same'</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L6'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dropout'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'hidden'</span><span class=\"p\">,</span> <span class=\"s1\">'rate'</span><span class=\"p\">:</span><span class=\"mf\">0.2</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L7'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Flatten'</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L8'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dense'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'hidden'</span><span class=\"p\">,</span> <span class=\"s1\">'units'</span><span class=\"p\">:</span> <span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"s1\">'activation'</span><span class=\"p\">:</span><span class=\"s1\">'softmax'</span><span class=\"p\">,</span> <span class=\"s1\">'output_shape'</span><span class=\"p\">:</span><span class=\"kc\">None</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L9'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dropout'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'hidden'</span><span class=\"p\">,</span> <span class=\"s1\">'rate'</span><span class=\"p\">:</span><span class=\"mf\">0.2</span><span class=\"p\">},</span>\n        <span class=\"s1\">'L10'</span><span class=\"p\">:{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'Dense'</span><span class=\"p\">,</span> <span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"s1\">'output'</span><span class=\"p\">,</span> <span class=\"s1\">'units'</span><span class=\"p\">:</span> <span class=\"n\">n_classes</span><span class=\"p\">,</span> <span class=\"s1\">'activation'</span><span class=\"p\">:</span><span class=\"s1\">'softmax'</span><span class=\"p\">,</span> <span class=\"s1\">'output_shape'</span><span class=\"p\">:</span><span class=\"kc\">None</span><span class=\"p\">},</span>\n       <span class=\"p\">}</span>\t\n\n<span class=\"n\">model_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'MLAlgorithm'</span><span class=\"p\">:</span><span class=\"s1\">'CNN'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'BatchSize'</span><span class=\"p\">:</span><span class=\"mi\">128</span><span class=\"p\">,</span>\n                   <span class=\"s1\">'InputShape'</span><span class=\"p\">:</span><span class=\"n\">inputShape</span><span class=\"p\">,</span>\n                   <span class=\"s1\">'NumClasses'</span><span class=\"p\">:</span><span class=\"n\">NClasses</span><span class=\"p\">,</span>\n                   <span class=\"s1\">'Epochs'</span><span class=\"p\">:</span><span class=\"mi\">50</span><span class=\"p\">,</span>\n                   <span class=\"s1\">'EvalMatrics'</span><span class=\"p\">:[</span><span class=\"s1\">'accuracy'</span><span class=\"p\">],</span>\n                   <span class=\"s1\">'Architecture'</span><span class=\"p\">:</span><span class=\"n\">architecture</span><span class=\"p\">}</span> \n\n<span class=\"n\">CNNModel</span> <span class=\"o\">=</span> <span class=\"n\">mltk</span><span class=\"o\">.</span><span class=\"n\">build_ml_model</span><span class=\"p\">(</span><span class=\"n\">TrainDataset</span><span class=\"p\">,</span> <span class=\"n\">ValidateDataset</span><span class=\"p\">,</span> <span class=\"n\">TestDataset</span><span class=\"p\">,</span> \n                                  <span class=\"n\">model_variables</span><span class=\"o\">=</span><span class=\"n\">modelVariables</span><span class=\"p\">,</span>\n                                  <span class=\"n\">variable_setup</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n                                  <span class=\"n\">target_variable</span><span class=\"o\">=</span><span class=\"n\">targetVariable</span><span class=\"p\">,</span>\n                                  <span class=\"n\">model_attributes</span><span class=\"o\">=</span><span class=\"n\">model_attributes</span><span class=\"p\">,</span> \n                                  <span class=\"n\">sample_attributes</span><span class=\"o\">=</span><span class=\"n\">sample_attributes</span><span class=\"p\">,</span> \n                                  <span class=\"n\">model_parameters</span><span class=\"o\">=</span><span class=\"n\">model_parameters</span><span class=\"p\">,</span> \n                                  <span class=\"n\">score_parameters</span><span class=\"o\">=</span><span class=\"n\">score_parameters</span><span class=\"p\">,</span> \n                                  <span class=\"n\">return_model_object</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> \n                                  <span class=\"n\">show_results</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> \n                                  <span class=\"n\">show_plot</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n                                  <span class=\"p\">)</span>\n\n<span class=\"n\">CNNModel</span><span class=\"o\">.</span><span class=\"n\">plot_eval_matrics</span><span class=\"p\">()</span>\t\t\t\t\t\t  \n</pre>\n<h2>License</h2>\n<pre><code>Copyright 2019 Sumudu Tennakoon\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n</code></pre>\n<h2>Cite as</h2>\n<pre><code>@misc{mltk2019,\n  author =  \"Sumudu Tennakoon\",\n  title = \"MLToolKit(mltk): A Simplified Toolkit for End-To-End Machine Learing Projects\",\n  year = 2019,\n  publisher = \"GitHub\",\n  howpublished = {\\url{https://mltoolkit.github.io/mltk/}},\n  version = \"0.1.9\"\n}\n</code></pre>\n<h2>MLToolKit Project Timeline</h2>\n<ul>\n<li>2018-07-02 [v0.0.1]: Initial set of functions for data exploration, model building and model evaluation was published to Github. (<a href=\"https://github.com/sptennak/MachineLearning\" rel=\"nofollow\">https://github.com/sptennak/MachineLearning</a>).</li>\n<li>2018-01-03 [v0.0.2]: Created more functions for data exploration including web scraping and geo spacial data analysis for for IBM Coursera Data Science Capstone Project was published to Github. (<a href=\"https://github.com/sptennak/Coursera_Capstone\" rel=\"nofollow\">https://github.com/sptennak/Coursera_Capstone</a>).</li>\n<li>2019-03-20 [v0.1.0]: Developed and published initial version of model building and serving framework for IBM Coursera Advanced Data Science Professional Certificate Capstone Project. (<a href=\"https://github.com/sptennak/IBM-Coursera-Advanced-Data-Science-Capstone\" rel=\"nofollow\">https://github.com/sptennak/IBM-Coursera-Advanced-Data-Science-Capstone</a>).</li>\n<li>2019-07-02 [v0.1.2]: First release of the PyMLToolkit Python package, a collection of clases and functions facilitating end-to-end machine learning model building and serving over RESTful API.</li>\n<li>2019-07-04 [v0.1.3]: Minor bug fixes.</li>\n<li>2019-07-14 [v0.1.4]: Improved documentation, Integrated TensorFlow Models, Enhancements and Minor bug fixes.</li>\n<li>2019-07-28 [v0.1.5]: Integrated CatBoost Models, Improved model building and serving frameework, text analytics functions, support JSON input/output to the ML model bulding and scoring processes, Enhancements and bug fixes.</li>\n<li>2019-08-12 [v0.1.6]: Improved Features, Bug Fixes, Enhanced JSON input/output to the ML model bulding and scoring processes (JSON-MLS) and bug fixes.</li>\n<li>2019-08-31 [v0.1.7] : Added more data processing functions, Enhanced output formats, Enhanced model deployment, Overall improvements and bug fixes.</li>\n<li>2019-09-28 [v0.1.8] : Improved Documentation, Enhancements and bug fixes.</li>\n<li>2019-12-07 [v0.1.9] : Added model explainability, Integrate image classification model Deployment, Enhancements and bug fixes.</li>\n</ul>\n<h2>Future Release Plan</h2>\n<ul>\n<li>TBD [v0.1.10] : Working with Imbalanced Samples, Integrate Cross-validation, Post additional tutorials and examples, Improved Documentation, Enhancements and bug fixes.</li>\n<li>TBD [v0.1.11] : Building Ensamble Models, UI Preview, Improved Feature Selection, Cross-validation and Hyper parameter tuning functionality, Enhancements and bug fixes.</li>\n<li>TBD [v0.1.12]: ML Model Building Projects, Enhancements and bug fixes.</li>\n<li>2019-12-31 [v0.1.13]:Comprehensive documentation, Post implementation evaluation functions, Enhanced Data Input and Output functios, Major bug-fix version of the initial release with finalized enhancements.</li>\n<li>TBD [v0.2.0]: Imporved model building and serving frameework and UI, Support more machine learning algorithms, Support multi-class classification and enhanced text analytics functions.</li>\n<li>TBD [v0.3.0]: Imporved scalability and performance, Automated Machine Learning.</li>\n<li>TBD [v0.4.0]: Building continious learning models.</li>\n</ul>\n<h2>Acknowledgement and Remarks</h2>\n<p>Some functions of MLToolKit depends on number of Open Source Python Libraries such as</p>\n<ul>\n<li>Data Manipulation : Pandas</li>\n<li>Machine Learning: Statsmodels, Scikit-learn, Catboost</li>\n<li>Deep Learning: Tensorflow,</li>\n<li>Model Interpretability: Shap, Lime</li>\n<li>Server Framework: Flask</li>\n<li>Text Processing: BeautifulSoup, TextLab</li>\n<li>Database Connectivity: SQLAlchemy, PyODBC\nMLToolkit Project acknowledge the creators and contributors of the above libraries for their contribution to the Open Source Community.</li>\n</ul>\n<p>MLToolKit library and some novel concepts introduced with original ideas of the author implemented as an effort of putting together the lifetime learning and experience working on multiple data science projects to a good use and as a contribution back to the Open Source Community.</p>\n<p>Author would like to thank number of content creators in the data science and machine learning topics not limited to online learning platforms and blogs for making aviable insightful resources to explore and learn the subject. A complete reference list will be published with a future version...</p>\n<p>As a Free and Open Source initiative and a independent R&amp;D project, author has no conflict of interest or, financial interest to the MLToolKit library. However, proper mention of the source abiding the License Terms is highly appreciated when the library itself or any useful concepts or parts are used.</p>\n<p>MLToolKit is set to evolve with adding more features and functionality, and interoperability with more standard data science and machine learning libraries. MLToolKit will always be available as Free and Open Source Python library in the future.</p>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://pandas.pydata.org/\" rel=\"nofollow\">https://pandas.pydata.org/</a></li>\n<li><a href=\"https://scikit-learn.org\" rel=\"nofollow\">https://scikit-learn.org</a></li>\n<li><a href=\"https://www.tensorflow.org/\" rel=\"nofollow\">https://www.tensorflow.org/</a></li>\n<li><a href=\"https://keras.io/layers/recurrent/\" rel=\"nofollow\">https://keras.io/layers/recurrent/</a></li>\n<li><a href=\"https://www.numpy.org/\" rel=\"nofollow\">https://www.numpy.org/</a></li>\n<li><a href=\"https://docs.python.org/3.6/library/re.html\" rel=\"nofollow\">https://docs.python.org/3.6/library/re.html</a></li>\n<li><a href=\"https://www.statsmodels.org\" rel=\"nofollow\">https://www.statsmodels.org</a></li>\n<li><a href=\"https://matplotlib.org/\" rel=\"nofollow\">https://matplotlib.org/</a></li>\n<li><a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">http://flask.pocoo.org/</a></li>\n<li><a href=\"https://catboost.ai/\" rel=\"nofollow\">https://catboost.ai/</a></li>\n<li><a href=\"https://github.com/slundberg/shap\" rel=\"nofollow\">https://github.com/slundberg/shap</a></li>\n<li><a href=\"https://github.com/marcotcr/lime\" rel=\"nofollow\">https://github.com/marcotcr/lime</a></li>\n<li><a href=\"http://json.org/\" rel=\"nofollow\">http://json.org/</a></li>\n<li><a href=\"https://pillow.readthedocs.io/en/stable/\" rel=\"nofollow\">https://pillow.readthedocs.io/en/stable/</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6262313, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "6f484a1296810c229c4ba69adddcb1f7", "sha256": "4660b8c61f22a17b02cfcb4774c1a04df92fe2025d8d9454a7ca7b3498839734"}, "downloads": -1, "filename": "python_mltk-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6f484a1296810c229c4ba69adddcb1f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40946, "upload_time": "2019-07-20T16:06:29", "upload_time_iso_8601": "2019-07-20T16:06:29.984681Z", "url": "https://files.pythonhosted.org/packages/6c/8c/27bcbafd25037101bb71cb5e2cf463a7d404dbbda56d66c3f234768fcd01/python_mltk-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e04080d1c71513a248da7f35669d315a", "sha256": "b60b99064fe19b310616bab6882dbcef63c116eb57def6ad03b75ffe7ae91d6c"}, "downloads": -1, "filename": "python-mltk-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e04080d1c71513a248da7f35669d315a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31195, "upload_time": "2019-07-20T16:06:32", "upload_time_iso_8601": "2019-07-20T16:06:32.734007Z", "url": "https://files.pythonhosted.org/packages/ad/11/c32bded776e594e254d986bd1247f41825e1c3de1a208468c39a33d4f892/python-mltk-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "11a5cc10fe6c2fa52765983ad3ff4d9c", "sha256": "32825fd2f6f325ee6effe8ee4eb1cac2af6c9fc69016f1c27c2dc89e664b6b8d"}, "downloads": -1, "filename": "python_mltk-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "11a5cc10fe6c2fa52765983ad3ff4d9c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49674, "upload_time": "2019-07-28T22:57:51", "upload_time_iso_8601": "2019-07-28T22:57:51.824794Z", "url": "https://files.pythonhosted.org/packages/b7/67/6774e02767107fdf3c25cd8ba2615c4864c4fb760208836ad2b29b90fe2d/python_mltk-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ba27ccc724541d4d21aa61b3c069660", "sha256": "42b0eb4fc9a5eec5b8382d1cdd8c5b55054af196cd3d84a1f364e6b0d273a892"}, "downloads": -1, "filename": "python-mltk-0.1.5.tar.gz", "has_sig": false, "md5_digest": "3ba27ccc724541d4d21aa61b3c069660", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40307, "upload_time": "2019-07-28T22:57:53", "upload_time_iso_8601": "2019-07-28T22:57:53.789524Z", "url": "https://files.pythonhosted.org/packages/d3/88/4976306f06aed7f21a198836912a85d9cee3a803a6648acbe2369b106900/python-mltk-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "96c86a01c7fcbcd543a35ce610bfa630", "sha256": "61062f2bdfe78d9e0d7d7919ec2e122f1345da08ef737848cf5b066dc9e1e3eb"}, "downloads": -1, "filename": "python_mltk-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "96c86a01c7fcbcd543a35ce610bfa630", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 58448, "upload_time": "2019-08-12T13:05:34", "upload_time_iso_8601": "2019-08-12T13:05:34.390153Z", "url": "https://files.pythonhosted.org/packages/2b/12/fa08872a8ba8e884c902eb7060446896c0ad21cba0001f2fccc2f3027d43/python_mltk-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "043e023da026a61b111e6710be55034f", "sha256": "0e0f63da4e126a4936f099fea0959faeb945f0a3cb83b487e983ee055f6c45a8"}, "downloads": -1, "filename": "python-mltk-0.1.6.tar.gz", "has_sig": false, "md5_digest": "043e023da026a61b111e6710be55034f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63983, "upload_time": "2019-08-12T13:05:37", "upload_time_iso_8601": "2019-08-12T13:05:37.552946Z", "url": "https://files.pythonhosted.org/packages/69/7a/2b9c30fbafc5b8edeb4188568a921c90accf722001921a9d73d830211f2d/python-mltk-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "993e8210ea17dae714b28f43c7258a07", "sha256": "ae29784e4fb25481186f76708ea21e34e86334c04f1b1a37fbf455ea514ee9bd"}, "downloads": -1, "filename": "python_mltk-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "993e8210ea17dae714b28f43c7258a07", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 65600, "upload_time": "2019-09-02T06:00:44", "upload_time_iso_8601": "2019-09-02T06:00:44.645009Z", "url": "https://files.pythonhosted.org/packages/70/15/a62bf660c7d0ac11d6ad84228215389590f25b01e47f5456efb8b0e62119/python_mltk-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0feb9f86cf11c60b8cd9ad8627e8339c", "sha256": "2f30df9d827f4d8c4710216c574de63fa38c1918925cd03c9b41b05607b38bcd"}, "downloads": -1, "filename": "python-mltk-0.1.7.tar.gz", "has_sig": false, "md5_digest": "0feb9f86cf11c60b8cd9ad8627e8339c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71166, "upload_time": "2019-09-02T06:00:46", "upload_time_iso_8601": "2019-09-02T06:00:46.964650Z", "url": "https://files.pythonhosted.org/packages/ca/c9/a5ccf71ab66dbd7df39d5fb11f8c7cdf11585cdf21dae687cdbcf896537f/python-mltk-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "44f152c7af3e1344243c616fc957ee69", "sha256": "6427d4431f94c18c836f91a045705cfb3d155715a881abadee44a17c5a2fb4c0"}, "downloads": -1, "filename": "python_mltk-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "44f152c7af3e1344243c616fc957ee69", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 68439, "upload_time": "2019-09-29T02:03:39", "upload_time_iso_8601": "2019-09-29T02:03:39.241687Z", "url": "https://files.pythonhosted.org/packages/42/78/156e14d01447e8ac6fe82867d08e3454314f18944b96afec576259e72d4d/python_mltk-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e39c584423eb507f763e50d5902df1c", "sha256": "8674f2bf9e626272376d9d898ff6501a9694fa0ae0e8ebe0a82587efa6491c50"}, "downloads": -1, "filename": "python-mltk-0.1.8.tar.gz", "has_sig": false, "md5_digest": "1e39c584423eb507f763e50d5902df1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74072, "upload_time": "2019-09-29T02:03:41", "upload_time_iso_8601": "2019-09-29T02:03:41.593114Z", "url": "https://files.pythonhosted.org/packages/bc/b2/ca5628b3625f0c3babcdfe22848a4f14af51519918b77ca2ab1b7e0da8fb/python-mltk-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "fe981776b5267339cfa4d55dab6cbf3d", "sha256": "3e7b3539c7f01fa2ecf034f6512eae7211e5b6cfc6589d3e856fbda3955256a1"}, "downloads": -1, "filename": "python_mltk-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "fe981776b5267339cfa4d55dab6cbf3d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 77844, "upload_time": "2019-12-08T14:55:57", "upload_time_iso_8601": "2019-12-08T14:55:57.997631Z", "url": "https://files.pythonhosted.org/packages/ee/43/db8f7f822a4599b04f7f16c1369afd4512b157c8a42321f2cd493799a305/python_mltk-0.1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf01d1dd2d8add708c3549dc42a1cafc", "sha256": "069039acc924b410cc8cccd72c614558aeedab687f0359c66d76d8ffa9585fd5"}, "downloads": -1, "filename": "python-mltk-0.1.9.tar.gz", "has_sig": false, "md5_digest": "cf01d1dd2d8add708c3549dc42a1cafc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84630, "upload_time": "2019-12-08T14:56:00", "upload_time_iso_8601": "2019-12-08T14:56:00.696842Z", "url": "https://files.pythonhosted.org/packages/98/b4/684ce4b71d3c9a5cea69f1235cc7bb47a6647af385d2d9e023c2d05ad6cc/python-mltk-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fe981776b5267339cfa4d55dab6cbf3d", "sha256": "3e7b3539c7f01fa2ecf034f6512eae7211e5b6cfc6589d3e856fbda3955256a1"}, "downloads": -1, "filename": "python_mltk-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "fe981776b5267339cfa4d55dab6cbf3d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 77844, "upload_time": "2019-12-08T14:55:57", "upload_time_iso_8601": "2019-12-08T14:55:57.997631Z", "url": "https://files.pythonhosted.org/packages/ee/43/db8f7f822a4599b04f7f16c1369afd4512b157c8a42321f2cd493799a305/python_mltk-0.1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf01d1dd2d8add708c3549dc42a1cafc", "sha256": "069039acc924b410cc8cccd72c614558aeedab687f0359c66d76d8ffa9585fd5"}, "downloads": -1, "filename": "python-mltk-0.1.9.tar.gz", "has_sig": false, "md5_digest": "cf01d1dd2d8add708c3549dc42a1cafc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84630, "upload_time": "2019-12-08T14:56:00", "upload_time_iso_8601": "2019-12-08T14:56:00.696842Z", "url": "https://files.pythonhosted.org/packages/98/b4/684ce4b71d3c9a5cea69f1235cc7bb47a6647af385d2d9e023c2d05ad6cc/python-mltk-0.1.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:32 2020"}