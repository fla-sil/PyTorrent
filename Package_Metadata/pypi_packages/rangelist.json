{"info": {"author": "Alexei M", "author_email": "alexeidjango@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "# Basics\n\nRange is a continuous interval between two points (boundaries). E.g. a numeric interval, a time interval, alphabetic interval, etc. Examples of range are:\n\n- (1; 3) \u2013 means that any number between 1 and 3 belongs to this interval, **excluding** 1 and 3.\n- [1; 3] \u2013 means that any number between 1 and 3 belongs to this interval, **including** 1 and 3.\n- (1; 3] \u2013 means that any number between 1 and 3 belongs to this interval, **excluding 1** and **including**  3. \n\nOn the numeric or time scale multiple ranges can intersect or coexist. An arbitrary point on this scale can be included or excluded from the intersection of all ranges. \n\nThe `rangelist` package, as follows from it's name, represents lists of ranges, but not just a plain list, but a proper, valid intersection of ranges on the numeric or time scale, and what's more important - tells if a point or a range belongs to the given list of ranges. \n\nA range is usually represented by (x; y) or [x; y] record, meaning literally 'Interval from x to y'.\n\nBoundary points may or may not belong to the interval itself; to signify that, round or square brackets are used.\n\nA range can be a single point, e.g. [1; 1] - this means that only 1 is in it's range. \n\nA continuous interval can have an excluded point. E.g. [1; 5] + (3;3) => [1; 3), (3; 5]\n\n## Usage\n\nThere are 3 basic types: `Point`, `RangeItem` and `RangeList`.\n\n`Point` basically represents a point, which can be an arbitrary value; there are 2 special points to represent infinity and negative infinity:\n\n```python\n>>> from rangelist.point import Point, INF, NEG_INF\n>>> Point(1)\n1\n>>> Point(1) == Point(3)\nFalse\n>>> Point(1) == Point(1)\nTrue\n>>> Point(3) > Point(1)\nTrue\n>>> INF\ninf\n>>> NEG_INF\n-inf\n>>> INF > Point(999)\nTrue\n\n```\n\n`RangeItem` represents a single range:\n\n```python\n>>> from rangelist.rangeitem import RangeItem\n>>> RangeItem(1, 3, left_excluded=False, right_excluded=True)\n[1, 3)\n>>> 1 in RangeItem(1, 3, left_excluded=False, right_excluded=True)\nTrue\n>>> 2 in RangeItem(1, 3, left_excluded=False, right_excluded=True)\nTrue\n>>> 3 in RangeItem(1, 3, left_excluded=False, right_excluded=True)\nFalse\n```\n\nRange items support basic math operations such as inclusion, equality and intersection checks. It's also possible to test a point for inclusion into given range:\n\n```python\n>>> RangeItem(1, 3) in RangeItem(0, 4)\nTrue\n>>> RangeItem(1, 3) == RangeItem(1, 3)\nTrue\n>>> RangeItem(1, 3) > RangeItem(-1, 0)\nTrue\n>>> RangeItem(1, 3).intersects_with(RangeItem(-1, 0))\nFalse\n>>> RangeItem(1, 3).intersects_with(RangeItem(-1, 2))\nTrue\n>>> 2 in RangeItem(1, 3)\nTrue\n\n```\n\n`RangeList` represents intersection of multiple `RangeItem`objects, honouring their boundaries:\n\n1. Add 2 ranges with **included** boundaries, and then add a range that overlaps both ranges, hence it will create a single, continuous range:\n\n   ```python\n   >>> r = RangeList()\n   >>> r.insert(RangeItem(0, 2))\n   >>> r\n   ['[0, 2]']\n   >>> r.insert(RangeItem(10, 20))\n   >>> r\n   ['[0, 2]', '[10, 20]']\n   >>> r.insert(RangeItem(1, 11))\n   >>> r\n   ['[0, 20]']\n   ```\n\n2. Add 2 ranges, one range has excluded boundary. Then add a range that overlaps both. In this case excluded boundary point must stay excluded (ranges will break):\n\n   ```python\n   >>> r = RangeList()\n   >>> r.insert(RangeItem(0, 4))\n   >>> r\n   ['[0, 4]']\n   >>> r.insert(RangeItem(5, 10, left_excluded=True))\n   >>> r\n   ['[0, 4]', '(5, 10]']\n   >>> r.insert(RangeItem(2, 8))  # note that this range overlaps existing, but point 5 is excluded\n   >>> r\n   ['[0, 5)', '(5, 10]']\n   ```\n\n3. Just a bit more complex example, when we overlap 2 ranges with excluded boundaries:\n\n   ```python\n   >>> r = RangeList()\n   >>> r.insert(RangeItem(1, 4, left_excluded=True, right_excluded=True))\n   >>> r\n   ['(1, 4)']\n   >>> r.insert(RangeItem(3, 6, left_excluded=True, right_excluded=True))\n   >>> r\n   ['(1, 3)', '(3, 4)', '(4, 6)']\n   >>> 2 in r\n   True\n   >>> 3 in r\n   False\n   >>> 4 in r\n   False\n   >>> 5 in r\n   >>> RangeItem(4.5, 5.5) in r\n   True\n   >>> RangeItem(4, 6) in r\n   False\n   >>> RangeItem(4, 6, left_excluded=True, right_excluded=True) in r\n   True\n   ```\n\n# Real world application\n\nConsider 2 examples:\n\n1. Range intersection on the numeric scale. Suppose we want to program system of equations:\n\n   - x < -5\n   - x \u22602\n   - x > - 1\n\n   and then be able to test if an arbitrary point satisfies these equations.\n\n    Let's create a range intersection with `rangelist`\n\n   ```python\n   >>> from rangelist.rangelist import RangeList\n   >>> from rangelist.rangeitem import RangeItem\n   >>> from rangelist.point import INF, NEG_INF\n   >>> \n   >>> range_items = [\n   ...     RangeItem(NEG_INF, -5, right_excluded=True),\n   ...     RangeItem(2, 2, left_excluded=True, right_excluded=True),\n   ...     RangeItem(-1, INF, left_excluded=True),\n   ... ]\n   >>> \n   >>> range_list = RangeList(range_items)\n   >>> range_list\n   ['[-inf, -5)', '(-1, 2)', '(2, inf]']\n   >>> -10 in range_list\n   True\n   >>> -5 in range_list  # should be False, since -5 is not included\n   False\n   >>> -3 in range_list  # should be False, it's outside of any interval\n   False\n   >>> 0 in range_list  # should be True\n   True\n   >>> 10 in range_list  # should be True\n   True\n   ```\n\n2. Timescale. Suppose we're building a system that sends notifications to customers, and each customer has their own rules when to send or not send them notifications. Suppose a customer wants notifications to be sent from 8am sharp to 10am, and from 1pm to 8pm excluding lunch time 2:30pm - 3pm. Let's build a range list for this example, and then we can test an arbitrary time to see if it fits customer's expectations:\n\n   ```python\n   >>> r = RangeList()\n   >>> r.insert(RangeItem(dt.time(8, 0), dt.time(10, 0), right_excluded=True))\n   >>> r.insert(RangeItem(dt.time(13, 0), dt.time(14, 30), right_excluded=True))\n   >>> r.insert(RangeItem(dt.time(15, 0), dt.time(20, 0), right_excluded=True))\n   >>> r\n   ['[08:00:00, 10:00:00)', '[13:00:00, 14:30:00)', '[15:00:00, 20:00:00)']\n   >>> dt.time(8, 0) in r\n   True\n   >>> dt.time(10, 0) in r\n   False\n   >>> dt.time(14, 0) in r\n   True\n   >>> dt.time(14, 30) in r\n   False\n   >>> dt.time(20, 30) in r\n   False\n   ```\n\n# Installation\n\nBest way to install is using `pip`: `pip install rangelist`\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alexeidjango/rangelist", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "rangelist", "package_url": "https://pypi.org/project/rangelist/", "platform": "", "project_url": "https://pypi.org/project/rangelist/", "project_urls": {"Homepage": "https://github.com/alexeidjango/rangelist"}, "release_url": "https://pypi.org/project/rangelist/0.0.4/", "requires_dist": null, "requires_python": ">=2.7", "summary": "List of intersecting ranges", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Basics</h1>\n<p>Range is a continuous interval between two points (boundaries). E.g. a numeric interval, a time interval, alphabetic interval, etc. Examples of range are:</p>\n<ul>\n<li>(1; 3) \u2013 means that any number between 1 and 3 belongs to this interval, <strong>excluding</strong> 1 and 3.</li>\n<li>[1; 3] \u2013 means that any number between 1 and 3 belongs to this interval, <strong>including</strong> 1 and 3.</li>\n<li>(1; 3] \u2013 means that any number between 1 and 3 belongs to this interval, <strong>excluding 1</strong> and <strong>including</strong>  3.</li>\n</ul>\n<p>On the numeric or time scale multiple ranges can intersect or coexist. An arbitrary point on this scale can be included or excluded from the intersection of all ranges.</p>\n<p>The <code>rangelist</code> package, as follows from it's name, represents lists of ranges, but not just a plain list, but a proper, valid intersection of ranges on the numeric or time scale, and what's more important - tells if a point or a range belongs to the given list of ranges.</p>\n<p>A range is usually represented by (x; y) or [x; y] record, meaning literally 'Interval from x to y'.</p>\n<p>Boundary points may or may not belong to the interval itself; to signify that, round or square brackets are used.</p>\n<p>A range can be a single point, e.g. [1; 1] - this means that only 1 is in it's range.</p>\n<p>A continuous interval can have an excluded point. E.g. [1; 5] + (3;3) =&gt; [1; 3), (3; 5]</p>\n<h2>Usage</h2>\n<p>There are 3 basic types: <code>Point</code>, <code>RangeItem</code> and <code>RangeList</code>.</p>\n<p><code>Point</code> basically represents a point, which can be an arbitrary value; there are 2 special points to represent infinity and negative infinity:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">rangelist.point</span> <span class=\"kn\">import</span> <span class=\"n\">Point</span><span class=\"p\">,</span> <span class=\"n\">INF</span><span class=\"p\">,</span> <span class=\"n\">NEG_INF</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">INF</span>\n<span class=\"n\">inf</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">NEG_INF</span>\n<span class=\"o\">-</span><span class=\"n\">inf</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">INF</span> <span class=\"o\">&gt;</span> <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">999</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n</pre>\n<p><code>RangeItem</code> represents a single range:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">rangelist.rangeitem</span> <span class=\"kn\">import</span> <span class=\"n\">RangeItem</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">left_excluded</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">right_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">1</span> <span class=\"ow\">in</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">left_excluded</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">right_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">2</span> <span class=\"ow\">in</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">left_excluded</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">right_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">3</span> <span class=\"ow\">in</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">left_excluded</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">right_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"kc\">False</span>\n</pre>\n<p>Range items support basic math operations such as inclusion, equality and intersection checks. It's also possible to test a point for inclusion into given range:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">intersects_with</span><span class=\"p\">(</span><span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">intersects_with</span><span class=\"p\">(</span><span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">2</span> <span class=\"ow\">in</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n</pre>\n<p><code>RangeList</code> represents intersection of multiple <code>RangeItem</code>objects, honouring their boundaries:</p>\n<ol>\n<li>\n<p>Add 2 ranges with <strong>included</strong> boundaries, and then add a range that overlaps both ranges, hence it will create a single, continuous range:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">RangeList</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span>\n<span class=\"p\">[</span><span class=\"s1\">'[0, 2]'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span>\n<span class=\"p\">[</span><span class=\"s1\">'[0, 2]'</span><span class=\"p\">,</span> <span class=\"s1\">'[10, 20]'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span>\n<span class=\"p\">[</span><span class=\"s1\">'[0, 20]'</span><span class=\"p\">]</span>\n</pre>\n</li>\n<li>\n<p>Add 2 ranges, one range has excluded boundary. Then add a range that overlaps both. In this case excluded boundary point must stay excluded (ranges will break):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">RangeList</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span>\n<span class=\"p\">[</span><span class=\"s1\">'[0, 4]'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">left_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span>\n<span class=\"p\">[</span><span class=\"s1\">'[0, 4]'</span><span class=\"p\">,</span> <span class=\"s1\">'(5, 10]'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">))</span>  <span class=\"c1\"># note that this range overlaps existing, but point 5 is excluded</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span>\n<span class=\"p\">[</span><span class=\"s1\">'[0, 5)'</span><span class=\"p\">,</span> <span class=\"s1\">'(5, 10]'</span><span class=\"p\">]</span>\n</pre>\n</li>\n<li>\n<p>Just a bit more complex example, when we overlap 2 ranges with excluded boundaries:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">RangeList</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">left_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">right_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span>\n<span class=\"p\">[</span><span class=\"s1\">'(1, 4)'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">left_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">right_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span>\n<span class=\"p\">[</span><span class=\"s1\">'(1, 3)'</span><span class=\"p\">,</span> <span class=\"s1\">'(3, 4)'</span><span class=\"p\">,</span> <span class=\"s1\">'(4, 6)'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">2</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">3</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">4</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">5</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mf\">4.5</span><span class=\"p\">,</span> <span class=\"mf\">5.5</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">left_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">right_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"kc\">True</span>\n</pre>\n</li>\n</ol>\n<h1>Real world application</h1>\n<p>Consider 2 examples:</p>\n<ol>\n<li>\n<p>Range intersection on the numeric scale. Suppose we want to program system of equations:</p>\n<ul>\n<li>x &lt; -5</li>\n<li>x \u22602</li>\n<li>x &gt; - 1</li>\n</ul>\n<p>and then be able to test if an arbitrary point satisfies these equations.</p>\n<p>Let's create a range intersection with <code>rangelist</code></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">rangelist.rangelist</span> <span class=\"kn\">import</span> <span class=\"n\">RangeList</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">rangelist.rangeitem</span> <span class=\"kn\">import</span> <span class=\"n\">RangeItem</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">rangelist.point</span> <span class=\"kn\">import</span> <span class=\"n\">INF</span><span class=\"p\">,</span> <span class=\"n\">NEG_INF</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">range_items</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"o\">...</span>     <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"n\">NEG_INF</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">right_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">left_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">right_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">INF</span><span class=\"p\">,</span> <span class=\"n\">left_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n<span class=\"o\">...</span> <span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">range_list</span> <span class=\"o\">=</span> <span class=\"n\">RangeList</span><span class=\"p\">(</span><span class=\"n\">range_items</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">range_list</span>\n<span class=\"p\">[</span><span class=\"s1\">'[-inf, -5)'</span><span class=\"p\">,</span> <span class=\"s1\">'(-1, 2)'</span><span class=\"p\">,</span> <span class=\"s1\">'(2, inf]'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"ow\">in</span> <span class=\"n\">range_list</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">-</span><span class=\"mi\">5</span> <span class=\"ow\">in</span> <span class=\"n\">range_list</span>  <span class=\"c1\"># should be False, since -5 is not included</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">-</span><span class=\"mi\">3</span> <span class=\"ow\">in</span> <span class=\"n\">range_list</span>  <span class=\"c1\"># should be False, it's outside of any interval</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">0</span> <span class=\"ow\">in</span> <span class=\"n\">range_list</span>  <span class=\"c1\"># should be True</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">10</span> <span class=\"ow\">in</span> <span class=\"n\">range_list</span>  <span class=\"c1\"># should be True</span>\n<span class=\"kc\">True</span>\n</pre>\n</li>\n<li>\n<p>Timescale. Suppose we're building a system that sends notifications to customers, and each customer has their own rules when to send or not send them notifications. Suppose a customer wants notifications to be sent from 8am sharp to 10am, and from 1pm to 8pm excluding lunch time 2:30pm - 3pm. Let's build a range list for this example, and then we can test an arbitrary time to see if it fits customer's expectations:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">RangeList</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">right_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">),</span> <span class=\"n\">right_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">RangeItem</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">right_excluded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span>\n<span class=\"p\">[</span><span class=\"s1\">'[08:00:00, 10:00:00)'</span><span class=\"p\">,</span> <span class=\"s1\">'[13:00:00, 14:30:00)'</span><span class=\"p\">,</span> <span class=\"s1\">'[15:00:00, 20:00:00)'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"kc\">False</span>\n</pre>\n</li>\n</ol>\n<h1>Installation</h1>\n<p>Best way to install is using <code>pip</code>: <code>pip install rangelist</code></p>\n\n          </div>"}, "last_serial": 6440462, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "b07e8d76cfdae74736179f01778308aa", "sha256": "537606d4ef5384395b3fc9a947c8f6e53c84d61839990740e30d8a08579e06d5"}, "downloads": -1, "filename": "rangelist-0.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "b07e8d76cfdae74736179f01778308aa", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7", "size": 8164, "upload_time": "2020-01-12T15:44:35", "upload_time_iso_8601": "2020-01-12T15:44:35.164415Z", "url": "https://files.pythonhosted.org/packages/ae/94/2c664e2ec44754f594ba66a03df197af845dfb8f0888a4d9d7499c2a8370/rangelist-0.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c8e92954c627c7b1e357ad06c2fbee2", "sha256": "00cb195870bcaedffca73eb0263e088bf43ccda7f214896568515db8140a16c1"}, "downloads": -1, "filename": "rangelist-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2c8e92954c627c7b1e357ad06c2fbee2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 6745, "upload_time": "2020-01-12T15:44:37", "upload_time_iso_8601": "2020-01-12T15:44:37.785594Z", "url": "https://files.pythonhosted.org/packages/52/b4/9c07bbd7736df849ad648bc0338a051b028818be0615e8e4ef8295adeade/rangelist-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "610d7f9a801366ce0851040b5bb33f22", "sha256": "8b92fd919022a4ad10552a86ea6f8d167547793b3a8ebd5563897fd6822da717"}, "downloads": -1, "filename": "rangelist-0.0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "610d7f9a801366ce0851040b5bb33f22", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7", "size": 8164, "upload_time": "2020-01-12T17:01:06", "upload_time_iso_8601": "2020-01-12T17:01:06.093810Z", "url": "https://files.pythonhosted.org/packages/6c/6f/945fb71670cfd7e710def1c5578b2be0b19a8b2eeb9b5ee1f30459f1c46f/rangelist-0.0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5ea9e4ef83ee69701b786c08e14aa58", "sha256": "b05d7bedcb0de01b698a69c5926e47fa4a4da04cc139ebf608a6dd17aa1d2e00"}, "downloads": -1, "filename": "rangelist-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a5ea9e4ef83ee69701b786c08e14aa58", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 7380, "upload_time": "2020-01-12T17:01:07", "upload_time_iso_8601": "2020-01-12T17:01:07.605403Z", "url": "https://files.pythonhosted.org/packages/b7/55/1547b1341387a2a4bab5a05386c17097872ff57f1156b67768c57f18fd8e/rangelist-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "610d7f9a801366ce0851040b5bb33f22", "sha256": "8b92fd919022a4ad10552a86ea6f8d167547793b3a8ebd5563897fd6822da717"}, "downloads": -1, "filename": "rangelist-0.0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "610d7f9a801366ce0851040b5bb33f22", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7", "size": 8164, "upload_time": "2020-01-12T17:01:06", "upload_time_iso_8601": "2020-01-12T17:01:06.093810Z", "url": "https://files.pythonhosted.org/packages/6c/6f/945fb71670cfd7e710def1c5578b2be0b19a8b2eeb9b5ee1f30459f1c46f/rangelist-0.0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5ea9e4ef83ee69701b786c08e14aa58", "sha256": "b05d7bedcb0de01b698a69c5926e47fa4a4da04cc139ebf608a6dd17aa1d2e00"}, "downloads": -1, "filename": "rangelist-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a5ea9e4ef83ee69701b786c08e14aa58", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 7380, "upload_time": "2020-01-12T17:01:07", "upload_time_iso_8601": "2020-01-12T17:01:07.605403Z", "url": "https://files.pythonhosted.org/packages/b7/55/1547b1341387a2a4bab5a05386c17097872ff57f1156b67768c57f18fd8e/rangelist-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:33 2020"}