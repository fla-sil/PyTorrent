{"info": {"author": "Jose Diaz-Gonzalez", "author_email": "email@josediazgonzalez.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7"], "description": "=============\nchef-solo-cup\n=============\n\nChef Solo Cup is a wrapper around chef-solo, for booting/updating AWS instances\n\nInstallation\n============\n\nUsing PIP:\n\nFrom Github::\n\n    pip install git+git://github.com/josegonzalez/chef-solo-cup.git#egg=beaver\n\nFrom PyPI::\n\n    pip install chef-solo-cup\n\nUsage\n=====\n\nCLI Usage is as follows::\n\n    usage: chef-solo-cup [-h] [-a ASG_DNA_PATH] [-b BLACKLIST_RULE] [-c CMD]\n                         [-C CONFIG_PATH] [-d DNA_PATTERNS [DNA_PATTERNS ...]]\n                         [-D] [-e EXCLUDE [EXCLUDE ...]]\n                         [-E RSYNC_EXCLUSIONS [RSYNC_EXCLUSIONS ...]]\n                         [-i IP_ADDRESS] [-k KEY_FILENAME]\n                         [-l {debug,info,warn,error,fatal}] [-L LOG_PATH]\n                         [-o OUTPUT] [-P] [-p [PROVIDERS [PROVIDERS ...]]]\n                         [-q QUANTITY] [-r [REGIONS [REGIONS ...]]]\n                         [-R REPOSITORY] [-s [SERVICES [SERVICES ...]]]\n                         [-S {git,rsync}] [-t TAGS [TAGS ...]] [-u USER] [-v]\n                         [--api-password API_PASSWORD] [--api-url API_URL]\n                         [--api-username API_USERNAME] [--dry-run]\n                         [--chef-version CHEF_VERSION]\n                         [--ohai-version OHAI_VERSION]\n                         [--chef-file-dest CHEF_FILE_DEST]\n                         [--aws-access-key-id AWS_ACCESS_KEY_ID]\n                         [--aws-secret-access-key AWS_SECRET_ACCESS_KEY]\n                         [--use-private-ips]\n                         [--use-alternate-databag USE_ALTERNATE_DATABAG]\n                         [{bootstrap,chef,clean,default,gem,inspect,ruby,run,sync,sudo,test,update}]\n\n    Chef-solo-cup, a chef-solo wrapper\n\n    positional arguments:\n      {bootstrap,chef,clean,default,gem,inspect,ruby,run,sync,sudo,test,update}\n                            command to run\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -a ASG_DNA_PATH, --asg-dna-path ASG_DNA_PATH\n                            Path to asg dna files (relative to repo base)\n      -b BLACKLIST_RULE, --blacklist-rule BLACKLIST_RULE\n                            pattern to use to blacklist hosts\n      -c CMD, --command CMD\n                            command to run\n      -C CONFIG_PATH, --config-path CONFIG_PATH\n                            relative path from chef file destination to solo\n                            config file\n      -d DNA_PATTERNS [DNA_PATTERNS ...], --dna-patterns DNA_PATTERNS [DNA_PATTERNS ...]\n                            space-separated list of patterns to match against dna\n                            filenames\n      -D, --debug           enable debug mode\n      -e EXCLUDE [EXCLUDE ...], --exclude EXCLUDE [EXCLUDE ...]\n                            A regex to exclude hosts by\n      -E RSYNC_EXCLUSIONS [RSYNC_EXCLUSIONS ...], --rsync-exclusions RSYNC_EXCLUSIONS [RSYNC_EXCLUSIONS ...]\n                            space-separated list of files to exclude in rsync\n      -i IP_ADDRESS, --ip-address IP_ADDRESS\n                            The ip address to connect to\n      -k KEY_FILENAME, --key-filename KEY_FILENAME\n                            full path to key filename (pem key)\n      -l {debug,info,warn,error,fatal}, --loglevel {debug,info,warn,error,fatal}\n                            The chef log level to use\n      -L LOG_PATH, --log-path LOG_PATH\n                            The path to write logs to\n      -o OUTPUT, --output OUTPUT\n                            file to pipe output to (in addition to stdout)\n      -P, --parallel        whether to run commands in parallel\n      -p [PROVIDERS [PROVIDERS ...]], --providers [PROVIDERS [PROVIDERS ...]]\n                            space-separated list of providers\n      -q QUANTITY, --quantity QUANTITY\n                            The number of nodes to provision\n      -r [REGIONS [REGIONS ...]], --regions [REGIONS [REGIONS ...]]\n                            space-separated list of regions\n      -R REPOSITORY, --repository REPOSITORY\n                            repository to use when cloning instead of using rsync\n      -s [SERVICES [SERVICES ...]], --services [SERVICES [SERVICES ...]]\n                            space-separated list of services\n      -S {git,rsync}, --sync {git,rsync}\n                            method to sync chef with\n      -t TAGS [TAGS ...], --tags TAGS [TAGS ...]\n                            tags to filter instances by\n      -u USER, --user USER  user to run commands as\n      -v, --version         Print version and exit\n      --api-password API_PASSWORD\n                            basic auth password for api\n      --api-url API_URL     backing url for api\n      --api-username API_USERNAME\n                            basic auth username for api\n      --dry-run             perform a dry run of all commands\n      --chef-version CHEF_VERSION\n                            chef version to install\n      --ohai-version OHAI_VERSION\n                            ohai version to install\n      --chef-file-dest CHEF_FILE_DEST\n                            chef file destination on disk\n      --aws-access-key-id AWS_ACCESS_KEY_ID\n                            AWS Access Key\n      --aws-secret-access-key AWS_SECRET_ACCESS_KEY\n                            AWS Secret Key\n      --use-private-ips     Connect to the instances via the private ip address\n                            instead of the public\n      --use-alternate-databag USE_ALTERNATE_DATABAG\n                            Use alternate databag instead of one defined by ASG\n                            name\n\n    Chef Solo Cup is pwnage\n\n\n\n========\nUPCOMING\n========\n\nTechnical Description\n=====================\n\nCommands::\n\n    # the binary\n    chef-solo-cup\n\n    # running commands\n    chef-solo-cup [command] <required argument> (optional argument) -f {optional flag}\n\n    # run help\n    chef-solo-cup help\n\n    # get a summary of running instances with regions\n    chef-solo-cup status (group)\n\n    # start|stop|terminate a set of instances\n    chef-solo-cup start|stop|terminate\n                        <group>\n                        --number {number}\n                        --region {region}\n                        --size {size}\n                        --before {run this before}\n                        --after {run this after}\n                        --parallel\n\n    # update a set of instances\n    # will not update instances by default, must specify a group or the flag\n    chef-solo-cup update (group)\n                        --all\n                        --parallel\n\nExplanation of arguments and flags:\n\n* group:      Name of the box group to use; see below for a thorough explanation of a box group. Also supports regex for box groups.\n* number:     Number of instances to affect. For bringing down instances, will affect the last n instances\n* region:     Region of amazon which this command will run against. Will attempt to balance load across zones\n* size:       Size of boxes to bring up, like c1.medium or m1.large\n* before:     Run this command before running chef-solo-flight. Will have access to chef-solo-flight arguments\n* after:      Run this command after running chef-solo-flight. Will have access to chef-solo-flight arguments\n* parallel:   Run chef-solo-flight in parallel against all of these instances. Might be funky.\n* all:        Run against all availabe instances\n\nBox Groups\n==========\n\nA box group is a definition for a set of servers. In a typical server-oriented architecture, you will have several servers that will serve the same purpose. For example, it may be necessary to have 10 background workers, each having a particular set of storage volumes. These would all most likely use the same exact chef setup, and rather than duplicate this in many json files, we will create a single json \"template\" with this information baked in.\n\nBelow is the hypothetical contents of ``boxes/bee.json``:\n\n::\n\n\n    {\n        \"_box\": {\n            \"service\":          \"sg\",\n            \"storage\": [\n                {\n                    \"size\":     \"50\",\n                    \"mount\":    \"/dev/sdf\",\n                    \"snapshot\": \"343qu4rhiqhe\"\n                }\n            ],\n            \"region\":           \"us-east-1a\",\n            \"size\":             \"c1.medium\",\n            \"provider\":         \"ec2\",\n            \"ami\":              \"ami-6fa27506\",\n            \"security_groups\":  [ \"sg-123456\", \"sg-789012\" ]\n        },\n        \"run_list\": [\n            \"role[bee]\"\n        ]\n    }\n\nIn our case, you will notice that we can specify storage units to attach to an instance, region to allocate the instances in, as well as instance size. These go under the ``_box`` top-level key, and all other key/values in the ``box.json`` file are copied into the dna.json for a particular instance.\n\n``_box`` is a MAGIC key. DO NOT USE IT FOR YOUR OWN USES. It should only be used to define box groups.\n\nThere is also a special ``service`` key, for use in creating instance dna, as follows::\n\n    ``:service-:box_group-:provider-:region_shorthand-:number.json``\n\nThe name of the box would be the same as the filename, without the ``json`` extension.\n\nThese keys are defined as follows:\n\n* service:          What is this service's name? Useful when managing pieces of infrastructure that are mostly independent, such as different websites under a single umbrella organization\n* box_group:        The name which is guessed from your box group json file. In the above json, this would be ``bee``\n* provider:         The name of the cloud provider. At the moment, this defaults to ``ec2``. No others are supported at the moment\n* region_shorthand: All regions in aws are given a shorthand, such as ``use1a`` for ``us-east-1a``. Pretty easy to guess these, and it is automatically guessed from the ``region`` selected in either your box group or as a flag to ``chef-solo-cup``.\n* number:           Instance number. This is derived from the number of instances currently deployed, as well as the number of instances being deployed. Will be a zero padded 5-digit number.\n\nYou may also override the naming schema if you think you'll only use a single region, or will have multiple chef-solo-cup installations. This may be overriden in your ``solo-cup-config.rb`` file.\n\nConfiguration Management\n========================\n\nEvery chef-solo-cup installation has access to a ``solo-cup-config.rb`` configuration file. Other than storage, default box configuration can be specified here. ``_box`` configuration from a specific box group will be merged ONTO the config in ``solo-cup-config.rb``. These can be overwritten at runtime using arguments on the ``chef-solo-cup`` command.\n\n::\n\n    # A sample solo-cup-config.rb\n    # some good defaults\n    service                 \"sg\"\n    region                  \"us-east-1a\"\n    size                    \"c1.medium\"\n    ami                     \"ami-6fa27506\"\n    # These are defaults, and other groups are merged ONTO these\n    # default is the \"default\" security group\n    security_groups         [ \"sg-123456\", \"sg-789012\" ]\n\n    # Limit overrides to the following keys\n    allow_override          [ :ami, :size ]\n\n    # Turn on parallel deploys, it's off by default\n    parallel                true\n\n    # Path to generated dna files\n    dna_path                \"./recipes/dna\"\n    dna_name_template       \":service-:box_group-:provider-:region_shorthand-:number\"\n\n    # aws auth info\n    aws_access_key_id:      AAAAAAAAAAAAAAAAAAAA\n    aws_secret_access_key:  iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\n\n    # stuff for chef/ruby\n    chef_version            0.10.10\n    ohai_version            6.14.0\n    chef_version            10.12.0\n\nDNA Generation\n==============\n\nGenerated dna would follow whatever box group you specify, plus custom configuration available within ``_box``. If bringing up 1 more ``bee`` instance using our above box group, and we already had 4 ``bee`` instances, the following would be the generated ``dna.json``\n\n::\n\n    {\n        \"_box\": {\n            \"service\":          \"sg\",\n            \"storage\": [\n                {\n                    \"size\":     \"50\",\n                    \"mount\":    \"/dev/sdf\",\n                    \"snapshot\": \"343qu4rhiqhe\"\n                }\n            ],\n            \"region\":           \"us-east-1a\",\n            \"size\":             \"c1.medium\",\n            \"provider\":         \"ec2\",\n            \"ami\":              \"ami-6fa27506\",\n            \"security_groups\":  [ \"sg-123456\", \"sg-789012\" ]\n        },\n        \"box_name\": \"sg-bee-ec2-use1a-05\",\n        \"run_list\": [\n            \"role[bee]\"\n        ]\n    }\n\nThe dna files would be placed in ``./recipes/dna`` by default, and deployed from that path. In this way, you can have your dna files as either part of your chef cookbooks or a submodule thereof.\n\nDNA files will be generated to the following path::\n\n    :dna_path/:provider/:region/:dna_name_template.json\n\nThis dna path is used in order to allow quicker filtering by chef-solo-cup.\n\nDNS Integration\n===============\n\nHandle this within a recipe. Tooling to do this will only get it wrong. You can use ``node[:box_name]`` to figure out what the alias should be for the instance.\n\nAWS Integration\n===============\n\nIf you specify AWS credentials (hopefully in a file instead on the CLI) and regions, chef-solo-cup can query autoscaling groups to bring more nodes. These currently look in `dna/asg` for the DNA files.\n\nReferencing other nodes\n=======================\n\nHow do we simulate chef-server? The primary reason why you'd want to know of different nodes is to be able to write configuration files to services, datastores, etc. based upon the other nodes.\n\nBecause we know the roles of other nodes, it may be possible to load up the json for each node within a ``nodes`` attribute in the ``dna.json``. This can be dynamic and compiled once at runtime, then merged in.\n\nPotential issues:\n\n- Because you are provisioning new servers all the time, how do you notify old servers that the new ones are up?\n  * Could have a note after the commands that detects changes in the config - ``up`` and ``down`` change stuff by default, ``update`` can be detected as a change by hashing existing json against server json - and provides a note to the user to update all the instances as appropriate\n- DNS from new instances would be nice to have in other instances ``/etc/hosts`` file\n  * ``chef-solo-cup bulk`` might be able to toss a single ``dna.json`` at all the instances - as filtered by flags - so we can quickly run some recipes to update key infrastructure\n- No search capabilities, do not know inline what libraries are installed or packages etc.\n  * Your recipes should be clear as to what library is installed on what node, so then you can infer this based upon the box group.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/josegonzalez/chef-solo-cup", "keywords": null, "license": "Copyright (c) 2014 Jose Diaz-Gonzalez\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "chef-solo-cup", "package_url": "https://pypi.org/project/chef-solo-cup/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/chef-solo-cup/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/josegonzalez/chef-solo-cup"}, "release_url": "https://pypi.org/project/chef-solo-cup/0.3.1/", "requires_dist": null, "requires_python": null, "summary": "Chef-Solo wrapper", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"chef-solo-cup\">\n<h2>chef-solo-cup</h2>\n<p>Chef Solo Cup is a wrapper around chef-solo, for booting/updating AWS instances</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Using PIP:</p>\n<p>From Github:</p>\n<pre>pip install git+git://github.com/josegonzalez/chef-solo-cup.git#egg=beaver\n</pre>\n<p>From PyPI:</p>\n<pre>pip install chef-solo-cup\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>CLI Usage is as follows:</p>\n<pre>usage: chef-solo-cup [-h] [-a ASG_DNA_PATH] [-b BLACKLIST_RULE] [-c CMD]\n                     [-C CONFIG_PATH] [-d DNA_PATTERNS [DNA_PATTERNS ...]]\n                     [-D] [-e EXCLUDE [EXCLUDE ...]]\n                     [-E RSYNC_EXCLUSIONS [RSYNC_EXCLUSIONS ...]]\n                     [-i IP_ADDRESS] [-k KEY_FILENAME]\n                     [-l {debug,info,warn,error,fatal}] [-L LOG_PATH]\n                     [-o OUTPUT] [-P] [-p [PROVIDERS [PROVIDERS ...]]]\n                     [-q QUANTITY] [-r [REGIONS [REGIONS ...]]]\n                     [-R REPOSITORY] [-s [SERVICES [SERVICES ...]]]\n                     [-S {git,rsync}] [-t TAGS [TAGS ...]] [-u USER] [-v]\n                     [--api-password API_PASSWORD] [--api-url API_URL]\n                     [--api-username API_USERNAME] [--dry-run]\n                     [--chef-version CHEF_VERSION]\n                     [--ohai-version OHAI_VERSION]\n                     [--chef-file-dest CHEF_FILE_DEST]\n                     [--aws-access-key-id AWS_ACCESS_KEY_ID]\n                     [--aws-secret-access-key AWS_SECRET_ACCESS_KEY]\n                     [--use-private-ips]\n                     [--use-alternate-databag USE_ALTERNATE_DATABAG]\n                     [{bootstrap,chef,clean,default,gem,inspect,ruby,run,sync,sudo,test,update}]\n\nChef-solo-cup, a chef-solo wrapper\n\npositional arguments:\n  {bootstrap,chef,clean,default,gem,inspect,ruby,run,sync,sudo,test,update}\n                        command to run\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ASG_DNA_PATH, --asg-dna-path ASG_DNA_PATH\n                        Path to asg dna files (relative to repo base)\n  -b BLACKLIST_RULE, --blacklist-rule BLACKLIST_RULE\n                        pattern to use to blacklist hosts\n  -c CMD, --command CMD\n                        command to run\n  -C CONFIG_PATH, --config-path CONFIG_PATH\n                        relative path from chef file destination to solo\n                        config file\n  -d DNA_PATTERNS [DNA_PATTERNS ...], --dna-patterns DNA_PATTERNS [DNA_PATTERNS ...]\n                        space-separated list of patterns to match against dna\n                        filenames\n  -D, --debug           enable debug mode\n  -e EXCLUDE [EXCLUDE ...], --exclude EXCLUDE [EXCLUDE ...]\n                        A regex to exclude hosts by\n  -E RSYNC_EXCLUSIONS [RSYNC_EXCLUSIONS ...], --rsync-exclusions RSYNC_EXCLUSIONS [RSYNC_EXCLUSIONS ...]\n                        space-separated list of files to exclude in rsync\n  -i IP_ADDRESS, --ip-address IP_ADDRESS\n                        The ip address to connect to\n  -k KEY_FILENAME, --key-filename KEY_FILENAME\n                        full path to key filename (pem key)\n  -l {debug,info,warn,error,fatal}, --loglevel {debug,info,warn,error,fatal}\n                        The chef log level to use\n  -L LOG_PATH, --log-path LOG_PATH\n                        The path to write logs to\n  -o OUTPUT, --output OUTPUT\n                        file to pipe output to (in addition to stdout)\n  -P, --parallel        whether to run commands in parallel\n  -p [PROVIDERS [PROVIDERS ...]], --providers [PROVIDERS [PROVIDERS ...]]\n                        space-separated list of providers\n  -q QUANTITY, --quantity QUANTITY\n                        The number of nodes to provision\n  -r [REGIONS [REGIONS ...]], --regions [REGIONS [REGIONS ...]]\n                        space-separated list of regions\n  -R REPOSITORY, --repository REPOSITORY\n                        repository to use when cloning instead of using rsync\n  -s [SERVICES [SERVICES ...]], --services [SERVICES [SERVICES ...]]\n                        space-separated list of services\n  -S {git,rsync}, --sync {git,rsync}\n                        method to sync chef with\n  -t TAGS [TAGS ...], --tags TAGS [TAGS ...]\n                        tags to filter instances by\n  -u USER, --user USER  user to run commands as\n  -v, --version         Print version and exit\n  --api-password API_PASSWORD\n                        basic auth password for api\n  --api-url API_URL     backing url for api\n  --api-username API_USERNAME\n                        basic auth username for api\n  --dry-run             perform a dry run of all commands\n  --chef-version CHEF_VERSION\n                        chef version to install\n  --ohai-version OHAI_VERSION\n                        ohai version to install\n  --chef-file-dest CHEF_FILE_DEST\n                        chef file destination on disk\n  --aws-access-key-id AWS_ACCESS_KEY_ID\n                        AWS Access Key\n  --aws-secret-access-key AWS_SECRET_ACCESS_KEY\n                        AWS Secret Key\n  --use-private-ips     Connect to the instances via the private ip address\n                        instead of the public\n  --use-alternate-databag USE_ALTERNATE_DATABAG\n                        Use alternate databag instead of one defined by ASG\n                        name\n\nChef Solo Cup is pwnage\n</pre>\n</div>\n</div>\n<div id=\"upcoming\">\n<h2>UPCOMING</h2>\n<div id=\"technical-description\">\n<h3>Technical Description</h3>\n<p>Commands:</p>\n<pre># the binary\nchef-solo-cup\n\n# running commands\nchef-solo-cup [command] &lt;required argument&gt; (optional argument) -f {optional flag}\n\n# run help\nchef-solo-cup help\n\n# get a summary of running instances with regions\nchef-solo-cup status (group)\n\n# start|stop|terminate a set of instances\nchef-solo-cup start|stop|terminate\n                    &lt;group&gt;\n                    --number {number}\n                    --region {region}\n                    --size {size}\n                    --before {run this before}\n                    --after {run this after}\n                    --parallel\n\n# update a set of instances\n# will not update instances by default, must specify a group or the flag\nchef-solo-cup update (group)\n                    --all\n                    --parallel\n</pre>\n<p>Explanation of arguments and flags:</p>\n<ul>\n<li>group:      Name of the box group to use; see below for a thorough explanation of a box group. Also supports regex for box groups.</li>\n<li>number:     Number of instances to affect. For bringing down instances, will affect the last n instances</li>\n<li>region:     Region of amazon which this command will run against. Will attempt to balance load across zones</li>\n<li>size:       Size of boxes to bring up, like c1.medium or m1.large</li>\n<li>before:     Run this command before running chef-solo-flight. Will have access to chef-solo-flight arguments</li>\n<li>after:      Run this command after running chef-solo-flight. Will have access to chef-solo-flight arguments</li>\n<li>parallel:   Run chef-solo-flight in parallel against all of these instances. Might be funky.</li>\n<li>all:        Run against all availabe instances</li>\n</ul>\n</div>\n<div id=\"box-groups\">\n<h3>Box Groups</h3>\n<p>A box group is a definition for a set of servers. In a typical server-oriented architecture, you will have several servers that will serve the same purpose. For example, it may be necessary to have 10 background workers, each having a particular set of storage volumes. These would all most likely use the same exact chef setup, and rather than duplicate this in many json files, we will create a single json \u201ctemplate\u201d with this information baked in.</p>\n<p>Below is the hypothetical contents of <tt>boxes/bee.json</tt>:</p>\n<pre>{\n    \"_box\": {\n        \"service\":          \"sg\",\n        \"storage\": [\n            {\n                \"size\":     \"50\",\n                \"mount\":    \"/dev/sdf\",\n                \"snapshot\": \"343qu4rhiqhe\"\n            }\n        ],\n        \"region\":           \"us-east-1a\",\n        \"size\":             \"c1.medium\",\n        \"provider\":         \"ec2\",\n        \"ami\":              \"ami-6fa27506\",\n        \"security_groups\":  [ \"sg-123456\", \"sg-789012\" ]\n    },\n    \"run_list\": [\n        \"role[bee]\"\n    ]\n}\n</pre>\n<p>In our case, you will notice that we can specify storage units to attach to an instance, region to allocate the instances in, as well as instance size. These go under the <tt>_box</tt> top-level key, and all other key/values in the <tt>box.json</tt> file are copied into the dna.json for a particular instance.</p>\n<p><tt>_box</tt> is a MAGIC key. DO NOT USE IT FOR YOUR OWN USES. It should only be used to define box groups.</p>\n<p>There is also a special <tt>service</tt> key, for use in creating instance dna, as follows:</p>\n<pre>``:service-:box_group-:provider-:region_shorthand-:number.json``\n</pre>\n<p>The name of the box would be the same as the filename, without the <tt>json</tt> extension.</p>\n<p>These keys are defined as follows:</p>\n<ul>\n<li>service:          What is this service\u2019s name? Useful when managing pieces of infrastructure that are mostly independent, such as different websites under a single umbrella organization</li>\n<li>box_group:        The name which is guessed from your box group json file. In the above json, this would be <tt>bee</tt></li>\n<li>provider:         The name of the cloud provider. At the moment, this defaults to <tt>ec2</tt>. No others are supported at the moment</li>\n<li>region_shorthand: All regions in aws are given a shorthand, such as <tt>use1a</tt> for <tt><span class=\"pre\">us-east-1a</span></tt>. Pretty easy to guess these, and it is automatically guessed from the <tt>region</tt> selected in either your box group or as a flag to <tt><span class=\"pre\">chef-solo-cup</span></tt>.</li>\n<li>number:           Instance number. This is derived from the number of instances currently deployed, as well as the number of instances being deployed. Will be a zero padded 5-digit number.</li>\n</ul>\n<p>You may also override the naming schema if you think you\u2019ll only use a single region, or will have multiple chef-solo-cup installations. This may be overriden in your <tt><span class=\"pre\">solo-cup-config.rb</span></tt> file.</p>\n</div>\n<div id=\"configuration-management\">\n<h3>Configuration Management</h3>\n<p>Every chef-solo-cup installation has access to a <tt><span class=\"pre\">solo-cup-config.rb</span></tt> configuration file. Other than storage, default box configuration can be specified here. <tt>_box</tt> configuration from a specific box group will be merged ONTO the config in <tt><span class=\"pre\">solo-cup-config.rb</span></tt>. These can be overwritten at runtime using arguments on the <tt><span class=\"pre\">chef-solo-cup</span></tt> command.</p>\n<pre># A sample solo-cup-config.rb\n# some good defaults\nservice                 \"sg\"\nregion                  \"us-east-1a\"\nsize                    \"c1.medium\"\nami                     \"ami-6fa27506\"\n# These are defaults, and other groups are merged ONTO these\n# default is the \"default\" security group\nsecurity_groups         [ \"sg-123456\", \"sg-789012\" ]\n\n# Limit overrides to the following keys\nallow_override          [ :ami, :size ]\n\n# Turn on parallel deploys, it's off by default\nparallel                true\n\n# Path to generated dna files\ndna_path                \"./recipes/dna\"\ndna_name_template       \":service-:box_group-:provider-:region_shorthand-:number\"\n\n# aws auth info\naws_access_key_id:      AAAAAAAAAAAAAAAAAAAA\naws_secret_access_key:  iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\n\n# stuff for chef/ruby\nchef_version            0.10.10\nohai_version            6.14.0\nchef_version            10.12.0\n</pre>\n</div>\n<div id=\"dna-generation\">\n<h3>DNA Generation</h3>\n<p>Generated dna would follow whatever box group you specify, plus custom configuration available within <tt>_box</tt>. If bringing up 1 more <tt>bee</tt> instance using our above box group, and we already had 4 <tt>bee</tt> instances, the following would be the generated <tt>dna.json</tt></p>\n<pre>{\n    \"_box\": {\n        \"service\":          \"sg\",\n        \"storage\": [\n            {\n                \"size\":     \"50\",\n                \"mount\":    \"/dev/sdf\",\n                \"snapshot\": \"343qu4rhiqhe\"\n            }\n        ],\n        \"region\":           \"us-east-1a\",\n        \"size\":             \"c1.medium\",\n        \"provider\":         \"ec2\",\n        \"ami\":              \"ami-6fa27506\",\n        \"security_groups\":  [ \"sg-123456\", \"sg-789012\" ]\n    },\n    \"box_name\": \"sg-bee-ec2-use1a-05\",\n    \"run_list\": [\n        \"role[bee]\"\n    ]\n}\n</pre>\n<p>The dna files would be placed in <tt>./recipes/dna</tt> by default, and deployed from that path. In this way, you can have your dna files as either part of your chef cookbooks or a submodule thereof.</p>\n<p>DNA files will be generated to the following path:</p>\n<pre>:dna_path/:provider/:region/:dna_name_template.json\n</pre>\n<p>This dna path is used in order to allow quicker filtering by chef-solo-cup.</p>\n</div>\n<div id=\"dns-integration\">\n<h3>DNS Integration</h3>\n<p>Handle this within a recipe. Tooling to do this will only get it wrong. You can use <tt><span class=\"pre\">node[:box_name]</span></tt> to figure out what the alias should be for the instance.</p>\n</div>\n<div id=\"aws-integration\">\n<h3>AWS Integration</h3>\n<p>If you specify AWS credentials (hopefully in a file instead on the CLI) and regions, chef-solo-cup can query autoscaling groups to bring more nodes. These currently look in <cite>dna/asg</cite> for the DNA files.</p>\n</div>\n<div id=\"referencing-other-nodes\">\n<h3>Referencing other nodes</h3>\n<p>How do we simulate chef-server? The primary reason why you\u2019d want to know of different nodes is to be able to write configuration files to services, datastores, etc. based upon the other nodes.</p>\n<p>Because we know the roles of other nodes, it may be possible to load up the json for each node within a <tt>nodes</tt> attribute in the <tt>dna.json</tt>. This can be dynamic and compiled once at runtime, then merged in.</p>\n<p>Potential issues:</p>\n<ul>\n<li>Because you are provisioning new servers all the time, how do you notify old servers that the new ones are up?\n* Could have a note after the commands that detects changes in the config - <tt>up</tt> and <tt>down</tt> change stuff by default, <tt>update</tt> can be detected as a change by hashing existing json against server json - and provides a note to the user to update all the instances as appropriate</li>\n<li>DNS from new instances would be nice to have in other instances <tt>/etc/hosts</tt> file\n* <tt><span class=\"pre\">chef-solo-cup</span> bulk</tt> might be able to toss a single <tt>dna.json</tt> at all the instances - as filtered by flags - so we can quickly run some recipes to update key infrastructure</li>\n<li>No search capabilities, do not know inline what libraries are installed or packages etc.\n* Your recipes should be clear as to what library is installed on what node, so then you can infer this based upon the box group.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2077046, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1593ad1c38cce0fb0a4d7bb2464196be", "sha256": "67eadd48540541b24a1d6bed20f32d5c90ff01bdd57980563ec86735bf6538ca"}, "downloads": -1, "filename": "chef-solo-cup-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1593ad1c38cce0fb0a4d7bb2464196be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8692, "upload_time": "2013-01-08T16:12:19", "upload_time_iso_8601": "2013-01-08T16:12:19.495912Z", "url": "https://files.pythonhosted.org/packages/7d/d0/29114de3e792f7c88a75b6ceee86f5efbf598210127bda477ccf9de3b73a/chef-solo-cup-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "3d8ac4be650133215a6c2c6bc0d5fdb8", "sha256": "15eee251b4c77230f4f1ab0a0002d09cfdfe6570f08f34f5e45ebb04d1b9c540"}, "downloads": -1, "filename": "chef-solo-cup-0.0.10.tar.gz", "has_sig": false, "md5_digest": "3d8ac4be650133215a6c2c6bc0d5fdb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12124, "upload_time": "2013-04-02T16:55:02", "upload_time_iso_8601": "2013-04-02T16:55:02.889693Z", "url": "https://files.pythonhosted.org/packages/66/45/43d34c037be58047aa88c58c2b74bbf9526fbed8dfddd30b9bf045f214b5/chef-solo-cup-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "b07abc180f84f2cd9eed15fc3f50eceb", "sha256": "5eb5ab4b3de2d5e27d63979ddec949726ab5c51309b664dfc2e5ad1147a14ab4"}, "downloads": -1, "filename": "chef-solo-cup-0.0.11.tar.gz", "has_sig": false, "md5_digest": "b07abc180f84f2cd9eed15fc3f50eceb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12821, "upload_time": "2013-06-17T19:51:12", "upload_time_iso_8601": "2013-06-17T19:51:12.893939Z", "url": "https://files.pythonhosted.org/packages/a9/97/3eb9f655300e418b38b18378246730a500cd7257e7f1789b1a9f4de42dea/chef-solo-cup-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "0e5f378fe34270c63b551fb9b32c1cfe", "sha256": "624718ec34b31f66ded95d45bd5d69d13134dcfe3e4979df796e1edf0fbc61c9"}, "downloads": -1, "filename": "chef-solo-cup-0.0.12.tar.gz", "has_sig": false, "md5_digest": "0e5f378fe34270c63b551fb9b32c1cfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12913, "upload_time": "2013-06-27T15:41:17", "upload_time_iso_8601": "2013-06-27T15:41:17.366730Z", "url": "https://files.pythonhosted.org/packages/55/0e/93326a9d6349b45b1c2a504c0a363d80c4ae9fd235def6d90eb008fc4d07/chef-solo-cup-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "8949b3a3f606743b7f5c3262e2861bfe", "sha256": "4884c98ab86293b398076d24cf4a097b80349ca1ebcf7ac8aefe85f40643eccb"}, "downloads": -1, "filename": "chef-solo-cup-0.0.13.tar.gz", "has_sig": false, "md5_digest": "8949b3a3f606743b7f5c3262e2861bfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12783, "upload_time": "2013-09-27T21:19:26", "upload_time_iso_8601": "2013-09-27T21:19:26.892375Z", "url": "https://files.pythonhosted.org/packages/90/33/a382030017c985863bc46a279357ec23144e1544bac42e4b71dccf58bbdb/chef-solo-cup-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "0ea70213530b217178cb7e7e9055afa7", "sha256": "f4ca3f309ed558a91357b5b99b0fd8c09650df28548753a9a5afc05d7ca9dee2"}, "downloads": -1, "filename": "chef-solo-cup-0.0.14.tar.gz", "has_sig": false, "md5_digest": "0ea70213530b217178cb7e7e9055afa7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12782, "upload_time": "2013-10-06T00:01:42", "upload_time_iso_8601": "2013-10-06T00:01:42.847691Z", "url": "https://files.pythonhosted.org/packages/29/6b/3b3ce260ae7fa0a9b1f3cd90262f0ff94bc1f503dab5d0d5eae4418ee752/chef-solo-cup-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "60f84b68cfc9a2713d83bed4df12b05a", "sha256": "baa2123e541726771a12130e6e12e582132fcc6b200b8a3693ba0a5ea80933da"}, "downloads": -1, "filename": "chef-solo-cup-0.0.15.tar.gz", "has_sig": false, "md5_digest": "60f84b68cfc9a2713d83bed4df12b05a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12841, "upload_time": "2013-10-16T20:25:04", "upload_time_iso_8601": "2013-10-16T20:25:04.546346Z", "url": "https://files.pythonhosted.org/packages/27/93/8fe0626803edcf8c9c0bdb376b88aeaf067f51137e0bd6e4b8d8302e98ca/chef-solo-cup-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "43d51d83e27ab4d88878772a3d22470b", "sha256": "96c1b20c4ee89575e9cf704164b74aec3581f535428b9d95280c4cba475573d0"}, "downloads": -1, "filename": "chef-solo-cup-0.0.16.tar.gz", "has_sig": false, "md5_digest": "43d51d83e27ab4d88878772a3d22470b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12977, "upload_time": "2013-11-08T21:09:23", "upload_time_iso_8601": "2013-11-08T21:09:23.916359Z", "url": "https://files.pythonhosted.org/packages/7a/dc/e0d4b4409d86e70e28681d0fdb56931386f46fb716e13d9c102d83a287e3/chef-solo-cup-0.0.16.tar.gz", "yanked": false}], "0.0.17": [{"comment_text": "", "digests": {"md5": "5f9b01cc00dda75f458a5bdf03318b3e", "sha256": "99680ef3e6ded3388ceb4d64c7aff18b139bbfb40c9a689d3a7f37b667a6389f"}, "downloads": -1, "filename": "chef-solo-cup-0.0.17.tar.gz", "has_sig": false, "md5_digest": "5f9b01cc00dda75f458a5bdf03318b3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13214, "upload_time": "2013-11-09T00:58:56", "upload_time_iso_8601": "2013-11-09T00:58:56.111542Z", "url": "https://files.pythonhosted.org/packages/66/37/308f351d216204f8aa0e0d8d2e87c543954c9cfb6aa5914bc940d603e720/chef-solo-cup-0.0.17.tar.gz", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "e838863b170cf4bea1df6697cb6c7f55", "sha256": "7693b1b51008006723c1632e4f6766bf36012fd88d20217b6cbf2b16b46c758b"}, "downloads": -1, "filename": "chef-solo-cup-0.0.18.tar.gz", "has_sig": false, "md5_digest": "e838863b170cf4bea1df6697cb6c7f55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13306, "upload_time": "2013-11-09T01:25:47", "upload_time_iso_8601": "2013-11-09T01:25:47.000066Z", "url": "https://files.pythonhosted.org/packages/05/c6/ca80d55dcf927a6e048ab8516a97003a541af53792529af8c023e699c11d/chef-solo-cup-0.0.18.tar.gz", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "48ea39e0cd4aef68be05e5114d5c6404", "sha256": "3d0cb8a54aa8462e93ba35aaaa280b5f301fbcdd782bb8f99a9669e58718c889"}, "downloads": -1, "filename": "chef-solo-cup-0.0.19.tar.gz", "has_sig": false, "md5_digest": "48ea39e0cd4aef68be05e5114d5c6404", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13307, "upload_time": "2013-11-09T01:27:54", "upload_time_iso_8601": "2013-11-09T01:27:54.883127Z", "url": "https://files.pythonhosted.org/packages/e3/52/aa82ece008b95294f76714cd4d7c712262f15a4499c366fec98327d3076e/chef-solo-cup-0.0.19.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8b1e6e6ec93f6cbb123811ae153e7ef7", "sha256": "c6324664bdb68026706d53691e5ae1f302ec499b9e1174b559cc1ab8291f9dcb"}, "downloads": -1, "filename": "chef-solo-cup-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8b1e6e6ec93f6cbb123811ae153e7ef7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10849, "upload_time": "2013-01-08T16:19:45", "upload_time_iso_8601": "2013-01-08T16:19:45.782947Z", "url": "https://files.pythonhosted.org/packages/1a/15/960cd3879e9e557540e15659c467bf169071822da8294945274c0840c963/chef-solo-cup-0.0.2.tar.gz", "yanked": false}], "0.0.20": [{"comment_text": "", "digests": {"md5": "d8976fe7ad935f7a729078cc29ab9069", "sha256": "2ea0f95cc3890e099a7923e787e31be234c29fbe7dd7a3acc7e7f5bd2aedd3a9"}, "downloads": -1, "filename": "chef-solo-cup-0.0.20.tar.gz", "has_sig": false, "md5_digest": "d8976fe7ad935f7a729078cc29ab9069", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13311, "upload_time": "2013-11-09T01:35:33", "upload_time_iso_8601": "2013-11-09T01:35:33.320283Z", "url": "https://files.pythonhosted.org/packages/4a/9e/69eef146d733b0992ac90ba51e7fa2f98f19c743cacaf9bc1de0490ff471/chef-solo-cup-0.0.20.tar.gz", "yanked": false}], "0.0.21": [{"comment_text": "", "digests": {"md5": "6f3c1a99c286681c921d7975f81fe07a", "sha256": "de115b8b0ec5f4c4597cf365f87bb6755871516a28ebaf06ee5172261705ab5e"}, "downloads": -1, "filename": "chef-solo-cup-0.0.21.tar.gz", "has_sig": false, "md5_digest": "6f3c1a99c286681c921d7975f81fe07a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13303, "upload_time": "2013-11-09T01:40:27", "upload_time_iso_8601": "2013-11-09T01:40:27.798550Z", "url": "https://files.pythonhosted.org/packages/9a/b5/daef34c2f9c95e296a83a3472b8141a9e5fe07e4727c81027fe2f4cbc269/chef-solo-cup-0.0.21.tar.gz", "yanked": false}], "0.0.22": [{"comment_text": "", "digests": {"md5": "ff8a71d08445ca1941ee522b693afc88", "sha256": "2270641c8a013ab36803b7a5eac9cf2aaa611073c698adeba394b01d0f7b4a35"}, "downloads": -1, "filename": "chef-solo-cup-0.0.22.tar.gz", "has_sig": false, "md5_digest": "ff8a71d08445ca1941ee522b693afc88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14337, "upload_time": "2013-11-19T17:34:38", "upload_time_iso_8601": "2013-11-19T17:34:38.425380Z", "url": "https://files.pythonhosted.org/packages/2c/17/d024787632ad49f496f7d24991d3bc8cad97dd201d543d20e9575a0c4a7a/chef-solo-cup-0.0.22.tar.gz", "yanked": false}], "0.0.23": [{"comment_text": "", "digests": {"md5": "5093ec9ec98ff05bbfdb3d836e7280e5", "sha256": "1ce515224fd1a4d97c7b5bbd465d398ca3a6323a9fb8b6b15358fb0d1ac5f1c0"}, "downloads": -1, "filename": "chef-solo-cup-0.0.23.tar.gz", "has_sig": false, "md5_digest": "5093ec9ec98ff05bbfdb3d836e7280e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14342, "upload_time": "2013-11-19T17:37:06", "upload_time_iso_8601": "2013-11-19T17:37:06.572968Z", "url": "https://files.pythonhosted.org/packages/d4/b8/5671400f1f1475348ce32ab12a4d5bef76c396c88a4b77a212b03a120001/chef-solo-cup-0.0.23.tar.gz", "yanked": false}], "0.0.24": [{"comment_text": "", "digests": {"md5": "472dce094c1eda141445766eb9cc5bbe", "sha256": "70e1a385fc83f79cddb6f40f4973d9d54a2746ca42537d810c4b325134b417a7"}, "downloads": -1, "filename": "chef-solo-cup-0.0.24.tar.gz", "has_sig": false, "md5_digest": "472dce094c1eda141445766eb9cc5bbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14404, "upload_time": "2013-11-26T15:07:12", "upload_time_iso_8601": "2013-11-26T15:07:12.510497Z", "url": "https://files.pythonhosted.org/packages/91/48/e21a21e18d3446f59d7e429185c4b910930720740d0a9fd6156ee8d8b796/chef-solo-cup-0.0.24.tar.gz", "yanked": false}], "0.0.25": [{"comment_text": "", "digests": {"md5": "910be8902ab857e1d25c199de6f553f9", "sha256": "4157aee24157ac5213efa323cdbeb053e2907dc006343d7ecf2b3398db00465f"}, "downloads": -1, "filename": "chef-solo-cup-0.0.25.tar.gz", "has_sig": false, "md5_digest": "910be8902ab857e1d25c199de6f553f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14737, "upload_time": "2014-01-20T18:57:57", "upload_time_iso_8601": "2014-01-20T18:57:57.371390Z", "url": "https://files.pythonhosted.org/packages/11/38/32550f42c73dd081c4901f3f3e45cfb8c1f95bc539d0f6232465185e87d7/chef-solo-cup-0.0.25.tar.gz", "yanked": false}], "0.0.26": [{"comment_text": "", "digests": {"md5": "48a83af743251f3c05f10a86a9d57dbe", "sha256": "190f764ae30b8bfc716cee4b90057a3329c2119f20b70d765b65246d64d33520"}, "downloads": -1, "filename": "chef-solo-cup-0.0.26.tar.gz", "has_sig": false, "md5_digest": "48a83af743251f3c05f10a86a9d57dbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14853, "upload_time": "2014-02-04T22:46:50", "upload_time_iso_8601": "2014-02-04T22:46:50.186741Z", "url": "https://files.pythonhosted.org/packages/d6/c2/0bddf4c0e987a1141be770e00a05aea378a99d9f27de6c9003c1515f947e/chef-solo-cup-0.0.26.tar.gz", "yanked": false}], "0.0.27": [{"comment_text": "", "digests": {"md5": "3fe2008d234d449dbec9493d9f30a89a", "sha256": "710e0cc1f0e2db9d3271876fea1c459e37984578b1965f1f14f930be3d366116"}, "downloads": -1, "filename": "chef-solo-cup-0.0.27.tar.gz", "has_sig": false, "md5_digest": "3fe2008d234d449dbec9493d9f30a89a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14873, "upload_time": "2014-03-31T15:20:41", "upload_time_iso_8601": "2014-03-31T15:20:41.037389Z", "url": "https://files.pythonhosted.org/packages/f7/3d/5da0611f42adb9190b4791dd8407979fe5d2c56aa3d8b2e265f2ab72ad5a/chef-solo-cup-0.0.27.tar.gz", "yanked": false}], "0.0.28": [{"comment_text": "", "digests": {"md5": "811d897a6f55b2414a39bd714b27e7f6", "sha256": "3d9e5587b09a9a0fed5f409d36958a80024d09bafae31c51c1422957a695efbd"}, "downloads": -1, "filename": "chef-solo-cup-0.0.28.tar.gz", "has_sig": false, "md5_digest": "811d897a6f55b2414a39bd714b27e7f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15660, "upload_time": "2015-02-06T07:05:08", "upload_time_iso_8601": "2015-02-06T07:05:08.352207Z", "url": "https://files.pythonhosted.org/packages/a0/e8/c06418d3472f0d5c5f5e61084ce8c0456d28ca59bbe8359f46510276a75f/chef-solo-cup-0.0.28.tar.gz", "yanked": false}], "0.0.29": [{"comment_text": "", "digests": {"md5": "f8e0a7a7dc1f3e643b3db2ef97407e69", "sha256": "cb56d9d1fa34145b379ef96e071914d319f7235a60d0fdb66ba6b4a6f65b99c9"}, "downloads": -1, "filename": "chef-solo-cup-0.0.29.tar.gz", "has_sig": false, "md5_digest": "f8e0a7a7dc1f3e643b3db2ef97407e69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15969, "upload_time": "2015-02-06T08:03:08", "upload_time_iso_8601": "2015-02-06T08:03:08.253145Z", "url": "https://files.pythonhosted.org/packages/74/d8/2aae1667d3f101ac639a796be5fde7906d01ce304845dfb757369c2f3fe8/chef-solo-cup-0.0.29.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "8ae259821019c5f10a4c7d21c7eafd4c", "sha256": "9e9c0226612655db3cd24ded97e8c3fb95ea9488e6d4f03c03d5d07336d2f280"}, "downloads": -1, "filename": "chef-solo-cup-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8ae259821019c5f10a4c7d21c7eafd4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10856, "upload_time": "2013-01-11T16:44:21", "upload_time_iso_8601": "2013-01-11T16:44:21.326021Z", "url": "https://files.pythonhosted.org/packages/a6/af/4301312d7467c33f788e2c6c8f0b95f12e2227e102533980dc94b6cf364b/chef-solo-cup-0.0.3.tar.gz", "yanked": false}], "0.0.30": [{"comment_text": "", "digests": {"md5": "49b20473e359dc3132f4698dfa749308", "sha256": "7220b6ff3481af766c16fc42f9813d4148528aec8e87ea1c72cf0e82876ff490"}, "downloads": -1, "filename": "chef-solo-cup-0.0.30.tar.gz", "has_sig": false, "md5_digest": "49b20473e359dc3132f4698dfa749308", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15969, "upload_time": "2015-02-06T18:16:36", "upload_time_iso_8601": "2015-02-06T18:16:36.013514Z", "url": "https://files.pythonhosted.org/packages/ff/39/d6d6b959fb2c40baf3bc80432e5267b0ae617817df1dca484c695e532c10/chef-solo-cup-0.0.30.tar.gz", "yanked": false}], "0.0.31": [{"comment_text": "", "digests": {"md5": "e76cac0a2bc016264b4d6a38557eeea9", "sha256": "cca0af492d881233a16d1cb88e9c30b0d92a118f2374e36a0406cf53dc8c1dc1"}, "downloads": -1, "filename": "chef-solo-cup-0.0.31.tar.gz", "has_sig": false, "md5_digest": "e76cac0a2bc016264b4d6a38557eeea9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16005, "upload_time": "2015-02-14T20:35:06", "upload_time_iso_8601": "2015-02-14T20:35:06.941412Z", "url": "https://files.pythonhosted.org/packages/fb/6e/0aa3f60817d76fe06746554eb6dc621336d29e9eb9a9a48fc053dcae454e/chef-solo-cup-0.0.31.tar.gz", "yanked": false}], "0.0.32": [{"comment_text": "", "digests": {"md5": "6943cb3b3c9cb20e1fbca18a003b99d5", "sha256": "0b26387d38133ad64176356421aa8ef0ffeb1a66f861a9a1f169696e6fef1f96"}, "downloads": -1, "filename": "chef-solo-cup-0.0.32.tar.gz", "has_sig": false, "md5_digest": "6943cb3b3c9cb20e1fbca18a003b99d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16336, "upload_time": "2015-05-11T19:42:43", "upload_time_iso_8601": "2015-05-11T19:42:43.386647Z", "url": "https://files.pythonhosted.org/packages/15/93/f9b7af5267be5bba364488de5044ad2e492102e4e7a1095a3c03c2cee93d/chef-solo-cup-0.0.32.tar.gz", "yanked": false}], "0.0.34": [{"comment_text": "", "digests": {"md5": "d9fa599565f4f7854ea2ded7f0d30c3f", "sha256": "7dbb1f484592cef4ed84ecdb2ba0372c287d179e68d8a978f8e19859b3a57d41"}, "downloads": -1, "filename": "chef-solo-cup-0.0.34.tar.gz", "has_sig": false, "md5_digest": "d9fa599565f4f7854ea2ded7f0d30c3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17126, "upload_time": "2015-07-15T19:44:23", "upload_time_iso_8601": "2015-07-15T19:44:23.772660Z", "url": "https://files.pythonhosted.org/packages/b1/53/8f91be9268a210758e61845de2a2db6abf19c5d1d2a51f38a3bdccbc5868/chef-solo-cup-0.0.34.tar.gz", "yanked": false}], "0.0.35": [{"comment_text": "", "digests": {"md5": "a64cc4f3bf7bfd24adda18049296ed11", "sha256": "15b9c664f6a40ec4ca2698e0edae587e2be7d424b7534e003c02186611380209"}, "downloads": -1, "filename": "chef-solo-cup-0.0.35.tar.gz", "has_sig": false, "md5_digest": "a64cc4f3bf7bfd24adda18049296ed11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17168, "upload_time": "2015-07-29T17:43:57", "upload_time_iso_8601": "2015-07-29T17:43:57.800371Z", "url": "https://files.pythonhosted.org/packages/01/01/411a97f05b47fda95ee5fc725f13c273ddd34a8cbe80473c54a3b7b7bb92/chef-solo-cup-0.0.35.tar.gz", "yanked": false}], "0.0.36": [{"comment_text": "", "digests": {"md5": "50514ea946d9ce240e1e1d432f2ee9f8", "sha256": "747084eb997c336a29c40f59c7c6a8f29aa925c7241c589c7f5751207f073975"}, "downloads": -1, "filename": "chef-solo-cup-0.0.36.tar.gz", "has_sig": false, "md5_digest": "50514ea946d9ce240e1e1d432f2ee9f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17209, "upload_time": "2015-07-29T17:44:07", "upload_time_iso_8601": "2015-07-29T17:44:07.630414Z", "url": "https://files.pythonhosted.org/packages/85/ef/6c582e97fa980bf9f2b2e34d6ee2ce71858ab037cf5fc6ec78db26ce1dcf/chef-solo-cup-0.0.36.tar.gz", "yanked": false}], "0.0.37": [{"comment_text": "", "digests": {"md5": "9f8e7f33fd17fe39a6e371226649179f", "sha256": "09ea3b948e550cccabfa18c5ccf90dea061927acfa8ac62a3511069a3c9e3ab0"}, "downloads": -1, "filename": "chef-solo-cup-0.0.37.tar.gz", "has_sig": false, "md5_digest": "9f8e7f33fd17fe39a6e371226649179f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17270, "upload_time": "2015-08-18T20:42:57", "upload_time_iso_8601": "2015-08-18T20:42:57.876388Z", "url": "https://files.pythonhosted.org/packages/6f/a2/1041a155850e0defdae75b0a8416590a44ba18bcc5e2689cb5629cd5794b/chef-solo-cup-0.0.37.tar.gz", "yanked": false}], "0.0.38": [{"comment_text": "", "digests": {"md5": "60d140e3a2d30cd09ef731535f815f7f", "sha256": "1ed07935e77a885d4e76303d0e3400319b44a4df7f4cc86a708a4f2ccbf5f061"}, "downloads": -1, "filename": "chef-solo-cup-0.0.38.tar.gz", "has_sig": false, "md5_digest": "60d140e3a2d30cd09ef731535f815f7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17300, "upload_time": "2015-08-19T00:18:55", "upload_time_iso_8601": "2015-08-19T00:18:55.621857Z", "url": "https://files.pythonhosted.org/packages/72/7b/f06ed3ada5d239209dbd74254089e72cd63156725a6d62063c09f6b0c979/chef-solo-cup-0.0.38.tar.gz", "yanked": false}], "0.0.39": [{"comment_text": "", "digests": {"md5": "c6b342d5ca561cabdbaba5916c18614d", "sha256": "8489d478a7d3c7b91241c3f91c2bd9b1a84914f29c6a90424a974d420a8ffb91"}, "downloads": -1, "filename": "chef-solo-cup-0.0.39.tar.gz", "has_sig": false, "md5_digest": "c6b342d5ca561cabdbaba5916c18614d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17301, "upload_time": "2015-09-11T20:45:09", "upload_time_iso_8601": "2015-09-11T20:45:09.772372Z", "url": "https://files.pythonhosted.org/packages/a4/33/7a32bdee460a2e609d0cc66176250c4dfdc6c28f4efbc5db70227a9b56b4/chef-solo-cup-0.0.39.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "332de277235a98c6ead286ac19a6d60b", "sha256": "9317453d7ec7e5814cd1469f0285b8d72447a9f405edc2fcf37ef27b8eb1eaee"}, "downloads": -1, "filename": "chef-solo-cup-0.0.4.tar.gz", "has_sig": false, "md5_digest": "332de277235a98c6ead286ac19a6d60b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10844, "upload_time": "2013-01-11T16:48:59", "upload_time_iso_8601": "2013-01-11T16:48:59.064370Z", "url": "https://files.pythonhosted.org/packages/41/f4/a6ea44cbf7e77a163aef43437bbced8ccf3a2f401661fb045576ea726ce4/chef-solo-cup-0.0.4.tar.gz", "yanked": false}], "0.0.40": [{"comment_text": "", "digests": {"md5": "681f2b962cca27b70c637463b2496744", "sha256": "fbf5b97cd7102d9771ecad6d14a74709aa9b9ef42202350eee1c10135e52993e"}, "downloads": -1, "filename": "chef_solo_cup-0.0.40-py2-none-any.whl", "has_sig": false, "md5_digest": "681f2b962cca27b70c637463b2496744", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 29408, "upload_time": "2015-10-19T20:06:14", "upload_time_iso_8601": "2015-10-19T20:06:14.222908Z", "url": "https://files.pythonhosted.org/packages/95/9e/c076f003e49d3443c529478afc751a084134134dedb24f90d8d370faa0ca/chef_solo_cup-0.0.40-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d70e9ca00b038140da4a83f1ac1f7149", "sha256": "fd633645bc67c4ed36e09980f102fdf6f3338fb2b26471d68a0e0e301d8e79fc"}, "downloads": -1, "filename": "chef-solo-cup-0.0.40.tar.gz", "has_sig": false, "md5_digest": "d70e9ca00b038140da4a83f1ac1f7149", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17648, "upload_time": "2015-10-19T20:05:57", "upload_time_iso_8601": "2015-10-19T20:05:57.411299Z", "url": "https://files.pythonhosted.org/packages/84/fc/95f3387cca341ba9958e1c35355d59776355ea4eadd8583f33ed969464d4/chef-solo-cup-0.0.40.tar.gz", "yanked": false}], "0.0.41": [{"comment_text": "", "digests": {"md5": "72f72784dcb3dcbcd6893c5b086935b4", "sha256": "af6e8ecf32f81922d113f1221e55d2cce0444c598e27aa2d095365b1ee2b7d61"}, "downloads": -1, "filename": "chef_solo_cup-0.0.41-py2-none-any.whl", "has_sig": false, "md5_digest": "72f72784dcb3dcbcd6893c5b086935b4", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 29612, "upload_time": "2015-10-22T07:38:22", "upload_time_iso_8601": "2015-10-22T07:38:22.525685Z", "url": "https://files.pythonhosted.org/packages/82/e6/b201be78b68cee58d9d0f9ca70af8589e7ecaf2d9731ba75d4b5da0b8425/chef_solo_cup-0.0.41-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "791ce47d8bc310efac64ad6e46dedc2d", "sha256": "e4c2beafc4352858cfbe262c9b61c1be20ea4ecc6810c4acee383af016e8425e"}, "downloads": -1, "filename": "chef-solo-cup-0.0.41.tar.gz", "has_sig": false, "md5_digest": "791ce47d8bc310efac64ad6e46dedc2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17857, "upload_time": "2015-10-22T07:38:18", "upload_time_iso_8601": "2015-10-22T07:38:18.363713Z", "url": "https://files.pythonhosted.org/packages/95/a2/3bbe5847d3f7936be295bff831e7bd20c6687627bfc513d4547ef62889a4/chef-solo-cup-0.0.41.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "08f01da4b88ce85c35440f13b92fb128", "sha256": "32c74010664a48780e18ba4c97f2ca2dbc5ecee2dd3a50bd6c7c9e791d87a0a6"}, "downloads": -1, "filename": "chef-solo-cup-0.0.5.tar.gz", "has_sig": false, "md5_digest": "08f01da4b88ce85c35440f13b92fb128", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10848, "upload_time": "2013-01-11T16:52:46", "upload_time_iso_8601": "2013-01-11T16:52:46.856483Z", "url": "https://files.pythonhosted.org/packages/a5/9e/e65e73ecb548de734b21e0a3885dc450a02e5146c7613c5be96c41554603/chef-solo-cup-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "29610c2eeb4547132f6d1a862658d7f3", "sha256": "e4b1bb5c525e4b2560bae9b2cf84d78ed65f331511f87e9a32d1a92c81724695"}, "downloads": -1, "filename": "chef-solo-cup-0.0.6.tar.gz", "has_sig": false, "md5_digest": "29610c2eeb4547132f6d1a862658d7f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10849, "upload_time": "2013-01-11T17:00:56", "upload_time_iso_8601": "2013-01-11T17:00:56.478511Z", "url": "https://files.pythonhosted.org/packages/55/c5/a8632fe5e9dc89f8d3628355aaf99f2bbe46765300d1476df130a584eac1/chef-solo-cup-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "5dcd1754a394f1738cca7929fceb9b95", "sha256": "f24eda474f7be884fbea7fcc606c167e100aa1890b25ea1ba0fc3cf5ed08c9a6"}, "downloads": -1, "filename": "chef-solo-cup-0.0.7.tar.gz", "has_sig": false, "md5_digest": "5dcd1754a394f1738cca7929fceb9b95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11644, "upload_time": "2013-03-24T17:10:06", "upload_time_iso_8601": "2013-03-24T17:10:06.370244Z", "url": "https://files.pythonhosted.org/packages/0c/55/e61b8853c833dc706a356fa96ea7c0203c38e05686c8f3f8d232575ae9ca/chef-solo-cup-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "11e8524718d3bd102ada68ac9c145c7c", "sha256": "408b4c2d99f95eedcfb5127fc998d82fb82927827ddcaf359509d572395b95f1"}, "downloads": -1, "filename": "chef-solo-cup-0.0.8.tar.gz", "has_sig": false, "md5_digest": "11e8524718d3bd102ada68ac9c145c7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12003, "upload_time": "2013-03-24T19:45:27", "upload_time_iso_8601": "2013-03-24T19:45:27.051891Z", "url": "https://files.pythonhosted.org/packages/d3/0b/b2b5fdb8de824d0b63ce70c23291facbe812362bbf82e96f12fac8b8ffbc/chef-solo-cup-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "762edd444e68b9625b034e3bfeebe864", "sha256": "5d9cd36ee721ccf8ce3d4d76c04984cdbe9d9c30d0007acc9655e072d476f4fc"}, "downloads": -1, "filename": "chef-solo-cup-0.0.9.tar.gz", "has_sig": false, "md5_digest": "762edd444e68b9625b034e3bfeebe864", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11984, "upload_time": "2013-03-24T20:09:44", "upload_time_iso_8601": "2013-03-24T20:09:44.934800Z", "url": "https://files.pythonhosted.org/packages/47/11/482f58affeac54d6ed17889df3b4b7b4b3eb122aa8883a7e6789cd29ac99/chef-solo-cup-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "c22d546b159425f5e5b78f47fd10dde3", "sha256": "ddccace3830982f2e67f13622d897816076bb53a6a69d42efaaaf8a25e1884ce"}, "downloads": -1, "filename": "chef_solo_cup-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "c22d546b159425f5e5b78f47fd10dde3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 29687, "upload_time": "2016-01-20T20:25:22", "upload_time_iso_8601": "2016-01-20T20:25:22.028941Z", "url": "https://files.pythonhosted.org/packages/d8/bb/03bbfe5da9428be2e76f7f6fcfda20c6a65d7e4e24c75334a8a26ed3e634/chef_solo_cup-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c822a3a9f9b636a836f23d06df4a20d", "sha256": "b3f43dcb9f4c5cf5705e048e01484abe7eb99275015d4ac377b89635c9944746"}, "downloads": -1, "filename": "chef-solo-cup-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3c822a3a9f9b636a836f23d06df4a20d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21179, "upload_time": "2016-01-20T20:25:15", "upload_time_iso_8601": "2016-01-20T20:25:15.807007Z", "url": "https://files.pythonhosted.org/packages/56/fd/0527fa92336367b89a561c875ef9b27bf2fad75d2b18ef9c7e2cf538f43b/chef-solo-cup-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "96da58d27add5001959eecdfb6786006", "sha256": "9baeb82225bc1a2ed3382ad8974149828c3da85b9d5ee2eea06b5fe4c9467ac2"}, "downloads": -1, "filename": "chef_solo_cup-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "96da58d27add5001959eecdfb6786006", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 29768, "upload_time": "2016-03-11T20:29:45", "upload_time_iso_8601": "2016-03-11T20:29:45.874591Z", "url": "https://files.pythonhosted.org/packages/22/c5/7412e1393e51a8d8d218b4d2214a28e180ab386eb124e109cdb5cdddc8b1/chef_solo_cup-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e214b134cfa670c69c006530f3147471", "sha256": "bee3bb9789ba72e0acfb82f1f49709ad7421e27d70db35ac4ee46b7cdcfce38c"}, "downloads": -1, "filename": "chef-solo-cup-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e214b134cfa670c69c006530f3147471", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21357, "upload_time": "2016-03-11T20:29:40", "upload_time_iso_8601": "2016-03-11T20:29:40.739609Z", "url": "https://files.pythonhosted.org/packages/92/ee/08c99f90f31b82518c7b55a9aea5985907c874d55eaf9e75e40e565e00bb/chef-solo-cup-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "23e5612544ef87c0788025cf2b4bb313", "sha256": "e10bd09c539499b2d70bfb1f818f11503159a41f18cf0253dee15c155171b251"}, "downloads": -1, "filename": "chef_solo_cup-0.3.0-py2-none-any.whl", "has_sig": false, "md5_digest": "23e5612544ef87c0788025cf2b4bb313", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 30146, "upload_time": "2016-04-05T21:58:20", "upload_time_iso_8601": "2016-04-05T21:58:20.066462Z", "url": "https://files.pythonhosted.org/packages/5b/95/f462acc830d8c24ed18a6d1a627133ed18bfb807aa83873533db2d0fc8d3/chef_solo_cup-0.3.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d74253a306840fa06927905168238301", "sha256": "e4bc917b1245ffa93d4a9117e9970d5ddd98cdf304eb924869cfbace581c6bbe"}, "downloads": -1, "filename": "chef-solo-cup-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d74253a306840fa06927905168238301", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21748, "upload_time": "2016-04-05T21:58:01", "upload_time_iso_8601": "2016-04-05T21:58:01.890197Z", "url": "https://files.pythonhosted.org/packages/4c/51/6fc2df5c4fa0647a4854954aeb16346bab9e653c1aeb91e504a0c0bf54cb/chef-solo-cup-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "523a575dc4d9f4b50bdf8df1047801af", "sha256": "bd38e99b04cef3844356f966f32280d1cb260c3d3df405e536a9208f27390bac"}, "downloads": -1, "filename": "chef-solo-cup-0.3.1.tar.gz", "has_sig": false, "md5_digest": "523a575dc4d9f4b50bdf8df1047801af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21765, "upload_time": "2016-04-21T21:20:24", "upload_time_iso_8601": "2016-04-21T21:20:24.251137Z", "url": "https://files.pythonhosted.org/packages/ba/7b/2b77a601a8be9ccd9cf3cb9c5e664296099de55b9612b94780eb49f6546d/chef-solo-cup-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "523a575dc4d9f4b50bdf8df1047801af", "sha256": "bd38e99b04cef3844356f966f32280d1cb260c3d3df405e536a9208f27390bac"}, "downloads": -1, "filename": "chef-solo-cup-0.3.1.tar.gz", "has_sig": false, "md5_digest": "523a575dc4d9f4b50bdf8df1047801af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21765, "upload_time": "2016-04-21T21:20:24", "upload_time_iso_8601": "2016-04-21T21:20:24.251137Z", "url": "https://files.pythonhosted.org/packages/ba/7b/2b77a601a8be9ccd9cf3cb9c5e664296099de55b9612b94780eb49f6546d/chef-solo-cup-0.3.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:41 2020"}