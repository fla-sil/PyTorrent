{"info": {"author": "Eeo Jun", "author_email": "packwolf58@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": ".. image:: https://raw.githubusercontent.com/datalib/proclib/master/media/logo-small.png\n\nProclib is a high level wrapper/abstraction around the standard\nlibrary subprocess module, written in Python, with proper piping\nsupport which aims to simplify the usage of Unix utilities right\nfrom Python and help the developer focus on the commands and not\nthe code which calls the commands.\n\n.. image:: https://travis-ci.org/datalib/proclib.svg?branch=master\n    :target: https://travis-ci.org/datalib/proclib\n\nOverview\n--------\n\n`proclib.api.spawn(cmd)`\n    Given a string or list making up commands *cmd*, return\n    a Response object which is the result of piping the commands,\n    i.e. they are run in *parallel*. The ``data`` parameter can be\n    used to configure the data passed in to the initial process.\n    Usage example::\n\n        >>> from proclib.api import spawn\n        >>> r = spawn('yes | head')\n        >>> r.stdout.read()\n        'y\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\n'\n        >>> r.close()\n        >>> r.history[0].explain_signal()\n        {'action': 'kill',\n         'description': 'write on a pipe with no readers',\n         'id': 13,\n         'signal': 'SIGPIPE'}\n\n    Streaming support is built-in- that is that the stdout of\n    any process can be streamed lazily instead of read and stored\n    in memory all in one go. Also, any kind of iterable can be\n    piped to the process::\n\n        def gen():\n            yield 'hi\\n'\n            yield 'ho\\n'\n\n        r = spawn('cat', data=gen())\n        assert r.out.split() == ['hi', 'ho']", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/datalib/proclib", "keywords": "processes unix process datalib", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "proclib", "package_url": "https://pypi.org/project/proclib/", "platform": "any", "project_url": "https://pypi.org/project/proclib/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/datalib/proclib"}, "release_url": "https://pypi.org/project/proclib/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "pythonic processes", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://raw.githubusercontent.com/datalib/proclib/master/media/logo-small.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/65dd53916a5f345ce625584fd6742a21ec72ff89/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f646174616c69622f70726f636c69622f6d61737465722f6d656469612f6c6f676f2d736d616c6c2e706e67\">\n<p>Proclib is a high level wrapper/abstraction around the standard\nlibrary subprocess module, written in Python, with proper piping\nsupport which aims to simplify the usage of Unix utilities right\nfrom Python and help the developer focus on the commands and not\nthe code which calls the commands.</p>\n<a href=\"https://travis-ci.org/datalib/proclib\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/datalib/proclib.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/798f7e0f3b618f12c478315f73e9d5ff6be047b6/68747470733a2f2f7472617669732d63692e6f72672f646174616c69622f70726f636c69622e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"overview\">\n<h2>Overview</h2>\n<dl>\n<dt><cite>proclib.api.spawn(cmd)</cite></dt>\n<dd><p>Given a string or list making up commands <em>cmd</em>, return\na Response object which is the result of piping the commands,\ni.e. they are run in <em>parallel</em>. The <tt>data</tt> parameter can be\nused to configure the data passed in to the initial process.\nUsage example:</p>\n<pre>&gt;&gt;&gt; from proclib.api import spawn\n&gt;&gt;&gt; r = spawn('yes | head')\n&gt;&gt;&gt; r.stdout.read()\n'y\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\n'\n&gt;&gt;&gt; r.close()\n&gt;&gt;&gt; r.history[0].explain_signal()\n{'action': 'kill',\n 'description': 'write on a pipe with no readers',\n 'id': 13,\n 'signal': 'SIGPIPE'}\n</pre>\n<p>Streaming support is built-in- that is that the stdout of\nany process can be streamed lazily instead of read and stored\nin memory all in one go. Also, any kind of iterable can be\npiped to the process:</p>\n<pre>def gen():\n    yield 'hi\\n'\n    yield 'ho\\n'\n\nr = spawn('cat', data=gen())\nassert r.out.split() == ['hi', 'ho']\n</pre>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 1540701, "releases": {"0.0.1": [], "0.1.0": [{"comment_text": "", "digests": {"md5": "dba38cc6bc2f49432bc22d831f0d77d7", "sha256": "f34a0733ab6353988e2ccb35df92d3c28274980d59dbfb7e61c2801a40d3a8cb"}, "downloads": -1, "filename": "proclib-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dba38cc6bc2f49432bc22d831f0d77d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5668, "upload_time": "2015-04-21T10:34:29", "upload_time_iso_8601": "2015-04-21T10:34:29.790240Z", "url": "https://files.pythonhosted.org/packages/ac/1c/1c33e93b4672a25fe0eb0879dca95be5fa60ecf3a5e368415ab0d86bc75e/proclib-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "f32dd50bc6e4aece7711f73e81d15f56", "sha256": "7e4f6b868a33b69fe9bcec488e5e0c21af5020016db80e2a3dc1dd4afa1c092f"}, "downloads": -1, "filename": "proclib-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f32dd50bc6e4aece7711f73e81d15f56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6005, "upload_time": "2015-05-04T08:08:35", "upload_time_iso_8601": "2015-05-04T08:08:35.234391Z", "url": "https://files.pythonhosted.org/packages/08/ed/0eeb1ccd252e77a435980a9b942eb0fda4c1fe7021a2945b446aaefda0ff/proclib-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "b101d9d4c6c9c38c5f59fb5d6af8e4a2", "sha256": "1d88a7b6be7d8929ec6300b696b676772a689416eb9db4197d8e027512f80dc8"}, "downloads": -1, "filename": "proclib-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b101d9d4c6c9c38c5f59fb5d6af8e4a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6128, "upload_time": "2015-05-10T07:28:45", "upload_time_iso_8601": "2015-05-10T07:28:45.037041Z", "url": "https://files.pythonhosted.org/packages/a0/d6/5cf26c10c074b6d452ca8362781f9853407cccc8b2c769cea386a8dd79fe/proclib-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b101d9d4c6c9c38c5f59fb5d6af8e4a2", "sha256": "1d88a7b6be7d8929ec6300b696b676772a689416eb9db4197d8e027512f80dc8"}, "downloads": -1, "filename": "proclib-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b101d9d4c6c9c38c5f59fb5d6af8e4a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6128, "upload_time": "2015-05-10T07:28:45", "upload_time_iso_8601": "2015-05-10T07:28:45.037041Z", "url": "https://files.pythonhosted.org/packages/a0/d6/5cf26c10c074b6d452ca8362781f9853407cccc8b2c769cea386a8dd79fe/proclib-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:51 2020"}