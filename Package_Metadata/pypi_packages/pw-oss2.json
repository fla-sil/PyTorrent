{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "Alibaba Cloud OSS SDK for Python\n================================\n\n.. image:: https://badge.fury.io/py/oss2.svg\n    :target: https://badge.fury.io/py/oss2\n.. image:: https://travis-ci.org/aliyun/aliyun-oss-python-sdk.svg?branch=master\n    :target: https://travis-ci.org/aliyun/aliyun-oss-python-sdk\n.. image:: https://coveralls.io/repos/github/aliyun/aliyun-oss-python-sdk/badge.svg?branch=master\n    :target: https://coveralls.io/github/aliyun/aliyun-oss-python-sdk?branch=master\n\n`README of Chinese <https://github.com/aliyun/aliyun-oss-python-sdk/blob/master/README-CN.rst>`_    \n------------------\n\nOverview\n--------\n\nAlibaba Cloud Object Storage Python SDK 2.x. This version is not compatible with the previous version (Version 0.x). The package name is `oss2` to avoid conflict with previous versions. \n\n\nThe SDK of this version is dependent on the third-party HTTP library `requests <https://github.com/kennethreitz/requests>`_ and `crcmod`. Install the SDK following the methods below. \n\nNote:\n\n    This version does not contain the `osscmd` command line tool. \n\nRunning environment\n-------------------\n\nPython 2.6\uff0c2.7\uff0c3.3\uff0c3.4\uff0c3.5\n\nNote:\n\n    Do not use Python 3.3.0 or 3.3.1. Refer to `Python Issue 16658 <https://bugs.python.org/issue16658>`_.\n\nInstalling\n----------\n\nInstall the official release version through PIP (taking Linux as an example): \n\n.. code-block:: bash\n\n    $ pip install oss2\n\nYou can also install the unzipped installer package directly: \n\n.. code-block:: bash\n\n    $ sudo python setup.py install\n\n\nGetting started\n---------------\n\n.. code-block:: python\n\n    # -*- coding: utf-8 -*-\n\n    import oss2\n\n    endpoint = 'http://oss-cn-hangzhou.aliyuncs.com' # Suppose that your bucket is in the Hangzhou region. \n\n    auth = oss2.Auth('<Your AccessKeyID>', '<Your AccessKeySecret>')\n    bucket = oss2.Bucket(auth, endpoint, '<your bucket name>')\n\n    # The object key in the bucket is story.txt\n    key = 'story.txt'\n\n    # Upload\n    bucket.put_object(key, 'Ali Baba is a happy youth.')\n\n    # Download\n    bucket.get_object(key).read()\n\n    # Delete\n    bucket.delete_object(key)\n\n    # Traverse all objects in the bucket\n    for object_info in oss2.ObjectIterator(bucket):\n        print(object_info.key)\n\nFor more examples, refer to the code under the \"examples\" directory. \n\nHandling errors\n---------------\n\nThe Python SDK interface will throw an exception in case of an error (see oss2.exceptions sub-module) unless otherwise specified. An example is provided below:\n\n.. code-block:: python\n\n    try:\n        result = bucket.get_object(key)\n        print(result.read())\n    except oss2.exceptions.NoSuchKey as e:\n        print('{0} not found: http_status={1}, request_id={2}'.format(key, e.status, e.request_id))\n\nTesting\n-------\n\nFirst set the required AccessKeyId, AccessKeySecret, endpoint and bucket information for the test through environment variables (**Do not use the bucket for the production environment**). \nTake the Linux system for example: \n\n.. code-block:: bash\n\n    $ export OSS_TEST_ACCESS_KEY_ID=<AccessKeyId>\n    $ export OSS_TEST_ACCESS_KEY_SECRET=<AccessKeySecret>\n    $ export OSS_TEST_ENDPOINT=<endpoint>\n    $ export OSS_TEST_BUCKET=<bucket>\n\n    $ export OSS_TEST_STS_ID=<AccessKeyId for testing STS>\n    $ export OSS_TEST_STS_KEY=<AccessKeySecret for testing STS>\n    $ export OSS_TEST_STS_ARN=<Role ARN for testing STS>\n\n\nRun the test in the following method: \n\n.. code-block:: bash\n\n    $ nosetests                          # First install nose\n\n\nYou can set environment variable to test auth v2:\n\n.. code-block:: bash\n\n    $ export OSS_TEST_AUTH_VERSION=v2\n\nMore resources\n--------------\n- `More examples <https://github.com/aliyun/aliyun-oss-python-sdk/tree/master/examples>`_. \n- `Python SDK API documentation <http://aliyun-oss-python-sdk.readthedocs.org/en/latest>`_. \n- `Official Python SDK documentation <https://help.aliyun.com/document_detail/32026.html>`_.\n\nContacting us\n-------------\n- `Alibaba Cloud OSS official website <http://oss.aliyun.com>`_.\n- `Alibaba Cloud OSS official forum <http://bbs.aliyun.com>`_.\n- `Alibaba Cloud OSS official documentation center <https://help.aliyun.com/document_detail/32026.html>`_.\n- Alibaba Cloud official technical support: `Submit a ticket <https://workorder.console.aliyun.com/#/ticket/createIndex>`_.\n\nLicense\n-------\n- `MIT <https://github.com/aliyun/aliyun-oss-python-sdk/blob/master/LICENSE>`_.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://oss.aliyun.com", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pw-oss2", "package_url": "https://pypi.org/project/pw-oss2/", "platform": "", "project_url": "https://pypi.org/project/pw-oss2/", "project_urls": {"Homepage": "http://oss.aliyun.com"}, "release_url": "https://pypi.org/project/pw-oss2/2.4.0/", "requires_dist": ["requests (!=2.9.0)", "crcmod (>=1.7)"], "requires_python": "", "summary": "Aliyun OSS (Object Storage Service) SDK", "version": "2.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Alibaba Cloud OSS SDK for Python<br>================================<br><br>.. image:: https://badge.fury.io/py/oss2.svg<br>    :target: https://badge.fury.io/py/oss2<br>.. image:: https://travis-ci.org/aliyun/aliyun-oss-python-sdk.svg?branch=master<br>    :target: https://travis-ci.org/aliyun/aliyun-oss-python-sdk<br>.. image:: https://coveralls.io/repos/github/aliyun/aliyun-oss-python-sdk/badge.svg?branch=master<br>    :target: https://coveralls.io/github/aliyun/aliyun-oss-python-sdk?branch=master<br><br>`README of Chinese &lt;https://github.com/aliyun/aliyun-oss-python-sdk/blob/master/README-CN.rst&gt;`_    <br>------------------<br><br>Overview<br>--------<br><br>Alibaba Cloud Object Storage Python SDK 2.x. This version is not compatible with the previous version (Version 0.x). The package name is `oss2` to avoid conflict with previous versions. <br><br><br>The SDK of this version is dependent on the third-party HTTP library `requests &lt;https://github.com/kennethreitz/requests&gt;`_ and `crcmod`. Install the SDK following the methods below. <br><br>Note:<br><br>    This version does not contain the `osscmd` command line tool. <br><br>Running environment<br>-------------------<br><br>Python 2.6\uff0c2.7\uff0c3.3\uff0c3.4\uff0c3.5<br><br>Note:<br><br>    Do not use Python 3.3.0 or 3.3.1. Refer to `Python Issue 16658 &lt;https://bugs.python.org/issue16658&gt;`_.<br><br>Installing<br>----------<br><br>Install the official release version through PIP (taking Linux as an example): <br><br>.. code-block:: bash<br><br>    $ pip install oss2<br><br>You can also install the unzipped installer package directly: <br><br>.. code-block:: bash<br><br>    $ sudo python setup.py install<br><br><br>Getting started<br>---------------<br><br>.. code-block:: python<br><br>    # -*- coding: utf-8 -*-<br><br>    import oss2<br><br>    endpoint = 'http://oss-cn-hangzhou.aliyuncs.com' # Suppose that your bucket is in the Hangzhou region. <br><br>    auth = oss2.Auth('&lt;Your AccessKeyID&gt;', '&lt;Your AccessKeySecret&gt;')<br>    bucket = oss2.Bucket(auth, endpoint, '&lt;your bucket name&gt;')<br><br>    # The object key in the bucket is story.txt<br>    key = 'story.txt'<br><br>    # Upload<br>    bucket.put_object(key, 'Ali Baba is a happy youth.')<br><br>    # Download<br>    bucket.get_object(key).read()<br><br>    # Delete<br>    bucket.delete_object(key)<br><br>    # Traverse all objects in the bucket<br>    for object_info in oss2.ObjectIterator(bucket):<br>        print(object_info.key)<br><br>For more examples, refer to the code under the \"examples\" directory. <br><br>Handling errors<br>---------------<br><br>The Python SDK interface will throw an exception in case of an error (see oss2.exceptions sub-module) unless otherwise specified. An example is provided below:<br><br>.. code-block:: python<br><br>    try:<br>        result = bucket.get_object(key)<br>        print(result.read())<br>    except oss2.exceptions.NoSuchKey as e:<br>        print('{0} not found: http_status={1}, request_id={2}'.format(key, e.status, e.request_id))<br><br>Testing<br>-------<br><br>First set the required AccessKeyId, AccessKeySecret, endpoint and bucket information for the test through environment variables (**Do not use the bucket for the production environment**). <br>Take the Linux system for example: <br><br>.. code-block:: bash<br><br>    $ export OSS_TEST_ACCESS_KEY_ID=&lt;AccessKeyId&gt;<br>    $ export OSS_TEST_ACCESS_KEY_SECRET=&lt;AccessKeySecret&gt;<br>    $ export OSS_TEST_ENDPOINT=&lt;endpoint&gt;<br>    $ export OSS_TEST_BUCKET=&lt;bucket&gt;<br><br>    $ export OSS_TEST_STS_ID=&lt;AccessKeyId for testing STS&gt;<br>    $ export OSS_TEST_STS_KEY=&lt;AccessKeySecret for testing STS&gt;<br>    $ export OSS_TEST_STS_ARN=&lt;Role ARN for testing STS&gt;<br><br><br>Run the test in the following method: <br><br>.. code-block:: bash<br><br>    $ nosetests                          # First install nose<br><br><br>You can set environment variable to test auth v2:<br><br>.. code-block:: bash<br><br>    $ export OSS_TEST_AUTH_VERSION=v2<br><br>More resources<br>--------------<br>- `More examples &lt;https://github.com/aliyun/aliyun-oss-python-sdk/tree/master/examples&gt;`_. <br>- `Python SDK API documentation &lt;http://aliyun-oss-python-sdk.readthedocs.org/en/latest&gt;`_. <br>- `Official Python SDK documentation &lt;https://help.aliyun.com/document_detail/32026.html&gt;`_.<br><br>Contacting us<br>-------------<br>- `Alibaba Cloud OSS official website &lt;http://oss.aliyun.com&gt;`_.<br>- `Alibaba Cloud OSS official forum &lt;http://bbs.aliyun.com&gt;`_.<br>- `Alibaba Cloud OSS official documentation center &lt;https://help.aliyun.com/document_detail/32026.html&gt;`_.<br>- Alibaba Cloud official technical support: `Submit a ticket &lt;https://workorder.console.aliyun.com/#/ticket/createIndex&gt;`_.<br><br>License<br>-------<br>- `MIT &lt;https://github.com/aliyun/aliyun-oss-python-sdk/blob/master/LICENSE&gt;`_.<br><br><br>\n          </div>"}, "last_serial": 3712713, "releases": {"2.4.0": [{"comment_text": "", "digests": {"md5": "c660bb618b14c5b4feb79f5eb83f2836", "sha256": "e255cbf298d36365f8969d6dc185c27bb70f058b09bc8aa1514b16c8eee1813c"}, "downloads": -1, "filename": "pw_oss2-2.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c660bb618b14c5b4feb79f5eb83f2836", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 51964, "upload_time": "2018-03-28T06:36:20", "upload_time_iso_8601": "2018-03-28T06:36:20.341219Z", "url": "https://files.pythonhosted.org/packages/f9/ac/1328289af7cd85e0e7d32d3519492bd45192b696123353377b3611d88cf4/pw_oss2-2.4.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c660bb618b14c5b4feb79f5eb83f2836", "sha256": "e255cbf298d36365f8969d6dc185c27bb70f058b09bc8aa1514b16c8eee1813c"}, "downloads": -1, "filename": "pw_oss2-2.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c660bb618b14c5b4feb79f5eb83f2836", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 51964, "upload_time": "2018-03-28T06:36:20", "upload_time_iso_8601": "2018-03-28T06:36:20.341219Z", "url": "https://files.pythonhosted.org/packages/f9/ac/1328289af7cd85e0e7d32d3519492bd45192b696123353377b3611d88cf4/pw_oss2-2.4.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:12:42 2020"}