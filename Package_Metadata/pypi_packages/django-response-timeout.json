{"info": {"author": "Saul Shanabrook", "author_email": "s.shanabrook@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Software Development :: Libraries"], "description": "django-response-timeout\n============================\n\n.. image:: https://pypip.in/v/django-response-timeout/badge.png\n        :target: https://crate.io/packages/django-response-timeout\n\n.. image:: https://travis-ci.org/saulshanabrook/django-response-timeout.png\n    :target: https://travis-ci.org/saulshanabrook/django-response-timeout\n\n``django-response-timeout`` allows you to set the cache time globally for\nall responses. It provides a way to override the client side cache time for\nthe Django `per site`_ caching middleware.\n\n.. _per site: https://docs.djangoproject.com/en/dev/topics/cache/#the-per-site-cache\n\n\nInstallation\n------------\nInstallation is as easy as::\n\n    pip install django-response-timeout\n\n\nSetup\n-----\nAdd ``response_timeout.middleware.SetCacheTimeoutMiddleware`` and place it\nafter ``dumper.middleware.UpdateCacheMiddleware`` so that it will set the\nheader time first on cached responses.\n\n.. code-block:: python\n\n    MIDDLEWARE_CLASSES = (\n        'django.middleware.cache.UpdateCacheMiddleware',\n        'response_timeout.middleware.SetCacheTimeoutMiddleware',\n        'django.middleware.common.CommonMiddleware',\n        'django.middleware.cache.FetchFromCacheMiddleware',\n    )\n\nThen set `RESPONSE_CACHE_SECONDS` to the number of seconds each page should\nbe cached on the front end.\n\nThe Django documention does not cohesively describe how your middleware\nshould be ordered, however `this stackoverflow`_ discussion does a fine job.\n\n.. _this stackoverflow: http://stackoverflow.com/questions/4632323/practical-rules-for-django-middleware-ordering#question\n\n\nContributing\n------------\n\nIf you find issues or would like to see a feature suppored, head over to\nthe `issues section` and report it. Don't be agraid, go ahead, do it!\n\n.. _issues section: https://github.com/saulshanabrook/django-response-timeout/issues\n\nTo contribute code in any form, fork the repository and clone it locally.\nCreate a new branch for your feature::\n\n    git commit -b feature/whatever-you-like\n\nThen make sure all the tests past (and write new ones for any new features)::\n\n    pip install -e .\n    pip install -r requirements-dev.txt\n    django-admin.py test --settings=test.settings\n\nCheck if the README.rst looks right::\n\n    restview --long-description\n\nThen push the finished feature to github and open a pull request form the branch.\n\nNew Release\n^^^^^^^^^^^\nTo create a new release:\n\n1. Add changes to ``CHANGES.txt``\n2. Change version in ``setup.py``\n3. ``python setup.py register``\n4. ``python setup.py sdist upload``", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.github.com/saulshanabrook/django-response-timeout", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "django-response-timeout", "package_url": "https://pypi.org/project/django-response-timeout/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-response-timeout/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://www.github.com/saulshanabrook/django-response-timeout"}, "release_url": "https://pypi.org/project/django-response-timeout/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Django global response timeout middleware", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://crate.io/packages/django-response-timeout\" rel=\"nofollow\"><img alt=\"https://pypip.in/v/django-response-timeout/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9c27bc26a0b214ea3a0f01922e897952c0472200/68747470733a2f2f70797069702e696e2f762f646a616e676f2d726573706f6e73652d74696d656f75742f62616467652e706e67\"></a>\n<a href=\"https://travis-ci.org/saulshanabrook/django-response-timeout\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/saulshanabrook/django-response-timeout.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35a1d148df193f50bfac24b2b38f97762b6047a6/68747470733a2f2f7472617669732d63692e6f72672f7361756c7368616e6162726f6f6b2f646a616e676f2d726573706f6e73652d74696d656f75742e706e67\"></a>\n<p><tt><span class=\"pre\">django-response-timeout</span></tt> allows you to set the cache time globally for\nall responses. It provides a way to override the client side cache time for\nthe Django <a href=\"https://docs.djangoproject.com/en/dev/topics/cache/#the-per-site-cache\" rel=\"nofollow\">per site</a> caching middleware.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Installation is as easy as:</p>\n<pre>pip install django-response-timeout\n</pre>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Add <tt>response_timeout.middleware.SetCacheTimeoutMiddleware</tt> and place it\nafter <tt>dumper.middleware.UpdateCacheMiddleware</tt> so that it will set the\nheader time first on cached responses.</p>\n<pre><span class=\"n\">MIDDLEWARE_CLASSES</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s1\">'django.middleware.cache.UpdateCacheMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'response_timeout.middleware.SetCacheTimeoutMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.middleware.common.CommonMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.middleware.cache.FetchFromCacheMiddleware'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Then set <cite>RESPONSE_CACHE_SECONDS</cite> to the number of seconds each page should\nbe cached on the front end.</p>\n<p>The Django documention does not cohesively describe how your middleware\nshould be ordered, however <a href=\"http://stackoverflow.com/questions/4632323/practical-rules-for-django-middleware-ordering#question\" rel=\"nofollow\">this stackoverflow</a> discussion does a fine job.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>If you find issues or would like to see a feature suppored, head over to\nthe <cite>issues section</cite> and report it. Don\u2019t be agraid, go ahead, do it!</p>\n<p>To contribute code in any form, fork the repository and clone it locally.\nCreate a new branch for your feature:</p>\n<pre>git commit -b feature/whatever-you-like\n</pre>\n<p>Then make sure all the tests past (and write new ones for any new features):</p>\n<pre>pip install -e .\npip install -r requirements-dev.txt\ndjango-admin.py test --settings=test.settings\n</pre>\n<p>Check if the README.rst looks right:</p>\n<pre>restview --long-description\n</pre>\n<p>Then push the finished feature to github and open a pull request form the branch.</p>\n<div id=\"new-release\">\n<h3>New Release</h3>\n<p>To create a new release:</p>\n<ol>\n<li>Add changes to <tt>CHANGES.txt</tt></li>\n<li>Change version in <tt>setup.py</tt></li>\n<li><tt>python setup.py register</tt></li>\n<li><tt>python setup.py sdist upload</tt></li>\n</ol>\n</div>\n</div>\n\n          </div>"}, "last_serial": 812191, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8113ca70244e341e73adc47629f1b5ed", "sha256": "6632bb82e101404c2ff4ab27c6d353d01f9dda6e2e5e0395d61289b6fab33761"}, "downloads": -1, "filename": "django-response-timeout-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8113ca70244e341e73adc47629f1b5ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4426, "upload_time": "2013-07-09T23:19:05", "upload_time_iso_8601": "2013-07-09T23:19:05.444226Z", "url": "https://files.pythonhosted.org/packages/b8/1e/daea4d67aa52b5e0a6a8ba359f70127b3a9b779ace93418b2ba563568a61/django-response-timeout-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8113ca70244e341e73adc47629f1b5ed", "sha256": "6632bb82e101404c2ff4ab27c6d353d01f9dda6e2e5e0395d61289b6fab33761"}, "downloads": -1, "filename": "django-response-timeout-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8113ca70244e341e73adc47629f1b5ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4426, "upload_time": "2013-07-09T23:19:05", "upload_time_iso_8601": "2013-07-09T23:19:05.444226Z", "url": "https://files.pythonhosted.org/packages/b8/1e/daea4d67aa52b5e0a6a8ba359f70127b3a9b779ace93418b2ba563568a61/django-response-timeout-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:13 2020"}