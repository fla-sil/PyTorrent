{"info": {"author": "Brett Cannon", "author_email": "brett@snarky.ca", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "mousebender\n###########\nA package for installing fully-specified Python packages.\n\nPackage contents\n================\n\n- ``mousbender.simple`` -- Parsers for the `simple repository API`_\n\nGoals for this project\n======================\n\nThe goal is to provide a package which could install all dependencies as frozen by a tool like `pip-tools`_ via an API (or put another way, what is required to install ``pip`` w/o using pip itself?). This avoids relying on pip's CLI to do installations but instead provide a programmatic API. It also helps discover any holes in specifications and/or packages for providing full support for Python package installation based on standards.\n\nThe steps to installing a package\n---------------------------------\n\n`PyPA specifications`_\n\n#. Figure out what packages are necessary\n\n    #. For an app, read lock file (?)\n    #. For a package:\n\n        #. Read list of dependencies (?)\n        #. *Solve dependency constraints* (ResolveLib_)\n\n#. Get the wheel to install\n\n    #. Check if package is already installed (`spec <https://packaging.python.org/specifications/recording-installed-packages/>`__ / `importlib-metadata`_)\n    #. Check local wheel cache (?; `how pip does it <https://pip.pypa.io/en/stable/reference/pip_install/#caching>`__)\n    #. Choose appropriate file from PyPI/index\n\n        #. Process the list of files (`simple repository API`_ / `mousebender.simple`)\n        #. Calculate best-fitting wheel (`spec <https://packaging.python.org/specifications/platform-compatibility-tags/>`__ / `packaging.tags`_)\n        #. If no wheel found ...\n\n            #. Select and download the sdist (?)\n            #. Build the wheel (`PEP 517`_, `PEP 518`_ / pep517_)\n\n    #. *Download the wheel*\n    #. Cache the wheel locally (?)\n\n#. Install the wheel\n\n   #. Install the files (`spec <https://packaging.python.org/specifications/distribution-formats/>`__ / `distlib.wheel`_)\n   #. Record the installation (`spec <https://packaging.python.org/specifications/recording-installed-packages/>`__ / ?)\n\n\nWhere does the name come from?\n==============================\nThe customer from `Monty Python's cheese shop sketch`_ is named \"Mr. Mousebender\". And in case you don't know, the original name of PyPI_ was the Cheeseshop after the Monty Python sketch.\n\n\n-----\n\n.. image:: https://github.com/brettcannon/mousebender/workflows/CI/badge.svg\n    :target: https://github.com/brettcannon/mousebender/actions?query=workflow%3ACI+branch%3Amaster+event%3Apush\n    :alt: CI status\n\n.. image:: https://img.shields.io/badge/coverage-100%25-brightgreen\n    :target: https://github.com/brettcannon/mousebender/blob/master/pyproject.toml\n    :alt: 100% branch coverage\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n    :alt: Formatted with Black\n\n.. image:: http://www.mypy-lang.org/static/mypy_badge.svg\n    :target: https://mypy.readthedocs.io/\n    :alt: Checked by mypy\n\n.. image:: https://img.shields.io/pypi/pyversions/mousebender\n    :target: https://pypi.org/project/mousebender\n    :alt: PyPI - Python Version\n\n.. image:: https://img.shields.io/pypi/l/mousebender\n    :target: https://github.com/brettcannon/mousebender/blob/master/LICENSE\n    :alt: PyPI - License\n\n.. image:: https://img.shields.io/pypi/wheel/mousebender\n    :target: https://pypi.org/project/mousebender/#files\n    :alt: PyPI - Wheel\n\n\n.. _distlib.wheel: https://distlib.readthedocs.io/en/latest/tutorial.html#installing-from-wheels\n.. _importlib-metadata: https://pypi.org/project/importlib-metadata/\n.. _Monty Python's cheese shop sketch: https://en.wikipedia.org/wiki/Cheese_Shop_sketch\n.. _packaging.tags: https://packaging.pypa.io/en/latest/tags/\n.. _PEP 517: https://www.python.org/dev/peps/pep-0517/\n.. _PEP 518: https://www.python.org/dev/peps/pep-0518/\n.. _pep517: https://pypi.org/project/pep517/\n.. _pip-tools: https://pypi.org/project/pip-tools/\n.. _PyPI: https://pypi.org\n.. _PyPA specifications: https://packaging.python.org/specifications/\n.. _ResolveLib: https://pypi.org/project/resolvelib/\n.. _simple repository API: https://packaging.python.org/specifications/simple-repository-api/\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brettcannon/mousebender", "keywords": "", "license": "BSD-3-Clause", "maintainer": "Derek Keeler", "maintainer_email": "derek@suchcool.ca", "name": "mousebender", "package_url": "https://pypi.org/project/mousebender/", "platform": "", "project_url": "https://pypi.org/project/mousebender/", "project_urls": {"Documentation": "https://github.com/brettcannon/mousebender/blob/master/README.rst", "Homepage": "https://github.com/brettcannon/mousebender", "Repository": "https://github.com/brettcannon/mousebender", "issues": "https://github.com/brettcannon/mousebender/issues"}, "release_url": "https://pypi.org/project/mousebender/1.0.1/", "requires_dist": ["packaging (>=20.3,<21.0)"], "requires_python": ">=3.8,<4", "summary": "A package for implementing various Python packaging standards", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A package for installing fully-specified Python packages.</p>\n<div id=\"package-contents\">\n<h2>Package contents</h2>\n<ul>\n<li><tt>mousbender.simple</tt> \u2013 Parsers for the <a href=\"https://packaging.python.org/specifications/simple-repository-api/\" rel=\"nofollow\">simple repository API</a></li>\n</ul>\n</div>\n<div id=\"goals-for-this-project\">\n<h2>Goals for this project</h2>\n<p>The goal is to provide a package which could install all dependencies as frozen by a tool like <a href=\"https://pypi.org/project/pip-tools/\" rel=\"nofollow\">pip-tools</a> via an API (or put another way, what is required to install <tt>pip</tt> w/o using pip itself?). This avoids relying on pip\u2019s CLI to do installations but instead provide a programmatic API. It also helps discover any holes in specifications and/or packages for providing full support for Python package installation based on standards.</p>\n<div id=\"the-steps-to-installing-a-package\">\n<h3>The steps to installing a package</h3>\n<p><a href=\"https://packaging.python.org/specifications/\" rel=\"nofollow\">PyPA specifications</a></p>\n<ol>\n<li><p>Figure out what packages are necessary</p>\n<blockquote>\n<ol>\n<li><p>For an app, read lock file (?)</p>\n</li>\n<li><p>For a package:</p>\n<blockquote>\n<ol>\n<li>Read list of dependencies (?)</li>\n<li><em>Solve dependency constraints</em> (<a href=\"https://pypi.org/project/resolvelib/\" rel=\"nofollow\">ResolveLib</a>)</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n</blockquote>\n</li>\n<li><p>Get the wheel to install</p>\n<blockquote>\n<ol>\n<li><p>Check if package is already installed (<a href=\"https://packaging.python.org/specifications/recording-installed-packages/\" rel=\"nofollow\">spec</a> / <a href=\"https://pypi.org/project/importlib-metadata/\" rel=\"nofollow\">importlib-metadata</a>)</p>\n</li>\n<li><p>Check local wheel cache (?; <a href=\"https://pip.pypa.io/en/stable/reference/pip_install/#caching\" rel=\"nofollow\">how pip does it</a>)</p>\n</li>\n<li><p>Choose appropriate file from PyPI/index</p>\n<blockquote>\n<ol>\n<li><p>Process the list of files (<a href=\"https://packaging.python.org/specifications/simple-repository-api/\" rel=\"nofollow\">simple repository API</a> / <cite>mousebender.simple</cite>)</p>\n</li>\n<li><p>Calculate best-fitting wheel (<a href=\"https://packaging.python.org/specifications/platform-compatibility-tags/\" rel=\"nofollow\">spec</a> / <a href=\"https://packaging.pypa.io/en/latest/tags/\" rel=\"nofollow\">packaging.tags</a>)</p>\n</li>\n<li><p>If no wheel found \u2026</p>\n<blockquote>\n<ol>\n<li>Select and download the sdist (?)</li>\n<li>Build the wheel (<a href=\"https://www.python.org/dev/peps/pep-0517/\" rel=\"nofollow\">PEP 517</a>, <a href=\"https://www.python.org/dev/peps/pep-0518/\" rel=\"nofollow\">PEP 518</a> / <a href=\"https://pypi.org/project/pep517/\" rel=\"nofollow\">pep517</a>)</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n</blockquote>\n</li>\n<li><p><em>Download the wheel</em></p>\n</li>\n<li><p>Cache the wheel locally (?)</p>\n</li>\n</ol>\n</blockquote>\n</li>\n<li><p>Install the wheel</p>\n<ol>\n<li>Install the files (<a href=\"https://packaging.python.org/specifications/distribution-formats/\" rel=\"nofollow\">spec</a> / <a href=\"https://distlib.readthedocs.io/en/latest/tutorial.html#installing-from-wheels\" rel=\"nofollow\">distlib.wheel</a>)</li>\n<li>Record the installation (<a href=\"https://packaging.python.org/specifications/recording-installed-packages/\" rel=\"nofollow\">spec</a> / ?)</li>\n</ol>\n</li>\n</ol>\n</div>\n</div>\n<div id=\"where-does-the-name-come-from\">\n<h2>Where does the name come from?</h2>\n<p>The customer from <a href=\"https://en.wikipedia.org/wiki/Cheese_Shop_sketch\" rel=\"nofollow\">Monty Python\u2019s cheese shop sketch</a> is named \u201cMr. Mousebender\u201d. And in case you don\u2019t know, the original name of <a href=\"https://pypi.org\" rel=\"nofollow\">PyPI</a> was the Cheeseshop after the Monty Python sketch.</p>\n<hr class=\"docutils\">\n<a href=\"https://github.com/brettcannon/mousebender/actions?query=workflow%3ACI+branch%3Amaster+event%3Apush\" rel=\"nofollow\"><img alt=\"CI status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/432624c3ed914198e28847a4383cb44395c1ba7c/68747470733a2f2f6769746875622e636f6d2f627265747463616e6e6f6e2f6d6f75736562656e6465722f776f726b666c6f77732f43492f62616467652e737667\"></a>\n<a href=\"https://github.com/brettcannon/mousebender/blob/master/pyproject.toml\" rel=\"nofollow\"><img alt=\"100% branch coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0280f255d36847e3743058a68bedfb93626e993f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f7665726167652d3130302532352d627269676874677265656e\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Formatted with Black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://mypy.readthedocs.io/\" rel=\"nofollow\"><img alt=\"Checked by mypy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0db8f5dcbf5f340f278004d5db3d16b4cdf33ba/687474703a2f2f7777772e6d7970792d6c616e672e6f72672f7374617469632f6d7970795f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/mousebender\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01442419f41c11d4540f6a83a0961e131564faa0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d6f75736562656e646572\"></a>\n<a href=\"https://github.com/brettcannon/mousebender/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9d444f59a15b36542afa8319e8d250c4c65cb8e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6d6f75736562656e646572\"></a>\n<a href=\"https://pypi.org/project/mousebender/#files\" rel=\"nofollow\"><img alt=\"PyPI - Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b9fe91269bb5b69449d611ebd31bb7b63d6dfca/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f6d6f75736562656e646572\"></a>\n</div>\n\n          </div>"}, "last_serial": 7001399, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "4ba3efb02af8bc2695dc58b4d838069b", "sha256": "409f6b4888424fdcc2f6508d3d80a30b1d998fa65ee8e69103e574a070004cc7"}, "downloads": -1, "filename": "mousebender-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4ba3efb02af8bc2695dc58b4d838069b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4", "size": 5426, "upload_time": "2020-04-10T02:08:30", "upload_time_iso_8601": "2020-04-10T02:08:30.514674Z", "url": "https://files.pythonhosted.org/packages/bf/6c/6557fd9567bc7db40c84e95e7d1b23831a3d20036c6f951c894479b64f6e/mousebender-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7be9de107cf72a74cc5cf229ab25698a", "sha256": "8c1d5d0f4f96423aecc9f5fff73b01b4be7ccc27ce03d8d96cd45c894a74d6ea"}, "downloads": -1, "filename": "mousebender-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7be9de107cf72a74cc5cf229ab25698a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4", "size": 5532, "upload_time": "2020-04-10T02:08:32", "upload_time_iso_8601": "2020-04-10T02:08:32.596804Z", "url": "https://files.pythonhosted.org/packages/82/c2/faa6aa61ea2a1b26b6f2426a460a48df42ad847f88b4bac0e1e940506bfb/mousebender-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1d266d8f806a0f02a7b22027f1ba45ef", "sha256": "19e18bc23b86897f94fdbdad5b20fea538f249f5596a2112faee9ade6143ce07"}, "downloads": -1, "filename": "mousebender-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1d266d8f806a0f02a7b22027f1ba45ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4", "size": 5708, "upload_time": "2020-04-11T19:52:24", "upload_time_iso_8601": "2020-04-11T19:52:24.542940Z", "url": "https://files.pythonhosted.org/packages/0f/62/2753a6fba280d7ccbf23757ac2fb8cb7bbee47835f6f8c1b29d4517d3254/mousebender-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41d07ef49954984101536c1f3d1500d7", "sha256": "8e66af0b0fb118b5f6cc1a44fb180be0c7c192b5194a4370ac62b4f83a4c58ca"}, "downloads": -1, "filename": "mousebender-1.0.1.tar.gz", "has_sig": false, "md5_digest": "41d07ef49954984101536c1f3d1500d7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4", "size": 5961, "upload_time": "2020-04-11T19:52:25", "upload_time_iso_8601": "2020-04-11T19:52:25.845640Z", "url": "https://files.pythonhosted.org/packages/fe/0f/4407aca7be3a272bdc2f9435bba72f918c4e83cb138167668cd07b55653a/mousebender-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1d266d8f806a0f02a7b22027f1ba45ef", "sha256": "19e18bc23b86897f94fdbdad5b20fea538f249f5596a2112faee9ade6143ce07"}, "downloads": -1, "filename": "mousebender-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1d266d8f806a0f02a7b22027f1ba45ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4", "size": 5708, "upload_time": "2020-04-11T19:52:24", "upload_time_iso_8601": "2020-04-11T19:52:24.542940Z", "url": "https://files.pythonhosted.org/packages/0f/62/2753a6fba280d7ccbf23757ac2fb8cb7bbee47835f6f8c1b29d4517d3254/mousebender-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41d07ef49954984101536c1f3d1500d7", "sha256": "8e66af0b0fb118b5f6cc1a44fb180be0c7c192b5194a4370ac62b4f83a4c58ca"}, "downloads": -1, "filename": "mousebender-1.0.1.tar.gz", "has_sig": false, "md5_digest": "41d07ef49954984101536c1f3d1500d7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4", "size": 5961, "upload_time": "2020-04-11T19:52:25", "upload_time_iso_8601": "2020-04-11T19:52:25.845640Z", "url": "https://files.pythonhosted.org/packages/fe/0f/4407aca7be3a272bdc2f9435bba72f918c4e83cb138167668cd07b55653a/mousebender-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:30 2020"}