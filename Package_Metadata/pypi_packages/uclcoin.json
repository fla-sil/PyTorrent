{"info": {"author": "Renato Orgito", "author_email": "orgito@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Topic :: Education", "Topic :: Security :: Cryptography"], "description": "UCLCoin\n========\n.. image:: https://img.shields.io/pypi/v/uclcoin.svg?style=flat-square\n    :target: https://pypi.org/project/uclcoin\n\n.. image:: https://img.shields.io/pypi/pyversions/uclcoin.svg?style=flat-square\n    :target: https://pypi.org/project/uclcoin\n\n.. image:: https://img.shields.io/pypi/l/uclcoin.svg?style=flat-square\n    :target: https://pypi.org/project/uclcoin\n\n-----\n\nA naive blockchain/cryptocurrency implementation for educational purposes.\n\n\nInstallation\n------------\n\nUCLCoin is distributed on PyPI and is available on Linux/macOS and Windows and supports Python 3.6+.\n\n.. code-block:: bash\n\n    $ pip install -U uclcoin\n\nExamples\n--------\n\nFor the following code examples it is assumed that the necessary dependecies were imported.\n\n.. code-block:: python\n\n    >>> from uclcoin import KeyPair, Transaction, Block, BlockChain\n\nGenerating your key pair\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe private key is used to sign transactions and the public key is your UCLCoin address. It is used\nto receive coins from transactions and rewards from mining.\n\nUse the ``KeyPair`` class to generate your keys\n\n.. code-block:: python\n\n    >>> wallet = KeyPair()\n    >>> address = wallet.public_key\n    >>> address\n    '03d70f9a58c9bc6d8fdc47f96d6931f14a7abb0d72cd76886ee05047023fd49471'\n\nTo reuse your key pair instantiate the class using your private key ``wallet.private_key``\n\n.. code-block:: python\n\n    >>> wallet = KeyPair('your-private-key')\n\nBlockChain\n^^^^^^^^^^\n\nCreate a new BlockChain for doing your tests:\n\n.. code-block:: python\n\n    >>> blockchain = BlockChain()\n\nYour ``blockchain`` will contain only the Genesis block. It is ready to accept\ntransactions, but you can't send any coins if your balance is zero.\n\n.. code-block:: python\n\n    >>> blockchain.get_balance(wallet.public_key)\n    0\n\nMining a block\n^^^^^^^^^^^^^^\n\nGet a new minable block from the blockchain:\n\n.. code-block:: python\n\n    >>> new_block = blockchain.get_minable_block(wallet.public_key)\n\nThe blockchain returns a new block with the next valid index, any pending\ntransactions and a coinbase (reward) transaction to your public key (wallet.public_key)\n\nUCLCoin the proof of work consists on manipulating the ``nonce`` field and recalculating\nthe block hash until it starts with ``N`` zeros. The current difficulty can be obtained with the\n``calculate_hash_difficulty`` method.\n\n.. code-block:: python\n\n    >>> N = blockchain.calculate_hash_difficulty()\n\nA simple mining method is to increment the nonce until you get a valid hash:\n\n.. code-block:: python\n\n    >>> while new_block.current_hash[:N].count('0') < N:\n    ...     new_block.nonce +=1\n    ...     new_block.recalculate_hash()\n\nThe operation will block while the hash is calculated. After finishing just submit the\nnew block to the blockchain. If it is accepted your balance will be updated.\n\n.. code-block:: python\n\n   >>> blockchain.add_block(new_block)\n   True\n   >>> blockchain.get_balance(wallet.public_key)\n   10\n\nSending a transaction\n^^^^^^^^^^^^^^^^^^^^^\n\nYou can now spent your new coins.\n\n.. code-block:: python\n\n   >>> destination = 'public_key_of_the_receiver'\n   >>> value = wallet.create_transaction(destination, 2)\n   >>> blockchain.add_transaction(value)\n   True\n\nYour transaction will be added to the pending transactions queue. It will only be confirmed after being\nincluded in a mined block.\n\n.. code-block:: python\n\n   >>> blockchain.get_balance(wallet.public_key)\n   10\n\nYou can check your balance including the pending transactions\n\n.. code-block:: python\n\n   >>> blockchain.get_balance_pending(wallet.public_key)\n   8\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/orgito/uclcoin", "keywords": "uclcoin blockchain cryptocurrency", "license": "MIT", "maintainer": "Renato Orgito", "maintainer_email": "orgito@gmail.com", "name": "uclcoin", "package_url": "https://pypi.org/project/uclcoin/", "platform": "", "project_url": "https://pypi.org/project/uclcoin/", "project_urls": {"Bug Reports": "https://github.com/orgito/uclcoin/issues", "Homepage": "https://github.com/orgito/uclcoin", "Source": "https://github.com/orgito/uclcoin"}, "release_url": "https://pypi.org/project/uclcoin/0.3.2/", "requires_dist": ["coincurve", "pymongo"], "requires_python": ">=3.6", "summary": "UCLCoin: A naive blockchain/cryptocurrency implementation", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/uclcoin\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/uclcoin.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9924355e2f749210fbbed5254fde2f6ce7c192e8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f75636c636f696e2e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.org/project/uclcoin\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/uclcoin.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96baa657556b684bd3432a5748b4243e1409036e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f75636c636f696e2e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.org/project/uclcoin\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/uclcoin.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/772d4ac6ed7ac7eb6776bb779a30ccf01314747e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f75636c636f696e2e7376673f7374796c653d666c61742d737175617265\"></a>\n<hr class=\"docutils\">\n<p>A naive blockchain/cryptocurrency implementation for educational purposes.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>UCLCoin is distributed on PyPI and is available on Linux/macOS and Windows and supports Python 3.6+.</p>\n<pre>$ pip install -U uclcoin\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>For the following code examples it is assumed that the necessary dependecies were imported.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">uclcoin</span> <span class=\"kn\">import</span> <span class=\"n\">KeyPair</span><span class=\"p\">,</span> <span class=\"n\">Transaction</span><span class=\"p\">,</span> <span class=\"n\">Block</span><span class=\"p\">,</span> <span class=\"n\">BlockChain</span>\n</pre>\n<div id=\"generating-your-key-pair\">\n<h3>Generating your key pair</h3>\n<p>The private key is used to sign transactions and the public key is your UCLCoin address. It is used\nto receive coins from transactions and rewards from mining.</p>\n<p>Use the <tt>KeyPair</tt> class to generate your keys</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">wallet</span> <span class=\"o\">=</span> <span class=\"n\">KeyPair</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">wallet</span><span class=\"o\">.</span><span class=\"n\">public_key</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">address</span>\n<span class=\"s1\">'03d70f9a58c9bc6d8fdc47f96d6931f14a7abb0d72cd76886ee05047023fd49471'</span>\n</pre>\n<p>To reuse your key pair instantiate the class using your private key <tt>wallet.private_key</tt></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">wallet</span> <span class=\"o\">=</span> <span class=\"n\">KeyPair</span><span class=\"p\">(</span><span class=\"s1\">'your-private-key'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"blockchain\">\n<h3>BlockChain</h3>\n<p>Create a new BlockChain for doing your tests:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">blockchain</span> <span class=\"o\">=</span> <span class=\"n\">BlockChain</span><span class=\"p\">()</span>\n</pre>\n<p>Your <tt>blockchain</tt> will contain only the Genesis block. It is ready to accept\ntransactions, but you can\u2019t send any coins if your balance is zero.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">blockchain</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">(</span><span class=\"n\">wallet</span><span class=\"o\">.</span><span class=\"n\">public_key</span><span class=\"p\">)</span>\n<span class=\"mi\">0</span>\n</pre>\n</div>\n<div id=\"mining-a-block\">\n<h3>Mining a block</h3>\n<p>Get a new minable block from the blockchain:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">new_block</span> <span class=\"o\">=</span> <span class=\"n\">blockchain</span><span class=\"o\">.</span><span class=\"n\">get_minable_block</span><span class=\"p\">(</span><span class=\"n\">wallet</span><span class=\"o\">.</span><span class=\"n\">public_key</span><span class=\"p\">)</span>\n</pre>\n<p>The blockchain returns a new block with the next valid index, any pending\ntransactions and a coinbase (reward) transaction to your public key (wallet.public_key)</p>\n<p>UCLCoin the proof of work consists on manipulating the <tt>nonce</tt> field and recalculating\nthe block hash until it starts with <tt>N</tt> zeros. The current difficulty can be obtained with the\n<tt>calculate_hash_difficulty</tt> method.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"n\">blockchain</span><span class=\"o\">.</span><span class=\"n\">calculate_hash_difficulty</span><span class=\"p\">()</span>\n</pre>\n<p>A simple mining method is to increment the nonce until you get a valid hash:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">while</span> <span class=\"n\">new_block</span><span class=\"o\">.</span><span class=\"n\">current_hash</span><span class=\"p\">[:</span><span class=\"n\">N</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"s1\">'0'</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"n\">N</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">new_block</span><span class=\"o\">.</span><span class=\"n\">nonce</span> <span class=\"o\">+=</span><span class=\"mi\">1</span>\n<span class=\"o\">...</span>     <span class=\"n\">new_block</span><span class=\"o\">.</span><span class=\"n\">recalculate_hash</span><span class=\"p\">()</span>\n</pre>\n<p>The operation will block while the hash is calculated. After finishing just submit the\nnew block to the blockchain. If it is accepted your balance will be updated.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">blockchain</span><span class=\"o\">.</span><span class=\"n\">add_block</span><span class=\"p\">(</span><span class=\"n\">new_block</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">blockchain</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">(</span><span class=\"n\">wallet</span><span class=\"o\">.</span><span class=\"n\">public_key</span><span class=\"p\">)</span>\n<span class=\"mi\">10</span>\n</pre>\n</div>\n<div id=\"sending-a-transaction\">\n<h3>Sending a transaction</h3>\n<p>You can now spent your new coins.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">destination</span> <span class=\"o\">=</span> <span class=\"s1\">'public_key_of_the_receiver'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">wallet</span><span class=\"o\">.</span><span class=\"n\">create_transaction</span><span class=\"p\">(</span><span class=\"n\">destination</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">blockchain</span><span class=\"o\">.</span><span class=\"n\">add_transaction</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>Your transaction will be added to the pending transactions queue. It will only be confirmed after being\nincluded in a mined block.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">blockchain</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">(</span><span class=\"n\">wallet</span><span class=\"o\">.</span><span class=\"n\">public_key</span><span class=\"p\">)</span>\n<span class=\"mi\">10</span>\n</pre>\n<p>You can check your balance including the pending transactions</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">blockchain</span><span class=\"o\">.</span><span class=\"n\">get_balance_pending</span><span class=\"p\">(</span><span class=\"n\">wallet</span><span class=\"o\">.</span><span class=\"n\">public_key</span><span class=\"p\">)</span>\n<span class=\"mi\">8</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3959483, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "6f42d0adefadead48a1de6f91a6c093a", "sha256": "18945f4df1b4ddacc58f92bec1eb013b9cad8a81c4854ff762d2c840da79126a"}, "downloads": -1, "filename": "uclcoin-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6f42d0adefadead48a1de6f91a6c093a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10236, "upload_time": "2018-05-17T15:58:32", "upload_time_iso_8601": "2018-05-17T15:58:32.262353Z", "url": "https://files.pythonhosted.org/packages/30/8a/e5d04e0e6169f9ebd2f194d813290f8791dd14f2c8a50d7bb1857502e621/uclcoin-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bbf5f52c22110bd31b688811820d75c2", "sha256": "062716efba7115ad2457396912fca97bcc9fec58313f69cecfd636459eb2b6f0"}, "downloads": -1, "filename": "uclcoin-0.2.2.tar.gz", "has_sig": false, "md5_digest": "bbf5f52c22110bd31b688811820d75c2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8310, "upload_time": "2018-05-17T15:58:33", "upload_time_iso_8601": "2018-05-17T15:58:33.588144Z", "url": "https://files.pythonhosted.org/packages/b8/25/873333a387a2b5029b3089d8fd9079f485997df148853250ed275da30049/uclcoin-0.2.2.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "d2a90c50bfea0cabbcbb7721c1c1956c", "sha256": "718aa1d14bbdea42fce7e668b0548d65e436bbde432526df91cbe90dc9d123c6"}, "downloads": -1, "filename": "uclcoin-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d2a90c50bfea0cabbcbb7721c1c1956c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8180, "upload_time": "2018-06-13T17:32:12", "upload_time_iso_8601": "2018-06-13T17:32:12.760423Z", "url": "https://files.pythonhosted.org/packages/b9/d2/41896f28f01072044d229a39392f4c0dc4207d2d525b8a591c9afdbb2932/uclcoin-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "887b6ead49f9e602d48de858d8ece0eb", "sha256": "87ca5a2c8f5139d2b60f687e16e56d1a644c68a7f75cd7ab1c043855bcb5e315"}, "downloads": -1, "filename": "uclcoin-0.3.2.tar.gz", "has_sig": false, "md5_digest": "887b6ead49f9e602d48de858d8ece0eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7566, "upload_time": "2018-06-13T17:32:38", "upload_time_iso_8601": "2018-06-13T17:32:38.328323Z", "url": "https://files.pythonhosted.org/packages/08/1d/3d2ed3186cd59632c76695ecc31595edada3e7d8ddb3d544b54f50c9d96d/uclcoin-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d2a90c50bfea0cabbcbb7721c1c1956c", "sha256": "718aa1d14bbdea42fce7e668b0548d65e436bbde432526df91cbe90dc9d123c6"}, "downloads": -1, "filename": "uclcoin-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d2a90c50bfea0cabbcbb7721c1c1956c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8180, "upload_time": "2018-06-13T17:32:12", "upload_time_iso_8601": "2018-06-13T17:32:12.760423Z", "url": "https://files.pythonhosted.org/packages/b9/d2/41896f28f01072044d229a39392f4c0dc4207d2d525b8a591c9afdbb2932/uclcoin-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "887b6ead49f9e602d48de858d8ece0eb", "sha256": "87ca5a2c8f5139d2b60f687e16e56d1a644c68a7f75cd7ab1c043855bcb5e315"}, "downloads": -1, "filename": "uclcoin-0.3.2.tar.gz", "has_sig": false, "md5_digest": "887b6ead49f9e602d48de858d8ece0eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7566, "upload_time": "2018-06-13T17:32:38", "upload_time_iso_8601": "2018-06-13T17:32:38.328323Z", "url": "https://files.pythonhosted.org/packages/08/1d/3d2ed3186cd59632c76695ecc31595edada3e7d8ddb3d544b54f50c9d96d/uclcoin-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:42:10 2020"}