{"info": {"author": "Fabian Herzog", "author_email": "fabian.herzog.dev@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Sparselandtools\n\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/sparselandtools.svg?style=flat-square)](https://pypi.org/project/sparselandtools/1.0.0.dev2/)\n[![PyPI](https://img.shields.io/pypi/v/sparselandtools.svg?style=flat-square)](https://pypi.org/project/sparselandtools/)\n[![PyPI - Implementation](https://img.shields.io/pypi/implementation/sparselandtools.svg?style=flat-square)](https://pypi.org/project/sparselandtools/#description)\n[![Build Status](https://travis-ci.com/fubel/sparselandtools.svg?token=e6hQaTqfZFZnG6RmEYXr&branch=master&style=flat-square)](https://travis-ci.com/fubel/sparselandtools)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/sparselandtools)\n![Requires.io](https://img.shields.io/requires/github/fubel/sparselandtools)\n\nSparselandtools is a Python 3 package that provides implementations for\nsparse representations and dictionary learning. In particular, it\nincludes implementations for\n\n**For Sparse Representations:**\n* Matching Pursuit\n* Orthogonal Matching Pursuit\n* Thresholding Pursuit\n* Basis Pursuit\n\n**For Dictionaries in General:**\n* Mutual Coherence\n* DCT Dictionary\n* Haar Dictionary\n* Overcomplete DCT Dictionary\n* Visualization Tools for Dictionaries\n\n**For Dictionary Learning:**\n* K-SVD Algorithm\n* Approximate K-SVD Algorithm\n\n**For Application:**\n* Approximate K-SVD Image Denoiser\n\n**Note:** I did this project mainly to generate plots for my Master's thesis.\nSome of the implementations are more *educational* than *efficient*. If you want\nto learn more about sparse representations and dictionary learning using Python,\nor use dictionary learning algorithms in small dimensions this ,package is for you.\nIf you want to use these functions for industrial applications, you should have a\nlook at more efficient C++-based implementations:\n\n* [The Efficient K-SVD Algorithm by Rubinstein](http://www.cs.technion.ac.il/~ronrubin/software.html)\n* [The Efficient K-SVD Denoiser by Lebrun](https://github.com/npd/ksvd)\n\n\n## Getting Started\n\nSparselandtools is available as a PyPI package. You can install it using\n\n```\npip install sparselandtools\n```\n\n![DCT and Haar Dictionary](https://snag.gy/h7Il2j.jpg)\n\nThe following code creates a redundant (=overcomplete) DCT-II dictionary\nand plots it. It also prints out the dictionaries mutual coherence.\n\n```python\nfrom sparselandtools.dictionaries import DCTDictionary\nimport matplotlib.pyplot as plt\n\n# create dictionary\ndct_dictionary = DCTDictionary(8, 11)\n\n# plot dictionary\nplt.imshow(dct_dictionary.to_img())\nplt.show()\n\n# print mutual coherence\nprint(dct_dictionary.mutual_coherence())\n```\n\nMore examples can be found in the corresponding Jupyter Notebook.\n\n\n## Contribute\n\nThere are a lot of algorithms based on sparse representations and\ndictionary learning that are not (yet) included in this package. These\ninclude - among others:\n\n* The Double Sparsity Method\n* Trainlets\n* Denoiser with Method Noise Post Processing\n* Boosted Denoiser with Patch Disagreement\n\nand much more. It would also be interesting to see more applications in this package.\nCurrently, this package only provides the K-SVD image denoiser [based on the work of\nAharon and Elad](https://www.egr.msu.edu/~aviyente/elad06.pdf). K-SVD can also\nbe used in many other applications, such as face recognition. Furthermore,\nit would be nice to have GPU-versions of all the algorithms available as well.\n\nIf you want to see a specific algorithm in this package,\nplease consider opening a feature request here on Github. If you have written\nan algorithm that you think would fit into this package, please fork this\nrepository, add your algorithm and file a pull request. If something\ndoesn't work as expected, please open an issue.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fubel/sparselandtools", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sparselandtools", "package_url": "https://pypi.org/project/sparselandtools/", "platform": "", "project_url": "https://pypi.org/project/sparselandtools/", "project_urls": {"Homepage": "https://github.com/fubel/sparselandtools"}, "release_url": "https://pypi.org/project/sparselandtools/1.0.2/", "requires_dist": ["alabaster (==0.7.12)", "atomicwrites (==1.3.0)", "attrs (==19.3.0)", "Babel (==2.8.0)", "bleach (==3.1.1)", "brewer2mpl (==1.4.1)", "certifi (==2019.11.28)", "chardet (==3.0.4)", "cloudpickle (==1.3.0)", "cycler (==0.10.0)", "Cython (==0.29.15)", "dask (==2.11.0)", "decorator (==4.4.1)", "docutils (==0.16)", "idna (==2.9)", "imageio (==2.8.0)", "imagesize (==1.2.0)", "importlib-metadata (==1.5.0)", "Jinja2 (==2.11.1)", "joblib (==0.14.1)", "keyring (==21.1.0)", "kiwisolver (==1.1.0)", "llvmlite (==0.31.0)", "MarkupSafe (==1.1.1)", "matplotlib (==3.1.3)", "more-itertools (==8.2.0)", "networkx (==2.4)", "numba (==0.48.0)", "numpy (==1.18.1)", "packaging (==20.1)", "pandas (==1.0.1)", "Pillow (==7.0.0)", "pkginfo (==1.5.0.1)", "pluggy (==0.13.1)", "prettyplotlib (==0.1.7)", "py (==1.8.1)", "Pygments (==2.5.2)", "pyparsing (==2.4.6)", "pytest (==5.3.5)", "python-dateutil (==2.8.1)", "pytz (==2019.3)", "PyWavelets (==1.1.1)", "readme-renderer (==24.0)", "requests (==2.23.0)", "requests-toolbelt (==0.9.1)", "scikit-image (==0.16.2)", "scikit-learn (==0.22.1)", "scipy (==1.4.1)", "seaborn (==0.10.0)", "six (==1.14.0)", "snowballstemmer (==2.0.0)", "Sphinx (==2.4.2)", "sphinxcontrib-applehelp (==1.0.1)", "sphinxcontrib-devhelp (==1.0.1)", "sphinxcontrib-htmlhelp (==1.0.3)", "sphinxcontrib-jsmath (==1.0.1)", "sphinxcontrib-qthelp (==1.0.2)", "sphinxcontrib-serializinghtml (==1.1.3)", "sphinxcontrib-websupport (==1.2.0)", "toolz (==0.10.0)", "tqdm (==4.43.0)", "twine (==3.1.1)", "urllib3 (==1.25.8)", "wcwidth (==0.1.8)", "webencodings (==0.5.1)", "zipp (==3.0.0)"], "requires_python": ">=3.5", "summary": "A package for sparse representations and dictionary learning", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Sparselandtools</h1>\n<p><a href=\"https://pypi.org/project/sparselandtools/1.0.0.dev2/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1aa6c76ef8a92ce897c7410bbe018e1e0a57080a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7370617273656c616e64746f6f6c732e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.org/project/sparselandtools/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd66c80c5f6a12f6b3ee4f49eac6e0cccb236e12/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7370617273656c616e64746f6f6c732e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.org/project/sparselandtools/#description\" rel=\"nofollow\"><img alt=\"PyPI - Implementation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3789cb8645481ad0fc8e79f3c249cf9ac210cc46/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f7370617273656c616e64746f6f6c732e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://travis-ci.com/fubel/sparselandtools\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b3b581ca8172351ff61d4bd557eb7c2ffe7cd81/68747470733a2f2f7472617669732d63692e636f6d2f667562656c2f7370617273656c616e64746f6f6c732e7376673f746f6b656e3d65366851615471665a465a6e4736526d45595872266272616e63683d6d6173746572267374796c653d666c61742d737175617265\"></a>\n<img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2dfb5c743b79901171f44f8b64b09734128b56cc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7370617273656c616e64746f6f6c73\">\n<img alt=\"Requires.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/46f50a8486a4cbe3cc2f5ee13b94863db7e9ba04/68747470733a2f2f696d672e736869656c64732e696f2f72657175697265732f6769746875622f667562656c2f7370617273656c616e64746f6f6c73\"></p>\n<p>Sparselandtools is a Python 3 package that provides implementations for\nsparse representations and dictionary learning. In particular, it\nincludes implementations for</p>\n<p><strong>For Sparse Representations:</strong></p>\n<ul>\n<li>Matching Pursuit</li>\n<li>Orthogonal Matching Pursuit</li>\n<li>Thresholding Pursuit</li>\n<li>Basis Pursuit</li>\n</ul>\n<p><strong>For Dictionaries in General:</strong></p>\n<ul>\n<li>Mutual Coherence</li>\n<li>DCT Dictionary</li>\n<li>Haar Dictionary</li>\n<li>Overcomplete DCT Dictionary</li>\n<li>Visualization Tools for Dictionaries</li>\n</ul>\n<p><strong>For Dictionary Learning:</strong></p>\n<ul>\n<li>K-SVD Algorithm</li>\n<li>Approximate K-SVD Algorithm</li>\n</ul>\n<p><strong>For Application:</strong></p>\n<ul>\n<li>Approximate K-SVD Image Denoiser</li>\n</ul>\n<p><strong>Note:</strong> I did this project mainly to generate plots for my Master's thesis.\nSome of the implementations are more <em>educational</em> than <em>efficient</em>. If you want\nto learn more about sparse representations and dictionary learning using Python,\nor use dictionary learning algorithms in small dimensions this ,package is for you.\nIf you want to use these functions for industrial applications, you should have a\nlook at more efficient C++-based implementations:</p>\n<ul>\n<li><a href=\"http://www.cs.technion.ac.il/%7Eronrubin/software.html\" rel=\"nofollow\">The Efficient K-SVD Algorithm by Rubinstein</a></li>\n<li><a href=\"https://github.com/npd/ksvd\" rel=\"nofollow\">The Efficient K-SVD Denoiser by Lebrun</a></li>\n</ul>\n<h2>Getting Started</h2>\n<p>Sparselandtools is available as a PyPI package. You can install it using</p>\n<pre><code>pip install sparselandtools\n</code></pre>\n<p><img alt=\"DCT and Haar Dictionary\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49b0e49dd175bae7348045daf34fcf92117a6616/68747470733a2f2f736e61672e67792f6837496c326a2e6a7067\"></p>\n<p>The following code creates a redundant (=overcomplete) DCT-II dictionary\nand plots it. It also prints out the dictionaries mutual coherence.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sparselandtools.dictionaries</span> <span class=\"kn\">import</span> <span class=\"n\">DCTDictionary</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"c1\"># create dictionary</span>\n<span class=\"n\">dct_dictionary</span> <span class=\"o\">=</span> <span class=\"n\">DCTDictionary</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># plot dictionary</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">dct_dictionary</span><span class=\"o\">.</span><span class=\"n\">to_img</span><span class=\"p\">())</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># print mutual coherence</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dct_dictionary</span><span class=\"o\">.</span><span class=\"n\">mutual_coherence</span><span class=\"p\">())</span>\n</pre>\n<p>More examples can be found in the corresponding Jupyter Notebook.</p>\n<h2>Contribute</h2>\n<p>There are a lot of algorithms based on sparse representations and\ndictionary learning that are not (yet) included in this package. These\ninclude - among others:</p>\n<ul>\n<li>The Double Sparsity Method</li>\n<li>Trainlets</li>\n<li>Denoiser with Method Noise Post Processing</li>\n<li>Boosted Denoiser with Patch Disagreement</li>\n</ul>\n<p>and much more. It would also be interesting to see more applications in this package.\nCurrently, this package only provides the K-SVD image denoiser <a href=\"https://www.egr.msu.edu/%7Eaviyente/elad06.pdf\" rel=\"nofollow\">based on the work of\nAharon and Elad</a>. K-SVD can also\nbe used in many other applications, such as face recognition. Furthermore,\nit would be nice to have GPU-versions of all the algorithms available as well.</p>\n<p>If you want to see a specific algorithm in this package,\nplease consider opening a feature request here on Github. If you have written\nan algorithm that you think would fit into this package, please fork this\nrepository, add your algorithm and file a pull request. If something\ndoesn't work as expected, please open an issue.</p>\n\n          </div>"}, "last_serial": 6680494, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "d7fc1af5432f180eaa363a6ffd669754", "sha256": "aaaef0179115183aa3fd00521fc2f465706adf11eaecce5769ea73aa61b6d31a"}, "downloads": -1, "filename": "sparselandtools-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d7fc1af5432f180eaa363a6ffd669754", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 23504, "upload_time": "2018-11-30T21:21:37", "upload_time_iso_8601": "2018-11-30T21:21:37.380401Z", "url": "https://files.pythonhosted.org/packages/f7/5a/b1f2441a765193e406c5680b45278fb472c8f47500745dbc13c7c5a87719/sparselandtools-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "afa97298dc8de01b91a6988bca14329d", "sha256": "10e4fd0c367e35b50099cb93975f54644bf72e998ab03e710373f75ba3827c5a"}, "downloads": -1, "filename": "sparselandtools-1.0.0.tar.gz", "has_sig": false, "md5_digest": "afa97298dc8de01b91a6988bca14329d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 16611, "upload_time": "2018-11-30T21:21:39", "upload_time_iso_8601": "2018-11-30T21:21:39.644752Z", "url": "https://files.pythonhosted.org/packages/aa/5b/e620907406aefaaaf26cfd1a9c58a15f140feed3bbd78b67cb3855df2b72/sparselandtools-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f4af56813a2b2e9b918daaa69b063865", "sha256": "8b8dadaeaf1864ace0a1a6a459cdc4d1566681bf6b4bfc13ee43f228606d1071"}, "downloads": -1, "filename": "sparselandtools-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f4af56813a2b2e9b918daaa69b063865", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11312, "upload_time": "2019-06-16T19:21:57", "upload_time_iso_8601": "2019-06-16T19:21:57.625092Z", "url": "https://files.pythonhosted.org/packages/19/5b/1a53f82f2ee838efa6f6c105ccc2a48086f94b5e38ef3907346d75fb4323/sparselandtools-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8483eb877623791df3fd7c6ebe59d836", "sha256": "e256253ccf7cff2f9499425341a19232771b50c389bb57315c1a4d878278904a"}, "downloads": -1, "filename": "sparselandtools-1.0.1.tar.gz", "has_sig": false, "md5_digest": "8483eb877623791df3fd7c6ebe59d836", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9959, "upload_time": "2019-06-16T19:21:59", "upload_time_iso_8601": "2019-06-16T19:21:59.376126Z", "url": "https://files.pythonhosted.org/packages/0c/e7/8dcb874fe6fdb7aca1e805155173fc8a7f48ca0ccd7dcfcb6de4f8043d89/sparselandtools-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "9e1845ac03d6a4e861ee2a1f616d4fac", "sha256": "5ac84df698d0337d4ddc8962f066455f9d8fd5e0ff281185cbec9a0699bc8071"}, "downloads": -1, "filename": "sparselandtools-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9e1845ac03d6a4e861ee2a1f616d4fac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11742, "upload_time": "2020-02-22T13:42:49", "upload_time_iso_8601": "2020-02-22T13:42:49.973496Z", "url": "https://files.pythonhosted.org/packages/b3/46/90b7bfafc257270b385a69d2af7cb054a9536c3e3339b2e85df123bdbf19/sparselandtools-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77794274b85689cd461672fc6d517675", "sha256": "b64a8a3c6c3ec42173797ba2ae42c1f586c65ecdaf268bc3e62e427f62142218"}, "downloads": -1, "filename": "sparselandtools-1.0.2.tar.gz", "has_sig": false, "md5_digest": "77794274b85689cd461672fc6d517675", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10254, "upload_time": "2020-02-22T13:42:51", "upload_time_iso_8601": "2020-02-22T13:42:51.582940Z", "url": "https://files.pythonhosted.org/packages/1c/ba/09c102ecaaa9469eea39f2ce303db3cba9669a11bcfcaf27e8829ab91279/sparselandtools-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9e1845ac03d6a4e861ee2a1f616d4fac", "sha256": "5ac84df698d0337d4ddc8962f066455f9d8fd5e0ff281185cbec9a0699bc8071"}, "downloads": -1, "filename": "sparselandtools-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9e1845ac03d6a4e861ee2a1f616d4fac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11742, "upload_time": "2020-02-22T13:42:49", "upload_time_iso_8601": "2020-02-22T13:42:49.973496Z", "url": "https://files.pythonhosted.org/packages/b3/46/90b7bfafc257270b385a69d2af7cb054a9536c3e3339b2e85df123bdbf19/sparselandtools-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77794274b85689cd461672fc6d517675", "sha256": "b64a8a3c6c3ec42173797ba2ae42c1f586c65ecdaf268bc3e62e427f62142218"}, "downloads": -1, "filename": "sparselandtools-1.0.2.tar.gz", "has_sig": false, "md5_digest": "77794274b85689cd461672fc6d517675", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10254, "upload_time": "2020-02-22T13:42:51", "upload_time_iso_8601": "2020-02-22T13:42:51.582940Z", "url": "https://files.pythonhosted.org/packages/1c/ba/09c102ecaaa9469eea39f2ce303db3cba9669a11bcfcaf27e8829ab91279/sparselandtools-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:50 2020"}