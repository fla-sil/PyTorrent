{"info": {"author": "Vasco Pinho", "author_email": "vascogpinho@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers"], "description": "# django-wfs\nA WFS (web feature service) implementation as a Django application.\n\nThis implementation of WFS (currently) **very loosely** follows the [1.0.0 spec](http://www.opengeospatial.org/standards/wfs). It is currently **only tested with a PostGIS backend**.\n\nWhat you can expect:\n- GetCapabilities\n- DescribeFeatureType\n- GetFeature\n- Django Queryset filtering\n\nWhat is not here yet:\n- Transactional requests\n- Native WFS filtering (bbox and friends)\n\n# Requirements\n- Django\n- Django sites framework\n- PostgreSQL + PostGIS\n\n# Example app\nAn example application can be found in the \"example\" folder of this repository.\n\n# Installation\n\n    pip install django-wfs\n\nAdd these to your `INSTALLED_APPS` setting:\n\n    INSTALLED_APPS = (\n        ...\n        'django.contrib.gis',\n        'django.contrib.sites',\n        'wfs',\n        ...\n    )\n\nAnd define a `SITE_ID` if you haven't yet:\n\n    SITE_ID = 1\n\nIn your `urls.py` add (the actual regex can be anything, it doesn't have to be `^wfs/`):\n\n    url(r'^wfs/', include('wfs.urls')),\n\n\nMake sure you have a working PostGIS GeoDjango installation. Generally, if your database engine is `'django.contrib.gis.db.backends.postgis'`, stuff will probably not break too much. \n\n# WFS Service and Feature Types\n\nIn the admin you'll now have a WFS section with Services and Feature Types. These are the concepts present in the WFS spec but generally you can have multiple feature types in each service.\n\nA Service is an endpoint like `/wfs/1` (service with ID 1). It has the parameters defined in the spec:\n\n- Name\n- Title\n- Keywords\n- Abstract\n- Fees\n- Access constraints\n\nAfter you create a Service in the Django Admin you can then associate a Feature Type to the created service. A Feature Type has the following parameters:\n- Service (foreign key)\n- Name (**no spaces!!**)\n- Title\n- Keywords\n- Abstract\n- SRS: Spatial Reference System used by the Feature Type. Defaults to WGS 84 (EPSG:4326)\n- Model (any model present in your Django project which contains a geo field)\n- Fields (after selecting a Model and pressing the \"Save and continue editing\" button and you'll see its fields. The ones you select will be exposed through the service)\n- Query (JSON representation of Django queryset filters. Example follows)\n\n### Query\n\nThe JSON representation of Django queryset filters allow you cut down results presented by a Feature Type. Some examples:\n\nOnly display entries from a model if they belong to the \"vascop\" user:\n\n    {\"user__username\":\"vascop\"}\n\nOnly display entries from a model if they belong to the \"vascop\" user and are published:\n\n    {\"user__username\":\"vascop\", \"published\": true}\n\n\n# Possible problems\n\nIf you have `APPEND_SLASH = True` (which is the Django default) and you're adding your WFS service to QGIS be sure to insert the connection with an appended slash, otherwise Django replies with a 301 code and QGIS won't display your layer.\n\nBe sure to use Feature Type names which have no spaces or special characters. The title can have whatever you want.\n\nAny other problem, submit an issue and I'll try to take a look at it.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/vascop/django-wfs/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vascop/django-wfs", "keywords": "wfs,geo,django", "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "django-wfs", "package_url": "https://pypi.org/project/django-wfs/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-wfs/", "project_urls": {"Download": "https://github.com/vascop/django-wfs/tarball/master", "Homepage": "https://github.com/vascop/django-wfs"}, "release_url": "https://pypi.org/project/django-wfs/0.0.10/", "requires_dist": null, "requires_python": null, "summary": "A WFS (web feature service) implementation as a Django application.", "version": "0.0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            # django-wfs<br>A WFS (web feature service) implementation as a Django application.<br><br>This implementation of WFS (currently) **very loosely** follows the [1.0.0 spec](http://www.opengeospatial.org/standards/wfs). It is currently **only tested with a PostGIS backend**.<br><br>What you can expect:<br>- GetCapabilities<br>- DescribeFeatureType<br>- GetFeature<br>- Django Queryset filtering<br><br>What is not here yet:<br>- Transactional requests<br>- Native WFS filtering (bbox and friends)<br><br># Requirements<br>- Django<br>- Django sites framework<br>- PostgreSQL + PostGIS<br><br># Example app<br>An example application can be found in the \"example\" folder of this repository.<br><br># Installation<br><br>    pip install django-wfs<br><br>Add these to your `INSTALLED_APPS` setting:<br><br>    INSTALLED_APPS = (<br>        ...<br>        'django.contrib.gis',<br>        'django.contrib.sites',<br>        'wfs',<br>        ...<br>    )<br><br>And define a `SITE_ID` if you haven't yet:<br><br>    SITE_ID = 1<br><br>In your `urls.py` add (the actual regex can be anything, it doesn't have to be `^wfs/`):<br><br>    url(r'^wfs/', include('wfs.urls')),<br><br><br>Make sure you have a working PostGIS GeoDjango installation. Generally, if your database engine is `'django.contrib.gis.db.backends.postgis'`, stuff will probably not break too much. <br><br># WFS Service and Feature Types<br><br>In the admin you'll now have a WFS section with Services and Feature Types. These are the concepts present in the WFS spec but generally you can have multiple feature types in each service.<br><br>A Service is an endpoint like `/wfs/1` (service with ID 1). It has the parameters defined in the spec:<br><br>- Name<br>- Title<br>- Keywords<br>- Abstract<br>- Fees<br>- Access constraints<br><br>After you create a Service in the Django Admin you can then associate a Feature Type to the created service. A Feature Type has the following parameters:<br>- Service (foreign key)<br>- Name (**no spaces!!**)<br>- Title<br>- Keywords<br>- Abstract<br>- SRS: Spatial Reference System used by the Feature Type. Defaults to WGS 84 (EPSG:4326)<br>- Model (any model present in your Django project which contains a geo field)<br>- Fields (after selecting a Model and pressing the \"Save and continue editing\" button and you'll see its fields. The ones you select will be exposed through the service)<br>- Query (JSON representation of Django queryset filters. Example follows)<br><br>### Query<br><br>The JSON representation of Django queryset filters allow you cut down results presented by a Feature Type. Some examples:<br><br>Only display entries from a model if they belong to the \"vascop\" user:<br><br>    {\"user__username\":\"vascop\"}<br><br>Only display entries from a model if they belong to the \"vascop\" user and are published:<br><br>    {\"user__username\":\"vascop\", \"published\": true}<br><br><br># Possible problems<br><br>If you have `APPEND_SLASH = True` (which is the Django default) and you're adding your WFS service to QGIS be sure to insert the connection with an appended slash, otherwise Django replies with a 301 code and QGIS won't display your layer.<br><br>Be sure to use Feature Type names which have no spaces or special characters. The title can have whatever you want.<br><br>Any other problem, submit an issue and I'll try to take a look at it.\n          </div>"}, "last_serial": 1602270, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d1c8abeed0d78efef48d2750acde7852", "sha256": "966a748e12d0120b5596d5e10aafb9a58e8dad74aa5e233c40dc821a307b27c2"}, "downloads": -1, "filename": "django-wfs-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d1c8abeed0d78efef48d2750acde7852", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10048, "upload_time": "2015-06-19T21:58:36", "upload_time_iso_8601": "2015-06-19T21:58:36.632384Z", "url": "https://files.pythonhosted.org/packages/af/03/082bb2be9b74bfbe89399ecd0262309849acee16684507e8aa09b5e27739/django-wfs-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "406da479447a3ccdfedac2e3693264c5", "sha256": "085d5a3661c61859266099fe4832737d2d3025d4808518265132946513a3af65"}, "downloads": -1, "filename": "django-wfs-0.0.10.tar.gz", "has_sig": false, "md5_digest": "406da479447a3ccdfedac2e3693264c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11648, "upload_time": "2015-06-22T20:13:18", "upload_time_iso_8601": "2015-06-22T20:13:18.612829Z", "url": "https://files.pythonhosted.org/packages/7c/8e/b392d1c7d079c8e96e235ee3acb38e49c33608311f4b65a8bd7f4ad07713/django-wfs-0.0.10.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "80f5d234ede01623e0b21f4f74133c35", "sha256": "ef487ba4c70fdf159e87b3b755b75669b25fdded50baee408afb302e5dccbbed"}, "downloads": -1, "filename": "django-wfs-0.0.2.tar.gz", "has_sig": false, "md5_digest": "80f5d234ede01623e0b21f4f74133c35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10049, "upload_time": "2015-06-19T22:03:11", "upload_time_iso_8601": "2015-06-19T22:03:11.960710Z", "url": "https://files.pythonhosted.org/packages/49/af/cd3e4291f73d97857cb33b2d5fddb8643c7261dbc70215e98df321de75ae/django-wfs-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "aef0bdd621f9fe97b55c8edd3573ef6f", "sha256": "60d45df9ad9d897148beab75ec5fd29e7ec514bf3bcceaa7990debc2ac4af6d2"}, "downloads": -1, "filename": "django-wfs-0.0.3.tar.gz", "has_sig": false, "md5_digest": "aef0bdd621f9fe97b55c8edd3573ef6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10044, "upload_time": "2015-06-19T22:05:09", "upload_time_iso_8601": "2015-06-19T22:05:09.479994Z", "url": "https://files.pythonhosted.org/packages/7d/34/897de5fa1ff23700441fd50a7aa424beedcaa01ef0021aac72c01817974e/django-wfs-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "3a31276bab4d5c3153f5fc2c20c80f53", "sha256": "f5a3e913547c5be42e46ba0f19dcbbc9f01927e8f273c1c22b1a00dc592399f9"}, "downloads": -1, "filename": "django-wfs-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3a31276bab4d5c3153f5fc2c20c80f53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8671, "upload_time": "2015-06-19T22:10:10", "upload_time_iso_8601": "2015-06-19T22:10:10.321202Z", "url": "https://files.pythonhosted.org/packages/0f/e5/cb04672c7ff7bfc9ed4e41939519c4f76d603d486c1ecf6b630d9d8d192b/django-wfs-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "1e4cb826d77e11270c0865015f27a60b", "sha256": "f1a3a37ac22d21e6648b2d99e291f9c267dcb159e72216868c22ef754c092f68"}, "downloads": -1, "filename": "django-wfs-0.0.5.tar.gz", "has_sig": false, "md5_digest": "1e4cb826d77e11270c0865015f27a60b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10027, "upload_time": "2015-06-19T22:11:30", "upload_time_iso_8601": "2015-06-19T22:11:30.918880Z", "url": "https://files.pythonhosted.org/packages/9f/2c/985afcf802cb18c5fc6907009726ac83275cd5618d8f2b016126d5cb7cfb/django-wfs-0.0.5.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "66f813927445c34f409ff60f77085527", "sha256": "f3c15f323041f49048a212b7477c473fe30ebe127815733a1d3d40f6762ad3ba"}, "downloads": -1, "filename": "django-wfs-0.0.7.tar.gz", "has_sig": false, "md5_digest": "66f813927445c34f409ff60f77085527", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10031, "upload_time": "2015-06-19T22:18:37", "upload_time_iso_8601": "2015-06-19T22:18:37.802454Z", "url": "https://files.pythonhosted.org/packages/7c/bf/3e5101a1d1a20663471a375f9dd4b2e7631da31dffde3094666bae31f41c/django-wfs-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "07753c44ae9dcbc49fe40420e8cbd36f", "sha256": "c002d3ce1da23a49d133f9d313db3fda037289ac00fffcff05ef5e35b665e271"}, "downloads": -1, "filename": "django-wfs-0.0.8.tar.gz", "has_sig": false, "md5_digest": "07753c44ae9dcbc49fe40420e8cbd36f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10065, "upload_time": "2015-06-19T22:33:04", "upload_time_iso_8601": "2015-06-19T22:33:04.683735Z", "url": "https://files.pythonhosted.org/packages/83/20/de536f7edaea216f0d1241f08515a0a5e6abc491dd6cff43714964fcb690/django-wfs-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "06e26e151ce55a69b8b441be30f81cd0", "sha256": "06f36c97f269a534e7f22877f73fcf918d08508212b513952a496aa56f5c3323"}, "downloads": -1, "filename": "django-wfs-0.0.9.tar.gz", "has_sig": false, "md5_digest": "06e26e151ce55a69b8b441be30f81cd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11650, "upload_time": "2015-06-20T10:43:27", "upload_time_iso_8601": "2015-06-20T10:43:27.595369Z", "url": "https://files.pythonhosted.org/packages/f6/56/113c3c1f76d13df7ad52be0b0ad7747519778cd3b306e8470de37d9ffbb4/django-wfs-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "406da479447a3ccdfedac2e3693264c5", "sha256": "085d5a3661c61859266099fe4832737d2d3025d4808518265132946513a3af65"}, "downloads": -1, "filename": "django-wfs-0.0.10.tar.gz", "has_sig": false, "md5_digest": "406da479447a3ccdfedac2e3693264c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11648, "upload_time": "2015-06-22T20:13:18", "upload_time_iso_8601": "2015-06-22T20:13:18.612829Z", "url": "https://files.pythonhosted.org/packages/7c/8e/b392d1c7d079c8e96e235ee3acb38e49c33608311f4b65a8bd7f4ad07713/django-wfs-0.0.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:52 2020"}