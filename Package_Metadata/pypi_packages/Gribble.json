{"info": {"author": "Jamie Cressey", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: System :: Logging"], "description": "======\nGribble\n======\n\n.. image:: https://travis-ci.org/JamieCressey/python-gribble.svg?branch=master\n    :target: https://travis-ci.org/JamieCressey/python-gribble\n\npython daemon that munches on logs and sends their contents to logstash\n\n\nNotice\n======\n\nGribble is a fork of python-beaver version 34.1.0 (https://github.com/josegonzalez/python-beaver)  with our own fixes merged in.\n\n\nRequirements\n============\n\n* Python 2.6+\n* Optional zeromq support: install libzmq (``brew install zmq`` or ``apt-get install libzmq-dev``) and pyzmq (``pip install pyzmq==2.1.11``)\n\nInstallation\n============\n\n\nFrom PyPI::\n\n    pip install gribble==34.1.0\n\nDocumentation\n=============\n\n\nYou can also build the docs locally::\n\n    # get sphinx installed\n    pip install sphinx\n\n    # retrieve the repository\n    git clone git://github.com/JamieCressey/gribble.git\n\n    # build the html output\n    cd gribble/docs\n    make html\n\nHTML docs will be available in `gribble/docs/_build/html`.\n\nCredits\n=======\n\nFork of the python-beaver log shipper created by Jose Diaz-Gonzalez::\n\n\thttps://github.com/josegonzalez/python-beaver\n\n\nBased on work from Giampaolo and Lusis::\n\n    Real time log files watcher supporting log rotation.\n\n    Original Author: Giampaolo Rodola' <g.rodola [AT] gmail [DOT] com>\n    http://code.activestate.com/recipes/577968-log-watcher-tail-f-log/\n\n    License: MIT\n\n    Other hacks (ZMQ, JSON, optparse, ...): lusis\n\n\nChangelog\n=========\n\n34.1.0 (2015-08-10)\n-------------------\n\n- Adding AWS SNS as a transport option. [Jamie Cressey]\n\n34.0.1 (2015-08-07)\n-------------------\n\n- Revert some breakages caused by\n  d159ec579c01b8fab532b3814c64b0ff8b2063ff. [Jose Diaz-Gonzalez]\n\n  Closes #331\n\n- Set default for command. [Jose Diaz-Gonzalez]\n\n- #323 - fix tests to run with pika SelectConnection. [Tom Kregenbild]\n\n- #323 - fix RabbitMQ transport _on_open_connection_error function to\n  print connection errors. [Tom Kregenbild]\n\n- #323 1. Add clear debug prints with queue size (one print every 1000\n  items in order not to hurt performance) 2. If main queue is empty keep\n  running and do nothing 3. In case of a timeout from main queue restart\n  queue. [Tom Kregenbild]\n\n- #323 - Change RabbitMQ pika to use Asynchronous SelectConnection\n  instead of BlockingConnection for better performance. [Tom Kregenbild]\n\n- #323 - add the ability to increase the number of Queue consumers by\n  creating additional processes while running with --experimental flag.\n  [Tom Kregenbild]\n\n- #323 - add the ability to increase the number of Queue consumers by\n  creating additional processes. [Tom Kregenbild]\n\n- #323 - print current queue size and number of total number transports\n  in debug mode in order to find problem in transport rate. [Tom\n  Kregenbild]\n\n34.0.0 (2015-07-24)\n-------------------\n\n- Added ssl-tcp key file support. [babbleshack]\n\n- Rename configuration dir and debian bin to python-beaver. [David\n  Moravek]\n\n- Rename debian package back to python-beaver. [David Moravek]\n\n- Debian packaging code review; thx @mnicky. [David Moravek]\n\n- Improves debian packaging. [David Moravek]\n\n- Fix tests when ZMQ is not installed. [David Moravek]\n\n- Fix tests for python 2.7 (add funcsigs test dependency) [David\n  Moravek]\n\n- Move badge to below header. [Jose Diaz-Gonzalez]\n\n- Add constants for data types, validate in init, use callback map.\n  [Hector Castro]\n\n- Move data type method conditional outside of loop. [Hector Castro]\n\n- Add channel support to Redis transport. [Hector Castro]\n\n  This changeset adds support for publishing log entries to a Redis\n  channel, which is also supported by Logstash's Redis input.\n\n  Beaver configuration files can now supply a `redis_data_type` key. Valid\n  values for this key are `list` and `channel`. If left unset, the default\n  is `list`.\n\n  Attempts to resolve #266.\n\n\n- Introduced a stomp transport for beaver using stomp.py. [Peter\n  Lenderyou]\n\n- Fix references to ConfigParser error classes. [Jose Diaz-Gonzalez]\n\n- Redis transport: handle multiple connections and use them in round\n  robin style. [musil]\n\n- Fixes GELF format according to specs. [Marvin Frick]\n\n  GELF formatted messages need to be \\0 ended. At least for sending over\n  TCP.\n\n\n- Kafka round robin partitioner. [David Moravek]\n\n- Solve error: cannot convert argument to integer. [Theofilis George-\n  Nektarios]\n\n  See at #312\n\n- Basic docs for GELF formatter. [Oleg Rekutin]\n\n  Also fixes formatting issues with the immediately-preceding HTTP\n  transport example section.\n\n\n- Adds a GELF formatter. [Oleg Rekutin]\n\n  short_message is truncated to 250 characters and only the first line is\n  retained. Pair with the HTTP POST output to write directly to graylog2.\n\n\n- Issue #305, accept any 2xx code for http_transport. [Oleg Rekutin]\n\n33.2.0 (2015-03-11)\n-------------------\n\n- Improved kafka test. [Marcel Casado]\n\n- Added example of kafka transport usage in the user docs. [Marcel\n  Casado]\n\n- Added placeholder \"dist\" directory to download kafka binaries. [Marcel\n  Casado]\n\n- Added integration test support for Kafka transport. [Marcel Casado]\n\n- Wrapped kafka client init in a try catch. [Marcel Casado]\n\n- Initial kafka transport impl. [Marcel Casado]\n\n- Updating config examples and docs. [Jonathan Sabo]\n\n- Adding support for sqs queues in different accounts. [Jonathan Sabo]\n\n33.1.0 (2015-02-04)\n-------------------\n\n- Improved error message for missing logstash_version. [Florian Hopf]\n\n  Added a comment that the version needs to be set in the config\n\n- Specify stricter dependency on python-daemon, fixes #286. [Graham\n  Floyd]\n\n- Add message_batch size checking since SQS can only handle 256KiB in a\n  batch. Flush queue if message_batch is 10 messages or >= 250KiB.\n  [Lance O'Connor]\n\n- Explained valid values and meaning for rabbitmq_delivery_mode. [Fabio\n  Coatti]\n\n- Added documentation for rabbitmq_delivery_mode configuration\n  parameter. [Fabio Coatti]\n\n- A small change in except syntax. This should make happy python3 and\n  work also in 2.6 and later. [Fabio Coatti]\n\n- When sending a message, now we can tell rabbitmq which delivery mode\n  we want, according to main configuration option\n  rabbitmq_delivery_mode. [Fabio Coatti]\n\n- Added configuration option for rabbitmq deliveryMode. Basically it\n  works like a boolean, but having 1 and 2 as allowed values, we\n  consider it integer and validate it as such. [Fabio Coatti]\n\n- Newline removed. [Fabio Coatti]\n\n- Added stanzas specific redis_namespace key to documentation. [Fabio\n  Coatti]\n\n- Added a space after comma, more compliant with python style guide.\n  [Fabio Coatti]\n\n- Revert \"ignored eric files\" [Fabio Coatti]\n\n  This reverts commit ea2a6b27437570aeda3ee53b6c6ebd7ebb1f4f2a.\n\n  as suggested, leave alone .gitignore :)\n\n\n- This small commit allows to specify a redis namespace in file section\n  of configuration file (stanzas). Basically, beaver checks if a\n  redis_namespace is defined for the current file. If yes, it is used\n  for the redis payload. If not (or null), beaver uses the\n  redis_namespace value specified in global section. [Fabio Coatti]\n\n- Added a section (stanza) configuration option in order to be able to\n  specify a redis namespace. If set, it will override the namespace set\n  in main section. Default is null. [Fabio Coatti]\n\n- Ignored eric files. [Fabio Coatti]\n\n- Remove `python-daemon` from requirements on win32. [Ryan Davis]\n\n  If we're installing on windows, don't require `python-daemon`. This\n  fixes a problem where trying to `pip install beaver` errors out when\n  trying to install `python-daemon`.\n\n  refs #141\n\n\n- Use new repository name for travis-ci badge. [Jose Diaz-Gonzalez]\n\n33.0.0 (2014-10-14)\n-------------------\n\n- Extend release script to support new, semver-tagged releases. [Jose\n  Diaz-Gonzalez]\n\n- Add gitchangelog.rc to fix changelog generation. [Jose Diaz-Gonzalez]\n\n32 (2014-10-14)\n---------------\n\n- Allow for the config file to override the logfile's setting. [Aaron\n  France]\n\n- Force update of sincedb when beaver stop. [Pierre Fersing]\n\n- Fixed sincedb_write_interval (Bugs #229). [Pierre Fersing]\n\n- Fix config.get('ssh_options') [svengerlach]\n\n  ssh_options could never be returned due to a wrong type check\n\n- Add debian packaging based on dh-virtualenv. [Jose Diaz-Gonzalez]\n\n- Zmq3 split HWM into SNDHWM/RCVHWM. Closes #246. [Pete Fritchman]\n\n- Fix typo in usage.rst. [Hugo Lopes Tavares]\n\n  s/logstash_verion/logstash_version/\n\n- Fixed badge to point to master branch only. [Jose Diaz-Gonzalez]\n\n31 (2014-01-25)\n---------------\n\nFix\n~~~\n\n- Beaver user can't write its pid nor its log. [Mathieu Lecarme]\n\n          Using a folder is the tactic used by Redis on Debian.\n\n\nOther\n~~~~~\n\n- Add required spacing to readme for proper pypi doc support. [Jose\n  Diaz-Gonzalez]\n\n- Change release process to include processing of documentation. [Jose\n  Diaz-Gonzalez]\n\n- Use GlobSafeConfigParser to parse config files. [Clay Pence]\n\n  In order to support all of the kinds of globs, pass GlobSafeConfigParser\n  into the Configuration object so that it parses section headers\n  correctly.\n\n  Update dependency on conf_d\n\n  Fix line spacing + trigger travis\n\n  Remove chdir in test\n\n  This should fix the unit test to run properly when run from the main\n  directory.\n\n\n- Fix redis_transport.py redis exception handling. Fixes #238. [Hugo\n  Lopes Tavares]\n\n- Attempt to fix memory leaks. Closes #186. [Jose Diaz-Gonzalez]\n\n- Allow for newer versions of boto to be used. Closes #236. [Jose Diaz-\n  Gonzalez]\n\n- When shipping logs, use millisecond-precision timestamps. [Ryan Park]\n\n  Logstash 1.3.2 has a problem with microsecond-precision timestamps in the\n  @timestamp field, which is the default behavior of Python's .isoformat\n  method. Logstash uses the JodaTime library to parse timestamps, and Joda\n  doesn\u2019t support nanosecond timestamp resolution. As a result, Logstash\n  1.3.2 throws an exception on every log item shipped from Beaver.\n\n  There's a discussion about this issue in the logstash-users mailing list,\n  including an example of the Logstash exception:\n      https://groups.google.com/forum/#!topic/logstash-users/wIzdv15Iefs\n\n  This patch reduces @timestamp to millisecond precision, which should\n  correct the problem with Beaver 1.3.2.\n\n\n- Improve compatibility with case-sensitive filesystems. [Jose Diaz-\n  Gonzalez]\n\n- Modify test cases to support logstash_version. [Jose Diaz-Gonzalez]\n\n- Document usage of logstash_version. [Peter Burkholder]\n\n- Add add_field_env option to the config file to allow fields to be\n  added using values from the environment. [Lance O'Connor]\n\n  Closes #214\n\n\n- Add SSL/TLS support to the RabbitMQ transport. Closes #217. [Jonathan\n  Harker]\n\n- Added http transport option. Closes #218. [Jeff Bryner]\n\n- Adding missing config file option 'rabbitmq_queue_durable'. [Daniel\n  Whelan]\n\n- `StrictRedis.from_url` is better than DIY-ing it. [Kristian Glass]\n\n  Note currently `fakeredis` doesn't support `from_url` - this is blocking\n  on https://github.com/jamesls/fakeredis/pull/29 being merged in (I've\n  bumped version requirement in `tests.txt` accordingly)\n\n\n- Python 2.6 ConfigParser does not handle non-string Fixed typo.\n  [tommyulfsparre]\n\n- Dont add empty object to input list. [tommyulfsparre]\n\n- Import threading library in tail manager since we want to use it.\n  [Chris Roberts]\n\n- Add SSL to the TCP Transport. [Simon McCartney]\n\n- Redirect all docs to readthedocs. Refs #150. [Jose Diaz-Gonzalez]\n\n- Readthedocs support. Closes #150. [Jose Diaz-Gonzalez]\n\n- Convert producer to process. Allow timed producer culling. [Chris\n  Roberts]\n\n- Make consumer check threaded to prevent wedge state. [Chris Roberts]\n\n- Don't crash on a string decoding exception. [Adam Twardowski]\n\n- Set transport as valid on connect (properly resets for reconnect)\n  [Chris Roberts]\n\n- Handle publication failures in the TCP transport correctly. [Kiall Mac\n  Innes]\n\n- Add config option to manipulate ssh_options. [Andreas Lappe]\n\n  This option allows to pass all ssh options to the tunnel.\n\n\n- Fix version lookup. [Jose Diaz-Gonzalez]\n\n- Moved multiline_merge function to utils.py. [Pierre Fersing]\n\n- Support for multi-line and tail_lines options. [Pierre Fersing]\n\n- Support for multi-line events in tail-version. [Pierre Fersing]\n\n- Support for multi-line events. [Pierre Fersing]\n\n- Ignore invalid rawjson log. [Tomoyuki Sakurai]\n\n  this ensures beaver keeps running even when other application logged\n  logs in invalid json format.\n\n\n- Removed duplicate self._current_host from @source field. Fixes #180.\n  [Alexander Papaspyrou]\n\n30 (2013-08-22)\n---------------\n\n- Use os._exit over sys.exit in signal handlers to quit cleanly.\n  [Kristian Glass]\n\n  As per\n  http://thushw.blogspot.co.uk/2010/12/python-dont-use-sysexit-inside-signal.html\n  the use of `sys.exit` inside the signal handlers means that a\n  `SystemExit` exception is raised\n  (http://docs.python.org/2/library/sys.html#sys.exit) which can be caught\n  by try/except blocks that might have been executing at time of signal\n  handling, resulting in beaver failing to quit\n\n\n- Allow string escapes in delimiter. [Michael Mittelstadt]\n\n  As far as I can tell, there is no way for me to represent a newline as\n  a delimiter in a configuration file with ConfigParser. I want to do this:\n\n        [/ephemeral_storage/logs/kind_of_special.log]\n        tags: special\n        type: special\n        delimiter: \\n\\n\n\n  As the log has a blank line between its multiline entries.\n\n  My change allows that, by making delimiter not string-escaped until\n  after the config file is parsed. I'm naive about python, so there is a\n  strong possibility I've gone about it horribly wrong. This would also\n  easily allow splitting on nulls, tabs, unicode characters and other\n  things that ConfigParser may not find kosher.\n\n  By doing this sort of multiline parsing with beaver, it allows one to\n  run logstash without the multiline filter, which due to its lack of\n  thread-safety, forces you to run logstash with only one worker thread.\n\n\n- CONFIG_DIR to CONFD_PATH. [iyingchi]\n\n- Added doc for -C option for config directory. [iyingchi]\n\n- Fixed example in Readme.rst for sqs_aws_secret_key. [Jonathan Quail]\n\n- Allow path to be None. [Lars Hansson]\n\n  Allow path to be set empty (None) in the configuration filer. This way\n  all files and globs can be configured in files in confd_path.\n\n\n- Fix zmq transport tests. [Scott Smith]\n\n- Move zmq address config parsing into _main_parser. [Scott Smith]\n\n- Allow specifying multiple zmq addresses to bind/connect. [Scott Smith]\n\n- Redis 2.4.11 is no longer available on Pypi. [Andrew Gross]\n\n  Fixes issue #167\n\n- Add a TCP transport. [Kiall Mac Innes]\n\n- Isolate connection logic. Provide proper reconnect support. [Chris\n  Roberts]\n\n- Corrected documentation for exclude tag. Closes #157. [Jose Diaz-\n  Gonzalez]\n\n- Add missing sqlite3 module to documentation. [Andreas Lappe]\n\n- Tests status. [Denis Orlikhin]\n\n- Travis integration. [Denis Orlikhin]\n\n- Tests fix (conf_d does work without existing file) [Denis Orlikhin]\n\n- Implicit broken zmq error handling. [Denis Orlikhin]\n\n29 (2013-05-24)\n---------------\n\n- Do not harcode path in TailManager. Closes #143. [Jose Diaz-Gonzalez]\n\n- Use /etc/beaver/conf for path and provide conf.d example. Closes #149.\n  [Jose Diaz-Gonzalez]\n\n- Added mqtt as option in argparse configuration for the transport flag.\n  [Jose Diaz-Gonzalez]\n\n- Fixed broken MqttTransport naming. [Jose Diaz-Gonzalez]\n\n- Refactored BeaverSubprocess to maintain the running command as an\n  attribute. [Jose Diaz-Gonzalez]\n\n- Properly parse the beaver conf.d path for new sections. Closes #144.\n  Closes #145. Refs #107. [Jose Diaz-Gonzalez]\n\n- Use a Buffered Tokenizer to read large/fast incoming log input. Refs\n  #135. Refs #105. [Jose Diaz-Gonzalez]\n\n- Close queue after worker has been stopped. Refs #135. [Jose Diaz-\n  Gonzalez]\n\n- Wrap manager.close() call in try/except to mimic the worker\n  dispatcher. [Jose Diaz-Gonzalez]\n\n- Properly parse out the port from the `ssh_tunnel` option. Closes #142.\n  [Jose Diaz-Gonzalez]\n\n- Subclass the BaseLog class in BeaverSubprocess. Refs #142. [Jose Diaz-\n  Gonzalez]\n\n- Move base_log module higher up in hierarchy. Refs #142. [Jose Diaz-\n  Gonzalez]\n\n- Disable daemonization on the windows platform. Closes #141. [Jose\n  Diaz-Gonzalez]\n\n- Move file unwatching in old-style worker out of for-loop. Refs #139.\n  [Jose Diaz-Gonzalez]\n\n  Each worker has a `self._file_map` attribute which is a mapping of file ids to file data. When retrieving lines or checking on the status of the file, we use `iteritems()` which gives us a generator as opposed to a copy such as with `items()`. This generator allows us to iterate over the files without having issues where the file handle may open several times or other random Python issues.\n\n  Using a generator also means that the set that we are iterating over should not change mid-iteration, which it does if a file is unwatched. To circumvent this, we should use a separate list to keep track of files we need to unwatch or rewatch, and do it out of band.\n\n  We should also take care to catch `RuntimeError` which may arise when closing the Worker out of band - such as in the `cleanup` step of the worker dispatcher - but nowhere else.\n\n  This should fix issues where logrotate suddenly causes files to disappear for a time and beaver tries to tail the file at the exact time it is being recreated.\n\n\n- Typo in SQS docs. [Jonathan Quail]\n\n- Remove ujson requirement. [Jose Diaz-Gonzalez]\n\n  This allows users that do not have a compiler in their deployment area to install beaver.\n\n  Closes #137\n\n- Turn on logfile output when running in non-daemon contexts. Closes\n  #131. [Jose Diaz-Gonzalez]\n\n- Expand logging output path. Closes #133. [Jose Diaz-Gonzalez]\n\n- Ensure logging to a file does not destroy regular logging. Closes\n  #132. [Jose Diaz-Gonzalez]\n\n- Properly handle unreadable files by logging a warning instead of\n  crashing. Closes #130. [Jose Diaz-Gonzalez]\n\n- Rename null_formatter to raw_formatter in BaseTransport class. [Jose\n  Diaz-Gonzalez]\n\n- Ensure that the RedisTransport calls the super invalidate method. Refs\n  #93. [Jose Diaz-Gonzalez]\n\n- Fix issue where input type was not being detected properly. [Jose\n  Diaz-Gonzalez]\n\n- Use logfile flag for sending all output to a file in daemon contexts.\n  [Jose Diaz-Gonzalez]\n\n- Expand path for pidfile creation. [Jose Diaz-Gonzalez]\n\n- Properly handle redis reconnects when the datastore becomes\n  unreacheable. Refs #93. [Jose Diaz-Gonzalez]\n\n- 'type' instead of 'exchange_type' in recent pika vers. [Pravir\n  Chandra]\n\n- Adding options to make queues durable and HA. [Pravir Chandra]\n\n- Respect stat_interval file configuration in stable worker. [Jose Diaz-\n  Gonzalez]\n\n- Unified configuration file using conf_d module. [Jose Diaz-Gonzalez]\n\n  This change adds support for a conf.d directory - configured only via the `--confd-path` flag - which allows beaver to read configuration from multiple files.\n\n  Please note that the primary `beaver` stanza MUST be located in the file specified by the `--configfile` argument. Any other such `beaver` stanzas will be ignored.\n\n  This change also unifies the `BeaverConfig` and `FileConfig` classes, and simplifies the api for retrieving global vs file-specific data.\n\n  Please note that this commit BREAKS custom transport classes, as the interface for creating a transport class has changed. If you are referencing a `file_config.get(field, filename)` anywhere, please omit this and refer to `beaver_config.get_field(field, filename)`.\n\n  Closes #107\n\n\n- Hack to prevent stupid TypeError: 'NoneType' when running tests via\n  setup.py. [Jose Diaz-Gonzalez]\n\n- Properly handle rotated files on Darwin architectures. [Jose Diaz-\n  Gonzalez]\n\n- Log to debug instead of warning for file reloading on Darwin\n  architectures. [Jose Diaz-Gonzalez]\n\n- Speed up experimental worker. [Jose Diaz-Gonzalez]\n\n  - Removed inline sleep call, which slowed down passes n*0.1 seconds, where n is the number of files being tailed\n  - Inline methods that update data structures which should speed up larger installations\n  - Make self.active() an attribute lookup instead of a method call\n\n\n- Use latest version of message pack interface (0.3.0). Closes #128.\n  [Jose Diaz-Gonzalez]\n\n- Alternative for reading python requirements. [Justin Lambert]\n\n- Fix options sent from original worker to queue. Refs #119. [Jose Diaz-\n  Gonzalez]\n\n- Allow users to ignore the results of a copytruncate from logrotate.\n  Refs #105. [Jose Diaz-Gonzalez]\n\n- Fix rpm package building. Closes #123. [Jose Diaz-Gonzalez]\n\n- Added experimental tail-version of beaver. [Jose Diaz-Gonzalez]\n\n- Beginning work to move from an omniscient worker to individual tail\n  objects. [Jose Diaz-Gonzalez]\n\n- Fix kwargs call. [Jose Diaz-Gonzalez]\n\n- Add formatting to mqtt transport. Closes #115. [Jose Diaz-Gonzalez]\n\n- Retrieve more data from callback to minimize dictionary lookups. [Jose\n  Diaz-Gonzalez]\n\n- Prefer single quotes to double quotes where possible. [Jose Diaz-\n  Gonzalez]\n\n- Ensure stat_interval and tail_lines are both integer values. [Jose\n  Diaz-Gonzalez]\n\n- Alphabetize config variables for file_config. [Jose Diaz-Gonzalez]\n\n- Ensure that debug flag is a boolean. [Jose Diaz-Gonzalez]\n\n- Follow logstash covention for 'format' instead of 'message_format'\n  [Jose Diaz-Gonzalez]\n\n- Use passed in 'ignore_empty' field instead of a file_config lookup in\n  queue module. [Jose Diaz-Gonzalez]\n\n- Prefer discover_interval over update_file_mapping_time. [Jose Diaz-\n  Gonzalez]\n\n- Fix TransportException import. Closes #122. [Jose Diaz-Gonzalez]\n\n- Auto-reconnect mechanism for the SSH tunnel. [Michael Franz Aigner]\n\n- Use an alternative method of reading in requirements. Refs #120. [Jose\n  Diaz-Gonzalez]\n\n- Fix import of REOPEN_FILES constant in dispatcher.py. [Jose Diaz-\n  Gonzalez]\n\n- Fix a PEP8 violation. [Jose Diaz-Gonzalez]\n\n- Ensure all files are utf-8 encoded. [Jose Diaz-Gonzalez]\n\n- Namespace transport classes in the transport module. [Jose Diaz-\n  Gonzalez]\n\n- Allow specifying debug mode via argument. [Jose Diaz-Gonzalez]\n\n- Added thread-safety to datetime calls. [Jose Diaz-Gonzalez]\n\n- Added support for message_format. Closes #91. [Jose Diaz-Gonzalez]\n\n- Add msgpack_pure as fallback for C-Based msgpack package. [Jose Diaz-\n  Gonzalez]\n\n- Fix issues in sincedb implementation. Refs #116. [Jose Diaz-Gonzalez]\n\n- Fix casting issue when checking start_position. [Jose Diaz-Gonzalez]\n\n- Properly handle Queue.Full exceptions. [Jose Diaz-Gonzalez]\n\n- More logging. [Jose Diaz-Gonzalez]\n\n- Expand the sincedb path on configuration parse. [Jose Diaz-Gonzalez]\n\n- Ignore since.db files. [Jose Diaz-Gonzalez]\n\n- Simplified sincedb support to handle an edge case. Refs #116. [Jose\n  Diaz-Gonzalez]\n\n- Remove errant print. [Jose Diaz-Gonzalez]\n\n- Added support for file exclusion in config stanzas. Closes #106. [Jose\n  Diaz-Gonzalez]\n\n- Added python regex exclusion support to eglob. Refs #106. [Jose Diaz-\n  Gonzalez]\n\n- PEP8. [Jose Diaz-Gonzalez]\n\n- Added a tests directory with some sample tests from users. [Jose Diaz-\n  Gonzalez]\n\n- Convert the 'sincedb_write_interval' option to an integer. Refs #116.\n  [Jose Diaz-Gonzalez]\n\n- Moved logger call to a more intelligent spot. [Jose Diaz-Gonzalez]\n\n- Ensure that we use the proper encoding when opening a file. Closes\n  #104. [Jose Diaz-Gonzalez]\n\n- Centralize file-reading using classmethod open() [Jose Diaz-Gonzalez]\n\n- Fixed issue where tailed lines were not being properly sent to the\n  callback. [Jose Diaz-Gonzalez]\n\n- Remove unnecessary argument from Worke.__init__() [Jose Diaz-Gonzalez]\n\n- Force-parse non-unicode files using unicode_dammit. [Jose Diaz-\n  Gonzalez]\n\n- Set utf-8 as default encoding on all python files. [Jose Diaz-\n  Gonzalez]\n\n- Fixed pyflakes issues. [rtoma]\n\n- Syntax fix of list. [rtoma]\n\n- Raise an AssertionError when run in daemon without a pid path\n  specified. Closes #112. [Jose Diaz-Gonzalez]\n\n- Add support for ignoring empty lines. [Jose Diaz-Gonzalez]\n\n- Properly cast boolean values from strings. [Jose Diaz-Gonzalez]\n\n- Ensure all sections have the proper values on start. [Jose Diaz-\n  Gonzalez]\n\n- Ensure internal file_config state is updated. [Jose Diaz-Gonzalez]\n\n- Pass in timestamp from worker class for more accurate timestamps at\n  the cost of speed of sending. [Jose Diaz-Gonzalez]\n\n- Centralize timestamp retrieval to base transport class. [Jose Diaz-\n  Gonzalez]\n\n- Added support for gzipped files. refs #39. [Jose Diaz-Gonzalez]\n\n- Added support for sqlite3-based sincedb. Refs #6 and #39. [Jose Diaz-\n  Gonzalez]\n\n- Refactored worker so as to allow further data to be added to the\n  file_map. [Jose Diaz-Gonzalez]\n\n- Refactor seek_to_end to properly support file tailing. [Jose Diaz-\n  Gonzalez]\n\n- Added support for pubsub zmq. [Jose Diaz-Gonzalez]\n\n- Added support for mosquitto transport. [Jose Diaz-Gonzalez]\n\n- Added support for specifying file encoding, using io.open vs os.open.\n  [Jose Diaz-Gonzalez]\n\n- Fix issue where a field may not exist in the data. [Jose Diaz-\n  Gonzalez]\n\n- Added support for rawjson format. [Jose Diaz-Gonzalez]\n\n- Fixed zeromq tests. [Jose Diaz-Gonzalez]\n\n- Added SQS transport. [Jonathan Quail]\n\n- Fixing outdated transport docs. [Morgan Delagrange]\n\n28 (2013-03-05)\n---------------\n\n- BeaverSubprocess is now a new-style class. Fixes ssh_tunneling. [Jose\n  Diaz-Gonzalez]\n\n27 (2013-03-05)\n---------------\n\n- Fix issue where super method was not called in BeaverSshTunnel. [Jose\n  Diaz-Gonzalez]\n\n26 (2013-03-05)\n---------------\n\n- Add optional reconnect support for transports. Refs #93. [Jose Diaz-\n  Gonzalez]\n\n- Add a method for checking the validity of a Transport. Refs #93. [Jose\n  Diaz-Gonzalez]\n\n- Added a configurable subprocess poll sleep. [Jose Diaz-Gonzalez]\n\n- Add a deafult sleep timeout to BeaverSubprocess polling. [Jose Diaz-\n  Gonzalez]\n\n- Use a larger sleep time to get around redis over ssh connection\n  issues. [Jose Diaz-Gonzalez]\n\n25 (2013-03-05)\n---------------\n\n- Use True instead of 1 for while check. [Jose Diaz-Gonzalez]\n\n- Fix orphan child processes. Closes #103. [Jose Diaz-Gonzalez]\n\n24 (2013-02-26)\n---------------\n\n- Ensure new files are added to a transports configuration. Closes #96.\n  Closes #101. [Jose Diaz-Gonzalez]\n\n- Allow float numbers for update_file_mapping_time. [Jose Diaz-Gonzalez]\n\n- Fix invalid casting of boolean values. [Jose Diaz-Gonzalez]\n\n- Perform all conversions in config.py. Closes #99. [Jose Diaz-Gonzalez]\n\n23 (2013-02-20)\n---------------\n\n- Worker: pretty format debug message \"Iteration took %.6f\" [Sergey\n  Shepelev]\n\n- Zeromq_hwm int() conversion moved to config. [Denis Orlikhin]\n\n- Zeromq_hwm config entry. [Denis Orlikhin]\n\n- Zeromq_hwm support. [Denis Orlikhin]\n\n- Add test requirements to setup. [Paul Garner]\n\n- Allow beaver to accept custom transport classes. [Paul Garner]\n\n- Rabbitmq_exchange_type option fixed in the README. [Xabier de Zuazo]\n\n- Make beaver slightly more amenable to test mocking and sort of fix the\n  broken zmq test. [Paul Garner]\n\n22 (2013-01-15)\n---------------\n\n- Handle sigterm properly. Refs #87. [Jose Diaz-Gonzalez]\n\n- Add --loglevel as alias for --output. Closes #92. [Jose Diaz-Gonzalez]\n\n- Added logging on connection exception. [Thomas Morse]\n\n- Adding exception when redis connection can't be confirmed. [William\n  Jimenez]\n\n- Add '--format raw' to pass through input unchanged. [Stephen Sugden]\n\n- Fix string & null formatters in beaver.transport. [Stephen Sugden]\n\n  the inline definitions were expecting a self parameter, which is *not*\n  passed\u00a0when you assign a function to an attribute on an object instance.\n\n- Call file.readlines() with sizehint in a loop to avoid reading in\n  massive files all at once. [Jose Diaz-Gonzalez]\n\n21 (2013-01-04)\n---------------\n\n- Move runner into a dispatcher class to solve installation issues.\n  [Jose Diaz-Gonzalez]\n\n- Added note for Python 2.6+ support. [Jose Diaz-Gonzalez]\n\n20 (2013-01-03)\n---------------\n\n- Copy the readme over to avoid pypi packaging warnings. [Jose Diaz-\n  Gonzalez]\n\n- Implement fully recursive file globing. [Brian L. Troutwine]\n\n  Python's base glob.iglob does not operate as if globstar were in effect. To\n  explain, let's say I have an erlang application with lager logs to\n\n      /var/log/erl_app/lags.log\n      /var/log/erl_app/console/YEAR_MONTH_DAY.log\n\n  and webmachine logs to\n\n      /var/log/erl_app/webmachine/access/YEAR_MONTH_DAY.log\n\n  Prior to this commit, when configured with the path `/var/log/**/*.log` all\n  webmachine logs would be ignored by beaver. This is no longer the case, to an\n  arbitrary depth.\n\n  Signed-off-by: Brian L. Troutwine <brian@troutwine.us>\n\n\n19 (2013-01-01)\n---------------\n\n- Fix issue with supporting command line args. [Jose Diaz-Gonzalez]\n\n18 (2012-12-31)\n---------------\n\n- Add timing debug information to the worker loop. [Jose Diaz-Gonzalez]\n\n- Use redis pipelining when sending events. [Jose Diaz-Gonzalez]\n\n- Formatting. [Jose Diaz-Gonzalez]\n\n- Do not output debug statement for file_config.get call. [Jose Diaz-\n  Gonzalez]\n\n- Pass in logger object to create_ssh_tunnel() [Jose Diaz-Gonzalez]\n\n17 (2012-12-28)\n---------------\n\n- Added missing python-daemon requirement. [Jose Diaz-Gonzalez]\n\n16 (2012-12-27)\n---------------\n\n- Specify a max queue size of 100 to limit overrunning memory. [Jose\n  Diaz-Gonzalez]\n\n- Use multiprocessing for handling larger queue sizes. [Jose Diaz-\n  Gonzalez]\n\n  Previously there were issues where files that were updated frequently - such as varnish or server logs - would overwhelm the naive implementation of file.readlines() within Beaver. This would cause Beaver to slowly read larger and larger portions of a file before processing any of the lines, eventually causing Beaver to take forever to process log lines.\n\n  This patch adds the ability to use an internal work queue for log lines. Whenever file.readlines() is called, the lines are placed in the queue, which is shared with a child process. The child process creates its own transport, allowing us to potentially create a Process Pool in the future to handle a larger queue size.\n\n  Note that the limitation of file.readlines() reading in too many lines is still in existence, and may continue to cause issues for certain log files.\n\n\n- Add default redis_password to BeaverConfig class. [Jose Diaz-Gonzalez]\n\n- Fix missing underscore causing transport to break. [Norman Joyner]\n\n- Implement redis auth support. [Norman Joyner]\n\n- Add beaver init script for daemonization mode. [Jose Diaz-Gonzalez]\n\n- Use python logger when using StdoutTransport. [Jose Diaz-Gonzalez]\n\n- Add short arg flags for hostname and format. [Jose Diaz-Gonzalez]\n\n- Add the ability to daemonize. Closes #79. [Jose Diaz-Gonzalez]\n\n- Pass around a logger instance to all transports. [Jose Diaz-Gonzalez]\n\n- Revert \"Added a lightweight Event class\" [Jose Diaz-Gonzalez]\n\n  After deliberation, beaver is meant to be \"light-weight\". Lets leave\n  the heavy-hitting to the big-boys.\n\n  This reverts commit 1619d33ef4803c3fe910cf4ff197d0dd0039d2eb.\n\n\n- Added a lightweight Event class. [Jose Diaz-Gonzalez]\n\n  This class's sole responsibility will be the processing of a given line as an event.\n  It's future goal will be to act as a lightweight implementation of the filter system within Logstash\n\n\n- Remove argparse requirement for python 2.7 and above. [Jose Diaz-\n  Gonzalez]\n\n15 (2012-12-25)\n---------------\n\n- Pull argument parsing out of beaver __init__.py. [Jose Diaz-Gonzalez]\n\n- Move app-running into __init__.py. [Jose Diaz-Gonzalez]\n\n- Standardize on _parse() as method for parsing config. [Jose Diaz-\n  Gonzalez]\n\n- Automatically parse the path config option. [Jose Diaz-Gonzalez]\n\n- Remove extensions argument on Worker class. [Jose Diaz-Gonzalez]\n\n  This argument was only used when no globs were specified in a config file.\n  Since it is not configurable, there is no sense leaving around the extra logic.\n\n\n- Remove extra callback invocation on readlines. [Jose Diaz-Gonzalez]\n\n- Remove extra file_config module. [Jose Diaz-Gonzalez]\n\n- General code reorganization. [Jose Diaz-Gonzalez]\n\n  Move both BeaverConfig and FileConfig into a single class\n\n  Consolidated run_worker code with code in beaver binary file. This will create a clearer path for Exception handling, as it is now the responsibility of the calling class, allowing us to remove duplicative exception handling code.\n\n  Added docstrings to many fuctions and methods\n\n  Moved extra configuration and setup code to beaver.utils module. In many cases, code was added hastily before.\n\n  Made many logger calls debug as opposed to info. The info level should be generally reserved for instances where files are watched, unwatched, or some change in the file state has occurred.\n\n\n- Remove duplicative and old beaver instructions from binary. [Jose\n  Diaz-Gonzalez]\n\n- Remove unnecessary passing of ssh_tunnel subprocess. [Jose Diaz-\n  Gonzalez]\n\n- Added docstrings to ssh_tunnel module. [Jose Diaz-Gonzalez]\n\n- Follow convention of underscore for object properties. [Jose Diaz-\n  Gonzalez]\n\n- Follow convention of underscore for object properties. [Jose Diaz-\n  Gonzalez]\n\n- Added a NullFormatter. [Jose Diaz-Gonzalez]\n\n  Useful for cases where we do not want any extra overhead on message formatting\n\n\n- Refactored message formatting in base Transport class. [Jose Diaz-\n  Gonzalez]\n\n  We now use a `_formatter` property on the Transport class which\n  will properly process the message for output as the user expects.\n\n  In the case of string output, we define a custom formatter using an\n  anonymous function and specify that as the formatter.\n\n\n- Moved create_transport to transport module. [Jose Diaz-Gonzalez]\n\n- Moved create_ssh_tunnel to ssh_tunnel module. [Jose Diaz-Gonzalez]\n\n- Fixed order of beaver_config and file_config in args. [Jose Diaz-\n  Gonzalez]\n\n- Reduce overhead of parsing configuration for globs and files. [Jose\n  Diaz-Gonzalez]\n\n- Removed ordereddict dependency. [Jose Diaz-Gonzalez]\n\n- Do not output info level when outputing version. [Jose Diaz-Gonzalez]\n\n- Allow usage of ujson >= 1.19. Closes #76. [Jose Diaz-Gonzalez]\n\n14 (2012-12-18)\n---------------\n\n- Removed erroneous redundant code. [Jose Diaz-Gonzalez]\n\n- Workaround for differing iteration implementation in Python 2.6. [Jose\n  Diaz-Gonzalez]\n\n- Properly detect non-linux platforms. [Jose Diaz-Gonzalez]\n\n- Improve Python 2.6 support. [Jose Diaz-Gonzalez]\n\n- Fix broken python readme. [Jose Diaz-Gonzalez]\n\n13 (2012-12-17)\n---------------\n\n- Fixed certain environment variables. [Jose Diaz-Gonzalez]\n\n- SSH Tunnel Support. [Jose Diaz-Gonzalez]\n\n  This code should allow us to create an ssh tunnel between two distinct servers for the purposes of sending and receiving data.\n\n  This is useful in certain cases where you would otherwise need to whitelist in your Firewall or iptables setup, such as when running in two different regions on AWS.\n\n\n- Allow for initial connection lag. Helpful when waiting for an SSH\n  proxy to connect. [Jose Diaz-Gonzalez]\n\n- Fix issue where certain config defaults were of an improper value.\n  [Jose Diaz-Gonzalez]\n\n- Allow specifying host via flag. Closes #70. [Jose Diaz-Gonzalez]\n\n12 (2012-12-17)\n---------------\n\n- Reload tailed files on non-linux platforms. [Jose Diaz-Gonzalez]\n\n  Python has an issue on OS X were the underlying C implementation of\n  `file.read()` caches the EOF, therefore causing `readlines()` to only\n  work once. This happens to also fail miserably when you are seeking to\n  the end before calling readlines.\n\n  This fix solves the issue by constantly re-reading the files changed.\n\n  Note that this also causes debug mode to be very noisy on OS X. We all\n  have to make sacrifices...\n\n\n- Deprecate all environment variables. [Jose Diaz-Gonzalez]\n\n  This shifts configuration management into the BeaverConfig class.\n  Note that we currently throw a warning if you are using environment\n  variables.\n\n  Refs #72\n  Closes #60\n\n\n- Warn when using deprecated ENV variables for configuration. Refs #72.\n  [Jose Diaz-Gonzalez]\n\n- Minor changes for PEP8 conformance. [Jose Diaz-Gonzalez]\n\n11 (2012-12-16)\n---------------\n\n- Add optional support for socket.getfqdn. [Jeremy Kitchen]\n\n  For my setup I need to have the fqdn used at all times since my\n  hostnames are the same but the environment (among other things) is\n  found in the rest of the FQDN.\n\n  Since just changing socket.gethostname to socket.getfqdn has lots of\n  potential for breakage, and socket.gethostname doesn't always return an\n  FQDN, it's now an option to explicitly always use the fqdn.\n\n  Fixes #68\n\n\n- Check for log file truncation fixes #55. [Jeremy Kitchen]\n\n  This adds a simple check for log file truncation and resets the watch\n  when detected.\n\n  There do exist 2 race conditions here:\n  1. Any log data written prior to truncation which beaver has not yet\n     read and processed is lost. Nothing we can do about that.\n  2. Should the file be truncated, rewritten, and end up being larger than\n     the original file during the sleep interval, beaver won't detect\n     this. After some experimentation, this behavior also exists in GNU\n     tail, so I'm going to call this a \"don't do that then\" bug :)\n\n     Additionally, the files beaver will most likely be called upon to\n     watch which may be truncated are generally going to be large enough\n     and slow-filling enough that this won't crop up in the wild.\n\n\n- Add a version number to beaver. [Jose Diaz-Gonzalez]\n\n10 (2012-12-15)\n---------------\n\n- Fixed package name. [Jose Diaz-Gonzalez]\n\n- Regenerate CHANGES.rst on release. [Jose Diaz-Gonzalez]\n\n- Adding support for /path/{foo,bar}.log. [Josh Braegger]\n\n- Consistency. [Chris Faulkner]\n\n- Stating the obvious. [Chris Faulkner]\n\n- Grist for the mill. [Chris Faulkner]\n\n- Drop redundant README.txt. [Chris Faulkner]\n\n- Ignore file errors in unwatch method -- the file might not exists.\n  [Josh Braegger]\n\n- Unwatch file when encountering a stale NFS handle. When an NFS file\n  handle becomes stale (ie, file was removed), it was crashing beaver.\n  Need to just unwatch file. [Josh Braegger]\n\n- Consistency. [Chris Faulkner]\n\n- Pull install requirements from requirements/base.txt so they don't get\n  out of sync. [Chris Faulkner]\n\n- Include changelog in setup. [Chris Faulkner]\n\n- Convert changelog to RST. [Chris Faulkner]\n\n- Actually show the license. [Chris Faulkner]\n\n- Consistent casing. [Chris Faulkner]\n\n- Don't use empty string for tag when no tags configured in config file.\n  [Stylianos Modes]\n\n- Making 'mode' option work for zmqtransport.  Adding setuptools and\n  tests (use ./setup.py nosetests).  Adding .gitignore. [Josh Braegger]\n\n9 (2012-11-28)\n--------------\n\n- More release changes. [Jose Diaz-Gonzalez]\n\n- Fixed deprecated warning when declaring exchange type. [Rafael\n  Fonseca]\n\n8 (2012-11-28)\n--------------\n\n- Removed deprecated usage of e.message. [Rafael Fonseca]\n\n- Fixed exception trapping code. [Rafael Fonseca]\n\n- Added some resiliency code to rabbitmq transport. [Rafael Fonseca]\n\n7 (2012-11-28)\n--------------\n\n- Added a helper script for creating releases. [Jose Diaz-Gonzalez]\n\n- Partial fix for crashes caused by globbed files. [Jose Diaz-Gonzalez]\n\n6 (2012-11-26)\n--------------\n\n- Fix issue where polling for files was done incorrectly. [Jose Diaz-\n  Gonzalez]\n\n- Added ubuntu init.d example config. [Jose Diaz-Gonzalez]\n\n5 (2012-11-26)\n--------------\n\n- Try to poll for files on startup instead of throwing exceptions.\n  Closes #45. [Jose Diaz-Gonzalez]\n\n- Added python 2.6 to classifiers. [Jose Diaz-Gonzalez]\n\n4 (2012-11-26)\n--------------\n\n- Remove unused local vars. [Jose Diaz-Gonzalez]\n\n- Allow rabbitmq exchange type and durability to be configured. [Jose\n  Diaz-Gonzalez]\n\n- Remove unused import. [Jose Diaz-Gonzalez]\n\n- Formatted code to fix PEP8 violations. [Jose Diaz-Gonzalez]\n\n- Use alternate dict syntax for Python 2.6 support. Closes #43. [Jose\n  Diaz-Gonzalez]\n\n- Fixed release date for version 3. [Jose Diaz-Gonzalez]\n\n3 (2012-11-25)\n--------------\n\n- Added requirements files to manifest. [Jose Diaz-Gonzalez]\n\n- Include all contrib files in release. [Jose Diaz-Gonzalez]\n\n- Revert \"removed redundant README.txt\" to follow pypi standards. [Jose\n  Diaz-Gonzalez]\n\n  This reverts commit e667f63706e0af8bc82c0eac6eac43318144e107.\n\n\n- Added bash startup script. Closes #35. [Jose Diaz-Gonzalez]\n\n- Added an example supervisor config for redis. closes #34. [Jose Diaz-\n  Gonzalez]\n\n- Removed redundant README.txt. [Jose Diaz-Gonzalez]\n\n- Added classifiers to package. [Jose Diaz-Gonzalez]\n\n- Re-order workers. [Jose Diaz-Gonzalez]\n\n- Re-require pika. [Jose Diaz-Gonzalez]\n\n- Make zeromq installation optional. [Morgan Delagrange]\n\n- Formatting. [Jose Diaz-Gonzalez]\n\n- Added changes to changelog for version 3. [Jose Diaz-Gonzalez]\n\n- Timestamp in ISO 8601 format with the \"Z\" sufix to express UTC.\n  [Xabier de Zuazo]\n\n- Adding udp support. [Morgan Delagrange]\n\n- Lpush changed to rpush on redis transport. This is required to always\n  read the events in the correct order on the logstash side. See: https:\n  //github.com/logstash/logstash/blob/6f745110671b5d9d66bf082fbfed99d145\n  af4620/lib/logstash/outputs/redis.rb#L4. [Xabier de Zuazo]\n\n2 (2012-10-25)\n--------------\n\n- Example upstart script. [Michael D'Auria]\n\n- Fixed a few more import statements. [Jose Diaz-Gonzalez]\n\n- Fixed binary call. [Jose Diaz-Gonzalez]\n\n- Refactored logging. [Jose Diaz-Gonzalez]\n\n- Improve logging. [Michael D'Auria]\n\n- Removed unnecessary print statements. [Jose Diaz-Gonzalez]\n\n- Add default stream handler when transport is stdout. Closes #26. [bear\n  (Mike Taylor)]\n\n- Better exception handling for unhandled exceptions. [Michael D'Auria]\n\n- Handle the case where the config file is not present. [Michael\n  D'Auria]\n\n- Fix wrong addfield values. [Alexander Fortin]\n\n- Add add_field to config example. [Alexander Fortin]\n\n- Add support for add_field into config file. [Alexander Fortin]\n\n- Minor readme updates. [Jose Diaz-Gonzalez]\n\n- Add support for type reading from INI config file. [Alexander Fortin]\n\n  Add support for symlinks in config file\n\n  Add support for file globbing in config file\n\n  Add support for tags\n\n  - a little bit of refactoring, move type and tags check down into\n    transport class\n  - create config object (reading /dev/null) even if no config file\n    has been given via cli\n\n  Add documentation for INI file to readme\n\n  Remove unused json library\n\n  Conflicts:\n  \tREADME.rst\n\n\n- Support globs in file paths. [Darren Worrall]\n\n- When sending data over the wire, use UTC timestamps. [Darren Worrall]\n\n- Added msgpack support. [Jose Diaz-Gonzalez]\n\n- Use the python logging framework. [Jose Diaz-Gonzalez]\n\n- Fixed Transport.format() method. [Jose Diaz-Gonzalez]\n\n- Properly parse BEAVER_FILES env var. [Jose Diaz-Gonzalez]\n\n- Refactor transports. [Jose Diaz-Gonzalez]\n\n  - Fix the json import to use the fastest json module available\n  - Move formatting into Transport class\n\n\n- Attempt to fix defaults from env variables. [Jose Diaz-Gonzalez]\n\n- Fix README and beaver CLI help to reference correct RABBITMQ_HOST\n  environment variable. [jdutton]\n\n- Add RabbitMQ support. [Alexander Fortin]\n\n- Added real-world example of beaver usage for tailing a file. [Jose\n  Diaz-Gonzalez]\n\n- Removed unused argument. [Jose Diaz-Gonzalez]\n\n- Ensure that python-compatible readme is included in package. [Jose\n  Diaz-Gonzalez]\n\n- Fix variable naming and timeout for redis transport. [Jose Diaz-\n  Gonzalez]\n\n- Installation instructions. [Jose Diaz-Gonzalez]\n\n- Use restructured text for readme instead of markdown. [Jose Diaz-\n  Gonzalez]\n\n- Removed unnecessary .gitignore. [Jose Diaz-Gonzalez]\n\n1 (2012-08-06)\n--------------\n\n- Moved app into python package format. [Jose Diaz-Gonzalez]\n\n- Moved binary beaver.py to bin/beaver, as per python packaging. [Jose\n  Diaz-Gonzalez]\n\n- Moved around transports to be independent of each other. [Jose Diaz-\n  Gonzalez]\n\n- Reorder transports. [Jose Diaz-Gonzalez]\n\n- Rewrote run_worker to throw exception if all transport options have\n  been exhausted. [Jose Diaz-Gonzalez]\n\n- Rename Amqp -> Zmq to avoid confusion with RabbitMQ. [Alexander\n  Fortin]\n\n- Added choices to the --transport argument. [Jose Diaz-Gonzalez]\n\n- Fixed derpy formatting. [Jose Diaz-Gonzalez]\n\n- Added usage to the readme. [Jose Diaz-Gonzalez]\n\n- Support usage of environment variables instead of arguments. [Jose\n  Diaz-Gonzalez]\n\n- Fixed files argument parsing. [Jose Diaz-Gonzalez]\n\n- One does not simply license all the things. [Jose Diaz-Gonzalez]\n\n- Add todo to readme. [Jose Diaz-Gonzalez]\n\n- Added version to pyzmq. [Jose Diaz-Gonzalez]\n\n- Added license. [Jose Diaz-Gonzalez]\n\n- Reordered imports. [Jose Diaz-Gonzalez]\n\n- Moved all transports to beaver/transports.py. [Jose Diaz-Gonzalez]\n\n- Calculate current timestamp at most once per callback fired. [Jose\n  Diaz-Gonzalez]\n\n- Modified transports to include proper information for ingestion in\n  logstash. [Jose Diaz-Gonzalez]\n\n- Fixed package imports. [Jose Diaz-Gonzalez]\n\n- Removed another compiled python file. [Jose Diaz-Gonzalez]\n\n- Use ujson instead of simplejson. [Jose Diaz-Gonzalez]\n\n- Ignore compiled python files. [Jose Diaz-Gonzalez]\n\n- Fixed imports. [Jose Diaz-Gonzalez]\n\n- Fixed up readme instructions. [Jose Diaz-Gonzalez]\n\n- Refactor transports so that connections are no longer global. [Jose\n  Diaz-Gonzalez]\n\n- Readme and License. [Jose Diaz-Gonzalez]\n\n- First commit. [Jose Diaz-Gonzalez]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/JamieCressey/gribble", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "Gribble", "package_url": "https://pypi.org/project/Gribble/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Gribble/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/JamieCressey/gribble"}, "release_url": "https://pypi.org/project/Gribble/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "python daemon that munches on logs and sends their contents to logstash", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ======<br>Gribble<br>======<br><br>.. image:: https://travis-ci.org/JamieCressey/python-gribble.svg?branch=master<br>    :target: https://travis-ci.org/JamieCressey/python-gribble<br><br>python daemon that munches on logs and sends their contents to logstash<br><br><br>Notice<br>======<br><br>Gribble is a fork of python-beaver version 34.1.0 (https://github.com/josegonzalez/python-beaver)  with our own fixes merged in.<br><br><br>Requirements<br>============<br><br>* Python 2.6+<br>* Optional zeromq support: install libzmq (``brew install zmq`` or ``apt-get install libzmq-dev``) and pyzmq (``pip install pyzmq==2.1.11``)<br><br>Installation<br>============<br><br><br>From PyPI::<br><br>    pip install gribble==34.1.0<br><br>Documentation<br>=============<br><br><br>You can also build the docs locally::<br><br>    # get sphinx installed<br>    pip install sphinx<br><br>    # retrieve the repository<br>    git clone git://github.com/JamieCressey/gribble.git<br><br>    # build the html output<br>    cd gribble/docs<br>    make html<br><br>HTML docs will be available in `gribble/docs/_build/html`.<br><br>Credits<br>=======<br><br>Fork of the python-beaver log shipper created by Jose Diaz-Gonzalez::<br><br>\thttps://github.com/josegonzalez/python-beaver<br><br><br>Based on work from Giampaolo and Lusis::<br><br>    Real time log files watcher supporting log rotation.<br><br>    Original Author: Giampaolo Rodola' &lt;g.rodola [AT] gmail [DOT] com&gt;<br>    http://code.activestate.com/recipes/577968-log-watcher-tail-f-log/<br><br>    License: MIT<br><br>    Other hacks (ZMQ, JSON, optparse, ...): lusis<br><br><br>Changelog<br>=========<br><br>34.1.0 (2015-08-10)<br>-------------------<br><br>- Adding AWS SNS as a transport option. [Jamie Cressey]<br><br>34.0.1 (2015-08-07)<br>-------------------<br><br>- Revert some breakages caused by<br>  d159ec579c01b8fab532b3814c64b0ff8b2063ff. [Jose Diaz-Gonzalez]<br><br>  Closes #331<br><br>- Set default for command. [Jose Diaz-Gonzalez]<br><br>- #323 - fix tests to run with pika SelectConnection. [Tom Kregenbild]<br><br>- #323 - fix RabbitMQ transport _on_open_connection_error function to<br>  print connection errors. [Tom Kregenbild]<br><br>- #323 1. Add clear debug prints with queue size (one print every 1000<br>  items in order not to hurt performance) 2. If main queue is empty keep<br>  running and do nothing 3. In case of a timeout from main queue restart<br>  queue. [Tom Kregenbild]<br><br>- #323 - Change RabbitMQ pika to use Asynchronous SelectConnection<br>  instead of BlockingConnection for better performance. [Tom Kregenbild]<br><br>- #323 - add the ability to increase the number of Queue consumers by<br>  creating additional processes while running with --experimental flag.<br>  [Tom Kregenbild]<br><br>- #323 - add the ability to increase the number of Queue consumers by<br>  creating additional processes. [Tom Kregenbild]<br><br>- #323 - print current queue size and number of total number transports<br>  in debug mode in order to find problem in transport rate. [Tom<br>  Kregenbild]<br><br>34.0.0 (2015-07-24)<br>-------------------<br><br>- Added ssl-tcp key file support. [babbleshack]<br><br>- Rename configuration dir and debian bin to python-beaver. [David<br>  Moravek]<br><br>- Rename debian package back to python-beaver. [David Moravek]<br><br>- Debian packaging code review; thx @mnicky. [David Moravek]<br><br>- Improves debian packaging. [David Moravek]<br><br>- Fix tests when ZMQ is not installed. [David Moravek]<br><br>- Fix tests for python 2.7 (add funcsigs test dependency) [David<br>  Moravek]<br><br>- Move badge to below header. [Jose Diaz-Gonzalez]<br><br>- Add constants for data types, validate in init, use callback map.<br>  [Hector Castro]<br><br>- Move data type method conditional outside of loop. [Hector Castro]<br><br>- Add channel support to Redis transport. [Hector Castro]<br><br>  This changeset adds support for publishing log entries to a Redis<br>  channel, which is also supported by Logstash's Redis input.<br><br>  Beaver configuration files can now supply a `redis_data_type` key. Valid<br>  values for this key are `list` and `channel`. If left unset, the default<br>  is `list`.<br><br>  Attempts to resolve #266.<br><br><br>- Introduced a stomp transport for beaver using stomp.py. [Peter<br>  Lenderyou]<br><br>- Fix references to ConfigParser error classes. [Jose Diaz-Gonzalez]<br><br>- Redis transport: handle multiple connections and use them in round<br>  robin style. [musil]<br><br>- Fixes GELF format according to specs. [Marvin Frick]<br><br>  GELF formatted messages need to be \\0 ended. At least for sending over<br>  TCP.<br><br><br>- Kafka round robin partitioner. [David Moravek]<br><br>- Solve error: cannot convert argument to integer. [Theofilis George-<br>  Nektarios]<br><br>  See at #312<br><br>- Basic docs for GELF formatter. [Oleg Rekutin]<br><br>  Also fixes formatting issues with the immediately-preceding HTTP<br>  transport example section.<br><br><br>- Adds a GELF formatter. [Oleg Rekutin]<br><br>  short_message is truncated to 250 characters and only the first line is<br>  retained. Pair with the HTTP POST output to write directly to graylog2.<br><br><br>- Issue #305, accept any 2xx code for http_transport. [Oleg Rekutin]<br><br>33.2.0 (2015-03-11)<br>-------------------<br><br>- Improved kafka test. [Marcel Casado]<br><br>- Added example of kafka transport usage in the user docs. [Marcel<br>  Casado]<br><br>- Added placeholder \"dist\" directory to download kafka binaries. [Marcel<br>  Casado]<br><br>- Added integration test support for Kafka transport. [Marcel Casado]<br><br>- Wrapped kafka client init in a try catch. [Marcel Casado]<br><br>- Initial kafka transport impl. [Marcel Casado]<br><br>- Updating config examples and docs. [Jonathan Sabo]<br><br>- Adding support for sqs queues in different accounts. [Jonathan Sabo]<br><br>33.1.0 (2015-02-04)<br>-------------------<br><br>- Improved error message for missing logstash_version. [Florian Hopf]<br><br>  Added a comment that the version needs to be set in the config<br><br>- Specify stricter dependency on python-daemon, fixes #286. [Graham<br>  Floyd]<br><br>- Add message_batch size checking since SQS can only handle 256KiB in a<br>  batch. Flush queue if message_batch is 10 messages or &gt;= 250KiB.<br>  [Lance O'Connor]<br><br>- Explained valid values and meaning for rabbitmq_delivery_mode. [Fabio<br>  Coatti]<br><br>- Added documentation for rabbitmq_delivery_mode configuration<br>  parameter. [Fabio Coatti]<br><br>- A small change in except syntax. This should make happy python3 and<br>  work also in 2.6 and later. [Fabio Coatti]<br><br>- When sending a message, now we can tell rabbitmq which delivery mode<br>  we want, according to main configuration option<br>  rabbitmq_delivery_mode. [Fabio Coatti]<br><br>- Added configuration option for rabbitmq deliveryMode. Basically it<br>  works like a boolean, but having 1 and 2 as allowed values, we<br>  consider it integer and validate it as such. [Fabio Coatti]<br><br>- Newline removed. [Fabio Coatti]<br><br>- Added stanzas specific redis_namespace key to documentation. [Fabio<br>  Coatti]<br><br>- Added a space after comma, more compliant with python style guide.<br>  [Fabio Coatti]<br><br>- Revert \"ignored eric files\" [Fabio Coatti]<br><br>  This reverts commit ea2a6b27437570aeda3ee53b6c6ebd7ebb1f4f2a.<br><br>  as suggested, leave alone .gitignore :)<br><br><br>- This small commit allows to specify a redis namespace in file section<br>  of configuration file (stanzas). Basically, beaver checks if a<br>  redis_namespace is defined for the current file. If yes, it is used<br>  for the redis payload. If not (or null), beaver uses the<br>  redis_namespace value specified in global section. [Fabio Coatti]<br><br>- Added a section (stanza) configuration option in order to be able to<br>  specify a redis namespace. If set, it will override the namespace set<br>  in main section. Default is null. [Fabio Coatti]<br><br>- Ignored eric files. [Fabio Coatti]<br><br>- Remove `python-daemon` from requirements on win32. [Ryan Davis]<br><br>  If we're installing on windows, don't require `python-daemon`. This<br>  fixes a problem where trying to `pip install beaver` errors out when<br>  trying to install `python-daemon`.<br><br>  refs #141<br><br><br>- Use new repository name for travis-ci badge. [Jose Diaz-Gonzalez]<br><br>33.0.0 (2014-10-14)<br>-------------------<br><br>- Extend release script to support new, semver-tagged releases. [Jose<br>  Diaz-Gonzalez]<br><br>- Add gitchangelog.rc to fix changelog generation. [Jose Diaz-Gonzalez]<br><br>32 (2014-10-14)<br>---------------<br><br>- Allow for the config file to override the logfile's setting. [Aaron<br>  France]<br><br>- Force update of sincedb when beaver stop. [Pierre Fersing]<br><br>- Fixed sincedb_write_interval (Bugs #229). [Pierre Fersing]<br><br>- Fix config.get('ssh_options') [svengerlach]<br><br>  ssh_options could never be returned due to a wrong type check<br><br>- Add debian packaging based on dh-virtualenv. [Jose Diaz-Gonzalez]<br><br>- Zmq3 split HWM into SNDHWM/RCVHWM. Closes #246. [Pete Fritchman]<br><br>- Fix typo in usage.rst. [Hugo Lopes Tavares]<br><br>  s/logstash_verion/logstash_version/<br><br>- Fixed badge to point to master branch only. [Jose Diaz-Gonzalez]<br><br>31 (2014-01-25)<br>---------------<br><br>Fix<br>~~~<br><br>- Beaver user can't write its pid nor its log. [Mathieu Lecarme]<br><br>          Using a folder is the tactic used by Redis on Debian.<br><br><br>Other<br>~~~~~<br><br>- Add required spacing to readme for proper pypi doc support. [Jose<br>  Diaz-Gonzalez]<br><br>- Change release process to include processing of documentation. [Jose<br>  Diaz-Gonzalez]<br><br>- Use GlobSafeConfigParser to parse config files. [Clay Pence]<br><br>  In order to support all of the kinds of globs, pass GlobSafeConfigParser<br>  into the Configuration object so that it parses section headers<br>  correctly.<br><br>  Update dependency on conf_d<br><br>  Fix line spacing + trigger travis<br><br>  Remove chdir in test<br><br>  This should fix the unit test to run properly when run from the main<br>  directory.<br><br><br>- Fix redis_transport.py redis exception handling. Fixes #238. [Hugo<br>  Lopes Tavares]<br><br>- Attempt to fix memory leaks. Closes #186. [Jose Diaz-Gonzalez]<br><br>- Allow for newer versions of boto to be used. Closes #236. [Jose Diaz-<br>  Gonzalez]<br><br>- When shipping logs, use millisecond-precision timestamps. [Ryan Park]<br><br>  Logstash 1.3.2 has a problem with microsecond-precision timestamps in the<br>  @timestamp field, which is the default behavior of Python's .isoformat<br>  method. Logstash uses the JodaTime library to parse timestamps, and Joda<br>  doesn\u2019t support nanosecond timestamp resolution. As a result, Logstash<br>  1.3.2 throws an exception on every log item shipped from Beaver.<br><br>  There's a discussion about this issue in the logstash-users mailing list,<br>  including an example of the Logstash exception:<br>      https://groups.google.com/forum/#!topic/logstash-users/wIzdv15Iefs<br><br>  This patch reduces @timestamp to millisecond precision, which should<br>  correct the problem with Beaver 1.3.2.<br><br><br>- Improve compatibility with case-sensitive filesystems. [Jose Diaz-<br>  Gonzalez]<br><br>- Modify test cases to support logstash_version. [Jose Diaz-Gonzalez]<br><br>- Document usage of logstash_version. [Peter Burkholder]<br><br>- Add add_field_env option to the config file to allow fields to be<br>  added using values from the environment. [Lance O'Connor]<br><br>  Closes #214<br><br><br>- Add SSL/TLS support to the RabbitMQ transport. Closes #217. [Jonathan<br>  Harker]<br><br>- Added http transport option. Closes #218. [Jeff Bryner]<br><br>- Adding missing config file option 'rabbitmq_queue_durable'. [Daniel<br>  Whelan]<br><br>- `StrictRedis.from_url` is better than DIY-ing it. [Kristian Glass]<br><br>  Note currently `fakeredis` doesn't support `from_url` - this is blocking<br>  on https://github.com/jamesls/fakeredis/pull/29 being merged in (I've<br>  bumped version requirement in `tests.txt` accordingly)<br><br><br>- Python 2.6 ConfigParser does not handle non-string Fixed typo.<br>  [tommyulfsparre]<br><br>- Dont add empty object to input list. [tommyulfsparre]<br><br>- Import threading library in tail manager since we want to use it.<br>  [Chris Roberts]<br><br>- Add SSL to the TCP Transport. [Simon McCartney]<br><br>- Redirect all docs to readthedocs. Refs #150. [Jose Diaz-Gonzalez]<br><br>- Readthedocs support. Closes #150. [Jose Diaz-Gonzalez]<br><br>- Convert producer to process. Allow timed producer culling. [Chris<br>  Roberts]<br><br>- Make consumer check threaded to prevent wedge state. [Chris Roberts]<br><br>- Don't crash on a string decoding exception. [Adam Twardowski]<br><br>- Set transport as valid on connect (properly resets for reconnect)<br>  [Chris Roberts]<br><br>- Handle publication failures in the TCP transport correctly. [Kiall Mac<br>  Innes]<br><br>- Add config option to manipulate ssh_options. [Andreas Lappe]<br><br>  This option allows to pass all ssh options to the tunnel.<br><br><br>- Fix version lookup. [Jose Diaz-Gonzalez]<br><br>- Moved multiline_merge function to utils.py. [Pierre Fersing]<br><br>- Support for multi-line and tail_lines options. [Pierre Fersing]<br><br>- Support for multi-line events in tail-version. [Pierre Fersing]<br><br>- Support for multi-line events. [Pierre Fersing]<br><br>- Ignore invalid rawjson log. [Tomoyuki Sakurai]<br><br>  this ensures beaver keeps running even when other application logged<br>  logs in invalid json format.<br><br><br>- Removed duplicate self._current_host from @source field. Fixes #180.<br>  [Alexander Papaspyrou]<br><br>30 (2013-08-22)<br>---------------<br><br>- Use os._exit over sys.exit in signal handlers to quit cleanly.<br>  [Kristian Glass]<br><br>  As per<br>  http://thushw.blogspot.co.uk/2010/12/python-dont-use-sysexit-inside-signal.html<br>  the use of `sys.exit` inside the signal handlers means that a<br>  `SystemExit` exception is raised<br>  (http://docs.python.org/2/library/sys.html#sys.exit) which can be caught<br>  by try/except blocks that might have been executing at time of signal<br>  handling, resulting in beaver failing to quit<br><br><br>- Allow string escapes in delimiter. [Michael Mittelstadt]<br><br>  As far as I can tell, there is no way for me to represent a newline as<br>  a delimiter in a configuration file with ConfigParser. I want to do this:<br><br>        [/ephemeral_storage/logs/kind_of_special.log]<br>        tags: special<br>        type: special<br>        delimiter: \\n\\n<br><br>  As the log has a blank line between its multiline entries.<br><br>  My change allows that, by making delimiter not string-escaped until<br>  after the config file is parsed. I'm naive about python, so there is a<br>  strong possibility I've gone about it horribly wrong. This would also<br>  easily allow splitting on nulls, tabs, unicode characters and other<br>  things that ConfigParser may not find kosher.<br><br>  By doing this sort of multiline parsing with beaver, it allows one to<br>  run logstash without the multiline filter, which due to its lack of<br>  thread-safety, forces you to run logstash with only one worker thread.<br><br><br>- CONFIG_DIR to CONFD_PATH. [iyingchi]<br><br>- Added doc for -C option for config directory. [iyingchi]<br><br>- Fixed example in Readme.rst for sqs_aws_secret_key. [Jonathan Quail]<br><br>- Allow path to be None. [Lars Hansson]<br><br>  Allow path to be set empty (None) in the configuration filer. This way<br>  all files and globs can be configured in files in confd_path.<br><br><br>- Fix zmq transport tests. [Scott Smith]<br><br>- Move zmq address config parsing into _main_parser. [Scott Smith]<br><br>- Allow specifying multiple zmq addresses to bind/connect. [Scott Smith]<br><br>- Redis 2.4.11 is no longer available on Pypi. [Andrew Gross]<br><br>  Fixes issue #167<br><br>- Add a TCP transport. [Kiall Mac Innes]<br><br>- Isolate connection logic. Provide proper reconnect support. [Chris<br>  Roberts]<br><br>- Corrected documentation for exclude tag. Closes #157. [Jose Diaz-<br>  Gonzalez]<br><br>- Add missing sqlite3 module to documentation. [Andreas Lappe]<br><br>- Tests status. [Denis Orlikhin]<br><br>- Travis integration. [Denis Orlikhin]<br><br>- Tests fix (conf_d does work without existing file) [Denis Orlikhin]<br><br>- Implicit broken zmq error handling. [Denis Orlikhin]<br><br>29 (2013-05-24)<br>---------------<br><br>- Do not harcode path in TailManager. Closes #143. [Jose Diaz-Gonzalez]<br><br>- Use /etc/beaver/conf for path and provide conf.d example. Closes #149.<br>  [Jose Diaz-Gonzalez]<br><br>- Added mqtt as option in argparse configuration for the transport flag.<br>  [Jose Diaz-Gonzalez]<br><br>- Fixed broken MqttTransport naming. [Jose Diaz-Gonzalez]<br><br>- Refactored BeaverSubprocess to maintain the running command as an<br>  attribute. [Jose Diaz-Gonzalez]<br><br>- Properly parse the beaver conf.d path for new sections. Closes #144.<br>  Closes #145. Refs #107. [Jose Diaz-Gonzalez]<br><br>- Use a Buffered Tokenizer to read large/fast incoming log input. Refs<br>  #135. Refs #105. [Jose Diaz-Gonzalez]<br><br>- Close queue after worker has been stopped. Refs #135. [Jose Diaz-<br>  Gonzalez]<br><br>- Wrap manager.close() call in try/except to mimic the worker<br>  dispatcher. [Jose Diaz-Gonzalez]<br><br>- Properly parse out the port from the `ssh_tunnel` option. Closes #142.<br>  [Jose Diaz-Gonzalez]<br><br>- Subclass the BaseLog class in BeaverSubprocess. Refs #142. [Jose Diaz-<br>  Gonzalez]<br><br>- Move base_log module higher up in hierarchy. Refs #142. [Jose Diaz-<br>  Gonzalez]<br><br>- Disable daemonization on the windows platform. Closes #141. [Jose<br>  Diaz-Gonzalez]<br><br>- Move file unwatching in old-style worker out of for-loop. Refs #139.<br>  [Jose Diaz-Gonzalez]<br><br>  Each worker has a `self._file_map` attribute which is a mapping of file ids to file data. When retrieving lines or checking on the status of the file, we use `iteritems()` which gives us a generator as opposed to a copy such as with `items()`. This generator allows us to iterate over the files without having issues where the file handle may open several times or other random Python issues.<br><br>  Using a generator also means that the set that we are iterating over should not change mid-iteration, which it does if a file is unwatched. To circumvent this, we should use a separate list to keep track of files we need to unwatch or rewatch, and do it out of band.<br><br>  We should also take care to catch `RuntimeError` which may arise when closing the Worker out of band - such as in the `cleanup` step of the worker dispatcher - but nowhere else.<br><br>  This should fix issues where logrotate suddenly causes files to disappear for a time and beaver tries to tail the file at the exact time it is being recreated.<br><br><br>- Typo in SQS docs. [Jonathan Quail]<br><br>- Remove ujson requirement. [Jose Diaz-Gonzalez]<br><br>  This allows users that do not have a compiler in their deployment area to install beaver.<br><br>  Closes #137<br><br>- Turn on logfile output when running in non-daemon contexts. Closes<br>  #131. [Jose Diaz-Gonzalez]<br><br>- Expand logging output path. Closes #133. [Jose Diaz-Gonzalez]<br><br>- Ensure logging to a file does not destroy regular logging. Closes<br>  #132. [Jose Diaz-Gonzalez]<br><br>- Properly handle unreadable files by logging a warning instead of<br>  crashing. Closes #130. [Jose Diaz-Gonzalez]<br><br>- Rename null_formatter to raw_formatter in BaseTransport class. [Jose<br>  Diaz-Gonzalez]<br><br>- Ensure that the RedisTransport calls the super invalidate method. Refs<br>  #93. [Jose Diaz-Gonzalez]<br><br>- Fix issue where input type was not being detected properly. [Jose<br>  Diaz-Gonzalez]<br><br>- Use logfile flag for sending all output to a file in daemon contexts.<br>  [Jose Diaz-Gonzalez]<br><br>- Expand path for pidfile creation. [Jose Diaz-Gonzalez]<br><br>- Properly handle redis reconnects when the datastore becomes<br>  unreacheable. Refs #93. [Jose Diaz-Gonzalez]<br><br>- 'type' instead of 'exchange_type' in recent pika vers. [Pravir<br>  Chandra]<br><br>- Adding options to make queues durable and HA. [Pravir Chandra]<br><br>- Respect stat_interval file configuration in stable worker. [Jose Diaz-<br>  Gonzalez]<br><br>- Unified configuration file using conf_d module. [Jose Diaz-Gonzalez]<br><br>  This change adds support for a conf.d directory - configured only via the `--confd-path` flag - which allows beaver to read configuration from multiple files.<br><br>  Please note that the primary `beaver` stanza MUST be located in the file specified by the `--configfile` argument. Any other such `beaver` stanzas will be ignored.<br><br>  This change also unifies the `BeaverConfig` and `FileConfig` classes, and simplifies the api for retrieving global vs file-specific data.<br><br>  Please note that this commit BREAKS custom transport classes, as the interface for creating a transport class has changed. If you are referencing a `file_config.get(field, filename)` anywhere, please omit this and refer to `beaver_config.get_field(field, filename)`.<br><br>  Closes #107<br><br><br>- Hack to prevent stupid TypeError: 'NoneType' when running tests via<br>  setup.py. [Jose Diaz-Gonzalez]<br><br>- Properly handle rotated files on Darwin architectures. [Jose Diaz-<br>  Gonzalez]<br><br>- Log to debug instead of warning for file reloading on Darwin<br>  architectures. [Jose Diaz-Gonzalez]<br><br>- Speed up experimental worker. [Jose Diaz-Gonzalez]<br><br>  - Removed inline sleep call, which slowed down passes n*0.1 seconds, where n is the number of files being tailed<br>  - Inline methods that update data structures which should speed up larger installations<br>  - Make self.active() an attribute lookup instead of a method call<br><br><br>- Use latest version of message pack interface (0.3.0). Closes #128.<br>  [Jose Diaz-Gonzalez]<br><br>- Alternative for reading python requirements. [Justin Lambert]<br><br>- Fix options sent from original worker to queue. Refs #119. [Jose Diaz-<br>  Gonzalez]<br><br>- Allow users to ignore the results of a copytruncate from logrotate.<br>  Refs #105. [Jose Diaz-Gonzalez]<br><br>- Fix rpm package building. Closes #123. [Jose Diaz-Gonzalez]<br><br>- Added experimental tail-version of beaver. [Jose Diaz-Gonzalez]<br><br>- Beginning work to move from an omniscient worker to individual tail<br>  objects. [Jose Diaz-Gonzalez]<br><br>- Fix kwargs call. [Jose Diaz-Gonzalez]<br><br>- Add formatting to mqtt transport. Closes #115. [Jose Diaz-Gonzalez]<br><br>- Retrieve more data from callback to minimize dictionary lookups. [Jose<br>  Diaz-Gonzalez]<br><br>- Prefer single quotes to double quotes where possible. [Jose Diaz-<br>  Gonzalez]<br><br>- Ensure stat_interval and tail_lines are both integer values. [Jose<br>  Diaz-Gonzalez]<br><br>- Alphabetize config variables for file_config. [Jose Diaz-Gonzalez]<br><br>- Ensure that debug flag is a boolean. [Jose Diaz-Gonzalez]<br><br>- Follow logstash covention for 'format' instead of 'message_format'<br>  [Jose Diaz-Gonzalez]<br><br>- Use passed in 'ignore_empty' field instead of a file_config lookup in<br>  queue module. [Jose Diaz-Gonzalez]<br><br>- Prefer discover_interval over update_file_mapping_time. [Jose Diaz-<br>  Gonzalez]<br><br>- Fix TransportException import. Closes #122. [Jose Diaz-Gonzalez]<br><br>- Auto-reconnect mechanism for the SSH tunnel. [Michael Franz Aigner]<br><br>- Use an alternative method of reading in requirements. Refs #120. [Jose<br>  Diaz-Gonzalez]<br><br>- Fix import of REOPEN_FILES constant in dispatcher.py. [Jose Diaz-<br>  Gonzalez]<br><br>- Fix a PEP8 violation. [Jose Diaz-Gonzalez]<br><br>- Ensure all files are utf-8 encoded. [Jose Diaz-Gonzalez]<br><br>- Namespace transport classes in the transport module. [Jose Diaz-<br>  Gonzalez]<br><br>- Allow specifying debug mode via argument. [Jose Diaz-Gonzalez]<br><br>- Added thread-safety to datetime calls. [Jose Diaz-Gonzalez]<br><br>- Added support for message_format. Closes #91. [Jose Diaz-Gonzalez]<br><br>- Add msgpack_pure as fallback for C-Based msgpack package. [Jose Diaz-<br>  Gonzalez]<br><br>- Fix issues in sincedb implementation. Refs #116. [Jose Diaz-Gonzalez]<br><br>- Fix casting issue when checking start_position. [Jose Diaz-Gonzalez]<br><br>- Properly handle Queue.Full exceptions. [Jose Diaz-Gonzalez]<br><br>- More logging. [Jose Diaz-Gonzalez]<br><br>- Expand the sincedb path on configuration parse. [Jose Diaz-Gonzalez]<br><br>- Ignore since.db files. [Jose Diaz-Gonzalez]<br><br>- Simplified sincedb support to handle an edge case. Refs #116. [Jose<br>  Diaz-Gonzalez]<br><br>- Remove errant print. [Jose Diaz-Gonzalez]<br><br>- Added support for file exclusion in config stanzas. Closes #106. [Jose<br>  Diaz-Gonzalez]<br><br>- Added python regex exclusion support to eglob. Refs #106. [Jose Diaz-<br>  Gonzalez]<br><br>- PEP8. [Jose Diaz-Gonzalez]<br><br>- Added a tests directory with some sample tests from users. [Jose Diaz-<br>  Gonzalez]<br><br>- Convert the 'sincedb_write_interval' option to an integer. Refs #116.<br>  [Jose Diaz-Gonzalez]<br><br>- Moved logger call to a more intelligent spot. [Jose Diaz-Gonzalez]<br><br>- Ensure that we use the proper encoding when opening a file. Closes<br>  #104. [Jose Diaz-Gonzalez]<br><br>- Centralize file-reading using classmethod open() [Jose Diaz-Gonzalez]<br><br>- Fixed issue where tailed lines were not being properly sent to the<br>  callback. [Jose Diaz-Gonzalez]<br><br>- Remove unnecessary argument from Worke.__init__() [Jose Diaz-Gonzalez]<br><br>- Force-parse non-unicode files using unicode_dammit. [Jose Diaz-<br>  Gonzalez]<br><br>- Set utf-8 as default encoding on all python files. [Jose Diaz-<br>  Gonzalez]<br><br>- Fixed pyflakes issues. [rtoma]<br><br>- Syntax fix of list. [rtoma]<br><br>- Raise an AssertionError when run in daemon without a pid path<br>  specified. Closes #112. [Jose Diaz-Gonzalez]<br><br>- Add support for ignoring empty lines. [Jose Diaz-Gonzalez]<br><br>- Properly cast boolean values from strings. [Jose Diaz-Gonzalez]<br><br>- Ensure all sections have the proper values on start. [Jose Diaz-<br>  Gonzalez]<br><br>- Ensure internal file_config state is updated. [Jose Diaz-Gonzalez]<br><br>- Pass in timestamp from worker class for more accurate timestamps at<br>  the cost of speed of sending. [Jose Diaz-Gonzalez]<br><br>- Centralize timestamp retrieval to base transport class. [Jose Diaz-<br>  Gonzalez]<br><br>- Added support for gzipped files. refs #39. [Jose Diaz-Gonzalez]<br><br>- Added support for sqlite3-based sincedb. Refs #6 and #39. [Jose Diaz-<br>  Gonzalez]<br><br>- Refactored worker so as to allow further data to be added to the<br>  file_map. [Jose Diaz-Gonzalez]<br><br>- Refactor seek_to_end to properly support file tailing. [Jose Diaz-<br>  Gonzalez]<br><br>- Added support for pubsub zmq. [Jose Diaz-Gonzalez]<br><br>- Added support for mosquitto transport. [Jose Diaz-Gonzalez]<br><br>- Added support for specifying file encoding, using io.open vs os.open.<br>  [Jose Diaz-Gonzalez]<br><br>- Fix issue where a field may not exist in the data. [Jose Diaz-<br>  Gonzalez]<br><br>- Added support for rawjson format. [Jose Diaz-Gonzalez]<br><br>- Fixed zeromq tests. [Jose Diaz-Gonzalez]<br><br>- Added SQS transport. [Jonathan Quail]<br><br>- Fixing outdated transport docs. [Morgan Delagrange]<br><br>28 (2013-03-05)<br>---------------<br><br>- BeaverSubprocess is now a new-style class. Fixes ssh_tunneling. [Jose<br>  Diaz-Gonzalez]<br><br>27 (2013-03-05)<br>---------------<br><br>- Fix issue where super method was not called in BeaverSshTunnel. [Jose<br>  Diaz-Gonzalez]<br><br>26 (2013-03-05)<br>---------------<br><br>- Add optional reconnect support for transports. Refs #93. [Jose Diaz-<br>  Gonzalez]<br><br>- Add a method for checking the validity of a Transport. Refs #93. [Jose<br>  Diaz-Gonzalez]<br><br>- Added a configurable subprocess poll sleep. [Jose Diaz-Gonzalez]<br><br>- Add a deafult sleep timeout to BeaverSubprocess polling. [Jose Diaz-<br>  Gonzalez]<br><br>- Use a larger sleep time to get around redis over ssh connection<br>  issues. [Jose Diaz-Gonzalez]<br><br>25 (2013-03-05)<br>---------------<br><br>- Use True instead of 1 for while check. [Jose Diaz-Gonzalez]<br><br>- Fix orphan child processes. Closes #103. [Jose Diaz-Gonzalez]<br><br>24 (2013-02-26)<br>---------------<br><br>- Ensure new files are added to a transports configuration. Closes #96.<br>  Closes #101. [Jose Diaz-Gonzalez]<br><br>- Allow float numbers for update_file_mapping_time. [Jose Diaz-Gonzalez]<br><br>- Fix invalid casting of boolean values. [Jose Diaz-Gonzalez]<br><br>- Perform all conversions in config.py. Closes #99. [Jose Diaz-Gonzalez]<br><br>23 (2013-02-20)<br>---------------<br><br>- Worker: pretty format debug message \"Iteration took %.6f\" [Sergey<br>  Shepelev]<br><br>- Zeromq_hwm int() conversion moved to config. [Denis Orlikhin]<br><br>- Zeromq_hwm config entry. [Denis Orlikhin]<br><br>- Zeromq_hwm support. [Denis Orlikhin]<br><br>- Add test requirements to setup. [Paul Garner]<br><br>- Allow beaver to accept custom transport classes. [Paul Garner]<br><br>- Rabbitmq_exchange_type option fixed in the README. [Xabier de Zuazo]<br><br>- Make beaver slightly more amenable to test mocking and sort of fix the<br>  broken zmq test. [Paul Garner]<br><br>22 (2013-01-15)<br>---------------<br><br>- Handle sigterm properly. Refs #87. [Jose Diaz-Gonzalez]<br><br>- Add --loglevel as alias for --output. Closes #92. [Jose Diaz-Gonzalez]<br><br>- Added logging on connection exception. [Thomas Morse]<br><br>- Adding exception when redis connection can't be confirmed. [William<br>  Jimenez]<br><br>- Add '--format raw' to pass through input unchanged. [Stephen Sugden]<br><br>- Fix string &amp; null formatters in beaver.transport. [Stephen Sugden]<br><br>  the inline definitions were expecting a self parameter, which is *not*<br>  passed\u00a0when you assign a function to an attribute on an object instance.<br><br>- Call file.readlines() with sizehint in a loop to avoid reading in<br>  massive files all at once. [Jose Diaz-Gonzalez]<br><br>21 (2013-01-04)<br>---------------<br><br>- Move runner into a dispatcher class to solve installation issues.<br>  [Jose Diaz-Gonzalez]<br><br>- Added note for Python 2.6+ support. [Jose Diaz-Gonzalez]<br><br>20 (2013-01-03)<br>---------------<br><br>- Copy the readme over to avoid pypi packaging warnings. [Jose Diaz-<br>  Gonzalez]<br><br>- Implement fully recursive file globing. [Brian L. Troutwine]<br><br>  Python's base glob.iglob does not operate as if globstar were in effect. To<br>  explain, let's say I have an erlang application with lager logs to<br><br>      /var/log/erl_app/lags.log<br>      /var/log/erl_app/console/YEAR_MONTH_DAY.log<br><br>  and webmachine logs to<br><br>      /var/log/erl_app/webmachine/access/YEAR_MONTH_DAY.log<br><br>  Prior to this commit, when configured with the path `/var/log/**/*.log` all<br>  webmachine logs would be ignored by beaver. This is no longer the case, to an<br>  arbitrary depth.<br><br>  Signed-off-by: Brian L. Troutwine &lt;brian@troutwine.us&gt;<br><br><br>19 (2013-01-01)<br>---------------<br><br>- Fix issue with supporting command line args. [Jose Diaz-Gonzalez]<br><br>18 (2012-12-31)<br>---------------<br><br>- Add timing debug information to the worker loop. [Jose Diaz-Gonzalez]<br><br>- Use redis pipelining when sending events. [Jose Diaz-Gonzalez]<br><br>- Formatting. [Jose Diaz-Gonzalez]<br><br>- Do not output debug statement for file_config.get call. [Jose Diaz-<br>  Gonzalez]<br><br>- Pass in logger object to create_ssh_tunnel() [Jose Diaz-Gonzalez]<br><br>17 (2012-12-28)<br>---------------<br><br>- Added missing python-daemon requirement. [Jose Diaz-Gonzalez]<br><br>16 (2012-12-27)<br>---------------<br><br>- Specify a max queue size of 100 to limit overrunning memory. [Jose<br>  Diaz-Gonzalez]<br><br>- Use multiprocessing for handling larger queue sizes. [Jose Diaz-<br>  Gonzalez]<br><br>  Previously there were issues where files that were updated frequently - such as varnish or server logs - would overwhelm the naive implementation of file.readlines() within Beaver. This would cause Beaver to slowly read larger and larger portions of a file before processing any of the lines, eventually causing Beaver to take forever to process log lines.<br><br>  This patch adds the ability to use an internal work queue for log lines. Whenever file.readlines() is called, the lines are placed in the queue, which is shared with a child process. The child process creates its own transport, allowing us to potentially create a Process Pool in the future to handle a larger queue size.<br><br>  Note that the limitation of file.readlines() reading in too many lines is still in existence, and may continue to cause issues for certain log files.<br><br><br>- Add default redis_password to BeaverConfig class. [Jose Diaz-Gonzalez]<br><br>- Fix missing underscore causing transport to break. [Norman Joyner]<br><br>- Implement redis auth support. [Norman Joyner]<br><br>- Add beaver init script for daemonization mode. [Jose Diaz-Gonzalez]<br><br>- Use python logger when using StdoutTransport. [Jose Diaz-Gonzalez]<br><br>- Add short arg flags for hostname and format. [Jose Diaz-Gonzalez]<br><br>- Add the ability to daemonize. Closes #79. [Jose Diaz-Gonzalez]<br><br>- Pass around a logger instance to all transports. [Jose Diaz-Gonzalez]<br><br>- Revert \"Added a lightweight Event class\" [Jose Diaz-Gonzalez]<br><br>  After deliberation, beaver is meant to be \"light-weight\". Lets leave<br>  the heavy-hitting to the big-boys.<br><br>  This reverts commit 1619d33ef4803c3fe910cf4ff197d0dd0039d2eb.<br><br><br>- Added a lightweight Event class. [Jose Diaz-Gonzalez]<br><br>  This class's sole responsibility will be the processing of a given line as an event.<br>  It's future goal will be to act as a lightweight implementation of the filter system within Logstash<br><br><br>- Remove argparse requirement for python 2.7 and above. [Jose Diaz-<br>  Gonzalez]<br><br>15 (2012-12-25)<br>---------------<br><br>- Pull argument parsing out of beaver __init__.py. [Jose Diaz-Gonzalez]<br><br>- Move app-running into __init__.py. [Jose Diaz-Gonzalez]<br><br>- Standardize on _parse() as method for parsing config. [Jose Diaz-<br>  Gonzalez]<br><br>- Automatically parse the path config option. [Jose Diaz-Gonzalez]<br><br>- Remove extensions argument on Worker class. [Jose Diaz-Gonzalez]<br><br>  This argument was only used when no globs were specified in a config file.<br>  Since it is not configurable, there is no sense leaving around the extra logic.<br><br><br>- Remove extra callback invocation on readlines. [Jose Diaz-Gonzalez]<br><br>- Remove extra file_config module. [Jose Diaz-Gonzalez]<br><br>- General code reorganization. [Jose Diaz-Gonzalez]<br><br>  Move both BeaverConfig and FileConfig into a single class<br><br>  Consolidated run_worker code with code in beaver binary file. This will create a clearer path for Exception handling, as it is now the responsibility of the calling class, allowing us to remove duplicative exception handling code.<br><br>  Added docstrings to many fuctions and methods<br><br>  Moved extra configuration and setup code to beaver.utils module. In many cases, code was added hastily before.<br><br>  Made many logger calls debug as opposed to info. The info level should be generally reserved for instances where files are watched, unwatched, or some change in the file state has occurred.<br><br><br>- Remove duplicative and old beaver instructions from binary. [Jose<br>  Diaz-Gonzalez]<br><br>- Remove unnecessary passing of ssh_tunnel subprocess. [Jose Diaz-<br>  Gonzalez]<br><br>- Added docstrings to ssh_tunnel module. [Jose Diaz-Gonzalez]<br><br>- Follow convention of underscore for object properties. [Jose Diaz-<br>  Gonzalez]<br><br>- Follow convention of underscore for object properties. [Jose Diaz-<br>  Gonzalez]<br><br>- Added a NullFormatter. [Jose Diaz-Gonzalez]<br><br>  Useful for cases where we do not want any extra overhead on message formatting<br><br><br>- Refactored message formatting in base Transport class. [Jose Diaz-<br>  Gonzalez]<br><br>  We now use a `_formatter` property on the Transport class which<br>  will properly process the message for output as the user expects.<br><br>  In the case of string output, we define a custom formatter using an<br>  anonymous function and specify that as the formatter.<br><br><br>- Moved create_transport to transport module. [Jose Diaz-Gonzalez]<br><br>- Moved create_ssh_tunnel to ssh_tunnel module. [Jose Diaz-Gonzalez]<br><br>- Fixed order of beaver_config and file_config in args. [Jose Diaz-<br>  Gonzalez]<br><br>- Reduce overhead of parsing configuration for globs and files. [Jose<br>  Diaz-Gonzalez]<br><br>- Removed ordereddict dependency. [Jose Diaz-Gonzalez]<br><br>- Do not output info level when outputing version. [Jose Diaz-Gonzalez]<br><br>- Allow usage of ujson &gt;= 1.19. Closes #76. [Jose Diaz-Gonzalez]<br><br>14 (2012-12-18)<br>---------------<br><br>- Removed erroneous redundant code. [Jose Diaz-Gonzalez]<br><br>- Workaround for differing iteration implementation in Python 2.6. [Jose<br>  Diaz-Gonzalez]<br><br>- Properly detect non-linux platforms. [Jose Diaz-Gonzalez]<br><br>- Improve Python 2.6 support. [Jose Diaz-Gonzalez]<br><br>- Fix broken python readme. [Jose Diaz-Gonzalez]<br><br>13 (2012-12-17)<br>---------------<br><br>- Fixed certain environment variables. [Jose Diaz-Gonzalez]<br><br>- SSH Tunnel Support. [Jose Diaz-Gonzalez]<br><br>  This code should allow us to create an ssh tunnel between two distinct servers for the purposes of sending and receiving data.<br><br>  This is useful in certain cases where you would otherwise need to whitelist in your Firewall or iptables setup, such as when running in two different regions on AWS.<br><br><br>- Allow for initial connection lag. Helpful when waiting for an SSH<br>  proxy to connect. [Jose Diaz-Gonzalez]<br><br>- Fix issue where certain config defaults were of an improper value.<br>  [Jose Diaz-Gonzalez]<br><br>- Allow specifying host via flag. Closes #70. [Jose Diaz-Gonzalez]<br><br>12 (2012-12-17)<br>---------------<br><br>- Reload tailed files on non-linux platforms. [Jose Diaz-Gonzalez]<br><br>  Python has an issue on OS X were the underlying C implementation of<br>  `file.read()` caches the EOF, therefore causing `readlines()` to only<br>  work once. This happens to also fail miserably when you are seeking to<br>  the end before calling readlines.<br><br>  This fix solves the issue by constantly re-reading the files changed.<br><br>  Note that this also causes debug mode to be very noisy on OS X. We all<br>  have to make sacrifices...<br><br><br>- Deprecate all environment variables. [Jose Diaz-Gonzalez]<br><br>  This shifts configuration management into the BeaverConfig class.<br>  Note that we currently throw a warning if you are using environment<br>  variables.<br><br>  Refs #72<br>  Closes #60<br><br><br>- Warn when using deprecated ENV variables for configuration. Refs #72.<br>  [Jose Diaz-Gonzalez]<br><br>- Minor changes for PEP8 conformance. [Jose Diaz-Gonzalez]<br><br>11 (2012-12-16)<br>---------------<br><br>- Add optional support for socket.getfqdn. [Jeremy Kitchen]<br><br>  For my setup I need to have the fqdn used at all times since my<br>  hostnames are the same but the environment (among other things) is<br>  found in the rest of the FQDN.<br><br>  Since just changing socket.gethostname to socket.getfqdn has lots of<br>  potential for breakage, and socket.gethostname doesn't always return an<br>  FQDN, it's now an option to explicitly always use the fqdn.<br><br>  Fixes #68<br><br><br>- Check for log file truncation fixes #55. [Jeremy Kitchen]<br><br>  This adds a simple check for log file truncation and resets the watch<br>  when detected.<br><br>  There do exist 2 race conditions here:<br>  1. Any log data written prior to truncation which beaver has not yet<br>     read and processed is lost. Nothing we can do about that.<br>  2. Should the file be truncated, rewritten, and end up being larger than<br>     the original file during the sleep interval, beaver won't detect<br>     this. After some experimentation, this behavior also exists in GNU<br>     tail, so I'm going to call this a \"don't do that then\" bug :)<br><br>     Additionally, the files beaver will most likely be called upon to<br>     watch which may be truncated are generally going to be large enough<br>     and slow-filling enough that this won't crop up in the wild.<br><br><br>- Add a version number to beaver. [Jose Diaz-Gonzalez]<br><br>10 (2012-12-15)<br>---------------<br><br>- Fixed package name. [Jose Diaz-Gonzalez]<br><br>- Regenerate CHANGES.rst on release. [Jose Diaz-Gonzalez]<br><br>- Adding support for /path/{foo,bar}.log. [Josh Braegger]<br><br>- Consistency. [Chris Faulkner]<br><br>- Stating the obvious. [Chris Faulkner]<br><br>- Grist for the mill. [Chris Faulkner]<br><br>- Drop redundant README.txt. [Chris Faulkner]<br><br>- Ignore file errors in unwatch method -- the file might not exists.<br>  [Josh Braegger]<br><br>- Unwatch file when encountering a stale NFS handle. When an NFS file<br>  handle becomes stale (ie, file was removed), it was crashing beaver.<br>  Need to just unwatch file. [Josh Braegger]<br><br>- Consistency. [Chris Faulkner]<br><br>- Pull install requirements from requirements/base.txt so they don't get<br>  out of sync. [Chris Faulkner]<br><br>- Include changelog in setup. [Chris Faulkner]<br><br>- Convert changelog to RST. [Chris Faulkner]<br><br>- Actually show the license. [Chris Faulkner]<br><br>- Consistent casing. [Chris Faulkner]<br><br>- Don't use empty string for tag when no tags configured in config file.<br>  [Stylianos Modes]<br><br>- Making 'mode' option work for zmqtransport.  Adding setuptools and<br>  tests (use ./setup.py nosetests).  Adding .gitignore. [Josh Braegger]<br><br>9 (2012-11-28)<br>--------------<br><br>- More release changes. [Jose Diaz-Gonzalez]<br><br>- Fixed deprecated warning when declaring exchange type. [Rafael<br>  Fonseca]<br><br>8 (2012-11-28)<br>--------------<br><br>- Removed deprecated usage of e.message. [Rafael Fonseca]<br><br>- Fixed exception trapping code. [Rafael Fonseca]<br><br>- Added some resiliency code to rabbitmq transport. [Rafael Fonseca]<br><br>7 (2012-11-28)<br>--------------<br><br>- Added a helper script for creating releases. [Jose Diaz-Gonzalez]<br><br>- Partial fix for crashes caused by globbed files. [Jose Diaz-Gonzalez]<br><br>6 (2012-11-26)<br>--------------<br><br>- Fix issue where polling for files was done incorrectly. [Jose Diaz-<br>  Gonzalez]<br><br>- Added ubuntu init.d example config. [Jose Diaz-Gonzalez]<br><br>5 (2012-11-26)<br>--------------<br><br>- Try to poll for files on startup instead of throwing exceptions.<br>  Closes #45. [Jose Diaz-Gonzalez]<br><br>- Added python 2.6 to classifiers. [Jose Diaz-Gonzalez]<br><br>4 (2012-11-26)<br>--------------<br><br>- Remove unused local vars. [Jose Diaz-Gonzalez]<br><br>- Allow rabbitmq exchange type and durability to be configured. [Jose<br>  Diaz-Gonzalez]<br><br>- Remove unused import. [Jose Diaz-Gonzalez]<br><br>- Formatted code to fix PEP8 violations. [Jose Diaz-Gonzalez]<br><br>- Use alternate dict syntax for Python 2.6 support. Closes #43. [Jose<br>  Diaz-Gonzalez]<br><br>- Fixed release date for version 3. [Jose Diaz-Gonzalez]<br><br>3 (2012-11-25)<br>--------------<br><br>- Added requirements files to manifest. [Jose Diaz-Gonzalez]<br><br>- Include all contrib files in release. [Jose Diaz-Gonzalez]<br><br>- Revert \"removed redundant README.txt\" to follow pypi standards. [Jose<br>  Diaz-Gonzalez]<br><br>  This reverts commit e667f63706e0af8bc82c0eac6eac43318144e107.<br><br><br>- Added bash startup script. Closes #35. [Jose Diaz-Gonzalez]<br><br>- Added an example supervisor config for redis. closes #34. [Jose Diaz-<br>  Gonzalez]<br><br>- Removed redundant README.txt. [Jose Diaz-Gonzalez]<br><br>- Added classifiers to package. [Jose Diaz-Gonzalez]<br><br>- Re-order workers. [Jose Diaz-Gonzalez]<br><br>- Re-require pika. [Jose Diaz-Gonzalez]<br><br>- Make zeromq installation optional. [Morgan Delagrange]<br><br>- Formatting. [Jose Diaz-Gonzalez]<br><br>- Added changes to changelog for version 3. [Jose Diaz-Gonzalez]<br><br>- Timestamp in ISO 8601 format with the \"Z\" sufix to express UTC.<br>  [Xabier de Zuazo]<br><br>- Adding udp support. [Morgan Delagrange]<br><br>- Lpush changed to rpush on redis transport. This is required to always<br>  read the events in the correct order on the logstash side. See: https:<br>  //github.com/logstash/logstash/blob/6f745110671b5d9d66bf082fbfed99d145<br>  af4620/lib/logstash/outputs/redis.rb#L4. [Xabier de Zuazo]<br><br>2 (2012-10-25)<br>--------------<br><br>- Example upstart script. [Michael D'Auria]<br><br>- Fixed a few more import statements. [Jose Diaz-Gonzalez]<br><br>- Fixed binary call. [Jose Diaz-Gonzalez]<br><br>- Refactored logging. [Jose Diaz-Gonzalez]<br><br>- Improve logging. [Michael D'Auria]<br><br>- Removed unnecessary print statements. [Jose Diaz-Gonzalez]<br><br>- Add default stream handler when transport is stdout. Closes #26. [bear<br>  (Mike Taylor)]<br><br>- Better exception handling for unhandled exceptions. [Michael D'Auria]<br><br>- Handle the case where the config file is not present. [Michael<br>  D'Auria]<br><br>- Fix wrong addfield values. [Alexander Fortin]<br><br>- Add add_field to config example. [Alexander Fortin]<br><br>- Add support for add_field into config file. [Alexander Fortin]<br><br>- Minor readme updates. [Jose Diaz-Gonzalez]<br><br>- Add support for type reading from INI config file. [Alexander Fortin]<br><br>  Add support for symlinks in config file<br><br>  Add support for file globbing in config file<br><br>  Add support for tags<br><br>  - a little bit of refactoring, move type and tags check down into<br>    transport class<br>  - create config object (reading /dev/null) even if no config file<br>    has been given via cli<br><br>  Add documentation for INI file to readme<br><br>  Remove unused json library<br><br>  Conflicts:<br>  \tREADME.rst<br><br><br>- Support globs in file paths. [Darren Worrall]<br><br>- When sending data over the wire, use UTC timestamps. [Darren Worrall]<br><br>- Added msgpack support. [Jose Diaz-Gonzalez]<br><br>- Use the python logging framework. [Jose Diaz-Gonzalez]<br><br>- Fixed Transport.format() method. [Jose Diaz-Gonzalez]<br><br>- Properly parse BEAVER_FILES env var. [Jose Diaz-Gonzalez]<br><br>- Refactor transports. [Jose Diaz-Gonzalez]<br><br>  - Fix the json import to use the fastest json module available<br>  - Move formatting into Transport class<br><br><br>- Attempt to fix defaults from env variables. [Jose Diaz-Gonzalez]<br><br>- Fix README and beaver CLI help to reference correct RABBITMQ_HOST<br>  environment variable. [jdutton]<br><br>- Add RabbitMQ support. [Alexander Fortin]<br><br>- Added real-world example of beaver usage for tailing a file. [Jose<br>  Diaz-Gonzalez]<br><br>- Removed unused argument. [Jose Diaz-Gonzalez]<br><br>- Ensure that python-compatible readme is included in package. [Jose<br>  Diaz-Gonzalez]<br><br>- Fix variable naming and timeout for redis transport. [Jose Diaz-<br>  Gonzalez]<br><br>- Installation instructions. [Jose Diaz-Gonzalez]<br><br>- Use restructured text for readme instead of markdown. [Jose Diaz-<br>  Gonzalez]<br><br>- Removed unnecessary .gitignore. [Jose Diaz-Gonzalez]<br><br>1 (2012-08-06)<br>--------------<br><br>- Moved app into python package format. [Jose Diaz-Gonzalez]<br><br>- Moved binary beaver.py to bin/beaver, as per python packaging. [Jose<br>  Diaz-Gonzalez]<br><br>- Moved around transports to be independent of each other. [Jose Diaz-<br>  Gonzalez]<br><br>- Reorder transports. [Jose Diaz-Gonzalez]<br><br>- Rewrote run_worker to throw exception if all transport options have<br>  been exhausted. [Jose Diaz-Gonzalez]<br><br>- Rename Amqp -&gt; Zmq to avoid confusion with RabbitMQ. [Alexander<br>  Fortin]<br><br>- Added choices to the --transport argument. [Jose Diaz-Gonzalez]<br><br>- Fixed derpy formatting. [Jose Diaz-Gonzalez]<br><br>- Added usage to the readme. [Jose Diaz-Gonzalez]<br><br>- Support usage of environment variables instead of arguments. [Jose<br>  Diaz-Gonzalez]<br><br>- Fixed files argument parsing. [Jose Diaz-Gonzalez]<br><br>- One does not simply license all the things. [Jose Diaz-Gonzalez]<br><br>- Add todo to readme. [Jose Diaz-Gonzalez]<br><br>- Added version to pyzmq. [Jose Diaz-Gonzalez]<br><br>- Added license. [Jose Diaz-Gonzalez]<br><br>- Reordered imports. [Jose Diaz-Gonzalez]<br><br>- Moved all transports to beaver/transports.py. [Jose Diaz-Gonzalez]<br><br>- Calculate current timestamp at most once per callback fired. [Jose<br>  Diaz-Gonzalez]<br><br>- Modified transports to include proper information for ingestion in<br>  logstash. [Jose Diaz-Gonzalez]<br><br>- Fixed package imports. [Jose Diaz-Gonzalez]<br><br>- Removed another compiled python file. [Jose Diaz-Gonzalez]<br><br>- Use ujson instead of simplejson. [Jose Diaz-Gonzalez]<br><br>- Ignore compiled python files. [Jose Diaz-Gonzalez]<br><br>- Fixed imports. [Jose Diaz-Gonzalez]<br><br>- Fixed up readme instructions. [Jose Diaz-Gonzalez]<br><br>- Refactor transports so that connections are no longer global. [Jose<br>  Diaz-Gonzalez]<br><br>- Readme and License. [Jose Diaz-Gonzalez]<br><br>- First commit. [Jose Diaz-Gonzalez]\n          </div>"}, "last_serial": 1824222, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0fc74c2689484db97052915adb2b6423", "sha256": "3f8219ebdb97eb4c0ac4245e1b4934c02847a40926365d509b4ae7f8f85ee4f0"}, "downloads": -1, "filename": "Gribble-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0fc74c2689484db97052915adb2b6423", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88431, "upload_time": "2015-11-19T11:34:39", "upload_time_iso_8601": "2015-11-19T11:34:39.277464Z", "url": "https://files.pythonhosted.org/packages/ac/8b/db1075e6c0761cf5fe10ef97f8b6aca175460d5d644246f1a27c47202fbd/Gribble-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0fc74c2689484db97052915adb2b6423", "sha256": "3f8219ebdb97eb4c0ac4245e1b4934c02847a40926365d509b4ae7f8f85ee4f0"}, "downloads": -1, "filename": "Gribble-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0fc74c2689484db97052915adb2b6423", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88431, "upload_time": "2015-11-19T11:34:39", "upload_time_iso_8601": "2015-11-19T11:34:39.277464Z", "url": "https://files.pythonhosted.org/packages/ac/8b/db1075e6c0761cf5fe10ef97f8b6aca175460d5d644246f1a27c47202fbd/Gribble-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:15 2020"}