{"info": {"author": "The scikit-optimize contributors", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "\n|Logo|\n\n|pypi| |conda| |Travis Status| |CircleCI Status| |binder| |gitter| |Zenodo DOI|\n\nScikit-Optimize\n===============\n\nScikit-Optimize, or ``skopt``, is a simple and efficient library to\nminimize (very) expensive and noisy black-box functions. It implements\nseveral methods for sequential model-based optimization. ``skopt`` aims\nto be accessible and easy to use in many contexts.\n\nThe library is built on top of NumPy, SciPy and Scikit-Learn.\n\nWe do not perform gradient-based optimization. For gradient-based\noptimization algorithms look at\n``scipy.optimize``\n`here <http://docs.scipy.org/doc/scipy/reference/optimize.html>`_.\n\n.. figure:: https://github.com/scikit-optimize/scikit-optimize/blob/master/media/bo-objective.png\n   :alt: Approximated objective\n\nApproximated objective function after 50 iterations of ``gp_minimize``.\nPlot made using ``skopt.plots.plot_objective``.\n\nImportant links\n---------------\n\n-  Static documentation - `Static\n   documentation <https://scikit-optimize.github.io/>`__\n-  Example notebooks - can be found in the\n   `examples directory <https://github.com/scikit-optimize/scikit-optimize/tree/master/examples>`_.\n-  Issue tracker -\n   https://github.com/scikit-optimize/scikit-optimize/issues\n-  Releases - https://pypi.python.org/pypi/scikit-optimize\n\nInstall\n-------\n\nThe latest released version of scikit-optimize is v0.7.2, which you can install\nwith:\n::\n\n    pip install scikit-optimize\n\nThis installs an essential version of scikit-optimize. To install scikit-optimize\nwith plotting functionality, you can instead do:\n::\n\n    pip install 'scikit-optimize[plots]'\n\nThis will install matplotlib along with scikit-optimize.\n\nIn addition there is a `conda-forge <https://conda-forge.org/>`_ package\nof scikit-optimize:\n::\n\n    conda install -c conda-forge scikit-optimize\n\nUsing conda-forge is probably the easiest way to install scikit-optimize on\nWindows.\n\n\nGetting started\n---------------\n\nFind the minimum of the noisy function ``f(x)`` over the range\n``-2 < x < 2`` with ``skopt``:\n\n.. code:: python\n\n    import numpy as np\n    from skopt import gp_minimize\n\n    def f(x):\n        return (np.sin(5 * x[0]) * (1 - np.tanh(x[0] ** 2)) +\n                np.random.randn() * 0.1)\n\n    res = gp_minimize(f, [(-2.0, 2.0)])\n\n\nFor more control over the optimization loop you can use the ``skopt.Optimizer``\nclass:\n\n.. code:: python\n\n    from skopt import Optimizer\n\n    opt = Optimizer([(-2.0, 2.0)])\n\n    for i in range(20):\n        suggested = opt.ask()\n        y = f(suggested)\n        opt.tell(suggested, y)\n        print('iteration:', i, suggested, y)\n\n\nRead our `introduction to bayesian\noptimization <https://scikit-optimize.github.io/notebooks/bayesian-optimization.html>`__\nand the other\n`examples <https://github.com/scikit-optimize/scikit-optimize/tree/master/examples>`__.\n\n\nDevelopment\n-----------\n\nThe library is still experimental and under heavy development. Checkout\nthe `next\nmilestone <https://github.com/scikit-optimize/scikit-optimize/milestone/6>`__\nfor the plans for the next release or look at some `easy\nissues <https://github.com/scikit-optimize/scikit-optimize/issues?q=is%3Aissue+is%3Aopen+label%3AEasy>`__\nto get started contributing.\n\nThe development version can be installed through:\n\n::\n\n    git clone https://github.com/scikit-optimize/scikit-optimize.git\n    cd scikit-optimize\n    pip install -e.\n\nRun all tests by executing ``pytest`` in the top level directory.\n\nTo only run the subset of tests with short run time, you can use ``pytest -m 'fast_test'`` (``pytest -m 'slow_test'`` is also possible). To exclude all slow running tests try ``pytest -m 'not slow_test'``.\n\nThis is implemented using pytest `attributes <https://docs.pytest.org/en/latest/mark.html>`__. If a tests runs longer than 1 second, it is marked as slow, else as fast.\n\nAll contributors are welcome!\n\n\nMaking a Release\n~~~~~~~~~~~~~~~~\n\nThe release procedure is almost completely automated. By tagging a new release\ntravis will build all required packages and push them to PyPI. To make a release\ncreate a new issue and work through the following checklist:\n\n* update the version tag in ``__init__.py``\n* update the version tag mentioned in the README\n* check if the dependencies in ``setup.py`` are valid or need unpinning\n* check that the ``CHANGELOG.md`` is up to date\n* did the last build of master succeed?\n* create a `new release <https://github.com/scikit-optimize/scikit-optimize/releases>`__\n* ping `conda-forge <https://github.com/conda-forge/scikit-optimize-feedstock>`__\n\nBefore making a release we usually create a release candidate. If the next\nrelease is v0.X then the release candidate should be tagged v0.Xrc1 in\n``__init__.py``. Mark a release candidate as a \"pre-release\"\non GitHub when you tag it.\n\n\nCommercial support\n------------------\n\nFeel free to `get in touch <mailto:tim@wildtreetech.com>`_ if you need commercial\nsupport or would like to sponsor development. Resources go towards paying\nfor additional work by seasoned engineers and researchers.\n\n\nMade possible by\n----------------\n\nThe scikit-optimize project was made possible with the support of\n\n.. image:: https://avatars1.githubusercontent.com/u/18165687?v=4&s=128\n   :alt: Wild Tree Tech\n   :target: http://wildtreetech.com\n\n.. image:: https://i.imgur.com/lgxboT5.jpg\n    :alt: NYU Center for Data Science\n    :target: https://cds.nyu.edu/\n\n.. image:: https://i.imgur.com/V1VSIvj.jpg\n    :alt: NSF\n    :target: https://www.nsf.gov\n\n.. image:: https://i.imgur.com/3enQ6S8.jpg\n    :alt: Northrop Grumman\n    :target: http://www.northropgrumman.com/Pages/default.aspx\n\nIf your employer allows you to work on scikit-optimize during the day and would like\nrecognition, feel free to add them to the \"Made possible by\" list.\n\n\n.. |pypi| image:: https://img.shields.io/pypi/v/scikit-optimize.svg\n   :target: https://pypi.python.org/pypi/scikit-optimize\n.. |conda| image:: https://anaconda.org/conda-forge/scikit-optimize/badges/version.svg\n   :target: https://anaconda.org/conda-forge/scikit-optimize\n.. |Travis Status| image:: https://travis-ci.org/scikit-optimize/scikit-optimize.svg?branch=master\n   :target: https://travis-ci.org/scikit-optimize/scikit-optimize\n.. |CircleCI Status| image:: https://circleci.com/gh/scikit-optimize/scikit-optimize/tree/master.svg?style=shield&circle-token=:circle-token\n   :target: https://circleci.com/gh/scikit-optimize/scikit-optimize\n.. |Logo| image:: https://avatars2.githubusercontent.com/u/18578550?v=4&s=80\n.. |binder| image:: https://mybinder.org/badge.svg\n   :target: https://mybinder.org/v2/gh/scikit-optimize/scikit-optimize/master?filepath=examples\n.. |gitter| image:: https://badges.gitter.im/scikit-optimize/scikit-optimize.svg\n   :target: https://gitter.im/scikit-optimize/Lobby\n.. |Zenodo DOI| image:: https://zenodo.org/badge/54340642.svg\n   :target: https://zenodo.org/badge/latestdoi/54340642\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://scikit-optimize.github.io/", "keywords": "", "license": "BSD 3-clause", "maintainer": "", "maintainer_email": "", "name": "dh-scikit-optimize", "package_url": "https://pypi.org/project/dh-scikit-optimize/", "platform": "", "project_url": "https://pypi.org/project/dh-scikit-optimize/", "project_urls": {"Homepage": "https://scikit-optimize.github.io/"}, "release_url": "https://pypi.org/project/dh-scikit-optimize/0.8.dev0/", "requires_dist": ["joblib (>=0.11)", "pyaml (>=16.9)", "numpy (>=1.12.0)", "scipy (>=0.18.0)", "scikit-learn (>=0.19.1)", "matplotlib (>=2.0.0) ; extra == 'plots'"], "requires_python": "", "summary": "A Modified version of scikit-optimize a Sequential model-based optimization toolbox for DeepHyper.", "version": "0.8.dev0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e33c8b525ff87636f82ae49678495bf66d118492/68747470733a2f2f61766174617273322e67697468756275736572636f6e74656e742e636f6d2f752f31383537383535303f763d3426733d3830\"></p>\n<p><a href=\"https://pypi.python.org/pypi/scikit-optimize\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5324a832da804f62200ad2138ceec745ba373fed/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7363696b69742d6f7074696d697a652e737667\"></a> <a href=\"https://anaconda.org/conda-forge/scikit-optimize\" rel=\"nofollow\"><img alt=\"conda\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45fe6c7bd1fbc3008beff72a9f4abd3d2ac7c243/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f7363696b69742d6f7074696d697a652f6261646765732f76657273696f6e2e737667\"></a> <a href=\"https://travis-ci.org/scikit-optimize/scikit-optimize\" rel=\"nofollow\"><img alt=\"Travis Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b886785c9d9b1502296df6255fee374ef4445e5/68747470733a2f2f7472617669732d63692e6f72672f7363696b69742d6f7074696d697a652f7363696b69742d6f7074696d697a652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://circleci.com/gh/scikit-optimize/scikit-optimize\" rel=\"nofollow\"><img alt=\"CircleCI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f03883943f8b961362922710ec015e481e7d93d1/68747470733a2f2f636972636c6563692e636f6d2f67682f7363696b69742d6f7074696d697a652f7363696b69742d6f7074696d697a652f747265652f6d61737465722e7376673f7374796c653d736869656c6426636972636c652d746f6b656e3d3a636972636c652d746f6b656e\"></a> <a href=\"https://mybinder.org/v2/gh/scikit-optimize/scikit-optimize/master?filepath=examples\" rel=\"nofollow\"><img alt=\"binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86eb116bc9e98bea90d9454762d384d9cae5055c/68747470733a2f2f6d7962696e6465722e6f72672f62616467652e737667\"></a> <a href=\"https://gitter.im/scikit-optimize/Lobby\" rel=\"nofollow\"><img alt=\"gitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/09ecf73e93722cb90ec80cc202d625c7ce7995b9/68747470733a2f2f6261646765732e6769747465722e696d2f7363696b69742d6f7074696d697a652f7363696b69742d6f7074696d697a652e737667\"></a> <a href=\"https://zenodo.org/badge/latestdoi/54340642\" rel=\"nofollow\"><img alt=\"Zenodo DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a4b49c0011d057db355937f532217d13d312db99/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f35343334303634322e737667\"></a></p>\n<div id=\"scikit-optimize\">\n<h2>Scikit-Optimize</h2>\n<p>Scikit-Optimize, or <tt>skopt</tt>, is a simple and efficient library to\nminimize (very) expensive and noisy black-box functions. It implements\nseveral methods for sequential model-based optimization. <tt>skopt</tt> aims\nto be accessible and easy to use in many contexts.</p>\n<p>The library is built on top of NumPy, SciPy and Scikit-Learn.</p>\n<p>We do not perform gradient-based optimization. For gradient-based\noptimization algorithms look at\n<tt>scipy.optimize</tt>\n<a href=\"http://docs.scipy.org/doc/scipy/reference/optimize.html\" rel=\"nofollow\">here</a>.</p>\n<div>\n<img alt=\"Approximated objective\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b85ff59db00e4ec038524898c620ff9a176432b9/68747470733a2f2f6769746875622e636f6d2f7363696b69742d6f7074696d697a652f7363696b69742d6f7074696d697a652f626c6f622f6d61737465722f6d656469612f626f2d6f626a6563746976652e706e67\">\n</div>\n<p>Approximated objective function after 50 iterations of <tt>gp_minimize</tt>.\nPlot made using <tt>skopt.plots.plot_objective</tt>.</p>\n<div id=\"important-links\">\n<h3>Important links</h3>\n<ul>\n<li>Static documentation - <a href=\"https://scikit-optimize.github.io/\" rel=\"nofollow\">Static\ndocumentation</a></li>\n<li>Example notebooks - can be found in the\n<a href=\"https://github.com/scikit-optimize/scikit-optimize/tree/master/examples\" rel=\"nofollow\">examples directory</a>.</li>\n<li>Issue tracker -\n<a href=\"https://github.com/scikit-optimize/scikit-optimize/issues\" rel=\"nofollow\">https://github.com/scikit-optimize/scikit-optimize/issues</a></li>\n<li>Releases - <a href=\"https://pypi.python.org/pypi/scikit-optimize\" rel=\"nofollow\">https://pypi.python.org/pypi/scikit-optimize</a></li>\n</ul>\n</div>\n<div id=\"install\">\n<h3>Install</h3>\n<p>The latest released version of scikit-optimize is v0.7.2, which you can install\nwith:</p>\n<pre>pip install scikit-optimize\n</pre>\n<p>This installs an essential version of scikit-optimize. To install scikit-optimize\nwith plotting functionality, you can instead do:</p>\n<pre>pip install 'scikit-optimize[plots]'\n</pre>\n<p>This will install matplotlib along with scikit-optimize.</p>\n<p>In addition there is a <a href=\"https://conda-forge.org/\" rel=\"nofollow\">conda-forge</a> package\nof scikit-optimize:</p>\n<pre>conda install -c conda-forge scikit-optimize\n</pre>\n<p>Using conda-forge is probably the easiest way to install scikit-optimize on\nWindows.</p>\n</div>\n<div id=\"getting-started\">\n<h3>Getting started</h3>\n<p>Find the minimum of the noisy function <tt>f(x)</tt> over the range\n<tt><span class=\"pre\">-2</span> &lt; x &lt; 2</tt> with <tt>skopt</tt>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">skopt</span> <span class=\"kn\">import</span> <span class=\"n\">gp_minimize</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"mi\">5</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">tanh</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">))</span> <span class=\"o\">+</span>\n            <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"mf\">0.1</span><span class=\"p\">)</span>\n\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">gp_minimize</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"p\">[(</span><span class=\"o\">-</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">)])</span>\n</pre>\n<p>For more control over the optimization loop you can use the <tt>skopt.Optimizer</tt>\nclass:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">skopt</span> <span class=\"kn\">import</span> <span class=\"n\">Optimizer</span>\n\n<span class=\"n\">opt</span> <span class=\"o\">=</span> <span class=\"n\">Optimizer</span><span class=\"p\">([(</span><span class=\"o\">-</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">)])</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">):</span>\n    <span class=\"n\">suggested</span> <span class=\"o\">=</span> <span class=\"n\">opt</span><span class=\"o\">.</span><span class=\"n\">ask</span><span class=\"p\">()</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">suggested</span><span class=\"p\">)</span>\n    <span class=\"n\">opt</span><span class=\"o\">.</span><span class=\"n\">tell</span><span class=\"p\">(</span><span class=\"n\">suggested</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'iteration:'</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">suggested</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n</pre>\n<p>Read our <a href=\"https://scikit-optimize.github.io/notebooks/bayesian-optimization.html\" rel=\"nofollow\">introduction to bayesian\noptimization</a>\nand the other\n<a href=\"https://github.com/scikit-optimize/scikit-optimize/tree/master/examples\" rel=\"nofollow\">examples</a>.</p>\n</div>\n<div id=\"development\">\n<h3>Development</h3>\n<p>The library is still experimental and under heavy development. Checkout\nthe <a href=\"https://github.com/scikit-optimize/scikit-optimize/milestone/6\" rel=\"nofollow\">next\nmilestone</a>\nfor the plans for the next release or look at some <a href=\"https://github.com/scikit-optimize/scikit-optimize/issues?q=is%3Aissue+is%3Aopen+label%3AEasy\" rel=\"nofollow\">easy\nissues</a>\nto get started contributing.</p>\n<p>The development version can be installed through:</p>\n<pre>git clone https://github.com/scikit-optimize/scikit-optimize.git\ncd scikit-optimize\npip install -e.\n</pre>\n<p>Run all tests by executing <tt>pytest</tt> in the top level directory.</p>\n<p>To only run the subset of tests with short run time, you can use <tt>pytest <span class=\"pre\">-m</span> 'fast_test'</tt> (<tt>pytest <span class=\"pre\">-m</span> 'slow_test'</tt> is also possible). To exclude all slow running tests try <tt>pytest <span class=\"pre\">-m</span> 'not slow_test'</tt>.</p>\n<p>This is implemented using pytest <a href=\"https://docs.pytest.org/en/latest/mark.html\" rel=\"nofollow\">attributes</a>. If a tests runs longer than 1 second, it is marked as slow, else as fast.</p>\n<p>All contributors are welcome!</p>\n<div id=\"making-a-release\">\n<h4>Making a Release</h4>\n<p>The release procedure is almost completely automated. By tagging a new release\ntravis will build all required packages and push them to PyPI. To make a release\ncreate a new issue and work through the following checklist:</p>\n<ul>\n<li>update the version tag in <tt>__init__.py</tt></li>\n<li>update the version tag mentioned in the README</li>\n<li>check if the dependencies in <tt>setup.py</tt> are valid or need unpinning</li>\n<li>check that the <tt>CHANGELOG.md</tt> is up to date</li>\n<li>did the last build of master succeed?</li>\n<li>create a <a href=\"https://github.com/scikit-optimize/scikit-optimize/releases\" rel=\"nofollow\">new release</a></li>\n<li>ping <a href=\"https://github.com/conda-forge/scikit-optimize-feedstock\" rel=\"nofollow\">conda-forge</a></li>\n</ul>\n<p>Before making a release we usually create a release candidate. If the next\nrelease is v0.X then the release candidate should be tagged v0.Xrc1 in\n<tt>__init__.py</tt>. Mark a release candidate as a \u201cpre-release\u201d\non GitHub when you tag it.</p>\n</div>\n</div>\n<div id=\"commercial-support\">\n<h3>Commercial support</h3>\n<p>Feel free to <a href=\"mailto:tim%40wildtreetech.com\">get in touch</a> if you need commercial\nsupport or would like to sponsor development. Resources go towards paying\nfor additional work by seasoned engineers and researchers.</p>\n</div>\n<div id=\"made-possible-by\">\n<h3>Made possible by</h3>\n<p>The scikit-optimize project was made possible with the support of</p>\n<a href=\"http://wildtreetech.com\" rel=\"nofollow\"><img alt=\"Wild Tree Tech\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/efa5388dd083b84517686e18466a0298bfcee918/68747470733a2f2f61766174617273312e67697468756275736572636f6e74656e742e636f6d2f752f31383136353638373f763d3426733d313238\"></a>\n<a href=\"https://cds.nyu.edu/\" rel=\"nofollow\"><img alt=\"NYU Center for Data Science\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/561c5b9cf13dcbb3d31fc8239d7559d3e9f1eb4b/68747470733a2f2f692e696d6775722e636f6d2f6c6778626f54352e6a7067\"></a>\n<a href=\"https://www.nsf.gov\" rel=\"nofollow\"><img alt=\"NSF\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/33c43686cfcdb8f4cdd9c8439a74896d94b95813/68747470733a2f2f692e696d6775722e636f6d2f5631565349766a2e6a7067\"></a>\n<a href=\"http://www.northropgrumman.com/Pages/default.aspx\" rel=\"nofollow\"><img alt=\"Northrop Grumman\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45837996e8b016abc4b0e78b0ec5e6f9caf46300/68747470733a2f2f692e696d6775722e636f6d2f33656e513653382e6a7067\"></a>\n<p>If your employer allows you to work on scikit-optimize during the day and would like\nrecognition, feel free to add them to the \u201cMade possible by\u201d list.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7031119, "releases": {"0.8.dev0": [{"comment_text": "", "digests": {"md5": "281f77909558071a93cd3d1fada67bc7", "sha256": "2f6b4482a421ce12511b99018a131e9a19de40067e830749a7d7f40143a4d522"}, "downloads": -1, "filename": "dh_scikit_optimize-0.8.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "281f77909558071a93cd3d1fada67bc7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 96672, "upload_time": "2020-04-16T10:32:01", "upload_time_iso_8601": "2020-04-16T10:32:01.351524Z", "url": "https://files.pythonhosted.org/packages/c7/5e/799858523dd6299fb2063d0c6ed0d8a2157362b3f17d8808509c7c8564f4/dh_scikit_optimize-0.8.dev0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93ed1bb7becc1ed67e0ea84e5d387130", "sha256": "a50b551528025ae5cde07b86d866da757bfa7c068d9a1c12f876443434dce651"}, "downloads": -1, "filename": "dh-scikit-optimize-0.8.dev0.tar.gz", "has_sig": false, "md5_digest": "93ed1bb7becc1ed67e0ea84e5d387130", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 269822, "upload_time": "2020-04-16T10:32:04", "upload_time_iso_8601": "2020-04-16T10:32:04.848960Z", "url": "https://files.pythonhosted.org/packages/3e/42/0c02f4ee143a531fd83976a900b38340fdae0fa8c7d153361244c2fc622c/dh-scikit-optimize-0.8.dev0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "281f77909558071a93cd3d1fada67bc7", "sha256": "2f6b4482a421ce12511b99018a131e9a19de40067e830749a7d7f40143a4d522"}, "downloads": -1, "filename": "dh_scikit_optimize-0.8.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "281f77909558071a93cd3d1fada67bc7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 96672, "upload_time": "2020-04-16T10:32:01", "upload_time_iso_8601": "2020-04-16T10:32:01.351524Z", "url": "https://files.pythonhosted.org/packages/c7/5e/799858523dd6299fb2063d0c6ed0d8a2157362b3f17d8808509c7c8564f4/dh_scikit_optimize-0.8.dev0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93ed1bb7becc1ed67e0ea84e5d387130", "sha256": "a50b551528025ae5cde07b86d866da757bfa7c068d9a1c12f876443434dce651"}, "downloads": -1, "filename": "dh-scikit-optimize-0.8.dev0.tar.gz", "has_sig": false, "md5_digest": "93ed1bb7becc1ed67e0ea84e5d387130", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 269822, "upload_time": "2020-04-16T10:32:04", "upload_time_iso_8601": "2020-04-16T10:32:04.848960Z", "url": "https://files.pythonhosted.org/packages/3e/42/0c02f4ee143a531fd83976a900b38340fdae0fa8c7d153361244c2fc622c/dh-scikit-optimize-0.8.dev0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:39 2020"}