{"info": {"author": "KITT.AI", "author_email": "kittdotai@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: PyPy"], "description": "===============================================\nParsetron -  A natural language semantic parser\n===============================================\n\n.. pypi version and download:\n    .. image:: https://pypip.in/d/parsetron/badge.png\n        :target: https://pypi.python.org/pypi/parsetron\n\n.. image:: https://travis-ci.org/Kitt-AI/parsetron.svg?branch=develop\n    :target: https://travis-ci.org/Kitt-AI/parsetron\n\n.. image:: https://coveralls.io/repos/Kitt-AI/parsetron/badge.svg?branch=develop\n    :target: https://coveralls.io/r/Kitt-AI/parsetron?branch=develop\n\n.. image:: https://readthedocs.org/projects/parsetron/badge/?version=latest\n    :alt: Documentation Status\n    :scale: 100%\n    :target: https://readthedocs.org/projects/parsetron/\n\n\nA natural language semantic parser\n\nInstallation\n------------\n\n``pip install parsetron``\n\nParsetron is tested under Python 2.7 and Pypy. It doesn't support Python 3 yet.\n\nQuick Start\n-----------\n\nThe following is a grammar that parses natural language instruction on lights:\n\n.. code-block:: python\n\n    from parsetron import Set, Regex, Optional, OneOrMore, Grammar, RobustParser\n\n    class LightGrammar(Grammar):\n\n        action = Set(['change', 'flash', 'set', 'blink'])\n        light = Set(['top', 'middle', 'bottom'])\n        color = Regex(r'(red|yellow|blue|orange|purple|...)')\n        times = Set(['once', 'twice', 'three times']) | Regex(r'\\d+ times')\n        one_parse = action + light + Optional(times) + color\n        GOAL = OneOrMore(one_parse)\n\n        @staticmethod\n        def test():\n            parser = RobustParser((LightGrammar()))\n            sents = [\n                \"set my top light to red\",\n                \"set my top light to red and change middle light to yellow\",\n                \"set my top light to red and change middle light to yellow and \"\n                \"flash bottom light twice in blue\"\n            ]\n            for sent in sents:\n                tree, result = parser.parse(sent)\n                assert result.one_parse[0].color == 'red'\n\n                print '\"%s\"' % sent\n                print \"parse tree:\"\n                print tree\n                print \"parse result:\"\n                print result\n                print\n\n\nDependencies\n------------\n\nNone. Parsetron is a single ``parsetron.py`` file.\n\nParsetron is inspired by `pyparsing <https://pyparsing.wikispaces.com/>`_.\n\nGrammar Modules\n---------------\n\nParsetron supports modularized grammars: each grammar focuses on an individual\nsmall domain and can be imported via, for instance:\n\n.. code-block:: python\n\n    from parsetron.grammars.colors import ColorsGrammar\n\n    class YourCustomizedGrammar(Grammar):\n        color = ColorsGrammar.GOAL\n\n\nYou are welcome to contribute your own grammar here (under\n``parsetron.grammars``). Send us a pull request!\n\nDevelopment\n-----------\n\n1. fork this repository\n2. install dev-specific packages::\n\n       pip install -r requirements.txt\n\n3. then make your changes and follow the ``Makefile``.\n\n\nTODO\n----\n\n- [ ] Python 3 compatible\n- [ ] Unicode support\n\n\n\nDocumentation\n-------------\n\nThe full documentation is at http://parsetron.rtfd.org.\n\n\n\nHistory\n-------\n\n0.1.1 (2015-08-24)\n++++++++++++++++++\n\n* ParseResult now supports lex_span() method.\n\n0.1.0 (2015-06-19)\n++++++++++++++++++\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Kitt-AI/parsetron", "keywords": "parsetron", "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "parsetron", "package_url": "https://pypi.org/project/parsetron/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/parsetron/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Kitt-AI/parsetron"}, "release_url": "https://pypi.org/project/parsetron/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "A natural language semantic parser", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/Kitt-AI/parsetron\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/Kitt-AI/parsetron.svg?branch=develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b46ed9e7e2ae3cd7f926f2561b8530e72b0e006/68747470733a2f2f7472617669732d63692e6f72672f4b6974742d41492f706172736574726f6e2e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"https://coveralls.io/r/Kitt-AI/parsetron?branch=develop\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/Kitt-AI/parsetron/badge.svg?branch=develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f54149a48443624377e87a716ce5c06589707f8/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4b6974742d41492f706172736574726f6e2f62616467652e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"https://readthedocs.org/projects/parsetron/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c815c7fc82c455a8962a228419aee62f45cb4834/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f706172736574726f6e2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>A natural language semantic parser</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install parsetron</tt></p>\n<p>Parsetron is tested under Python 2.7 and Pypy. It doesn\u2019t support Python 3 yet.</p>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>The following is a grammar that parses natural language instruction on lights:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">parsetron</span> <span class=\"kn\">import</span> <span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"n\">Regex</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">OneOrMore</span><span class=\"p\">,</span> <span class=\"n\">Grammar</span><span class=\"p\">,</span> <span class=\"n\">RobustParser</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">LightGrammar</span><span class=\"p\">(</span><span class=\"n\">Grammar</span><span class=\"p\">):</span>\n\n    <span class=\"n\">action</span> <span class=\"o\">=</span> <span class=\"n\">Set</span><span class=\"p\">([</span><span class=\"s1\">'change'</span><span class=\"p\">,</span> <span class=\"s1\">'flash'</span><span class=\"p\">,</span> <span class=\"s1\">'set'</span><span class=\"p\">,</span> <span class=\"s1\">'blink'</span><span class=\"p\">])</span>\n    <span class=\"n\">light</span> <span class=\"o\">=</span> <span class=\"n\">Set</span><span class=\"p\">([</span><span class=\"s1\">'top'</span><span class=\"p\">,</span> <span class=\"s1\">'middle'</span><span class=\"p\">,</span> <span class=\"s1\">'bottom'</span><span class=\"p\">])</span>\n    <span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">Regex</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'(red|yellow|blue|orange|purple|...)'</span><span class=\"p\">)</span>\n    <span class=\"n\">times</span> <span class=\"o\">=</span> <span class=\"n\">Set</span><span class=\"p\">([</span><span class=\"s1\">'once'</span><span class=\"p\">,</span> <span class=\"s1\">'twice'</span><span class=\"p\">,</span> <span class=\"s1\">'three times'</span><span class=\"p\">])</span> <span class=\"o\">|</span> <span class=\"n\">Regex</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'\\d+ times'</span><span class=\"p\">)</span>\n    <span class=\"n\">one_parse</span> <span class=\"o\">=</span> <span class=\"n\">action</span> <span class=\"o\">+</span> <span class=\"n\">light</span> <span class=\"o\">+</span> <span class=\"n\">Optional</span><span class=\"p\">(</span><span class=\"n\">times</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">color</span>\n    <span class=\"n\">GOAL</span> <span class=\"o\">=</span> <span class=\"n\">OneOrMore</span><span class=\"p\">(</span><span class=\"n\">one_parse</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">():</span>\n        <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">RobustParser</span><span class=\"p\">((</span><span class=\"n\">LightGrammar</span><span class=\"p\">()))</span>\n        <span class=\"n\">sents</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"set my top light to red\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"set my top light to red and change middle light to yellow\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"set my top light to red and change middle light to yellow and \"</span>\n            <span class=\"s2\">\"flash bottom light twice in blue\"</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">sent</span> <span class=\"ow\">in</span> <span class=\"n\">sents</span><span class=\"p\">:</span>\n            <span class=\"n\">tree</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">sent</span><span class=\"p\">)</span>\n            <span class=\"k\">assert</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">one_parse</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">==</span> <span class=\"s1\">'red'</span>\n\n            <span class=\"nb\">print</span> <span class=\"s1\">'\"</span><span class=\"si\">%s</span><span class=\"s1\">\"'</span> <span class=\"o\">%</span> <span class=\"n\">sent</span>\n            <span class=\"nb\">print</span> <span class=\"s2\">\"parse tree:\"</span>\n            <span class=\"nb\">print</span> <span class=\"n\">tree</span>\n            <span class=\"nb\">print</span> <span class=\"s2\">\"parse result:\"</span>\n            <span class=\"nb\">print</span> <span class=\"n\">result</span>\n            <span class=\"nb\">print</span>\n</pre>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>None. Parsetron is a single <tt>parsetron.py</tt> file.</p>\n<p>Parsetron is inspired by <a href=\"https://pyparsing.wikispaces.com/\" rel=\"nofollow\">pyparsing</a>.</p>\n</div>\n<div id=\"grammar-modules\">\n<h2>Grammar Modules</h2>\n<p>Parsetron supports modularized grammars: each grammar focuses on an individual\nsmall domain and can be imported via, for instance:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">parsetron.grammars.colors</span> <span class=\"kn\">import</span> <span class=\"n\">ColorsGrammar</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">YourCustomizedGrammar</span><span class=\"p\">(</span><span class=\"n\">Grammar</span><span class=\"p\">):</span>\n    <span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">ColorsGrammar</span><span class=\"o\">.</span><span class=\"n\">GOAL</span>\n</pre>\n<p>You are welcome to contribute your own grammar here (under\n<tt>parsetron.grammars</tt>). Send us a pull request!</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<ol>\n<li><p>fork this repository</p>\n</li>\n<li><p>install dev-specific packages:</p>\n<pre>pip install -r requirements.txt\n</pre>\n</li>\n<li><p>then make your changes and follow the <tt>Makefile</tt>.</p>\n</li>\n</ol>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>[ ] Python 3 compatible</li>\n<li>[ ] Unicode support</li>\n</ul>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The full documentation is at <a href=\"http://parsetron.rtfd.org\" rel=\"nofollow\">http://parsetron.rtfd.org</a>.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.1.1 (2015-08-24)</h3>\n<ul>\n<li>ParseResult now supports lex_span() method.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.0 (2015-06-19)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1664630, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "99f6b5c156bb1445dc796fb1a3435ea6", "sha256": "3ec35eb405a999e1bce65f4d60ccc7c3f4c2a41a53c58dcdf953f6d08cd556ef"}, "downloads": -1, "filename": "parsetron-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "99f6b5c156bb1445dc796fb1a3435ea6", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 34496, "upload_time": "2015-06-19T18:26:09", "upload_time_iso_8601": "2015-06-19T18:26:09.088299Z", "url": "https://files.pythonhosted.org/packages/e1/64/eeabbabd01f96b702dbb78cf232c1fee02d564a5d105cb3c0596a45ecbf2/parsetron-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75784fb56b527c951b403f21923ab5e5", "sha256": "43c004c0aec7b76b1b7e60d48966344e50b3fa75d23e34f9792ec6ec8460d59c"}, "downloads": -1, "filename": "parsetron-0.1.0.tar.gz", "has_sig": false, "md5_digest": "75784fb56b527c951b403f21923ab5e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39636, "upload_time": "2015-06-19T18:26:05", "upload_time_iso_8601": "2015-06-19T18:26:05.340104Z", "url": "https://files.pythonhosted.org/packages/ce/0b/214ea73707afa54b0b5108e4950dc8ad8ea54c4597d3db5bf23ef439cf5b/parsetron-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "aff9f3001349d7e40109927358b60426", "sha256": "769c21a4d3ae3434bdb5b74b82da4d9f87fe76f9e967830100ceddf946ae2b33"}, "downloads": -1, "filename": "parsetron-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aff9f3001349d7e40109927358b60426", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 35570, "upload_time": "2015-08-05T01:02:22", "upload_time_iso_8601": "2015-08-05T01:02:22.349473Z", "url": "https://files.pythonhosted.org/packages/8e/12/74a09e3a6bb03d8f926e2f58302276adfb23a9fe3def0d527021f0f22ec0/parsetron-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24cee8fe079670c12ff1897fcccb2b80", "sha256": "97324cec1bfc011e0728640fe16d46ee2cf064253863c7174aa5a8d329ffa980"}, "downloads": -1, "filename": "parsetron-0.1.1.tar.gz", "has_sig": false, "md5_digest": "24cee8fe079670c12ff1897fcccb2b80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40962, "upload_time": "2015-08-05T01:02:18", "upload_time_iso_8601": "2015-08-05T01:02:18.076297Z", "url": "https://files.pythonhosted.org/packages/5d/85/aa5a6c53471386f6d7a8502d6a172e146807cccd3026825d374a1f4f4888/parsetron-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aff9f3001349d7e40109927358b60426", "sha256": "769c21a4d3ae3434bdb5b74b82da4d9f87fe76f9e967830100ceddf946ae2b33"}, "downloads": -1, "filename": "parsetron-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aff9f3001349d7e40109927358b60426", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 35570, "upload_time": "2015-08-05T01:02:22", "upload_time_iso_8601": "2015-08-05T01:02:22.349473Z", "url": "https://files.pythonhosted.org/packages/8e/12/74a09e3a6bb03d8f926e2f58302276adfb23a9fe3def0d527021f0f22ec0/parsetron-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24cee8fe079670c12ff1897fcccb2b80", "sha256": "97324cec1bfc011e0728640fe16d46ee2cf064253863c7174aa5a8d329ffa980"}, "downloads": -1, "filename": "parsetron-0.1.1.tar.gz", "has_sig": false, "md5_digest": "24cee8fe079670c12ff1897fcccb2b80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40962, "upload_time": "2015-08-05T01:02:18", "upload_time_iso_8601": "2015-08-05T01:02:18.076297Z", "url": "https://files.pythonhosted.org/packages/5d/85/aa5a6c53471386f6d7a8502d6a172e146807cccd3026825d374a1f4f4888/parsetron-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:17 2020"}