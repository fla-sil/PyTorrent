{"info": {"author": "Lucas Husted", "author_email": "lucas.f.husted@columbia.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# pytrendex\nCode to generate a Google Trends Index\n\n## Installation\n```\npip install pytrendex\n```\n\n## Trendex\nThe main thrust of this package is a class `Trendex`.\nThis class makes an index utilizing Google Trends from keywords.\n\n### Parameters\n\n- `kw_list`: list\n      The list of keywords that will be searched. If larger than 5, will create\n      benchmark term from the first term in the list.\n\n- `geo`: str\n      The country or place the search is conducted in, see Trends documentation.\n\n- `lang`: str, options are currently `en` for english and `es` for spanish\n      The language that the `kw_list` is (required for optimal benchmark selection).\n\n- `date_start`: str, optional\n      The data where the index starts in format: 'yyyy-mm-dd',\n      if none provided, then does it at the cutoff days before the date end.\n\n- `date_end`: str, optional\n      The data where the index ends in format: 'yyyy-mm-dd',\n      if none provided, then defaults to current day.\n\n- `frequency`: str, optional\n      The frequency of the index. Note that the index always pulls daily data,\n      so collapsing into larger time-frames is done by averages ex-post.\n\n- `gen_index`: Binary, optional\n      If true, then go ahead and instantiate class to generate indices.\n      Default is True.\n\n- `plot`: boolean, optional\n      If True, and gen_index is True, then it plots index. Default is true.\n\n- `kw_list_split`: boolean, optional\n      If True then the max length for `kw_list` is 20 terms; after that it will\n      split the search by using the \"+\" option for search terms (which acts\n      as an \"or\" operator for google trends). Highly recommended to keep load down.\n\n- `benchmark_select`: boolean, optional\n      If True then optimally search over timeframe for best benchmark phrase, see\n      documentation for that function for description of how this is done.\n      If False, then the benchmark will be the first term in the `kw_list`.\n\n- `slowdown`: boolean, optional\n      If True then include time.sleep() at key moments to slow down the index.\n      Currently defaults to random intervals of mean 5 or 7 seconds depending on\n      where in the code. Remove this at your own peril (Google lockout).\n\n- `seasonal_adjust`: boolean, optional (default = True)\n      If True, then seasonally adjust the series (recommended). Seasonally\n      adjusted trends are always constructed and saved in trends_sa,\n      but this incorporates them into the index that is automatically constructed.\n\n### Returns (back to class instance)\n- `self.gti`: Series (main output)\n      This is the normalized indexes made from the underlying data. It is\n      the main thing returned from this function.\n\n- `self.trends`: DataFrame (major output)\n      It is the adjusted and combined series for each term searched.\n      You could use this to plot individual keywords in the index.\n      Will differ from raw_trends_adjusted if frequency is changed from daily.\n\n- `self.trends_sa`: DataFrame (major output)\n      These are the trends seasonally adjusted; they are always returned.\n\n- `self.raw_trends_adjusted`: Dictionary (minor output)\n      These are the adjusted (using overlapping timeframes) raw results\n      for each term. Index of dictionary corresponds to index of timechunks.\n      Could differ from trends if frequency is changed from daily.\n\n- `self.raw_trends`: Dictionary (minor output)\n      These are the unadjusted raw results for each term.\n      Note: Adjustment has still been made by the benchmark term for\n      searches exceeding 5 terms.\n\n- `self.adjustment_factors`: Series (minor output)\n      Returns the adjustment factors used on each overlapping segment.\n      The adjustment is `[term]_1/[term_2] * segment_2`\n\n## Example\nA use case example is provided here:\n```\nfrom pytrendex import Trendex\n\nkw_list = ['Obama','Biden','Clinton','Warren','Trump','Bernie']\ngeo = 'US'\ndate_start = '2018-01-01'\nfrequency = 'weekly'\n\n## Generating the indexes in two different ways\nresult = Trendex(kw_list=kw_list, geo=geo, lang='en',\n                  plot=False, date_start=date_start, frequency=frequency)\n\n# A smaller index, here we create it in two steps (date start and end and frequency auto selected)\nresult2 = Trendex(['Obama','Trump'],geo='US',gen_index=False)\nresult2 = result2.make_index(plot=False)\n\n## Analyzing the results\n\nresult.gti.plot() # creates a matplotlib plot of the index for us to look at\nresult2.trends_sa.plot() # plots the adjusted individual terms that make up the index\n\nresult.gti.to_csv('file.csv') # saves the index as a csv file\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lucashusted/pytrendex", "keywords": "", "license": "GNU", "maintainer": "", "maintainer_email": "", "name": "pytrendex", "package_url": "https://pypi.org/project/pytrendex/", "platform": "", "project_url": "https://pypi.org/project/pytrendex/", "project_urls": {"Homepage": "https://github.com/lucashusted/pytrendex"}, "release_url": "https://pypi.org/project/pytrendex/4.0.1/", "requires_dist": ["pytrends", "requests", "numpy", "statsmodels", "pandas (>=0.25)", "lxml", "matplotlib"], "requires_python": ">=3", "summary": "Tool To Create Google Trends Index From Keywords", "version": "4.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pytrendex</h1>\n<p>Code to generate a Google Trends Index</p>\n<h2>Installation</h2>\n<pre><code>pip install pytrendex\n</code></pre>\n<h2>Trendex</h2>\n<p>The main thrust of this package is a class <code>Trendex</code>.\nThis class makes an index utilizing Google Trends from keywords.</p>\n<h3>Parameters</h3>\n<ul>\n<li>\n<p><code>kw_list</code>: list\nThe list of keywords that will be searched. If larger than 5, will create\nbenchmark term from the first term in the list.</p>\n</li>\n<li>\n<p><code>geo</code>: str\nThe country or place the search is conducted in, see Trends documentation.</p>\n</li>\n<li>\n<p><code>lang</code>: str, options are currently <code>en</code> for english and <code>es</code> for spanish\nThe language that the <code>kw_list</code> is (required for optimal benchmark selection).</p>\n</li>\n<li>\n<p><code>date_start</code>: str, optional\nThe data where the index starts in format: 'yyyy-mm-dd',\nif none provided, then does it at the cutoff days before the date end.</p>\n</li>\n<li>\n<p><code>date_end</code>: str, optional\nThe data where the index ends in format: 'yyyy-mm-dd',\nif none provided, then defaults to current day.</p>\n</li>\n<li>\n<p><code>frequency</code>: str, optional\nThe frequency of the index. Note that the index always pulls daily data,\nso collapsing into larger time-frames is done by averages ex-post.</p>\n</li>\n<li>\n<p><code>gen_index</code>: Binary, optional\nIf true, then go ahead and instantiate class to generate indices.\nDefault is True.</p>\n</li>\n<li>\n<p><code>plot</code>: boolean, optional\nIf True, and gen_index is True, then it plots index. Default is true.</p>\n</li>\n<li>\n<p><code>kw_list_split</code>: boolean, optional\nIf True then the max length for <code>kw_list</code> is 20 terms; after that it will\nsplit the search by using the \"+\" option for search terms (which acts\nas an \"or\" operator for google trends). Highly recommended to keep load down.</p>\n</li>\n<li>\n<p><code>benchmark_select</code>: boolean, optional\nIf True then optimally search over timeframe for best benchmark phrase, see\ndocumentation for that function for description of how this is done.\nIf False, then the benchmark will be the first term in the <code>kw_list</code>.</p>\n</li>\n<li>\n<p><code>slowdown</code>: boolean, optional\nIf True then include time.sleep() at key moments to slow down the index.\nCurrently defaults to random intervals of mean 5 or 7 seconds depending on\nwhere in the code. Remove this at your own peril (Google lockout).</p>\n</li>\n<li>\n<p><code>seasonal_adjust</code>: boolean, optional (default = True)\nIf True, then seasonally adjust the series (recommended). Seasonally\nadjusted trends are always constructed and saved in trends_sa,\nbut this incorporates them into the index that is automatically constructed.</p>\n</li>\n</ul>\n<h3>Returns (back to class instance)</h3>\n<ul>\n<li>\n<p><code>self.gti</code>: Series (main output)\nThis is the normalized indexes made from the underlying data. It is\nthe main thing returned from this function.</p>\n</li>\n<li>\n<p><code>self.trends</code>: DataFrame (major output)\nIt is the adjusted and combined series for each term searched.\nYou could use this to plot individual keywords in the index.\nWill differ from raw_trends_adjusted if frequency is changed from daily.</p>\n</li>\n<li>\n<p><code>self.trends_sa</code>: DataFrame (major output)\nThese are the trends seasonally adjusted; they are always returned.</p>\n</li>\n<li>\n<p><code>self.raw_trends_adjusted</code>: Dictionary (minor output)\nThese are the adjusted (using overlapping timeframes) raw results\nfor each term. Index of dictionary corresponds to index of timechunks.\nCould differ from trends if frequency is changed from daily.</p>\n</li>\n<li>\n<p><code>self.raw_trends</code>: Dictionary (minor output)\nThese are the unadjusted raw results for each term.\nNote: Adjustment has still been made by the benchmark term for\nsearches exceeding 5 terms.</p>\n</li>\n<li>\n<p><code>self.adjustment_factors</code>: Series (minor output)\nReturns the adjustment factors used on each overlapping segment.\nThe adjustment is <code>[term]_1/[term_2] * segment_2</code></p>\n</li>\n</ul>\n<h2>Example</h2>\n<p>A use case example is provided here:</p>\n<pre><code>from pytrendex import Trendex\n\nkw_list = ['Obama','Biden','Clinton','Warren','Trump','Bernie']\ngeo = 'US'\ndate_start = '2018-01-01'\nfrequency = 'weekly'\n\n## Generating the indexes in two different ways\nresult = Trendex(kw_list=kw_list, geo=geo, lang='en',\n                  plot=False, date_start=date_start, frequency=frequency)\n\n# A smaller index, here we create it in two steps (date start and end and frequency auto selected)\nresult2 = Trendex(['Obama','Trump'],geo='US',gen_index=False)\nresult2 = result2.make_index(plot=False)\n\n## Analyzing the results\n\nresult.gti.plot() # creates a matplotlib plot of the index for us to look at\nresult2.trends_sa.plot() # plots the adjusted individual terms that make up the index\n\nresult.gti.to_csv('file.csv') # saves the index as a csv file\n\n</code></pre>\n\n          </div>"}, "last_serial": 7165174, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9fee13904e39010251549a39a6c85ece", "sha256": "b32c2976747f38c4472d9617f9d873ff3c37b3343422ebfa6f5cf6be11ae74cf"}, "downloads": -1, "filename": "pytrendex-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9fee13904e39010251549a39a6c85ece", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 20618, "upload_time": "2020-03-13T16:27:30", "upload_time_iso_8601": "2020-03-13T16:27:30.720986Z", "url": "https://files.pythonhosted.org/packages/ea/30/84c885393fc0841f0e2b775fb0797b70295411f7a2458bf1daebeccbbff7/pytrendex-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "468a0be4682b3abaedb039dd2d1c227e", "sha256": "f721f354ecf7c1fa8e7c555d9751836e25867ede674e397b4cc9767fc2239c64"}, "downloads": -1, "filename": "pytrendex-1.0.0.tar.gz", "has_sig": false, "md5_digest": "468a0be4682b3abaedb039dd2d1c227e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7412, "upload_time": "2020-03-13T16:27:32", "upload_time_iso_8601": "2020-03-13T16:27:32.560639Z", "url": "https://files.pythonhosted.org/packages/6a/ae/2d51d06a2021e8b964d05f85dc034f8e61e05cd5b98373cb0b77d2ed6dae/pytrendex-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "257a2018e4034281c5b2d876e257bb25", "sha256": "8c791f8527f62558851e69cf5615cf3281a6217fc6eef89b109bcb6d809c2973"}, "downloads": -1, "filename": "pytrendex-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "257a2018e4034281c5b2d876e257bb25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 20618, "upload_time": "2020-03-19T13:47:18", "upload_time_iso_8601": "2020-03-19T13:47:18.531924Z", "url": "https://files.pythonhosted.org/packages/a6/05/61d67e6462cc74b18dd8b7f873b14806648332d45fdc9f2cb3127a7b6c69/pytrendex-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c050c34e83c59f537f01044bda6104e", "sha256": "fddb511a454614a6ade1b9cbde44ebde2b6f8c50925700a28b2864587d02007b"}, "downloads": -1, "filename": "pytrendex-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3c050c34e83c59f537f01044bda6104e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7417, "upload_time": "2020-03-19T13:47:20", "upload_time_iso_8601": "2020-03-19T13:47:20.910434Z", "url": "https://files.pythonhosted.org/packages/a7/0d/da0778d86d02bb6deffd29e132475e23dfde6e6ce5cca5c9a34c3f1f39b7/pytrendex-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c3ac3d2175c9069e6dd0ae8d7225181a", "sha256": "0fe6dd4d0dee1d38b884b37da8763092c037d9acf59ed4ec08eb55152cf9670c"}, "downloads": -1, "filename": "pytrendex-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c3ac3d2175c9069e6dd0ae8d7225181a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 22782, "upload_time": "2020-03-19T22:08:01", "upload_time_iso_8601": "2020-03-19T22:08:01.453755Z", "url": "https://files.pythonhosted.org/packages/9c/63/c26d933884cfb64d55817e26c3c778f751036cefeb1899178ace8449ae27/pytrendex-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d96040fa3ee8f1cd69a7bf7a62c140f", "sha256": "2d94778e3c615b5fb0603e1c4773e4ace3d110c461a559eb5f1ee26af725fc2d"}, "downloads": -1, "filename": "pytrendex-1.1.0.tar.gz", "has_sig": false, "md5_digest": "8d96040fa3ee8f1cd69a7bf7a62c140f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8920, "upload_time": "2020-03-19T22:08:05", "upload_time_iso_8601": "2020-03-19T22:08:05.015455Z", "url": "https://files.pythonhosted.org/packages/08/75/3a26743ac5bf3e25f323a574e85cfd27fad86af61e59bd9b6ca1ce6d25ef/pytrendex-1.1.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "86da2272d0f454dcd060b19dbc805c3b", "sha256": "240501721928962682a835d93cc35597885b6901264c2c8466f1a7cec7d95402"}, "downloads": -1, "filename": "pytrendex-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "86da2272d0f454dcd060b19dbc805c3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 22925, "upload_time": "2020-03-19T22:22:22", "upload_time_iso_8601": "2020-03-19T22:22:22.982267Z", "url": "https://files.pythonhosted.org/packages/50/bc/350365a22286c4c15d793801fe4cb096cc2cc4df11c5995c7ae8b7de5108/pytrendex-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8021822fa5ed5047391615bc2a2194f", "sha256": "6ae049a146a2b557e997cd9cf2793045a1434c5c79398f4afc03b9a59f53406a"}, "downloads": -1, "filename": "pytrendex-2.1.0.tar.gz", "has_sig": false, "md5_digest": "a8021822fa5ed5047391615bc2a2194f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9107, "upload_time": "2020-03-19T22:22:26", "upload_time_iso_8601": "2020-03-19T22:22:26.570269Z", "url": "https://files.pythonhosted.org/packages/bc/ee/4c47db382389155098fd375b78196aefcfe1fb0d8678518df76ce2463505/pytrendex-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "c631bd81e13aaa818e9cdea3c3fab1a9", "sha256": "397aa43c6e9214df796582aa6cc1a4a8c01bdcefd51a1df035ed3355334c9094"}, "downloads": -1, "filename": "pytrendex-2.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c631bd81e13aaa818e9cdea3c3fab1a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 22926, "upload_time": "2020-03-19T22:47:26", "upload_time_iso_8601": "2020-03-19T22:47:26.605153Z", "url": "https://files.pythonhosted.org/packages/0e/ae/ad5d022e239f7ba91516861c0ac3a939b5d447c7cb122e1dfee1661bc716/pytrendex-2.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03c375fe31eb9d4ba6a17815bab5c893", "sha256": "aab7ceab6a823234ab08c9f20848125725b75963aa1fee551087c37870765a3d"}, "downloads": -1, "filename": "pytrendex-2.1.1.tar.gz", "has_sig": false, "md5_digest": "03c375fe31eb9d4ba6a17815bab5c893", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9107, "upload_time": "2020-03-19T22:47:32", "upload_time_iso_8601": "2020-03-19T22:47:32.136461Z", "url": "https://files.pythonhosted.org/packages/88/b0/31e1537195e030dfc94441f47c063a8e5d431440757b7381f5f446796a00/pytrendex-2.1.1.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "e340038625a306f15406f2ab3c2ea4f1", "sha256": "d7969f57d69ea54103da04a7e46a7c9e26bbd9eb6de43eca2a9ea2b5d4f65f35"}, "downloads": -1, "filename": "pytrendex-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e340038625a306f15406f2ab3c2ea4f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 23603, "upload_time": "2020-04-09T17:57:41", "upload_time_iso_8601": "2020-04-09T17:57:41.036630Z", "url": "https://files.pythonhosted.org/packages/d6/77/bb1f6a4afd6bedcbeb485abb07d6a6c36101412ebc63336a51a202b43775/pytrendex-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d0c51fbdf89f93e58061a289a0783d4", "sha256": "35353e03e8384f18466723992de7e56d058dea18927be6f3765e9bf3aac29afe"}, "downloads": -1, "filename": "pytrendex-3.0.0.tar.gz", "has_sig": false, "md5_digest": "6d0c51fbdf89f93e58061a289a0783d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9722, "upload_time": "2020-04-09T17:57:45", "upload_time_iso_8601": "2020-04-09T17:57:45.600424Z", "url": "https://files.pythonhosted.org/packages/a6/12/15800c895ed665a01c5f7062ec65fe3d4b8c7a78f5be7d5e2fe3a8bf2946/pytrendex-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "20e859de86d18e0d7ff4d477c83a0608", "sha256": "7f0d74b9d4ecedc707bf0687736a4481f0c8a3d931a0934c04abed856f8fcbbe"}, "downloads": -1, "filename": "pytrendex-3.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "20e859de86d18e0d7ff4d477c83a0608", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 23254, "upload_time": "2020-04-09T18:15:54", "upload_time_iso_8601": "2020-04-09T18:15:54.681438Z", "url": "https://files.pythonhosted.org/packages/d5/0c/da6dbd0940f296be3361bd119a2f474e58472809628de3ea61a7aaa8d518/pytrendex-3.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4814b6c0e0ed6e5bd336e60067314a9", "sha256": "c3f335a7dfa778584bdb49e0a4492b3a67dc14a7e1906fa0dbf7eb603bb91f95"}, "downloads": -1, "filename": "pytrendex-3.0.1.tar.gz", "has_sig": false, "md5_digest": "c4814b6c0e0ed6e5bd336e60067314a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9356, "upload_time": "2020-04-09T18:16:00", "upload_time_iso_8601": "2020-04-09T18:16:00.097030Z", "url": "https://files.pythonhosted.org/packages/27/99/c604358531721f4e48579c4e28c154c97efe9a3b3d78e1be6296a50b6cb3/pytrendex-3.0.1.tar.gz", "yanked": false}], "3.1.1": [{"comment_text": "", "digests": {"md5": "9676e809ad593773fa992816cfd8aa3a", "sha256": "93972b8f8ebb8cc434a9dbbb310cb011429821c0e4214d30c28bde8f5f133c37"}, "downloads": -1, "filename": "pytrendex-3.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9676e809ad593773fa992816cfd8aa3a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 23269, "upload_time": "2020-05-01T16:34:02", "upload_time_iso_8601": "2020-05-01T16:34:02.417072Z", "url": "https://files.pythonhosted.org/packages/c4/56/986f36d7b5ea623272bd0427ef96d9ca6d12d05dcb0d95b402c2fe03e513/pytrendex-3.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff186594ec9845b73fbf07d24b4df85c", "sha256": "2679aa19163519b193d8f2cf2e072cd38931592c225c9a23e9d2b961b3f078ea"}, "downloads": -1, "filename": "pytrendex-3.1.1.tar.gz", "has_sig": false, "md5_digest": "ff186594ec9845b73fbf07d24b4df85c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9403, "upload_time": "2020-05-01T16:34:08", "upload_time_iso_8601": "2020-05-01T16:34:08.505499Z", "url": "https://files.pythonhosted.org/packages/86/a9/34520552721593fb72ce86dcb7f4a044c7e6368907ac13dde1e3e0ee1f7e/pytrendex-3.1.1.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "96778fea085d7e7d81c75c5f0c4e75c4", "sha256": "c10eff5e3de656ab539d1d01d20fa3e6fb17d79a5ceb58ceb1252015e0a9fa38"}, "downloads": -1, "filename": "pytrendex-4.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "96778fea085d7e7d81c75c5f0c4e75c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 23377, "upload_time": "2020-05-02T21:37:23", "upload_time_iso_8601": "2020-05-02T21:37:23.448810Z", "url": "https://files.pythonhosted.org/packages/6a/ea/814f3db4b0eabb893bafb9bf7e21424036419580b41050a00ee16de3242b/pytrendex-4.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ab4372d181eb8e9d61535d76062dff1", "sha256": "1d421435cf380bfc7849c4ad0815b4368bc752a733959c117057fbf4b0c53ec0"}, "downloads": -1, "filename": "pytrendex-4.0.0.tar.gz", "has_sig": false, "md5_digest": "8ab4372d181eb8e9d61535d76062dff1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9512, "upload_time": "2020-05-02T21:37:29", "upload_time_iso_8601": "2020-05-02T21:37:29.677252Z", "url": "https://files.pythonhosted.org/packages/ce/d9/eb89ad7b29012cb19f32fdccff63043954ef660ce2a0bdc53a8b506ca5bd/pytrendex-4.0.0.tar.gz", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "0ef06c071a79584b65bac6c578c2be26", "sha256": "e21105d4797a8ecb415484b5c7750d0ecfa2537f8a51df89fe1cdf04ce511b8f"}, "downloads": -1, "filename": "pytrendex-4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0ef06c071a79584b65bac6c578c2be26", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 23079, "upload_time": "2020-05-04T15:28:44", "upload_time_iso_8601": "2020-05-04T15:28:44.121390Z", "url": "https://files.pythonhosted.org/packages/12/8f/a28c22bbaeaf14b3d789abf31d8f5d42834728a5d3fc3c3adbc4b20c3e88/pytrendex-4.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb43548ac29087c6b25eb2801b4a96a0", "sha256": "0cf27a97514e391fbd752cb5a540df6c82bc6938a7e6eeead1bc17ce6b30fefa"}, "downloads": -1, "filename": "pytrendex-4.0.1.tar.gz", "has_sig": false, "md5_digest": "eb43548ac29087c6b25eb2801b4a96a0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9273, "upload_time": "2020-05-04T15:28:51", "upload_time_iso_8601": "2020-05-04T15:28:51.460925Z", "url": "https://files.pythonhosted.org/packages/1b/0a/e4a041b9d16bba417df5ed0ec699d5df1bed824f6c63b74d51374284a473/pytrendex-4.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0ef06c071a79584b65bac6c578c2be26", "sha256": "e21105d4797a8ecb415484b5c7750d0ecfa2537f8a51df89fe1cdf04ce511b8f"}, "downloads": -1, "filename": "pytrendex-4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0ef06c071a79584b65bac6c578c2be26", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 23079, "upload_time": "2020-05-04T15:28:44", "upload_time_iso_8601": "2020-05-04T15:28:44.121390Z", "url": "https://files.pythonhosted.org/packages/12/8f/a28c22bbaeaf14b3d789abf31d8f5d42834728a5d3fc3c3adbc4b20c3e88/pytrendex-4.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb43548ac29087c6b25eb2801b4a96a0", "sha256": "0cf27a97514e391fbd752cb5a540df6c82bc6938a7e6eeead1bc17ce6b30fefa"}, "downloads": -1, "filename": "pytrendex-4.0.1.tar.gz", "has_sig": false, "md5_digest": "eb43548ac29087c6b25eb2801b4a96a0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9273, "upload_time": "2020-05-04T15:28:51", "upload_time_iso_8601": "2020-05-04T15:28:51.460925Z", "url": "https://files.pythonhosted.org/packages/1b/0a/e4a041b9d16bba417df5ed0ec699d5df1bed824f6c63b74d51374284a473/pytrendex-4.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:17 2020"}