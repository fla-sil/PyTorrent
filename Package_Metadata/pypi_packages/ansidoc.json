{"info": {"author": "Felix Archambault", "author_email": "fel.archambault@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Documentation"], "description": "\nAnsidoc\n=======\n\nA simple tool to generate ansible role's documentation.\n\nUsage\n-----\n\nThis tool generates a ``README.md`` file using data from multiple sources.\n\n\n* From role content:\n\n  * role ``defaults/main.yml``\n  * role ``vars/*.yml``\n\n* You content.\n\n  * role ``docs/*.yml``\n  * role ``docs/*.md``\n\nContent of your role ``vars/*`` and ``defaults/*`` will also be literally inserted\nin between ``yaml`` codeblocks. Put nice comments//explanations of variable's\npurpose in them!\n\nThe role ``docs`` directory may contain YAML files that will be parsed. Variables\nwithin will be use to enrich the resulting ``README.md`` file. All markdown files\nwill also be include. Top header must be of level H2. Currently there are no\nmechanism to defined the inclusion order.\n\nPrepare your role\n^^^^^^^^^^^^^^^^^\n\nFor best results, create a ``docs/<you-var-file>.yml`` file inside your role and fill those\nvariables:\n\n.. code-block:: yaml\n\n   ---\n\n   github_account: <your-role-github-account-username>\n   todos: [] # (optional) list of todos to print in your README file\n\ncli\n^^^\n\n.. code-block:: shell\n\n   usage: ansidoc [-h] [-v] [-V] [-d] [-s TARGET] [-nf] [-e EXCLUDE] [-p] dirpath\n\n   positional arguments:\n     dirpath               Either a 'roles_path' wich is a roles' directory or a\n                           path to a single role. If 'roles_path' basename is\n                           'roles' it will loop over subdirectories assuming each\n                           of them contains a role.\n\n   optional arguments:\n     -h, --help            show this help message and exit\n     -v, --verbose         increase output verbosity\n     -V, --version         show program's version number and exit\n     -d, --dry-run         dry run, Outputs pure markdown to stdout nothing is\n                           written to disk\n     -s TARGET             (docs | README.md) Create a symlink in PWD to TARGET.\n                           This is useful when used from sphinx as you cannot add\n                           relative entries such as '../*' in the toctree. If\n                           unspecified, no symlink is created.\n     -nf, --no-ansidoc-footer\n                           Do not render the ansidoc project footer.\n     -e EXCLUDE, --exclude EXCLUDE\n                           csv list of role names to exclude. Must match\n                           directory name found under specified 'dirpath'\n     -p, --private         Consider role(s) private, e.g.: Skip installation from\n                           github part from rendered template.\n\n>From sphinx\n^^^^^^^^^^^\n\nYou can import in your code and pass arguments similarly as you would do on the\ncli.\n\nFor example:\n\n.. code-block:: python\n\n   from ansidoc import Ansidoc\n   ansidoc = Ansidoc(dirpath=<path/to/role>, dry_run=True)\n   ansidoc.run()\n\nwishlist\n--------\n\n\n* role dependency grapher\n* role variables analysis (to audit what is defined where)\n* create sphinx documentation for this program\n* make this a sphinx plugin\n* include mardown files in defined order (alphabetical?, number the files?)\n* override parts of template with custom one.\n\n  * search paths to find templates (\\ ``.ansidoc/templates/*``\\ ?)\n\n* multi-role variables\n\n  * search paths to find config (\\ ``.ansidoc/config.yml``\\ ?)\n  * exclude list configurable in config file\n\nLicense\n-------\n\nMIT.\n\nSimilar Projects\n----------------\n\n\n* `Ansible-DocGen <https://github.com/toast38coza/Ansible-DocGen>`_\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/archf/ansidoc", "keywords": "ansible,documentation generation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ansidoc", "package_url": "https://pypi.org/project/ansidoc/", "platform": "", "project_url": "https://pypi.org/project/ansidoc/", "project_urls": {"Homepage": "https://github.com/archf/ansidoc"}, "release_url": "https://pypi.org/project/ansidoc/0.6.0/", "requires_dist": ["PyYaml", "jinja2", "tabulate"], "requires_python": "", "summary": "Manage ansible role documentation", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br>Ansidoc<br>=======<br><br>A simple tool to generate ansible role's documentation.<br><br>Usage<br>-----<br><br>This tool generates a ``README.md`` file using data from multiple sources.<br><br><br>* From role content:<br><br>  * role ``defaults/main.yml``<br>  * role ``vars/*.yml``<br><br>* You content.<br><br>  * role ``docs/*.yml``<br>  * role ``docs/*.md``<br><br>Content of your role ``vars/*`` and ``defaults/*`` will also be literally inserted<br>in between ``yaml`` codeblocks. Put nice comments//explanations of variable's<br>purpose in them!<br><br>The role ``docs`` directory may contain YAML files that will be parsed. Variables<br>within will be use to enrich the resulting ``README.md`` file. All markdown files<br>will also be include. Top header must be of level H2. Currently there are no<br>mechanism to defined the inclusion order.<br><br>Prepare your role<br>^^^^^^^^^^^^^^^^^<br><br>For best results, create a ``docs/&lt;you-var-file&gt;.yml`` file inside your role and fill those<br>variables:<br><br>.. code-block:: yaml<br><br>   ---<br><br>   github_account: &lt;your-role-github-account-username&gt;<br>   todos: [] # (optional) list of todos to print in your README file<br><br>cli<br>^^^<br><br>.. code-block:: shell<br><br>   usage: ansidoc [-h] [-v] [-V] [-d] [-s TARGET] [-nf] [-e EXCLUDE] [-p] dirpath<br><br>   positional arguments:<br>     dirpath               Either a 'roles_path' wich is a roles' directory or a<br>                           path to a single role. If 'roles_path' basename is<br>                           'roles' it will loop over subdirectories assuming each<br>                           of them contains a role.<br><br>   optional arguments:<br>     -h, --help            show this help message and exit<br>     -v, --verbose         increase output verbosity<br>     -V, --version         show program's version number and exit<br>     -d, --dry-run         dry run, Outputs pure markdown to stdout nothing is<br>                           written to disk<br>     -s TARGET             (docs | README.md) Create a symlink in PWD to TARGET.<br>                           This is useful when used from sphinx as you cannot add<br>                           relative entries such as '../*' in the toctree. If<br>                           unspecified, no symlink is created.<br>     -nf, --no-ansidoc-footer<br>                           Do not render the ansidoc project footer.<br>     -e EXCLUDE, --exclude EXCLUDE<br>                           csv list of role names to exclude. Must match<br>                           directory name found under specified 'dirpath'<br>     -p, --private         Consider role(s) private, e.g.: Skip installation from<br>                           github part from rendered template.<br><br>&gt;From sphinx<br>^^^^^^^^^^^<br><br>You can import in your code and pass arguments similarly as you would do on the<br>cli.<br><br>For example:<br><br>.. code-block:: python<br><br>   from ansidoc import Ansidoc<br>   ansidoc = Ansidoc(dirpath=&lt;path/to/role&gt;, dry_run=True)<br>   ansidoc.run()<br><br>wishlist<br>--------<br><br><br>* role dependency grapher<br>* role variables analysis (to audit what is defined where)<br>* create sphinx documentation for this program<br>* make this a sphinx plugin<br>* include mardown files in defined order (alphabetical?, number the files?)<br>* override parts of template with custom one.<br><br>  * search paths to find templates (\\ ``.ansidoc/templates/*``\\ ?)<br><br>* multi-role variables<br><br>  * search paths to find config (\\ ``.ansidoc/config.yml``\\ ?)<br>  * exclude list configurable in config file<br><br>License<br>-------<br><br>MIT.<br><br>Similar Projects<br>----------------<br><br><br>* `Ansible-DocGen &lt;https://github.com/toast38coza/Ansible-DocGen&gt;`_<br><br><br>\n          </div>"}, "last_serial": 3206870, "releases": {"0.5.6": [{"comment_text": "", "digests": {"md5": "25f62a1e985eb741ecef4feaf7ed30ae", "sha256": "601c739e947142debac5125722b13a043d0be16a8150dca5ffed74da8fe54c83"}, "downloads": -1, "filename": "ansidoc-0.5.6-py3-none-any.whl", "has_sig": false, "md5_digest": "25f62a1e985eb741ecef4feaf7ed30ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9993, "upload_time": "2016-12-20T01:40:35", "upload_time_iso_8601": "2016-12-20T01:40:35.196833Z", "url": "https://files.pythonhosted.org/packages/d7/b7/75b997183cbcab74556b37b59816847d9b40b066dfc58449121c65b1f022/ansidoc-0.5.6-py3-none-any.whl", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "fd9ffd8859a69b34e6e15958ece381cb", "sha256": "09d3e3a323e04f61ab48c5181c37ab0d1710bc9f072608e5628758c77328cb51"}, "downloads": -1, "filename": "ansidoc-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fd9ffd8859a69b34e6e15958ece381cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13563, "upload_time": "2017-09-27T12:04:45", "upload_time_iso_8601": "2017-09-27T12:04:45.462438Z", "url": "https://files.pythonhosted.org/packages/33/26/cd0a1bd3501bdd354a9f9cc37edcb4d00bc5d68d9874c89f9bb4bfb10c52/ansidoc-0.6.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd9ffd8859a69b34e6e15958ece381cb", "sha256": "09d3e3a323e04f61ab48c5181c37ab0d1710bc9f072608e5628758c77328cb51"}, "downloads": -1, "filename": "ansidoc-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fd9ffd8859a69b34e6e15958ece381cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13563, "upload_time": "2017-09-27T12:04:45", "upload_time_iso_8601": "2017-09-27T12:04:45.462438Z", "url": "https://files.pythonhosted.org/packages/33/26/cd0a1bd3501bdd354a9f9cc37edcb4d00bc5d68d9874c89f9bb4bfb10c52/ansidoc-0.6.0-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:18:02 2020"}