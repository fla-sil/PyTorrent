{"info": {"author": "Joris Cadow, Antonio Foncubierta Rodriguez, Matteo Manica", "author_email": "joriscadow@gmail.com, antonio.foncubierta@gmail.com, drugilsberg@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![Build Status](https://travis-ci.org/PhosphorylatedRabbits/brontes.svg?branch=master)](https://travis-ci.org/PhosphorylatedRabbits/brontes)\n[![codecov](https://codecov.io/gh/PhosphorylatedRabbits/brontes/branch/master/graph/badge.svg)](https://codecov.io/gh/PhosphorylatedRabbits/brontes)\n[![Updates](https://pyup.io/repos/github/PhosphorylatedRabbits/brontes/shield.svg)](https://pyup.io/repos/github/PhosphorylatedRabbits/brontes)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![PyPI version](https://badge.fury.io/py/brontes.svg)](https://badge.fury.io/py/brontes)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/6dc4922e69954e96820dae93ed704736)](https://www.codacy.com/manual/drugilsberg/brontes?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=PhosphorylatedRabbits/brontes&amp;utm_campaign=Badge_Grade)\n\n# Brontes\n\nBrontes is your helping cyclops for pytorch models training.\nIt is based on [pytorch_lightning](https://github.com/williamFalcon/pytorch-lightning)\nand comes with an example script in [examples/mnist/run.py](examples/mnist/run.py) that you can adapt for your needs.\n\nAdditionally, there is an example in [examples/mlflow](examples/mlflow) which describes how to use mlflow with Brontes.\n\n## Just do this\n\nDefine your dataset_loaders as a dictionary: use `train`, `val` and optionally a `test` split:\n\n```python\ndataset_loaders = {\n    'train':\n        torch.utils.data.DataLoader(\n            datasets.MNIST(\n                root=DATA_PATH,\n                train=True,\n                download=True\n            ),\n            batch_size=BATCH_SIZE,\n            shuffle=True,\n            num_workers=NUMBER_OF_WORKERS\n        ),\n    'val':\n        torch.utils.data.DataLoader(\n            datasets.MNIST(\n                root=DATA_PATH,\n                train=False,\n                download=True\n            ),\n            batch_size=BATCH_SIZE,\n            shuffle=True,\n            num_workers=NUMBER_OF_WORKERS\n        )\n}\n```\n\ndefine your acrhitecture as a `torch.nn.Module` (or pick an existing architecture):\n\n```python\nbase_model = brontes.examples.Net()\n```\n\nand wrap it with Brontes:\n\n```python\nbrontes_model = Brontes(\n    model=base_model,\n    loss=torch.nn.NLLLoss(),\n    data_loaders=dataset_loaders,\n    optimizers=optimizer\n)\n```\n\nfinally train the model using `pytorch_lighning`\n\n```python\ntrainer = pl.Trainer(max_nb_epochs=EPOCHS)\ntrainer.fit(brontes_model)\n```\n\n## Development setup\n\nSetup the conda environment\n\n```sh\nconda env create -f conda.yml\n```\n\nActivate it:\n\n```sh\nconda activate brontes\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PhosphorylatedRabbits/brontes", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "brontes", "package_url": "https://pypi.org/project/brontes/", "platform": "", "project_url": "https://pypi.org/project/brontes/", "project_urls": {"Homepage": "https://github.com/PhosphorylatedRabbits/brontes"}, "release_url": "https://pypi.org/project/brontes/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Brontes is your helping cyclops for pytorch models training.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/PhosphorylatedRabbits/brontes\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9fc8427019ff9b07b4a35b9b6d5c1b2b39e5304d/68747470733a2f2f7472617669732d63692e6f72672f50686f7370686f72796c61746564526162626974732f62726f6e7465732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/PhosphorylatedRabbits/brontes\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d7b25bdeab7aafcb951913ea242f7a4b6e9d09a/68747470733a2f2f636f6465636f762e696f2f67682f50686f7370686f72796c61746564526162626974732f62726f6e7465732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pyup.io/repos/github/PhosphorylatedRabbits/brontes\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34756d8c36086438e1f02dedccf186a86cf9bd95/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f50686f7370686f72796c61746564526162626974732f62726f6e7465732f736869656c642e737667\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a>\n<a href=\"https://badge.fury.io/py/brontes\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7014286b12a0449aae852ed912bd0477de4e43a1/68747470733a2f2f62616467652e667572792e696f2f70792f62726f6e7465732e737667\"></a>\n<a href=\"https://www.codacy.com/manual/drugilsberg/brontes?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=PhosphorylatedRabbits/brontes&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6c76c38449be105e3868279326cbb7f9d8f14b9/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3664633439323265363939353465393638323064616539336564373034373336\"></a></p>\n<h1>Brontes</h1>\n<p>Brontes is your helping cyclops for pytorch models training.\nIt is based on <a href=\"https://github.com/williamFalcon/pytorch-lightning\" rel=\"nofollow\">pytorch_lightning</a>\nand comes with an example script in <a href=\"examples/mnist/run.py\" rel=\"nofollow\">examples/mnist/run.py</a> that you can adapt for your needs.</p>\n<p>Additionally, there is an example in <a href=\"examples/mlflow\" rel=\"nofollow\">examples/mlflow</a> which describes how to use mlflow with Brontes.</p>\n<h2>Just do this</h2>\n<p>Define your dataset_loaders as a dictionary: use <code>train</code>, <code>val</code> and optionally a <code>test</code> split:</p>\n<pre><span class=\"n\">dataset_loaders</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'train'</span><span class=\"p\">:</span>\n        <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span><span class=\"p\">(</span>\n            <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">MNIST</span><span class=\"p\">(</span>\n                <span class=\"n\">root</span><span class=\"o\">=</span><span class=\"n\">DATA_PATH</span><span class=\"p\">,</span>\n                <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n            <span class=\"p\">),</span>\n            <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"n\">BATCH_SIZE</span><span class=\"p\">,</span>\n            <span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">num_workers</span><span class=\"o\">=</span><span class=\"n\">NUMBER_OF_WORKERS</span>\n        <span class=\"p\">),</span>\n    <span class=\"s1\">'val'</span><span class=\"p\">:</span>\n        <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span><span class=\"p\">(</span>\n            <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">MNIST</span><span class=\"p\">(</span>\n                <span class=\"n\">root</span><span class=\"o\">=</span><span class=\"n\">DATA_PATH</span><span class=\"p\">,</span>\n                <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n            <span class=\"p\">),</span>\n            <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"n\">BATCH_SIZE</span><span class=\"p\">,</span>\n            <span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">num_workers</span><span class=\"o\">=</span><span class=\"n\">NUMBER_OF_WORKERS</span>\n        <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre>\n<p>define your acrhitecture as a <code>torch.nn.Module</code> (or pick an existing architecture):</p>\n<pre><span class=\"n\">base_model</span> <span class=\"o\">=</span> <span class=\"n\">brontes</span><span class=\"o\">.</span><span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">Net</span><span class=\"p\">()</span>\n</pre>\n<p>and wrap it with Brontes:</p>\n<pre><span class=\"n\">brontes_model</span> <span class=\"o\">=</span> <span class=\"n\">Brontes</span><span class=\"p\">(</span>\n    <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">base_model</span><span class=\"p\">,</span>\n    <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">NLLLoss</span><span class=\"p\">(),</span>\n    <span class=\"n\">data_loaders</span><span class=\"o\">=</span><span class=\"n\">dataset_loaders</span><span class=\"p\">,</span>\n    <span class=\"n\">optimizers</span><span class=\"o\">=</span><span class=\"n\">optimizer</span>\n<span class=\"p\">)</span>\n</pre>\n<p>finally train the model using <code>pytorch_lighning</code></p>\n<pre><span class=\"n\">trainer</span> <span class=\"o\">=</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">Trainer</span><span class=\"p\">(</span><span class=\"n\">max_nb_epochs</span><span class=\"o\">=</span><span class=\"n\">EPOCHS</span><span class=\"p\">)</span>\n<span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">brontes_model</span><span class=\"p\">)</span>\n</pre>\n<h2>Development setup</h2>\n<p>Setup the conda environment</p>\n<pre>conda env create -f conda.yml\n</pre>\n<p>Activate it:</p>\n<pre>conda activate brontes\n</pre>\n\n          </div>"}, "last_serial": 5850453, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "0070e52f1f940077ae2d7867e3d96f83", "sha256": "21d5a7fe3cb8acfc9a353e4a55651ecc001eb5f507c57d94544939099d45de17"}, "downloads": -1, "filename": "brontes-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0070e52f1f940077ae2d7867e3d96f83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4940, "upload_time": "2019-09-18T13:59:05", "upload_time_iso_8601": "2019-09-18T13:59:05.006568Z", "url": "https://files.pythonhosted.org/packages/25/2c/1792ffcecbfff693c46c04d05944394f02a015722d0f85c4a761a0f9c12a/brontes-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0070e52f1f940077ae2d7867e3d96f83", "sha256": "21d5a7fe3cb8acfc9a353e4a55651ecc001eb5f507c57d94544939099d45de17"}, "downloads": -1, "filename": "brontes-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0070e52f1f940077ae2d7867e3d96f83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4940, "upload_time": "2019-09-18T13:59:05", "upload_time_iso_8601": "2019-09-18T13:59:05.006568Z", "url": "https://files.pythonhosted.org/packages/25/2c/1792ffcecbfff693c46c04d05944394f02a015722d0f85c4a761a0f9c12a/brontes-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:16 2020"}