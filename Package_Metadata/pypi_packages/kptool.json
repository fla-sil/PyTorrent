{"info": {"author": "WAKAYAMA Shirou", "author_email": "shirou.faw@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License (GPL)", "Topic :: Security", "Topic :: Utilities"], "description": "=====================================\r\nkptool: KeePass v1 DB tool\r\n=====================================\r\n\r\n-------------------------\r\nWhat's this\r\n-------------------------\r\n\r\nKeePass version 1 database file access tool that includes access\r\nmodule.\r\n\r\nCurrently, support search the entries or groups as the command line\r\ntool.\r\n\r\n-------------------------\r\nHow to Use\r\n-------------------------\r\n\r\nExample:\r\n\r\n::\r\n\r\n  % python kptool.py <kdbfilepath>\r\n  password required\r\n  kptool> Ent\r\n  Entry2:\r\n  pass    : entry\r\n  modified: 2010-10-01 22:01:02\r\n  Entry1:\r\n  url     : URL\r\n  pass    : testtest\r\n  modified: 2010-09-26 13:18:13\r\n  kptool> ^D\r\n\r\n-------------------------\r\nBuilding and installation\r\n-------------------------\r\n\r\n  % python setup.py install\r\n\r\n-------------------------\r\nTesting\r\n-------------------------\r\n\r\n  % python setup.py test\r\n\r\n-------------------------\r\nRequirement\r\n-------------------------\r\n\r\n- Python 2.6 or later\r\n- pyCrypto\r\n- argparse\r\n\r\n-------------------------\r\nKeePassdb module API\r\n-------------------------\r\n\r\nConstructor(kdbfilepath, masterpassword)\r\n  Create DB from KeePass DB file path and Master password.\r\n\r\n  >>> from kptool.keepassdb import keepassdb\r\n  >>> password = \"Hogehoge\"\r\n  >>> k = keepassdb.KeepassDBv1(\"tests/keepass-test.kdb\", password)\r\n\r\nget_groups()\r\n  Get groups.\r\n\r\n  >>> for g in k.get_groups():\r\n  ...   if ('groups' in g):\r\n  ...     \"%s %s in %s\" % (g['title'], g['group_id'], g['groups'])\r\n  ...   else:  \r\n  ...     \"%s %s\" % (g['title'], g['group_id'])\r\n  'Group1 2877859699'\r\n  'SubGroup1 1203768070 in 2877859699'\r\n  'Group2 2251441873'\r\n\r\nget_entries()\r\n  Get entries. \r\n  Note: KeepassDB has a history. get_entries() get all entries include\r\n  history. Since that, entries that have same title may be acquired.\r\n\r\n  >>> for e in k.get_entries():\r\n  ...   print \"%s %s %s\" % (e['title'], e['username'], e['created'])\r\n  Entry2 entry2 2010-10-01 22:00:51\r\n  SubGroup1 gr 2010-10-01 22:00:29\r\n  Entry1 test 2010-09-26 13:17:55\r\n  \u65e5\u672c\u8a9e\u3067\u3059 sub 2010-10-01 21:59:33\r\n  Meta-Info SYSTEM 2010-10-01 22:01:04\r\n\r\nget_entries_from_groupid(groupid)\r\n  Get entries from groupid. Groupid should be Integer.\r\n\r\n  >>> for e in k.get_entries_from_groupid(2877859699):\r\n  ...   e['title']\r\n  'Entry1'\r\n  'Meta-Info'\r\n\r\nfind_groups(searchword)\r\n  Find groups that has <searchword> in title or id.\r\n  \r\n  >>> for g in k.find_groups(\"up1\"):\r\n  ...   g['title']\r\n  'Group1'\r\n  'SubGroup1'\r\n\r\nfind_entries(searchword)\r\n  Find entries that has <searchword> in title, url, comment or username.\r\n\r\n  >>> for e in k.find_entries(\"Ent\"):\r\n  ...   e['title']\r\n  'Entry2'\r\n  'Entry1'\r\n\r\nclear()\r\n  Clears any currently loaded groups and entries in the database.\r\n\r\n  >>> k.clear()\r\n  >>> k.get_entries()\r\n  []\r\n  >>> k.get_groups()\r\n  []\r\n\r\n*******************\r\nEntry Field Lists\r\n*******************\r\n\r\n:id: entry id. String.\r\n:group_id: group id. Integer.\r\n:icon: icon Integer.\r\n:title: title. ASCII or UTF-8\r\n:url: url\r\n:username: username \r\n:password: password\r\n:comment: comment. ASCII or UTF-8.\r\n:created: created date. Datetime object.\r\n:modifed: modified date. Datetime object.\r\n:accessed: accessed date. Datetime object.\r\n:expires: \r\n    expires date. Datetime object.\r\n    if \"never\", shows 2999-12-28 23:59:59.\r\n:bin_desc:\r\n:binary:\r\n\r\n*******************\r\nGroup Field Lists\r\n*******************\r\n:group_id: group id. Integer.\r\n:title: title\r\n:icon: icon\r\n:level: level. start from 0.\r\n:comment: comment.\r\n\r\n-------------------------\r\nBUGS\r\n-------------------------\r\n\r\n- Only Rijndael is supported.\r\n- Only passkeys are supported (no key files).\r\n- Only read methods is supported.\r\n\r\n-------------------------\r\nTODO\r\n-------------------------\r\n\r\n- Write methods.\r\n- KeePass db version 2 support.\r\n\r\n-------------------------\r\nLicense\r\n-------------------------\r\n\r\nGPL version2\r\n\r\n-------------------------\r\nAcknowledgement\r\n-------------------------\r\n\r\nKnowledge about the KeePass DB v1 format was gleaned from the source\r\ncode of keepassx-0.4.3 and File::KeePass in the CPAN.\r\n\r\nKeePassX 0.4.3 bears the copyright of\r\n\r\n  Copyright (C) 2005-2008 Tarek Saidi <tarek.saidi@arcor.de>\r\n  Copyright (C) 2007-2009 Felix Geyer <debfx-keepassx {at} fobos.de>\r\n\r\nFile::KeePass bears the copyright of \r\n\r\n  Paul Seamons <paul at seamons dot com>", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shirou/kptool", "keywords": "security,password", "license": "GPL v2", "maintainer": "", "maintainer_email": "", "name": "kptool", "package_url": "https://pypi.org/project/kptool/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/kptool/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/shirou/kptool"}, "release_url": "https://pypi.org/project/kptool/0.1dev/", "requires_dist": null, "requires_python": null, "summary": "Keepass v1 DB tool", "version": "0.1dev", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-s-this\">\n<h2>What\u2019s this</h2>\n<p>KeePass version 1 database file access tool that includes access\nmodule.</p>\n<p>Currently, support search the entries or groups as the command line\ntool.</p>\n</div>\n<div id=\"how-to-use\">\n<h2>How to Use</h2>\n<p>Example:</p>\n<pre>% python kptool.py &lt;kdbfilepath&gt;\npassword required\nkptool&gt; Ent\nEntry2:\npass    : entry\nmodified: 2010-10-01 22:01:02\nEntry1:\nurl     : URL\npass    : testtest\nmodified: 2010-09-26 13:18:13\nkptool&gt; ^D\n</pre>\n</div>\n<div id=\"building-and-installation\">\n<h2>Building and installation</h2>\n<blockquote>\n% python setup.py install</blockquote>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<blockquote>\n% python setup.py test</blockquote>\n</div>\n<div id=\"requirement\">\n<h2>Requirement</h2>\n<ul>\n<li>Python 2.6 or later</li>\n<li>pyCrypto</li>\n<li>argparse</li>\n</ul>\n</div>\n<div id=\"keepassdb-module-api\">\n<h2>KeePassdb module API</h2>\n<dl>\n<dt>Constructor(kdbfilepath, masterpassword)</dt>\n<dd><p>Create DB from KeePass DB file path and Master password.</p>\n<pre>&gt;&gt;&gt; from kptool.keepassdb import keepassdb\n&gt;&gt;&gt; password = \"Hogehoge\"\n&gt;&gt;&gt; k = keepassdb.KeepassDBv1(\"tests/keepass-test.kdb\", password)\n</pre>\n</dd>\n<dt>get_groups()</dt>\n<dd><p>Get groups.</p>\n<pre>&gt;&gt;&gt; for g in k.get_groups():\n...   if ('groups' in g):\n...     \"%s %s in %s\" % (g['title'], g['group_id'], g['groups'])\n...   else:\n...     \"%s %s\" % (g['title'], g['group_id'])\n'Group1 2877859699'\n'SubGroup1 1203768070 in 2877859699'\n'Group2 2251441873'\n</pre>\n</dd>\n<dt>get_entries()</dt>\n<dd><p>Get entries.\nNote: KeepassDB has a history. get_entries() get all entries include\nhistory. Since that, entries that have same title may be acquired.</p>\n<pre>&gt;&gt;&gt; for e in k.get_entries():\n...   print \"%s %s %s\" % (e['title'], e['username'], e['created'])\nEntry2 entry2 2010-10-01 22:00:51\nSubGroup1 gr 2010-10-01 22:00:29\nEntry1 test 2010-09-26 13:17:55\n\u65e5\u672c\u8a9e\u3067\u3059 sub 2010-10-01 21:59:33\nMeta-Info SYSTEM 2010-10-01 22:01:04\n</pre>\n</dd>\n<dt>get_entries_from_groupid(groupid)</dt>\n<dd><p>Get entries from groupid. Groupid should be Integer.</p>\n<pre>&gt;&gt;&gt; for e in k.get_entries_from_groupid(2877859699):\n...   e['title']\n'Entry1'\n'Meta-Info'\n</pre>\n</dd>\n<dt>find_groups(searchword)</dt>\n<dd><p>Find groups that has &lt;searchword&gt; in title or id.</p>\n<pre>&gt;&gt;&gt; for g in k.find_groups(\"up1\"):\n...   g['title']\n'Group1'\n'SubGroup1'\n</pre>\n</dd>\n<dt>find_entries(searchword)</dt>\n<dd><p>Find entries that has &lt;searchword&gt; in title, url, comment or username.</p>\n<pre>&gt;&gt;&gt; for e in k.find_entries(\"Ent\"):\n...   e['title']\n'Entry2'\n'Entry1'\n</pre>\n</dd>\n<dt>clear()</dt>\n<dd><p>Clears any currently loaded groups and entries in the database.</p>\n<pre>&gt;&gt;&gt; k.clear()\n&gt;&gt;&gt; k.get_entries()\n[]\n&gt;&gt;&gt; k.get_groups()\n[]\n</pre>\n</dd>\n</dl>\n<div id=\"entry-field-lists\">\n<h3>Entry Field Lists</h3>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>id:</th><td>entry id. String.</td>\n</tr>\n<tr><th>group_id:</th><td>group id. Integer.</td>\n</tr>\n<tr><th>icon:</th><td>icon Integer.</td>\n</tr>\n<tr><th>title:</th><td>title. ASCII or UTF-8</td>\n</tr>\n<tr><th>url:</th><td>url</td>\n</tr>\n<tr><th>username:</th><td>username</td>\n</tr>\n<tr><th>password:</th><td>password</td>\n</tr>\n<tr><th>comment:</th><td>comment. ASCII or UTF-8.</td>\n</tr>\n<tr><th>created:</th><td>created date. Datetime object.</td>\n</tr>\n<tr><th>modifed:</th><td>modified date. Datetime object.</td>\n</tr>\n<tr><th>accessed:</th><td>accessed date. Datetime object.</td>\n</tr>\n<tr><th>expires:</th><td>expires date. Datetime object.\nif \u201cnever\u201d, shows 2999-12-28 23:59:59.</td>\n</tr>\n<tr><th>bin_desc:</th><td></td>\n</tr>\n<tr><th>binary:</th><td></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"group-field-lists\">\n<h3>Group Field Lists</h3>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>group_id:</th><td>group id. Integer.</td>\n</tr>\n<tr><th>title:</th><td>title</td>\n</tr>\n<tr><th>icon:</th><td>icon</td>\n</tr>\n<tr><th>level:</th><td>level. start from 0.</td>\n</tr>\n<tr><th>comment:</th><td>comment.</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"bugs\">\n<h2>BUGS</h2>\n<ul>\n<li>Only Rijndael is supported.</li>\n<li>Only passkeys are supported (no key files).</li>\n<li>Only read methods is supported.</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Write methods.</li>\n<li>KeePass db version 2 support.</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>GPL version2</p>\n</div>\n<div id=\"acknowledgement\">\n<h2>Acknowledgement</h2>\n<p>Knowledge about the KeePass DB v1 format was gleaned from the source\ncode of keepassx-0.4.3 and <a>File::KeePass</a> in the CPAN.</p>\n<p>KeePassX 0.4.3 bears the copyright of</p>\n<blockquote>\nCopyright (C) 2005-2008 Tarek Saidi &lt;<a href=\"mailto:tarek.saidi%40arcor.de\">tarek<span>.</span>saidi<span>@</span>arcor<span>.</span>de</a>&gt;\nCopyright (C) 2007-2009 Felix Geyer &lt;debfx-keepassx {at} fobos.de&gt;</blockquote>\n<p><a>File::KeePass</a> bears the copyright of</p>\n<blockquote>\nPaul Seamons &lt;paul at seamons dot com&gt;</blockquote>\n</div>\n\n          </div>"}, "last_serial": 660601, "releases": {"0.1dev": [{"comment_text": "", "digests": {"md5": "5b439d0e5dacbed3191ee79dc80f96b1", "sha256": "59edf95941ff381498f97ebaa5bb19a2a8fdb8f61b2e7ba9efabdf31ee53a715"}, "downloads": -1, "filename": "kptool-0.1dev.tar.gz", "has_sig": false, "md5_digest": "5b439d0e5dacbed3191ee79dc80f96b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20342, "upload_time": "2010-11-20T08:20:25", "upload_time_iso_8601": "2010-11-20T08:20:25.078637Z", "url": "https://files.pythonhosted.org/packages/dc/cb/bb4f9049b8032aeb1564d3fb083a04abfe4d72353519b692f7910b1a2f7d/kptool-0.1dev.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b439d0e5dacbed3191ee79dc80f96b1", "sha256": "59edf95941ff381498f97ebaa5bb19a2a8fdb8f61b2e7ba9efabdf31ee53a715"}, "downloads": -1, "filename": "kptool-0.1dev.tar.gz", "has_sig": false, "md5_digest": "5b439d0e5dacbed3191ee79dc80f96b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20342, "upload_time": "2010-11-20T08:20:25", "upload_time_iso_8601": "2010-11-20T08:20:25.078637Z", "url": "https://files.pythonhosted.org/packages/dc/cb/bb4f9049b8032aeb1564d3fb083a04abfe4d72353519b692f7910b1a2f7d/kptool-0.1dev.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:51 2020"}