{"info": {"author": "Roberto Aguilar", "author_email": "roberto@zymbit.com", "bugtrack_url": null, "classifiers": [], "description": "Python Backoff Decorator\n========================\n\nThis package implements exponential backoff as a decorator.  Backoff is\ntriggered by an exception and is reset when the call is successful.\n\n\nUsage\n-----\n\nApply exponential backoff to any function or method by simply adding the\ndecorator:\n\n```python\nimport backoff\nimport requests\n\n@backoff.Backoff()\ndef send_data(data):\n    requests.post('https://example.com/data', data={'data': data})\n\ntry:\n    send_data('foo')\nexcept:\n    # do something with data that wasn't posted\n```\n\nIn the example above calls to `send_data()` will exponentially backoff when\nPOST is not successful.\n\n\nCalls During Backoff Period\n---------------------------\n\nAny calls made during the backoff period will raise an `InBackoff` exception.\n\n\nSetting Maximum Backoff\n-----------------------\n\nBy default the maximum backoff is 1 hour.  The `max_backoff` argument can be\npassed to change the default; the following will only backoff for 5 minutes:\n\n```python\n@backoff.Backoff(max_backoff=300)\ndef send_data(data):\n    requests.post('https://example.com/data', data={'data': data})\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/rca/backoff", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "exbackoff", "package_url": "https://pypi.org/project/exbackoff/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/exbackoff/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/rca/backoff"}, "release_url": "https://pypi.org/project/exbackoff/1.1.2/", "requires_dist": null, "requires_python": null, "summary": "Decorator-based exponential backoff", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            Python Backoff Decorator<br>========================<br><br>This package implements exponential backoff as a decorator.  Backoff is<br>triggered by an exception and is reset when the call is successful.<br><br><br>Usage<br>-----<br><br>Apply exponential backoff to any function or method by simply adding the<br>decorator:<br><br>```python<br>import backoff<br>import requests<br><br>@backoff.Backoff()<br>def send_data(data):<br>    requests.post('https://example.com/data', data={'data': data})<br><br>try:<br>    send_data('foo')<br>except:<br>    # do something with data that wasn't posted<br>```<br><br>In the example above calls to `send_data()` will exponentially backoff when<br>POST is not successful.<br><br><br>Calls During Backoff Period<br>---------------------------<br><br>Any calls made during the backoff period will raise an `InBackoff` exception.<br><br><br>Setting Maximum Backoff<br>-----------------------<br><br>By default the maximum backoff is 1 hour.  The `max_backoff` argument can be<br>passed to change the default; the following will only backoff for 5 minutes:<br><br>```python<br>@backoff.Backoff(max_backoff=300)<br>def send_data(data):<br>    requests.post('https://example.com/data', data={'data': data})<br>```\n          </div>"}, "last_serial": 1894107, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "9a2b7fa2081c18fb18c3801ddddc565e", "sha256": "85e8f0b97ae13622e3f6d9ccdb7c825bc8d1bc3d1162ebfed295dd2227a061ac"}, "downloads": -1, "filename": "exbackoff-1.1.0.tar.gz", "has_sig": false, "md5_digest": "9a2b7fa2081c18fb18c3801ddddc565e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2024, "upload_time": "2015-04-12T04:48:31", "upload_time_iso_8601": "2015-04-12T04:48:31.805664Z", "url": "https://files.pythonhosted.org/packages/74/7d/cb0579963f2bd476bfacc995a6c4a4908801d2ab54d652194f11f30b7c5c/exbackoff-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "c24c0a8abf1654cd0dc3d5dedcea71f9", "sha256": "70569b1bd6550cb7a4cfab0d579a87371c66a765cf149e248b1cfac7ef56487d"}, "downloads": -1, "filename": "exbackoff-1.1.1.tar.gz", "has_sig": false, "md5_digest": "c24c0a8abf1654cd0dc3d5dedcea71f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2548, "upload_time": "2015-04-12T04:50:37", "upload_time_iso_8601": "2015-04-12T04:50:37.946568Z", "url": "https://files.pythonhosted.org/packages/25/99/7a0f7dd02ef83ca6838a9c3e0e4c7be482ba2e922e156ad0ee02eb6e1e73/exbackoff-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "63d1013bcbe98c478a25e8fba043a058", "sha256": "8ba441ad8a56fb47afdb718430e31485c35a329cd02513bd1dfdc12e698be8a4"}, "downloads": -1, "filename": "exbackoff-1.1.2.tar.gz", "has_sig": false, "md5_digest": "63d1013bcbe98c478a25e8fba043a058", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2551, "upload_time": "2016-01-08T00:01:19", "upload_time_iso_8601": "2016-01-08T00:01:19.282699Z", "url": "https://files.pythonhosted.org/packages/14/d3/709397b8e4e6d866506bd9154d17f11a3ed47b4ce5f5255e95594841d33a/exbackoff-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63d1013bcbe98c478a25e8fba043a058", "sha256": "8ba441ad8a56fb47afdb718430e31485c35a329cd02513bd1dfdc12e698be8a4"}, "downloads": -1, "filename": "exbackoff-1.1.2.tar.gz", "has_sig": false, "md5_digest": "63d1013bcbe98c478a25e8fba043a058", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2551, "upload_time": "2016-01-08T00:01:19", "upload_time_iso_8601": "2016-01-08T00:01:19.282699Z", "url": "https://files.pythonhosted.org/packages/14/d3/709397b8e4e6d866506bd9154d17f11a3ed47b4ce5f5255e95594841d33a/exbackoff-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:56 2020"}