{"info": {"author": "Adam Kariv, Open Knowledge (International), Datopian", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# DataHQ auth service\n\n[![Build Status](https://travis-ci.org/datahq/auth.svg?branch=master)](https://travis-ci.org/datahq/auth)\n\nA generic OAuth2 authentication service and user permission manager.\n\n## Quick start\n\n### Clone the repo and install\n\n`make install`\n\n### Run tests\n\n`make test`\n\n### Run server\n\n`python server.py`\n\n## Env Vars\n- `PRIVATE_KEY` & `PUBLIC_KEY` an RSA key-pair in PEM format.\n  See `tools/generate_key_pair.sh` for more info.\n- `GOOGLE_KEY` & `GOOGLE_SECRET`: OAuth credentials for authenticating with Google\n- `GITHUB_KEY` & `GITHUB_SECRET`: OAuth credentials for authenticating with Github\n- `DATABASE_URL`: A SQLAlchemy compatible database connection string (where user data is stored)\n- `EXTERNAL_ADDRESS`: The hostname where this service is located on\n- `ALLOWED_SERVICES`:\n    Which permissions providers are available. A `;` delimited list of provider identifiers.\n    Each provider identifier takes the form of `[alias:]provider`, where `provider` is the name of a Python module\n    which exports a `get_permissions(service, userid)` function.\n- `INSTALLED_EXTENSIONS`:\n    List of installed extensions. A `;` delimited list of `extension` - the name of a Python modules which exports one or all of these functions\n    - `on_new_user(user_info)`\n    - `on_user_login(user_info)`\n    - `on_user_logout(user_info)`\n\n\n## API\n\n### Check an authentication token's validity\n`/auth/check`\n\n**Method:** `GET`\n\n**Query Parameters:**\n\n - `jwt` - authentication token\n - `next` - URL to redirect to when finished authentication\n\n**Returns:**\n\nIf authenticated:\n\n```json\n{\n    \"authenticated\": true,\n    \"profile\": {\n        \"id\": \"<user-id>\",\n        \"name\": \"<user-name>\",\n        \"email\": \"<user-email>\",\n        \"avatar_url\": \"<url-for-user's-profile-photo>\",\n        \"idhash\": \"<unique-id-of-the-user>\",\n        \"username\": \"<user-selected-id>\" # If user has a username\n    }\n}\n```\n\nIf not:\n\n```json\n{\n    \"authenticated\": false,\n    \"providers\": {\n        \"google\": {\n            \"url\": \"<url-for-logging-in-with-the-Google-provider>\"\n        },\n        \"github\": {\n            \"url\": \"<url-for-logging-in-with-the-Github-provider>\"\n        },\n    }\n}\n```\n\nWhen the authentication flow is finished, the caller will be redirected to the `next` URL with an extra query parameter\n`jwt` which contains the authentication token. The caller should cache this token for further interactions with the API.\n\n### Get permission for a service\n`/auth/authorize`\n\n**Method:** `GET`\n\n**Query Parameters:**\n\n - `jwt` - user token (received from `/user/check`)\n - `service` - the relevant service (e.g. `storage-service`)\n\n**Returns:**\n\n```json\n{\n    \"token\": \"<token-for-the-relevant-service>\"\n    \"userid\": \"<unique-id-of-the-user>\",\n    \"permissions\": {\n        \"permission-x\": true,\n        \"permission-y\": false\n    },\n    \"service\": \"<relevant-service>\"\n}\n```\n\n### Change the username\n`/auth/update`\n\n**Method:** `POST`\n\n**Query Parameters:**\n\n - `jwt` - authentication token (received from `/user/check`)\n - `username` - A new username for the user profile (this action is only allowed once)\n\n**Returns:**\n\n```json\n{\n    \"success\": true,\n    \"error\": \"<error-message-if-applicable>\"\n}\n```\n\n__Note__: trying to update other user profile fields like `email` will fail silently and return\n\n```json\n{\n    \"success\": true\n}\n```\n\n### Receive authorization public key\n`/auth/public-key`\n\n**Method:** `GET`\n\n**Returns:**\n\nThe service's public key in PEM format.\n\nCan be used by services to validate that the permission token is authentic.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/datahq/auth", "keywords": "data,auth", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dhq-auth", "package_url": "https://pypi.org/project/dhq-auth/", "platform": "", "project_url": "https://pypi.org/project/dhq-auth/", "project_urls": {"Homepage": "https://github.com/datahq/auth"}, "release_url": "https://pypi.org/project/dhq-auth/0.1.6/", "requires_dist": ["flask", "flask-cors", "flask-jsonpify", "flask-session", "flask-oauthlib", "pyjwt", "sqlalchemy", "cryptography", "psycopg2", "requests", "pylama ; extra == 'develop'", "tox ; extra == 'develop'", "coverage ; extra == 'develop'", "coveralls ; extra == 'develop'", "pytest ; extra == 'develop'", "pytest-cov ; extra == 'develop'", "requests-mock (==1.3.0) ; extra == 'develop'"], "requires_python": "", "summary": "{{ DESCRIPTION }}", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DataHQ auth service</h1>\n<p><a href=\"https://travis-ci.org/datahq/auth\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a9ec53858e009c53933a2e56c48f65fd93cc86a/68747470733a2f2f7472617669732d63692e6f72672f6461746168712f617574682e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>A generic OAuth2 authentication service and user permission manager.</p>\n<h2>Quick start</h2>\n<h3>Clone the repo and install</h3>\n<p><code>make install</code></p>\n<h3>Run tests</h3>\n<p><code>make test</code></p>\n<h3>Run server</h3>\n<p><code>python server.py</code></p>\n<h2>Env Vars</h2>\n<ul>\n<li><code>PRIVATE_KEY</code> &amp; <code>PUBLIC_KEY</code> an RSA key-pair in PEM format.\nSee <code>tools/generate_key_pair.sh</code> for more info.</li>\n<li><code>GOOGLE_KEY</code> &amp; <code>GOOGLE_SECRET</code>: OAuth credentials for authenticating with Google</li>\n<li><code>GITHUB_KEY</code> &amp; <code>GITHUB_SECRET</code>: OAuth credentials for authenticating with Github</li>\n<li><code>DATABASE_URL</code>: A SQLAlchemy compatible database connection string (where user data is stored)</li>\n<li><code>EXTERNAL_ADDRESS</code>: The hostname where this service is located on</li>\n<li><code>ALLOWED_SERVICES</code>:\nWhich permissions providers are available. A <code>;</code> delimited list of provider identifiers.\nEach provider identifier takes the form of <code>[alias:]provider</code>, where <code>provider</code> is the name of a Python module\nwhich exports a <code>get_permissions(service, userid)</code> function.</li>\n<li><code>INSTALLED_EXTENSIONS</code>:\nList of installed extensions. A <code>;</code> delimited list of <code>extension</code> - the name of a Python modules which exports one or all of these functions\n<ul>\n<li><code>on_new_user(user_info)</code></li>\n<li><code>on_user_login(user_info)</code></li>\n<li><code>on_user_logout(user_info)</code></li>\n</ul>\n</li>\n</ul>\n<h2>API</h2>\n<h3>Check an authentication token's validity</h3>\n<p><code>/auth/check</code></p>\n<p><strong>Method:</strong> <code>GET</code></p>\n<p><strong>Query Parameters:</strong></p>\n<ul>\n<li><code>jwt</code> - authentication token</li>\n<li><code>next</code> - URL to redirect to when finished authentication</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>If authenticated:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"authenticated\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"profile\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;user-id&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;user-name&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"email\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;user-email&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"avatar_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;url-for-user's-profile-photo&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"idhash\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;unique-id-of-the-user&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"username\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;user-selected-id&gt;\"</span> <span class=\"err\">#</span> <span class=\"err\">If</span> <span class=\"err\">user</span> <span class=\"err\">has</span> <span class=\"err\">a</span> <span class=\"err\">username</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>If not:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"authenticated\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"providers\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"google\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;url-for-logging-in-with-the-Google-provider&gt;\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">\"github\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;url-for-logging-in-with-the-Github-provider&gt;\"</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>When the authentication flow is finished, the caller will be redirected to the <code>next</code> URL with an extra query parameter\n<code>jwt</code> which contains the authentication token. The caller should cache this token for further interactions with the API.</p>\n<h3>Get permission for a service</h3>\n<p><code>/auth/authorize</code></p>\n<p><strong>Method:</strong> <code>GET</code></p>\n<p><strong>Query Parameters:</strong></p>\n<ul>\n<li><code>jwt</code> - user token (received from <code>/user/check</code>)</li>\n<li><code>service</code> - the relevant service (e.g. <code>storage-service</code>)</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"token\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;token-for-the-relevant-service&gt;\"</span>\n    <span class=\"s2\">\"userid\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;unique-id-of-the-user&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"permissions\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"permission-x\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"permission-y\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"service\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;relevant-service&gt;\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Change the username</h3>\n<p><code>/auth/update</code></p>\n<p><strong>Method:</strong> <code>POST</code></p>\n<p><strong>Query Parameters:</strong></p>\n<ul>\n<li><code>jwt</code> - authentication token (received from <code>/user/check</code>)</li>\n<li><code>username</code> - A new username for the user profile (this action is only allowed once)</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"success\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"error\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;error-message-if-applicable&gt;\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p><strong>Note</strong>: trying to update other user profile fields like <code>email</code> will fail silently and return</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"success\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Receive authorization public key</h3>\n<p><code>/auth/public-key</code></p>\n<p><strong>Method:</strong> <code>GET</code></p>\n<p><strong>Returns:</strong></p>\n<p>The service's public key in PEM format.</p>\n<p>Can be used by services to validate that the permission token is authentic.</p>\n\n          </div>"}, "last_serial": 6711696, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "8755d08ec880542dfa81e30de94fbd30", "sha256": "c48f9cda80dcf869dd3cf8498915bdf6fb29bfa286c1adb2aafd4ade7a592807"}, "downloads": -1, "filename": "dhq-auth-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8755d08ec880542dfa81e30de94fbd30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30725, "upload_time": "2018-11-04T06:51:43", "upload_time_iso_8601": "2018-11-04T06:51:43.702798Z", "url": "https://files.pythonhosted.org/packages/da/fd/cfa2232fbad4e8ea0bf232a75b380687e092145f7d457d41335f59efe694/dhq-auth-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9095fed38bb5fb127f4e1828be766f3d", "sha256": "aa7f95407a6997200c6059b6e90511d4c44bda21e023603a4de9e48943b32edd"}, "downloads": -1, "filename": "dhq-auth-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9095fed38bb5fb127f4e1828be766f3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9514, "upload_time": "2018-11-04T07:04:53", "upload_time_iso_8601": "2018-11-04T07:04:53.284206Z", "url": "https://files.pythonhosted.org/packages/14/b2/dd8112ecd4f0abaff9ac36c3ea84052f2d6481a84f4964eca36f2eb3dd75/dhq-auth-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f9becec1edaeb938fdb255d39f8fdabc", "sha256": "6750506ed9acd03bba7ff49a49ea59b8049106831012a3eb2909ab2357bf03d1"}, "downloads": -1, "filename": "dhq-auth-0.1.3.tar.gz", "has_sig": false, "md5_digest": "f9becec1edaeb938fdb255d39f8fdabc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9578, "upload_time": "2018-11-14T21:07:13", "upload_time_iso_8601": "2018-11-14T21:07:13.139816Z", "url": "https://files.pythonhosted.org/packages/4a/60/6ba5cd49de9a9a5926f6118678f3e0a0124f21fb0878156a8fa5e626a0f8/dhq-auth-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "d8733584f6f4e4850d194abfe5fd1450", "sha256": "87bb001b160a305aa8976e70bb5ed98889e4ab16adc644b0fc8082b03d4bbe04"}, "downloads": -1, "filename": "dhq_auth-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d8733584f6f4e4850d194abfe5fd1450", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11327, "upload_time": "2020-02-27T13:46:15", "upload_time_iso_8601": "2020-02-27T13:46:15.740311Z", "url": "https://files.pythonhosted.org/packages/28/b0/ae7b0d2c6164f827486b95a7a6d9eef497f31fdf029fbca894b5c5486cc7/dhq_auth-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acf5b153a1e64abf9468188dbe1131b0", "sha256": "82d1da9167184ecc019de59f218738f2ae62197fd3d25fead4945bf96f1e802d"}, "downloads": -1, "filename": "dhq-auth-0.1.4.tar.gz", "has_sig": false, "md5_digest": "acf5b153a1e64abf9468188dbe1131b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26704, "upload_time": "2020-02-27T13:46:17", "upload_time_iso_8601": "2020-02-27T13:46:17.314979Z", "url": "https://files.pythonhosted.org/packages/49/61/2eaddd17b6baf3eb1ac74e4aca0352cfc6e0d46aa7d87fec7b2334890719/dhq-auth-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "df966d7a349ae580fc28140c5cc95b07", "sha256": "9ba71690277d87bcf21bb97808d070c9a8b3d4131e12bb8651e48486c75a4760"}, "downloads": -1, "filename": "dhq_auth-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "df966d7a349ae580fc28140c5cc95b07", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11378, "upload_time": "2020-02-27T14:38:32", "upload_time_iso_8601": "2020-02-27T14:38:32.152003Z", "url": "https://files.pythonhosted.org/packages/9e/df/0011f2dbc8f5de3927e9825a5a0c46f17b5b19bdec8afe5eebd62e610d78/dhq_auth-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06ffe1a4c4318c62d16ccdfdb8032f9f", "sha256": "1e1104c43025add572df284879d6516d2f7cbf00801015fa08fa841238d75468"}, "downloads": -1, "filename": "dhq-auth-0.1.5.tar.gz", "has_sig": false, "md5_digest": "06ffe1a4c4318c62d16ccdfdb8032f9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27170, "upload_time": "2020-02-27T14:38:34", "upload_time_iso_8601": "2020-02-27T14:38:34.287785Z", "url": "https://files.pythonhosted.org/packages/ee/7e/20c270cbd078516d421b97897a4b41c6522efa685c1a0aef924532f38735/dhq-auth-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "de5e6ae00c3e1557a58c20826324952d", "sha256": "9ab3814d5cfe67fd0c9586f85e3f13becc1d14c530c93729f5eb8a29a4f509f5"}, "downloads": -1, "filename": "dhq_auth-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "de5e6ae00c3e1557a58c20826324952d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11403, "upload_time": "2020-02-27T15:49:06", "upload_time_iso_8601": "2020-02-27T15:49:06.057829Z", "url": "https://files.pythonhosted.org/packages/35/23/a537158ec2e607404f06e5fd8fd6f28c7f9782bc0817f32a8fda389e2486/dhq_auth-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19868df3681270528db2b72d03940fe2", "sha256": "cd94ef3b32456d3101b2b7b58d52b249440f767f267a2b8dd5d8b6825f073fea"}, "downloads": -1, "filename": "dhq-auth-0.1.6.tar.gz", "has_sig": false, "md5_digest": "19868df3681270528db2b72d03940fe2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27312, "upload_time": "2020-02-27T15:49:08", "upload_time_iso_8601": "2020-02-27T15:49:08.364328Z", "url": "https://files.pythonhosted.org/packages/2d/32/59ebb49a14a5c88bbb284cca3355189ce43f447bc6f9479ab50a0ed49507/dhq-auth-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "de5e6ae00c3e1557a58c20826324952d", "sha256": "9ab3814d5cfe67fd0c9586f85e3f13becc1d14c530c93729f5eb8a29a4f509f5"}, "downloads": -1, "filename": "dhq_auth-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "de5e6ae00c3e1557a58c20826324952d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11403, "upload_time": "2020-02-27T15:49:06", "upload_time_iso_8601": "2020-02-27T15:49:06.057829Z", "url": "https://files.pythonhosted.org/packages/35/23/a537158ec2e607404f06e5fd8fd6f28c7f9782bc0817f32a8fda389e2486/dhq_auth-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19868df3681270528db2b72d03940fe2", "sha256": "cd94ef3b32456d3101b2b7b58d52b249440f767f267a2b8dd5d8b6825f073fea"}, "downloads": -1, "filename": "dhq-auth-0.1.6.tar.gz", "has_sig": false, "md5_digest": "19868df3681270528db2b72d03940fe2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27312, "upload_time": "2020-02-27T15:49:08", "upload_time_iso_8601": "2020-02-27T15:49:08.364328Z", "url": "https://files.pythonhosted.org/packages/2d/32/59ebb49a14a5c88bbb284cca3355189ce43f447bc6f9479ab50a0ed49507/dhq-auth-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:39 2020"}