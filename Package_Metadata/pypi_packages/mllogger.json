{"info": {"author": "Shagun Sodhani", "author_email": "sshagunsodhani@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "[![CircleCI](https://circleci.com/gh/shagunsodhani/ml-logger.svg?style=svg)](https://circleci.com/gh/shagunsodhani/ml-logger)\n![PyPI - License](https://img.shields.io/pypi/l/mllogger)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mllogger)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n# ml-logger\nLogging utility for ML experiments\n\n### Why\n\nPeople use different tools for logging experimental results - [Tensorboard](https://www.tensorflow.org/tensorboard), [Wandb](https://www.wandb.com/) etc to name a few. Working with different collaborators, I will have to switch my logging tool with each new project. So I made this simple tool that provides a common interface to logging results to different loggers.\n\n### Installation\n\n* `pip install \"mllogger[all]\"`\n\nIf you want to use only the filesystem logger, use `pip install \"mllogger\"`\n\n**Install from source**\n\n* `git clone git@github.com:shagunsodhani/ml-logger.git`\n* `cd ml-logger`\n* `pip install \".[all]\"`\n\nAlternatively, `pip install \"git+https://git@github.com/shagunsodhani/ml-logger.git@master#egg=ml_logger[all]\"`\n\nIf you want to use only the filesystem logger, use `pip install .` or `pip install \"git+https://git@github.com/shagunsodhani/ml-logger.git@master#egg=ml_logger\"`.\n\n### Documentation\n\n[https://shagunsodhani.github.io/ml-logger](https://shagunsodhani.github.io/ml-logger/)\n\n### Use\n\n* Make a `logbook_config`:\n\n    ```\n    from ml_logger import logbook as ml_logbook\n    logbook_config = ml_logbook.make_config(\n        logger_dir = <path to write logs>,\n        wandb_config = <wandb config or None>,\n        tensorboard_config = <tensorboard config or None>,\n        mlflow_config = <mlflow config or None>)\n    ```\n\n    The API for `make_config` can be accessed [here](https://shagunsodhani.com/ml-logger/ml_logger.html?highlight=logbook%20make_config#ml_logger.logbook.make_config).\n\n* Make a `LogBook` instance:\n\n    ```\n    logbook = ml_logbook.LogBook(config = logbook_config)\n    ```\n\n* Use the `logbook` instance:\n\n    ```\n    log = {\n        \"epoch\": 1,\n        \"loss\": 0.1,\n        \"accuracy\": 0.2\n    }\n    logbook.write_metric_log(log)\n    ```\n    The API for `write_metric_log` can be accessed [here](https://shagunsodhani.com/ml-logger/ml_logger.html?highlight=write_metric_log#ml_logger.logbook.LogBook.write_metric_log).\n\n### Note\n\n* If you are writing to wandb, the `log` must have a key called `step`. If your `log` already captures the `step` but as a different key (say `epoch`), you can pass the `wandb_key_map` argument (set as `{epoch: step}`). For more details, refer the documentation [here](https://shagunsodhani.com/ml-logger/ml_logger.html?highlight=make_config#ml_logger.logbook.make_config).\n\n* If you are writing to mlflow, the `log` must have a key called `step`. If your `log` already captures the `step` but as a different key (say `epoch`), you can pass the `mlflow_key_map` argument (set as `{epoch: step}`). For more details, refer the documentation [here](https://shagunsodhani.com/ml-logger/ml_logger.html?highlight=make_config#ml_logger.logbook.make_config).\n\n* If you are writing to tensorboard, the `log` must have a key called `main_tag` or `tag` which acts as the data Identifier and another key called `global_step`. These keys are described [here](https://tensorboardx.readthedocs.io/en/latest/tensorboard.html#tensorboardX.SummaryWriter.add_scalars). If your `log` already captures these values but as different key (say `mode` for `main_tag` and `epoch` for `global_step`), you can pass the `tensorboard_key_map` argument (set as `{mode: main_tag, epoch: global_step}`). For more details, refer the documentation [here](https://shagunsodhani.com/ml-logger/ml_logger.html?highlight=make_config#ml_logger.logbook.make_config).\n\n\n### Dev Setup\n\n* `pip install -e \".[dev]\"`\n* Install pre-commit hooks `pre-commit install`\n* The code is linted using:\n    * `black`\n    * `flake8`\n    * `mypy`\n* Tests can be run locally using `nox`\n\n### Acknowledgements\n\n* Config for `circleci`, `pre-commit`, `mypy` etc are borrowed/modified from [Hydra](https://github.com/facebookresearch/hydra)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shagunsodhani/ml-logger", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mllogger", "package_url": "https://pypi.org/project/mllogger/", "platform": "", "project_url": "https://pypi.org/project/mllogger/", "project_urls": {"Homepage": "https://github.com/shagunsodhani/ml-logger"}, "release_url": "https://pypi.org/project/mllogger/0.5/", "requires_dist": ["pandas (==0.25.3)", "tinydb (==3.15.2)", "wandb (==0.8.28) ; extra == 'all'", "tensorboardX (==2.0) ; extra == 'all'", "mlflow (==1.7.0) ; extra == 'all'", "black (==19.10b) ; extra == 'dev'", "flake8-bugbear (==20.1.4) ; extra == 'dev'", "flake8-comprehensions (==3.2.2) ; extra == 'dev'", "flake8 (==3.7.9) ; extra == 'dev'", "mypy (==0.740) ; extra == 'dev'", "nox (==2019.11.9) ; extra == 'dev'", "pandas (==0.25.3) ; extra == 'dev'", "pre-commit (==2.0.1) ; extra == 'dev'", "pytest (==5.3.5) ; extra == 'dev'", "sphinx-autodoc-annotation (==1.0-1) ; extra == 'dev'", "sphinx-rtd-theme (==0.4.3) ; extra == 'dev'", "sphinx (==2.4.3) ; extra == 'dev'", "sphinxcontrib-napoleon (==0.7) ; extra == 'dev'", "tinydb (==3.15.2) ; extra == 'dev'", "twine (==3.1.1) ; extra == 'dev'", "typing-extensions (==3.7.4.1) ; extra == 'dev'"], "requires_python": ">=3.6", "summary": "Logging Utility for ML Experiments", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://circleci.com/gh/shagunsodhani/ml-logger\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b37057659395b09120fae245417b3a63dced15d/68747470733a2f2f636972636c6563692e636f6d2f67682f73686167756e736f6468616e692f6d6c2d6c6f676765722e7376673f7374796c653d737667\"></a>\n<img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/708de7990a8aa792a980bf78e5cb8f747da48d1d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6d6c6c6f67676572\">\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/656598b983f124376015984e4f71310afaf196b8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d6c6c6f67676572\">\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<h1>ml-logger</h1>\n<p>Logging utility for ML experiments</p>\n<h3>Why</h3>\n<p>People use different tools for logging experimental results - <a href=\"https://www.tensorflow.org/tensorboard\" rel=\"nofollow\">Tensorboard</a>, <a href=\"https://www.wandb.com/\" rel=\"nofollow\">Wandb</a> etc to name a few. Working with different collaborators, I will have to switch my logging tool with each new project. So I made this simple tool that provides a common interface to logging results to different loggers.</p>\n<h3>Installation</h3>\n<ul>\n<li><code>pip install \"mllogger[all]\"</code></li>\n</ul>\n<p>If you want to use only the filesystem logger, use <code>pip install \"mllogger\"</code></p>\n<p><strong>Install from source</strong></p>\n<ul>\n<li><code>git clone git@github.com:shagunsodhani/ml-logger.git</code></li>\n<li><code>cd ml-logger</code></li>\n<li><code>pip install \".[all]\"</code></li>\n</ul>\n<p>Alternatively, <code>pip install \"git+https://git@github.com/shagunsodhani/ml-logger.git@master#egg=ml_logger[all]\"</code></p>\n<p>If you want to use only the filesystem logger, use <code>pip install .</code> or <code>pip install \"git+https://git@github.com/shagunsodhani/ml-logger.git@master#egg=ml_logger\"</code>.</p>\n<h3>Documentation</h3>\n<p><a href=\"https://shagunsodhani.github.io/ml-logger/\" rel=\"nofollow\">https://shagunsodhani.github.io/ml-logger</a></p>\n<h3>Use</h3>\n<ul>\n<li>\n<p>Make a <code>logbook_config</code>:</p>\n<pre><code>from ml_logger import logbook as ml_logbook\nlogbook_config = ml_logbook.make_config(\n    logger_dir = &lt;path to write logs&gt;,\n    wandb_config = &lt;wandb config or None&gt;,\n    tensorboard_config = &lt;tensorboard config or None&gt;,\n    mlflow_config = &lt;mlflow config or None&gt;)\n</code></pre>\n<p>The API for <code>make_config</code> can be accessed <a href=\"https://shagunsodhani.com/ml-logger/ml_logger.html?highlight=logbook%20make_config#ml_logger.logbook.make_config\" rel=\"nofollow\">here</a>.</p>\n</li>\n<li>\n<p>Make a <code>LogBook</code> instance:</p>\n<pre><code>logbook = ml_logbook.LogBook(config = logbook_config)\n</code></pre>\n</li>\n<li>\n<p>Use the <code>logbook</code> instance:</p>\n<pre><code>log = {\n    \"epoch\": 1,\n    \"loss\": 0.1,\n    \"accuracy\": 0.2\n}\nlogbook.write_metric_log(log)\n</code></pre>\n<p>The API for <code>write_metric_log</code> can be accessed <a href=\"https://shagunsodhani.com/ml-logger/ml_logger.html?highlight=write_metric_log#ml_logger.logbook.LogBook.write_metric_log\" rel=\"nofollow\">here</a>.</p>\n</li>\n</ul>\n<h3>Note</h3>\n<ul>\n<li>\n<p>If you are writing to wandb, the <code>log</code> must have a key called <code>step</code>. If your <code>log</code> already captures the <code>step</code> but as a different key (say <code>epoch</code>), you can pass the <code>wandb_key_map</code> argument (set as <code>{epoch: step}</code>). For more details, refer the documentation <a href=\"https://shagunsodhani.com/ml-logger/ml_logger.html?highlight=make_config#ml_logger.logbook.make_config\" rel=\"nofollow\">here</a>.</p>\n</li>\n<li>\n<p>If you are writing to mlflow, the <code>log</code> must have a key called <code>step</code>. If your <code>log</code> already captures the <code>step</code> but as a different key (say <code>epoch</code>), you can pass the <code>mlflow_key_map</code> argument (set as <code>{epoch: step}</code>). For more details, refer the documentation <a href=\"https://shagunsodhani.com/ml-logger/ml_logger.html?highlight=make_config#ml_logger.logbook.make_config\" rel=\"nofollow\">here</a>.</p>\n</li>\n<li>\n<p>If you are writing to tensorboard, the <code>log</code> must have a key called <code>main_tag</code> or <code>tag</code> which acts as the data Identifier and another key called <code>global_step</code>. These keys are described <a href=\"https://tensorboardx.readthedocs.io/en/latest/tensorboard.html#tensorboardX.SummaryWriter.add_scalars\" rel=\"nofollow\">here</a>. If your <code>log</code> already captures these values but as different key (say <code>mode</code> for <code>main_tag</code> and <code>epoch</code> for <code>global_step</code>), you can pass the <code>tensorboard_key_map</code> argument (set as <code>{mode: main_tag, epoch: global_step}</code>). For more details, refer the documentation <a href=\"https://shagunsodhani.com/ml-logger/ml_logger.html?highlight=make_config#ml_logger.logbook.make_config\" rel=\"nofollow\">here</a>.</p>\n</li>\n</ul>\n<h3>Dev Setup</h3>\n<ul>\n<li><code>pip install -e \".[dev]\"</code></li>\n<li>Install pre-commit hooks <code>pre-commit install</code></li>\n<li>The code is linted using:\n<ul>\n<li><code>black</code></li>\n<li><code>flake8</code></li>\n<li><code>mypy</code></li>\n</ul>\n</li>\n<li>Tests can be run locally using <code>nox</code></li>\n</ul>\n<h3>Acknowledgements</h3>\n<ul>\n<li>Config for <code>circleci</code>, <code>pre-commit</code>, <code>mypy</code> etc are borrowed/modified from <a href=\"https://github.com/facebookresearch/hydra\" rel=\"nofollow\">Hydra</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6917597, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "a35b7e45ce534ab21db4350c5cbf3abd", "sha256": "aecfca0ea5c8f9c0d9b3eec093b8d81aaa8081817f127d6ee8e5bee30688ce70"}, "downloads": -1, "filename": "mllogger-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a35b7e45ce534ab21db4350c5cbf3abd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19071, "upload_time": "2020-03-07T20:17:00", "upload_time_iso_8601": "2020-03-07T20:17:00.139601Z", "url": "https://files.pythonhosted.org/packages/86/55/8a4e44404a6d4d5a050fb88d488d7216f7050776c4c3364190dd7d17c83c/mllogger-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ec4e4d51f474c750c360ed40ddbb032", "sha256": "4bb5436cd3a6273ca222b947492977ff1674adfe13f8ff37567b15dc386b7584"}, "downloads": -1, "filename": "mllogger-0.3.tar.gz", "has_sig": false, "md5_digest": "2ec4e4d51f474c750c360ed40ddbb032", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12190, "upload_time": "2020-03-07T20:17:01", "upload_time_iso_8601": "2020-03-07T20:17:01.357566Z", "url": "https://files.pythonhosted.org/packages/1b/ce/da59ea5f573315b1583d59f7041c3716d7b4a67e47c39672455b6211884f/mllogger-0.3.tar.gz", "yanked": false}], "0.3rc5": [{"comment_text": "", "digests": {"md5": "61c176d40dc19cbd55eae77f309fa305", "sha256": "9c610ba3471c9b784978d4d8b4a93164002ff5ebaed19782c24f326b3fa95395"}, "downloads": -1, "filename": "mllogger-0.3rc5-py3-none-any.whl", "has_sig": false, "md5_digest": "61c176d40dc19cbd55eae77f309fa305", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18963, "upload_time": "2020-03-07T14:10:37", "upload_time_iso_8601": "2020-03-07T14:10:37.476447Z", "url": "https://files.pythonhosted.org/packages/93/d9/05e3c93d13be2a298923aa222781fbd660b1a2b849de2946cf5feda87874/mllogger-0.3rc5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "445e9fbcd13d1214bf3f9d69d90ce3cc", "sha256": "13ecb9c73a22c7983a2d3a3a8a016cc619a2f8fedab81bc1a922f5cee0880499"}, "downloads": -1, "filename": "mllogger-0.3rc5.tar.gz", "has_sig": false, "md5_digest": "445e9fbcd13d1214bf3f9d69d90ce3cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12013, "upload_time": "2020-03-07T14:10:39", "upload_time_iso_8601": "2020-03-07T14:10:39.878296Z", "url": "https://files.pythonhosted.org/packages/ca/8e/b149c2c841c8467214873c46731d34f3b67a02f7b11e920c314a7a283d0c/mllogger-0.3rc5.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "fcaf83d71a2d6691f7af24748fd7996a", "sha256": "973d55a9e3f23992fb56c7aefe84281c5e6cfa03232380ee3899d34d2b7567f0"}, "downloads": -1, "filename": "mllogger-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "fcaf83d71a2d6691f7af24748fd7996a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20382, "upload_time": "2020-03-16T17:01:15", "upload_time_iso_8601": "2020-03-16T17:01:15.333346Z", "url": "https://files.pythonhosted.org/packages/d8/93/038f4b0b934aeaad8773a3851a6680da35454a4be8deb1a1f2475381a7f7/mllogger-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f6601e30adda268421822c2e3813b19", "sha256": "6b5410046d094c68eaf9b84ea05f2000640808af4e3f4c809aaca5cdbdbd2276"}, "downloads": -1, "filename": "mllogger-0.4.tar.gz", "has_sig": false, "md5_digest": "6f6601e30adda268421822c2e3813b19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13374, "upload_time": "2020-03-16T17:01:16", "upload_time_iso_8601": "2020-03-16T17:01:16.649545Z", "url": "https://files.pythonhosted.org/packages/21/3d/5d3438543acfd1165defd66a0f2d8ebaa29d68052439868a10eaf3b56637/mllogger-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "8291fd841e3982a1f9493efa06b18cc9", "sha256": "a77daa9afcd95cad80112c0fe33ce9e4502addfbfa6e61f6ba2de94eae4b2b3a"}, "downloads": -1, "filename": "mllogger-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "8291fd841e3982a1f9493efa06b18cc9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22737, "upload_time": "2020-03-31T04:08:22", "upload_time_iso_8601": "2020-03-31T04:08:22.913982Z", "url": "https://files.pythonhosted.org/packages/55/b6/2a4d72b5cd6c10ddea5f1557467e2cfb5848cffd7e8e3271acf6c62d559e/mllogger-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f3508a623595ad0ff0fb129f98454c6", "sha256": "60fa472a7aeb121ea8c516bfd1235157e042877dc92acaeee648e5f81987d802"}, "downloads": -1, "filename": "mllogger-0.5.tar.gz", "has_sig": false, "md5_digest": "1f3508a623595ad0ff0fb129f98454c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15038, "upload_time": "2020-03-31T04:08:24", "upload_time_iso_8601": "2020-03-31T04:08:24.187797Z", "url": "https://files.pythonhosted.org/packages/c8/9e/8c044649d3c659838f43b96b1f015c117ad51075995a9447fe5bc6f873e9/mllogger-0.5.tar.gz", "yanked": false}], "0.5rc1": [{"comment_text": "", "digests": {"md5": "5b1a10b74aaf254ae3e206f1ce293a89", "sha256": "e2d91ef5bdf4dbcd0ce4da5116cf0cff67a4cdd9f4780716d386896400bb8981"}, "downloads": -1, "filename": "mllogger-0.5rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "5b1a10b74aaf254ae3e206f1ce293a89", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22695, "upload_time": "2020-03-25T22:32:06", "upload_time_iso_8601": "2020-03-25T22:32:06.687988Z", "url": "https://files.pythonhosted.org/packages/42/42/4c21105f3923ad90422c6edae3c4e33295d1b68e9b0ad5dcbae9b2f3226d/mllogger-0.5rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e49cb10557647e12e4addc71ab872798", "sha256": "03f4f02f2a792b593ec49235af97b6c5d54c3fa2221ceef35ad2582bd151f5a0"}, "downloads": -1, "filename": "mllogger-0.5rc1.tar.gz", "has_sig": false, "md5_digest": "e49cb10557647e12e4addc71ab872798", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14860, "upload_time": "2020-03-25T22:32:07", "upload_time_iso_8601": "2020-03-25T22:32:07.875887Z", "url": "https://files.pythonhosted.org/packages/1c/d5/a90ee8dfc7c70850167b8f0084dff1397c4d413aaa9600895f28a9975d69/mllogger-0.5rc1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8291fd841e3982a1f9493efa06b18cc9", "sha256": "a77daa9afcd95cad80112c0fe33ce9e4502addfbfa6e61f6ba2de94eae4b2b3a"}, "downloads": -1, "filename": "mllogger-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "8291fd841e3982a1f9493efa06b18cc9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22737, "upload_time": "2020-03-31T04:08:22", "upload_time_iso_8601": "2020-03-31T04:08:22.913982Z", "url": "https://files.pythonhosted.org/packages/55/b6/2a4d72b5cd6c10ddea5f1557467e2cfb5848cffd7e8e3271acf6c62d559e/mllogger-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f3508a623595ad0ff0fb129f98454c6", "sha256": "60fa472a7aeb121ea8c516bfd1235157e042877dc92acaeee648e5f81987d802"}, "downloads": -1, "filename": "mllogger-0.5.tar.gz", "has_sig": false, "md5_digest": "1f3508a623595ad0ff0fb129f98454c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15038, "upload_time": "2020-03-31T04:08:24", "upload_time_iso_8601": "2020-03-31T04:08:24.187797Z", "url": "https://files.pythonhosted.org/packages/c8/9e/8c044649d3c659838f43b96b1f015c117ad51075995a9447fe5bc6f873e9/mllogger-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:29 2020"}