{"info": {"author": "Felix Schwarz, Martin H\u00e4cker, Robert Buchholz", "author_email": "felix.schwarz@web.de, spamfaenger@gmx.de, rbu@rbu.sh, tony@git-pull.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Topic :: Software Development :: Testing", "Topic :: System :: Shells", "Topic :: Utilities"], "description": "Why\r\n---\r\n\r\nBecause unit testing is even more fun \r\n\r\n* when you don't have to switch out of your editor to get feedback from\r\n  unit tests.\r\n* the shorter the feedback period is till you get feedback from your\r\n  tests.\r\n\r\nI've seen the usefullness toying with rubys autotest command, so I\r\npestered Felix to build something like this, and after using it for about\r\na two years, I finally got around to packaging it. :-)\r\n\r\nIn addition to that it's brain dead simple, has no dependencies and is\r\n_really_ small.\r\n\r\nUsage\r\n-----\r\n\r\n.. code-block:: bash\r\n\r\n    % watching_testrunner --help\r\n    Usage: watching_testrunner [options] [--] command [arguments...]\r\n\r\n    Options:\r\n      -h, --help            show this help message and exit\r\n      -b BASEPATH, --basepath=BASEPATH\r\n                            base path to watch for changes\r\n      -p WATCH_WILDCARD, --pattern=WATCH_WILDCARD\r\n                            glob-style pattern for file names to watch\r\n\r\nExamples\r\n--------\r\n\r\n.. code-block:: bash\r\n\r\n    $ watching_testrunner nosetests\r\n\r\nThis will run nosetests whenever any python file below the current\r\ndirectory changes\r\n\r\n.. code-block:: bash\r\n\r\n    $ watching_testrunner -- nosetests $NOSETESTS_ARGUMENTS\r\n\r\nWill run nosetests all the same, but will not try to parse any of the\r\nnosetests arguments.\r\n\r\n.. code-block:: bash\r\n\r\n    $ watching_testrunner --basepath foo/bar --pattern=\"*\" nosetests $NOSETESTS_ARGUMENTS\r\n\r\nThis will run nosetests whenever any file below ./foo/bar changes.\r\n\r\n.. code-block:: bash\r\n\r\n    $ watching_testrunner --basepath path/to/js_tests --pattern=\"*.js\" jasmine --console\r\n \r\nThis will run jasmine --console whenever any js file below\r\n``./path/to/js_tests`` changes (i.e. you can use the watching testrunner\r\nto get auto test execution using any tool for any language)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tony/watching-testrunner", "keywords": "unit testing automation automatic test runner", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "watching_testrunner", "package_url": "https://pypi.org/project/watching_testrunner/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/watching_testrunner/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/tony/watching-testrunner"}, "release_url": "https://pypi.org/project/watching_testrunner/1.1.0/", "requires_dist": null, "requires_python": null, "summary": "Automatic test execution on file changes", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"why\">\n<h2>Why</h2>\n<p>Because unit testing is even more fun</p>\n<ul>\n<li>when you don\u2019t have to switch out of your editor to get feedback from\nunit tests.</li>\n<li>the shorter the feedback period is till you get feedback from your\ntests.</li>\n</ul>\n<p>I\u2019ve seen the usefullness toying with rubys autotest command, so I\npestered Felix to build something like this, and after using it for about\na two years, I finally got around to packaging it. :-)</p>\n<p>In addition to that it\u2019s brain dead simple, has no dependencies and is\n_really_ small.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>% watching_testrunner --help\nUsage: watching_testrunner <span class=\"o\">[</span>options<span class=\"o\">]</span> <span class=\"o\">[</span>--<span class=\"o\">]</span> <span class=\"nb\">command</span> <span class=\"o\">[</span>arguments...<span class=\"o\">]</span>\n\nOptions:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -b BASEPATH, --basepath<span class=\"o\">=</span>BASEPATH\n                        base path to watch <span class=\"k\">for</span> changes\n  -p WATCH_WILDCARD, --pattern<span class=\"o\">=</span>WATCH_WILDCARD\n                        glob-style pattern <span class=\"k\">for</span> file names to watch\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre>$ watching_testrunner nosetests\n</pre>\n<p>This will run nosetests whenever any python file below the current\ndirectory changes</p>\n<pre>$ watching_testrunner -- nosetests <span class=\"nv\">$NOSETESTS_ARGUMENTS</span>\n</pre>\n<p>Will run nosetests all the same, but will not try to parse any of the\nnosetests arguments.</p>\n<pre>$ watching_testrunner --basepath foo/bar --pattern<span class=\"o\">=</span><span class=\"s2\">\"*\"</span> nosetests <span class=\"nv\">$NOSETESTS_ARGUMENTS</span>\n</pre>\n<p>This will run nosetests whenever any file below ./foo/bar changes.</p>\n<pre>$ watching_testrunner --basepath path/to/js_tests --pattern<span class=\"o\">=</span><span class=\"s2\">\"*.js\"</span> jasmine --console\n</pre>\n<p>This will run jasmine \u2013console whenever any js file below\n<tt>./path/to/js_tests</tt> changes (i.e. you can use the watching testrunner\nto get auto test execution using any tool for any language)</p>\n</div>\n\n          </div>"}, "last_serial": 950136, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "234e407731cdb7dd65b4ec693de782a6", "sha256": "949e8edd54f71d0f37cb93a4fbd12f99888373fa7aae18a807008d2b4e6ff6f9"}, "downloads": -1, "filename": "watching_testrunner-1.0-py2.7.egg", "has_sig": false, "md5_digest": "234e407731cdb7dd65b4ec693de782a6", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 4947, "upload_time": "2012-03-24T09:09:19", "upload_time_iso_8601": "2012-03-24T09:09:19.791689Z", "url": "https://files.pythonhosted.org/packages/98/cb/e2fc2d0c349c53c631d232ef70d50811888805a5956e0e8785f73d9c131b/watching_testrunner-1.0-py2.7.egg", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "da3e8a0e3a32993c21748845d5ffbdba", "sha256": "a36b762118ba4445a3c30216854dd6a55143f8d90135576740afeabc3ad40d66"}, "downloads": -1, "filename": "watching_testrunner-1.0.1.tar.gz", "has_sig": false, "md5_digest": "da3e8a0e3a32993c21748845d5ffbdba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3142, "upload_time": "2013-03-22T18:19:29", "upload_time_iso_8601": "2013-03-22T18:19:29.707629Z", "url": "https://files.pythonhosted.org/packages/ee/49/e446f32c9c8ebbb0c5099079c4a94dac080d57fdb295b1d7dc27e7aa0249/watching_testrunner-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "6e83888abd87730329f300df0d898d23", "sha256": "91460e782e096c5a1819e67e22fb6f7f7a0e631efa3790f9902e5d4cb97b504c"}, "downloads": -1, "filename": "watching_testrunner-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6e83888abd87730329f300df0d898d23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3380, "upload_time": "2013-12-20T22:19:15", "upload_time_iso_8601": "2013-12-20T22:19:15.024676Z", "url": "https://files.pythonhosted.org/packages/5f/93/8cae0c0f9012851a1a6a416dc8626fb584b7466b5936180ced11cea46f2d/watching_testrunner-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6e83888abd87730329f300df0d898d23", "sha256": "91460e782e096c5a1819e67e22fb6f7f7a0e631efa3790f9902e5d4cb97b504c"}, "downloads": -1, "filename": "watching_testrunner-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6e83888abd87730329f300df0d898d23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3380, "upload_time": "2013-12-20T22:19:15", "upload_time_iso_8601": "2013-12-20T22:19:15.024676Z", "url": "https://files.pythonhosted.org/packages/5f/93/8cae0c0f9012851a1a6a416dc8626fb584b7466b5936180ced11cea46f2d/watching_testrunner-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:12 2020"}