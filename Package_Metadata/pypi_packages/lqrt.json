{"info": {"author": "Anton Alyakin", "author_email": "aalyaki1@jhu.edu", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n\n# Robust Hypothesis Testing of Location Parameters using Lq-Likelihood-Ratio-Type Test in Python\n\nThis package implements a robust hypothesis testing procedure: the \nLq-likelihood-ratio-type test (LqRT), introduced in Qin and Priebe (2017).\nThe code replicates and extends the R package which can be found here\n[here](http://homepages.uc.edu/~qinyn/LqLR/). The paper supporting this \npackage is currently in review; a preprint can be found \n[here](https://arxiv.org/abs/1911.11922).\n\n## Installation\n\nIn order to install the package one needs to have python 3.x installed, then\neither clone the repository from github and install using pip:\n```\ngit clone https://github.com/alyakin314/lqrt\ncd lqrt\npip install .\n```\non install directly via pip:\n```\npip install lqrt\n```\n\n## Import\nThe recommended import line is \n```python\n>>> import lqrt\n```\nAll examples below are performed using this import line.\n\n(All examples also assume the usage of numpy and scipy.stats imported as:\n```python\n>>> import numpy as np\n>>> from scipy import stats\n```\nThis is unnecessary for the actual usage of the package, only for examples)\n\n\n## Usage\nThere are three tests implemented in this repostory: one sample, related \nsamples (also known as paired) and independent samples (also known as \nunpaired). \n\n### One sample\nThe one sample test performs the Lq-Likelihood-test for the mean of one group\nof scores.\nIt is a robust two-sided test for the null hypothesis that the expected \nvalue (mean) of a sample of independent observations is equal to the given\npopulation mean.\nIt can be thought of the as a robust version of the single sample t-test\n(`scipy.stats.ttest_1samp`).\n\n#### Example:\n\nTest if mean of random sample is equal to true mean, and different mean. We\nreject the null hypothesis in the second case and don\u2019t reject it in the first\ncase.\n```python\n>>> np.random.seed(314)\n\n>>> rvs1 = stats.multivariate_normal.rvs(0, 1, 50)\n\n>>> lqrt.lqrtest_1samp(rvs1, 0)\nLqrtest_1sampResult(statistic=0.02388120731922072, pvalue=0.85)\n>>> lqrt.lqrtest_1samp(rvs1, 1)\nLqrtest_1sampResult(statistic=35.13171144154751, pvalue=0.0)\n```\n\n### Related samples\nThe related samples test performs the Lq-Likelihood-test for the mean of \ntwo related samples of scores.\nIt is a robust two-sided test for the null hypothesis that 2 independent \nsamples have identical average (expected) values.\nIt can be thought of as a robust version of the paired t-test \n(`scipy.stats.ttest_rel`).\n\n#### Example:\nA related samples test between two samples with identical means:\n```python\n>>> np.random.seed(314)\n\n>>> rvs1 = stats.multivariate_normal.rvs(0, 1, 50)\n>>> rvs2 = stats.multivariate_normal.rvs(0, 1, 50)\n\n>>> lqrt.lqrtest_rel(rvs1, rvs2)\nLqrtest_relResult(statistic=0.22769245832813567, pvalue=0.66)\n```\n\nA related samples test between two samples with different means:\n\n```python\n>>> rvs3 = stats.multivariate_normal.rvs(1, 1, 50)\n>>> lqrt.lqrtest_rel(rvs1, rvs3)\nLqrtest_relResult(statistic=27.827284933987784, pvalue=0.0)\n```\n\n### Independent samples\nThe independent samples tests performes the Lq-Likelihood-test for the mean\n of two independent samples of scores.\nIt is a robust two-sided test for the null hypothesis that 2 independent\nsamples have identical average (expected) values. \nit can be thought of as a robust version of the unparied t-test \n(`scipy.stats.ttest_ind`).\nOne can perform the test with or without the assumption that the samples have\n equal variance, which is estimated together. \nThis is accomplished by setting the equal\\_variance flag, similar to scipy's\nt-test.\n\n#### Example:\nTest with samples with identical means with and without the equal variance\nassumption. Note that in the unpaired set-up the samples need not to have\nthe same size:\n```python\n>>> np.random.seed(314)\n\n>>> rvs1 = stats.multivariate_normal.rvs(0, 1, 50)\n>>> rvs2 = stats.multivariate_normal.rvs(0, 1, 70)\n\n>>> lqrt.lqrtest_ind(rvs1, rvs2)\nLqRtest_indResult(statistic=0.00046542438241203854, pvalue=0.99)\n>>> lqrt.lqrtest_ind(rvs1, rvs2, equal_var=False)\nLqRtest_indResult(statistic=0.00047040017227573117, pvalue=0.97)\n```\n\nTest with samples with different means with and without the equal variance\nassumption:\n\n```python\n>>> rvs3 = stats.multivariate_normal.rvs(1, 1, 70)\n\n>>> lqrt.lqrtest_ind(rvs1, rvs3)\nLqRtest_indResult(statistic=31.09168298440227, pvalue=0.0)\n>>> lqrt.lqrtest_ind(rvs1, rvs3, equal_var=False)\nLLqRtest_indResult(statistic=31.251454446588696, pvalue=0.0)\n```\n\n### parameter q\nAll test functions have an argument q which specifies the q parameter of \nthe Lq-likelihood. The q should typically be within [0.5, 1.0] and the \nlower value is associated with a more robust test. If left unspecified of\nset to None, the q is estimated using the empirical approximation to the\ntrace of the assymptotic covariance matrix procedure specified in Qin and\nPriebe (2017).\n\n#### Example:\n```python\n>>> x_true = np.random.normal(0.34, 1, 40)\n>>> x_contamination = np.random.normal(0.34, 1, 10)\n>>> x_sample = np.concatenate([x_true, x_contamination])\n\n>>> lqrt.lqrtest_1samp(x_sample, 0, q = 0.9)\nLqrtest_1sampResult(statistic=1.1440379636073885, pvalue=0.28)\n>>> lqrt.lqrtest_1samp(x_sample, 0, q = 0.6)\nLqrtest_1sampResult(statistic=3.710699836358458, pvalue=0.08)\n>>> lqrt.lqrtest_1samp(x_sample, 0)\nLqrtest_1sampResult(statistic=5.5937088664291394, pvalue=0.06)\n```\n\n### p-Value Bootstrap\nThe p-value for the tests is obtained via a bootstrap procedure, outlined in\nQin and Priebe (2017).\nBy default - 100 resamples are used, but the number can be changed. Increasing\nthe number of samples increases the precision of the p-value, but adds on\ncomputational work.\n\n#### Example:\n```python\n>>> x = np.random.normal(0, 1, 50)\n>>> lqrt.lqrtest_1samp(x, 0) # takes ~0.25s\nLqrtest_1sampResult(statistic=0.36665186821102225, pvalue=0.58)\n>>> lqrt.lqrtest_1samp(x, 0, bootstrap=1000) # takes ~1.5s\nLqrtest_1sampResult(statistic=0.36665186821102225, pvalue=0.541)\n>>> lqrt.lqrtest_1samp(x, 0, bootstrap=10000) # takes ~15s\nLqrtest_1sampResult(statistic=0.36665186821102225, pvalue=0.5483)\n```\n\n## References\nQin, Y., & Priebe, C. E. (2017). Robust Hypothesis Testing via Lq-Likelihood. Statistica Sinica. 27. 10.5705/ss.202015.0441. \n\nAlyakin, A., Qin, Y., & Priebe, C. E. (2019). LqRT: Robust Hypothesis Testing of Location Parameters using Lq-Likelihood-Ratio-Type Test in Python. arXiv preprint arXiv:1911.11922.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alyakin314/lqrt", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "lqrt", "package_url": "https://pypi.org/project/lqrt/", "platform": "", "project_url": "https://pypi.org/project/lqrt/", "project_urls": {"Homepage": "https://github.com/alyakin314/lqrt"}, "release_url": "https://pypi.org/project/lqrt/0.3.3/", "requires_dist": ["numpy", "scipy"], "requires_python": "", "summary": "Robust Hypothesis Testing of Location Parameters using Lq-Likelihood-Ratio-Type Test in Python", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://www.gnu.org/licenses/gpl-3.0\" rel=\"nofollow\"><img alt=\"License: GPL v3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8de17537dd1659a5a076ce547de301e27c839e67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76332d626c75652e737667\"></a></p>\n<h1>Robust Hypothesis Testing of Location Parameters using Lq-Likelihood-Ratio-Type Test in Python</h1>\n<p>This package implements a robust hypothesis testing procedure: the\nLq-likelihood-ratio-type test (LqRT), introduced in Qin and Priebe (2017).\nThe code replicates and extends the R package which can be found here\n<a href=\"http://homepages.uc.edu/%7Eqinyn/LqLR/\" rel=\"nofollow\">here</a>. The paper supporting this\npackage is currently in review; a preprint can be found\n<a href=\"https://arxiv.org/abs/1911.11922\" rel=\"nofollow\">here</a>.</p>\n<h2>Installation</h2>\n<p>In order to install the package one needs to have python 3.x installed, then\neither clone the repository from github and install using pip:</p>\n<pre><code>git clone https://github.com/alyakin314/lqrt\ncd lqrt\npip install .\n</code></pre>\n<p>on install directly via pip:</p>\n<pre><code>pip install lqrt\n</code></pre>\n<h2>Import</h2>\n<p>The recommended import line is</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">lqrt</span>\n</pre>\n<p>All examples below are performed using this import line.</p>\n<p>(All examples also assume the usage of numpy and scipy.stats imported as:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">scipy</span> <span class=\"kn\">import</span> <span class=\"n\">stats</span>\n</pre>\n<p>This is unnecessary for the actual usage of the package, only for examples)</p>\n<h2>Usage</h2>\n<p>There are three tests implemented in this repostory: one sample, related\nsamples (also known as paired) and independent samples (also known as\nunpaired).</p>\n<h3>One sample</h3>\n<p>The one sample test performs the Lq-Likelihood-test for the mean of one group\nof scores.\nIt is a robust two-sided test for the null hypothesis that the expected\nvalue (mean) of a sample of independent observations is equal to the given\npopulation mean.\nIt can be thought of the as a robust version of the single sample t-test\n(<code>scipy.stats.ttest_1samp</code>).</p>\n<h4>Example:</h4>\n<p>Test if mean of random sample is equal to true mean, and different mean. We\nreject the null hypothesis in the second case and don\u2019t reject it in the first\ncase.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">314</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rvs1</span> <span class=\"o\">=</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">multivariate_normal</span><span class=\"o\">.</span><span class=\"n\">rvs</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_1samp</span><span class=\"p\">(</span><span class=\"n\">rvs1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">Lqrtest_1sampResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">0.02388120731922072</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.85</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_1samp</span><span class=\"p\">(</span><span class=\"n\">rvs1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">Lqrtest_1sampResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">35.13171144154751</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">)</span>\n</pre>\n<h3>Related samples</h3>\n<p>The related samples test performs the Lq-Likelihood-test for the mean of\ntwo related samples of scores.\nIt is a robust two-sided test for the null hypothesis that 2 independent\nsamples have identical average (expected) values.\nIt can be thought of as a robust version of the paired t-test\n(<code>scipy.stats.ttest_rel</code>).</p>\n<h4>Example:</h4>\n<p>A related samples test between two samples with identical means:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">314</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rvs1</span> <span class=\"o\">=</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">multivariate_normal</span><span class=\"o\">.</span><span class=\"n\">rvs</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rvs2</span> <span class=\"o\">=</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">multivariate_normal</span><span class=\"o\">.</span><span class=\"n\">rvs</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_rel</span><span class=\"p\">(</span><span class=\"n\">rvs1</span><span class=\"p\">,</span> <span class=\"n\">rvs2</span><span class=\"p\">)</span>\n<span class=\"n\">Lqrtest_relResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">0.22769245832813567</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.66</span><span class=\"p\">)</span>\n</pre>\n<p>A related samples test between two samples with different means:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rvs3</span> <span class=\"o\">=</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">multivariate_normal</span><span class=\"o\">.</span><span class=\"n\">rvs</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_rel</span><span class=\"p\">(</span><span class=\"n\">rvs1</span><span class=\"p\">,</span> <span class=\"n\">rvs3</span><span class=\"p\">)</span>\n<span class=\"n\">Lqrtest_relResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">27.827284933987784</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">)</span>\n</pre>\n<h3>Independent samples</h3>\n<p>The independent samples tests performes the Lq-Likelihood-test for the mean\nof two independent samples of scores.\nIt is a robust two-sided test for the null hypothesis that 2 independent\nsamples have identical average (expected) values.\nit can be thought of as a robust version of the unparied t-test\n(<code>scipy.stats.ttest_ind</code>).\nOne can perform the test with or without the assumption that the samples have\nequal variance, which is estimated together.\nThis is accomplished by setting the equal_variance flag, similar to scipy's\nt-test.</p>\n<h4>Example:</h4>\n<p>Test with samples with identical means with and without the equal variance\nassumption. Note that in the unpaired set-up the samples need not to have\nthe same size:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">314</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rvs1</span> <span class=\"o\">=</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">multivariate_normal</span><span class=\"o\">.</span><span class=\"n\">rvs</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rvs2</span> <span class=\"o\">=</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">multivariate_normal</span><span class=\"o\">.</span><span class=\"n\">rvs</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">70</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_ind</span><span class=\"p\">(</span><span class=\"n\">rvs1</span><span class=\"p\">,</span> <span class=\"n\">rvs2</span><span class=\"p\">)</span>\n<span class=\"n\">LqRtest_indResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">0.00046542438241203854</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.99</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_ind</span><span class=\"p\">(</span><span class=\"n\">rvs1</span><span class=\"p\">,</span> <span class=\"n\">rvs2</span><span class=\"p\">,</span> <span class=\"n\">equal_var</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">LqRtest_indResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">0.00047040017227573117</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.97</span><span class=\"p\">)</span>\n</pre>\n<p>Test with samples with different means with and without the equal variance\nassumption:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rvs3</span> <span class=\"o\">=</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">multivariate_normal</span><span class=\"o\">.</span><span class=\"n\">rvs</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">70</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_ind</span><span class=\"p\">(</span><span class=\"n\">rvs1</span><span class=\"p\">,</span> <span class=\"n\">rvs3</span><span class=\"p\">)</span>\n<span class=\"n\">LqRtest_indResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">31.09168298440227</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_ind</span><span class=\"p\">(</span><span class=\"n\">rvs1</span><span class=\"p\">,</span> <span class=\"n\">rvs3</span><span class=\"p\">,</span> <span class=\"n\">equal_var</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">LLqRtest_indResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">31.251454446588696</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">)</span>\n</pre>\n<h3>parameter q</h3>\n<p>All test functions have an argument q which specifies the q parameter of\nthe Lq-likelihood. The q should typically be within [0.5, 1.0] and the\nlower value is associated with a more robust test. If left unspecified of\nset to None, the q is estimated using the empirical approximation to the\ntrace of the assymptotic covariance matrix procedure specified in Qin and\nPriebe (2017).</p>\n<h4>Example:</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x_true</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mf\">0.34</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x_contamination</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mf\">0.34</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x_sample</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">([</span><span class=\"n\">x_true</span><span class=\"p\">,</span> <span class=\"n\">x_contamination</span><span class=\"p\">])</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_1samp</span><span class=\"p\">(</span><span class=\"n\">x_sample</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"mf\">0.9</span><span class=\"p\">)</span>\n<span class=\"n\">Lqrtest_1sampResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">1.1440379636073885</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.28</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_1samp</span><span class=\"p\">(</span><span class=\"n\">x_sample</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"mf\">0.6</span><span class=\"p\">)</span>\n<span class=\"n\">Lqrtest_1sampResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">3.710699836358458</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.08</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_1samp</span><span class=\"p\">(</span><span class=\"n\">x_sample</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">Lqrtest_1sampResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">5.5937088664291394</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.06</span><span class=\"p\">)</span>\n</pre>\n<h3>p-Value Bootstrap</h3>\n<p>The p-value for the tests is obtained via a bootstrap procedure, outlined in\nQin and Priebe (2017).\nBy default - 100 resamples are used, but the number can be changed. Increasing\nthe number of samples increases the precision of the p-value, but adds on\ncomputational work.</p>\n<h4>Example:</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_1samp</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"c1\"># takes ~0.25s</span>\n<span class=\"n\">Lqrtest_1sampResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">0.36665186821102225</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.58</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_1samp</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">bootstrap</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span> <span class=\"c1\"># takes ~1.5s</span>\n<span class=\"n\">Lqrtest_1sampResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">0.36665186821102225</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.541</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lqrt</span><span class=\"o\">.</span><span class=\"n\">lqrtest_1samp</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">bootstrap</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">)</span> <span class=\"c1\"># takes ~15s</span>\n<span class=\"n\">Lqrtest_1sampResult</span><span class=\"p\">(</span><span class=\"n\">statistic</span><span class=\"o\">=</span><span class=\"mf\">0.36665186821102225</span><span class=\"p\">,</span> <span class=\"n\">pvalue</span><span class=\"o\">=</span><span class=\"mf\">0.5483</span><span class=\"p\">)</span>\n</pre>\n<h2>References</h2>\n<p>Qin, Y., &amp; Priebe, C. E. (2017). Robust Hypothesis Testing via Lq-Likelihood. Statistica Sinica. 27. 10.5705/ss.202015.0441.</p>\n<p>Alyakin, A., Qin, Y., &amp; Priebe, C. E. (2019). LqRT: Robust Hypothesis Testing of Location Parameters using Lq-Likelihood-Ratio-Type Test in Python. arXiv preprint arXiv:1911.11922.</p>\n\n          </div>"}, "last_serial": 6270778, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "90ddfa9a52c5d0b49a6f79df855b0173", "sha256": "571ed6f9889b3753d8c4fcbf21ca2d6e801980a6b8058d467faad4ea7e831787"}, "downloads": -1, "filename": "lqrt-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "90ddfa9a52c5d0b49a6f79df855b0173", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21895, "upload_time": "2019-11-23T20:30:11", "upload_time_iso_8601": "2019-11-23T20:30:11.899206Z", "url": "https://files.pythonhosted.org/packages/88/f5/8b391c58de9460d7d9b0c955e80ee37dd65d6bf9d1161a0ead69e344dabb/lqrt-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4637884969bed80a8f518c578dac74ab", "sha256": "72f68f0f495f697b7b77a416edf337bb491513c1d43d9b6f33c062c15fb4155b"}, "downloads": -1, "filename": "lqrt-0.3.1.tar.gz", "has_sig": false, "md5_digest": "4637884969bed80a8f518c578dac74ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10563, "upload_time": "2019-11-23T20:30:13", "upload_time_iso_8601": "2019-11-23T20:30:13.581796Z", "url": "https://files.pythonhosted.org/packages/a8/80/a6bb83f880c398c01769996857c995a2825427d1f87288283a494dbcbe8b/lqrt-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "d18547e20cd261ef643ddd0d82624583", "sha256": "73fb06c9cb746acb1bcfdc3e4562cf4af1060cbc4562433e4bc86faae239bd61"}, "downloads": -1, "filename": "lqrt-0.3.2.tar.gz", "has_sig": false, "md5_digest": "d18547e20cd261ef643ddd0d82624583", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10592, "upload_time": "2019-11-23T20:42:02", "upload_time_iso_8601": "2019-11-23T20:42:02.150677Z", "url": "https://files.pythonhosted.org/packages/45/5f/00984b2e4ce097f59e0682375016842e1acca40fc6e19f8d0f96dd4dbd67/lqrt-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "1aebb001c8f8ad06c702cf94171c9bd1", "sha256": "944f113b82f7c2e96233e521aa3b27973d18a41315c3563907a54d243aaa2c99"}, "downloads": -1, "filename": "lqrt-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1aebb001c8f8ad06c702cf94171c9bd1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21986, "upload_time": "2019-12-10T04:21:25", "upload_time_iso_8601": "2019-12-10T04:21:25.597299Z", "url": "https://files.pythonhosted.org/packages/e4/11/46bd116ac5b8daba10cf9d944e21659fe8cf3a7f1d6f85ab42b0af80f680/lqrt-0.3.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1aebb001c8f8ad06c702cf94171c9bd1", "sha256": "944f113b82f7c2e96233e521aa3b27973d18a41315c3563907a54d243aaa2c99"}, "downloads": -1, "filename": "lqrt-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1aebb001c8f8ad06c702cf94171c9bd1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21986, "upload_time": "2019-12-10T04:21:25", "upload_time_iso_8601": "2019-12-10T04:21:25.597299Z", "url": "https://files.pythonhosted.org/packages/e4/11/46bd116ac5b8daba10cf9d944e21659fe8cf3a7f1d6f85ab42b0af80f680/lqrt-0.3.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:43:34 2020"}