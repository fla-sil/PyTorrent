{"info": {"author": "Aaron de los Santos", "author_email": "hansaaron_d@yahoo.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Affability\nAffability allows for an easy utilization of Google's DialogFlow for natural language understanding. It allows for calling a single function and returning the result from Dialogflow as a class containing all the pertinent data such as detected intent.\n\nThis can be utilized to understand commands and then perform the relevant tasks based from the detected intent. Affability is ultimately designed to have the ability to assist with a quadruped robot project in the future.\n\n## Dependencies\nInstalling using the requirements.txt file:\n```\npip install -r requirements.txt\n```\nInstalling manually:\n```\npip install SpeechRecognition\npip install dialogflow\n```\n## Installation \n```\npip install Affability\n```\n\n## Usage\nUsing the understand function:\n\nThe understand function contains 5 parameters: text, credentials, projectID, languageCode, and sessionID. Text is text to be analyzed, credentials is the file path of the authentication key, projectID is the project ID, languageCode is the language, and sessionID is the session ID. All parameters are strings. \n\n```python\nunderstand('textToBeAnalyzed', 'filepath', 'projectIDname', 'en-US', 'me') \n```\n\nThe understand function returns the results as an organizer class. This class contains detectedIntent, confidence, reply, action, requiredParamsPresent, and replyParams. \n\n```python\nclass organizer:\n    def __init__(self, detectedIntent, confidence, reply, action, requiredParamsPresent, replyParams):\n        self.detectedIntent = detectedIntent\n        self.confidence = confidence\n        self.reply = reply\n        self.action = action\n        self.requiredParamsPresent = requiredParamsPresent\n        self.replyParams = replyParams\n```\n\nFor example, to extract and print detected intent:\n\n```python\nreply = understand('textToBeAnalyzed', 'filepath', 'projectIDname', 'en-US', 'me') \nprint(reply.detectedIntent)\n```\n## Sample usage\nThe example_usage.py file demonstrates the ease of communicating with Dialogflow through Affability.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aarondls/Affability", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Affability", "package_url": "https://pypi.org/project/Affability/", "platform": "", "project_url": "https://pypi.org/project/Affability/", "project_urls": {"Homepage": "https://github.com/aarondls/Affability"}, "release_url": "https://pypi.org/project/Affability/1.0.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A simple package for interfacing with Dialogflow", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Affability</h1>\n<p>Affability allows for an easy utilization of Google's DialogFlow for natural language understanding. It allows for calling a single function and returning the result from Dialogflow as a class containing all the pertinent data such as detected intent.</p>\n<p>This can be utilized to understand commands and then perform the relevant tasks based from the detected intent. Affability is ultimately designed to have the ability to assist with a quadruped robot project in the future.</p>\n<h2>Dependencies</h2>\n<p>Installing using the requirements.txt file:</p>\n<pre><code>pip install -r requirements.txt\n</code></pre>\n<p>Installing manually:</p>\n<pre><code>pip install SpeechRecognition\npip install dialogflow\n</code></pre>\n<h2>Installation</h2>\n<pre><code>pip install Affability\n</code></pre>\n<h2>Usage</h2>\n<p>Using the understand function:</p>\n<p>The understand function contains 5 parameters: text, credentials, projectID, languageCode, and sessionID. Text is text to be analyzed, credentials is the file path of the authentication key, projectID is the project ID, languageCode is the language, and sessionID is the session ID. All parameters are strings.</p>\n<pre><span class=\"n\">understand</span><span class=\"p\">(</span><span class=\"s1\">'textToBeAnalyzed'</span><span class=\"p\">,</span> <span class=\"s1\">'filepath'</span><span class=\"p\">,</span> <span class=\"s1\">'projectIDname'</span><span class=\"p\">,</span> <span class=\"s1\">'en-US'</span><span class=\"p\">,</span> <span class=\"s1\">'me'</span><span class=\"p\">)</span> \n</pre>\n<p>The understand function returns the results as an organizer class. This class contains detectedIntent, confidence, reply, action, requiredParamsPresent, and replyParams.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">organizer</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">detectedIntent</span><span class=\"p\">,</span> <span class=\"n\">confidence</span><span class=\"p\">,</span> <span class=\"n\">reply</span><span class=\"p\">,</span> <span class=\"n\">action</span><span class=\"p\">,</span> <span class=\"n\">requiredParamsPresent</span><span class=\"p\">,</span> <span class=\"n\">replyParams</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">detectedIntent</span> <span class=\"o\">=</span> <span class=\"n\">detectedIntent</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">confidence</span> <span class=\"o\">=</span> <span class=\"n\">confidence</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reply</span> <span class=\"o\">=</span> <span class=\"n\">reply</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">action</span> <span class=\"o\">=</span> <span class=\"n\">action</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">requiredParamsPresent</span> <span class=\"o\">=</span> <span class=\"n\">requiredParamsPresent</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">replyParams</span> <span class=\"o\">=</span> <span class=\"n\">replyParams</span>\n</pre>\n<p>For example, to extract and print detected intent:</p>\n<pre><span class=\"n\">reply</span> <span class=\"o\">=</span> <span class=\"n\">understand</span><span class=\"p\">(</span><span class=\"s1\">'textToBeAnalyzed'</span><span class=\"p\">,</span> <span class=\"s1\">'filepath'</span><span class=\"p\">,</span> <span class=\"s1\">'projectIDname'</span><span class=\"p\">,</span> <span class=\"s1\">'en-US'</span><span class=\"p\">,</span> <span class=\"s1\">'me'</span><span class=\"p\">)</span> \n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">reply</span><span class=\"o\">.</span><span class=\"n\">detectedIntent</span><span class=\"p\">)</span>\n</pre>\n<h2>Sample usage</h2>\n<p>The example_usage.py file demonstrates the ease of communicating with Dialogflow through Affability.</p>\n\n          </div>"}, "last_serial": 6636856, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "bf1fe871c38f7dd71fa64985aac04a7d", "sha256": "2b02aca4e8e80c6324a548adeaac3bdf9e85086334240503817061b3098f5743"}, "downloads": -1, "filename": "Affability-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bf1fe871c38f7dd71fa64985aac04a7d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2742, "upload_time": "2020-02-15T05:44:53", "upload_time_iso_8601": "2020-02-15T05:44:53.391408Z", "url": "https://files.pythonhosted.org/packages/79/7b/96447801ef26f59fbab996eaca0ced8c91907a853e99840caf59195e374e/Affability-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9b8b556956895de210987e5e216defb", "sha256": "efb64e1bac4276676775c28c68416a99542270029eb5146406b9e4df2462bd6f"}, "downloads": -1, "filename": "Affability-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a9b8b556956895de210987e5e216defb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1854, "upload_time": "2020-02-15T05:44:55", "upload_time_iso_8601": "2020-02-15T05:44:55.574372Z", "url": "https://files.pythonhosted.org/packages/17/2e/daf80fb51bbeb92060177df15c4498437a8c38a1477e5f980a16b3079b63/Affability-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "6ee6ea19f6d1bc39365e891bbf9b8fe2", "sha256": "bb67d6bc993018753b26b47ed81ba2004802bb0e61d377b733617f9686e7a2a3"}, "downloads": -1, "filename": "Affability-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6ee6ea19f6d1bc39365e891bbf9b8fe2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2781, "upload_time": "2020-02-15T16:00:32", "upload_time_iso_8601": "2020-02-15T16:00:32.997384Z", "url": "https://files.pythonhosted.org/packages/42/31/fdebbfaf275f402b69617ac6263459fa290ce86ed11e66be312cb33dcd7d/Affability-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd00f2b72e609c45755438831b5083c3", "sha256": "0457507abeef6de21075ac1ba206c249871e3b848ef88327aad3f42089f2ac3f"}, "downloads": -1, "filename": "Affability-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bd00f2b72e609c45755438831b5083c3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1910, "upload_time": "2020-02-15T16:00:37", "upload_time_iso_8601": "2020-02-15T16:00:37.495822Z", "url": "https://files.pythonhosted.org/packages/ad/5e/5329315c67261604cc68c0c42283b0be1ca55f90de298d0f6c6cba694d13/Affability-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6ee6ea19f6d1bc39365e891bbf9b8fe2", "sha256": "bb67d6bc993018753b26b47ed81ba2004802bb0e61d377b733617f9686e7a2a3"}, "downloads": -1, "filename": "Affability-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6ee6ea19f6d1bc39365e891bbf9b8fe2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2781, "upload_time": "2020-02-15T16:00:32", "upload_time_iso_8601": "2020-02-15T16:00:32.997384Z", "url": "https://files.pythonhosted.org/packages/42/31/fdebbfaf275f402b69617ac6263459fa290ce86ed11e66be312cb33dcd7d/Affability-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd00f2b72e609c45755438831b5083c3", "sha256": "0457507abeef6de21075ac1ba206c249871e3b848ef88327aad3f42089f2ac3f"}, "downloads": -1, "filename": "Affability-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bd00f2b72e609c45755438831b5083c3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1910, "upload_time": "2020-02-15T16:00:37", "upload_time_iso_8601": "2020-02-15T16:00:37.495822Z", "url": "https://files.pythonhosted.org/packages/ad/5e/5329315c67261604cc68c0c42283b0be1ca55f90de298d0f6c6cba694d13/Affability-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:22:46 2020"}