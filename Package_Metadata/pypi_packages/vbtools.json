{"info": {"author": "Xiao Li", "author_email": "xiaoli@broadinstitute.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.4", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# vbtools: a variant benchmark tool to compare VCFs with a consensus set\n## Install\nBefore installation, make sure [conda](https://docs.conda.io/en/latest/miniconda.html) is under your `PATH`. Conda installation [here](https://docs.conda.io/en/latest/miniconda.html).\n\n```sh\n# clone this repo\ngit clone git@github.com:broadinstitute/vbtools.git\n\n# setup conda environment\ncd vbtools\n\nconda env create -f env.yml # this will take a few minutes\nconda list  # verify new environment was installed correctly\n\n# activate environment\nconda activate vbtools\n\n# deactivate the environment when done\nconda deactivate\n\n# completely remove the virtual environment\nconda remove -name vbtools --all\n```\n\n## Usage\nYou can use following command to benchmark a VCF against a reference/consensus VCF.\n```sh\nvcfbench.py -v <input.vcf> -b <reference.vcf>\n```\n`--prefix` is an option to define prefix to the output files.\n\nCurrently, only haploid VCF is supported in the analysis. Diploid VCF will be standardized into haploid before comparison. Input VCF should follow [VCF spec v4.2](https://samtools.github.io/hts-specs/VCFv4.2.pdf).\n\nFollowing pre-processing steps are performed on the input VCF before the analysis:\n1) remove unused alleles\n2) remove monomorphic sites\n3) remove sites with heterozygous genotypes\n4) remove non-SNP sites\n5) remove sites with asterisk marks\n6) change diploid to haploid VCF\n\nThe script will output:\n1) Site level comparison:\n    - a tsv file including number of unique and shared sites.\n2) Sample level comparision:\n    - The sample level comparison functionality will be added to the script soon.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/broadinstitute/vbtools", "keywords": "bioinformatics", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "vbtools", "package_url": "https://pypi.org/project/vbtools/", "platform": "", "project_url": "https://pypi.org/project/vbtools/", "project_urls": {"Bug tracker": "https://github.com/broadinstitute/vbtools/issues", "Documentation": "https://github.com/broadinstitute/vbtools/README.md", "Homepage": "https://github.com/broadinstitute/vbtools"}, "release_url": "https://pypi.org/project/vbtools/0.1.0/", "requires_dist": ["vbtools (>=0.1.0)", "numpy (>=1.15.4pandas>=0.23.4)", "matplotlib (>=3.0.2)", "seaborn (>=0.9.0)"], "requires_python": "", "summary": "A pipeline for analyzing fungal genomic data", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>vbtools: a variant benchmark tool to compare VCFs with a consensus set</h1>\n<h2>Install</h2>\n<p>Before installation, make sure <a href=\"https://docs.conda.io/en/latest/miniconda.html\" rel=\"nofollow\">conda</a> is under your <code>PATH</code>. Conda installation <a href=\"https://docs.conda.io/en/latest/miniconda.html\" rel=\"nofollow\">here</a>.</p>\n<pre><span class=\"c1\"># clone this repo</span>\ngit clone git@github.com:broadinstitute/vbtools.git\n\n<span class=\"c1\"># setup conda environment</span>\n<span class=\"nb\">cd</span> vbtools\n\nconda env create -f env.yml <span class=\"c1\"># this will take a few minutes</span>\nconda list  <span class=\"c1\"># verify new environment was installed correctly</span>\n\n<span class=\"c1\"># activate environment</span>\nconda activate vbtools\n\n<span class=\"c1\"># deactivate the environment when done</span>\nconda deactivate\n\n<span class=\"c1\"># completely remove the virtual environment</span>\nconda remove -name vbtools --all\n</pre>\n<h2>Usage</h2>\n<p>You can use following command to benchmark a VCF against a reference/consensus VCF.</p>\n<pre>vcfbench.py -v &lt;input.vcf&gt; -b &lt;reference.vcf&gt;\n</pre>\n<p><code>--prefix</code> is an option to define prefix to the output files.</p>\n<p>Currently, only haploid VCF is supported in the analysis. Diploid VCF will be standardized into haploid before comparison. Input VCF should follow <a href=\"https://samtools.github.io/hts-specs/VCFv4.2.pdf\" rel=\"nofollow\">VCF spec v4.2</a>.</p>\n<p>Following pre-processing steps are performed on the input VCF before the analysis:</p>\n<ol>\n<li>remove unused alleles</li>\n<li>remove monomorphic sites</li>\n<li>remove sites with heterozygous genotypes</li>\n<li>remove non-SNP sites</li>\n<li>remove sites with asterisk marks</li>\n<li>change diploid to haploid VCF</li>\n</ol>\n<p>The script will output:</p>\n<ol>\n<li>Site level comparison:\n<ul>\n<li>a tsv file including number of unique and shared sites.</li>\n</ul>\n</li>\n<li>Sample level comparision:\n<ul>\n<li>The sample level comparison functionality will be added to the script soon.</li>\n</ul>\n</li>\n</ol>\n\n          </div>"}, "last_serial": 5447148, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "da219a04d9ff72e526a21f1004624d31", "sha256": "105e1c88db2dbab344a1fed078e7f715eda9ae9a26b54a48dfbf88284dfab69b"}, "downloads": -1, "filename": "vbtools-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "da219a04d9ff72e526a21f1004624d31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7796, "upload_time": "2019-06-25T16:45:59", "upload_time_iso_8601": "2019-06-25T16:45:59.044162Z", "url": "https://files.pythonhosted.org/packages/d3/b2/34d2693223978c037b912111c0a670835c12b99e4877831b1f13bacbbec6/vbtools-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80fb9e1892dd10196d62dc28285c088c", "sha256": "6efcd364cf07c0e6d5ce9979c03d71b3a1f8254fdda38dcff5ce327a67b9dc76"}, "downloads": -1, "filename": "vbtools-0.1.0.tar.gz", "has_sig": false, "md5_digest": "80fb9e1892dd10196d62dc28285c088c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5103, "upload_time": "2019-06-25T16:46:00", "upload_time_iso_8601": "2019-06-25T16:46:00.970534Z", "url": "https://files.pythonhosted.org/packages/91/63/60807d208790a81613d1cb12e995822e9866b9574de346bb171809405d75/vbtools-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "da219a04d9ff72e526a21f1004624d31", "sha256": "105e1c88db2dbab344a1fed078e7f715eda9ae9a26b54a48dfbf88284dfab69b"}, "downloads": -1, "filename": "vbtools-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "da219a04d9ff72e526a21f1004624d31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7796, "upload_time": "2019-06-25T16:45:59", "upload_time_iso_8601": "2019-06-25T16:45:59.044162Z", "url": "https://files.pythonhosted.org/packages/d3/b2/34d2693223978c037b912111c0a670835c12b99e4877831b1f13bacbbec6/vbtools-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80fb9e1892dd10196d62dc28285c088c", "sha256": "6efcd364cf07c0e6d5ce9979c03d71b3a1f8254fdda38dcff5ce327a67b9dc76"}, "downloads": -1, "filename": "vbtools-0.1.0.tar.gz", "has_sig": false, "md5_digest": "80fb9e1892dd10196d62dc28285c088c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5103, "upload_time": "2019-06-25T16:46:00", "upload_time_iso_8601": "2019-06-25T16:46:00.970534Z", "url": "https://files.pythonhosted.org/packages/91/63/60807d208790a81613d1cb12e995822e9866b9574de346bb171809405d75/vbtools-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:35 2020"}