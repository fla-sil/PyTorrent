{"info": {"author": "Lobnek Wealth Management", "author_email": "thomas.schmelzer@lobnek.com", "bugtrack_url": null, "classifiers": [], "description": "# pyaddepar\n[![Build Status](https://travis-ci.org/lobnek/pyaddepar.svg?branch=master)](https://travis-ci.org/lobnek/pyaddepar)\n\nSome utility code for interacting with addepar. For more information on addepar please check out\nhttps://addepar.com/.\n\n## Installing pyaddepar\nInstall with pip\n```\npip install pyaddepar\n```\n\n    \n## AddeparRequest\nAddeparRequest is a class hiding the management of your key(s), the pagination of requests and conversion of your results to standard pandas containers.\n\n```\nimport pandas as pd\nfrom pyaddepar.addeparrequest import AddeparRequest\n\nif __name__ == '__main__':\n    r = AddeparRequest(key=..., secret=..., id=..., company=...)\n    today = pd.Timestamp(\"today\")\n\n    for key, entity in r.options:\n        expiry = pd.Timestamp(entity[\"expiration_date\"])\n        if expiry >= today:\n            print(expiry)\n            print(entity)\n            print(entity[\"option_type\"])\n            print(entity[\"node_strike_price\"])\n\n            print((expiry-today).days/365.0)\n\n```\n    \n## Settings.cfg\nWe recommend to define a configuration file `(*.cfg)` containing\n\nADDEPAR = {\"key\":\"A\",\n           \"secret\":\"B\",\n           \"id\":\"maffay\",\n           \"company\":\"maffay\"\n          }\n\n## Flask-Addepar\nA Flask extension that provides integration with Addepar. In particular this flask extension provides\nmanagement of the your AddeparRequests. You can use configuration files such as settings.cfg to follow standard flask practices.\nThe configuration is easy, just fetch the extension:\n\n```\nfrom flask import Flask\n\nfrom pyaddepar.flask_addepar import addepar\n\nif __name__ == '__main__':\n    app = Flask(__name__)\n    app.config.from_pyfile('config/settings.cfg')\n    addepar.init_app(app)\n    \n    with app.app_context():\n        for key, entity in addepar.request.entities():\n            print(key)\n            print(entity)\n\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lobnek/pyaddepar", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyaddepar", "package_url": "https://pypi.org/project/pyaddepar/", "platform": "", "project_url": "https://pypi.org/project/pyaddepar/", "project_urls": {"Homepage": "https://github.com/lobnek/pyaddepar"}, "release_url": "https://pypi.org/project/pyaddepar/0.6.1/", "requires_dist": null, "requires_python": "", "summary": "Utility code for working with Addepar", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyaddepar</h1>\n<p><a href=\"https://travis-ci.org/lobnek/pyaddepar\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a5e05250e04d04aee207ffb84c239f8e28f2cf2/68747470733a2f2f7472617669732d63692e6f72672f6c6f626e656b2f7079616464657061722e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Some utility code for interacting with addepar. For more information on addepar please check out\n<a href=\"https://addepar.com/\" rel=\"nofollow\">https://addepar.com/</a>.</p>\n<h2>Installing pyaddepar</h2>\n<p>Install with pip</p>\n<pre><code>pip install pyaddepar\n</code></pre>\n<h2>AddeparRequest</h2>\n<p>AddeparRequest is a class hiding the management of your key(s), the pagination of requests and conversion of your results to standard pandas containers.</p>\n<pre><code>import pandas as pd\nfrom pyaddepar.addeparrequest import AddeparRequest\n\nif __name__ == '__main__':\n    r = AddeparRequest(key=..., secret=..., id=..., company=...)\n    today = pd.Timestamp(\"today\")\n\n    for key, entity in r.options:\n        expiry = pd.Timestamp(entity[\"expiration_date\"])\n        if expiry &gt;= today:\n            print(expiry)\n            print(entity)\n            print(entity[\"option_type\"])\n            print(entity[\"node_strike_price\"])\n\n            print((expiry-today).days/365.0)\n\n</code></pre>\n<h2>Settings.cfg</h2>\n<p>We recommend to define a configuration file <code>(*.cfg)</code> containing</p>\n<p>ADDEPAR = {\"key\":\"A\",\n\"secret\":\"B\",\n\"id\":\"maffay\",\n\"company\":\"maffay\"\n}</p>\n<h2>Flask-Addepar</h2>\n<p>A Flask extension that provides integration with Addepar. In particular this flask extension provides\nmanagement of the your AddeparRequests. You can use configuration files such as settings.cfg to follow standard flask practices.\nThe configuration is easy, just fetch the extension:</p>\n<pre><code>from flask import Flask\n\nfrom pyaddepar.flask_addepar import addepar\n\nif __name__ == '__main__':\n    app = Flask(__name__)\n    app.config.from_pyfile('config/settings.cfg')\n    addepar.init_app(app)\n    \n    with app.app_context():\n        for key, entity in addepar.request.entities():\n            print(key)\n            print(entity)\n\n</code></pre>\n\n          </div>"}, "last_serial": 6988973, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "ca112973b652300ea52954d26f6a63de", "sha256": "2920355b4c5a9262a91480031cad217eb831e4e84678b4697bf5091c8431a6ca"}, "downloads": -1, "filename": "pyaddepar-0.6.0.tar.gz", "has_sig": false, "md5_digest": "ca112973b652300ea52954d26f6a63de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12290, "upload_time": "2020-02-27T11:24:23", "upload_time_iso_8601": "2020-02-27T11:24:23.485995Z", "url": "https://files.pythonhosted.org/packages/ef/9f/7e9198a7525c52bb737d356cd8326c0031410ae4062be87647653b1e6795/pyaddepar-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "a73558af83a76e30fb9070333be6f843", "sha256": "0a80d1fc0dc1ae962cc6b91e64aa90f501904480bb5ba1969f7cd8a2adade76f"}, "downloads": -1, "filename": "pyaddepar-0.6.1.tar.gz", "has_sig": false, "md5_digest": "a73558af83a76e30fb9070333be6f843", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11438, "upload_time": "2020-04-09T20:25:48", "upload_time_iso_8601": "2020-04-09T20:25:48.516194Z", "url": "https://files.pythonhosted.org/packages/cd/ca/8b8999bc4f4d8576e80642b71d6b07917598c0e9b06ed615e5798fb87005/pyaddepar-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a73558af83a76e30fb9070333be6f843", "sha256": "0a80d1fc0dc1ae962cc6b91e64aa90f501904480bb5ba1969f7cd8a2adade76f"}, "downloads": -1, "filename": "pyaddepar-0.6.1.tar.gz", "has_sig": false, "md5_digest": "a73558af83a76e30fb9070333be6f843", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11438, "upload_time": "2020-04-09T20:25:48", "upload_time_iso_8601": "2020-04-09T20:25:48.516194Z", "url": "https://files.pythonhosted.org/packages/cd/ca/8b8999bc4f4d8576e80642b71d6b07917598c0e9b06ed615e5798fb87005/pyaddepar-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:00 2020"}