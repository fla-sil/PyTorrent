{"info": {"author": "Michael Galloy", "author_email": "mgalloy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "======\nepochs\n======\n\n\n.. image:: https://img.shields.io/pypi/v/epochs.svg\n     :target: https://pypi.python.org/pypi/epochs\n\n.. image:: https://img.shields.io/travis/mgalloy/epochs.svg\n     :target: https://travis-ci.org/mgalloy/epochs\n\n.. image:: https://readthedocs.org/projects/epochs/badge/?version=latest\n     :target: https://epochs.readthedocs.io/en/latest/?badge=latest\n     :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/mgalloy/epochs/shield.svg\n     :target: https://pyup.io/repos/github/mgalloy/epochs/\n     :alt: Updates\n\n\n\nPython package to handle configuration files specifying values changing over time\n\n\n* Free software: BSD license\n* Documentation: https://epochs.readthedocs.io.\n\n\nFeatures\n--------\n\nThe main features of epochs are:\n\n* Parse date-based configuration files and retrieve values based on datetime.\n* Validate configuration files, both normal and epoch date-based ones, against a specification.\n\nFor example, for a configuration file, ``epochs.cfg``, such as::\n\n  [2019-04-09 20:27:15]\n  value   : 3\n\n  [2019-04-09 22:31:01]\n  value   : 5\n\nThe dates can be anything parsed by `dateutil.parser.parse`_. Then, epochs can retrieve the correct value from the config file corresponding to a given date:\n\n.. code-block:: python\n\n  >>> import epochs\n  >>> ep = epochs.parse('epochs.cfg')\n  >>> value = ep.get('value', datetime='2019-04-09 21:55:45')\n  >>> print(value)\n  3\n  >>> value = ep.get('value', datetime='2019-04-09 23:15:40')\n  >>> print(value)\n  5\n\nThe \"correct\" value is the one specified in the earliest section of the configuration file with a date on or before the given date.\n\nBelow is an example specification for a configuration file::\n\n  [city]\n  name    : required=True, type=str\n  streets : required=True, type=List[str]\n  temp    : required=False, type=float, default=0.0\n\nAnd an example configuration file following this specification::\n\n  [city]\n  name    : Boulder\n  streets : [Broadway, Baseline, Valmont]\n\nThen to parse the configuration file with its specification:\n\n.. code-block:: python\n\n  >>> import epochs\n  >>> cf = epochs.parse('example.cfg', spec='spec.cfg')\n  >>> name = cf.get('name', section='city')\n  >>> print(name)\n  Boulder\n  >>> streets = cf.get('streets', section='city')\n  >>> print(steets)\n  ['Broadway', 'Baseline', 'Valmont']\n  >>> temp = cf.get('temp', section='city')\n  >>> print(temp, type(temp))\n  0.0 <class 'float'>\n\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n.. _`dateutil.parser.parse`: https://dateutil.readthedocs.io/en/stable/parser.html\n\n\n=======\nHistory\n=======\n\n0.1.0 (2019-04-12)\n------------------\n* initial creation\n\n0.1.1 (2019-04-19)\n------------------\n* basic config parser with specification file\n\n0.1.2 (2019-04-19)\n------------------\n* better repr and str representations\n\n0.2.0 (2019-04-22)\n------------------\n* basic epoch parser\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mgalloy/epochs", "keywords": "epochs", "license": "BSD license", "maintainer": "", "maintainer_email": "", "name": "epochs", "package_url": "https://pypi.org/project/epochs/", "platform": "", "project_url": "https://pypi.org/project/epochs/", "project_urls": {"Homepage": "https://github.com/mgalloy/epochs"}, "release_url": "https://pypi.org/project/epochs/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Python package to handle configuration files specifying values changing over time", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"epochs\">\n<h2>epochs</h2>\n<a href=\"https://pypi.python.org/pypi/epochs\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/epochs.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c5f1e8f2b251743aa31de1f846f18db135d4275/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f65706f6368732e737667\"></a>\n<a href=\"https://travis-ci.org/mgalloy/epochs\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/mgalloy/epochs.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/872a36b2befefe604f19aeb2fa195808237e5f4b/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6d67616c6c6f792f65706f6368732e737667\"></a>\n<a href=\"https://epochs.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc81fea869f9e7b2c5f95d0f6884defbf1623d48/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f65706f6368732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pyup.io/repos/github/mgalloy/epochs/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be38c9f16cfe7f7ab5b9a388753716b35dd85d82/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f6d67616c6c6f792f65706f6368732f736869656c642e737667\"></a>\n<p>Python package to handle configuration files specifying values changing over time</p>\n<ul>\n<li>Free software: BSD license</li>\n<li>Documentation: <a href=\"https://epochs.readthedocs.io\" rel=\"nofollow\">https://epochs.readthedocs.io</a>.</li>\n</ul>\n<div id=\"features\">\n<h3>Features</h3>\n<p>The main features of epochs are:</p>\n<ul>\n<li>Parse date-based configuration files and retrieve values based on datetime.</li>\n<li>Validate configuration files, both normal and epoch date-based ones, against a specification.</li>\n</ul>\n<p>For example, for a configuration file, <tt>epochs.cfg</tt>, such as:</p>\n<pre>[2019-04-09 20:27:15]\nvalue   : 3\n\n[2019-04-09 22:31:01]\nvalue   : 5\n</pre>\n<p>The dates can be anything parsed by <a href=\"https://dateutil.readthedocs.io/en/stable/parser.html\" rel=\"nofollow\">dateutil.parser.parse</a>. Then, epochs can retrieve the correct value from the config file corresponding to a given date:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">epochs</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ep</span> <span class=\"o\">=</span> <span class=\"n\">epochs</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s1\">'epochs.cfg'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">ep</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'value'</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">=</span><span class=\"s1\">'2019-04-09 21:55:45'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">ep</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'value'</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">=</span><span class=\"s1\">'2019-04-09 23:15:40'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"mi\">5</span>\n</pre>\n<p>The \u201ccorrect\u201d value is the one specified in the earliest section of the configuration file with a date on or before the given date.</p>\n<p>Below is an example specification for a configuration file:</p>\n<pre>[city]\nname    : required=True, type=str\nstreets : required=True, type=List[str]\ntemp    : required=False, type=float, default=0.0\n</pre>\n<p>And an example configuration file following this specification:</p>\n<pre>[city]\nname    : Boulder\nstreets : [Broadway, Baseline, Valmont]\n</pre>\n<p>Then to parse the configuration file with its specification:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">epochs</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">epochs</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s1\">'example.cfg'</span><span class=\"p\">,</span> <span class=\"n\">spec</span><span class=\"o\">=</span><span class=\"s1\">'spec.cfg'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"n\">section</span><span class=\"o\">=</span><span class=\"s1\">'city'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"n\">Boulder</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">streets</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'streets'</span><span class=\"p\">,</span> <span class=\"n\">section</span><span class=\"o\">=</span><span class=\"s1\">'city'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">steets</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">'Broadway'</span><span class=\"p\">,</span> <span class=\"s1\">'Baseline'</span><span class=\"p\">,</span> <span class=\"s1\">'Valmont'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'temp'</span><span class=\"p\">,</span> <span class=\"n\">section</span><span class=\"o\">=</span><span class=\"s1\">'city'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">temp</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">temp</span><span class=\"p\">))</span>\n<span class=\"mf\">0.0</span> <span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">float</span><span class=\"s1\">'&gt;</span>\n</pre>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.1.0 (2019-04-12)</h3>\n<ul>\n<li>initial creation</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.1 (2019-04-19)</h3>\n<ul>\n<li>basic config parser with specification file</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.2 (2019-04-19)</h3>\n<ul>\n<li>better repr and str representations</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.2.0 (2019-04-22)</h3>\n<ul>\n<li>basic epoch parser</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5324015, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "7d2e2aad838c25d771311b2143d04be2", "sha256": "4fba2abe7dec700219f79c5438950dad28ec3223d75bc1c587aff2564c07df68"}, "downloads": -1, "filename": "epochs-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d2e2aad838c25d771311b2143d04be2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7593, "upload_time": "2019-05-27T21:30:00", "upload_time_iso_8601": "2019-05-27T21:30:00.737711Z", "url": "https://files.pythonhosted.org/packages/7e/6b/ed521178ed38efe996d27e64a1c71c90b0d9a7f2a16afcd69b51882e64b3/epochs-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ab7c9a43a17d39ada7f646c2de24880", "sha256": "8a41bc8424014700309cc4e824c7c2c620134b61a9aa032736c4cd49d6d65d83"}, "downloads": -1, "filename": "epochs-0.2.0.tar.gz", "has_sig": false, "md5_digest": "6ab7c9a43a17d39ada7f646c2de24880", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16630, "upload_time": "2019-05-27T21:30:02", "upload_time_iso_8601": "2019-05-27T21:30:02.954931Z", "url": "https://files.pythonhosted.org/packages/50/4b/867078a9f95e58a7d0a873ed25c7bd30fe2f08367b0f114823e4d2df2c0d/epochs-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7d2e2aad838c25d771311b2143d04be2", "sha256": "4fba2abe7dec700219f79c5438950dad28ec3223d75bc1c587aff2564c07df68"}, "downloads": -1, "filename": "epochs-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d2e2aad838c25d771311b2143d04be2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7593, "upload_time": "2019-05-27T21:30:00", "upload_time_iso_8601": "2019-05-27T21:30:00.737711Z", "url": "https://files.pythonhosted.org/packages/7e/6b/ed521178ed38efe996d27e64a1c71c90b0d9a7f2a16afcd69b51882e64b3/epochs-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ab7c9a43a17d39ada7f646c2de24880", "sha256": "8a41bc8424014700309cc4e824c7c2c620134b61a9aa032736c4cd49d6d65d83"}, "downloads": -1, "filename": "epochs-0.2.0.tar.gz", "has_sig": false, "md5_digest": "6ab7c9a43a17d39ada7f646c2de24880", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16630, "upload_time": "2019-05-27T21:30:02", "upload_time_iso_8601": "2019-05-27T21:30:02.954931Z", "url": "https://files.pythonhosted.org/packages/50/4b/867078a9f95e58a7d0a873ed25c7bd30fe2f08367b0f114823e4d2df2c0d/epochs-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:56 2020"}