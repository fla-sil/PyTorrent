{"info": {"author": "lanius", "author_email": "lanius@nirvake.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# dicot\n\nControls Futaba Command-Type Servo motors. It is developed and tested with [RS204MD](http://www.futaba.co.jp/robot/command_type_servos/rs204md).\n\n## Installation\n\n```shell\n$ pip install dicot\n```\n\n## Usage\n\nCreate the serial port connection, enable the torque, and set the motor angle:\n\n```pycon\n>>> improt dicot\n>>>\n>>> cnx = dicot.open('COM1')\n>>>\n>>> motor = cnx.motor(1)  # id = 1\n>>> motor.torque_enabled = True\n>>>\n>>> motor.angle = 45  # degree\n```\n\nOr set with duration:\n\n```pycon\n>>> motor.rotate(90, msec=5000)  # with duration\n```\n\nCan get and set various parameters through the attributes:\n\n```pycon\n>>> motor.angle\n90  # degree\n>>>\n>>> motor.load\n6  # mA\n>>>\n>>> motor.temperature\n30  # Celsius\n>>>\n>>> motor.voltage\n5.2  # V\n>>>\n>>> motor.max_torque = 80  # %\n>>> motor.pid_coeff = 100  # %\n```\n\nThe value set in the ROM area must be written by executing `motor.rom.write()` in order to retain it even after the motor is turned off:\n\n```pycon\n>>> motor.torque_enabled = False\n>>> motor.rom.cw_angle_limit = 100  # degree\n>>> motor.rom.ccw_compliance_margin = 0.2  # degree\n>>> motor.rom.ccw_compliance_slope = 20  # degree\n>>> motor.rom.write()\n```\n\nCan also change the ID:\n\n```pycon\n>>> motor.rom.id = 2\n>>> motor.rom.write()\n```\n\nMotorList can handle multiple motors collectively:\n\n```pycon\n>>> motors = dicot.MotorList([motor, cnx.motor(2), cnx.motor(3)])\n>>> motors.torque_enabled = True\n>>> motors.angles = [30, 60, 90]\n```\n\nThe connection object supports the with statement:\n\n```python  \nimport dicot\n\nwith dicot.open('COM1') as cnx:\n    motor = cnx.motor(1)\n    print(motor.firm_version)\n```  \n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lanius/dicot", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dicot", "package_url": "https://pypi.org/project/dicot/", "platform": "", "project_url": "https://pypi.org/project/dicot/", "project_urls": {"Homepage": "https://github.com/lanius/dicot", "Repository": "https://github.com/lanius/dicot"}, "release_url": "https://pypi.org/project/dicot/0.1.0/", "requires_dist": ["pyserial"], "requires_python": ">=3.6,<4.0", "summary": "Controls Futaba Command-Type Servo motors.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dicot</h1>\n<p>Controls Futaba Command-Type Servo motors. It is developed and tested with <a href=\"http://www.futaba.co.jp/robot/command_type_servos/rs204md\" rel=\"nofollow\">RS204MD</a>.</p>\n<h2>Installation</h2>\n<pre>$ pip install dicot\n</pre>\n<h2>Usage</h2>\n<p>Create the serial port connection, enable the torque, and set the motor angle:</p>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">improt</span> <span class=\"n\">dicot</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cnx</span> <span class=\"o\">=</span> <span class=\"n\">dicot</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'COM1'</span><span class=\"p\">)</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span> <span class=\"o\">=</span> <span class=\"n\">cnx</span><span class=\"o\">.</span><span class=\"n\">motor</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># id = 1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">torque_enabled</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"mi\">45</span>  <span class=\"c1\"># degree</span>\n</pre>\n<p>Or set with duration:</p>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"n\">msec</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">)</span>  <span class=\"c1\"># with duration</span>\n</pre>\n<p>Can get and set various parameters through the attributes:</p>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">angle</span>\n<span class=\"go\">90  # degree</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">load</span>\n<span class=\"go\">6  # mA</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">temperature</span>\n<span class=\"go\">30  # Celsius</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">voltage</span>\n<span class=\"go\">5.2  # V</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">max_torque</span> <span class=\"o\">=</span> <span class=\"mi\">80</span>  <span class=\"c1\"># %</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">pid_coeff</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>  <span class=\"c1\"># %</span>\n</pre>\n<p>The value set in the ROM area must be written by executing <code>motor.rom.write()</code> in order to retain it even after the motor is turned off:</p>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">torque_enabled</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">rom</span><span class=\"o\">.</span><span class=\"n\">cw_angle_limit</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>  <span class=\"c1\"># degree</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">rom</span><span class=\"o\">.</span><span class=\"n\">ccw_compliance_margin</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>  <span class=\"c1\"># degree</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">rom</span><span class=\"o\">.</span><span class=\"n\">ccw_compliance_slope</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>  <span class=\"c1\"># degree</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">rom</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">()</span>\n</pre>\n<p>Can also change the ID:</p>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">rom</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">rom</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">()</span>\n</pre>\n<p>MotorList can handle multiple motors collectively:</p>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motors</span> <span class=\"o\">=</span> <span class=\"n\">dicot</span><span class=\"o\">.</span><span class=\"n\">MotorList</span><span class=\"p\">([</span><span class=\"n\">motor</span><span class=\"p\">,</span> <span class=\"n\">cnx</span><span class=\"o\">.</span><span class=\"n\">motor</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">cnx</span><span class=\"o\">.</span><span class=\"n\">motor</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motors</span><span class=\"o\">.</span><span class=\"n\">torque_enabled</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">motors</span><span class=\"o\">.</span><span class=\"n\">angles</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">]</span>\n</pre>\n<p>The connection object supports the with statement:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">dicot</span>\n\n<span class=\"k\">with</span> <span class=\"n\">dicot</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'COM1'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">cnx</span><span class=\"p\">:</span>\n    <span class=\"n\">motor</span> <span class=\"o\">=</span> <span class=\"n\">cnx</span><span class=\"o\">.</span><span class=\"n\">motor</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">motor</span><span class=\"o\">.</span><span class=\"n\">firm_version</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6727216, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0a598ab3a20423b4fe947ae9b320f29c", "sha256": "56d108e519711df48da65412547996f300b1f8f3359d243b5138a2b533d4806d"}, "downloads": -1, "filename": "dicot-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0a598ab3a20423b4fe947ae9b320f29c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6363, "upload_time": "2020-03-01T05:36:49", "upload_time_iso_8601": "2020-03-01T05:36:49.385931Z", "url": "https://files.pythonhosted.org/packages/33/24/71fe6e0159a94939fe6bc9f36e93352c957e2df6e5ba45cc82ed12a3be0d/dicot-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "463e9554a815ac1b74b4e26634768dd2", "sha256": "55db4ffb9e284e03c85ef6f908e29e2bd1c9ade84c16aa73ce6cf705eb89e1ff"}, "downloads": -1, "filename": "dicot-0.1.0.tar.gz", "has_sig": false, "md5_digest": "463e9554a815ac1b74b4e26634768dd2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5974, "upload_time": "2020-03-01T05:36:51", "upload_time_iso_8601": "2020-03-01T05:36:51.781079Z", "url": "https://files.pythonhosted.org/packages/f0/33/1ed274242514bba29294a52e85bd83db3a3064fa8d5039685876f7f247ad/dicot-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a598ab3a20423b4fe947ae9b320f29c", "sha256": "56d108e519711df48da65412547996f300b1f8f3359d243b5138a2b533d4806d"}, "downloads": -1, "filename": "dicot-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0a598ab3a20423b4fe947ae9b320f29c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6363, "upload_time": "2020-03-01T05:36:49", "upload_time_iso_8601": "2020-03-01T05:36:49.385931Z", "url": "https://files.pythonhosted.org/packages/33/24/71fe6e0159a94939fe6bc9f36e93352c957e2df6e5ba45cc82ed12a3be0d/dicot-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "463e9554a815ac1b74b4e26634768dd2", "sha256": "55db4ffb9e284e03c85ef6f908e29e2bd1c9ade84c16aa73ce6cf705eb89e1ff"}, "downloads": -1, "filename": "dicot-0.1.0.tar.gz", "has_sig": false, "md5_digest": "463e9554a815ac1b74b4e26634768dd2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5974, "upload_time": "2020-03-01T05:36:51", "upload_time_iso_8601": "2020-03-01T05:36:51.781079Z", "url": "https://files.pythonhosted.org/packages/f0/33/1ed274242514bba29294a52e85bd83db3a3064fa8d5039685876f7f247ad/dicot-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:34 2020"}