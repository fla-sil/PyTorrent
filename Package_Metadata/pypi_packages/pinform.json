{"info": {"author": "Sina Rezaei", "author_email": "sinarezaei1991@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "![alt text][pypi_version] ![alt text][licence_version]\n\n# Pinform: An InfluxDB ORM (OTSM) for Python\n\nPInfORM (Python InfluxDB ORM) is an Object/TimeSeries Mapping layer for connecting to [InfluxDB](https://www.influxdata.com/) in python.\n\nTested with:\n* Python 3.6+\n* InfluxDB 1.7.3 - 1.7.9\n\nUse the following command to install using pip:\n```\npip install pinform\n```\n\n## Usage example\n### Create Measurement Models\nFirst, create your measurement model in \n```python\nfrom pinform import Measurement\nfrom pinform.fields import FloatField\nfrom pinform.tags import Tag\n\nclass OHLC(Measurement):\n  class Meta:\n    measurement_name = 'ohlc'\n\n  symbol = Tag(null=False)\n  open = FloatField(null=False)\n  high = FloatField(null=False)\n  low = FloatField(null=False)\n  close = FloatField(null=False)\n```\n\n### Create Measurement Instance\nFirst, create your measurement model in \n```python\ntoday_ohlc = OHLC(time_point=datetime.datetime.now(), symbol='AAPL', open=80.2, high=86.0, low=78.9, close=81.25)\n```\n\n### Create InfluxClient\nThen you must create an instance of `InfluxClient` to connect to database:\n```python\nfrom pinform.client import InfluxClient\n\ncli = InfluxClient(host=\"localhost\", port=8086, database_name=\"defaultdb\")\n```\n\nIf the database needs authentication, use:\n```python\ncli = InfluxClient(host=\"localhost\", port=8086, database_name=\"defaultdb\", username='your db username', password='your db password')\n```\n\n\n### Save and Retrieve Points\nTo save data in database, use `save_points` or `save_dataframe` functions of InfluxClient:\n```python\nohlc = OHLC(time_point=datetime.datetime.now(), symbol='AAPL', open=100.6, high=102.5, low=90.4, close=94.2)\ncli.save_points([ohlc])\n```\n\nTo retrieve data from database, use `load_points` or `load_points_as_dataframe` functions of InfluxClient:\n```python\nohlc_points = cli.load_points(OHLC, {'symbol':'AAPL'})\n```\n\n### Get Distinct Tag Values\nTo get distinct tag values from all measurements, use `get_distinct_existing_tag_values` function from InfluxClient:\n```python\ntag_values = cli.get_distinct_existing_tag_values('symbol')\n```\n\nTo get distinct tag values from an specific measurements,pass measurement to the previous function:\n```python\ntag_values = cli.get_distinct_existing_tag_values('symbol', measurement=OHLC)\n```\n\n\n\n## Fields\nIt's possible to use `IntegerField`, `FloatField`, `BooleanField` and `StringField` to save field values in InfluxDB.\nThere are four other types of fields which help with storing fields with specific integer or string values. To create a field with multiple choice integer values, use `MultipleChoiceIntegerField` or `EnumIntegerField` classes. To create a field with multiple choice string values, use `MultipleChoiceStringField` or `EnumStringField` classes.\n\nExample for MultipleChoiceStringField:\n```python\nfrom pinform.fields import MultipleChoiceStringField\n\nclass WeatherInfo(Measurement):\n  class Meta:\n    measurement_name = 'weather_info'\n\n  condition = MultipleChoiceStringField(options=['sunny','cloudy','rainy'], null=False)\n\n```\n\nExample for EnumStringField:\n```python\nfrom enum import Enum\nfrom pinform.fields import EnumStringField\n\nclass WeatherCondition(Enum):\n  SUNNY = 'sunny'\n  CLOUDY = 'cloudy'\n  RAINY = 'rainy'\n\n\nclass WeatherInfo(Measurement):\n  class Meta:\n    measurement_name = 'weather_info'\n\n  condition = EnumStringField(enum=WeatherCondition, null=False)\n\n```\n\n\n\n## Advanced usage\n\n### Dynamic measurement names\nIt is possible to use 'MeasurementNameComponent's in measurement name wrapped in parenthesis, their value is replaced in the measurement name at runtime.\n```python\nfrom pinform import MeasurementNameComponent\n\nclass OHLC(Measurement):\n  class Meta:\n    measurement_name = 'ohlc_(symbol)'\n\n  symbol = MeasurementNameComponent(name='symbol')\n  ...\n```\n\n### Query Field and Pandas Series\nUse `get_fields_as_series` function from InfluxClient to get fields of specific measurement class as Pandas Series. It's also possible to aggregate data and group by time. This function returnes a `dict` with aggregated field names as keys and pandas series as values.\n```python\nfrom pinform.client import AggregationMode\n\nseries_dict = cli.get_fields_as_series(OHLC, \n                field_aggregations={'close': [AggregationMode.MEAN, AggregationMode.STDDEV]},\n                tags={'symbol': 'AAPL'},\n                time_range=(start_datetime, end_datetime),\n                group_by_time_interval='10d')\nmean_close_series = series_dict['mean_close']\nstddev_close_series = series_dict['stddev_close']\n```\n\n\n\n[pypi_version]: https://img.shields.io/pypi/v/pinform.svg \"PYPI version\"\n[licence_version]: https://img.shields.io/badge/license-MIT%20v2-brightgreen.svg \"MIT Licence\"\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sinarezaei/pinform", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pinform", "package_url": "https://pypi.org/project/pinform/", "platform": "", "project_url": "https://pypi.org/project/pinform/", "project_urls": {"Homepage": "https://github.com/sinarezaei/pinform"}, "release_url": "https://pypi.org/project/pinform/0.9.1/", "requires_dist": null, "requires_python": "", "summary": "Python InfluxDB ORM (OSTM)", "version": "0.9.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1dd0a23896fed6578a3b81a375847b985c1d44fd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70696e666f726d2e737667\"> <img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9dc9d35cecaa3cd3222f6dd6f6bd212b2f4cd32e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d495425323076322d627269676874677265656e2e737667\"></p>\n<h1>Pinform: An InfluxDB ORM (OTSM) for Python</h1>\n<p>PInfORM (Python InfluxDB ORM) is an Object/TimeSeries Mapping layer for connecting to <a href=\"https://www.influxdata.com/\" rel=\"nofollow\">InfluxDB</a> in python.</p>\n<p>Tested with:</p>\n<ul>\n<li>Python 3.6+</li>\n<li>InfluxDB 1.7.3 - 1.7.9</li>\n</ul>\n<p>Use the following command to install using pip:</p>\n<pre><code>pip install pinform\n</code></pre>\n<h2>Usage example</h2>\n<h3>Create Measurement Models</h3>\n<p>First, create your measurement model in</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pinform</span> <span class=\"kn\">import</span> <span class=\"n\">Measurement</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pinform.fields</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pinform.tags</span> <span class=\"kn\">import</span> <span class=\"n\">Tag</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">OHLC</span><span class=\"p\">(</span><span class=\"n\">Measurement</span><span class=\"p\">):</span>\n  <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n    <span class=\"n\">measurement_name</span> <span class=\"o\">=</span> <span class=\"s1\">'ohlc'</span>\n\n  <span class=\"n\">symbol</span> <span class=\"o\">=</span> <span class=\"n\">Tag</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n  <span class=\"nb\">open</span> <span class=\"o\">=</span> <span class=\"n\">FloatField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n  <span class=\"n\">high</span> <span class=\"o\">=</span> <span class=\"n\">FloatField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n  <span class=\"n\">low</span> <span class=\"o\">=</span> <span class=\"n\">FloatField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n  <span class=\"n\">close</span> <span class=\"o\">=</span> <span class=\"n\">FloatField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<h3>Create Measurement Instance</h3>\n<p>First, create your measurement model in</p>\n<pre><span class=\"n\">today_ohlc</span> <span class=\"o\">=</span> <span class=\"n\">OHLC</span><span class=\"p\">(</span><span class=\"n\">time_point</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(),</span> <span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"s1\">'AAPL'</span><span class=\"p\">,</span> <span class=\"nb\">open</span><span class=\"o\">=</span><span class=\"mf\">80.2</span><span class=\"p\">,</span> <span class=\"n\">high</span><span class=\"o\">=</span><span class=\"mf\">86.0</span><span class=\"p\">,</span> <span class=\"n\">low</span><span class=\"o\">=</span><span class=\"mf\">78.9</span><span class=\"p\">,</span> <span class=\"n\">close</span><span class=\"o\">=</span><span class=\"mf\">81.25</span><span class=\"p\">)</span>\n</pre>\n<h3>Create InfluxClient</h3>\n<p>Then you must create an instance of <code>InfluxClient</code> to connect to database:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pinform.client</span> <span class=\"kn\">import</span> <span class=\"n\">InfluxClient</span>\n\n<span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">InfluxClient</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"localhost\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8086</span><span class=\"p\">,</span> <span class=\"n\">database_name</span><span class=\"o\">=</span><span class=\"s2\">\"defaultdb\"</span><span class=\"p\">)</span>\n</pre>\n<p>If the database needs authentication, use:</p>\n<pre><span class=\"n\">cli</span> <span class=\"o\">=</span> <span class=\"n\">InfluxClient</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"localhost\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8086</span><span class=\"p\">,</span> <span class=\"n\">database_name</span><span class=\"o\">=</span><span class=\"s2\">\"defaultdb\"</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'your db username'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'your db password'</span><span class=\"p\">)</span>\n</pre>\n<h3>Save and Retrieve Points</h3>\n<p>To save data in database, use <code>save_points</code> or <code>save_dataframe</code> functions of InfluxClient:</p>\n<pre><span class=\"n\">ohlc</span> <span class=\"o\">=</span> <span class=\"n\">OHLC</span><span class=\"p\">(</span><span class=\"n\">time_point</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(),</span> <span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"s1\">'AAPL'</span><span class=\"p\">,</span> <span class=\"nb\">open</span><span class=\"o\">=</span><span class=\"mf\">100.6</span><span class=\"p\">,</span> <span class=\"n\">high</span><span class=\"o\">=</span><span class=\"mf\">102.5</span><span class=\"p\">,</span> <span class=\"n\">low</span><span class=\"o\">=</span><span class=\"mf\">90.4</span><span class=\"p\">,</span> <span class=\"n\">close</span><span class=\"o\">=</span><span class=\"mf\">94.2</span><span class=\"p\">)</span>\n<span class=\"n\">cli</span><span class=\"o\">.</span><span class=\"n\">save_points</span><span class=\"p\">([</span><span class=\"n\">ohlc</span><span class=\"p\">])</span>\n</pre>\n<p>To retrieve data from database, use <code>load_points</code> or <code>load_points_as_dataframe</code> functions of InfluxClient:</p>\n<pre><span class=\"n\">ohlc_points</span> <span class=\"o\">=</span> <span class=\"n\">cli</span><span class=\"o\">.</span><span class=\"n\">load_points</span><span class=\"p\">(</span><span class=\"n\">OHLC</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'symbol'</span><span class=\"p\">:</span><span class=\"s1\">'AAPL'</span><span class=\"p\">})</span>\n</pre>\n<h3>Get Distinct Tag Values</h3>\n<p>To get distinct tag values from all measurements, use <code>get_distinct_existing_tag_values</code> function from InfluxClient:</p>\n<pre><span class=\"n\">tag_values</span> <span class=\"o\">=</span> <span class=\"n\">cli</span><span class=\"o\">.</span><span class=\"n\">get_distinct_existing_tag_values</span><span class=\"p\">(</span><span class=\"s1\">'symbol'</span><span class=\"p\">)</span>\n</pre>\n<p>To get distinct tag values from an specific measurements,pass measurement to the previous function:</p>\n<pre><span class=\"n\">tag_values</span> <span class=\"o\">=</span> <span class=\"n\">cli</span><span class=\"o\">.</span><span class=\"n\">get_distinct_existing_tag_values</span><span class=\"p\">(</span><span class=\"s1\">'symbol'</span><span class=\"p\">,</span> <span class=\"n\">measurement</span><span class=\"o\">=</span><span class=\"n\">OHLC</span><span class=\"p\">)</span>\n</pre>\n<h2>Fields</h2>\n<p>It's possible to use <code>IntegerField</code>, <code>FloatField</code>, <code>BooleanField</code> and <code>StringField</code> to save field values in InfluxDB.\nThere are four other types of fields which help with storing fields with specific integer or string values. To create a field with multiple choice integer values, use <code>MultipleChoiceIntegerField</code> or <code>EnumIntegerField</code> classes. To create a field with multiple choice string values, use <code>MultipleChoiceStringField</code> or <code>EnumStringField</code> classes.</p>\n<p>Example for MultipleChoiceStringField:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pinform.fields</span> <span class=\"kn\">import</span> <span class=\"n\">MultipleChoiceStringField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">WeatherInfo</span><span class=\"p\">(</span><span class=\"n\">Measurement</span><span class=\"p\">):</span>\n  <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n    <span class=\"n\">measurement_name</span> <span class=\"o\">=</span> <span class=\"s1\">'weather_info'</span>\n\n  <span class=\"n\">condition</span> <span class=\"o\">=</span> <span class=\"n\">MultipleChoiceStringField</span><span class=\"p\">(</span><span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'sunny'</span><span class=\"p\">,</span><span class=\"s1\">'cloudy'</span><span class=\"p\">,</span><span class=\"s1\">'rainy'</span><span class=\"p\">],</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Example for EnumStringField:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">enum</span> <span class=\"kn\">import</span> <span class=\"n\">Enum</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pinform.fields</span> <span class=\"kn\">import</span> <span class=\"n\">EnumStringField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">WeatherCondition</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n  <span class=\"n\">SUNNY</span> <span class=\"o\">=</span> <span class=\"s1\">'sunny'</span>\n  <span class=\"n\">CLOUDY</span> <span class=\"o\">=</span> <span class=\"s1\">'cloudy'</span>\n  <span class=\"n\">RAINY</span> <span class=\"o\">=</span> <span class=\"s1\">'rainy'</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">WeatherInfo</span><span class=\"p\">(</span><span class=\"n\">Measurement</span><span class=\"p\">):</span>\n  <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n    <span class=\"n\">measurement_name</span> <span class=\"o\">=</span> <span class=\"s1\">'weather_info'</span>\n\n  <span class=\"n\">condition</span> <span class=\"o\">=</span> <span class=\"n\">EnumStringField</span><span class=\"p\">(</span><span class=\"n\">enum</span><span class=\"o\">=</span><span class=\"n\">WeatherCondition</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<h2>Advanced usage</h2>\n<h3>Dynamic measurement names</h3>\n<p>It is possible to use 'MeasurementNameComponent's in measurement name wrapped in parenthesis, their value is replaced in the measurement name at runtime.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pinform</span> <span class=\"kn\">import</span> <span class=\"n\">MeasurementNameComponent</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">OHLC</span><span class=\"p\">(</span><span class=\"n\">Measurement</span><span class=\"p\">):</span>\n  <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n    <span class=\"n\">measurement_name</span> <span class=\"o\">=</span> <span class=\"s1\">'ohlc_(symbol)'</span>\n\n  <span class=\"n\">symbol</span> <span class=\"o\">=</span> <span class=\"n\">MeasurementNameComponent</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'symbol'</span><span class=\"p\">)</span>\n  <span class=\"o\">...</span>\n</pre>\n<h3>Query Field and Pandas Series</h3>\n<p>Use <code>get_fields_as_series</code> function from InfluxClient to get fields of specific measurement class as Pandas Series. It's also possible to aggregate data and group by time. This function returnes a <code>dict</code> with aggregated field names as keys and pandas series as values.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pinform.client</span> <span class=\"kn\">import</span> <span class=\"n\">AggregationMode</span>\n\n<span class=\"n\">series_dict</span> <span class=\"o\">=</span> <span class=\"n\">cli</span><span class=\"o\">.</span><span class=\"n\">get_fields_as_series</span><span class=\"p\">(</span><span class=\"n\">OHLC</span><span class=\"p\">,</span> \n                <span class=\"n\">field_aggregations</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'close'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">AggregationMode</span><span class=\"o\">.</span><span class=\"n\">MEAN</span><span class=\"p\">,</span> <span class=\"n\">AggregationMode</span><span class=\"o\">.</span><span class=\"n\">STDDEV</span><span class=\"p\">]},</span>\n                <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'symbol'</span><span class=\"p\">:</span> <span class=\"s1\">'AAPL'</span><span class=\"p\">},</span>\n                <span class=\"n\">time_range</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">start_datetime</span><span class=\"p\">,</span> <span class=\"n\">end_datetime</span><span class=\"p\">),</span>\n                <span class=\"n\">group_by_time_interval</span><span class=\"o\">=</span><span class=\"s1\">'10d'</span><span class=\"p\">)</span>\n<span class=\"n\">mean_close_series</span> <span class=\"o\">=</span> <span class=\"n\">series_dict</span><span class=\"p\">[</span><span class=\"s1\">'mean_close'</span><span class=\"p\">]</span>\n<span class=\"n\">stddev_close_series</span> <span class=\"o\">=</span> <span class=\"n\">series_dict</span><span class=\"p\">[</span><span class=\"s1\">'stddev_close'</span><span class=\"p\">]</span>\n</pre>\n\n          </div>"}, "last_serial": 6403027, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a65790b2b3aef092d239f2b1ff7fe8f5", "sha256": "dbfea486488a3108af6fa0dc70c8458d58122cd4d6a90cb32e83ba729736a8fc"}, "downloads": -1, "filename": "pinform-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a65790b2b3aef092d239f2b1ff7fe8f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9069, "upload_time": "2019-02-11T11:45:47", "upload_time_iso_8601": "2019-02-11T11:45:47.685814Z", "url": "https://files.pythonhosted.org/packages/35/35/1881af0bed4513efd5f4217fe2cfd699b83b62cc2ebf47d0df5063ea4aab/pinform-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "216252f4c17f1b6b2531c1ac6bf13961", "sha256": "5113de26b5c0846b20734aed0f2f695fdb464b919cb85397273e9d1d4bcfd43e"}, "downloads": -1, "filename": "pinform-0.1.tar.gz", "has_sig": false, "md5_digest": "216252f4c17f1b6b2531c1ac6bf13961", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7333, "upload_time": "2019-02-11T11:45:50", "upload_time_iso_8601": "2019-02-11T11:45:50.006279Z", "url": "https://files.pythonhosted.org/packages/3f/25/87033b8c74367541fee5591a8d4390d7a4d6914a00d458ed3a9a13d632da/pinform-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "171a9321202f8c02c8462f2677672e32", "sha256": "606b33d0a0fe5a1700c20626c8f412cb7a220b56480483e4c9b765215e237d80"}, "downloads": -1, "filename": "pinform-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "171a9321202f8c02c8462f2677672e32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11886, "upload_time": "2019-02-11T12:53:01", "upload_time_iso_8601": "2019-02-11T12:53:01.473093Z", "url": "https://files.pythonhosted.org/packages/1b/15/45707c43c1a7bf00fc9fecf1339231ffdaddd938151779f578de334203db/pinform-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d704f0292836681ae0be9d8ecd0b6432", "sha256": "1d74a8fbfbf6d91de29c98b9e14a2ded9c690caf372ee69e96ffd9c5a16ed133"}, "downloads": -1, "filename": "pinform-0.2.tar.gz", "has_sig": false, "md5_digest": "d704f0292836681ae0be9d8ecd0b6432", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8938, "upload_time": "2019-02-11T12:53:04", "upload_time_iso_8601": "2019-02-11T12:53:04.591821Z", "url": "https://files.pythonhosted.org/packages/5a/2e/4fcfd79ff83137d5a51a264cd5a153e91fcfc29656bcbe58f2813371f786/pinform-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "e7c5d57946d4d9aff51e0b46ee5fb834", "sha256": "31fbbb2fa7a5e2d9625a7208c57cfb61d4ebe3a1cf9ecbd2dc64c50e70e2d3d2"}, "downloads": -1, "filename": "pinform-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e7c5d57946d4d9aff51e0b46ee5fb834", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13650, "upload_time": "2019-02-14T19:19:33", "upload_time_iso_8601": "2019-02-14T19:19:33.284859Z", "url": "https://files.pythonhosted.org/packages/42/5c/2cb238dc7416aead406ff90c101a49501aa709a58ab9a4f639258b7747ee/pinform-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0942ab7603e0b54d5948403aa43c2a41", "sha256": "a766609af68313b7ed923e1f197b8fb5a536daced3a6d1a108518a78cb07c8d5"}, "downloads": -1, "filename": "pinform-0.3.tar.gz", "has_sig": false, "md5_digest": "0942ab7603e0b54d5948403aa43c2a41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10150, "upload_time": "2019-02-14T19:19:41", "upload_time_iso_8601": "2019-02-14T19:19:41.996828Z", "url": "https://files.pythonhosted.org/packages/25/d5/c0f4028bf54bdb8c13a2616cde5a223a2bf933065e31070c3c8eb8aaed7b/pinform-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "0b376ff1112c09d6a8ad27529c1e2c87", "sha256": "2c9bb016691b342d175c18cbd0e7b8c9e49966ba45a3ae6e1f3637f23509cf23"}, "downloads": -1, "filename": "pinform-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0b376ff1112c09d6a8ad27529c1e2c87", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13660, "upload_time": "2019-02-16T22:30:49", "upload_time_iso_8601": "2019-02-16T22:30:49.215811Z", "url": "https://files.pythonhosted.org/packages/d5/e1/9c28dfe58237b6da583799071feac00f2fa97d3234d67cc4929305b3fbac/pinform-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf44780b6599bd952534e5a528e26a0b", "sha256": "662a387b390705e5cc9b5efac7c85da8052d42e794bf18e7c4e87250339753f0"}, "downloads": -1, "filename": "pinform-0.4.tar.gz", "has_sig": false, "md5_digest": "bf44780b6599bd952534e5a528e26a0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10150, "upload_time": "2019-02-16T22:30:54", "upload_time_iso_8601": "2019-02-16T22:30:54.000114Z", "url": "https://files.pythonhosted.org/packages/15/ef/b8a2997fa08ca1d08b5d3cd8211650dc7abc694c728d4dc2e6bf7c858e17/pinform-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "f80c53d4666fda344f5b545ed2660976", "sha256": "30d2311cc81e5619ac64fe34c53fccfb869e67fb5c9341c6c6abdeb44d4f10fc"}, "downloads": -1, "filename": "pinform-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f80c53d4666fda344f5b545ed2660976", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13656, "upload_time": "2019-02-18T13:34:26", "upload_time_iso_8601": "2019-02-18T13:34:26.320590Z", "url": "https://files.pythonhosted.org/packages/88/29/8e053ca867b15d7ea97002415ea0fd87dab6b148a8de92688c274c2485e8/pinform-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dcc41ab424c2839e14cd99b5f9f3e0ea", "sha256": "7d2c9abbadb9d7e43969baa9b6b6dc50ce53de3f643ae6af6a778c60e3a31aa3"}, "downloads": -1, "filename": "pinform-0.5.tar.gz", "has_sig": false, "md5_digest": "dcc41ab424c2839e14cd99b5f9f3e0ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10149, "upload_time": "2019-02-18T13:34:32", "upload_time_iso_8601": "2019-02-18T13:34:32.291878Z", "url": "https://files.pythonhosted.org/packages/31/e1/96850b9c8d3ca5efd291e4208113ca526224c4f39476c3ed39d454ddc657/pinform-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "b26ac9d0f533808bfc88cb10d07ea443", "sha256": "f024cb8fd085575c9a52f3d0ac79fd1a4efc58590fcc01b905dc74fbb7025c15"}, "downloads": -1, "filename": "pinform-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "b26ac9d0f533808bfc88cb10d07ea443", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13878, "upload_time": "2019-02-25T15:12:11", "upload_time_iso_8601": "2019-02-25T15:12:11.481902Z", "url": "https://files.pythonhosted.org/packages/64/d3/6ac1515402ee15f004eb2b2d6a743277803023adf5f883dc6ba734deeb6e/pinform-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f95c10d2a24ddc8af34a835fccb65928", "sha256": "8bb72ad572d6a0454c70feb918f5f79ef8d08dcf463b1dd2c40a8b60a30deed2"}, "downloads": -1, "filename": "pinform-0.6.tar.gz", "has_sig": false, "md5_digest": "f95c10d2a24ddc8af34a835fccb65928", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10261, "upload_time": "2019-02-25T15:12:17", "upload_time_iso_8601": "2019-02-25T15:12:17.049352Z", "url": "https://files.pythonhosted.org/packages/bd/94/e5cbc890b5708d63e7c71ff2d3af082c8129afe503b90b11101b5a0efee0/pinform-0.6.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "616e82a7798495d5b09088813bef2493", "sha256": "01b765762d1256ff19b6134541bef4b982bd7c5b3708bd88dffc43a68cfe0238"}, "downloads": -1, "filename": "pinform-0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "616e82a7798495d5b09088813bef2493", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13024, "upload_time": "2019-12-04T14:11:26", "upload_time_iso_8601": "2019-12-04T14:11:26.104593Z", "url": "https://files.pythonhosted.org/packages/4f/22/24644c47cd6cf8b3f610dfb910583e506ccfa9f10947ec05541a984227a9/pinform-0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84dd2e2b35acfe90f02d33b2b4324219", "sha256": "3608827fab2fbc26069f393daec2301dd58b82b00aee237fc384d30b69716de9"}, "downloads": -1, "filename": "pinform-0.8.tar.gz", "has_sig": false, "md5_digest": "84dd2e2b35acfe90f02d33b2b4324219", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10926, "upload_time": "2019-12-04T14:11:29", "upload_time_iso_8601": "2019-12-04T14:11:29.017717Z", "url": "https://files.pythonhosted.org/packages/ca/50/ee38b0827584c2d6d8a388a63ad3acc0f385e7c632649532e5050e0b6456/pinform-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "9e50b7f3e158dee70fed660cf3cfbbdb", "sha256": "94058845fb55dd73a1cdd4ce2b6145b5f6a70d6e177c0422866966e5c163fa47"}, "downloads": -1, "filename": "pinform-0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "9e50b7f3e158dee70fed660cf3cfbbdb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13088, "upload_time": "2019-12-04T17:42:38", "upload_time_iso_8601": "2019-12-04T17:42:38.464732Z", "url": "https://files.pythonhosted.org/packages/e9/75/f620971690fc38576098a7e89713b99a1af06728b68a99c6a64ce8e38895/pinform-0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24a641b49859d10b5ae81747195e4906", "sha256": "2c93a7d7a6e64ce8fc8f1c1b4433e5bce701f85b2ab6d6c96d292b4db7ae22d1"}, "downloads": -1, "filename": "pinform-0.9.tar.gz", "has_sig": false, "md5_digest": "24a641b49859d10b5ae81747195e4906", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10985, "upload_time": "2019-12-04T17:42:40", "upload_time_iso_8601": "2019-12-04T17:42:40.030357Z", "url": "https://files.pythonhosted.org/packages/d0/19/4a6d5d61548a3a0c881819215a273f4b24bd497c766dcd3a2951730ef29f/pinform-0.9.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "ce6526e0c70f6b1fb213ed27f7bd0865", "sha256": "df2cc918fbdd9c747c9ce5dbbb8f8f6ee12bc7fd53ae60307ec4b716eb0053fc"}, "downloads": -1, "filename": "pinform-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ce6526e0c70f6b1fb213ed27f7bd0865", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13115, "upload_time": "2020-01-06T16:03:31", "upload_time_iso_8601": "2020-01-06T16:03:31.213360Z", "url": "https://files.pythonhosted.org/packages/da/26/f80cd06dc8eaddefe0c0795d24151434a68b2d1d5254fd0ba88f61ef4925/pinform-0.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3be277f1992034e63e9f9e45da562bcb", "sha256": "de97b5c584f85284fc0cad6443d4e036012b2f990a8fd72ac52b71f1ff69de2b"}, "downloads": -1, "filename": "pinform-0.9.1.tar.gz", "has_sig": false, "md5_digest": "3be277f1992034e63e9f9e45da562bcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11003, "upload_time": "2020-01-06T16:03:33", "upload_time_iso_8601": "2020-01-06T16:03:33.593856Z", "url": "https://files.pythonhosted.org/packages/f4/35/14017d2c8a1e996d96a64612f41d7ec060e6001478725adfb4f78cecf2f0/pinform-0.9.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce6526e0c70f6b1fb213ed27f7bd0865", "sha256": "df2cc918fbdd9c747c9ce5dbbb8f8f6ee12bc7fd53ae60307ec4b716eb0053fc"}, "downloads": -1, "filename": "pinform-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ce6526e0c70f6b1fb213ed27f7bd0865", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13115, "upload_time": "2020-01-06T16:03:31", "upload_time_iso_8601": "2020-01-06T16:03:31.213360Z", "url": "https://files.pythonhosted.org/packages/da/26/f80cd06dc8eaddefe0c0795d24151434a68b2d1d5254fd0ba88f61ef4925/pinform-0.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3be277f1992034e63e9f9e45da562bcb", "sha256": "de97b5c584f85284fc0cad6443d4e036012b2f990a8fd72ac52b71f1ff69de2b"}, "downloads": -1, "filename": "pinform-0.9.1.tar.gz", "has_sig": false, "md5_digest": "3be277f1992034e63e9f9e45da562bcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11003, "upload_time": "2020-01-06T16:03:33", "upload_time_iso_8601": "2020-01-06T16:03:33.593856Z", "url": "https://files.pythonhosted.org/packages/f4/35/14017d2c8a1e996d96a64612f41d7ec060e6001478725adfb4f78cecf2f0/pinform-0.9.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:32 2020"}