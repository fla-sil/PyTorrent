{"info": {"author": "Rick den Haan", "author_email": "rick@capirussa.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: Freeware", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "Eobot\n=====\n\nConfiguration\n-------------\n\nTo use the API, you need to set up the authentication credentials for the Eobot.com account you'll be querying. Use the\n``get_config()`` method to get access to the configuration object used by the ``eobot`` module:\n\n    >>> import eobot\n    >>> config = eobot.get_config()\n\nThis will return an ``EobotConfig`` object where you can set the following values:\n\n    >>> config.set_user_id(12345)             # set the Eobot.com user ID\n    >>> config.set_email('user@example.com')  # set the Eobot.com user login email address\n    >>> config.set_password('password')       # set the Eobot.com user login password\n    >>> config.set_token('token')             # set the Eobot.com user API token\n\nThese four values also have getters and havers available:\n\n    >>> user_id = config.get_user_id() if config.has_user_id() else 0\n\nThe ``EobotConfig`` object also offers a shorthand method to set all these values in one call:\n\n    >>> config.configure(12345, 'user@example.com', 'password', 'token')\n\nAll arguments are optional and can also be used as named arguments. It's possible to pass ``None`` to any value to\nunset it.\n\nNote that the token usage is optional. This was added to provide distinction between the user password and the API\ntoken, but due to the way the Eobot.com API handles token-based authentication, there is in fact no real difference\nbetween the two. If a user has API authentication set via a token, it is also possible to just set that token as the\nuser's password instead. Keep in mind that if *both* are set, all API methods will always use the token.\n\nUsing ``get_config()`` without any parameters will return the global configuration that is used by default for all\nmethods. It is also possible to retrieve a different ``EobotConfig`` object if you want to access multiple Eobot.com\naccounts in a single application, without having to update the configuration every time:\n\n    >>> named_config = eobot.get_config(\"named\")\n    >>> eobot.get_balances(config=named_config)\n\nAll methods return the ``EobotConfig`` instance so that methods can be easily chained:\n\n    >>> eobot.get_config().configure(user_id=12345)\n    >>> eobot.get_balances()\n    >>> eobot.get_balances(eobot.get_config(\"named\").configure(user_id=67890))\n\nAnonymous methods\n-----------------\n\nFor some API methods, authentication is optional. These are the methods that return generic information that is not\nspecific to individual Eobot.com user accounts:\n\n    >>> eobot.get_supported_coins()                      # Will return a list of all Cryptocurrencies supported by Eobot.com\n    >>> eobot.get_supported_fiat()                       # Will return a list of all fiat currencies supported by Eobot.com\n    >>> eobot.get_coin_value(\"BTC\")                      # Will return the current BTC value in US Dollars\n    >>> eobot.get_exchange_rate(\"EUR\")                   # Will return the current exchange rate from US Dollars to Euros\n    >>> eobot.get_exchange_estimate(\"BTC\", \"DOGE\", 1.0)  # Will estimate the amount of DOGE you'd get for 1.0 BTC\n\nRead-only methods\n-----------------\n\nFor read-only methods, only the Eobot.com user ID is needed. If you don't know the user ID for the account you want to\nquery, you can obtain it via the ``get_user_id()`` method, which requires that the user's email address and password\n(or token) is set:\n\n    >>> user_id = eobot.get_user_id(eobot.get_config().configure(email='user@example.com', password='password'))\n\nThe read-only methods are:\n\n    >>> eobot.get_config().configure(user_id=12345)\n    >>> eobot.get_balances()              # Will return the current balances for all supported Cryptocurrencies\n    >>> eobot.get_deposit_address(\"BTC\")  # Will return a BTC wallet address for depositing BTC to this Eobot account\n    >>> eobot.get_mining_estimates()      # Will return the estimated monthly revenue for all current miners\n    >>> eobot.get_mining_mode()           # Will return the Cryptocurrency that is currently being mined\n    >>> eobot.get_mining_speed()          # Will return the mining speed for all current miners\n\nWrite methods\n-------------\n\nFor write methods, you will always need the user's email address and password/token. Most methods also require the\nuser's account ID, but this is implicitly fetched via the ``get_user_id()`` method if not provided. This does mean that\nan extra API call is performed, so for performance reasons it's better to provide it yourself.\n\nThe write methods are:\n\n    >>> eobot.get_config().configure(email='user@example.com', password='password')\n    >>> eobot.exchange_coins(\"BTC\", 1.0, \"DOGE\")                      # Will convert 1.0 BTC to DOGE\n    >>> eobot.manual_withdraw(\"BTC\", 1.0, \"<wallet address>\")         # Will withdraw 1.0 BTC to the provided wallet\n    >>> eobot.set_automatic_withdraw(\"BTC\", 1.0, \"<wallet address>\")  # Will configure Eobot.com to automatically withdraw BTC to the provided wallet if the balance exceeds 1.0 BTC\n    >>> eobot.set_mining_mode(\"BTC\")                                  # Will set the mining mode for the account to BTC\n\nIf you find any bugs, please raise an issue on Github.\n\nHappy coding!\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/rickdenhaan/eobot-py", "keywords": "eobot eobot.com api", "license": "Freeware", "maintainer": "", "maintainer_email": "", "name": "eobot-py", "package_url": "https://pypi.org/project/eobot-py/", "platform": "", "project_url": "https://pypi.org/project/eobot-py/", "project_urls": {"Homepage": "http://github.com/rickdenhaan/eobot-py"}, "release_url": "https://pypi.org/project/eobot-py/0.1.2/", "requires_dist": ["requests"], "requires_python": "", "summary": "Eobot API wrapper", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"configuration\">\n<h2>Configuration</h2>\n<p>To use the API, you need to set up the authentication credentials for the Eobot.com account you\u2019ll be querying. Use the\n<tt>get_config()</tt> method to get access to the configuration object used by the <tt>eobot</tt> module:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import eobot\n&gt;&gt;&gt; config = eobot.get_config()\n</pre>\n</blockquote>\n<p>This will return an <tt>EobotConfig</tt> object where you can set the following values:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; config.set_user_id(12345)             # set the Eobot.com user ID\n&gt;&gt;&gt; config.set_email('user@example.com')  # set the Eobot.com user login email address\n&gt;&gt;&gt; config.set_password('password')       # set the Eobot.com user login password\n&gt;&gt;&gt; config.set_token('token')             # set the Eobot.com user API token\n</pre>\n</blockquote>\n<p>These four values also have getters and havers available:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; user_id = config.get_user_id() if config.has_user_id() else 0\n</pre>\n</blockquote>\n<p>The <tt>EobotConfig</tt> object also offers a shorthand method to set all these values in one call:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; config.configure(12345, 'user@example.com', 'password', 'token')\n</pre>\n</blockquote>\n<p>All arguments are optional and can also be used as named arguments. It\u2019s possible to pass <tt>None</tt> to any value to\nunset it.</p>\n<p>Note that the token usage is optional. This was added to provide distinction between the user password and the API\ntoken, but due to the way the Eobot.com API handles token-based authentication, there is in fact no real difference\nbetween the two. If a user has API authentication set via a token, it is also possible to just set that token as the\nuser\u2019s password instead. Keep in mind that if <em>both</em> are set, all API methods will always use the token.</p>\n<p>Using <tt>get_config()</tt> without any parameters will return the global configuration that is used by default for all\nmethods. It is also possible to retrieve a different <tt>EobotConfig</tt> object if you want to access multiple Eobot.com\naccounts in a single application, without having to update the configuration every time:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; named_config = eobot.get_config(\"named\")\n&gt;&gt;&gt; eobot.get_balances(config=named_config)\n</pre>\n</blockquote>\n<p>All methods return the <tt>EobotConfig</tt> instance so that methods can be easily chained:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; eobot.get_config().configure(user_id=12345)\n&gt;&gt;&gt; eobot.get_balances()\n&gt;&gt;&gt; eobot.get_balances(eobot.get_config(\"named\").configure(user_id=67890))\n</pre>\n</blockquote>\n</div>\n<div id=\"anonymous-methods\">\n<h2>Anonymous methods</h2>\n<p>For some API methods, authentication is optional. These are the methods that return generic information that is not\nspecific to individual Eobot.com user accounts:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; eobot.get_supported_coins()                      # Will return a list of all Cryptocurrencies supported by Eobot.com\n&gt;&gt;&gt; eobot.get_supported_fiat()                       # Will return a list of all fiat currencies supported by Eobot.com\n&gt;&gt;&gt; eobot.get_coin_value(\"BTC\")                      # Will return the current BTC value in US Dollars\n&gt;&gt;&gt; eobot.get_exchange_rate(\"EUR\")                   # Will return the current exchange rate from US Dollars to Euros\n&gt;&gt;&gt; eobot.get_exchange_estimate(\"BTC\", \"DOGE\", 1.0)  # Will estimate the amount of DOGE you'd get for 1.0 BTC\n</pre>\n</blockquote>\n</div>\n<div id=\"read-only-methods\">\n<h2>Read-only methods</h2>\n<p>For read-only methods, only the Eobot.com user ID is needed. If you don\u2019t know the user ID for the account you want to\nquery, you can obtain it via the <tt>get_user_id()</tt> method, which requires that the user\u2019s email address and password\n(or token) is set:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; user_id = eobot.get_user_id(eobot.get_config().configure(email='user@example.com', password='password'))\n</pre>\n</blockquote>\n<p>The read-only methods are:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; eobot.get_config().configure(user_id=12345)\n&gt;&gt;&gt; eobot.get_balances()              # Will return the current balances for all supported Cryptocurrencies\n&gt;&gt;&gt; eobot.get_deposit_address(\"BTC\")  # Will return a BTC wallet address for depositing BTC to this Eobot account\n&gt;&gt;&gt; eobot.get_mining_estimates()      # Will return the estimated monthly revenue for all current miners\n&gt;&gt;&gt; eobot.get_mining_mode()           # Will return the Cryptocurrency that is currently being mined\n&gt;&gt;&gt; eobot.get_mining_speed()          # Will return the mining speed for all current miners\n</pre>\n</blockquote>\n</div>\n<div id=\"write-methods\">\n<h2>Write methods</h2>\n<p>For write methods, you will always need the user\u2019s email address and password/token. Most methods also require the\nuser\u2019s account ID, but this is implicitly fetched via the <tt>get_user_id()</tt> method if not provided. This does mean that\nan extra API call is performed, so for performance reasons it\u2019s better to provide it yourself.</p>\n<p>The write methods are:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; eobot.get_config().configure(email='user@example.com', password='password')\n&gt;&gt;&gt; eobot.exchange_coins(\"BTC\", 1.0, \"DOGE\")                      # Will convert 1.0 BTC to DOGE\n&gt;&gt;&gt; eobot.manual_withdraw(\"BTC\", 1.0, \"&lt;wallet address&gt;\")         # Will withdraw 1.0 BTC to the provided wallet\n&gt;&gt;&gt; eobot.set_automatic_withdraw(\"BTC\", 1.0, \"&lt;wallet address&gt;\")  # Will configure Eobot.com to automatically withdraw BTC to the provided wallet if the balance exceeds 1.0 BTC\n&gt;&gt;&gt; eobot.set_mining_mode(\"BTC\")                                  # Will set the mining mode for the account to BTC\n</pre>\n</blockquote>\n<p>If you find any bugs, please raise an issue on Github.</p>\n<p>Happy coding!</p>\n</div>\n\n          </div>"}, "last_serial": 3132706, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ceb39c484474fbd88d3ae2a3c603dbef", "sha256": "b33230e24a85cc040e9b2084ecedf25bd1aa2b9995c80ee8f077b4754c767a43"}, "downloads": -1, "filename": "eobot_py-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "ceb39c484474fbd88d3ae2a3c603dbef", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 18606, "upload_time": "2017-08-28T23:37:15", "upload_time_iso_8601": "2017-08-28T23:37:15.607109Z", "url": "https://files.pythonhosted.org/packages/87/7f/5f4c362e54efbfc10ae34d0308ba8a8722bded0914481628cf5f3f832565/eobot_py-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aaf43860a23c0dbf71ffe09018db9896", "sha256": "746d5e9a4d665fbd9f1a193d79435b370d33e804ab403ec8552fa6e23d455086"}, "downloads": -1, "filename": "eobot-py-0.1.0.tar.gz", "has_sig": false, "md5_digest": "aaf43860a23c0dbf71ffe09018db9896", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8862, "upload_time": "2017-08-28T23:37:17", "upload_time_iso_8601": "2017-08-28T23:37:17.971969Z", "url": "https://files.pythonhosted.org/packages/d3/fb/f77d43a8befdea41a8904c7841470273329b836ad16c068742d3bb881b38/eobot-py-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f747e289167f97ed9212548f52163533", "sha256": "8daabc7b501cd4705f6af77272c2fb8198803d228988a81ed32b09b8326457bf"}, "downloads": -1, "filename": "eobot_py-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f747e289167f97ed9212548f52163533", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22086, "upload_time": "2017-08-29T12:30:59", "upload_time_iso_8601": "2017-08-29T12:30:59.185062Z", "url": "https://files.pythonhosted.org/packages/9a/11/4a58d900c674665929cd25ae062de7645087f4e95ca05f6361471b80a528/eobot_py-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c7a740029548585c952e9d92ac9fdc8", "sha256": "04b2842bf080d1a4e1014c66f99d85d7bee9c89aa86f699f755912cd1f8a6a6c"}, "downloads": -1, "filename": "eobot-py-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2c7a740029548585c952e9d92ac9fdc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9170, "upload_time": "2017-08-29T12:31:01", "upload_time_iso_8601": "2017-08-29T12:31:01.015999Z", "url": "https://files.pythonhosted.org/packages/17/d7/d57b2d203e170e3b3b7c0b873e577785ccb7eb3fd6ff3c60b974f657e5b7/eobot-py-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c4db1a7f79d52f5418769974cc43825b", "sha256": "8d33201bee2eef871bf72a828aba81438902bf72e403d5207d7b8fe9155b7bb5"}, "downloads": -1, "filename": "eobot_py-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c4db1a7f79d52f5418769974cc43825b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22092, "upload_time": "2017-08-29T17:48:38", "upload_time_iso_8601": "2017-08-29T17:48:38.149882Z", "url": "https://files.pythonhosted.org/packages/9e/bb/af7a2aa5c38a0e91a3eb502261fbf950d9a20168ff4af21fb5231675475d/eobot_py-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b46d9821858bf0240ec34571ddbd865d", "sha256": "224dab189a3f1aff08b8764247c9950d328c363a4856215a2356b0e538745c9b"}, "downloads": -1, "filename": "eobot-py-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b46d9821858bf0240ec34571ddbd865d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9181, "upload_time": "2017-08-29T17:48:39", "upload_time_iso_8601": "2017-08-29T17:48:39.388514Z", "url": "https://files.pythonhosted.org/packages/b2/2c/c51253005bb73f02e245facf45310916ed8c0c3bfb97c0d1b3a347037be3/eobot-py-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c4db1a7f79d52f5418769974cc43825b", "sha256": "8d33201bee2eef871bf72a828aba81438902bf72e403d5207d7b8fe9155b7bb5"}, "downloads": -1, "filename": "eobot_py-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c4db1a7f79d52f5418769974cc43825b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22092, "upload_time": "2017-08-29T17:48:38", "upload_time_iso_8601": "2017-08-29T17:48:38.149882Z", "url": "https://files.pythonhosted.org/packages/9e/bb/af7a2aa5c38a0e91a3eb502261fbf950d9a20168ff4af21fb5231675475d/eobot_py-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b46d9821858bf0240ec34571ddbd865d", "sha256": "224dab189a3f1aff08b8764247c9950d328c363a4856215a2356b0e538745c9b"}, "downloads": -1, "filename": "eobot-py-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b46d9821858bf0240ec34571ddbd865d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9181, "upload_time": "2017-08-29T17:48:39", "upload_time_iso_8601": "2017-08-29T17:48:39.388514Z", "url": "https://files.pythonhosted.org/packages/b2/2c/c51253005bb73f02e245facf45310916ed8c0c3bfb97c0d1b3a347037be3/eobot-py-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:06 2020"}