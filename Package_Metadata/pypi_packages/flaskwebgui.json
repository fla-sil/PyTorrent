{"info": {"author": "Climente Alin", "author_email": "climente.alin@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "<p align=\"center\">\n  <img src=\"flaskwebgui.png\">\n</p>\n\n<p align=\"center\">\n  <h4> Create desktop applications with Flask (or Django)!</h4>\n\n  [![Downloads](https://pepy.tech/badge/flaskwebgui)](https://pepy.tech/project/flaskwebgui)\n\n</p>\n\n\n\n### Install\n\n```\npip install flaskwebgui\n```\nOr download source file [flaskwebgui.py](https://raw.githubusercontent.com/ClimenteA/flaskwebgui/master/src/flaskwebgui.py) and place it where you need. \n\n### Usage with Flask\n\nAdd bellow js code to your base.html (or to your script.js file)\n\n```\n<script>\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n    var url = 'http://127.0.0.1:5001/GUI-is-still-open'; \n    fetch(url, { mode: 'no-cors'});\n    setInterval(function(){ fetch(url, { mode: 'no-cors'});}, 5000)();\n\n});\n\n</script>\n\n```\n\nIn your main python file add bellow 3 lines of code\n\n```\nfrom flask import Flask\nfrom flaskwebgui import FlaskUI #get the FlaskUI class\n\napp = Flask(__name__)\n\n# Feed it the flask app instance \nui = FlaskUI(app)\n\n# do your logic as usual in Flask\n@app.route(\"/\")\ndef index():\n  return \"It works!\"\n\n# call the 'run' method\nui.run()\n\n```\n### Usage with Django\n\nMake a file 'gui.py'(file name not important) next to 'manage.py' file in the django project folder.\n\nAdd the js code like we did it up.\n\nInside 'gui.py' file add these 2 lines of code:\n\n```\n\nfrom flaskwebgui import FlaskUI #import FlaskUI class\n\n#You can also call the run function on FlaskUI class instantiation\n\nFlaskUI(server='django').run()\n\n```\n\nNext run from your terminal the bellow command:\n\n```\npython gui.py\n```\n\n### Configurations\n\nDefault FlaskUI class parameters:\n\n* **app**, ==> flask class instance\n\n* **width=800** ==> default width 800\n\n* **height=600** ==> default height 600\n\n* **fullscreen=False** ==> start app in fullscreen\n\n* **maximized=False** ==> start app in maximized window\n\n* **app_mode=True** ==> by default it will start chrome in app(desktop) mode without address bar\n\n* **browser_path=\"\"** ==> path to `browser.exe` (absolute path to chrome `C:/browser_folder/chrome.exe` \n\n* **server=\"flask\"** ==> the default backend framework is flask (django is suported also), you can add a function which starts the desired server for your choosed framework (bottle, web2py pyramid etc)\n\n* **host=\"127.0.0.1\"** ==> specify other if needed\n\n* **port=5000** ==> specify other if needed\n\n* **socketio=SocketIO Instance** ==> Flask SocketIO instance (if specified, uses `socketio.run()` instead of `app.run()` for Flask application)\n\nShould work on windows/linux/mac with no isssues.\n\nDevelop your app as you would normally do, add flaskwebgui at the end or for tests.\n**flaskwebgui doesn't interfere with your way of doing a flask application** it just helps converting it into a desktop app more easily with pyinstaller or [pyvan](https://github.com/ClimenteA/pyvan).\n\n### Distribution\n\nYou can distribute it as a standalone desktop app with pyinstaller or [pyvan](https://github.com/ClimenteA/pyvan).\n\n### Credits\nIt's a combination of https://github.com/Widdershin/flask-desktop and https://github.com/ChrisKnott/Eel\n\nflaskwebgui just uses threading to start a flask server and the browser in app mode (for chrome).\nIt has some advantages over flask-desktop because it doesn't use PyQt5, so you won't have any issues regarding licensing and over Eel because you don't need to learn any logic other than Flask/Django.\n\n**Submit any questions/issues you have! Fell free to fork it and improve it!**\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ClimenteA/flaskwebgui", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flaskwebgui", "package_url": "https://pypi.org/project/flaskwebgui/", "platform": "", "project_url": "https://pypi.org/project/flaskwebgui/", "project_urls": {"Homepage": "https://github.com/ClimenteA/flaskwebgui"}, "release_url": "https://pypi.org/project/flaskwebgui/0.1.9/", "requires_dist": ["psutil", "whichcraft", "flask"], "requires_python": "", "summary": "Create desktop applications with Flask (or Django)!", "version": "0.1.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b15d756f401abd6cbb88aa09daa53338626e605/666c61736b7765626775692e706e67\">\n</p>\n<p align=\"center\">\n  </p><h4> Create desktop applications with Flask (or Django)!</h4>\n<p><a href=\"https://pepy.tech/project/flaskwebgui\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e8cd49bf37d735466047d8ff6fd7cc481194255/68747470733a2f2f706570792e746563682f62616467652f666c61736b776562677569\"></a></p>\n<p></p>\n<h3>Install</h3>\n<pre><code>pip install flaskwebgui\n</code></pre>\n<p>Or download source file <a href=\"https://raw.githubusercontent.com/ClimenteA/flaskwebgui/master/src/flaskwebgui.py\" rel=\"nofollow\">flaskwebgui.py</a> and place it where you need.</p>\n<h3>Usage with Flask</h3>\n<p>Add bellow js code to your base.html (or to your script.js file)</p>\n<pre><code>&lt;script&gt;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n    var url = 'http://127.0.0.1:5001/GUI-is-still-open'; \n    fetch(url, { mode: 'no-cors'});\n    setInterval(function(){ fetch(url, { mode: 'no-cors'});}, 5000)();\n\n});\n\n&lt;/script&gt;\n\n</code></pre>\n<p>In your main python file add bellow 3 lines of code</p>\n<pre><code>from flask import Flask\nfrom flaskwebgui import FlaskUI #get the FlaskUI class\n\napp = Flask(__name__)\n\n# Feed it the flask app instance \nui = FlaskUI(app)\n\n# do your logic as usual in Flask\n@app.route(\"/\")\ndef index():\n  return \"It works!\"\n\n# call the 'run' method\nui.run()\n\n</code></pre>\n<h3>Usage with Django</h3>\n<p>Make a file 'gui.py'(file name not important) next to 'manage.py' file in the django project folder.</p>\n<p>Add the js code like we did it up.</p>\n<p>Inside 'gui.py' file add these 2 lines of code:</p>\n<pre><code>\nfrom flaskwebgui import FlaskUI #import FlaskUI class\n\n#You can also call the run function on FlaskUI class instantiation\n\nFlaskUI(server='django').run()\n\n</code></pre>\n<p>Next run from your terminal the bellow command:</p>\n<pre><code>python gui.py\n</code></pre>\n<h3>Configurations</h3>\n<p>Default FlaskUI class parameters:</p>\n<ul>\n<li>\n<p><strong>app</strong>, ==&gt; flask class instance</p>\n</li>\n<li>\n<p><strong>width=800</strong> ==&gt; default width 800</p>\n</li>\n<li>\n<p><strong>height=600</strong> ==&gt; default height 600</p>\n</li>\n<li>\n<p><strong>fullscreen=False</strong> ==&gt; start app in fullscreen</p>\n</li>\n<li>\n<p><strong>maximized=False</strong> ==&gt; start app in maximized window</p>\n</li>\n<li>\n<p><strong>app_mode=True</strong> ==&gt; by default it will start chrome in app(desktop) mode without address bar</p>\n</li>\n<li>\n<p><strong>browser_path=\"\"</strong> ==&gt; path to <code>browser.exe</code> (absolute path to chrome <code>C:/browser_folder/chrome.exe</code></p>\n</li>\n<li>\n<p><strong>server=\"flask\"</strong> ==&gt; the default backend framework is flask (django is suported also), you can add a function which starts the desired server for your choosed framework (bottle, web2py pyramid etc)</p>\n</li>\n<li>\n<p><strong>host=\"127.0.0.1\"</strong> ==&gt; specify other if needed</p>\n</li>\n<li>\n<p><strong>port=5000</strong> ==&gt; specify other if needed</p>\n</li>\n<li>\n<p><strong>socketio=SocketIO Instance</strong> ==&gt; Flask SocketIO instance (if specified, uses <code>socketio.run()</code> instead of <code>app.run()</code> for Flask application)</p>\n</li>\n</ul>\n<p>Should work on windows/linux/mac with no isssues.</p>\n<p>Develop your app as you would normally do, add flaskwebgui at the end or for tests.\n<strong>flaskwebgui doesn't interfere with your way of doing a flask application</strong> it just helps converting it into a desktop app more easily with pyinstaller or <a href=\"https://github.com/ClimenteA/pyvan\" rel=\"nofollow\">pyvan</a>.</p>\n<h3>Distribution</h3>\n<p>You can distribute it as a standalone desktop app with pyinstaller or <a href=\"https://github.com/ClimenteA/pyvan\" rel=\"nofollow\">pyvan</a>.</p>\n<h3>Credits</h3>\n<p>It's a combination of <a href=\"https://github.com/Widdershin/flask-desktop\" rel=\"nofollow\">https://github.com/Widdershin/flask-desktop</a> and <a href=\"https://github.com/ChrisKnott/Eel\" rel=\"nofollow\">https://github.com/ChrisKnott/Eel</a></p>\n<p>flaskwebgui just uses threading to start a flask server and the browser in app mode (for chrome).\nIt has some advantages over flask-desktop because it doesn't use PyQt5, so you won't have any issues regarding licensing and over Eel because you don't need to learn any logic other than Flask/Django.</p>\n<p><strong>Submit any questions/issues you have! Fell free to fork it and improve it!</strong></p>\n\n          </div>"}, "last_serial": 6812933, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "b2dde9b45dd264e90408a4e83239fb65", "sha256": "14cf04749799b6e98be43d07ce2b124754d85b56a76ffa3de9d522be98b7a7b5"}, "downloads": -1, "filename": "flaskwebgui-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b2dde9b45dd264e90408a4e83239fb65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6442, "upload_time": "2019-12-29T09:27:46", "upload_time_iso_8601": "2019-12-29T09:27:46.643109Z", "url": "https://files.pythonhosted.org/packages/39/62/d079f1ab04276d78526cc6cd1902792a6baade9f68cd647a5d68bc8b5f0f/flaskwebgui-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "683870298d99bf3a6b85811c74f02738", "sha256": "bf0307a9af63150c97feffd7c47b433390c0009ac03939565748ed7778707579"}, "downloads": -1, "filename": "flaskwebgui-0.1.2.tar.gz", "has_sig": false, "md5_digest": "683870298d99bf3a6b85811c74f02738", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5456, "upload_time": "2019-12-29T09:27:48", "upload_time_iso_8601": "2019-12-29T09:27:48.214855Z", "url": "https://files.pythonhosted.org/packages/50/94/d3f1127b4ccab2ce2b4e5e0655da5df2db89b4f5a5dd2167aa6471397f9f/flaskwebgui-0.1.2.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "4ca2269846bd9430745e80d3f6dd2e5c", "sha256": "dcd82b27c166973e5958f67c12b89239588d376b84c15d1b43114b145d7a7577"}, "downloads": -1, "filename": "flaskwebgui-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "4ca2269846bd9430745e80d3f6dd2e5c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6682, "upload_time": "2020-02-03T09:12:28", "upload_time_iso_8601": "2020-02-03T09:12:28.284441Z", "url": "https://files.pythonhosted.org/packages/b9/e3/15b3ba350bff7462f8efd7047182a8d46fdb6c64cb449500b629ff310857/flaskwebgui-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd1b68696d93103ecc0e66a09675c0e1", "sha256": "9f7bb6be7c22d408bc52c7f03d244e044a4e4906923affd57ae96ac75edb5b7c"}, "downloads": -1, "filename": "flaskwebgui-0.1.6.tar.gz", "has_sig": false, "md5_digest": "fd1b68696d93103ecc0e66a09675c0e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5943, "upload_time": "2020-02-03T09:12:29", "upload_time_iso_8601": "2020-02-03T09:12:29.900574Z", "url": "https://files.pythonhosted.org/packages/eb/6b/4f2daf1929033db1ecaea26d6b5a11fe8cc55a9eba72e392fb38e9f1d8ad/flaskwebgui-0.1.6.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "b66e98581b8f1fa987cea32346949b54", "sha256": "0117ae72ea301cf0fce5d14e14958ad4d73214d0daf2e32789ec6a91a0dea91a"}, "downloads": -1, "filename": "flaskwebgui-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "b66e98581b8f1fa987cea32346949b54", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7014, "upload_time": "2020-03-08T08:26:28", "upload_time_iso_8601": "2020-03-08T08:26:28.804721Z", "url": "https://files.pythonhosted.org/packages/50/db/005591579e1f145b3907146416dd6f90b47ff8044205526472ef7832fb25/flaskwebgui-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57f9871cb212674ce6c4924a656620b9", "sha256": "282da78124412b58d4e23a6115cc5c4ba74cfe828ca9a84395be36db954d1fd6"}, "downloads": -1, "filename": "flaskwebgui-0.1.8.tar.gz", "has_sig": false, "md5_digest": "57f9871cb212674ce6c4924a656620b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6038, "upload_time": "2020-03-08T08:26:30", "upload_time_iso_8601": "2020-03-08T08:26:30.571287Z", "url": "https://files.pythonhosted.org/packages/b8/05/0dce159f41794ea0ac2b0801e68d58dc9793588f60a22cd975f4db33ed4f/flaskwebgui-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "853d93f87d6a695bc50fe6c7c5d4e59a", "sha256": "73810080e482a1555eafd5a2e896bd803d754efc72296b2e1a27c61cfeb4d0c7"}, "downloads": -1, "filename": "flaskwebgui-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "853d93f87d6a695bc50fe6c7c5d4e59a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6340, "upload_time": "2020-03-14T21:50:17", "upload_time_iso_8601": "2020-03-14T21:50:17.894304Z", "url": "https://files.pythonhosted.org/packages/c8/0d/9a733ab1a91515192125ad905fa5742d9ebc698eb2bf8fed9450fb6cd331/flaskwebgui-0.1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7644f1ff0035b7db4b8d2980304be99", "sha256": "bf32b258faae9234c2f9d3da350e3c18643484b2e6b953e24994431de9ef94d7"}, "downloads": -1, "filename": "flaskwebgui-0.1.9.tar.gz", "has_sig": false, "md5_digest": "a7644f1ff0035b7db4b8d2980304be99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5440, "upload_time": "2020-03-14T21:50:19", "upload_time_iso_8601": "2020-03-14T21:50:19.392295Z", "url": "https://files.pythonhosted.org/packages/13/93/a1e72e4e431652864f48de5ff02a97c15d19a8156407ce471e766e67d407/flaskwebgui-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "853d93f87d6a695bc50fe6c7c5d4e59a", "sha256": "73810080e482a1555eafd5a2e896bd803d754efc72296b2e1a27c61cfeb4d0c7"}, "downloads": -1, "filename": "flaskwebgui-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "853d93f87d6a695bc50fe6c7c5d4e59a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6340, "upload_time": "2020-03-14T21:50:17", "upload_time_iso_8601": "2020-03-14T21:50:17.894304Z", "url": "https://files.pythonhosted.org/packages/c8/0d/9a733ab1a91515192125ad905fa5742d9ebc698eb2bf8fed9450fb6cd331/flaskwebgui-0.1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7644f1ff0035b7db4b8d2980304be99", "sha256": "bf32b258faae9234c2f9d3da350e3c18643484b2e6b953e24994431de9ef94d7"}, "downloads": -1, "filename": "flaskwebgui-0.1.9.tar.gz", "has_sig": false, "md5_digest": "a7644f1ff0035b7db4b8d2980304be99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5440, "upload_time": "2020-03-14T21:50:19", "upload_time_iso_8601": "2020-03-14T21:50:19.392295Z", "url": "https://files.pythonhosted.org/packages/13/93/a1e72e4e431652864f48de5ff02a97c15d19a8156407ce471e766e67d407/flaskwebgui-0.1.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:08 2020"}