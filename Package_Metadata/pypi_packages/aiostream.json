{"info": {"author": "Vincent Michel", "author_email": "vxgmichel@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "aiostream\n=========\n\n\n.. image:: https://readthedocs.org/projects/aiostream/badge/?version=latest\n   :target: http://aiostream.readthedocs.io/en/latest/?badge=latest\n   :alt:\n\n.. image:: https://coveralls.io/repos/github/vxgmichel/aiostream/badge.svg?branch=master\n   :target: https://coveralls.io/github/vxgmichel/aiostream?branch=master\n   :alt:\n\n.. image:: https://travis-ci.org/vxgmichel/aiostream.svg?branch=master\n   :target: https://travis-ci.org/vxgmichel/aiostream\n   :alt:\n\n.. image:: https://img.shields.io/pypi/v/aiostream.svg\n   :target: https://pypi.python.org/pypi/aiostream\n   :alt:\n\n.. image:: https://img.shields.io/pypi/pyversions/aiostream.svg\n   :target: https://pypi.python.org/pypi/aiostream/\n   :alt:\n\nGenerator-based operators for asynchronous iteration\n\n\nSynopsis\n--------\n\naiostream_ provides a collection of stream operators that can be combined to create\nasynchronous pipelines of operations.\n\nIt can be seen as an asynchronous version of itertools_, although some aspects are slightly different.\nEssentially, all the provided operators return a unified interface called a stream.\nA stream is an enhanced asynchronous iterable providing the following features:\n\n- **Operator pipe-lining** - using pipe symbol ``|``\n- **Repeatability** - every iteration creates a different iterator\n- **Safe iteration context** - using ``async with`` and the ``stream`` method\n- **Simplified execution** - get the last element from a stream using ``await``\n- **Slicing and indexing** - using square brackets ``[]``\n- **Concatenation** - using addition symbol ``+``\n\n\nRequirements\n------------\n\nThe stream operators rely heavily on asynchronous generators (`PEP 525`_):\n\n- python >= 3.6\n\n\nStream operators\n----------------\n\nThe `stream operators`_ are separated in 7 categories:\n\n+--------------------+---------------------------------------------------------------------------------------+\n| **creation**       | iterate_, preserve_, just_, call_, empty_, throw_, never_, repeat_, count_, range_    |\n+--------------------+---------------------------------------------------------------------------------------+\n| **transformation** | map_, enumerate_, starmap_, cycle_, chunks_                                           |\n+--------------------+---------------------------------------------------------------------------------------+\n| **selection**      | take_, takelast_, skip_, skiplast_, getitem_, filter_, until_, takewhile_, dropwhile_ |\n+--------------------+---------------------------------------------------------------------------------------+\n| **combination**    | map_, zip_, merge_, chain_, ziplatest_                                                |\n+--------------------+---------------------------------------------------------------------------------------+\n| **aggregation**    | accumulate_, reduce_, list_                                                           |\n+--------------------+---------------------------------------------------------------------------------------+\n| **advanced**       | concat_, flatten_, switch_, concatmap_, flatmap_, switchmap_                          |\n+--------------------+---------------------------------------------------------------------------------------+\n| **timing**         | spaceout_, timeout_, delay_                                                           |\n+--------------------+---------------------------------------------------------------------------------------+\n| **miscellaneous**  | action_, print_                                                                       |\n+--------------------+---------------------------------------------------------------------------------------+\n\n\nDemonstration\n-------------\n\nThe following example demonstrates most of the streams capabilities:\n\n.. sourcecode:: python\n\n    import asyncio\n    from aiostream import stream, pipe\n\n\n    async def main():\n\n        # Create a counting stream with a 0.2 seconds interval\n        xs = stream.count(interval=0.2)\n\n        # Operators can be piped using '|'\n        ys = xs | pipe.map(lambda x: x**2)\n\n        # Streams can be sliced\n        zs = ys[1:10:2]\n\n        # Use a stream context for proper resource management\n        async with zs.stream() as streamer:\n\n            # Asynchronous iteration\n            async for z in streamer:\n\n                # Print 1, 9, 25, 49 and 81\n                print('->', z)\n\n        # Streams can be awaited and return the last value\n        print('9\u00b2 = ', await zs)\n\n        # Streams can run several times\n        print('9\u00b2 = ', await zs)\n\n        # Streams can be concatenated\n        one_two_three = stream.just(1) + stream.range(2, 4)\n\n        # Print [1, 2, 3]\n        print(await stream.list(one_two_three))\n\n\n    # Run main coroutine\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n    loop.close()\n\nMore examples are available in the `example section`_ of the documentation.\n\n\nContact\n-------\n\nVincent Michel: vxgmichel@gmail.com\n\n\n.. _aiostream: https://github.com/vxgmichel/aiostream\n.. _PEP 525: http://www.python.org/dev/peps/pep-0525/\n.. _Rx: http://reactivex.io/\n.. _aioreactive: http://github.com/dbrattli/aioreactive\n.. _itertools: http://docs.python.org/3/library/itertools.html\n\n.. _stream operators: http://aiostream.readthedocs.io/en/latest/operators.html\n.. _example section: http://aiostream.readthedocs.io/en/latest/examples.html\n\n.. _iterate: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.iterate\n.. _preserve: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.preserve\n.. _just: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.just\n.. _call: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.call\n.. _throw: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.throw\n.. _empty: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.empty\n.. _never: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.never\n.. _repeat: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.repeat\n.. _range: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.range\n.. _count: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.count\n\n.. _map: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.map\n.. _enumerate: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.enumerate\n.. _starmap: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.starmap\n.. _cycle: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.cycle\n.. _chunks: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.chunks\n\n.. _take: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.take\n.. _takelast: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.takelast\n.. _skip: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.skip\n.. _skiplast: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.skiplast\n.. _getitem: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.getitem\n.. _filter: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.filter\n.. _until: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.until\n.. _takewhile: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.takewhile\n.. _dropwhile: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.dropwhile\n\n.. _chain: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.chain\n.. _zip: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.zip\n.. _merge: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.merge\n.. _ziplatest: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.ziplatest\n\n.. _accumulate: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.accumulate\n.. _reduce: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.reduce\n.. _list: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.list\n\n.. _concat: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.concat\n.. _flatten: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.flatten\n.. _switch: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.switch\n.. _concatmap: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.concatmap\n.. _flatmap: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.flatmap\n.. _switchmap: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.switchmap\n\n.. _spaceout: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.spaceout\n.. _delay: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.delay\n.. _timeout: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.timeout\n\n.. _action: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.action\n.. _print: http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.print", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vxgmichel/aiostream", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "aiostream", "package_url": "https://pypi.org/project/aiostream/", "platform": "", "project_url": "https://pypi.org/project/aiostream/", "project_urls": {"Homepage": "https://github.com/vxgmichel/aiostream"}, "release_url": "https://pypi.org/project/aiostream/0.4.1/", "requires_dist": null, "requires_python": "", "summary": "Generator-based operators for asynchronous iteration", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://aiostream.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0dcbee4f17127219eef028c6728b470f9bbcfb6/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61696f73747265616d2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://coveralls.io/github/vxgmichel/aiostream?branch=master\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88f66281750ef7b6cf29637cdcab1406d60e9d3f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7678676d696368656c2f61696f73747265616d2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://travis-ci.org/vxgmichel/aiostream\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e6aea959503044b045ef4c6491a5f3cc301ea771/68747470733a2f2f7472617669732d63692e6f72672f7678676d696368656c2f61696f73747265616d2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/aiostream\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/446835a2fde5580032063127ecfc1dffc0fc0055/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f73747265616d2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/aiostream/\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ddfa86c9c268747b0ff969b5b20ebb8863fb467/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61696f73747265616d2e737667\"></a>\n<p>Generator-based operators for asynchronous iteration</p>\n<div id=\"synopsis\">\n<h2>Synopsis</h2>\n<p><a href=\"https://github.com/vxgmichel/aiostream\" rel=\"nofollow\">aiostream</a> provides a collection of stream operators that can be combined to create\nasynchronous pipelines of operations.</p>\n<p>It can be seen as an asynchronous version of <a href=\"http://docs.python.org/3/library/itertools.html\" rel=\"nofollow\">itertools</a>, although some aspects are slightly different.\nEssentially, all the provided operators return a unified interface called a stream.\nA stream is an enhanced asynchronous iterable providing the following features:</p>\n<ul>\n<li><strong>Operator pipe-lining</strong> - using pipe symbol <tt>|</tt></li>\n<li><strong>Repeatability</strong> - every iteration creates a different iterator</li>\n<li><strong>Safe iteration context</strong> - using <tt>async with</tt> and the <tt>stream</tt> method</li>\n<li><strong>Simplified execution</strong> - get the last element from a stream using <tt>await</tt></li>\n<li><strong>Slicing and indexing</strong> - using square brackets <tt>[]</tt></li>\n<li><strong>Concatenation</strong> - using addition symbol <tt>+</tt></li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>The stream operators rely heavily on asynchronous generators (<a href=\"http://www.python.org/dev/peps/pep-0525/\" rel=\"nofollow\">PEP 525</a>):</p>\n<ul>\n<li>python &gt;= 3.6</li>\n</ul>\n</div>\n<div id=\"stream-operators\">\n<h2>Stream operators</h2>\n<p>The <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html\" rel=\"nofollow\">stream operators</a> are separated in 7 categories:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td><strong>creation</strong></td>\n<td><a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.iterate\" rel=\"nofollow\">iterate</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.preserve\" rel=\"nofollow\">preserve</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.just\" rel=\"nofollow\">just</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.call\" rel=\"nofollow\">call</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.empty\" rel=\"nofollow\">empty</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.throw\" rel=\"nofollow\">throw</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.never\" rel=\"nofollow\">never</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.repeat\" rel=\"nofollow\">repeat</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.count\" rel=\"nofollow\">count</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.range\" rel=\"nofollow\">range</a></td>\n</tr>\n<tr><td><strong>transformation</strong></td>\n<td><a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.map\" rel=\"nofollow\">map</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.enumerate\" rel=\"nofollow\">enumerate</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.starmap\" rel=\"nofollow\">starmap</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.cycle\" rel=\"nofollow\">cycle</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.chunks\" rel=\"nofollow\">chunks</a></td>\n</tr>\n<tr><td><strong>selection</strong></td>\n<td><a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.take\" rel=\"nofollow\">take</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.takelast\" rel=\"nofollow\">takelast</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.skip\" rel=\"nofollow\">skip</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.skiplast\" rel=\"nofollow\">skiplast</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.getitem\" rel=\"nofollow\">getitem</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.filter\" rel=\"nofollow\">filter</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.until\" rel=\"nofollow\">until</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.takewhile\" rel=\"nofollow\">takewhile</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.dropwhile\" rel=\"nofollow\">dropwhile</a></td>\n</tr>\n<tr><td><strong>combination</strong></td>\n<td><a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.map\" rel=\"nofollow\">map</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.zip\" rel=\"nofollow\">zip</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.merge\" rel=\"nofollow\">merge</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.chain\" rel=\"nofollow\">chain</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.ziplatest\" rel=\"nofollow\">ziplatest</a></td>\n</tr>\n<tr><td><strong>aggregation</strong></td>\n<td><a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.accumulate\" rel=\"nofollow\">accumulate</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.reduce\" rel=\"nofollow\">reduce</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.list\" rel=\"nofollow\">list</a></td>\n</tr>\n<tr><td><strong>advanced</strong></td>\n<td><a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.concat\" rel=\"nofollow\">concat</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.flatten\" rel=\"nofollow\">flatten</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.switch\" rel=\"nofollow\">switch</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.concatmap\" rel=\"nofollow\">concatmap</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.flatmap\" rel=\"nofollow\">flatmap</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.switchmap\" rel=\"nofollow\">switchmap</a></td>\n</tr>\n<tr><td><strong>timing</strong></td>\n<td><a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.spaceout\" rel=\"nofollow\">spaceout</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.timeout\" rel=\"nofollow\">timeout</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.delay\" rel=\"nofollow\">delay</a></td>\n</tr>\n<tr><td><strong>miscellaneous</strong></td>\n<td><a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.action\" rel=\"nofollow\">action</a>, <a href=\"http://aiostream.readthedocs.io/en/latest/operators.html#aiostream.stream.print\" rel=\"nofollow\">print</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"demonstration\">\n<h2>Demonstration</h2>\n<p>The following example demonstrates most of the streams capabilities:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiostream</span> <span class=\"kn\">import</span> <span class=\"n\">stream</span><span class=\"p\">,</span> <span class=\"n\">pipe</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n\n    <span class=\"c1\"># Create a counting stream with a 0.2 seconds interval</span>\n    <span class=\"n\">xs</span> <span class=\"o\">=</span> <span class=\"n\">stream</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Operators can be piped using '|'</span>\n    <span class=\"n\">ys</span> <span class=\"o\">=</span> <span class=\"n\">xs</span> <span class=\"o\">|</span> <span class=\"n\">pipe</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Streams can be sliced</span>\n    <span class=\"n\">zs</span> <span class=\"o\">=</span> <span class=\"n\">ys</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># Use a stream context for proper resource management</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">zs</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">streamer</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># Asynchronous iteration</span>\n        <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">z</span> <span class=\"ow\">in</span> <span class=\"n\">streamer</span><span class=\"p\">:</span>\n\n            <span class=\"c1\"># Print 1, 9, 25, 49 and 81</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'-&gt;'</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Streams can be awaited and return the last value</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'9\u00b2 = '</span><span class=\"p\">,</span> <span class=\"k\">await</span> <span class=\"n\">zs</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Streams can run several times</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'9\u00b2 = '</span><span class=\"p\">,</span> <span class=\"k\">await</span> <span class=\"n\">zs</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Streams can be concatenated</span>\n    <span class=\"n\">one_two_three</span> <span class=\"o\">=</span> <span class=\"n\">stream</span><span class=\"o\">.</span><span class=\"n\">just</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">stream</span><span class=\"o\">.</span><span class=\"n\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Print [1, 2, 3]</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">stream</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">one_two_three</span><span class=\"p\">))</span>\n\n\n<span class=\"c1\"># Run main coroutine</span>\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<p>More examples are available in the <a href=\"http://aiostream.readthedocs.io/en/latest/examples.html\" rel=\"nofollow\">example section</a> of the documentation.</p>\n</div>\n<div id=\"contact\">\n<h2>Contact</h2>\n<p>Vincent Michel: <a href=\"mailto:vxgmichel%40gmail.com\">vxgmichel<span>@</span>gmail<span>.</span>com</a></p>\n</div>\n\n          </div>"}, "last_serial": 6681351, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "eeaaf10843b5eaae7e9bd6d11d6389a3", "sha256": "879bcd591f553b4205133fcf7e01baa58cc8dfb31284a067e0dbd37c57a7f8b2"}, "downloads": -1, "filename": "aiostream-0.1.1.tar.gz", "has_sig": false, "md5_digest": "eeaaf10843b5eaae7e9bd6d11d6389a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10035, "upload_time": "2016-11-02T17:31:52", "upload_time_iso_8601": "2016-11-02T17:31:52.585255Z", "url": "https://files.pythonhosted.org/packages/2a/aa/87234bb12be107bb0eaae99f70b15209881bce35646eceff1c2083f3ec64/aiostream-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9c2e51323063208dfac856a6254a5f7d", "sha256": "27e30496bdbd4997cc1d83223cb0a573710111b55ef47e6068f82509d97281f0"}, "downloads": -1, "filename": "aiostream-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9c2e51323063208dfac856a6254a5f7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16155, "upload_time": "2016-11-10T16:16:31", "upload_time_iso_8601": "2016-11-10T16:16:31.334979Z", "url": "https://files.pythonhosted.org/packages/cd/8a/809e21233ac84da378f679a7e80079a8f56a68bbb404992a28c48cee8147/aiostream-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c0535929f4824b40bec149c2c5c55e4d", "sha256": "108c553db77f3543418abbcef1c1bda4d9b8026f73c185200d7bdfdac1d67b48"}, "downloads": -1, "filename": "aiostream-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c0535929f4824b40bec149c2c5c55e4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16025, "upload_time": "2016-11-11T15:36:41", "upload_time_iso_8601": "2016-11-11T15:36:41.793383Z", "url": "https://files.pythonhosted.org/packages/f0/86/16e9037ca6c887231dcfdb35d2fd7c8ef293b2bad7dda9de011d3b434443/aiostream-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "b2cc99b68c1c278f8c26355c0d4468b2", "sha256": "b43b70ed66258fc67ac47e1557229fdbd3076895aa26ae7f8f26b4bf47417c77"}, "downloads": -1, "filename": "aiostream-0.2.2.tar.gz", "has_sig": false, "md5_digest": "b2cc99b68c1c278f8c26355c0d4468b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14888, "upload_time": "2016-11-20T15:11:06", "upload_time_iso_8601": "2016-11-20T15:11:06.789837Z", "url": "https://files.pythonhosted.org/packages/55/83/f90c4c3d9761b5bc88a2145bc7f5a42538f71a946624014bd6edec17808a/aiostream-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "58364967059a2189de677b636d7c8dba", "sha256": "392d1771aa09cb4e08068e74527c9197aa20c9c46f86a801b1435682852e11ec"}, "downloads": -1, "filename": "aiostream-0.2.3.tar.gz", "has_sig": false, "md5_digest": "58364967059a2189de677b636d7c8dba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15942, "upload_time": "2016-11-21T16:51:36", "upload_time_iso_8601": "2016-11-21T16:51:36.417553Z", "url": "https://files.pythonhosted.org/packages/31/6e/c086114a0dc3e7e6e4e76f2cb5c9e78a768172942efafa71e4c006fbe0ed/aiostream-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "cf3b1722e64a92b4766316f47975ab04", "sha256": "6ec078b51bbc4beb6608ab0b97347ee61f108edcfeaf8d4f8c0a88d51f1f7b7c"}, "downloads": -1, "filename": "aiostream-0.2.4.tar.gz", "has_sig": false, "md5_digest": "cf3b1722e64a92b4766316f47975ab04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15167, "upload_time": "2017-06-19T13:00:48", "upload_time_iso_8601": "2017-06-19T13:00:48.274298Z", "url": "https://files.pythonhosted.org/packages/5e/b0/e656eca1a59024048322c0b6b9ab00943f6fd6e4fb40426f00ea01a2546a/aiostream-0.2.4.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "6ef1f777a016fbdf4e5ba81c41de59b6", "sha256": "57e34b0432efb7e4dd454534031bbe8f0aa55d4d62e919f6faee77e3fc04c8d9"}, "downloads": -1, "filename": "aiostream-0.2.6.tar.gz", "has_sig": false, "md5_digest": "6ef1f777a016fbdf4e5ba81c41de59b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16403, "upload_time": "2017-12-20T11:37:36", "upload_time_iso_8601": "2017-12-20T11:37:36.934608Z", "url": "https://files.pythonhosted.org/packages/3e/76/da1f15b1c8f0222059957b5049487ed5b11184e5fe56cb5219a07d717747/aiostream-0.2.6.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e8d3cebb5ef318f67b5efe2c0b268faa", "sha256": "dd8b12509798ef6f128eb00d02682d6d527066a8c9d773f85e4749e34debf872"}, "downloads": -1, "filename": "aiostream-0.3.0.tar.gz", "has_sig": false, "md5_digest": "e8d3cebb5ef318f67b5efe2c0b268faa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17809, "upload_time": "2018-01-05T14:30:49", "upload_time_iso_8601": "2018-01-05T14:30:49.962362Z", "url": "https://files.pythonhosted.org/packages/7d/29/a9d09717ef4a64b8fe65446bcc1173766c0f1a5d9dbb45ae4a17e2ecdd88/aiostream-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "7386ec39fc1aeaa55f0e61c0addb15fa", "sha256": "2f7be31c02789975269d91c5fa5764661fae9562682e29630b964f5f83383e2e"}, "downloads": -1, "filename": "aiostream-0.3.1.tar.gz", "has_sig": false, "md5_digest": "7386ec39fc1aeaa55f0e61c0addb15fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20185, "upload_time": "2018-08-09T12:57:53", "upload_time_iso_8601": "2018-08-09T12:57:53.893113Z", "url": "https://files.pythonhosted.org/packages/8b/01/9084398426ac37cec00489da621885dab07f84ce342345f90380b7087926/aiostream-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "193362daaf9ca0dd9e89896be9167817", "sha256": "cd20f5b474b05e874ae8640630162a55beaa8be8a467ef5f3da74092ea085249"}, "downloads": -1, "filename": "aiostream-0.3.2.tar.gz", "has_sig": false, "md5_digest": "193362daaf9ca0dd9e89896be9167817", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18787, "upload_time": "2019-08-01T14:59:37", "upload_time_iso_8601": "2019-08-01T14:59:37.353992Z", "url": "https://files.pythonhosted.org/packages/b1/8b/a8bd71c931c424d37a6336fd7a2df4c6b9432847c9752b7809f0e1d9aa7e/aiostream-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "4d0a5580aa29053f6ba628fbfc81e44c", "sha256": "6affc218f5b7dd8ef4a3ce33240fe5d46f326947d9d453d2db10c8061c13f676"}, "downloads": -1, "filename": "aiostream-0.3.3.tar.gz", "has_sig": false, "md5_digest": "4d0a5580aa29053f6ba628fbfc81e44c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18806, "upload_time": "2019-08-27T16:47:39", "upload_time_iso_8601": "2019-08-27T16:47:39.976055Z", "url": "https://files.pythonhosted.org/packages/e1/06/250fa4e6700b73ec7e8e1860e02382560be8414672e1be266d62696150c5/aiostream-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "c4506d49ed3c82f10390fad37e0a33a9", "sha256": "546657bb573cc89ea92dd00fa99ed53e2ee6fcd8daf2f97ef374f07e0cd15bfa"}, "downloads": -1, "filename": "aiostream-0.4.0.tar.gz", "has_sig": false, "md5_digest": "c4506d49ed3c82f10390fad37e0a33a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19170, "upload_time": "2019-10-04T14:07:41", "upload_time_iso_8601": "2019-10-04T14:07:41.932101Z", "url": "https://files.pythonhosted.org/packages/11/93/f8a6f4a875a58d09d568a7084c6c51d185687e47a4b0d58a42e35aa73a9d/aiostream-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "7c41ecbc4111c925c3aec3175c47631f", "sha256": "9055e772f197dc0c1bd3a757edd20b086bc74b257ceb7d690cb3d72b8b70d69a"}, "downloads": -1, "filename": "aiostream-0.4.1.tar.gz", "has_sig": false, "md5_digest": "7c41ecbc4111c925c3aec3175c47631f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20086, "upload_time": "2020-02-22T17:33:01", "upload_time_iso_8601": "2020-02-22T17:33:01.230797Z", "url": "https://files.pythonhosted.org/packages/1a/65/8d77574841accaa0dfbe31afeb2737e57a2bc44ff446639791c95fff1656/aiostream-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7c41ecbc4111c925c3aec3175c47631f", "sha256": "9055e772f197dc0c1bd3a757edd20b086bc74b257ceb7d690cb3d72b8b70d69a"}, "downloads": -1, "filename": "aiostream-0.4.1.tar.gz", "has_sig": false, "md5_digest": "7c41ecbc4111c925c3aec3175c47631f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20086, "upload_time": "2020-02-22T17:33:01", "upload_time_iso_8601": "2020-02-22T17:33:01.230797Z", "url": "https://files.pythonhosted.org/packages/1a/65/8d77574841accaa0dfbe31afeb2737e57a2bc44ff446639791c95fff1656/aiostream-0.4.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:44 2020"}