{"info": {"author": "Jonathan ULLINDAH", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "flask-restful-swagger-3\n=======================\n\nWhat is flask-restful-swagger-3?\n--------------------------------\n\nflask-restful-swagger-3 is a wrapper for\n`flask-restful <http://flask-restful.readthedocs.org/en/latest/>`__\nwhich enables `swagger3 <http://swagger.io/>`__ support according to the\n`openapi 3.0.0 specification <https://swagger.io/specification/>`__.\n\nThis project is based on\n`flask-restful-swagger-2 <https://github.com/soerface/flask-restful-swagger-2.0>`__,\nbut it only supported swagger 2.0.\n\nGetting started\n---------------\n\nInstall:\n\n::\n\n    pip install flask-restful-swagger-3\n\nTo use it, change your import from ``from flask_restful import Api`` to\n``from flask_restful_swagger_3 import Api``.\n\n.. code:: python\n\n    from flask import Flask\n    # Instead of using this: from flask_restful import Api\n    # Use this:\n    from flask_restful_swagger_3 import Api\n\n    app = Flask(__name__)\n\n    # Use the swagger Api class as you would use the flask restful class.\n    # It supports several (optional) parameters, these are the defaults:\n    api = Api(app, version='0.0', api_spec_url='/api/swagger')\n\nThe Api class supports the following parameters:\n\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Parameter                   | Description                                                                                                                                                                                                                                                                                                                                                                                                              |\n+=============================+==========================================================================================================================================================================================================================================================================================================================================================================================================================+\n| ``add_api_spec_resource``   | Set to ``True`` to add an endpoint to serve the swagger specification (defaults to ``True``).                                                                                                                                                                                                                                                                                                                            |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``version``                 | The API version string (defaults to '0.0'). Maps to the ``version`` field of the `info object <http://swagger.io/specification/#infoObject>`__.                                                                                                                                                                                                                                                                          |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``api_spec_base``           | Instead of specifying individual swagger fields, you can pass in a minimal `OpenAPI Object <http://swagger.io/specification/#openapiObject>`__ to use as a template. Note that parameters specified explicity will overwrite the values in this template.                                                                                                                                                                |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``api_spec_url``            | The URL path that serves the swagger specification document (defaults to ``/api/swagger``). The path is appended with ``.json`` and ``.html`` (i.e. ``/api/swagger.json`` and ``/api/swagger.html``).                                                                                                                                                                                                                    |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``servers``                 | The server on which the API is served, it replaces ``schemes``, ``host`` and ``base_path`` `server object <http://swagger.io/specification/#serverObject>`__.                                                                                                                                                                                                                                                            |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``schemas``                 | The Schema Object allows the definition of input and output data types. Maps to the ```schema`` <http://swagger.io/specification/#schemaObject>`__                                                                                                                                                                                                                                                                       |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``content``                 | A list of MIME types the API can consume. Maps to the ```contents`` <http://swagger.io/specification/#contentObject>`__ field of the `components <http://swagger.io/specification/#componentObject>`__.                                                                                                                                                                                                                  |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``contact``                 | The contact information for the API. Maps to the ``contact`` field of the `info object <http://swagger.io/specification/#infoObject>`__.                                                                                                                                                                                                                                                                                 |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``description``             | A short description of the application. Maps to the ``description`` field of the `info object <http://swagger.io/specification/#infoObject>`__.                                                                                                                                                                                                                                                                          |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``external_docs``           | Additional external documentation. Maps to the ``externalDocs`` field of the `operation object <http://swagger.io/specification/#operationObject>`__.                                                                                                                                                                                                                                                                    |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``license``                 | The license information for the API. Maps to the ``license`` field of the `info object <http://swagger.io/specification/#infoObject>`__.                                                                                                                                                                                                                                                                                 |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``parameters``              | The parameters that can be used across operations. Maps to the ``parameters`` field of the `operation object <http://swagger.io/specification/#operationObject>`__.                                                                                                                                                                                                                                                      |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``responses``               | The responses that can be used across operations. Maps to the ``responses`` field of the `operation object <http://swagger.io/specification/#operationObject>`__.                                                                                                                                                                                                                                                        |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``security``                | A declaration of which security mechanisms can be used across the API. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a request. Individual operations can override this definition. Maps to the ``security`` field of the `OpenAPI Object <http://swagger.io/specification/#openapiObject>`__.   |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``securitySchemes``         | The security schemes for the API. Maps to the ``securitySchemes`` field of the `component object <http://swagger.io/specification/#componentsObject>`__.                                                                                                                                                                                                                                                                 |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``tags``                    | A list of tags used by the specification with additional metadata. Maps to the ``tags`` field fo the `OpenAPI Object <http://swagger.io/specification/#openapiObject>`__.                                                                                                                                                                                                                                                |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``terms``                   | The terms of service for the API. Maps to the ``termsOfService`` field of the `info object <http://swagger.io/specification/#infoObject>`__.                                                                                                                                                                                                                                                                             |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``title``                   | The title of the application (defaults to the flask app module name). Maps to the ``title`` field of the `info object <http://swagger.io/specification/#infoObject>`__.                                                                                                                                                                                                                                                  |\n+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\nDocumenting API endpoints\n-------------------------\n\nDecorate your API endpoints with ``@swagger.doc``. It takes a dictionary\nin the format of an `operation\nobject <http://swagger.io/specification/#operationObject>`__.\n\n.. code:: python\n\n    class UserItemResource(Resource):\n        @swagger.doc({\n            'tags': ['user'],\n            'description': 'Returns a user',\n            'parameters': [\n                {\n                    'name': 'user_id',\n                    'description': 'User identifier',\n                    'in': 'path',\n                    'schema': {\n                        'type': 'integer'\n                    }\n                }\n            ],\n            'responses': {\n                '200': {\n                    'description': 'User',\n                    'content': {\n                        'application/json': {\n                            'schema': UserModel,\n                            'examples': {\n                                'application/json': {\n                                    'id': 1,\n                                    'name': 'somebody'\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n         })\n        def get(self, user_id):\n            # Do some processing\n            return UserModel(id=1, name='somebody'}), 200  # generates json response {\"id\": 1, \"name\": \"somebody\"}\n\nUse add\\_resource as usual.\n\n.. code:: python\n\n    api.add_resource(UserItemResource, '/api/users/<int:user_id>')\n\nParsing query parameters\n------------------------\n\nIf a resource function contains the special argument ``_parser``, any\n``query`` type parameters in the documentation will be automatically\nadded to a reqparse parser and assigned to the ``_parser`` argument.\n\nUsing models\n------------\n\nCreate a model by inheriting from ``flask_restful_swagger_3.Schema``\n\n.. code:: python\n\n    from flask_restful_swagger_2 import Schema\n\n\n    class EmailModel(Schema):\n        type = 'string'\n        format = 'email'\n\n\n    class KeysModel(Schema):\n        type = 'object'\n        properties = {\n            'name': {\n                'type': 'string'\n            }\n        }\n\n\n    class UserModel(Schema):\n        type = 'object'\n        properties = {\n            'id': {\n                'type': 'integer',\n                'format': 'int64',\n            },\n            'name': {\n                'type': 'string'\n            },\n            'mail': EmailModel,\n            'keys': KeysModel.array()\n        }\n        required = ['name']\n\nYou can build your models according to the `swagger schema object\nspecification <http://swagger.io/specification/#schemaObject>`__\n\nIt is recommended that you always return a model in your views so that\nyour code and documentation are in sync.\n\nRequestParser support\n---------------------\n\nYou can specify RequestParser object if you want to pass its arguments\nto spec. In such case, there is not need to define model manually\n\n.. code:: python\n\n    from flask_restful.reqparse import RequestParser\n\n    from flask_restful_swagger_2 import swagger, Resource\n\n\n    class GroupResource(Resource):\n        post_parser = RequestParser()\n        post_parser.add_argument('name', type=str, required=True)\n        post_parser.add_argument('id', type=int, help='Id of new group')\n        @swagger.doc({\n            'tags': ['groups'],\n            'description': 'Adds a group',\n            'reqparser': {'name': 'group parser',\n                          'parser': post_parser},\n            'responses': {\n                '201': {\n                    'description': 'Created group',\n                    'content': {\n                        'application/json': {\n                            'examples': {\n                                'application/json': {\n                                    'id': 1\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        def post(self):\n        ...\n\nSwagger schema (among other things):\n\n.. code:: json\n\n    {\"GroupsModel\": {\n        \"properties\": {\n            \"id\": {\n                \"default\": null,\n                \"description\": \"Id of new group\",\n                \"name\": \"id\",\n                \"required\": false,\n                \"type\": \"integer\"\n                },\n            \"name\": {\n                \"default\": null,\n                \"description\": null,\n                \"name\": \"name\",\n                \"required\": true,\n                \"type\": \"string\"\n            }\n        },\n        \"type\": \"object\"\n    }\n\nUsing authentication\n--------------------\n\nIn the example above, the view ``UserItemResource`` is a subclass of\n``Resource``, which is provided by ``flask_restful``. However,\n``flask_restful_swagger_3`` provides a thin wrapper around ``Resource``\nto provide authentication. By using this, you can not only prevent\naccess to resources, but also hide the documentation depending on the\nprovided ``api_key``.\n\nExample:\n\n.. code:: python\n\n    # Import Api and Resource instead from flask_restful_swagger_2\n    from flask_restful_swagger_3 import Api, swagger, Resource\n\n    api = Api(app)\n    def auth(api_key, endpoint, method):\n        # Space for your fancy authentication. Return True if access is granted, otherwise False\n        # api_key is extracted from the url parameters (?api_key=foo)\n        # endpoint is the full swagger url (e.g. /some/{value}/endpoint)\n        # method is the HTTP method\n        return True\n\n    swagger.auth = auth\n\n    class MyView(Resource):\n        @swagger.doc({\n        # documentation...\n        })\n        def get(self):\n            return SomeModel(value=5)\n\n    api.add_resource(MyView, '/some/endpoint')\n\nSpecification document\n----------------------\n\nThe ``get_swagger_doc`` method of the Api instance returns the\nspecification document object, which may be useful for integration with\nother tools for generating formatted output or client code.\n\nUsing Flask Blueprints\n----------------------\n\nTo use Flask Blueprints, create a function in your views module that\ncreates the blueprint, registers the resources and returns it wrapped in\nan Api instance:\n\n.. code:: python\n\n    from flask import Blueprint, request\n    from flask_restful_swagger_3 import Api, swagger, Resource\n\n    class UserResource(Resource):\n    ...\n\n    class UserItemResource(Resource):\n    ...\n\n    def get_user_resources():\n        \"\"\"\n        Returns user resources.\n        :param app: The Flask instance\n        :return: User resources\n        \"\"\"\n        blueprint = Blueprint('user', __name__)\n\n        api = Api(blueprint, add_api_spec_resource=False)\n\n        api.add_resource(UserResource, '/api/users')\n        api.add_resource(UserItemResource, '/api/users/<int:user_id>')\n\n        return api\n\nIn your initialization module, collect the swagger document objects for\neach set of resources, then use the ``get_swagger_blueprint`` function\nto combine the documents and specify the URL to serve them at (default\nis '/api/doc/swagger'). Note that the ``get_swagger_blueprint`` function\naccepts the same keyword parameters as the ``Api`` class to populate the\nfields of the combined swagger document. Finally, register the swagger\nblueprint along with the blueprints for your resources.\n\n.. code:: python\n\n    from flask_restful_swagger_3 import get_swagger_blueprint\n\n    ...\n\n    # A list of swagger document objects\n    docs = []\n\n    # Get user resources\n    user_resources = get_user_resources()\n\n    # Retrieve and save the swagger document object (do this for each set of resources).\n    docs.append(user_resources.get_swagger_doc())\n\n    # Register the blueprint for user resources\n    app.register_blueprint(user_resources.blueprint)\n\n    # Prepare a blueprint to serve the combined list of swagger document objects and register it\n    app.register_blueprint(get_swagger_blueprint(docs, '/api/doc/swagger', title='Example', api_version='1'))\n\nRefer to the files in the ``example`` folder for the complete code.\n\nRunning and testing\n-------------------\n\nTo run the example project in the ``example`` folder:\n\n::\n\n    pip install flask-restful-swagger-3\n    pip install flask-cors    # needed to access spec from swagger-ui\n    python app.py\n\nTo run the example which uses Flask Blueprints:\n\n::\n\n    python app_blueprint.py\n\nThe swagger spec will by default be at\n``http://localhost:5000/api/doc/swagger.json``. You can change the URL\nby passing ``api_spec_url='/my/path'`` to the ``Api`` constructor. You\ncan use `swagger-ui <https://github.com/swagger-api/swagger-ui>`__ to\nexplore your api. Try it online at\n`http://petstore.swagger.io/ <http://petstore.swagger.io/?url=http://localhost:5000/api/swagger.json>`__\n\nTo run tests:\n\n::\n\n    pip install tox # needed to run pytest\n    tox", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/john-ull/framework/flask-restful-swagger-3", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flask-restful-swagger-3", "package_url": "https://pypi.org/project/flask-restful-swagger-3/", "platform": "", "project_url": "https://pypi.org/project/flask-restful-swagger-3/", "project_urls": {"Homepage": "https://gitlab.com/john-ull/framework/flask-restful-swagger-3"}, "release_url": "https://pypi.org/project/flask-restful-swagger-3/0.1/", "requires_dist": null, "requires_python": "", "summary": "Extract swagger specs from your flask-restful project. Project based on flask-restful-swagger-2 by Soeren Wegener.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-is-flask-restful-swagger-3\">\n<h2>What is flask-restful-swagger-3?</h2>\n<p>flask-restful-swagger-3 is a wrapper for\n<a href=\"http://flask-restful.readthedocs.org/en/latest/\" rel=\"nofollow\">flask-restful</a>\nwhich enables <a href=\"http://swagger.io/\" rel=\"nofollow\">swagger3</a> support according to the\n<a href=\"https://swagger.io/specification/\" rel=\"nofollow\">openapi 3.0.0 specification</a>.</p>\n<p>This project is based on\n<a href=\"https://github.com/soerface/flask-restful-swagger-2.0\" rel=\"nofollow\">flask-restful-swagger-2</a>,\nbut it only supported swagger 2.0.</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p>Install:</p>\n<pre>pip install flask-restful-swagger-3\n</pre>\n<p>To use it, change your import from <tt>from flask_restful import Api</tt> to\n<tt>from flask_restful_swagger_3 import Api</tt>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"c1\"># Instead of using this: from flask_restful import Api</span>\n<span class=\"c1\"># Use this:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_restful_swagger_3</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Use the swagger Api class as you would use the flask restful class.</span>\n<span class=\"c1\"># It supports several (optional) parameters, these are the defaults:</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s1\">'0.0'</span><span class=\"p\">,</span> <span class=\"n\">api_spec_url</span><span class=\"o\">=</span><span class=\"s1\">'/api/swagger'</span><span class=\"p\">)</span>\n</pre>\n<p>The Api class supports the following parameters:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Parameter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>add_api_spec_resource</tt></td>\n<td>Set to <tt>True</tt> to add an endpoint to serve the swagger specification (defaults to <tt>True</tt>).</td>\n</tr>\n<tr><td><tt>version</tt></td>\n<td>The API version string (defaults to \u20180.0\u2019). Maps to the <tt>version</tt> field of the <a href=\"http://swagger.io/specification/#infoObject\" rel=\"nofollow\">info object</a>.</td>\n</tr>\n<tr><td><tt>api_spec_base</tt></td>\n<td>Instead of specifying individual swagger fields, you can pass in a minimal <a href=\"http://swagger.io/specification/#openapiObject\" rel=\"nofollow\">OpenAPI Object</a> to use as a template. Note that parameters specified explicity will overwrite the values in this template.</td>\n</tr>\n<tr><td><tt>api_spec_url</tt></td>\n<td>The URL path that serves the swagger specification document (defaults to <tt>/api/swagger</tt>). The path is appended with <tt>.json</tt> and <tt>.html</tt> (i.e. <tt>/api/swagger.json</tt> and <tt>/api/swagger.html</tt>).</td>\n</tr>\n<tr><td><tt>servers</tt></td>\n<td>The server on which the API is served, it replaces <tt>schemes</tt>, <tt>host</tt> and <tt>base_path</tt> <a href=\"http://swagger.io/specification/#serverObject\" rel=\"nofollow\">server object</a>.</td>\n</tr>\n<tr><td><tt>schemas</tt></td>\n<td>The Schema Object allows the definition of input and output data types. Maps to the <tt>`schema</tt> &lt;<a href=\"http://swagger.io/specification/#schemaObject\" rel=\"nofollow\">http://swagger.io/specification/#schemaObject</a>&gt;`__</td>\n</tr>\n<tr><td><tt>content</tt></td>\n<td>A list of MIME types the API can consume. Maps to the <tt>`contents</tt> &lt;<a href=\"http://swagger.io/specification/#contentObject\" rel=\"nofollow\">http://swagger.io/specification/#contentObject</a>&gt;`__ field of the <a href=\"http://swagger.io/specification/#componentObject\" rel=\"nofollow\">components</a>.</td>\n</tr>\n<tr><td><tt>contact</tt></td>\n<td>The contact information for the API. Maps to the <tt>contact</tt> field of the <a href=\"http://swagger.io/specification/#infoObject\" rel=\"nofollow\">info object</a>.</td>\n</tr>\n<tr><td><tt>description</tt></td>\n<td>A short description of the application. Maps to the <tt>description</tt> field of the <a href=\"http://swagger.io/specification/#infoObject\" rel=\"nofollow\">info object</a>.</td>\n</tr>\n<tr><td><tt>external_docs</tt></td>\n<td>Additional external documentation. Maps to the <tt>externalDocs</tt> field of the <a href=\"http://swagger.io/specification/#operationObject\" rel=\"nofollow\">operation object</a>.</td>\n</tr>\n<tr><td><tt>license</tt></td>\n<td>The license information for the API. Maps to the <tt>license</tt> field of the <a href=\"http://swagger.io/specification/#infoObject\" rel=\"nofollow\">info object</a>.</td>\n</tr>\n<tr><td><tt>parameters</tt></td>\n<td>The parameters that can be used across operations. Maps to the <tt>parameters</tt> field of the <a href=\"http://swagger.io/specification/#operationObject\" rel=\"nofollow\">operation object</a>.</td>\n</tr>\n<tr><td><tt>responses</tt></td>\n<td>The responses that can be used across operations. Maps to the <tt>responses</tt> field of the <a href=\"http://swagger.io/specification/#operationObject\" rel=\"nofollow\">operation object</a>.</td>\n</tr>\n<tr><td><tt>security</tt></td>\n<td>A declaration of which security mechanisms can be used across the API. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a request. Individual operations can override this definition. Maps to the <tt>security</tt> field of the <a href=\"http://swagger.io/specification/#openapiObject\" rel=\"nofollow\">OpenAPI Object</a>.</td>\n</tr>\n<tr><td><tt>securitySchemes</tt></td>\n<td>The security schemes for the API. Maps to the <tt>securitySchemes</tt> field of the <a href=\"http://swagger.io/specification/#componentsObject\" rel=\"nofollow\">component object</a>.</td>\n</tr>\n<tr><td><tt>tags</tt></td>\n<td>A list of tags used by the specification with additional metadata. Maps to the <tt>tags</tt> field fo the <a href=\"http://swagger.io/specification/#openapiObject\" rel=\"nofollow\">OpenAPI Object</a>.</td>\n</tr>\n<tr><td><tt>terms</tt></td>\n<td>The terms of service for the API. Maps to the <tt>termsOfService</tt> field of the <a href=\"http://swagger.io/specification/#infoObject\" rel=\"nofollow\">info object</a>.</td>\n</tr>\n<tr><td><tt>title</tt></td>\n<td>The title of the application (defaults to the flask app module name). Maps to the <tt>title</tt> field of the <a href=\"http://swagger.io/specification/#infoObject\" rel=\"nofollow\">info object</a>.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"documenting-api-endpoints\">\n<h2>Documenting API endpoints</h2>\n<p>Decorate your API endpoints with <tt>@swagger.doc</tt>. It takes a dictionary\nin the format of an <a href=\"http://swagger.io/specification/#operationObject\" rel=\"nofollow\">operation\nobject</a>.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">UserItemResource</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"nd\">@swagger</span><span class=\"o\">.</span><span class=\"n\">doc</span><span class=\"p\">({</span>\n        <span class=\"s1\">'tags'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'user'</span><span class=\"p\">],</span>\n        <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'Returns a user'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'parameters'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'user_id'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'User identifier'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'in'</span><span class=\"p\">:</span> <span class=\"s1\">'path'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'schema'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'integer'</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">],</span>\n        <span class=\"s1\">'responses'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'200'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'User'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'content'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">'application/json'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s1\">'schema'</span><span class=\"p\">:</span> <span class=\"n\">UserModel</span><span class=\"p\">,</span>\n                        <span class=\"s1\">'examples'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                            <span class=\"s1\">'application/json'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                                <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                                <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'somebody'</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n     <span class=\"p\">})</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user_id</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Do some processing</span>\n        <span class=\"k\">return</span> <span class=\"n\">UserModel</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'somebody'</span><span class=\"p\">}),</span> <span class=\"mi\">200</span>  <span class=\"c1\"># generates json response {\"id\": 1, \"name\": \"somebody\"}</span>\n</pre>\n<p>Use add_resource as usual.</p>\n<pre><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">UserItemResource</span><span class=\"p\">,</span> <span class=\"s1\">'/api/users/&lt;int:user_id&gt;'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"parsing-query-parameters\">\n<h2>Parsing query parameters</h2>\n<p>If a resource function contains the special argument <tt>_parser</tt>, any\n<tt>query</tt> type parameters in the documentation will be automatically\nadded to a reqparse parser and assigned to the <tt>_parser</tt> argument.</p>\n</div>\n<div id=\"using-models\">\n<h2>Using models</h2>\n<p>Create a model by inheriting from <tt>flask_restful_swagger_3.Schema</tt></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask_restful_swagger_2</span> <span class=\"kn\">import</span> <span class=\"n\">Schema</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">EmailModel</span><span class=\"p\">(</span><span class=\"n\">Schema</span><span class=\"p\">):</span>\n    <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s1\">'string'</span>\n    <span class=\"nb\">format</span> <span class=\"o\">=</span> <span class=\"s1\">'email'</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeysModel</span><span class=\"p\">(</span><span class=\"n\">Schema</span><span class=\"p\">):</span>\n    <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s1\">'object'</span>\n    <span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UserModel</span><span class=\"p\">(</span><span class=\"n\">Schema</span><span class=\"p\">):</span>\n    <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s1\">'object'</span>\n    <span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'integer'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'format'</span><span class=\"p\">:</span> <span class=\"s1\">'int64'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'mail'</span><span class=\"p\">:</span> <span class=\"n\">EmailModel</span><span class=\"p\">,</span>\n        <span class=\"s1\">'keys'</span><span class=\"p\">:</span> <span class=\"n\">KeysModel</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span>\n</pre>\n<p>You can build your models according to the <a href=\"http://swagger.io/specification/#schemaObject\" rel=\"nofollow\">swagger schema object\nspecification</a></p>\n<p>It is recommended that you always return a model in your views so that\nyour code and documentation are in sync.</p>\n</div>\n<div id=\"requestparser-support\">\n<h2>RequestParser support</h2>\n<p>You can specify RequestParser object if you want to pass its arguments\nto spec. In such case, there is not need to define model manually</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask_restful.reqparse</span> <span class=\"kn\">import</span> <span class=\"n\">RequestParser</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">flask_restful_swagger_2</span> <span class=\"kn\">import</span> <span class=\"n\">swagger</span><span class=\"p\">,</span> <span class=\"n\">Resource</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">GroupResource</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"n\">post_parser</span> <span class=\"o\">=</span> <span class=\"n\">RequestParser</span><span class=\"p\">()</span>\n    <span class=\"n\">post_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">post_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s1\">'Id of new group'</span><span class=\"p\">)</span>\n    <span class=\"nd\">@swagger</span><span class=\"o\">.</span><span class=\"n\">doc</span><span class=\"p\">({</span>\n        <span class=\"s1\">'tags'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'groups'</span><span class=\"p\">],</span>\n        <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'Adds a group'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'reqparser'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'group parser'</span><span class=\"p\">,</span>\n                      <span class=\"s1\">'parser'</span><span class=\"p\">:</span> <span class=\"n\">post_parser</span><span class=\"p\">},</span>\n        <span class=\"s1\">'responses'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'201'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'Created group'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'content'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">'application/json'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s1\">'examples'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                            <span class=\"s1\">'application/json'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                                <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">})</span>\n    <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>Swagger schema (among other things):</p>\n<pre><span class=\"p\">{</span><span class=\"nt\">\"GroupsModel\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"default\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Id of new group\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"id\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"required\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"integer\"</span>\n            <span class=\"p\">},</span>\n        <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"default\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"description\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"name\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"required\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"using-authentication\">\n<h2>Using authentication</h2>\n<p>In the example above, the view <tt>UserItemResource</tt> is a subclass of\n<tt>Resource</tt>, which is provided by <tt>flask_restful</tt>. However,\n<tt>flask_restful_swagger_3</tt> provides a thin wrapper around <tt>Resource</tt>\nto provide authentication. By using this, you can not only prevent\naccess to resources, but also hide the documentation depending on the\nprovided <tt>api_key</tt>.</p>\n<p>Example:</p>\n<pre><span class=\"c1\"># Import Api and Resource instead from flask_restful_swagger_2</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_restful_swagger_3</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">swagger</span><span class=\"p\">,</span> <span class=\"n\">Resource</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">auth</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Space for your fancy authentication. Return True if access is granted, otherwise False</span>\n    <span class=\"c1\"># api_key is extracted from the url parameters (?api_key=foo)</span>\n    <span class=\"c1\"># endpoint is the full swagger url (e.g. /some/{value}/endpoint)</span>\n    <span class=\"c1\"># method is the HTTP method</span>\n    <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n<span class=\"n\">swagger</span><span class=\"o\">.</span><span class=\"n\">auth</span> <span class=\"o\">=</span> <span class=\"n\">auth</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyView</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"nd\">@swagger</span><span class=\"o\">.</span><span class=\"n\">doc</span><span class=\"p\">({</span>\n    <span class=\"c1\"># documentation...</span>\n    <span class=\"p\">})</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">SomeModel</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">MyView</span><span class=\"p\">,</span> <span class=\"s1\">'/some/endpoint'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"specification-document\">\n<h2>Specification document</h2>\n<p>The <tt>get_swagger_doc</tt> method of the Api instance returns the\nspecification document object, which may be useful for integration with\nother tools for generating formatted output or client code.</p>\n</div>\n<div id=\"using-flask-blueprints\">\n<h2>Using Flask Blueprints</h2>\n<p>To use Flask Blueprints, create a function in your views module that\ncreates the blueprint, registers the resources and returns it wrapped in\nan Api instance:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Blueprint</span><span class=\"p\">,</span> <span class=\"n\">request</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_restful_swagger_3</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span><span class=\"p\">,</span> <span class=\"n\">swagger</span><span class=\"p\">,</span> <span class=\"n\">Resource</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UserResource</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UserItemResource</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_user_resources</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"\n    Returns user resources.\n    :param app: The Flask instance\n    :return: User resources\n    \"\"\"</span>\n    <span class=\"n\">blueprint</span> <span class=\"o\">=</span> <span class=\"n\">Blueprint</span><span class=\"p\">(</span><span class=\"s1\">'user'</span><span class=\"p\">,</span> <span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n    <span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">blueprint</span><span class=\"p\">,</span> <span class=\"n\">add_api_spec_resource</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">UserResource</span><span class=\"p\">,</span> <span class=\"s1\">'/api/users'</span><span class=\"p\">)</span>\n    <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">UserItemResource</span><span class=\"p\">,</span> <span class=\"s1\">'/api/users/&lt;int:user_id&gt;'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">api</span>\n</pre>\n<p>In your initialization module, collect the swagger document objects for\neach set of resources, then use the <tt>get_swagger_blueprint</tt> function\nto combine the documents and specify the URL to serve them at (default\nis \u2018/api/doc/swagger\u2019). Note that the <tt>get_swagger_blueprint</tt> function\naccepts the same keyword parameters as the <tt>Api</tt> class to populate the\nfields of the combined swagger document. Finally, register the swagger\nblueprint along with the blueprints for your resources.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask_restful_swagger_3</span> <span class=\"kn\">import</span> <span class=\"n\">get_swagger_blueprint</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"c1\"># A list of swagger document objects</span>\n<span class=\"n\">docs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"c1\"># Get user resources</span>\n<span class=\"n\">user_resources</span> <span class=\"o\">=</span> <span class=\"n\">get_user_resources</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Retrieve and save the swagger document object (do this for each set of resources).</span>\n<span class=\"n\">docs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">user_resources</span><span class=\"o\">.</span><span class=\"n\">get_swagger_doc</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># Register the blueprint for user resources</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">register_blueprint</span><span class=\"p\">(</span><span class=\"n\">user_resources</span><span class=\"o\">.</span><span class=\"n\">blueprint</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prepare a blueprint to serve the combined list of swagger document objects and register it</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">register_blueprint</span><span class=\"p\">(</span><span class=\"n\">get_swagger_blueprint</span><span class=\"p\">(</span><span class=\"n\">docs</span><span class=\"p\">,</span> <span class=\"s1\">'/api/doc/swagger'</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'Example'</span><span class=\"p\">,</span> <span class=\"n\">api_version</span><span class=\"o\">=</span><span class=\"s1\">'1'</span><span class=\"p\">))</span>\n</pre>\n<p>Refer to the files in the <tt>example</tt> folder for the complete code.</p>\n</div>\n<div id=\"running-and-testing\">\n<h2>Running and testing</h2>\n<p>To run the example project in the <tt>example</tt> folder:</p>\n<pre>pip install flask-restful-swagger-3\npip install flask-cors    # needed to access spec from swagger-ui\npython app.py\n</pre>\n<p>To run the example which uses Flask Blueprints:</p>\n<pre>python app_blueprint.py\n</pre>\n<p>The swagger spec will by default be at\n<tt><span class=\"pre\">http://localhost:5000/api/doc/swagger.json</span></tt>. You can change the URL\nby passing <tt><span class=\"pre\">api_spec_url='/my/path'</span></tt> to the <tt>Api</tt> constructor. You\ncan use <a href=\"https://github.com/swagger-api/swagger-ui\" rel=\"nofollow\">swagger-ui</a> to\nexplore your api. Try it online at\n<a href=\"http://petstore.swagger.io/?url=http://localhost:5000/api/swagger.json\" rel=\"nofollow\">http://petstore.swagger.io/</a></p>\n<p>To run tests:</p>\n<pre>pip install tox # needed to run pytest\ntox\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6280612, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b3e177d800514dea243a1e39a68ddd3b", "sha256": "1f889743f341062dbb8ee243f4ab49ca219fb7ce5565dd133c3b601e7539e4ab"}, "downloads": -1, "filename": "flask-restful-swagger-3-0.1.tar.gz", "has_sig": false, "md5_digest": "b3e177d800514dea243a1e39a68ddd3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20822, "upload_time": "2019-12-11T19:29:26", "upload_time_iso_8601": "2019-12-11T19:29:26.150813Z", "url": "https://files.pythonhosted.org/packages/d2/bc/8eb211dc77226f23cb1acda7bbe1d8292f7d7bf00dc68665fdc66de15292/flask-restful-swagger-3-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b3e177d800514dea243a1e39a68ddd3b", "sha256": "1f889743f341062dbb8ee243f4ab49ca219fb7ce5565dd133c3b601e7539e4ab"}, "downloads": -1, "filename": "flask-restful-swagger-3-0.1.tar.gz", "has_sig": false, "md5_digest": "b3e177d800514dea243a1e39a68ddd3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20822, "upload_time": "2019-12-11T19:29:26", "upload_time_iso_8601": "2019-12-11T19:29:26.150813Z", "url": "https://files.pythonhosted.org/packages/d2/bc/8eb211dc77226f23cb1acda7bbe1d8292f7d7bf00dc68665fdc66de15292/flask-restful-swagger-3-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:25 2020"}