{"info": {"author": "xinyang zhou", "author_email": "308885823@qq.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation", "Topic :: Software Development :: Libraries"], "description": "### Project description\n\nDailylog is a utility for recording daily logs on your own word.  \n\nYou can easily master its usage through this document.\n\n### Why should I use dailylog?\n\nThe goal of dailylog is to provide a simple way to create daily-log files. In the build-in modules **logging**, \nwhich has to config the date and log format, besides, if you want to devide the logs by day, you will need to create a \nTimedRotatingFileHandler.\n\nBut in the dailylog, we provide a simply way to handle the log files, you can flexibly record what you want, avoiding to \ntake some unimportant information, such as trackback, warning from the django, and so on. Also, the module can \nautomatically make daily-log files. \n\n### Installation\n\n`$pip install dailylog`\n\nnowadays we only provide linux wheel, if you are using Windows platform, you can download the source file and run the following command:\n\n`$python setup.py install`\n\n### Using dailylog\n\n1. import the module and create a filehandler:\n\n```\nimport dailylog\nfile_handler = dailylog.LogHandler()\n```\n\nwe provide three parameters for LogHandler:\n\n- date_format: as named, default is \"%Y-%m-%d--%H:%M:%S\"\n- log_dir: target folder to save the log files, default is \"./logs/\". if the folder does not exist, the system will create it automatically.\n- print_symbol: whether to print the message on the terminal. Default is **True**\n\n2. make different logs:\n\n```angular2html\nfile_handler.debug(some message)\nfile_handler.info(some message)\nfile_handler.warning(some message)\nfile_handler.error(some message)\n```\n\n3. show different logs:\n\n```angular2html\nfile_handler.show_debug(date)\nfile_handler.show_info(date)\nfile_handler.show_warning(date)\nfile_handler.show_error(date)\n```\n\nWhile will show the corresponding message of the date. The default date is *time.strftime('%Y-%m-%d', time.localtime(time.time()))*\uff0c\n which means today. \n\n### Github\n\nhttps://github.com/darkwhale/day_log\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/darkwhale/dailylog/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/darkwhale/dailylog", "keywords": "log,day", "license": "", "maintainer": "", "maintainer_email": "", "name": "dailylog", "package_url": "https://pypi.org/project/dailylog/", "platform": "", "project_url": "https://pypi.org/project/dailylog/", "project_urls": {"Download": "https://github.com/darkwhale/dailylog/archive/master.zip", "Homepage": "https://github.com/darkwhale/dailylog"}, "release_url": "https://pypi.org/project/dailylog/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "record logs per day", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h3>Project description</h3>\n<p>Dailylog is a utility for recording daily logs on your own word.</p>\n<p>You can easily master its usage through this document.</p>\n<h3>Why should I use dailylog?</h3>\n<p>The goal of dailylog is to provide a simple way to create daily-log files. In the build-in modules <strong>logging</strong>,\nwhich has to config the date and log format, besides, if you want to devide the logs by day, you will need to create a\nTimedRotatingFileHandler.</p>\n<p>But in the dailylog, we provide a simply way to handle the log files, you can flexibly record what you want, avoiding to\ntake some unimportant information, such as trackback, warning from the django, and so on. Also, the module can\nautomatically make daily-log files.</p>\n<h3>Installation</h3>\n<p><code>$pip install dailylog</code></p>\n<p>nowadays we only provide linux wheel, if you are using Windows platform, you can download the source file and run the following command:</p>\n<p><code>$python setup.py install</code></p>\n<h3>Using dailylog</h3>\n<ol>\n<li>import the module and create a filehandler:</li>\n</ol>\n<pre><code>import dailylog\nfile_handler = dailylog.LogHandler()\n</code></pre>\n<p>we provide three parameters for LogHandler:</p>\n<ul>\n<li>date_format: as named, default is \"%Y-%m-%d--%H:%M:%S\"</li>\n<li>log_dir: target folder to save the log files, default is \"./logs/\". if the folder does not exist, the system will create it automatically.</li>\n<li>print_symbol: whether to print the message on the terminal. Default is <strong>True</strong></li>\n</ul>\n<ol>\n<li>make different logs:</li>\n</ol>\n<pre>file_handler.debug(some message)\nfile_handler.info(some message)\nfile_handler.warning(some message)\nfile_handler.error(some message)\n</pre>\n<ol>\n<li>show different logs:</li>\n</ol>\n<pre>file_handler.show_debug(date)\nfile_handler.show_info(date)\nfile_handler.show_warning(date)\nfile_handler.show_error(date)\n</pre>\n<p>While will show the corresponding message of the date. The default date is <em>time.strftime('%Y-%m-%d', time.localtime(time.time()))</em>\uff0c\nwhich means today.</p>\n<h3>Github</h3>\n<p><a href=\"https://github.com/darkwhale/day_log\" rel=\"nofollow\">https://github.com/darkwhale/day_log</a></p>\n\n          </div>"}, "last_serial": 4541227, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "d81e5c28c979b751160accba9ee8dd57", "sha256": "1efa7cb91d958558bbe55528ee83718a67cb1ad69034f8bccb5c01e4ca5a5f75"}, "downloads": -1, "filename": "dailylog-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d81e5c28c979b751160accba9ee8dd57", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2622, "upload_time": "2018-11-28T10:56:20", "upload_time_iso_8601": "2018-11-28T10:56:20.800189Z", "url": "https://files.pythonhosted.org/packages/d6/58/1174c0306e3efc7013304cf274ef0ee9066e7a3c0fd7a83ea8c1db078509/dailylog-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20893afae1067e119b28c71c3ff0b7db", "sha256": "41497f2a3f72760d9aa68efea32868ea647dc946fe7df92169067b4b09c4f4f3"}, "downloads": -1, "filename": "dailylog-0.0.2.tar.gz", "has_sig": false, "md5_digest": "20893afae1067e119b28c71c3ff0b7db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2105, "upload_time": "2018-11-28T10:56:23", "upload_time_iso_8601": "2018-11-28T10:56:23.193240Z", "url": "https://files.pythonhosted.org/packages/80/bf/32cf2c5b24030f99a2809463691f3735eb6fd9b06a3ea3659792090b14e7/dailylog-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0565391d796d6b18660f30d5c1dbe074", "sha256": "ea97710b0889d3a509a15c5060243f7a734bf570bcb8a19363886d3758fafcd9"}, "downloads": -1, "filename": "dailylog-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0565391d796d6b18660f30d5c1dbe074", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4338, "upload_time": "2018-11-29T02:53:54", "upload_time_iso_8601": "2018-11-29T02:53:54.557079Z", "url": "https://files.pythonhosted.org/packages/cf/ba/2b4e86eeaf358f48c8bdaed6fb346ea7f52074b705d82dee4f113fb2d1c8/dailylog-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2aa578f468767eea0a76620596c0b36b", "sha256": "336acda21035d1acc45fdce82a650efa55686fe5de38557553893ba3ad175c4a"}, "downloads": -1, "filename": "dailylog-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2aa578f468767eea0a76620596c0b36b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3218, "upload_time": "2018-11-29T02:53:56", "upload_time_iso_8601": "2018-11-29T02:53:56.008437Z", "url": "https://files.pythonhosted.org/packages/ea/ed/7b68c944021e82e9f4294338c6030b98f737f1dc72a97511ed4e1a397e49/dailylog-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "9e279464ee7719e416ecb1d3af874ca4", "sha256": "4dad2dd83ca19b92812df6bd4235c70ce7a93a54ee2323284bd4d0bea51506cf"}, "downloads": -1, "filename": "dailylog-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9e279464ee7719e416ecb1d3af874ca4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4364, "upload_time": "2018-11-29T02:56:49", "upload_time_iso_8601": "2018-11-29T02:56:49.972317Z", "url": "https://files.pythonhosted.org/packages/48/7a/27799c9dae27141f882931d2947b70d7bbbc3909e1d260163c9584dacc23/dailylog-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3fc09183ad4568b00b36d0e261898157", "sha256": "90902489c5b67ff798ef0eb922037cfde016b5a57c38cce7915a765436248425"}, "downloads": -1, "filename": "dailylog-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3fc09183ad4568b00b36d0e261898157", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3245, "upload_time": "2018-11-29T02:56:51", "upload_time_iso_8601": "2018-11-29T02:56:51.414671Z", "url": "https://files.pythonhosted.org/packages/bc/a3/dfb76c2efb38179668c00e03dda785591f93fc7a9af50459542505be5e0c/dailylog-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9e279464ee7719e416ecb1d3af874ca4", "sha256": "4dad2dd83ca19b92812df6bd4235c70ce7a93a54ee2323284bd4d0bea51506cf"}, "downloads": -1, "filename": "dailylog-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9e279464ee7719e416ecb1d3af874ca4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4364, "upload_time": "2018-11-29T02:56:49", "upload_time_iso_8601": "2018-11-29T02:56:49.972317Z", "url": "https://files.pythonhosted.org/packages/48/7a/27799c9dae27141f882931d2947b70d7bbbc3909e1d260163c9584dacc23/dailylog-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3fc09183ad4568b00b36d0e261898157", "sha256": "90902489c5b67ff798ef0eb922037cfde016b5a57c38cce7915a765436248425"}, "downloads": -1, "filename": "dailylog-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3fc09183ad4568b00b36d0e261898157", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3245, "upload_time": "2018-11-29T02:56:51", "upload_time_iso_8601": "2018-11-29T02:56:51.414671Z", "url": "https://files.pythonhosted.org/packages/bc/a3/dfb76c2efb38179668c00e03dda785591f93fc7a9af50459542505be5e0c/dailylog-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:47 2020"}