{"info": {"author": "Steven Doyle", "author_email": "mesheb82@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "+--------------+-----------------------------------------------------------------------+-------------+--------------+\n| **Version**  | **Docs**                                                              | **Status**  | **Coverage** |\n+--------------+-----------------------------------------------------------------------+-------------+--------------+\n| |PyPi13|_    | `Docs <https://pynastran-git.readthedocs.io/en/1.3/>`_                | |Travis13|_ | |Codecov13|_ |\n+--------------+-----------------------------------------------------------------------+-------------+--------------+\n\n.. |PyPi13| image:: https://img.shields.io/pypi/v/pynastran.svg\n.. _PyPi13: https://pypi.python.org/pypi/pyNastran\n\n.. comments\n   #-----------------------------------------------------------------\n\n.. |Travis11| image:: https://img.shields.io/travis/SteveDoyle2/pyNastran/v1.1.svg\n.. _Travis13: https://travis-ci.org/SteveDoyle2/pyNastran\n\n.. |Travis12| image:: https://img.shields.io/travis/SteveDoyle2/pyNastran/1.2.svg\n.. _Travis12: https://travis-ci.org/SteveDoyle2/pyNastran\n\n.. |Travis13| image:: https://img.shields.io/travis/SteveDoyle2/pyNastran/1.3.svg\n.. _Travis13: https://travis-ci.org/SteveDoyle2/pyNastran\n\n.. |TravisMa| image:: https://img.shields.io/travis/SteveDoyle2/pyNastran/master.svg\n.. _TravisMa: https://travis-ci.org/SteveDoyle2/pyNastran\n\n.. comments\n   #-----------------------------------------------------------------\n\n.. |Codecov11| image:: https://img.shields.io/coveralls/SteveDoyle2/pyNastran/1.1.svg\n.. _Codecov11: https://coveralls.io/github/SteveDoyle2/pyNastran?branch=1.2\n\n.. |Codecov12| image:: https://img.shields.io/coveralls/SteveDoyle2/pyNastran/1.2.svg\n.. _Codecov12: https://coveralls.io/github/SteveDoyle2/pyNastran?branch=1.2\n\n.. |Codecov13| image:: https://codecov.io/gh/SteveDoyle2/pyNastran/branch/master/graph/badge.svg\n.. _Codecov13: https://codecov.io/gh/SteveDoyle2/pyNastran/branch/1.3\n\n.. |CodecovMa| image:: https://codecov.io/gh/SteveDoyle2/pyNastran/branch/master/graph/badge.svg\n.. _CodecovMa: https://codecov.io/gh/SteveDoyle2/pyNastran/branch/master\n\n.. comments\n   #-----------------------------------------------------------------\n\nv1.3.2\n------\n\n`Download GUI <https://sourceforge.net/projects/pynastran/files/?source=navbar>`_ (latest is from 2020/4/8)\n\nAlso, check out the:\n\n* `Discussion forum <http://groups.google.com/group/pynastran-discuss>`_ (questions about the latest release)\n\n* `Developer forum <http://groups.google.com/group/pynastran-dev>`_ (questions about the master branch)\n\n* `Docs <https://pynastran-git.readthedocs.io/en/1.3/>`_\n\nfor more detailed information.\n\nOverview\n========\n\npyNastran is an interface library to the various Nastran file formats (BDF, OP2, OP4).\nUsing the BDF interface, you can read/edit/write Nastran geometry without worrying about\nfield formatting.  Many checks are also performed to verify that your model is correct.\nUsing the OP2 interface, you can read large result files quickly and efficiently.\nAdditionally, you can also extract a subset of the result data and write OP2/F06 result\nfiles.  For a more detailed list of features, see:\n\n* `Features <https://pynastran-git.readthedocs.io/en/1.3/quick_start/features.html#overview>`_\n\nUsing the pyNastran GUI, you can read in Nastran models and quickly view results for a model.\nWhile it's no FEMAP/Patran, it can replace many tasks that would otherwise require a\ncommercial program.\n\n.. image:: https://github.com/SteveDoyle2/pynastran/blob/master/pyNastran/gui/images/caero.png\n\nNews\n====\n\npyNastran v1.3.2 has been released (2019/4/8)\n---------------------------------------------\n\nWith Python 2 now officially dead, it's time for a new killer feature to get the last few people to switch.\n\nThere is now support for writing OP2 files!  They're difficult to create from scratch, \nbut modifying an existing one isn't difficult.  This includes geometry support.\n\nIn addition, many new OP2 results have been added.  Modern NX Nastran should work much better.\n\nBetter yet, check out this blog post covering `Flutter Analysis in pyNastran <https://www.m4-engineering.com/flutter-analysis-with-pynastran/>`_\n\nProgrammatics:\n\n* Supports Python 3.7 and 3.8\n\n* Dropping Python 2.7 and 3.6 support\n\n* GUI is compatible with PyQt5 and PySide2\n\n* improved testing of old versions of packages\n\nBDF:\n * enhancements\n\n   * 405 cards supported (up from 373)\n\n   * improved mesh utilities\n\n     * bdf mirror, bdf convert, bdf export_caero_mesh\n\n     * additional `bdf scale`, which takes arbitrary mass, length, time, pressure, or velocity scale factors (3 of 5) to apply a scaling law\n\n   - added deck guessing with punch=None\n\nOP2:\n - enhancements:\n\n   - OP2 write support\n\n   - fixed most pandas deprecation warnings/added support for pandas 0.25 \n\n   - much improved NX 2019.2 support\n\n - minor enhancements:\n\n   - more hdf5 results\n\n   - a few more cards supported in the OP2 geometry reader\n\n   - preliminary NX 64-bit support\n\n   - more MSC versions supported\n\n   - sped up R1TABRG (optimization) reading\n\n   - various geometry cards added\n\n   - supports more PARAM reading\n\n - new results:\n\n   - composite failure indicies (OEFIT)\n\n   - sensitivity support (DSCMCOL)\n\n   - Cambpell diagrams (CDDATA)\n\n   - eigenvectors (BOPHIGF)\n\n   - grid point forces SORT2 (OGPFB2)\n\n   - stress/strain/force\n\n     - random stress/strain (OESVM1/2, OESVM1C, OSTRVM1/2, OSTRVM2, OESXRM1C, OESXNO1, OESXNO1C)\n\n     - real/complex stress/strain/force output for centroidal CQUADR/CTRIAR\n\n     - complex CBEAR forces\n\n     - real CFAST, CWELD forces\n\n     - nonlinear cbush stress/strain/force\n\n   - other\n\n     - PSDs\n\n     - optimization\n\n       - convergence table\n\n       - design variables\n\n       - weight, displacement, stress, strain, force, composite stress, composite strain, fractional mass response\n\n   - SOL 401/402 results:\n\n     - eigenvalue_fluid (LAMAF, LAMAS)\n\n     - eigenvectors (BOPHIGF, BOPHIGS)\n\n     - temperature (OTEMP1)\n\n     - solution set\n\n       - results: displacement, velocity, acceleration, eigenvectors:\n\n       - tables: OUXY1, OUXY2, OPHSA\n\nGUI:\n\n- enhancements:\n\n  - partial custom results many now be loaded\n\n  - animation now supports complex fringe\n\n  - result case description now shows the mode/time/frequency\n\n  - result case description now shows the min/max value as well as the location\n\n  - map centroidal to nodal option\n\n  - adding node/element highlight menu\n\n  - adding node/element mark/label menu\n\n  - result case description now shows the min/max value as well as the location\n\n  - result case description now shows the mode/time/frequency\n\n- minor enhancements:\n\n  - added export result option to right-click menu\n\n  - more keyboard shortcuts\n\n- nastran:\n\n  - geometry:\n\n    - added preferences for geometry/results to speed up model loading\n\n    - element & material coordinate systems\n\n  - results\n\n    - added acoustic displacements (OUG1F)\n\n    - real/complex stress/strain/force results\n\n      - plate by upper/lower, composite plates by ply, bars, rods, springs, cbush, cdamp\n\n    - fractional mass response\n\nF06:\n - KE support for plot_145\n\nMany bug fixes and a few more details on features, can be found in the `Release Notes <https://github.com/SteveDoyle2/pyNastran/blob/1.3/releaseNotes.md>`_.\n\n\npyNastran 1.3.1/1.3.0 has been released (2019/4/8)\n--------------------------------------------------\nThis result has been superseeded by 1.3.2.  The PyPi page was fixed.\n\npyNastran v1.2.1 has been released (2019/5/24)\n----------------------------------------------\n\nI keep saying to myself there's not much to add, but Nastran is huge.  Beyond HDF5\nsupport in the BDF, I'm a huge fan of the new ability to keep track of which include file a\ncard came from and write it as a separate file.  It's limited in usefulness, but very handy\nin certain cases.  There's a new (still preliminary) superelement capability.  I'm far\nfrom a superelement expert, but it's probably useful.\n\nThe OP2 reader now supports SORT2 along with much improved random results reading.\nIf you're using 60+ GB OP2s, you probably have had issues with RAM usage in the past.\nWith the new ability to dump the OP2 directly to HDF5, this should not be an as much of\nan issue.  It's not 100% implemented, so let me know if you need it for another result.\n\nRegarding the GUI, there are also some new features.  Groups work a bit better, but aren't\nquite perfect.  Logging has been dramatically sped up so the GUI loads faster and you can\nload Nastran models even faster if you disable additional results (e.g., element quality).\n\nFinally, Python 2.7 is end of life.  Numpy, scipy, and matplotlib have all dropped\nPython 2.7 support.  It's time for pyNastran to as well.  The OP2 reader is 30% faster in\nPython 3.6+ than Python 2.7, so it's not all bad!\n\nProgrammatics:\n - This is the last Python 2.7 release.\n - Dropping Python 3.5 support\n - Supports Python 2.7, 3.6-3.7\n - GUI is compatible with PyQt4/PyQt5 as well as PySide/PySide2\n - improved testing of old versions of packages\n\nBDF:\n - 373 cards supported (up from 343)\n\n - added abiltity to write models to separate include files\n\n     .. code-block:: python\n\n        >>> model = BDF()\n        >>> model.read_bdf(bdf_filename, save_file_structure=True)\n\n        out_filenames = {\n            bdf_filename : bdf_filename_new,\n            include_filename : include_filename_new,\n        }\n        >>> model.write_bdfs(out_filenames, relative_dirname=None, is_windows=None)\n        >>> ifile = model.grids[1].ifile\n\n - HDF5 import/export\n\n     .. code-block:: python\n\n        >>> model = read_bdf(bdf_filename)\n        >>> model.export_hdf5_filename(hdf5_filename)\n        >>> model_new = OP2()\n        >>> model_new.load_hdf5_filename(hdf5_filename)\n\n - preliminary superelement support\n\n     .. code-block:: python\n\n        >>> model.read_bdf(bdf_filename)\n        >>> model.superelement_models[1].nodes\n\nOP2:\n - reorganization of random op2 results into op2.results.psd (or ato, no, crm, rms) to aide in finding data\n - reorganization of op2 class to reduce number of functions in the object.  This affects any custom table reading.\n - improved optimzation response reading\n - limited SORT2 support\n - fixed CD transformation bug for BOUGV1 and BOPHIG1 tables\n - Improved HDF5 export/import support (e.g., matrices, random results)\n\n - Can optionally save directly to HDF5 instead of numpy (limited).\n - Loading OP2s to an HDF5 file to decrease memory usage\n\n    .. code-block:: python\n\n       >>> op2_model = OP2()\n       >>> op2_model.load_as_h5 = True\n       >>> op2_model.read_op2(op2_filename)\n\nOP2Geom:\n - HDF5 support\n - reading EQEXIN/S, GPT, GPDT, CSTM/S tables (recovery of nodes & coordinate with OP2Geom)\n - fixed theta/mcid reading for CTRIA3/CQUAD4\n - fixed CQUAD8 bug\n\nGUI:\n - sped up HTML logging\n - much improved groups menu\n - options for Nastran in preferences menu to speed up loading/limit memory usage\n - pyNastran BDF pickle reading\n - pyNastran OP2 HDF5 reading (not MSC's format)\n - visualization when pickling nodes/elements\n - min/max labels\n - highlight menu\n - Patran-style colors\n - custom force vectors\n - AVL support\n\n\nKnown issues:\n - Transient Pandas Dataframes will fail for newer versions of numpy/pandas.\n   If anyone knows how to use a MultiIndex, this is probably pretty easy to fix.\n\npyNastran v1.2.0 has been released (2019/5/21)\n----------------------------------------------\n\nThis result has been superseeded by 1.2.1.  See release notes for details.\n\npyNastran v1.1.0 has been released (2018/6/26)\n----------------------------------------------\n\nSee `v1.1.0 <https://github.com/SteveDoyle2/pyNastran/releases/tag/v1.1.0>`_ for information regarding enhancements.\n\npyNastran v1.0.0 has been released (2017/5/25)\n----------------------------------------------\n\nSee `v1.0.0 <https://github.com/SteveDoyle2/pyNastran/releases/tag/v1.0.0>`_ for information regarding enhancements.\n\npyNastran v0.8.0 has been released (2016/8/21)\n----------------------------------------------\nSee `v0.8.0 <https://github.com/SteveDoyle2/pyNastran/releases/tag/v0.8.0>`_ for information regarding enhancements.\n\npyNastran v0.7.2 has been Released (2015/4/25)\n----------------------------------------------\nSee `v0.7.2 <https://github.com/SteveDoyle2/pyNastran/releases>`_ for information regarding enhancements.\n\nVersion 0.6.1 has been released (2013/6)\n----------------------------------------\n**Version 0.6** improves BDF reading.  The reader is more robust and also requires proper BDF field formatting (e.g. a integer field can't be a float).  Additionally, cards also have a comment() method.\n\nMarcin G\u0105siorek participated in the latest pyNastran under the European Space Agency's (ESA) \"Summer of Code In Space\" `SOCIS <http://sophia.estec.esa.int/socis2012/?q=node/13>`_ program.  The program provides a stipend to students to work on open-source projects.  He did a great job of simplifying code and creating nicer documentation.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SteveDoyle2/pyNastran", "keywords": "", "license": "BSD-3", "maintainer": "", "maintainer_email": "", "name": "pyNastran", "package_url": "https://pypi.org/project/pyNastran/", "platform": "", "project_url": "https://pypi.org/project/pyNastran/", "project_urls": {"Homepage": "https://github.com/SteveDoyle2/pyNastran"}, "release_url": "https://pypi.org/project/pyNastran/1.3.2/", "requires_dist": ["numpy", "scipy", "matplotlib", "cpylog", "nptyping", "docopt-ng", "qtpy", "pillow", "imageio", "numpy (>=1.14)", "scipy (>=1.0)", "matplotlib (>=2.2)", "cpylog (>=1.4.0)", "nptyping (>=1.0.1)", "docopt-ng (>=0.7.2)"], "requires_python": ">=3.7", "summary": "Nastran BDF/F06/OP2/OP4 File reader/editor/writer/viewer", "version": "1.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td><strong>Version</strong></td>\n<td><strong>Docs</strong></td>\n<td><strong>Status</strong></td>\n<td><strong>Coverage</strong></td>\n</tr>\n<tr><td><a href=\"https://pypi.python.org/pypi/pyNastran\" rel=\"nofollow\"><img alt=\"PyPi13\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a82e7e67420defb44e95b20ecbe95063e96c1f3a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e61737472616e2e737667\"></a></td>\n<td><a href=\"https://pynastran-git.readthedocs.io/en/1.3/\" rel=\"nofollow\">Docs</a></td>\n<td><a href=\"https://travis-ci.org/SteveDoyle2/pyNastran\" rel=\"nofollow\"><img alt=\"Travis13\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b3290b9f082b1cbba9aebcbe0d2ba3d1d41f9054/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f5374657665446f796c65322f70794e61737472616e2f312e332e737667\"></a></td>\n<td><a href=\"https://codecov.io/gh/SteveDoyle2/pyNastran/branch/1.3\" rel=\"nofollow\"><img alt=\"Codecov13\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cf495696c00595953168022b58e38492899053a1/68747470733a2f2f636f6465636f762e696f2f67682f5374657665446f796c65322f70794e61737472616e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></td>\n</tr>\n</tbody>\n</table>\n<div id=\"v1-3-2\">\n<h2>v1.3.2</h2>\n<p><a href=\"https://sourceforge.net/projects/pynastran/files/?source=navbar\" rel=\"nofollow\">Download GUI</a> (latest is from 2020/4/8)</p>\n<p>Also, check out the:</p>\n<ul>\n<li><a href=\"http://groups.google.com/group/pynastran-discuss\" rel=\"nofollow\">Discussion forum</a> (questions about the latest release)</li>\n<li><a href=\"http://groups.google.com/group/pynastran-dev\" rel=\"nofollow\">Developer forum</a> (questions about the master branch)</li>\n<li><a href=\"https://pynastran-git.readthedocs.io/en/1.3/\" rel=\"nofollow\">Docs</a></li>\n</ul>\n<p>for more detailed information.</p>\n<div id=\"overview\">\n<h3>Overview</h3>\n<p>pyNastran is an interface library to the various Nastran file formats (BDF, OP2, OP4).\nUsing the BDF interface, you can read/edit/write Nastran geometry without worrying about\nfield formatting.  Many checks are also performed to verify that your model is correct.\nUsing the OP2 interface, you can read large result files quickly and efficiently.\nAdditionally, you can also extract a subset of the result data and write OP2/F06 result\nfiles.  For a more detailed list of features, see:</p>\n<ul>\n<li><a href=\"https://pynastran-git.readthedocs.io/en/1.3/quick_start/features.html#overview\" rel=\"nofollow\">Features</a></li>\n</ul>\n<p>Using the pyNastran GUI, you can read in Nastran models and quickly view results for a model.\nWhile it\u2019s no FEMAP/Patran, it can replace many tasks that would otherwise require a\ncommercial program.</p>\n<img alt=\"https://github.com/SteveDoyle2/pynastran/blob/master/pyNastran/gui/images/caero.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d5e4c27196f7baf5bc82ea32c98996e5bb368670/68747470733a2f2f6769746875622e636f6d2f5374657665446f796c65322f70796e61737472616e2f626c6f622f6d61737465722f70794e61737472616e2f6775692f696d616765732f636165726f2e706e67\">\n</div>\n<div id=\"news\">\n<h3>News</h3>\n</div>\n</div>\n<div id=\"pynastran-v1-3-2-has-been-released-2019-4-8\">\n<h2>pyNastran v1.3.2 has been released (2019/4/8)</h2>\n<p>With Python 2 now officially dead, it\u2019s time for a new killer feature to get the last few people to switch.</p>\n<p>There is now support for writing OP2 files!  They\u2019re difficult to create from scratch,\nbut modifying an existing one isn\u2019t difficult.  This includes geometry support.</p>\n<p>In addition, many new OP2 results have been added.  Modern NX Nastran should work much better.</p>\n<p>Better yet, check out this blog post covering <a href=\"https://www.m4-engineering.com/flutter-analysis-with-pynastran/\" rel=\"nofollow\">Flutter Analysis in pyNastran</a></p>\n<p>Programmatics:</p>\n<ul>\n<li>Supports Python 3.7 and 3.8</li>\n<li>Dropping Python 2.7 and 3.6 support</li>\n<li>GUI is compatible with PyQt5 and PySide2</li>\n<li>improved testing of old versions of packages</li>\n</ul>\n<dl>\n<dt>BDF:</dt>\n<dd><ul>\n<li><p>enhancements</p>\n<ul>\n<li>405 cards supported (up from 373)</li>\n<li>improved mesh utilities<ul>\n<li>bdf mirror, bdf convert, bdf export_caero_mesh</li>\n<li>additional <cite>bdf scale</cite>, which takes arbitrary mass, length, time, pressure, or velocity scale factors (3 of 5) to apply a scaling law</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>added deck guessing with punch=None</li>\n</ul>\n</li>\n</ul>\n</dd>\n<dt>OP2:</dt>\n<dd><ul>\n<li>enhancements:<ul>\n<li>OP2 write support</li>\n<li>fixed most pandas deprecation warnings/added support for pandas 0.25</li>\n<li>much improved NX 2019.2 support</li>\n</ul>\n</li>\n<li>minor enhancements:<ul>\n<li>more hdf5 results</li>\n<li>a few more cards supported in the OP2 geometry reader</li>\n<li>preliminary NX 64-bit support</li>\n<li>more MSC versions supported</li>\n<li>sped up R1TABRG (optimization) reading</li>\n<li>various geometry cards added</li>\n<li>supports more PARAM reading</li>\n</ul>\n</li>\n<li>new results:<ul>\n<li>composite failure indicies (OEFIT)</li>\n<li>sensitivity support (DSCMCOL)</li>\n<li>Cambpell diagrams (CDDATA)</li>\n<li>eigenvectors (BOPHIGF)</li>\n<li>grid point forces SORT2 (OGPFB2)</li>\n<li>stress/strain/force<ul>\n<li>random stress/strain (OESVM1/2, OESVM1C, OSTRVM1/2, OSTRVM2, OESXRM1C, OESXNO1, OESXNO1C)</li>\n<li>real/complex stress/strain/force output for centroidal CQUADR/CTRIAR</li>\n<li>complex CBEAR forces</li>\n<li>real CFAST, CWELD forces</li>\n<li>nonlinear cbush stress/strain/force</li>\n</ul>\n</li>\n<li>other<ul>\n<li>PSDs</li>\n<li>optimization<ul>\n<li>convergence table</li>\n<li>design variables</li>\n<li>weight, displacement, stress, strain, force, composite stress, composite strain, fractional mass response</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>SOL 401/402 results:<ul>\n<li>eigenvalue_fluid (LAMAF, LAMAS)</li>\n<li>eigenvectors (BOPHIGF, BOPHIGS)</li>\n<li>temperature (OTEMP1)</li>\n<li>solution set<ul>\n<li>results: displacement, velocity, acceleration, eigenvectors:</li>\n<li>tables: OUXY1, OUXY2, OPHSA</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</dd>\n</dl>\n<p>GUI:</p>\n<ul>\n<li>enhancements:<ul>\n<li>partial custom results many now be loaded</li>\n<li>animation now supports complex fringe</li>\n<li>result case description now shows the mode/time/frequency</li>\n<li>result case description now shows the min/max value as well as the location</li>\n<li>map centroidal to nodal option</li>\n<li>adding node/element highlight menu</li>\n<li>adding node/element mark/label menu</li>\n<li>result case description now shows the min/max value as well as the location</li>\n<li>result case description now shows the mode/time/frequency</li>\n</ul>\n</li>\n<li>minor enhancements:<ul>\n<li>added export result option to right-click menu</li>\n<li>more keyboard shortcuts</li>\n</ul>\n</li>\n<li>nastran:<ul>\n<li>geometry:<ul>\n<li>added preferences for geometry/results to speed up model loading</li>\n<li>element &amp; material coordinate systems</li>\n</ul>\n</li>\n<li>results<ul>\n<li>added acoustic displacements (OUG1F)</li>\n<li>real/complex stress/strain/force results<ul>\n<li>plate by upper/lower, composite plates by ply, bars, rods, springs, cbush, cdamp</li>\n</ul>\n</li>\n<li>fractional mass response</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<dl>\n<dt>F06:</dt>\n<dd><ul>\n<li>KE support for plot_145</li>\n</ul>\n</dd>\n</dl>\n<p>Many bug fixes and a few more details on features, can be found in the <a href=\"https://github.com/SteveDoyle2/pyNastran/blob/1.3/releaseNotes.md\" rel=\"nofollow\">Release Notes</a>.</p>\n</div>\n<div id=\"pynastran-1-3-1-1-3-0-has-been-released-2019-4-8\">\n<h2>pyNastran 1.3.1/1.3.0 has been released (2019/4/8)</h2>\n<p>This result has been superseeded by 1.3.2.  The PyPi page was fixed.</p>\n</div>\n<div id=\"pynastran-v1-2-1-has-been-released-2019-5-24\">\n<h2>pyNastran v1.2.1 has been released (2019/5/24)</h2>\n<p>I keep saying to myself there\u2019s not much to add, but Nastran is huge.  Beyond HDF5\nsupport in the BDF, I\u2019m a huge fan of the new ability to keep track of which include file a\ncard came from and write it as a separate file.  It\u2019s limited in usefulness, but very handy\nin certain cases.  There\u2019s a new (still preliminary) superelement capability.  I\u2019m far\nfrom a superelement expert, but it\u2019s probably useful.</p>\n<p>The OP2 reader now supports SORT2 along with much improved random results reading.\nIf you\u2019re using 60+ GB OP2s, you probably have had issues with RAM usage in the past.\nWith the new ability to dump the OP2 directly to HDF5, this should not be an as much of\nan issue.  It\u2019s not 100% implemented, so let me know if you need it for another result.</p>\n<p>Regarding the GUI, there are also some new features.  Groups work a bit better, but aren\u2019t\nquite perfect.  Logging has been dramatically sped up so the GUI loads faster and you can\nload Nastran models even faster if you disable additional results (e.g., element quality).</p>\n<p>Finally, Python 2.7 is end of life.  Numpy, scipy, and matplotlib have all dropped\nPython 2.7 support.  It\u2019s time for pyNastran to as well.  The OP2 reader is 30% faster in\nPython 3.6+ than Python 2.7, so it\u2019s not all bad!</p>\n<dl>\n<dt>Programmatics:</dt>\n<dd><ul>\n<li>This is the last Python 2.7 release.</li>\n<li>Dropping Python 3.5 support</li>\n<li>Supports Python 2.7, 3.6-3.7</li>\n<li>GUI is compatible with PyQt4/PyQt5 as well as PySide/PySide2</li>\n<li>improved testing of old versions of packages</li>\n</ul>\n</dd>\n<dt>BDF:</dt>\n<dd><ul>\n<li><p>373 cards supported (up from 343)</p>\n</li>\n<li><p>added abiltity to write models to separate include files</p>\n<blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">BDF</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">read_bdf</span><span class=\"p\">(</span><span class=\"n\">bdf_filename</span><span class=\"p\">,</span> <span class=\"n\">save_file_structure</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">out_filenames</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"n\">bdf_filename</span> <span class=\"p\">:</span> <span class=\"n\">bdf_filename_new</span><span class=\"p\">,</span>\n    <span class=\"n\">include_filename</span> <span class=\"p\">:</span> <span class=\"n\">include_filename_new</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">write_bdfs</span><span class=\"p\">(</span><span class=\"n\">out_filenames</span><span class=\"p\">,</span> <span class=\"n\">relative_dirname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">is_windows</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ifile</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">grids</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ifile</span>\n</pre>\n</blockquote>\n</li>\n<li><p>HDF5 import/export</p>\n<blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">read_bdf</span><span class=\"p\">(</span><span class=\"n\">bdf_filename</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">export_hdf5_filename</span><span class=\"p\">(</span><span class=\"n\">hdf5_filename</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model_new</span> <span class=\"o\">=</span> <span class=\"n\">OP2</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model_new</span><span class=\"o\">.</span><span class=\"n\">load_hdf5_filename</span><span class=\"p\">(</span><span class=\"n\">hdf5_filename</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n</li>\n<li><p>preliminary superelement support</p>\n<blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">read_bdf</span><span class=\"p\">(</span><span class=\"n\">bdf_filename</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">superelement_models</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">nodes</span>\n</pre>\n</blockquote>\n</li>\n</ul>\n</dd>\n<dt>OP2:</dt>\n<dd><ul>\n<li><p>reorganization of random op2 results into op2.results.psd (or ato, no, crm, rms) to aide in finding data</p>\n</li>\n<li><p>reorganization of op2 class to reduce number of functions in the object.  This affects any custom table reading.</p>\n</li>\n<li><p>improved optimzation response reading</p>\n</li>\n<li><p>limited SORT2 support</p>\n</li>\n<li><p>fixed CD transformation bug for BOUGV1 and BOPHIG1 tables</p>\n</li>\n<li><p>Improved HDF5 export/import support (e.g., matrices, random results)</p>\n</li>\n<li><p>Can optionally save directly to HDF5 instead of numpy (limited).</p>\n</li>\n<li><p>Loading OP2s to an HDF5 file to decrease memory usage</p>\n<blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">op2_model</span> <span class=\"o\">=</span> <span class=\"n\">OP2</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">op2_model</span><span class=\"o\">.</span><span class=\"n\">load_as_h5</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">op2_model</span><span class=\"o\">.</span><span class=\"n\">read_op2</span><span class=\"p\">(</span><span class=\"n\">op2_filename</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n</li>\n</ul>\n</dd>\n<dt>OP2Geom:</dt>\n<dd><ul>\n<li>HDF5 support</li>\n<li>reading EQEXIN/S, GPT, GPDT, CSTM/S tables (recovery of nodes &amp; coordinate with OP2Geom)</li>\n<li>fixed theta/mcid reading for CTRIA3/CQUAD4</li>\n<li>fixed CQUAD8 bug</li>\n</ul>\n</dd>\n<dt>GUI:</dt>\n<dd><ul>\n<li>sped up HTML logging</li>\n<li>much improved groups menu</li>\n<li>options for Nastran in preferences menu to speed up loading/limit memory usage</li>\n<li>pyNastran BDF pickle reading</li>\n<li>pyNastran OP2 HDF5 reading (not MSC\u2019s format)</li>\n<li>visualization when pickling nodes/elements</li>\n<li>min/max labels</li>\n<li>highlight menu</li>\n<li>Patran-style colors</li>\n<li>custom force vectors</li>\n<li>AVL support</li>\n</ul>\n</dd>\n<dt>Known issues:</dt>\n<dd><ul>\n<li>Transient Pandas Dataframes will fail for newer versions of numpy/pandas.\nIf anyone knows how to use a MultiIndex, this is probably pretty easy to fix.</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"pynastran-v1-2-0-has-been-released-2019-5-21\">\n<h2>pyNastran v1.2.0 has been released (2019/5/21)</h2>\n<p>This result has been superseeded by 1.2.1.  See release notes for details.</p>\n</div>\n<div id=\"pynastran-v1-1-0-has-been-released-2018-6-26\">\n<h2>pyNastran v1.1.0 has been released (2018/6/26)</h2>\n<p>See <a href=\"https://github.com/SteveDoyle2/pyNastran/releases/tag/v1.1.0\" rel=\"nofollow\">v1.1.0</a> for information regarding enhancements.</p>\n</div>\n<div id=\"pynastran-v1-0-0-has-been-released-2017-5-25\">\n<h2>pyNastran v1.0.0 has been released (2017/5/25)</h2>\n<p>See <a href=\"https://github.com/SteveDoyle2/pyNastran/releases/tag/v1.0.0\" rel=\"nofollow\">v1.0.0</a> for information regarding enhancements.</p>\n</div>\n<div id=\"pynastran-v0-8-0-has-been-released-2016-8-21\">\n<h2>pyNastran v0.8.0 has been released (2016/8/21)</h2>\n<p>See <a href=\"https://github.com/SteveDoyle2/pyNastran/releases/tag/v0.8.0\" rel=\"nofollow\">v0.8.0</a> for information regarding enhancements.</p>\n</div>\n<div id=\"pynastran-v0-7-2-has-been-released-2015-4-25\">\n<h2>pyNastran v0.7.2 has been Released (2015/4/25)</h2>\n<p>See <a href=\"https://github.com/SteveDoyle2/pyNastran/releases\" rel=\"nofollow\">v0.7.2</a> for information regarding enhancements.</p>\n</div>\n<div id=\"version-0-6-1-has-been-released-2013-6\">\n<h2>Version 0.6.1 has been released (2013/6)</h2>\n<p><strong>Version 0.6</strong> improves BDF reading.  The reader is more robust and also requires proper BDF field formatting (e.g. a integer field can\u2019t be a float).  Additionally, cards also have a comment() method.</p>\n<p>Marcin G\u0105siorek participated in the latest pyNastran under the European Space Agency\u2019s (ESA) \u201cSummer of Code In Space\u201d <a href=\"http://sophia.estec.esa.int/socis2012/?q=node/13\" rel=\"nofollow\">SOCIS</a> program.  The program provides a stipend to students to work on open-source projects.  He did a great job of simplifying code and creating nicer documentation.</p>\n</div>\n\n          </div>"}, "last_serial": 6983294, "releases": {"0.7.2": [{"comment_text": "", "digests": {"md5": "a312043f13ad5927cc8f6c8269eec617", "sha256": "6cd3421b23ba9ce2f846d3337a49df1bcd06b6b9e87b1a6a9c1434bca3c28e37"}, "downloads": -1, "filename": "pyNastran-0.7.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a312043f13ad5927cc8f6c8269eec617", "packagetype": "bdist_wheel", "python_version": "any", "requires_python": null, "size": 830446, "upload_time": "2015-05-31T08:44:23", "upload_time_iso_8601": "2015-05-31T08:44:23.401169Z", "url": "https://files.pythonhosted.org/packages/36/d0/a6ff4509c640dd1484f6c57e69a9c9cf64284d35bd6d6506ef7ac94c1431/pyNastran-0.7.2-py2.py3-none-any.whl", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "d9e61bdc4dc55bef46cbca7f1eeec27d", "sha256": "fab01effcfa04f55e397d174b01323e7a0212ec0137a14a660fe2b70e9dadb2d"}, "downloads": -1, "filename": "pyNastran-0.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d9e61bdc4dc55bef46cbca7f1eeec27d", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 1529636, "upload_time": "2016-08-22T00:58:44", "upload_time_iso_8601": "2016-08-22T00:58:44.961931Z", "url": "https://files.pythonhosted.org/packages/c6/1f/7b61a724b036dfd9b0eca583a17428cfe4071b13f71ecf703ac2df13a891/pyNastran-0.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e165542951fa23d49da325d6e2108ab", "sha256": "f2d557a8ac1a73e3ea341544ca1cc3c441f2ecc43068c7a2ca4165a00b46f9b1"}, "downloads": -1, "filename": "pyNastran-0.8.0.zip", "has_sig": false, "md5_digest": "7e165542951fa23d49da325d6e2108ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1268348, "upload_time": "2016-08-22T00:58:39", "upload_time_iso_8601": "2016-08-22T00:58:39.706321Z", "url": "https://files.pythonhosted.org/packages/bb/50/c37809747779f680d0afee31aa623606f12af02c4486eca88ef2cea5f400/pyNastran-0.8.0.zip", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "e197e68934182fc27ad07bfd254c176a", "sha256": "e4c56ef27a2d5d1ebfe4f7f070b1d5ceaaa0f37c520d8acf14e338cef6c9cfac"}, "downloads": -1, "filename": "pyNastran-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e197e68934182fc27ad07bfd254c176a", "packagetype": "bdist_wheel", "python_version": "any", "requires_python": null, "size": 1951444, "upload_time": "2017-05-26T00:31:12", "upload_time_iso_8601": "2017-05-26T00:31:12.145859Z", "url": "https://files.pythonhosted.org/packages/e7/5c/12b918e21d944a42befe1739e35994f06215c3dc78fe7a5cacc6d500b66d/pyNastran-1.0.0-py2.py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "50509f60b1b18149bc44c474dc651a1c", "sha256": "1582cf3551c797eb80d6f44fd7cadcbeb536508f493e83a65114aa552f863b71"}, "downloads": -1, "filename": "pyNastran-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "50509f60b1b18149bc44c474dc651a1c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2323522, "upload_time": "2018-06-27T05:47:54", "upload_time_iso_8601": "2018-06-27T05:47:54.055642Z", "url": "https://files.pythonhosted.org/packages/70/53/cbf0b6fd435cfc4c97bb03ba7f14f3d25905177d3544b9a6c56d4b642b94/pyNastran-1.1.0-py2.py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "bd54216aaa9257e6e8c10059c5c7fffd", "sha256": "ccf9794d969311508499a05193d8e2cb4215af0ab96180cfe67dcc1ecd19586c"}, "downloads": -1, "filename": "pyNastran-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd54216aaa9257e6e8c10059c5c7fffd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">2.7.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 2654492, "upload_time": "2019-05-22T02:26:57", "upload_time_iso_8601": "2019-05-22T02:26:57.840316Z", "url": "https://files.pythonhosted.org/packages/d6/5e/cc0e7b2319777136412961915b233f3b411c35c4e02d145ca17961d0e5b8/pyNastran-1.2.0-py2.py3-none-any.whl", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "fc09eb06a3b7b1389311860d943bc9de", "sha256": "f511c1a5712aa1dc6fe8b012092b6f2e71563f8aaa6f121addf1e53c3b84d6e7"}, "downloads": -1, "filename": "pyNastran-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fc09eb06a3b7b1389311860d943bc9de", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">2.7.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 2653851, "upload_time": "2019-05-24T19:36:10", "upload_time_iso_8601": "2019-05-24T19:36:10.577103Z", "url": "https://files.pythonhosted.org/packages/14/6b/8518bd8f7359bd4f861addb39484b418645a3ff1e5219cf411ea02dbeb3f/pyNastran-1.2.1-py2.py3-none-any.whl", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "de368ee59430543f2f9218c86ad33dd8", "sha256": "0ea949db1608eadcebbb01cb2ba019a0340aab228d5c958be4bc9aec9a7846e2"}, "downloads": -1, "filename": "pyNastran-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "de368ee59430543f2f9218c86ad33dd8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 3217381, "upload_time": "2020-04-08T20:33:57", "upload_time_iso_8601": "2020-04-08T20:33:57.295510Z", "url": "https://files.pythonhosted.org/packages/89/f2/7ec699ed4ccd5b0a821d90e58c2b8d37a155d163c000c2b79aa09de2249c/pyNastran-1.3.0-py3-none-any.whl", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "9809aece01ea3cd5906f8a7fb5c7f9e0", "sha256": "ea4fed19a661060a677520fe8a57ae5223f9e87adae815e7d2e83637a01166b8"}, "downloads": -1, "filename": "pyNastran-1.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9809aece01ea3cd5906f8a7fb5c7f9e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 3212495, "upload_time": "2020-04-09T05:09:56", "upload_time_iso_8601": "2020-04-09T05:09:56.281613Z", "url": "https://files.pythonhosted.org/packages/79/e8/20a93e69bc224eee47d99cbb1d7bf7517638c4df943999c3e2ccd48bd6a2/pyNastran-1.3.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9809aece01ea3cd5906f8a7fb5c7f9e0", "sha256": "ea4fed19a661060a677520fe8a57ae5223f9e87adae815e7d2e83637a01166b8"}, "downloads": -1, "filename": "pyNastran-1.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9809aece01ea3cd5906f8a7fb5c7f9e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 3212495, "upload_time": "2020-04-09T05:09:56", "upload_time_iso_8601": "2020-04-09T05:09:56.281613Z", "url": "https://files.pythonhosted.org/packages/79/e8/20a93e69bc224eee47d99cbb1d7bf7517638c4df943999c3e2ccd48bd6a2/pyNastran-1.3.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:01:22 2020"}