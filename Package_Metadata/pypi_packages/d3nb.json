{"info": {"author": "John Bjorn Nelson", "author_email": "jbn@abreka.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: IPython", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Topic :: Communications", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "What is this?\n=============\n\nThis is a really thin shiv that lets you run static d3js scripts to produce\nSVG / HTML outputs in your Jupyter notebooks. Underneath the covers, \nit uses `d3-node <https://www.npmjs.com/package/d3-node>`_. \n\nWhy is this?\n------------\n\nBecause it makes writing my dissertation easier. I have some dynamic\nvisualizations that are d3-based. But, for the write-up, I also have\nstatic snapshots as illustrations. This is my DRY hack. It let's me reuse\nthe code in a way that isn't terribly intrusive. (Well, that, and I don't\nlike out-of-Jupyter-core JS in my notebooks.)\n\n\nInstallation\n------------\n\nAssuming you have ``node`` and ``yarn``,\n\n.. code-block:: sh\n\n   pip install d3nb\n\nUsage\n-----\n\nThe following snippet runs the given cell source with \n``my_node_project_dir`` as the working directory, then outputs\nthe SVG. If that directory doesn't exist, you can run the \ninitial cell magic line as, ``%%d3nb_svg my_node_project_dir --init`` \nto set it up.\n\n.. code-block:: javascript\n\n   %%d3nb_svg my_node_project_dir\n   var D3Node = require('d3-node')\n   var d3 = require('d3')\n   var d3n = new D3Node()\n   var svg = d3n.createSVG()\n\n   // See: https://www.npmjs.com/package/d3-node\n   // ...\n\n   console.log(d3n.svgString())\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jbn/d3js", "keywords": "d3js", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "d3nb", "package_url": "https://pypi.org/project/d3nb/", "platform": "", "project_url": "https://pypi.org/project/d3nb/", "project_urls": {"Homepage": "https://github.com/jbn/d3js"}, "release_url": "https://pypi.org/project/d3nb/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "d3js", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a really thin shiv that lets you run static d3js scripts to produce\nSVG / HTML outputs in your Jupyter notebooks. Underneath the covers,\nit uses <a href=\"https://www.npmjs.com/package/d3-node\" rel=\"nofollow\">d3-node</a>.</p>\n<div id=\"why-is-this\">\n<h2>Why is this?</h2>\n<p>Because it makes writing my dissertation easier. I have some dynamic\nvisualizations that are d3-based. But, for the write-up, I also have\nstatic snapshots as illustrations. This is my DRY hack. It let\u2019s me reuse\nthe code in a way that isn\u2019t terribly intrusive. (Well, that, and I don\u2019t\nlike out-of-Jupyter-core JS in my notebooks.)</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Assuming you have <tt>node</tt> and <tt>yarn</tt>,</p>\n<pre>pip install d3nb\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The following snippet runs the given cell source with\n<tt>my_node_project_dir</tt> as the working directory, then outputs\nthe SVG. If that directory doesn\u2019t exist, you can run the\ninitial cell magic line as, <tt>%%d3nb_svg my_node_project_dir <span class=\"pre\">--init</span></tt>\nto set it up.</p>\n<pre><span class=\"o\">%%</span><span class=\"nx\">d3nb_svg</span> <span class=\"nx\">my_node_project_dir</span>\n<span class=\"kd\">var</span> <span class=\"nx\">D3Node</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'d3-node'</span><span class=\"p\">)</span>\n<span class=\"kd\">var</span> <span class=\"nx\">d3</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'d3'</span><span class=\"p\">)</span>\n<span class=\"kd\">var</span> <span class=\"nx\">d3n</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">D3Node</span><span class=\"p\">()</span>\n<span class=\"kd\">var</span> <span class=\"nx\">svg</span> <span class=\"o\">=</span> <span class=\"nx\">d3n</span><span class=\"p\">.</span><span class=\"nx\">createSVG</span><span class=\"p\">()</span>\n\n<span class=\"c1\">// See: https://www.npmjs.com/package/d3-node\n// ...\n</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">d3n</span><span class=\"p\">.</span><span class=\"nx\">svgString</span><span class=\"p\">())</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3399461, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ddd768566c5c6bfc3f9af79b697d1ccd", "sha256": "13209d47d1537e98e3a41ce036bda17b1f4072eac9262c48adbdec7eedc86339"}, "downloads": -1, "filename": "d3nb-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ddd768566c5c6bfc3f9af79b697d1ccd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3518, "upload_time": "2017-12-08T01:48:15", "upload_time_iso_8601": "2017-12-08T01:48:15.345623Z", "url": "https://files.pythonhosted.org/packages/c3/9d/545d4e68387020b048676675b3a40ccb32904d197346c7f49d3541cc84de/d3nb-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "06d25630d871fefd661450c79d305980", "sha256": "6bc3bbfb9550fef66ff98358e36975304feb7a354a839b2aa3e9656b624c884e"}, "downloads": -1, "filename": "d3nb-0.0.2.tar.gz", "has_sig": false, "md5_digest": "06d25630d871fefd661450c79d305980", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4222, "upload_time": "2017-12-08T01:52:32", "upload_time_iso_8601": "2017-12-08T01:52:32.543031Z", "url": "https://files.pythonhosted.org/packages/73/b5/bf722eccdb6d32c16d0cc7280a03b0c7839ed539bb6d4fc8e9b947b67067/d3nb-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "06d25630d871fefd661450c79d305980", "sha256": "6bc3bbfb9550fef66ff98358e36975304feb7a354a839b2aa3e9656b624c884e"}, "downloads": -1, "filename": "d3nb-0.0.2.tar.gz", "has_sig": false, "md5_digest": "06d25630d871fefd661450c79d305980", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4222, "upload_time": "2017-12-08T01:52:32", "upload_time_iso_8601": "2017-12-08T01:52:32.543031Z", "url": "https://files.pythonhosted.org/packages/73/b5/bf722eccdb6d32c16d0cc7280a03b0c7839ed539bb6d4fc8e9b947b67067/d3nb-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:58 2020"}