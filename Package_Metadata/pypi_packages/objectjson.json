{"info": {"author": "Ashwin Balamohan", "author_email": "abmohan@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "ObjectJSON\n==========\n\n.. image:: https://badge.fury.io/py/objectjson.png\n    :target: http://badge.fury.io/py/objectjson\n    :alt: Latest PyPI version\n\n.. image:: https://pypip.in/d/objectjson/badge.png\n    :target: https://crate.io/packages/objectjson/\n    :alt: Number of PyPI downloads\n\nObjectJSON is a tool to create Python objects from large, complicated JSON\nobjects.\n\nDictionaries are great and all, but large nested ones can get tedious. objectjson will use Python's getattr function to allow you to recursively access deserialized JSON objects as if they were regular Python objects.\n\nUsage\n-----\n\nInstantiate ObjectJSON with a string or dictionary and read from it as you would any other python object.\n\n.. code:: python\n\n    from objectjson import ObjectJSON\n\n    json_str = '{ \"test\": {\"a\":1,\"b\": {\"c\":3} } }'\n\n    json_obj = ObjectJSON(json_str)\n\n    print(json_obj)           # {'test': {'b': {'c': 3}, 'a': 1}}\n    print(json_obj.test)      # {'b': {'c': 3}, 'a': 1}\n    print(json_obj.test.a)    # 1\n    print(json_obj.test.b.c)  # 3\n\n\nUnsupported Features (as of now)\n--------------------------------\n\nThe following features are yet to be implemented in objectjson:\n- Instantiation with Python 2.x unicode strings\n- The ability to set properties using something like :code:`json_obj.test.b.c=30` (as per the object in the 'usage' section)\n\n\nInstallation\n------------\n\nTo install objectjson, simply:\n\n.. code-block:: bash\n\n    $ pip install objectjson\n\nAttribution\n-----------\n\nThis project is based on a code sample found on\nhttp://ideone.com/O6KGB3, but modified for Python 3 compatibility. The\nsite above does not provide any reference to the author of the code. If\nthis is your project, please let me know so I can give you the credit\nyou deserve and add you as a contributor to this project. In the mean\ntime, I've put this code up on `Github`_ and `PyPi`_ so that it may be\nprogramatically imported and used in projects.\n\nContribute\n----------\n\nFeel free to:\n- open issues for bugs you've noticed or enhancements you'd like to see\n- fork `the repository`_ to start working on open issues (pls also submit tests that demonstrate that the issue can be closed)\n- volunteer to improve the documentation\n\n\n.. _`the repository`: http://github.com/abmohan/objectjson\n.. _`Github`: http://github.com/abmohan/objectjson\n.. _`PyPi`: https://pypi.python.org/pypi/objectjson\n\n\n.. :changelog:\n\nRelease History\n---------------\n\n0.1.3 (2014-10-05)\n++++++++++++++++++\n* Added rst files to MANIFEST.in (Issue #5)\n* Minor updates to README\n\n0.1.2 (2014-10-05)\n++++++++++++++++++\n* Converted README.md file to README.rst (Issue #4)\n* Added title, version, author, and license attributes and other details to __init__.py\n* Converted CHANGES.txt file to a more detailed HISTORY.rst\n\n0.1.1 (2014-10-05)\n++++++++++++++++++\n* Fixed pip install error (Issue #2)\n\n0.1 (2014-10-04)\n++++++++++++++++\n* Initial release\n* The class will use Python's getattr function to allow you to recursively access deserialized JSON objects as if they were regular Python objects", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/abmohan/objectjson/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/abmohan/objectjson", "keywords": "json", "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "objectjson", "package_url": "https://pypi.org/project/objectjson/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/objectjson/", "project_urls": {"Download": "https://github.com/abmohan/objectjson/tarball/master", "Homepage": "https://github.com/abmohan/objectjson"}, "release_url": "https://pypi.org/project/objectjson/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "A python tool to create Python objects from large, complicated JSON objects. Dictionaries are great and all, but large nested ones can get tedious.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/objectjson\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1e586a787ab1670f5e943ed594477d394eeb99c9/68747470733a2f2f62616467652e667572792e696f2f70792f6f626a6563746a736f6e2e706e67\"></a>\n<a href=\"https://crate.io/packages/objectjson/\" rel=\"nofollow\"><img alt=\"Number of PyPI downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/408fba219e9110822bbfdda74eef099d6ecb8c1b/68747470733a2f2f70797069702e696e2f642f6f626a6563746a736f6e2f62616467652e706e67\"></a>\n<p>ObjectJSON is a tool to create Python objects from large, complicated JSON\nobjects.</p>\n<p>Dictionaries are great and all, but large nested ones can get tedious. objectjson will use Python\u2019s getattr function to allow you to recursively access deserialized JSON objects as if they were regular Python objects.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Instantiate ObjectJSON with a string or dictionary and read from it as you would any other python object.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">objectjson</span> <span class=\"kn\">import</span> <span class=\"n\">ObjectJSON</span>\n\n<span class=\"n\">json_str</span> <span class=\"o\">=</span> <span class=\"s1\">'{ \"test\": {\"a\":1,\"b\": {\"c\":3} } }'</span>\n\n<span class=\"n\">json_obj</span> <span class=\"o\">=</span> <span class=\"n\">ObjectJSON</span><span class=\"p\">(</span><span class=\"n\">json_str</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json_obj</span><span class=\"p\">)</span>           <span class=\"c1\"># {'test': {'b': {'c': 3}, 'a': 1}}</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json_obj</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">)</span>      <span class=\"c1\"># {'b': {'c': 3}, 'a': 1}</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json_obj</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"p\">)</span>    <span class=\"c1\"># 1</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json_obj</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">c</span><span class=\"p\">)</span>  <span class=\"c1\"># 3</span>\n</pre>\n</div>\n<div id=\"unsupported-features-as-of-now\">\n<h2>Unsupported Features (as of now)</h2>\n<p>The following features are yet to be implemented in objectjson:\n- Instantiation with Python 2.x unicode strings\n- The ability to set properties using something like <code>json_obj.test.b.c=30</code> (as per the object in the \u2018usage\u2019 section)</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install objectjson, simply:</p>\n<pre>$ pip install objectjson\n</pre>\n</div>\n<div id=\"attribution\">\n<h2>Attribution</h2>\n<p>This project is based on a code sample found on\n<a href=\"http://ideone.com/O6KGB3\" rel=\"nofollow\">http://ideone.com/O6KGB3</a>, but modified for Python 3 compatibility. The\nsite above does not provide any reference to the author of the code. If\nthis is your project, please let me know so I can give you the credit\nyou deserve and add you as a contributor to this project. In the mean\ntime, I\u2019ve put this code up on <a href=\"http://github.com/abmohan/objectjson\" rel=\"nofollow\">Github</a> and <a href=\"https://pypi.python.org/pypi/objectjson\" rel=\"nofollow\">PyPi</a> so that it may be\nprogramatically imported and used in projects.</p>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>Feel free to:\n- open issues for bugs you\u2019ve noticed or enhancements you\u2019d like to see\n- fork <a href=\"http://github.com/abmohan/objectjson\" rel=\"nofollow\">the repository</a> to start working on open issues (pls also submit tests that demonstrate that the issue can be closed)\n- volunteer to improve the documentation</p>\n</div>\n<div id=\"release-history\">\n<h2>Release History</h2>\n<div id=\"id1\">\n<h3>0.1.3 (2014-10-05)</h3>\n<ul>\n<li>Added rst files to MANIFEST.in (Issue #5)</li>\n<li>Minor updates to README</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.2 (2014-10-05)</h3>\n<ul>\n<li>Converted README.md file to README.rst (Issue #4)</li>\n<li>Added title, version, author, and license attributes and other details to __init__.py</li>\n<li>Converted CHANGES.txt file to a more detailed HISTORY.rst</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.1 (2014-10-05)</h3>\n<ul>\n<li>Fixed pip install error (Issue #2)</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1 (2014-10-04)</h3>\n<ul>\n<li>Initial release</li>\n<li>The class will use Python\u2019s getattr function to allow you to recursively access deserialized JSON objects as if they were regular Python objects</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1248922, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "713b8c63462ea79ecb3df21dcd9a8bef", "sha256": "e957deec59911ffb92f21d88eb3428f20b6309f30359034dbf5a3509023a28ed"}, "downloads": -1, "filename": "objectjson-0.1.tar.gz", "has_sig": false, "md5_digest": "713b8c63462ea79ecb3df21dcd9a8bef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1862, "upload_time": "2014-10-05T03:34:13", "upload_time_iso_8601": "2014-10-05T03:34:13.435485Z", "url": "https://files.pythonhosted.org/packages/28/de/63868a9e25653942774b5501c6a0907fc5fbce81eb2eaef237dc3cf93e70/objectjson-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "32cf5f8d29160aeced4b1b2f40bc35ca", "sha256": "de1d77107e3dcdde78512f9b1dd26318b82c7eb543c9dabb688a3ae4e788d91f"}, "downloads": -1, "filename": "objectjson-0.1.1.tar.gz", "has_sig": false, "md5_digest": "32cf5f8d29160aeced4b1b2f40bc35ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6100, "upload_time": "2014-10-05T05:13:13", "upload_time_iso_8601": "2014-10-05T05:13:13.839692Z", "url": "https://files.pythonhosted.org/packages/ea/31/7971bf8622623bb17af29be11ed906fae2eb5f990a61d79be8a325d228f0/objectjson-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ea6f49e2f1d3a7a371674f1e961d722d", "sha256": "7cd5e010c818cc5bef4de1e419881f3fcdf1656996926c83f5f87e950b119269"}, "downloads": -1, "filename": "objectjson-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ea6f49e2f1d3a7a371674f1e961d722d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7150, "upload_time": "2014-10-05T23:47:26", "upload_time_iso_8601": "2014-10-05T23:47:26.662816Z", "url": "https://files.pythonhosted.org/packages/5d/e7/53e1c35593da1e7f2207afadd2bfc6f159c41fbd2d2149b20715afc3ed0f/objectjson-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "003b65f2b83d8b0423a9ec4e411e8b85", "sha256": "e2b4ba80c12d75b86d2cc5588b7a4e770d0d14749db334d9323a392abe64a2bb"}, "downloads": -1, "filename": "objectjson-0.1.3.tar.gz", "has_sig": false, "md5_digest": "003b65f2b83d8b0423a9ec4e411e8b85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7198, "upload_time": "2014-10-06T00:19:26", "upload_time_iso_8601": "2014-10-06T00:19:26.526375Z", "url": "https://files.pythonhosted.org/packages/c1/3c/c29bee8ab9aa2ce25968028bf4e22a19fbb745fa6b25aa80d1a10d6fa57b/objectjson-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "003b65f2b83d8b0423a9ec4e411e8b85", "sha256": "e2b4ba80c12d75b86d2cc5588b7a4e770d0d14749db334d9323a392abe64a2bb"}, "downloads": -1, "filename": "objectjson-0.1.3.tar.gz", "has_sig": false, "md5_digest": "003b65f2b83d8b0423a9ec4e411e8b85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7198, "upload_time": "2014-10-06T00:19:26", "upload_time_iso_8601": "2014-10-06T00:19:26.526375Z", "url": "https://files.pythonhosted.org/packages/c1/3c/c29bee8ab9aa2ce25968028bf4e22a19fbb745fa6b25aa80d1a10d6fa57b/objectjson-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:49 2020"}