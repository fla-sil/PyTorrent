{"info": {"author": "Mozilla Services", "author_email": "services-dev@mozilla.org", "bugtrack_url": null, "classifiers": ["Framework :: Pylons", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP"], "description": "==============\npyramid_ipauth\n==============\n\nAn authentication policy for Pyramid that sets identity and effective\nprincipals based on the remote IP address of the request.\n\n\nOverview\n========\n\nTo perform IP-address-based authentication, create an IPAuthenticationPolicy\nand specify the target IP range, userid and effective principals.  Then set it\nas the authentication policy in your configurator::\n\n    authn_policy = IPAuthenticationPolicy(\"127.0.*.*\", \"myuser\", [\"locals\"])\n    config.set_authentication_policy(authn_policy)\n\nThis will cause all requests from IP addresses in the 127.0.*.* range to be\nauthenticated as user \"myuser\" and have the effective principal \"locals\".\n\nIt is also possible to specify the configuration options in your deployment\nfile::\n\n    [app:pyramidapp]\n    use = egg:mypyramidapp\n\n    ipauth.ipaddrs = 127.0.0.* 127.0.1.*\n    ipauth.principals = locals\n\nYou can then simply include the pyramid_ipauth package into your configurator::\n\n    config.include(\"pyramid_ipauth\")\n\nIt will detect the ipauth settings and construct an appropriate policy.\n\nNote that this package only supports matching against a single set of IP\naddresss.  If you need to assign different credentials to different sets\nof IP addresses, you can use the pyramid_multiauth package in conjunction\nwith pyramid_ipauth:\n\n    http://github.com/mozilla-services/pyramid_multiauth\n\nIf you don't want to hard-code the userid or principals at configuration time,\nyou may specify a \"get_userid\" and/or \"get_principals\" callback instead.\n\n\nSpecifying IP Addresses\n=======================\n\nIP addresses can be specified in a variety of forms, including:\n\n    * \"all\":        all possible IPv4 and IPv6 addresses\n    * \"local\":      all local addresses of the machine\n    * \"A.B.C.D\"     a single IP address\n    * \"A.B.C.D/N\"   a network address specification\n    * \"A.B.C.*\"     a glob matching against all possible numbers\n    * \"A.B.C.D-E\"   a glob matching against a range of numbers\n    * a whitespace- or comma-separated string of any of the above\n    * a netaddr IPAddress, IPRange, IPGlob, IPNetork of IPSet object\n    * a list, tuple or iterable of any of the above\n\n\nProxies\n=======\n\nThis module does not respect the X-Forwarded-For header by default, since it\ncan be spoofed easily by malicious clients.  If your server is behind a \ntrusted proxy that sets the X-Forwarded-For header, you should explicitly\ndeclare the set of trusted proxies like so::\n\n    IPAuthenticationPolicy(\"127.0.*.*\",\n                           principals=[\"local\"],\n                           proxies = \"127.0.0.1\")\n\nThe set of trusted proxy addresses can be specified using the same syntax as\nthe set of IP addresses to authenticate.\n\n\n0.3.3 - 2017-02-02\n==================\n\n- Fix splitting ipset strings on whitespace; thanks @kaleposhobios\n\n0.3.2 - 2017-01-22\n==================\n\n- Resolve some warnings and clean up some tests; thanks Scott Searcy\n\n0.3.1 - 2016-03-18\n==================\n\n- Fixes for python3 compatibility\n\n0.3.0 - 2016-03-18\n==================\n\n- Add support for python3\n\n\n0.2.0 - 2013-10-14\n==================\n\n- Add get_userid and get_principals callback functions; thanks mrijken\n- Convert principals into a list if necessary; thanks janakj\n\n\n0.1.1 - 2012-01-30\n==================\n\n- Update license to MPL 2.0\n\n\n0.1.0 - 2011-11-11\n==================\n\n- Initial release\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mozilla-services/pyramid_ipauth", "keywords": "web pyramid pylons authentication", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyramid_ipauth", "package_url": "https://pypi.org/project/pyramid_ipauth/", "platform": "", "project_url": "https://pypi.org/project/pyramid_ipauth/", "project_urls": {"Homepage": "https://github.com/mozilla-services/pyramid_ipauth"}, "release_url": "https://pypi.org/project/pyramid_ipauth/0.3.3/", "requires_dist": null, "requires_python": "", "summary": "pyramid_ipauth", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An authentication policy for Pyramid that sets identity and effective\nprincipals based on the remote IP address of the request.</p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>To perform IP-address-based authentication, create an IPAuthenticationPolicy\nand specify the target IP range, userid and effective principals.  Then set it\nas the authentication policy in your configurator:</p>\n<pre>authn_policy = IPAuthenticationPolicy(\"127.0.*.*\", \"myuser\", [\"locals\"])\nconfig.set_authentication_policy(authn_policy)\n</pre>\n<p>This will cause all requests from IP addresses in the 127.0.*.* range to be\nauthenticated as user \u201cmyuser\u201d and have the effective principal \u201clocals\u201d.</p>\n<p>It is also possible to specify the configuration options in your deployment\nfile:</p>\n<pre>[app:pyramidapp]\nuse = egg:mypyramidapp\n\nipauth.ipaddrs = 127.0.0.* 127.0.1.*\nipauth.principals = locals\n</pre>\n<p>You can then simply include the pyramid_ipauth package into your configurator:</p>\n<pre>config.include(\"pyramid_ipauth\")\n</pre>\n<p>It will detect the ipauth settings and construct an appropriate policy.</p>\n<p>Note that this package only supports matching against a single set of IP\naddresss.  If you need to assign different credentials to different sets\nof IP addresses, you can use the pyramid_multiauth package in conjunction\nwith pyramid_ipauth:</p>\n<blockquote>\n<a href=\"http://github.com/mozilla-services/pyramid_multiauth\" rel=\"nofollow\">http://github.com/mozilla-services/pyramid_multiauth</a></blockquote>\n<p>If you don\u2019t want to hard-code the userid or principals at configuration time,\nyou may specify a \u201cget_userid\u201d and/or \u201cget_principals\u201d callback instead.</p>\n</div>\n<div id=\"specifying-ip-addresses\">\n<h2>Specifying IP Addresses</h2>\n<p>IP addresses can be specified in a variety of forms, including:</p>\n<blockquote>\n<ul>\n<li>\u201call\u201d:        all possible IPv4 and IPv6 addresses</li>\n<li>\u201clocal\u201d:      all local addresses of the machine</li>\n<li>\u201cA.B.C.D\u201d     a single IP address</li>\n<li>\u201cA.B.C.D/N\u201d   a network address specification</li>\n<li>\u201cA.B.C.*\u201d     a glob matching against all possible numbers</li>\n<li>\u201cA.B.C.D-E\u201d   a glob matching against a range of numbers</li>\n<li>a whitespace- or comma-separated string of any of the above</li>\n<li>a netaddr IPAddress, IPRange, IPGlob, IPNetork of IPSet object</li>\n<li>a list, tuple or iterable of any of the above</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"proxies\">\n<h2>Proxies</h2>\n<p>This module does not respect the X-Forwarded-For header by default, since it\ncan be spoofed easily by malicious clients.  If your server is behind a\ntrusted proxy that sets the X-Forwarded-For header, you should explicitly\ndeclare the set of trusted proxies like so:</p>\n<pre>IPAuthenticationPolicy(\"127.0.*.*\",\n                       principals=[\"local\"],\n                       proxies = \"127.0.0.1\")\n</pre>\n<p>The set of trusted proxy addresses can be specified using the same syntax as\nthe set of IP addresses to authenticate.</p>\n</div>\n<div id=\"id1\">\n<h2>0.3.3 - 2017-02-02</h2>\n<ul>\n<li>Fix splitting ipset strings on whitespace; thanks @kaleposhobios</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.3.2 - 2017-01-22</h2>\n<ul>\n<li>Resolve some warnings and clean up some tests; thanks Scott Searcy</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>0.3.1 - 2016-03-18</h2>\n<ul>\n<li>Fixes for python3 compatibility</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>0.3.0 - 2016-03-18</h2>\n<ul>\n<li>Add support for python3</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h2>0.2.0 - 2013-10-14</h2>\n<ul>\n<li>Add get_userid and get_principals callback functions; thanks mrijken</li>\n<li>Convert principals into a list if necessary; thanks janakj</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h2>0.1.1 - 2012-01-30</h2>\n<ul>\n<li>Update license to MPL 2.0</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h2>0.1.0 - 2011-11-11</h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2613288, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "52f69eeba7a779bf30a58f37a9f55c09", "sha256": "ef3d31ed11e026d52345270e0e2d096e06ad6dc9d8e52b8a26c90cc266c608cf"}, "downloads": -1, "filename": "pyramid_ipauth-0.1.0.tar.gz", "has_sig": false, "md5_digest": "52f69eeba7a779bf30a58f37a9f55c09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8123, "upload_time": "2011-11-11T03:13:50", "upload_time_iso_8601": "2011-11-11T03:13:50.485284Z", "url": "https://files.pythonhosted.org/packages/7d/5b/a6fea65bdd28e18c7a69e69880e63a5efa9ec42ea7a3d80f662750849f95/pyramid_ipauth-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "547c46d79fd8659335474cef6bc85109", "sha256": "8c8e5dea75838cd4155a43c80a3fa485959f62104fadd9a7c944f7fb96254d9d"}, "downloads": -1, "filename": "pyramid_ipauth-0.1.1.tar.gz", "has_sig": false, "md5_digest": "547c46d79fd8659335474cef6bc85109", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7549, "upload_time": "2012-01-30T01:47:32", "upload_time_iso_8601": "2012-01-30T01:47:32.118834Z", "url": "https://files.pythonhosted.org/packages/55/98/ed52be56fdbf455f2ceee453697aad4fdccf36693efe1e0c32bf18597272/pyramid_ipauth-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "00c88dffc18784707c00c19f8debbb70", "sha256": "668762d71669f97de32546a21a81eea4d5cca2875cd7af63d48af06e1c7b1a55"}, "downloads": -1, "filename": "pyramid_ipauth-0.2.0.tar.gz", "has_sig": false, "md5_digest": "00c88dffc18784707c00c19f8debbb70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8869, "upload_time": "2013-10-13T23:14:51", "upload_time_iso_8601": "2013-10-13T23:14:51.729258Z", "url": "https://files.pythonhosted.org/packages/57/e4/78b1a9b5f4a19753f29360c89603ac414f2c30d3144a99767f6643c58683/pyramid_ipauth-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "ba2428f85df4981987778c4b60bd5941", "sha256": "f5aae8196f7a110a6bf0652274fcb308fcdc8923073562e642497445fd83551f"}, "downloads": -1, "filename": "pyramid_ipauth-0.3.0.tar.gz", "has_sig": false, "md5_digest": "ba2428f85df4981987778c4b60bd5941", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9601, "upload_time": "2016-03-18T06:22:08", "upload_time_iso_8601": "2016-03-18T06:22:08.571515Z", "url": "https://files.pythonhosted.org/packages/e0/aa/983d0dbd8368dea32c100aff857a9a588d841a365dfc50001fa14a73cc67/pyramid_ipauth-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "cdbe72a6587688ed1101195a92dd5578", "sha256": "beb28435815601a864ba9e7b8308080d896120e2a6e6db82e7f34dfdaaed1597"}, "downloads": -1, "filename": "pyramid_ipauth-0.3.1.tar.gz", "has_sig": false, "md5_digest": "cdbe72a6587688ed1101195a92dd5578", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9619, "upload_time": "2016-09-19T22:02:56", "upload_time_iso_8601": "2016-09-19T22:02:56.617980Z", "url": "https://files.pythonhosted.org/packages/4d/e7/4a6b17f007ff99bc427379318621452e98ff3951017eeeef9630b69c8a40/pyramid_ipauth-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "af7dd9e29f5d1a5a5200f47e835b37ae", "sha256": "a566746b3d58f9ab23ff077d84b104b1d65c6140a77f8327a90b7b5d6f8a6401"}, "downloads": -1, "filename": "pyramid_ipauth-0.3.2.tar.gz", "has_sig": false, "md5_digest": "af7dd9e29f5d1a5a5200f47e835b37ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9755, "upload_time": "2017-01-23T05:22:25", "upload_time_iso_8601": "2017-01-23T05:22:25.702023Z", "url": "https://files.pythonhosted.org/packages/df/df/eeb7d3f1e8074373bdc6e8e65241bdc6497c2b243cbec91fb53c3b04bb54/pyramid_ipauth-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "fcf225f3ec62bd28c4222aa7b304cfe9", "sha256": "1e1024488ae904b176397522cae7d246a73e3989c0a39c7e3114ecedcfb63363"}, "downloads": -1, "filename": "pyramid_ipauth-0.3.3.tar.gz", "has_sig": false, "md5_digest": "fcf225f3ec62bd28c4222aa7b304cfe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9921, "upload_time": "2017-02-02T02:28:04", "upload_time_iso_8601": "2017-02-02T02:28:04.791402Z", "url": "https://files.pythonhosted.org/packages/67/df/81d0b0c58761b4f93f2d0337f27a8565d3e761a7ed4ecd4571b80f125c60/pyramid_ipauth-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fcf225f3ec62bd28c4222aa7b304cfe9", "sha256": "1e1024488ae904b176397522cae7d246a73e3989c0a39c7e3114ecedcfb63363"}, "downloads": -1, "filename": "pyramid_ipauth-0.3.3.tar.gz", "has_sig": false, "md5_digest": "fcf225f3ec62bd28c4222aa7b304cfe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9921, "upload_time": "2017-02-02T02:28:04", "upload_time_iso_8601": "2017-02-02T02:28:04.791402Z", "url": "https://files.pythonhosted.org/packages/67/df/81d0b0c58761b4f93f2d0337f27a8565d3e761a7ed4ecd4571b80f125c60/pyramid_ipauth-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:25 2020"}