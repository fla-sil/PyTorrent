{"info": {"author": "David Shriver", "author_email": "dls2fc@virginia.edu", "bugtrack_url": null, "classifiers": [], "description": "# Deep Neural Network Verification Toolbox\n\nTools for verification and analysis of deep neural networks. \nWatch our [demo video](https://youtu.be/M5G_OWfCF2o) for a quick description!\n\n## Getting Started\n\nFor more detailed instructions, see our [documentation](https://dnnv.readthedocs.io/en/latest/).\n\n### Installation\n\nClone this network:\n\n```bash\n$ git clone https://github.com/dlshriver/DNNV.git\n```\n\nCreate a python virtual environment for this project:\n\n```bash\n$ ./manage.sh init\n```\n\nTo activate the virtual environment and set environment variables correctly for tools installed using the provided `manage.sh` script, run:\n\n```bash\n$ . .env.d/openenv.sh\n```\n\nInstall any of the supported verifiers ([Reluplex](https://github.com/guykatzz/ReluplexCav2017), [planet](https://github.com/progirep/planet), [MIPVerify.jl](https://github.com/vtjeng/MIPVerify.jl), [Neurify](https://github.com/tcwangshiqi-columbia/Neurify), [ERAN](https://github.com/eth-sri/eran)):\n\n```bash\n$ ./manage.sh install reluplex planet mipverify neurify eran\n```\n\n**Make sure that the project environment is activated** when installing verifiers with the `manage.sh` script. Otherwise some tools may not install correctly.\n\nAdditionally, several verifiers make use of the [Gruobi solver](https://www.gurobi.com/). This should be installed automatically, but requires a license to be manually activated and available on the host machine. Academic licenses can be obtained for free from the [Gurobi website](https://user.gurobi.com/download/licenses/free-academic).\n\nFinally, planet has several additional requirements that currently must be installed separately before installation with `./manage.sh`: libglpk-dev, qt5-qmake, valgrind, libltdl-dev, protobuf-compiler.\n\n### Usage\n\nProperties are specified in our property DSL, extended from Python. A property specification can import python modules, and define variables. The only required component is the property expression, which must appear at the end of the file. An example of a local robustness property is shown below.\n\n```python\nfrom dnnv.properties import *\n\nN = Network(\"N\")\nx = Image(\"path/to/image\")\nepsilon = Parameter(\"epsilon\", float, default=1.0)\n\nForall(\n    x_,\n    Implies(\n        ((x - epsilon) < x_ < (x + epsilon)),\n        argmax(N(x_)) == argmax(N(x))),\n    ),\n)\n```\n\nTo check whether property holds for some network using the ERAN verifier, run:\n\n```bash\n$ python -m dnnv network.onnx property.prop --eran\n```\n\nAdditionally, if the property defines parameters, using the `Parameter` keyword, they can be specified on the command line using the option `--prop.PARAMETER_NAME`, where `PARAMETER_NAME` is the name of the parameter. For the property defined above, a value for `epsilon` can be provided with a command line option as follows:\n\n```bash\n$ python -m dnnv network.onnx property.prop --eran --prop.epsilon=2.0\n```\n\nA set of example networks and properties that can be run with DNNV are available [here](http://cs.virginia.edu/~dls2fc/eran_benchmark.tar.gz).\n\n## Contributing\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dlshriver/DNNV", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "dnnv", "package_url": "https://pypi.org/project/dnnv/", "platform": "", "project_url": "https://pypi.org/project/dnnv/", "project_urls": {"Homepage": "https://github.com/dlshriver/DNNV"}, "release_url": "https://pypi.org/project/dnnv/0.2.1/", "requires_dist": ["numpy==1.16.4", "onnx==1.6", "psutil==5.6.5", "scipy==1.3", "tensorflow==1.15", "keras==2.3", "sphinx ; extra == \"doc\"", "coverage==5.0 ; extra == \"test\"", "torch==1.3 ; extra == \"test\"", "torchvision==0.4 ; extra == \"test\""], "requires_python": ">=3.6", "summary": "dnnv - deep neural network verification", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Deep Neural Network Verification Toolbox</h1>\n<p>Tools for verification and analysis of deep neural networks.\nWatch our <a href=\"https://youtu.be/M5G_OWfCF2o\" rel=\"nofollow\">demo video</a> for a quick description!</p>\n<h2>Getting Started</h2>\n<p>For more detailed instructions, see our <a href=\"https://dnnv.readthedocs.io/en/latest/\" rel=\"nofollow\">documentation</a>.</p>\n<h3>Installation</h3>\n<p>Clone this network:</p>\n<pre>$ git clone https://github.com/dlshriver/DNNV.git\n</pre>\n<p>Create a python virtual environment for this project:</p>\n<pre>$ ./manage.sh init\n</pre>\n<p>To activate the virtual environment and set environment variables correctly for tools installed using the provided <code>manage.sh</code> script, run:</p>\n<pre>$ . .env.d/openenv.sh\n</pre>\n<p>Install any of the supported verifiers (<a href=\"https://github.com/guykatzz/ReluplexCav2017\" rel=\"nofollow\">Reluplex</a>, <a href=\"https://github.com/progirep/planet\" rel=\"nofollow\">planet</a>, <a href=\"https://github.com/vtjeng/MIPVerify.jl\" rel=\"nofollow\">MIPVerify.jl</a>, <a href=\"https://github.com/tcwangshiqi-columbia/Neurify\" rel=\"nofollow\">Neurify</a>, <a href=\"https://github.com/eth-sri/eran\" rel=\"nofollow\">ERAN</a>):</p>\n<pre>$ ./manage.sh install reluplex planet mipverify neurify eran\n</pre>\n<p><strong>Make sure that the project environment is activated</strong> when installing verifiers with the <code>manage.sh</code> script. Otherwise some tools may not install correctly.</p>\n<p>Additionally, several verifiers make use of the <a href=\"https://www.gurobi.com/\" rel=\"nofollow\">Gruobi solver</a>. This should be installed automatically, but requires a license to be manually activated and available on the host machine. Academic licenses can be obtained for free from the <a href=\"https://user.gurobi.com/download/licenses/free-academic\" rel=\"nofollow\">Gurobi website</a>.</p>\n<p>Finally, planet has several additional requirements that currently must be installed separately before installation with <code>./manage.sh</code>: libglpk-dev, qt5-qmake, valgrind, libltdl-dev, protobuf-compiler.</p>\n<h3>Usage</h3>\n<p>Properties are specified in our property DSL, extended from Python. A property specification can import python modules, and define variables. The only required component is the property expression, which must appear at the end of the file. An example of a local robustness property is shown below.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dnnv.properties</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"n\">Network</span><span class=\"p\">(</span><span class=\"s2\">\"N\"</span><span class=\"p\">)</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"s2\">\"path/to/image\"</span><span class=\"p\">)</span>\n<span class=\"n\">epsilon</span> <span class=\"o\">=</span> <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s2\">\"epsilon\"</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n<span class=\"n\">Forall</span><span class=\"p\">(</span>\n    <span class=\"n\">x_</span><span class=\"p\">,</span>\n    <span class=\"n\">Implies</span><span class=\"p\">(</span>\n        <span class=\"p\">((</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"n\">epsilon</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"n\">x_</span> <span class=\"o\">&lt;</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">epsilon</span><span class=\"p\">)),</span>\n        <span class=\"n\">argmax</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">(</span><span class=\"n\">x_</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"n\">argmax</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))),</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre>\n<p>To check whether property holds for some network using the ERAN verifier, run:</p>\n<pre>$ python -m dnnv network.onnx property.prop --eran\n</pre>\n<p>Additionally, if the property defines parameters, using the <code>Parameter</code> keyword, they can be specified on the command line using the option <code>--prop.PARAMETER_NAME</code>, where <code>PARAMETER_NAME</code> is the name of the parameter. For the property defined above, a value for <code>epsilon</code> can be provided with a command line option as follows:</p>\n<pre>$ python -m dnnv network.onnx property.prop --eran --prop.epsilon<span class=\"o\">=</span><span class=\"m\">2</span>.0\n</pre>\n<p>A set of example networks and properties that can be run with DNNV are available <a href=\"http://cs.virginia.edu/%7Edls2fc/eran_benchmark.tar.gz\" rel=\"nofollow\">here</a>.</p>\n<h2>Contributing</h2>\n\n          </div>"}, "last_serial": 6734940, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "266928675aec71d198cb9ae9da88ec8a", "sha256": "9224f58578c37bd03c976bc9bd403a2244f972aefb531b375457f1e1563bf374"}, "downloads": -1, "filename": "dnnv-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "266928675aec71d198cb9ae9da88ec8a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 51720, "upload_time": "2019-12-13T14:34:24", "upload_time_iso_8601": "2019-12-13T14:34:24.183994Z", "url": "https://files.pythonhosted.org/packages/f9/c0/4c17fc4cf35165ea3feeedbb794b4f1b34b1e33740a2510a7489f85d0a57/dnnv-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "176ffd9a7ed5536a7ad26371b4b224f8", "sha256": "39e2c1a6f3035fad118119596a08d45e1a395badaecc20849139952d1d2e17ba"}, "downloads": -1, "filename": "dnnv-0.0.1.tar.gz", "has_sig": false, "md5_digest": "176ffd9a7ed5536a7ad26371b4b224f8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 46377, "upload_time": "2019-12-13T14:34:38", "upload_time_iso_8601": "2019-12-13T14:34:38.433454Z", "url": "https://files.pythonhosted.org/packages/1b/5d/6b3ae49a8b2460561bce7465447575cef330db35c1ac7dcdee2db4907ceb/dnnv-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "d6b4e69bf234bc60d4f6b09d2ad17baa", "sha256": "99f83e995459b2aa3d9feb32ab32e0801e09830f5637ac92d1cb5717fd26870e"}, "downloads": -1, "filename": "dnnv-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d6b4e69bf234bc60d4f6b09d2ad17baa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 66602, "upload_time": "2020-02-03T14:07:56", "upload_time_iso_8601": "2020-02-03T14:07:56.204023Z", "url": "https://files.pythonhosted.org/packages/9d/a9/c86bc7aae928043d7904e40b22809d8d3b739bc7d6d5955bd2c16c637175/dnnv-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7fe75ff24f212f94afa288ef790865cd", "sha256": "b886f53f5f5b5ab8ea8bc8254d0d46cac27b530b69a1b02853e4a4c1bfecaec9"}, "downloads": -1, "filename": "dnnv-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7fe75ff24f212f94afa288ef790865cd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9109318, "upload_time": "2020-02-03T14:08:00", "upload_time_iso_8601": "2020-02-03T14:08:00.332962Z", "url": "https://files.pythonhosted.org/packages/a4/03/9138c8e7019f8e15da1fbcec7058f93e5d7d819a43626ed3de192407db1e/dnnv-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e9abab68f759e12e5349b490de717ae7", "sha256": "07698062ca8a3617843eb70406d666a2575ffd68189c3a184e2e7b4bb41288e8"}, "downloads": -1, "filename": "dnnv-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e9abab68f759e12e5349b490de717ae7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 68494, "upload_time": "2020-03-02T17:02:51", "upload_time_iso_8601": "2020-03-02T17:02:51.870642Z", "url": "https://files.pythonhosted.org/packages/4d/11/a4f0185073289679609a438b2895e652bb95d0eef0887c644640d7609ecb/dnnv-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5b5d24452d5607008821f83a84d1b4c", "sha256": "4858420d4dcf14e0178836c7c973b9ee4ebf2892631b807334b8d9d8dafde926"}, "downloads": -1, "filename": "dnnv-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d5b5d24452d5607008821f83a84d1b4c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9111582, "upload_time": "2020-03-02T17:02:57", "upload_time_iso_8601": "2020-03-02T17:02:57.632430Z", "url": "https://files.pythonhosted.org/packages/7b/1c/23f1a0adef927ee79c78cd198372ada6c6f13e4ce951ab918be8c03be582/dnnv-0.1.1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "b45a3e01c38c43eead1bdcdb05076b74", "sha256": "59beec435425e6c57ade8ba52b9fc08551e12d38e1c076817b6b7e1fa85516ae"}, "downloads": -1, "filename": "dnnv-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b45a3e01c38c43eead1bdcdb05076b74", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 68496, "upload_time": "2020-03-02T17:16:41", "upload_time_iso_8601": "2020-03-02T17:16:41.137858Z", "url": "https://files.pythonhosted.org/packages/4a/f1/fc578950eccc597ecdb2422d82410ed345d45ca5e720504fc083b32cc3d8/dnnv-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92e73b0f8bc9c16f6379c81212d34238", "sha256": "66e9c5bbac70feba1e79262d200c35b1d067dad49d9b1b724f8e259650d4a5e7"}, "downloads": -1, "filename": "dnnv-0.2.1.tar.gz", "has_sig": false, "md5_digest": "92e73b0f8bc9c16f6379c81212d34238", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9111584, "upload_time": "2020-03-02T17:16:45", "upload_time_iso_8601": "2020-03-02T17:16:45.358208Z", "url": "https://files.pythonhosted.org/packages/0a/3b/c0ed371fae8a3bf9c1c0c3ffc10cbe508ec59c7000baba59c34f0f594131/dnnv-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b45a3e01c38c43eead1bdcdb05076b74", "sha256": "59beec435425e6c57ade8ba52b9fc08551e12d38e1c076817b6b7e1fa85516ae"}, "downloads": -1, "filename": "dnnv-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b45a3e01c38c43eead1bdcdb05076b74", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 68496, "upload_time": "2020-03-02T17:16:41", "upload_time_iso_8601": "2020-03-02T17:16:41.137858Z", "url": "https://files.pythonhosted.org/packages/4a/f1/fc578950eccc597ecdb2422d82410ed345d45ca5e720504fc083b32cc3d8/dnnv-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92e73b0f8bc9c16f6379c81212d34238", "sha256": "66e9c5bbac70feba1e79262d200c35b1d067dad49d9b1b724f8e259650d4a5e7"}, "downloads": -1, "filename": "dnnv-0.2.1.tar.gz", "has_sig": false, "md5_digest": "92e73b0f8bc9c16f6379c81212d34238", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9111584, "upload_time": "2020-03-02T17:16:45", "upload_time_iso_8601": "2020-03-02T17:16:45.358208Z", "url": "https://files.pythonhosted.org/packages/0a/3b/c0ed371fae8a3bf9c1c0c3ffc10cbe508ec59c7000baba59c34f0f594131/dnnv-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:07 2020"}