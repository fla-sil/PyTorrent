{"info": {"author": "deepak", "author_email": "deepak@chopra.in", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "====\nohmr\n====\n\n.. image:: https://travis-ci.org/bninja/ohmr.png\n   :target: https://travis-ci.org/bninja/ohmr\n\n.. image:: https://coveralls.io/repos/bninja/ohmr/badge.png\n   :target: https://coveralls.io/r/bninja/ohmr\n\nFor generating, encoding and managing runtime trace ids. These are typically\nused to link side-effects:\n\n- db records\n- search documents\n- log entries\n- ...\n\nfor things like debugging, auditing, isolation, etc.\n\nGet it like:\n\n.. code:: bash\n\n   $ pip install ohmr\n\nFirst create a tracer e.g. like:\n\n.. code:: python\n\n    import coid\n    import ohmr\n    \n    trace = ohmr.Tracer(coid.Id(prefix='OHM-'))\n    \nThen use it, most likely at session begin/resume points, e.g. like:\n\n.. code:: python\n\n    import flask\n\n    app = flask.Flask('krazy_eyez_killah')\n    \n    @app.before_request\n    def set_trace_id()\n        trace.reset()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bninja/ohmr", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "ohmr", "package_url": "https://pypi.org/project/ohmr/", "platform": "any", "project_url": "https://pypi.org/project/ohmr/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/bninja/ohmr"}, "release_url": "https://pypi.org/project/ohmr/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Ids for guru meditation.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/bninja/ohmr\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/bninja/ohmr.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6fd914bafb7dcbb7700533315137e843eb45c950/68747470733a2f2f7472617669732d63692e6f72672f626e696e6a612f6f686d722e706e67\"></a>\n<a href=\"https://coveralls.io/r/bninja/ohmr\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/bninja/ohmr/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/500f6b15a7813729748ee4836cb23003de98b64d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f626e696e6a612f6f686d722f62616467652e706e67\"></a>\n<p>For generating, encoding and managing runtime trace ids. These are typically\nused to link side-effects:</p>\n<ul>\n<li>db records</li>\n<li>search documents</li>\n<li>log entries</li>\n<li>\u2026</li>\n</ul>\n<p>for things like debugging, auditing, isolation, etc.</p>\n<p>Get it like:</p>\n<pre>$ pip install ohmr\n</pre>\n<p>First create a tracer e.g. like:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">coid</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ohmr</span>\n\n<span class=\"n\">trace</span> <span class=\"o\">=</span> <span class=\"n\">ohmr</span><span class=\"o\">.</span><span class=\"n\">Tracer</span><span class=\"p\">(</span><span class=\"n\">coid</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">'OHM-'</span><span class=\"p\">))</span>\n</pre>\n<p>Then use it, most likely at session begin/resume points, e.g. like:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">flask</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"s1\">'krazy_eyez_killah'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">before_request</span>\n<span class=\"k\">def</span> <span class=\"nf\">set_trace_id</span><span class=\"p\">()</span>\n    <span class=\"n\">trace</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 1252524, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "3377267fd725ba6815472813b3103ebd", "sha256": "e8d7c78b15edcd17e1a8e8f52aa67d03fdbe7841481928ba87be004b324c33b3"}, "downloads": -1, "filename": "ohmr-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3377267fd725ba6815472813b3103ebd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1931, "upload_time": "2014-10-09T01:25:08", "upload_time_iso_8601": "2014-10-09T01:25:08.285515Z", "url": "https://files.pythonhosted.org/packages/bc/88/df97c45e84f0788cb61c35ce005b304b83ea3490dc1ec5162a9769e83a8c/ohmr-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3377267fd725ba6815472813b3103ebd", "sha256": "e8d7c78b15edcd17e1a8e8f52aa67d03fdbe7841481928ba87be004b324c33b3"}, "downloads": -1, "filename": "ohmr-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3377267fd725ba6815472813b3103ebd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1931, "upload_time": "2014-10-09T01:25:08", "upload_time_iso_8601": "2014-10-09T01:25:08.285515Z", "url": "https://files.pythonhosted.org/packages/bc/88/df97c45e84f0788cb61c35ce005b304b83ea3490dc1ec5162a9769e83a8c/ohmr-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:51 2020"}