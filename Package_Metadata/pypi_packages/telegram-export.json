{"info": {"author": "expectocode and Lonami", "author_email": "expectocode@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Programming Language :: Python :: 3"], "description": "telegram-export\n===============\n\n.. figure:: https://user-images.githubusercontent.com/15344581/43033282-3eff18fc-8ce5-11e8-9994-fd1de40268e1.png\n   :alt: Logo\n\nA tool to download Telegram data (users, chats, messages, and media)\ninto a database (and display the saved data).\n\n**Database schema:**\n\n.. figure:: https://user-images.githubusercontent.com/15344581/37377008-44c93d20-271f-11e8-8170-5d6071a21b8f.png\n   :alt: Schema image\n\nInstallation\n============\n\nThe simplest way is to run ``sudo pip3 install --upgrade telegram_export``,\nafter which telegram-export should simply be available as a command: ``telegram-export``\nin the terminal. That's it!\n\nIf you don't like using ``sudo pip``, you can use ``pip3 install --user telegram_export``,\nbut you'll have to add something like ``~/.local/bin/`` to your $PATH to get\nthe command available. If you don't want to add to PATH, you can also use\n``python3 -m telegram_export`` anywhere instead of ``telegram-export``. You'll\nhave a similar issue if you're using a virtualenv, but if you're using those\nyou probably know what you're doing anyway :)\n\nSlow downloads?\n---------------\n\nYou may also want to install ``cryptg`` with the same method for a speed\nboost when downloading media. Telegram requires a lot of encryption and\ndecryption and this can make downloading files especially slow unless\nusing a nice fast library like cryptg. One user reported a `speed\nincrease of\n1100% <https://github.com/expectocode/telegram-export/issues/29>`__.\n\nUsage\n=====\n\nFirst, copy config.ini.example (from GitHub) to ``~/.config/telegram-export/config.ini``\nand edit some values. You'll probably need to create this folder. To write your\nconfig whitelist, you may want to refer to the output of\n``telegram-export --list-dialogs`` to get dialog IDs or\n``telegram-export --search <query>`` to filter the results.\n\nThen run ``telegram-export`` and allow it to dump data.\n\nFull option listing:\n\n.. code::\n\n    usage: __main__.py [-h] [--list-dialogs] [--search-dialogs SEARCH_STRING]\n                       [--config-file CONFIG_FILE] [--contexts CONTEXTS]\n                       [--format {text,html}] [--download-past-media]\n\n    Download Telegram data (users, chats, messages, and media) into a database\n    (and display the saved data)\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --list-dialogs        list dialogs and exit\n      --search-dialogs SEARCH_STRING\n                            like --list-dialogs but searches for a dialog by\n                            name/username/phone\n      --config-file CONFIG_FILE\n                            specify a config file. Default config.ini\n      --contexts CONTEXTS   list of contexts to act on eg --contexts=12345,\n                            @username (see example config whitelist for full\n                            rules). Overrides whitelist/blacklist.\n      --format {text,html}  formats the dumped messages with the specified\n                            formatter and exits.\n      --download-past-media\n                            download past media instead of dumping new data (files\n                            that were seen before but not downloaded).\n\n\ntelegram-export vs `telegram-history-dump <https://github.com/tvdstaaij/telegram-history-dump>`__\n=================================================================================================\n\n    *(For brevity we'll just refer them to as \"export\" and \"dump\")*\n\n-  SQLite instead of jsonlines allows for far more powerful queries and\n   better efficiency but loses compatibility with text-manipulating UNIX\n   tools as the data is not stored as text (or even more powerful tools\n   like `jq <https://stedolan.github.io/jq/>`__).\n\n-  export's stored data is less complicated than dump's json dumps\n\n-  Support for saving the history of a person or other dialog, so you\n   can see e.g. what their name was over time.\n\n-  Using `telethon <https://github.com/LonamiWebs/Telethon>`__\n   instead of `tg-cli <https://github.com/vysheng/tg>`__ allows\n   support for newer Telegram features like pinned messages, admin logs,\n   user bios, first-class support for supergroups and avoids the\n   ``tg-cli`` bug which made dumping channels impossible, as well as\n   several other ``tg-cli`` annoyances (such as being somewhat harder to\n   install).\n\n-  Newer and less mature than dump\n\n-  No dedicated analysis program yet (dump has telegram-analysis and\n   pisg)\n\n-  Implemented features which dump does not support (incomplete list):\n\n   -  Admin logs\n   -  Dumping Users/Channels/Chats as their own entities, not just as\n      message metadata. This allows things like user bios, channel\n      descriptions and profile pictures.\n   -  Pinned messages (dump kind of supports this, but only by saving a\n      message replying to the pinned message with text 'pinned the\n      message')\n   -  Participant lists\n\n-  Closer interaction with the Telegram API theoretically allows big\n   speed improvements (Practical comparison of times soon\u2122)\n\n-  export's database file is bound to a user (like dump), and the\n   program will exit if you login as another person to avoid mixing\n   things up. If you do use export with multiple users, you should\n   specify a different database for each user. You can easily select\n   different config files through ``--config-file``.\n\nLimitations\n===========\n\n-  Still being worked on. It dumps things, but the schema may change and we\n   won't support old schema transitions.\n\n-  Relies on `Telethon <https://github.com/LonamiWebs/Telethon>`, which is still pre-1.0.\n\n-  Certain information is not dumped for simplicity's sake. For example,\n   edited messages won't be re-downloaded and there is currently no\n   support for multiple versions of a message in the db. However, this\n   shouldn't be much of an issue, since most edits or deletions are\n   legit and often to fix typos.\n\nWhat does it do? Is it a bot?\n=============================\n\nIt uses the Telegram API (what Telegram apps use), so it has access to\neverything a Telegram app can do. This is why you need an API ID and API\nhash to use it, and why one from Telegram Desktop will work. Since\nnormal clients need to download messages, media, users etc to display\nthem in-app, telegram-export can do the same, and save them into a nice\ndatabase.\n\nSo no, it's not really a bot, but it does use the same technology as\n**userbots** in order to work. As far as we know, it won't get you banned from\nusing Telegram or anything like that.\n\nInstallation from source\n========================\n\n``git clone`` this repository, then ``python3 setup.py install``. You should\nalso read through the `Installation`_ section for related notes.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/expectocode/telegram-export", "keywords": "Telegram messaging database", "license": "MPL 2.0", "maintainer": "", "maintainer_email": "", "name": "telegram-export", "package_url": "https://pypi.org/project/telegram-export/", "platform": "", "project_url": "https://pypi.org/project/telegram-export/", "project_urls": {"Bug Reports": "https://github.com/expectocode/telegram-export/issues", "Homepage": "https://github.com/expectocode/telegram-export", "Source": "https://github.com/expectocode/telegram-export"}, "release_url": "https://pypi.org/project/telegram-export/1.8.2/", "requires_dist": ["tqdm", "telethon (~=1.4.3)", "appdirs", "async-generator"], "requires_python": "", "summary": "A tool to download Telegram data (users, chats, messages, and media) into a database (and display the saved data).", "version": "1.8.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"telegram-export\">\n<h2>telegram-export</h2>\n<div>\n<img alt=\"Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/59b08080864774493fc60d8377a388d5339b04ed/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31353334343538312f34333033333238322d33656666313866632d386365352d313165382d393939342d6664316465343032363865312e706e67\">\n</div>\n<p>A tool to download Telegram data (users, chats, messages, and media)\ninto a database (and display the saved data).</p>\n<p><strong>Database schema:</strong></p>\n<div>\n<img alt=\"Schema image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/21240ebcbe47483bcba72bf3414889811072fd4f/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31353334343538312f33373337373030382d34346339336432302d323731662d313165382d383137302d3564363037316132316238662e706e67\">\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The simplest way is to run <tt>sudo pip3 install <span class=\"pre\">--upgrade</span> telegram_export</tt>,\nafter which telegram-export should simply be available as a command: <tt><span class=\"pre\">telegram-export</span></tt>\nin the terminal. That\u2019s it!</p>\n<p>If you don\u2019t like using <tt>sudo pip</tt>, you can use <tt>pip3 install <span class=\"pre\">--user</span> telegram_export</tt>,\nbut you\u2019ll have to add something like <tt><span class=\"pre\">~/.local/bin/</span></tt> to your $PATH to get\nthe command available. If you don\u2019t want to add to PATH, you can also use\n<tt>python3 <span class=\"pre\">-m</span> telegram_export</tt> anywhere instead of <tt><span class=\"pre\">telegram-export</span></tt>. You\u2019ll\nhave a similar issue if you\u2019re using a virtualenv, but if you\u2019re using those\nyou probably know what you\u2019re doing anyway :)</p>\n<div id=\"slow-downloads\">\n<h3>Slow downloads?</h3>\n<p>You may also want to install <tt>cryptg</tt> with the same method for a speed\nboost when downloading media. Telegram requires a lot of encryption and\ndecryption and this can make downloading files especially slow unless\nusing a nice fast library like cryptg. One user reported a <a href=\"https://github.com/expectocode/telegram-export/issues/29\" rel=\"nofollow\">speed\nincrease of\n1100%</a>.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>First, copy config.ini.example (from GitHub) to <tt><span class=\"pre\">~/.config/telegram-export/config.ini</span></tt>\nand edit some values. You\u2019ll probably need to create this folder. To write your\nconfig whitelist, you may want to refer to the output of\n<tt><span class=\"pre\">telegram-export</span> <span class=\"pre\">--list-dialogs</span></tt> to get dialog IDs or\n<tt><span class=\"pre\">telegram-export</span> <span class=\"pre\">--search</span> &lt;query&gt;</tt> to filter the results.</p>\n<p>Then run <tt><span class=\"pre\">telegram-export</span></tt> and allow it to dump data.</p>\n<p>Full option listing:</p>\n<pre>usage: __main__.py [-h] [--list-dialogs] [--search-dialogs SEARCH_STRING]\n                   [--config-file CONFIG_FILE] [--contexts CONTEXTS]\n                   [--format {text,html}] [--download-past-media]\n\nDownload Telegram data (users, chats, messages, and media) into a database\n(and display the saved data)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --list-dialogs        list dialogs and exit\n  --search-dialogs SEARCH_STRING\n                        like --list-dialogs but searches for a dialog by\n                        name/username/phone\n  --config-file CONFIG_FILE\n                        specify a config file. Default config.ini\n  --contexts CONTEXTS   list of contexts to act on eg --contexts=12345,\n                        @username (see example config whitelist for full\n                        rules). Overrides whitelist/blacklist.\n  --format {text,html}  formats the dumped messages with the specified\n                        formatter and exits.\n  --download-past-media\n                        download past media instead of dumping new data (files\n                        that were seen before but not downloaded).\n</pre>\n</div>\n<div id=\"telegram-export-vs-telegram-history-dump\">\n<h2>telegram-export vs <a href=\"https://github.com/tvdstaaij/telegram-history-dump\" rel=\"nofollow\">telegram-history-dump</a></h2>\n<blockquote>\n<em>(For brevity we\u2019ll just refer them to as \u201cexport\u201d and \u201cdump\u201d)</em></blockquote>\n<ul>\n<li>SQLite instead of jsonlines allows for far more powerful queries and\nbetter efficiency but loses compatibility with text-manipulating UNIX\ntools as the data is not stored as text (or even more powerful tools\nlike <a href=\"https://stedolan.github.io/jq/\" rel=\"nofollow\">jq</a>).</li>\n<li>export\u2019s stored data is less complicated than dump\u2019s json dumps</li>\n<li>Support for saving the history of a person or other dialog, so you\ncan see e.g. what their name was over time.</li>\n<li>Using <a href=\"https://github.com/LonamiWebs/Telethon\" rel=\"nofollow\">telethon</a>\ninstead of <a href=\"https://github.com/vysheng/tg\" rel=\"nofollow\">tg-cli</a> allows\nsupport for newer Telegram features like pinned messages, admin logs,\nuser bios, first-class support for supergroups and avoids the\n<tt><span class=\"pre\">tg-cli</span></tt> bug which made dumping channels impossible, as well as\nseveral other <tt><span class=\"pre\">tg-cli</span></tt> annoyances (such as being somewhat harder to\ninstall).</li>\n<li>Newer and less mature than dump</li>\n<li>No dedicated analysis program yet (dump has telegram-analysis and\npisg)</li>\n<li>Implemented features which dump does not support (incomplete list):<ul>\n<li>Admin logs</li>\n<li>Dumping Users/Channels/Chats as their own entities, not just as\nmessage metadata. This allows things like user bios, channel\ndescriptions and profile pictures.</li>\n<li>Pinned messages (dump kind of supports this, but only by saving a\nmessage replying to the pinned message with text \u2018pinned the\nmessage\u2019)</li>\n<li>Participant lists</li>\n</ul>\n</li>\n<li>Closer interaction with the Telegram API theoretically allows big\nspeed improvements (Practical comparison of times soon\u2122)</li>\n<li>export\u2019s database file is bound to a user (like dump), and the\nprogram will exit if you login as another person to avoid mixing\nthings up. If you do use export with multiple users, you should\nspecify a different database for each user. You can easily select\ndifferent config files through <tt><span class=\"pre\">--config-file</span></tt>.</li>\n</ul>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<ul>\n<li>Still being worked on. It dumps things, but the schema may change and we\nwon\u2019t support old schema transitions.</li>\n<li>Relies on <cite>Telethon &lt;https://github.com/LonamiWebs/Telethon&gt;</cite>, which is still pre-1.0.</li>\n<li>Certain information is not dumped for simplicity\u2019s sake. For example,\nedited messages won\u2019t be re-downloaded and there is currently no\nsupport for multiple versions of a message in the db. However, this\nshouldn\u2019t be much of an issue, since most edits or deletions are\nlegit and often to fix typos.</li>\n</ul>\n</div>\n<div id=\"what-does-it-do-is-it-a-bot\">\n<h2>What does it do? Is it a bot?</h2>\n<p>It uses the Telegram API (what Telegram apps use), so it has access to\neverything a Telegram app can do. This is why you need an API ID and API\nhash to use it, and why one from Telegram Desktop will work. Since\nnormal clients need to download messages, media, users etc to display\nthem in-app, telegram-export can do the same, and save them into a nice\ndatabase.</p>\n<p>So no, it\u2019s not really a bot, but it does use the same technology as\n<strong>userbots</strong> in order to work. As far as we know, it won\u2019t get you banned from\nusing Telegram or anything like that.</p>\n</div>\n<div id=\"installation-from-source\">\n<h2>Installation from source</h2>\n<p><tt>git clone</tt> this repository, then <tt>python3 setup.py install</tt>. You should\nalso read through the <a href=\"#installation\" rel=\"nofollow\">Installation</a> section for related notes.</p>\n</div>\n\n          </div>"}, "last_serial": 4777621, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d37be815f5c6118f178bea733743b1e4", "sha256": "18100a08dcc267f58ffbd781d03aca5beaea22b7df78b7bb4ef67b60be1ea235"}, "downloads": -1, "filename": "telegram_export-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d37be815f5c6118f178bea733743b1e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39379, "upload_time": "2018-03-11T03:35:30", "upload_time_iso_8601": "2018-03-11T03:35:30.036724Z", "url": "https://files.pythonhosted.org/packages/4a/82/cbcb98b0bb97f0e2a7b0f6fbc7eed1978b5ef0e68b1280198cf66bbb8106/telegram_export-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b8b51d9b4f35c210ba62ae28a3a31f77", "sha256": "5a702c459b1f2ef1d0fcc77415889664eb087cc788fdd3ff1bfece51a550a021"}, "downloads": -1, "filename": "telegram_export-0.1.1-py3.6.egg", "has_sig": false, "md5_digest": "b8b51d9b4f35c210ba62ae28a3a31f77", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 79532, "upload_time": "2018-03-14T00:29:56", "upload_time_iso_8601": "2018-03-14T00:29:56.159851Z", "url": "https://files.pythonhosted.org/packages/ad/bd/b49ef781d8601f2d6b7732bffae87026b84c6b9b2c2e9bf3628693ffb360/telegram_export-0.1.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6331b4f0efbc76851aee63856fb7c145", "sha256": "14398f5d2a641ec396ccc850ef3a560cd572e05d36f7d123439e9cded6643e59"}, "downloads": -1, "filename": "telegram_export-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6331b4f0efbc76851aee63856fb7c145", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 41125, "upload_time": "2018-03-14T00:34:01", "upload_time_iso_8601": "2018-03-14T00:34:01.577835Z", "url": "https://files.pythonhosted.org/packages/d8/b8/91a0767efd8a969e51922808ee11da84042c997dfd1a9bbc4d0d64f200a8/telegram_export-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d0ab9a3b832fb7414385ea0dcbd34e3c", "sha256": "4b411a405f4dbce90c3be2e96aecdc2238cb46607cec92e2f2094fe3d9618c36"}, "downloads": -1, "filename": "telegram_export-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d0ab9a3b832fb7414385ea0dcbd34e3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 41040, "upload_time": "2018-03-21T18:12:08", "upload_time_iso_8601": "2018-03-21T18:12:08.041157Z", "url": "https://files.pythonhosted.org/packages/2c/4c/2196bd55679b97b46bf018c6cb4b9b5739fd97d9001e9d1a9f4a32a7c7a3/telegram_export-0.1.2-py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "48c80dc8146d88e1cc47bbff9097f7a4", "sha256": "1c92526fbf4bb3fc31dd02c80166f0efbb9aedbee8db5bf95ac99e6547f8dcd2"}, "downloads": -1, "filename": "telegram_export-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "48c80dc8146d88e1cc47bbff9097f7a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 41850, "upload_time": "2018-04-05T17:09:26", "upload_time_iso_8601": "2018-04-05T17:09:26.540792Z", "url": "https://files.pythonhosted.org/packages/93/95/cd386f044f129e1f8ace082fa2c2de81a95885d3840ed88abffe217023f4/telegram_export-0.1.3-py3-none-any.whl", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "c3eb1e8007b5688196116174f1a6f4a1", "sha256": "53fded553e33eb9831b63202085efdd4511a7b628532519b5e4f5a0925c0f55d"}, "downloads": -1, "filename": "telegram_export-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c3eb1e8007b5688196116174f1a6f4a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 41840, "upload_time": "2018-04-10T21:35:58", "upload_time_iso_8601": "2018-04-10T21:35:58.033626Z", "url": "https://files.pythonhosted.org/packages/16/5a/2e6209c10b0b9e960f67f752a3e80dedb7e27352a45ca6bec2d29b06450d/telegram_export-0.1.4-py3-none-any.whl", "yanked": false}], "0.1.4.1": [{"comment_text": "", "digests": {"md5": "cf3ac2fbbc8d6bbab1928f90e438795e", "sha256": "4a4d84b717b2963e5ccbed2c1f43861dd36ee77f956ea1002302956aa4c00736"}, "downloads": -1, "filename": "telegram_export-0.1.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cf3ac2fbbc8d6bbab1928f90e438795e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38110, "upload_time": "2018-05-09T07:30:31", "upload_time_iso_8601": "2018-05-09T07:30:31.104480Z", "url": "https://files.pythonhosted.org/packages/2e/fb/38f9c497c8ecda65fe2946d1f4315bf736027b900df08835770e350bb5e6/telegram_export-0.1.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "329fd18d3f34dbdf9465c2b279c58f75", "sha256": "5b25fc91964270b7c90fe344cf9d41f40849bd185beb8235d3ff5ccdbaed819f"}, "downloads": -1, "filename": "telegram-export-0.1.4.1.tar.gz", "has_sig": false, "md5_digest": "329fd18d3f34dbdf9465c2b279c58f75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33383, "upload_time": "2018-05-09T07:30:32", "upload_time_iso_8601": "2018-05-09T07:30:32.594079Z", "url": "https://files.pythonhosted.org/packages/92/ca/b142acd648e59783843297665e6232fa2e1df82b11c22ae9d7e2e8aa7392/telegram-export-0.1.4.1.tar.gz", "yanked": false}], "0.1.4.2": [{"comment_text": "", "digests": {"md5": "ac5b0e3456e577862f87c6ed399bc63b", "sha256": "7230e8af392272dcc4ff1721f1d985805ebf628886ce5884f3c610ee0a301c1a"}, "downloads": -1, "filename": "telegram_export-0.1.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ac5b0e3456e577862f87c6ed399bc63b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38114, "upload_time": "2018-05-09T07:58:33", "upload_time_iso_8601": "2018-05-09T07:58:33.142494Z", "url": "https://files.pythonhosted.org/packages/31/28/7457662ef3ebfec9b5a0b1339a8b32a1767bbb0add13e8415956e8a31252/telegram_export-0.1.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57afc91118958b915d9a14d1033aaf8f", "sha256": "b82a2331172ae88dc9bcd217b73dfea43586a3190ab117169c82f75a68be3cc1"}, "downloads": -1, "filename": "telegram-export-0.1.4.2.tar.gz", "has_sig": false, "md5_digest": "57afc91118958b915d9a14d1033aaf8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33389, "upload_time": "2018-05-09T07:58:34", "upload_time_iso_8601": "2018-05-09T07:58:34.268592Z", "url": "https://files.pythonhosted.org/packages/22/0a/7451538a580e27feb456e62b2906deb7a21ba790d869931e486f30d093ab/telegram-export-0.1.4.2.tar.gz", "yanked": false}], "0.1.4.3": [{"comment_text": "", "digests": {"md5": "9f0882d5884668a9c173d3d9a1d0efa1", "sha256": "a41276ad4212b2880929bfa7c8e1535775f7be7419174e31d7d865e9f0004d38"}, "downloads": -1, "filename": "telegram_export-0.1.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9f0882d5884668a9c173d3d9a1d0efa1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38206, "upload_time": "2018-05-10T08:14:03", "upload_time_iso_8601": "2018-05-10T08:14:03.369678Z", "url": "https://files.pythonhosted.org/packages/ef/fa/49ea93c4ec3705e831c7de4bc41291890ec1b0bde2ad4078bbf5ca8ed12f/telegram_export-0.1.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18fc348165ba25042132e17dda02624e", "sha256": "f4b9e13c273e7968898abbf092e8376856bef2bafd51b1e93abd40fddcc27c11"}, "downloads": -1, "filename": "telegram-export-0.1.4.3.tar.gz", "has_sig": false, "md5_digest": "18fc348165ba25042132e17dda02624e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33469, "upload_time": "2018-05-10T08:14:05", "upload_time_iso_8601": "2018-05-10T08:14:05.307959Z", "url": "https://files.pythonhosted.org/packages/bf/c6/3ed049113c4e6c17f119246ef78a77fa1ea6b879f8262cde210e5ca0929b/telegram-export-0.1.4.3.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "25c746b88e94da1d8790729d64bfdf32", "sha256": "f7d228583f9aba24e87e4eff800c37f44ba919adba6156e1f713610d4c3329c3"}, "downloads": -1, "filename": "telegram_export-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "25c746b88e94da1d8790729d64bfdf32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 43152, "upload_time": "2018-06-06T20:07:37", "upload_time_iso_8601": "2018-06-06T20:07:37.186399Z", "url": "https://files.pythonhosted.org/packages/1f/26/c9aa031fb7562fe9032f3cc2d76cb95f81561b562fcecfa7b62a3cef91b7/telegram_export-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fbc8c3b773b5cee93614f59e77b474f", "sha256": "27e5026aaf7b07a81d7e54fb01b47b490904e0d93148a99878e5f02efb8c485a"}, "downloads": -1, "filename": "telegram-export-0.1.5.tar.gz", "has_sig": false, "md5_digest": "8fbc8c3b773b5cee93614f59e77b474f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34343, "upload_time": "2018-06-06T20:07:45", "upload_time_iso_8601": "2018-06-06T20:07:45.900759Z", "url": "https://files.pythonhosted.org/packages/fd/b3/a14b591e4ba824836ad3133391e3cf4a2b3ec08dafe686513a5687a45b58/telegram-export-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "ff9058630038d55bb89c4b7aca01457c", "sha256": "b2dadcb7d40acf7ca188b9b6d080f497b366ff710fb8393323b418e45db980d5"}, "downloads": -1, "filename": "telegram-export-0.1.6.tar.gz", "has_sig": false, "md5_digest": "ff9058630038d55bb89c4b7aca01457c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34401, "upload_time": "2018-06-17T13:56:19", "upload_time_iso_8601": "2018-06-17T13:56:19.553064Z", "url": "https://files.pythonhosted.org/packages/d7/52/86293a2e1d959a860550e9818a9234a93cc4394c9fc350616ef77d01ea83/telegram-export-0.1.6.tar.gz", "yanked": false}], "1.7": [{"comment_text": "", "digests": {"md5": "3746f37eb6b6609568acdc8518fbcba4", "sha256": "acc25eb32fe383618127500393c6a975dbb8671a49488d0fbe96602c6fa70069"}, "downloads": -1, "filename": "telegram_export-1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "3746f37eb6b6609568acdc8518fbcba4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39425, "upload_time": "2018-07-14T17:39:57", "upload_time_iso_8601": "2018-07-14T17:39:57.837658Z", "url": "https://files.pythonhosted.org/packages/87/a0/4616b6ae21abe988b434e6b93e11ef1dcb0527d01714bf66b53c74cbe053/telegram_export-1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b826e63b254a00a0a59a655db91a31f", "sha256": "0a80b7a43c9472c36803f91c27580abb74199fde30b6384c98dd56b9901d545c"}, "downloads": -1, "filename": "telegram-export-1.7.tar.gz", "has_sig": false, "md5_digest": "3b826e63b254a00a0a59a655db91a31f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34557, "upload_time": "2018-07-14T17:41:27", "upload_time_iso_8601": "2018-07-14T17:41:27.762951Z", "url": "https://files.pythonhosted.org/packages/a3/cf/67565e5feb2a25aaceb59932c5a0ccbfe8f35a7795187988b799b4f92d15/telegram-export-1.7.tar.gz", "yanked": false}], "1.8": [{"comment_text": "", "digests": {"md5": "d0ff78681876e429de543c421e97641f", "sha256": "30a0ec53a912cab29fb4cc64d3f76f2672b8d06d5d76ee8d7ba1de4b2277a209"}, "downloads": -1, "filename": "telegram_export-1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "d0ff78681876e429de543c421e97641f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39471, "upload_time": "2018-12-18T20:00:42", "upload_time_iso_8601": "2018-12-18T20:00:42.571343Z", "url": "https://files.pythonhosted.org/packages/5c/80/334fa49556d82bd1217192a7e7c48c2f0ce86c5b00d7f34c90c29639b30d/telegram_export-1.8-py3-none-any.whl", "yanked": false}], "1.8.1": [{"comment_text": "", "digests": {"md5": "5ec1a2be30a7ac27ab2234946bdf21d0", "sha256": "abcc99740a02d82a8a28c11bcc1eec125993d140020d1507dc987ff5317b8aad"}, "downloads": -1, "filename": "telegram_export-1.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5ec1a2be30a7ac27ab2234946bdf21d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39491, "upload_time": "2019-01-04T21:23:13", "upload_time_iso_8601": "2019-01-04T21:23:13.733362Z", "url": "https://files.pythonhosted.org/packages/74/09/47fd30968da7c36361094aedf433e7e454c284a550f11c81c534b8a0330e/telegram_export-1.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03e0899e1a318dfc451b061321510582", "sha256": "0d8b904f51ca4952da8df1c03028b87afb5bf183673f77384d5e3a6c26bf6c21"}, "downloads": -1, "filename": "telegram-export-1.8.1.tar.gz", "has_sig": false, "md5_digest": "03e0899e1a318dfc451b061321510582", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34664, "upload_time": "2019-01-04T21:22:30", "upload_time_iso_8601": "2019-01-04T21:22:30.563373Z", "url": "https://files.pythonhosted.org/packages/77/90/64c8a73246e103aad4a46c161a4aff3dcae1e4070e31b5cc0f042f05c156/telegram-export-1.8.1.tar.gz", "yanked": false}], "1.8.2": [{"comment_text": "", "digests": {"md5": "e9545d8c938ca0ca329c2a384dfc4e30", "sha256": "4a8ad6bb0e0018259e2411e61f6bfc76769c65b434e0294b7970b65ed367fe55"}, "downloads": -1, "filename": "telegram_export-1.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e9545d8c938ca0ca329c2a384dfc4e30", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 45009, "upload_time": "2019-02-04T13:11:28", "upload_time_iso_8601": "2019-02-04T13:11:28.213058Z", "url": "https://files.pythonhosted.org/packages/20/dc/229a0de75d8321b51cab830bb0c324f67918d4adef6292d19185aab84073/telegram_export-1.8.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06986054872bf0992b2adbde351a71a1", "sha256": "c6f328825dafb867ebede007e1f94dbb8edd68d5029d7d3942d4e71457f17b35"}, "downloads": -1, "filename": "telegram-export-1.8.2.tar.gz", "has_sig": false, "md5_digest": "06986054872bf0992b2adbde351a71a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37340, "upload_time": "2019-02-04T13:11:30", "upload_time_iso_8601": "2019-02-04T13:11:30.062874Z", "url": "https://files.pythonhosted.org/packages/04/71/39b0f5f18132e7a70a98daaab469c8fedd04eb30c3c417c41c0cfcff162a/telegram-export-1.8.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e9545d8c938ca0ca329c2a384dfc4e30", "sha256": "4a8ad6bb0e0018259e2411e61f6bfc76769c65b434e0294b7970b65ed367fe55"}, "downloads": -1, "filename": "telegram_export-1.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e9545d8c938ca0ca329c2a384dfc4e30", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 45009, "upload_time": "2019-02-04T13:11:28", "upload_time_iso_8601": "2019-02-04T13:11:28.213058Z", "url": "https://files.pythonhosted.org/packages/20/dc/229a0de75d8321b51cab830bb0c324f67918d4adef6292d19185aab84073/telegram_export-1.8.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06986054872bf0992b2adbde351a71a1", "sha256": "c6f328825dafb867ebede007e1f94dbb8edd68d5029d7d3942d4e71457f17b35"}, "downloads": -1, "filename": "telegram-export-1.8.2.tar.gz", "has_sig": false, "md5_digest": "06986054872bf0992b2adbde351a71a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37340, "upload_time": "2019-02-04T13:11:30", "upload_time_iso_8601": "2019-02-04T13:11:30.062874Z", "url": "https://files.pythonhosted.org/packages/04/71/39b0f5f18132e7a70a98daaab469c8fedd04eb30c3c417c41c0cfcff162a/telegram-export-1.8.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:55 2020"}