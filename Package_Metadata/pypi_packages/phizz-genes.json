{"info": {"author": "M\u00e5ns Magnusson", "author_email": "mans.magnusson@scilifelab.se", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development"], "description": "# phizz-genes #\n\nA small django app to represent genes, transcripts, omim phenotypes, aliases etc\n\n## Instructions ##\n\n- Add phizz-genes to your INSTALLED_APPS settings like:\n\n ```python\n INSTALLED_APPS = [\n    ...\n    'genes',\n ]\n ```\n\n- Run `python manage.py migrate` to create the models\n\n\n## Models ##\n\n```python\nclass Gene(models.Model):\n\n    #The ensembl gene id, ex. 'ENSG00000156110'\n    #can be use with link like:\n    #ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000156110\n    ensembl_id = models.CharField(max_length=20)\n\n    chrom = models.CharField(max_length=30)\n    start = models.IntegerField()\n    stop = models.IntegerField()\n\n    #The hgnc symbol, ex. 'ADK\n    hgnc_symbol = models.CharField(max_length=20, blank=True)\n\n    description = models.CharField(max_length=200, null=True)\n    #The hgnc id, ex. '257' for using link like:\n    #genenames.org/cgi-bin/gene_symbol_report?hgnc_id=HGNC:257\n    hgnc_id = models.IntegerField(null=True)\n\n    #entrez id, ex. 132, for using link like:\n    #ncbi.nlm.nih.gov/gene/132\n    entrez_id = models.IntegerField(null=True)\n\n    #vega id, ex. OTTHUMG00000018506, for using link like:\n    #http://vega.sanger.ac.uk/Homo_sapiens/Gene/Summary?db=core;g=OTTHUMG00000018506\n    vega_id = models.CharField(max_length=20, null=True)\n\n    #ucsc id, ex. uc001jwi.4, for using link like:\n    #http://genome.cse.ucsc.edu/cgi-bin/hgGene?org=Human&hgg_chrom=none&hgg_type=knownGene&hgg_gene=uc001jwi.4\n    ucsc_id = models.CharField(max_length=20, null=True)\n\n    #pli_score is the estimated sensibility to lof mutations estimated by ExAC\n    pli_score = models.DecimalField(max_digits=6, decimal_places=5, null=True)\n\n    def __str__(self):\n        return self.hgnc_symbol\n\n#One gene can have several transcripts, one transcript are attached to one gene\nclass Transcript(models.Model):\n    gene = models.ForeignKey(Gene, on_delete=models.CASCADE)\n    refseq_name = models.CharField(max_length=30, null=True)\n    ensembl_transcript_id = models.CharField(max_length=30)\n\n    def __str__(self):\n        return self.refseq_name\n\n#One phenotype can have several transcripts, one transcript are attached to one gene\nclass Omim(models.Model):\n    gene = models.ForeignKey(Gene, on_delete=models.CASCADE)\n    omim_id = models.IntegerField()\n\nclass Alias(models.Model):\n    gene = models.ForeignKey(Gene, on_delete=models.CASCADE)\n    alias = models.CharField(max_length=20)\n\nclass UniProt(models.Model):\n    gene = models.ForeignKey(Gene, on_delete=models.CASCADE)\n    uniprot_id = models.CharField(max_length=20)\n```", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/moonso/phizz-genes", "keywords": "g,e,n,e,s, ,p,h,i,z,z, ,d,e,v,e,l,o,p,m,e,n,t", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "phizz-genes", "package_url": "https://pypi.org/project/phizz-genes/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/phizz-genes/", "project_urls": {"Homepage": "https://github.com/moonso/phizz-genes"}, "release_url": "https://pypi.org/project/phizz-genes/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Small django app to model genes", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # phizz-genes #<br><br>A small django app to represent genes, transcripts, omim phenotypes, aliases etc<br><br>## Instructions ##<br><br>- Add phizz-genes to your INSTALLED_APPS settings like:<br><br> ```python<br> INSTALLED_APPS = [<br>    ...<br>    'genes',<br> ]<br> ```<br><br>- Run `python manage.py migrate` to create the models<br><br><br>## Models ##<br><br>```python<br>class Gene(models.Model):<br><br>    #The ensembl gene id, ex. 'ENSG00000156110'<br>    #can be use with link like:<br>    #ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000156110<br>    ensembl_id = models.CharField(max_length=20)<br><br>    chrom = models.CharField(max_length=30)<br>    start = models.IntegerField()<br>    stop = models.IntegerField()<br><br>    #The hgnc symbol, ex. 'ADK<br>    hgnc_symbol = models.CharField(max_length=20, blank=True)<br><br>    description = models.CharField(max_length=200, null=True)<br>    #The hgnc id, ex. '257' for using link like:<br>    #genenames.org/cgi-bin/gene_symbol_report?hgnc_id=HGNC:257<br>    hgnc_id = models.IntegerField(null=True)<br><br>    #entrez id, ex. 132, for using link like:<br>    #ncbi.nlm.nih.gov/gene/132<br>    entrez_id = models.IntegerField(null=True)<br><br>    #vega id, ex. OTTHUMG00000018506, for using link like:<br>    #http://vega.sanger.ac.uk/Homo_sapiens/Gene/Summary?db=core;g=OTTHUMG00000018506<br>    vega_id = models.CharField(max_length=20, null=True)<br><br>    #ucsc id, ex. uc001jwi.4, for using link like:<br>    #http://genome.cse.ucsc.edu/cgi-bin/hgGene?org=Human&amp;hgg_chrom=none&amp;hgg_type=knownGene&amp;hgg_gene=uc001jwi.4<br>    ucsc_id = models.CharField(max_length=20, null=True)<br><br>    #pli_score is the estimated sensibility to lof mutations estimated by ExAC<br>    pli_score = models.DecimalField(max_digits=6, decimal_places=5, null=True)<br><br>    def __str__(self):<br>        return self.hgnc_symbol<br><br>#One gene can have several transcripts, one transcript are attached to one gene<br>class Transcript(models.Model):<br>    gene = models.ForeignKey(Gene, on_delete=models.CASCADE)<br>    refseq_name = models.CharField(max_length=30, null=True)<br>    ensembl_transcript_id = models.CharField(max_length=30)<br><br>    def __str__(self):<br>        return self.refseq_name<br><br>#One phenotype can have several transcripts, one transcript are attached to one gene<br>class Omim(models.Model):<br>    gene = models.ForeignKey(Gene, on_delete=models.CASCADE)<br>    omim_id = models.IntegerField()<br><br>class Alias(models.Model):<br>    gene = models.ForeignKey(Gene, on_delete=models.CASCADE)<br>    alias = models.CharField(max_length=20)<br><br>class UniProt(models.Model):<br>    gene = models.ForeignKey(Gene, on_delete=models.CASCADE)<br>    uniprot_id = models.CharField(max_length=20)<br>```\n          </div>"}, "last_serial": 2370873, "releases": {"0.0.1": []}, "urls": [], "timestamp": "Fri May  8 02:55:29 2020"}