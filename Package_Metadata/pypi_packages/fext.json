{"info": {"author": "Fridolin Pokorny", "author_email": "fridolin@redhat.com", "bugtrack_url": null, "classifiers": [], "description": "fext\n----\n\nFast CPython extensions to Python standard library with focus on performance.\n\nThis library provides CPython native extensions to mimic some of the well known\nbuilt-in types. The implementation relies on enforced protocol - all the\nobjects and abstract data types are implemented in C/C++ to provide highly\neffective manipulation.\n\nExtended heapq - fext.ExtHeapQueue\n==================================\n\nThe extended heap queue acts as a min-heap queue from the standard Python\nlibrary.  It uses a hash table for storing information about indexes (where\nvalues sit in the min-heap queue) to optimize removals from the heap\nto O(log(N)).\n\n.. figure:: https://raw.githubusercontent.com/thoth-station/fext/master/fig/fext_extheapq.png\n   :scale: 40%\n \u00a0 :align: center\n\nUsing fext in a C++ project\n===========================\n\nThe design of this library allows you to use sources in your C++ project as\nwell. The ``eheapq.hpp`` file defines the extended heap queue and ``edict.hpp`` the\nextended dictionary. Python files then act as a bindings to their respective\nPython interfaces. Mind the API design for the templated classes - it was meant to\nbe used with pointers to objects (so avoid possible copy constructors).\n\nBuilding the extensions\n=======================\n\nTo build extensions, install the following packages (Fedora):\n\n.. code-block:: console\n\n  dnf install -y python3-devel g++ gcc\n\nNow you can build extensions:\n\n.. code-block:: console\n\n  python3 setup.py build\n\nIf you would like to produce binaries with debug information:\n\n.. code-block:: console\n\n  CFLAGS='-Wall -O0 -ggdb' python3 setup.py build\n\nCheck sections below for more info on testing the C/C++ parts of extensions.\n\nReference count and memory leak checks\n======================================\n\nYou can find ``Makefile`` in the Git repo. This repo defines targets to\nperform leak checks and reference count checks. Note they use different Python\ninterpreters (with/without debug information) so make sure you do not mix\nvirtual environments when running the tests.\n\n.. code-block:: console\n\n  make check\n\nDeveloping the extension\n========================\n\nFirst, prepare your environment:\n\n.. code-block:: console\n\n  dnf install -y make\n  make deps\n\nTo develop or adjust sources, simply change sources and verify your\nchange is accepted by the test suite:\n\n.. code-block::\n\n  make check\n\nThe ``check`` target will run the actual test suite (see also ``make test``).\nBesides it, the test suite will be executed two more times to check test suite\nand its behaviour with respect to Python object reference counting\n(``python3-debug`` dependency will be automatically installed with the provided\n``make deps``). This part of the test suite can be executed using ``make\ncheck-refcount``. The last part of the test suite runs valgrind against the\ntest suite - you can explicitly trigger this part by calling ``make\ncheck-leaks``.\n\nMind ``make check-refcount`` and ``make check-leaks`` will take some time given the\nchecks and processing that is done on the background. To verify your changes\nmore iterativelly, ``make test`` should do the trick (don't forget to do ``make\ncheck`` after that though).\n\nTo clean up your environment, perform:\n\n.. code-block:: console\n\n  make clean\n\nBuilding and releasing\n======================\n\nThe release can be done from a containerized environment:\n\n.. code-block:: console\n\n  podman run --rm --workdir /io --entrypoint bash -it --volume `pwd`:/io:Z quay.io/pypa/manylinux2014_x86_64 -c \"yum install -y make && make all\"\n\nTo check what's happening, let's run a containerized environment - this can be\nhelpful when you are testing or developing the extension:\n\n.. code-block:: console\n\n  podman run --rm --workdir /io --entrypoint bash -it --volume `pwd`:/io:Z quay.io/pypa/manylinux2014_x86_64\n\nThe following commands (run in the container stated above) will install all\nthe necessary tools:\n\n.. code-block:: console\n\n  yum install -y make\n  make deps\n\nOnce tests pass, clean the environment:\n\n.. code-block:: console\n\n  make clean\n\nNow we should be ready to produce ``bdist_wheel`` and ``sdist`` distribution\nfor PyPI:\n\n.. code-block:: console\n\n  python3 setup.py bdist_wheel\n  python3 setup.py sdist\n\nFinally, upload artifacts to PyPI:\n\n.. code-block:: console\n\n  auditwheel repair fext/*.whl\n  twine upload wheelhouse/*.whl\n\nAlternativelly you can let ``make all`` happen.\n\nInstallation\n============\n\nThe project is `hosted on PyPI <https://pypi.org/project/fext/>`_. You can\ninstall it via ``pip`` or ``Pipenv``:\n\n.. code-block:: console\n\n  pipenv install fext\n  # pip3 install fext\n\nIf there is no release conforming your system, a build process is triggered\nduring the installation - requires ``python3-devel`` and ``gcc/g++``.\n\nUsage\n=====\n\nThese data structures were designed for Thoth's adviser - for data kept in\nresolver's internal state as well as in the reinforcement learning part.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://pypi.org/project/fext", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thoth-station/fext", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "fext", "package_url": "https://pypi.org/project/fext/", "platform": "", "project_url": "https://pypi.org/project/fext/", "project_urls": {"Download": "https://pypi.org/project/fext", "Homepage": "https://github.com/thoth-station/fext"}, "release_url": "https://pypi.org/project/fext/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Extensions to standard Python's heapq for performance applications", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Fast CPython extensions to Python standard library with focus on performance.</p>\n<p>This library provides CPython native extensions to mimic some of the well known\nbuilt-in types. The implementation relies on enforced protocol - all the\nobjects and abstract data types are implemented in C/C++ to provide highly\neffective manipulation.</p>\n<div id=\"extended-heapq-fext-extheapqueue\">\n<h2>Extended heapq - fext.ExtHeapQueue</h2>\n<p>The extended heap queue acts as a min-heap queue from the standard Python\nlibrary.  It uses a hash table for storing information about indexes (where\nvalues sit in the min-heap queue) to optimize removals from the heap\nto O(log(N)).</p>\n<div>\n<img alt=\"https://raw.githubusercontent.com/thoth-station/fext/master/fig/fext_extheapq.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5dd4771bb1177a2a135785135441d75f158baac5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f74686f74682d73746174696f6e2f666578742f6d61737465722f6669672f666578745f65787468656170712e706e67\">\n</div>\n</div>\n<div id=\"using-fext-in-a-c-project\">\n<h2>Using fext in a C++ project</h2>\n<p>The design of this library allows you to use sources in your C++ project as\nwell. The <tt>eheapq.hpp</tt> file defines the extended heap queue and <tt>edict.hpp</tt> the\nextended dictionary. Python files then act as a bindings to their respective\nPython interfaces. Mind the API design for the templated classes - it was meant to\nbe used with pointers to objects (so avoid possible copy constructors).</p>\n</div>\n<div id=\"building-the-extensions\">\n<h2>Building the extensions</h2>\n<p>To build extensions, install the following packages (Fedora):</p>\n<pre><span class=\"go\">dnf install -y python3-devel g++ gcc</span>\n</pre>\n<p>Now you can build extensions:</p>\n<pre><span class=\"go\">python3 setup.py build</span>\n</pre>\n<p>If you would like to produce binaries with debug information:</p>\n<pre><span class=\"go\">CFLAGS='-Wall -O0 -ggdb' python3 setup.py build</span>\n</pre>\n<p>Check sections below for more info on testing the C/C++ parts of extensions.</p>\n</div>\n<div id=\"reference-count-and-memory-leak-checks\">\n<h2>Reference count and memory leak checks</h2>\n<p>You can find <tt>Makefile</tt> in the Git repo. This repo defines targets to\nperform leak checks and reference count checks. Note they use different Python\ninterpreters (with/without debug information) so make sure you do not mix\nvirtual environments when running the tests.</p>\n<pre><span class=\"go\">make check</span>\n</pre>\n</div>\n<div id=\"developing-the-extension\">\n<h2>Developing the extension</h2>\n<p>First, prepare your environment:</p>\n<pre><span class=\"go\">dnf install -y make\nmake deps</span>\n</pre>\n<p>To develop or adjust sources, simply change sources and verify your\nchange is accepted by the test suite:</p>\n<pre>make check\n</pre>\n<p>The <tt>check</tt> target will run the actual test suite (see also <tt>make test</tt>).\nBesides it, the test suite will be executed two more times to check test suite\nand its behaviour with respect to Python object reference counting\n(<tt><span class=\"pre\">python3-debug</span></tt> dependency will be automatically installed with the provided\n<tt>make deps</tt>). This part of the test suite can be executed using <tt>make\n<span class=\"pre\">check-refcount</span></tt>. The last part of the test suite runs valgrind against the\ntest suite - you can explicitly trigger this part by calling <tt>make\n<span class=\"pre\">check-leaks</span></tt>.</p>\n<p>Mind <tt>make <span class=\"pre\">check-refcount</span></tt> and <tt>make <span class=\"pre\">check-leaks</span></tt> will take some time given the\nchecks and processing that is done on the background. To verify your changes\nmore iterativelly, <tt>make test</tt> should do the trick (don\u2019t forget to do <tt>make\ncheck</tt> after that though).</p>\n<p>To clean up your environment, perform:</p>\n<pre><span class=\"go\">make clean</span>\n</pre>\n</div>\n<div id=\"building-and-releasing\">\n<h2>Building and releasing</h2>\n<p>The release can be done from a containerized environment:</p>\n<pre><span class=\"go\">podman run --rm --workdir /io --entrypoint bash -it --volume `pwd`:/io:Z quay.io/pypa/manylinux2014_x86_64 -c \"yum install -y make &amp;&amp; make all\"</span>\n</pre>\n<p>To check what\u2019s happening, let\u2019s run a containerized environment - this can be\nhelpful when you are testing or developing the extension:</p>\n<pre><span class=\"go\">podman run --rm --workdir /io --entrypoint bash -it --volume `pwd`:/io:Z quay.io/pypa/manylinux2014_x86_64</span>\n</pre>\n<p>The following commands (run in the container stated above) will install all\nthe necessary tools:</p>\n<pre><span class=\"go\">yum install -y make\nmake deps</span>\n</pre>\n<p>Once tests pass, clean the environment:</p>\n<pre><span class=\"go\">make clean</span>\n</pre>\n<p>Now we should be ready to produce <tt>bdist_wheel</tt> and <tt>sdist</tt> distribution\nfor PyPI:</p>\n<pre><span class=\"go\">python3 setup.py bdist_wheel\npython3 setup.py sdist</span>\n</pre>\n<p>Finally, upload artifacts to PyPI:</p>\n<pre><span class=\"go\">auditwheel repair fext/*.whl\ntwine upload wheelhouse/*.whl</span>\n</pre>\n<p>Alternativelly you can let <tt>make all</tt> happen.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The project is <a href=\"https://pypi.org/project/fext/\" rel=\"nofollow\">hosted on PyPI</a>. You can\ninstall it via <tt>pip</tt> or <tt>Pipenv</tt>:</p>\n<pre><span class=\"go\">pipenv install fext\n</span><span class=\"gp\">#</span> pip3 install fext\n</pre>\n<p>If there is no release conforming your system, a build process is triggered\nduring the installation - requires <tt><span class=\"pre\">python3-devel</span></tt> and <tt>gcc/g++</tt>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>These data structures were designed for Thoth\u2019s adviser - for data kept in\nresolver\u2019s internal state as well as in the reinforcement learning part.</p>\n</div>\n\n          </div>"}, "last_serial": 6926731, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6f82b696ce5e236ac21a5244f09186c8", "sha256": "f4cc87cfca7a3f40da3d32c94c79fabbfa352906550440848e9ded2363bc95df"}, "downloads": -1, "filename": "fext-0.1.0-cp36-cp36m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "6f82b696ce5e236ac21a5244f09186c8", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 211561, "upload_time": "2020-03-16T14:56:18", "upload_time_iso_8601": "2020-03-16T14:56:18.371661Z", "url": "https://files.pythonhosted.org/packages/15/a7/42489f6af612ca829e9c89216055dda09acc2401896ba2b831754a87fe9b/fext-0.1.0-cp36-cp36m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5d5ce2b2409487136b41b493a36fc55", "sha256": "ceeb550afd601fae4926a3a126da2a7230ce29077f0d3b98127f95d738dbbb56"}, "downloads": -1, "filename": "fext-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d5d5ce2b2409487136b41b493a36fc55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12612, "upload_time": "2020-03-16T14:59:05", "upload_time_iso_8601": "2020-03-16T14:59:05.477456Z", "url": "https://files.pythonhosted.org/packages/5c/4a/8207f953fd461ca4eeaf60c641916bf8819d5639b96622377934e94f26ec/fext-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "81291600b4ac9f5e345a56b21745a4da", "sha256": "08b9ea75cdbcf35e78f9f6e96f1b20ff513eaad68cb1648efd38374e9450af05"}, "downloads": -1, "filename": "fext-0.1.1-cp36-cp36m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "81291600b4ac9f5e345a56b21745a4da", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 260093, "upload_time": "2020-03-16T15:22:18", "upload_time_iso_8601": "2020-03-16T15:22:18.435445Z", "url": "https://files.pythonhosted.org/packages/76/49/155fe5c383322dda3922ef777d1c7e45cb59f041c05bc890f165b44348c8/fext-0.1.1-cp36-cp36m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20f8832c1e20131b57cb0d5221212cda", "sha256": "1b2bb1b4105b6ed9f68c60e27b8d28573982e9599a58308db0a029a566e3bb9f"}, "downloads": -1, "filename": "fext-0.1.1.tar.gz", "has_sig": false, "md5_digest": "20f8832c1e20131b57cb0d5221212cda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12941, "upload_time": "2020-03-16T15:22:19", "upload_time_iso_8601": "2020-03-16T15:22:19.972659Z", "url": "https://files.pythonhosted.org/packages/4a/f4/4e250d797ee01efa1956fc4a8a42cb4ca4309a2a1e3a532ee8fc391a8eab/fext-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3d4f2df50bf510e63c731d2cb2bdbedb", "sha256": "122a03fdc082799fe68672c4894ad7c5c29498b7923bb76fca7b745794b44ffc"}, "downloads": -1, "filename": "fext-0.1.2-cp36-cp36m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "3d4f2df50bf510e63c731d2cb2bdbedb", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 263851, "upload_time": "2020-03-16T19:00:58", "upload_time_iso_8601": "2020-03-16T19:00:58.197365Z", "url": "https://files.pythonhosted.org/packages/bc/67/b4e301a5f87de438277099b4790f416b59f16c9988598d388c9c1e4d3573/fext-0.1.2-cp36-cp36m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82819db3050de5d8d3a3e16443e846ef", "sha256": "801885366796b642e325e7b95a9c4ec0791bbc6a9769c00ffe6138fcc155e548"}, "downloads": -1, "filename": "fext-0.1.2.tar.gz", "has_sig": false, "md5_digest": "82819db3050de5d8d3a3e16443e846ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13404, "upload_time": "2020-03-16T19:01:00", "upload_time_iso_8601": "2020-03-16T19:01:00.276283Z", "url": "https://files.pythonhosted.org/packages/93/04/4fcfee81d358b18ebf8c0fbf87ab007079c1e1277024f5e1568f5dcd5f4c/fext-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "68f592cb2af4e146ec37abfaf253a795", "sha256": "1fd5279701c0e42212ffa895cf7a63754e4683b4f8a02c2c2e1f7dc9d09012f1"}, "downloads": -1, "filename": "fext-0.1.3-cp36-cp36m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "68f592cb2af4e146ec37abfaf253a795", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 317022, "upload_time": "2020-03-17T11:59:27", "upload_time_iso_8601": "2020-03-17T11:59:27.973866Z", "url": "https://files.pythonhosted.org/packages/9b/14/9937332ebe1758e087c67b991bb68870b6e4084081495195fa0469232add/fext-0.1.3-cp36-cp36m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f93a71d1c5f951617586018b9eca6605", "sha256": "ed45f594e8cee848d87e0cdd32c33413025dcea8f8afcf4787ba734d09b1949c"}, "downloads": -1, "filename": "fext-0.1.3.tar.gz", "has_sig": false, "md5_digest": "f93a71d1c5f951617586018b9eca6605", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13542, "upload_time": "2020-03-17T11:59:29", "upload_time_iso_8601": "2020-03-17T11:59:29.635562Z", "url": "https://files.pythonhosted.org/packages/fe/33/83844ca83a5216665838e7f2925379680687c966fc2fd36a10a8dcfb8f91/fext-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e85cbbee53c9e4ebe95b4491c064cb8a", "sha256": "d7b1f083a14f95074808dcfdaa0aaba27c1b204115c13efdcc9fe67f124e39a6"}, "downloads": -1, "filename": "fext-0.2.0-cp36-cp36m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "e85cbbee53c9e4ebe95b4491c064cb8a", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 174271, "upload_time": "2020-04-01T10:33:11", "upload_time_iso_8601": "2020-04-01T10:33:11.604428Z", "url": "https://files.pythonhosted.org/packages/0f/09/196414b71fc7504e9b344478814ac09c5796b7cc65b96d2ff2a548cb66ca/fext-0.2.0-cp36-cp36m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "577aa35661aeee51259e861c73e0bda7", "sha256": "6a689e3f4bf6425145e01ce31300150bb77ea82f0a5ee5f9c8c700c37204f2c4"}, "downloads": -1, "filename": "fext-0.2.0.tar.gz", "has_sig": false, "md5_digest": "577aa35661aeee51259e861c73e0bda7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10647, "upload_time": "2020-04-01T10:33:13", "upload_time_iso_8601": "2020-04-01T10:33:13.000121Z", "url": "https://files.pythonhosted.org/packages/8f/4f/2491df9fbd4f47975b6e4c66befab3dd4447cb6fb1ee591a115ea80371bf/fext-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e85cbbee53c9e4ebe95b4491c064cb8a", "sha256": "d7b1f083a14f95074808dcfdaa0aaba27c1b204115c13efdcc9fe67f124e39a6"}, "downloads": -1, "filename": "fext-0.2.0-cp36-cp36m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "e85cbbee53c9e4ebe95b4491c064cb8a", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 174271, "upload_time": "2020-04-01T10:33:11", "upload_time_iso_8601": "2020-04-01T10:33:11.604428Z", "url": "https://files.pythonhosted.org/packages/0f/09/196414b71fc7504e9b344478814ac09c5796b7cc65b96d2ff2a548cb66ca/fext-0.2.0-cp36-cp36m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "577aa35661aeee51259e861c73e0bda7", "sha256": "6a689e3f4bf6425145e01ce31300150bb77ea82f0a5ee5f9c8c700c37204f2c4"}, "downloads": -1, "filename": "fext-0.2.0.tar.gz", "has_sig": false, "md5_digest": "577aa35661aeee51259e861c73e0bda7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10647, "upload_time": "2020-04-01T10:33:13", "upload_time_iso_8601": "2020-04-01T10:33:13.000121Z", "url": "https://files.pythonhosted.org/packages/8f/4f/2491df9fbd4f47975b6e4c66befab3dd4447cb6fb1ee591a115ea80371bf/fext-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:50 2020"}