{"info": {"author": "Alex Ethier", "author_email": "vault@fx-tools.com", "bugtrack_url": null, "classifiers": [], "description": "#vaultlib\n\n#EXPERIMENTAL - USE AT YOUR OWN RISK -\n\nChef style Databag Storage\n\nSupports plain text and encrypted databags.\n\nA data bag is an object with two properties:\n\n* _id\n* data\n\nThe _\\_id_ represent the databag name and _data_ contains the data we want to store in the databag.\n\n##Installation\n\n    ./run-tests\n    python setup.py sdist\n    pip install ./dist/vaultlib-0.0.1.tar.gz\n    \n    or \n    \n    pip install vaultlib\n  \n\n##Features\n\n\n__Vault__.__Storage__\n\n* add_databag()\n* get_databag()\n* delete_databag()\n* list_databags()\n\n__Vault__.__Databag__\n\n* encrypt()\n* decrypt()\n\n__Vault__.__Key__\n\n* from_file()\n* from_data()\n\n\n##Library Usage\n\n### Create encryption key\n\nTo encrypt a databag we need a key:\n\n    openssl genrsa -out my_key.pem 4096\n\n### Initialize the Vault\n\n    couchdb_host = '127.0.0.1'\n    couchdb_port = 6984\n    couchdb_database = 'databags'\n\n    vault = Vault('http', couchdb_host, couchdb_port, couchdb_database)\n\n### Create a databag\n\n    databag_data = {\n        \"foo\": \"bar\",\n        \"and\": {\n            \"foo\": \"bar\"\n        }\n    }\n\n    databag_name = \"prefix.name.suffix\"\n    databag = Databag(databag_name, databag_data)\n\n### Encrypt databag (optional)\n\n    key_file = \"mykey.pem\"\n    pk = Key(filename=key_file).private\n    databag.encrypt(pk)\n\n### Store databag in the Vault\n\n    vault.add_databag(databag)\n\n### Retrieve data bag from the vault\n\n    databag_name = \"prefix.name.suffix\"\n    databag = vault.get_databag(databag_name)\n\n    data = databag.data\n    id_ = databag.id\n\n### Decrypt databag (optional)\n\n    key_file = \"mykey.pem\"\n    pk = Key(filename=key_file).private\n    databag.decrypt(pk)\n\n    data = databag.data\n    id_ = databag.id\n\n### List all databags\n\n    for databag in vault.list_databags():\n        databag.decrypt(\"mykey.pem\")\n        print databag.data\n        print databag.id\n\n##Cli Usage\n\nRequired environment variables:\n\n    export VAULT_PROTOCOL=http\n    export VAULT_HOST='127.0.0.1'\n    export VAULT_PORT=5984\n    export VAULT_DATABASE='vault'\n\n__Help__\n\n    vault-cli --help\n    \n    ---\n    \n    usage: vault-cli [-h] [--databag DATABAG] [--key KEY] [cmd [cmd ...]]\n\n    Manage databags\n    \n    positional arguments:\n      cmd                [add, list, show]\n    \n    optional arguments:\n      -h, --help         show this help message and exit\n      --databag DATABAG  specify .json databag\n      --key KEY          specify encryption key\n\n__Add databag__\n\n    vault-cli add --databag databag.json\n    \n    vault-cli add --databag databag.json --key /my/path/key.pem\n\n__List databag__\n\n    vault-cli list\n\n__Show databag__\n\n    vault-cli show databag_name\n    \n    vault-cli show databag_name --key /my/path/key.pem\n\n__Delete databag__\n    \n    vault-cli delete databag_name\n \n\n\n\n\n## v0.0.1:\n* super rought prototype (Initial release)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "The MIT License (MIT)\n\nCopyright (c) 2013 Alex Ethier - vault@fx-tools.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "vaultlib", "package_url": "https://pypi.org/project/vaultlib/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/vaultlib/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/vaultlib/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "vault library.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            #vaultlib<br><br>#EXPERIMENTAL - USE AT YOUR OWN RISK -<br><br>Chef style Databag Storage<br><br>Supports plain text and encrypted databags.<br><br>A data bag is an object with two properties:<br><br>* _id<br>* data<br><br>The _\\_id_ represent the databag name and _data_ contains the data we want to store in the databag.<br><br>##Installation<br><br>    ./run-tests<br>    python setup.py sdist<br>    pip install ./dist/vaultlib-0.0.1.tar.gz<br>    <br>    or <br>    <br>    pip install vaultlib<br>  <br><br>##Features<br><br><br>__Vault__.__Storage__<br><br>* add_databag()<br>* get_databag()<br>* delete_databag()<br>* list_databags()<br><br>__Vault__.__Databag__<br><br>* encrypt()<br>* decrypt()<br><br>__Vault__.__Key__<br><br>* from_file()<br>* from_data()<br><br><br>##Library Usage<br><br>### Create encryption key<br><br>To encrypt a databag we need a key:<br><br>    openssl genrsa -out my_key.pem 4096<br><br>### Initialize the Vault<br><br>    couchdb_host = '127.0.0.1'<br>    couchdb_port = 6984<br>    couchdb_database = 'databags'<br><br>    vault = Vault('http', couchdb_host, couchdb_port, couchdb_database)<br><br>### Create a databag<br><br>    databag_data = {<br>        \"foo\": \"bar\",<br>        \"and\": {<br>            \"foo\": \"bar\"<br>        }<br>    }<br><br>    databag_name = \"prefix.name.suffix\"<br>    databag = Databag(databag_name, databag_data)<br><br>### Encrypt databag (optional)<br><br>    key_file = \"mykey.pem\"<br>    pk = Key(filename=key_file).private<br>    databag.encrypt(pk)<br><br>### Store databag in the Vault<br><br>    vault.add_databag(databag)<br><br>### Retrieve data bag from the vault<br><br>    databag_name = \"prefix.name.suffix\"<br>    databag = vault.get_databag(databag_name)<br><br>    data = databag.data<br>    id_ = databag.id<br><br>### Decrypt databag (optional)<br><br>    key_file = \"mykey.pem\"<br>    pk = Key(filename=key_file).private<br>    databag.decrypt(pk)<br><br>    data = databag.data<br>    id_ = databag.id<br><br>### List all databags<br><br>    for databag in vault.list_databags():<br>        databag.decrypt(\"mykey.pem\")<br>        print databag.data<br>        print databag.id<br><br>##Cli Usage<br><br>Required environment variables:<br><br>    export VAULT_PROTOCOL=http<br>    export VAULT_HOST='127.0.0.1'<br>    export VAULT_PORT=5984<br>    export VAULT_DATABASE='vault'<br><br>__Help__<br><br>    vault-cli --help<br>    <br>    ---<br>    <br>    usage: vault-cli [-h] [--databag DATABAG] [--key KEY] [cmd [cmd ...]]<br><br>    Manage databags<br>    <br>    positional arguments:<br>      cmd                [add, list, show]<br>    <br>    optional arguments:<br>      -h, --help         show this help message and exit<br>      --databag DATABAG  specify .json databag<br>      --key KEY          specify encryption key<br><br>__Add databag__<br><br>    vault-cli add --databag databag.json<br>    <br>    vault-cli add --databag databag.json --key /my/path/key.pem<br><br>__List databag__<br><br>    vault-cli list<br><br>__Show databag__<br><br>    vault-cli show databag_name<br>    <br>    vault-cli show databag_name --key /my/path/key.pem<br><br>__Delete databag__<br>    <br>    vault-cli delete databag_name<br> <br><br><br><br><br>## v0.0.1:<br>* super rought prototype (Initial release)\n          </div>"}, "last_serial": 845629, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "60f4562f80d0981a5ddcdd1d2dabdbad", "sha256": "e54d4c3bf8f90c40662edb380cd7744de85bc3774ae71c2e9bd3a4f29f69d7fb"}, "downloads": -1, "filename": "vaultlib-0.0.1.tar.gz", "has_sig": false, "md5_digest": "60f4562f80d0981a5ddcdd1d2dabdbad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5025, "upload_time": "2013-08-22T06:17:04", "upload_time_iso_8601": "2013-08-22T06:17:04.238876Z", "url": "https://files.pythonhosted.org/packages/cc/72/ef0b522b20d47230d3463666f9b39c1dfa3af6222328b36c668ab53d4b53/vaultlib-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "60f4562f80d0981a5ddcdd1d2dabdbad", "sha256": "e54d4c3bf8f90c40662edb380cd7744de85bc3774ae71c2e9bd3a4f29f69d7fb"}, "downloads": -1, "filename": "vaultlib-0.0.1.tar.gz", "has_sig": false, "md5_digest": "60f4562f80d0981a5ddcdd1d2dabdbad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5025, "upload_time": "2013-08-22T06:17:04", "upload_time_iso_8601": "2013-08-22T06:17:04.238876Z", "url": "https://files.pythonhosted.org/packages/cc/72/ef0b522b20d47230d3463666f9b39c1dfa3af6222328b36c668ab53d4b53/vaultlib-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:38 2020"}