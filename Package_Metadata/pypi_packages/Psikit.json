{"info": {"author": "Kazufumi Ohkawa, Takayuki Serizawa", "author_email": "kerolinq@gmail.com, seritaka@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Psikit: a thin wrapper library for Psi4 and RDKit\n\nInspired from the entry:[Calculate HOMO and LUMO with Psi4](https://iwatobipen.wordpress.com/2018/08/24/calculate-homo-and-lumo-with-psi4-rdkit-psi4/)\n\n## Install RDKit and Psi4 from Conda\n\n    conda install -c psi4 psi4\n    conda install -c rdkit rdkit\n    conda install -c psi4 resp # optional\n\n## Install Psikit from Github\n\nPsikit is under development.\nRecent version of Psikit can install from github.\n\n    pip install git+https://github.com/Mishima-syk/psikit\n\n## Install Psikit with pip\n\nPsikit is under development.\nBut current version of Psikit can install from pypi or conda.\n\n    pip install psikit\n    conda install -c iwatobipen psikit\n\n\n## Usage\n\n### Single point calcuration\n\n    from psikit import Psikit\n    pk = Psikit()\n    pk.read_from_smiles(\"c1ccccc1\")\n    print(\"SCF Energy: \", pk.energy())\n    print(\"HOMO: \", pk.HOMO)\n    print(\"LUMO: \", pk.LUMO)\n    x, y, z, total = pk.dipolemoment\n    print(\"SCF Total Dipole Moment: {}\".format(total))\n    # SCF Energy:  -230.712279648862\n    # HOMO:  -0.32848562009092513\n    # LUMO:  0.1456515222506689\n    # SCF Total Dipole Moment: 3.292464934070545e-05\n\n### Structure optimization\n\n    pk = Psikit()\n    pk.read_from_smiles(\"c1ccccc1\")\n    print(\"Optimized SCF Energy: \", pk.optimize())\n    # Optimizer: Optimization complete!\n    # Optimized SCF Energy:  -230.71352354223438\n\n### Calculate RESP Charge\n\n    # REF http://ambermd.org/tutorials/advanced/tutorial1/files/resp_paper_jacs.pdf\n    pk = Psikit()\n    pk.read_from_smiles(\"CC(=O)O\")\n    pk.optimize()\n    # Optimizer: Optimization complete!\n    # -227.82180859253418\n    pk.calc_resp_charges()\n    # array([-0.32506898,  0.83672649, -0.61924915, -0.66135715,  0.10450057,\n    #    0.10478188,  0.10780051,  0.45186584])\n\n    for atom in pk.mol.GetAtoms(): \n        print(atom.GetSymbol(), \"ESP:{}\\tRESP:{}\".format(atom.GetProp(\"EP\"), atom.GetProp(\"RESP\"))) \n\n    # C ESP:-0.49662019588648315\tRESP:-0.3250689814483399\n    # C ESP:0.91473263536048643\t\tRESP:0.83672648554100837\n    # O ESP:-0.63823808477114718\tRESP:-0.61924915363703359\n    # O ESP:-0.6763331997116846\t\tRESP:-0.66135714989354499\n    # H ESP:0.14625849864628995\t\tRESP:0.10450056830656008\n    # H ESP:0.14578513969681847\t\tRESP:0.10478187811883517\n    # H ESP:0.1530843954112609\t\tRESP:0.1078005104750676\n    # H ESP:0.45133081125445906\t\tRESP:0.45186584253744722\n\n    ### Compute Mulliken charges and Lowdin charges\n\n    pk = Psikit()\n    pk.read_from_smiles(\"CC(=O)O\")\n    pk.optimize() # or pk.energy()\n\n    pk.calc_mulliken_charges()\n    # array([-0.42203029,  0.72794785, -0.55419051, -0.59333358,  0.16369722,\n    #    0.1636994 ,  0.15462075,  0.35958916])\n\n    pk.calc_lowdin_charges()\n    #array([-0.30006577,  0.33900448, -0.35983788, -0.28463832,  0.12439944,\n    #    0.12810672,  0.11935266,  0.23367866])\n\n\n### Jupyter notebook\n\n- [RESP charge](https://github.com/Mishima-syk/psikit/blob/master/examples/Rendering_RESP_charge/RESP%20charge%20of%20the%20tetrazole.ipynb)\n- [Torsion Scan](https://github.com/Mishima-syk/psikit/blob/master/examples/Torsion_scan/torsional_scan.ipynb)\n- [Rendering Orbital with VMD](https://github.com/Mishima-syk/psikit/blob/master/examples/Rendering_Orbital/Render_orbital.ipynb)\n- [Rendering Orbital in PyMol](https://github.com/Mishima-syk/psikit/blob/master/examples/Rendering_Orbital_in_PyMol/Visualize_MO_in_PyMol.ipynb)\n- [Charge Comparison](https://github.com/Mishima-syk/psikit/blob/master/examples/CHARGE_COMPARISON/charge_comparison.ipynb)\n\n### License\n\nCode released under the [BSD license](LICENSE).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Mishima-syk/psikit", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Psikit", "package_url": "https://pypi.org/project/Psikit/", "platform": "", "project_url": "https://pypi.org/project/Psikit/", "project_urls": {"Homepage": "https://github.com/Mishima-syk/psikit"}, "release_url": "https://pypi.org/project/Psikit/0.1.5/", "requires_dist": null, "requires_python": "", "summary": "A thin wrapper library for Psi4 and RDKit", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Psikit: a thin wrapper library for Psi4 and RDKit</h1>\n<p>Inspired from the entry:<a href=\"https://iwatobipen.wordpress.com/2018/08/24/calculate-homo-and-lumo-with-psi4-rdkit-psi4/\" rel=\"nofollow\">Calculate HOMO and LUMO with Psi4</a></p>\n<h2>Install RDKit and Psi4 from Conda</h2>\n<pre><code>conda install -c psi4 psi4\nconda install -c rdkit rdkit\nconda install -c psi4 resp # optional\n</code></pre>\n<h2>Install Psikit from Github</h2>\n<p>Psikit is under development.\nRecent version of Psikit can install from github.</p>\n<pre><code>pip install git+https://github.com/Mishima-syk/psikit\n</code></pre>\n<h2>Install Psikit with pip</h2>\n<p>Psikit is under development.\nBut current version of Psikit can install from pypi or conda.</p>\n<pre><code>pip install psikit\nconda install -c iwatobipen psikit\n</code></pre>\n<h2>Usage</h2>\n<h3>Single point calcuration</h3>\n<pre><code>from psikit import Psikit\npk = Psikit()\npk.read_from_smiles(\"c1ccccc1\")\nprint(\"SCF Energy: \", pk.energy())\nprint(\"HOMO: \", pk.HOMO)\nprint(\"LUMO: \", pk.LUMO)\nx, y, z, total = pk.dipolemoment\nprint(\"SCF Total Dipole Moment: {}\".format(total))\n# SCF Energy:  -230.712279648862\n# HOMO:  -0.32848562009092513\n# LUMO:  0.1456515222506689\n# SCF Total Dipole Moment: 3.292464934070545e-05\n</code></pre>\n<h3>Structure optimization</h3>\n<pre><code>pk = Psikit()\npk.read_from_smiles(\"c1ccccc1\")\nprint(\"Optimized SCF Energy: \", pk.optimize())\n# Optimizer: Optimization complete!\n# Optimized SCF Energy:  -230.71352354223438\n</code></pre>\n<h3>Calculate RESP Charge</h3>\n<pre><code># REF http://ambermd.org/tutorials/advanced/tutorial1/files/resp_paper_jacs.pdf\npk = Psikit()\npk.read_from_smiles(\"CC(=O)O\")\npk.optimize()\n# Optimizer: Optimization complete!\n# -227.82180859253418\npk.calc_resp_charges()\n# array([-0.32506898,  0.83672649, -0.61924915, -0.66135715,  0.10450057,\n#    0.10478188,  0.10780051,  0.45186584])\n\nfor atom in pk.mol.GetAtoms(): \n    print(atom.GetSymbol(), \"ESP:{}\\tRESP:{}\".format(atom.GetProp(\"EP\"), atom.GetProp(\"RESP\"))) \n\n# C ESP:-0.49662019588648315\tRESP:-0.3250689814483399\n# C ESP:0.91473263536048643\t\tRESP:0.83672648554100837\n# O ESP:-0.63823808477114718\tRESP:-0.61924915363703359\n# O ESP:-0.6763331997116846\t\tRESP:-0.66135714989354499\n# H ESP:0.14625849864628995\t\tRESP:0.10450056830656008\n# H ESP:0.14578513969681847\t\tRESP:0.10478187811883517\n# H ESP:0.1530843954112609\t\tRESP:0.1078005104750676\n# H ESP:0.45133081125445906\t\tRESP:0.45186584253744722\n\n### Compute Mulliken charges and Lowdin charges\n\npk = Psikit()\npk.read_from_smiles(\"CC(=O)O\")\npk.optimize() # or pk.energy()\n\npk.calc_mulliken_charges()\n# array([-0.42203029,  0.72794785, -0.55419051, -0.59333358,  0.16369722,\n#    0.1636994 ,  0.15462075,  0.35958916])\n\npk.calc_lowdin_charges()\n#array([-0.30006577,  0.33900448, -0.35983788, -0.28463832,  0.12439944,\n#    0.12810672,  0.11935266,  0.23367866])\n</code></pre>\n<h3>Jupyter notebook</h3>\n<ul>\n<li><a href=\"https://github.com/Mishima-syk/psikit/blob/master/examples/Rendering_RESP_charge/RESP%20charge%20of%20the%20tetrazole.ipynb\" rel=\"nofollow\">RESP charge</a></li>\n<li><a href=\"https://github.com/Mishima-syk/psikit/blob/master/examples/Torsion_scan/torsional_scan.ipynb\" rel=\"nofollow\">Torsion Scan</a></li>\n<li><a href=\"https://github.com/Mishima-syk/psikit/blob/master/examples/Rendering_Orbital/Render_orbital.ipynb\" rel=\"nofollow\">Rendering Orbital with VMD</a></li>\n<li><a href=\"https://github.com/Mishima-syk/psikit/blob/master/examples/Rendering_Orbital_in_PyMol/Visualize_MO_in_PyMol.ipynb\" rel=\"nofollow\">Rendering Orbital in PyMol</a></li>\n<li><a href=\"https://github.com/Mishima-syk/psikit/blob/master/examples/CHARGE_COMPARISON/charge_comparison.ipynb\" rel=\"nofollow\">Charge Comparison</a></li>\n</ul>\n<h3>License</h3>\n<p>Code released under the <a href=\"LICENSE\" rel=\"nofollow\">BSD license</a>.</p>\n\n          </div>"}, "last_serial": 5386427, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "8054409c6beabc20814c270d87ca76bb", "sha256": "4f2c626a6392308cf9566a0d603264d06c634ec620015f1ce483dccae24f798a"}, "downloads": -1, "filename": "Psikit-0.1.4.tar.gz", "has_sig": false, "md5_digest": "8054409c6beabc20814c270d87ca76bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5565, "upload_time": "2019-05-17T13:44:58", "upload_time_iso_8601": "2019-05-17T13:44:58.550779Z", "url": "https://files.pythonhosted.org/packages/96/0e/26551a14354d217b39520f1504f21e1493e2233393305b7ad930f667801a/Psikit-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "209c6cf8243136577a1a90d594968a41", "sha256": "c5195c37eb4bee3aa9c6c2c61344e032eac20df032f777a1081ca21fe815ed31"}, "downloads": -1, "filename": "Psikit-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "209c6cf8243136577a1a90d594968a41", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6114, "upload_time": "2019-06-11T12:48:52", "upload_time_iso_8601": "2019-06-11T12:48:52.121197Z", "url": "https://files.pythonhosted.org/packages/ce/c8/5d100d1e8fd6a5d56a14c07daab4291ac32f19f3ea5408adbeba30ad2461/Psikit-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "895c493b0b58a950fb761c557c5c77e7", "sha256": "ef041a1878bde5ffdb0e6c385acb52bb5c40544e56ad307d7fd318225ae554cb"}, "downloads": -1, "filename": "Psikit-0.1.5.tar.gz", "has_sig": false, "md5_digest": "895c493b0b58a950fb761c557c5c77e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5959, "upload_time": "2019-06-11T12:48:54", "upload_time_iso_8601": "2019-06-11T12:48:54.264134Z", "url": "https://files.pythonhosted.org/packages/b3/59/e8e52f48595f012c47c4acc17ab2a81d213c7efb85f5bd3ba53fb80e5a95/Psikit-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "209c6cf8243136577a1a90d594968a41", "sha256": "c5195c37eb4bee3aa9c6c2c61344e032eac20df032f777a1081ca21fe815ed31"}, "downloads": -1, "filename": "Psikit-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "209c6cf8243136577a1a90d594968a41", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6114, "upload_time": "2019-06-11T12:48:52", "upload_time_iso_8601": "2019-06-11T12:48:52.121197Z", "url": "https://files.pythonhosted.org/packages/ce/c8/5d100d1e8fd6a5d56a14c07daab4291ac32f19f3ea5408adbeba30ad2461/Psikit-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "895c493b0b58a950fb761c557c5c77e7", "sha256": "ef041a1878bde5ffdb0e6c385acb52bb5c40544e56ad307d7fd318225ae554cb"}, "downloads": -1, "filename": "Psikit-0.1.5.tar.gz", "has_sig": false, "md5_digest": "895c493b0b58a950fb761c557c5c77e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5959, "upload_time": "2019-06-11T12:48:54", "upload_time_iso_8601": "2019-06-11T12:48:54.264134Z", "url": "https://files.pythonhosted.org/packages/b3/59/e8e52f48595f012c47c4acc17ab2a81d213c7efb85f5bd3ba53fb80e5a95/Psikit-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:54 2020"}