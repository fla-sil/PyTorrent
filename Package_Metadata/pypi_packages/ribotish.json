{"info": {"author": "Peng Zhang", "author_email": "zhpn1024@163.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: Free for non-commercial use", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: Unix", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "README for Ribo-TISH (0.2.5)\n==================================\n<2019-12-9 Peng Zhang>\n\nIntroduction\n============\n\nTranslation is a critical step in gene regulation that synthesizes proteins from a given RNA template. The development of the ribosome profiling (riboseq) technique has enabled the measurement of translation at a genome-wide level. The basic idea of ribosome profiling is to perform deep-sequencing of the ribosome-protected mRNA fragment (~30 nts), termed ribosome footprints, to determine the occupancy of translating ribosomes on a given mRNA. There are several variants of the ribosome profiling technique that are based on the use of different translation inhibitors. The regular ribo-seq utilizes Cycloheximide (CHX), a translation elongation inhibitor to freeze all translating ribosomes. In contrast to CHX, the translation inhibitor lactimidomycin (LTM) and harringtonine (Harr) have a much stronger effect on initiating ribosomes. The use of these two inhibitors allows for the global mapping of translating initiating sites (TISs) when they are coupled with with ribosome profiling (TI-Seq). In addition, when LTM is used sequentially with puromycin (PMY), the TISs can be mapped quantitatively and can be compared between different conditions.\nwe present a novel algorithm, named Ribo TIS Hunter (Ribo-TISH), for identifying translation activities using ribosome profiling data. Ribo-TISH uses statistical tests to assess the significance of translation activities. It captures significant TISs using negative binomial test, and frame biased open reading frames (ORFs) using rank sum test. Ribo-TISH can also perform differential analysis between two TI-Seq data.\n\nInstall\n=======\n\nPlease check the file 'INSTALL.rst' in the distribution.\n\nUsage of Ribo-TISH\n========================\n\n::\n\n  ribotish [-h] [--version] {quality,predict,tisdiff}\n\n:Example for quality control: ``ribotish quality -b ltm.bam -g gene.gtf -t``\n\n:Example for prediction: ``ribotish predict -t ltm.bam -b chx.bam -g gene.gtf -f genome.fa -o pred.txt``\n\n:Example for differential TIS: ``ribotish tisdiff -1 pred1.txt -2 pred2.txt -a qti1.bam -b qti2.bam -g gene.gtf -o diff.txt``\n\nThere are 3 functions available as sub-commands.\n\n:quality:\tQuality control for riboseq bam data.\n:predict:\tMain function to predict ORF/TIS.\n:tisdiff:\tCall diffential TIS between two TIS data\n\nThe main input data is in bam file format. For best performance, reads should be *trimmed* (to ~ 29 nt RPF length) and aligned to genome using *end-to-end* mode (no soft-clip). Intron splicing is supported. Some attributes are needed such as NM, NH and MD. For STAR, ```--outSAMattributes All``` should be set. bam file should be sorted and indexed by samtools_.\n\nAll positions or regions reported by Ribo-TISH are 0 based, half open, same as in bed_ format.\n\n.. _samtools: https://github.com/samtools/samtools\n.. _bed: https://genome.ucsc.edu/FAQ/FAQformat.html#format1\n\n\nquality\n~~~~~~~\n\nQuality control of riboseq bam data. This function checks reads distribution around annotated protein coding regions on user provided transcripts, show frame bias and estimate P-site offset for different group of reads. Reads are grouped by read length as well as 5' end match or mismatch. 5' end mismatch ('m0') reads often have different distribution from matched reads. To turn off 5' end mismatch grouping, use ```--nom0```. \n\nThere are 3 output files: a txt file recording all distribution data, a pdf figure file and a python file for P-site offset parameters. \n\nQuick examples:\n\nFor regular riboseq\n::\n\n  ribotish quality -b chx.bam -g gene.gtf\n\nFor TI-Seq data\n::\n\n  ribotish quality -b ltm.bam -g gene.gtf -t\n\nOptions\n--------------\n\n-b RIBOBAMPATH\n``````````````\n\nRiboseq bam data file. Reads should be trimmed and aligned to genome.\n\n-g GENEPATH\n```````````\n\nGene annotation file. Acceptable formats include gtf, gff, bed and genepred with gene names. Input file format can be auto detected or specified by ```--geneformat``` option\n\n\n-o OUTPUT\n`````````\n\nOutput all distribution data. Default: bampath[:-4]+'_qual.txt'. Quality and offset estimation is based on this distribution. User can save this file for further quick estimation trying different thresholds by ```-i``` option.\n\n-t/--tis\n````````\n\nThis data is TIS enriched, for LTM and Harr. Quality will pay more attention to TIS sites.\n\n-i INPUT\n````````\n\nInput previous output file, do not read gene file and bam file again.\n\n--geneformat GENEFORMAT\n```````````````````````\n\nGene annotation file format (gtf, bed, gpd, gff, default: auto)\n\n--chrmap CHRMAP\n```````````````\n\nInput chromosome id mapping table file if annotation chr ids are not the same as chr ids in bam/fasta files. Format:\n\n========= =========\nchr_name1 chr_name2\n========= =========\n\nTwo columns, tab seperated, no specific order requirement. Mappings such as 'chr1' to '1' can be automatically processed without using this option.\n\n-f FIGPDFPATH\n`````````````\n\nOutput pdf figure file. Default: bampath[:-4]+'_qual.pdf'\n\n-r PARAPATH\n```````````\n\nOutput offset parameter file. Default: bampath+'.para.py'. This file saves P-site offsets for different reads lengths in python code dict format, and can be used in further analysis.\n\n-l LENS\n```````\n\nRange of tag length Default: 25,35. The last number (35) is not included, i.e. the longest length considered is 34.\n\n-d DIS\n``````\n\nPosition range near start codon or stop codon. Default: -40,20\n\n--bins BINS\n```````````\n\nNumber of bins for cds profile. Default: 20\n\n--nom0\n```````````\n\nNot consider reads with mismatch at position 0 (5' end mismatch) as a new group.\n\n--th TH\n```````\n\nThreshold for quality. Default: 0.5. Group that frame bias ratio < TH will be considered as low quality and this group of reads will not be used in further analysis. The offset for low quality groups will not be set in parameter file.\n\n--colorblind\n````````````\n\nUse a color style readable for color blind people ('#F00078,#00F000,#0078F0')\n\n--colors COLORS\n```````````````\n\nUser specified Matplotlib acceptable color codes for three frames (default: 'r,g,b')\n\n-p NUMPROC\n``````````\n\nNumber of processes. Default: 1\n\n-v/--verbose\n`````````````\n\nIncrease output verbosity.\n\n\nOutput files\n------------\n\nOUTPUT\n```````\n\nOUTPUT is a txt file recording all distribution data in python format for each group of reads. These distributions are shown in pdf figure file. Quality and offset estimation is based on this distribution. User can save this file for further quick estimation trying different thresholds by ```-i``` option.\n\nPdf figure\n``````````\n\nPdf figure file is plot of all the distributions and illustration of quality and P-site offset. The left part is for 5' end matched reads and the right part is for 5' end mismatch reads if ```--nom0``` is not set. \n\nUpper panel: the length distribution of RPFs uniquely mapped to annotated protein-coding regions.\n\nLower panel: different quality metrics for RPFs uniquely mapped to annotated protein-coding regions.\nEach row shows the RPFs with different lengths.\n\n - Column 1: distribution of RPF 5\u2019 end in 3 frames in all annotated codons. The percentage of the reads from the dominant reading frame is shown. \n - Column 2: the distribution of RPF 5\u2019end count near annotated TIS. The estimate of the P site offset and TIS accuracy are also shown. The RPFs of a specific length that do not pass threshold are considered as low quality and removed.              \n - Column 3: the distribution of RPF 5\u2019end count near annotated stop codon. \n - Column 4: The RPF profile throughout the protein-coding regions in 3 frames. TIS enrich score (TIS count / CDS average) is also shown for TIS data.\n\n\n\nOffset parameter file\n`````````````````````\n\nThis file saves P-site offsets for different reads lengths in python code dict format, and can be used in further analysis. The default offset file name is bampath+'.para.py' accompanied with the input bam file. The file format is like\n::\n\n  offdict = {28: 12, 29: 12, 30: 12, 32: 13, 'm0': {29: 12, 30: 12, 31: 13}}\n\nThe offset parameter file is easy to interpret and can be edited by user if auto estimated offsets are not correct. The default file name will be auto-recognized in further analysis. If the bam file is in a different directory and user do not want to create a parameter file in that directory, we recommend creating a link for the bam file in current working directory, e.g. ```ln -s original/dir/ribo.bam```\n\nRibo-TISH does not guarantee that it can always find best P-site offset values. Users should check the quality figures and edit the parameter file if necessary. \n\npredict\n~~~~~~~\n\nThis is the main function of Ribo-TISH. This function predicts ORF/TIS with riboseq bam files. This function uses negative binomial model to fit TI-Seq background and test significance of TIS sites. For regular riboseq data, Wilcoxon rank sum test between in-frame reads and out-frame reads inside the ORF is performed.\n\nQuick examples:\n\nCombine TI-Seq and regular riboseq data\n::\n\n  ribotish predict -t ltm.bam -b chx.bam -g gene.gtf -f genome.fa -o pred.txt\n\nFor TI-Seq data only\n::\n\n  ribotish predict -t ltm.bam -g gene.gtf -f genome.fa -o pred.txt\n\nDe novo ORF prediction with only regular riboseq data using longest strategy\n::\n\n  ribotish predict -b chx.bam -g gene.gtf -f genome.fa --longest -o pred.txt\n\nDe novo ORF prediction with two regular riboseq data using framebest strategy\n::\n\n  ribotish predict -b chx1.bam,chx2.bam -g gene.gtf -f genome.fa --framebest -o pred.txt\n\nOnly test user provided ORF candidates with two regular riboseq data\n::\n\n  ribotish predict -b chx1.bam,chx2.bam -g gene.gtf -f genome.fa -i cand.txt -o pred.txt\n\n\nOptions\n--------------\n\n-t TISBAMPATHS\n``````````````\n\nInput TI-seq bam data files, comma seperated.\n\n-b RIBOBAMPATHS\n```````````````\n\nRegular riboseq bam data files, comma seperated. \n\nAt least one bam file should be provided by either ```-t``` or ```-b```.\n\n-g GENEPATH\n```````````\n\nGene annotation file for ORF prediction. Acceptable formats include gtf, gff, bed and genepred with gene names. Input file format can be auto detected or specified by ```--geneformat``` option. \nIf user need to predict on only non-coding genes and use a different gene annotation file for known ORF annotation and background estimation, use ```-a``` option to provide another gene annotation for known ORF annotation. \nIf user provided candidates ```-i``` option is set, the transcript annotation for the candidates should be found in gene annotation file.\n\n-f GENOMEFAPATH\n```````````````\n\nGenome fasta file. The fasta file should has a .fai index file accompanied with genome fasta file (indexed) or indexable (fasta sequences have fixed length in each line). This program will index the genome file before prediction if .fai index file can not be found.\n\n-o OUTPUT\n`````````\n\nOutput all possible ORF results that fit the thresholds. \n\n\n-i INPUT\n````````\n\nOnly test input candidate ORFs, format: \n\n=======  =====  =====\ntransID  start  stop \n=======  =====  =====\n\nStart, stop position is 0 based, half open. Stop - start should be multiples of 3. Transcript should be found in gene annotation file.\n\n--geneformat GENEFORMAT\n```````````````````````\n\nGene annotation file format (gtf, bed, gpd, gff, default: auto)\n\n--chrmap CHRMAP\n```````````````\n\nInput chromosome id mapping table file if annotation chr ids are not same as chr ids in bam/fasta files. See --chrmap option in ```quality``` section.\n\n--tispara TISPARA\n`````````````````\n\nInput P-site offset parameter files for ```-t``` bam files. The default parameter files are bampath+'.para.py' for each bam file, which is generated in ```ribotish quality``` function. There's no need to specify this option if default parameter files exist. To use this option to provide other parameter files, each bam file should be provided with a file, and file names are separated with comma. If no parameter file is found, default offset 12 will apply for all reads in the bam data.\n\n--ribopara RIBOPARA\n```````````````````\n\nInput P-site offset parameter files for ```-b``` bam files. Same as ```--tispara``` option.\n\n--nparts NPARTS\n```````````````\n\nGroup transcript according to TIS reads density quantile. Default: 10.\n\nTIS background estimation uses ORF in-frame read counts (excluding TIS codons) to estimate negative binomial parameters. Since different transcripts have different expression levels, the background is different for highly expressed and lowly expressed transcripts. Ribo-TISH groups expressed transcripts into N parts based on TIS reads density of the transcript. Each transcript group have same total number of TIS reads.\n\n-e ESTPATH\n``````````\n\nOutput TIS background estimation result. If only one bam file is provided by ```-t``` option, the default file name is tisbampath+'.bgest.txt'. If multiple TIS data provided, the default file name is tisBackground.txt\nThe result file contains negative binomial parameters, group levels and thresholds for each group.\n\n-s INESTPATH\n````````````\n\nInput background estimation result file instead of instant estimation. By default, if only one bam file is provided by ```-t``` option, the program will first look for file name tisbampath+'.bgest.txt'. If this file exists, background parameters in this file will be used. Otherwise, TIS background estimation will run and generate a result file according to ```-e``` option.\n\n\n-a AGENEPATH\n````````````\n\nAnother gene annotation file for ORF annotation in addition to ```-g``` gene file. This option is mainly used when ```-g``` annotation focuses on predicting ORFs in non-coding transcripts and does not have sufficient protein coding gene annotation. Protein coding gene annotation is used for TIS background estimation as well as output TIS type classification.\n\n--alt\n`````\n\nUse alternative start codons. If set, all codons with 1 base different from ATG will be considered as start codon in ORF finding. Affect both TIS background estimation and prediction. It does not affect ```-i``` mode prediction. To customize alt start codons, use ```--altcodons```.\n\n\n--altcodons ALTCODONS\n`````````````````````\n\nUse provided alternative start codons, comma seperated, e.g. ```--altcodons CTG,GTG,ACG```. Turn on ```--alt``` option. Do not need to provide 'ATG'. It does not support 'N' bases.\n\n--tis2ribo\n``````````\n\nAdd TIS bam counts to regular riboseq counts. Use TIS data also for ORF frame test. This option will be turned on automatically if ```-b``` is not provided.\n\n--harr\n``````\n\nThe data is treated with harringtonine (instead of LTM). For Harr data, the reads at TIS sites are not as focus as LTM reads. Reads in flanking region (default 15 codons) of TIS will not be used for TIS background estimation. To customize flanking size, use ```--harrwidth```.\n\n\n--harrwidth HARRWIDTH\n`````````````````````\n\nFlanking region for harr data, in codons. Default: 15. Turn on ```--harr``` option.\n\n--longest\n`````````\n\nOnly report longest possible ORF results for multiple candidate start codons in the same ORF (same stop codon). This is a TIS selection strategy when there's no ```-t``` TI-Seq data input.\n\n--framebest\n```````````\n\nOnly report best frame test results for multiple candidate start codons in the same ORF (same stop codon), which is TIS with the smallest frame test p-value (marked as 'T' in RiboPStatus column). This is a TIS selection strategy when there's no ```-t``` TI-Seq data input.\n\n\n--enrichtest\n````````````\n\nUse enrich test instead of frame test. Enrich test is rank sum test between in-frame reads inside ORF and same frame reads outside ORF.\n\n--nocompatible\n``````````````\n\nNot require reads compatible with transcript splice junctions. \n\n--minaalen MINAALEN\n```````````````````\n\nMinimum amino acid length of candidate ORF, Default: 6.\n\n--genefilter GENEFILTER\n```````````````````````\n\nOnly process given genes. Comma separated. \n\n--tpth TPTH\n```````````\n\nTIS p value threshold. Default: 0.05.\n\n--fpth FPTH\n```````````\n\nFrame p value threshold. Default: 0.05.\n\n--minpth MINPTH\n```````````````\n\nAt least one of TIS or frame p value should be lower than this threshold. Default: 1.\n\n--fspth FSPTH\n`````````````\n\nFisher's p value threshold. Default: 0.05.\n\n--fsqth FSQTH\n`````````````\n\nFisher's FDR q value threshold. Default: 0.05.\n\n--allresult ALLRESULT\n`````````````````````\n\nWrite all result output without FDR q-value threshold to another file. (default: output + '_all.txt', 'off' or using ```--fsqth 1``` to turn off)\n\n-p NUMPROC\n``````````\n\nNumber of processes. Default: 1\n\n-v/--verbose\n`````````````\n\nIncrease output verbosity.\n\n--transprofile TRANSPROFILE\n```````````````````````````\n\nOutput RPF P-site profile for each transcript. The profile data is in python dict format, recording non-zero read counts at different positions on transcript.\n\n--inprofile INPROFILE \n``````````````````````\nInput RPF P-site profile for each transcript, instead of reading bam reads. The profile file is the output file from ```--transprofile``` option. Save some time for re-running.\n\n--seq\n`````\n\nReport ORF sequences.\n\n--aaseq\n````````\n\nReport amino acid sequences.\n\n\n--blocks\n````````\n\nReport all exon block positions for predicted ORFs. Format: start1-stop1,start2-stop2,...startN-stopN. In chromosome direction.\n\nOutput files\n------------\n\nOUTPUT\n```````\nThe output is a txt file all possible ORF results that fit the thresholds. Some of the columns are:\n\n:GenomePos:\tGenome position and strand of TIS site, 0 based, half open\n:Start:\t\tTIS of the ORF on transcript\n:Stop:\t\t3' end of stop codon on transcript\n:TisType:\tRelative position of this TIS to annotated ORF of the transcript. 'Novel' if no ORF annotation. ':Known' means the TIS is annotated in another transcript. ':CDSOverlap' means the ORF overlaps with annotated CDS in another transcript in the same reading frame.\n:TISGroup:\tGroup of the transcript for TIS background estimation\n:TISCount:\tNumber of reads with P-site at TIS site\n:TISPvalue:\tOne tailed negative binomial test p-value for TISCount (TIS test)\n:RiboPvalue:\tOne tailed rank sum test p-value for regular riboseq frame bias inside ORF (frame test)\n:RiboPStatus:\tFor all ORFs sharing same stop codon, 'T' means top (best) p-value, 'L' means local best p-value, 'N' means other. All 'N' in ```-i``` or ```--longest``` mode.\n:FisherPvalue:\tCombination of TIS and Ribo p-values using Fisher's method\n:TISQvalue:\tBH correction q-value of TIS test\n:RiboQvalue:\tBH correction q-value of frame test\n:FisherQvalue:\tBH correction q-value of Fisher's p-value\n:AALen:\t\tAmino acid length of the ORF\n\nALL\n```\nThe '_all' output result is generated according to ```--allresult``` option, which is similar to the output but do not use FDR (q-value) cutoff. Other cutoffs are the same as output file.\n\ntisdiff\n~~~~~~~\n\nThis is the function for differential TIS identification. This function uses two different TIS test results generated by ```ribotish predict``` using different quantitative TI-Seq (QTI-Seq) data. The ordinary global TI-Seq (GTI-Seq) may have some biases so is not suitable for differential analysis. \n\nFirst a normalization factor is estimated by Trimmed Mean of M values (TMM) method on the union of significant TIS counts in the two results. Then binomial test p-value and fold change are calculated. If RNASeq counts are provided as reference, the TI efficiency is calculated using Fisher's exact test with normalized count values.\n\nQuick examples:\n\nDifferential TIS activity calling\n::\n\n  ribotish tisdiff -1 pred1.txt -2 pred2.txt -a qti1.bam -b qti2.bam -g gene.gtf -o diff.txt\n\nDifferential TIS efficiency calling with RNASeq count input\n::\n\n  ribotish tisdiff -1 pred1.txt -2 pred2.txt -a qti1.bam -b qti2.bam -g gene.gtf --rnaseq RNA.txt -o diff.txt\n\nOptions\n--------------\n\n-1 TIS1PATH, -2 TIS2PATH\n````````````````````````\n\nPredict result of group 1 & 2 TIS data. Comma seperated if there are more than 1 replicates.\n\n-a TIS1BAMPATHS, -b TIS1BAMPATHS\n````````````````````````````````\n\nGroup 1 & 2 TIS riboseq bam files, comma seperated.\n\n--l1 TIS1LABELS, --l2 TIS2LABELS\n````````````````````````````````\n\nLabels for each replicate.\n\n-g GENEPATH\n```````````\n\nGene annotation file. Acceptable formats include gtf, gff, bed and genepred with gene names. Input file format can be auto detected or specified by ```--geneformat``` option. \n\n-o OUTPUT\n`````````\n\nOutput result file.\n\n\n--geneformat GENEFORMAT\n```````````````````````\n\nGene annotation file format (gtf, bed, gpd, gff, default: auto)\n\n--tis1para TIS1PARA, --tis2para TIS2PARA\n````````````````````````````````````````\n\nInput P-site offset parameter files for group 1 & 2 bam files. The default parameter files are bampath+'.para.py' for each bam file, which is generated in ```ribotish quality``` function. To use this option, each bam file should be provided with a file, and file names are separated with comma. If no parameter file is found, default offset 12 will apply for all reads in the bam data.\n\n\n--nocompatible\n``````````````\n\nNot require reads compatible with transcript splice junctions. \n\n--normcomm\n``````````\n\nUse common TISs instead of union TISs for normalization.\n\n--normanno\n``````````\n\nUse only annotated TISs for normalization.\n\n--rnaseq RNASEQ\n```````````````\n\nRNASeq count input. Format:\n\n==== ====== ====== ======\nID   count1 count2 ...\n==== ====== ====== ======\n\nBoth gene ID and transcript ID are acceptable.\n\n--scalefactor SCALEFACTOR\n`````````````````````````\n\nInput TIS scale factor of group 2/1 instead of auto calculate. Not log value.\n\n--rnascale RNASCALE\n```````````````````\n\nInput RNASeq scale factor of group 2/1 instead of auto calculate. Not log value.\n\n--export EXPORT\n```````````````\n\nExport count table for differential analysis with other tools. Especially for replicated data. \n\n--plotout PLOTOUT\n`````````````````\n\nScatter plot output pdf file.\n\n--figsize FIGSIZE\n`````````````````\n\nScatter plot figure size. Default: 8,8.\n\n-f FOLDCHANGE\n`````````````\n\nMinimum fold change threshold. Default: 1.5.\n\n--ipth IPTH\n```````````\n\nInput TIS p value threshold. Default: 0.05.\n\n--iqth IQTH\n```````````\n\nInput TIS q value threshold. Default: 0.05.\n\n--opth OPTH\n```````````\n\nOutput TIS diff p value threshold. Default: 0.05.\n\n--oqth OQTH\n```````````\n\nOutput TIS diff q value threshold. Default: 0.05.\n\n-p NUMPROC\n``````````\n\nNumber of processes. Default: 1\n\n-v/--verbose\n`````````````\n\nIncrease output verbosity.\n\n\nOutput files\n------------\n\nOUTPUT\n```````\nThe output is a txt file all differential TIS results that fit the thresholds. Some of the columns are:\n\n:FoldChange:\tFold change (2/1) value after normalization\n:DiffPvalue:\tDifferential test p-value, two-tailed.\n:DiffQvalue:\tBH correction q-value of DiffPvalue\n\nEXPORT\n``````\n\nThe export table is generated using ```--export``` option. It is also automatically generated when the input data has replicated samples. It is a txt file with raw TIS counts for each predicted TIS. The format of TIS id is 'TransID_Start_GenomePos'.\n\nFor replicated data, Ribo-TISH provided R scripts to call differential TISs using edgeR_ or DESeq2_.\n\nExample for edgeR:\n::\n\n  Rscript path_to_scripts/tisdiff_edgeR.r tisdiff_export.txt 3 4 tisdiff_edgeR_output.txt\n\nFor DESeq2:\n::\n\n  Rscript path_to_scripts/tisdiff_DESeq2.r tisdiff_export.txt 3 4 tisdiff_DESeq2_output.txt\n\n3 and 4 are number of replicates in two conditions.\n\n.. _edgeR: https://bioconductor.org/packages/edgeR\n.. _DESeq2: https://bioconductor.org/packages/DESeq2\n\nIf ```--rnaseq``` is provided, the RNASeq counts of genes/transcripts for the TISs are also provided in the export table. However, the analysis for RNASeq referenced differential TIS efficiency analysis with replicate data is currently unavailable.\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zhpn1024/ribotish", "keywords": "Python,Riboseq,translation", "license": "GNU General Public License (GPL)", "maintainer": "", "maintainer_email": "", "name": "ribotish", "package_url": "https://pypi.org/project/ribotish/", "platform": "", "project_url": "https://pypi.org/project/ribotish/", "project_urls": {"Homepage": "https://github.com/zhpn1024/ribotish"}, "release_url": "https://pypi.org/project/ribotish/0.2.5/", "requires_dist": ["pysam (>=0.8.3)", "matplotlib (>=1.4.3)", "scipy (>=0.15.1)"], "requires_python": "", "summary": "Python Modules for Riboseq data analysis.", "version": "0.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"readme-for-ribo-tish-0-2-5\">\n<h2>README for Ribo-TISH (0.2.5)</h2>\n<p>&lt;2019-12-9 Peng Zhang&gt;</p>\n</div>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Translation is a critical step in gene regulation that synthesizes proteins from a given RNA template. The development of the ribosome profiling (riboseq) technique has enabled the measurement of translation at a genome-wide level. The basic idea of ribosome profiling is to perform deep-sequencing of the ribosome-protected mRNA fragment (~30 nts), termed ribosome footprints, to determine the occupancy of translating ribosomes on a given mRNA. There are several variants of the ribosome profiling technique that are based on the use of different translation inhibitors. The regular ribo-seq utilizes Cycloheximide (CHX), a translation elongation inhibitor to freeze all translating ribosomes. In contrast to CHX, the translation inhibitor lactimidomycin (LTM) and harringtonine (Harr) have a much stronger effect on initiating ribosomes. The use of these two inhibitors allows for the global mapping of translating initiating sites (TISs) when they are coupled with with ribosome profiling (TI-Seq). In addition, when LTM is used sequentially with puromycin (PMY), the TISs can be mapped quantitatively and can be compared between different conditions.\nwe present a novel algorithm, named Ribo TIS Hunter (Ribo-TISH), for identifying translation activities using ribosome profiling data. Ribo-TISH uses statistical tests to assess the significance of translation activities. It captures significant TISs using negative binomial test, and frame biased open reading frames (ORFs) using rank sum test. Ribo-TISH can also perform differential analysis between two TI-Seq data.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Please check the file \u2018INSTALL.rst\u2019 in the distribution.</p>\n</div>\n<div id=\"usage-of-ribo-tish\">\n<h2>Usage of Ribo-TISH</h2>\n<pre>ribotish [-h] [--version] {quality,predict,tisdiff}\n</pre>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Example for quality control:</th></tr>\n<tr><td>\u00a0</td><td><tt>ribotish quality <span class=\"pre\">-b</span> ltm.bam <span class=\"pre\">-g</span> gene.gtf <span class=\"pre\">-t</span></tt></td>\n</tr>\n<tr><th>Example for prediction:</th></tr>\n<tr><td>\u00a0</td><td><tt>ribotish predict <span class=\"pre\">-t</span> ltm.bam <span class=\"pre\">-b</span> chx.bam <span class=\"pre\">-g</span> gene.gtf <span class=\"pre\">-f</span> genome.fa <span class=\"pre\">-o</span> pred.txt</tt></td>\n</tr>\n<tr><th>Example for differential TIS:</th></tr>\n<tr><td>\u00a0</td><td><tt>ribotish tisdiff <span class=\"pre\">-1</span> pred1.txt <span class=\"pre\">-2</span> pred2.txt <span class=\"pre\">-a</span> qti1.bam <span class=\"pre\">-b</span> qti2.bam <span class=\"pre\">-g</span> gene.gtf <span class=\"pre\">-o</span> diff.txt</tt></td>\n</tr>\n</tbody>\n</table>\n<p>There are 3 functions available as sub-commands.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>quality:</th><td>Quality control for riboseq bam data.</td>\n</tr>\n<tr><th>predict:</th><td>Main function to predict ORF/TIS.</td>\n</tr>\n<tr><th>tisdiff:</th><td>Call diffential TIS between two TIS data</td>\n</tr>\n</tbody>\n</table>\n<p>The main input data is in bam file format. For best performance, reads should be <em>trimmed</em> (to ~ 29 nt RPF length) and aligned to genome using <em>end-to-end</em> mode (no soft-clip). Intron splicing is supported. Some attributes are needed such as NM, NH and MD. For STAR, <tt><span class=\"pre\">`--outSAMattributes</span> All`</tt> should be set. bam file should be sorted and indexed by <a href=\"https://github.com/samtools/samtools\" rel=\"nofollow\">samtools</a>.</p>\n<p>All positions or regions reported by Ribo-TISH are 0 based, half open, same as in <a href=\"https://genome.ucsc.edu/FAQ/FAQformat.html#format1\" rel=\"nofollow\">bed</a> format.</p>\n<div id=\"quality\">\n<h3>quality</h3>\n<p>Quality control of riboseq bam data. This function checks reads distribution around annotated protein coding regions on user provided transcripts, show frame bias and estimate P-site offset for different group of reads. Reads are grouped by read length as well as 5\u2019 end match or mismatch. 5\u2019 end mismatch (\u2018m0\u2019) reads often have different distribution from matched reads. To turn off 5\u2019 end mismatch grouping, use <tt><span class=\"pre\">`--nom0`</span></tt>.</p>\n<p>There are 3 output files: a txt file recording all distribution data, a pdf figure file and a python file for P-site offset parameters.</p>\n<p>Quick examples:</p>\n<p>For regular riboseq</p>\n<pre>ribotish quality -b chx.bam -g gene.gtf\n</pre>\n<p>For TI-Seq data</p>\n<pre>ribotish quality -b ltm.bam -g gene.gtf -t\n</pre>\n<div id=\"options\">\n<h4>Options</h4>\n<div id=\"b-ribobampath\">\n<h5>-b RIBOBAMPATH</h5>\n<p>Riboseq bam data file. Reads should be trimmed and aligned to genome.</p>\n</div>\n<div id=\"g-genepath\">\n<h5>-g GENEPATH</h5>\n<p>Gene annotation file. Acceptable formats include gtf, gff, bed and genepred with gene names. Input file format can be auto detected or specified by <tt><span class=\"pre\">`--geneformat`</span></tt> option</p>\n</div>\n<div id=\"o-output\">\n<h5>-o OUTPUT</h5>\n<p>Output all distribution data. Default: bampath[:-4]+\u2019_qual.txt\u2019. Quality and offset estimation is based on this distribution. User can save this file for further quick estimation trying different thresholds by <tt><span class=\"pre\">`-i`</span></tt> option.</p>\n</div>\n<div id=\"t-tis\">\n<h5>-t/\u2013tis</h5>\n<p>This data is TIS enriched, for LTM and Harr. Quality will pay more attention to TIS sites.</p>\n</div>\n<div id=\"i-input\">\n<h5>-i INPUT</h5>\n<p>Input previous output file, do not read gene file and bam file again.</p>\n</div>\n<div id=\"geneformat-geneformat\">\n<h5>\u2013geneformat GENEFORMAT</h5>\n<p>Gene annotation file format (gtf, bed, gpd, gff, default: auto)</p>\n</div>\n<div id=\"chrmap-chrmap\">\n<h5>\u2013chrmap CHRMAP</h5>\n<p>Input chromosome id mapping table file if annotation chr ids are not the same as chr ids in bam/fasta files. Format:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>chr_name1</td>\n<td>chr_name2</td>\n</tr>\n</tbody>\n</table>\n<p>Two columns, tab seperated, no specific order requirement. Mappings such as \u2018chr1\u2019 to \u20181\u2019 can be automatically processed without using this option.</p>\n</div>\n<div id=\"f-figpdfpath\">\n<h5>-f FIGPDFPATH</h5>\n<p>Output pdf figure file. Default: bampath[:-4]+\u2019_qual.pdf\u2019</p>\n</div>\n<div id=\"r-parapath\">\n<h5>-r PARAPATH</h5>\n<p>Output offset parameter file. Default: bampath+\u2019.para.py\u2019. This file saves P-site offsets for different reads lengths in python code dict format, and can be used in further analysis.</p>\n</div>\n<div id=\"l-lens\">\n<h5>-l LENS</h5>\n<p>Range of tag length Default: 25,35. The last number (35) is not included, i.e. the longest length considered is 34.</p>\n</div>\n<div id=\"d-dis\">\n<h5>-d DIS</h5>\n<p>Position range near start codon or stop codon. Default: -40,20</p>\n</div>\n<div id=\"bins-bins\">\n<h5>\u2013bins BINS</h5>\n<p>Number of bins for cds profile. Default: 20</p>\n</div>\n<div id=\"nom0\">\n<h5>\u2013nom0</h5>\n<p>Not consider reads with mismatch at position 0 (5\u2019 end mismatch) as a new group.</p>\n</div>\n<div id=\"th-th\">\n<h5>\u2013th TH</h5>\n<p>Threshold for quality. Default: 0.5. Group that frame bias ratio &lt; TH will be considered as low quality and this group of reads will not be used in further analysis. The offset for low quality groups will not be set in parameter file.</p>\n</div>\n<div id=\"colorblind\">\n<h5>\u2013colorblind</h5>\n<p>Use a color style readable for color blind people (\u2018#F00078,#00F000,#0078F0\u2019)</p>\n</div>\n<div id=\"colors-colors\">\n<h5>\u2013colors COLORS</h5>\n<p>User specified Matplotlib acceptable color codes for three frames (default: \u2018r,g,b\u2019)</p>\n</div>\n<div id=\"p-numproc\">\n<h5>-p NUMPROC</h5>\n<p>Number of processes. Default: 1</p>\n</div>\n<div id=\"v-verbose\">\n<h5>-v/\u2013verbose</h5>\n<p>Increase output verbosity.</p>\n</div>\n</div>\n<div id=\"output-files\">\n<h4>Output files</h4>\n<div id=\"output\">\n<h5>OUTPUT</h5>\n<p>OUTPUT is a txt file recording all distribution data in python format for each group of reads. These distributions are shown in pdf figure file. Quality and offset estimation is based on this distribution. User can save this file for further quick estimation trying different thresholds by <tt><span class=\"pre\">`-i`</span></tt> option.</p>\n</div>\n<div id=\"pdf-figure\">\n<h5>Pdf figure</h5>\n<p>Pdf figure file is plot of all the distributions and illustration of quality and P-site offset. The left part is for 5\u2019 end matched reads and the right part is for 5\u2019 end mismatch reads if <tt><span class=\"pre\">`--nom0`</span></tt> is not set.</p>\n<p>Upper panel: the length distribution of RPFs uniquely mapped to annotated protein-coding regions.</p>\n<p>Lower panel: different quality metrics for RPFs uniquely mapped to annotated protein-coding regions.\nEach row shows the RPFs with different lengths.</p>\n<blockquote>\n<ul>\n<li>Column 1: distribution of RPF 5\u2019 end in 3 frames in all annotated codons. The percentage of the reads from the dominant reading frame is shown.</li>\n<li>Column 2: the distribution of RPF 5\u2019end count near annotated TIS. The estimate of the P site offset and TIS accuracy are also shown. The RPFs of a specific length that do not pass threshold are considered as low quality and removed.</li>\n<li>Column 3: the distribution of RPF 5\u2019end count near annotated stop codon.</li>\n<li>Column 4: The RPF profile throughout the protein-coding regions in 3 frames. TIS enrich score (TIS count / CDS average) is also shown for TIS data.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"offset-parameter-file\">\n<h5>Offset parameter file</h5>\n<p>This file saves P-site offsets for different reads lengths in python code dict format, and can be used in further analysis. The default offset file name is bampath+\u2019.para.py\u2019 accompanied with the input bam file. The file format is like</p>\n<pre>offdict = {28: 12, 29: 12, 30: 12, 32: 13, 'm0': {29: 12, 30: 12, 31: 13}}\n</pre>\n<p>The offset parameter file is easy to interpret and can be edited by user if auto estimated offsets are not correct. The default file name will be auto-recognized in further analysis. If the bam file is in a different directory and user do not want to create a parameter file in that directory, we recommend creating a link for the bam file in current working directory, e.g. <tt>`ln <span class=\"pre\">-s</span> original/dir/ribo.bam`</tt></p>\n<p>Ribo-TISH does not guarantee that it can always find best P-site offset values. Users should check the quality figures and edit the parameter file if necessary.</p>\n</div>\n</div>\n</div>\n<div id=\"predict\">\n<h3>predict</h3>\n<p>This is the main function of Ribo-TISH. This function predicts ORF/TIS with riboseq bam files. This function uses negative binomial model to fit TI-Seq background and test significance of TIS sites. For regular riboseq data, Wilcoxon rank sum test between in-frame reads and out-frame reads inside the ORF is performed.</p>\n<p>Quick examples:</p>\n<p>Combine TI-Seq and regular riboseq data</p>\n<pre>ribotish predict -t ltm.bam -b chx.bam -g gene.gtf -f genome.fa -o pred.txt\n</pre>\n<p>For TI-Seq data only</p>\n<pre>ribotish predict -t ltm.bam -g gene.gtf -f genome.fa -o pred.txt\n</pre>\n<p>De novo ORF prediction with only regular riboseq data using longest strategy</p>\n<pre>ribotish predict -b chx.bam -g gene.gtf -f genome.fa --longest -o pred.txt\n</pre>\n<p>De novo ORF prediction with two regular riboseq data using framebest strategy</p>\n<pre>ribotish predict -b chx1.bam,chx2.bam -g gene.gtf -f genome.fa --framebest -o pred.txt\n</pre>\n<p>Only test user provided ORF candidates with two regular riboseq data</p>\n<pre>ribotish predict -b chx1.bam,chx2.bam -g gene.gtf -f genome.fa -i cand.txt -o pred.txt\n</pre>\n<div id=\"id1\">\n<h4>Options</h4>\n<div id=\"t-tisbampaths\">\n<h5>-t TISBAMPATHS</h5>\n<p>Input TI-seq bam data files, comma seperated.</p>\n</div>\n<div id=\"b-ribobampaths\">\n<h5>-b RIBOBAMPATHS</h5>\n<p>Regular riboseq bam data files, comma seperated.</p>\n<p>At least one bam file should be provided by either <tt><span class=\"pre\">`-t`</span></tt> or <tt><span class=\"pre\">`-b`</span></tt>.</p>\n</div>\n<div id=\"id2\">\n<h5>-g GENEPATH</h5>\n<p>Gene annotation file for ORF prediction. Acceptable formats include gtf, gff, bed and genepred with gene names. Input file format can be auto detected or specified by <tt><span class=\"pre\">`--geneformat`</span></tt> option.\nIf user need to predict on only non-coding genes and use a different gene annotation file for known ORF annotation and background estimation, use <tt><span class=\"pre\">`-a`</span></tt> option to provide another gene annotation for known ORF annotation.\nIf user provided candidates <tt><span class=\"pre\">`-i`</span></tt> option is set, the transcript annotation for the candidates should be found in gene annotation file.</p>\n</div>\n<div id=\"f-genomefapath\">\n<h5>-f GENOMEFAPATH</h5>\n<p>Genome fasta file. The fasta file should has a .fai index file accompanied with genome fasta file (indexed) or indexable (fasta sequences have fixed length in each line). This program will index the genome file before prediction if .fai index file can not be found.</p>\n</div>\n<div id=\"id3\">\n<h5>-o OUTPUT</h5>\n<p>Output all possible ORF results that fit the thresholds.</p>\n</div>\n<div id=\"id4\">\n<h5>-i INPUT</h5>\n<p>Only test input candidate ORFs, format:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>transID</td>\n<td>start</td>\n<td>stop</td>\n</tr>\n</tbody>\n</table>\n<p>Start, stop position is 0 based, half open. Stop - start should be multiples of 3. Transcript should be found in gene annotation file.</p>\n</div>\n<div id=\"id5\">\n<h5>\u2013geneformat GENEFORMAT</h5>\n<p>Gene annotation file format (gtf, bed, gpd, gff, default: auto)</p>\n</div>\n<div id=\"id6\">\n<h5>\u2013chrmap CHRMAP</h5>\n<p>Input chromosome id mapping table file if annotation chr ids are not same as chr ids in bam/fasta files. See \u2013chrmap option in <tt>`quality`</tt> section.</p>\n</div>\n<div id=\"tispara-tispara\">\n<h5>\u2013tispara TISPARA</h5>\n<p>Input P-site offset parameter files for <tt><span class=\"pre\">`-t`</span></tt> bam files. The default parameter files are bampath+\u2019.para.py\u2019 for each bam file, which is generated in <tt>`ribotish quality`</tt> function. There\u2019s no need to specify this option if default parameter files exist. To use this option to provide other parameter files, each bam file should be provided with a file, and file names are separated with comma. If no parameter file is found, default offset 12 will apply for all reads in the bam data.</p>\n</div>\n<div id=\"ribopara-ribopara\">\n<h5>\u2013ribopara RIBOPARA</h5>\n<p>Input P-site offset parameter files for <tt><span class=\"pre\">`-b`</span></tt> bam files. Same as <tt><span class=\"pre\">`--tispara`</span></tt> option.</p>\n</div>\n<div id=\"nparts-nparts\">\n<h5>\u2013nparts NPARTS</h5>\n<p>Group transcript according to TIS reads density quantile. Default: 10.</p>\n<p>TIS background estimation uses ORF in-frame read counts (excluding TIS codons) to estimate negative binomial parameters. Since different transcripts have different expression levels, the background is different for highly expressed and lowly expressed transcripts. Ribo-TISH groups expressed transcripts into N parts based on TIS reads density of the transcript. Each transcript group have same total number of TIS reads.</p>\n</div>\n<div id=\"e-estpath\">\n<h5>-e ESTPATH</h5>\n<p>Output TIS background estimation result. If only one bam file is provided by <tt><span class=\"pre\">`-t`</span></tt> option, the default file name is tisbampath+\u2019.bgest.txt\u2019. If multiple TIS data provided, the default file name is tisBackground.txt\nThe result file contains negative binomial parameters, group levels and thresholds for each group.</p>\n</div>\n<div id=\"s-inestpath\">\n<h5>-s INESTPATH</h5>\n<p>Input background estimation result file instead of instant estimation. By default, if only one bam file is provided by <tt><span class=\"pre\">`-t`</span></tt> option, the program will first look for file name tisbampath+\u2019.bgest.txt\u2019. If this file exists, background parameters in this file will be used. Otherwise, TIS background estimation will run and generate a result file according to <tt><span class=\"pre\">`-e`</span></tt> option.</p>\n</div>\n<div id=\"a-agenepath\">\n<h5>-a AGENEPATH</h5>\n<p>Another gene annotation file for ORF annotation in addition to <tt><span class=\"pre\">`-g`</span></tt> gene file. This option is mainly used when <tt><span class=\"pre\">`-g`</span></tt> annotation focuses on predicting ORFs in non-coding transcripts and does not have sufficient protein coding gene annotation. Protein coding gene annotation is used for TIS background estimation as well as output TIS type classification.</p>\n</div>\n<div id=\"alt\">\n<h5>\u2013alt</h5>\n<p>Use alternative start codons. If set, all codons with 1 base different from ATG will be considered as start codon in ORF finding. Affect both TIS background estimation and prediction. It does not affect <tt><span class=\"pre\">`-i`</span></tt> mode prediction. To customize alt start codons, use <tt><span class=\"pre\">`--altcodons`</span></tt>.</p>\n</div>\n<div id=\"altcodons-altcodons\">\n<h5>\u2013altcodons ALTCODONS</h5>\n<p>Use provided alternative start codons, comma seperated, e.g. <tt><span class=\"pre\">`--altcodons</span> CTG,GTG,ACG`</tt>. Turn on <tt><span class=\"pre\">`--alt`</span></tt> option. Do not need to provide \u2018ATG\u2019. It does not support \u2018N\u2019 bases.</p>\n</div>\n<div id=\"tis2ribo\">\n<h5>\u2013tis2ribo</h5>\n<p>Add TIS bam counts to regular riboseq counts. Use TIS data also for ORF frame test. This option will be turned on automatically if <tt><span class=\"pre\">`-b`</span></tt> is not provided.</p>\n</div>\n<div id=\"harr\">\n<h5>\u2013harr</h5>\n<p>The data is treated with harringtonine (instead of LTM). For Harr data, the reads at TIS sites are not as focus as LTM reads. Reads in flanking region (default 15 codons) of TIS will not be used for TIS background estimation. To customize flanking size, use <tt><span class=\"pre\">`--harrwidth`</span></tt>.</p>\n</div>\n<div id=\"harrwidth-harrwidth\">\n<h5>\u2013harrwidth HARRWIDTH</h5>\n<p>Flanking region for harr data, in codons. Default: 15. Turn on <tt><span class=\"pre\">`--harr`</span></tt> option.</p>\n</div>\n<div id=\"longest\">\n<h5>\u2013longest</h5>\n<p>Only report longest possible ORF results for multiple candidate start codons in the same ORF (same stop codon). This is a TIS selection strategy when there\u2019s no <tt><span class=\"pre\">`-t`</span></tt> TI-Seq data input.</p>\n</div>\n<div id=\"framebest\">\n<h5>\u2013framebest</h5>\n<p>Only report best frame test results for multiple candidate start codons in the same ORF (same stop codon), which is TIS with the smallest frame test p-value (marked as \u2018T\u2019 in RiboPStatus column). This is a TIS selection strategy when there\u2019s no <tt><span class=\"pre\">`-t`</span></tt> TI-Seq data input.</p>\n</div>\n<div id=\"enrichtest\">\n<h5>\u2013enrichtest</h5>\n<p>Use enrich test instead of frame test. Enrich test is rank sum test between in-frame reads inside ORF and same frame reads outside ORF.</p>\n</div>\n<div id=\"nocompatible\">\n<h5>\u2013nocompatible</h5>\n<p>Not require reads compatible with transcript splice junctions.</p>\n</div>\n<div id=\"minaalen-minaalen\">\n<h5>\u2013minaalen MINAALEN</h5>\n<p>Minimum amino acid length of candidate ORF, Default: 6.</p>\n</div>\n<div id=\"genefilter-genefilter\">\n<h5>\u2013genefilter GENEFILTER</h5>\n<p>Only process given genes. Comma separated.</p>\n</div>\n<div id=\"tpth-tpth\">\n<h5>\u2013tpth TPTH</h5>\n<p>TIS p value threshold. Default: 0.05.</p>\n</div>\n<div id=\"fpth-fpth\">\n<h5>\u2013fpth FPTH</h5>\n<p>Frame p value threshold. Default: 0.05.</p>\n</div>\n<div id=\"minpth-minpth\">\n<h5>\u2013minpth MINPTH</h5>\n<p>At least one of TIS or frame p value should be lower than this threshold. Default: 1.</p>\n</div>\n<div id=\"fspth-fspth\">\n<h5>\u2013fspth FSPTH</h5>\n<p>Fisher\u2019s p value threshold. Default: 0.05.</p>\n</div>\n<div id=\"fsqth-fsqth\">\n<h5>\u2013fsqth FSQTH</h5>\n<p>Fisher\u2019s FDR q value threshold. Default: 0.05.</p>\n</div>\n<div id=\"allresult-allresult\">\n<h5>\u2013allresult ALLRESULT</h5>\n<p>Write all result output without FDR q-value threshold to another file. (default: output + \u2018_all.txt\u2019, \u2018off\u2019 or using <tt><span class=\"pre\">`--fsqth</span> 1`</tt> to turn off)</p>\n</div>\n<div id=\"id7\">\n<h5>-p NUMPROC</h5>\n<p>Number of processes. Default: 1</p>\n</div>\n<div id=\"id8\">\n<h5>-v/\u2013verbose</h5>\n<p>Increase output verbosity.</p>\n</div>\n<div id=\"transprofile-transprofile\">\n<h5>\u2013transprofile TRANSPROFILE</h5>\n<p>Output RPF P-site profile for each transcript. The profile data is in python dict format, recording non-zero read counts at different positions on transcript.</p>\n</div>\n<div id=\"inprofile-inprofile\">\n<h5>\u2013inprofile INPROFILE</h5>\n<p>Input RPF P-site profile for each transcript, instead of reading bam reads. The profile file is the output file from <tt><span class=\"pre\">`--transprofile`</span></tt> option. Save some time for re-running.</p>\n</div>\n<div id=\"seq\">\n<h5>\u2013seq</h5>\n<p>Report ORF sequences.</p>\n</div>\n<div id=\"aaseq\">\n<h5>\u2013aaseq</h5>\n<p>Report amino acid sequences.</p>\n</div>\n<div id=\"blocks\">\n<h5>\u2013blocks</h5>\n<p>Report all exon block positions for predicted ORFs. Format: start1-stop1,start2-stop2,\u2026startN-stopN. In chromosome direction.</p>\n</div>\n</div>\n<div id=\"id9\">\n<h4>Output files</h4>\n<div id=\"id10\">\n<h5>OUTPUT</h5>\n<p>The output is a txt file all possible ORF results that fit the thresholds. Some of the columns are:</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>GenomePos:</th><td>Genome position and strand of TIS site, 0 based, half open</td>\n</tr>\n<tr><th>Start:</th><td>TIS of the ORF on transcript</td>\n</tr>\n<tr><th>Stop:</th><td>3\u2019 end of stop codon on transcript</td>\n</tr>\n<tr><th>TisType:</th><td>Relative position of this TIS to annotated ORF of the transcript. \u2018Novel\u2019 if no ORF annotation. \u2018:Known\u2019 means the TIS is annotated in another transcript. \u2018:CDSOverlap\u2019 means the ORF overlaps with annotated CDS in another transcript in the same reading frame.</td>\n</tr>\n<tr><th>TISGroup:</th><td>Group of the transcript for TIS background estimation</td>\n</tr>\n<tr><th>TISCount:</th><td>Number of reads with P-site at TIS site</td>\n</tr>\n<tr><th>TISPvalue:</th><td>One tailed negative binomial test p-value for TISCount (TIS test)</td>\n</tr>\n<tr><th>RiboPvalue:</th><td>One tailed rank sum test p-value for regular riboseq frame bias inside ORF (frame test)</td>\n</tr>\n<tr><th>RiboPStatus:</th><td>For all ORFs sharing same stop codon, \u2018T\u2019 means top (best) p-value, \u2018L\u2019 means local best p-value, \u2018N\u2019 means other. All \u2018N\u2019 in <tt><span class=\"pre\">`-i`</span></tt> or <tt><span class=\"pre\">`--longest`</span></tt> mode.</td>\n</tr>\n<tr><th>FisherPvalue:</th><td>Combination of TIS and Ribo p-values using Fisher\u2019s method</td>\n</tr>\n<tr><th>TISQvalue:</th><td>BH correction q-value of TIS test</td>\n</tr>\n<tr><th>RiboQvalue:</th><td>BH correction q-value of frame test</td>\n</tr>\n<tr><th>FisherQvalue:</th><td>BH correction q-value of Fisher\u2019s p-value</td>\n</tr>\n<tr><th>AALen:</th><td>Amino acid length of the ORF</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"all\">\n<h5>ALL</h5>\n<p>The \u2018_all\u2019 output result is generated according to <tt><span class=\"pre\">`--allresult`</span></tt> option, which is similar to the output but do not use FDR (q-value) cutoff. Other cutoffs are the same as output file.</p>\n</div>\n</div>\n</div>\n<div id=\"tisdiff\">\n<h3>tisdiff</h3>\n<p>This is the function for differential TIS identification. This function uses two different TIS test results generated by <tt>`ribotish predict`</tt> using different quantitative TI-Seq (QTI-Seq) data. The ordinary global TI-Seq (GTI-Seq) may have some biases so is not suitable for differential analysis.</p>\n<p>First a normalization factor is estimated by Trimmed Mean of M values (TMM) method on the union of significant TIS counts in the two results. Then binomial test p-value and fold change are calculated. If RNASeq counts are provided as reference, the TI efficiency is calculated using Fisher\u2019s exact test with normalized count values.</p>\n<p>Quick examples:</p>\n<p>Differential TIS activity calling</p>\n<pre>ribotish tisdiff -1 pred1.txt -2 pred2.txt -a qti1.bam -b qti2.bam -g gene.gtf -o diff.txt\n</pre>\n<p>Differential TIS efficiency calling with RNASeq count input</p>\n<pre>ribotish tisdiff -1 pred1.txt -2 pred2.txt -a qti1.bam -b qti2.bam -g gene.gtf --rnaseq RNA.txt -o diff.txt\n</pre>\n<div id=\"id11\">\n<h4>Options</h4>\n<div id=\"tis1path-2-tis2path\">\n<h5>-1 TIS1PATH, -2 TIS2PATH</h5>\n<p>Predict result of group 1 &amp; 2 TIS data. Comma seperated if there are more than 1 replicates.</p>\n</div>\n<div id=\"a-tis1bampaths-b-tis1bampaths\">\n<h5>-a TIS1BAMPATHS, -b TIS1BAMPATHS</h5>\n<p>Group 1 &amp; 2 TIS riboseq bam files, comma seperated.</p>\n</div>\n<div id=\"l1-tis1labels-l2-tis2labels\">\n<h5>\u2013l1 TIS1LABELS, \u2013l2 TIS2LABELS</h5>\n<p>Labels for each replicate.</p>\n</div>\n<div id=\"id12\">\n<h5>-g GENEPATH</h5>\n<p>Gene annotation file. Acceptable formats include gtf, gff, bed and genepred with gene names. Input file format can be auto detected or specified by <tt><span class=\"pre\">`--geneformat`</span></tt> option.</p>\n</div>\n<div id=\"id13\">\n<h5>-o OUTPUT</h5>\n<p>Output result file.</p>\n</div>\n<div id=\"id14\">\n<h5>\u2013geneformat GENEFORMAT</h5>\n<p>Gene annotation file format (gtf, bed, gpd, gff, default: auto)</p>\n</div>\n<div id=\"tis1para-tis1para-tis2para-tis2para\">\n<h5>\u2013tis1para TIS1PARA, \u2013tis2para TIS2PARA</h5>\n<p>Input P-site offset parameter files for group 1 &amp; 2 bam files. The default parameter files are bampath+\u2019.para.py\u2019 for each bam file, which is generated in <tt>`ribotish quality`</tt> function. To use this option, each bam file should be provided with a file, and file names are separated with comma. If no parameter file is found, default offset 12 will apply for all reads in the bam data.</p>\n</div>\n<div id=\"id15\">\n<h5>\u2013nocompatible</h5>\n<p>Not require reads compatible with transcript splice junctions.</p>\n</div>\n<div id=\"normcomm\">\n<h5>\u2013normcomm</h5>\n<p>Use common TISs instead of union TISs for normalization.</p>\n</div>\n<div id=\"normanno\">\n<h5>\u2013normanno</h5>\n<p>Use only annotated TISs for normalization.</p>\n</div>\n<div id=\"rnaseq-rnaseq\">\n<h5>\u2013rnaseq RNASEQ</h5>\n<p>RNASeq count input. Format:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>ID</td>\n<td>count1</td>\n<td>count2</td>\n<td>\u2026</td>\n</tr>\n</tbody>\n</table>\n<p>Both gene ID and transcript ID are acceptable.</p>\n</div>\n<div id=\"scalefactor-scalefactor\">\n<h5>\u2013scalefactor SCALEFACTOR</h5>\n<p>Input TIS scale factor of group 2/1 instead of auto calculate. Not log value.</p>\n</div>\n<div id=\"rnascale-rnascale\">\n<h5>\u2013rnascale RNASCALE</h5>\n<p>Input RNASeq scale factor of group 2/1 instead of auto calculate. Not log value.</p>\n</div>\n<div id=\"export-export\">\n<h5>\u2013export EXPORT</h5>\n<p>Export count table for differential analysis with other tools. Especially for replicated data.</p>\n</div>\n<div id=\"plotout-plotout\">\n<h5>\u2013plotout PLOTOUT</h5>\n<p>Scatter plot output pdf file.</p>\n</div>\n<div id=\"figsize-figsize\">\n<h5>\u2013figsize FIGSIZE</h5>\n<p>Scatter plot figure size. Default: 8,8.</p>\n</div>\n<div id=\"f-foldchange\">\n<h5>-f FOLDCHANGE</h5>\n<p>Minimum fold change threshold. Default: 1.5.</p>\n</div>\n<div id=\"ipth-ipth\">\n<h5>\u2013ipth IPTH</h5>\n<p>Input TIS p value threshold. Default: 0.05.</p>\n</div>\n<div id=\"iqth-iqth\">\n<h5>\u2013iqth IQTH</h5>\n<p>Input TIS q value threshold. Default: 0.05.</p>\n</div>\n<div id=\"opth-opth\">\n<h5>\u2013opth OPTH</h5>\n<p>Output TIS diff p value threshold. Default: 0.05.</p>\n</div>\n<div id=\"oqth-oqth\">\n<h5>\u2013oqth OQTH</h5>\n<p>Output TIS diff q value threshold. Default: 0.05.</p>\n</div>\n<div id=\"id16\">\n<h5>-p NUMPROC</h5>\n<p>Number of processes. Default: 1</p>\n</div>\n<div id=\"id17\">\n<h5>-v/\u2013verbose</h5>\n<p>Increase output verbosity.</p>\n</div>\n</div>\n<div id=\"id18\">\n<h4>Output files</h4>\n<div id=\"id19\">\n<h5>OUTPUT</h5>\n<p>The output is a txt file all differential TIS results that fit the thresholds. Some of the columns are:</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>FoldChange:</th><td>Fold change (2/1) value after normalization</td>\n</tr>\n<tr><th>DiffPvalue:</th><td>Differential test p-value, two-tailed.</td>\n</tr>\n<tr><th>DiffQvalue:</th><td>BH correction q-value of DiffPvalue</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"export\">\n<h5>EXPORT</h5>\n<p>The export table is generated using <tt><span class=\"pre\">`--export`</span></tt> option. It is also automatically generated when the input data has replicated samples. It is a txt file with raw TIS counts for each predicted TIS. The format of TIS id is \u2018TransID_Start_GenomePos\u2019.</p>\n<p>For replicated data, Ribo-TISH provided R scripts to call differential TISs using <a href=\"https://bioconductor.org/packages/edgeR\" rel=\"nofollow\">edgeR</a> or <a href=\"https://bioconductor.org/packages/DESeq2\" rel=\"nofollow\">DESeq2</a>.</p>\n<p>Example for edgeR:</p>\n<pre>Rscript path_to_scripts/tisdiff_edgeR.r tisdiff_export.txt 3 4 tisdiff_edgeR_output.txt\n</pre>\n<p>For DESeq2:</p>\n<pre>Rscript path_to_scripts/tisdiff_DESeq2.r tisdiff_export.txt 3 4 tisdiff_DESeq2_output.txt\n</pre>\n<p>3 and 4 are number of replicates in two conditions.</p>\n<p>If <tt><span class=\"pre\">`--rnaseq`</span></tt> is provided, the RNASeq counts of genes/transcripts for the TISs are also provided in the export table. However, the analysis for RNASeq referenced differential TIS efficiency analysis with replicate data is currently unavailable.</p>\n</div>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7052061, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4ff15cbe6780ac7c0541127f07965870", "sha256": "5f8239a35766ce06b84ab49204a6b808373c78b840412e5b101757f09e71dbda"}, "downloads": -1, "filename": "ribotish-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "4ff15cbe6780ac7c0541127f07965870", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 60876, "upload_time": "2016-09-28T18:55:55", "upload_time_iso_8601": "2016-09-28T18:55:55.861974Z", "url": "https://files.pythonhosted.org/packages/d5/3f/1e10f0cd2f7b849809b74c3eec7fe22bf558bdaec3027634d98e83ef4df2/ribotish-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9d06df33ac186e30d0f19ce5378db10", "sha256": "2f63314ee0ca8a8fb7c4f422945eaf9e353cf9da001d977ee675e61a7b3b8ab8"}, "downloads": -1, "filename": "ribotish-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b9d06df33ac186e30d0f19ce5378db10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52484, "upload_time": "2016-09-28T18:54:05", "upload_time_iso_8601": "2016-09-28T18:54:05.991316Z", "url": "https://files.pythonhosted.org/packages/6e/d8/a117353f20ec212919b81a78d5229175b6e8f9743b31744606173e569df8/ribotish-0.1.0.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "4b0deee164c754d0e97272951d057024", "sha256": "ea9a1f7a066dabb0cfd72f64c05294cab34ac0e74d6de1f0b25a1b118a3acdf5"}, "downloads": -1, "filename": "ribotish-0.1.10-py2.7.egg", "has_sig": false, "md5_digest": "4b0deee164c754d0e97272951d057024", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 193785, "upload_time": "2017-12-27T17:45:19", "upload_time_iso_8601": "2017-12-27T17:45:19.103881Z", "url": "https://files.pythonhosted.org/packages/b2/aa/ef7b55a4323a3962d10f212f01dca1532bb438e5742de25b502686b2fb01/ribotish-0.1.10-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "05aaedb3de6f58313488d443c1d128ac", "sha256": "933025de007b124d7b39aa5c07c4f7c954859dd820e1a7cb955288c377198d52"}, "downloads": -1, "filename": "ribotish-0.1.10-py2-none-any.whl", "has_sig": false, "md5_digest": "05aaedb3de6f58313488d443c1d128ac", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 88267, "upload_time": "2017-12-27T17:45:14", "upload_time_iso_8601": "2017-12-27T17:45:14.936062Z", "url": "https://files.pythonhosted.org/packages/04/56/e490c1e6bb47b718fe03b754f85ffad9d124025a499d1fc073a35991fcba/ribotish-0.1.10-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99f9ff1aa5ed06e5bdcc3bdba7fd9cbc", "sha256": "a1fd309b11e5d8155e4310d966546670d17238cfdb2913fe4c102a55f4c87437"}, "downloads": -1, "filename": "ribotish-0.1.10.tar.gz", "has_sig": false, "md5_digest": "99f9ff1aa5ed06e5bdcc3bdba7fd9cbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75206, "upload_time": "2017-12-27T17:45:20", "upload_time_iso_8601": "2017-12-27T17:45:20.535278Z", "url": "https://files.pythonhosted.org/packages/f9/15/dc3eac87fce7e550d8e6e8d01205030565868c885b81e3be92074888d17d/ribotish-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "a41a98dc285c070c6544591b624e6ffd", "sha256": "eacfa1ada2d09b03741559e3734dcb6028954e6d4b1d3b6501959872687c9b65"}, "downloads": -1, "filename": "ribotish-0.1.11-py2.7.egg", "has_sig": false, "md5_digest": "a41a98dc285c070c6544591b624e6ffd", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 194389, "upload_time": "2018-01-15T23:18:00", "upload_time_iso_8601": "2018-01-15T23:18:00.284358Z", "url": "https://files.pythonhosted.org/packages/7a/53/8c544e29f91557b4b1ce97de5a8e8da6e93c9484b28b950ce509e3aa9beb/ribotish-0.1.11-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "dccccdd4cdb370a23beee1175a3dc0f2", "sha256": "c87ece959dbbccde7a79bec5f4c88013b737dccff27bdd961c1aaffd4ac5727e"}, "downloads": -1, "filename": "ribotish-0.1.11.tar.gz", "has_sig": false, "md5_digest": "dccccdd4cdb370a23beee1175a3dc0f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75470, "upload_time": "2018-01-15T23:33:58", "upload_time_iso_8601": "2018-01-15T23:33:58.789040Z", "url": "https://files.pythonhosted.org/packages/70/67/9689e6a0fc646f83624223bafea2746f832a3bb55425edbcf55b72a2fae8/ribotish-0.1.11.tar.gz", "yanked": false}], "0.1.3": [], "0.1.4": [{"comment_text": "", "digests": {"md5": "85aaaf665c32edfb36c40abe796b8039", "sha256": "59b9b2ec824dddfcf8dc43a81bf806d625155eb0f687bfea2d09bfd810eba2ca"}, "downloads": -1, "filename": "ribotish-0.1.4-py2-none-any.whl", "has_sig": false, "md5_digest": "85aaaf665c32edfb36c40abe796b8039", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 78479, "upload_time": "2017-02-02T23:20:39", "upload_time_iso_8601": "2017-02-02T23:20:39.828916Z", "url": "https://files.pythonhosted.org/packages/75/b0/aed75548145926d9903959a4815860fa9389e5017797eeaa738862885434/ribotish-0.1.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59085f7e1e140f3523cb0c78f16c9cab", "sha256": "a6c62f669d67c05b9db055322a64b0d533b7f9fb9c21fc1752e17eb1eb84affe"}, "downloads": -1, "filename": "ribotish-0.1.4.tar.gz", "has_sig": false, "md5_digest": "59085f7e1e140f3523cb0c78f16c9cab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66614, "upload_time": "2017-02-02T23:20:38", "upload_time_iso_8601": "2017-02-02T23:20:38.021975Z", "url": "https://files.pythonhosted.org/packages/16/4f/f410b7360036741cc6bee6deabe8cd17d23dcac4a9a9958aef1b92e53701/ribotish-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "6c182c91363b775b003cd68f390c0b0e", "sha256": "b2ca8d3dd893c0fcc1db7583affe9a5a3dba18d8143f575367f22b3982aae614"}, "downloads": -1, "filename": "ribotish-0.1.5-py2-none-any.whl", "has_sig": false, "md5_digest": "6c182c91363b775b003cd68f390c0b0e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 78682, "upload_time": "2017-03-15T20:28:49", "upload_time_iso_8601": "2017-03-15T20:28:49.939964Z", "url": "https://files.pythonhosted.org/packages/1d/87/7ce05f24c84bf0c1031b4ed6fe430686d84851739bb4bbc81ad99269cb05/ribotish-0.1.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94f3a3a5b810acea3fd4d7e5f2a1a996", "sha256": "74e7417525ffc5dabe00abb2b4d8336c6a28596289ce7c24ca64bbbeb96648e3"}, "downloads": -1, "filename": "ribotish-0.1.5.tar.gz", "has_sig": false, "md5_digest": "94f3a3a5b810acea3fd4d7e5f2a1a996", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66705, "upload_time": "2017-03-15T20:28:47", "upload_time_iso_8601": "2017-03-15T20:28:47.932833Z", "url": "https://files.pythonhosted.org/packages/0b/a3/d573fc2338fad7dd364d58de511ad245f72269fca806605da28a20691509/ribotish-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "1128de2b492d1f9439b509a8e8f3e825", "sha256": "0951542a975e8c1d157cc5e62d165ede59ff50d1d8aff2372abec6589afc977c"}, "downloads": -1, "filename": "ribotish-0.1.6-py2-none-any.whl", "has_sig": false, "md5_digest": "1128de2b492d1f9439b509a8e8f3e825", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 128984, "upload_time": "2017-04-06T16:49:39", "upload_time_iso_8601": "2017-04-06T16:49:39.601028Z", "url": "https://files.pythonhosted.org/packages/6f/30/eaa665892942170388bde53c40f4ffb1f2483744ee59f5862a9a239c3d3a/ribotish-0.1.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20abcdce9f692dea75f6d2ef246051f0", "sha256": "f6eb01131181d5cf126b8a8e024860b8cf79cafc751edeba9ae629177aa34fbd"}, "downloads": -1, "filename": "ribotish-0.1.6.tar.gz", "has_sig": false, "md5_digest": "20abcdce9f692dea75f6d2ef246051f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67520, "upload_time": "2017-04-06T16:49:37", "upload_time_iso_8601": "2017-04-06T16:49:37.526255Z", "url": "https://files.pythonhosted.org/packages/83/53/8d1a1e7a7a30138fcaaa8014d1fc33254242c2f643c08132de722dca2ed9/ribotish-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "59b9571d24d317a9c1c38237dd4f6e76", "sha256": "ef248541fe875b18167821a099d74ebdf0af1567103a6ce749803c3584c9bc1a"}, "downloads": -1, "filename": "ribotish-0.1.7-py2-none-any.whl", "has_sig": false, "md5_digest": "59b9571d24d317a9c1c38237dd4f6e76", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 130163, "upload_time": "2017-04-20T16:13:13", "upload_time_iso_8601": "2017-04-20T16:13:13.805684Z", "url": "https://files.pythonhosted.org/packages/f5/79/dbcfb42274eb8ee6f47cedf0f3ae3127c0de403ed8040b0b96a0ede07394/ribotish-0.1.7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e380a77cc6289da9a4a53c6b35d360f7", "sha256": "e17585f7ff145831ec60653ea9489400d0eab5d9718ca7f457a3b548014fe8d7"}, "downloads": -1, "filename": "ribotish-0.1.7.tar.gz", "has_sig": false, "md5_digest": "e380a77cc6289da9a4a53c6b35d360f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68569, "upload_time": "2017-04-20T16:13:11", "upload_time_iso_8601": "2017-04-20T16:13:11.903271Z", "url": "https://files.pythonhosted.org/packages/72/7c/7f5af8dcb37826af29f7dc31739d1afb85a7dd0a5207279cf6eb1b57eba4/ribotish-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "3234f8c49b9947175484c25348ddc25a", "sha256": "2ee702e5d5653f9fe923f62d2d9215aa20ff5a490cdded2142b158c098941be8"}, "downloads": -1, "filename": "ribotish-0.1.8-py2-none-any.whl", "has_sig": false, "md5_digest": "3234f8c49b9947175484c25348ddc25a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 86780, "upload_time": "2017-08-19T00:19:28", "upload_time_iso_8601": "2017-08-19T00:19:28.107034Z", "url": "https://files.pythonhosted.org/packages/f9/38/c435337b8db758331e925887c2f58df49e09a33b0cb31cfba43036a25e3a/ribotish-0.1.8-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ea0042e22f75b9496240291f146e548", "sha256": "1bd619185309fd6366e84d82fe3db7de898aac6acbd94d738f37c780324274ab"}, "downloads": -1, "filename": "ribotish-0.1.8.tar.gz", "has_sig": false, "md5_digest": "9ea0042e22f75b9496240291f146e548", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74014, "upload_time": "2017-08-19T00:19:30", "upload_time_iso_8601": "2017-08-19T00:19:30.369249Z", "url": "https://files.pythonhosted.org/packages/fb/0c/2b17cdbf0f8c19cb2a065cebbaa891510b2a1dc70b560367e22dc945f909/ribotish-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "5576069a7a7f10e1b48c2154aac6a45a", "sha256": "77df4962e68b57c242d4a75e6cbcfd476761326748b44a42e93803772ad62513"}, "downloads": -1, "filename": "ribotish-0.1.9-py2.7.egg", "has_sig": false, "md5_digest": "5576069a7a7f10e1b48c2154aac6a45a", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 192861, "upload_time": "2017-12-27T17:45:22", "upload_time_iso_8601": "2017-12-27T17:45:22.456928Z", "url": "https://files.pythonhosted.org/packages/71/6a/520fb1fdbdd61dd4aa92642d5d4d3a148333595daf6e47560d01b1a6ac94/ribotish-0.1.9-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "105eff989f7173f4644b44e56f4f0002", "sha256": "440ac71ce4077dc2ef08799a10514323546d15e469e2c3e9e9a67ba778f4028c"}, "downloads": -1, "filename": "ribotish-0.1.9-py2-none-any.whl", "has_sig": false, "md5_digest": "105eff989f7173f4644b44e56f4f0002", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 87595, "upload_time": "2017-09-15T15:37:13", "upload_time_iso_8601": "2017-09-15T15:37:13.942490Z", "url": "https://files.pythonhosted.org/packages/2d/89/aabd5d2c38578ee186a1f7b5a321a4fe331a0e45d7a51a22d17371c38aab/ribotish-0.1.9-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "693b9b7c2c81ac3720ed030d1aa4a12c", "sha256": "682e5ce7837d708e302b84019736a3eb22ae1bacbc507e4f5a2d15f076c495a6"}, "downloads": -1, "filename": "ribotish-0.1.9.tar.gz", "has_sig": false, "md5_digest": "693b9b7c2c81ac3720ed030d1aa4a12c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74666, "upload_time": "2017-09-15T15:37:11", "upload_time_iso_8601": "2017-09-15T15:37:11.478599Z", "url": "https://files.pythonhosted.org/packages/2e/2f/707cde902260359f65399c370c64dac4e87426cfd7d2c7f0d80ed55d067c/ribotish-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "833c928e8ee19b9a83c608adf8cf12fe", "sha256": "84160dcfd62c12986ff2e5af08b970330e7fb1b26f11d5508fbad8a326cb72df"}, "downloads": -1, "filename": "ribotish-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "833c928e8ee19b9a83c608adf8cf12fe", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 88961, "upload_time": "2018-02-07T16:55:55", "upload_time_iso_8601": "2018-02-07T16:55:55.593124Z", "url": "https://files.pythonhosted.org/packages/35/b9/49e44a06163f2a50fa49c0486a55ee1aa904ac946f1b7858367999ea296d/ribotish-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f9db51d7b93b58bc196c450de9689d2", "sha256": "d95a40d89293df84b89a8f274db5804be22b0dce9597acee1c52f74b94df0237"}, "downloads": -1, "filename": "ribotish-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2f9db51d7b93b58bc196c450de9689d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75719, "upload_time": "2018-02-07T16:55:57", "upload_time_iso_8601": "2018-02-07T16:55:57.216242Z", "url": "https://files.pythonhosted.org/packages/67/c0/d39e625d3e1029fcf75731c3aee59a5e0a6d21c482ef8e883ac3e6ac6db8/ribotish-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "80403d8c1a9f4d4880a231a052a93d56", "sha256": "7f653ae7c960805030b07d1bd2b16156cfe1a0d3e0dff256f9cfa07b30091336"}, "downloads": -1, "filename": "ribotish-0.2.1.tar.gz", "has_sig": false, "md5_digest": "80403d8c1a9f4d4880a231a052a93d56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85785, "upload_time": "2018-09-06T12:34:34", "upload_time_iso_8601": "2018-09-06T12:34:34.882022Z", "url": "https://files.pythonhosted.org/packages/ad/e9/424e9fde63aa5d86c1ead5ab3895817b88215ea0a0d11f450a64047a8118/ribotish-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "bfd159609c23ca2e026b21afdf88e56d", "sha256": "2774afc69a5b34f405c8543f24a99b127f35144858e6c32b13f305b7d1e4c86d"}, "downloads": -1, "filename": "ribotish-0.2.2.tar.gz", "has_sig": false, "md5_digest": "bfd159609c23ca2e026b21afdf88e56d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87058, "upload_time": "2019-04-02T12:26:24", "upload_time_iso_8601": "2019-04-02T12:26:24.776869Z", "url": "https://files.pythonhosted.org/packages/e0/ae/9ccd54061b43ef39019bc44bd591ad76bcd03fed4dbdec20b2f21cb1b70f/ribotish-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "b83b1e0b31ca68782a0e97afbdcb5f07", "sha256": "9bfd177aeba3299868dc5751d0262cd6b67f91e6336ce0524b43023d90b1d014"}, "downloads": -1, "filename": "ribotish-0.2.3-py2-none-any.whl", "has_sig": false, "md5_digest": "b83b1e0b31ca68782a0e97afbdcb5f07", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 83568, "upload_time": "2019-08-12T07:10:44", "upload_time_iso_8601": "2019-08-12T07:10:44.915913Z", "url": "https://files.pythonhosted.org/packages/ae/98/0a6e034b89287f666df51b34070764836a2d133360183228b989d725c036/ribotish-0.2.3-py2-none-any.whl", "yanked": false}], "0.2.3a0": [{"comment_text": "", "digests": {"md5": "c41b72d66b0d6b503bdfa305c580661a", "sha256": "1b77f54018c038616bb29b047f27d055ecb204100f30b7dfb8edb89912197147"}, "downloads": -1, "filename": "ribotish-0.2.3a0.tar.gz", "has_sig": false, "md5_digest": "c41b72d66b0d6b503bdfa305c580661a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88334, "upload_time": "2019-08-13T06:11:40", "upload_time_iso_8601": "2019-08-13T06:11:40.404958Z", "url": "https://files.pythonhosted.org/packages/14/65/ae5c07dd06dc6136066b61a1d542564a1fe30e69014549082d94345e5347/ribotish-0.2.3a0.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "91f1ced06f75bd4d6b2dd4b47fa61fd7", "sha256": "d3ab1e5b0ef0420834ddb6c51b8eb4350272f4dcb5725f9b708da349ff3ad440"}, "downloads": -1, "filename": "ribotish-0.2.4.tar.gz", "has_sig": false, "md5_digest": "91f1ced06f75bd4d6b2dd4b47fa61fd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88311, "upload_time": "2019-08-13T06:22:13", "upload_time_iso_8601": "2019-08-13T06:22:13.362446Z", "url": "https://files.pythonhosted.org/packages/3f/51/41c60828ca1b551e2c9efde02ea6fcd7894df1ea38c36f98f2bba2f21bbb/ribotish-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "dbbb22607a3247aea639362b5eedc629", "sha256": "c39a7abdf899c15884a1a74869f63c2b660bcd920500d2e395d9f70cff1c53b5"}, "downloads": -1, "filename": "ribotish-0.2.5-py2-none-any.whl", "has_sig": false, "md5_digest": "dbbb22607a3247aea639362b5eedc629", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 83905, "upload_time": "2020-04-19T08:10:03", "upload_time_iso_8601": "2020-04-19T08:10:03.183233Z", "url": "https://files.pythonhosted.org/packages/4b/f6/d4cb33641fe64aef63e07336bbd9ebb407ed6097b5a05a8518a95a9205e3/ribotish-0.2.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f831d4e462b8fa36ada37a27b6a43546", "sha256": "80d7738f00ea89a4831014903af6cd5eeed93d3ca6b6fbffa065536bc34ba63f"}, "downloads": -1, "filename": "ribotish-0.2.5-py3.7.egg", "has_sig": false, "md5_digest": "f831d4e462b8fa36ada37a27b6a43546", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 203409, "upload_time": "2020-04-19T08:10:07", "upload_time_iso_8601": "2020-04-19T08:10:07.015298Z", "url": "https://files.pythonhosted.org/packages/6c/aa/242a11c47c957e5ca49dddfccaf2cd506be1d99005b9324b7a7a92983450/ribotish-0.2.5-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1eaa586c4c77ff6b8868e2296cae9bc1", "sha256": "d152344bd25631809e57b5258ad7891d4cbf23ba0ebf6a0d490255809e761116"}, "downloads": -1, "filename": "ribotish-0.2.5.tar.gz", "has_sig": false, "md5_digest": "1eaa586c4c77ff6b8868e2296cae9bc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88341, "upload_time": "2020-04-19T08:10:08", "upload_time_iso_8601": "2020-04-19T08:10:08.968753Z", "url": "https://files.pythonhosted.org/packages/2e/d4/0f9c0129ccc3b99acf89bd2b0b87d92de695d3f1123fe759c6605dc46360/ribotish-0.2.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dbbb22607a3247aea639362b5eedc629", "sha256": "c39a7abdf899c15884a1a74869f63c2b660bcd920500d2e395d9f70cff1c53b5"}, "downloads": -1, "filename": "ribotish-0.2.5-py2-none-any.whl", "has_sig": false, "md5_digest": "dbbb22607a3247aea639362b5eedc629", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 83905, "upload_time": "2020-04-19T08:10:03", "upload_time_iso_8601": "2020-04-19T08:10:03.183233Z", "url": "https://files.pythonhosted.org/packages/4b/f6/d4cb33641fe64aef63e07336bbd9ebb407ed6097b5a05a8518a95a9205e3/ribotish-0.2.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f831d4e462b8fa36ada37a27b6a43546", "sha256": "80d7738f00ea89a4831014903af6cd5eeed93d3ca6b6fbffa065536bc34ba63f"}, "downloads": -1, "filename": "ribotish-0.2.5-py3.7.egg", "has_sig": false, "md5_digest": "f831d4e462b8fa36ada37a27b6a43546", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 203409, "upload_time": "2020-04-19T08:10:07", "upload_time_iso_8601": "2020-04-19T08:10:07.015298Z", "url": "https://files.pythonhosted.org/packages/6c/aa/242a11c47c957e5ca49dddfccaf2cd506be1d99005b9324b7a7a92983450/ribotish-0.2.5-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1eaa586c4c77ff6b8868e2296cae9bc1", "sha256": "d152344bd25631809e57b5258ad7891d4cbf23ba0ebf6a0d490255809e761116"}, "downloads": -1, "filename": "ribotish-0.2.5.tar.gz", "has_sig": false, "md5_digest": "1eaa586c4c77ff6b8868e2296cae9bc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88341, "upload_time": "2020-04-19T08:10:08", "upload_time_iso_8601": "2020-04-19T08:10:08.968753Z", "url": "https://files.pythonhosted.org/packages/2e/d4/0f9c0129ccc3b99acf89bd2b0b87d92de695d3f1123fe759c6605dc46360/ribotish-0.2.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:49 2020"}