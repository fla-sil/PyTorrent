{"info": {"author": "Ruslan Andrusyak", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# ProgressBar\n\nLet us consider a few examples explaining how to use the `ProgressBar` class from the module `progress`:\n\n```python\nfrom deeppy.progress import ProgressBar\nfrom time import sleep\n\nbar = ProgressBar(max=20, width=50, elapsed=True)\n\nfor i in range(10):\n    sleep(1)\n    bar.next()\n\nbar.finish()\nprint()\n\nfor i in range(15):\n    sleep(1)\n    bar.next()\n```\n```\nOut:\nProcessing: [#########################                         ] 50% [elapsed: 10s; ETA: 10s]\nProcessing: [#####################################             ] 75% [elapsed: 15s; ETA: 5s]\n```\n\nThe class supports the context management protocol and can be used with the `with` statement. Alternative bar formats are also available:\n\n```python\nwith ProgressBar(\"Charging\", max=20, width=50) as bar:\n    for i in range(10):\n        sleep(1)\n        bar.next()\nprint()\n\nwith ProgressBar(\"FillingSquares\", max=20, width=50) as bar:\n    for i in range(15):\n        sleep(1)\n        bar.next()\n```\n```\nOut:\nProcessing: [\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219] 50% [ETA: 10s]              \nProcessing: [\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2] 75% [ETA: 5s]\n```\n\nNote that the `next` method can be replaced by the `show` method with `index` argument supplied:\n\n```python\nwith ProgressBar(\"FillingCircles\", max=20, width=50, eta=False) as bar:\n    for i in range(10):\n        sleep(1)\n        bar.show(i + 1)\n```\n```\nOut:\nProcessing: [\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef] 50%\n```\n\n\n# ProgressSpinner\n\nThe following examples explain how to use the `ProgressSpinner` class from the module `progress`:\n\n```python\nfrom deeppy.progress import ProgressSpinner\nfrom time import sleep, time\n\nspinner = ProgressSpinner()\n\nsince = time()\nwhile True:\n    # Do some work\n    sleep(0.2)\n    spinner.next()\n    if time() - since > 5:\n        break\n```\n\nAlternative spinner formats are also available:\n\n```python\nwith ProgressSpinner(\"Pie\") as spinner:\n    since = time()\n    while True:\n        sleep(0.2)\n        spinner.next()\n        if time() - since > 5:\n            break\nprint()\n\nwith ProgressSpinner(\"Moon\") as spinner:\n    since = time()\n    while True:\n        sleep(0.2)\n        spinner.next()\n        if time() - since > 5:\n            break\nprint()\n\nwith ProgressSpinner(\"Pixel\") as spinner:\n    since = time()\n    while True:\n        sleep(0.2)\n        spinner.next()\n        if time() - since > 5:\n            break\n```\n```\nOut:\nProcessing: \u25f7\nProcessing: \u25d0\nProcessing: \u28f7\n```\n\n\n# Installation\n\nDownload from PyPI:\n```\npip install deep-py\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andrusyak/deep-py.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "deep-py", "package_url": "https://pypi.org/project/deep-py/", "platform": "", "project_url": "https://pypi.org/project/deep-py/", "project_urls": {"Homepage": "https://github.com/andrusyak/deep-py.git"}, "release_url": "https://pypi.org/project/deep-py/0.0.4/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Python library for Data Science", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ProgressBar</h1>\n<p>Let us consider a few examples explaining how to use the <code>ProgressBar</code> class from the module <code>progress</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">deeppy.progress</span> <span class=\"kn\">import</span> <span class=\"n\">ProgressBar</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n\n<span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">ProgressBar</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">elapsed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n\n<span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">finish</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n</pre>\n<pre><code>Out:\nProcessing: [#########################                         ] 50% [elapsed: 10s; ETA: 10s]\nProcessing: [#####################################             ] 75% [elapsed: 15s; ETA: 5s]\n</code></pre>\n<p>The class supports the context management protocol and can be used with the <code>with</code> statement. Alternative bar formats are also available:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">ProgressBar</span><span class=\"p\">(</span><span class=\"s2\">\"Charging\"</span><span class=\"p\">,</span> <span class=\"nb\">max</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">bar</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"n\">ProgressBar</span><span class=\"p\">(</span><span class=\"s2\">\"FillingSquares\"</span><span class=\"p\">,</span> <span class=\"nb\">max</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">bar</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">):</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n</pre>\n<pre><code>Out:\nProcessing: [\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219\u2219] 50% [ETA: 10s]              \nProcessing: [\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a3\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2\u25a2] 75% [ETA: 5s]\n</code></pre>\n<p>Note that the <code>next</code> method can be replaced by the <code>show</code> method with <code>index</code> argument supplied:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">ProgressBar</span><span class=\"p\">(</span><span class=\"s2\">\"FillingCircles\"</span><span class=\"p\">,</span> <span class=\"nb\">max</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">bar</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<pre><code>Out:\nProcessing: [\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25c9\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef\u25ef] 50%\n</code></pre>\n<h1>ProgressSpinner</h1>\n<p>The following examples explain how to use the <code>ProgressSpinner</code> class from the module <code>progress</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">deeppy.progress</span> <span class=\"kn\">import</span> <span class=\"n\">ProgressSpinner</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span><span class=\"p\">,</span> <span class=\"n\">time</span>\n\n<span class=\"n\">spinner</span> <span class=\"o\">=</span> <span class=\"n\">ProgressSpinner</span><span class=\"p\">()</span>\n\n<span class=\"n\">since</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"p\">()</span>\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Do some work</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n    <span class=\"n\">spinner</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">since</span> <span class=\"o\">&gt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n        <span class=\"k\">break</span>\n</pre>\n<p>Alternative spinner formats are also available:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">ProgressSpinner</span><span class=\"p\">(</span><span class=\"s2\">\"Pie\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">spinner</span><span class=\"p\">:</span>\n    <span class=\"n\">since</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n        <span class=\"n\">spinner</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">since</span> <span class=\"o\">&gt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n            <span class=\"k\">break</span>\n<span class=\"nb\">print</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"n\">ProgressSpinner</span><span class=\"p\">(</span><span class=\"s2\">\"Moon\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">spinner</span><span class=\"p\">:</span>\n    <span class=\"n\">since</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n        <span class=\"n\">spinner</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">since</span> <span class=\"o\">&gt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n            <span class=\"k\">break</span>\n<span class=\"nb\">print</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"n\">ProgressSpinner</span><span class=\"p\">(</span><span class=\"s2\">\"Pixel\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">spinner</span><span class=\"p\">:</span>\n    <span class=\"n\">since</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n        <span class=\"n\">spinner</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">since</span> <span class=\"o\">&gt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n            <span class=\"k\">break</span>\n</pre>\n<pre><code>Out:\nProcessing: \u25f7\nProcessing: \u25d0\nProcessing: \u28f7\n</code></pre>\n<h1>Installation</h1>\n<p>Download from PyPI:</p>\n<pre><code>pip install deep-py\n</code></pre>\n\n          </div>"}, "last_serial": 6945507, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "192547e620b33533990cb234a8d8eb6c", "sha256": "1bec8f07cf93e85478ea371ebb32f42a7530c2a7ccf820a6576c2e6f6c529549"}, "downloads": -1, "filename": "deep_py-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "192547e620b33533990cb234a8d8eb6c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3868, "upload_time": "2020-04-03T19:09:50", "upload_time_iso_8601": "2020-04-03T19:09:50.409728Z", "url": "https://files.pythonhosted.org/packages/a5/d2/8a21e7f79e42609c1be291bcce7ae49626b1e962f466cf5f882b2b7526fa/deep_py-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b864b633f79bc3693db136f1e24fe9b3", "sha256": "323ad1e1918f30b316dfd19abb32360489d55bdea1aa160c9583eb478b0b6eed"}, "downloads": -1, "filename": "deep-py-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b864b633f79bc3693db136f1e24fe9b3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2814, "upload_time": "2020-04-03T19:09:51", "upload_time_iso_8601": "2020-04-03T19:09:51.563204Z", "url": "https://files.pythonhosted.org/packages/d2/e0/b019c72c6a4d75bbc88d91c4d3abd03ea25664468a53088d625e8aabd4c2/deep-py-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "192547e620b33533990cb234a8d8eb6c", "sha256": "1bec8f07cf93e85478ea371ebb32f42a7530c2a7ccf820a6576c2e6f6c529549"}, "downloads": -1, "filename": "deep_py-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "192547e620b33533990cb234a8d8eb6c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3868, "upload_time": "2020-04-03T19:09:50", "upload_time_iso_8601": "2020-04-03T19:09:50.409728Z", "url": "https://files.pythonhosted.org/packages/a5/d2/8a21e7f79e42609c1be291bcce7ae49626b1e962f466cf5f882b2b7526fa/deep_py-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b864b633f79bc3693db136f1e24fe9b3", "sha256": "323ad1e1918f30b316dfd19abb32360489d55bdea1aa160c9583eb478b0b6eed"}, "downloads": -1, "filename": "deep-py-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b864b633f79bc3693db136f1e24fe9b3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2814, "upload_time": "2020-04-03T19:09:51", "upload_time_iso_8601": "2020-04-03T19:09:51.563204Z", "url": "https://files.pythonhosted.org/packages/d2/e0/b019c72c6a4d75bbc88d91c4d3abd03ea25664468a53088d625e8aabd4c2/deep-py-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:21 2020"}