{"info": {"author": "Chris Mutel", "author_email": "cmutel@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering :: Mathematics"], "description": "===============\nPandarus_remote\n===============\n\nPandarus_remote is a web service for processing and managing data for regionalized life cycle assessment using `pandarus <https://pypi.python.org/pypi/pandarus>`__. It is meant to be used by the `brightway2-regional <https://brightway2-regional.readthedocs.io/>`__ library.\n\n.. contents::\n\nInstallation\n============\n\n``pandarus_remote`` can be installed using pip, but your life will be much easier if you use ``conda`` to get consistent dependencies:\n\n.. code-block:: bash\n\n    conda config --add channels conda-forge cmutel\n    conda create -n pandarus python=3.5\n    source activate pandarus\n    conda install pandarus_remote\n\nRequirements\n------------\n\n``pandarus_remote`` requires the following Python libraries:\n\n* `appdirs <https://pypi.python.org/pypi/appdirs>`__\n* `docopt <https://pypi.python.org/pypi/docopt>`__\n* `fiona <https://pypi.python.org/pypi/Fiona>`__\n* `flask <http://flask.pocoo.org/>`__\n* `pandarus <https://pypi.python.org/pypi/pandarus>`__\n* `peewee <http://docs.peewee-orm.com/en/latest/>`__\n* `redis <https://pypi.python.org/pypi/redis>`__\n* `rasterio <https://github.com/mapbox/rasterio>`__\n* `requests <http://docs.python-requests.org/en/master/>`__\n* `rq <http://python-rq.org/>`__\n\nIn addition, ``pandarus_remote`` requires that `Redis <https://redis.io/>`__ be installed.\n\nRunning the web service\n=======================\n\nA Redis server must be running on the local machine.\n\nA worker process for ``rq`` should be started with the command ``rq worker``.\n\nFinally, run the ``flask`` application any way you want. For example, to run the test server (not in production!), do:\n\n.. code-block:: bash\n\n    export FLASK_APP=/path/to/pandarus_remote/__init__.py\n    flask run\n\nEnvironment variables\n---------------------\n\nThe following environment variables can be used to configure ``pandarus_remote``:\n\n* ``PANDARUS_EXPORT_FORMAT``: A string specifying the Fiona driver to use, like \"GPKG\" or \"GeoJSON\"\n* ``PANDARUS_CPUS``: The number of CPUs to use when performing intersection calculations\n\nAPI endpoints\n=============\n\nThe following API endpoints are supported:\n\n/\n-\n\nPing the server. Returns something like ``pandarus_remote web service, version (1, 0)``.\n\nHTTP method: **GET**\n\n/catalog\n--------\n\nGet the list of spatial datasets and results currently available on the server.\n\nHTTP method: **GET**\n\nResponse\n````````\n\n* 200: Return a JSON payload of the form:\n\n.. code-block:: javascript\n\n    [\n        'files': [\n            ('file name', 'hex-encoded sha256 hash of file contents', 'type of file')\n        ],\n        'intersections': [\n            ('input file 1 sha256 hash', 'input file 2 sha256 hash')\n        ],\n        'remaining': [\n            ('input file 1 sha256 hash', 'input file 2 sha256 hash')\n        ],\n        'rasterstats': [\n            ('vector file sha256 hash', 'raster file sha256 hash')\n        ]\n    ]\n\n/upload\n-------\n\nUpload a spatial data file. The provided file must be openable by `fiona <https://github.com/Toblerity/Fiona>`__ or `rasterio <https://github.com/mapbox/rasterio>`__.\n\nHTTP method: **POST**\n\nParameters\n``````````\n\nPost the following required form data:\n\n* ``name``: File name\n* ``sha256``: SHA 256 hash of file\n* ``band``: Raster band number. This field is required; pass ``''`` if single-band raster or vector dataset.\n* ``layer``: Vector layer name. This field is required; pass ``''`` if single-layer vector or raster dataset.\n* ``field``: Vector field that uniquely identifies spatial features. This field is required; pass ``''`` if raster dataset.\n\nThe file should be in the field ``file``.\n\nResponses\n`````````\n\n* 201: The file was uploaded and registered. Returns a JSON payload:\n\n.. code-block:: javascript\n\n    {\n        'filename': 'some file name',\n        'sha256': 'hex-encoded sha256 hash of file contents'\n    }\n\n* 400: The request form was missing a required field\n* 406: The input data was invalid (either the hash wasn't correct or the file isn't a readable geospatial dataset)\n* 409: File already exists\n* 413: The uploaded file was too large (current limit is 250 MB)\n\n/intersection\n-------------\n\nRequest the download of a pandarus intersections JSON data file for two spatial datasets. Both spatial datasets should already be on the server (see ``/upload``), and the intersection should already be calculated (see ``/calculate-intersection``).\n\nHTTP method: **POST**\n\nParameters\n``````````\n\nPost the following form data:\n\n* ``first``: SHA 256 hash of first input file\n* ``second``: SHA 256 hash of second input file\n\nResponses\n`````````\n\n* 200: The requested file will be returned\n* 400: The request form was missing a required field\n* 404: An intersections file for this combination was not found\n\n/intersection-file\n------------------\n\nRequest the download of the new geospatial vector file created when calculating the intersection of two spatial datasets. Both spatial datasets should already be on the server (see ``/upload``), and the intersection should already be calculated (see ``/calculate-intersection``).\n\nHTTP method: **POST**\n\nParameters\n``````````\n\nPost the following form data:\n\n* ``first``: SHA 256 hash of first input file\n* ``second``: SHA 256 hash of second input file\n\nResponses\n`````````\n\n* 200: The requested file will be returned\n* 400: The request form was missing a required field\n* 404: An intersections file for this combination was not found\n\n/calculate-intersection\n-----------------------\n\nCalculate a pandarus intersections file for two vector spatial datasets. Both spatial datasets should already be on the server (see ``/upload``). The second vector dataset must have the geometry type ``Polygon`` or ``MultiPolygon``.\n\nHTTP method: **POST**\n\nParameters\n``````````\nPost the following form data:\n\n* ``first``: SHA 256 hash of first input file\n* ``second``: SHA 256 hash of second input file\n\nResponses\n`````````\n\n* 200: The requested intersections file will be calculated. Returns the URL of the job status resource (see `/status`) which can be polled to see when the calculation is finished.\n* 400: The request form was missing a required field\n* 404: One of the files were not found\n* 406: Error in the files: Either the hashes were identical, or the files weren't vector datasets, or the second file didn't have the correct geometry type.\n* 409: The requested intersection file already exists\n\n/remaining\n----------\n\nRequest the download of the JSON data file from a remaining areas calculation. Both spatial datasets should already be on the server (see ``/upload``), and the remaining areas should already be calculated (see ``/calculate-remaining``).\n\nHTTP method: **POST**\n\nParameters\n``````````\n\nPost the following form data:\n\n* ``first``: SHA 256 hash of first input file\n* ``second``: SHA 256 hash of second input file\n\nResponses\n`````````\n\n* 200: The requested file will be returned\n* 400: The request form was missing a required field\n* 404: An remaining areas file for this combination was not found\n\n/calculate-remaining\n--------------------\n\nCalculate a pandarus remaining areas file for two vector spatial datasets. See the Pandarus documentation for more details on remaining areas. Both spatial datasets should already be on the server (see ``/upload``), and their intersection should already be calculated.\n\nHTTP method: **POST**\n\nParameters\n``````````\nPost the following form data:\n\n* ``first``: SHA 256 hash of first input file\n* ``second``: SHA 256 hash of second input file\n\nResponses\n`````````\n\n* 200: The requested remaining areas file will be calculated. Returns the URL of the job status resource (see `/status`) which can be polled to see when the calculation is finished.\n* 400: The request form was missing a required field\n* 404: One of the files or the calculated intersection result were not found\n* 409: The requested remaining areas file already exists\n\n/rasterstats\n------------\n\nRequest the download of the JSON data file from a raster stats calculation. Both spatial datasets should already be on the server (see ``/upload``), and the raster stats should already be calculated (see ``/calculate-rasterstats``).\n\nHTTP method: **POST**\n\nParameters\n``````````\n\nPost the following form data:\n\n* ``vector``: SHA 256 hash of vector input file\n* ``raster``: SHA 256 hash of raster input file\n\nResponses\n`````````\n\n* 200: The requested file will be returned\n* 400: The request form was missing a required field\n* 404: An raster stats file for this combination was not found\n\n/calculate-rasterstats\n----------------------\n\nCalculate a pandarus raster stats file for two vector spatial datasets. See the Pandarus documentation for more details on raster stats. Both spatial datasets should already be on the server (see ``/upload``), and their intersection should already be calculated.\n\nHTTP method: **POST**\n\nParameters\n``````````\nPost the following form data:\n\n* ``vector``: SHA 256 hash of vector input file\n* ``raster``: SHA 256 hash of raster input file\n\nResponses\n`````````\n\n* 200: The requested raster stats file will be calculated. Returns the URL of the job status resource (see `/status`) which can be polled to see when the calculation is finished.\n* 400: The request form was missing a required field\n* 404: One of the files was not found\n* 406: One of the files had an incorrect data type\n* 409: The requested remaining areas file already exists\n\n/status/<job_id>\n----------------\n\nGet the status of a currently running job. Job status URLs are returned by the ``/calculate-intersection`` and ``/calculate-area`` endpoints.\n\nHTTP method: **GET**\n\nReponse\n```````\n\n* 200: Returns a text response giving the current job status. If the job is finished, the response will be ``finished``.\n* 404: The requested job id was not found\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cmutel/pandarus_remote", "keywords": "", "license": "Copyright (c) 2016, Chris Mutel and Paul Scherrer Institut\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer. Redistributions in binary\nform must reproduce the above copyright notice, this list of conditions and the\nfollowing disclaimer in the documentation and/or other materials provided\nwith the distribution.\n\nNeither the name of Paul Scherrer Institut nor the names of its contributors \nmay be used to endorse or promote products derived from this software without \nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n", "maintainer": "", "maintainer_email": "", "name": "pandarus_remote", "package_url": "https://pypi.org/project/pandarus_remote/", "platform": "", "project_url": "https://pypi.org/project/pandarus_remote/", "project_urls": {"Homepage": "https://github.com/cmutel/pandarus_remote"}, "release_url": "https://pypi.org/project/pandarus_remote/1.0/", "requires_dist": null, "requires_python": "", "summary": "", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Pandarus_remote is a web service for processing and managing data for regionalized life cycle assessment using <a href=\"https://pypi.python.org/pypi/pandarus\" rel=\"nofollow\">pandarus</a>. It is meant to be used by the <a href=\"https://brightway2-regional.readthedocs.io/\" rel=\"nofollow\">brightway2-regional</a> library.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#installation\" id=\"id16\" rel=\"nofollow\">Installation</a><ul>\n<li><a href=\"#requirements\" id=\"id17\" rel=\"nofollow\">Requirements</a></li>\n</ul>\n</li>\n<li><a href=\"#running-the-web-service\" id=\"id18\" rel=\"nofollow\">Running the web service</a><ul>\n<li><a href=\"#environment-variables\" id=\"id19\" rel=\"nofollow\">Environment variables</a></li>\n</ul>\n</li>\n<li><a href=\"#api-endpoints\" id=\"id20\" rel=\"nofollow\">API endpoints</a><ul>\n<li><a href=\"#id1\" id=\"id21\" rel=\"nofollow\">/</a></li>\n<li><a href=\"#catalog\" id=\"id22\" rel=\"nofollow\">/catalog</a><ul>\n<li><a href=\"#response\" id=\"id23\" rel=\"nofollow\">Response</a></li>\n</ul>\n</li>\n<li><a href=\"#upload\" id=\"id24\" rel=\"nofollow\">/upload</a><ul>\n<li><a href=\"#parameters\" id=\"id25\" rel=\"nofollow\">Parameters</a></li>\n<li><a href=\"#responses\" id=\"id26\" rel=\"nofollow\">Responses</a></li>\n</ul>\n</li>\n<li><a href=\"#intersection\" id=\"id27\" rel=\"nofollow\">/intersection</a><ul>\n<li><a href=\"#id2\" id=\"id28\" rel=\"nofollow\">Parameters</a></li>\n<li><a href=\"#id3\" id=\"id29\" rel=\"nofollow\">Responses</a></li>\n</ul>\n</li>\n<li><a href=\"#intersection-file\" id=\"id30\" rel=\"nofollow\">/intersection-file</a><ul>\n<li><a href=\"#id4\" id=\"id31\" rel=\"nofollow\">Parameters</a></li>\n<li><a href=\"#id5\" id=\"id32\" rel=\"nofollow\">Responses</a></li>\n</ul>\n</li>\n<li><a href=\"#calculate-intersection\" id=\"id33\" rel=\"nofollow\">/calculate-intersection</a><ul>\n<li><a href=\"#id6\" id=\"id34\" rel=\"nofollow\">Parameters</a></li>\n<li><a href=\"#id7\" id=\"id35\" rel=\"nofollow\">Responses</a></li>\n</ul>\n</li>\n<li><a href=\"#remaining\" id=\"id36\" rel=\"nofollow\">/remaining</a><ul>\n<li><a href=\"#id8\" id=\"id37\" rel=\"nofollow\">Parameters</a></li>\n<li><a href=\"#id9\" id=\"id38\" rel=\"nofollow\">Responses</a></li>\n</ul>\n</li>\n<li><a href=\"#calculate-remaining\" id=\"id39\" rel=\"nofollow\">/calculate-remaining</a><ul>\n<li><a href=\"#id10\" id=\"id40\" rel=\"nofollow\">Parameters</a></li>\n<li><a href=\"#id11\" id=\"id41\" rel=\"nofollow\">Responses</a></li>\n</ul>\n</li>\n<li><a href=\"#rasterstats\" id=\"id42\" rel=\"nofollow\">/rasterstats</a><ul>\n<li><a href=\"#id12\" id=\"id43\" rel=\"nofollow\">Parameters</a></li>\n<li><a href=\"#id13\" id=\"id44\" rel=\"nofollow\">Responses</a></li>\n</ul>\n</li>\n<li><a href=\"#calculate-rasterstats\" id=\"id45\" rel=\"nofollow\">/calculate-rasterstats</a><ul>\n<li><a href=\"#id14\" id=\"id46\" rel=\"nofollow\">Parameters</a></li>\n<li><a href=\"#id15\" id=\"id47\" rel=\"nofollow\">Responses</a></li>\n</ul>\n</li>\n<li><a href=\"#status-job-id\" id=\"id48\" rel=\"nofollow\">/status/&lt;job_id&gt;</a><ul>\n<li><a href=\"#reponse\" id=\"id49\" rel=\"nofollow\">Reponse</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id16\" rel=\"nofollow\">Installation</a></h2>\n<p><tt>pandarus_remote</tt> can be installed using pip, but your life will be much easier if you use <tt>conda</tt> to get consistent dependencies:</p>\n<pre>conda config --add channels conda-forge cmutel\nconda create -n pandarus <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.5\n<span class=\"nb\">source</span> activate pandarus\nconda install pandarus_remote\n</pre>\n<div id=\"requirements\">\n<h3><a href=\"#id17\" rel=\"nofollow\">Requirements</a></h3>\n<p><tt>pandarus_remote</tt> requires the following Python libraries:</p>\n<ul>\n<li><a href=\"https://pypi.python.org/pypi/appdirs\" rel=\"nofollow\">appdirs</a></li>\n<li><a href=\"https://pypi.python.org/pypi/docopt\" rel=\"nofollow\">docopt</a></li>\n<li><a href=\"https://pypi.python.org/pypi/Fiona\" rel=\"nofollow\">fiona</a></li>\n<li><a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">flask</a></li>\n<li><a href=\"https://pypi.python.org/pypi/pandarus\" rel=\"nofollow\">pandarus</a></li>\n<li><a href=\"http://docs.peewee-orm.com/en/latest/\" rel=\"nofollow\">peewee</a></li>\n<li><a href=\"https://pypi.python.org/pypi/redis\" rel=\"nofollow\">redis</a></li>\n<li><a href=\"https://github.com/mapbox/rasterio\" rel=\"nofollow\">rasterio</a></li>\n<li><a href=\"http://docs.python-requests.org/en/master/\" rel=\"nofollow\">requests</a></li>\n<li><a href=\"http://python-rq.org/\" rel=\"nofollow\">rq</a></li>\n</ul>\n<p>In addition, <tt>pandarus_remote</tt> requires that <a href=\"https://redis.io/\" rel=\"nofollow\">Redis</a> be installed.</p>\n</div>\n</div>\n<div id=\"running-the-web-service\">\n<h2><a href=\"#id18\" rel=\"nofollow\">Running the web service</a></h2>\n<p>A Redis server must be running on the local machine.</p>\n<p>A worker process for <tt>rq</tt> should be started with the command <tt>rq worker</tt>.</p>\n<p>Finally, run the <tt>flask</tt> application any way you want. For example, to run the test server (not in production!), do:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">FLASK_APP</span><span class=\"o\">=</span>/path/to/pandarus_remote/__init__.py\nflask run\n</pre>\n<div id=\"environment-variables\">\n<h3><a href=\"#id19\" rel=\"nofollow\">Environment variables</a></h3>\n<p>The following environment variables can be used to configure <tt>pandarus_remote</tt>:</p>\n<ul>\n<li><tt>PANDARUS_EXPORT_FORMAT</tt>: A string specifying the Fiona driver to use, like \u201cGPKG\u201d or \u201cGeoJSON\u201d</li>\n<li><tt>PANDARUS_CPUS</tt>: The number of CPUs to use when performing intersection calculations</li>\n</ul>\n</div>\n</div>\n<div id=\"api-endpoints\">\n<h2><a href=\"#id20\" rel=\"nofollow\">API endpoints</a></h2>\n<p>The following API endpoints are supported:</p>\n<div id=\"id1\">\n<h3><a href=\"#id21\" rel=\"nofollow\">/</a></h3>\n<p>Ping the server. Returns something like <tt>pandarus_remote web service, version (1, 0)</tt>.</p>\n<p>HTTP method: <strong>GET</strong></p>\n</div>\n<div id=\"catalog\">\n<h3><a href=\"#id22\" rel=\"nofollow\">/catalog</a></h3>\n<p>Get the list of spatial datasets and results currently available on the server.</p>\n<p>HTTP method: <strong>GET</strong></p>\n<div id=\"response\">\n<h4><a href=\"#id23\" rel=\"nofollow\">Response</a></h4>\n<ul>\n<li>200: Return a JSON payload of the form:</li>\n</ul>\n<pre><span class=\"p\">[</span>\n    <span class=\"s1\">'files'</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'file name'</span><span class=\"p\">,</span> <span class=\"s1\">'hex-encoded sha256 hash of file contents'</span><span class=\"p\">,</span> <span class=\"s1\">'type of file'</span><span class=\"p\">)</span>\n    <span class=\"p\">],</span>\n    <span class=\"s1\">'intersections'</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'input file 1 sha256 hash'</span><span class=\"p\">,</span> <span class=\"s1\">'input file 2 sha256 hash'</span><span class=\"p\">)</span>\n    <span class=\"p\">],</span>\n    <span class=\"s1\">'remaining'</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'input file 1 sha256 hash'</span><span class=\"p\">,</span> <span class=\"s1\">'input file 2 sha256 hash'</span><span class=\"p\">)</span>\n    <span class=\"p\">],</span>\n    <span class=\"s1\">'rasterstats'</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'vector file sha256 hash'</span><span class=\"p\">,</span> <span class=\"s1\">'raster file sha256 hash'</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n</div>\n<div id=\"upload\">\n<h3><a href=\"#id24\" rel=\"nofollow\">/upload</a></h3>\n<p>Upload a spatial data file. The provided file must be openable by <a href=\"https://github.com/Toblerity/Fiona\" rel=\"nofollow\">fiona</a> or <a href=\"https://github.com/mapbox/rasterio\" rel=\"nofollow\">rasterio</a>.</p>\n<p>HTTP method: <strong>POST</strong></p>\n<div id=\"parameters\">\n<h4><a href=\"#id25\" rel=\"nofollow\">Parameters</a></h4>\n<p>Post the following required form data:</p>\n<ul>\n<li><tt>name</tt>: File name</li>\n<li><tt>sha256</tt>: SHA 256 hash of file</li>\n<li><tt>band</tt>: Raster band number. This field is required; pass <tt>''</tt> if single-band raster or vector dataset.</li>\n<li><tt>layer</tt>: Vector layer name. This field is required; pass <tt>''</tt> if single-layer vector or raster dataset.</li>\n<li><tt>field</tt>: Vector field that uniquely identifies spatial features. This field is required; pass <tt>''</tt> if raster dataset.</li>\n</ul>\n<p>The file should be in the field <tt>file</tt>.</p>\n</div>\n<div id=\"responses\">\n<h4><a href=\"#id26\" rel=\"nofollow\">Responses</a></h4>\n<ul>\n<li>201: The file was uploaded and registered. Returns a JSON payload:</li>\n</ul>\n<pre><span class=\"p\">{</span>\n    <span class=\"s1\">'filename'</span><span class=\"o\">:</span> <span class=\"s1\">'some file name'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'sha256'</span><span class=\"o\">:</span> <span class=\"s1\">'hex-encoded sha256 hash of file contents'</span>\n<span class=\"p\">}</span>\n</pre>\n<ul>\n<li>400: The request form was missing a required field</li>\n<li>406: The input data was invalid (either the hash wasn\u2019t correct or the file isn\u2019t a readable geospatial dataset)</li>\n<li>409: File already exists</li>\n<li>413: The uploaded file was too large (current limit is 250 MB)</li>\n</ul>\n</div>\n</div>\n<div id=\"intersection\">\n<h3><a href=\"#id27\" rel=\"nofollow\">/intersection</a></h3>\n<p>Request the download of a pandarus intersections JSON data file for two spatial datasets. Both spatial datasets should already be on the server (see <tt>/upload</tt>), and the intersection should already be calculated (see <tt><span class=\"pre\">/calculate-intersection</span></tt>).</p>\n<p>HTTP method: <strong>POST</strong></p>\n<div id=\"id2\">\n<h4><a href=\"#id28\" rel=\"nofollow\">Parameters</a></h4>\n<p>Post the following form data:</p>\n<ul>\n<li><tt>first</tt>: SHA 256 hash of first input file</li>\n<li><tt>second</tt>: SHA 256 hash of second input file</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h4><a href=\"#id29\" rel=\"nofollow\">Responses</a></h4>\n<ul>\n<li>200: The requested file will be returned</li>\n<li>400: The request form was missing a required field</li>\n<li>404: An intersections file for this combination was not found</li>\n</ul>\n</div>\n</div>\n<div id=\"intersection-file\">\n<h3><a href=\"#id30\" rel=\"nofollow\">/intersection-file</a></h3>\n<p>Request the download of the new geospatial vector file created when calculating the intersection of two spatial datasets. Both spatial datasets should already be on the server (see <tt>/upload</tt>), and the intersection should already be calculated (see <tt><span class=\"pre\">/calculate-intersection</span></tt>).</p>\n<p>HTTP method: <strong>POST</strong></p>\n<div id=\"id4\">\n<h4><a href=\"#id31\" rel=\"nofollow\">Parameters</a></h4>\n<p>Post the following form data:</p>\n<ul>\n<li><tt>first</tt>: SHA 256 hash of first input file</li>\n<li><tt>second</tt>: SHA 256 hash of second input file</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h4><a href=\"#id32\" rel=\"nofollow\">Responses</a></h4>\n<ul>\n<li>200: The requested file will be returned</li>\n<li>400: The request form was missing a required field</li>\n<li>404: An intersections file for this combination was not found</li>\n</ul>\n</div>\n</div>\n<div id=\"calculate-intersection\">\n<h3><a href=\"#id33\" rel=\"nofollow\">/calculate-intersection</a></h3>\n<p>Calculate a pandarus intersections file for two vector spatial datasets. Both spatial datasets should already be on the server (see <tt>/upload</tt>). The second vector dataset must have the geometry type <tt>Polygon</tt> or <tt>MultiPolygon</tt>.</p>\n<p>HTTP method: <strong>POST</strong></p>\n<div id=\"id6\">\n<h4><a href=\"#id34\" rel=\"nofollow\">Parameters</a></h4>\n<p>Post the following form data:</p>\n<ul>\n<li><tt>first</tt>: SHA 256 hash of first input file</li>\n<li><tt>second</tt>: SHA 256 hash of second input file</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h4><a href=\"#id35\" rel=\"nofollow\">Responses</a></h4>\n<ul>\n<li>200: The requested intersections file will be calculated. Returns the URL of the job status resource (see <cite>/status</cite>) which can be polled to see when the calculation is finished.</li>\n<li>400: The request form was missing a required field</li>\n<li>404: One of the files were not found</li>\n<li>406: Error in the files: Either the hashes were identical, or the files weren\u2019t vector datasets, or the second file didn\u2019t have the correct geometry type.</li>\n<li>409: The requested intersection file already exists</li>\n</ul>\n</div>\n</div>\n<div id=\"remaining\">\n<h3><a href=\"#id36\" rel=\"nofollow\">/remaining</a></h3>\n<p>Request the download of the JSON data file from a remaining areas calculation. Both spatial datasets should already be on the server (see <tt>/upload</tt>), and the remaining areas should already be calculated (see <tt><span class=\"pre\">/calculate-remaining</span></tt>).</p>\n<p>HTTP method: <strong>POST</strong></p>\n<div id=\"id8\">\n<h4><a href=\"#id37\" rel=\"nofollow\">Parameters</a></h4>\n<p>Post the following form data:</p>\n<ul>\n<li><tt>first</tt>: SHA 256 hash of first input file</li>\n<li><tt>second</tt>: SHA 256 hash of second input file</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h4><a href=\"#id38\" rel=\"nofollow\">Responses</a></h4>\n<ul>\n<li>200: The requested file will be returned</li>\n<li>400: The request form was missing a required field</li>\n<li>404: An remaining areas file for this combination was not found</li>\n</ul>\n</div>\n</div>\n<div id=\"calculate-remaining\">\n<h3><a href=\"#id39\" rel=\"nofollow\">/calculate-remaining</a></h3>\n<p>Calculate a pandarus remaining areas file for two vector spatial datasets. See the Pandarus documentation for more details on remaining areas. Both spatial datasets should already be on the server (see <tt>/upload</tt>), and their intersection should already be calculated.</p>\n<p>HTTP method: <strong>POST</strong></p>\n<div id=\"id10\">\n<h4><a href=\"#id40\" rel=\"nofollow\">Parameters</a></h4>\n<p>Post the following form data:</p>\n<ul>\n<li><tt>first</tt>: SHA 256 hash of first input file</li>\n<li><tt>second</tt>: SHA 256 hash of second input file</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h4><a href=\"#id41\" rel=\"nofollow\">Responses</a></h4>\n<ul>\n<li>200: The requested remaining areas file will be calculated. Returns the URL of the job status resource (see <cite>/status</cite>) which can be polled to see when the calculation is finished.</li>\n<li>400: The request form was missing a required field</li>\n<li>404: One of the files or the calculated intersection result were not found</li>\n<li>409: The requested remaining areas file already exists</li>\n</ul>\n</div>\n</div>\n<div id=\"rasterstats\">\n<h3><a href=\"#id42\" rel=\"nofollow\">/rasterstats</a></h3>\n<p>Request the download of the JSON data file from a raster stats calculation. Both spatial datasets should already be on the server (see <tt>/upload</tt>), and the raster stats should already be calculated (see <tt><span class=\"pre\">/calculate-rasterstats</span></tt>).</p>\n<p>HTTP method: <strong>POST</strong></p>\n<div id=\"id12\">\n<h4><a href=\"#id43\" rel=\"nofollow\">Parameters</a></h4>\n<p>Post the following form data:</p>\n<ul>\n<li><tt>vector</tt>: SHA 256 hash of vector input file</li>\n<li><tt>raster</tt>: SHA 256 hash of raster input file</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h4><a href=\"#id44\" rel=\"nofollow\">Responses</a></h4>\n<ul>\n<li>200: The requested file will be returned</li>\n<li>400: The request form was missing a required field</li>\n<li>404: An raster stats file for this combination was not found</li>\n</ul>\n</div>\n</div>\n<div id=\"calculate-rasterstats\">\n<h3><a href=\"#id45\" rel=\"nofollow\">/calculate-rasterstats</a></h3>\n<p>Calculate a pandarus raster stats file for two vector spatial datasets. See the Pandarus documentation for more details on raster stats. Both spatial datasets should already be on the server (see <tt>/upload</tt>), and their intersection should already be calculated.</p>\n<p>HTTP method: <strong>POST</strong></p>\n<div id=\"id14\">\n<h4><a href=\"#id46\" rel=\"nofollow\">Parameters</a></h4>\n<p>Post the following form data:</p>\n<ul>\n<li><tt>vector</tt>: SHA 256 hash of vector input file</li>\n<li><tt>raster</tt>: SHA 256 hash of raster input file</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h4><a href=\"#id47\" rel=\"nofollow\">Responses</a></h4>\n<ul>\n<li>200: The requested raster stats file will be calculated. Returns the URL of the job status resource (see <cite>/status</cite>) which can be polled to see when the calculation is finished.</li>\n<li>400: The request form was missing a required field</li>\n<li>404: One of the files was not found</li>\n<li>406: One of the files had an incorrect data type</li>\n<li>409: The requested remaining areas file already exists</li>\n</ul>\n</div>\n</div>\n<div id=\"status-job-id\">\n<h3><a href=\"#id48\" rel=\"nofollow\">/status/&lt;job_id&gt;</a></h3>\n<p>Get the status of a currently running job. Job status URLs are returned by the <tt><span class=\"pre\">/calculate-intersection</span></tt> and <tt><span class=\"pre\">/calculate-area</span></tt> endpoints.</p>\n<p>HTTP method: <strong>GET</strong></p>\n<div id=\"reponse\">\n<h4><a href=\"#id49\" rel=\"nofollow\">Reponse</a></h4>\n<ul>\n<li>200: Returns a text response giving the current job status. If the job is finished, the response will be <tt>finished</tt>.</li>\n<li>404: The requested job id was not found</li>\n</ul>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2722673, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "c812df142f0cabae522d2ac7f994d85a", "sha256": "d9106bef6dd7f94d5c3172a63a4c3fa53523f7148f7cdd0a4b2c1382c23664aa"}, "downloads": -1, "filename": "pandarus_remote-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c812df142f0cabae522d2ac7f994d85a", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 14922, "upload_time": "2017-03-22T10:14:43", "upload_time_iso_8601": "2017-03-22T10:14:43.720057Z", "url": "https://files.pythonhosted.org/packages/13/44/0a5fdb43ad8eef04e1378ee099371dc1d9b729c371069c3f0ff86080cdc4/pandarus_remote-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9335f9e928b529f2985798c92593a0ea", "sha256": "52e8bd053609e792521ce181855b3acaa26af0c7da1009fc0b5f4a6e8e619661"}, "downloads": -1, "filename": "pandarus_remote-1.0.tar.gz", "has_sig": false, "md5_digest": "9335f9e928b529f2985798c92593a0ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10190, "upload_time": "2017-03-22T10:14:41", "upload_time_iso_8601": "2017-03-22T10:14:41.533280Z", "url": "https://files.pythonhosted.org/packages/0d/3c/266683eeeec27dd0e83b909344926896a643c57281ed3a31cef570dc27d6/pandarus_remote-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c812df142f0cabae522d2ac7f994d85a", "sha256": "d9106bef6dd7f94d5c3172a63a4c3fa53523f7148f7cdd0a4b2c1382c23664aa"}, "downloads": -1, "filename": "pandarus_remote-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c812df142f0cabae522d2ac7f994d85a", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 14922, "upload_time": "2017-03-22T10:14:43", "upload_time_iso_8601": "2017-03-22T10:14:43.720057Z", "url": "https://files.pythonhosted.org/packages/13/44/0a5fdb43ad8eef04e1378ee099371dc1d9b729c371069c3f0ff86080cdc4/pandarus_remote-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9335f9e928b529f2985798c92593a0ea", "sha256": "52e8bd053609e792521ce181855b3acaa26af0c7da1009fc0b5f4a6e8e619661"}, "downloads": -1, "filename": "pandarus_remote-1.0.tar.gz", "has_sig": false, "md5_digest": "9335f9e928b529f2985798c92593a0ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10190, "upload_time": "2017-03-22T10:14:41", "upload_time_iso_8601": "2017-03-22T10:14:41.533280Z", "url": "https://files.pythonhosted.org/packages/0d/3c/266683eeeec27dd0e83b909344926896a643c57281ed3a31cef570dc27d6/pandarus_remote-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:36 2020"}