{"info": {"author": "Luis Zarate Montero", "author_email": "luis.zarate@solvosoft.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Async notifications\n=====================\n\nEmail notification with celery and administrative view for send email with delay e.g daily\n\nFeatures\n---------\n\n- Celery integration\n- Administrative view \n- Enqueued mail system and instantly send\n- Problems notification\n- User filter email\n- Template system with template context\n- Send to User, Group or external email\n- Django cms integration (djcms_async_notifications) and standalone.\n- Custom text area widget support\n- Allow send group mail list if it's defined.\n\n\nInstallation\n=============\n\n#. Install from pip \n\n    .. code:: bash\n    \n        $ pip install async_notifications\n\n#. Add required apps in your settings **\n\n    .. code:: python\n\n        INSTALLED_APPS = [\n            ...\n            'ajax_select',\n            'async_notifications'\n        ]\n\n#. Add ajax_select urls in urls.py\n\n    .. code:: python\n\n        from django.conf.urls import url, include\n        from ajax_select import urls as ajax_select_urls\n        urlpatterns = [\n            ...\n            url(r'^ajax_select/', include(ajax_select_urls)),\n        ]\n   \n#. It's really important set *CELERY_MODULE* pointing to your project celery file, because it's needed for assing task to the current project, and configure some default celery options\n\n    .. code:: python\n\n        # settings.py\n        CELERY_MODULE = \"demo.celery\"\n        CELERY_TIMEZONE = TIME_ZONE\n        CELERY_ACCEPT_CONTENT = ['pickle', 'json']\n        \n\n\n#. Configure your email settings, e.g for development\n\n    .. code:: python\n    \n        DEFAULT_FROM_EMAIL=\"mail@example.com\"\n        EMAIL_HOST=\"localhost\"\n        EMAIL_PORT=\"1025\"\n\n# Copy celery app in your project folder from demo, and adjust the crontab execution\n\n    .. code:: python\n\n        # celery.py\n        app.conf.CELERYBEAT_SCHEDULE = {\n            # execute 12:30 pm\n            'send_daily_emails': {\n                'task': 'async_notifications.tasks.send_daily',\n                'schedule': crontab(minute=30, hour=0),\n\n            },\n        }\n\nRemember use  demo/__init__.py to update your projectfolder/__init__.py.\n\n#. Run migrations \n\n    .. code:: bash\n    \n        $ python manage.py migrate\n\n\nRuning the project\n===================\n\nYou need to run 3 subsystems for run this app so you need 3 xterm, for this explanation I will use the demo project\n\n1. Run smtp debug client\n\n    .. code:: bash\n    \n        $ python -m smtpd -n -c DebuggingServer localhost:1025 \n\n2. Run celery, if you aren't setup celery yet see `celery documentation <http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html>`_.\n\n    .. code:: bash\n\n        $ celery -A demo worker -l info -B\n        \n3. Run django\n\n    .. code:: bash\n    \n        $ python manage.py runserver\n\nUsage\n=========\n\nReport your context template \n\n.. code:: python\n\n    from async_notifications.register import update_template_context\n    context = [\n        ('fieldname', 'Field description'),\n        ('fieldname2', 'Field description'),\n        ...\n    ]\n    update_template_context(\"yourcode\",  'your email subject', context )\n\nThis autom\u00e1tically create a Email template if not found. \n\nContext is list of tuples with the fields available in the template context, this context is add in the same file \nthat have `send_email_from_template`\n\nUsing with django templates \n\n.. code:: python\n\n    update_template_context(\"yourcode\",  'your email subject', context, 'templatepath.html', as_template=True )\n\nSend dict as context is now available, but remember that you can not repit keys in dict so use with precaution.\n\nSend an email :) \n\n.. code:: python\n\n    send_email_from_template(code, recipient,\n                             context={},\n                             enqueued=True,\n                             user=None,\n                             upfile=None)\n\nParams description:\n\n- `recipient` is a list of emails\n- `code` is the same code register in update_template_context\n- `enqueued`  if **False** send the email immediately else enqueued to be sended when send email task run.\n- `user` user how send email\n- `upfile` attached file in email\n\nOther optional options \n========================\n\nAdding context dummy object\n----------------------------\n\nWhen you need to pass a default template message base on template, but you have not the template object\nand also you need to write the object with django template sintaxis you can use DummyContextObject that \nreturn always something like {{ myobj.attr1.objattr }}\n    \n.. code:: python\n\n    from async_notifications.register import update_template_context, DummyContextObject\n    context = [\n        ('myobj', 'Field description'),\n        ...\n    ]\n    message = render_to_string('some/template.html',\n                           context={\n                               'myobj': DummyContextObject('myobj')\n                           }\n                           )\n    update_template_context(\"yourcode\",  'your email subject', context, message=message )\n\n\nDjango cms integration\n-------------------------\n\nThis configuration could help you to integrate with Django CMS.\n\ninclude in your `INSTALLED_APPS`:\n\n.. code:: python\n\n    INSTALLED_APPS = [\n        ...\n      'async_notifications',\n      'async_notifications.djcms_async_notifications',\n    ]\n\nConfigure how models and field async_notifications will use, ej. aldryn_people\n\n.. code:: python\n\n    ASYNC_NOTIFICATION_GROUP = 'aldryn_people.Group'\n    ASYNC_NOTIFICATION_GROUP_LOOKUP_FIELDS = {\n        'order_by': 'translations__name',\n        'email': 'email',\n        'group_lookup': 'translations__name',\n        'display': 'name',\n        'filter': ['translations__name__icontains']}\n\n\n    ASYNC_NOTIFICATION_USER = 'aldryn_people.Person'\n\n    ASYNC_NOTIFICATION_USER_LOOKUP_FIELDS = {\n        'order_by': 'translations__name',\n        'display': 'name',\n        'filter': [\n            'user__first_name__icontains',\n            'user__last_name__icontains',\n            'translations__name__icontains'],\n        'group_lookup': 'groups__translations__name'}\n\n.. note:: Django auth is used by default\n\ncmsplugin-contact-plus\n-------------------------\n\nCONTACT_PLUS_SEND_METHOD = 'async_notifications.djcms_async_notifications.contact_plus.send_email'\nASYNC_NOTIFICATION_CONTACT_PLUS_EMAIL = 'email'\n\n.. note:: \n\n    This requires special cmsplugin-contact-plus version, we send a PRs, but is not merged yet.\n\nDefault text area widget\n--------------------------\n\nFor example using ckeditor widget\n\nASYNC_NOTIFICATION_TEXT_AREA_WIDGET = 'ckeditor.widgets.CKEditorWidget'\n\n.. note:: \n    See how to configure `CKEditor <https://github.com/django-ckeditor/django-ckeditor>`_ .\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/luisza/async_notifications", "keywords": "", "license": "GNU General Public License", "maintainer": "", "maintainer_email": "", "name": "async_notifications", "package_url": "https://pypi.org/project/async_notifications/", "platform": "OS Independent", "project_url": "https://pypi.org/project/async_notifications/", "project_urls": {"Homepage": "https://github.com/luisza/async_notifications"}, "release_url": "https://pypi.org/project/async_notifications/0.1.18/", "requires_dist": null, "requires_python": "", "summary": "Email async notifications with celery.", "version": "0.1.18", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"async-notifications\">\n<h2>Async notifications</h2>\n<p>Email notification with celery and administrative view for send email with delay e.g daily</p>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Celery integration</li>\n<li>Administrative view</li>\n<li>Enqueued mail system and instantly send</li>\n<li>Problems notification</li>\n<li>User filter email</li>\n<li>Template system with template context</li>\n<li>Send to User, Group or external email</li>\n<li>Django cms integration (djcms_async_notifications) and standalone.</li>\n<li>Custom text area widget support</li>\n<li>Allow send group mail list if it\u2019s defined.</li>\n</ul>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>Install from pip</p>\n<blockquote>\n<pre>$ pip install async_notifications\n</pre>\n</blockquote>\n</li>\n<li><p>Add required apps in your settings **</p>\n<blockquote>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'ajax_select'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'async_notifications'</span>\n<span class=\"p\">]</span>\n</pre>\n</blockquote>\n</li>\n<li><p>Add ajax_select urls in urls.py</p>\n<blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.conf.urls</span> <span class=\"kn\">import</span> <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">include</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ajax_select</span> <span class=\"kn\">import</span> <span class=\"n\">urls</span> <span class=\"k\">as</span> <span class=\"n\">ajax_select_urls</span>\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^ajax_select/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"n\">ajax_select_urls</span><span class=\"p\">)),</span>\n<span class=\"p\">]</span>\n</pre>\n</blockquote>\n</li>\n<li><p>It\u2019s really important set <em>CELERY_MODULE</em> pointing to your project celery file, because it\u2019s needed for assing task to the current project, and configure some default celery options</p>\n<blockquote>\n<pre><span class=\"c1\"># settings.py</span>\n<span class=\"n\">CELERY_MODULE</span> <span class=\"o\">=</span> <span class=\"s2\">\"demo.celery\"</span>\n<span class=\"n\">CELERY_TIMEZONE</span> <span class=\"o\">=</span> <span class=\"n\">TIME_ZONE</span>\n<span class=\"n\">CELERY_ACCEPT_CONTENT</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'pickle'</span><span class=\"p\">,</span> <span class=\"s1\">'json'</span><span class=\"p\">]</span>\n</pre>\n</blockquote>\n</li>\n<li><p>Configure your email settings, e.g for development</p>\n<blockquote>\n<pre><span class=\"n\">DEFAULT_FROM_EMAIL</span><span class=\"o\">=</span><span class=\"s2\">\"mail@example.com\"</span>\n<span class=\"n\">EMAIL_HOST</span><span class=\"o\">=</span><span class=\"s2\">\"localhost\"</span>\n<span class=\"n\">EMAIL_PORT</span><span class=\"o\">=</span><span class=\"s2\">\"1025\"</span>\n</pre>\n</blockquote>\n</li>\n</ol>\n<p># Copy celery app in your project folder from demo, and adjust the crontab execution</p>\n<blockquote>\n<pre><span class=\"c1\"># celery.py</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">conf</span><span class=\"o\">.</span><span class=\"n\">CELERYBEAT_SCHEDULE</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># execute 12:30 pm</span>\n    <span class=\"s1\">'send_daily_emails'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'task'</span><span class=\"p\">:</span> <span class=\"s1\">'async_notifications.tasks.send_daily'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'schedule'</span><span class=\"p\">:</span> <span class=\"n\">crontab</span><span class=\"p\">(</span><span class=\"n\">minute</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">),</span>\n\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n</blockquote>\n<p>Remember use  demo/__init__.py to update your projectfolder/__init__.py.</p>\n<ol>\n<li><p>Run migrations</p>\n<blockquote>\n<pre>$ python manage.py migrate\n</pre>\n</blockquote>\n</li>\n</ol>\n</div>\n<div id=\"runing-the-project\">\n<h2>Runing the project</h2>\n<p>You need to run 3 subsystems for run this app so you need 3 xterm, for this explanation I will use the demo project</p>\n<ol>\n<li><p>Run smtp debug client</p>\n<blockquote>\n<pre>$ python -m smtpd -n -c DebuggingServer localhost:1025\n</pre>\n</blockquote>\n</li>\n<li><p>Run celery, if you aren\u2019t setup celery yet see <a href=\"http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html\" rel=\"nofollow\">celery documentation</a>.</p>\n<blockquote>\n<pre>$ celery -A demo worker -l info -B\n</pre>\n</blockquote>\n</li>\n<li><p>Run django</p>\n<blockquote>\n<pre>$ python manage.py runserver\n</pre>\n</blockquote>\n</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Report your context template</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">async_notifications.register</span> <span class=\"kn\">import</span> <span class=\"n\">update_template_context</span>\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"s1\">'fieldname'</span><span class=\"p\">,</span> <span class=\"s1\">'Field description'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">'fieldname2'</span><span class=\"p\">,</span> <span class=\"s1\">'Field description'</span><span class=\"p\">),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n<span class=\"n\">update_template_context</span><span class=\"p\">(</span><span class=\"s2\">\"yourcode\"</span><span class=\"p\">,</span>  <span class=\"s1\">'your email subject'</span><span class=\"p\">,</span> <span class=\"n\">context</span> <span class=\"p\">)</span>\n</pre>\n<p>This autom\u00e1tically create a Email template if not found.</p>\n<p>Context is list of tuples with the fields available in the template context, this context is add in the same file\nthat have <cite>send_email_from_template</cite></p>\n<p>Using with django templates</p>\n<pre><span class=\"n\">update_template_context</span><span class=\"p\">(</span><span class=\"s2\">\"yourcode\"</span><span class=\"p\">,</span>  <span class=\"s1\">'your email subject'</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"s1\">'templatepath.html'</span><span class=\"p\">,</span> <span class=\"n\">as_template</span><span class=\"o\">=</span><span class=\"kc\">True</span> <span class=\"p\">)</span>\n</pre>\n<p>Send dict as context is now available, but remember that you can not repit keys in dict so use with precaution.</p>\n<p>Send an email :)</p>\n<pre><span class=\"n\">send_email_from_template</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">recipient</span><span class=\"p\">,</span>\n                         <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"p\">{},</span>\n                         <span class=\"n\">enqueued</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                         <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                         <span class=\"n\">upfile</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Params description:</p>\n<ul>\n<li><cite>recipient</cite> is a list of emails</li>\n<li><cite>code</cite> is the same code register in update_template_context</li>\n<li><cite>enqueued</cite>  if <strong>False</strong> send the email immediately else enqueued to be sended when send email task run.</li>\n<li><cite>user</cite> user how send email</li>\n<li><cite>upfile</cite> attached file in email</li>\n</ul>\n</div>\n<div id=\"other-optional-options\">\n<h2>Other optional options</h2>\n<div id=\"adding-context-dummy-object\">\n<h3>Adding context dummy object</h3>\n<p>When you need to pass a default template message base on template, but you have not the template object\nand also you need to write the object with django template sintaxis you can use DummyContextObject that\nreturn always something like {{ myobj.attr1.objattr }}</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">async_notifications.register</span> <span class=\"kn\">import</span> <span class=\"n\">update_template_context</span><span class=\"p\">,</span> <span class=\"n\">DummyContextObject</span>\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"s1\">'myobj'</span><span class=\"p\">,</span> <span class=\"s1\">'Field description'</span><span class=\"p\">),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">render_to_string</span><span class=\"p\">(</span><span class=\"s1\">'some/template.html'</span><span class=\"p\">,</span>\n                       <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                           <span class=\"s1\">'myobj'</span><span class=\"p\">:</span> <span class=\"n\">DummyContextObject</span><span class=\"p\">(</span><span class=\"s1\">'myobj'</span><span class=\"p\">)</span>\n                       <span class=\"p\">}</span>\n                       <span class=\"p\">)</span>\n<span class=\"n\">update_template_context</span><span class=\"p\">(</span><span class=\"s2\">\"yourcode\"</span><span class=\"p\">,</span>  <span class=\"s1\">'your email subject'</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">message</span> <span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"django-cms-integration\">\n<h3>Django cms integration</h3>\n<p>This configuration could help you to integrate with Django CMS.</p>\n<p>include in your <cite>INSTALLED_APPS</cite>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n  <span class=\"s1\">'async_notifications'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'async_notifications.djcms_async_notifications'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Configure how models and field async_notifications will use, ej. aldryn_people</p>\n<pre><span class=\"n\">ASYNC_NOTIFICATION_GROUP</span> <span class=\"o\">=</span> <span class=\"s1\">'aldryn_people.Group'</span>\n<span class=\"n\">ASYNC_NOTIFICATION_GROUP_LOOKUP_FIELDS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'order_by'</span><span class=\"p\">:</span> <span class=\"s1\">'translations__name'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"s1\">'email'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'group_lookup'</span><span class=\"p\">:</span> <span class=\"s1\">'translations__name'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'display'</span><span class=\"p\">:</span> <span class=\"s1\">'name'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'filter'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'translations__name__icontains'</span><span class=\"p\">]}</span>\n\n\n<span class=\"n\">ASYNC_NOTIFICATION_USER</span> <span class=\"o\">=</span> <span class=\"s1\">'aldryn_people.Person'</span>\n\n<span class=\"n\">ASYNC_NOTIFICATION_USER_LOOKUP_FIELDS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'order_by'</span><span class=\"p\">:</span> <span class=\"s1\">'translations__name'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'display'</span><span class=\"p\">:</span> <span class=\"s1\">'name'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'filter'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s1\">'user__first_name__icontains'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'user__last_name__icontains'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'translations__name__icontains'</span><span class=\"p\">],</span>\n    <span class=\"s1\">'group_lookup'</span><span class=\"p\">:</span> <span class=\"s1\">'groups__translations__name'</span><span class=\"p\">}</span>\n</pre>\n<div>\n<p>Note</p>\n<p>Django auth is used by default</p>\n</div>\n</div>\n<div id=\"cmsplugin-contact-plus\">\n<h3>cmsplugin-contact-plus</h3>\n<p>CONTACT_PLUS_SEND_METHOD = \u2018async_notifications.djcms_async_notifications.contact_plus.send_email\u2019\nASYNC_NOTIFICATION_CONTACT_PLUS_EMAIL = \u2018email\u2019</p>\n<div>\n<p>Note</p>\n<p>This requires special cmsplugin-contact-plus version, we send a PRs, but is not merged yet.</p>\n</div>\n</div>\n<div id=\"default-text-area-widget\">\n<h3>Default text area widget</h3>\n<p>For example using ckeditor widget</p>\n<p>ASYNC_NOTIFICATION_TEXT_AREA_WIDGET = \u2018ckeditor.widgets.CKEditorWidget\u2019</p>\n<div>\n<p>Note</p>\n<p>See how to configure <a href=\"https://github.com/django-ckeditor/django-ckeditor\" rel=\"nofollow\">CKEditor</a> .</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7107615, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "49120a0e7e453eb821b8b34abef15a7e", "sha256": "f731b2c396f3b39bd1b593584f15e8588918783fca65b0eeea2e1aa80497172d"}, "downloads": -1, "filename": "async_notifications-0.0.1.tar.gz", "has_sig": false, "md5_digest": "49120a0e7e453eb821b8b34abef15a7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13851, "upload_time": "2015-12-21T17:02:03", "upload_time_iso_8601": "2015-12-21T17:02:03.783789Z", "url": "https://files.pythonhosted.org/packages/46/45/1cffa6fe1e8adac66d951afdfa452fcf697e1e726cf635363131733312df/async_notifications-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f306d3a6b0f470f964b5dd6549579b43", "sha256": "c842ad2c766d1539cc5f0a4f7c7889885cbaba7eb1cf8306eafde945f8e50b7c"}, "downloads": -1, "filename": "async_notifications-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f306d3a6b0f470f964b5dd6549579b43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14116, "upload_time": "2016-05-15T02:45:28", "upload_time_iso_8601": "2016-05-15T02:45:28.234284Z", "url": "https://files.pythonhosted.org/packages/a2/77/b0a807a8cc0f8f9e89958e23b9b303d150bb6fefc7a664da5e25fe225e7d/async_notifications-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "10be6eaf483ebcc2310741dbd2e70be2", "sha256": "bce02b033f6309d2286a8883978a2cc2f989d92da555936eb93ef3bae8729d60"}, "downloads": -1, "filename": "async_notifications-0.0.3.tar.gz", "has_sig": false, "md5_digest": "10be6eaf483ebcc2310741dbd2e70be2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14301, "upload_time": "2016-05-15T06:20:18", "upload_time_iso_8601": "2016-05-15T06:20:18.483227Z", "url": "https://files.pythonhosted.org/packages/2b/38/05c8643072f90a29973e1a427b37c3ad1896cc6d9f4998ac9619a69ca37e/async_notifications-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "515465ac0c0e228ebca9705bcaec793d", "sha256": "0386a28e2596a4227bd591146dfb38482ff29cdae3cbe2a93c371702f8f12070"}, "downloads": -1, "filename": "async_notifications-0.0.4.tar.gz", "has_sig": false, "md5_digest": "515465ac0c0e228ebca9705bcaec793d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23966, "upload_time": "2016-09-27T08:48:21", "upload_time_iso_8601": "2016-09-27T08:48:21.485540Z", "url": "https://files.pythonhosted.org/packages/e8/9e/a0cdfb26add6e89120cbca310fe31ff1bbfd5022169d76428d21a1d5f815/async_notifications-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "894f58e46b2cda1c855a25aa3419627a", "sha256": "aa67ed7cdf4321c5486928aecd3760d2fe5fed5ad651ebfd5cf0e142de9ce65c"}, "downloads": -1, "filename": "async_notifications-0.0.5.tar.gz", "has_sig": false, "md5_digest": "894f58e46b2cda1c855a25aa3419627a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23946, "upload_time": "2016-09-28T02:53:10", "upload_time_iso_8601": "2016-09-28T02:53:10.975110Z", "url": "https://files.pythonhosted.org/packages/bd/40/b1a15d2c86c08432cf18e03ba9f1ad014f50a04adfbe1d78a2083589fe72/async_notifications-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "b4751a0518d68db68d46e1e9b212d197", "sha256": "25e2016651972e22fb2079e98925065c789faa3bb6bc8f85716fc6c8b7e0abb3"}, "downloads": -1, "filename": "async_notifications-0.0.6.tar.gz", "has_sig": false, "md5_digest": "b4751a0518d68db68d46e1e9b212d197", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24002, "upload_time": "2016-10-16T05:58:36", "upload_time_iso_8601": "2016-10-16T05:58:36.063388Z", "url": "https://files.pythonhosted.org/packages/02/25/f425d3dfa1013fadd8527a0588e5c76850489de6710690e3deb5e2ae019c/async_notifications-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "755abcf7121b01bf08f7e1aeb9c1ee90", "sha256": "6b4cb40ea30056ddbc7527912bf9850596aae31af27e52891b9385fef7f191b9"}, "downloads": -1, "filename": "async_notifications-0.0.7.tar.gz", "has_sig": false, "md5_digest": "755abcf7121b01bf08f7e1aeb9c1ee90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24042, "upload_time": "2016-10-18T17:07:32", "upload_time_iso_8601": "2016-10-18T17:07:32.895720Z", "url": "https://files.pythonhosted.org/packages/d8/4c/9940374f4aaceedbdbadac627eb5b37a80bf4bfc28dbb3f75a9580aef135/async_notifications-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "78adf306f9da3fbd88e5739e4185c694", "sha256": "dd7ed74f636ad86a4e2e5c331923f4adcd555bb2fa2b040eb2ff6d0a38d3415c"}, "downloads": -1, "filename": "async_notifications-0.0.8.tar.gz", "has_sig": false, "md5_digest": "78adf306f9da3fbd88e5739e4185c694", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23820, "upload_time": "2016-11-10T22:15:00", "upload_time_iso_8601": "2016-11-10T22:15:00.513576Z", "url": "https://files.pythonhosted.org/packages/72/77/ace4dda2883d49e519f436194069e6578c3c3d6b66cce1aa743c7f11a949/async_notifications-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "948f3a415652469ac3f0bd71ed23475f", "sha256": "b770ddcf05903ad661f487908501928a95e04b393189455b72a4860d6732e1cd"}, "downloads": -1, "filename": "async_notifications-0.0.9.tar.gz", "has_sig": false, "md5_digest": "948f3a415652469ac3f0bd71ed23475f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23936, "upload_time": "2016-11-18T07:11:49", "upload_time_iso_8601": "2016-11-18T07:11:49.184577Z", "url": "https://files.pythonhosted.org/packages/c5/97/e3adab03fbadc2bb80028fb4fc38c93fd2853254c3e963a27024709db33a/async_notifications-0.0.9.tar.gz", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "79f1da77ccb828eb505fabd585879c1d", "sha256": "2a1117351ae94f09faf85efdd3b36de7fab6a32b8a6fe50a811947c0a0399505"}, "downloads": -1, "filename": "async_notifications-0.1.tar.gz", "has_sig": false, "md5_digest": "79f1da77ccb828eb505fabd585879c1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24679, "upload_time": "2016-11-18T17:43:58", "upload_time_iso_8601": "2016-11-18T17:43:58.580361Z", "url": "https://files.pythonhosted.org/packages/49/30/cbbb2f6dfd2224e7f345ca7036ff0defa995204b2c7d95f85530864810ae/async_notifications-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b21649b775223c7a17fe94d3021691d9", "sha256": "dfa5d6de4eb1fca28c4ced9c0faeb055be2fc189a6255ff140cb403af3fae5fc"}, "downloads": -1, "filename": "async_notifications-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b21649b775223c7a17fe94d3021691d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26704, "upload_time": "2016-11-18T19:05:17", "upload_time_iso_8601": "2016-11-18T19:05:17.603769Z", "url": "https://files.pythonhosted.org/packages/5b/52/aa96853fb04542564239ba9df08455abc2ca4ad280d81d2f2894f2cc1610/async_notifications-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "6d56d9e748f4596ae1032bce439d28d3", "sha256": "82fdf84c454357feaf424d95daa0badb4ad696105fabca6f1fca434f85213ae8"}, "downloads": -1, "filename": "async_notifications-0.1.10.tar.gz", "has_sig": false, "md5_digest": "6d56d9e748f4596ae1032bce439d28d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26587, "upload_time": "2019-02-06T18:45:29", "upload_time_iso_8601": "2019-02-06T18:45:29.052282Z", "url": "https://files.pythonhosted.org/packages/0e/fc/2c941f5bd865274dfa76fb2834cb690072c3f5dc51b688df2b7f1b730982/async_notifications-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "595eca4f3a3b7feb26d4d67bf410be03", "sha256": "25db36db1ccc086deb5b7503b742f1aaa81486a2bfc923ba72e50ad423898b9b"}, "downloads": -1, "filename": "async_notifications-0.1.11.tar.gz", "has_sig": false, "md5_digest": "595eca4f3a3b7feb26d4d67bf410be03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26727, "upload_time": "2019-10-16T17:07:02", "upload_time_iso_8601": "2019-10-16T17:07:02.346566Z", "url": "https://files.pythonhosted.org/packages/a4/2d/65456dec01d6de0aeaf00ec7a4f69e1167c77d68270f8cfb9a72826f9ec4/async_notifications-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "c21205e60428ff52cb49c2326e78ca56", "sha256": "cf26a0b867cc4c5d373ffac0489afe1a9c2518fff00e1f763e72c6c4b9082d6d"}, "downloads": -1, "filename": "async_notifications-0.1.12.tar.gz", "has_sig": false, "md5_digest": "c21205e60428ff52cb49c2326e78ca56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26968, "upload_time": "2019-10-16T17:17:13", "upload_time_iso_8601": "2019-10-16T17:17:13.441714Z", "url": "https://files.pythonhosted.org/packages/0b/38/6bcb78bdb8313a5b6879523b152f7f04745c67c10dca08a476940615199e/async_notifications-0.1.12.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "2c62cd8d887301a8b14be3fcb2d2488e", "sha256": "8bf212eed4f8c60f2c4cee21371b4812b00249157feb6ce011565c52e8abb3df"}, "downloads": -1, "filename": "async_notifications-0.1.13.tar.gz", "has_sig": false, "md5_digest": "2c62cd8d887301a8b14be3fcb2d2488e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26992, "upload_time": "2019-10-30T20:40:45", "upload_time_iso_8601": "2019-10-30T20:40:45.509266Z", "url": "https://files.pythonhosted.org/packages/7c/ab/14d5383488da4074fce856eb2b070c13fbadf26411d2121305969c3d0385/async_notifications-0.1.13.tar.gz", "yanked": false}], "0.1.14": [{"comment_text": "", "digests": {"md5": "1251198c3ba4388041478b7c9ff1ecef", "sha256": "118353b7bd269121140721318a07ea4e4b981fcdca0a4c83a27f692a430565a1"}, "downloads": -1, "filename": "async_notifications-0.1.14.tar.gz", "has_sig": false, "md5_digest": "1251198c3ba4388041478b7c9ff1ecef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27789, "upload_time": "2020-02-29T06:24:26", "upload_time_iso_8601": "2020-02-29T06:24:26.031454Z", "url": "https://files.pythonhosted.org/packages/fe/34/866701ee8849f1527ebc4b1d5142e4e7f1f585d38d32862b555f4f918e28/async_notifications-0.1.14.tar.gz", "yanked": false}], "0.1.15": [{"comment_text": "", "digests": {"md5": "d328a8b3759c99824cda582911220bce", "sha256": "45c5107bfe1a14ec0d960a966fe92b66aa5c6c5b72148f30d545f9ffcf693e2d"}, "downloads": -1, "filename": "async_notifications-0.1.15.tar.gz", "has_sig": false, "md5_digest": "d328a8b3759c99824cda582911220bce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27852, "upload_time": "2020-02-29T17:53:16", "upload_time_iso_8601": "2020-02-29T17:53:16.846539Z", "url": "https://files.pythonhosted.org/packages/5a/77/0cac6bd5d4fc790ebd2786ef3511faf6cd75e3a06913dcb9bdfeb462d406/async_notifications-0.1.15.tar.gz", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "3f2bde0c3d8e7d4e3b7d52b104ec8764", "sha256": "de1be2145fa00f07f649663b257307755133738cf72a9b2db70a3f3a23909da6"}, "downloads": -1, "filename": "async_notifications-0.1.16.tar.gz", "has_sig": false, "md5_digest": "3f2bde0c3d8e7d4e3b7d52b104ec8764", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27858, "upload_time": "2020-03-02T02:01:21", "upload_time_iso_8601": "2020-03-02T02:01:21.498786Z", "url": "https://files.pythonhosted.org/packages/0e/c1/60ed24cfe128901e62dda0cf89501db0ca50d6c5670ae1ecba4b5ef92c77/async_notifications-0.1.16.tar.gz", "yanked": false}], "0.1.17": [{"comment_text": "", "digests": {"md5": "550700982f960a8066bf275d41e150a5", "sha256": "3b17350b9d0dd1c31bf8a6b912c542f583309500227f74b1b82ec7cbfa153715"}, "downloads": -1, "filename": "async_notifications-0.1.17.tar.gz", "has_sig": false, "md5_digest": "550700982f960a8066bf275d41e150a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27919, "upload_time": "2020-03-05T16:58:14", "upload_time_iso_8601": "2020-03-05T16:58:14.981204Z", "url": "https://files.pythonhosted.org/packages/96/a8/e48b6c32d86e6163d9928e660df5e67e72ba08f5b27fc98aa0cb41871f76/async_notifications-0.1.17.tar.gz", "yanked": false}], "0.1.18": [{"comment_text": "", "digests": {"md5": "33b503b4b4a605fc57f54a17ab1f7ef8", "sha256": "8d36ab64a744bd3bf295cdc167b1a1103a3a0ff34cd3c2f9c412f13b59b72e99"}, "downloads": -1, "filename": "async_notifications-0.1.18.tar.gz", "has_sig": false, "md5_digest": "33b503b4b4a605fc57f54a17ab1f7ef8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28047, "upload_time": "2020-04-26T23:22:39", "upload_time_iso_8601": "2020-04-26T23:22:39.979669Z", "url": "https://files.pythonhosted.org/packages/81/e2/6340cce8281bfe936f61a06853a29878c0252c1e06df4d5d6d2b555a0f32/async_notifications-0.1.18.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ea31f10a3ee47e575196b04f99bc1929", "sha256": "121a223c0e852cf35d290461235c96009f1c3196a78faafdd0a7cae6bcad114e"}, "downloads": -1, "filename": "async_notifications-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ea31f10a3ee47e575196b04f99bc1929", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26725, "upload_time": "2017-01-29T21:39:44", "upload_time_iso_8601": "2017-01-29T21:39:44.248395Z", "url": "https://files.pythonhosted.org/packages/6f/23/52f68fed1cd86d67ee55708ff070078705af6415a92d1bef38eb2357e5aa/async_notifications-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "56b046c8c0b86383604a7d66d832aedd", "sha256": "34e065e08224e1b47a20406f9ce67e6963d6268d0efb5c847b85df02d2298865"}, "downloads": -1, "filename": "async_notifications-0.1.3.tar.gz", "has_sig": false, "md5_digest": "56b046c8c0b86383604a7d66d832aedd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26950, "upload_time": "2017-05-26T00:04:22", "upload_time_iso_8601": "2017-05-26T00:04:22.834650Z", "url": "https://files.pythonhosted.org/packages/09/27/ee7da7ab5042d39a07b3185bdf4a101e7661cebb4e090b4f5067601bc65b/async_notifications-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "fa722a5671d99c914aca008d5066ccc4", "sha256": "f87ed3c32d8e865a95c428627e687e38db32ebd573ca2a91afd6c2002c6adb86"}, "downloads": -1, "filename": "async_notifications-0.1.4.tar.gz", "has_sig": false, "md5_digest": "fa722a5671d99c914aca008d5066ccc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26967, "upload_time": "2017-06-30T14:07:42", "upload_time_iso_8601": "2017-06-30T14:07:42.199644Z", "url": "https://files.pythonhosted.org/packages/bc/8e/1ca16c2a5835ea48f3a81ea530fa2c2af3e1102a8b85cd4919bf3325390f/async_notifications-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "dec0eb797837ca006e98704e9623c3e6", "sha256": "efb853b780c2b5abdd5eb993c407e59411d24315d819a89f7473af21ec91824f"}, "downloads": -1, "filename": "async_notifications-0.1.5.tar.gz", "has_sig": false, "md5_digest": "dec0eb797837ca006e98704e9623c3e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26963, "upload_time": "2017-07-08T07:27:55", "upload_time_iso_8601": "2017-07-08T07:27:55.336945Z", "url": "https://files.pythonhosted.org/packages/d5/e0/be7f75c857e658fba9c5d469aa1da97c7ce777e5c0fae6fee6bffd2001d7/async_notifications-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "b14a7a194eeded8ef2fbd91ce0ceadec", "sha256": "443fcdb0327f7b01af0c9d879dff565eebf64db6de63bc8db6e8dadb027d48f2"}, "downloads": -1, "filename": "async_notifications-0.1.6.tar.gz", "has_sig": false, "md5_digest": "b14a7a194eeded8ef2fbd91ce0ceadec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25542, "upload_time": "2018-07-01T04:56:37", "upload_time_iso_8601": "2018-07-01T04:56:37.347022Z", "url": "https://files.pythonhosted.org/packages/f2/fd/8443ec30c5fa810209fabf9c515de92cbd6ba1af69f85ba4a501aed6271f/async_notifications-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "2353f419dc5029a6ee7b6c3123d15628", "sha256": "db9702d3b5145d6fb3a8fa822bebee07f4c90262c60e9057471c3889d1a7ef74"}, "downloads": -1, "filename": "async_notifications-0.1.7.tar.gz", "has_sig": false, "md5_digest": "2353f419dc5029a6ee7b6c3123d15628", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25543, "upload_time": "2018-07-01T05:12:01", "upload_time_iso_8601": "2018-07-01T05:12:01.435008Z", "url": "https://files.pythonhosted.org/packages/04/6d/6fc40a0564acbefddba4b122b21029821267ad9345bb44361eb483073913/async_notifications-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "d88cddb3a945405e6e80eb3ee7a1bce7", "sha256": "41f52eb37e230bf5f623b10cc433434ac07f0eac67aafa7dc59c62f58c57b8c4"}, "downloads": -1, "filename": "async_notifications-0.1.8.tar.gz", "has_sig": false, "md5_digest": "d88cddb3a945405e6e80eb3ee7a1bce7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27552, "upload_time": "2018-07-01T05:58:10", "upload_time_iso_8601": "2018-07-01T05:58:10.107714Z", "url": "https://files.pythonhosted.org/packages/21/cf/a4bf39be51dd571f8be16952e5e1838897339af016f1efa3c2eddbb96ae5/async_notifications-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "35fa6645bb73b41a0444b6fd5d087c06", "sha256": "0a3b4251e53a09c8455c2c49abeedcaf8a05a352c6f17bd5e6b9461831ca3215"}, "downloads": -1, "filename": "async_notifications-0.1.9.tar.gz", "has_sig": false, "md5_digest": "35fa6645bb73b41a0444b6fd5d087c06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26639, "upload_time": "2019-02-06T01:37:22", "upload_time_iso_8601": "2019-02-06T01:37:22.239280Z", "url": "https://files.pythonhosted.org/packages/85/ba/6bb6d45602ce923fdbc7633c153fdebcffcd01e9b5c520c89563bd31917e/async_notifications-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "33b503b4b4a605fc57f54a17ab1f7ef8", "sha256": "8d36ab64a744bd3bf295cdc167b1a1103a3a0ff34cd3c2f9c412f13b59b72e99"}, "downloads": -1, "filename": "async_notifications-0.1.18.tar.gz", "has_sig": false, "md5_digest": "33b503b4b4a605fc57f54a17ab1f7ef8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28047, "upload_time": "2020-04-26T23:22:39", "upload_time_iso_8601": "2020-04-26T23:22:39.979669Z", "url": "https://files.pythonhosted.org/packages/81/e2/6340cce8281bfe936f61a06853a29878c0252c1e06df4d5d6d2b555a0f32/async_notifications-0.1.18.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:42 2020"}