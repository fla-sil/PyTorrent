{"info": {"author": "Timothy D. Morton", "author_email": "tim.morton@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Astronomy"], "description": "orbitutils\n==========\nThis package allows for easy and very quick Monte Carlo simulation of populations of orbits, giving instantly distributions of projected separations, relative RVs between components, etc.  Includes calculations for eccentric orbits.  Handy for simulating imaging or RV observations.  This code is one of the modules that makes up the `Morton (2012) <http://adsabs.harvard.edu/abs/2012ApJ...761....6M>`_ validation procedure.\n\nMakes occasional use of the `astropy <www.astropy.org>`_ ``Quantity`` object to keep track of some quantities, and the astropy ``SkyCoord`` object to keep track of coordinates.  Also uses `pandas <pandas.pydata.org>`_ to save/restore populations.\n\n\nSee below for a quick intro, and the `notebook demo <http://nbviewer.ipython.org/github/timothydmorton/orbitutils/blob/master/notebooks/demo.ipynb>`_ for more.\n\nInstallation\n------------\n\n::\n\n   $ pip install [--user] orbitutils\n   \nOr clone the repository and install::\n\n    $ git clone https://github.com/timothydmorton/orbitutils.git\n    $ cd orbitutils\n    $ python setup.py install [--user]\n\nBasic usage\n-----------\n\nSimulate a population for given primary and secondary mass(es), and orbital periods.  Eccentricity is zero by default, but can be set.\n\n.. code-block:: python\n\n    from orbitutils import OrbitPopulation\n    pop = OrbitPopulation(1,1,1000,n=1e4) #Primary mass, secondary mass, orbital period (d)\n\nYou can also create a distribution of secondary masses, and/or a distribution of periods:\n\n.. code-block:: python\n\n    import numpy as np\n    from orbitutils import OrbitPopulation\n    N=1e4\n    M2s = np.linspace(0.1,1,N)\n    Ps = np.logspace(1,3,N) #periods evenly log-spaced from 10 to 1000 days\n    pop = OrbitPopulation(1,M2s,Ps)\n\n``OrbitPopulation`` objects can be saved using the ``save_hdf`` method:\n\n.. code-block:: python\n\n    pop.save_hdf('mypop.h5')\n\nand then read back in/restored as follows:\n\n.. code-block:: python\n\n    from orbitutils import OrbitPopulation_FromH5\n    pop_again = OrbitPopulation_FromH5('mypop.h5')\n\nAttribution\n-----------\nIf you use this software for your research, please let me know.  Eventually there will be a more current publication to cite; until then, please cite my 2012 planet validation method paper which used this code::\n\n   @ARTICLE{2012ApJ...761....6M,\n      author = {{Morton}, T.~D.},\n       title = \"{An Efficient Automated Validation Procedure for Exoplanet Transit Candidates}\",\n     journal = {\\apj},\n   archivePrefix = \"arXiv\",\n      eprint = {1206.1568},\n    primaryClass = \"astro-ph.EP\",\n    keywords = {planetary systems, stars: statistics },\n        year = 2012,\n       month = dec,\n      volume = 761,\n         eid = {6},\n       pages = {6},\n         doi = {10.1088/0004-637X/761/1/6},\n      adsurl = {http://adsabs.harvard.edu/abs/2012ApJ...761....6M},\n     adsnote = {Provided by the SAO/NASA Astrophysics Data System}\n   }", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/timothydmorton/orbitutils", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "orbitutils", "package_url": "https://pypi.org/project/orbitutils/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/orbitutils/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/timothydmorton/orbitutils"}, "release_url": "https://pypi.org/project/orbitutils/0.1.5/", "requires_dist": null, "requires_python": null, "summary": "Easily make Monte Carlo simulations of binary or triple orbits.", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package allows for easy and very quick Monte Carlo simulation of populations of orbits, giving instantly distributions of projected separations, relative RVs between components, etc.  Includes calculations for eccentric orbits.  Handy for simulating imaging or RV observations.  This code is one of the modules that makes up the <a href=\"http://adsabs.harvard.edu/abs/2012ApJ...761....6M\" rel=\"nofollow\">Morton (2012)</a> validation procedure.</p>\n<p>Makes occasional use of the <a href=\"www.astropy.org\" rel=\"nofollow\">astropy</a> <tt>Quantity</tt> object to keep track of some quantities, and the astropy <tt>SkyCoord</tt> object to keep track of coordinates.  Also uses <a href=\"pandas.pydata.org\" rel=\"nofollow\">pandas</a> to save/restore populations.</p>\n<p>See below for a quick intro, and the <a href=\"http://nbviewer.ipython.org/github/timothydmorton/orbitutils/blob/master/notebooks/demo.ipynb\" rel=\"nofollow\">notebook demo</a> for more.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install [--user] orbitutils\n</pre>\n<p>Or clone the repository and install:</p>\n<pre>$ git clone https://github.com/timothydmorton/orbitutils.git\n$ cd orbitutils\n$ python setup.py install [--user]\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<p>Simulate a population for given primary and secondary mass(es), and orbital periods.  Eccentricity is zero by default, but can be set.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">orbitutils</span> <span class=\"kn\">import</span> <span class=\"n\">OrbitPopulation</span>\n<span class=\"n\">pop</span> <span class=\"o\">=</span> <span class=\"n\">OrbitPopulation</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1000</span><span class=\"p\">,</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mf\">1e4</span><span class=\"p\">)</span> <span class=\"c1\">#Primary mass, secondary mass, orbital period (d)</span>\n</pre>\n<p>You can also create a distribution of secondary masses, and/or a distribution of periods:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">orbitutils</span> <span class=\"kn\">import</span> <span class=\"n\">OrbitPopulation</span>\n<span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mf\">1e4</span>\n<span class=\"n\">M2s</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">N</span><span class=\"p\">)</span>\n<span class=\"n\">Ps</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">logspace</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"n\">N</span><span class=\"p\">)</span> <span class=\"c1\">#periods evenly log-spaced from 10 to 1000 days</span>\n<span class=\"n\">pop</span> <span class=\"o\">=</span> <span class=\"n\">OrbitPopulation</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">M2s</span><span class=\"p\">,</span><span class=\"n\">Ps</span><span class=\"p\">)</span>\n</pre>\n<p><tt>OrbitPopulation</tt> objects can be saved using the <tt>save_hdf</tt> method:</p>\n<pre><span class=\"n\">pop</span><span class=\"o\">.</span><span class=\"n\">save_hdf</span><span class=\"p\">(</span><span class=\"s1\">'mypop.h5'</span><span class=\"p\">)</span>\n</pre>\n<p>and then read back in/restored as follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">orbitutils</span> <span class=\"kn\">import</span> <span class=\"n\">OrbitPopulation_FromH5</span>\n<span class=\"n\">pop_again</span> <span class=\"o\">=</span> <span class=\"n\">OrbitPopulation_FromH5</span><span class=\"p\">(</span><span class=\"s1\">'mypop.h5'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"attribution\">\n<h2>Attribution</h2>\n<p>If you use this software for your research, please let me know.  Eventually there will be a more current publication to cite; until then, please cite my 2012 planet validation method paper which used this code:</p>\n<pre>@ARTICLE{2012ApJ...761....6M,\n   author = {{Morton}, T.~D.},\n    title = \"{An Efficient Automated Validation Procedure for Exoplanet Transit Candidates}\",\n  journal = {\\apj},\narchivePrefix = \"arXiv\",\n   eprint = {1206.1568},\n primaryClass = \"astro-ph.EP\",\n keywords = {planetary systems, stars: statistics },\n     year = 2012,\n    month = dec,\n   volume = 761,\n      eid = {6},\n    pages = {6},\n      doi = {10.1088/0004-637X/761/1/6},\n   adsurl = {http://adsabs.harvard.edu/abs/2012ApJ...761....6M},\n  adsnote = {Provided by the SAO/NASA Astrophysics Data System}\n}\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1448669, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "afc56ef4cc80163668f13fc215a98b0a", "sha256": "bdb8dd6661288632896043e4919e36b0a39feed61953159822d8e43cb2b68336"}, "downloads": -1, "filename": "orbitutils-0.1.tar.gz", "has_sig": false, "md5_digest": "afc56ef4cc80163668f13fc215a98b0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 733790, "upload_time": "2014-10-30T05:57:18", "upload_time_iso_8601": "2014-10-30T05:57:18.269603Z", "url": "https://files.pythonhosted.org/packages/10/a7/a73b1ea00a1ac1772a0c414c5b518888d758db9472fef5f24efccdbae608/orbitutils-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "0ef097576a987f4e90e8f773c2567859", "sha256": "44656de8e23d56a537212af0689c754a07dcf4cbb0e80d0f7be13f639f7cf066"}, "downloads": -1, "filename": "orbitutils-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0ef097576a987f4e90e8f773c2567859", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 734596, "upload_time": "2014-10-30T06:33:32", "upload_time_iso_8601": "2014-10-30T06:33:32.218517Z", "url": "https://files.pythonhosted.org/packages/b8/a9/86deee5b9a32819334956431fbd79176d130c20532c1589fd4788778c98b/orbitutils-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e4717bf78af7df384efccc56049c5d4e", "sha256": "21dcfa6288e56feea95e296db53a5c0141608543f8c76c5232e5f098f55a5b4d"}, "downloads": -1, "filename": "orbitutils-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e4717bf78af7df384efccc56049c5d4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 735281, "upload_time": "2014-11-05T15:10:58", "upload_time_iso_8601": "2014-11-05T15:10:58.287984Z", "url": "https://files.pythonhosted.org/packages/29/b7/a269febe812881586e280154bde90ddfc98b2f8f2f3b36e2f7570b410ea6/orbitutils-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "481339435253ed57fb10ca65f59291c1", "sha256": "74574afd39b9b0709ef2729c8b06eb04e5fe5ec81c63c70a4615255ab32038d8"}, "downloads": -1, "filename": "orbitutils-0.1.3.tar.gz", "has_sig": false, "md5_digest": "481339435253ed57fb10ca65f59291c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 734796, "upload_time": "2014-11-06T20:38:23", "upload_time_iso_8601": "2014-11-06T20:38:23.469106Z", "url": "https://files.pythonhosted.org/packages/c7/01/e607511ff3f6e404a1b358ffc73dc20885f943afce789ada85fdfdf7640c/orbitutils-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "411e206ec8938c8888741c576ced6fa3", "sha256": "d72d94c9ffa9c4f3667f4baeb487c110631e58d6999843f4f90055313031833c"}, "downloads": -1, "filename": "orbitutils-0.1.4.tar.gz", "has_sig": false, "md5_digest": "411e206ec8938c8888741c576ced6fa3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 735451, "upload_time": "2015-02-18T15:06:45", "upload_time_iso_8601": "2015-02-18T15:06:45.711688Z", "url": "https://files.pythonhosted.org/packages/4a/1f/0a4c39bf30992a90c7996903c40c495ae8cae42a930f64a9cf186b5da26e/orbitutils-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "176a2ad1fcd651154e85ae731e5c1712", "sha256": "cc15febffeaf3ffa178811e6c6e7f9c8a33ddedb20981f9339d32fd008ef2741"}, "downloads": -1, "filename": "orbitutils-0.1.5.tar.gz", "has_sig": false, "md5_digest": "176a2ad1fcd651154e85ae731e5c1712", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 735439, "upload_time": "2015-03-05T02:30:27", "upload_time_iso_8601": "2015-03-05T02:30:27.965897Z", "url": "https://files.pythonhosted.org/packages/53/bb/d22db20c8c9fd5e2625cd0219572465f82d2d806b750a5ad12b3ad508675/orbitutils-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "176a2ad1fcd651154e85ae731e5c1712", "sha256": "cc15febffeaf3ffa178811e6c6e7f9c8a33ddedb20981f9339d32fd008ef2741"}, "downloads": -1, "filename": "orbitutils-0.1.5.tar.gz", "has_sig": false, "md5_digest": "176a2ad1fcd651154e85ae731e5c1712", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 735439, "upload_time": "2015-03-05T02:30:27", "upload_time_iso_8601": "2015-03-05T02:30:27.965897Z", "url": "https://files.pythonhosted.org/packages/53/bb/d22db20c8c9fd5e2625cd0219572465f82d2d806b750a5ad12b3ad508675/orbitutils-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:45 2020"}