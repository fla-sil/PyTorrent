{"info": {"author": "Zonar Systems - Data Services Pod", "author_email": "DSPod@zonarsystems.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "zonar_ds_env_arg_parser\n======\n\nOverview\n------\nThis is a simple helper that is meant to enforce and validate that environment variables are set correctly\n\nUsage\n------\n```python3\nfrom zonar_ds_env_arg_parser.env_arg_parser import env_arg_parser as parser\n\nparser.add_argument(env_var=\"SOME_EVN_VAR\",\n                    required=True,\n                    type=int,\n                    help=\"Message to display about the variable\")\n\nparser.add_argument(env_var=\"SOMETHING_ELSE\",\n                    required=False,\n                    default=\"TEST\",\n                    validation=lambda x: x.lower() == \"test\" or\n                                         x.lower() == \"something\" or\n                                         x.lower() == \"something_else\",\n                    help=\"Some message about this variable\")\n\nparser.add_argument(env_var=\"TRUE\",\n                    required=False,\n                    default=\"True\",\n                    type=bool,  # Will convert (\"yes\", \"true\", \"t\", \"1\", \"y\", \"yeah\") to True\n                    help=\"Another description about converting to True\")\n\nparser.initialize()\noptions = parser.get_options()\n\n# This var doesn't have a default so 'SOME_EVN_VAR' needs to be set or it'll throw an exception\nprint(\"This is the type of SOME_EVN_VAR \" + type(options.SOME_EVN_VAR))  # Should be int becasue we specified type\nprint(\"This is the value of SOMETHING_ELSE \" + options.ENVIRONMENT)  # Should be 'TEST' since that's the default\nprint(\"This is the value of TRUE \" + options.TRUE)  # Should be 'TEST' since that's the default\n```\n\nArguments\n------\nParameters that can be passed into env_arg_parser.add_argument are as follows:\n\n| param | required | Description |\n|-------|----------|-------------|\n| env_var | Yes | The environment variable to look for. This will also be the name of the attribute when retrieving it. |\n| required | Yes | Can be True or False, if required=False a default must be provided. |\n| help | Yes | This message is displayed if an argument doesnt exist or fails validation. It should explain to the user what the argument is for to assist them in defining it. |\n| default | Conditional | The default value. Must be set if required=False, cannot be set if required=True. |\n| validation | No | A function should be provided that takes a single value and should return True, False or raise an Exception. False or an exception will prevent the program from launching. |\n| type | No | If the value needs to be something other than a string, specify what it should be converted to.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/evcallia/zonar_ds_env_arg_parser.git", "keywords": "zonar_ds_env_arg_parser", "license": "", "maintainer": "", "maintainer_email": "", "name": "zonar-ds-env-arg-parser", "package_url": "https://pypi.org/project/zonar-ds-env-arg-parser/", "platform": "", "project_url": "https://pypi.org/project/zonar-ds-env-arg-parser/", "project_urls": {"Homepage": "https://github.com/evcallia/zonar_ds_env_arg_parser.git"}, "release_url": "https://pypi.org/project/zonar-ds-env-arg-parser/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "An argument helper used to validate environment variables", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            zonar_ds_env_arg_parser<br>======<br><br>Overview<br>------<br>This is a simple helper that is meant to enforce and validate that environment variables are set correctly<br><br>Usage<br>------<br>```python3<br>from zonar_ds_env_arg_parser.env_arg_parser import env_arg_parser as parser<br><br>parser.add_argument(env_var=\"SOME_EVN_VAR\",<br>                    required=True,<br>                    type=int,<br>                    help=\"Message to display about the variable\")<br><br>parser.add_argument(env_var=\"SOMETHING_ELSE\",<br>                    required=False,<br>                    default=\"TEST\",<br>                    validation=lambda x: x.lower() == \"test\" or<br>                                         x.lower() == \"something\" or<br>                                         x.lower() == \"something_else\",<br>                    help=\"Some message about this variable\")<br><br>parser.add_argument(env_var=\"TRUE\",<br>                    required=False,<br>                    default=\"True\",<br>                    type=bool,  # Will convert (\"yes\", \"true\", \"t\", \"1\", \"y\", \"yeah\") to True<br>                    help=\"Another description about converting to True\")<br><br>parser.initialize()<br>options = parser.get_options()<br><br># This var doesn't have a default so 'SOME_EVN_VAR' needs to be set or it'll throw an exception<br>print(\"This is the type of SOME_EVN_VAR \" + type(options.SOME_EVN_VAR))  # Should be int becasue we specified type<br>print(\"This is the value of SOMETHING_ELSE \" + options.ENVIRONMENT)  # Should be 'TEST' since that's the default<br>print(\"This is the value of TRUE \" + options.TRUE)  # Should be 'TEST' since that's the default<br>```<br><br>Arguments<br>------<br>Parameters that can be passed into env_arg_parser.add_argument are as follows:<br><br>| param | required | Description |<br>|-------|----------|-------------|<br>| env_var | Yes | The environment variable to look for. This will also be the name of the attribute when retrieving it. |<br>| required | Yes | Can be True or False, if required=False a default must be provided. |<br>| help | Yes | This message is displayed if an argument doesnt exist or fails validation. It should explain to the user what the argument is for to assist them in defining it. |<br>| default | Conditional | The default value. Must be set if required=False, cannot be set if required=True. |<br>| validation | No | A function should be provided that takes a single value and should return True, False or raise an Exception. False or an exception will prevent the program from launching. |<br>| type | No | If the value needs to be something other than a string, specify what it should be converted to.<br><br><br>\n          </div>"}, "last_serial": 5101193, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "576515f0645c3833e59804acd275cf20", "sha256": "a93131aa8948068213c50e0f85ef4254865b1096cc0405a0a85211850b519ffa"}, "downloads": -1, "filename": "zonar_ds_env_arg_parser-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "576515f0645c3833e59804acd275cf20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5562, "upload_time": "2019-04-04T21:24:43", "upload_time_iso_8601": "2019-04-04T21:24:43.974612Z", "url": "https://files.pythonhosted.org/packages/d6/fe/685586a49c17007a46bac180c64c5ade29015bba694023e587b93585f475/zonar_ds_env_arg_parser-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f00e3ecf7286b612d7d6fac2b5b56ba9", "sha256": "3ecfbc3842d3dc2c366cdedef10d2e539aae3fd417e44ff20580255d837ddc70"}, "downloads": -1, "filename": "zonar_ds_env_arg_parser-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f00e3ecf7286b612d7d6fac2b5b56ba9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3819, "upload_time": "2019-04-04T21:24:45", "upload_time_iso_8601": "2019-04-04T21:24:45.970843Z", "url": "https://files.pythonhosted.org/packages/66/f7/3800acc6a0bd8b6779274f6de6af6d23262fc56bd276aa1e0c5e5b5b91b9/zonar_ds_env_arg_parser-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "2f09c47e0baf9db9338a4492901c4206", "sha256": "f0f9fff3c69fcb1d911e62408be1b84487a0ec7628db419128c8360882ce2d2a"}, "downloads": -1, "filename": "zonar_ds_env_arg_parser-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2f09c47e0baf9db9338a4492901c4206", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5704, "upload_time": "2019-04-04T22:22:48", "upload_time_iso_8601": "2019-04-04T22:22:48.678032Z", "url": "https://files.pythonhosted.org/packages/8a/7d/12adc0b479322444621d8890a409d51e06d09d37c10fd5f017a37b0caac5/zonar_ds_env_arg_parser-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ceb7f95de8d0e65922e70ed5ee8c6ec", "sha256": "a2e9c1b56a181739d30d7672aed38b400005ca19370152ac183efa3041024cd6"}, "downloads": -1, "filename": "zonar_ds_env_arg_parser-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3ceb7f95de8d0e65922e70ed5ee8c6ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3986, "upload_time": "2019-04-04T22:22:50", "upload_time_iso_8601": "2019-04-04T22:22:50.890628Z", "url": "https://files.pythonhosted.org/packages/26/88/1f2f8a5c94cf5be0b11b550f22697a94551fe59297b58c2fc305032cd4ef/zonar_ds_env_arg_parser-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2f09c47e0baf9db9338a4492901c4206", "sha256": "f0f9fff3c69fcb1d911e62408be1b84487a0ec7628db419128c8360882ce2d2a"}, "downloads": -1, "filename": "zonar_ds_env_arg_parser-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2f09c47e0baf9db9338a4492901c4206", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5704, "upload_time": "2019-04-04T22:22:48", "upload_time_iso_8601": "2019-04-04T22:22:48.678032Z", "url": "https://files.pythonhosted.org/packages/8a/7d/12adc0b479322444621d8890a409d51e06d09d37c10fd5f017a37b0caac5/zonar_ds_env_arg_parser-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ceb7f95de8d0e65922e70ed5ee8c6ec", "sha256": "a2e9c1b56a181739d30d7672aed38b400005ca19370152ac183efa3041024cd6"}, "downloads": -1, "filename": "zonar_ds_env_arg_parser-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3ceb7f95de8d0e65922e70ed5ee8c6ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3986, "upload_time": "2019-04-04T22:22:50", "upload_time_iso_8601": "2019-04-04T22:22:50.890628Z", "url": "https://files.pythonhosted.org/packages/26/88/1f2f8a5c94cf5be0b11b550f22697a94551fe59297b58c2fc305032cd4ef/zonar_ds_env_arg_parser-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:58 2020"}